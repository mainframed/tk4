//SYSTGTFA JOB (9029,270),TAUCHNITZ
//GTFTRACE EXEC ATASMHCL
//C.SYSLIB DD  DSN=SYS1.MACLIB,DISP=SHR
//         DD  DSN=SYS1.MACLIB,DISP=SHR
//         DD  DSN=SYS1.AMODGEN,DISP=SHR,VOL=SER=DLIB01,UNIT=3330
//C.SYSIN  DD  *
GTFTRAZE TITLE 'SVC''S 06,07,08 NACH HAEUFIGKEIT DER MODULNAMEN, EXCP''*
               S UND -ZEITEN JE EINHEIT'
***********************************************************************
*                                                                     *
*                                                                     *
********************  G  T  F  T  R  A  Z  E  *************************
*                                                                     *
*                                                                     *
* DIESES PROGRAMM 'GTFTRAZE' BASIERT AUF DER IDEE DES 'GTFTRC' VON    *
* W. PENNINGTON. DIESES KONNTE ALLERDINGS NUR DIE SVC'S 6,7 + 8 AUS-  *
* WERTEN. DAS HIER VORLIEGENDE 'GTFTRAZE' ERMITTELT DARUEBERHINAUS    *
* DIE DIFFERENZ-ZEIT ZWISCHEN SIO UND I/O-INTERRUPT FUER EINE EINHEIT.*
* DIESE ZEITEN WEREDN AUFSUMMIERT UND EREGBEN AM ENDE EINE DURCH-     *
* SCHNITTSZEIT JE EINHEIT. DEVICEGRUPPEN KOENNEN AUCH GEMITTELT       *
* WERDEN, ZB *TAPPEN* ODER *DISKEN*. ZUGUTERLETZT WERDEN NOCH DIE     *
* TYPEN DER EINGELESENEN GTF-SAETZE AUFGEZAEHLT. NACH DEN BEKANNTEN   *
* KRITERIEN NICHT ZUORDNUNGSFAEHIGE SAETZE WERDEN UEBER SYSUT2 ALS    *
* 'FALSCHE SAETZE' WIEDER AUSGEGEBEN.                                 *
*                                                                     *
* PROGRAMMIERT UND GETESTET VON A.H.TAUCHNITZ, EINGESETZT IM MAERZ 74 *
* BEI DER ETERNIT AG BERLIN.                                          *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
         MACRO
&NAME    CONSOR &FELD,&LNG
         GBLB  &PRO,&I
         LCLA  &L2
         LCLC  &LTYP
         AIF   (&PRO).OK
         MNOTE *,'OHNE PROGR KANN CONSOR NICHT GENERIERT WERDEN.'
         MEXIT
.OK      ANOP
         AIF   (&I).M1
&NAME    B     WTOZZZZZ
         CNOP  0,4
WTOXXXXX DS    F
         ST    R14,0(R15)
         CNOP  0,4
         BAL   R1,122(R15) ;      BRANCH AROUND MESSAGE
         DC    AL2(109) ;         MESSAGE LENGTH
         DC    X'0000' ;          MCSFLAGS FIELD
         DC    CL105' ' ;         MESSAGE
         DS    0H
         SVC   35 ;               ISSUE WTO-SVC
         CNOP  2,4
         BALR  R15,R0
         B     8(R15)
         DC    A(WTOXXXXX)
         L     R14,4(R15)
         L     R14,0(R14)
         BR    R14
WTOZZZZZ EQU   *
.M1      ANOP
&LTYP    SETC  'L'''
         AIF   ('&LNG' EQ '').M2
&L2      SETA  &LNG+4
         AGO   .M3
.M2      ANOP
&L2      SETA  L'&FELD
&L2      SETA  &L2+4
.M3      ANOP
         AIF   (&L2 LE 109).NOGT105
         MNOTE 4,'MESSAGE LAENGER ALS 105 STELLEN NICHT ERLAUBT'
&L2      SETA 109
.NOGT105 ANOP
         CNOP  2,4
         AIF   (&I).I
         BALR  R15,R0
         AGO   .NOTI
.I       ANOP
&NAME    BALR  R15,R0
.NOTI    ANOP
&I       SETB  1
         B     8(R15)
         DC    A(WTOXXXXX)
         L     R15,4(R15)
         AIF   ('&LNG' NE '').M4
         AIF   (&L2 LE 109).M31
         MVC   16(105,R15),&FELD
         AGO   .M5
.M31     ANOP
         MVC   16(&LTYP&FELD,R15),&FELD
         AGO   .M5
.M4      ANOP
         AIF   (&L2 LE 109).M41
         MVC   16(105,R15),&FELD
         AGO   .M5
.M41     ANOP
         MVC   16(&LNG,R15),&FELD
.M5      ANOP
         MVC   12(2,R15),=H'&L2'
         BAL   R14,4(R15)
         MEND
         EJECT
         MACRO
&NAME    CVDEZ &D,&G
         CNOP  0,4
&NAME    BAL   1,*+12
         DC    A(&G,&D)
         L     15,=V(CVDZ)
         BALR  14,15
         MEND
         EJECT
         MACRO
&NAME    CVGLEIT &G,&D
         CNOP  0,4
&NAME    BAL   1,*+12
         DC    A(&D,&G)
         L     15,=V(CVGK)
         BALR  14,15
         MEND
         EJECT
         MACRO
&NAME    CVTAB &LIST,&TYPE=Z
         LCLA  &COUNT,&N,&INDEX
         LCLC  &L
&COUNT   SETA  N'&LIST/2
&N       SETA  &N+1
         AIF   ('&TYPE' EQ 'Z').ZONED
         AIF   ('&TYPE' EQ 'P').PACKED
         MNOTE 8,'TYPE PARAMETER IST FALSCH ... KEINE GENERIERUNG'
         MEXIT
.PACKED  ANOP
&INDEX   SETA  6
.ZONED   ANOP
         CNOP  0,4
&NAME    DC    AL1(&COUNT)
         DC    AL3(0)
.LOOP    ANOP
&L       SETC  'L'''
         DC    AL1(&L&LIST(&N))
         DC    AL3(&LIST(&N))
         DC    AL1(&LIST(&N+1))
         DC    AL3(&INDEX)
&COUNT   SETA  &COUNT-1
&N       SETA  &N+2
         AIF   (&COUNT GT 0).LOOP
         MEXIT
         MEND
         EJECT
         MACRO
&NAME    EOJ   &RC=O
*********************************  E O J - R E T U R N ****************
         GBLB  &PRO
         AIF   (&PRO).EOJ
         MNOTE 12,'OHNE PROGR KANN EOJ NICHT GENERIERT WERDEN'
         MEXIT
.EOJ     ANOP
         AIF   ('&RC' EQ 'O').NORC
         AIF   ('&RC'(1,1) NE '(').DIRECT
.REG1    ANOP
         AIF   ('&RC(1)' NE '15' AND '&RC(1)' NE 'R15').NO15
&NAME    ST    R15,R&SYSNDX
         AGO   .ALL1
.NORC    ANOP
.DIRECT  ANOP
&NAME    L     R1,108(R3)
         AGO   .ALL2
.ALL1    ANOP
         L     R1,108(R3)
.ALL2    ANOP
         SVC   14
         CLI   15(R3),C'R'
         BNE   R&SYSNDX+4
         LOAD  EP=EOJ
         LR    R15,R0
         CNOP  0,4
         BAL   R1,*+8
         DC    A(R&SYSNDX)
         BALR  R14,R15
         DS    0F
         AIF   ('&RC' NE 'O').NOO
         MNOTE 1,'WARUM IST KEIN RC GESETZT WORDEN'
R&SYSNDX DC    AL1(128),AL3(0)
         L     R13,32(R3)
         LM    R14,R12,12(R13)
         BR    R14
         MEXIT
.NOO     ANOP
         AIF   ('&RC'(1,1) EQ '(').REG2
R&SYSNDX DC    AL1(0),AL3(&RC)
         L     R13,32(R3)
         LM    R14,R12,12(R13)
         LA    R15,&RC
         BR    R14
         MEXIT
.REG2    ANOP
         AIF   ('&RC(1)' NE '15' AND '&RC(1)' NE 'R15').NO15
R&SYSNDX DC    AL1(0),AL3(0)
         L     R13,32(R3)
         L     R14,12(R13)
         L     R15,R&SYSNDX
         LM    R0,R12,20(R13)
         BR    R14
         MEXIT
.NO15    ANOP
         IHBERMAC 61,,&RC
         MEND
         EJECT
         MACRO
&NAME    FILL  &P1,&P2,&P3
         GBLC  &CG1,&CG2
         LCLA  &AL1,&AL2
 AIF ('&P1' EQ '').A
 AIF ('&P2' NE '').B
.A MNOTE 'PARAMETER FEHLEN'
 MEXIT
.B AIF ('&P3' EQ '').C
&CG1 SETC '&P3.#'(1,2)
 AIF ('&CG1' EQ 'X''').BB
&CG2 SETC '&CG1'(2,1)
 AIF ('&CG2' EQ '#').BBB
 MNOTE 'PARAMETER 3 UNGUELTIG'
 MEXIT
.BB ANOP
&NAME    MVI   &P1,&P3
 AGO .D
.BBB ANOP
&NAME    MVI   &P1,C'&P3'
 AGO .D
.C ANOP
&NAME    MVI   &P1,C' '
.D AIF (&P2 EQ 1).G
&AL1 SETA 1
&AL2 SETA &P2-1
 AIF (&AL2 LE 256).F
.E       MVC   &P1+&AL1.(256),&P1
&AL1 SETA &AL1+256
&AL2 SETA &P2-&AL1
 AIFB (&AL2 GT 256).E
.F       MVC   &P1+&AL1.(&AL2),&P1
.G MEND
         EJECT
         MACRO
&NAME    PARM
         LCLA  &ANF,&EOP,&EPARM,&GLEICH,&WERT,&STERN,&LWERT,&L1,&L2
         LCLC  &DAT1,&DAT2,&DAT3,&DAT4,&X
         LCLC  &TEXT1,&TEXT2,&TEXT3,&TEXT4,&TEXT5
         AIF   ('SYSLIST(1)' NE '').MITOP1
         MNOTE *,'OHNE PARAMETER KEINE GENERIERUNG'
         MEXIT
.MITOP1  ANOP
&X       SETC  '&SYSNDX'
***********************************************************************
&NAME    B     LINKPARM
P1&X     EQU   *
&EPARM   SETA  K'&SYSLIST(1)
&ANF     SETA  1
.SCH1    ANOP
&ANF     SETA  &ANF+1
&GLEICH  SETA  &ANF+1
&WERT    SETA  &GLEICH+1
&EOP     SETA  &WERT+1
         AIF   ('&SYSLIST(1)'(&GLEICH,1) NE '=').FEHLER1
.SCH2    ANOP
         AIF   ('&SYSLIST(1)'(&EOP,1) EQ ')'                           *
               OR '&SYSLIST(1)'(&EOP,1) EQ ',').SCH3
&EOP     SETA  &EOP+1
         AIF   (&EOP GT &EPARM).FEHLER2
         AGO   .SCH2
.SCH3    ANOP
&STERN   SETA  &EOP-1
&DAT1    SETC  '&SYSLIST(1)'(&ANF,2)
&DAT2    SETC  '&SYSLIST(1)'(&ANF,1)
&LWERT   SETA  &STERN-&WERT
         AIF   ('&SYSLIST(1)'(&STERN,1) EQ '*').STAR
         AIF   ('&SYSLIST(1)'(&STERN,1) EQ '$').DOLLAR
         AIF   ('&SYSLIST(1)'(&STERN,1) EQ '%').PRZENT
&DAT3    SETC  ' '
&TEXT1   SETC  'WAHLWEIS'
&TEXT2   SETC  'E    MIT'
&TEXT3   SETC  ' FESTER '
&TEXT4   SETC  '   LAENG'
&TEXT5   SETC  'E       '
&STERN   SETA  &EOP
&LWERT   SETA  &STERN-&WERT
         AGO   .ALWAYS
.STAR    ANOP
&DAT3    SETC  '*'
&TEXT1   SETC  'ERFORDER'
&TEXT2   SETC  'LICH MIT'
&TEXT3   SETC  ' FESTER '
&TEXT4   SETC  '   LAENG'
&TEXT5   SETC  'E       '
         AGO   .ALWAYS
.DOLLAR  ANOP
&DAT3    SETC  '$'
&TEXT1   SETC  'WAHLWEIS'
&TEXT2   SETC  'E    MIT'
&TEXT3   SETC  ' VARIABL'
&TEXT4   SETC  'ER LAENG'
&TEXT5   SETC  'E       '
         AGO   .ALWAYS
.PRZENT  ANOP
&DAT3    SETC  '%'
&TEXT1   SETC  'ERFORDER'
&TEXT2   SETC  'LICH MIT'
&TEXT3   SETC  ' VARIABL'
&TEXT4   SETC  'ER LAENG'
&TEXT5   SETC  'E       '
.ALWAYS  ANOP
         AIF   (&LWERT LE 0).FEHLER3
&DAT4    SETC  '&SYSLIST(1)'(&WERT,&LWERT)
&L2      SETA  &DAT4
&L1      SETA  &L2+2
         DC    AL1(&L1)
         DC    C'&DAT1'
PARM&DAT2 DC CL&L2.'&DAT3'
         MNOTE *,'           &TEXT1&TEXT2&TEXT3&TEXT4&TEXT5'
         AIF   (&EOP EQ &EPARM).PARAEND
&ANF     SETA  &EOP
         AGO   .SCH1
.FEHLER1 MNOTE 1,'PARAMETER FALSCH'
         MEXIT
.FEHLER2 MNOTE 2,'PARAMETER FALSCH'
         MEXIT
.FEHLER3 MNOTE 3,'PARAMETER FALSCH'
         MEXIT
.PARAEND ANOP
         DC    C'@'
LINKPARM LINK EP=PARM,PARAM=(PARA0001,P1&X)
***********************************************************************
         EJECT
         MEND
         EJECT
         MACRO
&NAME    PROGR &P1,&P2
****************************  E T E R N I T  **************************
*                                                                     *
*                                 PROGR OS-VERSION                    *
*                                                                     *
***********************************************************************
*                                 J.TOUCHET   AM 25.01.71             *
*                                 A.TAUCHNITZ 25.04.74 LEVEL 002      *
***********************************************************************
         GBLB  &PRO
         GBLC  &SAVE
         LCLA  &AL6,&AL7,&AL8,&AL9,&AL10,&K,&K1,&K2
         LCLC  &R,&X,&DATA,&CODE,&APOS
         LCLB  &FEHL,&SHORT
         AIF   (NOT &PRO).YES
.YES     ANOP
&X       SETC  '&SYSNDX'
         AIF   ('&NAME' NE '').A
         MNOTE 'NAME FEHLT'
&FEHL    SETB  1
.A       AIF   (T'&P1 EQ 'N').B
         MNOTE 'PARAMETER 1 FEHLT ODER NICHT NUMERISCH'
.GENEND  MEXIT
.B       AIF   (&FEHL).GENEND
&SAVE    SETC  'SAVE&X'
&R       SETC  'R'
***********************************************************************
*                                 * SAVEROUT, BALR, USING *           *
***********************************************************************
&APOS    SETC  ''''
&CODE    SETC  'F'''
&K2      SETA  8
&DATA    SETC  '00000000'
         AIF   ('&P2' NE 'SHORT').LONG1
&SHORT   SETB  1
         AGO   .ZERO
.LONG1   AIF   ('&P2' EQ '').ZERO
&K       SETA  K'&P2
         AIF   ('&P2'(1,1) NE 'C').NOC
&CODE    SETC  'F'''
         AGO   .C
.NOC     AIF   ('&P2'(1,1) NE 'X').NOCNOX
&CODE    SETC  'X'''
         AIF   (&K LT 4 OR &K GT 9).FEHLER
         AGO   .C1
.C       AIF   (&K LT 4 OR &K GT 11).FEHLER
.C1      AIF   ('&P2'(2,1) NE '''' OR '&P2'(&K,1) NE '''').FEHLER
&K1      SETA  &K-3
&DATA    SETC  '&P2'(3,&K1)
&K2      SETA  &K2-&K1
.LOOP    AIF   (&K2  EQ 0).ENDSYNT
&DATA    SETC  '0&DATA'
&K2      SETA  &K2-1
         AGO   .LOOP
.NOCNOX  AIF   (&K GT 8).FEHLER
&CODE    SETC  'F'''
&DATA    SETC  '&P2'
&K2      SETA  &K2-&K
         AGO   .LOOP
.ENDSYNT AIF   ('&CODE'(1,1) NE 'F').NOF
&AL6     SETA  &DATA
&AL7     SETA  2097152
.LOOP1   AIF   (&AL6 EQ 0 AND &AL7 EQ 8).ZERO
         AIF   (&AL6 EQ &AL7).ZERO
         AIF   (&AL6 GT &AL7).SUBSTR
         AIF   (&AL7 EQ 8).FEHLER1
&AL7     SETA  &AL7/8
         AGO   .LOOP1
.SUBSTR  ANOP
&AL6     SETA  &AL6-&AL7
         AGO   .LOOP1
.FEHLER1 MNOTE *,'START-ADRESSE NICHT OHNE REST DURCH 8 TEILBAR. START *
               0 WIRD GENERIERT'
         AGO   .SETZERO
.NOF     AIF   ('&DATA'(8,1) NE '0' AND '&DATA'(8,1) NE '8').FEHLER1
.ZERO    AIF   ('&DATA' NE '00000000').NOZERO
&NAME    CSECT
         AGO   .ENTRY
.NOZERO  ANOP
         AIF   ('&CODE'(1,1) NE 'F').NOF1
&NAME    START &DATA
         AGO   .ENTRY
.NOF1    ANOP
&NAME    START &P2
         AGO   .ENTRY
.FEHLER  MNOTE *,'SYNTAX VON PARAMETER 2 IST FALSCH ... START 0 WIRD GE-
               NERIERT'
.SETZERO ANOP
&CODE    SETC  'F'''
&DATA    SETC  '00000000'
         AGO   .ZERO
.ENTRY   ANOP
         ENTRY &NAME
         B     16(0,R15) ;        BRANCH AROUND ID
         DC    AL1(11) ;          LENGTH OF IDENTIFIER
         DC    CL11'&NAME' ;      IDENTIFIER
         AIF   (&SHORT).SHORT0
         ORG   *-1
         DC    C'R'     ROOT PHASE
.SHORT0  ANOP
         STM   R14,R12,12(R13) ;  SAVE REGISTERS
         USING &NAME,R3 ;        R3 IST ERSTES BASIS REGISTER
         LR    R3,R15
         LR    R11,R13
         AIF   (&SHORT).SHORT1
         BAL   R13,120(R3)
         AGO   .LONG2
.SHORT1  BAL   R13,112(R3)
.LONG2   ANOP
SAVE&X   DS    18F ;              SAVEAREA
VF&X     DC    &CODE&DATA&APOS DIFFERENZ ZWI. ASSEMBLER UND SPEICHER
PARA&X   DS    F
PICA&X   DS    F
         DC    A(LEVEL-LEVEL)
         ORG   *-4
         AIF   (&SHORT).SHORT2
DATUM    DC    CL8'0' ;           TT.MM.JJ
TEST&X   B     *+10
         DC    X'0700'
         B     REP&X-4
.SHORT2  ANOP
         ST    R13,8(R11) ;       SAVEAREAS
         ST    R11,4(R13) ;                 VERKETTEN
         NOP   *+20
         OI    *-3,X'F0'
         LA    R4,&NAME
         S     R4,VF&X
         ST    R4,VF&X
&AL8     SETA  &P1+4095
&AL8     SETA  &AL8/4096+2
         AIF   (&AL8 LE 3).K
         AIF   (&AL8 LE 15).G
&AL8     SETA  15
.G       ANOP
&AL6     SETA  (&AL8-3)*4+4
         LA    &R&AL8,4095
&AL6     SETA  &AL6-4
&AL9     SETA  3
.J       ANOP
&AL9     SETA  &AL9+1
&AL10    SETA  &AL10+4096
         USING &NAME+&AL10,&AL9 ;    NOCH EIN USING,NACH WUNSCH
         AIF   (&AL9 LT &AL8).J
&AL7     SETA  2
&AL9     SETA  3
.F       ANOP
&AL7     SETA  &AL7+1
&AL9     SETA  &AL9+1
         LA    &R&AL9,1(&R&AL8,&R&AL7) ;      BASISREGISTER LADEN
         AIF   (&AL9 LT &AL8).F
.K       ANOP
         ST    R1,PARA&X
         AIF   (&PRO).NOEQU
&PRO     SETB  1
***********************************************************************
*                                 *** REGISTER EQUATEN ***            *
***********************************************************************
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
FPR0     EQU   0
FPR2     EQU   2
FPR4     EQU   4
FPR6     EQU   6
.NOEQU   ANOP
         AIF   (&SHORT).SHORT3
         NOP   FEHL&X
         OI    *-3,X'F0'
***********************************************************************
*                                 *** DATUM ***                       *
***********************************************************************
         LINK  EP=DATE,PARAM=DATUM
***********************************************************************
*                                 *** JOB-NAME,JOBSTEP-NAME,DATUM *** *
***********************************************************************
         L     R1,16 ;            ADR VON CVT AUS LOC HEX 10
         L     R1,0(R1) ;         ADR VON TCB DW IN R1 LADEN
         L     R1,4(R1) ;         ADR DES LAUFDN. TCB IN R1 LADEN
         L     R1,12(R1) ;        ADR DES TIOT AUS TCB IN R1 LADEN
         MVC   DAT5&X+9(8),0(R1) ;JOB-NAME
         MVC   DAT5&X+30(8),8(R1) JOBSTEP- ODER PROCSTEP-NAME
         MVC   DAT5&X+45(4),LEVEL LEVEL-NR
         MVC   DAT5&X+50(8),DATUM  TAGESDATUM
         CLC   8(4,R1),=C'TEST'     FRAGEN OB TEST ERWUENSCHT IST
         BNE   *+8
         NI    TEST&X+4,X'00' ;   TEST ANFORDERUNG WEICHE
         CLC   8(3,R1),=C'REP'
         BNE   *+8
         NI    REP&X+1,X'0F'
         CONSOR DAT5&X,58
         XC    DAT5&X,DAT5&X
         MVC   DAT5&X.(L'NAME),NAME
         CONSOR DAT5&X,105
         XC    DAT5&X,DAT5&X
         B     FEHL&X
DAT5&X   DC    C'JOB-NAME XXXXXXXX   STEP-NAME          LEVEL XXXX TT.M'
               M.JJ                                               '
.SHORT3  ANOP
FEHL&X   NOP   BAL2&X
         OI    *-3,240
         LOAD  EP=CHECKRT
         CNOP  0,4
         ST    R0,*+8
BAL2&X   BAL   R2,*+8
         DC    F'0'
         L     R2,0(R2)
         SPIE  (2),((1,15))
         ST    R1,PICA&X
         AIF   (&SHORT).SHORT4
         B     TEST&X+4
         NI    *-3,X'0F'
REP&X    B     NREP&X
         OI    *-3,X'F0'
         LINK  EP=REPROUT
NREP&X   EQU   *
.SHORT4  ANOP
         L     R1,PARA&X
***********************************************************************
         EJECT
         MEND
         EJECT
         MACRO
&NAME    RAUF  &R,&WOHIN1
         GBLB  &TRTTAB
         LCLC  &WOHIN
&WOHIN   SETC  '&WOHIN1'
&NAME    ST    &R,FW&SYSNDX
         MVC   F&SYSNDX,FW&SYSNDX
         UNPK  N&SYSNDX,F&SYSNDX
         TR    N&SYSNDX,TRTTAB-240
         MVC   &WOHIN+0(L'N&SYSNDX-1),N&SYSNDX
         B     END&SYSNDX
FW&SYSNDX  DS  F
         DS    CL1
F&SYSNDX DS    0CL5
N&SYSNDX DS    CL9
         AIFB  (&TRTTAB).END
&TRTTAB  SETB  1
         DS    CL240
TRTTAB   DC    X'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'
.END     ANOP
END&SYSNDX EQU *
         MEND
         EJECT
         MACRO
&NAME    VERTEIL &LINECNT=48,&TEXT=,&DCBNAME=,&CODE=M
         LCLA  &LIN,&CC
         LCLC  &X
         LCLB  &FEHL,&TEXTR,&DCBR
&X       SETC  '&SYSNDX'
         AIF   ('&LINECNT' LE '48').LE48
&FEHL    SETB  (1)
         MNOTE 1,'LINECNT MUSS KLEINER 49 SEIN'
.LE48    ANOP
         AIF   ('&DCBNAME' NE '').WITHDCB
&FEHL    SETB  (1)
         MNOTE 2,'OHNE DCBNAME GEHT ES EBEN AUCH NICHT'
.WITHDCB ANOP
         AIF   ('&TEXT' NE '').TEXTJA
&FEHL    SETB  (1)
         MNOTE 3,'TEXT MUSS AUCH ANGEGEBEN WERDEN'
.TEXTJA  ANOP
         AIF   ('&CODE' EQ 'A' OR '&CODE' EQ 'M').CODEOK
         MNOTE 5,'CODE IST FALSCH. M WIRD GENERIERT'
.CODEOK  ANOP
         AIF   (NOT &FEHL).PARAOK
         MNOTE *,'BITTE KORRIGIEREN'
         MEXIT
.PARAOK  ANOP
         AIF   ('&CODE' EQ 'A').A
&CC      SETA  128
         AGO   .OVERA
.A       ANOP
&CC      SETA  192
.OVERA   ANOP
         AIF   ('&TEXT'(1,1) NE '(').NOR1
&TEXTR   SETB  (1)
.NOR1    ANOP
         AIF   ('&DCBNAME'(1,1) NE '(').NOR2
&DCBR    SETB  (1)
.NOR2    ANOP
&LIN     SETA  &LINECNT-5
         CNOP  0,4
&NAME    B     *+12
PARM&X   DC    AL1(&LIN)
         DC    AL3(&TEXT)
         DC    AL1(&CC)
         DC    AL3(&DCBNAME)
         AIF   (NOT &TEXTR).NOR3
         ST    &TEXT(1),PARM&X
         MVI   PARM&X,&LIN
.NOR3    ANOP
         AIF   (NOT &DCBR).NOR4
         ST    &DCBNAME(1),PARM&X+4
         MVI   PARM&X+4,&CC
.NOR4    LINK  EP=XXXAVRTL,PARAM=PARM&X
         MEND
         MACRO
&FOLGE SORTBIN &TABADDR=,&TENDCHA=,&FELDLAE=,&BEGDISP=,&FOLG=
         LCLB  &FEHL
         LCLC  &FORME
*                  TOUCHET AUCH JACOB GENANNT,SEIN SORT MACRO
         AIF   ('&TABADDR' NE '').OPER1
         MNOTE 1,'TABADDR NICHT VORHANDEN'
&FEHL    SETB  (1)
.OPER1   AIF   ('&TENDCHA' NE '').OPER2
         MNOTE 2,'TENDCHA NICHT VORHANDEN'
&FEHL    SETB  (1)
.OPER2   AIF   ('&FELDLAE' NE '').OPER4
         MNOTE 3,'FELDLAE NICHT VORHANDEN'
&FEHL    SETB  (1)
.OPER4   AIF   ('&BEGDISP' NE '').OPER5
         MNOTE 5,'BEGDISP NICHT VORHANDEN'
.FEHLER  MNOTE *,'GENERIERUNG ABGEBROCHEN'
         MEXIT
.OPER5   AIF   (&FEHL).FEHLER
         AIF   ('&FOLG' EQ 'D').SETLOW
         AIF   ('&FOLG' EQ 'A').SETHIGH
         MNOTE 6,'FOLGEFORME NICHT VORHANDEN,A ASSUMED'
.SETHIGH ANOP
&FORME   SETC  'H'
         AGO   .WEITER
.SETLOW  ANOP
&FORME   SETC  'L'
.* WENN ALLE OPERANDEN VORHANDEN SIND * * *
.WEITER  ANOP
         CNOP  0,4
&FOLGE   STM   4,8,K&SYSNDX
         STM   14,15,K&SYSNDX+20
         LA    6,&TABADDR
         LA    15,AST&SYSNDX
         L     14,AST&SYSNDX
         SR    15,14
         A     15,VUNT&SYSNDX
         BALR  14,15
UNT&SYSNDX   CSECT
         BALR  15,0
         USING *,15
G&SYSNDX LR    4,6
D&SYSNDX LA    5,&FELDLAE.(4)
A&SYSNDX CLI   0(5),C'&TENDCHA'
         BE    L&SYSNDX
         L     7,&BEGDISP.(4)
         L     8,&BEGDISP.(5)
         CR    7,8
         B&FORME C&SYSNDX
E&SYSNDX LA    5,&FELDLAE.(5)
         B     A&SYSNDX
C&SYSNDX LR    4,5
         B     D&SYSNDX
L&SYSNDX CLC   0(&FELDLAE,4),0(6)
         BE    F&SYSNDX
M&SYSNDX XC    0(&FELDLAE,6),0(4)
         XC    0(&FELDLAE,4),0(6)
         EX    0,M&SYSNDX
F&SYSNDX LA    6,&FELDLAE.(6)
         CLI   0(6),C'&TENDCHA'
         BE    36(14)
         B     G&SYSNDX
&SYSECT   CSECT
         DROP  15
K&SYSNDX NOP   *   SAVE 4
         NOP   *   SAVE 5
         NOP   *   SAVE 6
         NOP   *   SAVE 7
         NOP   *   SAVE 8
         NOP   *   SAVE 14
         NOP   *   SAVE 15
AST&SYSNDX  DC A(*)
VUNT&SYSNDX  DC V(UNT&SYSNDX)
         LM    4,8,0(14)
         LM    14,15,20(14)
         MEND
         MACRO
&FOLGE SORTDEZ &TABADDR=,&TENDCHA=,&FELDLAE=,&BEGLAE=,&BEGDISP=,       *
               &FOLG=
         LCLB  &FEHL
         LCLC  &FORME
*                  TOUCHET AUCH JACOB GENANNT,SEIN SORT MACRO
         AIF   ('&TABADDR' NE '').OPER1
         MNOTE 1,'TABADDR NICHT VORHANDEN'
&FEHL    SETB  (1)
.OPER1   AIF   ('&TENDCHA' NE '').OPER2
         MNOTE 2,'TENDCHA NICHT VORHANDEN'
&FEHL    SETB  (1)
.OPER2   AIF   ('&FELDLAE' NE '').OPER3
         MNOTE 3,'FELDLAE NICHT VORHANDEN'
&FEHL    SETB  (1)
.OPER3   AIF   ('&BEGLAE' NE '').OPER4
         MNOTE 4,'BEGLAE NICHT VORHANDEN'
&FEHL    SETB  (1)
.OPER4   AIF   ('&BEGDISP' NE '').OPER5
         MNOTE 5,'BEGDISP NICHT VORHANDEN'
.FEHLER  MNOTE *,'GENERIERUNG ABGEBROCHEN'
         MEXIT
.OPER5   AIF   (&FEHL).FEHLER
         AIF   ('&FOLG' EQ 'D').SETLOW
         AIF   ('&FOLG' EQ 'A').SETHIGH
         MNOTE 6,'FOLGEFORM NICHT VORHANDEN,A ASSUMED'
.SETHIGH ANOP
&FORME   SETC  'H'
         AGO   .WEITER
.SETLOW  ANOP
&FORME   SETC  'L'
.* WENN ALLE OPERANDEN VORHANDEN SIND * * *
.WEITER  ANOP
         CNOP  0,4
&FOLGE   STM   4,6,K&SYSNDX
         STM   14,15,K&SYSNDX+12
         LA    6,&TABADDR
         LA    15,AST&SYSNDX
         L     14,AST&SYSNDX
         SR    15,14
         A     15,VUNT&SYSNDX
         BALR  14,15
UNT&SYSNDX CSECT
         BALR  15,0
         USING *,15
G&SYSNDX LR    4,6
D&SYSNDX LA    5,&FELDLAE.(4)
A&SYSNDX CLI   0(5),C'&TENDCHA'
         BE    L&SYSNDX
B&SYSNDX CP    &BEGDISP.(&BEGLAE,4),&BEGDISP.(&BEGLAE,5)
         B&FORME C&SYSNDX
E&SYSNDX LA    5,&FELDLAE.(5)
         B     A&SYSNDX
C&SYSNDX LR    4,5
         B     D&SYSNDX
L&SYSNDX CLC   0(&FELDLAE,4),0(6)
         BE    F&SYSNDX
M&SYSNDX XC    0(&FELDLAE,6),0(4)
         XC    0(&FELDLAE,4),0(6)
         EX    0,M&SYSNDX
F&SYSNDX LA    6,&FELDLAE.(6)
         CLI   0(6),C'&TENDCHA'
         BE    28(14)
         B     G&SYSNDX
&SYSECT  CSECT
         DROP  15
K&SYSNDX NOP   *  SAVE 4
         NOP   *  SAVE 5
         NOP   *  SAVE 6
         NOP   *  SAVE 14
         NOP   *  SAVE 15
AST&SYSNDX DC  A(*)
VUNT&SYSNDX DC V(UNT&SYSNDX)
         LM    4,6,0(14)
         LM    14,15,12(14)
         MEND
         EJECT
*
* ANFANG, BALR, USING UND OPENS
*
         PRINT NOGEN
         SPACE
GTFTRAZE PROGR 12000
         SPACE
A0       EQU   *
         OPEN  (DATAIN,(INPUT))
         OPEN  (SYSPRINT,(OUTPUT))
*
* LESEN DES ERSTEN SATZES, DER EIN CONTROL-RECORD SEIN MUSS
*
         GET   DATAIN
         AP    ANZAHL,=P'1'
         LA    R1,4(R1)           UM DIE RDW-LAENGE HINWEG
         TM    14(R1),X'60'       MAXIMUM TRACING GEWESEN
         BC    5,A1
         LA    R15,1
         B     ABEND
*
* HIER WIRD GEPRUEFT, OB LANGE (MIT ZEITSTEMPEL) ODER KURZE GTFSAEZTE
*
A1       EQU   *
         TM    17(R1),1           TRACE-RECORDS MIT ZEITSTEMPEL
         BZ    A1S                SHORT-RECORDS
         B     A1L                LONG RECORDS
         SPACE
A1S      EQU   *
         MVI   RECTYP,C'S'        TRACERECORDS OHNE ZEITSTEMPEL
         B     A1VS2
         SPACE
A1L      EQU   *
         MVI   RECTYP,C'L'        TRACERECORDS MIT ZEITSTEMPEL
         B     A1VS2
         EJECT
*
* ZUR ZEIT WERDEN NUR GTF-SAETZE AUS OS/VS2 UND OS/VS1 VERARBEITET
*
A1VS2    EQU   *
         TM    16(R1),X'10'       VS2-RECORDS
         BO    A3CTL              VS2-RECORDS (DER ERSTE IST EIN CTLREC
         TM    16(R1),X'20'       VS1-RECORD
         BO    A3CTL
         LA    R15,2
         B     ABEND
         SPACE
*
* LESEN ALLER WEITEREN SAETZE UND UMLADEN DER ADRESSE IN R7
*
A2       EQU   *
         GET   DATAIN
         AP    ANZAHL,=P'1'
         LA    R7,4(R1)           WIEDER UEBER DEN RDW HINWEG
         CLI   0(R7),0
         BE    A3CTL
         CLI   0(R7),X'FF'
         BE    A21
         CLI   0(R7),X'FE'
         BE    A21
         CLI   0(R7),X'FD'
         BE    A21
         B     A3FHL
         SPACE
A21      EQU   *
         CLI   RECTYP,C'L'
         BNE   *+8
         LA    R7,12(R7)          UEBER DEN ZEITSTEMPEL HINWEG
         B     A22
         EJECT
A22      EQU   *
*
* HIER WIRD DER GTF-TYP FESTGESTELLT
*
         CLC   2(2,R7),=X'2000'   PCI
         BE    A3PCI
         CLC   2(2,R7),=X'0100'   SVC
         BE    A3SVC
         CLC   2(2,R7),=X'6000'   DSP
         BE    A3DSP
         CLC   2(2,R7),=X'7100'   I/O 1
         BE    A3IO1
         CLC   2(2,R7),=X'7101'   I/O 2
         BE    A3IO2
         CLC   2(2,R7),=X'7000'   SIO
         BE    A3SIO
         CLC   2(2,R7),=X'5100'   SSM
         BE    A3SSM1
         CLC   2(2,R7),=X'0000'
         BE    A3SSM1
         CLC   2(2,R7),=X'5000'   PAGE FAULT PROGRAM INTERRUPT
         BE    A3PIPG
         CLC   2(2,R7),=X'5101'   PROGRAM INTERRUPT
         BE    A3PI
         CLC   2(2,R7),=X'5200'   EXT INT
         BE    A3EXT
         CLC   2(2,R7),=X'EFFF'   OPEN/CLOSE/EOV
         BE    A3DMA1
         CLC   2(2,R7),=X'EFF5'   VSAM
         BE    A3VSAM
         CLC   2(2,R7),=X'EFF6'   V
         BE    A3VSAM
         CLC   2(2,R7),=X'EFF7'   VSAM
         BE    A3VSAM
         CLC   2(2,R7),=X'EFF8'   VSAM
         BE    A3VSAM
         CLC   2(2,R7),=X'EFF9'   VSAM
         BE    A3VSAM
         CLC   2(2,R7),=X'EFFA'   VSAM
         BE    A3VSAM
         CLC   2(2,R7),=X'EFFB'   VSAM
         BE    A3VSAM
         CLC   2(2,R7),=X'EFFC'   VSAM
         BE    A3VSAM
         CLC   2(2,R7),=X'EFFD'   VSAM
         BE    A3VSAM
         CLC   2(2,R7),=X'EFFE'   VSAM
         BE    A3VSAM
         LA    R15,3
         B     ABEND
         EJECT
*
* HIER WERDEN DIE GTF-SAETZE DES SVC-TYPS WEITER UNTERSUCHT
*
A3SVC    EQU   *
         LA    R7,4(R1)           WIEDER UEBER DEN RDW HINWEG
         CLI   1(R7),1            MUST BE REALLY AN SVC-RECORD
         BE    A3SVCSVC
A3SVC239 EQU   *
A3SVC256 EQU   *
         LA    R15,4
         B     ABEND
         SPACE
A3SVCSVC EQU   *
         CLI   RECTYP,C'L'
         BNE   *+8
         LA    R7,12(R7)          UEBER TIMESTAMP WENN VORHANDEN
         XR    R8,R8
         IC    R8,19(R7)
         MH    R8,=H'26'
         A     R8,=A(ANZSVC00)
         CLI   19(R7),119         SVC UEBER 119
         BH    A3SVC120
A3SVCAP  EQU   *
         AP    0(6,R8),=P'1'
         CLI   19(R7),6           SVC 6 (LINK)
         BE    A3SVC06
         CLI   19(R7),7           SVC 7 (XCTL)
         BE    A3SVC07
         CLI   19(R7),8           SVC 08 (LOAD)
         BE    A3SVC08
         B     A2                 ALLE ANDEREN SVC'S NICHT ERWUENSCHT
A3SVC120 EQU   *
         CLI   19(R7),240
         BL    A3SVC239
         CLI   19(R7),255
         BH    A3SVC256
         S     R8,=A(120*26)
         B     A3SVCAP
         SPACE
A3SVC06  EQU   *
A3SVC07  EQU   *
         MVC   ACHT,52(R7)
         B     A3SVCTAB
         EJECT
A3SVC08  EQU   *
         MVC   ACHT,44(R7)
         B     A3SVCTAB
         SPACE
*
* DIE VERWENDETEN MODUL-NAMEN WERDEN IN DIE SVC-TABELLE GESTELLT
*
A3SVCTAB EQU   *
         L     R14,=A(TABSVC)
A3SVCCLI EQU   *
         LA    R15,11
         CLI   0(R14),C'$'
         BE    ABEND
         CLI   0(R14),C'*'
         BE    A3SVCNF
         CLC   0(8,R14),ACHT
         BE    A3SVCFND
         LA    R14,12(R14)
         B     A3SVCCLI
         SPACE
A3SVCNF  EQU   *
         MVC   0(8,R14),ACHT
         MVI   12(R14),C'*'
         B     A3SVCFND
*
* UND JE AUFRUF WIRD DER ZAEHLER UM EINS ERHOEHT
*
A3SVCFND EQU   *
         L     R15,8(R14)
         LA    R15,1(R15)
         ST    R15,8(R14)
         B     A2
         EJECT
*
* HIER WERDEN DIE ZUR ZEIT NICHT WEITER UNTERSUCHTEN SAETZE GEZAEHLT
*
A3CTL    EQU   *
         AP    ANZCTL,=P'1'
         B     A2
         SPACE
A3PCI    EQU   *
         AP    ANZPCI,=P'1'
         B     A2
         SPACE
A3DSP    EQU   *
         AP    ANZDSP,=P'1'
         B     A2
         SPACE
A3SSM1   EQU   *
         AP    ANZSSM,=P'1'
         B     A2
         SPACE
A3PIPG   EQU   *
         AP    ANZPIP,=P'1'
         B     A2
         SPACE
A3PI     EQU   *
         AP    ANZPIN,=P'1'
         B     A2
         SPACE
A3EXT    EQU   *
         AP    ANZEXT,=P'1'
         B     A2
         SPACE
A3DMA1   EQU   *
         AP    ANZOCE,=P'1'
         B     A2
         SPACE
A3VSAM   EQU   *
         AP    ANZVSA,=P'1'
         B     A2
         EJECT
*
* DIE ALS UNGUELTIG ERKANNTEN SAETZE KOMMEN HIER AUF EIN ZWEITES BAND
*
A3FHL    EQU   *
         AP    ANZFHL,=P'1'
         NOP   A3FHL1
A3FHLOI  EQU   *-3
         OI    A3FHLOI,240
         OPEN  (DATAOUT,(OUTPUT))
A3FHL1   EQU   *
         LR    R0,R1
         PUT   DATAOUT
         B     A2
         EJECT
*
* GTF-SAETZE DES SIO-TYPS WERDEN JE EINHEIT MIT ZEIT WEGGESPEICHERT
*
A3SIO    EQU   *
         AP    ANZSIO,=P'1'
         LA    R7,4(R1)           NOCH EINAML AUF DEN SATZ-ANFANG
         CLI   RECTYP,C'L'
         BNE   A2                 ZEITEN NUR WENN ER LANG IST
         MVC   ZWOELF(2),30(R7)   DEVICE-ADRESSE
         MVC   ZWOELF+2(2),46(R7) RQE+2
         MVC   ZWOELF+4(8),6(R7)  ZEITSTEMPEL
         L     R11,=A(TABSIO)
A3SIOCLI EQU   *
         LA    R15,12
         CLI   0(R11),C'$'
         BE    ABEND
         CLI   0(R11),C'*'
         BE    A3SIONF
         CLC   0(2,R11),ZWOELF
         BE    A3SIOGF
         LA    R11,12(R11)
         B     A3SIOCLI
         SPACE
A3SIONF  EQU   *
         MVI   12(R11),C'*'
A3SIOGF  EQU   *
         MVC   0(12,R11),ZWOELF
         B     A2
         EJECT
*
* JE SIO MUSS AUCH EIN I/O-SATZ KOMMEN. I/O MINUS SIO IST DIE EXCP-ZEIT
*
A3IO1    EQU   *
         AP    ANZIO1,=P'1'
         B     A3IO
         SPACE
A3IO2    EQU   *
         AP    ANZIO2,=P'1'
         B     A3IO
         SPACE
A3IO     EQU   *
         LA    R7,4(R1)           NOCH EINAML AUF DEN SATZ-ANFANG
         CLI   RECTYP,C'L'
         BNE   A2                 ZEITEN NUR WENN ER LANG IST
         MVC   ZWOELF(2),30(R7)   DEVICE-ADRESSE
         MVC   ZWOELF+2(2),46(R7) RQE+2
         MVC   ZWOELF+4(8),6(R7)  ZEITSTEMPEL
         L     R11,=A(TABIO)
A3IOCLI  EQU   *
         LA    R15,13
         CLI   0(R11),C'$'
         BE    ABEND
         CLI   0(R11),C'*'
         BE    A3IONF
         CLC   0(4,R11),ZWOELF
         BE    A3IOGEF
         LA    R11,12(R11)
         B     A3IOCLI
         SPACE
A3IONF   EQU   *
         AP    ANZIONF,=P'1'
         B     A2
         EJECT
A3IOGEF  EQU   *
         LM    R8,R9,ZWOELF+4     I/O-ZEIT LADEN
         SRDL  R8,11              UMELF STELLEN VERSCHIEBEN
         SRL   R9,1               NOCH MAL UM EINE STELLE VERSCHIEBEN
         LR    R6,R9              ZWISCHENSPEICHERN ZUM DIFFERENZIEREN
         LM    R8,R9,4(R11)       SIO-ZEIT AUCH LADEN
         SRDL  R8,11              EBENFALLS UM DENSELBEN WERT SCHIEBEN
         SRL   R9,1               UND DEN REST AUCH
         LR    R2,R9              EBENFALLS UMLADEN
         SR    R6,R2              I/O - SIO = DAUER EXCP
         LTR   R6,R6              DIE ZEIT MUSS POSITIV SEIN
         BNP   A3IONEG
         L     R11,=A(TABEXCP)
         B     A3IOECLI
         SPACE
A3IOECLI EQU   *
         CLI   0(R11),C'*'
         BE    A3IOENF
         CLC   0(2,R11),ZWOELF
         BE    A3IOEGF
         LA    R11,24(R11)
         B     A3IOECLI
         SPACE
A3IONEG  EQU   *
         AP    ANZIONEG,=P'1'
         B     A2
         EJECT
A3IOENF  EQU   *
         LA    R15,10
         CLI   24(R11),C'$'
         BE    ABEND
         MVI   24(R11),C'*'
         MVC   0(2,R11),ZWOELF
A3IOEGF  EQU   *
         CVD   R6,DMIKROS
         CVGLEIT GKTAB1,DEZTAB1   UMWANDELN IN GLEIKO-ZAHLEN
         LD    FPR0,16(R11)       BEREITS VORHANDENE ANZAHL LADEN
         AD    FPR0,=D'1'         ANZAHL UM EINS ERHOEHEN
         STD   FPR0,16(R11)       UND WIEDER WEGSPEICHERN
         LD    FPR0,8(R11)        MIKROSUMME LADEN
         AD    FPR0,GMIKROS       ADDIEREN
         STD   FPR0,8(R11)        UND WIEDER WEGSPEICHERN
         B     A2
         SPACE
         EJECT
*
* DRUCKEN DER KOPFZEILEN
*
H0       EQU   *
         ST    R9,H0RETTE
         ZAP   ZZ,=P'0'
         MVI   C,139
         BAL   R10,P0
         AP    SZ,=P'1'
         OI    SZ+L'SZ-1,15
         UNPK  HEADTEXT+107(3),SZ+1(2)
         MVI   C,17
         MVC   D(L'HEADTEXT),HEADTEXT
         BAL   R10,P0
         MVI   C,17
         MVC   D(L'HEADTXT2),HEADTXT2
         BAL   R10,P0
         AP    ZZ,=P'3'
         L     R9,H0RETTE
         BR    R9
         SPACE 2
*
* DRUCKEN DER EINZELZEILEN MIT UEBERLAUFABFRAGE
*
P0       EQU   *
         PUT   SYSPRINT,C
         MVI   C,9
         FILL  D,120
         AP    ZZ,=P'1'
         CP    ZZ,=P'40'
         BNHR  R10
         ST    R10,P0RETTE
         BAL   R9,H0
         L     R10,P0RETTE
         BR    R10
         EJECT
*
* BEI BANDENDE GEHT DIE ARBEIT ERST SO RICHTIG LOS
*
EOF      EQU   *
         OPEN  (SVCLIB,(INPUT),LPALIB,(INPUT))
*
* ERST WIRD MAL EIN VERTEILER GEDRUCKT
*
VERTEIL  VERTEIL LINECNT=48,TEXT=AN,DCBNAME=SYSPRINT,CODE=M
         BAL   R9,H0
*
* DANN WERDEN DIE MODULE AUS DER SVC-TAFEL GELESEN UND DIE
* ENTSPRECHENDE BIBLIOTHEK DAZU GESUCHT
*
         BAL   R10,SORT
         L     R11,=A(TABSVC)
EOF3     EQU   *
         CLI   0(R11),C'*'
         BE    EOF2
         MVC   D(8),0(R11)
         L     R14,8(R11)
         CVD   R14,DW
         MVC   ZWOELF,=X'402020204B2020204B202120'
         ED    ZWOELF,DW+3
         MVC   D+9(7),ZWOELF+5    AUFRUFE
         AP    SUMME,DW
         MVC   ZWOELF,=X'402020204B2020204B202120'
         ED    ZWOELF,SUMME+3
         MVC   D+9+8(9),ZWOELF+3
         MVC   BLDLNAME,0(R11)
         B     TRYLPA
         EJECT
*
* ZUERST WIRD MAL IN DER LPALIB-DIRECTORY GESUCHT
*
TRYLPA   EQU   *
         BLDL  LPALIB,BLDLPTR
         B     LPATST(R15)
         SPACE
LPATST   EQU   *
         B     ALPALIB
         B     TRYLNK             NIXFIND, EVTL NOCH IN LNKLIB
         B     ERROR1
         SPACE
ALPALIB  EQU   *
         LA    R12,D+26
         B     RENTERBL
         SPACE 2
*
* DANN WIRD IN DER DIRECTORY FUER DIE LINKLIB GEFORSCHT
*
TRYLNK   EQU   *
         BLDL  0,BLDLPTR
         B     LNKTST(R15)
         SPACE
LNKTST   EQU   *
         B     ALNKLIB
         B     TRYSVC             NIXFIND, EVTL IN SVCLIB
         B     ERROR2
         SPACE
ALNKLIB  EQU   *
         LA    R12,D+59
         B     RENTERBL
         EJECT
*
* UND ZULETZT KOENNTE EIN MODUL AUCH NOCH IN DER SVCLIB STEHEN
*
TRYSVC   EQU   *
         BLDL  SVCLIB,BLDLPTR
         B     SVCTST(R15)
         SPACE
SVCTST   EQU   *
         B     ASVCLIB
         B     SONSTIGE
         B     ERROR3
         SPACE
ASVCLIB  EQU   *
         LA    R12,D+86
         B     RENTERBL
         EJECT
*
* HIER WIRD DIE MODULGROESSE FESTGESTELLT UND RICHTIG ADDIERT
*
RENTERBL EQU   *
         XC    FW,FW
         MVC   FW+2(2),BLDLNAME+25
         L     R10,FW
         CVD   R10,DW
         MVC   0(15,R12),=X'4020204B2020204B2020204B202120'
         ED    0(15,R12),DW+2
         CL    R12,=A(D+26)
         BNE   EDLNK
         AP    SUMLPA,DW
         MVC   17(15,R12),=X'4020204B2020204B2020204B202120'
         ED    17(15,R12),SUMLPA+2
         TM    BLDLNAME+22,128    IS MODUL REENTRANT
         BO    *+10
         MVC   17(6,R12),=C'NORENT'
         B     NOTSVC
         SPACE
EDLNK    EQU   *
         CL    R12,=A(D+59)
         BNE   EDSVC
         AP    SUMLNK,DW
         MVC   17(15,R12),=X'4020204B2020204B2020204B202120'
         ED    17(15,R12),SUMLNK+2
         TM    BLDLNAME+22,128    IS MODUL REENTRANT
         BO    *+10
         MVC   17(6,R12),=C'NORENT'
         B     NOTSVC
         EJECT
EDSVC    EQU   *
         CL    R12,=A(D+86)
         BNE   SONSTIGE
         AP    SUMSVC,DW
         TM    BLDLNAME+22,128
         BO    *+10
         MVC   15(6,R12),=C'NORENT'
         B     NOTSVC
*
* SONST IST ER NOCH NICHT IN ERSCHEINUNG GETRETEN
*
SONSTIGE EQU   *
         LA    R12,D+100
         XC    FW,FW
         MVC   FW+2(2),BLDLNAME+25
         L     R10,FW
         CVD   R10,DW
         MVC   0(10,R12),=X'40204B2020204B202120'
         ED    0(10,R12),DW+4
         B     NOTSVC
         SPACE
NOTSVC   EQU   *
         BAL   R10,P0
         LA    R11,12(R11)
         B     EOF3
         EJECT
*
* DIE ZWEITE AUSWERTUNG BEFASST SICH MIT DER EINHEITEN-TAFEL UND DEN
* DABEI AUFSUMMIERTEN MIKROSEKUNDEN SOWIE DEN DURCHSCHNITTSZEITEN
*
EOF2     EQU   *
*
* ZUNAECHST WIRD DIE UEBERSCHRIFT GEAENDERT
*
         MVC   HEADTEXT+42(59),=CL69'IM ZWEITEN TEIL NUN DIE MIKROSEKUN*
               DEN DER EXCP''S'
         MVC   HEADTXT2(120),=CL120'UNIT / TYP MIKROSEKUNDEN-SUMME     *
               SIO-ANZAHL     MIKROS JE EXCP                CHARACTERIS*
               TICA         '
         BAL   R9,H0
         L     R11,=A(TABEXCP)
*
* UND HIER WERDEN DIE UNIT-TAFELN AUFBEREITET
*
EOF5     EQU   *
         BAL   R10,SORT3
         CLI   0(R11),C'*'
         BE    EOF6
         L     R12,=A(TABUNITS)
EOF10    EQU   *
         CLI   0(R12),C'*'
         BE    EOF11
         CLC   0(2,R12),0(R11)
         BE    EOF9
         LA    R12,42(R12)
         B     EOF10
EOF9     EQU   *
         MVC   D(10),2(R12)
         B     EOF12
         EJECT
*
* KUMULIERTE MIKROSEKUNDEN-SUMMEN UND ANZAHL DER EXCPS AUFBEREITEN
*
EOF11    EQU   *
         MVC   D(10),=C'***UNIT***'
         FILL  D+89,30
EOF12    EQU   *
         LD    FPR2,8(R11)        AUFSUMMIERTE MIKROSEKUNDEN
         STD   FPR2,GMIKROS
         LD    FPR4,16(R11)       SUMMIERTE ANZAHL DER AUFRUFE (EXCPS)
         STD   FPR4,GANZAHL
         LDR   FPR6,FPR2
         CDR   FPR6,FPR4
         BNH   EOF8
         DDR   FPR6,FPR4          GESAMT-SEKUNDEN DURCH GESAMTANZAHL
         STD   FPR6,GDW
         STD   FPR6,GEXCP
         CVDEZ DEZTAB1,GKTAB1
         MVC   D+44(20),=X'402020204B2020204B2020204B2020204B202120'
         ED    D+44(20),DEXCP
         MVC   D+25(20),=X'402020204B2020204B2020204B2020204B202120'
         ED    D+25(20),DANZAHL
         MVC   D+10(20),=X'402020204B2020204B2020204B2020204B202120'
         ED    D+10(20),DMIKROS
         CLC   2(2,R12),=C'15'
         BE    PLATTEN
         CLC   2(2,R12),=C'25'
         BE    PLATTEN
         CLC   2(2,R12),=C'18'
         BE    TAPPEN
         CLC   2(2,R12),=C'28'
         BE    TAPPEN
         CLC   2(2,R12),=C'38'
         BE    TAPPEN
         B     EOF13
         EJECT
*
* MIKROSEKUNDEN DURCH EXCP-ANZAHL = EXCP-ZEIT JE ZUGRIFF
*
EOF13    EQU   *
         MVC   D+80(30),12(R12)   CHARACTERISTICA MOVEN
         BAL   R10,P0
EOF8     EQU   *
         LA    R11,24(R11)
         B     EOF5
*
* TAPE- UND DISK-EINHEITEN WERDEN NOCH ZUSAMMENGEFASST
*
TAPPEN   EQU   *
         LD    FPR0,TAPE+8
         ADR   FPR0,FPR2          TAPPEN-MIKROS ADDIEREN
         STD   FPR0,TAPE+8
         LD    FPR0,TAPE+16       ANZAHLEN
         ADR   FPR0,FPR4
         STD   FPR0,TAPE+16
         B     EOF13
         SPACE
PLATTEN  EQU   *
         LD    FPR0,DISK+8
         ADR   FPR0,FPR2          DISKEN-MIKROS ADDIEREN
         STD   FPR0,DISK+8
         LD    FPR0,DISK+16
         ADR   FPR0,FPR4
         STD   FPR0,DISK+16
         B     EOF13
         EJECT
*
* TAPES UND DISKS WERDEN NOCH ALS GRUPPE DARGESTELLT
*
EOF6     EQU   *
         LD    FPR0,TAPE+8
         STD   FPR0,GMIKROS
         LD    FPR2,TAPE+16
         STD   FPR2,GANZAHL
         DDR   FPR0,FPR2
         STD   FPR0,GEXCP
         LD    FPR6,=D'0'
         STD   FPR6,GDW
         CVDEZ DEZTAB1,GKTAB1
         MVI   C,17
         BAL   R10,P0
         MVC   D(10),=C'* TAPPEN *'
         MVC   D+44(20),=X'402020204B2020204B2020204B2020204B202120'
         ED    D+44(20),DEXCP
         MVC   D+25(20),=X'402020204B2020204B2020204B2020204B202120'
         ED    D+25(20),DANZAHL
         MVC   D+10(20),=X'402020204B2020204B2020204B2020204B202120'
         ED    D+10(20),DMIKROS
         BAL   R10,P0
         LD    FPR0,DISK+8
         STD   FPR0,GMIKROS
         LD    FPR2,DISK+16
         STD   FPR2,GANZAHL
         DDR   FPR0,FPR2
         STD   FPR0,GEXCP
         LD    FPR6,=D'0'
         STD   FPR6,GDW
         CVDEZ DEZTAB1,GKTAB1
         MVC   D(10),=C'* DISKEN *'
         MVC   D+44(20),=X'402020204B2020204B2020204B2020204B202120'
         ED    D+44(20),DEXCP
         MVC   D+25(20),=X'402020204B2020204B2020204B2020204B202120'
         ED    D+25(20),DANZAHL
         MVC   D+10(20),=X'402020204B2020204B2020204B2020204B202120'
         ED    D+10(20),DMIKROS
         BAL   R10,P0
         B     EOF14
         EJECT
*
* DIE DRITTE LISTE ZEIGT NOCH DIE ANZAHLEN DER VERSCHIEDENEN GTF-SAETZE
*
EOF14    EQU   *
         MVC   HEADTEXT+42(59),=CL69'UND IM DRITTEN TEIL NOCH EINE AUFT*
               EILUNG DER GTF-SATZARTEN '
         MVC   HEADTXT2(120),=CL120' '
         BAL   R9,H0
         BAL   R10,SORT2
         L     R10,=A(ANZEND1)
         S     R10,=A(ANZCTL)
         SRDA  R10,32
         D     R10,=F'26'
         LA    R12,ANZCTL
EOF1     EQU   *
         CP    0(6,R12),=P'0'
         BZ    EOF1A
         MVC   D(15),=X'4020204B2020204B2020204B202120'
         ED    D(15),0(R12)
         MVC   D+16(20),6(R12)
         BAL   R10,P0
EOF1A    EQU   *
         LA    R12,26(R12)
         BCT   R11,EOF1
         L     R10,=A(ANZEND2)
         S     R10,=A(ANZAHL)
         SRDA  R10,32
         D     R10,=F'26'
         LA    R12,ANZAHL
EOF4     EQU   *
         MVC   D(15),=X'4020204B2020204B2020204B202120'
         ED    D(15),0(R12)
         MVC   D+16(20),6(R12)
         BAL   R10,P0
         LA    R12,26(R12)
         BCT   R11,EOF4
         B     EOF7
         EJECT
*
* MAL MUSS AUCH SCHLUSS SEIN
*
EOF7     EQU   *
         CLOSE (DATAIN,,SYSPRINT)
         CLOSE (SVCLIB,,LPALIB)
         CLI   A3FHLOI,0
         BE    EOJ                KEINE FALSCHEN SAETZE
         CLOSE (DATAOUT)
EOJ      EQU   *
         EOJ   RC=0
         SPACE 2
*
* ABENDS UND ERRORS
*
ABEND    EQU   *
         ABEND (R15),DUMP
         SPACE
ERROR1   EQU   *
         LA    R15,6
         B     ABEND
         SPACE
ERROR2   EQU   *
         LA    R15,7
         B     ABEND
         SPACE
ERROR3   EQU   *
         LA    R15,8
         B     ABEND
         EJECT
*
* HIER WIRD NACH END-OF-VOLUME EIN CHECKPOINT GESCHRIEBEN
*
CHKPTRTN EQU   *
         ST    R14,RETTE14
         EXTRACT ANSADDR,FIELDS=(ALL)
         AP    CHKPTANZ,=P'1'
         OI    CHKPTANZ+L'CHKPTANZ-1,15
         UNPK  CHECKID+11(4),CHKPTANZ
         CHKPT CHKPT,CHECKID,16
         CH    R15,=H'4'
         BNE   NRESTART
NRESTART EQU   *
         CH    R15,=H'0'
         BNE   ABEND
         EXTRACT ANSADDR,FIELDS=(ALL)
         L     R14,RETTE14
         BR    R14
         EJECT
         PRINT GEN
*
* HIER WERDEN DIE SVC-MODUL-NAMEN NACH HAEUFIGKEIT SORTIERT
*
SORT     EQU   *
         L     R9,=A(TABSVC)
         SORTBIN TABADDR=0(R9),TENDCHA=*,FELDLAE=12,BEGDISP=8,FOLG=D
         BR    R10
         EJECT
*
* HIER WERDEN DIE VERSCHIEDENEN GTF-SAETZE NACH HAEUFIGKEIT SORTIERT
*
SORT2    EQU   *
         SORTDEZ TABADDR=ANZCTL,TENDCHA=*,FELDLAE=26,BEGLAE=6,         *
               BEGDISP=0,FOLG=D
         BR    R10
         EJECT
*
* UND HIER AUCH NOCH DIE EXCP-EINHEITEN AUFSTEIGEND
*
SORT3    EQU   *
         L     R9,=A(TABEXCP)
         SORTBIN TABADDR=0(R9),TENDCHA=*,FELDLAE=24,BEGDISP=0,FOLG=A
         BR    R10
         EJECT
*
* DAS SAMMELBECKEN DER UNZUFRIEDENEN
*
ANZCTL   DC    PL6'0'
         DC    CL20'GTF-KONTROLLSAETZE'
ANZPCI   DC    PL6'0'
         DC    CL20'PCI''S'
ANZDSP   DC    PL6'0'
         DC    CL20'DSP''S'
ANZIO1   DC    PL6'0'
         DC    CL20'I/O''S TYP 1'
ANZIO2   DC    PL6'0'
         DC    CL20'I/O''S TYP 2'
ANZSIO   DC    PL6'0'
         DC    CL20'SIO''S'
ANZSSM   DC    PL6'0'
         DC    CL20'SSM''S'
ANZPIP   DC    PL6'0'
         DC    CL20'PAGE FAULTS'
ANZPIN   DC    PL6'0'
         DC    CL20'PROGRAM INTERRUPTS'
ANZEXT   DC    PL6'0'
         DC    CL20'EXTERNE INTERRUPTS'
ANZOCE   DC    PL6'0'
         DC    CL20'OPEN/CLOSE/EOV''S'
ANZVSA   DC    PL6'0'
         DC    CL20'VSAMMEN'
ANZSVC00 DC    PL6'0'
         DC    CL20'EXCP / XDAP  SVC   0'
ANZSVC01 DC    PL6'0'
         DC    CL20'WAIT / WAITR SVC   1'
ANZSVC02 DC    PL6'0'
         DC    CL20'PRTOV / POST SVC   2'
ANZSVC03 DC    PL6'0'
         DC    CL20'EXIT         SVC   3'
ANZSVC04 DC    PL6'0'
         DC    CL20'GETMAIN      SVC   4'
ANZSVC05 DC    PL6'0'
         DC    CL20'FREEMAIN     SVC   5'
ANZSVC06 DC    PL6'0'
         DC    CL20'LINK         SVC   6'
ANZSVC07 DC    PL6'0'
         DC    CL20'XCTL         SVC   7'
ANZSVC08 DC    PL6'0'
         DC    CL20'LOAD         SVC   8'
ANZSVC09 DC    PL6'0'
         DC    CL20'DELETE       SVC   9'
ANZSVC10 DC    PL6'0'
         DC    CL20'GETM-R/FREEM-R/FPOOL'
ANZSVC11 DC    PL6'0'
         DC    CL20'TIME         SVC  11'
ANZSVC12 DC    PL6'0'
         DC    CL20'SYNCH        SVC  12'
ANZSVC13 DC    PL6'0'
         DC    CL20'ABEND        SVC  13'
ANZSVC14 DC    PL6'0'
         DC    CL20'SPIE         SVC  14'
ANZSVC15 DC    PL6'0'
         DC    CL20'ERREXCP      SVC  15'
ANZSVC16 DC    PL6'0'
         DC    CL20'PURGE        SVC  16'
ANZSVC17 DC    PL6'0'
         DC    CL20'RESTORE      SVC  17'
ANZSVC18 DC    PL6'0'
         DC    CL20'BLDL/FIND    SVC  18'
ANZSVC19 DC    PL6'0'
         DC    CL20'OPEN         SVC  19'
ANZSVC20 DC    PL6'0'
         DC    CL20'CLOSE        SVC  20'
ANZSVC21 DC    PL6'0'
         DC    CL20'STOW         SVC  21'
ANZSVC22 DC    PL6'0'
         DC    CL20'OPEN TYPE J  SVC  22'
ANZSVC23 DC    PL6'0'
         DC    CL20'CLOSE TYPE J SVC  23'
ANZSVC24 DC    PL6'0'
         DC    CL20'DEVTYPE      SVC  24'
ANZSVC25 DC    PL6'0'
         DC    CL20'TRKBAL       SVC  25'
ANZSVC26 DC    PL6'0'
         DC    CL20'CATALOG/INDEX/LOCATE'
ANZSVC27 DC    PL6'0'
         DC    CL20'OBTAIN       SVC  27'
ANZSVC28 DC    PL6'0'
         DC    CL20'CVOL         SVC  28'
ANZSVC29 DC    PL6'0'
         DC    CL20'SCRATCH      SVC  29'
ANZSVC30 DC    PL6'0'
         DC    CL20'RENAME       SVC  30'
ANZSVC31 DC    PL6'0'
         DC    CL20'FEOV         SVC  31'
ANZSVC32 DC    PL6'0'
         DC    CL20'ALLOC        SVC  32'
ANZSVC33 DC    PL6'0'
         DC    CL20'IOHALT       SVC  33'
ANZSVC34 DC    PL6'0'
         DC    CL20'MGCR / QEDIT SVC  34'
ANZSVC35 DC    PL6'0'
         DC    CL20'WTO / WTOR   SVC  35'
ANZSVC36 DC    PL6'0'
         DC    CL20'WTL          SVC  36'
ANZSVC37 DC    PL6'0'
         DC    CL20'SEGLD/SEGWT  SVC  37'
ANZSVC38 DC    PL6'0'
         DC    CL20'*RESERVED*   SVC  38'
ANZSVC39 DC    PL6'0'
         DC    CL20'LABEL        SVC  39'
ANZSVC40 DC    PL6'0'
         DC    CL20'EXTRACT      SVC  40'
ANZSVC41 DC    PL6'0'
         DC    CL20'IDENTIFY     SVC  41'
ANZSVC42 DC    PL6'0'
         DC    CL20'ATTACH       SVC  42'
ANZSVC43 DC    PL6'0'
         DC    CL20'CIRB         SVC  43'
ANZSVC44 DC    PL6'0'
         DC    CL20'CHAP         SVC  44'
ANZSVC45 DC    PL6'0'
         DC    CL20'OVLYBRCH     SVC  45'
ANZSVC46 DC    PL6'0'
         DC    CL20'TTIMER       SVC  46'
ANZSVC47 DC    PL6'0'
         DC    CL20'STIMER       SVC  47'
ANZSVC48 DC    PL6'0'
         DC    CL20'DEQ          SVC  48'
ANZSVC49 DC    PL6'0'
         DC    CL20'*RESERVED*   SVC  49'
ANZSVC50 DC    PL6'0'
         DC    CL20'*RESERVED*   SVC  50'
ANZSVC51 DC    PL6'0'
         DC    CL20'SNAP         SVC  51'
ANZSVC52 DC    PL6'0'
         DC    CL20'RESTART      SVC  52'
ANZSVC53 DC    PL6'0'
         DC    CL20'RELEX        SVC  53'
ANZSVC54 DC    PL6'0'
         DC    CL20'DISABLE      SVC  54'
ANZSVC55 DC    PL6'0'
         DC    CL20'EOV          SVC  55'
ANZSVC56 DC    PL6'0'
         DC    CL20'ENQ/RESERVE  SVC  56'
ANZSVC57 DC    PL6'0'
         DC    CL20'FREEDBUF     SVC  57'
ANZSVC58 DC    PL6'0'
         DC    CL20'RELBUF/REQBUF     58'
ANZSVC59 DC    PL6'0'
         DC    CL20'OLTEP        SVC  59'
ANZSVC60 DC    PL6'0'
         DC    CL20'STAE         SVC  60'
ANZSVC61 DC    PL6'0'
         DC    CL20'*RESERVED*   SVC  61'
ANZSVC62 DC    PL6'0'
         DC    CL20'DETACH       SVC  62'
ANZSVC63 DC    PL6'0'
         DC    CL20'CHKPT        SVC  63'
ANZSVC64 DC    PL6'0'
         DC    CL20'RDJFCB       SVC  64'
ANZSVC65 DC    PL6'0'
         DC    CL20'QWAIT        SVC  65'
ANZSVC66 DC    PL6'0'
         DC    CL20'BTAMTEST     SVC  66'
ANZSVC67 DC    PL6'0'
         DC    CL20'ENDREADY     SVC  67'
ANZSVC68 DC    PL6'0'
         DC    CL20'SYNADAF/SYNADRLS  68'
ANZSVC69 DC    PL6'0'
         DC    CL20'BSP          SVC  69'
ANZSVC70 DC    PL6'0'
         DC    CL20'GSERV        SVC  70'
ANZSVC71 DC    PL6'0'
         DC    CL20'ASGNBFR/BUFINQ/RLSEB'
ANZSVC72 DC    PL6'0'
         DC    CL20'CHATR        SVC  72'
ANZSVC73 DC    PL6'0'
         DC    CL20'SPAR         SVC  73'
ANZSVC74 DC    PL6'0'
         DC    CL20'DAR          SVC  74'
ANZSVC75 DC    PL6'0'
         DC    CL20'DQUEUE       SVC  75'
ANZSVC76 DC    PL6'0'
         DC    CL20'IFBSTAT      SVC  76'
ANZSVC77 DC    PL6'0'
         DC    CL20'QTAMTEST     SVC  77'
ANZSVC78 DC    PL6'0'
         DC    CL20'WSCAN        SVC  78'
ANZSVC79 DC    PL6'0'
         DC    CL20'STATUS       SVC  79'
ANZSVC80 DC    PL6'0'
         DC    CL20'IKASVC       SVC  80'
ANZSVC81 DC    PL6'0'
         DC    CL20'SETPRT       SVC  81'
ANZSVC82 DC    PL6'0'
         DC    CL20'DASDR        SVC  82'
ANZSVC83 DC    PL6'0'
         DC    CL20'SMFWTM       SVC  83'
ANZSVC84 DC    PL6'0'
         DC    CL20'GRAPHICS     SVC  84'
ANZSVC85 DC    PL6'0'
         DC    CL20'DDRSWAP      SVC  85'
ANZSVC86 DC    PL6'0'
         DC    CL20'ATLAS        SVC  86'
ANZSVC87 DC    PL6'0'
         DC    CL20'DOM          SVC  87'
ANZSVC88 DC    PL6'0'
         DC    CL20'MOD88        SVC  88'
ANZSVC89 DC    PL6'0'
         DC    CL20'EMSRV        SVC  89'
ANZSVC90 DC    PL6'0'
         DC    CL20'XQMNGR       SVC  90'
ANZSVC91 DC    PL6'0'
         DC    CL20'VOLSTAT      SVC  91'
ANZSVC92 DC    PL6'0'
         DC    CL20'TCBEXCP      SVC  92'
ANZSVC93 DC    PL6'0'
         DC    CL20'TGET / TPUT  SVC  93'
ANZSVC94 DC    PL6'0'
         DC    CL20'STCC         SVC  94'
ANZSVC95 DC    PL6'0'
         DC    CL20'TSEVENT      SVC  95'
ANZSVC96 DC    PL6'0'
         DC    CL20'STAX         SVC  96'
ANZSVC97 DC    PL6'0'
         DC    CL20'TEST-TSO     SVC  97'
ANZSVC98 DC    PL6'0'
         DC    CL20'PROTECT      SVC  98'
ANZSVC99 DC    PL6'0'
         DC    CL20'DDDYNAM      SVC  99'
ANZSV100 DC    PL6'0'
         DC    CL20'SUBMIT       SVC 100'
ANZSV101 DC    PL6'0'
         DC    CL20'QTIP         SVC 101'
ANZSV102 DC    PL6'0'
         DC    CL20'AQCTL        SVC 102'
ANZSV103 DC    PL6'0'
         DC    CL20'XLATE        SVC 103'
ANZSV104 DC    PL6'0'
         DC    CL20'TOPCTL       SVC 104'
ANZSV105 DC    PL6'0'
         DC    CL20'IMAGLIB      SVC 105'
ANZSV106 DC    PL6'0'
         DC    CL20'*RESERVED*   SVC 106'
ANZSV107 DC    PL6'0'
         DC    CL20'MODESET      SVC 107'
ANZSV108 DC    PL6'0'
         DC    CL20'*RESERVED*   SVC 108'
ANZSV109 DC    PL6'0'
         DC    CL20'ESR          SVC 109'
ANZSV110 DC    PL6'0'
         DC    CL20'DSTATUS      SVC 110'
ANZSV111 DC    PL6'0'
         DC    CL20'*RESERVED*   SVC 111'
ANZSV112 DC    PL6'0'
         DC    CL20'RELEASE      SVC 112'
ANZSV113 DC    PL6'0'
         DC    CL20'SIR          SVC 113'
ANZSV114 DC    PL6'0'
         DC    CL20'EXCPVR       SVC 114'
ANZSV115 DC    PL6'0'
         DC    CL20'BLKPAGE      SVC 115'
ANZSV116 DC    PL6'0'
         DC    CL20'ESR (HASP)   SVC 116'
ANZSV117 DC    PL6'0'
         DC    CL20'ESR (HASP)   SVC 117'
ANZSV118 DC    PL6'0'
         DC    CL20'*RESERVED*   SVC 118'
ANZSV119 DC    PL6'0'
         DC    CL20'TESTAUTH     SVC 119'
ANZSV240 DC    PL6'0'
         DC    CL20'USER-SVC T4      240'
ANZSV241 DC    PL6'0'
         DC    CL20'USER-SVC T4 TMS  241'
ANZSV242 DC    PL6'0'
         DC    CL20'USER-SVC T4 TMS  242'
ANZSV243 DC    PL6'0'
         DC    CL20'USER-SVC T4 RMS  243'
ANZSV244 DC    PL6'0'
         DC    CL20'USER-SVC T4      244'
ANZSV245 DC    PL6'0'
         DC    CL20'USER-SVC T4      245'
ANZSV246 DC    PL6'0'
         DC    CL20'USER-SVC T4 IMS  246'
ANZSV247 DC    PL6'0'
         DC    CL20'USER-SVC T3      247'
ANZSV248 DC    PL6'0'
         DC    CL20'USER-SVC T3      248'
ANZSV249 DC    PL6'0'
         DC    CL20'USER-SVC T3      249'
ANZSV250 DC    PL6'0'
         DC    CL20'USER-SVC T2      250'
ANZSV251 DC    PL6'0'
         DC    CL20'USER-SVC T2 IMS  251'
ANZSV252 DC    PL6'0'
         DC    CL20'USER-SVC T1      252'
ANZSV253 DC    PL6'0'
         DC    CL20'USER-SVC T1      253'
ANZSV254 DC    PL6'0'
         DC    CL20'USER-SVC T1      254'
ANZSV255 DC    PL6'0'
         DC    CL20'USER-SVC T1 IMS  255'
ANZSVC   DC    PL6'0'
         DC    CL20'SONSTIGE SVC''S   ***'
ANZFHL   DC    PL6'0'
         DC    CL20'*** FALSCHE ***'
         DC    PL6'0'
         DC    CL20'--------------------'
ANZEND1  EQU   *
         DC    C'*'               ERSTER SCHLUSS DER TABELLE
ANZAHL   DC    PL6'0'
         DC    CL20'SAETZE EINGELESEN'
         DC    PL6'0'
         DC    CL20'===================='
ANZIONF  DC    PL6'0'
         DC    CL20'I/O''S OHNE SIO''S'
ANZIONEG DC    PL6'0'
         DC    CL20'NEGATIVE EXCP-ZEITEN'
ANZEND2  EQU   *
         DC    C'*'               ZWEITERSCHLUSS DER TABELLE
         EJECT
ACHT     DS    D
AN       DC    C'*HERRN TAUCHNITZ*SYSTEMTECHNIK*WEGEN  G T F ***'
ANSADDR  DS    7F
BLDLPTR  DC    H'1'
         DC    H'58'
BLDLNAME DC    CL8' '
         DC    XL50'00'
CHECKID  DC    CL16'*GTF-CHKPT-....*'
CHKPTANZ DC    PL3'0'
DEZTAB1  CVTAB (DANZAHL,0,DEXCP,0,DMIKROS,0,DDW,0),TYPE=P
         DS    0D
DANZAHL  DC    PL8'0'
DEXCP    DC    PL8'0'
DMIKROS  DC    PL8'0'
DDW      DC    PL8'0'
         DS    0D
DISK     DC    C'DISK    ',D'0',D'0'
DW       DS    D
EXITLIST DS    0F
         DC    X'06'              END-OF-VOLUME-EXIT FUER CHECKPOINT
         DC    AL3(CHKPTRTN)
         DC    X'80'              ENDE EXITLISTE
FW       DC    F'0'
GKTAB1   DS    0D
GANZAHL  DC    D'0'
GEXCP    DC    D'0'
GMIKROS  DC    D'0'
GDW      DC    D'0'
HEADTEXT DC    C'GTFTRAZE - DIE AUSGEWERTETEN GTF-SAETZE - IM ERSTEN TEI
               IL SEHEN SIE DIE SVC''S NACH HAEUFIGKEITEN ...  SEITE   *
                          '
HEADTXT2 DC    C'*MODULE* AUFRUFE KUMULATIV (MODUL-GROESSE*LPALIB*KUMUL*
               ATIV) (MODUL-GROESSE*LNKLIB*KUMULATIV) *SVCLIB*SONSTIGE**
                         '
H0RETTE  DS    F
LEVEL    DC    C'004 '
NAME     DC    C'DER TRAZZENDE GLEITKOMMAGETEEFFBAER'
P0RETTE  DS    F
RECTYP   DC    X'00'              S=SHORT, L=LONG (MIT ZEITSTEMPEL)
RETTE14  DS    F
SUMLNK   DC    PL8'0'
SUMLPA   DC    PL8'0'
SUMSVC   DC    PL8'0'
SZ       DC    PL3'0'
SUMME    DC    PL8'0'
         DS    0D
TAPE     DC    C'TAPE    ',D'0',D'0'
         DS    0D
ZWOELF   DS    CL12
ZZ       DC    PL3'0'
         EJECT
         PRINT GEN
*
* HIER WERDEN DIE GUELTIGEN GTF-SATZ-HEAD-CODES SICHTBAR GEMACHT
*
         SPACE
         IMDMEDIT
         SPACE
         PRINT NOGEN
         EJECT
*
* EIN PAAR DCB'S MUESSEN AUCH SEIN
*
CHKPT    DCB   DSORG=PS,MACRF=W,RECFM=U,DEVD=TA,DDNAME=CHKPT,NCP=2,    *
               OPTCD=C
         SPACE
DATAIN   DCB   MACRF=GL,RECFM=VB,DSORG=PS,LRECL=500,EODAD=EOF,         *
               EXLST=EXITLIST,                                         *
               DDNAME=SYSUT1
         SPACE
DATAOUT  DCB   MACRF=PM,RECFM=VB,DSORG=PS,LRECL=500,DDNAME=SYSUT2
         SPACE
SYSPRINT DCB   MACRF=PM,LRECL=121,DDNAME=SYSPRINT,RECFM=FM,DSORG=PS
         SPACE
LPALIB   DCB   DSORG=PO,MACRF=(R),DDNAME=LPALIB
         SPACE
SVCLIB   DCB   DSORG=PO,MACRF=(R),DDNAME=SVCLIB
         SPACE 5
*
* ... UND AUCH EIN DRUCKBEREICH
*
         SPACE
C        DC    X'09'
         SPACE
D        DC    120C' '
         SPACE
         EJECT
*
* LITERALE MUESSEN WOHL SEIN
*
         LTORG
         EJECT
*
* UND HIER NUN DIE DIVERSEN TABELLEN-TAFELN
*
         DS    0D
         DC    CL32'****************TABSIO**********'
TABSIO   DS    0D
TABIO    EQU   *
         DC    50XL12'00'         2BYTES DEVADDR, 2BYTES RQE, 8 B TIME
TABIOEND EQU   *
         ORG   TABIO
         DC    C'*'
         ORG
         DC    C'$'
         SPACE
         DS    0D
         DC    CL32'****************TABEXCP*********'
TABEXCP  DS    0D
         DC    100XL24'0' 2B DEVICEADR, 6B FREI, 8B KUMULMIKROS, 8B ANZ
TABEXCPE EQU   *
         ORG   TABEXCP
         DC    C'*'
         ORG
         DC    C'$'
         SPACE
         DS    0D
         DC    CL32'****************TABSVC**********'
TABSVC   DS    0D
         DC    2000XL12'0'        8 BYTES FUER NAMEN, 4 FUER ANZAHL
         ORG   TABSVC
         DC    C'*'
         ORG
         DC    C'$'
         EJECT
TABUNITS EQU   *
         DC    X'0008',C'008 - 3886'
         DC    CL30'BELEGLESER NEUER SORTE'
         DC    X'0009',C'009 - 3210'
         DC    CL30'DEVICE-POOL STANDKONSOLE'
         DC    X'000A',C'00A - 2501'
         DC    CL30'KARTENLESER'
         DC    X'000C',C'00C - 254R'
         DC    CL30'KARTENLESER'
         DC    X'000D',C'00D - 254P'
         DC    CL30'STANZER'
         DC    X'000E',C'00E - 1403'
         DC    CL30'UCS-PRINTER N1 (22 PRINT-CCWS)'
         DC    X'0010',C'010 - 1287'
         DC    CL30'BELEGLESER ALTER SORTE'
         DC    X'001E',C'01E - 1403'
         DC    CL30'UCS-PRINTER N1 (22 PRINT-CCWS)'
         DC    X'001F',C'01F - 3215'
         DC    CL30'HAUPTKONSOLE'
         DC    X'0030',C'030 - 3277'
         DC    CL30'BILDSCHIRM-MASTER-KONSOLE'
         DC    X'0031',C'031 - 3277'
         DC    CL30'TSO-BILDSCHIRM ARBEITSVORBERTG'
         DC    X'0032',C'032 - 3277'
         DC    CL30'TSO-/IMS-BILDSCHIRM'
         DC    X'0033',C'033 - 3286'
         DC    CL30'IMS-DRUCKER'
         DC    X'0034',C'034 - 3286'
         DC    CL30'IMS-DRUCKER'
         DC    X'0035',C'035 - 3277'
         DC    CL30'TSO-/IMS-BILDSCHIRM'
         DC    X'0036',C'036 - 3277'
         DC    CL30'TSO-/IMS-BILDSCHIRM'
         DC    X'0037',C'037 - 3277'
         DC    CL30'TSO-/IMS-BILDSCHIRM'
         DC    X'0038',C'038 - 3277'
         DC    CL30'TSO-/IMS-BILDSCHIRM'
         DC    X'0039',C'039 - 3277'
         DC    CL30'TSO-/IMS-BILDSCHIRM'
         DC    X'003A',C'03A - 3277'
         DC    CL30'TSO-/IMS-BILDSCHIRM'
         DC    X'003B',C'03B - 3277'
         DC    CL30'TSO-/IMS-BILDSCHIRM'
         DC    X'003F',C'03F - 3705'
         DC    CL30'NATIVE CHANNEL 3705'
         DC    X'0040',C'040 - BSCA'
         DC    CL30'REMOTE LINE IMS MIT 3270-TYP'
         DC    X'0046',C'046 - 2740'
         DC    CL30'IMS-MASTERKONSOLE 2740'
         DC    X'004F',C'04F - 3705'
         DC    CL30'NATIVE CHANNEL 3705-II'
         DC    X'0050',C'050 - BSCA'
         DC    CL30'REMOTE LINE IMS MIT 3270-TYP'
         DC    X'0051',C'051 - BSCA'
         DC    CL30'REMOTE LINE IMS MIT 3270-TYP'
         DC    X'0054',C'054 - 2740'
         DC    CL30'IMS-MASTERKONSOLE 2740'
         DC    X'0150',C'150 - 3330'
         DC    CL30'WORK00 - PUBLIC    WORKPLATTE'
         DC    X'0151',C'151 - 3330'
         DC    CL30'WORK01 - STORAGE   WORKPLATTE'
         DC    X'0152',C'152 - 3330'
         DC    CL30'333001 - PRIVATE   OS-DATEIEN'
         DC    X'0153',C'153 - 3330'
         DC    CL30'333002 - PRIVATE   OS-DATEIEN'
         DC    X'0154',C'154 - 3330'
         DC    CL30'SPOOL1 - PRIVATE   HASP-SPOOL'
         DC    X'0155',C'155 - 3330'
         DC    CL30'DLIB01 - PRIVATE   PAGEDATASET'
         DC    X'0156',C'156 - 3330'
         DC    CL30'VS2LIB - PRIVATE   PRIVATE LIB'
         DC    X'0157',C'157 - 3330'
         DC    CL30'VS2RES - PRIVATE   SYSTEM+JOBQ'
         DC    X'0158',C'158 - 3330'
         DC    CL30'333005 - PRIVATE   OS-DATEIEN'
         DC    X'0159',C'159 - 3330'
         DC    CL30'333004 - PRIVATE   OS-DATEIEN'
         DC    X'015A',C'15A - 3330'
         DC    CL30'IMSDB1 - PRIVATE   ONLINE-DBS'
         DC    X'015B',C'15B - 3330'
         DC    CL30'IMSDB2 - PRIVATE   ONLINE-DBS'
         DC    X'015C',C'15C - 3330'
         DC    CL30' '
         DC    X'015D',C'15D - 3330'
         DC    CL30' '
         DC    X'015E',C'15E - 3330'
         DC    CL30'IMSDB3 - PRIVATE   ONLINE-DBS'
         DC    X'015F',C'15F - 3330'
         DC    CL30'TSOWK1 - STORAGE   TSO-PLATTE'
         DC    X'0250',C'250 - 3330'
         DC    CL30'WORK00 - PUBLIC    WORKPLATTE'
         DC    X'0251',C'251 - 3330'
         DC    CL30'WORK01 - STORAGE   WORKPLATTE'
         DC    X'0252',C'252 - 3330'
         DC    CL30'333001 - PRIVATE   OS-DATEIEN'
         DC    X'0253',C'253 - 3330'
         DC    CL30'333002 - PRIVATE   OS-DATEIEN'
         DC    X'0254',C'254 - 3330'
         DC    CL30'SPOOL1 - PRIVATE   HASP-SPOOL'
         DC    X'0255',C'255 - 3330'
         DC    CL30'DLIB01 - PRIVATE   PAGE-DS(P)'
         DC    X'0256',C'256 - 3330'
         DC    CL30'VS2LIB - PRIVATE   ETERNITLIB'
         DC    X'0257',C'257 - 3330'
         DC    CL30'VS2RES - PRIVATE   SYSTEM+JQ '
         DC    X'0258',C'258 - 3330'
         DC    CL30'333005 - PRIVATE   OS-DATEIEN'
         DC    X'0259',C'259 - 3330'
         DC    CL30'333004 - PRIVATE   OS-DATEIEN'
         DC    X'025A',C'25A - 3330'
         DC    CL30'IMSDB1 - PRIVATE   ONLINE-DBS'
         DC    X'025B',C'25B - 3330'
         DC    CL30'IMSDB2 - PRIVATE   ONLINE-DBS'
         DC    X'025C',C'25C - 3330'
         DC    CL30' '
         DC    X'025D',C'25D - 3330'
         DC    CL30' '
         DC    X'025E',C'25E - 3330'
         DC    CL30'IMSDB3 - PRIVATE   ONLINE-DBS'
         DC    X'025F',C'25F - 3330'
         DC    CL30'TSOWK1 - STORAGE   TSO-PLATTE'
         DC    X'0180',C'180 - 3420'
         DC    CL30'3420-7'
         DC    X'0181',C'181 - 3420'
         DC    CL30'3420-7'
         DC    X'0182',C'182 - 3420'
         DC    CL30'3420-7'
         DC    X'0183',C'183 - 3420'
         DC    CL30'3420-7'
         DC    X'0184',C'184 - 3420'
         DC    CL30'3420-7'
         DC    X'0185',C'185 - 3420'
         DC    CL30'3420-7'
         DC    X'0280',C'280 - 3420'
         DC    CL30'3420-7'
         DC    X'0281',C'281 - 3420'
         DC    CL30'3420-7'
         DC    X'0282',C'282 - 3420'
         DC    CL30'3420-7'
         DC    X'0283',C'283 - 3420'
         DC    CL30'3420-7'
         DC    X'0284',C'284 - 3420'
         DC    CL30'3420-7'
         DC    X'0285',C'285 - 3420'
         DC    CL30'3420-7'
         DC    X'0380',C'380 - 3420'
         DC    CL30'3420-7'
         DC    X'0381',C'381 - 3420'
         DC    CL30'3420-7'
         DC    X'0382',C'382 - 3420'
         DC    CL30'3420-7'
         DC    X'0383',C'383 - 3420'
         DC    CL30'3420-7'
         DC    X'0384',C'384 - 3420'
         DC    CL30'3420-7'
         DC    X'0385',C'385 - 3420'
         DC    CL30'3420-7'
         DC    C'*'
         SPACE 5
         END   GTFTRAZE
CVDZ     CSECT
         B     12(R15)        KONSTANTEN UEBERSPRINGEN
         DC    X'7'             PROGRAMM
         DC    CL7'CVDZ'                IDENTIFIKATION
         STM   R14,R12,12(R13) REGISTER DES RUFENDEN PROGRAMMES SICHERN
         BALR  R12,R0          ADRESSIERBARKEIT
         USING *,R12                            HERSTELLEN
         LR    R2,R13          SAVE
         LA    R13,SAVE            AREAS
         ST    R13,8(0,R2)               VER
         ST    R2,4(0,R13)                  KETTEN
*
*     *****************************************************************
         SPACE 3
*     *****************************************************************
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R10      EQU   10
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
X        EQU   11
*
*
*
*        UEBERNEHMEN DER PARAMETER-ADRESSEN
         LM    R2,R3,0(R1) (R2)=PTR GKTAB, (R3)=PTR DEZTAB
         SLR   X,X   TNDEX=0
*
         L     R10,0(0,R3)
         SRL   R10,24   (R10) = COUNT
         LA    R3,4(0,R3)
*
LOOP     L     R4,0(X,R3) (R4)= BYTE 0 LAENGE, BYTES1 BIS3 PTR DEZ-ZAHL
         L     R5,4(X,R3) (R5)= POSITION DES KOMMAS
         SRL   R5,24
         STH   R5,CVD+12
         LD    R0,0(X,R2)
*
CVD      STM   R13,R15,XGKSAVE
         BAL   R14,XDEZIMAL
         BAL   R14,XFORMAT
         DC    H'0'
         ZAP   SCRATCH,XGKDZWRT(8)
         B     XGKEXP+2
XDEZIMAL STD   R6,XGKSAVE+16
         STD   R4,XGKSAVE+24
         ST    R14,XGKSAVE+12
         LPDR  R6,R0
         BZ    XGK140
         STD   R6,XGKDW1
         SR    R0,R0
         CLI   XGKDW1,X'40'
         BE    XGK13
         BL    XGK05
         CLC   XGKDW1,XGKETBND
         BL    XGK07
         DD    R6,XGKETB
         LA    R0,R1
         B     XGK07
XGK05    XI    XGKDW1,X'7F'
         CLI   XGKDW1,X'7E'
         BL    XGK06
         MD    R6,XGKETB+16
         STD   R6,XGKDW1
         XI    XGKDW1,X'7F'
         SH    R0,XGKKH3
XGK06    IC    R1,XGKDW1
         LA    R1,1(R1)
         STC   R1,XGKDW1
XGK07    LA    R13,XGKETB
         ST    R14,XGKSAVE+12
         LA    R14,8
         LA    R15,XGKETB+600
XGK08    CLC   XGKDW1(1),0(R13)
         BE    XGK14
         BXLE  R13,R14,XGK08
XGK14    L     R14,XGKSAVE+12
XGK09    CLC   XGKDW1,0(R13)
         BL    XGK10
         LA    R13,8(R13)
         B     XGK09
XGK10    SH    R13,XGKKH8
         CLC   XGKDW1,0(R13)
         BL    XGK10
         LA    R15,XGKETB-16
         CD    R6,XGKKD0
         BL    XGK11
         DD    R6,8(R13)
         LCR   R15,R15
         B     XGK12
XGK105   LA    R13,8(R13)
         B     XGK11
XGK106   SH    R13,XGKKH8
XGK11    LDR   R4,R6
         MD    R4,8(R13)
         CD    R4,XGKK16M1
         BL    XGK105
         CD    R4,XGKKD0
         BC    10,XGK106
         LDR   R6,R4
         LCR   R13,R13
XGK12    AR    R13,R15
         SRA   R13,3
         AR    R0,R13
XGK13    STD   R6,XGKDW1
         CVD   R0,XGKDW2
         ZAP   XGKEXP,XGKDW2+6(2)
         LM    R0,R1,XGKDW1
         SLDL  R0,8
         SRDL  R0,1
         LR    R15,R0
         SR    R14,R14
         M     R14,XGKK10H9
         SLDL  R14,1
         CVD   R14,XGKARB
         MVC   XGKDW1(5),XGKARB+3
         SRL   R15,1
         SR    R14,R14
         M     R14,XGKK10H8
         SLDL  R14,1
         CVD   R14,XGKARB
         MVN   XGKDW1+4(1),XGKARB+3
         MVC   XGKDW1+5(4),XGKARB+4
         SRL   R1,1
         SR    R0,R0
         M     R0,XGKK10H8
         SLL   R0,1
         CVD   R0,XGKARB
         MVO   XGKARB+3(6),XGKARB+3(5)
         MVC   XGKARB+8(5),XGKKP0
         DP    XGKARB+2(11),XGKK2H31
         AP    XGKDW1(9),XGKARB+2(5)
         LTDR  R0,R0
         BP    *+8
         OI    XGKDW1+8,X'01'
         ZAP   XGKARB,XGKDW1(9)
         AP    XGKDW1(9),XGKDW1+8(1)
         MVO   XGKDW1(9),XGKDW1(8)
         CLI   XGKDW1,X'0'
         BE    XGK136
         MVO   XGKDW1(9),XGKDW1(8)
XGK135   LD    R6,XGKSAVE+16
         LD    R4,XGKSAVE+24
         L     R14,XGKSAVE+12
         BR    R14
XGK136   SP    XGKEXP,XGKKP1
         MP    XGKARB+5(11),XGKKP10
         B     XGK135
XGK140   ZAP   XGKEXP,XGKKP0+4(1)
         ZAP   XGKDW1(9),XGKKP0+4(1)
         ZAP   XGKARB,XGKKP0+4(1)
         B     XGK135
XGKKD0   DC    D'1'
XGKK16M1 DC    D'0.0625'
XGKK10H9 DC    F'10E8'
XGKK10H8 DC    F'10E7'
XGKK2H31 DC    P'2147483648'
XGKKP0   DC    PL5'0'
XGKKP1   DC    P'1'
XGKKP10  DC    P'10'
XGKKH3   DC    H'3'
XGKKH8   DC    H'8'
XGKEXP   DS    CL2
         B     XGKKH12+2
XFORMAT  LH    R0,0(R14)
         LA    R1,16
         SR    R1,R0
         ZAP   XGKDW1,XGKEXP
         CVB   R0,XGKDW1
         SR    R1,R0
         BM    XGK18
         CH    R1,XGKKH15
         BH    XGK185
         LA    R15,0
         CH    R1,XGKKH12
         BNH   XGK16
         SH    R1,XGKKH12
         LA    R15,12
XGK16    SR    R0,R0
         M     R0,XGKKF7
         LA    R0,XGKFRMTB
         AR    R1,R0
         DP    XGKARB,0(7,R1)
         CH    R15,XGKKH12
         BNE   XGK19
         LR    R1,R15
         SR    R15,R15
         ZAP   XGKARB,XGKARB(9)
         B     XGK16
XGK18    ZAP   XGKARB(1),XGKK2H31+4(2)
         BC    15,2(R14)
XGK185   ZAP   XGKARB(9),XGKFRMTB+13(1)
XGK19    AP    XGKARB(9),XGKARB+8(1)
         MVO   XGKARB(9),XGKARB(8)
         BC    15,2(R14)
XGKFRMTB DC    PL7'1,10,100,1000,10000,100000,1000000,10000000,10000000*
               0,1000000000,10000000000,100000000000,1000000000000'
XGKKF7   DC    F'7'
         CNOP  2,4
XGKKH12  DC    H'12'
         B     XGKHW+2
XGKDW1   DS    D
XGKMANT  EQU   XGKDW1+1
XGKDW2   DS    D
XGKARB   DS    CL16
XGKDZWRT EQU   XGKARB+1
XGKSAVE  DS    4D
XGKKH15  DC    H'15'
XGKHW    DS    H
         B     XGKETBND+8
XGKSF    DC    D'1'
XGKETB   DC    D'1E1,1E2,1E3,1E4,1E5,1E6,1E7,1E8,1E9,1E10,1E11,1E12,1E1*
               3,1E14,1E15,1E16,1E17,1E18,1E19,1E20,1E21,1E22,1E23'
         DC    D'1E24,1E25,1E26,1E27,1E28,1E29,1E30,1E31,1E32,1E33,1E34*
               ,1E35,1E36,1E37,1E38,1E39,1E40,1E41,1E42,1E43,1E44,1E45'
         DC    D'1E46,1E47,1E48,1E49,1E50,1E51,1E52,1E53,1E54,1E55,1E56*
               ,1E57,1E58,1E59,1E60,1E61,1E62,1E63,1E64,1E65,1E66,1E67'
         DC    D'1E68,1E69,1E70,1E71,1E72,1E73,1E74'
XGKETBND DC    D'1E75'
         LM    R13,R15,XGKSAVE
*
*
         SRDL  R4,24
         SRL   R5,8
         BCTR  R4,R0
         LA    R6,R7
         LA    R8,SCRATCH IN DIESEM FELD STEHT DIE DEZIMAL-ZAHL
         CR    R4,R6  PRUEFEN, OB L1 GROESSER 8
         BE    MULT
         BH    L2GT8
*        L1 IST KLEINER ALS 8
         SR    R6,R4   ADRESS-INKREMENT BERECHNEN
         AR    R8,R6       UND ZUR GRUNDADRESSE ADDIEREN
MULT     MH    R4,KH17     L2 GLEICH L1 MACHEN
         B     EXECUTE
L2GT8    CH    R4,KH15 PRUEFEN, OB L1 GROESSER 16
         BH    ERROR
         SLL   R4,4
         OR    R4,R6
EXECUTE  EX    R4,PASSARG
         LA    X,8(0,X)
ERROR    NOP   *
         BCT   R10,LOOP
*
*     *****************************************************************
         SPACE 3
*     *****************************************************************
*
*        PROGRAMM - AUSGANG
         L     R13,SAVE+4
         LM    R14,R12,12(R13)
         MVI   12(R13),255
         BR    R14
*
*     *****************************************************************
         SPACE 3
*     *****************************************************************
*
*        DEFINITIONEN
*
SAVE     DS    9D
*
PASSARG  ZAP   0(R1,R5),0(R1,R8)
SCRATCH  DS    CL8
KH17     DC    H'17'
KH15     DC    H'15'
*
*     *****************************************************************
         LTORG
         END   CVDZ
CVGK     TITLE 'CVGK - DER, DER DEZIMALE IN GLEITKOMMAZAHLEN FLOATET'
CVGK     CSECT
         B     12(R15)   KONSTANTEN UEBERSPRINGEN
         DC    X'7'         PROGRAMM
         DC    CL7'CVGK'            IDENTIFIKATION
         STM   R14,R12,12(R13) REGISTER DES RUFENDEN PROGRAMMES SICHERN
         BALR  R12,R0      ADRESSIERBARKEIT
         USING *,R12                         HERSTELLEN
         LR    R2,R13      SAVE
         LA    R13,SAVE        AREAS
         ST    R13,8(0,R2)          VER
         ST    R2,4(0,R13)              KETTEN
*
*     *****************************************************************
*     *****************************************************************
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
X        EQU   11
*
         LA    R14,X'0E'     DISABLE
         SLL   R14,24           PROGRAMM CHECK INTERUPT
         SPM   R14                               SIGNIFICANCE
*
*        UEBERNEHMEN DER PARAMETER-ADRESSEN
*
*
         LM    R2,R3,0(R1)
         SLR   X,X
         L     R10,0(0,R2)  (R10) = COUNT
         SRL   R10,24
         LA    R2,4(0,R2)
LOOP     L     R4,0(X,R2) (R4)= BYTE 0 LAENGE, BYTES 1 BIS 3 PER PTR
         L     R5,4(X,R2) POSITION DES KOMMAS               DEZ-ZAHL
         LH    R6,6(X,R2)  INDEX LADEN
         SRL   R5,24
         STH   R5,FLOAT+14
         SRDL  R4,24
         SRL   R5,8
         BCTR  R4,R0
         EX    R4,PASSARG(R6)
*
FLOAT    STM   R14,R15,XGKSAVE
         UNPK  XGKARB,SCRATCH
         BAL   R14,XGLEIT
         DC    H'0'
         B     XGKKHM60+2
XGLEIT   NI    XGK02+1,X'0F'
         MVZ   XGKARB+6(1),XGKARB+15
         PACK  XGKDW1,XGKARB(7)
XGK01    CVB   R0,XGKDW1
         LPR   R1,R0
         N     R0,XGKMSK
         O     R0,XGKK4E
XGK02    NOP   XGK03
         STM   R0,R1,XGKDW2
         OI    XGK02+1,X'F0'
         PACK  XGKDW1,XGKARB+7(9)
         B     XGK01
XGK03    STM   R0,R1,XGKDW1
         LD    R0,XGKDW2
         MD    R0,XGKKE9
         AD    R0,XGKDW1
         TM    0(R14),X'F0'
         BO    XGK04
         LH    R15,0(R14)
         SLA   R15,3
         DD    R0,XGKSF(R15)
         BC    15,2(R14)
XGK04    CH    R15,XGKKHM60
         BNL   XGK041
         DD    R0,XGKSF+120
         B     XGK042
XGK041   SH    R15,XGKKH15
XGK042   SLA   R15,3
         BNM   XGK045
         LPR   R15,R15
         DD    R0,XGKSF(R15)
         BC    15,2(R14)
XGK045   MD    R0,XGKSF(R15)
         BC    15,2(R14)
XGKKE9   DC    D'1E9'
XGKMSK   DC    X'80000000'
XGKK4E   DC    X'4E000000'
XGKKHM60 DC    H'-60'
         B     XGKHW+2
XGKDW1   DS    D
XGKMANT  EQU   XGKDW1+1
XGKDW2   DS    D
XGKARB   DS    CL16
XGKDZWRT EQU   XGKARB+1
XGKSAVE  DS    4D
XGKKH15  DC    H'15'
XGKHW    DS    H
         B     XGKETBND+8
XGKSF    DC    D'1'
XGKETB   DC    D'1E1,1E2,1E3,1E4,1E5,1E6,1E7,1E8,1E9,1E10,1E11,1E12,1E1*
               3,1E14,1E15,1E16,1E17,1E18,1E19,1E20,1E21,1E22,1E23'
         DC    D'1E24,1E25,1E26,1E27,1E28,1E29,1E30,1E31,1E32,1E33,1E34*
               ,1E35,1E36,1E37,1E38,1E39,1E40,1E41,1E42,1E43,1E44,1E45'
         DC    D'1E46,1E47,1E48,1E49,1E50,1E51,1E52,1E53,1E54,1E55,1E56*
               ,1E57,1E58,1E59,1E60,1E61,1E62,1E63,1E64,1E65,1E66,1E67'
         DC    D'1E68,1E69,1E70,1E71,1E72,1E73,1E74'
XGKETBND DC    D'1E75'
         LM    R14,R15,XGKSAVE
*
         STD   R0,0(X,R3)
         LA    X,8(0,X)
         BCT   R10,LOOP
*
*     *****************************************************************
         SPACE 3
*     *****************************************************************
*
*        PROGRAMM-AUSGANG
         L     R13,SAVE+4
         L     R14,12(0,R13)
         LM    R2,R12,28(R13)
         MVI   12(R13),255
         BR    R14
*
*     *****************************************************************
*
*
*
*     *****************************************************************
*
*        DEFINITIONEN
*
SAVE     DS    9D
*
PASSARG  PACK  SCRATCH,0(R1,R5)
         ZAP   SCRATCH,0(R1,R5)
SCRATCH  DS    CL8
*     *****************************************************************
         LTORG
         END   CVGK
***********************************************************************
***********************************************************************
***************                                     *                 *
***************         PROGRAMM-FEHLER-BEHANDLUNG  *  VON            *
***************                                     * JACQUES TOUCHET *
***********************************************************************
CHECKRT  CSECT
         ENTRY CHECKRT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         USING CHECKRT,R15
         STM   R0,R15,CKSAVE
         B     CKSAVE+64
CKSAVE   DS    16F
         LR    R4,R15
         DROP  R15
         USING CHECKRT,R4
         L     R1,16         CVT ADR AUS LOC HEX'10'
         L     R1,0(R1)      TCB ADR IN R1 LADEN
         L     R1,4(R1) ADR DES LAUF. TCB IN R1 LADEN
         L     R1,12(R1) TIOT ADR AUS TCB IN R1 LADEN
         MVC   CONSOR+16(8),0(R1) JOBNAME
         MVC   UPRO2+8(8),0(R1) JOBNAME
         MVC   STEPNAME,8(R1)
         L     R1,CKSAVE+4
         L     R2,8(R1)
         SLL   R2,8
         SRL   R2,8
         BCTR  R2,0
         BCTR  R2,0
         CL    R2,STOPADDR
         BNE   OBTEST
         XC    STOPADDR,STOPADDR
         ST    R2,8(R1)
         MVC   0(2,R2),STOPINST
         MVC   UPRO2+17(18),=C'STOP-ADDR ERREICHT'
         MVI   UPRO2+5,X'1F'
         BAL   R10,UPRO2
         B     A
         SPACE
OBTEST   L     R12,CKSAVE+12
         LA    R12,124(R12)
         CR    R12,R2
         BNE   FEHLER
         MVC   UPRO2+17(27),=C'JCL CALL  STOP-ADR SETZEN !'
         MVI   UPRO2+5,X'28'
         BAL   R10,UPRO2
         B     A
         EJECT
FEHLER   L     R1,CKSAVE+4
         LA    R1,4(R1)           OLD PSW ADDR.
         L     R2,4(R1)
         SLL   R2,8
         SRL   R2,8
         L     R12,CKSAVE+12
         S     R2,100(R12)      - REL. FACTOR
         ST    R2,DINTVL
         UNPK  UPRO2+17(9),0(5,R1)
         UNPK  UPRO2+25(9),4(5,R1)
         UNPK  UPRO2+34(9),DINTVL(5)
         LA    R2,TRANSTAB-240
         TR    UPRO2+17(25),0(R2)
         MVI   UPRO2+33,C' '
         XR    R2,R2
         IC    R2,3(R1)
         SLL   R2,4
         LA    R2,CKTEXT-16(R2)
         MVC   UPRO2+42(2),BLANK
         MVC   UPRO2+44(16),0(R2)
         MVI   UPRO2+5,X'38'
         BAL   R10,UPRO2
         CLC   STEPNAME(4),=C'TEST'
         BNE   DUMP
         EJECT
***********************************************************************
********************************* WAS IST ZU TUN **********************
***********************************************************************
A        LA    R11,WHAT
         BAL   R10,UPRO1
         B     REPLY1
***********************************************************************
B        LA    R11,ONCE
         BAL   R10,UPRO1
***********************************************************************
         SPACE
REPLY1   CLI   ANTWORT,C'E'
         BE    END
         CLI   ANTWORT,C'N'
         BE    NEXT
         CLI   ANTWORT,C'A'
         BE    GOTO
         CLI   ANTWORT,C'G'
         BE    GETREG
         CLI   ANTWORT,C'R'
         BE    PRINTREG
         CLI   ANTWORT,C'S'
         BE    STORAGE
         CLI   ANTWORT,C'I'
         BE    INPUT
         CLI   ANTWORT,C'H'
         BE    HALT
         CLI   ANTWORT,C'W'
         BE    WAIT
         CLI   ANTWORT,C'D'
         BE    DUMP
         CLI   ANTWORT,C'P'
         BE    PDUMP
         B     B                  ONCE MORE
         EJECT
***********************************************************************
*                             *** END      ***                        *
***********************************************************************
END      ABEND 4090
***********************************************************************
*                             *** NEXT     ***                        *
***********************************************************************
NEXT     LM    R0,R15,CKSAVE
         BR    R14
***********************************************************************
*                             *** GOTO     ***                        *
***********************************************************************
GOTO     LA    R11,TO
         BAL   R10,UPRO1
         L     R10,FULL
         L     R1,CKSAVE+4
         ST    R10,8(R1)
         B     NEXT
***********************************************************************
*                             *** WAIT     ***                        *
***********************************************************************
WAIT     LA    R11,TIME
         BAL   R10,UPRO1
         MVC   DINTVL,ANTWORT
         STIMER WAIT,,DINTVL=DINTVL
         MVC   UPRO2+17(12),=C'TIME EXPIRED'
         MVI   UPRO2+5,X'19'
         BAL   R10,UPRO2
         B     A
         EJECT
***********************************************************************
*                             *** GETREG   ***                        *
***********************************************************************
GETREG   LA    R11,REG
         BAL   R10,UPRO1
         CLI   ANTWORT,193
         BL    B
         CLI   ANTWORT,198
         BNH   REGOK
         CLI   ANTWORT,240
         BL    B
         CLI   ANTWORT,249
         BH    B
REGOK    LA    R2,TRANSTAB-240
         TR    ANTWORT(1),0(R2)
         PACK  ANTWORT(2),ANTWORT(2)
         XR    R12,R12
         IC    R12,ANTWORT
         SLL   R12,2
         LA    R5,CKSAVE(R12)
         LA    R11,FOR
         BAL   R10,UPRO1
         L     R11,FULL
         ST    R11,0(R5)
         B     A
***********************************************************************
*                             *** DUMP     ***                        *
***********************************************************************
*        ABEND 4095,DUMP
         DS    0F
         DC    AL1(128) DUMP/STEP CODE
         DC    AL3(4095) COMPLETION CODE
DUMP     L     R0,CKSAVE RESTORE REG 0 BEFOR DUMP
         L     R1,*-8 LOAD CODES INTO REG 1
         LM    R2,R15,CKSAVE+8 RESTORE REG 2-15 BEFOR DUMP
         SVC   13 LINK TO ABEND ROUTINE
***********************************************************************
         EJECT
***********************************************************************
*                             *** INPUT    ***                        *
***********************************************************************
INPUT    LA    R11,ON
         BAL   R10,UPRO1
         L     R2,FULL
         LA    R11,TWO
         BAL   R10,UPRO1
         MVC   0(2,R2),FULL+2
         B     A
***********************************************************************
*                             *** HALT     ***                        *
***********************************************************************
HALT     LA    R11,AT
         BAL   R10,UPRO1
         L     R10,FULL
         MVC   STOPINST,0(R10)
         ST    R10,STOPADDR
         XC    0(2,R10),0(R10)    REASON OF PRCHCK
         B     A
***********************************************************************
*                             *** STORAGE  ***                        *
***********************************************************************
STORAGE  LA    R11,FROM
         BAL   R10,UPRO1
         MVC   UPRO2+17(6),ANTWORT
         MVI   UPRO2+14,X'49'
         LA    R9,1
         L     R5,FULL
         B     REGGRUP
***********************************************************************
         EJECT
***********************************************************************
*                             *** PRINTREG ***                        *
***********************************************************************
PRINTREG MVC   UPRO2+17(7),REGIS
         LA    R9,3
         LA    R5,CKSAVE+4
REGGRUP  LA    R2,TRANSTAB-240
         LA    R15,UPRO2+24
         LA    R2,5
NEXTREG  UNPK  0(9,R15),0(5,R5)
         TR    0(8,R15),0(R2)
         MVC   8(2,R15),BLANK
         LA    R15,10(R15)
         LA    R5,4(R5)
         BCT   R2,NEXTREG
         MVI   UPRO2+5,X'46'
         BAL   R10,UPRO2
         BCT   R9,REGGRUP
         B     A
***********************************************************************
         EJECT
***********************************************************************
*                             *** PDUMP    ***                        *
***********************************************************************
PDUMP    LA    R11,FROM
         BAL   R10,UPRO1
         MVC   ADDRLIST(4),FULL
         LA    R11,TO
         BAL   R10,UPRO1
         MVC   ADDRLIST+4(4),FULL
         OI    ADDRLIST+4,X'80'
         OPEN  (SNAPDCB,(OUTPUT))
*.......................  SNAP-MACRO SIMULATION ............
*        SNAP  DCB=SNAPDCB,PDATA=REGS,LIST=ADDRLIST        .
         L     R0,CKSAVE RESTORE REG 0 BEFOR SNAP          .
         LA    R1,SNEND ;                                  .
         LM    R2,R15,CKSAVE+8 RESTORE REG 2-15 BEFOR SNAP .
         CNOP  0,4 ;                                       .
         BAL   R1,0(R1) BRANCH AROUND PARAM LIST           .
         DC    AL1(0,0,132,32) ;                           .
         DC    A(SNAPDCB,0) DCB,TCB ADDRESS                .
         DC    A(ADDRLIST) ADDRESS OF SNAPSHOT LIST        .
SNEND    SVC   51 LINK TO SNAP ROUTINE                     .
         CNOP  2,4 ;                                       .
         BALR  R1,R0 ;                                     .
         B     8(R1) ;                                     .
BASER4   DC    A(CHECKRT) ;                                .
         L     R4,4(R1) RELOAD BASIS REGISTER 4            .
*...........................................................
         CLOSE SNAPDCB
         B     A
SNAPDCB  DCB   DSORG=PS,RECFM=VBA,MACRF=W,LRECL=125,BLKSIZE=882,       *
               DDNAME=SYSSNAP
***********************************************************************
*                             *** DEFINITION ***                      *
***********************************************************************
ONCE     DC    X'01'              ANTWORT-LAENGE
         DC    X'18'              TEXT-LAENGE+2+4
         DC    C'ONCE MORE'
ON       DC    X'06'
         DC    X'16'
         DC    C'ON ADDR'
TO       DC    X'06'
         DC    X'16'
         DC    C'TO ADDR'
AT       DC    X'06'
         DC    X'16'
         DC    C'AT ADDR'
FROM     DC    X'06'
         DC    X'18'
         DC    C'FROM ADDR'
TWO      DC    X'04'
         DC    X'16'
         DC    C'2 BYTES'
FOR      DC    X'08'
         DC    X'16'
         DC    C'4 BYTES'
WHAT     DC    X'01'
         DC    X'15'
         DC    C'WHAT ?'
REG      DC    X'01'
         DC    X'18'
         DC    C'REGNR 0-F'
TIME     DC    X'08'
         DC    X'1C'
         DC    C'TIME HHMMSS'
         DC    X'A3'
         DC    X'88'
         SPACE 3
         DS    0D
         DC    X'00FAFBFCFDFEFF40'
ADDRLIST EQU   *
DINTVL   DS    D
STOPADDR DS    F
FULL     DS    F
         DS    H
STOPINST DS    H
REGIS    DC    C'REG'
BLANK    DC    C'     '
         DC    C'    '
ANTWORT  DS    CL8
TRANSTAB DC    C'0123456789ABCDEF'
CKTEXT   DC    C'OPERATION       '
         DC    C'PRIV. OPERATION '
         DC    C'EXECUTION       '
         DC    C'PROTECTION      '
         DC    C'ADDRESSING      '
         DC    C'SPECIFICATION   '
         DC    C'DATA CHECK      '
         DC    C'FX-POINT OVERFL '
         DC    C'FX-POINT DIV    '
         DC    C'DECIMAL OVERFLOW'
         DC    C'DECIMAL DIVIDE  '
         DC    C'EXPONENT OVERFL '
         DC    C'EXPONENT UND-FL '
         DC    C'SIGNIFICATION   '
         DC    C'FL POINT DIVIDE '
ECB1     DS    D
WORK     DS    D
STEPNAME DS    CL8
         EJECT
***********************************************************************
*                             *** WRITE-UPRO'S ***                    *
***********************************************************************
UPRO1    MVC   CONSOR+4(1),0(R11) ANTWORT-LAENGE
         MVC   CONSOR+13(1),1(R11) TEXT-LAENGE+2+4
         XR    R12,R12
         IC    R12,1(R11)
         SH    R12,=H'16'
         STC   R12,*+5            MVC LAENGESCHLUESSEL
         MVC   CONSOR+25,2(R11)   TEXT
         XC    ECB1,ECB1
CONSOR   WTOR  'R,                    ',ANTWORT,8,ECB1
         WAIT  ECB=ECB1
         OC    ANTWORT,BLANK      CREATE CAPITAL LETTERS
         CLI   ANTWORT,C'V'
         BNE   NOV
         CLI   0(R11),X'06'
         MVI   ANTWORT,C'0'
         BE    ISTADDR
         SH    R10,=H'8'
         BR    R10                ONCE MORE
NOV      CLI   0(R11),X'01'
         BCR   8,R10
         CLI   0(R11),X'06'
         BNE   *+8
         NI    NOAD+1,X'0F'
ISTADDR  XR    R12,R12
         IC    R12,0(R11)
         BCTR  R12,0
         LA    R2,TRANSTAB-240
         EX    R12,MOVE
         EX    R12,TRANSL
         LA    R12,65(R12)
         EX    R12,PACK
NOAD     BR    R10
         OI    NOAD+1,X'F0'
         L     R12,CKSAVE+12
         L     R12,100(R12)
         A     R12,FULL
         ST    R12,FULL
         BR    R10
MOVE     MVC   WORK(0),ANTWORT
TRANSL   TR    WORK(0),0(R2)
PACK     PACK  FULL(5),WORK(0)
         SPACE 2
UPRO2  WTO  '                                                          *
               ;       '
         BR    R10
         SPACE
***********************************************************************
*                                                                     *
* WER AN DIESER ROUTINE IRGENDETWAS AUSZUSETZEN HAT,SOLL SIE RUHIG
* UMPROGRAMMIEREN
*                                           VIEL SPASS VON IHREM ONKEL
*                                                     JACQUES TOUCHET
*                                                                     *
***********************************************************************
         LTORG
         END   CHECKRT
//L.SYSIN  DD  *
 NAME SYSTGTF3(R)
//GTFSVS   EXEC PGM=SYSTGTF3
//SYSUT1   DD  DSN=SYS1.TRACE(0),DISP=OLD
//SYSPRINT DD  SYSOUT=A,DCB=(RECFM=FM,BLKSIZE=121)
//LPALIB   DD  DSN=SYS1.LPALIB,DISP=SHR
//SVCLIB   DD  DSN=SYS1.SVCLIB,DISP=SHR
//SYSUDUMP DD  SYSOUT=A
