         MACRO
&NAME    BEGIN &BASE=12,&ID=*
         AIF   (&BASE GT 1 AND &BASE LT 13).A
         MNOTE 8,'INVALID BASE REGISTER GIVEN, GENERATION TERMINATED.'
         MEXIT
.A       ANOP
&NAME    SAVE  (14,12),,&ID
         BALR  &BASE,0             LOAD BASE REGISTER
         USING *,&BASE             ESTABLISH ADDRESSABILITY
         CNOP  0,4                 ALIGN ON FULLWORD BOUNDARY
         BAL   15,*+76             LOAD A(SAVEAREA) AND BRANCH AROUND
         DC    18F'0'              SAVEAREA
         ST    15,8(0,13)          CHAIN SAVEAREAS BACKWARDS
         ST    13,4(0,15)          CHAIN SAVEAREAS FOREWARDS
         LR    13,15               UPDATE CURRENT SAVEAREA POINTER
         MEND
         TITLE 'ZLST - PRINT MEMBERS OF FB/80 PDS IN ALPHAMERIC SEQUENC*
               E.'
**
**  AUTHOR :  ALAN FULFORD   DATE SUBMITTED :  25/7/73
**  INSTALLATION :  ALLIED BREWERIES, BURTON   PHONE :  0283-66322  X 3
**
**
**  THIS UTILITY IS DESIGNED TO :
**
**    1) CHECK SYSUT1 FOR A VALID FIXED-LENGTH 80-BYTE RECORD PDS.
**
**    2) READ SEQUENTIALLY THE DIRECTORY OF SYSUT1.
**
**    3) READ & PRINT EACH MEMBER AS ENCOUNTERED IN THE DIRECTORY.
**
**  NB :
**
**    A) THE PRINTED OUTPUT MAY OPTIONALLY BE DOUBLE SPACED THROUGH
**       CODING PARM='SP=2' AND IS AUTOMATICALLY BLOCKED TO 2057 BYTES
**       UNLESS OVERRIDDEN ON THE DD STATEMENT.
**
**    B) ALIAS ENTRIES ARE IDENTIFIED ON THE PRINTOUT BY AN ASTERISK
**       FOLLOWING THE MEMBER NAME.
**
**    C) ALL I/O OPERATIONS ARE OVERLAPPED USING DOUBLE-BUFFERED BSAM
**       FOR INPUT AND QSAM FOR OUTPUT.
**
**
**
**  SAMPLE JCL :
**
**    //LIST     EXEC PGM=ZLST,PARM='SP=2'
**    //SYSUT1   DD   DSN=ABL.PDS,DISP=SHR
**    //SYSUT2   DD   SYSOUT=A
**
**
**
**  REGISTER USAGE :
**
**    12  BASE REGISTER
**
**    11  A(CURRENT DIRECTORY I/O AREA)
**
**    10  A(CURRENT MEMBER I/O AREA)
**
**     9  A(CURRENT DIRECTORY ENTRY)
**
**     8  A(CURRENT MEMBER STATEMENT)
**
**     7  A(END OF CURRENT DIRECTORY BLOCK)
**
**     6  A(END OF CURRENT MEMBER BLOCK)
**
**     5  UNUSED
**
**     4  LINECOUNT
**
**     3  RETURN ADDRESS / WORK
**
**     2  WORK
**
**
**
         EJECT
ZLST019  CSECT
         BEGIN
**
**  ANALYSE PARM INFORMATION
**
         L     2,0(0,1)            GET A(PARM FIELD)
         LTR   2,2                 IS IT VALID
         BM    GOODPARM            YES, BRANCH
         ABEND 4,DUMP              ELSE, ABORT
GOODPARM LH    3,0(0,2)            GET L(PARM DATA)
         LTR   3,3                 IS IT ZERO
         BZ    GETNAME             YES, BRANCH
         CH    3,=H'4'             ELSE, IS IT FOUR BYTES
         BNE   PARMERR             NO, ERROR
         CLC   2(3,2),=C'SP='      YES, IS IT VALID TYPE
         BNE   PARMERR             NO, ERROR
         CLI   5(2),C'1'           YES, IS IT ONE
         BE    GETNAME             YES, SINGLE SPACING
         CLI   5(2),C'2'           ELSE, IS IT TWO
         BNE   PARMERR             NO, ERROR
         MVI   CTRL,C'0'           ELSE, SET FOR DOUBLE SPACING
         B     GETNAME
PARMERR  WTO   '**LST01 PARM FIELD INVALID - IGNORED',ROUTCDE=11 WTP
**
**  OBTAIN DSNAME FROM SYSUT1 JFCB
**
GETNAME  RDJFCB MF=(E,DRLIST)      READ SYSUT1 JFCB
         MVC   DSNAME,DJFCB        MOVE FULL DSNAME INTO MAIN HEADING
**
**  OBTAIN SYSUT1 UCB ADDRESS FROM TIOT
**
         EXTRACT FWORD,FIELDS=(TIOT) GET A(TIOT)
         L     2,FWORD
         LA    2,24(0,2)           STEP UP TO FIRST DD ENTRY
         SR    3,3
NEXTDD   IC    3,0(0,2)            GET L(CURRENT DD ENTRY)
         LTR   3,3                 IS IT ZERO
         BNZ   COMPARE             NO, BRANCH
         WTO   '**LST02 ERROR - SYSUT1 NOT DEFINED',ROUTCDE=11 YES, WTP
         B     END
COMPARE  CLC   4(8,2),=C'SYSUT1  ' IS CURRENT ENTRY FOR SYSUT1
         BE    GETUCB              YES, BRANCH
         LA    2,0(3,2)            ELSE, STEP UP TO NEXT DD ENTRY
         B     NEXTDD              LOOP
GETUCB   L     2,16(0,2)           GET A(UCB)
**
**  OBTAIN VOLUME SERIAL NO. FROM UCB
**
         CLI   18(2),X'20'         IS IT DASD
         BE    GETVOL              YES, BRANCH
         WTO   '**LST03 ERROR - SYSUT1 INVALID DEVICE TYPE',ROUTCDE=11
         B     END
GETVOL   MVC   VOLUME,28(2)        MOVE VOLUME SERIAL INTO MAIN HEADING
**
**  OBTAIN FILE ATTRIBUTES FROM F1 DSCB
**
         OBTAIN F1DSCB             READ SYSUT1 DSCB
         LTR   15,15               ANY ERRORS
         BZ    CHECKORG            NO, BRANCH
         ABEND 8,DUMP              YES, ABORT
CHECKORG TM    DSCB+38,X'02'       IS DSORG = PO
         BZ    DSCBERR             NO, ERROR
         TM    DSCB+40,X'80'       IS RECFM = F OR U
         BZ    DSCBERR             NO, ERROR
         TM    DSCB+40,X'40'       IS RECFM = U
         BO    DSCBERR             YES, ERROR
         CLC   DSCB+44(2),=H'80'   IS LRECL = 80
         BE    OPENUP              YES, BRANCH
         TM    DSCB+40,X'10'       IS IT BLOCKED
         BO    DSCBERR             YES, ERROR
         CLC   DSCB+42(2),=H'80'   IS BLKSIZE = 80
         BE    OPENUP              YES, BRANCH
DSCBERR  WTO   '**LST04 ERROR - SYSUT1 INVALID FILE TYPE',ROUTCDE=11
         B     END
**
**  OPEN FILES (NOTE - DCB EXITS FOR MEMBERS AND PRINTER)
**
OPENUP   OI    DJFCB+52,X'08'      PREVENT JFCB WRITEBACK FOR DIRECTORY
         OPEN  TYPE=J,MF=(E,DRLIST) OPEN DCB FOR DIRECTORY
         READ  DDECB1,SF,MF=E      SCHEDULE READ FOR FIRST DRCTRY BLOCK
         OPEN  (MEMBERS,,PRINTER,OUTPUT) OPEN DCBS FOR MEMBERS & SYSUT2
         GETBUF MEMBERS,(2)        GET A(FIRST BUFFER)
         ST    2,MDECB1+12         SAVE IN FIRST DECB
         GETBUF MEMBERS,(2)        GET A(SECOND BUFFER)
         ST    2,MDECB2+12         SAVE IN SECOND DECB
**
**  SET UP DATE IN MAIN HEADING
**
         TIME  DEC                 GET DATE
         ST    1,FWORD
         ED    DATE,FWORD+1        EDIT INTO HEADING
         LA    11,DIOA2            INITIALISE DRCTRY BUFFER POINTER
         B     FIRSTENT            ENTER MAIN PROCESSING LOOP
         EJECT
**
**  SYSUT1 - DIRECTORY READ ROUTINE
**
         USING DIRENTRY,9
NXTENTRY IC    2,IND               GET INDICATOR BYTE
         N     2,=F'31'            SELECT # USER HALFWORDS BITS
         ALR   2,2                 CONVERT TO BYTES
         LA    9,USER-MEMBER(2,9)  STEP UP TO NEXT DIRECTORY ENTRY
         CR    9,7                 IS IT END OF BLOCK
         BL    TESTLAST            NO, BRANCH
         USING XIOAX,11
FIRSTENT READ  XDECBX,SF,MF=E      YES, SCHEDULE READ INTO THIS BUFFER
         L     11,XLINKX           CHAIN TO OTHER BUFFER
         CHECK XDECBX              CHECK FOR GOOD COMPLETION
         L     1,XAREA             GET A(CURRENT BUFFER)
         DROP  11
         LH    2,8(0,1)            GET # BYTES USED IN CURRENT BLOCK
         LA    7,8(2,1)            COMPUTE END OF BLOCK ADDRESS
         LA    9,10(0,1)           STEP UP TO FIRST DIRECTORY ENTRY
**
**  PROCESS MEMBER ENTRY
**
TESTLAST CLC   MEMBER,=8X'FF'      IS IT END OF DIRECTORY
         BE    ENDRUN              YES, BRANCH
         MVC   FWORD(3),TTR        NO, SET UP DISK ADDRESS
         MVI   FWORD+3,X'00'
         POINT MEMBERS,FWORD       POSITION TO START OF CURRENT MEMBER
         READ  MDECB1,SF,MF=E      SCHEDULE READ FOR FIRST BLOCK
         TM    IND,ALIAS           IS IT AN ALIAS
         BO    AST                 YES, BRANCH
         AP    MEMBNO,=P'1'        NO, INCREMENT MEMBER COUNT
         MVI   ASTAR,C' '          CLEAR ALIAS INDICATOR
         B     NOCONT
AST      MVI   ASTAR,C'*'          SET ALIAS INDICATOR
NOCONT   MVC   CONT,CONT-1         CLEAR CONTINUATION MARKER
         MVC   MNAME,MEMBER        MOVE MEMBER NAME INTO SUB-HEADING
         BAL   3,HEADRTN           PRINT HEADINGS
         LA    10,MIOA2            INITIALISE MEMBERS BUFFER POINTER
         B     FRSTSTMT            ENTER MEMBER PROCESSING LOOP
**
**  SYSUT1 - MEMBER READ ROUTINE
**
NEXTSTMT LA    8,80(0,8)           STEP UP TO NEXT LOGICAL RECORD
         CR    8,6                 IS IT END OF BLOCK
         BL    PRINT               NO, BRANCH
         USING XIOAX,10
FRSTSTMT READ  XDECBX,SF,MF=E      YES, SCHEDULE READ INTO THIS BUFFER
         L     10,XLINKX           CHAIN TO OTHER BUFFER
         CHECK XDECBX              CHECK FOR GOOD COMPLETION
         L     8,XAREA             GET A(FIRST RECORD IN BLOCK)
         L     1,XIOBPT            GET A(CURRENT IOB)
         LH    2,MEMBERS+62        GET BLKSIZE FROM DCB
         SH    2,14(0,1)           SUBTRACT RESIDUAL COUNT IN IOBCSW
         LA    6,0(2,8)            COMPUTE END OF BLOCK ADDRESS
**
**  SYSUT2 - PRINT ROUTINE
**
PRINT    MVC   STMT,0(8)           MOVE STATEMENT TO OUTPUT LINE
         PUT   PRINTER,LINE        PRINT A LINE
         CLI   CTRL,C' '           WAS IT SINGLE SPACED
         BE    SINGLE              YES, BRANCH
         LA    4,1(0,4)            ELSE, ADD 1 TO LINECOUNT
SINGLE   LA    4,1(0,4)            ADD 1 TO LINECOUNT
         C     4,=F'60'            IS LINECOUNT < 60
         BNL   NEWPAGE             NO, BRANCH
         MVC   ASACC,CTRL          YES, RESET ASA CONTROL CHARACTER
         B     NEXTSTMT            LOOP
NEWPAGE  MVC   CONT,=C'(CONT.)'    SET CONTINUATION MARKER
         BAL   3,HEADRTN           PRINT HEADINGS
         B     NEXTSTMT            LOOP
         EJECT
**
**  SYSUT1 - MEMBER EOF ROUTINE
**
MEMBEND  L     10,XLINKX           CHAIN TO OTHER BUFFER
         CHECK XDECBX              CHECK FOR GOOD COMPLETION
         B     NXTENTRY            LOOP
**
**  SYSUT1 - MEMBER SYNAD ROUTINE
**
MSYN     CLI   XECB,X'48'          WAS REQUEST PURGED
         BCR   8,14                YES, RETURN
         ABEND 12,DUMP             NO, ABORT
         DROP  10
**
**  SYSUT1 - DIRECTORY EOF ROUTINE
**
ENDRUN   ED    COUNT,MEMBNO        EDIT # MEMBERS FOUND INTO LINE
         PUT   PRINTER,ENDLINE     PRINT ENDING LINE
         CLOSE (DRCTRY,,MEMBERS,,PRINTER) CLOSE ALL FILES
END      L     13,4(13)            RESTORE CALLERS SAVE AREA
         RETURN (14,12),RC=0       RETURN TO CALLER
**
**  SYSUT1 - DIRECTORY SYNAD ROUTINE
**
DSYN     LR    2,0
         CLI   0(2),X'48'          WAS REQUEST PURGED
         BCR   8,14                YES, RETURN
         ABEND 16,DUMP             NO, ABORT
**
**  ROUTINE TO PRINT HEADINGS
**
HEADRTN  AP    PAGENO,=P'10'       ADD 1.0 TO PAGE NUMBER
         MVC   PAGE,PAGEMASK       SET EDIT MASK IN HEADINGS LINE
         ED    PAGE,PAGENO         EDIT PAGE NUMBER INTO MASK
         PUT   PRINTER,MAINHEAD    PRINT MAIN HEADING
         PUT   PRINTER,SUBHEAD     PRINT SUB-HEADING
         MVI   ASACC,C'0'          SET ASA CONTROL CHAR. FOR NEXT LINE
         LA    4,5                 INITIALISE LINECOUNT
         BR    3                   RETURN
**
**  DCB EXIT ROUTINE FOR SYSUT2
**
PREXRTN  CLC   62(2,1),=H'0'       HAS BLKSIZE BEEN CODED
         BCR   7,14                YES, RETURN
         MVC   62(2,1),=H'2057'    NO, SET TO 2057
         BR    14                  RETURN
**
**  DCB EXIT ROUTINE FOR SYSUT1 - MEMBERS
**
MBEXRTN  LR    2,14                SAVE RETURN ADDRESS
         LA    1,0(0,1)            CLEAR HI-ORDER BYTE
         LH    0,62(0,1)           SET BUFFER LENGTH FROM DCBBLKSI
         O     0,BUFMASK           SET BUFNO = 2
         GETPOOL (1),(0)           GET BUFFER POOL
         LR    14,2                RESTORE RETURN ADDRESS
         BR    14                  RETURN
         EJECT
**
**  SYSUT1 - DIRECTORY I/O CONTROL BLOCKS
**
DRCTRY   DCB   DSORG=PS,MACRF=R,DDNAME=SYSUT1,EODAD=ENDRUN,EXLST=DREX,K*
               EYLEN=8,NCP=2,RECFM=F,BLKSIZE=256,SYNAD=DSYN
DREX     DS    0F
         DC    X'87'
         DC    AL3(DJFCB)
DJFCB    DS    CL176
DRLIST   RDJFCB DRCTRY,MF=L
DIOA1    DS    0F
DLINK1   DC    A(DIOA2)
DREAD1   READ  DDECB1,SF,DRCTRY,DBUFF1,MF=L
DIOA2    DS    0F
DLINK2   DC    A(DIOA1)
DREAD2   READ  DDECB2,SF,DRCTRY,DBUFF2,MF=L
         DS    0D
DBUFF1   DS    CL264
DBUFF2   DS    CL264
**
**  SYSUT1 - MEMBER I/O CONTROL BLOCKS
**
MEMBERS  DCB   DSORG=PO,MACRF=R,DDNAME=SYSUT1,EODAD=MEMBEND,EXLST=MBEX,*
               NCP=2,SYNAD=MSYN
MBEX     DS    0F
         DC    X'85'
         DC    AL3(MBEXRTN)
BUFMASK  DS    0F
         DC    X'00020000'
MIOA1    DS    0F
MLINK1   DC    A(MIOA2)
MREAD1   READ  MDECB1,SF,MEMBERS,MF=L
MIOA2    DS    0F
MLINK2   DC    A(MIOA1)
MREAD2   READ  MDECB2,SF,MEMBERS,MF=L
**
**  SYSUT2 - PRINTER I/O CONTROL AREA
**
PRINTER  DCB   DSORG=PS,MACRF=PM,DDNAME=SYSUT2,EXLST=PREX,RECFM=FBA,LRE*
               CL=121
PREX     DS    0F
         DC    X'85'
         DC    AL3(PREXRTN)
MAINHEAD DS    0CL121
         DC    C'1DSNAME '
DSNAME   DS    CL44
         DC    C'    VOLUME '
VOLUME   DS    CL6
         DC    C'             MODULE ZLST    DATE'
DATE     DC    X'4020204B202020'
         DC    C'    PAGE'
PAGE     DS    CL5
PAGEMASK DC    X'4020202020'
PAGENO   DC    PL3'0'
SUBHEAD  DS    0CL121
         DC    C'-MEMBER '
MNAME    DS    CL8
         DC    C' '
ASTAR    DS    C
         DC    C' '
CONT     DS    CL7
         DC    CL95' '
LINE     DS    0CL121
ASACC    DS    C
STMT     DS    CL80
         DC    CL40' '
CTRL     DC    C' '
ENDLINE  DS    0CL121
         DC    C'1ZLST PROCESSING COMPLETE,'
COUNT    DC    X'402020202120'
         DC    CL89' MEMBERS PRINTED.'
MEMBNO   DC    PL3'0'
**
**  OTHER CONSTANTS
**
F1DSCB   CAMLST SEARCH,DSNAME,VOLUME,WORKAREA
         DS    0D
WORKAREA DS    0CL148
DSCB     DS    CL96
         DS    CL52
FWORD    DS    F
         LTORG
         EJECT
**
**  DSECTS REQUIRED
**
XIOAX    DSECT                     MAP I/O CONTROL AREAS
XLINKX   DS    A                   CHAIN FIELD
XREADX   READ  XDECBX,SF,MF=L      DECB
         ORG   XDECBX
XECB     DS    F                   ECB
XTYPE    DS    H                   FLAGS
XLNGTH   DS    H                   L(KEY & DATA)
XDCBAD   DS    A                   A(DCB)
XAREA    DS    A                   A(BUFFER)
XIOBPT   DS    A                   A(IOB)
DIRENTRY DSECT                     MAP DIRECTORY ENTRY
MEMBER   DS    CL8                 MEMBER NAME
TTR      DS    XL3                 RELATIVE TRACK ADDRESS OF MEMBER
IND      DS    BL1                 FLAGS & COUNTS
ALIAS    EQU   X'80'               ALIAS FLAG
USER     EQU   *                   USER DATA
         END
