         MACRO
&NAME    BEGIN   &BASE=1,&PL1=NO,&ENTRY=,&REGS=R01
         GBLC  &REG00,&REG01,&REG09     REFERENCED IN 'BACK' MACRO
         GBLB  &FIRST                   FOR REG EQU GEN.
         GBLB  &BGEXTRN,&BGPL1SW
         LCLC  &PENTRY
         LCLA  &AWORK1,&AWORK2,&AWORK3
*BEGIN    V2                                                  19.4.73
*        GENERATE CSECT INITIALISATION CODING INCLUDING PL1
*        COMPATIBILITY IF REQUIRED
&NAME    CSECT
&BGPL1SW SETB  0                        SET  OFF PL1 SW
         AIF   ('&PL1' NE 'YES').NOPL1
&BGPL1SW SETB  1
.NOPL1   ANOP
         AIF   (K'&ENTRY EQ 0).NOENTRY
         ENTRY &ENTRY
&ENTRY   DS    0H
&PENTRY  SETC  '&ENTRY'
         AGO   .GENREGS
.NOENTRY ANOP
         AIF   (&BGPL1SW NE 1).GENREGS
         AIF   (K'&NAME LE 7).GENREGS
.* TRUNCATE 8 CHAR CSECT NAME  TO 7 CHAR PL1 ENTRY POINT
&PENTRY  SETC  '&NAME'(1,4).'&NAME'(6,3)
         ENTRY &PENTRY
&PENTRY  DS    0H   PL1 ENTRY - 1ST 4 AND LAST 3 CHARS OF CSECT NAME
.GENREGS ANOP
         AIF   (&FIRST).NORGEN
&FIRST   SETB  1
         SPACE 1
         AIF   ('&REGS' NE 'R01').GENREG1
R00      EQU   0                        ) I/0 AND
R01      EQU   1                        ) PARAMETERS
R02      EQU   2
R03      EQU   3
R04      EQU   4
R05      EQU   5
R06      EQU   6
R07      EQU   7
R08      EQU   8
R09      EQU   9                        USED BY PL1
&REG00   SETC  'R00'
&REG09   SETC  'R09'
&REG01   SETC  'R01'
         AGO   .GENREG2
.GENREG1 ANOP
R0       EQU   0                        ) I/0 AND
R1       EQU   1                        ) PARAMETERS
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9                        USED BY PL1
&REG00   SETC  'R0'
&REG09   SETC  'R9'
&REG01   SETC  'R1'
.GENREG2 ANOP
R10      EQU   10                       )      ) PL1= BASE REG
R11      EQU   11                       ) BASE ) PL1=A(STATIC STORAGE)
R12      EQU   12                       ) REGS ) PL1= PSUEDO REG VECTOR
R13      EQU   13                       POINTER TO REG SAVE AREA
R14      EQU   14                       RETURN ADDR
R15      EQU   15                       BRANCHING ADDR
.NORGEN  ANOP
         SPACE 1
         CNOP  2,4
         BALR  R15,&REG00
         USING *,R15
         AIF   (&BGPL1SW EQ 0).ASAVE
.* GENERATE PL1 COMPATIBLE SAVE ROUTINE
         B     *+20
         AIF   (K'&NAME GT 7).PSAVE05
         DC    AL1(7)
         DC    CL7'&NAME'
         AGO   .PSAVE10
.PSAVE05 ANOP
         DC    AL1(7)
         DC    CL7'&PENTRY'
.PSAVE10 ANOP
         DC    F'136'                   DSA LENGTH
         DC    A(*+148)                 ADDR OF STATIC STORAGE
         CLC   *+176(4),*+196           IS PLI CNTRL MOD IN CORE
         BE    *+42                     NO THEN USE ASS SAVE ROUTINE
         SPACE 1
* PL1 SAVE ROUTINE
         STM   R14,R11,12(R13)          SAVE REGS
         L     R11,&NAME+16             GET ADDR OF STATIC STORAGE
         L     &REG00,&NAME+12          GET DSA LENGTH
         L     R15,32(0,R11)            GET IHESADA ADDR
         BALR  R14,R15                  LINK TO SET UP PL1 ENVIRONMENT
         LA    &REG09,100(0,R13)        USED BY PL1
         ST    R13,0(R12,0)             STORE DSA ADDR IN PR VECTOR
         MVI   0(R13),X'80'             SET DSA FLAG BYTE
         DC    X'0700'                  PADDING BYTES
         BALR  R15,&REG00
         B     156(R15)                 GO TO SET BASE REGS
         SPACE 1
.ASAVE   ANOP
* ASSEMBLER SAVE ROUTINE
         STM   R14,R12,12(R13)          SAVE REGS
         ST    R13,*+24                 CHAIN LAST S/A TO THIS
         LR    R14,R13
         LA    R13,*+14                 POINT R13 TO SAVEAREA
         ST    R13,8(R14)               CHAIN THIS S/A TO LAST
         AIF   (&BGPL1SW EQ 0).ASAVE05
         B     *+134                    GO TO SET BASE REGS
         AGO   .ASAVE10
.ASAVE05 ANOP
         B     *+78                     GO TO SET BASE REGS
.ASAVE10 ANOP
         DC    X'0700'                  PADDING BYTES
         DC    18F'0'                   SAVEAREA
         AIF   (&BGPL1SW EQ 0).SETBASE
         SPACE 1
         DC    F'4096'                  PL1 STATIC STORAGE
         DC    A(*-4+1024)                FIXED AREAS
         DC    A(*-8+2048)
         DC    A(*-12+3072)
         DC    A(*-16+4096)
         DC    A(*-20+5120)
         DC    A(*-24+6144)
         DC    A(*-28+7168)
         AIF   (&BGEXTRN).NOEXTRN
         EXTRN IHESADA,IHESADB,IHESAFA,IHESARC
.NOEXTRN ANOP
&BGEXTRN SETB  1
         DC    A(IHESADA)
         DC    A(IHESADB)
         DC    F'0'
         DC    F'0'
         DC    A(IHESAFA)
         DC    F'0'
.SETBASE ANOP
         SPACE 1
         DROP  R15
         AIF   ('&BASE'(1,1) NE '(').BASE05
.* GENERATE USING'S FOR EACH BASE SPECIFIED
&AWORK1  SETA  0
&AWORK2  SETA  0
&AWORK3  SETA  1
         BALR  &BASE(&AWORK3),&REG00    SET UP BASE REGISTER
.ALOOP   ANOP
         USING *-&AWORK1+&AWORK2,&BASE(&AWORK3)
&AWORK3  SETA  &AWORK3+1
         AIF   (K'&BASE(&AWORK3) EQ 0).AEND  EXIT IF END OF SUB-LIST
&AWORK1  SETA  &AWORK1+8
&AWORK2  SETA  &AWORK2+4096
         LA    &BASE(&AWORK3),2048(&BASE(&AWORK3-1)) SET UP NEXT
         LA    &BASE(&AWORK3),2048(&BASE(&AWORK3))     BASE REGISTER
         AGO   .ALOOP
.BASE05  ANOP
         AIF   (&BGPL1SW EQ 0).BASE10
         BALR  R10,&REG00               SET UP BASE REGISTER
         USING *,R10
         AIF   ('&BASE' EQ '1').AEND
         LA    R11,2048(R10)            SET UP NEXT
         LA    R11,2048(R11)              BASE REGISTER
         USING *-8+4096,R11
         AGO   .AEND
.BASE10  ANOP
         BALR  R12,&REG00               SET UP BASE REGISTER
         USING *,R12
         AIF   ('&BASE' EQ '1').AEND
         LA    R11,2048(R12)            SET UP NEXT
         LA    R11,2048(R11)              BASE REGISTER
         USING *-8+4096,R11
         AIF   ('&BASE' EQ '2').AEND
         LA    R10,2048(R11)            SET UP NEXT
         LA    R10,2048(R10)              BASE REGISTER
         USING *-16+8192,R10
.AEND    ANOP
         MEND
         MACRO
&NAME    BACK   &RC=0
*BACK     V2                                                  19.4.73
*        USE ONLY IN CONJUNCTION WITH 'BEGIN'
*        PROVIDES PL1 COMPATIBILITY IF REQUIRED
         GBLC  &REG00,&REG01            SET IN 'BEGIN' MACRO
         GBLB  &BGPL1SW
         LCLA  &AWORK1
         LCLC  &CWORK1
&NAME    DS    0H
         AIF   ('&RC'(1,1) EQ '(').REGCODE
         LA    R15,&RC                  SET RETURN CODE
         AGO   .ABACK05
.REGCODE ANOP
         AIF   ('&RC' EQ '(15)').ABACK05
         AIF   ('&RC' EQ '(R15)').ABACK05
&AWORK1  SETA  K'&RC
&AWORK1  SETA  &AWORK1-2
&CWORK1  SETC  '&RC'(2,&AWORK1)
         LR    R15,&CWORK1              SET RETURN CODE
.ABACK05 ANOP
         AIF   (&BGPL1SW EQ 0).ABACK10       DID BEGIN HAVE PL1 COMPAT.
         CNOP  0,4                      ALIGN'A'TYPE
         B     *+12
         DC    A(IHESADA)               BEGIN HAS EXTRN
         DC    F'0'
         CLC   *-8(4),*-4               IS PL1 IN CORE
         BE    *+56                     NO THEN USE ASS RETURN
         LTR   R15,R15                  IS A RETCODE SET
         BZ    *+44                       NO
         ST    R15,*+28                 YES THEN SET CODE
         OI    *+20,X'80'                 AND LINK
         LA    &REG01,*+16                TO IHESARC TO SET
         L     R15,*+20                   RETURN
         BALR  R14,R15                    CODE
         B     *+22                     BRANCH ROUND
         DC    X'0700'                    PADDING BYTES AND
         DC    A(*+4)                     PARM LIST
         DC    F'0'                     RETURN CODE
         DC    A(IHESARC)
         DC    A(IHESAFA)
         L     R15,*-4                  GET ADDR OF IHESAFA
         BALR  R14,R15                  AND RETURN
.ABACK10 ANOP
* ASSEMBLER STANDARD RETURN
         L     R13,4(R13)               GET ADDR OF LAST S/A
         L     R14,12(R13)              GET RETURN ADDR
         LM    &REG00,R12,20(R13)       RESTORE REGS
         BR    R14                      RETURN
         MEND
         TITLE ' O.S.  RAY.......SUPER SERVICE SYSTEM'
SERVICE  BEGIN BASE=2
*
* THIS SERVICE PROGRAM IS AN INTERACTIVE PROGRAM ALLOWING THE OPERATOR
* TO MAINTAIN THE SYSTEM CATALOG AND DASD VTOCS.
*
         SPACE 2
A0101    XC    AECB,AECB      CLEAR ECB
         MVC   AREP,ABNK      CLEAR REPLY AREA
*
         WTOR  'SERVICE   WHAT SERVICE ?',AREP,72,AECB
         WAIT  ,ECB=AECB
         OC    AREP,ABNK      REPLY TO UPPER CASE
         CLC   AREP(4),=C'END '
         BE    A0201
         CLC   AREP(2),=C'E '
         BNE   A0301
A0201    WTO   'SERVICE   CLOSING DOWN'
         BACK  RC=0
*
         EJECT
A0301    CLC   AREP(7),=C'LOCATE '
         BE    A0302
         CLC   AREP(2),=C'L '
         BNE   A0401
         LA    R03,AREP+2
         B     A0302+4
A0302    LA    R03,AREP+7
         B     B0101                    LOCATE
*
         SPACE 2
A0401    CLC   AREP(8),=C'CATALOG '
         BE    A0402
         CLC   AREP(2),=C'C '
         BNE   A0501
         LA    R03,AREP+2
         B     A0402+4
A0402    LA    R03,AREP+8
         B     C0101                    CATALOG
*
         SPACE 2
A0501    CLC   AREP(10),=C'UNCATALOG '
         BE    A0502
         CLC   AREP(2),=C'U '
         BNE   A0601
         LA    R03,AREP+2
         B     A0502+4
A0502    LA    R03,AREP+10
         B     D0101                    UNCATALOG
*
         SPACE 2
A0601    CLC   AREP(8),=C'SCRATCH '
         BE    A0602
         CLC   AREP(2),=C'S '
         BNE   A0701
         LA    R03,AREP+2
         B     A0602+4
A0602    LA    R03,AREP+8
         B     E0101                    SCRATCH
*
         SPACE 2
A0701    CLC   AREP(7),=C'DELETE '
         BE    A0702
         CLC   AREP(2),=C'D '
         BNE   A0801
         LA    R03,AREP+2
         B     A0702+4
A0702    LA    R03,AREP+7
         B     F0101                    DELETE
*
         SPACE 2
A0801    CLC   AREP(7),=C'RENAME '
         BE    A0802
         CLC   AREP(2),=C'R '
         BNE   A0901
         LA    R03,AREP+2
         B     A0802+4
A0802    LA    R03,AREP+7
         B     G0101                   RENAME
         EJECT
A0901    CLC   AREP(7),=C'OBTAIN '
         BE    A0902
         CLC   AREP(2),=C'O '
         BNE   A0999
         LA    R03,AREP+2
         B     A0902+4
A0902    LA    R03,AREP+7
         B     H0101               OBTAIN
         EJECT
A0999    WTO   'SERVICE   INVALID REPLY'
         B     A0101
*
         EJECT
***      LOCATE MODULE
B0101    MVC   NAME,ABNK     CLEAR DSNAME AREA
         BAL   R02,EXTNAME   EXTRACT DSNAME
BSW      BC    0,B0201
*
         LOCATE LLIST
*                            TEST COMPLETION
         LTR   R15,R15
         BNE   B0501
B0201    MVC   BMSG+18(44),NAME
         MVC   BMSG+63(6),WORK+6     VOLUME
         CLC   WORK+2(4),=X'30C02008'
         BE    B0102
         CLC   WORK+2(4),=X'30502009'
         BE    B0103
         MVC   BMSG+70(4),=C'TAPE.'
         LH    R04,WORK+12
         CVD   R04,WORK+16
         UNPK  WORK+24(3),WORK+22(2)
         OI    WORK+26,X'F0'
         MVC   BMSG+75(2),WORK+25
         B     BMSG
B0102      MVC   BMSG+70(7),=C'2314.  '
         B     BMSG
B0103    MVC   BMSG+70(7),=C'3330.  '
*
BMSG     WTO   'SERVICE   AAAAAAAA.AAAAAAAA.AAAAAAAA.AAAAAAAA.AAAAAAAA *
               VVVVVV UUUU.SS'
*
         B     A0101
*
*        ERROR
*
B0501    CVD   R15,WORK
         UNPK  WORK(3),WORK+6(2)
         OI    WORK+2,X'F0'
         MVC   BMSGX+35(2),WORK+1
BMSGX    WTO   'SERVICE   UNABLE TO LOCATE,XX '
         B     A0101
*
         EJECT
***      CATALOG MODULE
C0101    MVC   NAME,ABNK
         BAL   R02,EXTNAME   EXTRACT DSNAME
         BAL   R02,EXTVOL    EXTRACT VOLUME
*
         SPACE 2
*     EXTRACT UNIT,SEQ
         CLC   0(4,R03),=C'DISK'
         BE    C0102X
         CLC   0(4,R03),=C'3330'
         BE    C0102X
         CLC   0(4,R03),=C'2314'
         BE    C0102
         CLI   0(R03),C'D'
         BNE   C0201
C0102X   MVC   VOLUME+2(4),=X'30502009'
         B     C0103
C0102    MVC   VOLUME+2(4),=X'30C02008'     2314 DISK
C0103    MVC   VOLUME+12(2),=H'0'           SEQUENCE
         B     C0301
C0201    CLC   0(4,R03),=C'TAPE'
         BE    C0205
         CLI   0(R03),C'T'
         BNE   C0401
         LA    R03,1(R03)
C0202    MVC   VOLUME+2(4),=X'34008001'     2400-3 TAPE
         CLI   0(R03),C','
         BNE   C0103                        NO SEQUENCE
         B     C0210
C0205    LA    R03,4(R03)
         B     C0202
*        EXTRACT SEQUENCE NO
C0210    LA    R03,1(R03)
         LR    R04,R03       START ADDRESS
         SR    R06,R06
C0211    TM    0(R04),C'0'   NUMERIC
         BNO   C0212
         LA    R06,1(R06)    COUNT
         LA    R04,1(R04)    NEXT DIGIT
         B     C0211
*
C0212    BCTR  R06,0
         EX    R06,CPACK
         CVD   R04,WORK
         STH   R04,VOLUME+12      SEQUENCE
         B     C0301
*
CPACK    PACK  WORK,0(0,R03)
*
*
C0301    CATALOG CLIST
*
         LTR   R15,R15
         BNE   C0501
         WTO   'SERVICE   CATALOG SUCCESSFUL'
         B     A0101
C0401    WTO   'SERVICE   INVALID UNIT,SEQ FIELD'
         B     A0101
C0501    CVD   R15,WORK
         UNPK  WORK(3),WORK+6(2)
         OI    WORK+2,X'F0'
         MVC   CMSG+36(2),WORK+1
CMSG     WTO   'SERVICE   UNABLE TO CATALOG,XX '
         B     A0101
*
         EJECT
***      UNCATALOG MODULE
D0101    MVC   NAME,ABNK     CLEAR NAME AREA
         BAL   R02,EXTNAME   EXTRACT DSNAME
         CATALOG ULIST
         LTR   R15,R15
         BNE   D0201
         WTO   'SERVICE   UNCATALOG SUCCESSFUL'
         B     A0101
D0201    CVD   R15,WORK
         UNPK  WORK(3),WORK+6(2)
         OI    WORK+2,X'F0'
         MVC   DMSG+38(2),WORK+1
DMSG     WTO   'SERVICE   UNABLE TO UNCATALOG,XX '
         B     A0101
*
         EJECT
***      SCRATCH MODULE
E0101    MVC   NAME,ABNK     CLEAR NAME AREA
         BAL   R02,EXTNAME   EXTRACT DSNAME
         BAL   R02,EXTVOL    EXTRACT VOLUME
*
         CLC   0(4,R03),=C'2314'
         BNE   E0102
         MVC   VOLUME+2(4),=X'30C02008'     2314 DISK
         B     E0103
E0102    CLC   0(4,R03),=C'3330'
         BE    E0102A
         CLC   0(4,R03),=C'DISK'
         BE    E0102A
         CLI   0(R03),C'D'
         BNE   C0401
E0102A   EQU   *
         MVC   VOLUME+2(4),=X'30502009'
E0103    MVC   VOLUME+12(2),=H'0'
*
         SR    R00,R00
         SCRATCH SLIST
         LTR   R15,R15
         BNE   E0201
         WTO   'SERVICE   SCRATCH SUCCESSFUL'
         B     A0101
*
E0201    CVD   R15,WORK
         UNPK  WORK(3),WORK+6(2)
         OI    WORK+2,X'F0'
         MVC   EMSG+36(2),WORK+1
EMSG     WTO   'SERVICE   UNABLE TO SCRATCH,   '
         B     A0101
*
         EJECT
***      DELETE MODULE
F0101    MVC   NAME,ABNK     CLEAR NAME AREA
         BAL   R02,EXTNAME   EXTRACT DSNAME
*
         LOCATE LLIST
         LTR   R15,R15
         BNE   F0201
         CATALOG ULIST
         LTR   R15,R15
         BNE   F0201
         CLC   WORK+2(4),=X'30502009'
         BE    *+14       POSITION DEPENDENT
         CLC   WORK+2(4),=X'30C02008'
         BNE   F0401
         MVC   VOLUME+2(10),WORK+2
         MVC   VOLUME+12(2),=H'0'
         SR    0,0
         SCRATCH SLIST
         LTR   R15,R15
         BNE   F0301
         WTO   'SERVICE   DELETE SUCCESSFUL'
F0401    B     A0101
F0201    OI    FSW+1,X'00'
         B     *+8
F0301    OI    FSW+1,X'F0'
         CVD   R15,WORK
         UNPK  WORK(3),WORK+6(2)
         OI    WORK+2,X'F0'
*    SWITCH
FSW      BC    0,F0501
         MVC   FMSG+38(2),WORK+1
FMSG     WTO   'SERVICE   UNABLE TO UNCATALOG,XX '
         B     A0101
F0501    MVC   FMSGX+36(2),WORK+1
FMSGX    WTO   'SERVICE   UNABLE TO SCRATCH,XX '
         B     A0101
*
         EJECT
***      RENAME MODULE
G0101    MVC   NAME,ABNK     CLEAR NAME AREA
         BAL   R02,EXTNAME   EXTRACT DSNAME
         BAL   R02,EXTVOL    EXTRACT VOLUME
*
         MVC   VOLUME+2(4),=X'30502009'
         MVC   VOLUME+12(2),=H'0'           SEQUENCE
         MVC   GNAME,NAME    SAVE OLD DSNAME
         XC    AECB,AECB     CLEAR ECB
         MVC   AREP,ABNK     CLEAR REPLY
         WTOR  'SERVICE GIVE NEW DATA SET NAME',AREP,72,AECB
         WAIT  ,ECB=AECB
*
         LA    R03,AREP
         BAL   R02,EXTNAME   EXTRACT  DSNAME
*
         SR    R00,R00
         RENAME RLIST
         LTR   R15,R15
         BNE   G0201
*
         WTO   'SERVICE   RENAME SUCCESSFUL'
         B     A0101
*
G0201    CVD   R15,WORK
         UNPK  WORK(3),WORK+6(2)
         OI    WORK+2,X'F0'
         MVC   GMSG+35(2),WORK+1
GMSG     WTO   'SERVICE   UNABLE TO RENAME,   '
         B     A0101
         EJECT
***      OBTAIN MODULE
H0101    EQU   *
         MVC   NAME,ABNK          CLEAR NAME AREA
         BAL   R02,EXTNAME        EXTRACT  DSNAME
         BAL   R02,EXTVOL         EXTRACT  VOLUME ID
         SR    R00,R00
         OBTAIN  OLIST
         LTR   R15,R15            FOUND
         BNE   H0201
         WTO   'SERVICE   OBTAIN SUCCESSFUL '
         B     A0101
*
*
H0201    CVD   R15,WORK
         UNPK  WORK(3),WORK+6(2)
         OI    WORK+2,X'F0'
         MVC   HMSG+36(2),WORK+1
HMSG     WTO   'SERVICE   UNABLE TO OBTAIN,      '
         B     A0101
         EJECT
***      DSNAME EXTRACTION ROUTINE
*        R02 POINTS AT START OF DSNAME IN REPLY
*        PUTS NAME IN NAME
*        AFTER ERROR -MESSAGE -A0101
*
EXTNAME  EQU   *
         LA    R04,45        NAME LENGTH COUNT
         LA    R06,NAME      OUTPUT AREA
EN0101   CLI   0(R03),C' '
         BE    EN0202
         CLI   0(R03),C','
         BE    EN0201
         MVC   0(1,R06),0(R03)
         LA    R03,1(R03)
         LA    R06,1(R06)
         BCT   R04,EN0101
EN0102   WTO   'SERVICE   INVALID DSNAME FIELD'
         B     A0101
EN0201   LA    R03,1(R03)
         MVI   CD,C','       RETURN CODE
         B     *+8
EN0202   MVI   CD,C' '
         C     R04,=F'45'
         BE    EN0102
         BCTR  R06,R00
         CLI   0(R06),C')'
         BE    EN0301
         NI    BSW+1,X'00'
         BR    R02
EN0301   LOCATE LLIST
         LTR   R15,R15
         BNE   EN0102
         OI    BSW+1,X'F0'
         BR    R02
         EJECT
***      VOLUME EXTRACTION ROUTINE
*        R02   POINTS AT VOLUME IN REPLY
*        PUT  RESULT IN VOLUME + 6
*
EXTVOL  EQU  *
         LA    R04,7
         LA    R06,VOLUME+6
EV0101   CLI   0(R03),C' '
         BE    EV0202
         CLI   0(R03),C','
         BE    EV0201
         MVC   0(1,R06),0(R03)
         LA    R03,1(R03)
         LA    R06,1(R06)
         BCT   R04,EV0101
EV0102   WTO   'SERVICE   INVALID VOLUME FIELD'
         B     A0101
EV0201   LA    R03,1(R03)
         MVI   CD,C','
         B     *+8
EV0202   MVI   CD,C' '
         C     R04,=F'7'
         BE    EV0102
         BR    R02
*    CAMLST AREAS
*
LLIST    CAMLST NAME,NAME,,WORK
CLIST    CAMLST CAT,NAME,,VOLUME
ULIST    CAMLST UNCAT,NAME
SLIST    CAMLST SCRATCH,NAME,,VOLUME,,OVRD
RLIST    CAMLST RENAME,GNAME,NAME,VOLUME
OLIST    CAMLST  SEARCH,NAME,VOLUME+6,WORK
*        CONSTANTS
AECB     DC    F'0'
AREP     DC    CL72' NO REPLY '
ABNK     DC    CL72' '
NAME     DC    CL44' '
GNAME    DC    CL44' '
WORK     DS    0D
         DC    265C' '
VOLUME   DC    H'1'
         DC    XL12'0'
CD       DC    C' '
*
         END
