         TITLE 'SMF DATA SET DUMP UTILITY.'
SMFDUMP  CSECT
*
*  NOTES TO USERS OF SMFDUMP.
*
*  BEFORE USING SMFDUMP
*        1  ALLOCATE 3 DISK AREAS FOR SYS1.MANX,Y,AND Z.  IF X AND Y
*           ARE ON DIFFERENT VOLUMES Z SHOULD BE PRESENT ON BOTH
*           VOLUMES.  X AND Y MUST BE CATALOGUED.
*           SYS1.MANZ IS THE PREFORMATTED RESERVE DATA SET WHICH THIS
*           PROGRAM CAN RENAME TO REPLACE X OR Y IF THEY HAVE I/O
*           ERRORSTHAT REQUIRE INVESTIGATION AND CORRECTION - THIS
*           TECHNIQUE MEANS THAT THERE WILL ALWAYS BE AN ALTERNATE
*           DATA SET TO SWITCH TO WHILE THE ERROR IS BEING CORRECTED.
*        2  CREATE A GDG OF 4 ENTRIES FOR THE INDEX SMFDATA.
*        3  OPEN/CLOSE 4 TAPES TO CREATE SMFDATA GENERATIONS 1 - 4 AND
*           CATLG THOSE TAPES.
*
*  TO RUN SMFDUMP USE THE FOLLOWING JCL....
*        //SMFDUMP EXEC PGM=SMFDUMP    (,PARM=A)
*        //SYSUDUMP DD SYSOUT=A                            DUMP
*        //SMFDUMP DD SYSOUT=A                             LIST
*        //DD1 DD DSN=SMFDATA(0),DISP=SHR,DCB=DEN=2        INPUT
*        //DD2 DD DSN=SMFDATA(-3),DISP=SHR,DCB=DEN=2,      OUTPUT
*                 UNIT=(,,DEFER)
*        //DD3 DD DSN=SMFDATA(-1),DISP=SHR,DCB=DEN=2,      CONCATENATED
*        //       UNIT=(,,DEFER)                           TO RECREATE
*        //    DD DNS=SMF.COPYNEW,DISP=SHR,DCB=DEN=2,      GEN (0)
*        //       VOL=REF=*.DD3,UNIT=AFF=DD3,LABEL=(2,SL)
*        //DD4 DD DSN=SMF.COPYNEW,DISP=(,KEEP),DCB=DEN=2,  BACK-UP COPY
*        //     VOL=REF=*.DD1,UNIT=AFF=DD1,LABEL=(2,SL)    OF DISK DATA
*        //MANX DD DSN=SYS1.MANX,DISP=SHR                  SMFDUMP
*        //MANY DD DSN=SYS1.MANY,DISP=SHR                  CHOOSES ONE
*        //* FOLLOWING TWO CARDS ARE ONLY USED IF IEHDASDR IS LINKED
*        //* TO BECAUSE OF DISK ERROR IN INPUT
*        //SYSPRINT DD SYSOUT=A                            IEHDASDR
*        //SYSIN DD SPACE=(TRK,1),UNIT=SYSDA               IEHDASDR
*        //* FOLLOWING CARD IS ADDED FOR RUNS TO DUMP A DATA SET
*        //* OTHER THAN X OR Y.
*        //MANA DD DSN=SYS1.MANA,DISP=SHR,VOL=REF=SYS1.MANX
*        NOTE THAT PARM=A AND MANA DD ARE ONLY REQUIRED IF DUMPING A
*        DATA SET THAT HAS BEEN RENAMED AFTER CORRECTION OF AN I/O ERR.
*
*  OTHER NOTES
*        1  PREVIOUS VERSIONS OF THIS PROGRAM REFERRED TO A RESPOND
*           USER CVT EXTENSION ('TSGCVT') IN STATEMENTS LABELLED BL0001
*           AND BL0002.  THESE LOCAL REFERENCES HAVE NOW BEEN REMOVED
*           AND THE MACHINE ID IS OBTAINED FROM THE SMCA.
*        2  STATEMENT AT LABEL BL0201 ASSUMES THAT ALL SMF DISK DATA
*           SETS MANX,Y,AND Z, OR ANY RENAMED VERSIONS ARE ALL ON THE
*           SAME VOLUME.  IF PROCESSING WITH PARM=A THIS INSTRUCTION
*           WILL MOVE THE VOL SER FOR THE CURRENT ALTERNATE (X OR Y)
*           INTO THE VOL LIST FOR OBTAINING SYS1.MANA.
*        3  AFTER A DISK I/O ERROR THIS PROGRAM RENAMES THE OFFENDING
*           DATA SET BY ADDING AN X TO ITS NAME (E.G. SYS1.MANYX).
*           AFTER ERROR CORRECTION THE DATA SET CAN BE DUMPED BY....
*              A) RENAME IT TO SYS1.MANA
*              B) ADD TO THE JCL
*                //     EXEC PGM=SMFDUMP,PARM=A
*                //MANA DD DSN=SYS1.MANA,DISP=SHR,VOL=REF=SYS1.MANX
*              A SUFFIX LETTER OTHER THAN 'A' CAN BE USED.
*              SEE STATEMENTS AT  SAVEPARM,TESTPARM,BL0201,BL070.
*
*        BEGIN BASE=(12,10)            EXPANSION FOLLOWS
         B     12(15)
         DC    AL1(7)
         DC    CL7'SMFDUMP'
         STM   14,12,12(13)
         BALR  12,0
         USING *,12,10
IHB1     EQU   *
         L     10,IHB1A
         CNOP  0,4
         BAL   15,*+76
         DC    18F'0'
         ST    15,8(13)
         ST    13,4(15)
         LR    13,15
         B     IHB1B
IHB1A    DC    A(IHB1+4096)
IHB1B    EQU   *
SAVEPARM LR    9,1
         OPEN  (PRINT,(OUTPUT))
         BAL   11,SR01                  LOCATE THE FIRST PRINT AREA.
         TITLE 'INITIALISATION PHASE AND HEADING CONSTRUCTION.'
*THIS SECTION OF CODE DECIDES FROM THE ALTERNATE AREA IN THE SMCA WHICH
*SMF DATA SET - SYS1.MANX OR SYS1.MANY - IS TO BE DUMPED. THE APPROPRIA
*TE NAME IS STORED IN THE HEADING AND THIS IS USED TO INITIALISE ALL
*SUBSEQUENT MESSAGES WHEN REQUIRED. SINCE A RESTART MAY BE NEEDED FROM
*WITHIN THE PROGRAM, THE MAIN RE-ENTRY IS AT THIS POINT HENCE A DATA
*SET SWITCH DURING PROCESSING WOULD BE TAKEN CARE OF.
         SPACE
BL000    L     5,16                     GET THE CVT ADDRESS.
BL0001   L     5,196(5)                 GET THE SMCA ADDRESS.
         ST    5,SMCAPTR                STORE SMCA ADDRESS.
*  THE FOLLOWING 5 INSTRUCTIONS WERE ADDED BECAUSE SOME COREDUMPS SHOW
*  THE SMCA POINTER IN THE CVT AS X'FFFFF' AND SO WE TEST THAT THE
*  POINTER IS AT LEAST FULLWORD ALIGNED.
         TM    SMCAPTR+3,3
         BZ    *+16          SMCAPTR APPEARS VALID
         LA    3,26
         LA    4,SMFD030
         B     ERRCOM        ISSUE MSG AND GIVE UP
         MVC   HDNG+16(1),51(5)         SET DATA SET TO BE DUMPED.
TESTPARM L     1,0(9)                  PICK UP PARM PTR.
         LH    9,0(1)                  TEST IF THERE IS A PARM
         LTR   9,9                     IS THERE A PARM
         BZ    BL0002
         MVC   HDNG+16(1),2(1)         USE PARM AS SUFFIX LETTER
         OI    MANAA+1,240             IGNORE 'SWITCH' TESTS
         NI    MANAB+1,15
BL0002   MVC   HDNG+42(2),16(5)        SET MACHINE ID INTO HEADING
         TIME
         ST    1,WORK                   STORE THE DATE.
         UNPK  HDNG+52(5),WORK+1(3)     UNPACK THE DATE INTO HEADING.
         OI    HDNG+56,X'F0'            AND MAKE IT PRINTABLE.
         ST    0,WORK                   STORE THE TIME.
         MVI   WORK+2,X'0F'             MAKE TIME UNPACKABLE.
         MVC   HDNG+64(6),EDIT1         MOVE EDIT WORD TO PRINT.
         ED    HDNG+64(6),WORK          EDIT TIME TO PRINT AS HH.MM.
         MVI   HDNG+70,X'40'            BLANK UNWANTED BYTE.
         MVC   OVFLOCNT,K60P            FORCE HEADINGS ON FIRST LINE.
         SPACE
*THE ABSOLUTE GENERATION DATA GROUP NAME OF SMFDATA(+1) IS NOW
*ASCERTAINED FOR PRINTING IN THE HEADING AND FOR USE AS A REFERENCE
*POINT IN EVALUATING THE OTHER ABSOLUTE GENERATION DATA GROUP NAMES.
         SPACE
BL010    MVC   NEWGEN(11),SMFGEN1P      MOVE RELATIVE NAME INTO STORE.
         LOCATE CAMLSTA
         LTR   15,15                    TEST FOR AN ERROR.
         BC    7,ERR001                 BRANCH IF AN ERROR.
         MVC   HDNG+21(16),NEWGEN       MOVE ABSOLUTE NAME TO HEADING.
         SPACE
*THIS CODE READS THE SMF DATA SET DSCB INTO LOCA. IT THEN CHECKS THAT
*IT IS NOT AN EMPTY DATA SET.
         SPACE
BL020    MVC   DSNXORY(9),HDNG+8        GET CORRECT SMF DATA SET NAME.
BL0201   MVC   VOLS+6(6),40(5)         GET CORRECT VOLUME SERIAL NO.
         OBTAIN CAMLSTB
         LTR   15,15                    TEST FOR AN ERROR.
         BC    7,ERR002                 BRANCH IF AN ERROR.
         NC    LOCA+54(3),LOCA+54      TEST ID DAT SET IS EMPTY.
         BC    8,ERR003                 BRANCH IF IT IS.
         SPACE
*THE DDNAME DD1 - FOR SMFDATA(0) - IS MOVED INTO THE TAPEIN DCB AND
*THE JFCBS FOR TAPEIN AND TAPEOUT (SMFDATA(0) AND SMFDATA(+1)) ARE
*READ.
         SPACE
BL030    MVC   TAPEIN+40(8),DD1         SET DDNAME TO DD1
         RDJFCB (TAPEIN,,TAPEOUT,(OUTPUT))
*  THE FOLLOWING INSTRUCTION PLACES THE FULLY QUALIFIED NAME OF THE +1
*  GENERATION INTO THE JFCB FOR THE -3 GENERATION SO THAT THE TAPE
*  SELECTED FOR OVER-WRITING (-3) WILL HAVE THE CORRECT DSNAME IF WE
*  DECIDE TO CATALOGUE IT AS +1 AT THE END OF A SUCCESSFUL DUMP.
         MVC   JFCBDD2(44),NEWGEN
         TITLE 'ROUTINE TO COPY SMFDATA(0) TO SMFDATA(+1).'
*TAPEIN AND TAPEOUT (DD1 FOR SMFDATA(0) AND DD2 FOR SMFDATA(+1)) ARE
*OPENED AND THE RECORDS ARE READ, COUNTED AND COPIED FROM SMFDATA(0) TO
*SMFDATA(+1). AT END OF FILE ON THE INPUT, THE RECORD COUNT IS PRINTED
*AND TAPEIN IS CLOSED WITH LEAVE SO AS TO CREATE THE SECOND BACKUP
*COPY OF THE SMF DATA SET TO BE DUMPED. TAPEOUT IS NOT CLOSED SINCE
*THE SMF DATA SET IS TO BE MODDED ONTO IT.
         SPACE
BL040    OPEN  (TAPEIN,,TAPEOUT,(OUTPUT)),TYPE=J
         SP    RECORDS,RECORDS          CLEAR RECORD COUNT.
         SPACE
BL050    GET   TAPEIN,WORKAREA          READ A RECORD.
         TM    ERRIND,X'80'             TEST IF ERROR BIT ON.
         BC    1,RCOVER10               BRANCH ON AN ERROR.
         AP    RECORDS,K1P              ADD TO RECORD COUNT.
         PUT   TAPEOUT,WORKAREA         WRITE A RECORD.
         TM    ERRIND,X'40'             TEST IF ERROR BIT ON.
         BC    1,RCOVER21               BRANCH ON AN ERROR.
         BC    15,BL050                 GET NEXT RECORD.
         SPACE
BL060    CLOSE (TAPEIN,LEAVE)
         MVC   SMFD015+63(8),EDIT2      MOVE EDIT WORD TO PRINT.
         ED    SMFD015+63(8),RECORDS    EDIT RECORD COUNT INTO MESSAGE.
         LA    3,70                     SET R3 TO MESSAGE LENGTH LESS 1
         LA    4,SMFD015                SET R4 TO POINT TO MESSAGE.
         BAL   11,SR01                  WRITE THE MESSAGE.
         TITLE 'ROUTINE TO TEST IF A SMF SWITCH HAS OCCURRED.'
*BEFORE DUMPING THE SMF DATA SET IT IS NECESSARY TO CHECK THAT SMF HAS
*NOT BY SOME CHANCE STARTED TO USE IT AGAIN FOR RECORDING. IF IT HAS
*USED IT, A MESSAGE IS PRINTED, THE OPERATOR INFORMED, FILES CLOSED AND
*CONTROL RETURNS TO THE START.
         MVC   TAPEIN+40(8),DD4         SET DDNAME FOR TAPEIN TO DD4.
         OPEN  (TAPEIN,OUTPUT)
         L     5,SMCAPTR                SET R5 TO SMCA.
         L     1,36(5)       PRIMARY DCB
         TM    48(1),16
         BO    CHKSWTCH      PRIMARY OPEN
         L     1,52(5)       ALT DCB
         TM    48(1),16
         BZ    BL070         ALT NOT OPEN - BYPASS CHECK FOR SWITCH
         LA    3,40
         LA    4,SMFD031
         B     ERRCOM
CHKSWTCH CLC   51(1,5),HDNG+16
MANAA    BC    8,BL070                  BRANCH IF STILL THE SAME.
         SPACE
*IF THE STORED DATA SET NAME IN THE HEADING IS NO LONGER THE SAME AS
*THE ONE IN THE ALTERNATE PART OF THE SMCA THEN A SWITCH OCCURRED.
         SPACE
         WTO   'SMFM011 DATA SET SWITCH OCCURRED INFORM TSG RESTARTING C
               JOB',ROUTCDE=2,DESC=2
         LA    3,50                     SET R3 TO MESSAGE LENGTH LESS 1
         LA    4,SMFD016                SET R4 TO POINT TO MESSAGE.
         BAL   11,SR01                  WRITE THE MESSAGE.
         CLOSE (TAPEIN,,TAPEOUT)
         BC    15,BL000                 GO TO RESTART PROCESSING.
         TITLE 'ROUTINE TO DUMP DOWN THE SMF DATA SET.'
*THIS SECTION OF CODING DUMPS DOWN THE SMF DATA SET ONTO THE OUTPUT
*TAPE THAT IS TO BECOME SMFDATA(+1) AND ONTO THE INPUT TAPE AS A
*SECOND FILE ON SMFDATA(0). THE APPROPRIATE DDNAME - MANX OR MANY - IS
*SET INTO DISKQSAM DCB AND THEN IT IS OPENED. FIRST THE DUMP HEADER
*IS CREATED AND WRITTEN OUT (SMF RECORD TYPE 2).
         SPACE
BL070    MVC   DISKQSAM+43(1),HDNG+16   SET APPROPRIATE DDNAME.
         OPEN  DISKQSAM
         MVI   WORKAREA+5,X'02'         SET SMF HEADER CODE.
         BAL   11,SR02                  BRANCH TO HEADER TRAILER WRITE.
         SPACE
BL080    GET   DISKQSAM,WORKAREA        READ AN SMF RECORD.
         TM    ERRIND,X'10'             TEST IF AN ERROR ENCOUNTERED.
         BC    1,RCOVER50               BRANCH TO RECOVERY ROUTINE.
         CLI   WORKAREA+5,X'00'         TEST FOR AN IPL RECORD.
         BC    7,BL090                  BRANCH IF NOT AN IPL RECORD.
         SPACE
*THE FOLLOWING CODE PRINTS OUT THE FOLLOWING DATA: NUMBER OF RECORDS UP
*TO THIS IPL, TIME OF THE IPL IN THE FORM HH.HH, DATE OF IPL IN THE
*FORM YYDDD.
         SPACE
         MVC   SMFD017+7(8),EDIT2       MOVE RECORD COUNT EDIT WORD.
         ED    SMFD017+7(8),RECORDS     EDIT RECORD COUNT
         MVC   WORK,WORKAREA+6          MOVE TIME INTO FULLWORD.
         L     8,WORK                   LOAD TIME INTO R8.
         SRDL  8,32                     CLEAR R8 AND PUT TIME IN R9.
         D     8,F3600                  CONVERT TIME TO HH.HH.
         CVD   9,DWORD                  CONVERT IT TO PACKED DECIMAL
         MVC   SMFD017+33(7),EDIT3      MOVE TIME EDIT WORD TO MESSAGE.
         ED    SMFD017+33(7),DWORD+5    EDIT THE TIME.
         UNPK  SMFD017+41(5),WORKAREA+11(3)  UNPACK DATE TO YYDDD.
         LA    3,45                     SET R3 TO MESSAGE LENGTH LESS 1
         LA    4,SMFD017                SET R4 TO POINT TO MESSAGE.
         BAL   11,SR01                  WRITE OUT THE MESSAGE.
         SPACE
BL090    BAL   11,SR02A                 WRITE OUT THE TAPES.
         BC    15,BL080                 GO GET NEXT RECORD.
*IT NOW REMAINS TO WRITE OUT THE SMF TRAILER RECORD AND SR02 IS
*ENTERED AT THE START TO CREATE THE MAIN BODY OF THE RECORD.
         SPACE
BL100    MVI   WORKAREA+5,X'03'         SET SMF TRAILER CODE.
         BAL   11,SR02                  BRANCH TO HEADER TRAILER WRITE.
         SPACE
*THE FINAL COUNT IS PRINTED AND THE FILES ARE CLOSED; THE OUTPUT TAPE
*IS RE-READ TO CHECK FOR ERRORS AND SO IS CLOSED WITH THE RE-READ
*OPTION.
         SPACE
         MVC   SMFD018+37(8),EDIT2      MOVE RECORD COUNT EDIT WORD.
         ED    SMFD018+37(8),RECORDS    EDIT RECORDS TO MESSAGE.
         LA    3,44                     SET R3 TO LENGTH LESS ONE.
         LA    4,SMFD018                SET R4 TO POINT TO MESSAGE.
         BAL   11,SR01                  WRITE OUT THE MESSAGE.
         CLOSE (DISKQSAM,,TAPEOUT,REREAD)
         TITLE 'ROUTINE TO RE-READ THE CREATED SMFDATA(+1).'
*THE OUTPUT TAPE IS NOW RE-READ TO CHECK FOR ERRORS. AT THE END OF DATA
*THE VOLUME LIST IS SET UP FROM DATA IN THE UCB - DEVICE TYPE AND
*VOLUME SERIAL NUMBER - AND THE NEW GENERATION IS CATALOGUED. FINALLY A
*MESSAGE IS PRODUCED WHICH INDICATES THE VOLUME SERIAL NUMBER OF THE
*NEW GENERATION.
         SPACE
         OPEN  (TAPEOUT),TYPE=J
BL110    GET   TAPEOUT,WORKAREA         READ AN SMF RECORD.
         TM    ERRIND,X'40'             TEST IF AN ERROR.
         BC    1,RCOVER20               BRANCH ON AN ERROR.
         BC    15,BL110                 GO GET NEXT RECORD.
         SPACE
*THE VOLUME LIST IS CREATED AND THE FILES ARE CLOSED. THEN THE NEW
*GENERATION IS CATALOGUED.
         SPACE
BL120    L     7,TAPEOUT+44             GET THE DEB ADDRESS.
         L     7,32(7)                  GET THE UCB ADDRESS.
         MVC   VOLS+2(4),16(7)          STORE DEVICE DATA IN VOLS LIST.
         MVC   VOLS+6(6),28(7)          STORE THE VOLUME SERIAL NUMBER.
         XC    VOLS+12(2),VOLS+12       CLEAR SEQUENCE NUMBER FIELD.
         CLOSE (TAPEIN,,TAPEOUT)        CLOSE THE TAPES.
         SPACE
         CATALOG CAMLSTE                CATALOG THE NEW GENERATION.
         LTR   15,15                    TEST FOR AN ERROR.
         BC    7,ERR008                 BRANCH ON ERROR TO CATLG RTN..
         MVC   SMFD025+31(6),VOLS+6     MOVE VOL. SER. NO. TO MESSAGE.
         LA    3,36                     SET R3 TO MESSAGE LENGTH LESS 1
         LA    4,SMFD025                SET R4 TO POINT TO MESSAGE.
         BAL   11,SR01                  WRITE OUT THE MESSAGE.
         TITLE 'ROUTINE TO SET THE DUMPED DATA SET TO EMPTY.'
*THE SMF BUFFER IS FIRST ENQUEUED ON TO PREVENT SMF SWITCHING DATA SETS
*WHILE THE RESETTING IS TAKING PLACE. FIRST A TEST IS MADE TO CHECK
*THAT SMF HAS NOT SWITCHED WHILE DUMPING HAS BEEN TAKING PLACE. IF A
*SWITCH HAS OCCURRED, THE JOB IS TERMINATED AND RESTARTED. IF NO SWITCH
*HAS OCCURRED, THE DATA SET HAS AN EOF RECORD PUT AT THE START OF EACH
*TRACK. FINALLY THE DSCB FOR THE PARTICULAR DATA SET HAS THE LAST
*RECORD POINTER ZEROISED. THE BUFFER IS THEN DEQUEUD FROM.
         SPACE
         ENQ  (Q,R,E,3,SYSTEM)          ENQUEUE ON SMF BUFFER.
         L     5,SMCAPTR                SET R5 TO POINT TO SMCA.
         L     1,36(5)       PRIMARY DCB
         TM    48(1),16
         BO    CHKSWIT       PRIMARY OPEN
         L     1,52(5)       ALT DCB
         TM    48(1),16
         BZ    MANABC        ALT NOT OPEN - BYPASS CHECK FOR SWITCH
         LA    3,40
         LA    4,SMFD031
         B     ERRCOM
CHKSWIT  CLC   51(1,5),HDNG+16
MANAB    BC    7,ERR009                BRANCH IF IT DID.
         SPACE
MANABC   L     5,16
         MVC   CONVRT,28(5)             SAVE ADDRESS OF CONVERT RTN..
         MVC   DISKEXCP+43(1),HDNG+16   MOVE CORRECT DDNAME TO DCB.
         SPACE
*THE DATA SET IS NOW OPENED AND FROM THE DEB, THE LAST ABSOLUTE TRACK
*ADDRESS IS OBTAINED FOR TESTING FOR EOF.
         SPACE
         OPEN  (DISKEXCP,(OUTPUT))      OPEN THE FILE.
         L     6,DISKEXCP+44            SET R6 TO POINT TO DEB.
         SR    7,7                      CLEAR R7.
         IC    7,16(6)                  SET R7 TO NUMBER OF EXTENTS.
         BCTR  7,0                      REDUCE R7 BY ONE.
         SLL   7,4                      MULTIPLY BY SIXTEEN.
         LA    6,42(6,7)                COMPUTE ADDRESS OF LAST CCHH.
         MVC   LASTCCHH,0(6)            SAVE LAST CCHH IN DATA SET.
         XC    TTRN,TTRN                CLEAR THE RELATIVE TRACK ADDR..
         SPACE
*THIS IS THE MAIN LOOP IN WHICH THE RESIDENT RELATIVE TO ABSOLUTE TRACK
*ADDRESS ROUTINE IS USED TO CONVERT THE TTRN TO THE FORM MBBCCHHR TO
*BE STORED IN THE IOB. THE EOF RECORD IS WRITTEN AT THE START OF EACH
*TRACK AND AT THE END OF THE AREA THE DSCB IS UPDATED.
         SPACE
BL130    L     0,TTRN                   LOAD R0 WITH TTRN.
         L     1,DISKEXCP+44            LOAD R1 WITH DEB ADDRESS.
         STM   0,15,SAVE                SAVE THE REGISTERS.
         LA    2,DISKIOB+32             SET R2 TO MBBCCHHR FIELD IN IOB
         LA    6,SAVE                   SET R6 TO POINT TO SAVE AREA.
         L     15,CONVRT                LOAD R15 WITH ADDRESS OF CONVRT
         BALR  14,15                    BRANCH TO CONVERT ROUTINE.
         LM    0,15,0(6)                RESET THE REGISTERS.
         SPACE
         XC    ECB1,ECB1                CLEAR THE ECB.
         MVC   CNT(4),DISKIOB+35        MOVE CCHH TO START OF COUNT.
         EXCP  DISKIOB                  WRITE OUT THE EOF RECORD.
         WAIT  ECB=ECB1                 WAIT FOR COMPLETION.
         CLI   ECB1,X'7F'               TEST FOR A GOOD WRITE.
         BC    7,ABORT2                 BRANCH ON AN ERROR.
         SPACE
         CLC   DISKIOB+35(4),LASTCCHH   TEST FOR END OF AREA.
         BC    8,BL140                  BRANCH IF END.
         LH    6,TTRN                   SET R6 TO CURRENT RELATIVE TRK.
         LA    6,1(6)                   INCREMENT RELATIVE TRACK BY ONE
         STH   6,TTRN                   SET THE NEW TTRN.
         BC    15,BL130                 GO PROCESS NEXT TRACK.
         SPACE
*THE DSCB FOR THE SMF DATA SET IS STILL AT LOCA. THE LAST RECORD
*POINTER IS ZEROISED TO INDICATE AN EMPTY DATA SET. THE DEB HAS ITS
*DATA FOR THE FIRST EXTENT STORED AND THE CCHH IS SET FOR BOTH THE
*START AND END ADDRESSES FROM THE ADDRESS OF THE APPROPRIATE DSCB. THIS
*THEN ENABLES THE DSCB TO BE WRITTEN BACK.
**  THIS ROUTINE HAS BEEN AMENDED IN RESPECT OF....
*        1  THE SPMODE MACRO IS USED TO GIVE PROTECT KEY ZERO TO ALLOW
*              THE DEB TO BE MODIFIED UNDER MVT.
*        2  THE FULL TRACK BALANCE FOR THE CURRENT DEVICE TYPE IS
*              OBTAINED FROM THE DEVICE CHARACTERISTICS TABLE FOR
*              INCLUSION IN THE 'CLEARED' DSCB.
         SPACE
BL140    XC    LOCA+54(3),LOCA+54       ZERO LAST RECORD POINTER.
*        SPMODE  PROB,0
         STM   14,2,12(13)
         CNOP  0,4
         BAL   15,*+8
         DC    V($SPMODE)
         L     15,0(15)
         LA    1,4
         BALR  14,15
         LM    14,2,12(13)
$SPMODE  CSECT
         LA    2,IHB3A-8-$SPMODE(15)
         SVC   54
         BR    14
IHB3B    LPSW  IHB3C-*(12)
         L     2,16(0)
         L     2,0(2)
         L     3,4(2)
         L     2,0(3)
         L     2,28(2)
         MVZ   17(1,2),28(3)
         OI    17(2),1
         EX    0,IHB3D-IHB3B(12,1)
         BR    13
IHB3A    DC    2A(*-40),A(IHB3B)
IHB3D    OI    17(2),1                 PP MODE WITH USER KEY
         NI    17(2),15                P/P MODE WITH ZERO KEY
         NI    17(2),X'FE'             SUP MODE WITH USER KEY
         NI    17(2),14                SUP MODE WITH ZERO KEY
IHB3C    DC    0D'0',X'FF040000',A(IHB3B+4)
SMFDUMP  CSECT
         L     6,DISKEXCP+44            SET R6 TO POINT TO DEB.
         L     1,16          ADDRESS OF CVT
         L     1,64(1)       ADDRESS OF DEVICE CHAR TAB
         L     7,32(6)       UCB ADDRESS FROM DEB
         IC    7,19(7)       DEV TYPE SUB-CLASS FROM UCB
         LA    3,15
         NR    7,3
         IC    3,0(1,7)      GET OFFSET IN TABLE FOR THIS DEVTYPE
         AR    1,3           GET TABLE ENTRY ADDRESS
         MVC   LOCA+57(2),4(1)         PUT FULL TRACK BALANCE IN DSCB
         MVC   DISKEXTN,36(6)           SAVE FIRST EXTENT DATA.
         XC    36(2,6),36(6)            CLEAR FIRST TWO BYTES.
         MVC   38(4,6),LOCA+96          SET THE START CCHH.
         MVC   42(4,6),LOCA+96          SET THE END CCHH.
         LA    7,1                      SET R7 TO NUMBER OF TRACKS.
         STH   7,46(6)                  STORE R7 IN THE DEB.
         SPACE
*THE IOB IS SET UP TO WRITE BACK THE UPDATED DSCB. THE WRITE IS ISSUED
*AND TESTED. THE DEB IS RESET AND THE FILE CLOSED. THE SMF BUFFER IS
*DEQUEUED FROM.
         SPACE
         LA    7,DISKCP2                SET R7 TO EOF WRITE CHAN. PGM..
         ST    7,DISKIOB+16             STORE ADDRESS IN THE IOB.
         XC    DISKIOB+32(8),DISKIOB+32 CLEAR IOB MBBCCHHR FIELD.
         MVC   DISKIOB+35(5),LOCA+96    MOVE IN THE CCHHR FOR DSCB.
         XC    ECB1,ECB1                CLEAR THE ECB.
         EXCP  DISKIOB                  WRITE AN EOF RECORD.
         WAIT  ECB=ECB1                 WAIT FOR COMPLETION.
         CLI   ECB1,X'7F'               TEST FOR A GOOD WRITE.
         BC    7,ABORT2                 BRANCH ON AN ERROR.
         SPACE
         MVC   36(12,6),DISKEXTN        RESET THE DEB.
*
*        SPMODE  PROB,*
         STM   14,2,12(13)
         CNOP  0,4
         BAL   15,*+8
         DC    V($SPMODE)
         L     15,0(15)
         SR    1,1
         BALR  14,15
         LM    14,2,12(13)
         DEQ  (Q,R,3,SYSTEM)            DEQUEUE FROM SMF BUFFER.
         CLOSE DISKEXCP                 CLOSE THE DATA SET.
         TITLE 'END OF RUN ROUTINES.'
*THE APPROPRIATE MESSAGE IS PRINTED AND THE RETURN CODE IS SET IN R15
*TO REFLECT EITHER A NORMAL OR ABNORMAL END.
         SPACE
         LA    3,17                     SET R3 TO MESSAGE LENGTH LESS 1
         LA    4,SMFD029                SET R4 TO POINT TO MESSAGE.
         SR    6,6                      CLEAR REGISTER 6. RC=0.
         BC    15,BL999A                BRANCH TO PRINT MESSAGE.
         SPACE
BL999    LA    3,19                     SET R3 TO MESSAGE LENGTH LESS 1
         LA    4,SMFD028                SET R4 TO POINT TO MESSAGE.
         LA    6,4                      SET R6 TO 4. RC=4.
         SPACE
BL999A   BAL   11,SR01                  WRITE THE MESSAGE.
         CLOSE PRINT
*        GOBACK  RC=(6)
         L     13,4(13)
         LR    15,6
         L     14,12(13)
         LM    0,12,20(13)
         MVI   12(13),255
         BR    14
         TITLE 'RECOVERY ROUTINE TO ACT ON AN SMFDATA(0) ERROR.'
*WHEN AN ERROR IS ENCOUNTERED WITH SMFDATA(0) EITHER WHEN THE FIRST
*FILE IS BEING READ, THE SECOND FILE IS BEING WRITTEN, OR THE TAPE IS
*BEING RECREATED, THIS CODING IS ENTERED TO ATTEMPT TO CREATE A NEW
*SMFDATA(0) FROM SMFDATA(-1).
         SPACE
*ENTRY IS AT THIS POINT IF THE ERROR IS ENCOUNTERED WHEN READING
*SMFDATA(0) TO CREATE SMFDATA(+1).
         SPACE
RCOVER10 CLOSE TAPEOUT                  CLOSE SMFDATA(+1).
         MVC   SMFD004+19(4),READ       SET APPROPRIATE MESSAGE UP.
         BC    15,RCOVER12              BRANCH TO MAIN CODING.
         SPACE
*ENTRY IS AT THIS POINT IF THE ERROR IS ENCOUNTERED WHEN RECREATING
*SMFDATA(0) FROM SMFDATA(-1) ACTUALLY IN THIS ROUTINE.
         SPACE
RCOVER11 CLOSE TAPERC                   CLOSE SMFDATA(-1).
         MVC   SMFD004+19(4),WRIT       SET APPROPRIATE MESSAGE UP.
         SPACE
RCOVER12 NI    ERRIND,X'7F'             SET OFF ERROR SWITCH X'80'.
         L     7,TAPEIN+44              SET R7 TO POINT TO DEB.
         L     7,32(7)                  SET R7 TO UCB ADDRESS.
         MVC   SMFD004+33(6),28(7)      MOVE VOL. SER. NO. TO MESSAGE.
         MVC   SMFD004+43(3),13(7)      MOVE UNIT ADDRESS TO MESSAGE.
         MVC   RCOVER1B+37(3),13(7)     MOVE UNIT ADDRESS TO WTOR.
         LA    3,45                     SET R3 TO LENGTH LESS ONE.
         LA    4,SMFD004                SET R4 TO MESSAGE.
         BAL   11,SR01                  PRINT THE MESSAGE.
         CLOSE TAPEIN                   CLOSE SMFDATA(0).
         SPACE
*THE OPERATOR IS NOW TOLD OF THE ERROR AND IS REQUESTED TO SAY WHETHER
*HE SUSPECTS THE TAPE OR THE UNIT.
         SPACE
RCOVER1A XC    ECB1,ECB1                CLEAR THE ECB.
         XC    REPLY,REPLY              CLEAR THE REPLY.
RCOVER1B WTOR  'SMFM001 I/O ERROR ON CUU IF YOU SUSPECT TAPE REPLY TAPEC
                ELSE REPLY UNIT',REPLY,4,ECB1,ROUTCDE=2,DESC=2
         WAIT  ECB=ECB1                 WAIT ON COMPLETION.
         CLC   REPLY,UNIT               TEST FOR UNIT.
         BC    8,RCOVER1G               BRANCH TO UNIT ROUTINE.
         CLC   REPLY,TAPE               TEST FOR TAPE.
         BC    7,RCOVER1A               BRANCH ON INVALID REPLY.
         SPACE
*THE OPERATOR SUSPECTS THE TAPE AND SO HE IS INFORMED OF THE ATTEMPT TO
*RECREATE IT FROM SMFDATA(-1). HE IS REQUESTED TO ENTER THE 6 DIGIT
*VOLUME SERIAL NUMBER OF THE TAPE ON WHICH SMFDATA(0) IS TO BE
*RE-CREATED. THIS IS THEN STORED IN THE JFCB ASSOCIATED WITH THE DCB
*TAPEIN (SMFDATA(0)).
         SPACE
         WTO   'SMFM002 ATTEMPTING TO RECREATE TAPE SMFDATA(0)',       *
               ROUTCDE=2,DESC=5
         LA    3,57                     SET R3 TO LENGTH LESS ONE.
         LA    4,SMFD005                SET R4 TO POINT TO MESSAGE.
         BAL   11,SR01                  PRINT THE MESSAGE.
         SPACE
RCOVER1C XC    ECB1,ECB1                CLEAR THE ECB.
         XC    VOLSER,VOLSER            CLEAR THE REPLY FIELD.
         WTOR  'SMFM003 ENTER 6 DIGIT REEL NUMBER OF SL TAPE TO REPLACEC
                BAD TAPE',VOLSER,6,ECB1,ROUTCDE=(2,3),DESC=2
         WAIT  ECB=ECB1                 WAIT FOR COMPLETION.
         MVZ   ZONES,VOLSER             MOVE ZONES TO CHECK FIELD.
         CLC   ZONES,ZEROS              TEST THAT ZONES ARE ALL FS.
         BC    7,RCOVER1C               BRANCH TO RETRY IF NOT.
         CLC   VOLSER,ZEROS             TEST THAT VOL. SER. NL ZERO.
         BC    4,RCOVER1C               BRANCH TO RETRY IF IT IS.
         CLC   VOLSER,NINES             TEST THAT VOL. SER. NG NINES.
         BC    2,RCOVER1C               BRANCH TO RETRY IF IT IS.
         MVC   TAPEIN+40(8),DD1         MOVE DDNAME DD1 TO DCB.
         MVC   JFCBDD1+118(6),VOLSER    MOVE VOL. SER. NO. TO JFCB.
         SPACE
*THE NEW SMFDATA(0) TAPE AND THE SMFDATA(-1) TAPES ARE OPENED. THE
*TWO FILES ON THE LATTER HAVE BEEN CONCATENATED TOGETHER AND ARE COPIED
*TO THE NEW TAPE TO RECREATE SMFDATA(0). IF AN ERROR OCCURS ON READING
*THE SMFDATA(-1) TAPE, THE JOB WILL ABEND WITH A DUMP. IF AN ERROR
*OCCURS ON THE NEW SMFDATA(0) THIS RECOVERY ROUTINE IS RE-ENTERED AT
*RCOVER11.
         SPACE
         OPEN  (TAPEIN,(OUTPUT)),TYPE=J
         OPEN  TAPERC
         SP    RECORDS,RECORDS          CLEAR THE RECORD COUNT.
         SPACE
RCOVER1D GET   TAPERC,WORKAREA          READ A RECORD INTO WORKAREA.
         TM    ERRIND,X'20'             TEST IF AN ERROR.
         BC    1,ABORT1                 BRANCH TO ABEND ON ERROR.
         AP    RECORDS,K1P              ADD TO RECORD COUNT.
         PUT   TAPEIN,WORKAREA          WRITE OUT RECORD.
         TM    ERRIND,X'80'             TEST IF AN ERROR.
         BC    1,RCOVER11               RE-ENTER THIS ROUTINE ON ERROR.
         BC    15,RCOVER1D              GO GET NEXT RECORD.
         SPACE
*THE VOLUME LIST FOR CATALOGUING SMFDATA(0) IS SET UP AND THE FILES ARE
*CLOSED. THE RECORD COUNT IS PRINTED.
         SPACE
RCOVER1E L     7,TAPEIN+44              SET R7 TO DEB ADDRESS.
         L     7,32(7)                  SET R7 TO UCB ADDRESS.
         MVC   VOLS+2(4),16(7)          MOVE DEVICE DATA TO VOLUME LIST
         MVC   VOLS+6(6),VOLSER         MOVE VOL. SER. NO. TO VOL. LIST
         CLOSE (TAPEIN,,TAPERC)         CLOSE THE TAPES.
         MVC   SMFD007+45(8),EDIT2      MOVE EDIT WORD TO PRINT.
         ED    SMFD007+45(8),RECORDS    EDIT RECORD COUNT.
         LA    3,52                     SET R3 TO LENGTH LESS ONE.
         LA    4,SMFD007                SET R4 TO MESSAGE.
         BAL   11,SR01                  PRINT MESSAGE.
         SPACE
*THE NEW TAPE IS CATALOGUED AS GENERATION ZERO. THE ABSOLUTE NAME IS
*FIRST EVALUATED AND STORED IN CURRGEN.
         SPACE
         MVC   CURRGEN,NEWGEN           MOVE THE NEWGEN ABSOLUTE NAME.
         PACK  WORK,CURRGEN+9(4)        PACK THE GENERATION NUMBER.
         SP    WORK,K1P                 REDUCE BY ONE TO GENERATION 0.
         UNPK  CURRGEN+9(4),WORK        RESET THE GENERATION NUMBER
         OI    CURRGEN+12,X'F0'         TO VALID FORM.
         CATALOG CAMLSTC                CATALOG NEW GENERATION 0.
         LTR   15,15                    TEST FOR A CATALOG ERROR.
         BC    7,ERR004                 BRANCH ON AN ERROR.
         SPACE
         MVC   SMFD009+30(6),VOLSER     MOVE VOL. SER. NO. TO MESSAGE.
         LA    3,35                     SET R3 TO LENGTH LESS ONE.
         LA    4,SMFD009                SET R4 TO MESSAGE.
         BAL   11,SR01                  PRINT THE MESSAGE.
         B     RCOVER1F
         SPACE
         TITLE 'SUBROUTINE TO WRITE A LINE AND PRINT HEADINGS.'
*ON FIRST ENTRY TO THIS SUBROUTINE THE FIRST PRINT AREA IS LOCATED AND
*CLEARED. SUBSEQUENTLY PAGE OVERFLOW IS TESTED FOR; IF IT EXISTS, A
*SKIP TO A NEW PAGE IS CAUSED AND THE HEADING PRINTED. THE LINE IS SET
*UP BY AN EXECUTED MOVE AND THEN PRINTED; THE NEXT AREA IS LOCATED AND
*CLEARED OUT. RETURN IS VIA REGISTER 11.
*
*       REGISTER    USAGE
*
*       2           POINTER TO PRINT AREA.
*       3           LENGTH OF LINE LESS ONE.
*       4           POINTER TO MESSAGE.
*       11          RETURN ADDRESS.
         SPACE
SR01     BC    15,SR01B                 BRANCH ONLY FIRST TIME.
         CP    OVFLOCNT,OVFLOLMT        TEST FOR OVERFLOW.
         BC    13,SR01A                 BRANCH IF NO OVERFLOW.
         MVI   0(2),X'F1'               SET ASCII NEW PAGE CHARACTER.
         MVC   1(71,2),HDNG             MOVE HEADING TO LINE.
         PUT   PRINT                    WRITE THE HEADING.
         LR    2,1                      SET R2 TO NEW AREA.
         MVI   0(2),X'40'               CLEAR THE AREA.
         MVC   1(132,2),0(2)
         MVI   0(2),X'F0'               SET ASCII SPACE 2 CHARACTER.
         MVC   OVFLOCNT,K2P             RESET THE LINE COUNT.
SR01A    EX    3,EXMOVE                 MOVE MESSAGE INTO PRINT AREA.
SR01B    NI    SR01+1,X'0F'             NO OP FIRST TIME BRANCH.
         PUT   PRINT                    WRITE THE LINE.
         LR    2,1                      SET R2 TO NEW AREA.
         MVI   0(2),X'40'               CLEAR THE AREA.
         MVC   1(132,2),0(2)
         AP    OVFLOCNT,K1P             ADD TO THE LINE COUNT.
         BCR   15,11                    RETURN VIA R11.
         TITLE 'SUBROUTINE TO CREATE SMF HEADER AND TRAILER RECORDS.'
*THIS ROUTINE HAS TWO ENTRY POINTS - SR02 AND SR02A. AT THE FORMER
*POINT THE MAJOR PART OF THE HEADER OR TRAILER (WITHOUT THE SMF RECORD
*CODE) IS SET UP. AT THE SECOND THE RECORD COUNT IS INCREMENTED AND THE
*SMF RECORD IN THE WORKAREA (EITHER READ IN FROM DISK OR CREATED THERE
*BY THE FIRST PART) IS WRITTEN TO TAPEIN AND TAPEOUT. RETURN IS VIA
*REGISTER 11.
         SPACE
SR02     MVC   WORKAREA(5),DUMPREC      MOVE THE RDW AND FIRST SMF BYTE
         TIME  BIN                      GET TIME IN BINARY 100TH SECS.
         ST    0,WORK                   STORE TIME IN WORK.
         MVC   WORKAREA+6(4),WORK       MOVE TIME TO SMF RECORD.
         ST    1,WORK                   STORE DATE IN WORK.
         MVC   WORKAREA+10(4),WORK      MOVE DATE TO SMF RECORD.
         OI    WORKAREA+13,X'0F'        CHANGE X'0C' TO X'0F'.
         L     5,SMCAPTR                SET R5 TO SMCA.
         MVC   WORKAREA+14(4),16(5)     MOVE SYSTEM ID ETC TO SMF REC..
         SPACE
SR02A    AP    RECORDS,K1P              ADD TO RECORD COUNT.
         PUT   TAPEIN,WORKAREA          WRITE RECORD TO SMFDATA(0).
         TM    ERRIND,X'80'             TEST IF AN ERROR.
         BC    1,RCOVER30               BRANCH TO THE RECOVERY CODE.
         PUT   TAPEOUT,WORKAREA         WRITE RECORD TO SMFDATA(+1).
         TM    ERRIND,X'40'             TEST IF AN ERROR.
         BC    1,RCOVER40               BRANCH TO THE RECOVERY CODE.
         BCR   15,11                    RETURN VIA REGISTER 11.
         TITLE 'ROUTINES ENTERED ON UNRECOVERABLE ERRORS.'
*THIS ROUTINE IS ENTERED ON A CATALOG LOOK UP TO FIND THE ABSOLUTE
*DATA SET NAME OF SMFDATA(+1).
         SPACE
ERR001   LA    3,38                     SET R3 TO LENGTH LESS ONE.
         LA    4,SMFD001                SET R4 TO MESSAGE.
         BC    15,ERRCOM                GO PRINT IT.
         SPACE
*THIS ROUTINE IS ENTERED ON AN SMF DSCB READ ERROR.
         SPACE
ERR002   MVC   SMFD002+16(1),HDNG+16    SET CORRECT DATA SET NAME.
         LA    3,32                     SET R3 TO LENGTH LESS ONE.
         LA    4,SMFD002                SET R4 TO MESSAGE.
         BC    15,ERRCOM                GO PRINT IT.
         SPACE
*THIS ROUTINE IS ENTERED IF THE SMF DATA SET IS EMPTY.
         SPACE
ERR003   MVC   SMFD003+16(1),HDNG+16    SET CORRECT DATA SET NAME.
         LA    3,32                     SET R3 TO LENGTH LESS ONE.
         LA    4,SMFD003                SET R4 TO MESSAGE.
         BC    15,ERRCOM                GO PRINT IT.
         SPACE
*THIS ROUTINE IS ENTERED WHEN ATTEMPTING TO CATALOG A NEW COPY OF
*SMFDATA(0) AND AN ERROR OCCURS.
         SPACE
ERR004   LA    3,31                     SET R3 TO LENGTH LESS ONE.
         LA    4,SMFD008                SET R4 TO MESSAGE.
         BC    15,ERRCOM                GO PRINT IT.
         SPACE
*THIS ROUTINE IS ENTERED ON AN ERROR ATTEMPTING TO CATALOG A NEW TAPE
*FOR SMFDATA(-3).
         SPACE
ERR005   LA    3,32                     SET R3 TO LENGTH LESS ONE.
         LA    4,SMFD013                SET R4 TO MESSAGE.
         BC    15,ERRCOM                GO PRINT IT.
         SPACE
*WHEN AN SMF DATA SET IS IN ERROR IT IS RENAMED BY HAVING AN X ADDED TO
*IT E.G. SYS1.MANX TO SYS1.MANXX. IF AN ERROR OCCURS IN THE RENAME
*PROCESS CONTROL PASSES TO HERE.
         SPACE
ERR006   MVC   SMFD022+16(1),HDNG+16    SET CORRECT SMF NAME.
         LA    3,29                     SET R3 TO LENGTH LESS ONE.
         LA    4,SMFD022                SET R4 TO MESSAGE.
         BC    15,ERRCOM                GO PRINT IT.
         SPACE
*ENTERED ON AN ERROR WHEN RENAMING SYS1.MANZ TO SYS1.MANX OR SYS1.MANY.
         SPACE
ERR007   LA    3,29                     SET R3 TO LENGTH LESS ONE.
         LA    4,SMFD023                SET R4 TO MESSAGE.
         BC    15,ERRCOM                GO PRINT IT.
         SPACE
*THIS CODE GETS CONTROL IF AN ERROR IS ENCOUNTERED WHEN CATALOGUING
*THE NEW SMFDATA GENERATION.
         SPACE
ERR008   LA    3,32                     SET R3 TO LENGTH LESS ONE.
         LA    4,SMFD024                SET R4 TO MESSAGE.
         BC    15,ERRCOM                GO PRINT IT.
         SPACE
*THIS CODE IS ENTERED IF A SWITCH HAS OCCURRED DURING THE DUMPING OF
*THE SMF DATA SET.
         SPACE
ERR009   DEQ  (Q,R,3,SYSTEM)
         WTO   'SMFM011 DATA SET SWITCH OCCURRED INFORM TSG RESTART THEC
               JOB',ROUTCDE=2,DESC=2
         LA    3,69                     SET R3 TO LENGTH LESS ONE.
         LA    4,SMFD026                SET R4 TO MESSAGE.
         SPACE
ERRCOM   BAL   11,SR01                  PRINT THE MESSAGE.
         BC    15,BL999                 GO TO ABNORMAL TERMINATE.
         EJECT
RCOVER1F LA    3,25                     SET R3 TO LENGTH LESS ONE.
         LA    4,SMFD010                SET R4 TO POINT TO MESSAGE.
         BAL   11,SR01                  PRINT MESSAGE.
         WTO   'SMFM005 SMFDUMP BEING RETRIED',ROUTCDE=2,DESC=5
         BC    15,BL000                 GO RETRY DUMP.
         SPACE
*IF THE OPERATOR SUSPECTED THE UNIT, THE JOB IS CANCELLED AND THE
*OPERATOR REQUESTED TO RESTART IT.
         SPACE
RCOVER1G WTO   'SMFM006 SMFDUMP BEING ABORTED VARY UNIT OFFLINE AND RESC
               TART JOB INFORM TSG',ROUTCDE=2,DESC=2
         LA    3,33                     SET R3 TO LENGTH LESS ONE.
         LA    4,SMFD011                SET R4 TO POINT TO MESSAGE.
         BAL   11,SR01                  PRINT MESSAGE.
         BC    15,BL999                 GO TERMINATE JOB.
         TITLE 'RECOVERY ROUTINE FOR AN ERROR ON SMFDATA(+1).'
*THIS ROUTINE MAY BE ENTERED WITH AN ERROR WRITING TO SMFDATA(+1) WHEN
*COPYING SMFDATA(0) ACROSS (AT POINT RCOVER21) OR WHEN READING THE TAPE
*BACK AS A CHECK (AT POINT RCOVER20). IT MAY ALSO BE ENTERED AT RCOVER2
*1 FROM RCOVER40 WHEN DUMPING SMF DATA SET TO SMFDATA(+1). THE OPERATOR
*IS ASKED IF HE SUSPECTS DRIVE OR TAPE. THE RESULTS IN TERMINATION AND
*A RESTART REQUEST. THE LATTER IN A NEW TAPE BEING MOUNTED AND
*CATALOGUED AS GENERATION -3.
         SPACE
*ENTRY IS AT THIS POINT ON A READ BACK ERROR.
         SPACE
RCOVER20 MVC   SMFD012+20(5),READ       SET MESSAGE TO A READ.
         BC    15,RCOVER22              GO TO MAIN CODE.
         SPACE
*ENTRY IS AT THIS POINT ON A WRITE ERROR.
         SPACE
RCOVER21 MVC   SMFD012+20(5),WRIT       SET MESSAGE TO A WRITE.
         SPACE
RCOVER22 NI    ERRIND,X'BF'             SET OFF ERROR SWITCH.
         L     7,TAPEOUT+44             SET R7 TO DEB.
         L     7,32(7)                  SET R7 TO UCB.
         MVC   SMFD012+35(6),28(7)      SET VOL. SER. NO. IN MESSAGE.
         MVC   SMFD012+45(3),13(7)      SET UNIT ADDRESS IN MESSAGE.
         MVC   RCOVER2B+37(3),13(7)     SET UNIT ADDRESS IN WTOR.
         LA    3,47                     SET R3 TO LENGTH LESS ONE.
         LA    4,SMFD012                SET R4 TO POINT TO MESSAGE.
         BAL   11,SR01                  PRINT MESSAGE
         CLOSE (TAPEIN,,TAPEOUT)
         SPACE
*THE OPERATOR IS REQUESTED TO ENTER WHETHER HE SUSPECTS THE TAPE OR THE
*DRIVE.
         SPACE
RCOVER2A XC    ECB1,ECB1                CLEAR ECB.
         XC    REPLY,REPLY              CLEAR REPLY AREA.
         SPACE
RCOVER2B WTOR  'SMFM007 I/O ERROR ON CUU IF YOU SUSPECT TAPE REPLY TAPEC
                ELSE REPLY UNIT',REPLY,4,ECB1,ROUTCDE=2,DESC=2
         WAIT  ECB=ECB1                 WAIT ON COMPLETION.
         CLC   REPLY,UNIT               TEST IF UNIT.
         BC    8,RCOVER1G               BRANCH IF IT IS.
         CLC   REPLY,TAPE               TEST IF TAPE.
         BC    7,RCOVER2A               BRANCH ON INVALID REPLY.
         SPACE
*THE OPERATOR IS NOW ASKED TO ENTER THE 6 DIGIT REEL NUMBER OF THE TAPE
*TO REPLACE THE BAD ONE.
         SPACE
RCOVER2C XC    ECB1,ECB1                CLEAR THE ECB.
         XC    VOLSER,VOLSER            CLEAR THE REPLY AREA.
         WTOR  'SMFM008 ENTER 6 DIGIT REEL NUMBER OF SL TAPE TO REPLACEC
                BAD TAPE',VOLSER,6,ECB1,ROUTCDE=(2,3),DESC=2
         WAIT  ECB=ECB1                 WAIT ON COMPLETION.
         MVZ   ZONES,VOLSER             MOVE ZONES TO TEST FIELD.
         CLC   ZONES,ZEROS              TEST FOR F ZONES.
         BC    7,RCOVER2C               RETRY IF NOT.
         CLC   VOLSER,ZEROS             TEST LESS THAN ZERO.
         BC    4,RCOVER2C               RETRY IF IT IS.
         CLC   VOLSER,NINES             TEST MORE THAN NINES.
         BC    2,RCOVER2C               RETRY IF IT IS.
         SPACE
*THE VOLUME SERIAL NUMBER IS PUT INTO THE JFCB AND THE VOLUME IS
*CATALOGUED AS SMFDATA(-3).
         SPACE
         MVC   JFCBDD2+118(6),VOLSER    MOVE VOL. SER. NO. TO JFCB.
         OPEN  TAPEOUT,TYPE=J
         L     7,TAPEOUT+44             SET R7 TO DEB.
         L     7,32(7)                  SET R7 TO UCB.
         MVC   VOLS+2(4),16(7)          MOVE DEVICE TYPE TO VOL. LIST.
         MVC   VOLS+6(6),VOLSER         MOVE VOL. SER. NO. TO VOL. LIST
         CLOSE TAPEOUT
         SPACE
         MVC   CURRGEN,NEWGEN           MOVE ABSOLUTE NAME OF +1.
         PACK  WORK,CURRGEN+9(4)        PACK THE GENERATION NUMBER.
         SP    WORK,K4P                 EVALUATE -3 ABSOLUTE NAME.
         UNPK  CURRGEN+9(4),WORK        UNPACK IT.
         OI    CURRGEN+12,X'F0'         SET CORRECT ZONE.
         CATALOG CAMLSTC
         LTR   15,15                    TEST IF ERROR.
         BC    7,ERR005                 BRANCH ON CATALOG ERROR.
         SPACE
         MVC   SMFD014+31(6),VOLSER     MOVE VOL. SER. NO. TO MESSAGE.
         LA    3,36                     SET R3 TO LENGTH LESS ONE.
         LA    4,SMFD014                SET R4 TO MESSAGE.
         BAL   11,SR01                  PRINT MESSAGE.
         BC    15,RCOVER1F              GO TO RETRY.
         TITLE 'RECOVERY ROUTINE FOR SECOND FILE ON SMFDATA(0).'
*IF AN ERROR IS MET ON WRITING THE SMF DUMP AS THE SECOND FILE ON
*SMFDATA(0), THE SMF DATA SET AND THE OUTPUT TAPE ARE CLOSED. A BRANCH
*IS TAKEN TO THE RECOVERY ROUTINE WHICH RECREATES GENERATION 0 AND
*STARTS AGAIN.
         SPACE
RCOVER30 CLOSE (DISKQSAM,,TAPEOUT)
         MVC   SMFD004+19(4),WRIT       SET UP THE MESSAGE.
         BC    15,RCOVER12              GO TO RECREATE TAPE.
         TITLE 'RECOVERY ROUTINE FOR SMFDATA(+1) MARK 2.'
*IF AN ERROR IS MET ON DUMPING THE SMF DATA SET TO WHAT WILL BECOME
*SMFDATA(+1), THE SMF DATA SET IS CLOSED AND CONTROL PASSES TO THE
*EARLIER ROUTINE TO GET A NEW TAPE.
         SPACE
RCOVER40 CLOSE DISKQSAM
         BC    15,RCOVER21              REVERT TO EARLIER ROUTINE.
         TITLE 'RECOVERY ROUTINE ROUTINE FOR THE SMF DASD DATA SET.'
*ON AN ERROR READING THE SMF DATA SET AND DUMPING IT TO DISK, THIS CODE
*IS ENTERED TO CONSTRUCT AN IEHDASDR CONTROL CARD AND LINK TO IEHDASDR
*TO PRINT THE BAD TRACK. THE ROUTINE CONTINUES TO READ THE DATA SET TO
*TRY TO LOCATE MORE ERRORS, AND TO PRINT THE OFFENDING TRACKS. AT THE
*END THE OFFENDING DATA SET IS RENAMED BY ADDING AN X SUFFIX TO ITS
*NAME AND THE RESERVE DATA SET IS NAMED TO THE OFFENDING DATA SET'S
*NAME.
         SPACE
RCOVER50 CLOSE (TAPEIN,,TAPEOUT)
         WTO   'SMFM009 ERROR ON SMF DATA SET INFORM TSG',ROUTCDE=2,   *
               DESC=2
         MVC   DISKQSAM+33(3),NEWEND+1  SET NEW DISK EODAD ADDRESS.
         MVC   DUMPCTL+16(1),HDNG+16    MOVE RIGHT SMF NAME TO CTL CARD
         MVC   SMFD019+16(1),HDNG+16    MOVE RIGHT SMF NAME TO MESSAGE.
         BC    15,RCOVER5B              GO TO MAIN PROCESSING.
         SPACE
*THIS SECTION CONTINUES TO READ THE DATA SET TO SEE IF MORE ERRORS
*EXIST.
         SPACE
RCOVER5A GET   DISKQSAM,WORKAREA        CONTINUE TO READ FILE.
         TM    ERRIND,X'10'             TEST FOR ERROR.
         BC    14,RCOVER5A              BRANCH BACK IF NOT.
         SPACE
*AN ERROR MESSAGE IS PRINTED ON SYSPRINT GIVING THE BAD TRACK'S ADDRESS
*AND AN IEHDASDR CONTROL CARD IS CREATED AND WRITTEN TO THE SYSIN FILE
*FOR USE BY IEHDASDR WHICH IS LINKED TO.
         SPACE
RCOVER5B NI    ERRIND,X'EF'             SET OFF ERROR SWITCH.
         MVC   SMFD019+32(10),BADCCHHR  MOVE BAD ADDRESS INTO MESSAGE.
         LA    3,41                     SET R3 TO LENGTH LESS ONE.
         LA    4,SMFD019                SET R4 TO MESSAGE.
         BAL   11,SR01                  PRINT MESSAGE.
         SPACE
         CLC   BADCCHHR(8),DUMPCTL+38   IS IT THE SAME TRACK.
         BC    8,RCOVER5A               BRANCH IF IT IS.
         SPACE
         MVC   DUMPCTL+38(8),BADCCHHR   SET UP THE IEHDASDR CONTROL
         MVC   DUMPCTL+51(8),BADCCHHR   CARD BEGIN AND END ADDRESSES.
         SPACE
         OPEN  (CTLFILE,(OUTPUT))
         PUT   CTLFILE,DUMPCTL          WRITE CARD IMAGE TO SYSIN.
         CLOSE CTLFILE
         SPACE
         LINK  EP=IEHDASDR,PARAM=(P),VL=1
         BC    15,RCOVER5A              GO GET NEXT RECORD.
         SPACE
*THE SMF DATA SET WITH THE ERROR IS RENAMED BY HAVING AN X ADDED TO IT
*E.G. SYS1.MANX TO SYS1.MANXX.
         SPACE
RCOVER5C L     7,DISKQSAM+44            SET R7 TO DEB.
         L     7,32(7)                  SET R7 TO UCB.
         MVC   VOLS+2(4),16(7)          SET VOLUME DATA IN VOL. LIST.
         MVC   VOLS+6(6),28(7)          SET VOL. SER. NO. IN VOL. LIST.
         CLOSE DISKQSAM
         SPACE
         SR    0,0                      CLEAR REGISTER ZERO.
         MVC   OLDNAME+8(1),HDNG+16     MOVE IN CORRECT DATA SET NAME.
         MVC   NEWNAME+8(1),HDNG+16     MOVE IN CORRECT DATA SET NAME.
         RENAME CAMLSTD
         LTR   15,15                    TEST FOR ERROR.
         BC    7,ERR006                 BRANCH ON ERROR.
         MVC   SMFD020+16(1),HDNG+16    SET UP RENAME MESSAGE TO
         MVC   SMFD020+34(1),HDNG+16    CORRECT DATA SET NAME.
         LA    3,35                     SET R3 TO LENGTH LESS ONE.
         LA    4,SMFD020                SET R4 TO POINT TO MESSAGE.
         BAL   11,SR01                  PRINT MESSAGE.
         SPACE
*THE RESERVE DATA SET SYS1.MANZ IS RENAMED AS THE BAD DATA SET.
         SPACE
         SR    0,0                      CLEAR REGISTER ZERO.
         MVC   NEWNAME,OLDNAME          MOVE IN THE APPROPRIATE NAMES
         MVI   OLDNAME+8,X'E9'          FOR THE RENAME OPERATION.
         XC    VOLS+12(2),VOLS+12       CLEAR SEQUENCE NO. FIELD.
         RENAME CAMLSTD
         LTR   15,15                    TEST FOR RENAME ERROR.
         BC    7,ERR007                 BRANCH ON ERROR.
         MVC   SMFD021+34(1),HDNG+16    SET UP MESSAGE.
         LA    3,34                     SET R3 TO LENGTH LESS ONE.
         LA    4,SMFD021                SET R4 TO MESSAGE.
         BAL   11,SR01                  PRINT MESSAGE.
         BC    15,BL999                 GO TERMINATE RUN.
         TITLE 'ABEND ROUTINE ONE.'
*THIS ROUTINE WILL TERMINATE THE JOB WITH A DUMP AND A CODE OF ONE IF
*AN ERROR IS ENCOUNTERED WHEN READING SMFDATA(-1) TO RECREATE SMFDATA
*(0). THE OPERATOR IS INFORMED AND A MESSAGE PUT ON SYSPRINT.
         SPACE
ABORT1   L     7,TAPERC+44              SET R7 TO DEB.
         L     7,32(7)                  SET R7 TO UCB.
         MVC   SMFD006+53(6),28(7)      MOVE IN VOL. SER. NO..
         MVC   SMFD006+63(3),13(7)      MOVE IN UNIT ADDRESS.
         WTO   'SMFM004 SMFDUMP ABORTED ERROR ON SMFDATA(-1) INFORM THEC
               TSG',ROUTCDE=2,DESC=2
         LA    3,65                     SET R3 TO LENGTH LESS ONE.
         LA    4,SMFD006                SET R4 TO POINT TO MESSAGE.
         BAL   11,SR01                  PRINT MESSAGE.
         ABEND 1,DUMP
         TITLE 'ABEND ROUTINE TWO.'
*THIS ROUTINE WILL TERMINATE THE JOB WITH A DUMP AND A CODE OF TWO IF
*AN ERROR IS ENCOUNTERED WHEN RESETTING THE SMF DATA SET. THE SMF
*BUFFER IS DEQUEUED FROM AND THE OPERATOR INFORMED.
         SPACE
ABORT2   DEQ  (Q,R,3,SYSTEM)
         WTO   'SMFM010 ERROR RESETTING SMF DATA SET INFORM TSG',      *
               ROUTCDE=2,DESC=2
         MVC   SMFD027+32(1),HDNG+16    MOVE IN CORRECT SMF NAME.
         LA    3,32                     SET R3 TO LENGTH LESS ONE.
         LA    4,SMFD027                SET R4 TO POINT TO MESSAGE.
         BAL   11,SR01                  PRINT MESSAGE.
         ABEND 2,DUMP
         TITLE 'CONSTANTS AND WORK AREAS WITH ALIGNMENT NEEDS.'
DWORD    DC    D'0'                     CONVERSION WORK AREA.
         SPACE
SAVE     DC    16F'0'                   SAVE AREA FOR CONVRT RTN..
SMCAPTR  DC    F'0'                     SMCA ADDRESS.
CONVRT   DC    F'0'                     ADDRESS OF RESIDENT CONVRT RTN.
LASTCCHH DC    F'0'                     ADDRESS OF LAST CCHH IN SMF DS.
TTRN     DC    F'0'                     CURRENT RELATIVE TRACK.
ECB1     DC    F'0'                     ECB.
WORK     DC    F'0'                     FULL WORD WORK AREA.
F3600    DC    F'3600'                  TIME CONVERSION FACTOR.
         SPACE
NEWEND   DC    A(RCOVER5C)              EODAD ADDRESS.
         CNOP  2,4
P        DC    H'0'
         SPACE
EXMOVE   MVC   1(1,2),0(4)              MOVE MESSAGE INSTRUCTION.
         TITLE 'CONSTANTS AND WORK AREAS WITHOUT ALIGNMENT NEEDS.'
K1P      DC    X'1C'
K2P      DC    X'002C'
K4P      DC    X'4C'
K60P     DC    X'060C'
         SPACE
EDIT1    DC    X'4020204B202020'
EDIT2    DC    X'4020202020202120'
EDIT3    DC    X'402020204B2020'
         SPACE
RECORDS  DC    X'0000000C'              RECORD COUNT.
         SPACE
OVFLOCNT DC    X'000C'                  LINES PER PAGE.
OVFLOLMT DC    X'056C'                  MAXIMUM LINES PER PAGE.
         SPACE
*THE FOLLOWING ARE USED IN THE WTOR ROUTINE TO IDENTIFY THE CAUSE OF
*TROUBLE - UNIT OR TAPE.
         SPACE
REPLY    DC    CL4'    '                REPLY AREA.
UNIT     DC    CL4'UNIT'                FIRST REPLY.
TAPE     DC    CL4'TAPE'                SECOND REPLY.
         SPACE
*THE FOLLOWING ARE USED IN THE WTOR ROUTINE TO IDENTIFY THE REEL NUMBER
*OF THE SCRATCH TAPE USED TO REPLACE THE BAD ONE.
         SPACE
VOLSER   DC    CL6'      '              REPLY AREA.
ZONES    DC    X'F0F0F0F0F0F0'          USED IN NUMERIC TEST.
ZEROS    DC    X'F0F0F0F0F0F0'          USED IN RANGE TEST.
NINES    DC    X'F9F9F9F9F9F9'          USED IN RANGE TEST.
         SPACE
ERRIND   DC    X'00'                    SYNAD ERROR SWITCHES.
         SPACE
SMFGEN1P DC    CL11'SMFDATA(+1)'        RELATIVE GENERATION NAME.
DD1      DC    CL8'DD1'                 DDNAME FOR SMFDATA(0).
DD4      DC    CL8'DD4'                 DDNAME FOR SECOND FILE ON ABOVE
         SPACE
READ     DC    CL5'READ '               USED TO MODIFY MESSAGES.
WRIT     DC    CL5'WRITE'               AS ABOVE.
         SPACE
Q        DC    CL8'SYSSMF01'            MAJOR ENQ NAME ON SMF BUFFER.
R        DC    CL3'BUF'                 MINOR ENQ NAME.
         SPACE
DUMPREC  DC    X'0012000000'            START OF SMF HEADER RECORD.
BADCCHHR DC    CL10'CCCCHHHHRR'         ADDRESS OF BAD RECORD.
CNT      DC    X'0000000001000000'      EOF RECORD - CCCCHHHHRRKKDDDD.
DISKEXTN DC    CL12'000000000000'       DEB STORE FOR FIRST XTNT. DATA.
         SPACE
DUMPCTL  DC    CL50' DUMP FROMDD=MANX,TODD=SYSPRINT,BEGIN=CCCCHHHH,END'
         DC    CL30'=CCCCHHHH'
         SPACE
HDNG     DC    CL50'DUMP OF SYS1.MANX TO SMFDATA.GNNNNVNN M/C NN DATE '
         DC    CL21'= YYDDD TIME = HH.MM '
         TITLE 'IOB AND CHANNEL PROGRAMS FOR SMF DATA SET'
         DS    0D
DISKIOB  DC    X'42000000'              FLAGS FOR COMMAND CHAINING.
         DC    A(ECB1)                  ADDRESS OF THE ECB.
         DC    2F'0'                    CHANNEL STATUS WORD.
         DC    A(DISKCP1)               ADDRESS OF CHANNEL PROGRAM.
         DC    A(DISKEXCP)              ADDRESS OF DASD DCB.
         DC    2F'0'                    RESTART BLOCK ERROR COUNTS.
         DC    2F'0'                    MBBCCHHR.
         SPACE
DISKCP1  CCW   X'31',DISKIOB+35,X'40',5 SEARCH ID EQUAL ON R0.
         CCW   X'08',*-8,X'00',0        TIC.
         CCW   X'1D',CNT,X'20',8        WRITE COUNT KEY DATA KL=0 DL=0.
         SPACE
DISKCP2  CCW   X'39',DISKIOB+35,X'40',4 SEARCH HOME ADDRESS EQUAL.
         CCW   X'08',*-8,X'00',0        TIC.
         CCW   X'29',DSNXORY,X'40',44   SEARCH KEY EQUAL.
         CCW   X'08',*-8,X'00',0        TIC.
         CCW   X'05',LOCA,X'20',96      WRITE DATA (DSCB).
         TITLE 'CAMLSTS,DATA SET NAMES, VOLUME LISTS AND WORK AREAS.'
*THIS FIRST CAMLST IS USED TO ASCERTAIN THE ABSOLUTE NAME OF
*SMFDATA(+1) WHICH IS RETURNED IN NEWGEN.
         SPACE
CAMLSTA  CAMLST NAME,NEWGEN,,LOCA
         SPACE
NEWGEN   DC    CL44' '                  RELATIVE AND ABSOLUTE NAME.
         SPACE
*THIS CAMLST READS THE DSCB OF THE APPROPRIATE SMF DATA SET WHOSE NAME
*IS IN DSNXORY INTO LOCA. THE VOLUME SERIAL NUMBER IS AT VOLS+6.
         SPACE
CAMLSTB  CAMLST SEARCH,DSNXORY,VOLS+6,LOCA
         SPACE
DSNXORY  DC    CL44' '                  SMF DATA SET NAME.
         SPACE
         DS    0D
LOCA     DC    350CL1' '                DSCB DATA FOR SMF DATA SET.
         SPACE
*THIS CAMLST IS USED TO RECATALOGUE A GIVEN TAPE INTO THE SMFDATA
*GENERATION DATA GROUP IF IT HAS TO BE RECREATED. THE ABSOLUTE NAME
*IS IN CURRGEN AND THE VOLUME LIST AT VOLS.
         SPACE
CAMLSTC  CAMLST RECAT,CURRGEN,,VOLS
         SPACE
CURRGEN  DC    CL44' '                  ABSOLUTE NAME.
         SPACE
VOLS     DC    H'1'                     NO. OF ENTRIES IN LIST.
         DC    X'00000000'              DEVICE TYPE.
         DC    CL6'000000'              VOLUME SERIAL NUMBER.
         DC    H'0'                     SEQUENCE NUMBER.
         SPACE
*THIS CAMLST IS USED IF NEEDED TO RENAME A DEFECTIVE SMF DATA SET AND
*TO RENAME SYS1.MANZ TO REPLACE THE DEFECTIVE DATA SET. OLDNAME AND
*NEWNAME HOLD THE APPROPRIATE DATA SET NAMES. THE VOLUME LIST IS AT
*VOLS.
         SPACE
CAMLSTD  CAMLST RENAME,OLDNAME,NEWNAME,VOLS
         SPACE
OLDNAME  DC    CL44'SYS1.MANX'          AS APPROPRIATE - SYS1.MANX/Y/Z.
NEWNAME  DC    CL44'SYS1.MANXX'         AS APPROPRIATE - SYS1.MANXX/YX.
         SPACE
*THIS CAMLST IS USED TO CATALOG THE NEW GENERATION OF SMFDATA. THE
*ABSOLUTE NAME IS AT NEWGEN AND THE VOLUME LIST AT VOLS.
         SPACE
CAMLSTE  CAMLST CAT,NEWGEN,,VOLS
         EJECT
         TITLE 'PROGRAM MESSAGES PRINTED BY SR01'
SMFD001  DC    CL39'SMFD001 SMFDATA(+1) CATLG LOOK-UP ERROR'
         SPACE
SMFD002  DC    CL33'SMFD002 SYS1.MANX DSCB READ ERROR'
         SPACE
SMFD003  DC    CL33'SMFD003 SYS1.MANX EMPTY - NO DUMP'
         SPACE
SMFD004  DC    CL46'SMFD004 SMFDATA(0) READ ERROR ON VOLSER ON CUU'
         SPACE
SMFD005  DC    CL47'SMFD005 ATTEMPTING TO RECREATE SMFDATA(0) FROM '
         DC    CL11'SMFDATA(-1)'
         SPACE
SMFD006  DC    CL48'SMFD006 RUN ABORTED DUE TO READ ERROR ON SMFDATA'
         DC    CL18'(-1) VOLSER ON CUU'
         SPACE
SMFD007  DC    CL46'SMFD007 SMFDATA(0) RECREATED RECORDS COPIED = '
         DC    CL7'0000000'
         SPACE
SMFD008  DC    CL32'SMFD008 SMFDATA(0) CATALOG ERROR'
         SPACE
SMFD009  DC    CL36'SMFD009 SMFDATA(0) CATALOGUED VOLSER'
         SPACE
SMFD010  DC    CL26'SMFD010 DUMP TO BE RETRIED'
         SPACE
SMFD011  DC    CL34'SMFD011 UNIT SUSPECTED JOB ABORTED'
         SPACE
SMFD012  DC    CL48'SMFD012 SMFDATA(+1) WRITE ERROR ON VOLSER ON CUU'
         SPACE
SMFD013  DC    CL33'SMFD013 SMFDATA(-3) CATALOG ERROR'
         SPACE
SMFD014  DC    CL37'SMFD014 SMFDATA(-3) CATALOGUED VOLSER'
         SPACE
SMFD015  DC    CL49'SMFD015 NUMBER OF RECORDS COPIED FROM SMFDATA(0) '
         DC    CL22'TO SMFDATA(+1) 0000000'
         SPACE
SMFD016  DC    CL42'SMFD016 DATA SET SWITCH HAS OCCURRED DUMP '
         DC    CL9'RESTARTED'
         SPACE
SMFD017  DC    CL46'SMFD017 0000000 RECORDS UP TO IPL  HH.HH YYDDD'
         SPACE
SMFD018  DC    CL45'SMFD018 LAST RECORD ON SMFDATA(+1) IS 0000000'
         SPACE
SMFD019  DC    CL42'SMFD019 SYS1.MANX READ ERROR AT CCCCHHHHRR'
         SPACE
SMFD020  DC    CL36'SMFD020 SYS1.MANX RENAMED SYS1.MANXX'
         SPACE
SMFD021  DC    CL35'SMFD021 SYS1.MANZ RENAMED SYS1.MANX'
         SPACE
SMFD022  DC    CL30'SMFD022 SYS1.MANX RENAME ERROR'
         SPACE
SMFD023  DC    CL30'SMFD023 SYS1.MANZ RENAME ERROR'
         SPACE
SMFD024  DC    CL33'SMFD024 SMFDATA(+1) CATALOG ERROR'
         SPACE
SMFD025  DC    CL37'SMFD025 SMFDATA(+1) CATALOGUED VOLSER'
         SPACE
SMFD026  DC    CL48'SMFD026 DATA SET SWITCH OCCURRED DURING DUMPING '
         DC    CL22'INFORM TSG RESTART JOB'
         SPACE
SMFD027  DC    CL33'SMFD027 ERROR RESETTING SYS1.MANX'
         SPACE
SMFD028  DC    CL20'SMFD028 ABNORMAL END'
         SPACE
SMFD029  DC    CL18'SMFD029 NORMAL END'
         SPACE
SMFD030  DC    C'SMFD030 SMF NOT INITIALISED'
SMFD031  DC    C'SMFD031 PRIMARY CLOSED BUT ALTERNATE OPEN.'
         TITLE 'DCB FOR THE MESSAGE FILE.'
PRINT    DCB   DSORG=PS,                                               C
               MACRF=PL,                                               C
               DDNAME=SMFPRINT,                                        *
               LRECL=133,                                              *
               BLKSIZE=133,                                            *
               RECFM=FA
         TITLE 'SMFDATA(0) DCB, SYNAD, JFCB AREA.'
TAPEIN   DCB   DDNAME=DD1,                                             C
               DSORG=PS,                                               C
               RECFM=VBS,                                              C
               SYNAD=SYN01,                                            C
               EROPT=ACC,                                              C
               LRECL=1000,                                             C
               BLKSIZE=1004,                                           C
               EODAD=BL060,                                            C
               MACRF=(GM,PM),                                          C
               EXLST=EXITS1
         SPACE
SYN01    OI    ERRIND,X'80'             SET ON SMFDATA(0) ERROR BIT.
         BCR   15,14                    RETURN VIA R14.
         SPACE
         DS    0F
EXITS1   DC    X'87'
         DC    AL3(JFCBDD1)             ADDRESS OF JFCB AREA.
         SPACE
JFCBDD1  DC    CL176' '                 JFCB FOR SMFDATA(0) - DD1.
         EJECT
         TITLE 'SMFDATA(+1) DCB, SYNAD, JFCB AREA.'
TAPEOUT  DCB   DDNAME=DD2,                                             C
               DSORG=PS,                                               C
               RECFM=VBS,                                              C
               SYNAD=SYN02,                                            C
               LRECL=1000,                                             C
               BLKSIZE=1004,                                           C
               MACRF=(PM,GM),                                          C
               EXLST=EXITS2,                                           C
               EODAD=BL120
         SPACE
SYN02    B     RCOVER21
         SPACE
         DS    0F
EXITS2   DC    X'87'
         DC    AL3(JFCBDD2)             ADDRESS OF JFCB AREA.
         SPACE
JFCBDD2  DC    CL176' '                 JFCB FOR SMFDATA(+1) - DD2.
         TITLE 'DCB FOR SMFDATA(-1) USED TO RECREATE SMFDATA(0).'
TAPERC   DCB   DDNAME=DD3,                                             C
               DSORG=PS,                                               C
               RECFM=VBS,                                              C
               SYNAD=SYN03,                                            C
               EROPT=ACC,                                              C
               LRECL=1000,                                             C
               BLKSIZE=1004,                                           C
               MACRF=GM,                                               C
               EODAD=RCOVER1E
         SPACE
SYN03    OI    ERRIND,X'20'             SET ON SMFDATA(-1) ERROR BIT.
         BCR   15,14                    RETURN VIA R14.
         TITLE 'DCB FOR THE SMF DATA SET.'
DISKQSAM DCB   DDNAME=MANX,                                            C
               DSORG=PS,                                               C
               RECFM=VBS,                                              C
               SYNAD=SYN04,                                            C
               EROPT=ACC,                                              C
               EODAD=BL100,                                            C
               MACRF=GM
         SPACE
SYN04    OI    ERRIND,X'10'             SET ON THE SMF DATA SET ERROR.
         SYNADAF ACSMETH=QSAM           GET ADDRESS OF BAD TRACK.
         MVC   BADCCHHR,111(1)          STORE ADDRESS OF BAD TRACK.
         SYNADRLS
         BCR   15,14                    RETURN VIA R14.
         TITLE 'DCB FOR THE CONTROL CARD FILE CREATED FOR IEHDASDR.'
CTLFILE  DCB   DDNAME=SYSIN,                                           C
               DSORG=PS,                                               C
               RECFM=F,                                                C
               LRECL=80,                                               C
               BLKSIZE=80,                                             C
               MACRF=PM
         TITLE 'EXCP DCB FOR THE SMF DATA SET.'
DISKEXCP DCB   DDNAME=MANX,                                            C
               DSORG=DA,                                               C
               MACRF=(E),                                              C
               DEVD=DA
         TITLE 'SMF RECORD WORK AREA.'
*THIS IS THE SMF RECORD WORK AREA OF 33K BYTES TO ALLOW FOR THE LARGEST
*POSSIBLE SMF RECORD.
         SPACE
WORKAREA DS    CL33000
         END
