VTOCTEST CSECT
*
*       THIS PROGRAM READS THE FORMAT 5 DSCB'S OF THE VTOC TO DETERMINE
*       THE NUMBER OF FREE CYLINDERS.
*       IF THIS IS LESS THAN THE NUMBER REQUESTED IN THE PARM FIELD
*       THEN THE PROGRAM LINKS TO IEHLIST TO PROVIDE A VTOC LISTING
* IF THE PARM FIELD IS OMMITTED THE TOTAL NO OF FREE CYLINDERS ON THE
* PACK IS PASSED AS THE RETURN CODE.
* TO INVOKE -
* //STEPNAME EXEC PGM=VTOCTEST(,PARM=NNNN)
* //SYSUT1 DD VOL=SER=DISKNO,UNIT=DISK,DISP=OLD
*    PLUS JCL REQUIRED FOR IEHLIST (IF PARM USED)
*
**  WRITTEN BY PETER HAVERCAN ON 21/04/72 IN FOUR HOURS FLAT.
*
R0       EQU       0                   * O/S
R1       EQU       1                   * O/S AND WORK
R2       EQU       2                   * CONTAINS NO. OF CYL REQUESTED
R3       EQU       3                   * WORK POINTER
R4       EQU       4
R5       EQU       5                   * INDEX REGISTER IN BXLE
R6       EQU       6                   * INCREMENT IN BXLE
R7       EQU       7                   * TOP POINTER IN BXLE
R8       EQU       8                   * CONTAINS TOTAL CYLS ON DISC
R9       EQU       9                   * POINTER SWITCH
R10      EQU       10
R11      EQU       11
R12      EQU       12
R13      EQU       13                  * SAVEAREA POINTER AND BASE
R14      EQU       14                  * RETURN POINTER
R15      EQU       15                  * ENTRY POINT AND RETURN CODE
         SPACE     2
         B         16(R15)
         DC        AL1(8)
         DC        CL11'VTOCTEST'
         STM       R14,R12,12(R13)
         BAL       R15,96(R15)         * BRANCH AROUND SAVEAREA
         USING     *,R13               * BASE = R13
         DC        18F'0'              * SAVEAREA
         ST        R13,4(R15)          * O/S
         ST        R15,8(R13)              SAVEAREA
         LR        R13,R15                   LINKAGE
         L         R3,0(R1)            * GET PARM ADDR
         LH        R2,0(R3)            * PICK UP PARM LNGTH
         LTR       R2,R2               * IS IT ZERO?
         BZ        CVBEXIT             * YES
         LA        R5,2(R3)            * START ADDR OF PARM
         LA        R6,1                * ONE FOR INCREMENT
         LA        R7,1(R2,R3)         * LAST BYTE OF PARM
         SR        R2,R2               * CLEAR WORK REG
CVBLOOP  CLI       0(R5),C'0'          * TEST FOR NUMERIC
         BL        CVBEXIT             * NON-NUMERIC FOUND
         IC        R1,0(R5)            * PICK UP THE NUMBER
         N         R1,=F'15'           * CLEAR OUT ZONE
         MH        R2,KH10             * MULT EXISTING # BY 10
         AR        R2,R1               * ADD LO-ORDER DIGIT
         BXLE      R5,R6,CVBLOOP       * REPEAT FOR ALL DIGITS IN PARM
CVBEXIT  EQU       *
         RDJFCB    MF=(E,OPENVTOC)     * READ VTOC JFCB
         MVI       JFCBDSNM,X'04'      * SET UP
         MVC       JFCBDSNM+1(43),JFCBDSNM * VTOC DSNAME
         OPEN      MF=(E,OPENVTOC),TYPE=J * AND OPEN THE VTOC
         TM        VTOC+48,X'10'       * CHECK OPEN SUCCESSFUL
         BO        OPENOK              * NO SWEAT ..
         ABEND     2                   * TOO BAD, CHUM
OPENOK   EQU       *
         L         R1,VTOC+44          * GET DEB ADDRESS
         MVC       FDAD+1(6),36(R1)    * MOVE BBCCHH OF EXTENT START
         MVI       FDAD+7,2            * FORMAT5 IS 2ND RECD ON TRACK
         SR        R8,R8               * CLEAR OUT TOTAL NO. OF CYLS
READFMT5 OC        FDAD+3(5),FDAD+3    * TEST CCHHR FOR ZERO
         BZ        FMT5END             * NO MORE FORMAT-5'S
         READ      DECB2,DI,VTOC,VTOCBUFF+44,96,VTOCBUFF,FDAD
         CHECK     DECB2               * READ A FORMAT5
         CLI       DS5FMTID,C'5'       * CHECK IT IS A FMT5
         BE        FMT5GOOD            * ITS A SURE THING
         ABEND     5,DUMP              * ELSE WE CRASH...
FMT5GOOD LA        R5,DS5AVEXT         * ADDRESS OF EXTENT DESCRIPTION
         LA        R6,5                * LENGTH OF DESCRIPTION
         LA        R7,DS5AVEXT+35      * LAST EXTENT IN KEY AREA
         LA        R9,PART2            * POINTER FOR SWITCH
LOOP1    MVC       DWORK(5),0(R5)      * ALIGN THE DESCRIPTOR FIELD
         AH        R8,DWORK+2          * ADD UP THE NUMBER OF CYLS
         BXLE      R5,R6,LOOP1         * POINT TO NEXT EXTENT DESCRIPTN
         BR        R9                  * SWITCH DEPENDING ON SECTION
PART2    LA        R5,DS5MAVET         * RESET BXLE REGISTERS
         LA        R7,DS5MAVET+85          FOR SECOND PART OF DSCB
         BAL       R9,LOOP1            * AND PERFORM CALC FOR REMAINDER
         MVC       FDAD+3(5),DS5PTRDS  * POINT FDAD TO NEXT FORMAT 5
         B         READFMT5            * AND READ IT
FMT5END  EQU       *
         EJECT
         CVD       R8,DWORK            * CONVERT # CYLS TO DECIMAL
         MVC       WTO#CYL,=X'40202120' * MOVE EDIT MASK
         ED        WTO#CYL,DWORK+6     * THEN EDIT
         MVC       WTOSER,JFCBVOLS     * MOVE VOLUME SERIAL NUMBER
         WTL       MF=(E,WTOMSG)       * ISSUE MESSAGE
         CLOSE     (VTOC,REREAD)       * CLOSE VTOC FOR IEHLIST
         LTR       R2,R2               * TEST REQUESTED SPACE
         BZ        ENDUP               * NO REQ OR ZERO REQ
         SR        R15,R15             * ZERO RETURN CODE
         CR        R2,R8               * COMPARE ACTUAL TO REQ SPACE
         BNH       EXIT                * REQUEST IS LOW - DON'T LINK
         LINK      EP=IEHLIST,PARAM=NULL,VL=1
         ABEND     1,,STEP             * ABEND IF NOT ENOUGH SPACE
ENDUP    EQU       *                   * IF NO PARM, OR PARM=0
         LR        R15,R8                  RETURN CODE = NO. OF CYL
EXIT     L         R13,4(R13)          * RESTORE SAVEAREA POINTER
         RETURN    (14,12),RC=(15)     * AND RETURN
         EJECT
OPENVTOC OPEN      (VTOC,INPUT),MF=L
KH10     DC        H'10'               * CONSTANT
NULL     DC        H'0'                * PARAMETER LIST FOR IEHLIST
         SPACE     2
         PRINT     NOGEN
VTOC     DCB   DDNAME=SYSUT1,DSORG=DA,KEYLEN=44,BLKSIZE=96,            *
               EXLST=EXITLIST,RECFM=F,MACRF=RIC,OPTCD=A
         SPACE     2
EXITLIST DC        X'87',AL3(JFCBAREA)
DWORK    DC        D'0'                * DOUBLE-WRD WORK-AREA
FDAD     DC        D'0'                * FULL DISC ADDRESS
         LTORG
         DC        0F'0'               * ALIGNMENT ONLY
WTOMSG   DC        AL2(WTOEND-*,0)     * LENGTH DESCRIPTOR WORD
         DC        C'AVAILABLE SPACE ON '
WTOSER   DC        CL6' ',C' ='
WTO#CYL  DC        CL4' '
         DC        C' CYL'
WTOEND   EQU       *
         DS        0F
JFCBAREA DS        0CL176              * SPACE FOR VTOC JFCB
JFCBDSNM DS        CL44                * DSNAME
         DS        CL132               * REST OF JFCB
JFCBVOLS EQU       JFCBAREA+118        * VOLUME SERIAL NUMBER
         DS        0F
VTOCBUFF DS        0CL140              * BUFFER FOR VTOC RECORDS
DS5KEYID DS        X'05050505'         * KEY IDENTIFICATION
DS5AVEXT DS        XL5                 * AN AVAILABLE EXTENT
DS5EXTAV DS        XL35                * SEVEN MORE AVAILABLE EXTENTS
DS5FMTID DS        C'5'                * FORMAT IDENTIFIER
DS5MAVET DS        XL90                * 18 MORE AVAILABLE EXTENTS
DS5PTRDS DS        XL5                 * CCHHR OF NEXT FORMAT 5
         END
