OSSPRINT CSECT
***********************************************************************
*                                                                     *
*            === OSSPRINT R1.1 - PHR NOV 79 ===                       *
*  === OSSPRINT R2.1 - FORMAT ROUTINE ADDED MAY 80 BY KMK ===         *
*                                                                     *
*        THIS PROGRAM IS USED TO PRINT A DATA SET.                    *
*        INPUT IS AN FB,80 SEQ DATA SET OR PDS MEMBER                 *
*        OUTPUT IS AN FBA,133 PRINTFILE FORMATTED ACCORDING           *
*          TO CONTROL CARDS IN THE DATA SET.                          *
*                                                                     *
*        JCL IS AS FOLLOWS:                                           *
*          // EXEC PGM=OSSPRINT                                       *
*          //STEPLIB DD DSN=UTLIB,DISP=SHR                            *
*          //IN DD DSN='INPUT D.S. NAME',DISP=SHR,DCB=(......         *
*          //OUT DD SYSOUT=A,DCB=(RECFM=FBA,LRECL=133,.....           *
*                                                                     *
*        IT CAN BE INVOKED UNDER TSO USING FOLLOWING CLISTS :         *
*        OSSPRINT                                                     *
*        OSSPRNT2                                                     *
*        OSSPRNT3  (SEQ OR PDS)                                       *
*        OSSLIST   (TO VIEW ON SCREEN)                                *
*    USE HELP TO GET DETAILS OF CLISTS                                *
*                                                                     *
*        VALID CONTROL CARDS ARE:                                     *
*      >>PAGE                 START NEW PAGE                          *
*      >>SPACENN              SPACE NN LINES                          *
*      >>INDENTNN             INDENT NN CHARS                         *
*      >>NOINDENT             STOP INDENTING                          *
*      >>TITLE<.......>       PUT OUT TITLES                          *
*      >>DATE                 PUT OUT DATE                            *
*      >>NOTITLE              STOP TITLES                             *
*      >>FORMAT               INVOKE FORMAT ROUTINE                   *
*      >>NOFORMAT             STOP FORMATTING                         *
*      >>NUMBERNN(>SPACE)     NUMBER >>* LINES                        *
*      >>*                    TEXT TO BE NUMBERED                     *
*      >>OVERPRT              PRINT NEXT LINE ON TOP OF LAST          *
*      >>MARGINNN             RIGHT MARGIN FOR FORMAT IS AT NN        *
*                                (DEFAULT IS 80)                      *
*      >>DATANN               PRINT NEXT NN LINES UNCHANGED           *
*      >>NUMPAGENNXX          PRINT PAGE NOS IN TITLE AT NN           *
*                                STARTING AT PAGE XX (DEFAULT 1)      *
*                                                                     *
*      >>INDEX<.....>         ADD ..... TO INDEX WITH PAGE NO.        *
*                                                                     *
*       FLAGS USED AS FOLLOWS :                                       *
*                                                                     *
* FLAG     .... ...1    NON>> FLAG                                    *
*          .... ..1.    INDENT                                        *
*          .... .1..    FORMAT                                        *
*          .... 1...    TITLE                                         *
*          ...1 ....    SPACE BETWEEN NUMBERED LINES                  *
*          ..1. ....    FORMAT OUTPUT LINE TO BE INITIALISED          *
*          .1.. ....    FORMAT PADDING SWITCH                         *
*          1... ....    SKIPPING LINES                                *
*                                                                     *
* FLAG2    .... ...1    PAGE SETUP BEFORE PRINTING LINE               *
*          .... ..1.    PRINTING DATA LINES                           *
*          .... .1..    NUMBERING PAGES                               *
*          .... 1...    USING TERMINAL LIST FORMAT                    *
*          ...1 ....    INDEX ENTRIES EXIST                           *
*          ..1. ....    PUT OUT DATE                                  *
*          11.. ....    RESERVED                                      *
*                                                                     *
***********************************************************************
         EJECT
         KSAVE 12,*
         L     2,0(,1)
         LH    1,0(,2)
         C     1,=F'4'
         BL    PRINT
         CLC   2(4,2),=C'LIST'
         BNE   PRINT
         OI    FLAG2,X'08'
PRINT    EQU   *
         OPEN  (F1,,F2,OUTPUT)
         SR    4,4
         SPACE 3
READ     EQU   *
         NI    FLAG2,X'FE'
         MVC   RECORD(80),BLANKS        BLANK OUT
         GET   F1,RECORD
         CLC   RECORD(2),=C'>>'         FIRST TWO CHARS >> ?
         BNE   RETAST                   NO
         TM    FLAG,X'04'               FORMAT FLAG ON ?
         BZ    PAGE                     NO
         TM    FLAG,X'20'               FORMAT INITIALISE FLAG ON ?
         BO    PAGE                     YES - FORMAT BUFFERS CLEARED
         LA    2,PRTLINE                PUT LAST LINE
         BAL   3,WRITE                  CLEAR LINE
         OI    FLAG,X'20'               SET FLAG TO INIT FMT
         B     PAGE                     GO PROCESS CONTROL CARD
         SPACE 3
RETAST   EQU   *
         OI    FLAG,X'01'               SET NON>> FLAG
         TM    FLAG2,X'02'              DATA FLAG ON ?
         BO    DODATA                   YES
         TM    FLAG,X'04'               FORMAT FLAG ON ?
         BO    FORMAT                   YES
         SPACE
INVLD    EQU   *
         TM    FLAG,X'02'               INDENT FLAG ON ?
         BNO   MOVE                     NO
         LH    2,MOVEIND+2              CHANGE
         LR    3,2                        OFFSET WITHIN PRINT LINE
         AR    3,4                          THAT DATA
         STH   3,MOVEIND+2                    IS MOVED TO.
MOVEIND  MVC   PRTLINE+1(72),RECORD     MOVE IN DATA
         STH   2,MOVEIND+2              CHANGE BACK OFFSET
         LA    2,PRTLINE
         BAL   3,WRITE
         B     READ
         SPACE 3
MOVE     EQU   *
         MVC   PRTLINE+1(72),RECORD
         LA    2,PRTLINE
         BAL   3,WRITE
         B     READ
         SPACE 5
WRITE    EQU   *
         L     1,LINECT                  GET PREVIOUS LINE COUNT
         C     1,=F'60'                  FULL PAGE DONE ?
         BL    WRITELNE                  NO - GO PUT LINE
         OI    FLAG2,X'01'               SET 'RETURN HERE' FLAG
         ST    3,WRITERTN                SAVE RETURN ADDRESS
         MVC   SAVELINE(133),0(2)        SAVE OUTPUT LINE
         MVC   0(133,2),BLANKS
         B     DOPAGE                    GO SET UP NEW PAGE
WRITEON  EQU   *
         NI    FLAG2,X'FE'
         L     1,LINECT
         L     3,WRITERTN                PICK UP RETURN ADDRESS
         LA    2,SAVELINE
         TM    FLAG,X'80'
         BZ    WRITELNE
         XI    FLAG,X'80'
         BR    3
WRITELNE EQU   *
         LA    1,1(,1)                   INCREMENT LINE COUNT
         ST    1,LINECT                  SAVE FOR NEXT TIME
         TM    FLAG2,X'08'
         BZ    PUTLNE
         LA    2,1(,2)
PUTLNE   EQU   *
         PUT   F2,(2)                    PUT LINE
         TM    FLAG2,X'08'
         BZ    CLRLINE
         BCTR  2,0
CLRLINE  EQU   *
         MVC   0(133,2),BLANKS           BLANK OUT LINE
         BR    3                         RETURN TO CALLER
         SPACE 3
EOF      EQU   *
         CLOSE F1
         TM    FLAG,X'04'
         BZ    CLOSE2
         LA    2,PRTLINE
         BAL   3,WRITE          OUTPUT LAST FORMATTED LINE
CLOSE2   EQU   *
         TM    FLAG2,X'10'
         BZ    CLOSEIT
         MVC   PRTLINE(133),BLANKS
         MVI   PRTLINE,C'1'
         MVC   PRTLINE+10(5),=C'INDEX'
         XC    LINECT(4),LINECT
         MVC   TITLE(80),BLANKS
         LA    2,PRTLINE
         BAL   3,WRITE
         MVC   PRTLINE(133),BLANKS
         MVI   PRTLINE,C'0'
         LA    2,PRTLINE
         BAL   3,WRITE
         MVI   PRTLINE,C' '
         LA    4,INDXTABL
INDXLOOP EQU   *
         C     4,IXENTRY
         BNL   CLOSEIT
         MVC   PRTLINE+1(72),0(4)
         LA    2,PRTLINE
         BAL   3,WRITE
         LA    4,72(,4)
         B     INDXLOOP
CLOSEIT  EQU   *
         CLOSE F2
         KRETN
         SPACE 5
*--------------------*
*   FORMAT ROUTINE   *
*--------------------*
FORMAT   EQU   *
         LA    6,RECORD                  R6 -> INPUT
         LA    11,72(,6)                 R11 -> END OF INPUT REC
         LA    9,PRTLINE+1               R9 ->
         A     9,RTMGN                         END OF OUTPUT LINE
         TM    FLAG,X'20'                OUTPUT PTRS TO BE INIT'L'D ?
         BZ    FLOOP1                    NO - GO GET INPUT
         LA    7,PRTLINE+1               YES - R7 ->
         AR    7,4                             OF O/P (WITH INDENT)
         NI    FLAG,X'DF'                TURN OFF INIT FLAG
         SPACE
FLOOP1   EQU   *
         CR    6,11                      PAST END OF INPUT ?
         BNL   READ                      YES - GO GET NEXT REC
         CLI   0(6),C' '                 THIS CHAR BLANK ?
         BNE   FFOUND                    NO - FOUND START OF WORD
         LA    6,1(,6)                   YES - GET NEXT CHAR
         B     FLOOP1
         SPACE
FFOUND   EQU   *
         LR    8,6                       SAVE START OF WORD
         SPACE
FLOOP2   EQU   *
         CLI   0(8),C' '                 THIS CHAR BLANK ?
         BE    ENDWD                     YES - FOUND END OF WORD
         LA    8,1(,8)                   NO - POINT TO NEXT CHAR
         CR    8,11                      PAST END OF INPUT ?
         BL    FLOOP2                    NO - GO CHECK CHAR
ENDWD    EQU   *                         COMPLETE WORD FOUND
         SR    8,6                       GET WORD LENGTH
         LR    10,7                      GET LOC OF END OF
         AR    10,8                         WORD ON O/P LINE
         CR    10,9                      END PAST RIGHT MARGIN ?
         BNH   WDMOVE                    NO - GO MOVE WORD TO LINE
         SPACE 2
         BCTR  7,0                       YES - IGNORE FINAL BLANK
         CR    7,9                       NEED TO PAD LINE ?
         BNL   PUTLINE                   NO - GO WRITE LINE
         XI    FLAG,X'40'                SWITCH PADDING LOCATION FLAG
         ST    8,WDLEN                   SAVE R8
         LA    8,PRTLINE+1(4)            R8 -> START OF DATA TO PAD
         SR    9,7                       GET NO. OF PADS REQUIRED
         TM    FLAG,X'40'                PADDING FROM RIGHT ?
         BO    PADRIGHT                  YES
         LA    10,PADLINE+1(4)           R10 -> START OF PADDED AREA
PLOOP1   EQU   *
         MVC   0(1,10),0(8)              MOVE CHAR
         LA    8,1(,8)                   INCR
         LA    10,1(,10)                   PTRS
         CR    7,8                       REACHED END OF DATA TO PAD ?
         BNH   NOPAD                     YES - GIVE UP PADDING
         CLI   0(8),C' '                 THIS CHAR BLANK ?
         BNE   PLOOP1                    NO - GO GET NEXT
         LA    10,1(,10)                 YES - ALLOW FOR PAD
         BCT   9,PLOOP1                  DECR NO. PADS REQ & GET NXT CH
         SR    7,8                       ALL PADS DONE
         BCTR  7,0                         MOVE REMAINDER
         EX    7,MOVEREST                    OF LINE UNCHANGED
         B     ENDPAD                    GO OUTPUT LINE
         SPACE 2
PADRIGHT EQU   *
         LA    10,PADLINE+1              R10 -> END OF
         A     10,RTMGN                     PADDED AREA
         SPACE
PLOOP2   EQU   *
         BCTR  7,0                       DECR PTRS TO
         BCTR  10,0                         PRECEEDING CHAR
         MVC   0(1,10),0(7)              MOVE CHAR
         CR    7,8                       REACHED END OF DATA TO PAD
         BL    NOPAD                     YES - GIVE UP PADDING
         CLI   0(7),C' '                 THIS CHAR BLANK ?
         BNE   PLOOP2                    NO - GO GET NEXT
         BCTR  10,0                      YES - ALLOW FOR PAD
         BCT   9,PLOOP2                  DECR NO. PADS REQ & GET NXT CH
         LA    10,PADLINE+1(4)           R10 -> START OF PAD AREA
         SR    7,8                       MOVE REST
         BCTR  7,0                         OF LINE
         EX    7,MOVEREST                    UNCHANGED
         SPACE 2
ENDPAD   EQU   *
         LA    2,PADLINE
         BAL   3,WRITE
         MVC   PRTLINE(133),BLANKS         CLEAR PRINT AREA
         B     NEWLINE                     GO RESTORE VALUES
         SPACE 2
NOPAD    EQU   *
         LA    2,PRTLINE
         BAL   3,WRITE
         MVC   PADLINE(133),BLANKS
         SPACE 2
NEWLINE  EQU   *
         L     8,WDLEN                     RESTORE R8
         LA    9,PRTLINE+1                 RESET R9
         A     9,RTMGN                        TO END OF O/P LINE
         B     SETLINE                     GO CLEAR PRINT LINE
         SPACE 2
PUTLINE  EQU   *
         LA    2,PRTLINE
         BAL   3,WRITE
         SPACE
SETLINE  EQU   *
         LA    7,PRTLINE+1                     INITIALISE O/P
         AR    7,4                                LINE POINTERS
         NI    FLAG,X'DF'                      SET INIT FLAG OFF
         SPACE 2
WDMOVE   EQU   *
         BCTR  8,0                       GET M/C LENGTH OF WORD
         EX    8,MOVEWD                  MOVE WORD TO LINE
         LA    6,1(8,6)                  R6 ->END OF WORD ON INPUT
         LA    7,2(8,7)                  R7 -> END WD ON O/P + BLANK
         B     FLOOP1                    GO GET NEXT WORD
         EJECT
****************************************
*   CONTROL CARD PROCESSING ROUTINES   *
****************************************
         SPACE 5
PAGE     EQU   *
         CLC   RECORD+2(4),=C'PAGE'          >>PAGE ?
         BNE   SPACE
DOPAGE   EQU   *
         SR    2,2
         ST    2,LINECT                      ZERO LINE COUNT
         MVC   PRTLINE(133),BLANKS           PUT OUT BLANK LINE
         MVI   PRTLINE,C'1'
         TM    FLAG2,X'08'
         BZ    CHKTITLE
         LA    2,PRTLINE
         BAL   3,WRITE
         MVC   PRTLINE+1(79),PAGEMARK
         LA    2,PRTLINE
         BAL   3,WRITE
         MVC   PRTLINE(133),BLANKS           PUT OUT BLANK LINE
         LA    2,PRTLINE
         BAL   3,WRITE
CHKTITLE EQU   *
         TM    FLAG,X'08'                    TITLE FLAG ON ?
         BO    TITLE1                        YES
         TM    FLAG2,X'04'                   PAGENUM FLAG ON ?
         BZ    DATEFLG                       NO
TITLE1   EQU   *
         MVC   PRTLINE+1(80),TITLE
         TM    FLAG2,X'04'
         BZ    PUTTITLE
         LA    2,PRTLINE
         AH    2,PAGEOFF
         MVC   0(7,2),=C'PAGE   '
         UNPK  5(2,2),PAGECT
         OI    6(2),X'F0'
         AP    PAGECT(2),=P'1'
PUTTITLE EQU   *
         LA    2,PRTLINE
         BAL   3,WRITE
         L     2,LINECT
         LA    2,1(,2)
         ST    2,LINECT
         MVI   PRTLINE,C'0'
DATEFLG  EQU   *
         TM    FLAG2,X'20'     DATE FLAG ON?
         BZ    BLNKLINE
         LA    2,PRTLINE-16
         AL    2,RTMGN
         MVC   0(8,2),PRT
         MVC   8(9,2),DAT
         LA    2,PRTLINE
         BAL   3,WRITE
BLNKLINE EQU   *
         LA    2,PRTLINE
         BAL   3,WRITE
         TM    FLAG2,X'01'
         BO    WRITEON
         B     READ
         SPACE 5
SPACE    EQU   *
         CLC   RECORD+2(5),=C'SPACE'         >>SPACE ?
         BNE   INDENT
         PACK  PACKED+6(2),RECORD+7(2)       YES - HOW MANY LINES ?
         CVB   5,PACKED                      USE R5 FOR LOOP
         XC    PACKED(8),PACKED
         OI    FLAG,X'80'
         MVC   PRTLINE(133),BLANKS
         LA    2,PRTLINE
         TM    FLAG2,X'08'
         BZ    LOOP
         BCTR  5,0
         A     5,LINECT
         ST    5,LINECT
         MVC   PRTLINE+75(2),RECORD+7
         XI    FLAG,X'80'
LOOP     EQU   *
         BAL   3,WRITE
         TM    FLAG,X'80'
         BZ    ENDLOOP
*        TM    FLAG2,X'08'    REMOVED 19.6.80 - PHR
*        BZ    ENDLOOP        REMOVED 19.6.80 - PHR
         BCT   5,LOOP                    LOOP
ENDLOOP  EQU   *
         NI    FLAG,X'7F'
         B     READ
         SPACE 5
INDENT   EQU   *
         CLC   RECORD+2(6),=C'INDENT'   >>INDENT ?
         BNE   DATE
         PACK  PACKED+6(2),RECORD+8(2)    HOW MUCH BY ?
         CVB   4,PACKED                   R4 HAS OFFSET
         XC    PACKED(8),PACKED           CLEAR PACK AREA
         OI    FLAG,X'02'                 TURN ON INDENT FLAG
         B     READ
DATE     EQU   *
         CLC   RECORD+2(4),=C'DATE'       >>DATE ?
         BNE   NUMBER
         DATE  DAT,FORMAT='DD MMM YY'
         OI    FLAG2,X'20'
         B     READ
        SPACE 5
NUMBER   EQU   *
         CLC   RECORD+2(6),=C'NUMBER'         >>NUMBER ?
         BNE   ASTERISK
         MVC   NUMS(2),RECORD+8
         CLC   RECORD+10(6),=C'>SPACE'
         BNE   TURNOFF
         OI    FLAG,X'10'
         MVC   SPC(2),RECORD+16
TURNOFF  EQU   *
         XI    FLAG,X'10'
         B     READ
        SPACE 5
ASTERISK EQU   *
         CLC   RECORD+2(1),=C'*'            >>*  ?
         BNE   NOINDENT
         TM    FLAG,X'10'
         BNE   NOSP
         PACK  PACKED+6(2),SPC(2)
         CVB   5,PACKED
         XC    PACKED(8),PACKED
         OI    FLAG,X'80'
         MVC   PRTLINE(133),BLANKS
LOOP3    EQU   *
         LA    2,PRTLINE
         BAL   3,WRITE
         TM    FLAG,X'80'
         BZ    NOSP
         BCT   5,LOOP3
NOSP     EQU   *
         NI    FLAG,X'7F'
         MVC   RECORD(3),NUMS
         CLI   RECORD,C'0'
         BNE   NOZERO
         MVI   RECORD,C' '
NOZERO   EQU   *
         XC    PNUMS(2),PNUMS
         PACK  PNUMS(2),NUMS(2)
         AP    PNUMS(2),=PL1'1'
         UNPK  NUMS(2),PNUMS(2)
         MVZ   NUMS+1(1),NUMS
         B     RETAST
         SPACE 5
NOINDENT EQU   *
         CLC   RECORD+2(8),=C'NOINDENT'  >>NOINDENT ?
         BNE   FORMATS
         XI    FLAG,X'02'                TURN OFF INDENT FLAG
         SR    4,4                       REMOVE INDENTING
         B     READ
         SPACE 5
FORMATS  EQU   *
         CLC   RECORD+2(6),=C'FORMAT'    >>FORMAT ?
         BNE   NOFORMAT
         OI    FLAG,X'04'                TURN ON FORMAT FLAG
         OI    FLAG,X'20'                TURN ON INIT FMT FLAG
         B     READ
         SPACE 5
NOFORMAT EQU   *
         CLC   RECORD+2(8),=C'NOFORMAT'  >>NOFORMAT ?
         BNE   TITLES
         XI    FLAG,X'04'                TURN OFF FORMAT FLAG
         NI    FLAG,X'DF'                TURN OFF INIT FMT FLAG
         B     READ
         SPACE 5
TITLES   EQU   *
         CLC   RECORD+2(5),=C'TITLE'     >>TITLE ?
         BNE   NOTITLE
         OI    FLAG,X'08'                TURN ON TITLE FLAG
         MVC   TITLE(80),BLANKS          BLANK TITLE
         SR    6,6
         CLC   RECORD+7(1),=C'<'          DELIMITER PRESENT ?
         BNE   ERROR
         LA    7,RECORD+8                R7->START OF TEXT
         LR    8,7
LOOP2    EQU   *
         A     6,=X'00000001'                  R6 HAS COUNT
         CLC   0(1,8),=C'>'              DELIMITER HIT YET ?
         BE    FOUND
         A     8,=X'00000001'
         CL    6,=X'00000048'            TOO FAR ?
         BE    ERROR
         B     LOOP2                       TRY AGAIN
ERROR    EQU   *
         WTO   'ERROR IN TITLE CONTROL CARD'
         B     READ
FOUND    EQU   *
         SR    8,7                        FIND LENGTH OF TEXT
         S     8,=X'00000001'           REDUCE LEN BY ONE
         EX    8,MOVETIT                  MOVE TEXT INTO TITLE
         TM    FLAG,X'01'                 TITLE BEFORE ANY TEXT ?
         BO    TITLE1
         MVI   PRTLINE,C'1'
         B     TITLE1                      GO PRINT TITLE
         SPACE 5
NOTITLE  EQU   *
         CLC   RECORD+2(7),=C'NOTITLE'    >>NOTITLE ?
         BNE   OPRINT
         XI    FLAG,X'08'                 TURN OFF TITLE FLAG
         MVC   TITLE(80),BLANKS
         B     READ
         SPACE 5
OPRINT   EQU   *
         CLC   RECORD+2(7),=C'OVERPRT'     >>OVERPRT ?
         BNE   MARGIN
         MVI   PRTLINE,C'+'                SET ASA CHAR
         B     READ
         SPACE 5
MARGIN   EQU   *
         CLC   RECORD+2(6),=C'MARGIN'         >>MARGIN  ?
         BNE   DATA
         PACK  PACKED+6(2),RECORD+8(2)
         CVB   5,PACKED
         XC    PACKED(8),PACKED
         ST    5,RTMGN
         B     READ
         SPACE 5
DATA     EQU   *
         CLC   RECORD+2(4),=C'DATA'             >>DATA ?
         BNE   PAGENUM
         OI    FLAG2,X'02'
         PACK  PACKED+6(2),RECORD+6(2)
         CVB   5,PACKED
         XC    PACKED(8),PACKED
         B     READ
DODATA   EQU   *
         BCT   5,MOVE
         NI    FLAG2,X'FD'
         B     MOVE
         SPACE 5
PAGENUM  EQU   *
         CLC   RECORD+2(7),=C'NUMPAGE'          >>NUMPAGE ?
         BNE   NONUM
         OI    FLAG2,X'04'
         PACK  PACKED+6(2),RECORD+9(2)
         CVB   5,PACKED
         XC    PACKED(8),PACKED
         STH   5,PAGEOFF
         CLC   RECORD+11(2),BLANKS
         BE    READ
         PACK  PAGECT(2),RECORD+11(2)
         B     READ
         SPACE 5
NONUM    EQU   *
         CLC   RECORD+2(5),=C'NONUM'             >>NONUM ?
         BNE   INDEX
         NI    FLAG2,X'FB'
         XC    PAGEOFF(2),PAGEOFF
         ZAP   PAGECT,=P'1'
         B     READ
         SPACE 5
INDEX    EQU   *
         CLC   RECORD+2(5),=C'INDEX'             >>INDEX ?
         BNE   INVLD
         CLI   RECORD+7,C'<'
         BNE   IXERR
         LA    2,RECORD+8
         LA    3,RECORD+80
ILOOP    EQU   *
         CLI   0(2),C'>'
         BE    ENDFND
         LA    2,1(,2)
         CR    2,3
         BL    ILOOP
IXERR    EQU   *
         WTO   'ERROR IN INDEX CARD'
         B     READ
ENDFND   EQU   *
         LA    3,RECORD+8
         SR    2,3
         BCTR  2,0
         L     3,IXENTRY
         EX    2,MOVEINDX
         TM    FLAG2,X'04'
         BZ    ENDINDX
         MVC   PAGEIND(2),PAGECT   ADDED 19.6.80 - PHR
         SP    PAGEIND,=P'1'        ADDED 19.6.80 - PHR
         UNPK  70(2,3),PAGEIND
         OI    71(3),X'F0'
ENDINDX  EQU   *
         LA    3,72(,3)
         ST    3,IXENTRY
         OI    FLAG2,X'10'
         B     READ
         EJECT
****************************
*   DCBS, DCS, DSS, ETC.   *
****************************
         SPACE 5
F1       DCB   DDNAME=IN,MACRF=GM,DSORG=PS,EODAD=EOF
F2       DCB   DDNAME=OUT,MACRF=PM,DSORG=PS
NUMS     DC    CL3'00.'
PNUMS    DC    XL2'0000'
SPC      DC    CL2'00'
PACKED   DC    D'0'
RTMGN    DC    F'80'
WDLEN    DS    F
WRITERTN DS    F
LINECT   DC    F'0'
IXENTRY  DC    A(INDXTABL)
PAGEOFF  DC    H'0'
PAGECT   DC    PL2'1'
PAGEIND  DC    PL2'0'
RECORD   DC    CL80' '
FLAG     DC    XL1'00'
FLAG2    DC    X'00'
PRTLINE  DC    CL133' '
PADLINE  DC    CL133' '
TITLE    DC    CL80' '
BLANKS   DC    CL133' '
SAVELINE DS    CL133' '
DAT      DC    CL9'         '
PRT      DC    CL8'PRINTED '
PAGEMARK DC    CL40'- - - - - - - - - - - - - - - - - - - - '
         DC    CL40'- - - - - - - - - - - - - - - - - - - - '
MOVEWD   MVC   0(1,7),0(6)
MOVETIT  MVC   TITLE(0),RECORD+8
MOVEREST MVC   0(1,10),0(8)
MOVEINDX MVC   0(1,3),RECORD+8
         LTORG
INDXTABL DC    7200CL1' '
         END
