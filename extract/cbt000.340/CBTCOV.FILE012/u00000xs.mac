AMM.     TITLE 'OPERATOR COMMUNICATION && COMMAND SCHEDULING PROGRAMME'
         LCLA  &A
RT5019M  CSECT
***********************************************************************
*                                                                     *
*  THIS PROGRAMME ACCEPTS AS INPUT A PARAMETER LIST AND/OR A SYSIN    *
* DATA SET. IF A PARAMETER LIST IS PRESENT THE SECOND BYTE IS         *
* EXAMINED AND, IF IT IS A COMMA, THEN THE FIRST BYTE MAY SPECIFY ONE *
* OF THE FOLLOWING OPTIONS :                                          *
*                                                                     *
*        0 - 9  -   REMAINDER OF PARAMETER LIST IS TO BE APPENDED TO  *
*                   A PRE-DEFINED STANDARA MESSAGE IDENTIFIED BY ITS  *
*                   NUMBER.                                           *
*                                                                     *
*        C       -  THE REMAINDER OF THE PARAMETER LIST IS A COMMAND. *
*                   IF THE COMMAND AFFECTS THE SYSTEM STATE THEN THE  *
*                   OPERATOR IS ASKED TO VERIFY THE COMMAND. OTHERWISE*
*                   THE COMMAND IS DISPLAYED AND EXECUTED.            *
*                                                                     *
*        W      -   THE REMAINDER OF THE PARAMETER LIST IS DISPALYED  *
*                   AND THE PROGRAMME WAITS FOR AN OPERATOR RESPONSE. *
*                                                                     *
*        R      -   NO MESSAGE IS TO BE DISPLAYED BUT THE NUMBER      *
*                   FOLLOWING THE COMMA IS TO BE SAVED AS A RETURN    *
*                   CODE TO BE USED WHEN THE PROGRAMME COMPLETES.     *
*                                                                     *
*                                                                     *
*  AFTER THE PARAMATER LIST HAS BEEN PROCESSED THE PROGRAMME READS    *
* DATA FROM THE SYSIN DATA SET, IF PRESENT, AND PROCESSES AS IT DOES  *
* THE PARAMETER LIST EXCEPT THAT ONLY C, W, AND R ARE RECOGNISED.     *
*                                                                     *
*  EACH MESSAGE DISPLAYED TO THE OPERATOR HAS THE JOB-NAME APPENDED   *
* TO IT FOLLOWED, WHERE APPLICABLE, BY AN INDICATION OF ALLOWABLE     *
* RESPONSES.                                                          *
*                                                                     *
***********************************************************************
         SPACE 2
*  REGISTER USAGE.
R0       EQU   0                   WORK REGISTER.
R1       EQU   1                   WORK REGISTER / PARAMETER REGISTER.
R2       EQU   2                   WORK REGISTER.
R3       EQU   3                   WORK REGISTER.
R4       EQU   4                   WORK REGISTER.
R5       EQU   5                   ADDRESS OF WTO OR WTOR LIST.
R6       EQU   6                   POINTER FOR COMMAND EXECUTUON.
R7       EQU   7                   ADDRESS OF MESSAGE AREA.
R8       EQU   8                   LAST BYTE OF MESSAGE DATA.
R9       EQU   9                   ADDRESS OF MESSAGE DATA.
R10      EQU   10                  WORK REGISTER.
R11      EQU   11                  NOT USED.
R12      EQU   12
RBASE    EQU   12                  BASE REGISTER.
R13      EQU   13                  SAVE AREA POINTER.
R14      EQU   14                  RETURN ADDRESS.
R15      EQU   15                  ENTRY POINT ADDRESS / RETURN CODE.
         EJECT
         BEGIN SAVE,BASE=RBASE     INITIALISE AND DEFINE BASE REGISTER.
         L     R9,0(R1)            SET GR9 -> PARAMETER LIST.
         OPEN  MF=(E,OPENL)        OPEN SYSIN AND SYSPRINT DATA SETA.
         LH    R8,0(R9)            SET GR8 = LENGTH OF PARMLIST.
         LTR   R8,R8               IS PARAMETER LIST PRESENT ?
         BZ    TESTOPEN            IF NOT THEN GO TO TRY SYSIN.
         LA    R8,1(R8,R9)         SET GR8 -> END OF PARAMETER LIST.
         LA    R9,2(R9)            SET GR9 -> START OF PARAMETER LIST.
         CLI   1(R9),C','          IS SECOND CHARACTER A COMMA ?
         BNE   NOOPT               IF NOT THEN NO PRE-DEFINED MESSAGE.
         TM    0(R9),X'F0'         IS FORST CHARACTER NUMERIC ?
         BNO   TRYOPTS             IF NOT THEN NO PRE-EEFINED MESSAGE.
         IC    R1,0(R9)            SET GR1 = OPTION NUMBER.
         N     R1,F15              REMOVE ZONE.
         SLL   R1,2                MULTIPLY GR1 BY 4.
         L     R2,OPTLIST(R1)      SET GR2 -> PRE-DEFINED MESSAGE.
         IC    R1,OPTLIST(R1)      SET GR1 = LENGTH FOR EXECUTE.
         EX    R1,MOVE1            MOVE PREDEFINED MESSAGE TO OUTPUT.
         LA    R7,WTOAR+1(R1)      SET GR7 -> NEXT BYTE TO BE FILLDD.
INCGR9   LA    R9,2(R9)            SET GR9 -> NEXT BYTE TO BE MOVED.
         B     MOVEREM             GO TO MOVE REMAINDER OF MESSAGE.
         SPACE 2
TESTOPEN MVI   SW,0                CLEAR SWITCHES.
         TM    IN+48,X'10'         WAS OPEN SUCCESSFUL ?
         BZ    EXIT                IF NOT THEN NO GET.
         GET   IN                  READ INPUT CARD.
         LR    R9,R1               SET GR9 -> INPUT CARD.
         LA    R8,79(R1)           SET GR8 -> END OF INPUT CARD.
         CLI   1(R9),C','          IS SECOND CHARACTER A COMMA ?
         BNE   NOOPT               IF NOT THEN STRAIGTT WTO.
TRYOPTS  CLI   0(R9),C'C'          ID A COMMAND SPECIFIED ?
         BE    COMMAND             IF SO THEN GO TO TEST VALIDITY.
         CLI   0(R9),C'W'          IS A WAIT SPECIFIED ?
         BE    WAIT                IF SO THEN GO TO SET WTOR.
         CLI   0(R9),C'R'          IS A RETURN CODE SPECIFIED ?
         BE    RETURN              IF SO THEN GO TO SET UP RETURN CODE.
NOOPT    LA    R7,WTOAR            SET GR7 -> WRITE TO OPERATOR AREA.
MOVEREM  CLI   0(R8),C' '          IS LAST CHARACTER BLANK ?
         BNE   *+8                 IF NOT THEN END FOR MOVE.
         BCT   R8,MOVEREM          DECREMENT LAST CHARACTER AND LOOP.
         SR    R8,R9               SET GR8 = LENGTH FOR MOVE.
         BM    *+8                 IF MINUS THEN NO MOVE.
         EX    R8,MOVE2            MOVE MESSAGE OR REMAINDER OF PARMS.
         LA    R7,1(R7,R8)         SET GR7 -> NEXT AVAILABLE BYTE.
         LA    R0,WTOAR            SET GR0 -> WRITE TO OPERATOR AREA.
         LR    R6,R7               SET GR6 = POINTER FOR COMMAND.
         CR    R0,R7               IS THERE A MESSAGE PRESENT ?
         BNL   TESTOPEN            IF NOT THEN NO WRITE TO OPERATOR.
         L     R1,16               SET GR1 -> CVT.
         L     R1,0(R1)            SET GR1 -> TCB POINTERS.
         L     R1,4(R1)            SET GR1 -> TCB.
         L     R1,12(R1)           SET GR1 -> TIOT.
         MVI   0(R7),C' '          STORE BLANK SEPATATOR.
         MVC   1(8,R7),0(R1)       STORE JOB NAME.
         LA    R7,9(R7)            SET GR7 -> NEXT AVAILABLE BYTE.
         LA    R5,WTOL             SET GR5 -> WTO EXPANSION.
         TM    SW,SWWT             IS A WAIT REQUIRED ?
         BZ    WTOE                IF NOT THEN GO TO WTO.
         MVC   0(L'CREP,R7),CREP   SET REPLY INDICATOR.
         LA    R5,WTORL            SET GR5 -> WTOR EXPANSION.
         TM    SW,SWCM             IS A COMMAND REQUIRED ?
         BO    *+18                IF SO THEN GO TO SET YES OR NO.
         MVC   L'CREP(L'ANY,R7),ANY   SET 'ANY CHAR INDICATOR.
         LA    R7,L'CREP+L'ANY(R7) SET GR7 -> NEXT AVAILABLE BYTE.
         B     WTOE                GO TO WTO.
         MVC   L'CREP(L'YRN,R7),YRN   SET 'Y OR N' INDICATOR.
         LA    R7,L'CREP+L'YRN(R7) SET GR7 -> NEXT AVAILABLE BYTE.
WTOE     LR    R1,R7               SET GR1 -> NEXT AVAILABLE BYTE.
         LA    R0,WTOL             SET GR0 -> WTO EXPANSION.
         SR    R1,R0               SET GR1 = LENGTH FOR WTO.
         SR    R6,R0               SET GR6 = LENGTH FOR COMMAND.
         STH   R1,WTOL             STORE LENGTH FOR WTO.
         WTO   MF=(E,(R5))         WRITE TO OPERATOR.
         TM    PRINT+48,X'10'      WAS OPEN SUCCESSFUL FOR PRINT ?
         BZ    TRYWAIT             IF NOT THEN NO PUT.
         LA    R1,WTOARND          SET GR1 -> END OF MESSAGE LINE.
         SR    R1,R7               SET GR1 = LENGTH TO BE CLEARED.
         BNP   PUT                 IF NOT PLUS THEN NO.CLEAR.
         MVI   0(R7),C' '          CLEAR FIRST REMAINING BYTE.
         BCTR  R1,R0               DECREMENT GR1  FOR EXEC.
         EX    R1,MOVE3            CLEAR REMAINDER OF AREA.
PUT      PUT   PRINT,WTOAR         CREATE HARD COPY ON PRINTER.
TRYWAIT  TM    SW,SWWT             IS A WAIT REQUIRED ?
         BZ    TRYCOM              IF NOT THEN NO WAIT.
         WAIT  1,ECB=ECB           WAIT FOR OPERATOR RESPONSE.
         NI    ECB,X'3F'           REMOVE COMPLETE BIT.
TRYCOM   TM    SW,SWCM             IS A COMMAND REQUIRED ?
         BZ    TESTOPEN            IF NOT THEN GO TO TRY NEXT CARD.
         CLI   REPLY,C'Y'          IS COMMAND CONFIRMED ?
         BE    MGCR                IF SO THEN GO TO ISSUE MGCR CALLER.
         CLI   REPLY,C'N'          IS COMMAND REJECTED ?
         BE    TESTOPEN            IF SO THEN GO TO TRY NEXT CARD.
         WTOR  MF=(E,ERMSG)        WRITE REPEAT REPLY REQUEST.
         B     TRYWAIT             GO TO WAIT FOR RESPONSE.
MGCR     LA    R1,WTOL             SET GR1 -> MGCR PARAMETER LIST.
         STH   R6,WTOL             STORE MGCR LENGTH.
         SPMODE PROB,0              SET PROTECT KEY ZERO.
         SR    R0,R0               SET GR0 = 0.
         SVC   34                   ISSUE MGCR SVC.
         SPMODE PROB,*              RESTORE PROTECT KEY.
         B     TESTOPEN            GO TO TRY NEXT CARD.
         SPACE 2
EXIT     L     R15,RC              SET GR15 = RETURN CODE.
         GOBACK SAVE,RC=(15)       RETURN.
         EJECT
COMMAND  CLI   3(R9),C' '          IS IT A ABBREVIATED COMMAND ?
         BE    ABBREV              IF SO THEN GO TO TEST ABBREVIATIONS.
         LA    R2,4(R9)            SET GR2 -> SECOND CHARACTER IF  ERB.
         LA    R1,13(R9)           SET GR1 -> LIMIT VALUE OF VERB.
         LA    R0,1                SET GR0 = 1.
         CLI   0(R2),C' '          IS CHARACTER BLANK ?
         BE    *+12                IF SO THEN DELIMITER FOUND.
         BXLE  R2,R0,*-8           LOOP UNTIL FOUND OR LIMIT REACHED.
         B     NOOPT               ILLEGAL COMMAND IGNORED.
         LA    R0,2(R9)            SET GR0 FOR SUBTRACT.
         SR    R2,R0               SET GR2 = LENGTH FOR EXECUTE.
         LA    R1,COMLSTND         SET GR1 -> END OF COMMAND LIST.
         LA    R0,8                SET GR0 = INCREMENT.
         LA    R3,COMLST           SET GR3 -> COMMAND LIST.
         LA    R4,COMP1            SET GR4 -> COMPARE MODEL STATEMENT.
COMEX    LR    R10,R3              SAVE CONTENTS OF GR3 IN GR10.
         EX    R2,0(R4)            COMPARE FOR VALID COMMAND.
         BE    *+12                IF EQUAL THEN COMMAND FOUND.
         BXLE  R3,R0,*-8           LOOP UNTIL FOUND OR LIST EXHAUSTED.
         B     NOOPT               ILLEGAL COMMAND IGNORED.
         OI    SW,SWCM             SET ON COMMAND SWITCH.
         MVI   REPLY,C'Y'          SET REPLY AREA FOR NO RESPONSE.
         SR    R3,R10              SET GR3 = OFFSET.
         SR    R2,R2               SET GR2 = 0.
         DR    R2,R0               SET GR3 = COMMAND ID.
         CH    R3,COMWAIT          IS VERIFICATION REQUIRED ?
         BNH   *+8                 IF NOT THEN GO TO SET GR9 FOR MOVE.
         SPACE 2
WAIT     OI    SW,SWWT             SET ON WAIT SWITCH.
         LA    R7,WTOAR            SET GR7 ->  WTO AREA.
         B     INCGR9              GO TO SET GR9 FOR MOVE.
         SPACE 2
ABBREV   LA    R0,1                SET GR0 = 1.
         LA    R1,ABRLSTND         SET GR1 -> END OF ABBREVIATION LIST.
         LA    R3,ABRLST           SET GR3 -> ABBREVIATION LIST.
         IC    R2,2(R9)            SET GR2 = COMMAND CODE.
         LA    R4,COMP2            SET GR4 -> COMPARE MODEL STATEMENT.
         B     COMEX               GO TO COMMON ROUTINE.
         SPACE 2
RETURN   LA    R1,2(R9)            SET GR1 -> START OF RETURN COEE.
         CR    R1,R8               COMPARE WITH END OF AREA.
         BH    *+20                IF GREATER THEN END.
         TM    0(R1),X'F0'         IS CHARACTER NUMERIC ?
         BNO   *+12                IF NOT THEN END.
         LA    R1,1(R1)            SET GR1 -> NEXT CHARACTER.
         B     RETURN+4            LOOP UNTIL END
         LA    R0,3(R9)            SET GR0 FOR SUBTRACT.
         SR    R1,R0               SET GR1 = LENGTH FOR EXECUTE.
         BM    NOOPT               IF MINUS THEN IGNORE OPTION.
         EX    R1,PACK1            PACK RETURN CODE INTO DOUNLE WORD.
         CVB   R1,DOUBWD           SET GR1 = RETURN CODE.
         ST    R1,RC               STORE RETURN CODE.
         B     TESTOPEN            GO TO READ NEXT CARD.
         SPACE 3
MOVE1    MVC   WTOAR(0),0(R2)      MODEL STATEMENT.
MOVE2    MVC   0(0,R7),0(R9)       MODEL STATEMENT.
MOVE3    MVC   1(0,R7),0(R7)       MODEL STATEMENT.
COMP1    CLC   2(0,R9),0(R3)       MODEL STATEMENT.
COMP2    CLI   0(R3),0             MODEL STATEMENT.
PACK1    PACK  DOUBWD,2(0,R9)      MODEL STATEMENT.
         SPACE 3
DCBEXIT  DCBEXITS
         EJECT
DOUBWD   DS    D
SAVE     DS    18F                 SAVE AREA.
F15      DC    F'15'
ECB      DC    F'0'
RC       DC    F'0'
OPENL    OPEN  (IN,INPUT,PRINT,OUTPUT),MF=L
OPTLIST  DS    0A
.C1      DC    AL1(L'OPT&A-1),AL3(OPT&A)
&A       SETA  &A+1
         AIF   (&A LT 10).C1
IN       DCB   DDNAME=SYSIN,EODAD=EXIT,DSORG=PS,LRECL=80,MACRF=GL
PRINT    DCB   DDNAME=SYSPRINT,DSORG=PS,LRECL=132,MACRF=PM,RECFM=FB,   *
               BLKSIZE=1320,EXLST=DCBEXIT
         DS    0A
WTORL    DC    AL1(1),AL3(REPLY),A(ECB)
WTOL     DC    AL2(0,0)
WTOAR    DC    CL132' '
WTOARND  DS    0C
COMWAIT  DC    H'1'
REPLY    DC    C'Y'
CREP     DC    C' REPLY '
ANY      DC    C'ANY CHAR'
YRN      DC    C'Y OR N'
COMLST   DC    C'DEFINE  DISPLAY CANCEL  HALT    HOLD    MODIFY  '
         DC    C'MOUNT   RELEASE REPLY   RESET   SET     START   '
         DC    C'STOP    UNLOAD  VARY '
COMLSTND DS    0C
ABRLST   DC    C'NDCZHFMARETSPUV'
ABRLSTND DS    0C
OPT0     DC    C' '
OPT1     DC    C'NOW RELEASE JOB '
OPT2     DC    C'REPLY ''U'' TO RETENTION CHECKS FOR '
OPT3     DC    C'3,'
OPT4     DC    C'4,'
OPT5     DC    C'5,'
OPT6     DC    C'6,'
OPT7     DC    C'7,'
OPT8     DC    C'8,'
OPT9     DC    C'9,'
SW       DC    AL1(0)
SWWT     EQU   X'80'
SWCM     EQU   X'40'
ERMSG    WTOR  'INVALID RESPONSE - RETRY REPLY',REPLY,1,ECB,MF=L
         END   RT5019M
