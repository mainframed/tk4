SCANSGEN START
         PRINT NOGEN
         CHAIN
*  THIS IS A JOB TO COMPARE THE OUTPUT OF TWO STAGE 1 SYSGENS
*  THE OBJECT IS TO FIND JOBSTEPS THAT DIFFER, ARE ADDED,
*  OR ARE REMOVED.
*  EACH INPUT STREAM IS SCANNED TWICE. THE JOB HAS SEVERAL
*  DISTINCT PHASES.
*  TWO INPUT STREAMS ARE USED. 'MASTER', THE OLD OR MASTER SYSGEN,
*  AND 'NEW', THE NEW OR LATEST SYSGEN.
*
*   WARNING.........THIS COMPARISON IS SENSITIVE TO DIFFERING JOB
*   CARDS AND JES CONTROL STATEMENTS
*
*   SEE SYS1.GENLIB(SCAN) FOR A SUMMARY OF JCL REQUIREMENTS
*
         EJECT
*  PHASE 1. SCAN MASTER SYSGEN PROGRAM. PICK OUT JOBNAMES, STEPNAMES
*  AND COUNT THE NO OF LINES IN EACH STEP. STORE IN A TABLE.
*  REG 3.......TABLE POINTER
*  REG 4.......SUBROUTINE LINKAGE
*  REG 5.......USED TO COUNT LINES IN JOBSTEP
*  REG 9.......USED TO POINT TO A DATA CONTROL BLOCK
*
         OPEN  (PRINT,(OUTPUT))    OPEN OUTPUT STREAM
         OPEN  (MASTER,(INPUT))    OPEN MASTER FILE FOR INPUT
         MVC   OUTAREA,OUTAREA-1   CLEAR OUTPUT AREA
         MVC   OUTAREA(45),TITLE1  LOAD TITLE #1
         PUT   PRINT,OUT           PRINT TITLE #1
         MVC   OUTAREA,OUTAREA-1   CLEAR OUTPUT AREA
         MVC   OUTAREA(50),TITLE2  LOAD TITLE #2
         PUT   PRINT,OUT           PRINT TITLE #2
         SR    5,5                 CLEAR REG 5
         GETMAIN R,LV=4096         GET STORAGE FOR MASTER TABLE
         ST    1,MAADDR            STORE ADDRESS OF MASTER TABLE
         A     1,=F'4060'          INC TO POINT TO LAST ENTRY
         MVC   0(20,1),ENDTAB      PUT IN END-OF-TABLE ENTRY
         GETMAIN R,LV=4096         GET STORAGE FOR NEW TABLE
         ST    1,NEADDR            STORE ADDRESS OF NEW TABLE
         A     1,=F'4060'          INC TO POINT TO LAST ENTRY
         MVC   0(20,1),ENDTAB      PUT IN END OF TABLE ENTRY
         L     3,MAADDR            LOAD ADDR OF MASTER DUMMY ENTRY
         LA    9,MASTER            LOAD ADDR OF DATA CONTROL BLOCK
         BAL   4,S1SCANFL          BRANCH TO SCANFILE SUBROUTINE
         CLOSE (MASTER,REREAD)     CLOSE MASTER FILE
         FREEPOOL MASTER           FREE MASTER BUFFER POOL
         ST    5,16(3)             STORE FINAL LINECOUNT
         LA    3,20(3)             INC TABLE POINTER
         CLC   0(20,3),ENDTAB      IS IT THE END OF THE TABLE?
         BE    ERROR1              YES - BRANCH TO ERROR EXIT
         MVC   0(20,3),ENDTAB      PUT END OF TABLE MARKER IN TABLE
*
*  END OF PHASE ONE
*
*
*  PHASE 2. AS FOR PHASE 1 EXCEPT THAT  IT IS FOR NEW SYSGEN PROGRAM
*
         OPEN  (NEW,(INPUT))       OPEN NEW FILE FOR INPUT
         L     3,NEADDR            LOAD ADDR OF NEW DUMMY ENTRY
         LA    9,NEW               LOAD ADDR OF DATA CONTROL BLOCK
         BAL   4,S1SCANFL          BRANCH TO SCANFILE SUBROUTINE
         CLOSE (NEW,REREAD)        CLOSE NEW STREAM
         FREEPOOL NEW              FREE NEW BUFFER POOL
         ST    5,16(3)             STORE FINAL LINECOUNT
         LA    3,20(3)             INC TABLE POINTER
         CLC   0(20,3),ENDTAB      IS IT THE END OF THE TABLE?
         BE    ERROR2              YES - BRANCH TO ERROR EXIT
         MVC   0(20,3),ENDTAB      PUT END OF TABLE MARKER IN TABLE
*
*  END OF PHASE 2
*
         EJECT
*  PHASE 3  COMPARE JOBSTEPS IN MASTER AND NEW.  FIND THOSE THAT
*  ARE ADDED, I.E. IN NEW BUT NOT IN MASTER.  FLAG THOSE ADDED. INFORM
*  PROGRAMMER.
*  REG 3   POINTS TO MASTER TABLE
*  REG 4   POINTS NEW TABLE
*  REG 5   USED FOR SUBROUTINE LINKAGE
*
         MVC   OUTAREA,OUTAREA-1   CLEAR OUTPUT AREA
         MVC   OUT+41(5),ADDED     PUT WORD 'ADDED' IN OUTPUT AREA
         L     3,MAADDR            LOAD ADDR OF MASTER DUMMY ENTRY
         LA    3,20(3)             INC POINTER TO FIRST ENTRY
         L     4,NEADDR            LOAD ADDR OF NEW DUMMY ENTRY
         LA    4,20(4)             INC POINTER TO FIRST ENTRY
         BAL   5,S2COMPAR          BRANCH TO COMPARE SUBROUTINE
*
*  END OF PHASE 3
*
*
*  PHASE 4  COMPARE JOBSTEPS IN MASTER AND NEW.  FIND THOSE THAT
*  ARE REMOVED, I.E. IN MASTER BUT NOT IN NEW. FLAG THOSE REMOVED.
*  INFORM PROGRAMMER.
*  REG 3   POINTS TO NEW TABLE
*  REG 4   POINTS TO MASTER TABLE
*  REG 5   USED FOR SUBROUTINE LINKAGE
*
         MVC   OUTAREA,OUTAREA-1   CLEAR OUTPUT AREA
         MVC   OUT+41(7),REMOVED   PUT WORD 'REMOVED' IN OUTPUT AREA
         L     3,NEADDR            LOAD ADDR OF NEW DUMMY ENTRY
         LA    3,20(3)             POINT TO FIRST ENTRY
         L     4,MAADDR            LOAD ADDR OF MASTER DUMMY ENTRY
         LA    4,20(4)             POINT TO FIRST ENTRY
         BAL   5,S2COMPAR          BRANCH TO COMPARE SUBROUTINE
*
*  END OF PHASE 4
*
         EJECT
*
*  PHASE 5 TEST THAT JOBSTEPS ARE IN THE SAME SEQUENCE
*  IF NOT, TELL PROGRAMMER AND STOP.
*  ALSO COMPARE THE LINECOUNT OF EACH CORRESPONDING STEP
*  OF MASTER AMD NEW. IF LINECOUNTS DIFFER, TELL PROGRAMMER
*  AND CONTINUE.
*  REG 3    POINTS TO MASTER TABLE ENTRIES
*  REG 4    POINTS TO NEW TABLE ENTRIES
*  REG 5    HOLDS RETURN ADDRESS
*  REG 6    HOLDS END-OF-TABLE RETURN ADDRESS
*  REG 7    POINTS TO CURRENT ENTRY OF CURRENT TABLE
*
         L     3,MAADDR            LOAD ADDR OF MASTER DUMMY ENTRY
         L     4,NEADDR            LOAD ADDR OF NEW DUMMY ENTRY
         LA    6,P5END             LOAD END-OF-TABLE RETURN ADDRESS
P5LOOP   LR    7,3                 LOAD ADDR OF CURRENT MASTER ENTRY
         BAL   5,S3INCPTR          BRANCH TO SUBROUTINE
         LR    3,7                 SAVE ADDR OF NEXT MASTER ENTRY
         LR    7,4                 LOAD ADDR OF CURRENT NEW ENTRY
         BAL   5,S3INCPTR          BRANCH TO SUBROUTINE
         LR    4,7                 SAVE ADDER OF NEXT NEW ENTRY
         CLC   0(14,3),0(4)        ARE ENTRIES THE SAME?
         BNE   P5EROR              NO - GO TO PUT OUT ERROR MESSAGE
         CLC   16(4,3),16(4)       ARE CORRESPONDING LINECOUNTS EQUAL?
         BE    P5LOOP              YES - GO FOR NEXT ENTRIES
         MVC   OUTAREA,OUTAREA-1   CLEAR OUTPUT AREA
         MVC   OUT+1(14),0(3)      LOAD JOB AND STEP NAMES
         MVC   OUT+41(30),LCTERR   LOAD LINECOUNT ERROR MESSAGE
         PUT   PRINT,OUT           PRINT OUTPUT
         MVI   14(3),1             FLAG ENTRY IN MASTER
         MVI   14(4),1             FLAG ENTRY IN NEW
         B     P5LOOP              GO FOR NEXT ENTRIES
P5EROR   MVC   OUTAREA,OUTAREA-1   CLEAR OUTPUT AREA
         MVC   OUT+1(14),0(3)      LOAD MASTER JOB, STEP NAMES
         MVC   OUT+21(14),0(4)     LOAD NEW JOB, STEP NAMES
         MVC   OUT+41(15),OUTORDM  LOAD OUT OF ORDER TEXT
         PUT   PRINT,OUT           PRINT MESSAGE
         B     ERROR4              GO TO ERROR EXIT 4
P5END    NOPR  8                   NO-OPERATION, END OF PHASE
*
*  END OF PHASE 5
*
         EJECT
*
*  PHASE 6. SCAN THROUGH ALL JOBSTEPS THAT ARE NOT FLAGGED IN ORDER
*  TO FIND DIFFERENCES NOT SO FAR DETECTED.
*  THIS SUBROUTINE MAKES USE OF THE FACT THAT JOBSTEPS IN THE INPUT
*  STREAMS ARE THE SAME AS IN THE TABLES.  NO CHECKING OF TABLE
*  JOB AND STEPNAMES AGAINST THE INPUT IS PERFORMED. MASTER AND NEW
*  JOBSTEPS THAT ARE NOT FLAGGED ARE COMPARED RECORD-BY-RECORD.
*  REG 2......POINTS TO MASTER TABLE
*  REG 3......POINTS TO NEW TABLE
*  REG 4......EODAD AND END-OF-TABLE EXIT
*  REG 5......SUBROUTINE LINKAGE
*  REG 6......POINTS TO MASTER INPUT RECORD
*  REG 7......POINTS TO NEW INPUT RECORD
*  REG 9......ADDRESS OF A DCB
*
         L     2,MAADDR            LOAD ADDR OF MASTER DUMMY ENTRY
         LA    2,20(2)             POINT TO FIRST ENTRY
         L     3,NEADDR            LOAD ADDR OF NEW DUMMY ENTRY
         LA    3,20(3)             POINT TO FIRST ENTRY
         OPEN  (MASTER,(INPUT))    OPEN MASTER INPUT STREAM
         OPEN  (NEW,(INPUT))       OPEN NEW INPUT STREAM
         LA    4,P6END             LOAD EODAD & END-OF-TABLE EXIT
P6SPOOLM LA    9,MASTER            LOAD ADDR OF MASTER DCB
         BAL   5,S5SCANDA          BRANCH TO FIND MASTER EXEC CARD
         LR    6,1                 SAVE ADDR OF MASTER RECORD
         LA    9,NEW               LOAD ADDR OF NEW DCB
         BAL   5,S5SCANDA          BRANCH TO FIND NEW EXEC CARD
         LR    7,1                 SAVE ADDR OF NEW RECORD
P6CHECKM CLI   14(2),1             IS MASTER ENTRY FLAGGED?
         BNE   P6CHECKN            NO - GO SEE IF NEW ENTRY IS FLAGGED
         LA    9,MASTER            YES - LOAD ADDR OF MASTER DCB
         BAL   5,S5SCANDA          GO FIND NEXT MASTER EXEC CARD
         LR    6,1                 SAVE ADDR OF MASTER RECORD
         LA    2,20(2)             INCREMENT MASTER POINTER
         B     P6CHECKM            GO BACK TO CHECK THIS ENTRY
P6CHECKN CLI   14(3),1             IS NEW ENTRY FLAGGED?
         BNE   P6COMPAR            NO - GO TO COMPARE STEPS
         LA    9,NEW               YES - LOAD ADDR OF NEW DCB
         BAL   5,S5SCANDA          GO FIND NEXT NEW EXEC CARD
         LR    7,1                 SAVE ADDR OF NEW RECORD
         LA    3,20(3)             INCREMENT NEW POINTER
         B     P6CHECKN            GO SEE IF THIS ENTRY IS FLAGGED
P6COMPAR CLC   0(72,6),0(7)        ARE MASTER AND NEW CARDS IDENTICAL?
         BE    P6RDNEXT            YES - GO TO READ NEXT RECORDS
         MVC   OUTAREA,OUTAREA-1   NO - CLEAR OUTPUT AREA
         MVC   OUT+1(14),0(2)      LOAD MASTER JOB&STEP NAME
         MVC   OUT+41(40),DIFFMESS LOAD DIFFERENCE MESSAGE
         PUT   PRINT,OUT           PRINT DIFFERENCE MESSAGE
         LA    2,20(2)             INCREMENT MASTER POINTER
         LA    3,20(3)             INCREMENT NEW POINTER
         B     P6SPOOLM            GO FIND NEXT MASTER&NEW EXEC CARDS
P6RDNEXT GET   MASTER              GET NEXT MASTER RECORD
         LR    6,1                 SAVE ADDR OF MASTER RECORD
         GET   NEW                 GET NEXT NEW RECORD
         LR    7,1                 SAVE ADDR OF NEW RECORD
         CLC   5(6,6),EXEC         IS MASTER RECORD AN EXEC CARD?
         BE    P6INCPTR            YES - GO INCREMENT POINTERS
         CLC   6(6,6),EXEC         IS MASTER RECORD AN EXEC CARD?
         BE    P6INCPTR            YES - GO INCREMENT POINTERS
         CLC   7(6,6),EXEC         IS MASTER RECORD AN EXEC CARD?
         BE    P6INCPTR            YES - GO INCREMENT POINTERS
         B     P6COMPAR            NO - GO TO COMPARE RECORDS
P6INCPTR LA    2,20(2)             INCREMENT MASTER TABLE POINTER
         LA    3,20(3)             INCREMENT NEW TABLE ENTRY
         CLC   0(20,2),ENDTAB      IS IT THE END OF THE TABLE?
         BE    P6END               YES - GO TO END OF PHASE
         B     P6CHECKM            NO - GO CHECK TABLE FLAGS
P6END    CLOSE MASTER              CLOSE INPUT STREAM
         CLOSE NEW                 CLOSE INPUT STREAM
         MVC   OUTAREA,OUTAREA-1   CLEAR OUTPUT AREA
         MVC   OUT+1(30),TITLE3    LOAD END MESSAGE
         PUT   PRINT,OUT           PRINT IT
         CLOSE PRINT               CLOSE PRINTER STREAM
         FREEMAIN R,LV=4096,A=MAADDR
         FREEMAIN R,LV=4096,A=NEADDR
         RETURN13 RC=0             END, NORMAL COMPLETION
*
*  END OF PHASE
*  END OF PROGRAM
*
         EJECT
*
*  SCANFILE SUBROUTINE. USED TO:
*       1. COLLECT JOBNAMES
*       2. COLLECT STEPNAMES
*       3. COUNT NO.OF LINES IN JOBSTEP
*  ASSUMES THAT A STEP IS TERMINATED BY:
*       1. NEXT STEP
*       2. END OF DATA
*
*  REG 3.......POINTS TO TABLE
*  REG 4.......RETURN LINKAGE
*  REG 5.......STEPLINE COUNT
*  REG 6.......USED TO SCAN FOR SPACES IN EXEC & JOB FIELDS
*  REG 7.......USED FOR SUBROUTINE LINKAGE
*  REG 9.......ADDRESS OF DCB
*
S1SCANFL GET   (9)                 GET A RECORD FROM INPUT STREAM
         CLC   0(2,1),SLASH        DOES IT START WITH //
         BE    S1JOBTST            YES - BRANCH TO JOB CARD TEST
         A     5,=F'1'             NO - INCREMENT STEPLINE COUNT ANYWAY
         B     S1SCANFL            GO BACK FOR NEXT RECORD
S1JOBTST CLC   9(5,1),JOBCD        IS IT A JOBCARD?
         BE    S1STORJB            YES - GO TO STORE JOB CARD
         CLC   8(5,1),JOBCD        IS IT A JOB CARD?
         BE    S1STORJB            YES - GO TO STORE JOB CARD
         CLC   7(5,1),JOBCD        IS IT A JOBCARD?
         BE    S1STORJB            YES - GO TO STORE JOB CARD
         B     S1TESTEX            NO - GO SEE IF ITS AN EXEC CARD
S1STORJB MVC   JOBNHOLD,2(1)       STORE JOB NAME
         LA    6,JOBNHOLD+7        LOAD ADDR OF LAST BYTE
*                                  OF JOBNAME FIELD
         BAL   7,S4SPTEST          GO TO TRUNCATE JOBNAME
         B     S1SCANFL            THEN GO READ NEXT RECORD
S1TESTEX CLC   5(6,1),EXEC         IS IT AN EXEC CARD?
         BE    S1STOREX            YES - GO TO INCREMENT POINTERS
         CLC   6(6,1),EXEC         IS IT AN EXEC CARD?
         BE    S1STOREX            YES - GO TO INCREMENT POINTERS
         CLC   7(6,1),EXEC         IS IT AN EXEC CARD?
         BE    S1STOREX            YES - GO TO INCREMENT POINTERS
         A     5,=F'1'             NO - INCREMENT STEPLINE COUNT
         B     S1SCANFL            THEN GO TO READ NEXT RECORD
S1STOREX ST    5,16(3)             STORE LINE COUNT OF PREVIOUS STEP
         LA    3,20(3)             INCREMENT TABLE POINTER
         CLC   0(20,3),ENDTAB      IS IT THE END OF THE TABLE?
         BE    ERROR3              YES - BRANCH TO ERROR EXIT 3
         MVC   0(8,3),JOBNHOLD     PUT JOBNAME IN TABLE
         MVC   8(6,3),2(1)         PUT STEPNAME IN TABLE
         MVI   14(3),0             CLEAR TABLE FLAG FOR THIS ENTRY
         LA    6,13(3)             LOAD ADDR OF LAST BYTE
*                                  OF STEPNAME FIELD
         BAL   7,S4SPTEST          GO TO TRUNCATE STEPNAME
         L     5,=F'1'             RESET STEPLINECOUNT TO 1
         B     S1SCANFL            BRANCH BACK TO READ NEXT RECORD
*
*  END OF SCANFILE SUBROUTINE.
*
         EJECT
*
*  SUBROUTINE TO COMPARE TWO TABLES-ONE CALLED 'BASE', OTHER 'COMPARED'
*  FIND THOSE ENTRIES IN 'COMPARED' THAT ARE NOT IN 'BASE'
*  REG 3......POINTS TO 'BASE' TABLE
*  REG 4......POINTS TO 'COMPARED' TABLE
*  REG 5......RETURN LINKAGE
*
S2COMPAR ST    3,SADDR             STORE START ADDR OF 'BASE'
S2LABASE L     3,SADDR             LOAD START ADDR OF 'BASE'
S2BASECP CLC   0(14,3),0(4)        COMPARE 'BASE' & 'COMPARED' ENTRIES
         BE    S2INCCOM            BRANCH IF THE SAME
         LA    3,20(3)             DIFFERENT - INCREMENT 'BASE' POINTER
         CLC   0(20,3),ENDTAB      END OF TABLE?
         BNE   S2BASECP            NO - GO BACK FOR NEXT S2COMPAR
*                                  YES - IF WE GET HERE THEN WE
*                                  HAVE NOT FOUND A MATCH
         MVI   14(4),1             FLAG ENTRY IN COMPARED
         MVC   OUTAREA(14),0(4)    INFORM PROGRAMMER
         PUT   PRINT,OUT           PRINT IT
S2INCCOM LA    4,20(4)             INCREMENT 'COMPARED' POINTER
         CLC   0(20,4),ENDTAB      IS THIS THE END OF 'COMPARED'?
         BNE   S2LABASE            NO - BRANCH BACK TO BEGINNING
         BR    5                   YES - RETURN TO MAINLINE PROGRAM
*
*  END OF COMPARE SUBROUTINE
*
         EJECT
*
*  SUBROUTINE TO SCAN A TABLE TO FIND THE NEXT NON-FLAGGED ENTRY.
*  REG 5   USED FOR RETURN LINKAGE
*  REG 6   USED FOR END-OF-TABLE RETURN
*  REG 7   USED TO POINT TO TABLE. ON ENTRY, POINTS TO CURRENT
*          ENTRY OF CURRENT TABLE. ON EXIT, POINTS TO NEXT
*          NON-FLAGGED ENTRY.
*
S3INCPTR LA    7,20(7)             POINT TO NEXT ENTRY
         CLC   0(20,7),ENDTAB      IS IT THE END-OF-TABLE?
         BCR   8,6                 YES - END-OF-TABLE RETURN
         CLI   14(7),1             NO - IS ENTRY FLAGGED?
         BE    S3INCPTR            YES - GO LOOK AT NEXT ENTRY
         BR    5                   NO - ENTRY NOT FLAGGED. RETURN
*
*  END OF SUBROUTINE
*
         EJECT
*
* SUBROUTINE TO TRUNCATE JOB OR STEP NAMES. THE JOBNAME & STEPNAME
* MAY HAVE AN EMBEDDED BLANK CHARACTER. CHARACTERS TO THE LEFT
* OF THE BLANK ARE VALID JOB OR STEP NAMES. CHARACTERS TO THE RIGHT
* ARE CHANGED TO BLANKS.
* REG 6    POINTS TO THE RIGHTMOST CHARACTER OF A FIELD
* REG 7    USED FOR RETURN LINKAGE
*
S4SPTEST CLC   0(1,6),OUT          IS IT A SPACE CHARACTER?
         BCR   8,7                 YES - RETURN TO CALLING PROG
         MVC   0(1,6),OUT          NO - PUT A SPACE CHAR IN
         S     6,=F'1'             DECREMENT REG6 TO POINT TO NEXT CHAR
         B     S4SPTEST            BRANCH BACK TO TEST FOR SPACE CHAR
*
* END OF SPACETEST SUBROUTINE
*
         EJECT
*
*  SUBROUTINE TO SCAN THROUGH AN INPUT FILE TO FIND THE
*  NEXT EXEC CARD
*  REG 5......RETURN LINKAGE
*  REG 9......ADDRESS OF APPROPRIATE DCB
*
S5SCANDA GET   (9)                 READ A RECORD
         CLC   5(6,1),EXEC         IS IT AN EXEC CARD?
         BCR   8,5                 YES - RETURN TO CALLING PROG
         CLC   6(6,1),EXEC         IS IT AN EXEC CARD?
         BCR   8,5                 YES - RETURN TO CALLING PROG
         CLC   7(6,1),EXEC         IS IT AN EXEC CARD?
         BCR   8,5                 YES - RETURN TO CALLING PROG
         B     S5SCANDA            BRANCH TO GET NEXT RECORD
*
*  END OF SCANTHROUGH SUBROUTINE
*
         EJECT
*
*  MISCELLANEOUS INSTRUCTIONS
*
ENDDATA  BCR   15,4                BRANCH TO LATEST 'BAL' INSTRUCTION
*                                  THIS IS THE DCB EODAD EXIT
ERROR1   RETURN13 RC=1             RETURN,ERROR CODE 1
*                                  NO MORE ROOM IN MASTER TABLE
ERROR2   RETURN13 RC=2             RETURN,ERROR CODE 2
*                                  NO MORE ROOM IN NEW TABLE
ERROR3   RETURN13 RC=3             RETURN,ERROR CODE 3
*                                  NO MORE ROOM IN MASTER OR NEW TABLE
ERROR4   RETURN13 RC=4             RETURN,ERROR CODE 4
*                                  JOBSTEPS NOT IN SEQUENCE
*
*  END OF PROGRAM.
*
         EJECT
*
*  DEFINE DATA AREAS.
*
MAADDR   DS    F                   HOLDS ADDR OF MASTER TABLE
NEADDR   DS    F                   HOLDS ADDR OF NEW TABLE
ENDTAB   DC    XL20'FFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000'
MASTER   DCB   DDNAME=MASTER,MACRF=(GL),EODAD=ENDDATA,DSORG=PS
NEW      DCB   DDNAME=NEW,MACRF=(GL),EODAD=ENDDATA,DSORG=PS
PRINT    DCB   DDNAME=PRINT,MACRF=(PM),LRECL=80,BLKSIZE=800,RECFM=FB,  X
               DSORG=PS
DBLE     DS    D
TEMP     DS    CL16
REMOVED  DC    CL7'REMOVED'
ADDED    DC    CL5'ADDED'
OUT      DC    CL1' '
OUTAREA  DS    CL80
SLASH    DC    CL2'//'
JOBCD    DC    CL5' JOB '
EXEC     DC    CL6' EXEC '
SADDR    DS    F
JOBNHOLD DS    CL8
OUTORDM  DC    CL15'OUT OF SEQUENCE'
LCTERR   DC    CL30'COUNT OF LINES IN STEP DIFFER'
DIFFMESS DC    CL40'THERE IS SOME CHANGE AFTER THIS JOBSTEP'
TITLE1   DC    CL45'REPORT OF COMPARISON BETWEEN TWO SYSGEN DECKS'
TITLE2   DC    CL50'JOB     STEP        JOB     STEP        CONDITION'
TITLE3   DC    CL30'END OF SYSGEN JOBSTEP ANALYSIS'
         END
