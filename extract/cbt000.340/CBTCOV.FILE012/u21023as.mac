*        PROGRAM FASTCAT REORGANISES A SYSCTLG DATA SET
*        INTO CONTIGUOUS INDICES WITH MEANINGFUL KEYS
*        TO TAKE ADVANTAGE OF IMPROVED CATALOG SEARCH
*        FUNCTION FROM RELEASE 19.
*
* RELEASE 21.0 CHANGES TO PROCESS NEW DATA SET POINTER ENTRY
*              AND SNAP THE ENVIRONMENT RECORD AFTER DUMP
* NON-HASP SYSTEMS SHOULD CHANGE 'SNAP DCB DDNAME=SYSPRINT,..'  02400
*
* REL 21.0  CHANGES  LABELLED R21EREC R21DSPE                   R21.0
* SOURCE DELETIONS    00650,01546-01553
*
* //CATLG DD DSN=SYSCTLG,DISP=OLD,... WILL PREVENT OTHER TASKS
*              UPDATING THE CATALOG WHILE FASTCAT IS RUNNING.
*
**   AUTHORS  -  I.C.I. (MOND DIVISION)
         ISEQ  76,80
         TITLE 'FASTCAT - MAIN ROUTINE'
FASTCAT  CSECT
         SAVE  (14,12),,*
         USING FASTCAT,15
         CNOP  0,4
         BAL   12,*+76   BASE
         DROP  15
         USING *,12
         DC    18A(0)    SAVE
         ST    13,4(12)
         ST    12,8(13)
         LR    13,12     CHAIN
*
         L     3,0(1)         R3 -> PARM FIELD
*
         L     11,ASTATIC
         USING WORKAREA,11         ADDRESSABILITY FOR WORKING STORAGE
         L     10,APRINT
         USING IHADCB,10
         MVC   RETCODE,=H'0'  INITIALISE RETURN CODE
         OPEN  ((10),(OUTPUT))     OPEN MSG DATA SET
         TM    DCBOFLGS,X'10'      OK ?
         BZ    ERR01
         MVI   FLAGS,X'0'          INITIALISE FLAG BYTE
*                   SET UP HEADING LINE & PRINT
         TIME
         ST    1,WORKAREA
         MVC   HEADING+9(7),EDITDATE
         ED    HEADING+9(7),WORKAREA+1
         L     1,APRINT
         PUT   (1),HEADING
         MVI   PLINE,C' '          INITIALISE
         MVC   PLINE+1(120),PLINE    PRINT LINE
*                   PROCESS PARM INFORMATION
         SR    2,2
         AH    2,0(3)    R2= LENGTH OF PARM
         BZ    ML01
         MVC   PLINE+10(7),=C'PARM = '
         MVI   PLINE,C'-'
         BCTR  2,0
         EX    2,MOVEPARM
         L     1,APRINT
         PUT   (1),PLINE      PRINT PARM
         EX    2,TESTDUMP
         BE    ML02
         EX    2,TESTREST
         BE    ML03
         B     ERR02
MOVEPARM MVC   PLINE+17(1),2(3)    MOVE PARM INTO PRINT LINE
TESTDUMP CLC   2(1,3),=C'DUMP'
TESTREST CLC   2(1,3),=C'RESTORE'
*
ML01     EQU   *    DEFAULT PARM = DUMP & RESTORE
         OI    FLAGS,RESTFLAG SET RESTORE FLAG ON
ML02     EQU   *            PARM = DUMP
         OI    FLAGS,DUMPFLAG SET DUMP FLAG ON
ML03     EQU   *            PARM = RESTORE
*                   OPEN CATALOG AND WORK DATA SETS
         RDJFCB MF=(E,RDJFCB)
         LTR   15,15                                            R21
         BNZ   ERR03                                            R21
         MVC   CTLGJFCB(44),=CL44'SYSCTLG'   SET DSNAME IN JFCB
         OI    CTLGJFCB+52,X'02'   SUPPRESS DCB -> JFCB -> DSCB MERGE
*
         TM    FLAGS,DUMPFLAG DUMP FLAG ON ?
         BNO   ML04
*
         L     10,ASUT1       R10 -> SYSUT1 DCB
         OPEN  ((10),(OUTPUT))
         TM    DCBOFLGS,X'10'
         BZ    ERR04
         OI    FLAGS,OPENSUT1
         OPEN  (,(INPUT)),TYPE=J,MF=(E,RDJFCB)
         OI    FLAGS,OPENCTLG
*
         CALL  DUMP           INVOKE DUMP ROUTINE
*
         BAL   14,SNAPENV     SNAP ENVIRONMENT RECORD           R21EREC
         B     *+4(15)
         B     ML08           RC = 0    NORMAL END OF TASK
         B     ML10           RC = 4    ABNORMAL END OF TASK
ML04     EQU   *    INITIALISE FOR RESTORE ONLY
         OI    FLAGS,RESTFLAG SET RESTORE FLAG ON
         L     10,ASUT1
         OPEN  ((10),(INPUT))
         TM    DCBOFLGS,X'10'
         BZ    ERR04
         OI    FLAGS,OPENSUT1
ML05     EQU   *              SEARCH FOR DESCRIPTOR RECORD
         L     1,ASUT1
         GET   (1)
         CLI   0(1),X'FF'
         BNE   ML05
         CLC   2(8,1),=CL8' DESCREC'
         BNE   ML05
         MVC   DESCREC,0(1)   FOUND
         L     3,TABSIZE      R3 = SIZE OF TABLE
         AH    3,=H'255'           ROUNDED TO
         SRA   3,8                 NEXT MULTIPLE
         SLA   3,8                  OF 256
         ST    3,DSASIZE
         GETMAIN EC,LV=(3),A=DSASTART
         LTR   15,15
         BNZ   ERR06
         OI    FLAGS,GETMAIN
         L     4,TABSTART     R4= START OF TABLE
         LH    5,=H'256'      R5= 256
         SRA   3,8            R3 = NO OF 256 BYTE BLOCKS IN TABLE
ML06     EQU   *    READ TABLE FROM SYSUT1
         L     1,ASUT1
         GET   (1)
         MVC   0(256,4),0(1)  MOVE TABLE BLOCK INTO DSA
         AR    4,5
         BCT   3,ML06
         CLOSE (SYSUT1,REREAD)
         B     ML09
ML08     EQU   *
         TM    FLAGS,RESTFLAG
         BNO   ML10
         CLOSE (SYSUT1,REREAD,CATLG)
         L     1,APRINT                                         R21EREC
         PUT   (1),HEADING                                      R21EREC
ML09     EQU   *
         OPEN  (,(OUTPUT)),TYPE=J,MF=(E,RDJFCB)
         OI    FLAGS,OPENCTLG
         OPEN  (SYSUT1,(INPUT))
         OI    FLAGS,OPENSUT1
*
         CALL  RESTORE             INVOKE RESTORE ROUTINE
*
ML10     EQU   *                   END OF JOB PROCESSING
         CLC   RETCODE,=H'0'
         BZ    ML10A    OPTIONAL SWITCH TO SNAP IF BAD COMPLETION CODE
         OPEN  (SNAP,(OUTPUT))
         SNAP  DCB=SNAP,PDATA=(ALL)
         CLOSE SNAP
ML10A    EQU   *              FREE MAIN STORAGE
         TM    FLAGS,GETMAIN
         BNO   ML11
         L     3,DSASIZE
         FREEMAIN E,LV=(3),A=DSASTART
ML11     EQU   *              CLOSE FILES
         TM    FLAGS,OPENCTLG
         BNO   ML11A
         CLOSE CATLG
ML11A    EQU   *
         TM    FLAGS,OPENSUT1
         BNO   ML12
         CLOSE SYSUT1
ML12     EQU   *              WRITE END OF JOB MESSAGES
         MVC   PLINE+10(42),=CL42'COMPLETION CODE ='
         MVC   PLINE+27(3),EDITNUM+4
         LH    3,RETCODE
         CVD   3,WORKAREA
         ED    PLINE+27(3),WORKAREA+6
         MVI   PLINE,C'-'
         L     1,APRINT
         PUT   (1),PLINE
         MVC   PLINE+10(40),=CL40'END OF JOB'
         MVI   PLINE,C' '
         L     1,APRINT
         PUT   (1),PLINE
         CLOSE SYSPRINT
ML13     EQU   *         SET COMPLETION CODE AND RETURN
ML14     EQU   *
         LH    15,RETCODE
         L     13,4(13)
         RETURN (14,12),,RC=(15)
SNAPENV  DS    0H             READ AND SNAP ENVIRONMENT RECORD  R21EREC
         STM   14,2,SNAPSAVE                                    R21EREC
         READ  SNAPDECB,DI,CATLG,SNAPBUFF,'S',0,VCLSTBLK        R21EREC
         CHECK SNAPDECB                                         R21EREC
         OPEN  (SNAP,(OUTPUT))                                  R21EREC
         L     2,SNAPDECB+16       REG2 -> IOB                  R21EREC
         MVC   SNAPFDAD(8),32(2)   MOVE SEEK ADDRESS TO SNAPAREAR21EREC
         SNAP  DCB=SNAP,STORAGE=(SNAPB,SNAPE)                   R21EREC
         CLOSE SNAP                                             R21EREC
         LM    14,2,SNAPSAVE                                    R21EREC
         BR    14                                               R21EREC
SNAPSAVE DC    5F'0'                                            R21EREC
SNAPB    DS    0D                                               R21EREC
SNAPBUFF DC    XL256'0'                                         R21EREC
         DC    CL24'ENVIRONMENT REC MBBCCHHR'                   R21EREC
SNAPFDAD DC    XL8'0'                                           R21EREC
SNAPE    DS    0D                                               R21EREC
ERR01    DS    0H
         WTO   'FASTCAT - NO DD CARD FOR SYSPRINT'
         MVC   RETCODE,=H'4'
         B     ML14
ERR02    EQU   *
         MVC   PLINE+10(40),=CL40'* INVALID PARM INFORMATION'
         MVI   PLINE,C'0'
         L     1,APRINT
         PUT   (1),PLINE
         MVC   RETCODE,=H'4'
         B     ML12
ERR03    EQU   *
         MVC   PLINE+10(40),=CL40'* NO DD CARD FOR CATLG'
         MVI   PLINE,C'0'
         L     1,APRINT
         PUT   (1),PLINE
         MVC   RETCODE,=H'4'
         B     ML12
ERR04    EQU   *
         MVC   PLINE+10(40),=CL40'* NO DD CARD FOR SYSUT1'
         MVI   PLINE,C'0'
         L     1,APRINT
         PUT   (1),PLINE
         MVC   RETCODE,=H'4'
         B     ML11
ERR05    EQU   *
         MVC   PLINE+10(40),=CL40'* UNEXPECTED END OF FILE ON SYSUT1'
         MVI   PLINE,C'0'
         L     1,APRINT
         PUT   (1),PLINE
         MVC   RETCODE,=H'4'
         B     ML10
ERR06    EQU   *
         MVC   PLINE+10(40),=CL40'* CORE NOT AVAILABLE FOR TABLE'
         MVI   PLINE,C'0'
         L     1,APRINT
         PUT   (1),PLINE
         MVC   RETCODE,=H'4'
         B     ML11
IOERRB   EQU   *    SYNAD ROUTINE FOR BDAM
         USING IOERRB,15
         SYNADAF ACSMETH=BDAM
         MVI   PLINE+10,C'*'
         MVI   PLINE+11,C' '
         MVC   PLINE+12(78),50(1)
         MVI   PLINE,C'0'          SET UP MESSAGE FROM SYNADAF BUFFER
         SYNADRLS
         TM    FLAGS,ERRSW    TEST ASYNCH ERROR SWITCH
         BO    *+14
         MVC   RETCODE,=H'4'
         B     *+10
         MVC   RETCODE,=H'8'
         L     1,APRINT
         PUT   (1),PLINE
         MVI   PLINE,C' '
         MVC   PLINE+1(90),PLINE
         LH    15,RETCODE
         L     13,4(13)
         RETURN (14,12),,RC=(15)   BRANCH TO EOJ ROUTINE
*
DCBEXIT1 EQU   *    SET DEFAULT BLKSIZE FOR SYSUT1
         USING DCBEXIT1,15
         DROP  10
         USING IHADCB,1
         CLC   DCBBLKSI,=H'0'
         BNZ   *+10
         MVC   DCBBLKSI,=H'3328'
         BR    14
*
RDJFCB   RDJFCB (CATLG),MF=L
*
         READ  DECB1,DI,CATLG,BUFFER,'S',0,DADDR,MF=L
*
         WRITE DECB2,DI,CATLG,BUFFER,'S',DKEY,DADDR,MF=L
*
CATLG    DCB   DDNAME=CATLG,DSORG=DA,MACRF=(RIC,WIC),SYNAD=IOERRB,     C
               RECFM=F,BLKSIZE=256,KEYLEN=8,EXLST=CTLGEXIT
*
SYSUT1   DCB   DDNAME=SYSUT1,DSORG=PS,MACRF=(GL,PM),EODAD=ERR05,       C
               RECFM=FB,LRECL=256,EXLST=SUT1EXIT
*
SYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=(PM),                    C
               RECFM=FA,LRECL=121,BLKSIZE=121
*
CTLGEXIT DS    0F
         DC    X'87',AL3(CTLGJFCB)
*
SUT1EXIT DS    0F
         DC    X'85',AL3(DCBEXIT1)
*
SNAP     DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=(W),                     C
               RECFM=VBA,LRECL=125,BLKSIZE=882
ASTATIC  DC    A(STATIC)
EDITDATE DC    XL7'4021204B202020'     BSD.DDD
HEADING  DC    CL121'1    DATE               SYSTEMS SUPPORT UTILITIES C
               --- FASTCAT'
* DEFINE WORKING STORAGE
STATIC   DS    0D
         DS    XL8            WORK AREA
         DC    A(SYSPRINT)
         DC    A(SYSUT1)
         DC    A(CATLG)
         DC    A(DECB1)       READ
         DC    A(DECB2)       WRITE
         DC    A(BUFFER+2)    ENTRY1
         DS    0CL256         DESCRIPTOR RECORD
         DC    X'FFFF'
         DC    CL8' DESCREC'
         DS    H              BLOCKS FORMATTED
         DS    H              BLOCK COUNT
         DS    H              RETURN CODE
         DS    F              DSA SIZE
         DS    F              TABLE SIZE
DSASTART DS    F              TABLE START
         DS    H              CATALOG BLOCKS PER TRACK
         DS    XL1            FLAG BYTE
         DS    XL1
         DC    XL7'4020206B202120'      EDIT NUMBER BDD,DSD
         DS    CL121          PRINT LINE
DKEY     DS    XL8            KEY
BUFFER   DS    CL256          IOAREA
DADDR    DS    XL3            TTR
VCLSTBLK DC    XL3'000001'    TOPTTR  (POINTS TO ENVIRONMENT RECR21EREC
CTLGJFCB DS    CL176
         LTORG                                                  R21EREC
         TITLE 'FASTCAT - DUMP ROUTINE'
DUMP     CSECT
         SAVE  (14,12),,*
         USING DUMP,15
         CNOP  0,4
         BAL   12,*+76   BASE
         DROP  15
         USING *,12
         DC    18A(0)    SAVE
         ST    13,4(12)
         ST    12,8(13)
         LR    13,12     CHAIN
*
*                        R11 -> WORKING STORAGE
*
         MVC   PLINE+10(40),=CL40'DUMP SYSCTLG, VOL=      .'
         MVC   PLINE+28(6),JFCBVOL
         MVI   PLINE,C'-'
         L     1,APRINT
         PUT   (1),PLINE      PRINT TASK HEADER
*
         MVC   TTR,=XL3'1'
         L     2,AREAD
         READ  (2),DI,MF=E    READ VOLUME INDEX CONTROL BLOCK
         CHECK (2)
         L     10,AENTRY1     SET PTR TO FIRST ENTRY
         USING ENTRY,10
         CLC   NAME,=XL8'1'
         BNE   DERR01
*                   PROCESS VOLUME INDEX CONTROL ENTRY FOR CATALOG
         MVC   TOPTTR(3),DATA      SAVE CATALOG UPPER LIMIT     R21EREC
         SR    2,2            ANALYSE CATALOG UPPER LIMIT TTR
         IC    2,DATA+2
         STH   2,CAPACITY     R2= INDEX BLOCKS PER TRACK
         LH    3,=H'1'
         AH    3,DATA         R3= NO OF TRACKS FORMATTED
         MH    3,CAPACITY     R3= NO OF INDEX BLOCKS IN CATALOG
         CH    3,=H'32767'
         BH    DERR02
         STH   3,BLOCKS
         MH    3,=H'5'        R3= SIZE OF DSA
         AH    3,=H'255'          ROUNDED UP TO
         SRA   3,8                NEXT MULTIPLE
         SLA   3,8                OF 256
         ST    3,DSASIZE
         LA    5,TABSTART
         GETMAIN EC,LV=(3),A=(5)   GET CORE FOR TABLE/QUEUE
         LTR   15,15
         BNZ   DERR03
         OI    FLAGS,GETMAIN
         L     5,0(0,5)       R5 = START OF DSA
         SRA   3,8            R3 = NO OF 256 BYTE BLOCKS IN DSA
         LH    6,=H'256'
         BALR  4,0            LOOP TO ZEROISE
         XC    0(256,5),0(5)    DSA IN INCREMENTS
         AR    5,6                OF 256 BYTES
         BCTR  3,4
*                   SET PTRS TO TABLE AND QUEUE
         L     2,TABSTART
         LH    3,BLOCKS
         SLA   3,1            R3 = SIZE OF TABLE (2 BYTES PER ENTRY)
         ST    3,TABSIZE
         AR    3,2            R3= START OF QUEUE (3 BYTES PER ENTRY)
         LR    4,3
         BCTR  2,0
         BCTR  2,0
* R2 = TABLE - 2, R3= FIRST FREE QUEUE ENTRY, R4= NEXT QUEUE ENTRY
         SR    5,5
         STH   5,BLKCNT       INITIALISE BLOCK COUNT
         LA    1,ADDR
         BAL   14,RELBLK      LAST BLOCK ADDRESS
         OI    VCBSW+1,X'F0'  INITIALISE VCB SWITCH
         IC    5,HCOUNT
         SLA   5,1
         LA    10,12(5,10)    INCREMENT PTR TO NEXT ENTRY
*                   PROCESS CATALOG ENTRIES
DL01     EQU   *
         CLI   NAME,X'0'
         BNE   DL02
         CLC   NAME+1(7),=XL7'1'
         BNE   DL02
*                   INDEX CONTROL ENTRY
         LA    1,ADDR
         BAL   14,RELBLK      LAST BLOCK ADDRESS
         LA    1,DATA
         BAL   14,RELBLK      INDEX LOWER LIMIT
         IC    5,HCOUNT
         SLA   5,1
         LA    10,12(5,10)    SET PTR TO NEXT ENTRY
DL02     EQU   *
         CLI   NAME,X'FF'
         BNE   DL07
         CLC   NAME+1(7),NAME
         BNE   DL07
*                   INDEX LINK ENTRY (LAST ENTRY IN BLOCK)
DL03     EQU   *
         LH    6,TTR          CONVERT
         MH    6,CAPACITY       CURRENT BLOCK TTR ADDRESS
         IC    5,TTR+2            TO RELATIVE BLOCK ADDRESS
         AR    6,5            R6=   (TT * BLKS PER TRK + R)
         LH    7,BLKCNT       INCREMENT
         AH    7,=H'1'          SYSUT1
         STH   7,BLKCNT           BLOCK COUNT
         SLA   6,1            R6= TABLE LOOK UP ARGUMENT
         STH   7,0(6,2)       STORE NEW      BLOCK ADDRESS IN TABLE
*
         CLC   ADDR,=XL3'0'   TEST LINK ADDRESS FIELD
         BNZ   DL04
*                             GET NEXT TTR FROM QUEUE
         CR    3,4            END OF QUEUE ?
         BNH   DL09
         MVC   TTR,0(4)       SET TTR
         AH    4,=H'3'        INCREMENT PTR TO NEXT QUEUE ENTRY
         TM    TTR,X'80'      VCB POINTER ?
         BO    DL06
         B     DL05
DL04     EQU   *         GET NEXT TTR FROM LINK ADDRESS FIELD
         MVC   TTR,ADDR
         LA    1,ADDR
         BAL   14,RELBLK      LINK ADDRESS
DL05     EQU   *
         L     1,ASUT1
         PUT   (1),IOAREA     OUTPUT CURRENT BLOCK
         L     6,AREAD
         READ  (6),DI,MF=E    READ CATALOG BLOCK (TTR)
         CHECK (6)
         L     10,AENTRY1     SET PTR TO FIRST ENTRY
VCBSW    B     DL01
         OI    IOAREA,X'80'   SET FIRST BIT OF VOLUME LIST BLOCK
         LA    10,IOAREA+244  SET PTR TO CHAIN ADDRESS - 8
         CLC   ADDR,=XL3'0'
         BNE   DL03
         OI    VCBSW+1,X'F0'  SET VCB SWITCH OFF
         B     DL03
DL06     EQU   *         PROCESS VOLUME LIST BLOCK
         NI    VCBSW+1,X'0F'  SET VCB SWITCH ON
         XI    TTR,X'80'      SET HIGH ORDER BIT OFF
         B     DL05
DL07     EQU   *
         CLI   HCOUNT,X'07'        DATA SET POINTER ENTRY?      R21DSPE
         BNL   DL08B               YES                          R21DSPE
         CLC   ADDR,=XL3'0'   DATA SET PTR OR CVOL PTR ?
         BZ    DL08B
         CLI   HCOUNT,X'04'   ALIAS ENTRY ?
         BE    DL08A
         CLI   HCOUNT,X'02'        MUST BE INDEX, GENERATION    AGFIX
         BH    DERR01              OR VCB POINTER ENTRY.        AGFIX
*              ADD TTR PTR IN ADDRESS FIELD TO QUEUE
         CLC   ADDR(2),TOPTTR      VALID TT POINTER ?           RTTRVAL
         BH    DERR01              NO, ERROR                    RTTRVAL
         CLC   ADDR+2(1),TOPTTR+2  VALID R POINTER ?            RTTRVAL
         BH    DERR01              NO, ERROR                    RTTRVAL
         MVC   0(3,3),ADDR
         CLI   HCOUNT,X'01'   VOLUME CONTROL BLOCK PTR ?
         BNE   DL08
         OI    0(3),X'80'     FLAG TTR IN QUEUE AS VCB PTR
DL08     EQU   *
         AH    3,=H'3'        INCREMENT PTR TO NEXT FREE QUEUE ENTRY
DL08A    EQU   *
         LA    1,ADDR
         BAL   14,RELBLK      CONVERT TTR IN ADDR
DL08B    EQU   *
         IC    5,HCOUNT       SET PTR
         SLA   5,1              TO NEXT ENTRY
         LA    10,12(5,10)        IN BLOCK
         B     DL01
DL09     EQU   *    END OF TTR QUEUE
         L     1,ASUT1
         PUT   (1),IOAREA     OUTPUT LAST BLOCK
         L     1,ASUT1
         PUT   (1),DESCREC    OUTPUT DESCRIPTOR RECORD
         L     2,TABSTART
         L     3,TABSIZE
         AH    3,=H'255'
         SRA   3,8       R3= NO OF 256 BYTE BLOCKS IN TABLE
DL10     EQU   *              LOOP
         L     1,ASUT1          TO OUTPUT
         PUT   (1),(2)            TABLE
         AH    2,=H'256'            TO SYSUT1
         BCT   3,DL10
*                   OUTPUT DUMP STATISTICS
         MVC   PLINE+10(42),=CL42'NUMBER OF CATALOG BLOCKS DUMPED   = '
         LH    7,BLKCNT
         CVD   7,WORKAREA
         MVC   PLINE+45(7),EDITNUM
         ED    PLINE+45(7),WORKAREA+5
         MVI   PLINE,C'0'
         L     1,APRINT
         PUT   (1),PLINE      PRINT BLOCK COUNT
*                   CALCULATE MINIMUM SPACE REQUIREMENT
         SR    6,6            ASSUME LIKE DEVICES
         LH    5,CAPACITY     NO OF CATALOG BLOCKS +
         AR    7,5            NO OF BLKS / TRK - 1
         BCTR  7,0            DIVIDED BY NO OF BLKS / TRK
         DR    6,5
         CVD   7,WORKAREA
         MVC   PLINE+10(42),=CL42'MINIMUM SPACE REQUIREMENT (TRKS)  = '
         MVC   PLINE+45(7),EDITNUM
         ED    PLINE+45(7),WORKAREA+5
         MVI   PLINE,C' '
         L     1,APRINT
         PUT   (1),PLINE      PRINT MIN SPACE REQ
DL11     EQU   *
         LH    15,RETCODE
         L     13,4(13)
         RETURN (14,12),,RC=(15)
RELBLK   EQU   *    CONVERT TTR ADDRESS TO RELATIVE BLOCK ADDRESS
         LH    6,0(1)
         MH    6,CAPACITY     TT * NO OF BLOCKS PER TRACK + R
         IC    5,2(1)
         AR    6,5
         STH   6,0(1)         STORE REL BLOCK ADDR IN 1ST 2 BYTES TTR
         BR    14
DERR01   EQU   *
         MVC   PLINE+10(40),=CL40'* INCONSISTENT CATALOG STRUCTURE'
         MVI   PLINE,C'0'
         L     1,APRINT
         PUT   (1),PLINE
         MVC   RETCODE,=H'4'
         B     DL11
DERR02   EQU   *
         MVC   PLINE+10(40),=CL40'* CATALOG IS TOO LARGE FOR PROGRAM'
         MVI   PLINE,C'0'
         L     1,APRINT
         PUT   (1),PLINE
         MVC   RETCODE,=H'4'
         B     DL11
DERR03   EQU   *
         MVC   PLINE+10(40),=CL40'* CORE NOT AVAILABLE FOR TABLE/QUEUE'
         MVI   PLINE,C'0'
         L     1,APRINT
         PUT   (1),PLINE
         MVC   RETCODE,=H'4'
         B     DL11
         LTORG
         TITLE 'FASTCAT - RESTORE ROUTINE'
RESTORE  CSECT
         SAVE  (14,12),,*
         USING RESTORE,15
         CNOP  0,4
         BAL   12,*+76   BASE
         DROP  15
         USING *,12
         DC    18A(0)    SAVE
         ST    13,4(12)
         ST    12,8(13)
         LR    13,12     CHAIN
*
*                        REG11 -> WORKING STORAGE
*
         MVC   PLINE+10(42),=CL42'RESTORE SYSCTLG, VOL=      .'
         MVC   PLINE+31(6),JFCBVOL
         MVI   PLINE,C'-'
         L     1,APRINT
         PUT   (1),PLINE      PRINT TASK HEADER
* CATALOG MANAGEMENT ROUTINES ARE USED TO READ
*         THE VOLUME INDEX CONTROL BLOCK
*         TO ENSURE THAT THE SYSCTLG DATA SET IS FORMATTED
         MVC   CVOL,JFCBVOL   GET VOL SER NUM FROM CATLG JFCB
         LOCATE VICB
         LTR   15,15
         BNZ   RERR01
         OI    FLAGS,ERRSW    SET ASYNCH ERROR SWITCH            RC=8
         SR    2,2            ANALYSE CATALOG UPPER LIMIT TTR
         IC    2,CULIMIT+2
         STH   2,CAPACITY     R2= NO OF BLOCKS PER TRACK
         LH    3,=H'1'
         AH    3,CULIMIT
         MH    3,CAPACITY     R3= NO OF BLOCKS FORMATTED
         CH    3,BLKCNT
         BL    RERR02
         STH   3,BLOCKS
*                   UPDATE VOLUME INDEX CONTROL ENTRY FOR NEW CATALOG
         L     1,ASUT1
         GET   (1)
         MVC   IOAREA(256),0(1)
         L     10,AENTRY1     SET PTR TO FIRST ENTRY
         CLC   NAME,=XL8'1'
         BNE   RERR03
         MVC   DATA(3),CULIMIT     SET  CATALOG UPPER LIMIT
*                   CALCULATE TTR OF FIRST UNUSED BLOCK
         LH    3,BLKCNT       R3= REL BLK NO - 1 OF FIRST UNUSED BLOCK
         SR    2,2            CONVERT R3 TO TTR
         LH    4,CAPACITY
         DR    2,4            R3 = TT
         AH    2,=H'1'        R2 = R
         STH   3,DATA+4
         STC   2,DATA+6
*
         L     9,TABSTART
         BCTR  9,0
         BCTR  9,0            R9 -> NEW TTR TABLE - 2
         SR    5,5
         STH   5,BLKCNT       INITIALISE CATALOG BLOCK COUNT
         LA    1,ADDR
         BAL   14,NEWTTR      UPDATE LAST BLOCK ADDRESS
         IC    5,HCOUNT
         SLA   5,1
         LA    10,12(5,10)    SET PTR TO NEXT ENTRY
         OI    EMPTYSW+1,X'F0'     SET OFF SWITCH FOR END PROCESSING
RL01     EQU   *    PROCESS CATALOG ENTRIES
         CLC   NAME,=XL8'1'
         BNE   RL02
*                   INDEX CONTROL ENTRY
         LA    1,ADDR
         BAL   14,NEWTTR      LAST BLOCK ADDRESS
         LA    1,DATA
         BAL   14,NEWTTR      INDEX LOWER LIMIT
         IC    5,HCOUNT
         SLA   5,1
         LA    10,12(5,10)    SET PTR TO NEXT ENTRY
RL02     EQU   *
         CLI   NAME,X'FF'
         BNE   RL06
         CLC   NAME+1(7),NAME
         BNE   RL06
*                   INDEX LINK ENTRY
         CLC   ADDR,=XL3'0'   LAST BLOCK IN INDEX ?
         BNE   RL03           NO  - SET KEY TO LAST ENTRY NAME
         MVC   KEY,=8XL1'FF'  YES - SET KEY TO FF
         B     RL04
RL03     EQU   *
         LA    1,ADDR
         BAL   14,NEWTTR      LINK ADDRESS
RL04     EQU   *    WRITE NEW CATALOG BLOCK
         LH    3,BLKCNT       INCREMENT
         AH    3,=H'1'          BLOCK
         STH   3,BLKCNT           COUNT
         BCTR  3,0            CONVERT
         SR    2,2              BLOCK
         LH    4,CAPACITY         COUNT
         DR    2,4                  TO
         AH    2,=H'1'                TTR
         STH   3,TTR          R3 = TT
         STC   2,TTR+2        R2 = R
         L     2,AWRITE
         WRITE (2),DI,MF=E
         CHECK (2)
EMPTYSW  B     RL04A
         BCT   7,RL04         WRITE EMPTY BLOCKS TO CATLG
         B     RL10A
*                   READ NEXT RECORD FROM SYSUT1
RL04A    EQU   *
         L     1,ASUT1
         GET   (1)
         CLI   0(1),X'FF'     DESCRIPTOR RECORD ?
         BNE   RL05
         CLC   2(8,1),=CL8' DESCREC'
         BE    RL10
RL05     EQU   *
         MVC   IOAREA(256),0(1)
         TM    IOAREA,X'80'   VOLUME LIST BLOCK ?
         BO    RL09
         L     10,AENTRY1     SET PTR TO FIRST ENTRY
         B     RL01
RL06     EQU   *
         CLI   HCOUNT,X'07'        DATA SET POINTER ENTRY ?     R21DSPE
         BNL   RL08                YES                 RY ?     R21DSPE
         CLC   ADDR,=XL3'0'
         BZ    RL08
         CLI   HCOUNT,X'00'   INDEX POINTER ENTRY ?
         BE    RL07
         CLI   HCOUNT,X'01'   VOLUME CONTROL BLOCK POINTER ENTRY ?
         BE    RL07
         CLI   HCOUNT,X'02'   GENERATION INDEX POINTER ENTRY ?
         BE    RL07
         CLI   HCOUNT,X'04'   ALIAS ENTRY ?
         BE    RL07
         B     RERR03
RL07     EQU   *
         LA    1,ADDR
         BAL   14,NEWTTR      UPDATE TTR
RL08     EQU   *         DATA SET OR CVOL POINTER ENTRIES
         MVC   KEY,NAME  SET KEY TO LAST ENTRY NAME
         IC    5,HCOUNT
         SLA   5,1
         LA    10,12(5,10)    SET PTR TO NEXT ENTRY
         B     RL01
RL09     EQU   *         VOLUME LIST BLOCK
         MVC   KEY,=8XL1'FF'
         XI    IOAREA,X'80'   RESET FIRST BIT OF VOLUME LIST BLOCK
         LA    10,IOAREA+244
         CLC   ADDR,=XL3'0'
         BZ    RL04
         B     RL03
RL10     EQU   *         END OF INPUT DATA
*              OUTPUT RESTORE STATISTICS
         MVC   PLINE+10(42),=CL42'NUMBER OF CATALOG BLOCKS RESTORED = '
         LH    3,BLKCNT
         CVD   3,WORKAREA
         MVC   PLINE+45(7),EDITNUM
         ED    PLINE+45(7),WORKAREA+5
         MVI   PLINE,C'0'
         L     1,APRINT
         PUT   (1),PLINE      PRINT BLOCK COUNT
         MVC   PLINE+10(42),=CL42'NUMBER OF UNUSED CATALOG BLOCKS   = '
         LH    7,BLOCKS
         SR    7,3
         CVD   7,WORKAREA
         BNP   RL10A
         XC    KEY,KEY        SET KEY TO ZERO
         XC    IOAREA,IOAREA  SET DATA TO ZERO
         NI    EMPTYSW+1,X'0F'     SET ON SWITCH FOR END PROCESSING
         B     RL04
RL10A    EQU   *
         MVC   PLINE+45(7),EDITNUM
         ED    PLINE+45(7),WORKAREA+5
         MVI   PLINE,C' '
         L     1,APRINT
         PUT   (1),PLINE
RL11     EQU   *
         LH    15,RETCODE
         L     13,4(13)
         RETURN (14,12),,RC=(15)
NEWTTR   EQU   *    CONVERT RELATIVE BLOCK ADDR TO TTR ADDR
         LH    7,0(1)
         SLA   7,1
         LH    7,0(7,9)       GET NEW BLOCK ADDR FROM TABLE
         BCTR  7,0
         SR    6,6
         LH    4,CAPACITY
         DR    6,4       R7= TT
         AH    6,=H'1'   R6= R
         STH   7,0(1)
         STC   6,2(1)
         BR    14
RERR01   EQU   *
         MVC   PLINE+10(40),=CL40'* UNABLE TO LOCATE SYSCTLG DATA SET'
         MVI   PLINE,C'0'
         L     1,APRINT
         PUT   (1),PLINE
         MVC   RETCODE,=H'4'
         B     RL11
RERR02   EQU   *
         MVC   PLINE+10(40),=CL40'* SYSCTLG PRIMARY EXTENT TOO SMALL'
         MVI   PLINE,C'0'
         L     1,APRINT
         PUT   (1),PLINE
         MVC   RETCODE,=H'8'
         B     RL11
RERR03   EQU   *
         MVC   PLINE+10(40),=CL40'* INCONSISTENT SYSUT1 FORMAT       '
         MVI   PLINE,C'0'
         L     1,APRINT
         PUT   (1),PLINE
         MVC   RETCODE,=H'8'
         B     RL11
VICB     CAMLST BLOCK,VTTR,CVOL,VAREA
VTTR     DC    XL3'1'
CVOL     DS    CL6
VAREA    DS    0D
         DS    CL14
CULIMIT  DS    XL3
         DS    CL248
         LTORG
         TITLE 'FASTCAT - WORKING STORAGE'
DUMPFLAG EQU   X'80'
RESTFLAG EQU   X'40'
OPENCTLG EQU   X'20'
OPENSUT1 EQU   X'10'
GETMAIN  EQU   X'08'
ERRSW    EQU   X'04'
*
ENTRY    DSECT
NAME     DS    CL8
ADDR     DS    XL3
HCOUNT   DS    XL1
DATA     DS    H
*
WORKAREA DSECT
         DS    XL8
APRINT   DS    F
ASUT1    DS    F
ACTLG    DS    F
AREAD    DS    F
AWRITE   DS    F
AENTRY1  DS    F
DESCREC  DS    0CL256
         DS    CL10
BLOCKS   DS    H
BLKCNT   DS    H
RETCODE  DS    H
DSASIZE  DS    F
TABSIZE  DS    F
TABSTART DS    F
CAPACITY DS    H
FLAGS    DS    XL1
         DS    XL1
EDITNUM  DS    XL7
PLINE    DS    CL121
KEY      DS    XL8
IOAREA   DS    CL256
TTR      DS    XL3
TOPTTR   DS    XL3                                              R21EREC
         DS    CL118
JFCBVOL  DS    CL6
*
         DCBD  DSORG=PS
         END   FASTCAT
