//SYSTSMFP JOB (9029,270),TAUCHNITZ,CLASS=H
//SYSTSMFP EXEC ATASMHCL
//C.SYSLIB DD  DSN=SYS1.MACLIB,DISP=SHR
//         DD  DSN=SYS1.MACLIB,DISP=SHR
//         DD  DSN=SYS1.AMODGEN,DISP=SHR,VOL=SER=DLIB01,UNIT=3330
//C.SYSIN  DD  *
SMFREPRT TITLE 'SMFREPORT - DIE ONE-PAGE-ONLY-VERSION'
**
**LINK INCLUDE OBJMODS(OSGMZZZ0,OSPMZZZ9)
**LINK INCLUDE SYSLMOD(CVGK,CVDZ,RECHEN,SYSTMDAT)
**LINK NAME SMFREPRT(R)
**
         PRINT NOGEN
         MACRO
&NAME    CONSOR &FELD,&LNG
         GBLB  &PRO,&I
         LCLA  &L2
         LCLC  &LTYP
         AIF   (&PRO).OK
         MNOTE *,'OHNE PROGR KANN CONSOR NICHT GENERIERT WERDEN.'
         MEXIT
.OK      ANOP
         AIF   (&I).M1
&NAME    B     WTOZZZZZ
         CNOP  0,4
WTOXXXXX DS    F
         ST    R14,0(R15)
         CNOP  0,4
         BAL   R1,122(R15) ;      BRANCH AROUND MESSAGE
         DC    AL2(109) ;         MESSAGE LENGTH
         DC    X'0000' ;          MCSFLAGS FIELD
         DC    CL105' ' ;         MESSAGE
         DS    0H
         SVC   35 ;               ISSUE WTO-SVC
         CNOP  2,4
         BALR  R15,R0
         B     8(R15)
         DC    A(WTOXXXXX)
         L     R14,4(R15)
         L     R14,0(R14)
         BR    R14
WTOZZZZZ EQU   *
.M1      ANOP
&LTYP    SETC  'L'''
         AIF   ('&LNG' EQ '').M2
&L2      SETA  &LNG+4
         AGO   .M3
.M2      ANOP
&L2      SETA  L'&FELD
&L2      SETA  &L2+4
.M3      ANOP
         AIF   (&L2 LE 109).NOGT105
         MNOTE 4,'MESSAGE LAENGER ALS 105 STELLEN NICHT ERLAUBT'
&L2      SETA 109
.NOGT105 ANOP
         CNOP  2,4
         AIF   (&I).I
         BALR  R15,R0
         AGO   .NOTI
.I       ANOP
&NAME    BALR  R15,R0
.NOTI    ANOP
&I       SETB  1
         B     8(R15)
         DC    A(WTOXXXXX)
         L     R15,4(R15)
         AIF   ('&LNG' NE '').M4
         AIF   (&L2 LE 109).M31
         MVC   16(105,R15),&FELD
         AGO   .M5
.M31     ANOP
         MVC   16(&LTYP&FELD,R15),&FELD
         AGO   .M5
.M4      ANOP
         AIF   (&L2 LE 109).M41
         MVC   16(105,R15),&FELD
         AGO   .M5
.M41     ANOP
         MVC   16(&LNG,R15),&FELD
.M5      ANOP
         MVC   12(2,R15),=H'&L2'
         BAL   R14,4(R15)
         MEND
         EJECT
         MACRO
&NAME    CVDEZ &D,&G
         CNOP  0,4
&NAME    BAL   1,*+12
         DC    A(&G,&D)
         L     15,=V(CVDZ)
         BALR  14,15
         MEND
         EJECT
         MACRO
&NAME    CVGLEIT &G,&D
         CNOP  0,4
&NAME    BAL   1,*+12
         DC    A(&D,&G)
         L     15,=V(CVGK)
         BALR  14,15
         MEND
         EJECT
         MACRO
&NAME    CVTAB &LIST,&TYPE=Z
         LCLA  &COUNT,&N,&INDEX
         LCLC  &L
&COUNT   SETA  N'&LIST/2
&N       SETA  &N+1
         AIF   ('&TYPE' EQ 'Z').ZONED
         AIF   ('&TYPE' EQ 'P').PACKED
         MNOTE 8,'TYPE PARAMETER IST FALSCH ... KEINE GENERIERUNG'
         MEXIT
.PACKED  ANOP
&INDEX   SETA  6
.ZONED   ANOP
         CNOP  0,4
&NAME    DC    AL1(&COUNT)
         DC    AL3(0)
.LOOP    ANOP
&L       SETC  'L'''
         DC    AL1(&L&LIST(&N))
         DC    AL3(&LIST(&N))
         DC    AL1(&LIST(&N+1))
         DC    AL3(&INDEX)
&COUNT   SETA  &COUNT-1
&N       SETA  &N+2
         AIF   (&COUNT GT 0).LOOP
         MEXIT
         MEND
         EJECT
         MACRO
&NAME    EOJ   &RC=O
*********************************  E O J - R E T U R N ****************
         GBLB  &PRO
         AIF   (&PRO).EOJ
         MNOTE 12,'OHNE PROGR KANN EOJ NICHT GENERIERT WERDEN'
         MEXIT
.EOJ     ANOP
         AIF   ('&RC' EQ 'O').NORC
         AIF   ('&RC'(1,1) NE '(').DIRECT
.REG1    ANOP
         AIF   ('&RC(1)' NE '15' AND '&RC(1)' NE 'R15').NO15
&NAME    ST    R15,R&SYSNDX
         AGO   .ALL1
.NORC    ANOP
.DIRECT  ANOP
&NAME    L     R1,108(R3)
         AGO   .ALL2
.ALL1    ANOP
         L     R1,108(R3)
.ALL2    ANOP
         SVC   14
         CLI   15(R3),C'R'
         BNE   R&SYSNDX+4
         LOAD  EP=EOJ
         LR    R15,R0
         CNOP  0,4
         BAL   R1,*+8
         DC    A(R&SYSNDX)
         BALR  R14,R15
         DS    0F
         AIF   ('&RC' NE 'O').NOO
         MNOTE 1,'WARUM IST KEIN RC GESETZT WORDEN'
R&SYSNDX DC    AL1(128),AL3(0)
         L     R13,32(R3)
         LM    R14,R12,12(R13)
         BR    R14
         MEXIT
.NOO     ANOP
         AIF   ('&RC'(1,1) EQ '(').REG2
R&SYSNDX DC    AL1(0),AL3(&RC)
         L     R13,32(R3)
         LM    R14,R12,12(R13)
         LA    R15,&RC
         BR    R14
         MEXIT
.REG2    ANOP
         AIF   ('&RC(1)' NE '15' AND '&RC(1)' NE 'R15').NO15
R&SYSNDX DC    AL1(0),AL3(0)
         L     R13,32(R3)
         L     R14,12(R13)
         L     R15,R&SYSNDX
         LM    R0,R12,20(R13)
         BR    R14
         MEXIT
.NO15    ANOP
         IHBERMAC 61,,&RC
         MEND
         EJECT
         MACRO
&NAME    FILL  &P1,&P2,&P3
         GBLC  &CG1,&CG2
         LCLA  &AL1,&AL2
 AIF ('&P1' EQ '').A
 AIF ('&P2' NE '').B
.A MNOTE 'PARAMETER FEHLEN'
 MEXIT
.B AIF ('&P3' EQ '').C
&CG1 SETC '&P3.#'(1,2)
 AIF ('&CG1' EQ 'X''').BB
&CG2 SETC '&CG1'(2,1)
 AIF ('&CG2' EQ '#').BBB
 MNOTE 'PARAMETER 3 UNGUELTIG'
 MEXIT
.BB ANOP
&NAME    MVI   &P1,&P3
 AGO .D
.BBB ANOP
&NAME    MVI   &P1,C'&P3'
 AGO .D
.C ANOP
&NAME    MVI   &P1,C' '
.D AIF (&P2 EQ 1).G
&AL1 SETA 1
&AL2 SETA &P2-1
 AIF (&AL2 LE 256).F
.E       MVC   &P1+&AL1.(256),&P1
&AL1 SETA &AL1+256
&AL2 SETA &P2-&AL1
 AIFB (&AL2 GT 256).E
.F       MVC   &P1+&AL1.(&AL2),&P1
.G MEND
         EJECT
         MACRO
&NAME    PARM
         LCLA  &ANF,&EOP,&EPARM,&GLEICH,&WERT,&STERN,&LWERT,&L1,&L2
         LCLC  &DAT1,&DAT2,&DAT3,&DAT4,&X
         LCLC  &TEXT1,&TEXT2,&TEXT3,&TEXT4,&TEXT5
         AIF   ('SYSLIST(1)' NE '').MITOP1
         MNOTE *,'OHNE PARAMETER KEINE GENERIERUNG'
         MEXIT
.MITOP1  ANOP
&X       SETC  '&SYSNDX'
***********************************************************************
&NAME    B     LINKPARM
P1&X     EQU   *
&EPARM   SETA  K'&SYSLIST(1)
&ANF     SETA  1
.SCH1    ANOP
&ANF     SETA  &ANF+1
&GLEICH  SETA  &ANF+1
&WERT    SETA  &GLEICH+1
&EOP     SETA  &WERT+1
         AIF   ('&SYSLIST(1)'(&GLEICH,1) NE '=').FEHLER1
.SCH2    ANOP
         AIF   ('&SYSLIST(1)'(&EOP,1) EQ ')'                           *
               OR '&SYSLIST(1)'(&EOP,1) EQ ',').SCH3
&EOP     SETA  &EOP+1
         AIF   (&EOP GT &EPARM).FEHLER2
         AGO   .SCH2
.SCH3    ANOP
&STERN   SETA  &EOP-1
&DAT1    SETC  '&SYSLIST(1)'(&ANF,2)
&DAT2    SETC  '&SYSLIST(1)'(&ANF,1)
&LWERT   SETA  &STERN-&WERT
         AIF   ('&SYSLIST(1)'(&STERN,1) EQ '*').STAR
         AIF   ('&SYSLIST(1)'(&STERN,1) EQ '$').DOLLAR
         AIF   ('&SYSLIST(1)'(&STERN,1) EQ '%').PRZENT
&DAT3    SETC  ' '
&TEXT1   SETC  'WAHLWEIS'
&TEXT2   SETC  'E    MIT'
&TEXT3   SETC  ' FESTER '
&TEXT4   SETC  '   LAENG'
&TEXT5   SETC  'E       '
&STERN   SETA  &EOP
&LWERT   SETA  &STERN-&WERT
         AGO   .ALWAYS
.STAR    ANOP
&DAT3    SETC  '*'
&TEXT1   SETC  'ERFORDER'
&TEXT2   SETC  'LICH MIT'
&TEXT3   SETC  ' FESTER '
&TEXT4   SETC  '   LAENG'
&TEXT5   SETC  'E       '
         AGO   .ALWAYS
.DOLLAR  ANOP
&DAT3    SETC  '$'
&TEXT1   SETC  'WAHLWEIS'
&TEXT2   SETC  'E    MIT'
&TEXT3   SETC  ' VARIABL'
&TEXT4   SETC  'ER LAENG'
&TEXT5   SETC  'E       '
         AGO   .ALWAYS
.PRZENT  ANOP
&DAT3    SETC  '%'
&TEXT1   SETC  'ERFORDER'
&TEXT2   SETC  'LICH MIT'
&TEXT3   SETC  ' VARIABL'
&TEXT4   SETC  'ER LAENG'
&TEXT5   SETC  'E       '
.ALWAYS  ANOP
         AIF   (&LWERT LE 0).FEHLER3
&DAT4    SETC  '&SYSLIST(1)'(&WERT,&LWERT)
&L2      SETA  &DAT4
&L1      SETA  &L2+2
         DC    AL1(&L1)
         DC    C'&DAT1'
PARM&DAT2 DC CL&L2.'&DAT3'
         MNOTE *,'           &TEXT1&TEXT2&TEXT3&TEXT4&TEXT5'
         AIF   (&EOP EQ &EPARM).PARAEND
&ANF     SETA  &EOP
         AGO   .SCH1
.FEHLER1 MNOTE 1,'PARAMETER FALSCH'
         MEXIT
.FEHLER2 MNOTE 2,'PARAMETER FALSCH'
         MEXIT
.FEHLER3 MNOTE 3,'PARAMETER FALSCH'
         MEXIT
.PARAEND ANOP
         DC    C'@'
LINKPARM LINK EP=PARM,PARAM=(PARA0001,P1&X)
***********************************************************************
         EJECT
         MEND
         EJECT
         MACRO
&NAME    PROGR &P1,&P2
****************************  E T E R N I T  **************************
*                                                                     *
*                                 PROGR OS-VERSION                    *
*                                                                     *
***********************************************************************
*                                 J.TOUCHET   AM 25.01.71             *
*                                 A.TAUCHNITZ 25.04.74 LEVEL 002      *
***********************************************************************
         GBLB  &PRO
         GBLC  &SAVE
         LCLA  &AL6,&AL7,&AL8,&AL9,&AL10,&K,&K1,&K2
         LCLC  &R,&X,&DATA,&CODE,&APOS
         LCLB  &FEHL,&SHORT
         AIF   (NOT &PRO).YES
.YES     ANOP
&X       SETC  '&SYSNDX'
         AIF   ('&NAME' NE '').A
         MNOTE 'NAME FEHLT'
&FEHL    SETB  1
.A       AIF   (T'&P1 EQ 'N').B
         MNOTE 'PARAMETER 1 FEHLT ODER NICHT NUMERISCH'
.GENEND  MEXIT
.B       AIF   (&FEHL).GENEND
&SAVE    SETC  'SAVE&X'
&R       SETC  'R'
***********************************************************************
*                                 * SAVEROUT, BALR, USING *           *
***********************************************************************
&APOS    SETC  ''''
&CODE    SETC  'F'''
&K2      SETA  8
&DATA    SETC  '00000000'
         AIF   ('&P2' NE 'SHORT').LONG1
&SHORT   SETB  1
         AGO   .ZERO
.LONG1   AIF   ('&P2' EQ '').ZERO
&K       SETA  K'&P2
         AIF   ('&P2'(1,1) NE 'C').NOC
&CODE    SETC  'F'''
         AGO   .C
.NOC     AIF   ('&P2'(1,1) NE 'X').NOCNOX
&CODE    SETC  'X'''
         AIF   (&K LT 4 OR &K GT 9).FEHLER
         AGO   .C1
.C       AIF   (&K LT 4 OR &K GT 11).FEHLER
.C1      AIF   ('&P2'(2,1) NE '''' OR '&P2'(&K,1) NE '''').FEHLER
&K1      SETA  &K-3
&DATA    SETC  '&P2'(3,&K1)
&K2      SETA  &K2-&K1
.LOOP    AIF   (&K2  EQ 0).ENDSYNT
&DATA    SETC  '0&DATA'
&K2      SETA  &K2-1
         AGO   .LOOP
.NOCNOX  AIF   (&K GT 8).FEHLER
&CODE    SETC  'F'''
&DATA    SETC  '&P2'
&K2      SETA  &K2-&K
         AGO   .LOOP
.ENDSYNT AIF   ('&CODE'(1,1) NE 'F').NOF
&AL6     SETA  &DATA
&AL7     SETA  2097152
.LOOP1   AIF   (&AL6 EQ 0 AND &AL7 EQ 8).ZERO
         AIF   (&AL6 EQ &AL7).ZERO
         AIF   (&AL6 GT &AL7).SUBSTR
         AIF   (&AL7 EQ 8).FEHLER1
&AL7     SETA  &AL7/8
         AGO   .LOOP1
.SUBSTR  ANOP
&AL6     SETA  &AL6-&AL7
         AGO   .LOOP1
.FEHLER1 MNOTE *,'START-ADRESSE NICHT OHNE REST DURCH 8 TEILBAR. START *
               0 WIRD GENERIERT'
         AGO   .SETZERO
.NOF     AIF   ('&DATA'(8,1) NE '0' AND '&DATA'(8,1) NE '8').FEHLER1
.ZERO    AIF   ('&DATA' NE '00000000').NOZERO
&NAME    CSECT
         AGO   .ENTRY
.NOZERO  ANOP
         AIF   ('&CODE'(1,1) NE 'F').NOF1
&NAME    START &DATA
         AGO   .ENTRY
.NOF1    ANOP
&NAME    START &P2
         AGO   .ENTRY
.FEHLER  MNOTE *,'SYNTAX VON PARAMETER 2 IST FALSCH ... START 0 WIRD GE-
               NERIERT'
.SETZERO ANOP
&CODE    SETC  'F'''
&DATA    SETC  '00000000'
         AGO   .ZERO
.ENTRY   ANOP
         ENTRY &NAME
         B     16(0,R15) ;        BRANCH AROUND ID
         DC    AL1(11) ;          LENGTH OF IDENTIFIER
         DC    CL11'&NAME' ;      IDENTIFIER
         AIF   (&SHORT).SHORT0
         ORG   *-1
         DC    C'R'     ROOT PHASE
.SHORT0  ANOP
         STM   R14,R12,12(R13) ;  SAVE REGISTERS
         USING &NAME,R3 ;        R3 IST ERSTES BASIS REGISTER
         LR    R3,R15
         LR    R11,R13
         AIF   (&SHORT).SHORT1
         BAL   R13,120(R3)
         AGO   .LONG2
.SHORT1  BAL   R13,112(R3)
.LONG2   ANOP
SAVE&X   DS    18F ;              SAVEAREA
VF&X     DC    &CODE&DATA&APOS DIFFERENZ ZWI. ASSEMBLER UND SPEICHER
PARA&X   DS    F
PICA&X   DS    F
         DC    A(LEVEL-LEVEL)
         ORG   *-4
         AIF   (&SHORT).SHORT2
DATUM    DC    CL8'0' ;           TT.MM.JJ
TEST&X   B     *+10
         DC    X'0700'
         B     REP&X-4
.SHORT2  ANOP
         ST    R13,8(R11) ;       SAVEAREAS
         ST    R11,4(R13) ;                 VERKETTEN
         NOP   *+20
         OI    *-3,X'F0'
         LA    R4,&NAME
         S     R4,VF&X
         ST    R4,VF&X
&AL8     SETA  &P1+4095
&AL8     SETA  &AL8/4096+2
         AIF   (&AL8 LE 3).K
         AIF   (&AL8 LE 15).G
&AL8     SETA  15
.G       ANOP
&AL6     SETA  (&AL8-3)*4+4
         LA    &R&AL8,4095
&AL6     SETA  &AL6-4
&AL9     SETA  3
.J       ANOP
&AL9     SETA  &AL9+1
&AL10    SETA  &AL10+4096
         USING &NAME+&AL10,&AL9 ;    NOCH EIN USING,NACH WUNSCH
         AIF   (&AL9 LT &AL8).J
&AL7     SETA  2
&AL9     SETA  3
.F       ANOP
&AL7     SETA  &AL7+1
&AL9     SETA  &AL9+1
         LA    &R&AL9,1(&R&AL8,&R&AL7) ;      BASISREGISTER LADEN
         AIF   (&AL9 LT &AL8).F
.K       ANOP
         ST    R1,PARA&X
         AIF   (&PRO).NOEQU
&PRO     SETB  1
***********************************************************************
*                                 *** REGISTER EQUATEN ***            *
***********************************************************************
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
FPR0     EQU   0
FPR2     EQU   2
FPR4     EQU   4
FPR6     EQU   6
.NOEQU   ANOP
         AIF   (&SHORT).SHORT3
         NOP   FEHL&X
         OI    *-3,X'F0'
***********************************************************************
*                                 *** DATUM ***                       *
***********************************************************************
         LINK  EP=DATE,PARAM=DATUM
***********************************************************************
*                                 *** JOB-NAME,JOBSTEP-NAME,DATUM *** *
***********************************************************************
         L     R1,16 ;            ADR VON CVT AUS LOC HEX 10
         L     R1,0(R1) ;         ADR VON TCB DW IN R1 LADEN
         L     R1,4(R1) ;         ADR DES LAUFDN. TCB IN R1 LADEN
         L     R1,12(R1) ;        ADR DES TIOT AUS TCB IN R1 LADEN
         MVC   DAT5&X+9(8),0(R1) ;JOB-NAME
         MVC   DAT5&X+30(8),8(R1) JOBSTEP- ODER PROCSTEP-NAME
         MVC   DAT5&X+45(4),LEVEL LEVEL-NR
         MVC   DAT5&X+50(8),DATUM  TAGESDATUM
         CLC   8(4,R1),=C'TEST'     FRAGEN OB TEST ERWUENSCHT IST
         BNE   *+8
         NI    TEST&X+4,X'00' ;   TEST ANFORDERUNG WEICHE
         CLC   8(3,R1),=C'REP'
         BNE   *+8
         NI    REP&X+1,X'0F'
         CONSOR DAT5&X,58
         XC    DAT5&X,DAT5&X
         MVC   DAT5&X.(L'NAME),NAME
         CONSOR DAT5&X,105
         XC    DAT5&X,DAT5&X
         B     FEHL&X
DAT5&X   DC    C'JOB-NAME XXXXXXXX   STEP-NAME          LEVEL XXXX TT.M'
               M.JJ                                               '
.SHORT3  ANOP
FEHL&X   NOP   BAL2&X
         OI    *-3,240
         LOAD  EP=CHECKRT
         CNOP  0,4
         ST    R0,*+8
BAL2&X   BAL   R2,*+8
         DC    F'0'
         L     R2,0(R2)
         SPIE  (2),((1,15))
         ST    R1,PICA&X
         AIF   (&SHORT).SHORT4
         B     TEST&X+4
         NI    *-3,X'0F'
REP&X    B     NREP&X
         OI    *-3,X'F0'
         LINK  EP=REPROUT
NREP&X   EQU   *
.SHORT4  ANOP
         L     R1,PARA&X
***********************************************************************
         EJECT
         MEND
         EJECT
         MACRO
&NAME    RAUF  &R,&WOHIN1
         GBLB  &TRTTAB
         LCLC  &WOHIN
&WOHIN   SETC  '&WOHIN1'
&NAME    ST    &R,FW&SYSNDX
         MVC   F&SYSNDX,FW&SYSNDX
         UNPK  N&SYSNDX,F&SYSNDX
         TR    N&SYSNDX,TRTTAB-240
         MVC   &WOHIN+0(L'N&SYSNDX-1),N&SYSNDX
         B     END&SYSNDX
FW&SYSNDX  DS  F
         DS    CL1
F&SYSNDX DS    0CL5
N&SYSNDX DS    CL9
         AIFB  (&TRTTAB).END
&TRTTAB  SETB  1
         DS    CL240
TRTTAB   DC    X'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'
.END     ANOP
END&SYSNDX EQU *
         MEND
         EJECT
         MACRO
&NAME    VERTEIL &LINECNT=48,&TEXT=,&DCBNAME=,&CODE=M
         LCLA  &LIN,&CC
         LCLC  &X
         LCLB  &FEHL,&TEXTR,&DCBR
&X       SETC  '&SYSNDX'
         AIF   ('&LINECNT' LE '48').LE48
&FEHL    SETB  (1)
         MNOTE 1,'LINECNT MUSS KLEINER 49 SEIN'
.LE48    ANOP
         AIF   ('&DCBNAME' NE '').WITHDCB
&FEHL    SETB  (1)
         MNOTE 2,'OHNE DCBNAME GEHT ES EBEN AUCH NICHT'
.WITHDCB ANOP
         AIF   ('&TEXT' NE '').TEXTJA
&FEHL    SETB  (1)
         MNOTE 3,'TEXT MUSS AUCH ANGEGEBEN WERDEN'
.TEXTJA  ANOP
         AIF   ('&CODE' EQ 'A' OR '&CODE' EQ 'M').CODEOK
         MNOTE 5,'CODE IST FALSCH. M WIRD GENERIERT'
.CODEOK  ANOP
         AIF   (NOT &FEHL).PARAOK
         MNOTE *,'BITTE KORRIGIEREN'
         MEXIT
.PARAOK  ANOP
         AIF   ('&CODE' EQ 'A').A
&CC      SETA  128
         AGO   .OVERA
.A       ANOP
&CC      SETA  192
.OVERA   ANOP
         AIF   ('&TEXT'(1,1) NE '(').NOR1
&TEXTR   SETB  (1)
.NOR1    ANOP
         AIF   ('&DCBNAME'(1,1) NE '(').NOR2
&DCBR    SETB  (1)
.NOR2    ANOP
&LIN     SETA  &LINECNT-5
         CNOP  0,4
&NAME    B     *+12
PARM&X   DC    AL1(&LIN)
         DC    AL3(&TEXT)
         DC    AL1(&CC)
         DC    AL3(&DCBNAME)
         AIF   (NOT &TEXTR).NOR3
         ST    &TEXT(1),PARM&X
         MVI   PARM&X,&LIN
.NOR3    ANOP
         AIF   (NOT &DCBR).NOR4
         ST    &DCBNAME(1),PARM&X+4
         MVI   PARM&X+4,&CC
.NOR4    LINK  EP=XXXAVRTL,PARAM=PARM&X
         MEND
         EJECT
         MACRO
&NAME    IFASMFR &RECTYPE,&T1,&T2
.*A 011300,340700-341060,661534-664230,964400-965757             Y01120
.*C 028800,963900                                                Y01120
.*A 011400,093800-094088,965758-972415                           Y01113
.*A 542800                                                       Y01901
.*A 119420                                                       Y01018
.*C 010800,683600-684599,929300-932300                           Y01018
.*D 126900,862200-883800                                         Y01018
.*C 148500                                                       XM4432
.*A 153500                                                       XM4432
.*C 809100,852300                                                A40791
.*A 232700,232900-233600,296600,296900,808700,808940,809000      A40791
.*A 851900                                                       A40791
.*A 639500,639600                                                A40793
*  THIS IS AN SMF MACRO WHICH BUILDS ANY NUMBER OF SMF RECORDS. THE
* REQUIRED FORMAT IS -
*
*        IFASMFR  &RECTYPE,&T1,&T2
*  NOTE: VALUES FOR &RECTYPE MUST BE ENCLOSED IN PARENS(UNLESS ONLY 1)
*  THE POSSIBLE VALUES FOR &RECTYPE ARE:
*
*        0 - 13                SUBSET1 TYPE RECORDS
*        14,17-21              SUBSET2 TYPE RECORDS
*           TYPE 15 IS A SUBSET 2 RECORD BUT DOES NOT HAVE A UNIQUE
*           DSECT. IF 15 IS SPECIFIED, THE TYPE 14 DSECT IS PRODUCED.
*           14 AND 15 CAN NOT BOTH BE SPECIFIED IN ONE PROGRAM.
*        30-35,40-42           TSO TYPE RECORDS                  Y01018
*        26,43,45,47,48        HASP                              Y01120
*        62,64,68,69           VSAM                              Y01113
*
*  THE POSSIBLE VALUES FOR &T1 OR &T2 ARE:
*
*        SUBSET1, SUBSET2, TSO, ALL
         LCLA  &NUM,&B,&SWK,&SW1
.* &NUM IS SET TO THE NUMBER OF SUBSTRING ITEMS IN THE FIRST PARAMETER
.* AND &B IS USED TO POINT AT EACH SUBSTRING ITEM.
.* &SW1=0 FOR CALLING OUT INDIVIDUAL RECORD TYPES BY NUMBER
.*     =1 FOR SUBSET1,   =2 FOR TSO,   =3 FOR SUBSET2,   =4 FOR ALL
.* &SWK=1 FOR EXAMINING &T1(2ND ARGUMENT)
.*     =2 FOR EXAMINING &T2(3RD ARGUMENT)
.*     =3 FOR ENDING.
         AIF   ('&RECTYPE' EQ '' AND '&T1' EQ '' AND '&T2' EQ '').E1
         AIF   ('&RECTYPE' EQ '').NEXT
&NUM     SETA  N'&RECTYPE
         AGO   .CONTC
.CONTB   ANOP
&NUM     SETA  &NUM-1
.CONTC   ANOP
         AIF   (&NUM LE 0).NEXT
&B       SETA  &B+1
.RTYCHK  AIF   ('&RECTYPE(&B)' EQ '').E3
         AIF   (&RECTYPE(&B) GT 69 OR &RECTYPE(&B) LT 0).E5
         AGO   .CONTA
.E1      ANOP
         SPACE 3
         MNOTE 8,'PARAMETERS OMITTED, PROCESSING TERMINATED'
         MEXIT
.E2      ANOP
         SPACE 3
         MNOTE 8,'&RECTYPE(&B) DUPLICATE RECORD CALL'
         AGO   .CONTB
.E3      ANOP
         SPACE 3
         MNOTE 4,'NULL RECORD TYPE PASSED'
         AGO   .CONTB
.E4      ANOP
         SPACE 3
         MNOTE 8,'&T1,&T2, INVALID COMBINATION OF PARAMETERS'
         MEXIT
.E5      ANOP
         SPACE 3
         MNOTE 4,'&RECTYPE(&B) INVALID RECORD TYPE SPECIFIED'
         AGO   .CONTB
.E6      ANOP
         SPACE 3
         MNOTE 8,'&T1 KEYWORD INVALID'
         AGO   .TKEY
.E7      ANOP
         SPACE 3
         MNOTE 8,'&T2 KEYWORD INVALID'
         MEXIT
.NEXT    ANOP
         AIF   ('&T1' EQ 'ALL' AND '&T2' NE '').E4
         AIF   ('&T2' EQ 'ALL' AND '&T1' NE '').E4
         AIF   ('&T1' EQ '&T2' AND '&T1' NE '').E4
.TKEY    ANOP
&SW1     SETA  0
&SWK     SETA  &SWK+1
         AIF   (&SWK EQ 1).SK1
         AIF   (&SWK EQ 2).SK2
         AIF   (&SWK EQ 3).OUT
.SK1     ANOP
         AIF   ('&T1' EQ '').TKEY
         AIF   ('&T1' EQ 'SUBSET1').SSW1
         AIF   ('&T1' EQ 'TSO').SSW2
         AIF   ('&T1' EQ 'SUBSET2').SSW3
         AIF   ('&T1' EQ 'ALL').SSW4
         AGO   .E6
.SK2     ANOP
         AIF   ('&T2' EQ '').OUT
         AIF   ('&T2' EQ 'SUBSET1').SSW1
         AIF   ('&T2' EQ 'TSO').SSW2
         AIF   ('&T2' EQ 'SUBSET2').SSW3
         AIF   ('&T2' EQ 'ALL').SSW4
         AGO   .E7
.SSW1    ANOP
&SW1     SETA  1
         AGO   .SW1A
.SSW2    ANOP
&SW1     SETA  2
         AGO   .SW1A
.SSW3    ANOP
&SW1     SETA  3
         AGO   .SW1A
.SSW4    ANOP
&SW1     SETA  4
.SW1A    ANOP
         AIF   (&SW1 EQ 3).IFAS014
         AIF   (&SW1 EQ 2).IFAS030
         AGO   .IFAS000
.CONTA   AIF   (&RECTYPE(&B) GE 0 AND &RECTYPE(&B) LE 5).G1
         AIF   (&RECTYPE(&B) GE 6 AND &RECTYPE(&B) LE 13).G2
         AIF   (&RECTYPE(&B) GE 14 AND &RECTYPE(&B) LE 21).G3
         AIF   (&RECTYPE(&B) GE 30 AND &RECTYPE(&B) LE 42).G4
         AIF   (&RECTYPE(&B) EQ 26).IFAS026
         AIF   (&RECTYPE(&B) EQ 43).IFAS043
         AIF   (&RECTYPE(&B) EQ 45).IFAS045
         AIF   (&RECTYPE(&B) EQ 47).IFAS047
         AIF   (&RECTYPE(&B) EQ 48).IFAS048
         AIF   (&RECTYPE(&B) EQ 62).IFAS062
         AIF   (&RECTYPE(&B) EQ 64).IFAS064
         AIF   (&RECTYPE(&B) EQ 68).IFAS068
         AIF   (&RECTYPE(&B) EQ 69).IFAS069
         AGO   .E5
.G1      ANOP
         AIF   ('&T1' EQ 'SUBSET1' OR '&T2' EQ 'SUBSET1').E2
         AIF   ('&T1' EQ 'ALL' OR '&T2' EQ 'ALL').E2
         AIF   (&RECTYPE(&B) EQ 0).IFAS000
         AIF   (&RECTYPE(&B) EQ 1).IFAS001
         AIF   (&RECTYPE(&B) EQ 2).IFAS002
         AIF   (&RECTYPE(&B) EQ 3).IFAS003
         AIF   (&RECTYPE(&B) EQ 4).IFAS004
         AIF   (&RECTYPE(&B) EQ 5).IFAS005
.G2      ANOP
         AIF   ('&T1' EQ 'SUBSET1' OR '&T2' EQ 'SUBSET1').E2
         AIF   ('&T1' EQ 'ALL' OR '&T2' EQ 'ALL').E2
         AIF   (&RECTYPE(&B) EQ 6).IFAS006
         AIF   (&RECTYPE(&B) EQ 7).IFAS007
         AIF   (&RECTYPE(&B) EQ 8).IFAS008
         AIF   (&RECTYPE(&B) EQ 9).IFAS009
         AIF   (&RECTYPE(&B) EQ 10).IFAS010
         AIF   (&RECTYPE(&B) EQ 11).IFAS011
         AIF   (&RECTYPE(&B) EQ 12).IFAS012
         AIF   (&RECTYPE(&B) EQ 13).IFAS013
.G3      ANOP
         AIF   (&RECTYPE(&B) EQ 16).E5
         AIF   ('&T1' EQ 'SUBSET2' OR '&T2' EQ 'SUBSET2').E2
         AIF   ('&T1' EQ 'ALL' OR '&T2' EQ 'ALL').E2
         AIF   (&RECTYPE(&B) EQ 14 OR &RECTYPE(&B) EQ 15).IFAS014
         AIF   (&RECTYPE(&B) EQ 17).IFAS017
         AIF   (&RECTYPE(&B) EQ 18).IFAS018
         AIF   (&RECTYPE(&B) EQ 19).IFAS019
         AIF   (&RECTYPE(&B) EQ 20).IFAS020
         AIF   (&RECTYPE(&B) EQ 21).IFAS021
         AGO   .E5
.G4      ANOP
         AIF   (&RECTYPE(&B) EQ 36).E5
         AIF   (&RECTYPE(&B) EQ 37).E5
         AIF   (&RECTYPE(&B) EQ 38).E5
         AIF   (&RECTYPE(&B) EQ 39).E5
         AIF   ('&T1' EQ 'TSO' OR '&T2' EQ 'TSO').E2
         AIF   ('&T1' EQ 'ALL' OR '&T2' EQ 'ALL').E2
         AIF   (&RECTYPE(&B) EQ 30).IFAS030
         AIF   (&RECTYPE(&B) EQ 31).IFAS031
         AIF   (&RECTYPE(&B) EQ 32).IFAS032
         AIF   (&RECTYPE(&B) EQ 33).IFAS033
         AIF   (&RECTYPE(&B) EQ 34).IFAS034
         AIF   (&RECTYPE(&B) EQ 35).IFAS035
         AIF   (&RECTYPE(&B) EQ 40).IFAS040
         AIF   (&RECTYPE(&B) EQ 41).IFAS041
         AIF   (&RECTYPE(&B) EQ 42).IFAS042
         AGO   .E5
.OUT     MEXIT
.IFAS000 ANOP
         EJECT
*  THIS DSECT DEFINES THE FORMAT FOR RECORD TYPE 0 (IPL RECORD)
*  RECORD LENGTH IS 27 BYTES
*
         DS    0F        ALIGN TO FULL WORD BOUNDARY
SMFRCD0  EQU   *         HEADER SEGMENT
SMF0LEN  DS    BL2'0'    RECORD LENGTH
SMF0SEG  DS    BL2'0'    SEGMENT DESCRIPTOR
SMF0FLG  DC    BL1'0'    HEADER FLAG BYTE
SMF0RTY  DC    BL1'0'    RECORD TYPE 0
SMF0TME  DC    4BL1'0'   TOD, USING FORMAT FROM TIME MACRO W/BIN. INTVL
SMF0DTE  DC    PL4'0000'      DATE IN PACKED DECIMAL FORM: 00YYDDDF
*                             ( F IS A SIGN)
SMF0SID  DC    2CL1' '   SYSTEM IDENTIFICATION
SMF0MOD  DC    2CL1' '   MODEL NO.
SMF0JWT  DC    4BL1'0'   JOB WAIT TIME DEFAULT VALUE IN MINUTES(BINARY)
SMF0BUF  DC    4BL1'0'   SMF BUFFER SIZE IN BYTES(BINARY)
SMF0VST  DC    4BL1'0'   VIRTUAL STORAGE SIZE IN K BLOCKS(BINARY)XM4432
SMF0OPT  DC    BL1'0'    OPTIONS BYTE:
*              BIT0 - SYSTEM & JOB DATA TO BE COLLECTED
*              BIT1 - SYSTEM, JOB, & STEP DATA TO BE COLLECTED
*              BIT2 - EXITS REQUESTED
*              BIT3 - DATA SET ACCOUNTING
*              BIT4 - VOLUME ACCOUNTING
*              BIT5 - RESERVED(WAS ESV IN 14 AND 15)
*              BIT6 - TEMPORARY-DATA-SET SCRATCH RECORDS
*              BIT7 - =0 BACKGROUND JOB; =1 FOREGROUND JOB
SMF0RST  DC    4BL1'0'   REAL STORAGE SIZE IN K BLOCKS(BINARY)   XM4432
         AIF   (&SW1 EQ 0).CONTB
.IFAS001 ANOP
         EJECT
*
* THIS RECORD IS WRITTEN AFTER EVERY IPL AND AT THE FIRST JOB/STEP
* TERMINATION AFTER THE EXPIRATION OF ONE 10 MINUTE INTERVAL.
* RECORD LENGTH  IS  54 BYTES.
*
         DS    0F        ALIGN TO FULL WORD BOUNDARY
SMFRCD1 EQU    *         HEADER SEGMENT
SMF1LEN  DS    BL2'0'    RECORD LENGTH
SMF1SEG  DS    BL2'0'    SEGMENT DESCRIPTOR
SMF1FLG  DC    BL1'0'    HEADER FLAG BYTE
SMF1RTY  DC    BL1'0'    RECORD TYPE 1
SMF1TME  DC    4BL1'0'   TOD, USING FORMAT FROM TIME MACRO W/BIN. INTVL
SMF1DTE  DC    PL4'0000'      DATE IN PACKED DECIMAL FORM: 00YYDDDF
*                             ( F IS A SIGN)
SMF1SID  DC    2CL1' '   SYSTEM IDENTIFICATION
SMF1MOD  DC    2CL1' '   MODEL NO.
SMF1SWT  DC    4BL1'0'       SYSTEM WAIT TIME IN HUNDREDTHS OF SECONDS
*                            COLLECTED DURING EXPIRED 10 MINUTE
*                            INTERVALS SINCE LAST WAIT TIME RECORD
SMF1TEXP DC    4BL1'0'   COLLECTION END TIME
SMF1PGIN DC    4BL1'0'   TOTAL PAGE-INS
SMF1PGOT DC    4BL1'0'   TOTAL PAGE-OUTS
SMF1PGRL DC    4BL1'0'   TOTAL PAGES RECLAIMED
SMF1RGNS DC    4BL1'0'   TOTAL REGIONS SWAPPED (AOS/2 ONLY)
SMF1SPIN DC    4BL1'0'   SWAP PAGE-INS
SMF1SPOT DC    4BL1'0'   SWAP PAGE-OUTS
SMF1RGNM DC    4BL1'0'   REGIONS MIGRATED
SMF1PGM  DC    4BL1'0'   PAGES MIGRATED
         AIF   (&SW1 EQ 0).CONTB
.IFAS002 ANOP
         EJECT
* THIS RECORD IS WRITTEN BY THE SMF DUMP UTILITY PROGRAM AT THE
* BEGINNING OF A DUMP DATA SET. RECORD LENGTH IS 14 BYTES
*
         DS    0F        ALIGN TO FULL WORD BOUNDARY
SMFRCD2  EQU   *         HEADER SEGMENT
SMF2LEN  DS    BL2'0'    RECORD LENGTH
SMF2SEG  DS    BL2'0'    SEGMENT DESCRIPTOR
SMF2FLG  DC    BL1'0'    HEADER FLAG BYTE
SMF2RTY  DC    BL1'0'    RECORD TYPE 2
SMF2TME  DC    4BL1'0'   TOD, USING FORMAT FROM TIME MACRO W/BIN. INTVL
SMF2DTE  DC    PL4'0000'      DATE IN PACKED DECIMAL FORM: 00YYDDDF
*                             ( F IS A SIGN)
SMF2SID  DC    2CL1' '   SYSTEM IDENTIFICATION
SMF2MOD  DC    2CL1' '   MODEL NO.
         AIF   (&SW1 EQ 0).CONTB
.IFAS003 ANOP
         EJECT
* THIS RECORD  IS WRITTEN BY THE SMF DUMP UTILITY PROGRAM AT THE END
* OF A DUMP DATA SET. RECORD LENGTH IS  14 BYTES.
*
         DS    0F        ALIGN TO FULL WORD BOUNDARY
SMFRCD3  EQU   *         HEADER SEGMENT
SMF3LEN  DS    BL2'0'    RECORD LENGTH
SMF3SEG  DS    BL2'0'    SEGMENT DESCRIPTOR
SMF3FLG  DC    BL1'0'    HEADER FLAG BYTE
SMF3RTY  DC    BL1'0'    RECORD TYPE 3
SMF3TME  DC    4BL1'0'   TOD, USING FORMAT FROM TIME MACRO W/BIN. INTVL
SMF3DTE  DC    PL4'0000'      DATE IN PACKED DECIMAL FORM: 00YYDDDF
SMF3SID  DC    2CL1' '   SYSTEM IDENTIFICATION
SMF3MOD  DC    2CL1' '   MODEL NO.
         AIF   (&SW1 EQ 0).CONTB
.IFAS004 ANOP
         EJECT
* THIS RECORD IS WRITTEN AT NORMAL OR ABNORMAL TERMINATION OF A JOB
* STEP.RECORD LENGTH IS VARIABLE.
*
         DS    0F        ALIGN TO FULL WORD BOUNDARY
SMFRCD4  EQU   *         HEADER SEGMENT
SMF4LEN  DS    BL2'0'    RECORD LENGTH
SMF4SEG  DS    BL2'0'    SEGMENT DESCRIPTOR
SMF4FLG  DC    BL1'0'    HEADER FLAG BYTE
SMF4RTY  DC    BL1'0'    RECORD TYPE 4
SMF4TME  DC    4BL1'0'   TOD USING FORMAT FROM TIME MACRO W/BIN. INTVL.
SMF4DTE  DC    PL4'0000' DATE IN PACKED DECIMAL FORM: OOY4DDDF
SMF4SID  DC    2CL1' '   SYSTEM IDENTIFICATION
SMF4MOD  DC    2CL1' '   MODEL NUMBER
SMF4JBN  DC    8CL1' '   JOB NAME
SMF4RST  DC    4BL1'0'   READER START TIME (IN 100THS SECONDS)
SMF4RDS  DC    PL4'0000' READER START DATE
SMF4UIF  DC    8CL1' '   USER IDENTIFICATION FIELD
SMF4STN  DC    BL1'0'    STEP NUMBER
SMF4SIT  DC    4BL1'0'   STEP INITIATION TIME (IN 100THS SECONDS)
SMF4STID DC    PL4'0000' STEP INITIATION DATE (PACKED DECIMAL FORMAT)
SMF4NCI  DC    4BL1'0'   NUMBER OF CARD IMAGES IN DD DATA OR DD  *
*                        DATA SETS
SMF4SCC  DC    2BL1'0'   STEP COMPLETION CODE
SMF4PRTY DC    BL1'0'    PRIORITY AT WHICH STEP WAS DISPATCHED :
*                        ACTUAL PRIORITY=251-(15-USER PRIORITY)*16
SMF4PGMN DC    CL8' '    PROGRAM NAME
SMF4STMN DC    CL8' '    STEP NAME
SMF4RSH0 DC    2BL1'0'   REGION SIZE IN 1K BLKS REQUESTED
         DC    2BL1'0'   RESERVED
SMF4H0ST DC    2BL1'0'   STORAGE USED(VIRT OR REAL-SEE SMF4RIN)
         DC    6BL1'0'   RESERVED
SMF4SPK  DC    1BL1'0'   STORAGE PROTECT KEY                     A40791
SMF4STI  DC    1BL1'0'   STEP TERMINATION INDICATOR
*               BIT0 - RESERVED
*               BIT1 - CANCELLED AT EXIT IEFUJV
*               BIT2 - CANCELLED AT EXIT IEFUJI
*               BIT3 - CANCELLED AT EXIT IEFUSI
*               BIT4 - CANCELLED AT EXIT IEFACTRT
*               BIT5 - RESERVED
*               BIT6 - 0=NORMAL COMPLETION
*                      1=ABEND
*               BIT7 - 1=STEP FLUSHED
         DC    2BL1'0'   RESERVED                                A40791
SMF4AST  DC    4BL1'0'   DEVICE ALLOC START TIME                 A40791
SMF4PPST DC    4BL1'0'   PROBLEM PROGRAM START TIME              A40791
         DC    4BL1'0'   RESERVED
SMF4RIN  DC    2BL1'0'   RECORD INDICATORS
*                         BIT7 =0 STORAGE IS VIRTUAL
*                              =1 STORAGE IS REAL
SMF4RLCT DC    2BL1'0'   OFFSET TO RELOCATE SECTION
SMF4LENN DC    2BL1'0'   LENGTH OF EXCP PORTION OF RECORD
*        FOR EACH DEVICE ASSIGNED TO EACH DATA SET THERE IS AN 8 BYTE
*        ENTRY HAVING THE FOLLOWING FORMAT:
*
SMF4DEVC DC    BL1'0'    DEVICE CLASS
SMF4UTYP DC    BL1'0'    UNIT TYPE
SMF4CUAD DC    2BL1'0'   CHANNEL AND UNIT ADDRESS
SMF4EXCP DC    4BL1'0'   COUNT OF EXCP'S ISSUED FOR THE DEVICE AND
*                        DATA SET
         ORG   SMF4DEVC
SMF4LNTH DC    BL1'0'    TOTAL LENGTH OF CPU AND ACCT. SECTION
SMF4SETM DC    3BL1'0'   STEP EXECUTION TIME (IN 100THS SECONDS)
SMF4NAF  DC    BL1'0'    NUMBER OF ACCOUNTING FIELDS
SMF4ACTF DS    0C        EXEC STATEMENT ACCOUNTING FIELDS(VARIABLE)
*
*        EACH ENTRY FOR AN ACCOUNTING FIELD CONTAINS THE LENGTH OF THE
*        FIELD (1 BYTE,BINARY), FOLLOWED BY THE FIELD(EBCDIC).AN
*        OMITTED FIELD IS REPRESENTED BY A LENGTH INDICATOR OF 0.
*
*        RELOCATE SECTION
SMF4PGIN DS    4BL1'0'   NUMBER OF PAGE-INS
SMF4PGOT DS    4BL1'0'   NUMBER OF PAGE-OUTS
         AIF   (&SW1 EQ 0).CONTB
.IFAS005 ANOP
         EJECT
* THIS RECORD IS WRITTEN AT  NORMAL OR ABNORMAL TERMINATION OF A JOB.
* RECORD LENGTH IS VARIABLE.
*
         DS    0F        ALIGN TO FULL WORD BOUNDARY
SMFRCD5  EQU   *         HEADER SEGMENT
SMF5LEN  DS    BL2'0'    RECORD LENGTH
SMF5SEG  DS    BL2'0'    SEGMENT DESCRIPTOR
SMF5FLG  DC    BL1'0'    HEADER FLAG BYTE
SMF5RTY  DC    BL1'0'    RECORD TYPE 5
SMF5TME  DC    4BL1'0'   TOD USING FORMAT FROM TIME MACRO W/BIN. INTVL.
SMF5DTE  DC    PL4'0000' DATE, PACKED DEC. FORM : OOYYDDDF(F IS A SIGN)
SMF5SID  DC    2CL1' '   SYSTEM IDENTIFICATION
SMF5MOD  DC    2CL1' '   MODEL NUMBER
SMF5JBN  DC    8CL1' '   JOB NAME
SMF5RST  DC    4BL1'0'   READER START TIME FOR JOB (IN 100THS/SECONDS)
SMF5RSD  DC    PL4'0000' READER START DATE,PACKED DECIMAL FORMAT
SMF5UIF  DC    8CL1' '   USER IDENTIFICATION FIELD
SMF5NST  DC    BL1'0'    NUMBER OF STEPS IN THE JOB
SMF5JIT  DC    4BL1'0'   JOB INITIATION TIME (IN 100THS/SECONDS)
SMF5JID  DC    PL4'0000' JOB INITIATION DATE, PACKED DECIMAL FORMAT
SMF5NCI  DC    4BL1'0'   NUMBER OF CARD-IMAGE RECORDS IN DD DATA OR DD*
*                        DATA SETS
SMF5JCC  DC    2BL1'0'   JOB COMPLETION CODE
SMF5JPTY DC    BL1'0'    JOB PRIORITY
SMF5RSTT DC    4BL1'0'   READER STOP TIME FOR JOB (IN 100THS/SECONDS)
SMF5RSTD DC    PL4'0000' READER STOP DATE FOR JOB (IN PACKED DEC.FORM)
SMF5JBTI DC    BL1'0'    JOB TERMINATION INDICATOR
*                        BIT0-RESERVED
*                           1-CANCELLED AT EXIT IEFUJV
*                           2-CANCELLED AT EXIT IEFUJI
*                           3-CANCELLED AT EXIT IEFUSI
*                           4-CANCELLED AT EXIT IEFACTRT
*                           5-RESERVED
*                           6-O=NORMAL COMPLETION
*                             1=ABEND
*                           7-RESERVED
SMF5SMCI DC    5BL1'0'   SYSOUT CLASSES AND MSGCLASS INDICATOR
SMF5CKRE DC    BL1'0'    CHECKPOINT/RESTART INDICATOR
*                        BITO-SYSTEM RESTART
*                         1,2-RESERVED
*                           3-CHECKPOINT TAKEN FOR STEP
*                           4-CHECKPOINT RESTART
*                           5-STEP RESTART
*                         6,7-RESERVED(MUST BE ZERO)
*
SMF5RDCL DC    BL1'0'    READER DEVICE CLASS
SMF5RUTY DC    BL1'0'    READER UNIT TYPE
SMF5JICL DC    CL1' '    JOB INPUT CLASS
SMF5SPK  DC    1BL1'0'   STORAGE PROTECT KEY                     A40791
         DC    19BL1'0'  RESERVED                                A40791
SMF5TLEN DC    BL1'0'    TOTAL LENGTH OF REST OF RECORD
SMF5PRGN DC    20CL1' '  PROGRAMMER'S NAME
SMF5JCPU DC    3BL1'0'   JOB CPU TIME (IN 100THS/SECONDS)
SMF5ACTF DC    BL1'0'    NUMBER OF ACCOUNTING FIELDS
SMF5JSAF DS    0C        JOB STATEMENT ACCOUNTING FIELDS(VARIABLE)
*
*        EACH ENTRY FOR AN ACCOUNTING FIELD CONTAINS THE LENGTH OF THE
*        FIELD(1 BYTE,BINARY),FOLLOWED BY THE FIELD (EBCDIC).AN OMITTED
*        FIELD IS REPRESENTED BY A LENGTH INDICATOR OF 0.
         AIF   (&SW1 EQ 0).CONTB
.IFAS006 ANOP
         EJECT
* THIS RECORD IS WRITTEN WHEN PROCESSING OF A SYSOUT CLASS IS COMPLETED
* FOR A JOB,AND WHEN THE FORM CHANGES WITHIN A CLASS. RECORD LENGTH IS
* 57 BYTES.
*
         DS    0F        ALIGN TO FULL WORD BOUNDARY
SMFRCD6  EQU   *         HEADER SEGMENT
SMF6LEN  DS    BL2'0'    RECORD LENGTH
SMF6SEG  DS    BL2'0'    SEGMENT DESCRIPTOR
SMF6FLG  DC    BL1'0'    HEADER FLAG BYTE
SMF6RTY  DC    BL1'0'    RECORD TYPE 6
SMF6TME  DC    4BL1'0'   TOD, USING FORMAT FROM TIME MACRO W/BIN. INTVL
SMF6DTE  DC    PL4'0000'      DATE IN PACKED DECIMAL FORM: 00YYDDDF
*                             ( F IS A SIGN)
SMF6SID  DC    2CL1' '   SYSTEM IDENTIFICATION
SMF6MOD  DC    2CL1' '   MODEL NO.
SMF6JBN  DC    8CL1' '  JOB NAME
SMF6RST  DC    4BL1'0'  READER START TIME
SMF6RSD  DC    PL4'0000' READER START DATE ; 00YYDDDF
SMF6UIF  DC    CL8' '   USER ID FIELD
SMF6OWC  DC    CL1' '   OUTPUT WRITER CLASS
SMF6WST  DC    4BL1'0'  WRITER START TIME
SMF6WSD  DC    PL4'0000' WRITER START DATE
SMF6NLR  DC    4BL1'0'  NUMBER OF LOGICAL RECORDS FOR THE WRITER
*                       PER FORM NUMBER PER CLASS
SMF6IOE  DC    BL1'0'   IO ERROR INDICATOR:
*                       BITS 0-3 RESERVED
*                       4 - I/O DISCONTINUED(REMOTE OUTPUT ONLY)
*                       5 - INPUT ERROR
*                       6 - OUTPUT ERROR
*                       7 - INPUT ERROR ON SYS1.SYSJOBQE
SMF6NDS  DC    BL1'0'   NUMBER OF DATA SETS PROCESSED  BY THE OUTPUT
*                       WRITER FOR THE JOB
SMF6FMN  DC    4CL1' '  FORM NUMBER
SMF6RV1  DS    BL7      RESERVED                                 Y01120
SMF6JNM  DS    CL4      HASP ASSIGNED JOB NUMBER                 Y01120
SMF6OUT  DS    CL8      HASP LOGICAL OUTPUT DEVICE NAME          Y01120
SMF6FCB  DS    CL4      FCB ID                                   Y01120
SMF6UCS  DS    CL4      UCS ID                                   Y01120
SMF6PGE  DS    BL4      PAGE COUNT                               Y01120
SMF6RTE  DS    BL2      OUTPUT ROUTE CODE 0=LOCAL, N=REMOTE      Y01120
         AIF   (&SW1 EQ 0).CONTB
.IFAS007 ANOP
         EJECT
* THIS RECORD IS WRITTEN WHEN AN SMF DATA SET BECOMES AVAILABLE
* FOLLOWING THE UNAVAILABILITY OF AN SMF DATA SET. RECORD LENGTH IS
* 24 BYTES.
*
         DS    0F        ALIGN TO FULL WORD BOUNDARY
SMFRCD7  EQU   *         HEADER SEGMENT
SMF7LEN  DS    BL2'0'    RECORD LENGTH
SMF7SEG  DS    BL2'0'    SEGMENT DESCRIPTOR
SMF7FLG  DC    BL1'0'    HEADER FLAG BYTE
SMF7RTY  DC    BL1'0'    RECORD TYPE 7
SMF7TME  DC    4BL1'0'   TOD, USING FORMAT FROM TIME MACRO W/BIN. INTVL
SMF7DTE  DC    PL4'0000'      DATE IN PACKED DECIMAL FORM: 00YYDDDF
*                             ( F IS A SIGN)
SMF7SID  DC    2CL1' '   SYSTEM IDENTIFICATION
SMF7MOD  DC    2CL1' '   MODEL NO.
SMF7NRO  DC    2BL1'0'  NUMBER OF SMF RECORDS OMITTED FROM DATA SET
SMF7STM  DC    4BL1'0'  STARTING TIME IN HUNDREDTHS OF SECONDS AT
*                       WHICH NO DATA SET WAS AVAILABLE FOR RECORDING
*                       SMF RECORDS
SMF7STD  DC    PL4'0000' STARTING DATE AT WHICH NO DATA SET WAS
*                       AVAILABLE FOR RECORDING SMF RECORDS
         AIF   (&SW1 EQ 0).CONTB
.IFAS008 ANOP
         EJECT
* THIS RECORD IS WRITTEN AFTER COMPLETION OF IPL, FOLLOWING THE SET
* DATE COMMAND. RECORD LENGTH IS VARIABLE.
*
         DS    0F        ALIGN TO FULL WORD BOUNDARY
SMFRCD8  EQU   *         HEADER SEGMENT
SMF8LEN  DS    BL2'0'    RECORD LENGTH
SMF8SEG  DS    BL2'0'    SEGMENT DESCRIPTOR
SMF8FLG  DC    BL1'0'    HEADER FLAG BYTE
SMF8RTY  DC    BL1'0'    RECORD TYPE 8
SMF8TME  DC    4BL1'0'   TOD USING FORMAT FROM TIME MACRO W/BIN. INTVL.
SMF8DTE  DC    PL4'0000' DATE IN PACKED DEC.FORMAT: OOYYDDDF
SMF8SID  DC    2CL1' '   SYSTEM IDENTIFICATION
SMF8MOD  DC    2CL1' '   MODEL NUMBER
SMF8LENN DC    2BL1'0'   LENGTH OF FIELD
*        FOR EACH DEVICE ONLINE THERE IS A FOUR-BYTE ENTRY HAVING THE
*        FOLLOWING FORMAT:
SMF8IODV DS    0C        RESERVE FOUR BYTE AREA FOR EACH DEVICE
*              BYTE 0 - DEVICE CLASS
*                   1 - UNIT TYPE
*                   2 - CHANNEL ADDRESS
*                   3 - UNIT ADDRESS
         AIF   (&SW1 EQ 0).CONTB
.IFAS009 ANOP
         EJECT
* THIS RECORD IS WRITTEN WHEN A VARY ONLINE COMMAND IS PROCESSED.
* RECORD LENGTH IS VARIABLE.
*
         DS    0F        ALIGN TO FULL WORD BOUNDARY
SMFRCD9  EQU   *         HEADER SEGMENT
SMF9LEN  DS    BL2'0'    RECORD LENGTH
SMF9SEG  DS    BL2'0'    SEGMENT DESCRIPTOR
SMF9FLG  DC    BL1'0'    HEADER FLAG BYTE
SMF9RTY  DC    BL1'0'    RECORD TYPE 9
SMF9TME  DC    4BL1'0'   TOD USING FORMAT FROM TIME MACRO W/BIN. INTVL.
SMF9DTE  DC    PL4'0000' DATE IN PACKED DEC. FORM: OOYYDDDF
SMF9SID  DC    2CL1' '   SYSTEM IDENTIFICATION
SMF9MOD  DC    2CL1' '   MODEL NUMBER
SMF9LENN DC    2BL1'0'   LENGTH OF THE FIELD
SMF9DVAD DS    0C        DEVICES BEING ADDED TO THE I/O CONFIGURATION
*                        (VARIABLE,BINARY)
*        FOR EACH DEVICE BEING ADDED THERE IS A FOUR BYTE ENTRY HAVING
*        THE FOLLOWING FORMAT:
*                        BYTE 0-DEVICE CLASS
*                             1-UNIT TYPE
*                             2-CHANNEL ADDRESS
*                             3-UNIT ADDRESS
* SEE SMF MANUAL FOR FORMAT OF ADDING CPUS, CHANNELS, OR STORAGE BOXES
         AIF   (&SW1 EQ 0).CONTB
.IFAS010 ANOP
         EJECT
* THIS RECORD IS WRITTEN AFTER SUCCESSFUL ALLOCATION. RECORD LENGTH
* IS VARIABLE.
*
         DS    0F        ALIGN TO FULL WORD BOUNDARY
SMFRCD10 EQU   *         HEADER SEGMENT
SMF10LEN DS    BL2'0'    RECORD LENGTH
SMF10SEG DS    BL2'0'    SEGMENT DESCRIPTOR
SMF10FLG DC    BL1'0'    HEADER FLAG BYTE
SMF10RTY DC    BL1'0'    RECORD TYPE 10
SMF10TME DC    4BL1'0'   TOD USING FORMAT FROM TIME MACRO W/BIN. INTVL.
SMF10DTE DC    PL4'0000' DATE IN PACKED DEC. FORM: OOYYDDDF
SMF10SID DC    2CL1' '   SYSTEM IDENTIFICATION
SMF10MOD DC    2CL1' '   MODEL NUMBER
SMF10JBN DC    8CL1' '   JOB NAME
SMF10RST DC    4BL1'0'   READER START TIME
SMF10RSD DC    PL4'0000' READER START DATE
SMF10UIF DC    8CL1' '   USER  IDENTIFICATION FIELD
SMF10LN  DC    2BL1'0'   LENGTH OF THE FIELD
SMF10DEV DS    0C        DEVICES BEING MADE AVAILABLE (VARIABLE)
*
*FOR EACH DEVICE THERE IS A   4 -BYTE ENTRY HAVING THE FOLLOWING FORMAT
*                        BYTE 0-DEVICE CLASS
*                             1-UNIT TYPE
*                             2-CHANNEL ADDRESS
*                             3-UNIT ADDRESS
         AIF   (&SW1 EQ 0).CONTB
.IFAS011 ANOP
         EJECT
* THIS RECORD IS WRITTEN WHEN A VARY OFFLINE COMMAND IS PROCESSED.
* RECORD LENGTH IS VARIABLE.
*
         DS    0F        ALIGN TO FULL WORD BOUNDARY
SMFRCD11 EQU   *         HEADER SEGMENT
SMF11LEN DS    BL2'0'    RECORD LENGTH
SMF11SEG DS    BL2'0'    SEGMENT DESCRIPTOR
SMF11FLG DC    BL1'0'    HEADER FLAG BYTE
SMF11RTY DC    BL1'0'    RECORD TYPE 11
SMF11TME DC    4BL1'0'   TOD USING FORMAT FROM TIME MACRO W/BIN. INTVL.
SMF11DTE DC    PL4'0000' DATE IN PACKED DEC. FORM: OOYYDDDF
SMF11SID DC    2CL1' '   SYSTEM IDENTIFICATION
SMF11MOD DC    2CL1' '   MODEL NUMBER
SMF11LN  DC    2BL1'0'   LENGTH OF THE FIELD
SMF11DEV DS    0C        DEVICES BEING REMOVED FROM I/O CONFIGURATION
*
* FOR EACH DEVICE BEING REMOVED, THERE IS A 4-BYTE ENTRY HAVING THE
* FOLLOWING FORMAT:
*              BYTE O-DEVICE CLASS
*                   1-UNIT TYPE
*                   2-CHANNEL ADDRESS
*                   3-UNIT ADDRESS
* SEE SMF MANUAL FOR FORMAT OF REMOVING CPU, CHANNEL OR STORAGE BOX
         AIF   (&SW1 EQ 0).CONTB
.IFAS012 ANOP
         EJECT
* THIS RECORD IS WRITTEN WHEN THE HALT COMMAND IS PROCESSED. RECORD
* LENGTH IS 54 BYTES.
         DS    0F        ALIGN TO FULL WORD BOUNDARY
SMFRCD12 EQU   *         HEADER SEGMENT
SMF12LEN DS    BL2'0'    RECORD LENGTH
SMF12SEG DS    BL2'0'    SEGMENT DESCRIPTOR
SMF12FLG DC    BL1'0'    HEADER FLAG BYTE
SMF12RTY DC    BL1'0'    RECORD TYPE 12
SMF12TME DC    4BL1'0'   TOD, USING FORMAT FROM TIME MACRO W/BIN. INTVL
SMF12DTE DC    PL4'0000'      DATE IN PACKED DECIMAL FORM: 00YYDDDF
*                             ( F IS A SIGN)
SMF12SID DC    2CL1' '   SYSTEM IDENTIFICATION
SMF12MOD DC    2CL1' '   MODEL NO.
SMF12SWT DC    4BL1'0'   SYSTEM WAIT TIME IN HUNDREDTHS OF SECONDS
*                        SINCE LAST TYPE1 RECORD
SMF12TEX DC    4BL1'0'   COLLECT END TIME
SMF12PGI DC    4BL1'0'   TOTAL PAGE-INS
SMF12PGO DC    4BL1'0'   TOTAL PAGE-OUTS
SMF12PGR DC    4BL1'0'   TOTAL PAGES RECLAIMED
SMF12RGS DC    4BL1'0'   TOTAL REGION SWAPED (AOS/2 ONLY)
SMF12SIN DC    4BL1'0'   SWAP PAGE-INS
SMF12SOT DC    4BL1'0'   SWAP PAGE-OUTS
SMF12RGM DC    4BL1'0'   REGIONS MIGRATED
SMF12PGM DC    4BL1'0'   PAGES MIGRATED
         AIF   (&SW1 EQ 0).CONTB
.IFAS013 ANOP
         EJECT
* THIS RECORD IS WRITTEN WHEN DYNAMIC STORAGE CONFIGURATION TAKES PLACE
* IN OPTION 1. RECORD LENGTH IS VARIABLE
         DS    0F        ALIGN TO FULL WORD BOUNDRY
SMFRCD13 EQU   *         HEADER SEGMENT
SMF13LEN DS    BL2'0'    RECORD LENGTH
SMF13SEG DS    BL2'0'    SEGMENT DESCRIPTOR
SMF13FLG DC    BL1'0'    HEADER FLAG BYTE
SMF13RTY DC    BL1'0'    RECORD TYPE 13
SMF13TME DC    4BL1'0'   TOD, USING FORMAT FROM TIME MACRO W/BIN. INTVL
SMF13DTE DC    PL4'0000' DATE IN PACKED DECIMAL FORM: 00YYDDDF
*                        ( F IS A SIGN )
SMF13SID DC    2CL1' '   SYSTEM ID
SMF13MOD DC    2CL1' '   MODEL NO.
SMF13LTH DC    2BL1'0'   LENGTH OF PARTITION SECTION
* THE FOLLOWING 22 BYTE SECTION IS PRODUCED FOR EACH PARTITION ACTIVE
* WHEN DYNAMIC STORAGE CONFIGURATION TOOK PLACE.
SMF13PN  DC    BL1'0'    PARTITION NUMBER
SMF13SH0 DC    2BL1'0'   HEIRARCHY 0 STORAGE
         DC    2BL1'0'   RESERVED
SMF13NJC DC    BL1'0'    NO OF JOB CLASSES
SMF13JC  DC    16CL1' '  JOB CLASSES FOR THIS PARTITION
         ORG   SMF13PN
         AIF   (&SW1 EQ 0).CONTB
         AIF   (&SW1 LT 4).TKEY
.IFAS014 ANOP
         EJECT
* RECORD TYPE: 14- DATA SET OPENED FOR INPUT/RDBACK
*              15-DATA SET OPENED FOR OUTPUT/INOUT/OUTIN/UPDAT
         DS    0F        ALIGN TO FULL WORD BOUNDARY
SMF14HDR EQU   *         HEADER SEGMENT FOR RECORD TYPE 14/15
SMF14LEN DS    BL2'0'    RECORD LENGTH
SMF14SEG DS    BL2'0'    SEGMENT DESCRIPTOR
SMF14FLG DS    BL1'0'    HEADER FLAG BYTE
SMF14RTY DS    BL1'0'    RECORD TYPE 14
SMF14TME DS    BL4'0'    TOD, USING TIME MACRO W/BIN. INTVL.
SMF14DTE DS    PL4'0000' DATE, PACKED/DEC FORM; 00YYDDDF
SMF14SID DS    CL2' '    SYSTEM ID
SMF14MOD DS    CL2' '    MODEL NO.
SMF14JBN DS    CL8' '    JOB NAME
SMF14RST DS    BL4'0'    READER START TIME
SMF14RSD DS    PL4'0000' READER START DATE, PK/DEC FORM: 00YYDDDF
SMF14UID DS    CL8' '    USERID
SMF14RIN DS    BL2'0'    RECORD INDICATORS:
SMF14RV0 EQU   128       RESERVED
SMF14EOV EQU   64        RECORD WRITTEN BY EOV
SMF14DAD EQU   32        DASD DEVICE
SMF14TDS EQU   16        TEMPORARY DATA SET
SMF14DDA EQU   8         DCBDSORG = DA
SMF14IS  EQU   4         DCBDSORG = IS
SMF14JIS EQU   2         JFCDSORG = IS
*        BITS 7 - 15     RESERVED
SMF14SDC DS    BL1'0'    SIZE OF DCB/DEB SEGMENT
SMF14NUC DS    BL1'0'    NO. UCB SEGMENTS
SMF14SUC DS    BL1'0'    SIZE OF EACH UCB SEGMENT
SMF14SET DS    BL1'0'    SIZE OF EXTENSION SEGMENT
SMF14RV1 DS    BL4'0'    RESERVED
SMFTIOT  EQU   *         TIOT SEGMENT (FROM DD ENTRY)
SMFTIOE1 DS    BL1'0'    TIOELNGH
SMFTIOE2 DS    BL1'0'    TIOESSTA
SMFTIOE3 DS    BL1'0'    TIOEWTCT
SMFTIOE4 DS    BL1'0'    TIOELINK
SMFTIOE5 DS    BL8'0'    TIOEDDNM
SMFTIOE6 DS    BL3'0'    TIOEJFCB
SMFTIOE7 DS    BL1'0'    TIOESTTC
*
SMFJFCB1 DS    XL176'0'  JFCB SEGMENT (ENTIRE JFCB)
*
SMFDCBDE EQU   *         DCB/DEB SEGMENT (TAPE AND DASD)
SMFDCBOR DS    BL2'0'    DCBDSORG
SMFDCBRF DS    BL1'0'    DCBRECFM
SMFDCBMF DS    BL2'0'    DCBMACRF
SMFDCBFL DS    BL1'0'    DCBOFLGS
SMFDCBOP DS    BL1'0'    DCBOPTCD
SMF14RV2 DS    BL1'0'    RESERVED
SMFDEBFL DS    BL1'0'    DEBOFLGS
SMFDEBOP DS    BL1'0'    DEBOPATB
SMFDEBVL DS    BL2'0'    DEBVOLSQ
SMFTDDEX EQU   *         TAPE DCB/DEB EXTENSION
SMFDCBBL DS    BL4'0'    DCBBLKCT
SMFDSSNO DS    BL6'0'    DATA SET SERIAL NUMBER
SMF14RV3 DS    BL2'0'    RESERVED
         ORG   SMFTDDEX
SMF14NTU DS    BL4'0'    NUMBER OF TRACKS USED(LAST TTR-FROM DCBFDAD)
SMF14NTR DS    BL4'0'    NUMBER OF TRACKS RELEASED BY DADSM RELSE RTN
SMF14NER DS    BL1'0'    NUMBER OF EXTENTS RELEASED
SMF14RV4 DS    BL3'0'    RESERVED
SMF14UCB EQU   *         UCB SEGMENT(ONE FOR EACH UCB FOR THE DATA SET)
SMFUCBCH DS    BL1'0'    UCBCHA
SMFUCBUA DS    BL1'0'    UCBUA
SMFSRTEV DS    BL6'0'    SRTEVOLI
SMFUCBTY DS    BL4'0'    UCBTYP
SMFSRTES DS    BL1'0'    SRTESTAB
SMF14NEX DS    BL1'0'    NUMBER EXTENTS
SMF14RV5 DS    BL2'0'    RESERVED
SMFEXCP  DS    BL4'0'    EXCP COUNT
SMFTAPEX EQU   *         SMF TAPE EXTENSION
*        THIS SECTION DESCRIBES THE TAPE EXTENSION SEGMENT
SMFSRTEF DS    BL2'0'    SRTEFSCT
SMFSRTEQ DS    BL2'0'    SRTEFSEQ
         ORG   SMFTAPEX
*        THIS SECTION DESCRIBES THE DASD EXTENSION SEGMENT
SMF14NTA DS    BL4'0'    NUMBER TRACKS ALLOCATED
SMF14UCE EQU   *         UCB SEGMENT END                         Y01901
         ORG   SMF14UCB
*
SMFISAMX EQU   *         ISAM EXTENSION SEG.(FOR DCBDSORG = IS)
SMF14RV6 DS    BL2'0'    RESERVED
SMFDCBMA DS    BL1'0'    DCBMAC
SMFDCBNL DS    BL1'0'    DCBNLEV
SMFDCBR3 DS    BL4'0'    DCBRORG3
SMFDCBNR DS    BL4'0'    DCBNREC
SMFDCBR2 DS    BL2'0'    DCBRORG2
SMFDCBNO DS    BL2'0'    DCBNOREC
SMFDCBR1 DS    BL2'0'    DCBRORG1
SMF14RV7 DS    BL1'0'    RESERVED
SMFDEBNI DS    BL1'0'    DEBNIEE
SMFDEBNP DS    BL1'0'    DEBNPEE
SMFDEBNO DS    BL1'0'    DEBNOEE
SMFNCYLS DS    BL2'0'    # CYL'S IN INDEPENDENT INDEX AREA
SMFNPCYL DS    BL2'0'    NUMBER OF CYL'S IN PRIME AREA
SMFNOCYL DS    BL2'0'    NUMBER OF CYL'S IN INDEPENDENT OVFL AREA
         ORG   SMFISAMX
         AIF   (&SW1 EQ 0).CONTB
.IFAS017 ANOP
         EJECT
         DS    0F        ALIGN TO FULL WORD BOUNDARY
SMF17HDR EQU   *         HEADER SEGMENT FOR RECORD TYPE17(SCRATCH)
SMF17LEN DS    BL2'0'    RECORD LENGTH
SMF17SEG DS    BL2'0'    SEGMENT DESCRIPTOR
SMF17FLG DS    BL1'0'    HEADER FLAG BYTE
SMF17RTY DS    BL1'0'    RECORD TYPE 17
SMF17TME DS    BL4'0'    TOD, USING TIME MACRO W/BIN. INTVL.
SMF17DTE DS    PL4'0000' DATE, PACKED/DEC FORM; 00YYDDDF
SMF17SID DS    CL2' '    SYSTEM ID
SMF17MOD DS    CL2' '    MODEL NO.
SMF17JBN DS    CL8' '    JOB NAME
SMF17RST DS    BL4'0'    READER START TIME
SMF17RSD DS    PL4'0000' READER START DATE, PK/DEC FORM: 00YYDDDF
SMF17UID DS    CL8' '    USERID
SMF17RIN DS    BL2'0'    RECORD INDICATORS: ALL BITS RESERVED(0)
SMF17DSN DS    CL44' '   DSNAME
SMF17RV1 DS    BL3'0'    RESERVED
SMF17NVL DS    BL1'0'    N, # VOL SERS
* VOLUME SERIAL ENTRY (ONE FOR EACH VOLUME)
SMF17RV2 DS    BL2'0'    RESERVED
SMF17FVL DS    XL6'00'   FIRST VOL SER # (SRTEVOLI)
SMF17LNV EQU   *-SMF17RV2    LENGTH OF VOL SER ENTRY
         ORG   SMF17RV2
         AIF   (&SW1 EQ 0).CONTB
.IFAS018 ANOP
         EJECT
         DS    0F        ALIGN TO FULL WORD BOUNDARY
SMF18HDR EQU   *         HEADER SEGMENT FOR RECORD TYPE18(RENAME)
SMF18LEN DS    BL2'0'    RECORD LENGTH
SMF18SEG DS    BL2'0'    SEGMENT DESCRIPTOR
SMF18FLG DS    BL1'0'    HEADER FLAG BYTE
SMF18RTY DS    BL1'0'    RECORD TYPE 18
SMF18TME DS    BL4'0'    TOD, USING TIME MACRO W/BIN. INTVL.
SMF18DTE DS    PL4'0000' DATE, PACKED/DEC FORM; 00YYDDDF
SMF18SID DS    CL2' '    SYSTEM ID
SMF18MOD DS    CL2' '    MODEL NO.
SMF18JBN DS    CL8' '    JOB NAME
SMF18RST DS    BL4'0'    READER START TIME
SMF18RSD DS    PL4'0000' READER START DATE, PK/DEC FORM: 00YYDDDF
SMF18UID DS    CL8' '    USERID
SMF18RIN DS    BL2'0'    RECORD INDICATORS: ALL BITS RESERVED(0)
SMF18ODS DS    CL44' '   OLD DSNAME
SMF18NDS DS    CL44' '   NEW DSNAME
SMF18RV1 DS    BL3'0'    RESERVED
SMF18NVL DS    BL1'0'    N, THE # VOL SERS
* VOLUME SERIAL ENTRY (ONE FOR EACH ENTRY)
SMF18RV2 DS    BL2'0'    RESERVED
SMF18FVL DS    CL6' '    FIRST VOL SER # (SRTEVOLI)
SMF18LNV EQU   *-SMF18RV2    LENGTH OF VOL SER ENTRY
         ORG   SMF18RV2
         AIF   (&SW1 EQ 0).CONTB
.IFAS019 ANOP
         EJECT
         DS    0F        ALIGN TO FULL WORD BOUNDARY
SMF19HDR EQU   *         HEADER SEGMENT FOR RECORD TYPE19(LSPACE)
SMF19LEN DS    BL2'0'    RECORD LENGTH
SMF19SEG DS    BL2'0'    SEGMENT DESCRIPTOR
SMF19FLG DS    BL1'0'    HEADER FLAG BYTE
SMF19RTY DS    BL1'0'    RECORD TYPE 19
SMF19TME DS    BL4'0'    TOD, USING TIME MACRO W/BIN. INTVL.
SMF19DTE DS    PL4'0000' DATE, PK/DEC. FORM: 00YYDDDF
SMF19SID DS    CL2' '    SYSTEM IDENTIFICATION
SMF19MOD DS    CL2' '    MODEL NUMBER
SMF19RV1 DS    BL2'0'    RESERVED
SMF19VOL DS    CL6' '    VOLUME SERIAL #
SMF19OID DS    CL10' '   OWNER ID
SMF19DEV DS    BL4'0'    DEVICE TYPE
SMF19VTC DS    BL5'0'    VTOC ADDRESS
SMF19VTI DS    BL1'0'    DS4VTOCI
SMF19NDS DS    BL2'0'    # DSCB'S
SMF19DSR DS    BL2'0'    # FORMAT0 DSCB'S
SMF19NAT DS    BL2'0'    # UNUSED ALTERNATE TRACKS
SMF19SPC DS    BL4'0'    TOTAL # UNALLOCATED CYL'S AND TRKS
SMF19LEX DS    BL4'0'    # CYL'S AND TRKS IN LARGEST UNALLOCATED EXT.
SMF19NUE DS    BL2'0'    # UNALLOCATED EXTENTS
SMF19RV2 DS    BL2'0'    RESERVED
SMF19CUU DS    BL2'0'    CHANNEL AND UNIT ADDRESS                A40793
SMF19IND DS    BL2'0'    DASD MODULE ID OR DRIVE NUMBER          A40793
*                        INDICATING PHYSICAL IDENTITY OF DEVICES
*                        HAVING MOVEABLE ADDRESS PLUGS
         AIF   (&SW1 EQ 0).CONTB
.IFAS020 ANOP
         EJECT
         DS    0F        ALIGN TO FULL WORD BOUNDARY
SMF20HDR EQU   *  HEADER SEGMENT FOR RECORD TYPE20(JOB COMMENCEMENT)
SMF20LEN DS    BL2'0'    RECORD LENGTH
SMF20SEG DS    BL2'0'    SEGMENT DESCRIPTOR
SMF20FLG DS    BL1'0'    HEADER FLAG BYTE
SMF20RTY DS    BL1'0'    RECORD TYPE 20
SMF20TME DS    BL4'0'    TOD, USING TIME MACRO W/BIN. INTVL.
SMF20DTE DS    PL4'0000' DATE, PACKED/DEC FORM; 00YYDDDF
SMF20SID DS    CL2' '    SYSTEM ID
SMF20MOD DS    CL2' '    MODEL NO.
SMF20JBN DS    CL8' '    JOB NAME
SMF20RST DS    BL4'0'    READER START TIME
SMF20RSD DS    PL4'0000' READER START DATE, PK/DEC FORM: 00YYDDDF
SMF20UID DS    CL8' '    USERID
SMF20RIN DS    BL2'0'    RECORD INDICATORS: ALL BITS RESERVED(0)
SMF20PGM DS    CL20' '   PROGRAMMERS NAME
SMF20NAF DS    BL1'0'    NO. ACCOUNTING FIELDS
SMF20ACT EQU   *         ACCOUNTING FIELDS
         AIF   (&SW1 EQ 0).CONTB
.IFAS021 ANOP
         EJECT
* THIS RECORD IS WRITTEN BY THE ERROR STATISTICS BY VOLUME OPTION
* WHENEVER A VOLUME IS DISMOUNTED.
* LENGTH IS 44 BYTES.
         DS    0F        ALIGN TO FULL WORD BOUNDRY
SMF21HDR EQU   *         HEADER SEGMENT FOR RECORD 21 (ESV)
SMF21LEN DS    BL2'0'    RECORD LENGTH
SMF21SEG DS    BL2'0'    SEGMENT DESCRIPTOR
SMF21FLG DS    BL1'0'    HEADER FLAG BYTE
SMF21RTY DS    BL1'0'    RECORD TYPE 21
SMF21TME DS    BL4'0'    TOD, USING TIME MACRO W/BIN. INTVL.
SMF21DTE DS    PL4'0000' DATE, PACKED/DEC FORM: 00YYDDDF
SMF21SID DS    CL2' '    SYSTEM ID
SMF21MOD DS    CL2' '    MODEL NO.
SMF21LGH DS    2BL1'0'   LENGTH OF DATA PORTION
SMF21VOL DS    6CL1' '   VOL SERIAL
SMF21CA  DS    2BL1'0'   CHANNEL ADDRESS
SMF21UCB DS    4BL1'0'   UCB TYPE CODE
SMF21TR  DS    BL1'0'    TEMPERARY READ ERRORS
SMF21TW  DS    BL1'0'    TEMPERARY WRITE ERRORS
SMF21SIO DS    2BL1'0'   NO OF START I/O
SMF21PR  DS    BL1'0'    PERMANEMT READ ERRORS
SMF21PW  DS    BL1'0'    PERMANENT WRITE ERRORS
SMF21NB  DS    BL1'0'    NOISE BLOCKS
SMF21ERG DS    2BL1'0'   ERASE GAPS
SMF21CLN DS    2BL1'0'   CLEANER ACTIONS
SMF21DEN DS    BL1'0'    TAPE DENSITY
SMF21BLS DS    2BL1'0'   BLOCK SIZE
SMF21RV0 DS    2BL1'0'   RESERVED
         AIF   (&SW1 EQ 0).CONTB
         AIF   (&SW1 LT 4).TKEY
.IFAS026 ANOP                                                    Y01120
         EJECT                                                   Y01120
* THIS RECORD IS WRITTEN WHEN A JOB IS READY TO BE PURGED FROM   Y01120
* THE SYSTEM. RECORD LENGTH IS 224 BYTES NOW BUT EXTENDABLE.     Y01120
         DS    0F       ALIGN TO FULL WORD BOUNDRY               Y01120
SMFRCD26 EQU   *        HEADER SEGMENT                           Y01120
SMF26LEN DS    BL2      RECORD LENGTH                            Y01120
SMF26SEG DS    BL2      SEGMENT DESCRIPTOR                       Y01120
SMF26FLG DS    BL1      HEADER FLAG BYTE                         Y01120
SMF26RTY DS    BL1      RECORD TYPE 26                           Y01120
SMF26TME DS    BL4      TOD FROM TIME MACRO BINARY               Y01120
SMF26DTE DS    PL4      DATE FROM TIME MACRO                     Y01120
SMF26SID DS    CL2      SYSTEM ID                                Y01120
SMF26MOD DS    CL2      MODEL NUMBER                             Y01120
SMF26JBN DS    CL8      JOB NAME FROM JMR                        Y01120
SMF26RST DS    BL4      READER START TIME                        Y01120
SMF26RSD DS    PL4      READER START DATE                        Y01120
SMF26UIF DS    CL8      USER IDENTIFICATION FIELD                Y01120
SMF26RSV DS    BL4      RESV                                     Y01120
SMF26SBS DS    BL2      SUBSYSTEM GENERATING ID(HASP-2)          Y01120
SMF26IND DS    BL2      INDICATORS                               Y01120
*                       X'8000' GENERAL SECTION PRESENT          Y01120
*                       X'4000' EVENT SECTION PRESENT            Y01120
*                       X'2000' ACTUALS SECTION PRESENT          Y01120
* BEGINNING OF GENERAL SECTION                                   Y01120
SMF26LN1 DS    BL2      LGTH OF THIS SECTION(INCLUDING SELF-86)  Y01120
SMF26RV1 DS    CL3      RESV                                     Y01120
SMF26INF DS    BL1      JOB INFORMATION                          Y01120
SMF26JNM DS    CL4      HASP ASSIGNED JOB #                      Y01120
SMF26RV0 DS    CL8      RESV                                     Y01120
SMF26NAM DS    CL20     PROGRAMMER'S NAME FROM JOB CARD          Y01120
SMF26MSG DS    CL1      MESSAGE CLASS FROM JOB CARD              Y01120
SMF26CLS DS    CL1      JOB CLASS FROM JOB CARD                  Y01120
SMF26XPR DS    BL2      HASP EXECUTION SELECTION PRIORITY        Y01120
SMF26OPR DS    BL2      HASP OUTPUT SELECTION PRIORITY           Y01120
SMF26LOC DS    BL2      INPUT ROUTE CODE 0=LOCAL, N=REMOTE       Y01120
SMF26DEV DS    CL8      HASP LOGICAL DEVICE NAME                 Y01120
SMF26ACT DS    CL4      PROGRAMMER'S ACCOUNTING #                Y01120
SMF26ROM DS    CL4      PROGRAMMER'S ROOM #                      Y01120
SMF26XTM DS    BL4      ESTIMATED EXECUTION TIME                 Y01120
SMF26ELN DS    BL4      ESTIMATED OUTPUT LINES                   Y01120
SMF26EPU DS    BL4      ESTIMATED OUTPUT PUNCHED CARDS           Y01120
SMF26FRM DS    CL4      DEFAULT OUTPUT FORM #                    Y01120
SMF26CYP DS    BL2      PRINT COPY COUNT IF FOR ALL OF JOB       Y01120
SMF26LIN DS    BL2      LINES PER PAGE                           Y01120
SMF26PRR DS    BL2      PRINT ROUTE CODE 0=LOCAL, N=REMOTE       Y01120
SMF26PUR DS    BL2      PUNCH ROUTE CODE 0=LOCAL, N=REMOTE       Y01120
* BEGINNING OF EVENT SECTION                                     Y01120
SMF26LN2 DS    BL2      LGTH OF THIS SECTION(INCLUDING SELF-60)  Y01120
SMF26RV2 DS    CL2      RESV                                     Y01120
SMF26RPT DS    BL4      READER STOP TIME                         Y01120
SMF26RPD DS    PL4      READER STOP DATE                         Y01120
SMF26RV3 DS    BL16     RESERVED                                 Y01120
SMF26XST DS    BL4      EXECUTION START TIME                     Y01120
SMF26XSD DS    PL4      EXECUTION START DATE                     Y01120
SMF26XPT DS    BL4      EXECUTION STOP TIME                      Y01120
SMF26XPD DS    PL4      EXECUTION STOP DATE                      Y01120
SMF26OST DS    BL4      OUTPUT PROCESSOR START TIME              Y01120
SMF26OSD DS    PL4      OUTPUT PROCESSOR START DATE              Y01120
SMF26OPT DS    BL4      OUTPUT PROCESSOR STOP TIME               Y01120
SMF26OPD DS    PL4      OUTPUT PROCESSOR STOP DATE               Y01120
* BEGINNING OF ACTUALS SECTION                                   Y01120
SMF26LN3 DS    BL2      LGTH OF THIS SECTION(INCLUDING SELF-32)  Y01120
SMF26RV4 DS    CL2      RESV                                     Y01120
SMF26ICD DS    BL4      # OF INPUT CARDS (JCL AND DATA)          Y01120
SMF26XLN DS    BL4      OUTPUT LINES GENERATED TO SPOOL          Y01120
SMF26XPU DS    BL4      OUTPUT PUNCH CARDS GENERATED TO SPOOL    Y01120
SMF26RV5 DS    CL4      RESV                                     Y01120
SMF26PLN DS    BL4      # OF LINES PRINTED BY SUBSYSTEM          Y01120
SMF26PPG DS    BL4      # OF PAGES PRINTED BY SUBSYSTEM          Y01120
SMF26PUC DS    BL4      # OF CARDS PUNCHED BY SUBSYSTEM          Y01120
         AIF   (&SW1 EQ 0).CONTB                                 Y01120
.IFAS030 ANOP
         EJECT
         DS    0F        ALIGN TO FULL WORD BOUNDARY
TSTSMF   EQU   *                   SMF START TS RECORD FORMAT
TSTRLEN  DS    BL2'0'    RECORD LENGTH
TSTRSEG  DS    BL2'0'    SEGMENT DESCRIPTOR
TSTRFLG  DC    BL1'0'              HEADER FLAG BYTE
TSTRCDTY DC    BL1'0'              RECORD TYPE  (30 DECIMAL)
TSTRCDTS DC    4BL1'0'             TIME STAMP  TOD  100THS SECS
TSTRCDTE DC    PL4'0000'                       DATE 00YYDDDF
TSTCPUID DC    4CL1' '             CPU IDENTIFICATION (SYSTEM, MODEL)
TSTSPROC DC    8CL1' '             TS SHARING INIT PROC NAME
TSTID    DC    8CL1' '             TS SHARING TASK IDENTIFIER
TSTMBR   DC    8CL1' '             MEMBER NAME IN PARMLIB
TSTSMFOP DC    BL1'0'              SMF FOREGROUND OPTIONS:
*                       BIT0 - SYSTEM AND JOB DATA REQUESTED
*                       BIT1 - SYSTEM, JOB, AND STEP DATA REQUESTED
*                       BIT2 - EXITS REQUESTED
*                       BIT3 - DATA-SET ACCOUNTING
*                       BIT4 - VOLUME ACCOUNTING
*                       BIT5 - RESERVED
*                       BIT6 - TEMPORARY DATA SET SCRATCH RECORDS
*                       BIT7 - ALWAYS 1
TSTNRGNF DC    BL1'0'              MAX NUMBER TS REGIONS
TSTTSC   DC    2BL1'0'             TSC REGION SIZE(SIZE OF REGION IN
*                                  2K BLOCKS)
TSTDSPCH DC    8CL1' '             TS DISPATCHING ROUTINE NAME
TSTTRMS  DC    2BL1'0'             NUMBER OF POSSIBLE TS TERMINALS
TSTSUBMT DC    2BL1'0'   RESERVED
TSTLGRPS DC    2BL1'0'   RESERVED
TSTUCT   DC    2BL1'0'   RESERVED
TSTRVA   DC    20BL1'0'            RESERVED
TSTASTSO DC    4BL1'0'       TOTAL AUXILIARY STORAGE AVAILABLE   Y01018
*                                  TO TSO (IN 2K BLOCKS)         Y01018
TSTASBGD DC    2BL1'0'       TOTAL AUXILIARY STORAGE AVAILABLE   Y01018
*                                  TO BACKGROUND (IN 2K BLOCKS)  Y01018
TSTBCKUP DC    BL1'0'              PERCENT OF BACKUP IN USE FOR  Y01018
*                                  TSO USER REGIONS              Y01018
TSTUSRMX DC    2BL1'0'       MAXIMUM NUMBER OF TS USERS ALLOWED  Y01018
TSTSDVC1 DC    BL1'0'              DEVICE CLASS OF SWAP DEVICE   Y01018
TSTSUNT1 DC    BL1'0'              UNIT TYPE OF SWAP DEVICE      Y01018
TSTSCUA1 DC    2BL1'0'       CHANNEL/UNIT ADDRESS OF SWAP DEVICE Y01018
TSTSDVC2 DC    BL1'0'              DEVICE CLASS OF SWAP DEVICE   Y01018
TSTSUNT2 DC    BL1'0'              UNIT TYPE OF SWAP DEVICE      Y01018
TSTSCUA2 DC    2BL1'0'       CHANNEL/UNIT ADDRESS OF SWAP DEVICE Y01018
TSTSDVC3 DC    BL1'0'              DEVICE CLASS OF SWAP DEVICE   Y01018
TSTSUNT3 DC    BL1'0'              UNIT TYPE OF SWAP DEVICE      Y01018
TSTSCUA3 DC    2BL1'0'       CHANNEL/UNIT ADDRESS OF SWAP DEVICE Y01018
TSTSDVC4 DC    BL1'0'              DEVICE CLASS OF SWAP DEVICE   Y01018
TSTSUNT4 DC    BL1'0'              UNIT TYPE OF SWAP DEVICE      Y01018
TSTSCUA4 DC    2BL1'0'       CHANNEL/UNIT ADDRESS OF SWAP DEVICE Y01018
TSTVAR   DC    2BL1'0'             LENGTH OF REST OF RECORD
*                                  (INCLUDING THESE TWO BYTES)
TSTRGNF  EQU   *                   REGION NUMBER + SIZE
*
TSTNE    DC    BL1'0'              NUMBER OF ENTRIES
*
*                                  EACH ENTRY
*
TSTRN    DC    BL1'0'              REGION NUMBER
TSTLSIZ  DC    2BL1'0'             LSQS SIZE IN 2K BLOCKS
TSTRSIZ  DC    2BL1'0'             REGION SIZE IN 2K BLOCKS
*
         ORG   TSTRN
         AIF   (&SW1 LT 2).CONTB
.IFAS031 ANOP
         EJECT
         DS    0F        ALIGN TO FULL WORD BOUNDARY
TTISMF   EQU   *         TIOC RECORD
TTIRLEN  DS    BL2'0'    RECORD LENGTH
TTIRSEG  DS    BL2'0'    SEGMEN DESCRIPTOR
TTIRFLG  DC    BL1'0'    HEADER FLAG BYTE
TTIRCDTY DC    BL1'0'    RECORD TYPE (31 DECIMAL)
TTIRCDTS DC    4BL1'0'   TIME STAMP  TOD  100THS SECS
TTIRCDTE DC    PL4'0000' DATE, PACK/DEC: 00YYDDDF
TTICPUID DC    4CL1' '   CPU IDENTIFICATION (SYSTEM8 MODEL)
TTINBF   DC    2BL1'0'   TOTAL NUMBER OF BUFFER
TTIBUFSE DC    2BL1'0'   BUFFER SIZE IN BYTES
TTIRSVRD DC    2BL1'0'   RESERVED
TTIOMAX  DC    2BL1'0'   MAXIMUM NUMBER OF OUTPUT BUFFERS ALLOWED EACH
*                        TERMINAL BEFORE OWAIT
TTIIMAX  DC    2BL1'0'   MAXIMUM NUMBER OF INPUT BUFFERS ALLOWED EACH
*                        TERMINAL BEFORE LWAIT
TTIOWTH  DC    2BL1'0'   OWAIT THRESHOLD- THE NUMBER OF BUFFERS THAT
*                        MUST BE FREED IN ORDER TO BE FREED FROM OWAIT
TTIRSTH  DC    2BL1'0'   RESTART THRESHOLD- THE NUMBER OF BUFFERS THAT
*                        MUST BE FREED IN ORDER TO BE FREED FROM LWAIT
TTIUSLW  DC    2BL1'0'   NUMBER OF BUFFERS RESERVED ON THE FREE QUEUE.
*                        LESS THAN THIS NUMBER RESULTS IN SYSTEM LWAIT.
TTIUSSL  DC    2BL1'0'   NUMBER OF USERS THAT CONSTITUTE SLACK TIME
TTITSBS  DC    BL1'0'    SIZ OF TSB'S IN SYSTEM SET BY START TS
TTIUSCH  DC    BL1'0'    LOGGED ON USER CHANGE. INDICATES WHEN TTIOMAX
*                        AND TTIIMAX IS RECALCULATED
TTIRVA   DC    20BL1'0'  RESERVED
         AIF   (&SW1 LT 2).CONTB
.IFAS032 ANOP
         EJECT
         DS    0F        ALIGN TO FULL WORD BOUNDARY
TDRSMF   EQU   *         DRIVER RECORD
TDRRLEN  DS    2BL1'0'   RECORD LENGTH
TDRRSEG  DS    2BL1'0'   SEGMENT DESCRIPTOR
TDRRFLG  DC    BL1'0'    HEADER FLAG BYTE
TDRRCDTY DC    BL1'0'    RECORD TYPE (32 DECIMAL)
TDRRCDTS DC    4BL1'0'   TIME STAMP  TOD  100THS SECS
TDRRCDTE DC    PL4'0000' DATE, PACK/DEC: 00YYDDDF
TDRCPUID DC    4CL1' '   CPU IDENTIFICATION (SYSTEM, MODEL)
TDRSCHED DC    BL1'0'    CONTROL INFORMATION - SPECIFIES WHICH FIELDS
*                        ARE TO BE IGNORED FOR DECREASE IN SCHEDULING
*                        COMPLEXITY
*                        BIT    IGNORE
*                         0     WAIT ESTIMATE
*                         1     REGION ACTIVITY
*                         2     CORE OCCUPANCY
*                         3     SWAP LOAD
*                         4     AVERAGE QUEUE SERVICE TIME
*                         5     BACKGROUND/TS RATIOS
*                         6     SCHEDULING PRIORITY
*                         7     CURRENT RQEL
TDRTIMB  DC    BL1'0'    GUARANTEED BACKGND EXEC PERCENTAGE
TDRDCWT  DC    4BL1'0'   COMPUTING WAIT TIME ESTIMATE
TDRDCRGN DC    4BL1'0'   CONSTANT FOR REGION ESTIMATE AS ABOVE
TDRRGNQ  DC    2BL1'0' LENGTH OF REST OF RECORD
*                                (INCLUDING THESE TWO BYTES)
*        ONE OF THESE GROUPS IS RECORDED PER REGION PER SUBQUEUE
*
TDRRVB   DC    BL1'0'    RESERVED
TDRRN    DC    BL1'0'    REGION NUMBER
TDRNSC   DC    2BL1'0'   SPECIFIES THE NUMBER OF SERVICE CYCLES TO BE
*                        GIVEN TO THE MTH SUBQUEUE OF THE NTH REGION
TDRNK    DC    2BL1'0'   SPECIFIES THE NUMBER OF 1024 BYTE UNITS
*                        WHICH MAY BE ALLOWED A USER ON SUBQUEUE(N,M)
TDRMCO   DC    4BL1'0'   SPECIFIES THE MAXIMUM CORE OCCUPANCY(IN 100THS
*                        OF A SECOND) ALLOWED A USER ON SUBQUEUE(N,M)
TDRAST   DC    4BL1'0'   SPECIFIES THE NUMBER OF 100THS OF A SECOND
*                        TO BE THE AVERAGE SERVICE TIME FOR
*                        SUBQUEUE(N,M)
TDRMTS   DC    4BL1'0'   SPECIFIES THE MINIMUM SLICE(IN 100THS OF A
*                        SECOND) TO BE GIVEN TO A USER ON SUBQUEUE(N,M)
         DC    2BL1'0'   RESERVED
         ORG   TDRRVB
TDRRVA   DC    20BL1'0'  RESERVED
         AIF   (&SW1 LT 2).CONTB
.IFAS033 ANOP
         EJECT
         DS    0F        ALIGN TO FULL WORD
TDMSMF   EQU   *         TS DRIVER MODIFY RECORD
TDMRLEN  DS    BL2'0'    RECORD LENGTH
TDMRSEG  DS    BL2'0'    SEGMENT DESCRIPTOR
TDMRFLG  DC    BL1'0'    HEADER FLAG BYTE
TDMRCDTY DC    BL1'0'    RECORD TYPE (33 DECIMAL)
TDMRCDTS DC    4BL1'0'   TIME STAMP TOD 100THS SECS
TDMRCDTE DC    PL4'0000'            DATE 00YYDDDF
TDMCPUID DC    4CL1' '   CPU IDENTIFICATION (SYSTEM,MODEL)
TDMSCHED DC    BL1'0'    CONTROL INFORMATION-SPECIFIES WHICH FIELDS
*                        ARE TO BE IGNORED FOR DECREASE IN SCHEDULING
*                        COMPLEXITY
*                        BIT    IGNORE
*                        0      WAIT ESTIMATE
*                        1      REGION ACTIVITY
*                        2      CORE OCCUPANCY
*                        3      SWAP LOAD
*                        4      AVERAGE QUEUE SERVICE TIME
*                        5      BACKGROUND/TS RATIOS
*                        6      SCHEDULING PRIORITY
*                        7      CURRENT RQEL
TDMTIMB  DC    BL1'0'    BACKGROUND EXECUTION PERCENTAGE
         AIF   (&SW1 LT 2).CONTB
.IFAS034 ANOP
         EJECT
         DS    0F        ALIGN TO FULL WORD BOUNDARY
TIVSMF   EQU   *                   SMF TS STEP TERMINATION RECORD
TIVRLEN  DS    BL2'0'    RECORD LENGTH
TIVRSEG  DS    BL2'0'    SEGMENT DESCRIPTOR
TIVRFLG  DC    BL1'0'              HEADER FLAG BYTE
TIVRCDTY DC    BL1'0'              RECORD TYPE (34 DECIMAL)
TIVRCDTS DC    4BL1'0'             TIME STAMP  TOD 100THS SECS
TIVRCDTE DC    PL4'0000'                       DATE 00YYDDDF
TIVCPUID DC    4CL1' '             CPU IDENTIFICATION (SYSTEM, MODEL)
TIVUID   DC    8CL1' '             USER IDENTIFICATION
TIVONTME DC    4BL1'0'             LOGON TIME   TOD .01 SECS
TIVONDTE DC    PL4'0000'                       DATE 00YYDDDF
TIVUDATA DC    8CL1' '             USER IDENTIFICATION FIELD
TIVINVSQ DC    BL1'0'              STEP SEQUENCE NUMBER
TIVCRTME DC    4BL1'0'             MAIN STORAGE OCCUPANCY TIME-.01 SEC
TIVOUTCT DC    4BL1'0'             LINE OUT COUNT
TIVINCT  DC    4BL1'0'             LINE IN COUNT
TIVSTAT  DC    2BL1'0'             STEP TERMINATION STATUS
TIVPRI   DC    BL1'0'              STEP DISPATCHING PRIORITY
TIVPRGNM DC    8CL1' '             NAME OF PROGRAM INVOKED
TIVINVNM DC    8CL1' '             STEP (PROC) NAME
TIVEFRGN DC    2BL1'0'             EFFECTIVE REGION SIZE IN 1K BLKS
TIVRVB   DC    2BL1'0'             RESERVED
TIVMCRE  DC    2BL1'0'             CORE ACTUALLY USED IN  1K BLKS
TIVRVC   DC    6BL1'0'             RESERVED
TIVSPK   DC    1BL1'0'             STORAGE PROTECT KEY           A40791
TIVSTI   DC    1BL1'0'             STEP TERMINATION INDICATORS
*                     BIT0 - RESERVED
*                     BIT1 - CANCELLED AT EXIT IEFUJV
*                     BIT2 - CANCELLED AT EXIT IEFUJI
*                     BIT3 - CANCELLED AT EXIT IEFUSI
*                     BIT4 - CANCELLED AT EXIT IEFACTRT
*                     BIT5 - RESERVED
*                     BIT6 - 0=NORMAL COMPLETION
*                            1=ABEND
*                     BIT7 - STEP FLUSHED
         DC    2BL1'0'             RESERVED                      A40791
TIVAST   DC    4BL1'0'             ALLOC. START TIME             A40791
TIVPPST  DC    4BL1'0'             PROBLEM PROG. START TIME      A40791
         DC    4BL1'0'             RESERVED
TIVRIN   DC    2BL1'0'             RECORD INDICATORS
*                                   BIT7 =0 STORAGE IS VIRTUAL
TIVRLCT  DC    2BL1'0'             OFFSET TO RELOCATE SECTION
TIVVAR   DC    2BL1'0'             LENGTH OF EXCP COUNT FIELDS
*                                  (INCLUDING THESE TWO BYTES)
TIVEXCP  EQU   *                   DEVICES USED AND EXCP COUNTS
*
*                                  EACH ENTRY
*
TIVDEVC  DC    BL1'0'              DEVICE CLASS
TIVUTYP  DC    BL1'0'              UNIT TYPE
TIVCUAD  DC    BL2'00'             CHANNEL/UNIT ADDRESS
TIVNEXCP DC    4BL1'0'             EXCP COUNT
*
         ORG   TIVEXCP
TIVVARA  DC    BL1'0'              LENGTH OF CPU AND ACCT. SECTION
*                                  (NOT INCLUDING THIS BYTE)
TIVCPUTM DC    3BL1'0'             STEP CPU TIME (.01 SEC)
TIVNBRAC DC    BL1'0'              NUMBER OF ACCOUNTING FIELDS
TIVACFLD EQU   *                   ACCOUNTING FIELDS
*                                  (THE FIRST BYTE OF EACH FIELD
*                                  MUST CONTAIN THE NUMBER OF
*                                  BYTES OF DATA THAT FOLLOWS)
*
*        RELOCATE SECTION
TIVPGIN  DC    4BL1'0'   NUMBER OF PAGE-INS
TIVPGOUT DC    4BL1'0'   NUMBER OF PAGE-OUTS
TIVRGNS  DC    4BL1'0'   NUMBER OF SWAPS (AOS/2 ONLY)
TIVSIN   DC    4BL1'0'   NUMBER OF TSO SWAP PAGE-INS
TIVSOUT  DC    4BL1'0'   NUMBER OF TSO SWAP PAGE-OUTS
         AIF   (&SW1 LT 2).CONTB
.IFAS035 ANOP
         EJECT
         DS    0F        ALIGN TO FULL WORD BOUNDARY
TLGSMF   EQU   *                   SMF TS LOGOFF RECORD FORMAT
TLGRLEN  DS    BL2'0'    RECORD LENGTH
TLGRSEG  DS    BL2'0'    SEGMENT DESCRIPTOR
TLGRFLG  DC    BL1'0'              HEADER FLAG BYTE
TLGRCDTY DC    BL1'0'              RECORD TYPE (35 DECIMAL)
TLGRCDTS DC    4BL1'0'             TIME STAMP   TOD  100THS SECS
TLGRCDTE DC    PL4'0000'                       DATE 00YYDDDF
TLGCPUID DC    4CL1' '             CPU IDENTIFICATION (SYSTEM, MODEL)
TLGUID   DC    8CL1' '             USER IDENTIFICATION
TLGONTME DC    4BL1'0'             LOGON TIME   TOD 100THS SECS
TLGONDTE DC    PL4'0000'                       DATE 00YYDDDF
TLGUDATA DC    8CL1' '             USER IDENTIFICATION FIELD FOR IEFUJV
TLGSTPCT DC    BL1'0'              NUMBER OF STEPS IN SESSION
TLGCRTME DC    4BL1'0'             RESERVED
TLGOUTCT DC    4BL1'0'             LINE OUT COUNT
TLGINCT  DC    4BL1'0'             LINE IN COUNT
TLGSTAT  DC    2BL1'0'             SESSION TERMINATION STATUS
TLGPRI   DC    BL1'0'              LOGON PRIORITY
TLGNQTME DC    4BL1'0'             LOGON ENQUEUE TIME  TOD .01 SECS
TLGNQDTE DC    PL4'0000'           LOGON ENQUEUE DATE 00YYDDDF
TLGTRMI  DC    BL1'0'              TERMINATION INDICATORS
*                                  BIT0-RESERVED
*                                     1-CANCELLED AT EXIT IEFUJV
*                                     2-CANCELLED AT EXIT IEFUJI
*                                     3-CANCELLED AT EXIT IEFUSI
*                                     4-CANCELLED AT EXIT IEFACTRT
*                                     5-RESERVED
*                                     6-O=NORMAL COMPLETION
*                                       1=ABEND
*                                     7-RESERVED
TLGOUTCL DC    5BL1'0'             SYSOUT CLASSES FOR SESSION
TLGRVC   DC    4BL1'0'             RESERVED
TLGSPK   DC    1BL1'0'             STORAGE PROTECT KEY           A40791
         DC    19BL1'0'            RESERVED                      A40791
TLGVAR   DC    BL1'0'              LENGTH OF REST OF RECORD
*                                  (NOT INCLUDING THIS BYTE)
TLGRVB   DC    20CL1' '            RESERVED
TLGCPUTM DC    3BL1'0'             SESSION CPU TIME  100THS SECS
TLGNBRAC DC    BL1'0'              NUMBER OF ACCOUNTING FIELDS
TLGACFLD EQU   *                   ACCOUNTING FIELDS
*                                  (THE FIRST BYTE OF EACH FIELD
*                                  MUST CONTAIN THE NUMBER OF
*                                  BYTES OF DATA THAT FOLLOWS)
         AIF   (&SW1 LT 2).CONTB
.IFAS040 ANOP
         EJECT
         DS    0F        ALIGN TO FULL WORD BOUNDARY
TDDSMF   EQU   *                   SMF TS DYNAMIC DD RECORD FORMAT
TDDRLEN  DS    BL2'0'    RECORD LENGTH
TDDRSEG  DS    BL2'0'    SEGMENT DESCRIPTOR
TDDRFLG  DC    BL1'0'              HEADER FLAG BYTE
TDDRCDTY DC    BL1'0'              RECORD TYPE (40 DECIMAL)
TDDRCDTS DC    4BL1'0'             TIME STAMP  TOD 100THS SECS
TDDRCDTE DC    PL4'0000'                       DATE 00YYDDDF
TDDCPUID DC    4CL1' '             CPU IDENTIFICATION (SYSTEM, MODEL)
TDDUID   DC    8CL1' '             USER IDENTIFICATION
TDDONTME DC    4BL1'0'             LOGON TIME   TOD  100THS SECS
TDDONDTE DC    PL4'0000'                       DATE 00YYDDDF
TDDUDATA DC    8CL1' '             USER IDENTIFICATION FIELD
TDDINVSQ DC    BL1'0'              STEP SEQUENCE NUMBER
TDDFLG   DC    BL1'0'    INDICATION OF FUNCTION THAT CAUSED THIS
*                        DYNAMIC RECORD
*                           VALUE     RECORD CAUSED BY
*                           '01'      RESERVED
*                           '02'      UNALLOCATION
*                           '03'      CONCATENATION
*                           '04'      DECONCATENATION
TDDRVA   DC    20BL1'0'            RESERVED
TDDVAR   DC    2BL1'0'             LENGTH OF REST OF RECORD
*                                  (INCLUDING THESE TWO BYTES)
TDDEXCP  EQU   *                   DEVICES USED AND EXCP COUNTS
*
*                                  EACH DEVICE
*
TDDDEVC  DC    BL1'0'              DEVICE CLASS
TDDUTYP  DC    BL1'0'              UNIT TYPE
TDDCUAD  DC    BL2'0'              CHANNEL/UNIT ADDRESS
TDDNEXCP DC    4BL1'0'             EXCP COUNT
         ORG   TDDDEVC
         AIF   (&SW1 LT 2).CONTB
.IFAS041 ANOP
         EJECT
         DS    0F        ALIGN TO FULL WORD BOUNDARY
TMDSMF  EQU    *                   SMF MODIFY TS RECORD FORMAT
TMDRLEN  DS    BL2'0'    RECORD LENGTH
TMDRSEG  DS    BL2'0'    SEGMENT DESCRIPTOR
TMDRFLG  DC    BL1'0'              HEADER FLAG BYTE
TMDRCDTY DC    BL1'0'              RECORD TYPE (41 DECIMAL)
TMDRCDTS DC    4BL1'0'             TIME STAMP TOD  100THS SECS
TMDRCDTE DC    PL4'0000'                       DATE 00YYDDDF
TMDCPUID DC    4CL1' '             CPU IDENTIFICATION (SYSTEM, MODEL)
TMDSPROC DC    8CL1' '             TS INITIATION PROC NAME
TMDID    DC    8CL1' '             TS TASK IDENTIFIER
TMDRVA   DC    8BL1'0'             RESERVED
TMDSMFOP DC    BL1'0'              SMF FOREGROUND OPTIONS
TMDBCKUP DC    BL1'0'              PERCENT OF BACKUP IN USE FOR  Y01018
*                                  TSO USER REGIONS              Y01018
TMDASTSO DC    4BL1'0'         TOTAL AUXILIARY STORAGE AVAILABLE Y01018
*                                  TO TSO (IN 2K BLOCKS)         Y01018
TMDASBGD DC    2BL1'0'         TOTAL AUXILIARY STORAGE AVAILABLE Y01018
*                                  TO BACKGROUND (IN 2K BLOCKS)  Y01018
TMDRVB   DC    4BL1'0'             RESERVED                      Y01018
TMDTRMS  DC    2BL1'0'             NUMBER OF POSSIBLE TS TERMINALS
TMDSUBMT DC    2BL1'0'             RESERVED
TMDRVC   DC    2BL1'0'             RESERVED
TMDUCT   DC    2BL1'0'             RESERVED
TMDRVD   DC    20BL1'0'            RESERVED
TMDVAR   DC    2BL1'0'             LENGTH OF REST OF RECORD
*                                  (INCLUDING THESE TWO BYTES)
TMDRGNF  EQU   *                   REGION NUMBER AND SIZE
TMDNE    DC    BL1'0'              NUMBER OF ENTRIES
*
*                                  EACH ENTRY
TMDRN    DC    BL1'0'              REGION #
TMDLSIZ  DC    2BL1'0'             LSQS IN REGION (2K UNIT)
TMDRSIZ  DC    2BL1'0'             SIZE OF REGION (2K UNIT)
         ORG   TMDRN
         AIF   (&SW1 LT 2).CONTB
.IFAS042 ANOP
         EJECT
         DS    0F        ALIGN TO FULL WORD BOUNDARY
TSPSMF  EQU    *                   SMF STOP TS(REGION) RECORD FORMAT
TSPRLEN  DS    BL2'0'    RECORD LENGTH
TSPRSEG  DS    BL2'0'    SEGMENT DESCRIPTOR
TSPRFLG  DC    BL1'0'              HEADER FLAG BYTE
TSPRCDTY DC    BL1'0'              RECORD TYPE (42 DECIMAL)
TSPRCDTS DC    4BL1'0'             TIME STAMP TOD 100THS SECS
TSPRCDTE DC    PL4'0000'                       DATE 00YYDDDF
TSPCPUID DC    4CL1' '             CPU IDENTIFICATION (SYSTEM, MODEL)
TSPSPROC DC    8CL1' '             TS INITIATION PROC NAME
TSPID    DC    8CL1' '             TS TASK IDENTIFIER
TSPRVA   DC    20BL1'0'            RESERVED
         AIF   (&SW1 EQ 0).CONTB                                 Y01120
         AIF   (&SW1 LT 4).TKEY                                  Y01120
.IFAS043 ANOP                                                    Y01120
         EJECT                                                   Y01120
* THIS DSECT DEFINES THE FORMAT FOR RECORD TYPE 43 (START HASP   Y01120
* SUBSYSTEM RECORD). RECORD LENGTH IS FIXED. LENGTH OF 28 BYTES. Y01120
         DS    0F                  ALIGN TO FULL WORD BOUNDRY    Y01120
SMFRCD43 EQU   *                   HEADER SEGMENT                Y01120
SMF43LEN DS    BL2'0'              RECORD LENGTH                 Y01120
SMF43SEG DS    BL2'0'              SEGMENT DESCRIPTOR            Y01120
SMF43FLG DC    BL1'0'              HEADER FLAG BYTE              Y01120
SMF43RTY DC    BL1'0'              RECORD TYPE 43                Y01120
SMF43TME DC    4BL1'0'             TOD, USING FORMAT FROM TIME   Y01120
*                                  MACRO WITH BIN INTERVAL       Y01120
SMF43DTE DC    PL4'0000'           DATE IN PACKED DECIMAL FORM   Y01120
*                                  00YYDDDF (F IS THE SIGN)      Y01120
SMF43SID DC    2CL1' '             SYSTEM IDENTIFICATION         Y01120
SMF43MOD DC    2CL1' '             MODEL NUMBER                  Y01120
SMF43SBS DC    2BL1'0'             SUBSYSTEM ID (HASP - X'02')   Y01120
SMF43RSV DC    2BL1'0'             RESERVED                      Y01120
SMF43LRR DC    2BL1'0'             LENGTH OF REST OF RECORD      Y01120
SMF43RV1 DC    3BL1'0'             RESERVED                      Y01120
SMF43OPT DC    1BL1'0'             OPTIONS                       Y01120
         AIF   (&SW1 EQ 0).CONTB                                 Y01120
.IFAS045 ANOP                                                    Y01120
         EJECT                                                   Y01120
* THIS DSECT DEFINES THE FORMAT FOR RECORD TYPE 45 (STOP HASP    Y01120
* SUBSYSTEM RECORD). RECORD LENGTH IS FIXED. LENGTH OF 24 BYTES. Y01120
         DS    0F                  ALIGN TO FULL WORD BOUNDRY    Y01120
SMFRCD45 EQU   *                   HEADER SEGMENT                Y01120
SMF45LEN DS    BL2'0'              RECORD LENGTH                 Y01120
SMF45SEG DS    BL2'0'              SEGMENT DESCRIPTOR            Y01120
SMF45FLG DC    BL1'0'              HEADER FLAG BYTE              Y01120
SMF45RTY DC    BL1'0'              RECORD TYPE 45                Y01120
SMF45TME DC    4BL1'0'             TOD, USING FORMAT FROM TIME   Y01120
*                                  MACRO WITH BIN INTERVAL       Y01120
SMF45DTE DC    PL4'0000'           DATE IN PACKED DECIMAL FORM   Y01120
*                                  00YYDDDF (F IS THE SIGN)      Y01120
SMF45SID DC    2CL1' '             SYSTEM IDENTIFICATION         Y01120
SMF45MOD DC    2CL1' '             MODEL NUMBER                  Y01120
SMF45SBS DC    2BL1'0'             SUBSYSTEM ID (HASP - X'02')   Y01120
SMF45RSV DC    2BL1'0'             RESERVED                      Y01120
SMF45LRR DC    2BL1'0'             LENGTH OF REST OF RECORD (0)  Y01120
         AIF   (&SW1 EQ 0).CONTB                                 Y01120
.IFAS047 ANOP                                                    Y01120
         EJECT                                                   Y01120
* THIS DSECT DEFINES THE FORMAT FOR RECORD TYPE 47 (HASP - START Y01120
* SUBSYSTEM EVENT). RECORD LENGTH VARIABLE. MINIMUM OF 52 BYTES. Y01120
         DS    0F                  ALIGN TO FULL WORD BOUNDRY    Y01120
SMFRCD47 EQU   *                   HEADER SEGMENT                Y01120
SMF47LEN DS    BL2'0'              RECORD LENGTH                 Y01120
SMF47SEG DS    BL2'0'              SEGMENT DESCRIPTOR            Y01120
SMF47FLG DC    BL1'0'              HEADER FLAG BYTE              Y01120
SMF47RTY DC    BL1'0'              RECORD TYPE 47                Y01120
SMF47TME DC    4BL1'0'             TOD, USING FORMAT FROM TIME   Y01120
*                                  MACRO WITH BIN INTERVAL       Y01120
SMF47DTE DC    PL4'0000'           DATE IN PACKED DECIMAL FORM   Y01120
*                                  00YYDDDF (F IS THE SIGN)      Y01120
SMF47SID DC    2CL1' '             SYSTEM IDENTIFICATION         Y01120
SMF47MOD DC    2CL1' '             MODEL NUMBER                  Y01120
SMF47SBS DC    2BL1'0'             SUBSYSTEM ID (HASP - X'02')   Y01120
SMF47RSV DC    2BL1'0'             RESERVED                      Y01120
SMF47LRR DC    2BL1'0'             LENGTH OF REST OF RECORD      Y01120
SMF47EVT DC    2BL1'0'             (X'0001'-SIGNON,X'0002'-START LINE)
SMF47LN1 DC    2BL1'0'             LENGTH OF REST OF COMMON RECORD
*                                  INCLUDING THESE 2 BYTES (26)  Y01120
SMF47RMT DC    8CL1' '             REMOTE NUMBER                 Y01120
SMF47LIN DC    8CL1' '             LINE NAME                     Y01120
SMF47PSW DC    8CL1' '             PASSWORD                      Y01120
*                                  END OF RECORD IF START LINE   Y01120
SMF47LN2 DC    2BL1'0'             LENGTH OF REST OF SIGNON RECORD
*                                  INCLUDING THESE 2 BYTES (38)  Y01120
SMF47MSG DC    36CL1' '            CARD IMAGE (COLUMNS 35-70)    Y01120
         AIF   (&SW1 EQ 0).CONTB                                 Y01120
.IFAS048 ANOP                                                    Y01120
         EJECT                                                   Y01120
* THIS DSECT DEFINES THE FORMAT FOR RECORD TYPE 48 (HASP - STOP  Y01120
* SUBSYSTEM EVENT). RECORD LENGTH IS FIXED. LENGTH OF 52 BYTES.  Y01120
         DS    0F                  ALIGN TO FULL WORD BOUNDRY    Y01120
SMFRCD48 EQU   *                   HEADER SEGMENT                Y01120
SMF48LEN DS    BL2'0'              RECORD LENGTH                 Y01120
SMF48SEG DS    BL2'0'              SEGMENT DESCRIPTOR            Y01120
SMF48FLG DC    BL1'0'              HEADER FLAG BYTE              Y01120
SMF48RTY DC    BL1'0'              RECORD TYPE 48                Y01120
SMF48TME DC    4BL1'0'             TOD, USING FORMAT FROM TIME   Y01120
*                                  MACRO WITH BIN INTERVAL       Y01120
SMF48DTE DC    PL4'0000'           DATE IN PACKED DECIMAL FORM   Y01120
*                                  00YYDDDF (F IS THE SIGN)      Y01120
SMF48SID DC    2CL1' '             SYSTEM IDENTIFICATION         Y01120
SMF48MOD DC    2CL1' '             MODEL NUMBER                  Y01120
SMF48SBS DC    2BL1'0'             SUBSYSTEM ID (HASP - X'02')   Y01120
SMF48RSV DC    2BL1'0'             RESERVED                      Y01120
SMF48LRR DC    2BL1'0'             LENGTH OF REST OF RECORD      Y01120
SMF48EVT DC    2BL1'0'             (X'0001'-SIGNON,X'0002'-START LINE)
SMF48RV1 DC    2BL1'0'             RESERVED                      Y01120
SMF48RMT DC    8CL1' '             REMOTE NUMBER                 Y01120
SMF48LIN DC    8CL1' '             LINE NAME                     Y01120
SMF48PSW DC    8CL1' '             PASSWORD                      Y01120
         AIF   (&SW1 EQ 0).CONTB                                 Y01120
.IFAS062 ANOP                                                    Y01113
         EJECT                                                   Y01113
* THIS DSECT DEFINES THE FORMAT FOR RECORD TYPE 62 (VSAM DATASET Y01113
* OPEN RECORD). RECORD LENGTH IS VARIABLE. MINIMUM OF 148 BYTES. Y01113
         DS    0F                  ALIGN TO FULL WORD BOUNDRY    Y01113
SMFRCD62 EQU   *                   HEADER SEGMENT                Y01113
SMF62LEN DS    BL2'0'              RECORD LENGTH                 Y01113
SMF62SEG DS    BL2'0'              SEGMENT DESCRIPTOR            Y01113
SMF62FLG DC    BL1'0'              HEADER FLAG BYTE              Y01113
SMF62RTY DC    BL1'0'              RECORD TYPE 62                Y01113
SMF62TME DC    4BL1'0'             TOD, USING FORMAT FROM TIME   Y01113
*                                  MACRO WITH BIN INTERVAL       Y01113
SMF62DTE DC    PL4'0000'           DATE IN PACKED DECIMAL FORM   Y01113
*                                  00YYDDDF (F IS THE SIGN)      Y01113
SMF62SID DC    2CL1' '             SYSTEM IDENTIFICATION         Y01113
SMF62MOD DC    2CL1' '             MODEL NUMBER                  Y01113
SMF62JBN DC    8CL1' '             JOBNAME                       Y01113
SMF62RST DC    4BL1'0'             READER START TIMER (.01 SEC)  Y01113
SMF62RSD DC    PL4'0000'           READER START DATE             Y01113
SMF62UIF DC    8CL1' '             USER IDENTIFICATION FIELD     Y01113
SMF62IND DC    4BL1'0'             OPEN STATUS INDICATOR         Y01113
*                                  BIT MEANING WHEN SET          Y01113
*                                  BIT 0 - OPEN SUCCESSFUL       Y01113
*                                  BIT 1 - SECURITY VIOLATION    Y01113
*                                          (INVALID PASSWORD)    Y01113
*                                  BITS 2-31 - RESERVED          Y01113
SMF62CNM DC    44CL1' '            CATALOG DATA SET NAME         Y01113
SMF62CVS DC    6CL1' '             CATALOG VOLUME SERIAL NUMBER  Y01113
SMF62DNM DC    44CL1' '            DATA SET NAME                 Y01113
SMF62VCT DC    BL2'0'              VOLUME COUNT                  Y01113
SMF62VLT EQU   *                   VOLUME LIST                   Y01113
* THE FOLLOWING ENTRY IS CREATED FOR EACH VOLUME                 Y01113
SMF62VSR DC    6CL1' '             VOLUME SERIAL                 Y01113
SMF62DTY DC    4CL1' '             DEVICE TYPE                   Y01113
         ORG   SMF62VLT                                          Y01113
         AIF   (&SW1 EQ 0).CONTB                                 Y01113
.IFAS064 ANOP                                                    Y01113
         EJECT                                                   Y01113
* THIS DSECT DEFINES THE FORMAT FOR RECORD TYPE 64 (VSAM DATA    Y01113
* SET STATUS AT CLOSE OR EOV TIME). RECORD LENGTH IS VARIABLE.   Y01113
* MINIMUM OF 254 BYTES.                                          Y01113
         DS    0F                   ALIGN TO FULLWORD BOUNDARY   Y01113
SMFRCD64 EQU   *                    HEADER SEGMENT               Y01113
SMF64LEN DS    BL2'0'               RECORD LENGTH                Y01113
SMF64SEG DS    BL2'0'               SEGMENT DESCRIPTOR           Y01113
SMF64FLG DC    BL1'0'               HEADER FLAG BYTE             Y01113
SMF64RTY DC    BL1'0'               RECORD TYPE 64               Y01113
SMF64TME DC    4BL1'0'              TOD, USING FORMAT FROM TIME  Y01113
*                                   MACRO WITH BIN INTERVAL      Y01113
SMF64DTE DC    PL4'0000'            DATE IN PACKED DECIMAL FORM  Y01113
*                                   00YYDDDF (F IS THE SIGN)     Y01113
SMF64SID DC    2CL1' '              SYSTEM IDENTIFICATION        Y01113
SMF64MOD DC    2CL1' '              MODEL NUMBER                 Y01113
SMF64JBN DC    8CL1' '              JOBNAME                      Y01113
SMF64RST DC    4BL1'0'              READER START TIME (IN 100THS Y01113
*                                   SECONDS)                     Y01113
SMF64RSD DC    PL4'0000'            READER START DATE            Y01113
SMF64UIF DC    8CL1' '              USER IDENTIFICATION FIELD    Y01113
SMF64RIN DC    BL1'0'               RECORDING INDICATORS         Y01113
*                                   BIT MEANING WHEN SET         Y01113
*                                   BIT 0 - RECORD WRITTEN BY CLOSE
*                                   BIT 1 - RECORD WRITTEN BY EOV-
*                                           VOLUME SWITCH        Y01113
*                                   BIT 2 - RECORD WRITTEN BY EOV-
*                                           OUT OF SPACE         Y01113
*                                   BITS 3-7 RESERVED            Y01113
SMF64DTY DC    BL1'0'               DATA SET TYPE                Y01113
*                                   BIT MEANING WHEN SET         Y01113
*                                   BIT 0 - DATA SET             Y01113
*                                   BIT 1 - INDEX                Y01113
*                                   BITS 2-7 - RESERVED          Y01113
SMF64CNM DC    44CL1' '             CATALOG NAME                 Y01113
SMF64DNM DC    44CL1' '             DATA SET NAME                Y01113
SMF64NTR DC    2BL1'0'              NUMBER OF TRACKS REQUIRED    Y01113
SMF64CHR DC    4CL1' '              CURRENT HIGH RBA             Y01113
SMF64ESL DC    2BL1'0'              EXTENT SEGMENT LENGTH        Y01113
SMF64FEX EQU   *                    EXTENT TABLE - ONE PER VOLUMEY01113
*                                   ONLINE AT TIME RECORD WRITTENY01113
SMF64FCC DC    4CL1' '              FROM CCHH                    Y01113
SMF64TCC DC    4CL1' '              TO CCHH                      Y01113
SMF64VSN DC    6CL1' '              VOLUME SERIAL NUMBER         Y01113
SMF64CUS DC    4CL1' '              CUU AND SPINDLE ID           Y01113
SMF64UTY DC    4CL1' '              UNIT TYPE - UCBTYPE          Y01113
         DC    4CL1' '              RESERVED                     Y01113
         ORG   SMF64FEX                                          Y01113
SMF64STS EQU   *                    DATA SET STATISTICS AT OPEN  Y01113
*                                   TIME                         Y01113
SMF64SLN DC    4BL1'0'              STATISTICS SEGMENT LENGTH    Y01113
SMF64NIL DC    4BL1'0'              NUMBER INDEX LEVEL           Y01113
SMF64NEX DC    4BL1'0'              NUMBER EXTENTS               Y01113
SMF64NLR DC    4BL1'0'              NUMBER LOGICAL RECORDS       Y01113
SMF64NDE DC    4BL1'0'              NUMBER DELETES               Y01113
SMF64NIN DC    4BL1'0'              NUMBER INSERTS               Y01113
SMF64NUP DC    4BL1'0'              NUMBER UPDATES               Y01113
SMF64NRE DC    4BL1'0'              NUMBER RETRIEVES             Y01113
SMF64NFS DC    4BL1'0'              NUMBER FREE SPACE            Y01113
SMF64NCS DC    4BL1'0'              NUMBER CI SPLITS             Y01113
SMF64NAS DC    4BL1'0'              NUMBER CA SPLITS             Y01113
SMF64NEP DC    4BL1'0'              NUMBER EXCPS COUNT           Y01113
* DATA SET STATISTICS FOR THIS OPEN                              Y01113
SMF64DIL DC    4BL1'0'              NUMBER INDEX LEVEL           Y01113
SMF64DEX DC    4BL1'0'              NUMBER EXTENTS               Y01113
SMF64DLR DC    4BL1'0'              NUMBER LOGICAL RECORDS       Y01113
SMF64DDE DC    4BL1'0'              NUMBER DELETES               Y01113
SMF64DIN DC    4BL1'0'              NUMBER INSERTS               Y01113
SMF64DUP DC    4BL1'0'              NUMBER UPDATES               Y01113
SMF64DRE DC    4BL1'0'              NUMBER RETRIEVES             Y01113
SMF64DFS DC    4BL1'0'              NUMBER FREE SPACE            Y01113
SMF64DCS DC    4BL1'0'              NUMBER CI SPLITS             Y01113
SMF64DAS DC    4BL1'0'              NUMBER CA SPLITS             Y01113
SMF64DEP DC    4BL1'0'              NUMBER EXCPS COUNT           Y01113
         AIF   (&SW1 EQ 0).CONTB                                 Y01113
.IFAS068 ANOP                                                    Y01113
         EJECT                                                   Y01113
* THIS DSECT DEFINES THE FORMAT FOR RECORD TYPE 68 (VSAM DATA    Y01113
* SET RENAMED).  RECORD LENGTH IS 170 BYTES                      Y01113
         DS    0F                   ALIGN TO FULLWORD BOUNDARY   Y01113
SMFRCD68 EQU   *                    HEADER SEGMENT               Y01113
SMF68LEN DS    BL2'0'               RECORD LENGTH                Y01113
SMF68SEG DS    BL2'0'               SEGMENT DESCRIPTOR           Y01113
SMF68FLG DC    BL1'0'               HEADER FLAG BYTE             Y01113
SMF68RTY DC    BL1'0'               RECORD TYPE 68               Y01113
SMF68TME DC    4BL1'0'              TOD USING FORMAT FROM TIME   Y01113
*                                   MACRO WITH BIN INTERVAL      Y01113
SMF68DTE DC    PL4'0000'            DATE IN PACKED DECIMAL FORMATY01113
*                                   00YYDDDF (F IS THE SIGN)     Y01113
SMF68SID DC    2CL1' '              SYSTEM IDENTIFICATION        Y01113
SMF68MOD DC    2CL1' '              MODEL NUMBER                 Y01113
SMF68JBN DC    8CL1' '             JOBNAME                       Y01113
SMF68RST DC    4BL1'0'             READER START TIME (IN 100THS  Y01113
*                                  SECONDS)                      Y01113
SMF68RSD DC    PL4'0000'            READER START DATE            Y01113
SMF68UIF DC    8CL1' '              USER IDENTIFICATION FIELD    Y01113
SMF68CNM DC    44CL1' '             CATALOG NAME                 Y01113
SMF68ONM DC    44CL1' '             OLD DATA SET NAME            Y01113
SMF68NNM DC    44CL1' '             NEW DATA SET NAME            Y01113
         AIF   (&SW1 EQ 0).CONTB                                 Y01113
.IFAS069 ANOP                                                    Y01113
         EJECT                                                   Y01113
* THIS DSECT DEFINES THE FORMAT FOR RECORD TYPE 69 (VSAM DATA    Y01113
* SPACE DEFINED OR DELETED).  RECORD LENGTH IS 102 BYTES.        Y01113
         DS    0F                  ALIGN TO FULLWORD BOUNDARY    Y01113
SMFRCD69 EQU   *                   HEADER SEGMENT                Y01113
SMF69LEN DS    BL2'0'              RECORD LENGTH                 Y01113
SMF69SEG DS    BL2'0'              SEGMENT DESCRIPTOR            Y01113
SMF69FLG DC    BL1'0'              HEADER FLAG BYTE              Y01113
SMF69RTY DC    BL1'0'              RECORD TYPE 69                Y01113
SMF69TME DC    4BL1'0'             TOD, USING FORMAT FROM TIME   Y01113
*                                  MACRO WITH BIN INTERVAL       Y01113
SMF69DTE DC    PL4'0000'           DATE IN PACKED DECIMAL FORM   Y01113
*                                  00YYDDDF (F IS THE SIGN)      Y01113
SMF69SID DC    2CL1' '             SYSTEM IDENTIFICATION         Y01113
SMF69MOD DC    2CL1' '             MODEL NUMBER                  Y01113
SMF69JBN DC    8CL1' '             JOBNAME                       Y01113
SMF69RST DC    4BL1'0'             READER START TIME IN 100THS   Y01113
*                                  SECONDS                       Y01113
SMF69RSD DC    PL4'0000'           READER START DATE             Y01113
SMF69UIF DC    8CL1' '             USER IDENTIFICATION FIELD     Y01113
SMF69CUM DC    4CL1' '             CUU AND MODULE ID             Y01113
SMF69NDS DC    2BL1'0'             NUMBER OF EXTENT ON VOLUME    Y01113
SMF69NUC DC    2BL1'0'             NUMBER UNALLOCATED CYLS ON    Y01113
*                                  VOLUME                        Y01113
SMF69NUT DC    2BL1'0'             NUMBER UNALLOCATED TRKS. ON   Y01113
*                                  VOLUME                        Y01113
SMF69LNC DC    2BL1'0'             LARGEST # FREE CONTG. CYLS    Y01113
SMF69LNT DC    2BL1'0'             LARGEST # FREE CONTG. TRKS    Y01113
SMF69CNM DC    44CL1' '            CATALOG NAME                  Y01113
SMF69VSR DC    6CL1' '             VOLUME SERIAL                 Y01113
         AIF   (&SW1 EQ 0).CONTB                                 Y01113
         AGO   .TKEY
         MEND
         EJECT
*
* ANFANG, BALR, USING OPENS UND VERTEILET
*
SMFREPRT PROGR 20000
         PARM  (V=1,   A=ALLES,G=NUR GESAMTBLATT                     ***
               S=1,    A=ALLE SATZARTEN,T=NUR TSO,B=NUR BATCH        ***
               P=1,    PERIODE: T=VORTAG(DEFAULT),L=LFD MON,V=VORMONAT**
               A=5,    ANFANGSDATUM (5STELLEN)                       ***
               E=5)    ENDDATUM 5 STELLEN
         ORG   PARMV
         DC    C'G'
         ORG   PARMS
         DC    C'A'
         ORG   PARMA
         DC    C'00000'           DEFAULT-TAGESDATUM IST 00000
         ORG   PARME
         DC    C'00000'           DEFAULT AUCH FUER DAS ENDE
         ORG   PARMP
         DC    C'T'    VORTAG IST DEFAULT, L + M VERLANGEN PARMA+PARME
         ORG
         CLI   PARMV,C'G'
         BE    A00
         CLI   PARMV,C'A'
         BE    A00
         WTO   'SYSTSMFP - PARMV NUR G UND A ERLAUBT'
         LA    R15,4005
         B     ABEND
A00      EQU   *
         CLI   PARMS,C'A'
         BE    A01
         CLI   PARMS,C'T'
         BE    A01
         CLI   PARMS,C'B'
         BE    A01
         WTO   'SYSTSMFP - PARMS NUR A, T, B ERLAUBT'
         LA    R15,4007
         B     ABEND
A01      EQU   *
         CLC   PARMA(2),=C'00'
         BE    A02
         CLC   PARMA(2),=C'73'
         BE    A02
         CLC   PARMA(2),=C'74'
         BE    A02
         CLC   PARMA(2),=C'75'
         BE    A02
         WTO   'SYSTSMFP - PARMA NUR 00...,73...,74...,75... ERLAUBT'
         LA    R15,4008
         B     ABEND
A02      EQU   *
         CLC   PARME(2),=C'00'
         BE    A03
         CLC   PARME(2),=C'73'
         BE    A03
         CLC   PARME(2),=C'74'
         BE    A03
         CLC   PARME(2),=C'75'
         BE    A03
         WTO   'SYSTSMFP - PARME NUR 00...,73...,74...,75... ERLAUBT'
         LA    R15,4009
         B     ABEND
A03      EQU   *
         CLC   PARMA+2(3),=C'000'
         BE    A04
         CLC   PARMA+2(3),=C'365'
         BNH   A04
         WTO   'SYSTSMFP - PARMA NUR ..000 BIS ..365 ERLAUBT'
         LA    R15,4010
         B     ABEND
A04      EQU   *
         CLC   PARME+2(3),=C'000'
         BE    A05
         CLC   PARME+2(3),=C'365'
         BNH   A05
         WTO   'SYSTSMFP - PARME NUR ..000 BIS ..365 ERLAUBT'
         LA    R15,4011
         B     ABEND
A05      EQU   *
         CLI   PARMP,C'T'
         BE    A09
         CLI   PARMP,C'L'
         BE    A06
         CLI   PARMP,C'V'
         BE    A07
         WTO   'SYSTSMFP - PARMP NUR T, L UND V ERLAUBT'
         LA    R15,4012
         B     ABEND
A06      EQU   *
* PARMP HARRT NOCH DER AUSFUEHRUNG ...
A07      EQU   *
A09      EQU   *
         PACK  ANFTAGP,PARMA(5)    ZUERST DAS VORGEGEBENE DATUM PACKEN
         PACK  ENDTAGP,PARME(5)    UND DAS ENDE AUCH
         CP    ANFTAGP,=P'0'       IST UEBERHAUPT EIN DATUM VORGEGEBEN
         BNE   A0
         TIME  DEC
         ST    R1,FW              DAS TAGESDATUM (00JJTTTC) ABSPEICHERN
         ZAP   ANFTAGP,FW          IN DAS ANFANGSDATUM STELLEN
         ZAP   ENDTAGP,FW          UND AUCH IN DAS ENDDDATUM
         MVI   KIND,C'P'          DIE DATUMSVORGABE IST GEPACKT
         CALL  SYSTCWTG,(KIND,ENDTAGP)
         CLI   KIND,C'0'          0 = SONNTAG
         BNE   *+10
         SP    ANFTAGP,=P'1'      DEN ANFTAGP IMMER AUF FREITAG
         CLI   KIND,C'1'          1 = MONTAG
         BNE   *+10
         SP    ANFTAGP,=P'2'
         SP    ANFTAGP,=P'1'
         SP    ENDTAGP,=P'1'
         OI    ENDTAGP+L'ENDTAGP-1,15
         OI    ANFTAGP+L'ANFTAGP-1,15
         B     A0
         EJECT
A0       EQU   *
         ZAP   ANFTAG,ANFTAGP
A6       EQU   *
         USING SMFDSECT,R11
         L     R11,=A(SMFREC)
         L     R2,=V(OSGMZZZ0)
         OPEN  ((R2),INPUT)
         L     R2,=V(OSPMZZZ9)
         OPEN  ((R2),OUTPUT)
         L     R2,=V(OSPMZZZ9)
         VERTEIL LINECNT=48,TEXT=AN1,DCBNAME=(R2),CODE=M
         BAL   R9,H0
A1       EQU   *
         L     R2,=V(OSGMZZZ0)
         GET   (R2),SMFREC
         AP    ZIN,=P'1'
A2       EQU   *+1
         NOP   A3
         MVC   ERSTER,SMF0RTY
A3       EQU   *
         CP    ANFTAGP,=P'0'      DAS IST AUCH KEINER
         BE    A5
         CLC   ANFTAGP,SMF0DTE
         BH    A1
         CLC   ENDTAGP,SMF0DTE
         BNL   A5
         B     A1
         EJECT
A5       EQU   *
         CLI   SMF0RTY,0
         BE    I0                 IPL-SATZ
         CLI   SMF1RTY,1
         BE    S0                 STATISTIC-SATZ
         CLI   PARMS,C'T'         WENN NUR TSO-SAETZE VERLANGT,
         BE    A4                 DANN KEINE SATZARTEN 4 + 5
         CLI   SMF4RTY,4
         BE    B0                 STEP-SATZ
         CLI   SMF5RTY,5
         BE    J0                 JOB-SATZ
A4       EQU   *
         CLI   SMF7RTY,7
         BE    D0                 DATA LOST-SATZ
         CLI   SMF12RTY,12
         BE    E0                 EOD-SATZ
         CLI   PARMS,C'B'         NUR BATCH-SAETZE VERLANGT
         BE    A1                 DANN KEINE TSO-SAETZE MOEGLICH
         CLI   TIVRCDTY,34
         BE    O0                 ONLINE-TSO-SAET E
         B     A1                 WEITER LESEN
         EJECT
A9       EQU   *
         MVI   C,9
         BAL   R10,P0
         L     R14,=A(TABTAGE)
A91      EQU   *
         CLI   0(R14),C'*'
         BE    A92
         CP    0(3,R14),SMF0DTE+1(3)
         BE    A93
         LA    R14,3(R14)
         B     A91
A92      EQU   *
         ZAP   0(3,R14),SMF0DTE+1(3)
         MVI   3(R14),C'*'
A93      EQU   *
         B     A1
         EJECT
*
* BATCH-STEP-EINZEL-SATZ
*
B0       EQU   *
         AP    ANZSTEPS,=P'1'
         ZAP   ERRLZ,=P'0'
         MVC   ERRLZ+5(60),ERRLZ
         CALL  RECHEN,((11),CBER)
         LA    R12,ERRLZ
         LA    R15,SERRLZ
         LA    R14,13
B1       EQU   *
         AP    0(8,R15),0(5,R12)
         LA    R15,8(R15)
         LA    R12,5(R12)
         BCT   R14,B1
         AP    QZAHL132,PZ
         AP    QZAHL142,BZ
         AP    QZAHL152,OZ
         AP    BATCHDM,SUMME
         B     A1
         EJECT
*
* DATA-LOST-SATZ
*
D0       EQU   *                  DATA LOST-SATZ
         MVC   D+109(9),=C'DATA LOST'
         LA    R15,SMF7TME
         BAL   R14,X0
         LA    R15,SMF7DTE
         BAL   R14,T0
         MVC   D(2),=C'07'
         B     A9
         EJECT
*
* EOD-SATZ
*
E0       EQU   *                  EOD-SATZ
         MVC   D+105(3),=C'EOD'
         MVI   EOD,255
         CLI   SMF12FLG,1          VS1-RECORD /Q
         BE    E1
         LA    R15,SMF12RGS
         BAL   R14,Y0
         MVC   D+82(6),=X'4020204B202120'
         ED    D+82(6),DW+5
         B     E4
E1       EQU   *
         MVC   D+109(3),=C'VS1'
E4       EQU   *
         LA    R15,SMF12PGR
         BAL   R14,Y0
         AP    SUMPREC,DW
         MVC   D+70(12),=X'402020204B2020204B202120'
         ED    D+70(12),DW+3
         L     R14,SMF12PGO
         CLI   SMF12FLG,1
         BE    E2
         A     R14,SMF12SOT
E2       EQU   *
         ST    R14,SMF12PGO
         LA    R15,SMF12PGO
         BAL   R14,Y0
         AP    SUMPOUT,DW
         MVC   D+63(12),=X'402020204B2020204B202120'
         ED    D+63(12),DW+3
         L     R14,SMF12PGI
         CLI   SMF12FLG,1
         BE    E3
         A     R14,SMF12SIN
E3       EQU   *
         ST    R14,SMF12PGI
         LA    R15,SMF12PGI
         BAL   R14,Y0
         AP    SUMPIN,DW
         MVC   D+56(12),=X'402020204B2020204B202120'
         ED    D+56(12),DW+3
         LA    R15,SMF12SWT
         BAL   R14,Y0
         MVC   D+23(20),=X'40202020204B2020204B2020204B2020206B2120'
         ED    D+23(20),DW        SYSTEM-WAIT-TIME
         AP    SUMWAIT,DW
         LA    R15,SMF12TME
         BAL   R14,X0
         LA    R15,SMF12DTE
         BAL   R14,T0
         CLI   SMF12FLG,1
         BE    E5
         L     R14,SMF12SIN
         CVD   R14,DW
         AP    QZAHL93,DW
         L     R14,SMF12SOT
         CVD   R14,DW
         AP    QZAHL103,DW
         L     R14,SMF12RGS       REGIONS SWAPPED
         CVD   R14,DW
         AP    QZAHL122,DW
E5       EQU   *
         MVC   D(2),=C'12'
         B     A9
         EJECT
*
* GESAMT-SUMMEN
*
         DC    F'0'
G0       EQU   *
         ST    R10,G0-4
         MVI   GSWITCH,255
         FILL  D,120,*
         BAL   R10,P0
         BAL   R10,P0
         LA    R14,TABUSER
G3       EQU   *
         CLI   0(R14),C'*'
         BE    G4
         AP    GANZJOBS,=P'1'     JEDER USER ZAEHLT ALS EIN JOB
         LA    R14,4(R14)
         B     G3
G4       EQU   *
         MVC   D+91(9),=X'4020204B2021205C5C'
         ED    D+91(7),GANZJOBS+5
         MVC   D+101(9),=C'JOBS/USER'
         MVC   D+70(14),=X'402020204B2020204B2021205C5C'
         ED    D+70(12),GSUMPREC+3
         MVC   D+56(14),=X'402020204B2020204B2021205C5C'
         ED    D+56(12),GSUMPIN+3
         MVC   D+32(22),=X'40202020204B2020204B2020204B2020206B21205C5C*
               '
         ED    D+32(20),GSUMCPU
         ZAP   QANFTAG,AANFTAG
         ZAP   QENDTAG,EENDTAG
         L     R14,EENDZEIT
         ST    R14,QENDZEIT
         L     R15,AANFZEIT
         ST    R15,QANFZEIT
         SR    R14,R15
         SP    EENDTAG,AANFTAG
G1       EQU   *
         CP    EENDTAG,=P'0'
         BNP   G2
         SP    EENDTAG,=P'1'
         A     R14,=F'8640000'
         B     G1
G2       EQU   *
         ST    R14,FW
         ST    R14,QMESSZT
         LA    R15,FW
         BAL   R14,X0
         MVC   DREIZEHN,D+10
         LA    R15,FW
         BAL   R14,Z0
         MVC   ZWANZIG,D+13
         MVC   D+16(20),ZWANZIG
         MVC   D+8(13),DREIZEHN
         MVC   D(8),=C'MESSZEIT'
         BAL   R10,P0
         BAL   R10,P0
         AP    GANZSTEP,QZAHL143  ALLE TSO-SESSIONEN GELTEN ALS STEP
         MVC   D+96(9),=X'4020204B2021205C5C'
         ED    D+96(7),GANZSTEP+5
         MVC   D+106(14),=C'STEPS/SESSIONS'
         MVC   D+77(14),=X'402020204B2020204B2021205C5C'
         ED    D+77(14),QZAHL122+3 ANZAHL REGIONS SWAPPED OUT
         MVC   D+63(14),=X'402020204B2020204B2021205C5C'
         ED    D+63(12),GSUMPOUT+3
         MVC   D+41(22),=X'40202020204B2020204B2020204B2020206B21205C5C*
               '
         ED    D+41(20),GSUMSYS
         MVC   D+27(22),=X'40202020204B2020204B2020204B2020206B21205C5C*
               '
         ED    D+27(20),GSUMWAIT
         CVB   R14,GSUMUPZT
         ZAP   QSUMUPZT,GSUMUPZT
         ZAP   QSUMCPU,GSUMCPU
         ZAP   QSUMWAIT,GSUMWAIT
         ZAP   QSUMSYS,GSUMSYS
         ST    R14,FW
         ST    R14,QACCTZT
         LA    R15,FW
         BAL   R14,X0
         MVC   DREIZEHN,D+10
         MVC   D+16(20),=X'40202020204B2020204B2020204B2020206B2120'
         ED    D+16(20),GSUMUPZT
         MVC   D+8(13),DREIZEHN
         MVC   D(8),=C'ACCTZEIT'
         BAL   R10,P0
         BAL   R10,P0
         MVC   D(23),=C'***  DURCHSCHNITTE  ***'
         CVGLEIT GKTAB1,DEZTAB1
         LD    FPR0,FSUMUPZT
         LD    FPR2,FSUMWAIT
         MD    FPR2,DZEHN
         LTDR  FPR0,FPR0
         BZ    *+6
         DDR   FPR2,FPR0
         STD   FPR2,FSUMWAIT
         LD    FPR4,FSUMCPU
         MD    FPR4,DZEHN
         LTDR  FPR0,FPR0
         BZ    *+6
         DDR   FPR4,FPR0
         STD   FPR4,FSUMCPU
         LD    FPR6,FSUMSYS
         MD    FPR6,DZEHN
         LTDR  FPR0,FPR0
         BZ    *+6
         DDR   FPR6,FPR0
         STD   FPR6,FSUMSYS
         LD    FPR0,=D'10000'
         STD   FPR0,FSUMUPZT
         SDR   FPR0,FPR2
         SDR   FPR0,FPR4
         SDR   FPR0,FPR6
         STD   FPR0,FSUMDIF
         CVDEZ DEZTAB1,GKTAB1
         MVC   D+27(9),=X'402021204B2020406C'
         ED    D+27(7),GSUMUPZT+5
         MVC   D+36(9),=X'402021206B2020406C'
         ED    D+36(7),GSUMWAIT+5
         MVC   D+45(9),=X'402021206B2020406C'
         ED    D+45(7),GSUMCPU+5
         MVC   D+54(9),=X'402021206B2020406C'
         SP    GSUMUPZT,GSUMWAIT
         SP    GSUMUPZT,GSUMCPU
         ED    D+54(7),GSUMUPZT+5
         BAL   R10,P0
         BAL   R10,P0
         FILL  D,120,*
         BAL   R10,P0
         MVI   C,139
         BAL   R10,P0
         ZAP   ZZ,=P'0'
         L     R10,G0-4
         BR    R10
         EJECT
*
* HEAD-KOPF-UEBERSCHRIFT-AUFBEREITUNG
*
         DC    F'0'
H0       EQU   *
         ST    R9,H0-4
         ZAP   ZZ,=P'0'
         MVI   C,139
         BAL   R10,P0
         AP    SZ,=P'1'
         OI    SZ+L'SZ-1,15
         UNPK  HEADTEXT+117(3),SZ+1(2)
         MVI   C,17
         MVC   D(120),HEADTEXT
         MVC   D+14(8),DATUM
         BAL   R10,P0
         AP    ZZ,=P'2'
         MVC   D(120),HEADTXT2
         MVI   C,17
         BAL   R10,P0
         L     R9,H0-4
         BR    R9
         EJECT
*
* IPL-SATZ
*
I0       EQU   *
         CP    ANFTAG,=P'0'
         BNE   I1
         LA    R15,SMF0DTE
         BAL   R14,T0
I1       EQU   *
         BAL   R10,U0             ERSTMAL UNTERSUMMEN FESTSTELLEN
         MVC   D+105(3),=C'IPL'
         CLI   SMF0FLG,1
         BNE   *+10
         MVC   D+109(3),=C'VS1'
         AP    ANZIPL,=P'1'
         LA    R15,SMF0TME
         BAL   R14,X0
         LA    R15,SMF0DTE
         BAL   R14,T0
         CLC   KREAL,SMF0RST
         BNL   *+10
         MVC   KREAL,SMF0RST
         MVC   D(2),=C'00'
         B     A9
         EJECT
*
* JOB STATISTIC SATZ
*
J0       EQU   *                  JOB-SATZ
         AP    ANZJOBS,=P'1'
         MVC   D+90(8),SMF5JBN
         XR    R1,R1
         IC    R1,SMF5NST         ANZAHL STEPS
         CVD   R1,DW
         MVC   D+100(4),=X'40202120'
         ED    D+100(4),DW+6
         AP    ANZSTEPS,DW
         MVC   HW,SMF5JCC         JOB COMPLETION CODE
         LH    R1,HW
         LTR   R1,R1
         BZ    J4                 WEDER RC NOCH CC
         TM    SMF5JBTI,2
         BO    J6                 IRGENDEIN ABEND
         B     J7                 NORMAL RETURN
J6       EQU   *
         AP    ANZABEND,=P'1'
         TM    HW,128
         BO    J2                 USER ERROR
         B     J3                 SYSTEM ERROR
J2       EQU   *                  USER ERROR
         MVC   D+114(2),=C'U='
         NI    HW,15
         LH    R1,HW
         CVD   R1,DW
         OI    DW+7,15
         UNPK  D+116(4),DW+5(3)
         B     J4
J3       EQU   *                  SYSTEM ABEND
         MVC   D+109(2),=C'S='
J8       EQU   *
         RAUF  R1,DW
         MVC   D+111(3),DW+5
         B     J4
J7       EQU   *
         MVC   D+111(3),=C'RC='
         RAUF  R1,DW
         MVC   D+114(4),DW+4
J4       EQU   *
         XC    FW,FW
         LA    R2,SMF5JCPU
         MVC   FW+1(3),0(R2)
         L     R2,FW
         CVD   R2,DW
         CLI   ERSTER,0
J01      EQU   *+1
         BNE   J1
         AP    SUMCPU,DW
         AP    QZAHL51,DW         BATCH-CPU-ZEIT
J1       EQU   *
         MVI   J01,0
         MVC   D+32(20),=X'40202020204B2020204B2020204B2020206B2120'
         ED    D+32(20),DW
         L     R2,SMF5JIT   JOB-INITIATION-TIME
         L     R1,SMF5TME   JOB-ENDING-TIME
         CR    R2,R1
         BNL   J5
         SR    R1,R2
         ST    R1,FW
         CVD   R1,DW
         AP    SUMRUN,DW
J5       EQU   *
         LA    R15,FW
         BAL   R14,Z0             ZEIT-UMRECHNUNG
         LA    R15,SMF5TME
         BAL   R14,X0             UMRECHNUNG ZEIT IN SSMMHH,ZH
         LA    R15,SMF5DTE
         BAL   R14,T0
         MVC   D(2),=C'05'
         B     A9
         EJECT
*
* ONLINE-SESSIONS (TSO-JOBS)
*
O0       EQU   *
         MVC   HW,TIVSTAT         SESSION COMPLETION CODE
         LH    R1,HW
         LTR   R1,R1
         BZ    O1                 KEIN FEHLER
         TM    TIVSTI,2
         BO    O3                 ABEND
         B     O4                 NORMAL RETURN
O3       EQU   *                  ABEND
         TM    HW,128
         BO    O7                 USER ERROR
         B     O5                 SYSTEM ERROR
O4       EQU   *                  RETURN CODE
         MVC   D+111(3),=C'RC='
         RAUF  R1,DW
         MVC   D+114(4),DW+4
         B     O1
O7       EQU   *                  USER ERROR
         MVC   D+114(2),=C'U='
         NI    HW,15
         LH    R1,HW
         CVD   R1,DW
         OI    DW+7,15
         UNPK  D+116(4),DW+5(3)
         B     O1
O5       EQU   *                  SYSTEM ERROR
         MVC   D+109(2),=C'S='
         RAUF  R1,DW
         MVC   D+111(3),DW+5
         B     O1
O1       EQU   *
         L     R14,TIVINCT
         CVD   R14,DW
         AP    TGETS,DW
         L     R14,TIVOUTCT
         CVD   R14,DW
         AP    TPUTS,DW
         MVC   D+90(8),TIVUID
         LA    R2,TIVVAR
         AH    R2,TIVVAR
         XC    FW,FW
         MVC   FW+1(3),1(R2)
         L     R2,FW
         CVD   R2,DW
         AP    SUMCPU,DW
         AP    QZAHL61,DW         ONLINE-CPU-ZEIT
         MVC   D+32(20),=X'40202020204B2020204B2020204B2020206B2120'
         ED    D+32(20),DW
         L     R14,TIVRCDTS
         L     R15,TIVONTME
         CR    R14,R15
         BNL   O78
         A     R14,=F'8640000'
O78      EQU   *
         SR    R14,R15
         CVD   R14,DW
         ZAP   DW,DW
         BNP   O79
         AP    QZAHL133,DW
         AP    SUMRUN,DW
O79      EQU   *
         ST    R14,FW
         LA    R15,FW
         BAL   R14,Z0             ZEIT-UMRECHNUNG
         LA    R15,TIVRCDTS
         BAL   R14,X0
         LA    R15,TIVRCDTE
         BAL   R14,T0
         MVC   D(2),=C'34'
         AP    QZAHL143,=P'1'     ANZAHL TSO-SITZUNGEN
         LA    R14,TABUSER
O80      EQU   *
         CLC   0(4,R14),TIVUID
         BE    O89                USER SCHON VORHANDEN
         CLI   0(R14),C'*'
         BE    O81
         LA    R14,4(R14)
         B     O80
O81      EQU   *
         CLI   1(R14),C'$'
         BE    O89
         MVC   0(4,R14),TIVUID
         MVI   4(R14),C'*'
O89      EQU   *
         ZAP   ERRLZ,=P'0'
         MVC   ERRLZ+5(60),ERRLZ
         CALL  RECHEN,((11),CBER)
         LA    R12,ERRLZ
         LA    R15,SERRLZ
         LA    R14,13
O891     EQU   *
         AP    0(8,R15),0(5,R12)
         LA    R15,8(R15)
         LA    R12,5(R12)
         BCT   R14,O891
         AP    QZAHL132,PZ
         AP    QZAHL142,BZ
         AP    QZAHL152,OZ
         AP    TSODM,SUMME
         B     A9
         EJECT
*
* PRINTER DRUCKEN
*
         DC    F'0'
P0       EQU   *
         CLI   PARMV,C'G'         NUR GESAMTBLATT VERLANGT
         BNE   P1
         CLI   GSWITCH,255        WENN JA, SCHON GESAMTBLATT ERREICHT
         BNE   P9
P1       EQU   *
         CLI   QSWITCH,255
         BNE   P2
         MVC   D1(120),D
         FILL  D,120
         MVC   D+5(110),D1
         L     R2,=V(OSPMZZZ8)
         B     P3
P2       EQU   *
         L     R2,=V(OSPMZZZ9)
P3       EQU   *
         PUT   (R2),C
         FILL  D,120
         MVI   C,9
         AP    ZOUT,=P'1'
         AP    ZZ,=P'1'
         CP    ZZ,=P'43'
         BNHR  R10
         ST    R10,P0-4
         BAL   R9,H0
         L     R10,P0-4
P9       EQU   *
         BR    R10
         EJECT
*
* NEUES BUERO - REPORT-SEITE - GANZ NEU, GANZ HEISS, GANZ FETTICH
*
         DC    F'0'
Q0       EQU   *
         ST    R10,Q0-4
         MVI   QSWITCH,255
         L     R14,=A(TABTAGE)
Q00      EQU   *
         CLI   0(R14),C'*'
         BE    Q001
         LA    R14,3(R14)
         AP    QZAHL03,=P'1'      ANZAHL ARBEITSTAGE
         B     Q00
Q001     EQU   *
         ZAP   QZAHL04,SSUMME
         ZAP   QZAHL01,QENDTAG
         SP    QZAHL01,QANFTAG
         AP    QZAHL01,=P'1'      ANZAHL DR TAGE
         ZAP   QZAHL02,ANZIPL     ANZAHL DER IPL'S
         L     R14,EENDZEIT
         L     R15,AANFZEIT
         SR    R14,R15
         CVD   R14,DW
         ZAP   VIER,QENDTAG
         SP    VIER,QANFTAG
Q01      EQU   *
         CP    VIER,=P'0'
         BNP   Q02
         SP    VIER,=P'1'
         AP    DW,=P'8640000'     SOVIELE HUNDERTSTEL SEK HAT EIN TAG
         B     Q01
Q02      EQU   *
         ZAP   QZAHL11,DW         MESSZEIT
         ZAP   QZAHL31,QSUMUPZT   ACCTZEIT
         ZAP   QZAHL21,QZAHL11
         SP    QZAHL21,QZAHL31    LEERZEIT
         ZAP   QZAHL41,QSUMCPU    CPU-ZEIT
         ZAP   QZAHL51,QZAHL51    BATCH-ZEIT
         ZAP   QZAHL61,QZAHL61    TSO-ZEIT
         ZAP   QZAHL71,QSUMWAIT   WAITZEIT
         ZAP   QZAHL81,QSUMSYS    OVERHEAD
         ZAP   QZAHL91,GANZJOBS
         SP    QZAHL91,ANZABEND   ANZAHL JOBS NORMAL ENDED
         ZAP   QZAHL93,GSUMPIN    ANZAHL PAGES IN
         ZAP   QZAHL101,ANZABEND  ANZAHL JOBS ABNORMAL ENDED
         ZAP   QZAHL103,GSUMPOUT  ANZAHL PAGES OUT
         ZAP   QZAHL111,GANZJOBS  ANZAHL NOBS GESAMT
         ZAP   QZAHL113,GSUMPREC
         ZAP   QZAHL121,GANZSTEP  ANZAHL STEPS
         LA    R14,TABUSER
Q10      EQU   *
         CLI   0(R14),C'*'
         BE    Q19
         AP    QZAHL144,=P'1'
         LA    R14,4(R14)
         B     Q10
         EJECT
*********************************************************************
* UND HIER DIE UMWANDLUNG IN FLIESSPUNKTALGORITHMIERBARE ZAHLEN
*********************************************************************
         SPACE
Q19      EQU   *
         CVGLEIT GKTAB2,DEZTAB2
         CVGLEIT GKTAB3,DEZTAB3
         CVGLEIT GKTABF,DEZTABF
         CVGLEIT GKTAB4,DEZTAB4
         CVGLEIT GKTAB5,DEZTAB5
         CVGLEIT GKTAB6,DEZTAB6
         CVGLEIT GKTAB7,DEZTAB7
         CVGLEIT GKTAB8,DEZTAB8
         CVGLEIT GKTAB9,DEZTAB9
         CVGLEIT GKTABA,DEZTABA
         CVGLEIT GKTABB,DEZTABB
         CVGLEIT GKTABC,DEZTABC
         CVGLEIT GKTABD,DEZTABD
         CVGLEIT GKTABE,DEZTABE
         CVGLEIT GKTABG,DEZTABG
         CVGLEIT GKTABH,DEZTABH
         B     Q20
          EJECT
*****************************************************************
* HIER FOLGEN DIE FLIESSPUNKT-BEFEHLE
*****************************************************************
         SPACE
*
Q20      EQU   *
         LD    FPR6,GZAHL93
         LD    FPR4,GZAHL103
         LD    FPR2,GZAHL113
         LDR   FPR0,FPR6
         ADR   FPR0,FPR4
         ADR   FPR0,FPR2
         MD    FPR6,DTAUSEND
         MD    FPR4,DTAUSEND
         MD    FPR2,DTAUSEND
         LTDR  FPR0,FPR0
         BZ    *+10
         DDR   FPR6,FPR0
         DDR   FPR4,FPR0
         DDR   FPR2,FPR0
         STD   FPR6,GZAHL94       ANTEIL PAGES IN AN PAGEREI
         STD   FPR4,GZAHL104      ANTEIL PAGES OUT AN PAGEREI
         STD   FPR2,GZAHL114      ANTEIL PAGES REC AN PAGEREI
*
         LD    FPR2,GZAHL01
         LD    FPR0,GZAHL121
         LTDR  FPR2,FPR2
         BZ    *+6
         DDR   FPR0,FPR2
         STD   FPR0,GZAHL141      STEPS / TAG
*
         LD    FPR2,GZAHL01
         LD    FPR0,GZAHL111
         LTDR  FPR2,FPR2
         BZ    *+6
         DDR   FPR0,FPR2
         STD   FPR0,GZAHL131      JOBS / TAG
*
         LD    FPR0,GZAHL111
         LD    FPR2,GZAHL121
         MD    FPR2,=D'10'
         LTDR  FPR0,FPR0
         BE    *+6
         DDR   FPR2,FPR0
         STD   FPR2,GZAHL151      STEPS / JOB
*
         LD    FPR0,GZAHL101
         MD    FPR0,DZEHNTSD
         LD    FPR6,GZAHL111
         LTDR  FPR6,FPR6
         BZ    *+6
         DDR   FPR0,FPR6
         STD   FPR0,GZAHL102      PROZENT ABNORMAL ENDED JOBS
*
         LD    FPR0,GZAHL91
         MD    FPR0,DZEHNTSD
         LTDR  FPR6,FPR6
         BZ    *+6
         DDR   FPR0,FPR6
         STD   FPR0,GZAHL92       ANTEIL JOBS NORMAL ENDED
*
         LD    FPR2,GZAHL01
         LD    FPR4,GZAHL02
         MD    FPR4,=D'10'
         LTDR  FPR2,FPR2
         BZ    *+6
         DDR   FPR4,FPR2
         STD   FPR4,GZAHL162      IPL'S PRO TAG
*
         LD    FPR2,GZAHL11
         LD    FPR0,GZAHL21
         MD    FPR0,DZEHNTSD
         LTDR  FPR2,FPR2
         BZ    *+6
         DDR   FPR0,FPR2
         STD   FPR0,GZAHL23       ANTEIL LERRZEIT AN MESSZEIT
*
         LD    FPR2,GZAHL11
         LD    FPR0,GZAHL31
         MD    FPR0,DZEHNTSD
         LTDR  FPR2,FPR2
         BZ    *+6
         DDR   FPR0,FPR2
         STD   FPR0,GZAHL33       ANTEIL ACCTZEIT AN MESSZEIT
*
         LD    FPR2,GZAHL11
         LD    FPR0,GZAHL41
         MD    FPR0,DZEHNTSD
         LTDR  FPR2,FPR2
         BZ    *+6
         DDR   FPR0,FPR2
         STD   FPR0,GZAHL43       ANTEIL CPU-ZEIT AN MESSZEIT
*
         LD    FPR2,GZAHL11
         LD    FPR0,GZAHL71
         MD    FPR0,DZEHNTSD
         LTDR  FPR2,FPR2
         BZ    *+6
         DDR   FPR0,FPR2
         STD   FPR0,GZAHL73       ANTEIL WAITZEIT AN MESSZEIT
*
         LD    FPR2,GZAHL11
         LD    FPR0,GZAHL81
         MD    FPR0,DZEHNTSD
         LTDR  FPR2,FPR2
         BZ    *+6
         DDR   FPR0,FPR2
         STD   FPR0,GZAHL83       ANTEIL OVERHEAD AN MESSZEIT
*
         LD    FPR2,GZAHL31
         LD    FPR0,GZAHL41
         MD    FPR0,DZEHNTSD
         LTDR  FPR2,FPR2
         BZ    *+6
         DDR   FPR0,FPR2
         STD   FPR0,GZAHL44       ANTEIL CPU-ZEIT AN ACCTZEIT
*
         LD    FPR2,GZAHL31
         LD    FPR0,GZAHL71
         MD    FPR0,DZEHNTSD
         LTDR  FPR2,FPR2
         BZ    *+6
         DDR   FPR0,FPR2
         STD   FPR0,GZAHL74       ANTEIL WAITZEIT AN ACCTZEIT
*
         LD    FPR2,GZAHL31
         LD    FPR0,GZAHL81
         MD    FPR0,DZEHNTSD
         LTDR  FPR2,FPR2
         BZ    *+6
         DDR   FPR0,FPR2
         STD   FPR0,GZAHL84       ANTEIL OVERHEAD AN ACCTZEIT
*
         LD    FPR2,GZAHL41
         LD    FPR0,GZAHL51
         MD    FPR0,DZEHNTSD
         LTDR  FPR2,FPR2
         BZ    *+6
         DDR   FPR0,FPR2
         STD   FPR0,GZAHL53       ANTEIL BATCH AN CPU-ZEIT
*
         LD    FPR2,GZAHL41
         LD    FPR0,GZAHL61
         MD    FPR0,DZEHNTSD
         LTDR  FPR2,FPR2
         BZ    *+6
         DDR   FPR0,FPR2
         STD   FPR0,GZAHL63       ANTEIL TSO AN CPU-ZEIT
*
         LD    FPR0,GZAHL31
         LD    FPR2,GZAHL02
         LTDR  FPR2,FPR2
         BZ    *+6
         DDR   FPR0,FPR2
         STD   FPR0,GZAHL161      MITTLERE IPL-ZEIT
*
         LD    FPR4,GZAHL93
         MD    FPR4,=D'1000'
         LD    FPR6,GZAHL31
         LTDR  FPR6,FPR6
         BZ    *+6
         DDR   FPR4,FPR6
         STD   FPR4,GZAHL153      MITTLERES PAGE-IN/SEK
*
         LD    FPR4,GZAHL103
         MD    FPR4,=D'1000'
         LD    FPR6,GZAHL31
         LTDR  FPR6,FPR6
         BZ    *+6
         DDR   FPR4,FPR6
         STD   FPR4,GZAHL163      MITTLERES PAGE-OUT/SEK
*
         LD    FPR2,GZAHL133
         LD    FPR4,GZAHL143
         LTDR  FPR4,FPR4
         BZ    *+6
         DDR   FPR2,FPR4
         STD   FPR2,GZAHL134      DURCHSCHNITTLICHE SESSION-TIME
*
         LD    FPR2,GZAHL171
         LD    FPR4,GZAHL31
         MD    FPR2,=D'100'
         LTDR  FPR4,FPR4
         BZ    *+6
         DDR   FPR2,FPR4
         STD   FPR2,GZAHL172      MULTI-PROG-FAKTOR (RUN/ACCT-ZT)
*
         EJECT
*
*
* UND HIER DIE RUECK-CONVERSIONEN IN DEZIMAL-ARITHMETIK
*
*
         CVDEZ DEZTAB2,GKTAB2
         CVDEZ DEZTAB3,GKTAB3
         CVDEZ DEZTABF,GKTABF
         CVDEZ DEZTAB4,GKTAB4
         CVDEZ DEZTAB5,GKTAB5
         CVDEZ DEZTAB6,GKTAB6
         CVDEZ DEZTAB7,GKTAB7
         CVDEZ DEZTAB8,GKTAB8
         CVDEZ DEZTAB9,GKTAB9
         CVDEZ DEZTABA,GKTABA
         CVDEZ DEZTABB,GKTABB
         CVDEZ DEZTABC,GKTABC
         CVDEZ DEZTABD,GKTABD
         CVDEZ DEZTABE,GKTABE
         CVDEZ DEZTABG,GKTABG
         CVDEZ DEZTABH,GKTABH
*
         EJECT
*********************************************************************
* HIER FOLGT DIE AUFBEREITUNG DER EINEN WICHTIGEN SEITE
*********************************************************************
         SPACE
         MVI   C,25
         BAL   R10,P0
         FILL  D,110,*
         BAL   R10,P0             ZEILE 4
*--------------------------------------------------------------------*
         BAL   R14,V0
         BAL   R10,P0             ZEILE 5
*--------------------------------------------------------------------*
         MVC   D(110),TEXT1
         L     R14,KREAL
         CVD   R14,DW
         MVC   RF21(20),=X'402020204B2020204B2020204B2020204B202120'
         ED    RF21(20),DW
         MVC   D+97(5),RF21+15
         BAL   R10,P0             ZEILE 6
*--------------------------------------------------------------------*
         BAL   R14,V0
         BAL   R10,P0       ZEILE 7
*--------------------------------------------------------------------*
         MVC   D+2(108),=C'BERICHTSZEITRAUM  XX.XX.XX  BIS  XX.XX.XX = *
               X.XXX TAGE - (X.XXX ARBEITSTAGE) - X.XXX IPL''S - X.XXX.X
               XXX,XX   '
         LA    R15,QANFTAG
         BAL   R14,T0
         MVC   D+20(8),D+3
         LA    R15,QENDTAG
         BAL   R14,T0
         MVC   D+35(8),D+3
         MVC   D+3(8),=C'ERICHTSZ'
         ZAP   VIER,QENDTAG
         SP    VIER,QANFTAG
         AP    VIER,=P'1'
         MVC   D+44(7),=X'4020204B202120'
         ED    D+44(7),VIER+1     TAGE
         MVI   D+44,C'='
         MVC   D+58(7),=X'4020204B202120'
         ED    D+58(7),QZAHL03+5  ARBEITSTAGE
         MVI   D+59,C'('
         MVC   D+79(7),=X'4020204B202120'
         ED    D+79(7),ANZIPL+5   ANZAHL IPLS
         MVI   D+79,C'-'
         MVC   D+92(13),=X'40204B2020204B2021206B2020'
         ED    D+92(13),SSUMME+3  DM GESAMT
         MVI   D+92,C'*'
         MVC   D+105(3),=C' **'
         BAL   R14,V0
         BAL   R10,P0       ZEILE 8
*--------------------------------------------------------------------*
         BAL   R14,V0
         BAL   R10,P0       ZEILE 9
*--------------------------------------------------------------------*
         CVB   R14,QZAHL11
         ST    R14,FW
         LA    R15,FW
         BAL   R14,Z0
         MVC   D+35(20),D+13
         LA    R15,FW
         BAL   R14,X0
         MVC   DREIZEHN,D+10
         FILL  D,34
         MVC   D+2(12),=C'(A) MESSZEIT'
         MVC   D+17(13),DREIZEHN
         MVC   D+30(6),=C' STD ='
         MVC   D+55(7),=C' SEK   '
         MVC   D+62(8),=C'100,00 %'
         BAL   R14,V0
         BAL   R10,P0       ZEILE 10
*--------------------------------------------------------------------*
         BAL   R14,V0
         BAL   R10,P0       ZEILE 11
*--------------------------------------------------------------------*
         CVB   R14,QZAHL21
         ST    R14,FW
         LA    R15,FW
         BAL   R14,Z0
         MVC   D+35(20),D+13
         LA    R15,FW
         BAL   R14,X0
         MVC   DREIZEHN,D+10
         FILL  D,34
         MVC   D+2(12),=C'(B) LEERZEIT'
         MVC   D+17(13),DREIZEHN
         MVC   D+30(6),=C' STD ='
         MVC   D+55(7),=C' SEK   '
         MVC   D+61(9),=X'402020216B2020406C'
         ED    D+61(7),QZAHL23+5
         BAL   R14,V0
         BAL   R10,P0       ZEILE 12
*--------------------------------------------------------------------*
         BAL   R14,V0
         BAL   R10,P0       ZEILE 13
*--------------------------------------------------------------------*
         CVB   R14,QZAHL31
         ST    R14,FW
         LA    R15,FW
         BAL   R14,Z0
         MVC   D+35(20),D+13
         LA    R15,FW
         BAL   R14,X0
         MVC   DREIZEHN,D+10
         FILL  D,34
         MVC   D+2(12),=C'(C) ACCTZEIT'
         MVC   D+17(13),DREIZEHN
         MVC   D+30(6),=C' STD ='
         MVC   D+55(7),=C' SEK   '
         MVC   D+61(9),=X'402020216B2020406C'
         ED    D+61(7),QZAHL33+5
         MVC   D+72(8),=C'100,00 %'
         BAL   R14,V0
         BAL   R10,P0       ZEILE 14
*--------------------------------------------------------------------*
         BAL   R14,V0
         BAL   R10,P0       ZEILE 15
*--------------------------------------------------------------------*
         CVB   R14,QZAHL41
         ST    R14,FW
         LA    R15,FW
         BAL   R14,Z0
         MVC   D+35(20),D+13
         LA    R15,FW
         BAL   R14,X0
         MVC   DREIZEHN,D+10
         FILL  D,34
         MVC   D+2(12),=C'(D) CPU-ZEIT'
         MVC   D+17(13),DREIZEHN
         MVC   D+30(6),=C' STD ='
         MVC   D+55(7),=C' SEK   '
         MVC   D+61(9),=X'402020216B2020406C'
         ED    D+61(7),QZAHL43+5
         MVC   D+71(9),=X'402020216B2020406C'
         ED    D+71(7),QZAHL44+5
         MVC   D+82(8),=C'100,00 %'
         BAL   R14,V0
         BAL   R10,P0       ZEILE 16
*--------------------------------------------------------------------*
         BAL   R14,V0
         BAL   R10,P0       ZEILE 17
*--------------------------------------------------------------------*
         CVB   R14,QZAHL51
         ST    R14,FW
         LA    R15,FW
         BAL   R14,Z0
         MVC   D+35(20),D+13
         LA    R15,FW
         BAL   R14,X0
         MVC   DREIZEHN,D+10
         FILL  D,34
         MVC   D+2(15),=C'     (E) BATCH '
         MVC   D+17(13),DREIZEHN
         MVC   D+30(6),=C' STD ='
         MVC   D+55(7),=C' SEK   '
         MVC   D+81(9),=X'402020216B2020406C'
         ED    D+81(7),QZAHL53+5
         BAL   R14,V0
         BAL   R10,P0       ZEILE 18
*--------------------------------------------------------------------*
         CVB   R14,QZAHL61
         ST    R14,FW
         LA    R15,FW
         BAL   R14,Z0
         MVC   D+35(20),D+13
         LA    R15,FW
         BAL   R14,X0
         MVC   DREIZEHN,D+10
         FILL  D,34
         MVC   D+2(15),=C'     (F) TSO   '
         MVC   D+17(13),DREIZEHN
         MVC   D+30(6),=C' STD ='
         MVC   D+55(7),=C' SEK   '
         MVC   D+81(9),=X'402020216B2020406C'
         ED    D+81(7),QZAHL63+5
         BAL   R14,V0
         BAL   R10,P0       ZEILE 19
*--------------------------------------------------------------------*
         BAL   R14,V0
         BAL   R10,P0       ZEILE 20
*--------------------------------------------------------------------*
         CVB   R14,QZAHL71
         ST    R14,FW
         LA    R15,FW
         BAL   R14,Z0
         MVC   D+35(20),D+13
         LA    R15,FW
         BAL   R14,X0
         MVC   DREIZEHN,D+10
         FILL  D,34
         MVC   D+2(12),=C'(G) WAITZEIT'
         MVC   D+17(13),DREIZEHN
         MVC   D+30(6),=C' STD ='
         MVC   D+55(7),=C' SEK   '
         MVC   D+61(9),=X'402020216B2020406C'
         ED    D+61(7),QZAHL73+5
         MVC   D+71(9),=X'402020216B2020406C'
         ED    D+71(7),QZAHL74+5
         BAL   R14,V0
         BAL   R10,P0       ZEILE 21
*--------------------------------------------------------------------*
         BAL   R14,V0
         BAL   R10,P0       ZEILE 22
*--------------------------------------------------------------------*
         CVB   R14,QZAHL81
         ST    R14,FW
         LA    R15,FW
         BAL   R14,Z0
         MVC   D+35(20),D+13
         LA    R15,FW
         BAL   R14,X0
         MVC   DREIZEHN,D+10
         FILL  D,34
         MVC   D+2(12),=C'(H) OVERHEAD'
         MVC   D+17(13),DREIZEHN
         MVC   D+30(6),=C' STD ='
         MVC   D+55(7),=C' SEK   '
         MVC   D+61(9),=X'402020216B2020406C'
         ED    D+61(7),QZAHL83+5
         MVC   D+71(9),=X'402020216B2020406C'
         ED    D+71(7),QZAHL84+5
         BAL   R14,V0
         BAL   R10,P0       ZEILE 23
*--------------------------------------------------------------------*
         BAL   R14,V0
         BAL   R10,P0       ZEILE 24
*--------------------------------------------------------------------*
         FILL  D+2,106,=
         BAL   R14,V0
         BAL   R10,P0       ZEILE 25
*--------------------------------------------------------------------*
         FILL  D+2,58,+
         FILL  D+63,45,+
         MVI   D+61,C'I'
         BAL   R14,V0
         BAL   R10,P0       ZEILE 26
*--------------------------------------------------------------------*
         MVC   D+2(37),=C'ANZAHL DER JOBS  MIT NORMALEM ENDE   '
         MVC   D+39(10),=X'40204B2020204B202120'
         ED    D+39(10),QZAHL91+4
         MVC   D+51(9),=X'402021206B2020406C'
         ED    D+51(7),QZAHL92+5
         MVI   D+50,C'='
         MVI   D+61,C'I'
         MVC   D+63(17),=C'ANZAHL PAGES IN  '
         MVC   D+78(20),=X'402020204B2020204B2020204B2020204B202120'
         ED    D+78(20),QZAHL93   PAGES IN
         MVC   D+101(7),=X'4020216B20406C'
         ED    D+101(5),QZAHL94+6
         MVI   D+99,C'='
         BAL   R14,V0
         BAL   R10,P0       ZEILE 27
*--------------------------------------------------------------------*
         MVI   D+61,C'I'
         MVC   D+2(37),=C'ANZAHL DER JOBS  MIT ABNORMALEM ENDE '
         MVC   D+39(10),=X'40204B2020204B202120'
         ED    D+39(10),QZAHL101+4
         MVC   D+51(9),=X'402021206B2020406C'
         ED    D+51(7),QZAHL102+5
         MVI   D+50,C'='
         MVC   D+78(20),=X'402020204B2020204B2020204B2020204B202120'
         ED    D+78(20),QZAHL103  PAGES OUT
         MVC   D+63(17),=C'ANZAHL PAGES OUT '
         MVC   D+101(7),=X'4020216B20406C'
         ED    D+101(5),QZAHL104+6
         MVI   D+99,C'='
         BAL   R14,V0
         BAL   R10,P0       ZEILE 28
*--------------------------------------------------------------------*
         MVI   D+61,C'I'
         FILL  D+39,21,-
         MVC   D+78(20),=X'402020204B2020204B2020204B2020204B202120'
         ED    D+78(20),QZAHL113  PAGES REC
         MVC   D+63(17),=C'ANZAHL PAGES REC '
         MVC   D+101(7),=X'4020216B20406C'
         ED    D+101(5),QZAHL114+6
         MVI   D+99,C'='
         BAL   R14,V0
         BAL   R10,P0       ZEILE 29
*--------------------------------------------------------------------*
         MVI   D+61,C'I'
         MVC   D+2(37),=C'ANZAHL DER JOBS  IM BERICHTSZEITRAUM '
         MVC   D+39(10),=X'40204B2020204B202120'
         ED    D+39(10),QZAHL111+4
         MVC   D+52(8),=C'100,00 %'
         MVI   D+50,C'='
         FILL  D+87,21,-
         BAL   R14,V0
         BAL   R10,P0       ZEILE 30
*--------------------------------------------------------------------*
         FILL  D+2,58,+
         MVI   D+61,C'I'
         AP    QZAHL103,QZAHL93
         AP    QZAHL103,QZAHL113
         MVC   D+78(20),=X'402020204B2020204B2020204B2020204B202120'
         ED    D+78(20),QZAHL103
         MVC   D+63(19),=C'ANZAHL PAGES GESAMT'
         MVI   D+99,C'='
         MVC   D+101(7),=C'100,0 %'
         BAL   R14,V0
         BAL   R10,P0       ZEILE 31
*--------------------------------------------------------------------*
         MVC   D+2(37),=C'ANZAHL DER STEPS IM BERICHTSZEITRAUM '
         MVC   D+39(10),=X'40204B2020204B202120'
         ED    D+39(10),QZAHL121+4
         MVI   D+61,C'I'
         FILL  D+63,45,+
         BAL   R14,V0
         BAL   R10,P0       ZEILE 32
*--------------------------------------------------------------------*
         FILL  D+2,58,+
         MVI   D+61,C'I'
         MVC   D+78(20),=X'402020204B2020204B2020204B2020204B202120'
         ED    D+78(20),QZAHL122  REGIONS SWAPPED
         MVC   D+63(22),=C'ANZAHL REGIONS SWAPPED'
         BAL   R14,V0
         BAL   R10,P0       ZEILE 33
*--------------------------------------------------------------------*
         MVC   D+25(7),=X'4020204B202120'
         ED    D+25(7),QZAHL131+5
         MVC   D+2(24),=C'ANZAHL DER JOBS  PRO TAG'
         MVI   D+33,C'*'
         MVC   D+35(11),=C'DISK-EXCP''S'
         MVC   D+48(12),=X'402020204B2020204B202120'
         ED    D+48(12),QZAHL132+3
         MVI   D+61,C'I'
         FILL  D+63,45,+
         BAL   R14,V0
         BAL   R10,P0       ZEILE 34
*--------------------------------------------------------------------*
         FILL  D+10,10
         MVC   D+25(7),=X'4020204B202120'
         ED    D+25(7),QZAHL141+5
         MVC   D+2(24),=C'ANZAHL DER STEPS PRO TAG'
         MVI   D+33,C'*'
         MVC   D+35(11),=C'TAPE-EXCP''S'
         MVC   D+48(12),=X'402020204B2020204B202120'
         ED    D+48(12),QZAHL142+3
         MVI   D+61,C'I'
         MVC   D+64(20),=X'402020204B2020204B2020204B2020204B202120'
         ED    D+64(20),QZAHL143  TSO-SITZUNGEN
         MVC   D+63(13),=C'TSO-SITZUNGEN'
         MVI   D+85,C'*'
         MVC   D+88(20),=X'402020204B2020204B2020204B2020204B202120'
         ED    D+88(20),QZAHL144  TSO-USER
         MVC   D+88(8),=C'TSO-USER'
         BAL   R14,V0
         BAL   R10,P0       ZEILE 35
*--------------------------------------------------------------------*
         CVB   R14,QZAHL133
         ST    R14,FW
         LA    R15,FW
         BAL   R14,X0
         MVC   D+74(10),D+10
         CVB   R14,QZAHL134
         ST    R14,FW
         LA    R15,FW
         BAL   R14,X0
         MVC   D+98(10),D+10
         MVC   D+63(10),=C'LOGON-TIME'
         MVC   D+87(10),=C'LOGON/SESS'
         MVI   D+85,C'*'
         MVI   D+61,C'I'
         MVC   D+2(24),=C'ANZAHL DER STEPS PRO JOB'
         MVC   D+26(6),=X'404020216B20'
         ED    D+27(5),QZAHL151+6
         MVI   D+33,C'*'
         MVC   D+35(11),=C'DRUCKZEILEN'
         MVC   D+48(12),=X'402020204B2020204B202120'
         ED    D+48(12),QZAHL152+3
         BAL   R14,V0
         BAL   R10,P0       ZEILE 36
*--------------------------------------------------------------------*
         MVI   D+33,C'*'
         FILL  D+2,58,+
         MVI   D+61,C'I'
         FILL  D+63,45,+
         BAL   R14,V0
         BAL   R10,P0       ZEILE 37
*--------------------------------------------------------------------*
         MVI   D+61,C'I'
         MVC   D+103(5),=X'40206B2120'
         ED    D+103(5),QZAHL172+6
         MVC   D+98(5),=C'* MPF'
         CVB   R14,QZAHL171
         ST    R14,FW
         LA    R15,FW
         BAL   R14,X0
         MVC   D+84(13),D+10
         MVC   D+63(19),=C'JOB-RUN-ZEIT GESAMT'
         FILL  D+1,60
         MVC   D+19(13),=X'40204B2020204B2021206B2020'
         ED    D+19(13),BATCHDM+3
         MVC   D+2(17),=C'BATCH-LEISTUNG DM'
         MVI   D+33,C'*'
         MVC   D+35(11),=C'TGETS (TSO)'
         MVC   D+48(12),=X'402020204B2020204B202120'
         ED    D+48(12),TGETS+3
         BAL   R14,V0
         BAL   R10,P0       ZEILE 38
*--------------------------------------------------------------------*
         MVC   D+19(13),=X'40204B2020204B2021206B2020'
         ED    D+19(13),TSODM+3
         MVC   D+2(17),=C'T S O-LEISTUNG DM'
         MVI   D+33,C'*'
         MVC   D+35(11),=C'TPUTS (TSO)'
         MVC   D+48(12),=X'402020204B2020204B202120'
         ED    D+48(12),TPUTS+3
         MVI   D+61,C'I'
         BAL   R14,V0
         FILL  D+63,45,+
         BAL   R10,P0       ZEILE 39
*--------------------------------------------------------------------*
         FILL  D+2,58,+
         MVI   D+61,C'I'
         MVC   D+63(45),=C'PAGES  IN/SEK ACCTZEIT XX,X (MITT) XX,X (MAX*
               )'
         MVC   RF21,=X'4020204B2020204B2020204B2020204B2021206B20'
         ED    RF21,QZAHL153
         MVC   D+86(4),RF21+17
         MVC   RF21,=X'4020204B2020204B2020204B2020204B2021206B20'
         ED    RF21,MPAGEIN
         MVC   D+98(4),RF21+17
         BAL   R14,V0
         BAL   R10,P0       ZEILE 40
*--------------------------------------------------------------------*
         CVB   R14,QZAHL161
         ST    R14,FW
         LA    R15,FW
         BAL   R14,X0
         MVC   DREIZEHN,D+10
         FILL  D+10,14
         MVC   D+2(23),=C'MITTLERE IPL-SESSION    '
         MVC   D+24(8),DREIZEHN+2
         MVI   D+33,C'*'
         MVC   D+35(11),=C'IPL''S / TAG'
         MVC   D+54(6),=X'404020216B20'
         ED    D+55(5),QZAHL162+6
         MVI   D+61,C'I'
         MVC   D+63(45),=C'PAGES OUT/SEK ACCTZEIT XX,X (MITT) XX,X (MAX*
               )'
         MVC   RF21,=X'4020204B2020204B2020204B2020204B2021206B20'
         ED    RF21,QZAHL163
         MVC   D+86(4),RF21+17
         MVC   RF21,=X'4020204B2020204B2020204B2020204B2021206B20'
         ED    RF21,MPAGEOUT
         MVC   D+98(4),RF21+17
         BAL   R14,V0
         BAL   R10,P0       ZEILE 41
*--------------------------------------------------------------------*
         MVI   D+61,C'I'
         FILL  D+2,58,+
         FILL  D+63,45,+
         BAL   R14,V0
         BAL   R10,P0       ZEILE 42
*--------------------------------------------------------------------*
         FILL  D,110,*
         BAL   R14,V0
         BAL   R10,P0       ZEILE 43
*--------------------------------------------------------------------*
         L     R10,Q0-4
         BR    R10
         EJECT
*
* STATISTIK-SATZ
*
S0       EQU   *                  STATISTIK-SATZ
         CLI   SMF1FLG,0          NOCH EIN MVT/MFT-SATZ
         BE    S06
         CLI   SMF1FLG,1
         BE    S01
         LA    R15,SMF1RGNS
         BAL   R14,Y0
         MVC   D+82(6),=X'4020204B202120'
         ED    D+82(7),DW+5
S01      EQU   *
         LA    R15,SMF1PGRL
         BAL   R14,Y0
         ZAP   PGRECL,DW
         MVC   D+70(12),=X'402020204B2020204B202120'
         ED    D+70(12),DW+3
         L     R14,SMF1PGOT
         CLI   SMF1FLG,1
         BE    S02
         A     R14,SMF1SPOT
S02      EQU   *
         ST    R14,SMF1PGOT
         LA    R15,SMF1PGOT
         BAL   R14,Y0
         ZAP   PGOUT,DW
         MVC   D+63(12),=X'402020204B2020204B202120'
         ED    D+63(12),DW+3
         L     R14,SMF1PGIN
         CLI   SMF1FLG,1
         BE    S03
         A     R14,SMF1SPIN
S03      EQU   *
         ST    R14,SMF1PGIN
         LA    R15,SMF1PGIN
         BAL   R14,Y0
         ZAP   PGIN,DW
         MVC   D+56(12),=X'402020204B2020204B202120'
         ED    D+56(12),DW+3
S06      EQU   *
         LA    R15,SMF1SWT
         BAL   R14,Y0
         MVC   D+23(20),=X'40202020204B2020204B2020204B2020206B2120'
         ED    D+23(20),DW        SYSTEM-WAIT-TIME
         ZAP   WAIT,DW
         CLI   ERSTER,0
S1       EQU   *+1
         BNE   S2
         AP    SUMWAIT,WAIT
         CLI   SMF1FLG,0
         BE    S07
         AP    SUMPREC,PGRECL
         AP    SUMPOUT,PGOUT
         AP    SUMPIN,PGIN
         MVC   TIMENEW,SMF1TEXP
         L     R14,TIMENEW
         L     R15,TIMEOLD
         SR    R14,R15
S3       EQU   *
         LTR   R14,R14
         BNP   S2
S4       EQU   *
         CVD   R14,DW
         ZAP   SINTERVL,DW
         L     R14,SMF1PGIN
         CLI   SMF1FLG,1
         BE    S04
         A     R14,SMF1SPIN
S04      EQU   *
         CVD   R14,DW
         ZAP   SPAGEIN,DW
         L     R14,SMF1PGOT
         CLI   SMF1FLG,1
         BE    S05
         A     R14,SMF1SPOT
S05      EQU   *
         CVD   R14,DW
         ZAP   SPAGEOUT,DW
         CVGLEIT GKTAB0,DEZTAB0
         LD    FPR0,GINTERVL
         LD    FPR2,GPAGEIN
         MD    FPR2,=D'1000'
         LTDR  FPR0,FPR0
         BZ    *+6
         DDR   FPR2,FPR0
         LD    FPR4,GPAGEOUT
         MD    FPR4,=D'1000'
         LTDR  FPR0,FPR0
         BZ    *+6
         DDR   FPR4,FPR0
         STD   FPR2,GPAGEIN
         STD   FPR4,GPAGEOUT
         CVDEZ DEZTAB0,GKTAB0
         CP    SPAGEIN,MPAGEIN
         BNH   *+10
         ZAP   MPAGEIN,SPAGEIN
         CP    SPAGEOUT,MPAGEOUT
         BNH   *+10
         ZAP   MPAGEOUT,SPAGEOUT
         B     S2
         EJECT
S2       EQU   *
         MVI   S1,0
         MVC   TIMEOLD,TIMENEW
S07      EQU   *
         LA    R15,SMF1TME
         BAL   R14,X0
         LA    R15,SMF1DTE
         BAL   R14,T0
         CLI   SMF1FLG,0
         BE    S5
         CLI   SMF1FLG,1
         BE    S5
         L     R14,SMF1SPIN
         CVD   R14,DW
         AP    QZAHL93,DW
         L     R14,SMF1SPOT
         CVD   R14,DW
         AP    QZAHL103,DW
         L     R14,SMF1RGNS       REGIONS SWAPPED
         CVD   R14,DW
         AP    QZAHL122,DW
S5       EQU   *
         MVC   D(2),=C'01'
         B     A9
         EJECT
*
* TAGESDATUM ERRECHNEN
*
         DC    F'0'
T0       EQU   *
         ST    R14,T0-4
         MVC   FW,0(R15)
T01      EQU   *+1
         NOP   T1
         OI    *-3,240
         ZAP   ANFTAG,0(4,R15)
T1       EQU   *
         ZAP   ENDTAG,0(4,R15)
         CALL  SYSTMDAT,(ACHT,FW)
         MVC   D+3(8),ACHT        DATUM
         L     R14,T0-4
         BR    R14
         EJECT
*
* UNTERSUMMEN AUFBEREITEN
*
         DC    F'0'
U0       EQU   *
         ST    R10,U0-4
         MVI   A2,0
         FILL  D,120,-
         BAL   R10,P0
         MVC   D+91(7),=X'4020204B202120'
         ED    D+91(7),ANZJOBS+5
         MVC   D+98(6),=C'* JOBS'
         AP    GANZJOBS,ANZJOBS
         ZAP   ANZJOBS,=P'0'
         MVC   D+70(13),=X'402020204B2020204B2021205C'
         ED    D+70(12),SUMPREC+3
         MVC   D+56(13),=X'402020204B2020204B2021205C'
         ED    D+56(12),SUMPIN+3
         MVC   D+32(21),=X'40202020204B2020204B2020204B2020206B21205C'
         ED    D+32(20),SUMCPU
         NOP   U4
         OI    *-3,240
         ZAP   AANFTAG,ANFTAG
         MVC   AANFZEIT,ANFZEIT
U4       EQU   *
         MVC   EENDZEIT,ENDZEIT
         ZAP   EENDTAG,ENDTAG
         L     R14,ENDZEIT
         L     R15,ANFZEIT
         SR    R14,R15
         ZAP   ENDTAG,ENDTAG
         BM    U3
         SP    ENDTAG,ANFTAG
U1       EQU   *
         CP    ENDTAG,=P'0'
         BNP   U2
         SP    ENDTAG,=P'1'
         A     R14,=F'8640000'
         B     U1
U3       EQU   *
         LA    R15,4001
         B     ABEND
U2       EQU   *
         ST    R14,FW
         LA    R15,FW
         BAL   R14,Z0
         AP    SUMUPZT,DW
         ZAP   ACHT,DW
         MVC   ZWANZIG,D+13
         FILL  D+13,20
         CVB   R14,SUMRUN
         ST    R14,FSUMRUN
         LA    R15,FSUMRUN
         BAL   R14,Z0
         AP    QZAHL171,SUMRUN
         ZAP   SUMRUN,=P'0'
         NI    T01,15
         NI    X01,15
         SP    ACHT,SUMWAIT
         SP    ACHT,SUMCPU
         AP    SUMSYS,ACHT
         MVC   D+1(20),ZWANZIG
         MVC   D(10),=C'ACCTZEIT ='
         MVI   D+21,C'*'
         MVI   D+33,C'*'
         BAL   R10,P0
         MVC   D+97(7),=X'4020204B202120'
         ED    D+97(7),ANZSTEPS+5
         MVC   D+104(7),=C'* STEPS'
         AP    GANZSTEP,ANZSTEPS
         ZAP   ANZSTEPS,=P'0'
         MVC   D+63(13),=X'402020204B2020204B2021205C'
         ED    D+63(12),SUMPOUT+3
         MVC   D+41(21),=X'40202020204B2020204B2020204B2020206B21205C'
         ED    D+41(20),SUMSYS
         MVC   D+23(21),=X'40202020204B2020204B2020204B2020206B21205C'
         ED    D+23(20),SUMWAIT   SYSTEM-WAIT-TIME
         MVC   D(23),=C'** IPL-SESSION ..... **'
         OI    ANZIPL+L'ANZIPL-1,15
         UNPK  D+15(5),ANZIPL+5(3)
         BAL   R10,P0
         AP    GSUMSYS,SUMSYS
         AP    GSUMWAIT,SUMWAIT
         AP    GSUMCPU,SUMCPU
         AP    GSUMPREC,SUMPREC
         AP    GSUMPOUT,SUMPOUT
         AP    GSUMPIN,SUMPIN
         AP    GSUMUPZT,SUMUPZT
         ZAP   SUMUPZT,=P'0'
         ZAP   SUMPIN,=P'0'
         ZAP   SUMPREC,=P'0'
         ZAP   SUMPOUT,=P'0'
         ZAP   SUMCPU,=P'0'
         ZAP   SUMWAIT,=P'0'
         ZAP   SUMSYS,=P'0'
         FILL  D,120,=
         AP    ZZ,=P'43'
         BAL   R10,P0
         L     R10,U0-4
         BR    R10
         EJECT
*
* HIER WERDEN VORNE UND HINTEN STERNE EINGEDRUCKT
*
V0       EQU   *
         MVI   D,C'*'
         MVI   D+109,C'*'
         BR    R14
         EJECT
*
* HUNDERTSTEL SEKUNDEN IN HH.MM.SS,TH UMRECHENN UND AUSGEBEN
*
         DC    F'0'
X0       EQU   *
         ST    R14,X0-4
         MVC   FW,0(R15)
X01      EQU   *+1
         NOP   X1
         OI    *-3,240
         MVC   ANFZEIT,0(R15)
X1       EQU   *
         MVC   ENDZEIT,0(R15)
         L     R14,FW
         SRDA  R14,32
         D     R14,=F'360000'
         CVD   R15,DW             DIE STUNDEN SIND GEPACKT
         ZAP   PSTD,DW+6(2)
         SRDA  R14,32
         D     R14,=F'6000'
         CVD   R15,DW             PACKED MINUTEN
         ZAP   PMIN,DW+6(2)
         CVD   R14,DW             GEPACKTE SEKUNDEN IN SS,ZH
         ZAP   PSEC,DW+4(4)
         MVC   ZWOELF,=X'4040204B20214B20206B2020'
         ED    ZWOELF+1(11),PSEC
         MVC   SIEBEN,=X'402021204B2020'
         ED    SIEBEN,PMIN
         MVC   ZWOELF(6),SIEBEN+1
         MVC   SIEBEN,=X'40204B20212020'
         ED    SIEBEN,PSTD
         MVC   D+12(11),ZWOELF+1
         MVC   D+10(4),SIEBEN+3
         L     R14,X0-4
         BR    R14
         EJECT
*
* DIVERSE BINAERZAHLEN IN DEZIMALE UMRECHNEN
*
         DC    F'0'
Y0       EQU   *
         ST    R14,Y0-4
         MVC   FW,0(R15)
         L     R2,FW
         CVD   R2,DW
         L     R14,Y0-4
         BR    R14
         EJECT
*
* BINAER-ZEITEN AUS SMF-SAETZEN DEZIMAL UMRECHNEN
*
         DC    F'0'
Z0       EQU   *
         ST    R14,Z0-4
         MVC   FW,0(R15)
         L     R2,FW
         CVD   R2,DW
         MVC   D+13(20),=X'40202020204B2020204B2020204B2020206B2120'
         ED    D+13(20),DW
         L     R14,Z0-4
         BR    R14
         EJECT
*
* ENDROUTINE
*
         ENTRY ESGMZZZ0
ESGMZZZ0 EQU   *
         BAL   R10,U0
         BAL   R10,G0             HAUPTSUMMEN
         L     R2,=V(OSPMZZZ9)
         CLOSE ((R2))
         L     R2,=V(OSPMZZZ8)
         OPEN  ((R2),(OUTPUT))
         L     R2,=V(OSPMZZZ8)
         VERTEIL LINECNT=48,TEXT=AN,DCBNAME=(R2),CODE=M
         BAL   R10,Q0
         L     R2,=V(OSGMZZZ0)
         CLOSE ((R2))
         L     R2,=V(OSPMZZZ9)
         CLOSE ((R2))
         EOJ   RC=0
         SPACE
ABEND    ABEND (R15),DUMP
         EJECT
*
* KONSTANTEN, BEREICHE, FELDER, WIESEN UND WAELDER
*
AANFTAG  DC    PL4'0'
AANFZEIT DS    F
ACHT     DS    CL8
AN       DC    C'*HERRN TAUCHNITZ*WEGEN SMF*ONE PAGE ONLY**'
AN1      DC    C'*HERRN GROSSE*JETZT TAEGLICH IMMER WIEDER*S M F**'
ANFTAG   DC    PL4'0'
ANFTAGP  DC    PL4'0'
ANFZEIT  DC    F'0'
ANZABEND DC    PL8'0'
ANZIPL   DC    PL8'1'
ANZJOBS  DC    PL8'0'
ANZNORML DC    PL8'0'
ANZSTEPS DC    PL8'0'             ANZAHL DER STEPS JE JOB (ODER ALLER)
BATCHDM  DC    PL8'0'       WERT DER IM BATCH AUSGEFUEHRTEN LEISTUNG
C        DC    X'09'
D        DC    120C' '
D1       DC    120C' '
CBER     DS    0CL65
ERRLZ    DC    PL5'0'
ZU       DC    PL5'0'
PD       DC    PL5'0'
PZ       DC    PL5'0'
BD       DC    PL5'0'
BZ       DC    PL5'0'
ZD       DC    PL5'0'
ZZ1      DC    PL5'0'
SD       DC    PL5'0'
SK       DC    PL5'0'
OD       DC    PL5'0'
OZ       DC    PL5'0'
SUMME    DC    PL5'0'
DEZTAB0 CVTAB  (SINTERVL,0,SPAGEIN,0,SPAGEOUT,0),TYPE=P
DEZTAB1  CVTAB (GSUMUPZT,0,GSUMWAIT,0,GSUMCPU,0,GSUMSYS,0,GSUMDIF,0),  *
               TYPE=P
DEZTAB2  CVTAB (QZAHL11,0,QZAHL12,0,QZAHL13,0,QZAHL21,0,QZAHL22,0),    *
               TYPE=P
DEZTAB3 CVTAB (QZAHL23,0,QZAHL31,0,QZAHL32,0,QZAHL33,0,QZAHL34,0),     *
               TYPE=P
DEZTABF CVTAB (QZAHL41,0,),TYPE=P
DEZTAB4 CVTAB (QZAHL42,0,QZAHL43,0,QZAHL44,0,QZAHL45,0,QZAHL51,0),     *
               TYPE=P
DEZTAB5 CVTAB (QZAHL52,0,QZAHL53,0,QZAHL61,0,QZAHL62,0),               *
               TYPE=P
DEZTAB6 CVTAB (QZAHL63,0,QZAHL71,0,QZAHL72,0,QZAHL73,0,QZAHL74,0),     *
               TYPE=P
DEZTAB7 CVTAB (QZAHL81,0,QZAHL82,0,QZAHL83,0,QZAHL84,0,QZAHL91,0),     *
               TYPE=P
DEZTAB8 CVTAB (QZAHL92,0),TYPE=P
DEZTAB9 CVTAB (QZAHL93,0,QZAHL94,0,QZAHL101,0,QZAHL102,0,QZAHL103,0),  *
               TYPE=P
DEZTABA CVTAB (QZAHL104,0,QZAHL111,0,QZAHL112,0,QZAHL113,0,QZAHL114,0),*
               TYPE=P
DEZTABB CVTAB (QZAHL121,0,QZAHL122,0,QZAHL131,0,QZAHL132,0,QZAHL133,0),$
               TYPE=P
DEZTABH  CVTAB (QZAHL134,0),TYPE=P
DEZTABC CVTAB (QZAHL141,0,QZAHL142,0,QZAHL143,0,QZAHL144,0,QZAHL151,0),*
               TYPE=P
DEZTABD CVTAB (QZAHL152,0,QZAHL153,0,QZAHL154,0,QZAHL161,0),TYPE=P
DEZTABE CVTAB (QZAHL162,0,QZAHL163,0,QZAHL164,0,QZAHL01,0,QZAHL02,0),  *
               TYPE=P
DEZTABG  CVTAB (QZAHL03,0,QZAHL04,0,QZAHL171,0,QZAHL172,0),TYPE=P
DREIZEHN DS    CL13
DTAUSEND DC    D'1000'
DW       DS    D
DZEHN    DC    D'10000'
DZEHNTSD DC    D'10000'
EENDTAG  DC    PL4'0'
EENDZEIT DC    F'0'
ENDTAG   DC    PL4'0'
ENDTAGP  DC    PL4'0'
ENDZEIT  DC    F'0'
EOD      DC    X'00'
ERSTER   DC    X'FF'
FW       DS    F
GKTAB1   DS    0D
FSUMUPZT DC    D'0'
FSUMWAIT DC    D'0'
FSUMCPU  DC    D'0'
FSUMSYS  DC    D'0'
FSUMDIF  DC    D'0'
FSUMRUN  DC    D'0'
GANZJOBS DC    PL8'0'
GANZSTEP DC    PL8'0'
GSUMCPU  DC    PL8'0'
GSUMDIF  DC    PL8'0'             DIFFERENZ DRE PROZENTE
GSUMPIN  DC    PL8'0'
GSUMPOUT DC    PL8'0'
GSUMPREC DC    PL8'0'
GSUMSYS  DC    PL8'0'
GSUMUPZT DC    PL8'0'
GSUMWAIT DC    PL8'0'
GKTAB0   DS    0D
GINTERVL DC    D'0'               INTERVALL-LAENGE RECORD 1 - RECORD 1
GPAGEIN  DC    D'0'               ANZAHL APGES IN JE INTERVALL REC 1
GPAGEOUT DC    D'0'               ANZAHL PAGES OUT JE INETRVALL REC 1
GKTAB2   DS    0D
GZAHL11  DC    D'0'               MESSZEIT/STD
GZAHL12  DC    D'0'               MESSZEIT/SEK
GZAHL13  DC    D'0'               MESSZEIT/100%
GZAHL21  DC    D'0'               LEERZEIT/STD
GZAHL22  DC    D'0'               LEERZEIT/SEK
GKTAB3   DS    0D
GZAHL23  DC    D'0'               LEERZEIT/PROZENT VON MESSZEIT
GZAHL31  DC    D'0'               ACCTZEIT/STD
GZAHL32  DC    D'0'               ACCTZEIT/SEK
GZAHL33  DC    D'0'               ANTEIL ACCTZEIT AN MESSZEIT
GZAHL34  DC    D'0'               ACCTZEIT/100%
GKTABF   DS    0D
GZAHL41  DC    D'0'               CPU-ZEIT/STD
GKTAB4   DS    0D
GZAHL42  DC    D'0'               CPU-ZEIT/SEK
GZAHL43  DC    D'0'               CPU-ZEIT/PROZENT VON MESSZEIT
GZAHL44  DC    D'0'               CPU-ZEIT/PROZENT VON ACCTZEIT
GZAHL45  DC    D'0'               CPU-ZEIT/100%
GZAHL51  DC    D'0'               BATCH   /STD
GKTAB5   DS    0D
GZAHL52  DC    D'0'               BATCH   /SEK
GZAHL53  DC    D'0'               BATCH   /PROZENT VON CPU-ZEIT
GZAHL61  DC    D'0'               TSO     /STD
GZAHL62  DC    D'0'               TSO     /SEK
GKTAB6   DS    0D
GZAHL63  DC    D'0'               TSO     /PROZENT VON CPU-ZEIT
GZAHL71  DC    D'0'               WZITZEIT/STD
GZAHL72  DC    D'0'               WAITZEIT/SEK
GZAHL73  DC    D'0'               WAITZEIT/PROZENT VON MESSZEIT
GZAHL74  DC    D'0'               WAITZEIT/PROZENT VON ACCTZEIT
GKTAB7   DS    0D
GZAHL81  DC    D'0'               OVERHEAD/STD
GZAHL82  DC    D'0'               OVERHEAD/SEK
GZAHL83  DC    D'0'               OVERHEAD/PROZENT VON MESSZEIT
GZAHL84  DC    D'0'               OVERHEAD/PROZENT VON ACCTZEIT
GZAHL91  DC    D'0'               ANZAHL JOBS NORMAL ENDED
GKTAB8   DS    0D
GZAHL92  DC    D'0'               ANZAHL JOBS NORMAL ENDED VON GESAMT-J
GKTAB9   DS    0D
GZAHL93  DC    D'0'               ANZAHL PAGES IN
GZAHL94  DC    D'0'               PROZENT PAGES-IN AN GESAMT-SEITENS
GZAHL101 DC    D'0'               ANZAHL JOBS ABNORMAL ENDED
GZAHL102 DC    D'0'               ANTEIL JOBS ABNORMAL ENDED AN GESAMT
GZAHL103 DC    D'0'               ANZAHL PAGES OUT
GKTABA   DS    0D
GZAHL104 DC    D'0'               ANTEIL PAGES OUT
GZAHL111 DC    D'0'               ANZAHL JOBS IM BERICHTSZEITRAUM
GZAHL112 DC    D'0'               ANTEIL JOBS 100%
GZAHL113 DC    D'0'               ANZAHL PAGES RECLAMIRET
GZAHL114 DC    D'0'               ANTEIL PAGES RECLAMIRET AM PAGIREN
GKTABB   DS    0D
GZAHL121 DC    D'0'               ANZAHL STEPS IM BERICHTSZEITRAUM
GZAHL122 DC    D'0'               ANZAHL SWAPS IN
GZAHL131 DC    D'0'               ANZAHL JOBS PRO TAG
GZAHL132 DC    D'0'               ANZAHL DISK-EXCP'S GESAMT
GZAHL133 DC    D'0'               SESSION-TIME GESAMT
GKTABH   DS    0D
GZAHL134 DC    D'0'               SESSION-TIME JE SESSION
GKTABC   DS    0D
GZAHL141 DC    D'0'               ANZAHL STEPS PRO TAG
GZAHL142 DC    D'0'               ANZAHL TAPE-EXCP'S
GZAHL143 DC    D'0'               ANZAHL REGIONEN MIGRATIERT
GZAHL144 DC    D'0'               TSO-USER
GZAHL151 DC    D'0'               ANZAHL IPL'S PRO TAG
GKTABD   DS    0D
GZAHL152 DC    D'0'               ANZAHL DRUCKZEILEN
GZAHL153 DC    D'0'               ANZAHL PAGES IN JE SEKUNDE ACCOUNTZT
GZAHL154 DC    D'0'               ANZAHL PAGES IN JE SEKUNDE ACCTZT MAX
GZAHL161 DC    D'0'               DAUER MITTLERE IPL-SESSION
GKTABE   DS    0D
GZAHL162 DC    D'0'               DURCHSCHNITTLICHE ANZAHL STEPS/JOB
GZAHL163 DC    D'0'               ANZAHL PAGES OUT JE SEK ACCT-ZEIT
GZAHL164 DC    D'0'               ANZAHL PAGES OUT JE SEK ACCT-ZEIT MAX
GZAHL01  DC    D'0'               ANZAHL DER TAGE
GZAHL02  DC    D'0'               ANZAHL DER IPL'S
GKTABG   DS    0D
GZAHL03  DC    D'0'               ANZAHL ARBEITSTAGE IM BERICHTSZTR
GZAHL04  DC    D'0'               SUMME DM
GZAHL171 DC    D'0'               JOB-RUN-ZEITEN KUMULIERT
GZAHL172 DC    D'0'               MULTIPROGRAMMING-FAKTOR
GSWITCH  DC    X'00'
HEADTEXT DC    CL120' '
         ORG   HEADTEXT
         DC    C'SMFREPORT VOM XX.XX.XX'
         ORG   HEADTEXT+111
         DC    C'SEITE'
         ORG
HEADTXT2 DC    CL140' '
         ORG   HEADTXT2+0
         DC    C'SA'
         ORG   HEADTXT2+4
         DC    C'DATUM'
         ORG   HEADTXT2+14
         DC    C'UHRZEIT'
         ORG   HEADTXT2+25
         DC    C'RUN-ZEIT'
         ORG   HEADTXT2+35
         DC    C'WAITZEIT'
         ORG   HEADTXT2+44
         DC    C'CPU-ZEIT'
         ORG   HEADTXT2+53
         DC    C'OVERHEAD'
         ORG   HEADTXT2+62
         DC    C'PAG-IN'
         ORG   HEADTXT2+69
         DC    C'PAGOUT'
         ORG   HEADTXT2+76
         DC    C'PAGREC'
         ORG   HEADTXT2+84
         DC    C'SWAPS'
         ORG   HEADTXT2+90
         DC    C'PROGRAMM/STEPS/IPL/BEMERKUNGEN'
         ORG
HW       DS    H
KIND     DC    C'P'
KREAL    DC    F'0'
LEVEL    DC    C'019 '
MPAGEIN  DC    PL8'0'             MAXIMALES PAGE-IN JE SEKUNDE
MPAGEOUT DC    PL8'0'             MAXIMALES PAGE-OUT JE SEKUNDE
NAME     DC    C'ONE PAGE ONLY'
NULL     DS    X'00'              INDIKATOR FUER IPL-SATZ
PGIN     DC    PL8'0'
PGOUT    DC    PL8'0'
PGRECL   DC    PL8'0'
PMIN     DC    PL3'0'
PSEC     DC    PL4'0'
PSTD     DC    PL3'0'
QACCTZT  DC    F'0'
QANFTAG  DC    F'0'
QANFZEIT DC    F'0'
QENDTAG  DC    F'0'
QENDZEIT DC    F'0'
QLEERZT  DC    PL8'0'
QMESSZT  DC    F'0'
QSUMCPU  DC    PL8'0'
QSUMMESS DC    PL8'0'
QSUMSYS  DC    PL8'0'
QSUMUPZT DC    PL8'0'
QSUMWAIT DC    PL8'0'
QZAHL11  DC    PL8'0'             MESSZEIT/STD
QZAHL12  DC    PL8'0'             MESSZEIT/SEK
QZAHL13  DC    PL8'0'             MESSZEIT/100%
QZAHL21  DC    PL8'0'             LEERZEIT/STD
QZAHL22  DC    PL8'0'             LEERZEIT/SEK
QZAHL23  DC    PL8'0'             LEERZEIT/PROZENT VON MESSZEIT
QZAHL31  DC    PL8'0'             ACCTZEIT/STD
QZAHL32  DC    PL8'0'             ACCTZEIT/SEK
QZAHL33  DC    PL8'0'             ANTEIL ACCTZEIT AN MESSZEIT
QZAHL34  DC    PL8'0'             ACCTZEIT/100%
QZAHL41  DC    PL8'0'             CPU-ZEIT/STD
QZAHL42  DC    PL8'0'             CPU-ZEIT/SEK
QZAHL43  DC    PL8'0'             CPU-ZEIT/PROZENT VON MESSZEIT
QZAHL44  DC    PL8'0'             CPU-ZEIT/PROZENT VON ACCTZEIT
QZAHL45  DC    PL8'0'             CPU-ZEIT/100%
QZAHL51  DC    PL8'0'             BATCH   /STD
QZAHL52  DC    PL8'0'             BATCH   /SEK
QZAHL53  DC    PL8'0'             BATCH   /PROZENT VON CPU-ZEIT
QZAHL61  DC    PL8'0'             TSO     /STD
QZAHL62  DC    PL8'0'             TSO     /SEK
QZAHL63  DC    PL8'0'             TSO     /PROZENT VON CPU-ZEIT
QZAHL71  DC    PL8'0'             WZITZEIT/STD
QZAHL72  DC    PL8'0'             WAITZEIT/SEK
QZAHL73  DC    PL8'0'             WAITZEIT/PROZENT VON MESSZEIT
QZAHL74  DC    PL8'0'             WAITZEIT/PROZENT VON ACCTZEIT
QZAHL81  DC    PL8'0'             OVERHEAD/STD
QZAHL82  DC    PL8'0'             OVERHEAD/SEK
QZAHL83  DC    PL8'0'             OVERHEAD/PROZENT VON MESSZEIT
QZAHL84  DC    PL8'0'             OVERHEAD/PROZENT VON ACCTZEIT
QZAHL91  DC    PL8'0'             ANZAHL JOBS NORMAL ENDED
QZAHL92  DC    PL8'0'             ANZAHL JOBS NORMAL ENDED VON GESAMT-J
QZAHL93  DC    PL8'0'             ANZAHL PAGES IN
QZAHL94  DC    PL8'0'             PROZENT PAGES-IN AN GESAMT-SEITENS
QZAHL101 DC    PL8'0'             ANZAHL JOBS ABNORMAL ENDED
QZAHL102 DC    PL8'0'             ANTEIL JOBS ABNORMAL ENDED AN GESAMT
QZAHL103 DC    PL8'0'             ANZAHL PAGES OUT
QZAHL104 DC    PL8'0'             ANTEIL PAGES OUT
QZAHL111 DC    PL8'0'             ANZAHL JOBS IM BERICHTSZEITRAUM
QZAHL112 DC    PL8'0'             ANTEIL JOBS 100%
QZAHL113 DC    PL8'0'             ANZAHL PAGES RECLAMIRET
QZAHL114 DC    PL8'0'             ANTEIL PAGES RECLAMIRET AM PAGIREN
QZAHL121 DC    PL8'0'             ANZAHL STEPS IM BERICHTSZEITRAUM
QZAHL122 DC    PL8'0'             ANZAHL SWAPS IN
QZAHL131 DC    PL8'0'             ANZAHL JOBS PRO TAG
QZAHL132 DC    PL8'0'             ANZAHL DISK-EXCP'S GESAMT
QZAHL133 DC    PL8'0'             SESSION-TIME GESAMT
QZAHL134 DC    PL8'0'             SESSION-TIME JE SESSION
QZAHL141 DC    PL8'0'             ANZAHL STEPS PRO TAG
QZAHL142 DC    PL8'0'             ANZAHL TAPE-EXCP'S
QZAHL143 DC    PL8'0'             ANZAHL REGIONEN MIGRATED
QZAHL144 DC    PL8'0'             ANZAHL TSO-USER
QZAHL151 DC    PL8'0'             ANZAHL IPL'S PRO TAG
QZAHL152 DC    PL8'0'             ANZAHL DRUCKZEILEN
QZAHL153 DC    PL8'0'             ANZAHL PAGES JE SEKUNDEN ACCOUNTZEIT
QZAHL154 DC    PL8'0'             ANZAHL PAGES IN JE SEK ACCTZEIT MAX
QZAHL161 DC    PL8'0'             DAUER MITTLERE IPL-SESSION
QZAHL162 DC    PL8'0'             DURCHSCHNITTLICHE ANZAHL STEPS/JOB
QZAHL163 DC    PL8'0'             ANZAHL PAGES OUT JE SEK ACCT-ZEIT
QZAHL164 DC    PL8'0'             ANZAHL PAGES OUT JE SEK ACCT-ZEIT MAX
QZAHL01  DC    PL8'0'             ANZAHL DER TAGE
QZAHL02  DC    PL8'0'             ANZAHL DER IPL'S
QZAHL03  DC    PL8'0'             ANZAHL ARBEITSTAGE IM BERICHTSZEITRAU
QZAHL04  DC    PL8'0'             SUMME DM
QZAHL171 DC    PL8'0'             SUMME DER JOB-RUN-ZEITEN
QZAHL172 DC    PL8'0'             MULTIPROGRAMMING-FAKTOR
QSWITCH  DC    X'00'
RF21     DS    CL21
SBER     DS    0CL104
SERRLZ   DC    PL8'0'
SZU      DC    PL8'0'
SPD      DC    PL8'0'
SPZ      DC    PL8'0'
SBD      DC    PL8'0'
SBZ      DC    PL8'0'
SZD      DC    PL8'0'
SZZ      DC    PL8'0'
SSD      DC    PL8'0'
SSK      DC    PL8'0'
SOD      DC    PL8'0'
SOZ      DC    PL8'0'
SSUMME   DC    PL8'0'
SIEBEN   DS    CL7
SINTERVL DC    PL8'0'             INTERVALL-LAENGE RECORD 1 - RECORD 1
SPAGEIN  DC    PL8'0'             ANZAHL APGES IN JE INTERVALL REC 1
SPAGEOUT DC    PL8'0'             ANZAHL PAGES OUT JE INETRVALL REC 1
SUMCPU   DC    PL8'0'
SUMPIN   DC    PL8'0'
SUMPOUT  DC    PL8'0'
SUMPREC  DC    PL8'0'
SUMRUN   DC    PL8'0'
SUMSYS   DC    PL8'0'
SUMUPZT  DC    PL8'0'
SUMWAIT  DC    PL8'0'
SZ       DC    PL3'0'
TABUSER  EQU   *
         DC    50C'    '
         DC    C'$$$$'
         ORG   TABUSER
         DC    C'*'
         ORG
TEXT1    DC    C'* * * S M F - R E P O R T * * * E T E R N I T   A G   *
               B E R L I N * * * SYSTEM /370-155-II * * * 0.000 K * * **
               '
TGETS    DC    PL8'0'     ANZAHL DER TGETS AUS TSO
TPUTS    DC    PL8'0'     ANZAHL DER TPUTS AUS TSO
TSODM    DC    PL8'0'     WERT DER IM TSO AUSGEFUEHRTEN LEISTUNG
TIMENEW  DS    F
TIMEOLD  DS    F
VIER     DC    PL4'0'
WAIT     DC    PL8'0'
ZIN      DC    PL5'0'
ZOUT     DC    PL5'0'
ZWANZIG  DS    CL20
ZWOELF   DS    CL12
ZZ       DC    PL3'0'
         EJECT
*
* DIE LITERARISCHE WELT
*
         LTORG
         EJECT
*
* SMF-SATZ-DEFINITIONEN
*
         PRINT GEN
SMFREC   DS    0F
SMFDSECT DC    4000X'0'
         ORG   SMFREC
         IFASMFR 0
         EJECT
         ORG   SMFREC
         IFASMFR 1
         EJECT
         ORG   SMFREC
         IFASMFR 4
         EJECT
         ORG   SMFREC
         IFASMFR 5
         EJECT
         ORG   SMFREC
         IFASMFR 7
         EJECT
         ORG   SMFREC
         IFASMFR 12
         EJECT
         ORG   SMFREC
         IFASMFR 34
         ORG
         EJECT
TABTAGE  EQU   *
         DC    1000PL3'0'
         ORG   TABTAGE
         DC    C'*'
         ORG
         SPACE 5
         END   SMFREPRT
CVDZ     TITLE 'CVDZ - DER GROSSE UMWANDLER, DER GLEITKOMMAZAHLEN IN DEZ
               ZIMALE UMWANDELT'
CVDZ     CSECT
         B     12(R15)        KONSTANTEN UEBERSPRINGEN
         DC    X'7'             PROGRAMM
         DC    CL7'CVDZ'                IDENTIFIKATION
         STM   R14,R12,12(R13) REGISTER DES RUFENDEN PROGRAMMES SICHERN
         BALR  R12,R0          ADRESSIERBARKEIT
         USING *,R12                            HERSTELLEN
         LR    R2,R13          SAVE
         LA    R13,SAVE            AREAS
         ST    R13,8(0,R2)               VER
         ST    R2,4(0,R13)                  KETTEN
*
*     *****************************************************************
         SPACE 3
*     *****************************************************************
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R10      EQU   10
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
X        EQU   11
*
*
*
*        UEBERNEHMEN DER PARAMETER-ADRESSEN
         LM    R2,R3,0(R1) (R2)=PTR GKTAB, (R3)=PTR DEZTAB
         SLR   X,X   TNDEX=0
*
         L     R10,0(0,R3)
         SRL   R10,24   (R10) = COUNT
         LA    R3,4(0,R3)
*
LOOP     L     R4,0(X,R3) (R4)= BYTE 0 LAENGE, BYTES1 BIS3 PTR DEZ-ZAHL
         L     R5,4(X,R3) (R5)= POSITION DES KOMMAS
         SRL   R5,24
         STH   R5,CVD+12
         LD    R0,0(X,R2)
*
CVD      STM   R13,R15,XGKSAVE
         BAL   R14,XDEZIMAL
         BAL   R14,XFORMAT
         DC    H'0'
         ZAP   SCRATCH,XGKDZWRT(8)
         B     XGKEXP+2
XDEZIMAL STD   R6,XGKSAVE+16
         STD   R4,XGKSAVE+24
         ST    R14,XGKSAVE+12
         LPDR  R6,R0
         BZ    XGK140
         STD   R6,XGKDW1
         SR    R0,R0
         CLI   XGKDW1,X'40'
         BE    XGK13
         BL    XGK05
         CLC   XGKDW1,XGKETBND
         BL    XGK07
         DD    R6,XGKETB
         LA    R0,R1
         B     XGK07
XGK05    XI    XGKDW1,X'7F'
         CLI   XGKDW1,X'7E'
         BL    XGK06
         MD    R6,XGKETB+16
         STD   R6,XGKDW1
         XI    XGKDW1,X'7F'
         SH    R0,XGKKH3
XGK06    IC    R1,XGKDW1
         LA    R1,1(R1)
         STC   R1,XGKDW1
XGK07    LA    R13,XGKETB
         ST    R14,XGKSAVE+12
         LA    R14,8
         LA    R15,XGKETB+600
XGK08    CLC   XGKDW1(1),0(R13)
         BE    XGK14
         BXLE  R13,R14,XGK08
XGK14    L     R14,XGKSAVE+12
XGK09    CLC   XGKDW1,0(R13)
         BL    XGK10
         LA    R13,8(R13)
         B     XGK09
XGK10    SH    R13,XGKKH8
         CLC   XGKDW1,0(R13)
         BL    XGK10
         LA    R15,XGKETB-16
         CD    R6,XGKKD0
         BL    XGK11
         DD    R6,8(R13)
         LCR   R15,R15
         B     XGK12
XGK105   LA    R13,8(R13)
         B     XGK11
XGK106   SH    R13,XGKKH8
XGK11    LDR   R4,R6
         MD    R4,8(R13)
         CD    R4,XGKK16M1
         BL    XGK105
         CD    R4,XGKKD0
         BC    10,XGK106
         LDR   R6,R4
         LCR   R13,R13
XGK12    AR    R13,R15
         SRA   R13,3
         AR    R0,R13
XGK13    STD   R6,XGKDW1
         CVD   R0,XGKDW2
         ZAP   XGKEXP,XGKDW2+6(2)
         LM    R0,R1,XGKDW1
         SLDL  R0,8
         SRDL  R0,1
         LR    R15,R0
         SR    R14,R14
         M     R14,XGKK10H9
         SLDL  R14,1
         CVD   R14,XGKARB
         MVC   XGKDW1(5),XGKARB+3
         SRL   R15,1
         SR    R14,R14
         M     R14,XGKK10H8
         SLDL  R14,1
         CVD   R14,XGKARB
         MVN   XGKDW1+4(1),XGKARB+3
         MVC   XGKDW1+5(4),XGKARB+4
         SRL   R1,1
         SR    R0,R0
         M     R0,XGKK10H8
         SLL   R0,1
         CVD   R0,XGKARB
         MVO   XGKARB+3(6),XGKARB+3(5)
         MVC   XGKARB+8(5),XGKKP0
         DP    XGKARB+2(11),XGKK2H31
         AP    XGKDW1(9),XGKARB+2(5)
         LTDR  R0,R0
         BP    *+8
         OI    XGKDW1+8,X'01'
         ZAP   XGKARB,XGKDW1(9)
         AP    XGKDW1(9),XGKDW1+8(1)
         MVO   XGKDW1(9),XGKDW1(8)
         CLI   XGKDW1,X'0'
         BE    XGK136
         MVO   XGKDW1(9),XGKDW1(8)
XGK135   LD    R6,XGKSAVE+16
         LD    R4,XGKSAVE+24
         L     R14,XGKSAVE+12
         BR    R14
XGK136   SP    XGKEXP,XGKKP1
         MP    XGKARB+5(11),XGKKP10
         B     XGK135
XGK140   ZAP   XGKEXP,XGKKP0+4(1)
         ZAP   XGKDW1(9),XGKKP0+4(1)
         ZAP   XGKARB,XGKKP0+4(1)
         B     XGK135
XGKKD0   DC    D'1'
XGKK16M1 DC    D'0.0625'
XGKK10H9 DC    F'10E8'
XGKK10H8 DC    F'10E7'
XGKK2H31 DC    P'2147483648'
XGKKP0   DC    PL5'0'
XGKKP1   DC    P'1'
XGKKP10  DC    P'10'
XGKKH3   DC    H'3'
XGKKH8   DC    H'8'
XGKEXP   DS    CL2
         B     XGKKH12+2
XFORMAT  LH    R0,0(R14)
         LA    R1,16
         SR    R1,R0
         ZAP   XGKDW1,XGKEXP
         CVB   R0,XGKDW1
         SR    R1,R0
         BM    XGK18
         CH    R1,XGKKH15
         BH    XGK185
         LA    R15,0
         CH    R1,XGKKH12
         BNH   XGK16
         SH    R1,XGKKH12
         LA    R15,12
XGK16    SR    R0,R0
         M     R0,XGKKF7
         LA    R0,XGKFRMTB
         AR    R1,R0
         DP    XGKARB,0(7,R1)
         CH    R15,XGKKH12
         BNE   XGK19
         LR    R1,R15
         SR    R15,R15
         ZAP   XGKARB,XGKARB(9)
         B     XGK16
XGK18    ZAP   XGKARB(1),XGKK2H31+4(2)
         BC    15,2(R14)
XGK185   ZAP   XGKARB(9),XGKFRMTB+13(1)
XGK19    AP    XGKARB(9),XGKARB+8(1)
         MVO   XGKARB(9),XGKARB(8)
         BC    15,2(R14)
XGKFRMTB DC    PL7'1,10,100,1000,10000,100000,1000000,10000000,10000000*
               0,1000000000,10000000000,100000000000,1000000000000'
XGKKF7   DC    F'7'
         CNOP  2,4
XGKKH12  DC    H'12'
         B     XGKHW+2
XGKDW1   DS    D
XGKMANT  EQU   XGKDW1+1
XGKDW2   DS    D
XGKARB   DS    CL16
XGKDZWRT EQU   XGKARB+1
XGKSAVE  DS    4D
XGKKH15  DC    H'15'
XGKHW    DS    H
         B     XGKETBND+8
XGKSF    DC    D'1'
XGKETB   DC    D'1E1,1E2,1E3,1E4,1E5,1E6,1E7,1E8,1E9,1E10,1E11,1E12,1E1*
               3,1E14,1E15,1E16,1E17,1E18,1E19,1E20,1E21,1E22,1E23'
         DC    D'1E24,1E25,1E26,1E27,1E28,1E29,1E30,1E31,1E32,1E33,1E34*
               ,1E35,1E36,1E37,1E38,1E39,1E40,1E41,1E42,1E43,1E44,1E45'
         DC    D'1E46,1E47,1E48,1E49,1E50,1E51,1E52,1E53,1E54,1E55,1E56*
               ,1E57,1E58,1E59,1E60,1E61,1E62,1E63,1E64,1E65,1E66,1E67'
         DC    D'1E68,1E69,1E70,1E71,1E72,1E73,1E74'
XGKETBND DC    D'1E75'
         LM    R13,R15,XGKSAVE
*
*
         SRDL  R4,24
         SRL   R5,8
         BCTR  R4,R0
         LA    R6,R7
         LA    R8,SCRATCH IN DIESEM FELD STEHT DIE DEZIMAL-ZAHL
         CR    R4,R6  PRUEFEN, OB L1 GROESSER 8
         BE    MULT
         BH    L2GT8
*        L1 IST KLEINER ALS 8
         SR    R6,R4   ADRESS-INKREMENT BERECHNEN
         AR    R8,R6       UND ZUR GRUNDADRESSE ADDIEREN
MULT     MH    R4,KH17     L2 GLEICH L1 MACHEN
         B     EXECUTE
L2GT8    CH    R4,KH15 PRUEFEN, OB L1 GROESSER 16
         BH    ERROR
         SLL   R4,4
         OR    R4,R6
EXECUTE  EX    R4,PASSARG
         LA    X,8(0,X)
ERROR    NOP   *
         BCT   R10,LOOP
*
*     *****************************************************************
         SPACE 3
*     *****************************************************************
*
*        PROGRAMM - AUSGANG
         L     R13,SAVE+4
         LM    R14,R12,12(R13)
         MVI   12(R13),255
         BR    R14
*
*     *****************************************************************
         SPACE 3
*     *****************************************************************
*
*        DEFINITIONEN
*
SAVE     DS    9D
*
PASSARG  ZAP   0(R1,R5),0(R1,R8)
SCRATCH  DS    CL8
KH17     DC    H'17'
KH15     DC    H'15'
*
*     *****************************************************************
         LTORG
         END   CVDZ
CVGK     TITLE 'CVGK - DER, DER DEZIMALE IN GLEITKOMMAZAHLEN FLOATET'
CVGK     CSECT
         B     12(R15)   KONSTANTEN UEBERSPRINGEN
         DC    X'7'         PROGRAMM
         DC    CL7'CVGK'            IDENTIFIKATION
         STM   R14,R12,12(R13) REGISTER DES RUFENDEN PROGRAMMES SICHERN
         BALR  R12,R0      ADRESSIERBARKEIT
         USING *,R12                         HERSTELLEN
         LR    R2,R13      SAVE
         LA    R13,SAVE        AREAS
         ST    R13,8(0,R2)          VER
         ST    R2,4(0,R13)              KETTEN
*
*     *****************************************************************
*     *****************************************************************
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
X        EQU   11
*
         LA    R14,X'0E'     DISABLE
         SLL   R14,24           PROGRAMM CHECK INTERUPT
         SPM   R14                               SIGNIFICANCE
*
*        UEBERNEHMEN DER PARAMETER-ADRESSEN
*
*
         LM    R2,R3,0(R1)
         SLR   X,X
         L     R10,0(0,R2)  (R10) = COUNT
         SRL   R10,24
         LA    R2,4(0,R2)
LOOP     L     R4,0(X,R2) (R4)= BYTE 0 LAENGE, BYTES 1 BIS 3 PER PTR
         L     R5,4(X,R2) POSITION DES KOMMAS               DEZ-ZAHL
         LH    R6,6(X,R2)  INDEX LADEN
         SRL   R5,24
         STH   R5,FLOAT+14
         SRDL  R4,24
         SRL   R5,8
         BCTR  R4,R0
         EX    R4,PASSARG(R6)
*
FLOAT    STM   R14,R15,XGKSAVE
         UNPK  XGKARB,SCRATCH
         BAL   R14,XGLEIT
         DC    H'0'
         B     XGKKHM60+2
XGLEIT   NI    XGK02+1,X'0F'
         MVZ   XGKARB+6(1),XGKARB+15
         PACK  XGKDW1,XGKARB(7)
XGK01    CVB   R0,XGKDW1
         LPR   R1,R0
         N     R0,XGKMSK
         O     R0,XGKK4E
XGK02    NOP   XGK03
         STM   R0,R1,XGKDW2
         OI    XGK02+1,X'F0'
         PACK  XGKDW1,XGKARB+7(9)
         B     XGK01
XGK03    STM   R0,R1,XGKDW1
         LD    R0,XGKDW2
         MD    R0,XGKKE9
         AD    R0,XGKDW1
         TM    0(R14),X'F0'
         BO    XGK04
         LH    R15,0(R14)
         SLA   R15,3
         DD    R0,XGKSF(R15)
         BC    15,2(R14)
XGK04    CH    R15,XGKKHM60
         BNL   XGK041
         DD    R0,XGKSF+120
         B     XGK042
XGK041   SH    R15,XGKKH15
XGK042   SLA   R15,3
         BNM   XGK045
         LPR   R15,R15
         DD    R0,XGKSF(R15)
         BC    15,2(R14)
XGK045   MD    R0,XGKSF(R15)
         BC    15,2(R14)
XGKKE9   DC    D'1E9'
XGKMSK   DC    X'80000000'
XGKK4E   DC    X'4E000000'
XGKKHM60 DC    H'-60'
         B     XGKHW+2
XGKDW1   DS    D
XGKMANT  EQU   XGKDW1+1
XGKDW2   DS    D
XGKARB   DS    CL16
XGKDZWRT EQU   XGKARB+1
XGKSAVE  DS    4D
XGKKH15  DC    H'15'
XGKHW    DS    H
         B     XGKETBND+8
XGKSF    DC    D'1'
XGKETB   DC    D'1E1,1E2,1E3,1E4,1E5,1E6,1E7,1E8,1E9,1E10,1E11,1E12,1E1*
               3,1E14,1E15,1E16,1E17,1E18,1E19,1E20,1E21,1E22,1E23'
         DC    D'1E24,1E25,1E26,1E27,1E28,1E29,1E30,1E31,1E32,1E33,1E34*
               ,1E35,1E36,1E37,1E38,1E39,1E40,1E41,1E42,1E43,1E44,1E45'
         DC    D'1E46,1E47,1E48,1E49,1E50,1E51,1E52,1E53,1E54,1E55,1E56*
               ,1E57,1E58,1E59,1E60,1E61,1E62,1E63,1E64,1E65,1E66,1E67'
         DC    D'1E68,1E69,1E70,1E71,1E72,1E73,1E74'
XGKETBND DC    D'1E75'
         LM    R14,R15,XGKSAVE
*
         STD   R0,0(X,R3)
         LA    X,8(0,X)
         BCT   R10,LOOP
*
*     *****************************************************************
         SPACE 3
*     *****************************************************************
*
*        PROGRAMM-AUSGANG
         L     R13,SAVE+4
         L     R14,12(0,R13)
         LM    R2,R12,28(R13)
         MVI   12(R13),255
         BR    R14
*
*     *****************************************************************
*
*
*
*     *****************************************************************
*
*        DEFINITIONEN
*
SAVE     DS    9D
*
PASSARG  PACK  SCRATCH,0(R1,R5)
         ZAP   SCRATCH,0(R1,R5)
SCRATCH  DS    CL8
*     *****************************************************************
         LTORG
         END   CVGK
OSGMZZZ0 TITLE 'OSGMZZZ0 - DER QSAM GET MOVE FUER DEN INPUT'
SGMZZZ0  CSECT
         ENTRY OSGMZZZ0
         EXTRN ESGMZZZ0
         PRINT NOGEN
         ORG   *+16
OSGMZZZ0 DCB   DDNAME=DSGMZZZ0,DSORG=PS,MACRF=(GM),EODAD=ESGMZZZ0
         END
OSPMZZZ8 TITLE 'OSPMZZZ8 - DER QSAM-PUT-MOVE FUER DEN ANDEREN PRINTER'
SPMZZZ8  CSECT
         ENTRY OSPMZZZ8
         PRINT NOGEN
         ORG   *+16
OSPMZZZ8 DCB   DDNAME=DSPMZZZ8,DSORG=PS,MACRF=PM
         END
OSPMZZZ9 TITLE 'OSPMZZZ9 - DER QSAM PUT MOVE FUER DEN PRINTER-DRUCKER'
SPMZZZ9  CSECT
         ENTRY OSPMZZZ9
         PRINT NOGEN
         ORG   *+16
OSPMZZZ9 DCB   DDNAME=DSPMZZZ9,DSORG=PS,MACRF=PM
         END
SYSTSMFR TITLE 'SYSTSMFR - DAS KALKULIER- UND RECHENPROGRAMM FUER SMF'
         MACRO
         REQUATEN
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
FPR0     EQU   0
FPR2     EQU   2
FPR4     EQU   4
FPR6     EQU   6
         MEND
         ENTRY RECHEN
         ENTRY RECHEN74
         SPACE
SYSTSMFR CSECT
RECHEN   EQU   *
RECHEN74 EQU   *
         B     12(R15)
         DC    C'SYSTSMFR'
         STM   R14,R12,12(R13)
         LR    R9,R15
         USING SYSTSMFR,R9
         LR    R3,R1              SAVE PARM REG
         LA    R0,SVALEN          LENGTH OF SAVE AREA AND WORK  AREA
         GETMAIN R,LV=(0)
         ST    R13,4(R1)
         LR    R2,R13
         LR    R13,R1   ADDRESS OF SAVE AREA
         USING SVADSECT,R13       PROVIDE ADDRESSABILITY
         ST    R13,8(R2)
*        FELDER INITIALISIEREN
         LA    R0,DEVTAB
         LA    R1,TABLEN
         LA    R14,TABIMAGE
         LA    R15,TABLEN
         MVCL  R0,R14
         ZAP   CALCZEIT,=P'0'
         ZAP   CPUZEIT,=P'0'
         ZAP   KBYTES,=P'0'
         ZAP   LAUFZEIT,=P'0'
         ZAP   RF,=P'0'
         ZAP   RF2,=P'0'
         XC    DW,DW
         XC    FW,FW
         LR    R1,R3              RESTORE PARM REG
         L     R10,4(R1)          ADDRESS OF CBER-WORKA
         USING CALCULAT,R10
         LA    R4,ERRLZ
         LA    R5,13
LOESCH   EQU   *
         ZAP   0(5,R4),=P'0'
         LA    R4,5(R4)
         BCT   R5,LOESCH
         L     R11,0(R1)          ADDRESS OF SMF-RECORD
         LA    R14,TABSATZ        TABELLE DER GUELTIGEN SATZARTEN
CLC      EQU   *
         CLC   0(2,R14),0(R11)
         BE    VS2REC4       SATZART 4 ODER 34 WIRD VERARBEITET
         LA    R14,2(R14)
         CLI   0(R14),X'FF'       TABELLENENDE
         BNE   CLC                NEIN, NOCH MAL PRUEFEN
         CLC   0(2,R11),=X'0204'
         BE    VS2REC4
         CLC   0(2,R11),=X'0222'  SATZART 34 NUR IM VS2
         BE    VS2REC4
         CLC   0(2,R11),=X'0004'
         BE    VS2REC4
         LA    R11,4(R11)    POINT BEHIND THE RDW
VS2REC4  EQU   *
         USING SMFSATZ,R11
         CLC   0(2,R11),=X'0204'  IS IT VS2 RECORD 4
         BE    ANFANG        YES
         CLC   0(2,R11),=X'0222'  OR IS IT RECORD 34 (TSO)
         BE    ANFANG             YES
         CLC   0(2,R11),=X'0004'  IS IT MVT RECORD 4/Q
         BNE   RETURN        NO ONLY REC 4  ALLOWED
ANFANG   EQU   *
         LA    R2,102(R11)        ADDRESS OF LENGTH OF DEVISE-FIELDS
         LH    R3,0(R2)           LENGTH OF THE DEVICE-FILDS
         SH    R3,=H'2'           SUBTRACTED BY TWO
         C     R3,=F'8'
         BL    CALC7              NO DEVICES (PERHAPS ABEND)
         SRL   R3,3               DIVIDED BY 8 IS NUMBER OF DEVICES
         LA    R2,2(R2)           ADDRESS OF FIRST DEVICE
         EJECT
*
* ADDING OF EXCP'S INTO THE COUNT-FIELDS OF A TABLE
*
         SPACE
SCHLEIF0 EQU   *
         LA    R4,DEVTAB
         CLI   2(R2),X'06'        IS THIS A HASP-UNIT
         BNE   *+8                NO
         OI    0(R2),X'60'        YES, SIMULATE DEVTYPE '6...'
SCHLEIF1 EQU   *
         CLC   0(2,R4),=X'FFFF'   END OF TABEL
         BE    ENDTAB
         CLC   0(2,R4),0(R2)      DEVICETYPE WANTED
         BE    GEFUNDEN
         LA    R4,8(R4)           TABREG INCREMENTED
         B     SCHLEIF1
GEFUNDEN EQU   *
         L     R5,4(R4)           LOAD EXCP-COUNTER
         A     R5,4(R2)           ADD NUMBERS OF EXCP'S OF THIS DEVICE
         ST    R5,4(R4)           STORE AGAIN
         LH    R5,2(R4)           LOAD NUMBERS OF DIFFERENT DEVICETYPES
         LA    R5,1(R5)           INCREMENTEDC BY ONE
         STH   R5,2(R4)           STORED AGAIN
         LA    R2,8(R2)
         BCT   R3,SCHLEIF0        ALL DEVICES MUST BE CALCULATED
         EJECT
*
* NOW THE TABLE IS FILLED AND MUST BE CALCULATED
*
         SPACE
CALCULUS EQU   *
         XR    R7,R7              REGISTER FUER GESAMT-ZUGRIFFE
         SPACE
*
* ERSTE ABTEILUNG - PLATTEN
*
         SPACE
CALC1    EQU   *
         SR    R5,R5
         SR    R6,R6
         LA    R4,DEVTAB
CALCCLI1 EQU *
         CLI   0(R4),X'FF'
         BE    CALC1A
         CLI   0(R4),X'20'        DEVTYPE PLATTEN
         BE    CALC1B
CALC1BCT EQU   *
         LA    R4,8(R4)
         B     CALCCLI1
CALC1B   EQU   *
         AH    R5,2(R4) ANZAHL
         A     R6,4(R4) EXCP'S
         B     CALC1BCT
CALC1A   EQU   *
         CVD   R5,DW
         ZAP   PLDAT,DW
         AR    R7,R6
         CVD   R6,DW
         ZAP   PLZUG,DW
         EJECT
*
* ZWEITE ABTEILUNG - BAENDER
*
         SPACE
CALC2    EQU   *
         SR    R5,R5
         SR    R6,R6
         LA    R4,DEVTAB
CALCCLI2 EQU *
         CLI   0(R4),X'FF'
         BE    CALC2A
         CLI   0(R4),X'80'        DEVTYPE TAPPEN
         BE    CALC2B
CALC2BCT EQU   *
         LA    R4,8(R4)
         B     CALCCLI2
CALC2B   EQU   *
         AH    R5,2(R4) ANZAHL
         A     R6,4(R4) EXCP'S
         B     CALC2BCT
CALC2A   EQU   *
         CVD   R5,DW
         ZAP   BDDAT,DW
         AR    R7,R6
         CVD   R6,DW
         ZAP   BDZUG,DW
         EJECT
*
* DRITTE ABTEILUNG - UR-EINHEITEN
*
         SPACE
CALC3    EQU   *
         SR    R5,R5
         SR    R6,R6
         LA    R4,DEVTAB
CALCCLI3 EQU *
         CLI   0(R4),X'FF'
         BE    CALC3A
         CLI   0(R4),X'08'        DEVTYPE UR-EINHEITEN
         BE    CALC3B
         CLI   0(R4),X'10'        DEVTYPE 3270 (ZU UR)
         BE    CALC3B
         CLI   0(R4),X'40'        DEVTYPE TP (ZU UR)
         BE    CALC3B
CALC3BCT EQU   *
         LA    R4,8(R4)
         B     CALCCLI3
CALC3B   EQU   *
         AH    R5,2(R4) ANZAHL
         A     R6,4(R4) EXCP'S
         B     CALC3BCT
CALC3A   EQU   *
         CVD   R5,DW
         ZAP   URDAT,DW
         AR    R7,R6
         CVD   R6,DW
         ZAP   URZUG,DW
         EJECT
*
* VIERTE ABTEILUNG - HASP-SYSIN
*
         SPACE
CALC4    EQU   *
         SR    R5,R5
         SR    R6,R6
         LA    R4,DEVTAB
CALCCLI4 EQU *
         CLI   0(R4),X'FF'
         BE    CALC4A
         CLC   0(2,R4),=X'6801'   2540R-HASP-READER
         BE    CALC4B
         CLC   0(2,R4),=X'6802'   2540P-HASP-PUNCHER
         BE    CALC4B
         CLC   0(2,R4),=X'6803'   1442-HASP-PUNCHER
         BE    CALC4B
         CLC   0(2,R4),=X'6805'   2520P-HASP-INTERN-READER
         BE    CALC4B
CALC4BCT EQU   *
         LA    R4,8(R4)
         B     CALCCLI4
CALC4B   EQU   *
         AH    R5,2(R4) ANZAHL
         A     R6,4(R4) EXCP'S
         B     CALC4BCT
CALC4A   EQU   *
         CVD   R5,DW
         ZAP   SIDAT,DW
         AR    R7,R6
         CVD   R6,DW
         ZAP   SIKAR,DW
         EJECT
*
* FUENFTE ABTEILUNG - HASP-SYSOUT
*
         SPACE
CALC5    EQU   *
         SR    R5,R5
         SR    R6,R6
         LA    R4,DEVTAB
CALCCLI5 EQU *
         CLI   0(R4),X'FF'
         BE    CALC5A
         CLC   0(2,R4),=X'6808'   1403-HASP-PRINTER
         BE    CALC5B
         CLC   0(2,R4),=X'680A'   1443-HASP-PRINTER
         BE    CALC5B
CALC5BCT EQU   *
         LA    R4,8(R4)
         B     CALCCLI5
CALC5B   EQU   *
         AH    R5,2(R4) ANZAHL
         A     R6,4(R4) EXCP'S
         B     CALC5BCT
CALC5A   EQU   *
         CVD   R5,DW
         ZAP   SODAT,DW
         AR    R7,R6
         CVD   R6,DW
         ZAP   SOZEI,DW
         EJECT
*
* GESAMT-ZUGRIFFE ALS INHALT DES R7
*
         SPACE
CALC6    EQU   *
         CVD   R7,DW
         ZAP   ZUGR,DW            GESAMT-ZUGRIFFE
         EJECT
*
* ERRECHNEN CPU- UND PROCESS-ZEIT
*
         SPACE
CALC7    EQU   *
         MVC   FW,2(R11)
         L     R2,FW
         MVC   FW,39(R11)
         L     R3,FW
         CR    R2,R3
         BNL   *+8
         A     R2,=F'8640000'
         SR    R2,R3
         CVD   R2,DW
         ZAP   LAUFZEIT,DW
         LA    R2,102(R11)
         AH    R2,102(R11)
         XC    FW,FW
         MVC   FW+1(3),1(R2)
         L     R2,FW
         CVD   R2,DW
         ZAP   CPUZEIT,DW
         ZAP   CALCZEIT,CPUZEIT
         ZAP   DW,BDZUG
         MP    DW,=P'18'          18 MILLISEC'S JE BAND-EXCP (AB LEV 06
         SRP   DW,64-1,5
         AP    CALCZEIT,DW+3(5)
         ZAP   DW,PLZUG
         MP    DW,=P'36'          36 MIILISEC'S JE DISK-EXCP (AB LEV 06
         SRP   DW,64-1,5
         AP    CALCZEIT,DW+3(5)
         L     R2,ANZ1287
         CVD   R2,DW
         MP    DW,=P'360'         360 MILLISEC'S JE 1287-EXCP AB LEV 06
         SRP   DW,64-1,5
         AP    CALCZEIT,DW+3(5)
         ZAP   ERRLZ,CALCZEIT     PROCESS-ZEIT KANN HOEHER ALS LAUFZEIT
         EJECT
*
* ERRECHNEN K BYTES
*
         SPACE
CALC7A   EQU   *
         ZAP   KBYTES,=P'0'       AB LEVEL 006 FUER VIRTUAL NIX MEHR
         TM    SMF4RIN,1
         BNO   CALC8         STORAGE IS VIRTUAL
         XC    FW,FW
         MVC   FW+2(2),74(R11)
         L     R2,FW
         CVD   R2,DW
         ZAP   KBYTES,DW
         EJECT
*
* ERRECHNEN KOSTEN
*
         SPACE
CALC8    EQU   *
         ZAP   RF,CPUZEIT         AB LEVEL 006 IST DIE BASIS DIE CPUZT
         MP    RF,=P'0750'        2700,00 DM / STUNDE PROCESSZEIT LEV 6
         AP    RF2,RF
         ZAP   RF,CALCZEIT
         MP    RF,KBYTES          3,60 DM JE STUNDE PROC-ZEIT + K REAL
         AP    RF2,RF
         ZAP   RF,CALCZEIT
         MP    RF,PLDAT
         MP    RF,=P'20'          72,00 DM JE DISKEN-STUNDE
         AP    RF2,RF
         ZAP   RF,CALCZEIT
         MP    RF,BDDAT
         MP    RF,=P'30'         108,00 DM JE TAPPEN-STUNDE AB LEVEL 06
         AP    RF2,RF
         ZAP   RF,SIKAR
         MP    RF,=P'300'         DM 3,00 / 1000 KARTEN
         AP    RF2,RF
         ZAP   RF,SOZEI
         MP    RF,=P'200'         DM 2,00 / 1000 ZEILEN
         AP    RF2,RF
         L     R2,ANZ1287
         LTR   R2,R2
         BZ    CALC9
         ZAP   RF,CALCZEIT
         MP    RF,=P'20'           72,00 DM JE BELEGLESER-STUNDE
         AP    RF2,RF
CALC9    EQU   *
         SRP   RF2,64-3,5
         ZAP   KOSTEN,RF2
         EJECT
*
* CALCULATING IS DONE, TABLE MUST BE CLEARED - GAME IS OVER
*
         SPACE
CLEAR    EQU   *
         LA    R4,DEVTAB
SCHLEIF9 EQU   *
         CLC   0(2,R4),=X'FFFF'
         BE    RETURN
         XC    2(6,R4),2(R4)      ALL COUNTERS TO BE CLEARD
         LA    R4,8(R4)
         B     SCHLEIF9
         SPACE
RETURN   EQU   *
         LR    R1,R13             GET ADDR OF SA
         L     R13,4(R1)
         LA    R0,SVALEN          GET LENGTH TO BE FREED
         FREEMAIN R,LV=(0),A=(1)
         LM    R14,R12,12(R13)
         XR    R15,R15
         BR    R14
         EJECT
ENDTAB   EQU   *
         WTO   'SYSTSMFQ - TABELLE FALSCH'
         LA    R15,4090
         B     ABEND
ABEND    EQU   *
         ABEND (R15),DUMP
         EJECT
*
* SPEICHER IM HAUPTPROGRAMM ZUR AUSFUELLUNG IN SYSTSMFQ
*
         SPACE
CALCULAT DSECT
CBER     DS    0CL65
ERRLZ    DC    PL5'0'             ERRECHN. LAIFZEIT IN HUNDERTSTEL SEK.
ZUGR     DC    PL5'0'             GESAMT ZUGRIFFE
PLDAT    DC    PL5'0'             PLATTEN DATEIEN
PLZUG    DC    PL5'0'             PLATTEN ZUGRIFFE
BDDAT    DC    PL5'0'             BAND DATEIEN
BDZUG    DC    PL5'0'             BAND ZUGRIFFE
URDAT    DC    PL5'0'             UR DATEIEN
URZUG    DC    PL5'0'             UR ZUGRIFFE
SIDAT    DC    PL5'0'             SYSIN DATEIEN (HASP)
SIKAR    DC    PL5'0'             SYSIN KARTEN (HASP)
SODAT    DC    PL5'0'             SYSOUT DATEIEN (HASP)
SOZEI    DC    PL5'0'             SYSOUT ZEILEN (HASP)
KOSTEN   DC    PL5'0'             PROGRAMMKOSTEN (9,2 / DM)
         EJECT
SYSTSMFR CSECT
         SPACE
*
* TABELLE DER DEVICE-TYPEN UND ANZAHLEN
*
         SPACE
         DS    0D
TABIMAGE EQU   *
         DC    X'0801',H'0',F'0'  2540R
         DC    X'0802',H'0',F'0'  2540P
         DC    X'0804',H'0',F'0'  2501
         DC    X'0808',H'0',F'0'  1403
         DC    X'081B',H'0',F'0'  1287
         DC    X'0822',H'0',F'0'  3210
         DC    X'0823',H'0',F'0'  3215
         DC    X'1009',H'0',F'0'  3277
         DC    X'100B',H'0',F'0'  3286
         DC    X'2008',H'0',F'0'  2314
         DC    X'2009',H'0',F'0'  3330
         DC    X'4013',H'0',F'0'  2740
         DC    X'4015',H'0',F'0'  3705
         DC    X'4092',H'0',F'0'  TP-LINES
         DC    X'4093',H'0',F'0'  BSC  LINES
         DC    X'6801',H'0',F'0'  2540R-HASP
         DC    X'6802',H'0',F'0'  2540P-HASP
         DC    X'6803',H'0',F'0'  1442P-HASP
         DC    X'6804',H'0',F'0'  2501-HASP
         DC    X'6805',H'0',F'0'  2520-HASP
         DC    X'6808',H'0',F'0'  1403-HASP
         DC    X'680A',H'0',F'0'  1443-HASP
         DC    X'8003',H'0',F'0'  3420
         DC    X'0000',H'0',F'0'  WEIL SMF AUCH LEERE DEVICES SCHREIBT
         DC    X'FF00',H'0',F'0'  ANFANG DER IMS-SMF-SAETZE
         DC    X'FF01',H'0',F'0'  GU
         DC    X'FF02',H'0',F'0'  GN
         DC    X'FF03',H'0',F'0'  GNP
         DC    X'FF04',H'0',F'0'  GHU
         DC    X'FF05',H'0',F'0'  GHN
         DC    X'FF06',H'0',F'0'  GHNP
         DC    X'FF07',H'0',F'0'  ISRT
         DC    X'FF08',H'0',F'0'  DLET
         DC    X'FF09',H'0',F'0'  REPL
         DC    X'FF0A',H'0',F'0'  MOVE CALL
         DC    X'FF0B',H'0',F'0'  GU - MESSAGE CALLS
         DC    X'FF0C',H'0',F'0'  GN - MESSAGE CALLS
         DC    X'FF0D',H'0',F'0'  ISRT - MESSAGE CALLS
         DC    X'FF0E',H'0',F'0'  DLET - MESSAGE CALLS
         DC    X'FF0F',H'0',F'0'  ENDE DER IMS-SMF-SAETZE
         DC    X'FFFF',H'0',F'0'  ENDE
TABEND   EQU   *
TABLEN   EQU   TABEND-TABIMAGE
         EJECT
         REQUATEN
ANZ1287  EQU   DEVTAB+36
SVADSECT DSECT
SVASTRT  EQU   *
SVA      DC    18F'0'
DW       DS    D
DEVTAB   DS    0D
         DS    CL(TABLEN)
FW       DC    F'0'
CALCZEIT DC    PL5'0'
CPUZEIT  DC    PL5'0'
KBYTES   DC    PL5'0'
LAUFZEIT DC    PL5'0'
RF       DC    PL15'0'
RF2      DC    PL15'0'
SVAEND   EQU   *
SVALEN   EQU   SVAEND-SVASTRT
         EJECT
SMFSATZ  DSECT
         SPACE 3
RECORD4  IFASMFR 4
         EJECT
         ORG   SMFSATZ
RECORD34 IFASMFR 34
         EJECT
SYSTSMFR CSECT
TABSATZ  DC    X'000002000001020100060206000C020C0222FF'
         SPACE
         LTORG
*
*
*
*
*
*
*
LEVEL    DC    C'003 - 24.07.74'
         END   RECHEN
         PRINT NOGEN
SYSTCWTG CSECT
         USING *,3
         STM    14,12,12(13)
         LR     3,15
         LR     14,13
         BAL    13,*+76
SAVEAREA DS     18F
         ST     14,SAVEAREA+4
         ST     13,8(14)
         L     5,0(1)
         L     6,4(1)
         CLI   0(5),C'P'
         BE    PACKED
         CLI   0(5),C'C'
         BE    CHARACT
         B     DAYTIME
PACKED   ZAP   WORT,0(4,6)
         CP    WORT+2(2),=P'0'
         BE    ERROR1
         CP    WORT+2(2),=P'366'
         BH    ERROR1
         CLI   WORT+1,X'00'
         BE    ERROR1
         B     OK1
CHARACT  EQU   *
         MVC   DATUM,0(6)
         CLC   TAG,=C'31'
         BH    ERROR
         CLC   TAG,=C'01'
         BL    ERROR
         CLC   MONAT,=C'12'
         BH    ERROR
         CLC   JAHR,=C'00'
         BE    ERROR1
         B     OK2
DAYTIME  EQU   *
         TIME  DEC
         ST    1,WORT
         B     OK1
         LTORG
         CNOP  0,4
OK1      EQU   *
         BAL   1,*+16
         DC    A(DATUM)
         DC    A(WORT)
         DC    V(SYSTCWDT)
         L     15,*-4
         BALR  14,15
         EJECT
SYSTCWDT CSECT
         PUSH  USING
         STM   14,15,12(13)
         ST    2,28(,13)
         USING SYSTCWDT,15
         EJECT
         L     2,4(,1)
         L     1,0(,1)
         MVC   24(4,13),0(2)
         MVO   20(4,13),24(2,13)
         OI    23(13),X'0F'
         UNPK  5(3,1),22(2,13)
         MVI   5(1),C'.'
         LA    2,SEARCH
         CP    26(2,13),=P'59'
         BCR   13,2
         CP    22(2,13),=P'60'
         BH    SWCHTEST
         BCR   8,2
         CP    22(2,13),=P'20'
         BCR   8,2
         ZAP   22(2,13),22(2,13)
         BCR   8,2
SWCHTEST DP    20(4,13),=P'4'
         ZAP   23(1,13),23(1,13)
         BCR   7,2
         CP    26(2,13),=P'60'
         BNE   SUBADAY
         MVC   0(5,1),=C'29.02'
         B     FEB29
SUBADAY  SP    26(2,13),=P'1'
SEARCH   LA    2,DATTAB-4
COMPARE  CP    26(2,13),6(2,2)
         BNH   CALCULAT
         LA    2,4(,2)
         B     COMPARE
CALCULAT MVC   3(2,1),0(2)
         SP    26(2,13),2(2,2)
         OI    27(13),X'0F'
         UNPK  21(3,13),26(2,13)
         MVC   0(2,1),22(13)
         MVI   2(1),C'.'
FEB29    EQU   *
         B     EXIT
         EJECT
DATTAB   DC    X'F0F1000C'
         DC    X'F0F2031C'
         DC    X'F0F3059C'
         DC    X'F0F4090C'
         DC    X'F0F5120C'
         DC    X'F0F6151C'
         DC    X'F0F7181C'
         DC    X'F0F8212C'
         DC    X'F0F9243C'
         DC    X'F1F0273C'
         DC    X'F1F1304C'
         DC    X'F1F2334C'
         DC    X'4040367C'
EXIT     LM    14,15,12(13)
         L     2,28(,13)
         BR    14
         LTORG
         EJECT
         POP   USING
SYSTCWTG CSECT
OK2      EQU   *
         PACK  DWORT,MONAT
         CVB   8,DWORT
         ST    8,DWORT
         TR    DWORT+3(1),TRMONAT
         MVC   KM,DWORT+3
         PACK  DWORT,TAG
         DP    DWORT,=P'7'
         ZAP   KT,DWORT+7(1)
         PACK  DWORT,JAHR
         DP    DWORT,=P'7'
         ZAP   KJ,DWORT+7(1)
         PACK  DWORT,JAHR
         DP    DWORT,=P'4'
         CP    DWORT+7(1),=P'0'
         BE    SCHALT
NOSCHALT EQU   *
         PACK  DWORT,JAHR
         B     ANSCHLUS
SCHALT   EQU   *
         PACK  DWORT,JAHR
         CLC   MONAT,=C'02'
         BH    *+10
         SP    DWORT,=P'4'
ANSCHLUS EQU   *
         DP    DWORT,=P'4'
         DP    DWORT(7),=P'7'
         ZAP   KS,DWORT+6(1)
         ZAP   DWORT,KT
         AP    DWORT,KM
         AP    DWORT,KJ
         AP    DWORT,KS
         DP    DWORT,=P'7'
         MVC   M,DWORT+7
         UNPK  M,M
         UNPK  KS,KS
         UNPK  KJ,KJ
         UNPK  KM,KM
         UNPK  KT,KT
         OC    KM(5),=C'00000'
         MVC   0(1,5),M
         L     13,SAVEAREA+4
         LM    14,12,12(13)
         LA    15,0
         BR    14
ERROR1   WTL   'DATUM NUR IM BEREICH VOM 1.1.1901 BIS 31.12.1999 '
ERROR    EQU   *
         MVC   MESSAGF+8(8),DATUM
MESSAGF  WTL   '             '
         WTL   '2.PARAMETER IST FALSCH (CALL SYSTCWTG)'
         ABEND 0600,DUMP
         CNOP  0,4
DWORT    DS    D
DATUM    DS    0CL8
TAG      DS    CL2
         DS    C
MONAT    DS    CL2
         DS    C
JAHR     DS    CL2
WORT     DS    F
TRMONAT  DC    X'5C0C3C3C6C1C4C6C2C5C0C3C5C'
KM       DS    C
KS       DS    C
KJ       DS    C
KT       DS    C
M        DS    C
         LTORG
         END
SYSTMDAT TITLE 'SYSTMDAT - DER JULIANISCHE GREGORIANER'
***********************************************************************
*        MODULE SYSTMDAT
*
*        ZWECK
*              WANDELT DAS DATUM VON MASCHINENFORMAT (00JJTTTC)
*              IN DIE NORMALFORM (TT.MM.JJ) UM.
*
*        BESCHREIBUNG DER PARAMETER
*              BEI EINGANG WEIST REGISTER 1 AUF EINE LISTE DES FORMATS-
*                           ************************
*                           * ADR. NORMAL-DATUM    *
*                           ************************
*                           * ADR. MASCHINEN-DATUM *
*                           * **********************
*
*        AUFRUF
*              CALL SYSTMDAT,(NORMALDATUM,MASCHINENDATUM)
*
*        VERWENDETE UNTERPROGRAMME
*              KEINE
*
*        VERWENDETE MAKROS
*              KEINE
*
*        ATTRIBUT
*              REENTRANT
*
***********************************************************************
         EJECT
***********************************************************************
*
SYSTMDAT CSECT
ARG      EQU   1
CVT      EQU   2
WRK      EQU   13
NZ       EQU   7
EQ       EQU   8
LE       EQU   13
         B     12(,15)
         DC    CL8'SYSTMDAT'
         STM   14,15,12(13)
         ST    2,28(,13)
         USING SYSTMDAT,15
*
***********************************************************************
         SPACE 3
***********************************************************************
*
         L     2,4(,1)      ADRESSE DES MASCHINENDATUMS LADEN
         L     1,0(,1)      ADRESSE DES EMPFANGSFELDES LADEN
         MVC   24(4,WRK),0(2)  MASCHINENDATUM UEBERNEHMEN
*
         MVO   20(4,WRK),24(2,WRK)  JAHRAUFBEREITEN
         OI    23(WRK),X'0F'          UND IN DAS
         UNPK  5(3,ARG),22(2,WRK)         ERGEBNISFELD
         MVI   5(ARG),C'.'                          UEBERTRAGEN
*
         LA    2,SEARCH
         CP    26(2,WRK),=P'59' WENN TAGZAHL KLEINER-GLEICH 59, KANN
         BCR   LE,2    PRUEFUNG AUF SCHALTJAHR ENTFALLEN.
         CP    22(2,WRK),=P'60'   1960 IST KEIN SCHALTJAHR
         BH    SWCHTEST JAHR LIEGT ZWISCHEN 1960 UND 2000
         BCR   EQ,2
         CP    22(2,WRK),=P'20'   1920 IST KEIN SCHALTJAHR
         BCR   EQ,2
         ZAP   22(2,WRK),22(2,WRK) JAHR 2000 IST
         BCR   EQ,2                       KEIN SCHALTJAHR
*
*        AUF SCHALTJAHR PRUEFEN
SWCHTEST DP    20(4,WRK),=P'4'  WENN DIE JETZT VERBLEIBENDE JAHRZAHL
         ZAP   23(1,WRK),23(1,WRK) EIN VIELFACHES VON 4 IST,
         BCR   NZ,2      IST ES EIN SCHALTJAHR
         CP    26(2,WRK),=P'60'   WENN TAGZAHL = 60
         BNE   SUBADAY
         MVC   0(5,ARG),=C'29.02'      WIRD EIN TAG
         B     FEB29   ES IST DER 29. FEBRUAR
SUBADAY  SP    26(2,WRK),=P'1'    VON DER TAGZAHL SUBTRAHIERT.
SEARCH   LA    2,DATTAB-4         MIT EINERTABELLE WIRD DER
COMPARE  CP    26(2,WRK),6(2,2)        MONAT GESUCHT, IN DIE
         BNH   CALCULAT    TAGZAHL
         LA    2,4(,2)             SICH
         B     COMPARE                  BEFINDET,
*
CALCULAT MVC   3(2,ARG),0(2) MONAT IN DAS ERGEBNISFELD UEBERTRAGEN.
         SP    26(2,WRK),2(2,2)   TAG AUS TAGZAHL UND
         OI    27(WRK),X'0F'      TABELLENWERT BERECHNEN
         UNPK  21(3,WRK),26(2,WRK)  AUFBEREITEN UND IN DAS
         MVC   0(2,ARG),22(WRK)   ERGEBNISFELD UEBERTRAGEN
         MVI   2(ARG),C'.'
FEB29    EQU   *
         B     EXIT
*
DATTAB   DC    X'F0F1000C'
         DC    X'F0F2031C'
         DC    X'F0F3059C'
         DC    X'F0F4090C'
         DC    X'F0F5120C'
         DC    X'F0F6151C'
         DC    X'F0F7181C'
         DC    X'F0F8212C'
         DC    X'F0F9243C'
         DC    X'F1F0273C'
         DC    X'F1F1304C'
         DC    X'F1F2334C'
         DC    X'4040367C'
*
***********************************************************************
         SPACE 3
***********************************************************************
*
*        MODUL-EXIT
*
EXIT     LM    14,15,12(13)
         L     2,28(,13)
         BR    14
*
***********************************************************************
         LTORG
         END   SYSTMDAT
***********************************************************************
***********************************************************************
***************                                     *                 *
***************         PROGRAMM-FEHLER-BEHANDLUNG  *  VON            *
***************                                     * JACQUES TOUCHET *
***********************************************************************
CHECKRT  CSECT
         ENTRY CHECKRT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         USING CHECKRT,R15
         STM   R0,R15,CKSAVE
         B     CKSAVE+64
CKSAVE   DS    16F
         LR    R4,R15
         DROP  R15
         USING CHECKRT,R4
         L     R1,16         CVT ADR AUS LOC HEX'10'
         L     R1,0(R1)      TCB ADR IN R1 LADEN
         L     R1,4(R1) ADR DES LAUF. TCB IN R1 LADEN
         L     R1,12(R1) TIOT ADR AUS TCB IN R1 LADEN
         MVC   CONSOR+16(8),0(R1) JOBNAME
         MVC   UPRO2+8(8),0(R1) JOBNAME
         MVC   STEPNAME,8(R1)
         L     R1,CKSAVE+4
         L     R2,8(R1)
         SLL   R2,8
         SRL   R2,8
         BCTR  R2,0
         BCTR  R2,0
         CL    R2,STOPADDR
         BNE   OBTEST
         XC    STOPADDR,STOPADDR
         ST    R2,8(R1)
         MVC   0(2,R2),STOPINST
         MVC   UPRO2+17(18),=C'STOP-ADDR ERREICHT'
         MVI   UPRO2+5,X'1F'
         BAL   R10,UPRO2
         B     A
         SPACE
OBTEST   L     R12,CKSAVE+12
         LA    R12,124(R12)
         CR    R12,R2
         BNE   FEHLER
         MVC   UPRO2+17(27),=C'JCL CALL  STOP-ADR SETZEN !'
         MVI   UPRO2+5,X'28'
         BAL   R10,UPRO2
         B     A
         EJECT
FEHLER   L     R1,CKSAVE+4
         LA    R1,4(R1)           OLD PSW ADDR.
         L     R2,4(R1)
         SLL   R2,8
         SRL   R2,8
         L     R12,CKSAVE+12
         S     R2,100(R12)      - REL. FACTOR
         ST    R2,DINTVL
         UNPK  UPRO2+17(9),0(5,R1)
         UNPK  UPRO2+25(9),4(5,R1)
         UNPK  UPRO2+34(9),DINTVL(5)
         LA    R2,TRANSTAB-240
         TR    UPRO2+17(25),0(R2)
         MVI   UPRO2+33,C' '
         XR    R2,R2
         IC    R2,3(R1)
         SLL   R2,4
         LA    R2,CKTEXT-16(R2)
         MVC   UPRO2+42(2),BLANK
         MVC   UPRO2+44(16),0(R2)
         MVI   UPRO2+5,X'38'
         BAL   R10,UPRO2
         CLC   STEPNAME(4),=C'TEST'
         BNE   DUMP
         EJECT
***********************************************************************
********************************* WAS IST ZU TUN **********************
***********************************************************************
A        LA    R11,WHAT
         BAL   R10,UPRO1
         B     REPLY1
***********************************************************************
B        LA    R11,ONCE
         BAL   R10,UPRO1
***********************************************************************
         SPACE
REPLY1   CLI   ANTWORT,C'E'
         BE    END
         CLI   ANTWORT,C'N'
         BE    NEXT
         CLI   ANTWORT,C'A'
         BE    GOTO
         CLI   ANTWORT,C'G'
         BE    GETREG
         CLI   ANTWORT,C'R'
         BE    PRINTREG
         CLI   ANTWORT,C'S'
         BE    STORAGE
         CLI   ANTWORT,C'I'
         BE    INPUT
         CLI   ANTWORT,C'H'
         BE    HALT
         CLI   ANTWORT,C'W'
         BE    WAIT
         CLI   ANTWORT,C'D'
         BE    DUMP
         CLI   ANTWORT,C'P'
         BE    PDUMP
         B     B                  ONCE MORE
         EJECT
***********************************************************************
*                             *** END      ***                        *
***********************************************************************
END      ABEND 4090
***********************************************************************
*                             *** NEXT     ***                        *
***********************************************************************
NEXT     LM    R0,R15,CKSAVE
         BR    R14
***********************************************************************
*                             *** GOTO     ***                        *
***********************************************************************
GOTO     LA    R11,TO
         BAL   R10,UPRO1
         L     R10,FULL
         L     R1,CKSAVE+4
         ST    R10,8(R1)
         B     NEXT
***********************************************************************
*                             *** WAIT     ***                        *
***********************************************************************
WAIT     LA    R11,TIME
         BAL   R10,UPRO1
         MVC   DINTVL,ANTWORT
         STIMER WAIT,,DINTVL=DINTVL
         MVC   UPRO2+17(12),=C'TIME EXPIRED'
         MVI   UPRO2+5,X'19'
         BAL   R10,UPRO2
         B     A
         EJECT
***********************************************************************
*                             *** GETREG   ***                        *
***********************************************************************
GETREG   LA    R11,REG
         BAL   R10,UPRO1
         CLI   ANTWORT,193
         BL    B
         CLI   ANTWORT,198
         BNH   REGOK
         CLI   ANTWORT,240
         BL    B
         CLI   ANTWORT,249
         BH    B
REGOK    LA    R2,TRANSTAB-240
         TR    ANTWORT(1),0(R2)
         PACK  ANTWORT(2),ANTWORT(2)
         XR    R12,R12
         IC    R12,ANTWORT
         SLL   R12,2
         LA    R5,CKSAVE(R12)
         LA    R11,FOR
         BAL   R10,UPRO1
         L     R11,FULL
         ST    R11,0(R5)
         B     A
***********************************************************************
*                             *** DUMP     ***                        *
***********************************************************************
*        ABEND 4095,DUMP
         DS    0F
         DC    AL1(128) DUMP/STEP CODE
         DC    AL3(4095) COMPLETION CODE
DUMP     L     R0,CKSAVE RESTORE REG 0 BEFOR DUMP
         L     R1,*-8 LOAD CODES INTO REG 1
         LM    R2,R15,CKSAVE+8 RESTORE REG 2-15 BEFOR DUMP
         SVC   13 LINK TO ABEND ROUTINE
***********************************************************************
         EJECT
***********************************************************************
*                             *** INPUT    ***                        *
***********************************************************************
INPUT    LA    R11,ON
         BAL   R10,UPRO1
         L     R2,FULL
         LA    R11,TWO
         BAL   R10,UPRO1
         MVC   0(2,R2),FULL+2
         B     A
***********************************************************************
*                             *** HALT     ***                        *
***********************************************************************
HALT     LA    R11,AT
         BAL   R10,UPRO1
         L     R10,FULL
         MVC   STOPINST,0(R10)
         ST    R10,STOPADDR
         XC    0(2,R10),0(R10)    REASON OF PRCHCK
         B     A
***********************************************************************
*                             *** STORAGE  ***                        *
***********************************************************************
STORAGE  LA    R11,FROM
         BAL   R10,UPRO1
         MVC   UPRO2+17(6),ANTWORT
         MVI   UPRO2+14,X'49'
         LA    R9,1
         L     R5,FULL
         B     REGGRUP
***********************************************************************
         EJECT
***********************************************************************
*                             *** PRINTREG ***                        *
***********************************************************************
PRINTREG MVC   UPRO2+17(7),REGIS
         LA    R9,3
         LA    R5,CKSAVE+4
REGGRUP  LA    R2,TRANSTAB-240
         LA    R15,UPRO2+24
         LA    R2,5
NEXTREG  UNPK  0(9,R15),0(5,R5)
         TR    0(8,R15),0(R2)
         MVC   8(2,R15),BLANK
         LA    R15,10(R15)
         LA    R5,4(R5)
         BCT   R2,NEXTREG
         MVI   UPRO2+5,X'46'
         BAL   R10,UPRO2
         BCT   R9,REGGRUP
         B     A
***********************************************************************
         EJECT
***********************************************************************
*                             *** PDUMP    ***                        *
***********************************************************************
PDUMP    LA    R11,FROM
         BAL   R10,UPRO1
         MVC   ADDRLIST(4),FULL
         LA    R11,TO
         BAL   R10,UPRO1
         MVC   ADDRLIST+4(4),FULL
         OI    ADDRLIST+4,X'80'
         OPEN  (SNAPDCB,(OUTPUT))
*.......................  SNAP-MACRO SIMULATION ............
*        SNAP  DCB=SNAPDCB,PDATA=REGS,LIST=ADDRLIST        .
         L     R0,CKSAVE RESTORE REG 0 BEFOR SNAP          .
         LA    R1,SNEND ;                                  .
         LM    R2,R15,CKSAVE+8 RESTORE REG 2-15 BEFOR SNAP .
         CNOP  0,4 ;                                       .
         BAL   R1,0(R1) BRANCH AROUND PARAM LIST           .
         DC    AL1(0,0,132,32) ;                           .
         DC    A(SNAPDCB,0) DCB,TCB ADDRESS                .
         DC    A(ADDRLIST) ADDRESS OF SNAPSHOT LIST        .
SNEND    SVC   51 LINK TO SNAP ROUTINE                     .
         CNOP  2,4 ;                                       .
         BALR  R1,R0 ;                                     .
         B     8(R1) ;                                     .
BASER4   DC    A(CHECKRT) ;                                .
         L     R4,4(R1) RELOAD BASIS REGISTER 4            .
*...........................................................
         CLOSE SNAPDCB
         B     A
SNAPDCB  DCB   DSORG=PS,RECFM=VBA,MACRF=W,LRECL=125,BLKSIZE=882,       *
               DDNAME=SYSSNAP
***********************************************************************
*                             *** DEFINITION ***                      *
***********************************************************************
ONCE     DC    X'01'              ANTWORT-LAENGE
         DC    X'18'              TEXT-LAENGE+2+4
         DC    C'ONCE MORE'
ON       DC    X'06'
         DC    X'16'
         DC    C'ON ADDR'
TO       DC    X'06'
         DC    X'16'
         DC    C'TO ADDR'
AT       DC    X'06'
         DC    X'16'
         DC    C'AT ADDR'
FROM     DC    X'06'
         DC    X'18'
         DC    C'FROM ADDR'
TWO      DC    X'04'
         DC    X'16'
         DC    C'2 BYTES'
FOR      DC    X'08'
         DC    X'16'
         DC    C'4 BYTES'
WHAT     DC    X'01'
         DC    X'15'
         DC    C'WHAT ?'
REG      DC    X'01'
         DC    X'18'
         DC    C'REGNR 0-F'
TIME     DC    X'08'
         DC    X'1C'
         DC    C'TIME HHMMSS'
         DC    X'A3'
         DC    X'88'
         SPACE 3
         DS    0D
         DC    X'00FAFBFCFDFEFF40'
ADDRLIST EQU   *
DINTVL   DS    D
STOPADDR DS    F
FULL     DS    F
         DS    H
STOPINST DS    H
REGIS    DC    C'REG'
BLANK    DC    C'     '
         DC    C'    '
ANTWORT  DS    CL8
TRANSTAB DC    C'0123456789ABCDEF'
CKTEXT   DC    C'OPERATION       '
         DC    C'PRIV. OPERATION '
         DC    C'EXECUTION       '
         DC    C'PROTECTION      '
         DC    C'ADDRESSING      '
         DC    C'SPECIFICATION   '
         DC    C'DATA CHECK      '
         DC    C'FX-POINT OVERFL '
         DC    C'FX-POINT DIV    '
         DC    C'DECIMAL OVERFLOW'
         DC    C'DECIMAL DIVIDE  '
         DC    C'EXPONENT OVERFL '
         DC    C'EXPONENT UND-FL '
         DC    C'SIGNIFICATION   '
         DC    C'FL POINT DIVIDE '
ECB1     DS    D
WORK     DS    D
STEPNAME DS    CL8
         EJECT
***********************************************************************
*                             *** WRITE-UPRO'S ***                    *
***********************************************************************
UPRO1    MVC   CONSOR+4(1),0(R11) ANTWORT-LAENGE
         MVC   CONSOR+13(1),1(R11) TEXT-LAENGE+2+4
         XR    R12,R12
         IC    R12,1(R11)
         SH    R12,=H'16'
         STC   R12,*+5            MVC LAENGESCHLUESSEL
         MVC   CONSOR+25,2(R11)   TEXT
         XC    ECB1,ECB1
CONSOR   WTOR  'R,                    ',ANTWORT,8,ECB1
         WAIT  ECB=ECB1
         OC    ANTWORT,BLANK      CREATE CAPITAL LETTERS
         CLI   ANTWORT,C'V'
         BNE   NOV
         CLI   0(R11),X'06'
         MVI   ANTWORT,C'0'
         BE    ISTADDR
         SH    R10,=H'8'
         BR    R10                ONCE MORE
NOV      CLI   0(R11),X'01'
         BCR   8,R10
         CLI   0(R11),X'06'
         BNE   *+8
         NI    NOAD+1,X'0F'
ISTADDR  XR    R12,R12
         IC    R12,0(R11)
         BCTR  R12,0
         LA    R2,TRANSTAB-240
         EX    R12,MOVE
         EX    R12,TRANSL
         LA    R12,65(R12)
         EX    R12,PACK
NOAD     BR    R10
         OI    NOAD+1,X'F0'
         L     R12,CKSAVE+12
         L     R12,100(R12)
         A     R12,FULL
         ST    R12,FULL
         BR    R10
MOVE     MVC   WORK(0),ANTWORT
TRANSL   TR    WORK(0),0(R2)
PACK     PACK  FULL(5),WORK(0)
         SPACE 2
UPRO2  WTO  '                                                          *
               ;       '
         BR    R10
         SPACE
***********************************************************************
*                                                                     *
* WER AN DIESER ROUTINE IRGENDETWAS AUSZUSETZEN HAT,SOLL SIE RUHIG
* UMPROGRAMMIEREN
*                                           VIEL SPASS VON IHREM ONKEL
*                                                     JACQUES TOUCHET
*                                                                     *
***********************************************************************
         LTORG
         END   CHECKRT
         MACRO
&NAME    PROGR &P1,&P2
****************************  E T E R N I T  **************************
*                                                                     *
*                                 PROGR OS-VERSION                    *
*                                                                     *
***********************************************************************
*                                 J.TOUCHET   AM 25.01.71             *
*                                 A.TAUCHNITZ 25.04.74 LEVEL 002      *
***********************************************************************
         GBLB  &PRO
         GBLC  &SAVE
         LCLA  &AL6,&AL7,&AL8,&AL9,&AL10,&K,&K1,&K2
         LCLC  &R,&X,&DATA,&CODE,&APOS
         LCLB  &FEHL,&SHORT
         AIF   (NOT &PRO).YES
.YES     ANOP
&X       SETC  '&SYSNDX'
         AIF   ('&NAME' NE '').A
         MNOTE 'NAME FEHLT'
&FEHL    SETB  1
.A       AIF   (T'&P1 EQ 'N').B
         MNOTE 'PARAMETER 1 FEHLT ODER NICHT NUMERISCH'
.GENEND  MEXIT
.B       AIF   (&FEHL).GENEND
&SAVE    SETC  'SAVE&X'
&R       SETC  'R'
***********************************************************************
*                                 * SAVEROUT, BALR, USING *           *
***********************************************************************
&APOS    SETC  ''''
&CODE    SETC  'F'''
&K2      SETA  8
&DATA    SETC  '00000000'
         AIF   ('&P2' NE 'SHORT').LONG1
&SHORT   SETB  1
         AGO   .ZERO
.LONG1   AIF   ('&P2' EQ '').ZERO
&K       SETA  K'&P2
         AIF   ('&P2'(1,1) NE 'C').NOC
&CODE    SETC  'F'''
         AGO   .C
.NOC     AIF   ('&P2'(1,1) NE 'X').NOCNOX
&CODE    SETC  'X'''
         AIF   (&K LT 4 OR &K GT 9).FEHLER
         AGO   .C1
.C       AIF   (&K LT 4 OR &K GT 11).FEHLER
.C1      AIF   ('&P2'(2,1) NE '''' OR '&P2'(&K,1) NE '''').FEHLER
&K1      SETA  &K-3
&DATA    SETC  '&P2'(3,&K1)
&K2      SETA  &K2-&K1
.LOOP    AIF   (&K2  EQ 0).ENDSYNT
&DATA    SETC  '0&DATA'
&K2      SETA  &K2-1
         AGO   .LOOP
.NOCNOX  AIF   (&K GT 8).FEHLER
&CODE    SETC  'F'''
&DATA    SETC  '&P2'
&K2      SETA  &K2-&K
         AGO   .LOOP
.ENDSYNT AIF   ('&CODE'(1,1) NE 'F').NOF
&AL6     SETA  &DATA
&AL7     SETA  2097152
.LOOP1   AIF   (&AL6 EQ 0 AND &AL7 EQ 8).ZERO
         AIF   (&AL6 EQ &AL7).ZERO
         AIF   (&AL6 GT &AL7).SUBSTR
         AIF   (&AL7 EQ 8).FEHLER1
&AL7     SETA  &AL7/8
         AGO   .LOOP1
.SUBSTR  ANOP
&AL6     SETA  &AL6-&AL7
         AGO   .LOOP1
.FEHLER1 MNOTE *,'START-ADRESSE NICHT OHNE REST DURCH 8 TEILBAR. START *
               0 WIRD GENERIERT'
         AGO   .SETZERO
.NOF     AIF   ('&DATA'(8,1) NE '0' AND '&DATA'(8,1) NE '8').FEHLER1
.ZERO    AIF   ('&DATA' NE '00000000').NOZERO
&NAME    CSECT
         AGO   .ENTRY
.NOZERO  ANOP
         AIF   ('&CODE'(1,1) NE 'F').NOF1
&NAME    START &DATA
         AGO   .ENTRY
.NOF1    ANOP
&NAME    START &P2
         AGO   .ENTRY
.FEHLER  MNOTE *,'SYNTAX VON PARAMETER 2 IST FALSCH ... START 0 WIRD GE-
               NERIERT'
.SETZERO ANOP
&CODE    SETC  'F'''
&DATA    SETC  '00000000'
         AGO   .ZERO
.ENTRY   ANOP
         ENTRY &NAME
         B     16(0,R15) ;        BRANCH AROUND ID
         DC    AL1(11) ;          LENGTH OF IDENTIFIER
         DC    CL11'&NAME' ;      IDENTIFIER
         AIF   (&SHORT).SHORT0
         ORG   *-1
         DC    C'R'     ROOT PHASE
.SHORT0  ANOP
         STM   R14,R12,12(R13) ;  SAVE REGISTERS
         USING &NAME,R3 ;        R3 IST ERSTES BASIS REGISTER
         LR    R3,R15
         LR    R11,R13
         AIF   (&SHORT).SHORT1
         BAL   R13,120(R3)
         AGO   .LONG2
.SHORT1  BAL   R13,112(R3)
.LONG2   ANOP
SAVE&X   DS    18F ;              SAVEAREA
VF&X     DC    &CODE&DATA&APOS DIFFERENZ ZWI. ASSEMBLER UND SPEICHER
PARA&X   DS    F
PICA&X   DS    F
         DC    A(LEVEL-LEVEL)
         ORG   *-4
         AIF   (&SHORT).SHORT2
DATUM    DC    CL8'0' ;           TT.MM.JJ
TEST&X   B     *+10
         DC    X'0700'
         B     REP&X-4
.SHORT2  ANOP
         ST    R13,8(R11) ;       SAVEAREAS
         ST    R11,4(R13) ;                 VERKETTEN
         NOP   *+20
         OI    *-3,X'F0'
         LA    R4,&NAME
         S     R4,VF&X
         ST    R4,VF&X
&AL8     SETA  &P1+4095
&AL8     SETA  &AL8/4096+2
         AIF   (&AL8 LE 3).K
         AIF   (&AL8 LE 15).G
&AL8     SETA  15
.G       ANOP
&AL6     SETA  (&AL8-3)*4+4
         LA    &R&AL8,4095
&AL6     SETA  &AL6-4
&AL9     SETA  3
.J       ANOP
&AL9     SETA  &AL9+1
&AL10    SETA  &AL10+4096
         USING &NAME+&AL10,&AL9 ;    NOCH EIN USING,NACH WUNSCH
         AIF   (&AL9 LT &AL8).J
&AL7     SETA  2
&AL9     SETA  3
.F       ANOP
&AL7     SETA  &AL7+1
&AL9     SETA  &AL9+1
         LA    &R&AL9,1(&R&AL8,&R&AL7) ;      BASISREGISTER LADEN
         AIF   (&AL9 LT &AL8).F
.K       ANOP
         ST    R1,PARA&X
         AIF   (&PRO).NOEQU
&PRO     SETB  1
***********************************************************************
*                                 *** REGISTER EQUATEN ***            *
***********************************************************************
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
FPR0     EQU   0
FPR2     EQU   2
FPR4     EQU   4
FPR6     EQU   6
.NOEQU   ANOP
         AIF   (&SHORT).SHORT3
         NOP   FEHL&X
         OI    *-3,X'F0'
***********************************************************************
*                                 *** DATUM ***                       *
***********************************************************************
         LINK  EP=DATE,PARAM=DATUM
***********************************************************************
*                                 *** JOB-NAME,JOBSTEP-NAME,DATUM *** *
***********************************************************************
         L     R1,16 ;            ADR VON CVT AUS LOC HEX 10
         L     R1,0(R1) ;         ADR VON TCB DW IN R1 LADEN
         L     R1,4(R1) ;         ADR DES LAUFDN. TCB IN R1 LADEN
         L     R1,12(R1) ;        ADR DES TIOT AUS TCB IN R1 LADEN
         MVC   DAT5&X+9(8),0(R1) ;JOB-NAME
         MVC   DAT5&X+30(8),8(R1) JOBSTEP- ODER PROCSTEP-NAME
         MVC   DAT5&X+45(4),LEVEL LEVEL-NR
         MVC   DAT5&X+50(8),DATUM  TAGESDATUM
         CLC   8(4,R1),=C'TEST'     FRAGEN OB TEST ERWUENSCHT IST
         BNE   *+8
         NI    TEST&X+4,X'00' ;   TEST ANFORDERUNG WEICHE
         CLC   8(3,R1),=C'REP'
         BNE   *+8
         NI    REP&X+1,X'0F'
         CONSOR DAT5&X,58
         XC    DAT5&X,DAT5&X
         MVC   DAT5&X.(L'NAME),NAME
         CONSOR DAT5&X,105
         XC    DAT5&X,DAT5&X
         B     FEHL&X
DAT5&X   DC    C'JOB-NAME XXXXXXXX   STEP-NAME          LEVEL XXXX TT.M'
               M.JJ                                               '
.SHORT3  ANOP
FEHL&X   NOP   BAL2&X
         OI    *-3,240
         LOAD  EP=CHECKRT
         CNOP  0,4
         ST    R0,*+8
BAL2&X   BAL   R2,*+8
         DC    F'0'
         L     R2,0(R2)
         SPIE  (2),((1,15))
         ST    R1,PICA&X
         AIF   (&SHORT).SHORT4
         B     TEST&X+4
         NI    *-3,X'0F'
REP&X    B     NREP&X
         OI    *-3,X'F0'
         LINK  EP=REPROUT
NREP&X   EQU   *
.SHORT4  ANOP
         L     R1,PARA&X
***********************************************************************
         EJECT
         MEND
         MACRO
&NAME    CONSOR &FELD,&LNG
         GBLB  &PRO,&I
         LCLA  &L2
         LCLC  &LTYP
         AIF   (&PRO).OK
         MNOTE *,'OHNE PROGR KANN CONSOR NICHT GENERIERT WERDEN.'
         MEXIT
.OK      ANOP
         AIF   (&I).M1
&NAME    B     WTOZZZZZ
         CNOP  0,4
WTOXXXXX DS    F
         ST    R14,0(R15)
         CNOP  0,4
         BAL   R1,122(R15) ;      BRANCH AROUND MESSAGE
         DC    AL2(109) ;         MESSAGE LENGTH
         DC    X'0000' ;          MCSFLAGS FIELD
         DC    CL105' ' ;         MESSAGE
         DS    0H
         SVC   35 ;               ISSUE WTO-SVC
         CNOP  2,4
         BALR  R15,R0
         B     8(R15)
         DC    A(WTOXXXXX)
         L     R14,4(R15)
         L     R14,0(R14)
         BR    R14
WTOZZZZZ EQU   *
.M1      ANOP
&LTYP    SETC  'L'''
         AIF   ('&LNG' EQ '').M2
&L2      SETA  &LNG+4
         AGO   .M3
.M2      ANOP
&L2      SETA  L'&FELD
&L2      SETA  &L2+4
.M3      ANOP
         AIF   (&L2 LE 109).NOGT105
         MNOTE 4,'MESSAGE LAENGER ALS 105 STELLEN NICHT ERLAUBT'
&L2      SETA 109
.NOGT105 ANOP
         CNOP  2,4
         AIF   (&I).I
         BALR  R15,R0
         AGO   .NOTI
.I       ANOP
&NAME    BALR  R15,R0
.NOTI    ANOP
&I       SETB  1
         B     8(R15)
         DC    A(WTOXXXXX)
         L     R15,4(R15)
         AIF   ('&LNG' NE '').M4
         AIF   (&L2 LE 109).M31
         MVC   16(105,R15),&FELD
         AGO   .M5
.M31     ANOP
         MVC   16(&LTYP&FELD,R15),&FELD
         AGO   .M5
.M4      ANOP
         AIF   (&L2 LE 109).M41
         MVC   16(105,R15),&FELD
         AGO   .M5
.M41     ANOP
         MVC   16(&LNG,R15),&FELD
.M5      ANOP
         MVC   12(2,R15),=H'&L2'
         BAL   R14,4(R15)
         MEND
REPROUT  PROGR 4000,SHORT
         ORG   FEHL0001
         OPEN  (ZDII101,(INPUT))
READ     GET   ZDII101,KARTE
         LA    R4,KARTE
         CLI   0(R4),C' '
         BNE   ERROR
         LA    R4,1(R4)
         C     R4,=A(KARTE+65)
         BH    ERROR
         CLI   0(R4),C' '
         BE    *-16
         CLC   0(4,R4),=C'REP '
         BNE   ERROR
         LA    R4,4(R4)
         C     R4,=A(KARTE+69)
         BH    ERROR
         CLI   0(R4),C' '
         BNE   ADRBEG
         LA    R4,1(R4)
         B     *-20
ADRBEG   BCTR  R4,0
         LA    R5,1(R4)
         CLI   1(R5),C' '
         BE    ADREND
         LA    R5,1(R5)
         C     R5,=A(KARTE+71)
         BH    ERROR
         B     *-20
ADREND   LR    R6,R5
         SR    R6,R4
         STC   R6,ADRL
         TM    ADRL,X'F9'
         BNZ   ERROR
         MVC   ADRF(8),=C'00000000'
         LA    R7,ADRF+8
         SR    R7,R6
         BCTR  R6,0
         EX    R6,MVCADR
         B     *+10
MVCADR   MVC   0(0,R7),1(R4)
         LA    R2,TRANSTAB-240
         TR    ADRF(8),0(R2)
         PACK  ADRF(9),ADRF(9)
         L     R8,4(R13)
         L     R8,32(R8)
         A     R8,ADRF+4     AENDERUNGS ADRESSE
         LA    R4,2(R5)
         C     R4,=A(KARTE+69)
         BH    ERROR
         CLI   0(R4),C' '
         BNE   REPBEG
         LA    R4,1(R4)
         B     *-20
REPBEG   BCTR  R4,0
         LA    R5,1(R4)
         CLI   1(R5),C' '
         BE    REPEND
         LA    R5,1(R5)
         C     R5,=A(KARTE+71)
         BH    ERROR
         B     *-20
REPEND   LR    R6,R5
         SR    R6,R4
         STC   R6,ADRL
         TM    ADRL,X'01'
         BO    ERROR
         BCTR  R6,0
         EX    R6,MVCREP
         B     *+16
MVCREP   MVC   REPF(0),1(R4)
TRREP    TR    REPF(0),0(R2)
         LA    R2,TRANSTAB-240
         EX    R6,TRREP
         LA    R7,REPF
         LA    R9,REPPACK
         LA    R6,1(R6)
         LR    R10,R6
LTR      LTR   R10,R10
         BZ    REPPEN
         PACK  0(2,R9),0(3,R7)
         LA    R7,2(R7)
         LA    R9,1(R9)
         SH    R10,=H'2'
         B     LTR
REPPEN   SRA   R6,1
         BCTR  R6,0
         EX    R6,MOVE
         B     *+10
MOVE     MVC   0(0,R8),REPPACK
         B     READ
EREPIN   CLOSE (ZDII101)
         L     R13,32(R3)
         LM    R14,R12,12(R13)
         LA    R15,0
         BR    R14
FEHL     DC    C'REP-KARTE FALSCH'
ERROR    CONSOR FEHL
         ABEND 4095
ZDII101  DCB   BLKSIZE=80,DSORG=PS,LRECL=80,RECFM=F,                   *
               DDNAME=REPIN,BUFNO=1,EODAD=EREPIN,MACRF=GM
ADRL     DS    CL1
         DS    0D
ADRF     DS    0CL9
         DC    9C'0'
         DC    X'00FAFBFCFDFEFF40'
         ORG   *+40
TRANSTAB DC    C'0123456789ABCDEF'
REPF     DC    CL62'0'
REPPACK  DC    CL32'0'
KARTE    DS    CL80
LEVEL    DC    C'002 '
         LTORG
         END   REPROUT
/*
//L.SYSLMOD DD  DSN=ET.LINKLIB,DISP=SHR
//L.SYSIN  DD  *
 NAME SMFREPRT(R)
/*
// EXEC ASMHCL,
// PARM.L='NCAL,REUS,LET,XREF,LIST'
//C.SYSIN DD *
         PRINT NOGEN
DATE     PROGR 4000,SHORT
         ORG   FEHL0001
         L     R1,16 ;            DATUM IN
         L     R1,56(R1) ;        DEZIMALFORM VERLANGT
         ST    R1,DAT1
         MVO   DAT2,DAT1(2)
         DP    DAT2,=P'4'
         ZAP   DAT2+3(1),DAT2+3(1)
         BNZ   *+10 ;             KEIN SCHALTJAHR
         AP    JAN+2(2),=P'1' ;   FEBRUAR HAT 29 TAGE
         ZAP   DAT2,DAT1+2(2)
         LA    R1,JAN
         SP    DAT3,DAT3
         AP    DAT3,=P'1'
         CP    DAT2,0(2,R1)
         BNH   *+18
         SP    DAT2,0(2,R1)
         LA    R1,2(R1)
         B     *-26
         UNPK  DAT4+5(3),DAT2+2(2)
         OI    DAT4+7,X'F0'
         MVC   DAT4(2),DAT4+6
         UNPK  DAT4+2(3),DAT3(2)
         OI    DAT4+4,X'F0'
         MVI   DAT4+2,C'.'
         MVO   DAT2,DAT1(2)
         UNPK  DAT4+5(3),DAT2+2(2)
         OI    DAT4+7,X'F0'
         MVI   DAT4+5,C'.'
         B     DEND
JAN      DC    P'31'
         DC    P'28'
         DC    P'31'
         DC    P'30'
         DC    P'31'
         DC    P'30'
         DC    P'31'
         DC    P'31'
         DC    P'30'
         DC    P'31'
         DC    P'30'
         DC    P'31'
DAT1     DS    F
DAT2     DC    PL4'0'
DAT3     DC    PL2'0'
DAT4     DC    CL8' ' ;           TT.MM.JJ
LEVEL    DC    C'001 '
DEND     L     R1,104(R3)
         L     R1,0(R1)
         MVC   0(8,R1),DAT4
         L     R13,32(R3)         ADDRESS OF HIGHER SAVEAREA
         LM    R14,R12,12(R13)    RESTORE THE REGISTERS
         BR    R14                RETURN
         LTORG
         END   DATE
//L.SYSLMOD DD  DSN=ET.LINKLIB,DISP=SHR
//L.SYSIN DD *
         NAME DATE(R)
/*
// EXEC ATASMHCL
//C.SYSIN  DD  *
         TITLE 'PARM - DER ALLGEMEINE PARAMETER-ANALYSATOR- FEST, VARIAB
               BEL, OPTIONAL UND REQUIRED'
         MACRO
&NAME    CONSOR &FELD,&LNG
         GBLB  &PRO,&I
         LCLA  &L2
         LCLC  &LTYP
         AIF   (&PRO).OK
         MNOTE *,'OHNE PROGR KANN CONSOR NICHT GENERIERT WERDEN.'
         MEXIT
.OK      ANOP
         AIF   (&I).M1
&NAME    B     WTOZZZZZ
         CNOP  0,4
WTOXXXXX DS    F
         ST    R14,0(R15)
         CNOP  0,4
         BAL   R1,122(R15) ;      BRANCH AROUND MESSAGE
         DC    AL2(109) ;         MESSAGE LENGTH
         DC    X'0000' ;          MCSFLAGS FIELD
         DC    CL105' ' ;         MESSAGE
         DS    0H
         SVC   35 ;               ISSUE WTO-SVC
         CNOP  2,4
         BALR  R15,R0
         B     8(R15)
         DC    A(WTOXXXXX)
         L     R14,4(R15)
         L     R14,0(R14)
         BR    R14
WTOZZZZZ EQU   *
.M1      ANOP
&LTYP    SETC  'L'''
         AIF   ('&LNG' EQ '').M2
&L2      SETA  &LNG+4
         AGO   .M3
.M2      ANOP
&L2      SETA  L'&FELD
&L2      SETA  &L2+4
.M3      ANOP
         AIF   (&L2 LE 109).NOGT105
         MNOTE 4,'MESSAGE LAENGER ALS 105 STELLEN NICHT ERLAUBT'
&L2      SETA 109
.NOGT105 ANOP
         CNOP  2,4
         AIF   (&I).I
         BALR  R15,R0
         AGO   .NOTI
.I       ANOP
&NAME    BALR  R15,R0
.NOTI    ANOP
&I       SETB  1
         B     8(R15)
         DC    A(WTOXXXXX)
         L     R15,4(R15)
         AIF   ('&LNG' NE '').M4
         AIF   (&L2 LE 109).M31
         MVC   16(105,R15),&FELD
         AGO   .M5
.M31     ANOP
         MVC   16(&LTYP&FELD,R15),&FELD
         AGO   .M5
.M4      ANOP
         AIF   (&L2 LE 109).M41
         MVC   16(105,R15),&FELD
         AGO   .M5
.M41     ANOP
         MVC   16(&LNG,R15),&FELD
.M5      ANOP
         MVC   12(2,R15),=H'&L2'
         BAL   R14,4(R15)
         MEND
         EJECT
         MACRO
&NAME    EOJ   &RC=O
*********************************  E O J - R E T U R N ****************
         GBLB  &PRO
         AIF   (&PRO).EOJ
         MNOTE 12,'OHNE PROGR KANN EOJ NICHT GENERIERT WERDEN'
         MEXIT
.EOJ     ANOP
         AIF   ('&RC' EQ 'O').NORC
         AIF   ('&RC'(1,1) NE '(').DIRECT
.REG1    ANOP
         AIF   ('&RC(1)' NE '15' AND '&RC(1)' NE 'R15').NO15
&NAME    ST    R15,R&SYSNDX
         AGO   .ALL1
.NORC    ANOP
.DIRECT  ANOP
&NAME    L     R1,108(R3)
         AGO   .ALL2
.ALL1    ANOP
         L     R1,108(R3)
.ALL2    ANOP
         SVC   14
         CLI   15(R3),C'R'
         BNE   R&SYSNDX+4
         LOAD  EP=EOJ
         LR    R15,R0
         CNOP  0,4
         BAL   R1,*+8
         DC    A(R&SYSNDX)
         BALR  R14,R15
         DS    0F
         AIF   ('&RC' NE 'O').NOO
         MNOTE 1,'WARUM IST KEIN RC GESETZT WORDEN'
R&SYSNDX DC    AL1(128),AL3(0)
         L     R13,32(R3)
         LM    R14,R12,12(R13)
         BR    R14
         MEXIT
.NOO     ANOP
         AIF   ('&RC'(1,1) EQ '(').REG2
R&SYSNDX DC    AL1(0),AL3(&RC)
         L     R13,32(R3)
         LM    R14,R12,12(R13)
         LA    R15,&RC
         BR    R14
         MEXIT
.REG2    ANOP
         AIF   ('&RC(1)' NE '15' AND '&RC(1)' NE 'R15').NO15
R&SYSNDX DC    AL1(0),AL3(0)
         L     R13,32(R3)
         L     R14,12(R13)
         L     R15,R&SYSNDX
         LM    R0,R12,20(R13)
         BR    R14
         MEXIT
.NO15    ANOP
         IHBERMAC 61,,&RC
         MEND
         EJECT
         MACRO
&NAME    PROGR &P1,&P2
****************************  E T E R N I T  **************************
*                                                                     *
*                                 PROGR OS-VERSION                    *
*                                                                     *
***********************************************************************
*                                 J.TOUCHET   AM 25.01.71             *
*                                 A.TAUCHNITZ 25.04.74 LEVEL 002      *
***********************************************************************
         GBLB  &PRO
         GBLC  &SAVE
         LCLA  &AL6,&AL7,&AL8,&AL9,&AL10,&K,&K1,&K2
         LCLC  &R,&X,&DATA,&CODE,&APOS
         LCLB  &FEHL,&SHORT
         AIF   (NOT &PRO).YES
.YES     ANOP
&X       SETC  '&SYSNDX'
         AIF   ('&NAME' NE '').A
         MNOTE 'NAME FEHLT'
&FEHL    SETB  1
.A       AIF   (T'&P1 EQ 'N').B
         MNOTE 'PARAMETER 1 FEHLT ODER NICHT NUMERISCH'
.GENEND  MEXIT
.B       AIF   (&FEHL).GENEND
&SAVE    SETC  'SAVE&X'
&R       SETC  'R'
***********************************************************************
*                                 * SAVEROUT, BALR, USING *           *
***********************************************************************
&APOS    SETC  ''''
&CODE    SETC  'F'''
&K2      SETA  8
&DATA    SETC  '00000000'
         AIF   ('&P2' NE 'SHORT').LONG1
&SHORT   SETB  1
         AGO   .ZERO
.LONG1   AIF   ('&P2' EQ '').ZERO
&K       SETA  K'&P2
         AIF   ('&P2'(1,1) NE 'C').NOC
&CODE    SETC  'F'''
         AGO   .C
.NOC     AIF   ('&P2'(1,1) NE 'X').NOCNOX
&CODE    SETC  'X'''
         AIF   (&K LT 4 OR &K GT 9).FEHLER
         AGO   .C1
.C       AIF   (&K LT 4 OR &K GT 11).FEHLER
.C1      AIF   ('&P2'(2,1) NE '''' OR '&P2'(&K,1) NE '''').FEHLER
&K1      SETA  &K-3
&DATA    SETC  '&P2'(3,&K1)
&K2      SETA  &K2-&K1
.LOOP    AIF   (&K2  EQ 0).ENDSYNT
&DATA    SETC  '0&DATA'
&K2      SETA  &K2-1
         AGO   .LOOP
.NOCNOX  AIF   (&K GT 8).FEHLER
&CODE    SETC  'F'''
&DATA    SETC  '&P2'
&K2      SETA  &K2-&K
         AGO   .LOOP
.ENDSYNT AIF   ('&CODE'(1,1) NE 'F').NOF
&AL6     SETA  &DATA
&AL7     SETA  2097152
.LOOP1   AIF   (&AL6 EQ 0 AND &AL7 EQ 8).ZERO
         AIF   (&AL6 EQ &AL7).ZERO
         AIF   (&AL6 GT &AL7).SUBSTR
         AIF   (&AL7 EQ 8).FEHLER1
&AL7     SETA  &AL7/8
         AGO   .LOOP1
.SUBSTR  ANOP
&AL6     SETA  &AL6-&AL7
         AGO   .LOOP1
.FEHLER1 MNOTE *,'START-ADRESSE NICHT OHNE REST DURCH 8 TEILBAR. START *
               0 WIRD GENERIERT'
         AGO   .SETZERO
.NOF     AIF   ('&DATA'(8,1) NE '0' AND '&DATA'(8,1) NE '8').FEHLER1
.ZERO    AIF   ('&DATA' NE '00000000').NOZERO
&NAME    CSECT
         AGO   .ENTRY
.NOZERO  ANOP
         AIF   ('&CODE'(1,1) NE 'F').NOF1
&NAME    START &DATA
         AGO   .ENTRY
.NOF1    ANOP
&NAME    START &P2
         AGO   .ENTRY
.FEHLER  MNOTE *,'SYNTAX VON PARAMETER 2 IST FALSCH ... START 0 WIRD GE-
               NERIERT'
.SETZERO ANOP
&CODE    SETC  'F'''
&DATA    SETC  '00000000'
         AGO   .ZERO
.ENTRY   ANOP
         ENTRY &NAME
         B     16(0,R15) ;        BRANCH AROUND ID
         DC    AL1(11) ;          LENGTH OF IDENTIFIER
         DC    CL11'&NAME' ;      IDENTIFIER
         AIF   (&SHORT).SHORT0
         ORG   *-1
         DC    C'R'     ROOT PHASE
.SHORT0  ANOP
         STM   R14,R12,12(R13) ;  SAVE REGISTERS
         USING &NAME,R3 ;        R3 IST ERSTES BASIS REGISTER
         LR    R3,R15
         LR    R11,R13
         AIF   (&SHORT).SHORT1
         BAL   R13,120(R3)
         AGO   .LONG2
.SHORT1  BAL   R13,112(R3)
.LONG2   ANOP
SAVE&X   DS    18F ;              SAVEAREA
VF&X     DC    &CODE&DATA&APOS DIFFERENZ ZWI. ASSEMBLER UND SPEICHER
PARA&X   DS    F
PICA&X   DS    F
         DC    A(LEVEL-LEVEL)
         ORG   *-4
         AIF   (&SHORT).SHORT2
DATUM    DC    CL8'0' ;           TT.MM.JJ
TEST&X   B     *+10
         DC    X'0700'
         B     REP&X-4
.SHORT2  ANOP
         ST    R13,8(R11) ;       SAVEAREAS
         ST    R11,4(R13) ;                 VERKETTEN
         NOP   *+20
         OI    *-3,X'F0'
         LA    R4,&NAME
         S     R4,VF&X
         ST    R4,VF&X
&AL8     SETA  &P1+4095
&AL8     SETA  &AL8/4096+2
         AIF   (&AL8 LE 3).K
         AIF   (&AL8 LE 15).G
&AL8     SETA  15
.G       ANOP
&AL6     SETA  (&AL8-3)*4+4
         LA    &R&AL8,4095
&AL6     SETA  &AL6-4
&AL9     SETA  3
.J       ANOP
&AL9     SETA  &AL9+1
&AL10    SETA  &AL10+4096
         USING &NAME+&AL10,&AL9 ;    NOCH EIN USING,NACH WUNSCH
         AIF   (&AL9 LT &AL8).J
&AL7     SETA  2
&AL9     SETA  3
.F       ANOP
&AL7     SETA  &AL7+1
&AL9     SETA  &AL9+1
         LA    &R&AL9,1(&R&AL8,&R&AL7) ;      BASISREGISTER LADEN
         AIF   (&AL9 LT &AL8).F
.K       ANOP
         ST    R1,PARA&X
         AIF   (&PRO).NOEQU
&PRO     SETB  1
***********************************************************************
*                                 *** REGISTER EQUATEN ***            *
***********************************************************************
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
FPR0     EQU   0
FPR2     EQU   2
FPR4     EQU   4
FPR6     EQU   6
.NOEQU   ANOP
         AIF   (&SHORT).SHORT3
         NOP   FEHL&X
         OI    *-3,X'F0'
***********************************************************************
*                                 *** DATUM ***                       *
***********************************************************************
         LINK  EP=DATE,PARAM=DATUM
***********************************************************************
*                                 *** JOB-NAME,JOBSTEP-NAME,DATUM *** *
***********************************************************************
         L     R1,16 ;            ADR VON CVT AUS LOC HEX 10
         L     R1,0(R1) ;         ADR VON TCB DW IN R1 LADEN
         L     R1,4(R1) ;         ADR DES LAUFDN. TCB IN R1 LADEN
         L     R1,12(R1) ;        ADR DES TIOT AUS TCB IN R1 LADEN
         MVC   DAT5&X+9(8),0(R1) ;JOB-NAME
         MVC   DAT5&X+30(8),8(R1) JOBSTEP- ODER PROCSTEP-NAME
         MVC   DAT5&X+45(4),LEVEL LEVEL-NR
         MVC   DAT5&X+50(8),DATUM  TAGESDATUM
         CLC   8(4,R1),=C'TEST'     FRAGEN OB TEST ERWUENSCHT IST
         BNE   *+8
         NI    TEST&X+4,X'00' ;   TEST ANFORDERUNG WEICHE
         CLC   8(3,R1),=C'REP'
         BNE   *+8
         NI    REP&X+1,X'0F'
         CONSOR DAT5&X,58
         XC    DAT5&X,DAT5&X
         MVC   DAT5&X.(L'NAME),NAME
         CONSOR DAT5&X,105
         XC    DAT5&X,DAT5&X
         B     FEHL&X
DAT5&X   DC    C'JOB-NAME XXXXXXXX   STEP-NAME          LEVEL XXXX TT.M'
               M.JJ                                               '
.SHORT3  ANOP
FEHL&X   NOP   BAL2&X
         OI    *-3,240
         LOAD  EP=CHECKRT
         CNOP  0,4
         ST    R0,*+8
BAL2&X   BAL   R2,*+8
         DC    F'0'
         L     R2,0(R2)
         SPIE  (2),((1,15))
         ST    R1,PICA&X
         AIF   (&SHORT).SHORT4
         B     TEST&X+4
         NI    *-3,X'0F'
REP&X    B     NREP&X
         OI    *-3,X'F0'
         LINK  EP=REPROUT
NREP&X   EQU   *
.SHORT4  ANOP
         L     R1,PARA&X
***********************************************************************
         EJECT
         MEND
         EJECT
PARM     PROGR 4000,SHORT
*              C' ' WAHLWEISE    PARAMETER MIT FESTER    LAENGE
*              C'*' ERFORDERLICH PARAMETER MIT FESTER    LAENGE
*              C'$' WAHLWEISE    PARAMETER MIT VARIABLER LAENGE
*              C'%' ERFORDERLICH PARAMETER MIT VARIABLER LAENGE
         L     R1,104(R3)
         L     R12,4(R1)
         L     R1,0(R1)
         L     R1,0(R1)
         L     R1,0(R1)
         LH    R11,0(R1)
         LTR   R11,R11
         BZ    P7
         LA    R1,2(R1)
         AR    R11,R1
P3       LR    R2,R12
         CLC   1(2,R2),0(R1)
         BE    P5+12
         LA    R15,0
         IC    R15,0(R2)
         LA    R2,1(R15,R2)
         CLI   0(R2),C'@'
         BNE   P3+2
P4       MVC   P5(2),0(R1)
         CONSOR P5,12
         ABEND 4095
P5       DC    C'  ,UNBEKANNT'
         CLI   3(R2),C'$'
         BE    P9
         CLI   3(R2),C'%'
         BE    P9
         LA    R15,0
         IC    R15,0(R2)
         LA    R15,0(R15,R1)
         CR    R15,R11
         BE    P6
         CLI   0(R15),C','
         BE    P6
P5A      MVC   P5+3(9),=C'LAENGE   '
         B     P4
P6       IC    R14,0(R2)
         BCTR  R14,0
         STC   R14,*+5
         MVC   1(0,R2),0(R1)
         LA    R1,1(R15)
         CR    R1,R11
         BL    P3
P7       LR    R2,R12
         CLI   0(R2),C'@'
         BE    P11
         CLI   3(R2),C'*'
         BE    P8
         CLI   3(R2),C'%'
         BE    P8
         LA    R15,0
         IC    R15,0(R2)
         LA    R2,1(R15,R2)
         B     P7+2
P8       MVC   P5+3(9),=C'FEHLT    '
         MVC   P5(2),1(R2)
         B     P4+6
P9       LA    R15,3(R1)
         CR    R15,R11
         BNL   P10
         CLI   0(R15),C','
         BE    P10
         LA    R15,1(R15)
         B     P9+4
P10      LR    R14,R15
         SR    R14,R1
         XR    R0,R0
         IC    R0,0(R2)
         CR    R14,R0
         BH    P5A
         B     P6+4
P11      EOJ   RC=0
LEVEL    DC    C'002 '
         LTORG
         END   PARM
//L.SYSLMOD DD  DSN=ET.LINKLIB,DISP=SHR
//L.SYSIN  DD  *
         NAME  PARM(R)
// EXEC ATASMHCL
//C.SYSIN  DD  *
SYSTVRTL CSECT
***********************************************************************
*
*        UNTERPROGRAMM AVTL
*
*        ZWECK
*           ERZEUGUNG EINES STANDARD-VERTEILERS
*
*        AUFRUF
*           EINE DURCH DEN (OS-) VERTEIL MAKRO GENERIERTE AUFRUFFOLGE
*           VERBINDET DEN LADEMODUL TEMPORAER MIT EINEM BENUTZER-MODUL.
*
*        PARAMETER
*           DER VERTEIL MAKRO GENERIERT FOLGENDE PARAMETERLISTE, DEREN
*           ADRESSE BEI EINGANG IN REG.1 STEHT-
*
*               PARMLIST AL1(LINECNT)
*                        AL3(TEXT)
*                        AL1(128) CARRIAGE CONTROL    128 = M   192 = A
*                        AL3(DRUCKDCB)
*
*        METHODE
*           MIT DEM TIME MAKRO WERDEN VERARBEITUNGSDATUM UND -ZEIT
*           ERMITTELT UND DANN AUFBEREITET.
*           DER VOM BENUTZERPROGRAMM ALS ZEICHENKETTE ZUR VERFUEGUNG
*           VERTEILER-TEXT WIRD NACH ZEILENBEGRENZERN DURCHSUCHT
*           UND ENTSPRECHEND GEDRUCKT. WENN NACH 48 ZEICHEN KEIN
*           BEGRENZER GEFUNDEN WIRD, ERFOLGT DIE UEBERTRAGUNG DER
*           UEBERZAEHLIGEN ZEICHEN IN DIE NAECHSTE ZEILE, SOWEIT
*           DIE 5. ZEILE NOCH NICHT ERREICHT IST. SONST GEHEN DIE
*           UEBERZAEHLIGEN ZEICHEN VERLOREN.
*
*        VERWENDETE MAKROS
*           TIME
*
*        VERWENDETE UNTERPROGRAMME
*           KEINE
*
*        COMPLETION CODE
*           WIRD NICHT ERZEUGT
*
*        MODIFIKATIONS-LEVEL
*              002 ASA VORSCHUBZEICHEN ZUGEFUEGT
*              003 VERTEILERFELD VON 47 AUF 48 ZEICHEN VERGROESSERT
*              004 JOBSTEP-, PROCSTEPNAME IN KOPFZEILE UEBERNEHMEN
*
***********************************************************************
         EJECT
***********************************************************************
*
         B     16(15)   KONSTANTEN UEBERSPRINGEN
         DC    X'B'            PROGRAMM
         DC    CL11'SYSTVRTL'          IDENTIFIKATION
         STM   14,12,12(13)
         BALR  12,0
         USING *,12
         LR    2,13
         LA    13,SAVE
         ST    13,8(0,2)
         ST    2,4(0,13)
*
***********************************************************************
         SPACE 3
***********************************************************************
*
*        UEBERNEHMEN DER PARAMETER
*
***********************************************************************
*
         L     1,0(0,1)
         LM    7,8,0(1)
         SLR   6,6
         SLDL  6,8
         SRL   7,8
         STM   6,8,PARMS (R6)=LINECNT,(R7)=A(TEXT),R8)=DRUCKDCB
*
***********************************************************************
         EJECT
***********************************************************************
*
*        JOBNAMEN ERMITTELN
***********************************************************************
*
         L     1,16
         L     1,0(0,1)
         L     1,4(0,1)
         L     1,12(0,1)
         MVC   JOBNAME,0(1)
         MVC   JOBNAME+8(4),=C' ** '                                L4
         MVC   PSTPNAME,8(1)                                        L4
         MVC   PSTPNAME+8(4),=C' ** '                               L4
         MVC   JSTPNAME,16(1)                                       L4
         MVI   JSTPNAME+8,C' '                                      L4
*
***********************************************************************
*
*        ZEIT UND DATUM FUER KOPFZEILE ERMITTELN
*
***********************************************************************
*
         TIME  DEC
*
*        ZEIT  AUFBEREITEN
*
         IC    0,=X'0F'
         ST    0,WORK1
         UNPK  WORK2,WORK1
         MVC   ZEITTEXT,=C'  ZEIT XX.XX.XX ** '
         MVC   STUNDE,WORK2+1
         MVC   MINUTE,WORK2+3
         MVC   SEKUNDE,WORK2+5
*
***********************************************************************
         SPACE 3
***********************************************************************
*
*        DATUM VON JJTTT IN TTMMJJ UMRECHNEN, KOPFZEILE AUFBEREITEN
*
***********************************************************************
*
         ST    1,WORK2
         MVO   WORK1,WORK2(2)
         OI    WORK1+3,X'0F'
         UNPK  JAHR-1(3),WORK1+2(2)
         MVI   JAHR-1,C'.'
         MVI   STERNE-1,C'*'
         MVC   STERNE,STERNE-1
*
         CP    WORK2+2(2),=P'59'
         BNH   SEARCH
         CP    WORK1,=P'60'
         BH    SWCHTEST
         BE    SEARCH
         CP    WORK1,=P'20'
         BE    SEARCH
         ZAP   WORK1,WORK1
         BZ    SEARCH
*
*        AUF SCHALTJAHR PRUEFEN
*
SWCHTEST DP    WORK1,=P'4'
         ZAP   WORK1+3(1),WORK1+3(1)
         BNZ   SEARCH
         CP    WORK2+2(2),=P'60'
         BNE   SUBADAY
         MVC   TAG(5),=C'29.02'
         B     FEB29
SUBADAY  SP    WORK2+2(2),=P'1'
SEARCH   LA    2,DATTAB-4
COMPARE  CP    WORK2+2(2),6(2,2)
         BNH   CALCULAT
         LA    2,4(0,2)
         B     COMPARE
CALCULAT SP    WORK2+2(2),2(2,2)
         UNPK  TAG-1(3),WORK2+2(2)
         OI    TAG+1,X'F0'
         MVC   MONAT,0(2)
         MVI   MONAT-1,C'.'
FEB29    MVC   DATTEXT,=C'VERARBEITUNG VOM '
         SLR   11,11           ZEILENZAEHLER LOESCHEN
         MVC   KOPFZEIL,DRUCK
*
***********************************************************************
         SPACE 3
***********************************************************************
*
*        DRUCKEN DER KOPFZEILE
*
***********************************************************************
*
         TM    PARMS+8,B'01000000'
         BO    ASA
         SPACE
         MVI   CONTROL,X'8B'
         BAL   10,PRINT
         MVC   DRUCK,KOPFZEIL
         MVI   CONTROL,X'09'
         BAL   10,PRINT
         B     LOOPS
         SPACE
ASA      MVI   CONTROL,C'1'
         MVC   DRUCK,KOPFZEIL
         BAL   10,PRINT
         MVI   CONTROL,C' '
         L     0,LINECNT
         S     0,=F'2'
         ST    0,LINECNT
*
***********************************************************************
         SPACE 3
***********************************************************************
*
*        5 STERNZEILEN DRUCKEN
*
***********************************************************************
*
LOOPS    LA    5,LOOP1
         LA    4,5
LOOP1    BAL   10,PRINT
         BCTR  4,5
*
***********************************************************************
         SPACE 3
***********************************************************************
*
*        UEBERNEHMEN UND DRUCKEN DES VERTEILER-TEXTES
*
***********************************************************************
*
         L     8,TEXTADR
         LA    2,5     MAX. 5 ZEILEN WERDEN ZUSAMMENGESTELLT
         LA    3,LOOP2
         BCTR  8,0     R8 ZEIGT AUF TEXT-1
LOOP2    MVI   ZEILE,C' '
         MVC   ZEILE+1(49),ZEILE
         BAL   10,PRINT
         MVI   ZEILE,C' '   LEERSTELLEN EINFUELLEN, FALLS
         MVC   ZEILE+1(49),ZEILE         KEIN TEXT VORHANDEN
         LA    4,49    MAX. 49-1  ZEICHEN/ZEILE SIND ERLAUBT        L3
         LA    5,1(0,8)  R5 HAELT TEXTANFANG FEST
SCAN     LA    8,1(0,8)  R8 ZEIGT AUF ABZUTASTENDES ZEICHEN
         CLI   0(8),C'*' DELIMITER SUCHEN
         BE    LAENGE    GEFUNDEN
         BCT   4,SCAN
LAENGE   LR    6,8  ADRESSE DES LETZTEN DELIMITERS FESTHALTEN
         SR    6,5  LAENGE DES ZU UEBERTRAGENDEN FELDES ERRECHNEN
         LTR   6,6  WENN LAENGE = 0, NICHTS UEBERTRAGEN
         BZ    TEXTDRK
         BCTR  6,0
         EX    6,MVC
TEXTDRK  BAL   10,PRINT
         BCTR  2,3
         MVI   ZEILE,C' '
         MVC   ZEILE+1(49),ZEILE
         BAL   10,PRINT
*
***********************************************************************
         SPACE 3
***********************************************************************
*
*        DRUCKEN DER STERNZEILEN UNTER DEM KAESTCHEN
*
***********************************************************************
*
         LA    2,50  ES WERDEN MAX. 50 ZEILEN UNTER DEM
         LA    10,LOOP3                 KAESTCHEN GEDRUCKT
*
***********************************************************************
         SPACE 3
***********************************************************************
*
*        DRUCKROUTINE
*
***********************************************************************
*
PRINT    L     1,DCBADR  DCB-ADRESSE LADEN
         LA    0,DBER     DRUCKBEREICH-ADRESSE
         L     15,48(0,1) PUT ROUTINE ADRESSE
         BALR  14,15
         MVI   DRUCK,C'*'          DRUCKBEREICH
         MVC   DRUCK+1(119),DRUCK               FUELLEN
         LA    11,1(0,11)          ZEILENZAEHLER ERHOEHEN
         L     7,LINECNT     MAX. ZEILENZAHL LADEN
         CR    11,7                UND PRUEFEN
         BNH   PRINTEND
PRINT1   TM    PARMS+8,B'01000000'
         BO    PRINT3
         MVI   CONTROL,X'8B'  BEI ZEILENUEBERLAUF
PRINT2   SR    11,11
         LA    10,ENDE                         VORSCHIEBEN
         B     PRINT                               UND ROUTINE
PRINT3   MVI   DRUCK,C' '
         MVC   DRUCK+1(119),DRUCK
         MVI   CONTROL,C'1'
         B     PRINT2
PRINTEND BR    10                                        BEENDEN
*
LOOP3    BCT   2,PRINT
         B     PRINT1   ZEILEN LIMIT ERREICHT
ENDE     EQU   *
*
***********************************************************************
         EJECT
***********************************************************************
*
*        MODUL-EXIT
*
         L     13,4(0,13)
         LM    14,12,12(13)
         SR    15,15
         MVI   12(13),X'FF'
         BR    14
*
         LTORG
*
***********************************************************************
         EJECT
***********************************************************************
*
*        TABELLE FUER DATUMSUMRECHNUNG
*
DATTAB   DC    X'F0F1000C'
         DC    X'F0F2031C'
         DC    X'F0F3059C'
         DC    X'F0F4090C'
         DC    X'F0F5120C'
         DC    X'F0F6151C'
         DC    X'F0F7181C'
         DC    X'F0F8212C'
         DC    X'F0F9243C'
         DC    X'F1F0273C'
         DC    X'F1F1304C'
         DC    X'F1F2334C'
         DC    X'4040367C'
*
MVC      MVC   ZEILE+1(0),0(5)
*
WORK1    DS    F
WORK2    DS    D
PARMS    DS    0F
LINECNT  DS    F
TEXTADR  DS    F
DCBADR   DS    F
SAVE     DS    18F
*
*        DEFINITION DES DRUCKBEREICHS
*
DBER     DS    0CL121
CONTROL  DS    C
DRUCK    DS    0CL120
DATTEXT  DS    CL17
TAG      DS    CL2
         DS    C
MONAT    DS    CL2
         DS    C
JAHR     DS    CL2
ZEITTEXT DS    0CL19
         DS    7C
STUNDE   DS    CL2
         DS    C
ZEILE    DS    0CL50
MINUTE   DS    CL2
         DS    C
SEKUNDE  DS    CL2
         DS    4C
JOBNAME  DS    CL8
         DS    4C                                                   L4
PSTPNAME DS    CL8                                                  L4
         DS    4C
JSTPNAME DS    CL8                                                  L4
         DS    2C                                                   L4
STERNE   DS    CL42                                                 L4
*
KOPFZEIL DS    CL120
*
***********************************************************************
         END
/*
//L.SYSLMOD DD  DSN=ET.LINKLIB,DISP=SHR
//L.SYSIN  DD  *
 ENTRY SYSTVRTL
 ALIAS XXXAVRTL
 NAME SYSTVRTL(R)
/*
//SMFREPRT EXEC PGM=SMFREPRT  *** STANDARD-DEFAULTS - V=G, S=A ***
//STEPLIB  DD  DSN=ET.LINKLIB,DISP=SHR
//SYSPRINT DD  SYSOUT=A
//SYSUDUMP DD  SYSOUT=A
//DSGMZZZ0 DD  DSN=SMF.SAVE(0),DISP=OLD
//DSPMZZZ8 DD  SYSOUT=A,DCB=(RECFM=FM,BLKSIZE=121)
//DSPMZZZ9 DD  SYSOUT=A,DCB=(RECFM=FM,BLKSIZE=121)
/*
//SMFREPRT EXEC PGM=SMFREPRT,PARM=('V=G','S=T') GESTERN,NUR TSO
//STEPLIB  DD  DSN=ET.LINKLIB,DISP=SHR
//SYSPRINT DD  SYSOUT=A
//SYSUDUMP DD  SYSOUT=A
//DSGMZZZ0 DD  DSN=SMF.SAVE(0),DISP=OLD
//DSPMZZZ8 DD  SYSOUT=A,DCB=(RECFM=FM,BLKSIZE=121)
//DSPMZZZ9 DD  SYSOUT=A,DCB=(RECFM=FM,BLKSIZE=121)
/*
//SMFREPRT EXEC PGM=SMFREPRT,PARM=('V=A','S=A')
//STEPLIB  DD  DSN=ET.LINKLIB,DISP=SHR
//SYSPRINT DD  SYSOUT=A
//SYSUDUMP DD  SYSOUT=A
//DSGMZZZ0 DD  DSN=SMF.SAVE(0),DISP=OLD
//DSPMZZZ8 DD  SYSOUT=A,DCB=(RECFM=FM,BLKSIZE=121)
//DSPMZZZ9 DD  SYSOUT=A,DCB=(RECFM=FM,BLKSIZE=121)
/*
//SMFREPRT EXEC PGM=SMFREPRT,PARM=('V=A','A=74153','E=74183','S=A')
//STEPLIB  DD  DSN=ET.LINKLIB,DISP=SHR
//SYSPRINT DD  SYSOUT=A
//SYSUDUMP DD  SYSOUT=A
//DSGMZZZ0 DD  DSN=SMF.SAVE(0),DISP=OLD
//DSPMZZZ8 DD  SYSOUT=A,DCB=(RECFM=FM,BLKSIZE=121)
//DSPMZZZ9 DD  SYSOUT=A,DCB=(RECFM=FM,BLKSIZE=121)
/*
//*      E N D  O F  P R O G R A M
//********************************************************************
