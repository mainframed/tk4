SCRATCHA CSECT
*******   DESCRIPTION OF CSECT SCRATCHA (SYIDCHEK)
*
*     IF PROGRAM TO BE USED FOR DEVICE TYPES OTHER THAN
*     3330OR2314, WILL NEED CHANGES             ---ADDR DEPENDENT
*
*    THIS CSECT PROVIDES THE WAY FOR SCRATCHING -
*    A.  ALL SYSTEM TEMPORARY DATA SETS > ENTERED PROTECTION TIME
*    B.  ALL DATA SETS WITH INVALID ACCOUNTING CODE FOR A PACK.
*    *
*      THE NUMBER OF TRACKS PER CYLINDER AND THE
*      NUMBER OF DSCBS PER TRACK DIFFER FOR 2314
*      AND 3330 , SO DIFFERENT CONSTANTS ARE ENTERED - THE PROGRAM
*      ASSUMES 3330 HAVE LOWER DEVICE ADDRESSES
*      THAN 2314
*    THE FACILITY IS PROVIDED TO RUN ONLY ON SYSTEM PACKS
*    SYIDCHEK LINKS TO CSECT SYUNIT SO THAT UCB-VOL-SER-NOS FOR UNITS
*      230 THROUGH 237                  14-9-72
*    CAN BE ALTERED IF THE OPERATOR WISHES. ***
*    THE DEB EXTENT ADDRESSES AND UCB ADDRESS ARE UPDATED BEFORE
*    ISSUING XDAP TO READ VOLUME LABEL. ***
*    VTOC ADDRESS OBTAINED FROM VOLUME LABEL AND USED BY OBTAIN MACRO
*    TO READ VTOC. ***
*    F1 DSCB HIGH WATER MARK OBTAINED FROM F4 DSCB AND USED AS HIGH
*    CONDITION TO END READ. ***
*    IF FI DSCB HAS INVALID CODE OR IS TEMP. DATA SET-SCRATCH ROUTINE
*    IS ENTERED. ***
*    SCRATCH ROUTINE USES SCRATCH MACRO. ***
*    BEFORE ENDING SYUNIT IS ENTERED IF OPERATOR  WISHES TO SCRATCH
*    FURTHER DATA SETS ON OTHER PACKS. ***
*******
*  USE OF REGISTERS
*********2 AND 3 USED IN OBTAIN-CAMLST REPORTS
*********4 USED TO CHANGE UNIT ADDRESS IN DEB.
*********5 USED WITH DCB DSECT.
*********6 USED TO UPDATE DSCB ACTUAL ADDRES
*********7 USED FOR ACCOUNT CODE TABLE LOOKUP.
*********8  COUNTER IN CARD SEARCH.
*********9 WORK REGISTER.
*********10 WORK REGISTER
*********11 AND 12 ARE BASE REGISTERS
*********13 SAVE AREA REGISTER.
         SAVE  (14,12),,*
         BALR  12,0
         USING START,12,11
START    L     11,BASEADDR
         B     PROVADDR
BASEADDR DC    A(START+4096)
PROVADDR LR    9,13           PROVIDE
         LA    13,SAVEAREA              ADDRESSABILITY
         ST    13,8(9)                       BETWEEN
         ST    9,4(13)                            CSECTS
*
*        SET UP CVT CONVERSION ROUTINE MBBCCHHR-TTRN.
*
         LA    9,16                 LOAD CVT PTR
         L     7,0(9)              CVT ADDR
         L     9,32(7)             CONVERSION ADDR
         ST    9,CVTRTN
         L     9,40(7)
         LA    4,0                 UC
         ST    9,UCBLIST           ADDRESS OF FIRST UCB IN LIST
         ST    9,ADDR1       POINTER TO ADDRESS OF NEXT UCB IN LIST
         LR    9,7
         LA    7,DEB               BUILD DEB
         XC    0(52,7),0(7)        ZERO DEB AREA
         MVC   29(3,7),21(9)       INSERT IOS APPAD TAB ADDR
         MVI   16(7),X'01'         NUM OF EXTENTS = 1
         LA    9,DCB
         ST    9,24(7)             INSERT DCB ADDR
         MVI   24(7),X'0F'         INSERT DEB ID
         MVI   28(7),X'04'         INSERT EXT SCALE
         MVC   36(2,7),=X'0000'    INSERT BB INTO DEB
         MVI   32(7),X'C0'         INSERT DEVICE MOD
         MVC   42(6,7),EXTCONST    INSERT EXTS AND TK COUNT
         ST    7,DEBPTR            BUILD DCB
         LOAD  EP=SYIDTAB          LOAD ID LIST TABLE
         ST    0,TABAD             STORE START  ADDRESS
SYSALL   WTOR  '***SYIDCHEK  REPLY SYS OR ALL',REP4FLD,3,REP4ECB
         WAIT  ECB=REP4ECB
         MVC   PAKOPT+16(3),REP4FLD
         CLC   REP4FLD,=C'SYS'
         BNE   TESTALL
         MVI   SYSSW,X'FF'
         B     CHECKRUN
TESTALL  CLC   REP4FLD,=C'ALL'
         BE    CHECKRUN
         XC    REP4ECB,REP4ECB
         B     SYSALL
CHECKRUN WTOR  '***SYIDCHEK  REPLY TEST OR RUN',REP2FLD,4,REP2ECB
         WAIT  ECB=REP2ECB
         B     REP2ECB+4
REP2FLD  DC    CL4' '
REP2ECB  DC    F'0'
         CLC   REP2FLD,=C'TEST'         TESTING ONLY-SCRATCHES TEMPONLY
         BE    ISSUET                   BRANCH TO TIMER
         CLC   REP2FLD,=C'RUN '         SCRATCHES ALL
         BE    NOOPINS
         XC    REP2ECB,REP2ECB
         MVI   REP2FLD,X'40'
         MVC   REP2FLD+1(3),REP2FLD
         WTO   '***SYIDCHEK INVALID REPLY'
         B     CHECKRUN
********
NOOPINS  MVI   NOOPSC+1,X'00'           NOOP BRANCH AROUND SCRATCH
*****
*        FOLLOWING ROUTINE REQUIRES OPERATOR TO TYPE IN THE NUMBER
*        OF PROTECTION HOURS 'XX' TO BE GIVEN TO A TEMPORARY DATA SET.
*        IF CREATION DATE OF T.D.S EARLIER THAN PRESENT DATE AND
*        TIME - XX HOURS, IT IS SCRATCHED.
*****
ISSUET   TIME  BIN           TIME IN BINARY 100THS OF A SECOND.
         ST    0,TIMEWD
         ST    1,DATEFWD                STORE DATE IN FORM 00YYDDDF
         UNPK  INFODATE,DATEFWD+1(3)
OPINTER  WTOR  '***SYIDCHEK  REPLY HOURS PROTECTION',REP3FLD,2,REP3ECB
         WAIT  ECB=REP3ECB
         B     REP3ECB+4
REP3FLD  DC    CL2' '
REP3ECB  DC    F'0'
         XC    REP3ECB,REP3ECB
         CLI   REP3FLD+1,X'40'     SINGLE REPLY
         BNE   DOUBLERE
         MVC   REP3FLD+1(1),REP3FLD     SET UP
         MVI   REP3FLD,X'F0'            TWO BYTE NUMERIC FIELD
DOUBLERE TM    REP3FLD,X'F0'
         BO    CHEK2
REP3     WTO   '***SYIDCHEK-INVALID ENTRY-NOT NUMERIC'
         MVC   REP3FLD,=C'  '      BLANK OUT REPLY FIELD
         B     OPINTER
CHEK2    TM    REP3FLD+1,X'F0'
         BNO   REP3
         STM   14,12,SAVETIME           STORE FOR CALC
         LA    2,0
         PACK  DWD+6(2),REP3FLD    CONVERT WTO TIME TO BINARY HOURS
         CVB   2,DWD
         MH    2,=H'3600'          CONVERT HOURS TO SECONDS
         MH    2,=H'100'           CONVERT TO HUNDREDTHS
         L     3,TIMEWD            LOAD ACTUAL TIME
         SR    3,2
         BP    TRUETIME       IF POSITIVE SAME DAY-FOUND TIME
         A     3,=F'8640000'  ELSE ADD 24 HOURS TO FIND TIME AND
         SP    DATEFWD,=P'1'  SET TO PREVIOUS DAY
TRUETIME LA    2,0
         D     2,=F'100'      CONVERT TO SECONDS
         BAL   10,CONVT
         UNPK  SS,DWDTIME+6(2)    STORE SECONDS
         BAL   10,CONVT
         UNPK  MM,DWDTIME+6(2)    STORE MINS
         MVI   WHIZ+1,X'30'
         BAL   10,WHIZ
         UNPK  HH,DWDTIME+6(2)    STORE HOURS
         UNPK  INFOPROD,DATEFWD+1(3)
         OI    INFOPROD+4,X'F0'
         MVC   INFOPROT(6),TIMENO
         TIME  DEC
         ST    0,INFOT
         OI    INFOT+3,X'0F'
         UNPK  INSPARE,INFOT
         MVC   INFOTIME(6),INSPARE
         MVC   INFOPROD+16(4),REP2FLD
         LM    14,12,SAVETIME
         B     LOADENQ
CONVT    LA    2,0
         D     2,=F'60'       CONVERT TO MINS-SECS
WHIZ     CVD   2,DWDTIME
         OI    DWDTIME+7,X'0F'
         BR    10
*
*        NOW ENTER MAIN SECTION OF PROGRAM.
*
LOADENQ  LOAD  EP=SYUNIT     ENQRIRY ROUTINE FOR CHANGING PACKS LOADED
         USING IHADCB,5                 USE DSECT FOR FINDING
         LA    5,XDAPDCB                DEB ADDRESS
         OPEN  (XDAPDCB,,PRINTDCB,(OUTPUT))       OPEN DCBS
         MVC   FULLWORD,DCBDEBAD   SET UP DEB
         PUT   PRINTDCB,INFOLINE     PRINT IDENTIFICATION LINE
*
         ENQ   (QNAME,RNAME,E,2,SYSTEM)      ENQ ON
         ENQ   (QNAME,RNAME2,E,2,SYSTEM)     UCB,S
*
         CLI   SYSSW,X'FF'    IF SYSTEM PACKS ONLY BYPASS SYUNIT
         BE    MAINLOOP
         B     CALLIN          CALL COMMUNICATIONS MODULE
*
*********REGISTER 4 CONTAINS ADDRESS OF NEXT UCB
*********REGISTER 9 POINTS TO ADDRESS OF NEXT UCB
*
MAINLOOP L     9,ADDR1       LOAD POINTER TO ADDRESS OF NEXT UCB
HOLY     LH    4,0(9)        LOAD ADDRESS OF NEXT UCB
         CH    4,=H'0'             CHECK FIR HOLES
         BNE   NOHOLES
UPTAB    LA    9,2(9)              MOVE UP UCB LIST
         B     HOLY
NOHOLES  CH    4,UCBEND            END OF TABLE
         BE    RETURN              YES GO TO END ROUTINE
         CLI   18(4),X'20'         DIRECT ACCESS
         BNE   UPTAB               NO BR.
         MVC   REP+32(3),13(4)
         CLC   13(3,4),ONE30       RESTRICTED
         BL    UPTAB               RANGE
         CLI   SYSSW,X'FF'
         BE    SYSRTN
         B     ALLPAX
SYSRTN   CLC   13(3,4),ONE51  RESTRICT RANGE TO SYSTEM PACKS
         BH    FRETURN
ALLPAX   CLC   13(3,4),ONE37
         BH    UPTAB               PRESENT 360-40
         CLC   13(3,4),ONE51
         BNH   STILLSYS
         MVC   NUMDSCB,=F'25'     DSCB PER TRK ON 2314
         MVC   NUMBHEAD,=F'19'     HEADS ON 2314
         MVC   UNTFLD,=C'2314'  CHANGE UNIT FIELD FOR 2314
STILLSYS CLC   28(6,4),NOSER
         BNE   LOADDEB
         LA    5,0
         IC    5,TESTBIT+1         CHANGE BIT POSITION
         LTR   5,5
         BZ    RETURN
         SRL   5,1                 FOR TESTING NEXT UNIT.
         STC   5,TESTBIT+1
         B     UPTAB
LOADDEB  ST    4,ADDR1       ADDR1 USED AS TEMP FIELD FOR UCB ADDRESS
         L     4,FULLWORD          LOAD DEB ADDRESS INTO REG 4
         MVC   33(3,4),ADDR1+1          SET UP FIRST UCB ADDRESS
         MVC   38(10,4),=X'00000000000000010002'  AND EXTENTS IN DEB
         LA    7,DEB
         MVC   33(3,7),ADDR1+1      INSERT UCB INTO RELTRACK DEB
         MVC   UCBAD,ADDR1         STORE UCB ADDRESS FOR RELTRACK
         LA    9,2(9)              MOVE UP UCB LIST
         ST    9,ADDR1             STORE POINTER TO NEXT UCB
*
*    FIND VOLUME LABEL   ***
*                   XDAPKEE AND XDAPNO ARE USED IN ORDER TO READ
*                   THE TWO DIFFERENT TYPES OF VOLUME LABEL
*                   - ONE WITH KEYS
*  (SETUP BY IEHDASDR),ONE WITHOUT (SET UP BY STAND-ALONE?)
         XC    XDAPCB1(1),XDAPCB1       SET WAIT AND POST BITS TO 0
XDAPKEE  XDAP  XDAPCB1,RK,XDAPDCB,XDAPAREA,80,(XDAPKEY,4),XDAPREF
         WAIT  ECB=XDAPCB1
         TM    XDAPCB1,X'7F'
         BO    FINDVTOC
*
         XC    XDAPCB(1),XDAPCB         SET WAIT AND POST BITS TO 0
XDAPNO   XDAP  XDAPCB,RI,XDAPDCB,XDAPAREA,80,,NOKEYREF
         WAIT  ECB=XDAPCB
         TM    XDAPCB,X'7F'
         BO    FINDVTOC
         OI    XDAPCB+1,X'0F'                ERROR
         MVO   XDAPCB(1),XDAPCB+1                 RETURN
         NI    XDAPCB,X'0F'                            CODE
         UNPK  REP+29(2),XDAPCB(2)
         MVC   REP+38(6),XDAPAREA+4
REPIT    WTO   MF=(E,REP)
         CLC   UNTFLD,=C'3330'
         BE    MAINLOOP
         LA    5,0
         IC    5,TESTBIT+1         CHANGE BIT POSITION
         SRL   5,1                 FOR TESTING NEXT UNIT.
         LTR   5,5
         BZ    RETURN
         STC   5,TESTBIT+1
         B     MAINLOOP                 XDAP ERROR TRY NEXT UCB
FINDVTOC MVC   DSCBVOL,XDAPAREA+4       SET UP VOLUME SERIAL NO
         MVC   DSCBADDR,XDAPAREA+11     SET UP   CCHHR ADDRESS OF VTOC
         XC    LASTDSCB,LASTDSCB
         MVC   MBBCCHHR+3(5),DSCBADDR
         CLC   UNTFLD,=C'3330' COMPARE FOR 3330,IF YES BRANCH AND NOT
         BE    DSCBFIND      UPDATE PACK CHANGE BYTE
TESTBIT  TM    UCBBYTE,X'80'       TEST UNIT FOR OPERATOR PACK CHANGE.
         BO    RELTRACK            YES, BR TO UPDATE VTOC TTR.
SHIFT    LA    5,0
         IC    5,TESTBIT+1         CHANGE BIT POSITION
         LTR   5,5
         BZ    RETURN
         SRL   5,1                 FOR TESTING NEXT UNIT.
         STC   5,TESTBIT+1
*                             FIND FIRST DSCB
DSCBFIND OBTAIN DSCBVTOC
         LTR   15,15
         BZ    DSCBOK
         C     15,=F'20'       ******
         BE    MAINLOOP        ERROR ROUTINE FOR OBTAIN MACRO.
         MVI   SCRAREA,X'40'
         MVC   SCRAREA+1(132),SCRAREA
         MVC   VOLSER,DSCBVOL
         LA    2,0
         LR    3,15
         M     2,=F'10'
         LA    2,MESSAGES
         AR    3,2
         MVC   REASON,0(3)
         CVD   15,DWD
         OI    DWD+7,X'0F'         CHANGE SIGN
         UNPK  UNPACKA,DWD+6(2)
         MVC   RETUCODE,UNPACKA+1
         PUT   PRINTDCB,SCRAREA
         B     UPADDR
DSCBOK   CLI   DSCBID,X'F4'
         BNE   TESTFOR1
         MVC    LASTDSCB,DSCBID+1       STORE LAST FORMAT1 ADDRESS
*
*        ROUTINE TO INCREASE    CCHHR SEEK ADDRESS.
*
UPADDR   XR     6,6                     ZEROISE REGISTER
         IC     6,REC
         A      6,=F'1'                 INCREASE NO OF RECORDS BY 1
         STC   6,REC
         S     6,NUMDSCB          DSCBS PER TRK
         BNP   CHECKPOS                 RECORD UPDATE OK - REC 25
*                                       OR LESS
         MVI   REC,X'01'                GREATER THAN 25 RECORDS
         XR    6,6                      ZEROISE RECORD
         IC    6,TRKTRK+1               UPDATE
         A     6,=F'1'                 HEAD NUMBER
         STC   6,TRKTRK+1
         S     6,NUMBHEAD          NUMBER OF HEADS
         BNP   CHECKPOS                 RECORD UPDATE OK - 19 HEAD
*                                       OR LESS
         MVI   TRKTRK+1,X'00'
         XR    6,6
         IC    6,CYLCYL+1               UPDATE
         A     6,=F'1'
         STC   6,CYLCYL+1
CHECKPOS CLC   LASTDSCB,DSCBADDR       CHECK ADDRESS NOT OUTSIDE
         BNL   DSCBFIND                 PERMITTED RANGE
         B     MAINLOOP                 NOT ALL UNITS INSPECTED
CALLIN   LINK  EP=SYUNIT,PARAM=UCBBYTE
         B     TASK(15)
TASK     B     CONTINUE
         B     FRETURN
CONTINUE B     LOOPMAIN
         MVC   ADDR1,UCBLIST
         MVC   ONE30,=C'230'    14-9-72 CHANGE SCAN RANGE UCBS
         MVI   TESTBIT+1,X'80'          RESET RANGE POINTER
         B     MAINLOOP
LOOPMAIN MVI   CONTINUE+1,X'00'
         B     MAINLOOP
TESTFOR1 CLC   LASTDSCB,=X'0000000000'
         BE    ABORT2                   NO FORMAT 4
         CLI   DSCBID,X'F1'
         BNE   UPADDR                   NOT FORMAT 1
         CLC   DSCBNAME(3),=C'SYS'      NOT SYSTEM DATA SET
         BNE   CARDRUN                      TOTAL
*                                       SYSTEM TEMP DATA SETS ONLY
         CLC   DSCBNAME+8(2),=C'.T'                CHECK
         BNE   CARDRUN                               FOR  SYSTEM
*                                       SYSTEM TEMP DATA SETS ONLY
         CLI   DSCBNAME+16,X'4B'                     TEMP DATA SET
         BNE   CARDRUN
*                                       SYSTEM TEMP DATA SETS ONLY
         PACK  CPDATE,DSCBNAME+3(5)     CREATION DATE
         OI    CPDATE+3,X'0F'
         OI    DATEFWD+3,X'0F'
         CP    CPDATE,DATEFWD           COMPARE DSCB CREATION DATE
*                                       AND PREVIOUS DAYS DATE
         BH    CARDRUN
         BNE   STARSCRA
         CLC   DSCBNAME+10(6),TIMENO   CHECK DATA SET > 24 HOURS OLD
         BH    CARDRUN      IF NOT GO TO NORMAL CHECKING ROUTINE
*                                       SYSTEM TEMP DATA SETS ONLY
         B     STARSCRA
*********
         EJECT
***************************************-**********************
*      THIS ROUTINE CHECKS THROUGH SYIDTAB WHICH HAS BEEN    *
*      PREVIOUSLY LOADED - CHECKING TO SEE WHETHER THERE     *
*      IS A CARD FOR THIS PACK AND THEN WHETHER THIS CODE    *
*      IS ON THE CARD. IF NO CARD FOR PACK PUT OUT ERROR     *
*      MESSAGE AND GET NEXT PACK. IF CARD FOUND FOR PACK     *
*      BUT CODE IS NOT ON CARD - SCRATCH DATA SET.           *
*      IF BOTH PACK AND CODE FOUND THEN ALL O.K.             *
*      IDTABLE CONSISTS OF A SERIES OF DC S   EACH 47 BYTES  *
*      LONG. FIRST SIX ARE VOL.SER.NO. FOLLOWED BY  20 X 2   *
*      LOG CODES. THE LAST CHARACTER MUST BE X - IF NOT ABEND*
*      WITH CONSOLE MESSAGE.  CONTINUATION CARDS HAVE SAME   *
*      FORMAT.  LAST CARD HAS VOL.SER.NO. = ENDEND.          *
*      OTHERWISE PROGRAM GOES INTO ENDLESS LOOP  UNTIL...... *
*                                                            *
*                                                            *
***************************************@**********************
CARDRUN  EQU   *                   SKIP THROUGH ID TABLE CHECKING EACH
*              CARD FOR VALIDITY ( X IN POSN 47 OF EACH ENTRY )
*              IF VOLSER FOUND - LOOK FOR LOGGING CODE
         L     7,TABAD             R7 AT START OF TABLE
         MVI    CARDF,X'00'       SET CARDFOUND OOF
IDOK     CLC   0(6,7),ENDEND       IS LAST ENTRY
         BE    WASFOUND            YES WAS PACK FOUND
         CLI   46(7),C'X'          IS IDENTIFIER PUNCHED
         BNE   ABCARD              NO ABEND
         CLC   0(6,7),DSCBVOL      IS VOL-SER NO ON THIS CARD
         BNE   NEXCARD             NO TRY NEXT CARD
         MVI   CARDF,X'FF'        SET CARDFOUND ON
         LA    8,6(0,7)            R8 ON FIRST CODE
TSTCODE  CLC   0(2,8),=C'  '       IS CODE BLANK
         BE    NEXCARD             YES TRY NEXT CARD
         CLC   0(2,8),DSCBACCT     IS CODE = CARD CODE
         BNE   NEXCODE             NO TRY NEXT CODE
         B     UPADDR              CODES  EQUAL- EXIT
*                                  LOOK AT NEXT DSCB
WASFOUND EQU   *    LOG CODE NOT FOUND - TEST WHETHER PACK FOUND
         CLI   CARDF,X'00'      IS SWITCH OFF
         BNE   PUTOFF              NO - PUT IT OFF AND SCRATCH
*    LOG CODE NOT FOUND AND PACK NOT FOUND PUT OUT MESSAGE
         B     UGH                 MESSAGE THEN GET NEXT PACK
*  CARD FOUND FOR PACK BUT LOG CODE INVALID
PUTOFF   MVI   CARDF,X'00'        SET OFF
         B     STARSCRA            SCRATCH THIS D/S
*  CARD IN ID TABLE HAS NO IDENTIFICATION - ABEND JOB
ABCARD   EQU   *
         WTO   '***SYIDCHEK ID TABLE INVALID ABEND'
         B     EXIT
*  CODE NOT ON THIS CARD - TRY NEXT
NEXCARD  EQU   *
         LA    7,47(7)            SETP UP
         B     IDOK                CARD
*  LAST CODE ON CARD NOT = JOB CODE- TRY NEXT
*  IF END OF CARD -- GO ON TO NEXT CARD.  ON ENTRY RY POINTS TO
*  START OF ENTRY
NEXCODE  EQU   *
         A     7,=F'44'            STEP UP TO LAST ENTRY
         CR    7,8                 ARE WE ON LAST ENTRY
         S     7,=F'44'            STEP BACK TO START
         BE    NEXCARD             YES TRY NEXT CARD
         LA    8,2(8)              STEP UP TO NEXT CODE
         B     TSTCODE             GO BACK
*
********
*   THIS ROUTINE SCRATCHES DATA SETS                        ***
*         FOR WHICH NO CARD ACCOUNTING CODE                 ***
*                   HAS BEEN FOUND                          ***
*         -USES SCRATCH AND CAMLST.                         ***
STARSCRA SR    0,0
         MVC   VOLCODE,=X'0000'
         MVC   VOLHWD+6(6),DSCBVOL      SET UP SCRATCH VOL-SERIAL-NO
NOOPSC   B     MISSSC        SWITCHED OFF FOR RUN
         SCRATCH SLIST
MISSSC   MVI   SCRAREA,X'40'
         MVC   SCRAREA+1(132),SCRAREA   BLANK OUT LINE
         MVI   FRETURN+1,X'F0'
         MVC   NAME,DSCBNAME
         MVC   VOLSER,DSCBVOL
         MVC   RETUCODE,VOLCODE
         LH    9,VOLCODE
         MH    9,=H'40'
         A     9,=A(MESSAREA)
         MVC   REASON,0(9)
         PUT   PRINTDCB,SCRAREA         WRITE LINE
         LA    9,3
         CH    9,VOLCODE
         BNL   UPADDR        CONDITION CODE NOT CRITICAL
         B     MAINLOOP
ABORT2   LA    9,0
         MVI   SCRAREA,X'40'
         MVC   SCRAREA+1(132),SCRAREA
         MVC   VOLSER,DSCBVOL
         A     9,=A(ABORT)
         MVC   REASON(24),0(9)
         PUT   PRINTDCB,SCRAREA         WRITE LINE
         B     MAINLOOP
UGH      LA    9,24
         B     ABORT2+4
*
*****   RELTRACK
*   FOLLOWING ROUTINE INSERTS CORRECT RELATIVE TRACK ADDRESS OF
*    VTOC INTO UCB. - REQRIRED IF OPERATOR USES ANY PACK OPTION.
*****
RELTRACK LA    1,DEB    DEB
         LA    2,MBBCCHHR          ACTUAL ADDRESS
         L     15,CVTRTN           CVT CONVERSION ROUTINE
         LA    7,FIVEF
         STM   9,13,FIVEF
         BALR  14,15               LINK TO ROUTINE
         LM    9,13,0(7)
         ST    0,TTRN
         LA    15,UCBVTOC
         SVC   253
         LM    9,13,FIVEF          RESTORE VULNERABLE REGISTERS
         B     SHIFT
*
*        RETURN ROUTINE.
*
RETURN   XC    REP0ECB,REP0ECB
         WTOR  '***SYIDCHEK  STOP RUN ? REPLY Y OR N',REP0FLD,1,REP0ECB
         WAIT  ECB=REP0ECB
         B     REP0ECB+4
REP0FLD  DC    CL1' '
REP0ECB  DC    F'0'
         CLI   REP0FLD,C'N'   EOJ ?
         BE    CALLIN         NO
FRETURN  NOP   BWRITE
         PUT   PRINTDCB,LINEMESS
BWRITE   CLOSE (XDAPDCB,,PRINTDCB)
         DELETE EP=SYUNIT
FINMOVE  DEQ   (QNAME,RNAME,2,SYSTEM)
         DEQ   (QNAME,RNAME2,2,SYSTEM)
EXIT     L     13,4(13)
         RETURN (14,12)                 END OF PROGRAM
         USING SYMDSECT,9
         USING *,15
UCBVTOC  L     9,CONSTX
         LM    10,11,DTTRN
         MVC   36(4,11),0(10)
         BR    14
*********
*        WORKING STORAGE SECTION.
*********
*******PRINT FILE DCB.
PRINTDCB DCB   MACRF=PM,RECFM=FBM,LRECL=133,DSORG=PS,DEVD=DA,DDNAME=DD2
*   THE FOLLOWING AREAS ARE USED BY XDAP
*
XDAPDCB  DCB   MACRF=(E),DSORG=DA,DEVD=DA,DDNAME=DD1
*
XDAPAREA DS    CL80
*
XDAPKEY  DC    CL4'VOL1'
*
XDAPREF  DC    X'00000000000000'
NOKEYREF DC    X'0000000000000003'
*
         DCBD  DSORG=PS
SYMDSECT DSECT     USED DURING SVC ROUTINE TO OVERWRITE UCB VTOC
DTTRN    DS    F
DADDR1   DS    F
SCRATCHA CSECT
*     *   OBTAIN-CAMLST AREAS                 ****
DSCBVTOC CAMLST SEEK,DSCBADDR,DSCBVOL,DSCBAREA
SLIST    CAMLST   SCRATCH,DSCBNAME,,VOLHWD
DSCBAREA DS    0CL350                   DSCB AREA - USING OBTAIN
DSCBACCT DS    0CL2                     AND CAMLST.
DSCBNAME DS    CL44                     SEEK-FIRST 140 BYTES CONTAIN
DSCBID   DS    CL1                      KEY AND DATA PORTION
DSCBFILL DS    CL305                    SEARCH-FIRST 96 BYTES CONTAIN
*                                       THE DATA PORTION-NEXT 6 BYTES
*                                       ABSOLUTE ADDRESS.
DSCBADDR DS    0CL5                     SEEK ADDRESS.
CYLCYL   DC    CL2'0'
TRKTRK   DC    CL2'0'
REC      DC    CL1'0'
DSCBVOL  DC    CL6'000000'             VOLUME SERIAL NO
LASTDSCB DC    CL5'0'                   ADDRESS OF LAST FORMAT 1 DSCB
FULLWORD DC    F'0'
CPDATE   DC    F'0'                     SYSTEM DATA SETS DATE
DATEFWD  DC    F'0'                     PREVIOUS DAYS DATE
TIMEWD   DC    F'0'
TIMENO   DS    0CL6
HH       DC    CL2'00'                  HOURS
MM       DC    CL2'00'                  MINUTES
SS       DC    CL2'00'                  SECONDS
DWDTIME  DC    D'0'
SAVETIME DC    18F'0'
QNAME    DC    CL8'SYSIEFSD'
RNAME    DC    CL2'Q4'
RNAME2   DC    CL2'Q5'
EPWORD   DC    F'0'           ENTRY POINT OF MODULE
ONE30    DC    CL3'150'         14-9-72 UCB  SEARCH
ONE37    DC    CL3'237'         14-9-72 LIMITS
SYSSW    DC    X'00'          SWITCH FOR SYSTEM PACKS ONLY
UNTFLD   DC    CL4'3330'      DEVICE TYPE IDENTIFIER
ONE51    DC    CL3'151'       HIGH 3330 ADDRESS
REP4FLD  DS    CL3
REP4ECB  DC    F'0'
NUMDSCB  DC    F'39'     DSCBS PER TRK ON 3330
NUMBHEAD DC    F'18'          HEADS ON 3330
UCBEND   DS    0H
         DC    X'FFFF'             UCB END OF TABLE INDICATOR
UCBLIST  DC    F'0'                HOLDS ADDRESS OF FIRST UCB IN LIST
ADDR1    DC    F'0'       POINTER TO ADDRESS OF NEXT UCB IN LIST
FIVEF    DC    5F'0'               STORES VULNERABLE REGISTERS
MBBCCHHR DC    D'0'
UCBBYTE  DC    X'00'     BITS 0-7 CORRESPOND TO UNITS 130-137.
*                        IF BIT IS ON ,THE UCB VOL-SER-NO FOR
*                        THAT UNIT HAS BEEN OVERWRITTEN.
*                        REQRIRES INSERTION OF VTOC TTR.
CVTRTN   DC    F'0'                STORES CVT CONVERSION ADDR
DEB      DS    F                   DEB FOR CONVERSION ROUTINE
DCB      DS    11F                 DCB FOR CONVERSION ROUTINE
DEBPTR   DS    F
EXTCONST DC    X'FFFFFFFF7FFF'       LAST CCHH AND NUM OF TRKS.
CONSTX   DC    A(CONSTTR)
CONSTTR  DS    0F
TTRNADDR DC    A(TTRN)
UCBAD    DC    F'0'                UCB ADDRESS FOR RELTRACK
TTRN     DC    F'0'
UNITCNT  DC    P'8'                     8 UNITS
VOLHWD   DC    H'1'                     VOLUME
         DC    X'30C02008'              LIST
         DC    CL6'      '              FOR
VOLCODE  DC    H'0'                     SCRATCH MACRO
REP      WTO   '***SYIDCHEK I/O ERROR *UNIT    *PACK       *',MF=L
INFOT    DS    F
INSPARE  DS    CL7
INFOLINE DS    0CL133
         DC    XL1'19'
PAKOPT   DC    CL25' PACK OPTION **     **   '
         DC    C'SYIDCHEK STARTED TIME '
INFOTIME DC    CL8' '
         DC    C' DATE '
INFODATE DC    CL5' '
         DC    C' PROTECTION TIME '
INFOPROT DC    CL8' '
         DC    C' DATE '
INFOPROD DC    CL5' '
         DC    CL30' THIS IS A      .'
*                                       FOR A VOLUME, RESET BY MAIN-
TABAD    DS    F                   STORE ID TABLE ADDRESS
CARDF      DC   XL1'00'            SWITCH USED IN CARDRUN
ENDEND   DC    CL6'ENDEND'         INDICATES LAST ENTRY
*                                       LOOP
LINEMESS DS    0CL133
         DC    XL1'09'
         DC    CL132' NO DATA SETS SCRATCHED DURING THIS RUN'
SCRAREA  DS    0CL133
         DC    XL1'09'                  SPACE ONE LINES BEFORE PRINT
         DC    CL10' '
NAME     DC    CL44' '
         DC    CL10' '
VOLSER   DC    CL6'000000'
         DC    CL10' '
RETUCODE DC    CL2' '
         DC    CL10' '
REASON   DS    CL40
*
*        OBTAIN MACRO RETURN MESSAGES
*
MESSAGES DC    CL40'DSCB FOUND OK'
         DC    CL40'REQUIRED VOLUME NOT MOUNTED'
         DC    CL40'DSCB NOT IN SPECIFIED VOL'
         DC    CL40'PERMANENT I/O ERROR ON VOL'
         DC    CL40'INVALID WORKAREA POINTER'
         DC    CL40'CCHH NOT IN BOUNDARY OF VTOC EXTENT'
NOSER    DC    X'000000000000'
DWD      DC    D'0'
UNPACKA  DS    CL3
*
*        SCRATCH MACRO RETURN MESSAGES
*
MESSAREA DC    CL40'SCRATCH OK'
         DC    CL40'VTOC DOES NOT CONTAIN DSCB TO BE DELETED'
         DC    CL40' '
         DC    CL40'EXPIRATION DATE NOT PASSED'
         DC    CL40'PERMANENT IOERROR ON VOLUME'
         DC    CL40'DEVICE NOT AVAILABLE'
         DC    CL40'OPERATOR UNABLE TO MOUNT VOLUME'
*
******* ACCOUNT CODE CHECK ROUTINE  ERROR MESSAGES.
*
ABORT    DC    CL24'NO FORMAT 4 DSCB'
         DC    CL24'NO CARD FOR THIS VOL ID'
********
SAVEAREA DC    18F'0'
         LTORG
         END
