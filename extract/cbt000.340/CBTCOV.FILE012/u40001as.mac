ZXPT     TITLE 'ROUTINE TO SELECT RECORDS AND COPY/PRINT IN HEX + CHAR'
Z0600    CSECT
         STM   14,12,12(13)
         USING Z0600,15
         B     *+76
SAVEAREA DC    18F'0'
         LR    11,13
         LA    13,SAVEAREA
         ST    11,4(13)
         ST    13,8(11)
         LA    12,4095(13)
         LA    12,1(12)
         USING Z0600+8,13,12
*
RWK1     EQU   5
RWK2     EQU   3
RBAL     EQU   4
RINF     EQU   7
RCARD    EQU   11
R5       EQU   5
R6       EQU   6
         EXTRN Z0601
         EXTRN Z0602
         EXTRN PRINT
         EXTRN CARD
         EXTRN SYSLIB
         ENTRY END                      END OF FILE ON 'INFILE'
         ENTRY ENDCARD                  END OF FILE ON CONTROL CARDS
         ENTRY IDSW,IFSW     REFS. TO ZXTPSPIE
         ENTRY IDTEST1,IDTEST2,IFTEST,LINES,NOTOUT
         SPACE 6
         CNOP  0,4
RNDADD   BAL   1,OPENSVC                **    ***   ***   ****  *   *
ADLIB    DC    AL1(0),AL3(SYSLIB)
ADCARD   DC    AL1(0),AL3(CARD)          *   *   *  ***   ****  * * *
ADPRINT  DC    AL1(143),AL3(PRINT)
RECORD   DC    F'0'
         DC    H'0'
OPENSVC  SVC   19                       **  -------------------------
         SPACE 6
         L     RWK1,ADPRINT
         TM    48(RWK1),X'10'           IS PRINT FILE OPEN
         BZ    NOPRINT
         SPACE 2
*                            FIND TIME & DATE -
*                                       -INSERT INTO PAGE HEADING
         SPACE 2
         TIME  DEC
         ST    0,WORD
         ED    TIME,WORD
         ST    1,WORD
         MVO   YEAR+1(2),WORD+1(1)
         DP    YEAR,=P'4'
         CP    YEAR+2(1),=P'0'          IS IT A LEAP YEAR
         BE    DAYSOK
         CP    WORD+2(2),=P'59'         NO, IF DATE AFTER 28 FEB
         BNH   DAYSOK                   ADD ONE TO DAYS TO ALLOW
         AP    WORD+2(2),=P'1'          FOR 29TH FEB
         SPACE 3
DAYSOK   LA    RWK1,MONTHTAB
         SPACE
DAYLOOP  CP    WORD+2(2),5(2,RWK1)
         BNH   MONTH
         LA    RWK1,5(RWK1)
         B     DAYLOOP
         SPACE
MONTH    SP    WORD+2(2),0(2,RWK1)
         ED    DAY,WORD+2
         MVC   DATE(3),DAY+1
         ED    DATE+7(3),WORD+1
         MVC   DATE+4(3),2(RWK1)
         BAL   RBAL,PUTLINE
         SPACE 3
         SPACE 2
CARDOP   MVI   PRINAR,X'19'
         MVC   PRINAR+10(13),=C'CONTROL CARDS'
         L     RWK1,ADCARD
         TM    48(RWK1),X'10'           IS CARD FILE OPEN O.K.
         BO    GETCARD                  YES
         MVC   PRINAR+7(2),=C'NO'       NO - TAKE DEFAULT VALUES
         MVC   PRINAR+24(23),=C'- DEFAULT OPTIONS TAKEN'
         B     ENDCARD
       EJECT
MOREIDS  SP    LINES,LINES
         SPACE 3
GETCARD  BAL   RBAL,PUTLINE
         L     1,ADCARD
         L     15,48(1)
         BALR  14,15
         LR    RCARD,1
         SPACE 3
         MVC   PRINAR+1(80),0(RCARD)
SWITCHID BC    0,IDCHECK
         CLC   0(6,RCARD),=C'TITLE='
         BE    TITLE
         CLC   0(7,RCARD),=C'OUTPUT='
         BE    OUTPUT
         CLC   0(8,RCARD),=C'STARTAT='
         BE    STARTAT
         CLC   0(8,RCARD),=C'PRINTIF='
         BE    PRINTIF
         CLC   0(6,RCARD),=C'ONEIN='
         BE    ONEIN
         CLC   0(8,RCARD),=C'STOPAFT='
         BE    STOPAFT
         CLC   0(9,RCARD),=C'IDOFFSET='
         BE    IDOFFSET
         CLC   0(7,RCARD),=C'FORMAT='
         BE    FORMAT
         CLC   0(4,RCARD),=C'MOD='
         BNE   *+10
         BCTR  RCARD,0
         B     MOD1
         CLC   0(3,RCARD),=C'END'
         BE    ENDCARD
         CLC   0(4,RCARD),=C'MOD1='
         BE    MOD1
         CLC   0(4,RCARD),=C'MOD2='
         BE    MOD2
IDCHECK  CLC   0(2,RCARD),=C'ID'
         BE    IDRTN
INV      MVC   PRINAR+90(30),=C'INVALID KEYWORD - CARD IGNORED.'
         B     GETCARD
       EJECT
TITLE    BC    0,DUP
         MVC   TOPHED(74),6(RCARD)
         MVI   TITLE+1,X'F0'
         B     GETCARD
         SPACE 2
STARTAT  BC    0,DUP
         LA    RWK1,8(RCARD)
         BAL   RBAL,FLDLUP              ONLY RETURNS IF NUMBER VALID
         ZAP   START,DWORD
         MVI   STARTAT+1,X'F0'
         B     GETCARD
         SPACE 2
STOPAFT  BC    0,DUP
         LA    RWK1,8(RCARD)
         BAL   RBAL,FLDLUP
         ZAP   STOP,DWORD
         MVI   STOPAFT+1,X'F0'
         B     GETCARD
         SPACE 2
ONEIN    BC    0,DUP
         LA    RWK1,6(RCARD)
         BAL   RBAL,FLDLUP
         ZAP   ONEOF,DWORD
         MVI   ONEIN+1,X'F0'
         B     GETCARD
         SPACE 2
OUTPUT   BC    0,DUP
         CLC   7(5,RCARD),=C'PRINT'
         BE    OUTRTN
         CLC   7(4,RCARD),=C'BOTH'
         BE    BOTH
         CLC   7(4,RCARD),=C'COPY'
         BNE   INV
         MVI   OUTSW2+1,X'F0'
         SPACE 2
BOTH     NI    OUTSW1+1,X'0F'
OUTRTN   MVI   OUTPUT+1,X'F0'
         B     GETCARD
         SPACE 3
PRINTIF  BC    0,DUP         CHANGED TO BC 15,DUP AFTER 1ST TIME THRO'
         CLI   8(RCARD),X'4D'
         BNE   INVIF
         LA    RWK1,9(RCARD)      CHECK OFFSET
         BAL   RBAL,FLDLUP        RETURNS ONLY IF FLD VALID, WITH
*                                 R.7=(L-1), FLD PACKED INTO DWORD
         CP    DWORD,=P'4095'
         BH    TOOFAR
         CVB   2,DWORD
         STH   2,OFFSET
         OC    IFTEST+2(2),OFFSET
         BCTR  RWK1,0
         CLI   1(RWK1),X'6B'
         BNE   INVIF
         SPACE 3
*        CHECK OPERATOR AND BRANCH ON OPPOSITE CONDITION TO TEST.
*        E.G.  IF 'PRINTIF=NE' THEN SET TO BRANCH EQUAL.
*
         LA    RWK2,OPTABLE
OPLOOP   CLI   0(RWK2),X'FF'            TEST FOR END OF TABLE
         BE    INVOP                    YES - OPERATOR INVALID
         CLC   2(2,RWK1),0(RWK2)        NO  - TEST FOR EQUAL
         BE    OPFOUND
         LA    RWK2,3(RWK2)             GET NEXT TABLE ENTRY
         B     OPLOOP
         SPACE 2
OPTABLE  DC    C'GT',X'D0'
         DC    C'LT',X'B0'
         DC    C'EQ',X'70'
         DC    C'NE',X'80'
         DC    C'GE',X'40'
         DC    C'LE',X'20',X'FF'        MARK END OF OPTABLE
         SPACE 2
OPFOUND  MVC   IFBRANCH+1(1),2(RWK2)
*                                 CHECK VALUE
SETIF    CLI   4(RWK1),X'6B'
         BNE   INVIF
         LA    RWK1,5(RWK1)
         MVI   IDBLANK,X'00'      RE-SET TRT TABLE FROM
         MVI   IDCOMMA,X'00'      IDTESTS, TO USE LATER ON
         CLI   0(RWK1),C' '       1ST BYTE MUST NOT BE BLANK,
         BE    INVIF                OR
         CLI   0(RWK1),C','           COMMA
         BE    INVIF
         CLI   0(RWK1),X'7D'      IF QUOTE, THEN FIELD
         BE    QUOTETAB           IS IN QUOTES
         SPACE 1
         MVI   IDBRAKT,X'FF'
         TRT   0(31,RWK1),IDTABLE
         BZ    LARGE
         ST    1,LENGTH
         SPACE 1
BACK     MVC   BRANCH+2(2),SCON
         CLI   1(1),C','
         BE    IFFORMAT
         CLI   1(1),C' '
         BNE   INVIF
         B     MOVEFLD            FORMAT ASSUMED TO BE CHAR.
IFFORMAT CLC   2(7,1),=C'FORMAT='
         BNE   INV
         LA    RCARD,2(1)
         B     FORMAT             FORMAT RTN WILL RETURN TO ADDR
SCON     DC    S(MOVEFLD)         IN THIS SCON
*
QUOTETAB MVI   IDQUOTE,X'FF'
         LA    RWK1,1(RWK1)
         TRT   0(31,RWK1),IDTABLE
         BZ    LARGE
         ST    1,LENGTH
         LA    1,1(1)
         B     BACK
         SPACE 1
MOVEFLD  L     1,LENGTH
         SR    1,RWK1
         MVI   PRINPACK+1,X'F0'   SET ON PRINTIF SWITCH
         BAL   RBAL,CONTYPE   THIS WILL MOVE FLD, IN CORRECT FORMAT,
*                             INTO IDFIELD. ON RETURN R.1=(L-1) OF FLD
         EX    1,MOVEIF
IFPACK   BC    0,*+8          DON'T STORE LENGTH IF FORMAT=P
         STC   1,IFTEST+1
         MVI   IFSW+1,X'00'   MODIFY PRINT RTN TO GO THRO PRINTIF TEST
         MVI   PRINTIF+1,X'F0'    ALLOW 1 PRINTIF TEST ONLY
         MVI   IDOFFSET+1,X'F0'   DON'T ALLOW ANY IDTESTS
         B     GETCARD
         SPACE 1
MOVEIF   MVC   IFFIELD(0),IDFIELD
         SPACE 1
INVIF    MVC   PRINAR+90(30),=C'PRINTIF SYNTAX ERROR - IGNORED'
         B     GETCARD
INVOP    MVC   PRINAR+90(31),=C'INVALID OPERATOR - CARD IGNORED'
         B     GETCARD
LARGE    MVC   PRINAR+90(30),=C'VALUE TOO LARGE - CARD IGNORED'
         B     GETCARD
         SPACE 2
IDOFFSET BC    0,DUP
         LA    RWK1,9(RCARD)
         BAL   RBAL,FLDLUP              RETURNS ONLY IF FIELD IS
         CP    DWORD,=P'4095'           VALID NUMERIC.
         BH    TOOFAR
         CVB   RWK1,DWORD
         STH   RWK1,OFFSET
         OC    IDTEST1+2(2),OFFSET
         OC    IDTEST2+2(2),OFFSET
         MVI   IDOFFSET+1,X'F0'
         MVI   PRINTIF+1,X'F0'    DON'T ALLOW A PRINTIF TEST
         AR    RCARD,RINF
         CLI   10(RCARD),X'6B'
         BNE   GETCARD
         AH    RCARD,=H'11'
         CLC   0(7,RCARD),=C'FORMAT='
         BNE   INV
*
FORMAT   CLI   7(RCARD),C'P'
         BE    SETYPE
         CLI   7(RCARD),C'C'
         BE    SETYPE
         CLI   7(RCARD),C'X'
         BE    SETYPE
         MVC   PRINAR+90(30),=C'FORMAT INVALID - DEFAULT TAKEN'
         B     BRANCH
SETYPE   MVC   TYPE,7(RCARD)
BRANCH   B     GETCARD       AMENDED BY PRINTIF RTN TO RETURN TO IT
*
OFFSET   DC    H'0'
TOOFAR   MVC   PRINAR+90(35),=C'OFFSET GREATER THAN 4095 - REJECTED'
         B     GETCARD
MOD1     BC    0,DUP
         B     MOD
MOD2     BC    0,DUP
         B     MOD
*
MOD      LA    RCARD,5(RCARD)
         LR    RWK2,RCARD
         LA    RWK1,8(RCARD)      CHECK MEMBER NAME
         CLI   0(RCARD),C'A'       1ST BYTE MUST BE CHAR.
         BL    INVMOD
         CLI   0(RCARD),C'Z'
         BH    INVMOD
         SPACE 1
MODLOOP  LA    RCARD,1(RCARD)
         CLI   0(RCARD),C' '
         BE    GOTMOD
         CR    RWK1,RCARD          CHECK LENGTH NOT MORE THAN 8
         BNH   INVMOD
         TRT   0(1,RCARD),TABLE2   ALPHANUMERIC CHECK
         STC   2,BYTE
         CLI   BYTE,C'.'
         BE    INVMOD
         B     MODLOOP
         SPACE 1
GOTMOD   SR    RCARD,RWK2         MOVE MEMBER-NAME
         BCTR  RCARD,0
         EX    RCARD,MOVEMOD      INTO MEMBER
         L     2,ADLIB
         TM    48(2),X'10'        TEST FOR OPEN OK
         BO    LOAD
         MVC   PRINAR+90(42),=C'SYSLIB DD CARD WRONG/MISSING, MOD NOT U*
               SED'
         B     GETCARD
         SPACE 1
LOAD     BLDL  (2),LIST      LOCATE USER'S MODULE
         LTR   15,15
         BZ    MODFOUND
         CH    15,=H'4'
         BE    NOTFOUND
         MVC   PRINAR+90(29),=C'ERROR LOCATING MOD - NOT USED'
         B     GETCARD
NOTFOUND MVC   PRINAR+90(41),=C'MEMBER NOT FOUND IN SYSLIB - MOD NOT US*
               ED'
         B     GETCARD
         SPACE 1
MODFOUND LOAD  DE=MEMBER,DCB=(2)
         TM    SWITCH,X'80'
         BO    MODCD2
         MVI   MODSW1+1,X'00'
         MVI   MOD1+1,X'F0'
         ST    0,MODADDR1
         OI    SWITCH,X'80'
         MVC   MEMBER(8),=C'        '
         B     GETCARD
MODCD2   MVI   MOD2+1,X'F0'
         ST    0,MODADDR2
         NI    SWITCH,X'7F'
         B     GETCARD
*
MOVEMOD  MVC   MEMBER(0),0(RWK2)
*
         SPACE 1
INVMOD   MVC   PRINAR+90(27),=C'NAME INVALID - CARD IGNORED'
         B     GETCARD
         SPACE 1
         SPACE 3
*                                       SET JOB TO FAIL ON COMPLETION
*                                       OF CARD EDIT PHASE.
ABEND988 MVC   IDEODAD(4),BABEND
         MVC   ENDCARD(4),BABEND
         MVC   LOOP(4),*+6
         B     GETCARD
         SPACE 2
BABEND   B     ABND988
ABND988  MVC   PRINAR+10(L'MSG00A),MSG00A
         BAL   RBAL,PUTLINE
         B    CLOSE
NOINFILE MVC   PRINAR+10(L'MSG00B),MSG00B
         BAL   RBAL,PUTLINE
         B    CLOSE
*
MSG      B     NOINFILE
GETBRNCH B     GETCARD
         EJECT
IDRTN    CLC   0(6,RCARD),=C'IDEQU='
         BE    IDEQU
         CLC   0(6,RCARD),=C'IDLOW='
         BE    IDLOW
         CLC   0(7,RCARD),=C'IDHIGH='
         BE    IDHIGH
*
         B     INV
         SPACE 3
IDEQU    LA    RWK1,6(RCARD)
         BAL   RBAL,FINDID
         EX    1,IDMOVE1
         EX    1,IDMOVE2
PACKEQ   BC    0,IDEXIT
         STC   1,IDTEST1+1
         STC   1,IDTEST2+1
         B     IDEXIT
         SPACE 3
IDLOW    LA    RWK1,6(RCARD)
         BAL   RBAL,FINDID
         EX    1,IDMOVE1
PACKLOW  BC     0,*+8
         STC   1,IDTEST1+1
         LA    RWK1,1(1,RWK1)           RWK1=RWK1 + REG1 +1
IDELIM   CLI   0(RWK1),C' '                 =ADDRESS OF FIELD DELIMITER
         BE    NOHIGH
         CLI   0(RWK1),C','
         BE    LOWHIGH
         CLI   0(RWK1),X'7D'            IS QUOTE THE DELIMITER
         BNE   INV
         LA    RWK1,1(RWK1)
         B     IDELIM
         SPACE 3
NOHIGH   CLI   TYPE,C'P'               IF IDLOW, SET HIGH
         BNE   NOTPKD                  VALUES FOR 2ND ID TEST
         MVC   IDFIELD2,=X'9999999C'
         B     PACKNOH
NOTPKD   MVI  IDFIELD2,X'FF'
         MVC   IDFIELD2+1(29),IDFIELD2
PACKNOH  BC    0,IDEXIT
         STC   1,IDTEST2+1
         B     IDEXIT
         SPACE 3
LOWHIGH  CLC   1(7,RWK1),=C'IDHIGH='
         BNE   INV
         LA    RWK1,8(RWK1)
         B     HIGHTEST
         SPACE 4
IDHIGH   MVI   IDTEST1+1,X'00'          EFFECTLY NO-OP IDLOW TEST
         CLI   TYPE,C'P'                BY COMPARING
         BNE   CORX                     1 BYTE TO
         MVI   IDFIELD1,X'0C'           X'0C' IF PACKED,
         B     CPANDX                   OR,
CORX     MVI   IDFIELD1,X'00'           BY COMPARING WITH X'00'
CPANDX   LA    RWK1,7(RCARD)
         SPACE 2
HIGHTEST BAL   RBAL,FINDID
         EX    1,IDMOVE2
PACKHIGH BC    0,IDEXIT
         STC   1,IDTEST2+1
         B     IDEXIT
         EJECT
IDMOVE1  MVC   IDFIELD1(0),IDFIELD
IDMOVE2  MVC   IDFIELD2(0),IDFIELD
IDFIELD1 DC    CL30' '
IDFIELD2 DC    CL30' '
IDFIELD  DC    CL30' '
         SPACE 6
IDEXIT   BC    0,NOTID1                 SET TO BRANCH AFTER
         OI    *-3,X'F0'                FIRST ID REQUEST
         SPACE 3
         MVI   PRINAR+1,C' '
         MVC   PRINAR+2(131),PRINAR+1
         ZAP   LINES,=P'0'
         BAL   RBAL,PUTLINE
         SPACE
         MVC   PRINAR+1(80),0(RCARD)
         SPACE 3
NOTID1   MVI   PRINAR,X'19'
         BAL   RBAL,PUTLINE             PRINT AND SPACE 2
         BC    0,IDTEST1               SET TO BC 15,IDTEST1 AFTER
         OI    *-3,X'F0'                FIRST TIME THRO' THIS RTN.
         NI    IDSW+1,X'0F'             SET LOOP TO GO THRO' THE
*                                       ID SELECTION RTN.
         L     RWK1,ADCARD
         LA    RWK2,IDEODAD             CHANGE EODAD ADDRESS IN CARD
         ST    RWK2,WORD                DCB, SO THAT ONLY REQUESTED
         MVC   33(3,RWK1),WORD+1        RECORDS ARE PRINTED/COPIED
*
         OI    SWITCHID+1,X'F0'
         B     SPIE
         SPACE 3
IDEODAD  MVC   PRINAR+10(31),=C'LAST ID REQUEST PROCESSED - EOJ'
*                                       ALTERED TO ''B   ABND988'' IF
*                                       OUTPUT=OUFILE AND NO DD CARD.
         B     CONTROLS
         EJECT
*              ***************   FINDID  ROUTINE  *************
*              *                                              *
*              *  THIS ROUTINE IS USED BY IDEQU, IDLOW, AND   *
*              *  IDHIGH  ROUTINE TO CHECK THE IDFIELDS       *
*              *  SUPPLIED BY USER IN CARDS, AND IF VALID     *
*              *  PUTS FIELD IN IDFIELD                       *
*              *                                              *
*              *  INPUT - RWK1 CONTAINS ADDRESS OF FIRST BYTE *
*              *          WHICH MIGHT ALSO BE OPENING QUOTE   *
*              *                                              *
*              *  OUTPUT- IDFIELD WILL CONTAIN FIELD FROM     *
*              *          USER-SUPPLIED CARD                  *
*              *                                              *
*              *          REG 1 WILL CONTAIN (LENGTH-1) OF    *
*              *          THE FIELD. (I.E. EXECUTE LENGTH     *
*              *                                              *
*              *  LINK  - LINKED BY  ' BAL  RBAL,FINDID       *
*              *                                              *
*              ************************************************
         SPACE 4
FINDID   CLI   0(RWK1),C' '             IF FIRST BYTE CONTAINS
         BE    IDWRONG                  BLANK OR COMMA, IT IS
         CLI   0(RWK1),C','             INVALID.
         BE    IDWRONG
         CLI   0(RWK1),X'7D'            IF IT CONTAINS A QUOTE THEN
         BE    IDINQUOT                 IDFIELD IS BEING DEFINED IN
*                                       QUOTES AS IT MAY CONTAIN
*                                       BLANKS OR COMMAS.
*                              ******** SET IDTABLE UP FOR BLANK,COMMA
         MVI   IDBLANK,X'FF'
         MVI   IDCOMMA,X'FF'
         MVI   IDQUOTE,X'00'
         B     TRANS
         SPACE 2
IDTABLE  DC    64X'00'
IDBLANK  DC    X'FF'                    SET TO X'00' IN IDQUOTE RTN
         DC    42X'00'
IDCOMMA  DC    X'FF'                           X'00'
         DC    17X'00'
IDQUOTE  DC    X'00'                           X'FF'
         DC    130X'00'
IDBRAKT  EQU   IDTABLE+X'5D'
IDINQUOT MVI   IDBLANK,X'00'            SET UP IDTABLE TO
         MVI   IDCOMMA,X'00'            STOP ONLY ON QUOTE, USED
         MVI   IDQUOTE,X'FF'            AS DELIMITER IN THIS CASE
         LA    RWK1,1(RWK1)             RWK1 SET TO FIRST BYTE OF FIELD
         CLI   0(RWK1),X'7D'            CHECK THAT NOT TWO QUOTES
         BE    IDWRONG                  TOGETHER.
         SPACE 2
TRANS    TRT   0(31,RWK1),IDTABLE      SEARCH FOR BLANK, COMMA OR QUOTE
         BZ    TOOLONG                 IF ZERO, FIELD TOO LONG (C OR X)
         SR    1,RWK1        R.1 CONTAINS L OF FLD.
CONTYPE  CLI   TYPE,C'P'
         BE    PACKRTN
         CLI   TYPE,C'X'
         BE    HEXRTN
         BCTR  1,0           ( MUST BE CHAR)
         EX    1,IDMOVE
         BR    RBAL
*
IDMOVE   MVC   IDFIELD(0),0(RWK1)
*
PACKRTN  C     1,=F'7'       CHECK LENGTH (MAX. 4 BYTES),
         BH    INVFLD
         LR    8,1           THEN CHECK VALID NUMERICS
         LR    2,RWK1
PCHK     CLI   0(2),C'0'
         BL    INVFLD
         CLI   0(2),C'9'
         BH    INVFLD
         LA    2,1(2)
         BCT   8,PCHK
         EX    1,PACK       (PACK 1 BYTE TOO MANY)
         MVO   IDFIELD(4),PACKAR+3(4)         MOVE VALUE INTO -
         MVN   IDFIELD+3(1),=X'0C'                         - IDFIELD
PRINPACK BC    0,CPPRNT      SET TO BC 15 IF PRINTIF VALUE
         MVC   IDTEST1(2),=X'F933'  CHANGE CLC TO CP & INSERT LENGTHS
         MVC   IDTEST2(2),=X'F933'
         MVI   PACKEQ+1,X'F0'          ALSO STOP IDRTNS INSERTING
         MVI   PACKNOH+1,X'F0'         LENGTHS
         MVI   PACKLOW+1,X'F0'
         MVI   PACKHIGH+1,X'F0'
         B     AFTCP
CPPRNT   MVC   IFTEST(2),=X'F933'
         MVI   IFPACK+1,X'F0'
AFTCP    LA    1,3                   SET R.1 TO L-1 OF FLD
         SH    2,=H'4'
         LR    RWK1,2
         BR    RBAL
*
PACK     PACK  PACKAR,0(0,RWK1)
*
HEXRTN   LR    9,1      CHECK EVEN NO. OF DIGITS
         SR    8,8
         D     8,=F'2'
         LTR   8,8
         BNZ   INVFLD
         C     1,=F'14'
         BH    INVFLD
         LR    8,1
         LR    2,RWK1
XCHK     CLI   0(2),C'A'  CHECK DIGITS ARE VALID
         BL    INVFLD
         CLI   0(2),C'9'
         BH    INVFLD
         CLI   0(2),C'G'
         BL    OKFLD
         CLI   0(2),C'0'
         BL    INVFLD
OKFLD    LA    2,1(2)
         BCT   8,XCHK
         BCTR  1,0
         EX    1,TRNS     TRANSLATE C1 TO FA, ETC
         AH    1,=H'1'
         EX    1,PACK     (PACK ONE EXTRA BYTE)
         SRL   1,1      ADJUST LENGTH TO -
         BCTR  1,0            - (L-1)
         LA    2,PACKAR+6
         SR    2,1         R.2 = ADDR OF START OF FLD IN PACKAR
         EX    1,IDMOVE22
         BR    RBAL
*
TRNS     TR    0(0,RWK1),TABLE3
IDMOVE22 MVC   IDFIELD(0),0(2)
*
INVFLD   MVC   PRINAR+90(32),=C'ID VALUE INVALID - CARD REJECTED'
         B     GETCARD
         SPACE 3
IDWRONG  MVC   PRINAR+90(34),=C'IDFIELD - INVALID FORMAT. REJECTED'
         B     GETCARD
         SPACE 3
TOOLONG  CLC   0(5,RCARD),=C'IDEQU'
         BE    TAKE30
         MVC   PRINAR+90(27),=C'IDFIELD TOO LONG - REJECTED'
         B     GETCARD
         SPACE
TAKE30   MVC   PRINAR+90(33),=C'IDFIELD TOO LONG - FIRST 30 TAKEN'
         MVC   IDFIELD,0(RWK1)
         ST    RBAL,WORD
         BAL   RBAL,PUTLINE
         L     RBAL,WORD
         LA    1,29
         BR    RBAL
         EJECT
ENDCARD  ZAP   LINES,=P'0'
         BAL   RBAL,PUTLINE
SPIE     SPIE  Z0602,(7)
         EJECT
*        ALL SYSIN CONTROL CARDS HAVE NOW BEEN PROCESSED AND USED
*        TO COMPLETE THE TESTS BELOW WHICH RECORDS FROM INFILE ARE
*        NOW PUT THROUGH TO SELECT OR REJECT THEM.
         SPACE 3
LOOP     LA    1,ADCARD
         CALL  INPUT,,,ID=1
         L     RINF,RECORD
         CH    15,=H'0'
         BE    CONT1
         CH    15,=H'4'
         BE    END
         CH    15,=H'8'
         BE    INERR
         CH    15,=H'12'
         BE    MESPRINT
         B     INVRETCD
*
CONT1    AP    IN,=P'1'
         SPACE 2
*                             STARTAT TEST
         CP    IN,START                 * STARTAT TEST. DEFAULT
         BL    LOOP                     * VALUE OF 'START' IS ZERO
         SPACE 2
*                             PRINTIF TEST
IFSW     BC    15,IDSW            MODIFIED TO BC 0 IF PRINTIF TEST REQD
         SPACE 1
IFTEST   CLC   0(0,RINF),IFFIELD  DISP MODIFIED FROM PRINIF STMNT
IFBRANCH BC    15,LOOP            COND MODIFIED FROM PRINIF STMNT
         SPACE 2
*                             ID TEST
IDSW     BC    15,NOIDTEST              SET TO BC  0,* IF TESTS REQ.D
         SPACE
IDTEST1  CLC   0(0,RINF),IDFIELD1      SET TO CP INSTRS IF FORMAT=P
         BL    LOOP
IDTEST2  CLC   0(0,RINF),IDFIELD2
         BH    MOREIDS                  IF HIGH - RETURN TO IDRTN TO
*                                       SEE IF FURTHER ID REQUESTS
*                                       HAVE BEEN MADE BY USER
         SPACE 3
*                             ONEIN TEST
NOIDTEST SP    ONE,=P'1'                ONEIN TEST.   DECREMENT
         BP    LOOP                     * FROM VALUE GIVEN IN ONEIN=
         ZAP   ONE,ONEOF                * TO ZERO -THEN PRINT + RESET
         SPACE 3
*                            BRANCH TO USER'S TESTS
MODSW1   BC    15,OUTSW1           MODIFIED TO BC 0 IF USER MOD SPEC'D
         L     15,MODADDR1
         ST    RINF,RECORD
         LA    1,ADCARD
*
         BALR  14,15                   GO TO USER'S ROUTINE
         CH    15,=H'4'
         BE    LOOP
         CH    15,=H'8'
         BE    STOPROC
         CH    15,=H'0'
         BE    SWTEST
         BNE   INVRETCD
SWTEST   TM    SWITCH,X'80'
         BO    OUTSW1
         L     15,MODADDR2
         LR    1,RINF
         LA    1,ADCARD
         BALR  14,15
         CH    15,=H'4'
         BE    LOOP
         CH    15,=H'8'
         BE    STOPROC
         CH    15,=H'0'
         BE    OUTSW1
         BNE   INVRETCD
OUTSW1   BC    15,NOTOUT
         LA    1,ADCARD
         CALL  OUTPUT,,,ID=2
         CH    15,=H'0'
         BE    CONT2
         CH    15,=H'4'
         BE    STOPROC
         CH    15,=H'8'
         BE    OUTERR
         CH    15,=H'12'
         BE    MESPRINT
         B     INVRETCD
CONT2    AP    OUT,=P'1'
OUTSW2   BC    0,STOPTEST               SET TO BC  15,-  IF
*                                       OUTPUT=OUFILE SPECIFIED
         SPACE 2
NOTOUT   LH    6,RECORD+4
*
FIXORUND AR    R6,R6                    R6 = TWICE RECORD LENGTH
         AP    PRINTED,=P'1'
       EJECT
LOOP1  LA    8,PRINAR+1
       LA    9,8
       LA    10,WORKAR
       ST    6,LENGTH
       UNPK  0(15,10),0(8,7)
       UNPK  14(15,10),7(8,7)
       UNPK  28(15,10),14(8,7)
       UNPK  42(15,10),21(8,7)
      UNPK  56(9,10),28(5,7)
*
LOOP2  LA    5,8
       MVC   0(8,8),0(10)
       LA    10,8(10)
*
LOOP3  CLI   0(8),X'FA'
       BL    *+10
       TR    0(1,8),TABLE1
       LA    8,1(8)
       BCT   6,ON1
         EX    5,BLANK
       B     EOREC
*
ON1    BCT   5,LOOP3
       BCT   9,ON2
       B     EOXLIN
*
ON2      LA    8,2(8)
         B     LOOP2
*
EOXLIN   LA    8,PRINAR+88
       MVC   0(32,8),0(7)
       TR    0(32,8),TABLE2
       LA    7,32(7)
         MVI   PRINAR+87,C'*'
         MVI   PRINAR+120,C'*'
         BAL   RBAL,PUTLINE
         B     LOOP1
*
EOREC    LA    8,PRINAR+88
         L     R5,LENGTH
         SRL   R5,1                     DIVIDE BY 2
         BCTR  R5,0                     LESS 1 FOR EXECUTE
         EX    R5,MVC
         EX    R5,TR
*
         MVI   PRINAR+87,C'*'
         MVI   PRINAR+120,C'*'
*
         MVI   PRINAR,X'19'
         BAL   RBAL,PUTLINE
         SPACE 3
*                             STOPAFT TEST
STOPTEST SP    STOP,=P'1'
         BP    LOOP
         B     FILESTOP
         EJECT
FLDLUP   LR    6,5       R5=R6=A(SENIOR BYTE OF FIELD)
         CLI   0(5),C' '
         BE    INVNUM
*
FLD1     CLI   0(5),C'0'
         BL    INVNUM
         CLI   0(5),C'9'
         BH    INVNUM
         LA    5,1(5)
         CLI   0(5),C' '      TEST FOR END OF FIELD
         BE    OUTLOOP
         CLI   0(5),X'6B'
         BNE   FLD1
*
OUTLOOP  LR    7,5
*
         SR    7,6
         BCTR  7,0            R7=FIELD LENGTH - 1
         C     7,=F'15'
         BH    INVNUM
         EX    7,PACKIT
         BR    4
INERR    B     STOPROC
OUTERR   B     STOPROC
MESPRINT B     LOOP
*
     SPACE  3
DUP      MVC   PRINAR+90(35),=C'DUPLICATE/ILLEGAL KEYWORD - IGNORED'
         B     GETCARD
INVNUM   MVC   PRINAR+90(24),=C'NUMBER INVALID - IGNORED'
         B     GETCARD
PACKIT   PACK  DWORD,0(0,6)
       EJECT
FILESTOP MVI   FILESW+1,X'F0'
*
END      SP    LINES,LINES
         BAL   RBAL,PUTLINE
FILESW   BC    0,*+14
         MVC   PRINAR+10(11),=C'END OF FILE'
         B     *+30
         MVC   PRINAR+10(15),=C'STOPAFT REACHED'
         B    *+20
STOPROC  MVC   PRINAR+10(38),=C'Z0600C  Z06 TERMINATED BY EXIT ROUTINE'
         B     *+10
INVRETCD MVC   PRINAR+10(45),=C'Z0600D  INVALID RETURN CODE FROM EXIT R*
               OUTINE'
CONTROLS MVI   PRINAR,X'19'
         BAL   RBAL,PUTLINE
*
         MVC   PRINAR+10(12),=C'RECORDS READ'
         MVC   PRINAR+45(10),PAT4
         ED    PRINAR+45(10),IN+4
         BAL   RBAL,PUTLINE
         MVC   PRINAR+10(15),=C'RECORDS PRINTED'
         MVC   PRINAR+45(10),PAT4
         ED    PRINAR+45(10),PRINTED
         BAL   RBAL,PUTLINE
         MVC   PRINAR+10(14),=C'RECORDS OUTPUT'
         MVC   PRINAR+45(10),PAT4
         ED    PRINAR+45(10),OUT
         BAL   RBAL,PUTLINE
*
CLOSE    CLOSE (CARD,,PRINT,,SYSLIB)
         L     13,4(13)
         LM    14,12,12(13)
         SR    15,15                    RETURN ZERO CONDITION CODE
         BR    14
     SPACE  3
MVC    MVC   0(0,8),0(7)
TR     TR    0(0,8),TABLE2
BLANK    MVC   0(0,8),=CL8' '
*
       EJECT
PUTLINE  EQU   *
         CLI   PRINAR,X'09'
         BE    MINUS1
         CLI   PRINAR,X'11'
         BE    MINUS2
         CLI   PRINAR,X'19'
         BNE   MINUS1
         SP    LINES,=P'3'
         B     TSTLINES
*
MINUS2   SP    LINES,=P'1'
*
MINUS1   SP    LINES,=P'1'
*                                       COUNT LINES BY DECREMENTING,
TSTLINES BP    LINE                     WHEN ZERO, SKIP TO NEW PAGE.
         SPACE
         MVI   PRINAR,X'89'
         L     1,ADPRINT
         LA    0,PRINAR
         L     15,48(1)
         BALR  14,15                    LINE AND SKIP TO NEW PAGE
         AP    PAGES,=P'1'
         MVC   PAGENO,=X'40202020'
         ED    PAGENO,PAGES+1
         ZAP   LINES,PERPAGE            RESET LINE COUNTER
         LA    0,TOPHED-1
         B     LINE+4
         SPACE
PERPAGE  DC    P'56'                    NO OF LINES-1 PER PAGE
         SPACE
         SPACE 3
LINE     LA    0,PRINAR
         L     1,ADPRINT
         L     15,48(1)
         BALR  14,15
         MVI   PRINAR,X'09'
         MVI   PRINAR+1,C' '
         MVC   PRINAR+2(131),PRINAR+1
         BR    RBAL
         SPACE 3
         DC    X'19'
TOPHED   DC    C'Z06. SELECTIVE PRINT/COPY ROUTINE.'
         DC    C' TECHNICAL SUPPORT.'
         DC    C' V5.0  JULY 72'
         DC    CL10' '
TIME     DC    X'4021204B2020'          TIME AS HH.MM
         DC    C' ON '
DATE     DC    CL8' ',X'2021'
         DC    CL27' '
         DC    C'PAGE'
PAGENO   DC    C' NNN'
         SPACE 6
NOPRINT  ABEND 996
       EJECT
LENGTH DC    F'0'
TABLE1   EQU   *-240
       DC    C'0123456789ABCDEF'
*
TABLE2 DC    64C'.'
       DC    C' '
       DC    128C'.'
       DC    C'ABCDEFGHI'
       DC    7C'.'
        DC    C'JKLMNOPQR'
       DC    8C'.'
       DC    C'STUVWXYZ'
       DC    6C'.'
       DC    C'0123456789'
       DC    6C'.'
*
WORKAR DC    CL65' '
PRINAR DC    CL133' '
SWITCH   DC    X'00'
MODADDR1 DS    F
MODADDR2 DS    F
         SPACE 3
WORD     DC    F'0'
DWORD    DC    D'0'
IN       DC    PL8'0'         NUMBER OF RECORDS READ
START    DC    PL8'0'         STARTAT CONTROL
STOP     DC    PL8'30'        STOPAFT CONTROL
ONE      DC    PL8'0'
ONEOF    DC    PL8'1'         ONEIN CONTROL
OUT      DC    PL4'0'
PRINTED  DC    PL4'0'
*
LINES    DC    PL2'0'
PAGES  DC    PL3'0'
PAT4     DC    X'40206B2020206B202120'
         SPACE 3
MONTHTAB DC    PL2'0',C'JAN'
         DC    P'031',C'FEB'
         DC    P'060',C'MAR'
         DC    P'091',C'APR'
         DC    P'121',C'MAY'
         DC    P'152',C'JUN'
         DC    P'182',C'JUL'
         DC    P'213',C'AUG'
         DC    P'244',C'SEP'
         DC    P'274',C'OCT'
         DC    P'305',C'NOV'
         DC    P'335',C'DEC'
         DC    P'999'
         SPACE 3
DAY      DC    X'40202021'
YEAR     DC    PL3'0'
MODADDR  DS    F
TYPE     DC    C'C'
PACKAR   DS    D
BYTE     DS    X
IFFIELD  DC    CL30' '
TABLE3   EQU   *-193   FOR TRANSLATING HEX VALUES
         DC    X'FAFBFCFDFEFF'
         DC    41X'00'
         DC    C'0123456789'
LIST     DC    H'1',H'58'         * LIST
MEMBER   DC    CL8' '             * FOR
         DS    CL50               * BLDL
         SPACE 6
*************************   M E S S A G E S   *************************
         SPACE 3
MSG00A   DC    C'Z0600A  OUTPUT=COPY SPECIFIED, BUT CANNOT OPEN FILE'
MSG00B   DC    C'Z0600B  CANNOT OPEN SYSUT1 - DD CARD MAY BE MISSING'
         SPACE 3
***********************************************************************
       EJECT
         LTORG
         END
