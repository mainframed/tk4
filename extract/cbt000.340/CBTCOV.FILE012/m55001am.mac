./ ADD NAME=BEQU
         MACRO
         BEQU
         GBLA  &IEZBITS
         AIF   (&IEZBITS NE 0).END
&IEZBITS SETA  1
         SPACE 2
***********************************************************************
*                                                                     *
*              MISCELLANEOUS BIT EQUATES                              *
*                                                                     *
***********************************************************************
         SPACE 2
BIT0     EQU   128
BIT1     EQU   64
BIT2     EQU   32
BIT3     EQU   16
BIT4     EQU   8
BIT5     EQU   4
BIT6     EQU   2
BIT7     EQU   1
LOVAL    EQU   0
HIVAL    EQU   255
         SPACE 2
.END     MEND
./ ADD NAME=CLOSEF
         MACRO
&NAME    CLOSEF &DCB,&TYPE=,&LIST=NO
         LCLA  &N,&C
         PUSH  PRINT
         AIF   ('&LIST' EQ 'YES').X
         PRINT OFF
.X       ANOP
&N       SETA  N'&DCB
         AIF   (T'&DCB EQ 'O').ERR1
         AIF   (T'&TYPE EQ 'O').STD
&NAME    CLOSE &DCB,TYPE=&TYPE
         AGO   .FREE
.STD     ANOP
&NAME    CLOSE &DCB
.FREE    AIF   ('&DCB'(1,1) EQ '(').MULTI
         FREEPOOL &DCB
         POP   PRINT
         MEXIT
.MULTI   ANOP
&C       SETA  1
.LOOP    FREEPOOL &DCB(&C)
&C       SETA  &C+2
         AIF   (&C LE &N).LOOP
         POP   PRINT
         MEXIT
.ERR1    IHBERMAC 01
         MEND
./ ADD NAME=ENTER
         MACRO
&NAME    ENTER &B1,&B2,&ENT=,&RENT=NO,&EXTENT=,&XTRN=,&BIT=NO,&EQU=NO, X
               &SP=0,&SA=72,&EC=YES
         GBLA  &#SA,&#SP
         GBLB  &#RENT
         GBLC  &SAVE
         LCLA  &R1,&R2,&K,&Q,&A
         LCLB  &B,&SW(2)
         LCLC  &N
         AIF   ('&SA' NE 'NO').ENT1
&SW(1)   SETB  1
.ENT1    AIF   ('&EC' EQ 'YES').ENT2
&SW(2)   SETB  1
.ENT2    AIF   (&SW(1)).ENT3
&#SA     SETA  &SA
&SAVE    SETC  'SAVE&SYSNDX'
.ENT3    ANOP
&N       SETC  '$PRIVATE'
&R1      SETA  13
&R2      SETA  13
         AIF   (T'&NAME EQ 'O').A1
&K       SETA  K'&NAME
&N       SETC  '&NAME'
.A1      AIF   (T'&B2 EQ 'O').A2
&R2      SETA  &B2
.A2      AIF   (T'&B1 EQ 'O').A3
&R1      SETA  &B1
         AGO   .A4
.A3      ANOP
.A4      AIF   (&R1 LT 2 OR &R1 GT 13).ERR2
         AIF   (&R2 LT 2 OR &R2 GT 13).ERR2
&N       CSECT
         AIF   ('&EQU' EQ 'NO').S
         REQU
.S       AIF   ('&BIT' EQ 'NO').T
         BEQU
.T       ANOP
         AIF   (T'&ENT EQ 'O').Q1
&Q       SETA  N'&ENT
         AIF   ('&ENT'(1,1) NE '(').SPEC
&A       SETA  1
.Q2      ANOP
&ENT(&A) EQU   *
         ENTRY &ENT(&A)
&A       SETA  &A+1
         AIF   (&A GT &Q).Q1
         AGO   .Q2
.SPEC    ANOP
&ENT     EQU   *
         ENTRY &ENT
.Q1      AIF   (T'&EXTENT EQ 'O').Q3
&Q       SETA  N'&EXTENT
         AIF   ('&EXTENT'(1,1) NE '(').SPEC2
&A       SETA  1
.Q4      ANOP
         ENTRY &EXTENT(&A)
&A       SETA  &A+1
         AIF   (&A GT &Q).Q3
         AGO   .Q4
.SPEC2   ENTRY &EXTENT
.Q3      AIF   (T'&XTRN EQ 'O').Q5
&Q       SETA  N'&XTRN
         AIF   ('&XTRN'(1,1) NE '(').SPEC3
&A       SETA  1
.Q6      ANOP
         EXTRN &XTRN(&A)
&A       SETA  &A+1
         AIF   (&A GT &Q).Q5
         AGO   .Q6
.SPEC3   EXTRN &XTRN
.Q5      ANOP
         USING *,15
         STM   14,12,12(13)        SAVE REGS
         AIF   ('&RENT' EQ 'YES').RTYPE
         AIF   (&SW(1)).ENT6
         LR    14,13               SAVE HSA ADDRESS
.ENT6    AIF   (&SW(2)).X2
         B     B&SYSNDX            BRANCH ROUND CONSTANTS
         DC    H'&K'
         AIF   (&K EQ 0).X1
         DC    CL8'&N'             EYECATCHER
         AGO   .X2
.X1      DC    CL8'NONAME'         PC EYECATCHER
.X2      ANOP
         AIF   (NOT &SW(1)).ENT7
         AIF   (&SW(2)).ENT4
B&SYSNDX DS    0H
         AGO   .ENT4
.ENT7    ANOP
B&SYSNDX BAL   13,A&SYSNDX         BRANCH AROUND SAVE AREA
         AIF   (&R1 NE 13).A5
         AIF   (T'&B2 NE 'O').Z1
         USING *,13
         AGO   .Z2
.Z1      USING *,13,&R2
&B       SETB  1
.Z2      DROP  15
.A5      ANOP
&SAVE    DS    ((&#SA+3)/4)F       SAVE AREA
         CNOP  0,4
A&SYSNDX EQU   *
.ENT4    AIF   (NOT &SW(1)).ENT5
         AIF   (T'&B1 EQ 'O').RT8
         AIF   (&R1 EQ 13).ERR5
.ENT5    ANOP
         AIF   (&R1 EQ 13).A6
         BALR  &R1,0               LOAD BASE REGISTER
         AIF   (T'&B2 EQ 'O').A7
         USING *,&R1,&R2
         DROP  15
         AGO   .A8
.A7      ANOP
         USING *,&R1
         DROP  15
         AGO   .A6
.A8      LA    &R2,2048(0,&R1)     LOAD SECOND
         LA    &R2,2048(0,&R2)        BASE REGISTER
&B       SETB  0
.A6      AIF   (&B).A8
         AIF   (&SW(1)).RT8
         AIF   (&#SA LT 8).ERR6
         ST    13,8(0,14)          FORWARD POINTER
         ST    14,4(0,13)          BACKWARD POINTER
         MEXIT
.RTYPE   ANOP
&#RENT   SETB  1
&#SP     SETA  &SP
         AIF   (T'&B1 EQ 'O').ERR3
         AIF   ('&B1' EQ '13').ERR4
.RT9     AIF   ('&SA' EQ 'NO').RT1
&#SA     SETA  &SA
         LR    14,13               SAVE HSA ADDRESS
         GETMAIN  R,LV=&SA,SP=&SP  GET SAVE AREA STORAGE
         LR    13,1                LOAD SAVE AREA ADDRESS
         ST    13,8(0,14)          FORWARD POINTER
         ST    14,4(0,13)          BACKWARD POINTER
         LM    14,1,12(14)         RESTORE LINKAGE REGISTERS
.RT1     B     R&SYSNDX            BRANCH ROUND CONSTANTS
         DC    H'&K'
         AIF   (&K EQ 0).RT2
         DC    CL8'&N'             EYECATCHER
         AGO   .RT3
.RT2     DC    CL8'NONAMER'        PC EYECATCHER
.RT3     AIF   (T'&B1 EQ 'O').RT4
         AIF   ('&B1' EQ '13').RT10
R&SYSNDX BALR  &B1,0
         AIF   (T'&B2 EQ 'O').RT5
         USING *,&B1,&B2
         LA    &B2,2048(0,&B1)     LOAD SECOND
         LA    &B2,2048(0,&B2)       BASE REGISTER
         AGO   .RT7
.RT5     USING *,&B1
.RT7     DROP  15
         AGO   .RT6
.RT10    AIF   (T'&B2 EQ 'O').RT4
         DROP  15
         USING &N,15,&B2
R&SYSNDX LA    &B2,2048(0,15)
         LA    &B2,2048(0,&B2)
         AGO   .RT6
.RT4     ANOP
R&SYSNDX EQU   *
.RT6     AIF   ('&SA' EQ 'NO').RT8
.RT8     MEXIT
.ERR2    MNOTE 12,'INVALID BASE REGISTER ASSIGNMENT'
         MEXIT
.ERR3    MNOTE *,'NO BASE REGISTER ASSIGNED - 15 ASSUMED'
         AGO   .RT9
.ERR4    MNOTE *,'REG 13 INVALID AS BASE - REG 15 ASSUMED'
         AGO   .RT9
.ERR5    MNOTE *,'REG 13 INVALID AS BASE - REG 15 ASSUMED'
         AGO   .RT8
.ERR6    MNOTE 8,'SAVE AREA IS TOO SMALL FOR POINTERS'
         AGO   .RT8
         MEND
./ ADD NAME=FIX
         MACRO
&NAME    FIX   &FWD,&FP=YES
         GBLB  &FXA(2)
         GBLC  &FXN(2)
         AIF   ('&FWD'(1,1) EQ '(').REG
         AIF   (T'&FWD NE 'E' AND T'&FWD NE 'F').ERR
&NAME    LA    1,&FWD
         AGO   .A
.REG     AIF   ('&FWD' EQ '(1)').NAMIT
&NAME    LR    1,&FWD(1)
         AGO   .A
.NAMIT   ANOP
&NAME    CNOP  0,4
.A       AIF   ('&FP' NE 'NO').C
         AIF   (&FXA(1)).SEC
&FXN(1)  SETC  'X&SYSNDX.X'
         AGO   .SEC
.C       AIF   ('&FP' NE 'YES').ERR2
         AIF   (&FXA(2)).SEC2
&FXN(2)  SETC  'X&SYSNDX.X2'
         AGO   .SEC2
.SEC     BAL   14,&FXN(1)
         AIF   (&FXA(1)).END
         AGO   .B
.SEC2    BAL   14,&FXN(2)
         AIF   (&FXA(2)).END
.B       B     R&SYSNDX
         AIF   ('&FP' EQ 'YES').FPT#X
&FXA(1)  SETB  1
X&SYSNDX.X STM 15,1,16(13)
         OI    B&SYSNDX+1,X'F0'
         SR    0,0
         L     1,0(0,1)
         LTR   1,1
         BNM   *+8
         NI    B&SYSNDX+1,X'0F'
         SLDL  0,8
B&SYSNDX B     *+12
         SH    0,=H'128'
         NI    S&SYSNDX+1,X'0F'
         SH    0,=H'64'
         BM    Z&SYSNDX
         SLL   0,2
         LR    15,0
         SR    0,0
         SLDA  0,0(15)
         LTR   1,1
         BNM   *+8
         AH    0,=H'1'
O&SYSNDX L     1,24(0,13)
S&SYSNDX B     *+10
         OI    *-3,X'F0'
         LCR   0,0
         ST    0,0(0,1)
         LM    15,0,16(13)
         BR    14
Z&SYSNDX SR    0,0
         B     O&SYSNDX
         AGO   .OUT
.FPT#X   ANOP
&FXA(2)  SETB  1
X&SYSNDX.X2 ST 15,16(0,13)
         SDR   0,0
         AE    0,0(0,1)
         AW    0,X&SYSNDX.C
         STD   0,X&SYSNDX.D
         L     15,X&SYSNDX.D+4
         BC    11,A&SYSNDX
         LCR   15,15
A&SYSNDX ST    15,0(0,1)
         L     15,16(0,13)
         BR    14
X&SYSNDX.D DC  D'0'
X&SYSNDX.C DC  X'4E00000000000000'
.OUT     ANOP
R&SYSNDX CNOP  0,4
.END     MEXIT
.ERR     MNOTE 8,'NUMBER TO BE FIXED IS NOT A FULLWORD'
         MEXIT
.ERR2    MNOTE 8,'FP=&FP IS AN INVALID OPERAND'
         MEND
./ ADD NAME=FLOAT
         MACRO
&NAME    FLOAT &FWD,&FP=YES
         GBLB  &#A#(2)
         GBLC  &N(2)
         AIF   ('&FWD'(1,1) EQ '(').REG
         AIF   (T'&FWD NE 'F' AND T'&FWD NE 'E').ERR1
&NAME    LA    1,&FWD
         AGO   .A
.REG     AIF   ('&FWD' EQ '(1)').NAMIT
&NAME    LR    1,&FWD(1)
         AGO   .A
.NAMIT   ANOP
&NAME    CNOP  0,4
.A       AIF   ('&FP' NE 'NO').C
         AIF   (&#A#(1)).SEC
&N(1)    SETC  'F&SYSNDX.F'
         AGO   .SEC
.C       AIF   ('&FP' NE 'YES').ERR2
         AIF   (&#A#(2)).SEC2
&N(2)    SETC  'F&SYSNDX.F2'
         AGO   .SEC2
.SEC     BAL   14,&N(1)
         AIF   (&#A#(1)).END
         AGO   .B
.SEC2    BAL   14,&N(2)
         AIF   (&#A#(2)).END
.B       B     R&SYSNDX
         AIF   ('&FP' EQ 'YES').FPT#F
&#A#(1)  SETB  1
F&SYSNDX.F MVI F&SYSNDX.A+3,0
         STM   15,1,16(13)
         L     0,0(0,1)
         OI    F&SYSNDX.N+1,X'F0'
         LTR   0,0
         BNM   *+10
         LCR   0,0
         NI    F&SYSNDX.N+1,X'0F'
         SR    1,1
         SRDL  0,8
         STM   0,1,F&SYSNDX.D
         LA    15,4
         LA    1,F&SYSNDX.D+1(0)
F&SYSNDX.B TM  0(1),X'F0'
         BNZ   F&SYSNDX.C(0)
         TM    0(1),X'0F'
         BNZ   F&SYSNDX.E(0)
         LA    1,1(0,1)
         BCT   15,F&SYSNDX.B(0)
F&SYSNDX.G L   1,24(0,13)
         ST    15,0(0,1)
F&SYSNDX.N B   *+8
         OI    0(1),X'80'
         LM    15,0,16(13)
         BR    14
F&SYSNDX.E MVI F&SYSNDX.A+3,4
F&SYSNDX.C SH  15,=H'4'
         LCR   15,15
         SLL   15,3
F&SYSNDX.A LA  15,0(0,15)
         L     1,F&SYSNDX.D+4(0)
         SLDL  0,0(15)
         STM   0,1,F&SYSNDX.D
         SRL   15,2
         LA    0,72
         SLR   0,15
         STC   0,F&SYSNDX.D(0)
         L     15,F&SYSNDX.D(0)
         B     F&SYSNDX.G(0)
         AGO   .OUT
.FPT#F   ANOP
&#A#(2)  SETB  1
F&SYSNDX.F2 STM 14,15,12(13)
         L     14,0(0,1)
         LPR   15,14
         N     14,F&SYSNDX.Y
         STM   14,15,F&SYSNDX.D
         OI    F&SYSNDX.D,X'4E'
         SDR   0,0
         AD    0,F&SYSNDX.D
         STE   0,0(0,1)
         LM    14,15,12(13)
         BR    14
         CNOP  0,4
F&SYSNDX.Y DC  X'80000000'
.OUT     ANOP
F&SYSNDX.D DC  D'0'
R&SYSNDX CNOP  0,4
.END     MEXIT
.ERR1    MNOTE 8,'NUMBER TO BE FLOATED IS NOT A FULLWORD'
         MEXIT
.ERR2    MNOTE 8,'FP=&FP IS AN INVALID OPERAND'
         MEND
./ ADD NAME=GAIN
         MACRO
&NP      GAIN   &TYPE,&PADD=
&NP      LA     0,&TYPE.REQ
         GETMAIN R,LV=(0)
         LA     1,0(,1)
         ST     1,&TYPE
         L      &TYPE.REG,&TYPE
         XC     &TYPE.(&TYPE.REQ),&TYPE
         AIF    (T'&PADD EQ 'O').DONE
         MVI    &TYPE+4,&PADD
         MVC    &TYPE+5(&TYPE.REQ-5),&TYPE+4
.DONE    MEND
./ ADD NAME=GOTO
         MACRO
&EPNAME  GOTO  &ENTRY,&PARM,&VL,&LOAD=YES
         GBLA  &A
         GBLC  &GN(16)
         LCLA  &I,&K,&N
         LCLB  &ADNAME
         LCLC  &J
&ADNAME  SETB  (T'&PARM EQ 'O')
         AIF   (T'&EPNAME EQ 'O').NAMED
&EPNAME  EQU   *
.NAMED   AIF   (T'&ENTRY EQ 'O').R15SET
         AIF   ('&ENTRY'(1,1) EQ '(').RENTRY
         AIF   ('&LOAD' EQ 'NO').NOLD
&I       SETA  1
.SUBL    AIF   (&I GT &A).ASUB
         AIF   ('&GN(&I)' EQ '&ENTRY').SKIPWX
&I       SETA  &I+1
         AGO   .SUBL
.ASUB    ANOP
&GN(&I)  SETC  '&ENTRY'
&A       SETA  &I
         WXTRN &ENTRY
.SKIPWX  L     15,=V(&ENTRY)
         LTR   15,15
         BNZ   #&SYSNDX            ROUTINE AVAILABLE
         STM   14,1,12(13)
         LOAD  EP=&ENTRY
         LA    15,=V(&ENTRY)
         ST    0,0(0,15)           ENTRY POINT ADDRESS
         ST    0,16(0,13)
         LM    14,1,12(13)
#&SYSNDX EQU   *
.R15SET  AIF   (&ADNAME).NOPARA
         AIF   ('&PARM'(1,1) NE '(').SETR1
&N       SETA  N'&PARM
&K       SETA  0
&I       SETA  1
         CNOP  2,4
.TNEXT   ANOP
&J       SETC  '&PARM(&I)'
         AIF   ('&J'(1,1) NE '(').INC
&K       SETA  &K+1
.INC     ANOP
&I       SETA  &I+1
         AIF   (&I LE &N).TNEXT
         AIF   (&K EQ 0).L14
&I       SETA  1
&K       SETA  4*&K+6
.TNP     ANOP
&J       SETC  '&PARM(&I)'
         AIF   ('&J'(1,1) NE '(').NST
         STCM  &PARM(&I),7,*+&K+1+4*(&I-1)
&K       SETA  &K-4
.NST     ANOP
&I       SETA  &I+1
         AIF   (&I LE &N).TNP
.L14     LA    14,*+6+4*&N
         BALR  1,15
&I       SETA  1
.TLP     AIF   (&I GE &N).TVL
.LONGAD  DC    A(&PARM(&I))
&I       SETA  &I+1
         AGO   .TLP
.RENTRY  AIF   ('&ENTRY' EQ '(15)').R15SET
         LR    15,&ENTRY(1)
         AGO   .R15SET
.TVL     AIF   (&I GT &N).ADSET
         AIF   (T'&VL EQ 'O').LONGAD
         DC    X'80',AL3(&PARM(&N))
.ADSET   AGO   .END
.SETR1   LA    1,&PARM
         AIF   (T'&VL NE 'N').NOPARA
         OI    4*&VL-4(1),X'80'
         BALR  14,15
         LA    14,&PARM
         NI    4*&VL-4(14),X'7F'
         AGO   .END
.NOLD    L     15,=V(&ENTRY)
         AGO   .R15SET
.NOPARA  BALR  14,15
.END     MEND
./ ADD NAME=INIT
         MACRO
&NAME    INIT  &AREA,&LV=8,&FILL=00
         LCLA  &L
         AIF   (T'&AREA EQ 'O').ERR1
         AIF   ('&LV'(1,1) EQ '(').A
&L       SETA  &LV
         AIF   (&L LT 513).MVC
.A       AIF   ('&AREA'(1,1) EQ '(').B
&NAME    LA    0,&AREA             LOAD AREA ADDRESS
         AGO   .C
.B       AIF   ('&AREA' EQ '(0)').NAMEIT
&NAME    LR    0,&AREA(1)          LOAD AREA ADDRESS
         AGO   .C
.NAMEIT  ANOP
&NAME    DS    0H
.C       LR    14,0                LOAD AREA ADDRESS
         AIF   ('&LV'(1,1) EQ '(').D
         AIF   (&L LT 4096).E
         L     1,=F'&L'            LOAD LENGTH
         AGO   .F
.D       AIF   ('&LV' EQ '(1)').F
         LR    1,&LV(1)            LOAD LENGTH
         AGO   .F
.E       LA    1,&L.(0,0)          LOAD LENGTH
.F       AIF   ('&FILL' EQ '00').X
         IC    15,=X'&FILL'        LOAD PADDING CHARACTER
         SLL   15,24               SHIFT TO HIGH ORDER BYTE
         AGO   .Y
.X       SR    15,15               SET PADDING CHAR. TO X'00'
.Y       MVCL  0,14                INITIALISE STORAGE
         MEXIT
.MVC     AIF   ('&FILL' EQ '00').XOR
         AIF   ('&AREA'(1,1) EQ '(').G
&NAME    MVI   &AREA,X'&FILL'      MOVE PADDING CHAR. TO FIRST BYTE
&L       SETA  &L-1
         AGO   .H
.G       ANOP
&NAME    MVI   0&AREA,X'&FILL'     MOVE PADDING CHAR. TO FIRST BYTE
&L       SETA  &L-1
.H       AIF   (&L GT 256).I
         AIF   ('&LV' EQ '1').END
         AIF   ('&AREA'(1,1) EQ '(').J
         MVC   &AREA+1(&L),&AREA   INITIALISE STORAGE
         MEXIT
.J       MVC   1(&L,&AREA(1)),0&AREA    INITIALISE STORAGE
         MEXIT
.I       AIF   ('&AREA'(1,1) EQ '(').K
         MVC   &AREA+1(256),&AREA  INITIALISE FIRST 256 BYTES
&L       SETA  &L-256
         MVC   &AREA+256(&L),&AREA+255  INITIALISE REST OF STORAGE
         MEXIT
.K       MVC   1(256,&AREA(1)),0&AREA   INITIALISE FIRST 256 BYTES
&L       SETA  &L-256
         MVC   256(&L,&AREA(1)),255&AREA    INITIALISE REST OF STORAGE
         MEXIT
.XOR     AIF   (&L LT 257).Z
         AIF   ('&AREA'(1,1) EQ '(').M
&NAME    XC    &AREA.(256),&AREA   CLEAR FIRST 256 BYTES
         AGO   .N
.M       ANOP
&NAME    XC    0(256,&AREA(1)),0&AREA   CLEAR FIRST 256 BYTES
.N       ANOP
&L       SETA  &L-256
         AIF   ('&AREA'(1,1) EQ '(').O
         XC    &AREA+256(&L),&AREA+256  CLEAR REST OF AREA
         MEXIT
.O       XC    256(&L,&AREA(1)),256&AREA  CLEAR REST OF AREA
         MEXIT
.Z       AIF   (&L EQ 1).P
         AIF   ('&AREA'(1,1) EQ '(').Q
&NAME    XC    &AREA.(&L),&AREA    CLEAR STORAGE
         MEXIT
.Q       ANOP
&NAME    XC    0(&L,&AREA(1)),0&AREA    CLEAR STORAGE
         MEXIT
.P       AIF   ('&AREA'(1,1) EQ '(').R
&NAME    MVI   &AREA,X'00'         MOVE LOW VALUES INTO STORAGE
         MEXIT
.R       ANOP
&NAME    MVI   0&AREA,X'00'        MOVE LOW VALUES INTO STORAGE
         MEXIT
.ERR1    MNOTE 8,'AREA ADDRESS NOT SPECIFIED'
.END     MEND
./ ADD NAME=LEAVE
         MACRO
&NAME    LEAVE &RC,&REG=(14,12)
         GBLA  &#SA,&#SP
         GBLB  &#RENT
         LCLA  &R
         AIF   ('&NAME' EQ '').GO
&NAME    DS    0H
.GO      AIF   (&#RENT).RTYPE
         AIF   (&#SA LT 8).RCCHK
         L     13,4(0,13)          LOAD HSA ADDRESS
.RCCHK   AIF   (T'&RC EQ 'O').RET
         AIF   ('&RC'(1,1) EQ '(').SPEC
&R       SETA  &RC
.RET     RETURN &REG,RC=&R
         MEXIT
.SPEC    RETURN &REG,RC=&RC
         MEXIT
.RTYPE   AIF   (&#SA EQ 0).RCCHK
         LR    1,13                SAVE AREA ADDRESS
         L     13,4(0,13)          LOAD HSA ADDRESS
         FREEMAIN R,LV=&#SA,SP=&#SP,A=(1)
         AGO   .RCCHK
         MEND
./ ADD NAME=LOSE
         MACRO
&NAME    LOSE  &A,&SWITCH=,&ALSO=
         GBLB  &JLOSE
         GBLA  &JLSW,&JLADD
         GBLC  &SWSTOR(10),&ALSTOR(30),&P,&TH(10)
         LCLB  &LOCAL
         LCLA  &NUM,&INDX,&LIMIT
&TH(1)   SETC  'ST'
&TH(2)   SETC  'ND'
&TH(3)   SETC  'RD'
&TH(4)   SETC  'TH'
&TH(5)   SETC  'TH'
&TH(6)   SETC  'TH'
&TH(7)   SETC  'TH'
&TH(8)   SETC  'TH'
&TH(9)   SETC  'TH'
&TH(10)  SETC  'TH'
         AIF   (&JLOSE).NORM
&JLOSE   SETB  (1)
&INDX  SETA  1
         AIF   (T'&SWITCH EQ 'O').TRYAL
&LOCAL   SETB  (1)
&P       SETC   'SWITCH'
&LIMIT   SETA  N'&SWITCH
         AIF   (&LIMIT GT 10).TOOBIG
&INDX    SETA  (&LIMIT/2)*2
         AIF   (&INDX NE &LIMIT).NOTX2
&JLSW    SETA  &INDX
&INDX    SETA  1
.L1    AIF  (K'&SWITCH(&INDX) GT 4).TOOLONG
&SWSTOR(&INDX) SETC '&SWITCH(&INDX)'
&INDX    SETA  &INDX+1
         AIF   (&INDX LE &LIMIT).L1
&INDX    SETA  1
.TRYAL   AIF   (T'&ALSO EQ 'O').NORMX
&LOCAL   SETB  (1)
&P       SETC  'ALSO'
&LIMIT   SETA  N'&ALSO
         AIF   (&LIMIT GT 30).TOOBIG
&INDX    SETA  (&LIMIT/2)*2
         AIF   (&INDX NE &LIMIT).NOTX2
&JLADD   SETA  &INDX
&INDX    SETA  1
.L2            AIF (K'&ALSO(&INDX) GT 4).TOOLONG
&ALSTOR(&INDX) SETC '&ALSO(&INDX)'
&INDX    SETA  &INDX+1
         AIF   (&INDX LE &LIMIT).L2
&INDX  SETA  1
.NORMX AIF (&JLSW LT &INDX).NORM
&P       SETC  '&SWSTOR(&INDX)'
&LIMIT   SETA  2
.TEST0   AIF   ('&P' EQ '&SWSTOR(&LIMIT)').WARN
.L4    ANOP
&LIMIT   SETA  &LIMIT+2
         AIF   (&JLSW GT &LIMIT).TEST0
&INDX  SETA  &INDX+2
         AGO   .NORMX
.WARN    MNOTE 4,'&INDX &TH(&INDX) OPERAND - &P - REPEATED AS SUBJECT IN
               N &LIMIT &TH(&LIMIT) OPERAND IN SWITCH KEYWORD'
&SWSTOR(&LIMIT-1) SETC ''
       AGO  .L4
.NORM    AIF   (T'&A EQ 'O').ERRORT
         AIF   (T'&NAME EQ 'O').NLAB
&NAME    DC    0H'0'
.NLAB ANOP
&LOCAL   SETB  0
&NUM     SETA  &SYSNDX
$$LS&NUM LA    &A.REG,&A
         LTR   1,&A.REG .              END CHAIN
         BZ    $$LE&NUM
         AIF   (&JLADD EQ 0).OUT1
&INDX    SETA  1
.TEST1   AIF   ('&ALSTOR(&INDX)' NE '&A').UP2
&P       SETC  '&ALSTOR(&INDX+1)'
         L     &P.REG,&A.&P
         LOSE  &P
.UP2     ANOP
&INDX    SETA  &INDX+2
         AIF   (&JLSW GT &INDX).L3
&INDX    SETA  &INDX+2
         AIF   (&INDX LT &JLADD).TEST1
            LR 1,&A.REG
.OUT1    AIF   (&JLSW EQ 0).OUT2
&INDX    SETA  1
.TEST2   AIF   ('&SWSTOR(&INDX)' EQ '&A').OUT3
&INDX    SETA  &INDX+2
         AIF   (&INDX LT &JLSW).TEST2
.OUT2    L     &A.REG,&A.LINK .        LOAD FOR NEXT BUFFER
         AGO   .FREE
.OUT3    ANOP
&P       SETC  '&SWSTOR(&INDX+1)'
&LOCAL   SETB  (1)
         L     &P.REG,&A.LINK .        SWITCH TO NEXT BUFFER CHAIN
.FREE    LA    0,&A.REQ
         FREEMAIN R,A=(1),LV=(0)
         AIF   (&LOCAL).OUT4
         B     $$LS&NUM
$$LE&NUM EQU   *
         MEXIT
.OUT4    LOSE  &P
$$LE&NUM EQU   *
         MEXIT
.TOOLONG MNOTE 4,'&INDX &TH(&INDX)&P OPERAND TOO MANY CHARACTERS'
         MEXIT
.TOOBIG  MNOTE 4,'&P HAS TOO MANY OPERANDS'
         MEXIT
.ERRORT  AIF   (&LOCAL).OUT
         MNOTE 4,'TYPE TO FREE MUST NOT BE OMMITTED'
.OUT     MEXIT
.NOTX2   MNOTE 4,'&P HAS NOT GOT A EVEN NO. OF OPS.'
         MEND
         LOSE  SWITCH=($SET,$MEM),ALSO=($MEM,$ADD,$INC,$ADD)
  LOSE $SET
 END
./ ADD NAME=MOVE
         MACRO
&NAME    MOVE  &T,&F,&LV
         LCLA  &L,&I
         AIF   (T'&T EQ 'O').ERR1
         AIF   (T'&F EQ 'O').ERR1
         AIF   (T'&LV EQ 'O').A
         AIF   ('&LV'(1,1) EQ '(').MVCL
&L       SETA  &LV
         AGO   .B
.A       ANOP
&L       SETA  L'&T
.B       AIF   (&L GT 512).MVCL
         AIF   (&L GT 256).MULTI
         AIF   ('&T'(1,1) EQ '(' AND '&F'(1,1) EQ '(').RRMVC
         AIF   ('&T'(1,1) EQ '(' AND '&F'(1,1) NE '(').R1MVC
         AIF   ('&T'(1,1) NE '(' AND '&F'(1,1) EQ '(').R2MVC
&NAME    MVC   &T.(&L),&F
         MEXIT
.RRMVC   ANOP
&NAME    MVC   0(&L,&T(1)),0&F
         MEXIT
.R1MVC   ANOP
&NAME    MVC   0(&L,&T(1)),&F
         MEXIT
.R2MVC   ANOP
&NAME    MVC   &T.(&L),0&F
         MEXIT
.MULTI   AIF   ('&T'(1,1) EQ '(' AND '&F'(1,1) EQ '(').RRMULTI
         AIF   ('&T'(1,1) EQ '(' AND '&F'(1,1) NE '(').R1MULTI
         AIF   ('&T'(1,1) NE '(' AND '&F'(1,1) EQ '(').R2MULTI
&NAME    MVC   &T.(256),&F
&L       SETA  &L-256
         MVC   &T+256(&L),&F+256
         MEXIT
.RRMULTI ANOP
&NAME    MVC   0(256,&T(1)),0&F
&L       SETA  &L-256
         MVC   256(&L,&T(1)),256&F
         MEXIT
.R1MULTI ANOP
&NAME    MVC   0(256,&T(1)),&F
&L       SETA  &L-256
         MVC   256(&L,&T(1)),&F+256
         MEXIT
.R2MULTI ANOP
&NAME    MVC   &T.(256),0&F
&L       SETA  &L-256
         MVC   &T+256(&L),256&F
         MEXIT
.MVCL    ANOP
&NAME    STM   14,1,12(13)
         AIF   ('&T' EQ '(0)').F
         AIF   ('&T'(1,1) EQ '(').R1
         LA    0,&T
         AGO   .F
.R1      LR    0,&T(1)
.F       AIF   ('&F' EQ '(14)').LEN
         AIF   ('&F'(1,1) EQ '(').R2
         LA    14,&F
         AGO   .LEN
.R2      LR    14,&F(1)
.LEN     AIF   (T'&LV EQ 'O').X1
         AIF   ('&LV' EQ '(1)').L1
         AIF   ('&LV' EQ '(15)').L2
         AIF   ('&LV'(1,1) EQ '(').R3
.X1      AIF   (&L GT 4096).DAMN
         LA    1,&L
         AGO   .L1
.DAMN    L     1,=F'&L'
         LA    1,0(0,1)
.L1      LR    15,1
         AGO   .MOOV
.L2      LR    1,15
         AGO   .MOOV
.R3      LR    1,&LV(1)
         AGO   .L1
.MOOV    MVCL  0,14
         LM    14,1,12(13)
         MEXIT
.ERR1    MNOTE 8,'REQUIRED PARAMETER(S) MISSING'
         MEND
./ ADD NAME=REQU
         MACRO
         REQU
         SPACE 2
***********************************************************************
*                                                                     *
*                                  REGISTER EQUATES                   *
*                                                                     *
***********************************************************************
         SPACE 2
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
RA       EQU   10
RB       EQU   11
RC       EQU   12
RD       EQU   13
RE       EQU   14
RF       EQU   15
         SPACE 2
         MEND
./ ADD NAME=SMFGET
         MACRO
&NAME    SMFGET &REC=(4),&DUP=LOSE,&TYPE=JOB,&DATES=,                  X
               &FIELDS=(31,4,PD,A,27,4,BI,A,19,8,CH,A,6,1,BI,A,43,1,BI,X
               A)
         GBLB  &SWSMF
         LCLA  &R(50),&B,&C
&C       SETA  N'&REC
&B       SETA  1
.R       ANOP
&R(&B)   SETA  &REC(&B)
&B       SETA  &B+1
         AIF   (&B GT &C).Q
         AGO   .R
.Q       ANOP
&NAME    LINK  EP=SORT,PARAM=P&SYSNDX,VL=1
         PUSH  USING
         AIF   (&SWSMF).SECOND
E15EXIT  CSECT
         USING *,15
         SAVE  (14,12),,*
         LR    14,13
         LR    11,1
         BAL   13,*+76
         USING *,13
         DROP  15
         DS    18F
         ST    14,4(13)
         ST    13,8(14)
E15SW    NOP   GET&SYSNDX
         OPEN  (IN&SYSNDX)
         OI    E15SW+1,X'F0'
&B       SETA  1
         AIF   (T'&DATES EQ 'O').GETIT
         L     2,=V(&DATES)
         PACK  F&SYSNDX.(4),0(5,2)
         PACK  L&SYSNDX.(4),5(5,2)
         OI    F&SYSNDX+3,X'0F'
         OI    L&SYSNDX+3,X'0F'
.GETIT   ANOP
GET&SYSNDX  GET   IN&SYSNDX
         AIF   (T'&DATES EQ 'O').B
         CLC   30(4,1),F&SYSNDX
         BL    GET&SYSNDX
         CLC   30(4,1),L&SYSNDX
         BH    GET&SYSNDX
.B       AIF   (&B GT &C).FIN
         CLI   5(1),X'&R(&B)'
         BE    GOT&SYSNDX
&B       SETA  &B+1
         AGO   .B
.FIN     ANOP
         B     GET&SYSNDX
GOT&SYSNDX  L     13,4(13)
         LM    2,12,28(13)
         LM    14,0,12(13)
         LA    15,12
         BR    14
E15EOF   L     13,4(13)
         RETURN (14,12),RC=8
         LTORG
IN&SYSNDX   DCB   DDNAME=SORTIN,DSORG=PS,MACRF=(GL),RECFM=VBS,         X
               EODAD=E15EOF,BFTEK=A
         AIF   (T'&DATES EQ 'O').NODC
F&SYSNDX DC    PL4'0'
L&SYSNDX DC    PL4'0'
.NODC    AIF   ('&DUP' EQ 'KEEP').SECOND
E35EXIT  CSECT
         USING *,15
         SAVE  (14,12),,*
         LR    14,13
         LR    11,1
         BAL   13,*+76
         USING *,13
         DROP  15
         DS    18F
         ST    14,4(13)
         ST    13,8(14)
         CLC   0(4,11),=F'0'
         BE    FIN&SYSNDX
E35SW    NOP   G&SYSNDX
         OPEN  (OUT&SYSNDX,(OUTPUT))
         OI    E35SW+1,X'F0'
G&SYSNDX L     2,0(11)
         CLI   FLG&SYSNDX,X'00'
         BE    C&SYSNDX
         CLC   BUF&SYSNDX.(16),0(2)
         BE    RET&SYSNDX
         PUT   OUT&SYSNDX,BUF&SYSNDX
C&SYSNDX TM    0(2),X'FF'
         MVI   FLG&SYSNDX,X'FF'
         BNZ   M&SYSNDX
         IC    3,1(2)
S&SYSNDX STC   3,*+5
         MVC   BUF&SYSNDX.(0),0(2)
RET&SYSNDX L   13,4(13)
         RETURN (14,12),RC=4
FIN&SYSNDX PUT OUT&SYSNDX,BUF&SYSNDX
         CLOSE (OUT&SYSNDX)
         L     13,4(13)
         RETURN (14,12),RC=8
M&SYSNDX SR    3,3
         ICM   3,B'0011',0(2)
N&SYSNDX MVC   BUF&SYSNDX.(256),0(2)
         SH    3,=H'256'
         LA    2,256(2)
         C     3,=F'256'
         BL    S&SYSNDX
         B     N&SYSNDX
         SAVE  (14,12),,*
         LR    14,13
         LR    11,1
         BAL   13,*+76
         USING *,13
         DROP  15
         DS    18F
         ST    14,4(13)
         ST    13,8(14)
         CLC   0(4,11),=F'0'
         BE    FIN&SYSNDX
E35SW    NOP   G&SYSNDX
         OPEN  (OUT&SYSNDX,(OUTPUT))
         OI    E35SW+1,X'F0'
G&SYSNDX L     2,0(11)
         CLI   FLG&SYSNDX,X'00'
         BE    C&SYSNDX
         CLC   BUF&SYSNDX.(16),0(2)
         BE    RET&SYSNDX
         PUT   OUT&SYSNDX,BUF&SYSNDX
C&SYSNDX TM    0(2),X'FF'
         MVI   FLG&SYSNDX,X'FF'
         BNZ   M&SYSNDX
         IC    3,1(2)
S&SYSNDX STC   3,*+5
         MVC   BUF&SYSNDX.(0),0(2)
RET&SYSNDX L   13,4(13)
         RETURN (14,12),RC=4
FIN&SYSNDX PUT OUT&SYSNDX,BUF&SYSNDX
         CLOSE (OUT&SYSNDX)
         L     13,4(13)
         RETURN (14,12),RC=8
M&SYSNDX SR    3,3
         ICM   3,B'0011',0(2)
N&SYSNDX MVC   BUF&SYSNDX.(256),0(2)
         SH    3,=H'256'
         LA    2,256(2)
         C     3,=F'256'
         BL    S&SYSNDX
         B     N&SYSNDX
         L     1,4(0,1)            OUR TCB ADDRESS
         L     1,12(0,1)           TIOT ADDRESS
         MEND
