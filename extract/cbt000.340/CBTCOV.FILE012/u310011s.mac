         TITLE 'FLASH MODULE 2'
         MACRO
&N       COMEIN &L,&H,&LINK=9
         GBLA  &COMEINR
         GBLB  &COMEINB,&COMEINC
         GBLC  &COMEINA,&COMEINL,&COMEINH,&COMEINK
&COMEINA SETC  'SAVE&SYSNDX'
&COMEINB SETB  (T'&L NE 'N')
&COMEINC SETB  (T'&H NE 'N')
&COMEINH SETC  'R&H'
&COMEINL SETC  'R&L'
&COMEINK SETC  'R&LINK'
&COMEINR SETA  1
&N       ST    &COMEINK,&COMEINA       SAVE LINK REGISTER.
         AIF   (&COMEINB AND &COMEINC).B
         AIF   (&COMEINC).A
&COMEINR SETA  2+&H-&L
      STM &COMEINL,&COMEINH,&COMEINA+4 SAVE REGISTERS.
         AGO   .B
.A       ANOP
&COMEINR SETA  2
         ST    &COMEINL,&COMEINA+4     SAVE REGISTER.
.B       ANOP
         MEND
         SPACE 3
         MACRO
&N       GOBACK
         GBLA  &COMEINR
         GBLB  &COMEINB,&COMEINC
         GBLC  &COMEINA,&COMEINL,&COMEINH,&COMEINK
&N       DS    0H .
         AIF   (&COMEINB AND &COMEINC).B
         AIF   (&COMEINC).A
       LM &COMEINL,&COMEINH,&COMEINA+4 RESTORE REGISTERS.
         AGO   .B
.A       L     &COMEINL,&COMEINA+4     RESTORE REGISTER.
.B       L     &COMEINK,&COMEINA       RESTORE LINK REGISTER.
         BR    &COMEINK                RETURN.
&COMEINA DC    &COMEINR.F'-1'          REGISTER SAVE-AREA.
         MEND
         EJECT
         REGS  ,
         SPACE 2
CTRLBAR  EQU   R11
EXTBAR   EQU   R10
TRKCYL   EQU   19                      TRACKS / CYLINDER.
         SPACE
         GBLC  &NOPTION                NUMBER OF ENTRIES IN CARD TABLE.
&NOPTION SETC  '40'
         SPACE
CONTROL  DSECT ,                       CONTROL TABLE ENTRY DSECT.
         USING *,CTRLBAR
CONFLAG  DS    0C                      CONTROL FLAGS.
CONSCR   EQU   X'40'                   SCRATCH TEMPORARY DATA SETS.
CONCAT   EQU   X'04'                   FLAG CATALOGUED DATA SETS.
CONEND   EQU   255                     END OF TABLE FLAG
CONUCBA  DS    A                       UCB ADDRESS.
CONUNITX DS    XL2                     UNIT IN HEX (0CUA)
CONVTOCA DS    XL3                     VTOC ADDRESS (TTR)
CONPACK  DS    CL6                     PACK IDENT..
CONMOD   DS    C                       MODULE LETTER.
         SPACE 2
EXTENT   DSECT ,
         USING *,EXTBAR
EXTTYPE  DS    X                       EXTENT TYPE INDICATOR.
EXTOFLOW EQU   2                       OVERFLOW AREA (IS DATA SET)
EXTINDEX EQU   4                       INDEX AREA (IS DATA SET)
         DS    X
EXTLOWER DS    XL4                     LOWER LIMIT OF EXTENT.
EXTUPPER DS    XL4                     UPPER LIMIT OF EXTENT.
EXTENDA  EQU   *                       END OF ENTRY.
EXTLEN   EQU   *-EXTENT                ENTRY LENGTH.
         SPACE 2
         PRINT NOGEN
         DCBD  ,
         PRINT GEN
         TITLE 'FLASH2 - E - LISTVTOC CONTROL'
FLASH202 CSECT ,
         ENTER SAVE=MAINSAVE
         USING MAINSAVE,R13
         USING IHADCB,R2
         CLI   CONFLAG,CONEND          IF END OF CONTROL TABLE NOT
         BNE   E100                    REACHED , THEN BRANCH.
         LA    R2,PRINT                R2 -> DCB.
         TM    DCBOFLGS,OPEN           IF PRINT DCB NOT OPEN,
         BZ    E999                    THEN EXIT.
         CLOSE (PRINT)
         B     E999                    EXIT.
E100     TS    E100+1                  IF NOT FIRST TIME THRU',
         BNZ   E200                    THEN BRANCH.
         OPEN  (PRINT,(OUTPUT))
         BAL   R9,U                    GO EDIT DATE.
E200     EQU   *
         MVC   VOLUME,CONPACK          VOL.SER.NO. TO HEADING.
         L     R1,CONUCBA              R1 -> UCB.
         MVC   UNIT,13(R1)             UNIT TO HEADING.
         MVI   MODULE,C' '
         MVC   MODULE+1(L'MODULE-1),MODULE
         CLI   CONMOD,C'?'             IF MODULE NOT IDENTIFIED,
         BE    E300                    THEN BRANCH.
         MVC   MODULE,=C'(MODULE X)'
         MVC   MODULE+8(1),CONMOD      MOVE MODULE TO HEADING.
E300     EQU   *
         MVI   LINENO,X'90'            FORCE HEADINGS.
         MVC   JVOLUME,CONPACK
         BAL   R9,F                    PROCESS FORMAT 4 DSCB.
         BAL   R9,G                    PROCESS FORMAT 1 DSCB'S.
         BAL   R9,H                    PROCESS FORMAT 5 DSCB'S.
         LA    R3,LINE
         BAL   R9,PRINTL               PRINT BLANK LINE.
         MVC   LFMTZERO,FREEFMT0       BASIC MESSAGE TO LINE.
         LH    R5,FT4DSREC             R5 = NO OF FREE FORMAT 0 DSCB'S.
         CVD   R5,DWD                  BINARY TO PACKED.
         ED    LFMTZERO+(PATTN-FREEFMT0)(L'PATTN),PL3
         BAL   R9,PRINTL               GO PRINT LINE.
E800     EQU   *
         MVC   LENDVTOC,=C'END OF VTOC LISTING.'
         LA    R3,LINE                 R3 -> LINE.
         BAL   R9,PRINTL               GO PRINT LINE.
E999     LEAVE ,
         TITLE 'FLASH2 - F - PROCESS FORMAT 4 DSCB'
F        COMEIN
         SRDL  R2,63                   CLEAR R2 AND RELEVANT BITS OF R3
         ICM   R3,3,CONVTOCA           VTOC RELATIVE TRACK INTO R3.
         D     R2,=A(TRKCYL)           DIVIDE BY TRACKS PER CYLINDER.
         MVC   FCCHHR+4(1),CONVTOCA+2  MOVE RECORD
         STCM  R2,3,FCCHHR+2                HEAD
         STCM  R3,3,FCCHHR                  & CYLINDER TO ADDRESS AREA.
         MVC   JCCHHR,FCCHHR           MOVE ADDRESS TO LINKAGE.
         BAL   R9,J                    OBTAIN FORMAT 4 DSCB.
         MVC   FT4HPCHR,DS4HPCHR       SAVE
         MVC   FT4DSREC,DS4DSREC        FIELDS
         MVC   FT4VTOCI,DS4VTOCI         FROM
         MVC   FT4DEVT,DS4DEVT            FORMAT 4 DSCB.
         MVC   LDSNAME(24),=C'VOLUME TABLE OF CONTENTS'
         MVC   EXTENTS,DS4VTOCE        EXTENT INFORMATION TO TABLE.
         MVC   EXTENTS+L'EXTENTS(4),FF AND DELIMIT.
         BAL   R9,K                    LIST EXTENT OF VTOC.
         GOBACK
         TITLE 'FLASH2 - G - PROCESS FORMAT 1 DSCB''S'
G        COMEIN 2
         MVC   GCCHHR,FCCHHR           GET ADDRESS OF VTOC.
G010     EQU   *
         MVC   LCCHHR,GCCHHR           MOVE DSCB ADDRESS TO LINKAGE.
         BAL   R9,L                    ADD 1 TO DSCB ADDRESS.
         MVC   GCCHHR,LCCHHR           PICK UP NEW ADDRESS.
         CLC   GCCHHR,FT4HPCHR         IF END OF FORMAT 1 DSCB'S,
         BH    G999                    THEN BRANCH.
         MVC   JCCHHR,GCCHHR           MOVE DSCB ADDRESS TO LINKAGE.
         BAL   R9,J                    OBTAIN NEXT SEQUENTIAL DSCB.
         CLI   DS1FMTID,C'1'           IF NOT FORMAT 1 DSCB,
         BNE   G010                    THEN BRANCH.
         MVC   DSORG,DS1DSORG          SAVE DSORG.
         BAL   R9,P                    CREATE BASIC PRINT LINE.
         LA    EXTBAR,EXTENTS          ADDRESS EXTENTS TABLE.
         LA    R2,DS1EXT1              R2 -> FIRST EXTENT DESCRIPTION.
         CLI   DS1EXT1,0               IF DATA SET HAS EXTENT(S),
         BNE   G100                    THEN BRANCH.
         MVC   LNOXTNT,=C'DATA SET HAS NO EXTENT'
         BAL   R9,M                    GO PRINT.
         B     G010                    LOOP.
G100     EQU   *
         C     R2,=A(DS1PTRDS)         IF FIRST 3 EXTENT DESCRIPTIONS
         BNL   G200                    PROCESSED , THEN BRANCH.
         NC    0(EXTLEN,R2),0(R2)      IF END OF DESCRIPTIONS REACHED,
         BZ    G200                    THEN BRANCH.
         MVC   EXTENT(EXTLEN),0(R2)    MOVE EXTENT DESCRIPTION TO TABLE
         LA    EXTBAR,EXTENDA          ADVANCE TO NEXT ENTRY.
         LA    R2,EXTLEN(R2)           ADVANCE TO NEXT DESCRIPTION.
         B     G100                    LOOP.
G200     EQU   *
         NC    DS1PTRDS,DS1PTRDS       IF NO DSCB CHAINED OFF THIS ONE,
         BZ    G300                    THEN BRANCH.
         MVC   JCCHHR,DS1PTRDS         DSCB ADDRESS TO LINKAGE.
         BAL   R9,J                    OBTAIN DSCB.
         CLI   DS1FMTID,C'3'           IF FORMAT 3 DSCB NOT FOUND,
         BNE   G200                    THEN BRANCH.
         LA    R2,DS3EXTNT             R2 -> FOURTH EXTENT DESCRIPTION.
G220     EQU   *
         C     R2,=A(DS3FMTID)         IF EXTENT DESCRIPTIONS 4 THRU' 7
         BNE   G230                    HAVE BEEN PROCESSED,
         LA    R2,DS3ADEXT             THEN ADV TO EIGHTH DESCRIPTION.
G230     EQU   *
         C     R2,=A(DS3ENDA)          IF ALL EXTENT DESCRIPTIONS
         BNL   G300                    PROCESSED , THEN BRANCH.
         NC    0(EXTLEN,R2),0(R2)      IF END OF DESCRIPTIONS REACHED,
         BZ    G300                    THEN BRANCH.
         MVC   EXTENT(EXTLEN),0(R2)    MOVE EXTENT DESCRIPTION TO TABLE
         LA    EXTBAR,EXTENDA          ADVANCE TO NEXT ENTRY.
         LA    R2,EXTLEN(R2)           ADVANCE TO NEXT DESCRIPTION.
         B     G220                    LOOP.
G300     EQU   *
         MVC   EXTENT(L'FF),FF         DELIMIT TABLE.
         BAL   R9,K                    LIST EXTENTS.
         B     G010                    LOOP.
G999     GOBACK ,
         TITLE 'FLASH2 - H - PROCESS FORMAT 5 DSCB''S'
H        COMEIN
         XC    HCYL(L'HCYL+L'HTRK),HCYL CLEAR FREE SPACE ACCUMULATORS.
         LA    R3,LINE
         BAL   R9,PRINTL               PRINT A BLANK LINE.
         MVC   LCCHHR,FCCHHR           FORMAT 4 DSCB ADDRESS TO LINKAGE
         BAL   R9,L                    ADD 1 TO GIVE ADDR FIRST FORMAT5
         MVC   DS1PTRDS,LCCHHR         FORCE FIRST FORMAT 5 DSCB READ.
H010     EQU   *
         NC    DS1PTRDS,DS1PTRDS       IF NO MORE DSCB'S CHAINED OFF,
         BZ    H800                    THEN BRANCH.
         MVC   JCCHHR,DS1PTRDS         DSCB ADDRESS TO LINKAGE.
         BAL R9,J                      OBTAIN DSCB.
         CLI   DS1FMTID,C'5'           IF FORMAT 5 DSCB FOUND,
         BE    H030                    THEN BRANCH.
         MVI   LINE,X'11'              SPACE 2 AFTER PRINT.
         MVC   LINE+1(40),=C'FORMAT 5 DSCB MISSING OR INCORRECT CHAIN'
         MVC   LINE+43(57),=C'*** WARNING - VTOC MAY NOT REFLECT TRUE ST
               TATE OF PACK ***'
         LA    R3,LINE
         BAL   R9,PRINTL               REPORT ERROR.
         B     E800                    TERMINATE.
H030     EQU   *
         LA    R5,DS5AVEXT             R5 -> FIRST AVAILABLE EXTENT.
H040     EQU   *
         C     R5,=A(DS5FMTID)         IF EXTENTS 1 TO 8 PROCESSED,
         BNE   H050
         LA    R5,DS5MAVET             THEN ADVANCE TO EXTENT 9.
H050     EQU   *
         C     R5,=A(DS1PTRDS)         IF ALL EXTENTS PROCESSED,
         BNL   H010                    THEN BRANCH.
         NC    0(L'DS5AVEXT,R5),0(R5)  IF END OF EXTENTS REACHED,
         BZ    H010                    THEN BRANCH.
         SRDL  R2,63                   CLEAR R2 AND RELEVANT BITS OF R3
         ICM   R3,3,0(R5)              RELATIVE TRACK INTO R3.
         D     R2,=A(TRKCYL)           DIVIDE BY TRACKS PER CYLINDER.
         STH   R2,NHH                  MOVE START ADDRESS ...
         STH   R3,NCC                             ... TO N LINKAGE.
         MVC   NSIZE,2(R5)             SIZE OF EXTENT TO LINKAGE.
         SR    R2,R2                   CLEAR R2.
         IC    R2,NTRK                 UPDATE
         AH    R2,HTRK                  FREE TRACKS
         STH   R2,HTRK                   ACCUMULATOR.
         LH    R2,NCYL                 UPDATE
         AH    R2,HCYL                  FREE CYLINDERS
         STH   R2,HCYL                   ACCUMULATOR.
H060     EQU   *
         MVC   LFREE,=C'FREE SPACE'
         BAL   R9,N                    FORMAT START & SIZE OF EXTENT.
         BAL   R9,M                    PRINT EXTENT.
         LA    R5,(L'DS5AVEXT)(R5)     ADVANCE TO NEXT EXTENT.
         CLI   NHH,255                 IF TOTAL FREE SPACE JUST PRINTED
         BE    H999                    THEN EXIT.
         B     H040                    LOOP TO PROCESS NEXT EXTENT.
H800     EQU   *
         MVI   NHH,255
         MVC   LTOTAL,=C'TOTAL'
         SR    R2,R2                   CLEAR R2.
         LH    R3,HTRK                 ACCUMULATED TRACKS INTO R3.
         D     R2,=A(TRKCYL)           DIVIDE BY TRACKS PER CYLINDER.
         AH    R3,HCYL                 ADD IN ACCUMULATED CYLINDERS.
         STH   R3,NCYL                 CYLINDERS TO N LINKAGE.
         STC   R2,NTRK                 TRACKS TO N LINKAGE.
         B     H060                    GO REPORT TOTAL FREE SPACE.
H999     EQU   *
         GOBACK ,
         TITLE 'FLASH2 - J - OBTAIN DSCB'
J        COMEIN
         OBTAIN CAMLST
         LTR   R15,R15                 IF SUCCESSFUL,
         BZ    J999
         LR    R2,R15                  SAVE RC FROM OBTAIN.
         LA    R3,LINE
         BAL   R9,PRINTL               PRINT BLANK LINE.
         MVC   LINE+1(26),=C'*** UNABLE TO CONTINUE ***'
         BAL   R9,PRINTL               REPORT UNABLE TO CONTINUE.
         MVC   LINE+1(8),=C'REASON -'  PART OF MESSAGE TO LINE.
         MVI   LINE,X'11'              SPACE 2 AFTER PRINT.
         CH    R15,=H'4'               IF RC NOT 4,
         BNE   J100                    THEN BRANCH.
         MVC   LINE+10(22),=C'PACK NO LONGER MOUNTED'
         BAL   R9,PRINTL               REPORT REASON FOR TERMINATION.
         B     E800                    TERMINATE LISTING.
J100     EQU   *
         MVC   LINE+10(22),=C'ERROR ACCESSING A DSCB'
         BAL   R9,PRINTL               REPORT REASON FOR TERMINATION.
         MVC   LINE+1(41),=C'* PLEASE PASS DUMP TO SYSTEM PROGRAMMER *'
         BAL   R9,PRINTL               PRINT MESSAGE.
         CLOSE (PRINT)                 ENSURE PRINT BUFFER PURGED.
         ABEND (2),DUMP                ABEND WITH CODE = RC FROM OBTAIN
J999     GOBACK ,
         TITLE 'FLASH2 - K - LIST EXTENTS'
K        COMEIN
         LA    EXTBAR,EXTENTS          ADDRESS EXTENTS TABLE.
K010     EQU   *
         CLC   FF,EXTENT               IF END OF TABLE REACHED,
         BE    K999                    THEN EXIT.
         TM    DSORG,X'80'             IF NOT I.S. DATA SET,
         BZ    K030                    THEN BRANCH.
         MVI   LDSORG3,C'P'            INDICATE PRIME AREA.
         CLI   EXTTYPE,EXTOFLOW        IF NOT OVERFLOW AREA,
         BNE   K020                    THEN BRANCH.
         MVI   LDSORG3,C'O'            INDICATE OVERFLOW AREA.
K020     EQU   *
         CLI   EXTTYPE,EXTINDEX        IF NOT INDEX AREA,
         BNE   K030                    THEN BRANCH.
         MVI   LDSORG3,C'I'            INDICATE INDEX AREA.
K030     EQU   *
         MVC   NCCHH,EXTLOWER          START OF EXTENT TO LINKAGE.
         LH    R15,EXTUPPER            R15 = UPPER CYLINDER.
         SH    R15,EXTLOWER            SUBTRACT LOWER CYLINDER.
         LH    R14,EXTUPPER+2          R14 = UPPER HEAD.LINDER.
         LA    R14,1(R14)              ADD 1.
         SH    R14,EXTLOWER+2          SUBTRACT LOWER HEAD.
         BNM   K040
         LA    R14,TRKCYL(R14)         MAKE TRACKS POSITIVE.
         BCTR  R15,0                   SUBTRACT 1 FROM CYLS TO BALANCE.
K040     EQU   *
         STC   R14,NTRK                TRACKS TO LINKAGE.
         STH   R15,NCYL                CYLINDERS TO LINKAGE.
         BAL   R9,N                    FORMAT START & SIZE OF EXTENT.
         BAL   R9,M                    PRINT EXTENT.
         LA    EXTBAR,EXTENDA          ADVANCE TO NEXT ENTRY.
         B     K010                    LOOP.
K999     GOBACK ,
         TITLE 'FLASH2 - L - ADD 1 TO DSCB ADDRESS.'
L        COMEIN 2
         SR    R2,R2                   ZEROISE R2.
         IC    R2,LR                   RECORD INTO R2.
         LA    R2,1(R2)                ADD 1 TO RECORD.
         STC   R2,LR                   RESTORE RECORD TO LINKAGE.
         CLM   R2,1,FT4DEVT            IF TRACK OVERFLOW NOT REACHED,
         BNH   L999                    THEN EXIT.
         MVI   LR,1                    SET RECORD NUMBER TO 1.
         LH    R2,LHH                  ADD 1
         LA    R2,1(R2)                      TO
         STH   R2,LHH                           HEAD.
         CH    R2,=Y(TRKCYL-1)         IF CYLINDER OVERFLOW NOT REACHED
         BNH   L999                    THEN EXIT.
         XC    LHH,LHH                 SET HEAD TO ZERO.
         LH    R2,LCC                  ADD 1
         LA    R2,1(R2)                      TO
         STH   R2,LCC                           CYLINDER.
L999     GOBACK
         TITLE 'FLASH2 - M - PRINT ROUTINE'
M        COMEIN 2,4
         CP    LINENO,=P'53'           IF END OF PAGE NOT REACHED,
         BNH   M200                    THEN BRANCH.
         ZAP   LINENO,=P'0'            ZEROISE LINE COUNT.
         AP    PAGENO,=P'1'            ADD 1 TO PAGE COUNT.
         MVC   PAGE,PATTN              SET UP ...
         MVI   PAGE+2,X'21'                   ... EDIT PATTERN.
         LA    R1,PAGE+3
         EDMK  PAGE,PAGENO             PAGE TO TITLE.
         SH    R1,=H'5'
         MVC   0(4,R1),=C'PAGE'
         LA    R2,=A(SKCH1,TITLE,HEADING1,HEADING2)
         LA    R4,4                    * SKIP TO NEW PAGE,
M100     L     R3,0(R2)                *  PRINT
         BAL   R9,PRINTL               *   TITLE
         LA    R2,4(R2)                *    AND
         BCT   R4,M100                 *     HEADINGS.
M200     EQU   *
         LA    R3,LINE
         BAL   R9,PRINTL               PRINT DETAIL LINE.
         GOBACK ,
         SPACE 2
PRINTL   PUT   PRINT,(3)
         C     R3,=A(LINE)             IF DETAIL LINE NOT PRINTED,
         BNE   0(R9)                   THEN BRANCH.
         MVI   LINE,C' '               CLEAR
         MVC   LINE+1(L'LINE-1),LINE         DETAIL LINE.
         MVI   LINE,X'9'               SET TO SPACE 1 AFTER NEXT PRINT.
         AP    LINENO,=P'1'            ADD 1 TO LINE COUNT.
         BR    R9                      RETURN.
         TITLE 'FLASH2 - N - FORMAT ''START'' AND ''SIZE OF EXTENT'''
N        COMEIN
         CLC   LTOTAL,=C'TOTAL'        IF FREE SPACE TOTAL TO BE
         BE    N100                    PRINTED , THEN BRANCH.
         LH    R14,NCC                 START CYL TO R14.
         CVD   R14,DWD                 BINARY TO PACKED.
         UNPK  LSTART(3),PL2           UNPACK INTO LINE.
         LH    R14,NHH                 START HEAD TO R14.
         CVD   R14,DWD                 BINARY TO PACKED.
         UNPK  LSTART+4(2),PL2         UNPACK INTO LINE.
         OC    LSTART+2(4),=C'0/00'    STRIP SIGNS AND INSERT SLASH.
N100     EQU   *
         SRDL  R14,63                  CLEAR RELEVANT BITS OF R14,R15.
         IC    R15,NTRK                TRACKS INTO R15.
         D     R14,=A(TRKCYL)          DIVIDE BY TRACKS PER CYLINDER.
         AH    R15,NCYL                UPDATE ...
         STH   R15,NCYL                       ... CYLINDERS
         STC   R14,NTRK                       ... AND TRACKS.
         LR    R15,R14                 TRACKS INTO R15.
         LA    R1,TRK                  R1 -> MESSAGE CHARACTERS.
         LA    R14,LTRK                R14 -> RECEIVING FIELD.
         BAL   R9,EDITSIZE             EDIT TRACKS INTO LINE.
         LH    R15,NCYL                CYLINDERS INTO R15.
         LA    R1,CYL                  R1 -> MESSAGE CHARACTERS.
         LA    R14,LCYL                R14 -> RECEIVING FIELD.
         BAL   R9,EDITSIZE             EDIT CYLINDERS INTO LINE.
         GOBACK ,
         SPACE 2
EDITSIZE DS    0H
         MVC   0(3,R14),PATTN+1        SET UP ...
         MVC   4(3,R14),0(R1)                 ... EDIT PATTERN.
         BCTR  R14,0                   R14 -> FILL CHARACTER.
         LNR   R15,R15                 NEGATE VALUE TO BE EDITED.
         CVD   R15,DWD                 BINARY TO PACKED.
         ED    0(8,R14),PL2            MOVE TO LINE.
         BR    R9                      RETURN.
         TITLE 'FLASH2 - P - CREATE BASIC PRINT LINE FOR FORMAT 1 DSCB'
P        COMEIN 2,4
         MVC   LDSNAME,DS1DSNAM        DATA SET NAME TO LINE.
         LA    R2,DS1CREDT             CONVERT
         LA    R3,LCREATN               CREATION DATE
         BAL   R9,Q                      TO PRINTABLE FORM.
         LA    R2,DS1EXPDT             CONVERT
         LA    R3,LEXPIRY               EXPIRY DATE
         BAL   R9,Q                      TO PRINTABLE FORM.
* CONVERT DSORG --
         TM    DS1DSORG,X'F2'          IF ANY DSORG FLAGS ON,
         BNZ   P010                    THEN BRANCH.
         MVC   LDSORG,=C'UNDEF'        ELSE INDICATE UNDEFINED DSORG,
         B     P050                    AND BY-PASS CONVERSION.
P010     EQU   *
         TM    DS1DSORG,1              IF DATA SET IS NOT UN-MOVABLE,
         BZ    P020                    THEN BRANCH.
         MVI   LDSORG+2,C'U'           ELSE INDICATE UN-MOVABLE.
P020     EQU   *
         SR    R2,R2                   CLEAR R2
         IC    R2,DS1DSORG             DSORG FLAGS INTO R2.
         LA    R3,DSORGLST             R3 -> LIST OF DSORG'S.
P030     EQU   *
         SRL   R2,1                    SHIFT OUT PREVIOUS FLAG.
         STC   R2,WK5                  STORE NEW FLAG.
         CLI   WK5,0                   IF ALL REMAINING FLAGS OFF,
         BE    P050                    THEN EXIT.
         TM    WK5,1                   IF RELEVANT DSORG FLAG IS OFF,
         BZ    P040                    THEN BRANCH,
         OC    LDSORG01,0(R3)          ELSE MOVE DSORG TO LINE.
P040     EQU   *
         LA    R3,2(R3)                ADVANCE TO NEXT DSORG.
         B     P030                    LOOP.
P050     EQU   *
* CONVERT RECFM --
         SR    R14,R14                 CLEAR R14.
         IC    R14,DS1RECFM            RECFM INTO R14.
         SRL   R14,6                   SHIFT 'F,V,U' FLAGS.
         STC   R14,LRECFM              STORE FLAGS IN LINE.
         TR    LRECFM(1),=C' VFU'      TRANSLATE TO PRINTABLE FORM.
         LA    R14,LRECFM+1            R14 -> NEXT RECFM CHARACTER.
         TM    DS1RECFM,X'10'          IF BLOCKED RECORDS NOT FLAGGED,
         BZ    P060                    THEN BRANCH.
         MVI   0(R14),C'B'             INDICATE BLOCKED.
         LA    R14,1(R14)              ADVANCE TO NEXT RECFM CHARACTER.
P060     EQU   *
         TM    DS1RECFM,X'08'          IF STANDARD/SPANNED RECORDS NOT
         BZ    P070                    FLAGGED , THEN BRANCH.
         MVI   0(R14),C'S'             INDICATE STANDARD / SPANNED.
         LA    R14,1(R14)              ADVANCE TO NEXT RECFM CHARACTER.
P070     EQU   *
         TM    DS1RECFM,X'20'          IF TRACK OVERFLOW NOT FLAGGED,
         BZ    P080                    THEN BRANCH.
         MVI   0(R14),C'T'             INDICATE TRACK OVERFLOW.
         LA    R14,1(R14)              ADVANCE TO NEXT RECFM CHARACTER.
P080     EQU   *
         IC    R15,DS1RECFM            RECFM INTO R15.
         SRL   R15,1                   SHIFT CONTROL CHARACTER FLAGS,
         STC   R15,0(R14)              AND STORE INTO LINE.
         NI    0(R14),3                TURN OFF OTHER FLAGS.
         TR    0(1,R14),=C' MA'        TRANSLATE CONTROL CHAR FLAGS.
* FORMAT BLKSIZE AND LRECL --
         MVC   LBLKSIZE,PATTN          SET UP
         MVI   LBLKSIZE+4,X'20'         EDIT
         MVC   LLRECL,LBLKSIZE           PATTERNS.
         LH    R2,DS1BLKL              CONVERT
         CVD   R2,DWD                    BLKSIZE
         ED    LBLKSIZE,PL3                AND MOVE TO LINE.
         LH    R2,DS1LRECL             CONVERT
         CVD   R2,DWD                    LRECL
         ED    LLRECL,PL3                  AND MOVE TO LINE.
* FORMAT SECONDARY ALLOCATION --
         CLI   LDSORG,C'P'             IF NOT SEQUENTIAL OR PARTITIONED
         BNE   P400                    DATA SET , THEN BRANCH.
         NC    DS1SCALO+1(L'DS1SCALO-1),DS1SCALO+1 IF ANY SECONDARY
         BNZ   P100                    ALLOCATION , THEN BRANCH.
         MVI   LSECOND+2,C'0'          INDICATE NO SECONDARY ALLOCATION
         B     P200
P100     EQU   *
         SR    R2,R2                   CLEAR R2.
         IC    R2,DS1SCALO             ALLOCATION TYPE FLAGS INTO R2.
         SRL   R2,6                    SHIFT RELEVANT BITS.
         BCTR  R2,0                    DECREMENT BY 1.
         MH    R2,=H'3'
         LA    R3,ALLOCTYP             R3 -> ALLOCATION TYPE LIST.
         AR    R3,R2                   ADD DISPLACEMENT DOWN LIST.
         MVC   LSECOND+4(3),0(R3)      ALLOC TYPE TO LINE.
         ICM   R2,7,DS1SCALO+1         R2 = SECONDARY ALLOCATION.
         CVD   R2,DWD                  BINARY TO PACKED.
         MVC   LSECOND(3),PATTN+3      EDIT PATTERN TO LINE.
         ED    LSECOND-1(4),PL2        SECONDARY ALLOCATION TO LINE.
P200     EQU   *
* FORMAT SPACE USED --
         NC    DS1LSTAR(5),DS1LSTAR    IF LAST BLK PTR AND TRK BALANCE
         BZ    P400                    ARE ZERO , THEN BRANCH.
         SR    R14,R14                 CLEAR R14.
         LH    R15,DS1LSTAR            TRACKS USED INTO R15.
         CLI   DS1LSTAR+2,0            IF PART OF TRACK NOT USED,
         BE    P300                    THEN BRANCH.
         LA    R15,1(R15)              ELSE ADD 1 TO TRACKS USED.
P300     EQU   *
         D     R14,=A(TRKCYL)          CONVERT TO TRACKS AND CYLINDERS.
         MH    R15,=H'100'             R15 = CYLS * 100.
         AR    R15,R14                 ADD IN TRACKS.
         CVD   R15,DWD                 BINARY TO PACKED.
         MVC   LUSED,=X'2021204B2020'  MOVE EDIT PATTERN TO LINE.
         ED    LUSED-1(L'LUSED+1),PL3  MOVE SPACE USED TL LINE.
P400     EQU   *
         TM    CONFLAG,CONSCR          IF TENPORARY DATA SETS NOT TO BE
         BZ    P500                    SCRATCHED , THEN BRANCH.
         BAL   R9,R                    GO SCRATCH TEMPORARY DATA SET.
P500     EQU   *
         TM    CONFLAG,CONCAT          IF CATALOGUED DATA SETS NOT TO
         BZ    P600                    BE FLAGGED , THEN BRANCH.
         LOCATE CATLIST                ? DATA SET CATALOGUED ?
         LTR   R15,R15                 IF LOCATE NOT SUCCESSFUL,
         BNZ   P600                    THEN BRANCH.
         MVI   LDSNAME+L'LDSNAME,C'C'  INDICATE CATALOGUED DATA SET.
P600     EQU   *
         CLM   CTRLBAR,8,FF            IF NOT 'SINGLE' FLASH REQUEST,
         BE    P700                    THEN BRANCH.
         BAL   R9,S                    TEST SINGLE FLASH OPTIONS.
P700     EQU   *
         GOBACK ,
         TITLE 'FLASH2 - Q - CONVERT DATE AND MOVE TO LINE'
Q        DS    0H
         SR    R14,R14                 CLEAR R14.
         IC    R14,0(R2)               YEAR INTO R14.
         CVD   R14,DWD                 BINARY YEAR TO PACKED.
         UNPK  0(2,R3),DWD             UNPACK INTO LINE,
         OI    1(R3),X'F0'             AND STRIP SIGN.
         ICM   R14,3,1(R2)             DAY INTO R14.
         CVD   R14,DWD                 BINARY DAY TO PACKED.
         UNPK  3(3,R3),DWD             UNPACK INTO LINE,
         OI    5(R3),X'F0'             AND STRIP SIGN.
         MVI   2(R3),C'.'              PERIOD BETWEEN YEAR AND DAY.
         NC    0(3,R2),0(R2)           IF YDD NOT ZERO,
         BNZ   Q999                    THEN EXIT.
         MVI   2(R3),C'0'              CHANGE PERIOD TO ZERO.
Q999     BR    R9                      RETURN.
         TITLE 'FLASH2 - R - SCRATCH TEMPORARY DATA SET'
R        COMEIN 2,3
         CLC   =C'SYS',DS1DSNAM        IF DSN DOES NOT START WITH 'SYS'
         BNE   R999                    THEN EXIT.
         CLC   =C'.T',DS1DSNAM+8       IF SECOND FIELD DOES NOT START
         BNE   R999                    WITH 'T' IN POSITION 10 , EXIT.
         CLI   DS1DSNAM+18,C'F'        IF POSITION 19 NOT 'F' ,
         BNE   R999                    THEN EXIT.
         LA    R2,5                    SET LOOP COUNT.
         LA    R3,DS1DSNAM+2           USE R3 AS POINTER.
R010     LA    R3,1(R3)                ADVANCE TO NEXT CHARACTER.
         CLI   0(R3),C'0'              IF CHARACTER < 0,
         BL    R999                    THEN EXIT.
         CLI   0(R3),C'9'              IF CHARACTER > 9,
         BH    R999                    THEN EXIT.
         BCT   R2,R010                 LOOP TO END OF FIRST DSN FIELD.
         CLC   LCREATN,DATETIME        IF DATA SET HAS NOT EXPIRED,
         BNL   R999                    THEN EXIT.
         BAL   R9,T                    SCRATCH DATA SET.
R999     GOBACK ,
         TITLE 'FLASH2 - S - PROCESS ''CARD'' OPTIONS'
S        COMEIN 2,3
         TS    *+1                     IF NOT FIRST TIME THRU',
         BNZ   S030                    THEN BRANCH.
         OPEN  (CARD,(INPUT))
         LA    R2,CARD                 R2 -> CARD DCB.
         TM    DCBOFLGS,X'10'          IF DCB FAILED TO OPEN,
         BZ    S999                    THEN DON'T TRY TO READ CARDS.
         LA    R2,&NOPTION             R2 = NUMBER OF SPACES IN TABLE.
         LA    R3,CARDS                USE R3 AS POINTER TO TABLE.
S010     EQU   *
         GET   CARD
         MVC   0(L'CARDS,R3),0(R1)     SAVE OPTION CARD.
         LA    R3,L'CARDS(R3)          ADVANCE TO NEXT ENTRY.
         BCT   R2,S010                 LOOP TO FILL TABLE.
S020     EQU   *
         MVI   0(R3),X'FF'             DELIMIT TABLE.
         CLOSE (CARD)
S030     EQU   *
         NC    CARDS,CARDS             IF NO CARDS IN TABLE,
         BZ    S999                    THEN EXIT.
         LA    R3,CARDS-L'CARDS        USE R3 AS POINTER TO TABLE.
S040     EQU   *
         LA    R3,L'CARDS(R3)          ADVANCE TO NEXT ENTRY.
         CLI   0(R3),X'FF'             IF END OF TABLE,
         BE    S999                    THEN EXIT.
         CLC   DS1DSNAM,0(R3)          IF DSNAME NOT MATCHED,
         BNE   S040                    THEN LOOP.
         CLI   L'DS1DSNAM(R3),C'C'     IF CATALOG NOT REQUESTED,
         BNE   S050                    THEN BRANCH.
         MVC   CATVOL,CONPACK          VOLUME SERIAL NUMBER TO LINKAGE.
         XC    CATSEQ,CATSEQ           CLEAR DATA SET SEQUENCE NUMBER.
         CATALOG CATLG
         LTR   R15,R15                 IF CATALOG NOT SUCCESSFUL,
         BNZ   S999                    THEN EXIT.
         MVI   LDSNAME+L'LDSNAME,C'C'   FLAG CATALOGUED DATA SET.
         B     S999                    EXIT.
S050     EQU   *
         CLI   L'DS1DSNAM(R3),C'U'     * CHECK FOR UNCATALOG
         BE    S060                    *  REQUEST
         CLI   L'DS1DSNAM+1(R3),C'U'   *   IN EITHER OF THE 2 BYTES
         BNE   S070                    *    FOLLOWING DATA SET NAME.
S060     EQU   *
         CATALOG UNCATLG
         LTR   R15,R15                 IF UNCATALOG NOT SUCCESSFUL,
         BNZ   S070                    THEN BRANCH.
         MVI   LDSNAME+L'LDSNAME,C'U'   FLAG UNCATALOGUED DATA SET.
S070     EQU   *
         CLI   L'DS1DSNAM(R3),C'S'     * CHECK FOR SCRATCH
         BE    S080                    *  REQUEST
         CLI   L'DS1DSNAM+1(R3),C'S'   *   IN EITHER OF THE 2 BYTES
         BNE   S999                    *    FOLLOWING DATA SET NAME.
S080     EQU   *
         BAL   R9,T                    SCRATCH DATA SET.
S999     GOBACK ,
         TITLE 'FLASH2 - T - SCRATCH DATA SET'
T        COMEIN ,
         MVC   SCRVOL,CONPACK          VOLUME SERIAL NUMBER TO LINKAGE.
         SR    R0,R0                   UCB ADDRESS NOT SUPPLIED.
         SCRATCH SCRLIST
         LTR   R15,R15                 IF SCRATCH
         BNZ   T999                               NOT SUCCESSFUL,
         CLI   SCRSTAT+1,0             THEN
         BNE   T999                         EXIT.
         XC    DS1PTRDS,DS1PTRDS       NULLIFY CHAIN FIELD.
         XC    DS1EXT1+L'DS1EXT1(2*L'DS1EXT1),DS1EXT1+L'DS1EXT1
         MVC   LUSED-1(9),=C'SCRATCHED'  REPORT DATA SET SCRATCHED.
T999     GOBACK ,
         TITLE 'FLASH2 - U - EDIT DATE'
U        COMEIN 2,5
         TIME ,
         STCM  R0,12,WK5               TIME &
         STCM  R1,7,WK5+2                     DATE TO WORK AREA.
         OI    WK5+L'WK5-1,15          STRIP SIGN.
         UNPK  WK9,WK5                 AND UNPACK.
         TR    DATETIME(13),WK9        MOVE DATE AND TIME TO TITLE.
         ZAP   DWD,=P'0'               CLEAR WORK AREA.
         MVO   PL3,WK5+2(1)            YY TO WORK AREA.
         CVB   R4,DWD                  R4 = YY
         DP    PL3,=P'4'               YY/4.
         CP    PL3+2(1),=P'0'          IF NOT LEAP YEAR,
         BNE   U100                    THEN BRANCH.
         MVI   UDAYS+3,X'9C'           DAYS-IN-FEB -> 29.
U100     EQU   *
         LA    R3,UDAYS-L'UDAYS        R3 -> DAYS-IN-MONTH.
         SR    R2,R2                   R2 = MONTH COUNTER.
U200     EQU   *
         LA    R3,L'UDAYS(R3)          ADVANCE TO
         LA    R2,1(R2)                            NEXT MONTH.
         CP    WK5+3(2),0(L'UDAYS,R3)
         BNH   U300
         SP    WK5+3(2),0(L'UDAYS,R3)
         B     U200                    LOOP.
U300     EQU   *
         CVD   R2,DWD
         UNPK  DDMM+3(2),PL2           MONTH TO TITLE.
         UNPK  DDMM(2),WK5+3(2)        DAY TO TITLE.
         OC    DDMM,=C'00/00/'
         LR    R5,R4                   R5 = YY
         BCTR  R5,0                    R5 = YY-1
         MH    R5,=H'365'              R5 = 365*(YY-1)
         SRA   R4,2                    R4 = Q(YY/4)
         AR    R5,R4
         XC    DWD,DWD                 CLEAR WORK AREA.
         STH   R1,PL2                  DDD INTO WORK AREA
         CVB   R4,DWD                   R4 = DDD
         AR    R5,R4                   R5 = DAY SEQUENCE NUMBER
         SR    R4,R4                   CLEAR R4
         D     R4,=F'7'                R4 = RELATIVE DAY OF WEEK
         MH    R4,=H'3'                MULTIPLY BY SIZE OF TABLE ENTRY
         LA    R4,UWKDAYS(R4)          R4 -> WEEKDAY
         MVC   WEEKDAY,0(R4)           WEEKDAY TO TITLE
         GOBACK ,
         TITLE 'FLASH2 - LITERALS / CONSTANTS / WORK-AREAS.'
DWD      DC    D'0'                    WORK AREA.
         ORG   DWD+5
PL3      DS    PL3
         ORG   DWD+6
PL2      DS    PL2
         ORG   ,
UDAYS    DC    PL2'31,28,31,30,31,30,31,31,30,31,30,31' DAYS-IN-MONTHS.
MAINSAVE DC    18F'0'
         LTORG ,
UWKDAYS  DC    C'MONTUEWEDTHUFRISATSUN' WEEKDAYS TABLE.
JCCHHR   DC    XL5'0'                  CCHHR FOR DSCB TO BE OBTAINED.
JVOLUME  DC    XL6'0'                  VOL SER FOR DSCB TO BE OBTAINED.
CAMLST   CAMLST SEEK,JCCHHR,JVOLUME,LABEL
GCCHHR   DC    XL5'0'                  ADDRESS OF NEXT DSCB (SEQ PASS).
         DS    0H                      LINKAGE TO ROUTINE L.
LCCHHR   DS    0XL5                    CCHHR TO BE INCREMENTED.
LCC      DC    H'0'                    CYL..
LHH      DC    H'0'                    HEAD.
LR       DC    X'0'                    REC..
FCCHHR   DC    XL5'0'                  ADDRESS OF FORMAT 4 DSCB.
DSORG    DC    X'0'                    DSORG SAVE AREA.
DSORGLST DC    C'PO',XL6'0',C'DAPSIS' DSORG LIST.
ALLOCTYP DC    C'BLK'                  ALLOCATION IN BLK,TRK OR CYL.
TRK      DC    C'TRK'
CYL      DC    C'CYL'
LINENO   DC    PL2'0'                  LINE COUNT.
PAGENO   DC    PL2'0'                  PAGE COUNT.
FREEFMT0 DC    X'11',C'THERE ARE'
PATTN    DC    X'402020202120',C' FREE FORMAT 0 DSCB''S.'
         SPACE
SKCH1    DC    X'8B'                   IMMEDIATE SKIP TO CHANNEL 1.
TITLE    DC    X'11',C'VTOC LISTING OF 3330 VOLUME '
VOLUME   DC    C'XXXXXX',C' ON UNIT '
UNIT     DC    C'XXX',C' '
MODULE   DC    CL10' ',CL40' '
WEEKDAY  DC    CL3' ',C' '
DDMM     DC    CL6' '
DATETIME DC    AL1(4,5,10,6,7,8,9,9,0,1,10,2,3),CL8' '
PAGE     DC    C' ZZ9'
         SPACE
HEADING1 DC    X'09',C'* * * * * D A T A  S E T  N A M E * * * * * '
         DC    C' CREATION EXPIRY START  SIZE OF EXTENT '
         DC    C' SPACE USED SECONDARY   '
         DC    C'* *  DCB INFORMATION  * *'
         SPACE
HEADING2 DC    X'11',CL44' '
         DC    C'   DATE    DATE  CCC/HH                '
         DC    C'   CYL.TRK  ALLOCATION  '
         DC    C'DSORG RECFM LRECL BLKSIZE'
         SPACE
LINE     DC    CL133' '                COMMON DATA LINE.
         ORG   LINE
LFMTZERO DS    0CL38                   FORMAT ZERO MESSAGE.
         DC    X'9'                    COMMAND CODE.
LDSNAME  DS    0CL44                   DATA SET NAME.
LENDVTOC DS    0CL20                   END-OF-VTOC MESSAGE.
         ORG   LINE+29
LTOTAL   DS    CL5,C                   'TOTAL '.
LFREE    DS    CL10,CL2                'FREE SPACE'.
LCREATN  DS    CL6,CL2                 CREATION DATE YY.DDD.
LEXPIRY  DS    CL6,C                   EXPIRY DATE YY.DDD.
LNOXTNT  DS    0CL22
LSTART   DS    CL6,C                   START CCC/HH.
LCYL     DS    CL7                     CYLINDERS IN EXTENT.
LTRK     DS    CL7,CL4                 TRACKS IN EXTENT.
LUSED    DS    CL6,CL4                 SPACE USED.
LSECOND  DS    CL7,CL4                 SECONDARY ALLOCATION.
LDSORG   DS    0CL5                    *
LDSORG01 DS    CL2,C                   *
LDSORG3  DS    C,CL2                   * DCB INFORMATION.
LRECFM   DS    CL5                     *
LLRECL   DS    CL6,C                   *
LBLKSIZE DS    CL6                     *
         ORG   ,
         SPACE 2
NCCHH    DS    0F                      N LINKAGE - START OF EXTENT.
NCC      DC    H'0'                    CYL..
NHH      DC    H'0'                    HEAD.
NSIZE    DS    0XL3                    N LINKAGE - SIZE OF EXTENT.
NCYL     DC    H'0'                    CYLS..
NTRK     DC    X'0'                    TRACKS.
WK5      DC    XL5'0'
WK9      DC    XL9'0',C' .'
PRINT    DCB   DSORG=PS,MACRF=PM,DDNAME=PRINT,LRECL=133,RECFM=FBM,     *
               BLKSIZE=665
OPEN     EQU   X'10'
CARD     DCB   DSORG=PS,LRECL=80,RECFM=FB,MACRF=GL,                    *
               DDNAME=SYSIN,EODAD=S020,SYNAD=S020
EXTENTS  DC    16XL10'0'               TABLE FOR UP TO 16 EXTENTS.
FF       DC    FL4'-1'                 END MARKER AND COMMON CONSTANT.
HCYL     DC    H'0'                    FREE CYLINDER ACCUMULATOR.
HTRK     DC    H'0'                    FREE TRACK ACCUMULATOR.
CATLG   CAMLST CATBX,DS1DSNAM,,VOLLIST CATALOG & CREATE INDEX LEVELS.
UNCATLG  CAMLST UNCAT,DS1DSNAM         UNCATALOG & RETAIN INDEX LEVELS.
SCRLIST  CAMLST SCRATCH,DS1DSNAM,,VOLLIST SCRATCH LIST.
VOLLIST  DC    H'1',X'30502009'        VOLUME LIST.
CATVOL   DS    0CL6                    CATALOGUED VOLUME.
SCRVOL   DC    CL6' '                  SCRATCH VOLUME.
CATSEQ   DS    0H                      DATA SET SEQUENCE NUMBER.
SCRSTAT  DC    H'0'                    SCRATCH STATUS BYTES.
CATLIST  CAMLST NAME,DS1DSNAM,,CATAREA CATALOGUE LOCATE LIST.
CATAREA  DS    0D
         ORG   CATAREA+265
CARDS    DC    &NOPTION.XL46'0',X'FF'  AREA FOR OPTION CARDS.
         TITLE 'FLASH2 - DSCB / OBTAIN WORK-AREA'
LABEL    DS    0D                      DSCB AREA + OBTAIN WORK-AREA.
* FORMAT 1 DSCB - IDENTIFIER -
DS1DSNAM DS    CL44                    DATA SET NAME.
DS1FMTID DS    X,XL8                   FORMAT IDENTIFIER.
DS1CREDT DS    XL3                     CREATION DATE.
DS1EXPDT DS    XL3,XL23                EXPIRATION DATE.
DS1DSORG DS    X,X                     DATA SET ORGANIZATION.
DS1RECFM DS    X,X                     RECORD FORMAT.
DS1BLKL  DS    XL2                     BLOCK SIZE.
DS1LRECL DS    XL2,XL4                 RECORD LENGTH.
DS1SCALO DS    XL4                     ALLOCATION PARAMETERS.
DS1LSTAR DS    XL3,XL4                 LAST BLOCK POINTER.
DS1EXT1  DS    XL10                    EXTENT DESCRIPTION 1.
         ORG   DS1EXT1+3*L'DS1EXT1     EXTENT DESCRIPTIONS 2 AND 3.
DS1PTRDS DS    XL5                     POINTER TO FORMAT 2 OR 3 DSCB.
         DS    XL8                     WORK-AREA FOR OBTAIN.
         ORG   LABEL
         SPACE
* FORMAT 2 DSCB - INDEX -
* ONLY FMTID & PTRDS FIELDS ARE REQUIRED, FOR WHICH FMT 1 DEF SUFFICES
         SPACE
* FORMAT 3 DSCB - EXTENSION -
         DS    XL4
DS3EXTNT DS    0X                      4 EXTENT FIELDS.
         ORG   *+4*L'DS1EXT1
DS3FMTID DS    X
DS3ADEXT DS    0X                      9 EXTENT FIELDS.
         ORG   *+9*L'DS1EXT1
DS3ENDA  EQU   *
         ORG   LABEL
         SPACE
* FORMAT 4 DSCB - VTOC -
         DS    XL45
DS4HPCHR DS    XL5                     ADDRESS OF LAST FORMAT 1 DSCB.
DS4DSREC DS    XL2,XL6                 NO OF FREE FORMAT 0 DSCB'S.
DS4VTOCI DS    X,XL15                  VTOC INDICATORS.
DS4DEVT  DS    X                       DSCB'S / TRACK.
         ORG   DS1EXT1
DS4VTOCE DS    XL10                    VTOC EXTENT.
         ORG   LABEL
         SPACE
* FORMAT 5 DSCB - AVAILABLE SPACE -
         DS    XL4
DS5AVEXT DS    XL5                     AVAILABLE EXTENT 1.
         ORG   DS5AVEXT+8*L'DS5AVEXT   AVAILABLE EXTENTS 2 TO 8.
DS5FMTID DS    X
DS5MAVET DS    0X                      AVAILABLE EXTENTS 9 TO 26.
         ORG   ,
         SPACE
* SAVE AREA FOR FIELDS REQUIRED FROM FORMAT 4 DSCB. *
FT4HPCHR DC    XL5'0'                  ADDRESS OF LAST FORMAT 1 DSCB.
FT4VTOCI DC    X'0'                    VTOC INDICATORS.
FT4DSREC DC    H'0'                    NO OF FREE FORMAT 0 DSCB'S.
FT4DEVT  DC    X'0'                    DSCB'S / TRACK.
         END   FLASH202
