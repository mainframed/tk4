         TITLE  'PDS SCAN MODULE'
*  THIS MODULE READS SEQUENTIALLY THROUGH ALL THE MEMBERS OF A SOURCE
*  LIBRARY PASSING EACH CARD IMAGE BACK TO THE CALLER.
*    REGISTERS  ON ENTRY 1 POINTS TO THE 80 BYTE AREA FOR THE RECORD
*               ON EXIT  0 THE ADDRESS OF THE MEMBER NAME
*                        1  AS ON ENTRY
*                       15  0  NORMAL.
*                           4  NO MORE RECORDS
$MEM     DSECT  DIRECTORY                         ENTRY.
$MEMNAME DS    CL8                      MEMBER NAME
$MEMTTRA DS    CL3                      START ADDRESS OF MEMBER
$MEMEXTR DS    C                        COUNT FIELD.
*
*    INIT ALISE SECTION.
*
SPM21GET CSECT
         ENTRY  GLUUCGET
GLUUCGET SAVE  (14,12),,*
         BALR  12,0
         USING  *,12
CGETBASE LA    10,CGETSAVE             X
         ST    13,4(,10)               X SAVE  AREA
         ST    10,8(,13)               X     LINKAGE
         LR    13,10                   X
         USING  $MEM,3
         LR    10,1                     SAVE ENTRY REGISTER
         TM    CGETFLAG,FIRST           CHECK FIRST TIME SWITCH
         BO    CGETNXTR                 ON PASS NEXT RECORD
*
*   OPEN  THE  FILES  AND TEST THEIR OFLGS AND GET INPUT BUFFER
*
         OI    CGETFLAG,FIRST           SET FIRST TIME  FLAG
         OPEN  ,MF=(E,CGETOPEN)         OPEN FILES.
         TM    CGETDIRF+48,X'10'        IS DIRECTORY FILE OPEN
         BZ    CGETCLOS                 NO  CLOSE DOWN
         TM    CGETLIBF+48,X'10'        IS CARD FILE OPEN
         BZ    CGETCLOS                 NO  CLOSE DOWN
         LH    4,CGETLIBF+62            BLOCK SIZE FOR GETMAIN
         GETMAIN  EC,LV=(4),MF=(E,CGETCORE)
         LTR   15,15                    GOTTON CORE OK
         BP    CGETCLOS                 NO
         OI    CGETFLAG,COREGOT         SET BUFFER ALLOC. FLAG
*
*   FILES  OK  READ A DIRECTORY BLOCK  AND LOCATE NEXT MEMBER
*
CGETFIND GET   CGETDIRF,CGETBLK         READ A DIRECTORY BLOCK
         LA    3,CGETBLK+2              POINT TO FIRST MEMBER
         LH    2,CGETBLK                PICK UP BYTE COUNT
         LA    2,CGETBLK(2)             POINT TO END PSN IN BLOCK
CGETTEST CLC   $MEMNAME,=8X'FF'         END OF DIRECTORY
         BE    CGETCLOS                 YES CLOSE DOWN
         TM    $MEMEXTR,X'80'           IS IT AN ALIAS
         BO    CGETNXTM                 YES
         FIND  CGETLIBF,$MEMNAME,D      POINT TO START OF MEMBER
*
*    READ IN   BLOCK  AND SET UP DEBLOCKING POINTERS
*
CGETREAD READ  CGETLIST,SF,MF=E         READ BLOCK
         CHECK  CGETLIST                CHECK ITS COMPLETION
         LH    4,CGETLIBF+62            LOAD BLOCK SIZE TO R4
         L     8,CGETLIST+16            8 POINTS STATUS FIELDS
         SH    4,14(0,8)                DEDUCT REMAINING COUNT FROM
*                                         BLOCK SIZE R4 NOW HOLDS SIZE
*                                         OF BLOCK READ IN.
         L     5,CGETAREA               POINT 5 TO START OF INPUT AREA
*
*     PASS  BACK  NEXT  RECORD  AND EXIT
*
CGETPASS MVC   0(80,10),0(5)            COPY OVER CARD IMAGE
         LA    5,80(0,5)                POINT TO NEXT RECORD PSN
         STM   2,5,CGETSREG             SAVE POINTER RECS.
         SR    15,15                    SET ZERO R.C.
         LR    0,3                      POINT TO MEMBER NAME
         LR    1,10                     POINT TO RECORD
CGETEXIT L     13,4(,13)
         L     14,12(,13)
         LM    2,12,28(13)
         BR    14                      BACK  TO CALLER
*
*   NORMAL  ENTRY OTHER THAN FIRST TIME
*
CGETNXTR LM    2,5,CGETSREG             PICK UP POINTERS
         SH    4,=H'80'                 KNOCK 80 OF REMAINING BLOCK    -
                                         LENGTH
         BP    CGETPASS                 PASS NEXT RECORD
         BZ    CGETREAD                 READ NEXT BLOCK
*    NOTE IF RESULT IS -VE  THE BLOCKSIZE WAS NOT A MULTIPLE OF 80
         TM    CGETFLAG,SKIPIT          FORCED THIS ROUTE
         BZ    CGETCLOS                 NO BLKSIZE WRONG
         XI    CGETFLAG,SKIPIT          OK TURN IT OFF
*
*  THIS  ROUTINE  IS  ENTERED TO GET THE NEXT MEMBER NAME
*
CGETMEND EQU   *                       MEMBER END
CGETNXTM SR    8,8                      CLEAR R8
         LA    9,31                     SET 'AND' MASK FOR ONLT USER COU
                                        -NTS EXTRACTION
         IC    8,$MEMEXTR               PICK UP COUNT FIELD
         NR    8,9                     'AND' OFF ALIAS BIT 'IF ON'
         SLL   8,1                      DOUBLE USED COUNT
         LA    3,12(8,3)                FOR EXPLAINATION OF
         CR    3,2                      UP TO END OF BLOCK
         BE    CGETFIND                 YES READ NEXT BLOCK
         BL    CGETTEST                 NO TEST THE ENTRY
*   IF   R3 IS  GREATER THE COUNT FIELD IS WRONG .
*     ---  CLOSE DOWN
CGETCLOS CLOSE  ,MF=(E,CGETOPEN)        CLOSE DOWN
         TM    CGETFLAG,COREGOT         IS BUFFER ALLOCATED
         BZ    CGETSETR                 NO SKIP FREEING
         FREEMAIN  E,MF=(E,CGETCORE)    FREE BUFFER
CGETSETR LA    15,4
         B     CGETEXIT
         ENTRY CGETSKIP
         USING *,15
CGETSKIP TM    CGETFLAG,FIRST           OK HAVE WE STARTED
         BO    CGETFIXD                 OK BEGIN
         LA    15,4                     ERROR RETRN CODE
         BR    14                       GO BACK
CGETFIXD XC    CGETSREG+8,CGETSREG+8    FORCE SKIP TEST
         OI    CGETFLAG,SKIPIT          SET SKIP FLAG
         L     15,=A(GLUUCGET)
         BR    15                       GO TO START
CGETSAVE DS    18F                     REGISTER SAVE AREA
CGETSREG DS    4F                       STATUS SAVE AREA
CGETCORE GETMAIN  EC,LV=1,A=CGETAREA,MF=L    GETMAIN LIST
CGETFLAG DC    X'00'                    CONTROL SWITCH
FIRST    EQU   1                        FIRST TIME FLAG
COREGOT  EQU   2                        BUFFER ALLOC. FLAG
SKIPIT   EQU   4                        SKIP THIS MEMBER FLAG
CGETOPEN OPEN  (CGETDIRF,(INPUT),CGETLIBF,(INPUT)),MF=L  OPEN/CLOSE
*  THIS IS THE FORMAT OF A LIST ENTRY FOR READING
CGETLIST DC    F'0'                     ***
         DC    X'0080'                  *
         DC    H'0'                     * LIST FOR READ
         DC    A(CGETLIBF)              *
CGETAREA DC    A(0)                     *
         DC    A(0)                     ***
CGETLIBF DCB   DSORG=PO,MACRF=R,DDNAME=SYSUT1,EODAD=CGETMEND
CGETDIRF DCB   DSORG=PS,MACRF=GM,DDNAME=SYSUT1,BFTEK=S,EODAD=CGETCLOS, X
               BLKSIZE=256,LRECL=256,RECFM=F
CGETBLK  DS    256C                     DIRECTORY BUFFER
         LTORG
         END
