*          DATA SET ZCBLREFM   AT LEVEL 042 AS OF 21/03/79
ZCBLREFM TITLE '-REFORMAT COBOL COMPILER OUTPUT - LEVEL &PANLEV'
*  PROGRAM TO REFORMAT COBOL COMPILER OUTPUT.
*  IT WILL MERGE THE DMAP DATA WITH THE DATA DIVISION,
* AND THE CONDENSED LISTING WITH THE PROCEDUR DIVISION.
*  IT WILL SOPRESS THE LINKAGE SECTION, AND ASSOCIATED
* ERROR MESSAGES
*  IT GENERATES A SHORT CROSS-REFERENCE OF DATA NAMES
         EJECT
ZCBLREFM ZENT
         EJECT
*  SECTION TO PROCESS PARM INFO
*  DEFAULT PARM IS TO SUPRESS AS MUCH AS POSSIBLE
*  OPTIONS ARE TURNED OFF BY PRESENCE OF THE PARM VALUE
*  OPTIONS ARE
*             'LINK,DMAP,CLST,XREF'
* LEADING COMMAS MUST BE SPECIFIED. GIVING A FULL PARM VALUE AS ABOVE
*  DOES NOTHING
*  ON A VALID PARM VALUE,FILES ARE OPENED AND WORK-AREAS SET
SETPARMS EQU   *
         L     R2,0(R1)                 R2 POINTS AT PARM VALUE
         LH    R1,0(R2)
         LTR   R1,R1                    ANY PARMS PRESENT
         BZ    TESTEXIT
         LA    R2,2(R2)
       LA    R1,0(R1,R2)               R1 POINTS TO END OF PARMS
         LA    R3,PARMS
         LA    R4,EXIT
TESTCOMA EQU   *
         CLI   0(R2),C','
         BE    SETNEXT
         CLC   0(4,R2),0(R3)
         LA    R2,4(R2)
         BNE   SETNEXT
         MVI   0(R4),X'FF'
SETNEXT  EQU   *
         LA    R2,1(R2)
         CR    R2,R1                   END OF PARMS
         BNL   TESTEXIT                YES EXIT
         LA    R3,4(R3)
         LA    R4,1(R4)
         CLI   0(R4),X'FF'
         BE    TESTEXIT
         B     TESTCOMA
TESTEXIT EQU   *
         L     R2,EXIT
         ST    R2,SAVEPARM
         C     R2,=X'FFFFFFFF'
         BE    END
         CLI   LINK,X'FF'
         BE    OPENUP
         MVI   ERRORS,X'00'
OPENUP   EQU   *
*        OPEN  ALL FILES
         OPEN  (SYSPRINT,INPUT,LWORK,INPUT,ZPRINT,OUTPUT)
         TM    SYSPRINT+48,X'10'
         BO    OPEN10
         WTO   'ZLINKAGE-1 OPEN FOR SYSPRINT FAILED',ROUTCDE=2
         ABEND 4000,DUMP
OPEN10   EQU   *
         TM    ZPRINT+48,X'10'
         BO    OPEN15
         WTO   'ZLINKAGE-2 OPEN FOR ZPRINT FAILED',ROUTCDE=2
         ABEND 4000,DUMP
         SPACE 5
OPEN15   EQU   *
         GET   LWORK
         LR    R2,R1
         LA    R4,2
         LA    R3,INPUT
         USING OUTPUT,R3
         XC    SPACE(42),SPACE
OPEN20   EQU   *
         GET   SYSPRINT,(3)
         PUT   ZPRINT,(3)
         BCT   R4,OPEN20
         MVC   TITLE(121),INPUT
         EJECT
* WHERE SHALL I START, ORDER OF EVENTS IS:-
*       DMAP
*       LINKAGE SECTION
*       CLIST
*       XREF
*       ERROR SUPPRESSION - INDICATED BY LINKAGE SUPPRESSION
*
* ASCERTAIN WHICH IS THE FIRST INDICATOR ON
WHERENOW EQU   *
         CLI   DMAP,X'00'
         BE    HUNTDATA
         CLI   LINK,X'00'
         BE    HUNTLNK2
         CLI   CLST,X'00'
         BE    HUNTPROC
         B     HUNTPOS
WHERNOW2 EQU   *
         MVC   EXIT(4),SAVEPARM        RESTORE PARMS
         CLI   LINK,X'FF'
         BE    POSLWORK
         MVI   ERRORS,X'00'
POSLWORK EQU   *
         CLC   1(11,R2),=C'PP 5740-CB1'
         BE    WHERENOW
         GET   LWORK
         LR    R2,R1
         B     POSLWORK
         EJECT
*  THIS SECTION HANDLES THE DATA-MAP MERGE
HUNTDATA EQU   *
         GET   LWORK
         CLC   8(17,R1),=C'INTRNL NAME   LVL'
         BE    DMAPFND
         CLC   26(10,R1),=C'MEMORY MAP'
         BE    DMAPDONE
         CLC   51(9,R1),=C'CONDENSED'
         BE    DMAPDONE
         CLC   1(12,R1),=C'*STATISTICS*'
         BE    NOCLSTL
         B     HUNTDATA
DMAPFND  EQU   *
         GET   LWORK                    GET  FIRST LINE OF DMAP DATA
         LR    R2,R1
         LA    R3,INPUT
         USING OUTPUT,R3
         XC    SPACE(36),SPACE          CLEAR END OF PRINT LINE
NEXTREC  EQU   *
         GET   SYSPRINT,(3)
         PUT   ZPRINT,(3)
         CLI   0(R3),C'1'              HOF
         BE    NEXTREC
         CLC   15(13,R3),=C' FILE SECTION'
         BE    MERGEDMP
         CLC   15(16,R3),=C' WORKING-STORAGE'
         BE    MERGEDMP
         CLC   15(16,R3),=C' LINKAGE SECTION'
         BE    DMAPDONE
         CLC   15(11,R3),=C' PROCEDURE '
         BE    NOLINK
         CLC   2(12,R3),=C'*STATISTICS*'
         BE    NOCLIST
         B     NEXTREC
MERGEDMP EQU   *
         GET   SYSPRINT,(3)
         CLC   15(16,R3),=C' LINKAGE SECTION'
         BE    WDMAPDNE
         CLC   15(11,R3),=C' PROCEDURE '
         BE    WNOLINK
         CLC   1(12,R3),=C'*STATISTICS*'
         BE    WNOCLST
         CLI   0(R3),C'1'              HOF
         BE    DMAPOUT2
         CLI   15(R3),C'*'
         BE    DMAPOUT2
         CLI   15(R3),C'-'
         BE    DMAPOUT2
         LA    R4,90(R3)
         LA    R3,15(R3)
LOOPNOBK EQU   *
         LA    R3,1(R3)
         CR    R3,R4                    LOCATE THE FIRST NON-BLANK IN
         BE    DMAPOUT2
         CLI   0(R3),C' '               LINE AFTER COL 7
         BE    LOOPNOBK
TESTLVL  EQU   *
         CLC   0(2,R3),=C'FD'
         BE    DATANM
         CLC   0(2,R3),=C'SD'
         BE    DATANM
         CLI   0(R3),C'0'
         BL    DMAPOUT2
         CLI   0(R3),C'9'
         BH    DMAPOUT2
         CLI   1(R3),C'0'
         BL    DMAPOUT2
         CLI   1(R3),C'9'
         BH    DMAPOUT2
DATANM   EQU   *
         LA    R3,2(R3)
LOOPNM   EQU   *
         LA    R3,1(R3)
         CR    R3,R4
         BE    DMAPOUT2
         CLI   0(R3),C' '
         BE    LOOPNM
         LR    R5,R3                   R5 POINTS AT BEGINNING OF NAME
         XR    R1,R1
DATANMFD EQU   *
         LA    R3,1(R3)
         CR    R3,R4
         BE    DMAPOUT2
         CLI   0(R3),C' '
         BE    DATACOM
         CLI   0(R3),C'.'
         BE    DATACOM
         LA    R1,1(R1)
         B     DATANMFD
DATACOM  EQU   *
         EX    R1,NAMECOMC
         BNE   TRYPREV
         LA    R14,DMAPOUT1
MERGELNE EQU   *
         LA    R3,INPUT
         MVC   BASE(7),57(R2)
         MVC   DISP(4),67(R2)
         MVC   DSDEF(10),90(R2)
         MVC   DNM(8),12(R2)
         MVC   TYPE(10),100(R2)
         BR    R14
DMAPOUT1 EQU   *
         MVC   PREVDMAP(121),0(R2)
READAGN1 EQU   *
         GET   LWORK
         CLI   0(R1),C'1'              HOF
         BE    READAGN1
         LR    R2,R1
DMAPOUT2 EQU   *
         LA    R3,INPUT
         PUT   ZPRINT,(3)
         XC    SPACE(42),SPACE          CLEAP PRINT LINE
         CLI   0(R3),C'1'
         BNE   MERGEDMP
         MVC   TITLE(121),0(R3)        REHRESH TITLE IF HOF
         B     MERGEDMP
TRYPREV  EQU   *
         EX    R1,NAMECOMP
         BNE   TRYNEXT
         LA    R2,PREVDMAP
         LA    R14,DMAPOUT1
         B     MERGELNE
TRYNEXT  EQU   *
         MVC   PREVDMAP(121),0(R2)
         LR    R4,R1
READAGN2 EQU   *
         GET   LWORK
         CLI   0(R1),C'1'              HOF
         BE    READAGN2
         LR    R2,R1
         LA    R14,DMAPOUT2
         EX    R4,NAMECOMC
         BE    CHKINDEX
         LA    R3,INPUT
         MVC   BASE(32),=C' NO MATCH FOUND-ERRORS MAY OCCUR'
         B     DMAPOUT2
CHKINDEX EQU   *
         CLC   PREVDMAP+100(8),=C'INDEX-NM'
         BNE   MERGELNE
         LA    R14,DMAPOUT1
         B     MERGELNE
NOCLIST  EQU   *
         MVI   CLST,X'FF'
NOLINK   EQU   *
         MVI   LINK,X'FF'
DMAPDONE EQU   *
         MVI   DMAP,X'FF'
         B     WHERENOW
WDMAPDNE EQU   *
         PUT   ZPRINT,INPUT
         B     DMAPDONE
WNOLINK  EQU   *
         PUT   ZPRINT,INPUT
         B     NOLINK
WNOCLST  EQU   *
         PUT   ZPRINT,INPUT
         B     NOCLIST
NOCLSTL  EQU   *
         MVI   CLST,X'FF'
         B     DMAPDONE
         EJECT
*  THIS SECTION HANDLES THE SUPRESSION OF THE LINKAGE SECTION.
PREHUNT  EQU   *
         MVI   0(R1),C'1'
         BAL   R5,PRINT
         MVI   ERRORS,X'FF'
         B     WHERENOW
         SPACE 1
HUNTLINK EQU   *
         GET   SYSPRINT,INPUT
         PUT   ZPRINT,INPUT
HUNTLNK2 EQU   *
         LA    R1,INPUT
         CLC   15(16,R1),=C' LINKAGE SECTION'
         BE    LINK2
         CLC  15(11,R1),=C' PROCEDURE '
         BE    LINKDONE
         CLC   2(12,R1),=C'*STATISTICS*'
         BE    NOCLIST
         CLI   0(R1),C'1'
         BNE   HUNTLINK
         MVC   TITLE,0(R1)
         B     HUNTLINK
         SPACE 1
LINKSECT EQU   *
         LA    R3,INPUT
         PUT   ZPRINT,(3)
         GET   SYSPRINT,(3)
         CLC   84(2,R3),=C'LV'         LEVEL INDICATOR PRESENT
         BNE   LINKSECT
         LR    R1,R3
         BAL   R5,PRINT                PRINT L.S. HEADING
LINK2    EQU   *
         GET   SYSPRINT,INPUT
         LA    R1,INPUT
         CLI   0(R1),C'1'              IS IT PAGE HEADER?
         BNE   ISITPROC                NO
         MVC   TITLE,0(R1)
         B     LINK2
ISITPROC EQU   *
         CLC   =C' PROCEDURE ',15(R1)
         BE    ENDLINK                 YES - JUMP
         CLC   =C'*STATISTICS*',1(R1)  IS THIS
         BE    ENDLINK                   THE END
         CLC   =C' 01 ',15(R1)         *
         BE    LINKSECT                *  IF AN 01
         CLC   =C' 01 ',16(R1)         *  LEVEL RECORD
         BE    LINKSECT                *  IN L.S.
         CLC   =C' 01 ',17(R1)         *  SECTION
         BE    LINKSECT                *  GO AND
         CLC   =C' 01 ',18(R1)         *  PRINT IT
         BE    LINKSECT                *
         B     LINK2
         SPACE 1
ENDLINK  EQU   *
         LR    R3,R1
         LA    R1,TITLE
         BAL   R5,PRINT
         LR    R1,R3
         MVI   0(R1),C'0'
         BAL   R5,PRINT
         CLI   INPUT+1,C'*'
         BE    NOCLIST
LINKDONE EQU   *
         MVI   LINK,X'FF'
         B     WHERENOW
         SPACE 1
*  THIS SECTION HANDLES THE SUPRESSION OF THE UNWANTED ERRORS.
HUNTERRS EQU   *
         LA    R7,57
         B     NEXT
REDUCE   EQU   *
         BCT   R7,PAGEOK
         LA    R7,58                   RESET LINE COUNT
         PACK  PFIELD,TITLE+1(4)       PICK PAGE NO. FROM TITLE
         AP    PFIELD,=P'1'            ADD 1 TO PAGE NO.
         OI    PFIELD+3,X'0F'          MAKE IT PRINTABLE
         UNPK  TITLE+1(4),PFIELD(4)    REPLACE PAGE NO. IN TITLE
         CLI   TITLE+1,C'0'
         BNE   TITPRT
         MVI   TITLE+1,C' '
         CLI   TITLE+2,C'0'
         BNE   TITPRT
         MVI   TITLE+2,C' '
         CLI   TITLE+3,C'0'
         BNE   TITPRT
         MVI   TITLE+3,C' '
TITPRT   EQU   *
         PUT   ZPRINT,TITLE            PRINT HOF & TITLE
         MVI   INPUT,C'-'              MOVE IN SPACING FOR NEXT LINE
PAGEOK   EQU   *
         BR    R9
NEXT     EQU   *
         GET   SYSPRINT,INPUT
         LA    R1,INPUT
         CLC   =C' IKF2125I-W ',8(R1)    SPECIFIC ERROR
         BE    NEXT                        MESSAGE DONT
         CLC   =C' SECTIONS,',23(R1)         PRINT IT
         BE    NEXT
         CLC   =C'LEVEL LINKAGE EDITOR',6(R1)
         BE    PREHUNT                 GO BACK TO START
         CLI   0(R1),C'1'              IS IT HEAD OF PAGE?
         BE    ERREND
         MVI   INPUT,C' '
         BAL   R9,REDUCE
         PUT   ZPRINT,INPUT
         B     NEXT
ERREND   EQU   *
         CLC   =C'PP 5740-CB1',1(R1)   IS IT PAGE 1?
         BE    PREHUNT                 YES - START AT TOP AGAIN
         B     NEXT
         SPACE 1
PRINT    LR    R0,R1
         PUT   ZPRINT,(0)
         BR    R5
         EJECT
*   THIS SECTION HANDLES THE CLIST MERGE.
HUNTPROC EQU   *
         CLC   51(9,R2),=C'CONDENSED'
         BE    CNDFND
FINDCND  EQU   *
         GET   LWORK
         CLC   51(9,R1),=C'CONDENSED'
         BE    CNDFND
         CLC   1(12,R1),=C'*STATISTICS*'
         BE    CLSTDONE
         B     FINDCND
CNDFND   EQU   *
         GET   LWORK                    GET FORST CLIST RECORD
         GET   LWORK                   GET PASS SPACE RECORD
         LA    R2,1(R1)
         LA    R4,120(R1)
         LA    R3,INPUT
HUNTPRC2 EQU   *
         CLC   15(11,R3),=C' PROCEDURE '
         BE    CLSTMRGE
         CLC   8(17,R3),=C'INTRNL NAME   LVL'   DMAP PRESENT
         BE    CLSTDONE
         CLC   26(10,R3),=C'MEMORY MAP'
         BE    CLSTDONE
         CLC   1(12,R3),=C'*STATISTICS*'
         BE    CLSTDONE
         GET   SYSPRINT,(3)
         PUT   ZPRINT,(3)
         B     HUNTPRC2
CLSTMRGE EQU   *
         XC    SPACE(42),SPACE
         GET   SYSPRINT,(3)
         CLI   0(R3),C'1'               HOF
         BE    CLSTOUT
CLSTCOM  EQU   *
         CLC   8(17,R3),=C'INTRNL NAME   LVL'   DMAP PRESENT
         BE    WCLSTDNE
         CLC   26(10,R3),=C'MEMORY MAP'
         BE    WCLSTDNE
         CLC   1(12,R3),=C'*STATISTICS*'
         BE    WCLSTDNE
         CLI   0(R3),C'1'
         BE    CLSTOUT
CLSTCOMP EQU   *
         LA    R7,1(R3)
TESTZERO EQU   *
         CLI   0(R7),C'0'                FIND FIRST NOV-ZERO CHAR
         BNE   NOFND
         LA    R7,1(R7)
         B     TESTZERO
NOFND    EQU   *
         LR    R6,R7
TESTBLK  EQU   *
         LA    R6,1(R6)
         CLI   0(R6),C' '
         BE    LNGTH
         B     TESTBLK
LNGTH    EQU   *
         SR    R6,R7
         BCTR  R6,0                     MACHINE LENGTH FOR COMPARE
CLSTBLK  EQU   *
         LR    R5,R2
TESTBLK2 EQU   *
         CLI   0(R5),C' '
         BNE   CCOMP
         LA    R5,1(R5)
         B     TESTBLK2
CCOMP    EQU   *
         EX    R6,LINECOMP
         BE    MERGECL
         BL    CLSTOUT
         CLC   9(5,R2),=C'ENTRY'
         BE    ENTLINE
CLST4    EQU   *                       LINE NOS OF UNEQUAL LENGHT
         BCTR  R7,0                    RESET POINTERS AND COMPARE
         LA    R6,1(R6)                AGAIN
         B     CCOMP
ENTLINE  EQU   *
         XC    PREVDMAP(133),PREVDMAP
         MVI   PREVDMAP,C' '           SINGLE SPACE
         MVC   PREVDMAP+91(18),9(R2)   MOVE IN ENTRY ADDRESS
         PUT   ZPRINT,PREVDMAP
CLSTNXT  EQU   *
         LA    R2,45(R2)
         CR    R2,R4                    END OF  LINE
         BL    CLSTBLK                  NO COMPARE AGAIN
CLSTRD   EQU   *
         GET   LWORK
         CLI   0(R1),C'1'
         BE    CLSTRD
         LA    R2,1(R1)
         LA    R4,120(R2)
         B     CLSTBLK
CLSTOUT  EQU   *
         PUT   ZPRINT,(3)
         XC    NOVERB,NOVERB
         CLI   0(R3),C'1'
         BNE   CLSTMRGE
         MVC   TITLE(121),0(R3)
         B     CLSTMRGE
MERGECL  EQU   *
         L     R15,NOVERB
         B     TABLE(R15)
TABLE    B     FIRSTVB
         B     SECVB
         B     THRVB
         B     CLSTNXT
FIRSTVB  EQU   *
         MVC   ADDR(7),20(R2)
VBMVE    EQU   *
         C     R15,=F'12'
         BE    CLSTNXT
         LA    R15,4(R15)
         ST    R15,NOVERB
         B     CLSTNXT
SECVB    EQU   *
         MVC   VERB2(4),9(R2)
         MVI   VERB2+4,C' '
         MVC   ADDR2(7),20(R2)
         B     VBMVE
THRVB    EQU   *
         MVC   VERB3(4),9(R2)
         MVI   VERB3+4,C' '
         MVC   ADDR3(7),20(R2)
         B     VBMVE
WCLSTDNE EQU   *
         PUT   ZPRINT,INPUT
CLSTDONE EQU   *
         MVI   CLST,X'FF'
         B     WHERENOW
         BR    R5
         SPACE 1
         EJECT
*  THIS SECTION HANDLES THE SUPRESSION OD THE DATA-MAP AND
*  THE CONDENSED LISTING. IT BRANCHES OUT TO HANDLE THE CROSS-
*  REFERENCE AND ERRORS.
HUNTPOS  EQU   *
         LA    R3,INPUT
         LA    R5,FIRSTIME
HUNTPOS1 EQU   *
         CLC   8(17,R3),=C'INTRNL NAME   LVL'   DMAP PRESENT
         BE    HUNTPOS5
         CLC   51(9,R3),=C'CONDENSED'
         BE    HUNTPOS6
         CLC   26(10,R3),=C'MEMORY MAP'
         BE    HUNTPOS7                      TURN ON PRINTING
         CLC   1(12,R3),=C'*STATISTICS*'
         BE    HUNTPOS7                      TURN ON PRINTING
         CLC   43(15,R3),=C'CROSS-REFERENCE'
         BE    HUNTPOS8
         CLC   1(11,R3),=C' PROCEDURE '      TURN ON PRINTING
         BE    HUNTPOS7
         CLC   2(20,R3),=C'CARD   ERROR MESSAGE'
         BE    HUNTPOS9
         CLC   1(11,R3),=C'PP 5740-CB1'
         BE    HUNTEND
         CLC   6(20,R3),=C'LEVEL LINKAGE EDITOR'
         BE    HUNTEND
         BR    R5
HUNTPOS2 EQU   *
         CLI   0(R3),C'1'               HOF
         BE    HUNTPOS4
         PUT   ZPRINT,(3)
HUNTPOS3 EQU   *
         GET   SYSPRINT,(3)
         B     HUNTPOS1
FIRSTIME EQU   *
         LA    R5,HUNTPOS2
         B     HUNTPOS3
HUNTPOS5 EQU   *
         CLI   SAVEPARM+1,X'00'         SUPRESS DMAP
         BNE   HUNTPOS2                 NO
         LA    R5,HUNTPOS3
         BR    R5
HUNTPOS6 EQU   *
         CLI   SAVEPARM+2,X'00'         SUPRESS CLIST
         BNE   HUNTPOS2                 NO
         LA    R5,HUNTPOS3
         BR    R5
HUNTPOS7 EQU   *
         BAL   R6,HUNTPUT
         LA    R5,HUNTPOS2
         B     HUNTPOS3
HUNTPOS4 EQU   *
* PRINT AN HOF WITH TITLE
         LA    R7,1
         BAL   R9,REDUCE
         B     HUNTPOS3
HUNTPOS8 EQU   *
         BAL   R6,HUNTPUT
         CLI   XREF,X'FF'
         BNE   HUNTXREF
         LA    R5,HUNTPOS2              TURN ON PRINTING
         B     HUNTPOS3
HUNTPOS9 EQU   *
         BAL   R6,HUNTPUT
         CLI   ERRORS,X'FF'
         BNE   HUNTERRS
         LA    R5,HUNTPOS2              ENSURE PRINTING OF ERRORS
         B     HUNTPOS3
HUNTEND  EQU   *
         BAL   R6,HUNTPUT
         B     WHERNOW2
HUNTPUT  EQU   *
         LA    R4,FIRSTIME              PUT OUT RECORD IF NOT
         CR    R4,R5
         BER   R6                         FIRST TIME WHEN IT HAS
         PUT   ZPRINT,(3)
         BR    R6
         EJECT
*   THIS ECTION HANDLES THE GENERATION OF THE SHORT CROSS-REFERENCE.
HUNTXREF EQU   *
         LA    R5,5
         LA    R3,INPUT
XREFPOS  EQU   *
         GET   SYSPRINT,(3)
         PUT   ZPRINT,(3)
         BCT   R5,XREFPOS
         LA    R7,51
XREFEXM  EQU   *
         GET   SYSPRINT,(3)
         CLC   1(11,R3),=C' PROCEDURE '    TEST END OF XREF
         BE    XREFDONE
         CLC   2(20,R3),=C'CARD   ERROR MESSAGE'
         BE    XREFDONE
         CLC   1(11,R3),=C'PP 5740-CB1'
         BE    XREFDONE
         CLI   0(R3),C'1'
         BE    XREFEXM
         CLC   43(6,R3),=C'      '     NAME USED IN COMPILE
         BE    XREFEXM                 NO - OMIT
         MVI   INPUT,C' '
         BAL   R9,REDUCE               TEST NEW PAGE
         PUT   ZPRINT,INPUT
         B     XREFEXM
XREFDONE EQU   *
         CLI   2(R3),C'C'
         BE    XREFEND
         LA    R7,1
         BAL   R9,REDUCE
XREFEND  EQU   *
         PUT   ZPRINT,(3)
         MVI   XREF,X'FF'
         B     WHERENOW
         EJECT
CLOSDOWN EQU   *
         CLOSE (ZPRINT,,SYSPRINT,,LWORK)
END      ZEXT
*********   EXECUTED INSTRUCTIONS   **********
NAMECOMC CLC   0(1,R5),26(R2)
NAMECOMP CLC   0(1,R5),PREVDMAP+26
LINECOMP CLC   0(1,R7),0(R5)            R7=LINE NO  R5= CLIST NO
         SPACE 5
SAVEPARM DS    F
PARMS    DS    0F
         DC    C'LINK'
         DC    C'DMAP'
         DC    C'CLST'
         DC    C'XREF'
EXIT     DS    0F
LINK     DC    X'00'                    SUPPRESS LINKAGE SECTION
DMAP     DC    X'00'                    COMBINE DMAP
CLST     DC    X'00'                    COMBINE CLIST
XREF     DC    X'00'                    GENERATE SHORT XREF
ERRORS   DC    X'FF'
PREVDMAP DC    133C' '
INPUT    DS    CL133
NOVERB   DC    F'0'
PFIELD   DS    CL4
TITLE    DS    CL121
         SPACE 1
ZPRINT   DCB   DDNAME=ZPRINT,LRECL=133,      OUTPUT DCB                *
               DSORG=PS,MACRF=PM,RECFM=FBA
SYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,                               *
               MACRF=GM,EODAD=CLOSDOWN
LWORK    DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=GL,EODAD=NEXTREC
         SPACE 2
         LTORG
         SPACE 2
OUTPUT   DSECT
HOF      DS    CL1                      PRINT LINE LAYOUT FOR
COBOL    DS    CL90
SPACE    DS    CL1
BASE     DS    CL7                      OUTPUT FOR
DISP     DS    CL4
DNM      DS    CL8                      DATA MAP COMPRESSION  AND
DSDEF    DS    CL10
TYPE     DS    CL10                     CONDENSED LISTING MAP
         ORG BASE
ADDR     DS    CL7
VERB2    DS    CL5
ADDR2    DS    CL7
VERB3    DS    CL5
ADDR3    DS    CL7
         SPACE 2
         END
