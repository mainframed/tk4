         PRINT NOGEN
         TITLE 'GENERAL PURPOSE INTERNAL SORT  BY G M DEARLOVE 13/5/69'
*
*              CALL ROUTINE USING A,B,C,D WHERE:-
*
*                   A = ADDRESS OF START POINT OF RECORDS BLOCK
*                       WHICH IS TO BE SORTED
*
*                   B = ADDRESS WHERE TO FIND RECORD LENGTH
*                       HELD IN BINARY IN A FULL WORD
*
*                   C = ADDRESS WHERE TO FIND KEY LENGTH
*                       HELD IN BINARY IN A FULL WORD
*
*                   D = ADDRESS WHERE TO FIND NUMBER OF RECORDS TO
*                       BE SORTED  HELD IN BINARY IN A FULL WORD
*
*                   NOTES:- BOTH RECORD LENGTH AND KEY LENGTH MUST BE
*                           LESS OR EQUAL TO 256 BYTES.
*                           THE KEY IS ASSUMED TO BE AT THE FRONT
*                           OF EACH RECORD.
*
         EJECT
ZZSORT01 CSECT
         IN    12,PARM=YES
         SPACE 2
         L     A,0(1)              START OF SORT AREA
         L     G,4(1)              RECORD LENGTH(ADDRESS)
         L     E,0(G)              RECORD LENGTH (BINARY)
         L     G,12(1)             NUMBER OF RECORDS(ADDRESS)
         LR    D,E                 RECORD LENGTH TO D
         MH    D,2(G)              CALCULATE SIZE OF RECORD AREA
         AR    D,A                 ADD ON START ADD (GIVES END + 1)
         SPACE 2
         LR    G,E                 RECORD LENGTH
         BCTR  G,0                 LESS 1
         STC   G,MOVE1+1           INSERT LENGTH CODES FOR MOVE INSTRS
         STC   G,MOVE2+1               -DO-
         STC   G,MOVE3+1               -DO-
         SPACE 2
         L     G,8(1)              ADDRESS OF KEY LENGTH
         L     G,0(G)              KEY LENGTH (BINARY)
         BCTR  G,0                 LESS 1
         STC   G,COMPARE+1         INSERT LENGTH CODE IN COMPARE INSTR
         SPACE 2
         LR    0,E                 FOR GETMAIN
         GETMAIN R,LV=(0)          GET WORK-AREA
         SPACE 2
A01      EQU   *                   INITIALISE SCAN
         LR    B,A                 SET CURRENT START POINT
         LR    C,B                 ASSUME FIRST IS LOWEST
         AR    C,E                 SET FIRST SEARCH AT SECOND RECORD
         CR    C,D                 TEST IF SORTING IS COMPLETE
         BE    A05                 YES
         SPACE 2
A02      EQU   *                   SCAN ROUTINE
         CR    C,D                 TEST IF CURRENT SCAN COMPLETE
         BE    A04                 YES
COMPARE  CLC   0(1,B),0(C)         COMPARE KEYS
         BNH   A03                 NO CHANGE IN LOWEST SO FAR
         LR    B,C                 ALTER B TO REFLECT LOWEST FOUND
A03      AR    C,E                 STEP UP C BY RECORD LENGTH
         B     A02                 BRANCH TO CONTINUE SCAN
         SPACE 2
A04      EQU   *                   SWOP ROUTINE
         CLR   A,B                 TEST IF NO NEED TO SWOP
         BE    *+22                NO
MOVE1    MVC   0(1,F),0(A)         A TO F
MOVE2    MVC   0(1,A),0(B)         B TO A
MOVE3    MVC   0(1,B),0(F)         F TO B
         AR    A,E                 STEP UP A BY RECORD LENGTH
         B     A01                 BRANCH TO COMMENCE SCAN AGAIN
         SPACE 2
A05      EQU   *
         LR    0,E                 FOR FREEMAIN
         FREEMAIN R,LV=(0),A=(1)   FREE WORK-AREA
         SPACE 2
         OUT
         SPACE 2
A        EQU   2                   CURRENT START POINT
B        EQU   3                   CURRENT LOWEST KEY
C        EQU   4                   CURRENT SEARCHING POSITION
D        EQU   5                   LAST RECORD ADDRESS + 1 RECORD LGTH
E        EQU   6                   RECORD LENGTH
F        EQU   1                   WORK AREA (SIZE OF A RECORD)
G        EQU   8                   WORKING/TEMPORY REGISTER
         END
