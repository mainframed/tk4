         TITLE 'SUPER LINK'
* THIS MODULE IS USED TO INVOKE PROGRAMS VIA JCL AND TO HANDLE SORTS SO
* THAT CORE IS USED EFFICIENTLY.
*
* TO INVOKE CODE -
* //STEPNAME EXEC PGM=CAVLINK,PARM='FIELD1,FIELD2/FIELD3'
* FOLLOWED BY JCL REQUIRED BY THE PROGRAM
*
* WHERE FIELD1 - IS THE THE NAME OF THE PROGRAM TO BE EXECUTED.
* THE NAME MUST HAVE ANY TRAILING BLANKS REMOVED. THE PROGRAM MUST
* RESIDE IN STEPLIB (OR IF OMMITTED) THE JOBLIB LIBRARIES.
*
*       FIELD2 - IS THE MAXIMUM PERMITTED RETURN CODE TO BE SET BY
* THE PROBLEM PROGRAM. IF THIS VALUE IS EXCEEDED AN ABEND (NO DUMP)
* WILL OCCUR WITH ABEND CODE EQUAL TO THE RETURN CODE (IE RETURN
* CODE 'NNNN' WILL CAUSE THE ABEND 'UNNNN').
* THIS FIELD IS 1-4 NUMERICS, LEADING ZEROS IGNORED. TO AVOID TESTING
* THE RETURN CODE, SET FIELD2 AS 4096 OR ABOVE.
* IF FIELD2 IS OMMITTED, AN ABEND WILL ONLY OCCUR IF THE PROBLEM
* SETS A NON-ZERO RETURN CODE.
**** NOTE A PROBLEM PROGRAM WHICH DOES NOT SET A VALID RETURN CODE (IE.
* REGISTER 15 NOT NEGATIVE AND LESS THAN 4096) IS ASSUMED TO HAVE SET
* A RETURN CODE OF 0.
*
*       FIELD3 - IS THE EXECUTE PARM FIELD TO BE PASSED TO THE PROBLEM
* PROGRAM.
*
*
************ SORT / MERGE HANDLING ************
* IF THE PROGRAM TO BE EXECUTED IS EITHER 'SORT' OR 'IERRCO00' AND
* NO FIELD3 IS PRESENT, CAVLINK PASSES TO THE SORT THE PARM FIELD THE
* EQUIVALENT OF 'MSG=AP,CORE=NNNNNN' WHERE NNNNNN IS THE AMOUNT OF CORE
* AVAILABLE LESS 3K.
* THUS SORTS AND MERGES WILL RUN IN ANY SIZE PARTITION (OR ALMOST) AND
* DYNAMICALLY DETERMINE THE MAXIMUM AMOUNT OF CORE AVAILABLE.
*
*
* EXAMPLES OF THE EXEC CARD -
* // EXEC PGM=CAVLINK,PARM=SORT
* // EXEC PGM=CAVLINK,PARM='SORT/CORE=40000'
* // EXEC PGM=CAVLINK,PARM=IEBUPDTE
* // EXEC PGM=CAVLINK,PARM='IEHMOVE,4'     (1NLOADS TO TAPE)
* // EXEC PGM=CAVLINK,PARM='FRED,8/PARMS REQD'
*
CAVLINK  START
*      AUTHOR - A.G.SIBBALD - C.A.V. LIMITED
* USE OF REGS
R0       EQU   0
R1       EQU   1
R2       EQU   2 ADDRESS IN PGMNAME BUCKET
R3       EQU   3 ADDRESS WITHIN EXEC PARM
R4       EQU   4 LEN OF EXEC PARM LEFT
R5       EQU   5 ADDRESS IN RCDLIM BUCKET
R6       EQU   6 NOT USED
R7       EQU   7 NOT USED
R8       EQU   8 NOT USED
R9       EQU   9 NOT USED
R10      EQU   10 NOT USED
R11      EQU   11 NOT USED
R12      EQU   12 NOT USED
R13      EQU   13 BASE REG
R14      EQU   14
R15      EQU   15
         TITLE 'ENTRY ROUTINE'
         SAVE  (14,12)
         BAL   R15,80(R15) BRANCH ROUND SAVE AREA & GET IT ADDRESS
         USING *,13
         DC    18F'0' SAVE AREA
         ST    R13,4(R15) SET OLD SAVE AREA ADD IN NEW SAVE AREA
         ST    R15,8(R13) SET NEW SAVE AREA ADD IN OLD SAVE AREA
         LR    R13,R15 SWITCH SAVE AREAS
         L     R3,0(R1) PICK UP PARM ADDRESS
         LH    R4,0(R3) PICK UP PARM LEN
         LA    R3,2(R3) INC TO PARM DATA
         LTR   R4,R4 TEST LEN
         BNP   EA10 ERROR - NO PARMS
         TITLE 'EXTRACT PROGRAM NAME'
         LA    R2,PGMNAME POINT AT PGM NAME BUCKET
         LA    R5,RCDLIM POINT AT RETURN CODE LIMIT
AA10     LTR   R4,R4 TEST LEN LEFT
         BNP   DA10 PARMS EXHAUSTED
         CLI   0(R3),C'A' TEST FOR VALID CHAR
         BL    AA30 NOT ALPHAMERIC
AA20     MVC   0(1,R2),0(R3) SET CHAR IN PGMNAME
         LA    R2,1(R2) INC TO NEXT CHAR
         LA    R3,1(R3) INC TO NEXT CHAR
         BCTR  R4,0 REDUCE LEN
         C     R2,=A(PGMNAME+8) TEST FOR COMPLETION
         BL    AA10 CONTINUE WITH NEXT CHAR
         BH    EA10 ERROR - NAME TOO LONG
         LTR   R4,R4 TEST LEN LEFT
         BNP   DA10 END OF PARMS
         CLI   0(R3),C',' TEST NEXT CHAR
         BE    BA10 GO EXTRACT RETURN CODE LIMIT
         CLI   0(R3),C'/' TEST IF DELIMITER
         BE    CA10 GO EXTRACT PROBLEM PGM PARMS
         B     EA10 ERROR - DELIMITER MISSING
AA30     CLI   0(R3),C'$' TEST FOR NATIONAL CHARACTERS
         BE    AA20 CONTINUE NORMALLY
         CLI   0(R3),C'#'
         BE    AA20 CONTINUE NORMALLY
         CLI   0(R3),C'@'
         BE    AA20 CONTINUE NORMALLY
         CLI   0(R3),C',' COMMA OK
         BE    BA10 GO EXTRACT RETURN CODE LIMIT
         CLI   0(R3),C'/' DELIMITER OK
         BE    CA10 GO EXTRACT PROBLEM PROGRAM PARMS
         B     EA10 ERROR - INVALID CHAR
         TITLE 'EXTRACT RETURN CODE LIMIT'
BA10     LA    R3,1(R3) SKIP PAST COMMA
         BCTR  R4,0 DEC LEN LEFT
         LTR   R4,R4 TEST LEN LEFT
         BNP   BA30 PARMS EXHAUSTED
         CLI   0(R3),C'0' TEST FOR NUMERICS
         BL    BA20 NON-NUMERIC
         CLI   0(R3),C'9' TEST FOR NUMERICS
         BH    EA20 ERROR - INVALID CHAR
         MVC   0(1,R5),0(R3) SET CHAR IN RCDLIM
         LA    R5,1(R5) INC TO NEXT CHAR
         C     R5,=A(RCDLIM+4) IS FIELD FULL
         BNH   BA10 GO EXAMINE NEXT CHAR
         B     EA20 ERROR - RETURN CODE LIMIT TOO LONG
BA20     CLI   0(R3),C'/' IS DELIMITER PRESENT
         BNE   EA20 ERROR - INVALID CHAR
BA30     CLI   RCDLIM+3,C' ' IS NO RIGHT-ADJUSTED
         BNE   BA40 YES - GO CONVERT TO BINARY
         MVC   RCDLIM+3(1),RCDLIM+2 RIGHT ADJUST 1 CHAR AT TIME
         MVC   RCDLIM+2(1),RCDLIM+1
         MVC   RCDLIM+1(1),RCDLIM
         MVI   RCDLIM,C'0' INSERT LEADING ZERO
         B     BA30 GO TRY AGAIN
BA40     PACK  DOUBLEWD,RCDLIM GET PACKED
         CVB   R15,DOUBLEWD GET IN BINARY
         STH   R15,RETCDE SAVE FOR FUTURE USE
         TITLE 'EXTRACT PROBLEM PGM PARMS'
CA10     LA    R3,1(R3) SKIP PAST /
         BCTR  R4,0 DEC LEN LEFT
         LTR   R4,R4 TEST LEN LEFT
         BNP   DA10 PARMS EXHAUSTED
         STH   R4,PARMLEN SET UP PARM LEN
         BCTR  R4,0 PREPARE FOR EX INSTN
         EX    R4,CA20 SET PARMS IN PARM AREA
         B     DA10 GO EXECUTE PROBLEM PGM
CA20     MVC   PARMLEN+2(0),0(R3)
         TITLE 'EXECUTE THE PROBLEM PROGRAM'
DA10     CLC   PGMNAME,=CL8'SORT'
         BE    FA10 SORT/MERGE REQUIRES SPECIAL TREATMENT
         CLC   PGMNAME,=CL8'IERRCO00'
         BE    FA10 SORT/MERGE REQUIRES SPECIAL TREATMENT
         CLI   PGMNAME,C' ' TEST 1ST CHAR IN PGM NAME
         BE    EA10 ERROR - NAME NOT SUPPLIED
         CLI   PGMNAME,C'Z' TEST 1ST CHAR IN PGM NAME
         BH    EA10 ERROR - PGM NAME CANT START WITH NUMERIC
DA15     LINK  EPLOC=PGMNAME,PARAM=(PARMLEN),VL=1
         LTR   R15,R15 TEST RETURN CODE
         BNP   DA20 RETURN CODE NOT SUPPLIED OR ZERO
         CH    R15,RETCDE TEST VS MAX VALUE
         BNH   DA30 USE THE RETURN CODE IF NOT TOO LARGE
         CH    R15,=H'4095' WAS RETURN CODE VALID
         BH    DA20 RETURN CODE NOT SUPPLIED
         LA    R1,0(R15) SET COMPLETION CODE
         SVC   13 ISSUE ABEND SVC
DA20     SR    R15,R15 ASSUME RETURN CODE OF ZERO
DA30     L     R13,4(R13) PREPARE TO RETURN
         RETURN (14,12),RC=(15)
         TITLE 'ERROR CONDITIONS'
EA10     WTO   'CAVLINK-01 PGM NAME INVALID'
         B     EB10 GO ABEND
EA20     WTO   'CAVLINK-02 RETURN CODE LIMIT INVALID'
         B     EB10 GO ABEND
EB10     SR    R1,R1 USE ZERO COMPLETION CODE
         SVC   13 ISSUE ABEND SVC
         TITLE 'SORT PROGRAM PROCESSING'
FA10     LH    R15,PARMLEN PICK UP PARAMETER LENGTH
         LTR   R15,R15 TEST THE LENGTH
         BNZ   DA15 USE THE PARMS SUPPLIED
         GETMAIN VC,LA=CORESIZE,A=CORESULT SEE HOW MUCH IS AVAILABLE
         LTR   R15,R15 TEST IF ANY CORE ALLOCATED
         BNZ   FA20 ERROR - NO CORE AVAILABLE - USE DEFAULTS
         FREEMAIN V,A=CORESULT FREE THE CORE GOT
         L     R15,CORESULT+4 PICK UP LENGTH AVAILABLE
         SH    R15,OVERHEAD ALLOW CORE OVERHEAD REQUIRED
         BNP   FA20 ERROR - NOT ENOUGH CORE - USE DEFAULTS
         CVD   R15,DOUBLEWD GET LENGTH IN PACKED
         UNPK  PARMCORE(7),DOUBLEWD+4(4) NOW IN EBCDIC
         MVC   PARMCORE(6),PARMCORE+1 DROP LEADING CHARACTER
         OI    PARMCORE+5,C'0' REMOVE LOW-ORDER ZONE
FA20     LA    R15,18 GET SORT PARM LENGTH
         STH   R15,PARMLEN SET IN ACTUAL PARM LIST
         B     DA15 GO EXECUTE THE SORT/MERGE PROGRAM
         TITLE 'CONSTANTS AND AREAS'
DOUBLEWD DS    D
CORESIZE DC    F'16000',F'999992' MIN AND MAX CORE SIZES
CORESULT DC    2F'0' RESULT OF THE VARIABLE GETMAIN
PGMNAME  DC    CL8' ',CL4'*'
RCDLIM   DC    CL4' ',CL4'*'
         DC    0F'0',H'0' ENSURE ALIGNMENT
PARMLEN  DC    H'0',CL12'MSG=AP,CORE='
PARMCORE DC    CL6'042000',82C'.'
RETCDE   DC    H'0'
OVERHEAD DC    H'3072' CORE OVERHEAD
         END
