         MACRO
&NAME    LATCH &A,&B,&VL,&TYPE=
         CNOP  0,4
&NAME    DS    0H
         AIF   ('&TYPE' EQ 'LINK').BA02
         AIF   (K'&B NE 0).BA01
         ST    R1,L1&SYSNDX+4      SAVE ADDRESS OF PARAMETER LIST
         B     *+12                BRANCH AROUND CONSTANTS
L1&SYSNDX DS    A                  ENTRY POINT ADDRESS
         DS    A                   PARAMETER LIST ADDRESS
L2&SYSNDX BC   0,L3&SYSNDX         BRANCH ROUND LOAD AFTER 1ST TIME
         LOAD  EP=&A
         ST    R0,L1&SYSNDX        SAVE ENTRY POINT ADDRESS
         OI    L2&SYSNDX+1,X'F0'   CAUSE BRANCH ROUND LOAD
L3&SYSNDX LM   R0,R1,L1&SYSNDX     LOAD ENTRY POINT & PARM LIST ADDR.
         LR    R15,R0         LOAD ENTRY POINT OF MODULE
         CALL  (15)
         MEXIT
.BA01    ANOP
L4&SYSNDX BC   0,L5&SYSNDX         BRANCH ROUND LOAD AFTER 1ST TIME
         LOAD  EP=&A
         ST    R0,L6&SYSNDX        SAVE ENTRY POINT ADDRESS
         OI    L4&SYSNDX+1,X'F0'   CAUSE BRANCH AROUND LOAD
         CNOP  0,4
         B     *+8                 BRANCH AROUND ENTRY POINT ADDRESS
L6&SYSNDX DS   A                   ENTRY POINT ADDRESS
L5&SYSNDX L    R0,L6&SYSNDX        LOAD ENTRY POINT ADDRESS
         LR    R15,R0         LOAD ENTRY POINT OF MODULE
         CALL  (15),&B,&VL
         MEXIT
.BA02    ANOP
         LINK  EP=&A,PARAM=&B
         MEND
         MACRO
&NAME    BZR   &R
&NAME    BCR   8,&R                BR ON ZERO
         MEND
         MACRO
&NAME    BNZR  &R
&NAME    BCR   7,&R                BR ON NOT ZERO
         MEND
         MACRO
&NAME    BMR   &R
&NAME    BCR   4,&R                BR ON MINUS OR MIXED
         MEND
         MACRO
&NAME    BOR   &R
&NAME    BCR   1,&R                BR ON OVERFLOW OR IF ONES
         MEND
         MACRO
&NAME    BPR   &R
&NAME    BCR   2,&R                BR ON PLUS
         MEND
         MACRO
&NAME    BNER  &R
&NAME    BCR   7,&R                BR ON NOT EQUAL
         MEND
         MACRO
&NAME    BNLR  &R
&NAME    BCR   11,&R               BR ON NOT LOW
         MEND
         MACRO
&NAME    BNHR  &R
&NAME    BCR   13,&R               BR ON NOT HIGH
         MEND
         MACRO
&NAME    BER   &R
&NAME    BCR   8,&R                BR ON EQUAL
         MEND
         MACRO
&NAME    BLR   &R
&NAME    BCR   4,&R                BR ON LOW
         MEND
         MACRO
&NAME    BHR   &R
&NAME    BCR   2,&R                BR ON HIGH
         MEND
         MACRO
&NAME    BNPR  &R
&NAME    BCR   13,&R               BR ON NOT PLUS
         MEND
         MACRO
&NAME    BNMR  &R
&NAME    BCR   11,&R               BR ON NOT MINUS
         MEND
         MACRO
&NAME    BNOR  &R
&NAME    BCR   14,&R               BR IF NOT ONES
         MEND
         MACRO
&NAME    NUMBR
         B     F&SYSNDX+6
A&SYSNDX DC    X'FF00FFFFFFFFFF00FFFFFFFFFF00'
B&SYSNDX DC    X'F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0'
C&SYSNDX DC    XL10'00'
         DC    X'FAFBFCFDFEFF'
X&SYSNDX DC    F'0'                SAVE AREA REGISTER 2
D&SYSNDX NC    B&SYSNDX,0(14)
E&SYSNDX XC    B&SYSNDX,=20X'F0'
F&SYSNDX TRT   0(0,14),C&SYSNDX-240
&NAME    MVI   D&SYSNDX+1,X'00'    SET INSTR. LENGTHS TO ZERO
         MVI   E&SYSNDX+1,X'00'
         MVI   F&SYSNDX+1,X'00'
         BCTR  15,0
         ST    2,X&SYSNDX          SAVE REGISTER 2
         MVC   B&SYSNDX,=20X'F0'   SET MASK TO LOWEST VALID CHARACTER
         EX    15,D&SYSNDX         EXECUTE AND WITH DATA LENGTH IN R15
         EX    15,E&SYSNDX
         BM    G&SYSNDX            ERROR IF ANY BITS LEFT ON
         EX    15,F&SYSNDX         EXECUTE TRANSLATE AND TEST
         BC    8,H&SYSNDX          IF  OK  BYPASS ERROR ROUTINE
G&SYSNDX LR    14,15               ERROR ROUTINE SETS REGS.14 & 15 EQL.
H&SYSNDX L     2,X&SYSNDX          RESTORE REGISTER 2
         MEND
         MACRO
&NAME    PROGOUT  &RC
         LCLA  &A
&NAME    L     R13,4(R13)
         LM    R14,R12,12(R13)
         AIF   (K'&RC GT 0).G01
         MNOTE 0,'RC OMITTED RC=0 ASSUMED'
&A       SETA  0
         AGO   .G03
.G01     ANOP
&A       SETA  &RC
         AIF   (&A GT 15).ERROR
.G03     LA    R15,&A.(R0,R0)
         BR    R14
         MEXIT
.ERROR   MNOTE 8,'INVALID RETURN CODE'
         MEND
         MACRO
&NAME    PROGIN
         ENTRY SAVEAREA
&NAME    SAVE  (14,12)
         BALR  R5,R0
         USING *,R5
         CNOP  6,8
         ST    R13,*+22
         LR    R6,R13
         LA    R13,*+12
         ST    R13,8(R6)
         B     *+76
SAVEAREA DS    9D
         MEND
         MACRO
&NAME    MODOUT &R1,&R2,&R3,&R4,&R5,&R6
         LCLA  &A,&B
&NAME    L     R13,4(R13)
         AIF   (K'&R6 EQ 0).M01
         MNOTE 1,'NO MORE THAN 5 REGS CAN BE SPECIFIED- REST IGNORED'
.M01     AIF   (K'&R1 EQ 0).M09
&A       SETA  &R1
         AIF   (&A GT 12).ERROR
&B       SETA  &A*4+20
         ST    &A,&B.(R13)
         AIF   (K'&R2 EQ 0).M09
&A       SETA  &R2
         AIF   (&A GT 12).ERROR
&B       SETA  &A*4+20
         ST    &A,&B.(R13)
         AIF   (K'&R3 EQ 0).M09
&A       SETA  &R3
         AIF   (&A GT 12).ERROR
&B       SETA  &A*4+20
         ST    &A,&B.(R13)
         AIF   (K'&R4 EQ 0).M09
&A       SETA  &R4
         AIF   (&A GT 12).ERROR
&B       SETA  &A*4+20
         ST    &A,&B.(R13)
         AIF   (K'&R5 EQ 0).M09
&A       SETA  &R5
         AIF   (&A GT 12).ERROR
&B       SETA  &A*4+20
         ST    &A,&B.(R13)
         AGO   .M09
.ERROR   MNOTE 1,'REGS 13,14 AND 15 CANNOT BE CHANGED- MACRO IGNORED'
         MEXIT
.M09     RETURN (14,12)
         MEND
         MACRO
&NAME    MODIN
         CNOP  4,8
&NAME    SAVE  (14,12)
         BALR  R5,R0
         USING *,R5
         ST    R13,*+26
         LR    R6,R13
         LA    R13,*+16
         ST    R13,8(R6)
         LM    R6,R10,0(R1)
         B     *+76
         DS    9D
         MEND
         MACRO
&NAME    LPYR  &INPUT,&NOLPYR
         AIF   ('&INPUT' NE ' ').NO
         MNOTE 'FIRST PARAMETER OMITTED'
         AGO   .N1
.NO      AIF   ('&NOLPYR' NE ' ').N2
         MNOTE 'SECOND PARAMETER OMITTED'
.N1      MNOTE 'GENERATION TERMINATED'
         MEXIT
.N2      ANOP
&NAME    TM    &INPUT,X'01'
         BO    &NOLPYR
         TM    &INPUT,X'12'
         BM    &NOLPYR
         MEND
         TITLE 'B4701 ''N''-UP HORIZONTAL FORMAT SUBROUTINE           '
B4701    CSECT
         ENTRY B470104             INSERT MODULE NUMBER CHANGING
B470104  EQU   *                   PROGRAMMER CODE TO V.M. LEVEL
         PRINT NOGEN
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE 3
***********************************************************************
*                                                                     *
*    MODULE B4701     PROGRAMMER D S THOMSON        ASSIGNED 15/06/71 *
*                                                                     *
*                           MODULE FUNCTIONS                          *
*                           ----------------                          *
*  SUBROUTINE TO PRODUCE AND PRINT REPORTS IN 'N'-UP HORIZONTAL       *
*  FORMAT. PARAMETER 2 MAY BE ANY LENGTH UP TO 132 BYTES. A NORMAL    *
*  REPORT IS PRODUCED VIA B3401 WHICH IS CALLED WHENEVER A PRINT      *
*  LINE HAS BEEN FILLED FROM INPUT IN P2. AT EOF (P2 = X'FF'),        *
*  ANY STORED DETAIL IS PRINTED AND FILE CLOSED VIA B3401             *
*                                                                     *
         EJECT
*                             PARAMETERS                              *
*                             ----------                              *
*  1. HEADINGS - MAX 8 LINES. ANY ASA CC'S MAY BE USED BUT THAT FOR   *
*     FIRST LINE MUST BE 1. POS 92-100 OF 2ND LINE MUST BE LEFT       *
*     BLANK FOR INSERTION OF SHEET NUMBER. IF 111-129 ALSO BLANK      *
*     DATE WILL BE INSERTED.                                          *
*                                                                     *
*  2. ITEM TO BE ACCUMULATED IN HORIZONTAL FORMAT. TO CLOSE PRINT     *
*     FILE SET 1ST BYTE TO X'FF'.                                     *
*                                                                     *
*  3. 1-BYTE INDICATOR.                                               *
*        C'0' -  NORMAL ROUTINES APPLY                                *
*                                                                     *
*        C'1' -  SKIP TO NEW PAGE FOR THIS ITEM                       *
*                                                                     *
*        C'2' -  AS C'1' BUT  RESTART SHEET-NUMBERING FOR NEW PAGE    *
*                                                                     *
*  4. FULLWORD CONTAINING NO OF LINES PER PAGE EXCLUDING HEADINGS     *
*                                                                     *
*  5. FULLWORD CONTAINING LENGTH OF P2.                               *
*                                                                     *
*  6. SINGLE BYTE ASA CC TO BE USED FOR ALL DETAIL LINES.             *
         SPACE 3
*
**  AMENDMENT TO MODULE B4701    BY MATTHEW RIGDEN NICHOLSON
*
**  ASSIGNED 11/08/71, EFFECTIVE 12/08/71 AMENDMENT IS 0.1
*
**  DETAILS OF AMENDMENT  THE SUBROUTINE NOW PRINTS 'NIL REPORT' IF IT
*   --------------------  IS CLOSED ON THE FIRST CALL.
*
***********************************************************************
*
**  AMENDMENT TO MODULE B4701    BY DAVID THOMSON
*
**  ASSIGNED 25/11/71, EFFECTIVE 26/11/71 AMENDMENT IS 0.2
*
**  DETAILS OF AMENDMENT MODULE DID NOT CHECK FOR FULL PAGE WHEN
*   -------------------- CALLED TO SKIP TO NEW PAGE.
*
***********************************************************************
*
**  AMENDMENT TO MODULE B4701    BY MATTHEW NICHOLSON
*
**  ASSIGNED 02/12/71, EFFECTIVE 03/12/71 AMENDMENT IS 0.3
*
**  DETAILS OF AMENDMENT   THIS SUBROUTINE NOW ALLOWS FOR THE CLEARING
*   -------------------- OF THE PRINT LINE WITHOUT CLOSING THE REPORT
*
***********************************************************************
*
**  AMENDMENT TO MODULE B4701    BY R.A.WHITELEY
*
**  ASSIGNED 16/03/72, EFFECTIVE 16/03/72 AMENDMENT IS 0.4
*
*   --------------------  THE PRINTER, MODULE SHOULD NOT PRINT A
**  DETAILS OF AMENDMENT  WHEN CLEARING THE PRINT-LINE WITHOUT CLOSING
*                         BLANK LINE WHEN NO STORED DETAIL.
*
*                         ALSO ASA CC NOW INSERTED AT START OF EACH
*                         NEW LINE.
***********************************************************************
*
**       MODULE - B4701       DATE 28/11/72  PROGRAMMER  P.A.DANIELSON
*
**                MODULE AMENDED TO CHANGE ALL SUBROUTINE CALLS TO
*                 USE THE DYNAMIC LINKAGE MACRO LATCH.
*
**                                      COLS 69-71 CONTAIN LAT
*
***********************************************************************
         EJECT
         ISEQ  73,80
         MODIN
*
** FIRST-TIME-THRU ROUTINES
*  ------------------------
         ST    R1,SFD004A          SAVE PARAMETER LIST ADDRESS      0.4
         LM    R2,R4,SFD012        RESTORE ALL
         L     R11,SFD004               REGISTERS
BA01     BC    0,BA05              BRANCH IF NOT FIRST TIME THRU    0.3
         CLI   0(R7),X'FF'         Q. END OF FILE ON ENTRY          0.1
         BE    BA0505              A. YES, CLOSE FILE               0.1
         OI    BA01+1,X'F0'        ALTER TO BC 15,BA05
         L     R3,0(R10)           LENGTH OF P2 IN R3
         LR    R2,R3                    AND R2
         BCTR  R3,0                R3 IS EX REGISTER
         LA    R4,CCW133+133       R4 POINTS TO END OF PRINT-LINE
         LR    R11,R4              R4 POINTS TO END OF PRINT-LINE   0.4
         SR    R4,R2               R4 POINTS TO LAST POSSIBLE INPUT
*** THE FOLLOWING TWO INSTRUCTIONS HAVE BEEN REMOVED ******************
* 0.4    L     R14,20(R1)          R14 POINTS TO P6
* 0.4    MVC   CCW133(1),0(R14)    INSERT ASA CC
*
** END OF JOB ROUTINE
*  ------------------
BA05     CLI   0(R7),X'FF'         Q. END OF REPORT
         BNE   BA06A               A. NO, CARRY ON                  0.3
         BAL   R12,B5000           PRINT ANY STORED DETAIL
BA0505   MVI   CCW133,X'FF'        CLOSE PRINTER/PRINT TAPE         0.1
         BAL   R12,B5000                VIA B3401
BA06     STM   R2,R4,SFD012        SAVE ALL
         ST    R11,SFD004               REGISTERS
         MODOUT
*                                                                   0.3
** CLEARING REQUIRED                                                0.3
*-------------------                                                0.3
BA06A    CLI   0(R8),C'4'          Q. REPORT CLEARING REQUIRED      0.3
         BNE   BA07                A. NO, GO TO CHECK FOR EOF       0.3
         CR    R11,R4              Q. ANY STORED DETAIL             0.4
         BH    BA06                A. NO - EXIT                     0.4
         BAL   R12,B5000           PRINT DETAILS VIA B3501          0.3
         BAL   R12,B5100           CLEAR P2 TO SPACES               0.3
         NI    BA10+1,X'0F'        INDICATE NEW LINE                0.4
         B     BA06                SAVE REGISTERS & MODOUT          0.3
*
** TEST FOR NEW PAGE REQUIRED
*  --------------------------
BA07     CLI   0(R8),C'0'          Q. NEW PAGE REQUIRED
         BE    BA10                A. NO, CARRY ON
         CR    R11,R4              Q. ANY STORED DETAIL             0.2
         BH    BA08                A. NO, SKIP TO PRINT ROUTINE     0.2
         BAL   R12,B5000           PRINT ANY STORED DETAIL
BA08     MVC   CCD001,0(R8)        SAVE P3 (1 OR 2)                 0.2
         NI    BA10+1,X'0F'        START NEW LINE
*
** BUILD PRINT-LINE AND PRINT IF NECESSARY
*  ---------------------------------------
BA10     BC    0,BA12              BRANCH IF NOT NEW LINE
         OI    BA10+1,X'F0'        ALTER TO BC 15,BA12
         L     R1,SFD004A          RESTORE PARAMETER LIST ADDRESS   0.4
         L     R14,20(R1)          R14 POINTS TO P6                 0.4
         MVC   CCW133(1),0(R14)    INSERT ASA CC                    0.4
         LA    R11,CCW133+1        POINT TO START OF LINE
BA12     EX    R3,EX01             BUILD PRINT-LINE
         AR    R11,R2              POINT TO NEXT POS IN LINE
         CR    R11,R4              Q. ROOM FOR ANOTHER
         BH    BA15                A. NO, PRINT THE LINE
         BAL   R12,B5100           CLEAR P2 TO SPACES
         B     BA06                MODOUT
BA15     NI    BA10+1,X'0F'        INDICATE NEW LINE
         BAL   R12,B5000           PRINT THE LINE
         BAL   R12,B5100           CLEAR P2 TO SPACES
         B     BA06                MODOUT
*
         EJECT
** SUBROUTINE TO PRINT REPORT VIA B3401
*  ------------------------------------
B5000    ST    R6,CFA016           HEADINGS - PARAMETER 1
         ST    R9,CFA016+12        LINE COUNT - PARAMETER 4
         LA    R1,CFA016           LOAD PARAMETER ADDRESSES
         CALL  B3401               PRINT THE LINE
         MVI   CCD001,C'0'         ENSURE P3=0 FOR NEXT CALL
         BR    R12                 RETURN TO MAIN ROUTINE
*
** SUBROUTINE TO CLEAR P2 TO SPACES
*  --------------------------------
B5100    MVI   0(R7),C' '          CLEAR FIRST BYTE OF P2
         BCTR  R3,0                R3 MINUS 1
         EX    R3,EX02               TO CLEAR REST OF P2
         LA    R3,1(R3)                THEN RESTORE
         BR    R12                 RETURN TO MAIN ROUTINE
         SPACE 2
*        SPACE 2
** EXECUTED INSTRUCTIONS (LENGTH IN P5)
*  ------------------------------------
EX01     MVC   0(0,R11),0(R7)      BUILDS PRINT LINE
*
EX02     MVC   1(0,R7),0(R7)       CLEARS P2 TO SPACES
         SPACE 3
*
** CONSTANTS AND STORAGE AREAS
*  ---------------------------
CFA016   DC    A(*,CCW133,CCD001,*)     B3401 PARAMETERS
SFD004   DS    F                   REGISTER
SFD012   DS    3F                       SAVEAREAS
SFD004A  DS    F                   SAVE AREA FOR R1                 0.4
CCW133   DC    CL133' '            PRINT-LINE
CCD001   DC    C'0'                P3 FOR B3401 (INDICATOR)
         LTORG
         END
