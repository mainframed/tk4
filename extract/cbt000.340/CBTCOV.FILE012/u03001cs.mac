./     ADD     LIST=ALL,LEVEL=01,NAME=SPGCSECT
./     NUMBER  NEW1=10,INCR=10
         EJECT
SPGSHARE CSECT
*
*                                  REGISTERS USED -
*
R0       EQU   0                        SYSTEM USE
R1       EQU   1                        PARAMETER LIST
R2       EQU   2                        USED FOR ABEND CODES
R3       EQU   3                        POINTS TO PARAMETERS
R4       EQU   4                        LENGTH OF PARAMETERS
R5       EQU   5                        WORK/PARM PASSED TO LINKED MOD
R6       EQU   6                        WORK
R7       EQU   7                        EXEC/CALL MODE INDICATOR
R8       EQU   8                        BASE FOR GOTTEN CORE
R9       EQU   9                        UCB ADDRESS FOR RESERVE/DEQ
R10      EQU   10                       LINKAGE/WORK
R11      EQU   11                       ENQ/DEQ INDICATOR
R12      EQU   12                       BASE REGISTER
R13      EQU   13                       POINTS TO GOTTEN SAVEAREA
R14      EQU   14                       RETURN ADDRESS
R15      EQU   15                       ENTRY ADDRESS
*
*                                  INITIALISATION
*
SPGSHR   WAYIN 12,,,01,,RENT
*
*                                  GET CORE FOR LITERAL NAMES
*
         L     R3,0(,R1)                GET PARAMETER ADDRESS
         LA    R0,CORELNTH              LENGTH OF WORKAREA
         GETMAIN R,LV=(0)               WTO MESSAGE LENGTH
         LR    R8,R1                    USE R8 AS BASE REGISTER
         USING LITNAMES,R8              FOR RNAME,LINKNAME,DDNAME
         EX    0,ABENDCOD               LOAD UPPER ABEND VALUE
*
*                                  DETERMINE MODE OF ENTRY
*
         L     R14,4(,R13)              RESTORE R14
         L     R14,12(,R14)             FROM SAVEAREA
         CLC   0(2,R14),SVC3            TEST FOR AN SVC 3
         BNE   CALLMODE                 NO .. ASSUME CALL MODE
EXECMODE EQU   *                        YES .. EXEC MODE
         LH    R4,0(,R3)                PICK UP PARM LENGTH
         LTR   R4,R4                    IS IT ZERO
         BZ    ABEND1                   YES .. ABEND
         LA    R3,2(,R3)                NO .. ADDRESS PARM STRING
         BAL   R14,ENQSCAN              TEST FOR ENQ/DEQ OPTION
         LA    R3,4(,R3)                INCREMENT PARM STRING
         NI    *+1,0                    SET CONDITION CODE TO 0
         BAL   R14,DDNSCAN              SCAN OTHER PARAMETERS
         B     TIOTSCAN                 VALID SCAN .. CONTINUE
CALLMODE EQU   *
         LR    R5,R3                    SAVE PARM ADDRESS
         LA    R4,1                     INITIALISE LENGTH REG
CALLSCAN EQU   *
         CLI   0(R5),C' '               TEST FOR TRAILING BLANK
         BE    CALLSCN1                 YES .. EXIT
         LA    R5,1(,R5)                NO .. INCREMENT
         LA    R4,1(,R4)                AND
         B     CALLSCAN                 LOOP
CALLSCN1 EQU   *
         BAL   R14,ENQSCAN              TEST FOR ENQ/DEQ OPTION
         LA    R3,4(,R3)                INCREMENT PARM STRING
         OI    *+1,1                    SET CONDITION CODE TO 1
         BAL   R14,DDNSCAN              SCAN OTHER PARAMETERS
*
*                                  THIS ROUTINE SCANS THE TIOT FOR
*                                  THE SUPPLIED DDNAME AND GETS THE
*                                  UCB ADDRESS IF PRESENT.
*
TIOTSCAN EQU   *
         L     R10,CVT                  GET CVT ADDRESS
         L     R10,CVTTCB(,R10)         GET TCB DOUBLEWORD
         L     R10,OURTCB(,R10)         GET TCB FOR THIS TASK
         L     R10,TIOT(,R10)           GET TIOT ADDRESS
         LA     R6,TIOTSCN1             INIT R6 FOR LOOP
         LA     R10,4(,R10)             FIRST DD ENTRY IS TIOT+24
TIOTSCN1 EQU   *
         LA     R10,20(,R10)            GET NEXT DD ENTRY
         L     R9,0(,R10)               TEST FOR END OF TIOT
         LTR   R9,R9                    BY TESTING ZERO FULLWORD
         BZ    ABEND5                   IF ZERO .. DDNAME NOT FOUND
         CLC   4(8,R10),DDNAME          CHECK DDNAME IN TIOT
         BCR   7,R6                     NOT FOUND .. RETRY
         LA    R9,16(,R10)              FOUND .. GET UCB ADDRESS
         ST    R9,UCBSAVE               SAVE UCB ADDRESS
         L     R9,16(,R10)              PREPARE TO EXAMINE UCB
*
*                                  NOW CHECK THE UCB FOR A VALID
*                                  SET OF FLAGS
*
         LTR   R9,R9                    TEST FOR DD DUMMY
         BZ    RETURN
         TM    2(R9),VALIDUCB           CHECK UCB FLAG X'FF'
         BNO   ABEND6
         CLI   18(R9),DASD              CHECK DIRECT ACCESS
         BNE   ABEND7
         CLI   19(R9),DEV2314           CHECK 2314
         BNE   ABEND8
         TM    17(R9),SHARABLE          CHECK SHAREABILITY
         BNO   RETURN
         MVC   RNAME,28(R9)             STORE VOLSERNO
*
*                                  NOW ISSUE THE APPROPRIATE
*                                  RESERVE OR DEQ MACRO
*
         LA    R15,RESERVE              IF REQUEST IS ENQ
         SPM   R11                      THEN CC IS ZERO
         BZ    REQUEST
         LA    R15,DEQUEUE              OTHERWISE , DEQ
REQUEST  EQU   *
         BALR  R10,R15
*
*                                  NOW CHECK FOR A NORMAL OR
*                                  LINK RETURN FROM MODULE
*
RETURN   EQU   *
         SPM   R7                       IF WE'RE IN EXEC MODE
         BZ    LINKTIME                 THEN EXIT BY LINK
         LR    R1,R8                    POINT TO GOTTEN CORE
         LA    R0,CORELNTH              LENGTH OF WORKAREA
         FREEMAIN R,LV=(0),A=(1)        RETURN GOTTEN CORE
         SR    R15,R15                  ZERO RC NORMALLY
EXIT     WAYOUT (R15)
         EJECT
*
*                                  THIS ROUTINE TRANSFERS CONTROL
*                                  TO THE LOAD MODULE SPECIFIED BY
*                                  THE USER IN PARAMETER LIST
*
LINKTIME EQU   *
         LR    R1,R5                    SET UP PARM POINTER
         LA    R6,LINKNAME              NECESSARY TO ASSEMBLE ADCON
         LINK  EPLOC=(6)                LINK TO USER REQUESTED ROUTINE
         B     EXIT                     NOW HIT WAYOUT
         EJECT
*
*                                  THIS ROUTINE CHECKS THE PARAMETER
*                                  STRING FOR ENQ OR DEQ AND SETS A
*                                  SWITCH IN R11 ACCORDINGLY.
*
ENQSCAN  EQU   *
         SH    R4,FOUR                  REDUCE LENGTH REGISTER
         CLC   0(4,R3),ENQ              IS IT ENQ
         BE    ENQSCAN1                 YES
         CLC   0(4,R3),DEQ              NO .. IS IT DEQ
         BE    ENQSCAN2                 YES
         B     ABEND2                   NEITHER .. ABEND
ENQSCAN1 EQU   *
         NI    *+1,0                    ENQ .. SET CC TO 0
         BALR  R11,R14                  SAVE IT AND RETURN
ENQSCAN2 EQU   *
         OI    *+1,1                    DEQ .. SET CC TO 1
         BALR  R11,R14                  SAVE IT AND RETURN
         EJECT
*
*                                  THIS ROUTINE EXTRACTS A DDNAME FROM
*                                  THE PARAMETER LIST AND SAVES IT.
DDNSCAN  EQU   *
         LR    R6,R3                    SAVE START OF DDNAME
         LR    R5,R4                    SAVE RESIDUAL LENGTH
DDNSCAN1 EQU   *
         LTR   R4,R4                    ENSURE R4 STAYS POSITIVE
         BNP   ABEND3                   UNTIL DELIMITER FOUND
         CLI   0(R3),C' '               CHECK FOR TRAILING BLANK
         BE    DDNSCAN2                 OR FOR
         CLI   0(R3),C','               A TRAILING COMMA
         BE    DDNSCAN2                 TO DENOTE TERMINATOR
         LA    R3,1(,R3)                IF NOT FOUND, CARRY ON
         BCT   R4,DDNSCAN1              ALONG PARAMETER STRING
DDNSCAN2 EQU   *
         SR    R5,R4                    GET LENGTH OF DDNAME
         CH    R5,EIGHT                 CHECK DDNAME LENGTH
         BH    ABEND3                   FOR 8-BYTE MAXIMUM
         BCTR  R5,0                     REDUCE FOR EX
         MVC   DDNAME,BLANKS            BLANK GOTTEN AREA
         EX     R5,MOVEDDNM             INSERT NEW ONE
         LR    R7,R14                   SAVE R7 FOR LATER
         SPM   R14                      ARE WE IN CALL MODE
         BCR   7,R14                    IF YES .. EXIT
         LA    R3,1(,R3)                IF NO .. GET LINK NAME
         MVC   LINKNAME,BLANKS          BLANK OUT LINK FIELD
         BCTR  R4,0                     REDUCE FOR COMMA
         LTR   R4,R4                    TEST FOR LINK NAME PRESENT
         BNP   ABEND4                   NO .. ABEND
         LR    R6,R3                    YES .. SAVE START OF NAME
         LR     R5,R4                   SAVE RESIDUAL LENGTH
LINKSCAN EQU   *
         CLI   0(R3),C'/'               TEST FOR PARM SEPARATOR
         BE    LINKSCN1                 YES .. EXIT
         LA    R3,1(,R3)                NO .. TRY NEXT
         BCT   R4,LINKSCAN              CHARACTER
LINKSCN1 EQU   *
         SR    R5,R4                    GET LINK NAME LENGTH
         CH    R5,EIGHT                 TEST FOR MAXIMUM
         BH    ABEND4                   TOO LONG .. ABORT
         BCTR  R5,0                     REDUCE FOR EX
         EX    R5,MOVELKNM              SAVE LINK NAME
*
*                                  SET UP A PARM LIST FOR THE MODULE
*                                  TO BE LINKED TO.
*
         LTR   R4,R4                    CHECK FOR NO PARM SUPPLIED
         BZ    PARMLST                  IF NONE, CONSTRUCT ZERO LIST
         BCTR  R4,0                     REDUCE FOR SLASH
         LA    R4,6(,R4)                ADD FOR ADCON
         LR    R0,R4                    TRANSFER LENGTH VALUE
         GETMAIN R,LV=(0)               GET CORE FOR PARM LIST
         LR    R5,R1                    RETAIN GOTTEN ADDRESS
         LA    R6,4(,R5)                POINT TO PARM
         ST    R6,0(,R5)                SET UP ADCON
         OI    0(R5),X'80'              FLAG LAST ADCON
         SH    R4,SIX                   REDUCE BY ADCON LENGTH
         STH   R4,4(,R5)                STORE PARM LENGTH A LA SYSTEM
         BCTR  R4,0                     REDUCE FOR EX
         EX    R4,MOVEPARM              SAVE PARM IN GOTTEN CORE
         BR    R14                      RETURN TO CALLER
PARMLST  EQU   *
         GETMAIN R,LV=6                 GET SIX BYTES
         LR    R5,R1                    RETAIN GOTTEN ADDRESS
         LA    R6,4(,R5)                POINT TO PARM
         ST    R6,0(,R5)                SET UP ADCON
         XC    4(2,R5),4(R5)            INDICATE ZERO LENGTH
         BR    R14                      RETURN TO CALLER
*
*                                  EXECUTED MOVES FOR DDNSCAN
*
MOVEDDNM MVC   DDNAME(0),0(R6)
MOVELKNM MVC   LINKNAME(0),0(R6)
MOVEPARM MVC   6(0,R5),1(R3)
         EJECT
*
*                                  THIS ROUTINE RESERVES A VOLUME
*                                  BY ISSUING A QNAME.RNAME REQUEST
*                                  OF THE FORM SPGSHARE.VOLSER EG.
*                                  SPGSHARE.OSSCR4   IF THE VOLUME IS
*                                  UNAVAILABLE, A STIMER/WTO LOOP IS
*                                  ENTERED TO INFORM THE OPERATOR
*
RESERVE  EQU   *
         LA    R11,RNAME                R11 NOT NOW NEEDED FOR SPM
         L     R9,UCBSAVE               POINT TO UCB ADDRESS
         RESERVE (QNAME,(11),E,6,SYSTEMS),RET=USE,UCB=(9)
         LTR   R15,R15                  TEST RETURN CODE
         BCR   8,R10                    IF ZERO, RETURN
         SR    R14,R14                  IF NON-ZERO, RC IS 3 BYTES
         IC    R14,3(,R15)             FROM ADDRESS IN R15
         B    *(R14)                    RC 0 NOT NOW APPLICABLE
         B     WAITLOOP                 RC 4 RESOURCE NOT AVAILABLE
         B     ABEND9                   RC 8 PREVIOUS RESERVE STILL OP
WAITLOOP EQU   *
         MVC   WTOMSG(WTOMSGLN),WTOCON  INITIALISE WTO BUFFER
         MVC   WTOMSG+20(6),RNAME       COMPLETE WITH VOLSERNO
OPERATOR EQU   *
         NI    ECB,0                    RESET WAIT/POST BYTE
         LA    R1,WTOMSG                ADDRESS DSECT
         LA    R3,REPLY                 ADDRESS REPLY FIELD
         LA    R4,ECB                   ADDRESS ECB FIELD
         WTOR  ,(3),1,(4),MF=(E,(1))
         WAIT  ECB=ECB
         OI    REPLY,C' '               UPPER CASE
         CLI   REPLY,C'R'               R FOR RETRY
         BE    RESERVE
         CLI   REPLY,C'C'               C FOR CANCEL
         BE    ABEND11
         B     OPERATOR                 NEITHER...REISSUE MSG
         EJECT
*
*                                  THIS ROUTINE DEQ'S A VOLUME
*                                  PREVIOUSLY RESERVED.  THIS CODE
*                                  SHOULD BE USED ONLY IN CALL MODE
*                                  SINCE THE SYSTEM AUTOMATICALLY
*                                  DEQ'S AT END OF STEP - EXEC MODE.
*
DEQUEUE  EQU   *
         LA    R11,RNAME                R11 NOW FREE
         DEQ   (QNAME,(11),6,SYSTEMS),RET=HAVE
         LTR   R15,R15                  TEST RETURN CODE
         BCR   8,R10                    IF ZERO, RETURN
         B     ABEND10                  IF NON-ZERO,ABEND
         EJECT
*
*                                  SET UP ABEND TABLE
*
         SPGCODES RANGE=(2010,2020),VALUES=11
         EJECT
*
*                                  CONSTANTS AND DSECTS
*
FOUR    DC    H'4'
SIX      DC    H'6'
EIGHT    DC    H'8'
WTOCON   WTOR  'SPG010D XXXXXX UNAVAILABLE - R TO RETRY, C TO CANCEL', X
               ROUTCDE=(1,11),MF=L
WTOMSGLN EQU   *-WTOCON
ENQ      DC    C'ENQ,'
DEQ      DC    C'DEQ,'
SVC3     DC    X'0A03'                  SVC 3 = RETURN TO SUPVR
QNAME    DC    CL8'SPGSHARE'
BLANKS   DC    CL8' '
CVT      EQU   16
CVTTCB   EQU   0
OURTCB   EQU   4
TIOT     EQU   12
VALIDUCB EQU   X'FF'
DASD     EQU   X'20'
DEV2314  EQU   X'08'
SHARABLE EQU   X'20'
         LTORG
LITNAMES DSECT
UCBSAVE  DS    F
ECB      DS    F
DDNAME   DS    CL8
RNAME    DS    CL6
LINKNAME DS    CL8
REPLY    DS    X
WTOMSG   DS    0F
LITLENTH EQU   *-LITNAMES
CORELNTH EQU   ((LITLENTH+WTOMSGLN+7)/8)*8
         END   SPGSHR
