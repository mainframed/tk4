         TITLE 'HASPMON - HASP SYSTEM MONITOR'
HASPMON  CSECT
         SPACE 1
         REQU
         SPACE 1
         SAVE  (14,12)
         BALR  R2,0                    ESTABLISH
         USING *,R2                        ADDRESSABILITY
         LA    R14,SAVER
         ST    R13,SAVER+4             STANDARD
         ST    R14,8(R13)                  LINKAGE
         LR    R13,R14                         CONVENTIONS
*
         SVC   255                     ISSUE HASP SVC
         LTR   R15,R15                 IS HASP ACTIVE???
         BZ    NOHASP                  NO - ERROR
         L     R3,16                   GET ADDR OF CVT
         L     R3,CVTUSER(R3)          GET ADDR OF SYSTEM TABLE
         LTR   R3,R3                   IS IT THERE???
         BZ    NOSYST                  NO - ERROR
         USING SYSTAB,R3
*
*        CALCULATE BLKSIZE OF TRACE DATA SET
*
         SR    R4,R4                   ZERO FOR INSERT CHAR
         IC    R4,S$NUMPCE             GET # OF PCE'S
         AR    R4,R4                   DOUBLE IT
         SR    R5,R5                   ZERO FOR INSERT CHAR
         IC    R5,S$NUMOAC             GET # OF OVERLAY AREAS
         SLL   R5,2                    MULTIPLY BY 4
         LA    R4,15(R4,R5)            ADD THEM TOGETHER
         IC    R5,S$NUMLNE             GET NUMBER OF RJE LINES
         AR    R4,R5                   ADD TO GET RECORD SIZE
         STH   R4,SYSUT1+DCBBLKSI-IHADCB   FILL IN BLKSIZE FOR TRACE DS
*
*        OPEN TRACE DATA SET & WRITE OUT SYSTEM TABLE
*
         OPEN  (SYSUT1,(OUTPUT))
         MVC   SYSUT1+DCBBLKSI-IHADCB(2),=AL2($SYSTL)  CHANGE BLKSIZE
         WRITE WDECB1,SF,SYSUT1,(3),'S'
         CHECK WDECB1
         STH   R4,SYSUT1+DCBBLKSI-IHADCB    RESTORE BLKSIZE
*
*        GET ALL AVAILABLE CORE LEAVING SOME FOR O/S
*
         GETMAIN R,LV=4095
         ST    R1,OSCORE               SAVE ADDR OF O/S CORE
         LA    R8,WDECBL+7(R4)         GET BUFFER LENGTH
         N     R8,=X'FFFFFFFC'         ROUNDED TO FULL WORD MULTIPLE
         SLL   R8,2                    GET AT LEAST 4 BUFFERS
         ST    R8,RANGE                TELL O/S SO
         SRL   R8,2                    RESTORE BUFFER SIZE
         GETMAIN VU,LA=RANGE,A=GOTCORE
         L     R1,OSCORE               POINT TO RESERVED CORE
         FREEMAIN R,LV=4095,A=(1)
*
*        BUILD BUFFER POOL
*
         L     R7,GOTCORE+4            GET BUFFER POOL LENGTH
         SR    R6,R6                   ZERO FOR DIVIDE
         DR    R6,R8                   R7 = # OF BUFFERS
         C     R7,=F'20'               MORE THAN 20 BUFFERS???
         BNH   *+8                     NO...EVERYTHING'S OKAY
         LA    R7,20                   FORCE 20 BUFFERS
         L     R6,GOTCORE              R6 POINTS TO START OF POOL
         ST    R6,ANXTBUF              INITIALIZE POINTER
BUFINIT  LR    R5,R6                   GET NEW BUFFER ADDRESS
         LA    R6,0(R8,R5)             NEXT BUFFER ADDRESS
         ST    R6,0(R5)                STORE CHAIN ADDRESS
         MVC   4(WDECBL,R5),WDECB      MOVE A DECB TO THE BUFFER
         LA    R9,WDECBL+4(R5)         ADDRESS OF RECORD AREA
         ST    R9,12+4(R5)             STORE AREA ADDR IN DECB
         BCT   R7,BUFINIT              LOOP BACK IF MORE BUFFERS
         MVC   0(4,R5),GOTCORE         CHAIN LAST BUFFER TO 1ST
*
*        ISSUE SVC 253 & RETURN IN SUPERVISOR STATE, ENABLED
*
         LA    R1,SUPSTATE
         SVC   253
         EJECT
*
*        ISSUE WTOR ENABLING TERMINATION OF TRACE
*
WTOR1    WTOR  'HASPMON - REPLY STOP TO TERMINATE',REPLY,4,REPECB
*
*        ISSUE STIMER & WAIT A BIT
*        WHEN WOKEN UP CALCULATE NEXT RANDOM INTERVAL
*
STIMER   SSM   =X'FF'                  ENABLE
         STIMER WAIT,DINTVL=DELAY
         SSM   *+1                     DISABLE
         L     R5,A
         M     R4,B
         D     R4,C
         LA    R4,1(R4)
         ST    R4,B
         SRDA  R4,32
         D     R4,D
         A     R4,E
         CVD   R4,DWORD                CONVERT INTERVAL TO PACKED
         UNPK  DELAY(8),DWORD+4(4)     NOW TO UNPACKED DECIMAL
         OI    DELAY+7,X'F0'           FIX UP
*
*        CHECK FOR A REPLY TO THE WTOR AND IF THE REPLY IS 'STOP'
*        TERMINATE NORMALLY
*
         TM    REPECB,X'40'            HAS A REPLY BEEN MADE???
         BNO   COLLECT                 NOPE...CONTINUE WITH TRACE
         CLC   =C'STOP',REPLY          IS THE REPLY CORRECT???
         MVI   REPECB,0                RESET ECB
         BNE   WTOR1                   INCORRECT REPLY - REISSUE WTOR
RETURN   SSM   =X'FF'                  ENABLE
         LA    R1,PROBSTAT             RTN TO GET ME BACK IN PROB STATE
         SVC   253                     HERE WE GO...
*
*        CHECK THAT ALL I/O IS COMPLETE BEFORE CLOSING TRACE DATA SET
*
         L     R5,ACHKBUF              GET ADDR OF 1ST BUFF TO CHECK
         LTR   R5,R5                   IS THERE ONE???
         BZ    CLOSE                   NO...GO CLOSE TRACE DATA SET
CHECK1   CHECK 4(5)
         L     R5,0(R5)
         C     R5,ANXTBUF              HAVE WE GOT THEM ALL???
         BNE   CHECK1                  NO...KEEP GOING
*
*        CLOSE TRACE DATA SET & GET OUT OF TOWN
*
CLOSE    CLOSE (SYSUT1)
RETURN1  L     R13,SAVER+4             RESTORE REGISTER 13
         SR    R15,R15                 ZERO RETURN CODE
         RETURN (14,12),RC=(15)
         EJECT
*
*        FILL IN TRACE RECORD
*
COLLECT  L     R5,ANXTBUF              GET BUFFER TO WRITE FROM
         LA    R11,WDECBL+4(R5)        POINT TO RECORD AREA
         USING HMONREC,R11             ESTABLISH ADDRESSABILITY
         TIME  DEC
         STM   R0,R1,BSTAMP            STORE TIME AND DATE
         L     R4,S$HCT                GET ADDR OF HCT FROM SYSTAB
         MVC   BACT(1),$ACTIVE(R4)     # OF ACTIVE HASP PCE'S
         L     R1,$BUFPOOL(R4)         ADDR OF FREE BUFFER POOL
         LA    R12,BUFCHAIN            SHOW DISPLACEMENT OF CHAIN WORD
         BAL   R14,FREEBUF             RTN TO COUNT # OF FREE BUFFERS
         STC   R15,BBUF                STORE # OF FREE BUFFERS
         L     R1,$TPBPOOL(R4)         ADDR OF TP BUFFER POOL
         BAL   R14,FREEBUF             RTN TO COUNT # OF FREE CMB'S
         STC   R15,BTPBUF              STORE # OF FREE TP BUFFERS
         L     R1,$FREEQUE(R4)         ADDR OF FREE CMB POOL
         SR    R12,R12                 SHOW DISPLACEMENT OF CHAIN FLD
         BAL   R14,FREEBUF             RTN TO COUNT # OF FREE BUFFERS
         STC   R15,BCMB                STORE # OF FREE CMB'S
         MVC   BSTAT(1),$STATUS(R4)    SAVE HASP STATUS SWITCHES
         MVC   BECF(2),$HASPECF(R4)    SAVE HASPECF & LINE MNGR ECF
         LA    R5,BVAR                 POINT TO VARIABLE PART OF REC
         LA    R6,2                    ESTABLISH INCREMENT FOR BXLE
         SR    R7,R7                   ZERO FOR INSERT CHARACTER
         IC    R7,S$NUMPCE             GET NUMBER OF PCE'S
         AR    R7,R7                   DOUBLE IT
         LA    R7,BVAR-2(R7)           POINT TO LAST PCEEWF ENTRY
         L     R8,$PCEORG(R4)          POINT TO 1ST PCE
PCEL1    LTR   R8,R8                   PTR ZERO???
         BZ    PCEERR                  YES...ERROR
         MVC   0(2,R5),PCEEWF(R8)      SAVE PCEEWF BYTES
         L     R8,PCENEXT(R8)          LINK TO NEXT PCE IN CHAIN
         BXLE  R5,R6,PCEL1             PROCESS NEXT PCE IF MORE TO GO
         LTR   R8,R8                   CHAIN FIELD SHOULD BE 0
         BNZ   PCEERR                  ERROR IF IT ISN'T
         IC    R8,S$NUMOAC             GET # OF OVLY AREAS
         L     R6,S$1STO               POINT TO 1ST OVLY AREA
OVLY1    MVC   0(4,R5),OACENAME(R6)    GET NAME OF OVERLAY
         LA    R5,4(R5)                POINT TO NEXT SLOT IN RECORD
         L     R6,OACECHN(R6)          POINT TO NEXT OVLY AREA
         BCT   R8,OVLY1                PROCESS IF MORE TO GO
         IC    R8,S$NUMLNE             GET # OF LINES
         LTR   R8,R8                   IS IT 0???
         BZ    NOLINES                 YES...SKIP RMT # CODE
         L     R6,S$LNEDCT             GET ADDR OF 1ST LINE DCT
TPLOOP   TM    DCTPSTAT(R6),DCTSINON   IS THERE A REMOTE ON THIS LINE?
         MVI   0(R5),0                 INITIALIZE TO 0 JUST IN CASE
         BNO   NORMTON                 NO RMT ATTACHED...SKIP
         L     R7,MDCTDCT(R6)          GET ADDR OF 1ST RMT DCT
         MVC   0(1,R5),DCTNO(R7)       SAVE RMT #
NORMTON  L     R6,DCTCHAIN(R6)         GET ADDR OF NEXT DCT
         LA    R5,1(R5)                INCREMENT BUFF SLOT PTR
         BCT   R8,TPLOOP               LOOP BACK IF MORE LINES TO GO
NOLINES  DS    0H                      COME HERE IF NO LINES AT ALL
         EJECT
*
*        WRITE OUT BUFFER, GET NEXT BUFFER ADDR, WAIT FOR I/O ON
*        NEW BUFFER IF NECESSARY
*
         SSM   =X'FF'                  ENABLE
         L     R5,ANXTBUF              POINT TO CURRENT BUFFER
         WRITE 4(5),SF,MF=E
         MVC   ANXTBUF(4),0(R5)        GET NEW BUFFER ADDR
         OC    ACHKBUF(4),ACHKBUF      IS THERE A CHECK QUEUE???
         BNZ   WRITE1                  YES...GO SEE IF CHECK NEEDED
         ST    R5,ACHKBUF              NO...PT TO BUFFER JUST WRITTEN
         B     STIMER                  GO WAIT A BIT
WRITE1   CLC   ANXTBUF(4),ACHKBUF      IS NEW BUFF ON CHECK QUEUE???
         BNE   STIMER                  NO...GO WAIT A BIT
         L     R5,ANXTBUF              YES...POINT TO NEW BUFFER
         CHECK 4(5)                    AND WAIT FOR I/O
         MVC   ACHKBUF(4),0(R5)        CHAIN TO NEXT BUFF IN CHECK Q
         B     STIMER                  FINALLY...GO WAIT A BIT
         EJECT
*
*        SUBROUTINE WHICH OPERATES UNDER SVC 253 TO PLACE
*        HASPMON IN SUPERVISOR STATE UPON RETURN FROM SVC 3
*
SUPSTATE L     R2,RBLINK(R5)           POINT TO RB FOR HASPMON
         NI    RBOPSW+1(R2),X'FE'      FORCE SUPERVISOR STATE
         SVC   3                       RETURN
*
*        SUBROUTINE WHICH OPERATES UNDER SVC 253 TO PLACE
*        HASPMON IN PROBLEM STATE UPON RETURN FROM SVC 3
*
PROBSTAT L     R2,RBLINK(R5)           POINT TO RB FOR HASPMON
         OI    RBOPSW+1(R2),X'01'      FORCE PROBLEM STATE
         SVC   3                       RETURN
*
*        ERROR ROUTINE - HASP NOT ACTIVE
*
NOHASP   WTO   'HASPMON - ERROR - HASP NOT ACTIVE'
         B     RETURN1
*
*        ERROR ROUTINE - SYSTEM TABLE ADDRESS NOT IN CVTUSER
*
NOSYST   WTO   'HASPMON - ERROR - SYSTEM TABLE NOT FOUND'
         B     RETURN1
*
*        ERROR ROUTINE - NUMPCE IN SYSTAB IS INCORRECT
*
PCEERR   WTO   'HASPMON - ERROR - NUMPCE INCORRECT'
         B     RETURN
*
*        SUBROUTINE TO COUNT NUMBER OF BUFFERS ON A CHAIN
*        R1 POINTS TO 1ST ELEMENT ON CHAIN
*        R12 CONTAINS DISPLACEMENT WITHIN EACH ELEMENT OF CHAIN FLD
*
FREEBUF  SR    R15,R15                 ZERO ACCUMULATOR
FREEB1   LA    R1,0(R1)                MICKEY MOUSE
         LTR   R1,R1                   END OF CHAIN???
         BCR   8,R14                   YES...RETURN TO CALLER
         LA    R15,1(R15)              NO...INCREMENT COUNT
         L     R1,0(R12,R1)            CHAIN TO NEXT ELEMENT
         B     FREEB1                  LOOP BACK
         EJECT
SAVER    DC    18F'0'                  O/S SAVE AREA
*
OSCORE   DC    F'0'                    ADDR OF O/S RESERVED CORE
*
RANGE    DC    F'0'                    PARAMETERS FOR GETMAIN VU
         DC    F'100000'
*
GOTCORE  DC    2F'0'                   FILLED IN BY GETMAIN VU
*
ANXTBUF  DC    F'0'                    ADDR OF 1ST AVAILABLE BUFFER
*
ACHKBUF  DC    F'0'                    ADDR OF 1ST BUFFER ON CHECK Q
*
         WRITE WDECB,SF,SYSUT1,DUMMY,'S',MF=L
WDECBL   EQU   *-WDECB                 LENGTH OF DECB
DUMMY    EQU   *
*
DWORD    DC    D'0'                    WORK AREA
*
DELAY    DC    C'00000010'             1ST TIME INTERVAL
*
REPLY    DC    CL4' '                  REPLY AREA FOR WTOR
*
REPECB   DC    F'0'                    ECB POSTED FOR WTOR
*
*        CONSTANTS USED BY RANDOM # GENERATOR
*
A        DC    F'16807'
B        DC    F'1000'
C        DC    X'7FFFFFFF'
D        DC    F'20'
E        DC    F'5'
*
*        EQUATES
*
CVTUSER  EQU   204
PCEEWF   EQU   X'48'
PCENEXT  EQU   8
OACENAME EQU   X'50'
OACECHN  EQU   X'34'
$ACTIVE  EQU   X'93'
$BUFPOOL EQU   X'AC'
$TPBPOOL EQU   X'B0'
$FREEQUE EQU   X'C8'
$HASPECF EQU   X'90'
$PCEORG  EQU   X'A8'
$STATUS  EQU   X'8E'
BUFCHAIN EQU   X'28'
DCTPSTAT EQU   8
DCTSINON EQU   X'08'
DCTNO    EQU   X'11'
MDCTDCT  EQU   X'28'
DCTCHAIN EQU   X'14'
RBLINK   EQU   28
RBOPSW   EQU   16
         SPACE 2
SYSUT1   DCB   DDNAME=SYSUT1,DSORG=PS,MACRF=W,RECFM=U
         SPACE 2
         LTORG
         SPACE 2
         SYSTAB
         SPACE 2
         HMONREC
         SPACE 2
         DCBD  DSORG=PS,DEVD=TA
         SPACE 2
         END
