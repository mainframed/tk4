IBMTRAN CSECT
***********************************************************************
*                                                                     *
*          THIS ROUTINE TRANSLATES TAPES WRITTEN IN ICL               *
*          STANDARD HOUSEKEEPING FORMAT AND CODE INTO                 *
*          IBM CODE.  ICL 6 BIT CHARACTER CODE IS CONVERTED           *
*          TO EBCDIC, SIGNED AND UNSIGNED 24 BIT ICL WORDS            *
*          ARE CONVERTED TO THEIR 32 BIT IBM EQUIVALENTS,             *
*          AND SIGNED 48 BIT ICL DOUBLE WORDS ARE CONVERTED           *
*          IN TO SIGNED 64 BIT IBM DOUBLE WORDS.  WORDS AND           *
*          DOUBLE WORDS ARE ALIGNED ON THEIR PROPER BOUNDARIES        *
*          IN THE RECIEVEING RECORD AREA.                             *
*                                                                     *
*          THE FORMAT OF THE ICL RECORD TO BE TRANSLATED IS           *
*          DEFINED BY A MASK WHICH IS SET UP BY THE CALLER            *
*          AND WHOSE ADDRESS IS PASSED TO THE ROUTINE BY THE          *
*          OPEN CALL.  EACH FIELD IN THE RECORD IS DEFINED AS         *
*          CHARACTER "C", UNSIGNED BINARY "B", SIGNED BINARY          *
*          "S" OR SIGNED DOUBLE WORD BINARY "D". EACH FIELD           *
*          IDENTIFIER (C,B,S OR D) MAY BE FOLLOWED BY A NUMBER        *
*          INDICATING THE NUMBER OF TIMES THE FIELD OCCURS.  A        *
*          CHARACTER FIELD SHOULD BE A MULTIPLE OF 4 CHARACTERS       *
*          IN LENGTH.  E.G. TO DEFINE AN ICL RECORD WHOSE FORM        *
*          IS SIXTEEN CHARACTERS, FOUR UNSIGNED WORDS, A DOUBLE       *
*          WORD, TWENTY FOUR CHARACTERS AND TWO SIGNED WORDS THE      *
*          MASK "C16B4DC24S2" WOULD BE USED.                          *
*                                                                     *
*          WHEN THIS ROUTINE IS CALLED THE FIRST PARAMETER            *
*          DEFINES THE FUNCTION TO BE PERFORMED I.E. 1 = OPEN         *
*          2 = READ AND 3 = CLOSE.                                    *
*          FOR THE OPEN FUNCTION PARAMETER TWO IS THE ADDRESS         *
*          OF THE RECORD MASK AND PARAMETER THREE AN EIGHT BYTE       *
*          DD NAME WHICH IDENTIFIES THE RECORD BEING READ.            *
*          FOR THE READ FUNCTION PARAMETER TWO IS THE ADDRESS         *
*          OF THE AREA INTO WHICH THE TRANSLATED RECORD IS TO         *
*          BE PLACED AND PARAMETER THREE A ONE BYTE RETURN CODE       *
*          FIELD.  THE RETURN CODE IS SET TO "9" AT END OF FILE       *
*          TO "1" OR "2" FOR AN ERROR AND IS UNCHANGED AFTER          *
*          A SUCSESSFUL RECORD TRANSLATION.                           *
*          THE CLOSE FUNCTION REQUIRES NO OTHER PARAMETERS.           *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
         STM   14,12,12(13)         * SAVE CALLING REGISTERS *
         BALR  12,0
         USING *,12,11              * SET UP BASES *
         LA    11,2048(12)
         LA    11,2048(11)
         LA    10,SAVE              * SET UP NEXT SAVE AREA
         ST    10,8(13)               AND SAVE LINKS        *
         ST    13,4(10)
         LR    13,10
         LM    2,5,0(1)             * PICK UP PARAMETERS *
         CLI   0(2),C'1'            * OPEN ? *
         BE    BLKA01
         CLI   0(2),C'2'            * READ ? *
         BE    BLKB01
         CLI   0(2),C'3'            * CLOSE ? *
         BE    BLKC01
         B     BLKD01               * EXIT *
*
*
BLKA01   MVC   TAPE+40(8),0(4)      * DD NAME *
         OPEN  (TAPE,(INPUT))
         READ  TAPE1,               * READ                             X
               SF,                    START OF                         X
               TAPE,                  SUBFILE                          X
               INAREA,                SENTINEL                         X
               60                     (TWENTY WORDS) *
         CHECK TAPE1
         ST    3,MASKADR            * SAVE ADDRESS OF MASK *
         LTR   4,4                  * CHECK IF RECORD AREA FOR FILE
         BM    BLKD01                       HEADER PRESENT  *
         ST    5,OUTADDR            * IF SO SET UP TO TRANSLATE
         LA    5,INAREA                  HEADER AND HAND BACK
         ST    5,INADDR                  TO PROGRAM       *
         LA    5,20
         ST    5,COUNT
         LA    14,BLKD01
         LA    1,PARAMS
         B     SUBD01
         B     BLKD01               * EXIT *
*
*
BLKB01   L     6,CPOINT             * CURRENT POSITION IN BLOCK *
         CLC   0(4,6),ZERO          * END OF BLOCK *
         BNE   BLKB05
         ST    4,SAVE4R
         LA    4,INAREA             * CLEAR INPUT AREA *
         LA    5,3076
         L     7,ZERO
         MVCL  4,6
         L     4,SAVE4R
         READ  TAPE2,               * READ NEXT BLOCK *                X
               SF,                                                     X
               TAPE,                                                   X
               INAREA,                                                 X
               3072
         CHECK TAPE2
         LA    6,INAREA             *SET CURRENT POINTER TO START *
BLKB05   MVC   WORK+1(3),0(6)       * PICK UP WORD COUNT *
         L     5,WORK
         LA    6,3(6)
         SH    5,=H'1'              * SUBTRACT ONE FROM WORD COUNT *
         LR    8,5                  * MULTIPLY
         AR    5,5                    BY
         AR    5,8                    THREE    *
         L     7,MASKADR            * PICK UP ADRESS OF MASK *
         ST    3,OUTADDR            * CURRENT POSITION IN OUTPUT AREA *
         ST    6,INADDR             * CURRENT POSITION IN INPUT AREA *
         LA    14,BLKB35            * RETURN ADDRESS *
         LA    1,PARAMS             * SUBROUTINE PARAMETERS *
BLKB10   MVC   HOLD,0(7)            * SAVE CODE *
         LA    8,0
         MVC   WORK,ZERO            * CLEAR WORK FIELD *
BLKB15   CLI   1(7),C'0'
         BL    BLKB20               * CHARACTER FROM MASK NOT NUMERIC *
         MVC   WORK+3(1),1(7)       * PICK UP
         NC    WORK+3(1),=X'0F'       LENGTH
         O     8,WORK                 CONVERT
         SLL   8,4                    TO
         LA    7,1(7)                 PACKED DECIMAL *
         B     BLKB15
BLKB20   LA    7,1(7)               * POINT TO NEXT MASK FIELD *
         C     8,=F'0'
         BNE   BLKB25
         MVC   COUNT,=F'1'          * SET COUNT TO ONE *
         B     BLKB30
BLKB25   O     8,=F'15'             * ADD SIGN *
         ST    8,CONV+4
         MVC   CONV(4),ZERO
         CVB   8,CONV
         ST    8,COUNT              * NUMBER OF TIMES TO REPEAT CODE *
BLKB30   CLI   HOLD,C'B'            * UNSIGNED BINARY ? *
         BE    SUBA01
         CLI   HOLD,C'S'            * SINGLE LENGTH SIGNED ? *
         BE    SUBB01
         CLI   HOLD,C'D'            * DOUBLE LENGTH SIGNED ? *
         BE    SUBC01
         CLI   HOLD,C'C'            * CHARACTER ? *
         BE    SUBD01
         B     BLKE01               * ERROR - NOT VALID CODE *
BLKB35   L     8,INADDR             * COMMON RETURN POINT *
         ST    8,CPOINT             * SAVE CURRENT POINT *
         SR    8,6                  * SUBTRACT START FROM CURRENT PNT *
         CR    8,5                  * COMPARE WITH RECORD LENGTH *
         BH    BLKE05               * ERROR - BEYOND END OF RECORD *
         BNE   BLKB10               * NOT END OF RECORD *
         B     BLKD01               * EXIT *
*
*
BLKC01   CLOSE (TAPE)
*
*
BLKD01   L     13,4(13)             * RESET SAVE AREA POINTER *
         LM    14,12,12(13)         * RESET REGISTERS *
         BR    14                   * RETURN TO CALLER *
*
*
BLKE01   MVI   0(4),C'1'            * SET ERROR CODE *
         B     BLKD01
BLKE05   MVI   0(4),C'2'            * SET ERROR CODE *
         B     BLKD01
BLKE10   MVI   0(4),C'9'            * SET END OF FILE CODE *
         B     BLKD01
*
         EJECT
SUBA01   STM   14,12,12(13)         * ROUTINE FOR UNSIGNED BINARY *
         LA    10,SAVE2
         ST    10,8(13)
         ST    13,4(10)
         LR    13,10
         LM    2,4,0(1)             * PICK UP PARAMETERS *
         L     4,0(4)               * PLACE COUNT IN REG4 *
SUBA05   TM    3(1),X'03'           * OUTPUT ADDR ON WORD BOUNDARY *
         BZ    SUBA10               * YES *
         MVI   0(2),X'00'           * NO - ZERO FILL TO ALIGN *
         LA    2,1(2)
         ST    2,0(1)               * UPDATE OUTPUT ADDR *
         B     SUBA05
SUBA10   MVC   WORK+1(3),0(3)       * MOVE ICL WORD (24 BITS) *
         L     5,WORK
         ST    5,0(2)               * STORE AS IBM WORD (32 BITS) *
         LA    2,4(2)
         LA    3,3(3)
         BCT   4,SUBA10             * LOOP ON COUNT *
         STM   2,3,0(1)             * RESET PARAMETERS *
         L     13,4(13)             * RESET SAVE AREA POINTER *
         LM    14,12,12(13)
         BR    14                   * RETURN TO CALLER *
*
*
SUBB01   STM   14,12,12(13)         * ROUTINE FOR SIGNED SINGLE LEN *
         LA    10,SAVE2
         ST    10,8(13)
         ST    13,4(10)
         LR    13,10
         LM    2,4,0(1)             * PICK UP PARAMETERS *
         L     4,0(4)               * PLACE COUNT IN REG4 *
SUBB05   TM    3(1),X'03'           * OUTPUT ADDR ON WORD BOUNDARY *
         BZ    SUBB10               * YES *
         MVI   0(2),X'00'           * NO - ZERO FILL TO ALIGN *
         LA    2,1(2)
         ST    2,0(1)               * UPDATE OUTPUT ADDR *
         B     SUBB05
SUBB10   MVC   WORK(3),0(3)         * MOVE ICL WORD (24 BITS) *
         L     5,WORK
         SRA   5,8                  * SHIFT PROPAGATING SIGN *
         ST    5,0(2)               * STORE AS IBM WORD (32 BITS) *
         LA    2,4(2)
         LA    3,3(3)
         BCT   4,SUBB10             * LOOP ON COUNT *
         MVC   WORK,ZERO            * CLEAR WORK AREA *
         STM   2,3,0(1)             * UPDATE PARAMETERS *
         L     13,4(13)             * RESET SAVE AREA ADDRESS *
         LM    14,12,12(13)
         BR    14                   * RETURN TO CALLER *
*
*
SUBC01   STM   14,12,12(13)         * ROUTINE FOR SIGNED DWORD BINARY *
         LA    10,SAVE2
         ST    10,8(13)             * SAVE LINKS *
         ST    13,4(10)
         LR    13,10
         LM    2,4,0(1)             * PICK UP PARAMETERS *
         L     4,0(4)               * PLACE COUNT IN REG4 *
SUBC05   TM    3(1),X'07'           * OUTPUT ADDR ON DWORD BOUNDARY *
         BZ    SUBC10               * YES *
         MVI   0(2),X'00'           * NO - ZERO FILL TO ALIGN *
         LA    2,1(2)
         ST    2,0(1)               * UPDATE OUTPUT ADDR *
         B     SUBC05
SUBC10   MVC   WORK(3),3(3)         * SECOND ICL WORD (24 BITS) *
         L     7,WORK
         MVC   WORK+1(3),0(3)       * FIRST ICL WORD (24 BITS) *
         L     6,WORK
         SLL   7,1                  * REMOVE SIGN FROM SECOND WORD *
         SLDL  6,8                  * CONCATONATE *
         SRDA  6,17                 * SHIFT PROPOGATING SIGN *
         STM   6,7,0(2)             * STORE AS IBM DWORD (64 BITS) *
         LA    2,8(2)
         LA    3,6(3)
         BCT   4,SUBC10             * LOOP ON COUNT *
         MVC   WORK,ZERO            * CLEAR WORK AREA *
         STM   2,3,0(1)             * UPDATE PARAMETERS *
         L     13,4(13)             * RESET SAVE AREA ADDRESS *
         LM    14,12,12(13)
         BR    14                   * RETURN TO CALLER *
*
*
SUBD01   STM   14,12,12(13)         * ROUTINE FOR CHARACTER FIELD *
         LA    10,SAVE2
         ST    10,8(13)             * SVAE LINKS *
         ST    13,4(10)
         LR    13,10
         LM    2,4,0(1)             * PICK UP PARAMETERS *
         L     4,0(4)               * PLACE COUNT IN REG4 *
         SRL   4,2                  * CONVERT BYTES TO WORDS *
SUBD05   MVC   WORK+1(3),0(3)
         LA    5,4                  * FOUR CHARACTERS IN A WORD *
         L     6,WORK
SUBD10   SRDL  6,6                  * EXPAND SIX BITS IN REG6
         SRL   7,2                    TO EIGHT BITS IN REG7    *
         BCT   5,SUBD10             * REPEAT FOR EACH CHARACTER *
         ST    7,0(2)               * STORE EXPANDED CHARACTERS *
         TR    0(4,2),TRANT         * TRANSLATE TO IBM FORMAT *
         LA    2,4(2)
         LA    3,3(3)
         BCT   4,SUBD05             * LOOP ON COUNT *
         STM   2,3,0(1)             * UPDATE PARAMETERS *
         L     13,4(13)             * RESET SAVE AREA POINTER *
         LM    14,12,12(13)
         BR    14                   * RETURN TO CALLER *
*
*
         EJECT
CONV     DS    D                    * PACKED DECIMAL CONVERT AREA*
PARAMS   DS    0F                   * SUBROUTINE PARAMETER ADDRESSES *
OUTADDR  DS    F
INADDR   DS    F
COUNTADR DC    A(COUNT)
CPOINT   DC    A(ZERO)              * CURRENT ADDRESS POINTER *
COUNT    DS    F
WORK     DC    F'0'                 * WORD ALIGNED WORK AREA *
MASKADR  DS    F                    * ADDRESS OF TRANSLATE MASK *
INAREA   DS    768F
ZERO     DC    F'0'
SAVE     DS    18F                  * REGISTER SAVE AREAS *
SAVE2    DS    18F
SAVE4R   DC    F'0'
TRANT    DC    X'F0'                * CHARACTER TRANSLATE TABLE *
         DC    X'F1'
         DC    X'F2'
         DC    X'F3'
         DC    X'F4'
         DC    X'F5'
         DC    X'F6'
         DC    X'F7'
         DC    X'F8'
         DC    X'F9'
         DC    X'7A'
         DC    X'5E'
         DC    X'4C'
         DC    X'7E'
         DC    X'6E'
         DC    X'6F'
         DC    X'40'
         DC    X'5A'
         DC    X'7F'
         DC    X'7B'
         DC    X'5B'
         DC    X'6C'
         DC    X'50'
         DC    X'7D'
         DC    X'4D'
         DC    X'5D'
         DC    X'5C'
         DC    X'4E'
         DC    X'6B'
         DC    X'60'
         DC    X'4B'
         DC    X'61'
         DC    X'7C'
         DC    X'C1'
         DC    X'C2'
         DC    X'C3'
         DC    X'C4'
         DC    X'C5'
         DC    X'C6'
         DC    X'C7'
         DC    X'C8'
         DC    X'C9'
         DC    X'D1'
         DC    X'D2'
         DC    X'D3'
         DC    X'D4'
         DC    X'D5'
         DC    X'D6'
         DC    X'D7'
         DC    X'D8'
         DC    X'D9'
         DC    X'E2'
         DC    X'E3'
         DC    X'E4'
         DC    X'E5'
         DC    X'E6'
         DC    X'E7'
         DC    X'E8'
         DC    X'E9'
         DC    X'AD'
         DC    X'5B'
         DC    X'DB'
         DC    X'AB'
         DC    X'AC'
HOLD     DS    CL1
         LTORG *
         EJECT
TAPE     DCB   BLKSIZE=3072,                                           X
               DDNAME=ICLTAPE,                                         X
               EODAD=BLKE10,                                           X
               MACRF=R,                                                X
               DSORG=PS,                                               X
               RECFM=U
         END
