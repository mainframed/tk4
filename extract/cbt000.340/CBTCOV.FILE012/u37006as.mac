         MACRO
&NA      BEGIN &BASE,&SAVADR=,&ID=YES,&REGS=YES
         GBLA  &CHK
         LCLC  &BS1,&BS2,&BS3
         USING *,15
         AIF   ('&REGS' EQ 'NO').NOREGS
         AIF   (&CHK EQ 1).NOREGS
*  REGISTER EQUATES
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
FP0      EQU   0
FP2      EQU   2
FP4      EQU   4
FP6      EQU   6
&CHK     SETA  1
.*  SET UP CSECT NAME AS AN 8-BYTE CHARACTER CONSTANT IF SPECIFIED
.NOREGS  AIF   ('&ID' EQ 'NO').NOID
         AIF   ('&SYSECT' EQ '').NOID
         B     *+12
         DC    CL8'&SYSECT'
.NOID    ANOP
&NA      STM   14,12,12(13)
         AIF   ('&BASE' NE  '').BSPEC
&BS1     SETC  '12'                DEFAULT BASE = 12
         CNOP  0,4
         BAL   &BS1,*+76
         USING *,&BS1
         AGO   .SAVE
.*  BASE SPECIFIED. SET UP APPROPRIATE USING STATEMENT, ALLOWING UP TO
.*     THREE REGISTERS
.BSPEC   ANOP
&BS1     SETC  '&BASE(1)'
&BS2     SETC  '&BASE(2)'
&BS3     SETC  '&BASE(3)'
         AIF   ('&BS2' EQ  '').ONLY1
         AIF   ('&BS2' EQ '&BS1' OR '&BS1' EQ '&BS3').FAIL
         AIF   ('&BS2' EQ '&BS3').FAIL
         AGO   .OVER1
.*  ALL SPECIFIED BASE REGISTERS ARE UNIQUE
.ONLY1   CNOP  0,4
         BAL   &BS1,*+76
         USING *,&BS1
         AGO   .SAVE
.*  MORE THAN ONE BASE REGISTER SPECIFIED
.OVER1   CNOP  0,4
         BAL   &BS1,*+76
         AIF   ('&BS3' NE  '').ALL3 THREE BASE REGISTERS SPECIFIED
         USING *,&BS1,&BS2
         AGO   .SAVE
.ALL3    USING *,&BS1,&BS2,&BS3
.SAVE    ANOP
&SAVADR  DC    18F'0'
         AIF   ('&BS2' NE  '').SETB2
         AGO   .STORE
.SETB2   LR    &BS2,&BS1           SET 2ND BASE =
         AH    &BS2,IND&SYSNDX        1ST BASE + 4096
         AIF   ('&BS3' NE  '').SETB3
         AGO   .INC4K
.SETB3   LR    &BS3,&BS2           SET 3RD BASE =
         AH    &BS3,IND&SYSNDX        2ND BASE + 4096
.INC4K   B     *+6
IND&SYSNDX  DC H'4096'
.*  COMPLETE THE ESQUENCE
.STORE   ST    &BS1,8(13)
         ST    13,4(&BS1)
         LR    13,&BS1
         MEXIT
.*  ERROR NOTES
.FAIL    MNOTE 12,'BASE REGS DO NOT HAVE UNIQUE NAMES. GENERATION '
         MNOTE *,'TERMINATED'
         MEXIT
         MEND
         MACRO
&NAME    FINISH &RC=Z
&NAME    L     13,4(13)
         AIF   ('&RC' EQ '(15)').REG15
         AIF   ('&RC'(1,1) EQ '(').REGERR
         AIF   ('&RC' EQ 'Z').NORC
         LA    15,&RC
.REG15   L     14,12(13)
         LM    0,12,20(13)
         AGO   .OUT
.NORC    LM    14,12,12(13)
.OUT     BR    14
         MEXIT
.REGERR  MNOTE *,RETURN CODE REGISTER MUST BE 15. NO R.C. RETURNED
         AGO   .NORC
         MEND
TESTIT   START
         BEGIN
         L     R2,0(R1)
         CLI   1(R2),X'04'
         BNE   SCANUCB
         CLC   2(4,R2),DISK
         BE    DISKONLY
         CLC   2(4,R2),CELL
         BE    CELLONLY
SCANUCB  L     R8,16               LOAD CVT PTR
         L     R9,40(R8)           LOAD UCB ADDRESS LIST
         XR    R8,R8
GETADDRR LH    R7,0(R8,R9)
         LTR   R7,R7
         BNZ   CHECCUCB
NEXTUCBB LA    R8,2(R8)            INCR TO NEXT UCB
         B     GETADDRR
CHECCUCB CH    R7,HEXFFF           END OF UCB ADDRESS LIST ?
         BE    EOJ                 YES, THEN QUIT
         CLI   18(R7),X'20'        IS UCB FOR A DASD ?
         BNE   NEXTUCBB            NO,  THEN BRANCH
         MVC   AREA1+3(2),SPACES
         MVC   AREA1(3),13(R7)     STORE UNIT CUU  ADDRESS
         CLI   19(R7),X'05'        IS IT A CELL ?
         BE    CELLUCB
         TM    TYPE,X'0F'     TYPE = 0E  FOR A CELL ONLY PRINT-OUT
         BM    NEXTUCBB       BRANCH IF CELL ONLY PRINT-OUT REQD
         MVC   AREA1+5(13),HEXZER
RELOOP1  CALL  LISTVTOC,(AREA1)
         CLC   AREA1+11(3),HEXZER
         BNE   RELOOP1
         B     NEXTUCBB
CELLUCB  TM    TYPE,X'0F'     TYPE = 0F  FOR DISK ONLY
         BO    NEXTUCBB       BRANCH IF DISK ONLY
         XR    R5,R5
         MVI   AREA1+3,C'/'
LOOP     STC   R5,AREA1+4
         OI    AREA1+4,X'F0'
         MVC   AREA1+5(13),HEXZER
RELOOP   CALL  LISTVTOC,(AREA1)
         CLC   AREA1+11(3),HEXZER
         BNE   RELOOP
         LA    R5,1(R5)
         CH    R5,HH10
         BNE   LOOP
         B     NEXTUCBB
DISKONLY MVI   TYPE,X'0F'
         B     SCANUCB
CELLONLY MVI   TYPE,X'0E'
         B     SCANUCB
EOJ      FINISH
HH10     DC    H'10'
HEXFFF   DC    X'FFFF'
TYPE     DC    X'00'
HEXZER   DC    13X'00'
SPACES   DC    C'     '
DISK     DC    C'DISK'
CELL     DC    C'CELL'
AREA1    DC    CL16'190'
WRITIT   CSECT
         BEGIN
         L     R2,0(R1)
         BCTR  R2,0
         MVI   0(R2),C' '
         L     R3,4(R1)
TESTPAGE CLI   1(R3),X'32'
         BNE   TESTOPEN
NEWPAGE  MVI   0(R2),C'1'
TESTOPEN CLI   OPENSW,X'00'
         BNE   PUTREC
         OPEN  (PRINT,(OUTPUT))
         MVI   OPENSW,X'FF'
PUTREC   PUT   PRINT,(R2)
         FINISH
OPENSW   DC    X'00'
PRINT    DCB   RECFM=FBA,LRECL=103,BLKSIZE=3090,DSORG=PS,MACRF=PM,     -
               BUFNO=4,DDNAME=PRFILE
         ISEQ  73,80
         TITLE 'LISTING VTOC SUBROUTINE'
*
* THIS SUBROUTINE LISTS THE VTOC ON A SPECIFIED UNIT. IT IS PASSED A
* 16 BYTES AREA VIA REG 1 WHICH CONTAINS:-
*        BYTES 1 - 5    = UNIT NO  E.G.  192  OR  293/8 ETC.
*        BYTES 6 - 11   = VOLUME SERIAL IS PLACED IN HERE BY THE RTN
*          "   12- 14   = THE TTR ADDRESS OF THE NEXT F-1 DSCB ON
*                         THE VTOC. IF THE VTOC LISTING IS TO START AT
*                         THE BEGINING THEN THIS FIELD SHOULD CONTAIN
*                         BINARY ZERO. ON RETURN FROM THE RTN THIS
*                         FIELD WILL CONTAIN THE TTR OF THE NEXT F1
*                         DSCB IF THERE IS MORE THAN A PAGE WORTH OF
*                         DSCBS ON THE VTOC
*          "   15- 18   = FOUR BYTES TO RETURN THE ADDRESS OF UCB FOR
*                         THE UNIT
*
* THE VTOC LISTING IS PASSED LINE BY LINE TO A SUBROUTINE CALLED
* WRITIT       E.G.
*                 CALL (WRITIT,OUTLINE,LINENO)
*
*  N.B. OUTLINE IS A 7O BYTES   LINE, LINENO IS THE LINE NUMBER
         EJECT
LISTVTOC CSECT
         BEGIN
         L     R1,0(R1)
         ST    R1,PARMADDR         SAVE PARM ADDRESS
         MVC   LINENO,H50          SET UP LINE COUNT
         CLC   11(3,R1),HEXZERO    IS A CONTINUATION PAGE REQD ?
         BNE   NEXTPAGE            YES,THEN BRANCH
         SPACE 2
*  THE FOLLOWING CODE IS TO FIND THE UCB RELATING TO THE UNIT ADDRESS
*  AS PASSED TO THE ROUTINE.
*   FROM THE UCB IS TAKEN THE VOLUME SERIAL NO. AND THE ADDRESS OF
*   THE FIRST VTOC DSCB ON THAT VOLUME.
         SPACE 2
         L     R8,CVTPTR           ADDR OF CVT TO R8
         L     R9,40(R8)           ADDR OF UCB LIST TO R9
         XR    R8,R8
GETADDR  LH    R7,0(R8,R9)         UCB ADDR TO R7
         LTR   R7,R7
         BNZ   CHECKUCB
NEXTUCB  LA    R8,2(R8)            INCR TO NEXT UCB ADDR IN LIST
         B     GETADDR
CHECKUCB CH    R7,HEXFF            IS THIS THE END OF THE UCB ADDR LIST
         BE    NOUCB               YES, THEN UNIT ADDR IS INVALID
         USING UCBDSECT,R7
         CLI   UCBTYP3,X'20'       IS UCB FOR A D.A.S.D. ?
         BNE   NEXTUCB             NO,THEN GET NEXT UCB
         CLC   UCBNAME,0(R1)       IS THIS THE REQUIRED UNIT NO. ?
         BNE   NEXTUCB             NO,THEN BRANCH
         MVC   VOLID,SRTEVOLI      STORE VOLUME ID.
         MVC   TTR,VTOCADDR        STORE VTOC TTR ADDR.
         CLI   UCBTYP4,X'05'       IS UNIT A DATA CELL
         BNE   NOTCELL             NO,THEN BRANCH
         CLI   4(R1),C'0'          IS BIN NO. VALID?
         BL    NOUCB               NO
         CLI   4(R1),C'9'          IS BIN NO. VALID?
         BH    NOUCB               NO
         IC    R8,4(R1)
         N     R8,HEXF0            CONVERT BIN NO. TO BINARY
         SLA   R8,4                N X 16
         AR    R8,R7
         MVC   VOLID,60(R8)        RE-STORE VOLID FOR THIS BIN
         MVC   TTR,68(R8)          RE-STORE TTR ADDR OF VTOC
NOTCELL  XR    R8,R8
         IC    R8,UCBTYP4
         STC   R8,DEVTYP           STORE DEVICE TYPE CODE
         IC    R8,TRKTAB(R8)
         ST    R8,NTRKPCYL
         BAL   R14,RELTOABS
         ST    R7,DOUD
         MVC   14(4,R1),DOUD       STORE UCB ADDRESS IN PARM FIELD
         MVC   5(6,R1),VOLID       STORE VOLUME SERIAL NO.
         DROP  R7
         EJECT
*
*  NOW PROCESS THE VTOC FOR THIS D.A.S.D.
*  FIRST READ THE 1ST DSCB ENTRY WHICH IS THE 1ST F-4 DSCB
*
         MVC   OUTLINE+20(L'HEADING),HEADING  STORE HEADING
         MVC   OUTLINE+37(L'VOLID),VOLID  STOTE VOLID
         MVC   OUTLINE+44(2),ON
         MVC   OUTLINE+47(5),0(R1) STORE CUU/B IN HEADING
         BAL   R14,WRITLINE        WRITE HEADING
         CLC   VOLID,HEXZERO       IS THERE A VOLUME MOUNTED ?
         BE    ERROR4              NO, THEN BRANCH
*
*        READ  F-4  DSCB
*
         OBTAIN DSCBLIST
         BAL   R14,DSCBERRO(R15)   BAL TO ERROR CHECK RTN
         LA    R10,WKAREA
         USING DSCBSECT,R10
*   SAVE  F-4  INFORMATION
         SPACE 1
         MVC   DSCBPTRK,DS4DEVDT   SAVE NO OF DSCBS PER TRK
         MVC   TOP,DS4HPCHR        SAVE HIGHEST DSCB F-1  ADDR
*
* N.B.   IGNORE ANY F-6 DSCBS, CHECK F-5 DSCB
         TM    DS4VTOCI,X'80'      IS THERE A CORRECT F-5 DSCB ON VTOC
         BO    READREST            NO, THEN BRANCH
*
*  PROCESS F-5  DSCB
*
         MVI   ISTEXS,C'1'
         ST    R15,TOTFCYLS        CLEAR TOTAL OF FREE CYLS & OF TRKS
         LA    R6,OUTLINE+25       SET ADDR FOR 1ST SPACE DESCRIP.
         BAL   R14,NEXTADDR        GET F-5 ADDR.
GETF5    OBTAIN DSCBLIST
         BAL   R14,DSCBERRO(R15)   BAL TO ERROR CHECK RTN
         LA    R5,DS5AVEXT         R5 PTR TO 1ST EXTENT IN DSCB
         LA    R8,OUTLINE+57       TEST FOR THE END OF THE PRINT LINE
         CR    R6,R8
         BNH   ED5EXT              BRANCH IF NOT THE END
         BAL   R14,WRITLINE        WRITE & CLEAR LINE
         LA    R6,OUTLINE+25
ED5EXT   MVC   DOUD(2),2(R5)
         LH    R7,DOUD             NO OF FREE CYLS TO R7
         LR    R8,R7
         AH    R8,TOTFCYLS
         STH   R8,TOTFCYLS
         XR    R9,R9
         IC    R9,4(R5)            NO OF FREE TRKS TO R9
         LR    R8,R9
         AH    R8,TOTFTRKS
         STH   R8,TOTFTRKS
         BAL   R14,EDSPACE         EDIT SPACE TO O/P AREA
         CLI   ISTEXS,C'1'         IS THIS THE IST EXTENT
         BNE   TESTEND5            NO,THEN BRANCH
         MVC   OUTLINE(27),UNEXTDE MOVE IN HEADING LINE
         MVI   ISTEXS,C'0'
TESTEND5 LA    R8,DS5AVEXT+126     ADDR OF BEGIN OF LAST EXTENT
         CR    R5,R8
         BE    NEXTF5              GET NEXT F-5,IF THERE IS ONE
         LA    R5,5(R5)            INCR TO NEXT EXTENT DESCRIPTION
         LA    R8,DS5FMTID
         CR    R5,R8
         BNE   NEXT5EX
         LA    R5,1(R5)            INCR OVER IDENT FIELD
NEXT5EX  CLC   0(5,R5),HEXZERO
         BE    TESTEND5
*  TEST FOR END OF PRINT LINE
         LA    R8,OUTLINE+57
         CR    R6,R8               IS THIS TEH END OF THE PRINT LINE
         BNH   ED5EXT              NO,THEN BRANCH
         BAL   R14,WRITLINE        WRITE A LINE
         LA    R6,OUTLINE+25
         B     ED5EXT
*  GET NEXT F-5 DSCB IF THERE IS ONE
NEXTF5   CLC   DS5PTRDS(5),HEXZERO ARE THERE ANY MORE F-5 DSCBS ?
         BE    NOMORE5S            NO,THEN BRANCH
         MVC   CCHHR1(5),DS5PTRDS
         B     GETF5
NOMORE5S LA    R8,OUTLINE+61       HAS LINE END BEEN REACHED ?
         CR    R6,R8
         BNH   PRTOT5              NO,THEN BRANCH
         BAL   R14,WRITLINE        YES,THEN PRINT LINE
PRTOT5   LA    R6,OUTLINE+61
         LH    R7,TOTFCYLS
         LH    R9,TOTFTRKS
         BAL   R14,EDSPACE
         MVI   OUTLINE+62,C'='
         BAL   R14,WRITLINE
*   PROCESS F-1 DSCBS
READREST MVC   OUTLINE,DETHEAD
         BAL   R14,WRITLINE
         B     F1DSCB
NEXTPAGE MVC   TTR(3),11(R1)       STORE TTR
         MVC   11(3,R1),HEXZERO    CLEAR I/P FIELD
         MVC   OUTLINE+20(L'HEADING),HEADING      STORE HEADING
         MVC   OUTLINE+37(L'VOLID),VOLID          STORE VOL. NO.
         MVC   OUTLINE+44(2),ON
         MVC   OUTLINE+47(5),0(R1) STORE CUU/B IN HEADING
         MVC   OUTLINE+10(L'CONTINUE),CONTINUE
         BAL   R14,WRITLINE
         MVC   OUTLINE,DETHEAD
         BAL   R14,WRITLINE
         LA    R10,WKAREA          SET BASE REG. FOR DSCB AREA
         B     OBTAINF1
         EJECT
*  PROCESS ALL THE F-1 DSCBS IN THE VTOC
*
*
F1DSCB   CLC   TOP,CCHHR1          HAS LAST F-1 DSCB BEEN READ ?
         BNH   ENDDSCBS            YES, THEN BRANCH
         BAL   R14,NEXTADDR        GET NEXT DSCB ADDR.
OBTAINF1 OBTAIN DSCBLIST
         BAL   R14,BSCBERR1(R15)   CHECK FOR ERRORS
         CLI   DS1FMTID,C'1'       IS THIS AN F-1 DSCB ?
         BNE   F1DSCB              NO,THEN TRY THE NEXT DSCB
         CLC   LINENO,LASTLINE     HAS END OF PAGE BEEN REACHED ?
         BE    ENDPAGE             YES,THEN BRANCH
         MVC   OUTLINE(44),DS1DSNAM STORE DSNAME
         XR    R6,R6
         IC    R6,DS1CREDT
         CVD   R6,DOUD
         UNPK  OUTLINE+47(3),DOUD+6(2)
         OI    OUTLINE+49,X'F0'    STORE CREATION YEAR IN O/P
         LH    R6,DS1CREDT+1
         CVD   R6,DOUD
         UNPK  OUTLINE+45(3),DOUD+6(2)
         OI    OUTLINE+47,X'F0'    STORE CREATION DAY IN O/P
         CLC   DS1EXPDT,HEXZERO
         BE    FINDOR
         XR    R6,R6
         IC    R6,DS1EXPDT
         CVD   R6,DOUD
         UNPK  OUTLINE+54(3),DOUD+6(2)
         OI    OUTLINE+56,X'F0'    STORE EXPIRE YEAR IN O/P
         MVC   DOUD(2),DS1EXPDT+1
         LH    R6,DOUD
         CVD   R6,DOUD
         UNPK  OUTLINE+52(3),DOUD+6(2)
         OI    OUTLINE+54,X'F0'    STORE EXPIRE DAY IN O/P
FINDOR   TM    DS1DSORG,X'80'      IS DSORG 'IS' ?
         BNO   NOTIS               NO,BRANCH
         MVC   OUTLINE+58(2),IS
         B     NOEXTS
NOTIS    TM    DS1DSORG,X'40'      IS DSORG 'PS' ?
         BNO   NOTPS
         MVC   OUTLINE+58(2),PS
         B     NOEXTS
NOTPS    TM    DS1DSORG,X'20'      IS DSORG 'DA' ?
         BNO   NOTDA
         MVC   OUTLINE+58(2),DA
         B     NOEXTS
NOTDA    TM    DS1DSORG,X'02'      IS DSORG 'PO' ?
         BNO   NOEXTS
         MVC   OUTLINE+58(2),PO
NOEXTS   XR    R6,R6
         IC    R6,DS1NOEPV
         CVD   R6,DOUD
         MVC   EXSAVE,DOUD+6       SAVE TOTAL OF NO. OF EXTENTS
         CLC   DS1BLKL(2),HEXZERO
         BE    NOBLKS
         LH    R6,DS1BLKL
         CVD   R6,DOUD
         MVC   OUTLINE+77(6),EDWD
         ED    OUTLINE+77(6),DOUD+5     STORE BLKSIZE IN PRINT LINE
NOBLKS   CLC   DS1LRECL(2),HEXZERO
         BE    NOLRECL
         LH    R6,DS1LRECL
         CVD   R6,DOUD
         MVC   OUTLINE+83(6),EDWD
         ED    OUTLINE+83(6),DOUD+5     STORE LRECL IN PRINT LINE
NOLRECL  LA    R6,OUTLINE+90
         TM    DS1RECFM,X'C0'           IS RECFM U  ?
         BO    RECFMU                   YES, THEN BRANCH
         TM    DS1RECFM,X'80'           IS RECFM F  ?
         BO    RECFMF
         TM    DS1RECFM,X'40'           IS RECFM V  ?
         BO    RECFMV
TRKOVFT  TM    DS1RECFM,X'20'           IS RECFM T  ?
         BO    RECFMT
BLKT     TM    DS1RECFM,X'10'           IS RECFM B ?
         BO    RECFMB
SRECFM   TM    DS1RECFM,X'08'           IS RECFM S ?
         BO    RECFMS
CONRECFM TM    DS1RECFM,X'04'           IS RECFM A ?
         BO    RECFMA
         TM    DS1RECFM,X'02'           IS RECFM M ?
         BO    RECFMM
         B     TKEY
RECFMU   MVI   0(R6),C'U'               U
         LA    R6,1(R6)
         B     TRKOVFT
RECFMF   MVI   0(R6),C'F'               F
         LA    R6,1(R6)
         B     TRKOVFT
RECFMV   MVI   0(R6),C'V'               V
         LA    R6,1(R6)
         B     TRKOVFT
RECFMT   MVI   0(R6),C'T'               T
         LA    R6,1(R6)
         B     BLKT
RECFMB   MVI   0(R6),C'B'               B
         LA    R6,1(R6)
         B     SRECFM
RECFMS   MVI   0(R6),C'S'               S
         LA    R6,1(R6)
         B     CONRECFM
RECFMA   MVI   0(R6),C'A'               A
         B     TKEY
RECFMM   MVI   0(R6),C'M'               M
TKEY     CLI   DS1KEYL,X'00'            IS THERE A KEY LENGTH ?
         BE    SPUSED                   NO,THEN BRANCH
         XR    R6,R6
         IC    R6,DS1KEYL
         CVD   R6,DOUD
         MVC   OUTLINE+94(4),EDWD2
         ED    OUTLINE+94(4),DOUD+6     STORE KEY LENGTH
         MVC   DOUD(2),DS1RKP
         LH    R6,DOUD
         CVD   R6,DOUD
         MVC   OUTLINE+98(4),EDWD2
         ED    OUTLINE+98(4),DOUD+6     STORE RKP
* CACULATE AMOUNT SPACE THIS DATA SET USES
SPUSED   CLC   DS1LSTAR(3),HEXZERO  IS TTR OF LAST BLOCK PRESENT ?
         BE    SRTOK                NO, THEN BRANCH
         MVC   DOUD(2),DS1LSTAR
         LH    R9,DOUD
         LA    R9,1(R9)
         XR    R7,R7
         LA    R6,OUTLINE+68       PUT THE AMOUNT OF SPACE USED (UP
         BAL   R14,EDSPACE         TO THE LAST BLK) ON THE PRINT LINE
         MVI   OUTLINE+69,X'40'    REMOVE '+'
         SPACE 1
* CACULATE AMOUNT OF SPACE OCCUPIED
SRTOK    XR    R6,R6
         ST    R6,TOTFCYLS         CLEAR TOTAL OF FREE CYLS & OF TRKS
         MVC   EXAREA(10),DS1EXT1  EXAMINE IST EXTENT
         BAL   R14,ACCUMSP
         TM    DS1EXT2,X'FF'       ANY 2ND EXTENT ?
         BZ    PRSPACE             NO,THEN BRANCH
         MVC   EXAREA(10),DS1EXT2
         BAL   R14,ACCUMSP
         TM    DS1EXT3,X'FF'       ANY 3RD EXTENT ?
         BZ    PRSPACE
         MVC   EXAREA(10),DS1EXT3
         BAL   R14,ACCUMSP
TESTF3   CLC   DS1PTRDS(5),HEXZERO ANY THERE ANY MORE DSCBS FOR THIS
*                                  DATA SET
         BE    PRSPACE             NO,THEN BRANCH
         MVC   CCHHR1(5),DS1PTRDS
         OBTAIN DSCBLIST           READ THE DSCB
         BAL   R14,DSCBERRO(R15)   CHECK FOR ERRORS
         CLI   DS3FMTID,C'3'       IS THIS AN F-3 DSCB ?
         BNE   TESTF3              NO,BRANCH
*
*  ACCUM SPACE ON THE F-3 DSCB
*
         LA    R8,DS3PTRDS
         LA    R6,DS3EXTNT
NEXTF3   TM    0(R6),X'FF'         IS THIS AN EXTENT DESCRIPTION ?
         BZ    PRSPACE             NO,BRANCH
         MVC   EXAREA(10),0(R6)
         BAL   R14,ACCUMSP
         LA    R6,10(R6)
         CLI   0(R6),X'F3'         IS THIS THE FORMAT-3 ID FIELD ?
         BNE   ENDF3               NO,BRANCH
         LA    R6,1(R6)            INCR. OVER ID FIELD
ENDF3    CR    R6,R8               HAS LAST EXTENT BEEN ACCUMULATED ?
         BNE   NEXTF3              NO,BRANCH
*
* CONVERT THE ACCUMULATED SPACE FROM CYLS & NNNN TRKS TO CYL.TRK
*
PRSPACE  LA    R6,OUTLINE+61       SET UP ADDR OF RESULT
         LH    R7,TOTFCYLS
         LH    R9,TOTFTRKS
         BAL   R14,EDSPACE         EDIT SPACE TO O/P LINE
         UNPK  OUTLINE+60(3),EXSAVE STORE NO OF EXTENT IN O/P LINE
         OI    OUTLINE+62,X'F0'
         MVI   OUTLINE+60,X'40'
         CLI   OUTLINE+61,X'F0'
         BNE   WRTL
         MVI   OUTLINE+61,X'40'    ZERO SUPRESS NO. OF EXTENTS
WRTL     BAL   R14,WRITLINE
         B     F1DSCB               GET NEXT DSCB
         EJECT
ENDDSCBS FINISH
ENDPAGE  L     R1,PARMADDR
         MVC   11(3,R1),TTR        STORE ADDR OF NEXT F1 DSCB
         MVC   OUTLINE+1(L'PTO),PTO  WRITE PTO ON PAGE
         BAL   R14,WRITLINE
         B     ENDDSCBS
*
* RTN FOR AN INVALID UCB ADDRESS IN PARM VALUE
NOUCB    MVC   OUTLINE+6(L'INVUCB),INVUCB
         MVC   14(4,R1),HEXZERO    CLEAR RETURNED UCB ADDR
         BAL   R14,WRITLINE
         B     ENDDSCBS
*
         EJECT
*
*  ON RETURN FROM THE OBTAIN MACRO R15  CONTAINS :-
*        00    NO  ERRORS
*        04    THE VOLUME REQUIRED WAS NOT MOUNTED
*        08    THE DSCB WAS NOT FOUND IN THE VTOC
*        12    A   PERMANENT I/O ERROR
*
DSCBERRO BR    R14                 RETURN, NO ERRORS
         DC    X'0707'
         B     ERROR4              ERROR 04
         B     ERROR8              ERROR 08
         B     ERROR12             ERROR 12
BSCBERR1 BR    R14                 RETURN, NO ERRORS
         DC    X'0707'
         B     ERROR4              ERROR 04
         BR    R14                 08 IS NOT AN ERROR IN THIS CASE
         DC    X'0707'
         B     ERROR12             ERROR 12
ERROR4   MVC   OUTLINE(L'ERRORM4),ERRORM4  VOL NOT MOUNTED
         B     ERWTS
ERROR8   MVC   OUTLINE(L'ERRORM8),ERRORM8  NO DSCBS
         B     ERWTS
ERROR12  MVC   OUTLINE(L'ERRORM12),ERRORM12  I/O ERROR
ERWTS    BAL   R14,WRITLINE
         B     ENDDSCBS
         EJECT
*  THIS RTN CONVERTS THE DSCB ADDRESS IN LOC. TTR TO THE
*       FORMAT OF  CCHHR
         SPACE 3
RELTOABS LH    R9,TTR              LOAD TT INTO R7
         XR    R8,R8
         D     R8,NTRKPCYL
*              REG 9  CONTAINS QUOTIENT - CC
*              REG 8  CONTAINS REMAINDER- HH
         STH   R9,CCHHR1       STORE  CC
         STH   R8,CCHHR3       STORE  HH
         MVC   CCHHR5,TTR+2    STORE  R
         BR    R14
*
* THIS RTN WILL NOT WORK IF THE DSCB ADDR ON THE DATA CELL IS NOT
*      ON THE IST STRIP
         EJECT
*
*  THIS ROUTINE INCREMENTS TO THE NEXT DSCB ADDR WHICH IS IN THE
*  1ST THREE BYTES OF LOC. TTR AND THEN CALLS RELTOABS TO CONVERT THE
*  ADDRESS TO THE FORMAT - CCHHR
NEXTADDR LA    R8,1                LOAD R8 WITH 1
         CLC   TTR+2(1),DSCBPTRK   HAS END OF TRK BEEN REACHED ?
         BL    INCRR               NO, THEN BRANCH
         STC   R8,TTR+2            STORE  1  IN R
         AH    R8,TTR              ADD 1 TO TT
         STH   R8,TTR
         B     CONVTTR
INCRR    IC    R8,TTR+2
         LA    R8,1(R8)            ADD 1 TO R
         STC   R8,TTR+2
CONVTTR  ST    R14,TSAVE           SAVE RETURN ADDR
         BAL   R14,RELTOABS        CONVERT TO CCHHR
         L     R14,TSAVE
         BR    14                  RETURN
TSAVE    DS    F
         EJECT
*      THIS ROUTINE ACCUMULATES THE SPACE OCCUPIED BY THE EXTENT AS
*      DESCRIBED IN EXAREA
*         ENTRY TO THE ROUTINE IS BY :-  BAL  R14,ACCUMSP
         SPACE 2
ACCUMSP  CLC   EXSTART(8),HEXZERO  IS THIS A DUMMY DSCB ? I.E. NO SPACE
         BCR   8,R14               YES,THEN RETURN
         STM   R2,R4,SAVEREGS
         CLI   DEVTYP,X'05'        IS THE DEVICE A DATA CELL
         BE    CELLEXT             YES,THEN BRANCH
ACCTOT   LH    R4,EXEND
         LH    R2,EXEND+2          IS END TRK ADDR LOWER THAN START TRK
         CH    R2,EXSTART+2        ADDR NO THEN BRANCH.
         BNL   ENDGRTER            YES, THEN ADD NO. OF TRK/CYL TO END
         A     R2,NTRKPCYL         TRK.ADDR SUB 1 FROM END CYL ADDR
         BCTR  R4,0
ENDGRTER SH    R4,EXSTART
         AH    R4,TOTFCYLS         ACCUM NO OF CYLS IN EXTENT
         STH   R4,TOTFCYLS
         SH    R2,EXSTART+2
         LA    R2,1(R2)
         AH    R2,TOTFTRKS         ACCUM NO OF TRKS IN EXTENT
         STH   R2,TOTFTRKS
         LM    R2,R4,SAVEREGS
         BR    R14                 RETURN
         SPACE 1
* THIS CODING CONVERTS THE DATA CELL EXTENT ADDRESSES FROM SUB-CELL,
* STRIP,CYLINDER,TRACK TO  CYLINDERS AND TRACKS
         SPACE 1
CELLEXT  XR    R2,R2
         XR    R3,R3
CUPLIM   IC    R3,EXSTART(R2)
         MH    R3,=H'50'           CONVERT SUB-CELLS TO CYLS
         LR    R4,R3
         XR    R3,R3
         IC    R3,EXSTART+1(R2)
         MH    R3,=H'5'            CONVERT STRIPS TO CYLS
         AR    R4,R3
         XR    R3,R3
         IC    R3,EXSTART+2(R2)
         AR    R4,R3
         STH   R4,EXSTART(R2)      STORE ADDR BACK AS CYLS
         IC    R3,EXSTART+3(R2)    CLEAR EXSTART+2 I.E. STORE REMAINDER
         STH   R3,EXSTART+2(R2)    OF ADDR AS TRKS
         LTR   R2,R2               HAS EXTENT END ADDR BEEN CONVERTED?
         BNZ   ACCTOT              YES,THEN GO & ACCUM TOTALS
         LA    R2,4(R2)
         B     CUPLIM              GO CONVERT END ADDR
         SPACE 6
SAVEREGS DS    3F                 REG SAVE AREA
         DS    0H
EXAREA   DS    0CL10              EXTENT AREA
         DS    C                  FLAG BYTE
         DS    C                  EXTENT SEQUENCE NO
EXSTART  DS    2H                 EXTENT START ADDR I.E. CCHH
EXEND    DS    2H                 EXTENT END ADDR   I.E. CCHH
         EJECT
*
*
*
*  A RTN TO OUTPUT AND CLEAR OUTLINE
*
*
WRITLINE ST    R14,DOUD
         CALL  WRITIT,(OUTLINE,LINENO)
         MVI   OUTLINE,X'40'
         MVC   OUTLINE+1(L'OUTLINE-1),OUTLINE
         LH    R4,LINENO
         BCTR  R4,0
         STH   R4,LINENO
         L     R14,DOUD
         BR    R14
         EJECT
*
*
*  RTN TO CONVERT TOTAL SPACE INTO CYL.TRK
*        R6  PTR  OUTPUT ADDRESS
*        R7  CONTAINS TOTAL NO. OF CYLS
*        R9  CONTAINS TOTAL NO. OF TRKS
*        ON RETURN FROM RTN R6 WILL PTR TO END BYTE + 1 OF EDITED SPACE
*
EDSPACE  XR    R8,R8
         D     R8,NTRKPCYL
*                          R 9 CONTAIN QUOTIENT   -  CYLS
*                          R 8 CONTAIN REMAINDER  -  TRKS
         AR    R9,R7
         CVD   R9,DOUD
         MVC   0(6,R6),EDWD
         ED    0(6,R6),DOUD+5      RESULT         '   100'
         MVI   1(R6),C'+'          RESULT         ' + 100'
         CVD   R8,DOUD
         CLI   NTRKPCYL+3,X'0A'    NO.OF TRK/CYL = 10 ?
         BNE   GR1OTRK             NO,BRANCH
         UNPK  7(1,R6),DOUD+7(1)   RESULT         ' + 100 A'
         MVI   6(R6),C'.'          RESULT         ' + 100.A'
         OI    7(R6),X'F0'         RESULT         ' + 100.1'
         LA    R6,8(R6)
         BR    R14                 RETURN
*
GR1OTRK  UNPK  6(3,R6),DOUD+6(2)   RESULT         ' + 100 0A'
         MVI   6(R6),C'.'
         OI    8(R6),X'F0'
         LA    R6,9(R6)
         BR    R14
PARMADDR DS    F
HEXFF    DC    8X'FF'
CVTPTR   EQU   16
HEXF0    DC    X'0000000F'
VOLID    DS    CL6
TTR      DS    F
DEVTYP   DS    C
TRKTAB   EQU   DEVTYP
         DC    AL1(10)        TRK/CYL FOR 2311
         DC    AL1(200)       TRK/CYL FOR 2301
         DC    AL1(10)        TRK/CYL FOR 2303
         DC    AL1(46)        TRK/CYL FOR 2302
         DC    AL1(20)        TRK/CYL FOR 2321
H50      DC    H'50'           ----------
         DC    AL1(20)        TRK/CYL FOR 2314
         DC    AL1(19)        TRK/CYL FOR 3330
NTRKPCYL DS    F          NO OF TRK/CYL OF CURRENTLY PROCESSED UNIT
CCHHR1   DS    C
CCHHR2   DS    C
CCHHR3   DS    C
CCHHR4   DS    C
CCHHR5   DS    C
CONTINUE DC    C'CONTINUED'
ON       DC    C'ON'
HEADING  DC    C'VTOC LISTING OF '
         DC    C' '
OUTLINE  DC    CL102' '
DSCBLIST CAMLST SEEK,CCHHR1,VOLID,WKAREA
WKAREA   DS    0D,CL350
ERRORM4  DC    C'THE VOLUME IS NOT MOUNTED'
ERRORM8  DC    C'NO DSCBS'
ERRORM12 DC    C'I/O ERROR'
DSCBPTRK DS    C
TOP      DS    CL5
ISTEXS   DS    C
         DS    0F
TOTFCYLS DS    H
TOTFTRKS DS    H
DOUD     DS    D
UNEXTDE  DC    C'UNUSED EXTENTS IN CYL.TRK ='
HEXZERO  DC    8X'00'
DETHEAD  DS    0CL70
         DC    CL45'DSNAME'
         DC    C'CR.DT  EX.DT OR EX SPACE  '
         DC    C'  USED '
         DC    C'BLSZE LRECL RCFM KEY RKP'
LINENO   DC    H'50'
EDWD     DC    X'402020202120'
EDWD2    DC    X'40202120'
MAXDSCBS EQU   49             MAX NO. DSCB'S PER PAGE
LASTLINE DC    Y(50-MAXDSCBS+2)
IS       DC    C'IS'
PS       DC    C'PS'
DA       DC    C'DA'
PO       DC    C'PO'
EXSAVE   DS    PL2
PTO      DC    C'P.T.O.'
INVUCB   DC    C'INVALID UNIT ADDRESS, RETRY'
         LTORG
         ISEQ
         EJECT
UCBDSECT DSECT
SRTEJBNR DS    C         INTERNAL JOB NUMBER
SRTECHAN DS    C         ALLOCATION CHANNEL MASK
UCBID    DS    C         IDENTIFIER
SRTESTAT DS    C         STATUS BITS
UCBCHA   DS    C         CHANNEL ADDRESS
UCBUA    DS    C         UNIT ADDRESS
UCBFLI   DS    C         FLAB BITS
UCBDTI   DS    C         INDEX TO DEVICE TABLE
UCBETI   DS    C         CONSTANT FOR ERROR ROUTINE USE
UCBSTI   DS    C         INDEX TO STATISTICS TABLE
UCBLCI   DS    C         INDEX TO LOGICAL CHANNEL TABLE
UCBATI   DS    C         INDEX TO ATTENTION TABLE
UCBWGT   DS    C         FLAGS AND CHANNEL MASK
UCBNAME  DS    CL3       UNIT NAME
UCBTYP1  DS    C         FLAGS
UCBTYP2  DS    C         OPTIONAL FEATURES
UCBTYP3  DS    C         DEVIVE CLASS
UCBTYP4  DS    C         UNIT TYPE
UCBLTS   DS    CL2       LAST REQUEST ELEMENT
UCBSNS   DS    CL6       SENSE INFORMATION
SRTEVOLI DS    CL6       VOLUME SERIAL NUMBER
SRTESTAB DS    C         STATUS BITS
SRTEDMCT DS    C         NUMBER OF DCB S  OPENED
VTOCADDR DS    CL4       VTOC ABSOLUTE TRACK ADDRESS
UCBSQC   DS    CL8       SEEK QUEUE CONTROL WORD
UCBSKA   DS    CL8       DA ADDRESS OF LAST SEEK  (MBBCCHHR)
SRTEUSER DS    C         NUMBER OF USERS
SRTEECBA DS    CL3       DA ECB ADDRESS
ERRCOVRY DS    CL40      ERROR RECOVERY WORK AREA
TRKOVRWA DS    CL40      TRACK OVERFLOW WORK AREA
         SPACE
DSCBSECT DSECT
         ORG   DSCBSECT
DS1DSNAM DS    CL44      DATA SET NAME
DS1FMTID DS    C         FORMAT IDENTIFIER
DS1DSSN  DS    CL6       DATA SET SERIAL NUMBER
DS1VOLSQ DS    CL2       VOLUME SEQUENCE NUMBER
DS1CREDT DS    CL3       CREATION DATE
DS1EXPDT DS    CL3       EXPIRATION DATE
DS1NOEPV DS    C         NO OF EXTENTS
DS1NOBDB DS    C         BYTES USED IN LAST PDS DIRECTORY BLOCK
DS1RES01 DS    C         RESERVED AREA
DS1SYSCD DS    CL13      PROGRAMMIN SYSTEM CODE ID
DS1RES02 DS    CL7       RESERVED AREA
DS1DSORG DS    CL2       DATA SET ORGANIZATION
DS1RECFM DS    C RECORD FORMAT
DS1OPTCD DS    C OPTION CODE
DS1BLKL  DS    CL2 BLOCK LENGTH
DS1LRECL DS    CL2       LOGICAL RECORD LENGTH
DS1KEYL  DS    C         KEY LENGTH
DS1RKP   DS    CL2       RELATIVE KEY POSITION IN THE DATA BLOCK
DS1DSIND DS    C         DATA SET INDICATORS
DS1SCALO DS    CL1       SECONDARY ALLOCATION
DS1SCALN DS    CL3       NUMBER OF UNITS
DS1LSTAR DS    CL3       POINTER TO LAST WRITTEN BLOCK
DS1TRBAL DS    CL2       LL PART OF DISK ADDR
DS1RES03 DS    CL2       RESERVED AREA
DS1EXT1  DS    CL10      FIRST EXTENT DESCRIPTION
DS1EXT2  DS    CL10      SECOND EXTENT DESCRIPTION
DS1EXT3  DS    CL10      THIRD EXTENT DESCRIPTION
DS1PTRDS DS    CL5       DIRECT ACCESS ADDR OF NEXT DSCB
         ORG   DSCBSECT
DS2HEXCD DS    C         HEX CODE
DS22MIND DS    CL7       START ADDR OF 2ND LEVEL MASTER INDEX
DS2L2MEN DS    CL5       ENDING ADDR OF 2ND LEVEL MASTER INDEX
DS23MIND DS    CL7       START ADDR OF 3RD LEVEL MASTER INDEX
DS2L3MIN DS    CL5       ENDING ADDR OF 3RD LEVEL MASTER INDEX
DS2RES01 DS    CL19      RESERVED AREA
DS2FMTID DS    C         FORMAT IDENTIFIER
DS2NOLEV DS    C         NO OF INDEX LEVELS
DS2DVIND DS    C         NO OF TRACKS DETERMINING DEVELOPMENT OF
*                             MASTER INDEX
DS21RCYL DS    CL3       HHR OF FIRST DATA RECORD ON EACH CYLINDER
DS2LTCYL DS    CL2       HH  OF LAST DATA RECORD ON EACH CYLINDER
DS2CYLOV DS    C         NO OF TRACKS IN OVERFLOW
DS2HIRIN DS    C         HIGHEST R OF HIGHEST LEVEL INDEX
DS2HIRPR DS    C         HIGHEST R OF PRIME DATA
DS2HIROV DS    C         HIGHEST R OF OVERFLOW TRACKS
DS2RSHTR DS    C         LAST DATA RECORD R ON SHARED TRACK
DS2HIRTI DS    C         HIGHEST R OF TRACK INDEX
DS2RES02 DS    C         RESERVED AREA
DS2TAGDT DS    CL2       NUMBER OF DELETE RECORDS
DS2RORG3 DS    CL3       NO OF REF TO SUCCEEDING OVERFLOW RECORDS
DS2NOBYT DS    CL2       NO OF BYTES FOR HIGHEST LEVEL INDEX
DS2NOTRK DS    C         NO OF TRACKS FOR HIGHEST LEVEL INDEX
DS2PRCTR DS    CL4       NO OF RECORDS IN PRIME DATA AREA
DS2STIND DS    C         INDICATORS
DS2CYLAD DS    CL7       ADDR OF 1ST TRACK OF CYLINDER INDEX
DS2ADLIN DS    CL7       ADDR OF 1ST TRACK OF LOWEST LEVEL MASTER INDEX
DS2ADHIN DS    CL7       ADDR OF 1ST TRACK OF HIGHEST LEVEL INDEX
DS2LPRAD DS    CL8       ADDR OF LAST RECORD IN PRIME DATA AREA
DS2LTRAD DS    CL5       ADDR OF LAST ENTRY ON TRACK INDEX
*                             ON LAST CYLINDER
DS2LCYAD DS    CL5       ADDR OF LAST ENTRY IN CYLINDER INDEX
DS2LMSAD DS    CL5       ADDR OF LAST ENTRY IN MASTER INDEX
DS2LOVAD DS    CL8       ADDR OF LAST RECORD WRITTEN IN
*                             INDEPENDENT OVERFLOW AREA
DS2BYOVL DS    CL2       NO OF BYTES LEFT ON INDEPENDENT OVERFLOW TRACK
DS2RORG2 DS    CL2       NO OF TRACKS LEFT ON INDEPENDENT OVERFLOW AREA
DS2OVRCT DS    CL2       NO OF RECORDS IN OVERFLOW AREA
DS2RORG1 DS    CL2       NO OF FULL CYLINDER OVERFLOW AREAS
DS2RES03 DS    CL3       RESERVED AREA
DS2PTRDS DS    CL5       DIRECT ACCESS ADDR OF NEXT DSCB
         ORG   DSCBSECT
DS3KEYID DS    CL4       KEY IDENTIFIER
DS3EXTNT DS    CL40      FOUR EXTENT DESCRIPTIONS
DS3FMTID DS    C         FORMAT IDENTIFIER
DS3ADEXT DS    CL90      NINE EXTENT DESCRIPTIONS
DS3PTRDS DS    CL5       RESERVED    BINARY ZEROS
         ORG   DSCBSECT
DS4PADBT DS    CL44      PADDING BYTES
DS4IDFMT DS    C         FORMAT IDENTIFIER
DS4HPCHR DS    CL5       HIGHEST DISK ADDR OF FORMAT 1 DSCB
DS4DSREC DS    CL2       NO OF AVAILABLE FORMAT 0 DSCB S IN VTOC
DS4HCCHH DS    CL4       ADDRS OF NEXT ALTERNATE TRACK
DS4NOATK DS    CL2       NO OF AVAILABLE ALTERNATE TRACKS
DS4VTOCI DS    C         VTOC INDICATORS
DS4NOEXT DS    C         VTOC CONSTANT
DS4RES01 DS    CL2       RESERVED AREA
DS4DEVSZ DS    CL4       DEVICE SIZE
DS4DEVTK DS    CL2       DEVICE TRACK LENGTH
DS4DEVI  DS    C         CONSTANT FOR KEYED BLOCK
DS4DEVL  DS    C         CONSTANT FOR LAST BLOCK
DS4DEVK  DS    C         CONSTANT FOR NO KEY IN BLOCK
DS4DEVFG DS    C         NO OF DIRECTORY BLOCKS PER TRACK
DS4DEVTL DS    CL2       DEVICE TOLERANCE
DS4DEVDT DS    C         NO OF DSCB S ON A TRACK
DS4DEVDB DS    C         NO OF DIRECTORY BLOCKS PER TRACK
DS4RES02 DS    CL24      RESERVED AREA
DS4F6PTR DS    CL5       DIRECT ACCESS ADDR OF 1ST FORMAT6 DSCB
DS4VTOCE DS    CL10      VTOC EXTENT
DS4RES03 DS    CL25      RESERVED AREA
         ORG   DSCBSECT
DS5KEYID DS    CL4       KEY IDENTIFICATION
DS5AVEXT DS    CL5       AN AVAILABLE EXTENT
DS5EXTAV DS    CL35      SEVEN MORE AVAILABLE EXTENTS
DS5FMTID DS    C         FORMAT IDENTIFIER
DS5MAVET DS    CL90      EIGHTEEN MORE AVAILABLE EXTENTS
DS5PTRDS DS    CL5       DIRECT ACCESS ADDR OF NEXT FORMAT5 DSCB
         ORG   DSCBSECT
DS6KEYID DS    CL4       KEY IDENTIFICATION
DS6AVEXT DS    CL5       ADDR AND SIZE OF A SHARED EXTENT
DS6EXTAV DS    CL35      ADDR AND SIZE OF SEVEN MORE SHARED EXTENTS
DS6FMTID DS    C         FORMAT IDENTIFIER
DS6MAVET DS    CL90      ADDR AND SIZE OF 18 MORE SHARED EXTENTS
DS6PTRDS DS    CL5       DIRECT ACCESS ADDR OF NEXT FORMAT6 DSCB
         END
