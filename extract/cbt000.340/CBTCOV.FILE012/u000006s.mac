AMM.     TITLE 'CONTROL CARD GENERATOR TO EDIT COMPILERS - A.MORRISH.'
         LCLA  &A
RTP5010M CSECT
*
*  THE USER PRESENTS THIS PROGRAM WITH ONE OR MORE CHARACTER STRINGS
*  IN THE PARM FIELD OF THE EXEC CARD.
*  THE PROGRAM THEN SEARCHES THE DIRECTORY OF THE SYSLIB AND, FOR EACH
*  MEMBER WHOSE NAME BEGINS WITH ONE OF THE SELECTED CHARACTER STRINGS,
*  IT PREPARES TWO CARD IMAGES - ONE IS A SELECT CARD FOR IEHMOVE
*  WHICH IS OUTPUT TO THE SYSUT1 DATA SET, AND THE OTHER IS A SCRATCH
*  CARD WHICH IS OUTPUT TO THE SYSUT2 DATA SET.
*  THE OUTPUT MAY BE SENT TO THE PUNCH FOR LATER USE, OR MAY BE USED
*  DYNAMICALLY AS ILLUSTRATED BELOW
*
***********************************************************************
*                                                                     *
*  THIS PROGRAM SCANS THE DIRECTORY OF A PDS FOR COMPILER MODULES.    *
* FOR EACH COMPILER MODULE FOUND THE PROGRAM GENERATES A SELECT       *
* CONTROL STATEMENT FOR IEHMOVE AND A SCRATCH CONTROL STATEMENT FOR   *
* IEHPROGM. THUS TO MOVE ALL PL/1 MODULES TO A NEW LIBRARY CODE :     *
*                                                                     *
*       //CD  EXEC PGM=RTP5010M,PARM=IEM                              *
*       //SYSPRINT DD SYSOUT=A                                        *
*       //SYSUT1   DD DISP=(,PASS),SPACE=..,UNIT=..,DSN=&SELECT       *
*       //SYSUT2   DD DISP=(,PASS),SPACE=..,UNIT=..,DSN=&SCRATCH      *
*       //SYSLIB   DD DISP=(SHR,PASS),DSN=SYS1.LINKLIB                *
*       //MV  EXEC PGM=RTPMOVE                                        *
*       //SYSPRINT DD SYSOUT=A                                        *
*       //SYSUT1   DD DISP=(OLD,DELETE),UNIT=..                       *
*       //CPFALL    DD   DISP=(SHR,PASS),DSN=SYS1.LINKLIB             *
*       //CPTALL   DD DISP=(,CATLG),SPACE=..,UNIT=..,DSN=SYS1.COMPPL1 *
*       //SYSUT2   DD UNIT=..,SPACE=..                                *
*       //         DD DISP=(OLD,DELETE),DSN=&SELECT                   *
*       //DL  EXEC PGM=IEHPROGM                                       *
*       //SYSPRINT DD SYSOUT=A                                        *
*       //LIB      DD DISP=(OLD,PASS),DSN=SYS1.LINKLIB                *
*       //SYSIN    DD DISP=(OLD,DELETE),DSN=&SCRATCH                  *
*       //                                                            *
*                                                                     *
***********************************************************************
         SPACE 1
* REGISTER USAGE.
R0       EQU   0                   WORK REGISTER.
R1       EQU   1                   PARAMETER REGISTER / WORK REGISTER.
R2       EQU   2
R3       EQU   3                   CHARACTER ADDRESS REGISTER.
R4       EQU   4                   BXLE INCREMENT.
R5       EQU   5                   BXLE LIMIT
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9                   ADDRESS OF CURRENT MEMBER.
R10      EQU   10                  RESIDUAL PARAMETER LENGTH COUNT.
R11      EQU   11                  PARAMETER LIST ADDRESS.
RBASE    EQU   12                  BASE REGISTER.
R13      EQU   13                  SAVE AREA POINTER.
R14      EQU   14                  RETURN ADDRESS.
R15      EQU   15                  ENTRY POINT ADDRESS / RETURN CODE.
         EJECT
*        BEGIN (SAVE,,SAVE),BASE=RBASE  INITIALISE AND DEFINE BASE REG.
         STM   14,12,12(13)
         BALR  RBASE,0
         USING *,RBASE
         LA    15,SAVE
         ST    15,8(13)
         ST    13,4(15)
         LR    13,15
         USING SAVE,13
         SPACE 1
*
*        OBTAIN PARAMETERS
*
         SPACE 1
         L     R11,0(R1)           SET GR11 -> PARAMETER LIST.
         SPACE 1
*
*        READ DIRECTORY OF SYSLIB.
*
         SPACE 1
         MVI   UT2+26,X'02'        SET DSORG TO PO.
         MVI   UT2+50,X'24'        SET MACRF = R.
         LINK  SF=(E,LINKL),MF=(E,PARMS)     LINK TO READ DIRECTORY.
         MVI   UT2+50,0            SET MACRF = PM.
         SPACE 1
*
*        SET UP NAMES IN SYSPRINT AND SYSUT2 DATA SETS.
*
         SPACE 1
         RDJFCB MF=(E,RDJFCBL)     READ JOB FILE CONTROL BLOCK.
         MVC   PRTHDG+53(44),JFCB  STORE DSNAME IN HEADER.
         MVC   SCARD1+22(44),JFCB  STORE DSNAME IN SCRATCH CARD.
         LA    R3,SCARD1+65        SET GR5 -> LAST CHARACTER.
         CLI   0(R3),C' '          IS CHARACTER BLANK ?
         BNE   *+8                 IF NOT THEN EXIT.
         BCT   R3,*-8              LOOP UNTIL END FOUND.
         MVI   1(R3),C','          STORE DELIMITER.
         LA    R15,SCARD1+54       SET GR15 -> LAST COLUMN FOR STORE.
         CR    R3,R15              COMPARE FOR VOL= FIT.
         BNH   *+8                 IF FIT THEN LEAVE.
         LA    R3,SCARD2+13        SET GR3 FOR NEXT CARD.
         MVC   2(8,R3),CVOL        STORE VOL=
         L     R1,16               SET GR1 -> CVT.
         L     R1,0(R1)            SET GR1 -> TCB POINTERS.
         L     R1,4(R1)            SET GR1 -> CURRENT TCB.
         L     R1,12(R1)           SET GR1 -> TIOT.
         SR    R0,R0               SET GR0 = 0.
         LA    R1,24(R1)           SET GR1 -> FIRST DD ENTRY.
         CLC   4(8,R1),UT2+40      COMPARE FOR SYSLIB.
         BE    *+12                EXIT WHEN FOUND.
         IC    R0,0(R1)            SET GR0 = LENGTH OF ENTRY.
         BXH   R1,R0,*-14          LOOP UNTIL FOUND.
         LH    R1,18(R1)           SET GR1 -> UCB.
         MVC   6(3,R3),13(R1)      STORE UNIT ADDRESS.
         MVC   10(6,R3),28(R1)     STORE SERIAL NUMBER.
         LA    R3,15(R3)           SET GR3 -> END OF VOL PARM.
         CLI   0(R3),C' '          IS CHARACTER BLANK ?
         BNE   *+8                 IF NOT THEN END FOUND.
         BCT   R3,*-8              LOOP UNTIL END FOUND.
         MVI   1(R3),C','          STORE DELIMITER.
         LA    R15,SCARD1+70       SET GR15 -> END COLUMN.
         SR    R15,R3              SET GR15 = SPACE REMAINING.
         BM    *+18                IF MINUS THEN ALREADY ON CARD2.
         LA    R0,16               SET GR0 = MINIMUM LENGTH.
         CR    R15,R0              COMPARE FOR FIT.
         BNL   *+8                 IF FIT THEN LEAVE.
         LA    R3,SCARD2+13        SET GR3 FOR NEXT CARD.
         MVC   2(7,R3),CMEMBER     STORE MEMBER=.
         LA    R3,9(R3)            SET GR3 -> ADDRESS FOR MEMBER NAME.
         ST    R3,UT2ADDR          STORE UT2 ADDRESS.
         LA    R0,SCARD2           SET GR0 -> SECOND CARD.
         CR    R3,R0               COMPARE FOR SECOND CARD.
         BCR   2,R14               IF PRESENT THEN RETURN.
         MVI   SCARD1+71,C' '      REMOVE CONTINUATION.
         SPACE 1
*
*        OPEN DATA SETS.
*
         SPACE 1
         MVC   UT2+40(8),CUT2      SET SYSUT2 DDNAME.
         MVI   UT2+26,X'40'        SET DSORG TO PS.
         OPEN  MF=(E,OPENL)
         SPACE 1
*
*        INITIALISE FOR MAIN LOOP.
*
         SPACE 1
         L     R9,PARMS            SET GR9 -> DYNAMIC BUILD LIST.
         LA    R9,4(R9)            SET GR9 -> FIRST MEMBER.
         SPACE 1
*
*        START OF MAIN LOOP.
*
         SPACE 1
MAINLOOP DS    0H
         CLI   0(R9),X'FF'         IS IT END OF LIST.
         BE    WINDUP              IF SO THEN GO TO ENDUP
         SPACE 1
*
*        SCAN FOR MEMBER NAMES.
*
         SPACE 1
         LH    R10,0(R11)          SET GR10 = LENGTH OF PARAMETER LIST.
         LA    R3,2(R11)           SET GR3 -> FIRST PARAMETER.
LOOP1    BCTR  R10,R0              DECREMENT GR10 FOR EXECUTE.
         LA    R1,1(R3,R10)        SET GR1 FOR EXECUTE FAIL.
         EX    R10,TRT             SCAN FOR COMMA.
         SR    R1,R3               SET GR1 = LENGTH OF PARAMETER.
         BNP   NOPARM              IF NOT PLUS THEN GO TO SET NEXT.
         SR    R10,R1              DECREMENT GR10 FOR RESIDUAL LENGTH.
         BCTR  R1,R0               DECREMENT GR1 FOR EXECUTE.
         EX    R1,CLC              COMPARE FOR MEMBER.
         BE    SETPRT              IF FOUND THEN GO TO SET PRINT.
NOPARM   LA    R3,2(R3,R1)         SET GR3 -> NEXT PARAMETER.
         LTR   R10,R10             TEST SIGN OF GR10.
         BP    LOOP1               IF PLUS THEN GO TO TEST NEXT.
NOMATCH  LA    R9,12(R9)           SET GR9 -> NEXT MEMBER.
         B     MAINLOOP            GO TO TEST NEXT MEMBER.
         SPACE 1
*
*        WRITE SYSPRINT MESSAGE.
*
         SPACE 1
SETPRT   TM    PRT+48,X'10'        IS SYSPRINT OPEN ?
         BZ    SETUT1              IF NOT THEN GO TO SET SELECT CARDS
         LM    R3,R5,PRTADDR       SET REGISTERS TO STORE NAME.
         MVC   0(8,R3),0(R9)       STORE MEMBER NAME IN SYSPRINT.
         BXLE  R3,R4,ENDPRT        INCREMENT GR3 FOR NEXT AND GO TO ST.
         SR    R2,R2               SET GR2 = 0.
         LA    R0,LINE1            SET GR0 -> FIRST LINE.
         SR    R3,R0               SET GR3 = OFFSET FROM START.
         DR    R2,R4               SET GR2 = OFFSET IN FIRST CARD.
         LA    R3,LINE1+12(R2)     SET GR3 -> NEXT COL IN FIRST LINE
         LA    R0,LINE1+L'LINE1-8  SET GR0 -> LAST COLUMN FOR START.
         CR    R3,R0               COMPARE FOR FIT.
         BNH   ENDPRT              IF FIT THEN GO TO STORE NEXT.
         LA    R3,LINE1            SET GR3 -> FIRST LINE.
         PUT   PRT,PRTHDG1
         PUT   PRT,PRTHDG          WRITE HEADING.
PUTLOOP  PUT   PRT,(R3)            WRITE DATA LINE.
         MVI   1(R3),C' '          BLANK FIRST DATA BYTE OF LINE.
         MVC   2(L'LINE1-2,R3),1(R3)    BLANK REMAINDER OF LINE.
         BXLE  R3,R4,PUTLOOP       LOOP UNTIL ALL LINES WRITTEN.
         LA    R3,LINE1+1          SET GR3 -> FIRST COLUMN.
ENDPRT   ST    R3,PRTADDR          STORE ADDRESS FOR NEXT NAME.
         SPACE 1
*
*        WRITE SYSUT1 (IEHMOVE) CONTROL CARD.
*
         SPACE 1
SETUT1   TM    UT1+48,X'10'        IS SYSUT1 DATA SET OPEN ?
         BZ    SETUT2              IF NOT THEN GO TO WRITE SYSUT2.
         L     R3,UT1ADDR          SET GR1 -> NEXT ADDRESS.
         MVC   2(8,R3),0(R9)       MOVE NAME INTO SELECT CARD.
         LA    R3,9(R3)            SET GR3 TO END OF NAME.
         CLI   0(R3),C' '          IS CHARACTER BLANK ?
         BNE   *+8                 IF NOT THEN END OF NAME FOUND.
         BCT   R3,*-8              LOOP UNTIL END OF NAME FOUND.
         MVI   1(R3),C','          STORE DELIMITER.
         LA    R0,MCARD+60         SET GR0 -> LAST LOCATION FOR STORE.
         CR    R3,R0               COMPARE FOR FIT.
         BNH   ENDUT1              IF FIT THEN GO TO STORE.
         MVI   1(R3),C')'          STORE CLOSING PARENTHESIS.
         MVC   2(10,R3),SCARD2     BLANK REMAINDER OF LINE.
         AP    MCDCT,P1            INCREMENT CARD COUNT:
         UNPK  MCARD+72(8),MCDCT   UNPACK CARD COUNT.
         OI    MCARD+79,X'F0'      REMOVE ZONE.
         PUT   UT1,MCARD           WRITE CARD.
         LA    R3,MCARD+14         SET GR3 FOR NEXT MEMBER.
ENDUT1   ST    R3,UT1ADDR          STORE ADDRESS FOR NEXT MEMBER.
         SPACE 1
*
*        WRITE SYSUT2 (IEHPROGM) CONTROL CARD.
*
         SPACE 1
SETUT2   TM    UT2+48,X'10'        IS SYSUT2 DATA SET OPEN ?
         BZ    NOMATCH             IF NOT THEN GO TO TEST NEXT MEMBER.
         L     R3,UT2ADDR          SET GR3 -> ADDRESS FOR STORE.
         MVC   0(8,R3),0(R9)       STORE MEMBER NAME IN STATEMENT.
         AP    SCDCT,P1            INCREMENT CARD COUNT.
         UNPK  SCARD1+72(8),SCDCT  UNPACK CARD COUNT.
         OI    SCARD1+79,X'F0'     REMOVE ZONE.
         PUT   UT2,SCARD1          WRITE FIRST(OR ONLY) CARD.
         LA    R0,SCARD2           SET GR0 FOR TEST.
         CR    R3,R0               TEST FOR SECOND CARD.
         BL    NOMATCH             IF NONE THEN GO TO TEST NEXT MEMBER.
         AP    SCDCT,P1            INCREMENT CARD COUNT.
         UNPK  SCARD2+72(8),SCDCT  UNPACK CARD COUNT.
         OI    SCARD2+79,X'F0'     REMOVE ZONE.
         PUT   UT2,SCARD2          WRITE CONTINUATION CARD.
         B     NOMATCH             GO TO TEST NEXT MEMBER.
         EJECT
*
*        END OF LIST.
*
         SPACE 1
WINDUP   LA    R0,LINE1+1          SET GR0 -> FIRST PRINT LOCATION.
         C     R0,PRTADDR          COMPARE WITH NEXT ADDRESS.
         BE    WNOPRT              IF EQUAL THEN NO RESIDUAL PRINT.
         LM    R4,R5,PRTADDR+4     SET REGISTERS FOR LOOP.
         LA    R3,LINE1            SET GR3 -> FIRST LINE.
         PUT   PRT,PRTHDG1
         PUT   PRT,PRTHDG          WRITE HEADINGS.
WLOOP1   PUT   PRT,(R3)            WRITE LINE.
         CLI   L'LINE1+1(R3),C' '  IS NEXT LINE USED ?
         BE    *+8                 IF NOT THEN EXIT.
         BXLE  R3,R4,WLOOP1        LOOP UNTIL LINES WRITTEN.
WNOPRT   LA    R0,MCARD+14         SET GR0 FOR TEST.
         L     R3,UT1ADDR          SET GR0 -> NEXT LOCATION.
         CR    R0,R3               COMPARE FOR WRITE.
         BE    WNOUT1              IF NO WRITE THEN GO TO CLOSE.
         MVI   1(R3),C')'          STORE CLOSING PARENTHESIS.
         MVI   2(R3),C' '          STORE BLANK AFTER CLOSING PAREN.
         LA    R1,MCARD+68         SET GR8 FOR SUBTRACT.
         SR    R1,R3               SET GR1 FOR EXECUTE.
         BM    *+8                 IF MINUS THEN SKIP EXECUTE.
         EX    R1,MVC              STORE BLANKS.
         AP    MCDCT,P1            INCREMENT CARD COUNT.
         UNPK  MCARD+72(8),MCDCT   UNPACK CARD COUNT.
         OI    MCARD+79,X'F0'      REMOVE ZONE.
         PUT   UT1,MCARD           WRITE CARD.
WNOUT1   CLOSE MF=(E,CLOSEL)       CLOSE ALL DATA SETS.
*        GOBACK SAVE,RC=0          RETURN.
         L     13,4(13)
         LM    14,12,12(13)
         MVI   12(13),255
         LA    15,0
         BR    14
         SPACE 1
*
*        MODEL STATEMENTS.
*
         SPACE 1
TRT      TRT   0(0,R3),COMMA       SCAN FOR COMMA.
CLC      CLC   0(0,R3),0(R9)       COMPARE FOR MEMBER.
MVC      MVC   3(0,R3),2(R3)       BLANK OUT CARD.
         EJECT
*
*        EXIT ROUTINES.
*
         SPACE 1
PRTDCB   DS    0H                  COMMON ENTRY TO DCB EXIT.
UT1DCB   DS    0H                  COMMON ENTRY TO DCB EXIT.
UT2DCB   DCBEXITS LIST=NO           STORE OVERRIDE BLOCKSIZE.
         EJECT
*
*        CONSTANTS AND WORK AREAS.
*
         SPACE 1
SAVE     DC    18F'0'
PRT      DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=PM,LRECL=L'LINE1,        *
               RECFM=FBM,BLKSIZE=(1912/L'LINE1)*L'LINE1,EXLST=PRTEXIT
UT1      DCB   DDNAME=SYSUT1,DSORG=PS,MACRF=PM,LRECL=80,RECFM=FB,      *
               BLKSIZE=400,EXLST=UT1EXIT
UT2      DCB   DDNAME=SYSLIB,DSORG=PS,MACRF=PM,LRECL=80,RECFM=FB,      *
               BLKSIZE=400,EXLST=UT2EXIT
         SPACE 1
OPENL    OPEN  (PRT,OUTPUT,UT1,OUTPUT,UT2,OUTPUT),MF=L
CLOSEL   CLOSE (PRT,,UT1,,UT2),MF=L
RDJFCBL  RDJFCB UT2,MF=L
         SPACE 1
PRTEXIT  DC    0F'0',X'85',AL3(PRTDCB)
UT1EXIT  DC    0F'0',X'85',AL3(UT1DCB)
UT2EXIT  DC    0F'0',X'07',AL3(JFCB),X'85',AL3(UT2DCB)
         SPACE 1
LINKL    LINK  EP=RTPDIRD,SF=L
PARMS    DC    A(UT2,0,0)
JFCB     DC    44F'0'
         SPACE 1
PRTADDR  DC    A(LINE1+1,L'LINE1,ENDLINE)
UT1ADDR  DC    A(MCARD+14)
UT2ADDR  DC    A(0)
         SPACE 1
MCARD    DC    CL72' SELECT MEMBER=('
CUT2     DC    CL8'SYSUT2'
SCARD1   DC    CL71' SCRATCH PURGE,DSNAME=',C'*'
CVOL     DC    CL8'VOL=000='
SCARD2   DC    CL72' '
CMEMBER  DC    CL8'MEMBER='
         SPACE 1
MCDCT    DC    PL4'0'
SCDCT    DC    PL4'0'
P1       DC    P'1'
         SPACE 1
COMMA    DC    256X'0'
         ORG   COMMA+C','
         DC    X'1'
         ORG
         SPACE 1
PRTHDG1  DC    X'8B'
PRTHDG   DC    X'11',CL132'RTP5010M - MEMBERS SELECTED FOR COPY FROM DA*
               TA SET -'
LINE1    DS    0CL133
.C1      DC    X'09',CL132' '
&A       SETA  &A+1
         AIF   (&A LT 50).C1
         DC    X'89',CL132' '
ENDLINE  EQU   *-8
         END   RTP5010M
