*      IDENTIFICATION DIVISION.
*      PROGRAM-ID. SSM45CSA.
CSORTA   CSECT
         REQU
         USING *,15
         STM   14,12,12(13)
         USING $SA,13
*
*        INPUT TO ROUTINE IS 2 PARAMETERS
*        1ST IS A TABLE OF ADDRESSES OF RECORD KEY AREAS.
*        2ND IS A TABLE OF 2 FULL-WORDS AND A SWITCH AS FOLLOWS-
*            1ST FULL-WORD IS BINARY NO. OF ADDRESSES IN 1ST PARAMETER.
*            2ND FULL-WORD IS KEY-LENGTH FOR COMPARISON.
*            SWITCH IS SINGLE BYTE C'A' FOR ASCENDING SORT ELSE DESC.
*
*        OUTPUT FROM ROUTINE IS A SORTED TABLE OF ADDRESSES RETURNED
*        IN PARAMETER 1,
*        THE RETURN CODE IS ZERO FOR A SUCCESSFUL SORT,
*        16 FOR AN UNSUCCESSFUL SORT
*
******** THE 1ST PARAMETER MUST CONSIST OF AT LEAST 8 * N + 16 BYTES
*        WHERE N IS THE NUMBER OF RECORDS AS THE AREA IS USED AS A WORK
*        AREA
PLOAD    LM    1,2,0(1)
         USING KCONTROL,2
         CLI   $SORTORD,C'D'
         BNE   UPSORT
         MVI   TRYFLAG+1,X'D0'
         MVI   COMP3+7,X'40'       SET BL
         B     *+12
UPSORT   MVI   TRYFLAG+1,X'B0'
         MVI   COMP3+7,X'20'       SET BH
         L     R12,$NSORT          HOLD RECORD COUNT
         CH    R12,POINTERS+2
         BNH   NULLSORT            NO SORTING NECESSARY
         LR    R11,R1              HOLD ADDRESS OF TABLE
         L     1,4(2)
FOUR     EQU   *-2
         BCTR  1,0
         STC   1,COMP1+1
         STC   1,COMP3+1
         SRA   1,8
         BNZ   LONGKEY
         MVC   COMP2(6),COMP1      COPY COMP1 INSTRUCTION
         ST    R11,ACOMB
*
*        NOW MOVE POINTERS TO RIGHT TO ALLOW STRING COUNTS TO BE ADDED
*
         LR    R4,R12              N
         SLL   R4,2                4*N
         LR    R2,R11              SENDING ADDRESS
         LA    R3,16(R2,R4)        RECEIVING AREA
         LR    R9,R3               ADDRESS OF RECEIVING AREA
         BAL   14,MOVESTR
*        NOW SET UP ADDRESSES INTO STRINGS,EACH PRECEDED BY A COUNT
         LR    R10,R9
         LR    R1,R11
         SR    R11,R11
         LR    R8,R11
POINTERS LA    R5,1                NO ELTS IN COMBINED STRING
         LA    R8,1(0,R8)
         CLR   R8,R12
         BNL   FINSTR              ONLY 1 KEY IN STRING, END REACHED
         L     R6,0(0,R9)          CURRENT KEY
         L     R7,4(0,R9)          NEXT KEY
COMP1    CLC   0(0,R6),0(R7)
         BH    SETDEC
         MVI   MOD+1,X'D0'         BNH FOR ASCENDING STRING
         B     *+8
SETDEC   MVI   MOD+1,X'B0'         BNL FOR DESCENDING STRING
ADD      LA    R5,1(0,5)
         LA    R8,1(0,8)
         CLR   R8,R12
         BNL   FINSTR              NO MORE STRINGS
         LA    R9,4(0,R9)
         LR    R6,R7
         L     R7,4(0,R9)
COMP2    CLC   0(0,R6),0(R7)
MOD      BNH   ADD
FINSTR   LR    R14,R11
         SLL   R14,2
         ALR   R11,R5              UPDATE ELT NO. FOR NEXT STRING
         ST    R5,0(0,R1)          STORE NUMBER OF ELEMENTS IN STRING
TRYFLAG  CLI   MOD+1,X'B0'
         BE    REVERSE             DESCENDING STRING
LOOPA    L     R0,0(R14,R10)
         ST    0,4(0,R1)
         LA    R1,4(0,R1)
         LA    R14,4(0,R14)
         BCT   R5,LOOPA
         B     TEST
REVERSE  LR    R14,R11
         SLL   R14,2
LOOPD    SH    R14,FOUR
         L     R0,0(R14,R10)
         ST    R0,4(0,R1)
         LA    R1,4(0,R1)
         BCT   R5,LOOPD
TEST     LA    R9,4(0,R9)          NEXT POINTER
         LA    R1,4(0,R1)
         CLR   R8,R12
         BL    POINTERS
         L     R11,ACOMB
*
*        THE STRINGS OF POINTERS ARE NOW MERGED IN PASSES.
*        EACH STEP OF A PASS COMBINES 2 POINTER STRINGS.
*        AFTER AT MOST LOG2((N+1)/2) PASSES THERE IS 1 STRING OF
*        N POINTERS TO THE SORTED KEY AREAS
START1   ST    R11,ACOMB           ADDRESS FOR PLACING AFTER MERGE
         LR    R10,R1              MERGE AREA AT END OF ALL STRINGS
         SR    R5,R5               TOTAL NO. MERGED ELEMENTS
         LR    R6,R11              ADDRESS 1ST STRING
START2   L     R8,0(0,R6)          NO ELTS 1ST STRING.
         ALR   R5,R8               ADD TO TOTAL MERGED
         CLR   R5,R12
         BL    MERGER              MERGING NOT YET COMPLETE
         CLR   R8,R12
         BNL   FINMOVE             ONE STRING, MERGING COMPLETE
         LR    R2,R6
         L     R3,ACOMB
         LR    R4,R8
         ALR   R4,R4
         LA    R4,4(R4,R4)
         BAL   14,MOVESTR
START3   EQU   *
         LR    R1,R3               ON RETURN R3 HAS NEXT BYTE AFTER MVE
         B     START1
MERGER   LR    R7,R8
         SLL   R7,2
         LA    R7,4(R6,R7)         ADDRESS OF 2ND STRING
         L     R9,0(0,R7)          LENGTH OF 2ND STRING
         ALR   R5,R9
         LA    14,0(R8,R9)
         ST    14,0(0,R10)         STORE COMBINED STRING LENGTH
COMP3A   L     R14,4(0,R6)
         L     R4,4(0,R7)
COMP3    CLC   0(0,R14),0(R4)
         BH    LOW2                TAKE ELEMENT FROM 2ND STRING
         LA    R6,4(0,R6)
*
         MVC   4(4,R1),0(R6)       STORE IN MERGE AREA
         LA    R1,4(0,R1)
         BCT   R8,COMP3A
*        NOW TRANSFER REST OF STRING2 TO MERGE AREA
         LA    R2,4(0,R7)          SENDING AREA
         LA    R4,0(R9,R9)
         ALR   R4,R4               LENGTH
         LA    R3,4(0,R1)          RECEIVING AREA
         BAL   14,MOVESTR
         LR    R6,R2               ADDRESS OF NEXT STRING
*        NOW   TRANSFER MERGED PAIR OF STRINGS TO TABLE
STRCOMB  LR    R2,R10              SENDING AREA
         L     R3,ACOMB            REC     AREA
         L     R4,0(0,R10)
         CLR   R4,R12
         BNL   FINMOVEA
         ALR   R4,R4
         LA    R4,4(R4,R4)
         BAL   14,MOVESTR
         ST    R3,ACOMB            UPDATE FOR NEXT MERGED PAIR
         CLR   R5,R12
         BNL   START3
         LR    R1,R10
         B     START2
LOW2     LA    R7,4(0,R7)
         MVC   4(4,R1),0(R7)       STORE IN MERGE AREA
         LA    R1,4(0,R1)
         BCT   R9,COMP3A
*        NOW TRANSFER REST OF STRING1 TO MERGE AREA
         LA    R2,4(0,R6)
         LA    R4,0(R8,R8)
         ALR   R4,R4
         LA    R3,4(0,R1)          RECEIVING AREA
         BAL   14,MOVESTR
         LA    R6,4(0,R7)          ADDRESS OF NEXT STRING
         B     STRCOMB
MOVESTR  BCTR  R4,0
         STC   R4,MOVESTRA+1
         SRA   R4,8
         BNP   MOVESTRA
         MVC   0(256,R3),0(R2)
         LA    R2,256(0,R2)
         LA    R3,256(0,R3)
         BCT   R4,*-14
MOVESTRA EQU   *
         MVC   0(0,R3),0(R2)
         IC    R4,MOVESTRA+1
         LA    R2,1(R2,R4)         POINT TO 1ST SENDING BYTE AFTER MVE.
         LA    R3,1(R3,R4)         POINT TO 1ST REC.    BYTE AFTER MVE.
         BR    14
FINMOVEA LR    R6,R10
         LR    R8,R4
FINMOVE  LR    R3,R11
         LA    R2,4(0,R6)
         LA    R4,0(R8,R8)
         ALR   R4,R4
         BAL   14,MOVESTR
FINMERGE SR    R0,R0
         ST    R0,16(0,R13)
         LM    14,12,12(13)
         BR    14
NULLSORT BZ    FINMERGE
LONGKEY  EQU   *
SORTFAIL LA    R0,16
         B     FINMERGE+2
         LTORG
$SA      DSECT
ACOMB    DS    F
KCONTROL DSECT
$NSORT   DS    F
$KEYLEN  DS    F
$SORTORD DS    C
         END
