REBFILCM TITLE 'FILCOM, A PROGRAM TO COMPARE TWO FILES'
***********************************************************************
*                                                                     *
*        FUNCTION                                                     *
*            TO COMPARE TWO FILES AND LIST THE DIFFERENCES, INCLUDING *
*            MISSING,INSERTED AND CHANGED LINES. IT IS DESIGNED FOR   *
*            80 BYTE RECORDS FIXED LENGTH WITH OR WITHOUT LINE        *
*            NUMBERS BUT THE LINE NUMBERS WILL BE INCLUDED IN THE     *
*            MATCH.                                                   *
*                                                                     *
***********************************************************************
         REGISTER
*
*        THE PROGRAM
*
         SUBR  REBFILCM
         L     R1,0(R1)           ADDRESS OF PARM= FIELD
         ST    R1,PARMADDR
         OPEN  (DCB1,INPUT,DCB2,INPUT,DCBO,OUTPUT)
         MVI   FLAG,0             INITIALISE ALL VARIABLES
         ZR    R5
         ST    R5,LBUFP1          NO DATA CHAINS YET
         ST    R5,LBUFP2
         LA    F1,LBUFP1          SET UP FILE POINTERS
         LA    F2,LBUFP2
         EJECT
*
*        CHECK DATASET ATTRIBUTES MATCH
*
LRECL    EQU   R11                ALWAYS HOLDS THE RECORD LENGTH
         USING IHADCB,R7
         LA    R7,DCB1
         TM    DCBRECFM,DCBRECV
         BO    VAR1
         LH    LRECL,DCBLRECL
         LA    R7,DCB2
         TM    DCBRECFM,DCBRECV
         BO    BADV
         CH    LRECL,DCBLRECL
         BE    GOODFIX
         PUT   DCBO,M006
         LA    R9,8
         B     ENDIT
VAR1     EQU   *
         LA    R7,DCB2
         TM    DCBRECFM,DCBRECV
         BZ    GOODVAR
BADV     EQU   *
         PUT   DCBO,M005
         LA    R9,8
         B     ENDIT
GOODFIX  EQU   *
         C     LRECL,=F'128'
         BNH   GOODSIZE           WE CANT COPE WITH LARGE RECORDS
         PUT   DCBO,M008
         LA    R9,8
         B     ENDIT
GOODSIZE EQU   *
         OI    FLAG,FLAGF
GOODVAR  EQU   *
         DROP  R7
         EJECT
*
*        READ PARAMETERS
*
         L     R7,PARMADDR
         LHT   R5,0(R7)           LENGTH OF PARAMETER AREA
         BZ    NOPARM
         INCR  R7,2               BYPASS LENGTH
PARMLOOP EQU   *
         CLI   0(R7),C'B'         MATCH BLANK LINES ?
         BE    PARMB
         CLI   0(R7),C'L'         SET MATCH COUNT ?
         BE    PARML
         CLI   0(R7),C'Q'         QUICK FILCOM ?
         BE    PARMQ
         CLI   0(R7),C'S'         IGNORE SPACES ?
         BE    PARMS
         CLI   0(R4),C'N'         INCLUDE LINE NUMBERS
         BE    PARMN
PARMFAIL EQU   *
         PUT   DCBO,M009
         LA    R9,8
         B     ENDIT
PARMB    EQU   *
         OI    FLAG,FLAGPB
         B     PARMNEXT
PARML    EQU   *
         C     R5,=F'3'           MUST BE AT LEAST 3 CHARS HERE
         BL    PARMFAIL
         CLI   1(R7),C'='         MUST HAVE A VALUE
         BNE   PARMFAIL
         LA    R1,0(R5,R7)        ONE CHARACTER BEYOND END
         ZR    R2                 CLEAR FOR TRT
         LR    R6,R5
         S     R6,=F'3'           LENGTH OF REMAINDER - 1
         EX    R6,TEST
         C     R1,=F'2'           DID IT FAIL
         BE    PARMFAIL
         SR    R1,R7
         S     R1,=F'3'           LENGTH OF VALUE - 1
         EX    R1,PACK            PACK VALUE
         LA    R7,2(R1,R7)        INCREMENT POINTER TO LAST BYTE
         SR    R5,R1
         S     R5,=F'2'           AND REDUCE COUNTER TO MATCH
         CVB   R1,CVBWORK
         LTR   R1,R1              CANT HAVE ZERO VALUE
         BZ    PARMFAIL
         ST    R1,MULTCNT         SAVE VALUE
         B     PARMNEXT
TEST     TRT   2(0,R7),NUMTAB-X'40'
PACK     PACK  CVBWORK,2(0,R7)
PARMQ    EQU   *
         OI    FLAG,FLAGPB
         B     PARMNEXT
PARMS    EQU   *
         OI    FLAG,FLAGPS
         B     PARMNEXT
PARMN    EQU   *
         OI    FLAG,FLAGPN
*        B     PARMNEXT
PARMNEXT EQU   *
         BCT   R5,PARMMORE
         B     NOPARM             ALL DONE NOW
PARMMORE EQU   *
         CLI   1(R7),C','         MUST BE A COMMA NEXT
         BNE   PARMFAIL
         INCR  R7,2
         BCT   R5,PARMLOOP
         B     PARMFAIL           TO CATCH TRAILING COMMA
NOPARM   EQU   *
         EJECT
*
*        THE MAIN LOOPS
*
         B     MAINENT
MAIN     EQU   *
         BAL   R14,PURGE          PURGE OUT OLD LINES
MAINENT  EQU   *
         BAL   R14,GETTWO         READ ONE LINE FROM EACH FILE
         LTR   R15,R15
         BNZ   FINISH             FINISH IF BOTH HIT EOF
         BAL   R14,COMPL          COMPARE BOTH LINES
         LTR   R15,R15
         BZ    MAIN               IF SAME THEN CONTINUE
         OI    FLAG,FLAGDIP+FLAGFAD FLAG DIFFERENCE IN PROGRESS
*                                 AND FILES ARE DIFFERENT
         TM    FLAG,FLAGPQ        IS IT A QUICK FILCOM
         BO    DIFERENT           THEN STOP NOW
MAINLOOP EQU   *
         BAL   R14,GETTWO         READ ANOTHER LINE FROM EACH
         LTR   R15,R15
         BNZ   FINISH             FINISH IF BOTH EOF
         TM    0(F2),EOF          IF FILE 2 HIT EOF
         BO    SKIP2              THEN SKIP THIS COMPARE LOOP
         LR    R9,F1              THIS IS WHERE WE WERE
         ICM   F1,7,LBUFP1+1      RESET FILE1 POINTER
CONT2    EQU   *
         BAL   R14,COMPL          COMPARE THE LINES
         LTR   R15,R15
         BNZ   NOMATCH2           IF THEY ARE THE SAME
         BAL   R14,MULTI          THEN LOOK FOR MORE
NOMATCH2 EQU   *
         CR    F1,R9              ARE WE BACK WHERE WE STARTED
         BE    SKIP2              THEN STOP LOOPING
         ICM   F1,7,1(F1)         GET NEW POINTER
         B     CONT2              AND TRY AGAIN
SKIP2    EQU   *
         TM    0(F1),EOF          IF FILE 1 HIT EOF
         BO    SKIP1              THEN SKIP THIS COMPARE
         LR    R9,F2              THIS IS WHERE WE WERE
         ICM   F2,7,LBUFP2+1      RESET FILE2 POINTER
CONT1    EQU   *
         CR    F2,R9              ARE WE AT THE START
         BZ    SKIP1              YES, DONT BOTHER TO CHECK THIS ONE
         BAL   R14,COMPL          COMPARE THE LINES
         LTR   R15,R15
         BNZ   NOMATCH1           IF THEY ARE THE SAME
         BAL   R14,MULTI          THEN LOOK FOR MORE
NOMATCH1 EQU   *
         ICM   F2,7,1(F2)         GET NEW POINTER
         B     CONT1              AND TRY AGAIN
SKIP1    EQU   *
         B     MAINLOOP           LOOP BACK INDEFINATELY
         EJECT
*
*        COME HERE WHEN BOTH FILES HIT EOF
*
FINISH   EQU   *
         BAL   R14,PRNTBOTH       PRINT OUT REMAINDER OF FILES
         TM    FLAG,FLAGFAD       ARE FILES DIFFERENT
         BO    DIFERENT
         PUT   DCBO,M004          NO DIFERENCES ENCOUNTERED
         ZR    R9
         B     ENDIT
DIFERENT EQU   *
         PUT   DCBO,M003          FILES ARE DIFERENT
         LA    R9,4               RETURN CODE
ENDIT    EQU   *
         CLOSE (DCB1,,DCB2,,DCBO,)
         GOODBY RC=(9)
         EJECT
*
*        ROUTINE TO VERIFY SUBSEQUENT LINES OF A SUSPECTED MATCH
*              USES R10+COMPL+GETTWO
*
MULTI    EQU   *
         ST    R14,MULTIRTN       SAVE OUR RETURN ADDRESS
         L     R10,MULTCNT        GET NO OF LINES THAT MUST MATCH
         ST    F1,TEMPF1          SAVE FILE POINTERS ONE
         ST    F2,TEMPF2                         AND TWO
         B     MULTIFND           PRETEND WE HAVE FOUND ONE
MULTINXT EQU   *
         BAL   R14,GETTWO         READ ANOTHER LINE FROM EACH
*                                 IGNORE EOF HERE
         BAL   R14,COMPL          COMPARE THEM
         LTR   R15,R15            IF THEY ARE DIFFERENT
         BZ    MULTIFND
         L     F1,TEMPF1          RESTORE LINE POINTERS
         L     F2,TEMPF2
         L     R14,MULTIRTN       AND RETURN
         BR    R14
MULTIFND EQU   *
         BCT   R10,MULTINXT       HAVE WE ENOUGH
         L     F1,TEMPF1          RESTORE LINE POINTERS TO
         L     F2,TEMPF2          FIRST MATCHED LINES
         BAL   R14,PRNTBOTH       PRINT BOTH FILES UP TO POINTERS
         NI    FLAG,FLAGNDIP      CANCEL DIFERENCE IN PROGRESS
         L     R6,MULTCNT         THE NUMBER OF LINES THAT MATCHED
         B     MULTICNT
MULTISKP EQU   *
         ICM   F1,7,1(F1)         MOVE BOTH POINTERS DOWN TO
         ICM   F2,7,1(F2)         POINT TO LAST MATCH
*                                 NO PROBLEM WITH EOF
MULTICNT EQU   *
         BCT   R6,MULTISKP
         B     MAIN               AND CONTINUE WITH MATCH
MULTIRTN DS    A                  RETURN ADDRESS SAVE AREA
         EJECT
*
*        ROUTINE TO PURGE STORE FROM START OF CHAINS UP TO AND
*        INCLUDING RECORDS UNDER POINTERS.
*              USES R5,R6+PURGEONE
*
PURGE    EQU   *
         ST    R14,PURGERTN       SAVE RETURN ADDRESS
         LR    R5,F1
         LA    R6,LBUFP1
         LR    F1,R6
         BAL   R14,PURGEONE
         LR    R5,F2
         LA    R6,LBUFP2
         LR    F2,R6
         L     R14,PURGERTN       FALL THRU TO PURGEONE
*
*        ROUTINE TO PURGE ONE CHAIN
*              USES R7,R8,R9
*
PURGEONE EQU   *
         ST    R14,PURGEOTN       SAVE RETURN ADDRESS
         ICM   R7,7,1(R6)         GET ADDRESS OF CHAIN
PURGENXT EQU   *
         L     R8,0(R7)           GET POINTER TO NEXT IN CHAIN
*                                 AND FLAG BYTE
         TM    0(R7),EOF          IS THIS THE EOF RECORD
         BO    PURGEDUN           THEN STOP THIS NONSENCE
         LA    R9,4(LRECL)        SIZE TO FREE
FREEBLK  FREEMAIN RU,LV=(9),A=(7),SP=2,RELATED=GETBLK
         CR    R5,R7              WAS THIS THE LAST ONE
         BE    PURGEDUN
         LA    R7,0(R8)           TRY NEXT (CLEAR OFF FLAG BYTE)
         B     PURGENXT
PURGEDUN EQU   *
         ST    R8,0(R6)           STORE POINTER TO NEXT
         L     R14,PURGEOTN       AND RETURN
         BR    R14
PURGERTN DS    A                  RETURN ADDRESS SAVE AREA
PURGEOTN DS    A                  RETURN ADDRESS SAVE AREA
         EJECT
*
*        ROUTINE TO READ ONE RECORD FROM EACH FILE
*              USES R5,R6+GETONE
*
GETTWO   EQU   *
         ST    R14,GETRTN         SAVE RETURN ADDRESS
         LR    R5,F1
         LA    R6,DCB1
         BAL   R14,GETONE
         LR    F1,R5
         LR    R5,F2
         LA    R6,DCB2
         BAL   R14,GETONE
         LR    F2,R5
         ZR    R15                CLEAR RETURN CODE
         L     R14,GETRTN
         TM    0(F1),EOF          IF BOTH FILE1
         BZR   R14
         TM    0(F2),EOF          AND FILE2 ARE AT EOF
         BZR   R14
         LA    R15,4              THEN CHANGE RETURN CODE
         BR    R14
GETRTN   DS    A                  RETURN ADDRESS SAVE AREA
         EJECT
*
*        ROUTINE TO GET A RECORD FROM ONE FILE
*              USES R5,R7,R8
*
GETONE   EQU   *
         TM    0(R5),EOF          DONT BOTHER IF EOF ALREADY
         BOR   R14
         ST    R14,GETOTN         SAVE RETURN ADDRESS
         TM    0(R5),VALID        IS THERE ANOTHER RECORD ALREADY
         BO    GETSKP             THEN USE IT
         LA    R8,4(LRECL)        SIZE REQUIRED
GETBLK   GETMAIN RU,LV=(8),SP=2,RELATED=(FREEBLK,EODAD1)
         LR    R7,R1              ADDRESS OF NEW BUFFER
         MVC   0(4,R7),=F'0'      ZERO FIRST WORD
         LA    R8,4(R7)
GETIT    EQU   *
         GET   (6),(8)
         TM    FLAG,FLAGPB        DO WE NEED BLANK LINES
         BO    GETLNK             IF SO IGNORE THIS
         LR    R1,LRECL
         TM    FLAG,FLAGPN        ARE WE INCLUDING LINE NUMBERS
         BO    GETCOMP
         S     R1,=F'8'           IF NOT SHORTEN COMPARE
GETCOMP  EQU   *
         DECR  R1
         EX    R1,COMPBLNK        IS THIS A BLANK LINE
         BE    GETIT
         B     GETLNK
EODAD    EQU   *
         LA    R8,4(LRECL)        SIZE TO FREE
EODAD1   FREEMAIN RU,LV=(8),A=(7),SP=2,RELATED=GETBLK
         LA    R7,EOFR            SUBSTITUTE ADDRESS OF EOF RECORD
GETLNK   EQU   *
         ST    R7,0(R5)
         MVI   0(R5),VALID        MARK AS A VALID POINTER
GETSKP   EQU   *
         ICM   R5,7,1(R5)         MOVE ON ONE RECORD
         L     R14,GETOTN         RECOVER SAVED RETURN ADDRESS
         BR    R14
GETOTN   DS    A                  RETURN ADDRESS SAVE AREA
         EJECT
*
*        ROUTINE TO COMPARE TWO RECORDS
*
COMPL    EQU   *
         ZR    R15                CLEAR RETURN CODE
         TM    0(F1),EOF          IS FILE1 AT EOF
         BO    COMPEOF1           IF SO GO LOOK AT FILE2
         TM    0(F2),EOF          IS FILE 2 AT EOF
         BO    COMPDIF            IF SO RECORDS ARE DIFERENT
         LR    R1,LRECL
         TM    FLAG,FLAGPN        ARE WE INCLUDING LINE NUMBERS
         BO    COMPLX
         S     R1,=F'8'           IF NOT SHORTEN COMPARE
COMPLX   EQU   *
         DECR  R1
         EX    R1,COMPARE
         BER   R14                IF SAME THEN RETURN
COMPDIF  EQU   *
         LA    R15,4              ELSE CHANGE RETURN CODE
         BR    R14                AND RETURN
COMPEOF1 EQU   *
         TM    0(F2),EOF          IS FILE 2 AT EOF AS WELL
         BOR   R14                IF SO THE RECORDS ARE SAME
         LA    R15,4
         BR    R14                RETURN WITH SET RETURN CODE
COMPARE  CLC   4(0,F1),4(F2)
COMPBLNK CLC   0(0,R8),BLANKS
         EJECT
*
*        ROUTINE TO PRINT OUT DIFFERENCES
*              USES R5,R6+PRNTONE
*
PRNTBOTH EQU   *
         ST    R14,PRNTRTN        SAVE RETURN ADDRESS
         LR    R6,F1
         ICM   R5,7,LBUFP1+1
         MVI   M007T1,C'1'
         BAL   R14,PRNTONE
         PUT   DCBO,M001
         LR    R6,F2
         ICM   R5,7,LBUFP2+1
         MVI   M007T1,C'2'
         BAL   R14,PRNTONE
         PUT   DCBO,M002
         L     R14,PRNTRTN
         BR    R14
PRNTRTN  DS    A
         EJECT
*
*        PRINT RECORDS FROM ONE FILE
*              USES R5
*
PRNTONE  EQU   *
         ST    R14,PRNTOTN
PRNTNXT  EQU   *
         TM    0(R5),EOF
         BO    PRNTDUN
         MVC   M007T2(80),4(R5)
         LR    R1,LRECL
         INCR  R1,9               4 HEADER + CNTRL + 4 'N)  '
         STH   R1,M007T0
         PUT   DCBO,M007
         CR    R5,R6
         BE    PRNTDUN
         ICM   R5,7,1(R5)
         B     PRNTNXT
PRNTDUN  EQU   *
         L     R14,PRNTOTN
         BR    R14
PRNTOTN  DS    A
         EJECT
*
*        DATA AREA
*
         PRINT NOGEN
         LTORG
FLAG     DS    X
FLAGDIP  EQU   X'80'              DIFERENCE IN PROGRESS
FLAGNDIP EQU   X'7F'              NOT FLAGDIP
FLAGFAD  EQU   X'40'              FILES ARE DIFFERENT
FLAGF    EQU   X'20'              FIXED RECORD LENGTH
FLAGPB   EQU   X'10'              B PARAMETER SEEN
FLAGPQ   EQU   X'08'              Q PARAMETER SEEN
FLAGPS   EQU   X'04'              S PARAMETER SEEN
FLAGPN   EQU   X'02'              N PARAMETER SEEN
DCB1     DCB   DSORG=PS,MACRF=(GM),DDNAME=SYSUT1,EODAD=EODAD
DCB2     DCB   DSORG=PS,MACRF=(GM),DDNAME=SYSUT2,EODAD=EODAD
DCBO     DCB   DSORG=PS,MACRF=(PM),DDNAME=SYSPRINT,RECFM=VBA,          +
               BLKSIZE=3156
LBUFP1   DS    A                  POINTERS TO RECORD CHAINS
LBUFP2   DS    A
EOF      EQU   X'80'              END OF FILE RECORD MARKER
VALID    EQU   X'40'              VALID POINTER TO NEXT RECORD
F1       EQU   R3
F2       EQU   R4
TEMPF1   DS    A                  SAVE AREA FOR F1
TEMPF2   DS    A                  DITTO FOR F2
EOFR     DC    AL1(EOF),AL3(EOFR) LOOP BACK DUMMY RECORD TO MARK EOF
MULTCNT  DC    F'3'
CVBWORK  DS    D
M001     DS    0F
         DC    AL2(M001L,0),C' ****'
M001L    EQU   *-M001
*
M002     DS    0F
         DC    AL2(M002L,0),C' **************'
M002L    EQU   *-M002
*
M007     DS    0F
M007T0   DS    FL2
         DC    FL2'0'
         DC    C' '
M007T1   DS    C
         DC    C')  '
M007T2   DS    CL128
*
M003     DS    0F
         DC    AL2(M003L,0),C' % FILES ARE DIFFERENT'
M003L    EQU   *-M003
*
M004     DS    0F
         DC    AL2(M004L,0),C' NO DIFFERENCES ENCOUNTERED'
M004L    EQU   *-M004
*
M005     DS    0F
         DC    AL2(M005L,0),C' ? DATASET ATTRIBUTES DO NOT MATCH'
M005L    EQU   *-M005
*
M006     DS    0F
         DC    AL2(M006L,0),C' ? FIXED RECORD LENGTHS DO NOT MATCH'
M006L    EQU   *-M006
M008     DS    0F
         DC    AL2(M008L,0),C' ? FILCOM WILL ONLY ACCEPT DATASETS WITH +
               LRECL <= 128'
M008L    EQU   *-M008
M009     DS    0F
         DC    AL2(M009L,0),C' ? INCORRECT PARM SYNTAX'
M009L    EQU   *-M009
BLANKS   DC    128C' '
NUMTAB   DC    (X'140')FL1'2'     MOSTLY 2 FIELDS
         ORG   NUMTAB+C','
         DC    FL1'1'             WITH SOME 1
         ORG   NUMTAB+C'0'
         DC    10FL1'0'           AND 0 FIELDS OVERIDING THEM
         ORG
PARMADDR DS    A
*
*        DSECT TO MAP DCBS
*
         DCBD  DSORG=QS,DEVD=DA
         END
/*
