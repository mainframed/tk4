VIC      CSECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*                 VIC   (VTOC INTEGRITY CHECKER)
*
*        VIC IS A SIMPLE PROGRAM THAT CHECKS THE VALIDITY OF THE VTOC
*   ON A DIRECT ACCESS DEVICE. IT HAS BEEN RUN UNDER MFT AND MVT. IT
*   CHECKS FOR TRKS THAT ARE NOT ASSIGNED TO FREE SPACE OR TO ANY DATA
*   SET. IT ALSO CHECKS THAT NO TRACK IS ASSIGNED TO MORE THAN 1 DSCB.
*        DIAGNOSTICS ARE PRINTED ON SYSPRINT FOR EACH VOLUME ANALYZED
*   AND THEY ARE SELF EXPLANATORY. IF THE ONLY ERRORS ARE UNASSIGNED
*   TRACKS OR INVALID FORMAT5 ENTRIES THEN A JOB IS OPTIONALLY
*   SUBMITTED TO THE HASP INTERNAL READER. THIS JOB TURNS ON THE DOS
*   WAS HERE BIT IN THE FORMAT4 AND USES OS ALLOCATE TO RECREATE THE
*   FORMAT5. IF THE ERROR IS ONE OF DUAL ASSIGNMENT APPROPIATE INFO
*   IS PRINTED AND THE INTERNAL READER JOB IS NOT SUBMITTED.
*        THE PROGRAM RUNS IN 18K AND THE JCL IS..
*
*       //VIC EXEC PGM=VIC,REGION=18K
*       //SYSPRINT DD SYSOUT=A
*       //INTRDR DD UNIT=INTRDR   (OPTIONAL DD CARD)
*       //SYSIN DD *
*       VOLSER
*       /*
*
*       A CONTROL CARD IS REQUIRED FOR EACH VOLUME TO BE ANALYZED
*   AND THE SERIAL NUMBER MUST BE PUNCHED IN COLS 1-6. THE PACK MUST
*   BE MOUNTED WHEN VIC STARTS OR THE REQUEST TO ANALYZE THIS PACK
*   WILL BE IGNORED.
*       //INTRDR IS OPTIONAL - IF IT IS LEFT OUT NO JOBS WILL BE
*   SUBMITTED TO THE HASP INTERNAL READER.
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SAVE  (14,12),,*
         BALR  R12,0
         USING *,R12
         ST    R13,SAVE+4
         LR    R11,R13
         LA    R13,SAVE
         ST    R13,8(R11)
         SPACE 2
         OPEN  (SYSPRINT,(OUTPUT),SYSIN,,INTRDR,(OUTPUT))
         SPACE 2
         B     ROUND
SAVE     DC    18F'0'
ROUND    DS    0H
         SPACE 2
         GET   SYSIN
         SPACE 2
         MVC   VOL(6),0(R1)   LABEL OF DISK WE WISH TO ANALYZE
         MVI   ERRSWICH,X'00'      RESET ERROR SWITCHES
         SPACE 2
         GETMAIN  R,LV=8192,SP=10
         SPACE 2
         ST    R1,GOTCORE        SAVE IT
         LA    R9,32             LOOP COUNTER FOR ZERO CORE RTN
ZEROLOOP EQU   *
         MVI   0(R1),X'00'    INITIALISE
         MVC   1(255,R1),0(R1)    SUBPOOL
         LA    R1,256(R1)               TO
         BCT   R9,ZEROLOOP                 ZEROES
         L     R1,GOTCORE     POINT TO START OF MAP AGAIN
         MVI   0(R1),C'L'    INDICATE LABEL TRACK
         SPACE 2
         MVC   LINE1+35(6),VOL      VOLUME LABEL TO HEADER
         PUT   SYSPRINT,LINE1
         MVI   LINE1,C'-'       SET SPACE 3   HDG AFTER 1ST TIME
         SPACE 2
         OBTAIN SEARCH         GET FORMAT4 ENTRY
         SPACE 2
         C     R15,=F'4'     WAS THE REQUIRED VOLUME  MOUNTED
         BE    VOLOFF        BRANCH IF NOT
         SPACE 2
*  GET CONTROL OF THE VTOC TO PREVENT SIMULTANEOUS UPDATE
         SPACE 2
         L     R15,16       CVT ADDRESS
         L     R15,40(R15)  UCB LOOKUP TABLE
UCBLOOP  EQU   *
         LH    R14,0(R15)   UCB ADDRESS
         LTR   R14,R14      TEST IT
         BM    UCBEND       END OF TABLE IF NEGATIVE
         BZ    NEXTUCB      NULL ENTRY IF ZERO
         CLI   18(R14),X'20'  IS IT A DIRECT ACCESS DEVICE
         BNE   NEXTUCB        BRANCH IF NOT
         CLC   28(6,R14),VOL  DOES IT CONTAIN OUR VOLUME
         BE    UCBFOUND       BRANCH IF YES
NEXTUCB  EQU   *
         LA    R15,2(R15)    POINT TO NEXT LOOKUP ENTRY
         B     UCBLOOP       GO CHECK IT
         SPACE 2
UCBEND   EQU   *
         ABEND 111,DUMP
         SPACE 2
UCBFOUND EQU   *
         ST    R14,UCBADDR    SAVE UCB ADDRESS FOR RESERVE
         SPACE 2
         RESERVE  (QNAME,VOL,E,6,SYSTEMS),UCB=UCBADDR
         SPACE 2
         MVC   CCHHR(4),WORKAREA+63      SAVE CCHH OF VTOC START
         MVC   VTOCSTRT(4),CCHHR         SAVE VTOC START AGAIN
         MVI   VTOCSTRT+4,X'01'    COMPLETE VTOC START ADDRESS
         LA    R10,SHUFLOOP              RET ADDR FOR 1ST TIME ROUND
         MVC   RHHCC(4),WORKAREA+67      SAVE CCHH OF VTOC END
         MVI   CCHHR+4,X'02'             SET TO POINT TO FIRST FMT5
         SPACE 2
*  INDICATE ON MAP POSITION OF VTOC
         SPACE 2
         MVC   HWORD1(4),CCHHR      START OF VTOC
         LH    R3,HWORD1            START CYL ADDR
         MH    R3,TRKSCYL+2            CONVERT TO TRACKS
         AH    R3,HWORD2            ADD ODD TRACKS
         MVC   HWORD1(4),RHHCC      END OF VTOC
         LH    R4,HWORD1            END CYL ADDR
         MH    R4,TRKSCYL+2            CONVERT TO TRACKS
         AH    R4,HWORD2            ADD ODD TRACKS
         SR    R4,R3                LENGTH OF VTOC -1
         LA    R4,1(R4)             CORRECTED LENGTH
         L     R11,GOTCORE          START OF MAP
         LA    R3,0(R3,R11)         OFFSET OF START OF VTOC IN MAP
FMT4LOOP EQU   *
         MVI   0(R3),C'4'           INDICATE VTOC
         LA    R3,1(R3)             INCREMENT POINTER
         BCT   R4,FMT4LOOP          LOOP TILL DONE
         SPACE 2
OBSEEK   EQU   *
         OBTAIN SEEK           GET THE NEXT DSCB
         SPACE 2
         LTR   R15,R15     CHECK RETURN CODE
         BNZ   VOLERR      ERROR IF NOT ZERO
         SPACE 2
         LA    R2,WORKAREA      POINT REG 2 TO WORKAREA
         BR    R10       RETURN TO CALLER
         SPACE 2
*  SHUFFLE UP FORMAT 5 TO OVER WRITE F5 INDICATOR
         SPACE 2
SHUFLOOP EQU   *
         MVI   INDIC,C'5'   SET FMT5 INDICATOR
         MVC   44(95,R2),45(R2)    SHUFFLE
         L     R11,GOTCORE       START OF MAP
         LA    R2,4(R2)          FIRST EXTENT
         SR    R4,R4         CLEAR WORK REG
         LA    R7,26        LOOP LIMIT
         SPACE 2
LOOP1    EQU   *
         MVC   HWORD1(2),0(R2)    START OF EXTENT
         MVC   HWORD2(2),2(R2)    NO. OF CYLINDERS
         LH    R3,HWORD2
         MH    R3,TRKSCYL+2          CONVERT TO TRACKS
         IC    R4,4(R2)           ODD TRACKS
         STH   R4,HWORD2
         AH    R3,HWORD2          ADD ON TO GET EXTENT SIZE
         LH    R5,HWORD1          START OF EXTENT
         C     R5,LIMIT      IS REL TRK A VALID ONE
         BNH   *+8     BRANCH IF YES
         BAL   R6,OLIMIT   GO TO ERROR RTN IF NO
         LA    R5,0(R5,R11)       COMPUTE OFFSET IN TABLE
LOOP2    EQU   *
         CLI   0(R5),X'00'    IS THERE A PREVIOUS ENTRY
         BE    *+8       BRANCH IF NOT
         BAL   R6,PRENT    BRANCH IF YES
         MVC   0(1,R5),INDIC   INDICATE FMT5
         LA    R5,1(R5)           INCREMENT OFFSET
         BCT   R3,LOOP2           LOOP TILL DONE
NEW5     EQU   *
         LA    R2,5(R2)           POINT TO NEXT EXTENT
         CLC   0(5,R2),=5X'00'    IS IT END OF LIST
         BE    END5               BRANCH IF YES
         BCT   R7,LOOP1     LOOP IF STILL IN CURRENT FMT5
         SPACE 2
*  HAVE REACHED END OF THIS FMT5 * AND THERE IS ANOTHER ONE
         SPACE 2
         MVC   CCHHR(5),0(R2)       POINT TO NEXT FMT5
         BAL   R10,OBSEEK           GO GET IT
         SPACE 2
         B     SHUFLOOP        GO PROCESS NEW FMT5
         EJECT
END5     EQU   *
         MVC   CCHHR(4),VTOCSTRT      RESET VTOC START ADDR
         MVI   CCHHR+4,X'02'          POINT TO FIRST FMT5
         SPACE 2
MORE     EQU   *
         BAL   R10,NEXTONE
         SPACE 2
         BAL   R10,OBSEEK
         CLI   44(R2),C'1'         IS IT A FORMAT 1
         BE    FORMAT1        BRANCH IF YES
         CLI   44(R2),C'3'     IS IT A FORMAT3
         BE    FORMAT3         BRANCH IF YES
         B     MORE          GET NEXT IF NEITHER
         SPACE 2
EXIT     EQU   *
         SPACE 2
*  FREE UP THE VTOC
         SPACE 2
         DEQ   (QNAME,VOL,6,SYSTEMS)
         SPACE 2
*  CHECK FOR UNASSIGNED TRACKS AND PRINT WARNING
         SPACE 2
         SR    R11,R11      CLEAR UNASSIGNED TRACK COUNTER
         L     R4,GOTCORE       START OF MAP
         BCTR  R4,0        SUBTRACT ONE
         L     R5,=F'-1'   INITIALISE REL TRK COUNTER
CHECKA   EQU   *
         LA    R4,1(R4)   INCREMENT MAP POINTER
         LA    R5,1(R5)   INCREMENT REL TRK COUNTER
         C     R5,LIMIT    IS IT END OF MAP
         BNL   END        BRANCH IF YES
         CLI   0(R4),X'00'  IS THIS TRACK UNASSIGNED
         BNE   CHECKA     CHECK NEXT TRACK IF NOT
         SPACE 2
         LA    R11,1(R11)   INCREMENT UNASSIGNED TRACK COUNTER
         LR    R3,R5    TRANSFER REL TRK COUNTER
         SR    R2,R2    CLEAR EVEN REG FOR DIVIDE
         D     R2,TRKSCYL CONVERT TO CYLINDERS
         STH   R2,HWORD2  TRACKS LEFT
         STH   R3,HWORD1  CYLINDERS
         SPACE 2
*  NOW TO TRANSLATE FROM HEX TO EBCDIC SO WE CAN PRINT
         SPACE 2
         LA    R7,HWORD1    VALUE TO TRANSLATE
         LA    R8,LINE2+24  AREA FOR EBCDIC RESULT
         LA    R10,4        NUMBER OF BYTES TO TRANSLATE
         BAL   R6,TRANS     GO DO IT
         SPACE 2
         PUT   SYSPRINT,LINE2
         SPACE 2
         B     CHECKA     GO CHECK NEXT TRACK
         SPACE 2
END      EQU   *
         LTR   R11,R11    ANY UNASSIGNED TRACKS
         BZ    *+8        BRANCH IF NOT
         OI    ERRSWICH,X'80'   SET ERROR SWITCH IF YES
         SPACE 2
         CVD   R11,WORKAREA  TOTAL OF UNASSIGNED TRACKS
         MVC   LINE3+42(6),PATT1   MOVE IN EDIT PATTERN
         ED    LINE3+42(6),WORKAREA+5  EDIT TOTAL
         SPACE 2
         PUT   SYSPRINT,LINE3
         EJECT
*   WRITE JOB TO HASP INTERNAL READER IF REQUIRED
         SPACE 2
         CLC   INTRDR+40(6),=C'INTRDR'  IS DCB OPEN
         BE    FREEMAP                  BRANCH IF NOT
         SPACE 2
         TM    ERRSWICH,X'FF'   ANY ERRORS
         BZ    FREEMAP            BRANCH IF NOT
         TM    ERRSWICH,X'40'   ANY DUPLICATE ASSIGNMENTS
         BO    FREEMAP            DO NOTHING IF YES
         SPACE 2
         MVC   JOBCARD+9(1),VOL+5     SET JOBNAME WITH VOLID LAST DIG
         MVC   JOBCARD+43(6),VOL     & SLOT VOLID INTO COMMENT
         LA    R9,JOBCARD    POINT TO JOBCARD
         BAL   R10,PRINTCRD  PUT TO INTERNAL READER
         LA    R9,JOBCARD2    POINT TO JOB CARD COTN
         BAL   R10,PRINTCRD     PUT TO INTERNAL READER
         SPACE 2
         LA    R9,EXECARD
         BAL   R10,PRINTCRD
         SPACE 2
         LA    R9,SYSOUT
         BAL   R10,PRINTCRD
         SPACE 2
         MVC   SYSLIB+20(6),VOL    SET UP VOLUME SERIAL
         LA    R9,SYSLIB
         BAL   R10,PRINTCRD
         LA    R9,SYSLIBA
         BAL   R10,PRINTCRD
         SPACE 2
         LA    R7,VTOCSTRT     POINT TO VTOC START CCHHR
         LA    R8,CCHHRCRD+6   POINT TO AREA FOR OUTPUT
         LA    R10,5           NUMBER OF BYTES
         BAL   R6,TRANS
         LA    R9,CCHHRCRD
         BAL   R10,PRINTCRD
         SPACE 2
         LA    R9,REPCARD
         BAL   R10,PRINTCRD
         SPACE 2
         LA    R9,BR14
         BAL   R10,PRINTCRD
         SPACE 2
         MVC   DD1+17(6),VOL    SET UP VOLUME SERIAL
         LA    R9,DD1
         BAL   R10,PRINTCRD
         B     FREEMAP
         SPACE 2
PRINTCRD EQU   *
         PUT   INTRDR,(9)
         SPACE 2
         BR    R10         RETURN TO CALLER
         SPACE 2
FREEMAP  EQU   *
         FREEMAIN  R,LV=8192,A=GOTCORE,SP=10
         SPACE 2
         B     ROUND     ANY MORE TO DO
         EJECT
PRENT    EQU   *
*  THIS SECTION DEALS WITH DUPLICATE TRACK ASSIGNMENTS
         SPACE 2
         OI    ERRSWICH,X'40'   SET ERROR SWITCH
         CLI   INDIC,C'5'    HAVE WE COME FROM FMT5 ROUTINE
         BNE   NOT5          BRANCH IF NOT
         ST    R3,SAVE       SAVE CONTENTS OF REG 3
         LR    R3,R5         POINT REG3 TO MAP POSITION
         SPACE 2
NOT5     EQU   *
         L     R14,GOTCORE   START OF MAP
         LR    R15,R3        MAP POSITION
         SR    R15,R14       COMPUTE REL TRK
         SR    R14,R14       CLEAR EVEN REG FOR DIVIDE
         D     R14,TRKSCYL    CONVERT TO CYLINDERS
         STH   R14,HWORD2    TRACKS LEFT
         STH   R15,HWORD1    CYLINDERS
         STM   R6,R10,NOT5SAVE  SAVE CURRENT REG CONTENTS
         B     ROUND2
NOT5SAVE DC   5F'0'
ROUND2   DS    0H
         LA    R7,HWORD1    VALUE TO TRANSLATE
         LA    R8,LINE4+25  AREA FOR RESULT
         LA    R10,4        NUMBER OF BYTES TO TRANSLATE
         BAL   R6,TRANS     GO DO IT
         LM    R6,R10,NOT5SAVE  RESTORE REGS
         SPACE 2
         MVC   LINE4+80(1),0(R3)  CURRENT CONTENTS OF MAP
         MVC   LINE4+52(1),INDIC  INDICATOR CONTENTS
         SPACE 2
         PUT SYSPRINT,LINE4
         SPACE 2
         CLI   INDIC,C'5'   ARE WE FROM FMT5
         BNE   *+8        BRANCH IF NOT
         L     R3,SAVE    RESTORE CONTENTS OF REG 3 FOR FMT5 RTN
         B     6(R6)      GO BACK WITHOUT MAPPING THE INDICATOR
         EJECT
OLIMIT   EQU   *
*  FORMAT 5 ENTRY FOUND TO BE OUT OF RANGE
         SPACE 2
         OI    ERRSWICH,X'20'   SET ERROR SWITCH
         PUT   SYSPRINT,LINE6
         SPACE 2
         B     NEW5   GET NEXT FMT5 ENTRY
         EJECT
* ROUTINE TO UPDATE CCHHR POINTER TO SEEK NEXT DSCB
         SPACE 2
NEXTONE   EQU  *
         SR    R4,R4
         CLC   CCHHR+4(1),DSCBTRK    DO WE WANT A NEW TRACK
         BE    UPTRK
         IC    R4,CCHHR+4     GET CURRENT BLOCK NUMBER
         LA    R4,1(R4)       ADD ONE
         STC   R4,CCHHR+4     PUT IT BACK
         BR    R10            RETURN TO CALLER
         SPACE 2
UPTRK    EQU   *
         CLC   CCHHR(4),RHHCC      WAS THAT THE LAST TRACK
         BE    EXIT               BRANCH IF YES
         CLC   CCHHR+3(1),TRKSCYL2   DO WE NEED A NEW CYLINDER
         BNL    UPCYL          BRANCH IF YES
         LH    R4,CCHHR+2     GET CURRENT TRACK NUMBER
         LA    R4,1(R4)       ADD ONE
         STH   R4,CCHHR+2     PUT IT BACK
         MVI   CCHHR+4,X'01'  SET TO FIRST BLOCK
         BR    R10            BACK TO CALLER
         SPACE 2
UPCYL    EQU   *
         LH    R4,CCHHR       GET CURRENT CYLINDER
         LA    R4,1(R4)       ADD ONE
         STH   R4,CCHHR       PUT IT BACK
         XC    CCHHR+2(2),CCHHR+2   SET RACK TO ZERO
         MVI   CCHHR+4,X'01'  SET TO FIRST BLOCK
         BR    R10     BACK TO CALLER
         EJECT
*   FORMAT1  PROCESSING ROUTINE
         SPACE 2
FORMAT1  EQU   *
         LA    R5,3       MAIN LOOP COUNTER
         LA    R2,107(R2)  POINT TO FIRST EXTENT
FORMAT1A EQU   *
         BAL   R10,SORTOUT   GET DETAILS FOR MAP
         MVI   INDIC,C'1'    SET INDICATOR
         BAL   R10,MAPIT     GO MAP IT
         LA    R2,10(R2)     POINT TO NEXT EXTENT
         BCT   R5,FORMAT1A   LOOP TILL MAX
         B     MORE          GET NEXT DSCB
         SPACE 6
*   FORMAT 3 PROCESSING ROUTINE
         SPACE 2
FORMAT3  EQU   *
         MVC   44(90,R2),45(R2)   SHUFFLE OVER F3
         LA    R5,13       MAIN LOOP COUNTER
         LA    R2,6(R2)    POINT TO FIRST EXTENT
FORMAT3A EQU   *
         BAL   R10,SORTOUT   GET DETAILS FOR MAP
         MVI   INDIC,C'3'    SET INDICATOR
         BAL   R10,MAPIT     GO MAP IT
         LA    R2,10(R2)     POINT TO NEXT EXTENT
         BCT   R5,FORMAT3A   LOOP TILL MAX
         B     MORE          GET NEXT DSCB
         EJECT
*  ROUTINE TO PROVIDE EXTENT START AND SIZE
         SPACE 2
SORTOUT  EQU   *
         CLC   0(4,R2),=4X'00'     IS IT THE END OR A DUMMY
         BE    MORE      BRANCH IF YES
         MVC   HWORD1(4),0(R2)    EXTENT START
         LH    R3,HWORD1          START CYL ADDRESS
         MH    R3,TRKSCYL+2          CONVERT TO TRACKS
         AH    R3,HWORD2          ADD ON ODD TRACKS
         MVC   HWORD1(4),4(R2)    EXTENT END
         LH    R4,HWORD1          END CYL ADDRESS
         MH    R4,TRKSCYL+2          CONVERT TO TRACKS
         AH    R4,HWORD2          ADD ON ODD TRACKS
         SR    R4,R3              EXTENT SIZE -1
         LA    R4,1(R4)           CORRECTED SIZE
         LA    R3,0(R3,R11)       START ADDR OFFSET IN MAP
         BR    R10                RETURN TO CALLER
         EJECT
*   MAPPING ROUTINE
         SPACE 2
MAPIT    EQU   *
         CLI   0(R3),X'00'      WAS THERE A PREVIOUS ENTRY
         BE    *+8    BRANCH IF NOT
         BAL   R6,PRENT       BRANCH IF YES
         MVC   0(1,R3),INDIC    MAP THIS TRACK
         LA    R3,1(R3)         INCREMENT POINTER
         BCT   R4,MAPIT         LOOP TILL EXTENT END
         BR    R10              RETURN TO CALLER
         SPACE 6
TRANS    EQU   *
*  TRANSLATE FROM HEX TO EBCDIC ** REG CONTENTS ON INPUT ARE:-
* R7 - ADDRESS OF AREA TO BE TRANSLATED
* R8 - ADDRESS OF AREA TO CONTAIN TRANSLATED DATA
* R10 - NUMBER OF BYTES TO BE TRANSLATED
* R6 - RETURN ADDRESS TO CALLER
         SR    9,9
         IC    9,0(7)
         SRL   9,4(0)             GET RID OF RIGHTMOST 4 BITS
         STC   9,0(8)
         TR    0(1,8),TABLE       TRANSLATE REMAINDER
         MVC   1(1,8),0(7)
         NI    1(8),X'0F'         GET RID OF LEFTMOST 4 BITS
         TR    1(1,8),TABLE       TRANSLATE REMAINDER
         LA    7,1(7)             INCREMENT AREA ADDRESS
         LA    8,2(8)             INCREMENT PRINT LINE ADDRESS
         BCT   10,TRANS           DO IT AGAIN
         SPACE 2
         BR    R6                 BACK TO CALLER
         EJECT
*  NO MORE PACKS TO ANALYZE SO LETS PACK UP
         SPACE 2
SYSINEND EQU   *
         CLC   INTRDR+40(6),=C'INTRDR'  IS THE DCB OPEN
         BE    NOTOPEN                  BRANCH IF NOT
         SPACE 2
         LA    R9,EOFCARD
         BAL   R10,PRINTCRD    GO CLOSE INTERNAL READER
         SPACE 2
NOTOPEN  EQU   *
         CLOSE (SYSIN,,SYSPRINT,,INTRDR)
         SPACE 2
         L     R13,SAVE+4
         SPACE 2
         RETURN (14,12),RC=0
         EJECT
*  PACK WAS NOT MOUNTED SO INFORM REQUESTOR AND READ NEXT CONTROL CARD
         SPACE 2
VOLOFF   EQU   *
         PUT   SYSPRINT,LINE7
         SPACE 2
         B     FREEMAP
         SPACE 4
*   SUNDRY ERRORS FROM OBTAIN
         SPACE 2
VOLERR   EQU   *
         PUT   SYSPRINT,LINE8
         SPACE 2
         B     FREEMAP
         EJECT
         SPACE 2
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*  THESE VARIABLES ARE DEVICE CHARACTERISTICS FOR 3330'S
*  ALTER THEM IF YOU HAVE DIFFERENT DEVICES
*
LIMIT    DC    A(404*19)    NUMBER OF ALLOCATABLE TRACKS
TRKSCYL  DC    F'19'        NUMBER OF TRACKS PER CYLINDER
TRKSCYL2 DC    X'12' DEC18 REL NO OF LAST TRK/CYL FOR COMPARE
DSCBTRK  DC    AL1(39)      NUMBER OF DSCBS PER TRACK
*
*   END OF DEVICE VARIABLES
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 2
GOTCORE  DC    F'0'
UCBADDR  DC    F'0'
HWORD1   DC    H'0'
HWORD2   DC    H'0'
WORKAREA DC    19D'0'
DSNAME   DC    44X'04'
VOL      DC    C'ROS201'       DEFAULT VOLID
CCHHR    DC    CL5' '
RHHCC    DC    CL5' '
VTOCSTRT DC    CL5' '
INDIC     DC   C' '
TABLE    DC    C'0123456789ABCDEF'
ERRSWICH DC    X'00'  80 UNASSIGNED 40 DUPLICATE 20 OUT OF RANGE
LINE1    DC    CL133'1 VIC001 ANALYSIS OF DISK LABELLED XXXXXX'
LINE2    DC    CL133'  VIC002 ABSOLUTE CCHH  XXXXXXXX IS UNASSIGNED'
LINE3    DC    CL133'0    VIC003 TOTAL OF UNASSIGNED TRACKS IS XXXXXX'
LINE4    DC    CL133' *  VIC004 ABSOLUTE CCHH XXXXXXXX  WANTED  BY FORM*
               ATX ALREADY ASSIGNED TO FORMATX'
LINE6    DC    CL133'0 VIC005 $$$FORMAT5 ENTRY SHOWS IMPOSSIBLE RELATIV*
               E TRACK ADDRESS'
LINE7    DC    CL133'- VIC006 ** ERROR ** REQUIRED PACK NOT MOUNTED - T*
               HIS REQUEST IGNORED'
LINE8    DC    CL133'- VIC007 ERROR READING VTOC FOR THIS PACK - TASK T*
               ERMINATED'
PATT1    DC    X'402020202120'
QNAME    DC    CL8'SYSVTOC'
JOBCARD  DC    CL80'//MTSGZAPX JOB (0101,4990,,,,1001),''CLEAN XXXXXX''C
               ,CLASS=L,'
JOBCARD2 DC    CL80'// MSGLEVEL=(1,1),PRIORITY=15,TYPRUN=HOLD'
EXECARD   DC   CL80'//A EXEC PGM=LOGSPZAP'  OR IMASPZAP
SYSOUT    DC   CL80'//SYSPRINT DD SYSOUT=A'
SYSLIB   DC    CL80'//SYSLIB DD VOL=SER=XXXXXX,UNIT=3330,DISP=OLD,DSN=F*
               ORMAT4.DSCB,'
SYSLIBA  DC    CL80'//    DCB=KEYLEN=44'
CCHHRCRD DC    CL80'CCHHR XXXXXXXXXX'
REPCARD  DC    CL80'REP 3A 80  TURN ON DOS WAS HERE BIT'
EOFCARD  DC    CL80'/*EOF'
BR14     DC    CL80'//ALLOC EXEC PGM=IEFBR14'
DD1      DC    CL80'//DD1 DD VOL=SER=XXXXXX,UNIT=3330,SPACE=(TRK,1)'
         SPACE 4
SEARCH   CAMLST SEARCH,DSNAME,VOL,WORKAREA
         SPACE 4
SEEK     CAMLST SEEK,CCHHR,VOL,WORKAREA
         LTORG
         EJECT
SYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=(PM),RECFM=FA,LRECL=133, *
               BLKSIZE=133
         EJECT
SYSIN    DCB   DDNAME=SYSIN,DSORG=PS,MACRF=(GL),RECFM=F,BLKSIZE=80,    *
               EODAD=SYSINEND
         EJECT
INTRDR   DCB   DDNAME=INTRDR,DSORG=PS,MACRF=(PM),LRECL=80,BLKSIZE=80,  *
               RECFM=F,BUFNO=1
         END
