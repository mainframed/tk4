************PVK1SUBT************************
         TITLE 'SUBTASK INVOKED BY PVK1 CICS TRANSACTION.'
***************************************************************
*
*   THIS IS THE SUBTASK TO PERFORM ALL INTERFACING WITH JES2
*
*   IT MUST BE 'ATTACHED' FROM AN AUTHORISED PROGRAM
*
*   ASSEMBLE WITH
*         //SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR
*         //         DD  DSN=SYS1.AMODGEN,DISP=SHR
*
***************************************************************
*
PVK1SUBT CSECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         USING PVK1SUBT,R15
         B     START                     SAVE REGISTERS, ETC.
         DC    AL1(START-CSECTID)
CSECTID  DC    C'  PVK1SUBT_V7.11 14 JULY 1981  '
START    STM   R14,R12,12(R13)
         CNOP  2,4
         BALR  R14,0
         DROP  R15
         BAL   R15,76(0,R14)
SAVEA    DS    18F
         ST    R15,8(0,R13)
         ST    R13,4(0,R15)
         LR    R13,R15
         USING SAVEA,R13,R12
         LA    R12,4095(0,R13)
         LA    R12,1(0,R12)
         USING RETNDATA,R11              SET UP ADDRESSABILITY
         USING DATAREA,R10                   TO DATA AREAS
         USING SSOB,R9
         USING SSOBEXT,R8
         LA    R9,SSOBAREA
         LM    R10,R11,0(R1)             DATAREA + RETNDATA
         L     R7,8(R1)                  SAVE TERMINAL ID
         USING TRMID,R7                                     MJS
         MVC   TERMID,TCTTETI            IN 1ST 4 BYTES OF CIKEY
         DROP  R7                                           MJS
         EJECT
**********************************
*   SELECT PROCESSING REQUIRED   *
**********************************
         SPACE 3
*   ALL REQUESTS ARE PRECEDED BY A STATUS OPERATION,
*   TO CHECK THAT A JOB EXISTS FOR THEM TO PROCESS, ON THE
*   OUTPUT QUEUE. AFTER THIS HAS BEEN CHECKED, THE CORRECT
*   PROCESSING ROUTINE IS SELECTED FOR THAT REQUEST (STATUS
*   REQUESTS RETURN ALL INFO, OF COURSE).
         SPACE 3
         LA    R8,SSCSAREA              POINT SSOB HEADER
         ST    R8,SSOBINDV                 AT FUNCTION AREA
         LA    R2,SSOBSTAT              SET SSOB
         STH   R2,SSOBFUNC                 FUNCTION CODE
         XC    SSCSFLGS(2),SSCSFLGS     ZERO OUT FLAG BYTES
         MVC   SSCSJOBN,DJOBN           COPY GIVEN JOBNAME
         MVC   SSCSJOBI,DCJOB             & JOBID TO SSOB
         XC    SSCSDIMR(2),SSCSDIMR     ZERO OUT SSREQ
         XC    SSCSARBG(80),SSCSARBG       RETURN AREAS
         BAL   R2,CALLSSYS              GO DO JES2 PROCESSING
         L     R2,SSOBRETN              PICK UP SSREQ
         LTR   R2,R2                      RETURN CODE AND
         BZ    STATOK                       SELECT APPROPRIATE
         C     R2,=F'4'                      PROCESSING
         BE    JOBNTFND
         C     R2,=F'8'
         BE    CMBINVAL
         BAL   R14,ERROR
         SPACE
STATOK   EQU   *                   JOB FOUND - INFO RETURNED
         LA    R2,DDATA                 GET OUTPUT AREA
         LH    R3,SSCSDIMR              GET NO. OF JOBS (SIZE OF ARRAY)
         LA    R4,SSCSARBG              GET INPUT ARRAY ELEMENT
         SR    R5,R5                     ZERO LINE COUNT
         CLC   DFUNC(2),=C'ST'           IS THIS A 'ST' REQUEST ?
         BE    STATPROC                  YES - GO PROCESS OUTPUT
         SPACE
         NI    FLAG,X'00'               CLEAR ALL FLAGS
         ENQ   (MAJOR,MINOR,E,15,SYSTEM),RET=NONE
         OI    FLAG,X'20'
         SPACE
         C     R3,=F'16'                 MORE THAN 1 JOB ?
         BH    DUPLICAT                  YES - SEND 'DUPLICATE' MSG
         TM    8(R4),X'20'               JOB ON OUTPUT Q?
         BZ    JOBNTFND                  NO - SEND 'NOT FOUND' MSG
         SPACE
         CLC   DFUNC(2),=C'PR'           IS THIS A 'PR' REQUEST ?
         BE    PRNTPROC                  YES - GO TO PRNT PROCESSING
         CLC   DFUNC(2),=C'CN'           IS THIS A 'CN' REQUEST ?
         BE    CANCPROC                  YES - GO TO CANC PROCESSING
         CLC   DFUNC(2),=C'DS'           IS THIS A 'DS' REQUEST ?
         BE    DSPLPROC                  YES - GO TO DSPL PROCESSING
         BAL   R14,ERROR
         EJECT
*******************************************
*   FUNCTION IS TO DISPLAY JOB'S STATUS   *
*******************************************
STATPROC EQU   *
         MVC   0(79,R2),STATMSG         MOVE MSG. SKELETON
         MVC   9(8,R2),SSCSJOBN         MOVE JOB NAME
         MVC   25(5,R2),3(R4)           MOVE JOB ID
         TM    8(R4),X'80'              IS JOB ACTIVE ?
         BZ    STTRY40                  NO
         MVC   31(9,R2),=C'EXECUTING'
         B     STNEXT
STTRY40  TM    8(R4),X'40'              IS JOB ON INPUT QUEUE ?
         BZ    STTRY20                  NO
         MVC   31(18,R2),=C'AWAITING EXECUTION'
         B     STNEXT
STTRY20  TM    8(R4),X'20'              IS JOB ON OUTPUT QUEUE
         BZ    JOBNTFND                 NO - TREAT AS NOT FOUND
         MVC   31(15,R2),=C'ON OUTPUT QUEUE'
STNEXT   EQU   *
         LA    R5,1(,R5)                 INCREMENT LINE COUNT
         LA    R2,79(,R2)               GET NEXT OUTPUT LINE
         S     R3,=F'16'                REDUCE NO. OF JOBS
         LA    R4,16(,R4)               GET NEXT INPUT ELEMENT
         LTR   R3,R3                    ANY JOBS STILL TO PROCESS ?
         BP    STATPROC                 YES - GO LOOP
         SPACE
         XC    RETCODE(4),RETCODE        SET ZERO RETURN CODE
         ST    R5,LINECT                 SAVE LINE COUNT
         B     RETURN
         EJECT
***************************************
*   FUNCTION IS TO SET JOB TO PRINT   *
***************************************
PRNTPROC EQU   *
         LA    R8,SSSOAREA              POINT SSOB HEADER
         ST    R8,SSOBINDV                 AT FUNCTION AREA
         LA    R2,SSOBSOUT              GET SSOB
         STH   R2,SSOBFUNC                FUNCTION CODE
         LA    R2,SSSOSETC              SET SELECT
         STC   R2,SSSOUFLG                OPTIONS FOR NEW CLASS
         MVI   SSSOCLAS,C'F'            SET NEW CLASS
         MVI   SSSODSN,X'00'            ZERO DSN
         MVC   SSSODSN+1(43),SSSODSN
         MVC   SSSOJOBI(8),SSSODSN    ZERO JOBID
         CLC   DCJOB,BLANKS             JOBID GIVEN ?
         BE    PNOJOBID                 NO
         OI    SSSOFLG1,SSSOSJBI        YES - SET FLAG FOR JOBID
         MVC   SSSOJOBI,DCJOB           MOVE JOB ID
PNOJOBID EQU   *
         MVC   SSSOJOBN,DJOBN           MOVE JOB NAME
         BAL   R2,CALLSSYS              GO DO JES2 PROCESSING
         L     R2,SSOBRETN              PICK UP SSREQ
         LTR   R2,R2                      RETURN CODE AND
         BZ    PRNTOK                       SELECT APPROPRIATE
         C     R2,=F'8'                       PROCESSING
         BE    JOBNTFND
         C     R2,=F'20'
         BE    DUPLICAT
         C     R2,=F'24'
         BE    CMBINVAL
         BAL   R14,ERROR
         SPACE
PRNTOK   EQU   *
         XC    RETCODE(4),RETCODE
         B     RETURN
         EJECT
********************************************
*   FUNCTION IS TO CANCEL A JOB'S OUTPUT   *
********************************************
CANCPROC EQU   *
         LA    R8,SSCSAREA              POINT SSOB HEADER
         ST    R8,SSOBINDV                 AT FUNCTION AREA
         LA    R2,SSOBCANC                  SSCS EXTENSION
         STH   R2,SSOBFUNC                    AREA
         MVI   SSCSFLGS,SSCSCOUT
         MVI   SSCSULEN,X'00'
         MVC   SSCSJOBN(8),DJOBN
         MVC   SSCSJOBI,DCJOB
         XC    SSCSDIMR(2),SSCSDIMR
         XC    SSCSARBG(80),SSCSARBG
         BAL   R2,CALLSSYS              GO DO JES2 PROCESSING
         L     R2,SSOBRETN              PICK UP SSREQ
         LTR   R2,R2                      RETURN CODE AND
         BZ    CANOK                        SELECT APPROPRIATE
         C     R2,=F'4'                       PROCESSING
         BE    JOBNTFND
         C     R2,=F'8'
         BE    CMBINVAL
         C     R2,=F'12'
         BE    DUPLICAT
         BAL   R14,ERROR
         SPACE
CANOK    EQU   *                        JOB CANCELLED O.K.
         XC    RETCODE(4),RETCODE
         MVC   DCJOB(8),SSCSJOBI        RETURN JOBID
         B     RETURN
         EJECT
*******************************************
*   FUNCTION IS TO DISPLAY JOB'S OUTPUT   *
*******************************************
DSPLPROC EQU   *
         OPEN  (CIACB)
         OI    FLAG,X'08'               SET 'VSAM OPEN' FLAG ON
         POINT RPL=CIRPL
         LTR   R15,R15
         BZ    OK1         MJS
         BAL   R14,DSPLERR              MJS
OK1      EQU   *     MJS
         MODCB RPL=CIRPL,OPTCD=(CNV,SEQ,MVE,UPD)
         LTR   R15,R15
         BZ    OK15                     YES      MJS
         BAL   R14,DSPLERR              NO          MJS
OK15     EQU   *                                    MJS
         SR    R3,R3                    ZERO LINE COUNT
         LR    R4,R5                    SET CI PTRS FOR NEW CI
         OI    FLAG,X'80'               SET 'FIRST TIME' FLAG
         SPACE
         LA    R6,SVC99RB               ADDRESS DYNALLOC BLOCKS
         USING S99RB,R6
         LA    R7,SSDCB                 ADDRESS DCB
         USING IHADCB,R7
         SPACE
         LA    R8,SSSOAREA              POINT SSOB HEADER
         ST    R8,SSOBINDV                 AT FUNCTION AREA
         MVI   SSSODSN,X'00'            ZERO DSN
         MVC   SSSODSN+1(43),SSSODSN
         MVC   SSSOJOBI(8),SSSODSN      ZERO JOBID
         LA    R2,SSOBSOUT
         STH   R2,SSOBFUNC              SET SYSOUT FUNCTION ID
         CLC   DCJOB,BLANKS             JOBID GIVEN ?
         BE    NOJOBID                  NO
         OI    SSSOFLG1,SSSOSJBI        YES - SET FLAG FOR JOBID
         MVC   SSSOJOBI(8),DCJOB        MOVE JOBID TO SSOB
NOJOBID  EQU   *
         MVC   SSSOJOBN(8),DJOBN        MOVE JOBNAME TO SSOB
         SPACE
GETDSET  EQU   *
         MVI   SSSOUFLG,X'00'           ZERO UFLG
         MVI   SSSOFLG1,SSSOHLD+SSSOSCLS+SSSOSJBN USE HOLD,CLASS,JOBNME
         CLC   =C'TRZZ',TERMID          IS IT SYSPROG'S TERMINAL   MJS
         BNE   OK6                      NO - LEAVE                 MJS
         XI    SSSOFLG1,SSSOSCLS        YES - DISPLAY ANY CLASS    MJS
OK6      MVI   SSSOFLG2,X'00'           SET RETURN DSN FLAG
         CLC   SSSOJOBI(8),BLANKS       ANY JOBID IN SSOB ?
         BE    NOJOBID2                 NO - CONTINUE SSOB INIT'N
         CLC   SSSOJOBI(8),=8XL1'00'    ANY JOBID IN SSOB ?
         BE    NOJOBID2                 NO - CONTINUE SSOB INIT'N
         OI    SSSOFLG1,SSSOSJBI        YES - SET FLAG TO USE JOBID
NOJOBID2 EQU   *
         XC    SSOBRETN(4),SSOBRETN     ZERO RETURN CODE FIELD
         BAL   R2,CALLSSYS              GO DO JES2 PROCESSING
         L     R2,SSOBRETN              PICK UP RETURN CODE
         LTR   R2,R2                    WORKED ?
         BZ    DSALLOC                  YES - GO ALLOC D/SET
         C     R2,=F'4'                 END OF JOB ?
         BE    ALLDATA                  YES
         C     R2,=F'8'                 JOB NOT FOUND ?
         BE    JOBNTFND                 YES
         C     R2,=F'20'                >1 JOB & NO JOBID GIVEN ?
         BE    DUPLICAT                 YES
         C     R2,=F'24'                JOB/JOBID COMB. WRONG
         BE    CMBINVAL                 YES
         BAL   R14,ERROR
         SPACE 3
DSALLOC  EQU   *            *** DYNAMICALLY ALLOCATE DATASET ***
         OI    FLAG,X'01'               SET 'JES2 ASSIGNED' FLAG ON
         MVC   ALLOCDSN(44),SSSODSN     MOVE DSN TO TEXT UNIT
         MVI   S99VERB,S99VRBAL
         LA    R2,ALLOCLST
         ST    R2,S99TXTPP
         LA    R1,SVC99PTR
         DYNALLOC                       ALLOC DATA SET
         SPACE 3
DSOPEN   EQU   *            *** OPEN DATA SET ***
         OI    FLAG,X'02'               SET 'ALLOCATED' FLAG ON
         MVC   DCBDDNAM(8),ALLOCDDN     MOVE DDNAME TO DCB
         MVI   DCBRECFM,X'00'
         SPACE
         OPEN  SSDCB
         TM    DCBOFLGS,DCBOFOPN        OPENED OK ?
         BNZ   OK7                      YES - CONTINUE
         MVC   OPENMDSN,SSSODSN         NO - MOVE DSN TO MSG
         LA    R1,133                   R1 = MSG LENGTH
         LA    R2,OPENMSG               R2 = MSG ADDRESS
         B     LRECLOK                  GO MOVE INTO A CI
OK7      EQU   *
         OI    FLAG,X'04'               SET 'JES2 OPEN' FLAG ON
         SPACE 3
NEXTLINE EQU   *            *** GET NEXT DATA LINE ***
         TM    FLAG,X'10'               JUST PUT OUT END MSG ?
         BNZ   ALLDATA                  YES - NO MORE GETS
         TM    DCBOFLGS,DCBOFOPN        DCB OPENED OK (NO OPENERR MSG)?
         BZ    ENDDSET                  NO - GO END THIS DATASET
         GET   SSDCB                    GET LINE FROM SPOOL
         LR    R2,R1                    SAVE RECORD ADDRESS
         LH    R1,DCBLRECL              R1 = RECORD'S LENGTH
         TM    DCBRECFM,DCBRECV         VARIABLE RECORDS OR 1ST BIT U ?
         BZ    NOTV                     NO - DONT SKIP RDW
         TM    DCBRECFM,DCBRECU         UNDEFINED FORMAT ?
         BO    NOTV                     YES - DONT SKIP RDW
         LA    R2,4(R2)                 SKIP 4-BYTE RECORD DESCRIPTOR
         LA    R15,4
         SR    R1,R15                   SUBTRACT 4 FROM LINE LENGTH
NOTV     EQU   *
         TM    DCBRECFM,DCBRECCA+DCBRECCM PRT CONTROL CHAR PRESENT ?
         BZ    NOCC                     NO
         LA    R2,1(,R2)                YES - SKIP IT
         BCTR  R1,0                     DECREMENT LENGTH BY 1
NOCC     EQU   *
         CH    R1,=H'0133'              LRECL > 133 ?
         BNH   LRECLOK                  NO - LEAVE AS LENGTH OF LINE
         LA    R1,133                   YES - ONLY USE 1ST 133 CHARS
LRECLOK  EQU   *            *** COUNT LINE & CHECK FOR FULL CI ***
         LA    R3,1(,R3)                INCR LINE COUNT
         ST    R1,LENSAVE               SAVE LENGTH OF LINE
         CR    R4,R5                    CI FULL ?
         BL    ADDLINE                  NO
         TM    FLAG,X'80'               FIRST TIME ?
         BNZ   GETCI                    YES - GO GET CI
         SPACE
PUTCI    EQU   *            *** PUT REFILLED CI TO VSAM FILE ***
         PUT   RPL=CIRPL
         LTR   R15,R15                  PUT OK?
         BZ    GETCI                    YES          MJS
         BAL   R14,DSPLERR              NO           MJS
         SPACE
GETCI    EQU   *            *** GET NEXT CI TO BE UPDATED ***
         GET   RPL=CIRPL
         LTR   R15,R15                  GET OK ?
         BZ    OK2                      YES          MJS
         BAL   R14,DSPLERR              NO          MJS
         SPACE
OK2      EQU   *                                      MJS
         LA    R4,CIAREA               RESET OUTPUT
         LA    R5,1988(,R4)               POINTERS FOR NEW CI
         TM    FLAG,X'80'              FIRST TIME ?
         BZ    ADDLINE                 NO
         MVC   LINELMT(4),28(R4)       SAVE O/P LIMIT     MJGAPR81
         LA    R4,142(,R4)             SKIP CONTROL RECORD 0
         NI    FLAG,X'7F'              TURN 1ST TIME FLAG OFF
         SPACE
ADDLINE  EQU   *            *** ADD LINE TO CI ***
         L     R1,LENSAVE               RESTORE LENGTH OF LINE
         LTR   R1,R1                    LENGTH = 0 ?
         BZ    IGNORE                   YES - GO IGNORE LINE
         BCTR  R1,0                     REDUCE FOR EXECUTE   MJS
         EX    R1,BLANKCHK              ENTIRE LINE BLANK ?
         BNE   MOVELINE                 NO - GO MOVE LINE
IGNORE   EQU   *
         BCTR  R3,0                     DEC LINE COUNT
         B     NEXTLINE                 IGNORE BLANK LINE - GO GET NEXT
MOVELINE EQU   *
         MVC   9(133,R4),BLANKS         BLANK OUT PREVIOUS DATA
         EX    R1,MOVETOCI              MOVE LINE TO CI (SAVE KEY)
*        MVC   19(1,R4),DCBRECFM  MJS
*        MVC   20(2,R4),DCBLRECL  MJS
*        MVC   22(2,R4),DCBPRECL  MJS
         LA    R4,142(,R4)              INCR TO NEXT O/P RECORD
***      C     R3,=F'20004'             LIMIT REACHED ?    MJGAPR81
         C     R3,LINELMT               LIMIT REACHED ?    MJGAPR81
         BL    NEXTLINE                 GO GET NEXT LINE
         CVD   R3,DWORD                 SAVE COUNT         MJGAPR81
         UNPK  LIMITMSG+27(5),DWORD+5(3)   OF LINES        MJGAPR81
         OI    LIMITMSG+31,X'F0'              FOR THIS JOB MJGAPR81
         MVC   9(133,R4),LIMITMSG
         LA    R3,1(,R3)
         B     ENDJOB
         SPACE 3
*                 THESE TWO INSTRUCTIONS ARE TARGETS FOR 'EX' INSTR
BLANKCHK CLC   0(1,R2),BLANKS           ENTIRE LINE BLANK ?
MOVETOCI MVC   9(1,R4),0(R2)            MOVE LINE TO CI (SAVE KEY)
         SPACE 3
ENDDSET  EQU   *            *** END OF DATA SET ****
         CLOSE SSDCB
         NI    FLAG,X'FB'               SET 'JES2 OPEN' OFF
         FREEPOOL SSDCB                          MJS
         SPACE
         MVC   UNALCDDN(8),ALLOCDDN
         MVI   S99VERB,S99VRBUN
         LA    R2,UNALCLST
         ST    R2,S99TXTPP
         LA    R1,SVC99PTR
         DYNALLOC                       FREE DATA SET
         SPACE 3
FREEDS   EQU   *            *** PREPARE TO GET NEXT DATASET ***
         NI    FLAG,X'FD'               SET 'ALLOCATED' OFF
         B     GETDSET                  GO GET NEXT DSET
         SPACE 3
ALLDATA  EQU   *
         TM    FLAG,X'10'                'END MSG SENT' FLAG ON ?
         BO    ENDJOB                    YES - GO FINISH
         TM    FLAG,X'80'                'FIRST TIME' FLAG ON ?
         BO    JOBNTFND                  YES - JOB OUTPUT CLASS WRONG
         OI    FLAG,X'10'                SET 'END MSG SENT' ON
         CVD   R3,DWORD                  CONVERT LINECOUNT
         UNPK  ENDMSG+18(5),DWORD+5(3)      TO DEC & STORE
         OI    ENDMSG+22,X'F0'                 IN MSG
         LA    R2,ENDMSG                 POINT AT MSG FOR MOVE
         LA    R3,1(,R3)
         CR    R4,R5                     ROOM IN CI ?
         LA    R1,133-1                  SET UP LENGTH FOR MOVE
         BL    MOVELINE                  YES - GO MOVE
         B     PUTCI                     NO - GO GET NEXT CI
         SPACE 3
*------------------------------------------------------*
*   ALL DATA FOR JOB LOADED - NOW TIDY UP FILES ETC.   *
*------------------------------------------------------*
ENDJOB   EQU   *
         PUT   RPL=CIRPL
         LTR   R15,R15                  PUT OK ?
         BZ    OK3                      YES               MJS
         BAL   R14,DSPLERR              NO                MJS
         SPACE
OK3      EQU   *                                      MJS
         MODCB RPL=CIRPL,                                              *
               OPTCD=(KEY,DIR,UPD,MVE)
         MVC   CIKEY+4(5),=CL5'00000'   SET KEY FOR REC 0
         GET   RPL=CIRPL
         LTR   R15,R15                  GET OK ?
         BZ    OK4                      YES            MJS
         BAL   R14,DSPLERR              NO             MJS
OK4      EQU   *                                       MJS
         MVC   RJOBNAM(8),SSSOJOBN      MOVE JOBNAME &
         MVC   RJOBID(5),SSSOJOBI+3        JOBID TO REC 0
         CVD   R3,DWORD                 CONVERT LINE COUNT
         UNPK  RLINE(5),DWORD+5(3)         & MOVE TO
         OI    RLINE+4,X'F0'                  REC 0
         PUT   RPL=CIRPL
         LTR   R15,R15                  PUT OK ?
         BZ    OK5                      YES           MJS
         BAL   R14,DSPLERR              NO            MJS
OK5      EQU   *                                      MJS
         XC    RETCODE(4),RETCODE       SET ZERO RETURN CODE
         MVC   DCJOB(8),SSSOJOBI        RETURN JOBID
         MVI   SSSOUFLG,X'00'           ZERO SSSOUFLG
         MVI   SSSOFLG1,X'00'           ZERO SSSOFLG1
         MVI   SSSOFLG2,X'80'           SET 'FINAL CALL' FLAG
         XC    SSOBRETN(4),SSOBRETN     ZERO RETURN FIELD
         BAL   R2,CALLSSYS              GO DO JES2 PROCESSING
         L     R2,SSOBRETN              PICK UP RETURN CODE
         SPACE 3
DSPLEND  EQU   *
         TM    FLAG,X'20'               IS 'ENQUEUED' FLAG ON ?
         BZ    TRY08
         DEQ   (MAJOR,MINOR,15,SYSTEM)
         NI    FLAG,X'DF'
         SPACE 2
TRY08    EQU   *
         TM    FLAG,X'08'               IS 'VSAM OPEN' SET ?
         BZ    TRY04                    NO - IF YES, END & CLOSE
         ENDREQ RPL=CIRPL
         CLOSE CIACB
         NI    FLAG,X'F7'               TURN 'VSAM OPEN' OFF
         SPACE 2
TRY04    EQU   *
         TM    FLAG,X'04'               IS 'JES2 OPEN' SET ?
         BZ    TRY02                    NO - IF YES, CLOSE
         CLOSE SSDCB
         NI    FLAG,X'FB'               TURN 'JES2 OPEN' OFF
         SPACE 2
TRY02    EQU   *
         TM    FLAG,X'02'               IS 'ALLOCATED' SET ?
         BZ    TRY01                    NO - IF YES, UNALLOCATE
         MVC   UNALCDDN(8),ALLOCDDN
         MVI   S99VERB,S99VRBUN
         LA    R2,UNALCLST
         ST    R2,S99TXTPP
         LA    R1,SVC99PTR
         DYNALLOC
         NI    FLAG,X'FD'               TURN 'ALLOCATED' OFF
         SPACE 2
TRY01    EQU   *
         TM    FLAG,X'01'               IS 'JES2 ASSIGNED' SET ?
         BZ    RETURN                   NO
         NI    FLAG,X'FE'               TURN 'JES2 ASSIGNED' OFF
         B     RETURN
         EJECT
**********************
*   ERROR ROUTINES   *
**********************
JOBNTFND EQU   *                   JOB NOT FOUND
         MVC   RETCODE(4),=F'4'         SET 'NOT FOUND' RETURN CODE
         B     RETURN
         SPACE
CMBINVAL EQU   *                   INVALID JOBNAME/JOBID COMBINATION
         MVC   RETCODE(4),=F'8'         SET 'BAD COMB.' RETURN CODE
         B     RETURN
         SPACE
DUPLICAT EQU   *                   DUPLICATE JOBNAME & NO JOBID GIVEN
         MVC   RETCODE(4),=F'12'        SET 'MULT JOBS' RETURN CODE
         B     RETURN
         SPACE
ERROR    EQU   *
         MVC   RETCODE(4),=F'16'        SET UNKNOWN ERROR RETURN CODE
         ST    R2,LINECT
         STM   R14,R2,ERRREGS    MJS    SAVE ERROR ADDR/PARM/RET CODE
         L     R1,4(R13)         MJS    GET OLD SAVE AREA
         L     R1,16(R1)         MJS    GET OLD R15, IE EP ADDR
         SR    R14,R1            MJS    CALCULATE OFFSET OF ERROR
         ST    R14,ERROFFS       MJS    STORE OFFSET
         B     RETURN
         SPACE
SUBSYERR EQU   *
         MVC   RETCODE(4),=F'24'
         ST    R15,LINECT
         B     RETURN
         SPACE 3
DSPLERR  EQU   *
         MVC   RETCODE(4),=F'32'        SET ERROR RETURN CODE
         ST    R15,LINECT
         STM   R14,R2,ERRREGS    MJS    SAVE ERROR ADDR/PARM/RET CODE
         L     R1,4(R13)         MJS    GET OLD SAVE AREA
         L     R1,16(R1)         MJS    GET OLD R15, IE EP ADDR
         SR    R14,R1            MJS    CALCULATE OFFSET OF ERROR
         ST    R14,ERROFFS       MJS    STORE OFFSET
         B     DSPLEND
         EJECT
**********************************************
*   CALL SUBSYSTEM AND HANDLE RETURN CODES   *
**********************************************
CALLSSYS EQU   *
         ST    R2,SSREQRTN
         SPACE 3
         MODESET KEY=ZERO,MODE=SUP
         SPACE 3
         LA    R1,SSREQPRM
         SPACE
         IEFSSREQ
         SPACE
         LR    R2,R15           SAVE RET CODE
         SPACE 3
         MODESET KEY=NZERO,MODE=PROB
         SPACE 3
         LTR   R2,R2
         BNZ   SUBSYERR
         SPACE
         L     R2,SSREQRTN
         BR    R2
         EJECT
********************
*      RETURN      *
********************
RETURN   EQU   *
         TM    FLAG,X'AF'               ANY FLAGS SET ?
         BZ    UNAUTH                   NO
         NI    FLAG,X'7F'               TURN OFF 'FIRST TIME' FLAG
         B     DSPLEND                  GO DEAL WITH OTHER FLAGS
         SPACE
UNAUTH   EQU   *
         LA    R15,0                    SET RETURN CODE
         L     R13,4(0,R13)             RESTORE SAVE AREA ADDRESS
         L     R14,12(R13)              RESTORE RETURN ADDRESS
         LM    R0,R12,20(R13)           RESTORE REGISTERS
         BR    R14                      RETURN
         EJECT
***************************************************
*   CONSTANTS, WORK AREAS, CONTROL BLOCKS, ETC.   *
***************************************************
DWORD    DS    D
LENSAVE  DS    F
ERROFFS  DS    F          OFFSET OF CODE WITHIN THIS             MJS
*                         MODULE THAT CAUSED A BAL TO DSPLERR OR ERROR
ERRREGS  DS    5F   REGISTERS 14,15,0,1,2 AFTER BAL TO DSPLERR OR ERROR
SSREQRTN DS    F          RETURN ADDRESS FOR JES REQUESTS
LINELMT  DC    F'0'                                   MJGAPR81
STATMSG  DC    CL40'     JOB XXXXXXXX, JOBID XXXXX          '
         DC    CL39'                                       '
FLAG     DC    XL1'00'
TERMID   DS    0CL4                             MJS
CIKEY    DC    CL9'TRXX00000'
BLANKS   DC    CL133' '
LIMITMSG DC    CL133'*** OUTPUT LIMIT REACHED - 20004 RECORDS ***'
OPENMSG  DC    CL133' '
         ORG   OPENMSG
         DC    C'*** ERROR OPENING SYSOUT DATASET '
OPENMDSN DS    CL44
         ORG   OPENMSG+L'OPENMSG
ENDMSG   DC    CL133'*** END OF DATA -       RECORDS ***'
MAJOR    DC    CL8'SYSDSN'
MINOR    DC    CL15'PVOLJOBS.UPDATE'
         SPACE 5
SSDCB    DCB   DSORG=PS,MACRF=(GL),DDNAME=X,EODAD=ENDDSET,             *
               SYNAD=ENDDSET
         EJECT
SSREQPRM DC    XL1'80'
         DC    AL3(SSOBAREA)
         SPACE 5
SSOBAREA DS    0F
         DC    CL4'SSOB'                SSOBID
         DC    AL2(SSOBHSIZ)            SSOBLEN
         DS    H                        SSOBFUNC
         DC    A(SSIBAREA)              SSOBSSIB
         DS    F                        SSOBRETN
         DS    F                        SSOBINDV
         SPACE
SSSOAREA DS    0F
         DC    AL2(SSSOSIZE)            SSSOLEN
         DC    XL1'00'                  SSSOUFLG
         DS    X                        SSSORESV
         DC    XL1'D0'                  SSSOFLG1
         DC    XL1'00'                  SSSOFLG2
         DC    H'1'                     SSSOCOPY
         DS    CL8                      SSSOJOBN
         DS    CL8                      SSSOJOBI
         DS    CL1                      SSSOCLAS
         DS    CL3                      SSSORSV5
         DS    CL8                      SSSODEST
         DS    CL8                      SSSOPGMN
         DS    CL8                      SSSORBA
         DS    CL44                     SSSODSN
         DS    CL4                      SSSOFORM
         DC    CL8'V       '            SSSOCLSL
         DS    F                        SSSOWTRC
         DS    CL8                      SSSODSID
         SPACE
SSCSAREA DS    0F
         DC    AL2(SSCSIZE)             SSCSLEN
         DS    X                        SSCSFLGS
         DS    X                        SSCSULEN
         DS    CL8                      SSCSJOBN
         DS    CL8                      SSCSJOBI
         DC    H'320'                   SSCSDIMP
         DS    H                        SSCSDIMR
         DS    XL320                    SSCSARAY (20 ELEMENTS)
         SPACE
SSIBAREA DS    0F
         DC    CL4'SSIB'                SSIBID
         DC    AL2(SSIBSIZE)            SSIBLEN
         DS    XL1                      SSIBFLG1
         DS    XL1                      SSIBRESV
         DC    CL4'JES2'                SSIBSSNM
         DS    CL8                      SSIBJBID
         DS    CL8                      SSIBDEST
         DS    F                        SSIBRSV1
         DS    F                        SSIBSUSE
         EJECT
SVC99PTR DC    X'80'
         DC    AL3(SVC99RB)
         SPACE
SVC99RB  DS    0F
         DC    AL1(S99RBLEN)            S99RBLN
         DS    XL1                      S99VERB
         DC    XL2'6000'                S99FLAG1
         DS    CL4                      S99RSC
         DS    CL4                      S99TXTPP
         DS    CL4                      S99RSV01
         DS    CL4                      S99FLAG2
         SPACE
ALLOCLST DS    0F             TEXT UNIT PTRS FOR ALLOCATE
         DC    A(ATU1DSN)
         DC    A(ATU2SSR)
         DC    XL1'80'
         DC    AL3(ATU3DDN)
         SPACE
ATU1DSN  DS    0F
         DC    AL2(DALDSNAM)
         DC    H'1'
         DC    H'44'
ALLOCDSN DS    CL44
         SPACE
ATU2SSR  DS    0F
         DC    AL2(DALSSREQ)
         DC    H'1'
         DC    H'4'
         DC    CL4'JES2'
         SPACE
ATU3DDN  DS    0F
         DC    AL2(DALRTDDN)
         DC    H'1'
         DC    H'8'
ALLOCDDN DC    CL8'        '
         SPACE
UNALCLST DS    0F             TEXT UNIT PTRS FOR UNALLOCATE
         DC    A(UTU1DDN)
         DC    A(UTU2DSP)
         DC    XL1'80'
         DC    AL3(UTU3SHQ)
         SPACE
UTU1DDN  DS    0F
         DC    AL2(DUNDDNAM)
         DC    H'1'
         DC    H'8'
UNALCDDN DC    CL8'        '
         SPACE
UTU2DSP  DS    0F
         DC    AL2(DUNOVDSP)
         DC    H'1'
         DC    H'1'
         DC    XL1'08'
         SPACE
UTU3SHQ  DS    0F
         DC    AL2(DUNOVSHQ)
         DC    H'0'
         EJECT
CIACB    ACB   AM=VSAM,                                                *
               DDNAME=PVK1DATA,                                        *
               MACRF=(CNV,DIR,SEQ,OUT)
         SPACE 3
CIRPL    RPL   ACB=CIACB,                                              *
               AM=VSAM,                                                *
               AREA=CIAREA,        -                                   *
               AREALEN=2048,                                           *
               ARG=CIKEY,                                              *
               KEYLEN=9,                                               *
               OPTCD=(KEY,DIR,UPD,MVE)
         SPACE 5
         LTORG
         SPACE 5
CIAREA   DS    0XL2048
KEY      DS    CL9
RJOBNAM  DS    CL8
RJOBID   DS    CL5
RLINE    DS    CL5
         DS    CL2021
         EJECT
*           THE ADDRESSES OF THESE 3 DSECTS ARE PASSED TO THE SUBTASK
*           VIA A LIST POINTED TO BY REGISTER 1.
         SPACE 2
DATAREA  DSECT D                         RF#UZVPVK1A   DEC 19 1979
DFUNC    DS    CL4
DJOBN    DS    CL8
DCJOB    DS    CL3
DJOBID   DS    CL5
DLINE    DS    CL5
DSRCH    DS    CL20
DDATA    DS    CL1738
DFNOFF   DS    CL1
         SPACE 4
RETNDATA DSECT
RETCODE  DS    F
LINECT   DS    F
         SPACE 4
TRMID    DSECT                               MJS
TCTTETI  DS    CL4                                 MJS
         EJECT
         SPACE 2
         IEFJSSIB
         SPACE 2
         IEFJSSOB (SO,CS),CONTIG=NO
         SPACE 2
         IEFZB4D0
         SPACE 2
S99RBLEN EQU   S99RBEND-S99RBLN
         SPACE 2
         IEFZB4D2
         SPACE 2
         IEFJESCT
         SPACE 2
         CVT
         SPACE 2
         DCBD  DSORG=PS,DEVD=DA
         SPACE 5
         END   PVK1SUBT
