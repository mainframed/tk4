*          ***************      PROGRAM  ABSTRACT       ***************
*
*1         TITLE  - SPGVMCMD
*-         AUTHOR - STEWART STEVENSON
*-         DATE   - JUNE 1976
*
*-         FUNCTION -
*#                    TO PUT VM/370 COMMANDS INTO VM/370 FROM AN O.S.
*#                  ENVIRONMENT
*
*-         SAMPLE OF USE -
*#                    //     EXEC  SPGVMCMD,CMD='RESET 4E0'
*#                  OR
*#                    S SPGVMCMD.PX,CMD='RESET 4E0'
*#                  OR
*#                             LA    R1,PARM
*#                             LINK  EP=SPGVMCMD
*#                             ... ETC ...
*#                    PARM     DC    A(PARAM)
*#                    PARAM    DC    H'9',C'RESET 4E0'
*#                             ... ETC ...
*
*-         PARAMETERS USED -
*#                  CMD=
*#
*#                  THIS FIELD SUPPLIES THE COMMAND TO BE GIVEN TO
*#                  VM/370, IF PRESENT
*
*-         RESTRICTIONS/RANGE -
*#                    COMMANDS ARE LIMITED TO 60 CHARACTERS
*#                    WHEN LINKED TO, SPGVMCMD WILL BYPASS ITS WTO S IF
*#                    ITS PARAMETER IS NOT FLAGGED WITH THE VL BIT
*                     BANK OF SCOTLAND DEPENDANT CODE IS MARKED IIII
*                     IN COLUMNS 68 THRU 71 OF ALL CARDS WITH IT
*
*-         STORAGE REQUIREMENTS - 500 HEX BYTES APPROX
*
*-         LANGUAGE - ASSEMBLER - F - V.S.
*
*-         OTHER MODULES/MACROS USED -
*                   SVC 249,
*#                  WTO,  #WAYIN,  #WAYOUT,  PGFIX,  PGFREE,  WTOR,
*#                  WAIT,  POST,  STIMER
*
*-         ADDITIONAL REMARKS -
*#                  MESSAGES PRODUCED -
*#
*#                    SPG102A SPGVMCMD -- NO PARM FIELD SUPPLIED
*#                      RETURN CODE 4001 SET AFTER THIS MESSAGE
*#                    SPG103I SPGVMCMD -- OPERATING SYSTEM NOT UNDER
*#                                        VM/370
*#                      RETURN CODE 4000 SET AFTER THIS MESSAGE
*#                    SPG104I SPGVMCMD -- VM/370 RC=NNNNN -- VM CMD
*#                      RETURN CODE SAME AS VM/370 RETURN CODE AFTER
*#                      THIS MESSAGE
*#                    SPG105A SPGVMCMD -- VM/370 COMMAND TOO LONG
*#                      RETURN CODE 4002 SET AFTER THIS MESSAGE
*#                    SPG106I SPGVMCMD -- PAGE FIX ERROR - RETRY LATER
*#                      RETURN CODE 4003 SET AFTER THIS MESSAGE
*#                    SPG130A SPGVMCMD -- KEY COMMAND
*#                      ANY VM COMMAND MAY BE KEYED IN RESPONSE TO
*#                      THIS WTOR.  ONLY WHEN PARM IS OMITTED AND
*#                      PROCESSING IS UNDER VM/370 WILL THE MESSAGE
*#                      BE ISSUED.  IT IS REISSUED AFTER TAKING USER
*#                      REQUESTED ACTION UNTIL -STOP- IS KEYED.
*
*          ***********************************************************$
         TITLE 'SPGVMCMD -- PUTS COMMANDS INTO VM FROM OS'
* TWO MACROS INCLUDED FOR GUIDE MEMBERS
*
*          DATA SET GPM029     AT LEVEL 005 AS OF 10/11/77
         MACRO
&NAME    #WAYIN &BASER,&ID,&VER,&MOD,&EQU,&RENT,&GPM=NO
.*
.*
.*         ***************      PROGRAM ABSTRACT        ***************
.*
.*         TITLE  - #WAYIN.
.*         AUTHOR - IAIN MACKINTOSH.
.*         DATE   - FEBRUARY, 1972.
.*
.*         FUNCTION -
.*
.*                  GENERAL PURPOSE ENTRY MACRO FOR ASSEMBLER MODULES.
.*                  COMPATIBLE WITH ALL CURRENT HIGH LEVEL LANGUAGES
.*                  AND ALSO PREVIOUS DOS AND PRE-FEBRUARY 1972 OS
.*                  VERSIONS OF WAYIN.
.*
.*         SAMPLE OF USE -
.*                  (NAME)   #WAYIN  10,EXAMPLE,07,02,EQU
.*                  THIS EXAMPLE WOULD GIVE BASE REGISTER 10 FOR A
.*                  MODULE IDENTIFIED 'EXAMPLE' WITH VER-MOD LEVEL
.*                  07.02 AND WOULD ALSO GENERATE REGISTER EQUATES.
.*
.*         PARAMETERS USED -
.*                  FIVE PARAMETERS ARE POSSIBLE, EACH POSITIONAL.
.*
.*                  1.  BASE REGISTER(S) - ANY SELF DEFINING TERM,
.*                      EXPRESSED AS A SUBLIST IF MULTIPLE BASE
.*                      REGISTERS ARE REQUIRED E.G. 12 OR (4,5,6).
.*                      REGISTER EQUATES ARE NOT ALLOWED, NOR ARE
.*                      REGISTERS 14-1.  R13 IS USED AS DEFAULT.
.*                  2.  IDENTIFIER - ANY ALPHAMERIC STRING ASSEMBLED
.*                      AS AN 8 BYTE CONSTANT - THE CURRENT CSECT NAME
.*                      IS CHOSEN BY DEFAULT.
.*                  3.  VERSION LEVEL - ANY TWO-DIGIT NUMERIC TO DENOTE
.*                      THE VERSION LEVEL.  DEFAULT IS ZERO.
.*                  4.  MODIFICATION LEVEL - AS VERSION LEVEL.
.*                  5.  REGISTER EQUATES - THE LITERAL 'EQU' CAUSES
.*                      WAYIN TO GENERATE EQUATES IN THE FORM 'R1,R2'
.*                      ETC. FOR REGISTERS 0-15.  IF OMITTED OR
.*                      INVALID, NO ACTION IS TAKEN.
.*
.*         RESTRICTIONS -
.*                  IF MULTIPLE BASE REGISTERS ARE CHOSEN, THEN R13
.*                  CANNOT BE SPECIFIED.  IF WAYIN IS GENERATED MORE
.*                  THAN ONCE WITHIN A CSECT, THEN MULTI-BASE REGISTERS
.*                  ARE NOT PERMITTED AFTER THE FIRST TIME.
.*
.*         ADDITIONAL REMARKS -
.*                  REGISTER EQUATES USED AS STANDARD.
.*                  ANY NUMBER OF WAYIN'S POSSIBLE WITHIN A MODULE
.*                  - ONLY THE FIRST GENERATES A SAVEAREA.
.*                  WAYOUT NOT NOW RESTRICTED - ANY NUMBER OF WAYOUT'S
.*                  MAY BE GENERATED.
.*                  FULLY COMPATIBLE WITH PREVIOUS VERSIONS OF WAYIN -
.*                  BUT NOTE THAT R13 IS NOW DEFAULT.
.*                  COMPATIBLE WITH LA9REG VIA GLOBAL &WAYIN3.
.*
.*         ADDITIONAL FUNCTION
.*           I.S.MOWAT 19DEC75
.*             ADDS ASSEMBLY DATE AND TIME TO CSECT NAME
.*      0.2  J.C.MCCRAE  MARCH 1976
.*             IMPLEMENT WARNING MESSAGE ON USE OF EQU FACILITY
.*    0.3  S.STEVENSON  30AUG76
.*           ADD &WAYIN5 GLOBAL TO CARRY CSECT NAME DOWN TO SPGCSECT
.*            MACRO
.*           ADD GPM=YES/NO (DEFAULT GPM=NO) TO ALLOW GENERATION OF
.*            INITIAL BRANCH AND LITERAL ONLY
.*     0.4  JOHN MCGHEE NOV 1977
.*            ALLOW R13 TO BE 1ST OF MULTIPLE BASE REGS
.*
.*         ***************      END OF ABSTRACT         ***************
.*
.*
.*
         GBLB  &WAYIN1                  TRUE IF ENTERED TWICE
         GBLB  &WAYIN2                  TRUE IF LAST BASE REG WAS 13
         GBLB  &WAYIN3                  TRUE IF EQUATES GENERATED
         GBLB  &WAYIN4             TRUE IF RE-ENTRANT OPTION TAKEN
         GBLC  &WAYIN5             CONTAINS CURRENT CSECT NAME
.*
         LCLA  &BASE                    CURRENT BASE REGISTER
         LCLA  &INDEX                   INDEX TO BASE REG SUBLIST
         LCLA  &REGNO                   NUMBER OF BASE REGISTERS
         LCLC  &IDCON                   IDENTIFIER
         LCLC  &MODCON                  MODIFICATION
         LCLC  &VERCON                  VERIFICATION
         LCLC  &MULTI                   USED FOR MULTIPLE BASE REGS
         LCLC  &DATWORK
         LCLC  &DATRSLT
         LCLA  &SUM
         LCLC  &MONTHS
         LCLC  &TIMWORK
         ACTR  50
&WAYIN5  SETC  '&SYSECT '          SET CURRENT CSECT
.*
         AIF   ('&GPM' EQ 'YES' OR '&GPM' EQ 'NO').GPMOK
         MNOTE *,'#WAYIN.. GPM=&GPM INVALID .. GPM=NO ASSUMED'
         AGO   .NOGPM
.GPMOK   ANOP
         AIF   ('&GPM' EQ 'NO').NOGPM
 AIF (T'&BASER EQ 'O' AND T'&EQU EQ 'O' AND T'&RENT EQ 'O').GPMOK2
         MNOTE *,'#WAYIN.. GPM=YES CONFLICT WITH OTHER PARAMS'
.GPMOK2  ANOP
         AGO   .GPMYES
.NOGPM   ANOP
         AIF   (N'&BASER GT 1 AND &WAYIN1).ERROR1
         AIF   (T'&BASER EQ 'O').SETBASE
         AIF   (N'&BASER LT 2).CHECKS
         AIF   (&BASER(2) EQ 13).ERROR2
         AIF   (N'&BASER LT 3).CHECKS
         AIF   (&BASER(3) EQ 13).ERROR2
         AIF   (N'&BASER LT 4).CHECKS
         AIF   (&BASER(4) EQ 13).ERROR2
         AIF   (N'&BASER GT 4).ERROR7
.CHECKS  AIF   (&BASER(1) LT 2 OR &BASER(1) GT 13).ERROR3
&BASE    SETA  &BASER(1)
         AGO   .TEST13
.*
.SETBASE ANOP
&BASE    SETA  13
.*
.TEST13  AIF   (&WAYIN2 AND &BASE NE 13).ERROR4
         AIF   (NOT &WAYIN2 AND &WAYIN1 AND &BASE EQ 13).ERROR4
.*
         AIF   (NOT &WAYIN4).ZSRE000    ENTER ONCE ONLY FOR RENT
         MNOTE 8,'#WAYIN.. SECOND ENTRY INVALID WITH RENT OPTION'
         MEXIT
.ZSRE000 ANOP
         AIF   (T'&RENT EQ 'O').ZSRE020
         AIF   ('&RENT' EQ 'RENT').ZSRE010
         MNOTE 4,'#WAYIN.. SIXTH OPERAND IS &RENT .. RENT ASSUMED'
.ZSRE010 ANOP
&WAYIN4  SETB  1
         AIF   (&BASE NE 13).ZSRE020
&BASE    SETA  12
         MNOTE 4,'WAYIN .. R13 INVALID AS BASE WITH RENT.R12 ASSUMED'
.ZSRE020 ANOP
.*
.GPMYES  ANOP
&IDCON   SETC  '&SYSECT'
&MODCON  SETC  '00'
&VERCON  SETC  '00'
&MONTHS  SETC  'JANFEBMARAPRMAYJUNJULAUGSEPOCTNOVDEC'
&DATWORK SETC  '&SYSDATE'          COLLECT ASSEMBLY DATE
&TIMWORK SETC  '&SYSTIME'          AND TIME.
&DATRSLT SETC  '&DATWORK'(1,2)     MONTH DIGITS
&SUM     SETA  &DATRSLT
&SUM     SETA   3*&SUM-2           CALCULATE INDEX FOR MONTH
.*
*                                WAYIN GENERAL PURPOSE MACRO    2.1
*                                 ENTRY POINT LINKAGE
         AIF   (T'&EQU EQ 'O' OR '&EQU' NE 'EQU').TRYID
         AIF   (&WAYIN3).TRYID
         MNOTE 4,'#WAYIN.. EQU AGAINST STANDARDS .. SEE STANDARDS MANUAX
               L 3.7.4.6'                                          0.2
*
*                                  REGISTER EQUATES -
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
*
&WAYIN3  SETB  1
.*
.TRYID   AIF   (T'&ID EQ 'O' OR K'&ID GT 8).TRYMOD
&IDCON   SETC  '&ID'
.TRYMOD  AIF   (T'&MOD EQ 'O').TRYVER
         AIF   (T'&MOD NE 'N' OR K'&MOD GT 2).ERROR5
&MODCON  SETC  '&MOD'
.TRYVER  AIF   (T'&VER EQ 'O').USINGS
         AIF   (T'&VER NE 'N' OR K'&VER GT 2).ERROR6
&VERCON  SETC  '&VER'
.*
.USINGS  ANOP
         AIF   (&BASE EQ 13).BASE13
         AIF   ('&GPM' EQ 'YES').GPMYES2
         AIF   (N'&BASER GT 1).MULTBAS
         USING *,R&BASE .
         AGO   .CONSTS
.MULTBAS ANOP
&MULTI   SETC  '&BASER'(2,K'&BASER-2)
         USING *,&MULTI
         AGO   .CONSTS
.BASE13  USING *,R15
*
*
&NAME    B     *+34                BRANCH ROUND CONSTANTS
         AGO   .ZS00
.CONSTS  ANOP
.GPMYES2 ANOP
&NAME    B     34(,R15)                 BRANCH ROUND CONSTANTS     0.2
.ZS00    ANOP
         DC    AL1(29)             LITERAL LENGTH
         DC    CL8'&IDCON ' .      ENTRY NAME
         DC    CL3' &VERCON' .          VERSION LEVEL
         DC    CL4'.&MODCON' .          MODIFICATION LEVEL
         DC    CL1' '
&DATRSLT SETC  '&DATWORK'(4,2)'&MONTHS'(&SUM,3)'&DATWORK'(7,2)
         DC    CL7'&DATRSLT'       DATE OF ASSEMBLY
         DC    CL1' '
         DC    CL5'&TIMWORK'       TIME OF ASSEMBLY
         AIF   ('&GPM' NE 'YES').GPMYES4
         MEXIT
.GPMYES4 ANOP
*
         STM   R14,R12,12(R13) .   SAVE REGISTERS
         AIF   (&BASE EQ 13).NOLOAD
*                                  SET UP BASE REGISTER(S) -
&REGNO   SETA  N'&BASER
         LR    R&BASE,R15 .
         AIF   (&REGNO EQ 0).NOLOAD
&REGNO   SETA  &REGNO-1
&INDEX   SETA  2
.BASLOOP AIF   (&REGNO EQ 0).NOLOAD
         LA    R&BASER(&INDEX),1 .
         LA    R&BASER(&INDEX),4095(R&BASER(&INDEX),R&BASER(&INDEX-1))
&REGNO   SETA  &REGNO-1
&INDEX   SETA  &INDEX+1
         AGO   .BASLOOP
.*
.NOLOAD  ANOP
         AIF   (&WAYIN4).ZSRE030
         AIF   (&WAYIN1).ADCON
         LA    R14,SAVEAREA .      ADDRESS OUR SAVE AREA
         AGO   .CHAIN
.ZSRE030 ANOP
         LA    R0,72 .             OBTAIN 9 DOUBLE WORDS
         BAL   R1,*+4 .            INDICATE
         SVC   10 .                GETMAIN
         LR    R14,R1 .            POINT AT GOTTEN CORE
         L     R1,24(R13) .        RESTORE REGISTER 1
*
         USING SAVEAREA,R13 .      ADDRESSABILITY
SAVEAREA DSECT , .                 FOR DSECT
         DS    9D .                OF 9 DOUBLEWORDS
&SYSECT  CSECT , .                 CONTINUE THE CSECT
*
         AGO   .CHAIN
.ADCON   ANOP
         CNOP  0,4 .               ALIGN FOR ADCON
         B     *+8 .               BRANCH ROUND IT
         DC    A(SAVEAREA) .       GENERATED BY FIRST WAYIN
         L     R14,*-4 .           LOAD SAVE AREA ADDRESS
.CHAIN   ANOP
         ST    R14,8(R0,R13) .     CHAIN L.S.A.
         ST    R13,4(R0,R14) .     CHAIN H.S.A.
         AIF   (&WAYIN1 OR &WAYIN4).NOSAVE
         CNOP  0,4 .               ALIGN FOR SAVEAREA
         BAL   R13,*+76 .          INITIALISE R13 AND BRANCH
SAVEAREA DC    18F'0' .            ROUND SAVEAREA
         AIF   (NOT &WAYIN1).DROP
.NOSAVE  ANOP
         LR    R13,R14 .           SET SAVEAREA ADDRESS
.DROP    AIF   (&BASE NE 13).EXEUNT
         DROP  R15 .               DISPENSE WITH ENTRY ADDRESSIBILITY
         AIF   (&WAYIN1 AND &WAYIN2).EXEUNT
&REGNO   SETA  N'&BASER
         AIF   (&REGNO EQ 0).NOLOAD2
&REGNO   SETA  &REGNO-1
         AIF   (&REGNO EQ 0).NOLOAD2
&MULTI   SETC  '&BASER'(2,K'&BASER-2)
         USING SAVEAREA,&MULTI      SET BASE REGS
&INDEX   SETA  2
.BASLP2  AIF   (&REGNO EQ 0).ENDLD2
         LA    R&BASER(&INDEX),1
         LA    R&BASER(&INDEX),4095(R&BASER(&INDEX),R&BASER(&INDEX-1))
&REGNO   SETA  &REGNO-1
&INDEX   SETA  &INDEX+1
         AGO   .BASLP2
.*
.NOLOAD2 ANOP
         USING SAVEAREA,R13 .      ADDRESS CSECT FROM SAVEAREA
.ENDLD2  ANOP
&WAYIN2  SETB  1
.EXEUNT  ANOP
&WAYIN1  SETB  1
*
         MEXIT
.ERROR1  MNOTE 8,'#WAYIN.. MULTIPLE BASE REGISTERS INVALID AFTER FIRST X
               EXPANSION'
         MEXIT
.ERROR2  MNOTE 8,'#WAYIN.. R13 NOT ALLOWED EXCEPT AS FIRST BASE REGISTEX
               R'
         MEXIT
.ERROR3  MNOTE 8,'#WAYIN.. BASE REGISTER OUTWITH PERMITTED RANGE'
         MEXIT
.ERROR4  MNOTE 8,'#WAYIN.. INVALID RE-USE OF REGISTER 13'
         MEXIT
.ERROR5  MNOTE 0,'#WAYIN.. INVALID MODIFICATION LEVEL .. ZERO ASSUMED'
         AGO   .TRYVER
.ERROR6  MNOTE 0,'#WAYIN.. INVALID VERSION LEVEL .. ZERO ASSUMED'
         AGO   .USINGS
.ERROR7  MNOTE 8,'#WAYIN.. MORE THAN FOUR BASE REGISTERS'
         MEND
         EJECT
*          DATA SET GPM028XXXX AT LEVEL 001 AS OF 09/03/78
         MACRO
&NAME    #WAYOUT &RET
         GBLB  &WAYIN1
         GBLB  &WAYIN4
         LCLC  &RETCOD
.*         ***************      PROGRAM ABSTRACT        ***************
.*
.*         TITLE  - #WAYOUT.
.*         AUTHOR - CHRIS THOMSON.
.*                  THIS VERSION FOR OS BY IAIN MACKINTOSH.
.*         DATES  - A. MARCH, 1970.
.*                  B. JANUARY, 1972.
.*
.*         FUNCTION -
.*                  GENERAL EXIT MACRO FOR ASSEMBLER MODULES.
.*                  PROVIDES ADDRESSING COMPATIBILITY FOR WAYIN.
.*
.*         SAMPLE OF USE -
.*                  #WAYOUT        RETURN CODE OF ZERO ASSUMED
.*                  #WAYOUT (R15)  R15 PRE-LOADED BY USER WITH CODE
.*                  #WAYOUT 32     RETURN CODE LOADED BY WAYOUT
.*
.*         PARAMETERS USED -
.*                  AS ABOVE TO DENOTE FORM AND/OR VALUE OF RETURN
.*                  CODE TO BE PASSED TO HIGHER LEVEL.  NOTE THAT DOS
.*                  VERSIONS OF WAYOUT NOW NEED TO SPECIFY AN OPERAND
.*                  OR COMMA FOR DEFAULT VALUES.  NOTE ALSO THAT (15)
.*                  AND (R15) ARE BOTH ACCEPTABLE AS REGISTER
.*                  NOTATION.  RETURN CODE VALUES MUST RANGE 1-4095.
.*
.*         ADDITIONAL REMARKS -
.*                  REGISTER EQUATES USED AS STANDARD.
.*                  SAVE AREA AUTOMATICALLY FLAGGED TO SHOW ENTRY.
.*                  LABEL 'SAVEAREA' GENERATED FOR 72-BYTE BUCKET.
.*
.*         ***************      END OF ABSTRACT         ***************
.*
.*
&RETCOD  SETC  '&RET'
*                                  #WAYOUT GENERAL PURPOSE MACRO    1.0
*                                  STANDARD RETURN FROM A MODULE.
         AIF   (NOT &WAYIN4).ZSRE00
&NAME    LR    R1,R13 .            POINT AT GOTTEN CORE
         L     R13,4(R13) .        RESET SAVE AREA ADDRESS
         MVI   12(R13),X'FF' .     DENOTE SUCCESSFUL RETURN
         LA    R0,72 .               AND LENGTH
         SVC   10 .                FREEMAIN CORE
         AGO   .TESTRET
.ZSRE00  ANOP
&NAME    L     R13,4(R13) .        RESET SAVEAREA ADDRESS
         MVI   12(R13),X'FF' .     DENOTE SUCCESSFUL RETURN
.TESTRET AIF   ('&RET' EQ '(15)' OR '&RET' EQ '(R15)').REGCODE
         AIF   (T'&RET EQ 'O').ZS01
         AIF   (T'&RET NE 'N').ERROR
         AIF   ('&RET' GE '0' AND '&RET' LE '4095').NOCODE
.ERROR   MNOTE 0,'#WAYOUT .. INVALID RETURN CODE .. ZERO ASSUMED'
.ZS01    ANOP
&RETCOD  SETC  '0'
.NOCODE  ANOP
         LM    R14,R12,12(R13) .   RE-LOAD REGISTERS
         LA    R15,&RETCOD .            LOAD SUPPLIED RETURN CODE
         AGO   .RETURN
.REGCODE ANOP
         L     R14,12(R0,R13) .    RE-LOAD R14
         LM    R0,R12,20(R13) .    RE-LOAD R0-R12
.RETURN  ANOP
         BR    R14 .               RETURN TO CALLER
         AIF   (&WAYIN1).NOSAVE
*
SAVEAREA DS    9D .                REGISTER BUCKET FOR THIS MODULE
.NOSAVE  MEND
         EJECT
         PRINT NOGEN
SPGVMCMD CSECT ,
*
* REGISTER USAGE
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3                   WORK REGISTER
R4       EQU   4                   VS / NON-VS CONDITION CODE SAVE REG
R5       EQU   5                   SAVES COND CODE FOR WTO BYPASS
R6       EQU   6                   COMMAND ADDRESS
R7       EQU   7                   COMMAND LENGTH
R8       EQU   8                   PARAMETER LENGTH
R9       EQU   9                   PARAMETER POINTER
R10      EQU   10                  BAL LINK REGISTER
R11      EQU   11
R12      EQU   12                  WORK REGISTER
R13      EQU   13                  SAVE AREA
R14      EQU   14                  RETURN TO OS
R15      EQU   15                  CALL BY OS
         SPACE 2
         #WAYIN ,                                                  IIII
         XR    R8,R8               ZERO WORK REGISTER
         ICM   R9,B'1111',0(R1)    PICK PARAMETER POINTER
         BALR  R5,0                SAVE CONDITION CODE
         ICM   R8,B'0011',0(R9)    PICK PARAMETER LENGTH
         BNZ   NOWTO102            IF ZERO .. ISSUE WTO
         SPM   R5                  SET COND CODE FOR WTO BYPASS
         BP    NO102               NO WTO BYPASS CMD
         WTO   'SPG102A SPGVMCMD -- NO PARM FIELD SUPPLIED',           X
               ROUTCDE=2
NO102    EQU   *
         LA    R7,4001             SET RETURN CODE
NOWTO102 EQU   *
         CH    R8,LVMCMD           IS IT OVER MAX LENGTH ALLOWABLE
         BNH   NOWTO105            NO ..
         SPM   R5                  SET COND CODE FOR WTO BYPASS
         BP    NO105               NO WTO BYPASS CMD
         WTO   'SPG105A SPGVMCMD -- VM/370 COMMAND TOO LONG',          X
               ROUTCDE=2
NO105    EQU   *
         LA    R7,4002             SET RETURN CODE
         B     PROGEXIT            AND OUT WITH NO ACTION
NOWTO105 EQU   *
         SPACE 2
*
* TEST WHETHER CURRENTLY UNDER VM/370
*
         LA    R0,4                GET                             IIII
         L     R1,=CL4'SPG'         IN TO                          IIII
         SVC   249                   SUPERVISOR STATE              IIII
         STIDP CPUID               GET CPUID FOR VM/370 TEST
         LA    R0,5                RETURN TO                       IIII
         SVC   249                  NORMALITY                      IIII
         CLI   CPUID,X'FF'         IS IT VM/370
         BE    VM                  YES ..
         SPM   R5                  SET COND CODE FOR WTO BYPASS
         BP    NO103               NO WTO BYPASS CMD
         WTO   'SPG103I SPGVMCMD -- OPERATING SYSTEM NOT UNDER VM/370',X
               ROUTCDE=2
NO103    EQU   *
         LA    R7,4000             SET RETURN CODE
         B     PROGEXIT            AND OUT
*
* NOW TRY THE COMMAND ON VM/370
*
VM       EQU   *
         MVI   VMCMD,C' '          CLEAR MESSAGE AREA
         MVC   VMCMD+1(L'VMCMD-1),VMCMD
         LTR   R8,R8               IS THERE ANY PARM
         BNZ   VM02                YES .. BYPASS MESSAGE FROM OPERATOR
         BAL   R10,CMDWTOR         GET CMD FROM OPERATOR
VM02     EQU   *
         BCTR  R8,0                YES .. KNOCK ONE FOR EX INSTR
         EX    R8,CMDMVC           MOVE COMMAND TO WTO103
         LA    R7,1(,R8)           GET COMMAND LENGTH
         LA    R6,VMCMD            AND ADDRESS
         SPACE 2
*
* TEST IF A VS SYSTEM AND PAGE FIX PARAMETER LIST FOR VM IF IT IS
*
         LA    R0,4                DISABLE FOR DIAGNOSE ETC...     IIII
         L     R1,=CL4'SPG'                                        IIII
         SVC   249                                                 IIII
         L     R4,16               PICK CVT ADDRESS
         TM    116(R4),2           IS IT A VS SYSTEM
         BALR  R4,0                STORE CONDITION CODE SETTING
         BZ    DIAGNOSE            NO .. BYPASS PAGE FIXING
         SPACE 2
*
* NOW DO PAGE FIXES IF REQUESTED
*
         MVI   PAGECB,0            RESET THE PAGE WAIT ECB
         PGFIX R,A=RFIXLST,ECB=PAGECB,LONG=N     FIX THE FIX LIST
         BAL   R10,BADFIX          CHECK FOR RESULTS
         LR    R3,R6               LOAD WORK REG
         STCM  R3,B'0111',RFIXLST+1              STORE START ADDRESS
         AR    R3,R7                             ADD LENGTH
         STCM  R3,B'0111',RFIXLST+5              STORE LAST+1 ADDRESS
         MVI   PAGECB,0            ZERO OFF ECB
* FIX DOWN THE VM PARAMETER LIST AND OBTAIN REAL ADDRESS FEEDBACK
         PGFIX L,LA=RFIXLST,ECB=PAGECB,LONG=N,RSAOPT=Y
         BAL   R10,BADFIX          CHECK FOR RESULTS
         LRA   R6,0(,R6)                         PICK UP REAL ADDRESS
         BC    7,BADFIX02                        BAD TRANSLATION
         EJECT
*******************************************************************
*                                                                 *
* NOW EXECUTE DIAGNOSE INSTRUCTION FOR WHICH THERE IS NO NMEMONIC *
*                                                                 *
*    X'83'   IS DIAGNOSE OPERATION CODE ON IBM 360/370            *
*    X'67'   ARE REGS 6 AND 7                                     *
*             - REG 6 CONTAINS ADDRESS OF VM COMMAND              *
*             - REG 7 CONTAINS LENGTH  OF VM COMMAND              *
*    X'0008' INDICATES TO VM THAT THIS IS A VM/370 CMD FROM USER  *
*                                                                 *
DIAGNOSE DC    X'83',X'67',XL2'0008'  *** ISSUE DIAGNOSE COMMAND  *
*                                                                 *
*             - REG 7 NOW CONTAINS RETURN CODE FROM VM/370 CMD    *
*                                                                 *
*******************************************************************
         EJECT
*
* UNFIX PAGES IF THIS IS REQUIRED
*
         SPM   R4                  IS THIS A VS SYSTEM
         BZ    ENABLE              NO ..
         PGFREE L,LA=RFIXLST,RSAOPT=Y            FREE UP THE VM PARAM
         PGFREE R,A=RFIXLST                      FREE UP FIX PARAM LIST
ENABLE   EQU   *
         LA    R0,5                RETURN TO NORMAL STATE          IIII
         SVC   249                                                 IIII
         SPACE 2
*
* TEST AND PRINT VM/370 RETURN CODE RESPONSE
*
         CVD   R7,DBLWD            PUT RETURN
         UNPK  RCODE,DBLWD          CODE INTO
         OI    RCODE+L'RCODE-1,C'0'
         SPM   R5                  SET COND CODE FOR WTO BYPASS
         BP    NO104               NO WTO BYPASS CMD
WTO103   WTO   'SPG104I SPGVMCMD -- VM/370 RC=NNNNN --                 X
                                                           ',ROUTCDE=2
NO104    EQU   *
         SPACE 2
*
* SEE IF WE WANT TO GIVE OPERATOR OPTION FOR ANOTHER CMD
*
         ICM   R8,B'0011',0(R9)    GET PARM LENGTH AGAIN
         BZ    VM                  AND TRY AGAIN
         SPACE 2
*
* PROGRAM EXIT
*
PROGEXIT EQU   *
         LR    R15,R7              USE SUPPLIED RCODE
         #WAYOUT (R15)                                             IIII
         SPACE 2
*
* BAD PAGE FIX ROUTINE
*
BADFIX   EQU   *
         LR    R12,R15             SAVE RETURN CODE
         N     R12,OFFBIT28        REMOVE 08 RETURN CODE
         WAIT  ECB=PAGECB          AWAIT COMPLETEION
         LTR   R12,R12             WAS IT OK
         BZR   R10                 YES ..
BADFIX02 EQU   *
         SPM   R5                  SET WTO CONDITION CODE
         BP    NO106               BYPASS IF NO WTO S REQUIRED
         WTO   'SPG106I SPGVMCMD -- PAGE FIX ERROR - RETRY LATER',     ?
               ROUTCDE=2
NO106    EQU   *
         LA    R7,4003             SET RETURN CODE
         B     PROGEXIT            AND EXIT FROM PROGRAM
         SPACE 2
*
* GET A VM CMD FROM THE OPERATOR
*
CMDWTOR  EQU   *
         XC    CMDECB,CMDECB       CLEAR ECB
         XC    VMCMD#,VMCMD#        AND I/O BUFFER
         WTOR  'SPG130A SPGVMCMD -- KEY COMMAND',VMCMD#,L'VMCMD#,      X
               CMDECB,ROUTCDE=2
STIMER   EQU   *
         XC    STIMECB,STIMECB     ZERO EXIT ECB
         STIMER REAL,STEXIT,BINTVL=FIVEMINS
         WAIT  ECBLIST=ECBLIST     WAIT FOR A WHILE
         TM    STIMECB,X'40'       WAS IT STIMER
         BO    STIMER              YES ..
         LA    R8,60               NO .. ASSUME LENGTH OF 60
         LA    R6,VMCMD#+59        AND SCAN DOWN
CMDSCAN  EQU   *
         CLI   0(R6),0             INTO MSG YET
         BNE   CMDEXIT             YES ..
         BCTR  R6,0                NO .. BACK 1
         BCT   R8,CMDSCAN          AND ROUND
         B     CMDWTOR             NO CMD FOUND SO TRY AGAIN
CMDEXIT  EQU   *
         LA    R9,VMCMD#-2         POINT AT CMD AREA
         CLC   EXITCMD,VMCMD#      IS IT FINISH REQUEST
         BE    PROGEXIT            YES ..
         BR    R10                 NO .. RETURN TO CALLER
         SPACE 2
*
* STIMER EXIT
*
STEXIT   EQU   *
         PUSH  USING
         USING *,R15
         POST  STIMECB             END ANY WAIT THERE IS
         BR    R14                 AND RETURN
         POP   USING
         SPACE 2
*
* WORK AREAS ETC...
*
DBLWD    DS    D
*
         ORG   DBLWD
CPUID    DS    F
*
         ORG   WTO103+38
RCODE    DS    CL5
*
         ORG   WTO103+47
VMCMD    DS    CL60                AREA FOR THE VM/370 COMMAND
*
         ORG   ,
CMDMVC   MVC   VMCMD(0),2(R9)
*
LVMCMD   DC    Y(L'VMCMD)          MAX LENGTH OF VM/370 TO HANDLE
*
RFIXLST  DC    0D'0',X'00',AL3(0),X'80',AL3(0)   VM PARAM FIX LIST
*
PAGECB   DC    A(0)                              ECB FOR PAGE FIXING
*
OFFBIT28 DC    0F'0',X'FFFFFFF7'   REMOVCE 08 RETURN CODE
*
CMDECB   DC    A(0)                WTOR ECB
*
         DC    H'0'                ESSENTIAL PADDING
VMCMD#   DC    XL60'0'             WTOR I/O AREA
*
STIMECB  DC    A(0)                STIMER EXIT ECB
*
FIVEMINS DC    F'30000'            5 MINS IN HUNDRETHS
*
ECBLIST  DC    A(STIMECB),X'80',AL3(CMDECB)
*
EXITCMD  DC    C'STOP '            COMMAND TO TERMINATE PROCESSING
         SPACE
         #SPGSECT
         DC    CL24'P!A!N001GPM028XXXX090378'
         END
