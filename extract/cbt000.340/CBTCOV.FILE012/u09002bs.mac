         TITLE 'ALLOCATE DISC SPACE'
***                                                                 ***
*        THIS PROGRAM WILL ALLOCATE SPACE ON DISC BY USE OF SVC 32    *
*          THE PARAMETERS IT EXPECTS AND THE ORDER OF EXPECTATION ARE:-
*              A) AN ADDRESS OF A 44 BYTE FIELD CONTAINING THE DSNAME *
*                    REQUIRED LEFT JUSTIFIED                          *
*              B) AN ADDRESS OF A 2 BYTE FIELD CONTAINING THE BLKSIZE *
*                    IN BINARY                                        *
*              C) AN ADDRESS OF A 2 BYTE FIELD CONTAINING THE LRECL   *
*                    IN BINARY                                        *
*              D) AN ADDRESS OF A 1 BYTE FIELD CONTAINING THE RECFM   *
*                    EXAMPLES CAN BE FOUND IN SYSTEM CONTROL BLOCK    *
*                    IN THE DCB SECTION                               *
*              E) AN ADDRESS OF A FIELD IN THE FOLLOWING FORMAT       *
*                      1ST 3 BYTES GIVING TYPE OF SPACE REQUIRED E.G  *
*                           TRK FOR TRACKS                            *
*                           CYL FOR CYLINDERS                         *
*                      2ND 3 BYTES GIVING AMOUNT OF PRIMARY SPACE     *
*                            REQUIRED  E.G.                           *
*                                010                                  *
*                      3RD 3 BYTES GIVING SECONDARY SPACE REQUIRED E.G.
*                                010                                  *
*                      AN EXAMPLE OF THIS FOR SPACE=(TRK,(5,10)) IS   *
*                               'TRK005010'                           *
*                                                                     *
*           'E' MAY BE OMITTED IF YOU REQUIRE DEFAULT SPACE OF        *
*                       TRK,(5,10))                                   *
*              ON EXIT FROM THIS PROGRAM REGISTER 15 WILL CONTAIN
*              ONE OF THE FOLLOWING CODES:-
*              0   = SPACE ALLOCATED O.K.
*              J   = DUPLICATE NAME FOUND IN VTOC
*              8   = NO SPACE IN THE VTOC FOR DSCB
*              C   = PERMANENT I / O ERROR
*              14  = NO SPACE AVAILABLE ON THIS PACK FOR THIS AMOUNT
*              10  = ABSOLUTE TRACK NOT FOUND AVAILABLE
*              18  = RECORD LENGTH IS GREATER THAN 65,535
*              FF  = DD CARD '//SYSOUT' NOT IN TIOT -DD CARD MISSING
*        PLEAST NOTE :-                                               *
***
ZALLOC   INIT
         EXTRN DISK
         LR    R3,R1       SAVE PARAMETER  REGISTER
         USING JFCB,R11
         LA    R11,JFCBAREA             READY FOR ALTERATION OF DSN
         RDJFCB SYSOUT                  OBTAIN JFCB FOR ALTERATION
         MVI   FM1DSCB,X'40'           BLANK OUT
         MVC   FM1DSCB+1(43),FM1DSCB     DATA SET NAME
         L     R4,0(R3)                  ADDRESS OF DSNAME
DSNAME   MVC   DS1DSNAM(44),0(R4)        MOVE DSNAME TO DSCB
         MVC   JFCBDSNM(44),0(R4)       MOVE IN DSN THAT IS REQUIRED
         OI    JFCBMASK+4,X'80'         SET ON BIT INDICATING THAT AT
*   INSERT DSORG FIELD IN JFCB + DSCB     15/NOV/71
         MVC   DS1DSORG,=X'4000'
         MVC   JFCDSORG,=X'4000'
**          ENDED 15/NOV/71
*                                       OPEN JFCB IS TO BE WRITTEN
*                                       BACK TO JOBQUE
         L     R4,4(R3)                  BLKSIZE PARAMETER
BLKSIZE  MVC   DS1BLKL(2),0(R4)          MOVE BLOCK LENGTH
         L     R4,8(R3)                  LRECL PARAMETER
LRECL    MVC   DS1LRECL(2),0(R4)         MOVE RECORD LENGTH
         L     R4,12(R3)                 RECFM PARAMETER
         MVC   DS1RECFM(1),0(R4)         MOVE  RECFM
         CLI   0(R4),X'C0'        IF RECFM = U, ZERO LRECL
         BE    ALTRECL
RECFM    EQU   *
         TM    0(R3),X'80'               IS THIS LAST PARM
         BO    DEFLTSPC                  YES THEN GO & USE DEFAULT SPAC
PRIMSPAC L     R4,16(R3)
         MVC   FULLWD+1(3),3(R4)         THIS WILL LOAD 3 BYTES OF SPA-
         LA    R5,FULLWD                 CE REQUIRED INTO A FULLWD AND
         BAL   R10,CONRTN                THEN BRANCH TO CHANGE TO BINAR
         CLC   0(3,R4),=C'CYL'
         BNE   TRACKS
         SR    R7,R7                     RESULT OF CONVERSION TO BINARY
         AR    R7,R6                     HAS TO BE CONVERTED  TO TRACKS
         M     R6,=F'20'   2314 TRKS/CYL DUE TO SVC 32 WANTING SPACE
         ST    R7,FULLWD                 REQUIREMENT FOR PRIMARY IN
         B     SPCUPDAT                  TRACKS
TRACKS   ST    R6,FULLWD
SPCUPDAT MVC   DS1EXT1+3(4),FULLWD       INTO CHHC PART OF LOWER EXT
SECSPACE MVC   FULLWD(4),=C'0000'        ZEROIZE FULLWD
         MVC   FULLWD+1(3),6(R4)         SECONDARY SPACE
         LA    R5,FULLWD                 CONVERT SECONDARY QUANTITY
         BAL   R10,CONRTN                TO BINARY
         ST    R6,FULLWD
         MVC   DS1SCALO(4),FULLWD        MOVE  IN SECONDARY SPACE
SPACETYP CLC   0(3,R4),=C'TRK'           IS IT TRACKS
         BNE   CYLS                      NO
         MVI   DS1SCALO,X'88'            SECONDARY IS CONTIGUOUS TRKS
         B     ALLOCATE
CYLS     CLC   0(3,R4),=C'CYL'           IF NOT TRK OR CYL USE DEFAULT
         BNE   DEFLTSPC                  SPACE
         MVI   DS1SCALO,X'C8'            CONTIGUOUS CYLINDERS
         SPACE 6
***                                                                 ***
*     THIS  ROUTINE  FINDS THE TIOT ADDRESS                           *
*        SO THAT THE UCB ADDRESS FOR SVC 32 CAN                       *
*        BE FOUND                                                     *
***                                                                 ***
ALLOCATE L     R4,16                     ADDRESS OF CVT
         L     R4,0(R4)                  ADDRESS OF PTR TO NEXT&CUR.TCB
         L     R4,4(R4)                  ADDRESS OF CURRENT TCB
         L     R3,12(R4)                 ADDRESS OF TIOT
         LA    R3,24(R3)                 JUMP OVER JOBNAME ETC
DDNAME   CLC   4(6,R3),=C'SYSOUT'        IS THIS OUR DDNAME
         BE    OBTNUCB                   YES. GO GET UCB ADDRESS
         SR    R4,R4                     PREPARE TO GET NEXT ENTRY IN
         IC    R4,0(R3)                  TIOT BY ADDING LENGTH OF
         AR    R3,R4                     CURRENT ENTRY TO START OF
*                                        CURRENT ENTRY ADDRESS
         CLC   0(4,R3),=F'0'             IS IT END OF TIOT
         BE    ERRORDD                   YES. GO AND REPORT
         B     DDNAME                    NO
OBTNUCB  MVC   FULLWD+1(3),17(R3)        ADDRESS OF UCB
         MVI   FULLWD,X'80'              SET LAST UCB ADDRESS BIT ON
         LA    R1,FULLWD
         LA    R0,FM1DSCB                SET  UP  THE  ADDRESS OF FMT1
         LA    R2,1                      DSCB  AND PUT ON THE TOP
         SR    R3,R3                     BIT OF REG0 TO INDICATE  TO
         SRDL  R2,1                      SVC 32 THAT THIS REQUEST IS
         OR    R0,R3                     FROM UTILITY PROGRAM AND SPACE
         SVC   32                        REQUIREMENT IS IN DUMMY DSCB
         ST    R15,FULLWD               STORE RETURN CODE FROM ALLOCATE
         LTR   R15,R15                  IS THE RETURN CODE = 0
         BNZ   RETURN                   NO THEN RETURN TO CALLING PGM
         OPEN  (SYSOUT,(OUTPUT)),TYPE=J
         CLOSE SYSOUT                   JUST TO BE TIDY
         L     R15,FULLWD               RESET RETURN CODE
RETURN   EXIT
DEFLTSPC MVC   DS1EXT1+3(4),=F'5'        5 TRKS PRIMARY
         MVC   DS1SCALO(4),=X'8800000A'  10 TRKS SECONDARY
         B     ALLOCATE
ERRORDD  SR    R15,R15                   SET RETURN CODE OF
         LA    R15,255                     'FF' FOR CALLING
         B     RETURN                      PROGRAM
ALTRECL  MVC   DS1LRECL(2),=X'0000'     ZERO DSCB LRECL
         USING IHADCB,R4
         L     R4,=A(DISK)              LOAD R4 ADDR OF DCB
         MVC   DCBLRECL,DCBBLKSI        SET DCB LRECL = BLKSIZE
         B     RECFM
***                                                                 ***
*        THIS  ROUTINE CONVERTS A QUANTITY TO BINARY. THE INPUT FIELD *
*              MUST BE A FULL WORD IN LENGTH  THE ADDRESS OF WHICH ON *
*              ENTRY MUST BE IN  R5. THE RESULT OF THE CONVERSION IS  *
*              IN R6  AND R10 IS USED TO RETURN BY                    *
***                                                                 ***
         SPACE 3
CONRTN   PACK  DOUBLE+4(4),0(4,R5)
         CVB   R6,DOUBLE
         BR    R10
***                                                                 ***
*          CONSTANTS  ETC                                             *
*                                                                     *
***                                                                  **
DOUBLE   DS    0D
         DC    D'0'
CONVERT  DC    F'0'
HALFWD   DC    H'0'
FULLWD   DC    F'0'
FM1DSCB  DS    0D
DS1DSNAM DC    44C' '
DS1FMTID DC    X'F1'
DS1DSSM  DC    6X'00'
DS1VOLSQ DC    2X'00'
DS1CREDT DC    X'000000'
DS1EXPDT DC    X'000000'
DS1NOEPV DC    X'00'
DS1NOBDB DC    X'00'
DS1RSRV1 DC    X'00'
DS1SYSCD DC    13X'00'
DS1RSRV2 DC    7X'00'
DS1DSORG DC    2X'00'
DS1RECFM DC    X'00'
DS1OPTCD DC    X'00'
DS1BLKL  DC    2X'00'
DS1LRECL DC    2X'00'
DS1KEYL  DC    X'00'
DS1RKP   DC    2X'00'
DS1DSIND DC    X'00'
DS1SCALO DC    4X'00'
DS1LSTAR DC    3X'00'
DS1TRBAL DC    2X'00'
DS1RSVR3 DC    2X'00'
DS1EXT1  DC    10X'00'
DS1EXT2  DC    10X'00'
DS1EXT3  DC    10X'00'
DS1PTRDS DS    10C
SYSOUT   DCB   DDNAME=SYSOUT,EXLST=EXITLIST,DSORG=PS,MACRF=PM
EXITLIST DS    0F
         DC    X'87'
         DC    AL3(JFCBAREA)
JFCBAREA DS    44F
JFCB     DSECT
         IEFJFCBN
         DCBD  DSORG=(PS)
         END
