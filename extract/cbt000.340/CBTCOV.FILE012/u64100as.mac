* THIS PROGRAM LISTS AND COMPILES A CATALOGUE OF MODULES FROM A SET OF
* MAG TAPES OF IBM OPTIONAL MATERIAL.  IT READS THROUGH ALL TAPES UP TO
* DOUBLE TM PRINTING ALL ./ CARDS & COUNTING THE DATA CARDS IN BETWEEN.
*
* INPUT IS SYSUT1: VOL-SER OF 1ST VOLUME MUST BE ON DD CARD; LAST 2
* CHARS MUST BE NUMERIC AND ARE INCREMENTED BY 1 FOR SUBSEQUENT TAPES.
* PARM FIELD IS NO OF TAPES (MAX 99).    EG VOL=SER=VSR601, PARM=3 WILL
* PROCESS VSR601,VSR602,VSR603.
*
* OUTPUT ARE 1) SYSPRINT: LISTING OF ALL ./ CARDS, COUNTS OF CARDS AND
* FILES BY TAPE. IT IS WELL SPACED TO FACILITATE PENCILLING IN NOTES.
*  2) SYSUT2: FILE OF 20 BYTE DICTIONARY RECORDS READY FOR SORTING
* AND PRINTING IN ALPHANUMERIC SEQUENCE OF MODULE NAME.  THE JCL BELOW
* SHOWS SOME (MORE) TAPES' WORTH BEING ADDED TO THE END OF AN EXISTING
* DICTIONARY AND THE WHOLE SORTED & PRINTED.
* PROGRAM 'LISTDIC' (SUPPLIED) IS A SIMPLE LOOP TO PRINT 6 PER LINE.
*
*      //  EXEC PGM=LISTOPT,PARM=2,COND=(0,NE)
*      //SYSPRINT DD SYSOUT=A
*      //SYSUDUMP DD SYSOUT=A
*      //SYSUT1 DD DISP=OLD,UNIT=TAPE,VOL=SER=NNSP33
*      //SYSUT2 DD DISP=MOD,DSN=SYSPROG.VSOPT.U
*      //  EXEC PGM=SORT,PARM='MSG=CP'
*      //SORTIN DD DISP=OLD,DSN=SYSPROG.VSOPT.U
*      //SORTOUT DD DISP=(,PASS),UNIT=SYSDA,DSN=&&S,SPACE=(TRK,(5,1)),
*      //    DCB=(RECFM=FB,BLKSIZE=2000,LRECL=20)
*      //SORTLIB DD DISP=SHR,DSN=SYS1.SORTLIB
*      //SYSOUT DD SYSOUT=A
*      //SORTWK01 DD UNIT=SYSDA,SPACE=(TRK,10,,CONTIG)
*      //SORTWK02 DD UNIT=SYSDA,SPACE=(TRK,10,,CONTIG)
*      //SORTWK03 DD UNIT=SYSDA,SPACE=(TRK,10,,CONTIG)
*      //SYSIN DD *
*       SORT FIELDS=(2,8,A),FORMAT=CH
*       RECORD TYPE=F,LENGTH=20
*       END
*      /*
*      //  EXEC PGM=LISTDIC,COND=(0,NE)
*      //SYSPRINT DD SYSOUT=A
*      //PRINT DD SYSOUT=A
*      //SYSUT1 DD DISP=(OLD,DELETE),DSN=&&S
*
*
LISTOPT  CSECT
         BEGIN *
         L     R3,0(,R1)               PARM
         OPEN  (SYSPRINT,(OUTPUT),SYSUT2,(OUTPUT))
         ICM   R2,3,0(R3)              L'PARM
         BZ    PER                     PARM ERROR IF NULL
         CH    R2,=H'2'                TEST L'PARM
         BNH   POK                     IF <=2
PER      LA    R2,=CL81'-ERROR IN PARM FIELD'
         B     ABEND
POK      BCTR  R2,0                    L'-1 FOR EXECUTE
         EX    R2,PKPARM               PACK PARM FIELD
         RDJFCB (SYSUT1)
         MVI   JFCB+66,X'10'           LABEL=BLP
         PACK  VSNCT(2),JFCB+122(2)    PACK LAST 2 DIGITS VSN
A        MVC   HOFVSN,JFCB+118         VSN TO PRINTLINE
         MVC   UT2VSN,HOFVSN           STORE VSN FOR SYSUT2 RECORD
         OPEN  (SYSUT1),TYPE=J
         MVI   TMFLAG,255              INIT TAPEMARKFLAG
         MVC   LABCT,=PL2'0'           ZERO LABELCOUNT
         MVC   HOFCNT,HOFCNT-1         ENSURE CONTINUATION CLEAR IN HOF
         PUT   SYSPRINT,HOF
         MVC   LINECT,=P'55'           INIT LINECOUNT
EXCP     EXCP  IOB
         WAIT  ECB=ECB
         B     C
B        AP    LABCT,=P'1'             LABEL CT + 1
         MVC   FHLAB+1(3),=X'202120'
         ED    FHLAB(4),LABCT          LABEL PARM TO PRINT
         MVC   UT2LAB,FHLAB            STORE LABEL PARM FOR SYSUT2 REC
         MVI   TMFLAG,0
         SP    LINECT,=P'2'
         BH    B1
         MVC   LINECT,=P'55'
         MVC   HOFCNT,=C'...CONTINUED'
         PUT   SYSPRINT,HOF
B1       PUT   SYSPRINT,FH
C        CLI   ECB,X'7F'               NORMAL BLOCK?
         BE    GOODREAD                YES
         TM    IOB+12,1                TAPEMARK?
         BO    TM                      YES
         LA    R2,ERMSG                POINT TO ERR MESS
ABEND    PUT   SYSPRINT,(2)            PRINT MESSAGE
         ABEND 20,DUMP
TM       TS    TMFLAG                  LAST BLOCK ALSO TM?
         BNZ   D                       IF SO
         SP    LINECT,=P'1'
         MVC   PCCT(8),EDCCT
         ED    PCCT(9),CARDCT          EDIT #CARDS
         MVC   CARDCT,=PL4'-1'         RESET COUNT
         PUT   SYSPRINT,PCCT
         B     EXCP                    GO TO READ NEXT
ERMSG    DC    CL82'-I/O ERROR'
GOODREAD TM    TMFLAG,128              LAST BLOCK A TM?
         BO    B                       ... OR 1ST TIME THRU
         L     R3,=F'8000'             LOAD BLKSIZE
         SH    R3,IOB+14               SUBTRACT RESIDUUM
         XR    R2,R2
         D     R2,=F'80'               ENSURE BLOCK 80*N BYTES
         LTR   R2,R2
         BNZ   E                       FAIL IF NOT
         LA    R2,BUFFER
         MVI   TMFLAG,0
TDSLASH  CLC   0(2,R2),=C'./'          TEST FOR ./ CARD
         BNE   NOTDS                   IF NOT
         CP    CARDCT,=P'0'
         BNH   PDS
         MVC   PCCT(8),EDCCT
         ED    PCCT(8),CARDCT
         MVC   CARDCT,=PL4'-1'
         PUT   SYSPRINT,PCCT
         SP    LINECT,=P'1'
PDS      SP    LINECT,=P'2'
         BH    P1
         MVC   LINECT,=P'55'
         MVC   HOFCNT,=C'...CONTINUED'
         PUT   SYSPRINT,HOF
P1       MVC   LINE+1(80),0(R2)
         PUT   SYSPRINT,LINE
************ OUTPUT BASIC DICTIONARY RECORD TO SYSUT2 ****************
         LA    R14,UT2N                POINT TO START OF NAME
         MVC   UT2N,UT2N-1             CLEAR TO SPACES
         LR    R1,R2                   COPY @CARDSTART TO R1
         LA    R15,65                  SEARCH LIMIT TO R15
L1DS     CLC   6(5,R1),=C'NAME='       SCAN FOR START OF NAME
         BE    L2DS
         LA    R1,1(,R1)
         BCT   R15,L1DS
         B     NOTDS                   IF NO 'NAME=' ANYWHERE
L2DS     MVC   0(1,R14),11(R1)         STORE NEXT CHAR OF NAME
         CLI   12(R1),C'A'             TEST SUBSEQUENT CHAR
         BL    EL2DS                   < 'A' MEANS SPACE OR COMMA HERE
         LA    R1,1(,R1)               ELSE STEP POINTERS
         LA    R14,1(,R14)
         B     L2DS                    GO DEAL WITH NEXT CHAR
EL2DS    PUT   SYSUT2,UT2              WRITE BASIC DICTIONARY REC
***********************************************************************
NOTDS    LA    R2,80(,R2)              STEP PTR
         AP    CARDCT,=P'1'
         BCT   R3,TDSLASH              GO TEST FOR ./
         B     EXCP                    GO TO READ NEXT BLOCK
E        LA    R2,=CL82'-BLOCKLENGTH ERROR'
         B     ABEND
D        PUT   SYSPRINT,=CL81'0-------END OF TAPE--------   '
         CLOSE (SYSUT1)              ( WILL REOPEN NEXT TAPE)
         AP    VSNCT,=P'1'             INC LAST 2 DIGITS VSN
         MVC   TEMP(5),=X'4021202040'
         ED    TEMP(5),VSNCT
         MVC   JFCB+122(2),TEMP+2      UPDATED VSN TO JFCB
         SP    PARM,=P'1'
         BH    A                       LOOP TILL ALL TAPES DONE
         CLOSE (SYSPRINT,,SYSUT2)
         BEGOUT RC=0
TMFLAG   DC    X'FF'                   1ST TIME/LAST READ TM
SYSPRINT DCB   DSORG=PS,MACRF=(PM),RECFM=FBA,BLKSIZE=810,LRECL=81,     *
               DDNAME=SYSPRINT
SYSUT1   DCB   DSORG=PS,MACRF=(E),EXLST=XL,DDNAME=SYSUT1
SYSUT2   DCB   DSORG=PS,DDNAME=SYSUT2,MACRF=(PM),RECFM=FB,LRECL=20,    *
               BLKSIZE=2000
XL       DC    0F'0',X'87',AL3(JFCB)   SYSUT1 EXITLIST
UT2      DC    C' '  *********** BASIC DICTIONARY RECORD*********
UT2N     DC    CL8' ',C' '             MODULE NAME
UT2VSN   DC    CL6' '                  VOL SER NO
UT2LAB   DC    CL4' '                  LABEL PARAM
JFCB     DC    44F'0'
IOB      DC    X'02000000',A(ECB,0,0,CCW,SYSUT1,0,0)
         LTORG
CCW      CCW   X'02',BUFFER,X'20',8000 TO READ SYSUT1
PKPARM   PACK  PARM,2(,R3)             ****EXECUTED****
HOF      DC    CL18'1LISTING OF TAPE '
HOFVSN   DC    CL6' ',C' '
HOFCNT   DC    CL12' ',CL55' '
LINECT   DC    PL2'55'
LINE     DC    CL81'0'
EDCCT    DC    X'402020202020212040'
FH       DC    CL81'0FILE NUMBER '
FHLAB    EQU   FH+14
LABCT    DC    PL2'0'                  LABEL CT
PARM     DS    PL2                     PARM=#TAPES TO PROCESS
PCCT     DC    CL82'         CARDS.'
ECB      DC    F'0'
TEMP     DS    6C
CARDCT   DC    PL4'-1'
VSNCT    DS    PL2
BUFFER   DS    1000D
         END
