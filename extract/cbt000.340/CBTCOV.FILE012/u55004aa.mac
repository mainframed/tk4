    THIS IS A BINARY SEARCH ROUTINE FOR AN IN-CORE TABLE.

    IT WILL RETURN THE ADDRESS OF A MATCHING RECORD AND WILL
OPTIONALLY INSERT THE RECORD IN THE CORRECT PLACE IN THE TABLE
OR DELETE AN EXISTING RECORD FROM THE TABLE.

    THREE PARAMETERS ARE PASSED TO THE ROUTINE -

 1. ADDRESS OF THE TABLE.
 2. ADDRESS OF THE INPUT RECORD.
 3. ADDRESS OF THE 'KEY CONTROL BLOCK'

  THE 'KEY CONTROL BLOCK' CONSISTS OF 4 BYTES -

1 & 2 - KEY POSITION IN BINARY (1ST = 1).
    3 - KEY LENGTH IN BINARY.
    4 - OPTION BYTE

  THE OPTION BYTE IS AS FOLLOWS -

  00.. ....   -   SEARCH FOR EQUAL MATCH.
  1... ....   -   INSERT RECORD IF NOT FOUND IN TABLE.
  .1.. ....   -   DELETE RECORD FROM TABLE.
  ..XX XXXX   -   RESERVED BITS.

    THE TABLE MUST START WITH TWO FULLWORDS -

 1. NUMBER OF ELEMENTS IN TABLE.
 2. LENGTH OF EACH ELEMENT.

  - AND MUST BE SORTED - IF THE HIGH ORDER BIT IS ON IN THE
    FIRST WORD THEN IT IS ASSUMED TO BE IN DESCENDING ORDER
    ELSE ASCENDING.

    A SORTED TABLE CAN BE CREATED BY JUST SETTING UP THE TWO
    FULLWORDS WITH THE FIRST CONTAINING 0.

  OUTPUT -

    REGISTER 1  POINTS TO AN ENTRY IN THE TABLE.
    REGISTER 15 CONTAINS A RETURN CODE AS FOLLOWS -

        0  -  EQUAL MATCH FOUND - REG 1 POINTS TO ENTRY.
        4  -  EQUAL MATCH FOUND - RECORD DELETED FROM TABLE.
        8  -  NO MATCH FOUND, REG 1 POINTS TO LAST ENTRY SCANNED.
       12  -  NO MATCH FOUND - RECORD INSERTED IN TABLE.
       16  -  KEY POSITION > ELEMENT LENGTH.
       20  -  KEY LENGTH > ELEMENT LENGTH.
       24  -  KEY POSN. + KEY LENGTH > ELEMENT LENGTH.


    WHEN AN ELEMENT IS DELETED THE REST ARE MOVED UP BUT THE END
  ONE IS NOT CLEARED AT ALL.
