./ ADD LIST=ALL,NAME=BEGIN
./ NUMBER NEW1=100,INCR=100
         MACRO
&NAME    BEGIN  &SAVE,&REGS=(14,12),&TCODE=,&BASE=12,&ID=*
         LCLA  &BASE2
         LCLC  &SAVE2
         AIF   ('&NAME' NE '').A1
SECT&SYSNDX CSECT DEFAULT CSECT NAME
         AGO   .A2
.A1      ANOP
&NAME    CSECT
.A2      ANOP
*        EQUREG
       EQUREG
         SAVE  &REGS,&TCODE,&ID
         AIF   (&BASE GE 3 AND &BASE LE 12).A3
         MNOTE 4,'INVALID BASE REGISTER . 12 SUBSTITUTED'
&BASE2   SETA  12
         AGO   .A4
.A3      ANOP
&BASE2   SETA  &BASE
.A4      BALR  &BASE2,0 ESTABLISH BASE REGISTER
         USING *,&BASE2
         AIF   ('&SAVE' NE '').A5
         CNOP  0,4
         B     *+76
SAVE&SYSNDX DC 18A(0)
&SAVE2   SETC  'SAVE&SYSNDX'
         AGO   .A6
.A5      ANOP
&SAVE2   SETC  '&SAVE'
.A6      ANOP
         ST    13,&SAVE2.+4 STORE CP'S SAA IN THIS HSA
         LR    15,13     REINDEX CP'S SAA
         LA    13,&SAVE2 INDEX THIS SA
         ST    13,8(,15)     STORE THIS SAA IN CP'S LSA
         MEND
./ ADD LIST=ALL,NAME=EQUREG
./ NUMBER NEW1=100,INCR=100
         MACRO
         EQUREG
         GBLB  &EQUREG
         AIF   (&EQUREG).ERROR
&EQUREG  SETB  1
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         MEXIT
.ERROR   MNOTE *,'EQUREG MACRO ALREADY ISSUED'
         MEND
./ ADD LIST=ALL,NAME=GTFDISK
./ NUMBER NEW1=100,INCR=100
         MACRO
&NAME    GTFDISK &DISK
 SPACE
&NAME    EQU   *
         L     R10,V&DISK             * R10 -> TABLE OF COUNTS PER CYL*
         MVC   HWD(2),CC              * ALIGN 'CC' OF MBBCCHHR        *
         LH    R9,HWD                 * INTO A REGISTER               *
         SLL   R9,2                   * TIMES 4 FOR OFFSET            *
         AR    R10,R9                 * CALCULATE LOCN IN TABLE       *
         L     R8,0(0,R10)            *                               *
         LA    R8,1(0,R8)             * *  AND INCREASE COUNT BY 1   **
         ST    R8,0(0,R10)            *                               *
         L     R8,CT&DISK             *    INCREASE COUNT OF          *
         LA    R8,1(0,R8)             **   DISK ACCESSES BY ONE      **
         ST    R8,CT&DISK             *                               *
         MVC   OUTCC1(2),OLD&DISK     *   BUILD                       *
         MVC   OUTCC2(2),HWD          *     UP                        *
         MVC   UCBID(4),CHAR&DISK     *       RECORD                  *
         MVC   OLD&DISK.(2),HWD       *   CHANGE LAST POSITION OF HEAD*
**       PUT   SYSUT2,OUTCC1          *   WRITE RECORD                *
 SPACE
         PUT   SYSUT2,OUTCC1          *                               *
 SPACE
         B     LOOP1                  *  GET ANOTHER RECORD           *
CHAR&DISK  DC    C'0&DISK'            * IDENTIFIER OF DEVICE          *
V&DISK     DC    V(TAB&DISK)          * ADDRESS OF TABLE              *
CT&DISK    DC    A(0)                 * ACCESS COUNT                  *
OLD&DISK   DC   AL2(419)                *  INITIAL VALUE OF 'FROM' CC *
 SPACE
         MEND
./ ADD LIST=ALL,NAME=GTFQ
./ NUMBER NEW1=100,INCR=100
         MACRO
         GTFQ  &DISK
 SPACE
         CLC   UCB,DISK&DISK          * IS THIS UCB OURS ?            *
         BE    D&DISK                 * BRANCH ON YES                 *
 SPACE
         MEND
./ ADD LIST=ALL,NAME=GTFARRAY
./ NUMBER NEW1=100,INCR=100
         MACRO
         GTFARRAY &DISK
 SPACE
TAB&DISK   CSECT
         DC    420A(0)
         MEND
./ ADD LIST=ALL,NAME=GTFTAB
./ NUMBER NEW1=100,INCR=100
         MACRO
         GTFTAB &DISK
 SPACE
         L     R10,V&DISK               * R10 -> DISK ARRAY TABLE
         LA    R9,404                 * R9 HAS # OF CYLS
         LA    R7,0                   * CURRENT CYL #
         MVC   HEAD1DEV,=C'&DISK'     * SET UP HEADING
PAGE&DISK  EQU *
**       PUT   SYSPRINT,HEAD1         * WRITE IT
 SPACE
         PUT   SYSPRINT,HEAD1
 SPACE
**       PUT   SYSPRINT,HEAD2         *
 SPACE
         PUT   SYSPRINT,HEAD2
 SPACE
         LA    R8,50                  * # OF LINES PER PAGE
LOOPY&DISK EQU   *
         L     R6,0(0,R10)            * GET COUNT FOR THAT CYLINDER
         CVD   R6,DWK                 *
         MVC   LINE1CT(10),MASK  * MOVE IN MASK                       *
         ED    LINE1CT(10),DWK+3
         CVD   R7,DWK                 *
         UNPK  LINE1CYL(3),DWK+6(2)   **  CYLINDER ADDRESS TO EBCDIC
         OI    LINE1CYL+2,X'F0'       *
**       PUT   SYSPRINT,LINE1         * WRITE LINE
 SPACE
         PUT   SYSPRINT,LINE1
 SPACE
         LA    R7,1(0,R7)             * INCREMENT CYLINDER ADDRESS
         LA    R10,4(0,R10)           * AND TABLE POINTER
         BCT   R9,LOOPX&DISK          * END OF THIS DISK ?
         MVC   TAILVOL,=C'&DISK'      * YES
**       PUT   SYSPRINT,TAIL          * WRITE TAIL RECORD
 SPACE
         PUT   SYSPRINT,TAIL
 SPACE
         B     XIT&DISK               * NEXT DISK - IF ANY
LOOPX&DISK EQU   *
         BCT   R8,LOOPY&DISK          * NO - END OF PAGE THEN ?
         B     PAGE&DISK              * YES - NEW PAGE ROUTINE
XIT&DISK   EQU   *                    *
 SPACE
         MEND
./ ADD LIST=ALL,NAME=GTFSUMMY
./ NUMBER NEW1=100,INCR=100
         MACRO
         GTFSUMMY &DISK
 SPACE
         L     R6,CT&DISK             * R6 HAS SIO COUNT TO DISK
         CVD   R6,DWK                 *
         MVC   SUM(10),MASK      * MOVE IN MASK                       *
         ED    SUM(10),DWK+3
         MVC   SUMUNIT,=C'&DISK'      * SET UP PRINTLINE
**       PUT   SYSPRINT,SUMLINE       * WRITE IT
 SPACE
         PUT   SYSPRINT,SUMLINE
 SPACE
         MEND
./ ADD LIST=ALL,NAME=GTFCONST
./ NUMBER NEW1=100,INCR=100
         MACRO
         GTFCONST &DISK
 SPACE
DISK&DISK  DC    X'0&DISK'
         MEND
./ ADD LIST=ALL,NAME=GTFREPT
./ NUMBER NEW1=100,INCR=100
         MACRO
&NAME    GTFREPT &DISK=,&TSTP=
.*
.*             MACRO TO EASE THE REDUCTION OF DISK MOVEMENT DATA
.*
         LCLA  &A,&B
.*
.*             INVOCATION :-
.*                            NAME     GTFREPT DISK=(150,151,...)
.*
.*             THIS WILL RESULT IN THE PRODUCTION OF CODE TO PRODUCE
.*
.*             1.   A REPORT ON THE # OF SIO TO EACH CYLINDER OF
.*
.*                  EACH SPECIFIED UCB
.*
.*             2.   A SUMMARY OF THE NUMBER OF SIO TO EACH UCB
.*
.*             3.   A FILE OF RECORDS CONTAININING  'FROM' AND 'TO'
.*
.*                  CYLINDER ADDRESS AND UCB IDENTIFIER
.*
.*
.*             OTHER USER MACROS INVOKED :-
.*
.*             BEGIN, EQUREG       SAVES ETC
.*
.*             GTFQ, GTFDISK, GTFSUMMY, GTFTAB, GTFARRAY, GTFCONST
.*
.*             ALL THE ABOVE SHOULD BE PROVIDED 'IN-STREAM'
.*
.*             DSECT 'SIOCOMP' IS USED TO PROVIDE ADDRESSABILITY TO
.*
.*             THE SIO COMPREHENSIVE RECORD
.*
.*
.*             ASSUMPTIONS :-
.*
.*           1.  THAT GTF HAS BEEN ENHANCOD TO PROVIDE THE FULL
.*
.*               DISK SEEK ADDRESS FROM THE UCB (MBBCCHHR) IN THE
.*
.*               FIRST TWO WORDS OF THE 5-WORD RQE FIELD. THE
.*
.*               REMAINDER OF THE FIELD IS FILLED WITH HEX'FFF...'
.*
.*               (THE VOLUME SERIAL NUMBER MAY BE SAVED IN THE
.*
.*             HEX 'FFF... ' PART OF THE FIELD)
.*
.*           2. THAT THE SIO RECORDS PROCESSED DO NOT HAVE A TIMESTAMP.
.*
.*              THIS MAY BE CIRCUMVENTED BY CODING TSTP=TIME AS AN
.*
.*              ADDITIONAL OPERAND OF THE GTFREPT MACRO. THIS WILL
.*
.*              GENERATE A DSECT WHICH ALLOWS FOR TIME STAMPS
         AIF   (N'&DISK GT 28).ERR1
.*                                       OF DISK ? ADDRESSING PROBLEMS
         TITLE 'ROUTINE TO PRODUCE GTF DISK ANALYSIS REPORT'
.*
         AIF   ('&NAME' EQ '').DGFAULT       NAME FIELD BLANK ?
.*
&NAME    BEGIN ,                   *** MACRO CALL ***
         AGO   .MIS1
.DGFAULT ANOP
         BEGIN ,                   *** MACRO CALL ***
.MIS1    ANOP
         EJECT
         LA    R3,EODAD .        * R3 -> EODAD ROUTINE (ADDRESSING)   *
         USING EODAD,R3
         LA    R4,REPORT2 .      * R4 -> SUMMARY ROUTINE (ADDRESSING) *
         USING REPORT2,R4
         LA    R2,SYSUT1         * ENSURE ADDRESSABILITY OF CONSTANTS *
         USING SYSUT1,R2
         LA    R11,AREA .        * R11 -> AREA                        *
         USING SIOCOMP,R11
         SPACE
         SPACE
         OPEN  (SYSUT1,,SYSUT2,(OUTPUT),SYSPRINT,(OUTPUT))
         SPACE
LOOP1    DS    0H .
         GET   SYSUT1,AREA .     * READ A RECORD                      *
         SPACE
***            FILTER OUT ALL BUT SIO COMPREHENSIVE RECORD          ***
         SPACE 2
         CLI   AREAID,TIMESTP .  * TIME STAMP ?                       *
         BE    LOOP1 .           * YES                                *
         CLI   AREAID,LOSTDTA1 . * LOST DATA - TYPE 1 ?               *
         BE    LOOP1 .           * YES                                *
         CLI   AREAID,LOSTDTA2 . * LOST DATA - TYPE 2 ?               *
         BE    LOOP1 .           * YES                                *
         CLI   AREAID,SIOC .     * SIO COMPREHENSIVE ?                *
         BNE   LOOP1 .           * NO                                 *
         CLC   AREAEID(2),SIOCEID .SIO EID ?                          *
         BNE   LOOP1 .           * NO                                 *
         CLC   CC(2),MINUS1      * IS CYLINDER ADDRESS X'FFFF' - IF   *
*                                  SO IT IS DUE TO RECORD BEING WRITTEN
*                                  WHICH WAS INITIALISED BY THE MOD TO*
*                                  GTF BUT NO DISK ADDRESS HAS BEEN   *
*                                  MOVED IN                           *
         BE    LOOP1 .           * YES - IGNORE IT                    *
         SPACE 2
SIOC     EQU   0 .               * SIO FORMAT ID                      *
TIMESTP  EQU   4 .               * TIME STAMP FORMAT ID               *
LOSTDTA1 EQU   5 .               * LOST DATA                          *
LOSTDTA2 EQU   6 .               *  FORMAT IDS                        *
         EJECT
***            INTERROGATE THE UCB FIELD FOR THE DESIRED UCBS       ***
         SPACE 2
&A       SETA  N'&DISK
&B       SETA  1
.LOOP001 ANOP
         AIF   (&B GT &A).END1
         GTFQ  &DISK(&B)       *** MACRO CALL ***
&B       SETA  &B+1
         AGO   .LOOP001
.END1    ANOP
         B     LOOP1             * NONE OF THOSE - GET ANOTHER RECORD *
         EJECT
***            PROCESS THE APPROPRIATE TABLE ENTRIES                ***
         SPACE 2
&B       SETA  1
.LOOP002 ANOP
         AIF   (&B GT &A).END2
D&DISK(&B)     GTFDISK &DISK(&B) * MACRO CALL ***
.*
&B       SETA  &B+1
         AGO   .LOOP002
.*
.END2    ANOP
         EJECT
***            END OF INPUT - PROCESS TABLES AND REPORT             ***
         SPACE 2
EODAD    DS    0H                *                                    *
&B       SETA  1
.LOOP003 ANOP
         AIF   (&B GT &A).END3
         GTFTAB &DISK(&B)      *** MACRO CALL ***
&B       SETA  &B+1
         AGO   .LOOP003
.END3    ANOP
         EJECT
***            PRINT SECOND REPORT                                  ***
         SPACE 2
REPORT2  DS    0H .              *                                    *
         SPACE 2
**       PUT   SYSPRINT,SUMHDG1  * WRITE A HEADING                    *
         SPACE
         PUT   SYSPRINT,SUMHDG1  * WRITE A HEADING                    *
         SPACE
**       PUT   SYSPRINT,SUMHDG2  * WRITE A HEADING                    *
         SPACE
         PUT   SYSPRINT,SUMHDG2  * WRITE A HEADING                    *
&B       SETA  1
.LOOP004 ANOP
         AIF   (&B GT &A).END4
         GTFSUMMY &DISK(&B)    *** MACRO CALL ***
&B       SETA  &B+1
         AGO   .LOOP004
.END4    ANOP
.*
         SPACE 4
***            CLOSE FILES AND RETURN                               ***
         SPACE 2
         CLOSE (SYSUT1,,SYSUT2,,SYSPRINT)
         SPACE
         L     R13,4(0,R13) .    * R13 -> OLD SAVE AREA               *
         LM    R14,R12,12(R13) . * RESTORE REGISTERS                  *
         LA    R15,0 .           * RETURN CODE                        *
         BR    R14 .             * BACK TO SCP                        *
         EJECT
***            CONSTANTS ETC                                        ***
         SPACE 2
**SYSUT1 DCB   DDNAME=SYSUT1,DSORG=PS,MACRF=GM,EODAD=EODAD
         SPACE
SYSUT1   DCB   DDNAME=SYSUT1,DSORG=PS,MACRF=GM,EODAD=EODAD
         SPACE
**SYSUT2 DCB   DDNAME=SYSUT2,DSORG=PS,MACRF=PM,LRECL=8,BLKSIZE=2000,   *
               RECFM=FB
         SPACE
SYSUT2   DCB   DDNAME=SYSUT2,DSORG=PS,MACRF=PM,LRECL=8,BLKSIZE=2000,   *
               RECFM=FB
         SPACE
**SYSPRINT DCB DDNAME=SYSPRINT,MACRF=PM,DSORG=PS,LRECL=121,BLKSIZE=1210*
               ,RECFM=FBA
         SPACE
SYSPRINT DCB   DDNAME=SYSPRINT,MACRF=PM,DSORG=PS,LRECL=121,BLKSIZE=1210*
               ,RECFM=FBA
         EJECT
DWK      DS    D .               * WORK AREA                          *
HWD      DS    H .               * ANOTHER WORK AREA                  *
MINUS1   DC    H'-1' .           * COMPARAND USED TO FILTER OUT SIO   *
*                                * COMPREHENSIVES WHICH ARE 'BAD'     *
*                                                                     *
***            OUTPUT RECORD ON SYSUT2                              ***
*                                                                     *
OUTCC1   DS    CL2 .             * FROM  CYLINDER                     *
OUTCC2  DS    CL2 .              * TO    CYLINDER                     *
UCBID    DS    CL4 .             * UCB IDENTITY                       *
*
         DC    12C' ' .          * SPARE AREA FOR SM-023 (SHORT RCDS) *
MASK     DC    X'40',7X'20',X'2120' * EDIT PATTERN                    *
*                                                                     *
***            HEADINGS AND PRINTLINES                              ***
*                                                                     *
HEAD1    DC    C'1',10C' ',C' CYLINDER ACCESS COUNT FOR DEVICE '
HEAD1DEV DS    CL3
         DC    84C' '
HEAD2    DC    C'-',10C' ',C'CYLINDER #',10C' ',C'SIO COUNT',80C' '
LINE1    DC    14C' '
LINE1CYL DS    CL3
         DC    13C' '
LINE1CT  DS    CL10              * SIO COUNT                          *
         DC    85C' '
TAIL     DC    C'-',10C' ',C' END OF REPORT FOR DEVICE '
TAILVOL  DS    CL3
         DC    81C' '
SUMHDG1  DC    C'1',10C' ',C'TOTALS BY DISK            ',84C' '
SUMHDG2  DC    C'-',20C' ',C' DISK UNIT',10C' ',C'TOTAL ACCESSES'
         DC    70C' '
SUMLINE  DC    C' ',23C' '
SUMUNIT  DS    CL3
         DC    15C' '
SUM      DS    CL10
         DC    70C' '
SIOCEID  DC    X'7000'           * EID FOR SIO COMPREHENSIVE          *
         EJECT
***            CONSTANTS FOR GTF UCB ADDRESSES                      ***
         SPACE 2
&B       SETA  1
.LOOP005 ANOP
         AIF   (&B GT &A).END5
         GTFCONST &DISK(&B)    *** MACRO CALL ***
&B       SETA  &B+1
         AGO   .LOOP005
.END5    ANOP
         SPACE 4
         LTORG
AREA     DS    CL200 .           * RECORDS READ IN HERE               *
         EJECT
***            DSECT FOR SIO COMPREHENSIVE RECORD                   ***
         SPACE 2
SIOCOMP  DSECT
RDW      DS    CL4 .             * RDW                                *
         DS    CL1               * ID                                 *
AREAID   DS    CL1 .             * ID TYPE                            *
AREAEID  DS    CL2 .             * EID                                *
         AIF   ('&TSTP' NE 'TSTP').NOTIME                             *
         DS    CL12 .            * TIME STAMP                         *
.NOTIME  ANOP
         DS    CL8 .             * JOBNAME                            *
         DS    CL4 .             * RQE TCB                            *
         DS    CL2 .             * SIO COMPLETION CODE                *
UCB      DS    CL2 .             * UCB IN HEX                         *
         DS    CL4 .             * CAW                                *
         DS    CL8 .             * CSW                                *
M        DS    CL1 .             * DISK                               *
BB       DS    CL2 .             *  SEEK                              *
CC       DS    CL2 .             *   ADDRESS                          *
HH       DS    CL2 .             *    ADDED BY                        *
R        DS    CL1 .             *     STOCK EXCHANGE MOD             *
VOLSERNO DS    CL6 .             * VOL SERIAL # ADDED IN SAME WAY     *
         EJECT
***            TABLES FOR CYLINDER ACCESS COUNT
***            - ONE FOR EACH DISK
         SPACE 2
&B       SETA  1
.LOOP006 ANOP
         AIF   (&B GT &A).END6
         GTFARRAY &DISK(&B)    *** MACRO CALL ***
&B       SETA  &B+1
         AGO   .LOOP006
.ERR1    ANOP
         MNOTE 12,'*** MORE THAN 28 SUB-OPERANDS OF DISK ***'
         MNOTE 12,'*** ADDRESSING PROBLEMS WILL ARISE ***'
         MEXIT
.END6    ANOP
         MEND
./ ADD LIST=ALL,NAME=PRINTCC
./ NUMBER NEW1=100,INCR=100
 TITLE 'GTF DISK ARM MOVEMENT ANALYSIS - BY BASCOMB LAMAR LUNSFORD - 5 S
               STRING BANJO PLAYER EXTRODINAIRE'
PRINTCC  BEGIN
         LA    R1,SORTLIST              INDEX PARAMETER LIST
         LINK  EP=SORT                  & LINK SORT
         OPEN  (RECORDS,,PRINTDCB,(OUTPUT),SYSUT2,(OUTPUT))
GET      GET   RECORDS,RECAREA          GET A RECORD
         CLC   UCBADDR,RECAREA+5        HAS DEVICE ADDRESS CHANGED ?
         BE    SKIP                     NO - SKIP ON
         CLC   UCBADDR,=3C' '           1ST TIME THRU ?
         BE    *+8                      DON'T PRINT TOTALS
         BAL   R10,PRINTOT
         MVC   UCBADDR,RECAREA+5        SAVE NEW DEVICE ADDRESS
         PUT   PRINTDCB,HEADER          SKIP CHAN 1 & PRINT HEADER
         ZAP   LINCOUNT,=P'450'         RESET LINE COUNT
         MVC   CCSAV(4),RECAREA         SAVE CC1 & CC2
SKIP     CLC   CCSAV(4),RECAREA         HAS CC1/CC2 CHANGED ?
         BE    ADD                      NO - JUST ADD 1 TO COUNT
         BAL   R10,PRINTOT              PRINT THE TOTALS
ADD      AP    COUNT,=P'1'              ADD 1 TO COUNT
         B     GET                      & LOOP BACK
         SPACE 2
PRINTOT  LH    R1,CCSAV                 PICK UP CC1
         MVC   UCB+1(3),UCBADDR    UCB ADDRESS
         MVC   TIMES(4),COUNT      MOVE # TIMES
         MVC   CC1(4),CCSAV        MOVE FROM & TO
         LH    R1,CCSAV            FROM
         LH    R2,CCSAV+2          TO
         CR    R1,R2               EQUAL ?
         BE    EQ                  YES
         BL    ALOW                R1 LOW
         SR    R1,R2               R1 HIGH
         STH   R1,MOVED            STORE MOVED DISTANCE
         B     OUT                 WRITE
ALOW     DS    0H
         SR    R2,R1               CALCULATE MOVEMENT
         STH   R2,MOVED            SAVE IN RCD
         B     OUT                 WRITE
EQ       DS    0H
         XC    MOVED(2),MOVED      CLEAR FIELD
         SPACE
OUT      PUT   SYSUT2,CC1
         LH    R1,CCSAV            RESTORE R1
         CVD   R1,DWORD                 GET IN DECIMAL
         UNPK  PLINE+1(3),DWORD+6(2)    UNPACK TO EBCDIC
         OI    PLINE+3,X'F0'            ENSURE ZONE
         LH    R1,CCSAV+2               REPEAT
         CVD   R1,DWORD                 FOR
         UNPK  PLINE+8(3),DWORD+6(2)    CC2
         OI    PLINE+10,X'F0'
         MVC   PLINE+14(8),MASK         MOVE IN MASK
         ED    PLINE+14(8),COUNT        EDIT TOTAL COUNT
         PUT   PRINTDCB,PLINE           PRINT THE RESULTS
         ZAP   COUNT,=P'0'              RESET COUNT
         MVC   CCSAV,RECAREA            SAVE NEXT CC1/CC2
         AP    LINCOUNT,=P'10'          ADD TO LINE COUNT
         BNOR  R10                      EXIT IF NEW PAGE NOT NEEDED
         PUT   PRINTDCB,=CL22'1'        ELSE SKIP NEW PAGE
         ZAP   LINCOUNT,=P'450'         RESET LINE COUNT
         BR    R10                      & RETURN
         SPACE 2
EODAD    BAL   R10,PRINTOT
         CLOSE (PRINTDCB,,RECORDS)
         CLOSE (SYSUT2)
         L     R13,4(,R13)
         RETURN (14,12),RC=0
         EJECT
*
*  WORKING  STORAGE  SECTION
*
CC1      DS    CL2                 FROM CYL
CC2      DS    CL2                 TO CYL
MOVED    DS    CL2                 COUNT OF CYLS MOVED
TIMES    DS    CL4                 FREQUENCY
UCB      DC    4C'0'
CCSAV    DC    XL4'0'
DWORD    DS    D
RECAREA  DS    CL8
MASK     DC    X'4020202020202120'
COUNT    DC    PL4'0',XL2'0'
HEADER   DC    CL22' '
         ORG   HEADER
         DC    C'1DISK DEVICE ='
UCBADDR  DC    CL3' '
         ORG
LINCOUNT DC    P'450'
PLINE    DC    CL22' XXX -> XXX    XXXXXXX'
         CNOP  0,8
SORTLIST DC    X'80',AL3(ADLST),XL2'0'
ADLST    DC    AL2(ENLIST-(ADLST+2))
         DC    A(SORTCARD,SORTCDEN,RECARD,RECEND,0,0)
         DC    A(1024*60)
ENLIST   DC    0A(0)
SORTCARD DC    C' SORT FIELDS=(5,4,A,1,2,A,3,2,A),FORMAT=BI,SIZE=E5000'
SORTCDEN DC    C' '
RECARD   DC    C' RECORD LENGTH=8,TYPE=F'
RECEND   DC    C' '
         SPACE 2
RECORDS  DCB   DSORG=PS,RECFM=FB,MACRF=(GM),DDNAME=SORTOUT,LRECL=8,    X
               EODAD=EODAD
PRINTDCB DCB   DSORG=PS,RECFM=FA,MACRF=(PM),DDNAME=PRINT,LRECL=22,     X
               BLKSIZE=22
SYSUT2   DCB   DDNAME=SYSUT2,DSORG=PS,MACRF=PM,LRECL=14,BLKSIZE=2800,  *
               RECFM=FB
         LTORG
         END
./ ADD LIST=ALL,NAME=REPORT
./ NUMBER NEW1=100,INCR=100
         MACRO
&NAME    PRUNT  &FLD,&TARG
&NAME    LH    R1,&FLD
         CVD   R1,DWORK
         OI    DWORK+7,15
         UNPK  &TARG.(3),DWORK+6(2)
         SPACE
         MEND
         EJECT
REPORT   BEGIN
         EJECT
***      ROUTINE TO PRINT HEAD MOVEMENT AND FREQUENCY               ***
***      DRIVEN BY CONTROL CARD ON SYSIN                            ***
***      FORMAT :-                                                  ***
***            COL 1   'A'    HEAD MOVEMENT REPORT                  ***
***                   ANY OTHER    FREQUENCY REPORT                 ***
***                    LETTER                                       ***
***            COLS 2-7       MINIMUM VALUE ACCEPTED FOR            ***
***                           THE REPORT TO BE MADE                 ***
***                                                                 ***
***            E.G.  A000100  WILL REPORT ON ANY HEAD MOVEMENT      ***
***                           OF 100 CYLS OR GREATER                ***
***                                                                 ***
***            AND   X000050  WILL REPORT ON ANY HEAD MOVEMENTS     ***
***                           THAT OCCURRED 50 OR MORE TIMES        ***
         SPACE 4
         OPEN  (SYSIN,,SYSUT1,,SYSPRINT,(OUTPUT))
         SPACE
         GET   SYSIN,DATA
         SPACE
         LA    R11,AREA            R11 -> DATA FROM SYSUT1
         USING RCD,R11
         GET   SYSUT1,AREA
         MVC   LAST(4),UCB         MOVE IN UCB
         MVC   DRIVE(3),UCB+1      MOVE IN HEADER
         CLI   DATA,C'A'          'A'TYPE REPORT ?  - HEAD MOVEMENT ?
         BE    HMVMT               YES
         BAL   R8,FREQHDG          NO - ASSUME FREQUENCY
         PACK  DWORK(8),DATA+1(6)  MINIMUM FREQUENCY FROM CARD
         MVC   COMP(4),DWORK+4     MOVE IN COMPARAND
         B     MISGET1
LOOP1    DS    0H
         GET   SYSUT1,AREA         RECORD FROM SYSUT1
         SPACE
         CLC   LAST(4),UCB          SAME UCB AS BEFORE
         BE    SAME1
         XC    LINECT(2),LINECT         CLEAR LINE COUNT
         MVC   LAST(4),UCB
         MVC   DRIVE(3),UCB+1      RE- INITIALISE HEADING
         BAL   R8,FREQHDG
SAME1    DS    0H
MISGET1  DS    0H
         CP    #TIMES(4),COMP      HAS IT MOVED ENOUGH TIMES ?
         BL    LOOP1               NO - NEXT RECORD
         LA    R8,LOOP1            YES - SET UP R8
WRITE    DS    0H
         PRUNT CC1,CC1LINE
         PRUNT CC2,CC2LINE
         PRUNT #CYLS,CYLSLINE
         MVC   TIMELINE(8),PATTERN PATTERN TO PRINTLINE
         ED    TIMELINE(8),#TIMES  PRINT # OF MOVEMENTS
         SPACE
         PUT   SYSPRINT,LINE
         SPACE
         LH    R1,LINECT           INCREMENT
         LA    R1,1(0,R1)           LINE
         STH   R1,LINECT             COUNT
         CH    R1,=H'50'           TIME FOR NEW PAGE ?
         BNE   NOHDG               NO
         SPACE
         PUT   SYSPRINT,HD1
         SPACE
         PUT   SYSPRINT,HD2
         SPACE
         XC    LINECT(2),LINECT    CLEAR LINE COUNT
NOHDG    DS    0H
         BR    R8
         EJECT
HMVMT    DS    0H
         BAL   R8,MVMTHDG          WRITE HEADINGS
         PACK  DWORK(8),DATA+1(6)  PACK MINIMUM VALUE
         CVB   R10,DWORK
         B     MISGET2
LOOP2    DS    0H
         GET   SYSUT1,AREA
         SPACE
         CLC   LAST(4),UCB          SAME UCB AS BEFORE
         BE    SAME2
         XC    LINECT(2),LINECT         CLEAR LINE COUNT
         MVC   LAST(4),UCB
         MVC   DRIVE(3),UCB+1      RE- INITIALISE HEADING
         BAL   R8,MVMTHDG          NEW HEADING PLEASE
SAME2    DS    0H
MISGET2  DS    0H
         CH    R10,#CYLS           DID IT MOVE FAR ENOUGH ?
         BH    LOOP2               NO
         LA    R8,LOOP2            YES - SET UP R8 FOR RETURN
         B     WRITE               WRITE RECORD
         SPACE
FREQHDG  DS    0H
         MVC   HD1TYPE(9),=C'FREQUENCY' SET UP TITLE
         MVC   HD1NUM(6),DATA+1    MINIMUM VALUE FROM SYSIN
         SPACE
HDRITE   PUT   SYSPRINT,HD1
         SPACE
         PUT   SYSPRINT,HD2
         SPACE
         BR    R8
         SPACE 3
MVMTHDG  DS    0H
         MVC   HD1TYPE(9),=C'MOVEMENT '  SET UP TITLE
         MVC   HD1NUM(6),DATA+1    MINIMUM VALUE
         B     HDRITE              WRITE HEADINGS
         EJECT
END      DS    0H
         CLOSE (SYSPRINT,,SYSUT1,,SYSIN)
         SPACE
         L     R13,4(0,R13)        R13 -> OLD SAVE AREA
         LM    R14,R12,12(R13)     RESTORE REGISTERS
         LA    R15,0               RETURN CODE
         BR    R14                 BACK TO O.S.
         SPACE 4
***                 CONSTANTS ETC                                   ***
         SPACE
        PRINT NOGEN
DWORK    DS    D                   UBIQUITOUS DOUBLEWORD
DATA     DS    CL80                DATA IN HERE
COMP     DS    CL4                 COMPARAND FOR FREQUENCY
PATTERN  DC    X'4020202020202120' PATTERN FOR PRINTLINE
LINECT   DC    H'0'                LINE COUNT
AREA     DS    CL10                RECORDS READ IN HERE
UCB      DS    CL4
HD1      DC    C'1          DISK MOVEMENT REPORT  -  MINIMUM '
HD1TYPE  DS    CL9
         DC    C' REPORTED = '
HD1NUM   DS    CL6
         DC    10C' '
DRIVE    EQU   HD1+3
HD2      DC    C'-          FROM CYL    TO CYL    # CYLS MOVED'
         DC    C'    # OF TIMES                      '
LINE     DC    C'              '
CC1LINE  DS    CL3
         DC    C'       '
CC2LINE  DS    CL3
         DC    C'           '
CYLSLINE DS    CL3
         DC    9C' '
TIMELINE DS    CL8
         DC    23C' '
LAST    DC    4C' '
SYSUT1   DCB   DDNAME=SYSUT1,MACRF=GM,DSORG=PS,EODAD=END
SYSIN    DCB   DDNAME=SYSIN,MACRF=GM,DSORG=PS,LRECL=80,RECFM=F,        *
               BLKSIZE=80
SYSPRINT DCB   DDNAME=SYSPRINT,MACRF=PM,DSORG=PS,LRECL=081,BLKSIZE=1620*
               ,RECFM=FBA
RCD      DSECT
CC1      DS    CL2                 TO CYL
CC2      DS    CL2                 FROM CYL
#CYLS    DS    CL2                 # CYLS TRAVERSED
#TIMES   DS    CL4                 # OF TIMES THIS OCCURRED
         END
./ ADD LIST=ALL,NAME=GTFSVC1
./ NUMBER NEW1=100,INCR=100
GTFSVC   BEGIN
 SPACE
         OPEN  (SYSUT1,,SYSUT2,(OUTPUT),SYSPRINT,(OUTPUT))
 SPACE
LOOP     GET   SYSUT1,AREA
 SPACE
         XC    OUTRCD(30),OUTRCD   CLEAR O/P AREA
**             FILTER OUT ALL BUT SVC COMPREHENSIVE RECORDS          **
         CLI   AREA+5,TIMESTP      TIME STAMP ?
         BE    LOOP                YES
         CLI   AREA+5,LOSTDTA1     LOST DATA ?
         BE    LOOP                YES
         CLI   AREA+5,LOSTDTA2     LOST DATA ?
         BE    LOOP                YES
         CLI   AREA+5,SVCFID       SVC FID ?
         BNE   LOOP                NO
         CLC   AREA+6(2),SVCEID    SVC EID ?
         BNE   LOOP                NO
LOSTDTA2 EQU   6
LOSTDTA1 EQU   5
TIMESTP  EQU   4
SVCFID   EQU   1
         LA    R11,AREA            R11 -> AREA
         XR    R10,R10                * CLEAR R10
         LA    R9,SVCTAB              * R9 -> TABLE
         USING SVCCOMP,R11
         IC    R10,SVCNO              * SVC #
         SLL   R10,2                  * TIMES 4
         AR    R9,R10                 * GET TABLE OFFSET
         L     R8,0(0,R9)             *  UPDATE TABLE
         LA    R8,1(0,R8)             **   ENTRY AND
         ST    R8,0(0,R9)             *      STORE BACK
         CLI   SVCNO,SIX              * LINK ?
         BE    SVC6                   * YES
         CLI   SVCNO,SEVEN            * XCTL ?
         BE    SVC7                   * YES
         CLI   SVCNO,EIGHT            * LOAD ?
         BE    SVC8                   * YES
         CLI   SVCNO,EIGHTEEN         * BLDL ?
         BE    SVC18                  * YES
         CLI   SVCNO,ATTACH           * ATTACH ?
         BNE   LOOP                   * NO
         B     LOOP
SVC18    EQU   *
         MVC   RECID(1),SVCNO      SVC #
         SPACE
         DROP  R11
         USING SVC18DS,R11
         SPACE
         XR    R7,R7               CLEAR R7
         IC    R7,VARLENG          R7 HAS LENGTH OF VARIABLE AREA
         CH    R7,=H'8'            FIND ?
         BE    FIND                YES
         MVC   MODNAME(8),BLDLMOD  NO - MUST BE BLDL
         MVI   MODNAME+8,C'B'      INDICATE BLDL
 SPACE
         PUT   SYSUT2,OUTRCD
 SPACE
         XC    OUTRCD,OUTRCD       CLEAR FIELD
         B     LOOP
FIND     DS    0H
         MVC   MODNAME(8),FINDMOD  MOVE IN MEMBER NAME
         MVI   MODNAME+8,C'F'      INDICATE FIND
 SPACE
         PUT   SYSUT2,OUTRCD
 SPACE
         XC    OUTRCD,OUTRCD       CLEAR FIELD
         B     LOOP
SVC6     EQU   *
SVC7     EQU   *
         DROP  R11
         USING     SVCCOMP,R11
         MVC   RECID(1),SVCNO      MOVE SVC # FOR ID
         DROP  R11
         USING SVC67DS,R11
         MVC   MODNAME(8),PGMNM    EP/DE ENTRY
         B     WRITE               WRITE RECORD
SVC8     EQU   *
         DROP  R11
         USING SVCCOMP,R11
         MVC   RECID(1),SVCNO      MOVE IN SVC # FOR ID
         USING SVC8DS,R11
         MVC   MODNAME(8),PGMNAME  EP/DE ENTRY
         B     WRITE               WRITE RECORD
         DROP  R11
WRITE    EQU   *
 SPACE
         PUT   SYSUT2,OUTRCD
 SPACE
         XC    OUTRCD,OUTRCD       CLEAR O/P AREA
         B     LOOP                GET ANOTHER RECORD
END      LA    R9,SVCTAB           R9 -> TABLE
         LA    R8,0                1ST SVC #
         BAL   R10,SVCPAGE              PRINT HEADINGS
SVCLOOP  CLC   0(4,R9),ZEROS       ANY SVC XX ISSUED ?
         BE    MISSOUT       NO
         L     R6,0(0,R9)          YES
         CVD   R6,DWORK            CONVERT
         MVC   SVCT(8),MASK1     * MOVE IN EDIT PATTERN               *
         ED    SVCT(8),DWORK+4   * EDIT IN SVC COUNT                  *
         CVD   R8,DWORK            CONVERT
         MVC   SVC#(4),MASK2     * MOVE IN EDIT PATTERN               *
         ED    SVC#(4),DWORK+6   * EDIT IN SVC #                      *
         PUT   SYSPRINT,SVCLINE
         AP    PCOUNT,=P'10'            ADD TO LINE COUNT
         BNO   *+8                      PRINT HEADINGS IF NECESSARY
         BAL   R10,SVCPAGE
MISSOUT  LA    R8,1(0,R8)          NEXT SVC #
         CH    R8,TWO56            IS THAT ALL ?
         BE    XIT                 YES
         LA    R9,4(0,R9)          NO - POINT TO NEXT SVC COUNT
         B     SVCLOOP
XIT      EQU   *
         CLOSE (SYSPRINT,,SYSUT1,,SYSUT2)
         L     R13,4(0,R13)        R13 -> OLD SAVE AREA
         LM    R14,R12,12(R13)     RESTORE REGS
         LA    R15,0               RETURN CODE
         BR    R14                 RETURN
 SPACE
SVCPAGE  PUT   SYSPRINT,HEAD1
 SPACE
         PUT   SYSPRINT,HEAD2
         ZAP   PCOUNT,=P'500'           RESET LINE COUNT
         BR    R10
         EJECT
***      CONSTANTS ETC                                              ***
         SPACE 3
         PRINT NOGEN
SYSPRINT DCB   DDNAME=SYSPRINT,MACRF=PM,DSORG=PS,LRECL=121,RECFM=FBA,  *
               BLKSIZE=1210
SYSUT2   DCB   DDNAME=SYSUT2,MACRF=PM,DSORG=PS,LRECL=30,BLKSIZE=1800,  *
               RECFM=FB
SYSUT1   DCB   DDNAME=SYSUT1,MACRF=GM,DSORG=PS,EODAD=END
*
PCOUNT   DS    PL2
DWORK    DS    D
MASK1    DC    X'40',5X'20',X'2120' * EDIT PATTERN                    *
MASK2    DC    X'40202120'       * EDIT PATTERN                       *
SVCTAB   DC    256A(0)             SVC TABLE
SIX      EQU   6                   LOAD
SEVEN    EQU   7                   XCTL
EIGHT    EQU   8                   LINK
EIGHTEEN EQU   18                  BLDL
ATTACH   EQU   42                  ATTACH
SVCEID   DC    X'0100'             EID FOR SVC COMPREHENSIVE RECORDS
OUTRCD   DS    0CL30         O/P RECORD FOR SUBSEQUENT ANALYSIS
RECID    DS    CL1                 SVC #
MODNAME  DS    CL8                 EP /DE ENTRY
FILLA    DS    CL21                SPARE
HEAD1    DC    C'1',10C' ',C'FREQUENCY OF SVC LOADS BY SVC NUMBER    '
         DC    70C' '
HEAD2    DC    C'-',22C' ',C' SVC  #   ',13C' ',C'  COUNT   ',70C' '
SVCLINE  DC    24C' '
SVC#     DS    CL4               * SVC # GOES HERE                    *
         DC    17C' '
SVCT     DS    CL8               * SVC COUNT GOES HERE                *
         DC    69C' '
ZEROS    DC    A(0)
TWO56    DC    H'256'
AREA     DS    CL200               RECORDS READ IN HERE
*
OPENTEST EQU   *
SVCCOMP  DSECT
RDW      DS    CL4
         DS    CL2                 RCD ID, FORMAT ID
         DS    CL2                 EID
         DS    CL8                 JOBNAME
         DS    CL4                 TCB
         DS    CL3                 PSW
SVCNO    DS    CL1                 SVC # IN OLD PSW
SVC67DS  DSECT
         DS    CL4                 RDW
         DS    CL4                 IDS & EID
*                                  NO TIMESTAMP ASSUMED
         DS     CL8                JOBNAME
         DS    CL4                 OLD TCB
         DS    CL8                 OLD PSW
         DS    CL8                 RB NAME
         DS    CL12                REGS 15,0,1
         DS    CL8                 PARAMETERS
PGMNM    DS    CL8                 EP/DE NAME FOR LINK,XCTL
SVC8DS   DSECT
         DS    CL4                 RDW
         DS    CL4                 IDS & EID
*                                  NO TIMESTAMP ASSUMED
         DS     CL8                JOBNAME
         DS    CL4                 OLD TCB
         DS    CL8                 OLD PSW
         DS    CL8                 RB NAME
         DS    CL12                REGS 15,0,1
PGMNAME  DS    CL8                 EP/DE NAME FOR LOAD
*
SVC18DS  DSECT
         DS    CL4                 RDW
         DS    CL4                 1DS AND EID
*                                  NO TIMESTAMP ASSUMED
         DS    CL8                 JOBNAME
         DS    CL4                 OLD TCB
         DS    CL8                 OLD PSW
         DS    CL8                 RBNAME
         DS    CL12                REGS 15,0,1
VARLENG  DS    CL1                 LENGTH OF REST (MAX = 40)
BLDLDATA DS    0CL4                DATA STARTS HERE
BLDL#    DS    CL2                 # OF ENTRIES
BLDLENG  DS    CL2                 LENGTH OF EACH ENTRY
BLDLMOD  DS    CL8                 MODULE NAME IN BLDL PARM LIST
         ORG   BLDLDATA
FINDMOD  DS    CL8                 MODULE NAME FOR FIND
         END
./ ADD LIST=ALL,NAME=GTFSVC2
./ NUMBER NEW1=100,INCR=100
         MACRO
&NAME    INCR  &FIELD
&NAME    DS    0H
         L     R2,&FIELD           LOAD COUNT
         LA    R2,1(0,R2)          INCREMENT BY 1
         ST    R2,&FIELD           STORE BACK
         SPACE
         MEND
         MACRO
         SUMMY &A,&B
         SPACE
         L     R2,&A               R2 HAS COUNT IN BINARY
         CVD   R2,DWORK            INTO DECIMAL
         MVC   &B.(10),MASK2     * EDIT PATTERN                       *
         ED    &B.(10),DWORK+3   * EDIT IN COUNT                      *
         SPACE
         MEND
         MACRO
         CLEAR &CT
         XC    &CT.(4),&CT         SET FIELD TO ZERO
         MEND
         EJECT
SVCANAL  BEGIN
         EJECT
***            ROUTINE TO ANALYSE LINK, LOAD & XCTL ACTIVITY        ***
         SPACE 2
***            ASSUMPTIONS  SYSUT1 IS SORTED 30 BYTE RECORDS -      ***
***            MAPPED BY DSECT 'REC'                                ***
***            SORTED BY MODULE NAME & SVC CALL WITHIN MODULE NAME  ***
         SPACE 2
         OPEN  (SYSUT1,,SYSPRINT,(OUTPUT))
         SPACE
         LA    R11,AREA            R11 -> INPUT RCD
         USING REC,R11
         SPACE
LOOP     GET   SYSUT1,AREA         GET ONE
         SPACE
         CLC   LAST(8),BLANKS      1ST RECORD ?
         BNE   OHREALLY
         MVC   LAST(8),MODULE  *** HOW ABOUT INITIALISING 'LAST' MIKE ?
         B     HDG
OHREALLY DS    0H
         CLC   LAST(8),MODULE      NO - SAME MODULE ?
         BNE   EOM                 NO - WRITE TOTALS FOR PREVIOUS ONE
TEST     CLI   RECID,6             YES - ISSUED BY SVC 6 ?
         BE    SVC6                YES
         CLI   RECID,7             NO - ISSUED BY SVC 7 ?
         BE    SVC7                YES
         CLI   RECID,8             NO - ISSUED BY SVC 8 ?
         BE    SVC8                YES
         CLI   RECID,18            BLDL
         BE    SVC18             * YES
         INCR  NOT678              COUNT OF RECORDS NOT SVC 6,7,8
         B     LOOP                ANOTHER RECORD
         SPACE 2
SVC6     INCR  SVC6CT              THIS MODULE VIA SVC 6
         INCR  THISMOD             THIS MODULE
         INCR  TOT678              TOTAL MODULES
         INCR  TOT6                TOTAL SVC 6
         B     LOOP                ANOTHER RECORD
         SPACE 2
SVC7     INCR  SVC7CT              THIS MODULE VIA SVC 7
         INCR  THISMOD             THIS MODULE
         INCR  TOT678
         INCR  TOT7
         B     LOOP
         SPACE 2
SVC8     INCR  SVC8CT              THIS MODULE VIA SVC 8
         INCR  THISMOD             THIS MODULE
         INCR  TOT678              TOTAL MODULES
         INCR  TOT8                TOTAL SVC 8
         B     LOOP                ANOTHER RECORD
SVC18    INCR  SVC18CT             COUNT OF SVC 18 FOR THIS MODULE
         INCR  THISMOD             TOTAL FOR THIS MODULE
         INCR  TOT678              TOTAL SUCS 6+7+8+18
         INCR  TOT18               TOTAL SVC 18
         B     LOOP                ANOTHER RECORD
         EJECT
EOM      DS    0H
         MVC   MNM(8),LAST         MODULE NAME TO PRINTLINE
         SUMMY SVC6CT,TOTSVC6      CALLS VIA SVC 6
         SUMMY SVC7CT,TOTSVC7      CALLS VIA SVC 7
         SUMMY SVC8CT,TOTSVC8      CALLS VIA SVC 8
         SUMMY SVC18CT,TOTSVC18    SVC 18 TOTAL FOR THIS MODULE
         SUMMY THISMOD,TOTALMOD    TOTAL CALLS FOR THIS MODULE
         PUT   SYSPRINT,LINE
         INCR  LINECT              UP THE LINE COUNT
         CLEAR SVC6CT              COUNT SET TO ZERO
         CLEAR SVC7CT              COUNT SET TO ZERO
         CLEAR SVC8CT              COUNT SET TO ZERO
         CLEAR SVC18CT             SET TO ZERO
         CLEAR THISMOD                  *** DONT FORGET THIS ONE MIKE
         MVC   LAST(8),MODULE      TRANSFER NEW NAME TO BUFFER
         CLC   LINECT(4),=F'50'    END OF PAGE ?
         BE    NEWPAGE             YES
         B     TEST                NO - TEST THIS RECORD FOR SVC 6,7,8
         EJECT
NEWPAGE  DS    0H
         CLEAR LINECT              LINE COUNT TO ZERO
HDG      DS    0H
         BAL   R3,PRT              WRITE HEADINGS
         B     TEST                TEST THIS RECORD
         SPACE 2
PRT      DS         0H
         PUT   SYSPRINT,HD1        HEADING 1
         PUT   SYSPRINT,HD2        HEADING 2
         BR    R3                  RETURN
         SPACE 3
END      DS    0H
         MVC   MNM(8),LAST         LAST MODULE NAME
         SUMMY SVC6CT,TOTSVC6      CALLS VIA SVC 6
         SUMMY SVC7CT,TOTSVC7      CALLS VIA SVC 7
         SUMMY SVC8CT,TOTSVC8      CALLS VIA SVC 8
         SUMMY SVC18CT,TOTSVC18    TOTAL SVC 18 FOR THIS MODULE
         SUMMY THISMOD,TOTALMOD    TOTAL INVOCATIONS FOR THIS MODULE
         PUT   SYSPRINT,LINE       WRITE OUT LAST RECORD
         SUMMY TOT6,TOT6A          COUNT OF SVC 6
         SUMMY TOT7,TOT7A          COUNT OF SVC 7
         SUMMY TOT8,TOT8A          COUNT OF SVC 8
         SUMMY TOT18,TOT18A        TOTAL SVC 18 OVERALL
         PUT   SYSPRINT,TOTLINE
         SPACE
         SUMMY TOT678,ALLMODS      TOTAL SVC 6+7+8
         SUMMY NOT678,OTHERS       SVCS NOT 6,7,8
         PUT   SYSPRINT,TAIL       TRAILER LINE
         CLOSE (SYSUT1,,SYSPRINT)  SHUT UP
         L     R13,4(0,R13)        OLD SAVE AREA
         LM    R14,R12,12(R13)     RESTORE REGISTERS
         LA    R15,0               RETURN CODE
         BR    R14                 BACK TO O.S.
         EJECT
***            CONSTANTS ETC                                        ***
         SPACE 2
         PRINT NOGEN
SYSUT1   DCB   DDNAME=SYSUT1,DSORG=PS,MACRF=GM,EODAD=END
SYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=PM,BLKSIZE=1210,LRECL=121*
               ,RECFM=FBA
DWORK    DS    D
NOT678   DC    A(0)                COUNT OF RECORDS NOT 6,7,8,18
TOT678   DC    A(0)                COUNT OF RECORDS 6+7+8+18
SVC6CT   DC    A(0)                TOTAL RECORDS SVC 6
SVC7CT   DC    A(0)                TOTAL RECORDS SVC 7
SVC8CT   DC    A(0)                TOTAL RECORDS SVC 8
SVC18CT  DC    A(0)                TOTAL RECORDS SVC 18
TOT6     DC    A(0)                   COUNT OF SVC 6
TOT7     DC    A(0)                   COUNT OF SVC 7
TOT8     DC    A(0)                   COUNT OF SVC 8
TOT18    DC    A(0)                COUNT OF SVC 18
THISMOD  DC    A(0)                TOTAL SVC 6+7+8 FOR A GIVEN MODULE
LINECT   DC    A(0)                LINE COUNT
LAST     DC    8C' '               OLD MODULE SAVED HERE
BLANKS   DC    8C' '               COMPARAND FOR FIRST TIME THROUGH
MASK2    DC    X'40',7X'20',X'2120' * EDIT PATTERN                    *
AREA     DS    CL50                RECORD IS READ IN HERE
*
HD1      DC    C'1',6C' ',C' MODULE LOADING SUMMARY  ',90C' '
HD2      DC    C'-',8C' ',C'MODULE NAME',10C' ',C'SVC  6',9C' '
         DC    C'SVC  7',9C' ',C'SVC  8',9C' ',C'SVC 18',10C' '
         DC    C'TOTAL',40C' '
*
LINE     DC    C' ',9C' '
MNM      DS    CL8                 MODULE NAME
         DC    8C' '
TOTSVC6  DS    CL10              * CALLS VIA SVC 6                    *
         DC    5C' '
TOTSVC7  DS    CL10              * CALLS VIA SVC 7                    *
         DC    5C' '
TOTSVC8  DS    CL10              * CALLS VIA SVC 8
         DC    5C' '
TOTSVC18 DS    CL10              * CALLS VIA SVC 18                   *
         DC    5C' '
TOTALMOD DS    CL10              TOTAL CALLS FOR THIS MODULE          *
         DC    44C' '
TOTLINE  DC    C'-',17C' ',C'TOTALS  '
TOT6A    DS    CL10                COUNT OF SVC 6
         DC    5C' '
TOT7A    DS    CL10
         DC    5C' '
TOT8A    DS    CL10
         DC    5C' '
TOT18A   DS    CL10
         DC    55C' '
TAIL     DC    C'-',8C' ',C'TOTAL SVCS 6+7+8+18 = '
ALLMODS  DS    CL10              * ALL SVC CALLS 6+7+8+18             *
         DC    4C' ',C'TOTAL OTHERS = '
OTHERS   DS    CL10              * ALL OTHERS                         *
         DC    56C' '
REC      DSECT
RECID    DS    CL1                 ID OF RECORD (= INVOKING SVC #)
MODULE   DS    CL8                 MODULE CALLED
FILLER   DS    CL21
         END
./ ADD LIST=ALL,NAME=GTFJCL1
./ NUMBER NEW1=100,INCR=100
***                 JCL FOR DISK MOVEMENT PROGRAMS                  ***
***                                                                 ***
//*       STEP1 - READ GTF DATA
//*
//A       EXEC PGM=PGM1
//SYSPRINT  DD SYSOUT=A
//SYSUT1    DD ........... SYS1.TRACE ....   DATA FROM GTF
//SYSUT2    DD DSN=&&A,DISP=(,PASS),UNIT=3330,SPACE=(CYL,(2,1))
//*
//*       STEP2 - REPORT ON MOVEMENTS - ALL OF THEM
//*
//B       EXEC PGM=PGM2
//SORTLIB   DD DISP=SHR,DSN=SYS1.SORTLIB
//SYSOUT    DD SYSOUT=A
//SORTWK01  DD UNIT=3330,SPACE=(CYL,3)
//SORTWK02  DD UNIT=3330,SPACE=(CYL,3)
//SORTWK03  DD UNIT=3330,SPACE=(CYL,3)
//SORTIN    DD DSN=&&A,DISP=(OLD,PASS)
//SORTOUT   DD DSN=&&B,DISP=(,PASS),UNIT=3330,SPACE=(CYL,(2,1)),
//             DCB=(RECFM=FB,LRECL=8,BLKSIZE=2000)
//PRINT     DD SYSOUT=A
//SYSUT2    DD DSN=&&C,DISP=(,PASS),UNIT=3330,SPACE=(CYL,(2,1))
//*
//*       STEP3 - SORT THE RECORDS FROM PGM2
//*
//C       EXEC PGM=SORT
//SORTLIB   DD DISP=SHR,DSN=SYS1.SORTLIB
//SYSOUT    DD SYSOUT=A
//SORTWK01  DD UNIT=3330,SPACE=(CYL,3)
//SORTWK02  DD UNIT=3330,SPACE=(CYL,3)
//SORTWK03  DD UNIT=3330,SPACE=(CYL,3)
//SORTIN    DD DSN=&&C,DISP=(OLD,PASS)
//SORTOUT   DD DSN=&&D,DISP=(,PASS),UNIT=3330,SPACE=(CYL,(2,1)),
//             DCB=(RECFM=FB,LRECL=14,BLKSIZE=2800)
//SYSIN     DD *
 SORT FIELDS=(11,4,BI,A,1,2,BI,A,3,2,BI,A,5,2,BI,A,7,4,BI,A)
//*
//*       PRINT THE ABBREVIATED REPORTS
//*
//D       EXEC PGM=PGM3
//SYSPRINT  DD SYSOUT=A
//SYSUT1    DD DSN=&&D,DISP=(OLD,PASS)
//SYSIN     DD *
A000026             FOR HEAD MOVEMENT  OR
X000049             FOR FREQUENCY
./ ADD LIST=ALL,NAME=GTFJCL2
./ NUMBER NEW1=100,INCR=100
//*      JCL FOR GTF SVC ANALYSIS
//*
//S1     EXEC  PGM=PGM4
//SYSPRINT DD  SYSOUT=A
//SYSUT1   DD  UNIT=3420,....  DEFINES GTF INPUT
//SYSUT2   DD  UNIT=SYSDA,DISP=(,PASS),DSN=&&A,SPACE=(CYL,(2,1))
//*
//*      SORT THE DATA FOR REPORT # 2
//*
//SORT   EXEC  PGM=SORT
//SYSOUT   DD  SYSOUT=A
//SORTLIB  DD  DISP=SHR,DSN=SYS1.SORTLIB
//SORTWK01 DD  UNIT=SYSDA,SPACE=(CYL,3)
//SORTWK02 DD  UNIT=SYSDA,SPACE=(CYL,3)
//SORTWK03 DD  UNIT=SYSDA,SPACE=(CYL,3)
//SORTIN   DD  DSN=&&A,DISP=(OLD,PASS)
//SORTOUT  DD  DSN=&&B,DISP=(,PASS),UNIT=SYSDA,SPACE=(CYL,(2,1)),
//             DCB=(RECFM=FB,LRECL=30,BLKSIZE=1800)
//SYSIN    DD  *
 SORT FIELDS=(2,8,CH,A,1,1,BI,A)
//*
//*      FORMAT THE SECOND REPORT
//*
//S3     EXEC  PGM=PGM5
//SYSPRINT DD  SYSOUT=A
//SYSUT1   DD  DSN=&&B,DISP=(OLD,PASS)
//*
//*
./ ADD LIST=ALL,NAME=GTFZAP
./ NUMBER NEW1=100,INCR=100
 NAME HHLTSIO HHLTSIO
*
*         SUPERZAP TO ENABLE GTF TO LOG DISK ADDRESSES AND
*
*         VOLUME SERIAL NUMBER FOR 1ST SEEKS TO D.A.DEVICES
*
*         WHERE THE COMPLETION CODE IS ZERO.
*
*         APPLICABLE TO RELEASE 2.6 OF VS1
*
*         REPLACES CODE WHICH FILLS UP THE 5-WORD RQE FIELDS
*         IN THE SIO COMPREHENSIVE RECORDS
*
*
*
 VER     0064  45E0B2A0       VERIFY BAL TO RQE ROUTINE
 VER     02A0  9240C001       FIRST INSTRUCTION OF RQE ROUTINE
 REP     02A0  92FFC044,0700  MOVE HEXADECIMAL 'FF' TO
 REP     02A6  D212C045,C044  RQE WORDS FIELD
 REP     02AC  92FFC030,0700  AND ALSO TO
 REP     02B2  D202C031,C030  RQE TCB POINTER
 REP     02B8  4840,1002      R4 -> RQE ( ... R1 -> UCB)
 REP     02BC  9107,C035      SIO COMP CODE = 0 ?
 REP     02C0  4770,B2E0      NO - EXIT
 REP     02C4  9520,4012      DEVICE DIRECT ACCESS ?
 REP     02C8  4770,B2E0      NO - EXIT
 REP     02CC  9160,4006      FIRST SEEK ?
 REP     02D0  4770,B2E0      NO - EXIT
 REP     02D4  D207C044,4030  YES - MOVE IN SEEK ADDRESS
 REP     02DA  D205C04C,401C  AND VOLUME SERIAL NUMBER
 REP     02E0  07FE           RETURN - THE RQE FIELD WILL
*                             CONTAIN VALID DATA OR
*                             HEXADECIMAL 'FF'
