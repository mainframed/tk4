AMM.     TITLE 'RT5017M - I/O INTERRUPT TRAP ROUTINE - A.MORRISH.'
RT5017M  CSECT
***********************************************************************
*                                                                     *
*  THIS PROGRAM INTERCEPTS ALL I/O INTERRUPTS AND MAINTAINS A COUNT   *
* BY DEVICE ADDRESS.                                                  *
*                                                                     *
***********************************************************************
         SPACE 1
* REGISTER USAGE.
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
RBASE    EQU   12                  BASE REGISTER.
R13      EQU   13                  SAVE AREA POINTER.
R14      EQU   14                  RETURN ADDRESS.
R15      EQU   15                  ENTRY POINT ADDRESS / RETURN CODE.
         EJECT
         BEGIN SAVE,BASE=RBASE
         SPACE 1
*
*        IDENTIFY WHETHER TIME LIMIT OR OPERATOR ACTION REQUIRED.
*
         SPACE 1
         L     R10,0(R1)           SET GR10 -> PARAMETER LIST.
         LH    R11,0(R10)          SET GR11 = LENGTH OF PARAMETER LIST.
         LTR   R11,R11             TEST FOR PARAMETER LIST PRESENT.
         BZ    CONSOLE             IF ABSENT THEN MUST BE CONSOLE.
         LA    R1,2(R10)           SET GR1 -> START OF PARAMETER LIST.
         LA    R0,16               SET GR0 = MAXIMUM LENGTH.
         CR    R11,R0              COMPARE FOR MAX LENGTH.
         BH    CONSOLE             IF GREATER THEN MUST BE CONSOLE.
         LR    R0,R11              SET GR0 = LENGTH OF PARAMETER LIST.
         TM    0(R1),X'F0'         IS CHARACTER NUMERIC ?
         BNO   CONSOLE             IF NOT THEN MUST BE CONSOLE.
         CLI   0(R1),C'9'          IS DIGIT GREATER THAN '9' ?
         BH    CONSOLE             IF SO THEN MUST BE CONSOLE.
         LA    R1,1(R1)            INCREMENT GR1 FOR NEXT.
         BCT   R0,*-20             LOOP UNTIL ALL DIGITS TESTED.
         SPACE 1
*
*        SET UP TIME INTERVAL AND ENTER TRACE.
*
         SPACE 1
         BCTR  R11,R0              DECREMENT GR11 FOR EXECUTE.
         EX    R11,PARMPACK        PACK PARAMETERS.
         CVB   R15,DW              CONVERT TO BINARY MINUTES.
         M     R14,F6000           MULTIPLY BY 6000 FOR BINARY SECS*100
         ST    R15,BINTVL          STORE INTERVAL.
         BAL   R11,SETEXIT         LINK TO SET EXIT.
         STIMER WAIT,BINTVL=BINTVL WAIT FOR EXPIRATION OF LIMIT.
         B     ENDEXIT             GO TO STOP EXIT.
         SPACE 1
*
*        SET UP CONSOLE CONTROLLED TIME LIMIT.
*
         SPACE 1
CONSOLE  WTOR  MF=(E,WTOR)         WRITE TO OPERATOR.
         BAL   R11,SETEXIT         LINK TO SET EXIT.
         WAIT  1,ECB=ECB           WAIT FOR OPERATOR RESPONSE.
         SPACE 1
*
*        TERMINATE EXIT.
*
         SPACE 1
ENDEXIT  SPMODE PROB,0             ENTER SUPERVISOR PROTECT KEY.
         ST    R10,X'7C'           STORE OLD ADDRESS.
         SPMODE PROB,*             RESTORE USER PROTECT KEY.
         TIME  BIN                 OBTAIN CURRENT TIME.
         S     R0,STARTIME         SET GRO = TIME ACTIVE.
         BP    *+8                 IF PLUS THEN LEAVE.
         A     R0,DAYTIME          ADDTIME FOR A FULL DAY.
         CVD   R0,DW               CONVERT TO DECIMAL.
         OI    DW+6,X'0F'          REMOVE DECIMAL SECONDS.
         ED    HDRDUR,DW           EDIT TIME ACTIVE INTO HEADER.
         SPACE 1
*
*        WRITE OUT INTERRUPTS PER DEVICE.
*
         SPACE 1
         OPEN  MF=(E,OPENL)        OPEN SYSPRINT.
         PUT   PRT,SKIP            SKIP TO CHANNEL 1.
         PUT   PRT,HDR             WRITE HEADER.
         SPACE 1
         SR    R8,R8               SET GR8 = 0.
         LA    R11,TAB             SET GR11 -> TABLE.
         LA    R10,X'701'          SET GR10 = NO. ENTRIES IN TABLE.
         LA    R5,LINEST           SET GR5 -> OUTPUT LINE.
         LA    R6,20               SET GR6 = 20.
         LA    R7,LINEND           SET GR7 -> END OF OUTPUT LINE.
LOOP     L     R9,0(R11)           SET GR9 = NUMBER OF INTERRUPTS.
         LTR   R9,R9               TEST FOR NO INTERRUPTS.
         BZ    NOINTS              IF NO INTERRUPTS THEN NO PRINT.
         LA    R0,X'701'           SET GR0 = NO. ENTRIES IN TABLE.
         SR    R0,R10              SET GR0 = DEVICE ADDRESS.
         ST    R0,W1               STORE DEVICE ADDRESS.
         UNPK  DEV(4),W1+2(3)      SET UP DEVICE ADDRESS.
         TR    DEV(3),TRTAB        CONVERT TO PRINTABLE CHARACTERS.
         CLC   DEV(1),OLDCHAN      IS THIS SAME CHANNEL AS LAST ?
         BE    SAMECHAN            IF SO THEN GO TO STORE DEVICE INTS.
         LTR   R8,R8               ANY INTERRUPTS THIS CHANNEL ?
         BZ    NEWCHAN             IF NOT THEN GO TO SET UP NEW CHAN.
         LA    R0,LINE             SET GR0 -> DEVICE LINE.
         SR    R5,R0               SET GR5 = LENGTH OF LINE.
         STH   R5,LINE             STORE LENGTH OF LINE.
         PUT   PRT,LINE            WRITE LINE.
         CVD   R8,DW               CONVERT TOTAL NO INTERRUPTS TO DEC.
         SR    R8,R8               SET GR8=0.
         MVC   CHLINMSK,CHANMASK   SET UP CHANNEL MASK.
         ED    CHLINMSK,DW+3       EDIT COUNT TO CHANNEL LINE.
         PUT   PRT,CHANLINE        WRITE CHANNEL LINE.
NEWCHAN  MVC   OLDCHAN(1),DEV      STORE NEW OLD CHANNEL.
         LA    R5,LINEST           SET GR5 -> OUTPUT LINE.
SAMECHAN MVC   0(3,R5),DEV         STORE DEVICE ADDRESS.
         CVD   R9,DW               CONVERT NUMBER OF INTERRUPTS TO DEC.
         MVC   3(12,R5),CHANMASK   STORE MASK IN LINE.
         ED    3(12,R5),DW+3       STORE NUMBER OF INTERRUPTS IN LINE.
         AR    R8,R9               INCREMENT TOTAL NUMBER FOR CHANNEL.
         BXLE  R5,R6,NOINTS        TEST FOR END OF LINE.
         LA    R0,LINE             SET GR0 -> DEVICE LINE.
         SR    R5,R0               SET GR5 = LENGTH OF LINE.
         STH   R5,LINE             STORE LENGTH OF LINE.
         PUT   PRT,LINE            WRITE LINE.
         LA    R5,LINEST           RE-INITIALISE GR5.
NOINTS   LA    R11,4(R11)          INCREMENT GR11 FOR NEXT DEVICE.
         BCT   R10,LOOP            GO TO WRITE NEXT DEVICE.
         CLOSE MF=(E,OPENL)        CLOSE SYSPRINT.
         FREEPOOL PRT              RELEASE BUFFER POOL.
         GOBACK SAVE               RETURN.
         EJECT
*
*        SET UP INTERRUPT INTERCEPT EXIT.
*
         SPACE 1
SETEXIT  L     R10,X'7C'           SET GR10 -> OLD ENTRY.
         ST    R10,RETENTRY        STORE ADDRESS OF I/O INTERRUPT RNT.
         LA    R3,ENTRY            SET GR3 -> ENTRY POINT.
         SPMODE PROB,0             SET PROTECT KEY ZERO.
         ST    R3,X'7C'            STORE NEW ENTRY.
         SPMODE PROB,*             RESTORE USER PROTECT KEY.
         TIME  BIN                 OBTAIN START TIME.
         ST    R0,STARTIME         STORE TIME FOR DURATION CHECK.
         TIME  DEC                 OBTAIN TIME AND DATE.
         STM   R0,R1,DW            STORE DATE AND TIME IN DOUBLE WORD.
         UNPK  HDRDATE,DW+5(3)     UNPACK DATE.
         UNPK  HDRTIME(7),DW(4)    UNPACK TIME.
         MVI   HDRTIME+6,C' '      CLEAR ODD BYTE.
         L     R1,16               SET GR1 -> CVT.
         L     R1,0(R1)            SET GR1 -> TCB DOUBLE WORD POINTERS.
         L     R1,4(R1)            SET GR1 -> TCB.
         L     R1,12(R1)           SET GR1 -> TIOT.
         MVC   WTOJOB,0(R1)        STORE JOB NAME IN WTO.
         WTO   MF=(E,WTOL)         WRITE 'NO CANCEL' MESSAGE TO OPER.
         BR    R11                 RETURN.
         EJECT
*
*        EXIT ROUTINE TO INTERCEPT I/O INTERRUPTS.
*
         SPACE 1
ENTRY    STM   14,15,X'18'         SAVE REGS IN EXT OLD PSW.
         BAL   14,0                INITIALISE BASR REG.
ENTRYA   LH    15,X'3A'            SET GR15 = INTERRUPT CODE.
         SLL   15,2                MULTIPLY BY 4 FOR TABLE OFFSET.
         LA    14,TAB-ENTRYA(15,14)  SET GR14 -> TABLE ENTRY.
         L     15,0(14)            SET GR15 = NUMBER SO FAR.
         LA    15,1(15)            INCREMENT INTERRUPT COUNT.
         ST    15,0(14)            STORE INCREMENTED INTERRUPT COUNT.
         BALR  14,0                INITIALISE BASE REGISTER.
         L     14,RETENTRY-*(14)   SET GR14 -> OLD ENTRY POINT.
         L     15,X'1C'            RESTORE GR15.
         ST    14,X'1C'            STORE OLD I/O ENTRY ADDRESS.
         L     14,X'18'            RESTORE GR 14.
         MVC   X'18'(4),X'78'      SET LEFT HALF OF PSW.
         LPSW  X'18'               GO TO PROCESS I/O INTERRUPT.
         EJECT
*
*        CONSTANTS AND WORK AREAS.
*
         SPACE 1
PARMPACK PACK  DW,2(0,R10)         MODEL STATEMENT.
SAVE     DC    9D'0'               SAVE AREA.
DW       DS    D
F6000    DC    F'6000'
W1       DS    F
BINTVL   DS    F
ECB      DC    F'0'
STARTIME DS    F
DAYTIME  DC    A(24*60*60*100)
RETENTRY DC    A(0)
OPENL    OPEN  (PRT,OUTPUT),MF=L
PRT      DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=PM,RECFM=VBM,LRECL=121,  *
               BLKSIZE=2240
TRTAB    EQU   *-C'0'
         DC    C'0123456789ABCDEF'
HDR      DC    0H'0',AL2(HDREND-*,0),X'19',C'I/O INTERRUPT COUNT BY DEV*
               ICE ON  '
HDRDATE  DC    C'YYDDD',C' AT '
HDRTIME  DC    C'HHMMSS',C' FOR'
HDRDUR   DC    X'40206B2020206B2020206B2020206B202120',C' SECONDS '
HDREND   DS    0C
LINE     DC    0H'0',AL2(LNEND-*,0),X'09'
LINEST   DC    6CL20'000 XXX,XXX,XXX  ,'
LNEND    DS    0C
LINEND   EQU   *-20
CHANLINE DC    0H'0',AL2(CHANEND-*,0),X'11',C'CHANNEL #'
OLDCHAN  DC    C'0'
CHLINMSK DC    X'402020206B2020206B202120'
CHANEND  DS    0C
CHANMASK DC    X'402020206B2020206B202120'
DEV      DS    CL3,CL1
SKIP     DLINE 8B
WTOR     WTOR  'REPLY WITH ANY CHARACTER TO STOP I/O TRACE',DEV+3,1,   *
               ECB,ROUTCDE=2,DESC=3,MF=L
WTOL     WTO   'DO NOT CANCEL JOB XXXXXXXX',ROUTCDE=2,DESC=7,MF=L
         ORG   WTOL+22
WTOJOB   DS    CL8
         ORG
         EJECT
TAB      DC    (X'700')A(0),A(1)
         END
