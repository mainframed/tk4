         TITLE 'SWZ06RDR - MODULE FOR READING STANDARD J.C.L. SETS.'
*                              PROGRAM SPECIFICATION.
         SPACE 2
*        1.        A SCAN OF THE PARM FIELD INFORMATION IS MADE FOR
*                  AN ASTERISK, WHICH INDICATES THE END OF IEFIRC
*                  PARM INFORMATION AND THE START OF SWZ06RDR PARM
*                  INFORMATION.
         SPACE 1
*        2A.       P.D.S. MEMBER INPUT MODE. -
*                  WHEN THE ASTERISK HAS BEEN FOUND, THE 3RD & 4TH
*                  BYTES OF SWZ06RDR PARM ARE EXTRACTED AND PREFIXED
*                  TO THE WORD OPTION. A SEARCH OF THE IEFCNTRL DATA
*                  SET DIRECTORY IS THEN MADE FOR MEMBER NNOPTION.
         SPACE 1
*        2B.       PARM FIELD INPUT MODE. -
*                  THE OPTION PARAMETERS ARE IN THE PARM FIELD AND 2A
*                  AND 3 ROUTINES DO NOT APPLY.
         SPACE 1
*        3.        HAVING FOUND NNOPTION, AN IN-CORE TABLE OF OPTIONS
*                  IS BUILT.
         SPACE 1
*        4.        WITH THE DESIRED OPTIONS IN CORE, THE NAME SPECIFIED
*                  IN THE SWZ06RDR PARM INFO IS SEARCHED FOR IN THE
*                  IEFCNTRL DATA SET DIRECTORY.
         SPACE 1
*        5.        THE FIRST RECORD OF THE SPECIFIED MEMBER HAS ITS
*                  FIRST 2 BYTES COMPARED TO // TO DETERMINE WHETHER
*                  OR NOT IT IS A J.C.L MEMBER.
*                  IF 1ST 2 BYTES = // GO TO 6.
*                  IF 1ST 2 BYTES NOT = // GO TO 8.
         SPACE 1
*        6.        EACH RECORD READ HAS CARD COLUMNS 73 - 80 INCLUSIVE
*                  COMPARE WITH BLANKS AND ALL OF THE OPTIONS IN THE
*                  OPTION TABLE. WHERE AN EXACT MATCH IS FOUND, THE
*                  RECORD IS WRITTEN TO IEFRDER. IN THE CASE OF PARM
*                  INPUT ONLY ONE BYTE AT A TIME IS COMPARED, AS
*                  OPPOSED TO EIGHT BYTES AT A TIME ON MEMBER INPUT.
         SPACE 1
*        7A.       O.S. MODE.
*                  WHEN ALL J.C.L. HAS BEEN PROCESSED, IEFRDER IS
*                  CLOSED AND SWZ06RDR LINKS TO IEFIRC TO READ THE
*                  JOB(S) ONTO SYS1.JOBQUE.
         SPACE 1
*        7B.       H.A.S.P. MODE.
*                  WHEN ALL J.C.L. HAS BEEN PROCESSED, IEFRDER IS
*                  CLOSED, BUT IEFIRC IS NOT LINKED.
         SPACE 1
*        8.        A TABLE OF MEMBERS IS BUILT IN CORE BY USE OF A BLDL
*                  MACRO, AND EACH MEMBER IS PROCESSED BY 6 ABOVE,
*                  BEFORE GOING TO  EITHER 7A OR 7B ABOVE.
         EJECT
         SPACE 2
*                              J.C.L. REQUIREMENTS.
         SPACE 2
*        IEFRDER  -  OUTPUT DATA SET FROM THIS MODULE, CONTAINS THE
*                    SELECTED J.C.L., AND IS INPUT TO IEFIRC (ONCE IT
*                    IS LINKED) OR H.A.S.P. INTERNAL READER.
         SPACE 1
*        IEFPDSI  -  TO ALLOCATE THE PROCEDURE LIBRARY DATA SET TO
*                    IEFIRC.
         SPACE 1
*        IEFDATA  -  TO ALLOCATE SYSIN DATA SETS FOR IEFIRC.
         SPACE 1
*        IEFCNTRL -  THE PARTITIONED DATA SET CONTAINING THE STANDARD
*                    J.C.L. SET MEMBERS, AND THE OPTION MEMBERS.
         SPACE 3
*                              SPECIAL FEATURES.
         SPACE 2
*        1.        USER MACROS SINIT AND PINIT ARE USED.
         SPACE 1
*        2.        GETMAIN AND FREEMAIN ARE USED TO ALLOCATE AND
*                  DE ALLOCATE MAIN STORAGE AREAS FOR THE OPTION AND
*                  MEMBER TABLES.
         SPACE 1
*        3.        LINK MACRO IS USED TO CALL READER PROGRAM IEFIRC,
*                  IF MODULE IS NOT IN H.A.S.P.MODE.
         SPACE 1
*        4.        THE BLDL MACRO IS USED TO OBTAIN IN-CORE DIRECTORY
*                  ENTRIES FOR MEMBERS IN A JOBSTREAM LIST.
         EJECT
         SPACE 2
*                              REGISTER USAGE.
         SPACE 2
*        R0  -     STANDARD O.S. USAGE.
         SPACE 1
*        R1  -     STANDARD O.S. USAGE.
         SPACE 1
*        R2  -     THE ADDRESS OF THE ASTERISK.
         SPACE 1
*        R3  -     INITIALLY MEMBER NAME LENGTH, THEN CARD COLUMN CNT.
         SPACE 1
*        R4  -     CONTAINS THE ADDRESS OF THE EODAD BRANCH TABLE.
         SPACE 1
*        R5  -     MEMBER COUNT.
         SPACE 1
*        R6  -     CONTAINS THE ADDRESS OF THE PARM FIELD INFORMATION.
         SPACE 1
*        R7  -     THE ADDRESS OF THE MEMBER LIST AREA.
         SPACE 1
*        R8  -     THE ADDRESS OF THE OPTION LIST AREA.
         SPACE 1
*        R9  -     OPTION COUNT.
         SPACE 1
*        R10 -     INITIALLY A WORK REGISTER, THEN CURRENT CARD COLUMN.
         SPACE 1
*        R11 -     INTERNAL BRANCH AND LINKS, LOW LEVEL.
         SPACE 1
*        R12 -     PROVIDES MODULE ADDRESSABILIY.
         SPACE 1
*        R13 -     CONTAINS THE ADDRESS OF AN 18 WORD SAVE AREA.
         SPACE 1
*        R14 -     STANDARD O.S. USAGE.
         SPACE 1
*        R15 -     STANDARD O.S. USAGE.
         SPACE 1
SWZ06RDR SINIT SAV,SWZ06ENT            INITIALIZATION MACRO.
         L     R6,0(R1)                LOAD R6 WITH PARM FIELD ADDR.
         ST    R6,SWZ06020+4           STORE PARM ADDR INTO LINK AREA.
         OI    SWZ06020+4,X'80'        SET VL SWITCH BACK ON.
         LA    R4,EODADS               LOAD R4 WITH ADDR OF EODAD TABLE
         BAL   R11,SWZ06030            BRANCH TO OPEN INPUT P.D.S.
         OPEN  (OUTPS,OUTPUT)          OPEN IEFRDER AS OUTPUT.
         SPACE 3
*        ROUTINE FOR FINDING USER PARM FIELD INFORMATION AS INDICATED
*        BY THE ASTERISK (*).
         SPACE 1
SWZ06001 TRT   2(142,R6),SIRCHTAB      FIND THE ASTERISK.
         LR    R2,R1                   LOAD R2 WITH ASTERISK ADDRESS.
         MVI   SIRCHTAB+92,X'00'       REMOVE THE ASTERISK.
         MVI   SIRCHTAB+107,C','       INSERT THE COMMA.
         ST    R2,SAVR2                SAVE CONTENTS OF R2.
         TRT   2(142,R6),SIRCHTAB      FIND THE COMMA.
         L     R2,SAVR2                RESTORE ORIGINAL CONTENTS OF R2.
         LR    R9,R1                   SAVE THE COMMA ADDRESS IN R9.
         LR    R3,R1                   LOAD R3 WITH COMMA ADDRESS.
         SR    R3,R2                   GET LENGTH OF MEMBER-NAME IN R3.
         SH    R3,=H'4'                ALLOW FOR PARM FIELD CONSTANTS.
         EJECT
*        ROUTINES FOR AQUIRING J.C.L. SELECTION OPTIONS.
         SPACE 1
SWZ06002 CLI   2(R2),C'P'              IF IN PARM INPUT MODE,
         BE    SWZ06004                BYPASS P.D.S INPUT ROUTINE BELOW
         MVC   MEMBER(2),3(R2)         MOVE PROJECT CODE TO OPTION.
         BAL   R11,SWZ06027            BRANCH TO FIND MEMBER.
         BAL   R11,SWZ06031            BRANCH TO READ P.D.S.
         PACK  SWCOUNT(8),SWINAREA(2)  PACK THE NUMBER OF OPTIONS, AND
         CVB   R9,SWCOUNT              CONVERT IT TO BINARY IN R9.
         ST    R9,SWOPCNT              SAVE BINARY OPTION COUNT, AND
         MP    SWCOUNT(8),=P'8'        MULTIPLY BY 8 TO OBTAIN AREA.
         CVB   R0,SWCOUNT              LOAD R0 WITH OPTION AREA LENGTH.
         BAL   R11,SWZ06029            BRANCH TO GET MAIN STORAGE.
         ST    R1,SWOPTMS              SAVE ADDR OF OPTION AREA.
         LR    R8,R1                   LOAD R8 WITH OPTION AREA ADDR.
SWZ06003 BAL   R11,SWZ06031            BRANCH TO READ P.D.S.
         MVC   0(8,R8),SWINAREA        MOVE OPTION TO OPTION AREA,
         LA    R8,8(,R8)               INCREMENT R8 BY 8,
         B     SWZ06003                AND REPEAT.
SWZ06004 LA    R9,1(,R9)               BYPASS THE COMMA.
         LR    R1,R9                   LOAD NEW ADDR INTO R9.
         LA    R11,2(,R6)              LOAD R11 WITH PARM START ADDR.
         SR    R1,R11                  GET LENGTH OF NON-OPTIONS.
         LH    R10,0(R6)               LOAD R10 WITH TOTAL PARM LENGTH.
         SR    R10,R1                  GET OPTION FIELD LENGTH.
         STM   R9,R10,SWOPTMS          SAVE OPTION ADDR AND COUNT.
         B     SWZ06008                BYPASS OPEN AND CLOSE.
SWZ06007 BAL   R11,SWZ06025            BRANCH TO CLOSE P.D.S.
         BAL   R11,SWZ06030            BRANCH TO OPEN P.D.S.
         EJECT
*        ROUTINE FOR OBTAINING J.C.L. MEMBERS OR JOBSTREAM LISTS.
         SPACE 1
SWZ06008 LA    R4,4(,R4)               LOAD R4 EODAD FOR SINGLE MEMBER.
         MVC   MEMBER(8),=CL8' '       CLEAR OLD MEMBER NAME.
SWZ06009 EX    R3,SWZ06033             EXECUTE MEMBER NAME MOVE.
         BAL   R11,SWZ06027            BRANCH TO FIND MEMBER.
         BAL   R11,SWZ06031            BRANCH TO READ P.D.S.
         CLC   SWINAREA(2),=C'//'      IF 1ST 2 BYTES NOT // THEN
         BNE   SWZ06015                IT IS A MEMBER LIST.
         L     R8,SWOPTMS              LOAD R8 WITH ADDR OF OPTION AREA
         LH    R5,=H'1'                LOAD R5 WITH NUMBER OF MEMBERS
         L     R9,SWOPCNT              LOAD R9 WITH OPTION COUNT.
         B     SWZ06011                ELSE GO TO OTHER ROUTINE.
         SPACE 3
*        P.D.S. OPTION SELECTION ROUTINE.
         SPACE 1
SWZ06010 BAL   R11,SWZ06031            BRANCH TO READ P.D.S.
         L     R8,SWOPTMS              LOAD R8 WITH OPTION AREA ADDR.
         L     R9,SWOPCNT              LOAD R9 WITH OPTION COUNT.
SWZ06011 CLC   SWINAREA+72(8),=CL8' '  IF 73 - 80 BLANK INCLUDE CARD
         BE    SWZ06038
         CLI   2(R2),C'P'              IF IN PARM INPUT MODE
         BE    SWZ06013                GO TO PARM INPUT HANDLER.
SWZ06111 CLC   SWINAREA+72(8),0(R8)    IF 73 - 80 = OPTION INC. CARD.
         BE    SWZ06038
         LA    R8,8(,R8)               ELSE INCREMENT R8 BY 8.
         BCT   R9,SWZ06111             AND IF R9 NOT = 0 RETRY NEXT OPT
         B     SWZ06010                ELSE GET NEW RECORD.
         SPACE 3
*        PARM INPUT OPTION SELECTION ROUTINE.
         SPACE 1
SWZ06013 LH    R3,=H'8'                LOAD R3 WITH NUMBER OF CARD COLS
         LA    R10,SWINAREA+72         LOAD R10 WITH CARD ADDR.
SWZ06014 CLC   0(1,R10),0(R8)          IF BYTE = OPTION INCLUDE CARD
         BE    SWZ06038
         LA    R8,1(,R8)               GET NEXT OPTION ADDR.
         BCT   R9,SWZ06014             TRY NEXT OPTION TILL R9 = ZERO.
         LA    R10,1(,R10)             GET NEXT CARD COLUMN ADDR.
         L     R9,SWOPCNT              RELOAD R9 WITH OPTION COUNT.
         L     R8,SWOPTMS              RELOAD R8 WITH OPTION ADDR.
         BCT   R3,SWZ06014             TRY OPTIONS ON NEXT CARD COL.
         B     SWZ06010                GET NEXT RECORD.
         EJECT
*        ROUTINE FOR HANDLING MORE THAN 1 J.C.L. MEMBER.
         SPACE 1
SWZ06015 PACK  SWCOUNT(8),SWINAREA(2)  PACK THE NUMBER OF MEMBERS.
         CVB   R5,SWCOUNT              LOAD R5 WITH NUMBER OF MEMBERS.
         MP    SWCOUNT(8),=P'76'       MULTIPLY BY LENGTH OF LIST ENTRY
         CVB   R0,SWCOUNT              LOAD R0, LNGTH OF BLDL TABLE.
         AH    R0,=H'4'                ALLOW FOR 4 BYTE LIST PREFIX.
         BAL   R11,SWZ06029            BRANCH TO GET MAIN STORAGE.
         ST    R1,SWMEMMS              SAVE ADDR OF BLDL TABLE.
         LR    R7,R1                   LOAD R7 WITH ADDR OF BLDL TABLE.
         STH   R5,0(R7)                PLACE NO. OF ENTRIES IN LIST.
         MVC   2(2,R7),=H'76'          PLACE LENGTH OF ENTRY IN LIST.
         LA    R7,4(,R7)               ALLOW FOR 4 BYTE LIST PREFIX.
         LA    R4,4(R4)                LOAD R4 WITH MEMBER LIST EODAD.
SWZ06016 BAL   R11,SWZ06031            BRANCH TO READ INPUT P.D.S.
         MVC   0(8,R7),SWINAREA        ADD NEW NAME TO TABLE.
         LA    R7,76(,R7)              SKIP TO NEXT ENTRY IN BLDL.
         B     SWZ06016                BRANCH BACK AND REPEAT.
SWZ06017 L     R7,SWMEMMS              LOAD R7 WITH ADDR OF BLDL AREA.
         BLDL  INPDS,(R7)              BUILD MEMBER ADDRESS LIST.
         B     *+4(R15)                BRANCH ACCORDING TO RETURN CODE
         B     SWZ06117                00 - SUCCESSFUL BLDL.
         B     SWZ06036                04 - ENTRY NOT FILLED CORRECTLY.
         B     SWZ06023                08 - I/O ERROR IN DIRECTORY.
SWZ06117 LA    R4,4(,R4)
         LA    R7,12(,R7)              POINT TO FIRST TTR IN TABLE.
SWZ06018 FIND  INPDS,(R7),C            FIND NEW MEMBER, GIVEN ADDR IN 7
         LA    R7,76(,R7)              SKIP TO NEXT ENTRY IN BLDL.
         B     SWZ06010                BRANCH TO PROCESS NEXT MEMBER.
         EJECT
*        ROUTINE TO BE ENTERED AT END MEMBER PROCESSING.
         SPACE 1
SWZ06019 BCT   R5,SWZ06018             RETURN IF ANOTHER MEMBER.
         CLI   1(R2),C'H'              IF IN H.A.S.P. MODE BYPASS LINK
         BE    SWZ06035                TO IEFIRC AND GO TO FINISH.
         BAL   R11,SWZ06037            BRANCH TO CLOSE IEFRDER.
SWZ06020 LINK  EP=IEFIRC,PARAM=(PARM),VL=1   LINK TO IEFIRC.
         B     SWZ06024                BRANCH TO FINISH
         SPACE 3
*        ERROR MESSAGE ROUTINE.
         SPACE 1
SWZ06022 MVC   SWZ06022+25(8),MEMBER   MOVE MEMBER NAME TO MESSAGE.
         WTO   'SWZ0601I -          NOT FOUND IN DIRECTORY.',          *
               ROUTCDE=(11,13)
         CLI   1(R2),C'H'              IF IN HASP MODE BRANCH TO WRITE
         BE    SWZ06035                HASP EOJ ANYWAY.
         B     SWZ06024                BRANCH TO END.
SWZ06023 MVI   SWZ06022+20,C'2'                            NEW MSG ID.
         MVC   SWZ06022+34(23),=C'I/O ERROR IN DIRECTORY.' NEW MSG TEXT
         B     SWZ06022                BRANCH TO ISSUE MESSAGE.
         EJECT
*        TERMINATING ROUTINE.
         SPACE 1
SWZ06024 BAL   R11,SWZ06025            BRANCH TO CLOSE INPUT P.D.S.
         PINIT SAV                     TERMINATING MACRO.
         SPACE 3
*        ROUTINE FOR CLOSING THE INPUT P.D.S. FILE.
         SPACE 1
SWZ06025 CLOSE (INPDS)                 CLOSE FILE AND
         BR    R11                     RETURN FROM WHENCE I CAME.
         SPACE 3
*        ROUTINE FOR WRITING TO THE SEQUENTIAL OUTPUT FILE.
         SPACE 1
SWZ06026 PUT   OUTPS,SWINAREA          WRITE 1 RECORD AND
         MVI   SWINAREA,C' '           CLEAR THE INPUT -
         MVC   SWINAREA+1(79),SWINAREA           OUTPUT AREA.
         BR    R11                     RETURN FROM WHENCE I CAME.
         SPACE 3
*        ROUTINE FOR FINDING INDIVIDUAL MEMBER NAMES (D FORM).
         SPACE 1
SWZ06027 FIND  INPDS,MEMBER,D          FIND P.D.S. MEMBER.
         B     *+4(R15)                BRANCH ACCORDING TO RETURN CODE.
         B     SWZ06028                00 - SUCCESSFUL FIND.
         B     SWZ06022                04 - MEMBER NOT FOUND.
         B     SWZ06023                08 - I/O ERROR IN DIRECTORY.
SWZ06028 BR    R11                     RETURN FROM WHENCE I CAME.
         EJECT
*        THE VARIOUS END OF DATA ADDRESS POINTS.
         SPACE 1
EODADS   B     SWZ06007                EODAD FOR END OF OPTION MEMBER.
         B     SWZ06019                EODAD FOR END SINGLE JCL MEMBER.
         B     SWZ06017                EODAD FOR END OF MEMBER LIST.
         B     SWZ06019                EODAD FOR MULTI- J.C.L. MEMBERS.
         SPACE 3
*        ROUTINE FOR ACQUIRING AREAS OF MAIN STORAGE.
         SPACE 1
SWZ06029 GETMAIN R,LV=(0)              GET THE RELEVANT MAIN STORAGE.
         BR    R11                     RETURN FROM WHENCE I CAME.
         SPACE 3
*        ROUTINE FOR OPENING THE INPUT P.D.S.
         SPACE 1
SWZ06030 OPEN  (INPDS,INPUT)           OPEN THE FILE AND,
         BR    R11                     RETURN FROM WHENCE I CAME.
         SPACE 3
*        ROUTINE FOR READING THE INPUT P.D.S.
         SPACE 1
SWZ06031 READ  PDSECB,SF,INPDS,SWINAREA READ P.D.S.,
         CHECK PDSECB                  CHECK IF SUCCESSFUL, AND
         BR    R11                     RETURN FROM WHENCE I CAME.
         EJECT
*        ROUTINE FOR FREEING AREAS OF MAIN STORAGE.
         SPACE 1
SWZ06032 FREEMAIN R,LV=(0),A=(1)       FREE AN AREA OF MAIN STORAGE.
         BR    R11                     RETURN FROM WHENCE I CAME.
         SPACE 3
*        H.A.S.P. END-OF-FILE INDICATOR ROUTINE
         SPACE 1
SWZ06035 MVC   SWINAREA(5),=C'/*EOF'   MOVE EOF TO I/O AREA.
         BAL   R11,SWZ06026            BRANCH TO WRITE EOF INDICATOR.
         BAL   R11,SWZ06037            BRANCH TO CLOSE IEFRDER.
         B     SWZ06024                BRANCH TO END ROUTINE.
         SPACE 3
*        MESSAGE IF BLDL ENTRY IS NOT COMPLETED CORRECTLY.
         SPACE 1
SWZ06036 MVI   SWZ06022+20,C'3'                            NEW MSG ID.
         MVC   SWZ06022+34(23),=C'ERROR IN BLDL TABLE.   ' NEW MSG TEXT
         B     SWZ06022                BRANCH TO ISSUE MESSAGE.
         SPACE 3
*        ROUTINE FOR CLOSING THE IEFRDER DATA SET.
         SPACE 1
SWZ06037 CLOSE OUTPS                   CLOSE IEFRDER, AND
         BR    R11                     RETURN FROM WHENCE I CAME.
         SPACE 3
SWZ06038 BAL   R11,SWZ06026            BRANCH TO WRITE IEFRDER
         B     SWZ06010
         EJECT
*        DATA CONSTANTS SECTION.
         SPACE 1
SWCOUNT  DC    D'0'                    2 WORD AREA FOR PACK INSTRUCTION
MEMBER   DC    C'  OPTION'             8 BYTES FOR P.D.S. MEMBER NAME.
SAV      DC    18F'0'                  18 FULL WORDS FOR G.P.R. SAVE.
         EJECT
INPDS    DCB   DSORG=PO,DDNAME=IEFCNTRL,LRECL=80,BLKSIZE=80,RECFM=F,   *
               OPTCD=C,MACRF=(R),BUFNO=80,EODAD=SWZ06034
         EJECT
OUTPS    DCB   DSORG=PS,DDNAME=IEFRDER,MACRF=(PM),LRECL=80
         EJECT
         DC    CL2' '                  2 BYTE FILLER ALIGN NON-F/W.
PARM     DC    H'0'                    DUMMY PARM FIELD LENGTH.
SAVR2    DC    F'0'                    INTERMEDIATE SAVE AREA FOR R2.
SWOPTMS  DC    F'0'                    MAIN STORAGE OPTION ADDRESS AREA
SWOPCNT  DC    F'0'                    FULL WORD FOR R9 OPTION COUNT.
SWMEMMS  DC    F'0'                    ADDRESS OF BLDL TABLE AREA.
SWZ06033 MVC   MEMBER(0),3(R2)         OBTAIN MEMBER NAME FROM PARM.
SWZ06034 BR    R4                      BRANCH TO RESPECTIVE EODAD.
SWINAREA DC    CL80' '                 80 BYTE I/O AREA.
SIRCHTAB DC    XL92'00'                ARGUMENT AREA OF 256 BYTES -
         DC    C'*'                    FOR THE TRT INSTRUCTIONS.
         DC    XL163'00'
         LTORG
         END
