1 History
+ _______
0    PDS was originally written in 1972 at Fireman's Fund Insurance.

     Since the PDS command was written, it has grown in size and
     complexity:
        A.  Number of subcommands (was 12, now 46)
        B.  Number of source statements (was 4050, now 28500)
        C.  Number of HELP statements (was 500, now 5120)
        D.  Size of load module (was 16K, now 132K)
- Purpose
+ _______
0    The PDS command was designed to manipulate PDS's or partitioned
     data sets.  In the past, only non-authorized functions have been
     performed by the PDS command.

     Sequential data sets are also allowed for several of the PDS
     subcommands which process target data sets.  The documented syntax
     is changed in that no data is entered for the member name position.

     Thus, a LIST subcommand such as LIST MEMBERXX SKIPREC(20) for a
     partitioned data set would be entered as LIST SKIPREC(20) for a
     sequential data set.
- Subcommand name abbreviation:
+ _____________________________
  Subcommand names may be abbreviated to the first few characters of the
  subcommand name.  Subcommand names are scanned in the order of the
  output from the OPTIONS subcommand or from an invalid subcommand
  message and the first name match is used.  For example if the invalid
  subcommand, NN, is entered, the following system response would be
  received:

   PDS771E NN IS AN INVALID SUBCOMMAND; ENTER "HELP" OR "OPTIONS" FOR HE
   SUBCOMMANDS: ATTRIB   ALIAS    BROWSE   CHANGE   COMPARE  COMPRESS CO
                COPY     DISPLAY  DIRENTRY DELETE   DSNAME   DSPRINT  ED
                END      EXEC     FIND     FIXPDS   FSE      HELP     HI
                IF       ISPF     ISPMODE  LIST     MAP      MEMBERS  ME
                OPTIONS  OUTCOPY  PATTERN  PRINTOFF RECALL   RENAME   RE
                REPRO    RESTORE  REVIEW   SUBMIT   SUBLIST  TSO      TS
                TSOLIST  USAGE    VERIFY   VPSPRINT

  If the subcommand name A is entered, the ATTRIB subcommand will be
  given control; likewise, if AL is entered, the ALIAS subcommand
  will be given control.

0 Keyword abbreviation:
+ _____________________
  Subcommand keywords may be abbreviated to the first characters
  which make the keyword unique.  For example, HELP LIST SYNTAX
  returns:
     SYNTAX -
          LIST  member NUM/SNUM/NONUM/LBLOCK/LDUMP/BLOCK/DUMP
                       OFFSET(Hx) MODULE(Partm)
                       SKIPREC(n) MAXIN(n) MAXOUT(n)
                       SKIPCOL(n) MAXLEN(n)

  The keyword LDUMP may be abbreviated to LD, LDU or LDUM; the keyword
  OFFSET may be abbreviated as the letter O or any other substring of
  the keyword; and SKIPCOL(42) may be abbreviated as SKIPC(42).
1 Member groups
+ _____________
0 Several subcommands allow for specification of a member name group whi
  consists of a member name range or member name pattern as follows:

0    Member name range -- a subcommand may process all members in a
+    _________________
     range of members by specifying a beginning partial member
     name, a colon, and an ending partial member name (where either
     or both of the partial names may be null):
        subcommand  :         (all members of the data set)
        subcommand  pt1:      (members from PT1 to the end of the direct
        subcommand  :pt2      (members from X'00' through PT299999)
        subcommand  pt3:pt4   (members from PT3 through PT499999)

0    Member name pattern -- a subcommand may process all members whose
+    ___________________
     names contain pattern character segments by specifying a member
     name segment, a slash, and another member name segment (either,
     but not both, of the member name segments may be null):
        subcommand  sg1/      (all member names containing SG1)
        subcommand  /sg2      (all member names containing SG2)
        subcommand  sg3/sg4   (all member names containing SG3 and SG4)

0    Member lists -- a subcommand may process those members whose names
+    ____________
     or group names appear in a list of member names:
        subcommand  (aa,bb)   (members AA and BB)
        subcommand  (:bb,cc)  (members from X'00' through BB999999 and C
        subcommand  (aa,/dd)  (member AA and all members containing DD)

0    Default member name -- if no member name is specified, the last
+    ___________________
     member name list, member name or member group entered for any
     subcommand which defines member groups will be assumed.

0    Asterisk member name -- if * is entered in the member name position
+    ____________________
     the last member name list, member name or member group entered for
     any subcommand which defines member groups will be assumed.

- Member Protection
+ _________________
0 To ensure that members are not modified which might be in use
  elsewhere in an installation, PDS subcommands which modify members
  issue ISPF style enqueue checks before accessing a member.
- Data Set Protection
+ ___________________
0 In addition, several PDS subcommands could cause data set integrity
  problems if they changed a data set when it was being updated by
  another user.

  To circumvent this problem for SHR allocations, PDS uses
  ISPF reserve logic to maintain data set integrity during data set
  updates.
1 Background execution
+ ____________________
0 Since PDS uses PUTLINE, PUTGET and GETLINE MACRO's for terminal
  communication, PDS may be used effectively in background mode for
  processing large data sets as in the following example JOB:

  //JOBNAME  JOB  ...
  //A       EXEC  PGM=IKJEFT01,DYNAMNBR=30
  //SYSTSPRT  DD  SYSOUT=*
  //SYSTSIN   DD  *
   PDS  'SYS1.SMPCDS'
   FIXPDS EXPANDDIR(100)
   VERIFY :
   CHANGE  'SYS1.LINKLIB'
   IF A:Z RMODEANY THEN(MAP)
   END
  //

  When PDS is used in background mode, no prompting for yes or no
  replies is performed; instead, at each decision point, a yes response
  is assumed.
- ATTRIB -- lists or updates the attributes of a member.
+ ______
0 Example 1: the attributes of a load module are listed.
+ __________
  at savesome
   PDS020I SAVESOME ATTRIBUTES ARE: OVLY, RENT, NOT EXEC
   PDS884E OVERLAY ATTRIBUTE CONFLICTS WITH RENT
   PDS102I ENTRY POINT AT 000000
   PDS104I MODULE LENGTH  007540  --     30K
   PDS106I LAST LINK-EDITED ON  7/01/82
0 Example 2: the attributes of a group of CLIST members are listed.
+ __________
  at cop/
   PDS230I SPF STATS:   VER.MOD  CREATED   LAST MODIFIED  SIZE  INIT   M
   PDS230I  COPY         01.02  82/10/04  83/03/08 11:02     8     8
   PDS230I  REFRCOPY     01.01  84/01/16  84/01/16  9:34    17    17
0 Example 3: a module is assigned a new entry point.
+ __________
  at extractz entry(extract)
   PDS020I EXTRACTZ ATTRIBUTES ARE: RENT, REUS, REFR
   PDS102I ENTRY POINT AT 000000
   PDS104I MODULE LENGTH  007540  --     30K
   PDS106I LAST LINK-EDITED ON  6/17/78
   PDS066I MEMBER IS AN ALIAS FOR: EXTRACT
0 Note: the following attributes of a source member can be modified:
+ _____
  VERSION number, MODIFICATION number, USERID and SSI value.
0 Note: the following attributes of a load module can be modified:
+ _____
  AMODE, APF flags, DC, EDIT, entry point, EXECUTABLE, LOAD ONLY,
  PAGE boundary, REFRESHABLE, REENTRANT, REUSABLE, RMODE and SSI value.
1 CHANGE  -- switches PDS to a different data set.
+ ______
0 Example 1: PCF does not uniquely qualify a data set name.
+ __________
  change pcf
   IKJ58600I QUALIFIERS FOR DATA SET HABL.PCF ARE
   IKJ58600I ASM       OBJ
   IKJ58601A ENTER QUALIFIER - asm
   PDS200I DISP UNIT   RECFM LRECL BLKSIZE   ALLOCTRK FREETRK SECONDARY
   PDS200I SHR  3380   FB       80    9040   2X    75      14    10 CYL

   PDS300A ENTER OPTION -- DSN=HABL.PCF.ASM,VOL=SER=SYSCAT  MEM=
0 Example 2: change to another data set.
+ __________
  change 'cbt.file182.pds'
   PDS200I DISP UNIT   RECFM LRECL BLKSIZE   ALLOCTRK FREETRK SECONDARY
   PDS200I SHR  3380   FB       80    5600   1X    42       0    20 TRK

   PDS300A ENTER OPTION -- DSN=CBT.FILE182.PDS,VOL=SER=SYSRES  MEM=
0 Example 3: switch to the previous data set
+ __________
  change
   PDS200I DISP UNIT   RECFM LRECL BLKSIZE   ALLOCTRK FREETRK SECONDARY
   PDS200I SHR  3380   FB       80    9040   2X    75      14    10 CYL

   PDS300A ENTER OPTION -- DSN=HABL.PCF.ASM,VOL=SER=SYSCAT  MEM=
- COMPARE  -- identifies differences between two members.
+ _______
0 Example: compare two text members.
+ ________
  compa lib.pds71($$$prose) $$$prose

       -1- OLD----'                            PDS Version 7.1
           -------------------------------------------------------------
       -1- NEW----×                            PDS Version 7.2

           -------------------------------------------------------------
       -1- NEW--- ×          COPY  . . . . . . . . . . . . . . . . . . .

       -1- OLD---         Appendix A: PDS Version 6.3  . . . . . . . . .
       -2- OLD---         Appendix B: PDS Version 7.0  . . . . . . . . .
       -3- OLD---         Appendix C: PDS Version 7.1  . . . . . . . . .
           -------------------------------------------------------------
       -1- NEW----        Appendix A: PDS Version 7.0  . . . . . . . . .
       -2- NEW---         Appendix B: PDS Version 7.1  . . . . . . . . .
       -3- NEW--- ×       Appendix C: PDS Version 7.2  . . . . . . . . .
        3 BLOCKS OF COMPARE ERRORS DETECTED
- CONTROL  -- specifies PDS processing options
+ _______
0 Example 1: a SYSOUT copy is taken of a partial PDS session.
+ __________
  control sysout(x) form(dx00) dest(r131)
   ...
  control nosysout
   PDS080I OUTCOPY DCB IS CLOSED

0 Example 2: a data set copy is taken of a partial PDS session.
+ __________
  control dsname(lib.cntl(dsntest1))
   ...
  control nodsn
   PDS080I OUTCOPY DCB IS CLOSED
1 COPY  -- invokes IEBCOPY or IEBGENER to copy data.
+ ____
0 Example 1: copy subcommand check of members in a target library.
+ __________
  copy pds72t/ temp.cntl nocall
   PDS852E PDS72T ALREADY EXISTS
   PDS852E PDS72TT ALREADY EXISTS
    COPY    O=SYS00015,LIST=NO,I=SYS00006
    S M=PDS72T,PDS72TI,PDS72TST,PDS72TT
0 Example 2: copy to replace members.
+ __________
  copy pds72t:pds72t temp.cntl replace list
   PDS484W COPY IS IN PROGRESS
              COPY    O=SYS00044,I=((SYS00006,R))
              S M=PDS72T,PDS72TI,PDS72TST,PDS72TT
   IEB167I  FOLLOWING MEMBER(S)  COPIED  FROM INPUT DATA SET
   IEB154I  PDS72T   HAS BEEN SUCCESSFULLY  COPIED
   IEB154I  PDS72TI  HAS BEEN SUCCESSFULLY  COPIED
   IEB154I  PDS72TST HAS BEEN SUCCESSFULLY  COPIED
   IEB154I  PDS72TT  HAS BEEN SUCCESSFULLY  COPIED
   IEB144I  THERE ARE 0000140 UNUSED TRACKS IN OUTPUT DATA SET
   IEB149I  THERE ARE 0000075  UNUSED DIRECTORY BLOCKS IN OUTPUT DIRECTO
   IEB147I  END OF JOB -00 WAS HIGHEST SEVERITY CODE
0 Example 3: copy to a preallocated file.
+ __________
  copy p72oppr file(ispplib) shr replace
   PDS484W COPY IS IN PROGRESS
              COPY    O=SYS00063,LIST=NO,I=((SYS00054,R))
              S M=P73OPPR
   IEB144I  THERE ARE 0000033 UNUSED TRACKS IN OUTPUT DATA SET
   IEB149I  THERE ARE 0000053  UNUSED DIRECTORY BLOCKS IN OUTPUT DIRECTO
   IEB147I  END OF JOB -00 WAS HIGHEST SEVERITY CODE
0 Example 4: Load module copy with maxblk specified.
+ __________
  copy extract the.load alias maxblk(13030)
   PDS484W COPY IS IN PROGRESS
              COPYMOD O=SYS00074,LIST=NO,MAXBLK=13030,I=SYS00064
              S M=EXTRACT,EXTRACT2
   IEB190I  MAXIMUM BLOCK SIZE IS    13030, MINIMUM BLOCK SIZE IS    102
   IEB144I  THERE ARE 0000042 UNUSED TRACKS IN OUTPUT DATA SET
   IEB149I  THERE ARE 0000079  UNUSED DIRECTORY BLOCKS IN OUTPUT DIRECTO
   IEB147I  END OF JOB -00 WAS HIGHEST SEVERITY CODE
0 Example 5: Load module copy with differing blocksizes.
+ __________
  copy summary the.load alias
   PDS484W COPY IS IN PROGRESS
              COPYMOD O=SYS00095,LIST=NO,MAXBLK=19069,I=SYS00086
              S M=SUMMARY,SUMMARYZ
   IEB191I  MAXBLK DEFAULTS TO    18432
   IEB190I  MAXIMUM BLOCK SIZE IS    18432, MINIMUM BLOCK SIZE IS    102
   IEB144I  THERE ARE 0000041 UNUSED TRACKS IN OUTPUT DATA SET
   IEB149I  THERE ARE 0000079  UNUSED DIRECTORY BLOCKS IN OUTPUT DIRECTO
   IEB147I  END OF JOB -04 WAS HIGHEST SEVERITY CODE
1 DELETE  -- removes a member entry from the directory.
+ ______
0 Example: a group of members is deleted.
+ ________
  del cmd/
   PDS162I MEMBERS TO BE DELETED ARE: AACMD, CMD, CMDSBINT, CMDSBTSO,
            CMDTSO

   PDS394A SHOULD ALL OF THESE MEMBERS BE DELETED (Y/N) ?
  yes
   PDS040I CMDTSO HAS BEEN DELETED
   PDS040I CMDSBTSO HAS BEEN DELETED
   PDS040I CMDSBINT HAS BEEN DELETED
   PDS040I CMD HAS BEEN DELETED
   PDS040I AACMD HAS BEEN DELETED
- DIRENTRY -- lists interpreted directory information for a member.
+ ________
0 Example: a load member.
+ ________
  dir pds72t
   PDS143I PDS72T DIRECTORY ENTRY, LENGTH=40
            0000  D7C4E2F7 F2E34040  015C062E 015D0100  *PDS72T  .*...).
            0010  00000000 C2E3020E  10389000 0000B800  *....BT.........
            0020  02001234 56780100                     *........*

   PDS262I LOC NAME     VALUE     DESCRIPTION
   PDS262I --- ----     -----     -----------
   PDS262I 00  PDS2NAME PDS72T    MEMBER NAME
   PDS262I 08  PDS2TTRP 015C06    TTR OF FIRST BLOCK OF DATA
   PDS262I 0B  PDS2INDC 2E        1 TTRS FOLLOW; 14 HALFWORDS OF DATA
   PDS262I 0C  PDS2TTRT 015D01,00 TTR OF FIRST TEXT BLOCK
   PDS262I 10  PDS2TTRN 000000,00 (NOT USED FOR THIS MEMBER)
   PDS262I 14  PDS2ATR1 C2        REENTRANT; REUS; NOT OVERLAY; NOT TEST
   PDS262I                        NOT ONLY LOAD; NOT SCATTER; EXEC; NOT
   PDS262I 15  PDS2ATR2 E3        NOT DC; TEXT ORG=0; EP=0; HAS RLDS
   PDS262I                        EDIT; NOT TEST; LKED F; REFRESHABLE
   PDS262I 16  PDS2STOR 132K      TOTAL CONTIGUOUS MAIN STORAGE REQUIRED
   PDS262I 19  PDS2FTBL 14,480.   LENGTH OF FIRST BLOCK OF TEXT
   PDS262I 1B  PDS2EPA  000000    ENTRY POINT ADDRESS
   PDS262I 1E  PDS2FTB1 B8        PROCESSED BY OS/VS LINKAGE EDITOR
   PDS262I                        PAGE ALIGNMENT REQUIRED
   PDS262I                        SSI INFORMATION IS PRESENT
   PDS262I                        APF INFORMATION IS VALID
   PDS262I 1F  PDS2FTB2 00        RMODE 24;  ALIAS AMODE 24;  MAIN AMODE
   PDS262I 20  PDS2FTB3 02        RLD/CONTROL RECORDS AFTER FIRST TEXT B
   PDS262I 22  PDSSSIWD 12345678  SSI INFORMATION
   PDS262I 26  PDSAPFCT 01        LENGTH OF PROGRAM AUTHORIZATION CODE
   PDS262I 27  PDSAPFAC 00        PROGRAM AUTHORIZATION CODE
- FIND  -- displays portions of a member which contain a search string.
+ ____
0 Example 1: search for STEPLIB DD statements.
+ __________
  find a:f '//steplib'

   ** FIND     BOOK
   000400 //STEPLIB  DD DSN=SYS1.PLILINK,DISP=SHR
   001900 //STEPLIB  DD DSN=HABL.LIB.LOAD,DISP=SHR
   PDS142I       41  LINES IN THIS MEMBER

   ** FIND     CALFORT
   001000 //STEPLIB   DD  DSN=HABL.LIB.LOAD,DISP=SHR
   PDS142I       15  LINES IN THIS MEMBER
1 Example 2: edit the members containing STEPLIB DD statements.
+ __________
0 find a:f '//steplib' then(edit)

   -- ISPF edit for member BOOK --

   -- ISPF edit for member CALFORT --
0 Example 3: find a character string in a load module.
+ __________
  find pds /abcd/
   PDS141I AT 000000  CSECT PDS61     LENGTH 003802
     002430 2430  F6F7F8F9 C1C2C3C4  C5C6E2E8 E2C8C5D3  *6789ABCDEFSYSHE
     0037C0 37C0  4B4B4BC1 C2C3C4C5  C6C7C8C9 4B4B4B4B  *...ABCDEFGHI...

   PDS142I       21 BLOCKS IN THIS MEMBER
0 Example 4: find a hexadecimal string (TPUT SVC call).
+ __________
  find pds x0a5dx
   PDS141I AT 000000  CSECT PDS61     LENGTH 003802
     000C90 0C90  000C4110 C54CBF18  C5D60A5D 41100001  *....E<..EO.)...
     001540 1540  C55C47DE 00044110  A5644100 00250A5D  *E*......v......
     001550 1550  58107208 41101004  4100004F 0A5D4700  *...........×.).

   PDS142I       21 BLOCKS IN THIS MEMBER
- FIXPDS -- modify data set DCB, add PDS directory blocks, reinitialize
+ ______
            a data set, free unused space or mark all space as used.
0 Example: add 70 directory blocks to a load library.
+ ________
   PDS300A ENTER OPTION -- DSN=HABL.LIB.LOAD,VOL=SER=TSO001  MEM=
  fix expand(70)
   PDS050I ASCEND WILL BE MOVED
   PDS050I BIO WILL BE MOVED

   PDS200I DISP UNIT   RECFM LRECL BLKSIZE   ALLOCTRK FREETRK SECONDARY
   PDS200I SHR  3380   U         0   13030   3X    85      40     5 TRK

   PDS392A SHOULD THIS DATA SET BE MODIFIED (Y/N) ?
  yes
   PDS051I ASCEND IS BEING MOVED
   PDS051I BIO IS BEING MOVED

   PDS200I DISP UNIT   RECFM LRECL BLKSIZE   ALLOCTRK FREETRK SECONDARY
   PDS200I SHR  3380   U         0   13030   3X    85      38     5 TRK

- HISTORY -- lists IDR data for a load module.
+ _______
0 Example: all modules ZAPPED by userid HABL.
+ ________
  hist : zap(habl)

   ** HISTORY  EXTRACT
   PDS061I AMASPZAP UPDATE HISTORY BY CSECT -
   EXTRACT       2/09/84    HABL

   ** HISTORY  IGC0009C
   PDS061I AMASPZAP UPDATE HISTORY BY CSECT -
   IKTASTPT      2/09/84    HABL
   IKTASTPT      2/08/84    HABL
1 IF  -- searches for members meeting specified conditions.
+ __
0 Example 1: any members in use in an ISPF edit session.
+ __________
  if : spfedit
   PDS230I SPF STATS:   VER.MOD  CREATED   LAST MODIFIED  SIZE  INIT   M
   PDS230I  ZAPASM2      01.14  84/01/13  84/01/16  9:30    98    47
0 Example 2: the history of any modules ZAPPED by userid HHHH.
+ __________
  if : zap(hhhh) then(hist)
   ** IF       EXTRACT  THEN HISTORY
   PDS060I TRANSLATOR HISTORY BY CSECT -
   EXTRACT   4/18/74   360SAS037   V21 M00
   PDS061I AMASPZAP UPDATE HISTORY BY CSECT -
   EXTRACT       2/09/84    HABL
   EXTRACT       2/09/84    HHHH
   EXTRACT       6/15/76    NO IDENT
   PDS064I LAST LINK-EDITED ON  6/17/76 BY LKED 360SED521 V21 M00
0 Example 3: the attributes of members changed between Jan. 10 and Feb.
+ __________
  if a:f changed(1/10/84:2/13/84)
   PDS230I SPF STATS:   VER.MOD  CREATED   LAST MODIFIED  SIZE  INIT   M
   PDS230I  ABEND        01.04  83/11/24  84/01/24  9:49     3     3
   PDS230I  DSFRENAM     01.02  84/02/08  84/02/13 10:52    14    14
   PDS230I  DUMPNCP      01.04  84/01/18  84/01/10 11:59     9     8
0 Example 4: JCL members saved by user HABL with jobname HABLE.
+ __________
  if pds71/ userid(habl) then(sublist)
   PDS300A ENTER OPTION -- DSN=HABL.LIB.CNTL,VOL=SER=TSO002  MEM=(PDS71S
  attrib *
   PDS230I SPF STATS:  VER.MOD  CREATED   LAST MODIFIED  SIZE  INIT   MO
   PDS230I  PDS71S      01.01  85/04/01  85/04/03  8:32    26    26
   PDS230I  PDS71T      01.08  85/03/21  85/05/21  9:47    26    28
   PDS230I  PDS71TT     01.07  85/04/28  85/04/28 11:17     9     2
   PDS230I  PDS71UNL    01.03  85/04/09  85/05/14  8:28    37    37

  find * '//hable ' then(sublist)
   PDS300A ENTER OPTION -- DSN=HABL.LIB.CNTL,VOL=SER=TSO002  MEM=(PDS71T
  attrib *
   PDS230I SPF STATS:  VER.MOD  CREATED   LAST MODIFIED  SIZE  INIT   MO
   PDS230I  PDS71T      01.08  85/03/21  85/05/21  9:47    26    28
   PDS230I  PDS71TT     01.07  85/04/28  85/04/28 11:17     9     2
- LIST  -- displays data from a member.
+ ____
0 Example 1: module names beginning UNITSP.. are listed.
+ __________
  list units module(unitsp) ldump
   PDS141I AT 0004D8  CSECT UNITSPCL  LENGTH 000017
     0004D8 0000  00170010 00064000  00060008 6000000A  *...... .....-..
     0004E8 0010  04D5C1D4 C5E200                       *.NAMES.*

   PDS142I        7 BLOCKS IN THIS MEMBER
0 Example 2: display the first few lines of several members.
+ __________
  list print:print maxin(2) num

   ** LIST     PRINTALL
      200 //PRTDUMP EXEC PGM=IMDPRDMP,PARM='0,T',REGION=200K,TIME=20
      300 //TAPE  DD   DSN=DUMPTAPE,VOL=SER=DE4205,DISP=(OLD,KEEP),UNIT=

   ** LIST     PRINTEST
       10 //HABLD JOB XYZ,LELAND,MSGCLASS=X,NOTIFY=HABL
       30 //A  EXEC  PGM=IEBGENER
1 MAP  -- lists the CSECT structure of a load module.
+ ___
0 Example 1: a load module is mapped.
+ __________
  map igc0009c
   IKTASTPT  000000  00080C
   PDS441W IKTGETXT (WEAK)
   IKTAY8    000810  000B48
                                                       IKTAY81   000828
                                                       IKTAY82   00082E
                                                       IKTAY83   000834
   IKT93EST  001358  0003AE
   IKTVTGET  001708  000AD4
   IKTVTPUT  0021E0  0005D0
   IKTXMTPT  0027B0  0003EC
                                                       IKTXMFRR  0027C8
   IKT0009C  002BA0  000314
   IGC0009C  002EB8  000188
   IGG09300  003040  000660
   IGG09301  0036A0  00049C
   IGG09302  003B40  0005F4
   IGG09303  004138  000194

   PDS103I ENTRY POINT AT 000000  --  IKTASTPT
   PDS104I MODULE LENGTH  0042D0  --     17K
0 Example 2: produce linkage edit controls and JCL
+ __________
  map extractz relink
   ** MAP      EXTRACTZ
   //LKED   EXEC  PGM=IEWL,
   //       PARM='NCAL,MAP,LIST,LET,RENT,REUS,REFR'
   //SYSUT1   DD  UNIT=SYSDA,SPACE=(1024,(200,20))
   //SYSPRINT DD  SYSOUT=*
   //SYSLIB   DD  DISP=SHR,DSN=HABL.LIB.LOAD
   //SYSLMOD  DD  DISP=SHR,DSN=HABL.LIB.LOAD
   //SYSLIN   DD  *
    INCLUDE SYSLMOD(EXTRACT)
    ORDER   EXTRACT(P),RCON,CONVRT,SYNTAX
    ENTRY   EXTRACT
    ALIAS   EXTRACTZ
    NAME    EXTRACT(R)
- RENAME  -- updates a member's name.
+ ______
0 Example: a group of members is renamed.
+ ________
  rename cscz csc8 group
   PDS161I MEMBERS TO BE RENAMED ARE: CSCZA03D, CSCZB03D, CSCZC03D, CSCZ
            CSCZP03D, CSCZS03D

   PDS391A SHOULD THESE MEMBERS BE RENAMED (Y/N) ?
  yes
   PDS090I CSCZA03D HAS BEEN RENAMED
   PDS090I CSCZB03D HAS BEEN RENAMED
   PDS090I CSCZC03D HAS BEEN RENAMED
   PDS090I CSCZJ03D HAS BEEN RENAMED
   PDS090I CSCZP03D HAS BEEN RENAMED
   PDS090I CSCZS03D HAS BEEN RENAMED
   PDS300A ENTER OPTION -- DSN=HABL.LIB.TESTLOAD,VOL=SER=TSO001  MEM=CSC
  member
   PDS165I MEMBERS ARE: CSC8A03D, CSC8B03D, CSC8C03D, CSC8J03D, CSC8P03D
            CSC8S03D
1 REPLACE  -- updates character strings in a member.
+ _______
0 Example 1: the replacement string is shorter than the search string.
+ __________
  rep vtoc# /dsn=habl.lib.loadtest/dsn=sys1.linkhit/
   ** REPLACE  VTOC#
   002100 //SYSLMOD  DD  DSN=SYS1.LINKHIT(&MEMBER),DISP=SHR
   003000 //LKED.SYSLMOD DD  DSN=SYS1.LINKHIT(VTOCMSG),DISP=SHR
   003720 //LKED.SYSLMOD DD  DSN=SYS1.LINKHIT,DISP=SHR
   PDS142I        42  LINES IN THIS MEMBER

  rep * /dsn=habl.lib.loadtest/dsn=sys1.linkhit/ write
   ** REPLACE  VTOC#
   002100 //SYSLMOD  DD  DSN=SYS1.LINKHIT(&MEMBER),DISP=SHR
   003000 //LKED.SYSLMOD DD  DSN=SYS1.LINKHIT(VTOCMSG),DISP=SHR
   003720 //LKED.SYSLMOD DD  DSN=SYS1.LINKHIT,DISP=SHR
   PDS142I        42  LINES IN THIS MEMBER
   PDS145I         1 BLOCKS UPDATED
0 Example 2: multiple members are updated.
+ __________
  rep : /=iev90/=iev90,time=5/ write
   ** REPLACE  ASIDXA
   000400 //ONE   EXEC  PGM=IEV90,TIME=5,REGION=4096K,
   PDS142I        23  LINES IN THIS MEMBER
   PDS145I         1 BLOCKS UPDATED

   ** REPLACE  EXTERN
   000300 //ONE   EXEC  PGM=IEV90,TIME=5,REGION=1500K,
   PDS774E REPLACE TERMINATED; CHARACTER EXPANSION FAILED
   029100 //ASM EXEC PGM=IEV90,,,,,PARM='TERM,LIST,NODECK,XREF(SHORT)',C
   058700 //LAST  EXEC  PGM=IEV90,TIME=5,REGION=3000K,
   PDS142I       590  LINES IN THIS MEMBER
   PDS145I         1 BLOCKS UPDATED

   ** REPLACE  VTOC#
   000600 //ASM     EXEC PGM=IEV90,TIME=5,PARM='LOAD,NODECK,ALIGN,XREF(S
   PDS142I        42  LINES IN THIS MEMBER
   PDS145I         1 BLOCKS UPDATED
- REPRO  -- rebuilds or creates members.
+ _____
0 Example 1: add an AMASPZAP IDR record to a load member.
+ __________
  repro summary addzap
   PDS050I SUMMARY WILL BE MOVED
   PDS396A SHOULD REPRO CONTINUE (Y/N) ?
  yes
   PDS051I SUMMARY IS BEING MOVED
0 Example 2: create several new members.
+ __________
  repro ext:ext to(xxx) alias
   PDS050I EXTR WILL BE COPIED TO XXXR
   PDS050I BSSFRCT2 WILL BE COPIED TO XXXFRCT2
   PDS396A SHOULD REPRO CONTINUE (Y/N) ?
  yes
   PDS051I XXXR IS BEING CREATED
   PDS051I XXXFRCT2 IS BEING CREATED
0 Example 3: create a single new member.
+ __________
  repro pds72t to(jj)
   PDS050I PDS72T WILL BE COPIED TO JJ
   PDS396A SHOULD REPRO CONTINUE (Y/N) ?
  yes
   PDS051I JJ IS BEING CREATED
1 RESTORE  -- resurrects deleted members.
+ _______
0 Example 1: a deleted load module is searched for.
+ __________
  restore zzz display module(attrib)
   ---screen clear---
   PDS101I DELETED MEMBER FOUND AT TTR 000511

   PDS164I CSECTS ARE: PDS, EDIT, BROWSE, PRINTOFF, RESTORE, LIST, HELP,
            RENAME, FIXPDS, ALIAS, DELETE, FINDATTR, ATTRIB, MAP, HISTOR
            ALLOCATE, PARSE, VERMEMBR, VERDSN, PCLMAIN, PCLLIST, PCLFIND
            PCLDSPLY, PCLALIAS, PCLDELET, PCLRESTO, PCLRENAM, PCLMAP, PC
            PCLPRINT, PCLTSOLI, PCLSUBMI, PCLFIX, PCLBROWS, PCLSPFED, ..

   PDS106I LAST LINK-EDITED ON  2/01/83

   PDS390A SHOULD THIS MEMBER BE RESTORED (Y/N) ?
  no
   ---screen clear---
   PDS101I DELETED MEMBER FOUND AT TTR 001214

   PDS164I CSECTS ARE: PLUS, ATTRIB

   PDS106I LAST LINK-EDITED ON  3/31/77

   PDS390A SHOULD THIS MEMBER BE RESTORED (Y/N) ?
  yes
   PDS091I ZZZ HAS BEEN RESTORED
   PDS103I ENTRY POINT AT 000000  --  PLUS
   PDS104I MODULE LENGTH  0003B8  --      1K
   PDS300A ENTER OPTION -- DSN=HABL.LIB.TESTLOAD,VOL=SER=TSO002  MEM=ZZZ
  attrib
   PDS020I ZZZ ATTRIBUTES ARE: NONE
   PDS102I ENTRY POINT AT 000000
   PDS104I MODULE LENGTH  0003B8  --      1K
   PDS106I LAST LINK-EDITED ON  3/31/77
0 Example 2: a CLIST member is restored (note that it is useful to
+ __________
             identify members internally that might need to be restored)

  restore ncpnewx prompt like(ncpnew) find('ncp')
   ---screen clear---
   PDS101I DELETED MEMBER FOUND AT TTR 001216

   PDS144I DATA LINE 1:
   00020008WRITE ***  NCPNEW -- INSTALL A NEW VERSION OF NCP

   PDS144I DATA LINE 2:
   00040008WRITE ***  DELETE PREVIOUS NCP MODULES

   PDS144I DATA LINE 3:
   00050008PDS 'SYS1.NCPLIB'

   PDS390A SHOULD THIS MEMBER BE RESTORED (Y/N) ?
  yes
   PDS091I NCPNEWX HAS BEEN RESTORED
   PDS300A ENTER OPTION -- DSN=HABL.LIB.CLIST,VOL=SER=TSO002  MEM=NCPNEW
  at ncpnew/
   PDS230I SPF STATS:   VER.MOD  CREATED   LAST MODIFIED  SIZE  INIT   M
   PDS230I  NCPNEW       01.05  83/06/24  84/01/24  8:13    60    83
   PDS230I  NCPNEWX      01.05  83/06/24  84/01/24  8:13    60    83
1 VERIFY  -- validity checks data sets or individual members.
+ ______
0 Example 1: a link-list library is validity checked.
+ __________
  c 'sys1.linkhit'
   PDS200I DISP UNIT   RECFM LRECL BLKSIZE   ALLOCTRK FREETRK SECONDARY
   PDS200I SHR  3380   U         0   19069   1X   600     141     0 CYL

   PDS300A ENTER OPTION -- DSN=SYS1.LINKHIT,VOL=SER=TSO001  MEM=CHECKZ
  verify :
   ** VERIFY   TESTONE
   PDS880E RESIDENCE MODE ANY AND ADDRESSING MODE ANY ARE INCOMPATIBLE
   IEA703I 706    HABL     SPFACCT  MODULE ACCESSED UNITS

   ** VERIFY   UNITS
   PDS998E ABEND S706 LOADING THIS MODULE

   PDS111I     5,384 PHYSICAL BLOCKS WERE INPUT
   PDS112I    18,432 CHARACTERS IN THE LARGEST PHYSICAL BLOCK
   PDS113I       875 CHARACTERS PER AVERAGE PHYSICAL BLOCK
   PDS114I        94 TRACKS COULD BE REGAINED BY COMPRESSING THIS DATA S
   PDS115I       320 MEMBERS WERE CHECKED
0 Example 2: a CNTL data set is validity checked.
+ __________
  c lib.cntl
   PDS200I DISP UNIT   RECFM LRECL BLKSIZE   ALLOCTRK FREETRK SECONDARY
   PDS200I SHR  3380   FB       80    6320   2X   165      22     1 CYL

   PDS300A ENTER OPTION -- DSN=HABL.LIB.CNTL,VOL=SER=TSO002  MEM=:
  verify :
   ** VERIFY   ASMMEM
   PDS860E MEMBER IS AN ALIAS BUT NO MAIN MEMBER EXISTS

   ** VERIFY   ASSEMBLR
   PDS812E BLOCK LENGTH OF 9,040 EXCEEDS THE DATA SET DCB BLKSIZE

   ** VERIFY   RESCPY
   PDS510W THIS IS A NULL MEMBER

   PDS110I     4,737 LOGICAL RECORDS WERE INPUT
   PDS111I       151 PHYSICAL BLOCKS WERE INPUT
   PDS112I     9,040 CHARACTERS IN THE LARGEST PHYSICAL BLOCK
   PDS113I     2,510 CHARACTERS PER AVERAGE PHYSICAL BLOCK
   PDS114I        84 TRACKS COULD BE REGAINED BY COMPRESSING THIS DATA S
   PDS115I       130 MEMBERS WERE CHECKED
   PDS300A ENTER OPTION -- DSN=HABL.LIB.CNTL,VOL=SER=TSO002  MEM=:
  .?
   -- an explanation of PDS messages PDS510W, PDS812E and PDS860E --
0 Example 3: an range of load members is checked.
+ __________
  verify hasp:hasp
   ** VERIFY   HASPSSSM
   PDS111I        20 PHYSICAL BLOCKS WERE INPUT
   PDS112I    18,432 CHARACTERS IN THE LARGEST PHYSICAL BLOCK
   PDS113I     2,723 CHARACTERS PER AVERAGE PHYSICAL BLOCK

   ** VERIFY   HASPSSSO
   PDS111I        20 PHYSICAL BLOCKS WERE INPUT
   PDS112I    18,432 CHARACTERS IN THE LARGEST PHYSICAL BLOCK
   PDS113I     2,710 CHARACTERS PER AVERAGE PHYSICAL BLOCK

   PDS300A ENTER OPTION -- DSN=SYS1.LPALIB,VOL=SER=SYSXAR  MEM=HASP:HASP
