         TITLE 'TIMER SUPERVISOR SUBROUTINE'
*              PGM-ID.   GU701000.
*              AUTHOR.   DON HIGGINS.
*              DATE.     12/13/74.
*              REMARKS.  PROVIDE FULL TIMER FACILITIES TO CALLING
*                        PROGRAM.
*              ARGUMENTS.
*                   CALL TIMER(OPTION,ARG1,ARG2,,,,,ARGN)
*                        OPTION    - FULL WORD BINARY OPERATION CODE.
*                        ARGN      - ARGUMENTS AS DEFINED FOR OPTION
*              OPTIONS.
*                  1.    SET MAXIMUM CPU TIME ALLOWED TO THE VALUE OF
*                        ARG1 SPECIFIED IN SECONDS.  IF THE MAXIMUM
*                        IS EXCEED, THE JOB IS ABENDED WITH A USER 322
*                        ABEND. (SEE #3 FOR EXCEPTION)
*                  2.    SET MAXIMUM REAL ELAPSED TIME ALLOWED TO THE
*                        VALUE OF ARG1 SPECIFIED IN SECONDS.  IF THE
*                        MAXIMUM IS EXCEED, THE JOB IS ABENDED WITH A
*                        USER 322 ABEND.   (SEE #3 FOR EXCEPTION)
*                  3.    SET ARG1 TO A VALUE OF 1 WHEN
*                        THE PREVIOUSLY ESTABLISHED TIME LIMIT SET BY
*                        OPTION 1 OR 2 EXPIRES.  THIS OPTION CALL MUST
*                        BE REISSUED EACH TIME OPTION 1 OR 2 IS ISSUED
*                        OR THE DEFAULT ABEND WILL OCCUR.  TIME IS
*                        INITIALIZED TO 0 BY THIS CALL.
*                  4.    WAIT FOR THE REAL ELAPSED TIME INTERVAL
*                        SPECIFIED BY THE VALUE OF ARG1 IN SECONDS.
*                        THIS OPTION CANCELS ANY PREVIOUS OPTIONS.
*                  5.    SET ARG1 TO CPU TIME USED IN MICRO-SECONDS
*                        SINCE LAST CALL.  THIS OPTION CANNOT BE
*                        INTERMIXED WITH OPTIONS 2 OR 4     SINCE IT
*                        USES THE INTERVAL TIMER IN CPU MODE.
*                  6.    SET ARG1 TO REAL ELAPSED TIME IN MILL-SECONDS
*                        SINCE LAST CALL.
*                  7.    SET ARG1 TO TIME OF DAY IN THE FORM OF AN
*                        8 DIGIT BINARY NUMBER HHMMSSTH.
*                  8.    SET ARG1 TO DATE IN THE FORM OF A 6 DIGIT
*                        BINARY NUMBER MMDDYY.
*                  9.    SET ARG1 TO TIME OF DAY IN 0.01 SEC
*                 10.    SET ARG2 TO BINARY YYDDD GIVEN
*                        ARG1 AS A BINARY MMDDYY.
*                 11.    SET ARG2 TO DISPLAY MM/DD/YY GIVEN
*                        ARG1 AS BINARY YYDDD.
*                 12.    SET ARG1 TO 24 BYTE TIME AND DATE IN THE
*                        FORM HH/MM/SS.TH  YYDDD.
*                 13.    SET ARG1 TO 8 BYTE MM/DD/YY.
*                 14.    SET ARG1 TO 16 BYTE GREGORIAN AND JULIAN
*                        CURRENT DATE  MM/DD/YY   YYDDD.
*                 15.    SET ARG1 TO DAY OF WEEK (MON=1).
*                 16.    SET ARG2 TO DAY OF WEEK GIVEN ARG1 AS
*                        BINARY YYDDD.
*                 17.    SET ARG1 TO BINARY YYDDD.
