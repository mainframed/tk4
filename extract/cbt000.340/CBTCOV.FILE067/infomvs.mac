PROC 0 CMND('D=BEGPS') DEBUG PROD
/* )STARTHELP
/*
/* )F  FUNCTION                                                        -
/*     THE INFOMVS CLIST WILL INFOKE THE INFORMATION/SYSTEM/MVS
/*     PROGRAM PRODUCT. THIS PRODUCT PROVIDES EARLY WARNING
/*     SEARCH CAPABILITY AND CAN BE USE IN THE MAINTAINCE OF
/*     MVS SYSTEMS. A SELF-CONTAINED TUTORIAL ALONG WITH
/*     PLENTIFUL HELP TEXT IS CONTAINED WITHIN THE INFO/MVS
/*     DATABASE. SEE ENTRY 'H101' UPON ENTRY TO PROGRAM 'OZD'
/*     FOR AN INDEX OF THE INFO/MVS HELP ENTRIES.
/*
/* )X  SYNTAX                                                          -
/*
/*     %INFOMVS CMND('PARM') DEBUG PROD
/*
/*     REQUIRED - NONE (DEFAULT PARM IS 'D=BEGPS')
/*     ALIAS    - NONE
/*
/* )O  OPERANDS                                                        -
/*
/* ))CMND       PASSES INVOCATION PARAMETERS TO THE 'OZD'
/*              PROGRAM. THESE PARMS ARE DESCRIBED IN THE
/*              INFO/MVS PROGRAM DESCRIPTION AND OPERATIONS
/*              MANUAL (PDOM) AVAILABLE AT YOUR FRIENDLY
/*              SLSS LIBRARY.
/*
/*              NOTE: THE DEFAULT PARMS PASSED ARE:
/*                    'D=BEGPS'
/*
/* ))DEBUG      TURNS ON CLIST CONTROL VARIABLES TO TRACE
/*              FLOW OF CLIST. THIS PARAMETER CAUSES VERY
/*              VERBOSE OUTPUT AND SHOULD BE USED ONLY TO
/*              DEBUG THE CLIST LOGIC.
/*
/* ))PROD       INDICATES THAT THE PRODUCTION COPY OF THE
/*              SYSTEM CDS IS TO BE USED FOR THE UNDOCUMENTED
/*              'CDS' SUBCOMMAND OF INFOMVS.
/*
/* )ENDHELP
IF &DEBUG EQ DEBUG THEN CONTROL LIST CONLIST SYMLIST PROMPT MSG
             ELSE CONTROL NOMSG NOPROMPT
SET &SWT  EQ 0
SET &D    EQ &STR(SYST.SMPCDS)          /* USE TARGET SYS CDS */
SET &ANS  EQ &STR()
SET &TEXT EQ &STR( ENTER THE NAME OF THE SMPCDS DATASET ===> )
DO  WHILE(&LENGTH(&ANS) EQ 0)
    IF  &PROD EQ PROD THEN SET &D EQ &STR(SYSP.SMPCDS)
    CLR3270
    WRITE
    WRITE  THE DEFAULT SMPCDS DATASET FOR THE CDS SUBCOMMAND IS:
    WRITE
    WRITE                   '&D'
    WRITE
    WRITE  IF THIS IS ACCEPTABLE PLEASE DEPRESS THE ENTER KEY,
    WRITE  OTHERWISE ENTER THE UNQUOTED FULLY QUALIFIED NAME FOR
    WRITE  THE SMPCDS DATASET YOU DESIRE. ANY INCORRECT RESPONSE
    WRITE  WILL CAUSE THIS PROMPT TO BE REISSUED. NOTE THAT THE
    WRITE  DATASET NAME ENTERED IS NOT CHECKED FOR A VALID CDS
    WRITE  DATASET.
    WRITE
    WRITENR &TEXT
    READ    &ANS
    IF &LENGTH(&ANS) EQ 0 THEN SET &ANS EQ &STR(&D)
    STATE '&ANS' R
    IF &LASTCC EQ 0 THEN SET &D EQ &STR(&ANS)
       ELSE                                                            -
         DO
           WRITE
           WRITE  DATASET '&ANS' CANNOT BE LOCATED
           WRITE  RE-ENTER THE DATA SET NAME WHEN PROMPTED.
           WRITE
           WRITENR  HIT ENTER TO CONTINUE ===>
           READ &DUM
           SET  &ANS EQ &STR()
         END
END
SET &OZPRINT = &STR( HMD0452I OZPRINT DATASET INITIALIZED)
FREE FI(VSAM VSAM2 VSAM3 VSAM4 VSAM5 VSAM6 SMPCDS) ATTR(BLGATTR)
ATTR BLGATTR BLKSIZE(3120) LRECL(80) RECFM(F B A)
DELETE '&SYSPREF..&SYSUID..OZPRINT.DATA'
ALLOC FI(OZPRINT) DA('&SYSPREF..&SYSUID..OZPRINT.DATA') MOD            -
     SP(7,2) CYL USING(BLGATTR)            /* ALLOCATE PRINT DATASET   -
*/
OPENFILE OZPRINT OUTPUT                    /* WRITE DUMMY FIRST REC    -
*/
PUTFILE  OZPRINT                           /* PUT RECORD TO OZPRINT    -
*/
CLOSFILE OZPRINT                           /* CLOSE FILE....           -
*/
ALLOC FI(VSAM)    DA('INFO.BLGOZ.VSAM')    SHR  /* MAIN INFOMVS FILE   -
*/
ALLOC FI(VSAM2)   DA('INFO.IMSMSG.VSAM')   SHR  /* IMS 1.2 MESSAGES    -
*/
ALLOC FI(VSAM3)   DA('INFO.CICSMSG.VSAM')  SHR  /* CICS 1.5 MESSAGES   -
*/
ALLOC FI(VSAM4)   DA('INFO.VTAMMSG.VSAM')  SHR  /* VTAM MESSAGES       -
*/
ALLOC FI(VSAM5)   DA('INFO.AMSDATA.VSAM')  SHR  /* VSAM AMS REFERENCE  -
*/
ALLOC FI(VSAM6)   DA('INFO.CBTOZ.VSAM')    SHR  /* CBT TAPE INDEX      -
*/
ALLOC FI(SMPCDS)  DA('&D')                 SHR  /* FOR CDS SUBCOMMAND  -
*/
CLR3270
WRITE *****************************************
WRITE ***   INFORMATION SYSTEM -- MVS/VM    ***
WRITE *** VERSION 2.0  LAST LOADED 03/25/83 ***
WRITE *** DATABASE LEVEL ===>   MARCH  1983 ***
WRITE *****************************************
SET &TEXT=&STR(WOULD YOU LIKE INSTRUCTIONS? (ENTER YES OR NO) ==> )
SET &ANS=
DO  WHILE(&LENGTH(&ANS) EQ 0)
WRITENR &TEXT
READ    &ANS
END
DO WHILE(&SUBSTR(1:1,&ANS) NE &STR(N) AND (&SUBSTR(1:1,&ANS) NE        -
&STR(Y))
   SET &ANS=
   CLR3270
   WRITE
   WRITE ** ERROR ** INCORRECT REPLY **
   WRITE
   DO WHILE(&LENGTH(&ANS) EQ 0)
      WRITENR &TEXT
      READ    &ANS
   END
END
SET &TEXT=&STR(HIT ENTER TO CONTINUE ===> )
DO WHILE(&SUBSTR(1:1,&ANS) EQ &STR(Y))
   SET &ANS EQ N
   CLR3270
   WRITE WELCOME TO INFORMATION/SYSTEM MVS VERSION 2.0.
   WRITE INFORMATION/SYSTEM WILL SEARCH THE INFO/MVS DATABASE FOR
   WRITE USEFUL INFORMATION. THIS CLIST PROVIDES AN INTERFACE BY
   WRITE WHICH INFORMATION/SYSTEM PROGRAMS CAN BE INVOKED AND BY
   WRITE WHICH PRINTED INFORMATION CAN BE DIRECTED TO THE PRINTER
   WRITE FOR LATER PERUSAL.
   WRITE
   WRITE WHEN YOU ENTER THE INFORMATION/SYSTEM PROGRAM, THE
   WRITE TERMINAL WILL BE PLACED IN FULL-SCREEN MODE AND THE IBM
   WRITE DISCLAIMER WILL BE DISPLAYED. ENTRY 'H101' WILL PROVIDE AN
   WRITE INDEX TO THE HELP TEXT PROVIDED WITH THIS PRODUCT. YOU MAY
   WRITE BROWSE THROUGH THIS HELP TEXT TO GET A FEEL FOR THE
   WRITE VARIOUS SUBCOMMANDS OF INFO/MVS.  THERE IS ALSO A TUTORIAL
   WRITE SESSION WHICH IS INCLUDED IN ONE OF THE 'HELP' (H)
   WRITE ENTRIES.
   WRITE
   WRITE WHEN THE INFO/MVS PROGRAM ENDS YOU WILL BE PROMPTED FOR
   WRITE THE DISPOSITION OF THE PRINT DATA SET, IF YOU PRINTED
   WRITE ANYTHING DURING YOUR SESSION.  IF YOU SPECIFY ANYTHING
   WRITE OTHER THAN DESTINATION LOCAL AND SYSOUT CLASS 'G', THEN
   WRITE YOUR PRINT WILL BE FOLDED TO UPPER CASE.
   WRITE
   WRITENR &TEXT
   READ    &DUM
   CLR3270
   WRITE ALTERNATE FILES EXIST WHICH CONTAIN A COPY OF:
   WRITE
   WRITE   * IMS  1.2 MESSAGES AND CODES
   WRITE   * CICS 1.5 MESSAGES AND CODES
   WRITE   * VTAM     MESSAGES AND CODES
   WRITE   * MVS ACCESS METHOD SERVICES REFERENCE
   WRITE   * CBT TAPE INDEX (MVS MODS)
   WRITE
   WRITE TO ACCESS THOSE FILES ENTER THE 'SWITCH' SUBCOMMAND WHEN
   WRITE UNDER THE INFO/MVS COMMAND PROCESSOR.
   WRITE *********************************************************
   WRITE TO ACCESS THE 'IMS ' MESSAGES AND CODES ENTER 'SWITCH 2'
   WRITE TO ACCESS THE 'CICS' MESSAGES AND CODES ENTER 'SWITCH 3'
   WRITE TO ACCESS THE 'VTAM' MESSAGES AND CODES ENTER 'SWITCH 4'
   WRITE TO ACCESS THE 'AMS ' REFERENCE MATERIAL ENTER 'SWITCH 5'
   WRITE TO ACCESS THE 'CBT ' TAPE INDEX FILE -- ENTER 'SWITCH 6'
   WRITE *********************************************************
   WRITE PLEASE IGNORE ANY ERROR MESSAGES INDICATING MISSING ENTRIES.
   WRITE CERTAIN ALTERNATE DATABASE ENTRIES MAY NOT HAVE BEEN DEFINED.
   WRITE
   WRITENR &TEXT
   READ    &DUM
END
XEQ OZD '&CMND'
SET   &LCC = &LASTCC
SET   &FLG = 0
ERROR                                                                  -
   DO
    IF &LASTCC = 400 THEN SET &FLG = 1
    RETURN
   END
OPENFILE OZPRINT INPUT            /* CHECK FOR EMPTY FILE      */
GETFILE  OZPRINT                  /* GET FIRST  RECORD         */
GETFILE  OZPRINT                  /* GET SECOND RECORD         */
CLOSFILE OZPRINT                  /* ERROR ROUTINE WILL HANDLE */
ERROR OFF                         /* RESET ERROR ROUTINE       */
L1: DO WHILE(&FLG NE 1)           /* PRINT IF NOT EMPTY FILE   */
       SET &DEST=
       SET &TEXT EQ &STR(ENTER PRINT FILE DESTINATION ==> )
       DO  WHILE(&LENGTH(&DEST) EQ 0)
           WRITENR &TEXT
           READ    &DEST
       END
       IF  &DEST EQ U10 OR &DEST EQ U11 THEN SET &DEST EQ LOCAL
       SET &CLASS=
       SET &TEXT EQ &STR(ENTER PRINT FILE SYSOUT CLASS ==>)
       DO  WHILE(&LENGTH(&CLASS) EQ 0 OR &LENGTH(&CLASS) GT 1)
           WRITENR &TEXT
           READ    &CLASS
       END
       IF &CLASS EQ G AND DEST NE LOCAL THEN SET &DEST EQ LOCAL
       IF &DEST EQ LOCAL AND &CLASS EQ G THEN                          -
          DO
          PRINTOFF '&SYSPREF..&SYSUID..OZPRINT.DATA'                   -
                    DEST(LOCAL) CLASS(G) UCS(T11) ASIS
          SET &SWT EQ 0
          SET &FLG EQ 1
          END
       ELSE                                                            -
          DO
          CONTROL NOFLUSH
          SET &FILE EQ &STR(FX&SUBSTR(4:5,&SYSTIME))
          FREE   FI(&FILE)
          ALLOC  FI(&FILE) SYSOUT(&CLASS) DEST(&DEST)
          SET &LCC EQ &LASTCC
          FREE   FI(&FILE)
          CONTROL FLUSH
          IF  &LCC EQ 0 THEN                                           -
                  DO
                  PRINTOFF '&SYSPREF..&SYSUID..OZPRINT.DATA'           -
                            DEST(&DEST) CLASS(&CLASS) FOLD
                  SET &SWT EQ 0
                  END
              ELSE                                                     -
                  DO
                  WRITE
                  WRITE SYSOUT CLASS &CLASS OR DEST &DEST
                  WRITE IS INVALID AS SPECIFIED.
                  WRITE
                  WRITE &SYSPREF..&SYSUID..OZPRINT.DATA
                  WRITE WILL NOT BE DELETED SO IT MAY BE
                  WRITE PRINTED CORRECTLY.
                  WRITE
                  SET &SWT EQ 1
                  END
          SET &FLG EQ 1
          END
   END
FREE FI(VSAM VSAM2 VSAM3 VSAM4 VSAM5 VSAM6 OZPRINT SMPCDS)             -
ATTR(BLGATTR)
IF &SWT EQ 0 THEN DELETE '&SYSPREF..&SYSUID..OZPRINT.DATA'
EXIT CODE(&LCC)
