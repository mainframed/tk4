PROC 0 CLASS() SRC() DEBUG
/* )STARTHELP
/*
/* )F  FUNCTION                                                        -
/*     THE INFOMGMT CLIST WILL INVOKE THE INFORMATION/SYSTEM
/*     INFORMATION/MANAGEMENT PROGRAM PRODUCT. THE INFORMATION
/*     MANAGEMENT FEATURE OF INFORMATION/SYSTEM IS AN INTERACTIVE
/*     ONLINE FACILITY FOR MANAGING PROBLEMS, CHANGES, AND
/*     SYSTEM CONFIGURATION COMPONENTS AT EITHER THE SYSTEM
/*     OR NETWORK LEVEL.  FOR MORE INFORMATION SEE THE FOLLOWING
/*     IBM PUBLICATIONS:
/*
/*            SC34-2031-0  INFORMATION MANAGEMENT USERS GUIDE
/*            SC34-2045-0  INFORMATION MANAGEMENT PANEL FLOW
/*
/*
/* )X  SYNTAX                                                          -
/*
/*     %INFOMGMT CLASS('PRIVILEGE-CLASS') SRC('STORED-RESPONSE-CHAIN')
/*
/*     REQUIRED - NONE
/*     ALIAS    - NONE
/*     DEFAULTS - FOR CLASS - THE STORED PRIVILEGE CLASS ASSOCIATED
/*                            WITH YOUR USERID.
/*                FOR SRC   - NONE
/*
/* )O  OPERANDS                                                        -
/*
/* ))CLASS      INDICATES TO INFO/MANAGEMENT THE 'PRIVILEGE CLASS'
/*              UNDER WHICH YOU DESIRE TO RUN. DIFFERENT PRIVILEGE
/*              CLASSES HAVE VARYING DEGREES OF AUTHORITY WITH
/*              RESPECT TO DATABASE UPDATES. THE PRIVILEGE CLASS
/*              IS ASSIGNED BY EITHER YOUR PROJECT LEADER (WHO
/*              RUNS UNDER A PRIVILEGE CLASS ALLOWED TO ASSIGN OTHER
/*              PRIVILEGE CLASSES) OR THE INFO/MANAGEMENT DATABASE
/*              ADMINISTRATOR (WHO RUNS UNDER THE 'MASTER' PRIVILEGE
/*              CLASS.
/*
/*              IF THIS OPERAND IS ENTERED, THE INFO/MANAGEMENT
/*              DATABASE IS SEARCHED FOR A PRIVILEGE CLASS RECORD
/*              CONTAINING YOUR TSO USERID. YOU ARE ASSIGNED THE
/*              PRIVILEGE CLASS ASSOCIATED WITH THAT RECORD. IF
/*              NO SUCH RECORD IS FOUND, YOU WILL RUN UNDER NO
/*              PRIVILEGE CLASS AND WILL NOT BE ALLOWED TO PERFORM
/*              ANY INFO/MANAGEMENT FUNCTIONS THAT UPDATE THE
/*              DATABASE.
/*
/* ))SRC        THIS KEYWORD INDICATES THE 'STORED RESPONSE CHAIN'
/*              THAT YOU WOULD LIKE EXECUTED UPON ENTRY TO THE
/*              INFO/MANAGEMENT MAIN PROGRAM. STORED RESPONSE CHAINS
/*              SIMPLIFY TRAVEL FROM ONE PANEL TO ANOTHER AND
/*              ARE USEFUL FOR APPLICATIONS THAT RESPOND TO PROMPTS
/*              SIMILARLY. SEE THE INFORMATION MANAGEMENT USERS GUIDE
/*              (SC34-2031-0) FOR MORE INFORMATION ON 'STORED RESPONSE
/*              CHAINS'. SEE YOUR PROJECT LEADER OR THE INFO/MANAGEMENT
/*              DATABASE ADMINISTRATOR FOR LOCALLY WRITTEN STORED
/*              RESPONSE CHAINS (SRCS).
/*
/*
/* )ENDHELP
IF &DEBUG EQ DEBUG THEN CONTROL LIST CONLIST SYMLIST PROMPT MSG
             ELSE CONTROL NOMSG NOPROMPT
SET &OZPRINT = &STR( HMD0452I OZPRINT DATASET INITIALIZED)
FREE FI(VSAM VSAM2 VSAM3 VSAM4 VSAM5 VSAM6 OZPRINT) ATTR(BLGATTR)
FREE FI(BLGPNLS BLGSRC BLGFMT BLGSD5 BLGSI5 BLGSL5)
ATTR BLGATTR BLKSIZE(3120) LRECL(80) RECFM(F B A)
DELETE '&SYSPREF..&SYSUID..OZPRINT.DATA'
ALLOC FI(OZPRINT) DA('&SYSPREF..&SYSUID..OZPRINT.DATA') MOD            -
     SP(7,2) CYL USING(BLGATTR)           /* ALLOCATE PRINT DATASET */
OPENFILE OZPRINT OUTPUT                   /* WRITE DUMMY FIRST REC  */
PUTFILE  OZPRINT                          /* PUT RECORD TO OZPRINT  */
CLOSFILE OZPRINT                          /* CLOSE FILE....         */
ALLOC FI(VSAM)    DA('INFO.BLGOZ.VSAM')    SHR /* INFOMVS DATA BASE  */
ALLOC FI(VSAM2)   DA('INFO.IMSMSG.VSAM')   SHR /* IMS 1.2 MESSAGES   */
ALLOC FI(VSAM3)   DA('INFO.CICSMSG.VSAM')  SHR /* CICS 1.5 MESSAGES  */
ALLOC FI(VSAM4)   DA('INFO.VTAMMSG.VSAM')  SHR /* VTAM MESSAGES      */
ALLOC FI(VSAM5)   DA('INFO.AMSDATA.VSAM')  SHR /* VSAM-AMS REFERENCE */
ALLOC FI(VSAM6)   DA('INFO.CBTOZ.VSAM')    SHR /* CBT TAPE INDEX     */
ALLOC FI(BLGPNLS) DA('INFO.BLGPNLS')      SHR
ALLOC FI(BLGSRC)  DA('INFO.BLGSRC')       SHR
ALLOC FI(BLGFMT)  DA('INFO.BLGFMT')       SHR
ALLOC FI(BLGSD5)  DA('INFO.BLGDB.SDDS5')  SHR
ALLOC FI(BLGSI5)  DA('INFO.BLGDB.SDIDS5') SHR
ALLOC FI(BLGSL5)  DA('INFO.BLGDB.SDLDS5') SHR
CLR3270
WRITE **************************************
WRITE ***      INFORMATION SYSTEM        ***
WRITE ***        INFO/MANAGEMENT         ***
WRITE *** VERSION 2.0 - 05/21/82 (HMD)   ***
WRITE *** CLIST LAST UPDATE:             ***
WRITE ***   06/24/82 - HOWARD M. DEAN    ***
WRITE **************************************
SET &TEXT=&STR(WOULD YOU LIKE INSTRUCTIONS? (ENTER YES OR NO) ==> )
SET &ANS=
DO  WHILE(&LENGTH(&ANS) EQ 0)
WRITENR &TEXT
READ    &ANS
END
DO WHILE(&SUBSTR(1:1,&ANS) NE &STR(N) AND (&SUBSTR(1:1,&ANS) NE        -
&STR(Y))
   SET &ANS=
   CLR3270
   WRITE
   WRITE ** ERROR ** INCORRECT REPLY **
   WRITE
   DO WHILE(&LENGTH(&ANS) EQ 0)
      WRITENR &TEXT
      READ    &ANS
   END
END
DO WHILE(&SUBSTR(1:1,&ANS) EQ &STR(Y))
   SET &ANS EQ N
   CLR3270
   WRITE WELCOME TO THE INFO/MANAGEMENT FEATURE OF INFOMATION/SYSTEM
   WRITE
   WRITE THE INFORMATION/MANAGEMENT FEATURE OF INFORMATION/SYSTEM
   WRITE IS AN INTERACTIVE ONLINE FACILITY FOR MANAGING PROBLEMS,
   WRITE CHANGES, AND CONFIGURATION COMPONENTS AT EITHER THE SYSTEM
   WRITE OR NETWORK SUPPORT LEVEL. IT ASSISTS YOU IN:
   WRITE
   WRITE    * REPORTING, TRACKING, AND RESOLVING PROBLEMS
   WRITE    * PLANNING, COORDINATING, AND MONITORING CHANGES
   WRITE    * MAINTAINING INFORMATION ABOUT YOUR CONFIGURATION
   WRITE
   WRITE WHEN YOU ENTER THE INFORMATION/MANAGEMENT PROGRAM A
   WRITE 'PRIMARY OPTION MENU' WILL BE DISPLAYED ALLOWING YOU TO
   WRITE SELECT WHICH AREA YOU ARE TO WORK WITH.
   WRITE
   WRITE THE PRE-ALLOCATED PRINT FILE ASSOCIATED WITH THIS
   WRITE SESSION IS FOR USE ONLY WITH THE INFO/MVS (OPTION 11)
   WRITE FEATURE OF INFO/MANAGEMENT. YOU WILL BE PROMPTED FOR
   WRITE ROUTING AND CLASS INFO IF YOU PRINT ANY INFO/MVS DATA DURING
   WRITE YOUR SESSION. ANY DESTINATION OTHER THAN LOCAL AND SYSOUT
   WRITE CLASS 'G' WILL CAUSE YOUR PRINT TO BE FOLDED TO UPPER CASE.
   WRITE
   WRITENR HIT ENTER TO CONTINUE ===>
   READ &DUM
   CLR3270
   WRITE ALTERNATE FILES EXIST FOR INFO/MVS (OPTION 11) WHICH CONTAIN:
   WRITE
   WRITE   * IMS  1.2 MESSAGES AND CODES
   WRITE   * CICS 1.5 MESSAGES AND CODES
   WRITE   * VTAM     MESSAGES AND CODES
   WRITE   * ACCESS METHOD SERVICES REFERENCE FILE
   WRITE   * CBT TAPE INDEX
   WRITE
   WRITE TO ACCESS THOSE FILES ENTER THE 'SWITCH' SUBCOMMAND WHEN
   WRITE UNDER THE INFO/MVS COMMAND PROCESSOR (TRANSFER SUBCOMMAND)
   WRITE *********************************************************
   WRITE TO ACCESS THE 'IMS ' MESSAGES AND CODES ENTER 'SWITCH 2'
   WRITE TO ACCESS THE 'CICS' MESSAGES AND CODES ENTER 'SWITCH 3'
   WRITE TO ACCESS THE 'VTAM' MESSAGES AND CODES ENTER 'SWITCH 4'
   WRITE TO ACCESS THE 'AMS ' REFERENCE MATERIAL ENTER 'SWITCH 5'
   WRITE TO ACCESS THE 'CBT ' TAPE INDEX FILE -- ENTER 'SWITCH 6'
   WRITE *********************************************************
   WRITE PLEASE IGNORE ANY ERROR MESSAGES CAUSE BY THE ATTEMPTED
   WRITE DISPLAY OF NON-EXISTANT ENTRIES IN THE ALTERNATE DATABASES.
   WRITE
   WRITE INFO/MVS MAY BE ACCESSED VIA THE TRANSFER COMMAND (OPTION 11)
   WRITENR HIT ENTER TO CONTINUE ===>
   READ    &DUM
END
CI: SET &P1=&STR()
SET &P2=&STR()
IF  &CLASS NE THEN SET &P1=&STR(CLASS(&CLASS))
IF  &SRC   NE THEN SET &P2=&STR(SRC(&SRC))
INFO  &P1 &P2
SET &LCC = &LASTCC
SET &FLG = 0
ERROR                                                                  -
   DO
    IF &LASTCC = 400 THEN SET &FLG = 1
    RETURN
   END
OPENFILE OZPRINT INPUT            /* CHECK FOR EMPTY FILE      */
GETFILE  OZPRINT                  /* GET FIRST  RECORD         */
GETFILE  OZPRINT                  /* GET SECOND RECORD         */
CLOSFILE OZPRINT                  /* ERROR ROUTINE WILL HANDLE */
ERROR OFF                         /* RESET ERROR ROUTINE       */
L1: DO WHILE(&FLG NE 1)           /* PRINT IF NOT EMPTY FILE   */
       SET &DEST=
       SET &TEXT EQ &STR(ENTER PRINT FILE DESTINATION ==> )
       DO  WHILE(&LENGTH(&DEST) EQ 0)
           WRITENR &TEXT
           READ    &DEST
       END
       IF  &DEST EQ U10 OR &DEST EQ U11 THEN SET &DEST EQ LOCAL
       SET &CLASS=
       SET &TEXT EQ &STR(ENTER PRINT FILE SYSOUT CLASS ==>)
       DO  WHILE(&LENGTH(&CLASS) EQ 0 OR &LENGTH(&CLASS) GT 1)
           WRITENR &TEXT
           READ    &CLASS
       END
       IF &CLASS EQ G AND DEST NE LOCAL THEN SET &DEST EQ LOCAL
       IF &DEST EQ LOCAL AND &CLASS EQ G THEN                          -
          DO
          PRINTOFF '&SYSPREF..&SYSUID..OZPRINT.DATA'                   -
                    DEST(LOCAL) CLASS(G) UCS(T11) ASIS
          SET &SWT EQ 0
          SET &FLG EQ 1
          END
       ELSE                                                            -
          DO
          CONTROL NOFLUSH
          SET &FILE EQ &STR(FX&SUBSTR(4:5,&SYSTIME))
          FREE   FI(&FILE)
          ALLOC  FI(&FILE) SYSOUT(&CLASS) DEST(&DEST)
          SET &LCC EQ &LASTCC
          FREE   FI(&FILE)
          CONTROL FLUSH
          IF  &LCC EQ 0 THEN                                           -
                  DO
                  PRINTOFF '&SYSPREF..&SYSUID..OZPRINT.DATA'           -
                            DEST(&DEST) CLASS(&CLASS) FOLD
                  SET &SWT EQ 0
                  END
              ELSE                                                     -
                  DO
                  WRITE
                  WRITE SYSOUT CLASS &CLASS OR DEST &DEST
                  WRITE IS INVALID AS SPECIFIED.
                  WRITE
                  WRITE &SYSPREF..&SYSUID..OZPRINT.DATA
                  WRITE WILL NOT BE DELETED SO IT MAY BE
                  WRITE PRINTED CORRECTLY.
                  WRITE
                  SET &SWT EQ 1
                  END
          SET &FLG EQ 1
          END
   END
FREE   FI(VSAM VSAM2 VSAM3 VSAM4 VSAM5 VSAM6 OZPRINT) ATTR(BLGATTR)
FREE   FI(BLGPNLS BLGSRC BLGFMT BLGSD5 BLGSI5 BLGSL5)
DELETE '&SYSPREF..&SYSUID..OZPRINT.DATA'
EXIT CODE(&LCC)
