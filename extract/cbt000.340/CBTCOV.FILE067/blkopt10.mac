PROC 0
   SET &FLAG = 0
   SET &EXIT = NO
DISPP10: +
   ISPEXEC DISPLAY PANEL(BLKOPT10)
   IF &EXIT = YES THEN END
   SET &VIOFLAG = 0
/**************************************************************/
/*                                                            */
/*  EVERY BLOCK ON DASD USES 185   BYTES, SO FULL TRACK       */
/*  BLOCKING IS THE MOST EFFICIENT FOR NOT WASTING SPACE.     */
/*  HOWEVER, 6233 IS THE BEST BLOCK SIZE FOR DATA RESIDING    */
/*  ON A MIXTURE OF DASD TYPE: 3350 AND 3380.                 */
/*                                                            */
/**************************************************************/
BLKSIZ: +
   SET &BLKSIZE = &GOODBLK / &REC * &REC
   SET &RBLK  = &BLKSIZE / &REC
   IF &DEVICE = TAPE × &DEVICE = TAPE6 THEN GOTO TAPEJCL
   SET &BLTRK = &BTRK / (&BLKSIZE + &BOVR)
MAXRECS: +
   IF &MAX < &MIN THEN +
      SET &MAX = &MIN
SPACECAL: +
   SET &PRIBLKS = ((&MIN * &REC) + (&BLKSIZE - 1)) / &BLKSIZE
   SET &DIFF = &MAX - &MIN
   SET &SECBLKS = ((&DIFF * &REC) + (&BLKSIZE - 1)) / &BLKSIZE
   SET &SECBLKS = (&SECBLKS + 14) / 15
           SET &BLKEXT1 = &RBLK * &PRIBLKS
           SET &BLKTOT  = &RBLK * &SECBLKS * 15 + &BLKEXT1
CYLLABEL: +
   SET &MINUS1 = (&BLTRK * &TCYL) - 1
   SET &PRICYLS = (&PRIBLKS + &MINUS1) / (&BLTRK * &TCYL)
   SET &SECCYLS = (&SECBLKS + &MINUS1) / (&BLTRK * &TCYL)
   SET &CYLEXT1 = &RBLK * &BLTRK * &TCYL * &PRICYLS
   SET &CYLTOT  = &RBLK * &BLTRK * &TCYL * &SECCYLS * 15 + &CYLEXT1
TRKLABEL: +
   SET &PRITRKS = (&PRIBLKS + (&BLTRK - 1)) / &BLTRK
   SET &SECTRKS = (&SECBLKS + (&BLTRK - 1)) / &BLTRK
           SET &TRKEXT1 = &RBLK * &BLTRK * &PRITRKS
           SET &TRKTOT  = &RBLK * &BLTRK * &SECTRKS * 15 + &TRKEXT1
VIOCAND: +
   IF &TEMP = N THEN GOTO FILEALC
   IF (&PRICYLS LE 2) AND +
             (&SECCYLS * 15) LT 15 THEN GOTO SETVIO
   ELSE GOTO FILEALC
SETVIO: +
   SET &GOODBLK = 2036
   SET &BLKSIZE = &GOODBLK / &REC * &REC    /* GET BLOCK SIZE       */
   SET &BLTRK = &BTRK / (&BLKSIZE + &BOVR)  /* GET BLOCKS PER TRACK */
   SET &RBLK  = &BLKSIZE / &REC             /*                    */
   SET &PRIBLKS = ((&MIN * &REC) + (&BLKSIZE - 1)) / &BLKSIZE
   SET &DIFF = &MAX - &MIN
   SET &SECBLKS = ((&DIFF * &REC) + (&BLKSIZE - 1)) / &BLKSIZE
   SET &SECBLKS = (&SECBLKS + 14) / 15
           SET &BLKEXT1 = &RBLK * &PRIBLKS
           SET &BLKTOT  = &RBLK * &SECBLKS * 15 + &BLKEXT1
   SET &PRITRKS = (&PRIBLKS + (&BLTRK - 1)) / &BLTRK
   SET &SECTRKS = (&SECBLKS + (&BLTRK - 1)) / &BLTRK
           SET &TRKEXT1 = &RBLK * &BLTRK * &PRITRKS
           SET &TRKTOT  = &RBLK * &BLTRK * &SECTRKS * 15 + &TRKEXT1
           SET &VIOFLAG = 1
           SET &TYPE = T
FILEALC: +
   IF &RECFM = &STR(VB) THEN SET &BLKSIZE = &EVAL(&BLKSIZE + 4)
   SET &RTRK    = &RBLK * &BLTRK
   SET &RCYL    = &RBLK * &BLTRK * &TCYL
   IF &VIOFLAG = 1 THEN GOTO BLKCAL
   ISPEXEC DISPLAY PANEL(BLKOPT11)
   IF &EXIT = YES THEN DO
        SET &JCL1 = &STR( )
        SET &JCL2 = &STR( )
        SET &JCL3 = &STR( )
        SET &JCL4 = &STR( )
        GOTO DISPP10
        END
BLKCAL: +
   SET &A = &BLKSIZE
   IF &TYPE = C THEN GOTO CYLCAL
   IF &TYPE = T THEN GOTO TRKCAL
   IF &TYPE = B THEN +
         DO
           SET &TYPE2 = BLOCKS
           SET &TYPE  = &BLKSIZE
           SET &PRIMALC = &PRIBLKS
           SET &SECALC  = &SECBLKS
           SET &RECEXT1 = &BLKEXT1
           SET &RECTOT  = &BLKTOT
           GOTO DASDJCL
         END
   GOTO TRKORCYL
CYLCAL: +
   SET &TYPE2 = CYLINDERS
   SET &TYPE  = CYL
   SET &PRIMALC = &PRICYLS
   SET &SECALC  = &SECCYLS
   SET &RECEXT1 = &CYLEXT1
   SET &RECTOT  = &CYLTOT
   GOTO DASDJCL
TRKCAL: +
   SET &TYPE2 = TRACKS
   SET &TYPE  = TRK
   SET &PRIMALC = &PRITRKS
   SET &SECALC  = &SECTRKS
           SET &RECEXT1 = &TRKEXT1
           SET &RECTOT  = &TRKTOT
DASDJCL: +
   SET &RTRK    = &RBLK * &BLTRK
BLKCAL2: +
   SET &A = &TYPE
   SET &B = &PRIMALC
   SET &C = &SECALC
   IF &VIOFLAG = 1 THEN GOTO VIOJCL
   SET &JCL1 = &STR(THIS IS THE RECOMMENDED JCL TO ALLOCATE IN &TYPE2)
   SET &JCL2 = &STR(//XXX DD DSN=&DSNAME,DISP=(NEW,CATLG,DELETE),)
   IF &SECALC > 0 THEN +
   SET &JCL3 = &STR(//       SPACE=(&A,(&B,&C),RLSE),UNIT=&DEVICE,)
   IF &SECALC = 0 THEN +
   SET &JCL3 = &STR(//       SPACE=(&A,(&B),RLSE),UNIT=&DEVICE,)
   SET &JCL4 = &STR(//                                                 -
DCB=(LRECL=&REC,BLKSIZE=&BLKSIZE,RECFM=FB))
/**********************************************************************/
DCB=(LRECL=&REC,BLKSIZE=&BLKSIZE,RECFM=FB))
/* THE ISPEXEC INSTRUCTIONS BELOW ARE TO PUT THE JCL INTO A TEMP       -
*/
/* DATASET SO THAT THE USER CAN COPY IT INTO ANY OTHER DATASET OR      -
*/
/* MODIFY IT.  THE INSTRUCTIONS ARE DEPENDENT ON THE ISPF 'CNTL'       -
*/
/* DATASET.  SIMPLY REMOVE THE SLASK ASTERIKS TO IMPLEMENT.            -
*/
/*                     ***********************                         -
*/
/* ISPEXEC FTOPEN TEMP                                                 -
*/
/* ISPEXEC FTINCL BLKOPT10                                             -
*/
/* ISPEXEC FTCLOSE                                                     -
*/
/* ISPEXEC VGET ZTEMPF                                                 -
*/
/* ISPEXEC EDIT DATASET('&ZTEMPF.')                                    -
*/
/* CONTROL NOMSG                                                       -
*/
/* DEL '&ZTEMPF'  */   /*  THE TEMP DATASET IS DELETED NOT LEAVE       -
*/
                       /*  NOT TO LEAVE STRANDED DATASETS ON DASD      -
*/
/* CONTROL MSG                                                         -
*/
/**********************************************************************/
*/
   GOTO DISPP10
   END
VIOJCL: +
   SET &JCL1 = &STR(THIS IS THE RECOMMENDED JCL TO ALLOCATE VIO        -
(TEMPORARY)
   SET &JCL2 = &STR(//XXX DD DSN=&DSNAME,DISP=(NEW,PASS,DELETE),)
   IF &SECALC > 0 THEN +
   SET &JCL3 = &STR(//       SPACE=(&A,(&B,&C),RLSE),UNIT=VIO,)
   IF &SECALC = 0 THEN +
   SET &JCL3 = &STR(//       SPACE=(&A,(&B),RLSE),UNIT=VIO,)
   SET &JCL4 = &STR(//                                                 -
DCB=(LRECL=&REC,BLKSIZE=&BLKSIZE,RECFM=FB))
/**********************************************************************/
DCB=(LRECL=&REC,BLKSIZE=&BLKSIZE,RECFM=FB))
/* THE ISPEXEC INSTRUCTIONS BELOW ARE TO PUT THE JCL INTO A TEMP       -
*/
/* DATASET SO THAT THE USER CAN COPY IT INTO ANY OTHER DATASET OR      -
*/
/* MODIFY IT.  THE INSTRUCTIONS ARE DEPENDENT ON THE ISPF 'CNTL'       -
*/
/* DATASET.  SIMPLY REMOVE THE SLASK ASTERIKS TO IMPLEMENT.            -
*/
/*                     ***********************                         -
*/
/* ISPEXEC FTOPEN TEMP                                                 -
*/
/* ISPEXEC FTINCL BLKOPT10                                             -
*/
/* ISPEXEC FTCLOSE                                                     -
*/
/* ISPEXEC VGET ZTEMPF                                                 -
*/
/* ISPEXEC EDIT DATASET('&ZTEMPF.')                                    -
*/
/* CONTROL NOMSG                                                       -
*/
/* DEL '&ZTEMPF'  */   /*  THE TEMP DATASET IS DELETED NOT LEAVE       -
*/
                       /*  NOT TO LEAVE STRANDED DATASETS ON DASD      -
*/
/* CONTROL MSG                                                         -
*/
/**********************************************************************/
*/
   GOTO DISPP10
   END
TAPEJCL: +
   SET &JCL1 = &STR(THIS IS THE RECOMMENDED JCL TO ALLOCATE TAPE       -
DATASET
   SET &JCL2 = &STR(//XXX DD DSN=&DSNAME,DISP=(NEW,CATLG,DELETE),)
   IF &DEVICE = TAPE  THEN DO
           SET &JCL3 = &STR(//       UNIT=TAPE,LABEL=(,SL),)
           SET &JCL4 = &STR(//                                         -
DCB=(LRECL=&REC,BLKSIZE=&BLKSIZE,RECFM=FB,BUFNO=2))
           END
   IF &DEVICE = TAPE6 THEN DO
           SET &JCL3 = &STR(//       UNIT=TAPE6,LABEL=(,SL),)
           SET &JCL4 = &STR(//                                         -
DCB=(LRECL=&REC,BLKSIZE=&BLKSIZE,RECFM=FB,BUFNO=2,DEN=3))
           END
/**********************************************************************/

/* THE ISPEXEC INSTRUCTIONS BELOW ARE TO PUT THE JCL INTO A TEMP       -
*/
/* DATASET SO THAT THE USER CAN COPY IT INTO ANY OTHER DATASET OR      -
*/
/* MODIFY IT.  THE INSTRUCTIONS ARE DEPENDENT ON THE ISPF 'CNTL'       -
*/
/* DATASET.  SIMPLY REMOVE THE SLASK ASTERIKS TO IMPLEMENT.            -
*/
/*                     ***********************                         -
*/
/* ISPEXEC FTOPEN TEMP                                                 -
*/
/* ISPEXEC FTINCL BLKOPT10                                             -
*/
/* ISPEXEC FTCLOSE                                                     -
*/
/* ISPEXEC VGET ZTEMPF                                                 -
*/
/* ISPEXEC EDIT DATASET('&ZTEMPF.')                                    -
*/
/* CONTROL NOMSG                                                       -
*/
/* DEL '&ZTEMPF'  */   /*  THE TEMP DATASET IS DELETED NOT LEAVE       -
*/
                       /*  NOT TO LEAVE STRANDED DATASETS ON DASD      -
*/
/* CONTROL MSG                                                         -
*/
/**********************************************************************/

   GOTO DISPP10
   END
