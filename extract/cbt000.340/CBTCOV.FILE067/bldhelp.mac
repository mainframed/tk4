PROC 0 DEBUG
/* )STARTHELP
/* )F FUNCTION                                                         -
/*    THE BLDHELP COMMAND IS A CLIST USED TO BUILD A HELP MEMBER
/*    IN A SELECTED HELP DATASET. IT ASSUMES THAT YOU HAVE DOCUMENTED
/*    THE SOURCE MEMBER IN "HELP" FORMAT - SEE PAGE 29 OF GC28-0648;
/*    "TSO GUIDE TO WRITING A TERMINAL MONITOR PROGRAM" FOR THE
/*    PROPER FORMAT.
/*
/*    NOTE: I N   A D D I T I O N --- THE SOURCE HELP DOCUMENTATION
/*          MUST BE BRACKETED WITH SENTINAL RECORDS IN THE FOLLOWING
/*          FORMAT:
/*
/*    FOR CLISTS: /* )STARTHELP
/*                /* )ENDHELP
/*
/*    FOR JCL:    //*)STARTHELP
/*                //*)ENDHELP
/*
/*    FOR NORMAL
/*    HELP DATA:  OMIT STARTHELP AND ENDHELP SENTINELS ENTIRELY.
/*                                                                  ----
/*
/* )X SYNTAX -  'BLDHELP'
/* )O OPERANDS - YOU WILL BE PROMPTED FOR THE FOLLOWING:
/*
/*      * ENTER SOURCE 'DATASET' OR 'DATASET(MEMBER)'
/*                -ENTER THE NAME OF THE DATASET TO BE TRANSCRIBED.
/*                 IF IT IS A PDS, INCLUDE (MEMBERNAME).
/*      * ENTER TARGET 'DATASET(MEMBER)' OR NULL TO UPDATE
/*               '&PREFIX..HELP.DATA(MEMBER)'.
/*                -ENTER THE NAME OF THE TARGET DATASET;
/*                 INCLUDE (MEMBERNAME)                             -OR-
/*                 DEPRESS ENTER TO UPDATE THE DEFAULT LIBRARY.
/*
/*             MISCELLANEOUS MESSAGES                                  -
/*
/*      *  DATASET NAMES WITHOUT QUOTES WILL BE PREFIXED WITH "PREFIX".
/*                 -INFORMATIONAL MESSAGE.
/*      *  SEQUENTIAL DATASET SPECIFIED OR ERROR SPECIFYING MEMBER.
/*                 -INFORMATIONAL MESSAGE. IMPLIES MISSING OR          -
UNBALANCED
/*                   PARENTHESES.
/*      *  PLEASE ENTER MEMBER NAME IN TARGET DATASET:
/*                 -OCCURS IF SEQUENTIAL SOURCE DATASET SPECIFIED.
/*                  ENTER MEMBER NAME.
/*      *  COMMAND "BLDJCL" INTENDED FOR   L I B R A R Y  USE ONLY.
/*         PLEASE SPECIFY TARGET IN THE FORM: 'DSNAME(MEMBER)'.
/*                 -NO TARGET MEMBER NAME WAS SPECIFIED. RE-ENTER
/*                  TARGET DATASET NAME AND MEMBER NAME.
/*      *  SPECIFY VOLUME-SERIAL NUMBER OR NULL IF CATALOGUED:
/*                 -ALLOWS USER TO BYPASS CATALOG  BY SPECIFYING
/*                  VOLUME SERIAL NUMBER. ENTER EITHER VOLUME-SERIAL
/*                  NUMBER OR NULL LINE TO ACCEPT CATALOG DEFAULT.
/*      *  SOURCE DATASET IS: DSNAME - TARGET DATASET IS: DSNAME
/*         IS THIS CORRECT? Y/N
/*                 -FINAL VERIFICATION MESSAGE. REPLY "Y" TO ALLOW
/*                  UPDATE OF TARGET DATASET. REPLY "N" TO RESPECIFY.
/*      *  UPDATE PROCEEDING.
/*                 -INFORMATIONAL MESSAGE. OCCURS AFTER RESPONDING "Y"
/*                  TO PREVIOUS MESSAGE.
/*      *  DON'T FORGET TO UPDATE THE APPROPRIATE MEMBER OF 'SYS2.HELP'
/*         WITH ONE-LINER POINTER IF THIS IS A NEW MEMBER.
/*                 -INFORMATIONAL MESSAGE.
/*                  MEMBER "INHOUSE" OR SHOULD BE UPDATED.
/*
/* )ENDHELP
CONTROL NOFLUSH NOMSG
SET &LCC EQ 0
IF &DEBUG NE &STR() THEN CONTROL CONLIST LIST MSG
REDO: +
SET &TARG EQ &STR(HELP.DATA)
WRITE DATASET NAMES WITHOUT QUOTES WILL BE PREFIXED WITH &SYSPREF..
WRITENR ENTER SOURCE 'DATASET' OR 'DATASET(MEMBER)'
READ
SET &SOURCE EQ &STR(&SYSDVAL)
SET &N EQ &LENGTH(&SOURCE)
DO WHILE &N GT 1
  IF &SUBSTR(&N,&SOURCE) EQ ) THEN +
  DO
    SET &M EQ &N
    SET &N EQ &N-1
    DO WHILE &SUBSTR(&N,&SOURCE) NE &STR((
      SET &N EQ &N-1
    END
    SET &MEMBER EQ &SUBSTR(&N+1:&M-1,&SOURCE)
    GOTO GETARG
  END
  SET &N EQ &N-1
END
WRITE SEQUENTIAL SOURCE DATASET SPECIFIED OR ERROR SPECIFYING MEMBER.
WRITENR PLEASE ENTER MEMBER NAME IN TARGET DATASET:
READ &MEMBER
GETARG: WRITE ENTER TARGET 'DATASET(MEMBER)' OR NULL TO UPDATE         -
'&SYSPREF..&TARG(&MEMBER)'
RESPEC: READ
SET &X EQ N
IF &SYSDVAL EQ &STR() THEN +
DO
  SET &TARG EQ '&SYSPREF..&TARG(&MEMBER)'
  SET &X EQ Y
END
/* ENSURE MEMBER OF TARGET DATASET IS SPECIFIED.*/
ELSE +
DO
  DO
    SET &TARG EQ &STR(&SYSDVAL)
    SET &N EQ &LENGTH(&TARG)
    DO WHILE &N GT 1
      IF &SUBSTR(&N,&TARG) EQ ) THEN +
      DO
        /* RIGHT PAREN FOUND, LOOK FOR LEFT PAREN. */
        SET &N EQ &N-1
        DO WHILE &SUBSTR(&N,&TARG) NE &STR((
          SET &N EQ &N-1
        END
        GOTO MEMFOUND
      END
      SET &N EQ &N-1
    END
  END
WRITE COMMAND "&SYSICMD" INTENDED FOR   L I B R A R Y  UPDATE ONLY.
WRITE PLEASE SPECIFY TARGET IN THE FORM: 'DSNAME(MEMBER)'.
GOTO RESPEC
END
MEMFOUND: +
SET &VOL EQ &STR()
SET &UNIT EQ &STR()
IF &X NE Y THEN +
DO
  WRITENR SPECIFY VOLUME-SERIAL NUMBER OR NULL IF CATALOGUED:
  READ &VOL
  IF &VOL EQ &STR() THEN GOTO FINAL
  SET &VOL EQ &STR(VOLUME(&VOL))
  SET &UNIT EQ UNIT(DISK)
END
FINAL: +
WRITE SOURCE DATASET IS: &SOURCE
WRITE TARGET DATASET IS: &TARG &VOL
WRITENR IS THIS CORRECT? Y/N
READ &YN
IF &YN NE Y THEN GOTO REDO
ATTN GOTO CLEANUP
WRITE UPDATE PROCEEDING.
FREE F(IN SYSUT1 SYSUT2) ATTR(XX)
ALLOC F(IN) DA(&SOURCE) SHR
ATTR XX LRECL(80) BLKSIZE(3120) DSORG(PS) RECFM(F B)
ALLOC F(SYSUT1) NEW SPACE(2) TRACKS USING(XX)
OPENFILE IN
OPENFILE SYSUT1 OUTPUT
ERROR +
DO
  SET &LCC EQ &LASTCC
  IF &LCC EQ 400 THEN GOTO LAST
  WRITE ABNORMAL END
  ELIST &LCC
  CLOSFILE IN
  CLOSFILE SYSUT1
  FREE F(IN SYSUT1 SYSUT2) ATTR(XX)
  EXIT
END
/*
/*  GET FIRST RECORD, DETERMINE IF CLIST OR PROCEDURE.
/*
SET &BLANK EQ &STR(                                                    -
                                                 )
SET &S EQ 100000100
GET: GETFILE IN
IF &DATATYPE(&SUBSTR(1:8,&IN)) EQ NUM THEN GOTO VARIABLE
ELSE GOTO FIXED
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
/*
/*  ROUTINE FOR FIXED LENGTH INPUT RECORDS.
/*
/*
/*  FIND FIRST SENTINEL (STARTHELP)
/*
GETF1: GETFILE IN
FIXED: IF &SUBSTR(5:13,&IN) NE STARTHELP THEN GOTO GETF1
/*
/*  SENTINEL FOUND. LOOP WRITING UNTIL ENDHELP FOUND.
/*
GETF2: GETFILE IN
IF &SUBSTR(5:11,&IN) EQ ENDHELP THEN GOTO LAST
/*
/* BUILD NEW OUTPUT RECORD WITH SEQUENCE NUMBER; WRITE RECORD.
/*
SET &SYSUT1 EQ &SUBSTR(4:72,&IN)&STR(                                  -
)&SUBSTR(&LENGTH(&S)-7:&LENGTH(&S),&S)
SET &S EQ &S+100
PUTFILE SYSUT1
GOTO GETF2
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
/*
/*  ROUTINE FOR VARIABLE LENGTH INPUT RECORDS.
/*
/*
/*  FIND FIRST SENTINEL (STARTHELP)
/*
GETV1: GETFILE IN
VARIABLE: IF &LENGTH(&IN) NE 21 THEN GOTO GETV1
IF &SUBSTR(13:21,&IN) NE STARTHELP THEN GOTO GETV1
GETV2: GETFILE IN
/*
/*  SENTINEL FOUND. TEST FOR SPACER RECORDS AND BUILD, IF FOUND.
/*
IF &LENGTH(&IN) LE 11 THEN +
DO
  SET &SYSUT1 EQ                                                       -
&SUBSTR(1:72,&STR(&BLANK))&SUBSTR(&LENGTH(&S)-7:&LENGTH(&S),&S)
  PUTFILE SYSUT1
  SET &S EQ &S+100
  GOTO GETV2
END
/*
/*  LOOK FOR ENDING SENTINEL (ENDHELP)
/*
IF &LENGTH(&IN) EQ 19 THEN +
DO
  IF &SUBSTR(13:19,&IN) EQ ENDHELP THEN GOTO LAST
END
/*
/*  PROCESS DETAIL RECORD INCLUDING NEW SEQUENCE NUMBER
/*
SET &SYSUT1 EQ &SUBSTR(12:&LENGTH(&IN),&IN)&STR(&BLANK)
SET &SYSUT1 EQ                                                         -
&SUBSTR(1:72,&STR(&SYSUT1))&SUBSTR(&LENGTH(&S)-7:&LENGTH(&S),&S)
PUTFILE SYSUT1
SET &S EQ &S+100
GOTO GETV2
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
LAST: +
ERROR OFF
CLOSFILE IN
CLOSFILE SYSUT1
IF &LCC EQ 400 THEN ALLOC F(SYSUT1) DA(&SOURCE) SHR
ALLOC F(SYSUT2) DA(&TARG) &VOL &UNIT SHR
FREE F(SYSIN SYSPRINT)
ALLOC F(SYSIN) DUMMY
ALLOC F(SYSPRINT) DUMMY
CALL 'SYS1.LINKLIB(IEBGENER)'
WRITE
WRITE DON'T FORGET TO UPDATE 'INHOUSE' IN SYS2.HELP
WRITE WITH ONE-LINE POINTER IF THIS IS A NEW MEMBER.
WRITE
CLEANUP: FREE F(SYSUT1 SYSUT2 SYSIN SYSPRINT IN) ATTR(XX)
ALLOC F(SYSIN) DA(*)
ALLOC F(SYSPRINT) DA(*)
