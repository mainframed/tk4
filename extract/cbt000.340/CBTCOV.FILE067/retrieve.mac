PROC 1 DATA LENGTHOFDATA(4) CHARACTER HEXADECIMAL X DEBUG
/*********************************************************************/
/* CLIST RETRIEVE .......IPCS SUBCOMMAND TO RETRIEVE DATA FROM A     */
/*         DUMP AND RETURN IT IN A GLOBAL CLIST VARIABLE.            */
/*                                                                   */
/* THE ADDRESS OF THE DATA TO BE RETURN IS THE REQUIRED FIRST PARM   */
/* THE LENGTH OF DATA IS OPTIONAL AND DEFAULTS TO 4 BYTES            */
/* THE CONVERSION IS EITHER HEX OR CHARACTER, HEX IS DEFAULT         */
/*                                                                   */
/* INVOKED BY ... SCANDMP                                            */
/*                                                                   */
/*                                                                   */
/*********************************************************************/
/*********************************************************************/
/* INITIALIZATION OF CLIST VARIABLES                                 */
/*********************************************************************/
 GLOBAL RVAL                             /* DEFINE GLOBAL FOR RETURN */
 CONTROL NOMSG NOFLUSH                   /* SET UP CONTROL OPTIONS   */
 IF &DEBUG = DEBUG THEN                  /* IF DEBUG MODE THEN         -
*/+
   CONTROL MSG LIST CONLIST SYMLIST      /*   SET ALL LIST OPTIONS   */
 SET HSTR=&STR(0123456789ABCDEF          /* SET HEX CONVERSION STR   */
 SET                                                         CSTR=&STR(-
                                                                 ......-
 ......... .<.+×..........                                       :#@.="-
                                                                 ......-
.ABCDEFGHI.......JKLMNOPQR........STUVWXYZ......0123456789......)
/*********************************************************************/
/* VALIDATE LENGTH PARAMETER                                         */
/*********************************************************************/
 IF &DATATYPE(&LENGTHOFDATA) NE NUM THEN /* IF NOT NUMERIC LENGTH      -
*/+
     SET &LENGTHOFDATA = 1               /*    THEN SET DEFAULT LEN  */
 ELSE                                    /* ELSE                       -
*/+
   IF &LENGTHOFDATA LE 0 THEN            /*   IF LENGTH IS TOO SMALL   -
*/+
     SET &LENGTHOFDATA = 1               /*     SET TO MIN VALUE     */
 IF &CHARACTER EQ CHARACTER THEN         /* CHARACTER CONVERSION       -
*/+
   DO                                    /*                          */
     IF &LENGTHOFDATA GT 256 THEN        /* CHECK MAX LENGTH           -
*/+
       SET D = &LENGTHOFDATA*2           /* SET LIST LENGTH          */
     SET &LD = &LENGTHOFDATA*2           /* SET LIST LENGTH          */
   END                                   /*                          */
 ELSE                                    /* ELSE HEX CONVERSION        -
*/+
   DO                                    /*                          */
     IF &LENGTHOFDATA GT 128 THEN        /* CHECK MAX HEX LENGTH       -
*/+
       SET LENGTHOFDATA=128              /*  SET MAX HEX LENGTH      */
     SET &LD = &LENGTHOFDATA             /* SET LIST LENGTH          */
   END                                   /*                          */
/*********************************************************************/
/* VALIDATE DATA PARAMETER TO SEE IF DATA EXISTS                     */
/*********************************************************************/
 SET RVAL=&SUBSTR(1:&LD,&STR(&CSTR))     /* SET DEFAULT STRING       */
 LIST &DATA. LEN(&LENGTHOFDATA.) CHAR    /* IPCS LIST TO VALIDATE    */
 IF &LASTCC >4 THEN                      /* CHECK LIST RETURN CODE     -
*/+
   EXIT CODE(16)                         /*  EXIT IF NON-ZERO        */
/*********************************************************************/
/* DATA RETRIEVED A BYTE AT A TIME VIA EVALUATE SUBCOMMAND           */
/*********************************************************************/
 SET OFF = 0                             /* INITIALIZE OFFSET        */
 SET RVAL=                               /* INITIALIZE RETURN STR    */
 IF &CHARACTER EQ CHARACTER THEN         /* IF CHARACTER CONVERSION    -
*/+
   DO WHILE &OFF LT &LENGTHOFDATA        /*  LOOP THRU BYTE BY BYTE  */
  /*******************************************************************/
  /* GET A BYTE AND CONVERT IT TO CHARACTER                          */
  /*******************************************************************/
     EVALUATE &DATA+&OFF.N LENGTH(1)     /* GET BYTE VALUE IN LASTCC */
     SET CC  = &LASTCC+1                 /* CREATE INDEX INTO CSTR   */
     SET RVAL= &STR(&RVAL&SUBSTR(&CC,&STR(&CSTR))) /* ADD CHAR TO STR*/
     SET OFF = &OFF+1                    /* BUMP TO NEXT BYTE        */
   END                                   /*                          */
 ELSE                                    /* ELSE HEX CONVERSION        -
*/+
   DO WHILE &OFF LT &LENGTHOFDATA        /* GET A BYTE AT A TIME     */
  /*******************************************************************/
  /* GET A BYTE AND CONVERT IT TO HEXADECIMAL                        */
  /*******************************************************************/
     EVALUATE &DATA+&OFF.N LENGTH(1)     /* GET BYTE VALUE IN LASTCC */
     SET CC  = &LASTCC                   /* SAVE LASTCC              */
     SET RVAL= &STR(&RVAL&SUBSTR(&EVAL(&CC/16+1),&HSTR)+
               &SUBSTR(&EVAL(&CC//16+1),&HSTR)) /* ADD BYTE TO STR   */
     SET OFF = &OFF+1                    /* BUMP TO NEXT BYTE        */
   END                                   /*                          */
/*********************************************************************/
/* THEN EXIT WITH DATA IN GLOBAL VARIABLE RVAL                       */
/*********************************************************************/
 EXIT CODE(0)                            /* EXIT - ALL'S WELL        */
