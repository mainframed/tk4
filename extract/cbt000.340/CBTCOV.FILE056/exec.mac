./ ADD NAME=FASTPATH                               15SEP93 22.16 --
/* ---------------------  rexx procedure  ---------------------- *
 * Name:      Fastpath                                           *
 *                                                               *
 * Function:  Display a selection list of all Selectable         *
 *            commands in the ISPCMDS ISPF Command Table         *
 *            to:                                                *
 *                                                               *
 *            1.  Provide the user with information on           *
 *                fast path commands available.                  *
 *            2.  Simplify access to fast path commands.         *
 *            3.  Provide a pseudo-menu to ISPF command          *
 *                functions.                                     *
 *                                                               *
 * Syntax:    %Fastpath                                          *
 *                                                               *
 * Author:    Lionel B. Dyck                                     *
 *            Rockwell International                             *
 *            P.O. Box 2515                                      *
 *            Seal Beach, California 90740                       *
 *            (310) 797-1125                                     *
 *            IBMMail:  USROKNTN                                 *
 *            Internet: lbdyck@osreq48.rockwell.com              *
 *            IBMLINK:  ROK2027                                  *
 *                                                               *
 * History:                                                      *
 *            02/23/93 Add 'Locate' option                       *
 *                                                               *
 *            02/17/93 Created.                                  *
 *                                                               *
 * ------------------------------------------------------------- */

/* ------------------------------------------------------------- *
 * Verify entry under ISPF                                       *
 * ------------------------------------------------------------- */
if "ACTIVE" <> sysvar('sysispf') then do
   exit 4
   end

null = ""

parse value '1 0 0 0' with crp rowcrp last_find new_counter

Address ISPEXEC
"Control Errors Return"

call Build_Table
"TBSort "fastcmds" Fields(fpcmd)"
"TBTop" fastcmds

User_Display:
do forever

usrrfind = "PASSTHRU"
"VPUT USRRFIND"

if src = 4 then "TBDispl" fastcmds
   else do
        "TBTOP" fastcmds
        "TBSKIP "fastcmds" NUMBER("crp")"
        if rowcrp = 0 then
           "TBDISPL "fastcmds" PANEL(FASTPATH)"
           else
           "TBDISPL "fastcmds" PANEL(FASTPATH)",
                   "CSRROW("rowcrp") AUTOSEL(NO)"
        end
src = rc
  if src > 4 then signal Out_A_Here

crp = ztdtop
rowcrp = null

if row <> null then
   if row > 0 then do
     "TBTop" fastcmds
     "TBSkip "fastcmds" NUMBER("row")"
     end

Usrrfind = null
"VPUT USRRFIND"

parse value null with zcmd_ok x_rc

Select
  When words(Zcmd) > 1 then do
       parse value zcmd with o1 o2
       if abbrev("L",o1,1) = 1 then call Loc_It
       if abbrev("FIND",o1,1) = 1 then call Find_It
       if zcmd_ok <> "ok" then do
          smsg = "Error"
          lmsg = "Invalid command:" zcmd
          call do_msg
          end
       end
  When zcmd = "RFIND" then do
       if lcmd = "LOC" then do
           zcmd = "RLOC" o2
           call Loc_it
           end
       else do
            zcmd = "RFIND" o2
            call Find_It
            end
       end
  When length(zcmd) = 0 then do
       if zsel = "S" then do
          if pos("&ZPARM",fpaction) > 0 then do
             pos = pos("&ZPARM",fpaction)
             left_act  = left(fpaction,pos-1)
             right_act = substr(fpaction,pos+6)
             opt = words(left_act)
             parse value word(left_act,opt) with fpopt "(" .
             fpinput = null
             if fpopt = "OPT" then do
                                   fpaction
                                   x_rc = 0
                                   end
                else do
                     "Addpop"
                     "Display Panel(Fastprom)"
                     x_rc = rc
                     "REMPOP"
                     if x_rc = 0 then
                        left_act""fpinput""right_act
                end
             end
         else do
              x_rc = 0
              fpaction
              end
       end
       if x_rc = 0 then
          signal Out_A_Here
       end
  otherwise nop
  end

end

/* ------------------------------------------------------------- *
 * Find_it routine to search the table entries for the           *
 * specified character string.  The search is done using         *
 * REXX instead of using the ISPF TBSCAN which is very limited.  *
 * ------------------------------------------------------------- */
Find_It:
   lcmd = "FIND"
   zcmd_ok = "ok"
   parse value zcmd with o1 argument
   upper argument
   argument = strip(argument)
   zsel = null
   crp = ztdtop
   find_loop = null
   search = null
   rowid = crp
   if o1 = "RFIND" then do
      last_find = last_find + 1
      "TBTOP " fastcmds
      "TBSKIP "fastcmds" Position(ROWID) Number("Last_find")"
      end
      else do
           "TBSKIP "fastcmds" Position(ROWID)"
           end
   if rc = 8 then do
                  s_smsg = "Wrapped"
                  "TBTOP " fastcmds
                  "TBSKIP "fastcmds" Position(ROWID)"
                  end
             else s_smsg = "Found"

   /* perform search */

   do forever
      search = translate(fpcmd fpdesc)
      if pos(argument,search) > 0 then do
         crp = rowid + 0
         rowcrp = crp
         last_find = crp
             smsg = s_smsg  /* "Found" */
             lmsg = argument "found during search in row:" crp
             call do_msg
         return
         end
      "TBSKIP "fastcmds" POSITION(Rowid)"
      if rc = 8 then do
            "TBTOP" fastcmds
             s_smsg = "Wrapped"
         if find_loop = "on" then do
             smsg = "Not Found"
             lmsg = argument "Not found during search"
             rowid = crp
             call do_msg
             return
             end
             else find_loop = "on"
         end
      zsel = null
      end
return

/* ------------------------------------------------------------- *
 * Loc_it routine to search the table fpcmd entries for the      *
 * specified character string.  The search is done using         *
 * REXX instead of using the ISPF TBSCAN which is very limited.  *
 * ------------------------------------------------------------- */
Loc_It:
   lcmd = "LOC"
   zcmd_ok = "ok"
   parse value zcmd with o1 argument
   upper argument
   argument = strip(argument)
   arg_len = length(argument)
   zsel = null
   crp = ztdtop
   find_loop = null
   search = null
   rowid = crp
   if o1 = "RLOC" then do
      last_find = last_find + 1
      "TBTOP " fastcmds
      "TBSKIP "fastcmds" Position(ROWID) Number("Last_find")"
      end
      else do
           "TBSKIP "fastcmds" Position(ROWID)"
           end
   if rc = 8 then do
                  s_smsg = "Wrapped"
                  "TBTOP " fastcmds
                  "TBSKIP "fastcmds" Position(ROWID)"
                  end
             else s_smsg = "Found"

   /* perform search */

   do forever
      search = translate(fpcmd)
      if left(search,arg_len) = argument then do
         crp = rowid + 0
         rowcrp = crp
         last_find = crp
             smsg = s_smsg  /* "Found" */
             lmsg = argument "found during search in row:" crp
             call do_msg
         return
         end
      "TBSKIP "fastcmds" POSITION(Rowid)"
      if rc = 8 then do
            "TBTOP" fastcmds
             s_smsg = "Wrapped"
         if find_loop = "on" then do
             smsg = "Not Found"
             lmsg = argument "Not found during search"
             rowid = crp
             call do_msg
             return
             end
             else find_loop = "on"
         end
      zsel = null
      end
return

/* ------------------------------------------------------------- *
 * Build table of fast path commands...................          *
 * ------------------------------------------------------------- */
 Build_Table:
 alias.  = null
 fast.   = null
 alias.0 = 0
 fast.0  = 0
 parse value 'cmd desc act len' with cmd desc act len
 fastcmds = "fast"random()
 "Tbcreate "fastcmds" Names(fpcmd fpdesc fpaction) Replace Share"
 if rc = 8 then do
   if build_rc8 = 'on' then do
      smsg = "Error"
      lmsg = "Fastpath dialog error - contact systems"
      call do_msg
      exit 8
      end
   "TBend" fastcmds
   build_rc8 = 'on'
   signal build_table
   end
 "Tbquery ISPCMDS Rownum(rows)"
 "Tbtop ISPCMDS"
 do i = 1 to rows
    "TBSkip ISPCMDS"
       if rc > 0 then leave
     Select
     when word(zctact,1) = "ALIAS" then do
        c = alias.0 + 1
        alias.c = zctverb zcttrunc zctact
        alias.0 = c
        end
     When word(zctact,1) = "SELECT" then do
        c = fast.0 + 1
        fast.c.cmd = zctverb
        fast.c.len = zcttrunc
        fast.c.act = zctact
        fast.c.desc = zctdesc
        fast.zctverb = c
        fast.0 = c
        end
     otherwise nop;
     end
 end

do i = 1 to alias.0
   parse value alias.i with vv vt val vac .
   cd = fast.vac
   if cd = null then iterate
   c = fast.0 + 1
   fast.c.cmd = vv
   fast.c.len = vt
   fast.c.act = fast.cd.act
   fast.c.desc = fast.cd.desc
   fast.0 = c
   end

do i = 1 to fast.0
   fcmd     = fast.i.cmd
   fpdesc   = fast.i.desc
   fpaction = fast.i.act
   flen     = fast.i.len
   if flen = 0 then fpcmd = fcmd
   if flen > 0 then do
      left = flen
      right = length(fcmd)-left
      upper = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
      lower = 'abcdefghijklmnopqrstuvwxyz'
      fcmd = translate(fcmd,lower,upper)
      fpcmd = translate(left(fcmd,left))""right(fcmd,right)
      end
  "TBadd" fastcmds
  "TBSkip" fastcmds
end

return

/* ------------------------------------------------------------- *
 * Do_msg routine is used to issue the ISPF Message....          *
 * ------------------------------------------------------------- */
Do_Msg:
   zedsmsg = smsg
   zedlmsg = lmsg
   "Setmsg Msg(ISRZ000)"
return

Out_A_Here:
 "Tbend" fastcmds
 "Libdef Fasttabl"
 Exit 0
