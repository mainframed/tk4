SAVE     TITLE 'QUEUE COMMAND - CREATE A COPY OF CURRENT DATASET' ONL01
SAVE     QSTART ,                  START SAVE CSECT ASSEMBLY      ONL01
         USING QCKPT,R10      BASE REG FOR CHECKPOINT WORK AREA
         L     R10,QVCKPT     LOAD BASE REG
         USING QDISPLAY,R9    BASE REG FOR DISPLAY WORK AREA
         L     R9,QVDSPL      LOAD BASE REG
         USING WORK,R13       LOCAL WORK AREA
***********************************************************************
*                                                                     *
*   ALLOCATE OUTPUT DATASET                                           *
*                                                                     *
***********************************************************************
         CLC   QPDSID,=X'FFFF'   IS THERE A VALID DATASET?          SBG
         BE    TILT1          NO. TELL THE USER.
         MVC   DSNAME+2(44),QBLANK BLANK THE DSNAME
         MVC   DSNAME+2(8),QPARM1 FIRST PART OF DSNAME
         LA    R1,DSNAME      ADDR OF DSNAME
         ST    R1,DA08PDSN    STORE IN PARM LIST
         LH    R2,QLNG1       LENGTH OF QPARM1
         LA    R1,2(R2,R1)    OFFSET INTO DSNAME
         LH    R3,QLNG2       LENGTH OF QPARM2
         LTR   R3,R3          ?/LENGTH ZERO
         BZ    DATA           YES. USE DATA AS DEFAULT DS TYPE
         MVI   0(R1),C'.'     MOVE IN DELIMITER
         MVC   1(8,R1),QPARM2 NO. SAVE DS TYPE
         LA    R1,1(R3,R2)    LENGTH OF DSNAME
         B     DSLNGH         GO SAVE LENGTH
DATA     MVC   0(5,R1),=C'.DATA' LAST PART OF DSNAME
         LA    R1,5(R2)       LENGTH OF DSNAME
DSLNGH   STH   R1,DSNAME      STORE LENGTH OF DSNAME
         MVC   DA08DDN(72),ALCLIST REMAINDER OF PARM LIST
         LH    R3,QLNG3       LENGTH OF QPARM3 (VOLSER)           UF028
         LTR   R3,R3          WAS IT SPECIFIED?                   UF028
         BZ    DSALLOC        NO, SKIP THIS                       UF028
         MVC   DA08SER(8),QPARM3  SET VOLSER                      UF028
DSALLOC  MVI   DAIRFLAG,X'08' INDICATE ALLOC FUNCTION
         L     R15,=V(ALLOCATE) ADDR OF DAIR MODULE
         BALR  R14,R15        GO TO IT
         MVC   QCOUT+36(1),QCRECFM MOVE IN RECORD FORMAT
         NI    QCOUT+36,X'06' TURN OFF EVERTHING BUT CCTL
         OI    QCOUT+36,X'90' SPECIFY FIXED BLOCKED RECORDS
         LH    R1,QCLRECL     RECORD LENGTH
         LTR   R1,R1          IS THE LRECL ZERO?
         BNZ   RECOK          NO. SKIP.
         LA    R1,133         YES. USE LRECL 133.
RECOK    STH   R1,QCOUT+82    STORE LRECL
BIGGER   LR    R2,R1          UPDATE BLKSIZE
         AH    R1,QCOUT+82    ADD LRECL TO BLKSIZE
         CH    R1,=H'4096'    IS THE BLKSIZE GREATER THAN 4096?
         BL    BIGGER         NO. MAKE IT BIGGER.
         STH   R2,QCOUT+62    STORE BLKSIZE
         OPEN  MF=(E,QCOPEN)
***********************************************************************
*                                                                     *
*   REPOSITION DATASET TO TOP                                         *
*                                                                     *
***********************************************************************
         L     R4,QCSTART     TOP OF DATASET POINTER
         L     R4,0(R4)       DISK ADDR TOP OF DATASET
         L     R5,QCBLKA      IOAREA ADDRESS
         B     FIRST          GO DO IT
***********************************************************************
*                                                                     *
*   PROCESS DATASET                                                   *
*                                                                     *
***********************************************************************
NEXTBLK  L     R4,0(R5)       DISK ADDR OF NEXT BLOCK
FIRST    LTR   R4,R4          IS THE DISK ADDR ZERO?
         BZ    END            YES. END OF DATASET.
         BAL   R8,READ        READ A BLOCK
         CLC   QPJOBID(6),4(R5) DOES THE JOBID MATCH?
         BE    IDISOK              BR IF SO                          CL
         L     R4,QCJQEA           ADDR OF JQE                       CL
         TM    JQEFLAG3-JQE(R4),JQE3SYSD END OF DATA SET             CL
         BNO   END                    IF NOT SYSTEM JQE              CL
         CLC   QPJOBID,4(R5)           ELSE JUST CHECK JOB KEY       CL
         BNE   END            NO. END OF DATASET.
IDISOK   LA    R4,10(R5)      ADDR OF FIRST RECORD IN BLOCK          CL
***********************************************************************
*                                                                     *
*   PROCESS RECORDS                                                   *
*                                                                     *
***********************************************************************
NEXTREC  CLI   0(R4),X'FF'    IS LENGTH BYTE FF?
         BE    NEXTBLK        YES. END OF BLOCK.
         TM    1(R4),X'10'    IS THIS A SPANNED RECORD?
         BO    SPAN           YES. SKIP IT.
         SR    R6,R6          ZERO OUT REG
         IC    R6,0(R4)       INSERT LENGTH
         TM    1(R4),X'80'    IS CCTL SPECIFIED?
         BZ    NOCCTL         NO. SKIP.
         LA    R6,1(R6)       INCREMENT LENGTH FOR CCTL
NOCCTL   TM    1(R4),X'08'    IS THIS RECORD TO BE IGNORED?
         BO    SKIPREC        YES. SKIP IT.
         MVI   BUFFER,C' '    BLANK FIRST BYTE OF BUFFER
         MVC   BUFFER+1(255),BUFFER BLANK THE BUFFER
         LR    R7,R6          DO NOT DESTROY R6
         SH    R7,=H'1'       IS LENGTH ZERO?
         BM    SKIPREC        YES. SKIP RECORD.
         EX    R7,MVCREC      MOVE RECORD TO BUFFER
         PUT   QCOUT,BUFFER
SKIPREC  LA    R4,3(R6,R4)    INCREMENT TO NEXT RECORD
         B     NEXTREC        PROCESS NEXT RECORD
SPAN     LH    R6,2(R4)       SEGMENT LENGTH
         TM    1(R4),X'08'    IS THIS THE FIRST SEGMENT?
         BO    SPANFRST       YES. USE LARGER HEADER SIZE.
         LA    R4,4(R6,R4)    INCREMENT TO NEXT RECORD
         B     NEXTREC        PROCESS NEXT RECORD
SPANFRST LA    R4,6(R6,R4)    INCREMENT TO NEXT RECORD
         B     NEXTREC        PROCESS NEXT RECORD
***********************************************************************
*                                                                     *
*   CLOSE UP SHOP AND GO HOME                                         *
*                                                                     *
***********************************************************************
END      CLOSE MF=(E,QCOPEN)
         MVI   DAIRFLAG,X'18' INDICATE FREE FUNCTION
         L     R15,=V(ALLOCATE) ADDR OF DAIR MODULE
         BALR  R14,R15        GO TO IT
         L     R15,=V(LISTDS) GO BACK TO LISTDS
         BALR  R14,R15        GO TO IT
         QSTOP
***********************************************************************
*                                                                     *
*   READ A BLOCK FROM HASPACE                                         *
*                                                                     *
***********************************************************************
READ     ST    R4,QCTRAK      STORE DISK ADDR
         LR    R1,R5          IOAREA ADDRESS
         L     R15,=V(READSPC) ADDR OF ROUTINE TO READ HASPACE
         BALR  R14,R15        GO TO IT
         BR    R8             RETURN TO CALLER
***********************************************************************
*                                                                     *
*   MISCELLANY                                                        *
*                                                                     *
***********************************************************************
TILT1    QTILT '*** YOU ARE NOT PROCESSING A VALID DATASET ***'
         LTORG
MVCREC   MVC   BUFFER(1),3(R4)
         DS    0F
ALCLIST  DC    C'HASPSAVE',CL16' ',F'0',F'10',F'50',F'0'
         DC    CL16' ',X'040202B0',F'0',CL8' '
SYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023
         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL01
         QCOMMON
         $JQE                                                        CL
         $HASPEQU
         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL01
SYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023
WORK     DSECT
         DS    CL80
BUFFER   DS    CL256
DSNAME   DS    H
         DS    CL44
         END
