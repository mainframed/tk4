         MACRO
&NAME    PADSVC &SVC=,&BATCH=NO,&PATCH=RESIDUAL
         GBLC  &OSREL,&XN,&YN
         LCLC  &NBR,&LOAD
         LCLC  &PLGN              LENGTH OF PATCH AREA
         LCLA  &MAXLGN            MAX LENGTH OF MODULE
*        PADSVC MACRO
*
*        CIRCUMVENT MODULE FROM EXCEEDING MAX LIMIT
*
LOWBYTE  EQU   ENTRY -            START OF MODULE
HIGHBYTE EQU   *-LOWBYTE -        LENGTH OF MODULE BEFORE PATCH AREA
.*
&PLGN    SETC  '&PATCH'
.*
.* ***** DETERMINE MAXIMUM LENGTH OF MODULE
.*
&MAXLGN  SETA  1024               MAX OS LIMIT FOR SVCS
         AIF   ('&BATCH' NE 'NO').VS
         AIF   ('&OSREL'(1,2) NE 'VS').OS
.*
.*                                VS1, SVS, MVS, AND BATCH
.VS      ANOP
&MAXLGN  SETA  2048               MAX LIMIT FOR SVCS FOR VS1
.*                                     OUR USAGE FOR SVS, MVS AND BATCH
         AIF   ('&PLGN' NE 'RESIDUAL').OS
&PLGN    SETC  '100'              LENGTH OF PATCH AREA
.*
.OS      ANOP
.*
.* ***** GENERATE CODE TO PREVENT TOO LARGE MODULE
.*
RESIDUAL EQU   (2*&MAXLGN+1-2*HIGHBYTE)/(2*&MAXLGN-2*HIGHBYTE)*(&MAXLGNX
               -HIGHBYTE)
         AIF   ('&PLGN' EQ 'NO').NOPATCH  DO NOT GENERATE PATCH AREA
         AIF   ('&PLGN' NE 'RESIDUAL').NOTNEG  PLGN SHOULD NOT CAUSE
.*                                          ORG TO GO NEGATIVE
.*             IF RESIDUAL IS ONE, ZERO OR NEGATIVE, THERE IS NOT
.*             ENOUGH ROOM FOR THE SVC ID. GENERATE CODE TO CATCH
.*             THIS ERROR.
         ORG   LOWBYTE+&PLGN-2 -  MUST BE 2 BYTES LEFT FOR ID
         DS    CL3 -              FORCE OS ERROR IF NOT
         ORG   LOWBYTE+HIGHBYTE - ALIGN PATCH AREA
.*
.* ***** GENERATE PATCH AREA
.*
.NOTNEG  ANOP
         DC    (&PLGN)X'00' -     PATCH AREA
         ORG   *-2 -              ALIGN SVC ID
.NOPATCH ANOP
.*
.* ***** DETERMINE SVC LOAD AND TYPE
.*
         AIF   (K'&SVC EQ 3).SVCOK
.SVCBAD  ANOP
         MNOTE 8,'UNKNOWN OR MISSING SVC TYPE'
         MEXIT
.SVCOK   ANOP
&NBR     SETC  '&XN'
         AIF   ('&SVC'(3,1) EQ 'X').SVCGOOD
&NBR     SETC  '&YN'
         AIF   ('&SVC'(3,1) NE 'Y').SVCBAD
.SVCGOOD ANOP
.*
&LOAD    SETC  '&SVC'(1,2)        SVC LOAD NUMBER
.*       IF PATCH AREA DOES NOT TAKE ALL THAT'S LEFT, MAKE SURE
.*       THE SVC ID IS AT THE TAIL END OF THE PROGRAM.
         CNOP  6,8 -              FORCE SVC ID TO END OF MODULE
         DC    YL1(&NBR),XL1'&LOAD' -   SVC NBR,LOAD NBR
.*
.* ***** GENERATE CODE TO MAKE SURE MODULE HAS NOT EXCEEDED MAX
.*
MODULELN EQU   *-LOWBYTE -        TOTAL LENGTH OF MODULE
&MAXLGN  SETA  &MAXLGN+1          MAX LENGTH OF MODULE PLUS 1
         ORG  LOWBYTE+(2*&MAXLGN-2*MODULELN)/(2*&MAXLGN-1-2*MODULELN)-1
         DS    CL(MODULELN-1) -   FORCE OS ERROR IF OVER MAX
         MEND
