         MACRO
&LBL     TSENTRY &Z,&BASE=12,&SYMREG=YES,&PL=,&GETMAIN=0,&MACRO=,      X
               &DSECT=NO,&LOAD=,&MAP=,&PARSE=,&EXIT=,&SP=1
.*** TSENTRY MACRO COPIED FROM UCLA MACRO LIBRARY
         GBLB  &GDAIRM,&GPARSEM         FLAGS TO AVOID DUPLICATES
         GBLB  &GDAIR,&GPARSE           DAIR OR PARSE LOADED
         LCLA  &A,&J
         LCLB  &C,&P,&D,&I,&M
         LCLC  &PARNAME                 ENTRY PARM IF PARSE LOADED
&PARNAME SETC  ''
TSDSECT  DSECT
TSAVE    DS    18F                      SAVE AREA
         TSCPPL
         AIF   ('&PL' EQ '').L12
TSECB    DS    F                        ECB FOR THE TSO SERVICES
&A       SETA  1
.L1      AIF   ('&PL(&A)' NE 'CSCAN').L2
&C       SETB  1
         AGO   .L7
.L2      AIF   ('&PL(&A)' NE 'PARSE').L3
&P       SETB  1
         AGO   .L7
.L3      AIF   ('&PL(&A)' NE 'DAIR').L4
&D       SETB  1
         AGO   .L7
.L4      AIF   ('&PL(&A)' NE 'IO').L5
&I       SETB  1
         AGO   .L7
.L5      AIF   ('&PL(&A)' NE 'MESSAGE').L6A
&M       SETB  1
         AGO   .L7
.L6A     AIF   ('&PL(&A)' NE 'DAIRM').L6
&D       SETB  1                        DAIR PARAMETER LISTS
         AGO   .L7
.L6      MNOTE 4,'UNKNOWN PL PARAMETER = &PL(&A)'
.L7      ANOP
&A       SETA  &A+1
         AIF   (&A LE N'&PL).L1
         AIF   ('&PARSE(2)' EQ '').L7E
&M       SETB  1                        GENERATE THE MESSAGE STUFF
.L7E     AIF   (NOT &C).L8
         TSCSPL
.L8      AIF   (NOT &P).L9
         TSPPL
.L9      AIF   (NOT &D).L10
         TSDAPL
DAPBAREA DS    22F *                    AREA FOR DAIR PARAMETER BLOCK
         TSDMPL
.L10     AIF   (NOT &I).L11
         TSIOPL
.L11     AIF   (NOT &M).L12
         TSMPL
.L12     ANOP
&J       SETA  0
.L12L    ANOP
&J       SETA  &J+1
         AIF   ('&LOAD(&J)'  EQ  '').L12Z
&LOAD(&J) DS   F
         AGO   .L12L
.L12Z    AIF   ('&MACRO' NE 'YES').L12A
         SPACE 2
***********************************************************************
*                                                                     *
*        DYNAMIC STORAGE DEFINED BY USER TSWORK MACRO                 *
*                                                                     *
***********************************************************************
         SPACE
         DS    0D                       BEGIN ON DOUBLE WORD BOUNDARY
         TSWORK
.L12A    AIF   ('&GETMAIN' EQ '0').L12B
TSWORK   DS    0D                       POINTER TO USER WORK AREA
.L12B    ANOP
TSDSECTL DS    0D
         AIF   ( NOT &D ).NODM
         AIF   ( &GDAIRM ).NODM
&GDAIRM  SETB  1                        SET 1 TIME FLAG
         EJECT
         IKJDAP04
DAPB04L  EQU   *-DAPB04 *               LENGTH OF DAPB04 BLOCK
         EJECT
         IKJDAP08
DAPB08L  EQU   *-DAPB08 *               LENGTH OF DAPB08 BLOCK
         EJECT
         IKJDAP18
DAPB18L  EQU   *-DAPB18 *               LENGTH OF DAPB18 BLOCK
         EJECT
         IKJDAP1C
DAPB1CL  EQU   *-DAPB1C *               LENGTH OF DAPB1C BLOCK
         EJECT
         IKJDAP30
DAPB30L  EQU   *-DAPB30 *               LENGTH OF DAPB30 BLOCK
.NODM    ANOP
&J       SETA  0
         AGO   .L32B
.L32L    ANOP
         MNOTE *,'GENERATED DSECT FOR &MAP(&J) '
.L32B    ANOP
&J       SETA  &J+1
         AIF   ('&MAP(&J)'  EQ  '').L32Z
         EJECT
         AIF   ('&MAP(&J)' EQ 'ECT').ECT
         AIF   ('&MAP(&J)' EQ 'PSCB').PSCB
         AIF   ('&MAP(&J)' EQ 'UPT').UPT
         AIF   ('&MAP(&J)' EQ 'DSE').DSE
         AIF   ('&MAP(&J)' EQ 'JSCB').JSCB
         AIF   ('&MAP(&J)' EQ 'TSCVT').TSCVT
         AIF   ('&MAP(&J)' EQ 'TJB').TJB
         AIF   ('&MAP(&J)' EQ 'TJBX').TJBX
         AIF   ('&MAP(&J)' EQ 'TSB').TSB
         AIF   ('&MAP(&J)' EQ 'TCB').TCB
         AIF   ('&MAP(&J)' EQ 'CVT').CVT
         AIF   ('&MAP(&J)' EQ 'DAPB00').DAPB00
         AIF   ('&MAP(&J)' EQ 'DAPB04').DAPB04
         AIF   ('&MAP(&J)' EQ 'DAPB10').DAPB10
         AIF   ('&MAP(&J)' EQ 'DAPB14').DAPB14
         AIF   ('&MAP(&J)' EQ 'DAPB2C').DAPB2C
         AIF   ('&MAP(&J)' EQ 'DAPB34').DAPB34
         AIF   ('&MAP(&J)' EQ 'PDEDSECT').PDEDS
         MNOTE 4,'UNSUPPORTED MAP PARAMETER &MAP(&J) '
         AGO   .L32L
.ECT     IKJECT
         AGO   .L32L
.PSCB    IKJPSCB
         AGO   .L32L
.UPT     IKJUPT
         AGO   .L32L
.DSE     IKJDSE
         AGO   .L32L
.TSB     IKJTSB
         AGO   .L32L
.TCB     IKJTCB
         AGO   .L32L
.CVT     ANOP
         CVT   LIST=YES,DSECT=YES
         AGO   .L32L
.JSCB    IEZJSCB
         AGO   .L32L
.TSCVT   IKJTSCVT
         AGO   .L32L
.TJB     IKJTJB
         AGO   .L32L
.TJBX    IKJTJBX
         AGO   .L32L
.DAPB00  IKJDAP00
DAPB00L  EQU   *-DAPB00                 LENGTH OF DAPB00
         AGO   .L32L
.DAPB04  IKJDAP04
DAPB04L  EQU   *-DAPB04                 LENGTH OF DAPB04
         AGO   .L32L
.DAPB10  IKJDAP10
DAPB10L  EQU   *-DAPB10                 LENGTH OF DAPB10
         AGO   .L32L
.DAPB14  IKJDAP14
DAPB14L  EQU   *-DAPB14                 LENGTH OF DAPB14
         AGO   .L32L
.DAPB2C  IKJDAP2C
DAPB2CL  EQU   *-DAPB2C                 LENGTH OF DAPB10
         AGO   .L32L
.DAPB34  IKJDAP34
DAPB34L  EQU   *-DAPB34                 LENGTH OF DAPB34
         AGO   .L32L
.PDEDS   PDEDSECT
         AGO   .L32L
.L32Z    AIF   ('&SYMREG' NE 'YES').L13
         EJECT
***********************************************************************
*                                                                     *
*                   DEFINE SYMBOLIC REGISTERS                         *
*                                                                     *
***********************************************************************
         SPACE 2
R0       EQU   0                        THE SYMBOLIC REGISTERS
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
.L13     AIF   ('&DSECT' NE 'NO').L19
         EJECT
&LBL     CSECT
         TSAVE (14,12),,*
         USNGX &LBL,&BASE(1)
         LR    &BASE(1),15              ESTABLISH ADDRESSABILITY
         AIF   ('&BASE(2)' EQ '').NOBASE2
         LA    &BASE(2),4095(&BASE(1))  EXTEND PROGRAM ADDRESSIBLITY
         LA    &BASE(2),1(&BASE(2))     WITH 2ND PROGRAM BASE REGISTER
         USNGX &LBL+4096,&BASE(2)
         AIF   ('&BASE(3)' EQ '').NOBASE2
         MNOTE 4,'BASE REGISTER &BASE(3) WAS NOT ESTABLISHED'
         MNOTE 4,'ONLY 2 BASE REGISTERS ARE SUPPORTED'
.NOBASE2 LR    5,1                      SAVE PTR TO CPPL
         GETMAIN R,LV=TSDSECTL-TSDSECT+&GETMAIN,SP=&SP
         ST    13,4(1)                  DO SAVE AREA CHAINING
         ST    1,8(13)
         LR    13,1                     ESTABLISH ADDRESSABILITY
         USNGX TSDSECT,13               FOR THE TSDSECT
         MVC   CPPL(CPPLL),0(5)         COPY CPPL TO TS AREA
         AIF   (NOT(&C OR &P OR &D OR &I OR &M)).L18A
         L     1,CPPLUPT                GET PTR TO UPT
         L     2,CPPLECT                GET PTR TO ECT
         LA    3,TSECB                  GET PTR TO ECB
         SR    0,0                      CLEAR ECB
         ST    0,TSECB
         AIF   (NOT &C).L14
         STM   1,3,CSPL                 INITIALIZE CSPL
         ST    0,CSFLG                  ZERO CSFLG
         LA    4,CSFLG
         ST    4,CSPLFLG
         LA    4,CSOA
         ST    4,CSPLOA
.L14     AIF   (NOT &P).L15
         STM   1,3,PPL                  INITIALIZE PPL. UPT,ECT,ECB
         LA    4,TSPARANS               ADRS OF PARSE ANSWER PLACE
         ST    4,PPLANS                 POINTER TO ADRS OF PARSE ANSWER
         ST    13,PPLUWA                PARSE USER WORK AREA POINTER
         XC    TSPARANS(4),TSPARANS     TO AVOID DUPLICATE IKJRLSA
.L15     AIF   (NOT &D).L16
         STM   1,3,DAPL                 INITIALIZE DAPL
         L     4,CPPLPSCB               GET PTR TO PSCB
         ST    4,DAPLPSCB               SET POINTER TO PSCB
.L16     AIF   (NOT &I).L17
         STM   1,3,IOPL                 INITIALIZE IOPL
.L17     AIF   (NOT &M).L18A
         ST    3,MPLECB                 INITIALIZE MPL, PTR TO ECB
         LA    4,CPPL                   ADDRESS OF CPPL
         ST    4,MPLCPPL                PTR TO CPPL
         LA    4,MPLCSECT               PTR TO MESSAGE CSECT
         ST    4,MPLCSECP               PTR TO MESSAGE CSECT ADDRESS
         XC    MPLSW(MPLZL),MPLSW       INITIALIZE REMAINING MPL TO 0
.L18A    ANOP
&J       SETA  0
.L72L    ANOP
&J       SETA  &J+1
         AIF   ('&LOAD(&J)'  EQ  '').L72Z
         SPACE 2
         LOAD  EP=&LOAD(&J)
         ST    0,&LOAD(&J)
         MNOTE *,'MODULE  &LOAD(&J) LOADED'
         AIF   ('&LOAD(&J)'  NE  'IKJDAIR').L72P
&GDAIR   SETB  1                        INDICATE DAIR LOADED
         AGO   .L72L
.L72P    AIF   ('&LOAD(&J)'  NE  'IKJPARS').L72L
&GPARSE  SETB  1                        PARSE WAS LOADED
&PARNAME SETC  'IKJPARS'
         AGO   .L72L
.L72Z    AIF   ('&PARSE(1)'   EQ '').L57K
         EJECT
***********************************************************************
*                                                                     *
*        PARSE THE COMMAND LINE                                       *
*                                                                     *
***********************************************************************
         SPACE 2
         TSPARSE CBUF=(CPPLCBUF,I),PCL=(=V(&PARSE(1)),I),              *
               SYNAD=&PARSE(2),ENTRY=&PARNAME
         MNOTE *,'COMMAND LINE WILL BE PARSED'
.L57K    AIF   ('&PARSE(2)' EQ '' AND '&EXIT' EQ '').L18
         B     TSE&SYSNDX
         AIF   ('&PARSE(2)'  EQ  '' OR &GPARSEM EQ 1).L57M
         EJECT
***********************************************************************
*                                                                     *
*        PARSE ERROR ANALYSIS SUBROUTINE                              *
*                                                                     *
***********************************************************************
         TSPARERR
         MNOTE  *,'PARSE ERROR ANALYSIS ROUTINE GENERATED'
&GPARSEM SETB  1                        PARSE ERROR ANALYSIS GENERATED
.L57M    AIF   ('&EXIT' EQ '').L58K
         EJECT
***********************************************************************
*                                                                     *
*        COMMAND PROCESSOR EXIT                                       *
*                                                                     *
***********************************************************************
         SPACE 2
&EXIT(1) EXIT  RC=(15),LV=TSDSECTL-TSDSECT,SP=&SP
         MNOTE *,'BRANCH TO &EXIT WITH RC IN R15 TO EXIT'
.L58K    SPACE 2
TSE&SYSNDX DS  0H
.L18     MNOTE *,'THE FOLLOWING BASES HAVE BEEN ESTABLISHED'
         MNOTE *,' '
         MNOTE *,'USING   TSDSECT,13'
         MNOTE *,'USING   &LBL,&BASE(1) '
         AIF   ('&BASE(2)' EQ '').L19
         MNOTE *,'USING   &LBL+4096,&BASE(2)'
         SPACE 5
.L19     MEND
