         MACRO
         TSDSECT &BLOCKS,&WORK=,&GEN=
         COPY  MATGBL
         LCLC  &A(50)
         LCLC  &BL,&R,&IHB
         LCLA  &I,&J,&K,&#TSD3,&LC
         LCLB  &NO,&CP,&CPECB,&BS
         AIF   ('&WORK' EQ'').NOWORK
&MATTSD2 SETC  '&WORK'
.NOWORK  ANOP
&A(1)    SETC  'DAPL'
&A(2)    SETC  'DAPB'
&A(3)    SETC  'DAECB'
&A(4)    SETC  'ADAIR'
&A(5)    SETC  'DEPL'
&A(6)    SETC  'AEFF18'
&A(7)    SETC  'PPL'
&A(8)    SETC  'PECB'
&A(9)    SETC  'PEPL'
&A(10)   SETC  'APARS'
&A(11)   SETC  'AEFF02'
&A(12)   SETC  'PERR'
&A(13)   SETC  'IOPL'
&A(14)   SETC  'PTPB'
&A(15)   SETC  'GTPB'
&A(16)   SETC  'PGPB'
&A(17)   SETC  'STPB'
&A(18)   SETC  'AIOPT'
&A(19)   SETC  'AIOGT'
&A(20)   SETC  'AIOPG'
&A(21)   SETC  'AIOST'
&A(22)   SETC  'IOECB'
&A(23)   SETC  'CSPL'
&A(24)   SETC  'CSECB'
&A(25)   SETC  'CPPL'
&A(26)   SETC  'CPECB'
&A(27)   SETC  'BLDL'
&A(28)   SETC  'SAV2'
&A(29)   SETC  'BASESAVE'
&A(30)   SETC  'REGS'
&A(31)   SETC  'LPL'
&A(32)   SETC  'ASCAN'
&A(33)   SETC  'AERASE'
&#TSD3   SETA  33
&I       SETA  N'&SYSLIST
&J       SETA  1
.LOOP1   AIF   (&J GT &I).CGEN
         AIF   ('&SYSLIST(&J)'(1,2) EQ 'NO').OPTNO
&BL      SETC  '&SYSLIST(&J)'
&NO      SETB  0
.SLOOP   ANOP
&K       SETA  1
.LOOP2   AIF   (&K GT &#TSD3).ERR2
         AIF   ('&A(&K)' EQ '&BL').HAVEO
&K       SETA  &K+1
         AGO   .LOOP2
.HAVEO   AIF   (&NO).HAVENO
&MATTSD3(&K) SETC  'Y'
         AGO   .INCR1
.HAVENO  ANOP
&MATTSD3(&K) SETC 'N'
.INCR1   ANOP
&J       SETA  &J+1
         AGO   .LOOP1
.OPTNO   ANOP
&NO      SETB  1
&BL      SETC  '&SYSLIST(&J)'(3,K'&SYSLIST(&J)-2)
         AGO   .SLOOP
.ERR2    MNOTE 4,'&BL IS NOT DEFINED TO TSDSECT'
         AGO   .INCR1
.CGEN    AIF   ('&GEN' NE 'YES').END
&R       SETC  '&MATREGS'
         AIF   ('&MATTSD3(25)' NE 'Y').NOCPPL
         EJECT
*        TSCPPL *
         TSCPPL *
.NOCPPL  ANOP
         AIF   ('&MATTSD3(31)' NE 'Y').NOLPL
         EJECT
*        TSLPL
         TSLPL
.NOLPL   ANOP
         EJECT
***********************************************************************
*                                                                     *
*        TSDSECT - DYNAMIC CORE FOR LOCAL TSO COMMAND PROCESSERS      *
*                                                                     *
***********************************************************************
         SPACE 3
TSDSECT  DSECT ,
TSDSAVE  DS    18A
         AIF   ('&MATTSD3(28)' NE 'Y').NOSAV2
TSDSAV2  DS    18A
.NOSAV2  ANOP
         AIF   ('&MATTSD3(29)' NE 'Y').NOBASE
TSDBSAV  DS    &MATTSB2.A
.NOBASE  ANOP
         AIF   ('&MATTSD3(25)' NE 'Y').NOCPPL2
TSDCPPLP DS    A .                      POINTER TO CPPL
.NOCPPL2 ANOP
         AIF   ('&MATTSD3(26)' NE 'Y').NOCPECB
TSDCPECB DS    F .                      COMMAND PROCESSOR ECB (DEFAULT)
.NOCPECB ANOP
&BS      SETB  ('&MATTSD3(6)' EQ 'Y' OR &BS)
&BS      SETB  ('&MATTSD3(5)' EQ 'Y' OR &BS)
&BS      SETB  ('&MATTSD3(11)' EQ 'Y' OR &BS)
&BS      SETB  ('&MATTSD3(12)' EQ 'Y' OR &BS)
         AIF   (NOT &BS).NOAFF02
&BS      SETB  0
         SPACE 1
TSDAFF02 DS    A .                      A(IKJEFF02)
.NOAFF02 ANOP
&BS      SETB  (&BS OR '&MATTSD3(1)' EQ 'Y')
&BS      SETB  (&BS OR '&MATTSD3(2)' EQ 'Y')
&BS      SETB  (&BS OR '&MATTSD3(3)' EQ 'Y')
&BS      SETB  (&BS OR '&MATTSD3(4)' EQ 'Y')
&BS      SETB  (&BS OR '&MATTSD3(5)' EQ 'Y')
&BS      SETB  (&BS OR '&MATTSD3(6)' EQ 'Y')
         AIF   (NOT &BS).NODAIR
&BS      SETB  0
         EJECT
***********************************************************************
*        CONTROL BLOCKS AND WORK AREAS FOR IKJDAIR                    *
*                                                                     *
***********************************************************************
         SPACE 2
         AIF   ('&MATTSD3(1)' NE 'Y').NODAPL
*        TSDAPL
         TSDAPL
.NODAPL  ANOP
         AIF   ('&MATTSD3(2)' NE 'Y').NODAPB
         SPACE 1
TSDDAPB  DS    XL84 .                   MAX SIZE DAPB
         SPACE 1
         DS    0H .           ALIGN DSN FIELD
TSDDSNLN DS    0CL46 .        DATA SET NAME & LENGTH
TSDDSNL  DS    H .            L'DSN
TSDDSN   DS    CL44 .         DATA SET NAME
.NODAPB  ANOP
         AIF   ('&MATTSD3(3)' NE 'Y').NODAECB
         SPACE 1
TSDDAECB DS    F .                      DAIR ECB
.NODAECB ANOP
         AIF   ('&MATTSD3(4)' NE 'Y').NOADAIR
         SPACE 1
TSDADAIR DS    A .                      A(IKJDAIR)
.NOADAIR ANOP
         AIF   ('&MATTSD3(5)' NE 'Y').NODEPL
         SPACE 1
*        TSDEPL
         TSDEPL
         SPACE 1
TSDDAER  DS    F .                      IKJDAIR ERROR RETURN CODE
TSDDACAL DS    H .                      IKJEFF18 CALLING CODE
         DS    H .                      RESERVED
.NODEPL  ANOP
         AIF   ('&MATTSD3(6)' NE 'Y').NOAFF18
TSDAFF18 DS    A .                      A(IKJEFF18)
.NOAFF18 ANOP
.NODAIR  ANOP
&BS      SETB  (&BS OR '&MATTSD3(7)' EQ 'Y')
&BS      SETB  (&BS OR '&MATTSD3(8)' EQ 'Y')
&BS      SETB  (&BS OR '&MATTSD3(9)' EQ 'Y')
&BS      SETB  (&BS OR '&MATTSD3(10)' EQ 'Y')
&BS      SETB  (&BS OR '&MATTSD3(12)' EQ 'Y')
         AIF   (NOT &BS).NOPARSE
&BS      SETB  0
         EJECT
***********************************************************************
*                                                                     *
*        CONTROL BLOCKS AND WORK AREAS FOR IKJPARS                    *
*                                                                     *
***********************************************************************
         SPACE 2
         AIF   ('&MATTSD3(7)' NE 'Y').NOPPL
*        TSPPL
         TSPPL
TSDPANS  DS    F .                      IKJPARSE ANSWER PLACE
.NOPPL   ANOP
         AIF   ('&MATTSD3(8)' NE 'Y').NOPAECB
         SPACE 1
TSDPECB  DS    F .                      IKJPARSE ECB
.NOPAECB ANOP
         AIF   ('&MATTSD3(10)' NE 'Y').NOAPARS
         SPACE 1
TSDAPARS DS    A .            A(IKJPARS)
.NOAPARS ANOP
         AIF   ('&MATTSD3(9)' NE 'Y').NOPEPL
         TSPEPL
         SPACE 1
TSDPAER  DS    F .                      IKJPARSE ERROR RETURN CODE
TSDPACA  DS    H .                      IKJEFF02 ERROR ENTRY CODE
         DS    H .                      RESERVED
.NOPEPL  ANOP
.NOPARSE ANOP
         AIF   ('&MATTSD3(33)' NE 'Y').NOERASE
TSDERAS  DS    F                        ADDRESS OF SCREEN ERASE MODULE
.NOERASE ANOP
&BS      SETB  (&BS OR '&MATTSD3(13)' EQ 'Y')
&BS      SETB  (&BS OR '&MATTSD3(14)' EQ 'Y')
&BS      SETB  (&BS OR '&MATTSD3(15)' EQ 'Y')
&BS      SETB  (&BS OR '&MATTSD3(16)' EQ 'Y')
&BS      SETB  (&BS OR '&MATTSD3(17)' EQ 'Y')
&BS      SETB  (&BS OR '&MATTSD3(18)' EQ 'Y')
&BS      SETB  (&BS OR '&MATTSD3(19)' EQ 'Y')
&BS      SETB  (&BS OR '&MATTSD3(20)' EQ 'Y')
&BS      SETB  (&BS OR '&MATTSD3(21)' EQ 'Y')
&BS      SETB  (&BS OR '&MATTSD3(22)' EQ 'Y')
&BS      SETB  (&BS OR '&MATTSD3(23)' EQ 'Y')
&BS      SETB  (&BS OR '&MATTSD3(32)' EQ 'Y')
         AIF   (NOT &BS).NOIO
&BS      SETB  0
         EJECT
***********************************************************************
*                                                                     *
*        CONTROL BLOCKS AND WORK AREAS FOR TERMINAL I/O               *
*                                                                     *
***********************************************************************
         SPACE 2
         AIF   ('&MATTSD3(13)' NE 'Y').NOIOPL
*        TSIOPL
         TSIOPL
.NOIOPL  ANOP
         AIF   ('&MATTSD3(22)' NE 'Y').NOIOECB
         SPACE 1
TSDIOECB DS    F .                      ECB FOR I/O SERVICE ROUTINES
.NOIOECB ANOP
         AIF   ('&MATTSD3(14)' NE 'Y').NOPTPB
         EJECT
*        TSPTPB
         TSPTPB
.NOPTPB  ANOP
         AIF   ('&MATTSD3(18)' NE 'Y').NOAPUTL
         SPACE 1
TSDAPUTL DS    A .                      A(IKJPUTL)
.NOAPUTL ANOP
         AIF   ('&MATTSD3(15)' NE 'Y').NOGTPB
         EJECT
*        TSGTPB
         TSGTPB
.NOGTPB  ANOP
         AIF   ('&MATTSD3(19)' NE 'Y').NOAGETL
         SPACE 1
TSDAGETL DS    A .                      A(IKJGETL)
.NOAGETL ANOP
         AIF   ('&MATTSD3(16)' NE 'Y').NOPGPB
         EJECT
*        TSPGPB
         TSPGPB
.NOPGPB  ANOP
         AIF   ('&MATTSD3(20)' NE 'Y').NOAPTGT
         SPACE 1
TSDAPTGT DS    A .                      A(IKJPTGT)
.NOAPTGT ANOP
         AIF   ('&MATTSD3(17)' NE 'Y').NOSTPB
         EJECT
*        TSSTPB
         TSSTPB
.NOSTPB  ANOP
         AIF   ('&MATTSD3(21)' NE 'Y').NOASTAK
         SPACE 1
TSDASTCK DS    A .                      A(IKJSTCK)
.NOASTAK ANOP
.NOIO    ANOP
&BS      SETB  ('&MATTSD3(23)' EQ 'Y')
&BS      SETB  (&BS OR '&MATTSD3(24)' EQ 'Y')
&BS      SETB  (&BS OR '&MATTSD3(32)' EQ 'Y')
         AIF   (NOT &BS).NOCOM
         EJECT
***********************************************************************
*                                                                     *
*        CONTROL BLOCKS AND WORK AREAS FOR COMMAND SCAN               *
*                                                                     *
***********************************************************************
         SPACE 2
         AIF   ('&MATTSD3(23)' NE 'Y').NOCSPL
*        TSCSPL
         TSCSPL
TSDCSFLG DS    F .                      COMMAND SCAN FLAGS
*        TSCSOA
         TSCSOA
.NOCSPL  ANOP
         AIF   ('&MATTSD3(24)' NE 'Y').NOCSECB
         SPACE 1
TSDCSECB DS    F .                      COMMAND SCAN ECB
.NOCSECB ANOP
         AIF   ('&MATTSD3(32)' NE 'Y').NOASCAN
         SPACE 1
TSDASCAN DC    A(0) .                   A(IKJSCAN)
.NOASCAN ANOP
.NOCOM   ANOP
         AIF   ('&MATTSD3(27)' NE 'Y').NOBLDL
         EJECT
***********************************************************************
*                                                                     *
*        CONTROL BLOCKS AND WORK AREAS FOR PDS VALIDATION             *
*                                                                     *
***********************************************************************
         SPACE 2
*        DCB   DSORG=PO,MACRF=R
TSDDCB1  DCB   DSORG=PO,MACRF=R
TSDDCBLN EQU   *-TSDDCB1
         ORG   TSDDCB1
TSDDCB   DS    CL(TSDDCBLN)
         SPACE 2
         DS    0D .                     ALIGN BLDL WORK AREA
TSDBLDL  DS    XL60
         SPACE 1
TSDOPEN  DS    F .                      L-FORM OPEN/CLOSE/RDJFCB
.NOBLDL  ANOP
         EJECT
TSDUSER  DS    0D .                     ALIGN USER WORK AREA
         AIF   ('&MATTSD2' EQ '').NOWORK1
TSDWORK  EQU   * .                      START OF USER WORK AREA
         MNOTE *,'&MATTSD2 BYTES OF STORAGE ASSIGNED FOR'
         MNOTE *,'USER WORK AREA'
.NOWORK1 ANOP
TSDEND   EQU   *
TSDLEN   EQU   TSDEND-TSDSECT .         LENGTH OF DYNAMIC CORE
         AIF   ('&MATTSD3(30)' NE 'Y').NOREGS
         EJECT
***********************************************************************
*                                                                     *
*        SYMBOLIC REGISTER EQUATES                                    *
*                                                                     *
***********************************************************************
         SPACE 3
         REGEQU
.NOREGS  ANOP
         EJECT
***********************************************************************
*                                                                     *
*        TSDSECT INITIALIZATION CODE ENTERED FROM TSBEGIN             *
*                                                                     *
***********************************************************************
         SPACE 2
&MATSECT CSECT .                        RESUME USER CSECT
         SPACE
&MATTSD1 DS    0H .                     EP FOR INIT CODE
         RUSE  &MATTSD1,&R.14 .         TELL ASSEMBLER
         LR    &R.2,&R.1 .              SAVE CPPL POINTER
         ST    &R.14,8(,&R.13) .        SAVE RET ADDR
         LR    &R.14,&R.15 .            SET BASE REG
         L     &R.0,TSDSPLEN .          GET SUBPOOL & DSECT LEN
*        GETMAIN R,LV=(0)               BUY DYNAMIC WORK AREA
         GETMAIN R,LV=(0)
         L     &R.15,8(,&R.13) .        GET RET ADDR
         ST    &R.1,8(,&R.13) .         POINT TO LSA
         XC    0(72,&R.1),0(&R.1) .     CLEAR SA PART OF CORE
         ST    &R.15,0(,&R.1) .         SAVE RET ADDR IN SA
         ST    &R.13,4(,&R.1) .         POINT TO HSA
         LR    &R.13,&R.1 .             SET NEW SA ADDR
         RUSE  TSDSECT,&R.13 .          TELL ASSEMBLER
IHB&SYSNDX.C LA &R.1,72(&R.1) .         POINT PAST SA
         L     &R.15,TSDSPLEN .         GET LEN OF DYNAMIC CORE
         LA    &R.15,0(,&R.15) .        CLEAR THE SUBPOOL
         SH    R15,IHB&SYSNDX.C+2 .     LESS THE SA
         B     IHB&SYSNDX.A .           BR TO LEN CHECK
IHB&SYSNDX.D XC 0(0,&R.1),0(&R.1) .     << EXECUTED >>
         SPACE 1
IHB&SYSNDX.B XC 0(256,&R.1),0(&R.1) .   CLEAR DYNAMIC CORE
         LA    &R.1,256(&R.1) .         POINT TO NEXT CORE TO CLEAR
IHB&SYSNDX.A SH &R.15,*-2 .             DOWN BY 256
         BP    IHB&SYSNDX.B .           MORE TO CLEAR
         AH    &R.15,IHB&SYSNDX.K .     MAKE POSITIVE
         EX    &R.15,IHB&SYSNDX.D .     CLEAR FINAL PORTION
         SPACE 3
&CP      SETB  ('&MATTSD3(25)' EQ 'Y')
         AIF   (NOT &CP).ICPPL1
         ST    &R.2,TSDCPPLP .          SAVE POINTER TO CPPL
         RUSE  CPPL,&R.2 .              TELL ASSEMBLER
.ICPPL1  ANOP
         AIF   ('&MATTSD3(23)' NE 'Y').ICSPL2
         LA    &R.0,TSDCSFLG .          GET CSFLG FOR CSPL
         LA    &R.1,CSOA .              AND OUTPUT AREA
         STM   &R.0,&R.1,CSPLFLG .      SET CSPLFLG AND CSPLOA
.ICSPL2  ANOP
         AIF   (NOT &CP).ICPPL2
         L     &R.15,CPPLUPT .          GET USER PROF TABLE ADDR
         L     &R.0,CPPLECT .           GET ENVIRON CTL TABLE
         AGO   .RSET
.ICPPL2  ANOP
         SR    &R.15,&R.15 .            CLEAR UPT POINTER
         SR    &R.0,&R.0 .              AND ECT POINTER
.RSET    ANOP
&CPECB   SETB  1
         AIF   ('&MATTSD3(23)' NE 'Y').ICSPL1
         AIF   ('&MATTSD3(24)' NE 'Y').ICSECB
         LA    &R.1,TSDCSECB .          GET COMMAND SCAN ECB ADDR
&CPECB   SETB  1
         AGO   .DOCSPL
.ICSECB  ANOP
         AIF   (NOT &CPECB).DOCSPL
&CPECB   SETB  0
         LA    &R.1,TSDCPECB .          GET DEFAULT ECB
.DOCSPL  ANOP
         STM   &R.15,&R.0,CSPL .        INIT CSPL
.ICSPL1  ANOP
         AIF   ('&MATTSD3(13)' NE 'Y').IIOPL
         AIF   ('&MATTSD3(22)' NE 'Y').IIOECB
         LA    &R.1,TSDIOECB .          GET TERM I/O ECB
&CPECB   SETB  1
         AGO   .DOIOPL
.IIOECB  ANOP
         AIF   (NOT &CPECB).DOIOPL
&CPECB   SETB  0
         LA    &R.1,TSDCPECB .GET DEFAULT ECB
.DOIOPL  ANOP
         STM   &R.15,&R.1,IOPL .        INIT IOPL
.IIOPL   ANOP
         AIF   ('&MATTSD3(1)' NE 'Y').IDAPL
         AIF   ('&MATTSD3(3)' NE 'Y').IDAECB
         LA    &R.1,TSDDAECB .          GET DAIR ECB ADDR
&CPECB   SETB  1
         AGO   .DODAPL
.IDAECB  ANOP
         AIF   (NOT &CPECB).DODAPL
&CPECB   SETB  0
         LA    &R.1,CPECB .             GET DEFAULT ECB ADDR
.DODAPL  ANOP
         STM   &R.15,&R.1,DAPL .        INIT DAPL
         AIF   (NOT &CP).NODPSCB
         MVC   DAPLPSCB,CPPLPSCB .      SET PSCB ADDR
.NODPSCB ANOP
.IDAPL   ANOP
         AIF   ('&MATTSD3(7)' NE 'Y').IPPL
         AIF   ('&MATTSD3(8)' NE 'Y').IPECB
         LA    &R.1,TSDPECB .           GET PARSE ECB ADDR
&CPECB   SETB  1
         AGO   .DOPPL
.IPECB   ANOP
         AIF   (NOT &CPECB).DOPPL
&CPECB   SETB  0
         LA    &R.1,TSDCPECB .          GET DEFAULT ECB ADDR
.DOPPL   ANOP
         STM   &R.15,&R.1,PPL .         INIT PPL
         ST    &R.13,PPLUWA .           PASS DYNAMIC CORE IN PPL
         LA    &R.1,TSDPANS .           GET PARSE ANSWER PLACE
         ST    &R.1,PPLANS .            AND PUT IT IN PPL
.IPPL    ANOP
         AIF   ('&MATTSD3(1)' NE 'Y').IDAPL1
         AIF   ('&MATTSD3(3)' NE 'Y').IDAPL1
         LA    &R.1,TSDDAPB .           GET DEFAULT DAPB
         ST    &R.1,DAPLDAPB .          AND PUT IT IN DAPL
.IDAPL1  ANOP
&BS      SETB  ('&MATTSD3(4)' EQ 'Y')
&LC      SETA  &LC+&BS
&BS      SETB  ('&MATTSD3(6)' EQ 'Y')
&LC      SETA  &LC+&BS
&BS      SETB  ('&MATTSD3(10)' EQ 'Y')
&LC      SETA  &LC+&BS
&BS      SETB  ('&MATTSD3(11)' EQ 'Y')
&LC      SETA  &LC+&BS
&BS      SETB  ('&MATTSD3(18)' EQ 'Y')
&LC      SETA  &LC+&BS
&BS      SETB  ('&MATTSD3(19)' EQ 'Y')
&LC      SETA  &LC+&BS
&BS      SETB  ('&MATTSD3(20)' EQ 'Y')
&LC      SETA  &LC+&BS
&BS      SETB  ('&MATTSD3(21)' EQ 'Y')
&LC      SETA  &LC+&BS
&BS      SETB  ('&MATTSD3(32)' EQ 'Y')
&LC      SETA  &LC+&BS
&BS      SETB  ('&MATTSD3(33)' EQ 'Y')
&LC      SETA  &LC+&BS
         AIF   (&LC EQ 0).NOLOAD
         AIF   (&LC GT 1).SPLOAD
         MNOTE *,'LOAD EPLOC=IHB&SYSNDX.L .      LOAD REQUESTED MODULE'
         LOAD  EPLOC=IHB&SYSNDX.L .     LOAD REQUESTED MODULE
         EX    0,IHB&SYSNDX.L+8 .       STORE EPA
         AGO   .NOLOAD
.SPLOAD  ANOP
         ST    &R.3,TSDSAVE+12 .        SAVE WORK REG
         LA    &R.3,IHB&SYSNDX.L-12 .   POINT TO VIRTUAL ORIGIN
IHB&SYSNDX.M LA &R.3,12(,&R.3) .        POINT TO NEXT MODULE
         CLC   0(2,&R.3),IHB&SYSNDX.K . END OF LIST ?
         BE    IHB&SYSNDX.N .           YES, THEN QUIT THE LOAD
*        LOAD  EPLOC=(R3)               LOAD REQUESTED MODULE
         LOAD  EPLOC=(&R.3) .           LOAD THE REQUESTED MODULE
         EX    0,8(,&R.3) .             STORE THE EPA
         B     IHB&SYSNDX.M .           LOOP TO NEXT MODULE
IHB&SYSNDX.N EQU *
         L     &R.3,TSDSAVE+12 .        RESTORE WORK REG
.NOLOAD  ANOP
         RDROP &R.14
         AIF   (NOT &CP).NODRPR2
         RDROP &R.2
.NODRPR2 ANOP
         L     &R.14,0(,&R.13) .        GET RET ADDR
         BR    &R.14 .                  AND RETURN TO CALLER
         EJECT
***********************************************************************
*                                                                     *
*        TSDSECT EXIT CODE ENTERED FROM TSLINK/TSFINISH               *
*                                                                     *
***********************************************************************
         SPACE 3
&MATTSL1 EQU   * .                      ENTRY POINT FOR EXIT CODE
         STM   &R.1,&R.3,24(&R.13) .    SAVE WORK REGS
         LR    &R.2,&R.15 .             SET TEMP BASE REG
         RUSE  &MATTSL1,&R.2 .          TELL ASSEMBLER
         AIF   (&LC EQ 0).NODLT
         AIF   (&LC EQ 1).SPCLDLT
         LA    &R.3,IHB&SYSNDX.L-12 .   GET VIRTUAL ORIGIN
IHB&SYSNDX.O EQU *
         LA    &R.3,12(,&R.3) .         POINT TO NEXT NAME
         CLC   0(2,&R.3),IHB&SYSNDX.K . END OF LIST ?
         BE    IHB&SYSNDX.P .           YES, GO ON
         MNOTE *,'DELETE EPLOC=(&R.3) . DELETE MODULE'
         DELETE EPLOC=(&R.3)            DELETE THE LOADED MODULE
         B     IHB&SYSNDX.O .           BR FOR NEXT MODULE
IHB&SYSNDX.P EQU *
         AGO   .ENDDLT
.SPCLDLT ANOP
         MNOTE *,'DELETE EPLOC=IHB&SYSNDX.L    DELETE MODULE'
         DELETE EPLOC=IHB&SYSNDX.L      DELETE THE MODULE
.ENDDLT  ANOP
.NODLT   ANOP
         LR    &R.1,&R.13 .             SET UP FOR FREE
         L     &R.0,TSDSPLEN .          GET SP AND LENGTH
         L     &R.13,4(,&R.13) .        GET BACK HSA POINTER
         AIF   (NOT &MATTSF1).NORCCPY
         MVC   16(4,&R.13),0(&R.1) .    COPY RC SET BY TSFINISH
.NORCCPY ANOP
         LM    &R.2,&R.3,28(&R.13) .    RESTORE WORK REGS
         MVC   8(4,&R.13),24(&R.1) .    COPY OLD R1
         RDROP &R.2                     DELETE ADDRESSIBILITY
*        FREEMAIN R,LV=(0),A=(1)        FREE TSDSECT DYNAMIC AREA
         FREEMAIN R,LV=(0),A=(1)
         L     &R.1,8(,&R.13) .         RESTORE REG 1
         BR    &R.14 .                  RETURN TO CALLING MACRO
         EJECT
***********************************************************************
*                                                                     *
*        CONSTANTS AND EXECUTED INSTRUCTIONS FOR INITIALIZATION       *
*        AND EXIT SUBROUTINES                                         *
*                                                                     *
***********************************************************************
         SPACE 3
         DS    0F .                     ALLIGNMENT
         AIF   ('&MATTSD2' NE '').UCORE
TSDSPLEN DC    AL1(1),AL3(TSDLEN) .     SP & LEN OF DYNAMIC CORE
         AGO   .CORDONE
.UCORE   ANOP
TSDSPLEN DC    AL1(1),AL3(TSDLEN+&MATTSD2) . SP & LEN OF DYNAMIC CORE
.CORDONE ANOP
         AIF   (&LC EQ 0).NOLD1
IHB&SYSNDX.L DS 0H
         AIF   ('&MATTSD3(4)' NE 'Y').NLADAIR
         DC    CL8'IKJDAIR'
         ST    &R.0,TSDADAIR .          << EXECUTED >>
.NLADAIR ANOP
         AIF   ('&MATTSD3(6)' NE 'Y').NLAFF18
         DC    CL8'IKJEFF18'
         ST    &R.0,TSDAFF18 .          << EXECUTED >>
.NLAFF18 ANOP
         AIF   ('&MATTSD3(10)' NE 'Y').NLAPARS
         DC    CL8'IKJPARS'
         ST    &R.0,TSDAPARS .          << EXECUTED >>
.NLAPARS ANOP
         AIF   ('&MATTSD3(11)' NE 'Y').NLAFF02
         DC    CL8'IEFBR14'
         ST    &R.0,TSDAFF18 .          << EXECUTED >>
.NLAFF02 ANOP
         AIF   ('&MATTSD3(18)' NE 'Y').NLAIOPT
         DC    CL8'IKJPUTL'
         ST    &R.0,TSDAPUTL .          << EXECUTED >>
.NLAIOPT ANOP
         AIF   ('&MATTSD3(19)' NE 'Y').NLAGETL
         DC    CL8'IKJGETL'
         ST    &R.0,TSDAGETL .          << EXECUTED >>
.NLAGETL ANOP
         AIF   ('&MATTSD3(20)' NE 'Y').NLAPTGT
         DC    CL8'IKJPTGT'
         ST    &R.0,TSDAPTGT .          << EXECUTED >>
.NLAPTGT ANOP
         AIF   ('&MATTSD3(21)' NE 'Y').NLASTAK
         DC    CL8'IKJSTCK'
         ST    &R.0,TSDASTCK .          << EXECUTED >>
.NLASTAK ANOP
         AIF   ('&MATTSD3(32)' NE 'Y').NLASCAN
         DC    CL8'IKJSCAN'
         ST    &R.0,TSDASCAN .          << EXECUTED >>
.NLASCAN ANOP
         AIF   ('&MATTSD3(33)' NE 'Y').NLAERAS
         DC    CL8'TSDERASE'
         ST    &R.0,TSDAERAS            << EXECUTED >>
.NLAERAS ANOP
.NOLD1   ANOP
IHB&SYSNDX.K DC H'255'
         RDROP &R.13
.END     MEND
