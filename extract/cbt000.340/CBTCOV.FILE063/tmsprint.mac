         MACRO
&NAME    TMSPRINT &BUZZ,&RPT,&P3,&P4,&P5,                              *
               &FN=,&FA=,&FC=,                                         *
               &DSECT=YES,&EQUS=YES,&INLINE=NO,                        *
               &TITLES=,&DCB=,&DCBU=,&LCOUNT=,&ERROR=ABEND002
         GBLC  &LINECNT
         GBLB  &TMSINFG,&ONETIME
         LCLC  &N(8)
         LCLC  &A(8)
         LCLC  &C(8)
         LCLC  &TAG1,&TAG2
         LCLC  &UT1,&UT2,&UT3
         LCLA  &K
         LCLA  &C1
         LCLA  &L
         LCLA  &P
         LCLA  &CODE
         LCLA  &DCBN,&DDNM,&DLREC,&DBLK
&DCBN    SETA  1
&DDNM    SETA  2
&DLREC   SETA  3
&DBLK    SETA  4
.*
*        TMSPRINT MACRO  UNIVERSITY COMPUTING COMPANY  05-10-78 V.L 4.5
.*
         AIF   ('&BUZZ' EQ 'GEN').GEN
         AIF   ('&RPT' LT '1' OR '&RPT' GT '99').ERR01
         AIF   ('&BUZZ' EQ '').ERR02
         AIF   ('&BUZZ' EQ 'START').START
         AIF   ('&BUZZ' EQ 'PRINT').PRINT
         AIF   ('&BUZZ' EQ 'END').END
         AIF   ('&BUZZ' EQ 'INFO').INFO
         AGO   .ERR02
.*
.START   ANOP
&UT2     SETC  ' '
&CODE    SETA  0
         AIF   ('&P3' EQ '' OR '&P3' EQ 'LOGO').SCODE
         AIF   ('&P3' NE 'NOLOGO').ERR03
&UT2     SETC  ' NOT'
&CODE    SETA  1
.SCODE   ANOP
         MNOTE *,'UCC-1 REPORT=&RPT FILE OPENED AND LOGO&UT2 PRINTED'
         AIF   ('&INLINE' EQ '' OR '&INLINE' NE 'YES').NINLIN1
&NAME    L     R0,=A(TMSPRINT) -  LOAD ADDRESS OF TMSPRINT
         AGO   .SLIST1
.NINLIN1 ANOP
.*
&NAME    LA    R0,=CL8'TMSPRINT' -POINT TO TMSPRINT MODULE NAME
*        LOAD  EPLOC=(0) -        LOAD GENERLIZED PRINT MODULE
         LOAD  EPLOC=(0) -        LOAD GENERLIZED PRINT MODULE
.SLIST1  ANOP
         L     R15,=A($TPLST&RPT)  -   POINT TO OPTION LIST
         ST    R0,0(,R15) -       SAVE TMSPRINT EPLOC
         LA    R1,=A(0,$TPLST&RPT,&CODE)
         AGO   .GOTOIT
.*
.PRINT   ANOP
&CODE    SETA  0
&UT2     SETC  ' '
         AIF   ('&P4(1)' EQ '' OR '&P4(1)' EQ 'CLEAR').P4NBR2
         AIF   ('&P4(1)' NE 'NOCLEAR').ERR05
&CODE    SETA  1
&UT2     SETC  'NOT '
.P4NBR2  ANOP
         AIF   ('&P4(2)' EQ '' OR '&P4(2)' EQ 'TOTAL').PCODE
         AIF   ('&P4(2)' NE 'NOTOT' AND '&P4(2)' NE 'NOTOTAL').ERR05A
&CODE    SETA  &CODE+2
.PCODE   ANOP
         MNOTE *,'UCC-1 REPORT=&RPT LINE PRINTED AND &UT2.CLEARED'
         AIF   ('&P3' EQ '').ERR04
         AIF   ('&P3'(1,1) NE '(').NOREG
&UT1     SETC  '&P3'(2,K'&P3-2)
&UT2     SETC  'NOT '
&NAME    LR    R0,&UT1 -          POINT TO PRINT AREA
         AGO   .SETOPTN
.*
.NOREG   ANOP
&NAME    LA    R0,&P3 -           POINT TO PRINT AREA
.SETOPTN ANOP
         AIF   ('&P5' EQ '').PNOP5
         AIF   (N'&P5 EQ 1).PNOP52
         AIF   ('&P5(2)'(1,1) NE '(').P52NR
         LR    R1,&P5(2) -        POINT TO PARM LIST
         AGO   .P5CONT
.P52NR   ANOP
         LA    R1,&P5(2) -        POINT TO PARM LIST
         AGO   .P5CONT
.PNOP52  ANOP
         CNOP  0,4 -              ALIGN ON FULL WORD
         BAL   R1,*+16 -          POINT TO PARM LIST
         DC    A(0) -             FUNCTION CODE
         DC    A(0) -             ADR OF DEFAULT LIST
         DC    A(0) -             OPTION CODE
.P5CONT  ANOP
         LA    R15,8 -            SET TO
         ST    R15,0(,R1) -            PRINT FUNCTION
         LA    R15,&CODE -        POST OPTION
         ST    R15,8(,R1) -            CODE
         AIF   (N'&P5 EQ 1).P1
         AIF   ('&P5(1)'(1,1) NE '(').P51NR
         AGO   .P2
.P1      AIF   ('&P5'(1,1) NE '(').P51NR
.P2      ANOP
         LR    R15,&P5(1) -       POST DEFAULT
         AGO   .P51CT
.P51NR   ANOP
         LA    R15,&P5(1) -       POST DEFAULT
.P51CT   ANOP
         ST    R15,4(,R1) -            LIST ADR
         L     R15,0(,R15) -      GET TMSPRINT EPLOC
         BALR  R14,R15 -          CALL TMSPRINT
         MEXIT
.PNOP5   ANOP
         LA    R1,=A(8,$TPLST&RPT,&CODE)
         AGO   .GOTOIT
.*
.END     ANOP
&UT2     SETC  ' '
&CODE    SETA  0
         AIF   ('&P3' EQ '' OR '&P3' EQ 'TOTALS').ECODE
         AIF   ('&P3' NE 'NOTOTALS').ERR06
&UT2     SETC  'NOT '
&CODE    SETA  1
.ECODE   ANOP
         MNOTE *,'UCC-1 REPORT=&RPT FILE CLOSED WITH TOTALS &UT2 PRINTE*
               D'
&NAME    LA    R1,=A(4,$TPLST&RPT,&CODE)
.*
.GOTOIT  ANOP
         L     R15,=A($TPLST&RPT)  -   POINT TO OPTION LIST
         L     R15,0(,R15) -      GET TMSPRINT EPLOC
         BALR  R14,R15 -          CALL TMSPRINT
         AIF   ('&BUZZ' NE 'END').MEXIT
         ST    R15,16(,R13) -     SAVE TMSPRINT RETURN CODE
         AIF   ('&INLINE' NE '' AND '&INLINE' EQ 'YES').CDEL1
         LA    R0,=CL8'TMSPRINT' -POINT TO TMSPRINT MODULE NAME
*        DELETE EPLOC=(0) -       DELETE GENERLIZED PRINT MODULE
         DELETE EPLOC=(0) -       DELETE GENERLIZED PRINT MODULE
.CDEL1   ANOP
         L     R15,16(,R13) -     RE-POST TMSPRINT RETURN CODE
.MEXIT   ANOP
         MEXIT
.*
.GEN     ANOP
PRT      TITLE 'TMSPRINT - GENERLIZED PRINT MODULE'
TMSPRINT CSECT , -
*
*        REGISTER USAGE
*  R0  = PRINT I/O AREA
*  R1  = PARAMETER LIST POINTER, WORK REGISTER
*  R2  = WORK
*  R3  = WORK (POINTER TO I/O AREA)
*  R4  = WORK (BALR)
*  R5  = POINTS TO DEFINITION TABLE
*  R6  = POINTS TO DCB
*  R7  = POINTS TO PARAMETER LIST
*  R8  =
*  R9  =
*  R10 = BASE REGISTER
*  R11 =
*  R12 =
*  R13 = POINTS TO REGISTER SAVEAREA
*  R14 =
*  R15 =
*
*        TMSSOJ (R10),EQUS=&EQUS,SSI=40050000
         TMSSOJ (R10),EQUS=&EQUS,                                      *
               SSI=40050000
         LR    R7,R1 -            POINT TO PARAMETER LIST
         USING $TPALST,R7 -       MAP PARM LIST
         L     R5,$TPALIST -      POINT TO DEFINITION LIST
         USING $TPDEFLT,R5 -      MAP DEFINITION TABLE
         L     R6,$TPDLDCB -      POINT TO PRINT DCB
         L     R1,$TPATYPE -      FUNCTION TYPE
         B     $TPR010(R1) -      BRANCH TO DECISION TABLE
*
$TPR010  B     $TPR100 -          BRANCH IF START (0)
         B     $TPR200 -          BRANCH IF END   (4)
         B     $TPR300 -          BRANCH IF PRINT (8)
         TITLE 'TMSPRINT - START PRINT ROUTINE'
*
***********************************************************************
*              START                                                  *
***********************************************************************
*
$TPR100  DS    0H
.*
         XC    $TPCRECL,$TPCRECL -CLEAR FIELD
         ZAP   $TPCLMAX,$TPDLMAX -SAVE PROGRAMS LINE COUNT
         MVC   $TPCSOPT,$TPAOPTN -SAVE LOGO OPTION
         LA    R2,$TPCDCB -       LOAD DCB ADDRESS
         MVC   $TPCREPT+6(2),$TPDLRPT - BUILD REPORT NAME
         LA    R2,40(,R2) -       LOAD DCB ADDRESS
*        VERIFYDD DDNAME=(R2) -   CHECK FOR DD CARD
         VERIFYDD DDNAME=(R2) -   CHECK FOR DD CARD
         LTR   R1,R1 -            Q. DD PRESENT
         BZ    $TPR102A -         A. NOT ZERO - NO
*        OPEN  ($TPCDCB,(INPUT)) -OPEN TMS OPTIONS FILE
         OPEN  ($TPCDCB,(INPUT)) -OPEN TMS OPTIONS FILE
$TPR101A DS    0H
         GET   $TPCDCB,$TPCIN -   A. NOT - ZERO NO
         CLC   $TPCREPT,$TPCIN -  Q. RECORD FOR THIS REPORT
         BNE   $TPR101A -         A. UNEQUAL - NO
         LA    R2,$TPCIN+8 -      POINT TO START OF DATA
$TPR101B DS    0H -
         LA    R2,1(,R2) -        STEP ONE BYTE
$TPR101C DS   0H -
         CLI   0(R2),C',' -       Q. COMMA PRESENT
         BE    $TPR101B -         A. EQUAL - YES
         CLI   0(R2),C' ' -       Q. END OF DATA
         BE    $TPR101A -         A. EQUAL - YES
         CLC   =C'LOGO=YES',0(R2) Q. LOGO=YES
         BNE   $TPR101D -         A. UNEQUAL - NO
         MVC   $TPCSOPT,=F'0' -   SET LOGO TO YES
         LA    R2,8(,R2) -        STEP TO NEXT FIELD
         B     $TPR101C -         LOOK FOR NEXT KEYWORD
$TPR101D DS    0H -
         CLC   =C'LOGO=NO',0(R2) -Q. LOGO=NO
         BNE   $TPR101E -         A. UNEQUAL - NO
         MVC   $TPCSOPT,=F'1' -   SET LOGO TO NO
         LA    R2,7(,R2) -        STEP TO NEXT FIELD
         B     $TPR101C -         CHECK FOR NEXT KEYWORD
$TPR101E DS    0H -
         CLC   =C'LINECNT=',0(R2) Q. LINECNT=XXX KEYWORD
         BNE   $TPR101F -         A. UNEQUAL - NO HIGH
         LA    R2,8(,R2) -        STEP OVER KEYWORD
         MVI   $TPCKTYP,C'1' -    SET LINE CNT SW
         B     $TPR101G -
*
$TPR101F DS    0H -
         CLC   =C'LRECL=',0(R2) - Q. LRECL KEYWORD
         BNE   $TPR101B -         A. UNEQUAL - NO
         MVI   $TPCKTYP,C'2' -    SET LRECL SW
         LA    R2,6(,R2) -        STEP OVER KEYWORD
$TPR101G DS    0H -
         ZAP   $TPCDWD,=P'0' -    CLEAR WORK FIELD
         LR    R15,R2 -           COPY START ADDRESS
$TPR101H DS    0H -
         CLI   0(R15),C' ' -      Q. END OF FIELD
         BE    $TPR101I -         A. EQUAL - YES
         CLI   0(R15),C',' -      Q. END OF FIELD
         BE    $TPR101I -         A. EQUAL - YES
         CLI   0(R15),C'0' -      Q. VALID DATA
         BL    $TPR101I -         A. LOW - NO
         CLI   0(R15),C'9' -      Q. VALID DATA
         BH    $TPR101I -         A. HIGH - NO
         LA    R15,1(,R15) -      BUMP END ADDRESS
         B     $TPR101H -         GET NEXT BYTE
$TPR101I DS    0H -
         ZAP   $TPCDWD,=P'0' -    CLEAR
         SR    R15,R2 -           GET LENGTH
         LTR   R15,R15 -          Q. ANY LENGTH
         BNP   $TPR101J -         A. NOT POSITIVE - NO
         BCTR  R15,0 -            GET LENGTH FACTOR
         SLL   R15,28 -           CLEAR BITS
         SRL   R15,28 -           FOR EXECUTE
         EX    R15,$EXPACK -      PACK NUMBER
         LA    R15,1(,R15) -      BUMP LENGTH
$TPR101J DS    0H -
         LA    R2,0(R2,R15) -     POINT TO NEXT BYTE
         CLI   $TPCKTYP,C'2' -    Q. LRECL KEYWORD
         BE    $TPR101K -         A. EQUAL - YES
         CP    $TPCDWD,=P'999' -  Q. GREATER THAN 999
         BH    $TPR101C -         A. HIGH - YES
         ZAP   $TPDLMAX,$TPCDWD - SET NEW LINE COUNT
         B     $TPR101C -         CHECK NEXT FIELD
$EXPACK  PACK  $TPCDWD,0(0,R2) -  PACK LINE COUNT
$TPR101K DS    0H -
         CVB   R15,$TPCDWD -      CONVERT TO BINARY
         STH   R15,$TPCRECL -     SAVE LRECL
         B     $TPR101C -         CHECK NEXT FIELD
$TPR102  DS    0H
*        CLOSE $TPCDCB -          CLOSE SYSIN
         CLOSE $TPCDCB -          CLOSE SYSIN
*        FREEPOOL $TPCDCB -       FREEPOOL BUFFERS
         FREEPOOL $TPCDCB -       FREEPOOL BUFFERS
$TPR102A DS    0H -
         CP    $TPDLMAX,=P'0' -   Q. PROGRAM SPECIFY LINE COUNT
         BH    $TPR102B -         A. HIGH - USE TO
         ZAP   $TPDLMAX,$TPCDCNT - SET GLOBAL LINE COUNT
         CP    $TPDLMAX,=P'0' -   Q. USE GLOBAL LINE COUNT
         BH    $TPR102B -         A. HIGH - USE IT
         ZAP   $TPDLMAX,=P'55' -  FORCE 55 LINE DEFAULT
$TPR102B DS    0H -
         TM    48(R6),X'10' -     Q. ALREADY OPEN
         BO    $TPR110 -          A. ONE - YES
         OC    $TPCRECL,$TPCRECL -Q. LRECL IN OPTIONS FILE
         BZ    $TPR103 -          A. ZERO - NO
         CLC   82(2,R6),$TPCRECL -Q. LRECL IN DCB LT OPTION
         BL    $TPR103 -          A. LOW - YES
         MVC   82(2,R6),$TPCRECL -SET NEW LRECL
         LH    R15,$TPCRECL -     LOAD LRECL
         MH    R15,=H'4' -        MULT BY 4
         STH   R15,$TPCWD1 -      STORE
         MVC   62(2,R6),$TPCWD1 - POST BLKSIZE
*
$TPR103  DS    0H -
*        OPEN  ((R6),(OUTPUT)) -  OPEN FILE
         OPEN  ((R6),(OUTPUT)) -  OPEN FILE
         TM    48(R6),X'10' -     Q. OPEN FAIL
         BO    $TPR110 -          A. ONE - NO
         CLC   40(8,R6),$TPCDFLT -Q.OPENED DEFAULT DCB
         BE    $TPR104 -          A. EQUAL - YES
         MVC   40(8,R6),$TPCDFLT -POST DEFAULT DCB NAME
         B     $TPR103
$TPR104  DS    0H
         L     R1,4(,R13) -       POINT TO RETURN REG SAVEAREA
         L     R14,$TPDLERR -     FORCE RETURN
         ST    R14,12(,R1) -            TO USER'S
*
$TPR105  DS    0H
         B     $TPR900 -                ERROR ROUTINE
*
$TPR110  DS    0H
*
$TPR110C DS    0H
         CLC   $TPCSOPT,=F'0' -   Q. PROGRAM WANT LOGO
         BE    $TPR111 -          A. EQUAL - YES
*
$TPR110D DS    0H
         TM    $TPC1STM,X'80' -   Q. DATE ALREADY POSTED
         BO    $TPR110E -         A. ONE - YES
         BAL   R4,$TPR120 -       GO INITIALIZE TIME/DATE
*
$TPR110E DS    0H
         B     $TPR950 -
*
$TPR111  DS    0H
         MVI   $TPCBLN,C'1' -     FORCE SKIP TO NEW PAGE
         LA    R2,5 -             NUMBER OF BLANK LINES TO PRINT
* $TPR112  PUT   (R6),$TPCBLN
$TPR112  PUT   (R6),$TPCBLN
         MVI   $TPCBLN,C'-' -     FORCE TRIPLE SPACE
         BCT   R2,$TPR112 -       LOOP TILL ALL LINES PRINTED
         MVI   $TPCBLN,C' ' -     RESET SINGLE PRINT
         L     R3,=A($TPCHEAD) -  POINT TO HEADING LIST
*
$TPR114  DS    0H
         SR    R2,R2 -            ZERO INDEX REGISTER
         IC    R2,0(,R3) -        DISPLACEMENT
         LA    R2,$TPCBLN(R2) -   POINT TO LOCATION
         SR    R4,R4 -            ZERO WORK REGISTER
         IC    R4,1(,R3) -        LENGTH
         AR    R4,R2 -            COMPUTE ENDING LOCATION
         C     R4,=A($TPCBLN+L'$TPCBLN) Q. WILL IT EXCEED LINE AREA
         BNL   $TPR105 -                A. EQUAL,HIGH - YES
         MVC   0(1,R2),2(R3) -    MOVE CHARACTER
         CLI   1(R3),X'01' -      Q. LENGTH 1 BYTE
         BNH   $TPR116 -          A. EQUAL, LOW - YES
         SR    R4,R2 -            RESTORE LENGTH
         SH    R4,=H'2' -         LENGTH MINUS 1
         STC   R4,*+5 -           MODIFY FOLLOWING MOVE LENGTH
         MVC   1(,R2),0(R2) -     RIPPLE CHARACTER
$TPR116  DS    0H
         LA    R3,3(,R3) -        POINT TO NEXT CHARACTER
         CLI   0(R3),X'FE' -      Q. END OF LINE
         BL    $TPR114 -          A. LOW - NO
*
*        PUT   (R6),$TPCBLN
         PUT   (R6),$TPCBLN
         MVI   $TPCBLN,C' ' -     CLEAR PRINT LINE
         MVC   $TPCBLN+1(L'$TPCBLN-1),$TPCBLN
         CLI   0(R3),X'FF' -      Q. END-OF-LOGO
         BE    $TPR118 -          A. EQUAL - YES
         LA    R3,1(,R3) -        POINT TO NEXT LINE
         B     $TPR114
*
$TPR118  DS    0H
         MVC   $TPCHD1R,$TPDLRPT -POST REPORT NUMBER
         LA    R4,$TPR130 -       MAKE BR & LINK - ABLE
*
$TPR120  DS    0H
         TS    $TPC1STM -         Q. 1ST TIME THRU
         BCR   7,R4 -             A. NOT ZERO - NO
         L     R2,16 -            POINT TO CVT
         L     R2,0(,R2) -                 TCB LIST
         L     R2,4(,R2) -                 CURRENT TCB
         L     R2,12(,R2) -                TIOT
         MVC   $TPCJNM,0(R2) -    POST JOB NAME
         MVC   $TPCSTN,8(R2) -    POST STEP NAME
*        TIME  DEC -              R0=HHMMSSTH R1=00YYDDDF
         TIME  DEC -              R0=HHMMSSTH R1=00YYDDDF
         SRL   R0,4 -             R0=0HHMMSST
         ST    R0,$TPCWD1 -
         OI    $TPCWD1+3,X'0F' -     0HHMMSSF
         ED    $TPCTME,$TPCWD1 -  BHH:MM:SS
         MVC   $TPCTME,$TPCTME+1 -HH:MM:SSB
*
         ST    R1,$TPCWD1 -       00YYDDDF
         ED    $TPCJLN,$TPCWD1+1 -**/**/YY.DDD
         XC    $TPCWD1(2),$TPCWD1 0000DDDF
         SRL   R1,12 -            R1=00000YYD
         XC    $TPCDWD,$TPCDWD -  CLEAD WORK FIELD
         ST    R1,$TPCDWD+4 -     0000000000000YYD
         OI    $TPCDWD+7,X'0F' -  0000000000000YYF
         CVB   R1,$TPCDWD -       YEAR IN BINARY
         N     1,=F'3' -          Q. LEAP YEAR
         BNZ   $TPR122 -          A. NOT ZERO - NO
         AP    $TPCDYR,=P'1' -    DAYS/YR = 366
         AP    $TPCMTH-1,=P'1' -  FEB = -1
$TPR122  DS    0H
         LA    R1,$TPCMTH -       POINT TO JANUARY
         CP    $TPCWD1,$TPCDYR -  Q. DAYS/YR GREATER THAN 365 (OR 366)
         BH    $TPR105 -          A. HIGH - YES
         CP    $TPCWD1,=P'0' -    Q. DAYS = 0
         BE    $TPR105 -          A. EQUAL - YES
$TPR124  DS    0H
         SP    $TPCWD1,0(1,R1) -  SUBTRACT DAYS OF MONTH
         SP    $TPCWD1,=P'30' -   SUBTRACT STANDARD DISPLACEMENT
         BNP   $TPR126 -          IF = OR < 0, BRANCH
         BCTR  R1,0 -             POINT TO NEXT MONTH
         AP    $TPCCTR,=P'1' -    ADD 1 TO MONTH
         B     $TPR124 -          AND LOOP
*
$TPR126  DS    0H
         AP    $TPCWD1,0(1,R1) -  ADD DAYS OF MONTH
         AP    $TPCWD1,=P'30' -   ADD STANDARD DISPLACEMENT
         OI    $TPCCTR+L'$TPCCTR-1,X'0F' - 0MMF
         UNPK  $TPCMM,$TPCCTR -   MM/**/YY.DDD
         OI    $TPCWD1+3,X'0F' -  00000DDF
         UNPK  $TPCDD,$TPCWD1 -   MM/DD/YY.DDD
         MVC   $TPCDAEQ+6(L'$TPCDTE),$TPCDTE SAVE DATE FOR TITLE
         BR    R4 -
*
$TPR130  DS    0H
         L     R3,=A($TPCHDGA) -  START OF LOGO HEADING POOL
$TPR132  DS    0H
*        PUT   (R6),(R3) -        PRINT HEADING
         PUT   (R6),(R3) -        PRINT HEADING
         LA    R3,133(,R3) -      POINT TO NEXT HEADING
         C     R3,=A($TPCHDGZ) -  Q. END OF POOL
         BL    $TPR132 -          A. LOW - NO
         XI    $TPR134+1,X'F0' -  PRINT LOGO ...
$TPR134  BC    0,$TPR111 -                        TWICE
         B     $TPR950 -          RETURN TO CALLER
         TITLE 'TMSPRINT - END PRINT ROUTINE'
*
***********************************************************************
*              E N D                                                  *
***********************************************************************
*
$TPR200  DS    0H
         TM    48(R6),X'10' -     Q. PRINT DATA SET OPEN
         BZ    $TPR900 -          A. ZERO - NO
         L     R1,$TPAOPTN -      LOAD OPTION SPECIFIED
         LTR   R1,R1 -            Q. PRINT TOTALS
         BNZ   $TPR220 -          A. NOT ZERO - NO
         MVC   $TPCERPT,$TPDLRPT -POST REPORT NUMBER
         MVC   $TPCETOT,$TPCTOEP -POST EDIT PATTERN
         ED    $TPCETOT,$TPDLTOT -POST NBR ITEMS LISTED
         LA    R3,$TPCENDL -      POINT TO TOTAL LINE
         BAL   R4,$TPRINT -       PRINT TOTAL LINE
.*
.*
.*
$TPR220  DS    0H
.*
.*
*        CLOSE ((R6))  -          CLOSE PRINT FILE
         CLOSE ((R6))  -          CLOSE PRINT FILE
*        FREEPOOL (R6) -          FREE BUFFERS
         FREEPOOL (R6) -          FREE BUFFERS
.*
         ZAP   $TPDLCUR,$TPDLMAX -RESET CURRENT LINE COUNT
         ZAP   $TPDLTOT,=P'0' -   RESET ITEM COUNTER
         ZAP   $TPDLPG#,=P'0' -   ZERO CURRENT PAGE NUMBER
         B     $TPR950 -          RETURN TO USER
         TITLE 'TMSPRINT - PRINT ROUTINE'
*
***********************************************************************
*              PRINT                                                  *
***********************************************************************
*
$TPR300  DS    0H
         TM    48(R6),X'10' -     Q. FILE OPEN
         BZ    $TPR900 -          A. ZERO - NO
         LR    R3,R0 -            POINT TO USER I/O AREA
         BAL   R4,$TPRINT -       PRINT USER I/O AREA
         L     R1,$TPAOPTN -      POINT TO SPECIFIED OPTION
         STC   R1,$TPCOPTN -      SAVE OPTION SPECIFIED
         TM    $TPCOPTN,X'01' -   Q. CLEAR PRINT LINE
         BNZ   $TPR310 -          A. NOT ZERO - NO
         LH    R1,82(,R6) -       LRECL
         SH    R1,=H'3' -         LENGTH MINUS 1 TO CLEAR
         MVI   1(R3),C' ' -       CLEAR USER'S
         STC   R1,*+5 -                 PRINT
         MVC   2(,R3),1(R3) -           LINE
$TPR310  DS    0H
         TM    $TPCOPTN,X'02' -   Q. INCLUDE PRINT LINE IN TOTAL COUNT
         BZ    $TPR320 -          A. ZERO - YES
         SP    $TPDLTOT,=P'1' -   DISCOUNT LINE PRINTED
$TPR320  DS    0H
         B     $TPR950
*
         TITLE 'TMSPRINT - RETURN ROUTINE'
*
***********************************************************************
*              RETURN                                                 *
***********************************************************************
*
*              ERROR CONDITION
$TPR900  DS    0H
         L     R13,4(,R13) -      POINT TO RETURN SAVEAREA
*        RETURN (14,12),T,RC=4 -  RETURN
         RETURN (14,12),T,RC=4 -  RETURN
*
$TPR950  DS    0H
         L     R13,4(,R13) -      POINT TO RETURN SAVEAREA
*        RETURN (14,12),T,RC=0 -  RETURN
         RETURN (14,12),T,RC=0 -  RETURN
*
         TITLE 'TMSPRINT - PRINT LINE SUBROUTINE'
*
***********************************************************************
*              PRINT LINE                                             *
***********************************************************************
*
$TPRINT  DS    0H
         CLI   0(R3),C' ' -       Q. SINGLE SPACEING
         BNE   $TPI002 -          A. UNEQUAL - NO
         AP    $TPDLCUR,=P'1' -   ADD 1 TO LINE COUNT
         B     $TPI020
*
$TPI002  DS    0H
         CLI   0(R3),C'0' -       Q. DOUBLE SPACING
         BNE   $TPI004 -          A. UNEQUAL - NO
         AP    $TPDLCUR,=P'2' -   ADD 2 TO LINE COUNT
         B     $TPI020
*
$TPI004  DS    0H
         CLI   0(R3),C'1' -       Q. TOP OF PAGE
         BNE   $TPI006 -          A. UNEQUAL - NO
         MVI   0(R3),C' ' -       FORCE SINGLE SPACE
         ZAP   $TPDLCUR,$TPDLMAX -POST MAXIMUM LINE COUNT
         B     $TPRINT
*
$TPI006  DS    0H
         CLI   0(R3),C'-' -       Q. TRIPLE SPACE
         BNE   $TPI008 -          A. UNEQUAL - NO
         AP    $TPDLCUR,=P'3' -   ADD 3 TO LINE COUNT
         B     $TPI020
*
$TPI008  DS    0H
         CLI   0(R3),C'+' -       Q. PRINT ON SAME LINE
         BE    $TPI020 -          A. EQUAL - YES
         MVI   0(R3),C' ' -       FORCE SINGLE SPACE DEFAULT
         AP    $TPDLCUR,=P'1' -   ADD 1 TO CURRENT LINE COUNT
*
$TPI020  DS    0H
         CP    $TPDLCUR,$TPDLMAX -Q. FULL PAGE
         BNH   $TPI040 -          A. EQUAL,LOW - NO
         ZAP   $TPDLCUR,=P'0' -   RESET CURRENT PAGE LINE COUNT
         AP    $TPDLPG#,=P'1' -   INCREMENT PAGE NUMBER
         MVC   $TPCTITL,$TPCHDGN -POST COMPANY NAME
         MVC   $TPCTDEQ,$TPCDAEQ - POST 'DATE=YY.DDD'
         OI    $TPDLPG#+L'$TPDLPG#-1,X'0F'
         UNPK  $TPCPAGE+5(5),$TPDLPG#
$TPI024  MVC   $TPCTPGE,$TPCPAGE -POST 'PAGE=XXXXX'
         MVI   $TPCTITL,C'1' -    INDICATE START NEW PAGE
*        PUT   (R6),$TPCTITL -    PRINT PAGE TITLE
         PUT   (R6),$TPCTITL -    PRINT PAGE TITLE
         AP    $TPDLCUR,=P'1' -   INCREMENT CURRENT LINE COUNT
         L     R2,$TPDLTLE -      POINT TO USER TITLE
         LTR   R2,R2 -            Q. USER TITLE SPECIFIED
         BZ    $TPI030 -          A. ZERO - NO
         MVI   0(R2),C'0' -       INDICATE DOUBLE SPACE
         AP    $TPDLCUR,=P'2' -   INCREMENT CURRENT LINE COUNTER
*        PUT   (R6),(R2) -        PRINT USER TITLE
         PUT   (R6),(R2) -        PRINT USER TITLE
         L     R2,$TPDLST1 -      POINT TO USER SUBTITLE 1
         LTR   R2,R2 -            Q. USER SUBTITLE 1 SPECIFIED
         BZ    $TPI030 -          A. ZERO - NO
         MVI   0(R2),C'0' -       INDICATE DOUBLE SPACE
         AP    $TPDLCUR,=P'2' -   INCREMENT CURRENT LINE COUNT
*        PUT   (R6),(R2) -        PRINT USER SUBTITLE 1
         PUT   (R6),(R2) -        PRINT USER SUBTITLE 1
         L     R2,$TPDLST2 -      POINT TO USER SUBTITLE 2
         LTR   R2,R2 -            Q. USER SUBTITLE 2 SPECIFIED
         BZ    $TPI030 -          A. ZERO - NO
         MVI   0(R2),C' ' -       INDICATE SINGLE SPACE
         AP    $TPDLCUR,=P'1' -   INCREMENT CURRENT LINE COUNT
*        PUT   (R6),(R2) -        PRINT USER SUBTITLE 2
         PUT   (R6),(R2) -        PRINT USER SUBTITLE 2
         L     R2,$TPDLST3 -      POINT TO USER SUBTITLE 3
         LTR   R2,R2 -            Q. USER SUBTITLE 3 SPECIDIED
         BZ    $TPI030 -          A. ZERO - NO
         MVI   0(R2),C' ' -       INDICATE SINGLE SPACE
         AP    $TPDLCUR,=P'1' -   INCREMENT CURRENT LINE COUNT
*        PUT   (R6),(R2) -        PRINT USER SUBTITLE 3
         PUT   (R6),(R2) -        PRINT USER SUBTITLE 3
$TPI030  DS    0H
         CLI   0(R3),C' ' -       Q. NEXT LINE SINGLE SPACED
         BNE   $TPI002 -          A. UNEQUAL - NO
         MVI   $TPCBLN,C' ' -     INDICATE SINGLE SPACE
*        PUT   (R6),$TPCBLN -     SPACE AFTER HEADINGS
         PUT   (R6),$TPCBLN -     SPACE AFTER HEADINGS
         AP    $TPDLCUR,=P'1' -   INCREMENT CURRENT LINE COUNT
         B     $TPRINT -
*
$TPI040  DS    0H
         AP    $TPDLTOT,=P'1' -   INCREMENT ITEMS PRINTED
*        PUT   (R6),(R3) -        PRINT USER PRINT LINE
         PUT   (R6),(R3) -        PRINT USER PRINT LINE
         BR    R4
*
         TITLE 'TMSPRINT - LITERAL POOL AND CONSTANTS'
*
*
$TPCONST DS    0A
         LTORG
$TPCDWD  DC    D'0'
$TPCWD1  DC    F'0'
$TPCREPT DC    CL8'REPORTXX' '    SYSIN REPORT ID
*$TPCDCB DCB   DDNAME=TMSOPTNS,DSORG=PS,MACRF=GM,LRECL=80, -
*              EODAD=$TPR102,EXLST=($TPCDCBY)
$TPCDCB  DCB   DDNAME=TMSOPTNS,DSORG=PS,MACRF=GM,LRECL=80,             *
               EODAD=$TPR102,EXLST=($TPCDCBY)
$TPCIN   DC    CL81' ' -          INPUT CARDS
$TPCDCBY DC    0A(0),X'85',AL3($TPCBLKT)
$TPCBLKT DS    0H
         OC    62(2,R1),62(R1) -  Q. BLOCK SIZE SPECIFIED
         BCR   4,R14 -            A. NOT ZERO - YES
         LH    R0,82(,R1) -       POST BLOCK SIZE
         SLL   R0,2 -                  OF 4*LRECL
         STH   R0,62(,R1) -            AS DEFAULT
         BR    R14 -              AND RETURN
*
$TPCDFLT DC    CL8'SYSPRINT' -    DEFAULT DCB NAME
$TPCCTR  DC    P'001' -           COUNTER FOR DAYS
$TPCDYR  DC    P'365' -           MAX DAYS/YR
*
         DS    0CL12 -            MONTH DISPLACEMENT FROM 30 DAY
         DC    P'1' -             * DEC
         DC    P'0' -             * NOV
         DC    P'1' -             * OCT
         DC    P'0' -             * SEP
         DC    P'1' -             * AUG
         DC    P'1' -             * JUL
         DC    P'0' -             * JUN
         DC    P'1' -             * MAY
         DC    P'0' -             * APR
         DC    P'1' -             * MAR
         DC    P'-2' -            * FEB
$TPCMTH  DC    P'1' -             * JAN
*
$TPC1STM DC    X'00' -            1ST TIME THRU SWITCH
$TPCOPTN DC    X'00' -            USER SPECIFIED OPTION
$TPCLMAX DC    PL2'0' -           SAVE PROGRAMS LINE COUNT
$TPCSOPT DC    F'0' -             SAVE PROGRAMS OPTION
$TPCRECL DC    H'0'               LRECL SAVE
$TPCKTYP DC    CL1' '             KEYWORD SWITCH
*
*
$TPCDCNT DC    PL2'00&LINECNT' -  GLOBAL DEFAULT LINE COUNT
$TPCDAEQ DC    C'DATES=MM/DD/YY.DDD'
$TPCPAGE DC    C'PAGE=XXXXX'
$TPCTOEP DC    X'40206B2020206B202120'
*
$TPCTITL DS   0CL133
         DS    CL1
$TPCTDEQ DS    CL18'DATES=MM/DD/YY.DDD'
         DS    CL104
$TPCTPGE DS    CL10
*
$TPCENDL DS    0CL133
         DC    CL10'- '
         DC    C'END OF REPORT '
$TPCERPT DC    CL2'XX'
         DC    C'  -  TOTAL ITEMS LISTED='
$TPCETOT DC    C'B9,999,999'
$TPCELGN EQU   *-$TPCENDL
         DC    (L'$TPCENDL-$TPCELGN)C' ' FILLER
*
*
*
$TPCBLN  DC    CL133' '
$TPCHEAD CSECT
*
*        THE CONTROL SECTION TMSHEADR DEFINES A CONSTANT FIRST PAGE
*        FOR ALL UCC-ONE TAPE MANAGEMENT SOFTWARE REPORTS. THE PAGE
*        CONSISTS  OF THE LETTERS 'TMS'  PRINTED  TWENTY-FIVE LINES
*        HIGH, FOLLOWED BY A TMS TITLE LINE,  THE INSTALLATION NAME
*        AND ADDRESS LINES, AND THE PROPRIETARY CLAIMER LINES.
*
         SPACE 1
*
*        THE TWENTY-FIVE-LINE HIGH TMS CHARACTERS
*
*        TO CONSERVE STORAGE, THE TWENTY-FIVE-LINE HIGH TMS LETTERS
*        ARE DEFINED AS SINGLE LETTER STRINGS WITHIN PRINT LINE.THE
*        DEFINITION OF EACH STRING CONSISTS OF THREE FIELDS: (1)  A
*        ONE-BYTE DISPLACEMENT WITHIN A LINE; (2) A ONE-BYTE LENGTH
*        OF THE STRING; (3) AND A ONE-BYTE CHARACTER.  EACH LINE IS
*        TERMINATED BY A BYTE  CONTAINING EITHER  HEX FE OR HEX FF.
*        THE END OF THE LETTERS IS SIGNALED BY A HEX FF BYTE.
*
         DC    HL1'020',HL1'12',C'T',X'FE'
         DC    HL1'020',HL1'12',C'T',X'FE'
         DC    HL1'020',HL1'12',C'T'
         DC    HL1'050',HL1'05',C'.'
         DC    HL1'068',HL1'05',C'.'
         DC    HL1'092',HL1'09',C'.'
         DC    HL1'093',HL1'07',C'S',X'FE'
         DC    HL1'020',HL1'22',C'T'
         DC    HL1'042',HL1'01',C''''
         DC    HL1'046',HL1'58',C'.'
         DC    HL1'047',HL1'11',C'M'
         DC    HL1'059',HL1'05',C' '
         DC    HL1'065',HL1'11',C'M'
         DC    HL1'077',HL1'12',C' '
         DC    HL1'090',HL1'13',C'S',X'FE'
         DC    HL1'020',HL1'20',C'T'
         DC    HL1'040',HL1'01',C''''
         DC    HL1'044',HL1'35',C'.'
         DC    HL1'045',HL1'16',C'M'
         DC    HL1'062',HL1'16',C'M'
         DC    HL1'087',HL1'19',C'.'
         DC    HL1'088',HL1'17',C'S',X'FE'
         DC    HL1'020',HL1'19',C'T'
         DC    HL1'039',HL1'01',C''''
         DC    HL1'042',HL1'39',C'.'
         DC    HL1'043',HL1'37',C'M'
         DC    HL1'086',HL1'21',C'.'
         DC    HL1'087',HL1'19',C'S',X'FE'
         DC    HL1'020',HL1'18',C'T'
         DC    HL1'038',HL1'01',C''''
         DC    HL1'041',HL1'41',C'.'
         DC    HL1'042',HL1'39',C'M'
         DC    HL1'086',HL1'21',C'S'
         DC    HL1'107',HL1'01',C'.',X'FE'
         DC    HL1'020',HL1'18',C'T'
         DC    HL1'041',HL1'41',C'M'
         DC    HL1'085',HL1'01',C'.'
         DC    HL1'086',HL1'22',C'S',X'FE'
         DC    HL1'020',HL1'18',C'T'
         DC    HL1'040',HL1'43',C'.'
         DC    HL1'041',HL1'41',C'M'
         DC    HL1'085',HL1'23',C'S'
         DC    HL1'095',HL1'05',C''''
         DC    HL1'096',HL1'03',C' '
         DC    HL1'108',HL1'01',C'.',X'FE'
         DC    HL1'020',HL1'12',C'T'
         DC    HL1'040',HL1'43',C'M'
         DC    HL1'085',HL1'01',C''''
         DC    HL1'086',HL1'09',C'S'
         DC    HL1'095',HL1'01',C'.'
         DC    HL1'102',HL1'07',C''''
         DC    HL1'103',HL1'05',C'S',X'FE'
         DC    HL1'020',HL1'12',C'T'
         DC    HL1'040',HL1'43',C'M'
         DC    HL1'052',HL1'03',C''''
         DC    HL1'053',HL1'01',C' '
         DC    HL1'068',HL1'03',C''''
         DC    HL1'069',HL1'01',C' '
         DC    HL1'086',HL1'11',C'S'
         DC    HL1'097',HL1'01',C'.'
         DC    HL1'105',HL1'01',C''''
         DC    HL1'106',HL1'02',C'S',X'FE'
         DC    HL1'020',HL1'12',C'T'
         DC    HL1'040',HL1'12',C'M'
         DC    HL1'055',HL1'13',C'M'
         DC    HL1'071',HL1'12',C'M'
         DC    HL1'086',HL1'01',C''''
         DC    HL1'087',HL1'12',C'S'
         DC    HL1'099',HL1'01',C'.',X'FE'
         DC    HL1'020',HL1'12',C'T'
         DC    HL1'040',HL1'12',C'M'
         DC    HL1'055',HL1'13',C'M'
         DC    HL1'071',HL1'12',C'M'
         DC    HL1'087',HL1'15',C'S'
         DC    HL1'102',HL1'01',C'.',X'FE'
         DC    HL1'020',HL1'12',C'T'
         DC    HL1'040',HL1'12',C'M'
         DC    HL1'055',HL1'13',C'M'
         DC    HL1'071',HL1'12',C'M'
         DC    HL1'088',HL1'01',C''''
         DC    HL1'089',HL1'16',C'S'
         DC    HL1'105',HL1'01',C'.',X'FE'
         DC    HL1'020',HL1'12',C'T'
         DC    HL1'040',HL1'12',C'M'
         DC    HL1'055',HL1'13',C'M'
         DC    HL1'071',HL1'12',C'M'
         DC    HL1'090',HL1'01',C''''
         DC    HL1'091',HL1'16',C'S',X'FE'
         DC    HL1'020',HL1'12',C'T'
         DC    HL1'040',HL1'12',C'M'
         DC    HL1'055',HL1'13',C'M'
         DC    HL1'071',HL1'12',C'M'
         DC    HL1'093',HL1'01',C''''
         DC    HL1'094',HL1'14',C'S',X'FE'
         DC    HL1'020',HL1'12',C'T'
         DC    HL1'040',HL1'12',C'M'
         DC    HL1'055',HL1'13',C'M'
         DC    HL1'071',HL1'12',C'M'
         DC    HL1'086',HL1'02',C'S'
         DC    HL1'088',HL1'01',C'.'
         DC    HL1'096',HL1'01',C''''
         DC    HL1'097',HL1'11',C'S'
         DC    HL1'108',HL1'01',C'.',X'FE'
         DC    HL1'020',HL1'12',C'T'
         DC    HL1'032',HL1'01',C'.'
         DC    HL1'040',HL1'12',C'M'
         DC    HL1'055',HL1'13',C'M'
         DC    HL1'071',HL1'12',C'M'
         DC    HL1'085',HL1'07',C'.'
         DC    HL1'086',HL1'05',C'S'
         DC    HL1'098',HL1'01',C''''
         DC    HL1'099',HL1'10',C'S',X'FE'
         DC    HL1'020',HL1'18',C'T'
         DC    HL1'055',HL1'13',C'M'
         DC    HL1'040',HL1'12',C'M'
         DC    HL1'071',HL1'12',C'M'
         DC    HL1'085',HL1'01',C''''
         DC    HL1'086',HL1'08',C'S'
         DC    HL1'094',HL1'01',C'.'
         DC    HL1'098',HL1'01',C'.'
         DC    HL1'099',HL1'10',C'S',X'FE'
         DC    HL1'020',HL1'18',C'T'
         DC    HL1'040',HL1'12',C'M'
         DC    HL1'055',HL1'13',C'M'
         DC    HL1'071',HL1'12',C'M'
         DC    HL1'086',HL1'22',C'S'
         DC    HL1'108',HL1'01',C'''',X'FE'
         DC    HL1'021',HL1'17',C'T'
         DC    HL1'040',HL1'12',C'M'
         DC    HL1'055',HL1'13',C'M'
         DC    HL1'071',HL1'12',C'M'
         DC    HL1'086',HL1'01',C''''
         DC    HL1'087',HL1'21',C'S',X'FE'
         DC    HL1'021',HL1'01',C''''
         DC    HL1'022',HL1'16',C'T'
         DC    HL1'040',HL1'12',C'M'
         DC    HL1'055',HL1'13',C'M'
         DC    HL1'071',HL1'12',C'M'
         DC    HL1'087',HL1'20',C''''
         DC    HL1'088',HL1'18',C'S',X'FE'
         DC    HL1'023',HL1'01',C''''
         DC    HL1'024',HL1'14',C'T'
         DC    HL1'040',HL1'12',C'M'
         DC    HL1'055',HL1'13',C'M'
         DC    HL1'071',HL1'12',C'M'
         DC    HL1'088',HL1'18',C''''
         DC    HL1'089',HL1'16',C'S',X'FE'
         DC    HL1'025',HL1'01',C''''
         DC    HL1'026',HL1'12',C'T'
         DC    HL1'040',HL1'12',C'M'
         DC    HL1'055',HL1'13',C'M'
         DC    HL1'071',HL1'12',C'M'
         DC    HL1'090',HL1'14',C''''
         DC    HL1'091',HL1'12',C'S',X'FE'
         DC    HL1'093',HL1'08',C''''
         DC    HL1'094',HL1'06',C'S',X'FF'
         SPACE 1
         TITLE 'TMSPRINT - LOGO CONSTANTS'
TMSPRINT CSECT , -
*
*        UCC ONE TITLE LINE
*
*
$TPCHDGA DS    0CL133
         DC    CL032'0 '
         DC    CL050'U C C - O N E   -   T A P E   M A N A G E M E N T'
         DC    CL051'   S O F T W A R E'
*
         DS    0CL133
         DC    CL48'0 '
         DC    CL85'V E R S I O N   4   L E V E L   6'            40297
*
         AIF   ('&FN' NE '').NAMOK
&N(1)    SETC  ' '
         MNOTE 8,'FN= NOT SPECIFIED'
         AGO   .NAMNOK
.NAMOK   ANOP
&K       SETA  K'&FN-2
&L       SETA  8
&C1      SETA  1
&P       SETA  2
         AGO   .N3
.N1      ANOP
&N(&C1)  SETC  '&FN'(&P,&L)
&K       SETA  &K-&L
&P       SETA  &P+&L
&C1      SETA  &C1+1
.N3      ANOP
         AIF   (&K EQ 0).N2
         AIF   (&K GT 8).N1
&L       SETA  &K
         AGO   .N1
.N2      ANOP
.NAMNOK  ANOP
         AIF   ('&FA' NE '').ADROK
&A(1)    SETC  ' '
         MNOTE 8,'FA= NOT SPECIFIED'
         AGO   .ADRNOK
.ADROK   ANOP
&K       SETA  K'&FA-2
&L       SETA  8
&C1      SETA  1
&P       SETA  2
         AGO   .A3
.A1      ANOP
&A(&C1)  SETC  '&FA'(&P,&L)
&K       SETA  &K-&L
&P       SETA  &P+&L
&C1      SETA  &C1+1
.A3      ANOP
         AIF   (&K EQ 0).A2
         AIF   (&K GT 8).A1
&L       SETA  &K
         AGO   .A1
.A2      ANOP
.ADRNOK  ANOP
         AIF   ('&FC' NE '').CTYOK
&C(1)    SETC  ' '
         MNOTE 8,'FC= NOT SPECIFIED'
         AGO   .CTYNOK
.CTYOK   ANOP
&K       SETA  K'&FC-2
&L       SETA  8
&C1      SETA  1
&P       SETA  2
         AGO   .C3
.C1      ANOP
&C(&C1)  SETC  '&FC'(&P,&L)
&K       SETA  &K-&L
&P       SETA  &P+&L
&C1      SETA  &C1+1
.C3      ANOP
         AIF   (&K EQ 0).C2
         AIF   (&K GT 8).C1
&L       SETA  &K
         AGO   .C1
.C2      ANOP
.CTYNOK  ANOP
$TPCHDGN DS    0CL133
         TMSFIRM '&N(1)&N(2)&N(3)&N(4)&N(5)&N(6)&N(7)&N(8)',           *
               '&A(1)&A(2)&A(3)&A(4)&A(5)&A(6)&A(7)&A(8)',             *
               '&C(1)&C(2)&C(3)&C(4)&C(5)&C(6)&C(7)&C(8)'
.*       **************************************************************
*
         DS    0CL133
         DC    CL12'- '
         DC    C'UCC-ONE IS A PROPRIETARY SOFTWARE PACKAGE LICENSED FR'
         DC    C'OM UNIVERSITY COMPUTING COMPANY FOR THE SOLE USE OF T'
         DC    CL15'HIS'
*
         DS    0CL133
         DC    CL12' '
         DC    C'INSTALLATION.   ALL OTHER RIGHTS ARE RESERVED.   USE '
         DC    C'OF THIS SOFTWARE BY UNAUTHORIZED PERSONS IS PROHIBITE'
         DC    CL15'D.'
*
$TPCHD1  DS   0CL133
         DC    CL25'- '
         DC    C'TMS REPORT='
$TPCHD1R DC    C'XX' -            REPORT NBR
         DC    C'  JOB='
$TPCJNM  DC    CL8'XXXXXXXX' -    JOB NAME
         DC    C'  STEP='
$TPCSTN  DC    CL8'XXXXXXXX' -    STEP NAME
         DC    C'  DATES='
$TPCDTE  DS    0CL12
$TPCMM   DC    C'**',C'/' -       MM/
$TPCDD   DC    C'**',C'/' -       DD/
$TPCJLN  DC    X'21204B202020' -  YY.DDD
         DC    C'  TIME='
$TPCTME  DC    X'2120207A20207A2020' HH:MM:SS
$TPC1LGN EQU   *-$TPCHD1
         DC    (L'$TPCHD1-$TPC1LGN)C' ' FILLER
$TPCHDGZ EQU   *-1
*
         LTORG
         DROP  R10,R5,R7 -        UNMAP CSECT
         TITLE 'TMSPRINT - DSECTS'
         AGO   .GENCONT
.INFO    ANOP
         AIF   ('&DSECT' EQ 'NO').INFOGO
         AIF   (&ONETIME).INFOGO
&ONETIME SETB  1
.GENCONT ANOP
*
$TPDEFLT DSECT  , -          DEFINITION LIST
$TPDLPRT DS    A -                TMSPRINT EPLOC
$TPDLDCB DS    A -                DCB ADDRESS
$TPDLERR DS    A -                OPEN ERROR ROUTINE
$TPDLRPT DS    CL2 -              REPORT NUMBER
$TPDLCUR DS    PL2 -              CURRENT LINE COUNT
$TPDLMAX DS    PL2 -              MAX. PAGE LINE COUNT
$TPDLPG# DS    PL3 -              CURRENT PAGE NUMBER
$TPDLTOT DS    PL4 -              TOTAL LINES PRINTED LESS HEADINGS
         DS    CL3 -              RESERVED
$TPDLTLE DS    A -                ADDRESS OF TITLE
$TPDLST1 DS    A -                   .       SUBTITLE 1
$TPDLST2 DS    A -                   .       SUBTITLE 2
$TPDLST3 DS    A -                   .       SUBTITLE 3
*
$TPALST  DSECT  , -           PARAMETER LIST
$TPATYPE DS    A -                TYPE FUNCTION
$TPALIST DS    A -                DEFINITION LIST
$TPAOPTN DS    A -                OPTION
*
         AIF   ('&BUZZ' EQ 'GEN').GENGO
&SYSECT  CSECT ,
         AIF   ('&DSECT' NE 'ONLY').INFOGO
         MEXIT
.GENGO   ANOP
         EJECT -
*
         MEXIT
.*
.INFOGO  ANOP
         AIF   ('&DCBU' EQ '').GDCB01
         AIF   ('&DCB' NE '').ERR07  CANNOT HAVE BOTH DCBU= AND DCB=
&UT1     SETC  '&DCBU(1)'         SET USER DEFINED DCB NAME
         AGO   .GDCB09
.*
.GDCB01  ANOP
&UT1     SETC  '&DCB(&DCBN)'
         AIF   ('&UT1' NE '').GDCB02
&UT1     SETC  '$TPRPT&RPT'       DEFAULT DCB NAME
.GDCB02  ANOP
&UT2     SETC  '&DCB(&DDNM)'
         AIF   ('&UT2' NE '').GDCB04
&UT2     SETC  'TMSRPT'           DEFAULT DD NAME
.GDCB04  ANOP
&UT3     SETC  '&DCB(&DLREC)'
         AIF   ('&UT3' NE '').GDCB06
&UT3     SETC  '133'              DEFAULT LRECL
.GDCB06  ANOP
*
         AIF   ('&DCB(&DBLK)' EQ '').GDCB08
&UT1     DCB   DDNAME=&UT2,DSORG=PS,MACRF=PM,RECFM=FBA,                *
               BLKSIZE=&DCB(&DBLK),LRECL=&UT3
         AGO   .GDCB09
.*
.GDCB08  ANOP
&UT1     DCB   DDNAME=&UT2,DSORG=PS,MACRF=PM,RECFM=FBA,                *
               LRECL=&UT3,EXLST=$TPCDCBX
         AIF   (&TMSINFG).GDCB09
*
$TPCDCBX DC    0A(0),X'85',AL3($TPBLKOT)
$TPBLKOT DS    0H
         OC    62(2,R1),62(R1) -  Q. BLOCK SIZE SPECIFIED
         BCR   4,R14 -            A. NOT ZERO - YES
         LH    R0,82(,R1) -       POST BLOCK SIZE
         SLL   R0,2 -                  OF 4*LRECL
         STH   R0,62(,R1) -            AS DEFAULT
         BR    R14 -              AND RETURN
&TMSINFG SETB  1
.GDCB09  ANOP
*
         AIF   ('&LCOUNT' NE '').GDCB10
&UT3     SETC  '00'               USE DEFAULT LINE COUNT
         AGO   .GDCB12
.GDCB10  ANOP
&UT3     SETC  '&LCOUNT'          USE SPECIFIED LINE COUNT
.GDCB12  ANOP
*
&TAG1    SETC  '$TPLST&RPT'
&TAG1    DC    A(0) -             ADDRESS OF TMSPRINT EPLOC
         DC    A(&UT1) -          ADDRESS OF DCB
         DC    A(&ERROR) -      OPEN ERROR ROUTINE
         DC    CL2'&RPT' -          REPORT NUMBER
         DC    PL2'996' -         CURRENT LINE COUNT
         DC    PL2'&UT3' -        MAXIMUM PAGE LINE COUNT
         DC    PL3'0' -           CURRENT PAGE NUMBER
         DC    PL4'0' -           TOTAL LINES PRINTED LESS HEADINGS
         DC    CL3' ' -           RESERVED
&CODE    SETA  1                  INITIALIZE INDEX
.GDCB14  ANOP
&UT1     SETC  '0'                SET DEFAULT VALUE
         AIF   ('&TITLES(&CODE)' EQ '').GDCB16
&UT1     SETC  '&TITLES(&CODE)'   SET SPECIFIED VALUE
.GDCB16  ANOP
         DC    A(&UT1) -          USER HEADINGS
&CODE    SETA  &CODE+1            INCREMENT INDEX
         AIF   (&CODE LE 4).GDCB14
*
         MEXIT
.ERR01   MNOTE 'REPORT NUMBER MUST BE 01 THRU 99'
         MEXIT
.ERR02   MNOTE 'INVALID OR MISSING BUZZ WORD'
         MEXIT
.ERR03   MNOTE '3RD PARAMETER MUST BE ''LOGO'' OR ''NOLOGO'''
         MEXIT
.ERR04   MNOTE '3RD PARAMETER MISSING OR INVALID'
         MEXIT
.ERR05   MNOTE '4TH PARAMETER INVALID. MUST BE ''CLEAR'' OR ''NOCLEAR''*
               '
         MEXIT
.ERR05A  MNOTE '4TH PARAMETER (2ND) MUST BE ''TOTAL'' OR ''NOTOTAL'''
         MEXIT
.ERR06   MNOTE '3RD PARAMETER MUST BE ''TOTALS'' OR ''NOTOTALS'''
         MEXIT
.ERR07   MNOTE 'DCB= AND DCBU= ARE BOTH SPECIFIED, MACRO NOT GENED'
         MEXIT
         MEND
         EJECT ,
         COPY TMSSVCNO
         EJECT ,
         TMSPRINT GEN,                                                 *
               FN='UNIVERSITY COMPUTING COMPANY',                      *
               FA='UCC TOWER - EXCHANGE PARK',                         *
               FC='DALLAS, TEXAS  75235'
         END
