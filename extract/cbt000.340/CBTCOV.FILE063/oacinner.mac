         MACRO
&LABEL   OACINNER &DUMMY,&F=,&FO=+0,&T=,&TO=+0,&L=4,&OP=MA,            X
               &SETCC=NO,&RS=R0,&RT=R15,&COM=''
         GBLC  &OACNAME
         LCLC  &S,&SRC,&SRC1,&SRCT
         LCLB  &SRCI
         LCLC  &G,&TGT,&TGT1,&TGTT
         LCLB  &TGTI
         LCLC  &C,&COMM,&ARGS,&OPR,&LEN
         LCLA  &P
         LCLB &CC
         AIF   ('&F' EQ '').MEND
&CC      SETB  ('&SETCC' EQ 'YES')
&OACNAME SETC  '&LABEL'
&LEN     SETC  '&L'
&COMM    SETC  '&COM'(2,K'&COM-2) STRIP OFF QUOTES
&G       SETC  '&T'
.TGT     ANOP
&C       SETC  '&G'(1,1)          GET FIRST CHAR OF SOURCE
         AIF   ('&C' NE '(').TGTA MUST BE A FORM ADDRESS
         AIF   (K'&G LT 5).TGTR   MUST BE R FORM ADDRESS
&C       SETC  '&G'(K'&G-2,3)     GET LAST THREE CHARS
         AIF   ('&C' NE ',I)').TGTR MUST BE R FORM ADDRESS
&TGTI    SETB  1                  MARK AS INDIRECT
&G       SETC  '&G'(2,K'&G-4)     EXTRACT ADDRESS
         AGO   .TGT               GO PROCESS THAT
.TGTR    ANOP                     ADDRESS IS R FORM
         AIF   ('&TO' EQ '+0').TGTR1 CHECK FOR OFFSET
         MNOTE 4,'ENCOUNTERED OFFSET FROM (R) FORM ADDRESS'
         MNOTE 4,'WILL FORCE ADDRESS FORM'
&G       SETC  '0&G'              FORCE ADDR FORM
         AGO   .TGTA              IT IS ADDR FORM
.TGTR1   AIF   (NOT &TGTI).TGTR2
         MNOTE 4,'ENCOUNTERED INDIRECT FROM (R)'
         MNOTE 4,'WILL FORCE INDIRECT FROM 0(R)'
&G       SETC  '0&G'
         AGO   .TGTA              DO ADDRESS SCAN
.TGTR2   ANOP                     ITS REALLY (R) FORM
&TGTT    SETC  'R'                MARK TYPE
&TGT     SETC  '&G'(2,K'&G-2)     STRIP OFF PARENS
         AGO   .TGTEND
.TGTA    ANOP                     ADDRESS FORM
&C       SETC  '&G'(K'&G,1)       LOOK AT LAST CHAR
         AIF   ('&C' EQ ')').TGTAR IT IS A O(R) FORM ADDRESS
&TGTT    SETC  'A'
&TGT     SETC  '&G'
         AIF   ('&TO' EQ '+0').TGTEND
&TGT     SETC  '&G.&TO'
         AGO   .TGTEND
.TGTAR   ANOP                     ITS A 0(R) FORM ADDRESS
&P       SETA  K'&G               SCAN FOR THE LEFT PAREN
.TGTLP   AIF   (&P EQ 0).TGTSNTX
&C       SETC  '&G'(&P,1)
&P       SETA  &P-1
         AIF   ('&C' NE '(').TGTLP
&TGTT    SETC  'AR'
&TGT1    SETC  '&G'(&P+2,K'&G-&P+1) SAVE REG AND RIGHT PAREN
         AIF   ('&TO' NE '+0').TGTAR1
&TGT     SETC  '&G'(1,&P+1)
         AGO   .TGTEND
.TGTAR1  ANOP  MUST ADD OFFSETS
&TGT     SETC  '&G'(1,&P)
&TGT     SETC  '&TGT.&TO.('
         AGO   .TGTEND
.TGTSNTX MNOTE 12,'ILLEGAL SYNTAX: &T'
         MEXIT
.TGTEND  ANOP
&C       SETC  '&TGT  '(1,2)
         AIF   ('&C' NE '0+').TGTEND1
&TGT     SETC  '&TGT'(3,K'&TGT-2)
.TGTEND1 ANOP
&S       SETC  '&F'
.SRC     ANOP
&C       SETC  '&S'(1,1)          GET FIRST CHAR OF SOURCE
         AIF   ('&C' NE '(').SRCA MUST BE A FORM ADDRESS
         AIF   (K'&S LT 5).SRCR   MUST BE R FORM ADDRESS
&C       SETC  '&S'(K'&S-2,3)     GET LAST THREE CHARS
         AIF   ('&C' NE ',I)').SRCR MUST BE R FORM ADDRESS
&SRCI    SETB  1                  MARK AS INDIRECT
&S       SETC  '&S'(2,K'&S-4)     EXTRACT ADDRESS
         AGO   .SRC               GO PROCESS THAT
.SRCR    ANOP                     ADDRESS IS R FORM
         AIF   ('&FO' EQ '+0').SRCR1 CHECK FOR OFFSET
         MNOTE 4,'ENCOUNTERED OFFSET FROM (R) FORM ADDRESS'
         MNOTE 4,'WILL FORCE ADDRESS FORM'
&S       SETC  '0&S'              FORCE ADDR FORM
         AGO   .SRCA              IT IS ADDR FORM
.SRCR1   AIF   (NOT &SRCI).SRCR2
         MNOTE 4,'ENCOUNTERED INDIRECT FROM (R)'
         MNOTE 4,'WILL FORCE INDIRECT FROM 0(R)'
&S       SETC  '0&S'
         AGO   .SRCA              DO ADDRESS SCAN
.SRCR2   ANOP                     ITS REALLY (R) FORM
&SRCT    SETC  'R'                MARK TYPE
&SRC     SETC  '&S'(2,K'&S-2)     STRIP OFF PARENS
         AGO   .SRCEND
.SRCA    ANOP                     ADDRESS FORM
&C       SETC  '&S'(K'&S,1)       LOOK AT LAST CHAR
         AIF   ('&C' EQ ')').SRCAR IT IS A O(R) FORM ADDRESS
&SRCT    SETC  'A'
&SRC     SETC  '&S'
         AIF   ('&FO' EQ '+0').SRCEND
&SRC     SETC  '&S.&FO'
         AGO   .SRCEND
.SRCAR   ANOP                     ITS A 0(R) FORM ADDRESS
&P       SETA  K'&S               SCAN FOR THE LEFT PAREN
.SRCLP   AIF   (&P EQ 0).SRCSNTX
&C       SETC  '&S'(&P,1)
&P       SETA  &P-1
         AIF   ('&C' NE '(').SRCLP
&SRCT    SETC  'A'
&SRC1    SETC  '&S'(&P+2,K'&S-&P+1) SAVE REG AND RIGHT PAREN
         AIF   ('&FO' NE '+0').SRCAR1
&SRC     SETC  '&S'
&SRC1    SETC  ''
         AGO   .SRCEND
.SRCAR1  ANOP  MUST ADD OFFSETS
&SRC     SETC  '&S'(1,&P)
&SRC     SETC  '&SRC.&FO.(&SRC1'
&SRC1    SETC  ''
         AGO   .SRCEND
.SRCSNTX MNOTE 12,'ILLEGAL SYNTAX: &F'
         MEXIT
.SRCEND  ANOP
&C       SETC  '&SRC  '(1,2)
         AIF   ('&C' NE '0+').SRCEND1
&SRC     SETC  '&SRC'(3,K'&SRC-2)
.SRCEND1 AIF   (NOT &TGTI).SIN    CHECK FOR TARGET INDIRECT
&ARGS    SETC  '&RT,&TGT.&TGT1'   BUILD OPERANDS AND COMMENT
         AIF   (K'&ARGS GE 18).TI1
&ARGS    SETC  '&ARGS                   '(1,18)
.TI1     ANOP
&ARGS    SETC  '&ARGS &COMM'      TACK ON THE COMMENTS
         AIF   (K'&ARGS GT 55).TI2 CHECK FOR OVERFLOW
&OACNAME L     &ARGS
&COMM    SETC  ''                 COMMENT ONLY ON FIRST LINE
         AGO   .TI3
.TI2     ANOP                     NO ROOM FOR COMMENT
&OACNAME L     &RT,&TGT.&TGT1
.TI3     ANOP
&OACNAME SETC  ''
&TGT     SETC  '0('               NEW TARGET
&TGT1    SETC  '&RT)'
&TGTT    SETC  'AR'               NEW TARGET TYPE
&TGTI    SETB  0
.SIN     AIF   (NOT &SRCI).OP     CHECK FOR SOURCE INDARECT
         AIF   ('&OP' EQ 'MA').SIMA SPECIAL CASE FOR MA, SRCI
         AIF   ('&OP' NE 'MAC').SIN1 MAC MAY ALSO BE SPECIAL
         AIF   ('&TGTT' EQ 'A' OR '&TGTT' EQ 'AR').SIMAC
.SIN1    ANOP
&ARGS    SETC  '&RS,&SRC'         BUILD OPERANDS AND COMMENT
         AIF   (K'&ARGS GE 18).SIN2
&ARGS    SETC  '&ARGS                   '(1,18)
.SIN2    ANOP
&ARGS    SETC  '&ARGS &COMM'      TACK ON THE COMMENTS
         AIF   (K'&ARGS GT 55).SIN3 CHECK FOR OVERFLOW
&OACNAME L     &ARGS
&COMM    SETC  ''                 COMMENT ONLY ON FIRST LINE
         AGO   .SIN4
.SIN3    ANOP                     NO ROOM FOR COMMENT
&OACNAME L     &RS,&SRC
.SIN4    ANOP
&OACNAME SETC  ''
&SRC     SETC  '0(&RS)'           NEW SOURCE
&SRCT    SETC  'A'                NEW SOURCE TYPE
&SRCI    SETB  0
         AGO   .OP
.SIMA    ANOP
&SRCI    SETB  0
         AIF   ('&TGTT' EQ 'R').L GENERATE LOAD INSTRUCTION
         AGO   .MVC               MA SRCI IS A MVC
.SIMAC   ANOP                     MAC SRCI IS MVC AND MVI
         AIF   ('&TGTT' EQ 'AR').SIMACAR
&C       SETC  '&TGT.(4),&SRC'     A FORM TARGET
         AGO   .SIMAC1
.SIMACAR ANOP
&C       SETC  '&TGT.4,&TGT1,&SRC' AR FROM TARGET
.SIMAC1  ANOP
&ARGS    SETC  '&C'               BUILD ARGS AND COMMENT
         AIF   (K'&ARGS GE 18).SIMAC2
&ARGS    SETC  '&ARGS                   '(1,18)
.SIMAC2  ANOP
&ARGS    SETC  '&ARGS &COMM'      TACK ON THE COMMENTS
         AIF   (K'&ARGS GT 55).SIMAC3 CHECK FOR OVERFLOW
&OACNAME MVC   &ARGS
&COMM    SETC  ''                 COMMENT ONLY ON FIRST LINE
         AGO   .SIMAC4
.SIMAC3  ANOP                     NO ROOM FOR COMMENT
&OACNAME MVC   &C
.SIMAC4  ANOP
&OACNAME SETC  ''
         MVI   &TGT.&TGT1,0       CLEAR HIGH BYTE
&SRC     SETC  '&TGT,&TGT1'
         AIF   (&CC).OC
         MEXIT
.OP      ANOP
&C       SETC  '&TGTT'(1,1)
         AIF   ('&C' EQ 'R' AND '&SRCT' EQ 'R').OPRR   RR FORM INST
         AIF   ('&C' EQ 'R' AND '&SRCT' EQ 'A').OPRA
         AIF   ('&C' EQ 'A' AND '&SRCT' EQ 'R').OPAR
         AIF   ('&OP' EQ 'MA').LAST AA FORM
         AIF   ('&OP' EQ 'MAC').LAST LA ST
         AIF   ('&OP' EQ 'M').MVC
         AIF   ('&OP' EQ 'O').OC
         AIF   ('&OP' EQ 'X').XC
         AIF   ('&OP' EQ 'N').NC
         AIF   ('&OP' EQ 'CL').CLC
&LEN     SETC  '1'
         AIF   ('&OP' EQ 'MVI').MVI
         AIF   ('&OP' EQ 'OI').OI
         AIF   ('&OP' EQ 'XI').XI
         AIF   ('&OP' EQ 'NI').NI
         AIF   ('&OP' EQ 'CLI').CLI
         AIF   ('&OP' EQ 'TM').TM
.BADOP   MNOTE 12,'&OP IS UNSUPORTED WITH SUPPLIED ARGS'
         MEXIT
.OPRR    AIF   ('&OP' EQ 'MA').LR
         AIF   ('&OP' EQ 'MAC').LA
         AIF   ('&LEN' EQ '4').OPRR1
.RLENERR MNOTE 12,'INVALID LENGTH WITH R FORM ADDRESS'
         MEXIT
.OPRR1   AIF   ('&OP' EQ 'M').LR
         AIF   ('&OP' EQ 'O').OR
         AIF   ('&OP' EQ 'X').XR
         AIF   ('&OP' EQ 'N').NR
         AIF   ('&OP' EQ 'CL').CR
         AGO   .BADOP
.OPRA    AIF   ('&OP' EQ 'MA').LA
         AIF   ('&OP' EQ 'MAC').LA
         AIF   ('&OP' NE 'M').OPRA1
         AIF   ('&LEN' EQ '1').IC
         AIF   ('&LEN' EQ '2').LH
         AIF   ('&LEN' EQ '4').L
         AGO   .RLENERR
.OPRA1   AIF   ('&LEN' EQ '4').OPRA4
         AIF   ('&LEN' NE '2').RLENERR
         AIF   ('&OP' EQ 'CL').CH
         AGO   .BADOP
.OPRA4   AIF   ('&OP' EQ 'O').O
         AIF   ('&OP' EQ 'X').X
         AIF   ('&OP' EQ 'N').N
         AIF   ('&OP' EQ 'CL').C
         AGO   .BADOP
.OPAR    AIF   ('&OP' EQ 'MA').ST
         AIF   ('&OP' EQ 'MAC').STMVI ST THEN MVI
         AIF   ('&OP' NE 'M').BADOP
         AIF   ('&LEN' EQ '1').STC
         AIF   ('&LEN' EQ '2').STH
         AIF   ('&LEN' EQ '4').ST
         AGO   .RLENERR
.LR      AIF   (&CC).LTR
         AIF   ('&TGT.&TGT1' NE '&SRC').LR1
         AIF   ('&OACNAME' EQ '').LR0
&OACNAME DC    0H'0'
         MEXIT
.LR1     ANOP
&OPR     SETC  'LR'
         AGO   .RR
.LTR     ANOP
&OPR     SETC  'LTR'
&CC      SETB  0
         AGO   .RR
.OR      ANOP
&OPR     SETC  'OR'
&CC      SETB  0
         AGO   .RR
.XR      ANOP
&OPR     SETC  'XR'
&CC      SETB  0
         AGO   .RR
.NR      ANOP
&OPR     SETC  'NR'
&CC      SETB  0
         AGO   .RR
.CR      ANOP
&OPR     SETC  'CR'
&CC      SETB  0
         AGO   .RR
.MVI     ANOP
&OPR     SETC  'MVI'
         AGO   .SI
.NI      ANOP
&OPR     SETC  'NI'
&CC      SETB  0
         AGO   .SI
.OI      ANOP
&OPR     SETC  'OI'
&CC      SETB  0
         AGO   .SI
.XI      ANOP
&OPR     SETC  'XI'
&CC      SETB  0
         AGO   .SI
.CLI     ANOP
&OPR     SETC  'CLI'
&CC      SETB  0
         AGO   .SI
.TM      ANOP
&OPR     SETC  'TM'
&CC      SETB  0
         AGO   .SI
.IC      ANOP
&OPR     SETC  'IC'
         AGO   .SR
.L       ANOP
&OPR     SETC  'L'
         AGO   .SR
.LH      ANOP
&OPR     SETC  'LH'
         AGO   .SR
.LA      ANOP
&OPR     SETC  'LA'
&CC      SETB  0
&C       SETC  '&SRC'(1,2)
         AIF   ('&C' NE '0(').SR
         AIF   ('&OP' EQ 'MAC').SR
&SRC     SETC  '&SRC'(3,K'&SRC-3)
&SRCT    SETC  'R'
         AGO   .LR
.CH      ANOP
&OPR     SETC  'CH'
&CC      SETB  0
         AGO   .SR
.O       ANOP
&OPR     SETC  'O'
&CC      SETB  0
         AGO   .SR
.X       ANOP
&OPR     SETC  'X'
&CC      SETB  0
         AGO   .SR
.N       ANOP
&OPR     SETC  'N'
&CC      SETB  0
         AGO   .SR
.C       ANOP
&OPR     SETC  'C'
&CC      SETB  0
         AGO   .SR
.STC     ANOP
&OPR     SETC  'STC'
         AGO   .RS
.STH     ANOP
&OPR     SETC  'STH'
         AGO   .RS
.ST      ANOP
&OPR     SETC  'ST'
         AGO   .RS
.MVC     ANOP
&OPR     SETC  'MVC'
         AGO   .SS
.OC      ANOP
&OPR     SETC  'OC'
&CC      SETB  0
         AGO   .SS
.XC      ANOP
&OPR     SETC  'XC'
&CC      SETB  0
         AGO   .SS
.NC      ANOP
&OPR     SETC  'NC'
&CC      SETB  0
         AGO   .SS
.CLC     ANOP
&OPR     SETC  'CLC'
&CC      SETB  0
         AGO   .SS
.SI      ANOP
.RR      ANOP
.SR      ANOP
&ARGS    SETC  '&TGT.&TGT1,&SRC'
         AGO   .INSTGEN
.RS      ANOP
&ARGS    SETC  '&SRC,&TGT.&TGT1'
         AGO   .INSTGEN
.SS      AIF   ('&TGTT' EQ 'AR').SSAR
&ARGS    SETC  '&TGT.(&LEN),&SRC'
         AGO   .INSTGEN
.SSAR    ANOP
&ARGS    SETC  '&TGT.&LEN,&TGT1,&SRC'
.INSTGEN ANOP
&C       SETC  '&ARGS'            BUILD OPERANDS AND COMMENT
         AIF   (K'&C GE 18).INSTGN1
&C       SETC  '&C                   '(1,18)
.INSTGN1 ANOP
&C       SETC  '&C &COMM'         TACK ON THE COMMENTS
         AIF   (K'&C GT 55).INSTGN2 CHECK FOR OVERFLOW
&OACNAME &OPR  &C
&COMM    SETC  ''                 COMMENT ONLY ON FIRST LINE
         AGO   .INSTGN3
.INSTGN2 ANOP                     NO ROOM FOR COMMENT
&OACNAME &OPR  &ARGS
.INSTGN3 ANOP
&OACNAME SETC  ''
         AIF   (&CC).INSTGN4      CHECK FOR SET CONDITION CODE
         MEXIT
.INSTGN4 AIF   ('&TGTT' EQ 'R').INSTGNR
&ARGS    SETC  '&ARGS'(1,K'&ARGS-K'&SRC) STRIP OFF OLD SRC
         CLC   &ARGS.&TGT.&TGT1
         MEXIT
.INSTGNR ANOP
         LTR   &TGT,&TGT
         MEXIT
.LAST    AIF   ('&OP' EQ 'MAC').LAST0
&C       SETC  '&SRC'(1,2)
         AIF   ('&C' NE '0(').LAST0
&SRC     SETC  '&SRC'(3,K'&SRC-3)
&SRCT    SETC  'R'
         AGO   .ST
.LAST0   ANOP
&ARGS    SETC  '&RS,&SRC'         BUILD OPERANDS AND COMMENT
         AIF   (K'&ARGS GE 18).LAST1
&ARGS    SETC  '&ARGS                   '(1,18)
.LAST1   ANOP
&ARGS    SETC  '&ARGS &COMM'      TACK ON THE COMMENTS
         AIF   (K'&ARGS GT 55).LAST2 CHECK FOR OVERFLOW
&OACNAME LA    &ARGS
&COMM    SETC  ''                 COMMENT ONLY ON FIRST LINE
         AGO   .LAST3
.LAST2   ANOP                     NO ROOM FOR COMMENT
&OACNAME LA    &RS,&SRC
.LAST3   ANOP
&OACNAME SETC  ''
         ST    &RS,&TGT.&TGT1
         MEXIT
.STMVI   ANOP
&ARGS    SETC  '&SRC,&TGT.&TGT1'  BUILD OPERANDS AND COMMENT
         AIF   (K'&ARGS GE 18).STMVI1
&ARGS    SETC  '&ARGS                   '(1,18)
.STMVI1  ANOP
&ARGS    SETC  '&ARGS &COMM'      TACK ON THE COMMENTS
         AIF   (K'&ARGS GT 55).STMVI2 CHECK FOR OVERFLOW
&OACNAME ST    &ARGS
&COMM    SETC  ''                 COMMENT ONLY ON FIRST LINE
         AGO   .STMVI3
.STMVI2  ANOP                     NO ROOM FOR COMMENT
&OACNAME ST    &SRC,&TGT.&TGT1
.STMVI3  ANOP
&OACNAME SETC  ''
         MVI   &TGT.&TGT1,0       CLEAR HIGH BYTE
         MEXIT
         AIF   (NOT &CC).MEND
&SRC     SETC  '&TGT.&TGT1'
&SRCT    SETC  'A'
&LEN     SETC  '4'
         AGO   .CLC
.MEND    MEND
