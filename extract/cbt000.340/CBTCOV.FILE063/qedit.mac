         MACRO
&LABEL   QEDIT &CIBCTR=,&BLOCK=,&ORIGIN=
         LCLC  &OP,&REG,&SIGN      PARAMETERS
         LCLA  &LENGTH             K'&OP
         LCLC  &STRIP              '&OP'(2,&LENGTH-2)
.*
.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.
.*
.*             QEDIT               CIB CHAIN MANIPULATOR
.*
.*       THE QEDIT MACRO GENERATES BOTH THE REQUIRED ENTRY PARAMETERS
.*       AND THE LINKAGE TO SVC 34 FOR THE FOLLOWING THREE FUNCTIONS
.*
.*       (1)   ADDING A CIB TO THE CHAIN FOR A TASK
.*       (2)   DECHAINING AND FREEING A CIB
.*       (3)   SETTING A LIMIT ON THE NUMBER OF CIB'S
.*             TO BE SIMULTANEOUSLY CHAINED FOR A TASK
.*
.*             THE MACRO FORMAT IS
.*
.*       SYMBOL   QEDIT   ORIGIN=ADDRESS/(0),
.*                        BLOCK=ADDRESS/(1),CIBCTR=NUMBER/(1)
.*             WHERE
.*       SYMBOL
.*             IS ANY SYMBOL VALID IN THE ASSEMBLER LANGUAGE
.*       ADDRESS
.*             IS ANY ADDRESS VALID IN AN RX INSTRUCTION
.*             OR ONE OF THE GENERAL REGISTERS 2 THROUGH 12
.*             PREVIOUSLY LOADED WITH THE INDICATED ADDRESS
.*             THE REGISTER MUST BE DESIGNATED BY A NUMBER
.*             OR SYMBOL CODED WITHIN PARENTHESES
.*       NUMBER
.*             IS ANY ADDRESS VALID IN AN RX INSTRUCTION
.*             OR ONE OF THE GENERAL REGISTERS 2 THROUGH 12
.*             PREVIOUSLY LOADED WITH THE INDICATED ADDRESS
.*             THE REGISTER MUST BE DESIGNATED BY A NUMBER
.*             OR SYMBOL CODED WITHIN PARENTHESES
.*             AND MUST NOT CONTAIN ZERO
.*       BLOCK
.*             SPECIFIES THE ADDRESS OF THE CIB
.*             WHICH IS TO BE OPERATED UPON
.*       ORIGIN
.*             SPECIFIES THE ADDRESS OF THE POINTER TO THE FIRST CIB
.*             THIS PARAMETER MUST SPECIFY THE ADDRESS
.*             OF THE THIRD WORD OF THE START PARAMETER LIST
.*             OTHERWISE THE OPERATION WILL BE IGNORED
.*             AND A RETURN CODE OF FOUR RETURNED
.*       CIBCTR
.*             SPECIFIES A NONNEGATIVE INTEGER TO BE USED
.*             AS A LIMIT ON THE NUMBER OF CIB'S
.*             TO BE CHAINED AT ANY ONE TIME FOR A TASK
.*
.*       THE FOLLOWING TABLE INDICATES THE VALID OPERAND COMBINATIONS
.*       OF THE MACRO ACCORDING TO THE FUNCTION BEING INVOKED
.*
.*             FUNCTION            OPERANDS
.*
.*             ADD A CIB           ORIGIN BLOCK
.*             FREE A CIB          ORIGIN BLOCK
.*             FREE ALL CIB'S      ORIGIN
.*             SET CIB LIMIT       ORIGIN CIBCTR
.*
.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.
.*
.*             THE QEDIT MACRO WILL ISSUE SVC 34
.*       TO ADD OR FREE AN ELEMENT OF A CIB QUEUE
.*             WITH (0) = +ORIGIN AND (1) = -BLOCK
.*       TO FREE ALL THE ELEMENTS OF A CIB QUEUE
.*             WITH (0) = +ORIGIN AND (1) = ZERO
.*       OR TO SET THE CIB QUEUE LENGTH MAXIMUM IN A CSCB
.*             WITH (0) = -ORIGIN AND (1) = -CIBCTR
.*       BUT (1) = ZERO IF CIBCTR = ZERO
.*
         AIF   ('&LABEL' EQ '').L
&LABEL   DS    0H
.L       ANOP
.*                                 CHECK
.*                                     KEYWORDS
         AIF   ((T'&CIBCTR EQ 'O' OR T'&BLOCK EQ 'O')                  $
               AND T'&ORIGIN NE 'O').Q00
         MNOTE *,'ORIGIN MUST BE PRESENT AND CIBCTR OR BLOCK ABSENT'
         MEXIT
.Q00     ANOP
.*                                     REGISTERS
         AIF   ('&ORIGIN' NE '(1)').Q10
         MNOTE *,'ORIGIN=(1) OR EQUIVALENT MUST NOT BE SPECIFIED'
         MEXIT
.Q10     ANOP
.*                                     OPERANDS
         AIF   ('&CIBCTR' NE '&ORIGIN' AND '&BLOCK' NE '&ORIGIN').Q20
         MNOTE *,'OPERAND REFERENTS OBVIOUSLY MUST BE DISTINCT'
         MEXIT
.Q20     ANOP
.*                                 R1
.S       ANOP
&REG     SETC  '1'
         AIF   (T'&CIBCTR NE 'O').S10
         AIF   (T'&BLOCK NE 'O').S20
.*                                     ORIGIN
&OP      SETC  '0'
&SIGN    SETC  '+'
         AGO   .X
.*                                     CIBCTR
.S10     ANOP
         AIF   ('&CIBCTR' EQ '0').S15
&OP      SETC  '&CIBCTR'
&LENGTH  SETA  K'&CIBCTR
&SIGN    SETC  '-'
         AGO   .X
.*                                     DISABLE
.S15     ANOP
         SR    R1,R1               BAR CIB'S
         AGO   .R
.*                                     BLOCK
.S20     ANOP
&OP      SETC  '&BLOCK'
&LENGTH  SETA  K'&BLOCK
&SIGN    SETC  '-'
         AGO   .X
.*                                 R0
.R       ANOP
&REG     SETC  '0'
         AIF   (T'&CIBCTR NE 'O').R10
         AIF   (T'&BLOCK NE 'O').R20
.*                                     ORIGIN
&OP      SETC  '&ORIGIN'
&LENGTH  SETA  K'&ORIGIN
&SIGN    SETC  '+'
         AGO   .X
.*                                     CIBCTR
.R10     ANOP
&OP      SETC  '&ORIGIN'
&LENGTH  SETA  K'&ORIGIN
&SIGN    SETC  '-'
         AGO   .X
.*                                     BLOCK
.R20     ANOP
&OP      SETC  '&ORIGIN'
&LENGTH  SETA  K'&ORIGIN
&SIGN    SETC  '+'
         AGO   .X
.*                                 LOAD
.X       ANOP
         AIF   ('&OP'(1,1) EQ '(').X50
.*                                     SYMBOLIC
         LA    &REG,&OP            LOAD PARAMETER
         AIF   ('&SIGN' EQ '+').Y
         LNR   &REG,&REG           COMPLEMENT PARAMETER
         AGO   .Y
.*                                     REGISTER
.X50     ANOP
         AIF   ('&OP'(2,1) EQ '&REG').X70
.*                                     DISTINCT
&STRIP   SETC  '&OP'(2,&LENGTH-2)
         AIF   ('&SIGN' EQ '+').X60
         LNR   &REG,&STRIP         LOAD COMPLEMENTED PARAMETER
         AGO   .Y
.X60     ANOP
         LR    &REG,&STRIP         LOAD PARAMETER
         AGO   .Y
.*                                     IDENTICAL
.X70     ANOP
         AIF   ('&SIGN' EQ '+').Y
         LNR   &REG,&REG           COMPLEMENT PARAMETER
         AGO   .Y
.*                                 END
.Y       ANOP
         AIF   ('&REG' EQ '1').R
         SVC   34                  CALL SUPERVISOR
         MEND
