         MACRO
&NAME    OACSUB   &CSECT=NO,&ENTRY=NO,&BASE=R10,&ENTRYS=,&ENTRYR=,     X
               &EXIT=,&DSECT=,&WORK=,&INUSE=YES,&ID=,&DATE=,&PRINT=
         COPY  OACGBLS            GET OAC GLOBAL ASM SYSMS
         LCLC  &C,&I,&D,&LEN,&NM
         LCLA  &N,&X,&WL
         LCLB  &XZ
         OACPRTPM PRINT=&PRINT
         AIF   ('&DSECT' EQ '').L3
&DSECT   DSECT
&LEN     SETC  'XL&SYSNDX'
         DC    8D'0'              SPACE FOR STM R0,R1
         AIF   ('&WORK(2)' EQ '').L1
         OACSUBWK &WORK(2)
.L1      ANOP
         AIF   ('&WORK(1)' EQ ''  OR '&WORK(1)' EQ '0').L2
&WORK(3) DC    0D'0',&WORK(1)XL1'0' RESERVED AREA
.L2      ANOP
XL&SYSNDX EQU  8*((7+*-&DSECT)/8) MAKE IT A MULTIPLE OF 8
&SYSECT  CSECT
         SPACE &OACPRTS
         AGO   .L6
.L3      AIF   ('&WORK(3)' EQ '').L4
         MNOTE 4,'WORK LABEL REQUIRES CODING DSECT=NAME'
.L4      AIF   ('&WORK(2)' EQ '').L5
         MNOTE 12,'WORK MACRO REQUIRES CODING DSECT=NAME'
.L5      ANOP
&WL      SETA  64                 SPACE FOR STM R0,R15
&LEN     SETC  '64'
         AIF   ('&WORK(1)' EQ ''  OR '&WORK(1)' EQ '0').L6
&WL      SETA  &WL+8*((&WORK(1)+7)/8)
&LEN     SETC  '&WL'
.L6      AIF   ('&OACPRT' NE 'NONE').L8
         PRINT ON,GEN
.L8      ANOP
         AIF   ('&CSECT' NE 'YES').L9
&NAME    CSECT
&NM      SETC  ''
         AGO   .L11
.L9      AIF   ('&ENTRY' NE 'YES').L10
         ENTRY &NAME
.L10     ANOP
&NM      SETC  '&NAME'
.L11     AIF   ('&ID' EQ '').L14
&D       SETC  '&SYSDATE'
         AIF   ('&DATE' EQ '').L12
&D       SETC  '&DATE'
         MNOTE 7,'REMOVE DATE= BEFORE FINAL ASSEMBLY'
.L12     ANOP
&I       SETC  '&ID &D'
&A       SETA  2*(K'&I/2)
         AIF   (K'&I EQ &A).L13
&I       SETC  '&I '
.L13     ANOP
&A       SETA  4+K'&I
&NM      B     &A.(R15)           BRANCH AROUND ID
&NM      SETC  ''
         DC    C'&I'
.L14     ANOP
&NM      STM   R0,R15,0(R13)      SAVE CALLERS REGS
         AIF   ('&BASE' EQ '').L15B
         AIF   ('&BASE(2)' EQ '').L15
         OACUSING &BASE(2),&BASE(1)
         AGO   .L15B
.L15     AIF   ('&BASE' EQ 'R15').L15A
         LR    &BASE,R15          SAVE BASE
.L15A    ANOP
         OACUSING &NAME,&BASE
.L15B    ANOP
&N       SETA  N'&ENTRYS
&NM      SETC  ''
         AIF   (&N EQ 0).L18
         AIF   ('&ENTRYR' NE '').L16
         MNOTE 12,'ENTRYR REQUIRED IF ENTRYS CODED'
.L16     ANOP
         SR    &ENTRYR,&ENTRYR    MARK AS MAIN ENTRY
         B     XC&SYSNDX          GO TO COMMON CODE
&NM      SETC  'XC&SYSNDX'
&X       SETA  1
.LOOP    ANOP
         SPACE 1
&C       SETC  '&ENTRYS(&X)'
         AIF   ('&ENTRY' NE 'YES').L17
         ENTRY &C
.L17     ANOP
&C       STM   R0,R15,0(R13)      SAVE CALLERS REGS
&A       SETA  4*&X
         LA    &ENTRYR,&A         MARK AS ENTRY NO &X
         L     &BASE,XB&SYSNDX-&C.(R15) GET BASE ADDRESS
         B     XC&SYSNDX          GO TO COMMON CODE
&X       SETA  &X+1
         AIF   (&X LE &N).LOOP
XB&SYSNDX DC   A(&NAME)           BASE ADDRESS
.L18     ANOP
&NM      LR    R11,R13            PUSH STACK
         LA    R13,&LEN.(R13)     RESERVE THIS ELEMENT
         C     R13,&OACSTMX       CHECK FOR OVERFLOW
         BNL   &OACSTER           IF SO GOTO ERROR ROUTINE
         AIF   ('&DSECT' EQ '').L19
         OACUSING &DSECT,R11
.L19     AIF   ('&EXIT' EQ '').L22
         B     XZ&SYSNDX
&XZ      SETB  1
         SPACE 2
&EXIT(1) OACRET RC=&EXIT(2)
.L22     ANOP
         SPACE 2
         AIF   (NOT &XZ).L23
XZ&SYSNDX DC   0H'0'
.L23     AIF   ('&INUSE' NE 'YES').MEND
         OACINUSE PRINT=&PRINT
.MEND    POP   PRINT
         MEND
