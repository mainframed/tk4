         MACRO
         OACINNRB &C,&TB,&TO,&TL,&S,&WX=R0
.*  OAC INNER MACRO FOR MF=B (AND E) PARAMETERS
.* &C    - TYPE OF TARGET
.*         A   - ADDRESS (PLACE ADDRESS AT TARGET)
.*         V   - VALUE   (PLACE VALUE AT TARGET)
.*         NI  - BIT     (CHANGE BITS IN BYTE OF FLAGS)
.*         OI  - BIT
.*         XI  - BIT
.*         MVI - BIT
.*         TM  - BIT
.* &TB   - TARGET BASE (CAN BE REGISTER OR NULL)
.* &TO   - TARGET OFFSET (NULL IF 0)
.* &TL   - LENGTH OF TARGET (IN BYTES)
.* &S    - SOURCE
.* &WX   - WORK REGISTER IF REQUIRED
         GBLC  &OACNAME           NAME FIELD ON ORIG MACRO GLOBAL
.*
         LCLB  &TR                TARGET IS REGISTER
         LCLC  &TX                REGISTER OF TARGET
         LCLB  &TBR               TARGET BASE IS REGISTER
         LCLC  &TBX               REGISTER OF TARGET BASE
         LCLC  &TP                '+' FOR TARGET OFFSET
         LCLB  &SR                SOURCE IS REG
         LCLC  &SX                REGISTER OF SOURCE
         LCLC  &OP                GENERATED OP CODES
         LCLC  &SREG              SOURCE REGISTER
.*
.*  SET COMMON VARIABLE SYMBOLS (FOR TARGET)
         AIF   ('&TB' EQ '').NOTB BIF NO TARGET BASE
         AIF   ('&TB'(1,1) NE '(').NOTB BIF TARGET NOT BASED ON REG
&TBR     SETB  1                  TARGET IS BASED ON REGISTER
&TBX     SETC  '&TB'(2,K'&TB-2)   REGISTER OF TARGET BASE
.NOTB    ANOP
&OP      SETC  '&C'               DEFAULT GENERATED OPCODE
&TX      SETC  '&WX'              USE WORK REG IF TARGET NOT REGISTER
         AIF   ('&TO' EQ '').NOTO BIF TARGET OFFSET NULL
&TP      SETC  '+'                MAY NEED PLUS FOR OFFSET ADD
&TR      SETB  ('&TO'(1,1) EQ '(') TARGET IS REGISTER
         AIF   (NOT &TR).NOTO     BIF TARGET NOT REGISTER
&TX      SETC  '&TO'(2,K'&TO-2)   REGISTER OF TARGET
.*
.*  SET COMMON VARIABLE SYMBOLS (FOR SOURCE)
.NOTO    AIF   ('&S' EQ '').NOS   BIF NO SOURCE
&SR      SETB  ('&S'(1,1) EQ '(') SOURCE IS REGISTER
         AIF   (NOT &SR).NOS      BIF SOURCE NOT REGISTER
&SX      SETC  '&S'(2,K'&S-2)     REGISTER OF SOURCE
         AIF   (&TR).NOS          BIF TARGET IN REGISTER
&TX      SETC  '&SX'              USE SOURCE REG IF TARGET NOT IN REG
.*
.*   DECIDE CALL TYPE
.NOS     AIF   ('&C' NE 'A').CV   BIF NOT A CALL (ADDRESS)
.*
.*   ADDRESS TYPE
.CA      AIF   ('&S' EQ '').DONE  BIF SOURCE NULL
         AIF   (NOT &SR).CANR     BIF SOURCE NOT IN REGISTER
         AIF   (NOT &TR).CASTOR2  BIF TARGET ^REG AND SOURCE IS REG
.CARR    AIF   ('&SX' EQ '&TX').DONE BIF SOURCE AND TARGET SAME
&OACNAME LR    &TX,&SX
         AGO   .DONEL
.CANR    AIF   ('&S' NE '0').CAN0 BIF SOURCE NOT ZERO
&OACNAME SR    &TX,&TX
         AGO   .CAN0GO
.CAN0    ANOP
&OACNAME LA    &TX,&S
.CAN0GO  ANOP
&OACNAME SETC  ''
.CASTORE AIF   (&TR).DONE         BIF TARGET IN REQUIRED REG
.CASTOR2 AIF   (&TL EQ 4).CAST4   BIF LENGTH 4
         AIF   (&TL EQ 2).CAST2   BIF LENGTH 2
         AIF   (&TL EQ 1).CAST1   BIF LENGTH 2
         MNOTE 8,'(OACINNRB) - INVALID LENGTH &TL - &S'
         MEXIT
.CAST4   ANOP
&OP      SETC  'ST'
         AGO   .CASTIT
.CAST2   ANOP
&OP      SETC  'STH'
         AGO   .CASTIT
.CAST1   ANOP
&OP      SETC  'STC'
         AGO   .CASTIT
.CASTIT  AIF   (&TBR).CATBR       BIF TARGET BASED ON REGISTER
&OACNAME &OP   &TX,&TB&TP&TO
         AGO   .DONEL
.CATBR   ANOP
&OACNAME &OP   &TX,&TO.(,&TBX)
         AGO   .DONEL
.*
.*   VALUE TYPE (IF SOURCE IN REGISTER SAME AS ADDRESS TYPE)
.CV      AIF   ('&C' NE 'V').CB
         AIF   ('&S' EQ '').DONE  BIF SOURCE NULL
         AIF   (&SR).CA           BIF SOURCE IN REGISTER
         AIF   ('&S'(1,1) EQ '=').CVLIT BIF LITERAL
         AIF   (T'&S NE 'N').CA   BIF NOT SELF DEFINING TERM, DO LA
         AIF   (&S EQ 0 AND NOT &TR).CVXC BIF ZERO AND TARGET STORAGE
         AIF   (&TL EQ 1).CVMVI
         AIF   (&S GE 0 AND &S LT 4096).CA BIF LA WILL WORK
&OACNAME L     &TX,=F'&S'
&OACNAME SETC  ''
         AGO   .CASTORE           GO STORE VALUE
.CVMVI   AIF   (&S GE 0 AND &S LE 255).CVMVIX
         MNOTE 8,'(OACINNRB) - NOT ONE BYTE VALUE &S'
.CVMVIX  ANOP
&OP      SETC  'MVI'              WILL GENERATE MVI
         AGO   .CBINT             GO GENERATE MVI
.CVLIT   AIF   (NOT &TR).CVSS     BIF STORAGE STORAGE, DO MVC / XC
&OACNAME L     &TX,&S
&OACNAME SETC  ''
         AGO   .CASTORE           GO STORE VALUE
.CVSS    AIF   (&TBR).CVSSBR      BIF TARGET BASED
&OACNAME MVC   &TB&TP&TO.(&TL),&S
         AGO   .DONEL
.CVSSBR  MVC   &TO.(&TL,&TBX),&S
         AGO   .DONEL
.CVXC    AIF   (&TBR).CVXCBR      BIF TARGET BASED
&OACNAME XC    &TB&TP&TO.(&TL),&TB&TP&TO
         AGO   .DONEL
.CVXCBR  XC    &TO.(&TL,&TBX),&TO.(&TBX)
         AGO   .DONEL
.*
.*    BIT TYPE
.CB      AIF   ('&C' NE 'OI' AND '&C' NE 'NI' AND '&C' NE 'MVI' AND    X
               '&C' NE 'TM').CINV
.CBINT   AIF   ('&S' EQ '').DONE  BIF ALL DONE
         AIF   (&TBR).CBSBR       BIF TARGET BASED
&OACNAME &OP   &TB&TP&TO,&S
         AGO   .DONEL
.CBSBR   ANOP
&OACNAME &OP   &TO.(&TBX),&S
         AGO   .DONEL
.*
.*
.CINV    MNOTE 8,'INVALID TYPE (OACINNRB) - &C - &S'
         MEXIT
.*
.*
.DONEL   ANOP
&OACNAME SETC ''
.DONE    MEND
