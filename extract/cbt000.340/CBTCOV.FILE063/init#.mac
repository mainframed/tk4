         MACRO
         INIT# &CSECT,&BASEREG=,&EXEC=,                                X
               &REGS=YES,&CODE=NORENT,&SP=0,                           X
               &LNKREG=(14),&PATCH=(128,ZLINPTCH),                     X
               &LIST=YES,&EXLIST=YES,                                  X
               &SAVE=(14,12),&ID=*,&REL=,                              X
               &RC=(15),&USTART=NO,&UEND=NO
.*
.**********************************************************************
.*       MACRO DESCRIPTION                                            *
.**********************************************************************
.*                                                                    *
.*                              YURY STRASHNOY                        *
.*                              @/YSS - 07/27/81                      *
.*                              ----------------                      *
.*                                                                    *
.*       INIT# MYNAME,BASEREG=(12),EXEC=MAINLINE  MINIMUM SET OF PARM *
.*                                                                    *
.*                                                                    *
.*       INIT# MYNAME,                   MYNAME-CSECT NAME            *
.*             BASEREG=(12,3,9),         12,3,9 - BASE REGS           *
.*             EXEC=MAINLINE,            START EXECUTION FROM MAINLINE*
.*             REGS=YES,                 GEN.STANDARD REGS EQUATION   *
.*             CODE=NORENT,SP=0,         NONREENTRABLE CODE           *
.*             LNKREG=(14),              REG.14 - LINK REGISTER       *
.*             PATCH=(128,ZLINPTCH),     PATCH - ZLINPTCH DC 128H'0'  *
.*             LIST=YES,EXLIST=YES,      PRINT GEN IS OK              *
.*             SAVE=(14,12),ID=*,        SAVE (14,12),,*              *
.*             REL=03.02.01,             RELEASE NUMBER-DC'03.02.01'  *
.*             RC=(15)                   RETURN CODE IN REG15         *
.*                                                                    *
.*       INIT# MYNAME,                   MYNAME-CSECT NAME            *
.*             BASEREG=(12),             12 - BASE REGISTER           *
.*             EXEC=MAINLINE,            START EXECUTION FROM MAINLINE*
.*             REGS=NO,                  DO NOT GENER REGS EQUATION   *
.*             CODE=RENT,SP=255,         REENTERABLE CODE,SUBPOOL=255 *
.*             LNKREG=(11),              REG.11 - LINK REGISTER       *
.*             PATCH=(120),              PATCH -          DC 120H'0'  *
.*             LIST=NO,EXLIST=NO,        PRINT NOGEN                  *
.*             SAVE=(14,12),ID=YURY,     SAVE (14,12),,YURY           *
.*             REL=,                     NO RELEASE NUMBER SPECIFIED  *
.*             RC=4                      RETURN CODE IS 4             *
.*                                                                    *
.**********************************************************************
.*
.**********************************************************************
.*       DEFINE VARIABLES                                             *
.**********************************************************************
.*
         LCLA  &I,&N                             COUNTERS
         GBLC  &GLREG                            GLOBAL LINK REGISTER
         GBLC  &REENT                            CODE TYPE INDICATOR
         GBLC  &STARTEX                          START POINT NAME
         GBLC  &LIS,&EXLIS                       LISTING TYPE INDICATOR
         LCLC  &VMTMDT,&PATLBL                   TIME STAMP;PATCH LABEL
         LCLC  &BASPARM
.*
.**********************************************************************
.*       CHECK INPUT PARAMETERS                                       *
.**********************************************************************
.*
         AIF   ('&CSECT' EQ '').ERR01            SPECIFY CSECT NAME
.*
         AIF   ('&BASEREG' EQ '').ERR02          SPECIFY BASE REGISTERS
         AIF   ('&BASEREG'(1,1) NE '(').ERR02
         AIF   (N'&BASEREG GT 11 OR N'&BASEREG EQ 0).ERR02
&I       SETA  0                                 ZERO OUT COUNTER
.CHKBASE ANOP
&I       SETA  &I+1
         AIF   ('&BASEREG(&I)' EQ '').ERR02      SPECIFY BASE REGISTER
         AIF   ('&BASEREG(&I)' GT '12' OR '&BASEREG(&I)' LT '2').ERR02
         AIF   ('&BASEREG(&I)' GT '9' AND '&BASEREG(&I)' LT '10').ERR02
         AIF   ('&LNKREG(1)' EQ '&BASEREG(&I)').ERR07
         AIF   (N'&BASEREG GT &I).CHKBASE        CHECK NEXT BASE REG
.*
         AIF   ('&EXEC' EQ '').ERR03             SPECIFY START POINT
.*
         AIF   ('&REGS' NE 'YES' AND '&REGS' NE 'NO').ERR04
         AIF   ('&CODE' NE 'NORENT' AND '&CODE' NE 'RENT').ERR05
         AIF   ('&SP' EQ '' AND '&CODE' EQ 'RENT').ERR06
.*
         AIF   ('&LNKREG' EQ '').ERR07
         AIF   ('&LNKREG'(1,1) NE '(').ERR07
         AIF   (N'&LNKREG NE 1).ERR07
         AIF   ('&LNKREG(1)' GT '14' OR '&LNKREG(1)' LT '2').ERR07
         AIF   ('&LNKREG(1)' GT '9' AND '&LNKREG(1)' LT '10').ERR07
         AIF   ('&LNKREG(1)' GT '12' AND '&LNKREG(1)' LT '14').ERR07
.*
         AIF   (N'&PATCH GT 2).ERR08
         AIF   ('&LIST' NE 'YES' AND '&LIST' NE 'NO').ERR09
         AIF   ('&EXLIST' NE 'YES' AND '&EXLIST' NE 'NO').ERR10
         AIF   (K'&REL GT 8).ERR11
.*
         AGO   .OK
.ERR01   MNOTE 12,'YS000001-CSECT NAME WAS NOT SPECIFIED'
         MEXIT
.ERR02   MNOTE 12,'YS000002-&&BASEREG DEFINES INVALID BASE REGISTER'
         MEXIT
.ERR03   MNOTE 12,'YS000003-&&EXEC DOES NOT DEFINE START POINT'
         MEXIT
.ERR04   MNOTE 12,'YS000004-&&REGS MUST BE ''YES'' OR ''NO'''
         MEXIT
.ERR05   MNOTE 12,'YS000005-&&CODE MUST BE ''RENT'' OR ''NORENT'''
         MEXIT
.ERR06   MNOTE 12,'YS000006-&&SP DOES NOT DEFINE SUBPOOL NUMBER'
         MEXIT
.ERR07   MNOTE 12,'YS000007-&&LNKREG DEFINES INVALID LINK REGISTER'
         MEXIT
.ERR08   MNOTE 12,'YS000008-&&PATCH HAS TOO MANY SUBPARAMETERS'
         MEXIT
.ERR09   MNOTE 12,'YS000009-&&LIST MUST BE ''YES'' OR ''NO'''
         MEXIT
.ERR10   MNOTE 12,'YS000010-&&EXLIST MUST BE ''YES'' OR ''NO'''
         MEXIT
.ERR11   MNOTE 12,'YS000011-&&REL HAS TOO MANY CHARACTERS'
         MEXIT
.*
.**********************************************************************
.*       SET UP GLOBAL VARIABLES                                      *
.**********************************************************************
.*
.OK      ANOP
         SEQCK INIT                              SET UP STACK
.*
&REENT   SETC  'N'                               ASSUME NONREENTRENT
         AIF   ('&CODE' EQ 'NORENT').REENTOK     IS CODE NORENT ?
&REENT   SETC  'Y'                               CODE IS REENTRENT
.REENTOK ANOP
.*
&EXLIS   SETC  'N'                               ASSUME CODE NOGEN
         AIF   ('&EXLIST' EQ 'NO').EXLISOK       IS CODE NOGEN ?
&EXLIS   SETC  'Y'                               CODE IS PRINT GEN
.EXLISOK ANOP
.*
&LIS     SETC  'N'                               ASSUME PRINT NOGEN
         AIF   ('&LIST' EQ 'NO').LISOK           IS ALL LISTING NOGEN ?
&LIS     SETC  'Y'                               LISTING IS PRINT GEN
.LISOK   ANOP
.*
&GLREG   SETC  '&LNKREG(1)'                      SET UP GLOBAL LINK REG
.*
&STARTEX SETC  '&EXEC'                           START POINT
.*
.**********************************************************************
.*       GENERATE CODE                                                *
.**********************************************************************
.*
         AIF   ('&LIS' EQ 'Y').CODE010           IS PRINT GEN ?
         PRINT NOGEN
.CODE010 ANOP
.*
         SPACE
&CSECT   CSECT
         SPACE
         AIF   ('&REGS' EQ 'NO').CODE020         DO WE DEFINE REGS ?
R0       EQU   0                                 REGISTERS EQUATES
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
RA       EQU   10
RB       EQU   11
RC       EQU   12
RD       EQU   13
RE       EQU   14
RF       EQU   15
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE
.CODE020 ANOP
.*
.*       GENERATE MACRO 'SAVE' TO SAVE REGISTERS
.*
         AIF   ('&LIS' EQ 'N').CODE025           IS PRINT NOGEN ?
         MNOTE '         SAVE  &SAVE,,&ID'       DISPLAY MACRO-CALL
.CODE025 ANOP
         SAVE  &SAVE,,&ID                        SAVE REGISTERS
         SPACE
.*
&N       SETA  K'&BASEREG-2
&BASPARM SETC  '&BASEREG'(2,&N)
         USING &CSECT,&BASPARM                   DEFINE BASE REGISTERS
.*
&I       SETA  1                                 COUNTER IS 1
         LR    &BASEREG(1),15                    LOAD BASE REGISTER
.CODE030 ANOP
&I       SETA  &I+1                              INCREASE REGS COUNTER
         AIF   (N'&BASEREG LT &I).CODE040        ARE THERE MORE REGS ?
         LA    &BASEREG(&I),4095(&BASEREG(&I-1)) LOAD BASE REGISTER
         LA    &BASEREG(&I),1(&BASEREG(&I))      LOAD BASE REGISTER
         AGO   .CODE030                          GET NEXT REGISTER
.CODE040 ANOP
.*
         AIF   ('&REENT' EQ 'N').CODE050         IS CODE REENT ?
         USING ZLINSAVE,13                       SET UP DSECT BASE
         SPACE
         AIF   ('&LIS' EQ 'N').CODE055
         MNOTE '         GETMAIN R,LV=ZLINSIZE,SP=&SP'
.CODE055 ANOP
         GETMAIN R,LV=ZLINSIZE,SP=&SP            GET DYNAMIC CORE
         SPACE
         LR    &LNKREG(1),13                     PREV SAVE AREA ADDR
         LR    13,1                              LOAD DSECT BASE
         L     0,20(&LNKREG(1))                  RELOAD R0 FROM SAREA
         L     1,24(&LNKREG(1))                  RELOAD R1 FROM SAREA
         L     15,16(&LNKREG(1))                 RELOAD 15 FROM SAREA
         AGO   .CODE060
.*
.CODE050 ANOP
         LR    &LNKREG(1),13                     PREV SAVE AREA ADDR
         LA    13,ZLINSAVE                       NEW SAVE AREA ADDR
.CODE060 ANOP
         ST    &LNKREG(1),ZLINSAVE+4             SAVE PREV SAREA ADDR
         ST    13,8(&LNKREG(1))                  SAVE MY SAREA ADDR
.*
         SPACE
         B     &EXEC                             EXECUTE MAIN ROUTINE
ZLINEXIT EQU   *                                 RETURN POINT
         SPACE
.*
         AIF   ('&REENT' EQ 'N').CODE070         IS CODE REENT ?
         LR    &LNKREG(1),15                     SAVE RETURN CODE
         LR    1,13                              FREEMAIN CORE ADDR
         L     13,ZLINSAVE+4                     LOAD CALLER SAREA ADDR
         SPACE
         AIF   ('&LIS' EQ 'N').CODE075           IS PRINT NOGEN ?
         MNOTE '         FREEMAIN R,LV=ZLINSIZE,A=(1),SP=&SP'
.CODE075 ANOP
         FREEMAIN R,LV=ZLINSIZE,A=(1),SP=&SP
         SPACE
         LR    15,&LNKREG(1)                     RESTORE RETURN CODE
.*
.*       GENERATE MACRO 'RETURN' TO RETURN TO CALLER
.*
         AIF   ('&LIS' EQ 'N').CODE077           IS PRINT NOGEN ?
         MNOTE '         RETURN &SAVE,RC=&RC'
.CODE077 ANOP
         RETURN &SAVE,RC=&RC
         AGO   .CODE080
.*
.CODE070 ANOP
         L     13,ZLINSAVE+4                     LOAD CALLER SAREA ADDR
.*
.*       GENERATE MACRO 'RETURN' TO RETURN TO CALLER
.*
         AIF   ('&LIS' EQ 'N').CODE085           IS PRINT NOGEN ?
         MNOTE '         RETURN &SAVE,RC=&RC'
.CODE085 ANOP
         RETURN &SAVE,RC=&RC
.*
.CODE080 ANOP
.*
         SPACE
         AIF   ('&REENT' EQ 'N').CODE090         IS CODE REENT ?
ZLINDSCT DSECT                                   REMOTE CORE DSECT
ZLINSAVE DC    18F'0'                            REGISTERS SAVE AREA
&CSECT   CSECT                                   CSECT CONTINUATION
         AGO   .CODE100
.CODE090 ANOP
ZLINSAVE DC    18F'0'                            REGISTERS SAVE AREA
         DC    A(ZLIN9999)                       CHECK MACRO 'END#'
.*
.CODE100 ANOP
         DC    CL8'&CSECT'                       CSECT NAME
         AIF   ('&REL' EQ '').NOREL              IS RELEASE SPECIFIED ?
         DC    CL4'REL:'                         RELEASE ID
         DC    CL8'&REL'                         RELEASE NUMBER
.NOREL   ANOP
         SPACE
         DC    CL10' ASM.TIME '                  TIME STAMP HEADER
&VMTMDT  SETC  '&SYSTIME'(1,2)
         DC    CL2'&VMTMDT'                      ASSEMBLY TIME (HH)
         DC    C':'                              COLON
&VMTMDT  SETC  '&SYSTIME'(4,2).' '
         DC    CL3'&VMTMDT'                      ASSEMBLY TIME (MM)
&VMTMDT  SETC  '&SYSDATE'(1,8)
         DC    CL8'&VMTMDT'                      DATE (MM/DD/YY)
.*
         AIF   ('&PATCH' EQ '').NOPATCH          IS PATCH REQUIRED ?
         AIF   ('&PATCH(1)' EQ '').NOPATCH       IS PATCH REQUIRED ?
&PATLBL  SETC  '&PATCH(2)'                       SET PATCH LABEL
         SPACE
         DS    0H
         DC    CL8' YSPATCH'                     PATCH INITIAL ID
&PATLBL  DC    &PATCH(1).H'0'                    PATCH AREA
         DC    CL8'ENDPATCH'                     PATCH FINAL ID
.NOPATCH ANOP
         SPACE
.*
         MEND
