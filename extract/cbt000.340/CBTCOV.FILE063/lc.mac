         MACRO
&NFS     LC    &STRING,&IMAGE,&L=
.*.
.*  THIS MACRO WILL DO A DC FOR A LOWER CASE STRING.
.*  THE FIRST OPERAND (POSITIONAL) IS THE STRING (IN UPPER CASE),
.*      ENCLOSED IN SINGLE QUOTES.
.*  UPPERCASE CHARACTERS ARE PRECEDED BY A SLASH (/).
.*      A SLASH IS OUTPUT BY INSERTING 2 SLASHES.
.*  THE SECOND OPERAND (OPTIONAL, POSITIONAL) IS COMPOSED BY COPYING
.*      THE FIRST STRING, AND CHANGING ALL CHARACTERS WHICH ARE TO BE
.*      LOWER CASE TO BLANKS.  CHARACTERS WHICH ARE TO BE UPPER CASE
.*      (OR SLASH) CAN BE ANY NON-BLANK CHARACTER (EXCEPT AMPERSAND
.*      AND APOSTROPHE).  NOTE THAT THE DOUBLE AMPERSAND AND DOUBLE
.*      APOSTROPHE WILL BE CORRECTLY ACCOUNTED FOR, SO THAT TWO SPACES
.*      SHOULD BE ALLOWED FOR THEM IN THE IMAGE.
.*
.*
.*  AUTHOR:        LEONARD D. WOREN
.*  DATE:          08-26-81
.*  INSTALLATION:  TITLE INSURANCE AND TRUST
.*  UPDATED:       10-28-82   FIX MNOTE
.*  UPDATED:       09-15-81   ADD &IMAGE FEATURE
.*
.*
.*  EXAMPLES:
.*
.*    LC  'ABC'         WILL GENERATE A LOWER CASE 'ABC' (LENGTH 3)
.*
.*    LC  '/ABC'        'A' WILL BECOME UPPER CASE
.*
.*    LC  '/A/B/CDEF'   'ABC' IN UPPER CASE, 'DEF' IN LOWER CASE (CL6)
.*
.*    LC  '3//4'        CL3'3/4'
.*
.*    LC  '3/4'         ERROR
.*
.*    LC  'ABC','X'     SAME AS SECOND EXAMPLE
.*
.*    LC  'ABC','/ /'   'A' AND 'C' WILL BE UPPER CASE
.*
.*    LC  '&&'''        WILL GENERATE CL2 AMPERSAND-APOSTROPHE
.*
.*    LC  '/HELLO',L=80  --> CL80'HELLO', WITH THE 'H' UPPER CASE
.*
.*    LC  'HELLO','*',L=80   SAME AS ABOVE
.*
.*.
         LCLC  &S                       INPUT STRING MINUS QUOTES
         LCLC  &C1                      CURRENT CHARACTER
         LCLC  &C2                      CURRENT AND NEXT CHARACTER
         LCLC  &OUT                     OUTPUT STRING
         LCLC  &ALPHA                   THE ALPHABET
         LCLC  &LOWER                   THE SAME, BUT IN LOWER CASE
         LCLA  &PS                      POSITION IN &STRING
         LCLA  &PI                      POSITION IN &IMAGE
         LCLA  &LS                      LENGTH OF &STRING
         LCLA  &I                       INDEX WORK VARIABLE
         LCLB  &SLASH                   PREVIOUS CHARACTER WAS SLASH
         LCLB  &UPPER                   THIS CHAR IS TO BE UPPER CASE
.*
.*  SET MY CONTROL VARIABLES (FOR A SLIGHT SAVINGS IN CPU TIME DURING
.*  MACRO EXPANSION, THE FOLLOWING STRINGS ARE SORT OF IN FREQUENCY
.*  ORDER...
.*
.*ALPHA  SETC  'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
.*LOWER  SETC  'abcdefghijklmnopqrstuvwxyz'  <=== ** LOWER CASE **
&ALPHA   SETC  'ETAONRISHBCDFGPULMKYJQVWXZ'
&LOWER   SETC  'etaonrishbcdfgpulmkyjqvwxz'  <=== ** LOWER CASE **
.*
.*  BEGIN PROCESSING
.*
&OUT     SETC  ''                       INITIALIZE OUTPUT STRING
&LS      SETA  K'&STRING-2              GET LENGTH OF STRING
&S       SETC  '&STRING'(2,&LS)         STRIP OFF THE QUOTES
&PI      SETA  1                        SKIP THE APOSTROPHE AT START
.*
.*  MAIN LOOP
.*
.LOOP    ANOP
&PS      SETA  &PS+1                    -> NEXT POS IN INPUT STRING
&PI      SETA  &PI+1                    -> NEXT POS IN IMAGE STRING
&C1      SETC  '&S'(&PS,1)              GET A CHARACTER
&C2      SETC  '&S '(&PS,2)             GET 2 CHARACTERS
         AIF   (&PI GE K'&IMAGE).LOWER1  &IMAGE IS OMITTED OR SHORT
         AIF   ('&IMAGE'(&PI,1) EQ ' ').LOWER1
&UPPER   SETB  1
.LOWER1  AIF   ('&C1' EQ '/').SLASH
         AIF   ('&C1' EQ '''').QUOTE
         AIF   ('&C2' EQ '&&').AND
&I       SETA  1
.*
.*  QUICKIE CHECK FOR ALPHABETIC CHARACTER (TO SAVE CPU TIME)
.*
         AIF   ('&C1' LT 'A' OR '&C1' GT 'Z').NOTALPH   NOPE
.*
.*  DETERMINE ORDINAL NUMBER OF THIS LETTER
.*
.CHARLP  AIF   ('&C1' EQ '&ALPHA'(&I,1)).GOTCHAR
&I       SETA  &I+1
         AIF   (&I LE 26).CHARLP
.*
.*  CHARACTER IS NOT A LETTER, JUST PUT IT ON THE OUTPUT.
.*
.NOTALPH AIF   (NOT &SLASH).OK1
         MNOTE 4,'SLASH PRECEDING NON-ALPHA IGNORED'
         AGO   .KILLUP                  RESET UPPER CASE
.OK1     AIF   (NOT &UPPER).COPY        COPY CHARACTER TO OUTPUT
         MNOTE 4,'UPPERCASE REQUEST FOR "&C1" IGNORED (NON-ALPHA)'
.KILLUP  ANOP
&SLASH   SETB  0
&UPPER   SETB  0
.COPY    ANOP
&OUT     SETC  '&OUT'.'&C1'
         AGO   .NXTCHAR
.*
.*  CURRENT CHARACTER IS ALPHABETIC
.*
.GOTCHAR AIF   (&UPPER OR &SLASH).CAP$IT  CHARACTER IS TO BE UPPER CASE
.*
.*  PUT OUT THE LETTER AS LOWER CASE
.*
&OUT     SETC  '&OUT'.'&LOWER'(&I,1)
         AGO   .NXTCHAR
.*
.*  PUT OUT THE LETTER AS IS (UPPER CASE)
.*
.CAP$IT  ANOP
&OUT     SETC  '&OUT'.'&ALPHA'(&I,1)
&SLASH   SETB  0
&UPPER   SETB  0
         AGO   .NXTCHAR
.*
.*  CURRENT CHARACTER IS A DOUBLED APOSTROPHE
.*
.QUOTE   ANOP
&OUT     SETC  '&OUT'.''''''
&PI      SETA  &PI+1                    SLURP UP AN EXTRA IMAGE CHAR
         AGO   .SKPNEXT
.*
.*  CURRENT CHARACTER IS A DOUBLED AMPERSAND
.*
.AND     ANOP
&OUT     SETC  '&OUT'.'&&'
&PI      SETA  &PI+1                    SLURP UP AN EXTRA IMAGE CHAR
         AGO   .SKPNEXT
.*
.*  CURRENT CHARACTER IS A SLASH
.*
.SLASH   AIF   (&UPPER OR &SLASH).SLASH2
&SLASH   SETB  1
         AGO   .NXTCHAR
.*
.*  DOUBLE SLASH OR UPPERCASE SLASH - PUT A SLASH TO OUTPUT STRING
.*
.SLASH2  ANOP
&OUT     SETC  '&OUT'.'/'
&SLASH   SETB  0
&UPPER   SETB  0
         AGO   .NXTCHAR
.*
.*  NEXT POSITION IN INPUT STRING MUST BE SKIPPED BECAUSE IT IS THE
.*  SECOND HALF OF A DOUBLED CHARACTER.
.*
.SKPNEXT ANOP
&PS      SETA  &PS+1                    SKIP DOUBLED CHARACTER (/ ' &)
.*&PI    SETA  &PI+1                    ACCOUNT FOR IT IN &IMAGE
.*
.*  BOTTOM OF MAIN LOOP - SEE IF AT END OF INPUT STRING
.*
.NXTCHAR AIF   (&PS LT &LS).LOOP
.*
.*  INPUT STRING IS EXHAUSTED
.*
         AIF   (NOT &SLASH).CHECKL
         MNOTE 4,'TRAILING SINGLE SLASH IGNORED'
.CHECKL  AIF   ('&L' EQ '').NO$LEN
&NFS     DC    CL(&L)'&OUT'
         MEXIT
.NO$LEN  ANOP
&NFS     DC   C'&OUT'
         MEND
