         MACRO
&LABEL   COVER &TEXT,           /* COVER1 FORMAT TEXT (UP TO 4)    */  X
               &EJBE4,          /* 'Y' TO EJECT BEFORE FIRST       */  X
               &EJAFT,          /* 'Y' TO EJECT AFTER LAST         */  X
               &FLAG,           /* 'Y' TO GET 8-BYTE FLAG FOR DUMP */  X
               &FILL=CHAR       /* SPLAT TO USE COVER ASTERISK FILL*/
         LCLC  &CSECT                  CURRENT CSECT
         LCLC  &DATE                   ASSEMBLY DATE
         LCLC  &TIME                   ASSEMBLY TIME
         AIF   (N'&TEXT EQ 0).CSECT
         AIF   (N'&TEXT EQ 1).ONE
         AIF   (N'&TEXT EQ 2).TWO
         AIF   (N'&TEXT EQ 3).THREE
         AIF   (N'&TEXT EQ 4).FOUR
         MNOTE 0,'COVER REQUIRES 1 TO 4 OPERANDS'
         MEXIT
.*
.ONE     ANOP                          SEND 1 OPERAND  TO COVER1
         AIF   ('&EJBE4' NE 'Y').NOEJ1
         EJECT
.NOEJ1   ANOP
         COVER1 &TEXT(1),FILL=&FILL,MSEP=YES
         AIF   ('&EJAFT' NE 'Y').ONEX
         EJECT
.ONEX    AGO   .CHKLBL
.*
.TWO     ANOP                          SEND 2 OPERANDS TO COVER1
         AIF   ('&EJBE4' NE 'Y').NOEJ2
         EJECT
.NOEJ2   ANOP
         COVER1 &TEXT(1),FILL=&FILL,MSEP=YES
         COVER1 &TEXT(2),FILL=&FILL,MSEP=YES
         AIF   ('&EJAFT' NE 'Y').TWOX
         EJECT
.TWOX    AGO   .CHKLBL
.*
.THREE   ANOP                          SEND 3 OPERANDS TO COVER1
         AIF   ('&EJBE4' NE 'Y').NOEJ3
         EJECT
.NOEJ3   ANOP
         COVER1 &TEXT(1),FILL=&FILL,MSEP=YES
         COVER1 &TEXT(2),FILL=&FILL,MSEP=YES
         COVER1 &TEXT(3),FILL=&FILL,MSEP=YES
         AIF   ('&EJAFT' NE 'Y').THREEX
         EJECT
.THREEX  AGO   .CHKLBL
.*
.FOUR    ANOP                          SEND 4 OPERANDS TO COVER1
         AIF   ('&EJBE4' NE 'Y').NOEJ4
         EJECT
.NOEJ4   ANOP
         COVER1 &TEXT(1),FILL=&FILL,MSEP=YES
         COVER1 &TEXT(2),FILL=&FILL,MSEP=YES
         COVER1 &TEXT(3),FILL=&FILL,MSEP=YES
         COVER1 &TEXT(4),FILL=&FILL,MSEP=YES
         AIF   ('&EJAFT' NE 'Y').FOURX
         EJECT
.FOURX   AGO   .CHKLBL
.*                                     GENERATE CSECT/DATE/TIME PAGE
.CSECT   ANOP
         AIF   (K'&SYSECT EQ 8).CSECT8
         AIF   (K'&SYSECT EQ 7).CSECT7
         AIF   (K'&SYSECT EQ 6).CSECT6
         AIF   (K'&SYSECT EQ 5).CSECT5
         AIF   (K'&SYSECT EQ 4).CSECT4
         AIF   (K'&SYSECT EQ 3).CSECT3
         AIF   (K'&SYSECT EQ 2).CSECT2
         AIF   (K'&SYSECT EQ 1).CSECT1
.*                               COVER ENTERED BEFORE START×CSECT
.CSECT0  ANOP
&CSECT   SETC  '        '              PAD W/BLANKS TO 8 BYTES
         AGO   .CSECTX
.CSECT1  ANOP
&CSECT   SETC  '&SYSECT'.'       '     PAD W/BLANKS TO 8 BYTES
         AGO   .CSECTX
.CSECT2  ANOP
&CSECT   SETC  '&SYSECT'.'      '      PAD W/BLANKS TO 8 BYTES
         AGO   .CSECTX
.CSECT3  ANOP
&CSECT   SETC  '&SYSECT'.'     '       PAD W/BLANKS TO 8 BYTES
         AGO   .CSECTX
.CSECT4  ANOP
&CSECT   SETC  '&SYSECT'.'    '        PAD W/BLANKS TO 8 BYTES
         AGO   .CSECTX
.CSECT5  ANOP
&CSECT   SETC  '&SYSECT'.'   '         PAD W/BLANKS TO 8 BYTES
         AGO   .CSECTX
.CSECT6  ANOP
&CSECT   SETC  '&SYSECT'.'  '          PAD W/BLANKS TO 8 BYTES
         AGO   .CSECTX
.CSECT7  ANOP
&CSECT   SETC  '&SYSECT'.' '           PAD W/BLANKS TO 8 BYTES
         AGO   .CSECTX
.CSECT8  ANOP
&CSECT   SETC  '&SYSECT'
         AGO   .CSECTX
.*                                     COVER1 FOR CSECT NAME
.CSECTX  ANOP
         COVER1 '&CSECT',FILL=&FILL,MSEP=YES
.*                                     INSERT ASSEMBLY LITERAL
.ASSEM   ANOP
         COVER1 'ASSEMBLY',FILL=&FILL,MSEP=YES
.*                                     GET ASSEMBLY DATE
.DATE    ANOP
&DATE    SETC  '&SYSDATE'
         COVER1 '&DATE',FILL=&FILL,MSEP=YES
.*                                     GET ASSEMBLY TIME
.TIME    ANOP
&TIME    SETC  'AT '.'&SYSTIME'
         COVER1 '&TIME',FILL=&FILL,MSEP=YES
         EJECT
.*
.*       EXAMINE THE COMBINATIONS OF LABEL AND FLAGE OPERANDS.
.*       IF NEEDED, GENERATE THE LABEL (DWD ALIGNED),
.*       AND/OR GENERATE AN EIGHT-BYTE CONSTANT TO SHOW IN DUMP
.*
.CHKLBL  ANOP                                               LBL/FLG
         AIF   ('&LABEL' EQ '' AND '&FLAG' NE 'Y').GETOUT     N/N
         AIF   ('&LABEL' EQ '' AND '&FLAG' EQ 'Y').FLGONLY    N/Y
         AIF   ('&LABEL' NE '' AND '&FLAG' NE 'Y').LBLONLY    Y/N
         AIF   ('&LABEL' NE '' AND '&FLAG' EQ 'Y').LBLFLAG    Y/Y
.GETOUT  MEXIT
.FLGONLY ANOP
         DS    0D                      ALIGN CONSTANT ON DOUBLEWORD
         DC    CL8&TEXT(1)             FLAG 1ST OPERAND FOR DUMP
         AGO   .WRAPUP
.LBLONLY ANOP
&LABEL   DS    0D                      ALIGN LABEL ON DOUBLEWORD
         AGO   .WRAPUP
.LBLFLAG ANOP
&LABEL   DS    0D                      ALIGN CONSTANT ON DOUBLEWORD
         DC    CL8&TEXT(1)             FLAG 1ST OPERAND FOR DUMP
         AGO   .WRAPUP
.WRAPUP  ANOP
         MNOTE *,' '
         MEND
