         MACRO
         TMVT  &TYPE=DSECT,&TMVTEXT=NO,&TMVGGIO=YES               40293
         GBLC  &XH                SVC-XXX IN HEX                  40143
IGGYYY00 DS    0D
         USING IGGYYY00,R10
         SPACE 2
HASHADDR DC    A(TMHASHRT) -      ADDRESS POINTER TO TMSHASH ROUTINE
         SPACE 2
TMSDATE  DC    PL3'0' -           CURRENT DATE
         SPACE 2
TMSFLAG0 DC    X'00' -            TMVT FLAG BYTE
TMSACTIV EQU   X'80' -            TMS IS ACTIVE
INITRTRN EQU   X'40' -            INITIALIZATION HAS JUST COMPLETED
TMSPSWRD EQU   X'20' -            PASSWORD HAS BEEN REPLIED
TMSDCBOP EQU   X'10' -            DCB'S HAVE BEEN OPENED
TMSREIPL EQU   X'08' -            IPL MUST TAKE PLACE
TMSBATCH EQU   X'04'              TMS IS BATCH ACTIVE             40287
         SPACE 2
* * * *        CONVERT VOLUME-SERIAL-NUMBER TO RELATIVE RECORD ADDRESS
*
*                                 R1 = ADDRESS OF VOLUME-SERIAL-NUMBER
         SPACE
         DC    0D'0'
TMHASHRT DS    0H -
         USING *,R15 -
         STM   R2,R3,28(R13) -    SAVE USER REG'S 2&3
         ST    R14,12(R13) -      SAVE RETURN ADDRESS
         LR    R2,R1 -            SAVE POINTER TO VOLUME-SERIAL-NUMBER
         LR    R3,R15 -           SAVE BASE REGISTER
         DROP  R15 -
*
         USING TMHASHRT,R3 -
*        GETMAIN R,LV=88 -        GET 88 BYTES FOR WORK AREA
         GETMAIN R,LV=88 -        GET 88 BYTES FOR WORK AREA
         MVC   0(6,R1),0(R2) -    MOVE VSN TO WORK AREA
         ST    R13,20(R1) -       SAVE ADDRESS OF USER'S SAVE AREA
         LR    R15,R13 -          MOVE SAVE AREA ADDRESS
         LA    R13,16(R1) -       ESTABLISH NEW SAVE AREA
         ST    R13,8(R15) -       CHAIN SAVE AREAS
*
         LA    R15,USEREDIT -     GET ADDRESS OF USEREDIT
*        CALL  (15) -             CALL USEREDIT ROUTINE
         CALL  (15) -             CALL USEREDIT ROUTINE
         DROP  R3 -
*
         LR    R15,R3 -           RESTORE BASE REGISTER
         USING TMHASHRT,R15 -
         MVC   8(6,R1),0(R1) -    COPY EDITED VOLUME-SERIAL-NUMBER
         NC    8(6,R1),NUMMASK -  TURN ZONES ON / NUMERICS OFF
         CLC   8(6,R1),NUMMASK -  Q. NUMERIC VOLUME-SERIAL-NUMBER
         BNE   ERR -              A. UNEQUAL - NO
         PACK  8(8,R1),0(6,R1) -  PACK VSN
         CVB   R2,8(R1) -         CONVERT VSN TO BINARY NUMBER
         SR    R0,R0 -            CLEAR REGISTER
         IC    R0,TMEXTLOC -      GET NUMBER OF RANGES
         L     R3,TMEXTLOC -      POINT TO RANGE TABLE
*
HASHLOOP DS    0H
         C     R2,0(R3) -         Q. VALID VOLUME-SERIAL-NUMBER
         BL    ERR -              A. LOW - NO
         C     R2,4(R3) -         Q. VALID VOLUME-SERIAL-NUMBER
         BNH   VALIDVSN -         A. LOW OR EQUAL - YES
         LA    R3,12(R3) -        POINT TO NEXT ENTRY
         BCT   R0,HASHLOOP -      LOOP MAX TIMES
*
ERR      SR    R2,R2 -            SET ZERO RETURN CODE - UNHASHABLE
         B     HASHEXIT -
*
VALIDVSN DS    0H
         A     R2,8(R3) -         CALCULATE RELATIVE RECORD NUMBER
*
HASHEXIT DS    0H
         L     R13,4(R13) -       POINT TO PRIOR SAVE AREA
*        FREEMAIN R,LV=88,A=(1) - FREE WORK AREA
         FREEMAIN R,LV=88,A=(1) - FREE WORK AREA
         LR    R1,R2 -            SET RETURN CODE / REL BLK NUMBER
         LM    R2,R3,28(R13) -    RESTORE THE REGISTERS USED
         L     R14,12(R13) -      GET RETURN ADDRESS
         BR    R14 -              RETURN TO CALLER
*
NUMMASK  DC    CL6'000000' -
         SPACE 2
TMEXTLOC DC    A(0) -             POINTER TO VOL-SER RANGE TABLE
DSNBASE  DC    F'0' -             RELATIVE BLOCK NUMBER TO DSNB'S
TM#DSNB  DC    F'0' -             NUMBER OF DSNB'S GENERATED
         DC    F'0' -              UNUSED
         DC    F'0' -              UNUSED
         DC    F'0' -              UNUSED
         DROP  R15 -
         EJECT
* * * *        COMMON ABEND ROUTINE
         SPACE
         DC    0D'0'
ABEND1   LA    R1,1 -             ABEND 1XXX / 1YYY
         B     ABENDMSG                                           40143
ABEND2   LA    R1,2 -             ABEND 2XXX / 2YYY
         B     ABENDMSG                                           40143
ABEND3   LA    R1,3 -             ABEND 3XXX / 3YYY
         B     ABENDMSG                                           40304
ABEND4   LA    R1,4 -             ABEND 4XXX / 4YYY
         B     ABENDMSG                                           40143
ABEND5   LA    R1,5 -             ABEND 5XXX / 5YYY
         B     ABENDMSG                                           40304
ABEND6   LA    R1,6 -             ABEND 6XXX / 6YYY
         B     ABENDMSG                                           40304
ABEND7   LA    R1,7 -             ABEND 7XXX / 7YYY
         B     ABENDMSG                                           40304
ABEND13  LA    R1,13 -            ABEND DXXX / DYYY
         B     ABEND
ABEND14  LA    R1,14 -            ABEND EXXX / EYYY
         B     ABEND                                              40143
ABENDMSG DS    0H                                                 40143
         CLI   32(R5),X'&XH'      Q. XXX ABEND                    40143
         BNE   ABEND              A. UNEQUAL - NO                 40143
         MVC   WTOAREA(LMSG50,R6),IEFTMS50  LOAD SKELETON MESSAGE 40143
*                                                                 40143
         LR    R15,R1             LOAD ABEND CODE PREFIX          40143
         SLL   R15,8              MAKE ROOM FOR SUFFIX            40143
         IC    R15,32(R5)         LOAD ABEND CODE SUFFIX          40143
         ST    R15,SVCTEMP+8(R6)  SAVE ABEND CODE                 40143
         UNPK  SVCTEMP(4,R6),SVCTEMP+10(3,R6)    MAKE PRINTABLE   40143
         TR    SVCTEMP(3,R6),@HEXTABL-240      MAKE PRINTABLE     40143
*                                                                 40143
         LA    R15,27             SET MAX LOOP COUNTER            40143
         LA    R14,JFCBDSN+43(R4) POINT TO END OF DSNAME          40143
ABENDDSN DS    0H                                                 40143
         CLI   0(R14),C' '        Q. END OF JFCBDSNM              40143
         BNE   ABENDEND           A. UNEQUAL - YES                40143
         BCTR  R14,0              POINT TO PREVIOUS CHARACTER     40143
         BCT   R15,ABENDDSN       LOOP UNTIL BLANK OR END OF DSN  40143
ABENDEND DS    0H                                                 40143
         SH    R14,HW16           POINT TO LAST 17 CHARS OF DSN   40143
         L     R15,ADDRTIOT(,R6)  LOAD TIOT ADDR                  40143
         L     R9,40(,R5)         POINT TO USER DCB               40143
         LH    R9,40(,R9)         GET DDNAME DISPLACEMENT         40143
         LA    R9,4(R9,R15)       POINT TO DDNAME IN TIOT         40143
*                                                                 40143
         MVC   WTOABEND(3,R6),SVCTEMP(R6)        LOAD ABEND CODE  40143
         MVC   WTOLDMOD(2,R6),SVCXCTL+11(R6)     LOAD MOD ID      40143
         MVC   WTOJOBNM(8,R6),TIOTJOB(R15)       LOAD JOBNAME     40143
         MVC   WTOSTPNM(8,R6),TIOTSTEP(R15)      LOAD STEPNAME    40143
         MVC   WTODDNM(8,R6),0(R9)               LOAD DDNAME      40143
         MVC   WTOUNIT(3,R6),UCBUNIT(R8)         LOAD UNIT ADDR   40143
         MVC   WTOVOL(6,R6),UCBVOL(R8)           LOAD VOLSER      40143
         MVC   WTODSN(17,R6),0(R14)              LOAD DSNAME      40143
*                                                                 40143
         LR    R9,R1              SAVE ABEND PREFIX FOR ABEND     40143
         LA    R1,WTOAREA(R6)     LOAD ADDR OF WTO WORK AREA      40143
*        WTO   MF=(E,(1))         ISSUE WTO                       40143
         WTO   MF=(E,(1))         ISSUE WTO                       40143
         LR    R1,R9              RESTORE ABEND PREFIX            40143
ABEND    DS    0H
         SLL   R1,8 -             MAKE ROOM FOR ABEND CODE SUFFIX
         IC    R1,32(R5) -        GET SVC NUMBER FROM RB
         SLL   R1,12 -            CONVERT TO SYSTEM COMPLETION CODE
*        ABEND (1),DUMP -         LINK TO ABEND ROUTINE
         ABEND (1),DUMP -         LINK TO ABEND ROUTINE
*
*IEFTMS50 WTO  'IEFTMS50 XXX-LL,JOBNAME ,STEPNAME,DDNAME  ,DDD,VVVVVV,D
*              SNAME           ',MF=L,ROUTCDE=11                  40143
IEFTMS50 WTO   'IEFTMS50 XXX-LL,JOBNAME ,STEPNAME,DDNAME  ,DDD,VVVVVV,D*
               SNAME           ',MF=L,ROUTCDE=11                  40143
LMSG50   EQU   *-IEFTMS50                                         40143
*                                                                 40143
@HEXTABL DC    C'0123456789ABCDEF'                                40143
HW16     DC    H'16'                                              40143
*                                                                 40143
ADDRTIOT EQU   260                OFFSET INTO SVCXWORK DSECT      40143
SVCTEMP  EQU   344                OFFSET INTO SVCXWORK DSECT      40143
SVCXCTL  EQU   360                OFFSET INTO SVCXWORK DSECT      40143
WTOAREA  EQU   380                OFFSET INTO SVCXWORK DSECT      40143
*                                                                 40143
TIOTJOB  EQU   0                  OFFSET INTO TIOT FOR JOBNAME    40143
TIOTSTEP EQU   8                  OFFSET INTO TIOT FOR STEPNAME   40143
*                                                                 40143
*                                                                 40143
UCBUNIT  EQU   13                 OFFSET INTO UCB FOR UNIT ADDR   40143
UCBVOL   EQU   28                 OFFSET INTO UCB FOR VOL SER     40143
*                                                                 40143
JFCBDSN  EQU   100                OFFSET INTO JFCB FOR DSNAME     40143
*                                                                 40143
WTOABEND EQU   WTOAREA+4+9        OFFSET INTO WTO WORK AREA       40143
WTOLDMOD EQU   WTOAREA+4+13       OFFSET INTO WTO WORK AREA       40143
WTOJOBNM EQU   WTOAREA+4+16       OFFSET INTO WTO WORK AREA       40143
WTOSTPNM EQU   WTOAREA+4+25       OFFSET INTO WTO WORK AREA       40143
WTODDNM  EQU   WTOAREA+4+34       OFFSET INTO WTO WORK AREA       40143
WTOUNIT  EQU   WTOAREA+4+43       OFFSET INTO WTO WORK AREA       40143
WTOVOL   EQU   WTOAREA+4+47       OFFSET INTO WTO WORK AREA       40143
WTODSN   EQU   WTOAREA+4+54       OFFSET INTO WTO WORK AREA       40143
         AIF   ('&TMVTEXT' EQ 'NO').TMVTEND
         EJECT
         DC    0D'0' -
*TMCDCB   DCB  DDNAME=TMC,DSORG=DA,MACRF=E
TMCDCB    DCB  DDNAME=TMC,DSORG=DA,MACRF=E
TMCDCT   DC    D'0' -        TMC DEVICE CHARACTERISTIC TABLE
TMCUCBAD DC    A(0) -                    UCB ADDRESS OF TMC
         EJECT
         DC    0D'0'
*TMSAUDCB DCB  DDNAME=AUDIT,DSORG=DA,MACRF=E
TMSAUDCB  DCB  DDNAME=AUDIT,DSORG=DA,MACRF=E
AUDDCT   DC    D'0' -        AUDIT DEVICE CHARACTERISTIC TABLE
AUDUCBAD DC    A(0) -                    UCB ADDRESS OF AUDIT
         EJECT
         DC    0D'0'
*TMVRESDS RESERVE (QNAME,RTMC,E,0,SYSTEMS),UCB=TMCUCBAD,MF=L
TMVRESDS  RESERVE (QNAME,RTMC,E,0,SYSTEMS),UCB=TMCUCBAD,MF=L
*AUDRESDS RESERVE (QNAME,RAUD,E,0,SYSTEMS),UCB=AUDUCBAD,MF=L
AUDRESDS  RESERVE (QNAME,RAUD,E,0,SYSTEMS),UCB=AUDUCBAD,MF=L
*
         DC    0D'0'
QNAME    DC    CL8'UCCONEQN' -    QNAME FOR RESERVE/DEQ
RTMC     DC    AL1(07),CL07'TMS-TMC' -   RESOURCE NAME FOR TMC
RAUD     DC    AL1(07),CL07'TMS-AUD' -   RESOURCE NAME FOR AUDIT
         SPACE 3
         DC    0D'0'
*QINITLST ENQ  (QNAME,RINIT,E,0,SYSTEM),MF=L
QINITLST  ENQ  (QNAME,RINIT,E,0,SYSTEM),MF=L
*DINITLST DEQ  (QNAME,RINIT,0,SYSTEM),MF=L
DINITLST  DEQ  (QNAME,RINIT,0,SYSTEM),MF=L
         DC    0D'0'
RINIT    DC    X'07',CL07'TMSINIT'
         DC    16X'00' -          UNUSED
RTRNSVRB DC    A(0)
         EJECT
         DC    0D'0'
JA$TABLE DS    0F -            JOB ACCOUNTING TABLE
JA$NEXT  DC    A(0) -             POINTER TO NEXT ACCT TABLE
JA$OWNER DC    A(0) -             ADDRESS OF OWNER (TCB ADDRESS)
JA$ACCT  DC    41X'00' -          ACCOUNTING INFO
         DC    15X'00' -           UNUSED
         SPACE 3
         AIF   ('&TMVGGIO' NE 'YES').TMVTEND                      40293
* * * *        COMMON I/O ROUTINE
*
*                                 R0  = IOAREA ADDRESS
*                                 R1  = DCB ADDRESS
*                                 R6  = POINTS TO IOB WORKAREA (TMSIOB)
*                                 R7  = RETURN ADDRESS
*                                 R8  = WORK REGISTER
*                                 R9  = RELATIVE RECORD NUMBER
*                                 R15 = CCW OP-CODE
         SPACE
         DC    0D'0'
EXCP     DS    0H -
         MVI   IOBFLAG1,X'42' -   MARK CMD CHN AND UNRELATED
         SLL   R15,24 -           PLACE DATA OPERATION IN HIGH ORDER
         OR    R15,R0 -           CREATE FIRST HALF OF DATA CCW
         ST    R15,RWCCW -        SET DATA CCW FIRST HALF
         ST    R1,IOBDCB -        SET DCB POINTER
         MVI   IOBECB,X'00' -     READY ECB
         L     R8,DCB$DCT(R1) -   POINT TO DEVICE CHAR TABLE
         MVC   SECTOR(1),DCB$DIC(R8) -   POST DEVICE INDEX CODE
         MVC   RPSCCW(1),DCB$CCW(R8) - POST 1ST CCW OP-CODE
         LH    R0,DCB$RPT(R8) -   GET RECORDS PER TRACK
         SR    R8,R8 -            CLEAR REGISTER
         DR    R8,R0 -            CONVERT TO 'TTR'
         LR    R0,R9 -            SAVE QUOTIENT
         SLL   R0,8 -             MAKE QUOTIENT THE 'TT'
         OR    R0,R8 -            PLACE REMAINDER IN FOR 'TTR'
         SLL   R0,8 -             CREATE 'TTR0'
         STM   R14,R12,SAVEAREA+12 - SAVE MY REGISTERS
         L     R1,DCB$DEB(R1) -   POINT TO DEB
         LA    R2,MBBCCHHR -      ADDRESS OF RESULT DESIRED
         L     R15,16 -           GET CVT ADDRESS
         L     R15,CVTPCNVT(R15) - GET CVTPCNVT ENTRY POINT ADDRESS
         BALR  R14,R15 -           CONVERT 'TTR0' TO 'MBBCCHHR'
         LM    R2,R12,SAVEAREA+28 - RESTORE THE REGISTERS
         LTR   R15,R15 -          Q. VALID TTR
         BNZ   ABEND4 -           A. NOT ZERO - NO
         IC    R15,MBBCCHHR+7 -   GET RECORD NUMBER
         LA    R15,1(,R15) -      INCREMENT SINCE TTR WAS RELATIVE TO 0
         STC   R15,MBBCCHHR+7 -   SET CORRECT RECORD NUMBER
         CLI   RPSCCW,3 -         Q. NO-OP COMMAND
         BE    SECTCOMP -         A. EQUAL - YES, NO SET SECTOR
*
         LH    R0,RWCCW+6 -       GET BLK SIZE
         SLL   R0,16 -            PLACE IN HIGH ORDER BYTES
         IC    R0,MBBCCHHR+7 -    GET RECORD NUMBER
         IC    R2,SECTOR -        GET UCB TYPE INDEX (UCBTYP-4)
         SLL   R2,24 -            PLACE IN HIGH ORDER BYTE
         LA    R15,SECTOR -       POINT TO DESIRED RESULT ADDRESS
         OR    R2,R15 -           PLACE IN PARMS
         L     R15,16 -           GET CVT ADDRESS
         L     R15,IEC0SCR1(R15) - GET IEC0SCR1 ENTRY POINT ADDRESS
         BALR  R14,R15 -           CALCULATE 'SECTOR NUMBER'
         LM    R14,R12,SAVEAREA+12 - RESTORE REGISTERS
SECTCOMP DS    0H -
*        EXCP  IOBFLAG1 -         ISSUE EXCP
         EXCP  IOBFLAG1 -         ISSUE EXCP
         BR    R7 -               RETURN TO USER
*
         DC    0D'0'
LTMVECT  EQU   *-IGGYYY00
.*
.TMVTEND ANOP
         AIF   ('&TYPE' NE 'DSECT').END
USEREDIT EQU   0 -                DUMMY LABEL FOR DSECT REFERENCE
*
.END     ANOP
         MEND
