         MACRO
&NAME    OACMSG &TEXT,&HAVELEN,&TYPE=CALL,&BALREG=,&MAXLEN=,&BALNAME=, #
               &MSGNAME=,&DDNAME=,&RECFM=,&DCBNAME=,&FACTOR=
.*
.*********************************************************************.
.*                                                                   *.
.*  GENERATE OR FIND A MESSAGE, AND PRINT IT OUT.  SUPPLIES BAL      *.
.*  ROUTINE NECESSARY, AND MESSAGES.                                 *.
.*                                                                   *.
.*  TEXT            MSG TEXT - EITHER 'XXX' THE ACTUAL TEXT, OR      *.
.*                  XXX, THE ADDRESS OF THE TEXT (WITH DC CLNN       *.
.*                  IMPLICIT LENGTH)                                 *.
.*  HAVELEN         (RECFM=V ONLY).  IF 'HAVE', RDW ASSUMED TO BE    *.
.*                  ACCURATE.  IF OMMITTED, RDW FILLED IN BY         *.
.*                  BACKSCAN FOR NON-BLANK.                          *.
.*  TYPE            TYPE OF CALL:                                    *.
.*                       CALL...GENERATE (OR FIND) TEXT AND LENGTH,  *.
.*                              AND LINK TO PRINT ROUTINE (DEFAULT). *.
.*                       DCB....GENERATE THE MESSAGE DCB             *.
.*                       OPEN...OPEN THE PRINT FILE                  *.
.*                       CLOSE..CLOSE THE PRINT FILE                 *.
.*                       SET....VIEW GLOBALS                         *.
.*                       GEN....GENERATE THE PRINT BAL ROUTINE.      *.
.*                       TEXT...GENERATE THE MESSAGE WITH THE LENGTH *.
.*                              IN FRONT, FOR THE BAL ROUTINE.       *.
.*  BALREG          BAL AND RETURN REGISTER (DEFAULT = R10)          *.
.*  MAXLEN          THE MAXIMUM SIZE OF THE MESSAGE (SIZE OF         *.
.*                  THE BUFFER).  DEFAULT IS 133 BYTES.              *.
.*  BALNAME         NAME OF THE BAL ROUTINE TO BE GENERATED.         *.
.*                  DEFAULT IS 'MSG'.                                *.
.*  MSGNAME         NAME OF THE MESSAGE BUFFER.  DEFAULT IS          *.
.*                  'MSGBUF'                                         *.
.*  DDNAME          DD NAME FOR THE MESSAGE FILE.  DEFAULT SYSPRINT  *.
.*  RECFM           RECORD FORMAT.  DEFAULT FBA                      *.
.*  FACTOR          BLOCKING FACTOR (FULLTRK OR HALFTRK).            *.
.*  DCBNAME         NAME OF DCB      (DEFAULT MSGDCB)                *.
.*                                                                   *.
.*  VIC TOLOMEI - 4/74                                               *.
.*                                                                   *.
.*  UPDATES     - 6/77                                               *.
.*                                                                   *.
.*                                                                   *.
.*********************************************************************.
         GBLA  &GLKSIZE,&GAXLEN,&GAXEX,&NUMBER,&GRECL
         GBLB  &MSGGLOB,&MSGSET     WHETHER GLOBS HAVE BEEN SET ETC
         GBLC  &GBREG,&GMNAME,&GBNAME,&GBNAME#,&GBNAME$,&GBN,&GBNAME@
         GBLC  &GDNAME,&GECFM,&GCBNAME,&GACTOR
         LCLA  &LEN,&LIM,&COUNT
         LCLC  &LABBO,&LENLEN,&TEMP1,&TEMP2,&TEMP3
         AIF   (&MSGGLOB).NORESET       NO INIT GLOBALS
&GBREG   SETC  'R10'
&GBNAME  SETC  'MSG'
&GBN     SETC  'MSG'
&GBNAME# SETC  '&GBN'.'#'
&GBNAME$ SETC  '&GBN'.'$'
&GBNAME@ SETC  '&GBN'.'@'
&GMNAME  SETC  'MSGBUF'
&GDNAME  SETC  'SYSPRINT'
&GECFM   SETC  'FBA'
&GACTOR  SETC  'FULLTRK'
&GAXLEN  SETA  133
&GAXEX   SETA  &GAXLEN-1
&GRECL   SETA  &GAXLEN                  ASSUME 'F'
&GCBNAME SETC  'MSGDCB'
&NUMBER  SETA  0
.*
.*  PROCESS PARMS
.*
.NORESET AIF   ('&BALREG' EQ '').NOREG
&GBREG   SETC  '&BALREG'
.NOREG   AIF   ('&BALNAME' EQ '').NONAME
&GBNAME  SETC  '&BALNAME'
&GBN     SETC  '&BALNAME'(1,3)
&GBNAME# SETC  '&GBN'.'#'
&GBNAME$ SETC  '&GBN'.'$'
&GBNAME@ SETC  '&GBN'.'@'
.NONAME  AIF   ('&MSGNAME' EQ '').NOMSG
&GMNAME  SETC  '&MSGNAME'
.NOMSG   AIF   ('&DDNAME' EQ '').NODDNA
&GDNAME  SETC  '&DDNAME'
.NODDNA  AIF   ('&RECFM' EQ '').NORECF
&GECFM   SETC  '&RECFM'
         AIF   (('&GECFM'(1,1) EQ 'F' OR '&GECFM'(1,1) EQ 'V') AND K'&G#
               ECFM LE 3).NORECF        ITS OK
         MNOTE 8,'INVALID RECFM - &GECFM'
         MEXIT
.NORECF  AIF   ('&DCBNAME' EQ '').NODCBN
&GCBNAME SETC  '&DCBNAME'
.NODCBN  AIF   ('&FACTOR' EQ '').NOFACT
&GACTOR  SETC  '&FACTOR'
.NOFACT  AIF   ('&MAXLEN'  EQ '').NOMAXL
&GAXLEN  SETA  &MAXLEN
&GAXEX   SETA  &GAXLEN-1
&GRECL   SETA  &GAXLEN                  ASSUME 'F'
.NOMAXL  AIF   ('&GECFM'(1,1) EQ 'F').NOMAXL2  OK
&GRECL   SETA  &GAXLEN+4                RECFM=V
.NOMAXL2 ANOP
&GLKSIZE SETA  7294                     ASSUME FULLTRK
         AIF   ('&GACTOR' EQ 'FULLTRK').FULL    RIGHT
         AIF   ('&GACTOR' EQ 'HALFTRK').HALF       NO
         AIF   ('&GACTOR' EQ 'UNBLKED').UNBL       NO BLOCKING
         MNOTE 8,'INVALID BLOCKING FACTOR --- &GACTOR'
         MEXIT
.HALF    ANOP
&GLKSIZE SETA  3520                     HALFTRK NOW
         AGO   .FULL                    GET BLKSIZE NOW
.UNBL    ANOP
&GLKSIZE SETA  &GRECL                   UNBLOCKED, BLKSIZE=LRECL
.FULL    ANOP
&GLKSIZE SETA  (&GLKSIZE/&GRECL)*&GRECL   GET DCB=BLKSIZE MAYBE
         AIF   ('&GECFM'(1,1) EQ 'F').BLKTRK OK, RECFM=F
&GLKSIZE SETA &GLKSIZE+4                RECFM=V, BDW
         AIF   (&GLKSIZE LE 7294).BLKTRK FIT ON TRACK
&GLKSIZE SETA  &GLKSIZE-&GRECL          NO FIT, BACK UP 1 REC
.BLKTRK  ANOP
&MSGGLOB SETB  1                        NO MORE RESETTING
         AIF   (('&TYPE' EQ 'TEXT') OR ('&TYPE' EQ 'DCB')).NONAME$
         AIF   ('&NAME' EQ '').NONAME#
&NAME    DS    0H
.NONAME# AIF   ('&TYPE' EQ 'SET').SET   JUST SET AND VIEW
.NONAME$ AIF   (&MSGSET).NOSET
.SET     ANOP
&MSGSET  SETB  1                        NO MORE DEFAULT VIEWING
.*********************************************************************.
.*  TYPE=SET (OR FIRST ENTRY)                                        *.
.*********************************************************************.
         SPACE 1
         MNOTE *,'MSG MACRO GLOBAL PARAMETERS'
         MNOTE *,'  *** BAL REG ----- &GBREG'
         MNOTE *,'  *** BUFFER LEN -- &GAXLEN'
         AIF   ('&GECFM'(1,1) EQ 'F').FNAMES
         MNOTE *,'  *** BAL NAMES --- &GBNAME, &GBNAME#, &GBNAME$, &GBN#
               AME@'
         AGO   .GOON@
.FNAMES  MNOTE *,'  *** BAL NAMES --- &GBNAME, &GBNAME#, &GBNAME$'
.GOON@   MNOTE *,'  *** BUFFER NAME - &GMNAME'
         MNOTE *,'MSG MACRO DCB PARAMETERS'
         MNOTE *,'  *** DCBNAME ----- &GCBNAME'
         MNOTE *,'  *** DDNAME ------ &GDNAME'
         MNOTE *,'  *** RECFM ------- &GECFM'
         MNOTE *,'  *** LRECL ------- &GRECL'
         MNOTE *,'  *** BLKSIZE ----- &GLKSIZE'
         MNOTE *,'  *** BLOCKING ---- &GACTOR'
         SPACE 1
.*
.NOSET   AIF   ('&TYPE' EQ 'SET').MEND
         AIF   ('&TYPE' EQ 'GEN').GEN
         AIF   ('&TYPE' EQ 'DCB').DCB
         AIF   ('&TYPE' EQ 'OPEN').OPEN
         AIF   ('&TYPE' EQ 'CLOSE').CLOSE
         AIF   ('&TYPE' EQ 'CALL'  OR  '&TYPE' EQ 'TEXT').OKTYPE
         MNOTE 8,'INVALID MSG TYPE, &TYPE'
         MEXIT
.OKTYPE  AIF   ('&TYPE' NE 'CALL').GOON#
         AIF   (('&TEXT' NE '') AND ('&TEXT' NE '&GMNAME')).GOON#
         AIF   ('&HAVELEN' NE '' AND '&GECFM' EQ 'F').BADHAVE
         AIF   ('&GECFM'(1,1) EQ 'F').NORMBAL
         AIF   ('&HAVELEN' EQ '').VBAL
.CHKH    AIF   ('&HAVELEN'(1,1) EQ 'H').NORMBAL
.BADHAVE MNOTE 8,'INVALID LENGTH INDICATOR - &HAVELEN'
         MEXIT
.VBAL    BAL   &GBREG,&GBNAME@
         MEXIT
.NORMBAL BAL   &GBREG,&GBNAME#
         MEXIT
.GOON#   ANOP
         AIF   (('&TYPE' EQ 'CALL') AND ('&TEXT'(1,1) NE '''')).CALLBAL
         AIF   (('&TYPE' EQ 'TEXT') AND ('&TEXT'(1,1) NE '''')).BADTT
&LEN     SETA  K'&TEXT-2                TRIAL LENGTH OF TEXT = COUNT
&LIM     SETA  &LEN                     MAXIMUM LENGTH = MAX(&COUNT)
&COUNT   SETA  2                        OFFSET INTO TEXT
.*  ALLOW FOR DOUBLE QUOTES
.LOOP    AIF   (&COUNT GT &LIM).OUT
         AIF   ('&TEXT'(&COUNT,1) NE '''').GOON  NO QUOTE YET
&LEN     SETA  &LEN-1                   DECREMENT 'REMAINING' COUNTER
&COUNT   SETA  &COUNT+1                 INCREMENT POINTER FOR 1 QUOTE
.GOON    ANOP
&COUNT   SETA  &COUNT+1                 INCREMENT POINTER FOR THIS BYTE
         AGO   .LOOP                    GO TILL DONE WITH ALL TEXT
.OUT     ANOP                           ALL DONE
&LEN     SETA  &LEN-1                   EXECUTE LENGTH
         AIF   (&LEN LE &GAXEX).OKLEN   THE LENGTH IS OK
&COUNT   SETA  &LEN+1                   BACK TO REAL LENGTH (SCRATCH)
         MNOTE 8,'TEXT LENGTH (&COUNT) IS GREATER THAN MAX (&GAXLEN)'
         MEXIT
.OKLEN   AIF   ('&TYPE' EQ 'TEXT').TEXT# TYPE=TEXT
.*********************************************************************.
.*  TYPE=CALL ... CALL THE BAL ROUTINE WITH THE CORRECT MSG          *.
.*********************************************************************.
         AIF   ('&TEXT'(1,1) NE '''').CALLBAL
         LA    R15,=C&TEXT
         AIF   (&LEN NE 0).LA
         XR    R1,R1
         AGO   .BALL
.LA      LA    R1,&LEN
.BALL    BAL   &GBREG,&GBNAME$
         MEXIT
.CALLBAL ANOP
         AIF   ('&TEXT'(1,1) NE '(').NOTREG
         AIF   (('&TEXT(1)' EQ '15') OR ('&TEXT(1)' EQ 'R15')).BALBAL
         LR    R15,&TEXT
         AGO   .BALBAL                  AND PRINT
.NOTREG  LA    R15,&TEXT
.BALBAL  BAL   &GBREG,&GBNAME
         MEXIT
.*********************************************************************.
.*  TYPE=DCB  ... GEN THE DCB                                        *.
.*********************************************************************.
.DCB     ANOP
         SPACE 1
*DCBNAME DCB   DDNAME=DDNAME,MACRF=PM,RECFM=RECFM,LRECL=LRECL
*              BLKSIZE=BLKSIZE,DSORG=PS
         SPACE 1
&GCBNAME DCB   DDNAME=&GDNAME,MACRF=PM,RECFM=&GECFM,LRECL=&GRECL,      #
               BLKSIZE=&GLKSIZE,DSORG=PS
         MEXIT
.*******************************************************************.
.*  TYPE=OPEN                                                        *.
.********************************************************************.
.OPEN    ANOP
*        OPEN  (DCB,OUTPUT)             OPEN THE PRINT FILE
         OPEN  (&GCBNAME,OUTPUT)
         TM    &GCBNAME+48,X'10'
&NUMBER  SETA  &NUMBER+1
&LABBO   SETC  '&NUMBER'(1,2)
&LABBO   SETC  '&GBNAME$'.'&LABBO'
         BO    &LABBO
*        ABEND 1100 NO, ABEND NOW
         LA    R1,1100
*        ABEND (1)
         ABEND (1)
&LABBO   DS    0H
         MEXIT
.*********************************************************************.
.*  TYPE=CLOSE                                                       *.
.*********************************************************************.
.CLOSE   ANOP
         SPACE 1
*        CLOSE DCBNAME CLOSE THE OUTPUT FILE
         CLOSE &GCBNAME
         MEXIT
.*********************************************************************.
.*  TYPE=TEXT ... MAKE THE MSG                                       *.
.*********************************************************************.
.TEXT#   ANOP
         AIF   ('&NAME' NE '').OKTEXTN  NEED NAME
         MNOTE 8,'NAME FIELD REQ WITH TYPE=TEXT'
         MEXIT
.OKTEXTN DC    AL1(&LEN)
&NAME    DC    C&TEXT
         MEXIT
.BADTT   MNOTE 8,'WITH TYPE=TEXT, A QUOTED STRING MUST BE SUPPLIED'
         MEXIT
.*********************************************************************.
.*  TYPE=GEN ... GENERATE THE BAL ROUTINE TO PROCESS THE MESSAGES    *.
.*********************************************************************.
.GEN     ANOP
         SPACE 1
         AIF   ('&GECFM'(1,1) EQ 'V').VBA  RECFM=V NEEDS MORE
&GBNAME  BCTR  R15,0                    BACK UP TO GET LENGTH
         IC    R1,0(,R15)               GET EXECUTE LENGTH
         LA    R15,1(,R15)              FIX THE TEXT PTR
&GBNAME$ EX    R1,&GBN.MVC              MOVE THE MESSAGE TO BUFFER
*        PUT   DCB,BUFFER PRINT FIXED LENGTH MESSAGE
&GBNAME# PUT   &GCBNAME,&GMNAME         PRINT THE MESSAGE
         MVI   &GMNAME,C' '             CLEAR OUT THE MESSAGE BUFFER
         MVC   &GMNAME+1(&GAXEX),&GMNAME
         BR    &GBREG                   RETURN TO CALLER
         SPACE 1
&GBN.MVC MVC   &GMNAME.(0),0(R15)       <<< EXECUTED >>>
         SPACE 1
&GMNAME  DC    CL&GAXLEN' '             MESSAGE BUFFER
.LENLEN# ANOP                           FROM V
&LENLEN  SETC  '&GMNAME'(1,4)
&LENLEN  SETC  '&LENLEN'.'L'
&LENLEN  EQU   &GAXLEN                  LENGTH OF MSG BUFFER
         MEXIT
.*
.*  RECFM=V, WORRY ABOUT RDW
.*
.VBA     ANOP
&GBNAME  BCTR  R15,0                    BACK UP TO GET LENGTH
         XR    R1,R1                    FOR IC
         IC    R1,0(,R15)               GET EXECUTE LENGTH
         LA    R15,1(,R15)              FIX THE TEXT PTR
&GBNAME$ EX    R1,&GBN.MVC              MOVE THE MESSAGE TO BUFFER
&GBN.LEN LA    R1,1+4(,R1)              RECFM=V, MAKE RDW ACTUAL LENGTH
         STH   R1,&GBN.RDW              SAVE LENGTH IN RDW
*        PUT   DCB,BUFFER PRINT OUT THE RECFM=V MESSAGE
&GBNAME# PUT   &GCBNAME,&GBN.RDW        PRINT THE RECFM=V MESSAGE
         MVI   &GMNAME,C' '             CLEAR OUT THE MESSAGE BUFFER
         MVC   &GMNAME+1(&GAXEX),&GMNAME
         BR    &GBREG                   RETURN TO CALLER
         SPACE 1
&GBNAME@ LA    R1,&GMNAME+&GAXEX-1      POINT TO END OF BUFFER
         LA    R0,&GMNAME+2             WHERE TO STOP
&GBN.LP  CR    R0,R1                    STOP LOOKING YET?
         BE    &GBN.GOT                 YES, WE ARE DONE
         CLI   0(R1),C' '               NON-BLANK HERE?
         BNE   &GBN.GOT                 YES, WE HAVE LENGTH
         BCT   R1,&GBN.LP               FIND END OF BUFFER
         SPACE 1
&GBN.GOT LA    R0,&GMNAME               POINT TO BUFFER
         SR    R1,R0                    GET LENGTH OF RECFM V LINE
         B     &GBN.LEN                 AND SAVE IT
         SPACE 1
&GBN.MVC MVC   &GMNAME.(0),0(R15)       <<< EXECUTED >>>
         SPACE 1
&GBN.RDW DC    0F'0',AL2(0),AL2(0)      RDW FOR RECFM=V
&GMNAME  DC    CL&GAXLEN' '             MESSAGE BUFFER
&LENLEN  SETC  '&GMNAME'(1,4)
&LENLEN  SETC  '&LENLEN'.'L'
&LENLEN  EQU   &GAXLEN                  LENGTH OF MSG BUFFER
.MEND    MEND
