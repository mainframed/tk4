)S SUBCOMMANDS                                                         C
     POLISH, RESUME, AUTO, DO, HELP, END
)F FUNCTION
   The CALC command simulates a desk calculator; additionally it
   provides the limited temporary storage of a small computer.
   The form of its expressions is similar to that of FORTRAN or PL/I.
   eg. A=B1*SQRT(1956)                 02/21/80
)X SYNTAX
      CALC
                                                                       .
   Required: none
   Defaults: none
)O OPERANDS - An expression may be entered as an operand.  If this is
   done, that expression will be evaluated and CALC will exit.
))LITERALS - A literal is a numeric value of the form n×Emm×  where  n
   is  either  an integer number less than 2147483647 in absolute value
   or a real number formed by placing a decimal point before  or  after
   any digit in an integer number which could be substituted for n.  mm
   is a signed or unsigned integer exponent on 10 which is less than 75
   in absolute value.  CALC converts all literals to floating point.
))VARIABLES - A variable is a symbolic name given  to  a  location  in
   core  storage  in  which a value is stored.  All CALC variable names
   consist of from one through four alphanumeric characters  the  first
   of  which  must be alphabetic.  WARNING:   All variables whose names
   begin with the same first letter are assigned the same  location  in
   core.   That is, the value stored in ABS at a particular time is the
   same as the value stored in A, or AB, or A1T.
))OPERAND - An operand is any literal or variable.
))FUNCTION - A function is a routine provided as part of the  CALC
   command to evaluate certain algebraic and trigonometric functions.
   The following  are available.  Replace arg with any  operand:
  FUNCTION   DEFINITION
  LOG(arg)   The natural logarithm
  EXP(arg)   The exponential e
  LG10(arg)  The logarithm to the base 10
  SQRT(arg)  The square root
  SIN(arg)   The sine function
  COS(arg)   The cosine function
  TAN(arg)   The tangent function
  CTAN(arg)  The cotangent function
  ASIN(arg)  The arcsine function
  ACOS(arg)  The arccosine function
  ATAN(arg)  The arc tangent function
  ABS(arg)   The absolute value
  RAD(arg)   Degrees to radians function
  DEG(arg)   Radians to degrees function
  BOOL(arg)  0 if arg <0 and
             1 if arg > 0
))OPERATOR   -  An operator is a symbol expressing the type of
  computation to be performed.  Available are:
     +  addition
     -  subtraction
     *  multiplication
     /  division
     ** exponentiation
))EXPRESSION - An expression  consists  of operands, operators, and
   functions  combined  according  to  the  normal rules of arithmetic.
   Parentheses may be included to indicate order of operation.
))ASSIGNMENT  STATEMENT  -  An assignment  statement follows the form
   variable = expression.
))MODIFIER   -  A  modifier controls the order of expression and
  assignment statement evaluation.  It is separated from the
  associated expression or assignment statement by a colon:
     modifier:expression
     modifier:assignment_statement
  Available modifiers are: SAVE, TACK and USE.
))SAVE - The attached expression or assignment statement is to be
  saved for future use.   All expressions and assignment
  statements previously saved will be lost.
))TACK - The attached expression or assignment statement is to be
   added  to  (saved  along  with) the previously SAVEd and TACKed
   expressions and assignment statements.
))USE (or LOOP) - All SAVEd and TACKed expressions and assignment
   statements are to be evaluated at this time.  The expression or
   assignment statement attached to the USE will be executed after
   all saved expressions and assignment statements are evaluated.
   USE,exp  (or LOOP,exp) - The expression exp is to be evaluated.
   The stored expressions and  assignment  statements  are  to  be
   evaluated  exp  times.  If exp is less than one, execution will
   be bypassed.
))CONTROL STATEMENTS - A control statement  may  be  used  to  request
   special services.  Available are:
   1.  POLISH - Displays all input in Polish notation.
   2.  RESUME - Resumes standard execution.
   3.  AUTO   - The  first  time AUTO is entered, USE will be assumed
                after each subsequent entry.  The second time AUTO is
                entered,  the  standard mode of operation is resumed.
))INPUT TO CALC -
   One expression or assignment statement  or  several  may  be
   entered at one time if semi-colons are used as delimiters:
   expression;assignment;expression;assignment;assignment;
))EXAMPLES
     SAVE:A=A+DEL;TACK:X=1/(1+A);A=1;DEL=0.1;USE,10:
   A and DEL are initialized to 1 and 0.1 respectively.
   A=A+DEL and X=1/(1+A) are then executed 10 times.
   That is,   X   is   calculated   for   successive values  of   A
   of  1.1,1.2,1.3,....,2.0.
                                                                       .
     (3.126/8.725)+.329
   The expression is evaluated and the answer displayed.
=POLISH
)F FUNCTION
   The POLISH subcommand is used to set polish mode which displays
   polish notation for the equation entered. To leave polish mode,
   enter: RESUME
)X SYNTAX
          POLISH
)O OPERANDS - none
=RESUME
)F FUNCTION
   The RESUME subcommand is used to remove the POLISH mode.
)X SYNTAX
          RESUME
)O OPERANDS - none
=AUTO
)F FUNCTION
   The first time AUTO is entered, USE will be assumed after each
   subsequent entry. The second time AUTO is entered, the standard
   mode of operation is resumed.
)X SYNTAX
          AUTO
)O OPERANDS - none
=DO
)F FUNCTION
   The DO subcommand is used to execute a TSO command as a subcommand.
)X SYNTAX
         DO  'tso command'
   Required: 'tso command'
   Defaults: none
)O OPERANDS
))'tso command' - is a TSO command and operands to be executed.
))EXAMPLE
    DO STATUS jobname
=END
)F FUNCTION
   The END  subcommand is used to exit from the CALC processor.
)X SYNTAX
     END
)O OPERANDS - none.
=HELP
)F FUNCTION
  The HELP subcommand provides function, syntax, and operand
  information on the currently processing command and its subcommands.
)X SYNTAX -
         HELP   'SUBCOMMAND NAME'/'CURRENT COMMAND NAME'
                FUNCTION  SYNTAX  OPERANDS('KEYWORD LIST')  ALL
  REQUIRED:  None
  DEFAULTS:  ALL if FUNCTION, SYNTAX, and OPERANDS not specified.
  NOTE:  If HELP is entered without any operands a list of
         subcommands of the current command will be displayed.
         'KEYWORD LIST' is optional when OPERANDS is used.
   Syntax interpretation -
  1. User supplied values are in apostrophies. Two sets of apostrophies
     means the valud should be supplied within a set of apostrophies.
  2. Words without apostrophies are to be entered as shown.
  3. Commas, periods, parentheses, and asterisks are to be entered as
     shown.
  4. Exclusive choices are indicated by slash (/).
  5. Mutually exclusive formats are separated by 'OR'.
)O OPERANDS -
  'SUBCOMMAND NAME'
           - Name of the subcommand of the current command to be
             explained.
  'CURRENT COMMAND NAME'
           - Entered if the currently processing command is to be
             explained.
))FUNCTION - Function is to be displayed
))SYNTAX   - Format is to be displayed.
))OPERANDS('KEYWORD LIST')
    - Operand description is to be displayed.  If
      'KEYWORD LIST' is present, only those keyword descriptions
      are to be displayed.
    'KEYWORD LIST'
       - Keywords separated by commas, blanks, or tabs.
))ALL  - FUNCTION, SYNTAX, and OPERAND descriptions are to be displayed.
