DS@SCPDC TITLE 'DS@SCPDC -- COPY'
         SPACE
***********************************************************************
*  PROGRAM-ID: DS@SCPDC                                               *
*  FUNCTION:                                                          *
*      DS@SCPDC PERFORMS A GENERAL COPY FUNCTION, ALTHOUGH ITS        *
*      CURRENT USE IS TO COPY A PDS MEMBER IN THE SCAN PDS ISPF       *
*      APPLICATION.  INPUT TO THIS PROGRAM IS REGISTER 1, WHICH       *
*      POINTS TO THE COPY PARAMETER BLOCK.  THE PARAMETER BLOCK CON-  *
*      TAINS INFORMATION ABOUT WHAT TO COPY, AND WHERE TO PUT IT.     *
*      THIS PROGRAM USES SPAM (SEQUENTIAL/PARTITIONED ACCESS METHOD)  *
*      TO PERFORM ALL OF THE I/O.  NOTE THAT IF THE OUTPUT DATA SET   *
*      IS A PARTITIONED DATA SET, THEN IT IS NOT AUTOMATICALLY CLOSED *
*      WHEN I/O IS COMPLETE.  THE CALLER MUST MAKE A SEPARATE CALL    *
*      WITH THE APPROPRIATE FLAG SET IN THE PARAMETER BLOCK IN ORDER  *
*      TO CLOSE THE DATA SET.  THE CALLER MAY PROVIDE A DSA FOR THIS  *
*      PROGRAM BY SETTING ITS ADDRESS IN THE PARAMETER BLOCK.  IF     *
*      NOT, THEN THE DSA IS ALLOCATED.  IT IS FREED WHEN THE CALL IS  *
*      MADE TO CLOSE THE DATA SET.  THE LENGTH OF THE DSA IS GIVEN    *
*      BY THE EQUATED SYMBOL "DSALNG".  THE CALLER SHOULD ALSO PRO-   *
*      VIDE THE ADDRESS OF A DSA FOR SPAM IN THE PARAMETER BLOCK.     *
*                                                                     *
*  NOTE:  THE PROGRAM ASSUMES THAT THE MEMBER TO COPY DOES EXISTS,    *
*         AND THAT THE TARGET DATASET IS EITHER PO OR PS (DSORG).     *
*                                                                     *
*  ATTRIBUTES:  THIS PROGRAM IS REENTERABLE, REUSEABLE                *
*                                                                     *
*  REGISTER USAGE:                                                    *
*      R2-R10 WORK REGISTERS                                          *
*      R11 - BASE REGISTER                                            *
*      R12 - BASE FOR PRINT PARAMETER BLOCK                           *
*      R13-R15 STANDARD USAGE                                         *
*                                                                     *
*  RETURN CODES:                                                      *
*       0  - MEMBER PRINTED, ALL IS WELL                              *
*       4  - REPLACE SPECIFIED, MEMBER NOT REPLACED, BUT ADDED        *
*       8  - NO-REPLACE SPECIFIED, MEMBER EXISTED                     *
*      12  - NO SPACE IN DIRECTORY                                    *
*      16  - NO SPACE IN DATA SET                                     *
*      20  - SOME I/O ERROR                                           *
*                                                                     *
* AUTHOR:   PHIL HEROLD, SYSTEMS DEVELOPER                            *
*           SAS INSTITUTE                                             *
*           CARY, NC                                                  *
*                                                                     *
* NOTE:  SAS INSTITUTE IS NOT RESPONSIBLE FOR THE SUPPORT OF THIS     *
*        PROGRAM--PLEASE DO NOT CALL SAS INSTITUTE TECHNICAL SUPPORT. *
*        HOWEVER, THE AUTHOR WILL BE GLAD TO PROVIDE ANY ASSISTANCE   *
*        NEEDED.                                                      *
*                                                                     *
*                                                                     *
* ACKNOWLEDGEMENT:  THE AUTHOR WOULD LIKE TO ESPECIALLY THANK DAVE    *
*                   LASALLE OF FIRST COMPUTER SERVICES, CHARLOTTE,    *
*                   NC, FOR HIS SUPPORT AND ENCOURAGEMENT.            *
*                                                                     *
*  CHANGE ACTIVITY:                                                   *
*                                                                     *
***********************************************************************
         COPY  DS@MACS
         TITLE 'OTHER EQUATES'
***********************************************************************
*                  O T H E R    E Q U A T E S                         *
***********************************************************************
         SPACE
FLAGON   EQU   255
FLAGOFF  EQU   0
         TITLE 'DS@SCPDC -- PRINT PARAMETER BLOCK'
***********************************************************************
*            P R I N T       P A R A M E T E R     B L O C K          *
***********************************************************************
         SPACE
         DS@CPYPB DSECT=YES
         TITLE 'DS@SCPDC -- DSA DEFINITIONS'
***********************************************************************
*                    D S A       D E F I N I T I O N S                *
***********************************************************************
         SPACE
DS@CPYSA DSECT                        OUR DSA
SAVEAREA DS    18F
OP14SAVE DS    A                      SAVE AREA FOR INTERNAL LINKAGE
CP14SAVE DS    A                      SAVE AREA FOR INTERNAL LINKAGE
SAVRETC  DS    F                      SPBRETC SAVE AREA
         ORG   SAVRETC+2
SAVREASN DS    H                      SPBREASN SAVE AREA
         SPACE
INPTSFB  DS    A(0)                   INPUT FILE BLOCK POINTER
         SPACE
CALLPL   CALL  ,(,),MF=L              SPAM PARAMETER LIST
         SPACE
BLDLIST  DS    0H                     BLDLIST FOR BLDL MACRO
BLDNAME  DC    CL8' '                 MEMBER NAME
TTRKZ    DS    XL5                    TTR,K,Z FIELDS
C        DS    XL1                    C FIELD FOR BLDL
USERDATA DS    XL30                   USER DATA IN DIRECTORY
BLDLISTL EQU   *-BLDLIST-1            BLDLIST FOR BLDL MACRO
         SPACE
ALLOCDSA DC    XL1'0'                 WE ALLOCATED OUR DSA
PSDSFLG  DC    XL1'0'                 OUTPUT IS PS DATASET
RETNCD   DS    H'0'                   RETURN CODE SAVE AREA
         DS    0F                     ALIGN TO FULLWORD
         TITLE 'DS@SCPDC -- SPAM PARAMETER BLOCK'
***********************************************************************
*        S P A M      P A R A M E T E R      B L O C K                *
***********************************************************************
         SPACE
         DS@SPPB DSECT=NO            SPAM PARAMETER BLOCK
         DS    0F
DSALNG   EQU   *-DS@CPYSA
         TITLE 'DS@SCPDC -- GENERAL PROCESS'
***********************************************************************
*    ALLOCATE THE DSA IF THIS IS THE FIRST TIME.  IF CALL IS FOR      *
*  CLOSE, THEN CLOSE THE OPEN DATASET.                                *
***********************************************************************
         SPACE
DS@SCPDC CSECT
         USING *,R15
         DS@START ,
         PRINT NOGEN
         LR    R11,R15                 SET UP BASE REGISTERS
         DROP  R15
         USING DS@SCPDC,R11
         L     R12,0(R1)              ADDRESS PRINT PARAMETER BLOCK
         USING DS@CPYPB,R12
         L     R1,CPYDSA@             GET DSA ADDRESS
         LA    R3,DSALNG              GET DSA LENGTH
         SLR   R6,R6                  CLEAR THIS REG
         LTR   R1,R1                  IF WE DON'T HAVE DSA YET,
         BNZ   SCPDCOK1
         GETMAIN RC,LV=(R3)             GETMAIN HAD BETTER WORK
         LA    R6,FLAGON                SET FLAG VALUE
         ST    R1,CPYDSA@               SAVE DSA ADDRESS IN PARM BLOCK
SCPDCOK1 DS    0H
         LR    R2,R1                  GET DSA ADDRESS
         SLR   R5,R5                  CLEAR REGISTER
         MVCL  R2,R4                  ZERO DSA
         ST    R13,4(0,R1)            SET BACKWARD CHAIN
         ST    R1,8(0,R13)            SET FORWARD CHAIN
         LR    R13,R1                 GET DSA BASE
         USING DS@CPYSA,R13
         MVC   SAVEAREA(4),=C'CPYM'   SET PROGRAM IDENTIFIER
         STC   R6,ALLOCDSA            SAY WE ALLOCATED OUR DSA
         XC    RETNCD,RETNCD          CLEAR RETURN CODE
         MVC   SPBDSA,CPYSPMD@        SET SPAM DSA ADDRESS
         TM    CPYFLAG1,CPYCLOSE      IF FUNCTION IS CLOSE, THEN
         BO    CLOSEIT                  GO DO IT
         TM    CPYFLAG1,CPYOPEN       IF DATA SET IS NOT OPEN
         BO    SCPDCOK2                 GO OPEN IT
         BAL   R14,OPENIT
         LTR   R15,R15                IF RETURN CODE NOT ZERO,
         BNZ   RETURN                   THEN WE ARE DONE
SCPDCOK2 DS    0H
         SPACE
         BAL   R14,COPYIT
RETURN   DS    0H
         L     R13,4(0,R13)            RESTORE REGISTER 13
RETURN1  DS    0H
         L     R14,12(0,R13)           RESTORE RETURN REGISTER
         LM    R0,R12,20(R13)          RESTORE CALLER'S REGISTERS
         BR    R14                     AND LEAVE
         TITLE 'DS@SCPDC -- OPEN THE OUTPUT DATASET'
**********************************************************************
*                         O P E N                                    *
**********************************************************************
         SPACE
OPENIT   DS    0H
         ST    R14,OP14SAVE           SAVE RETURN REGISTER
         MVI   SPBFUNC,SPBFOPEN       SPAM FUNCTION CODE IS OPEN
         MVI   SPBOPT1,SPBOBPAM       ASSUME PDS
         MVI   SPBOPT2,SPBOOUT        ASSUME OPEN FOR OUTPUT
         MVI   SPBOPT3,SPBWSTAE       CATCH OUT OF SPACE ABENDS
         TM    CPYDSORG,X'40'         IF TARGET IS PS
         BZ    OPENIT01
         MVI   PSDSFLG,X'FF'            SET FLAG SAYING PS
         MVI   SPBOPT1,SPBOBSAM         SET ACCESS METHOD FOR PS
         TM    CPYFLAG1,CPYMOD          IF DISPOSITION IS MOD,
         BZ    OPENIT01
         MVI   SPBOPT2,SPBOXTND           SET OPEN EXTEND
OPENIT01 DS    0H
         MVI   SPBOPT5,SPBNOENQ       NO ENQUEUES PLEASE
         MVC   SPBDDNAM,CPYOUTDD      MOVE OUTPUT DDNAME
         MVC   SPBMEM,BLANKS          ENSURE THIS IS BLANK
         XC    SPBDSORG,SPBDSORG      CLEAR THESE FIELDS
         XC    SPBRECFM,SPBRECFM
         XC    SPBLRECL,SPBLRECL
         XC    SPBBLKSI,SPBBLKSI
         MVC   SPBBUFNO,=F'1'         LET'S SINGLE BUFFER ON OUTPUT
         CALL  SPAM,(SPB),VL,MF=(E,CALLPL) GO ISSUE THE OPEN
         LH    R15,SPBRETC            GET OPEN RETURN CODE,
         LTR   R15,R15                IF OPEN FAILED, THEN
         BZ    OPENIT02
         LA    R15,20                   SET RETURN CODE
         B     OPENITX
OPENIT02 DS    0H                     ELSE
         MVC   CPYOUSFB,SPBSFB          SAVE FILE BLOCK POINTER
         MVC   CPYPOSIT,SPBPOSIT        SAVE DS POSITION
         OI    CPYFLAG1,CPYOPEN         SET FLAG SAYING OPEN OK
OPENITX  DS    0H                     ELSE
         L     R14,OP14SAVE           RESTORE RETURN REGISTER
         BR    R14                    RETURN TO CALLER
         TITLE 'DS@SCPDC -- PERFORM THE COPY'
**********************************************************************
*                         C O P Y                                    *
**********************************************************************
         SPACE
COPYIT   DS    0H
         ST    R14,CP14SAVE           SAVE RETURN REGISTER
         TM    CPYFLAG1,CPYREP        IF NOT REPLACE, AND
         BO    COPYIT00
         CLI   PSDSFLG,X'FF'               TARGET IS PDS
         BE    COPYIT00
         MVI   SPBFUNC,SPBFFIND         SPAM FUNCTION IS FIND
         MVC   SPBSFB,CPYOUSFB
         MVC   SPBMEM,CPYOUMEM
         CALL  SPAM,(SPB),VL,MF=(E,CALLPL)
         LH    R2,SPBRETC               GET RETURN CODE
         MVI   SPBFUNC,SPBFPOIN         SPAM FUNCTION IS POINT
         MVC   SPBPOSIT,CPYPOSIT        MOVE IN OLD DS POSITION
         CALL  SPAM,(SPB),VL,MF=(E,CALLPL) RESTORE DS POSITION
         LTR   R2,R2                    IF MEMBER FOUND, THEN
         BNZ   COPYIT00
         LA    R15,8                      SET RETURN CODE
         B     COPYITX                    AND GET OUT OF HERE
COPYIT00 DS    0H
         MVI   SPBFUNC,SPBFOPEN       FUNCTION IS OPEN
         MVI   SPBOPT1,SPBOBPAM       USE BPAM
         MVI   SPBOPT2,SPBOIN         OPEN THIS ONE FOR INPUT
         MVI   SPBOPT3,0              CLEAR THIS GUY
         MVC   SPBDDNAM,CPYINDD       SET DDNAME FOR OPEN
         MVC   SPBMEM,BLANKS          SET MEMBER NAME TO BLANKS
         XC    SPBDSORG,SPBDSORG      CLEAR THESE FIELDS
         XC    SPBRECFM,SPBRECFM
         XC    SPBLRECL,SPBLRECL
         XC    SPBBLKSI,SPBBLKSI
         MVC   SPBBUFNO,=F'2'         LET'S DOUBLE BUFFER ON INPUT
         CALL  SPAM,(SPB),VL,MF=(E,CALLPL) GO ISSUE THE OPEN
         LH    R15,SPBRETC            GET OPEN RETURN CODE,
         LTR   R15,R15                IF OPEN FAILED, THEN
         BZ    COPYIT01
         LA    R15,20                   SET RETURN CODE
         B     COPYITX                  AND WE ARE DONE
COPYIT01 DS    0H                     ELSE
         MVC   INPTSFB,SPBSFB           SAVE FILE BLOCK POINTER
         MVC   SPBMEM,CPYINMEM          MOVE INPUT MEMBER NAME IN
         LA    R1,BLDLIST               ADDRESS AREA FOR BLDL INFO
         ST    R1,SPBFDBK               SAVE IN PARM BLOCK
         LA    R1,BLDLISTL              GET LENGTH FOR DATA
         STC   R1,SPBFDBKL              SAVE THIS LENGTH
         MVI   SPBFUNC,SPBFFIND         FUNCTION CODE IS FIND
         CALL  SPAM,(SPB),VL,MF=(E,CALLPL) GO FIND THE MEMBER
COPYLOOP DS    0H                       DO UNTIL (EOF)
         MVI   SPBFUNC,SPBFGET            SET FUNCTION CODE FOR GET
         MVC   SPBSFB,INPTSFB             SET FILE BLOCK POINTER
         CALL  SPAM,(SPB),VL,MF=(E,CALLPL) GO READ A RECORD
         LH    R15,SPBRETC                GET RETURN CODE,
         LTR   R15,R15                    IF GET OK,
         BNZ   COPYEOF
         MVI   SPBFUNC,SPBFPUT              SET FUNCTION CODE FOR PUT
         MVC   SPBSFB,CPYOUSFB              SET FILE BLOCK POINTER
         CALL  SPAM,(SPB),VL,MF=(E,CALLPL)  GO WRITE THE RECORD
         CLC   SPBREASN,=AL2(SPB2PT05)      IF OUT OF SPACE
         BNE   COPYLOOP
         MVI   SPBOPT3,SPBNOSTW               SAY NO STOW AT CLOSE
         MVC   RETNCD,=H'16'                  SET RETURN CODE
COPYEOF  DS    0H
         MVI   SPBFUNC,SPBFCLOS         SET SPAM FUNCTION CODE
         MVC   SPBSFB,INPTSFB           SET FILE BLOCK POINTER
         CALL  SPAM,(SPB),VL,MF=(E,CALLPL) GO CLOSE INPUT FILE
         CLI   SPBOPT3,SPBNOSTW         IF CLOSING DOWN,
         BE    COPYCLOS                       OR
         CLI   PSDSFLG,X'FF'              IF PS DATA SET, THEN
         BNE   COPYEOF1
COPYCLOS DS    0H
         MVI   SPBFUNC,SPBFCLOS         SET SPAM FUNCTION CODE
         MVC   SPBSFB,CPYOUSFB          SET FILE BLOCK POINTER
         CALL  SPAM,(SPB),VL,MF=(E,CALLPL) GO CLOSE OUTPUT FILE
         NI    CPYFLAG1,255-CPYOPEN     RESET OPEN FLAG
         CLC   SPBREASN,=AL2(SPB2CL06)  IF OUT OF SPACE
         BNE   COPYCLO1
         MVC   RETNCD,=H'16'              SET RETURN CODE
         MVI   SPBOPT3,SPBNOSTW           SAY NO STOW
         B     COPYCLOS                   TRY THE CLOSE AGAIN
COPYCLO1 DS    0H
         LH    R15,RETNCD               GET RETURN CODE
         B     COPYITX                  AND WE'RE DONE
COPYEOF1 DS    0H                     ELSE
******
******   MVI   SPBFUNC,SPBFSTOW         FUNCTION IS STOW
******     UNTIL A BUG IS FIXED IN SPAM, WE ARE GOING TO HAVE
****** TO DO A CLOSE HERE INSTEAD OF A STOW--THIS INVOLVES MUCH
****** MORE OVERHEAD, BUT I'M AFRAID THAT IT'S NECESSARY.
******
         MVI   SPBFUNC,SPBFCLOS         FUNCTION IS CLOSE (FOR NOW)
         XC    SPBTTRC,SPBTTRC          CLEAR THIS FIELD
         MVC   SPBTTRC+3(1),C           MOVE IN C FIELD FROM BLDL
         MVC   SPBOPTNS,USERDATA        MOVE SPF STATISTICS
         MVC   SPBSMEM,CPYOUMEM         MOVE IN MEMBER NAME FOR STOW
         MVC   SPBSFB,CPYOUSFB          SET FILE BLOCK POINTER
         MVI   SPBOPT2,SPBSTRPL         ASSUME REPLACE MEMBER
         TM    CPYFLAG1,CPYREP          IF NOT REPLACE, THEN
         BO    *+8
         MVI   SPBOPT2,SPBSTADD           LET'S ADD IT
         CALL  SPAM,(SPB),VL,MF=(E,CALLPL) GO DO THE STOW
         MVC   SAVRETC,SPBRETC          SAVE STOW RC, REASON CODE
******   MVI   SPBFUNC,SPBFNOTE         SPAM FUNCTION IS POINT
******   CALL  SPAM,(SPB),VL,MF=(E,CALLPL) RETRIEVE DS POSITION
******   MVC   CPYPOSIT,SPBPOSIT        SAVE POSITION RETURNED
*******  THE FOLLOWING 2 INSTRUCTIONS IS ALSO TEMPORARY,
*******  AND CAN BE DELETED WHEN SPAM IS FIXED.
         NI    CPYFLAG1,255-CPYOPEN     RESET OPEN FLAG
         SLR   R15,R15
         CLC   SAVRETC(2),=AL2(0)       IF STOW OK, THEN
         BE    COPYITX                    WE ARE DONE
         CLC   SAVREASN,=AL2(SPB2CL0A)  IF ATTEMPT TO ADD EXISTING MEM
         BNE   COPYERR1
         LA    R15,8                      SET THIS RETURN CODE
         B     COPYITX                    AND DONE
COPYERR1 DS    0H
         CLC   SAVREASN,=AL2(SPB2CL0R)  IF ATTEMPT TO REPLACE MEMBER
         BNE   COPYERR2                      THAT DOESN'T EXIST
         LA    R15,4                      SET THIS RETURN CODE
         B     COPYITX                    AND DONE
COPYERR2 DS    0H
         CLC   SAVREASN,=AL2(SPB2CL01)  IF NO DIRECTORY SPACE
         BNE   COPYERR3
         MVI   SPBOPT3,SPBNOSTW           DON'T ISSUE THE STOW
         MVC   RETNCD,=H'12'              SET RETURN CODE
         B     COPYCLOS                   GO SHUT DOWN
COPYERR3 DS    0H
         CLC   SAVREASN,=AL2(SPB2CL03)  IF SPACE IN DATA SET
         BNE   COPYERR4
         MVI   SPBOPT3,SPBNOSTW           DON'T ISSUE THE STOW
         MVC   RETNCD,=H'16'              SET RETURN CODE
         B     COPYCLOS                   GO SHUT DOWN
COPYERR4 DS    0H
         MVI   SPBOPT3,SPBNOSTW           DON'T ISSUE THE STOW
         MVC   RETNCD,=H'20'              SET RETURN CODE
         B     COPYCLOS                   GO SHUT DOWN
COPYITX  DS    0H
         L     R14,CP14SAVE           RESTORE RETURN REGISTER
         BR    R14                    RETURN TO CALLER
         TITLE 'DS@SCPDC -- CLOSE THE DATASET'
**********************************************************************
*                         C L O S E                                  *
**********************************************************************
         SPACE
CLOSEIT  DS    0H
         MVI   SPBFUNC,SPBFCLOS       SET SPAM FUNCTION CODE
         MVC   SPBSFB,CPYOUSFB        SET FILE BLOCK POINTER
         CALL  SPAM,(SPB),VL,MF=(E,CALLPL) GO CLOSE DOWN
         NI    CPYFLAG1,255-CPYOPEN   RESET OPEN FLAG
         CLI   ALLOCDSA,X'FF'         IF WE ALLOCATED OUR DSA
         BNE   RETURN
         LR    R2,R13                   COPY DSA ADDRESS
         LA    R1,DSALNG                GET DSA LENGTH
         L     R3,4(0,R13)              COPY REGISTER 13
         FREEMAIN RC,LV=(R1),A=(R2)     FREE OUT DSA
         LR    R13,R3                   RESTORE PREVIOUS SAVE AREA
         XC    CPYDSA@,CPYDSA@          ZERO ADDRESS IN PARM BLOCK
         B     RETURN1                  WE ARE DONE
         TITLE 'DS@SCPDC -- STORAGE DEFINITIONS'
**********************************************************************
*          S T O R A G E          D E F I N I T I O N S              *
**********************************************************************
         SPACE
BLANKS   DC    256CL1' '
         LTORG
         END   DS@SCPDC
