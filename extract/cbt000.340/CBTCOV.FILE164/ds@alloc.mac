DS@ALLOC TITLE 'ALLOCATE A DATASET'
***********************************************************************
*                                                                     *
* MODULE: DS@ALLOC                                                    *
*                                                                     *
* DESCRIPTION: ALLOCATE A DATA SET WITH DISP OF OLD OR SHARE          *
*                                                                     *
* PURPOSE: ALLOCATE A DATASET AND RETURN THE DDNAME, DSORG AND VOLSER *
*                                                                     *
*                                                                     *
* INPUT PARAMETERS                                                    *
*                                                                     *
*  R1 --> POINTS TO ADDRESS OF PARAMETER BLOCK (DS@ALCPB)             *
*                                                                     *
* REGISTER USAGE                                                      *
*                                                                     *
*  R0-R10 WORK REGISTERS                                              *
*  R11    PROGRAM BASE                                                *
*  R12    BASE FOR PARAMETER BLOCK                                    *
*  R13-R15 STANDARD USAGE                                             *
*                                                                     *
* NOTE:                                                               *
*  THE CALLER MUST PROVIDE THE WORKAREA FOR THIS PROGRAM (IT SHOULD   *
*  BE PART OF A DSA FOR THIS PROGRAM TO BE REENTRANT/REUSEABLE). THE  *
*  LENGTH OF THIS AREA IS GIVEN BY THE EQUATED SYMBOL 'LNGDSA'.       *
*                                                                     *
* ROUTINES CALLED                                                     *
*  DS@99MSG - TO TRANSLATE DYNAMIC ALLOCATION RETURN CODE IF IT FAILS.*
*             A MESSAGE IS PLACED IN THE 80-BYTE WORK AREA IDENTIFIED *
*             IN THE INPUT PARM BLOCK.                                *
*                                                                     *
* RETURN CODE                                                         *
*  ALLOCATION OK - 0 IN R15                                           *
*  ALLOCATION FAILURE - SVC 99 ERROR CODE/REASON CODE IN R15          *
*                                                                     *
* ATTRIBUTES                                                          *
*  REENTRANT AND REUSEABLE                                            *
*                                                                     *
* AUTHOR:   PHIL HEROLD, SYSTEMS DEVELOPER                            *
*           SAS INSTITUTE                                             *
*           CARY, NC                                                  *
*                                                                     *
* NOTE:  SAS INSTITUTE IS NOT RESPONSIBLE FOR THE SUPPORT OF THIS     *
*        PROGRAM--PLEASE DO NOT CALL SAS INSTITUTE TECHNICAL SUPPORT. *
*        HOWEVER, THE AUTHOR WILL BE GLAD TO PROVIDE ANY ASSISTANCE   *
*        NEEDED.                                                      *
*                                                                     *
*                                                                     *
* ACKNOWLEDGEMENT:  THIS PROGRAM WAS ORIGINALLY DEVELOPED AT FIRST    *
*                   COMPUTER SERVICES, CHARLOTTE, NORTH CAROLINA, AND *
*                   WAS MODIFIED FOR USE IN THE ENVIRONMENT IN WHICH  *
*                   IT NOW RUNS.  THE AUTHOR WOULD LIKE TO ESPECIALLY *
*                   THANK DAVE LASALLE FOR HIS SUPPORT AND ENCOURAGE- *
*                   MENT.                                             *
*                                                                     *
***********************************************************************
         COPY  DS@MACS
         TITLE 'PARAMETER BLOCK'
***********************************************************************
*              P A R A M E T E R     B L O C K                        *
***********************************************************************
         SPACE
         DS@ALCPB DSECT=YES           PARAMETER BLOCK
         TITLE 'VARIOUS DSECTS'
***********************************************************************
*                O T H E R     D S E C T S                            *
***********************************************************************
         SPACE
         PRINT NOGEN
         IEFZB4D0
         IEFZB4D2
         TITLE 'WORKAREA (DSA)'
***********************************************************************
*                 D S A       D E F I N I T I O N S                   *
***********************************************************************
         SPACE
DS@ALDSA DSECT                        DSA FOR THIS PROGRAM
SAVEAREA DC    18F'0'                 SAVE AREA FOR REGISTERS
         SPACE
SVC99RB  DC    X'80',AL3(0)           SVC 99 REQUEST BLOCK POINTER
         SPACE
REQBLK   DS    0D                     SVC 99 REQUEST BLOCK
RBLN     DC    AL1(20)
RBVERB   DC    AL1(1)
RBFLAG1  DC    AL2(0)
RBERROR  DC    XL2'0'
RBINFO   DC    XL2'0'
RBTXTPP  DC    A(0)
RBRSVD   DC    F'0'
RBFLAG2  DC    F'0'
         SPACE
ATUDSNAM DC    Y(DALDSNAM),AL2(1),AL2(44),CL44' ' DSNAME
ATUMEMBR DC    Y(DALMEMBR),AL2(1),AL2(8),CL8' '   MEMBER NAME
ATUSTATS DC    Y(DALSTATS),AL2(1),AL2(1),X'08'    STATUS
ATURTDDN DC    Y(DALRTDDN),AL2(1),AL2(8),CL8' '   RETURN DDNAME
ATURTORG DC    Y(DALRTORG),AL2(1),AL2(2),XL2'0'   RETURN DSORG
ATUVLSER DC    Y(DALVLSER),AL2(1),AL2(6),CL6' '   VOLUME SERIAL
ATURTVOL DC    Y(DALRTVOL),AL2(1),AL2(6),CL6' '   RETURN VOLUME SERIAL
ATUDDNAM DC    Y(DALDDNAM),AL2(1),AL2(8),CL8' '   DDNAME ALLOCATION
ATUPERMA DC    Y(DALPERMA),AL2(0)                 PERMANENT ALLOCATION
         DS    0F
TXTPTRS  DC    8F'0'                  TEXT UNIT PTRS
         SPACE
CALLPL   CALL  ,(,),VL,MF=L           TEXT UNIT PTRS
         SPACE
LNGDSA   EQU   *-DS@ALDSA
         TITLE 'MAINLINE CODE'
**********************************************************************
*                       D S @ A L L O C                              *
**********************************************************************
         SPACE
DS@ALLOC CSECT
         PRINT GEN
         USING *,R15
         DS@START ,
         PRINT NOGEN
         LR    R11,R15                LOAD FIRST BASE REGISTER
         DROP  R15                    DROP TEMPORARY BASE
         USING DS@ALLOC,R11
         L     R12,0(R1)              ADDRESS PARAMETER BLOCK
         USING DS@ALCPB,R12
         L     R1,ALCPBDS@            ADDRESS WORK AREA
         ST    R13,4(0,1)             ADDRESS HIGHER SA INTO SAVEAREA
         ST    R1,8(0,13)             ADDRESS SAVEAREA HIGHER SA
         LR    R13,R1
         USING DS@ALDSA,R13
         MVC   SAVEAREA(4),=C'ALLO'
         EJECT
BLDPARM  DS    0H
         MVC   REQBLK(REQBLKL),REQBLKM MOVE IN REQUEST BLOCK MASK
         MVC   ATUDSNAM(TXTUNITL),TXTUNITS MOVE IN TEXT UNITS MASK
         LA    R1,REQBLK              ADDRESS REQUEST BLOCK
         ST    R1,SVC99RB             SAVE IN SVC99
         MVI   SVC99RB,X'80'          SET VL INDICATOR
         LA    R2,TXTPTRS             ADDRESS TEXT UNIT POINTERS
         ST    R2,RBTXTPP             SAVE IN REQUEST BLOCK
         LA    R1,ATUDSNAM            ADDRESS TEXT UNIT
         ST    R1,0(R2)               SAVE TEXT UNIT FOR DSNAME
         LA    R2,4(,R2)              NEXT TEXT UNIT
         LA    R1,ATURTORG            ADDRESS TU FOR RETURN DSORG
         ST    R1,0(R2)               SAVE TEXT UNIT POINTER
         LA    R2,4(,R2)              NEXT TEXT UNIT
         LA    R1,ATUSTATS            ADDRESS TU FOR STATUS
         ST    R1,0(R2)               SAVE TEXT UNIT POINTER
         LA    R2,4(,R2)              NEXT TEXT UNIT
         LA    R1,ATUPERMA            ADDRESS TU FOR PERMAMENT ALLOC.
         ST    R1,0(R2)               SAVE TEXT UNIT POINTER
         LA    R2,4(,R2)              NEXT TEXT UNIT
         MVC   ATUDSNAM+6(44),ALCPBDSN DATASET NAME
         MVI   ATUSTATS+6,X'08'       ASSUME DISP=SHR
         CLC   ALCPBDSP,=CL3'OLD'     IF OLD WAS REQUESTED,
         BNE   BLDPARMC                 CHANGE DISP=SHR
         MVI   ATUSTATS+6,X'01'            TO DISP=OLD
         SPACE
BLDPARMC DS    0H
         CLC   ALCPBMEM,BLANKS        IF MEMBER NAME SUPPLIED
         BE    ALCNOMEM
         MVC   ATUMEMBR+6(8),ALCPBMEM   USE MEMBER TEXT UNIT
         LA    R1,ATUMEMBR
         ST    R1,0(R2)                 SAVE TEXT UNIT FOR DDNAME
         LA    R2,4(,R2)                NEXT TEXT UNIT
ALCNOMEM DS    0H
         CLC   ALCPBDDN,BLANKS        IF DDNAME SUPPLIED,
         BE    ALCNODDN
         MVC   ATUDDNAM+6(8),ALCPBDDN   USE DDNAME TEXT UNIT
         LA    R1,ATUDDNAM
         ST    R1,0(R2)                 SAVE TEXT UNIT FOR DDNAME
         B     ALCVOLCH
         SPACE
ALCNODDN DS    0H
         MVC   ATURTDDN+6(8),BLANKS   ELSE, LET SVC99 PICK ONE
         LA    R1,ATURTDDN              SET TEXT UNIT POINTER
         ST    R1,0(R2)                 SAVE TU FOR RETURN DDNAME
         SPACE
ALCVOLCH DS    0H
         LA    R2,4(,R2)              NEXT TEXT UNIT
         CLC   ALCPBVOL,BLANKS        IF VOLUME SPECIFIED,
         BE    ALCNOVOL
         MVC   ATUVLSER+6(6),ALCPBVOL   USE VOLSER TEXT UNIT
         LA    R1,ATUVLSER
         ST    R1,0(R2)                 SAVE TEXT UNIT FOR VOLSER
         B     ALCSVC99
ALCNOVOL DS    0H
         MVC   ATURTVOL+6(6),BLANKS   ELSE, SAY RETURN VOLSER
         LA    R1,ATURTVOL              SET TEXT UNIT POINTER
         ST    R1,0(R2)                 SAVE TU FOR RETURN VOLSER
         SPACE
ALCSVC99 DS    0H
         MVI   0(R2),X'80'            SET VL INDICATOR
         MVI   RBVERB,S99VRBAL        SET VERB TO ALLOCATION
         LA    R1,SVC99RB             LOAD PARAMETER LIST
         SVC   99                     AND ISSUE SVC99
         LTR   R15,R15                IF OK, SET FIELDS
         BZ    ALSETFLD                 FOR RETURN
         SPACE
TRANSRC  DS    0H
         LA    R2,REQBLK              ADDRESS REQUEST BLOCK
         CALL  DS@99MSG,((R2)),VL,MF=(E,CALLPL) CALL TRANSLATE RTN
         L     R2,ALCPBMG@            GET ADDRESS OF MESSAGE AREA
         LTR   R2,R2                  IF AREA GIVEN, THEN
         BZ    ALCNOMG
         LA    R3,80                    GET LENGTH OF MESSAGE AREA
         L     R1,ALCPBDNL              GET LENGTH OF NAME
         BCTR  R1,0                     MAKE IT AN EXECUTE LENGTH
         MVC   0(80,R2),BLANKS          CLEAR MESSAGE AREA
         EX    R1,MVDSNM                MOVE DATASET NAME TO MESSAGE
         LA    R1,1(,R1)                ADD 1 BACK
         SR    R3,R1                    SUBTRACT LENGTH FROM TOTAL
         AR    R2,R1                    GET PAST NAME
         MVC   0(3,R2),=C' - '          MOVE IN DASHES
         S     R3,=F'3'                 SUBTRACT THREE FROM LENGTH
         LA    R2,3(,R2)                GET PAST C' - '
         SLR   R4,R4                    CLEAR FOR IC
         IC    R4,0(,R15)               GET LENGTH OF MESSAGE RETURNED
         CR    R4,R3                    IF MESSAGE WON'T FIT, THEN
         BNH   *+4+2
         LR    R4,R3                      TRIM IT
         BCTR  R4,0                     MAKE AN EXECUTE LENGTH
         EX    R4,MVERRMG               MOVE IN MESSAGE
ALCNOMG  DS    0H
         L     R15,RBERROR              SET RETURN CODE
         B     ALCRTN
ALSETFLD DS    0H
         CLC   ALCPBDDN,BLANKS        IF NO DDNAME WAS SUPPLIED
         BNE   ALSETVOL                 SEND BACK THE ONE THAT
         MVC   ALCPBDDN,ATURTDDN+6        SVC99 PICKED.
ALSETVOL DS    0H
         CLC   ALCPBVOL,BLANKS        IF NO VOLUME WAS SUPPLIED
         BNE   ALSETDSO                 SEND BACK THE ONE THAT
         MVC   ALCPBVOL,ATURTVOL+6
ALSETDSO DS    0H
         MVC   ALCPBRDS,ATURTORG+6    SEND BACK DSORG
ALCRTN   L     R13,4(R13)             ANY ERROR FROM SVC99 WILL
         RETURN (14,12),T,RC=(15)        BE THE RETURN CODE.
         TITLE 'STATIC DEFINITIONS'
***********************************************************************
*                  S T A T I C     D E F I N I T I O N S              *
***********************************************************************
         SPACE
REQBLKM  DC    AL1(20)
         DC    AL1(1)
         DC    AL1(S99NOCNV,0)
         DS    XL2
         DS    XL2
         DS    A
         DC    F'0'
         DC    F'0'
REQBLKL  EQU   *-REQBLKM             LENGTH OF REQUEST BLOCK
         SPACE
TXTUNITS DC    Y(DALDSNAM),AL2(1),AL2(44),CL44' ' DSNAME
         DC    Y(DALMEMBR),AL2(1),AL2(8),CL8' '   MEMBER NAME
         DC    Y(DALSTATS),AL2(1),AL2(1),X'08'    STATUS
         DC    Y(DALRTDDN),AL2(1),AL2(8),CL8' '   RETURN DDNAME
         DC    Y(DALRTORG),AL2(1),AL2(2),XL2'0'   RETURN DSORG
         DC    Y(DALVLSER),AL2(1),AL2(6),CL6' '   VOLUME SERIAL
         DC    Y(DALRTVOL),AL2(1),AL2(6),CL6' '   RETURN VOLUME SERIAL
         DC    Y(DALDDNAM),AL2(1),AL2(8),CL8' '   DDNAME ALLOCATION
         DC    Y(DALPERMA),AL2(0)                 PERMANENT ALLOCATION
         SPACE
MVDSNM   MVC   0(0,R2),ALCPBDSN
MVERRMG  MVC   0(0,R2),1(R15)
         SPACE
TXTUNITL EQU   *-TXTUNITS
BLANKS   DC    CL80' '
         LTORG
         END   DS@ALLOC
