DS@SYALC TITLE 'SYSOUT ALLOCATION SUBROUTINE'
***********************************************************************
*                                                                     *
*   PURPOSE:                                                          *
*     DYNAMICALLY ALLOCATE/FREE SYSOUT FILE                           *
*                                                                     *
*   USAGE:                                                            *
*     CALL DS@SYALC(PARM)                                             *
*                                                                     *
* NOTE:  THIS PROGRAM IS REENTRANT, REUSEABLE                         *
*                                                                     *
* AUTHOR:   PHIL HEROLD, SYSTEMS DEVELOPER                            *
*           SAS INSTITUTE                                             *
*           CARY, NC                                                  *
*                                                                     *
* NOTE:  SAS INSTITUTE IS NOT RESPONSIBLE FOR THE SUPPORT OF THIS     *
*        PROGRAM--PLEASE DO NOT CALL SAS INSTITUTE TECHNICAL SUPPORT. *
*        HOWEVER, THE AUTHOR WILL BE GLAD TO PROVIDE ANY ASSISTANCE   *
*        NEEDED.                                                      *
*                                                                     *
*                                                                     *
* ACKNOWLEDGEMENT:  THE AUTHOR WOULD LIKE TO ESPECIALLY THANK DAVE    *
*                   LASALLE OF FIRST COMPUTER SERVICE, OF CHARLOTTE   *
*                   NC, FOR HIS SUPPORT AND ENCOURAGEMENT.            *
*                                                                     *
*---------------------------------------------------------------------*
         COPY  DS@MACS
         SPACE 2
         MACRO
&L       INDEX &TU
&L       MVI   0(R2),X'00'             RESET OLD VL BIT
         LA    R2,4(,R2)               INDEX INTO TEXT LIST
         LA    R3,&TU                  ADDRESS OF WORKING TEXT UNIT
         ST    R3,0(,R2)               SET ADDRESS INTO LIST
         MVI   0(R2),X'80'             SET NEW VL BIT
         MEND
         TITLE 'OTHER EQUATES'
***********************************************************************
*                  O T H E R    E Q U A T E S                         *
***********************************************************************
         SPACE
FLAGON   EQU   255
FLAGOFF  EQU   0
         TITLE 'DS@SYALC - DSECTS'
**********************************************************************
*                           D S E C T S                              *
**********************************************************************
         SPACE
         PRINT GEN
SYSALCP  DS@SYACP DSECT=YES
         SPACE 2
         PRINT NOGEN
         IEFZB4D2
         IEFZB4D0
         TITLE 'DS@SYALC - DSA DEFINITIONS'
**********************************************************************
*                   D S A     D E F I N I T I O N S                  *
**********************************************************************
         SPACE
SYSALCDS DSECT
SAVEAREA DC    18F'0'                  SAVE AREA FOR REGISTERS
         SPACE
RETCODE  DC    F'0'                    RETURN CODE
DYN14SV  DC    F'0'                    SAVE REGISTER 14 HERE
         SPACE
REQBLK   DS    0F
RBALIB   DC    A(0)                    ADDRESS OF REQUEST BLOCK.
RBLIB    DC    AL1(20,1,0,0)           32=S99NOMNT NO MOUNT/OFFLINE WHB
RBERROR  DC    H'0'                    ERROR CODE
RBINFO   DC    H'0'                    INFO
RBTPTR   DC    A(0)                    TEXT POINTER CODE.
         DC    A(0)                    RESERVED
         DC    A(0)                    FLAGS
         SPACE
TU#      EQU   16                      MAX NUMBER OF TEXT UNITS5.00 OTB
TEXTLIST DS    0D                      TEXT UNIT ADDRESS LIST
         ORG   *+4*TU#                 MAX NUMBER OF TEXT UNITS
         SPACE
TEXTUNIT DS    0D
#SYSOUT  DC    AL2(DALDDNAM),AL2(1,8),CL8' '
#SYSRTN  DC    AL2(DALRTDDN),AL2(1,8),CL8' '   RETURN DDNAME
#SYSPGM  DC    AL2(DALSPGNM),AL2(1,8),CL8' '   PGM=
#SYSDST  DC    AL2(DALSUSER),AL2(1,8),CL8' '   DEST
#SYSFRM  DC    AL2(DALSFMNO),AL2(1,4),CL4' '   FORMS=
#SYSFCB  DC    AL2(DALFCBIM),AL2(1,4),CL4' '   FCB=
#SYSLIM  DC    AL2(DALOUTLM),AL2(1,3),XL3'0'   OUTLIM=
#SYSCPY  DC    AL2(DALCOPYS),AL2(1,1),XL1'0'   COPIES=
#SYSUCS  DC    AL2(DALUCS),AL2(1,4),CL4' '     UCS=
#SYSCLS  DC    AL2(DALSYSOU),AL2(1,1),CL1'A'    SYSOUT=
#SYSHLD  DC    AL2(DALSHOLD),AL2(0)            HOLD
#SYSFRE  DC    AL2(DALCLOSE),AL2(0)            CLOSE=FREE
#SYSFAV  DC    AL2(DALFCBAV),AL2(1,1),XL1'0'   FCB=(,ALIGN×VERIFY)
#SYSFLD  DC    AL2(DALUFOLD),AL2(0)            UCS=(,FOLD)
#SYSVER  DC    AL2(DALUVRFY),AL2(0)            UCS=(,,VERIFY)
#SYSRFM  DC    AL2(DALRECFM),AL2(1,1),XL1'54'  RECFM=VBA
         SPACE
ALLOCDSA DC    AL1(0)
         DS    0D
DSALNG   EQU   *-SYSALCDS              LENGTH OF DSA
         TITLE 'DS@SYALC - CODE'
**********************************************************************
*                      I N I T I A L I Z E                           *
**********************************************************************
         SPACE
DS@SYALC CSECT
         DS@START ,
         PRINT NOGEN
         SPACE
         LR    R11,R15                 PROGRAM BASE ADDRESS
         USING DS@SYALC,R11
         L     R9,0(R1)                ADDRESS PARM BLOCK
         USING SYSALCP,R9
         L     R1,ALC$DSA@             GET DSA ADDRESS
         LA    R3,DSALNG               GET LENGTH OF OUR DSA
         SLR   R6,R6                   CLEAR REG
         LTR   R1,R1                   IF DSA NOT SUPPLIED, THEN
         BNZ   SYSALC01
         GETMAIN RC,LV=(R3)              GO GET SOME STORAGE
         LA    R6,FLAGON                 SAY WE ALLOCATED DSA
SYSALC01 DS    0H
         LR    R2,R1                   COPY DSA ADDRESS
         SLR   R5,R5                   CLEAR FOR MVCL
         MVCL  R2,R4                   THIS SHOULD ZERO IT OUT
         ST    R13,4(0,R1)             SET BACKWARD CHAIN
         ST    R1,8(0,R13)             SET FORWARD CHAIN
         LR    R13,R1                  GET DSA BASE
         USING SYSALCDS,R13
         STC   R6,ALLOCDSA             SET FLAG
         MVC   SAVEAREA(4),=CL4'SYSA'  SET SAVE AREA IDENTIFIER
         MVC   REQBLK(REQBLKML),REQBLKM MOVE IN REQUEST BLOCK MASK
         MVC   TEXTUNIT(TXTUNITL),TXTUNITS MOVE TXT UNIT MASKS
         BAL   R14,DYNAM               GO TO IT
         SPACE
**********************************************************************
*                           R E T U R N                              *
**********************************************************************
         SPACE
         L     R4,RETCODE             GET RETURN CODE
         CLI   ALLOCDSA,FLAGON        IF WE ALLOCATED OUR DSA
         BNE   RETURN
         LR    R2,R13                   COPY R13
         LA    R1,DSALNG                GET LENGTH OF STORAGE GOTTEN
         L     R3,4(0,R13)              COPY PREVIOUS REGISTER 13
         FREEMAIN RC,LV=(R1),A=(R2)     DO THE FREEMAIN
         LR    R13,R3                   RESTORE REG 13 CONTENTS
         B     RETURN1
RETURN   DS    0H
         L     R13,4(0,R13)             RESTORE REGISTER 13
RETURN1  DS    0H
         LR    R15,R4                 RESTORE RETURN CODE
         RETURN (14,12),T,RC=(15)     DONE
         TITLE 'DS@SYALC - ALLOCATE THE SYSOUT FILE'
**********************************************************************
*                         A L L O C A T E                            *
**********************************************************************
         SPACE
DYNAM    DS    0H
         ST    R14,DYN14SV             SAVE RETURN REGISTER
         LA    R1,RBLIB                REQUEST BLOCK ADDRESS
         ST    R1,RBALIB               DYNALLOC PARM LIST
         MVI   RBALIB,X'80'            VL BIT IN PARM LIST
         LA    R1,TEXTLIST             DDNAME TEXT UNIT ADDRESS
         ST    R1,RBTPTR               INTO REQUEST BLOCK
         LA    R2,TEXTLIST             TEXT UNIT LIST ADDRESS
         LA    R3,#SYSOUT              DDNAME TEXT UNIT
         ST    R3,TEXTLIST
         MVC   6(8,R3),ALC$DDNM        SET DDNAME
         CLC   ALC$DDNM,=CL8' '        IF DDNAME NOT BLANK, THEN
         BNE   DYNAM01                   SKIP
         LA    R3,#SYSRTN              ELSE SAY RETURN DDNAME
         ST    R3,TEXTLIST             STORE POINTER IN TEXT LIST
DYNAM01  INDEX #SYSCLS                 ADD TEXT UNIT ADDR TO LIST
         CLI   ALC$CLAS,C' '           WAS CLASS SPECIFIED?
         BE    NOCLASS                 NO
         MVC   #SYSCLS+6(1),ALC$CLAS   MOVE CLASS TO TEXT UNIT
         LA    R1,1                    SET # IN TEXT UNIT TO 1
         STH   R1,#SYSCLS+2
         STH   R1,#SYSCLS+4
NOCLASS  EQU   *
         INDEX #SYSRFM                 SET RECFM=VBA
         TM    ALC$FLG2,ALC$NOCC       NO CARRIAGE CONTROL ?
         BZ    NONOCC                  THEN SKIP
         NI    #SYSRFM+6,255-X'04'     TURN OFF 'A' BIT
NONOCC   EQU   *
         SPACE
         CLI   ALC$PGNM,C' '           IF PGM SPECIFIED, THEN
         BE    NOPGM
         INDEX #SYSPGM                   INCREMENT REGS
         MVC   #SYSPGM+6(8),ALC$PGNM     MOVE IN NAME
NOPGM    DS    0H
         CLI   ALC$DEST,C' '           WAS DEST SPECIFIED?
         BE    NODEST                  NO
         INDEX #SYSDST                 INCREMENT REGS R2/R3
         MVC   #SYSDST+6(8),ALC$DEST   MOVE DEST TO TEXT UNIT
NODEST   EQU   *
         SPACE
         CLI   ALC$FORM,C' '           WAS FORMS SPECIFIED?
         BE    NOFORMS                 NO
         INDEX #SYSFRM                 INCREMENT REGS R2/R3
         MVC   #SYSFRM+6(4),ALC$FORM   MOVE FORMS TO TEXT UNIT
NOFORMS  EQU   *
         SPACE
         CLI   ALC$FCB,C' '            WAS FCB SPECIFIED?
         BE    NOFCB                   NO
         INDEX #SYSFCB                 INCREMENT REGS R2/R3
         MVC   #SYSFCB+6(4),ALC$FCB    MOVE FCB TO TEXT UNIT
NOFCB    EQU   *
         SPACE
         CLC   ALC$OLIM,=F'0'          WAS OUTLIM SPECIFIED?
         BE    NOOLIM                  NO
         INDEX #SYSLIM                 INCREMENT REGS R2/R3
         MVC   #SYSLIM+6(3),ALC$OLIM+1 MOVE OUTLIM TO TEXT UNIT
NOOLIM   EQU   *
         SPACE
         CLC   ALC$COPY,=H'0'          WAS COPIES SPECIFIED?
         BE    NOCPY                   NO
         INDEX #SYSCPY                 INCREMENT REGS R2/R3
         MVC   #SYSCPY+6(1),ALC$COPY+1 MOVE COPIES TO TEXT UNIT
NOCPY    EQU   *
         SPACE
         CLI   ALC$UCS,C' '            WAS UCS SPECIFIED?
         BE    NOUCS                   NO
         INDEX #SYSUCS                 INCREMENT REGS R2/R3
         MVC   #SYSUCS+6(4),ALC$UCS    MOVE UCS TO TEXT UNIT    824 DDI
NOUCS    EQU   *
         SPACE
         TM    ALC$FLG1,ALC$HOLD       HOLD OPTION
         BZ    NOHOLD
         INDEX #SYSHLD                 INCREMENT REGS R2/R3
NOHOLD   EQU   *
         SPACE
         TM    ALC$FLG1,ALC$FOLD       FOLD OPTION
         BZ    NOFOLD
         INDEX #SYSFLD                 INCREMENT REGS R2/R3
NOFOLD   EQU   *
         SPACE
         TM    ALC$FLG1,ALC$FREE       FREE=CLOSE OPTION
         BZ    NOFREE
         INDEX #SYSFRE                 INCREMENT REGS R2/R3
NOFREE   EQU   *
         SPACE
         TM    ALC$FLG1,ALC$VUCS       UCS=(,VERIFY) OPTION
         BZ    NOVER
         INDEX #SYSVER                 INCREMENT REGS R2/R3
NOVER    EQU   *
         SPACE
         TM    ALC$FLG1,ALC$AFCB+ALC$VFCB FCB=(,ALIGN×VERIFY) OPTION
         BZ    NOFAV
         INDEX #SYSFAV                 INCREMENT REGS R2/R3
         MVC   #SYSFAV+6(1),ALC$FLG1   SET BITS IN TEXT UNIT
         NI    #SYSFAV+6,X'0C'         MASK OFF OTHER BITS
NOFAV    EQU   *
         SPACE
**********************************************************************
*                        S V C    9 9                                *
**********************************************************************
         SPACE
         LA    1,RBALIB
         SVC   99
         ST    R15,RETCODE
         MVC   ALC$RESN(4),RBERROR     SET ERROR AND INFO CODES
         CLC   ALC$DDNM,=CL8' '        IF DDNAME NOT BLANK, THEN
         BNE   DYNMRET                   WE ARE DONE
         MVC   ALC$DDNM,#SYSRTN+6      ELSE GIVE DDNAME RETURNED
DYNMRET  L     R14,DYN14SV             RESTORE RETURN REGISTER
         BR    R14                     RETURN TO CALLER
         TITLE 'DS@SYALC - STORAGE DEFINITIONS'
**********************************************************************
*                S T A T I C     D E F I N I T I O N S               *
**********************************************************************
         SPACE
PATCHSP  DC    64S(*)                  PATCH SPACE
         SPACE
REQBLKM  DS    0F
         DC    A(0)                    ADDRESS OF REQUEST BLOCK.
         DC    AL1(20,1,S99NOCNV,0)    LENGTH, FUNCTION, FLAG
         DC    H'0'                    ERROR CODE
         DC    H'0'                    INFO
         DC    A(0)                    TEXT POINTER CODE.
         DC    A(0)                    RESERVED
         DC    A(0)                    FLAGS
REQBLKML EQU   *-REQBLKM               LENGTH OF REQUEST BLOCK
         SPACE
TXTUNITS DS    0D
         DC    AL2(DALDDNAM),AL2(1,8),CL8' '
         DC    AL2(DALRTDDN),AL2(1,8),CL8' '   RETURN DDNAME
         DC    AL2(DALSPGNM),AL2(1,8),CL8' '   PGM=
         DC    AL2(DALSUSER),AL2(1,8),CL8' '   DEST
         DC    AL2(DALSFMNO),AL2(1,4),CL4' '   FORMS=
         DC    AL2(DALFCBIM),AL2(1,4),CL4' '   FCB=
         DC    AL2(DALOUTLM),AL2(1,3),XL3'0'   OUTLIM=
         DC    AL2(DALCOPYS),AL2(1,1),XL1'0'   COPIES=
         DC    AL2(DALUCS),AL2(1,4),CL4' '     UCS=
         DC    AL2(DALSYSOU),AL2(1,1),CL1'A'    SYSOUT=
         DC    AL2(DALSHOLD),AL2(0)            HOLD
         DC    AL2(DALCLOSE),AL2(0)            CLOSE=FREE
         DC    AL2(DALFCBAV),AL2(1,1),XL1'0'   FCB=(,ALIGN×VERIFY)
         DC    AL2(DALUFOLD),AL2(0)            UCS=(,FOLD)
         DC    AL2(DALUVRFY),AL2(0)            UCS=(,,VERIFY)
*        YOU CAN'T SPECIFY DCB=OPTCD=J THROUGH SVC 99 - MUST BE IN DCB.
         DC    AL2(DALRECFM),AL2(1,1),XL1'54'  RECFM=VBA
TXTUNITL EQU   *-TXTUNITS              LENGTH OF THESE
         LTORG
         END
