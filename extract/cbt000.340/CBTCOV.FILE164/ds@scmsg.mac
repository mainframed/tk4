DS@SCMSG TITLE 'DS@SCMSG - MESSAGE SYSTEM FOR DS@SCPDS'
DS@SCMSG CSECT
         SPACE
***********************************************************************
*                                                                     *
*  PROGRAM-ID:  DS@SCMSG                                              *
*                                                                     *
*  FUNCTION:                                                          *
*      MESSAGE SUBSYSTEM FOR DS@SCPDS (SCAN PDS).                     *
*                                                                     *
*  INPUT:                                                             *
*      INPUT IS THE MESSAGE PARAMETER BLOCK, WHICH CONTAINS THE       *
*      MESSAGE TABLE ID (I.E., MODE--BROWSE, EDIT, OR MEMBER LIST),   *
*      THE MESSAGE ID (A MULTIPLE OF 4), AND A DSA ADDRESS.  IF THE   *
*      DSA ADDRESS IS NOT GIVEN, THIS ROUTINE WILL GET A DSA AND      *
*      FREE IT FOR EACH INVOCATION.  IF THE DSA ADDRESS IS TO BE      *
*      GIVEN EACH TIME, IT SHOULD BE THE SAME AREA, AND SHOULD BE     *
*      RESERVED FOR EXCLUSIVE USE OF THE MESSAGE SUBSYSTEM.  IT ALSO  *
*      SHOULD BE ZEROED FOR THE FIRST CALL.                           *
*                                                                     *
*  REGISTER USAGE:                                                    *
*      R11 - BASE REGISTER                                            *
*      R13-R15 STANDARD USAGE                                         *
*                                                                     *
*  SPECIAL NOTES:                                                     *
*      THIS PROGRAM IS REENTRANT, REUSEABLE.                          *
*                                                                     *
***********************************************************************
         COPY  DS@MACS
         TITLE 'OTHER EQUATES'
***********************************************************************
*                  O T H E R    E Q U A T E S                         *
***********************************************************************
         SPACE
FLAGON   EQU   255
FLAGOFF  EQU   0
         TITLE 'MESSAGE PARAMETER BLOCK'
***********************************************************************
*              P A R A M E T E R      B L O C K                       *
***********************************************************************
         SPACE
         DS@MSGPB DSECT=YES
         TITLE 'MESSAGE FORMAT'
***********************************************************************
*                 M E S S A G E      F O R M A T                      *
***********************************************************************
         SPACE
MSGFORM  DSECT                        MAPS MESSAGE IN TABLE(S) BELOW
MSGHELP  DS    CL8                      NAME OF HELP SCREEN (OR BLANK)
MSGALARM DS    CL3                      ALARM (YES OR NO)
MSGLLNG  DS    AL1                      LENGTH OF LONG MESSAGE
MSGSMSG  DS    CL24                     SHORT MESSAGE
MSGLMSG  DS    0C                       LONG MESSAGE
         TITLE 'DSA'
***********************************************************************
*                          D S A    M A P                             *
***********************************************************************
         SPACE
DSA      DSECT
SAVEAREA DS    18F                    SAVE AREA
DV14SAVE DS    F                      REG 14 SAVE AREA FOR DEFVARS SUB.
GM14SAVE DS    F                      REG 14 SAVE AREA FOR GETMSG  SUB.
BM14SAVE DS    F                      REG 14 SAVE AREA FOR BLDMSG  SUB.
MSG@     DC    A(0)                   ADDRESS OF CURRENT MESSAGE
VARTBLA  DC    3A(0)                  PARM LIST FOR VARIABLE SUBROUTINE
         SPACE
NOT1STM  DC    AL1(0)                 NOT FIRST MSG CALL IF FLAGON
ALLOCDSA DC    AL1(0)                 WE ALLOCATED OUR DSA
         SPACE
CALLPL   CALL  ,(,,,,),MF=L           CALL PARM LIST
         SPACE
*                                     THE FOLLOWING ARE VDEFINED
DS@SMSG  DC    CL24' '                  SHORT MESSAGE
DS@LMSG  DC    CL78' '                  LONG MESSAGE
DS@ALARM DC    C'YES'                   ALARM (YES OR NO)
DS@HELP  DC    CL8' '                   NAME OF HELP PANEL
         SPACE
LNGTBL   DC    4F'0'                  LENGTH FOR ABOVE VARIABLES
         SPACE
VARCN    DC    CL8' '                 NAME OF VARIABLE TO VCOPY
VARCL    DC    F'0'                   LENGTH OF VARIABLE COPIED
VARC@    DC    A(0)                   ADDRESS OF VARIABLE COPIED
         SPACE
DSALNG   EQU   *-DSA
         TITLE 'MAINLINE CODE'
***********************************************************************
*              D S @ S C M S G     P R O G R A M                      *
***********************************************************************
         SPACE
DS@SCMSG CSECT
         PRINT GEN
         USING *,R15
         DS@START ,
         PRINT GEN
         DROP  R15                    DROP TEMPORARY BASE
         LR    R11,R15                SET BASE REGISTER
         USING DS@SCMSG,R11
         L     R12,0(R1)              ADDRESS PARAMETER BLOCK
         USING DS@MSGPB,R12
         L     R1,MSGDSA@             GET DSA ADDRESS
         LA    R3,DSALNG              GET DSA LENGTH
         LTR   R1,R1                  IF WE DON'T HAVE DSA, THEN
         BNZ   MSG00
         GETMAIN RC,LV=(R3)             GETMAIN HAD BETTER WORK
         LR    R2,R1                    GET DSA ADDRESS
         SLR   R5,R5                    CLEAR FOR MVCL
         MVCL  R2,R4                    AND ZERO IT OUT
         USING DSA,R1                   TEMPORARY USING
         MVI   ALLOCDSA,FLAGON          SAY WE ALLOCATED OUR DSA
         DROP  R1
MSG00    DS    0H
         ST    R13,4(0,R1)            SET BACKWARD CHAIN
         ST    R1,8(0,R13)            SET FORWARD CHAIN
         LR    R13,R1                 GET DSA BASE
         USING DSA,R13
         MVC   SAVEAREA(4),=C'MSGS'   SET OUR DSA IDENTIFIER
         CLI   NOT1STM,FLAGON         IF FIRST MSG, THEN
         BE    MSG10
         DEFINE DEFVTBL,LNGTBL,DS@SMSG  DEFINE DIALOG VARIABLES
MSG10    DS    0H
         BAL   R14,GETMSG             GO GET THE MESSAGE TEXTS
         LA    R2,=CL8'DS@M001'       ASSUME HELP SCREEN MESSAGE
         CLC   DS@HELP,=CL80' '       IF ^HELP SCREEN, THEN
         BNE   *+8
         LA    R2,=CL8'DS@M002'         NO HELP SCREEN MESSAGE
         CALL  ISPLINK,(=CL8'SETMSG',(R2)),VL,MF=(E,CALLPL)
**********************************************************************
*     FREE OUR DSA, IF WE ALLOCATED IT.                              *
**********************************************************************
         CLI   ALLOCDSA,FLAGON        IF WE ALLOCATED OUR DSA
         BNE   RETURN
         LA    R2,MSGVARS
         CALL  ISPLINK,(=CL8'VDELETE',(R2)),VL,MF=(E,CALLPL)
         LR    R2,R13                   COPY DSA ADDRESS
         LA    R1,DSALNG                GET DSA LENGTH
         L     R3,4(0,R13)              COPY REGISTER 13
         FREEMAIN RC,LV=(R1),A=(R2)     FREE OUR DSA
         LR    R13,R3                   RESTORE PREVIOUS SAVE AREA
         B     RETURN1                  WE ARE DONE
RETURN   DS    0H
         L     R13,4(0,R13)            RESTORE REGISTER 13
RETURN1  DS    0H
         L     R14,12(0,R13)           RESTORE RETURN REGISTER
         LM    R0,R12,20(R13)          RESTORE CALLER'S REGISTERS
         BR    R14                     AND LEAVE
         SPACE
MSGVARS  DC    CL8'DS@SMSG DS@LMSG DS@ALARM DS@HELP'
         TITLE 'GET THE MESSAGE'
**********************************************************************
*              G E T M S G         S U B R O U T I N E               *
*                                                                    *
*    THIS SUBROUTINE GETS THE MESSAGE FROM THE PROPER MESSAGE TABLE, *
*  AND PERFORMS ANY VARIABLE SUBSTITUTION, SETTING THE DIALOG        *
*  VARIABLES ALREADY DEFINED THAT ARE PART OF OUR MESSAGE.  (DIALOG  *
*  MANAGER WILL NOT SUBSTITUTE DIALOG VALUES INTO A MESSAGE THAT IS  *
*  ITSELF DEFINED AS A DIALOG VARIABLE, HENCE WE HAVE TO DO IT OUR-  *
*  SELVES.  THIS MAY BE A BUG, BUT I DOUBT IT).                      *
*                                                                    *
**********************************************************************
         SPACE
GETMSG   DS    0H
         ST    R14,GM14SAVE           SAVE RETURN REGISTER
         LM    R2,R3,MSGTB            GET INPUT PARMS
         C     R2,MAXMSGTB            IF MSGTBID GREATER THAN MAX
         BNH   *+6
         DC    H'0'                     PROGRAMMING ERROR, SO DIE
         BCTR  R2,0                   WE ARE ZERO BASED HERE
         BCTR  R3,0
         SLL   R2,2                   GET OFFSET INTO THE TWO TABLES
         SLL   R3,2
         LA    R4,MSGTBL@             ADDRESS TABLE OF MESSAGE TBLS
         AR    R4,R2                  ADD OFFSET
         L     R4,0(R4)               ADDRESS CORRECT MESSAGE TABLE
         AR    R4,R3                  ADD OFFSET
         L     R4,0(R4)               NOW WE HAVE BASE FOR MESSAGE
         ST    R4,MSG@                SAVE IT
         USING MSGFORM,R4
         MVC   DS@ALARM,MSGALARM      MOVE ALARM VALUE IN
         MVC   DS@HELP,MSGHELP        MOVE IN HELP SCREEN NAME
         MVC   DS@SMSG,=CL80' '       BLANK OUT THESE FIELDS
         MVC   DS@LMSG,=CL80' '
         LA    R3,MSGSMSG             ADDRESS SHORT MESSAGE FOR SUB
         LA    R4,DS@SMSG             ADDRESS PLACE FOR MESSAGE
         L     R5,=AL4(L'MSGSMSG)     SET LENGTH FOR SCAN
         L     R6,=AL4(L'DS@SMSG)     SET MAX LENGTH FOR SUB.
         BAL   R14,BLDMSG             BUILD THE MESSAGE
         L     R4,MSG@                RESTORE MESSAGE BASE
         SLR   R5,R5                  CLEAR REG FOR IC
         IC    R5,MSGLLNG             SET LENGTH FOR SCAN
         LA    R3,MSGLMSG             ADDRESS SHORT MESSAGE FOR SUB
         LA    R4,DS@LMSG             ADDRESS PLACE FOR MESSAGE
         L     R6,=AL4(L'DS@LMSG)     SET MAX LENGTH FOR SUB.
         BAL   R14,BLDMSG             BUILD THE MESSAGE
         L     R14,GM14SAVE           RESTORE RETURN REGISTER
         BR    R14                    RETURN TO CALLER
         TITLE 'BUILD THE MESSAGE, SUBSTITUTING ANY VARIABLES'
**********************************************************************
*              B L D M S G         S U B R O U T I N E               *
*                                                                    *
*    THIS SUBROUTINE BUILDS A MESSAGE.  UPON ENTRY, R3 POINTS TO THE *
*  MESSAGE IN THE TABLE, R4 POINTS TO THE PLACE TO PUT THE BUILT     *
*  MESSAGE, R5 CONTAINS THE LENGTH OF THE MESSAGE IN THE TABLE, AND  *
*  R6 CONTAINS THE MAXIMUM LENGTH FOR THE BUILT MESSAGE.  BASICALLY, *
*  THIS ROUTINE SCANS THE MESSAGE FOR VARIABLES TO BE SUBSTITUTED    *
*  (INDICATED BY THE &, OF COURSE).  WHEN ONE IS FOUND, WE VCOPY THE *
*  VARIABLE, AND PLACE IT IN THE OUTPUT MESSAGE AREA ALONG WITH THE  *
*  REST OF THE TEXT.                                                 *
*                                                                    *
**********************************************************************
         SPACE
BLDMSG   DS    0H
         ST    R14,BM14SAVE           SAVE RETURN REGISTER
         AR    R5,R3                  CALCULATE ENDING INPUT ADDRESS
BLDMLP1  DS    0H
         CR    R3,R5                  DO WHILE (LENGTH LEFT > 0)
         BNL   BLDMSGX
         LTR   R6,R6                    IF NO LENGTH FOR OUTPUT, THEN
         BZ    BLDMSGX                    LEAVE
         LR    R1,R5                    ELSE COPY STARTING POINT
         SR    R1,R3                    CALCULATE LENGTH FOR TRT
         BCTR  R1,0                     GET EXECUTE LENGTH
         EX    R1,TRTAMPX
         BZ    BLDMLP1X                 IF & FOUND, THEN
         LR    R2,R1                      COPY ADDRESS OF &
         SR    R1,R3                      CALCULATE LENGTH UP TO &
         CR    R1,R6                      IF LENGTH > THEN OUTPUT LEFT,
         BNH   *+6
         LR    R1,R6                        SET IT TO OUTPUT LNG LEFT
         SR    R6,R1                      ADJUST OUTPUT LENGTH LEFT
         LTR   R1,R1                      IF & NOT IN 1ST POSITION,
         BZ    BLDML03
         BCTR  R1,0                         MAKE IT AN EXECUTE LENGTH
         EX    R1,MVCMSG                    MOVE TEXT B4 & TO OUTPUT
         LA    R4,1(R1,R4)                  GET PAST TEXT JUST MOVED
BLDML03  DS    0H                         ELSE
         LA    R3,1(,R2)                  GET CURRENT POSITION
         CLI   0(R3),C'&&'                IF DOUBLE &
         BNE   BLDML05
         MVI   0(R4),C'&&'                  MOVE SINGLE & TO OUTPUT
         LA    R4,1(,R4)                    GET PAST & IN OUTPUT
         LA    R3,1(,R3)                    GET PAST && IN INPUT
         B     BLDMLGO
BLDML05  DS    0H                         ELSE
         LR    R1,R5                        READY TO EXTRACT VAR. NAME
         SR    R1,R3                        CALCULATE LENGTH LEFT
         BCTR  R1,0                         MAKE IT AN EXECUTE LENGTH
         EX    R1,TRTNONAX                  FIND NON-ALPHA AFTER NAME
         BNZ   BLDML07                      IF NOT FOUND, THEN
         LR    R2,R5                          ACT LIKE WE'RE DONE
         B     BLDML10
BLDML07  DS    0H                           ELSE (GOT A BLANK)
         LR    R2,R1                          ADDRESS IT
         SR    R1,R3                          GET LENGTH OF VAR. NAME
         LTR   R1,R1                        IF BLANK FOLLOWING &,
         BZ    BLDMLGO                        NOTHING TO MOVE
         BCTR  R1,0                         SET EX LENGTH
BLDML10  DS    0H
         MVC   VARCN,=CL80' '               BLANK OUT RECEIVING FIELD
         EX    R1,MVCVARCN                  MOVE TO VARIABLE
         LR    R3,R2                        GET PAST VAR. NAME IN MSG
         LA    R7,VARCN                     ADDRESS VAR NAME
         LA    R8,VARCL                     ADDRESS PLACE FOR LENGTH
         LA    R9,VARC@                     ADDRESS PLACE FOR ADDR
         CALL  ISPLINK,(=CL8'VCOPY',(R7),(R8),(R9),=CL8'LOCATE'),VL,   +
               MF=(E,CALLPL)
         L     R1,VARCL                     GET LENGTH OF VARIABLE
         LTR   R1,R1                        IF FOUND, THEN
         BZ    BLDMLGO
         CR    R1,R6                          BE SURE WE DON'T OVERFLOW
         BNH   *+6
         LR    R1,R6
         SR    R6,R1                          ADJUST LENGTH LEFT
         BCTR  R1,0                           SET EXECUTE LENGTH
         L     R7,VARC@                       ADDRESS VARIABLE
         EX    R1,MVCVARC                     MOVE TO MESSAGE
         LA    R4,1(R1,R4)                    GET PAST TEXT MOVED
BLDMLGO  DS    0H
         B     BLDMLP1                    END OF LOOP
BLDMLP1X DS    0H                       MOVE WHAT'S LEFT TO OUTPUT
         LR    R1,R5                    COPY END ADDRESS
         SR    R1,R3                    SUBTRACT CURRENT TO GET LNG
         CR    R1,R6                    IF LENGTH > THEN OUTPUT LEFT,
         BNH   *+6
         LR    R1,R6                      SET IT TO OUTPUT LNG LEFT
         BCTR  R1,0                     SET EXECUTE LENGTH
         EX    R1,MVCMSG                MOVE TO OUTPUT
BLDMSGX  DS    0H
         L     R14,BM14SAVE           RESTORE RETURN REGISTER
         BR    R14                    RETURN TO CALLER
         SPACE
TRTAMPX  TRT   0(0,R3),TRTAMP         EXECUTED
TRTNONAX TRT   0(0,R3),TRTNONA          INSTRUCTIONS
MVCMSG   MVC   0(0,R4),0(R3)
MVCVARCN MVC   VARCN(0),0(R3)
MVCVARC  MVC   0(0,R4),0(R7)
         SPACE
TRTAMP   DC    XL256'0'               TRANSLATE TABLE FOR AMPERSAND
         ORG   TRTAMP+C'&&'
         DC    X'01'
         ORG
TRTNONA  DC    256X'FF'               TRANSLATE TABLE FOR NON-ALPHA
         ORG   TRTNONA+C'$'
         DC    X'0'
         ORG   TRTNONA+C'@'
         DC    X'0'
         ORG   TRTNONA+C'A'
         DC    9X'0'
         ORG   TRTNONA+C'J'
         DC    9X'0'
         ORG   TRTNONA+C'S'
         DC    8X'0'
         ORG   TRTNONA+C'0'
         DC    10X'0'
         ORG
         TITLE 'DEFINE ISPF DIALOG VARIABLES SUBROUTINE'
**********************************************************************
*              D E F V A R S       S U B R O U T I N E               *
*                                                                    *
*    THIS SUBROUTINE CYCLES THROUGHT THE NECESSARY TABLES IN ORDER   *
*  TO EFFICIENTLY ISSUE VDEFINE CALLS.                               *
*  INPUT TO THIS ROUTINE IS VARTBLA, WHICH CONTAINS THREE ADDRESSES. *
*  THE FIRST ADDRESS POINTS TO A TABLE THAT CONTAINS VARIOUS INFOR-  *
*  MATION ABOUT THE VARIABLES TO VDEFINE; THE 2ND  ADDRESS POINTS    *
*  TO A LENGTH TABLE WHERE THE VARIABLE LENGTHS VDEFINED WILL BE     *
*  PLACED (IN CONSECUTIVE FULLWORDS); THE THIRD ADDRESS POINTS TO    *
*  THE FIRST VARIABLE ADDRESS IN THE DSA.                            *
*                                                                    *
**********************************************************************
         SPACE
DEFVARS  ST    R14,DV14SAVE           SAVE RETURN REGISTER
         LM    R2,R4,VARTBLA          LOAD ADDRESSES FROM PARM LIST
DVLOOP   DS    0H
         SLR   R5,R5                  CLEAR REGISTER 2
         IC    R5,0(R2)               GET LENGTH FOR VARIABLE
         LTR   R5,R5                  IF ZERO, THEN
         BZ    DVEXIT                   WE ARE DONE
         ST    R5,0(R3)               SAVE VARIABLE LENGTH IN TABLE
         LH    R5,2(R2)               GET OFFSET FOR VARIABLE
         AR    R5,R4                  ADD TO FIRST VARIABLE
         LA    R6,4(R2)               ADDRESS VARIABLE NAME
         LA    R7,=C'CHAR'            ADDRESS THIS FORMAT
         CLI   1(R2),CHAR             IF NOT CHAR FORMAT, THEN
         BE    DVVDEF
         LA    R7,=C'FIXED'             TRY FIXED FORMAT
         CLI   1(R2),FIXED              IF NOT FIXED FORMAT, THEN
         BE    DVVDEF
         LA    R7,=C'BIT'                 TRY BIT FORMAT
         CLI   1(R2),BIT                  IF NOT BIT FORMAT, THEN
         BE    DVVDEF
         LA    R7,=C'HEX'                   TRY HEX FORMAT
         CLI   1(R2),HEX                    IF NOT HEX FORMAT, THEN
         BE    DVVDEF
         DC    H'0'                           DIE 0C1
DVVDEF   DS    0H
         CALL  ISPLINK,(=CL8'VDEFINE',(R6),(R5),(R7),(R3)),VL,         +
               MF=(E,CALLPL)          ISSUE THE VCOPY
         LA    R2,VTBLLNG(,R2)        NEXT ELEMENT IN THE TABLE
         LA    R3,4(,R3)              NEXT ONE IN LENGTH TABLE
         B     DVLOOP                 AND LOOP
DVEXIT   DS    0H
         L     R14,DV14SAVE           GET RETURN REGISTER
         BR    R14                    RETURN TO CALLER
         TITLE 'LITERAL POOL'
**********************************************************************
*                       L I T E R A L S                              *
**********************************************************************
         SPACE
         LTORG
         TITLE 'DIALOG VARIABLE TABLE'
**********************************************************************
*                V A R I A B L E     T A B L E                       *
**********************************************************************
         SPACE
DEFVTBL  DC    AL1(L'DS@SMSG),AL1(CHAR),AL2(DS@SMSG-DS@SMSG)
         DC    CL10'(DS@SMSG)'
VTBLLNG  EQU   *-DEFVTBL
         DC    AL1(L'DS@LMSG),AL1(CHAR),AL2(DS@LMSG-DS@SMSG)
         DC    CL10'(DS@LMSG)'
         DC    AL1(L'DS@ALARM),AL1(CHAR),AL2(DS@ALARM-DS@SMSG)
         DC    CL10'(DS@ALARM)'
         DC    AL1(L'DS@HELP),AL1(CHAR),AL2(DS@HELP-DS@SMSG)
         DC    CL10'(DS@HELP)'
         DC    AL2(0)                 INDICATES END OF TABLE
         SPACE
CHAR     EQU   0
FIXED    EQU   4
BIT      EQU   8
HEX      EQU   12
         TITLE 'MESSAGE TABLES'
**********************************************************************
*                 M E S S A G E      T A B L E S                     *
**********************************************************************
         SPACE
MAXMSGTB DC    A(3)                   MAXIMUM NUMBER OF MSG TABLES
         SPACE
MSGTBL@  DC    A(SCMSGTBL),A(BRMSGTBL),A(EDMSGTBL)
         SPACE
         DS@MSG SMSG='  No Userid for Find Cmd',HELP=DST@SC53,         +
               LMSG='Find command requires a USERID operand.'
         DS@MSG SMSG='            Invalid Mode',HELP=DST@SC56,         +
               LMSG='Valid modes for MODE command are E (Edit), B (Brow+
               se), and M (Member List).'
         DS@MSG SMSG=' New Dataset Name Needed',HELP=DST@SC56,         +
               LMSG='The SWITCH command requires a new dataset name ope+
               rand.'
         DS@MSG SMSG='RACF Authorization Fails',                       +
               LMSG='&&DS@ERRFD'
         DS@MSG SMSG=' Invalid Sort Operand(s)',HELP=DST@SC54,         +
               LMSG='Sort operand(S) entered are invalid.'
         DS@MSG SMSG='                No Match',                       +
               LMSG='No members matched generic member name or userid.'
         DS@MSG SMSG='       Dataset Not a PDS',                       +
               LMSG='Input dataset(s) must be DSORG=PO.'
         DS@MSG SMSG='       OPEN Error on PDS',                       +
               LMSG='The PDS could not be opened.'
         DS@MSG SMSG='    Invalid Dataset Name',                       +
               LMSG='The dataset name is invalid.'
         DS@MSG SMSG='   Enter New Member Name',HELP=DST@SC43,         +
               LMSG='For Rename, you must enter the new member name.'
         DS@MSG SMSG='        Edit Not Allowed',                       +
               LMSG='Edit now allowed for Concatenation--use ISPF/PDF E+
               dit.'
         DS@MSG SMSG='     &&FINDPARM Not Found',HELP=DST@SC53,        +
               LMSG='USERID &&FINDPARM was not found.'
         DS@MSG SMSG='     Invalid Select Code',HELP=DST@SC40,         +
               LMSG='Valid select codes are B/S, E, C, M, DEL, R, P, SU+
               B, Z, L, and DIR.'
         DS@MSG SMSG='  Invalid Search Columns',HELP=DST@SC23,         +
               LMSG='Column width too small for string, or negative wid+
               th.'
         DS@MSG SMSG='    Member Name Too Long',HELP=DST@SC23,         +
               LMSG='The member name must be <= 8 characters.'
         DS@MSG SMSG='         Invalid Command',HELP=DST@SC50,         +
               LMSG='The command entered is invalid.'
         DS@MSG SMSG='    Member Name Required',HELP=DST@SC50,         +
               LMSG='Member name is required for command.'
         DS@MSG SMSG='        Member Not Found',HELP=DST@SC51,         +
               LMSG='Member &&TBMEM not found.'
         DS@MSG SMSG='   Member already exists',HELP=DST@SC43,         +
               LMSG='Member already exists--&&PARM1 fails.'
         DS@MSG SMSG='      No Directory Space',HELP=DST@SC43,         +
               LMSG='No directory space for Rename.'
         DS@MSG SMSG='      Display Incomplete',                       +
               LMSG='Attention Interrupt processed--display is incomple+
               te.'
         DS@MSG SMSG=' Allocation or I/O Error',                       +
               LMSG='I/O Error or Allocation Error--command fails.'
         DS@MSG SMSG='          Data Truncated',                       +
               LMSG='Some data was truncated by Print.'
         DS@MSG SMSG=' Vol. Serial Not Allowed',                       +
               LMSG='User "OTHER DATA SET NAME" field when specifying V+
               olume Serial.'
         DS@MSG SMSG='            SYSOUT Freed',HELP=DST@SC52,ALARM=NO,+
               LMSG='SYSOUT Print file has been freed.'
         DS@MSG SMSG='    SYSOUT Not Allocated',HELP=DST@SC52,         +
               LMSG='SYSOUT file for Print has not been allocated.'
         DS@MSG SMSG='      No Directory Space',                       +
               LMSG='No space left in target dataset directory.'
         DS@MSG SMSG='            Out of Space',                       +
               LMSG='Target dataset is out of space.'
         DS@MSG SMSG='       Allocation Failed',                       +
               LMSG='&&DS@ERRFD'
         DS@MSG SMSG='         Invalid Command',                       +
               LMSG='The command entered is invalid.'
         DS@MSG SMSG='         &&FINDPARM Found',ALARM=NO,             +
               LMSG='USERID &&FINDPARM found.'
         DS@MSG SMSG='       No USERID Entered',HELP=DST@SC53,         +
               LMSG='RFIND requires USERID entered on a previous Find c+
               ommand.'
         DS@MSG SMSG='          Member Deleted',                       +
               LMSG='Member &&TBMEM was already deleted.'
         DS@MSG SMSG='&&ZERRSM',                                       +
               LMSG='&&ZERRLM'
         DS@MSG SMSG='   No Members in Dataset',                       +
               LMSG='The specified PDS is empty--no members.'
         DS@MSG SMSG=' Record Format Undefined',                       +
               LMSG='Move/Copy not allowed for RECFM=U dataset--use ISP+
               F/PDF option 3.3.'
         DS@MSG SMSG='   Target Dataset Closed',ALARM=NO,              +
               LMSG='Target dataset for Move/Copy has been closed.'
         DS@MSG SMSG='           Invalid DSORG',                       +
               LMSG='DSORG for Move/Copy target dataset must be PO or P+
               S.'
         DS@MSG SMSG=' Target Dataset Not Open',                       +
               LMSG='Move/Copy target dataset is not open.'
         DS@MSG SMSG='           Scan Complete',                       +
               LMSG='&&MPR members selected, using &&CPUTM CPU seconds,+
                &&ELAPTM elapsed time.'
         DS@MSG SMSG='                 NOT NOW',                       +
               LMSG='HAR...HAR...HAR...'
         DS@MSG SMSG='      Locate Not Allowed',TBL=1,                 +
               LMSG='Re-sort Member List by NAME (default).'
         DS@MSG SMSG='        String Not Found',TBL=1,                 +
               LMSG='Character string was not found in any members disp+
               layed.'
         DS@MSG SMSG='  &&MPR Members to Scan',TBL=1,ALARM=NO,         +
               LMSG='&&MPR members to scan--Enter scan information.'
         DS@MSG SMSG='      Level is &&DS@LVL',TBL=1,ALARM=NO,         +
               LMSG='&&DS@LVL Member Lists are stacked.'
         DS@MSG SMSG='    Invalid Member Name',TBL=1,ALARM=YES,        +
               LMSG='Generic member name is not allowed for this comman+
               d.'
         DS@MSG SMSG=' No Operands on Command',TBL=1,ALARM=YES,        +
               LMSG='No operands are allowed on this command.'
         SPACE 2
SCMSGTBL DS@MSG@ ,
         SPACE 2
         DS@MSG SMSG='  No Userid for Find Cmd',HELP=DST@ENB3,TBL=2,   +
               LMSG='Find command requires a USERID operand.'
         DS@MSG SMSG='            Invalid Mode',HELP=DST@ENB4,TBL=2,   +
               LMSG='Valid modes for MODE command are E (Edit), B (Brow+
               se), and M (Member List).'
         DS@MSG SMSG=' New Dataset Name Needed',HELP=DST@ENB4,,TBL=2,  +
               LMSG='The SWITCH command requires a new dataset name ope+
               rand.'
         DS@MSG SMSG='RACF Authorization Fails',TBL=2,                 +
               LMSG='&&DS@ERRFD'
         DS@MSG SMSG=' Invalid Sort Operand(s)',HELP=DST@ENB3,TBL=2,   +
               LMSG='Sort operand(S) entered are invalid.'
         DS@MSG SMSG='                No Match',TBL=2,                 +
               LMSG='No members matched generic member name or userid.'
         DS@MSG SMSG='       Dataset Not a PDS',TBL=2,                 +
               LMSG='Input dataset(s) must be DSORG=PO.'
         DS@MSG SMSG='       OPEN Error on PDS',TBL=2,                 +
               LMSG='The PDS could not be opened.'
         DS@MSG SMSG='    Invalid Dataset Name',TBL=2,                 +
               LMSG='The dataset name is invalid.'
         DS@MSG SMSG=,TBL=2
         DS@MSG SMSG=,TBL=2
         DS@MSG SMSG='     &&FINDPARM Not Found',HELP=DST@ENB2,TBL=2,  +
               LMSG='USERID &&FINDPARM was not found.'
         DS@MSG SMSG='     Invalid Select Code',HELP=DST@ENB1,TBL=2,   +
               LMSG='Valid select codes are S/B and L.'
         DS@MSG SMSG='  Invalid Search Columns',HELP=DST@SC23,TBL=2,   +
               LMSG='Column width too small for string, or negative wid+
               th.'
         DS@MSG SMSG='    Member Name Too Long',TBL=2,                 +
               LMSG='The member name must be <= 8 characters.'
         DS@MSG SMSG='         Invalid Command',HELP=DST@ENB1,TBL=2,   +
               LMSG='The command entered is invalid.'
         DS@MSG SMSG='    Member Name Required',TBL=2,                 +
               LMSG='Member name is required for command.'
         DS@MSG SMSG='        Member Not Found',TBL=2,                 +
               LMSG='Member &&TBMEM not found.'
         DS@MSG SMSG=,TBL=2
         DS@MSG SMSG=,TBL=2
         DS@MSG SMSG='      Display Incomplete',TBL=2,                 +
               LMSG='Attention Interrupt processed--display is incomple+
               te.'
         DS@MSG SMSG=' Allocation or I/O Error',TBL=2,                 +
               LMSG='I/O Error or Allocation Error--command fails.'
         DS@MSG SMSG=,TBL=2
         DS@MSG SMSG=' Vol. Serial Not Allowed',TBL=2,                 +
               LMSG='User "OTHER DATA SET NAME" field when specifying V+
               olume Serial.'
         DS@MSG SMSG=,TBL=2
         DS@MSG SMSG=,TBL=2
         DS@MSG SMSG=,TBL=2
         DS@MSG SMSG=,TBL=2,
         DS@MSG SMSG='       Allocation Failed',TBL=2,                 +
               LMSG='&&DS@ERRFD'
         DS@MSG SMSG='         Invalid Command',TBL=2,                 +
               LMSG='The command entered is invalid.'
         DS@MSG SMSG='         &&FINDPARM Found',ALARM=NO,TBL=2,       +
               LMSG='USERID &&FINDPARM found.'
         DS@MSG SMSG='       No USERID Entered',HELP=DST@ENB2,TBL=2,   +
               LMSG='RFIND requires USERID entered on a previous Find c+
               ommand.'
         DS@MSG SMSG='          Member Deleted',TBL=2,                 +
               LMSG='Member &&TBMEM was already deleted.'
         DS@MSG SMSG='&&ZERRSM',TBL=2,                                 +
               LMSG='&&ZERRLM'
         DS@MSG SMSG='   No Members in Dataset',TBL=2,                 +
               LMSG='The specified PDS is empty--no members.'
         DS@MSG SMSG=,TBL=2
         DS@MSG SMSG=,TBL=2
         DS@MSG SMSG=,TBL=2
         DS@MSG SMSG=,TBL=2
         DS@MSG SMSG='           Scan Complete',TBL=2,                 +
               LMSG='&&MPR members selected, using &&CPUTM CPU seconds,+
                &&ELAPTM elapsed time.'
         DS@MSG SMSG='                 NOT NOW',TBL=2,                 +
               LMSG='HAR...HAR...HAR...'
         DS@MSG SMSG='      Locate Not Allowed',TBL=2,                 +
               LMSG='Re-sort Member List by NAME (default).'
         DS@MSG SMSG='        String Not Found',TBL=2,                 +
               LMSG='Character string was not found in any members disp+
               layed.'
         DS@MSG SMSG='  &&MPR Members to Scan',TBL=2,ALARM=NO,         +
               LMSG='&&MPR members to scan--Enter scan information.'
         DS@MSG SMSG='      Level is &&DS@LVL',TBL=2,ALARM=NO,         +
               LMSG='&&DS@LVL Member Lists are stacked.'
         DS@MSG SMSG='    Invalid Member Name',TBL=2,ALARM=YES,        +
               LMSG='Generic member name is not allowed for this comman+
               d.'
         DS@MSG SMSG=' No Operands on Command',TBL=2,ALARM=YES,        +
               LMSG='No operands are allowed on this command.'
         SPACE 2
BRMSGTBL DS@MSG@ TBL=2
         SPACE 2
         DS@MSG SMSG='  No Userid for Find Cmd',HELP=DST@ENB3,TBL=3,   +
               LMSG='Find command requires a USERID operand.'
         DS@MSG SMSG='            Invalid Mode',HELP=DST@ENB4,TBL=3,   +
               LMSG='Valid modes for MODE command are E (Edit), B (Brow+
               se), and M (Member List).'
         DS@MSG SMSG=' New Dataset Name Needed',HELP=DST@ENB4,,TBL=3,  +
               LMSG='The SWITCH command requires a new dataset name ope+
               rand.'
         DS@MSG SMSG='RACF Authorization Fails',TBL=3,                 +
               LMSG='&&DS@ERRFD'
         DS@MSG SMSG=' Invalid Sort Operand(s)',HELP=DST@ENB3,TBL=3,   +
               LMSG='Sort operand(S) entered are invalid.'
         DS@MSG SMSG='                No Match',TBL=3,                 +
               LMSG='No members matched generic member name or userid.'
         DS@MSG SMSG='       Dataset Not a PDS',TBL=3,                 +
               LMSG='Input dataset(s) must be DSORG=PO.'
         DS@MSG SMSG='       OPEN Error on PDS',TBL=3,                 +
               LMSG='The PDS could not be opened.'
         DS@MSG SMSG='    Invalid Dataset Name',TBL=3,                 +
               LMSG='The dataset name is invalid.'
         DS@MSG SMSG=,TBL=3
         DS@MSG SMSG=,TBL=3
         DS@MSG SMSG='     &&FINDPARM Not Found',HELP=DST@ENB2,TBL=3,  +
               LMSG='USERID &&FINDPARM was not found.'
         DS@MSG SMSG='     Invalid Select Code',HELP=DST@ENB1,TBL=3,   +
               LMSG='Valid select codes are S/X/E and L.'
         DS@MSG SMSG='  Invalid Search Columns',HELP=DST@SC23,TBL=3,   +
               LMSG='Column width too small for string, or negative wid+
               th.'
         DS@MSG SMSG='    Member Name Too Long',TBL=3,                 +
               LMSG='The member name must be <= 8 characters.'
         DS@MSG SMSG='         Invalid Command',HELP=DST@ENB1,TBL=3,   +
               LMSG='The command entered is invalid.'
         DS@MSG SMSG='    Member Name Required',TBL=3,                 +
               LMSG='Member name is required for command.'
         DS@MSG SMSG='        Member Not Found',TBL=3,                 +
               LMSG='Member &&TBMEM not found.'
         DS@MSG SMSG=,TBL=3
         DS@MSG SMSG=,TBL=3
         DS@MSG SMSG='      Display Incomplete',TBL=3,                 +
               LMSG='Attention Interrupt processed--display is incomple+
               te.'
         DS@MSG SMSG=' Allocation or I/O Error',TBL=3,                 +
               LMSG='I/O Error or Allocation Error--command fails.'
         DS@MSG SMSG=,TBL=3
         DS@MSG SMSG=' Vol. Serial Not Allowed',TBL=3,                 +
               LMSG='User "OTHER DATA SET NAME" field when specifying V+
               olume Serial.'
         DS@MSG SMSG=,TBL=3
         DS@MSG SMSG=,TBL=3
         DS@MSG SMSG=,TBL=3
         DS@MSG SMSG=,TBL=3,
         DS@MSG SMSG='       Allocation Failed',TBL=3,                 +
               LMSG='&&DS@ERRFD'
         DS@MSG SMSG='         Invalid Command',TBL=3,                 +
               LMSG='The command entered is invalid.'
         DS@MSG SMSG='         &&FINDPARM Found',ALARM=NO,TBL=3,       +
               LMSG='USERID &&FINDPARM found.'
         DS@MSG SMSG='       No USERID Entered',HELP=DST@ENB2,TBL=3,   +
               LMSG='RFIND requires USERID entered on a previous Find c+
               ommand.'
         DS@MSG SMSG='          Member Deleted',TBL=3,                 +
               LMSG='Member &&TBMEM was already deleted.'
         DS@MSG SMSG='&&ZERRSM',TBL=3,                                 +
               LMSG='&&ZERRLM'
         DS@MSG SMSG='   No Members in Dataset',TBL=3,                 +
               LMSG='The specified PDS is empty--no members.'
         DS@MSG SMSG=,TBL=3
         DS@MSG SMSG=,TBL=3
         DS@MSG SMSG=,TBL=3
         DS@MSG SMSG=,TBL=3
         DS@MSG SMSG='           Scan Complete',TBL=3,                 +
               LMSG='&&MPR members selected, using &&CPUTM CPU seconds,+
                &&ELAPTM elapsed time.'
         DS@MSG SMSG='                 NOT NOW',TBL=3,                 +
               LMSG='HAR...HAR...HAR...'
         DS@MSG SMSG='      Locate Not Allowed',TBL=3,                 +
               LMSG='Re-sort Member List by NAME (default).'
         DS@MSG SMSG='        String Not Found',TBL=3,                 +
               LMSG='Character string was not found in any members disp+
               layed.'
         DS@MSG SMSG='  &&MPR Members to Scan',TBL=3,ALARM=NO,         +
               LMSG='&&MPR members to scan--Enter scan information.'
         DS@MSG SMSG='      Level is &&DS@LVL',TBL=3,ALARM=NO,         +
               LMSG='&&DS@LVL Member Lists are stacked.'
         DS@MSG SMSG='    Invalid Member Name',TBL=3,ALARM=YES,        +
               LMSG='Generic member name is not allowed for this comman+
               d.'
         DS@MSG SMSG=' No Operands on Command',TBL=3,ALARM=YES,        +
               LMSG='No operands are allowed on this command.'
         SPACE 2
EDMSGTBL DS@MSG@ TBL=3
         SPACE 2
         END
