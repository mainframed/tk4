DS@CMPRS TITLE 'COMPRESS/RELEASE A DATASET'
         LCLC  &SPFQNM
&SPFQNM  SETC  'SPFEDIT'
         SPACE
***********************************************************************
*                                                                     *
* MODULE: DS@CMPRS                                                    *
*                                                                     *
* PURPOSE: COMPRESS/RELEASE A DATA SET.  IF THE INPUT DATASET IS A    *
*          PDS, THEN IT IS COMPRESSED.  IF RELEASE IS SPECIFIED IN    *
*          THE PARAMETER BLOCK, THE DATASET (PDS OR PS) IS RELEASED.  *
*          THE INPUT DATASET MUST HAVE DSORG OF PS OR PO.             *
*                                                                     *
* INPUT PARAMETERS                                                    *
*                                                                     *
*  R1 --> COMPRESS PARAMETER BLOCK (DS@CPRPB)                         *
*                                                                     *
* REGISTER USAGE                                                      *
*                                                                     *
*  R0-R10  WORK REGS                                                  *
*  R11     BASE REGISTER                                              *
*  R12     BASE FOR PARM BLOCK                                        *
*  R13-R15 STANDARD USAGE                                             *
*                                                                     *
* ROUTINES CALLED:                                                    *
*  DS@ALLOC                                                           *
*  DS@DEALC                                                           *
*                                                                     *
* RETURN CODE                                                         *
*  R15 =  0 - SUCCESSFUL                                              *
*        ^0 - UNSUCCESSFUL. R15 -> FIELD CONTAINING A MESSAGE         *
*             DESCRIBING THE ERROR.  THE FIRST BYTE OF THIS FIELD     *
*             CONTAINS THE LENGTH OF THE MESSAGE.                     *
*                                                                     *
* AUTHOR:   PHIL HEROLD, SYSTEMS DEVELOPER                            *
*           SAS INSTITUTE                                             *
*           CARY, NC                                                  *
*                                                                     *
* NOTE:  SAS INSTITUTE IS NOT RESPONSIBLE FOR THE SUPPORT OF THIS     *
*        PROGRAM--PLEASE DO NOT CALL SAS INSTITUTE TECHNICAL SUPPORT. *
*        HOWEVER, THE AUTHOR WILL BE GLAD TO PROVIDE ANY ASSISTANCE   *
*        NEEDED.                                                      *
*                                                                     *
*                                                                     *
* ACKNOWLEDGEMENT:  THIS PROGRAM WAS ORIGINALLY DEVELOPED AT FIRST    *
*                   COMPUTER SERVICES, CHARLOTTE, NORTH CAROLINA, AND *
*                   WAS MODIFIED FOR USE IN THE ENVIRONMENT IN WHICH  *
*                   IT NOW RUNS.  THE AUTHOR WOULD LIKE TO ESPECIALLY *
*                   THANK DAVE LASALLE FOR HIS SUPPORT AND ENCOURAGE- *
*                   MENT.                                             *
*                                                                     *
***********************************************************************
         COPY  DS@MACS
         TITLE 'DSECTS'
**********************************************************************
*                           D S E C T S                              *
**********************************************************************
         SPACE
         DS@CPRPB DSECT=YES           INPUT PARAMETER BLOCK
         SPACE
         PRINT NOGEN
TCBDSECT IKJTCB
         DCBD
         IEFZB4D0
         IEFZB4D2
TIOT     DSECT
         IEFTIOT1
         TITLE 'DSA DEFINITION'
**********************************************************************
*                D S A     D E F I N I T I O N                       *
**********************************************************************
         SPACE
CMPRSDSA DSECT                        DSA DEFINITION
SAVEAREA DC    18F'0'                 SAVE AREA FOR REGISTERS
         SPACE
SVC99RB  DS    0F                     SVC 99 REQUEST BLOCK
         DC    X'80',AL3(REQBLK)
REQBLK   DS    0D
RBLN     DC    AL1(20)
RBVERB   DC    AL1(1)
RBFLAG1  DC    AL2(0)
RBERROR  DS    XL2
RBINFO   DS    XL2
RBTXTPP  DS    A
RBRSVD   DC    F'0'
RBFLAG2  DC    F'0'
         SPACE
TUPTRS   DC    8F'0'                  POINTERS TO TEXT UNITS
         SPACE
ATURTDDN DC    Y(DALRTDDN),AL2(1),AL2(8),CL8' '  RETURN DDNAME
ATUDUMMY DC    Y(DALDUMMY),AL2(0)     DD DUMMY
ATUCLOSE DC    Y(DALCLOSE),AL2(0)     UNALLOCATE AT CLOSE
ATUTERM  DC    Y(DALTERM),AL2(0)      ALLOCATE TO TERMINAL
ATUDDNAM DC    Y(DALDDNAM),AL2(1),AL2(8),CL8' '  DDNAME ALLOCATION
UTUDDNAM DC    Y(DUNDDNAM),AL2(1),AL2(8),CL8' '  DDNAME UNALLOCATION
UTUNALC  DC    Y(DUNUNALC),AL2(0)     FORCE UNALLOCATION
         SPACE
         DS    0F                     THIS ALIGNS UTDDNSTA ON A
         DC    C' '                     HALFWORD (BUT NOT A FULLWORD)
UTDDNLST DC    Y(0)                     BOUNDARY AS REQUIRED BY IEBCOPY
UTDDNSTA DC   4XL8'00'
UTDDNIN  DC    CL8' '
UTDDNPRT DC    CL8' '
         DC    XL8'00'
UTDDNUT1 DC    CL8' '
UTDDNUT2 DC    CL8' '
         SPACE
FLAG1    DC    X'00'                  PROGRAM FLAGS/INDICATORS
COMPRSV  EQU   B'10000000'              RESERVE ISSUED
TASKCOPY EQU   B'01000000'              SPF COPY SUBTASK ATTACHED
RLSEONLY EQU   B'00100000'              DUMMY OUTPUT
         SPACE
UCBADDR  DC    A(0)
ECBCOPY  DC    F'0'
TCBCOPY  DC    A(0)
ADDRTIOT DS    A
CMPRDIAG DC    X'0000'
CMPRET   DS    F
         SPACE
CALLPL   CALL  ,(,),MF=L              CALL PARAMETER LIST
OPENPL   OPEN  (0),MF=L               OPEN PARM LIST
RSRVEPL  RESERVE (,),UCB=0,MF=L       RESERVE PARM LIST
DEQPL    DEQ   (,),MF=L               DEQUEUE PARM LIST
ATTCHPL  ATTACH ,SF=L                 ATTACH PARM LIST
EXTRAPL  EXTRACT ,MF=L                EXTRACT PARM LIST
COPYPL   DC    2F'0'                  COPY PARM LIST
         SPACE
         PRINT GEN
RLSEJFCB DS    0H
         IEFJFCBN LIST=YES            JFCB FOR RELEASE
RLSEDCB  DCB   DSORG=PS,MACRF=(W),DDNAME=XXXXXXXX
         SPACE
         DS    0F
EXLST    DC    F'0'                   EXIT LIST FOR RDJFCB
         SPACE
ALCDSA   DC    65F'0'                 DSA FOR ALLOCATE PROGRAM
         SPACE
         PRINT GEN
         DS@ALCPB DSECT=NO            PARAMETER BLOCK FOR DS@ALLOC
         SPACE
LNGDSA   EQU   *-CMPRSDSA
         TITLE 'MAINLINE CODE'
**********************************************************************
*                        D S @ C M P R S                             *
**********************************************************************
         SPACE
DS@CMPRS CSECT
         USING *,R15
         DS@START ,
         LR    R11,R15                LOAD FIRST BASE REGISTER
         DROP  R15                    DROP TEMPORARY BASE
         USING DS@CMPRS,R11
         L     R12,0(R1)              ADDRESS PARM BLOCK
         USING DS@CPRPB,R12
         LA    R1,LNGDSA              GET DSA LENGTH
         LR    R5,R1                  COPY FOR LATER
         GETMAIN RC,LV=(R1)           GO GET SOME STORAGE
         LR    R4,R1                  COPY ADDRESS RETURNED
         SLR   R3,R3                  CLEAR THIS REGISTER
         MVCL  R4,R2                  THIS SHOULD ZERO IT OUT
         ST    R13,4(0,R1)            SET BACKWARD CHAIN
         ST    R1,8(0,R13)            SET FORWARD CHAIN
         LR    R13,R1                 GET DSA BASE
         USING CMPRSDSA,R13
         MVC   SAVEAREA(4),=CL4'CMPR'
         EJECT
**********************************************************************
*                  I N I T    D S A    F I E L D S                   *
**********************************************************************
         SPACE
INITDSA  DS    0H
         MVC   UTDDNLST(UTDDNLNG),UTDDNLSM SET UP PARM BLOCK
         MVC   REQBLK(REQBLKL),REQBLKM    SET UP REQUEST BLOCK
         MVC   ATURTDDN(TXTUNITL),TXTUNITS INIT TEXT UNITS
         MVC   ALCPBDSN,CPRDSNAM      MOVE IN DATA SET NAME
         XC    FLAG1,FLAG1            CLEAR FLAG1
         LA    R1,ALCDSA              ADDRESS DSA FOR ALLOCATE PGM
         ST    R1,ALCPBDS@            SAVE IN PARM BLOCK
         SPACE
**********************************************************************
*              A L L O C A T E      S Y S U T 1                      *
**********************************************************************
         SPACE
         MVC   ALCPBMEM,BLANKS        BLANK MEMBER NAME
         MVC   ALCPBDDN,BLANKS        SET FOR RETURNED OF DDNAME
         MVC   ALCPBVOL,BLANKS        SET FOR RETURNED OF VOLSER
         LA    R2,DS@ALCPB            ADDRESS PARAMETER BLOCK
         CALL  DS@ALLOC,((R2)),VL,MF=(E,CALLPL) DO THE ALLOC
         ST    R15,CMPRET
         LTR   R15,R15                IF BAD RC, THEN
         BNZ   CMPRRT                   DONE
         MVC   UTDDNUT1,ALCPBDDN      ELSE MOVE IN DDNAME RETURNED
         CLC   ALCPBRDS,=X'0200'      IF DSORG NOT PO, THEN
         BE    PODSORG
         CLC   ALCPBRDS,=X'4000'      IF DSORG NOT PS, THEN
         BE    PSDSORG
         LA    R15,LMSG03               ADDRESS MESSAGE
         ST    R15,CMPRET               SAVE RETURN CODE
         B     CMPRDONE                 DONE
PSDSORG  DS    0H                     ELSE
         OI    FLAG1,RLSEONLY           CAN ONLY BE RELEASE
         CLI   CPRRLSE,C'Y'             IF NO RELEASE, THEN
         BNE   CMPRRT                     DONE
         B     EXTUCB
         SPACE
**********************************************************************
*              A L L O C A T E      S Y S U T 2                      *
**********************************************************************
         SPACE
PODSORG  DS    0H
         MVC   ALCPBDDN,BLANKS        SET FOR RETURNED OF DDNAME
         MVC   ALCPBVOL,BLANKS        SET FOR RETURNED OF VOLSER
         LA    R2,DS@ALCPB            ADDRESS PARAMETER BLOCK
         CALL  DS@ALLOC,((R2)),VL,MF=(E,CALLPL) DO THE ALLOC
         ST    R15,CMPRET
         LTR   R15,R15                IF BAD RC, THEN
         BNZ   CMPRRT                   DONE
         MVC   UTDDNUT2,ALCPBDDN      ELSE MOVE IN DDNAME RETURNED
         SPACE
**********************************************************************
*              A L L O C A T E      S Y S P R I N T                  *
**********************************************************************
         SPACE
         MVC   ATURTDDN+6(8),BLANKS   SET IT FOR SYSPRINT ALC
         LA    R1,REQBLK              ADDRESS REQUEST BLOCK
         ST    R1,SVC99RB             SAVE POINTER TO RB
         MVI   SVC99RB,X'80'          TURN VL BIT ON
         LA    R2,TUPTRS              ADDRESS TEXT UNITS
         ST    R2,RBTXTPP             SAVE IN REQUEST BLOCK
         LA    R1,ATURTDDN            ADDRESS TEXT UNIT
         ST    R1,0(R2)               SAVE POINTER TO IT
         LA    R2,4(,R2)              NEXT POINTER
         LA    R1,ATUCLOSE            ADDRESS TEXT UNIT
         ST    R1,0(R2)               SAVE POINTER TO IT
         LA    R2,4(,R2)              NEXT POINTER
         LA    R1,ATUTERM             ADDRESS THIS TEXT UNIT
         CLI   CPRMSGS,C'Y'           IF DUMMY OUTPUT REQ'D
         BE    NODUMMY
         LA    R1,ATUDUMMY              USE THIS TEXT UNIT
NODUMMY  DS    0H
         ST    R1,0(R2)               SAVE POINTER TO IT
         LR    R4,R2                  SAVE THIS FOR LATER
         MVI   0(R2),X'80'            SET VL BIT IN POINTER LIST
         MVI   RBVERB,S99VRBAL        ALLOCATE BY DDNAME
         LA    R1,SVC99RB
         SVC   99
         MVC   UTDDNPRT,ATURTDDN+6    SAVE GENERATED DDN.
         LTR   R15,R15                IF OK,
         BZ    ALCSYSIN                 GO ALLOC. SYSIN
         SPACE
ALCOUTER DS    0H                     ELSE
         LA    R2,REQBLK                ADDRESS REQUEST BLOCK
         CALL  DS@99MSG,((R2)),VL,MF=(E,CALLPL)  GET MESSAGE FOR ERROR
         ST    R15,CMPRET
         B     CMPRRT                   AND RETURN
         SPACE
**********************************************************************
*              A L L O C A T E      S Y S I N                        *
**********************************************************************
         SPACE
ALCSYSIN DS    0H
         MVC   ATURTDDN+6(8),BLANKS
         LA    R1,ATUDUMMY            ALLOCATE TO DUMMY
         ST    R1,0(R2)               SAVE TEXT UNIT POINTER
         MVI   0(R2),X'80'            SET VL INDICATOR
         MVI   RBVERB,S99VRBAL         INDICATE ALLOCATION
         LA    R1,SVC99RB
         SVC   99
         MVC   UTDDNIN,ATURTDDN+6
         LTR   R15,R15
         BZ    EXTUCB
         SPACE
         LA    R2,REQBLK              ADDRESS REQUEST BLOCK
         CALL  DS@99MSG,((R2)),VL,MF=(E,CALLPL)  GET MESSAGE FOR ERROR
         ST    R15,CMPRET
         B     CMPRRT                     AND RETURN
         EJECT
**********************************************************************
*                 E N Q U E U E / R E S E R V E                      *
**********************************************************************
         SPACE
EXTUCB   DS    0H
         MVC   EXTRAPL(EXTRAML),EXTRAM
         LA    R2,ADDRTIOT
         EXTRACT (R2),FIELDS=TIOT,MF=(E,EXTRAPL)
         L     R5,ADDRTIOT            POINT TO
         LA    R5,TIOENTRY-TIOT(R5)   FIRST DDNAME
         USING TIOENTRY,R5
         SR    R15,R15                GET LENGTH OF
         IC    R15,TIOELNGH               THIS ENTRY
CHKDDN   DS    0H
         CLC   TIOEDDNM,UTDDNUT1      IF DDNAMES MATCH, THEN
         BE    FNDUCB                   DONE
         LA    R5,0(R5,R15)           ELSE GET NEXT ENTRY
         CLC   0(4,R5),=F'0'            IF NOT END OF LIST
         BNE   CHKDDN                     KEEP LOOKING
         MVC   CMPRET,=A(LMSG01)        ELSE
         B     CMPRRT                     DDNAME NOT FOUND!!!!
         SPACE
FNDUCB   DS    0H
         MVC   UCBADDR+1(3),TIOEFSRT  ISSUE THE ENQUEUE
         LA    R2,ALCPBDSN            ADDRESS DSNAME
         LA    R3,UCBADDR
         MVC   RSRVEPL(RSRVEML),RSRVEM MOVE IN PARM LIST MASK
         RESERVE (QNAME2,(R2),E,44,SYSTEMS),,UCB=(R3),MF=(E,RSRVEPL)
         LTR   R15,R15                IF ENQUEUE OK, THEN
         BZ    SETRSV                   CONTINUE
         MVC   CMPRET,=A(LMSG04)      ELSE SET MESSAGE
         B     CMPRRT                   AND RETURN
         SPACE
SETRSV   OI    FLAG1,COMPRSV
         EJECT
**********************************************************************
*                  A T T A C H    S P F C O P Y                      *
**********************************************************************
         SPACE
         TM    FLAG1,RLSEONLY         IF RELEASE ONLY (PS DATASET),
         BO    RLSEIT                   SKIP COMPRESS
         MVI   ECBCOPY,X'00'
         LA    R2,COPYPARM
         ST    R2,COPYPL              SAVE IN COPY PARM LIST
         LA    R2,UTDDNLST
         ST    R2,COPYPL+4            SAVE IN COPY PARM LIST
         MVI   COPYPL+4,X'80'         SET VL INDICATOR
         LA    R3,ECBCOPY
         MVC   ATTCHPL(ATTCHML),ATTCHM MOVE IN PARM LIST MASK
         ATTACH EP=SPFCOPY,ECB=(R3),SF=(E,ATTCHPL),MF=(E,COPYPL)
         ST    R1,TCBCOPY
         OI    FLAG1,TASKCOPY
         LA    R2,ECBCOPY
         WAIT  ECB=(R2)
         LA    R2,TCBCOPY
         DETACH (R2)
         NI    FLAG1,255-TASKCOPY
         SPACE
**********************************************************************
*                       R E L E A S E                                *
**********************************************************************
         SPACE
RLSEIT   DS    0H
         CLI   CPRRLSE,C'Y'           IF RELEASE, THEN
         BNE   DEQUEUE
         MVC   RLSEDCB(RLSEDCBL),RLSEDCBM MOVE IN DCB MASK
         LA    R9,RLSEDCB               ADDRESS DCB
         USING IHADCB,R9
         MVC   DCBDDNAM,UTDDNUT1        MOVE IN DDNAME
         LA    R1,EXLST                 ADDRESS EXIT LIST IN DSA
         ST    R1,DCBEXLST              SAVE IN DCB
         DROP  R9
         LA    R1,RLSEJFCB              ADDRESS JFCB IN DSA
         ST    R1,EXLST                 SAVE IN EXIT LIST
         MVI   EXLST,X'87'              INDICATE JFCB PLUS LAST ONE
         ST    R9,OPENPL                SAVE DCB ADDRESS IN PARM LIST
         MVI   OPENPL,X'8F'
         RDJFCB MF=(E,OPENPL)
         OI    JFCBIND2,B'10000000'     INDICATE DISP=MOD
         NI    JFCBIND2,B'10111111'
         OI    JFCBIND1,B'11000000'     INDICATE RELEASE
         OI    JFCBTSDM,B'00001000'     SAY NOWRITE JFCB
         OPEN  MF=(E,OPENPL),TYPE=J     OPEN THE DS
         CLOSE MF=(E,OPENPL)            AND CLOSE TO DO THE RELEASE
**********************************************************************
*                       D E Q U E U E                                *
**********************************************************************
         SPACE
DEQUEUE  DS    0H
         LA    R2,ALCPBDSN            ADDRESS DSNAME
         LA    R3,UCBADDR
         MVC   DEQPL(DEQML),DEQM      MOVE IN PARM LIST MASK
         DEQ   (,(R2),44,),UCB=(R3),MF=(E,DEQPL) DEQUEUE THE RESOURCE
         NI    FLAG1,255-COMPRSV
         SPACE
**********************************************************************
*                R E T U R N    T O   C A L L E R                    *
**********************************************************************
         SPACE
CMPRRT   DS    0H
         TM    FLAG1,RLSEONLY         IF RELEASE ONLY, THEN
         BO    CMPRDONE                 WE ARE DONE
         MVC   ALCPBDDN,UTDDNUT2      MOVE DDNAME TO PARM BLOCK
         LA    R2,DS@ALCPB            ADDRESS PARMBLOCK
         CALL  DS@DEALC,((R2)),VL,MF=(E,CALLPL) DEALLOCATE THIS ONE
         SPACE
         MVC   UTUDDNAM+6(8),UTDDNPRT MOVE IN DDNAME FOR SYSPRINT
         LA    R2,TUPTRS              ADDRESS TEXT UNIT POINTERS
         LA    R1,UTUDDNAM            ADDRESS TEXT UNIT
         ST    R1,0(R2)               SAVE POINTER
         LA    R2,4(,R2)              TEXT PLACE FOR POINTER
         LA    R1,UTUNALC             ADDRESS TEXT UNIT
         ST    R1,0(R2)               SAVE POINTER
         MVI   0(R2),X'80'            SET VL INDICATOR
         MVI   RBVERB,S99VRBUN        SET VERB TO UNALLOCATE
         LA    R1,SVC99RB             SAY GOODBYE
         SVC   99                          TO SYSPRINT
         SPACE
         MVC   UTUDDNAM+6(8),UTDDNIN  MOVE IN DDNAME FOR SYSIN
         LA    R1,SVC99RB             SAY GOODBYE
         SVC   99                          TO 'SYSIN'
         SPACE
CMPRDONE DS    0H
         MVC   ALCPBDDN,UTDDNUT1      MOVE DDNAME TO PARM BLOCK
         LA    R2,DS@ALCPB            ADDRESS PARMBLOCK
         CALL  DS@DEALC,((R2)),VL,MF=(E,CALLPL) DEALLOCATE THIS ONE
         LR    R2,R13                 COPY R13
         LA    R1,LNGDSA              GET LENGTH OF STORAGE GOTTEN
         L     R3,4(0,R13)            COPY PREVIOUS REGISTER 13
         L     R4,CMPRET              GET RETURN CODE
         FREEMAIN RC,LV=(R1),A=(R2)   DO THE FREEMAIN
         LR    R13,R3                 RESTORE REG 13 CONTENTS
         LR    R15,R4                 RESTORE RETURN CODE
         RETURN (14,12),T,RC=(15)     DONE
         TITLE 'STATIC DEFINITIONS'
**********************************************************************
*                S T A T I C     D E F I N I T I O N S               *
**********************************************************************
         SPACE
BLANKS   DC    CL8' '                   FOR BLANKING FIELDS
QNAME1   DC    CL8'SYSDSN'
QNAME2   DC    CL8'&SPFQNM'
         SPACE
LMSG01   DC    AL1(L'MSG01)
MSG01    DC    C'UNABLE TO RESERVE THE VOLUME NEEDED BY COMPRESS.'
LMSG02   DC    AL1(L'MSG02)
MSG02    DC    C'COMPRESS HAS ABENDED. JOB INPUT DATASET MAY BE DAMAGEDX
               !'
LMSG03   DC    AL1(L'MSG03)
MSG03    DC    C'INVALID DSORG FOR COMPRESS/RELEASE.'
LMSG04   DC    AL1(L'MSG04)
MSG04    DC    C'DATASET IN USE. COMPRESS WAS NOT DONE!'
         SPACE
EXTRAM   EXTRACT ,MF=L
EXTRAML  EQU   *-EXTRAM               LENGTH OF ABOVE
         SPACE
RSRVEM   RESERVE (QNAME2,,E,,SYSTEMS),RET=USE,UCB=0,MF=L
RSRVEML  EQU   *-RSRVEM               LENGTH OF ABOVE
         SPACE
ATTCHM   ATTACH EP=SPFCOPY,,,,,SF=L
ATTCHML  EQU   *-ATTCHM               LENGTH OF ABOVE
         SPACE
DEQM     DEQ   (QNAME2,,,SYSTEMS),,RET=HAVE,MF=L
DEQML    EQU   *-DEQM                 LENGTH OF ABOVE
         SPACE
RLSEDCBM DCB   DSORG=PS,MACRF=(W),DDNAME=XXXXXXXX
RLSEDCBL EQU   *-RLSEDCBM
         SPACE
         DS    0F
         DC    C' '                   ALIGN COPYPARM TO HALFWORD
COPYPARM DC    Y(L'SIZE)                BOUNDARY
SIZE     DC    C'SIZE=512K'
         DS   0F
UTDDNLSM DC    Y(UTDDNLNG),4XL8'0',CL8' ',CL8' ',XL8'0',CL8' ',CL8' '
UTDDNLNG EQU   *-(UTDDNLSM+2)
         SPACE
REQBLKM  DS    0D
         DC    AL1(20),AL1(1),AL1(S99NOCNV,0)
         DC    XL2'0',XL2'0',A(0),F'0',F'0'
REQBLKL  EQU   *-REQBLKM              LENGTH OF REQUEST BLOCK
         SPACE
TXTUNITS DC    Y(DALRTDDN),AL2(1),AL2(8),CL8' '  RETURN DDNAME
         DC    Y(DALDUMMY),AL2(0)     DD DUMMY
         DC    Y(DALCLOSE),AL2(0)     UNALLOCATE AT CLOSE
         DC    Y(DALTERM),AL2(0)      ALLOCATE TO TERMINAL
         DC    Y(DALDDNAM),AL2(1),AL2(8),CL8' '  DDNAME ALLOCATION
         DC    Y(DUNDDNAM),AL2(1),AL2(8),CL8' '  DDNAME UNALLOCATION
         DC    Y(DUNUNALC),AL2(0)     FORCE UNALLOCATION
TXTUNITL EQU   *-TXTUNITS             LENGTH OF ALL TEXT UNITS
         LTORG
         END   DS@CMPRS
