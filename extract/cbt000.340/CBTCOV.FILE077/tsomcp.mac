         MACRO
&NAM     TSOMCP &OPTIONS=,&TRACE=0,&LNUNITS=,&UNITSIZ=60,              X
               &DTRACE=0,&OLTEST=0
.*
.*      OS 218   PTF
.*0000685000                                                   @SA76623
.*0000374560-374600                                            @SA75977
.*0000290000                                                   @SA73586
.*
.*       RELEASE 21.8, 09/20/73, CHANGE LEVEL=02                SA59163
.*D671030,671100                                                SA59196
.*A407700-407720                                                SA65439
.*C410000-411000                                                SA65439
.*C684000,685000                                                SA70240
.*A685500-685800                                                SA70240
.* C866000,869000                                              @YA14062
.* C338800                                                     @OZ16602
*C520000-521000                                                @OS78355
.*
.*
.*FUNCTION -- THIS MACRO USES THE VALUES PLACED IN GLOBAL VARIABLES
.*   BY PREVIOUS LINEGRP AND LIST MACROS AND THE VALUES SPECIFIED
.*   IN ITS OWN MACRO PARAMETERS TO GENERATE THE TCAM SOURCE
.*   STATEMENTS WHICH CONSTITUTE A MESSAGE CONTROL PROGRAM.
.*
.*ENTRY POINTS -- NOT APPLICABLE
.*
.*INPUT -- VALUES PLACED IN GLOBAL VARIABLES BY PREVIOUS MACRO CALLS
.*   AND MACRO CALL PARAMETER VALUES SPECIFIED BY THE USER.
.*
.*OUTPUT -- TCAM MACRO STATEMENTS.  MNOTES IF ERRORS ARE DETECTED.
.*
.*EXTERNAL REFERENCES -- NOT APPLICABLE
.*
.*EXITS, NORMAL -- NORMAL EXIT OCCURS AFTER A COMPLETE SOURCE MESSAGE
.*   CONTROL PROGRAM HAS BEEN GENERATED.
.*
.*EXITS, ERROR -- IF PREVIOUS MACROS ENCOUNTERED SERIOUS
.*   ERRORS (QUITSW = 1) A MNOTE WITH SEVERITY 16 IS ISSUED
.*   AND GENERATION IS BYPASSED.
.*
.*TABLES/WORK AREAS -- SEE DESCRIPTIONS ACCOMPANYING VARIABLE
.*   DECLARATIONS.
.*
.*ATTRIBUTES -- NOT APPLICABLE
.*
.*CHARACTER CODE DEPENDENCY -- NONE
.*
.*NOTES -- ERRORS IN PARAMETER VALUES RESULT IN SEVERITY 4 MNOTES, BUT
.*   DEFAULT VALUES ARE USED AND GENERATION CONTINUES.
.*
.*   CHANGE DATE  12/17/75                                     @SA76623
.*
.*       GLOBAL VARIABLES
.*
         GBLA  &NLG                NUMBER OF LINEGRP MACROS ISSUED
         GBLB  &MCPSW              INDICATES TSOMCP MACRO ISSUED
         GBLB  &QUITSW             ON MEANS SERIOUS ERROR OCCURRED
         GBLB  &BISYNC             BISYNCHRONOUS LINE
         GBLA  &ADRPT              ADCHAR ARRAY POINTER
         GBLA  &SCRPT              USED AS POINTER TO ARRAYS WITH
.*                                 ONE ENTRY PER LINE
         GBLA  &LNO(63)            NUMBER OF LINES PER GROUP
.*                                 (ONE ENTRY PER LINEGRP)
         GBLA  &UNO(63)            NO. OF UNITS PER BUFFER
.*                                 (ONE ENTRY PER LINEGRP)
         GBLA  &INT(63)            POLLING INTERVAL
.*                                 (ONE ENTRY PER LINEGRP)
         GBLB  &DIALSW(63)         NETWORK TYPE INDICATORS
.*                                 (ONE ENTRY PER LINEGRP)
         GBLC  &T(63)              TERMINAL TYPE
.*                                 (ONE ENTRY PER LINEGRP)
         GBLC  &DDNME(63)          DDNAMES OF LINE GROUPS
.*                                 (ONE ENTRY PER LINEGRP)
         GBLB  &FETAB(189)         FEATURES PRESENT INDICATORS
.*                                 (THREE ENTRIES PER LINEGRP)
         GBLC  &TTAB(252)          TRANSLATION TABLES
.*                                 (FOUR ENTRIES PER LINEGRP)
         GBLC  &CTAB(252)          CODE SELECTION CHAR SEQUENCES
.*                                 (FOUR ENTRIES PER LINEGRP)
         GBLA  &SCRH(2500)         SCREEN HEIGHT
.*                                 (ONE ENTRY PER LINE)
         GBLA  &SCRW(2500)         SCREEN WIDTH
.*                                 (ONE ENTRY PER LINE)
         GBLA  &TRMNO(2500)        NO. OF TERMINALS PER LINE
.*                                 (ONE ENTRY PER LINE)
         GBLC  &ADCHAR(2500)       ADDRESSING CHARACTERS
.*                                 (ONE ENTRY PER TERMINAL)
         GBLC  &PC(63)             PCI SPECIFICATIONS           SA59163
.*                                 (ONE ENTRY PER LINE GROUP)   SA59163
.*
.*       LOCAL VARIABLES
.*
         LCLA  &OLTST              NO. OF ON-LINE TEST PROCEDURES
         LCLC  &CRSREF             INDICATES CROSSRF OPTION DESIRED
         LCLB  &PROMPT             ON MEANS PROMPT USER FOR TCAM PARMS
         LCLA  &TRCNO              NO. OF TRACE TABLE ENTRIES WANTED
         LCLA  &DTRCNO             NO. OF DISPATCHER TRACE TBL ENTRIES
         LCLA  &LNUNNO             NO. OF BASIC UNITS IN BUFFER POOL
         LCLA  &UNSIZ              SIZE OF TCAM BASIC UNIT
         LCLB  &CPIDSW             ON MEANS CPU.ID. CONSTANT NEEDED
         LCLA  &I                  WORK VARIABLE
         LCLA  &J                  WORK VARIABLE
         LCLA  &K                  WORK VARIABLE
         LCLA  &L                  WORK VARIABLE
         LCLA  &M                  WORK VARIABLE
         LCLA  &N                  WORK VARIABLE
         LCLA  &MM                 WORK VARIABLE
         LCLA  &P                  WORK VARIABLE                SA65439
         LCLA  &Q                  WORK VARIABLE
         LCLC  &X                  WORK VARIABLE
         LCLC  &Y                  WORK VARIABLE
         LCLA  &Z                  WORK VARIABLE
         LCLC  &EOT                CONTAINS EOT CHARACTER
         LCLC  &TBL(32)            3270 POLLING/ADDRESSING CHARACTERS
.*                                 LOOKUP TABLE. THE TABLE HAS 32
.*                                 ENTRIES. EACH ENTRY HAS 4 ELEMENTS.
.*                                 EACH ELEMENT HAS TWO CHARACTERS.
.*                                 1. POLLING CHARACTERS (EBCDIC)
.*                                 2. CORRESSPONDING ADDRESSING CHARS.
.*                                 3. POLLING CHARACTERS (ASCII)
.*                                 4. CORRESPONDING ADDRESSING CHARS.
         LCLC  &QBYP               CONTAINS QBY PARAMETER
         LCLC  &L2741(4)           2741 TRANSLATE TABLE ARRAY
         LCLC  &L1050(4)           1050 TRANSLATE TABLE ARRAY
         LCLA  &N2741              2741 TRANSLATE TABLE ARRAY COUNTER
         LCLA  &N1050              1050 TRANSLATE TABLE ARRAY COUNTER
         LCLC  &FEAT(3)            CONTAINS FEATURE DESCRIPTORS
         LCLC  &TNAME              TEMP HOLD AREA FOR CHAR EXPRESSION
         LCLA  &TN                 COUNTER OF TERMINAL/LINE MACRO NAMES
         LCLA  &IN                 COUNTER FOR INVLIST MACRO NAMES
         LCLC  &CM(3)              SUBLIST SEPARATORS, COMMAS OR NULLS
         LCLC  &CS(36)             WILL CONTAIN ALPHAMERIC CHAR SET
.*                                 (26 ALPHABETIC, 10 NUMERIC)
         LCLC  &CP(3)              CONTINUATION POSITIONERS -- THESE
.*                                 ARE SET TO EITHER '' OR '     '.
.*                                 THEIR FUNCTION IS TO TAKE UP THE
.*                                 RIGHT AMOUNT OF SPACE IN THE PUNCHED
.*                                 SOURCE STATEMENTS SUCH THAT THERE
.*                                 WILL BE A CONTINUATION CHAR IN
.*                                 COLUMN 72.
.*
         ACTR  (&NLG+1)*4096       ADJUST ACTR
.*
.*       INITIALIZE ALPHAMERIC CHARACTER SET ARRAY
.*
&CS(1)   SETC  'A'
&CS(2)   SETC  'B'
&CS(3)   SETC  'C'
&CS(4)   SETC  'D'
&CS(5)   SETC  'E'
&CS(6)   SETC  'F'
&CS(7)   SETC  'G'
&CS(8)   SETC  'H'
&CS(9)   SETC  'I'
&CS(10)  SETC  'J'
&CS(11)  SETC  'K'
&CS(12)  SETC  'L'
&CS(13)  SETC  'M'
&CS(14)  SETC  'N'
&CS(15)  SETC  'O'
&CS(16)  SETC  'P'
&CS(17)  SETC  'Q'
&CS(18)  SETC  'R'
&CS(19)  SETC  'S'
&CS(20)  SETC  'T'
&CS(21)  SETC  'U'
&CS(22)  SETC  'V'
&CS(23)  SETC  'W'
&CS(24)  SETC  'X'
&CS(25)  SETC  'Y'
&CS(26)  SETC  'Z'
&CS(27)  SETC  '0'
&CS(28)  SETC  '1'
&CS(29)  SETC  '2'
&CS(30)  SETC  '3'
&CS(31)  SETC  '4'
&CS(32)  SETC  '5'
&CS(33)  SETC  '6'
&CS(34)  SETC  '7'
&CS(35)  SETC  '8'
&CS(36)  SETC  '9'
.*
.*       INITIALIZE 3270 POLLING/ADDRESSING CHARACTER LOOK-UP TABLE
.*
&TBL(1)  SETC  '4060202D'
&TBL(2)  SETC  'C161412F'
&TBL(3)  SETC  'C2E24253'
&TBL(4)  SETC  'C3E34354'
&TBL(5)  SETC  'C4E44455'
&TBL(6)  SETC  'C5E54556'
&TBL(7)  SETC  'C6E64657'
&TBL(8)  SETC  'C7E74758'
&TBL(9)  SETC  'C8E84859'
&TBL(10) SETC  'C9E9495A'
&TBL(11) SETC  '4A6A5B5C'
&TBL(12) SETC  '4B6B2E2C'
&TBL(13) SETC  '4C6C3C25'
&TBL(14) SETC  '4D6D285F'
&TBL(15) SETC  '4E6E2B3E'
&TBL(16) SETC  '4F6F213F'
&TBL(17) SETC  '50F02630'
&TBL(18) SETC  'D1F14A31'
&TBL(19) SETC  'D2F24B32'
&TBL(20) SETC  'D3F34C33'
&TBL(21) SETC  'D4F44D34'
&TBL(22) SETC  'D5F54E35'
&TBL(23) SETC  'D6F64F36'
&TBL(24) SETC  'D7F75037'
&TBL(25) SETC  'D8F85138'
&TBL(26) SETC  'D9F95239'
&TBL(27) SETC  '5A7A5D3A'
&TBL(28) SETC  '5B7B2423'
&TBL(29) SETC  '5C7C2A40'
&TBL(30) SETC  '5D7D2927'
&TBL(31) SETC  '5E7E3B3D'
&TBL(32) SETC  '5F7F5E22'
.*
.*       CHECK FOR MULTIPLE TSOMCP MACRO CALLS
.*
         AIF   (NOT &MCPSW).SETMCP
         MNOTE 16,'IKJ54125I MORE THAN ONE TSOMCP MACRO CALL ISSUED'
         MEXIT
.SETMCP  ANOP
&MCPSW   SETB  1                   INDICATE A TSOMCP MACRO CALL ISSUED
.*
.*       TEST FOR LINEGRP MACRO CALL HAVING BEEN ISSUED
.*
         AIF   (&NLG GT 0).LGISUD
         MNOTE 16,'IKJ54126I NO LINEGRP MACRO ISSUED BEFORE TSOMCP MACRO
               O'
         MEXIT
.LGISUD  ANOP
.*
.*       CHECK PARAMETER VALIDITY
.*
&OLTST   SETA  &OLTEST             NO. OF ON-LINE TEST PROCEDURES
         AIF   (&OLTST EQ 0).CHKXREF
         AIF   (&OLTST LE 255 AND &OLTST GE 10).CHKXREF
         MNOTE 4,'IKJ54110I OLTEST OPERAND OUT OF RANGE, DEFAULT USED'
&OLTST   SETA  0                        SET DEFAULT
.CHKXREF ANOP
&CRSREF  SETC  '0'                 SET DEFAULT
         AIF   ('&OPTIONS' EQ '').CKTR
&I       SETA  0                   INITIALIZE SUB-OPERAND SELECTOR
.OPLOOP  ANOP
&I       SETA  &I+1                BUMP SUB-OPERAND SELECTOR
         AIF   (&I GT N'&OPTIONS).CKTR  BR IF ALL OPTIONS SCANNED
         AIF   ('&OPTIONS(&I)' EQ 'XREF').SETCR
         AIF   ('&OPTIONS(&I)' EQ 'PROMPT').SETPR
         MNOTE 4,'IKJ54104I &OPTIONS(&I) INVALID FOR OPTIONS OPERAND'
         AGO   .OPLOOP             CONTINUE SCANNING
.SETCR   ANOP
&N       SETA  &ADRPT-1            SET TERMINAL COUNT
&M       SETA  0                   SET LOOP VARIABLE
.XREFLOP ANOP                      LOOP ONCE/LINE IN LAST L.G.
&N       SETA  &N+&TRMNO(&SCRPT+&M)  UPDATE TERMINAL COUNT
&M       SETA  &M+1                BUMP LOOP CONTROL VARIABLE
         AIF   (&M LT &LNO(&NLG)).XREFLOP  BR IF MORE LINES
&CRSREF  SETC  '&N'                SET NO. OF XREF ENTRIES
         AGO   .OPLOOP             CONTINUE SCANNING
.SETPR   ANOP
&PROMPT  SETB  1                   INDICATE PROMPT REQUESTED
         AGO   .OPLOOP             CONTINUE SCANNING
.CKTR    ANOP
&TRCNO   SETA  &TRACE
         AIF   (&TRCNO LE 65535).CKDTR
         MNOTE 4,'IKJ54110I TRACE OPERAND OUT OF RANGE, DEFAULT USED'
&TRCNO   SETA  0
.CKDTR   ANOP
&DTRCNO  SETA  &DTRACE
         AIF   (&DTRCNO LE 65535).CKLN
         MNOTE 4,'IKJ54110I DTRACE OPERAND OUT OF RANGE, DEFAULT USED'
&DTRCNO  SETA  0
.CKLN    ANOP
         AIF   ('&LNUNITS' EQ '').LNUDEF  CHK IF DEFAULT VALUE WANTED
&LNUNNO  SETA  &LNUNITS
         AIF   (&LNUNNO GT 65535).BADLNU
         AIF   (&LNUNNO GT 0).CKUN
.BADLNU  MNOTE 4,'IKJ54110I LNUNITS OPERAND OUT OF RANGE, DEFAULT USED'
.*
.*       THE FOLLOWING ROUTINE COMPUTES THE DEFAULT VALUE FOR LNUNITS
.*       USING THE PARAMETERS SUPPLIED IN PREVIOUS LINEGRP MACRO CALLS
.*
.LNUDEF  ANOP
&I       SETA  1                   SET LOOP INDEX
&LNUNNO  SETA  0
.LNULOOP ANOP
         AIF   (&I GT &NLG).TRUNC  BR IF ALL LINE GROUPS TALLIED
&K       SETA  20                  ASSUME 2 BUFFERS/TERMINAL
         AIF   ('&T(&I)' EQ '').LNULOP2  DON'T CHK NULL STRING
         AIF   ('&T(&I)'(1,3) EQ '327').DSPLY
         AIF   ('&T(&I)'(1,3) NE '226').LNULOP2
.DSPLY   ANOP
&K       SETA  25                  ASSUME 2.5 BFRS/TERM FOR 2260/65
.*                                 AND FOR 3270
.LNULOP2 ANOP
&LNUNNO  SETA  &LNUNNO+&K*&LNO(&I)*&UNO(&I)
&I       SETA  &I+1
         AGO   .LNULOOP
.TRUNC   ANOP
&LNUNNO  SETA  (&LNUNNO+5)/10      ROUND & TRUNCATE
.CKUN    ANOP
&UNSIZ   SETA  &UNITSIZ
         AIF   (&UNSIZ LT 41).BADUNS
         AIF   (&UNSIZ LE 255).GOTEST
.BADUNS  MNOTE 4,'IKJ54110I UNITSIZ OPERAND OUT OF RANGE, DEFAULT USED'
&UNSIZ   SETA  60                       SET DEFAULT BASIC UNIT SIZE
.GOTEST  ANOP
.*
.*       TEST FOR SERIOUS ERRORS IN PREVIOUS MACROS
.*
.TSTQUIT AIF   (NOT &QUITSW).INTRO
         MNOTE 16,'IKJ54127I SERIOUS ERROR IN PREVIOUS MACRO CALL PREVEN
               NTS FURTHER GENERATION'
         MEXIT
.*
.*********************************************************************
.*       INTRO
.*********************************************************************
.*
.INTRO   ANOP
 PUNCH '&NAM CSECT'
 PUNCH '         INTRO ENVIRON=TSO,KEYLEN=&UNSIZ,LNUNITS=&LNUNNO,CIB=2,-
                ...................'
&X       SETC  'STSP'              ASSUME START/STOP LINE
         AIF   (NOT &BISYNC).LINE2
&X       SETC  'BOTH'              SET LINETYPE TO BOTH FOR BISYNC LINE
.LINE2   ANOP
 PUNCH '               CROSSRF=&CRSREF,TRACE=&TRCNO,LINETYP=&X,        -
                        .........'                             @OZ16602
.*
         AIF   (NOT &PROMPT).NOPRMPT  BR IF NO PROMPT DESIRED
 PUNCH '               DTRACE=&DTRCNO,OLTEST=&OLTST,PROGID=&NAM'
         AGO   .OPEN
.NOPRMPT ANOP
 PUNCH '               DTRACE=&DTRCNO,STARTUP=C,OLTEST=&OLTST,PROGID=&N-
               AM'
.OPEN    ANOP
 PUNCH '         LTR   15,15'
 PUNCH '         BNZ   IEDAYBYE'
.*
.*********************************************************************
.*       OPEN'S
.*********************************************************************
.*
 PUNCH '         LA    3,DCBL1'
 PUNCH '         LA    4,DCBL2-DCBL1'
 PUNCH '         LA    5,DCBLAST'
 PUNCH '         SR    7,7'                                     YM2220
 PUNCH 'OPENLOOP LR    1,3'
 PUNCH '         OPEN  MF=(E,(1))'
 PUNCH '         USING IHADCB,6'
 PUNCH '         L     6,0(,3)'
 PUNCH '         TM    DCBOFLGS,DCBOFOPN'
 PUNCH '         BO    OPNLTST'
 PUNCH '         MVC   OPENWTO+34(8),DCBDDNAM'
 PUNCH 'OPENWTO  WTO   ''IKJ403I LINE GROUP FOR DD          NOT OPENED'-
               ',DESC=6, -'
 PUNCH '               ROUTCDE=2'
 PUNCH '         B     OPENNEXT'                                 YM2220
 PUNCH 'OPNLTST  BALR  7,0'                                      YM2220
 PUNCH 'OPENNEXT BXLE  3,4,OPENLOOP'                             YM2220
 PUNCH '         DROP  6'
 PUNCH '         B     OPENDONE'
 PUNCH 'DCBL1    DS    0F'
&I       SETA  1
.OPNLOOP ANOP
         AIF   (&I EQ &NLG).OPNLAST
 PUNCH '         OPEN  (DCB&I,(INOUT)),MF=L'
         AGO   .OPLTST
.OPNLAST ANOP
 PUNCH 'DCBLAST  OPEN  (DCB&I,(INOUT)),MF=L'
.OPLTST  ANOP
         AIF   (&I NE 1).OPLTST2
 PUNCH 'DCBL2    EQU   *'
.OPLTST2 ANOP
&I       SETA  &I+1
         AIF   (&I LE &NLG).OPNLOOP
 PUNCH 'OPENDONE DS    0H'
 PUNCH '         LTR   7,7'                                      YM2220
 PUNCH '         BZ    IEDAYBYE'                                 YM2220
.*
.*********************************************************************
.*       READY
.*********************************************************************
.*
 PUNCH '         READY'
.*
.*********************************************************************
.*       CLOSE'S
.*********************************************************************
.*
&I       SETA  1
.CLSLOOP ANOP
 PUNCH '         CLOSE (DCB&I)'
&I       SETA  &I+1
         AIF   (&I LE &NLG).CLSLOOP
.*
.*********************************************************************
.*       RETURN
.*********************************************************************
.*
 PUNCH 'IEDAYBYE L     13,4(,13)'
 PUNCH '         RETURN (14,12)'
.*
.*********************************************************************
.*       TTABLE
.*********************************************************************
.*
 PUNCH '         TTABLE LAST=TLAST,MAXLEN=5'
.*
.*********************************************************************
.*       OPTION
.*********************************************************************
.*
 PUNCH 'OPNAME   OPTION A'                                     @SA73586
.*
.*********************************************************************
.*       TERMINAL'S
.*********************************************************************
.*
&SCRPT   SETA  1                   INITIALIZE SCREEN ARRAY POINTER
&TN      SETA  1000                INITIALIZE MACRO COUNTER
&I       SETA  1                   SET OUTER LOOP CONTROL
.TERMLIN ANOP                      LOOP EXECUTED ONCE FOR EACH LINEGRP
.*
.*       BUILD DESCRIPTIVE NAMES OF FEATURES
.*
&J       SETA  (&I-1)*3            SET FEATUR TABLE OFFSET VALUE
         AIF   (&FETAB(&J+1)).TL1  TEST PRESENCE OF BREAK FEATURE
&FEAT(1) SETC  'NOBREAK'
         AGO   .TL2
.TL1     ANOP
&FEAT(1) SETC  'BREAK'
.TL2     AIF   (&FETAB(&J+2)).TL3  TEST PRESENCE OF ATTN FEATURE
&FEAT(2) SETC  'NOATTN'
         AGO   .TL4
.TL3     ANOP
&FEAT(2) SETC  'ATTN'
.TL4     AIF   (&FETAB(&J+3)).TL5  TEST PRESENCE OF TOSUPPR FEATURE
&FEAT(3) SETC  ''
         AGO   .TL6
.TL5     ANOP
&FEAT(3) SETC  ',TOSUPPR'
.TL6     ANOP
.*
.*       BUILD MACRO LABEL
.*
&J       SETA  1                   SET INNER LOOP CONTROL VARIABLE
.TLINLOP ANOP                      LOOP EXECUTED ONCE PER LINE
         AIF   (&J GT &LNO(&I)).TLOUT BR IF NOT MORE LINES IN GROUP
&K       SETA  1                   SET INNERMOST LOOP COUNTER
.TLINMLP ANOP                      LOOP EXECUTED ONCE/TERMINAL ON LINE
         AIF   (&K GT &TRMNO(&SCRPT)).TL12  BR IF NOT MORE TERM'S
&TN      SETA  &TN+1               INCREMENT TTABLE ENTRY  COUNT
         AIF   (&I EQ &NLG AND &J EQ &LNO(&I) AND &K EQ &TRMNO(&SCRPT))-
               .TLAST              BR IF LAST TERMINAL MACRO IN MCP
&TNAME   SETC  'T&TN'              BUILD TTABLE ENTRY NAME
         AGO   .TL10
.TLAST   ANOP
&TNAME   SETC  'TLAST'             BUILD SPECIAL NAME FOR LAST ENTRY
.TL10    ANOP
&CRSREF  SETC  'NO'                ASSUME NON-SWITCHED LINE
&QBYP    SETC  'QBY=T,'            INCLUDE QBY PARAMETER
         AIF   (NOT &DIALSW(&I)).LINE
&CRSREF  SETC  'YES'               INDICATE SWITCHED LINE
&QBYP    SETC  '      '            OMIT QBY PARAMETER
.LINE    ANOP
.*
.*       BUILD FIRST LINE OF TERMINAL MACRO
.*
 PUNCH '&TNAME    TERMINAL &QBYP.DCB=DCB&I,RLN=&J,TERM=&T(&I),QUEUES=TSX
               ,        .........'
.*
.*       PUNCH SECOND LINE OF TERMINAL MACRO
.*
         AIF   ('&TTAB((&I-1)*4+2)' EQ '').TNDYTRN  BR ON NOT DYNAMIC
&TNAME   SETC  'OPDATA=0'          INCLUDE OPDATA PARAMETER
&CM(1)   SETC  ','                 COMMA NEEDED WITH OPDATA PARM
         AGO   .TSCRN              GO CHK SCREEN
.TNDYTRN ANOP                      NOT DYNAMIC TRANSLATION
&TNAME   SETC  '        '          DON'T INCLUDE OPDATA PARAMETER
&CM(1)   SETC  ' '                 NO COMMA NEEDED -- NO OPDATA PARM
.TSCRN   ANOP
         AIF   (&SCRH(&SCRPT) EQ 0 AND &SCRW(&SCRPT) EQ 0).TNOSCR
 PUNCH '               UTERM=&CRSREF,SCRSIZE=(&SCRH(&SCRPT),&SCRW(&SCRPX
               T)),&TNAME&CM(1)                 .........'
         AGO   .TPUN3              GO PUNCH 3RD LINE
.TNOSCR  ANOP
 PUNCH '               UTERM=&CRSREF,&TNAME&CM(1)                      X
                           ........'
.TPUN3   ANOP
.*
.*       PUNCH THIRD LINE OF TERMINAL MACRO
.*
&Y       SETC  ''
         AIF   ('&ADCHAR(&TN-1000)' EQ '').TLNOAD  TEST FOR NULL ADDR
&X       SETC  '&ADCHAR(&TN-1000)' ASSUME NOT 1050 OR 226R/5 OR 327R
         AIF   ('&T(&I)' EQ '327R' OR '&T(&I)' EQ '327S').T3270
         AIF   ('&T(&I)' NE '226R' AND '&T(&I)' NE '2265').T1050
&X       SETC  '&X'(1,4)'A0'
         AGO   .TLPAST
.T3270   ANOP
&Z       SETA  1                        INITIALIZE PTR FOR TABLE LOOKUP
         AIF   ('&TTAB((&I-1)*4+1)' EQ 'ASCI').ASCI CHECK TRANTAB
.EBCD    ANOP
&Q       SETA  1                        POSITION IN TABLE ELEMENT
&Y       SETC  '2D'
         AGO   .SEARCH
.ASCI    ANOP
&Q       SETA  5                        POSITION IN TABLE ELEMENT
&Y       SETC  '05'
.SEARCH  ANOP
         AIF   ('&X'(1,2) EQ '&TBL(&Z)'(&Q,2)).FOUND
&Z       SETA  &Z+1                     POINTS AT NEXT ENTRY
         AIF   (&Z LE 32).SEARCH
         MNOTE 8,'IKJ54128I ADDRESSING CHARACTERS INVALID OR MISSING FOX
               R TERMINAL IN LINE GROUP &I'
&X       SETC  '        '
         AGO   .TLPAST
.FOUND   ANOP
&X       SETC  '&TBL(&Z)'(&Q+2,2)'&TBL(&Z)'(&Q+2,2)'&X'(3,2)'&X'(3,2)
.*                                      REPLICATING ADD. CHARS.@OS78355
         AGO   .TLPAST
.T1050   ANOP
         AIF   ('&T(&I)' NE '1050' AND '&T(&I)' NE '5041').TLPAST
&X       SETC  '&X'(1,2)'13'       ADD COMPONENT SELECTOR
.TLPAST  ANOP
 PUNCH '               ADDR=&X&Y,FEATURE=(&FEAT(1),&FEAT(2)&FEAT(3))'
         AGO   .TL11
.TLNOAD  ANOP
         AIF   ('&T(&I)'(1,3) NE '226' AND '&T(&I)'(1,3) NE '327' AND '&
               &T(&I)' NE '1050').TLPNOAD
         AIF   ('&T(&I)' EQ '327L').TLPNOAD
         AIF   ('&T(&I)' EQ '226L').TLPNOAD
         MNOTE 8,'IKJ54128I ADDRESSING CHARACTERS INVALID OR MISSING FOX
               R TERMINAL IN LINE GROUP &I'
.TLPNOAD ANOP
 PUNCH '               FEATURE=(&FEAT(1),&FEAT(2)&FEAT(3))'
.TL11    ANOP
&K       SETA  &K+1                BUMP INNERMOST LOOP COUNTER
         AGO   .TLINMLP            GO TO INNERMOST LOOP TEST
.TL12    ANOP
&SCRPT   SETA  &SCRPT+1            BUMP SCREEN ARRAY POINTER
&J       SETA  &J+1                INCREMENT INNER LOOP COUNTER
         AGO   .TLINLOP            GO TEST FOR MORE LINES IN GROUP
.*       OUTER LOOP TEST
.TLOUT   ANOP
&I       SETA  &I+1                INCREMENT OUTER LOOP INDEX
         AIF   (&I LE &NLG).TERMLIN  BR IF MORE LINE GROUPS
.*
.*********************************************************************
.*       TSINPUT
.*********************************************************************
.*
 PUNCH '         TSINPUT'
.*
.*********************************************************************
.*       DCB'S
.*********************************************************************
.*
&IN      SETA  0                   INITIALIZE INVLIST COUNTER
&I       SETA  1                   SET LOOP CONTROL VARIABLE
.DCBLOOP ANOP                      LOOP EXECUTED ONCE FOR EACH LINEGRP
&J       SETA  1                   ASSUME BUFIN=1
&P       SETA  2                   ASSUME BUFOUT=2              SA65439
         AIF   ('&T(&I)'(1,3) NE '226' AND '&T(&I)'(1,3) NE '327').PUNDX
               CB
&J       SETA  2                   BUFIN=2 FOR 2260/65 AND FOR 3270
         AIF   ('&T(&I)'(1,3) NE '327').PUNDCB                  SA65439
&P       SETA  3                   BUFOUT=3 FOR 3270            SA65439
.PUNDCB  ANOP
 PUNCH 'DCB&I    DCB   DSORG=TX,MACRF=(G,P),INTVL=&INT(&I),CPRI=S, ....X
               ...................'
 PUNCH '               DDNAME=&DDNME(&I),BUFIN=&J,BUFOUT=&P,MH=TSOMH, .X
               ...................'                             SA65439
&X       SETC  '&TTAB((&I-1)*4+1)'  SET SCT TABLE NAME
&K       SETA  &UNSIZ*&UNO(&I)     COMPUTE BUFFER SIZE
&J       SETA  &J+1                COMPUTE BUFMAX
         AIF   ('&TTAB((&I-1)*4+2)' EQ '').DB1 BR IF ONLY 1 TRAN TBL
&TNAME   SETC  'TL&I'              BUILD NAME OF TRANSLIST
         AIF   ('&T(&I)' NE '5041').DB2   BR IF NOT 5041 LINE GROUP
&X       SETC  '1050'              1050 IS SCT FOR 5041 LINE GROUPS
         AGO   .DB2
.DB1     ANOP
&TNAME   SETC  '&TTAB((&I-1)*4+1)' GET NAME OF TRANSLATE TABLE
.DB2     ANOP
 PUNCH '               BUFSIZE=&K,BUFMAX=&J,PCI=&PC(&I),TRANS=&TNAME, .X
               ...............'                                 SA59163
&IN      SETA  &IN+1               BUMP INVLIST COUNTER
.*
.*       BRANCH IF SEVERAL INVLIST SUB-OPERANDS
         AIF   (&LNO(&I) GT 1).DB3
.*
.*       COMPUTE VALUES FOR SELECTION OF CHARACTERS IN THE
.*       ALPHAMERIC CHARACTER SET ARRAY.  THESE TWO SELECTED CHARACTERS
.*       WILL BE CONCATENATED TO FORM THE INVLIST MACRO NAME.
&L       SETA  (&IN-1)/36+1        SET 1ST CHARACTER SELECTOR
&M       SETA  &IN-(&L-1)*36       SET 2ND CHAR SELECTOR
 PUNCH '               SCT=&X,INVLIST=(&CS(&L)&CS(&M))'
         AGO   .DCBTEST            GO TEST FOR MORE LINE GROUPS
.DB3     ANOP
&L       SETA  (&IN-1)/36+1        SET 1ST CHARACTER SELECTOR
&M       SETA  &IN-(&L-1)*36       SET 2ND CHAR SELECTOR
 PUNCH '               SCT=&X,INVLIST=(&CS(&L)&CS(&M),,,               X
                             .........'
.*
.*       SET UP LOOP TO GENERATE REST OF INVLIST SUB-OPERANDS
.*
&J       SETA  2                   INITIALIZE LINE COUNTER
.DCBINLP ANOP
&IN      SETA  &IN+1               BUMP INVLIST COUNTER
.*       BRANCH IF LAST SUB-OPERAND COMING UP NEXT
         AIF   (&J EQ &LNO(&I)).DB4
.*
.*       COMPUTE VALUES FOR SELECTION OF CHARACTERS IN THE
.*       ALPHAMERIC CHARACTER SET ARRAY.  THESE TWO SELECTED CHARACTERS
.*       WILL BE CONCATENATED TO FORM THE INVLIST MACRO NAME.
&L       SETA  (&IN-1)/36+1        SET 1ST CHARACTER SELECTOR
&M       SETA  &IN-(&L-1)*36       SET 2ND CHAR SELECTOR
 PUNCH '               &CS(&L)&CS(&M),,,                               X
                                   X'
&J       SETA  &J+1                BUMP LINE COUNTER
         AGO   .DCBINLP
.DB4     ANOP
&L       SETA  (&IN-1)/36+1        SET 1ST CHARACTER SELECTOR
&M       SETA  &IN-(&L-1)*36       SET 2ND CHAR SELECTOR
 PUNCH '               &CS(&L)&CS(&M))' PUNCH LAST SUBOPERAND
.*
.*       DCB GENERATION LOOP TEST
.*
.DCBTEST ANOP
&I       SETA  &I+1                INCREMENT LOOP CONTROL VARIABLE
         AIF   (&I LE &NLG).DCBLOOP BR IF MORE LINE GROUPS
.*
.*********************************************************************
.*       TRANLIST'S
.*********************************************************************
.*
&I       SETA  1                   SET OUTER LOOP INDEX VARIABLE
.TRLOOP  ANOP                      LOOP EXECUTED ONCE FOR EACH LINEGRP
&J       SETA  (&I-1)*4+1          PT TO 1ST OF GROUP IN &TTAB, &CTAB
         AIF   ('&TTAB(&J+1)' EQ '').TRLPTST BE IF TRANLIST UNNECESSARY
.*
.*       THIS ROUTINE SCANS THE TRANSLATE TABLE NAMES OF A LINEGRP
.*       LOOKING FOR 2741 OR 1050 TABLES.  WHEN (AND IF) FOUND THEY ARE
.*       PLACED IN  ARRAYS  FROM WHICH THE L2741= AND L1050=
.*       PARAMETERS WILL LATER BE GENERATED IF BOTH 2740'S AND 1050'S
.*       ARE INVOLVED IN THE LINE GROUP.
.*
&L2741(1) SETC  ''                 INITIALIZE ARRAYS
&L2741(2) SETC  ''
&L2741(3) SETC  ''
&L2741(4) SETC  ''
&L1050(1) SETC  ''
&L1050(2) SETC  ''
&L1050(3) SETC  ''
&L1050(4) SETC  ''
&N2741   SETA  0                   INITIALIZE ARRAY COUNTERS
&N1050   SETA  0
&K       SETA  0                   SET LOOP CONTROL VARIABLE
.*       SKIP NULL TABLE ENTRIES
.TRLP2   AIF   ('&TTAB(&J+&K)' EQ '').TRLP2T
         AIF   ('&TTAB(&J+&K)'(3,2) NE '41').TRLP3
&N2741   SETA  &N2741+1
&L2741(&N2741) SETC '&TTAB(&J+&K)'
         AGO   .TRLP2T             GO TO SCANNING LOOP TEST
.TRLP3   AIF   ('&TTAB(&J+&K)'(3,2) NE '50').TRLP2T
&N1050   SETA  &N1050+1
&L1050(&N1050) SETC '&TTAB(&J+&K)'
.TRLP2T  ANOP
&K       SETA  &K+1
         AIF   (&K LE 3).TRLP2     BR UNTIL ALL TBL NAMES ARE CHECKED
         AIF   (&N2741 NE 0 AND &N1050 NE 0).TRLBOTH
.*
.*       THIS ROUTINE IS EXECUTED UNLESS THE LINE GROUP HAS BOTH
.*       2740 AND 1050 TERMINALS.  THIS ROUTINE GENERATES THE
.*       LIST= PARAMETER.
.*
&CM(2)   SETC  ''                  INITIALIZE SUBLIST SEPARATORS
&CM(3)   SETC  ''
&CP(2)   SETC  '     '             INITIALIZE CONTINUATION POSITIONERS
&CP(3)   SETC  '     '
.*       MAKE SUBLIST SEPARATORS COMMAS IF THERE ARE, IN FACT,
.*       OPERANDS TO SEPARATE.  ALSO SET THE CONTINUATION POSITIONERS
.*       TO THE PROPER LENGTH SO THAT A CONTINUATION CHARACTER WILL
.*       APPEAR IN COLUMN 72.
         AIF   ('&TTAB(&J+2)' EQ '').TRL1
&CM(2)   SETC  ','
&CP(2)   SETC  ''
.TRL1    AIF   ('&TTAB(&J+3)' EQ '').TRL2
&CM(3)   SETC  ','
&CP(3)   SETC  ''
.TRL2    ANOP
 PUNCH 'TL&I     TRANLIST LIST=(&TTAB(&J),&TTAB(&J+1)&CM(2)&TTAB(&J+2)&X
               CM(3)&TTAB(&J+3)),&CP(2)&CP(3)                 .........X
               ........'
         AGO   .TRLCHAR            GO GENERATE CHARS= PARAMETER
.*
.*       THIS ROUTINE GENERATES THE L2741= PARAMETER
.*
.TRLBOTH ANOP
&CM(1)   SETC  ''                  INITIALIZE SUBLIST SEPARATORS
&CM(2)   SETC  ''
&CM(3)   SETC  ''
&CP(1)   SETC  '     '             INITIALIZE CONTINUATION POSITIONERS
&CP(2)   SETC  '     '
&CP(3)   SETC  '     '
.*       MAKE SUBLIST SEPARATORS COMMAS IF THERE ARE, IN FACT,
.*       OPERANDS TO SEPARATE.  ALSO SET THE CONTINUATION POSITIONERS
.*       TO THE PROPER LENGTH SO THAT A CONTINUATION CHARACTER WILL
.*       APPEAR IN COLUMN 72.
         AIF   (&N2741 LT 2).TRL3
&CM(1)   SETC  ','
&CP(1)   SETC  ''
         AIF   (&N2741 LT 3).TRL3
&CM(2)   SETC  ','
&CP(2)   SETC  ''
         AIF   (&N2741 LT 4).TRL3
&CM(3)   SETC  ','
&CP(3)   SETC  ''
.TRL3    ANOP
 PUNCH 'TL&I     TRANLIST L2741=(&L2741(1)&CM(1)&L2741(2)&CM(2)&L2741(3X
               )&CM(3)&L2741(4)),&CP(1)&CP(2)&CP(3)                 ...X
               .............'
.*
.*       THIS ROUTINE GENERATES THE L1050= PARAMETER
.*
&CM(1)   SETC  ''                  INITIALIZE SUBLIST SEPARATORS
&CM(2)   SETC  ''
&CM(3)   SETC  ''
&CP(1)   SETC  '     '             INITIALIZE CONTINUATION POSITIONERS
&CP(2)   SETC  '     '
&CP(3)   SETC  '     '
.*       MAKE SUBLIST SEPARATORS COMMAS IF THERE ARE, IN FACT,
.*       OPERANDS TO SEPARATE.  ALSO SET THE CONTINUATION POSITIONERS
.*       TO THE PROPER LENGTH SO THAT A CONTINUATION CHARACTER WILL
.*       APPEAR IN COLUMN 72.
         AIF   (&N1050 LT 2).TRL4
&CM(1)   SETC  ','
&CP(1)   SETC  ''
         AIF   (&N1050 LT 3).TRL4
&CM(2)   SETC  ','
&CP(2)   SETC  ''
         AIF   (&N1050 LT 4).TRL4
&CM(3)   SETC  ','
&CP(3)   SETC  ''
.TRL4    ANOP
 PUNCH '               L1050=(&L1050(1)&CM(1)&L1050(2)&CM(2)&L1050(3)&CX
               M(3)&L1050(4)),&CP(1)&CP(2)&CP(3)                    ...X
               .............'
.*
.*       THIS ROUTINE GENERATES THE CHARS= PARAMETERS
.*
.TRLCHAR ANOP
&CM(1)   SETC  ''                  INITIALIZE SUBLIST SEPARATORS
&CM(2)   SETC  ''
&CM(3)   SETC  ''
.*       MAKE SUBLIST SEPARATORS COMMAS IF THERE ARE, IN FACT,
.*       OPERANDS TO SEPARATE
         AIF   ('&CTAB(&J+1)' EQ '').TRL5
&CM(1)   SETC  ','
         AIF   ('&CTAB(&J+2)' EQ '').TRL5
&CM(2)   SETC  ','
         AIF   ('&CTAB(&J+3)' EQ '').TRL5
&CM(3)   SETC  ','
.TRL5    ANOP
 PUNCH '               CHARS=(&CTAB(&J)&CM(1)&CTAB(&J+1)&CM(2)&CTAB(&J+X
               2)&CM(3)&CTAB(&J+3)),OPFLD=OPNAME'
.*
.*       TRANLIST LOOP TEST
.*
.TRLPTST ANOP
&I       SETA  &I+1
         AIF   (&I LE &NLG).TRLOOP BR IF MORE LINE GROUPS TO HANDLE
.*
.*********************************************************************
.*       INVLIST'S
.*********************************************************************
.*
&SCRPT   SETA  1                   INITIALIZE TRMNO ARRAY POINTER
&ADRPT   SETA  0                   INITIALIZE ADCHAR ARRAY POINTER
&IN      SETA  1                   INITIALIZE INVLIST COUNTER
&K       SETA  1000                INITIALIZE TTABLE NAME COUNTER
&I       SETA  1                   SET OUTER LOOP CONTROL VARIABLE
.IVL1    ANOP                      LOOP EXECUTED ONCE FOR EACH LINEGRP
&J       SETA  1                   SET INNER LOOP CONTROL VARIABLE
&EOT     SETC  ''
.IVL2    ANOP                      LOOP EXECUTED ONCE FOR EACH LINE
&N       SETA  1                   SET INNERMOST LOOP COUNTER
.IVL3    ANOP                      LOOP EXECUTED ONCE/TERMINAL ON LINE
         AIF   (&J GT &LNO(&I)).IVL1T BR IF ALL LINES IN LINEGRP DONE
         AIF   (&N GT &TRMNO(&SCRPT)).IVL2T  BR IF ALL TERM'S ON LINE
         AIF   (&N LT &TRMNO(&SCRPT)).IL1  BR IF NOT LAST TERM ON LINE
         AIF   (&J LT &LNO(&I)).IL1 BR IF NOT LAST LINE IN LINEGRP
         AIF   (&I LT &NLG).IL1    BR IF NOT LAST LINE IN WHOLE SYSTEM
&TNAME   SETC  'TLAST'             BUILD SPECIAL NAME FOR LAST LINE
         AGO   .IL2                SKIP NORMAL NAME BUILDING
.IL1     ANOP
&K       SETA  &K+1                BUMP TTABLE NAME COUNTER
&TNAME   SETC  'T&K'               BUILD TTABLE ENTRY NAME
.IL2     ANOP
&ADRPT   SETA  &ADRPT+1            BUMP ADCHAR ARRAY POINTER
&Y       SETC  ''
&X       SETC  '&ADCHAR(&ADRPT)'   ASSUME NOT 1050 OR 226R/5 OR 327R
         AIF   ('&X' EQ '').ILPAST  SKIP PROCESSING IF NULL
         AIF   ('&T(&I)' EQ '327R' OR '&T(&I)' EQ '327S').IL327R
         AIF   ('&T(&I)' NE '226R' AND '&T(&I)' NE '2265').IL1050
&X       SETC  '&X'(1,4)'40'
         AGO   .ILPAST3
.IL327R  ANOP
&X       SETC  '&X'(1,2)'&X'(1,2)'&X'(3,2)'&X'(3,2)
.*                                 REPLICATING ADDRESSING CHARS
         AIF   ('&TTAB((&I-1)*4+1)' EQ 'ASCI').ASCITAB
&Y       SETC  '2D'                     SET ENQ FOR EBCD
&EOT     SETC  ',EOT=37'
         AGO   .ILPAST3
.ASCITAB ANOP
&Y       SETC  '05'                     SET ENQ FOR ASCI
&EOT     SETC  ',EOT=04'
         AGO   .ILPAST3
.IL1050  ANOP
         AIF   ('&T(&I)' NE '1050' AND '&T(&I)' NE '5041').ILPAST
&X       SETC  '&X'(1,2)'15'       ADD COMPONENT SELECTOR
         AGO   .ILPAST3
.ILPAST  ANOP
         AIF   ('&T(&I)' NE '226L' AND '&T(&I)' NE '327L').ILPAST2
.*                                 TEST FOR 226L AND 327L
         AIF   ('&T(&I)' EQ '327L').IL327L
&X       SETC  '02'                SET 226L INVLIST VALUE
         AGO   .ILPAST3
.IL327L  ANOP
&X       SETC  '06'                SET 327L INVLIST VALUE
         AGO   .ILPAST3
.ILPAST2 ANOP
         AIF   ('&X' NE '').ILPAST3
&X       SETC  'DF'                SET DEFAULT VALUE
.ILPAST3 ANOP
.*       COMPUTE VALUES FOR SELECTION OF CHARACTERS IN THE
.*       ALPHAMERIC CHARACTER SET ARRAY.  THESE TWO SELECTED CHARACTERS
.*       WILL BE CONCATENATED TO FORM THE INVLIST MACRO NAME.
&L       SETA  (&IN-1)/36+1        SET 1ST CHARACTER SELECTOR
&M       SETA  &IN-(&L-1)*36       SET 2ND CHAR SELECTOR
         AIF   ('&T(&I)' NE '3335').IVLNTWX  BR IF NOT TWX
&IN      SETA  &IN+1               BUMP INVLIST MACRO COUNTER
 PUNCH '&CS(&L)&CS(&M)       INVLIST ORDER=(&TNAME+89),CPUID=CPID'
&CPIDSW  SETB  1                   INDICATE CPU.ID. CONSTANT NEEDED
         AGO   .IVLPND             GO TO LOOP MODIFICATION
.IVLNTWX ANOP
&MM      SETA  (&N-((&N-1)/14)*14) CONVERT TO MODULO 14
         AIF   (&N GE &TRMNO(&SCRPT)).ILEOL BR IF LAST INVLIST ENTRY
         AIF   (&MM EQ 14).ILEOG   BR IF END OF GROUP OF 14
         AIF   (&N GT 1 AND &MM NE 1).ILPMID  BR IF NOT FIRST OR LAST
 PUNCH '&CS(&L)&CS(&M)       INVLIST ORDER=(&TNAME+&X&Y,               X
                              .........'
         AGO   .IVLPND             GO TO LOOP MODIFICATION
.ILPMID  ANOP                      PUNCH NOT-FIRST/NOT-LAST ENTRY
 PUNCH '               &TNAME+&X&Y,                                    X
                  .........'
         AGO   .IVLPND             GO TO LOOP MODIFICATION
.ILEOG   ANOP
&Y       SETC  '&Y'.','            ADD COMMA
         AGO   .ILPLAST            GO PUNCH LAST ENTRY
.ILEOL   ANOP                      END OF THIS INVLIST MACRO
&IN      SETA  &IN+1               BUMP INVLIST MACRO COUNTER
         AIF   (&MM EQ 1).ILFAL    BR IF 1ST & LAST ENTRY
.ILPLAST ANOP
 PUNCH '               &TNAME+&X&Y),AUTO=NO&EOT'               @YA14062
         AGO   .IVLPND             GO TO LOOP MODIFICATION
.ILFAL   ANOP                      PUNCH FIRST-AND-LAST ENTRY
 PUNCH '&CS(&L)&CS(&M)       INVLIST ORDER=(&TNAME+&X&Y),AUTO=NO&EOT'
.IVLPND  ANOP
&N       SETA  &N+1                BUMP INNERMOST LOOP COUNTER
         AGO   .IVL3               GO TO INNERMOST LOOP TEST
.IVL2T   ANOP
&SCRPT   SETA  &SCRPT+1            BUMP TRMNO ARRAY POINTER
&J       SETA  &J+1                BUMP INNER LOOP CONTROL VARIABLE
         AGO   .IVL2               GO INCREMENT INNERMOST LOOP CTR
.IVL1T   ANOP
&I       SETA  &I+1                BUMP OUTER LOOP CONTROL VARIABLE
         AIF   (&I LE &NLG).IVL1   BR IF ALL LINEGRP'S NOT HANDLED
.*
         AIF   (NOT &CPIDSW).TSOMH  BR IF NOT TWX TERMINAL
 PUNCH 'CPID     DC    X''0289C9'''     NON-PARITY ID           SA70240
.TSOMH   ANOP
.*
.*********************************************************************
.*       TSOMH
.*********************************************************************
.*
TSOMH    TSOMH
.*
 PUNCH '         DCBD  DSORG=TX'
.ALLTHRU ANOP
 PUNCH '         END'
         MEND
