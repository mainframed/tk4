.section 'CATSRCH (PLI Subroutine)'
.ix CATSRCH
.sp 2
.subsection 'Description'


 Subroutine CATSRCH is available to PL/I programmers desiring to
 retrieve data set names from the catalog by specifying a level or a
 pattern (containing asterisks) ala TSO.

 CATSRCH is available as member ACATSRCH in SYS1.SERVLIB and may be link
 -edited with a program using INCLUDE, or it may be included at
 execution time by providing a STEPLIB card to SYS1.SERVLIB and issuing
 a FETCH.


.subsection 'Arguments'

 Three arguments are required when invokiing CATSRCH.  They describe the
 following:

      1.     The type of search required, either Level  or Pattern (see
             below)

      2.     The name to use in the search (one or more index levels),
             and

      3.     The storage provided to store the dsnames and volume number

      The arguments have the following attributers:

      1.     CHAR(5) VARYING,
      2.     CHAR(44) VARYING, and
      3.     1  structure-name(n),
              2 CHAR(44) VARYING,
              2 CHAR(6);

      For example:

           DCL
                TYPE CHAR(5) VAR
                DSN  CHAR(44) VAR,
                1 SAVE(100),
                  2 NAMES CHAR(44) VAR,
                  2 VOLS C  R(6); 1


 The search routine will only return one volume serial for any dsname
 encountered.  For multi-volume dataa sets, this will be the first
 volume serial number in the catalog.

 Forms of catalog arguuments:

 When LEVEL is specified, the level desired, e.g., '$A1006.TEST' as when
 specifying LEVEL to LISTC. in TSO.

 When PAT is specified, one or more asterisks will be given, e.g.,
 $A1006.*.PLI or $A1006.TEST.*.DATA OR $A2006.*.*.DATA.  The last
 seection of he argument may not be an asterisk, and does not need to be
 the lowest level name of a group (may be an index).

.subsection 'Use'

 CATSRCH is used as a function reference and returns a fixed binary
 halfword indicating the number of names found and placed in the storage
 area for names provided.  Thus, I = CATSRCH(TYPE,DSN,SAVE) would set I
 to the number of names found from the argument given.  If no names are
 found, or if any error is encountered, including bad syntax in the
 argument a zero is returned.  When names are found, they will be stored
 in the storage area given.  The length of each name in the array will
 be its true length, i.e., no blanks will precede or follow each name.
 The length can be determined using the LENGTH function, if desired.

