.section 'DEBUGGER (Core Display)'
.ix DEBUGGER
.ix 'TSO Commands' DEBUGGER
.ix 'Display Storage'
.sp 3
.subsection 'Function'
.sp
         DEBUGGER is used to display virtual memory.  Currently, only
         the virtual address space of the caller is available.  If
         invoked authorized then all virtual storage is available for
         browsing.  Otherwise only non-protected storage may be viewed.
.sp 3
.subsection 'Subcommands'
.sp
         <addr>    - display storage from the given address
                     example - 1204 - display from location 1204   (hex)
         ASCB      - display the ASCB of the named address space
                     example - ASCB=$A0000  - ASCB for $A0000 is located
         C         - display from address that is complement of
                     current address
         CSCB      - display the CSCB of the named address space
                     example - CSCB=$A0000  - CSCB of $A0000 is located
         C         - display an address in memory
                     examples- d01234 - display location 1234 (hex)
                               dBARF  - loc from value of name 'BARF'
         DELETE    - delete a load module loaded via the 'LOAD' command
                     example - DELETE=IEFIIC  deletes the named module
         END       - leave DEBUGGER
         F         - fullword indirect address from current display addr
         H         - halfword indirect from current display addr
         HB        - half page backward
         HF        - half page forward
         LOAD      - load a module
                     example - LOAD=IEFIIC  loads the named module,
                     the current display address is set to the named
                     entry point.  To find offset zero in the module,
                     you may use the '?C' command.
         PB        - page backward
         PF        - page forward
         R         - repeat last command line
         UCB       - display the UCB for a device
                     example - UCB00F - find UCB for device '00F'
         =         - assign a name to current display address
                     example - =QQ - assign current addr to name 'QQ'
         <         - backup in display trace table
                     example - <<< - back up three entries
         >         - forward in display trace table
                     example - >>> - go forward three entries
         ?C        - display loaded module information
         ?N        - display name table
         ?T        - display trace table
         +         - add to current display address and display
                     example - +40 - add x'40' to current location
                               QQ+40 - add x'40' to value of name 'QQ'
                                       and display that location
         -         - subtract from current display address and display
                     example - -40 - sub x'40' from current location
                               QQ-40 - sub x'40' from value of name 'QQ'
                                       and display that location
         ,         - separate commands
                     example - 10,f,f,+4,f - finds current TCB
         *         - redisplay current core address
         (blanks)  - same as '*'
         anything else is taken as an address to
                   display (names may be used as addresses)
.sp 3
.subsection 'Syntax'

         DEBUGGER

         Specifying an address in either hexidecimal or decimal will
         cause DEBUGGER to display storage from that address.

         Examples of the syntax of address and values are as follows:
               01234DF   -  hexidecimal self defining term
               123456.   -  Decimal     self defining term
               'ABCEDF'  -  character   self defining term

         -- The value of <addr> and <value> used in the following
            displays is determined as follows:  numbers and hex digits
            entered without a trailing '.' Are interpreted in all cases
            to be 'hex'; if followed by a '.', It is interpreted to be
            'decimal'

            For purposes of intermediate computation, all values are
            kept in a fullword, with hi order bits truncated as
            necessary.
                   (E.G.  D123456789 - would be interpreted as
                          D23456789)

            If the input for an <addr> value is invalid, I.E. Contains
            non-hex characters, it will be assumed to be a name.  If it
            is not found in the name table, an error message will be
            displayed with a bar ('×') under the approximate location of
            the error, if possible.

            <Value> information must be entered as a self-defining term
            in hex, or decimal (followed by a '.'), Or character (string
            of characters surrounded by, and containing no, single
            quotes ('))

         Note -
                   since 'B','C',and 'D' are commands, hex numbers
                   beginning with these values must be specified with a
                   leading zero.  Names beginning with these letters
                   should be avoided.

