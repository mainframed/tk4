.section 'LOGSCAN'
.ix LOGSCAN
.ix 'SYSLOG Scan'
.ix Programs LOGSCAN
                           A Service Aid Program
            To print certain information or a certain time period
                            from the system log.
       ------------------ Installation suggestions -------------------
             link the object deck to AOST.LOAD or a user library,
             using the following JCL.
        //LINK EXEC PGM=IEWL,PARM='XREF,LET,LIST,NCAL',REGION=128K
        //SYSLMOD DD DSN=AOST.LOAD(LOGSCAN),DISP=SHR
        //SYSLIN DD *
                 ---- Put object deck here ----
        /*
        //SYSUT1 DD DSN=&&TEMP,UNIT=SYSDA,SPACE=(1024,(50,20))
        //SYSPRINT DD SYSOUT=A
             You may want to use a cataloged procedure for LOGSCAN.
             Here is a sample proc that allows a canned routine
             to be concatenated to the control card input.
             Assume that the pds which contains the routines has
             a member null which has no records.
        //LOGSCAN PROC DSN=' ',DISP='SHR,PASS',ROUTINE=NULL
        //A       EXEC PGM=LOGSCAN
        //SYSIN   DD   DDNAME=SYSIN
        //        DD   DSN=SYS1.LOGSCAN(&ROUTINE),DISP=SHR
        //LOG     DD   DSN=&DSN,DISP=(&DISP)
        //PRINT   DD   SYSOUT=A
             If you anticipate using LOGSCAN from a TSO
             terminal, see below for an example of a
             CLIST which will invoke LOGSCAN.
             The default blocksize for the print data set can be
             altered permanently by zapping location x'20' to the
             halfword value desired. -  VER 0020 07CB
             To help identify the date of a log data set, LOGSCAN
             recognizes the date from message IEE102I as it appears
             in the log from a JES3/MVS system.  A record is printed
             the first time this message is found and each time the
             date changes.  To utilize this feature on other types of
             systems, add a message that will be issued periodically
             in this format -
                                       IEE102I hh.mm.ss yy.ddd
             where the message id begins in the 40th position,
             or zap location x'22' to the position of 'IEE102I'
             in your log (relative to 1). This is a halfword value
             in hexadecimal. -  VER 0022 0028
             (for an unmodified JES2 system this would be the 25th
             position, or x'19'. - REP 0022 0019)
             if your log has its timestamps in a position other than
             those mentioned on page 4, you may zap the halfword
             value of its position (relative to 1) into
             location x'24'. -  VER 0024 0001
.subsection 'LOGSCAN JCL'
        //JOBNAME  JOB
        //A        EXEC PGM=LOGSCAN
        //PRINT DD SYSOUT=A                         (PRINTED OUTPUT)
        //LOG   DD DISP=SHR,DSN=SYSLOG              (LOG DATA SET)
        //SYSIN DD *                                (CONTROL DATA SET)
             This JCL is sufficient to scan the current system log
             when one data set is empty.  (This will not work for an
             MVS system log.  Specify a data set created by an
             external writer.)  Examples of other uses appear
             on page 9.
.subsection 'Input Data Sets'
             LOGSCAN will process fixed, fixed blocked, variable
             and variable blocked data with LRECL not larger than
             133, or undefined records with BLKSIZE not larger
             than 133.  As a convenience, LOGSCAN will accept
             records up to 255 bytes long, but only the first
             133 bytes can be scanned, printed or punched.
             LOGSCAN strips the first byte from input records
             if print control characters are indicated
             in the JCL or the data set label.  The record
             descriptor word is removed from variable records.
             The control data set is fixed or fixed blocked with
             LRECL of 80.  Unlike data sets can be concatenated.
.subsection 'Output Data Sets'
             Print output is RECFM=FB,LRECL=133.  A BLKSIZE of 1995
             is assumed unless otherwise specified in the JCL as a
             multiple of 133.  The output is always single-spaced.
             The print data set contains a listing of the control
             statements used, the records selected, and statistics
             about the number of records processed. The statistics
             kept are total records read from the log data set,
             the number within the specified time and sequence
             numbers, and the number finally selected.  An identifier
             is printed each time a new date is obtained from message
             IEE102I (MVS activity message) or IAT3100 (JES3 restart).
             The statistics do not include these records.
             Punch output is provided if //PUNCH DD IS INCLUDED IN THE
             JCL for a step.  Recfm is FB, and LRECL is assumed to be
             80 unless specified in the JCL.  Blksize is assumed to
             be the same as LRECL unless it is specified in the JCL.
             Records longer than the LRECL are truncated.  Only
             selected records are included in this data set.
.subsection 'Performance Considerations'
             LOGSCAN may be executed on OS/360 or OS/VS systems.
             The amount of CPU time used varies greatly, depending on
             the size of the data set being processed, the number of
             data type control statements, the range of time
             specified, and use of the margin control card.  If the
             position of a desired message is known, a margin card
             can be used to compare that one position instead of
             comparing 133 positions.  This also can prevent unwanted
             records from being printed.  If several data type cards
             are being used with a large data set, judicious use of
             the time card can reduce the run time considerably.
.subsection 'Condition Codes'
             The following condition codes are returned by LOGSCAN
        0 - normal run
        1 - no output because no records matched the argument
        2 - empty data set
        4 - data set LRECL larger than 255
        8 - control card had syntax error
       12 - required dd card missing
.subsection 'Parms'
             The parm field on the EXEC card or in the TSO call
             statement may be used to override the default values for
             the location of the timestamps and the location of
             message IEE102I within the log records, as well as to
             indicate a TSO session.
        T=ppp   (where ppp is the position of the first character of
             the timestamp) can be used when the timestamp is 6 to 8
             digits long, but does not appear in position 1.
        I=ppp   (where ppp is the position where message IEE102I would
             start) can be used if message IEE102I appears in the log,
             but does not start in position 40.
             For example, the following statement -
        CALL 'AOST.LOAD(LOGSCAN)' 'TSO,T=16,I=25'
             Indicates that control statements are being entered from
             a terminal, that the timestamp is to be found in
             position 16 instead of 1, and that message IEE102I is to
             be found in position 25 instead of 40.
.subsection 'Control Cards'
             All control cards are optional except that at least
             a time card or sequence card or one or more data type
             cards is required.  Statements may begin in any column.
        TIME=hhmm,hhmm
             Specifies the beginning and end of the desired period.
             If used with data type cards, only records within this
             time will be scanned for the specified data.
             The last time card read is effective for the entire step.
             HHMM must be four digits, with leading zeros if needed.
             If the beginning time is greater than the ending time,
             it is assumed that a time period spanning midnight
             is desired.  The program processes records up to the
             end of the data set, so records from more than one
             day may be produced.  LOGSCAN recognizes time stamps
             of 6 to 8 digits starting in position 1 or 2 of
             each record or in the format hh.mm.ss starting in
             position 6.  Records without time stamps are handled
             according to the most recent time-stamped record.
        MARGIN=sss,eee
             Sets limits of the scan, if desired.  Default is 1,133.
             This sets the range of positions the first character
             of data must be found in.  As many margin cards as
             desired can be used.  Each one is effective for all
             data type cards following it until reset by another
             margin card.  Sss and eee can be one to three digits
             with values between 1 and 133.  If eee is omitted, it is
             assumed to be the same as sss, I.E. Only one position.
             A forms ruler may be used with a sample of a data set
             for exact margin determination, since control characters
             and record descriptor words are removed before
             processing, and only data is scanned.
        DATA='--character string--',WORD
        OR=                        ,ABBR
        AND=
        NOT=
             Used to select or exclude records with certain data.
             The WORD parameter, if used, requires the matching data
             to be surrounded by blanks or punctuation. This is useful
             when using a short search argument such as a job number
             or device number which could also appear as part of an
             unrelated name, to reduce unwanted output.  Characters
             other than letters, numbers, and national characters are
             considered to be punctuation.  The ABBR parameter
             requires the matching data to be preceded by a blank
             or punctuation.  This would be desired, for example,
             when searching for a certain message prefix.  If neither
             parameter is specified, matching data will be selected
             even if it is embedded in a longer name.
             Any character can be used in lieu of the apostrophes,
             provided the first one immediately follows the equal
             sign, and the character is not included in the data.
             NOT= causes a record with that data to be omitted.
             AND= requires a record to match the data from this card
             as well as previous card(s).  Any number of data type
             cards may be used.  If AND= or NOT= cards are used in
             an argument, they must follow all OR= and DATA= cards
             in that argument.  DATA= can be use interchangeably
             with OR=.
        SAVE
             or
        SAVE2
             or
        PRINT
             or
        NEXT
             or
        SKIP
             or
        / (Begin a new search argument)
             See complex search arguments below for explanation
             of these six control statements.
        * -----Comment-----
             A card beginning with an asterisk can contain comments.
             Comments may also appear in any control card if they are
             separated from the operands by one or more blanks.
        GO
             When entering control statements from a TSO terminal,
             go may be used instead of /* when all statements have
             been entered.  This keeps the SYSIN data set open and
             allows the program to request omitted control statements.
        NOPRINT
             If this statement is used, selected records will not
             appear in the print data set.  It could be used when
             selecting a large number of records for output to the
             punch data set, or for counting types of records.
        SET ssssssss=vvvvvvvvvvvv
             see symbolic variables below for explanation
             of this statement.
.subsection 'Sequence Control'
             An additional control statement is provided for use
             with data sets which have sequence numbers but not
             a time stamp.  It would be used for the same purpose
             as the TIME= control card would be for the system log.
             Any or all of the five keywords may appear in this
             statement in any order, but all keywords must appear in
             the same card, and only the last statement of this type
             is effective.
        START=xxxxxxxx
             Code a value from 0 to 99999999.  Sequence numbers
             below this value will not be printed.
        STOP=yyyyyyyy
             Code a value from 0 to 99999999. Sequence numbers
             above this value will not be printed.
        COLUMN=ccc
             Code a value from 1 to 133. This defines the position of
             the sequence field in the records.
        LENGTH=n
             Code a value from 1 to 8.  This is the length of
             the sequence field.
        TYPE=hex
             Should be specified if the data to be compared is
             hexadecimal representation, such as hex addresses at the
             left side of a formatted dump.  Otherwise the fields
             will be compared using ebcdic collating sequence.
             If any keyword is omitted or misspelled, the
             following defaults are assumed -
                  START     hexadecimal zeros
                  STOP      hexadecimal f's
                  COLUMN    73
                  LENGTH    8
                  TYPE      char
             Leading zeros are not necessary.  The column value and
             the start and stop values will have their high-order
             characters truncated or padded with zeros if they
             are longer or shorter than the specified length.
             Special characters, except commas and blanks,
             may be used in the start and stop values, if TYPE=hex
             is not specified.
.subsection 'Complex Search Arguments'
             In any search argument which contains more than one
             type of control card, OR= cards can be considered as
             paired with the preceding control card and evaluated
             before the and= cards.  The following set of control
             cards,
                  DATA='a'
                  DATA='b'
                  AND='c'
             Would be evaluated as (a or b) and c.
             To allow an argument such as a or (b and c) another
             control card is used.  A statement consisting of a slash
             causes LOGSCAN to begin a new search argument.  If a
             record is not selected under the first argument, it will
             still be printed if it qualifies under another argument.
             Therefore a slash card can be considered to represent
             an or between two parenthesized expressions in a
             complex search argument.  A or (b and c) would be
             accomplished by
                  DATA='a'
                  /
                  DATA='b'
                  AND='c'
             (a and b) or (c and d) would be represented by
                  DATA='a'
                  AND='b'
                  /
                  DATA='c'
                  AND='d'
             (a or b) and (c or d) would have to be rearranged as
             (a and c) or (a and d) or (b and c) or (b and d)
                  DATA='a'
                  AND='c'
                  /
                  DATA='a'
                  AND='d'
                  /
                  DATA='b'
                  AND='c'
                  /
                  DATA='b'
                  AND='d'
             The save control statement is a variation of the card
             beginning with a slash. It defines the end of an argument
             and also indicates that any record selected using that
             argument is not to be printed until a record is selected
             under another argument ending with a slash.  The saved
             record will be printed before the new record.  The saved
             record will not be printed again, but other records found
             under that search argument will be saved and processed
             in the same way.  Only the last saved record will be
             printed before the record from another argument.
             The SAVE2 statement provides the ability to save another
             type of record without affecting the record saved using
             the SAVE statement.  If records have been saved for
             both arguments, the SAVE2 record will always be printed
             after the SAVE record, regardless of the order of their
             occurence in the original data set.
             The PRINT control statement causes records selected
             under that argument to be printed without affecting
             any record which has been saved.  Note that use of this
             statement may cause records to be printed in a different
             order than the original, because a record may have been
             saved before which will not be printed until a record
             is selected using an argument which ends with a slash
             card.
             The NEXT statement causes a record to be printed only
             if it is the first one after a record selected
             using an argument which ends with a slash card.
             The SKIP statement causes records to be ignored.  This
             can be used to thin out records and reduce the need for
             many NOT= statements in subsequent arguments.
             A SLASH control statement is assumed for the last
             argument in the control data set unless a SAVE or SAVE2
             or PRINT or NEXT or SKIP statement is used.  Records are
             processed according to the first argument which they
             match.  If a record would be selected under more than one
             argument and it is desired that it always be printed,
             save and next arguments should be coded last.
             Since the statements in the following group are mutually
             exclusive in the same argument, only the last one coded
             will be honored if they appear consecutively:
             - SAVE SAVE2 PRINT NEXT SKIP -
.subsection 'Examples'
             The following job step will print all scheduler
             messages for a one hour period from a system log that
             has been copied to a cataloged gdg tape.  Assume that
             on this system all OS/VS messages begin in position 25
             of the system log records.
        //A EXEC PGM=LOGSCAN
        //PRINT DD SYSOUT=A
        //LOG DD DSN=HISTORY.SYSVLOG(-3),DISP=SHR
        //SYSIN DD *
         TIME=2145,2245
         MARGIN=25
         DATA='IEF',ABBR
        /*
             The following will print a condensed version of a
             superzap dump showing only lines containing VOLSTAT
             SVC instructions and the CSECTS in which they are found.
        //A EXEC PGM=AMASPZAP
        //SYSLIB DD DSN=SYS1.LPALIB,DISP=SHR
        //SYSPRINT DD DSN=&&TEMP,UNIT=SYSDA,DISP=(NEW,PASS),
        // SPACE=(TRK,(10,10)),DCB=(RECFM=FBA,LRECL=121,BLKSIZE=1210)
        //SYSIN DD *
         DUMPT IEFW21SD ALL
        //B EXEC PGM=LOGSCAN
        //PRINT DD SYSOUT=A
        //LOG DD DSN=&&TEMP,DISP=(OLD,DELETE)
        //SYSIN DD *
         DATA='0A5B',WORD
         /
         MARGIN=76
         DATA='CSECT'
         SAVE
        /*
             The following step will print all references to
             a certain register name, except in comment statements,
             from a member of a macro library.  Only a certain range
             of sequence numbers is of interest.
        //A EXEC PGM=LOGSCAN
        //PRINT DD SYSOUT=A
        //LOG DD DSN=SYS1.AMODGEN(IECINT),DISP=SHR
        //SYSIN DD *
         START=48000000,STOP=52000000
         MARGIN=16,66
         DATA='UCBREG',WORD
         MARGIN=1
         NOT='*'
        /*
             The following will print all references to volume DLIB01
             for a 16-day period from an accumulated LOGREC history
             data set.  MDR records will be skipped.
        //EVENT EXEC PGM=IFCEREP1,
        // PARM=('EVENT,HIST,ACC=N,TABSIZE=500K',
        // 'DATE=(78276,78291),LINECT=60')
        //EREPPT   DD DCB=BLKSIZE=6384,DISP=(,PASS),UNIT=SYSDA,
        // DSN=&&TEMP,SPACE=(TRK,(500,250),RLSE)
        //TOURIST  DD SYSOUT=A,DCB=BLKSIZE=1995
        //DIRECTWK DD UNIT=(SYSDA,2),SPACE=(CYL,(50,20))
        //ACCIN    DD DSN=LOGREC.HISTORY(-0),DISP=SHR
        //SCAN EXEC PGM=LOGSCAN
        //LOG DD DSN=&&TEMP,DISP=(OLD,DELETE)
        //PRINT DD SYSOUT=A
        //SYSIN DD *
         DATA='DLIB01'
         MARGIN=22
         NOT='MDR-DAS'
         /
         MARGIN=1
         DATA='DATE'
         SAVE
             The following will print a list of all members of a load
             library that contain CSECTS assembled by VS1 assembler
             version 1.01.
        //IDRLIST EXEC PGM=AMBLIST,REGION=180K
        //SYSLIB DD DSN=SYS1.TELCMLIB,DISP=SHR
        //SYSPRINT DD DSN=&&TEMP,DISP=(,PASS),UNIT=SYSDA,
        // SPACE=(CYL,(5,5)),DCB=BLKSIZE=6413
        //SYSIN DD *
         LISTIDR OUTPUT=ALL
        //SCAN EXEC PGM=LOGSCAN
        //PRINT DD SYSOUT=A
        //LOG DD DSN=&&TEMP,DISP=(OLD,DELETE)
        //SYSIN DD *
         MARGIN=24
         DATA='5741'
         MARGIN=49
         AND='01.01'
         /
         MARGIN=10
         DATA='------'
         SAVE
         DATA='MEMBER'
         SAVE2
.subsection 'TSO'
             To facilitate the use of LOGSCAN from a terminal,
             specify 'TSO' in the parm field when calling the program.
             This will bypass the listing of control statements as
             they are entered, and will cause prompting messages at
             the start of the run and permit re-entering invalid
             control statements.
             The following CLIST can be added as a member of the
             sysproc data set and used as a command to invoke LOGSCAN.
        PROC 1 DATASETNAME
        ALLOCATE FILE(LOG) DATASET(&DATASETNAME.) SHR
        ALLOCATE FILE(PRINT) DATASET(*)
        ALLOCATE FILE(SYSIN) DATASET(*)
        CALL 'AOST.LOAD(LOGSCAN)' 'TSO'
.subsection 'Symbolic Variables'
             The use of symbolic variables in a canned routine
             allows frequently used routines to be easily modified.
             The symbolic variables in the procedure are defined as
             one- to eight-character names preceded by an ampersand.
             The first character must be alphabetic, and the following
             characters may be alphanumeric.  If the field following
             the symbol is alphanumeric, the symbol must be terminated
             with a period.  If a period is desired following the
             symbol, two periods must be coded.  Default values for
             the symbols can be established by providing set
             statements in the procedure.  Only the first definition
             of a symbolic value is effective, so the default value
             coded in the procedure will be ignored if a set statement
             is provided by the user.  The SET statement must appear
             before the statement(s) where the value is to be changed.
             The format of the SET statement is:
                  SET ssssssss=vvvvvvvvvvvv
             where ssssssss is the symbolic name without the ampersand
             and vvvvvvvvvvvv is the variable data to replace it.
             The variable data may not contain blanks, although
                  SET ssssssss=
             may be used to nullify the symbol.
             For example, the following statements -
                  SET MARG1=27
                  SET MARG2=,44
                  SET MARG2=
                  MARGIN=&MARG1&MARG2     START AT POSITION &MARG1..
             Would be evaluated as
                  MARGIN=27,44    START AT POSITION 27.
