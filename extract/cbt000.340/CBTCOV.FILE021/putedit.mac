.section 'PUTEDIT'
.ix PUTEDIT
.ix Programs PUTEDIT
.subsection 'Introduction'


 An optional  PUTEDIT program  is available  on the  program update
 tape (PUT).  This program, provides selectable printing of PTF
 coverletters by SREL, FMID,  component ID,  or PTF number.  It also
 provides selectable copying of the PUT to either tape  or a disk
 dataset. To obtain detailed instructions, use the docprint JCL provided
 in the 'PUT memo to users', specifying SREL=EDIT,TYPE=ALL.

 PUTEDIT can be used to perform one or more of the following functions
 on the program update tape by SREL, FMID, component ID, or PTF number.


   1. Duplicate  a PUT  to another tape  with the option  to copy  all
      or selected PTF's from file one (PTF file).

   2.  Create a  disk dataset  of PTFs  with the  option to  copy all
      or selected PTF's from file one.

   3. Print any or all PTF coverletters from file one. The printed
      output will be in ascending PTF number sequence.


.subsection 'Control statements'


   PUTEDIT  is  controlled   by  the  'COPYPTF'  and   'PRNTCVR' control
   statements.  There  may be  multiple control  statements and they may
   appear in any order in the control  dataset or WTOR input stream.
   The control statement  must be the first  parameter on each control
   input record followed by  one or more valid keywords.  The keywords
   may not extend  beyond column  72  nor may  they be continued  onto
   the  next control input record.   Rather, they must be coded  on
   another control input record, following its control statement.  If a
   keyword specifies more than one item, the list of items must be
   separated by commas and the entire list  enclosed in parenthesis.  If
   the  'COPYPTF' option is used, printing may also be accomplished  by
   adding the 'PRINT' keyword.

     ***  Note-  PUTEDIT  merges all  input control  statements prior to
                 processing its  output. If  separate printouts  for
                 each selection are  desired, multiple  jobsteps must be
                 run.  All coverletters will be printed in ascending PTF
                 number sequence.


.subsection 'Sample JCL'


      //GO       EXEC PGM=PUTEDIT
      //STEPLIB  DD DSN=AOST.LOAD,DISP=SHR
      //TAPEIN   DD UNIT=TAPE,LABEL=(1,NL),DISP=(OLD,PASS),
      //         DSN=PUT8010,VOL=SER=PTFTPE
      //TAPEOUT  DD UNIT=TAPE,LABEL=(1,NL),DISP=(NEW,KEEP),
      //         DSN=NEWTAPE,VOL=SER=NEWTAPE
      //SYSOUT   DD SYSOUT=A,DCB=BLKSIZE=133
      //SYSPRINT DD SYSOUT=A,DCB=BLKSIZE=133
      //WTOLOG   DD SYSOUT=A,DCB=BLKSIZE=133
      //WTOREPLY DD *
                    .        (Input
                    .              Control
                    .                      Cards)
      *CONSOLE        (indicates switch to WTOR mode for control input)
      /*
      //

         ***  Note-  the  files  parameter in  exec  card  need  only
                     be specified when copying tape to tape, then the
                     number of files to be copied should be specified.


.subsection 'Input data definitions'

.subsub 'TAPEIN DD'


         The  TAPEIN  DD  statement  is always  required  to  define
         the sequential input dataset that contains the PTFs you wish to
         copy or print.


.subsub 'WTOREPLY DD'


         The WTOREPLY DD statement defines  the control dataset.  If
         this DD  statement is  omitted  or '*CONSOLE'  is  found
         starting  in column 1  of a  record in the  control dataset
         the rest  of the control input is obtained via  WTOR's to the
         operator's CONSOLE.  A 'HELP' function is provided when
         processing in CONSOLE mode.


.subsub 'SYSPRINT DD'


         The SYSPRINT  DD statement must always  be provided to  define
         a message dataset. Processing statistics are  also written to
         this dataset.


.subsub 'WTOLOG DD'


         The WTOLOG DD statement defines an optional message dataset
         used to log all control input.

.subsub 'TAPEOUT DD'


         The TAPEOUT DD statement defines an  output dataset to which
         the PUT  is copied.   This  DD is  required  whenever the
         'COPYPTF' option is  invoked. If both the  TAPEIN and the
         TAPEOUT devices are magnetic  tape the  number of  files
         specified  in the  EXEC statement are copied. Otherwise only
         file one is copied.  If the output device  is a  magnetic tape,
         a  non-labeled tape  must be specified.  If a BLKSIZE is
         specified on this statement, it will be used.  Otherwise, the
         default BLKSIZE is 7200.

.subsub 'SYSOUT DD'


         The  SYSOUT  DD  statement   defines  a  sequential
         coverletter dataset.  This DD  is required whenever the
         'PRNTCVR' option is invoked or whenever the 'COPYPTF'  option,
         with 'PRINT' keyword, is invoked.  This file uses machine
         carriage control characters.


.subsub '  SYSUT1 and SYSUT2 DD's'


         Both DD statements define temporary work datasets.

.subsection 'Duplicating a PUT'


     If both TAPEIN and TAPEOUT devices are magnetic tape, the entire
     PUT can be  duplicated to the  output tape  via the COPYPTF
     option. The 'FILES' parameter  in the  PUTEDIT JCL  also allows
     the ability  to specify the  number of  files copied.  File  one
     may  be selectively copied, but the  remaining files are simply
     duplicated. The PUTEDIT program requires that file one be comprised
     of PTF's.


.subsection 'Creating a disk dataset'


     If the  TAPEIN device  is magnetic  tape and  the TAPEOUT  device
     is disk, the first  file (the PTF file)  is the only file
     processed. A disk  dataset can  be created  from file  one  of the
     PUT with  the 'COPYPTF' option.


.subsection 'Copying the disk dataset'


     If the TAPEIN  device is disk, the referenced dataset  is assumed
     to be a  disk dataset created  by PUTEDIT. A  new tape or  another
     disk dataset can be created with the 'COPYPTF' option.



.subsection 'Printing coverletters'


     The TAPEIN  file is assumed to  be either a  PUT PTF file or  a
     disk dataset created by PUTEDIT from  which PTF coverletters are
     selected to  the SYSOUT  file.  If  'PRNTCVR'  options are  the
     only  options specified for file one processing, no TAPEOUT device
     is required.


.subsection 'Sample control input'


.subsub 'COPYPTF control statement'

 The format and function of the COPYPTF keywords is as follows-

   A. COPYPTF ALL                                  copies all PTFs.

   B. COPYPTF SREL=rrrr                      copies PTFs that verify
      COPYPTF SREL=(rrrr,rrrr,....)                For SREL(s) rrrr.

   C. COPYPTF FMID=fffffff                         copies PTFs for
      COPYPTF FMID=(ffffff,fffffff,.......)        Fmid(s) fffffff.

   D. COPYPTF COMPID=cccc-ccccc                    copies PTFs for
      COPYPTF COMPID=(cccc-ccccc,cccc-ccccc,...)   Component ID(s)
                                                   cccc-ccccc.

   E. COPYPTF PTF=nnnnnnn                       copies PTF(s) nnnnnnn.
      COPYPTF PTF=(nnnnnnn,nnnnnnn,nnnnnnn,....)

 *** Note - if the print option is used after any of the above
       statements, the coverletters of each PTF copied will also be
       printed.  (Example - COPYPTF SREL=rrrr,print -  will print all
       coverletters verifying for the SREL=rrrr.)


.subsub 'PRNTCVR control statement'


 The format and function of the PRNTCVR keywords is as follows-

   A. PRNTCVR all                                  prints all PTFs.

   B. PRNTCVR SREL=rrrr                         prints PTFs that verify
      PRNTCVR SREL=(rrrr,rrrr,....)                For SREL(s) rrrr.

   C. PRNTCVR FMID=fffffff                         prints PTFs for
      PRNTCVR FMID=(ffffff,fffffff,.......)        Fmid(s) fffffff.

   D. PRNTCVR COMPID=cccc-ccccc                    prints PTFs for
      PRNTCVR COMPID=(cccc-ccccc,cccc-ccccc,...)   Component ID(s)
                                                   cccc-ccccc.

   E. PRNTCVR PTF=nnnnnnn                      prints PTF(s) nnnnnnn.
      PRNTCVR PTF=(nnnnnnn,nnnnnnn,nnnnnnn,....)


.subsection 'Control statement examples'


   1. Example 'SREL=rrrr'

        Copy Z038 PTFs, print their coverletters.
        Print coverletters verifying for P004.
                  COPYPTF SREL=Z038,PRINT
                  PRNTCVR SREL=P004

   2. Example 'FMID=fffffff'

        COPYPTF FMID=EJE1102          copies PTFs for FMID EJE1102.


   3. Example 'COMPID=cccc-ccccc'

        PRNTCVR COMPID=5752-SC100     print coverletters for PTFs that
                                      specify component ID 5752-SC100.

   4. Example 'PTF=(nnnnnnn,nnnnnnn)'

        PRNTCVR PTF=(UZ34567,UP34567)  print coverletters for PTF
                                       UZ34567 and PTF UP34567.

   5. Example of multiple keywords

        PRNTCVR SREL=(Z038,P004),COMPID=5752-SC100,PTF=UP14113 print
                                       coverletter for PTF UP14113 and
                                       for any PTFs that specify COMPID
                                       5752-SC100 or verify for Z038 or
                                       P004.

     ***  Note-  PUTEDIT  merges all  input control  statements prior
                 to processing its output. Therefore,  if separate
                 printouts for each  selection are desired, multiple
                 jobsteps must be run. PUTEDIT prints all coverletters
                 in ascending PTF number sequence.


.subsection 'Return code meanings'


   00 - Successful completion with no error messages.

   04 - Successful completion - at least one warning message.

   08 - At least one control card error - processing continued.

   12 - Data or I/o error - processing terminated.

   16 - Invalid parm, missing DD, or open error -processing terminated.

   20 - SYSPRINT DD missing or not opened - processing terminated.
