.section '$FINDCB - Find Control Block'
.ix $FINDCB
.ix Macros $FINDCB
.sp 2
.subsection 'Description'
.sp 2
         This macro may be used to obtain the address of any or all of
         the control blocks defined in the calling prototype statment.
         By giving a register (either absolute or symbolic) for any of
         the specified keyword parameters, the macro instruction will
         will return the requested control block in that register. No
         registers other than those specified are destroyed.  The fetch
         chain can be started at a given block in the chain by
         specifying the register pointing to the control block enclosed
         in brackets.

.subsection 'Syntax Example'

         A TIOT request expands to the following

         $FINDCB  TIOT=X1         CALL
         L     X1,x'21C'          LOAD CURRENT TCB
         L     X1,x'0C'(,X1)      LOAD TIOT
         $FINDCB  TCB=(X3),TIOT=X1     CALL
         L     X1,x'0C'(,X3)      LOAD TIOT

           This macro was created 20 February, 1979 and the last update
           for this macro was 07 June, 1979.

.subsection 'Control Blocks'

         ASCB   = ASCB, pointed to from x'224'
         ASID   = ASID as found in the ASCB
         ASVT   = ASVT pointed to by the CVT
         ASXB   = ASXB pointed to by ASCB
         CVT    = CVT, address obtained from x'10'
         FIX    = address of page services (from CVT)
         JSCB   = Active JSCB from either the TCB or TCBINIT.
         LCT    = Initiator LCT, obtained either from the TCBINT R4
                  or the JSCB qmanager pointer (minus an offset)
         OSACT  = OS ACT, pointed to by the OS JCT
         OSJCT  = OS JCT, pointed to by the LCT
         OSSCT  = OS SCT, pointed to by the LCT
         RB     = RB, pointed to by the TCB
         SJB    = SJB, pointed to by the SSIB (see JSCB for chain)
         SSIB   = SSIB, pointed to by the JSCB (see JSCB for chain)
         TCB    = the TCB pointed to by location x'21C'
         TCBINT = the TCB chained from the ASCB, ASXB. When this TCB
                  is requested, then the JSCB and LCT chains (if
                  requested) are started from this reference.
                  If this entry is not included, then the JSCB,
                  LCT chains will start from the TCB from x'21C'.
         TCBRCT = The TCB for the region control, pointed to by ASXB
         TCBSTC = the TCB for the STC, chained from the RCT TCB.
         TCT    = SMF timing control table, pointed to by either
                  the initiator TCB or the step TCB.
         TCTI   = The io portion of the TCT.
         TIOT   = TIOT For the TCB, either step or TCB init.
         TQE    = The TQE, pointed to from the TCB

.subsection 'Control Block Chains'

         The following chains are used in this macro;

     Chain 1                 off ASCB old
         x'224'
         28×
          ASCB----š
         27×26  25×26
          ASID   ASXB
                23×24
                TCBRCT
                21×22
                TCBSTC
                19×20
                TCBINT---š------š------š
                18× 7  17× 7  14× 7  6 × 7
                 TIOT   TCT    JSCB   LCT-----š
                       15×16  12×13  5 × 4  3 × 4
                        TCTI   SSIB  OSSCT  OSJCT
                              10×11         1 × 2
                               SJB          OSACT
                              8 × 9
                               JCT

     Chain 2                 off TCB old
         x'21C'
         21×
          TCB-----š------š------š------š
         20×14  19×14  18×14  17×14  13×14
          RB     TQE    TIOT   TCT    JSCB----š
                              15×16  12× 7  6 × 7
                               TCTI   SSIB   LCT-----š
                                     10×11  5 × 4  3 × 4
                                      SJB   OSSCT  OSJCT
                                     8 × 9         1 × 2
                                      JCT          OSACT

     Chain 3                 off CVT
          x'10'
         8 ×
          CVT-----š------š
         7 × 5  6 × 5
          FIX    ASVT           š



   The symbolic register on the left hand side of the '×' is used to
    indicate whether or not the load instruction is desired.
   The chain is established from last to first using the continuing
    (longer) chains to provide the nodes for the branches.
   To add a new entry, or a chain of entries:
    a. Locate the position where the new entry belongs on the
       chaining diagram.
    B. If the addition is an extension of an existing chain then
       establish new symbolic registers for the new instructions
       beginning with the end of the chain and working forward.
    C. If the addition is a parallel chain, then use the right hand
       symbolic register number as the right hand number at the
       beginning of the new chain. Finish numbering the rest of the
       chain from last to first.  Follow the diagram for the SSIB to
       SJB to JCT as an example.  (&S7 is the common register of the
       JSCB block. The value of &S13 will equal the value of &S7 if
       the chain is loaded from the TCB. &S13 will be null and &S7
       will be the register of the JSCB if the JSCB is provided as
       a starting address.)
    D. Code the proper SETC and AIF statements to set the new symbolic
       registers.  Use the existing statements as a guide.  Also build
       up the conditional load statements. The new code should be placed
       in the macro in the logical relationship to the rest of the
       chains.  That is put the code between the instructions that the
       chaining diagram indicate.
