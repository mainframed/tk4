./ ADD NAME=SHAREINT                               12SEP93 19.23 --
SHAREINT TITLE '-   I N I T I A L I Z E   F O R   S H A R E X I T'
         SPACE 3
***********************************************************************
***********************************************************************
**                                                                   **
**                         SHAREINT                                  **
**                         --------                                  **
**                                                                   **
**  Module SHAREINT is the installation program for the Panel Exit   **
**  SHAREXIT. This program may be invoked out of a Primary Option    **
**  Panel or out of a program.                                       **
**  from a panel.                                                    **
**                                                                   **
**  From a Primary Option Panel:                                     **
**                                                                   **
**    Add to the )INIT section (at the bottom)                       **
**                                                                   **
**         IF  (&DONE = &Z)                                          **
**             &SAVECMD = &ZCMD                                      **
**             &DONE = 1                                             **
**             &ZCMD = 'Z'                                           **
**             .RESP = ENTER                                         **
**         ELSE                                                      **
**             IF  (&DONE = 1)                                       **
**                 &DONE = 2                                         **
**                 IF  (&SAVECMD ^= &Z)                              **
**                     &ZCMD = &SAVECMD                              **
**                     .RESP = ENTER                                 **
**                                                                   **
**    Add to the &ZSEL= statement in the )PROC section               **
**                                                                   **
**         Z,'PGM(SHAREINT)'                                         **
**                                                                   **
**                                                                   **
**  From a CLIST:                                                    **
**                                                                   **
**    ISPEXEC SELECT PGM(SHAREINT)                                   **
**                                                                   **
**                                                                   **
**  From a Source Program:                                           **
**                                                                   **
**    CALL 'SHAREINT'.                                               **
**                                                                   **
**                                                                   **
**  This program is supplied by Binyamin Dissen of GOAL Systems,     **
**  phone number 213-578-1147.                                       **
**                                                                   **
**  This program is supplied AS IS with no warranties expressed or   **
**  implied either by Binyamin Dissen or GOAL Systems International. **
**  This program has been tested on a 3090 running MVS SP3.1 with    **
**  ISPF 3.1 but this may not work in your shop. The author will be  **
**  glad to take questions or correct the program at the above phone **
**  number.                                                          **
**                                                                   **
***********************************************************************
***********************************************************************
         EJECT ,
SHAREINT CSECT
         SPACE 1
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE 1
         SAVE  (14,12),,SHAREINT_V02_R00_&SYSDATE._&SYSTIME
         SPACE 1
         LR    R12,R15
         USING SHAREINT,R12
         SPACE 1
         LA    R1,SAVEAREA
         ST    R13,4(,R1)
         ST    R1,8(,R13)
         LR    R13,R1
         SPACE 1
         LINK  EP=ISPLINK,                                             +
               PARAM=(=CL8'VDEFINE',    VDEFINE                        +
               =CL8'SHAREXIT',                 THE                     +
               SHAREXIT,                          EXIT                 +
               =C'FIXED ',                            ADDRESS          +
               =A(L'SHAREXIT)),                              VARIABLE  +
               VL=1,MF=(E,SPFPARMS)
         SPACE 1
         LOAD  EP=SHAREXIT
         ST    R0,SHAREXIT              BRING THE EXIT INTO MEMORY
         SPACE 1
         LINK  EP=ISPLINK,              SAVE                           +
               PARAM=(=CL8'VPUT',           VARIABLE                   +
               =CL8'SHAREXIT',                      IN LONGER          +
               =C'SHARED '),                                 LIFE      +
               VL=1,MF=(E,SPFPARMS)                              AREA
         SPACE 1
         L     R13,4(,R13)
         RETURN (14,12),RC=0
         SPACE 3
         LTORG ,
         SPACE 1
SAVEAREA DC    18F'0'
         SPACE 1
SHAREXIT DC    F'0'
         SPACE 1
SPFPARMS DS    10F
         SPACE 3
         END   ,
./ ADD NAME=SHAREXIT                               12SEP93 19.23 --
SHAREXIT TITLE '-   I S P F   P A N E L   E X I T'
         SPACE 3
***********************************************************************
***********************************************************************
**                                                                   **
**                         SHAREXIT                                  **
**                         --------                                  **
**                                                                   **
**  Module SHAREXIT is an ISPF Panel Exit. This exit is established  **
**  by executing program SHAREINT. This exit has several functions   **
**  to obtain system information and perform extended validation     **
**  from a panel.                                                    **
**                                                                   **
**  PANEXIT((string),PGM,&SHAREXIT,MSG=message)                      **
**                                                                   **
**    DSNEXIST:  Check existense of a dataset in the Catalog or on   **
**               a specific Volume.                                  **
**                                                                   **
**          PANEXIT((DSNEXIST,dsname{,volser{,rc}}),PGM,&SHAREXIT)   **
**               DSNAME - Dataset name to check                      **
**               VOLSER - Optional Volume to check. If blank, it is  **
**                        ignored. Must be specified (or blank) if   **
**                        RC is desired.                             **
**               RC     - Return code of Volume/Catalog check. If    **
**                        not specified and the function fails an    **
**                        error result will be returned. The MSG=    **
**                        parameter should be specified in order to  **
**                        generate a usefull error message. This     **
**                        variable must be initialized to '00' in    **
**                        the Panel before the PANEXIT statement.    **
**                                                                   **
**    DSNFIND:   Return the Volume for a Cataloged Dataset.          **
**                                                                   **
**          PANEXIT((DSNFIND,dsname,volser{,rc}),PGM,&SHAREXIT)      **
**               DSNAME - Dataset name to find                       **
**               VOLSER - Variable in which the Volume is returned.  **
**                        Should be initialized to '??????' before   **
**                        the PANEXIT statement.                     **
**               RC     - Return code of Catalog check. If not       **
**                        specified and the function fails an        **
**                        error result will be returned. The MSG=    **
**                        parameter should be specified in order to  **
**                        generate a usefull error message. This     **
**                        variable must be initialized to '00' in    **
**                        the Panel before the PANEXIT statement.    **
**                                                                   **
**    GETVARS:   Return System Information.                          **
**                                                                   **
**          PANEXIT((GETVARS,names,...),PGM,&SHAREXIT)               **
**               NAMES  - System variables to obtain. The variables  **
**                        must be initialized to 'xxxxxxxx' in the   **
**                        Panel before the PANEXIT statement. The    **
**                        following variables are supported.         **
**                           SMFID   - SMF System ID                 **
**                           CPUID   - CPU Serial Number             **
**                           SYSNAME - GRS System ID                 **
**                                                                   **
**    REVERSE:   Reverse a string.                                   **
**                                                                   **
**          PANEXIT((REVERSE,string),PGM,&SHAREXIT)                  **
**               STRING - Variable to reverse, i.e., move the left   **
**                        part to the right.                         **
**                                                                   **
**    SHOWALL:   Display Panel Variables.                            **
**                                                                   **
**          PANEXIT((SHOWALL,fld1,fld2,...),PGM,&SHAREXIT)           **
**               FLDn   - Field to be displayed. It will be TPUT'ed  **
**                        to the terminal as NAME = 'value'.         **
**                                                                   **
**                                                                   **
**  This program is supplied by Binyamin Dissen of GOAL Systems,     **
**  phone number 213-578-1147.                                       **
**                                                                   **
**  This program is supplied AS IS with no warranties expressed or   **
**  implied either by Binyamin Dissen or GOAL Systems International. **
**  This program has been tested on a 3090 running MVS SP3.1 with    **
**  ISPF 3.1 but this may not work in your shop. The author will be  **
**  glad to take questions or correct the program at the above phone **
**  number.                                                          **
**                                                                   **
***********************************************************************
***********************************************************************
         EJECT ,
         MACRO
         FUNCNTRY &LABEL,&MIN=1,&MAX=X'7FFF'
         AIF   (T'&LABEL EQ 'O').DSECT
         DC    CL8'&LABEL'
         DC    AL2(&LABEL-&SYSECT)
         DC    AL2(&MIN)
         DC    AL2(&MAX)
         DC    0F'0'
         MEXIT
.DSECT   ANOP  ,
FUNCNTRY DSECT
FUNCNAME DS    CL8
FUNCOFF  DS    AL2
FUNCMIN  DS    H
FUNCMAX  DS    H
FUNCNEXT DS    0F
         MEND
         EJECT
SHAREXIT CSECT ,
         SPACE 1
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE 1
         SAVE  (14,12),,SHAREXIT_V02_R00_&SYSDATE._&SYSTIME
         SPACE 1
         LR    R12,R15
         USING SHAREXIT,R12
         SPACE 1
         LR    R11,R1               SAVE PARMLIST POINTER
         SPACE 1
         LA    R2,WORKAREA          CLEAR
         LA    R3,#AMT                   THE
         XR    R14,R14                      WORK
         XR    R15,R15                          AREA
         MVCL  R2,R14
         SPACE 1
         LA    R1,SAVEAREA          CHAIN
         ST    R13,4(,R1)                SAVE
         ST    R1,8(,R13)                    AREAS
         LR    R13,R1
         SPACE 1
         MVC   DSNAME,BLANKS
         MVC   VOLSER,BLANKS
         SPACE 1
         L     R10,20(,R11)         FETCH POINTER TO NAMES
         L     R9,24(,R11)          FETCH POINTER TO VALUE LENGTHS
         L     R8,28(,R11)          FETCH POINTER TO VALUE BUFFER
         L     R7,16(,R11)          FETCH POINTER TO PARAMETER COUNT
         L     R7,0(,R7)            FETCH PARAMETER COUNT
         BCTR  R7,0                 DECREMENT FOR COMMAND
         SPACE 1
*              FIND PANEL EXIT COMMAND ROUTINE
         SPACE 1
         LA    R6,FUNCLIST          POINT TO FUNCTION TABLE
         USING FUNCNTRY,R6
FUNCLOOP DS    0H
         CLC   FUNCNAME,0(R10)      DO WE HAVE THE FUNCTION?
         BE    GOTFUNC                YES, GO AND PROCESS
         LA    R6,FUNCNEXT
         CLI   FUNCNAME,X'FF'       END OF THE TABLE?
         BNE   FUNCLOOP               NO, KEEP LOOKING
         SPACE 1
         B     ERROR                UNKNOWN FUNCTION
         SPACE 1
GOTFUNC  DS    0H
         CH    R7,FUNCMIN           ENOUGH PARAMETERS?
         BL    ERROR                  NO, ERROR
         CH    R7,FUNCMAX           TOO MANY PARAMETERS?
         BH    ERROR                  YES, ERROR
         LH    R15,FUNCOFF          GET ROUTINE OFFSET
         B     SHAREXIT(R15)        GO TO IT
         SPACE 1
FUNCLIST DC    0D'0'
         FUNCNTRY DSNEXIST,MIN=1,MAX=3
         SPACE 1
         FUNCNTRY DSNFIND,MIN=2,MAX=3
         SPACE 1
         FUNCNTRY GETVARS
         SPACE 1
         FUNCNTRY REVERSE,MIN=1,MAX=1
         SPACE 1
         FUNCNTRY SHOWALL
         SPACE 1
         DC    16X'FF'
         EJECT ,
*              DSNEXIST: VERIFY DSNAME IS IN CATALOG/ON VOLUME
         SPACE 1
DSNEXIST DS    0H
         LA    R1,1
         BAL   R14,GETPARM          POSITION TO DSNAME
         SPACE 1
         LTR   R15,R15              ZERO LENGTH DSNAME?
         BZ    ERROR                  ZERO LENGTH DSNAME
         SPACE 1
         LR    R0,R15               COPY DSNAME LENGTH
         BAL   R14,GETDSN           GET THE DSNAME
         SPACE 1
         LA    R1,2
         BAL   R14,GETPARM          POSITION TO VOLSER
         SPACE 1
         LTR   R15,R15              ANY VOLSER?
         BZ    DSNEXIS1               NO VOLSER SUPPLIED
         C     R15,=A(L'VOLSER)     MAKE SURE IT FITS
         BH    ERROR                  IT DOESN'T
         SPACE 1
         BCTR  R15,0                DECREMENT FOR EXECUTE
         MVC   VOLSER(*-*),0(R1)    MOVE MODEL
         EX    R15,*-6              COPY DSNAME TO WORK AREA
         SPACE 1
DSNEXIS1 DS    0H
         CLC   VOLSER,BLANKS        IS IT A CATALOG FUNCTION?
         BNE   DSNEXIS2               NO, CHECK SPECIFIC VOLSER
         SPACE 1
         MVC   OCAMLST(LCAMLST),ILOCATE  CATALOG FUNCTION
         LA    R0,DSNAME
         ST    R0,OCAMLST+4
         LA    R0,DSNWORK
         ST    R0,OCAMLST+12
         LOCATE OCAMLST             CHECK THE CATALOG
         SPACE 1
         B     DSNEXIS3
         SPACE 1
DSNEXIS2 DS    0H
         MVC   OCAMLST(LCAMLST),IOBTAIN
         LA    R14,DSNAME
         LA    R15,VOLSER
         LA    R0,DSNWORK
         STM   R14,R0,OCAMLST+4
         OBTAIN OCAMLST             CHECK THE VOLUME
         SPACE 1
DSNEXIS3 DS    0H
         LR    R5,R15               SAVE THE RETURN CODE
         LA    R1,3
         BAL   R14,GETPARM          POSITION TO RETURN CODE VARIABLE
         SPACE 1
         LTR   R1,R1                WAS RETURN CODE REQUESTED?
         BZ    DSNEXIS9               NO, RETURN MVS STATUS
         SPACE 1
         CH    R15,=H'255'          TOO BIG?
         BH    ERROR                  YES, RETURN ERROR CONDITION
         SPACE 1
         CH    R15,=H'2'            TOO SMALL?
         BL    ERROR                  YES, RETURN ERROR CONDITION
         SPACE 1
         CVD   R5,DWORD             LOCATE/CATALOG RETURN CODE
         BCTR  R15,0                DECREMENT FOR EX
         MVC   0(*-*,R1),BLANKS
         EX    R15,*-6              PAD THE FIELD WITH BLANKS
         SPACE 1
         UNPK  0(2,R1),DWORD+6(2)   GET THE RETURN CODE
         OI    1(R1),X'F0'          MAKE IT PRINTABLE
         SR    R5,R5                RETURN CODE IS AVAILABLE
         SPACE 1
DSNEXIS9 DS    0H
         LR    R15,R5               GET ISPF RETURN CODE
         B     NORMEXIT             RETURN WITH RESULTS
         EJECT ,
*              DSNFIND: RETURN VOLSER FOR DSNAME
         SPACE 1
DSNFIND  DS    0H
         LA    R1,1
         BAL   R14,GETPARM          POSITION TO DSNAME
         SPACE 1
         LTR   R15,R15              ZERO LENGTH DSNAME?
         BZ    ERROR                  ZERO LENGTH DSNAME
         SPACE 1
         LR    R0,R15               COPY DSNAME LENGTH
         BAL   R14,GETDSN           GET THE DSNAME
         SPACE 1
         LA    R1,2
         BAL   R14,GETPARM          POSITION TO VOLSER
         SPACE 1
         LTR   R15,R15              ANY VOLSER SLOT?
         BZ    ERROR                  NO, CANNOT EXECUTE
         C     R15,=A(L'VOLSER)     MAKE SURE IT FITS
         BL    ERROR                  IT DOESN'T
         SPACE 1
         BCTR  R15,0                DECREMENT FOR EX
         MVC   0(*-*,R1),BLANKS
         EX    R1,*-6               BLANK OUT THE VOLSER
         SPACE 1
         LR    R3,R1                POINT TO THE VOLSER AREA
         MVC   0(6,R3),=C'*NONE*'   PRESET THE VALUE
         SPACE 1
         MVC   OCAMLST(LCAMLST),ILOCATE  CATALOG FUNCTION
         LA    R0,DSNAME
         ST    R0,OCAMLST+4
         LA    R0,DSNWORK
         ST    R0,OCAMLST+12
         LOCATE OCAMLST             CHECK THE CATALOG
         SPACE 1
         LTR   R5,R15
         BNZ   DSNFIND2
         SPACE 1
         MVC   0(6,R3),DSNWORK+6    GET THE VOLSER
         SPACE 1
DSNFIND2 DS    0H
         LR    R5,R15               SAVE THE RETURN CODE
         LA    R1,3
         BAL   R14,GETPARM          POSITION TO RETURN CODE VARIABLE
         SPACE 1
         LTR   R1,R1                WAS RETURN CODE REQUESTED?
         BZ    DSNFIND9               NO, RETURN MVS STATUS
         SPACE 1
         CH    R15,=H'255'          TOO BIG?
         BH    ERROR                  YES, RETURN ERROR CONDITION
         SPACE 1
         CH    R15,=H'2'            TOO SMALL?
         BL    ERROR                  YES, RETURN ERROR CONDITION
         SPACE 1
         CVD   R5,DWORD             LOCATE/CATALOG RETURN CODE
         BCTR  R15,0                DECREMENT FOR EX
         MVC   0(*-*,R1),BLANKS
         EX    R15,*-6              PAD THE FIELD WITH BLANKS
         SPACE 1
         UNPK  0(2,R1),DWORD+6(2)   GET THE RETURN CODE
         OI    1(R1),X'F0'          MAKE IT PRINTABLE
         SR    R5,R5                RETURN CODE IS AVAILABLE
         SPACE 1
DSNFIND9 DS    0H
         LR    R15,R5               GET ISPF RETURN CODE
         B     NORMEXIT             RETURN WITH RESULTS
         EJECT ,
*              GETVARS: RETURN SYSTEM VARIABLES
         SPACE 1
GETVARS  DS    0H
         LA    R5,1
         SPACE 1
GETVARS1 DS    0H
         LR    R1,R5
         BAL   R14,GETPARM          POSITION TO PARAMETER
         SPACE 1
         LTR   R1,R1                ALL VARIABLES PROCESSED?
         BZ    GETVARS9               YES, ALL DONE
         SPACE 1
         LTR   R15,R15              ZERO LENGTH PARAMETER?
         BZ    ERROR                  NO CAN DO
         SPACE 1
GETVARS2 DS    0H
         CLC   =C'CPUID ',0(R2)     GETTING CPUID?
         BNE   GETVAR2A               NO, CHECK NEXT
         SPACE 1
         L     R3,PSAPCCAV-PSA      GET PCCA ADDRESS
         LA    R3,PCCACPID+2-PCCA(,R3)  CPU SERIAL
         LA    R0,6                 LENGTH OF VALUE
         B     GETVARS3
         SPACE 1
GETVAR2A DS    0H
         CLC   =C'SMFID ',0(R2)     GETTING SMFID?
         BNE   GETVAR2B               NO, CHECK NEXT
         SPACE 1
         L     R3,CVTPTR            GET CVT ADDRESS
         L     R3,CVTSMCA-CVTMAP(,R3)  SMF CONTROL AREA
         LA    R3,SMCASID-SMCABASE(,R3)  POINT TO VALUE
         LA    R0,L'SMCASID         LENGTH OF THE SYSID
         B     GETVARS3
         SPACE 1
GETVAR2B DS    0H
         CLC   =C'SYSNAME ',0(R2)   GETTING SYSTEM NAME?
         BNE   GETVAR2C               NO, CHECK NEXT
         SPACE 1
         L     R3,CVTPTR            GET CVT ADDRESS
         LA    R3,CVTSNAME-CVTMAP(,R3)  SYSTEM NAME FIELD
         LA    R0,L'CVTSNAME        LENGTH OF THE SYSNAME
         B     GETVARS3
         SPACE 1
GETVAR2C DS    0H
         B     ERROR                UNKNOWN FIELD
         SPACE 1
GETVARS3 DS    0H
         CR    R0,R15               WILL VALUE FIT?
         BH    ERROR                  NO, REPORT THE ERROR
         SPACE 1
         LR    R14,R1               ADDRESS OF RESULT FIELD
         LR    R1,R0                LENGTH OF SOURCE FIELD
         LR    R0,R3                ADDRESS OF SOURCE FIELD
         ICM   R1,B'1000',BLANKS    PAD WITH BLANKS
         MVCL  R14,R0               RETURN THE VALUE
         SPACE 1
         LA    R5,1(,R5)            POINT TO NEXT NAME
         B     GETVARS1             AND TRY AGAIN
         SPACE 1
GETVARS9 DS    0H
         SR    R15,R15              ZERO RETURN CODE
         B     NORMEXIT             RETURN WITH RESULTS
         EJECT ,
*              REVERSE: REVERSE A STRING
         SPACE 1
REVERSE  DS    0H
         LA    R1,1
         BAL   R14,GETPARM          POSITION TO RESULT STRING
         SPACE 1
         CH    R15,=H'1'            LENGTH OF STRING TO REVERSE
         BNH   REVERSE9               STRING IS ALREADY REVERSED
         SPACE 1
         LA    R2,0(R15,R1)         POINT PAST THE STRING
         BCTR  R2,R0                POINT TO THE LAST CHARACTER
         SPACE 1
REVERSE1 DS    0H
         ICM   R15,B'1000',0(R1)    FETCH LEFT PART
         ICM   R15,B'0100',0(R2)    FETCH RIGHT PART
         STCM  R15,B'0100',0(R1)    STORE LEFT PART
         STCM  R15,B'1000',0(R2)    STORE RIGHT PART
         LA    R1,1(,R1)            UP LEFT POINTER
         BCTR  R2,0                 DECREMENT RIGHT POINTER
         CR    R1,R2                DID WE WRAP?
         BL    REVERSE1               NO, KEEP GOING
         SPACE 1
REVERSE9 DS    0H
         SR    R15,R15              ZERO RETURN CODE
         B     NORMEXIT             RETURN WITH RESULTS
         EJECT ,
*              SHOWALL: DISPLAY THE VARIABLES
         SPACE 1
SHOWALL  DS    0H
         LA    R5,1                 START WITH PARAMETER #1
         SPACE 1
SHOWALL1 DS    0H
         LR    R1,R5                CURRENT PARAMETER NUMBER
         BAL   R14,GETPARM          PICK IT UP
         SPACE 1
         LTR   R1,R1                ALL DONE?
         BZ    SHOWALL9               YES, GO AWAY
         SPACE 1
         MVC   LINE(8),0(R2)        COPY THE NAME
         MVC   LINE+8(4),=C' = '''
         SPACE 1
         LTR   R15,R15              DOES IT HAVE A VALUE?
         BNZ   SHOWALL2
         SPACE 1
         MVC   LINE+8+4-1(9),=C'*NOT-SET*'
         LA    R2,8+4-1+9
         B     SHOWALL3
         SPACE 1
SHOWALL2 DS    0H
         LA    R0,80-8-4-1-1
         CR    R15,R0
         BNH   *+4+2
         LR    R15,R0
         BCTR  R15,0
         MVC   LINE+8+4(*-*),0(R1)
         EX    R15,*-6
         LA    R0,C''''
         STC   R0,LINE+8+4+1(R15)
         LA    R2,8+4+1+1(R15)
         SPACE 1
SHOWALL3 DS    0H
         TPUT  LINE,(R2),EDIT,WAIT
         LA    R5,1(,R5)
         B     SHOWALL1
         SPACE 1
SHOWALL9 DS    0H
         SR    R15,R15
         B     NORMEXIT
         EJECT ,
*              GET PARAMETER ENTRY
         SPACE 1
*              ENTRY   R1 = PARAMETER NUMBER
*              EXIT    R1 = PARAMETER ADDRESS (OR ZERO)
*                     R15 = PARAMETER LENGTH
*                      R2 = PARAMETER NAME
         SPACE 1
GETPARM  DS    0H
         LR    R0,R1                COPY PARAMETER NUMBER
         LR    R2,R9                POSITION TO LENGTH ARRAY
         SPACE 1
         SR    R15,R15              ASSUME NOT FOUND
         SR    R1,R1                ASSUME NOT FOUND
         CR    R0,R7                DOES THIS PARAMETER EXIST?
         BHR   R14                    NO, RETURN IMMEDIATLY
         SPACE 1
         LR    R1,R8                POSITION TO BUFFER
         SPACE 1
GETPARM1 DS    0H
         A     R1,0(,R2)            ADD LENGTH OF PREVIOUS PARM
         LA    R2,4(,R2)            POINT TO NEXT LENGTH
         BCT   R0,GETPARM1          AND KEEP SEARCHING
         SPACE 1
         L     R15,0(,R2)           LENGTH OF CURRENT PARM
         SPACE 1
         SR    R2,R9                OFFSET IN LENGTH ARRAY
         AR    R2,R2                EIGHT BYTE TABLE
         AR    R2,R10               POTION TO NAME
         SPACE 1
         BR    R14                  RETURN TO CALLER
         EJECT ,
GETDSN   DS    0H
         CLI   0(R1),C''''          IS IT FULLY QUALIFIED?
         BNE   GETDSN2                NO, MUST QUALIFY
         SPACE 1
         LR    R2,R0                COPY THE LENGTH
         AR    R2,R1                POINT PAST THE DSNAME
         BCTR  R2,0                 POINT TO LAST CHARACTER
         CLI   0(R2),C''''          IS IT A QUOTE?
         BNE   ERROR                  NO, BAD SYNTAX
         SPACE 1
         LR    R15,R0               COPY LENGTH
         SH    R15,=H'3'            PREPARE FOR EXECUTE
         BM    ERROR                  BAD NAME
         CH    R15,=AL2(L'DSNAME-1)  TOO BIG?
         BH    ERROR                   YES, ERROR
         SPACE 1
         MVC   DSNAME(*-*),1(R1)    MOVE MODEL
         EX    R15,*-6              GET THE DSNAME
         B     GETDSN9              ALL DONE
         SPACE 1
GETDSN2  DS    0H
         L     R15,PSATOLD-PSA      CURRENT TCB
         ICM   R15,B'0111',TCBJSTCA-TCB(R15)  JOBSTEP TCB
         ICM   R15,B'0111',TCBJSCBB-TCB(R15)  JOB STEP CONTROL BLOCK
         L     R15,JSCBPSCB-IEZJSCB(,R15)  PROTECTED STEP CONTROL BLK
         L     R15,PSCBUPT-PSCB(,R15)  USER PROFILE TABLE
         USING UPT,R15
         SPACE 1
         XR    R2,R2                CLEAR
         ICM   R2,B'0001',UPTPREFL  LENGTH OF THE PREFIX
         BZ    *+4+4                  NO PREFIX
         LA    R2,1(,R2)              ALLOW FOR PERIOD
         AR    R2,R0                TOTAL DSNAME LENGTH
         CH    R2,=AL2(L'DSNAME)    TOO LONG?
         BH    ERROR                  YES, FAIL IT
         SPACE 1
         XR    R2,R2
         ICM   R2,B'0001',UPTPREFL
         BZ    GETDSN3                PROFILE NOPREFIX
         MVC   DSNAME(*-*),UPTPREFX  MOVE MODEL
         EX    R2,*-6               INSERT THE PREFIX
         LA    R15,DSNAME(R2)       POINT AFTER THE PREFIX
         MVI   0(R15),C'.'          INSERT A PERIOD
         LA    R2,1(,R2)            ACCOUNT FOR THE PERIOD
         SPACE 1
         DROP  R15                  NO LONGER UPT
         SPACE 1
GETDSN3  DS    0H
         LA    R15,DSNAME(R2)       POINT TO INSERT SLOT
         LR    R2,R0                REMAINING LENGTH
         BCTR  R2,0                 DECREMENT FOR EX
         MVC   0(*-*,R15),0(R1)     MOVE MODEL
         EX    R2,*-6               COMPLETE THE DSNAME
         SPACE 1
GETDSN9  DS    0H
         BR    R14                  RETURN TO CALLER
         EJECT ,
NORMEXIT DS    0H
         LTR   R15,R15              ANY FUNCTION ERRORS?
         BZ    ALLDONE                NO, RETURN WITH ZERO
         LA    R15,8                FUNCTION FAILED
         B     ALLDONE
         SPACE 1
ERROR    DS    0H
         LA    R15,20               GENERATE ISPF ERROR
         SPACE 1
ALLDONE  DS    0H
         L     R13,4(,R13)
         RETURN (14,12),RC=(15)
         SPACE 1
         LTORG ,
         SPACE 3
ILOCATE  CAMLST NAME,DSNAME-DSNAME,,DSNWORK-DSNWORK
         SPACE 1
IOBTAIN  CAMLST SEARCH,DSNAME-DSNAME,VOLSER-VOLSER,DSNWORK-DSNWORK
         SPACE 1
HEXTABLE DC    C'0123456789ABCDEF'
         SPACE 1
BLANKS   DC    CL256' '
         EJECT ,
WORKAREA DS    0D
         SPACE 1
SAVEAREA DS    18F
         SPACE 1
DWORD    DS    D
         SPACE 1
OCAMLST  DS    4F
LCAMLST  EQU   *-OCAMLST
         SPACE 1
DSNAME   DS    CL44
         SPACE 1
VOLSER   DS    CL6
         SPACE 1
LINE     DS    CL80
         SPACE 1
DSNWORK  DS    34D
         SPACE 1
#AMT     EQU   *-WORKAREA
         SPACE 3
         FUNCNTRY ,
         EJECT ,
         PRINT NOGEN
         IHAPSA ,
         CVT   DSECT=YES
         IEESMCA ,
         IHAPCCA ,
         IKJTCB ,
         IEZJSCB ,
         IKJPSCB ,
         IKJUPT ,
         SPACE 3
         END   ,
