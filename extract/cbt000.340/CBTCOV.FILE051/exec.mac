./ ADD NAME=CLIST    0100-93258-93258-2204-00253-00253-00000-T00004
/***********************************************************************
/* PREPROCESS ISPF PANELS VIA ISPPREP.
/* A PANEL IS DISPLAYED TO PROMPT FOR PARAMETERS.
/* THREE OPTIONS ARE ALLOWED:
/*          (1) IF A MEMBER NAME IS SPECIFIED, JUST THAT MEMBER IS
/*              CONVERTED. AN OUTPUT MEMBER NAME IS OPTIONAL.
/*          (2) IF '*' IS SPECIFIED, ALL MEMBERS ARE CONVERTED.
/*          (3) IF BLANK OR A MEMBER PATTERN IS SPECIFIED, A MEMBER
/*              SELECTION LIST IS DISPLAYED. OUTPUT MEMBER NAMES ARE
/*              OPTIONAL.
/* REPLACEMENT OF MEMBERS IS OPTIONAL.
/* IF A PANEL CANNOT BE CONVERTED, THE UNCONVERTED PANEL MAY
/* OPTIONALLY BE COPIED TO THE OUTPUT DATA SET.
/*
/* DOUGLAS H. ADAMS
/* MAIL CODE 110-SH28
/* ROCKWELL INTERNATIONAL CORPORATION
/* 2201 SEAL BEACH BOULEVARD
/* P. O. BOX 2515
/* SEAL BEACH, CALIFORNIA 90740-1515
/*
/* (213) 797-2618
/**********************************************************************

PROC 0 DEBUG

IF   &DEBUG = DEBUG +
THEN CONTROL ASIS   CONLIST FLUSH   LIST   MSG   PROMPT   SYMLIST
ELSE CONTROL ASIS NOCONLIST FLUSH NOLIST   MSG   PROMPT NOSYMLIST

ISPEXEC CONTROL ERRORS RETURN
SET &RPO = NO
SET &CPY = YES
SET &STATS = YES
ISPEXEC DISPLAY PANEL(PREP)
SET &DISPLAYCC = &LASTCC
DO  WHILE &DISPLAYCC = 0 /* LOOP UNTIL END */
  ISPEXEC LMINIT DATAID(INID) DATASET(&PREPINDS) ENQ(SHR)
  SET &INCC = &LASTCC
  IF   &INCC ^= 0 +
  THEN ISPEXEC SETMSG MSG(&ZERRMSG)
  ISPEXEC LMINIT DATAID(OUTID) DATASET(&PREPOUDS) ENQ(SHR)
  SET &OUTCC = &LASTCC
  IF   &OUTCC ^= 0 +
  THEN ISPEXEC SETMSG MSG(&ZERRMSG)
  IF   &INCC = 0 && &OUTCC = 0 +
  THEN DO
    SET &LIN = &LENGTH(&STR(&PREPINDS)
    IF   &SUBSTR(1,&PREPINDS) ^= ' +
    THEN DO
      SET &PIN = &PREPINDS
      SET &SIN = &STR()
      END
    ELSE DO
      SET &PIN = &SUBSTR(1:&LIN-1,&PREPINDS)
      SET &SIN = '
      END
    SET &LOUT = &LENGTH(&STR(&PREPOUDS)
    IF   &SUBSTR(1,&PREPOUDS) ^= ' +
    THEN DO
      SET &POUT = &PREPOUDS
      SET &SOUT = &STR()
      END
    ELSE DO
      SET &POUT = &SUBSTR(1:&LOUT-1,&PREPOUDS)
      SET &SOUT = '
      END
    ISPEXEC  LMOPEN DATAID(&INID) OPTION(INPUT)
    SELECT

    /******************************************************************
    /* PROCESS A SINGLE MEMBER
    /******************************************************************
    WHEN (&STR(&INMEMB) ^= &STR() && &PATTERN = NO) DO
      ISPEXEC LMMFIND DATAID(&INID) MEMBER(&INMEMB) STATS(YES)
      IF   &LASTCC ^= 0 +
      THEN ISPEXEC SETMSG MSG(&ZERRMSG)
      ELSE DO /* PROCESS MEMBER */
        IF   &OUTMEMB = &STR() +
        THEN SET &OUTMEMB = &INMEMB
        SET &INPAN = INPAN(&PIN(&INMEMB)&SIN)
        SET &OUTPAN = OUTPAN(&POUT(&OUTMEMB)&SOUT)
        ISPEXEC SELECT PGM(ISPPREP) +
                       PARM(&INPAN,&OUTPAN&INVOL&OUTVOL,&REPLACE)
        SET &PREPCC = &LASTCC
        SELECT
        WHEN (&PREPCC = 0) DO
          IF   &STATS = YES +
          THEN ISPEXEC LMMSTATS DATAID(&OUTID) MEMBER(&OUTMEMB) +
                                VERSION(&ZLVERS) MODLEVEL(&ZLMOD) +
                                CREATED(&ZLCDATE) MODDATE(&ZLMDATE) +
                                MODTIME(&ZLMTIME) INITSIZE(&ZLCNORC) +
                                USER(&ZLUSER)
          ISPEXEC SETMSG MSG(PREP000)
          END
        WHEN (&PREPCC = 4 && &CPY = YES) DO
          IF   &REPLACE = NOREPL +
          THEN ISPEXEC LMCOPY FROMID(&INID) FROMMEM(&INMEMB) +
                              TODATAID(&OUTID) TOMEM(&OUTMEMB)
          ELSE ISPEXEC LMCOPY FROMID(&INID) FROMMEM(&INMEMB) +
                              TODATAID(&OUTID) TOMEM(&OUTMEMB) REPLACE
          IF   &LASTCC = 0 +
          THEN ISPEXEC SETMSG MSG(PREP001)
          ELSE ISPEXEC SETMSG MSG(PREP002)
          END
        WHEN (&PREPCC = 4 && &CPY = NO) +
          ISPEXEC SETMSG MSG(PREP004)
        WHEN (&PREPCC = 8) +
          ISPEXEC SETMSG MSG(PREP003)
        OTHERWISE ISPEXEC SETMSG MSG(&ZERRMSG)
        END /* SELECT */
        END /* PROCESS MEMBER */
      END

    /******************************************************************
    /* PROCESS ALL MEMBERS
    /******************************************************************
    WHEN (&STR(&INMEMB) = &STR(*)) DO
      SET &MAXCC = 0
      SET &MEMBER = &STR()
      ISPEXEC LMMLIST DATAID(&INID) MEMBER(MEMBER) STATS(YES)
      SET &LMMLISTCC = &LASTCC
      IF   &LMMLISTCC > 8 +
      THEN ISPEXEC SETMSG MSG(&ZERRMSG)
      DO WHILE &LMMLISTCC = 0 /* PROCESS MEMBER */
        SET &MEMBER = &MEMBER
        SET &INPAN = INPAN(&PIN(&MEMBER)&SIN)
        SET &OUTPAN = OUTPAN(&POUT(&MEMBER)&SOUT)
        ISPEXEC SELECT PGM(ISPPREP) +
                       PARM(&INPAN,&OUTPAN&INVOL&OUTVOL,&REPLACE)
        SET &PREPCC = &LASTCC
        IF   &PREPCC > &MAXCC +
        THEN SET &MAXCC = &PREPCC
        SELECT
        WHEN (&PREPCC = 0) DO
          IF   &STATS = YES +
          THEN ISPEXEC LMMSTATS DATAID(&OUTID) MEMBER(&MEMBER) +
                                VERSION(&ZLVERS) MODLEVEL(&ZLMOD) +
                                CREATED(&ZLCDATE) MODDATE(&ZLMDATE) +
                                MODTIME(&ZLMTIME) INITSIZE(&ZLCNORC) +
                                USER(&ZLUSER)
          ISPEXEC CONTROL DISPLAY LOCK
          SET &OUTMEMB = &MEMBER
          ISPEXEC DISPLAY MSG(PREP000)
          END
        WHEN (&PREPCC = 4 && &CPY = YES) DO
          IF   &REPLACE = NOREPL +
          THEN ISPEXEC LMCOPY FROMID(&INID) FROMMEM(&MEMBER) +
                              TODATAID(&OUTID) TOMEM(&MEMBER)
          ELSE ISPEXEC LMCOPY FROMID(&INID) FROMMEM(&MEMBER) +
                              TODATAID(&OUTID) TOMEM(&MEMBER) REPLACE
          SET &LMCOPYCC = &LASTCC
          ISPEXEC CONTROL DISPLAY LOCK
          SET &OUTMEMB = &MEMBER
          IF   &LMCOPYCC = 0 +
          THEN ISPEXEC DISPLAY MSG(PREP001)
          ELSE ISPEXEC DISPLAY MSG(PREP002)
          END
        WHEN (&PREPCC = 4 && &CPY = NO) DO
          ISPEXEC CONTROL DISPLAY LOCK
          SET &INMEMB = &MEMBER
          ISPEXEC DISPLAY MSG(PREP004)
          END
        WHEN (&PREPCC = 8) DO
          ISPEXEC CONTROL DISPLAY LOCK
          SET &INMEMB = &MEMBER
          ISPEXEC DISPLAY MSG(PREP003)
          ISPEXEC LOG MSG(&ZERRMSG)
          END
        END /* SELECT */
        ISPEXEC LMMLIST DATAID(&INID) MEMBER(MEMBER) STATS(YES)
        SET &LMMLISTCC = &LASTCC
        END /* PROCESS MEMBER */
      ISPEXEC LMMLIST DATAID(&INID) OPTION(FREE)
      ISPEXEC SETMSG MSG(PREP005)
      END

    /******************************************************************
    /* PROCESS MEMBER LIST
    /******************************************************************
    OTHERWISE DO
      IF   &STR(&INMEMB) = &STR() +
      THEN SET &MEMBER = &STR()
      ELSE SET &MEMBER = &STR(MEMBER(&INMEMB))
      ISPEXEC LMMDISP DATAID(&INID) STATS(YES) &MEMBER
      SET &LMMDISPCC = &LASTCC
      IF   &LMMDISPCC > 8 +
      THEN ISPEXEC SETMSG MSG(&ZERRMSG)
      DO  WHILE &LMMDISPCC = 0 /* PROCESS MEMBER */
        SET &INMEMB = &ZLMEMBER
        IF   &STR(&ZLUDATA) = &STR() × +
             &SUBSTR(1,&STR(&ZLUDATA)) = &STR(*) +
        THEN SET &OUTMEMB = &INMEMB
        ELSE SET &OUTMEMB = &ZLUDATA
        SET &INPAN = INPAN(&PIN(&INMEMB)&SIN)
        SET &OUTPAN = OUTPAN(&POUT(&OUTMEMB)&SOUT)
        ISPEXEC SELECT PGM(ISPPREP) +
                       PARM(&INPAN,&OUTPAN&INVOL&OUTVOL,&REPLACE)
        SET &PREPCC = &LASTCC
        SELECT
        WHEN (&PREPCC = 0) DO
          IF   &STATS = YES +
          THEN ISPEXEC LMMSTATS DATAID(&OUTID) MEMBER(&OUTMEMB) +
                                VERSION(&ZLVERS) MODLEVEL(&ZLMOD) +
                                CREATED(&ZLCDATE) MODDATE(&ZLMDATE) +
                                MODTIME(&ZLMTIME) INITSIZE(&ZLCNORC) +
                                USER(&ZLUSER)
          SET &ZLUDATA = &STR(*PREP)
          END
        WHEN (&PREPCC = 4 && &CPY = YES) DO
          IF   &REPLACE = NOREPL +
          THEN ISPEXEC LMCOPY FROMID(&INID) FROMMEM(&INMEMB) +
                              TODATAID(&OUTID) TOMEM(&OUTMEMB)
          ELSE ISPEXEC LMCOPY FROMID(&INID) FROMMEM(&INMEMB) +
                              TODATAID(&OUTID) TOMEM(&OUTMEMB) REPLACE
          IF   &LASTCC = 0 +
          THEN SET &ZLUDATA = &STR(*COPIED)
          ELSE SET &ZLUDATA = &STR(*NOREPL)
          END
        WHEN (&PREPCC = 4 && &CPY = NO) +
          SET &ZLUDATA = &STR(*NOPREP)
        WHEN (&PREPCC = 8) +
          SET &ZLUDATA = &STR(*ERROR)
        OTHERWISE DO
          SET &ZLUDATA = &STR(*ERROR)
          ISPEXEC LOG MSG(&ZERRMSG)
          ISPEXEC SETMSG MSG(&ZERRMSG)
          END
        END /* SELECT */
        ISPEXEC LMMDISP DATAID(&INID) OPTION(PUT) +
                        MEMBER(&INMEMB) ZLUDATA(&ZLUDATA)
        ISPEXEC LMMDISP DATAID(&INID) STATS(YES) OPTION(GET)
        SET &LMMDISPCC = &LASTCC
        IF   &LMMDISPCC = 8 +
        THEN DO
          ISPEXEC LMMDISP DATAID(&INID) STATS(YES) &MEMBER
          SET &LMMDISPCC = &LASTCC
          END
        END /* PROCESS MEMBER */
      ISPEXEC LMMDISP DATAID(&INID) OPTION(FREE)
      END

    /******************************************************************
    END
    ISPEXEC LMCLOSE DATAID(&INID)
    END /* LOOP UNTIL END */
  IF   &INCC = 0 +
  THEN ISPEXEC LMFREE DATAID(&INID)
  IF   &OUTCC = 0 +
  THEN ISPEXEC LMFREE DATAID(&OUTID)
  ISPEXEC DISPLAY PANEL(PREP)
  SET &DISPLAYCC = &LASTCC
  END
./ ADD NAME=EXEC     0100-93258-93258-2204-00225-00225-00000-T00004
/***********************************************************************
*
* Preprocess ISPF panels via ISPPREP.
* A panel is displayed to prompt for parameters.
* Three options are allowed:
*           (1) If a member name is specified, just that member is
*               converted. An output member name is optional.
*           (2) If '*' is specified, all members are converted.
*           (3) If blank or a member pattern is specified, a member
*               selection list is displayed. Output member names are
*               optional.
* Replacement of members is optional.
* If a panel cannot be converted, the unconverted panel may
* optionally be copied to the output data set.
*
* Douglas H. Adams
* Mail code 110-sh28
* Rockwell International Corporation
* 2201 Seal Beach Boulevard
* P. O. Box 2515
* Seal Beach, California 90740-1515
*
* (213) 797-2618
*
* May 7, 1990
*
**********************************************************************/

Signal on novalue
Address ISPEXEC
"CONTROL ERRORS RETURN"
Rpo = "NO"
Cpy = "YES"
Stats = "YES"

"DISPLAY PANEL(PREP)"
Display_rc = rc
Do while display_rc = 0
   Input_dsn = fixdsn(prepinds)
   Output_dsn = fixdsn(prepouds)
   "LMINIT DATAID(INID) DATASET('"input_dsn"') ENQ(SHR)"
   In_rc = rc
   "LMINIT DATAID(OUTID) DATASET('"output_dsn"') ENQ(SHR)"
   Out_rc = rc
   If max(in_rc,out_rc) = 0
   Then do
      "LMOPEN DATAID("inid") OPTION(INPUT)"
      Select
         When inmemb ^= "" & pattern == "NO"
         Then call single_member
         When inmemb == "*"
         Then call all_members
         Otherwise call member_list
         End
      "LMCLOSE DATAID("inid")"
      End
   If in_rc = 0
   Then "LMFREE DATAID("inid")"
   Else "SETMSG MSG(ZERRMSG)"
   If out_rc = 0
   Then "LMFREE DATAID("outid")"
   Else "SETMSG MSG(ZERRMSG)"
   "DISPLAY PANEL(PREP)"
   Display_rc = rc
   End
Exit

/***********************************************************************
* Eliminate quote marks from dsname                                    *
***********************************************************************/
Fixdsn:

Parse arg full_dsn 1 "'" dsn "'" .
If dsn == ""
Then dsn = sysvar("SYSPREF")"."full_dsn
Return dsn

/***********************************************************************
* Process a Single Member                                              *
***********************************************************************/
Single_member:

"LMMFIND DATAID("inid") MEMBER("inmemb") STATS(YES)"
Select
   When rc = 0
   Then call process
   When rc = 8
   Then "SETMSG MSG(PREP006)"
   Otherwise "SETMSG MSG(ZERRMSG)"
   End
Return

/***********************************************************************
* Process All Members                                                  *
***********************************************************************/
All_members:

Maxcc = 0
Inmemb = ""
"LMMLIST DATAID("inid") MEMBER(INMEMB) STATS(YES)"
Lmmlist_rc = rc
Do while lmmlist_rc = 0
   Call process
   Maxcc = max(maxcc,prep_rc)
   "CONTROL DISPLAY LOCK"
   "DISPLAY"
   "LMMLIST DATAID("inid") MEMBER(INMEMB) STATS(YES)"
   Lmmlist_rc = rc
   End
"LMMLIST DATAID("inid") OPTION(FREE)"
"SETMSG MSG(PREP005)"
Return

/***********************************************************************
* Process Member List                                                  *
***********************************************************************/
Member_list:

If inmemb == ""
Then member = ""
Else member = "MEMBER("inmemb")"
"LMMDISP DATAID("inid") STATS(YES)" member
Lmmdisp_rc = rc
If lmmdisp_rc > 8
Then "SETMSG MSG(ZERRMSG)"
Do while lmmdisp_rc = 0
   Inmemb = strip(zlmember)
   If zludata = "" × substr(zludata,1,1) == "*"
   Then outmemb = inmemb
   Else outmemb = zludata
   Call process
   "LMMDISP DATAID("inid") OPTION(PUT)",
           "MEMBER("inmemb") ZLUDATA("zludata")"
   "LMMDISP DATAID("inid") STATS(YES) OPTION(GET)"
   Lmmdisp_rc = rc
   If Lmmdisp_rc = 8
   Then do
      "LMMDISP DATAID("inid") STATS(YES)" member
      Lmmdisp_rc = rc
      End
   End
"LMMDISP DATAID("inid") OPTION(FREE)"
Return

/***********************************************************************
* Process a Panel                                                      *
***********************************************************************/
Process:

If outmemb == ""
Then outmemb = inmemb
Inpan = "INPAN('"input_dsn"("inmemb")')"
Outpan = "OUTPAN('"output_dsn"("outmemb")')"
Parm = inpan ×× ","outpan ×× invol ×× outvol ×× ","replace
"SELECT PGM(ISPPREP) PARM("parm")"
Prep_rc = rc
Select
   When prep_rc = 0
   Then call normal
   When prep_rc = 4
   Then call unprocessed
   When prep_rc = 8
   Then do
      Zludata = "*ERROR"
      "SETMSG MSG(PREP003)"
      End
   Otherwise
      Zludata = "*ERROR"
      "SETMSG MSG(ZERRMSG)"
      "LOG MSG(ZERRMSG)"
   End
Return

/***********************************************************************
* Copy ISPF Statistics                                                 *
***********************************************************************/
Normal:

If stats == "YES"
Then "LMMSTATS DATAID("outid") MEMBER("outmemb")",
              "VERSION("zlvers") MODLEVEL("zlmod")",
              "CREATED("zlcdate") MODDATE("zlmdate")",
              "MODTIME("zlmtime") INITSIZE("zlcnorc")",
              "USER("zluser")"
Zludata = "*PREP"
"SETMSG MSG(PREP000)"
Return

/***********************************************************************
* Handle Unpreprocessable Panel                                        *
***********************************************************************/
Unprocessed:

If cpy == "YES"
Then do
   If replace == "NOREPL"
   Then "LMCOPY FROMID("inid") FROMMEM("inmemb")",
               "TODATAID("outid") TOMEM("outmemb")"
   Else "LMCOPY FROMID("inid") FROMMEM("inmemb")",
               "TODATAID("outid") TOMEM("outmemb") REPLACE"
   If rc = 0
   Then do
      zludata = "*COPIED"
      "SETMSG MSG(PREP001)"
      End
   Else do
      zludata = "*NOREPL"
      "SETMSG MSG(PREP002)"
      End
   End
Else do
      Zludata = "*NOPREP"
      "SETMSG MSG(PREP004)"
   End
Return

/***********************************************************************
* Trap uninitialized variables                                         *
***********************************************************************/
Novalue:

Say "Uninitialized variable in line" sigl":"
Say sourceline(sigl)
Trace "?Results"
Nop
