LISTDS   TITLE 'QUEUE COMMAND - LIST A DATASET FROM SPOOL'        ONL01
LISTDS   QSTART ,                  START LISTDS CSECT ASSEMBLY    ONL01
******************************************************************ISPF*
* BFG CHANGES:                                                   *ISPF*
*      (1) ISPF  - IMPLEMENT BROWSE INTERFACE WITH ISPF/PDF      *ISPF*
*      (2) BFG04 - FOR SYSLOG STATUS DISPLAY FIRST TIME STAMP     BFG04
*                  THIS MOD WAS ORIGINALLY FROM PWF               BFG04
*      (3) BFG18 - FIX FOR ISPF VERSION 2                         BFG18
*      (4) BFG24 - FIX BUG IN DISPLAYING INTERNAL TEXT DS         BFG24
*      (5) BFG27 - SUPPORT ISPF V2.3 IBM INTERFACE TO BROWSE      BFG27
*                  INTERNAL FUNCTION                              BFG27
*      (6) BFG31 - SUPPORT XA 2.2 SYSLOG FORMAT                   BFG31
******************************************************************ISPF*
         USING QCKPT,R10      BASE REG FOR CHECKPOINT WORK AREA
         L     R10,QVCKPT     LOAD BASE REG
         USING QDISPLAY,R9    BASE REG FOR DISPLAY WORK AREA
         L     R9,QVDSPL      LOAD BASE REG
         USING WORK,R13       BASE REG FOR LOCAL WORK
         SPACE 2                                                  ONL02
******************************************************************ONL02
*                                                                 ONL02
*   SEE IF DATA SET ID IS VALID                                   ONL02
*                                                                 ONL02
******************************************************************ONL02
         SPACE 1                                                  ONL02
         CLC   QPDSID,=X'FFFF'     IS THE DATA SET ID VALID?  ONL02 SBG
         BNE   DSIDOK              SKIP IF YES                    ONL02
         SPACE 1                                                  ONL02
         QTILT '*** QUEUE LOGIC ERROR - BAD DSID IN LISTDS ***'     SBG
         SPACE 1                                                  ONL02
DSIDOK   DS    0H                  DSID EXISTS                    ONL02
         SPACE 2                                                  ONL02
***********************************************************************
*                                                                     *
*   DETERMINE FUNCTION REQUESTED                                      *
*                                                                     *
***********************************************************************
         SPACE 1                                                  ONL02
         CLI   QCODE,3        IS THE CALLER FORMAT???         PWF BFG04
         BE    NORMAL         YES. GO PROCESS AS NORMAL       PWF BFG04
         CLI   QCODE,0        IS THE REQUEST FOR REPOSITIONING?
         BNE   REPOS          YES. DO IT.
NORMAL   DS    0H                                             PWF BFG04
         SPACE 2                                                  ONL04
***********************************************************************
*                                                                     *
*   LOCATE PDDB FOR DATASET SPECIFIED IN QPDSID                       *
*                                                                     *
***********************************************************************
         SPACE 1                                                  ONL04
         NI    QFLAG2,255-QFLG2SPN-QFLG2PDB  CLEAR SEARCH FLAGS   ONL04
         USING PDB,R2         BASE REG FOR PDDB
         USING IOT,R3         BASE REG FOR IOT                    UF046
         L     R5,QCIOTA      IOAREA FOR READ IOT BLOCK           UF046
         LR    R3,R5          POINT TO IOTSTART                   UF046
         SH    R3,=AL2(IOTSTART-IOT) ADJUST FOR HEADER            UF046
         SPACE 1                                                  ONL04
NEXTIOT  LR    R4,R3          BASE OF IOT
         CLC   IOTID,=CL4'IOT'  WAS AN IOT READ FROM SPOOL ?      ONL03
         BNE   BADIOT         ERROR IF NO                         ONL03
         CLC   QPJOBID,IOTJBKEY  IS THE IOT'S JOB KEY VALID ?     ONL03
         BNE   BADIOT         ERROR IF NO                         ONL03
         A     R4,IOTPDDBP    OFFSET BEYOND LAST PDDB
         LR    R2,R3          BASE OF IOT
         A     R2,IOTPDDB          OFFSET TO FIRST PDDB IN IOT    UF046
         SPACE 1                                                  ONL04
FINDDS   DS    0H             SEARCH IOT FOR DSID                 ONL04
         CLC   QPDSID,PDBDSKEY  DOES THE DSID MATCH ?             ONL04
         BNE   SKIPPDDB       SKIP IF NO                          ONL04
         OI    QFLAG2,QFLG2PDB  SHOW PDDB FOR DSID EXISTS         ONL04
         CLC   PDBMTTR,=F'0'  DOES PDDB HAVE OUTPUT ?             ONL04
         BNE   FOUNDDS        SKIP IF YES, WE'VE FOUND OUR OUTPUT ONL04
SKIPPDDB DS    0H                                                 ONL04
         SPACE 1                                                  ONL04
         LA    R2,PDBLENG(R2) ADDR OF NEXT PDDB IN IOT            ONL04
         CR    R2,R4          HAVE WE GONE PAST THE LAST PDDB?
         BL    FINDDS         NO. TRY AGAIN.
         L     R4,IOTIOTTR    DISK ADDR OF NEXT IOT
SPIN     LTR   R4,R4          IS THERE ANOTHER IOT?
         BZ    SPINIOT        NO. TRY THE SPIN IOT?
         BAL   R8,READ        READ THE IOT
         B     NEXTIOT        SEARCH THE NEXT IOT
         USING JCT,R1         BASE REG FOR JCT                    ONL16
         SPACE 1                                                  ONL04
SPINIOT  TM    QFLAG2,QFLG2SPN  HAVE THE SPIN IOT'S BEEN SEARCHED?ONL04
         BO    NODATA         SKIP IF YES                         ONL04
         OI    QFLAG2,QFLG2SPN  SHOW SPIN IOT'S NOW BEING SEARCHEDONL04
         L     R1,QCJCTA      LOAD BASE REG
         L     R4,JCTSPIOT    DISK ADDR OF SPIN IOT
         DROP  R1
         B     SPIN           SEARCH THE SPIN IOT CHAIN
         SPACE 1                                                  ONL04
NODATA   DS    0H             ALL PDDB'S HAVE BEEN SEARCHED       ONL04
         MVC   QPDSID,=X'FFFF'  INVALIDATE DSID                     SBG
         TM    QFLAG2,QFLG2PDB  WAS DATASET FOUND BUT EMPTY?      ONL04
         BZ    DSNOTFND       SKIP IF NO                          ONL04
         QTILT '*** DATASET ID IS EMPTY ***'                      ONL04
DSNOTFND QTILT '*** DATASET ID NOT FOUND ***'                     ONL04
BADIOT   QTILT '*** JOB HAS PURGED (OR IOT IS INVALID) ***'       ONL03
TILT2    TM    QFLAG1,QFLG1ISP  ARE WE IN ISPF                   *ISPF*
         BO    LSDSCKEF         YES SO RETURN TO CKECK           *ISPF*
         QTILT '*** DATASET TABLE LIMITS EXCEEDED ***'
         SPACE 1                                                  ONL04
FOUNDDS  DS    0H             PDDB W/DATA FOUND FOR DSID          ONL04
         CLI   QCODE,3        IS THE REQUEST FROM FORMAT???   PWF BFG04
         BNE   FOUNDDS1       NO. BYPASS PROCESSING           PWF BFG04
         MVC   QCTRAK,PDBMTTR YES. SAVE A(DS BUFFER)          PWF BFG04
         B     RETURN         AND RETURN                      PWF BFG04
FOUNDDS1 DS    0H                                             PWF BFG04
         MVC   QOLDDSID,QPDSID  SET PREVIOUS DSID TO CURRENT      ONL04
         MVC   QCJNAME,QPARM1 SAVE THE JOBNAME                    UF007
         CLI   QPARM1,C'*'    USE LAST JOB NAME?                  UF007
         BNE   JNAMEOK        NO,  SKIP OVERLAY OF JOBNAME        UF007
         L     R1,QCJCTA      BASE ADDRESS OF JCT                 UF040
         USING JCT,R1         BASE FOR REAL JCT                   ONL16
         MVC   QCJNAME,JCTJNAME SET JOB NAME                      UF040
         DROP  R1             DROP TEMP ADDRESSING                UF040
JNAMEOK  DS    0H                                                 UF040
*        MVC   QCDSNO,QPARM2  SAVE THE DATASET ID NUMBER          UF040
         LH    R0,QPDSID      GET DATASET ID                      UF040
         CVD   R0,DWORD       TO DECIMAL                          UF040
         MVC   QCDSNO,EDIT    SET EDIT PATTERN                    UF040
         ED    QCDSNO,DWORD+4 TO PRINTABLE                        UF040
         MVC   QDHLINE,QCHLINE MOVE IN HEADING LINE
         MVC   QCRECFM,PDBRECFM RECORD FORMAT FOR SAVE
         MVC   QCLRECL,PDBLRECL RECORD LENGTH FOR SAVE
         SPACE 1                                                  BFG24
         CLC   QCLRECL,=H'0'  SEE IF LRECL ZERO                   BFG24
         BNE   LRCLOK         IF NOT, THEN GOOD PDDB              BFG24
         MVC   QCLRECL,=H'252' IF BAD PDDB THEN SET TO LARGE SIZE BFG24
LRCLOK   DS    0H                                                 BFG24
         SPACE 1                                                  BFG24
         TM    QFLAG1,QFLG1ISP ARE WE IN ISPF???                 *ISPF*
         BZ    NISPF1        NOPE SO SKIP                        *ISPF*
         LH    R1,QCLRECL          GET MAX RECORD LENGTH   *ISPF* BFG24
         LA    R1,4(R1)            ALLOW FOR RDW                 *ISPF*
         CH    R1,=H'252'          IS IT TOO BIG                 *ISPF*
         BL    *+8                 NO SO SKIP                    *ISPF*
         LA    R1,252              SET MAX LENGTH                *ISPF*
         STH   R1,QCLRECL          SET RECORD LENGTH             *ISPF*
         SH    R1,=H'4'            GET REAL LENGTH OF LINE       *ISPF*
         STH   R1,QDLNELEN         SAVE IT AS LENGTH OF LINE     *ISPF*
NISPF1   DS    0H                                                *ISPF*
         L     R4,PDBMTTR     DISK ADDR OF FIRST BLOCK
         L     R5,QCBLKA      ADDR OF DATASET BLOCK IOAREA
         L     R2,QCSTART     BEGINNING OF DISK ADDR TABLE
         ZAP   QCCREC,=P'0'   ZERO CURRENT RECORD NO
         MVC   QCCPTR,QCSTART BEGIN OF TBL
         ZAP   QCHREC,=P'0'   ZERO HIGH REC NO
         MVC   QCHPTR,QCSTART BEGIN OF TBL
         ZAP   QPREC,=P'1'    REPOSITION TO TOP OF DATASET
         DROP  R2
         DROP  R3
         TM    QFLAG1,QFLG1ISP ARE WE IN ISPF???                 *ISPF*
         BZ    FIRST         NOPE SO KEEP GOING                  *ISPF*
         EJECT                                                   *ISPF*
******************************************************************ISPF*
*                                                                *ISPF*
*        SETUP ISPF/PDF BROWSE INTERFACE                         *ISPF*
*                                                                *ISPF*
******************************************************************ISPF*
*                                                                *ISPF*
**       SETUP FIRST ENTRY IN TABLE                              *ISPF*
*                                                                *ISPF*
         L     R9,QVBROWS     GET BASE FOR BROWSE AREA           *ISPF*
         USING QBROWSE,R9     SETUP ADDRESSABILITY               *ISPF*
         ST    R13,BRWSAVE         SAVE CURRENT SAVEAREA PTR     *ISPF*
         ST    R4,0(R2)       SAVE TTR OF FIRST BLOCK            *ISPF*
         MVC   4(4,R2),QCCREC RECORD NUMBER IN BLOCK             *ISPF*
*                                                                 BFG27
**       SEE IF WE CAN USE IBM DEFINED INTERFACE                  BFG27
*                                                                 BFG27
         TM    QFLAG2,QFLG2I23     Q. ARE WE V2.3 OR HIGHER       BFG27
         BZ    QISPF22             A. NO SO USE KULTZY DCB INTERFACEG27
******************************************************************BFG27
*                                                                 BFG27
**       ISPF V2.3 OR HIGHER - BRIF INTERFACE                     BFG27
*                                                                 BFG27
******************************************************************BFG27
*                                                                 BFG27
**       FORMAT HEADER TO IDENTIFY FILE                           BFG27
*                                                                 BFG27
         MVC   BRWHDR(27),=CL27'JOB 12345678, DSID 12345678'      BFG27
         MVC   BRWHDR+4(8),QPARM1 SET JOBNAME                     BFG27
         LH    R1,QPDSID      GET DSID NUMBER                     BFG27
         CVD   R1,BRWDBLW     MAKE DECIMAL                        BFG27
         MVC   BRWHDR+4+8+7(8),=XL8'4020202020202120' PATTERN     BFG27
         ED    BRWHDR+4+8+7(8),BRWDBLW+4 PUT IN NUMBER            BFG27
         GETMAIN R,LV=256          GET LINE BUFFER ADDRESS        BFG27
         ST    R1,MYFREE           SAVE ADDRESS                   BFG27
         LH    R2,QCLRECL          GET RECORD LENGTH              BFG27
         ST    R2,BRWDBLW          SAVE LENGTH IN FULL WORD       BFG27
         ST    R11,BRWDBLW+4       SAVE ADDR OF QCOM              BFG27
         L     R15,ISPLNK          CALL ISPF INTERFACE            BFG27
         CALL  (15),(=C'BRIF',BRWHDR,=C'U ',BRWDBLW,              BFG27X
               =A(ISPF23RD),,BRWDBLW+4),VL,MF=(E,BRWCLST)         BFG27
         LR    R2,R15              SAVE RETURN CODE               BFG27
         L     R1,MYFREE           GET RID OF BUFFER              BFG27
         FREEMAIN R,LV=256,A=(1)                                  BFG27
         B     NOXA2               ALL DONE SO EXIT               BFG27
         EJECT                                                    BFG27
******************************************************************BFG27
*                                                                *ISPF*
**       ENTRY CODE FOR ISPF V1.X AND V2.0->V2.2                  BFG27
*                                                                *ISPF*
******************************************************************BFG27
QISPF22  DS    0H                                                 BFG27
         L     R8,BRWEPARM     POINT AT TLD                      *ISPF*
         USING TLD,R8                                            *ISPF*
         L     R7,ISRNM       POINT TO ISR SERVICE TABLE         *ISPF*
         USING ISRNAME,R7                                        *ISPF*
*                                                                 BFG18
**       DETERMINE IF ISPF IS RUNNING ABOVE LINE IN XA            BFG18
*                                                                 BFG18
         TM    QFLAG1,QFLG1XA ARE WE IN XA                        BFG18
         BZ    NOXA1          SKIP CODE IF NOT                    BFG18
         CLC   ISRNAME+8(4),=X'0000022C' CHECK LENGTH             BFG18
         BE    NOXA1          SKIP IF ISPF V1                     BFG18
         CLI   ISRCBR,0       IF IN XA THEN ISPF ABOVE LINE       BFG18
         BE    NOXA1          SKIP CODE IF NOT                    BFG18
         OI    QFLAG1,QFLG131B SET FLAG                           BFG18
         L     R15,=A(X'80000000'+NOXA1) GET MODE BIT             BFG18
         DC    X'0B0F'        BSM   0,15  GO TO INDICATED ADDR    BFG18
NOXA1    DS    0H                                                 BFG18
*                                                                 BFG18
**       NOW DETERMINE IF ISPF VERSION 1 OR 2                     BFG18
*                                                                 BFG18
         NI    QFLAG2,255-QFLG2IS2   SET VERSION 2 FLAG OFF       BFG18
         L     R1,ISRCBR      GET ADDRESS                         BFG18
         CLC   =C'ISRCBR',5(R1) IS THIS ISPF V1                   BFG18
         BE    HAVEISR        YES                                 BFG18
         S     R7,=F'4'       BACK UP BY 4 FOR V2                 BFG18
         OI    QFLAG2,QFLG2IS2 SET V2 FLAG ON                     BFG18
         L     R1,ISRCBR      GET ADDRESS BACK                    BFG18
         CLC   =C'ISRCBR',5(R1) IS THIS ISPF V2                   BFG18
         BE    HAVEISR        YES                                 BFG18
         DC    H'0'           ***UNKNOWN ISPF LEVEL****           BFG18
HAVEISR  DS    0H                                                 BFG18
         L     R6,ISPNM       POINT TO ISP SERVICE TABLE         *ISPF*
         USING ISPNAME,R6                                        *ISPF*
*                                                                *ISPF*
**       INITIALIZE BROWSE SERVICES                              *ISPF*
*                                                                *ISPF*
         L     R15,ISRCBS     GET MODULE ADDR                    *ISPF*
         CALL  (15),((R8),BRWCBTP),VL,MF=(E,BRWCLST)             *ISPF*
*                                                                *ISPF*
**       CLEAR AND FORMAT TFD                                    *ISPF*
*                                                                *ISPF*
         XC    TFD(208),TFD        CLEAR IT                      *ISPF*
         MVC   TFD+0(4),=C'TFD:'   SET EYEBALL                   *ISPF*
         MVI   TFD+5,X'7E'         SET FLAGS                     *ISPF*
         MVI   TFD+6,X'80'         SAY OPENED BY CDO             *ISPF*
         LA    R1,TFDMENUP         POINT AT VARIABLES            *ISPF*
         ST    R1,TFD+64           SAVE POINTER                  *ISPF*
         LA    R1,TFDDCB           POINT AT DCB                  *ISPF*
         ST    R1,TFD+68           SAVE POINTER                  *ISPF*
         LA    R1,TFDDSN           POINT AT DSN                  *ISPF*
         ST    R1,TFD+128          SAVE POINTER                  *ISPF*
         MVC   TFD+40(2),QCLRECL   SET LRECL                     *ISPF*
         MVC   TFD+42(2),=AL2(256)  SET BLKSIZE                  *ISPF*
         MVI   TFD+48,DCBRECV      MARK AS 'RECFM=V'             *ISPF*
         MVI   TFD+49,X'40'        SET DSORG=PS                  *ISPF*
         MVC   TFD+50(2),=X'2400'  SET MACRF=(R)                 *ISPF*
         MVI   TFD+52,X'08'        SET STATUS                    *ISPF*
         MVI   TFD+53,X'08'        SET DISP                      *ISPF*
         GETMAIN R,LV=256     GET BUFFER                         *ISPF*
         ST    R1,MYFREE                                         *ISPF*
         ST    R1,TFD+24      SET BUFFER A ADDRESS               *ISPF*
*                                                                *ISPF*
**       FILL IN DCB CODES                                       *ISPF*
*                                                                *ISPF*
         LA    R2,TFDDCB      POINT AT DCB                       *ISPF*
         XC    0(92,R2),0(R2)      CLEAR                         *ISPF*
         USING IHADCB,R2                                         *ISPF*
         ST    R11,DCBDEBAD   ADDR OF OUR SAVE AREAS             *ISPF*
         MVC   DCBMACRF,=X'2400' SET MACRF=(R)                   *ISPF*
         MVI   DCBRECFM,DCBRECV    MARK AS 'RECFM=V'             *ISPF*
         MVC   DCBLRECL,QCLRECL    SET LRECL                     *ISPF*
         MVC   DCBBLKSI,=AL2(256)  SET BLKSIZE                   *ISPF*
         LA    R1,LSDSREAD    POINT AT READ CODE                 *ISPF*
         ST    R1,DCBREAD     SAVE READ ADDRESS                  *ISPF*
         LA    R1,LSDSCHCK    POINT AT CHECK CODE                *ISPF*
         ST    R1,DCBCHECK    SAVE CHECK ROUTINE                 *ISPF*
         LA    R1,LSDSPNT     POINT AT POINT CODE                *ISPF*
         ST    R1,DCBPOINT                                       *ISPF*
         TM    QFLAG2,QFLG2IS2 IS THIS V2 OF ISPF                 BFG18
         BNO   ISPFV1         NOPE SO SKIP V2 CODE AND DO HARD WAYBFG18
*                                                                 BFG18
**       PROCSSSING FOR ISPF VERSION 2                            BFG18
*                                                                 BFG18
         LA    R1,TFDDSN           POINT AT DSN                   BFG18
         ST    R1,TFD+132          SAVE POINTER                   BFG18
         ST    R1,TFD+136          SAVE POINTER                   BFG18
         ST    R1,TFD+140          SAVE POINTER                   BFG18
         L     R2,BRWCBTP     GET BROWSE TABLE PTR                BFG18
         MVC   709(8,R2),=C'ISRBROBF' SET MENU NAME               BFG18
         MVC   717(8,R2),=CL8' ' SET BLANKS                       BFG18
         XC    144(4,R2),144(R2)                                  BFG18
         MVI   616(R2),X'01'  SET DATASET NUMBER                  BFG18
         MVC   TFDDSN+2(27),=CL27'JOB 12345678, DSID 12345678'    BFG18
         MVC   TFDDSN+2+4(8),QPARM1 SET JOBNAME                   BFG18
         LH    R1,QPDSID      GET DSID NUMBER                     BFG18
         CVD   R1,BRWDBLW     MAKE DECIMAL                        BFG18
         MVC   TFDDSN+2+4+8+7(8),=XL8'4020202020202120' PATTERN   BFG18
         ED    TFDDSN+2+4+8+7(8),BRWDBLW+4 PUT IN NUMBER          BFG18
         MVC   TFDDSN(2),=H'27' LENGTH OF DSN                     BFG18
         B     CBR            GO AND DO BROWSE                    BFG18
*                                                                 BFG18
**       PROCSSSING FOR ISPF VERSION 1                            BFG18
*                                                                 BFG18
ISPFV1   DS    0H                                                 BFG18
*                                                                *ISPF*
**       SET OFF BROWSE RECURSIVE FLAG                           *ISPF*
*                                                                *ISPF*
         NI    TLD+237,X'FF'-X'04'                               *ISPF*
*                                                                *ISPF*
**       CALL ISPCMSG TO FORMAT SCREEN HEADER                    *ISPF*
*                                                                *ISPF*
CMSG     L     R15,ISPCMSG                                       *ISPF*
         CALL  (15),((R8),=C'B003',=F'2',BRWHDR,=F'72',          *ISPF*X
               TFDDSN+2,BRWMEM,BRWSTAMP),VL,MF=(E,BRWCLST)       *ISPF*
*                                                                *ISPF*
**       INITIALIZE CBT FOR SCROLL HANDLER                       *ISPF*
*                                                                *ISPF*
         L     R2,BRWCBTP     POINT AT COMMON BROWSE TABLE       *ISPF*
         L     R2,8(R2)       POINT AT EXTENSION                 *ISPF*
         MVC   0(8,R2),=CL8'ISRBROB' SET MENU                    *ISPF*
         LA    R1,BRWHDR      POINT AT HEADER                    *ISPF*
         ST    R1,8(R2)       SAVE HEADER POINTER                *ISPF*
         MVC   12(4,R2),=F'72' SET HEADER LENGTH                 *ISPF*
*                                                                *ISPF*
**       FORMAT HEADER TO IDENTIFY FILE                          *ISPF*
*                                                                *ISPF*
*                               123456789112345678921234567      *ISPF*
         MVC   BRWHDR(27),=CL27'JOB 12345678, DSID 12345678'     *ISPF*
         MVC   BRWHDR+4(8),QPARM1 SET JOBNAME                    *ISPF*
         LH    R1,QPDSID      GET DSID NUMBER                    *ISPF*
         CVD   R1,BRWDBLW     MAKE DECIMAL                       *ISPF*
         MVC   BRWHDR+4+8+7(8),=XL8'4020202020202120' PATTERN    *ISPF*
         ED    BRWHDR+4+8+7(8),BRWDBLW+4 PUT IN NUMBER           *ISPF*
*                                                                *ISPF*
**       CALL COMMON BROWSE SERVICE VERSION 1 AND 2               BFG18
*                                                                *ISPF*
CBR      L     R15,ISRCBR     GET PROWSE ENTRY PONIT             *ISPF*
         CALL  (15),((R8),TFD,BRWCBTP),VL,MF=(E,BRWCLST)         *ISPF*
         L     R2,ISRRET           GET RETURN CODE               *ISPF*
*                                                                *ISPF*
**       CALL COMMON BROWSE CLEANUP                              *ISPF*
*                                                                *ISPF*
CBC      L     R15,ISRCBC     GET PROWSE ENTRY PONIT             *ISPF*
         CALL  (15),((R8),BRWCBTP),VL,MF=(E,BRWCLST)             *ISPF*
         L     R1,MYFREE                                         *ISPF*
         FREEMAIN R,LV=256,A=(1)  FREE BUFFER                    *ISPF*
         TM    QFLAG1,QFLG131B 31 BIT MODE                        BFG18
         BZ    NOXA2          SKIP IF NOT 31 BIT ODE              BFG18
         NI    QFLAG1,255-QFLG131B TURN OFF FLAG                  BFG18
         LA    R15,NOXA2      POINT WITH MODE 0                   BFG18
         DC    X'0B0F'        BSM  0,15                           BFG18
NOXA2    DS    0H                                                 BFG18
         MVC   QPDSID,=X'FFFF' MAKE USER SPECIFY A NEW DATASET      SBG
         LTR   R2,R2               ANY ERROR                     *ISPF*
         BZ    RETURN              IF NOT THEN EXIT              *ISPF*
         MVC   QDHLINE,=CL80'*** DATA SET IS EMPTY ***'          *ISPF*
RETURN   QSTOP                                                   *ISPF*
         DROP  R6,R7,R8                                          *ISPF*
         EJECT                                                   *ISPF*
         DROP  ,                                                 *ISPF*
******************************************************************BFG27
*                                                                *BFG27
*        ISPF V2.3 BROWSE INTERFACE READ ROUTIND                 *BFG27
*                                                                *BFG27
*        INPUT                                                   *BFG27
*     R1  -->  +0  -->  F'0'  -  TO BE SET TO POINT AT DATA LINE *BFG27
*              +4  -->  F'0'  -  TO BE SET TO LENGTH OF LINE     *BFG27
*              +8  -->  F'L'  -  THE REQUESTED LINE NUMBER       *BFG27
*              +12 -->  A(QCOMMON) - ADDRESS PASSED FROM BRIF    *BFG27
*                                                                *BFG27
******************************************************************BFG27
ISPF23RD DS    0H                                                 BFG27
         STM   R14,R12,12(R13) SAVE REGISTERS                     BFG27
         LR    R12,R15        SETUP BASE REGISTER                 BFG27
         USING ISPF23RD,R12   SETUP ADDRESSABILITY                BFG27
         L     R12,=A(LISTDS) GET ORIG BASE ADDR                  BFG27
         USING LISTDS,R12     SETUP ADDRESSABILITY    **ORIG**    BFG27
         LR    R8,R1          SAVE PARM LIST POINTER              BFG27
         L     R11,12(R8)     POINT AT COMMON VECTOR TABLE        BFG27
         L     R11,0(R11)     POINT AT COMMON VECTOR TABLE        BFG27
         USING QCOMMON,R11    SETUP ADDRESSABILITY    **ORIG**    BFG27
         L     R10,QVCKPT     POINT AT CHECKPOINT AREA            BFG27
         USING QCKPT,R10      SETUP ADDRESSABILITY    **ORIG**    BFG27
         L     R9,QVBROWS     POINT AT BROWSE AREA                BFG27
         USING QBROWSE,R9     SETUP ADDRESSABILITY    **ORIG**    BFG27
         LR    R15,R13        SAVE OLD SAVE AREA                  BFG27
         L     R13,BRWSAVE    GET SAVE AREA ON INPUT              BFG27
         LA    R13,WORKLEN(R13) GET TO NEXT SAVEAREA(SEE QSTART)  BFG27
         ST    R15,4(R13)     SAVE OLD POINTER                    BFG27
         ST    R13,8(R15)     SAVE NEW POINTER                    BFG27
         L     R2,QCCPTR      SET TO CURRENT TABLE POINTER        BFG27
         L     R1,8(R8)            GET DESIRED RECORD NUMBER      BFG27
         L     R1,0(R1)            GET DESIRED RECORD NUMBER      BFG27
         CVD   R1,QDWORK           GET IT IN DECIMAL              BFG27
         ZAP   QPREC,QDWORK        SET DESRIED RECORD NUMBER      BFG27
         TM    QFLAG2,QFLG2BRD     NEED TO RESET MAX              BFG27
         BZ    DNIS2               NO                             BFG27
         L     R1,4(,R13)          GET PREV R13 (ENTRY HERE)      BFG27
         L     R1,4(,R1)           GET R13 ON ENTRY TO BIRD       BFG27
         L     R1,12+12(,R1)       GET R1 ON ENTRY TO BIRD        BFG27
         L     R1,4(,R1)           GET PROWSE PARM LIST           BFG27
         MVC   X'68'(4,R1),=X'05F5E100'  SET MAX NUMBER           BFG27
         NI    X'24D'(R1),255-X'20'  TURN OFF MAX FOUND           BFG27
         NI    QFLAG2,255-QFLG2BRD NEED TO RESET MAX              BFG27
         B     DNIS2               GO AND USE MAIN CODE           BFG27
         EJECT                                                    BFG27
         DROP  ,                                                  BFG27
******************************************************************ISPF*
*                                                                *ISPF*
*        CHECK MACRO CODE - USED BY ISPF V1.X -> V2.2            *ISPF*
*                                                                *ISPF*
*        INPUT                                                   *ISPF*
*              R1  -->  DECB                                     *ISPF*
*                                                                *ISPF*
******************************************************************ISPF*
LSDSCHCK DS    0H                                                *ISPF*
         STM   R14,R12,12(R13) SAVE REGISTERS                    *ISPF*
         LR    R12,R15        SETUP BASE REGISTER                *ISPF*
         USING LSDSCHCK,R12   SETUP ADDRESSABILITY               *ISPF*
         L     R12,=A(LISTDS) GET ORIG BASE ADDR                 *ISPF*
         USING LISTDS,R12     SETUP ADDRESSABILITY    **ORIG**   *ISPF*
         LR    R8,R1          SAVE DECB POINTER                  *ISPF*
         USING DECSDECB,R8    SETUP ADDRESSABILITY               *ISPF*
         MVI   DECSDECB,X'7F' POST IT                            *ISPF*
         L     R9,DECDCBAD    POINT AT DCB                       *ISPF*
         USING IHADCB,R9      SETUP ADDRESSABILITY               *ISPF*
         L     R11,DCBDEBAD   POINT AT COMMON VECTOR TABLE       *ISPF*
         DROP  R8,R9                                             *ISPF*
         USING QCOMMON,R11    SETUP ADDRESSABILITY    **ORIG**   *ISPF*
         L     R10,QVCKPT     POINT AT CHECKPOINT AREA           *ISPF*
         USING QCKPT,R10      SETUP ADDRESSABILITY    **ORIG**   *ISPF*
         L     R9,QVBROWS     POINT AT BROWSE AREA               *ISPF*
         USING QBROWSE,R9     SETUP ADDRESSABILITY    **ORIG**   *ISPF*
         LR    R15,R13        SAVE OLD SAVE AREA                 *ISPF*
         L     R13,BRWSAVE    GET SAVE AREA ON INPUT             *ISPF*
         LA    R13,WORKLEN(R13) GET TO NEXT SAVEAREA(SEE QSTART) *ISPF*
         ST    R15,4(R13)     SAVE OLD POINTER                   *ISPF*
         ST    R13,8(R15)     SAVE NEW POINTER                   *ISPF*
         L     R2,QCCPTR      SET TO CURRENT TABLE POINTER       *ISPF*
***********************************************************************
*                                                                *ISPF*
*   RESET EOF INDICATOR SO MAX WILL ALWAYS FIND NEW END          *ISPF*
*                                                                *ISPF*
***********************************************************************
         L     R1,BRWCBTP     GET COMMON BROWSE TABLE            *ISPF*
         TM    QFLAG2,QFLG2IS2 IS THIS ISPF VERSION 2             BFG18
         BNO   NOTIS2         SKIP V2 CODE IF NOT                 BFG18
         NI    589(R1),X'DF'  SET EOF INDICATOR OFF    *V2ISPF*   BFG18
         MVC   104(4,R1),=F'100000000' SET ORIG RECORD COUNT      BFG18
         B     DNIS2          SKIP VERSION 1 CODE                 BFG18
NOTIS2   DS    0H                                                 BFG18
         NI    621(R1),X'DF'  SET EOF INIDCATOR OFF              *ISPF*
         MVC   140(4,R1),=F'100000000' SET ORIG RECORD COUNT     *ISPF*
DNIS2    DS    0H                                                 BFG18
         L     R9,QVDSPL      POINT AT DISPLAY AREA              *ISPF*
         USING QDISPLAY,R9    SETUP ADDRESSABILITY    **ORIG**   *ISPF*
         B     REPOS1        GO AND REPOSITION                   *ISPF*
         EJECT                                                   *ISPF*
***********************************************************************
*                                                                     *
*   PROCESS DATASET                                                   *
*                                                                     *
***********************************************************************
NEXTBLK  L     R4,0(R5)       DISK ADDR OF NEXT BLOCK
FIRST    LTR   R4,R4          IS THE DISK ADDR ZERO?
         BZ    END            YES. END OF DATASET.
         ST    R4,0(R2)       STORE DISK ADDR IN TABLE
         BAL   R8,READ        READ A BLOCK
         CLC   QPJOBID,4(R5)  DOES THE JOBID MATCH?               UF046
         BNE   END            NO. END OF DATASET.
         L     R15,QCJQEA     ADDRESS OF JQE                      UF046
         USING JQE,R15        TEMP ADDRESSING                     UF046
         TM    JQEFLAG3,JQE3SYSD  SYSTEM DATASETS HAVE DSID=0     UF046
         DROP  R15                                                UF046
         BO    QDSIDOK        LET IT GO                           UF046
         CLC   QPDSID,8(R5)   DATASET ID MATCH?                   UF046
         BNE   END            NO. END OF DATASET                  UF046
QDSIDOK  DS    0H                                                 UF046
         MVC   4(4,R2),QCCREC STORE CURRENT REC NUM IN TABLE
         ST    R2,QCCPTR      STORE CURRENT TABLE ADDR
         CP    QCCREC,QCHREC  IS THE CURRENT REC NO > HIGHEST?
         BNH   NOTHI          NO. SKIP.
         MVC   QCHREC(8),QCCREC REPLACE HI REC CNT AND PTR
NOTHI    LA    R2,8(R2)       INCREMENT TO NEXT TBL ENTRY
         C     R2,QCEND       IS THIS THE END OF TABLE?
         BNL   TILT2          YES. TILT.
         LA    R4,10(R5)      ADDR OF FIRST RECORD IN BLOCK
***********************************************************************
*                                                                     *
*   PROCESS RECORDS                                                   *
*                                                                     *
***********************************************************************
NEXTREC  CLI   0(R4),X'FF'    IS LENGTH BYTE FF?
         BE    NEXTBLK        YES. END OF BLOCK.
         TM    1(R4),X'10'    IS THIS A SPANNED RECORD?
         BO    SPAN           YES. SKIP IT.
         SR    R6,R6          ZERO OUT REG
         IC    R6,0(R4)       INSERT LENGTH
         LR    R7,R6          SAVE RECORD LENGTH
         LR    R1,R4          SAVE RECORD LOCATION
         TM    1(R4),X'80'    IS CARRIAGE CONTROL SPECIFIED?
         BZ    NOCCTL         NO. CONTINUE.
         LA    R1,1(R1)       SKIP OVER CARRIAGE CONTROL
NOCCTL   TM    1(R4),X'08'    IS THIS RECORD TO BE IGNORED?
         LR    R4,R1          UPDATE RECORD POINTER
         BNZ   SKIPREC        YES. SKIP IT.
         AP    QCCREC,=P'1'   ADD ONE TO CUR REC NO
         CP    QCCREC,QPREC   HAVE WE REACHED THE RECORD WE WANT?
         BL    SKIPREC        NO. TRY NEXT RECORD.
         CLI   QCODE,4        IS THE REQUEST FOR A FIND?
         BE    FIND           YES. DO IT.
         CLI   QCODE,8        IS THE REQUEST FOR A FINDTIME?
         BE    FINDTIME       YES. DO IT.
FINDOFF  AH    R1,QPOFFSET    ADD OFFSET TO START OF RECORD
         SH    R7,QPOFFSET    SUBTRACT OFFSET FROM LENGTH
         BNP   ZEROPRT        NO DATA LEFT IN RECORD.
         CH    R7,QDLNELEN    IS THE RECORD BIGGER THAN LINE?     UF003
         BNH   LTMAX          NO. USE RECORD LENGTH.              UF003
         LH    R7,QDLNELEN    YES. USE A LENGTH OF LINE.          UF003
LTMAX    TM    QFLAG1,QFLG1ISP  ARE WE IN ISPF?????              *ISPF*
         BZ    NISPF2        NOPE SO CONTINUE NORMALLY           *ISPF*
******************************************************************ISPF*
*                                                                *ISPF*
*        MOVE LINE BACK TO BROWSE  FOR ISPF V1.X -> V2.2         *ISPF*
*                                                                *ISPF*
*              R7  ===  LENGTH                                   *ISPF*
*              R1+3-->  DATA                                     *ISPF*
*                                                                *ISPF*
******************************************************************ISPF*
         LA    R1,3(,R1)     OFFSET PAST RECORD HEADER           *ISPF*
         L     R8,4(R13)           GET ORIG R13                  *ISPF*
         L     R8,12+4+4+4(R8) GET DECB ADDRESS (R1 ON ENTRY)    *ISPF*
         TM    QFLAG2,QFLG2I23     Q. IS THIS ISPF V2.3           BFG27
         BO    QISPF23A            A. YES SO HANDLE               BFG27
         BCTR  R7,0           GET MACHINE LENGTH                 *ISPF*
         USING DECSDECB,R8    SETUP ADDRESSABILITY FOR DECB      *ISPF*
         L     R15,DECAREA    POINT TO AREA                      *ISPF*
         LA    R14,5(R7)      GET RDW                            *ISPF*
         STH   R14,4(R15)     SET RDW                            *ISPF*
         XC    6(2,R15),6(R15) CLEAR REST OF RDW                 *ISPF*
         LA    R14,4(R14)     GET BDW                            *ISPF*
         STH   R14,0(R15)     SET BDW                            *ISPF*
         XC    2(2,R15),2(R15) CLEAR REST OF BDW                 *ISPF*
         EX    R7,RECMOVE                                        *ISPF*
         AP    QPREC,=P'1'    SET NEXT ENTRY TO NEXT RECORD      *ISPF*
         B     SETIOB         ALL DONE                           *ISPF*
RECMOVE  MVC   8(0,R15),0(R1) MOVE IN DATA                       *ISPF*
         DROP  R8                                                *ISPF*
******************************************************************BFG27
*                                                                *BFG27
*        MOVE LINE BACK TO BROWSE  FOR ISPF V2.3 -> ??           *BFG27
*                                                                *BFG27
*              R7  ===  LENGTH                                   *BFG27
*              R8  -->  READ ROUTINE PARM LIST                   *BFG27
*              R1  -->  DATA                                     *BFG27
*                                                                *BFG27
******************************************************************BFG27
QISPF23A DS    0H                                                 BFG27
         PUSH  USING                                              BFG27
         L     R9,QVBROWS          POINT AT BROWSE AREA           BFG27
         USING QBROWSE,R9          SETUP ADDRESSABILITY           BFG27
         L     R15,MYFREE          POINT TO MY BUFFER             BFG27
         L     R2,0(R8)            GET ADDR OF VARIABLE           BFG27
         ST    R15,0(R2)           SET POINTER IN LINE VARIABLE   BFG27
         L     R2,4(R8)            GET ADDR OF VARIABLE           BFG27
         ST    R7,0(R2)            SET LENGTH IN PARM LIST        BFG27
         SL    R15,=F'8'           ADJUST FOR MVC OPERAND         BFG27
         BCTR  R7,0                GET MACHINE LENGTH             BFG27
         EX    R7,RECMOVE          MOVE IN DATA                   BFG27
         L     R15,4(R13)          NOW SET THE CORRECT RETURN CODEBFG27
         XC    12+4(4,R15),12+4(R15) SET TO 0                     BFG27
         B     LSDSCKXT            NOW EXIT                       BFG27
         POP   USING                                              BFG27
******************************************************************BFG27
*                                                                *BFG27
*        MOVE LINE TO DISPLAY FOR NATIVE SCREEN CONTROL          *BFG27
*                                                                *BFG27
*              R7  ===  LENGTH                                   *BFG27
*              R1+3-->  DATA                                     *BFG27
*                                                                *BFG27
******************************************************************BFG27
NISPF2   DS    0H                                                *ISPF*
         STH   R7,QDMLNG      STORE MESSAGE LENGTH                UF003
         LA    R1,3(R1)       OFFSET PAST REC HDR
         ST    R1,QDMSGA      STORE ADDR OF MESSAGE LINE
         L     R15,=V(DISPLAY) ADDRESS OF DISPLAY MODULE
         BALR  R14,R15        GO TO IT
         TM    QDOVER,1       WAS THERE A PAGE OVERFLOW?
         BNO   SKIPREC        NO. SKIP.
         ZAP   QPREC,QCCREC   UPDATE THE REPOSITION NUMBER
         MVC   HREC,EDIT      PATTERN FOR EDIT
         ED    HREC,QCCREC    EDIT RECORD NUMBER
SKIPREC  LA    R4,3(R6,R4)    INCREMENT TO NEXT RECORD
         B     NEXTREC        PROCESS NEXT RECORD
SPAN     LH    R6,2(R4)       LENGTH OF SEGMENT
         TM    1(R4),X'08'    IS THIS THE FIRST SEGMENT?
         BO    SPANFRST       YES. USE HEADER LENGTH OF 6.
         LA    R4,4(R6,R4)    UPDATE RECORD POSITION
         B     NEXTREC        PROCESS NEXT RECORD
SPANFRST TM    1(R4),X'80'    SKIP IF CARRIAGE CONTROL            CL010
         BNO   *+8                IS NOT PRESENT                  CL010
         LA    R4,1(R4)               ELSE ACCOUNT CC             CL010
         LA    R4,6(R6,R4)    UPDATE RECORD POSITION              CL010
         B     NEXTREC        PROCESS NEXT RECORD
ZEROPRT  LA    R1,QBLANK      PRINT A BLANK
         LA    R7,1           LENGTH OF ONE
         B     LTMAX          PRINT THE RECORD                    UF003
END      TM    QFLAG1,QFLG1ISP  IS THIS ISPF????                 *ISPF*
         BO    LSDSCKEF         IF SO THEN RETURN TO 'CHECK'     *ISPF*
         CP    QCCREC,=P'0'   IS THE DATASET EMPTY
         BE    STOP           YES. QUIT.
         MVC   HEND,ENDLINE   TELL THEM THIS IS THE END
         MVC   HREND,EDIT     PATTERN FOR EDIT
         ED    HREND,QCCREC   LAST REC NO
         CLI   QCODE,32       WAS REQUEST FOR BOTTOM?
         BE    BOTTOM         YES. BACK UP 21 LINES.
         MVC   QDMLNG,=H'0'   ZERO OUT MESSAGE LENGTH
         L     R15,=V(DISPLAY) ADDR OF DISPLAY MODULE
         BALR  R14,R15        FLUSH THE SCREEN
         ZAP   QPREC,=P'1'    RECORD NUMBER 1
         MVC   QDHLINE,QCHLINE BLANK THE TITLE LINE
         B     TOP            START AT TOP OF DATASET
STOP     MVC   QPDSID,=X'FFFF' MAKE USER SPECIFY A NEW DATA SET     SBG
         MVC   QDHLINE,=CL80'*** DATA SET IS EMPTY ***'
         QSTOP
******************************************************************ISPF*
*                                                                *ISPF*
**       POINT AT IOB AND SET RESIDUAL LENGTH IN IOB             *ISPF*
*                                                                *ISPF*
******************************************************************ISPF*
SETIOB   DS    0H                                                *ISPF*
         L     R8,4(R13)           GET ORIG R13                  *ISPF*
         L     R8,12+4+4+4(R8)  GET DECB ADDRESS (ORIG R1)       *ISPF*
         USING DECSDECB,R8    SETUP ADDRESSABILITY FOR DECB      *ISPF*
         L     R1,DECAREA     POINT AT BUFFER                    *ISPF*
         LA    R15,256        SET BUFFER LENGTH                  *ISPF*
         SH    R15,0(R1)      GET RESIDUAL LENGTH                *ISPF*
         L     R1,QVBROWS     POINT AT BROWSE AREA               *ISPF*
         USING QBROWSE,R1     SETUP ADDRESSABILITY    **ORIG**   *ISPF*
         LA    R1,BRWIOB      POINT AT IOB                       *ISPF*
         ST    R1,DECIOBPT    SAVE POINTER                       *ISPF*
         STH   R15,14(R1)     SET RESIDUAL COUNT                 *ISPF*
         B     LSDSCKXT       ALL DONE                           *ISPF*
         DROP  R8,R1                                             *ISPF*
******************************************************************ISPF*
*                                                                *ISPF*
**       SIGNAL EOF SINCE BEYOND LAST LINE TO BROWSE             *ISPF*
*                                                                *ISPF*
******************************************************************ISPF*
LSDSCKEF DS    0H                                                *ISPF*
         L     R8,4(R13)           GET ORIG R13                  *ISPF*
         L     R8,12+4+4+4(R8)  GET DECB ADDRESS (ORIG R1)       *ISPF*
         TM    QFLAG2,QFLG2I23     Q. IS THIS ISPF V2.3           BFG27
         BZ    QISPF22B            A. NOPE SO SKIP 2.3 CODE       BFG27
*                                                                 BFG27
**       FOR BRIF (ISPF V2.3) INTERFACE, RETURN MAX RECORD        BFG27
**       NUMBER AND A RETURN CODE OF 8                            BFG27
*                                                                 BFG27
         OI    QFLAG2,QFLG2BRD     NEED TO RESET MAX              BFG27
         ZAP   QDWORK,QCCREC       GET CURRENT (MAX) RECORD       BFG27
         CVB   R1,QDWORK           MAKE IT BINARY                 BFG27
         L     R15,8(R8)           GET VARIABLE ADDRESS           BFG27
         ST    R1,0(R15)           SET MAXIMUM RECORD NUMBER      BFG27
         PUSH  USING                                              BFG27
         L     R9,QVBROWS          POINT AT BROWSE AREA           BFG27
         USING QBROWSE,R9          SETUP ADDRESSABILITY           BFG27
         L     R15,MYFREE          POINT TO MY BUFFER             BFG27
         L     R2,0(R8)            GET ADDRESS OF VARIABLE        BFG27
         ST    R15,0(R2)           SAVE ADDRESS                   BFG27
         L     R2,4(R8)            GET ADDRESS OF VARIABLE        BFG27
         ST    R7,0(R2)            SAVE LENGTH OF LAST RECORD     BFG27
         L     R15,4(R13)          GET ORIGINAL SAVE AREA         BFG27
         MVC   12+4(4,R15),=F'8'   SET 'MAX REACHED' RETURN CODE  BFG27
         B     LSDSCKXT            AND QUIT                       BFG27
         POP   USING                                              BFG27
*                                                                 BFG27
**       FOR ISPF V1.X -> V2.2 USING THE DCB INTERFACE            BFG27
**       SETUP SO THE THE DCBEODAD ADDRESS IS CALLED              BFG27
**       ON RETURN                                                BFG27
*                                                                 BFG27
QISPF22B DS    0H                                                 BFG27
         USING DECSDECB,R8    SETUP ADDRESSABILITY FOR DECB      *ISPF*
         L     R1,DECDCBAD    POINT AT DCB                       *ISPF*
         USING IHADCB,R1      SETUP ADDRESSABILITY               *ISPF*
         L     R1,DCBEODAD    GET EOD ADDR                       *ISPF*
         DROP  R1                                                *ISPF*
         L     R15,4(R13)     GET OLD SAVEAREA POINTER           *ISPF*
         ST    R1,12(R15)     SAVE RETURN ADDRESS                *ISPF*
         DROP  R8                                                *ISPF*
******************************************************************ISPF*
*                                                                *ISPF*
**       EXIT FROM CHECK                                         *ISPF*
*                                                                *ISPF*
******************************************************************ISPF*
LSDSCKXT L     R13,4(R13)     GET OLD SAVEAREA POINTER           *ISPF*
         LM    R14,R12,12(R13) RESTORE REGISTER                  *ISPF*
LSDSCKND BR    R14            EXIT                               *ISPF*
***********************************************************************
*                                                                     *
*   BOTTOM OF DATASET                                                 *
*                                                                     *
***********************************************************************
BOTTOM   ZAP   QPREC,QCCREC   LAST RECORD NUMBER
         MVI   QCODE,0        AVOID A LOOP
         SP    QPREC,QDLNES   TOP OF PAGE -1                      UF003
         AP    QPREC,=P'1'    TOP OF PAGE                         UF003
         BP    REPOS          CONTINUE IF POSITIVE.
         ZAP   QPREC,=P'1'    TOP OF DATASET
***********************************************************************
*                                                                     *
*   REPOSITION TO REQUESTED RECORD NUMBER                             *
*                                                                     *
***********************************************************************
REPOS    MVC   QDHLINE,QCHLINE MOVE IN HEADING LINE
         MVC   HREC,EDIT      PREPARE FOR EDIT
         ED    HREC,QPREC     EDIT RECORD NUMBER
REPOS1   CP    QPREC,QCHREC   IS THE REQ NO > HIGHEST READ?      *ISPF*
         BNL   HI             YES. GO FROM HI.
         CP    QPREC,QCCREC   IS THE REQ NO > CURRENT REC?
         BH    UP             YES. GO FROM CURRENT.
         CP    QPREC,=P'1'    IS REQ FOR TOP OF DATASET?
         BH    DOWN           NO. GO DOWN FROM CURRENT.
TOP      L     R2,QCSTART     START AT TOP
RESUME   L     R4,0(R2)       LOAD DISK ADDR
         L     R5,QCBLKA      ADDR OF BLOCK IOAREA
         MVC   QCCREC,4(R2)   RESET CURRENT REC NO
         B     FIRST          RESUME PROCESSING
HI       L     R2,QCHPTR      START AT HIGHEST SO FAR
         B     DOWNLOOP       FIND CORRECT BLOCK
UP       L     R2,QCCPTR      CURRENT TABLE PTR
UPLOOP   CP    QPREC,12(4,R2) IS THE NEXT ENTRY > REQ NO?
         BNH   RESUME         YES. PROCESS IT.
         LA    R2,8(R2)       TRY NEXT ENTRY
         B     UPLOOP         AGAIN
DOWN     L     R2,QCCPTR      CURRENT TABLE PTR
DOWNLOOP CLI   QSUBNAME,C'M'  IS THIS THE MODEL COMMAND?          UF045
         BNE   OKCMD                                              UF045
         CLC   QPARM1,=CL8' ' WAS THERE A PARM?                   UF045
         BNE   OKCMD          YES, SKIP                           UF045
         QTILT 'MODEL OPERAND REQUIRED'                           UF045
         SPACE 1                                                  UF045
OKCMD    CP    QPREC,4(4,R2)  IS THE ENTRY < REQ NO?              UF045
         BH    RESUME         YES. PROCESS IT.
         SH    R2,=H'8'       TRY PREVIOUS ENTRY
         B     DOWNLOOP       AGAIN
***********************************************************************
*                                                                     *
*   FIND MATCHING RECORD ROUTINE                                      *
*                                                                     *
***********************************************************************
FIND     LH    R3,QPLNG       LENGTH-1 OF COMPARE
         LR    R14,R6         LENGTH OF RECORD
         SR    R14,R3         NUMBER OF COMPARES
         BNP   SKIPREC        RECORD IS TOO SMALL. SKIP IT.
         LR    R15,R4         FIRST BYTE OF RECORD
         CLC   QOFFE,=H'0'    END RANGE FOR FIND SPECIFIED ?
         BE    FLOOP          NO. BYPASS RANGE FOR FIND
         AH    R15,QOFFS      YES. START ADDR FOR FIND
         LH    R14,QOFFE      END ADDR FOR FIND
         SH    R14,QOFFS      VALID RANGE ?
         BP    FLOOP          YES. CONTINUE PROCESSING
         QTILT ' *** ERROR IN COLUMN SPECIFICATION ***'
FLOOP    EX    R3,CLC         DOES THE FIND DATA MATCH THE RECORD?
         BE    MATCH          YES. DISCONTINUE SEARCH.
         LA    R15,1(R15)     INCREMENT TO NEXT BYTE
         BCT   R14,FLOOP      TRY NEXT BYTE
         B     SKIPREC        SKIP THE RECORD. NO MATCH.
MATCH    CLI   QSUBNAME+1,C'A' IS THE REQUEST FOR A FINDALL?
         BE    FALL           YES. DO NOT DISABLE SEARCH.
         MVI   QCODE,0        END THE SEARCH
         ZAP   QPREC,QCCREC   UPDATE THE REPOSITION NUMBER
FALL     MVC   HREC,EDIT      PREPARE FOR EDIT
         ED    HREC,QCCREC    EDIT RECORD NUMBER
         B     FINDOFF        CONTINUE
CLC      CLC   QPFIND(1),3(R15) COMPARE PARM TO RECORD
***********************************************************************
*                                                                     *
*   FIND THE RECORD WHICH IS GREATER THAN OR EQUAL TO TIME            *
*                                                                     *
***********************************************************************
FINDTIME CLI   10(R4),C'.'    DOES THIS RECORD HAVE TIME?
         BE    FINDTSP1       YES, THIS IS SP 1 SYSLOG            CL003
         CLI   27(R4),C':'         DOES RECORD HAVE TIME?         CL003
         BNE   FINDTXA1            NO, TRY XA 2.2 SYSLOG          BFG31
         CLC   QPARM1,25(R4)       IS THIS THE TIME WE WANT?      CL003
         BH    SKIPREC             NO. SKIT IT.                   CL003
         B     MATCH               END THE SEARCH                 CL003
         SPACE 1                                                  BFG31
FINDTXA1 TM    QFLAG2,QFLG2X22 Q.IS THIS XA 2.2                   BFG31
         BZ    SKIPREC        Q. NOPE                             BFG31
         CLI   30(R4),C':'    DOES RECORD HAVE TIME               BFG31
         BNE   SKIPREC                                            BFG31
         CLC   QPARM1,28(R4)  IS THIS THE TIME WE WANT            BFG31
         BH    SKIPREC        NO. SKIP IT                         BFG31
         B     MATCH          END OF SEARCH                       BFG31
         SPACE 1                                                  CL003
FINDTSP1 CLC   QPARM1,8(R4)   IS THIS THE TIME WE WANT?           CL003
         BH    SKIPREC        NO. SKIP IT.
         B     MATCH          END THE SEARCH
***********************************************************************
*                                                                     *
*   READ A BLOCK FROM HASPACE                                         *
*                                                                     *
***********************************************************************
READ     ST    R4,QCTRAK      STORE DISK ADDR
         LR    R1,R5          IOAREA ADDRESS
         L     R15,=V(READSPC) ADDR OF ROUTINE TO READ HASPACE
         BALR  R14,R15        GO TO IT
         BR    R8             RETURN TO CALLER
         EJECT                                                   *ISPF*
         PUSH  USING                                             *ISPF*
         DROP  ,                                                 *ISPF*
******************************************************************ISPF*
*                                                                *ISPF*
*        READ MACRO CODE                                         *ISPF*
*                                                                *ISPF*
*        INPUT                                                   *ISPF*
*              R1  -->  DECB                                     *ISPF*
*                                                                *ISPF*
******************************************************************ISPF*
LSDSREAD DS    0H                                                *ISPF*
*                                                                *ISPF*
**       DO NOTHING HERE, LEAVE ALL WORK FOR                     *ISPF*
**       CHECK ROUTINE                                           *ISPF*
*                                                                *ISPF*
         BR    R14                                               *ISPF*
         POP   USING                                             *ISPF*
         EJECT                                                   *ISPF*
         PUSH  USING                                             *ISPF*
         DROP  ,                                                 *ISPF*
******************************************************************ISPF*
*                                                                *ISPF*
*        POINT/NOTE MACRO CODE                                   *ISPF*
*                                                                *ISPF*
*        INPUT                                                   *ISPF*
*              R1  -->  DCB                                      *ISPF*
*              R0  -->  TTRN IF POINT ENTRY (+4)                 *ISPF*
*                                                                *ISPF*
*        OUTPUT                                                  *ISPF*
*              R1  ===  TTRN IF NOTE ENTRY (+0)                  *ISPF*
*                                                                *ISPF*
*                                                                *ISPF*
******************************************************************ISPF*
         USING LSDSPNT,R15    SETUP TEMP ADDRESSABILITY          *ISPF*
LSDSPNT  DS    0H                                                *ISPF*
         B     LSDSNOT        +0 ENTRY IS NOTE SO HANDLE         *ISPF*
*                             +4 ENTRY IS POINT                  *ISPF*
         DROP  R15                                               *ISPF*
*                                                                *ISPF*
**       DO POINT                                                *ISPF*
**             FOR US THE TTR IS REALLY THE RELATIVE RECORD      *ISPF*
**             NUMBER OF THE LINE IN THE SPOOL FILE.             *ISPF*
**             SO JUST CONVERT IT AND SAVE IT IN QPREC.          *ISPF*
*                                                                *ISPF*
         STM   R14,R12,12(R13) SAVE REGISTERS                    *ISPF*
         LR    R12,R15        SETUP BASE REGISTER                *ISPF*
         USING LSDSPNT,R12    SETUP ADDRESSABILITY               *ISPF*
         LR    R5,R1          SAVE DCB  POINTER                  *ISPF*
         USING IHADCB,R5      SETUP ADDRESSABILITY               *ISPF*
         L     R11,DCBDEBAD   POINT AT COMMON VECTOR TABLE       *ISPF*
         USING QCOMMON,R11    SETUP ADDRESSABILITY               *ISPF*
         L     R9,QVDSPL      POINT AT DISPLAY AREA              *ISPF*
         USING QDISPLAY,R9    SETUP ADDRESSABILITY               *ISPF*
         L     R7,QVCKPT      POINT AT CHECKPOINT AREA           *ISPF*
         USING QCKPT,R7       SETUP ADDRESSABILITY               *ISPF*
         LR    R15,R0         MOVE POINTER                       *ISPF*
         L     R1,0(R15)      GET THE TTRN                       *ISPF*
         SRL   R1,8           GET TTR (REALLY REC #)             *ISPF*
         CVD   R1,QDOUBLE     CONVERT IT                         *ISPF*
         ZAP   QPREC,QDOUBLE  SET DESIRED RECORD #               *ISPF*
         LM    R14,R12,12(R13) RESTORE REGISTERS                 *ISPF*
         SR    R15,R15        SET RETURN CODE                    *ISPF*
         BR    R14            EXIT                               *ISPF*
         DROP  R12,R5,R11,R7,R9 KILL ADDRESSABILITY              *ISPF*
         SPACE 3                                                 *ISPF*
*                                                                *ISPF*
**       DO NOTE                                                 *ISPF*
**             IN THIS CASE RETURN THE CURRENT RECORD NUMBER     *ISPF*
**             AS THE TTR.  BROWSE IS SO DEVICE INDEPENDENT      *ISPF*
**             HE'LL NEVER NOTICE.                               *ISPF*
*                                                                *ISPF*
LSDSNOT  STM   R14,R12,12(R13) SAVE REGISTERS                    *ISPF*
         LR    R12,R15        SETUP BASE REGISTER                *ISPF*
         USING LSDSPNT,R12    SETUP ADDRESSABILITY               *ISPF*
         LR    R5,R1          SAVE DCB  POINTER                  *ISPF*
         USING IHADCB,R5      SETUP ADDRESSABILITY               *ISPF*
         L     R11,DCBDEBAD   POINT AT COMMON VECTOR TABLE       *ISPF*
         USING QCOMMON,R11    SETUP ADDRESSABILITY               *ISPF*
         L     R9,QVDSPL      POINT AT DISPLAY AREA              *ISPF*
         USING QDISPLAY,R9    SETUP ADDRESSABILITY               *ISPF*
         L     R7,QVCKPT      POINT AT CHECKPOINT AREA           *ISPF*
         USING QCKPT,R7       SETUP ADDRESSABILITY               *ISPF*
         ZAP   QDOUBLE,QCCREC GET CURRENT RECORD #               *ISPF*
         CVB   R1,QDOUBLE     MAKE IT BINARY                     *ISPF*
         SLL   R1,8           MAKE LOOK LIKE TTRN                *ISPF*
LSDSNOTX ST    R1,12+4+4+4(R13) SAVE VALUE                       *ISPF*
         LM    R14,R12,12(R13) RESTORE REGISTERS                 *ISPF*
         SR    R15,R15        CLEAR RETURN CODE                  *ISPF*
         BR    R14            EXIT                               *ISPF*
         DROP  ,                                                 *ISPF*
         POP   USING                                             *ISPF*
***********************************************************************
*                                                                     *
*   MISCELLANY                                                        *
*                                                                     *
***********************************************************************
         LTORG
ENDLINE  DC    C', END OF DATA. LAST REC #'
EDIT     DC    X'4020202020202021'
         DC    CL45' '
SYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023
LISTDS   CSECT ,                                                  UF023
         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL01
         $HASPEQU ,
         IFGRPL ,
         $BUFFER ,                                                UF046
         $TAB
         $JQE  ,                                                  UF046
         $JCT
         $PDDB
         $IOT
         QCOMMON
         DCBD  DSORG=PS                                          *ISPF*
         IHADECB ,                                               *ISPF*
         EJECT                                                   *ISPF*
*                                                                *ISPF*
**       DEFINE POINTERS IN TLD DSECT                            *ISPF*
*                                                                *ISPF*
TLD      DSECT                                                   *ISPF*
         ORG   TLD+16                                            *ISPF*
ISRRET   DS    F                                                 *ISPF*
         ORG   TLD+52                                            *ISPF*
ISPNM    DS    F                                                 *ISPF*
         ORG   TLD+64                                            *ISPF*
ISRNM    DS    F                                                 *ISPF*
*                                                                *ISPF*
**       DEFINE ACCESS LIST FOR ISP NAMES                        *ISPF*
*****                                                             BFG18
*****            FOR ISPF VERSION 2 THE OFFSET IS 4 TOO BIG       BFG18
*****            CODE HAS BEEN ADDED TO FIX THIS DYNAMICALLY      BFG18
*****                                                             BFG18
*                                                                *ISPF*
ISPNAME  DSECT                                                   *ISPF*
         ORG   ISPNAME+184                                       *ISPF*
ISPCMSG  DS    F                                                 *ISPF*
*                                                                *ISPF*
**       DEFINE ACCESS LIST FOR ISR NAMES                        *ISPF*
*****                                                             BFG18
*****            FOR ISPF VERSION 2 THE OFFSET IS 4 TOO BIG       BFG18
*****            CODE HAS BEEN ADDED TO FIX THIS DYNAMICALLY      BFG18
*****                                                             BFG18
*                                                                *ISPF*
ISRNAME  DSECT                                                   *ISPF*
         ORG   ISRNAME+32                                        *ISPF*
ISRCBC   DS    F                                                 *ISPF*
         ORG   ISRNAME+48                                        *ISPF*
ISRCBR   DS    F                                                 *ISPF*
         ORG   ISRNAME+52                                        *ISPF*
ISRCBS   DS    F                                                 *ISPF*
         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL01
QCOMMON  DSECT ,                                                 *ISPF*
         ORG   QDHLINE
         DS    C'JOB XXXXXXXX, DSID XXXXXXXX, REC #'
HREC     DS    CL8
HEND     DS    C', END OF DATA. LAST REC #'
HREND    DS    CL8
WORK     DSECT
         DS    CL72
DWORD    DS    D                                                  UF040
WORKLEN  EQU   *-WORK              LENGTH OF WORKAREA            *ISPF*
SYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023
         END
