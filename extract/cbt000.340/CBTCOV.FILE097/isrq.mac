ISRQ     TITLE 'ISPF/PDF / QUEUE INTERFACE MODULE'               *ISPF*
ISRQ     QSTART MAIN=YES           START ISRQ CSECT ASSEMBLY     *ISPF*
         USING WORK,R13            OUR WORK AREA                 *ISPF*
         DROP  R11                                               *ISPF*
         PRINT GEN                                               *ISPF*
******************************************************************ISPF*
*                                                                *ISPF*
*  GET PARMS PASSED FROM ISPF                                    *ISPF*
*                                                                *ISPF*
******************************************************************ISPF*
         L     R3,0(R2)            GET TLD ADDRESS               *ISPF*
         ST    R3,QPRM1            SETUP PARM LIST               *ISPF*
         L     R4,=V(ISPLINK)                                    *ISPF*
         ST    R4,QPRM2            SAVE ADDRESS OF 'ISPLINK'     *ISPF*
******************************************************************ISPF*
*                                                                *ISPF*
*  GET ADDRESS OF ORIGINAL CPPL AND BUILD OUR OWN COPY           *ISPF*
*                                                                *ISPF*
******************************************************************ISPF*
         USING PSA,R0                                            *ISPF*
         L     R2,PSATOLD          GET MY TCB ADDR               *ISPF*
         USING TCB,R2                                            *ISPF*
         L     R2,TCBOTC           GET MOTHER TASK (ISPF ITSELF) *ISPF*
         L     R2,TCBFSA           GET ISPF FSA                  *ISPF*
         L     R2,12+4+4+4(R2)     GET R1 ON ENTRY TO ISPF (CPPL)*ISPF*
         DROP  R2,R0                                             *ISPF*
         MVC   QCPPL(CPPLLEN),0(R2) COPY CPPL                    *ISPF*
         LA    R2,QCPPL            POINT AT OURS                 *ISPF*
         ST    R2,QPRM3            SAVE ADDRESS OF CPPL          *ISPF*
******************************************************************ISPF*
*                                                                *ISPF*
*  RETRIEVE NAME OF QUEUE COMMMAND FROM SCREEN                   *ISPF*
*                                                                *ISPF*
******************************************************************ISPF*
         LA    R3,QNAME            POINT AT NAME                 *ISPF*
         MVC   LENG,=F'8'          SET MAX LENGTH                *ISPF*
         CALL  ISPLINK,(VCOPY,VNM1,LENG,(R3),VMOVE),VL,          *ISPF*X
               MF=(E,VCALLST)                                    *ISPF*
******************************************************************ISPF*
*                                                                *ISPF*
*  BUILD A COMMAND BUFFER                                        *ISPF*
*                                                                *ISPF*
******************************************************************ISPF*
         USING CPPL,R2                                           *ISPF*
         LA    R1,ISRCBUF          GET ADDRESS OF FAKE CMD BUFFER*ISPF*
         MVC   0(4,R1),=AL2(0,0)   SET HEADER                    *ISPF*
         MVC   4(72,R1),=CL72' '   SET BLANKS                    *ISPF*
         MVC   4(8,R1),QNAME       MOVE IN COMMAND NAME          *ISPF*
         ST    R1,CPPLCBUF         POINT AT NEW BUFFER           *ISPF*
         L     R3,LENG             GET LENGTH OF NAME            *ISPF*
         STH   R3,ISRCBUF+2        SET OFFSET USED               *ISPF*
         LA    R3,4+1(R3,R1)       POINT TO FREE BYTE            *ISPF*
         MVI   0(R3),C''''         SET A QUOTE FOR PARSE          BFG15
         LA    R3,1(,R3)           BUMP POINTER                   BFG15
         MVC   LENG,=F'30'         SET MAX LENGTH                *ISPF*
         CALL  ISPLINK,(VCOPY,VNM6,LENG,(R3),VMOVE),VL,          *ISPF*X
               MF=(E,VCALLST)                                    *ISPF*
         ICM   R1,15,LENG          GET LENGTH OF INPUT PARM       BFG15
         BNZ   HADCMD                                             BFG15
         MVI   0(R3),C'*'          SET TO NULL INDICATOR          BFG15
         LA    R1,1                SET LENGTH OF COMMAND TO 1     BFG15
HADCMD   AR    R3,R1               POINT TO NEXT BYTE             BFG15
         MVI   0(R3),C''''         SET FOR PARSE                  BFG15
         LA    R3,2(,R3)           BUMP FOR QUOTE AND BLANK       BFG15
*   PROCESS PREFIX KEYWORD                                       *ISPF*
         LR    R5,R3               SAVE ORIG PTR                 *ISPF*
         MVC   0(7,R3),=C'PREFIX('                               *ISPF*
         LA    R3,7(,R3)           BUMP POINTER                  *ISPF*
         MVC   LENG,=F'8'          SET MAX LENGTH                *ISPF*
         CALL  ISPLINK,(VCOPY,VNM2,LENG,(R3),VMOVE),VL,          *ISPF*X
               MF=(E,VCALLST)                                    *ISPF*
         ICM   R1,15,LENG          GET LENGTH                    *ISPF*
         BZ    NPREFIX             NO PARAMETER                  *ISPF*
         LA    R5,0(R1,R3)         POINT AFTER VALUE             *ISPF*
         MVI   0(R5),C')'          SET SUFIX PAREN               *ISPF*
         LA    R5,2(R5)            BUMP POINTER                  *ISPF*
NPREFIX  LR    R3,R5               SET NEW POINTER               *ISPF*
*   PROCESS VOLSER KEYWORD                                       *ISPF*
         LR    R5,R3               SAVE ORIG PTR                 *ISPF*
         MVC   0(4,R3),=C'VOL('                                  *ISPF*
         LA    R3,4(,R3)           BUMP POINTER                  *ISPF*
         MVC   LENG,=F'6'          SET MAX LENGTH                *ISPF*
         CALL  ISPLINK,(VCOPY,VNM3,LENG,(R3),VMOVE),VL,          *ISPF*X
               MF=(E,VCALLST)                                    *ISPF*
         ICM   R1,15,LENG          GET LENGTH                    *ISPF*
         BZ    NVOLSER             NO PARAMETER                  *ISPF*
         LA    R5,0(R1,R3)         POINT AFTER VALUE             *ISPF*
         MVI   0(R5),C')'          SET SUFIX PAREN               *ISPF*
         LA    R5,2(R5)            BUMP POINTER                  *ISPF*
NVOLSER  LR    R3,R5               SET NEW POINTER               *ISPF*
*   PROCESS UNIT KEYWORD                                         *ISPF*
         LR    R5,R3               SAVE ORIG PTR                 *ISPF*
         MVC   0(5,R3),=C'UNIT('                                 *ISPF*
         LA    R3,5(,R3)           BUMP POINTER                  *ISPF*
         MVC   LENG,=F'8'          SET MAX LENGTH                *ISPF*
         CALL  ISPLINK,(VCOPY,VNM4,LENG,(R3),VMOVE),VL,          *ISPF*X
               MF=(E,VCALLST)                                    *ISPF*
         ICM   R1,15,LENG          GET LENGTH                    *ISPF*
         BZ    NUNIT               NO PARAMETER                  *ISPF*
         LA    R5,0(R1,R3)         POINT AFTER VALUE             *ISPF*
         MVI   0(R5),C')'          SET SUFIX PAREN               *ISPF*
         LA    R5,2(R5)            BUMP POINTER                  *ISPF*
NUNIT    LR    R3,R5               SET NEW POINTER               *ISPF*
*   PROCESS SUBSYS KEYWORD                                       *ISPF*
         LR    R5,R3               SAVE ORIG PTR                 *ISPF*
         MVC   0(7,R3),=C'SUBSYS('                               *ISPF*
         LA    R3,7(,R3)           BUMP POINTER                  *ISPF*
         MVC   LENG,=F'4'          SET MAX LENGTH                *ISPF*
         CALL  ISPLINK,(VCOPY,VNM5,LENG,(R3),VMOVE),VL,          *ISPF*X
               MF=(E,VCALLST)                                    *ISPF*
         ICM   R1,15,LENG          GET LENGTH                    *ISPF*
         BZ    NSUBSYS             NO PARAMETER                  *ISPF*
         LA    R5,0(R1,R3)         POINT AFTER VALUE             *ISPF*
         MVI   0(R5),C')'          SET SUFIX PAREN               *ISPF*
         LA    R5,2(R5)            BUMP POINTER                  *ISPF*
NSUBSYS  LR    R3,R5               SET NEW POINTER               *ISPF*
         LA    R1,ISRCBUF          GET ADDRESS OF BUFFER         *ISPF*
         SR    R5,R1               GET LENGTH USED               *ISPF*
         STH   R5,ISRCBUF          SET LENGTH USED               *ISPF*
         DROP  R2                                                *ISPF*
******************************************************************ISPF*
*                                                                *ISPF*
*  INVOKE QUEUE                                                  *ISPF*
*                                                                *ISPF*
******************************************************************ISPF*
         MVC   QPRM0,=F'-1'       SET PARAMETER TO IND NOT CPPL  *ISPF*
         LA    R1,QPRM0           POINT AT PARMS                 *ISPF*
         LA    R4,QNAME           POINT AT COMMAND NAME          *ISPF*
         LINK  EPLOC=(4)          GO DO COMMAND                  *ISPF*
         QSTOP RC=0               EXIT                           *ISPF*
******************************************************************ISPF*
*                                                                *ISPF*
*  MISCELLANY                                                    *ISPF*
*                                                                *ISPF*
******************************************************************ISPF*
VCOPY    DC    CL8'VCOPY'          VARIABLE SERIVCE NAMES        *ISPF*
VNM1     DC    CL8'QCMDNM'         --                            *ISPF*
VNM2     DC    CL8'QPRFX'          ×                             *ISPF*
VNM3     DC    CL8'QVLSR'          ×  VARIABLE NAMES             *ISPF*
VNM4     DC    CL8'QUNIT'          ×                             *ISPF*
VNM5     DC    CL8'QSBS'           ×                             *ISPF*
VNM6     DC    CL8'QICMD'          --                            *ISPF*
VMOVE    DC    CL8'MOVE'                                         *ISPF*
******************************************************************ISPF*
*                                                                *ISPF*
*  GENERATE CONTROL BLOCK DSECTS                                 *ISPF*
*                                                                *ISPF*
******************************************************************ISPF*
SYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023
ISRQ     CSECT ,                                                  UF023
         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL01
         $HASPEQU
         IHAPSA ,                                                *ISPF*
         IKJTCB ,                                                *ISPF*
         IKJCPPL ,                                               *ISPF*
CPPLLEN  EQU   *-CPPL              LENGTH OF CPPL                *ISPF*
         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL01
WORK     DSECT ,                                                 *ISPF*
QCOMMON  EQU   WORK                TO AVOID ERRORS               *ISPF*
         DS    CL72                                              *ISPF*
LENG     DS    F                   LENGTH OF VARIABLE DATA RETURNEDSPF*
QPRM0    DS    F       F'-1'       ***                           *ISPF*
QPRM1    DS    A       TLD ADDR    *                             *ISPF*
QPRM2    DS    A       V(ISPLINK)  * KEEP THESE RECORDS TOGETHER *ISPF*
QPRM3    DS    A       A(QPPL)     ***                           *ISPF*
QCPPL    DS    ((CPPLLEN+3)/4)F    CPPL SPACE                    *ISPF*
VCALLST  DS    5F                  CALL PARM LIST                *ISPF*
QNAME    DS    CL8                 ADDRESS OF Q LOAD MODULE NAME *ISPF*
         DS    0F                                                *ISPF*
ISRCBUF  DS    CL80                FAKE COMMAND BUFFER           *ISPF*
SYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023
         END
