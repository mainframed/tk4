PARSE    TITLE 'P D S  --  PDS PARSE PROCESSING ROUTINE      09/28/88'
         SPACE 2
         MACRO
&L       $T    &Z,&PF,&RTN,&O,&PCL,&P,&PP,&CR,&HD
         LCLA  &NUM
         LCLC  &NAME,&P2
&NAME    SETC  '&Z'.' '
&L       DC    0F'0',CL8'&NAME'                *** SUBCOMMAND NAME
&P2      SETC  '&RTN'
         AIF   ('&P2'(1,1) EQ '0').RTT00
&NUM     SETA  7
.DROPRT  ANOP
         AIF   ('&P2'(1,1) NE '+').RTTP2
&P2      SETC  '&P2'(2,&NUM)
&NUM     SETA  &NUM-1
         AGO   .DROPRT
.RTTP2   DC    X'&PF',VL3(&P2)                 *** FLAGS, RTN ADDRESS
         AGO   .RTTPP
.RTT00   DC    X'&PF',AL3(&P2)                 *** FLAGS, RTN ADDRESS
.RTTPP   ANOP
&P2      SETC  '&PCL'
         AIF   ('&P2'(1,1) EQ '0').PCT00
&NUM     SETA  7
.DROPPC  ANOP
         AIF   ('&P2'(1,1) NE '+').PCTP2
&P2      SETC  '&P2'(2,&NUM)
&NUM     SETA  &NUM-1
         AGO   .DROPPC
.PCTP2   DC    AL1(&O),AL3(&P2)                *** FLAGS, PCL ADDRESS
         AGO   .PCTPP
.PCT00   DC    AL1(&O),AL3(&P2)                *** FLAGS, PCL ADDRESS
.PCTPP   ANOP
&P2      SETC  '&PP'
         AIF   ('&P2'(1,1) EQ '0').PPT00
&NUM     SETA  7
.DROPPP  ANOP
         AIF   ('&P2'(1,1) NE '+').PPTP2
&P2      SETC  '&P2'(2,&NUM)
&NUM     SETA  &NUM-1
         AGO   .DROPPP
.PPTP2   DC    AL1(&P),AL3(&P2)                *** FLAGS, PP ADDRESS
         AGO   .PPTPP
.PPT00   DC    AL1(&P),AL3(&P2)                *** FLAGS, PP ADDRESS
.PPTPP   ANOP
         DC    CL8'&CR'                        *** ATTACHED TSO COMMAND
         DC    AL2(&HD-ONIX),XL2'FFFF'         *** HELP, AVAILABLE
.EXIT    MEND
         SPACE 2
         MACRO
&L       COND  &OPRAND,&OPRAT
         AIF   ('&L' EQ '').EXIT
         &OPRAND &OPRAT
.EXIT    MEND
         SPACE 2
         MACRO
&L       CONDIKJ &OPRAT
         AIF   ('&L' EQ '').EXIT
         IKJNAME &OPRAT
.EXIT    MEND
         SPACE 2
         PRINT OFF
         COPY  #PDSGEN
         SPACE 2
&CBRO    SETC  'BROWSE'   ***  SPF BROWSE SERVICE NAME
&CEDI    SETC  'EDIT'     ***  SPF EDIT SERVICE NAME
         PRINT ON
         SPACE 1
         AIF   ('&CISP' EQ '').NOSPF
         AIF   ('&CISP' EQ 'SPF').SMNOTE
         AIF   ('&CISP' EQ 'ISPF').SMNOTE
         AIF   ('&CISP' EQ 'ISPFV2').SMNOTE
         SPACE 3
         MNOTE 12,'*** CISP -- SPF CONTROL &CISP IS INVALID ***'
         SPACE 2
         AGO   .NOGEN
.NOSPF   ANOP
&CISP    SETC  'NO SPF'
&NBRO    SETC  ''          *** NULLIFY THE SPF SUBCOMMANDS -- NO SPF
&NEDI    SETC  ''          *** NULLIFY THE SPF SUBCOMMANDS -- NO SPF
&NISP    SETC  ''          *** NULLIFY THE SPF SUBCOMMANDS -- NO SPF
&NSPF    SETC  ''          *** NULLIFY THE SPF SUBCOMMANDS -- NO SPF
.SMNOTE  ANOP
         PRINT NOGEN
         TITLE 'P D S  --  PDS PARSE PROCESSING ROUTINE      09/28/88'
*
*        PARSE INTERFACE SUBROUTINE
*
         SPACE 1
PARSE    CSECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
FF       EQU   255
         USING *,R8
         USING WORKAREA,R7
         ENTRY $TBL,$ATT,$PRI,$CHA
         ST    R8,R8PARSE
         ST    R14,R14PARSE
         LR    R8,R15
         L     R1,=A($CHA)              START OF CHANGE ENTRY
         CLC   ##ADRPCL+1(3),13(R1)     PARSE FOR NEW DATA SET?
         BNE   PARSE2                   NO, BRANCH
         STAX  ,                        YES, CANCEL ANY PREVIOUS STAX
PARSE2   BAS   R2,FREEPDL               FREE ANY PREVIOUS PARSE STORAGE
         SPACE 1
         LA    R15,PARMPARS             AREA FOR PARSE PARAMETERS
         USING PPL,R15                  BASE FOR PARSE PARAMETER LIST
         SPACE 1
         L     R1,ADDRUPT
         L     R2,ADDRECT
         LA    R3,ATTNECB
         L     R4,##ADRPCL
         LA    R5,ADDRANSR
         L     R6,ADDRCBUF
***      LA    R7,MAINSAVE
         SPACE 1
         TM    ##ADRPC#,@S+@G       NON-PARTITIONED AND MEMBER NEEDED?
         BNO   PARSE4               NO, BRANCH
         SPACE 1
*    THE FOLLOWING 6 LINES OF CODE ADD A MEMBER PARAMETER WHEN
*      REQUIRED FOR NON-PARTITIONED DATA SET SUBCOMMAND PARSE.
         LH    R14,2(,R6)           OFFSET FOR OPERANDS
         A     R14,=F'-2'           LESS TWO
         STH   R14,2(,R6)           UPDATE THE OFFSET
         LA    R14,0(R6,R14)        POINT TO THE NEW OPERAND
         MVI   4(R14),C'Z'          DUMMY MEMBER NAME
         MVI   5(R14),X'40'         SEPARATOR CHARACTER
         SPACE 1
PARSE4   STM   R1,R7,PPLUPT         INITIALIZE PPLUPT, PPLECT, PPLECB
*                                   PPLPCL, PPLANS, PPLCBUF AND PPLUWA
         DROP  R15
         LR    R1,R15
         MVI   ATTNECB,1            FLAG -- CAN BE ATTENTIONED
         SPACE 2
         L     R15,ADDRPARS         INVOKE
         BASR  R14,R15                    PARSE
         STC   R15,R14PARSE
         MVI   ATTNECB,0            CLEAR ATTENTION ECB
         SPACE 3
         L     R6,ADDRANSR             PARSE RESULT BASE REGISTER
         LTR   R15,R15                 GOOD PARSE?
         BNZ   PARSPOST                NO, BRANCH
         SPACE 1
         ICM   R4,B'0111',##ADRPAR+1   ANY PROCESSING ROUTINE?
         BNZR  R4                      YES, BRANCH
         SPACE 3
*** PARSE POST PROCESSING OF OPERANDS IS COMPLETE
PARSPOST SR    R15,R15
         IC    R15,R14PARSE
         SPACE 1
         LA    R14,MAXPARSE         RETURN CODE LIMIT
         CR    R15,R14              RETURN CODE WITHIN LIMITS?
         BH    PARSEBAD             NO, ERROR
         SPACE 1
         LA    R3,4                 OFFSET OF RETURN IF SUCCESSFUL
         B     *+4(R15)             PROCESS RETURN CODE
PARSERET B     PARSEOK                00 - SUCCESSFUL
         B     EXIT8N                 04 - PARSE UNABLE TO PROMPT
         B     PARSERR                08 - USER ENTERED ATTENTION
         B     PARSEBAD               12 - INVALID PARAMETERS
         B     PARSEBAD               16 - PARSE INTERNAL FAILURE
         B     EXIT8N                 20 - VALIDITY CHECK ERROR
MAXPARSE EQU   *-PARSERET
         SPACE 2
PARSEBAD LA    R1,GFPARMS
         ST    R1,GFPARMP           SAVE ADDRESS OF PARMLIST
         L     R0,ADDRFF02          ADDRESS OF IKJEFF02
         STM   R15,R0,GFRCODE       SAVE GFRCODE AND GF02PTR
         LA    R1,GFPARSE
         STH   R1,GFCALLID          SAVE CALLER-ID FOR PARSE
         L     R0,ADDRCPPL          CPPL
         LA    R1,ATTNECB           ATTENTION ECB
         STM   R0,R1,GFCPPLP        SAVE GFCPPLP AND GFECBP
         MVI   ATTNECB,0            CLEAR THE ECB
         LINK  EP=IKJEFF19,MF=(E,GFPARMP)
         CLI   R14PARSE,X'4'        USER ENTER ATTENTION?
         BE    PARSERR              YES, BRANCH -- IGNORE COMMAND
         LTR   R15,R15              ERROR MESSAGE OUTPUT?
         BZ    EXIT8N               YES, BRANCH
         CVD   R15,DOUBLE
         MVI   MTHIGHL,4
         MVC   INSERT#1(4),=X'40202120'
         ED    INSERT#1(4),DOUBLE+6
         MVI   INSERT#1,C'='
         LA    R1,L834$1
         B     EXIT8M
         SPACE 1
PARSERR  SR    R3,R3                RETURN AT OFFSET 0
         SPACE 1
PARSEOK  BAS   R2,FREEPDL           FREE PARSE STORAGE
         L     R8,R8PARSE           ORIGINAL BASE REGISTER
         L     R14,R14PARSE         EXIT BASE ADDRESS
         B     0(R3,R14)            EXIT FROM PARSE AT +0 OR +4
         SPACE 2
PARSATTN BAS   R2,FREEPDL           FREE PARSE STORAGE
         B     NEWCMD
         SPACE 2
*
*        PARSE CLEANUP ROUTINE
*
         SPACE 1
FREEPDL  IKJRLSA ADDRANSR            RELEASE THE STORAGE
         SPACE 1
         XC    ADDRANSR,ADDRANSR
         BR    R2
         SPACE 3
*
*        ROUTINE TO CONVERT HEXADECIMAL INPUT TO BINARY
*
         SPACE 1
*R5          START OF STRING
*R1          LENGTH OF STRING; WHERE OUTPUT GOES
*MSGTEXT1    PROMPTING MESSAGE FOR ANY ERROR
*MSGTEXT2+0  LENGTH OF RESULT
*MSGTEXT2+1  MAXIMUM LENGTH OF RESULT
*MSGTEXT2+4  RESULTANT STRING
*R0          RESULT IN BINARY (UP TO FOUR BYTES)
*R2          RETURN REGISTER
         SPACE 1
HEXC     STC   R1,MSGTEXT2+2        ORIGINAL STRING LENGTH
         LA    R3,1(,R1)            STRING LENGTH +1
         N     R3,=F'-2'            NEXT EVEN NUMBER
         SR    R15,R15              ZERO
         LA    R0,2                 PAIRWISE COUNTER
         BCTR  R5,0                 PREPARE FOR THE FIRST ADD
         CR    R1,R3                EVEN LENGTH ORIGINALLY?
         SRL   R3,1
         STC   R3,MSGTEXT2          (STRING LENGTH +1)/2
         LA    R1,MSGTEXT2+4        WHERE OUTPUT GOES
         BNE   HEXC20               NO, BRANCH
         SPACE 1
HEXC10   LA    R5,1(,R5)            NEXT CHARACTER
         IC    R15,0(,R5)           GET A BYTE TO CONVERT
         CLI   0(R5),C'0'
         BL    *+12                 0-9?
         CLI   0(R5),C'9'
         BNH   HEXC20               YES, BRANCH
         SPACE 1
         LA    R15,9(,R15)          NO, ADJUST LOW DIGIT 1-5 TO A-F
         CLI   0(R5),C'A'           BELOW AN A?
         BL    HEXC50               YES, INVALID
         CLI   0(R5),C'F'           ABOVE AN F?
         BH    HEXC50               YES, INVALID
         SPACE 1
HEXC20   SLL   R15,28               SHIFT
         SLDL  R14,4                GET A GOOD DIGIT
         BCT   R0,HEXC10            DO THE NEXT DIGIT OF A PAIR
         LA    R0,2                 PAIRWISE COUNTER
         STC   R14,0(,R1)           SAVE AN OUTPUT CHARACTER
         LA    R1,1(,R1)            ANOTHER OUTPUT CHARACTER
         BCT   R3,HEXC10            DO ALL DIGITS
         SPACE 2
         CLC   MSGTEXT2(1),MSGTEXT2+1  TOO MANY DIGITS?
         BH    HEXC40                  YES, INVALID
         ICM   R0,B'1111',MSGTEXT2+4   RESULT REGISTER
         CLI   MSGTEXT2,3              LENGTH:3
         BH    4(R2)                     ABOVE, DONE
         SRL   R0,8
         BE    4(R2)                     EQUAL, RETURN
         SRL   R0,8
         CLI   MSGTEXT2,1              LENGTH:1
         BH    4(R2)                     ABOVE, DONE
         SRL   R0,8
         B     4(R2)                     EQUAL, RETURN
         SPACE 3
HEXC40   M$MSG L840                 STRING IS TOO LONG
         B     HEXC60
         SPACE 1
HEXC50   M$MSG L841                 INVALID HEXADECIMAL DIGITS
         SPACE 1
HEXC60  M$PUTGT MSGTEXT1,ATTN=0(R2) SECOND PART OF MESSAGE
         L     R5,ADDRCBUF          ENTERED DATA
         LH    R1,0(,R5)            LENGTH OF STRING
         LA    R5,4(,R5)            START OF DATA IN THE STRING
         SH    R1,=H'5'             VALID MACHINE LENGTH?
         LA    R3,0(R5,R1)          LAST BYTE OF INPUT STRING
         BZ    HEXC90               MAYBE, CHECK FURTHER
         BNP   HEXC60               NO, NULL STRING -- PROMPT AGAIN
         SPACE 1
HEXC70   CLI   0(R3),X'40'          SCAN
         BNE   HEXC80                   BACKWARDS
         BCTR  R3,0                              FOR A
         BCT   R1,HEXC70                               NON-BLANK
         B     HEXC90               POSSIBLE STRING -- CHECK
         SPACE 1
HEXC80   CLI   0(R5),X'40'          SCAN
         BNE   HEXC90                   FORWARDS
         LA    R5,1(,R5)                        FOR A
         BCT   R1,HEXC80                              NON-BLANK
         SPACE 1
HEXC90   CLI   0(R5),X'40'          REAL STRING?
         BE    HEXC60               NO, PROMPT AGAIN
         MVI   MSGTEXT2+4,X'40'     BLANKS FOR
         MVC   MSGTEXT2+5(40),MSGTEXT2+4      UPPER-CASING INPUTS
         OC    0(*-*,R5),MSGTEXT2+4 <<EXECUTED>>
         EX    R1,*-6               UPPER-CASE THE INPUT DATA
         LA    R1,1(,R1)            ACTUAL STRING LENGTH
         B     HEXC                 PARSE THIS NEW STRING
         SPACE 2
PACKMAX  LH    R15,4(,R1)             NUMBER OF DIGITS
         S     R15,=F'1'              ANY CODED?
         BM    4(R14)                 NO, RETURN AT +4
         L     R1,0(,R1)              POINT TO INPUT STRING
         EX    R15,PACKNUMB           PACK ALL THE DIGITS
         CVB   R1,DOUBLE              CONVERT TO BINARY
         BR    R14                    RETURN AT +0
PACKNUMB PACK  DOUBLE(8),0(*-*,R1)    <<EXECUTED>>
         SPACE 3
PARSEINN CSECT
         USING PDLATTR,R6
         USING *,R4
ZATTRIB  MVC   #ALIAOPT(1),INFOALIA+1     SAVE ALIASINFO/NOALIAS/SHORT
         MVC   #LKEDOPT(1),INFOLKED+1     SAVE LKEDDATE/NOLKEDDATE
         MVC   #RLDERR(1),LKEDRLDF+1      SAVE RLDFIX/NORLDFIX
         MVC   #UNALIAS(1),LKEDUNAL+1     SAVE UNALIAS
         MVC   #ADDSTAT(1),LKEDNONE+1     SAVE NONE/ADDSTAT
         SPACE 1
         CLI   LKEDNONE+1,X'01'           NONE ATTRIBUTE USED?
         BNE   ZATTR00                    NO, BRANCH
         TM    FLAGSCC,RECFMU             LOAD MODULE?
         BNO   ZATTR00                    NO, BRANCH
         MVI   #ADDSTAT,0                 CLEAR NONE/ADDSTAT FOR LOAD
         MVI   #AUTHOPT,2                 SIMULATE "NOAUTH"
         MVI   #PAGEOPT,2                 SIMULATE "NOPAGE"
         MVI   #RMODE,1                   SIMULATE "RMODE24"
         MVI   #AMODE,1                   SIMULATE "AMODE24"
         MVI   #SSIOPT,2                  SIMULATE "NOSSI"
         OI    #ATTRNO,ATTRREUS+ATTRRENT+ATTRLOAD  "NO" REUS/RENT/LOAD
         OI    #ATTRNO+1,ATTRREFR+ATTRNE  "NOREFR" AND "EDIT"
         OI    #ATTRYES,ATTREXEC          "EXEC"
         OI    #ATTRYES+1,ATTRNODC        "NODC"
         SPACE 2
ZATTR00  LA    R1,ATTRVER               VER(NUMBER)
         BAS   R14,PACKMAX              ANY RESULT?
         B     *+8                      YES, BRANCH
         B     ZATTR02                  NO, BRANCH
         OI    #ATTROPT,X'40'           SET A FLAG
         STC   R1,#ATTRVER              SAVE RESULT
         SPACE 2
ZATTR02  LA    R1,ATTRMOD               MOD(NUMBER)
         BAS   R14,PACKMAX              ANY RESULT?
         B     *+8                      YES, BRANCH
         B     ZATTR04                  NO, BRANCH
         OI    #ATTROPT,X'20'           SET A FLAG
         STC   R1,#ATTRMOD              SAVE RESULT
         SPACE 2
ZATTR04  MVC   #USERTXT(8),BLANKS       BLANK THE USERID AREA
         LH    R15,ATTRUSER+4           LENGTH OF STRING
         S     R15,=F'1'                ANY STRING?
         BM    ZATTR08                  NO, BRANCH
         OI    #ATTROPT,X'80'           SET A FLAG FOR LATER
         L     R1,ATTRUSER              ADDRESS OF ENTRY STRING
         MVC   #USERTXT(*-*),0(R1)      <<EXECUTED>>
         EX    R15,*-6                  SAVE THE STRING FOR LATER
         SPACE 2
ZATTR08  TM    FLAGSCC,RECFMU             LOAD MODULE?
         BO    ZATTR10                    YES, BRANCH
         CLI   #ADDSTAT,1                 NONE REQUESTED?
         BNE   ZATTR10                    NO, BRANCH
         OI    FLAGSII,FSINGLE            YES, FORCE SINGLE BUFFERING
         SPACE 2
ZATTR10  ICM   R1,B'0001',LKEDAUTH+1    AUTH/NOAUTH
         BZ    *+8
         STCM  R1,B'0001',#AUTHOPT
         ICM   R1,B'0001',LKEDPAGE+1    PAGE/NOPAGE
         BZ    *+8
         STCM  R1,B'0001',#PAGEOPT
         ICM   R1,B'0001',LKEDRMOD+1    RMODE24/RMODEANY
         BZ    *+8
         STCM  R1,B'0001',#RMODE
         ICM   R1,B'0001',LKEDAMOD+1    AMODE24/AMODE31/AMODEANY
         BZ    *+8
         STCM  R1,B'0001',#AMODE
         ICM   R1,B'0001',LKEDSSIK+1    SSI/NOSSI
         BZ    *+8
         STCM  R1,B'0001',#SSIOPT
         SPACE 2
ZATTR30  CLI   LKEDREUS+1,X'01'       REUSABLE ATTRIBUTE STATUS:
         BL    ZATTR34                  NONE, BRANCH
         BH    ZATTR32                  "NO" FORM, BRANCH
         OI    #ATTRYES,ATTRREUS        "REUS"
         NI    #ATTRNO,FF-ATTRREUS      MAKE SURE NEGATIVE IS OFF
         B     ZATTR34
ZATTR32  OI    #ATTRNO,ATTRREUS         "NOREUS"
         SPACE 1
ZATTR34  CLI   LKEDREFR+1,X'01'       REFRESHABLE ATTRIBUTE STATUS:
         BL    ZATTR40                  NONE, BRANCH
         BH    ZATTR36                  "NO" FORM, BRANCH
         OI    #ATTRYES+1,ATTRREFR      "REFR"
         NI    #ATTRNO+1,FF-ATTRREFR    MAKE SURE NEGATIVE IS OFF
         B     ZATTR40
ZATTR36  OI    #ATTRNO+1,ATTRREFR       "NOREFR"
         SPACE 1
ZATTR40  CLI   LKEDRENT+1,X'01'       REENTRANT ATTRIBUTE STATUS:
         BL    ZATTR44                  NONE, BRANCH
         BH    ZATTR42                  "NO" FORM, BRANCH
         OI    #ATTRYES,ATTRRENT        "RENT"
         NI    #ATTRNO,FF-ATTRRENT      MAKE SURE NEGATIVE IS OFF
         B     ZATTR44
ZATTR42  OI    #ATTRNO,ATTRRENT         "NORENT"
         SPACE 1
ZATTR44  CLI   LKEDEXEC+1,X'01'       EXECUTABLE ATTRIBUTE STATUS:
         BL    ZATTR50                  NONE, BRANCH
         BH    ZATTR46                  "NO" FORM, BRANCH
         OI    #ATTRYES,ATTREXEC        "EXEC"
         NI    #ATTRNO,FF-ATTREXEC      MAKE SURE NEGATIVE IS OFF
         B     ZATTR50
ZATTR46  OI    #ATTRNO,ATTREXEC         "NOEXEC"
         SPACE 1
ZATTR50  CLI   LKEDLOAD+1,X'01'       LOADABLE ATTRIBUTE STATUS:
         BL    ZATTR54                  NONE, BRANCH
         BH    ZATTR52                  "NO" FORM, BRANCH
         OI    #ATTRYES,ATTRLOAD        "LOAD"
         NI    #ATTRNO,FF-ATTRLOAD      MAKE SURE NOLOAD IS OFF
         B     ZATTR54
ZATTR52  OI    #ATTRNO,ATTRLOAD         "NOLOAD"
         SPACE 1
ZATTR54  CLI   LKEDEDIT+1,X'01'       NOT EDITABLE ATTRIBUTE STATUS:
         BL    ZATTR60                  NONE, BRANCH
         BH    ZATTR56                  "NO" FORM, BRANCH
         OI    #ATTRNO+1,ATTRNE        "EDIT"  -- BIT MUST BE REVERSED
         B     ZATTR60
ZATTR56  OI    #ATTRYES+1,ATTRNE        "NOEDIT"
         NI    #ATTRNO+1,FF-ATTRNE     MAKE SURE EDIT IS OFF
         SPACE 1
ZATTR60  CLI   LKEDDC+1,X'01'         DC ATTRIBUTE STATUS:
         BL    ZATTR70                  NONE, BRANCH
         BH    ZATTR62                  "NO" FORM, BRANCH
         OI    #ATTRNO+1,ATTRNODC       "DC"
         NI    #ATTRYES+1,FF-ATTRNODC   MAKE SURE NODC IS OFF
         B     ZATTR70
ZATTR62  OI    #ATTRYES+1,ATTRNODC      "NODC"
         SPACE 1
ZATTR70  TM    LKEDSSI+6,X'80'      STRING CODED?
         BNO   ZATTR80              NO, DONE
         L     R5,LKEDSSI           NEW STRING ADDRESS
         LH    R1,LKEDSSI+4         LENGTH OF STRING
         LTR   R1,R1                NULL STRING CODED?
         BNP   ZATTR80              YES, DONE
         MVI   MSGTEXT2+1,4         MAXIMUM OF 4 DIGITS
         MVC   MSGTEXT1,PDS385A     SSI MESSAGE
         BAS   R2,HEXC              CONVERT TO BINARY
         B     PARSATTN             ATTENTION -- IGNORE THE REST
         STCM  R0,B'1111',#SSITEXT  SAVE THE RESULTING TTR
         SPACE 2
ZATTR80  MVC   #MODTXT(8),BLANKS      BLANK THE MODULE AREA
         LH    R15,AENTRYS+4          LENGTH OF BLOCK/DUMP STRING
         S     R15,=F'1'              ANY STRING?
         BM    ZATTR99                NO, BRANCH
         MVI   #OPTOPT,X'FF'          SET A FLAG FOR LATER
         L     R1,AENTRYS             ADDRESS OF ENTRY STRING
         MVC   #MODTXT(*-*),0(R1)     <<EXECUTED>>
         EX    R15,*-6                SAVE THE STRING FOR LATER
         SPACE 2
ZATTR99  OC    #ZAPOPT(14),#ZAPOPT    ANY LINKAGE EDITOR ATTRIBUTES?
         BZ    *+8                    NO, BRANCH
         MVI   #OPTOPT,FF             YES, SET A FLAG FOR LATER
         CLI   #SSIOPT,0              ANY SSI CHANGE?
         BE    *+8                    NO, BRANCH
         OI    #OPTOPT,X'F0'          YES, SET A FLAG FOR LATER
         CLI   #UNALIAS,0             ANY UNALIAS?
         BE    *+8                    NO, BRANCH
         OI    #OPTOPT,X'F0'          YES, SET A FLAG FOR LATER
         CLI   #ADDSTAT,0             ANY NONE/ADDSTAT?
         BE    *+8                    NO, BRANCH
         OI    #OPTOPT,X'F0'          YES, SET A FLAG FOR LATER
         XC    #ATTRNO(2),=F'-1'      INVERT THE #ATTRNO BITS
         B     PARSPOST
         SPACE 2
         USING PDLCOMPA,R6
         USING *,R4
ZCOMPARE MVC   MSGDS1(64),BLANK128  CLEAR THE DATA SET NAME AREA
         LH    R2,PCLCAR1+4         LENGTH OF STRING
         STH   R2,MSGDS1+62         SAVE LENGTH USED
         BCTR  R2,0                 MACHINE LENGTH
         L     R1,PCLCAR1           NEW STRING ADDRESS
         MVC   MSGDS1(*-*),0(R1)    <<EXECUTED>>
         EX    R2,*-6               MOVE IN ANY OTHER OPERANDS
         SPACE 1
         MVC   MSGDS2(64),BLANK128  CLEAR THE DATA SET NAME AREA
         LH    R2,PCLCAR2+4         LENGTH OF STRING
         STH   R2,MSGDS2+62         SAVE LENGTH USED
         BCTR  R2,0                 MACHINE LENGTH
         L     R1,PCLCAR2           NEW STRING ADDRESS
         MVC   MSGDS2(*-*),0(R1)    <<EXECUTED>>
         EX    R2,*-6               MOVE IN ANY OTHER OPERANDS
         SPACE 1
         TM    PCLCOSTR+6,X'80'     ANY STRING CODED?
         BNO   PARSPOST             NO, BRANCH
         LH    R2,PCLCOSTR+4        LENGTH OF STRING
         CH    R2,=H'100'           LENGTH(STRING)>=100?
         BL    *+8                  NO, BRANCH
         LH    R2,=H'100'           YES, USE 100 AS A MAXIMUM LENGTH
         STH   R2,#COMMDSZ          SAVE LENGTH USED
         BCTR  R2,0                 MACHINE LENGTH
         MVC   MSGLINE(100),BLANK128  BLANK THE TEXT AREA
         L     R1,PCLCOSTR          NEW STRING ADDRESS
         MVC   MSGLINE(*-*),0(R1)   <<EXECUTED>>
         EX    R2,*-6               MOVE IN ANY OTHER OPERANDS
         B     PARSPOST
         SPACE 2
         USING PDLCOMPR,R6
         USING *,R4
ZCOMPRES MVC   #CMXFLAG(1),CMXLIST+1     SAVE SUMMARY/LIST/NOLIST
         MVC   #CMXSHR(1),CMXSHARE+1     SAVE SHR
         B     PARSPOST
         SPACE 2
         USING PDLCONT,R6
         USING *,R4
ZCONTROL MVC   #OUT+0(1),PALINCON+1
         MVC   #OUT+1(1),PTRANCON+1
         MVC   #OUT+2(1),PLKEDCON+1
         MVC   #OUT+3(1),PPROMCON+1
         MVC   #OUT+4(1),PRECVCON+1
         MVC   #OUT+5(1),PDOUBCON+1
         MVC   #OUT+7(1),PIMMCON+1
         MVC   #OUT+10(1),CLOGTYPE+1      SYSOUT/NOSYSOUT/DSNAME/NODSN
         MVC   #OUT+11(1),CLOGDISP+1      OLD/SHR/MOD/NEW
         MVC   #OUT+12(1),CLOGFORM+1      FORM/NOFORM
         MVC   #OUT+13(1),CLOGDEST+1      DEST/NODEST
         MVC   #OUT+30(80),BLANK128       CLEAR THE OPERANDS
         LH    R15,CDESTT+4               LENGTH OF STRING
         STH   R15,#OUT+14                14,15
         S     R15,=F'1'                  ANY DATA?
         BM    ZCONT010                   NO, BRANCH
         L     R1,CDESTT
         MVC   #OUT+30(*-*),0(R1)         <<EXECUTED>> 30-37
         EX    R15,*-6                    MOVE IT IN
         SPACE 1
ZCONT010 LH    R15,CFORMT+4               LENGTH OF STRING
         STH   R15,#OUT+16                16,17
         S     R15,=F'1'                  ANY DATA?
         BM    ZCONT020                   NO, BRANCH
         L     R1,CFORMT
         MVC   #OUT+38(*-*),0(R1)         <<EXECUTED>> 38-41
         EX    R15,*-6                    MOVE IT IN
         SPACE 1
ZCONT020 LH    R15,CSYSOUTT+4             LENGTH OF STRING
         S     R15,=F'1'                  ANY DATA?
         BM    ZCONT030                   NO, BRANCH
         L     R1,CSYSOUTT
         MVC   CONTSYS(1),0(R1)           <<EXECUTED>>
         SPACE 1
ZCONT030 L     R15,CDSNAMET               ADDRESS OF DSNAME
         LH    R14,CDSNAMET+4             LENGTH OF DSNAME
         STH   R14,#OUT+18                18,19
         S     R14,=F'1'                  ANY DATA?
         BM    ZCONT060                   NO, BRANCH
         MVC   #OUT+44(*-*),0(R15)        <<EXECUTED>> 44-87
         EX    R14,*-6                    MOVE IT IN
         SPACE 1
         TM    CDSNAMET+14,X'80'          ANY MEMBER?
         BZ    ZCONT034                   NO, BRANCH
         L     R15,CDSNAMET+8             ADDRESS OF DSNAME
         LH    R14,CDSNAMET+12            LENGTH OF MEMBER
         STH   R14,#OUT+20                20,21
         S     R14,=F'1'                  ANY DATA?
         BM    ZCONT060                   NO, BRANCH
         MVC   #OUT+88(*-*),0(R15)        <<EXECUTED>> 88-95
         EX    R14,*-6                    MOVE IT IN
         SPACE 1
ZCONT034 TM    CDSNAMET+22,X'80'          ANY PASSWORD?
         BZ    ZCONT060                   NO, BRANCH
         L     R15,CDSNAMET+16            ADDRESS OF DSNAME
         LH    R14,CDSNAMET+20            LENGTH OF MEMBER
         STH   R14,#OUT+22                22,23
         S     R14,=F'1'                  ANY DATA?
         BM    ZCONT060                   NO, BRANCH
         MVC   #OUT+96(*-*),0(R15)        <<EXECUTED>> 96-103
         EX    R14,*-6                    MOVE IT IN
*
ZCONT060 LA    R1,CRETAINA                NUMBER(COUNT)
         BAS   R14,PACKMAX                CONVERT TO BINARY
         STH   R1,INUMSAV                 SAVE RESULT
         LH    R1,INUMSAV                 GET RESULT
         LA    R2,FIRST4K
         LA    R2,IOBUFN-FIRST4K(,R2)     START OF BUFFER ADDRESSES
         DROP  R6
         LTR   R6,R1                      NUMBER OF ELEMENTS=0?
         BNZ   *+8                        NO, BRANCH
         LA    R6,1                       YES, USE 1
         CH    R6,=AL2((IOBUFEND-IOBUFN)/32)   TOO MANY ELEMENTS?
         BL    *+8                             NO, BRANCH
         LH    R6,=AL2((IOBUFEND-IOBUFN)/32)   YES, USE THE MAX
         STH   R6,INUMSAV                 SET RESULT IN LIMITS
*
ZCONT062 ICM   R1,B'1111',0(R2)           ANY BUFFER ADDRESS?
         BNZ   ZCONT066                   YES, BRANCH
         L     R0,=F'58786'               MAX 3390 TRACK LEN  DRK FEB00
         TM    FLAGSFF,FSPFCALL+FSPFDIAL  SPF INITIALIZED?
         BM    ZCONT064                   YES, BRANCH
         AIF   ('&CISP' NE 'ISPFV2').NSPFCNT
         TM    FLAGSFF,FSPFOPT6           CALLED FROM OPTION 6?
         BO    ZCONT064                   YES, BRANCH
.NSPFCNT ANOP
         PRINT GEN
         GETMAIN RC,LV=(0),SP=23          GET MORE BUFFER STORAGE
         LTR   R15,R15                    ANY PROBLEM?
         BNZ   ZCONT067                   YES, BRANCH
         MVI   SUBLIST1,23                MARK FOR LATER RELEASE
         B     ZCONT065
ZCONT064 GETMAIN RC,LV=(0),SP=24          GET MORE BUFFER STORAGE
         LTR   R15,R15                    ANY PROBLEM?
         BNZ   ZCONT067                   YES, BRANCH
         MVI   SUBLIST2,24                MARK FOR LATER RELEASE
         PRINT NOGEN
ZCONT065 STCM  R1,B'1111',0(R2)           UPDATE BUFFER ADDRESS
ZCONT066 LA    R2,32(,R2)                 NEXT ELEMENT STORAGE
         BCT   R6,ZCONT062                DO ALL N ELEMENTS
         B     PARSPOST
*
*        GETMAIN FAILED; UPDATE WITH THE NUMBER OBTAINED
ZCONT067 SR    R1,R1                      COUNT SUCCESSFUL GETMAINS
         LA    R2,FIRST4K
         LA    R2,IOBUFN-FIRST4K(,R2)     START OF BUFFER ADDRESSES
         LH    R6,INUMSAV                 MAXIMUM GETMAINS
*
ZCONT068 ICM   R0,B'1111',0(R2)           ANY BUFFER ADDRESS?
         BZ    ZCONT069                   NO, QUIT
         LA    R1,1(,R1)                  ANOTHER GOOD GETMAIN
         LA    R2,32(,R2)                 NEXT ELEMENT STORAGE
         BCT   R6,ZCONT068                DO ALL N ELEMENTS
ZCONT069 STH   R1,INUMSAV                 UPDATE WITH ACTUAL GETMAINS
         B     PARSPOST
         SPACE 2
         USING PDLCOPY,R6
         USING *,R4
ZCOPY    MVC   #CMXFLAG(1),COPLIST+1  SAVE SUMMARY/LIST/NOLIST
         MVC   #CMXSHR(1),COPDISP+1   SAVE SHR/OLD/NEW
         MVC   #COPREP(1),COPREPL+1   SAVE REPLACE/NOREPLACE
         MVC   #COPALI(1),COPALIAS+1  SAVE ALIAS/NOALIAS
         MVC   #COPNCAL(1),COPCALL+1  SAVE CALL/NOCALL
         MVC   #COPTRCY(1),COPTRCYL+1 SAVE TRK/CYL
         MVC   #COPEXST(1),COPEXIST+1 SAVE EXIST/NOEXIST/NOBLDL/EXCLUDE
         SPACE 1
         MVC   MSGDS2(64),BLANK128    CLEAR THE DATA SET NAME AREA
         LH    R2,COPDSN2+4           LENGTH OF STRING
         STH   R2,MSGDS2+62           SAVE LENGTH USED
         BCTR  R2,0                   MACHINE LENGTH
         L     R1,COPDSN2             NEW STRING ADDRESS
         MVC   MSGDS2(*-*),0(R1)      <<EXECUTED>>
         EX    R2,*-6                 MOVE IN THE STRING
***TEST  LA    R1,FIRST4K
***TEST  CLC   MSGDS2(2),=C'* '               PREVIOUS DSNAME DESIRED?
***TEST  BNE   ZCOPY02                        NO, BRANCH
***TEST  CLI   PMSGDS2-FIRST4K(R1),0          ANY PREVIOUS DSNAME?
***TEST  BE    ZCOPY10                        NO, ERROR
***TEST  MVC   MSGDS2(64),PMSGDS2-FIRST4K(R1) YES, REFRESH
***PY02  MVC   PMSGDS2-FIRST4K(64,R1),MSGDS2  SAVE CURRENT DSNAME
         SPACE 1
ZCOPY10  TM    COPVOL+6,X'80'       ANY NAME REQUESTED?
         BNO   ZCOPY20              NO, BRANCH
         LH    R15,COPVOL+4         LENGTH OF NAME
         S     R15,=F'1'            VALID?
         BM    ZCOPY20              NO, BRANCH
         MVC   #COPVOL(6),BLANKS    INITIALIZE VOLUME NAME
         L     R1,COPVOL            ADDRESS OF NAME
         MVC   #COPVOL(*-*),0(R1)   <<EXECUTED>>
         EX    R15,*-6              MOVE IN THE NAME
         SPACE 1
ZCOPY20  TM    COPAS+6,X'80'        ANY NAME REQUESTED?
         BNO   ZCOPY30              NO, BRANCH
         LH    R15,COPAS+4          LENGTH OF NAME
         STC   R15,#COPTO#          SAVE STRING LENGTH
         S     R15,=F'1'            VALID?
         BM    ZCOPY30              NO, BRANCH
         MVC   #COPTON(8),BLANKS    INITIALIZE TO BLANKS
         L     R1,COPAS             ADDRESS OF NAME
         MVC   #COPTON(*-*),0(R1)   <<EXECUTED>>
         EX    R15,*-6              MOVE IN THE NAME
         SPACE 1
ZCOPY30  LA    R1,COPDIRCO          DIR(COUNT)
         BAS   R14,PACKMAX          CONVERT TO BINARY
         ST    R1,#COPDIR#          SAVE RESULT
         SPACE 1
ZCOPY40  LA    R1,COPSPACE          SPACE(PRIMARY)
         BAS   R14,PACKMAX          CONVERT TO BINARY
         STH   R1,#COPSPAC          SAVE RESULT
         SPACE 1
ZCOPY50  SR    R1,R1
         ICM   R1,B'0111',COPSPACE+9  NEXT LIST ITEM PRESENT?
         BZ    ZCOPY60                NO, BRANCH
*        LR    R1,R1                SPACE(,SECONDARY)
         BAS   R14,PACKMAX          CONVERT TO BINARY
         STH   R1,#COPSPAC+2        SAVE RESULT
         SPACE 1
ZCOPY60  LA    R1,COPCONCA          NUMBER(COUNT)
         BAS   R14,PACKMAX          CONVERT TO BINARY
         ST    R1,#COPCONC          SAVE RESULT
         SPACE 1
         LA    R1,COPMAX              MAXBLK(COUNT)
         BAS   R14,PACKMAX            ANY RESULT?
         ST    R1,#REPRBLK            SAVE RESULT
         SPACE 1
         B     PARSPOST
         SPACE 2
         USING PDLDELET,R6
         USING *,R4
ZDELETE  MVC   #DELFLAG(1),PCLDELAL+1
         B     PARSPOST
         SPACE 2
         USING PDLDIR,R6
         USING *,R4
ZDIRENTR MVC   #DIRSHOR(1),PCLSHOR+1
         B     PARSPOST
         SPACE 2
         USING PDLDSNA,R6
         USING *,R4
ZDSNAMES NI    FLAGSJJ,FF-FDSNTSO-FDSNJCL  CLEAR THE FLAGS
         OC    FLAGSJJ(1),PCLDSN+1         SET THE FALL FLAGS
         B     PARSPOST
         SPACE 2
         USING PDLEDIT,R6
         USING *,R4
ZEDIT    MVC   #SPFOLD(1),SPFNEWOP+1       SAVE ANY OLD/NEW OPTION
         CLI   SPFNEWOP+1,X'02'            "OLD"?
         BNE   *+8                         NO, BRANCH
         OI    ##ADRPC#,@B                 YES, MUST EXIST
         SPACE 1
         TM    SPFMACRO+6,X'80'            ANY MACRO NAME?
         BNO   ZEDIT10                     NO, BRANCH
         LH    R15,SPFMACRO+4              LENGTH OF NAME
         S     R15,=F'1'                   MACHINE LENGTH VALID?
         BM    ZEDIT10                     NO, BRANCH
         MVC   #SPFMACR,BLANKS             INITIALIZE THE MACRO NAME
         L     R1,SPFMACRO                 MACRO NAME
         MVC   #SPFMACR(*-*),0(R1)         <<EXECUTED>>
         EX    R15,*-6                     MOVE INTO STORAGE
         SPACE 1
ZEDIT10  TM    SPFPRSET+6,X'80'            ANY SETPROF NAME?
         BNO   ZEDIT20                     NO, BRANCH
         LH    R15,SPFPRSET+4              LENGTH OF NAME
         S     R15,=F'1'                   MACHINE LENGTH VALID?
         BM    ZEDIT20                     NO, BRANCH
         L     R1,SPFPRSET                 PROFILE NAME
         MVC   SETPROF(8),BLANKS           INITIALIZE SETPROF
         CLI   0(R1),C'*'                  NULLIFY PARAMETER?
         BE    ZEDIT20                     YES, BRANCH
         MVC   SETPROF(*-*),0(R1)          <<EXECUTED>>
         EX    R15,*-6                     MOVE INTO STORAGE
         SPACE 1
ZEDIT20  TM    SPFMCSET+6,X'80'            ANY SETMACRO NAME?
         BNO   ZEDIT30                     NO, BRANCH
         LH    R15,SPFMCSET+4              LENGTH OF NAME
         S     R15,=F'1'                   MACHINE LENGTH VALID?
         BM    ZEDIT30                     NO, BRANCH
         L     R1,SPFMCSET                 MACRO NAME
         MVC   SETMACRO(8),BLANKS          INITIALIZE SETMACRO
         CLI   0(R1),C'*'                  NULLIFY PARAMETER?
         BE    ZEDIT30                     YES, BRANCH
         MVC   SETMACRO(*-*),0(R1)         <<EXECUTED>>
         EX    R15,*-6                     MOVE INTO STORAGE
         SPACE 1
ZEDIT30  TM    SPFPROFL+6,X'80'            ANY PROFILE NAME?
         BNO   PARSPOST                    NO, BRANCH
         LH    R15,SPFPROFL+4              LENGTH OF NAME
         S     R15,=F'1'                   MACHINE LENGTH VALID?
         BM    PARSPOST                    NO, BRANCH
         MVC   #SPFPROF,BLANKS             INITIALIZE WITH BLANKS
         L     R1,SPFPROFL                 PROFILE NAME
         MVC   #SPFPROF(*-*),0(R1)         <<EXECUTED>>
         EX    R15,*-6                     MOVE INTO STORAGE
         B     PARSPOST
         SPACE 2
         USING PDLFIND,R6
         USING *,R4
ZFIND    TM    FINDSTRG+6,X'80'     STRING CODED?
         BNO   PARSPOST             NO, ASSUME OK
         CLI   FINDINC+1,2          INC1?
         BL    ZFINDINC             YES, BRANCH
         MVI   #REPINCR+1,1         ASSUME INC2
         CLI   FINDINC+1,2          INC2?
         BE    ZFINDINC             YES, BRANCH
         MVI   #REPINCR+1,3         ASSUME INC4
         CLI   FINDINC+1,3          INC4?
         BE    ZFINDINC             YES, BRANCH
         MVI   #REPINCR+1,7         ASSUME INC8
         CLI   FINDINC+1,4          INC8?
         BE    ZFINDINC             YES, BRANCH
         MVI   #REPINCR+1,15        ASSUME INC16
         CLI   FINDINC+1,5          INC16?
         BE    ZFINDINC             YES, BRANCH
         MVI   #REPINCR+1,79        ASSUME INC80
ZFINDINC DS    0H
         L     R5,FINDSTRG          NEW STRING ADDRESS
         LH    R2,FINDSTRG+4        LENGTH OF STRING
ZFINTEST LTR   R2,R2                NULL STRING CODED?
         BNP   ZFINCHK              YES, CHECK FORMAT
         BCTR  R5,0                 BACK UP ONE
         OI    0(R5),X'40'          UPPER CASE THE DELIMITER
         CLI   0(R5),C'X'           POSSIBLE HEX STRING?
         BNE   ZFINCHAR             NO, BRANCH
         MVC   MSGTEXT1(3),L841     BAD HEX STRING MESSAGE
         LA    R3,1(,R2)            STRING LENGTH +1
         N     R3,=F'-2'            NEXT EVEN NUMBER
         SR    R15,R15              ZERO
         LA    R1,MSGTEXT2+4        WHERE OUTPUT GOES
         LA    R0,2                 PAIRWISE COUNTER
         CR    R2,R3                EVEN LENGTH ORIGINALLY?
         SRL   R3,1                 (STRING LENGTH +1)/2
         ST    R3,MSGTEXT2          (STRING LENGTH +1)/2
         BNE   ZFINHEX2             NO, BRANCH
         SPACE 1
ZFINHEX1 LA    R5,1(,R5)            NEXT CHARACTER
         OI    0(R5),X'40'          UPPER CASE THE HEX CHARACTER
         IC    R15,0(,R5)           GET A BYTE TO CONVERT
         CLI   0(R5),C'0'
         BL    *+12                 0-9?
         CLI   0(R5),C'9'
         BNH   ZFINHEX2             YES, BRANCH
         LA    R15,9(,R15)          NO, ADJUST LOW DIGIT 1-5 TO A-F
         CLI   0(R5),C'A'           BELOW AN A?
         BL    ZFINNEWS             YES, INVALID
         CLI   0(R5),C'F'           ABOVE AN F?
         BH    ZFINNEWS             YES, INVALID
         SPACE 1
ZFINHEX2 SLL   R15,28               SHIFT
         SLDL  R14,4                GET A GOOD DIGIT
         BCT   R0,ZFINHEX1          DO THE NEXT DIGIT OF A PAIR
         LA    R0,2                 PAIRWISE COUNTER
         STC   R14,0(,R1)           SAVE AN OUTPUT CHARACTER
         LA    R1,1(,R1)            ANOTHER OUTPUT CHARACTER
         BCT   R3,ZFINHEX1          DO ALL DIGITS
         SPACE 1
         LA    R5,MSGTEXT2+4-1      START OF CONVERTED STRING -1
         L     R2,MSGTEXT2          LENGTH OF CONVERTED STRING
         CH    R2,=H'32'            VALID LENGTH?
         BH    ZFINNEWS             NO, BRANCH
         STH   R2,FINDLTH           SAVE ACTUAL LENGTH
         BCTR  R2,0                 MACHINE LENGTH
         MVC   FINDSTR(*-*),1(R5)   <<EXECUTED>>
         EX    R2,*-6               SAVE THE NEW STRING
         B     ZFINCHK
         SPACE 2
ZFINCHAR MVC   MSGTEXT1(3),L842     INVALID LENGTH MESSAGE
         CH    R2,=H'32'            VALID LENGTH?
         BH    ZFINNEWS             NO, BRANCH
         STH   R2,FINDLTH           SAVE ACTUAL LENGTH
         BCTR  R2,0                 MACHINE LENGTH
         MVC   FINDSTR(*-*),1(R5)   <<EXECUTED>>
         EX    R2,*-6               SAVE THE NEW STRING
         CLI   FINDASIS+1,1            ASIS REQUESTED?
         BE    ZFINCHK                 YES, BRANCH
         OC    FINDSTR(32),BLANK128    NO, UPPER CASE THE DATA
         B     ZFINCHK
         SPACE 2
ZFINNEWS M$MSG MSGTEXT1             INVALID LENGTH STRING -- REENTER
ZFINNEW0 LA    R2,NEWCMD            EXIT ADDRESS FOR ATTENTION
        M$PUTGT PDS380A,ATTN=PARSATTN  SECOND PART OF MESSAGE
         L     R5,ADDRCBUF          ENTERED DATA
         LH    R2,0(,R5)            LENGTH OF STRING
         SH    R2,=H'5'             VALID MACHINE LENGTH?
         LA    R1,4(R5,R2)          LAST BYTE OF INPUT STRING
         BZ    ZFINNEW3             MAYBE, CHECK FURTHER
         BNP   ZFINNEW0             NO, NULL STRING -- PROMPT AGAIN
         SPACE 1
ZFINNEW1 CLI   0(R1),X'40'          SCAN
         BNE   ZFINNEW2                 BACKWARDS
         BCTR  R1,0                              FOR A
         BCT   R2,ZFINNEW1                             NON-BLANK
         B     ZFINNEW3             POSSIBLE STRING -- CHECK
         SPACE 1
ZFINNEW2 CLI   4(R5),X'40'          SCAN
         BNE   ZFINNEW3                 FORWARDS
         LA    R5,1(,R5)                        FOR A
         BCT   R2,ZFINNEW2                            NON-BLANK
         SPACE 1
ZFINNEW3 CLI   4(R5),X'40'          REAL STRING?
         BE    ZFINNEW0             NO, PROMPT AGAIN
         CLI   FINDASIS+1,1         ASIS REQUESTED?
         BE    ZFINNEW4             YES, BRANCH
         OC    4(*-*,R5),BLANK128   <<EXECUTED>>
         EX    R2,*-6               UPPER-CASE DATA AND DELIMITERS
         SPACE 1
ZFINNEW4 OI    4(R5),X'40'          UPPER-CASE THE FIRST DELIMITER
         MVC   0(1,R5),0(R1)        ENDING CHARACTER
         OI    0(R5),X'40'          UPPER-CASE THE LAST DELIMITER
         CLC   0(1,R5),4(R5)        SAME DELIMITERS?
         BNE   *+6                  NO, BRANCH
         BCTR  R2,0                 YES, ALLOW FOR LAST DELIMITER
         LA    R5,5(,R5)            FIRST CHARACTER OF STRING
         B     ZFINTEST             PARSE THIS NEW STRING
         SPACE 2
ZFINCHK  CLI   FINDLIST+1,1           FINDLIST SPECIFIED?
         BNE   ZFINCHK1               NO, BRANCH
         OI    ##ADRPA#,$F            YES, TURN ON THE FLAG
         SPACE 1
ZFINCHK1 CLI   FINDFMT+1,0            WAS A FORMAT SPECIFIED?
         BE    ZFINCHK2               NO, BRANCH
         NI    HFLAGSDD,FF-NONUM-SNUM-BLOCK-DUMP-LBLOCK-LDUMP
         LH    R15,FINDFMT            FORMAT REQUESTED
         A     R15,=F'-2'             LESS 2 -- NEGATIVE?
         BM    ZFINCHK2               YES, BRANCH
         LA    R1,1                   SHIFT VALUE
         SLL   R1,0(R15)              SHIFT INTO POSITION
         OI    HFLAGSDD,*-*           <<EXECUTED>>
         EX    R1,*-4                 MOVE INTO FLAG BYTE
         SPACE 1
ZFINCHK2 LA    R1,FMAXLENC            MAXLEN
         BAS   R14,PACKMAX            CONVERT TO BINARY
         ST    R1,#MAXLEN             SAVE RESULT
         SPACE 1
         LA    R1,FMAXINC             MAXIN
         BAS   R14,PACKMAX            CONVERT TO BINARY
         ST    R1,#MAXIN              SAVE RESULT
         SPACE 1
         LA    R1,FMAXOUTC            MAXOUT
         BAS   R14,PACKMAX            CONVERT TO BINARY
         ST    R1,#MAXOUT             SAVE RESULT
         SPACE 1
         LA    R1,FMAXFIND            MAXFIND
         BAS   R14,PACKMAX            CONVERT TO BINARY
         ST    R1,#MAXFIND            SAVE RESULT
         SPACE 1
         LA    R1,FSKIPRC             SKIPREC
         BAS   R14,PACKMAX            CONVERT TO BINARY
         ST    R1,#SKIPREC            SAVE RESULT
         SPACE 1
         LA    R1,FSKIPCC             SKIPCOL
         BAS   R14,PACKMAX            CONVERT TO BINARY
         STH   R1,#SKIPCOL            SAVE RESULT
         SPACE 1
         LH    R1,FTHENCC             THEN ACTION NUMBER
         SLA   R1,2                   ACTION SPECIFIED
         L     R1,THENTBL(R1)         THEN ACTION POINTER
         ST    R1,#ACTIONT            NOTE FOR LATER
         OC    FLAGSII(1),#ACTIONT    SET POSSIBLE FSINGLE FLAG
***TEST  OC    SPFLAG3(1),#ACTIONT    SET POSSIBLE INVALID    ABL OCT84
         SPACE 1
ZFINCHK3 LH    R1,FELSECC             ELSE ACTION NUMBER
         SLA   R1,2                   ACTION SPECIFIED
         L     R1,THENTBL(R1)         ELSE ACTION POINTER
         ST    R1,#ACTIONE            NOTE FOR LATER
         OC    FLAGSII(1),#ACTIONE    SET POSSIBLE FSINGLE FLAG
***TEST  OC    SPFLAG3(1),#ACTIONE    SET POSSIBLE INVALID    ABL OCT84
         SPACE 1
         TM    FINDOFF+6,X'80'        OFFSET CODED?
         BNO   ZFINCHK4               NO, DONE
         L     R5,FINDOFF             OFFSET ADDRESS
         LH    R1,FINDOFF+4           LENGTH OF OFFSET
         LTR   R1,R1                  NULL STRING CODED?
         BNP   ZFINCHK4               YES, DONE
         MVI   MSGTEXT2+1,3           MAXIMUM OF 3 DIGITS
         MVC   MSGTEXT1,PDS384A       OFFSET INVALID MESSAGE
         BAS   R2,HEXC                CONVERT TO BINARY
         B     PARSATTN               ATTENTION -- IGNORE THE REST
         STCM  R0,B'0111',#LISTOFF+1  SAVE THE RESULTING OFFSET
         SPACE 1
ZFINCHK4 LH    R15,FDUMPCS+4          LENGTH OF BLOCK/DUMP STRING
         STC   R15,#MODLEN
         S     R15,=F'1'              ANY STRING?
         BM    PARSPOST               NO, BRANCH
         L     R1,FDUMPCS             ADDRESS OF BLOCK/DUMP STRING
         MVC   #MODTXT(8),BLANKS      INITIALIZE
         MVC   #MODTXT(*-*),0(R1)     <<EXECUTED>>
         EX    R15,*-6                SAVE THE STRING FOR LATER
         CLC   #MODTXT(2),=C'* '      * NOTATION?
         BNE   *+16                   NO, BRANCH
         MVC   #MODTXT(8),LASTMOD     YES, USE DEFAULT
         MVC   #MODLEN(1),LASTMOD#    YES, USE DEFAULT
         MVC   LASTMOD(8),#MODTXT     RESET LASTMOD
         MVC   LASTMOD#(1),#MODLEN    RESET LASTMOD#
         MVC   #LISTMFF(4),#LISTOFF   SAVE MODULE OFFSET
         XC    #LISTOFF(4),#LISTOFF   CLEAR LIST OFFSET
         B     PARSPOST
         SPACE 2
         USING PDLFIX,R6
         USING *,R4
ZFIXPDS  MVC   #FIXOPT(1),PCLFIXOP+1  SAVE FIXPDS MAIN KEYWORD OPTION
         MVC   #FIXCHK(1),PCLFIXCK+1  SAVE FIXPDS CHECK/NOCHECK
         MVC   #FIXOPT2(1),PCLRELOP+1 SAVE FIXPDS RELEASE/RELSAVE/MAXSP
         MVC   #FIXOPT3(1),PCLADDOP+1 SAVE FIXPDS ADDTRK/ADDCYL
         MVC   #OPTCD(1),ROPTCD+1     SAVE OPTCD/NOOPTCD
         SPACE 1
         SR    R1,R1
         ICM   R1,B'0001',RTYPE+1   ANY GENERAL DATA TYPE?
         BZ    ZFIX010              NO, BRANCH
         MH    R1,=H'22'            INDEX VALUE
         LA    R3,RTABLE-22-22(R1)  CURRENT ENTRY -22
         MVC   #RECFM+3(1),22+1(R3) RECFM
         MVC   #LRECL+2(2),22+2(R3) LRECL
         IC    R1,BYTEUCB+1         DEVICE INDEX
         LA    R0,X'0000000E'       MAXIMUM DEFINED INDEX
         CR    R1,R0                ABOVE 3380?
         BNH   *+6                  NO, BRANCH
         LR    R1,R0                YES, USE 3380 DATA
         AR    R1,R1                DEVICE INDEX * 2 (FOR TABLE ENTRY)
         LA    R3,22+4-12(R3,R1)    POINT TO DEVICE BLOCKSIZE
         MVC   #BLKSI+2(2),0(R3)    BLKSIZE
         SPACE 1
ZFIX010  LH    R1,RRECFMZI          RECORD FORMAT INDEX (0 IF NONE)
         LA    R1,RECFMVAL(R1)      INDEX TO CORRESPONDING DCBRECFM
         CLI   0(R1),X'00'          DEFAULT RECFM VALUE?
         BE    *+10                 YES, BRANCH
         MVC   #RECFM+3(1),0(R1)    NO, NEW RECORD FORMAT
         SPACE 1
         LH    R1,ROPTCDZI          OPTCD VALUE (0 IF NONE)
         LA    R1,OPTCDVAL(R1)      INDEX TO CORRESPONDING DCBOPTCD
         CLI   0(R1),X'00'          DEFAULT RECFM VALUE?
         BE    *+10                 YES, BRANCH
         MVC   #OPTCD+3(1),0(R1)    NO, NEW OPTCD VALUE
         SPACE 1
         LA    R1,RTRKSI            COUNT OF TRACKS OR CYLINDERS
         BAS   R14,PACKMAX          CONVERT TO BINARY
         STCM  R1,B'0111',#FIXOPT3+1  SAVE RESULT IF CODED
         SPACE 1
         LA    R1,RDIRZI            NUMBER OF DIRECTORY BLOCKS
         BAS   R14,PACKMAX          CONVERT TO BINARY
         B     FIXPDS20             A RESULT WAS CODED
         SPACE 1
         SR    R1,R1                ASSUME ZERO
         CLI   #FIXOPT,X'03'        DCB OR RESET?
         BL    FIXPDS20             YES, BRANCH
         LA    R1,50                ASSUME EXPANDIR
         CLI   #FIXOPT,X'03'        CORRECT?
         BE    FIXPDS20             YES, BRANCH
         LA    R1,5                 NO, FREEDIR
FIXPDS20 ST    R1,#NEWDIR           SAVE RESULT (OR DEFAULT)
         SPACE 1
         LA    R1,RLRECLZI          LRECL DESIRED
         BAS   R14,PACKMAX          CONVERT TO BINARY
         ST    R1,#LRECL            SAVE RESULT IF CODED
         SPACE 1
         LA    R1,RBLKSIZI          BLOCKSIZE DESIRED
         BAS   R14,PACKMAX          CONVERT TO BINARY
         ST    R1,#BLKSI            SAVE RESULT IF CODED
         SPACE 1
         LA    R1,RRESV             RESERVE COUNT
         BAS   R14,PACKMAX          CONVERT TO BINARY
         ST    R1,#FIXRES           SAVE RESULT IF CODED
         B     PARSPOST
         SPACE 2
******           23051 23052  2314  3330  3340  3350  3375 33301  3380
******           ***** *****  ****  ****  ****  ****  **** *****  ****
RTABLE   DC  XL2'C0',AL2(0)      ...LOAD
         DC  AL2(14136,14660,+7294,13030,+8368,19069,19069,13030,32760)
         DC  XL2'90',AL2(80)     ...OBJECT
         DC  AL2(+3200,+2720,+2240,+3120,+2640,+2960,+3200,+3120,+3120)
         DC  XL2'50',AL2(255)    ...CLIST
         DC  AL2(+4424,+4754,+2296,+4252,+1964,+6232,+6816,+4252,+6356)
         DC  XL2'90',AL2(80)     ...CNTL
         DC  AL2(+6800,+7200,+3520,+6400,+4080,+6160,+6800,+6400,+6320)
         DC  XL2'90',AL2(80)     ...ASM
         DC  AL2(+6800,+7200,+3520,+6400,+4080,+6160,+6800,+6400,+6320)
         SPACE 2
RECFMVAL DC    X'00',X'80',X'90',X'A0',X'B0',X'84',X'94',X'A4',X'B4'
         DC    X'82',X'92',X'A2',X'B2'  RECFM(F) THROUGH RECFM(FBTM)
         DC          X'40',X'50',X'60',X'70',X'44',X'54',X'64',X'74'
         DC    X'42',X'52',X'62',X'72'  RECFM(V) THROUGH RECFM(VBTM)
         DC          X'C0',X'E0',X'C4',X'C2',X'E4',X'E2'
         SPACE 2
OPTCDVAL DC    X'00',X'80',X'A0',X'84',X'A4',X'A4'
         DC          X'20',X'24',X'A0',X'A4',X'A4'
         DC          X'04',X'24',X'84',X'A4',X'A4'
         SPACE 2
         DS    0H
         USING PDLHIST,R6
         USING *,R4
ZHISTORY MVC   #ZAPOPT(1),PCLHZAPK+1    SAVE THE ZAP OPTION
         MVC   #USEROPT(1),PCLHUSRK+1   SAVE USERDATA/SYSMOD
         MVC   #TRANOPT(1),PCLHTRNK+1   SAVE THE TRAN OPTION
         MVC   #LKEDOPT(1),PCLHLKDK+1   SAVE THE LKED OPTION
         SPACE 1
         TM    PCLHMOD+6,X'80'        ANY MODULE NAME FILTERING?
         BNO   ZHIST10                NO, BRANCH
         LH    R15,PCLHMOD+4          LENGTH OF MODULE NAME
         STC   R15,#MODLEN            SAVE FOR LATER
         S     R15,=F'1'              MACHINE LENGTH VALID?
         BM    ZHIST10                NO, BRANCH
         L     R1,PCLHMOD             PARTIAL MODULE NAME
         MVC   #MODTXT(8),BLANKS      INITIALIZE
         MVC   #MODTXT(*-*),0(R1)     <<EXECUTED>>
         EX    R15,*-6                SAVE THE STRING FOR LATER
         CLC   #MODTXT(2),=C'* '      * NOTATION?
         BNE   *+16                   NO, BRANCH
         MVC   #MODTXT(8),LASTMOD     YES, USE DEFAULT
         MVC   #MODLEN(1),LASTMOD#    YES, USE DEFAULT
         MVC   LASTMOD(8),#MODTXT     RESET LASTMOD
         MVC   LASTMOD#(1),#MODLEN    RESET LASTMOD#
         SPACE 3
ZHIST10  TM    PCLHTRN+6,X'80'        ANY TRANSLATOR NAME FILTERING?
         BNO   ZHIST20                NO, BRANCH
         LH    R15,PCLHTRN+4          LENGTH OF NAME
         STC   R15,#TRANLEN           SAVE FOR LATER
         S     R15,=F'1'              MACHINE LENGTH VALID?
         BM    ZHIST20                NO, BRANCH
         L     R1,PCLHTRN             PARTIAL TRANSLATOR NAME
         MVC   #TRANTXT(*-*),0(R1)    <<EXECUTED>>
         EX    R15,*-6                MOVE INTO STORAGE
         SPACE 1
ZHIST20  TM    PCLHZAP+6,X'80'        ANY ZAP IDRDATA NAME FILTERING?
         BNO   ZHIST30                NO, BRANCH
         LH    R15,PCLHZAP+4          LENGTH OF NAME
         STC   R15,#ZAPLEN            SAVE FOR LATER
         S     R15,=F'1'              MACHINE LENGTH VALID?
         BM    ZHIST30                NO, BRANCH
         L     R1,PCLHZAP             PARTIAL IDRDATA DATA
         MVC   #ZAPTXT(*-*),0(R1)     <<EXECUTED>>
         EX    R15,*-6                MOVE INTO STORAGE
         SPACE 1
ZHIST30  TM    PCLHUSR+6,X'80'        ANY USER IDRDATA FILTERING?
         BNO   ZHIST40                NO, BRANCH
         LH    R15,PCLHUSR+4          LENGTH OF NAME
         STC   R15,#USERLEN           SAVE FOR LATER
         S     R15,=F'1'              MACHINE LENGTH VALID?
         BM    ZHIST40                NO, BRANCH
         L     R1,PCLHUSR             PARTIAL IDRDATA DATA
         MVC   #USERTXT(*-*),0(R1)    <<EXECUTED>>
         EX    R15,*-6                MOVE INTO STORAGE
         SPACE 1
ZHIST40  TM    PCLHLKD+6,X'80'        ANY LKED IDRDATA FILTERING?
         BNO   PARSPOST               NO, BRANCH
         LH    R15,PCLHLKD+4          LENGTH OF NAME
         STC   R15,#LKEDLEN           SAVE FOR LATER
         S     R15,=F'1'              MACHINE LENGTH VALID?
         BM    PARSPOST               NO, BRANCH
         L     R1,PCLHLKD             PARTIAL IDRDATA DATA
         MVC   #LKEDTXT(*-*),0(R1)    <<EXECUTED>>
         EX    R15,*-6                MOVE INTO STORAGE
         B     PARSPOST
         SPACE 2
         USING PDLIFTTR,R6
         USING *,R4
ZIF      MVC   #ALIAOPT(1),IFLKALIA+1   ALIAS/NOALIAS
         MVC   #SSIOPT(1),IFLKSSI+1     SSI/NOSSI/PARTSSI
         MVC   #AUTHOPT(1),IFLKAUTH+1   AUTH/NOAUTH
         MVC   #PAGEOPT(1),IFLKPAGE+1   PAGE/NOPAGE
         MVC   #VSLKED(1),IFLKVSLE+1    VSLKED/NOVSLKED
         MVC   #RMODE(1),IFRMODE+1      RMODE24/RMODEANY
         MVC   #AMODE(1),IFAMODE+1      AMODE24/AMODE31/AMODEANY/NOA...
         MVC   #USERIDO(1),IFTUSERK+1   USERID/NOUSERID/NOTUSERID
         MVC   #LOADERR(1),IFLOADER+1   LOADERR/NOLOADERR
         MVC   #LKEDERR(1),IFLKEDER+1   LKEDERR/NOLKEDERR
         MVC   #IOERROR(1),IFIOERR+1    IOERR/NOIOERR
         MVC   #BLOCKER(1),IFBLKERR+1   BLOCKERR/MAXBLK(SIZ)/NOBLOCKERR
         MVC   #LRECLER(1),IFLRECLE+1   LRECLERR/NOLRECLERR
         MVC   #NULL(1),IFNULL+1        NULL/NONULL
         MVC   #AALIAS(1),IFAALIAS+1    APPARENTALIAS/NOAPPARENTALIAS
         MVC   #ORPHAN(1),IFORPHAN+1    ORPHAN/NOORPHAN
         MVC   #SPFEDIT(1),IFSPFEDT+1   SPFEDIT/NOSPFEDIT
         MVC   #NAMEERR(1),IFNAMERR+1   NAMEERR/NONAMEERR
         MVC   #HASALIA(1),IFHASALI+1   HASALIAS/NOHASALIAS
         MVC   #ATTRHI(3),=F'-1'        INITIALIZE THE SECOND TTR VALUE
         SPACE 1
ZIF380   CLI   IFLKREUS+1,X'01'       REUSABLE ATTRIBUTE STATUS:
         BL    ZIF384                   NONE, BRANCH
         BH    ZIF382                   "NO" FORM, BRANCH
         OI    #ATTRYES,ATTRREUS        "REUS"
         B     ZIF384
ZIF382   OI    #ATTRNO,ATTRREUS         "NOREUS"
         SPACE 1
ZIF384   CLI   IFLKREFR+1,X'01'       REFRESHABLE ATTRIBUTE STATUS:
         BL    ZIF400                   NONE, BRANCH
         BH    ZIF386                   "NO" FORM, BRANCH
         OI    #ATTRYES+1,ATTRREFR      "REFR"
         B     ZIF400
ZIF386   OI    #ATTRNO+1,ATTRREFR       "NOREFR"
         SPACE 1
ZIF400   CLI   IFLKRENT+1,X'01'       REENTRANT ATTRIBUTE STATUS:
         BL    ZIF404                   NONE, BRANCH
         BH    ZIF402                   "NO" FORM, BRANCH
         OI    #ATTRYES,ATTRRENT        "RENT"
         B     ZIF404
ZIF402   OI    #ATTRNO,ATTRRENT         "NORENT"
         SPACE 1
ZIF404   CLI   IFLKEXEC+1,X'01'       EXECUTABLE ATTRIBUTE STATUS:
         BL    ZIF420                   NONE, BRANCH
         BH    ZIF406                   "NO" FORM, BRANCH
         OI    #ATTRYES,ATTREXEC        "EXEC"
         B     ZIF420
ZIF406   OI    #ATTRNO,ATTREXEC         "NOEXEC"
         SPACE 1
ZIF420   CLI   IFLKLOAD+1,X'01'       LOADABLE ATTRIBUTE STATUS:
         BL    ZIF424                   NONE, BRANCH
         BH    ZIF422                   "NO" FORM, BRANCH
         OI    #ATTRYES,ATTRLOAD        "LOAD"
         B     ZIF424
ZIF422   OI    #ATTRNO,ATTRLOAD         "NOLOAD"
         SPACE 1
ZIF424   CLI   IFLKEDIT+1,X'01'       NOT EDITABLE ATTRIBUTE STATUS:
         BL    ZIF440                   NONE, BRANCH
         BH    ZIF426                   "NO" FORM, BRANCH
         OI    #ATTRNO+1,ATTRNE        "EDIT"  -- BIT MUST BE REVERSED
         B     ZIF440
ZIF426   OI    #ATTRYES+1,ATTRNE        "NOEDIT"
         SPACE 1
ZIF440   CLI   IFLKLKED+1,X'01'       LINKAGE EDITOR ATTRIBUTE:
         BL    ZIF444                   NEITHER, BRANCH
         BH    ZIF442                   NULL FORM, BRANCH
         OI    #ATTRYES+1,ATTRFLEV      "FLEVEL"
         B     ZIF444
ZIF442   OI    #ATTRNO+1,ATTRFLEV       "NOFLEVEL"
         SPACE 1
ZIF444   CLI   IFLKOVER+1,X'01'       OVERLAY ATTRIBUTE STATUS:
         BL    ZIF460                   NONE, BRANCH
         BH    ZIF446                   "NO" FORM, BRANCH
         OI    #ATTRYES,ATTROVLY        "OVERLAY"
         B     ZIF460
ZIF446   OI    #ATTRNO,ATTROVLY         "NOOVERLAY"
         SPACE 1
ZIF460   CLI   IFLKTEST+1,X'01'       TEST ATTRIBUTE STATUS:
         BL    ZIF464                   NONE, BRANCH
         BH    ZIF462                   "NO" FORM, BRANCH
         OI    #ATTRYES,ATTRTEST        "TEST"
         B     ZIF464
ZIF462   OI    #ATTRNO,ATTRTEST         "NOTEST"
         SPACE 1
ZIF464   CLI   IFLKSCTR+1,X'01'       SCATTER ATTRIBUTE STATUS:
         BL    ZIF480                   NONE, BRANCH
         BH    ZIF466                   "NO" FORM, BRANCH
         OI    #ATTRYES,ATTRSCTR        "SCTR"
         B     ZIF480
ZIF466   OI    #ATTRNO,ATTRSCTR         "NOSCTR"
         SPACE 1
ZIF480   CLI   IFLKDC+1,X'01'         DOWNWARD COMPATIBLE ATTRIBUTE:
         BL    ZIF484                   NONE, BRANCH
         BH    ZIF482                   "NO" FORM, BRANCH
         OI    #ATTRNO+1,ATTRNODC       "DC" -- BIT IS REVERSED
         B     ZIF484
ZIF482   OI    #ATTRYES+1,ATTRNODC      "NODC"
         SPACE 1
ZIF484   TM    IFTUSER+6,X'80'        ANY USERID NAME FILTERING?
         BNO   ZIF500                 NO, BRANCH
         LH    R15,IFTUSER+4          LENGTH OF USERID NAME
         STC   R15,#USERIDL           SAVE FOR LATER
         S     R15,=F'1'              MACHINE LENGTH VALID?
         BM    ZIF500                 NO, BRANCH
         L     R1,IFTUSER             PARTIAL USERID NAME
         MVC   #USERTXT(*-*),0(R1)    <<EXECUTED>>
         EX    R15,*-6                MOVE INTO STORAGE
         SPACE 1
ZIF500   MVC   #ZAPOPT(1),IFTLZAPK+1   SAVE ZAP/NOZAP
         MVC   #USEROPT(1),IFTLUSRK+1  SAVE USERDATA/SYSMOD
         MVC   #TRANOPT(1),IFTLTRNK+1  SAVE TRAN/NOTRAN
         MVC   #LKEDOPT(1),IFTLKEDK+1  SAVE LKED/NOLKED
         MVC   #RLDERR(1),IFRLDERR+1   SAVE RLDERR/NORLDERR
         MVC   #RLD0(1),IFRLD0+1       SAVE RLDZERO/NORLDZERO
         MVC   #APFERR(1),IFAPFERR+1   SAVE APFERR/NOAPFERR
         SPACE 1
         IC    R14,IFTLMODK+1         MODULE
         IC    R15,IFEXTERN+1         WKEXTERN/EXTERN
         SLL   R14,4                  SHIFT MODULE UP 4
         OR    R14,R15                PUT IN SAME CHARACTER
         STC   R14,#MODOPT            SAVE MODULE, WKEXTERN/EXTERN
         SPACE 1
         TM    IFTLKED+6,X'80'        ANY LINKAGE EDITOR FILTERING?
         BNO   ZIF502                 NO, BRANCH
         LH    R15,IFTLKED+4          LENGTH OF LKED NAME
         STC   R15,#LKEDLEN           SAVE FOR LATER
         S     R15,=F'1'              MACHINE LENGTH VALID?
         BM    ZIF502                 NO, BRANCH
         L     R1,IFTLKED             PARTIAL MODULE NAME
         MVC   #LKEDTXT(*-*),0(R1)    <<EXECUTED>>
         EX    R15,*-6                MOVE INTO STORAGE
         SPACE 1
ZIF502   TM    IFTLMOD+6,X'80'        ANY MODULE NAME FILTERING?
         BNO   ZIF504                 NO, BRANCH
         LH    R15,IFTLMOD+4          LENGTH OF MODULE NAME
         STC   R15,#MODLEN            SAVE FOR LATER
         S     R15,=F'1'              MACHINE LENGTH VALID?
         BM    ZIF504                 NO, BRANCH
         L     R1,IFTLMOD             PARTIAL MODULE NAME
         MVC   #MODTXT(8),BLANKS      INITIALIZE
         MVC   #MODTXT(*-*),0(R1)     <<EXECUTED>>
         EX    R15,*-6                SAVE THE STRING FOR LATER
         CLC   #MODTXT(2),=C'* '      * NOTATION?
         BNE   *+16                   NO, BRANCH
         MVC   #MODTXT(8),LASTMOD     YES, USE DEFAULT
         MVC   #MODLEN(1),LASTMOD#    YES, USE DEFAULT
         MVC   LASTMOD(8),#MODTXT     RESET LASTMOD
         MVC   LASTMOD#(1),#MODLEN    RESET LASTMOD#
         SPACE 1
ZIF504   TM    IFTLTRN+6,X'80'        ANY TRANSLATOR NAME FILTERING?
         BNO   ZIF506                 NO, BRANCH
         LH    R15,IFTLTRN+4          LENGTH OF NAME
         STC   R15,#TRANLEN           SAVE FOR LATER
         S     R15,=F'1'              MACHINE LENGTH VALID?
         BM    ZIF506                 NO, BRANCH
         L     R1,IFTLTRN             PARTIAL TRANSLATOR NAME
         MVC   #TRANTXT(*-*),0(R1)    <<EXECUTED>>
         EX    R15,*-6                MOVE INTO STORAGE
         SPACE 1
ZIF506   TM    IFTLZAP+6,X'80'        ANY ZAP IDRDATA NAME FILTERING?
         BNO   ZIF508                 NO, BRANCH
         LH    R15,IFTLZAP+4          LENGTH OF NAME
         STC   R15,#ZAPLEN            SAVE FOR LATER
         S     R15,=F'1'              MACHINE LENGTH VALID?
         BM    ZIF508                 NO, BRANCH
         L     R1,IFTLZAP             PARTIAL IDRDATA DATA
         MVC   #ZAPTXT(*-*),0(R1)     <<EXECUTED>>
         EX    R15,*-6                MOVE INTO STORAGE
         SPACE 1
ZIF508   TM    IFTLUSR+6,X'80'        ANY USERDATA IDRDATA FILTERING?
         BNO   ZIF540                 NO, BRANCH
         LH    R15,IFTLUSR+4          LENGTH OF NAME
         STC   R15,#USERLEN           SAVE FOR LATER
         S     R15,=F'1'              MACHINE LENGTH VALID?
         BM    ZIF540                 NO, BRANCH
         L     R1,IFTLUSR             PARTIAL IDRDATA DATA
         MVC   #USERTXT(*-*),0(R1)    <<EXECUTED>>
         EX    R15,*-6                MOVE INTO STORAGE
         SPACE 3
ZIF540   TM    IFTTTR+6,X'80'       STRING CODED?
         BNO   ZIF560               NO, DONE
         L     R5,IFTTTR            NEW STRING ADDRESS
         LH    R1,IFTTTR+4          LENGTH OF STRING
         LTR   R1,R1                NULL STRING CODED?
         BNP   ZIF560               YES, DONE
         MVI   MSGTEXT2+1,3         MAXIMUM OF 3 DIGITS
         MVC   MSGTEXT1,PDS382A     FIRST TTR MESSAGE
         BAS   R2,HEXC              CONVERT TO BINARY
         B     PARSATTN             ATTENTION -- IGNORE THE REST
         STCM  R0,B'0111',#ATTRLO   SAVE THE RESULTING TTR
         SPACE 2
         TM    IFTTTR+8+6,X'80'     STRING CODED?
         BNO   ZIF560               NO, DONE
         L     R5,IFTTTR+8          NEW STRING ADDRESS
         LH    R1,IFTTTR+8+4        LENGTH OF STRING
         LTR   R1,R1                NULL STRING CODED?
         BNP   ZIF560               YES, DONE
         MVC   MSGTEXT1,PDS383A     SECOND TTR MESSAGE
         BAS   R2,HEXC              CONVERT TO BINARY
         B     PARSATTN             ATTENTION -- IGNORE THE REST
         STCM  R0,B'0111',#ATTRHI   SAVE THE RESULTING TTR
         SPACE 2
ZIF560   MVI   #OPTOPT,X'80'          PARSE WAS CALLED FOR IF
         LA    R1,IFABOSUB            ABOVE(COUNT)
         BAS   R14,PACKMAX            ANY RESULT?
         B     ZIF600                 YES, BRANCH
         B     ZIF620                 NO, BRANCH
ZIF600   ST    R1,#IFABOVE            SAVE RESULT
         OI    #IFABOVE,X'80'         MARK AS ENTERED
         SPACE 1
ZIF620   LA    R1,IFBELSUB            BELOW(COUNT)
         BAS   R14,PACKMAX            ANY RESULT?
         B     ZIF640                 YES, BRANCH
         B     ZIF650                 NO, BRANCH
ZIF640   ST    R1,#IFBELOW            SAVE RESULT
         OI    #IFBELOW,X'80'         MARK AS ENTERED
         SPACE 1
ZIF650   LA    R1,IFTMAXBL            MAXBLK(COUNT)
         BAS   R14,PACKMAX            ANY RESULT?
         B     ZIF652                 YES, BRANCH
         B     ZIF660                 NO, BRANCH
ZIF652   STH   R1,#MAXBLKI            SAVE RESULT
         SPACE 1
ZIF660   LA    R1,IFMODSUB              CHANGED(DATE:
         BAS   R14,PACKMAX              ANY RESULT?
         B     ZIF662                   YES, BRANCH
         B     ZIF670                   NO, BRANCH
ZIF662   MVC   #IFMODIF(3),DOUBLE+5     SAVE RESULT
         MVC   #IFMODIF+3(3),DOUBLE+5   IF SECOND IS MISSING, USE FIRST
         SPACE 1
ZIF670   LA    R1,IFMODSUB+8            CHANGED(:DATE
         BAS   R14,PACKMAX              ANY RESULT?
         B     ZIF672                   YES, BRANCH
         B     ZIF680                   NO, BRANCH
ZIF672   MVC   #IFMODIF+3(3),DOUBLE+5   SAVE RESULT
         OI    #IFMODIF+2,X'0F'         IF FIRST IS MISSING, USE 00000F
         SPACE 1
ZIF680   LA    R1,IFCRESUB              CREATED(DATE:
         BAS   R14,PACKMAX              ANY RESULT?
         B     ZIF682                   YES, BRANCH
         B     ZIF690                   NO, BRANCH
ZIF682   MVC   #IFCREIF(3),DOUBLE+5     SAVE RESULT
         MVC   #IFCREIF+3(3),DOUBLE+5   IF SECOND IS MISSING, USE FIRST
         SPACE 1
ZIF690   LA    R1,IFCRESUB+8            CREATED(:DATE
         BAS   R14,PACKMAX              ANY RESULT?
         B     ZIF692                   YES, BRANCH
         B     ZIF696                   NO, BRANCH
ZIF692   MVC   #IFCREIF+3(3),DOUBLE+5   SAVE RESULT
         OI    #IFCREIF+2,X'0F'         IF FIRST IS MISSING, USE 00000F
ZIF696   XC    FULLWORD,FULLWORD        CLEAR THE INCREMENT AMOUNT
         CLI   IFDATEKY+1,0             ANY DATE KEYWORD?
         BE    ZIF900                   NO, BRANCH
         CLI   IFDATEKY+1,10            PREV0 THROUGH PREV9?
         BH    ZIF700                   NO, BRANCH
         LH    R0,IFDATEKY              LOAD DATE
         BCTR  R0,0                     LESS ONE
         SLL   R0,4                     SHIFT FOR SIGN
         STC   R0,FULLWORD+3            STORE NUMERIC VALUE
         OI    FULLWORD+3,X'0F'         ADD PACKED SIGN
         B     ZIF790
         SPACE 1
ZIF700   MVI   FULLWORD+2,01            1X TYPE DATE
         CLI   IFDATEKY+1,11            PREV10?
         BNE   ZIF702                   NO, BRANCH
         MVI   FULLWORD+3,X'0F'         PREV10
         B     ZIF790
         SPACE 1
ZIF702   CLI   IFDATEKY+1,12            PREV11?
         BNE   ZIF704                   NO, BRANCH
         MVI   FULLWORD+3,X'1F'         PREV11
         B     ZIF790
         SPACE 1
ZIF704   CLI   IFDATEKY+1,13            PREV12?
         BNE   ZIF706                   NO, BRANCH
         MVI   FULLWORD+3,X'2F'         PREV12
         B     ZIF790
         SPACE 1
ZIF706   CLI   IFDATEKY+1,14            PREV13?
         BNE   ZIF708                   NO, BRANCH
         MVI   FULLWORD+3,X'3F'         PREV13
         B     ZIF790
         SPACE 1
ZIF708   CLI   IFDATEKY+1,15            BIWEEK?
         BNE   ZIF710                   NO, BRANCH
         MVI   FULLWORD+3,X'4F'         PREV14
         B     ZIF790
         SPACE 1
ZIF710   CLI   IFDATEKY+1,16            MONTH
         BNE   ZIF712                   NO, BRANCH
         MVI   FULLWORD+2,03            3X TYPE DATE
         MVI   FULLWORD+3,X'0F'         MONTH
         B     ZIF790
         SPACE 1
ZIF712   CLI   IFDATEKY+1,17            QUARTER?
         BNE   ZIF714                   NO, BRANCH
         MVI   FULLWORD+2,X'09'         12X TYPE DATE         DRK FEB00
         MVI   FULLWORD+3,X'0F'         QUARTER
         B     ZIF790
         SPACE 1
ZIF714   CLI   IFDATEKY+1,18            HALFYEAR
         BNE   ZIF716                   NO, BRANCH
         MVI   FULLWORD+2,X'18'         18X TYPE DATE
         MVI   FULLWORD+3,X'3F'         HALFYEAR
         B     ZIF790
         SPACE 1
ZIF716   CLI   IFDATEKY+1,19            YEAR?
         BNE   ZIF718                   NO, BRANCH
         MVC   FULLWORD+1(3),=PL3'1000' ONE YEAR
         B     ZIF790
         SPACE 1
ZIF718   CLI   IFDATEKY+1,20            BIYEAR?
         BNE   ZIF720                   NO, BRANCH
         MVC   FULLWORD+1(3),=PL3'2000' TWO YEARS
         B     ZIF790
         SPACE 1
ZIF720   CLI   IFDATEKY+1,21            LAST(NNN)?
         BNE   ZIF740                   NO, BRANCH
         LA    R1,IFLASTSU              NNN
         BAS   R14,PACKMAX              ANY RESULT?
         B     ZIF730                   YES, BRANCH
         B     ZIF740                   NO, BRANCH
ZIF730   SR    R0,R0
         D     R0,=F'365'               DAYS IN ONE YEAR
         MH    R1,=H'1000'              NUMBER OF YEARS
         AR    R1,R0                    IN YYDDD FORMAT
         CVD   R1,DOUBLE                IN DECIMAL
         MVC   FULLWORD(4),DOUBLE+4     PLACE IN FULLWORD
         B     ZIF790
         SPACE 1
ZIF740   CLI   IFDATEKY+1,22            DATE(YYDDD)
         BNE   ZIF789                   NO, BRANCH
         LA    R1,IFDATESU              YYDDD
         BAS   R14,PACKMAX              ANY RESULT?
         B     ZIF750                   YES, BRANCH
         B     ZIF789                   NO, BRANCH
ZIF750   MVC   DOUBLE+1(3),DOUBLE+5     SAVE RESULT
         B     ZIF792
         SPACE 1
ZIF789   DS    0H
         B     ZIF900                   NONE OF THE ABOVE, BRANCH
         SPACE 1
ZIF790   TIME  DEC                      CURRENT TIME AND DATE
         ST    R1,DOUBLE                CURRENT DATE
         OI    FULLWORD+3,X'0F'         INSURE STANDARD SIGN
         CLC   FULLWORD+2(2),DOUBLE+2   ROTATE A YEAR?
         BL    ZIF791                   NO, BRANCH
         SP    DOUBLE(4),=PL3'1000'     LESS ONE YEAR
         AP    DOUBLE(4),=PL2'365'      ADD THE DAYS
ZIF791   SP    DOUBLE(4),FULLWORD(4)    LESS INCREMENT
         OI    DOUBLE+3,X'0F'           INSURE STANDARD SIGN
ZIF792   CLI   IFFROMKY+1,1             FROM/SINCE?
         BH    ZIF795                   NO, TO/BEFORE
         TIME  DEC                      CURRENT TIME AND DATE
         TM    FLAGSCC,RECFMU           LOAD MODULE?
         BO    ZIF794                   YES, BRANCH
         MVC   #IFMODIF(3),DOUBLE+1     FIRST DATE
         STCM  R1,B'0111',#IFMODIF+3    SECOND DATE
         B     ZIF799
ZIF794   MVC   #IFCREIF(3),DOUBLE+1     FIRST DATE
         STCM  R1,B'0111',#IFCREIF+3    SECOND DATE
         B     ZIF799
ZIF795   DS    0H
         SP    DOUBLE(4),=PL1'1'        LESS ANOTHER DAY
         OI    DOUBLE+3,X'0F'           INSURE STANDARD SIGN
         TM    FLAGSCC,RECFMU           LOAD MODULE?
         BO    ZIF797                   YES, BRANCH
         MVC   #IFMODIF(3),=X'00000F'   FIRST DATE
         MVC   #IFMODIF+3(3),DOUBLE+1   SECOND DATE
         B     ZIF799
ZIF797   MVC   #IFCREIF(3),=X'00000F'   FIRST DATE
         MVC   #IFCREIF+3(3),DOUBLE+1   SECOND DATE
ZIF799   DS    0H
         SPACE 1
ZIF900   TM    IFTSSI+6,X'80'       STRING CODED?
         BNO   ZIF980               NO, DONE
         L     R5,IFTSSI            NEW STRING ADDRESS
         LH    R1,IFTSSI+4          LENGTH OF STRING
         LTR   R1,R1                NULL STRING CODED?
         BNP   ZIF980               YES, DONE
         MVI   MSGTEXT2+1,4         MAXIMUM OF 4 DIGITS
         MVC   MSGTEXT1,PDS385A     SSI MESSAGE
         BAS   R2,HEXC              CONVERT TO BINARY
         B     PARSATTN             ATTENTION -- IGNORE THE REST
         OI    #SSIOPT,X'04'        A SSI VALUE HAS BEEN REQUESTED
         LA    R15,8
         SR    R1,R1
         IC    R1,MSGTEXT2+2        GET ORIGINAL TEXT LENGTH
         SR    R15,R1               8-LENGTH
         STC   R15,SHIFTSSI         SAVE NUMBER OF DIGITS
         SLL   R15,2                (8-LENGTH)*4
         SLL   R0,0(R15)            SHIFT LEFT BY 0, 4, 8, ... OR 28
         STCM  R0,B'1111',#SSITEXT  SAVE THE RESULTING PARTIAL SSI
         SR    R0,R0
         BCTR  R0,0                 FFFFFFFF
         SLL   R0,0(R15)            SHIFT LEFT BY 0, 4, 8, ... OR 28
         STCM  R0,B'1111',SSIMASK   SAVE THE RESULTING SSI MASK
         SPACE 2
ZIF980   TM    FLAGSCC,RECFMU         LOAD MODULE?
         BNO   ZIF990                 NO, BRANCH
         OC    #IFCREIF(6),#IFCREIF   ANY CREATION DATE CHECK?
         BZ    ZIF984                 NO, BRANCH
         OI    #OPTOPT,X'02'          YES, SET A FLAG FOR LATER
         MVC   FULLWORD(3),#IFCREIF   FIRST FIELD
         LA    R1,FULLWORD
         LA    R15,#IFCREIF
         BAS   R14,CONVDATE           CONVERT YYDDDF TO MMDDYY
         ICM   R1,B'0100',#IFCREIF+2  GET YY
         ICM   R1,B'0011',#IFCREIF    GET MMDD
         STCM  R1,B'0111',#IFCREIF    SAVE AS YYMMDD
         MVC   FULLWORD(3),#IFCREIF+3 GET SECOND FIELD
         LA    R1,FULLWORD
         LA    R15,#IFCREIF+3
         BAS   R14,CONVDATE           CONVERT YYDDDF TO MMDDYY
         ICM   R1,B'0100',#IFCREIF+5  GET YY
         ICM   R1,B'0011',#IFCREIF+3  GET MMDD
         STCM  R1,B'0111',#IFCREIF+3  SAVE AS YYMMDD
         SPACE 1
ZIF984   OC    #IFMODIF(6),#IFMODIF   ANY MODIFICATION DATE CHECK?
         BZ    ZIF990                 NO, BRANCH
         OI    #OPTOPT,X'02'          YES, SET A FLAG FOR LATER
         MVC   FULLWORD(3),#IFMODIF   FIRST FIELD
         LA    R1,FULLWORD
         LA    R15,#IFMODIF
         BAS   R14,CONVDATE           CONVERT YYDDDF TO MMDDYY
         ICM   R1,B'0100',#IFMODIF+2  GET YY
         ICM   R1,B'0011',#IFMODIF    GET MMDD
         STCM  R1,B'0111',#IFMODIF    SAVE AS YYMMDD
         MVC   FULLWORD(3),#IFMODIF+3 SECOND FIELD
         LA    R1,FULLWORD
         LA    R15,#IFMODIF+3
         BAS   R14,CONVDATE           CONVERT YYDDDF TO MMDDYY
         ICM   R1,B'0100',#IFMODIF+5  GET YY
         ICM   R1,B'0011',#IFMODIF+3  GET MMDD
         STCM  R1,B'0111',#IFMODIF+3  SAVE AS YYMMDD
         SPACE 1
ZIF990   L     R6,ADDRANSR            RESET THE PDL BASE ADDRESS
         OC    #ATTRYES(13),#ATTRYES  ANY LINKAGE EDITOR ATTRIBUTES?
         BZ    *+8                    NO, BRANCH
         OI    #OPTOPT,X'01'          YES, SET A FLAG FOR LATER
         OC    #ZAPOPT(6),#ZAPOPT     ZAP/USER/TRAN/LKED/MODULE/RLDERR?
         BZ    *+8                    NO, BRANCH
         OI    #OPTOPT,X'02'+X'01'    YES, SET A FLAG FOR LATER
         OC    #IOERROR(4),#IOERROR   IOERROR/BLOCKERR/LRECLERR/NULL?
         BZ    *+8                    NO, BRANCH
         OI    #OPTOPT,X'04'          YES, SET A FLAG FOR LATER
         SPACE 1
         LH    R1,IFTHENCC            THEN ACTION NUMBER
         SLA   R1,2                   ACTION SPECIFIED
         L     R1,THENTBL(R1)         THEN ACTION POINTER
         ST    R1,#ACTIONT            NOTE FOR LATER
         OC    FLAGSII(1),#ACTIONT    SET POSSIBLE FSINGLE FLAG
***TEST  OC    SPFLAG3(1),#ACTIONT    SET POSSIBLE INVALID    ABL OCT84
         SPACE 1
         LH    R1,IFELSECC            ELSE ACTION NUMBER
         SLA   R1,2                   ACTION SPECIFIED
         L     R1,THENTBL(R1)         ELSE ACTION POINTER
         ST    R1,#ACTIONE            NOTE FOR LATER
         OC    FLAGSII(1),#ACTIONE    SET POSSIBLE FSINGLE FLAG
***TEST  OC    SPFLAG3(1),#ACTIONE    SET POSSIBLE INVALID    ABL OCT84
         B     PARSPOST
         SPACE 2
THENTBL  DC    A(0)                        NO ASSOCIATED THEN/ELSE
&NATT    COND  DC,A($ATT)                  ATTRIB
&NBRO    COND  DC,A($BRO)                  BROWSE
&NDIR    COND  DC,A($DIR)                  DIRECTORY
     AIF ('&NDEL' EQ '').NDEL120
         DC    AL1(FSINGLE),AL3($DEL)      DELETE
.NDEL120 ANOP
&NDSP    COND  DC,A($DSP)                  DSPRINT
&NEDI    COND  DC,A($EDI)                  EDIT
&NEND    COND  DC,A($END)                  END
&NFIN    COND  DC,A($FIN)                  FIND
&NFSE    COND  DC,A($FSE)                  FSE
&NHIS    COND  DC,A($HIS)                  HISTORY
&NLIS    COND  DC,A($LIS)                  LIST
&NMAP    COND  DC,A($MAP)                  MAP
     AIF ('&NMEM' EQ '').NMEM120
         DC    AL1(FMEMBERS),AL3($MEM)     MEMBERS
.NMEM120 ANOP
     AIF ('&NMML' EQ '').NMML120
         DC    AL1(FMEMLIST),AL3($MML)     MEMLIST
.NMML120 ANOP
     AIF ('&IMLX' EQ '').NIML120
         DC    AL1(FMEMLIST),AL3($MML)     ML
.NIML120 ANOP
&NOUT    COND  DC,A($OUT)                  OUTCOPY
&NPRI    COND  DC,A($PRI)                  PRINTOFF
&NREV    COND  DC,A($REV)                  REVIEW
&NSPF    COND  DC,A($SPF)                  SPFEDIT
     AIF ('&NSUB' EQ '').NSUB120
         DC    AL1(FMEMBERS),AL3($SUB)     MEMBERS
.NSUB120 ANOP
     AIF ('&NSUL' EQ '').NSUL120
         DC    AL1(FSUBLIST),AL3($SUL)     SUBLIST
.NSUL120 ANOP
&NTSE    COND  DC,A($TSE)                  TSOEDIT
&NTSL    COND  DC,A($TSL)                  TSOLIST
&NVER    COND  DC,A($VER)                  VERIFY
         SPACE 2
         USING PDLISPF,R6
         USING *,R4
ZISPF    TM    PCLISSTR+6,X'80'     STRING CODED?
         BNO   PARSPOST             NO, DONE
         LH    R2,PCLISSTR+4        LENGTH OF STRING
         LTR   R2,R2                NULL STRING CODED?
         BZ    PARSPOST             YES, DONE
         CH    R2,=H'256'           LENGTH(STRING)>=256?
         BL    *+8                  NO, BRANCH
         LH    R2,=H'256'           YES, USE 256 AS A MAXIMUM LENGTH
         STH   R2,#COMMDSZ          SAVE ACTUAL LENGTH
         L     R1,PCLISSTR          NEW STRING ADDRESS
         BCTR  R2,0                 MACHINE LENGTH
         MVC   MSGLINE(*-*),0(R1)   <<EXECUTED>>
         EX    R2,*-6               MOVE IN ANY OTHER OPERANDS
         B     PARSPOST
         SPACE 1
         USING PDLLIST,R6
         USING *,R4
ZLIST    CLI   LISTFMT+1,0            WAS A FORMAT SPECIFIED?
         BE    ZLISCHK2               NO, QUIT
         NI    HFLAGSDD,FF-NONUM-SNUM-BLOCK-DUMP-LBLOCK-LDUMP
         LH    R15,LISTFMT            FORMAT REQUESTED
         A     R15,=F'-2'             LESS 2 -- NEGATIVE?
         BM    ZLISCHK2               YES, BRANCH
         LA    R1,1                   SHIFT VALUE
         SLL   R1,0(R15)              SHIFT INTO POSITION
         OI    HFLAGSDD,*-*           <<EXECUTED>>
         EX    R1,*-4                 OR INTO FLAG BYTE
         SPACE 1
ZLISCHK2 LA    R1,LMAXLENC            MAXLEN
         BAS   R14,PACKMAX            CONVERT TO BINARY
         ST    R1,#MAXLEN             SAVE RESULT
         SPACE 1
         LA    R1,LMAXINC             MAXIN
         BAS   R14,PACKMAX            CONVERT TO BINARY
         ST    R1,#MAXIN              SAVE RESULT
         SPACE 1
         LA    R1,LMAXOUTC            MAXOUT
         BAS   R14,PACKMAX            CONVERT TO BINARY
         ST    R1,#MAXOUT             SAVE RESULT
         SPACE 1
         LA    R1,LSKIPRC             SKIPREC
         BAS   R14,PACKMAX            CONVERT TO BINARY
         ST    R1,#SKIPREC            SAVE RESULT
         SPACE 1
         LA    R1,LSKIPCC             SKIPCOL
         BAS   R14,PACKMAX            CONVERT TO BINARY
         STH   R1,#SKIPCOL            SAVE RESULT
         SPACE 1
         TM    LISTOFF+6,X'80'        OFFSET CODED?
         BNO   ZLISCHK3               NO, DONE
         L     R5,LISTOFF             OFFSET ADDRESS
         LH    R1,LISTOFF+4           LENGTH OF OFFSET
         LTR   R1,R1                  NULL STRING CODED?
         BNP   ZLISCHK3               YES, DONE
         MVI   MSGTEXT2+1,3           MAXIMUM OF 3 DIGITS
         MVC   MSGTEXT1,PDS384A       OFFSET INVALID MESSAGE
         BAS   R2,HEXC                CONVERT TO BINARY
         B     PARSATTN               ATTENTION -- IGNORE THE REST
         STCM  R0,B'0111',#LISTOFF+1  SAVE THE RESULTING OFFSET
         SPACE 1
ZLISCHK3 LH    R15,LDUMPCS+4          LENGTH OF BLOCK/DUMP STRING
         STC   R15,#MODLEN
         S     R15,=F'1'              ANY STRING?
         BM    PARSPOST               NO, BRANCH
         L     R1,LDUMPCS             ADDRESS OF BLOCK/DUMP STRING
         MVC   #MODTXT(8),BLANKS      INITIALIZE
         MVC   #MODTXT(*-*),0(R1)     <<EXECUTED>>
         EX    R15,*-6                SAVE THE STRING FOR LATER
         CLC   #MODTXT(2),=C'* '      * NOTATION?
         BNE   *+16                   NO, BRANCH
         MVC   #MODTXT(8),LASTMOD     YES, USE DEFAULT
         MVC   #MODLEN(1),LASTMOD#    YES, USE DEFAULT
         MVC   LASTMOD(8),#MODTXT     RESET LASTMOD
         MVC   LASTMOD#(1),#MODLEN    RESET LASTMOD#
         MVC   #LISTMFF(4),#LISTOFF   SAVE MODULE OFFSET
         XC    #LISTOFF(4),#LISTOFF   CLEAR LIST OFFSET
         B     PARSPOST
         SPACE 2
         USING PDLMAP,R6
         USING *,R4
ZMAP     MVC   #MAPOPT(1),PCLMAPOP+1  SAVE ANY PROCESSING OPTIONS
         TM    PCLMMOD+6,X'80'        ANY MODULE NAME FILTERING?
         BNO   PARSPOST               NO, BRANCH
         LH    R15,PCLMMOD+4          LENGTH OF MODULE NAME
         STC   R15,#MODLEN            SAVE FOR LATER
         S     R15,=F'1'              MACHINE LENGTH VALID?
         BM    PARSPOST               NO, BRANCH
         L     R1,PCLMMOD             PARTIAL MODULE NAME
         MVC   #MODTXT(8),BLANKS      INITIALIZE
         MVC   #MODTXT(*-*),0(R1)     <<EXECUTED>>
         EX    R15,*-6                SAVE THE STRING FOR LATER
         CLC   #MODTXT(2),=C'* '      * NOTATION?
         BNE   *+16                   NO, BRANCH
         MVC   #MODTXT(8),LASTMOD     YES, USE DEFAULT
         MVC   #MODLEN(1),LASTMOD#    YES, USE DEFAULT
         MVC   LASTMOD(8),#MODTXT     RESET LASTMOD
         MVC   LASTMOD#(1),#MODLEN    RESET LASTMOD#
         B     PARSPOST
         SPACE 2
         USING PDLMEMB,R6
         USING *,R4
ZMEMBERS MVC   #MEMCNTK(1),MEMBERC+1     SAVE COUNT KEYWORD
         B     PARSPOST
         SPACE 2
         USING PDLMEML,R6
         USING *,R4
ZMEMLIST CLI   MEMLRES+1,1              RESET?
         BNE   *+8                      NO, BRANCH
         OI    SPFLAG3,SPFCHN           YES, SIGNAL ISPMODE
         XC    ##ANSWER,##ANSWER        NO FILTERING YET
         MVC   #ALIAOPT(1),MLLKALIA+1   ALIAS/NOALIAS
         MVC   #SSIOPT(1),MLLKSSI+1     SSI/NOSSI/PARTSSI
         MVC   #AUTHOPT(1),MLLKAUTH+1   AUTH/NOAUTH
         MVC   #PAGEOPT(1),MLLKPAGE+1   PAGE/NOPAGE
         MVC   #VSLKED(1),MLLKVSLE+1    VSLKED/NOVSLKED
         MVC   #RMODE(1),MLRMODE+1      RMODE24/RMODEANY
         MVC   #AMODE(1),MLAMODE+1      AMODE24/AMODE31/AMODEANY/NOA...
         MVC   #USERIDO(1),MLTUSERK+1   USERID/NOUSERID/NOTUSERID
         MVC   #AALIAS(1),MLAALIAS+1    APPARENTALIAS/NOAPPARENTALIAS
         MVC   #ORPHAN(1),MLORPHAN+1    ORPHAN/NOORPHAN
         MVC   #HASALIA(1),MLHASALI+1   HASALIAS/NOHASALIAS
         MVC   #ATTRHI(3),=F'-1'        INITIALIZE THE SECOND TTR VALUE
         SPACE 1
ZML380   CLI   MLLKREUS+1,X'01'       REUSABLE ATTRIBUTE STATUS:
         BL    ZML384                   NONE, BRANCH
         BH    ZML382                   "NO" FORM, BRANCH
         OI    #ATTRYES,ATTRREUS        "REUS"
         B     ZML384
ZML382   OI    #ATTRNO,ATTRREUS         "NOREUS"
         SPACE 1
ZML384   CLI   MLLKREFR+1,X'01'       REFRESHABLE ATTRIBUTE STATUS:
         BL    ZML400                   NONE, BRANCH
         BH    ZML386                   "NO" FORM, BRANCH
         OI    #ATTRYES+1,ATTRREFR      "REFR"
         B     ZML400
ZML386   OI    #ATTRNO+1,ATTRREFR       "NOREFR"
         SPACE 1
ZML400   CLI   MLLKRENT+1,X'01'       REENTRANT ATTRIBUTE STATUS:
         BL    ZML404                   NONE, BRANCH
         BH    ZML402                   "NO" FORM, BRANCH
         OI    #ATTRYES,ATTRRENT        "RENT"
         B     ZML404
ZML402   OI    #ATTRNO,ATTRRENT         "NORENT"
         SPACE 1
ZML404   CLI   MLLKEXEC+1,X'01'       EXECUTABLE ATTRIBUTE STATUS:
         BL    ZML420                   NONE, BRANCH
         BH    ZML406                   "NO" FORM, BRANCH
         OI    #ATTRYES,ATTREXEC        "EXEC"
         B     ZML420
ZML406   OI    #ATTRNO,ATTREXEC         "NOEXEC"
         SPACE 1
ZML420   CLI   MLLKLOAD+1,X'01'       LOADABLE ATTRIBUTE STATUS:
         BL    ZML424                   NONE, BRANCH
         BH    ZML422                   "NO" FORM, BRANCH
         OI    #ATTRYES,ATTRLOAD        "LOAD"
         B     ZML424
ZML422   OI    #ATTRNO,ATTRLOAD         "NOLOAD"
         SPACE 1
ZML424   CLI   MLLKEDIT+1,X'01'       NOT EDITABLE ATTRIBUTE STATUS:
         BL    ZML440                   NONE, BRANCH
         BH    ZML426                   "NO" FORM, BRANCH
         OI    #ATTRNO+1,ATTRNE        "EDIT"  -- BIT MUST BE REVERSED
         B     ZML440
ZML426   OI    #ATTRYES+1,ATTRNE        "NOEDIT"
         SPACE 1
ZML440   CLI   MLLKLKED+1,X'01'       LINKAGE EDITOR ATTRIBUTE:
         BL    ZML444                   NEITHER, BRANCH
         BH    ZML442                   NULL FORM, BRANCH
         OI    #ATTRYES+1,ATTRFLEV      "FLEVEL"
         B     ZML444
ZML442   OI    #ATTRNO+1,ATTRFLEV       "NOFLEVEL"
         SPACE 1
ZML444   CLI   MLLKOVER+1,X'01'       OVERLAY ATTRIBUTE STATUS:
         BL    ZML460                   NONE, BRANCH
         BH    ZML446                   "NO" FORM, BRANCH
         OI    #ATTRYES,ATTROVLY        "OVERLAY"
         B     ZML460
ZML446   OI    #ATTRNO,ATTROVLY         "NOOVERLAY"
         SPACE 1
ZML460   CLI   MLLKTEST+1,X'01'       TEST ATTRIBUTE STATUS:
         BL    ZML464                   NONE, BRANCH
         BH    ZML462                   "NO" FORM, BRANCH
         OI    #ATTRYES,ATTRTEST        "TEST"
         B     ZML464
ZML462   OI    #ATTRNO,ATTRTEST         "NOTEST"
         SPACE 1
ZML464   CLI   MLLKSCTR+1,X'01'       SCATTER ATTRIBUTE STATUS:
         BL    ZML480                   NONE, BRANCH
         BH    ZML466                   "NO" FORM, BRANCH
         OI    #ATTRYES,ATTRSCTR        "SCTR"
         B     ZML480
ZML466   OI    #ATTRNO,ATTRSCTR         "NOSCTR"
         SPACE 1
ZML480   CLI   MLLKDC+1,X'01'         DOWNWARD COMPATIBLE ATTRIBUTE:
         BL    ZML484                   NONE, BRANCH
         BH    ZML482                   "NO" FORM, BRANCH
         OI    #ATTRNO+1,ATTRNODC       "DC" -- BIT IS REVERSED
         B     ZML484
ZML482   OI    #ATTRYES+1,ATTRNODC      "NODC"
         SPACE 1
ZML484   TM    MLTUSER+6,X'80'        ANY USERID NAME FILTERING?
         BNO   ZML500                 NO, BRANCH
         LH    R15,MLTUSER+4          LENGTH OF USERID NAME
         STC   R15,#USERIDL           SAVE FOR LATER
         S     R15,=F'1'              MACHINE LENGTH VALID?
         BM    ZML500                 NO, BRANCH
         L     R1,MLTUSER             PARTIAL USERID NAME
         MVC   #USERTXT(*-*),0(R1)    <<EXECUTED>>
         EX    R15,*-6                MOVE INTO STORAGE
         SPACE 1
ZML500   MVC   #ZAPOPT(1),MLTLZAPK+1   SAVE ZAP/NOZAP
         MVC   #USEROPT(1),MLTLUSRK+1  SAVE USERDATA/SYSMOD
         MVC   #TRANOPT(1),MLTLTRNK+1  SAVE TRAN/NOTRAN
         MVC   #LKEDOPT(1),MLTLKEDK+1  SAVE LKED/NOLKED
         SPACE 1
         TM    MLTLKED+6,X'80'        ANY LINKAGE EDITOR FILTERING?
         BNO   ZML502                 NO, BRANCH
         LH    R15,MLTLKED+4          LENGTH OF LKED NAME
         STC   R15,#LKEDLEN           SAVE FOR LATER
         S     R15,=F'1'              MACHINE LENGTH VALID?
         BM    ZML502                 NO, BRANCH
         L     R1,MLTLKED             PARTIAL MODULE NAME
         MVC   #LKEDTXT(*-*),0(R1)    <<EXECUTED>>
         EX    R15,*-6                MOVE INTO STORAGE
         SPACE 1
ZML502   TM    MLTLMOD+6,X'80'        ANY MODULE NAME FILTERING?
         BNO   ZML504                 NO, BRANCH
         LH    R15,MLTLMOD+4          LENGTH OF MODULE NAME
         STC   R15,#MODLEN            SAVE FOR LATER
         S     R15,=F'1'              MACHINE LENGTH VALID?
         BM    ZML504                 NO, BRANCH
         L     R1,MLTLMOD             PARTIAL MODULE NAME
         MVC   #MODTXT(8),BLANKS      INITIALIZE
         MVC   #MODTXT(*-*),0(R1)     <<EXECUTED>>
         EX    R15,*-6                SAVE THE STRING FOR LATER
         CLC   #MODTXT(2),=C'* '      * NOTATION?
         BNE   *+16                   NO, BRANCH
         MVC   #MODTXT(8),LASTMOD     YES, USE DEFAULT
         MVC   #MODLEN(1),LASTMOD#    YES, USE DEFAULT
         MVC   LASTMOD(8),#MODTXT     RESET LASTMOD
         MVC   LASTMOD#(1),#MODLEN    RESET LASTMOD#
         SPACE 1
ZML504   TM    MLTLTRN+6,X'80'        ANY TRANSLATOR NAME FILTERING?
         BNO   ZML506                 NO, BRANCH
         LH    R15,MLTLTRN+4          LENGTH OF NAME
         STC   R15,#TRANLEN           SAVE FOR LATER
         S     R15,=F'1'              MACHINE LENGTH VALID?
         BM    ZML506                 NO, BRANCH
         L     R1,MLTLTRN             PARTIAL TRANSLATOR NAME
         MVC   #TRANTXT(*-*),0(R1)    <<EXECUTED>>
         EX    R15,*-6                MOVE INTO STORAGE
         SPACE 1
ZML506   TM    MLTLZAP+6,X'80'        ANY ZAP IDRDATA NAME FILTERING?
         BNO   ZML508                 NO, BRANCH
         LH    R15,MLTLZAP+4          LENGTH OF NAME
         STC   R15,#ZAPLEN            SAVE FOR LATER
         S     R15,=F'1'              MACHINE LENGTH VALID?
         BM    ZML508                 NO, BRANCH
         L     R1,MLTLZAP             PARTIAL IDRDATA DATA
         MVC   #ZAPTXT(*-*),0(R1)     <<EXECUTED>>
         EX    R15,*-6                MOVE INTO STORAGE
         SPACE 1
ZML508   TM    MLTLUSR+6,X'80'        ANY USER IDRDATA FILTERING?
         BNO   ZML540                 NO, BRANCH
         LH    R15,MLTLUSR+4          LENGTH OF NAME
         STC   R15,#USERLEN           SAVE FOR LATER
         S     R15,=F'1'              MACHINE LENGTH VALID?
         BM    ZML540                 NO, BRANCH
         L     R1,MLTLUSR             PARTIAL IDRDATA DATA
         MVC   #USERTXT(*-*),0(R1)    <<EXECUTED>>
         EX    R15,*-6                MOVE INTO STORAGE
         SPACE 3
ZML540   TM    MLTTTR+6,X'80'       STRING CODED?
         BNO   ZML560               NO, DONE
         L     R5,MLTTTR            NEW STRING ADDRESS
         LH    R1,MLTTTR+4          LENGTH OF STRING
         LTR   R1,R1                NULL STRING CODED?
         BNP   ZML560               YES, DONE
         MVI   MSGTEXT2+1,3         MAXIMUM OF 3 DIGITS
         MVC   MSGTEXT1,PDS382A     FIRST TTR MESSAGE
         BAS   R2,HEXC              CONVERT TO BINARY
         B     PARSATTN             ATTENTION -- IGNORE THE REST
         STCM  R0,B'0111',#ATTRLO   SAVE THE RESULTING TTR
         SPACE 2
         TM    MLTTTR+8+6,X'80'     STRING CODED?
         BNO   ZML560               NO, DONE
         L     R5,MLTTTR+8          NEW STRING ADDRESS
         LH    R1,MLTTTR+8+4        LENGTH OF STRING
         LTR   R1,R1                NULL STRING CODED?
         BNP   ZML560               YES, DONE
         MVC   MSGTEXT1,PDS383A     SECOND TTR MESSAGE
         BAS   R2,HEXC              CONVERT TO BINARY
         B     PARSATTN             ATTENTION -- IGNORE THE REST
         STCM  R0,B'0111',#ATTRHI   SAVE THE RESULTING TTR
         SPACE 2
ZML560   LA    R1,MLABOSUB            ABOVE(COUNT)
         BAS   R14,PACKMAX            ANY RESULT?
         B     ZML600                 YES, BRANCH
         B     ZML620                 NO, BRANCH
ZML600   ST    R1,#IFABOVE            SAVE RESULT
         OI    #IFABOVE,X'80'         MARK AS ENTERED
         SPACE 1
ZML620   LA    R1,MLBELSUB            BELOW(COUNT)
         BAS   R14,PACKMAX            ANY RESULT?
         B     ZML640                 YES, BRANCH
         B     ZML660                 NO, BRANCH
ZML640   ST    R1,#IFBELOW            SAVE RESULT
         OI    #IFBELOW,X'80'         MARK AS ENTERED
         SPACE 1
ZML660   LA    R1,MLMODSUB              CHANGED(DATE:
         BAS   R14,PACKMAX              ANY RESULT?
         B     ZML662                   YES, BRANCH
         B     ZML670                   NO, BRANCH
ZML662   MVC   #IFMODIF(3),DOUBLE+5     SAVE RESULT
         MVC   #IFMODIF+3(3),DOUBLE+5   IF SECOND IS MISSING, USE FIRST
         SPACE 1
ZML670   LA    R1,MLMODSUB+8            CHANGED(:DATE
         BAS   R14,PACKMAX              ANY RESULT?
         B     ZML672                   YES, BRANCH
         B     ZML680                   NO, BRANCH
ZML672   MVC   #IFMODIF+3(3),DOUBLE+5   SAVE RESULT
         OI    #IFMODIF+2,X'0F'         IF FIRST IS MISSING, USE 00000F
         SPACE 1
ZML680   LA    R1,MLCRESUB              CREATED(DATE:
         BAS   R14,PACKMAX              ANY RESULT?
         B     ZML682                   YES, BRANCH
         B     ZML690                   NO, BRANCH
ZML682   MVC   #IFCREIF(3),DOUBLE+5     SAVE RESULT
         MVC   #IFCREIF+3(3),DOUBLE+5   IF SECOND IS MISSING, USE FIRST
         SPACE 1
ZML690   LA    R1,MLCRESUB+8            CREATED(:DATE
         BAS   R14,PACKMAX              ANY RESULT?
         B     ZML692                   YES, BRANCH
         B     ZML696                   NO, BRANCH
ZML692   MVC   #IFCREIF+3(3),DOUBLE+5   SAVE RESULT
         OI    #IFCREIF+2,X'0F'         IF FIRST IS MISSING, USE 00000F
         SPACE 1
ZML696   XC    FULLWORD,FULLWORD        CLEAR THE INCREMENT AMOUNT
         CLI   MLDATEKY+1,0             ANY DATE KEYWORD?
         BE    ZML900                   NO, BRANCH
         CLI   MLDATEKY+1,10            PREV0 THROUGH PREV9?
         BH    ZML700                   NO, BRANCH
         LH    R0,MLDATEKY              LOAD DATE
         BCTR  R0,0                     LESS ONE
         SLL   R0,4                     SHIFT FOR SIGN
         STC   R0,FULLWORD+3            STORE NUMERIC VALUE
         OI    FULLWORD+3,X'0F'         ADD PACKED SIGN
         B     ZML790
         SPACE 1
ZML700   MVI   FULLWORD+2,01            1X TYPE DATE
         CLI   MLDATEKY+1,11            PREV10?
         BNE   ZML702                   NO, BRANCH
         MVI   FULLWORD+3,X'0F'         PREV10
         B     ZML790
         SPACE 1
ZML702   CLI   MLDATEKY+1,12            PREV11?
         BNE   ZML704                   NO, BRANCH
         MVI   FULLWORD+3,X'1F'         PREV11
         B     ZML790
         SPACE 1
ZML704   CLI   MLDATEKY+1,13            PREV12?
         BNE   ZML706                   NO, BRANCH
         MVI   FULLWORD+3,X'2F'         PREV12
         B     ZML790
         SPACE 1
ZML706   CLI   MLDATEKY+1,14            PREV13?
         BNE   ZML708                   NO, BRANCH
         MVI   FULLWORD+3,X'3F'         PREV13
         B     ZML790
         SPACE 1
ZML708   CLI   MLDATEKY+1,15            BIWEEK?
         BNE   ZML710                   NO, BRANCH
         MVI   FULLWORD+3,X'4F'         PREV14
         B     ZML790
         SPACE 1
ZML710   CLI   MLDATEKY+1,16            MONTH
         BNE   ZML712                   NO, BRANCH
         MVI   FULLWORD+2,03            3X TYPE DATE
         MVI   FULLWORD+3,X'0F'         MONTH
         B     ZML790
         SPACE 1
ZML712   CLI   MLDATEKY+1,17            QUARTER?
         BNE   ZML714                   NO, BRANCH
         MVI   FULLWORD+2,X'09'         12X TYPE DATE         DRK FEB00
         MVI   FULLWORD+3,X'0F'         QUARTER
         B     ZML790
         SPACE 1
ZML714   CLI   MLDATEKY+1,18            HALFYEAR
         BNE   ZML716                   NO, BRANCH
         MVI   FULLWORD+2,X'18'         18X TYPE DATE
         MVI   FULLWORD+3,X'3F'         HALFYEAR
         B     ZML790
         SPACE 1
ZML716   CLI   MLDATEKY+1,19            YEAR?
         BNE   ZML718                   NO, BRANCH
         MVC   FULLWORD+1(3),=PL3'1000' ONE YEAR
         B     ZML790
         SPACE 1
ZML718   CLI   MLDATEKY+1,20            BIYEAR?
         BNE   ZML720                   NO, BRANCH
         MVC   FULLWORD+1(3),=PL3'2000' TWO YEARS
         B     ZML790
         SPACE 1
ZML720   CLI   MLDATEKY+1,21            LAST(NNN)?
         BNE   ZML740                   NO, BRANCH
         LA    R1,MLLASTSU              NNN
         BAS   R14,PACKMAX              ANY RESULT?
         B     ZML730                   YES, BRANCH
         B     ZML740                   NO, BRANCH
ZML730   SR    R0,R0
         D     R0,=F'365'               DAYS IN ONE YEAR
         MH    R1,=H'1000'              NUMBER OF YEARS
         AR    R1,R0                    IN YYDDD FORMAT
         CVD   R1,DOUBLE                IN DECIMAL
         MVC   FULLWORD(4),DOUBLE+4     PLACE IN FULLWORD
         B     ZML790
         SPACE 1
ZML740   CLI   MLDATEKY+1,22            DATE(YYDDD)
         BNE   ZML789                   NO, BRANCH
         LA    R1,MLDATESU              YYDDD
         BAS   R14,PACKMAX              ANY RESULT?
         B     ZML750                   YES, BRANCH
         B     ZML789                   NO, BRANCH
ZML750   MVC   DOUBLE+1(3),DOUBLE+5     SAVE RESULT
         B     ZML792
         SPACE 1
ZML789   DS    0H
         B     ZML900                   NONE OF THE ABOVE, BRANCH
         SPACE 1
ZML790   TIME  DEC                      CURRENT TIME AND DATE
         ST    R1,DOUBLE                CURRENT DATE
         OI    FULLWORD+3,X'0F'         INSURE STANDARD SIGN
         CLC   FULLWORD+2(2),DOUBLE+2   ROTATE A YEAR?
         BL    ZML791                   NO, BRANCH
         SP    DOUBLE(4),=PL3'1000'     LESS ONE YEAR
         AP    DOUBLE(4),=PL2'365'      ADD THE DAYS
ZML791   SP    DOUBLE(4),FULLWORD(4)    LESS INCREMENT
         OI    DOUBLE+3,X'0F'           INSURE STANDARD SIGN
ZML792   CLI   MLFROMKY+1,1             FROM/SINCE?
         BH    ZML795                   NO, TO/BEFORE
         TIME  DEC                      CURRENT TIME AND DATE
         TM    FLAGSCC,RECFMU           LOAD MODULE?
         BO    ZML794                   YES, BRANCH
         MVC   #IFMODIF(3),DOUBLE+1     FIRST DATE
         STCM  R1,B'0111',#IFMODIF+3    SECOND DATE
         B     ZML799
ZML794   MVC   #IFCREIF(3),DOUBLE+1     FIRST DATE
         STCM  R1,B'0111',#IFCREIF+3    SECOND DATE
         B     ZML799
ZML795   DS    0H
         SP    DOUBLE(4),=PL1'1'        LESS ANOTHER DAY
         OI    DOUBLE+3,X'0F'           INSURE STANDARD SIGN
         TM    FLAGSCC,RECFMU           LOAD MODULE?
         BO    ZML797                   YES, BRANCH
         MVC   #IFMODIF(3),=X'00000F'   FIRST DATE
         MVC   #IFMODIF+3(3),DOUBLE+1   SECOND DATE
         B     ZML799
ZML797   MVC   #IFCREIF(3),=X'00000F'   FIRST DATE
         MVC   #IFCREIF+3(3),DOUBLE+1   SECOND DATE
ZML799   DS    0H
         SPACE 1
ZML900   TM    MLTSSI+6,X'80'       STRING CODED?
         BNO   ZML980               NO, DONE
         L     R5,MLTSSI            NEW STRING ADDRESS
         LH    R1,MLTSSI+4          LENGTH OF STRING
         LTR   R1,R1                NULL STRING CODED?
         BNP   ZML980               YES, DONE
         MVI   MSGTEXT2+1,4         MAXIMUM OF 4 DIGITS
         MVC   MSGTEXT1,PDS385A     SSI MESSAGE
         BAS   R2,HEXC              CONVERT TO BINARY
         B     PARSATTN             ATTENTION -- IGNORE THE REST
         OI    #SSIOPT,X'04'        A SSI VALUE HAS BEEN REQUESTED
         LA    R15,8
         SR    R1,R1
         IC    R1,MSGTEXT2+2        GET ORIGINAL TEXT LENGTH
         SR    R15,R1               8-LENGTH
         STC   R15,SHIFTSSI         SAVE NUMBER OF DIGITS
         SLL   R15,2                (8-LENGTH)*4
         SLL   R0,0(R15)            SHIFT LEFT BY 0, 4, 8, ... OR 28
         STCM  R0,B'1111',#SSITEXT  SAVE THE RESULTING PARTIAL SSI
         SR    R0,R0
         BCTR  R0,0                 FFFFFFFF
         SLL   R0,0(R15)            SHIFT LEFT BY 0, 4, 8, ... OR 28
         STCM  R0,B'1111',SSIMASK   SAVE THE RESULTING SSI MASK
         SPACE 2
ZML980   TM    FLAGSCC,RECFMU         LOAD MODULE?
         BNO   ZML990                 NO, BRANCH
         OC    #IFCREIF(6),#IFCREIF   ANY CREATION DATE CHECK?
         BZ    ZML984                 NO, BRANCH
         OI    #OPTOPT,X'02'          YES, SET A FLAG FOR LATER
         MVC   FULLWORD(3),#IFCREIF   FIRST FIELD
         LA    R1,FULLWORD
         LA    R15,#IFCREIF
         BAS   R14,CONVDATE           CONVERT YYDDDF TO MMDDYY
         ICM   R1,B'0100',#IFCREIF+2  GET YY
         ICM   R1,B'0011',#IFCREIF    GET MMDD
         STCM  R1,B'0111',#IFCREIF    SAVE AS YYMMDD
         MVC   FULLWORD(3),#IFCREIF+3 GET SECOND FIELD
         LA    R1,FULLWORD
         LA    R15,#IFCREIF+3
         BAS   R14,CONVDATE           CONVERT YYDDDF TO MMDDYY
         ICM   R1,B'0100',#IFCREIF+5  GET YY
         ICM   R1,B'0011',#IFCREIF+3  GET MMDD
         STCM  R1,B'0111',#IFCREIF+3  SAVE AS YYMMDD
         SPACE 1
ZML984   OC    #IFMODIF(6),#IFMODIF   ANY MODIFICATION DATE CHECK?
         BZ    ZML990                 NO, BRANCH
         OI    #OPTOPT,X'02'          YES, SET A FLAG FOR LATER
         MVC   FULLWORD(3),#IFMODIF   FIRST FIELD
         LA    R1,FULLWORD
         LA    R15,#IFMODIF
         BAS   R14,CONVDATE           CONVERT YYDDDF TO MMDDYY
         ICM   R1,B'0100',#IFMODIF+2  GET YY
         ICM   R1,B'0011',#IFMODIF    GET MMDD
         STCM  R1,B'0111',#IFMODIF    SAVE AS YYMMDD
         MVC   FULLWORD(3),#IFMODIF+3 SECOND FIELD
         LA    R1,FULLWORD
         LA    R15,#IFMODIF+3
         BAS   R14,CONVDATE           CONVERT YYDDDF TO MMDDYY
         ICM   R1,B'0100',#IFMODIF+5  GET YY
         ICM   R1,B'0011',#IFMODIF+3  GET MMDD
         STCM  R1,B'0111',#IFMODIF+3  SAVE AS YYMMDD
         SPACE 1
ZML990   L     R6,ADDRANSR            RESET THE PDL BASE ADDRESS
         OC    #ATTRYES(13),#ATTRYES  ANY LINKAGE EDITOR ATTRIBUTES?
         BZ    *+8                    NO, BRANCH
         OI    #OPTOPT,X'01'          YES, SET A FLAG FOR LATER
         OC    #ZAPOPT(6),#ZAPOPT     ZAP/USER/TRAN/LKED/MODULE/RLDERR?
         BZ    *+8                    NO, BRANCH
         OI    #OPTOPT,X'02'+X'01'    YES, SET A FLAG FOR LATER
         OC    #IOERROR(4),#IOERROR   IOERROR/BLOCKERR/LRECLERR/NULL?
         BZ    *+8                    NO, BRANCH
         OI    #OPTOPT,X'04'          YES, SET A FLAG FOR LATER
         SPACE 1
         OC    #ZAPOPT(#ATTRLO+3-#ZAPOPT),#ZAPOPT   ANY FILTERING?
         BNZ   ZML996                               YES, BRANCH
         OC    #ZAPLEN(#USERTXT+8-#ZAPLEN),#ZAPLEN  ANY FILTERING?
         BNZ   ZML996                               YES, BRANCH
         CLC   #ATTRHI(3),=XL3'FFFFFF'              ANY FILTERING?
         BE    ZML999                               NO, BRANCH
         SPACE 1
ZML996   L     R1,=A($IFX)            START OF IF SUBCOMMAND
***TEST  MVC   ##SUBCOM(8),0(R1)      CHANGE TO IF SUBCOMMAND
         MVC   ##ADRCMD+1(3),9(R1)    CHANGE START ADDRESS
         L     R1,ZMLTMML             THEN ACTION POINTER
         ST    R1,#ACTIONT            NOTE FOR LATER
         OC    FLAGSII(1),#ACTIONT    SET POSSIBLE FSINGLE
***TEST  OC    SPFLAG3(1),#ACTIONT    SET POSSIBLE INVALID
         SPACE 2
ZML999   DS    0H
         OI    #OPTOPT,X'80'          PARSE WAS CALLED FOR MEMLIST
         CLI   MEMLLKD+1,1            LKEDDATE?
         BNE   *+8                    NO, BRANCH
         OI    FLAGSHH,FLKEDYES       YES, SET A FLAG
         CLI   MEMLLKD+1,2            NOLKEDDATE?
         BNE   *+8                    NO, BRANCH
         OI    FLAGSHH,FLKEDNO        YES, SET A FLAG
         B     PARSPOST
         SPACE 1
ZMLTMML  DC    0F'0',AL1(FMEMLIST),AL3($MML)     MEMLIST
         SPACE 2
         USING PDLOUT,R6
         USING *,R4
ZOUTCOPY MVC   #OUTOPTN(1),OUTOPTN+1     SAVE TEXT/NOTEXT
         CLI   OUTCLOS+1,1               CLOSE REQUESTED?
         BNE   *+8                       NO, BRANCH
         MVI   #OUT,1                    YES, FLAG FOR LATER
         CLI   OUTECHO+1,1               ECHO/NOECHO?
         BL    ZOUT010                   NO, BRANCH
         OI    FLAGSFF,FNOECHO           ASSUME NO ECHO IS DESIRED
         CLI   OUTECHO+1,2               CORRECT?
         BE    ZOUT010                   YES, BRANCH
         NI    FLAGSFF,FF-FNOECHO        NO, ECHO IS DESIRED
         SPACE 1
ZOUT010  CLI   #OUTOPTN,1                TEXT('STRING')?
         BNE   ZOUT020                   NO, BRANCH
         MVC   MSGLINE(40),BLANK128      CLEAR INITIALLY
         LH    R2,OUTTEXT+4              LENGTH OF STRING
         LTR   R2,R2                     NULL STRING CODED?
         BZ    ZOUT020                   YES, DONE
         CH    R2,=H'40'                 LENGTH(STRING)>=40?
         BL    *+8                       NO, BRANCH
         LH    R2,=H'40'                 YES, USE 40 INSTEAD
         L     R1,OUTTEXT                NEW STRING ADDRESS
         S     R2,=F'1'                  GOOD STRING TO MOVE?
         BM    ZOUT020                   NO, SKIP THE MOVE
         MVC   MSGLINE(*-*),0(R1)        <<EXECUTED>>
         EX    R2,*-6                    MOVE IN THE TEXT
         SPACE 1
ZOUT020  CLI   OUTASS+1,1                ALIAS/NOALIAS?
         BL    ZOUT030                   NO, BRANCH
         OI    FLAGSEE,FOUTASS           ASSUME ALIAS IS DESIRED
         CLI   OUTASS+1,1                CORRECT?
         BE    ZOUT030                   YES, BRANCH
         NI    FLAGSEE,FF-FOUTASS        NO, NOALIAS IS DESIRED
         SPACE 1
ZOUT030  CLI   OUTIEB+1,1                IEBUPDAT/NOIEBUPDAT
         BL    PARSPOST                  NO, BRANCH
         OI    FLAGSFF,FIEBUPDT          ASSUME IEBUPDAT IS DESIRED
         CLI   OUTIEB+1,1                CORRECT?
         BE    PARSPOST                  YES, BRANCH
         NI    FLAGSFF,FF-FIEBUPDT       NO, NOIEBUPDAT IS DESIRED
         B     PARSPOST
         SPACE 2
         USING PDLPRINT,R6
         USING *,R4
ZPRINTOF TM    PCLPRSTR+6,X'80'     STRING CODED?
         BNO   PARSPOST             NO, DONE
         LH    R2,PCLPRSTR+4        LENGTH OF STRING
         LTR   R2,R2                NULL STRING CODED?
         BZ    PARSPOST             YES, DONE
         CH    R2,=H'120'           LENGTH(STRING)>=120?
         BL    *+8                  NO, BRANCH
         LH    R2,=H'120'           YES, USE 120 AS A MAXIMUM LENGTH
         STH   R2,#COMMDSZ          SAVE ACTUAL LENGTH
         MVC   MSGLINE(120),BLANK128  CLEAR INITIALLY
         L     R1,PCLPRSTR          NEW STRING ADDRESS
         BCTR  R2,0                 MACHINE LENGTH
         MVC   MSGLINE(*-*),0(R1)   <<EXECUTED>>
         EX    R2,*-6               MOVE IN ANY OTHER OPERANDS
         B     PARSPOST
         SPACE 2
         USING PDLRENAM,R6
         USING *,R4
ZRENAME  MVC   #RENSWAP(1),PCLRENSW+1    SAVE SWAP/NOSWAP
         MVC   #RENRANG(1),PCLRENGP+1    SAVE GROUP/NOGROUP
         CLI   #RENRANG,1                GROUP OPTION?
         BNE   ZRENAM10                  NO, BRANCH
         NI    ##ADRPC#,FF-@B            YES, NO BLDL REQUIRED
         SPACE 1
ZRENAM10 TM    PCLREPBY+6,X'80'          ANY RENAME REPBY OPERAND?
         BNO   PARSPOST                  NO, BRANCH
         LH    R15,PCLREPBY+4            LENGTH OF NAME
         S     R15,=F'1'                 MACHINE LENGTH VALID?
         BM    PARSPOST                  NO, BRANCH
         MVC   #RENREP,BLANKS            INITIALIZE THE MEMBER NAME
         L     R1,PCLREPBY               REPBY NAME
         MVC   #RENREP(*-*),0(R1)        <<EXECUTED>>
         EX    R15,*-6                   MOVE INTO STORAGE
         B     PARSPOST
         SPACE 2
         USING PDLREPL,R6
         USING *,R4
ZREPLACE TM    REPLSTR1+6,X'80'     STRING CODED?
         BNO   PARSPOST             NO, ASSUME OK
         MVC   #REPFLAG(1),REPLREP+1  SAVE WRITE/NOWRITE OPTION
         CLI   REPLSTAT+1,2         NOSTATS?
         BNE   *+8                  NO, BRANCH
         OI    #REPFLAG,X'10'       YES, SET A FLAG
         CLI   REPLINC+1,2          INC1?
         BL    ZREPLINC             YES, BRANCH
         MVI   #REPINCR+1,1         ASSUME INC2
         CLI   REPLINC+1,2          INC2?
         BE    ZREPLINC             YES, BRANCH
         MVI   #REPINCR+1,3         ASSUME INC4
         CLI   REPLINC+1,3          INC4?
         BE    ZREPLINC             YES, BRANCH
         MVI   #REPINCR+1,7         ASSUME INC8
         CLI   REPLINC+1,4          INC8?
         BE    ZREPLINC             YES, BRANCH
         MVI   #REPINCR+1,15        ASSUME INC16
         CLI   REPLINC+1,5          INC16?
         BE    ZREPLINC             YES, BRANCH
         MVI   #REPINCR+1,79        ASSUME INC80
ZREPLINC DS    0H
         L     R5,REPLSTR1          NEW STRING ADDRESS
         LH    R2,REPLSTR1+4        LENGTH OF STRING
         LA    R1,FINDLTH           FIRST STRING ADDRESS
         ST    R1,#LFSAVE4          SAVE FOR LATER
         LA    R1,PDS380A           GENERAL PROMPT MESSAGE
         ST    R1,#LFSAVE4+4        SAVE FOR LATER
ZREPTEST LTR   R2,R2                NULL STRING CODED?
         BNP   ZREPCHK              YES, CHECK FORMAT
         BCTR  R5,0                 BACK UP ONE
         OI    0(R5),X'40'          UPPER CASE THE DELIMITER
         CLI   0(R5),C'X'           POSSIBLE HEX STRING?
         BNE   ZREPCHAR             NO, BRANCH
         MVC   MSGTEXT1(3),L841     BAD HEX STRING MESSAGE
         LA    R3,1(,R2)            STRING LENGTH +1
         N     R3,=F'-2'            NEXT EVEN NUMBER
         SR    R15,R15              ZERO
         LA    R1,MSGTEXT2+4        WHERE OUTPUT GOES
         LA    R0,2                 PAIRWISE COUNTER
         CR    R2,R3                EVEN LENGTH ORIGINALLY?
         SRL   R3,1                 (STRING LENGTH +1)/2
         ST    R3,MSGTEXT2          (STRING LENGTH +1)/2
         BNE   ZREPHEX2             NO, BRANCH
         SPACE 1
ZREPHEX1 LA    R5,1(,R5)            NEXT CHARACTER
         OI    0(R5),X'40'          UPPER CASE THE HEX CHARACTER
         IC    R15,0(,R5)           GET A BYTE TO CONVERT
         CLI   0(R5),C'0'
         BL    *+12                 0-9?
         CLI   0(R5),C'9'
         BNH   ZREPHEX2             YES, BRANCH
         LA    R15,9(,R15)          NO, ADJUST LOW DIGIT 1-5 TO A-F
         CLI   0(R5),C'A'           BELOW AN A?
         BL    ZREPNEWS             YES, INVALID
         CLI   0(R5),C'F'           ABOVE AN F?
         BH    ZREPNEWS             YES, INVALID
         SPACE 1
ZREPHEX2 SLL   R15,28               SHIFT
         SLDL  R14,4                GET A GOOD DIGIT
         BCT   R0,ZREPHEX1          DO THE NEXT DIGIT OF A PAIR
         LA    R0,2                 PAIRWISE COUNTER
         STC   R14,0(,R1)           SAVE AN OUTPUT CHARACTER
         LA    R1,1(,R1)            ANOTHER OUTPUT CHARACTER
         BCT   R3,ZREPHEX1          DO ALL DIGITS
         SPACE 1
         LA    R5,MSGTEXT2+4-1      START OF CONVERTED STRING -1
         L     R2,MSGTEXT2          LENGTH OF CONVERTED STRING
         CH    R2,=H'32'            VALID LENGTH?
         BH    ZREPNEWS             NO, BRANCH
         L     R3,#LFSAVE4          STRING POINTER
         STH   R2,0(,R3)            SAVE ACTUAL LENGTH
         BCTR  R2,0                 MACHINE LENGTH
         MVC   2(*-*,R3),1(R5)      <<EXECUTED>>
         EX    R2,*-6               SAVE THE NEW STRING
         B     ZREPCHK
         SPACE 2
ZREPCHAR MVC   MSGTEXT1(3),L842     INVALID LENGTH MESSAGE
         CH    R2,=H'32'            VALID LENGTH?
         BH    ZREPNEWS             NO, BRANCH
         L     R3,#LFSAVE4          STRING POINTER
         STH   R2,0(,R3)            SAVE ACTUAL LENGTH
         BCTR  R2,0                 MACHINE LENGTH
         MVC   2(*-*,R3),1(R5)      <<EXECUTED>>
         EX    R2,*-6               SAVE THE NEW STRING
         CLI   REPLASIS+1,1         ASIS REQUESTED?
         BE    ZREPCHK              YES, BRANCH
         OC    2(32,R3),BLANK128    NO, UPPER CASE THE DATA
         B     ZREPCHK
         SPACE 2
ZREPNEWS M$MSG MSGTEXT1             INVALID LENGTH STRING -- REENTER
ZREPNEW0 LA    R2,NEWCMD            EXIT ADDRESS FOR ATTENTION
         L     R1,#LFSAVE4+4        GENERAL PROMPT MESSAGE
        M$PUTGT (1),ATTN=PARSATTN   SECOND PART OF MESSAGE
         L     R5,ADDRCBUF          ENTERED DATA
         LH    R2,0(,R5)            LENGTH OF STRING
         SH    R2,=H'5'             VALID MACHINE LENGTH?
         LA    R1,4(R5,R2)          LAST BYTE OF INPUT STRING
         BZ    ZREPNEW3             MAYBE, CHECK FURTHER
         BNP   ZREPNEW0             NO, NULL STRING -- PROMPT AGAIN
         SPACE 1
ZREPNEW1 CLI   0(R1),X'40'          SCAN
         BNE   ZREPNEW2                 BACKWARDS
         BCTR  R1,0                              FOR A
         BCT   R2,ZREPNEW1                             NON-BLANK
         B     ZREPNEW3             POSSIBLE STRING -- CHECK
         SPACE 1
ZREPNEW2 CLI   4(R5),X'40'          SCAN
         BNE   ZREPNEW3                 FORWARDS
         LA    R5,1(,R5)                        FOR A
         BCT   R2,ZREPNEW2                            NON-BLANK
         SPACE 1
ZREPNEW3 CLI   4(R5),X'40'          REAL STRING?
         BE    ZREPNEW0             NO, PROMPT AGAIN
         CLI   REPLASIS+1,1         ASIS REQUESTED?
         BE    ZREPNEW4             YES, BRANCH
         OC    4(*-*,R5),BLANK128   <<EXECUTED>>
         EX    R2,*-6               UPPER-CASE DATA AND DELIMITERS
         SPACE 1
ZREPNEW4 OI    4(R5),X'40'          UPPER-CASE THE FIRST DELIMITER
         MVC   0(1,R5),0(R1)        ENDING CHARACTER
         OI    0(R5),X'40'          UPPER-CASE THE LAST DELIMITER
         CLC   0(1,R5),4(R5)        SAME DELIMITERS?
         BNE   *+6                  NO, BRANCH
         BCTR  R2,0                 YES, ALLOW FOR LAST DELIMITER
         LA    R5,5(,R5)            FIRST CHARACTER OF STRING
         B     ZREPTEST             PARSE THIS NEW STRING
         SPACE 2
ZREPCHK  TM    #LFSAVE4,X'80'         SECOND PASS?
         BO    ZREPCHK1               YES, BRANCH
         TM    REPLSTR2+6,X'80'       STRING CODED?
         BNO   PARSPOST               NO, ASSUME OK
         L     R5,REPLSTR2            NEW STRING ADDRESS
         LH    R2,REPLSTR2+4          LENGTH OF STRING
         LA    R1,REPLTH              SECOND STRING ADDRESS
         MVI   REPLTH+1,0             CLEAR REPLTH HISTORY
         ST    R1,#LFSAVE4            SAVE FOR LATER
         LA    R1,PDS386A             GENERAL PROMPT MESSAGE
         ST    R1,#LFSAVE4+4          SAVE FOR LATER
         OI    #LFSAVE4,X'80'         MARK AS SECOND PASS
         B     ZREPTEST
         SPACE 1
ZREPCHK1 CLI   REPLFMT+1,0            WAS A FORMAT SPECIFIED?
         BE    ZREPCHK2               NO, BRANCH
         NI    HFLAGSDD,FF-NONUM-SNUM-BLOCK-DUMP-LBLOCK-LDUMP
         LH    R15,REPLFMT            FORMAT REQUESTED
         A     R15,=F'-2'             LESS 2 -- NEGATIVE?
         BM    ZREPCHK2               YES, BRANCH
         LA    R1,1                   SHIFT VALUE
         SLL   R1,0(R15)              SHIFT INTO POSITION
         OI    HFLAGSDD,*-*           <<EXECUTED>>
         EX    R1,*-4                 MOVE INTO FLAG BYTE
         SPACE 1
ZREPCHK2 LA    R1,RMAXLENC            MAXLEN
         BAS   R14,PACKMAX            CONVERT TO BINARY
         ST    R1,#MAXLEN             SAVE RESULT
         SPACE 1
         LA    R1,RMAXINC             MAXIN
         BAS   R14,PACKMAX            CONVERT TO BINARY
         ST    R1,#MAXIN              SAVE RESULT
         SPACE 1
         LA    R1,RMAXOUTC            MAXOUT
         BAS   R14,PACKMAX            CONVERT TO BINARY
         ST    R1,#MAXOUT             SAVE RESULT
         SPACE 1
         LA    R1,RMAXFIND            MAXFIND
         BAS   R14,PACKMAX            CONVERT TO BINARY
         ST    R1,#MAXFIND            SAVE RESULT
         SPACE 1
         LA    R1,RSKIPRC             SKIPREC
         BAS   R14,PACKMAX            CONVERT TO BINARY
         ST    R1,#SKIPREC            SAVE RESULT
         SPACE 1
         LA    R1,RSKIPCC             SKIPCOL
         BAS   R14,PACKMAX            CONVERT TO BINARY
         STH   R1,#SKIPCOL            SAVE RESULT
         SPACE 1
         TM    REPLOFF+6,X'80'        OFFSET CODED?
         BNO   ZREPCHK4               NO, DONE
         L     R5,REPLOFF             OFFSET ADDRESS
         LH    R1,REPLOFF+4           LENGTH OF OFFSET
         LTR   R1,R1                  NULL STRING CODED?
         BNP   ZREPCHK4               YES, DONE
         MVI   MSGTEXT2+1,3           MAXIMUM OF 3 DIGITS
         MVC   MSGTEXT1,PDS384A       OFFSET INVALID MESSAGE
         BAS   R2,HEXC                CONVERT TO BINARY
         B     PARSATTN               ATTENTION -- IGNORE THE REST
         STCM  R0,B'0111',#LISTOFF+1  SAVE THE RESULTING OFFSET
         SPACE 1
ZREPCHK4 LH    R15,RDUMPCS+4          LENGTH OF BLOCK/DUMP STRING
         STC   R15,#MODLEN
         S     R15,=F'1'              ANY STRING?
         BM    PARSPOST               NO, BRANCH
         L     R1,RDUMPCS             ADDRESS OF BLOCK/DUMP STRING
         MVC   #MODTXT(8),BLANKS      INITIALIZE
         MVC   #MODTXT(*-*),0(R1)     <<EXECUTED>>
         EX    R15,*-6                SAVE THE STRING FOR LATER
         CLC   #MODTXT(2),=C'* '      * NOTATION?
         BNE   *+16                   NO, BRANCH
         MVC   #MODTXT(8),LASTMOD     YES, USE DEFAULT
         MVC   #MODLEN(1),LASTMOD#    YES, USE DEFAULT
         MVC   LASTMOD(8),#MODTXT     RESET LASTMOD
         MVC   LASTMOD#(1),#MODLEN    RESET LASTMOD#
         MVC   #LISTMFF(4),#LISTOFF   SAVE MODULE OFFSET
         XC    #LISTOFF(4),#LISTOFF   CLEAR LIST OFFSET
         B     PARSPOST
         SPACE 2
         USING PDLREPRO,R6
         USING *,R4
ZREPRO   MVC   #COPREP(1),RPRREPL+1   SAVE REPLACE/NOREPLACE
         MVC   #COPALI(1),RPRALIAS+1  SAVE ALIAS/NOALIAS
         MVC   #REPADD(1),RPRADDZ+1   SAVE ADDZAP/NOADDZAP
         SPACE 1
         LA    R1,RPRMAX              MAXBLK(COUNT)
         BAS   R14,PACKMAX            ANY RESULT?
         ST    R1,#REPRBLK            SAVE RESULT
         SPACE 1
         TM    RPRTO+6,X'80'        ANY NAME REQUESTED?
         BNO   ZREPR30              NO, BRANCH
         LH    R15,RPRTO+4          LENGTH OF NAME
         STC   R15,#COPTO#          SAVE STRING LENGTH
         S     R15,=F'1'            VALID?
         BM    ZREPR30              NO, BRANCH
         MVC   #COPTON(8),BLANKS    INITIALIZE TO BLANKS
         L     R1,RPRTO             ADDRESS OF NAME
         MVC   #COPTON(*-*),0(R1)   <<EXECUTED>>
         EX    R15,*-6              MOVE IN THE NAME
         SPACE 1
ZREPR30  B     PARSPOST
         SPACE 2
         USING PDLRESTO,R6
         USING *,R4
ZRESTORE OI    #RESFLAG,#RESFDIS+#RESFPRO  DEFAULT OPERANDS
         TM    FLAGSGG,FPROMCON            PROMPTING OFF?
         BNO   *+8                         NO, BRANCH
         OI    #RESFLAG,#RESFPRO*4         YES, SET A FLAG
         CLI   PCLRSREP+1,X'01'            REPEAT?
         BNE   *+8                         NO, BRANCH
         OI    #RESFLAG,#RESFREP           YES, SET REPEAT FLAG
         SPACE 1
         CLI   PCLRSDIS+1,X'02'            NODISPLAY?
         BNE   *+8                         NO, BRANCH
         NI    #RESFLAG,FF-#RESFDIS        YES, TURN IT OFF
         CLI   PCLRSPRO+1,X'02'            NOPROMPT?
         BNE   *+8                         NO, BRANCH
         XI    #RESFLAG,#RESFPRO*2+#RESFPRO  YES, SET FLAGS
         SPACE 1
         LH    R2,PCLRFIND+4             LENGTH OF STRING
         LTR   R2,R2                     NULL STRING CODED?
         BZ    ZREST010                  YES, DONE
         CH    R2,=H'32'                 LENGTH(STRING)>=40?
         BL    *+8                       NO, BRANCH
         LH    R2,=H'32'                 YES, USE 40 INSTEAD
         STH   R2,#RESTSTR               SAVE STRING LENGTH
         L     R1,PCLRFIND               NEW STRING ADDRESS
         S     R2,=F'1'                  GOOD STRING TO MOVE?
         BM    ZREST010                  NO, SKIP THE MOVE
         MVC   #RESTSTR+2(*-*),0(R1)     <<EXECUTED>>
         EX    R2,*-6                    MOVE IN THE TEXT
         SPACE 1
ZREST010 TM    PCLRMOD+6,X'80'             ANY RESTORE MODULE OPERAND?
         BNO   ZREST020                    NO, BRANCH
         LH    R15,PCLRMOD+4               LENGTH OF NAME
         STC   R15,#RESTNA#                SAVE ACTUAL LENGTH
         S     R15,=F'1'                   MACHINE LENGTH VALID?
         BM    ZREST020                    NO, BRANCH
         MVC   #RESTNAM,BLANKS             INITIALIZE THE MEMBER NAME
         L     R1,PCLRMOD                  START OF NAME
         MVC   #RESTNAM(8),BLANKS     INITIALIZE
         MVC   #RESTNAM(*-*),0(R1)    <<EXECUTED>>
         EX    R15,*-6                SAVE THE STRING FOR LATER
         CLC   #RESTNAM(2),=C'* '     * NOTATION?
         BNE   *+16                   NO, BRANCH
         MVC   #RESTNAM(8),LASTMOD    YES, USE DEFAULT
         MVC   #RESTNA#(1),LASTMOD#   YES, USE DEFAULT
         MVC   LASTMOD(8),#RESTNAM    RESET LASTMOD
         MVC   LASTMOD#(1),#RESTNA#   RESET LASTMOD#
         SPACE 1
ZREST020 TM    PCLREST+6,X'80'             ANY RESTORE LIKE OPERAND?
         BNO   ZREST030                    NO, BRANCH
         LH    R15,PCLREST+4               LENGTH OF NAME
         S     R15,=F'1'                   MACHINE LENGTH VALID?
         BM    ZREST030                    NO, BRANCH
         MVC   #RESTLIK,BLANKS             INITIALIZE THE MEMBER NAME
         L     R1,PCLREST                  START OF NAME
         MVC   #RESTLIK(*-*),0(R1)         <<EXECUTED>>
         EX    R15,*-6                     MOVE INTO STORAGE
         SPACE 1
ZREST030 MVI   #RESTNUM+3,5           DEFAULT LINE COUNT
         LA    R1,PCLRNUM             COUNT(NUMBER)
         BAS   R14,PACKMAX            CONVERT TO BINARY
         ST    R1,#RESTNUM            SAVE RESULT
         B     PARSPOST
         SPACE 2
         USING PDLSUBL,R6
         USING *,R4
ZSUBLIST MVC   #ALIAOPT(1),PCLSUBAL+1  SAVE ALIAS/NOALIAS
         B     PARSPOST
         SPACE 2
         USING PDLTSOED,R6
         USING *,R4
ZTSOEDIT MVC   #EDITOLD(1),PCLEDOP+1   SAVE SPECIFIED OLD/NEW OPTION
         CLI   PCLEDOP+1,X'02'         "OLD"?
         BNE   ZTSOEDI2                NO, BRANCH
         OI    ##ADRPC#,@B             YES, MUST EXIST
ZTSOEDI2 MVC   #EDITNON(1),PCLNON+1    NONUM OPTION
         MVC   #EDITASI(1),PCLASIS+1   ASIS OPTION
         MVC   #EDITTYP+2(2),PCLTYPE   EDIT TYPE FIELD
         B     PARSPOST
         SPACE 2
         USING PDLVERIF,R6
         USING *,R4
ZVERIFY  MVC   #VERLOAD(1),VERLOAD+1    SAVE LOAD/NOLOAD OPTION
         MVC   #VERSTND(1),VERNAME+1    SAVE NAME/NONAME OPTION
         MVC   #VERREAD(1),VERINPUT+1   SAVE INPUT/NOINPUT OPTION
         MVC   #VERUPDT(1),VERUPDT+1    SAVE UPDATE/NOUPDATE OPTION
         MVC   #VERSTAT(1),VERSTATS+1   SAVE STATS/NOSTATS OPTION
         MVC   #VERNLKD(1),VERNLKD+1    SAVE LKED/NOLKED OPTION
         MVC   #VERSIZE(1),VERSIZE+1    SAVE SUMMARY/NOSUMMARY
         LA    R1,VERMAXBL              MAXBLK(COUNT)
         BAS   R14,PACKMAX              ANY RESULT?
         B     ZVER10                   YES, BRANCH
         B     PARSPOST                 NO, BRANCH
ZVER10   STH   R1,#MAXBLKV              SAVE RESULT
         SPACE 1
         B     PARSPOST
         SPACE 2
         USING MAINPDL,R6
         USING *,R4
ZMAINPDL TM    VOLSETID+6,X'80'     ANY NAME REQUESTED?
         BNO   MAINPDL0             NO, BRANCH
         LH    R15,VOLSETID+4       LENGTH OF NAME
         S     R15,=F'1'            VALID?
         BM    MAINPDL0             NO, BRANCH
         MVC   VOLSET,BLANKS        INITIALIZE VOLUME NAME
         L     R1,VOLSETID          ADDRESS OF NAME
         MVC   VOLSET(*-*),0(R1)    <<EXECUTED>>
         EX    R15,*-6              MOVE IN THE NAME
         SPACE 1
MAINPDL0 TM    FLAGSHH,FOPTIONS     ASTERISK FORM?
         BO    MAINPDL1             NO, BRANCH
         TM    VOLNAME+6,X'80'      ANY VOLSER REQUESTED?
         BO    MAINPDL1             YES, BRANCH
         TM    VOLSETID+6,X'80'     ANY VOLSET REQUESTED?
         BNO   MAINPDL2             NO, BRANCH
         SPACE 1
MAINPDL1 MVC   VOLUME,VOLSET        INITIALIZE VOLUME NAME
         TM    VOLNAME+6,X'80'      ANY NAME REQUESTED?
         BNO   MAINPDL2             NO, BRANCH
         LH    R15,VOLNAME+4        LENGTH OF NAME
         S     R15,=F'1'            VALID?
         BM    MAINPDL2             NO, BRANCH
         MVC   VOLUME,BLANKS        INITIALIZE VOLUME NAME
         L     R1,VOLNAME           ADDRESS OF NAME
         MVC   VOLUME(*-*),0(R1)    <<EXECUTED>>
         EX    R15,*-6              MOVE IN THE NAME
         SPACE 1
MAINPDL2 CLI   VOLUME,C'*'          NULLIFY VALUE?
         BNE   *+10                 NO, BRANCH
         MVC   VOLUME,BLANKS        YES, CLEAR VOLUME NAME
         TM    FLAGSHH,FOPTIONS     ASTERISK FORM?
         BNO   MAINPDL3             YES, BRANCH
         MVI   DSPALLOC,ALLOSHR     ASSUME DISP=SHR
         MVI   DSPREQST,ALLOSHR     ASSUME DISP=SHR
         CLI   OPTDISP+1,1          CORRECT?
         BNE   MAINPDL3             NO, BRANCH
         MVI   DSPALLOC,ALLOOLD     DISP=OLD
         MVI   DSPREQST,ALLOOLD     DISP=OLD
         SPACE 1
MAINPDL3 OI    FLAGSHH,FOPTIONS     NORMAL DSNAME FORM NOW
         MVI   CONCATNM+1,0         RESET NUMBER COUNT TO ZERO
         LA    R1,OPTCONCC          NUMBER(COUNT)
         BAS   R14,PACKMAX          ANY RESULT?
         B     MAINPDL4             YES, BRANCH
         B     MAINPDL5             NO, BRANCH
MAINPDL4 STC   R1,CONCATNM+1        SAVE RESULT
         DROP  R6
         SPACE 1
MAINPDL5 TM    FLAGSBB,FQUOTE       QUOTED DATA SET NAME?
         BO    PARSPOST             YES, BRANCH
         CLI   VOLUME,X'40'         ANY VOLUME NAME SPECIFIED?
         BNE   PARSPOST             YES, ASSUME NO CATALOG USE
*  NEED TO FULLY QUALIFY THE DATA SET NAME
         USING DFPL,R6
         LA    R6,PARMLIST          START OF DFPL PARAMETER LIST
         L     R0,ADDRUPT
         L     R1,ADDRECT
         LA    R2,ATTNECB
         LA    R3,PARMLIST+16
         STM   R0,R3,DFPLUPT        INITIALIZE DFPLUPT, DFPLECT,
*                                              DFPLECB AND DFPLDFPB
         USING DFPB,R3
         LA    R14,DSNLEN           DSNAME LENGTH, DSNAME
         L     R15,ADDRPSCB         PSCB
         LA    R0,DOUBLE            BLANK DEFAULT QUALIFIER
         SR    R1,R1                NO USER CATALOG
         LA    R2,PASSWORD
         STM   R14,R2,DFPBDSN       INITIALIZE DFPBDSN, DFPBPSCB,
*                                     DFPBQUAL, DFBCAT AND DFPBPSWD
         MVI   DFPBCNTL,DFPBRET     ADD LOW-LEVEL QUALIFIER
         MVI   DFPBCODE,DFPB04      ENTRY CODE X'04' -- CAN PROMPT
         TM    SPFLAG0,SPFDON       ISPMODE ACTIVE?
         BNO   *+8                  NO, BRANCH
         MVI   DFPBCODE,DFPB08      ENTRY CODE X'08' -- NO PROMPTING
         MVC   DOUBLE(8),BLANKS     BLANK DEFAULT QUALIFIER
         DROP  R6
         SPACE 1
         LA    R1,PARMLIST          ADDRESS OF PARM LIST
         L     R15,ADDRDEFT         DEFAULT ROUTINE ADDRESS
         BASR  R14,R15
         B     PARSPOST
PARSE    CSECT
         LTORG
         SPACE 2
MSGBL132 M$TX  '                                                       X
                                                                       X
                                    '  -- 132 BYTES
BLANK128 EQU   MSGBL132+4,128
BLANKS   EQU   MSGBL132+4,8
PDS380A  M$TX  'PDS380A REENTER THE SEARCH STRING WITH DELIMITERS:'
PDS381A  M$TX  'PDS381A REENTER THE DATA SET NAME, VOLUME AND DISPOSITIX
               ON'
PDS382A  M$TX  'PDS382A REENTER THE FIRST TTR:'
PDS383A  M$TX  'PDS383A REENTER THE SECOND TTR:'
PDS384A  M$TX  'PDS384A REENTER THE HEX OFFSET:'
PDS385A  M$TX  'PDS385A REENTER THE SSI DATA:'
PDS386A  M$TX 'PDS386A REENTER THE REPLACEMENT STRING WITH DELIMITERS:'
#RESFREP EQU     X'01'            RESTORE: REPEAT
#RESFDIS EQU     X'02'            RESTORE: DISPLAY
#RESFPRO EQU     X'04'            RESTORE: PROMPT
ALLOOLD  EQU   X'01'
ALLOMOD  EQU   X'02'
ALLOSHR  EQU   X'08'
         SPACE 1
***BITS FOR DIRATTR+0:
ATTRRENT EQU   X'80'          REENTRANT
ATTRREUS EQU   X'40'          REUSABLE
ATTROVLY EQU   X'20'          OVERLAY STRUCTURE
ATTRTEST EQU   X'10'          TEST SYMBOLS ARE AVAILABLE
ATTRLOAD EQU   X'08'          ONLY LOADABLE
ATTRSCTR EQU   X'04'          SCATTER LOADED
ATTREXEC EQU   X'02'          EXECUTABLE
ATTR1TXT EQU   X'01'          ONE TEXT RECORD ONLY AND NO RLD ITEMS
         SPACE 1
***BITS FOR DIRATTR+1:
ATTRNODC EQU   X'80'          NOT DOWNWARD-COMPATABLE
ATTRZORG EQU   X'40'          FIRST TEXT BLOCK HAS A ZERO ORIGIN
ATTREP0  EQU   X'20'          ENTRY POINT IS AT OFFSET ZERO
ATTRNRLD EQU   X'10'          NO RLD ITEMS
ATTRNE   EQU   X'08'          CANNOT BE REPROCESSED BY LINKAGE-EDITOR
ATTRSYMS EQU   X'04'          CONTAINS TEST SYMBOLS
ATTRFLEV EQU   X'02'          CREATED BY F LEVEL LINKAGE-EDITOR
ATTRREFR EQU   X'01'          REFRESHABLE
L834$1   DC    C'834'
L840     DC    C'840'
L841     DC    C'841'
L842     DC    C'842'
         TITLE 'P D S  --  PDS OPTIONS                       09/28/88'
***********************************************************************
***      OPTIONS SUBCOMMAND                                         ***
***********************************************************************
*
         SPACE 1
OPTIONS  CSECT
         USING *,R8
ONIX     LTR   R2,R2                  RETURN=0?
         BZ    OPT200                 YES, BRANCH
         M$MSG L071
         SPACE 1
         LA    R3,$TBL-PTW            POINT TO FIRST TABLE ENTRY -WIDTH
         LA    R4,ONIX                START OF THIS CSECT
         SPACE 1
OPT120   LA    R3,PTW(,R3)            NEXT TABLE ENTRY
         CLI   0(R3),X'FF'            END OF TABLE?
         BE    OPT300                 YES, EXIT
         CLI   0(R3),X'40'            DISABLED ENTRY?
         BE    OPT120                 YES, BRANCH
         SR    R1,R1
         ICM   R1,B'0011',28(R3)      ANY OPTION ENTRY?
         BZ    OPT120                 NO, BRANCH
         TM    12(R3),@S              DEFINED FOR SEQUENTIAL DATA SET?
         BO    OPT140                 YES, BRANCH
         TM    DSORG,DS1DSGPO         DSORG=PO?
         BNO   OPT120                 NO, BRANCH
         SPACE 1
OPT140   AR    R1,R4                  ADDRESS OF OPTION DATA
         MVC   MSGTEXT1(80),0(R1)     OPTION LINE
         MVC   MSGTEXT1+4(8),0(R3)    CHANGE TO SUBCOMMAND NAME USED
         M$ERRST MSGTEXT1             OUTPUT THIS MESSAGE
         B     OPT120
         SPACE 1
OPT200   L     R2,0(,R15)             START OF SUBCOMMAND
         MVC   INSERT#1(8),0(R2)      NO, BRANCH
         LA    R3,1(,R3)              ACTUAL LENGTH OF SUBCOMMAND
         STC   R3,MTHIGHL             SAVE LENGTH
         TM    FLAGSBB,FONESHOT       ONE SUBCOMMAND ONLY?
         BNO   OPT201                 NO, BRANCH
         L     R1,=A($ML)             ML SUBCOMMAND
         CLC   0(2,R1),0(R2)          ML SUBCOMMAND?
         BE    OPT200B                YES, BRANCH
         L     R1,=A($MML)            MEMLIST SUBCOMMAND
         CLC   0(4,R1),0(R2)          MEMLIST SUBCOMMAND?
         BNE   OPT201                 NO, BRANCH
OPT200B  TM    DSORG,DS1DSGPO         PARTITIONED?
         BO    OPT201                 YES, BRANCH
         L     R6,ADDRCBUF            BUFFER ADDRESS
         L     R1,=A($ISM)            ISPMODE
         MVC   4(8,R6),0(R1)          SUBCOMMAND CHANGED TO ISPMODE
         LA    R1,8+4                 LENGTH IS 8
         SLL   R1,16                  SHIFT CORRECTLY
         ST    R1,0(,R6)              UPDATE LENGTH TOO
         XI    FLAGSBB,FONESHOT       TURN OFF ONESHOT
         OI    FLAGSBB,FCMD           INDICATE SUBCOMMAND AVAILABLE
         B     NEWCMD
         SPACE 1
OPT201   M$MSG L771$1                 INVALID COMMAND
         TM    FLAGSEE,FBKGRND        BACKGROUND EXECUTION?
         BO    *+8                    YES, BRANCH
         NI    FLAGSBB,FF-FONESHOT    NO, ERROR -- DO NOT TERMINATE
         LA    R1,80                  ASSUME AN ACTIVE MODE
         TM    SPFLAG0,SPFDON         ISPMODE ACTIVE?
         BO    OPT202                 YES, BRANCH
         TM    CONTOPTN,1             ANY LOG RECORDING?
         BO    OPT202                 YES, BRANCH
*        GTSIZE ,                     TERMINAL SIZE            SS MAY89
         GTSIZE
         CH    R1,=H'120'             120 OR LESS BYTES?
         BL    *+8                    YES, BRANCH
         LH    R1,=H'120'             NO, USE 120 BYTES
OPT202   MVC   MSGTEXT1(136),OPTBL132
         MVC   MSGTEXT1+4(12),OPTLSUB
         LA    R3,$TBL-PTW            POINT TO FIRST TABLE ENTRY -WIDTH
         LA    R4,MSGTEXT1+4(R1)      END OF LINE ADDRESS
         LA    R5,MSGTEXT1+4+13       START OF LINE
         SPACE 1
OPT220   LA    R3,PTW(,R3)            NEXT TABLE ENTRY
         CLI   0(R3),X'FF'            END OF TABLE?
         BE    OPT280                 YES, EXIT
         CLI   0(R3),X'40'            DISABLED ENTRY?
         BE    OPT220                 YES, BRANCH
         CLC   28(2,R3),=F'0'         ANY OPTION ENTRY?
         BZ    OPT220                 NO, BRANCH
         TM    12(R3),@S              DEFINED FOR SEQUENTIAL DATA SET?
         BO    OPT240                 YES, BRANCH
         TM    DSORG,DS1DSGPO         DSORG=PO?
         BNO   OPT220                 NO, BRANCH
         SPACE 1
OPT240   LA    R1,9(,R5)              POTENTIAL ENTRY POSITION
         CR    R1,R4                  LINE FULL?
         BL    OPT260                 NO, CONTINUE
         M$ERRST MSGTEXT1             OUTPUT THIS PART OF THE MESSAGE
         LA    R5,MSGTEXT1+4+13       START OF LINE
         MVC   MSGTEXT1(136),OPTBL132
         SPACE 1
OPT260   MVC   0(8,R5),0(R3)          ADD THE SUBCOMMAND NAME
         LA    R5,9(,R5)              POSITION FOR NEXT ENTRY
         B     OPT220
         SPACE 1
OPT280   M$ERRST MSGTEXT1
         SPACE 2
OPT300   M$ERRST OPTBLANK
         B     NEWCMD
OPTLSUB  DC    C'SUBCOMMANDS:'
         SPACE 1
         PRINT NOGEN
OATT     M$TX  'ATTRIB   - LIST ATTRIBUTES OF A MEMBER'
OALI     M$TX  'ALIAS    - ASSIGN AN ALIAS TO A MEMBER'
OABE     M$TX  'ABE      - EDIT USING ABE'
OBRO     M$TX  'BROWSE   - BROWSE USING SPF'
OCHA     M$TX  'CHANGE   - SELECT A NEW DATA SET'
OCAR     M$TX  'COMPARE  - COMPARE TWO MEMBERS FROM THE DATA SET'
OCMX     M$TX  'COMPRESS - COMPRESS IN PLACE OF THE DATA SET'
OCON     M$TX  'CONTROL  - SET PROGRAM CONTROLS'
OCOP     M$TX  'COPY     - COPY MEMBERS TO ANOTHER DATA SET'
ODIS     M$TX  'DISPLAY  - DISPLAY DIRECTORY MEMBER NAMES'
ODCF     M$TX  'DCF      - SCRIPT AN OUTPUT COPY'
ODIR     M$TX  'DIRENTRY - DUMP A DIRECTORY ENTRY'
ODEL     M$TX  'DELETE   - DELETE A MEMBER'
ODSN     M$TX  'DSNAME   - DISPLAY THE CURRENT ALLOCATION'
ODSP     M$TX  'DSPRINT  - PRINT A HARDCOPY WITH DSPRINT'
OEDI     M$TX  'EDIT     - EDIT USING SPF'
OEDR     M$TX  'EDREC    - ISPF EDIT RECOVERY REQUEST'         SS JUL87
OEND     M$TX  'END      - STOP THE PROGRAM'
OEXE     M$TX  'EXEC     - EXECUTE PDS SUBCOMMANDS FROM A CLIST'
OFIN     M$TX  'FIND     - LIST LINES CONTAINING A STRING'
OFIX     M$TX  'FIXPDS   - MODIFY DATA SET ATTRIBUTES'
OFSE     M$TX  'FSE      - EDIT USING FSE'
OHEL     M$TX  'HELP     - DISPLAY PDS SUBCOMMAND HELP'
OHIS     M$TX  'HISTORY  - LIST HISTORY OF A LOAD MODULE'
OIFX     M$TX  'IF       - CONDITIONALLY EXECUTE A PDS SUBCOMMAND'
OISP     M$TX  'ISPF     - INVOKE ISPF PRIMARY PANEL'
OISX     M$TX  'ISPXEQ   - EXECUTE ISPF PDS DIALOG COMMAND'    SS JUL87
OISM     M$TX  'ISPMODE  - SET ISPF DIALOG DISPLAY MODE'       SS JUL84
OLIS     M$TX  'LIST     - DISPLAY A MEMBER'
OMAP     M$TX  'MAP      - MAP A LOAD MODULE'
OMEM     M$TX  'MEMBERS  - DISPLAY A MEMBER GROUP'
OMML     M$TX  'MEMLIST  - DISPLAY A MEMBER GROUP IN ISP TABLE'
OOPT     M$TX  'OPTIONS  - DISPLAY THIS LIST OF SUBCOMMANDS'
OOUT     M$TX  'OUTCOPY  - OUTPUT IEBCOPY MEMBER SELECT STATEMENTS'
OPAT     M$TX  'PATTERN  - DISPLAY DIRECTORY NAMES MATCHING A PATTERN'
OPRI     M$TX  'PRINTOFF - PRINT A HARDCOPY'
OREC     M$TX  'RECALL   - DISPLAY THE PREVIOUS SUBCOMMAND'
OREN     M$TX  'RENAME   - RENAME A MEMBER'
OREP     M$TX  'REPLACE  - CHANGE LINES CONTAINING A STRING'
ORPR     M$TX  'REPRO    - RECOPY A MEMBER IN THIS DATA SET'
ORES     M$TX  'RESTORE  - RESURRECT A PREVIOUSLY DELETED MEMBER'
OREV     M$TX  'REVIEW   - BROWSE DATA'
OSUB     M$TX  'SUBMIT   - SUBMIT JCL'
OSUL     M$TX  'SUBLIST  - DEFINE A MEMBER LIST SUBGROUP'
OTSO     M$TX  'TSO      - INVOKE A TSO COMMAND'
OTSE     M$TX  'TSOEDIT  - EDIT USING TSO EDIT'
OTSL     M$TX  'TSOLIST  - LIST DATA WITH TSO LIST'
OUSA     M$TX  'USAGE    - LIST DATA SET STATISTICS'
*OUT1    M$TX  'UT1      - UTILITY PANEL #1 (NON-MEMBER)'      SS NOV84
*OUT2    M$TX  'UT2      - UTILITY PANEL #2 (WITH MEMBERS)'    SS NOV84
OVER     M$TX  'VERIFY   - VALIDITY CHECK THE DATA SET'
OVPS     M$TX  'VPSPRINT - PRINT A HARDCOPY WITH VPSPRINT'
OPTBL132 M$TX  '                                                       X
                                                                       X
                                    '  -- 132 BYTES
OPTBLANK EQU   OPTBL132,132
         PRINT NOGEN
L071     DC    C'071'
L771$1   DC    C'771'
         DC    X'FF'
         LTORG
         TITLE 'P D S  --  PDS SUBCOMMAND TABLE              09/28/88'
         COPY  #PDSTBL
         PRINT GEN
         TITLE 'P D S  --  PDS PARSE VALIDITY CHECKING       09/28/88'
*
*        CREATED/CHANGED VALIDITY CHECK SUBROUTINE
*
         SPACE 1
VRTDATE  M$ENTER VALCHECK
         SPACE 1
         TM    8+6(R6),X'80'      SECOND PARAMETER PRESENT?
         BO    VRTDCHK0           YES, CONTINUE
         L     R1,0(,R6)          ADDR OF FIRST PARAMETER
         LH    R0,4(,R6)          LENGTH OF FIRST PARAMETER
VRTDATE2 CLI   0(R1),C':'         SEPARATOR CHARACTER?
         BE    VRTDATE4           YES, FOUND
         LA    R1,1(,R1)          NEXT CHARACTER
         BCT   R0,VRTDATE2        CHECK ALL CHARACTERS
         B     VRTDCHK0 '         ADDR OF FIRST PARAMETER
VRTDATE4 LH    R14,4(,R6)         LENGTH OF FIRST PARAMETER
         SR    R14,R0             LENGTH OF FIRST PART OF RANGE VALID?
         BZ    VRTDCHK0           NO, BRANCH
         STH   R14,4(,R6)         UPDATE THE FIRST FIELD LENGTH
         LA    R1,1(,R1)          POINT AFTER THE :
         ST    R1,8(,R6)          START OF SECOND PARAMETER
         S     R0,=F'1'           LENGTH VALID?
         BNP   VRTDCHK0           NO, BRANCH
         STH   R0,8+4(,R6)        UPDATE THE SECOND FIELD LENGTH
         OI    8+6(R6),X'80'      SECOND PARAMETER IS PRESENT
VRTDCHK0 L     R1,0(,R6)          ADDR OF FIRST PARAMETER
         CLI   5(R6),5            NUMBER OF DIGITS:
         BL    VRTDBAD              0-4, ERROR
         BE    VRTDCHK1             5, YYDDD
         CLI   5(R6),8
         BH    VRTDBAD              6-8, MM/DD/YY
         SR    R0,R0
         IC    R0,5(R6)           NUMBER OF CHARACTERS
         BAS   R3,VRTDRTN         CONVERT TO YYDDD
         LA    R1,DELAYMSG        TEMPORARY FIRST ADDRESS
         MVC   0(5,R1),DAYTABLE+3 MOVE IN YYDDD
         SPACE 1
VRTDCHK1 LR    R5,R1              SAVE R1 POINTER FOR LATER
         CLC   2(3,R5),VRTDL366   >366?
         BH    VRTDBAD            YES, ERROR
         CLC   2(3,R5),VRTDL000   ZEROR DAYS?
         BE    VRTDBAD            YES, ERROR
         TM    8+6(R6),X'80'      SECOND PARAMETER PRESENT?
         BNO   VRTDOK             NO, BRANCH
         L     R1,8(,R6)          ADDR OF SECOND PARAMETER
         CLI   8+5(R6),5          NUMBER OF DIGITS:
         BL    VRTDBAD              0-4, ERROR
         BE    VRTDCHK2             5, YYDDD
         CLI   8+5(R6),8
         BH    VRTDBAD              6-8, MM/DD/YY
         SR    R0,R0
         IC    R0,8+5(R6)         NUMBER OF CHARACTERS
         BAS   R3,VRTDRTN         CONVERT TO YYDDD
         LA    R1,DELAYMSG+5      TEMPORARY SECOND ADDRESS
         MVC   0(5,R1),DAYTABLE+3 MOVE IN YYDDD
         SPACE 1
VRTDCHK2 CLC   2(3,R1),VRTDL366   >366?
         BH    VRTDBAD            YES, ERROR
         CLC   2(3,R1),VRTDL000   ZEROR DAYS?
         BE    VRTDBAD            YES, ERROR
*        CLC   0(5,R5),0(R1)      1ST:2ND RELATIONSHIP VALID? Y2K AUG97
*        BH    VRTDBAD            NO, ERROR                   Y2K AUG97
         SPACE 1
VRTDOK   SR    R15,R15            VALID -- RESET TRANSLATED RESULTS
         L     R2,0(,R6)          FIRST PARAMETER ADDRESS
         MVC   0(5,R2),0(R5)      SUBSTITUTE THE TRANSLATED RESULT
         MVI   5(R6),5            SET THE LENGTH FOR LATER
         TM    8+6(R6),X'80'      SECOND PARAMETER PRESENT?
         BNO   VRTDTERM           NO, BRANCH
         L     R2,8(,R6)          SECOND PARAMETER ADDRESS
         MVC   0(5,R2),0(R1)      SUBSTITUTE THE TRANSLATED RESULT
         MVI   8+5(R6),5          SET THE LENGTH FOR LATER
         B     VRTDTERM
VRTDL000 DC    C'000'
VRTDL366 DC    C'366'
         SPACE 2
* SUBROUTINE TO CONVERT MM/DD/YY TO YYDDD
*                    OR YY/MM/DD TO YYDDD
VRTDRTN  BAS   R2,VRTDNUM         CONVERT MM TO BINARY
         LTR   R4,R14             MM ZERO?
         BZ    VRTDBAD            YES, ERROR
         BAS   R2,VRTDSLA         CONVERT /DD TO BINARY
         ST    R14,DOUBLE         SAVE DAYS FOR LATER
         BAS   R2,VRTDSLA         CONVERT /YY TO BINARY
         LTR   R0,R0              ALL DIGITS USED?
         BNZ   VRTDBAD            NO, ERROR
         L     R15,DOUBLE         LOAD DD AGAIN
         CH    R4,=H'60'          YEAR FIRST?
         BL    VRTDRT2            NO, BRANCH
         ST    R14,DOUBLE         SAVE NUMBER OF DAYS
         LR    R14,R4             LOAD ACTUAL YY
         LR    R4,R15             LOAD ACTUAL MM
         L     R15,DOUBLE         LOAD ACTUAL DD
VRTDRT2  CH    R4,=H'12'          MONTH>12?
         BH    VRTDBAD            YES, ERROR
         LTR   R15,R15            DD ZERO?
         BZ    VRTDBAD            YES, ERROR
         MVC   DAYTABLE,DAYMONTH  DAYS/MONTH
         LR    R15,R14
         SRL   R15,2
         SLL   R15,2
         CR    R15,R14            LEAP YEAR?
         BNE   *+8                NO, BRANCH
         MVI   DAYTABLE+1,29      YES, FEBRUARY HAS 29 DAYS
         SR    R0,R0
         SR    R15,R15
         LA    R1,DAYTABLE
         SPACE 1
VRTDLOOP IC    R0,0(,R1)          NUMBER OF DAYS FOR A MONTH
         S     R4,=F'1'           ANY MORE MONTHS?
         BNP   VRTDOUT            NO, BRANCH
         AR    R15,R0             ADD THIS MONTH
         LA    R1,1(,R1)          NEXT MONTH
         B     VRTDLOOP
         SPACE 1
VRTDOUT  L     R1,DOUBLE          DAYS IN THE FINAL MONTH
         CR    R1,R0              TOO MANY?
         BH    VRTDBAD            YES, BRANCH
         AR    R15,R1             JULIAN DAYS
         MH    R14,=H'1000'       YY000
         AR    R15,R14            YYDDD
         CVD   R15,DOUBLE
         MVC   DAYTABLE(8),VRTDLEDI
         ED    DAYTABLE(8),DOUBLE+4
         BR    R3
VRTDLEDI DC    X'4020212020202020'
         SPACE 1
* SUBROUTINE TO CONVERT /NN TO BINARY
VRTDSLA  CLI   0(R1),C'/'         SLASH DIVIDER?
         BNE   VRTDBAD            NO, ERROR
         LA    R1,1(,R1)          YES, SKIP IT
         BCTR  R0,0               REDUCE STRING LENGTH
         SPACE 1
* SUBROUTINE TO CONVERT NN TO BINARY
VRTDNUM  TM    0(R1),X'F0'        A NUMERIC DIGIT?
         BNO   VRTDBAD            NO, ERROR
         IC    R14,0(,R1)         FIRST DIGIT
         BCTR  R0,0
         LA    R1,1(,R1)
         N     R14,=F'15'         FIRST DIGIT IN BINARY
         CLI   0(R1),C'/'         SLASH DIVIDER?
         BER   R2                 YES, RETURN
         MH    R14,=H'10'
         TM    0(R1),X'F0'        A NUMERIC DIGIT?
         BNO   VRTDBAD            NO, ERROR
         IC    R15,0(,R1)         FIRST DIGIT
         BCTR  R0,0
         LA    R1,1(,R1)
         N     R15,=F'15'         SECOND DIGIT IN BINARY
         AR    R14,R15            RESULT IN BINARY
         BR    R2
VRTDBAD  LA    R15,4              INVALID, PROMPT FOR ANOTHER DATE
VRTDTERM M$EXIT
DAYMONTH DC    AL1(31,28,31,30,31,30,31,31,30,31,30,31)
         LTORG
         EJECT
*
*        INPUT DATA SET VALIDITY CHECK EXIT
*
         SPACE 3
VRTDSN   M$ENTER VALCHECK
         OI    FLAGSBB,FQUOTE+FNOTFILE  ASSUME QUOTED AND NOT FILE(...
         OI    FLAGSHH,FOPTIONS         ASSUME NOT ASTERISK FORM
         L     R15,0(R6)                ADDR OF DSNAME
         CLI   0(R15),C'*'              ASTERISK DSNAME?
         BE    PREVDSN                  YES, BRANCH
         MVC   SAVDSN+1(SAVLEN),DSNLEN  SAVE PREVIOUS DSNAME
         MVC   SAVDSN(1),DSPREQST       SAVE DISPOSITION FOR LATER
         MVC   PASSWORD,=CL8' '
         SPACE 1
         MVC   DSNAME(L'DSNAME),=CL44' '
         LH    R14,4(R6)                LENGTH OF DSNAME
         STH   R14,DSNLEN
         BCTR  R14,0
         MVC   DSNAME(*-*),0(R15)       <<EXECUTED>>
         EX    R14,*-6                  MOVE DSNAME TO AREA
         L     R1,ADDRUPT               ADDRESS OF THE UPT
         SR    R14,R14
         IC    R14,UPTPREFL-UPT(R1)     LENGTH OF USERID
         MVC   DSNAMEH(4),DSNAME        FIRST FOUR BYTES OF DSNAME
         LTR   R14,R14                  VALID LENGTH?
         BZ    *+6                      NO, BRANCH
         BCTR  R14,0                    MACHINE LENGTH
         CLC   DSNAME(*-*),UPTPREFX-UPT(R1) <<EXECUTED>>
         EX    R14,*-6                      START WITH USERID?
         LR    R1,R15                       ADDRESS OF DSNAME
         BNE   *+14                         NO, BRANCH
         LA    R1,2(R14,R15)                DATA AFTER PERIOD
         MVC   DSNAMEH(4),0(R1)         FIRST FOUR BYTES OF DSNAME
         SPACE 1
         OI    FLAGSBB,FQUOTE+FNOTFILE  ASSUME QUOTED AND NOT FILE(...
         TM    6(R6),X'40'              QUOTED?
         BO    NOFILE                   YES, BRANCH
         XI    FLAGSBB,FQUOTE           NO, RESET THE BIT
         TM    14(R6),X'80'             FILE(FILENAME) SUPPLIED?
         BZ    NOMEMB                   NO, BRANCH
         CLC   0(1,R1),VRTDSFIL         CORRECT FILE IDENTIFIER?
         BNE   NOFILE                   NO, BRANCH
         CLI   1(R1),C'('               AND A (?
         BE    GOTFILE                  YES, BRANCH
         TM    1(R1),FF-X'40'           AND A BLANK OR NULL?
         BZ    GOTFILE                  YES, BRANCH
         CLC   0(2,R1),VRTDSFIL         CORRECT FILE IDENTIFIER?
         BNE   NOFILE                   NO, BRANCH
         CLI   2(R1),C'('               AND A (?
         BE    GOTFILE                  YES, BRANCH
         TM    2(R1),FF-X'40'           AND A BLANK OR NULL?
         BZ    GOTFILE                  YES, BRANCH
         CLC   0(3,R1),VRTDSFIL         CORRECT FILE IDENTIFIER?
         BNE   NOFILE                   NO, BRANCH
         CLI   3(R1),C'('               AND A (?
         BE    GOTFILE                  YES, BRANCH
         TM    3(R1),FF-X'40'           AND A BLANK OR NULL?
         BZ    GOTFILE                  YES, BRANCH
         CLC   0(4,R1),VRTDSFIL         CORRECT FILE IDENTIFIER?
         BNE   NOFILE                   NO, BRANCH
         CLI   4(R1),C'('               AND A (?
         BE    GOTFILE                  YES, BRANCH
         TM    4(R1),FF-X'40'           AND A BLANK OR NULL?
         BNZ   NOFILE                   NO, BRANCH
GOTFILE  XI    FLAGSBB,FNOTFILE         FILE(FILENAME) SUPPLIED
         L     R15,8(,R6)               POINT TO FILENAME
         LH    R14,12(,R6)              LENGTH OF MEMBER NAME
         BCTR  R14,0
         MVC   DDNAMEH(8),=CL8' '       FILENAME AREA
         MVC   DDNAMEH(*-*),0(R15)      <<EXECUTED>>
         EX    R14,*-6                  MOVE FILENAME
         B     NOMEMB
         SPACE 2
*   CHANGE * FORM OF DSNAME
PREVDSN  NI    FLAGSHH,255-FOPTIONS     ASTERISK FORM
         CLI   SAVDSN+1+2,0             ANY OTHER DSNAME?
         BE    NOFILE                   NO, CAN NOT SWITCH
         SPACE 2
         XC    SAVDSN+1(SAVLEN),DSNLEN  EXCHANGE
         XC    DSNLEN(SAVLEN),SAVDSN+1          OLD AND NEW
         XC    SAVDSN+1(SAVLEN),DSNLEN                     DSNAMES
         MVC   DSPALLOC,SAVDSN          GET PREVIOUS DISPOSITION
         MVC   SAVDSN(1),DSPREQST       SAVE REQUESTED DISPOSITION
         MVC   DSPREQST,DSPALLOC        GET PREVIOUS DISPOSITION
*
         SPACE 2
NOFILE   TM    14(R6),X'80'             MEMBER SUPPLIED?
         BZ    NOMEMB                   NO, BRANCH
         SPACE 1
         L     R15,8(,R6)               POINTER TO MEMBER NAME
         LH    R14,12(,R6)              LENGTH OF MEMBER NAME
         BCTR  R14,0
         MVC   MEMBERD+3(8),=CL8' '     MEMBER NAME DEFAULT AREA
         MVC   MEMBERD+3(*-*),0(R15)    <<EXECUTED>>
         EX    R14,*-6                  MOVE MEMBER TO AREA
         STCM  R14,B'0011',MEMBERD+1    MACHINE LENGTH OF MEMBER NAME
         MVI   MEMBERD,FMEMBER1         JUST ONE MEMBER NAME DEFAULT
         SPACE 2
NOMEMB   TM    22(R6),X'80'             PASSWORD SUPPLIED?
         BZ    VRTDSN99                 NO, BRANCH
         SPACE 1
         L     R15,16(,R6)              POINTER TO PASSWORD
         LH    R14,20(,R6)              PASSWORD LENGTH
         BCTR  R14,0
         MVC   PASSWORD(*-*),0(R15)     <<EXECUTED>>
         EX    R14,*-6                  MOVE PASSWORD TO AREA
         SPACE 2
VRTDSN99 SR    R15,R15
         M$EXIT
VRTDSFIL DC    C'FILE'
         LTORG
         EJECT
*
*        MEMBER NAME VALIDITY CHECKING
*
         SPACE 3
VRTMEMBR M$ENTER VALCHECK
         SR    R15,R15            ASSUME NOT PARTITIONED
         TM    ##ADRPC#,@S        CORRECT?
         BO    VRTMEMX            YES, EXIT
         L     R15,0(R6)          ADDR OF MEMBER NAME
         LH    R14,4(R6)          LENGTH OF NAME
         TM    ##ADRPC#,@G        NEW DEFAULT MEMBER NAME?
         BNO   VRTMEMS            NO, BRANCH
         MVI   FLAGSAA,0          CLEAR THE MEMBER FLAGS
         MVI   FLAGSHH,FOPTIONS   SET THE OPTIONS FLAG
         SPACE 1
VRTMEMS  BCTR  R14,0              EXECUTE LENGTH
         OI    FLAGSAA,FMEMBER2
         TM    FLAGSAA,FMEMBER1   FIRST MEMBER PROCESSED?
         LA    R6,MEMBER2
         LA    R2,LMEMBER2
         BO    MEM2ND             YES, DO THE SECOND MEMBER NAME
         XC    0(10,R6),0(R6)     NO, CLEAR MEMBER2, LMEMBER2
         XI    FLAGSAA,FMEMBER1+FMEMBER2
         LA    R6,MEMBER1
         LA    R2,LMEMBER1
MEM2ND   MVC   0(8,R6),=CL8' '    BLANK THE MEMBER NAME
         SPACE 1
         TM    SPFLAG2,SPFLNCD    LINE COMMAND?
         BO    VRTSOUT            YES, NO PARTIAL MEMBER NAMES
         TM    FLAGSAA,FMEMBER2   SECOND MEMBER NAME?
         BO    VRTSOUT            YES, BRANCH
         TM    ##ADRPC#,@G        DEFAULT AND MEMBER GROUPS ALLOWED?
         BO    VRTM190            YES, BRANCH
         TM    ##ADRPA#,$M        PATTERN OR DISPLAY SUBCOMMAND?
         BNO   VRTSOUT            NO, BRANCH
VRTM190  LA    R0,1(,R14)         ACTUAL MEMBER NAME LENGTH
         LR    R5,R15             START OF MEMBER NAME
         LTR   R14,R14            SINGLE CHARACTER NAME?
         BNZ   VRTM210            NO, BRANCH
         CLI   0(R5),C'/'         MEMBER PATTERN REQUEST?
         BE    VRTBAD             YES, INVALID
         CLI   0(R5),C'*'         MEMBER PLACE-HOLDER?
         BE    VRTM200            YES, BRANCH
         CLI   0(R5),C':'         MEMBER RANGE REQUEST?
         BNE   VRTSOUT            NO, BRANCH
         NI    FLAGSAA,FF-FMEMBER1        ENTIRE DIRECTORY DESIRED
         OI    FLAGSAA,FMEM#MEM+FMEMRANG  MEMBER RANGE GROUP DESIRED
         B     VRTGOOD
         SPACE 2
VRTM200  OI    FLAGSHH,FMEMSTAR   MEMBER NAME STAR (*) NOTATION
         CLI   MEMBERD,X'00'      ANY MEMBER DEFAULT YET?
         BE    VRTSOUT            NO, JUST USE *
         NI    FLAGSHH,FF-FOPTIONS    SET FLAGS FOR NO OPERAND
         MVC   LMEMBER1(2+8+8+2),MEMBERD+1
         MVC   FLAGSAA,MEMBERD    RESET THE FLAG BITS
         B     VRTGOOD
         SPACE 1
VRTM210  CLI   0(R5),C'*'         MEMBER PART DESIRED?
         BE    VRTM220            YES, BRANCH
         CLI   0(R5),C':'         MEMBER RANGE DESIRED?
         BE    VRTM221            YES, BRANCH
         CLI   0(R5),C'/'         MEMBER PATTERN DESIRED?
         BE    VRTM222            YES, BRANCH
         LA    R5,1(,R5)          NEXT MEMBER CHARACTER
         BCT   R0,VRTM210         CHECK ALL MEMBER CHARACTERS
         B     VRTSOUT            NOT FOUND -- NORMAL MEMBER NAME
         SPACE 1
VRTM220  OI    FLAGSAA,FMEMASTR   MEMBER PART DESIRED
         B     VRTM222
VRTM221  OI    FLAGSAA,FMEMRANG   MEMBER RANGE DESIRED
VRTM222  OI    FLAGSAA,FMEM#MEM   MEMBER GROUP DESIRED
         CR    R15,R5             FIRST CHARACTER OF NAME?
         BNE   VRTM230            NO, BRANCH
         LA    R15,1(,R15)        SKIP OVER : OR /
         XC    LMEMBER2,LMEMBER2  NO MEMBER 2 YET
         TM    FLAGSAA,FMEMRANG+FMEMASTR  RANGE OR MEMBER PART?
         BZ    VRTM240                    NO, BRANCH
         MVI   LMEMBER1+1,0       MACHINE LENGTH IS ZERO
         MVI   MEMBER1,X'00'      DATA IS X'00'
         B     VRTMEMS            CONTINE WITH MEMBER2
         SPACE 1
VRTM230  S     R0,=F'1'           ACTUAL LENGTH OF MEMBER2
         STH   R0,LMEMBER2        SAVE FOR LATER
         SR    R14,R0             ACTUAL LENGTH OF MEMBER1
         LA    R5,1(,R5)          SKIP OVER : OR +
         ST    R5,FULLWORD        SAVE FOR LATTER
         SPACE 1
VRTM240  BCTR  R14,0              REDUCE MACHINE LENGTH BY ONE
         SPACE 2
VRTSOUT  STH   R14,0(,R2)         STASH LENGTH
         SPACE 1
         LA    R5,0(R14,R15)      POINT TO LAST CHARACTER OF MEMBER
         LM    R0,R1,=CL8' '      HEX MEMBER NAME PADDING
         SPACE 1
         CLC   =C'X''',0(R15)     BEGINS WITH X'?
         BE    VRTHEX             YES, MUST BE A HEX MEMBER NAME
         SPACE 1
         TM    FLAGSAA,FMEMBER2   SECOND MEMBER?
         BNO   MEMLEN             NO, BRANCH
         L     R3,=A($RES)        RESTORE SUBCOMMAND
         CLC   ##SUBCOM(8),0(R3)  RESTORE SUBCOMMAND?
         BNE   MEMLEN             NO, BRANCH
         BCTR  R15,0              BACK UP R15
         SR    R0,R0              ZERO MEMBER NAME PADDING
         SR    R1,R1              ZERO MEMBER NAME PADDING
         B     VRTNULL            CHECK FOR A NULL
         SPACE 2
MEMLEN   CLI   1(R2),7            COMPARE LENGTH > 7?
         BNH   VRTCHAR            NO, BRANCH
         B     VRTBAD             YES, INVALID MEMBER NAME
         SPACE 2
VRTHEX   CLI   0(R5),C''''        A FINAL QUOTE?
         BNE   VRTBAD             NO, INVALID HEXADECIMAL
         BCTR  R5,0               POINT TO PRECEDING CHARACTER
         LA    R15,1(,R15)        POINT TO FIRST QUOTE
         SPACE 1
VRTNULL  CR    R5,R15             NULL HEX STRING?
         BNH   VRTBAD             YES, INVALID SYNTAX
         SR    R4,R4              COUNT OF DIGITS
         L     R14,=F'-1'         BXH INCREMENT
         SPACE 1
VRTHLOOP IC    R3,0(,R5)          NEXT CHARACTER (REVERSE SCAN)
         CLI   0(R5),C'0'
         BL    *+12               0-9?
         CLI   0(R5),C'9'
         BNH   VRT0TOF            YES, BRANCH
         LA    R3,9(,R3)          NO, ADJUST LOW DIGIT 1-5 TO A-F
         CLI   0(R5),C'A'
         BL    VRTBAD             A-F?
         CLI   0(R5),C'F'
         BH    VRTBAD             NO, BRANCH
         SPACE 1
VRT0TOF  SLL   R3,28              GET DIGIT IN TOP DIGIT
         SRDL  R0,4               CREATE ROOM IN R0,R1
         OR    R0,R3              ADD TO R0,R1
         LA    R4,1(,R4)          ANOTHER DIGIT
         BXH   R5,R14,VRTHLOOP    DO ALL DIGITS
         SPACE 1
         LA    R14,1(,R4)         DIGITS+1
         SRL   R14,1              (DIGITS+1)/2    -- TRUNCATED
         BCTR  R14,0              MACHINE COMPARE LENGTH
         STH   R14,0(,R2)         MACHINE LENGTH AFTER CONVERSION
         LA    R14,2(R14,R14)     (COMPARE LENGTH+1)*2
         CR    R14,R4             EVEN NUMBER OF DIGITS?
         BE    *+8                YES, BRANCH
         SRDL  R0,4               NO, ADJUST BY ONE MORE DIGIT
         SPACE 1
         STM   R0,R1,DOUBLE       SAVE CREATED MEMBER NAME
         LA    R14,7              FULL LENGTH MEMBER NAME
         LA    R15,DOUBLE         START OF MOVE ADDRESS
         MVC   0(*-*,R6),0(R15)   <<EXECUTED>>
         EX    R14,*-6            MOVE IN MEMBER NAME
         B     VRTMNAME
         SPACE 2
VRTCHAR  MVC   0(*-*,R6),0(R15)   <<EXECUTED>>
         EX    R14,*-6            MOVE IN MEMBER NAME
         SPACE 3
         TM    SPFLAG2,SPFLNCD    LINE COMMAND?               ABL NOV86
         BNO   VRTCHK0            NO, BRANCH                  ABL NOV86
         CLI   SPFSAVM2,X'40'     SECOND MEMBER NAME?         ABL NOV86
         BE    VRTMNAME           YES, BRANCH                 ABL NOV86
         MVC   MEMBER1(8),SPFSAVM2  RESET REAL MEMBER NAME    ABL NOV86
         MVC   SPFSAVM2(8),=CL8' '  RESET PASSED MEMBER NAME  ABL NOV86
         B     VRTMNAME
         SPACE 2
VRTCHK0  LA    R0,1(,R14)         ACTUAL MEMBER NAME LENGTH
         LR    R1,R6              START OF MEMBER NAME
VRTCHK2  CLI   0(R1),C':'         RANGE TYPE NAME?
         BE    VRTBAD             YES, ERROR
         CLI   0(R1),C'/'         PATTERN TYPE NAME?
         BE    VRTBAD             YES, ERROR
         CLI   0(R1),C'*'         MEMBER PART NAME?
         BNE   VRTCHK4            NO, BRANCH
         TM    ##ADRPC#,@G        DEFAULT AND MEMBER GROUPS ALLOWED?
         BNO   VRTBAD             NO, ERROR
         TM    FLAGSAA,FMEMBER2   PROCESSING SECOND PART OF NAME?
         BO    VRTBAD             YES, ERROR
         CLI   1(R2),0            SINGLE *?
         BNE   VRTBAD             NO, ERROR
VRTCHK4  LA    R1,1(,R1)          NEXT MEMBER NAME CHARACTER
         BCT   R0,VRTCHK2         LOOP FOR ALL 1-8 CHARACTERS
         SPACE 2
VRTMNAME TM    FLAGSAA,FMEM#MEM   MEMBER GROUP PROCESSING?
         BNO   VRTGOOD            NO, BRANCH
         TM    FLAGSAA,FMEMBER2   SECOND MEMBER PROCESSED?
         BO    VRTGOOD            YES, BRANCH
         LH    R14,LMEMBER2       ACTUAL LENGTH OF MEMBER2
         L     R15,FULLWORD       START OF MEMBER2
         LTR   R14,R14            ANY MEMBER2?
         BP    VRTMEMS            YES, BRANCH
         SPACE 1
         AIF   ('&CONDRNG' EQ 'N').NMRNG  OPTION TO MAKE AA: = AA:AA
         TM    FLAGSAA,FMEMRANG   MEMBER RANGE?
         BZ    VRTGOOD            NO, BRANCH
         OI    FLAGSAA,FMEMBER2   INDICATE SECOND MEMBER NAME PROVIDED
         MVC   MEMBER2,MEMBER1    MEMBER NAMES ARE THE SAME
         MVC   LMEMBER2,LMEMBER1  MEMBER NAME LENGTHS ARE THE SAME
.NMRNG   ANOP
         SPACE 1
VRTGOOD  TM    FLAGSAA,FMEMASTR   MEMBER PART?
         BZ    VRTADD0            NO, BRANCH
         LH    R15,LMEMBER1       FIRST PART OF NAME
         AH    R15,LMEMBER2       SECOND PART OF NAME
         CH    R15,=H'7'          MACHINE LENGTH:MAXIMUM
         BL    VRTADD0              BELOW - VALID
         BH    VRTBAD               ABOVE - INVALID
         CLI   MEMBER1,0          NULL FIRST STRING?
         BE    VRTADD0            YES, BRANCH
         TM    FLAGSAA,FMEMBER2   SECOND MEMBER PROVIDED?
         BO    VRTBAD             YES, BRANCH
         SPACE 1
VRTADD0  SR    R15,R15
         TM    ##ADRPC#,@G        NEW DEFAULT MEMBER NAME?
         BNO   VRTGOOD2           NO, BRANCH
         TM    FLAGSII,FMEMFRST   FIRST MEMBER OF A LIST?
         BZ    VRTGOOD0           YES, BRANCH
         L     R1,PMEMMAX                 LAST ACTIVE POINTER
         OC    1(3,R1),1(R1)              ANY SLOT ENTRIES?
         BNZ   VRTADD80                   YES, BRANCH
         LA    R0,36*28                   36 MEMBERS, 28 WIDE EACH
         ICM   R0,B'1000',=AL1(24)        ASSUME SPF IS INITIALIZED
         STCM  R0,B'1000',SUBLIST2        MARK FOR LATER RELEASE
         TM    FLAGSFF,FSPFCALL+FSPFDIAL  SPF INITIALIZED?
         BM    VRTADD10                   YES, BRANCH
         AIF   ('&CISP' NE 'ISPFV2').NSPFVRT
         TM    FLAGSFF,FSPFOPT6           CALLED FROM OPTION 6?
         BO    VRTADD10                   YES, BRANCH
.NSPFVRT ANOP
         ICM   R0,B'1000',=AL1(23)        SPF IS NOT INITIALIZED
         STCM  R0,B'1000',SUBLIST1        MARK FOR LATER RELEASE
         MVI   SUBLIST2,0                 CLEAR THE EARLIER MARK
VRTADD10 GETMAIN R,LV=(0)                 GET MORE ELEMENT STORAGE
         LR    R15,R1                     START OF TABLE
         L     R1,PMEMMAX                 CURRENT ELEMENT
         LA    R0,36-1                    NUMBER OF ELEMENTS -1
VRTADD41 LA    R15,28(,R15)               NEXT ELEMENT POINTER
         ST    R15,0(,R1)                 POINT TO THE NEXT ELEMENT
         LR    R1,R15                     NEXT ELEMENT
         BCT   R0,VRTADD41                DO 41 ELEMENTS
         XC    0(4,R1),0(R1)              CLEAR THE LAST POINTER
         SPACE 2
VRTADD80 L     R1,PMEMMAX                 CURRENT ADDED ELEMENT
         L     R15,0(,R1)                 NEXT POINTER
         NI    0(R15),FF-X'80'            NOT AN ACTIVE ELEMENT
         ST    R15,PMEMMAX                NEXT ELEMENT TO ADD
         OI    0(R1),X'80'                ACTIVE ELEMENT
         OI    PMEMMIN,X'80'              MEMBER LIST IS ACTIVE
         SR    R15,R15
         MVC   4(20,R1),LMEMBER1  LMEMBER1,MEMBER1,MEMBER2,LMEMBER2
         MVC   4(1,R1),FLAGSAA    SAVE FLAGSAA TOO
         MVC   LMEMBER1(20),MEMBERD+1  RESTORE THE FIRST ELEMENT
         MVC   FLAGSAA(1),MEMBERD
         BAS   R14,DEFGROUP                    ADD DEFAULT GROUP
         B     VRTMEMX
         SPACE 1
VRTGOOD0 OI    FLAGSII,FMEMFRST   FIRST LIST ELEMENT
         TM    FLAGSHH,FMEMSTAR   ASTERISK NOTATION?
         BO    VRTGOOD1           YES, BRANCH
         TM    SPFLAG2,SPFLNCD    LINE COMMAND?   ***TEST
         BO    VRTGOOD1           YES, BRANCH     ***TEST
         MVC   PMEMMAX(4),PMEMMIN NO, POINT TO THE FIRST ELEMENT
         NI    PMEMMIN,FF-X'80'           MEMBER LIST IS INACTIVE
         SPACE 1
VRTGOOD1 TM    SPFLAG2,SPFLNCD            LINE COMMAND?        SS AUG85
         BO    VRTMEMX                    YES, TERMINATE
         MVC   MEMBERD+1(2+8+8+2),LMEMBER1  SAVE CURRENT MEMBER NAMES
         MVC   MEMBERD(1),FLAGSAA           SAVE CURRENT FLAGS
         BAS   R14,DEFGROUP                    ADD DEFAULT GROUP
         B     VRTMEMX            TERMINATE
         SPACE 2
VRTGOOD2 TM    ##ADRPA#,$M        DISPLAY OR PATTERN SUBCOMMAND?
         BNO   VRTGOOD4           NO, BRANCH
         TM    FLAGSAA,FMEM#MEM   MEMBER GROUP TO DISPLAY?
         BNO   VRTGOOD4           NO, BRANCH
         XI    FLAGSAA,FMEM#MEM   TURN OFF THE MEMBER GROUP FLAG
         L     R1,=A($DIS)
         L     R0,8(,R1)          ASSUME DISPLAY
         L     R1,=A($PAT)
         TM    FLAGSAA,FMEMRANG   CORRECT?
         BO    *+8                YES, BRANCH
         L     R0,8(,R1)          NO, PATTERN
         ST    R0,##ADRCMD        UPDATE THE PROCESSING ADDRESS
         SPACE 2
VRTGOOD4 L     R1,=A($PAT)        PATTERN
         CLC   ##SUBCOM(8),0(R1)  NEW DEFAULT PATTERN?
         BNE   VRTMEMX            NO, BRANCH
         MVC   MEMBERP+1(2+8+8+2),LMEMBER1  SAVE CURRENT MEMBER NAMES
         MVC   MEMBERP(1),FLAGSAA           SAVE CURRENT FLAGS
         B     VRTMEMX            TERMINATE
         SPACE 2
VRTBAD   LA    R15,4               INVALID MEMBER NAME -- TRY AGAIN
         TM    FLAGSAA,FMEMBER2    PROCESSING MEMBER2?
         BO    *+8                 YES, BRANCH
         NI    FLAGSAA,FF-FMEMBER1 NO, SAY NO MEMBER1 YET
         NI    FLAGSAA,FF-FMEMBER2 ALWAYS SAY NOT MEMBER2 NOW
         TM    FLAGSAA,FMEM#MEM    MEMBER GROUP REQUEST?
         BNO   VRTMEMX             NO, BRANCH
         NI    FLAGSAA,FF-FMEM#MEM-FMEMBER1-FMEMBER2-FMEMRANG-FMEMASTR
VRTMEMX  M$EXIT
         LTORG
         SPACE 2
         TITLE 'P D S  --  PDS PARSE DEFINITIONS             09/28/88'
*
*        P A R S E   C O N T R O L   L I S T
*
         PRINT NOGEN
         SPACE 3
PCLMAIN  IKJPARM DSECT=MAINPDL
INPUTDSN IKJPOSIT DSTHING,USID,VALIDCK=VRTDSN,                         $
               PROMPT='NAME OF DATA SET',                              $
               HELP=('NAME OF THE DATA SET TO BE PROCESSED')
OPTVOL   IKJKEYWD
         IKJNAME 'V',ALIAS=('VO','VOL','VOLUME'),SUBFLD=VOLNAM
OPTSET   IKJKEYWD
         IKJNAME 'VOLSET',SUBFLD=VOLSETS
OPTDISP  IKJKEYWD
         IKJNAME 'OLD'
         IKJNAME 'SHR'
OPTXISPM IKJKEYWD
         IKJNAME 'XISPMODE'
OPTCONC  IKJKEYWD
         IKJNAME  'NUMBER',SUBFLD=OPTCONCO
OPTCONCO IKJSUBF
OPTCONCC IKJIDENT 'CONCATENATION NUMBER',FIRST=NUMERIC,OTHER=NUMERIC,  $
               PROMPT='CONCATENATION NUMBER',MAXLNTH=2,                $
               HELP=('CONCATENATION NUMBER OF THE FILE NAME ENTERED')
VOLNAM   IKJSUBF
VOLNAME  IKJIDENT 'VOLUME NAME',ASTERISK,MAXLNTH=6,                    $
               FIRST=ALPHANUM,OTHER=ALPHANUM,PROMPT='VOLUME NAME',     $
               HELP=('NAME OF THE VOLUME WHERE THE DATA SET RESIDES')
VOLSETS  IKJSUBF
VOLSETID IKJIDENT 'DEFAULT VOLUME NAME',ASTERISK,MAXLNTH=6,            $
               FIRST=ALPHANUM,OTHER=ALPHANUM,                          $
               PROMPT='DEFAULT VOLUME NAME',                           $
               HELP=('DEFAULT NAME FOR THE VOLUME PARAMETER')
         IKJENDP
         SPACE 2
PCLALIAS IKJPARM DSECT=PDLALIAS
PCLAL1   IKJIDENT 'MEMBER NAME',FIRST=ANY,OTHER=ANY,MAXLNTH=19,        $
               PROMPT='CURRENT MEMBER NAME',VALIDCK=VRTMEMBR,          $
               HELP=('NAME OF THE MEMBER TO BE ASSIGNED AN ALIAS')
PCLAL2   IKJIDENT 'MEMBER NAME',FIRST=ANY,OTHER=ANY,MAXLNTH=19,        $
               PROMPT='ALIAS NAME',VALIDCK=VRTMEMBR,                   $
               HELP=('NAME TO BE ASSIGNED AS AN ALIAS')
         IKJENDP
         SPACE 2
PCLATTR  IKJPARM DSECT=PDLATTR
PCLAT1   IKJIDENT 'MEMBER NAME',FIRST=ANY,OTHER=ANY,MAXLNTH=39,LIST,   $
               PROMPT='NAME OF MEMBER',                                $
               HELP=('NAME OF THE MEMBER WHOSE ATTRIBUTES ARE TO BE LIS$
               TED'),VALIDCK=VRTMEMBR
LKEDNONE IKJKEYWD
         IKJNAME  'NONE'
         IKJNAME  'ADDSTATS'
LKEDREUS IKJKEYWD
         IKJNAME  'REUS'
         IKJNAME  'NOREUS'
LKEDREFR IKJKEYWD
         IKJNAME  'REFR'
         IKJNAME  'NOREFR'
LKEDRENT IKJKEYWD
         IKJNAME  'RENT'
         IKJNAME  'NORENT'
LKEDEXEC IKJKEYWD
         IKJNAME  'EXEC'
         IKJNAME  'NOEXEC'
LKEDLOAD IKJKEYWD
         IKJNAME  'LOADONLY'
         IKJNAME  'NOLOADONLY'
LKEDEDIT IKJKEYWD
         IKJNAME  'EDIT'
         IKJNAME  'NOEDIT'
LKEDDC   IKJKEYWD
         IKJNAME  'DC'
         IKJNAME  'NODC'
LKEDAUTH IKJKEYWD
         IKJNAME  'AUTH'
         IKJNAME  'NOAUTH'
LKEDPAGE IKJKEYWD
         IKJNAME  'PAGE'
         IKJNAME  'NOPAGE'
LKEDRLDF IKJKEYWD
         IKJNAME  'RLDFIX'
         IKJNAME  'NORLDFIX'
LKEDUNAL IKJKEYWD
         IKJNAME  'UNALIAS'
LKEDRMOD IKJKEYWD
         IKJNAME  'RMODE24'
         IKJNAME  'RMODEANY'
LKEDAMOD IKJKEYWD
         IKJNAME  'AMODE24'
         IKJNAME  'AMODE31'
         IKJNAME  'AMODEANY'
LKEDSSIK IKJKEYWD
         IKJNAME  'SSI',SUBFLD=LKEDSSIS
         IKJNAME  'NOSSI'
ATTRUS   IKJKEYWD
         IKJNAME  'USERID',ALIAS=('ID'),SUBFLD=ATTRUSE
ATTRV    IKJKEYWD
         IKJNAME  'VER',SUBFLD=ATTRVE
ATTRM    IKJKEYWD
         IKJNAME  'MOD',SUBFLD=ATTRMO
LKEDENTR IKJKEYWD
         IKJNAME  'ENTRY',SUBFLD=AENTRY
INFOALIA IKJKEYWD
         IKJNAME  'A',ALIAS=('ALIASINFO')
         IKJNAME  'NOA',ALIAS=('NOALIASINFO')
         IKJNAME  'SHORT'
INFOLKED IKJKEYWD
         IKJNAME  'LKEDDATE'
         IKJNAME  'NOLKEDDATE'
AENTRY   IKJSUBF
AENTRYS  IKJIDENT 'EXTERNAL NAME',MAXLNTH=8,FIRST=ANY,OTHER=ANY,       $
               PROMPT='THE EXTERNAL NAME OF THE NEW ENTRY POINT',      $
               HELP=('ONE TO EIGHT BYTES EXTERNAL ENTRY POINT NAME')
ATTRUSE  IKJSUBF
ATTRUSER IKJIDENT 'USER IDENTIFICATION',MAXLNTH=7,FIRST=ANY,OTHER=ANY, $
               PROMPT='THE NAME OF THE LAST MODIFYING USER',           $
               HELP=('ONE TO SEVEN CHARACTER USERID NAME')
ATTRVE   IKJSUBF
ATTRVER  IKJIDENT 'VERSION NUMBER',FIRST=NUMERIC,OTHER=NUMERIC,        $
               PROMPT='VERSION NUMBER',MAXLNTH=2,                      $
               HELP=('THE NEW MODIFICATION VERSION NUMBER')
ATTRMO   IKJSUBF
ATTRMOD  IKJIDENT 'MODIFICATION NUMBER',FIRST=NUMERIC,OTHER=NUMERIC,   $
               PROMPT='MODIFICATION NUMBER',MAXLNTH=2,                 $
               HELP=('THE NEW MODIFICATION LEVEL NUMBER')
LKEDSSIS IKJSUBF
LKEDSSI  IKJIDENT 'SSI DATA',FIRST=ALPHANUM,OTHER=ALPHANUM,MAXLNTH=8,  $
               PROMPT='THE NEW OR CHANGED SSI INFORMATION',            $
               HELP=('ONE TO EIGHT BYTES OF HEXADECIMAL SSI DATA')
         IKJENDP
         SPACE 2
PCLBROWS IKJPARM DSECT=PDLBROWS
PCLBR1   IKJIDENT 'MEMBER NAME',FIRST=ANY,OTHER=ANY,MAXLNTH=39,LIST,   $
               PROMPT='NAME OF MEMBER TO BE BROWSED',VALIDCK=VRTMEMBR, $
               HELP=('NAME OF THE MEMBER FOR THE SPF BROWSE COMMAND')
         IKJENDP
         SPACE 2
PCLCOMPA IKJPARM DSECT=PDLCOMPA
PCLCAR1  IKJIDENT 'DSNAME OR MEMBER NAME',FIRST=ANY,OTHER=ANY,         $
               MAXLNTH=56,                                             $
               PROMPT='NAME OF THE ORIGINAL DATA SET OR MEMBER',       $
               HELP=('NAME OF THE ORIGINAL DATA SET OR MEMBER')
PCLCAR2  IKJIDENT 'DSNAME OR MEMBER NAME',FIRST=ANY,OTHER=ANY,         $
               MAXLNTH=56,                                             $
               PROMPT='NAME OF THE CHANGED DATA SET OR MEMBER',        $
               HELP=('NAME OF THE CHANGED DATA SET OR MEMBER')
PCLCO2   IKJPOSIT SPACE
PCLCOSTR IKJPOSIT STRING
         IKJENDP
         SPACE 2
PCLCOMPR IKJPARM DSECT=PDLCOMPR
CMXLIST  IKJKEYWD
         IKJNAME  'S',ALIAS=('SUMMARY')
         IKJNAME  'LIST'
         IKJNAME  'NOLIST'
CMXSHARE IKJKEYWD
         IKJNAME  'SHR'
         IKJENDP
         SPACE 2
PCLCONT  IKJPARM DSECT=PDLCONT
PALINCON IKJKEYWD
         IKJNAME  'ALIASINFO'
         IKJNAME  'NOALIASINFO'
PLKEDCON IKJKEYWD
         IKJNAME  'LKEDDATE'
         IKJNAME  'NOLKEDDATE'
PTRANCON IKJKEYWD
         IKJNAME  'T',ALIAS=('TRANSLATOR')
         IKJNAME  'NOTRANSLATOR'
PPROMCON IKJKEYWD
         IKJNAME  'PROMPT'
         IKJNAME  'NOPROMPT'
PRECVCON IKJKEYWD
         IKJNAME  'RECOVER'
         IKJNAME  'NORECOVER'
PDOUBCON IKJKEYWD
         IKJNAME  'D',ALIAS=('DOUBLE')
         IKJNAME  'S',ALIAS=('SINGLE')
         IKJNAME  'M',ALIAS=('MULTIPLE')
         IKJNAME  'R',ALIAS=('RETAIN'),SUBFLD=CRETAIN
CLOGTYPE IKJKEYWD
         IKJNAME  'SYSOUT',SUBFLD=CSYSOUTO
         IKJNAME  'NOS',ALIAS=('NOSYSOUT')
         IKJNAME  'DSNAME',SUBFLD=CDSNAMEO
         IKJNAME  'NODSNAME'
CLOGDISP IKJKEYWD
         IKJNAME  'OLD'
         IKJNAME  'SHR'
         IKJNAME  'MOD'
         IKJNAME  'NEW'
CLOGFORM IKJKEYWD
         IKJNAME  'FORMS',SUBFLD=CFORMO
         IKJNAME  'NOFORMS'
CLOGDEST IKJKEYWD
         IKJNAME  'DEST',SUBFLD=CDESTO
         IKJNAME  'NODEST'
PIMMCON  IKJKEYWD
         IKJNAME  'TESTCPULOOP'  1
         IKJNAME  'TESTABEND'    2
         IKJNAME  'TESTOUTLOOP'  3
         IKJNAME  'TESTMSGS'     4
         IKJNAME  'IOSTATS'      5
         IKJNAME  'TESTREAD'     6
         IKJNAME  'ALLGLOBALS'   7
         IKJNAME  'GLOBALMODS'   8
CRETAIN  IKJSUBF
CRETAINA IKJIDENT 'BUFFERS TO RETAIN',FIRST=NUMERIC,OTHER=NUMERIC,     $
               MAXLNTH=2,                                              $
               HELP=('THE NUMBER OF TRACK BUFFERS TO RETAIN')
CDESTO   IKJSUBF
CDESTT   IKJIDENT 'DESTINATION',FIRST=ALPHANUM,OTHER=ALPHANUM,         $
               MAXLNTH=8,PROMPT='DESTINATION NAME',                    $
               HELP=('ONE TO EIGHT CHARACTER SYSOUT DESTINATION')
CFORMO   IKJSUBF
CFORMT   IKJIDENT 'FORMS NAME',FIRST=ALPHANUM,OTHER=ALPHANUM,          $
               MAXLNTH=4,PROMPT='FORMS NAME',                          $
               HELP=('ONE TO FOUR CHARACTER FORMS NAME')
CDSNAMEO IKJSUBF
CDSNAMET IKJPOSIT DSNAME,USID,PROMPT='OUTPUT DATA SET NAME',           $
               HELP=('THE NAME OF THE SESSION OUTPUT DATA SET')
CSYSOUTO IKJSUBF
CSYSOUTT IKJIDENT 'SYSOUT CLASS',FIRST=ALPHANUM,                       $
               MAXLNTH=1,PROMPT='SYSOUT CLASS NAME',                   $
               HELP=('ONE CHARACTER SYSOUT CLASS NAME')
         IKJENDP
         SPACE 2
PCLCOPY  IKJPARM DSECT=PDLCOPY
PCLCOP   IKJIDENT 'MEMBER NAME',FIRST=ANY,OTHER=ANY,MAXLNTH=39,LIST,   $
               PROMPT='NAME OF MEMBERS TO BE COPIED',VALIDCK=VRTMEMBR, $
               HELP=('NAME OF THE MEMBERS TO BE COPIED')
COPDSN2  IKJIDENT 'DSNAME OR MEMBER NAME',FIRST=ANY,OTHER=ANY,         $
               MAXLNTH=56,                                             $
               PROMPT='NAME OF THE TARGET DATA SET OR MEMBER',         $
               HELP=('NAME OF THE TARGET DATA SET OR MEMBER')
COPTRCYL IKJKEYWD
         IKJNAME  'TRACKS',ALIAS=('TRKS')
         IKJNAME  'CYLINDER'
COPEXIST IKJKEYWD
         IKJNAME  'EXIST'
         IKJNAME  'NOEXIST'
         IKJNAME  'NOBLDL'
         IKJNAME  'EXCLUDE'
COPLIST  IKJKEYWD
         IKJNAME  'SUMMARY'
         IKJNAME  'LIST'
         IKJNAME  'NOLIST'
COPDISP  IKJKEYWD
         IKJNAME  'OLD'
         IKJNAME  'SHR'
         IKJNAME  'NEW'
COPREPL  IKJKEYWD
         IKJNAME  'REPLACE'
         IKJNAME  'NOREPLACE'
COPCALL  IKJKEYWD
         IKJNAME  'CALL'
         IKJNAME  'NOCALL'
COPALIAS IKJKEYWD
         IKJNAME  'ALIAS'
         IKJNAME  'NOALIAS'
COPVOLUM IKJKEYWD
         IKJNAME  'VOLUME',SUBFLD=COPVOLU
COPASSS  IKJKEYWD
         IKJNAME  'AS',SUBFLD=COPASS
         IKJNAME  'TO',SUBFLD=COPASS
COPDIRKY IKJKEYWD
         IKJNAME  'DIR',SUBFLD=COPDIRK
COPSPAKY IKJKEYWD
         IKJNAME  'SPACE',SUBFLD=COPSPAK
COPCONKY IKJKEYWD
         IKJNAME  'N',SUBFLD=COPCONK,ALIAS=('NUMBER')
COPMAXBL IKJKEYWD
         IKJNAME  'MAXBLK',SUBFLD=COPMAXB
COPMAXB  IKJSUBF
COPMAX   IKJIDENT 'MAXIMUM BLOCKSIZE',FIRST=NUMERIC,OTHER=NUMERIC,     $
               PROMPT='MAXIMUM BLOCKSIZE',MAXLNTH=5,                   $
               HELP=('MAXIMUM ACCEPTABLE BLOCKSIZE')
COPCONK  IKJSUBF
COPCONCA IKJIDENT 'CONCATENATION NUMBER',FIRST=NUMERIC,OTHER=NUMERIC,  $
               PROMPT='CONCATENATION NUMBER',MAXLNTH=2,                $
               HELP=('THE CONCATENATION NUMBER FOR USE WITH FILE()')
COPSPAK  IKJSUBF
COPSPACE IKJIDENT 'DATA SET SIZE',LIST,FIRST=NUMERIC,OTHER=NUMERIC,    $
               PROMPT='DATA SET SIZE',MAXLNTH=5,                       $
               HELP=('THE ALLOCATION SIZES FOR PRIMARY AND SECONDARY')
COPDIRK  IKJSUBF
COPDIRCO IKJIDENT 'DIRECTORY BLOCKS',FIRST=NUMERIC,OTHER=NUMERIC,      $
               PROMPT='DIRECTORY BLOCKS',MAXLNTH=5,                    $
               HELP=('NUMBER OF DIRECTORY BLOCKS DESIRED')
COPASS   IKJSUBF
COPAS    IKJIDENT 'PARTIAL MEMBER NAME',FIRST=ALPHANUM,OTHER=ALPHANUM, $
               PROMPT='THE PARTIAL OUTPUT MEMBER NAME',MAXLNTH=8,      $
               HELP=('PATTERN NAME FOR THE OUTPUT MEMBERS')
COPVOLU  IKJSUBF
COPVOL   IKJIDENT 'VOLUME NAME',FIRST=ALPHANUM,OTHER=ALPHANUM,         $
               PROMPT='THE VOLUME NAME FOR THE OUTPUT DATA',MAXLNTH=6, $
               HELP=('THE VOLUME SERIAL FOR THE OUTPUT DATA SET')
         IKJENDP
         SPACE 2
PCLDELET IKJPARM DSECT=PDLDELET
PCLS1    IKJIDENT 'MEMBER NAME',FIRST=ANY,OTHER=ANY,MAXLNTH=39,LIST,   $
               PROMPT='NAME OF MEMBER TO BE DELETED',VALIDCK=VRTMEMBR, $
               HELP=('NAME OF THE MEMBER TO BE SCRATCHED')
PCLDELAL IKJKEYWD
         IKJNAME  'ALIAS'
         IKJNAME  'NOALIAS'
         IKJENDP
         SPACE 2
PCLDIR   IKJPARM DSECT=PDLDIR
PCLDIR1  IKJIDENT 'MEMBER NAME',FIRST=ANY,OTHER=ANY,MAXLNTH=39,LIST,   $
               PROMPT='NAME OF MEMBER',VALIDCK=VRTMEMBR,HELP=('NAME OF $
               THE MEMBER WHOSE DIRECTORY ENTRY IS TO BE DUMPED')
PCLSHOR  IKJKEYWD
         IKJNAME  'SHORT'
         IKJNAME  'LONG'
         IKJENDP
         SPACE 2
PCLDSNA  IKJPARM DSECT=PDLDSNA
PCLDSN   IKJKEYWD
         IKJNAME   'JCL',ALIAS=('BATCH')
         IKJNAME   'T',ALIAS=('TSO')
         IKJNAME   'MSG',ALIAS=('TABLE','TBL')
         IKJENDP
         SPACE 2
PCLDSPLY IKJPARM DSECT=PDL1MEM
PCLD1    IKJIDENT 'MEMBER NAME',MAXLNTH=39,                            $
               FIRST=ANY,OTHER=ANY,VALIDCK=VRTMEMBR
PCLD2    IKJIDENT 'MEMBER NAME',MAXLNTH=19,                            $
               FIRST=ANY,OTHER=ANY,VALIDCK=VRTMEMBR
         IKJENDP
         SPACE 2
PCLEDIT  IKJPARM DSECT=PDLEDIT
PCLED1   IKJIDENT 'MEMBER NAME',FIRST=ANY,OTHER=ANY,MAXLNTH=39,LIST,   $
               PROMPT='NAME OF MEMBER TO BE EDITED',VALIDCK=VRTMEMBR,  $
               HELP=('NAME OF THE MEMBER FOR THE SPF EDIT COMMAND')
SPFNEWOP IKJKEYWD
         IKJNAME  'NEW'
         IKJNAME  'OLD'
SPFMAC   IKJKEYWD
         IKJNAME  'MACRO',SUBFLD=SPFMACR
SPFPRO   IKJKEYWD
         IKJNAME  'PROFILE',SUBFLD=SPFPROF
SPFPRS   IKJKEYWD
         IKJNAME  'SETPROF',ALIAS=('SP'),SUBFLD=SPFPRSE
SPFMCS   IKJKEYWD
         IKJNAME  'SETMACRO',ALIAS=('SM'),SUBFLD=SPFMACS
SPFMACR  IKJSUBF
SPFMACRO IKJIDENT 'MACRO NAME',FIRST=ANY,OTHER=ALPHANUM,MAXLNTH=8,     $
               PROMPT='MACRO NAME',HELP=('NAME OF A EDIT MACRO')
SPFPROF  IKJSUBF
SPFPROFL IKJIDENT 'PROFILE NAME',FIRST=ALPHA,OTHER=ALPHANUM,MAXLNTH=8, $
               PROMPT='PROFILE NAME',HELP=('NAME OF A EDIT PROFILE')
SPFPRSE  IKJSUBF
SPFPRSET IKJIDENT 'DEFAULT PROFILE',ASTERISK,MAXLNTH=8,                $
               FIRST=ALPHANUM,OTHER=ALPHANUM,PROMPT='DEFAULT PROFILE', $
               HELP=('NAME OF A DEFAULT EDIT PROFILE')
SPFMACS  IKJSUBF
SPFMCSET IKJIDENT 'DEFAULT INITIAL MACRO',ASTERISK,MAXLNTH=8,          $
               FIRST=ANY,OTHER=ALPHANUM,PROMPT='DEFAULT MACRO',        $
               HELP=('NAME OF A DEFAULT INITIAL EDIT MACRO')
         IKJENDP
         SPACE 2
PCLFIND  IKJPARM DSECT=PDLFIND
PCLFIND1 IKJIDENT 'MEMBER NAME',MAXLNTH=39,FIRST=ANY,OTHER=ANY,LIST,   $
               PROMPT='NAME OF MEMBER',VALIDCK=VRTMEMBR,               $
               HELP=('NAME OF THE MEMBER TO BE SEARCHED')
FINDDLM1 IKJPOSIT DELIMITER
FINDSTRG IKJPOSIT STRING,SQSTRING,ASIS
FINDFMT  IKJKEYWD
         IKJNAME  'NUM'                   FLAGSDD=X'00'
         IKJNAME  'NONUM'                 FLAGSDD=X'01'
         IKJNAME  'SNUM'                  FLAGSDD=X'02'
         IKJNAME  'LBLOCK'                FLAGSDD=X'04'
         IKJNAME  'LDUMP'                 FLAGSDD=X'08'
         IKJNAME  'BLOCK'                 FLAGSDD=X'10'
         IKJNAME  'DUMP'                  FLAGSDD=X'20'
FINDINC  IKJKEYWD
         IKJNAME  'INC1'
         IKJNAME  'INC2'
         IKJNAME  'INC4'
         IKJNAME  'INC8'
         IKJNAME  'INC16'
         IKJNAME  'INC80'
FINDSEC  IKJKEYWD
         IKJNAME  'MODULE',SUBFLD=FDUMPC
FINDOFFT IKJKEYWD
         IKJNAME  'OFFSET',SUBFLD=FINDOFFS
FINDLIST IKJKEYWD
         IKJNAME  'FIRST'
         IKJNAME  'NOFIRST'
FINDASIS IKJKEYWD
         IKJNAME  'ASIS'
         IKJNAME  'CAPS'
FMAXLEN  IKJKEYWD
         IKJNAME  'MAXLEN',SUBFLD=FMAXLENS
FMAXIN   IKJKEYWD
         IKJNAME  'MAXIN',SUBFLD=FMAXINS
FMAXOUT  IKJKEYWD
         IKJNAME  'MAXOUT',SUBFLD=FMAXOUTS
FMAXFIN  IKJKEYWD
         IKJNAME  'MAXFIND',SUBFLD=FMAXFINS
FSKIPR   IKJKEYWD
         IKJNAME  'SKIPREC',SUBFLD=FSKIPRS
FSKIPC   IKJKEYWD
         IKJNAME  'SKIPCOL',SUBFLD=FSKIPCS
FTHENC   IKJKEYWD
         IKJNAME  'THEN',SUBFLD=FTHENCS
FELSEC   IKJKEYWD
         IKJNAME  'ELSE',SUBFLD=FELSECS
FDUMPC   IKJSUBF
FDUMPCS  IKJIDENT 'MODULE NAME',MAXLNTH=8,FIRST=ANY,OTHER=ANY,         $
               HELP=('FIRST ONE TO EIGHT CHARACTERS OF A MODULE NAME')
FINDOFFS IKJSUBF
FINDOFF  IKJIDENT 'MODULE OFFSET',FIRST=ALPHANUM,OTHER=ALPHANUM,       $
               MAXLNTH=6,PROMPT='HEXADECIMAL OFFSET',HELP=('A ONE TO SI$
               X DIGIT HEXADECIMAL OFFSET INTO THE LOAD MODULE')
FMAXLENS IKJSUBF
FMAXLENC IKJIDENT 'MAXIMUM LENGTH',FIRST=NUMERIC,OTHER=NUMERIC,        $
               PROMPT='MAXIMUM LENGTH',MAXLNTH=5,                      $
               HELP=('MAXIMUM LENGTH OF EACH INPUT RECORD')
FMAXINS  IKJSUBF
FMAXINC  IKJIDENT 'MAXIMUM INPUT',FIRST=NUMERIC,OTHER=NUMERIC,         $
               PROMPT='MAXIMUM INPUT COUNT',MAXLNTH=7,                 $
               HELP=('MAXIMUM NUMBER OF RECORDS TO INPUT')
FMAXOUTS IKJSUBF
FMAXOUTC IKJIDENT 'MAXIMUM OUTPUT',FIRST=NUMERIC,OTHER=NUMERIC,        $
               PROMPT='MAXIMUM OUTPUT RECORDS',MAXLNTH=7,              $
               HELP=('MAXIMUM NUMBER OF LINES OR PARTIAL RECORDS TO DIS$
               PLAY')
FMAXFINS IKJSUBF
FMAXFIND IKJIDENT 'MAXIMUM FIND STRINGS',FIRST=NUMERIC,OTHER=NUMERIC,  $
               PROMPT='MAXIMUM FIND STRINGS',MAXLNTH=7,                $
               HELP=('MAXIMUM NUMBER OF STRINGS TO FIND BEFORE TERMINAT$
               ING')
FSKIPRS  IKJSUBF
FSKIPRC  IKJIDENT 'SKIP COUNT',FIRST=NUMERIC,OTHER=NUMERIC,            $
               PROMPT='RECORDS TO SKIP',MAXLNTH=7,                     $
               HELP=('NUMBER OF INPUT RECORDS TO IGNORE')
FSKIPCS  IKJSUBF
FSKIPCC  IKJIDENT 'SKIP COLUMNS',FIRST=NUMERIC,OTHER=NUMERIC,          $
               PROMPT='COLUMNS TO SKIP',MAXLNTH=5,                     $
               HELP=('THE NUMBER OF BEGINNING COLUMNS TO IGNORE')
FTHENCS  IKJSUBF
FTHENCC  IKJKEYWD
&NATT    CONDIKJ '&NATT'
&NBRO    CONDIKJ '&NBRO'
&NDIR    CONDIKJ '&NDIR'
&NDEL    CONDIKJ '&NDEL'
&NDSP    CONDIKJ '&NDSP'
&NEDI    CONDIKJ '&NEDI'
&NEND    CONDIKJ '&NEND'
&NFIN    CONDIKJ '&NFIN'
&NFSE    CONDIKJ '&NFSE'
&NHIS    CONDIKJ '&NHIS'
&NLIS    CONDIKJ '&NLIS'
&NMAP    CONDIKJ '&NMAP'
&NMEM    CONDIKJ '&NMEM'
&NMML    CONDIKJ '&NMML'
&IMLX    CONDIKJ '&IMLX'
&NOUT    CONDIKJ '&NOUT'
&NPRI    CONDIKJ '&NPRI'
&NREV    CONDIKJ '&NREV'
&NSPF    CONDIKJ '&NSPF'
&NSUB    CONDIKJ '&NSUB'
&NSUL    CONDIKJ '&NSUL'
&NTSE    CONDIKJ '&NTSE'
&NTSL    CONDIKJ '&NTSL'
&NVER    CONDIKJ '&NVER'
         SPACE 1
FELSECS  IKJSUBF
FELSECC  IKJKEYWD
&NATT    CONDIKJ '&NATT'
&NBRO    CONDIKJ '&NBRO'
&NDIR    CONDIKJ '&NDIR'
&NDEL    CONDIKJ '&NDEL'
&NDSP    CONDIKJ '&NDSP'
&NEDI    CONDIKJ '&NEDI'
&NEND    CONDIKJ '&NEND'
&NFIN    CONDIKJ '&NFIN'
&NFSE    CONDIKJ '&NFSE'
&NHIS    CONDIKJ '&NHIS'
&NLIS    CONDIKJ '&NLIS'
&NMAP    CONDIKJ '&NMAP'
&NMEM    CONDIKJ '&NMEM'
&NMML    CONDIKJ '&NMML'
&IMLX    CONDIKJ '&IMLX'
&NOUT    CONDIKJ '&NOUT'
&NPRI    CONDIKJ '&NPRI'
&NREV    CONDIKJ '&NREV'
&NSPF    CONDIKJ '&NSPF'
&NSUB    CONDIKJ '&NSUB'
&NSUL    CONDIKJ '&NSUL'
&NTSE    CONDIKJ '&NTSE'
&NTSL    CONDIKJ '&NTSL'
&NVER    CONDIKJ '&NVER'
         IKJENDP
         SPACE 2
PCLFIX   IKJPARM DSECT=PDLFIX
PCLFIXOP IKJKEYWD
         IKJNAME  'DCB'
         IKJNAME  'RESETDIR',SUBFLD=RDIRZ
         IKJNAME  'INITDIR',SUBFLD=RDIRZ
         IKJNAME  'EXPANDDIR',SUBFLD=RDIRZ
         IKJNAME  'FREEDIR',SUBFLD=RDIRZ
PCLRELOP IKJKEYWD
         IKJNAME  'RELEASE'
         IKJNAME  'RELSAVE',SUBFLD=RRES
         IKJNAME  'RELEXTENT'
         IKJNAME  'MAXSPACE'
PCLADDOP IKJKEYWD
         IKJNAME  'ADDTRK',SUBFLD=RTRKS
         IKJNAME  'ADDCYL',SUBFLD=RTRKS
PCLFIXCK IKJKEYWD
         IKJNAME  'CHECK'
         IKJNAME  'NOCHECK'
RTYPE    IKJKEYWD
         IKJNAME  'LOAD'
         IKJNAME  'OBJECT'
         IKJNAME  'CLIST'
         IKJNAME  'CNTL'
         IKJNAME  'ASM'
RLRECL   IKJKEYWD
         IKJNAME  'LRECL',SUBFLD=RLRECLZ
RBLKSI   IKJKEYWD
         IKJNAME  'BLKSIZE',SUBFLD=RBLKSIZ,                            $
               ALIAS=('BLOCKSIZE','B','BL')
RRECFM   IKJKEYWD
         IKJNAME  'RECFM',SUBFLD=RRECFMZ
ROPTCD   IKJKEYWD
         IKJNAME  'OPTCD',SUBFLD=ROPTCDZ
         IKJNAME  'NOOPTCD'
RTRKS    IKJSUBF
RTRKSI   IKJIDENT 'NUMBER OF UNITS',FIRST=NUMERIC,OTHER=NUMERIC,       $
               HELP=('NUMBER OF TRACKS OR CYLINDERS TO ADD'),MAXLNTH=5
RDIRZ    IKJSUBF
RDIRZI   IKJIDENT 'DIRECTORY BLOCKS',FIRST=NUMERIC,OTHER=NUMERIC,      $
               HELP=('NUMBER OF DIRECTORY BLOCKS'),MAXLNTH=5
RRES     IKJSUBF
RRESV    IKJIDENT 'RESERVE TRACKS',FIRST=NUMERIC,OTHER=NUMERIC,        $
               MAXLNTH=5,PROMPT='NUMBER OF TRACKS',                    $
               HELP=('NUMBER OF TRACKS TO SAVE FOR LATER USE')
RLRECLZ  IKJSUBF
RLRECLZI IKJIDENT 'LOGICAL RECORD LENGTH',FIRST=NUMERIC,OTHER=NUMERIC, $
               PROMPT='LOGICAL RECORD LENGTH',MAXLNTH=5,               $
               HELP=('DATA SET LOGICAL RECORD LENGTH DESIRED')
RBLKSIZ  IKJSUBF
RBLKSIZI IKJIDENT 'BLOCK SIZE',FIRST=NUMERIC,OTHER=NUMERIC,            $
               PROMPT='BLOCK SIZE',MAXLNTH=5,                          $
               HELP=('DATA SET BLOCKSIZE DESIRED')
RRECFMZ  IKJSUBF
RRECFMZI IKJKEYWD
         IKJNAME  'F'       X'80'     B'1000 0000'
         IKJNAME  'FB'      X'90'     B'1001 0000'
         IKJNAME  'FT'      X'A0'     B'1010 0000'
         IKJNAME  'FBT'     X'B0'     B'1011 0000'
         IKJNAME  'FA'      X'84'     B'1000 0100'
         IKJNAME  'FBA'     X'94'     B'1001 0100'
         IKJNAME  'FTA'     X'A4'     B'1010 0100'
         IKJNAME  'FBTA'    X'B4'     B'1011 0100'
         IKJNAME  'FM'      X'82'     B'1000 0010'
         IKJNAME  'FBM'     X'92'     B'1001 0010'
         IKJNAME  'FTM'     X'A2'     B'1010 0010'
         IKJNAME  'FBTM'    X'B2'     B'1011 0010'
         IKJNAME  'V'       X'40'     B'0100 0000'
         IKJNAME  'VB'      X'50'     B'0101 0000'
         IKJNAME  'VT'      X'60'     B'0110 0000'
         IKJNAME  'VBT'     X'70'     B'0111 0000'
         IKJNAME  'VA'      X'44'     B'0100 0100'
         IKJNAME  'VBA'     X'54'     B'0101 0100'
         IKJNAME  'VTA'     X'64'     B'0110 0100'
         IKJNAME  'VBTA'    X'74'     B'0111 0100'
         IKJNAME  'VM'      X'42'     B'0100 0010'
         IKJNAME  'VBM'     X'52'     B'0101 0010'
         IKJNAME  'VTM'     X'62'     B'0110 0010'
         IKJNAME  'VBTM'    X'72'     B'0111 0010'
         IKJNAME  'U'       X'C0'     B'1100 0000'
         IKJNAME  'UT'      X'E0'     B'1110 0000'
         IKJNAME  'UA'      X'C4'     B'1100 0100'
         IKJNAME  'UM'      X'C2'     B'1100 0010'
         IKJNAME  'UTA'     X'E4'     B'1110 0100'
         IKJNAME  'UTM'     X'E2'     B'1110 0010'
ROPTCDZ  IKJSUBF
ROPTCDZI IKJKEYWD
         IKJNAME  'W'       X'80'
         IKJNAME  'WC'      X'A0'
         IKJNAME  'WS'      X'84'
         IKJNAME  'WCZ'     X'A4'
         IKJNAME  'WZC'     X'A4'
         IKJNAME  'C'       X'20'
         IKJNAME  'CS'      X'24'
         IKJNAME  'CW'      X'A0'
         IKJNAME  'CWZ'     X'A4'
         IKJNAME  'CZW'     X'A4'
         IKJNAME  'Z'       X'04'
         IKJNAME  'ZC'      X'24'
         IKJNAME  'ZW'      X'84'
         IKJNAME  'ZWC'     X'A4'
         IKJNAME  'ZCW'     X'A4'
         IKJENDP
         SPACE 2
PCLHIST  IKJPARM DSECT=PDLHIST
PCLH1    IKJIDENT 'MEMBER NAME',FIRST=ANY,OTHER=ANY,MAXLNTH=39,LIST,   $
               PROMPT='NAME OF MEMBER',VALIDCK=VRTMEMBR,HELP=('NAME OF $
               THE LOAD MODULE WHOSE HISTORY IS TO BE LISTED')
PCLHTRNK IKJKEYWD
         IKJNAME  'TRANS',SUBFLD=PCLHTRNS
PCLHZAPK IKJKEYWD
         IKJNAME  'ZAP',SUBFLD=PCLHZAPS
PCLHUSRK IKJKEYWD
         IKJNAME  'USERDATA',SUBFLD=PCLHUSRS
         IKJNAME  'SYSMOD',SUBFLD=PCLHUSRS
PCLHLKDK IKJKEYWD
         IKJNAME  'LKED',SUBFLD=PCLHLKDS
PCLHMODK IKJKEYWD
         IKJNAME  'MODULE',SUBFLD=PCLHMODS
PCLHMODS IKJSUBF
PCLHMOD  IKJIDENT 'MODULE NAME',MAXLNTH=8,FIRST=ANY,OTHER=ANY,         $
               HELP=('FIRST ONE TO EIGHT CHARACTERS OF A MODULE NAME')
PCLHUSRS IKJSUBF
PCLHUSR  IKJIDENT 'IDR USER DATA',FIRST=ANY,OTHER=ANY,MAXLNTH=8,       $
               HELP=('FIRST ONE TO EIGHT CHARACTERS OF IDR USER DATA')
PCLHLKDS IKJSUBF
PCLHLKD  IKJIDENT 'LINKAGE EDITOR',FIRST=ANY,OTHER=ANY,                $
               MAXLNTH=10,HELP=('FIRST ONE TO TEN CHARACTERS OF A LINKA$
               GE EDITOR NAME')
PCLHZAPS IKJSUBF
PCLHZAP  IKJIDENT 'ZAP IDRDATA NAME',FIRST=ANY,OTHER=ANY,MAXLNTH=8,    $
               HELP=('FIRST ONE TO EIGHT CHARACTERS OF ZAP IDRDATA')
PCLHTRNS IKJSUBF
PCLHTRN  IKJIDENT 'TRANSLATOR NAME',FIRST=ANY,OTHER=ANY,               $
               MAXLNTH=10,HELP=('FIRST ONE TO TEN CHARACTERS OF A TRANS$
               LATOR (ASSEMBLER OR COMPILER) NAME')
         IKJENDP
         SPACE 2
PCLIFTTR IKJPARM DSECT=PDLIFTTR
PCLIFT1  IKJIDENT 'MEMBER NAME',FIRST=ANY,OTHER=ANY,MAXLNTH=39,LIST,   $
               PROMPT='NAME OF MEMBER',                                $
               HELP=('NAME OF THE MEMBER WHOSE ATTRIBUTES ARE TO BE CHE$
               CKED'),VALIDCK=VRTMEMBR
IFLKREUS IKJKEYWD
         IKJNAME  'REUS'
         IKJNAME  'NOREUS'
IFLKREFR IKJKEYWD
         IKJNAME  'REFR'
         IKJNAME  'NOREFR'
IFLKRENT IKJKEYWD
         IKJNAME  'RENT'
         IKJNAME  'NORENT'
IFLKEXEC IKJKEYWD
         IKJNAME  'EXEC'
         IKJNAME  'NOEXEC'
IFLKLOAD IKJKEYWD
         IKJNAME  'LOADONLY'
         IKJNAME  'NOLOADONLY'
IFLKEDIT IKJKEYWD
         IKJNAME  'EDIT'
         IKJNAME  'NOEDIT'
IFLKAUTH IKJKEYWD
         IKJNAME  'AUTH'
         IKJNAME  'NOAUTH'
IFLKPAGE IKJKEYWD
         IKJNAME  'PAGE'
         IKJNAME  'NOPAGE'
IFLKOVER IKJKEYWD
         IKJNAME  'OVERLAY'
         IKJNAME  'NOOVERLAY'
IFLKTEST IKJKEYWD
         IKJNAME  'TEST'
         IKJNAME  'NOTEST'
IFRLD0   IKJKEYWD
         IKJNAME  'RLDZERO'
         IKJNAME  'NORLDZERO'
IFAPFERR IKJKEYWD
         IKJNAME  'APFERR'
         IKJNAME  'NOAPFERR'
IFRLDERR IKJKEYWD
         IKJNAME  'RLDERR'
         IKJNAME  'NORLDERR'
IFLKSCTR IKJKEYWD
         IKJNAME  'SCTR'
         IKJNAME  'NOSCTR'
IFLKLKED IKJKEYWD
         IKJNAME  'FLEVEL'
         IKJNAME  'NOFLEVEL'
IFLKVSLE IKJKEYWD
         IKJNAME  'VSLKED'
         IKJNAME  'NOVSLKED'
IFLKDC   IKJKEYWD
         IKJNAME  'DC'
         IKJNAME  'NODC'
IFLKALIA IKJKEYWD
         IKJNAME  'ALIAS'
         IKJNAME  'NOALIAS'
IFLOADER IKJKEYWD
         IKJNAME  'LOADERR'
         IKJNAME  'NOLOADERR'
IFLKEDER IKJKEYWD
         IKJNAME  'LKEDERR'
         IKJNAME  'NOLKEDERR'
IFIOERR  IKJKEYWD
         IKJNAME  'IOERR'
         IKJNAME  'NOIOERR'
IFBLKERR IKJKEYWD
         IKJNAME  'BLOCKERR'
         IKJNAME  'MAXBLK',SUBFLD=IFTMAXB
         IKJNAME  'NOBLOCKERR'
IFLRECLE IKJKEYWD
         IKJNAME  'LRECLERR'
         IKJNAME  'NOLRECLERR'
IFNULL   IKJKEYWD
         IKJNAME  'NULL'
         IKJNAME  'NONULL'
IFAALIAS IKJKEYWD
         IKJNAME  'APPARENTALIAS'
         IKJNAME  'NOAPPARENTALIAS'
IFORPHAN IKJKEYWD
         IKJNAME  'ORPHAN'
         IKJNAME  'NOORPHAN'
IFHASALI IKJKEYWD
         IKJNAME  'HASALIAS'
         IKJNAME  'NOHASALIAS'
IFSPFEDT IKJKEYWD
         IKJNAME  'SPFEDIT'
         IKJNAME  'NOSPFEDIT'
IFNAMERR IKJKEYWD
         IKJNAME  'NAMEERR'
         IKJNAME  'NONAMEERR'
IFRLDF   IKJKEYWD
         IKJNAME  'RLDFIX'
         IKJNAME  'NORLDFIX'
IFRMODE  IKJKEYWD
         IKJNAME  'RMODE24'
         IKJNAME  'RMODEANY'
         IKJNAME  'NORMODE24'
         IKJNAME  'NORMODEANY'
IFAMODE  IKJKEYWD
         IKJNAME  'AMODE24'
         IKJNAME  'AMODE31'
         IKJNAME  'AMODEANY'
         IKJNAME  'NOAMODE24'
         IKJNAME  'NOAMODE31'
         IKJNAME  'NOAMODEANY'
IFEXTERN IKJKEYWD
         IKJNAME  'WKEXTERN'
         IKJNAME  'EXTERN'
IFLKSSI  IKJKEYWD
         IKJNAME  'SSI',SUBFLD=IFTSSIS
         IKJNAME  'NOSSI'
         IKJNAME  'PARTSSI',SUBFLD=IFTSSIS
IFTUSERK IKJKEYWD
         IKJNAME  'USERID',ALIAS=('ID'),SUBFLD=IFTUSERS
         IKJNAME  'NOUSERID',ALIAS=('NOID')
         IKJNAME  'NOTUSERID',ALIAS=('NOTID'),SUBFLD=IFTUSERS
IFTHENC  IKJKEYWD
         IKJNAME  'THEN',SUBFLD=IFTHENCS
IFELSEC  IKJKEYWD
         IKJNAME  'ELSE',SUBFLD=IFELSECS
IFTLTRNK IKJKEYWD
         IKJNAME  'TRANS',SUBFLD=IFTLTRNS
IFTLZAPK IKJKEYWD
         IKJNAME  'ZAP',SUBFLD=IFTLZAPS
IFTLUSRK IKJKEYWD
         IKJNAME  'USERDATA',SUBFLD=IFTLUSRS
         IKJNAME  'SYSMOD',SUBFLD=IFTLUSRS
IFTLMODK IKJKEYWD
         IKJNAME  'MODULE',SUBFLD=IFTLMODS
IFTLKEDK IKJKEYWD
         IKJNAME  'LKED',SUBFLD=IFTLKEDS
IFTTTRK  IKJKEYWD
         IKJNAME  'TTR',SUBFLD=IFTTTRS
IFABOKY  IKJKEYWD
         IKJNAME  'ABOVE',SUBFLD=IFABOSB
IFBELKY  IKJKEYWD
         IKJNAME  'BELOW',SUBFLD=IFBELSB
IFCREKY  IKJKEYWD
         IKJNAME  'CREATED',SUBFLD=IFCRESB
IFMODKY  IKJKEYWD
         IKJNAME  'CHANGED',SUBFLD=IFMODSB
IFFROMKY IKJKEYWD
         IKJNAME  'FROM',ALIAS=('SINCE') FROM (DATE) TO CURRENT
         IKJNAME  'TO'         FROM FIRST TO SPECIFICATION
         IKJNAME  'BEFORE'     FROM FIRST TO SPECIFICATION
IFDATEKY IKJKEYWD
         IKJNAME  'TODAY',ALIAS=('PREV0')         1
         IKJNAME  'YESTERDAY',ALIAS=('PREV1')     2
         IKJNAME  'PREV2'      LAST   2 DAYS      3
         IKJNAME  'PREV3'      LAST   3 DAYS      4
         IKJNAME  'PREV4'      LAST   4 DAYS      5
         IKJNAME  'PREV5'      LAST   5 DAYS      6
         IKJNAME  'PREV6'      LAST   6 DAYS      7
         IKJNAME  'WEEK',ALIAS=('PREV7')          8
         IKJNAME  'PREV8'      LAST   8 DAYS      9
         IKJNAME  'PREV9'      LAST   9 DAYS     10
         IKJNAME  'CURRENT',ALIAS=('PREV10')     11
         IKJNAME  'PREV11'     LAST  11 DAYS     12
         IKJNAME  'PREV12'     LAST  12 DAYS     13
         IKJNAME  'PREV13'     LAST  13 DAYS     14
         IKJNAME  'BIWEEK',ALIAS=('PREV14')      15
         IKJNAME  'MONTH'      LAST  30 DAYS     16
         IKJNAME  'QUARTER'    LAST  90 DAYS     17
         IKJNAME  'HALFYEAR'   LAST 183 DAYS     18
         IKJNAME  'YEAR'       LAST 365 DAYS     19
         IKJNAME  'BIYEAR'     LAST 730 DAYS     20
         IKJNAME  'LAST',SUBFLD=IFLASTSB         21
         IKJNAME  'DATE',SUBFLD=IFDATESB         22
IFDATESB IKJSUBF
IFDATESU IKJIDENT 'DATE',                                              $
               RANGE,FIRST=ANY,OTHER=ANY,CHAR,                         $
               PROMPT='DATE CHANGED',MAXLNTH=08,VALIDCK=VRTDATE,       $
               HELP=('THE DATE TO USE -- LIKE 86/12/15 OR 86349')
IFLASTSB IKJSUBF
IFLASTSU IKJIDENT 'LAST NUMBER',FIRST=NUMERIC,OTHER=NUMERIC,           $
               PROMPT='NUMBER OF DAYS',MAXLNTH=5,                      $
               HELP=('NUMBER OF PREVIOUS DAYS')
IFMODSB  IKJSUBF
IFMODSUB IKJIDENT 'MODIFICATION DATE RANGE',                           $
               RANGE,FIRST=ANY,OTHER=ANY,CHAR,                         $
               PROMPT='DATE CHANGED',MAXLNTH=17,VALIDCK=VRTDATE,       $
               HELP=('THE MODIFICATION DATE RANGE TO SEARCH --11/14/84:$
               3/15/85')
IFCRESB  IKJSUBF
IFCRESUB IKJIDENT 'CREATION DATE RANGE',                               $
               RANGE,FIRST=ALPHANUM,OTHER=ANY,                         $
               PROMPT='DATE CREATED',MAXLNTH=17,VALIDCK=VRTDATE,       $
               HELP=('THE CREATION DATE RANGE TO SEARCH --11/14/84:3/15$
               /85')
IFABOSB  IKJSUBF
IFABOSUB IKJIDENT 'MINIMUM SIZE',FIRST=NUMERIC,OTHER=NUMERIC,          $
               PROMPT='MINIMUM SIZE',MAXLNTH=9,                        $
               HELP=('MINIMUM SIZE OF A DESIRED MEMBER')
IFBELSB  IKJSUBF
IFBELSUB IKJIDENT 'MAXIMUM SIZE',FIRST=NUMERIC,OTHER=NUMERIC,          $
               PROMPT='MAXIMUM SIZE',MAXLNTH=9,                        $
               HELP=('MAXIMUM SIZE OF A DESIRED MEMBER')
IFTTTRS  IKJSUBF
IFTTTR   IKJIDENT 'TTR RANGE',RANGE,FIRST=ALPHANUM,OTHER=ALPHANUM,     $
               MAXLNTH=6,PROMPT='HEXADECIMAL TTR',HELP=('THE LOW:HIGH H$
               ADECIMAL TTR ADDRESS RANGE OF THE MEMBER ENTRIES')
IFTLKEDS IKJSUBF
IFTLKED  IKJIDENT 'LINKAGE EDITOR',FIRST=ANY,OTHER=ANY,                $
               MAXLNTH=10,HELP=('FIRST ONE TO TEN CHARACTERS OF A LINKA$
               GE EDITOR NAME')
IFTLMODS IKJSUBF
IFTLMOD  IKJIDENT 'MODULE NAME',MAXLNTH=8,FIRST=ANY,OTHER=ANY,         $
               HELP=('FIRST ONE TO EIGHT CHARACTERS OF A MODULE NAME')
IFTLUSRS IKJSUBF
IFTLUSR  IKJIDENT 'IDR USER DATA',FIRST=ANY,OTHER=ANY,MAXLNTH=8,       $
               HELP=('FIRST ONE TO EIGHT CHARACTERS OF IDR USER DATA')
IFTLZAPS IKJSUBF
IFTLZAP  IKJIDENT 'ZAP IDRDATA NAME',FIRST=ANY,OTHER=ANY,MAXLNTH=8,    $
               HELP=('FIRST ONE TO EIGHT CHARACTERS OF ZAP IDRDATA')
IFTLTRNS IKJSUBF
IFTLTRN  IKJIDENT 'TRANSLATOR NAME',FIRST=ANY,OTHER=ANY,               $
               MAXLNTH=10,HELP=('FIRST ONE TO TEN CHARACTERS OF A TRANS$
               LATOR (ASSEMBLER OR COMPILER) NAME')
IFTUSERS IKJSUBF
IFTUSER  IKJIDENT 'TSO USERID',FIRST=ALPHA,OTHER=ALPHANUM,MAXLNTH=7,   $
               HELP=('FIRST ONE TO SEVEN CHARACTERS OF A TSO USERID')
IFTSSIS  IKJSUBF
IFTSSI   IKJIDENT 'SSI DATA',FIRST=ALPHANUM,OTHER=ALPHANUM,MAXLNTH=8,  $
               HELP=('ONE TO EIGHT BYTES OF HEXADECIMAL SSI DATA')
IFTMAXB  IKJSUBF
IFTMAXBL IKJIDENT 'MAXIMUM BLOCKSIZE',FIRST=NUMERIC,OTHER=NUMERIC,     $
               PROMPT='MAXIMUM BLOCKSIZE',MAXLNTH=5,                   $
               HELP=('MAXIMUM ACCEPTABLE BLOCKSIZE')
IFTHENCS IKJSUBF
IFTHENCC IKJKEYWD
&NATT    CONDIKJ '&NATT'
&NBRO    CONDIKJ '&NBRO'
&NDIR    CONDIKJ '&NDIR'
&NDEL    CONDIKJ '&NDEL'
&NDSP    CONDIKJ '&NDSP'
&NEDI    CONDIKJ '&NEDI'
&NEND    CONDIKJ '&NEND'
&NFIN    CONDIKJ '&NFIN'
&NFSE    CONDIKJ '&NFSE'
&NHIS    CONDIKJ '&NHIS'
&NLIS    CONDIKJ '&NLIS'
&NMAP    CONDIKJ '&NMAP'
&NMEM    CONDIKJ '&NMEM'
&NMML    CONDIKJ '&NMML'
&IMLX    CONDIKJ '&IMLX'
&NOUT    CONDIKJ '&NOUT'
&NPRI    CONDIKJ '&NPRI'
&NREV    CONDIKJ '&NREV'
&NSPF    CONDIKJ '&NSPF'
&NSUB    CONDIKJ '&NSUB'
&NSUL    CONDIKJ '&NSUL'
&NTSE    CONDIKJ '&NTSE'
&NTSL    CONDIKJ '&NTSL'
&NVER    CONDIKJ '&NVER'
         SPACE 1
IFELSECS IKJSUBF
IFELSECC IKJKEYWD
&NATT    CONDIKJ '&NATT'
&NBRO    CONDIKJ '&NBRO'
&NDIR    CONDIKJ '&NDIR'
&NDEL    CONDIKJ '&NDEL'
&NDSP    CONDIKJ '&NDSP'
&NEDI    CONDIKJ '&NEDI'
&NEND    CONDIKJ '&NEND'
&NFIN    CONDIKJ '&NFIN'
&NFSE    CONDIKJ '&NFSE'
&NHIS    CONDIKJ '&NHIS'
&NLIS    CONDIKJ '&NLIS'
&NMAP    CONDIKJ '&NMAP'
&NMEM    CONDIKJ '&NMEM'
&NMML    CONDIKJ '&NMML'
&IMLX    CONDIKJ '&IMLX'
&NOUT    CONDIKJ '&NOUT'
&NPRI    CONDIKJ '&NPRI'
&NREV    CONDIKJ '&NREV'
&NSPF    CONDIKJ '&NSPF'
&NSUB    CONDIKJ '&NSUB'
&NSUL    CONDIKJ '&NSUL'
&NTSE    CONDIKJ '&NTSE'
&NTSL    CONDIKJ '&NTSL'
&NVER    CONDIKJ '&NVER'
         IKJENDP
         SPACE 2
PCLISPF  IKJPARM DSECT=PDLISPF
PCLISSTR IKJPOSIT STRING
         IKJENDP
         SPACE 2
PCLLIST  IKJPARM DSECT=PDLLIST
PCLL1    IKJIDENT 'MEMBER NAME',FIRST=ANY,OTHER=ANY,MAXLNTH=39,LIST,   $
               PROMPT='NAME OF MEMBER',                                $
               HELP=('NAME OF THE MEMBER TO BE LISTED'),               $
               VALIDCK=VRTMEMBR
LISTFMT  IKJKEYWD
         IKJNAME  'NUM'                   FLAGSDD=X'00'
         IKJNAME  'NONUM'                 FLAGSDD=X'01'
         IKJNAME  'SNUM'                  FLAGSDD=X'02'
         IKJNAME  'LBLOCK'                FLAGSDD=X'04'
         IKJNAME  'LDUMP'                 FLAGSDD=X'08'
         IKJNAME  'BLOCK'                 FLAGSDD=X'10'
         IKJNAME  'DUMP'                  FLAGSDD=X'20'
LISTSEC  IKJKEYWD
         IKJNAME  'MODULE',SUBFLD=LDUMPC
LISTOFFT IKJKEYWD
         IKJNAME  'OFFSET',SUBFLD=LISTOFFS
LMAXLEN  IKJKEYWD
         IKJNAME  'MAXLEN',SUBFLD=LMAXLENS
LMAXIN   IKJKEYWD
         IKJNAME  'MAXIN',SUBFLD=LMAXINS
LMAXOUT  IKJKEYWD
         IKJNAME  'MAXOUT',SUBFLD=LMAXOUTS
LSKIPR   IKJKEYWD
         IKJNAME  'SKIPREC',SUBFLD=LSKIPRS
LSKIPC   IKJKEYWD
         IKJNAME  'SKIPCOL',SUBFLD=LSKIPCS
LDUMPC   IKJSUBF
LDUMPCS  IKJIDENT 'MODULE NAME',MAXLNTH=8,FIRST=ANY,OTHER=ANY,         $
               HELP=('FIRST ONE TO EIGHT CHARACTERS OF A MODULE NAME')
LISTOFFS IKJSUBF
LISTOFF  IKJIDENT 'MODULE OFFSET',FIRST=ALPHANUM,OTHER=ALPHANUM,       $
               MAXLNTH=6,PROMPT='HEXADECIMAL OFFSET',HELP=('A ONE TO SI$
               X DIGIT HEXADECIMAL OFFSET INTO THE LOAD MODULE')
LMAXLENS IKJSUBF
LMAXLENC IKJIDENT 'MAXIMUM LENGTH',FIRST=NUMERIC,OTHER=NUMERIC,        $
               PROMPT='MAXIMUM LENGTH',MAXLNTH=5,                      $
               HELP=('MAXIMUM LENGTH OF EACH INPUT RECORD')
LMAXINS  IKJSUBF
LMAXINC  IKJIDENT 'MAXIMUM INPUT',FIRST=NUMERIC,OTHER=NUMERIC,         $
               PROMPT='MAXIMUM INPUT COUNT',MAXLNTH=7,                 $
               HELP=('MAXIMUM NUMBER OF RECORDS TO INPUT')
LMAXOUTS IKJSUBF
LMAXOUTC IKJIDENT 'MAXIMUM OUTPUT',FIRST=NUMERIC,OTHER=NUMERIC,        $
               PROMPT='MAXIMUM OUTPUT RECORDS',MAXLNTH=7,              $
               HELP=('MAXIMUM NUMBER OF RECORDS TO DISPLAY')
LSKIPRS  IKJSUBF
LSKIPRC  IKJIDENT 'SKIP COUNT',FIRST=NUMERIC,OTHER=NUMERIC,            $
               PROMPT='RECORDS TO SKIP',MAXLNTH=7,                     $
               HELP=('NUMBER OF INPUT RECORDS TO IGNORE')
LSKIPCS  IKJSUBF
LSKIPCC  IKJIDENT 'SKIP COLUMNS',FIRST=NUMERIC,OTHER=NUMERIC,          $
               PROMPT='COLUMNS TO SKIP',MAXLNTH=5,                     $
               HELP=('THE NUMBER OF BEGINNING COLUMNS TO IGNORE')
         IKJENDP
         SPACE 2
PCLMAP   IKJPARM DSECT=PDLMAP
PCLM1    IKJIDENT 'MEMBER NAME',FIRST=ANY,OTHER=ANY,MAXLNTH=39,LIST,   $
               PROMPT='NAME OF MEMBER TO BE MAPPED',                   $
               HELP=('NAME OF THE MEMBER WHOSE LOAD MODULE MAP IS TO BE$
                PRODUCED'),VALIDCK=VRTMEMBR
PCLMAPOP IKJKEYWD
         IKJNAME  'FULL'
         IKJNAME  'SHORT'
         IKJNAME  'ENTRYPOINT'
         IKJNAME  'RELINK',ALIAS=('JCL')
PCLMMODK IKJKEYWD
         IKJNAME  'MODULE',SUBFLD=PCLMMODS
PCLMMODS IKJSUBF
PCLMMOD  IKJIDENT 'MODULE NAME',MAXLNTH=8,FIRST=ANY,OTHER=ANY,         $
               HELP=('FIRST ONE TO EIGHT CHARACTERS OF A MODULE NAME')
         IKJENDP
         SPACE 2
PCLMEMB  IKJPARM DSECT=PDLMEMB
PCLMEM   IKJIDENT 'MEMBER NAME',FIRST=ANY,OTHER=ANY,MAXLNTH=39,LIST,   $
               PROMPT='MEMBER GROUP',VALIDCK=VRTMEMBR,HELP=('THE MEMBER$
                GROUP TO BE DISPLAYED')
MEMBERC  IKJKEYWD
         IKJNAME  'COUNT'
         IKJNAME  'NOCOUNT'
         IKJENDP
         SPACE 2
PCLMEML  IKJPARM DSECT=PDLMEML
PCLMEMZ  IKJIDENT 'MEMBER NAME',FIRST=ANY,OTHER=ANY,MAXLNTH=39,LIST,   $
               PROMPT='MEMBER GROUP',VALIDCK=VRTMEMBR,HELP=('THE MEMBER$
                GROUP TO BE DISPLAYED')
MEMLRES  IKJKEYWD
         IKJNAME  'RESET'
         IKJNAME  'NORESET'
MEMLLKD  IKJKEYWD
         IKJNAME  'LKEDDATE'
         IKJNAME  'NOLKEDDATE'
MLLKREUS IKJKEYWD
         IKJNAME  'REUS'
         IKJNAME  'NOREUS'
MLLKREFR IKJKEYWD
         IKJNAME  'REFR'
         IKJNAME  'NOREFR'
MLLKRENT IKJKEYWD
         IKJNAME  'RENT'
         IKJNAME  'NORENT'
MLLKEXEC IKJKEYWD
         IKJNAME  'EXEC'
         IKJNAME  'NOEXEC'
MLLKLOAD IKJKEYWD
         IKJNAME  'LOADONLY'
         IKJNAME  'NOLOADONLY'
MLLKEDIT IKJKEYWD
         IKJNAME  'EDIT'
         IKJNAME  'NOEDIT'
MLLKAUTH IKJKEYWD
         IKJNAME  'AUTH'
         IKJNAME  'NOAUTH'
MLLKPAGE IKJKEYWD
         IKJNAME  'PAGE'
         IKJNAME  'NOPAGE'
MLLKOVER IKJKEYWD
         IKJNAME  'OVERLAY'
         IKJNAME  'NOOVERLAY'
MLLKTEST IKJKEYWD
         IKJNAME  'TEST'
         IKJNAME  'NOTEST'
MLLKSCTR IKJKEYWD
         IKJNAME  'SCTR'
         IKJNAME  'NOSCTR'
MLLKLKED IKJKEYWD
         IKJNAME  'FLEVEL'
         IKJNAME  'NOFLEVEL'
MLLKVSLE IKJKEYWD
         IKJNAME  'VSLKED'
         IKJNAME  'NOVSLKED'
MLLKDC   IKJKEYWD
         IKJNAME  'DC'
         IKJNAME  'NODC'
MLLKALIA IKJKEYWD
         IKJNAME  'ALIAS'
         IKJNAME  'NOALIAS'
MLAALIAS IKJKEYWD
         IKJNAME  'APPARENTALIAS'
         IKJNAME  'NOAPPARENTALIAS'
MLORPHAN IKJKEYWD
         IKJNAME  'ORPHAN'
         IKJNAME  'NOORPHAN'
MLHASALI IKJKEYWD
         IKJNAME  'HASALIAS'
         IKJNAME  'NOHASALIAS'
MLRMODE  IKJKEYWD
         IKJNAME  'RMODE24'
         IKJNAME  'RMODEANY'
         IKJNAME  'NORMODE24'
         IKJNAME  'NORMODEANY'
MLAMODE  IKJKEYWD
         IKJNAME  'AMODE24'
         IKJNAME  'AMODE31'
         IKJNAME  'AMODEANY'
         IKJNAME  'NOAMODE24'
         IKJNAME  'NOAMODE31'
         IKJNAME  'NOAMODEANY'
MLLKSSI  IKJKEYWD
         IKJNAME  'SSI',SUBFLD=MLTSSIS
         IKJNAME  'NOSSI'
         IKJNAME  'PARTSSI',SUBFLD=MLTSSIS
MLTUSERK IKJKEYWD
         IKJNAME  'USERID',ALIAS=('ID'),SUBFLD=MLTUSERS
         IKJNAME  'NOUSERID',ALIAS=('NOID')
         IKJNAME  'NOTUSERID',ALIAS=('NOTID'),SUBFLD=MLTUSERS
MLTLTRNK IKJKEYWD
         IKJNAME  'TRANS',SUBFLD=MLTLTRNS
MLTLZAPK IKJKEYWD
         IKJNAME  'ZAP',SUBFLD=MLTLZAPS
MLTLUSRK IKJKEYWD
         IKJNAME  'USERDATA',SUBFLD=MLTLUSRS
         IKJNAME  'SYSMOD',SUBFLD=MLTLUSRS
MLTLMODK IKJKEYWD
         IKJNAME  'MODULE',SUBFLD=MLTLMODS
MLTLKEDK IKJKEYWD
         IKJNAME  'LKED',SUBFLD=MLTLKEDS
MLTTTRK  IKJKEYWD
         IKJNAME  'TTR',SUBFLD=MLTTTRS
MLABOKY  IKJKEYWD
         IKJNAME  'ABOVE',SUBFLD=MLABOSB
MLBELKY  IKJKEYWD
         IKJNAME  'BELOW',SUBFLD=MLBELSB
MLCREKY  IKJKEYWD
         IKJNAME  'CREATED',SUBFLD=MLCRESB
MLMODKY  IKJKEYWD
         IKJNAME  'CHANGED',SUBFLD=MLMODSB
MLFROMKY IKJKEYWD
         IKJNAME  'FROM',ALIAS=('SINCE') FROM (DATE) TO CURRENT
         IKJNAME  'TO'         FROM FIRST TO SPECIFICATION
         IKJNAME  'BEFORE'     FROM FIRST TO SPECIFICATION
MLDATEKY IKJKEYWD
         IKJNAME  'TODAY',ALIAS=('PREV0')         1
         IKJNAME  'YESTERDAY',ALIAS=('PREV1')     2
         IKJNAME  'PREV2'      LAST   2 DAYS      3
         IKJNAME  'PREV3'      LAST   3 DAYS      4
         IKJNAME  'PREV4'      LAST   4 DAYS      5
         IKJNAME  'PREV5'      LAST   5 DAYS      6
         IKJNAME  'PREV6'      LAST   6 DAYS      7
         IKJNAME  'WEEK',ALIAS=('PREV7')          8
         IKJNAME  'PREV8'      LAST   8 DAYS      9
         IKJNAME  'PREV9'      LAST   9 DAYS     10
         IKJNAME  'CURRENT',ALIAS=('PREV10')     11
         IKJNAME  'PREV11'     LAST  11 DAYS     12
         IKJNAME  'PREV12'     LAST  12 DAYS     13
         IKJNAME  'PREV13'     LAST  13 DAYS     14
         IKJNAME  'BIWEEK',ALIAS=('PREV14')      15
         IKJNAME  'MONTH'      LAST  30 DAYS     16
         IKJNAME  'QUARTER'    LAST  90 DAYS     17
         IKJNAME  'HALFYEAR'   LAST 183 DAYS     18
         IKJNAME  'YEAR'       LAST 365 DAYS     19
         IKJNAME  'BIYEAR'     LAST 730 DAYS     20
         IKJNAME  'LAST',SUBFLD=MLLASTSB         21
         IKJNAME  'DATE',SUBFLD=MLDATESB         22
MLDATESB IKJSUBF
MLDATESU IKJIDENT 'DATE',                                              $
               RANGE,FIRST=ANY,OTHER=ANY,CHAR,                         $
               PROMPT='DATE CHANGED',MAXLNTH=08,VALIDCK=VRTDATE,       $
               HELP=('THE DATE TO USE -- LIKE 86/12/15 OR 86349')
MLLASTSB IKJSUBF
MLLASTSU IKJIDENT 'LAST NUMBER',FIRST=NUMERIC,OTHER=NUMERIC,           $
               PROMPT='NUMBER OF DAYS',MAXLNTH=5,                      $
               HELP=('NUMBER OF PREVIOUS DAYS')
MLMODSB  IKJSUBF
MLMODSUB IKJIDENT 'MODIFICATION DATE RANGE',                           $
               RANGE,FIRST=ANY,OTHER=ANY,CHAR,                         $
               PROMPT='DATE CHANGED',MAXLNTH=17,VALIDCK=VRTDATE,       $
               HELP=('THE MODIFICATION DATE RANGE TO SEARCH --11/14/84:$
               3/15/85')
MLCRESB  IKJSUBF
MLCRESUB IKJIDENT 'CREATION DATE RANGE',                               $
               RANGE,FIRST=ALPHANUM,OTHER=ANY,                         $
               PROMPT='DATE CREATED',MAXLNTH=17,VALIDCK=VRTDATE,       $
               HELP=('THE CREATION DATE RANGE TO SEARCH --11/14/84:3/15$
               /85')
MLABOSB  IKJSUBF
MLABOSUB IKJIDENT 'MINIMUM SIZE',FIRST=NUMERIC,OTHER=NUMERIC,          $
               PROMPT='MINIMUM SIZE',MAXLNTH=9,                        $
               HELP=('MINIMUM SIZE OF A DESIRED MEMBER')
MLBELSB  IKJSUBF
MLBELSUB IKJIDENT 'MAXIMUM SIZE',FIRST=NUMERIC,OTHER=NUMERIC,          $
               PROMPT='MAXIMUM SIZE',MAXLNTH=9,                        $
               HELP=('MAXIMUM SIZE OF A DESIRED MEMBER')
MLTTTRS  IKJSUBF
MLTTTR   IKJIDENT 'TTR RANGE',RANGE,FIRST=ALPHANUM,OTHER=ALPHANUM,     $
               MAXLNTH=6,PROMPT='HEXADECIMAL TTR',HELP=('THE LOW:HIGH H$
               ADECIMAL TTR ADDRESS RANGE OF THE MEMBER ENTRIES')
MLTLKEDS IKJSUBF
MLTLKED  IKJIDENT 'LINKAGE EDITOR',FIRST=ANY,OTHER=ANY,                $
               MAXLNTH=10,HELP=('FIRST ONE TO TEN CHARACTERS OF A LINKA$
               GE EDITOR NAME')
MLTLMODS IKJSUBF
MLTLMOD  IKJIDENT 'MODULE NAME',MAXLNTH=8,FIRST=ANY,OTHER=ANY,         $
               HELP=('FIRST ONE TO EIGHT CHARACTERS OF A MODULE NAME')
MLTLUSRS IKJSUBF
MLTLUSR  IKJIDENT 'IDR USER DATA',FIRST=ANY,OTHER=ANY,MAXLNTH=8,       $
               HELP=('FIRST ONE TO EIGHT CHARACTERS OF IDR USER DATA')
MLTLZAPS IKJSUBF
MLTLZAP  IKJIDENT 'ZAP IDRDATA NAME',FIRST=ANY,OTHER=ANY,MAXLNTH=8,    $
               HELP=('FIRST ONE TO EIGHT CHARACTERS OF ZAP IDRDATA')
MLTLTRNS IKJSUBF
MLTLTRN  IKJIDENT 'TRANSLATOR NAME',FIRST=ANY,OTHER=ANY,               $
               MAXLNTH=10,HELP=('FIRST ONE TO TEN CHARACTERS OF A TRANS$
               LATOR (ASSEMBLER OR COMPILER) NAME')
MLTUSERS IKJSUBF
MLTUSER  IKJIDENT 'TSO USERID',FIRST=ALPHA,OTHER=ALPHANUM,MAXLNTH=7,   $
               HELP=('FIRST ONE TO SEVEN CHARACTERS OF A TSO USERID')
MLTSSIS  IKJSUBF
MLTSSI   IKJIDENT 'SSI DATA',FIRST=ALPHANUM,OTHER=ALPHANUM,MAXLNTH=8,  $
               HELP=('ONE TO EIGHT BYTES OF HEXADECIMAL SSI DATA')
MLTMAXB  IKJSUBF
         IKJENDP
         SPACE 2
PCLOUT   IKJPARM DSECT=PDLOUT
PCLOUT1  IKJIDENT 'MEMBER NAME',FIRST=ANY,OTHER=ANY,MAXLNTH=39,LIST,   $
               PROMPT='NAME OF MEMBER',VALIDCK=VRTMEMBR,HELP=('NAME OF $
               THE MEMBER TO OUTPUT TO FILE(PDSOUT)')
OUTCLOS  IKJKEYWD
         IKJNAME  'CLOSE'
         IKJNAME  'NOCLOSE'
OUTECHO  IKJKEYWD
         IKJNAME  'ECHO'
         IKJNAME  'NOECHO'
OUTASS   IKJKEYWD
         IKJNAME  'ALIAS'
         IKJNAME  'NOALIAS'
OUTIEB   IKJKEYWD
         IKJNAME  'IEBUPDTE'
         IKJNAME  'NOIEBUPDTE'
OUTOPTN  IKJKEYWD
         IKJNAME  'TEXT',SUBFLD=OUTTEX
         IKJNAME  'NOTEXT'
OUTTEX   IKJSUBF
OUTTEXT  IKJPOSIT QSTRING,PROMPT='OUTPUT IDENTIFIER',                  $
               HELP=('AN IDENTIFICATION STRING FOR OUTPUT SELECT STATEM$
               ENTS')
         IKJENDP
         SPACE 2
PCLPATTR IKJPARM DSECT=PDL2MEM
PCLPAT1  IKJIDENT 'PATTERN NAME',MAXLNTH=39,VALIDCK=VRTMEMBR,LIST,     $
               HELP=('PATTERN CHARACTERS FOR A DIRECTORY SEARCH'),     $
               FIRST=ANY,OTHER=ANY,PROMPT='PATTERN NAME'
PCLPAT2  IKJIDENT 'PATTERN NAME',MAXLNTH=19,VALIDCK=VRTMEMBR,          $
               FIRST=ANY,OTHER=ANY
         IKJENDP
         SPACE 2
PCLPRINT IKJPARM DSECT=PDLPRINT
PCLPR1   IKJIDENT 'MEMBER NAME',FIRST=ANY,OTHER=ANY,MAXLNTH=39,LIST,   $
               PROMPT='NAME OF MEMBER',VALIDCK=VRTMEMBR,               $
               HELP=('NAME OF THE MEMBER FOR THE COMMAND')
PCLPR2   IKJPOSIT SPACE
PCLPRSTR IKJPOSIT STRING
         IKJENDP
         SPACE 2
PCLRENAM IKJPARM DSECT=PDLRENAM
PCLREN1  IKJIDENT 'MEMBER NAME',FIRST=ANY,OTHER=ANY,MAXLNTH=19,        $
               PROMPT='CURRENT MEMBER NAME',VALIDCK=VRTMEMBR,          $
               HELP=('NAME OF THE MEMBER TO BE RENAMED')
PCLREN2  IKJIDENT 'MEMBER NAME',FIRST=ANY,OTHER=ANY,MAXLNTH=19,        $
               PROMPT='NEW MEMBER NAME',VALIDCK=VRTMEMBR,              $
               HELP=('A NEW NAME FOR THE MEMBER')
PCLRENSW IKJKEYWD
         IKJNAME  'SWAP'
         IKJNAME  'NOSWAP'
PCLRENGP IKJKEYWD
         IKJNAME  'GROUP'
         IKJNAME  'NOGROUP'
PCLREP   IKJKEYWD
         IKJNAME  'REPBY',SUBFLD=PCLREPB
PCLREPB  IKJSUBF
PCLREPBY IKJIDENT 'REPLACEMENT MEMBER',FIRST=ALPHA,OTHER=ALPHANUM,     $
               MAXLNTH=8,PROMPT='REPLACEMENT MEMBER NAME',             $
               HELP=('NAME OF REPLACEMENT MEMBER')
         IKJENDP
         SPACE 2
PCLREPL  IKJPARM DSECT=PDLREPL
PCLREPLT IKJIDENT 'MEMBER NAME',MAXLNTH=39,FIRST=ANY,OTHER=ANY,LIST,   $
               PROMPT='NAME OF MEMBER',VALIDCK=VRTMEMBR,               $
               HELP=('NAME OF THE MEMBER TO BE CHANGED')
REPLDLM1 IKJPOSIT DELIMITER
REPLSTR1 IKJPOSIT STRING,SQSTRING,ASIS
REPLSTR2 IKJPOSIT STRING,SQSTRING,ASIS
REPLFMT  IKJKEYWD
         IKJNAME  'NUM'                   FLAGSDD=X'00'
         IKJNAME  'NONUM'                 FLAGSDD=X'01'
         IKJNAME  'SNUM'                  FLAGSDD=X'02'
         IKJNAME  'LBLOCK'                FLAGSDD=X'04'
         IKJNAME  'LDUMP'                 FLAGSDD=X'08'
         IKJNAME  'BLOCK'                 FLAGSDD=X'10'
         IKJNAME  'DUMP'                  FLAGSDD=X'20'
REPLINC  IKJKEYWD
         IKJNAME  'INC1'
         IKJNAME  'INC2'
         IKJNAME  'INC4'
         IKJNAME  'INC8'
         IKJNAME  'INC16'
         IKJNAME  'INC80'
REPLSEC  IKJKEYWD
         IKJNAME  'MODULE',SUBFLD=RDUMPC
REPLOFFT IKJKEYWD
         IKJNAME  'OFFSET',SUBFLD=REPLOFFS
REPLREP  IKJKEYWD
         IKJNAME  'WRITE'
         IKJNAME  'NOWRITE'
REPLSTAT IKJKEYWD
         IKJNAME  'STATS'
         IKJNAME  'NOSTATS'
REPLASIS IKJKEYWD
         IKJNAME  'ASIS'
         IKJNAME  'CAPS'
RMAXLEN  IKJKEYWD
         IKJNAME  'MAXLEN',SUBFLD=RMAXLENS
RMAXIN   IKJKEYWD
         IKJNAME  'MAXIN',SUBFLD=RMAXINS
RMAXOUT  IKJKEYWD
         IKJNAME  'MAXOUT',SUBFLD=RMAXOUTS
RMAXFIN  IKJKEYWD
         IKJNAME  'MAXFIND',SUBFLD=RMAXFINS
RSKIPR   IKJKEYWD
         IKJNAME  'SKIPREC',SUBFLD=RSKIPRS
RSKIPC   IKJKEYWD
         IKJNAME  'SKIPCOL',SUBFLD=RSKIPCS
RDUMPC   IKJSUBF
RDUMPCS  IKJIDENT 'MODULE NAME',MAXLNTH=8,FIRST=ANY,OTHER=ANY,         $
               HELP=('FIRST ONE TO EIGHT CHARACTERS OF A MODULE NAME')
REPLOFFS IKJSUBF
REPLOFF  IKJIDENT 'MODULE OFFSET',FIRST=ALPHANUM,OTHER=ALPHANUM,       $
               MAXLNTH=6,PROMPT='HEXADECIMAL OFFSET',HELP=('A ONE TO SI$
               X DIGIT HEXADECIMAL OFFSET INTO THE LOAD MODULE')
RMAXLENS IKJSUBF
RMAXLENC IKJIDENT 'MAXIMUM LENGTH',FIRST=NUMERIC,OTHER=NUMERIC,        $
               PROMPT='MAXIMUM LENGTH',MAXLNTH=5,                      $
               HELP=('MAXIMUM LENGTH OF EACH INPUT RECORD')
RMAXINS  IKJSUBF
RMAXINC  IKJIDENT 'MAXIMUM INPUT',FIRST=NUMERIC,OTHER=NUMERIC,         $
               PROMPT='MAXIMUM INPUT COUNT',MAXLNTH=7,                 $
               HELP=('MAXIMUM NUMBER OF RECORDS TO INPUT')
RMAXOUTS IKJSUBF
RMAXOUTC IKJIDENT 'MAXIMUM OUTPUT',FIRST=NUMERIC,OTHER=NUMERIC,        $
               PROMPT='MAXIMUM OUTPUT RECORDS',MAXLNTH=7,              $
               HELP=('MAXIMUM NUMBER OF LINES OR PARTIAL RECORDS TO DIS$
               PLAY')
RMAXFINS IKJSUBF
RMAXFIND IKJIDENT 'MAXIMUM FIND STRINGS',FIRST=NUMERIC,OTHER=NUMERIC,  $
               PROMPT='MAXIMUM FIND STRINGS',MAXLNTH=7,                $
               HELP=('MAXIMUM NUMBER OF STRINGS TO FIND AND UPDATE')
RSKIPRS  IKJSUBF
RSKIPRC  IKJIDENT 'SKIP COUNT',FIRST=NUMERIC,OTHER=NUMERIC,            $
               PROMPT='RECORDS TO SKIP',MAXLNTH=7,                     $
               HELP=('NUMBER OF INPUT RECORDS TO IGNORE')
RSKIPCS  IKJSUBF
RSKIPCC  IKJIDENT 'SKIP COLUMNS',FIRST=NUMERIC,OTHER=NUMERIC,          $
               PROMPT='COLUMNS TO SKIP',MAXLNTH=5,                     $
               HELP=('THE NUMBER OF BEGINNING COLUMNS TO IGNORE')
         IKJENDP
         SPACE 2
PCLREPRO IKJPARM DSECT=PDLREPRO
PCLRPR   IKJIDENT 'MEMBER NAME',FIRST=ANY,OTHER=ANY,MAXLNTH=39,LIST,   $
               VALIDCK=VRTMEMBR,                                       $
               PROMPT='NAME OF MEMBERS TO BE REPRODUCED',              $
               HELP=('NAME OF THE MEMBERS TO BE REPRODUCED')
RPRADDZ  IKJKEYWD
         IKJNAME  'ADDZAP'
         IKJNAME  'NOADDZAP'
RPRREPL  IKJKEYWD
         IKJNAME  'REPLACE'
         IKJNAME  'NOREPLACE'
RPRALIAS IKJKEYWD
         IKJNAME  'ALIAS'
         IKJNAME  'NOALIAS'
RPRMAXBL IKJKEYWD
         IKJNAME  'MAXBLK',SUBFLD=RPRMAXB
RPRTOSS  IKJKEYWD
         IKJNAME  'AS',SUBFLD=RPRTOS
         IKJNAME  'TO',SUBFLD=RPRTOS
RPRTOS   IKJSUBF
RPRTO    IKJIDENT 'PARTIAL MEMBER NAME',FIRST=ALPHANUM,OTHER=ALPHANUM, $
               PROMPT='THE PARTIAL OUTPUT MEMBER NAME',MAXLNTH=8,      $
               HELP=('PATTERN NAME FOR THE OUTPUT MEMBERS')
RPRMAXB  IKJSUBF
RPRMAX   IKJIDENT 'MAXIMUM BLOCKSIZE',FIRST=NUMERIC,OTHER=NUMERIC,     $
               PROMPT='MAXIMUM BLOCKSIZE',MAXLNTH=5,                   $
               HELP=('MAXIMUM ACCEPTABLE BLOCKSIZE')
         IKJENDP
         SPACE 2
PCLRESTO IKJPARM DSECT=PDLRESTO
PCLRSNAM IKJIDENT 'MEMBER NAME',FIRST=ANY,OTHER=ANY,MAXLNTH=19,        $
               PROMPT='NAME OF MEMBER TO RESTORE',VALIDCK=VRTMEMBR,    $
               HELP=('NAME OF THE MEMBER TO BE RESURRECTED')
PCLRSREP IKJKEYWD
         IKJNAME  'REPEAT'
         IKJNAME  'NOREPEAT'
PCLRSDIS IKJKEYWD
         IKJNAME  'DISPLAY'
         IKJNAME  'NODISPLAY'
PCLRSPRO IKJKEYWD
         IKJNAME  'PROMPT'
         IKJNAME  'NOPROMPT'
PCLRESTK IKJKEYWD
         IKJNAME  'LIKE',SUBFLD=PCLRESTS
PCLTTR   IKJKEYWD
         IKJNAME  'TTR',SUBFLD=PCLTTRK
PCLRFI   IKJKEYWD
         IKJNAME  'FIND',SUBFLD=PCLRFIN
PCLRMODK IKJKEYWD
         IKJNAME  'MODULE',SUBFLD=PCLRMODS
PCLRN    IKJKEYWD
         IKJNAME  'COUNT',SUBFLD=PCLRNU
PCLRNU   IKJSUBF
PCLRNUM  IKJIDENT 'NUMBER OF LINES',FIRST=NUMERIC,OTHER=NUMERIC,       $
               PROMPT='NUMBER OF DISPLAY LINES',MAXLNTH=3,             $
               HELP=('MAXIMUM NUMBER OF LINES TO DISPLAY')
PCLRMODS IKJSUBF
PCLRMOD  IKJIDENT 'MODULE NAME',MAXLNTH=8,FIRST=ANY,OTHER=ANY,         $
               HELP=('FIRST ONE TO EIGHT CHARACTERS OF A MODULE NAME')
PCLRFIN  IKJSUBF
PCLRFIND IKJPOSIT QSTRING,PROMPT='SEARCH STRING',                      $
               HELP=('A SEARCH STRING TO FIND IN RESTORE CANDIDATES')
PCLTTRK  IKJSUBF
PCLTTRKY IKJIDENT 'TTR ADDRESS',FIRST=ALPHANUM,OTHER=ALPHANUM,         $
               PROMPT='HEXADECIMAL TTR',MAXLNTH=6,VALIDCK=VRTMEMBR,    $
               HELP=('THE START ADDRESS OF THE MEMBER TO BE RESTORED')
PCLRESTS IKJSUBF
PCLREST  IKJIDENT 'MEMBER NAME',FIRST=ALPHA,OTHER=ALPHANUM,MAXLNTH=8,  $
               PROMPT='MEMBER NAME',HELP=('NAME OF A MODEL MEMBER')
         IKJENDP
         SPACE 2
PCLSUBL  IKJPARM DSECT=PDLSUBL
PCLSUBH  IKJIDENT 'MEMBER NAME',FIRST=ANY,OTHER=ANY,MAXLNTH=39,LIST,   $
               PROMPT='MEMBER GROUP',VALIDCK=VRTMEMBR,HELP=('THE MEMBER$
                GROUP TO BE DEFINED')
PCLSUBAL IKJKEYWD
         IKJNAME  'ALIAS'
         IKJNAME  'NOALIAS'
         IKJENDP
         SPACE 2
PCLTSOED IKJPARM DSECT=PDLTSOED
PCLTSOE1 IKJIDENT 'MEMBER NAME',MAXLNTH=39,FIRST=ANY,OTHER=ANY,LIST,   $
               PROMPT='NAME OF MEMBER TO EDIT',VALIDCK=VRTMEMBR,       $
               HELP=('NAME OF THE MEMBER FOR THE TSO EDIT COMMAND')
PCLNON   IKJKEYWD
         IKJNAME  'NONUM'
PCLASIS  IKJKEYWD
         IKJNAME  'ASIS'
PCLEDOP  IKJKEYWD
         IKJNAME  'NEW'
         IKJNAME  'OLD'
         SPACE 1
**    THE FOLLOWING ORDERED TABLE MUST CORRESPOND WITH "EDITTYPE"
**
**     DATA SET TYPE VS. EDIT DATA TYPE RULES ARE FROM "HELP EDIT S"
**
PCLTYPE  IKJKEYWD
         IKJNAME  'DATA'
** INSERT INSTALLATION-ADDED DATA SET TYPES HERE AND IN "EDITTYPE"
         IKJNAME  'LIST'        ADDED LOCALLY AS A EDIT DATA SET TYPE
         IKJNAME  'VSBASIC'     NEW VS BASIC
         IKJNAME  'BASIC'
         IKJNAME  'IPLI'
         IKJNAME  'TEXT'
         IKJNAME  'COBOL'
         IKJNAME  'ASM'
         IKJNAME  'CLIST'
         IKJNAME  'CNTL'
         IKJNAME  'PLI'          $  -- DATA TYPE .PLI
* END OF VALID DATA SET TYPES
         IKJNAME  'PLIF'         $        (DEFAULT EDIT TYPE IS PLI)
         IKJNAME  'FORTE'    *
         IKJNAME  'FORTG'    *
         IKJNAME  'FORTGI'   *  -- DATA TYPE .FORT
         IKJNAME  'FORTH'    *        (DEFAULT EDIT TYPE IS GOFORT)
         IKJNAME  'GOFORT'   *
         IKJENDP
         SPACE 2
PCLVERIF IKJPARM DSECT=PDLVERIF
PCLVERMM IKJIDENT 'MEMBER NAME',FIRST=ANY,OTHER=ANY,MAXLNTH=39,LIST,   $
               PROMPT='NAME OF MEMBER',VALIDCK=VRTMEMBR,HELP=('NAME OF $
               THE MEMBER TO VERIFIED')
VERLOAD  IKJKEYWD
         IKJNAME  'LOAD'
         IKJNAME  'NOLOAD'
VERINPUT IKJKEYWD
         IKJNAME  'INPUT',ALIAS=('READ')
         IKJNAME  'NOINPUT',ALIAS=('NOREAD')
VERNAME  IKJKEYWD
         IKJNAME  'NAME'
         IKJNAME  'NONAME'
VERUPDT  IKJKEYWD
         IKJNAME  'UPDATE'
         IKJNAME  'NOUPDATE'
VERSTATS IKJKEYWD
         IKJNAME  'STATS'
         IKJNAME  'NOSTATS'
VERNLKD  IKJKEYWD
         IKJNAME  'LKED'
         IKJNAME  'NOLKED'
VERSIZE  IKJKEYWD
         IKJNAME  'SUMMARY'
         IKJNAME  'NOSUMMARY'
VERMAX   IKJKEYWD
         IKJNAME  'MAXBLK',SUBFLD=VERMAXB
VERMAXB  IKJSUBF
VERMAXBL IKJIDENT 'MAXIMUM BLOCKSIZE',FIRST=NUMERIC,OTHER=NUMERIC,     $
               PROMPT='MAXIMUM BLOCKSIZE',MAXLNTH=5,                   $
               HELP=('MAXIMUM ACCEPTABLE BLOCKSIZE')
         IKJENDP
         SPACE 3
         COPY  #MDSECT
         SPACE 3
         IKJDFPL
         SPACE 3
         IKJDFPB
         SPACE 3
         IKJPPL
         SPACE 3
         IKJUPT
.NOGEN   END
