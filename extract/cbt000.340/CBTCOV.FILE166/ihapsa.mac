*
*        %GOTO PSAL1;    /*
         MACRO
         IHAPSA &DSECT=YES     */
*%PSAL1 : ;
*
*/* **************************************************************** */
*/*                                                                  */
*/*            PREFIXED SAVE AREA                                    */
*/*                                                                  */
*/*  OS/VS2 RELEASE 3, 12/06/74, LEVEL=3                             */
*/*                                                                  */
*/*  METHOD OF ACCESS                                                */
*/*      BAL  - DSECT IS PRODUCED UNLESS DSECT=NO IS SPECIFIED.      */
*/*             USING ON PSA GIVES ADDRESSABILITY FOR ALL SYMBOLS.   */
*/*      PL/S - PSA WILL BE BASED(0) FOR PL/S I OR LOCATION(0) FOR   */
*/*             PL/S II UNLESS %PSABASE IS SET TO SOME OTHER VALUE   */
*/*             BEFORE INCLUDE FOR MACRO.                            */
*/*                                                                  */
*/*  NOTE                                                            */
*/*      THE LABELS BEGINNING WITH PSA OR FLC ARE THE PROPER LABELS  */
*/*      TO USE.  THE OTHER LABELS ARE GIVEN AS ALIAS NAMES FOR      */
*/*      COMPATIBILITY WITH LABELS USED FOR SYSTEM 360 LOW CORE.     */
*/*                                                                  */
*/* **************************************************************** */
*
*%GOTO PSAL2;   /*
         SPACE 1
         AIF   ('&DSECT' EQ 'NO').PSA0010
PSA      DSECT
         AGO   .PSA0020
.PSA0010 ANOP
IEAVFX00 CSECT
         ENTRY SVCOPSW,PIOPSW,PINPSW,IEATCBP
         DS    0D
PSA      EQU   *
         USING PSA,0
.PSA0020 ANOP
FLC      EQU   *
FLCIPPSW DS    0CL8 -         IPL PSW
FLCRNPSW DC    XL4'040E0000' -RESTART NEW PSW (AFTER IPL)        MDC001
         DC    V(IEAVRSTR) -  SECOND HALF OF RESTART NEW PSW     MDC128
IPLPSW   EQU   FLCIPPSW --- ALIAS
FLCICCW1 DS    0CL8 -         IPL CCW1
FLCROPSW DC    XL8'00' -      RESTART OLD PSW (AFTER IPL)
FLCICCW2 DS    0CL8 -         IPL CCW2
FLCCVT   DC    V(IEACVT) -    ADDRESS OF CVT (AFTER IPL)
         DC    XL4'00' -      RESERVED (AFTER IPL)
FLCEOPSW DC    XL8'00' -      EXTERNAL OLD PSW
EXOPSW   EQU   FLCEOPSW --- ALIAS
FLCSOPSW DC    XL8'00' -      SVC OLD PSW
SVCOPSW  EQU   FLCSOPSW --- ALIAS
FLCPOPSW DC    XL8'00' -      PROGRAM CHECK OLD PSW
PIOPSW   EQU   FLCPOPSW --- ALIAS
FLCMOPSW DC    XL8'00' -      MACHINE CHECK OLD PSW
MCOPSW   EQU   FLCMOPSW --- ALIAS
FLCIOPSW DC    XL8'00' -      INPUT/OUTPUT OLD PSW
IOOPSW   EQU   FLCIOPSW --- ALIAS
FLCCSW   DC    XL8'00' -      CHANNEL STATUS WORD
FLCCAW   DC    XL4'00' -      CHANNEL ADDRESS WORD
FLCCVT2  DC    V(IEACVT) -    ADDRESS OF CVT - USED BY DUMP
*                             ROUTINES                           ICB319
FLCTIMER DC    XL4'FFFFFFFF' -TIMER
TIMER    EQU   FLCTIMER
FLCTRACE DC    A(0) -         ADDRESS OF TRACE TABLE HEADER      YM2703
FLCENPSW DC    XL4'040C0000' -EXTERNAL NEW PSW
         DC    V(IEAQEX00) -  SECOND HALF OF EXTERNAL NEW PSW
EXNPSW   EQU   FLCENPSW --- ALIAS
FLCSNPSW DC    XL4'040C0000' -SVC NEW PSW
         DC    V(IEAQSC00) -  SECOND HALF OF SVC NEW PSW
SVCNPSW  EQU   FLCSNPSW --- ALIAS
FLCPNPSW DC    XL4'000E0000' -PROGRAM CHECK NEW PSW              MDC002
         DC    V(IEAQPK00) -  SECOND HALF OF PROGRAM CHECK NEW PSW
PINPSW   EQU   FLCPNPSW --- ALIAS
FLCMNPSW DC    XL4'00080000' -MACHINE CHECK NEW PSW              MDC003
         DC    V(IGFPMCIH) -  SECOND HALF OF MACHINE CHECK NEW PSW
*                                                                MDC003
MCNPSW   EQU   FLCMNPSW --- ALIAS
FLCINPSW DC    XL4'040C0000' -INPUT/OUTPUT NEW PSW
         DC    V(IEAQIO00) -  SECOND HALF OF I/O NEW PSW
IONPSW   EQU   FLCINPSW --- ALIAS
         DC    XL4'00' -      RESERVED
PSAEEPSW DS    0F -           EXTENDED PSW DATA STORED ON EXTERNAL
*                             INTERRUPT                          MDC084
PSASPAD  DC    H'0' -         ISSUING PROCESSOR'S PHYSICAL ADDRESS ON
*                             EMS OR EXTERNAL CALL INTERRUPT     MDC046
FLCEICOD DC    H'0' -         EXTERNAL INTERRUPTION CODE
EXCODE   EQU   FLCEICOD --- ALIAS
PSAESPSW DS    0F -           EXTENDED PSW DATA STORED ON SVC
*                             INTERRUPT                          MDC085
         DC    XL1'00' -      RESERVED - SET TO ZERO
FLCSVILC DC    FL1'0' -       SVC INSTRUCTION LENGTH COUNTER -
*                             NUMBER OF BYTES                    MDC079
FLCSILCB EQU   X'07' -        SIGNIFICANT BITS IN ILC FIELD - LAST
*                             BIT IS ALWAYS ZERO                 MDC080
SVCILC   EQU   FLCSVILC --- ALIAS
FLCSVCN  DC    H'0' -         SVC INTERRUPTION CODE - SVC NUMBER MDC081
SVCNUM   EQU   FLCSVCN --- ALIAS
PSAEPPSW DS    0CL8 -         EXTENDED PSW FOR PROGRAM INTERRUPT MDC086
         DC    XL1'00' -      RESERVED - SET TO ZERO
FLCPIILC DC    FL1'0' -       PROGRAM INTERRUPT LENGTH COUNTER -
*                             NUMBER OF BYTES IN INSTRUCTION CAUSING
*                             PROGRAM INTERRUPTION               MDC082
FLCPILCB EQU   X'07' -        SIGNIFICANT BITS IN ILC FIELD - LAST
*                             BIT IS ALWAYS ZERO                 MDC083
PIILC    EQU   FLCPIILC --- ALIAS
FLCPICOD DS    0H -           PROGRAM INTERRUPTION CODE
PICODE   EQU   FLCPICOD --- ALIAS
PSARV049 DC    XL1'00' -      RESERVED FOR IMPRECISE INTERRUPTS  MDC087
PSAPICOD DC    FL1'0' -       8-BIT INTERRUPT CODE               MDC088
PSAPIPER EQU   X'80' -        PER INTERRUPT OCCURRED             MDC089
PSAPIMC  EQU   X'40' -        MONITOR CALL INTERRUPT OCCURRED    MDC090
PSAPIPC  EQU   X'3F' -        AN UNSOLICITED PROGRAM CHECK HAS
*                             OCCURRED IF ANY OF THESE 6 BITS ARE
*                             ON                                 MDC091
FLCTEA   DS    0A -           TRANSLATION EXCEPTION ADDRESS
         DC    XL1'00' -      RESERVED - SET TO ZERO
FLCTEAA  DC    AL3(0) -       TRANSLATION EXCEPTION ADDRESS
         DC    XL1'00' -      RESERVED - SET TO ZERO
FLCMCNUM DC    XL1'00' -      MONITOR CLASS NUMBER
FLCPERCD DC    XL1'00' -      PROGRAM EVENT RECORDING CODE
         DC    XL1'00' -      RESERVED - SET TO ZERO
FLCPER   DS    0A -           PER ADDRESS
         DC    XL1'00' -      RESERVED - SET TO ZERO
FLCPERA  DC    AL3(0) -       PER ADDRESS
         DC    XL1'00' -      RESERVED - SET TO ZERO
FLCMTRCD DC    XL3'00' -      MONITOR CODE
         DC    XL8'00' -      RESERVED
FLCMCLA  DS    0XL344 -       MACHINE CHECK LOGOUT AREA
FLCCHNID DC    XL4'00' -      CHANNEL ID
FLCIOEL  DS    0A -           SAME AS FLCIOELA BELOW
         DC    XL1'00' -      RESERVED
FLCIOELA DC    AL3(0) -       I/O EXTENDED LOGOUT (IOEL) POINTER
FLCLCL   DC    XL4'00' -      LIMITED CHANNEL LOGOUT (ECSW)
         DC    XL2'00' -      RESERVED
         DC    XL1'00' -      RESERVED                           MDC051
         DC    XL1'00' -      RESERVED                           MDC052
FLCIOA   DS    0A -           I/O ADDRESS
         DC    XL1'00' -      RESERVED
FLCIOAA  DC    AL3(0) -       I/O ADDRESS
         DC    XL44'00' -     RESERVED
FLCMCIC  DC    XL8'00' -      MACHINE-CHECK INTERRUPTION CODE
         DC    XL8'00' -      RESERVED
FLCFSA   DS    0A -           FAILING STORAGE ADDRESS
         DC    XL1'00' -      ZEROES
FLCFSAA  DC    AL3(0) -       FAILING STORAGE ADDRESS
FLCRGNCD DC    XL4'00' -      REGION CODE
FLCFLA   DC    XL96'00' -     FIXED LOGOUT AREA
FLCFPSAV DC    XL32'00' -     FLOATING POINT REGISTER SAVE AREA
FLCGRSAV DC    16F'0' -       GENERAL REGISTER SAVE AREA
FLCCRSAV DC    16F'0' -       CONTROL REGISTER SAVE AREA
FLCHDEND DS    0D -           END OF HARDWARE ASSIGNMENTS
         AIF   ('&DSECT' EQ 'YES').PSA0100                       ICB414
         SPACE 2 -
         ORG   PSA+X'16C' -   LOCATION X'16C' IS BRANCHED TO BY THE
*                             IPL PROGRAM
         LPSW  *+4 -          CAUSES MODULE IEAANIP0 TO BE ENTERED TO
*                             INITIALIZE THE SYSTEM
         DC    XL4'00' -      FIRST WORD OF PSW
         DC    V(IEAVNIP0) -  SECOND WORD OF PSW
         ORG   FLCHDEND -
.PSA0100 ANOP
         SPACE 1
PSAPSA   DC    CL4'PSA ' -    CONTROL BLOCK ACRONYM IN EBCDIC
PSACPUPA DC    H'0' -         PHYSICAL CPU ADDRESS (CHANGED DURING ACR)
*                             (MDC130)                           YM3489
PSACPULA DC    H'0' -         LOGICAL CPU ADDRESS
PSAPCCAV DC    A(0) -         VIRTUAL ADDRESS OF PCCA
PSAPCCAR DC    A(0) -         REAL ADDRESS OF PCCA
PSALCCAV DC    A(0) -         VIRTUAL ADDRESS OF LCCA
PSALCCAR DC    A(0) -         REAL ADDRESS OF LCCA
PSATNEW  DC    A(0) -         TCB NEW POINTER
IEATCBP  EQU   PSATNEW -      ALIAS
PSATOLD  DC    A(0) -         TCB OLD POINTER
PSAANEW  DC    A(0) -         ASCB NEW POINTER
PSAAOLD  DC    A(0) -         ASCB OLD POINTER
PSASUPER DS    0BL4 -         SUPERVISOR CONTROL WORD
PSASUP1  DC    XL1'00' -      FIRST BYTE OF PSASUPER
PSAIO    EQU   X'80' -        I/O FLIH
PSASVC   EQU   X'40' -        SVC FLIH
PSAEXT   EQU   X'20' -        EXTERNAL FLIH
PSAPI    EQU   X'10' -        PROGRAM CHECK FLIH
PSALOCK  EQU   X'08' -        LOCK ROUTINE
PSADISP  EQU   X'04' -        DISPATCHER
PSAIPCDR EQU   X'02' -        SIGP - DIRECT
PSAIPCRP EQU   X'01' -        SIGP - REMOTE PENDING
PSASUP2  DC    XL1'00' -      SECOND BYTE OF PSASUPER
PSAIPCRI EQU   X'80' -        SIGP - REMOTE IMMEDIATE
PSAGTF   EQU   X'40' -        GTF GIVEN CONTROL FROM FLIH
PSAIPCEC EQU   X'20' -        EXTERNAL CALL SLIH IS ACTIVE       MDC047
PSAIPCES EQU   X'10' -        EMERGENCY SIGNAL SLIH IS ACTIVE    MDC048
PSAIPCE2 EQU   X'08' -        EMERGENCY SIGNAL (EMS) SLIH RECURSIVE
*                             ENTRY FLAG                         MDC110
PSAACR   EQU   X'04' -        AUTOMATIC CPU RECONFIGURATION (ACR) IN
*                             CONTROL                            MDC119
PSARTM   EQU   X'02' -        RECOVERY TERMINATION MONITOR (RTM) IN
*                             CONTROL                            MDC120
PSALCR   EQU   X'01' -        LOW CORE REFRESH ROUTINE IS ACTIVE MDC126
PSASUP3  DC    XL1'00' -      THIRD BYTE OF PSASUPER
PSAIOSUP EQU   X'80' -        IF ON, A MAINLINE IOS COMPONENT SUCH AS
*                             CHANNEL SCHEDULER HAS ENTERED A
*                             PHYSICALLY DISABLED STATE WITHOUT REGARD
*                             TO LOCKING REQUIREMENTS            MDC027
PSAPI2   EQU   X'40' -        PROGRAM CHECK FLIH RECURSION
*                             (MDC301)                         @ZM08516
PSAPSREG EQU   X'20' -        PSA RECOVERY RECURSION (MDC302)  @ZM08516
PSARV010 EQU   X'10',,C'X' -  RESERVED
PSARV011 EQU   X'08',,C'X' -  RESERVED
PSARV012 EQU   X'04',,C'X' -  RESERVED
PSARV013 EQU   X'02',,C'X' -  RESERVED
PSARV014 EQU   X'01',,C'X' -  RESERVED
PSASUP4  DC    XL1'00' -      FOURTH BYTE OF PSASUPER
PSARV015 EQU   X'80',,C'X' -  RESERVED
PSARV016 EQU   X'40',,C'X' -  RESERVED
PSARV017 EQU   X'20',,C'X' -  RESERVED
PSARV018 EQU   X'10',,C'X' -  RESERVED
PSARV019 EQU   X'08',,C'X' -  RESERVED
PSARV020 EQU   X'04',,C'X' -  RESERVED
PSARV021 EQU   X'02',,C'X' -  RESERVED
PSARV022 EQU   X'01',,C'X' -  RESERVED
PSAGPREG DC    3F'0' -        REGISTER SAVE AREA FOR I/O FLIH, SVC
*                             FLIH, EXTERNAL FLIH AND SYSTEM TRACE
PSARSREG DC    F'0' -         RESTART FLIH REGISTER SAVE
PSAPIREG DC    F'0' -         PROGRAM CHECK FLIH REGISTER SAVE
         DS    0D -           ALIGN PSAEXPS1 TO DOUBLE WORD
PSAEXPS1 DC    XL8'00' -      EXTERNAL FLIH PSW SAVE AREA 1
         DS    0D -           ALIGN PSAEXPS2 TO DOUBLE WORD
PSAEXPS2 DC    XL8'00' -      EXTERNAL FLIH PSW SAVE AREA 2
         DS    0D -           ALIGN PSAMPSW TO DOUBLE WORD
PSAMPSW  DC    XL8'000C000000000000' - SETLOCK MODEL PSW
         DS    0D -           ALIGN PSAMCHEX TO DOUBLE WORD
PSAMCHEX DC    XL8'00' -      MCH EXIT PSW
PSAIPCR  DC    X'AD00' -      FIRST HALF OF IPC INSTRUCTION TO BE
*                             EXECUTED
         DC    Y(PSAIPCRM-PSA) - SECOND HALF OF IPC INSTRUCTION
PSAIPCRM DC    XL1'00' -      BYTE USED BY ABOVE IPC INSTRUCTION
         DC    XL3'00' -      RESERVED
PSAIPCD  DC    X'AD00' -      FIRST HALF OF IPC INSTRUCTION TO BE
*                             EXECUTED
         DC    Y(PSAIPCDM-PSA) - SECOND HALF OF IPC INSTRUCTION
PSAIPCDM DC    XL1'00' -      BYTE USED BY ABOVE IPC INSTRUCTION
         DC    XL3'00' -      RESERVED
PSAIPCSA DC    F'0' -         IPC REGISTER SAVE AREA             MDC049
PSAHLHIS DC    F'0' -         SAVE AREA FOR PSAHLHI              MDC050
PSARECUR DC    XL1'00' -      RESTART FLIH RECURSION INDICATOR.  IF
*                             X'00', FLIH NOT IN CONTROL.  IF X'FF',
*                             FLIH IN CONTROL, ENTRY IS RECURSIVE.
*                                                                MDC093
PSADSSGO DC    XL1'00' -      INITIALIZE DSS FLAG, SET BY OPERATOR.
*                             IF X'00', DSS NOT TO BE ACTIVATED.  IF
*                             NOT X'00', NEXT RESTART INTERRUPT FROM
*                             CONSOLE SHOULD INITIALIZE DSS.     MDC094
PSARV050 DC    H'0' -         RESERVED
PSASRSA  DC    A(0) -         REAL ADDRESS OF SAVE AREA USED DURING
*                             STOP AND RESTART SUBROUTINE        MDC095
PSACLHT  DS    0CL56 -        CPU LOCKS HELD TABLE.  INITIALIZED TO
*                             ZERO.  IF LOCK IS HELD, WORD REPRESENTING
*                             LOCK HAS ITS ADDRESS.
PSADISPL DC    A(0) -         GLOBAL DISPATCHER LOCK
PSAASML  DC    A(0) -         AUXILIARY STORAGE MANAGEMENT (ASM) LOCK
*                                                                MDC002
PSASALCL DC    A(0) -         SPACE ALLOCATION LOCK              MDC003
PSAIOSSL DC    A(0) -         IOS SYNCHRONIZATION LOCK           MDC010
PSAIOSCL DC    A(0) -         IOS CHANNEL AVAILABLE TABLE LOCK   MDC004
PSAIOSUL DC    A(0) -         IOS UNIT CONTROL BLOCK LOCK        MDC005
PSAIOSLL DC    A(0) -         IOS LOGICAL CHANNEL QUEUE LOCK     MDC006
PSATPNCL DC    A(0) -         TCAM'S TPNCP LOCK                  MDC007
PSATPDNL DC    A(0) -         TCAM'S TPDNCB LOCK                 MDC008
PSATPACL DC    A(0) -         TCAM'S TPACBDEB LOCK               MDC009
PSAOPTL  DC    A(0) -         OPTIMIZER LOCK
PSACMSL  DC    A(0) -         CROSS MEMORY SERVICES LOCK
PSALOCAL DC    A(0) -         LOCAL LOCK
PSARV023 DC    A(0) -         RESERVED LOCK
PSALKSA  DS    0CL64 -        SETLOCK REGISTER SAVE AREA
PSALKR0  DC    F'0' -         SETLOCK'S CALLER'S REGISTER 0
PSALKR1  DC    F'0' -         SETLOCK'S CALLER'S REGISTER 1
PSALKR2  DC    F'0' -         SETLOCK'S CALLER'S REGISTER 2
PSALKR3  DC    F'0' -         SETLOCK'S CALLER'S REGISTER 3
PSALKR4  DC    F'0' -         SETLOCK'S CALLER'S REGISTER 4
PSALKR5  DC    F'0' -         SETLOCK'S CALLER'S REGISTER 5
PSALKR6  DC    F'0' -         SETLOCK'S CALLER'S REGISTER 6
PSALKR7  DC    F'0' -         SETLOCK'S CALLER'S REGISTER 7
PSALKR8  DC    F'0' -         SETLOCK'S CALLER'S REGISTER 8
PSALKR9  DC    F'0' -         SETLOCK'S CALLER'S REGISTER 9
PSALKR10 DC    F'0' -         SETLOCK'S CALLER'S REGISTER 10
PSALKR11 DC    F'0' -         SETLOCK'S CALLER'S REGISTER 11
PSALKR12 DC    F'0' -         SETLOCK'S CALLER'S REGISTER 12
PSALKR13 DC    F'0' -         SETLOCK'S CALLER'S REGISTER 13
PSALKR14 DC    F'0' -         SETLOCK'S CALLER'S REGISTER 14
PSALKR15 DC    F'0' -         SETLOCK'S CALLER'S REGISTER 15
PSACLHS  DS    0F -           CPU LOCKS HELD STRING              MDC122
PSAHLHI  DC    F'0' -         HIGHEST LOCK HELD INDICATOR        MDC121
PSALITA  DC    V(IEAVELIT) -  ADDRESS OF LOCK INTERFACE TABLE
         DS    0D -           ALIGN PSAPSWSV TO DOUBLE WORD
PSAPSWSV DC    XL8'00' -      PSW SAVE AREA FOR DISPATCHER AND ACR
PSACR0   DC    F'0' -         SAVE AREA FOR CONTROL REGISTER 0
PSAMCHFL DC    XL1'00' -      MCH RECURSION FLAGS
PSASYMSK DC    XL1'00' -      THIS FIELD WILL BE USED IN CONJUNCTION
*                             WITH THE STNSM INSTRUCTION TO PLACE IOS
*                             CHANNEL SCHEDULER INTO A DISABLED STATE
*                             AND SIMULTANEOUSLY SAVE THE SYSTEM MASK
*                             OF THE CALLER                      MDC022
PSARV061 DC    XL1'00' -      RESERVED  (MDC060)                 YM4244
PSAMCHIC DC    XL1'00' -      MCH INITIALIZATION COMPLETE FLAGS  MDC098
PSAWKRAP DC    A(0) -         REAL ADDRESS OF VARY CPU PARAMETER LIST
*                                                                MDC106
PSAWKVAP DC    A(0) -         VIRTUAL ADDRESS OF VARY CPU PARAMETER
*                             LIST                               MDC107
PSAVSTAP DC    H'0' -         WORK AREA FOR VARY CPU             MDC108
PSACPUSA DC    H'0' -         PHYSICAL CPU ADDRESS (STATIC)  (MDC131)
*                                                                YM3489
PSASTOR  DC    F'0' -         MASTER MEMORY'S SEGMENT TABLE ORIGIN
*                             REGISTER (STOR) VALUE
PSADSSRS DC    F'0' -         REGISTER SAVE FOR DSS PROGRAM AND SVC
*                             INTERRUPT HANDLERS                 MDC053
PSADSSR2 DC    F'0' -         REGISTER SAVE AREA FOR DSS I/O AND
*                             EXTERNAL INTERRUPT HANDLERS        MDC054
PSADSSR3 DC    F'0' -         REGISTER SAVE AREA FOR DSS ERROR RECOVERY
*                             ROUTINE                            MDC055
PSADSSWK DC    F'0' -         WORK AREA FOR DSS INTERRUPT HANDLERS
*                                                                MDC056
PSADSSTS DC    5F'0' -        REGISTER SAVE FOR DSS MODULES MAKING
*                             CALLS TO IQATSS                    MDC023
PSADSSFL DS    0BL4 -         DSS FLAG BYTES                     MDC024
PSADSSF1 DC    XL1'00' -      DSS STATUS BYTE                    MDC029
PSADSSMV EQU   X'80' -        DSS MONITORING, VS2 RUNNING        MDC030
PSADSSDM EQU   X'40' -        DSS IN VS2-2 VM                    MDC031
PSADSSDD EQU   X'20' -        DSS IN DSS VM                      MDC032
PSADSSDW EQU   X'10' -        DSS IN DSS WAIT                    MDC033
PSADSSTP EQU   X'08' -        DSS PROCESSING SIGP                MDC034
PSADSSSP EQU   X'04' -        DSS SIGP PENDING                   MDC035
PSADSSOI EQU   X'02' -        DSS EXECUTING OVERLAID INSTRUCTION MDC036
PSADSSPI EQU   X'01' -        DSS EXECUTING PRIVILEGED INSTRUCTION
*                                                                MDC037
PSADSSF2 DC    XL1'FF' -      SYSTEM STATUS BYTE  (MDC038)       YM6287
PSADSSPS EQU   X'FF' -        SYSTEM RUNNING IN PROBLEM STATE    MDC039
PSADSSSS EQU   X'FE' -        SYSTEM RUNNING IN PRIVILEGED STATE MDC040
PSADSSF3 DC    XL1'00' -      DSS FLAG BYTE                      MDC099
PSADSSGP EQU   X'80' -        DSS SIGP INDICATOR                 MDC100
PSADSSES EQU   X'40' -        ERROR SHORT SAVE INDICATOR         MDC113
PSADSSNM EQU   X'20' -        NON-MONITORABLE CODE INDICATOR     MDC114
PSADSSRW EQU   X'10' -        DSS OWNS CVTRSTWD                  MDC117
PSADSSMC EQU   X'08' -        MACHINE CHECK RUNNING  (MDC132)    YM6287
PSARV055 EQU   X'04',,C'X' -  RESERVED FOR DSS                   MDC100
PSARV056 EQU   X'02',,C'X' -  RESERVED FOR DSS                   MDC100
PSARV057 EQU   X'01',,C'X' -  RESERVED FOR DSS                   MDC100
PSADSSF4 DC    XL1'00' -      DSS RECURSION FLAGS                MDC101
PSADSSRC EQU   X'80' -        PROGRAM-SVC RECURSION FLAG         MDC057
PSADSS12 EQU   X'40' -        PROGRAM INTERRUPT 12 RECURSION FLAG
*                                                                MDC058
PSADSSIE EQU   X'20' -        I/O-EXTERNAL RECURSION FLAG        MDC059
PSADSSC0 EQU   X'10' -        CONTROL REGISTER 0 INVALID FLAG    MDC092
PSADSSDE EQU   X'08' -        DAT ERROR WHILE DSS RUNNING IN VS2 VM
*                                                                MDC102
PSADSSVE EQU   X'04' -        DAT ERROR WHILE DSS RUNNING IN DSS VM
*                                                                MDC103
PSADSS10 EQU   X'02' -        SEGMENT EXCEPTION RECURSION FLAG   MDC104
PSADSS05 EQU   X'01' -        ADDRESSING EXCEPTION RECURSION FLAG
*                                                                MDC105
         DS    0D -           ALIGN PSADSSRP TO DOUBLEWORD       MDC025
PSADSSRP DC    XL8'00' -      DSS TO VS2-2 RESUME PSW            MDC025
         DS    0D -           ALIGN PSADSSPP TO DOUBLEWORD       MDC026
PSADSSPP DC    XL8'00' -      DSS PSW FOR RETURNING CONTROL FROM
*                             PRIVILEGED INSTRUCTION STREAM TO VS2
*                                                                MDC026
PSADSS14 DC    F'0' -         DSS RESTART SECOND LEVEL INTERRUPT
*                             HANDLER CONTROL REGISTER 14 SAVE AREA
*                                                                MDC115
PSADSSFW DC    F'0' -         FULL-WORD DSS WORK AREA            MDC116
PSADSSPR DC    F'0' -         DSS REGISTER SAVE FOR PRIVILEGED
*                             INSTRUCTION STREAM                 MDC028
PSADSSED EQU   * -            END OF DSS FIELDS                  MDC045
PSARV025 DC    F'0' -         RESERVED FOR DSS
PSARV040 DC    F'0' -         RESERVED FOR DSS
PSARV041 DC    F'0' -         RESERVED FOR DSS
PSARV042 DC    F'0' -         RESERVED FOR DSS
PSARV043 DC    F'0' -         RESERVED FOR DSS
PSARV044 DC    F'0' -         RESERVED FOR DSS
PSARV045 DC    F'0' -         RESERVED FOR DSS
PSARSVT  DS    0CL64 -        RECOVERY STACK VECTOR TABLE        MDC064
PSARSVTE DS    0CL64 -        RECOVERY STACK VECTOR TABLE        MDC065
PSACSTK  DC    A(0) -         ADDRESS OF CURRENTLY USED FUNCTIONAL
*                             RECOVERY ROUTINE (FRR) STACK       MDC061
PSANSTK  DC    A(0) -         ADDRESS OF NORMAL FRR STACK        MDC062
PSASSTK  DC    A(0) -         ADDRESS OF SVC-I/O-DISPATCHER FRR STACK
*                                                                MDC063
PSASSAV  DC    A(0) -         ADDRESS OF INTERRUPTED STACK SAVED BY
*                             SVC-I/O-DISPATCHER                 MDC066
PSAMSTK  DC    A(0) -         ADDRESS OF MCH FRR STACK           MDC067
PSAMSAV  DC    A(0) -         ADDRESS OF INTERRUPTED STACK SAVED BY
*                             MCH                                MDC068
PSAPSTK  DC    A(0) -         ADDRESS OF PROGRAM CHECK FLIH FRR STACK
*                                                                MDC069
PSAPSAV  DC    A(0) -         ADDRESS OF INTERRUPTED STACK SAVED BY
*                             PROGRAM CHECK FLIH                 MDC070
PSAESTK1 DC    A(0) -         ADDRESS OF EXTERNAL FLIH FRR STACK FOR
*                             NON-RECURSIVE ENTRIES              MDC071
PSAESAV1 DC    A(0) -         ADDRESS OF INTERRUPTED STACK SAVED BY
*                             NON-RECURSIVE ENTRIES              MDC072
PSAESTK2 DC    A(0) -         ADDRESS OF EXTERNAL FLIH FRR STACK FOR
*                             FIRST LEVEL RECURSIONS             MDC073
PSAESAV2 DC    A(0) -         ADDRESS OF INTERRUPTED STACK SAVE BY
*                             EXTERNAL FLIH FOR FIRST LEVEL RECURSIONS
*                                                                MDC074
PSAESTK3 DC    A(0) -         ADDRESS OF EXTERNAL FLIH FRR STACK FOR
*                             SECOND LEVEL RECURSIONS AND ACR    MDC075
PSAESAV3 DC    A(0) -         ADDRESS OF INTERRUPTED STACK SAVED BY
*                             EXTERNAL FLIH (ACR) FOR SECOND LEVEL
*                             RECURSIONS                         MDC076
PSARSTK  DC    A(0) -         ADDRESS OF RESTART FLIH FRR STACK  MDC077
PSARSAV  DC    A(0) -         ADDRESS OF INTERRUPTED STACK SAVED BY
*                             RESTART FLIH                       MDC078
         DS    0D -           ALIGN PSARPSW TO DOUBLE WORD       MDC096
PSASRPSW DC    XL8'00' -      RESUME PSW FOR STOP AND RESTART
*                             SUBROUTINE                         MDC096
         DS    0D -           ALIGN PSARSPSW TO DOUBLE WORD      MDC097
PSARSPSW DC    XL8'00' -      RESUME PSW FIELD FOR RESTART INTERRUPT
*                             HANDLER                            MDC097
         DS    0D -           ALIGN PSASTART TO DOUBLE WORD      MDC111
PSASTART BR    14 -           START FATHOM RECORDING             MDC111
         DC    XL14'00' -     REST OF PSASTART                   MDC111
         DS    0D -           ALIGN PSASTOP TO DOUBLE WORD       MDC112
PSASTOP  BR    14 -           STOP FATHOM RECORDING              MDC112
         DC    XL14'00' -     REST OF PSASTOP                    MDC112
         DS    0F -           ALIGN PSASFACC TO FULL WORD        MDC123
PSASFACC DC    XL4'8007D000' - SETFRR ABEND COMPLETION CODE USED WHEN
*                             A SETFRR ADD IS ISSUED AGAINST A FULL
*                             FRR STACK                          MDC123
PSALSFCC DC    XL4'581003F0' - A LOAD INSTRUCTION TO PRIME REGISTER 1
*                             WITH THE SETFRR ABEND COMPLETION CODE IN
*                             PSASFACC                           MDC124
PSASVC13 SVC   13 -           AN SVC 13 INSTRUCTION              MDC125
PSARV059 DC    H'0' -         RESERVED
PSAPIR2  DC    F'0' -         PROGRAM CHECK FLIH REGISTER SAVE
*                             (MDC303)                         @ZM08516
         DS    0D -           ALIGN PSAPCPSW TO DOUBLE WORD      YM0943
PSAPCPSW DC    XL8'00' -      TEMPORARY OLD PSW STORAGE FOR PROGRAM
*                             FLIH  (MDC129)                     YM0943
PSAATCVT DC    A(0) -         ADDRESS OF VTAM ATCVT.  INITIALIZED BY
*                             VTAM.  (MDC300)                  @Z30AP9A
PSARV062 DC    F'0' -         RESERVED                         @Z30AQ9A
PSAUSEND DS    0D -           END OF ASSIGNED FIELDS             MDC109
         DC    2032XL1'00' -  RESERVED                         @Z30AQ9A
         DS    0D -           ALIGN PSASTAK TO DOUBLE WORD       MDC118
PSASTAK  DC    596XL1'00' -   NORMAL FRR STACK  (MDC304)       @ZM32352
         DC    428XL1'00' -   RESERVED FOR EXPANSION OF PSASTAK
*                             (MDC304)                         @ZM32352
         MEND  , -         */
*%PSAL2 : ;
*
*DECLARE
*%IF PSABASE=''  %THEN
*    %GOTO PSA0010;
*  1 PSA      PSABASE BDY(DWORD),
*%GOTO PSA0030;
*%PSA0010 : ;
*%IF IKEPLS='2'  %THEN
*    %GOTO PSA0020;
*  1 PSA      BASED(0) BDY(DWORD),
*%GOTO PSA0030;
*%PSA0020 : ;
*  1 PSA      LOCATION(0) BDY(DWORD),
*%PSA0030 : ;
*   2 FLCRNPSW    CHAR(8) BDY(DWORD),    /* RESTART NEW PSW (AFTER
*                                           IPL)                     */
*    3 FLCIPPSW    CHAR(8) BDY(DWORD),   /* IPL PSW                  */
*   2 FLCROPSW    CHAR(8) BDY(DWORD),    /* RESTART OLD PSW (AFTER
*                                           IPL)                     */
*    3 FLCICCW1    CHAR(8) BDY(DWORD),   /* IPL CCW1                 */
*   2 FLCICCW2    CHAR(8) BDY(DWORD),    /* IPL CCW2                 */
*    3 FLCCVT      PTR(31),              /* ADDRESS OF CVT (AFTER
*                                           IPL)                     */
*    3 *           CHAR(4),              /* RESERVED (AFTER IPL)     */
*   2 FLCEOPSW    CHAR(8) BDY(DWORD),    /* EXTERNAL OLD PSW         */
*   2 FLCSOPSW    CHAR(8) BDY(DWORD),    /* SVC OLD PSW              */
*   2 FLCPOPSW    CHAR(8) BDY(DWORD),    /* PROGRAM CHECK OLD PSW    */
*   2 FLCMOPSW    CHAR(8) BDY(DWORD),    /* MACHINE CHECK OLD PSW    */
*   2 FLCIOPSW    CHAR(8) BDY(DWORD),    /* INPUT/OUTPUT OLD PSW     */
*   2 FLCCSW      CHAR(8) BDY(DWORD),    /* CHANNEL STATUS WORD      */
*   2 FLCCAW      CHAR(4) BDY(WORD),     /* CHANNEL ADDRESS WORD     */
*   2 FLCCVT2     PTR(31),               /* ADDRESS OF CVT - USED BY
*                                           DUMP ROUTINES      ICB319*/
*   2 FLCTIMER    CHAR(4),               /* TIMER                    */
*   2 FLCTRACE    PTR(31),               /* ADDRESS OF TRACE TABLE
*                                           HEADER                   */
*   2 FLCENPSW    CHAR(8) BDY(DWORD),    /* EXTERNAL NEW PSW         */
*   2 FLCSNPSW    CHAR(8) BDY(DWORD),    /* SVC NEW PSW              */
*   2 FLCPNPSW    CHAR(8) BDY(DWORD),    /* PROGRAM CHECK NEW PSW    */
*   2 FLCMNPSW    CHAR(8) BDY(DWORD),    /* MACHINE CHECK NEW PSW    */
*   2 FLCINPSW    CHAR(8) BDY(DWORD),    /* INPUT/OUTPUT NEW PSW     */
*   2 *           CHAR(4),               /* RESERVED                 */
*   2 PSAEEPSW    CHAR(4) BDY(WORD),     /* EXTENDED PSW DATA STORED
*                                           ON EXTERNAL INTERRUPT
*                                                              MDC084*/
*    3 PSASPAD     FIXED(15),            /* ISSUING PROCESSOR'S
*                                           PHYSICAL ADDRESS ON EMS
*                                           OR EXTERNAL CALL
*                                           INTERRUPT          MDC046*/
*    3 FLCEICOD    FIXED(15),            /* EXTERNAL INTERRUPTION
*                                           CODE                     */
*   2 PSAESPSW    CHAR(4) BDY(WORD),     /* EXTENDED PSW DATA STORED
*                                           ON SVC INTERRUPT   MDC085*/
*    3 *           CHAR(1),              /* RESERVED - SET TO ZERO   */
*    3 FLCSVILC    PTR(8),               /* SVC INSTRUCTION LENGTH
*                                           COUNTER - NUMBER OF BYTES
*                                                              MDC079*/
*     4 *        BIT(5),                 /* ALWAYS ZERO              */
*     4 FLCSILCB BIT(3),                 /* SIGNIFICANT BITS IN ILC
*                                           FIELD - LAST BIT IS
*                                           ALWAYS ZERO        MDC080*/
*    3 FLCSVCN     FIXED(15),            /* SVC INTERRUPTION CODE -
*                                           SVC NUMBER         MDC081*/
*   2 PSAEPPSW    CHAR(8) BDY(WORD),     /* EXTENDED PSW FOR PROGRAM
*                                           INTERRUPT          MDC086*/
*    3 *           CHAR(1),              /* RESERVED - SET TO ZERO   */
*    3 FLCPIILC    PTR(8),               /* PROGRAM INSTRUCTION
*                                           LENGTH COUNTER - NUMBER
*                                           OF BYTES IN INSTRUCTION
*                                           CAUSING PROGRAM
*                                           INTERRUPTION       MDC082*/
*     4 *        BIT(5),                 /* ALWAYS ZERO              */
*     4 FLCPILCB BIT(3),                 /* SIGNIFICANT BITS IN ILC
*                                           FIELD - LAST BIT IS
*                                           ALWAYS ZERO        MDC083*/
*    3 FLCPICOD    FIXED(15),            /* PROGRAM INTERRUPTION
*                                           CODE                     */
*     4 PSARV049    CHAR(1),             /* RESERVED FOR IMPRECISE
*                                           INTERRUPTS         MDC087*/
*     4 PSAPICOD    PTR(8),              /* 8-BIT INTERRUPT CODE
*                                                              MDC088*/
*      5 PSAPIPER BIT(1),                /* PER INTERRUPT OCCURRED
*                                                              MDC089*/
*      5 PSAPIMC  BIT(1),                /* MONITOR CALL INTERRUPT
*                                           OCCURRED           MDC090*/
*      5 PSAPIPC  BIT(6),                /* AN UNSOLICITED PROGRAM
*                                           CHECK HAS OCCURRED IF ANY
*                                           OF THESE 6 BITS ARE ON
*                                                              MDC091*/
*    3 FLCTEA      PTR(31),              /* TRANSLATION EXCEPTION
*                                           ADDRESS                  */
*     4 *           CHAR(1),             /* RESERVED - SET TO ZERO   */
*     4 FLCTEAA     PTR(24),             /* TRANSLATION EXCEPTION
*                                           ADDRESS                  */
*   2 *           CHAR(1),               /* RESERVED - SET TO ZERO   */
*   2 FLCMCNUM    PTR(8),                /* MONITOR CLASS NUMBER     */
*   2 FLCPERCD    CHAR(1),               /* PROGRAM EVENT RECORDING
*                                           CODE                     */
*   2 *           CHAR(1),               /* RESERVED - SET TO ZERO   */
*   2 FLCPER      PTR(31),               /* PER ADDRESS              */
*    3 *           CHAR(1),              /* RESERVED - SET TO ZERO   */
*    3 FLCPERA     PTR(24),              /* PER ADDRESS              */
*   2 *           CHAR(1),               /* RESERVED - SET TO ZERO   */
*   2 FLCMTRCD    CHAR(3),               /* MONITOR CODE             */
*   2 *           CHAR(8),               /* RESERVED                 */
*   2 FLCMCLA     CHAR(344) BDY(DWORD),  /* MACHINE CHECK LOGOUT
*                                           AREA                     */
*    3 FLCCHNID    CHAR(4),              /* CHANNEL ID               */
*    3 FLCIOEL     PTR(31),              /* SAME AS FLCIOELA BELOW   */
*     4 *           CHAR(1),             /* RESERVED                 */
*     4 FLCIOELA    PTR(24),             /* I/O EXTENDED LOGOUT
*                                           (IOEL) POINTER           */
*    3 FLCLCL      CHAR(4),              /* LIMITED CHANNEL LOGOUT
*                                           (ECSW)                   */
*    3 *           CHAR(2),              /* RESERVED                 */
*    3 *           CHAR(1),              /* RESERVED           MDC051*/
*    3 *           CHAR(1),              /* RESERVED           MDC052*/
*    3 FLCIOA      PTR(31),              /* I/O ADDRESS              */
*     4 *           CHAR(1),             /* RESERVED                 */
*     4 FLCIOAA     PTR(24),             /* I/O ADDRESS              */
*    3 *           CHAR(44),             /* RESERVED                 */
*    3 FLCMCIC     CHAR(8),              /* MACHINE-CHECK
*                                           INTERRUPTION CODE        */
*    3 *           CHAR(8),              /* RESERVED                 */
*    3 FLCFSA      PTR(31),              /* FAILING STORAGE ADDRESS  */
*     4 *           CHAR(1),             /* ZEROES                   */
*     4 FLCFSAA     PTR(24),             /* FAILING STORAGE ADDRESS  */
*    3 FLCRGNCD    CHAR(4),              /* REGION CODE              */
*    3 FLCFLA      CHAR(96) BDY(WORD),   /* FIXED LOGOUT AREA        */
*    3 FLCFPSAV    CHAR(32) BDY(DWORD),  /* FLOATING POINT REGISTER
*                                           SAVE AREA                */
*    3 FLCGRSAV (16) FIXED(31),          /* GENERAL REGISTER SAVE
*                                           AREA                     */
*    3 FLCCRSAV (16) FIXED(31),          /* CONTROL REGISTER SAVE
*                                           AREA                     */
*   2 FLCHDEND    CHAR(0) BDY(DWORD),    /* END OF HARDWARE
*                                           ASSIGNMENTS              */
*   2 PSAPSA      CHAR(4) BDY(WORD),     /* CONTROL BLOCK ACRONYM IN
*                                           EBCDIC                   */
*   2 PSACPUPA    PTR(15),               /* PHYSICAL CPU ADDRESS
*                                           (CHANGED DURING ACR)
*                                           (MDC130)           YM3489*/
*   2 PSACPULA    PTR(15),               /* LOGICAL CPU ADDRESS      */
*   2 PSAPCCAV    PTR(31),               /* VIRTUAL ADDRESS OF PCCA  */
*   2 PSAPCCAR    PTR(31),               /* REAL ADDRESS OF PCCA     */
*   2 PSALCCAV    PTR(31),               /* VIRTUAL ADDRESS OF LCCA  */
*   2 PSALCCAR    PTR(31),               /* REAL ADDRESS OF LCCA     */
*   2 PSATNEW     PTR(31),               /* TCB NEW POINTER          */
*   2 PSATOLD     PTR(31),               /* TCB OLD POINTER          */
*   2 PSAANEW     PTR(31),               /* ASCB NEW POINTER         */
*   2 PSAAOLD     PTR(31),               /* ASCB OLD POINTER         */
*   2 PSASUPER    CHAR(4) BDY(WORD),     /* SUPERVISOR CONTROL WORD  */
*    3 PSASUP1     BIT(8),               /* FIRST BYTE OF PSASUPER   */
*     4 PSAIO    BIT(1),                 /* I/O FLIH                 */
*     4 PSASVC   BIT(1),                 /* SVC FLIH                 */
*     4 PSAEXT   BIT(1),                 /* EXTERNAL FLIH            */
*     4 PSAPI    BIT(1),                 /* PROGRAM CHECK FLIH       */
*     4 PSALOCK  BIT(1),                 /* LOCK ROUTINE             */
*     4 PSADISP  BIT(1),                 /* DISPATCHER               */
*     4 PSAIPCDR BIT(1),                 /* SIGP - DIRECT            */
*     4 PSAIPCRP BIT(1),                 /* SIGP - REMOTE PENDING    */
*    3 PSASUP2     BIT(8),               /* SECOND BYTE OF PSASUPER  */
*     4 PSAIPCRI BIT(1),                 /* SIGP - REMOTE IMMEDIATE  */
*     4 PSAGTF   BIT(1),                 /* GTF GIVEN CONTROL FROM
*                                           FLIH                     */
*     4 PSAIPCEC BIT(1),                 /* EXTERNAL CALL SLIH IS
*                                           ACTIVE             MDC047*/
*     4 PSAIPCES BIT(1),                 /* EMERGENCY SIGNAL SLIH IS
*                                           ACTIVE             MDC048*/
*     4 PSAIPCE2 BIT(1),                 /* EMERGENCY SIGNAL (EMS)
*                                           SLIH RECURSIVE ENTRY
*                                           FLAG               MDC110*/
*     4 PSAACR   BIT(1),                 /* AUTOMATIC CPU
*                                           RECONFIGURATION (ACR) IN
*                                           CONTROL            MDC119*/
*     4 PSARTM   BIT(1),                 /* RECOVERY TERMINATION
*                                           MONITOR (RTM) IN CONTROL
*                                                              MDC120*/
*     4 PSALCR   BIT(1),                 /* LOW CORE REFRESH ROUTINE
*                                           IS ACTIVE          MDC126*/
*    3 PSASUP3     BIT(8),               /* THIRD BYTE OF PSASUPER   */
*     4 PSAIOSUP BIT(1),                 /* IF ON, A MAINLINE IOS
*                                           COMPONENT SUCH AS CHANNEL
*                                           SCHEDULER HAS ENTERED A
*                                           PHYSICALLY DISABLED STATE
*                                           WITHOUT REGARD TO LOCKING
*                                           REQUIREMENTS       MDC127*/
*     4 PSAPI2   BIT(1),                 /* PROGRAM CHECK FLIH
*                                           RECURSION  (MDC301)
*                                                            @ZM08516*/
*     4 PSAPSREG BIT(1),                 /* PSA RECOVERY RECURSION
*                                           (MDC302)         @ZM08516*/
*     4 PSARV010 BIT(1),                 /* RESERVED                 */
*     4 PSARV011 BIT(1),                 /* RESERVED                 */
*     4 PSARV012 BIT(1),                 /* RESERVED                 */
*     4 PSARV013 BIT(1),                 /* RESERVED                 */
*     4 PSARV014 BIT(1),                 /* RESERVED                 */
*    3 PSASUP4     BIT(8),               /* FOURTH BYTE OF PSASUPER  */
*     4 PSARV015 BIT(1),                 /* RESERVED                 */
*     4 PSARV016 BIT(1),                 /* RESERVED                 */
*     4 PSARV017 BIT(1),                 /* RESERVED                 */
*     4 PSARV018 BIT(1),                 /* RESERVED                 */
*     4 PSARV019 BIT(1),                 /* RESERVED                 */
*     4 PSARV020 BIT(1),                 /* RESERVED                 */
*     4 PSARV021 BIT(1),                 /* RESERVED                 */
*     4 PSARV022 BIT(1),                 /* RESERVED                 */
*   2 PSAGPREG  (3) FIXED(31),           /* REGISTER SAVE AREA FOR
*                                           I/O FLIH, SVC FLIH,
*                                           EXTERNAL FLIH AND SYSTEM
*                                           TRACE                    */
*   2 PSARSREG    FIXED(31),             /* RESTART FLIH REGISTER
*                                           SAVE                     */
*   2 PSAPIREG    FIXED(31),             /* PROGRAM CHECK FLIH
*                                           REGISTER SAVE            */
*   2 PSAEXPS1    CHAR(8) BDY(DWORD),    /* EXTERNAL FLIH PSW SAVE
*                                           AREA 1                   */
*   2 PSAEXPS2    CHAR(8) BDY(DWORD),    /* EXTERNAL FLIH PSW SAVE
*                                           AREA 2                   */
*   2 PSAMPSW     CHAR(8) BDY(DWORD),    /* SETLOCK MODEL PSW        */
*   2 PSAMCHEX    CHAR(8) BDY(DWORD),    /* MCH EXIT PSW             */
*   2 PSAIPCR     CHAR(4) BDY(WORD),     /* IPC INSTRUCTION TO BE
*                                           EXECUTED                 */
*   2 PSAIPCRM    CHAR(1),               /* BYTE USED BY ABOVE IPC
*                                           INSTRUCTION              */
*   2 *           CHAR(3),               /* RESERVED                 */
*   2 PSAIPCD     CHAR(4) BDY(WORD),     /* IPC INSTRUCTION TO BE
*                                           EXECUTED                 */
*   2 PSAIPCDM    CHAR(1),               /* BYTE USED BY ABOVE IPC
*                                           INSTRUCTION              */
*   2 *           CHAR(3),               /* RESERVED                 */
*   2 PSAIPCSA    FIXED(31),             /* IPC REGISTER SAVE AREA
*                                                              MDC049*/
*   2 PSAHLHIS    FIXED(31),             /* SAVE AREA FOR PSAHLHI
*                                                              MDC050*/
*   2 PSARECUR    CHAR(1),               /* RESTART FLIH RECURSION
*                                           INDICATOR.  IF X'00',
*                                           FLIH NOT IN CONTROL.  IF
*                                           X'FF', FLIH IN CONTROL,
*                                           ENTRY IS RECURSIVE MDC093*/
*   2 PSADSSGO    PTR(8),                /* INITIALIZE DSS FLAG, SET
*                                           BY OPERATOR.  IF X'00',
*                                           DSS NOT TO BE ACTIVATED.
*                                           IF NOT X'00', NEXT
*                                           RESTART INTERRUPT FROM
*                                           CONSOLE SHOULD INITIALIZE
*                                           DSS.               MDC094*/
*   2 PSARV050    FIXED(15),             /* RESERVED                 */
*   2 PSASRSA     PTR(31),               /* REAL ADDRESS OF SAVE AREA
*                                           USED DURING STOP AND
*                                           RESTART SUBROUTINE MDC095*/
*   2 PSACLHT     CHAR(56) BDY(WORD),    /* CPU LOCKS HELD TABLE.
*                                           INITIALIZED TO ZERO.
*                                           IF LOCK IS HELD, WORD
*                                           REPRESENTING LOCK HAS
*                                           ITS ADDRESS.             */
*    3 PSADISPL    PTR(31),              /* GLOBAL DISPATCHER LOCK   */
*    3 PSAASML     PTR(31),              /* AUXILIARY STORAGE
*                                           MANAGEMENT (ASM) LOCK
*                                                              MDC002*/
*    3 PSASALCL    PTR(31),              /* SPACE ALLOCATION LOCK
*                                                              MDC003*/
*    3 PSAIOSSL    PTR(31),              /* IOS SYNCHRONIZATION LOCK
*                                                              MDC010*/
*    3 PSAIOSCL    PTR(31),              /* IOS CHANNEL AVAILABLE
*                                           TABLE LOCK         MDC004*/
*    3 PSAIOSUL    PTR(31),              /* IOS UNIT CONTROL BLOCK
*                                           LOCK               MDC005*/
*    3 PSAIOSLL    PTR(31),              /* IOS LOGICAL CHANNEL QUEUE
*                                           LOCK               MDC006*/
*    3 PSATPNCL    PTR(31),              /* TCAM'S TPNCP LOCK  MDC007*/
*    3 PSATPDNL    PTR(31),              /* TCAM'S TPDNCB LOCK MDC008*/
*    3 PSATPACL    PTR(31),              /* TCAM'S TPACBDEB LOCK
*                                                              MDC009*/
*    3 PSAOPTL     PTR(31),              /* OPTIMIZER LOCK           */
*    3 PSACMSL     PTR(31),              /* CROSS MEMORY SERVICES
*                                           LOCK                     */
*    3 PSALOCAL    PTR(31),              /* LOCAL LOCK               */
*    3 PSARV023    PTR(31),              /* RESERVED LOCK            */
*   2 PSALKSA     CHAR(64) BDY(WORD),    /* SETLOCK REGISTER SAVE
*                                           AREA                     */
*    3 PSALKR0     FIXED(31),            /* SETLOCK'S CALLER'S
*                                           REGISTER 0               */
*    3 PSALKR1     FIXED(31),            /* SETLOCK'S CALLER'S
*                                           REGISTER 1               */
*    3 PSALKR2     FIXED(31),            /* SETLOCK'S CALLER'S
*                                           REGISTER 2               */
*    3 PSALKR3     FIXED(31),            /* SETLOCK'S CALLER'S
*                                           REGISTER 3               */
*    3 PSALKR4     FIXED(31),            /* SETLOCK'S CALLER'S
*                                           REGISTER 4               */
*    3 PSALKR5     FIXED(31),            /* SETLOCK'S CALLER'S
*                                           REGISTER 5               */
*    3 PSALKR6     FIXED(31),            /* SETLOCK'S CALLER'S
*                                           REGISTER 6               */
*    3 PSALKR7     FIXED(31),            /* SETLOCK'S CALLER'S
*                                           REGISTER 7               */
*    3 PSALKR8     FIXED(31),            /* SETLOCK'S CALLER'S
*                                           REGISTER 8               */
*    3 PSALKR9     FIXED(31),            /* SETLOCK'S CALLER'S
*                                           REGISTER 9               */
*    3 PSALKR10    FIXED(31),            /* SETLOCK'S CALLER'S
*                                           REGISTER 10              */
*    3 PSALKR11    FIXED(31),            /* SETLOCK'S CALLER'S
*                                           REGISTER 11              */
*    3 PSALKR12    FIXED(31),            /* SETLOCK'S CALLER'S
*                                           REGISTER 12              */
*    3 PSALKR13    FIXED(31),            /* SETLOCK'S CALLER'S
*                                           REGISTER 13              */
*    3 PSALKR14    FIXED(31),            /* SETLOCK'S CALLER'S
*                                           REGISTER 14              */
*    3 PSALKR15    FIXED(31),            /* SETLOCK'S CALLER'S
*                                           REGISTER 15              */
*   2 PSAHLHI     CHAR(4) BDY(WORD),     /* HIGHEST LOCK HELD
*                                           INDICATOR                */
*    3 PSACLHS     BIT(32) BDY(WORD),    /* CPU LOCKS HELD STRING
*                                                              MDC122*/
*   2 PSALITA     PTR(31),               /* ADDRESS OF LOCK INTERFACE
*                                           TABLE                    */
*   2 PSAPSWSV    CHAR(8) BDY(DWORD),    /* PSW SAVE AREA FOR
*                                           DISPATCHER AND ACR       */
*   2 PSACR0      FIXED(31),             /* SAVE AREA FOR CONTROL
*                                           REGISTER 0               */
*   2 PSAMCHFL    BIT(8),                /* MCH RECURSION FLAGS      */
*   2 PSASYMSK    CHAR(1),               /* THIS FIELD WILL BE USED
*                                           IN CONJUNCTION WITH THE
*                                           STNSM INSTRUCTION TO
*                                           PLACE IOS CHANNEL
*                                           SCHEDULER INTO A DISABLED
*                                           STATE AND SIMULTANEOUSLY
*                                           SAVE THE SYSTEM MASK OF
*                                           THE CALLER         MDC022*/
*   2 PSARV061    CHAR(1),               /* RESERVED  (MDC060) YM4244*/
*   2 PSAMCHIC    CHAR(1),               /* MCH INITIALIZATION
*                                           COMPLETE FLAGS     MDC098*/
*   2 PSAWKRAP    PTR(31),               /* REAL ADDRESS OF VARY CPU
*                                           PARAMETER LIST     MDC106*/
*   2 PSAWKVAP    PTR(31),               /* VIRTUAL ADDRESS OF VARY
*                                           CPU PARAMETER LIST MDC107*/
*   2 PSAVSTAP    FIXED(15),             /* WORK AREA FOR VARY CPU
*                                                              MDC108*/
*   2 PSACPUSA    PTR(15),               /* PHYSICAL CPU ADDRESS
*                                           (STATIC)  (MDC131) YM3489*/
*   2 PSASTOR     FIXED(31),             /* MASTER MEMORY'S SEGMENT
*                                           TABLE ORIGIN REGISTER
*                                           (STOR) VALUE             */
*   2 PSADSSRS    FIXED(31),             /* REGISTER SAVE FOR DSS
*                                           PROGRAM AND SVC INTERRUPT
*                                           HANDLERS           MDC053*/
*   2 PSADSSR2    FIXED(31),             /* REGISTER SAVE AREA FOR
*                                           DSS I/O AND EXTERNAL
*                                           INTERRUPT HANDLERS MDC054*/
*   2 PSADSSR3    FIXED(31),             /* REGISTER SAVE AREA FOR
*                                           DSS ERROR RECOVERY
*                                           ROUTINE            MDC055*/
*   2 PSADSSWK    FIXED(31),             /* WORK AREA FOR DSS
*                                           INTERRUPT HANDLERS MDC056*/
*   2 PSADSSTS  (5) FIXED(31),           /* REGISTER SAVE FOR DSS
*                                           MODULES MAKING CALLS TO
*                                           IQATSS             MDC023*/
*   2 PSADSSFL    CHAR(4) BDY(WORD),     /* DSS FLAG BYTES     MDC024*/
*    3 PSADSSF1    BIT(8),               /* DSS STATUS BYTE    MDC029*/
*     4 PSADSSMV BIT(1),                 /* DSS MONITORING, VS2
*                                           RUNNING            MDC030*/
*     4 PSADSSDM BIT(1),                 /* DSS IN VS2-2 VM    MDC031*/
*     4 PSADSSDD BIT(1),                 /* DSS IN DSS VM      MDC032*/
*     4 PSADSSDW BIT(1),                 /* DSS IN DSS WAIT    MDC033*/
*     4 PSADSSTP BIT(1),                 /* DSS PROCESSING SIGP
*                                                              MDC034*/
*     4 PSADSSSP BIT(1),                 /* DSS SIGP PENDING   MDC035*/
*     4 PSADSSOI BIT(1),                 /* DSS EXECUTING OVERLAID
*                                           INSTRUCTION        MDC036*/
*     4 PSADSSPI BIT(1),                 /* DSS EXECUTING PRIVILEGED
*                                           INSTRUCTION        MDC037*/
*    3 PSADSSF2    CHAR(1),              /* SYSTEM STATUS BYTE MDC038*/
*%PSADSSPS='''FF''X';                    /* SYSTEM RUNNING IN PROBLEM
*                                           STATE              MDC039*/
*%PSADSSSS='''FE''X';                    /* SYSTEM RUNNING IN
*                                           PRIVILEGED STATE   MDC040*/
*    3 PSADSSF3    BIT(8),               /* DSS FLAG BYTE      MDC099*/
*     4 PSADSSGP BIT(1),                 /* DSS SIGP INDICATOR MDC100*/
*     4 PSADSSES BIT(1),                 /* ERROR SHORT SAVE
*                                           INDICATOR          MDC113*/
*     4 PSADSSNM BIT(1),                 /* NON-MONITORABLE CODE
*                                           INDICATOR          MDC114*/
*     4 PSADSSRW BIT(1),                 /* DSS OWNS CVTRSTWD  MDC117*/
*     4 PSADSSMC BIT(1),                 /* MACHINE CHECK RUNNING
*                                           (MDC132)           YM6287*/
*     4 PSARV055 BIT(1),                 /* RESERVED FOR DSS   MDC100*/
*     4 PSARV056 BIT(1),                 /* RESERVED FOR DSS   MDC100*/
*     4 PSARV057 BIT(1),                 /* RESERVED FOR DSS   MDC100*/
*    3 PSADSSF4    BIT(8),               /* DSS RECURSION FLAGS
*                                                              MDC101*/
*     4 PSADSSRC BIT(1),                 /* PROGRAM-SVC RECURSION
*                                           FLAG               MDC057*/
*     4 PSADSS12 BIT(1),                 /* PROGRAM INTERRUPT 12
*                                           RECURSION FLAG     MDC058*/
*     4 PSADSSIE BIT(1),                 /* I/O-EXTERNAL RECURSION
*                                           FLAG               MDC059*/
*     4 PSADSSC0 BIT(1),                 /* CONTROL REGISTER 0
*                                           INVALID FLAG       MDC092*/
*     4 PSADSSDE BIT(1),                 /* DAT ERROR WHILE DSS
*                                           RUNNING IN VS2 VM  MDC102*/
*     4 PSADSSVE BIT(1),                 /* DAT ERROR WHILE DSS
*                                           RUNNING IN DSS VM  MDC103*/
*     4 PSADSS10 BIT(1),                 /* SEGMENT EXCEPTION
*                                           RECURSION FLAG     MDC104*/
*     4 PSADSS05 BIT(1),                 /* ADDRESSING EXCEPTION
*                                           RECURSION FLAG     MDC105*/
*   2 PSADSSRP    CHAR(8) BDY(DWORD),    /* DSS TO VS2-2 RESUME PSW
*                                                              MDC025*/
*   2 PSADSSPP    CHAR(8) BDY(DWORD),    /* DSS PSW FOR RETURNING
*                                           CONTROL FROM PRIVILEGED
*                                           INSTRUCTION STREAM TO
*                                           VS2                MDC026*/
*   2 PSADSS14    FIXED(31),             /* RESTART SECOND LEVEL
*                                           INTERRUPT HANDLER CONTROL
*                                           REGISTER 14 SAVE AREA
*                                                              MDC115*/
*   2 PSADSSFW    FIXED(31),             /* FULL-WORD DSS WORK AREA
*                                                              MDC116*/
*   2 PSADSSPR    FIXED(31),             /* DSS REGISTER SAVE FOR
*                                           PRIVILEGED INSTRUCTION
*                                           STREAM             MDC028*/
*   2 PSADSSED    CHAR(0) BDY(WORD),     /* END OF DSS FIELDS  MDC045*/
*   2 PSARV025    FIXED(31),             /* RESERVED FOR DSS         */
*   2 PSARV040    PTR(31),               /* RESERVED FOR DSS         */
*   2 PSARV041    PTR(31),               /* RESERVED FOR DSS         */
*   2 PSARV042    PTR(31),               /* RESERVED FOR DSS         */
*   2 PSARV043    PTR(31),               /* RESERVED FOR DSS         */
*   2 PSARV044    PTR(31),               /* RESERVED FOR DSS         */
*   2 PSARV045    PTR(31),               /* RESERVED FOR DSS         */
*   2 PSARSVT  (16) PTR(31),             /* RECOVERY STACK VECTOR
*                                           TABLE (EACH ELEMENT
*                                           MAPPED BELOW)      MDC064*/
*   2 PSASRPSW    CHAR(8) BDY(DWORD),    /* RESUME PSW FOR STOP AND
*                                           RESTART SUBROUTINE MDC096*/
*   2 PSARSPSW    CHAR(8) BDY(DWORD),    /* RESUME PSW FIELD FOR
*                                           RESTART INTERRUPT HANDLER
*                                                              MDC097*/
*   2 PSASTART    CHAR(16) BDY(DWORD),   /* START FATHOM RECORDING
*                                                              MDC111*/
*   2 PSASTOP     CHAR(16) BDY(DWORD),   /* STOP FATHOM RECORDING
*                                                              MDC112*/
*   2 PSASFACC    CHAR(4) BDY(WORD),     /* SETFRR ABEND COMPLETION
*                                           CODE USED WHEN A SETFRR
*                                           ADD IS ISSUED AGAINST A
*                                           FULL FRR STACK     MDC123*/
*   2 PSALSFCC    CHAR(4) BDY(WORD),     /* A LOAD INSTRUCTION TO
*                                           PRIME REGISTER 1 WITH THE
*                                           SETFRR ABEND COMPLETION
*                                           CODE IN PSASFACC   MDC124*/
*   2 PSASVC13    CHAR(2),               /* AN SVC 13 INSTRUCTION
*                                                              MDC125*/
*   2 PSARV059    FIXED(15),             /* RESERVED                 */
*   2 PSAPIR2     FIXED(31),             /* PROGRAM CHECK FLIH
*                                           REGISTER SAVE
*                                           (MDC303)         @ZM08516*/
*   2 PSAPCPSW    CHAR(8) BDY(DWORD),    /* TEMPORARY OLD PSW STORAGE
*                                           FOR PROGRAM FLIH
*                                           (MDC129)           YM0943*/
*   2 PSAATCVT    PTR(31),               /* ADDRESS OF VTAM ATCVT.
*                                           INITIALIZED BY VTAM.
*                                           (MDC300)         @Z30AP9A*/
*   2 PSARV062    FIXED(31),             /* RESERVED         @Z30AQ9A*/
*   2 PSAUSEND    CHAR(0) BDY(DWORD),    /* END OF ASSIGNED FIELDS
*                                                              MDC109*/
*   2 *           CHAR(2032) BDY(DWORD), /* RESERVED         @Z30AQ9A*/
*   2 PSASTAK     CHAR(596) BDY(DWORD),  /* NORMAL FRR STACK
*                                           (MDC304)         @ZM32352*/
*   2 *           CHAR(428);             /* RESERVED FOR EXPANSION OF
*                                           PSASTAK (MDC304) @ZM32352*/
*
*
*%IF IKEPLS='2'  %THEN
*    %GOTO PSA0100;
*DECLARE FLC BASED(ADDR(PSA)) CHAR(LENGTH(PSA)) BDY(DWORD);
*%GOTO PSA0200;
*%PSA0100 : ;
*DECLARE FLC DEF(PSA) CHAR(LENGTH(PSA)) BDY(DWORD);
*%PSA0200 : ;
*
*
*DECLARE
*%IF IKEPLS='2'  %THEN
*    %GOTO PSA0300;
*  1 PSARSVTE CHAR(64) BASED(ADDR(PSARSVT)) BDY(WORD),
*%GOTO PSA0400;
*%PSA0300 : ;
*  1 PSARSVTE CHAR(64) DEF(PSARSVT) BDY(WORD),
*%PSA0400 : ;
*                                        /* RECOVERY STACK VECTOR
*                                           TABLE              MDC065*/
*   2 PSACSTK     PTR(31),               /* ADDRESS OF CURRENTLY USED
*                                           FUNCTIONAL RECOVERY
*                                           ROUTINE (FRR) STACK
*                                                              MDC061*/
*   2 PSANSTK     PTR(31),               /* ADDRESS OF NORMAL FRR
*                                           STACK              MDC062*/
*   2 PSASSTK     PTR(31),               /* ADDRESS OF SVC-I/O-
*                                           DISPATCHER FRR STACK
*                                                              MDC063*/
*   2 PSASSAV     PTR(31),               /* ADDRESS OF INTERRUPTED
*                                           STACK SAVED BY SVC-I/O-
*                                           DISPATCHER         MDC066*/
*   2 PSAMSTK     PTR(31),               /* ADDRESS OF MCH FRR STACK
*                                                              MDC067*/
*   2 PSAMSAV     PTR(31),               /* ADDRESS OF INTERRUPTED
*                                           STACK SAVED BY MCH MDC068*/
*   2 PSAPSTK     PTR(31),               /* ADDRESS OF PROGRAM CHECK
*                                           FLIH FRR STACK     MDC069*/
*   2 PSAPSAV     PTR(31),               /* ADDRESS OF INTERRUPTED
*                                           STACK SAVED BY PROGRAM
*                                           CHECK FLIH         MDC070*/
*   2 PSAESTK1    PTR(31),               /* ADDRESS OF EXTERNAL FLIH
*                                           FRR STACK FOR NON-
*                                           RECURSIVE ENTRIES  MDC071*/
*   2 PSAESAV1    PTR(31),               /* ADDRESS OF INTERRUPTED
*                                           STACK SAVED BY NON-
*                                           RECURSIVE ENTRIES  MDC072*/
*   2 PSAESTK2    PTR(31),               /* ADDRESS OF EXTERNAL FLIH
*                                           FRR STACK FOR FIRST LEVEL
*                                           RECURSIONS         MDC073*/
*   2 PSAESAV2    PTR(31),               /* ADDRESS OF INTERRUPTED
*                                           STACK SAVED BY EXTERNAL
*                                           FLIH FOR FIRST LEVEL
*                                           RECURSIONS         MDC074*/
*   2 PSAESTK3    PTR(31),               /* ADDRESS OF EXTERNAL FLIH
*                                           FRR STACK FOR SECOND
*                                           LEVEL RECURSIONS AND
*                                           ACR                MDC075*/
*   2 PSAESAV3    PTR(31),               /* ADDRESS OF INTERRUPTED
*                                           STACK SAVED BY EXTERNAL
*                                           FLIH (ACR) FOR SECOND
*                                           LEVEL RECURSIONS   MDC076*/
*   2 PSARSTK     PTR(31),               /* ADDRESS OF RESTART FLIH
*                                           FRR STACK          MDC077*/
*   2 PSARSAV     PTR(31);               /* ADDRESS OF INTERRUPTED
*                                           STACK SAVED BY RESTART
*                                           FLIH               MDC078*/
