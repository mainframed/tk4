CMNER22  $PROLOG
***********************************************************************
*        PROGRAM - CMNER21                                            *
*        DATE WRITTEN - JULY 1981                                     *
*        AUTHOR  - R. A. CLAUER                                       *
*        PURPOSE - THIS IS A REENTRANT ROUTINE WHICH AUTHORIZES ITSELF*
*               BUILDS A ADDUSER COMMAND AND BRANCHES TO ISPCAT.      *
*               ISPCAT IS A SPF SUBROUTINE WHICH ATTACHES AND EXECUTES*
*               TSO COMMANDS.                                         *
*                                                                     *
*        PANELS USED - CMNER21                                        *
*                                                                     *
*        ERROR MESSAGES - CMNER210 - CMNER213                         *
*                                                                     *
*        CHANGE LOG -                                                 *
*          MM/DD/YY -                                                 *
*                                                                     *
***********************************************************************
         EJECT
         GETMAIN R,LV=DYNWKLN
         LR    R8,R1               COPY ADDR OF GOTTEN STORAGE
         LA    R9,DYNWKLN          LENGTH OF DYNAMIC AREA
         LR    R3,R9               COPY LENGTH FOR MOVE
         LA    R2,DYNWK            BEGINNING ADDR OF MOVE
         MVCL  R8,R2               MOVE INTO GOTTEN AREA
         LR    R8,R1
         USING DYNWK,R8
         BAL   R10,SETUP
         MVC   CURSOR,=CL8'CMNERNAM'
         CALL  ISPLINK,(VDISPLAY,PANEL,,CURSOR)
C22005   CH    R15,=H'8'           WAS END KEY ENTERED
         BE    C22999              YES, THEN GET OUT
         LTR   R15,R15             CHECK RETURN
         BZ    C22010              GOOD
         ABEND 1,DUMP              NOPE
C22010   CLC   CMNERNAM,=CL20' '   WAS NAME ENTERED
         BNE   C22020              YES--OKAY
         CALL  ISPLINK,(VDISPLAY,PANEL,MSG03,CURSOR)
         B     C22005              GO CHECK RETURNS
C22020   LA    R3,CMD+3            GET FIRST AVAILABLE BYTE IN COMMAND
         MVI   CMD+3,C' '          CLEAR OUT
         MVC   CMD+4(251),CMD+3             COMMAND BUFFER
         MVC   0(4,R3),CMNERUID    MOVE IN USER ID TO BE ADDED
         LA    R3,5(R3)            MOVE BEYOND IT
         MVC   0(5,R3),=C'NAME('   MOVE IN KEYWORD
         MVC   5(20,R3),CMNERNAM   MOVE IN NAME
         TRT   0(26,R3),BLANKTAB   CHECK FOR FIRST BLANK
         BNZ   C22030              FOUND IT
         ABEND 2,DUMP
C22030   MVI   0(R1),C')'          MOVE IN CLOSING PAREN
         LA    R3,2(R1)            MOVE BEYOND
         MVC   0(6,R3),=C'OWNER('  MOVE IN OWNER NAME
         MVC   6(4,R3),CMNEROWN    MOVE IN OWNER
         TRT   0(11,R3),BLANKTAB   CHECK FOR FIRST BLANK
         BNZ   C22050              FOUND IT
         ABEND 2,DUMP
C22050   MVI   0(R1),C')'          MOVE IN CLOSING PAREN
         LA    R3,2(R1)            MOVE BEYOND IT
         MVC   0(8,R3),=C'DFLTGRP('
         MVC   8(4,R3),CMNERDFG    MOVE IN DEFAULT GROUP
         TRT   0(13,R3),BLANKTAB   FIND FIRST BLANK
         BNZ   C22060              FOUND IT
         ABEND 2,DUMP
C22060   MVI   0(R1),C')'          MOVE IN CLOSING PAREN
         LA    R3,2(R1)            MOVE BEYOND IT
         MVC   0(10,R3),=C'AUTHORITY('  MOVE IN KEYWORD
         MVC   10(8,R3),CMNERGAU   MOVE IN GROUP AUTHORITY
         TRT   0(19,R3),BLANKTAB   CHECK FOR FIRST BLANK
         BNZ   C22070              FOUND IT
         ABEND 2
C22070   MVI   0(R1),C')'          MOVE IN CLOSING PAREN
         LA    R3,2(R1)            MOVE BEYOND IT
         CLC   CMNERCL1,=CL8' '    WAS CLASS1 ENTERED
         BE    C22090              NO, THEN NO CLASS AUTHORIZATIONS
         MVC   0(7,R3),=C'CLAUTH(' MOVE IN KEYWORD
         MVC   7(8,R3),CMNERCL1    MOVE IN CLASS
         TRT   0(19,R3),BLANKTAB   SEARCH FOR FIRST BLANK
         BNZ   C22072              FOUND IT
         ABEND 2,DUMP
C22072   EQU   *
         CLC   CMNERCL2,=CL8' '    WAS CLASS2 ENTERED
         BE    C22080              NO, THEN CLOSE OFF CLAUTH PARM
         LA    R3,1(R1)            ADVANCE PAST BLANK
         MVC   0(8,R3),CMNERCL2    MOVE IN CLASS
         TRT   0(9,R3),BLANKTAB    SEARCH FOR FIRST BLANK
         BNZ   C22074              FOUND IT
         ABEND 2,DUMP
C22074   EQU   *
         CLC   CMNERCL3,=CL8' '    WAS CLASS3 ENTERED? ? ?
         BE    C22080              NO, THEN CLOSE OFF CLAUTH PARM
         LA    R3,1(R1)            ADVANCE PAST BLANK
         MVC   0(8,R3),CMNERCL3    MOVE IN CLASS
         TRT   0(9,R3),BLANKTAB    SEARCH FOR FIRST BLANK
         BNZ   C22080
         ABEND 2,DUMP
C22080   MVI   0(R1),C')'          MOVE IN CLOSING PAREN
         LA    R3,2(R1)            ADVANCE BEYOND
C22090   CLC   CMNERDAT,=CL30' '    ANY USER DATA
         BE    C22100              NO
         MVC   0(6,R3),=C'DATA('''
         MVC   6(30,R3),CMNERDAT   MOVE IN DATA
         TRT   0(37,R3),BLANKTAB   CHECK FOR FIRST BLANK
         BNZ   C22095
         ABEND 2,DUMP
C22095   MVC   0(2,R1),=C''')'     CLOSING QUOTE AND PAREN
         LA    R3,3(R1)
C22100   CLC   CMNERGAC,=CL3'YES'  GRPACC REQUIRED
         BNE   C22110              NO--
         MVC   0(6,R3),=C'GRPACC'
         LA    R3,7(R3)            ADVANCE POINTER
C22110   CLC   CMNERADS,=CL3'YES'  ADSP REQUIRED
         BNE   C22120              NO--
         MVC   0(4,R3),=C'ADSP'
         LA    R3,5(R3)            ADVANCE POINTER
C22120   CLC   CMNERSPC,=CL3'YES'  SPECIAL REQUIRED
         BNE   C22130              NO--
         MVC   0(7,R3),=C'SPECIAL'
         LA    R3,8(R3)            ADVANCE POINTER
C22130   CLC   CMNEROPN,=C'YES'    OPERATIONS REQUIRED
         BNE   C22140              NO--
         MVC   0(10,R3),=C'OPERATIONS'
         LA    R3,11(R3)           ADVANCE POINTER
C22140   CLC   CMNERAUD,=C'YES'    AUDITOR REQUIRED
         BNE   C22150              NO--
         MVC   0(7,R3),=C'AUDITOR'
C22150   L     R2,X'21C'           TCB OLD
         L     R2,X'70'(R2)        ADDR OF 1ST SAVE AREA
         L     R2,X'18'(R2)        R1 IN 1ST SAVE AREA PTS TO PARMS
         L     R2,0(R2)            1ST PARM IS TLD
         CLC   =C'TLD',0(R2)       CHECK TO MAKE SURE
         BE    C22160              YES
         ABEND 3,DUMP              TOO BAD
C22160   ST    R2,ISPCATCL         STORE IN LIST
         LOAD  EP=ISPSUBS
         LR    R3,R0               COPY ENTRY POINT
         LA    R1,=C'AUTH'
         SVC   231                 MAKE AUTHORIZED
         LA    R4,ISPCATRC         RELOCATE
         ST    R4,ISPCATCL+8               RETURN CODE
         LA    R4,CMDBUF           RELOCATE
         ST    R4,ISPCATCL+4               COMMAND BUFFER
         L     R15,X'2C'(R3)       EP OF ISPCAT
         LA    R1,ISPCATCL
         BALR  R14,R15             GO DO COMMAND
         L     R4,ISPCATRC
         SR    R1,R1               MAKE UNAUTHORIZED
         SVC   231
         LTR   R4,R4
         BZ    C22170              GOOD, DISPLAY COMPLETE MESSAGE
         ST    R4,CMNERRC
         CALL  ISPLINK,(VDISPLAY,PANEL,MSG02,)
         B     C22005
C22170   CALL  ISPLINK,(VDISPLAY,PANEL,MSG01,)
         B     C22005
C22999   FREEMAIN R,LV=DYNWKLN,A=(8)
         $EPILOG
         TITLE  '***** SET ROUTINE *****'
SETUP    CALL  ISPLINK,(,,CMNERUID),MF=(E,ISPLNK1)
         CALL  ISPLINK,(,,CMNERPAS),MF=(E,ISPLNK2)
         CALL  ISPLINK,(,,CMNERDAT),MF=(E,ISPLNK3)
         CALL  ISPLINK,(,,CMNERNAM),MF=(E,ISPLNK4)
         CALL  ISPLINK,(,,CMNERGAC),MF=(E,ISPLNK5)
         CALL  ISPLINK,(,,CMNERRC),MF=(E,ISPLNK6)
         CALL  ISPLINK,(VGET,LIST1,SHARED)
         L     R4,544              ASCB
         L     R4,108(R4)          ASXB
         L     R4,200(R4)          ACEE
         USING ACEE,R4
         MVC   CMNEROWN,ACEEUSRI   MOVE IN DEFAULT OWNER
         MVC   CMNERDFG,ACEEGRPN   MOVE IN DEFAULT GROUP
         BR    R10
         DROP  R4
         TITLE '***** CONSTANTS *****'
*
*  DIALOG MANAGER SERVICES
*
VGET     DC    CL8'VGET'
VPUT     DC    CL8'VPUT'
VDISPLAY DC    CL8'DISPLAY'
VDEF     DC    CL8'VDEFINE'
*
*  DIALOG MANAGER LENGTHS
*
LNG3     DC    F'3'
LNG4     DC    F'4'
LNG8     DC    F'8'
LNG20    DC    F'20'
LNG30    DC    F'30'
*
*  DIALOG MANAGER LISTS
*
LIST1    DC    C'(CMNERUID)'
LIST2    DC    C'(CMNERUID CMNEROWN CMNERDFG)'
LIST3    DC    C'(CMNERPAS '
         DC    C'CMNERGAU '
         DC    C'CMNERCL1 '
         DC    C'CMNERCL2 '
         DC    C'CMNERCL3)'
LIST4    DC    C'(CMNERDAT)'
LIST5    DC    C'(CMNERNAM)'
LIST6    DC    C'(CMNERGAC '
         DC    C'CMNERADS '
         DC    C'CMNERSPC '
         DC    C'CMNEROPN '
         DC    C'CMNERAUD)'
LIST7    DC    C'(CMNERRC)'
SHARED   DC    CL8'SHARED'
CHAR     DC    CL8'CHAR'
FIXED    DC    CL8'FIXED'
PANEL    DC    CL8'CMNER22'
MSG01    DC    CL8'CMNER220'
MSG02    DC    CL8'CMNER221'
MSG03    DC    CL8'CMNER222'
MSG04    DC    CL8'CMNER223'
BLANKTAB DC    64X'00'
         DC    X'01'
         DC    191X'00'
         LTORG
         TITLE '***** DYNAMIC AREAS *****'
         DS    0D
DYNWK    EQU   *
ISPCATRC DC    A(0)
ISPCATCL DC    3A(0)
*
*  DIALOG MANAGER VARIABLS
*
CMNERUID DS    CL4
CMNEROWN DC    CL4' '
CMNERDFG DC    CL4' '
CMNERPAS DC    CL8'OLD'
CMNERGAU DC    CL8'USE'
CMNERCL1 DC    CL8' '
CMNERCL2 DC    CL8' '
CMNERCL3 DC    CL8' '
CMNERDAT DC    CL30' '
CMNERNAM DC    CL20' '
CMNERGAC DC    CL3'NO'
CMNERADS DC    CL3'NO'
CMNERSPC DC    CL3'NO'
CMNEROPN DC    CL3'NO'
CMNERAUD DC    CL3'NO'
CMNERRC  DC    F'0'
PEVUID   DC    CL4' '
ISPLNK1  CALL ,(VDEF,LIST2,CMNERUID,CHAR,LNG4),MF=L
ISPLNK2  CALL ,(VDEF,LIST3,CMNERPAS,CHAR,LNG8),MF=L
ISPLNK3  CALL ,(VDEF,LIST4,CMNERDAT,CHAR,LNG30),MF=L
ISPLNK4  CALL ,(VDEF,LIST5,CMNERNAM,CHAR,LNG20),MF=L
ISPLNK5  CALL ,(VDEF,LIST6,CMNERGAC,CHAR,LNG3),MF=L
ISPLNK6  CALL ,(VDEF,LIST7,CMNERRC,FIXED,LNG4),MF=L
CURSOR   DC    CL8'CMNERUID'
CMDBUF   DC    H'256'
         DC    H'3'
CMD      DC    CL256'AU '
DYNWKLN  EQU   *-DYNWK
         IHAACEE
         END
