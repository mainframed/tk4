         TITLE '***** PERMIT GENERAL RESOURCE *****'
CMNER51  $PROLOG
***********************************************************************
*                                                                     *
*        PROGRAM - CMNER51                                            *
*        DATE WRITTEN - AUGUST 1981                                   *
*        AUTHOR  - R. A. CLAUER                                       *
*        PURPOSE - THIS IS A REENTRANT WHICH ALLOWS MODIFICATION OF   *
*               ACCESS LISTS FOR GENERAL RESOURCES. IT BUILDS A PERMIT*
*               COMMAND AND BRANCHES TO SPF SUBROUTINE ISPCAT         *
*                                                                     *
*        PANELS USED - CMNER51                                        *
*                                                                     *
*        ERROR MESSAGES - CMNER510 - CMNER519                         *
*                                                                     *
*        CHANGE LOG -                                                 *
*          MM/DD/YY -                                                 *
*                                                                     *
***********************************************************************
         EJECT
         GETMAIN R,LV=DYNWKLN
         LR    R8,R1               COPY ADDR OF GOTTEN STORAGE
         LA    R9,DYNWKLN          LENGTH OF DYNAMIC AREA
         LR    R3,R9               COPY LENGTH FOR MOVE
         LA    R2,DYNWK            BEGINNING ADDR OF MOVE
         MVCL  R8,R2               MOVE INTO GOTTEN AREA
         USING DYNWK,R8
         LR    R8,R1               RESTORE TO BEGININNING
         BAL   R10,SETUP
P51010   CALL  ISPLINK,(VGET,LIST1,SHARED)
P51030   CALL  ISPLINK,(VPUT,VNXTSW,SHARED)
         CALL  ISPLINK,(VSELECT,LNG12,CMNER18)
         CALL  ISPLINK,(VGET,LIST1,SHARED)
         L     R15,CMNERRC         GET RETURN CODE FROM FILL MODULE
         LTR   R15,R15
         BZ    P51035              IF ZERO CONTINUE
*                                  OTHERWISE DISPLAY AN ERROR MSG
         ST    R15,CMNERRC
         CALL  ISPLINK,(VDISPLAY,CMNER01,MSG01,)
         B     P51099              AND GET OUT
P51035   BAL   R10,CHKAUTH         CHECK AUTHORIZATION
         LTR   R15,R15             CHECK RETURN CODE
         BNZ   P51099              IF NOT ZERO, THEN GET OUT
         XR    R11,R11             CLEAR MSG REG
         BAL   R10,DISPSUB         GO DISPLAY SOMETHING
         SPACE 5
P51040   EQU   *                   CHECK SELECTION CRITERA
         CLI   CMNERSEL,C' '       WAS A SELECTION MADE
         BE    P51150              YES--GO TO COMMAND PROCESSING
         CLI   CMNERSEL,0          NULL OR BLANK MEAN NO SELECTION MADE
         BE    P51150
         MVI   CMD+3,C' '          CLEAR COMMAND BUFFER
         MVC   CMD+4(251),CMD+3
         MVC   CMD+3(L'CMNERRES),CMNERRES      MOVE IN RESOURCE NAME
         MVC   CMD+12(6),=C'CLASS('   MOVE IN KEYWORD
         MVC   CMD+18(L'CMNERCLS),CMNERCLS     MOVE IN CLASS
         LA    R5,CMD+18           BEGINING  OF CLASS
         TRT   0(L'CMNERCLS+1,R5),BLANKTAB FIND FIRST BLANK
         MVI   0(R1),C')'          MOVE IN CLOSING PAREN
         LA    R5,2(R1)            POSITION R5 TO NEXT AVAILABLE BYTE
         XR    R2,R2               CLEAR R2
         MVC   CMNERTMS,=CL10'**CHANGED'
         TRT   CMNERSEL,COMTAB     CHECK WHICH OPTION
         BNZ   P51050              FOUND IT
         LA    R11,MSG06
         BAL   R10,DISPSUB
         B     P51040
P51050   B     P51050(R2)
         B     P51060              (4 -> A)
         B     P51070              (8 -> C)
         B     P51080              (12 -> D)
         B     P51090              (16 -> N)
         B     P51100              (20 -> R)
         B     P51110              (24 -> U)
P51060   MVC   0(13,R5),=C'ACCESS(ALTER)'
         MVC   CMNERTAU,=CL8'ALTER'
         LA    R5,14(R5)
         B     P51120
P51070   MVC   0(15,R5),=C'ACCESS(CONTROL)'
         MVC   CMNERTAU,=CL8'CONTROL'
         LA    R5,16(R5)
         B     P51120
P51080   MVC   0(6,R5),=C'DELETE'
         MVC   CMNERTAU,=CL8' '
         MVC   CMNERTMS,=CL10'**DELETED'
         LA    R5,7(R5)
         B     P51120
P51090   MVC   0(12,R5),=C'ACCESS(NONE)'
         MVC   CMNERTAU,=CL8'NONE'
         LA    R5,13(R5)
         B     P51120
P51100   MVC   0(12,R5),=C'ACCESS(READ)'
         MVC   CMNERTAU,=CL8'READ'
         LA    R5,13(R5)
         B     P51120
P51110   MVC   0(14,R5),=C'ACCESS(UPDATE)'
         MVC   CMNERTAU,=CL8'UPDATE'
         LA    R5,15(R5)
P51120   MVC   0(3,R5),=C'ID('
         MVC   3(L'CMNERTUI,R5),CMNERTUI   MOVE IN ID
         TRT   3(L'CMNERTUI+1,R5),BLANKTAB
         MVI   0(R1),C')'          MOVE IN CLOSING PAREN
         BAL   R10,ISSUE           GO ISSUE COMMAND
         CLC   ISPCATRC,=F'0'      CHECK FOR GOOD RETURN
         BE    P51140              YES-
         MVC   CMNERTMS,=CL10'**FAILED'
P51140   CALL  ISPLINK,(VTBPUT,TABLE,LIST4)
         SPACE 5
P51150   EQU   *                   BEGIN
*                                       PROCESSING
*                                            COMMAND
*                                                LINE
*
         OC    CMNEROPT,=CL20' '
         CLC   CMNEROPT(4),=C'NEXT'
         BE    P51190              YES
         CLC   CMNEROPT(2),=C'A '  IS THIS AN ADD
         BE    P51160
P51152   MVI   CMNERNXT,X'00'      SET DEFAULT NEXT SWITCH
         LA    R11,MSG02
         BAL   R10,DISPSUB
         B     P51040
P51160   EQU   *                   ADD NEW USER TO ACCESS LIST
         MVI   CMD+3,C' '          CLEAR COMMAND BUFFER
         MVC   CMD+4(251),CMD+3
         MVC   CMD+3(8),CMNERRES      MOVE IN RESOURCE NAME
         MVC   CMD+12(6),=C'CLASS('   MOVE IN KEYWORD
         MVC   CMD+18(8),CMNERCLS     MOVE IN CLASS
         LA    R5,CMD+18           BEGINING  OF CLASS
         LA    R11,MSG07
         TRT   0(L'CMNERCLS+1,R5),BLANKTAB FIND FIRST BLANK
         MVI   0(R1),C')'          MOVE IN CLOSING PAREN
         LA    R5,2(R1)            POSITION R5 TO NEXT AVAILABLE BYTE
         LA    R3,CMNEROPT+2       GET FIRST BYTE OF USERID
         CLI   0(R3),C' '          IS IT BLANK
         BE    P51185              YES, THEN ERROR
         TRT   0(L'CMNERTUI+1,R3),BLANKTAB FIND FIRST BLANK
         BZ    P51185              NOT FOUND, THEN BAD ADD
         SR    R1,R3               GET LENGTH OF USER ID
         BCTR  R1,0                REDUCE FOR MOVE
         MVC   0(3,R5),=C'ID('     MOVE IN KEYWORD
         EX    R1,MOVEUID1         MOVE IN USER ID
         MVC   CMNERTUI,=CL8' '    CLEAR USER ID
         EX    R1,MOVEUID2         MOVE IN USER ID
         LA    R5,4(R1,R5)
         MVI   0(R5),C')'          CLOSING PAREN
         LA    R5,2(R5)
         MVC   0(7,R5),=C'ACCESS(' MOVE IN KEYWORD
         LA    R5,7(R5)
         LA    R3,2(R3,R1)         ADVANCE TO AUTHORITY
         CLI   0(R3),C' '          IS IT BLANK ? ?
         BE    P51185              YES, THEN ERROR
         TRT   0(8,R3),BLANKTAB    FIND FIRST BLANK
         BZ    P51185              NOT FOUND, THEN BAD ADD
         SR    R1,R3               FIND LENGTH
         BCTR  R1,0                REDUCE FOR MOVE
         EX    R1,MOVEAUT1         MOVE IN AUTHORITY
         MVC   CMNERTAU,=CL8' '
         EX    R1,MOVEAUT2         MOVE IN AUTHORITY
         LA    R5,1(R1,R5)
         MVI   0(R5),C')'
         BAL   R10,ISSUE           ISSUE COMMAND
         LA    R11,MSG08
         L     R4,ISPCATRC         CHECK RETURN FROM COMMAND
         LTR   R4,R4
         BNZ   P51185              COMMAND FAILED
         MVC   CMNERTMS,=CL10'**ADDED' COMMAND SUCCEEDED
         CALL  ISPLINK,(VTBMOD,TABLE,LIST4)  ADD NEW USER TO TABLE
         LA    R11,MSG09
         LTR   R15,R15
         BZ    P51185              MOD
         CH    R15,=H'8'
         BE    P51180              ADD
         ABEND 6,DUMP
P51180   CALL  ISPLINK,(VTBSKIP,TABLE,NEG15,)  REPOSITION CRP
         LTR   R15,R15
         BZ    P51185
         CH    R15,=H'8'           CRP AT TOP ? ? ?
         BE    P51185              OKAY
         ABEND 7,DUMP
P51185   BAL   R10,DISPSUB
         B     P51040
         SPACE
P51190   CLI   CMNERSEL,C' '       WAS ANYTHING SELECTED
         BE    P51195              NO, THEN NEXT OKAY
         CLI   CMNERSEL,0
         BNE   P51152
P51195   MVI   CMNERNXT,X'01'
         CALL  ISPLINK,(VTBEND,TABLE)    REMOVE OLD TABLE
         CALL  ISPLINK,(VTBCRET,TABLE,LIST3,LIST2,NOWRITE,)
         B     P51030
P51099   CALL  ISPLINK,(VTBEND,TABLE)
         $EPILOG
         TITLE '***** CHECK AUTHORIZATION ROUTINE *****'
CHKAUTH  L     R4,544              ADDR OF ASCB
         L     R4,108(R4)          ADDR OF ASXB
         L     R4,200(R4)          ADDR OF ACEE
         USING ACEE,R4             SET UP ADDRESSIBILITY
         LA    R15,0               SET DEFAULT RETURN
         TM    ACEEFLG1,ACEESPEC   IS USER SPECIAL
         BOR   R10                 YES, THEN RETURN
         XR    R3,R3               CLEAR R3
         IC    R3,ACEEUSRL         GET LENGTH OF USER
         BCTR  R3,0                REDUCE FOR COMPARE
         EX    R3,CHK1             CHECK IF USERID = OWNERID
         BER   R10                 YES, THEN RETURN
*
*                                  CHECK FOR AT LEAST READ ACCESS
         RACHECK ENTITY=CMNERRES,CLASS=CMNERCLS,                       X
               MF=(E,RCHKL)
         LTR   R15,R15             CHECK RETURN FROM RACHECK
         BZR   R10                 GOOD, THEN RETURN
*
*                                  IF NO GOOD, DISPLAY AUTHORIZATION
*                                  FAILED MSG
         CALL  ISPLINK,(VDISPLAY,CMNER01,MSG03,)
         LA    R15,8
         BR    R10
CHK1     CLC   CMNEROWN(0),ACEEUSRI
         DROP  R4
         TITLE '***** ISSUE TSO COMMAND (ISPCAT) *****'
ISSUE    EQU   *
         L     R2,X'21C'           TCB OLD
         L     R2,X'70'(R2)        ADDR OF 1ST SAVE AREA
         L     R2,X'18'(R2)        R1 IN 1ST SAVE AREA PTS TO PARM
         L     R2,0(R2)            FIRST PARM IS TLD
         CLC   =C'TLD',0(R2)       BE SURE
         BE    ISSUE10
         ABEND 5,DUMP
ISSUE10  ST    R2,ISPCATCL         STORE IN PARM LIST
         LA    R4,ISPCATRC         RELOCATE
         ST    R4,ISPCATCL+8               RETURN CODE
         LA    R4,CMDBUF           RELOCATE
         ST    R4,ISPCATCL+4               COMMAND BUFFER
         LOAD  EP=ISPSUBS
         LR    R3,R0               COPY EP OF ISPSUBS
         LA    R1,=C'AUTH'
         SVC   231                 MAKE AUTHORIZED
         L     R15,X'2C'(R3)       EP OF ISPCAT
         LA    R1,ISPCATCL
         BALR  R14,R15             GO TO IT
         MVC   CMDBUF(2),=H'255'
         MVC   CMDBUF+2(2),=H'3'   REINITIALIZE
         SR    R1,R1               REMOVE AUTHORIZATION
         SVC   231
         BR    R10
         TITLE '***** DISPLAY SUBROUTINE *****'
DISPSUB  EQU   *
*        ON ENTRY
*              R10 -> RETURN
*              R11 -> MESSAGE
*
         MVI   CMNERSEL,C' '      CLEAR OUT INPUT FIELDS
         MVC   CMNEROPT,=CL20' '
         CALL  ISPLINK,(VTBQUERY,TABLE,,,VROWNP,,,) GET NUM OF ROWS
         ICM   R15,15,CMNERROW
         BNZ   DISP10              NO ROWS IN TABLE
         CALL  ISPLINK,(,,(R11)),MF=(E,ISPLNKA)
         B     DISP90              GO CHECK RETURN
DISP10   CALL  ISPLINK,(,,,(R11)),MF=(E,ISPLNKB)
DISP90   CH    R15,=H'8'           END KEY ENTERED
         BE    P51099              YES
         CH    R15,=H'4'           TOO MANY ROWS
         BE    DISP95              YES, DISPLAY ERROR
         CH    R15,=H'0'           OKAY
         BE    DISP99              YES, RETURN
DISP95   MVI   CMNERSEL,C' '       CLEAR OUT FIELDS
         MVC   CMNEROPT,=CL20' '
         CALL  ISPLINK,(VTBDISPL,TABLE,CMNER01,MSG05)
         B     DISP90              GO CHECK RETURN
DISP99   XC    CMNERSEL,=C' '
         BR    R10
         TITLE '***** SETUP ROUTINE *****'
SETUP    EQU   *
*
*  THIS ROUTINE PERFORMS ALL INTIAL DIALOG MANAGER SERVICES
*
         CALL  ISPLINK,(VTBCRET,TABLE,LIST3,LIST2,NOWRITE,)
         CALL  ISPLINK,(,,CMNEROPT,,),MF=(E,ISPLNK1)
         CALL  ISPLINK,(,,CMNERRES,,),MF=(E,ISPLNK2)
         CALL  ISPLINK,(,,CMNERNXT,,),MF=(E,ISPLNK3)
         CALL  ISPLINK,(,,CMNERRC,,),MF=(E,ISPLNK4)
         CALL  ISPLINK,(,,CMNEROWN,,),MF=(E,ISPLNK5)
         CALL  ISPLINK,(,,CMNERSEL,,),MF=(E,ISPLNK6)
         CALL  ISPLINK,(,,CMNERTAU,,),MF=(E,ISPLNK7)
         CALL  ISPLINK,(,,CMNERTMS,,),MF=(E,ISPLNK8)
         CALL  ISPLINK,(,,CMNERROW,,),MF=(E,ISPLNK9)
         BR    R10
         TITLE '***** CONSTANTS *****'
*
*  DIALOG MANAGER SERVICES
*
VGET     DC    CL8'VGET'
VPUT     DC    CL8'VPUT'
VDEF     DC    CL8'VDEFINE'
VCOPY    DC    CL8'VCOPY'
VTBDISPL DC    CL8'TBDISPL'
VTBCRET  DC    CL8'TBCREATE'
VTBEND   DC    CL8'TBEND'
VSELECT  DC    CL8'SELECT'
VDISPLAY DC    CL8'DISPLAY'
VTBQUERY DC    CL8'TBQUERY'
VTBTOP   DC    CL8'TBTOP'
VTBPUT   DC    CL8'TBPUT'
VTBGET   DC    CL8'TBGET'
VTBSCAN  DC    CL8'TBSCAN'
VTBADD   DC    CL8'TBADD'
VTBMOD   DC    CL8'TBMOD'
VTBSKIP  DC    CL8'TBSKIP'
*
*  DIALOG MANGER LENGTHS
*
LNG1     DC    F'1'
LNG2     DC    F'2'
LNG4     DC    F'4'
LNG7     DC    F'7'
LNG8     DC    F'8'
LNG10    DC    F'10'
LNG11    DC    F'11'
LNG12    DC    F'12'
LNG20    DC    F'20'
NEG15    DC    F'-15'
*
*  DIALOG MANAGER LISTS
*
VSEL     DC    C'(CMNERSEL)'
VROW     DC    C'(CMNERROW)'
VOPT     DC    C'(CMNEROPT)'
VRES     DC    C'(CMNERRES CMNERCLS CMNERTUI)'
VNXTSW   DC    C'(CMNERNXT)'
VRETCD   DC    C'(CMNERRC)'
VOWN     DC    C'(CMNEROWN)'
VMSG     DC    C'(CMNERTMS)'
VAUD     DC    C'(CMNERTAU)'
LIST1    DC    C'(CMNERRES '
         DC    C'CMNERCLS '
         DC    C'CMNERRC '
         DC    C'CMNEROWN '
         DC    C'CMNERDAT)'
LIST2    DC    C'(CMNERSEL '
         DC    C'CMNERTAU '
         DC    C'CMNERTAC '
         DC    C'CMNERTMS)'
LIST3    DC    C'(CMNERTUI)'
LIST4    DC    C'(CMNERSEL '
         DC    C'CMNERTUI '
         DC    C'CMNERTAU '
         DC    C'CMNERTAC '
         DC    C'CMNERTMS)'
*
*  DIALOG MANAGER PANELS, FUNCTIONS AND MESSAGES
*
CMNER01  DC    CL8'CMNER51'
CMNER18  DC    C'PGM(CMNER18)'
MSG01    DC    CL8'CMNER510'       RACF ERROR
MSG02    DC    CL8'CMNER511'
MSG03    DC    CL8'CMNER512'       AUTHORIZATION ERROR
MSG04    DC    CL8'CMNER513'       ACCESS LIST EMPTY
MSG05    DC    CL8'CMNER514'       TOO MANY LINES MODIFIED
MSG06    DC    CL8'CMNER515'       INVALID SELECT CODE
MSG07    DC    CL8'CMNER516'       INVALID ADD
MSG08    DC    CL8'CMNER517'       ADD FAILED
MSG09    DC    CL8'CMNER518'       COMMAND COMPLETE
*
*  DIALOG MANAGER MISCELLANEOUS FIELDS
*
VROWNP   DC    CL8'CMNERROW'
FIXED    DC    CL8'FIXED'
CHAR     DC    CL8'CHAR'
SHARED   DC    CL8'SHARED'
NOWRITE  DC    CL8'NOWRITE'
TABLE    DC    CL8'CMNERTRS'
*
*  MISCELLANEOUS FIELDS
*
COMTAB   DC    193X'00'            00-C0
         DC    X'04'               A
         DC    X'00'
         DC    X'08'               C
         DC    X'0C'               D
         DC    16X'00'
         DC    X'10'               N
         DC    3X'00'
         DC    X'14'               R
         DC    10X'00'
         DC    X'18'               U
         DC    27X'00'
BLANKTAB DC    64X'00'
         DC    X'01'
         DC    191X'00'
MOVEUID1 MVC   3(0,R5),0(R3)
MOVEUID2 MVC   CMNERTUI(0),0(R3)
MOVEAUT1 MVC   0(0,R5),0(R3)
MOVEAUT2 MVC   CMNERTAU(0),0(R3)
         LTORG
         TITLE '***** DYNAMIC AREAS *****'
DYNWK    EQU   *
*
*  DIALOG MANAGER VARIABLES
*
CMNERSEL DC    C' '
CMNEROPT DC    CL20' '
CMNERRES DS    CL8
CMNERCLS DC    CL8' '
CMNERTUI DC    CL8' '
CMNERTAU DC    CL8' '
CMNERTMS DC    CL10' '
CMNERNXT DC    X'00'
CMNEROWN DS    CL8
DSNADDR  DS    A
CMNERROW DC    F'0'
CMNERRC  DS    F
CMNERCRP DC    F'0'
*
*  CALL LISTS
*
ISPLNK1  CALL  ,(VDEF,VOPT,CMNEROPT,CHAR,LNG20),MF=L
ISPLNK2  CALL  ,(VDEF,VRES,CMNERRES,CHAR,LNG8),MF=L
ISPLNK3  CALL  ,(VDEF,VNXTSW,CMNERNXT,FIXED,LNG1),MF=L
ISPLNK4  CALL  ,(VDEF,VRETCD,CMNERRC,FIXED,LNG4),MF=L
ISPLNK5  CALL  ,(VDEF,VOWN,CMNEROWN,CHAR,LNG8),MF=L
ISPLNK6  CALL  ,(VDEF,VSEL,CMNERSEL,CHAR,LNG1),MF=L
ISPLNK7  CALL  ,(VDEF,VAUD,CMNERTAU,CHAR,LNG7),MF=L
ISPLNK8  CALL  ,(VDEF,VMSG,CMNERTMS,CHAR,LNG10),MF=L
ISPLNK9  CALL  ,(VDEF,VROW,CMNERROW,FIXED,LNG4),MF=L
ISPLNKA  CALL  ,(VDISPLAY,CMNER01,,),MF=L
ISPLNKB  CALL  ,(VTBDISPL,TABLE,CMNER01,),MF=L
RCHKL    RACHECK ENTITY=CMNERRES,CLASS=CMNERCLS,ATTR=READ,MF=L
*
*
ISPCATRC DC    A(0)
ISPCATCL DC    3A(0)
CMDBUF   DC    H'255'
         DC    H'3'
CMD      DC    CL255'PE '
DYNWKLN  EQU   *-DYNWK
         IHAACEE
         END
