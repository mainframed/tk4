CMNER24  $PROLOG
***********************************************************************
*                                                                     *
*        PROGRAM - CMNER24                                            *
*        DATE WRITTEN - JULY 1981                                     *
*        AUTHOR  - R. A. CLAUER                                       *
*        PURPOSE - THIS IS A REENTRANT ROUTINE WHICH AUTHORIZES ITSELF*
*               AND ISSUES AN ADDSD.                                  *
*               APF AUTHORIZATION.                                    *
*                                                                     *
*        PANELS USED - CMNER24                                        *
*                                                                     *
*        ERROR MESSAGES - CMNER240 - CMNER123                         *
*                                                                     *
*        CHANGE LOG -                                                 *
*          MM/DD/YY -                                                 *
*                                                                     *
***********************************************************************
         EJECT
         GETMAIN R,LV=DYNWKLN      GET SOME STORAGE
         LR    R8,R1               COPY ADDR
         LA    R9,DYNWKLN          SET UP
         LR    R3,R9                     FOR MOVE
         LA    R2,DYNWK
         MVCL  R8,R2               AND MOVE IT
         LR    R8,R1               RESTORE TO BEGINING OF DYNAMIC AREA
         USING DYNWK,R8            ESTABLISH ADDRESSIBILITY
         BAL   R10,SETUP
C24005   CLC   CMNERVOL,=CL6' '    WAS VOLUME ENTERED? ? ?
         BE    C24010              NO, THEN DO LOCATE
         CLC   CMNERUNI,=CL8' '    WAS UNIT ENTERED? ? ?
         BNE   C24020              YES, THEN OK
         CALL  ISPLINK,(VDISPLAY,PANEL,MSG01,CURSOR)
         CH    R15,=H'8'           WAS END KEY PRESSED
         BE    C24999              YES
         OI    REDISPSW,X'01'      SET SWITCH
         LTR   R15,R15
         BZ    C24005              RECHECK THAT VOLUME/UNIT WERE ENTRED
         ABEND 1,DUMP
C24010   LA    R2,CMNERDSN         GET DSN
         ST    R2,CAMLIST+4        RELOCATE IT
         LA    R2,WORK             GET CATALOG WORK AREA
         ST    R2,CAMLIST+12       RELOCATE
         LOCATE CAMLIST
         LTR   R15,R15             CHECK RETURN
         BZ    C24015              GOOD
         ST    R15,CMNERRC         STORE RETURN FOR MESSAGE
         CALL  ISPLINK,(VDISPLAY,PANEL,MSG02,CURSOR)
         CH    R15,=H'8'           WAS END ENTERED
         BE    C24999              YES
         LTR   R15,R15
         BZ    C24005              GO RECHECK VOLUME/UNIT
         ABEND 2,DUMP
C24015   MVC   CMNERVOL,WORK+6     MOVE IN FROM CATALOG
         MVC   CMNERUNI,=CL8' '    CLEAR UNIT FOR CATALOGED DSN
C24020   TM    REDISPSW,X'01'      ANY NEED TO DISPLAY PANEL? ? ?
         BO    C24030              NO--
         MVC   CURSOR,=CL8'CMNEROWN' YES, SET UP FOR DISPLAY
         CALL  ISPLINK,(VDISPLAY,PANEL,,CURSOR)
         CH    R15,=H'8'           CHECK RETURN
         BE    C24999              END ENTERED--
         LTR   R15,R15             GOOD? ?
         BZ    C24030              YES---
         ABEND 3,DUMP
C24030   MVI   REDISPSW,X'00'      TURN OFF REDISPLAY SWITCH
         MVI   CMD+4,C' '          CLEAR OUT COMMAND
         MVC   CMD+5(255),CMD+4                      BUFFER
         MVC   CMD+260(252),CMD+259
         LA    R3,CMD+4            GET FIRST AVAILABLE BYTE
         MVC   CMD+4(44),CMNERDSN  MOVE IN DATASET NAME
         TRT   0(45,R3),BLANKTAB   SEARCH FOR FIRST BLANK
         BNZ   C24040              FOUND IT
         ABEND 3,DUMP
C24040   MVI   0(R1),C''''         MOVE IN CLOSING QUOTE
         LA    R3,2(R1)            ADVANCE POINTER
         CLC   CMNERUNI,=CL8' '    CHECK IF UNIT REQUIRED
         BE    C24065              NO, BYPASS UNIT AND VOLUME
         MVC   0(5,R3),=C'UNIT('   MOVE IN KEYWORD
         MVC   5(8,R3),CMNERUNI    MOVE IN UNIT
         TRT   0(14,R3),BLANKTAB   SEARCH FOR FIRST BLANK
         BNZ   C24045              FOUND IT
         ABEND 3,DUMP
C24045   MVI   0(R1),C')'          MOVE IN CLOSING PAREN
         LA    R3,2(R1)            ADVANCE POINTER
C24050   MVC   0(7,R3),=C'VOLUME(' MOVE IN KEYWORD
         MVC   7(6,R3),CMNERVOL    MOVE IN VOLUME
         TRT   0(14,R3),BLANKTAB   SEARCH FOR FIRST BLANK
         BNZ   C24060              FOUND IT
         ABEND 3,DUMP
C24060   MVI   0(R1),C')'          MOVE IN CLOSING QUOTE
         LA    R3,2(R1)            ADVANCE POINTER
C24065   MVC   0(6,R3),=C'OWNER('  MOVE IN KEYWORD
         MVC   6(4,R3),CMNEROWN    MOVE IN OWNER
         TRT   0(11,R3),BLANKTAB   SEARCH FOR FIRST BLANK
         BNZ   C24070              FOUND IT
         ABEND 3,DUMP
C24070   MVI   0(R1),C')'
         LA    R3,2(R1)            ADVANCE POINTER
         MVC   0(5,R3),=C'UACC('   MOVE IN KEYWORD
         MVC   5(8,R3),CMNERUAC    MOVE UACC
         TRT   0(14,R3),BLANKTAB   SEARCH FOR FIRST BLANK
         BNZ   C24080              FOUND IT
         ABEND 3,DUMP
C24080   MVI   0(R1),C')'          MOVE IN CLOSING PAREN
         LA    R3,2(R1)            ADVANCE POINTER
         MVC   0(6,R3),=C'AUDIT('  MOVE IN KEYWORD
         MVC   6(8,R3),CMNERAUD    MOVE AUDIT PARM
         TRT   0(15,R3),BLANKTAB   FIND FIRST BLANK
         BNZ   C24090              FOUND IT
         ABEND 3,DUMP
C24090   MVI   0(R1),C')'          MOVE IN CLOSING PAREN
         LA    R3,2(R1)            ADVANCE POINTER
         OC    CMNERSET,=CL3' '    TRANSLATE TO UPPER CASE
         CLC   CMNERSET,=C'YES'    WAS RESPONSE YES
         BE    C24100              YES, THEN TAKE THE DEFAULT
         MVC   0(5,R3),=C'NOSET'   OTHERWISE MOVE IN KEYWORD
C24100   L     R2,X'21C'           TCB OLD
         L     R2,X'70'(R2)        ADDR OF 1ST SAVE AREA
         L     R2,X'18'(R2)        R1 IN 1ST SAVE ARE PTS TO PARM
         L     R2,0(R2)            FIRST PARM IS TLD
         CLC   =C'TLD',0(R2)       CHECK EYE CATCHER
         BE    C24110              GOOD
         ABEND 4,DUMP
C24110   ST    R2,ISPCATCL         STORE ADDR OF TLD
         LOAD  EP=ISPSUBS
         LR    R3,R0               STORE EP OF ISPSUBS
         LA    R1,=C'AUTH'         MAKE AUTHORIZED
         SVC   231
         LA    R4,ISPCATRC         RELOCATE
         ST    R4,ISPCATCL+8           IN DYNAMIC AREA
         LA    R4,CMDBUF
         ST    R4,ISPCATCL+4
         L     R15,X'2C'(R3)       GET ADDR OF ISPCAT ENTRY POINT
         LA    R1,ISPCATCL         GET PARAMETER LIST
         BALR  R14,R15             AND GO DO IT
         L     R4,ISPCATRC         GET RETURN CODE
         LTR   R4,R4               CHECK IT
         BZ    C24120              GOOD
         ST    R4,CMNERRC
         CALL  ISPLINK,(VDISPLAY,PANEL,MSG03,CURSOR)
         MVI   REDISPSW,X'01'
         CH    R15,=H'8'
         BE    C24999
         B     C24005
C24120   CALL  ISPLINK,(VDISPLAY,PANEL,MSG04,CURSOR)
         MVI   REDISPSW,X'01'
         CH    R15,=H'8'
         BE    C24999
         B     C24005
         SPACE 5
C24999   EQU   *
         SR    R1,R1               REMOVE AUTHORIZATION
         SVC   231
         FREEMAIN R,LV=DYNWKLN,A=(R8)
         $EPILOG
         TITLE '***** SETUP ROUTINE *****'
         DS    0D
SETUP    EQU   *
         CALL  ISPLINK,(,,CMNERDSN,,),MF=(E,ISPLNK1)
         CALL  ISPLINK,(,,CMNERVOL,,),MF=(E,ISPLNK2)
         CALL  ISPLINK,(,,CMNERUNI,,),MF=(E,ISPLNK3)
         CALL  ISPLINK,(,,CMNERSET,,),MF=(E,ISPLNK4)
         CALL  ISPLINK,(,,CMNERRC,,),MF=(E,ISPLNK5)
         CALL  ISPLINK,(,,CMNEROWN,,),MF=(E,ISPLNK6)
         CALL  ISPLINK,(VGET,LIST7,SHARED)
         L     R4,544              ASCB
         L     R4,108(R4)          ASXB
         L     R4,200(R4)          ACEE
         USING ACEE,R4
         MVC   CMNEROWN,ACEEUSRI
         DROP  R4
         BR    R10
         TITLE '***** CONSTANT AREAS *****'
*
*  LISTS
*
LIST1    DC    C'(CMNERDSN)'
LIST2    DC    C'(CMNERVOL)'
LIST3    DC    C'(CMNERUNI CMNERAUD CMNERUAC)'
LIST4    DC    C'(CMNERSET)'
LIST5    DC    C'(CMNERRC)'
LIST6    DC    C'(CMNEROWN)'
LIST7    DC    C'(CMNERDSN CMNERVOL CMNERUNI)'
*
*  SERVICES
*
VGET     DC    CL8'VGET'
VPUT     DC    CL8'VPUT'
VDISPLAY DC    CL8'DISPLAY'
VDEF     DC    CL8'VDEFINE'
*
*  LENGTHS
*
LNG3     DC    F'3'
LNG4     DC    F'4'
LNG6     DC    F'6'
LNG8     DC    F'8'
LNG44    DC    F'44'
*
*  MISCELLAEOUS FIELDS
*
FIXED    DC    CL8'FIXED'
SHARED   DC    CL8'SHARED'
CHAR     DC    CL8'CHAR'
PANEL    DC    CL8'CMNER24'
CURSOR   DC    CL8'CMNERDSN'
MSG01    DC    CL8'CMNER240'
MSG02    DC    CL8'CMNER241'
MSG03    DC    CL8'CMNER242'
MSG04    DC    CL8'CMNER243'
BLANKTAB DC    64X'00'
         DC    X'01'
         DC    191X'00'
         LTORG
         TITLE '***** DYNAMIC AREAS *****'
         DS    0D
DYNWK    EQU   *
ISPCATRC DC    A(0)
ISPCATCL DC    3A(0)
*
*  VARIABLES
*
CMNERDSN DS    CL44
CMNERVOL DS    CL6
CMNERUNI DS    CL8' '
CMNERAUD DC    CL8'FAILURES'
CMNERUAC DC    CL8'NONE'
CMNERSET DC    CL3'YES'
CMNERRC  DC    F'0'
CMNEROWN DC    CL4' '
*
*
*
ISPLNK1  CALL ,(VDEF,LIST1,CMNERDSN,CHAR,LNG44),MF=L
ISPLNK2  CALL ,(VDEF,LIST2,CMNERVOL,CHAR,LNG6),MF=L
ISPLNK3  CALL ,(VDEF,LIST3,CMNERUNI,CHAR,LNG8),MF=L
ISPLNK4  CALL ,(VDEF,LIST4,CMNERSET,CHAR,LNG3),MF=L
ISPLNK5  CALL ,(VDEF,LIST5,CMNERRC,FIXED,LNG4),MF=L
ISPLNK6  CALL ,(VDEF,LIST6,CMNEROWN,CHAR,LNG4),MF=L
*
*
*
CAMLIST  CAMLST NAME,CMNERDSN,,WORK
WORK     DS    0D
         DS    CL265
REDISPSW DC    X'00'
CMDBUF   DC    H'512'
         DC    H'3'
CMD      DC    CL256'AD '''
         DC    CL256' '
DYNWKLN  EQU   *-DYNWK
         IHAACEE
         END
