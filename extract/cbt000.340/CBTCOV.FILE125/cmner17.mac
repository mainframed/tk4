 PUNCH ' INCLUDE ISP(ISPLINK) '
 PUNCH ' INCLUDE ISP(P50215) '
 PUNCH ' ENTRY CMNER17 '
         TITLE '***** LIST GROUP REENTRANT MODULE *****'
CMNER17  $PROLOG R11,R12
         SPACE 5
***********************************************************************
*        PROGRAM - CMNER17                                            *
*        DATE WRITTEN - JULY 1981                                     *
*        AUTHOR  - R. A. CLAUER                                       *
*        PURPOSE - THIS IS A REENTRANT ROUTINE WHICH LOCATES AND FILLS*
*               ALL VARIABLES RELATED TO RACF GROUPS.   IT DOES NO    *
*               DISPLAYS AND MUST BE GIVEN CONTROL FROM SPF SELECT    *
*               SERVICES                                              *
*                                                                     *
*        CHANGE LOG -                                                 *
*          MM/DD/YY -                                                 *
*                                                                     *
***********************************************************************
         EJECT
         GETMAIN R,LV=DYNWKLN
         LR    R2,R1               COPY ADDR OF DYNAMIC STORAGE
         LA    R3,DYNWKLN          PREPARE TO MOVE STATIC TO DYNAMIC
         LA    R4,DYNWK
         LR    R5,R3
         MVCL  R2,R4               MOVE IT
         LR    R8,R1               SET ADDRESSIBILITY
         USING DYNWK,R8
         BAL   R10,SETUP           GO DO ALL DEFIE
         LA    R1,=C'AUTH'
         SVC   231
         MVI   CMNERMAU,0
         MVI   GRPLN,8             SET MAX GROUP LENGTH
         TRT   CMNERGRP,BLANKTAB   CHECK FOR TRAILING BLANKS
         BZ    MN005               NONE, THEN CONTINUE
         LA    R4,CMNERGRP         GET BEGINING OF DSN
         SR    R1,R4               SUBTRACT FROM FIRST BLANK GIVING LEN
         STC   R1,GRPLN            STORE IT
MN005    TM    CMNERNXT,X'01'      IS THIS A REQUEST FOR NEXT
         BZ    MN010
         ICHEINTY NEXTC,ENTRY=GRPLN,WKAREA=WORK1,                      X
               MF=(E,TY1)
         B     MN020
MN010    ICHEINTY LOCATE,ENTRY=GRPLN,WKAREA=WORK1,                     X
               MF=(E,TY1)
MN020    LTR   R15,R15             CHECK RETURN
         BZ    MN030               OKAY
         ST    R15,CMNERRC         NO-- STORE RETURN CODE
         CALL  ISPLINK,(VPUT,VRETCD,SHARED)
         B     MN900               AND RETURN
MN030    MVC   CMNEROWN,WOWN       MOVE IN OWNER
         MVC   CMNERSUG,WLSGRP     MOVE IN SUPERIOR GROUP
         MVC   CMNERNOT,=CL3'NO'
         TM    WNOT,X'80'          CHECK FOR NO TERMUACC
         BO    MN035
         MVC   CMNERNOT,=CL3'YES'
MN035    MVC   WORKDAT4+1(3),WLCRDT
         CALL  P50215,(WORKDAT4,CMNERCDT),MF=(E,P50215)
MN040    XR    R4,R4               CLEAR R4
         IC    R4,GRPLN            GET LENGTH OF GRP RETRIEVED
         LA    R5,CMNERGRP         GET ADDR OF GRP
         LA    R5,0(R4,R5)         GET FIRST BYTE BEYOND DATA
         LA    R6,8                SET MAX LENGTH
         SR    R6,R4               COMPUTE DIFFERENCE
         LTR   R6,R6               CHECK IF ZERO
         BZ    MN050               YES, THEN CONTINUE
MN045    MVI   0(R5),C' '
         LA    R5,1(R5)
         BCT   R6,MN045
MN050    EQU   *
         MVC   CMNERUAC,=CL7'ALTER'
         TM    WUAC,X'80'          WAS ACCESS ALTER
         BO    MN060               YES--
         MVC   CMNERUAC,=CL7'CONTROL'
         TM    WUAC,X'40'          WAS ACCESS CONTROL
         BO    MN060               YES--
         MVC   CMNERUAC,=CL7'UPDATE'
         TM    WUAC,X'20'          WAS ACCESS UPDATE
         BO    MN060               YES--
         MVC   CMNERUAC,=CL7'READ'
         TM    WUAC,X'10'          WAS ACCESS READ
         BO    MN060
         MVC   CMNERUAC,=CL7'NONE'
MN060    LH    R5,WCT              GET NUMBER IN ACCESS LIST
         LTR   R5,R5               ANYBODY THERE?
         BZ    MN070               NOPE--
         M     R4,=F'11'           11 BYTES FOR EACH ENTRY IN LIST
MN070    MVI   CMNERMAU,X'00'      SET USER'S AUTHORITY
         LH    R3,WGCT             GET NUMBER OF SUB GROUPS
         LTR   R3,R3               ANY? ?
         BZ    MN080               NO-
         M     R2,=F'8'            8 BYTES FOR EACH SUB GROUP
MN080    AR    R3,R5               COMPUTE LENGTH OF WORK AREA
         LTR   R3,R3               DO WE NEED IT? ?
         BZ    MN800               NO, THEN GET OUT
         LA    R3,32(R3)           ADD 32 BYTES FO WORK AREA IN FRONT
         LR    R0,R3               SET UP FOR GETMAIN
         GETMAIN R,LV=(0)          GET WORK AREA
         LR    R9,R1               COPY ADDR OF STORAGE
         ST    R3,0(R9)            STORE FOR ICHEINTY
         ICHEINTY LOCATE,ENTRY=GRPLN,WKAREA=(R9),MF=(E,TY2)
         LTR   R15,R15             CHECK RETURN
         BZ    MN090               ONLY ZERO IS ACCEPTABLE
         ABEND 3,DUMP
MN090    MVI   CMNERSGX,C' '       SET DEFAULT SUB GROUP INDICATOR
         LA    R5,X'1E'(R9)        PT TO FIRST BYTE
         LH    R4,WGCT             GET NUMBER OF SUBGROUPS
         LTR   R4,R4               ARE THERE ANY? ? ?
         BZ    MN100               NO--
         MVC   CMNERSG1,0(R5)      MOVE IN SUBGROUP
         LA    R5,8(R5)            ADVANCE TO NEXT
         BCT   R4,*+8              REDUCE COUNT
         B     MN100               DONE
         MVC   CMNERSG2,0(R5)      MOVE IN SUBGROUP
         LA    R5,8(R5)            ADVANCE TO NEXT
         BCT   R4,*+8              REDUCE COUNT
         B     MN100               DONE
         MVC   CMNERSG3,0(R5)      MOVE IN SUBGROUP
         LA    R5,8(R5)            ADVANCE TO NEXT
         BCT   R4,*+8              REDUCE COUNT
         B     MN100               DONE
         MVC   CMNERSG4,0(R5)      MOVE IN SUBGROUP
         LA    R5,8(R5)            ADVANCE TO NEXT
         BCT   R4,*+8              REDUCE COUNT
         B     MN100               DONE
         MVC   CMNERSG5,0(R5)      MOVE IN SUBGROUP
         LA    R5,8(R5)            ADVANCE TO NEXT
         BCT   R4,*+8              REDUCE COUNT
         B     MN100               DONE
         MVC   CMNERSG6,0(R5)      MOVE IN SUBGROUP
         LA    R5,8(R5)            ADVANCE TO NEXT
         BCT   R4,*+8              REDUCE COUNT
         B     MN100               DONE
         MVC   CMNERSG7,0(R5)      MOVE IN SUBGROUP
         LA    R5,8(R5)            ADVANCE TO NEXT
         BCT   R4,*+8              REDUCE COUNT
         B     MN100               DONE
         MVC   CMNERSG8,0(R5)      MOVE IN SUBGROUP
         LA    R5,8(R5)            ADVANCE TO NEXT
         BCT   R4,*+8              REDUCE COUNT
         B     MN100               DONE
         MVC   CMNERSG9,0(R5)      MOVE IN SUBGROUP
         LA    R5,8(R5)            ADVANCE TO NEXT
         BCT   R4,*+8              REDUCE COUNT
         B     MN100               DONE
         MVC   CMNERSGA,0(R5)      MOVE IN SUBGROUP
         LA    R5,8(R5)            ADVANCE TO NEXT
         BCT   R4,*+8              REDUCE COUNT
         B     MN100               DONE
         MVC   CMNERSGB,0(R5)      MOVE IN SUBGROUP
         LA    R5,8(R5)            ADVANCE TO NEXT
         BCT   R4,*+8              REDUCE COUNT
         B     MN100               DONE
         MVI   CMNERSGX,C'+'       INDICATE THAT THERE IS MORE
         LH    R5,X'1C'(R9)        COMPUTE BEGINING
         LA    R5,X'1E'(R5,R9)     OF USERS IN GROUP
MN100    LH    R4,WCT
         LA    R5,2(R5)            PAST LENGTH
         LTR   R4,R4               ANY USERS IN GROUP
         BZ    MN130               NO--
MN105    MVC   CMNERTUI,0(R5)      MOVE IN USERID
         MVC   CMNERTAC,=CL7'JOIN' SET UP GROUP AUTHORITIES
         TM    8(R5),X'80'
         BO    MN110
         MVC   CMNERTAC,=CL7'CONNECT'
         TM    8(R5),X'40'
         BO    MN110
         MVC   CMNERTAC,=CL7'CREATE'
         TM    8(R5),X'20'
         BO    MN110
         MVC   CMNERTAC,=CL7'USE'
         TM    8(R5),X'10'
         BO    MN110
         MVC   CMNERTAC,=CL7'???????'
MN110    CLC   MYID,0(R5)          DETERMIE IF I HAVE AT LEAST
         BNE   MN115
         TM    8(R5),X'C0'                JOIN OR CONNECT AUTHORITY
         BZ    MN115               NO--
         OI    CMNERMAU,X'01'      SET ON FLAG
MN115    MVC   CONID,0(R5)         MOVE IN CONNECT ID
         LA    R14,8               MAX ID LENGTH
         TRT   CONID,BLANKTAB      FIND OUT HOW LONG IT REALLY IS
         BZ    MN116               NO BLANKS, THEN MUST BE 8
         LA    R15,CONID           BEGINING
         SR    R1,R15              SUBTRACT FROM END
         LR    R14,R1              AND PUT IN R14
MN116    XR    R15,R15             CLEAR REG 15
         IC    R15,GRPLN           GET LENGTH OF CURRENT GROUP
         LA    R15,1(R14,R15)      LENGTH = LEN OF USER + LEN OF GRP +1
         STC   R15,CONKEY          STUFF IT FOR LOCATE
         LA    R15,CONID           GET BEGINING
         AR    R15,R14             1ST BYTE BEYOND USER ID
         MVI   0(R15),X'00'        MOVE IN ZEROS BETWEEN USER & GROUP
         MVC   1(L'CMNERGRP,R15),CMNERGRP  MOVE IN GROUP
         MVC   CMNERTAT,=CL12' '   CLEAR FIELDS
         MVC   CMNERTUA,=CL7' '
         ICHEINTY LOCATE,ENTRY=CONKEY,WKAREA=WORKCON,MF=(E,TY3)
         LTR   R15,R15
         BZ    MN120               GOOD
         CH    R15,=H'12'          NOT FOUND
         BE    MN117               OKAY
         ABEND 5,DUMP              ANYTHING ELSE, SAY BYE
MN117    BAL   R10,MNCLR           STUFF CURRENT VARIABLES IN TABLE
         B     MN128               AND GET OUT
MN120    LH    R1,WCINITCT         GET COUNT
         CVD   R1,DBLWD
         MVC   CMNERTCT,=X'4020206B202120'
         ED    CMNERTCT,DBLWD+5
         MVC   CMNERTUA,=CL7'ALTER'
         TM    WCUACC,X'80'        SET UP GROUP'S UACC
         BO    MN122
         MVC   CMNERTUA,=CL7'CONTROL'
         TM    WCUACC,X'40'
         BO    MN122
         MVC   CMNERTUA,=CL7'UPDATE'
         TM    WCUACC,X'20'
         BO    MN122
         MVC   CMNERTUA,=CL7'READ'
         TM    WCUACC,X'10'
         BO    MN122
         MVC   CMNERTUA,=CL7'NONE'
MN122    TM    WCFLG1,X'80'        CHECK ATTRIBUTES
         BNO   MN123
         MVC   CMNERTAT,=CL12'ADSP'
         BAL   R10,MNCLR           STUFF IN TABLE
MN123    TM    WCFLG2,X'80'
         BNO   MN124
         MVC   CMNERTAT,=CL12'SPECIAL'
         BAL   R10,MNCLR           STUFF IN TABLE
MN124    TM    WCFLG3,X'80'
         BNO   MN125
         MVC   CMNERTAT,=CL12'OPERATIONS'
         BAL   R10,MNCLR           STUFF IN TABLE
MN125    TM    WCFLG4,X'80'
         BNO   MN126
         MVC   CMNERTAT,=CL12'REVOKE'
         BAL   R10,MNCLR           STUFF IN TABLE
MN126    TM    WCFLG5,X'80'
         BNO   MN127
         MVC   CMNERTAT,=CL12'GRPACC'
         BAL   R10,MNCLR           STUFF IN TABLE
MN127    CLC   CMNERTUI,=CL8' '    WAS ANYTHING WRITTEN OUT YET? ? ?
         BE    MN128               YES--
         BAL   R10,MNCLR           NO, THEN GO ADD IT TO THE TABLE
MN128    LA    R5,11(R5)           ADVANCE TO NEXT IN LIST
         BCT   R4,MN105            AND LOOP
         SPACE 5
MN130    EQU   *
         CALL  ISPLINK,(VTBTOP,TABLE)
         LR    R0,R3               FREE STORAGE
         FREEMAIN R,LV=(0),A=(R9)
MN800    CALL  ISPLINK,(,LIST3),MF=(E,ISPLNK9)
         FREEMAIN R,LV=DYNWKLN,A=(R8)
MN900    SR    R1,R1
         SVC   231
         $EPILOG
         TITLE '****** SETUP ROUTINE *******'
SETUP    EQU   *
         CALL  ISPLINK,(,,CMNERGRP),MF=(E,ISPLNK1)
         CALL  ISPLINK,(,,CMNEROWN),MF=(E,ISPLNK2)
         CALL  ISPLINK,(,,CMNERUAC),MF=(E,ISPLNK3)
         CALL  ISPLINK,(,,CMNERCDT),MF=(E,ISPLNK4)
         CALL  ISPLINK,(,,CMNERNXT),MF=(E,ISPLNK5)
         CALL  ISPLINK,(,,CMNERNOT),MF=(E,ISPLNK7)
         CALL  ISPLINK,(,,CMNERRC),MF=(E,ISPLNKA)
         CALL  ISPLINK,(,,CMNERSGX),MF=(E,ISPLNKB)
         CALL  ISPLINK,(,LIST1),MF=(E,ISPLNK6)
         CALL  ISPLINK,(VTBTOP,TABLE)
         L     R4,544              ASCB
         L     R4,108(R4)          ASXB
         L     R4,200(R4)          ACEE
         USING ACEE,R4
         MVC   MYID,ACEEUSRI
         DROP  R4
         BR    R10                 RETURN
         TITLE '***** TABLE ADD ROUTINE *****'
MNCLR    EQU   *
         CALL  ISPLINK,(VTBADD,TABLE,LIST2)
         MVC   CMNERTUI,=CL8' '    CLEAR ALL TABLE VARIABLES
         MVC   CMNERTAC,=CL7' '
         MVC   CMNERTCT,=CL7' '
         MVC   CMNERTUA,=CL7' '
         MVC   CMNERTAT,=CL12' '
         BR    R10
         TITLE '***** CONSTANT AREAS *****'
*
*  DIALOG MANAGER SERVICES
*
VGET     DC    CL8'VGET'
VPUT     DC    CL8'VPUT'
VDEF     DC    CL8'VDEFINE'
VCOPY    DC    CL8'VCOPY'
VREPLACE DC    CL8'VREPLACE'
VTBTOP   DC    CL8'TBTOP'
VTBADD   DC    CL8'TBADD'
*
*  DIALOG MANAGER VARIABLE LENGTHS
*
LNG1     DC    F'1'
LNG2     DC    F'2'
LNG3     DC    F'3'
LNG4     DC    F'4'
LNG6     DC    F'6'
LNG7     DC    F'7'
LNG8     DC    F'8'
LNG12    DC    F'12'
LNG75    DC    F'75'
*
*  DIALOG MANAGER VARIABLES
*
VFLG     DC    C'(CMNERSGX)'
VGRP     DC    C'(CMNERGRP CMNERTUI)'
VOWN     DC    C'(CMNEROWN '
         DC    C'CMNERSUG '
         DC    C'CMNERSG1 '
         DC    C'CMNERSG2 '
         DC    C'CMNERSG3 '
         DC    C'CMNERSG4 '
         DC    C'CMNERSG5 '
         DC    C'CMNERSG6 '
         DC    C'CMNERSG7 '
         DC    C'CMNERSG8 '
         DC    C'CMNERSG9 '
         DC    C'CMNERSGA '
         DC    C'CMNERSGB)'
VUAC     DC    C'(CMNERUAC CMNERTUA CMNERTAC CMNERTCT)'
VDATS    DC    C'(CMNERCDT CMNERTAT)'
VNXTSW   DC    C'(CMNERNXT CMNERMAU)'
VRETCD   DC    C'(CMNERRC)'
VNOT     DC    C'(CMNERNOT)'
*
*  DIALOG MANAGER VARIABLE LISTS
*
LIST1    DC    C'(CMNERGRP CMNERNXT)'
LIST2    DC    C'(CMNERTUI '
         DC    C'CMNERTAC '
         DC    C'CMNERTCT '
         DC    C'CMNERTUA '
         DC    C'CMNERTAT)'
LIST3    DC    C'(CMNERGRP '
         DC    C'CMNEROWN '
         DC    C'CMNERRC '
         DC    C'CMNERUAC '
         DC    C'CMNERCDT '
         DC    C'CMNERMAU '
         DC    C'CMNERSG1 '
         DC    C'CMNERSG2 '
         DC    C'CMNERSG3 '
         DC    C'CMNERSG4 '
         DC    C'CMNERSG5 '
         DC    C'CMNERSG6 '
         DC    C'CMNERSG7 '
         DC    C'CMNERSG8 '
         DC    C'CMNERSG9 '
         DC    C'CMNERSGA '
         DC    C'CMNERSGB '
         DC    C'CMNERSGX '
         DC    C'CMNERNOT '
         DC    C'CMNERSUG '
         DC    C'CMNERNXT)'
*
*  DIALOG MANAGER MISCELLANEOUS FIELDS
*
FIXED    DC    CL8'FIXED'
CHAR     DC    CL8'CHAR'
SHARED   DC    CL8'SHARED'
TABLE    DC    CL8'CMNERTGP'
*
*
*
ACT1     ICHEACTN FIELD=AUTHOR,MF=L
ACT2     ICHEACTN FIELD=ACLCNT,MF=L
ACT3     ICHEACTN FIELD=SUBGRPCT,MF=L
ACT4     ICHEACTN FIELD=UACC,MF=L
ACT5     ICHEACTN FIELD=AUTHDATE,MF=L
ACT6     ICHEACTN FIELD=SUPGROUP,MF=L
ACT7     ICHEACTN FIELD=NOTRMUAC,MF=L
ACT8     ICHEACTN FIELD=SUBGRPNM,MF=L
ACT9     ICHEACTN FIELD=ACL,MF=L
ACT10    ICHEACTN FIELD=FLAG1,MF=L
ACT11    ICHEACTN FIELD=FLAG2,MF=L
ACT12    ICHEACTN FIELD=FLAG3,MF=L
ACT13    ICHEACTN FIELD=FLAG4,MF=L
ACT14    ICHEACTN FIELD=FLAG5,MF=L
ACT15    ICHEACTN FIELD=INITCNT,MF=L
*
*
*
BLANKTAB DC    64X'00'
         DC    X'01'
         DC    191X'00'
         LTORG
         EJECT
         TITLE '***** DYNAMIC DATA AREAS *****'
DYNWK    EQU   *
GRPLN    DC    X'08'
CMNERGRP DS    CL8
CMNERTUI DS    CL8
CMNEROWN DS    CL8
CMNERSUG DS    CL8
CMNERSG1 DC    CL8' '
CMNERSG2 DC    CL8' '
CMNERSG3 DC    CL8' '
CMNERSG4 DC    CL8' '
CMNERSG5 DC    CL8' '
CMNERSG6 DC    CL8' '
CMNERSG7 DC    CL8' '
CMNERSG8 DC    CL8' '
CMNERSG9 DC    CL8' '
CMNERSGA DC    CL8' '
CMNERSGB DC    CL8' '
CMNERUAC DS    CL7
CMNERTUA DS    CL7
CMNERTAC DS    CL7
CMNERTCT DC    CL7' '
CMNERCDT DS    CL12
CMNERTAT DS    CL12
CMNERNXT DS    X
CMNERMAU DS    X
CMNERLIN DS    CL75
CMNERRC  DC    F'0'
CMNERNOT DC    CL3' '
CMNERSGX DC    C' '
WORKDAT  DS    PL3
WORKDAT4 DC    X'00'
         DC    XL3'000000'
DBLWD    DS    D
MYID     DS    CL8
CONKEY   DC    X'11'
CONID    DC    CL8' '
         DC    X'00'
CONGRP   DC    CL8' '
P50215   CALL ,(,,),MF=L
ISPLNK1  CALL ,(VDEF,VGRP,CMNERGRP,CHAR,LNG8),MF=L
ISPLNK2  CALL ,(VDEF,VOWN,CMNEROWN,CHAR,LNG8),MF=L
ISPLNK3  CALL ,(VDEF,VUAC,CMNERUAC,CHAR,LNG7),MF=L
ISPLNK4  CALL ,(VDEF,VDATS,CMNERCDT,CHAR,LNG12),MF=L
ISPLNK5  CALL ,(VDEF,VNXTSW,CMNERNXT,FIXED,LNG1),MF=L
ISPLNK6  CALL ,(VGET,LIST1,SHARED),MF=L
ISPLNK7  CALL ,(VDEF,VNOT,CMNERNOT,CHAR,LNG3),MF=L
ISPLNK9  CALL ,(VPUT,LIST3,SHARED),MF=L
ISPLNKA  CALL ,(VDEF,VRETCD,CMNERRC,FIXED,LNG4),MF=L
ISPLNKB  CALL ,(VDEF,VFLG,CMNERSGX,CHAR,LNG1),MF=L
TY1      ICHEINTY LOCATE,MF=L,TYPE='GRP',ACTIONS=(ACT1,ACT2,ACT3,      X
               ACT4,ACT5,ACT6,ACT7)
TY2      ICHEINTY LOCATE,MF=L,TYPE='GRP',ACTIONS=(ACT8,ACT9)
TY3      ICHEINTY LOCATE,MF=L,TYPE='CON',ACTIONS=(ACT15,ACT4,ACT10,    X
               ACT11,ACT11,ACT13,ACT14)
WORK1    DC    A(WRK1LEN)
         DS    6F
         DS    H
WOWN     DS    CL8
         DS    H
WCT      DS    XL2
         DS    XL2
WGCT     DS    XL2
         DS    XL2
WUAC     DS    X
         DS    XL2
WLCRDT   DS    PL3
         DS    XL2
WLSGRP   DS    CL8
         DS    XL2
WNOT     DS    X
         DS    0F
WRK1LEN  EQU   *-WORK1
WORKCON  DC    A(WRKCONLN)
         DS    6F
         DS    H
WCINITCT DS    H
         DS    XL2
WCUACC   DS    X
         DS    XL2
WCFLG1   DS    X
         DS    XL2
WCFLG2   DS    X
         DS    XL2
WCFLG3   DS    X
         DS    XL2
WCFLG4   DS    X
         DS    XL2
WCFLG5   DS    X
         DS    0F
WRKCONLN EQU   *-WORKCON
DYNWKLN  EQU   *-DYNWK
         IHAACEE
         END
