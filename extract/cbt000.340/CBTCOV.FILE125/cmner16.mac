 PUNCH ' INCLUDE ISP(ISPLINK) '
 PUNCH ' INCLUDE ISP(P50215) '
 PUNCH ' ENTRY CMNER16 '
CMNER16  $PROLOG R11,R12
         SPACE 5
***********************************************************************
*        PROGRAM - CMNER16                                            *
*        DATE WRITTEN - JULY 1981                                     *
*        AUTHOR  - R. A. CLAUER                                       *
*        PURPOSE - THIS IS A REENTRANT ROUTINE WHICH LOCATES AND FILLS*
*               ALL VARIABLES RELATED TO RACF DATASETS. IT DOES NO    *
*               DISPLAYS AND MUST BE GIVEN CONTROL FROM SPF SELECT    *
*               SERVICES                                              *
*                                                                     *
*        CHANGE LOG -                                                 *
*          MM/DD/YY -                                                 *
*                                                                     *
***********************************************************************
         EJECT
         GETMAIN R,LV=DYNWKLN
         LR    R2,R1               COPY ADDR OF DYNAMIC STORAGE
         LA    R3,DYNWKLN          PREPARE TO MOVE STATIC TO DYNAMIC
         LA    R4,DYNWK
         LR    R5,R3
         MVCL  R2,R4               MOVE IT
         LR    R8,R1               SET ADDRESSIBILITY
         USING DYNWK,R8
         BAL   R10,SETUP           GO DO ALL DEFIE
         LA    R1,=C'AUTH'
         SVC   231
         MVI   DSNLN,44            SET MAX DATASET LENGTH
         TRT   CMNERDSN,BLANKTAB   CHECK FOR TRAILING BLANKS
         BZ    MN005               NONE, THEN CONTINUE
         LA    R4,CMNERDSN         GET BEGINING OF DSN
         SR    R1,R4               SUBTRACT FROM FIRST BLANK GIVING LEN
         STC   R1,DSNLN            STORE IT
MN005    TM    CMNERNXT,X'01'      IS THIS A REQUEST FOR NEXT
         BZ    MN010
         ICHEINTY NEXT,ENTRY=DSNLN,WKAREA=WORK1,VOLUME=CMNERVOL,       X
               MF=(E,TY1)
         B     MN020
MN010    ICHEINTY LOCATE,ENTRY=DSNLN,WKAREA=WORK1,VOLUME=CMNERVOL,     X
               MF=(E,TY1)
MN020    LTR   R15,R15             CHECK RETURN
         BZ    MN030               OKAY
         ST    R15,CMNERRC         NO-- STORE RETURN CODE
         CALL  ISPLINK,(VPUT,VRETCD,SHARED)
         B     MN900               AND RETURN
MN030    MVC   CMNEROWN,WOWN       MOVE IN OWNERER
         MVC   WORKDAT4+1(3),WLCRDT
         CALL  P50215,(WORKDAT4,CMNERCDT),MF=(E,P50215)
         MVC   CMNERLUP,CMNERCDT   SET DEFAULT LAST UPDATE
         MVC   WORKDAT,WLCHG       MOVE IN LAST CHANGE DATE
         NI    WORKDAT+2,X'F0'     REMOVE SIGN
         TRT   WORKDAT,PACKTAB     CHECK FOR NUMERICS
         BNZ   MN040
         MVC   WORKDAT,WLCHG       MOVE IN AGAIN
         NI    WORKDAT+2,X'0F'     REMOVE HIGH ORDER NUMERIC
         CLI   WORKDAT+2,X'0C'     IS IT A PLUS
         BE    MN035               YES, THEN GO CONVERT
         CLI   WORKDAT+2,X'0F'     IS IT UNSIGNED
         BNE   MN040               NO, THEN MUST BE GARBAGE
MN035    MVC   WORKDAT4+1(3),WLCHG
         CALL  P50215,(WORKDAT4,CMNERLUP),MF=(E,P50215)
MN040    XR    R4,R4               CLEAR R4
         IC    R4,DSNLN            GET LENGTH OF DSN RETRIEVED
         LA    R5,CMNERDSN         GET ADDR OF DSN
         LA    R5,0(R4,R5)         GET FIRST BYTE BEYOND DATA
         LA    R6,44               SET MAX LENGTH
         SR    R6,R4               COMPUTE DIFFERENCE
         LTR   R6,R6               CHECK IF ZERO
         BZ    MN050               YES, THEN CONTINUE
MN045    MVI   0(R5),C' '
         LA    R5,1(R5)
         BCT   R6,MN045
MN050    MVC   CMNERVOL,WVOL       MOVE IN VOLUME
         MVC   CMNERUAC,=CL7'ALTER'
         TM    WUAC,X'80'          WAS ACCESS ALTER
         BO    MN060               YES--
         MVC   CMNERUAC,=CL7'CONTROL'
         TM    WUAC,X'40'          WAS ACCESS CONTROL
         BO    MN060               YES--
         MVC   CMNERUAC,=CL7'UPDATE'
         TM    WUAC,X'20'          WAS ACCESS UPDATE
         BO    MN060               YES--
         MVC   CMNERUAC,=CL7'READ'
         TM    WUAC,X'10'          WAS ACCESS READ
         BO    MN060
         MVC   CMNERUAC,=CL7'NONE'
MN060    LH    R5,WCT              GET NUMBER IN ACCESS LIST
         LTR   R5,R5               ANYBODY THERE?
         BZ    MN100               NOPE--
         M     R4,=F'11'           11 BYTES FOR EACH ENTRY IN LIST
         LA    R5,32(R5)           ADD 32 BYTES FOR WORK AREA IN FRONT
         LR    R0,R5
         GETMAIN R,LV=(0)          GET STORAGE FOR WORKAREA FOR LIST
         LR    R4,R1               COPY ADDR
         ST    R5,0(R4)
         ICHEINTY LOCATE,ENTRY=DSNLN,WKAREA=(R4),VOLUME=CMNERVOL,      X
               MF=(E,TY2)
         LTR   R15,R15             CHECK RETURN
         BZ    MN070               GOOD--
         ABEND 2,DUMP
MN070    LA    R6,11               LOAD INCREMENT
         LH    R3,X'1C'(R4)        GET LENGTH OF LIST
         LA    R7,X'1E'(R4,R3)     COMPUTE END OF LIST
         BCTR  R7,0                LAST BYTE OF LIST
         LA    R3,X'1E'(R4)
MN080    MVC   CMNERTUI,0(R3)      MOVE IN USERID
         MVC   CMNERTAC,9(R3)      MOVE IN ACCESS COUNT
         MVC   CMNERTAU,=CL7'ALTER'
         TM    8(R3),X'80'
         BO    MN090
         MVC   CMNERTAU,=CL7'CONTROL'
         TM    8(R3),X'40'
         BO    MN090
         MVC   CMNERTAU,=CL7'UPDATE'
         TM    8(R3),X'20'
         BO    MN090
         MVC   CMNERTAU,=CL7'READ'
         TM    8(R3),X'10'
         BO    MN090
         MVC   CMNERTAU,=CL7'NONE'
MN090    CALL  ISPLINK,(VTBADD,TABLE,LIST2)
         BXLE  R3,R6,MN080         LOOP THROUGH ACCESS LIST
         CALL  ISPLINK,(VTBTOP,TABLE)
         LR    R0,R5               FREE STORAGE
         FREEMAIN R,LV=(0),A=(R4)
MN100    CALL  ISPLINK,(,LIST3),MF=(E,ISPLNKB)
         FREEMAIN R,LV=DYNWKLN,A=(R8)
MN900    SR    R1,R1
         SVC   231
         $EPILOG
         TITLE '****** SETUP ROUTINE *******'
SETUP    EQU   *
         CALL  ISPLINK,(,,CMNERDSN),MF=(E,ISPLNK1)
         CALL  ISPLINK,(,,CMNERVOL),MF=(E,ISPLNK2)
         CALL  ISPLINK,(,,CMNEROWN),MF=(E,ISPLNK3)
         CALL  ISPLINK,(,,CMNERUAC),MF=(E,ISPLNK4)
         CALL  ISPLINK,(,,CMNERCDT),MF=(E,ISPLNK5)
         CALL  ISPLINK,(,,CMNERNXT),MF=(E,ISPLNK6)
         CALL  ISPLINK,(,,CMNERTUI),MF=(E,ISPLNK8)
         CALL  ISPLINK,(,,CMNERTAU),MF=(E,ISPLNK9)
         CALL  ISPLINK,(,,CMNERTAC),MF=(E,ISPLNKA)
         CALL  ISPLINK,(,,CMNERRC),MF=(E,ISPLNKC)
         CALL  ISPLINK,(,LIST1),MF=(E,ISPLNK7)
         CALL  ISPLINK,(VTBTOP,TABLE)
         BR    R10                 RETURN
         TITLE '***** CONSTANT AREAS *****'
*
*  DIALOG MANAGER SERVICES
*
VGET     DC    CL8'VGET'
VPUT     DC    CL8'VPUT'
VDEF     DC    CL8'VDEFINE'
VCOPY    DC    CL8'VCOPY'
VREPLACE DC    CL8'VREPLACE'
VTBTOP   DC    CL8'TBTOP'
VTBADD   DC    CL8'TBADD'
*
*  DIALOG MANAGER VARIABLE LENGTHS
*
LNG1     DC    F'1'
LNG2     DC    F'2'
LNG4     DC    F'4'
LNG6     DC    F'6'
LNG7     DC    F'7'
LNG8     DC    F'8'
LNG12    DC    F'12'
LNG44    DC    F'44'
*
*  DIALOG MANAGER VARIABLES
*
VDSN     DC    C'(CMNERDSN)'
VTUID    DC    C'(CMNERTUI)'
VTAUTH   DC    C'(CMNERTAU)'
VTACC    DC    C'(CMNERTAC)'
VVOL     DC    C'(CMNERVOL)'
VOWN     DC    C'(CMNEROWN)'
VUAC     DC    C'(CMNERUAC)'
VDATS    DC    C'(CMNERCDT CMNERLUP)'
VNXTSW   DC    C'(CMNERNXT)'
VRETCD   DC    C'(CMNERRC)'
*
*  DIALOG MANAGER VARIABLE LISTS
*
LIST1    DC    C'(CMNERDSN CMNERNXT CMNERVOL)'
LIST2    DC    C'(CMNERTUI CMNERTAC CMNERTAU)'
LIST3    DC    C'(CMNERDSN '
         DC    C'CMNERVOL '
         DC    C'CMNEROWN '
         DC    C'CMNERRC '
         DC    C'CMNERUAC '
         DC    C'CMNERCDT '
         DC    C'CMNERLUP '
         DC    C'CMNERNXT)'
*
*  DIALOG MANAGER MISCELLANEOUS FIELDS
*
FIXED    DC    CL8'FIXED'
CHAR     DC    CL8'CHAR'
SHARED   DC    CL8'SHARED'
TABLE    DC    CL8'CMNERTDS'
*
*
*
ACT1     ICHEACTN FIELD=AUTHOR,MF=L
ACT2     ICHEACTN FIELD=ACLCNT,MF=L
ACT3     ICHEACTN FIELD=UNIVACS,MF=L
ACT4     ICHEACTN FIELD=CREADATE,MF=L
ACT5     ICHEACTN FIELD=LCHGDAT,MF=L
ACT6     ICHEACTN FIELD=VOLSER,MF=L
ACT7     ICHEACTN FIELD=ACL,MF=L
*
*
*
FIRSTSW  DC    X'00'
PACKTAB  DC    10X'00'             00-09
         DC    6X'01'              0A-0F
         DC    10X'00'             10-19
         DC    6X'01'              1A-1F
         DC    10X'00'             20-29
         DC    6X'01'              2A-2F
         DC    10X'00'             30-39
         DC    6X'01'              3A-3F
         DC    10X'00'             40-49
         DC    6X'01'              4A-4F
         DC    10X'00'             50-59
         DC    6X'01'              5A-5F
         DC    10X'00'             60-69
         DC    6X'01'              6A-6F
         DC    10X'00'             70-79
         DC    6X'01'              7A-7F
         DC    10X'00'             80-89
         DC    6X'01'              8A-8F
         DC    10X'00'             90-99
         DC    6X'01'              9A-9F
         DC    96X'01'             A0-FF
BLANKTAB DC    64X'00'
         DC    X'01'
         DC    191X'00'
         LTORG
         EJECT
         TITLE '***** DYNAMIC DATA AREAS *****'
DYNWK    EQU   *
DSNLN    DC    X'2C'
CMNERDSN DS    CL44
CMNERVOL DS    CL6
CMNEROWN DS    CL8
CMNERUAC DS    CL7
CMNERCDT DS    CL12
CMNERLUP DS    CL12
CMNERNXT DS    X
CMNERTUI DS    CL8
CMNERTAU DS    CL7
CMNERTAC DS    H
CMNERRC  DC    F'0'
WORKDAT  DS    PL3
WORKDAT4 DC    X'00'
         DC    XL3'000000'
P50215   CALL ,(,,),MF=L
ISPLNK1  CALL ,(VDEF,VDSN,CMNERDSN,CHAR,LNG44),MF=L
ISPLNK2  CALL ,(VDEF,VVOL,CMNERVOL,CHAR,LNG6),MF=L
ISPLNK3  CALL ,(VDEF,VOWN,CMNEROWN,CHAR,LNG8),MF=L
ISPLNK4  CALL ,(VDEF,VUAC,CMNERUAC,CHAR,LNG7),MF=L
ISPLNK5  CALL ,(VDEF,VDATS,CMNERCDT,CHAR,LNG12),MF=L
ISPLNK6  CALL ,(VDEF,VNXTSW,CMNERNXT,FIXED,LNG1),MF=L
ISPLNK7  CALL ,(VGET,LIST1,SHARED),MF=L
ISPLNK8  CALL ,(VDEF,VTUID,CMNERTUI,CHAR,LNG4),MF=L
ISPLNK9  CALL ,(VDEF,VTAUTH,CMNERTAU,CHAR,LNG7),MF=L
ISPLNKA  CALL ,(VDEF,VTACC,CMNERTAC,FIXED,LNG2),MF=L
ISPLNKB  CALL ,(VPUT,LIST2,SHARED),MF=L
ISPLNKC  CALL ,(VDEF,VRETCD,CMNERRC,FIXED,LNG4),MF=L
TY1      ICHEINTY LOCATE,MF=L,TYPE='DS',ACTIONS=(ACT1,ACT2,ACT3,       X
               ACT4,ACT5,ACT6)
TY2      ICHEINTY LOCATE,MF=L,TYPE='DS',ACTIONS=(ACT7)
WORK1    DC    A(WRK1LEN)
         DS    6F
         DS    H
WOWN     DS    CL8
         DS    H
WCT      DS    XL2
         DS    XL2
WUAC     DS    X
         DS    XL2
WLCRDT   DS    PL3
         DS    XL2
WLCHG    DS    PL3
         DS    XL2
WVOL     DS    10CL6
         DS    0F
WRK1LEN  EQU   *-WORK1
DYNWKLN  EQU   *-DYNWK
         END
