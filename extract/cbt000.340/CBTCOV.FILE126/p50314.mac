*          DATA SET P50314     AT LEVEL 003 AS OF 08/06/81
*          DATA SET P50314     AT LEVEL 002 AS OF 07/17/81
P50314   $PROLOG
***********************************************************************
*                                                                     *
*  PROGRAM: P50314                                                    *
*  AUTHOR:  R. A. CLAUER                                              *
*  DATE:    JUNE 1981                                                 *
*  PURPOSE: THIS PROGRAM GENERATES A REPORT SHOWING THE ALL USERS AND *
*           THEIR OWNERS.                                             *
*                                                                     *
*  CHANGE LOG:                                                        *
*  JULY 1981 - MINOR PAGE AND FORMAT CHANGES WERE MADE. ADDITIONAL    *
*              LOGIC WAS ADDED TO PRINT AN * WHEN A USER HAS NOT      *
*              USED HIS ID WITHIN 60 DAYS                             *
*                                                                     *
***********************************************************************
         TIME
         ST    R1,JULDATE          STORE JULIAN DATE
         CALL P50215,(JULDATE,GREGDATE)  CALL SUBROUTINE TO CONVERT
         MVC   HD1DAT,GREGDATE           TO GREGORIAN DATE
         LA    R1,=C'AUTH'         MAKE PROGRAM AUTHORIZED
         SVC   231
         OPEN  (REPORT,(OUTPUT))
         LA    R1,SORTPARM
         LINK  EP=SORT             LINK TO SORT
         CLOSE (REPORT)
         $EPILOG
         EJECT
INEXIT   EQU   *
***********************************************************************
*                                                                     *
*  THIS ROUTINE RUNS AS AN E15 EXIT TO THE SORT. IT READS THE RACF    *
*  DATA SET USING THE RACF MANAGER SVCS AND BUILDS A SORT RECORD WHICH*
*  IS THEN PASSED TO THE SORT.                                        *
*                                                                     *
***********************************************************************
         USING INEXIT,R12          ESTABLISH BASE
         STM   R14,R12,12(R13)     STORE REGS
         LR    R12,R15             AND
         LA    R2,EXSAVE             ESTABLISH
         ST    R2,8(R13)                      LINKAGE
         ST    R13,EXSAVE+4
         LR    R13,R2
INEX005  ICHEINTY MF=(E,LOCNXT)
         C     R15,=F'12'          CHECK IF DONE
         BE    INEX060             YES, THEN SET RETURN CODE
         C     R15,=F'0'           WAS IT GOOD?
         BE    INEX010             YES--
         ABEND 1,DUMP              ANY OTHER RETURN CODES AND GO BOOM
INEX010  MVC   SRTOWN,WORK+X'1E'   MOVE IN USER'S OWNER
         MVC   SRTNAME,WORK+X'28'  MOVE IN USER'S PGMR NAME FIELD
         MVC   SRTDT,WORK+X'3E'    MOVE IN LAST USE DATE
         MVC   SRTDT2,WORK+X'43'   MOVE IN CREATION DATE
         MVC   SRTID,ENTADDR+1     MOVE IN USER ID
         MVC   SRTGRP,WORK+X'48'   MOVE IN OWNER'S DEFAULT GROUP
         LA    R15,12              INDICATE, I WANT TO COME BACK
         LA    R1,SORTREC          TELL SORT WHERE DATA IS
         B     INEX099             AND LET HIM GO TO IT
INEX060  LA    R15,8               INDICATE, I DON'T WANT TO COME BACK
         XR    R1,R1               NO DATA THIS TIME
INEX099  L     R6,CT
         LA    R6,1(R6)
         ST    R6,CT
         L     R13,EXSAVE+4        GET PREVIOUS SAVE AREA
         L     R14,12(R13)         RESTORE
         L     R0,20(R13)                 ALL
         LM    R2,R12,28(R13)                PERTINENT REGS
         BR    R14                 AND RETURN TO SORT
CT       DC    F'0'
         SPACE 5
         EJECT
OUTEXIT  EQU   *
***********************************************************************
*                                                                     *
*  THIS ROUTINE RUNS AS AN E35 EXIT TO THE SORT. IT RETURNS RECORDS   *
*  FROM THE SORT AND GENERATES A REPORT                               *
*                                                                     *
***********************************************************************
         USING  OUTEXIT,R12
         STM   R14,R12,12(R13)     STORE REGS
         LR    R12,R15             ESTABLISH NEW BASE
         LA    R2,EXSAVE           GET ADDR OF SAVE AREA
         ST    R2,8(R13)           CHAIN FORWARD
         ST    R13,EXSAVE+4        CHAIN BACK
         LR    R13,R2              SET UP NEW SAVE
         L     R8,0(R1)            GET ADDR OF RECORD
         LTR   R8,R8               IS THERE ANY ? ? ?
         BZ    OUTEX099            NO, THEN WE'RE DONE
         USING SORTREC,R8          ESTABLISH ADDRESSIBILITY
         CLC   SRTGRP,PRGRP        CHECK FOR CHANGE IN GROUP
         BE    OUTEX010            NO CHANGE
         CLC   PRGRP,=CL8' '       CHECK IF FIRST
         BE    OUTEX005
         BAL   R10,SIGBLK
OUTEX005 XC    PROWN,PROWN         FORCE CHANGE IN OWNER
         MVC   PRGRP,SRTGRP        SET UP GROUP
         MVC   PAGECT,=H'0'        RESET PAGE COUNT
         ICHEINTY LOCATE,TYPE='GRP',ENTRY=LOCGRP,WKAREA=WORK,          X
               ACTIONS=(ACT1)      GO GET OWNER OF GROUP
         MVC   HD4NAME,=CL20'????????' SET DEFAULT
         LTR   R15,R15             CHECK RETURN
         BNZ   OUTEX010            NO GROUP RECORD FOUND
         MVC   LOCUSR+1(8),WORK+X'1E' MOVE IN GROUP'S OWNER ID
         ICHEINTY LOCATE,TYPE='USR',ENTRY=LOCUSR,WKAREA=WORK,          X
               ACTIONS=(ACT3)      NOW GO GET NAME OF GROUP'S OWNER
         LTR   R15,R15             CHECK IF THERE
         BNZ   OUTEX010            NO--
         MVC   HD4NAME,WORK+X'1E'  YES-- MOVE IT IN
OUTEX010 EQU   *
         CLC   SRTOWN,PROWN        CHECK FOR CHANGE IN OWNER
         BE    OUTEX030            NO CHANGE--
         MVC   PROWN,SRTOWN        MOVE IN NEW OWNER
         MVC   LOCUSR+1(8),SRTOWN  SET UP FOR LOCATE
         ICHEINTY LOCATE,TYPE='USR',ENTRY=LOCUSR,WKAREA=WORK,          X
               ACTIONS=(ACT3)      NOW GET OWNER'S NAME
         MVC   HD3NAME,=CL20'????????' MOVE IN DEFAULT
         LTR   R15,R15
         BNZ   OUTEX020
         MVC   HD3NAME,WORK+X'1E'   IF GOOD, MOVE IN NAME
OUTEX020 EQU   *
         BAL   R14,HEAD010         GO PRINT HEADINGS
         LH    R10,LINECT          CHECK LINECOUNT
         LA    R10,1(R10)          INCREMENT
         STH   R10,LINECT
         MVI   DTLINE,C'0'         SET UP FOR DOUBLE SPACE
OUTEX030 LH    R10,LINECT          CHECK LINECOUNT
         LA    R10,1(R10)          INCREMENT
         STH   R10,LINECT
         C     R10,=F'55'          CHECK FOR PAGE OVERFLOW
         BL    OUTEX040            NO, CONTINUE
         BAL   R14,HEAD010
OUTEX040 MVC   DTID,SRTID          MOVE IN USER ID
         MVC   DTNAME,SRTNAME
         MVC   WORKDATE,SRTDATE    SET UP TO CHECK IF PACKED
         NI    WORKDATE+3,X'F0'    REMOVE SIGN
         TRT   WORKDATE,PACKTAB    CHECK FOR ALL NUMERICS
         BZ    OUTEX045            YES, THEN GO CHECK SIGN
         LA    R10,SRTDATE2        NO--THEN USE CREATION DATE
         B     OUTEX052            AND CONTINUE
OUTEX045 MVC   WORKDATE,SRTDATE    NOW CHECK SIGN
         NI    WORKDATE+3,X'0F'    REMOVE HIGH ORDER NUMERIC
         CLI   WORKDATE+3,X'0C'    CHECK FOR +
         BE    OUTEX050            OK--
         CLI   WORKDATE+3,X'0F'    CHECK FOR UNSIGNED
         BE    OUTEX050            OK--
         LA    R10,SRTDATE2        SET TO CREATION DATE IF NOT USED
         B     OUTEX052
OUTEX050 LA    R10,SRTDATE
OUTEX052 CALL  P50215,((R10),GREGDATE)
         MVC   DTDATE,GREGDATE
OUTEX055 XR    R4,R4               CLEAR R4
         IC    R4,1(R10)           GET YEAR
         SLL   R4,4                MAKE ROOM FOR SIGN
         ST    R4,PYR1             STORE IT
         OI    PYR1+3,X'0F'        AND PUT ON SIGN
         XR    R4,R4               CLEAR R4
         IC    R4,JULDATE+1        GET CURRENT YEAR
         SLL   R4,4                MAKE ROOM FOR SIGN
         ST    R4,PYR2             STORE IT
         OI    PYR2+3,X'0F'        AND PUT ON SIGN
         SP    PYR2,PYR1           GET DIFFERENCE IN YEARS
         MP    PYR2,=P'365'        MULTIPLY BY 365
         SP    PYR2,2(2,R10)       SUBTRACT DAYS IN LAST USED YEAR
         AP    PYR2,JULDATE+2(2)   ADD DAYS IN CURRENT YEAR
         MVI   DTFLAG,C' '         SET FLAG
         CP    PYR2,=P'60'         CHECK IF LESS THAN 60
         BL    OUTEX056            YES, THEN DON'T FLAG IT
         MVI   DTFLAG,C'*'         OTHERWISE PUT IN A *
OUTEX056 PUT   REPORT,DTLINE
         MVI   DTLINE,C' '
OUTEX095 L     R15,4               SET UP FOR ANOTHER
         B     OUTEX900
OUTEX099 PUT   REPORT,HDG7
         BAL   R10,SIGBLK          FINISHED
         LA    R15,8
OUTEX900 L     R13,EXSAVE+4        RESTORE
         L     R14,12(R13)                ALL
         L     R0,20(R13)                    REGS
         LM    R2,R12,28(R13)
         BR    R14
*
         SPACE  5
SIGBLK   ST    R10,SIGADDR
         LH    R14,LINECT          GET CURRENT LINE COUNT
         LA    R14,7(R14)          ADD AMOUNT OF SIGNATURE BLK
         C     R14,=F'50'          SEE IF IT WILL FIT ON THE PAGE
         BL    SIG001              YES, THEN CONTINUE
         BAL   R14,HEAD010         NO, THEN PRINT HEADINGS FIRST
SIG001   LH    R15,LINECT
         LA    R10,51
         SR    R10,R15
SIG002   PUT   REPORT,BLANKLN
         BCT   R10,SIG002
         MVI   SIGHD1,C'0'
         PUT   REPORT,SIGHD1
         MVC   SIGOWN,HD4NAME
         MVC   SIGDATE,=CL12'DATE'
         PUT   REPORT,SIGHD2
         PUT   REPORT,SIGHD1
         PUT   REPORT,SIGHD3
         L     R10,SIGADDR
         BR    R10
SIGADDR  DS    A
         SPACE  5
HEAD010  EQU   *
         ST    R14,RETADDR
         TM    FIRSTSW,X'01'
         BZ    HEAD020
         PUT   REPORT,HDG7
HEAD020  OI    FIRSTSW,X'01'
         LH    R10,PAGECT          GET PAGE COUNT
         LA    R10,1(R10)          ADD 1
         CVD   R10,DBLWD           CONVERT TO DECIMAL
         UNPK  HD1PG,DBLWD+6(2)    UNPACK
         OI    HD1PG+2,X'F0'       FIX UP SIGN
         STH   R10,PAGECT          STORE UPDATED PAGE COUNT
         PUT   REPORT,HDG1
         PUT   REPORT,HDG6
         PUT   REPORT,HDG2
         MVC   HD4GROUP,PRGRP
         MVC   HD3OWN,PROWN
         PUT   REPORT,HDG3
         PUT   REPORT,HDG4
         PUT   REPORT,HDG5
         MVC   LINECT,=H'8'        RESET LINECOUNT
         L     R14,RETADDR
         BR    R14
         DROP  R8
         EJECT
*  MISCELLANEOUS FIELDS
JULDATE  DS    F
GREGDATE DS    3F
RETADDR  DS    F
PAGECT   DC    H'0'
LINECT   DC    H'0'
EXSAVE   DS    18F
LOCGRP   DC    X'04'
PRGRP    DC    CL8' '
PROWN    DC    CL8' '
DBLWD    DS    D
WORKDATE DS    CL4
PYR1     DC    PL4'0'
PYR2     DC    PL4'0'
FIRSTSW  DC    X'00'
PACKTAB  DC    10X'00'             00-09
         DC    6X'01'              0A-0F
         DC    10X'00'             10-19
         DC    6X'01'              1A-1F
         DC    10X'00'             20-29
         DC    6X'01'              2A-2F
         DC    10X'00'             30-39
         DC    6X'01'              3A-3F
         DC    10X'00'             40-49
         DC    6X'01'              4A-4F
         DC    10X'00'             50-59
         DC    6X'01'              5A-5F
         DC    10X'00'             60-69
         DC    6X'01'              6A-6F
         DC    10X'00'             70-79
         DC    6X'01'              7A-7F
         DC    10X'00'             80-89
         DC    6X'01'              8A-8F
         DC    10X'00'             90-99
         DC    6X'01'              9A-9F
         DC    96X'01'             A0-FF
PACKLEN  EQU   *-PACKTAB
REPORT   DCB   DDNAME=REPORT,MACRF=PM,DSORG=PS,                        X
               RECFM=FBA,LRECL=80,BLKSIZE=4000
         SPACE 5
*  RACF MACROS
ACT1     ICHEACTN FIELD=OWNER
ACT2     ICHEACTN FIELD=DFLTGRP
ACT3     ICHEACTN FIELD=PGMRNAME
ACT4     ICHEACTN FIELD=LJDATE
ACT5     ICHEACTN FIELD=AUTHDATE
LOCNXT   ICHEINTY NEXT,TYPE='USR',                                     X
               ENTRY=ENTADDR,WKAREA=WORK,                              X
               ACTIONS=(ACT1,ACT3,ACT4,ACT5,ACT2),MF=L
ENTADDR  DC    X'08'
         DC    CL8' '
WORK     DC    F'100'
         DS    CL96
LOCUSR   DC    X'04'
         DC    CL8' '
VOLUME   DC    CL6' '
         SPACE 5
*  HEADINGS
HDG1     EQU   *
         DC    CL2'1'
HD1DAT   DC    CL12' '
         DC    CL16' '
         DC    CL40'MILLER BREWING COMPANY'
         DC    CL5'PAGE'
HD1PG    DC    CL3' '
*
HDG2     DC    CL30'  P50314'
         DC    CL50'USER OWNERSHIP REPORT'
*
HDG3     DC    CL30'0'
         DC    CL6'OWNER'
HD3OWN   DC    CL4' '
         DC    C' '
HD3NAME  DC    CL20' '
         DC    CL19' '
*
HDG4     DC    CL30' '
         DC    CL6'GROUP'
HD4GROUP DC    CL4' '
         DC    C' '
HD4NAME  DC    CL20' '
         DC    CL19' '
*
HDG5     DC    CL11'0    ID'
         DC    CL27'NAME'
         DC    CL39'LAST USED'
HDG6     DC    CL40' '
         DC    CL40'MIS'
HDG7     DC    CL80'0 * USER HAS NOT ACCESSED SYSTEM IN 60 DAYS AND WILX
               L BE DELETED'
BLANKLN  DC    CL100' '
SIGHD1   DC    CL20' '
         DC    24C'-'
         DC    66C' '
SIGHD2   DC    CL20' '
SIGOWN   DC    CL20' '
         DC    CL60' '
SIGHD3   DC    CL20'0'
SIGDATE  DC    CL12'0'
         DC    CL68' '
*
*  DETAIL LINES
DTLINE   DC    CL2' '
DTFLAG   DC    C' '
         DC    C'  '
DTID     DC    CL4' '
         DC    CL5' '
DTNAME   DC    CL20' '
         DC    CL7' '
DTDATE   DC    CL12' '
         DC    CL27' '
*   SORT FIELDS
         CNOP  0,4
SORTPARM DC    X'80'
         DC    AL3(PARMLIST)
         DC    X'0000'
PARMLIST DC    X'0018'
         DC    A(SORTCARD)
         DC    A(SORTEND)
         DC    A(RECCARD)
         DC    A(RECEND)
         DC    A(INEXIT)
         DC    A(OUTEXIT)
SORTCARD DC    C' SORT FIELDS=(1,24,CH,A)'
SORTEND  DC    C' '
RECCARD  DC    C' RECORD LENGTH=52,TYPE=F'
RECEND   DC    C' '
*
         LTORG
SORTREC  DS    0D
SRTGRP   DS    CL8
SRTOWN   DS    CL8
SRTID    DS    CL8
SRTDATE  DS    0F
         DC    X'00'
SRTDT    DS    CL3
SRTDATE2 DS    0F
         DC    X'00'
SRTDT2   DS    CL3
SRTNAME  DS    CL20
SRTLEN   EQU   *-SORTREC
         END
