*          DATA SET P50259     AT LEVEL 001 AS OF 01/29/81
P50259   CSECT
***********************************************************************
*                                                                     *
* THIS ROUTINE PERFORMS A GENERALIZED BINARY SEARCH. THE ROUTINE IS   *
* REENTRANT AND IS CALLED AS FOLLOWS:                                 *
*                                                                     *
*        CALL P50259,(N,L,LIST,K,KEY)                                 *
*                                                                     *
*           WHERE: N IS THE NUMBER OF ENTRIES IN THE LIST             *
*                  L IS THE LENGTH OF EACH ENTRY                      *
*                  LIST IS THE ADDRES OF THE TABLE TO BE SEARCHED     *
*                  K IS THE LENGTH OF THE KEY. THE KEY MUST START AT  *
*                    THE BEGININNING OF EACH ENTRY.                   *
*                  KEY IS THE KEY TO SEARCH FOR                       *
*                                                                     *
* ON RETURN R15 CONTAINS A 0 IF THE KEY WAS NOT FOUND OR THE ADDRESS  *
* OF THE ENTRY IF IT WAS. NOTE: SINCE THIS ROUTINE CALLS NO OTHERS AND*
* ISSUES NO SVCS, IT STORES REGISTERS IN THE PROVIDED SAVE AREA BUT   *
* DOES NOT PROVIDE ONE OF ITS OWN.                                    *
*                                                                     *
*        REGISTER USEAGE                                              *
*                                                                     *
*        R0 - UNUSED                                                  *
*        R1 - PARAMETER REGISTER                                      *
*        R2 - EVEN WORK REGISTER                                      *
*        R3 - ODD WORK REGISTER                                       *
*        R4 - WORK REGISTER                                           *
*        R5 - MID CELL NUMBER                                         *
*        R6 - TOP CELL NUMBER                                         *
*        R7 - BOTTOM CELL NUMBER                                      *
*        R8 - LENGTH OF EACH ENTRY                                    *
*        R9 - BEGINNING OF THE LIST                                   *
*        R10 - KEY LENGTH                                             *
*        R11 - ADDR OF KEY TO SEARCH FOR                              *
*        R12 - UNUSED                                                 *
*        R13 - POINTER TO CALLER'S SAVE AREA                          *
*        R14 - UNUSED                                                 *
*        R15 - BASE REGISTER                                          *
*                                                                     *
***********************************************************************
WK1      EQU   2
WK2      EQU   3
WK3      EQU   4
MID      EQU   5
TOP      EQU   6
BOTTOM   EQU   7
L        EQU   8
TOPADDR  EQU   9
KEYLEN   EQU   10
SRCHARG  EQU   11
BASE     EQU   15
         EJECT
         USING P50259,BASE
         STM   14,12,12(13)
         LM    7,11,0(1)        GET ADDR OF PARMS
         L     BOTTOM,0(BOTTOM)    LOAD PARMS
         L     L,0(L)
         BC    0,0(0)
         L     KEYLEN,0(KEYLEN)
         BCTR  KEYLEN,0            REDUCE KEYLENTH FOR COMPARES
         BC    0,0(0)
         LA    TOP,1               SET TOP CELL
         LR    MID,TOP             COMPUTE
         AR    MID,BOTTOM             FIRST
         SRL   MID,1                    MIDPOINT
BISCH010 LR    WK2,MID             COPY ADDR OF CURRENT MIDPOINT
         BCTR  WK2,0               MAKE RELATIVE TO 0
         LR    WK3,L               COPY ADDR OF EACH ELEMENT
         MR    WK1,WK3             COMPUTE LENGTH
         AR    WK2,TOPADDR         WK1 NOW CONTAINS ADDR OF MIDPOINT
         EX    KEYLEN,KEYATMID     KEY FOUND? ? ?
         BE    BISCH090            YES - GET OUT
         BH    BISCH020            SEARCH ARG > KEY AT MID
         LR    WK1,MID             CHECK FOR MIDPOINT ONE AWAY FROM
         BCTR  WK1,0                  TOP
         CR    WK1,TOP
         BNE   BISCH015            NO, THEN GO FIND NEW MID
         LR    WK2,TOP             YES, THEN CHECK TO SEE IF TOP IS KEY
         BCTR  WK2,0               MAKE RELATIVE TO 0
         LR    WK3,L               COPY LENGTH OF EACH CELL
         MR    WK1,WK3             COMPUTE TOTAL LENGTH
         AR    WK2,TOPADDR         GET ADDR OF TOP CELL
         EX    KEYLEN,KEYATTOP     IS IT THE KEY WE ARE LOOKING FOR? ?
         BE    BISCH090            YES - GET OUT
         LA    WK2,0               NO - SET NOT FOUND
         B     BISCH090
BISCH015 LR    BOTTOM,MID          COMPUTE NEW MID CELL
         AR    MID,TOP
         SRL   MID,1               DIVIDE
         B     BISCH010            GO DO IT AGAIN
BISCH020 LA    WK1,1(MID)          CHECK FOR MIDPOINT ONE AWAY FROM
         CR    WK1,BOTTOM             BOTTOM
         BNE   BISCH025            NO - GO FIND NEW MID POINT
         LR    WK2,BOTTOM          COMPUTE ADDR OF BOTTOM CELL
         BCTR  WK2,0               ADJUST TO RELATIVE 0
         LR    WK3,L               GET LENGTH OF ELEMENTS
         MR    WK1,WK3
         AR    WK2,TOPADDR         COMPUTE ADDRESS OF ENTRY
         EX    KEYLEN,KEYATBOT     IS IT THE KEY WE ARE LOOKING FOR ? ?
         BE    BISCH090            YES - GET OUT
         LA    WK2,0               NO - SET NOT FOUND
         B     BISCH090
BISCH025 LR    TOP,MID             COMPUTE NEW MID CELL
         AR    MID,BOTTOM
         SRL   MID,1               DIVIDE
         B     BISCH010            GO DO IT AGAIN
BISCH090 LR    BASE,WK2            COPY RETURN CODE
         L     14,12(13)           SET UP FOR RETURN
         LM    0,12,20(13)
         BR    14
KEYATTOP EQU   *
KEYATBOT EQU   *
KEYATMID EQU   *
         CLC   0(0,SRCHARG),0(WK2)
         END
