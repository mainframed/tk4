*          DATA SET P50065     AT LEVEL 002 AS OF 09/03/80
         TITLE 'P50065 RACF AUDIT LISTING - MILLER BREWING COMPANY'
P50065   CSECT
         SAVE  (14,12),,MILLER__BREWING_P50065__&SYSDATE_&SYSTIME__
         USING P50065,R5,R10,R11,R12 ESTABLISH ADDRESSABILITY
         LR    R5,R15                 LOAD FIRST BASE
         LA    R9,2048                 SET UP CONSTANT
         LA    R10,2048(R9,R5)        LOAD SECOND BASE
         LA    R11,2048(R9,R10)        LOAD THIRD BASE
         LA    R12,2048(R9,R11)        LOAD THIRD BASE
         LA    R15,P50065SV
         ST    R13,4(,R15)             CHAIN SAVE AREAS
         ST    R15,8(R13)
         LR    R13,R15                 POINT TO MY SAVE AREA
         B     MAINLINE
P50065SV DC    18F'0'                  P60065 SAVE AREA
         REGISTER
         TITLE 'P50065 RACF AUDIT LISTING - MAINLINE'
MAINLINE BAL   R14,INITIAL             INITIALIZE PROGRAMS,FILES,ETC
         BAL   R14,READCTL             READ AND VALIDATE CONTROL CARD
MAINREC  BAL   R14,GETREC              READ UNTIL A VALID RECORD
         BAL   R14,PROCESS             PROCESS THE RECORD
         B     MAINREC                 GO GET ANOTHER RECORD
MAINEOF  BAL   R14,SUMMARY             PRINT THE SUMMARY PAGES
         BAL   R14,CLEANUP             CLOSE FILES,CLEANUP ETC
MAINEOJ  L     R13,4(R13)
         RETURN (14,12),,RC=0
         TITLE 'P50065 RACF AUDIT LISTING - INITIALIZATION'
*
*              FUNCTIONS PERFORMED :
*                1.  OBTAIN RUN DATE AND TIME
*                2.  OBTAIN JOB NAME, USER ID, GROUP ID
*                3.  VALIDATE THAT USER IS AUTHORIZED TO RUN JOB
*                    (HAS AUDITOR ATTRIBUTE)
*                4.  OPEN FILES
*                5.  OBTAIN SMF DATA SET NAME BEING PROCESSED, AND
*                    OBTAIN VOLUME SERIAL NUMBER OF SMF DATA SET
*                6.  LOAD TYPE 80 AND 81 DESCRIPTOR TABLES,
*                    AND REPORT HEADINGS TABLES
*
INITIAL  STM   2,14,INITSAVE
         B     INIT1
INITHEAD DC    CL24'********INITIAL ********'
INITSAVE DC    18F'0'
DBL      DC    D'0'
DBL2     DC    D'0'
INITACEE DC    F'0'
INITJOB  DC    C'        '             JOB NAME OF RUNNING JOB
INITUSR  DC    C'        '             USER ID OF RUNNING JOB
INITGRP  DC    C'        '             GROUP NAME OF RUNNING JOB
INITMVU  MVC   INITUSR(0),21(R1)    EXECUTABLE MOVE USERID FROM ACEE
INITMVG  MVC   INITGRP(0),30(R1)    EXECUTABLE MOVE GROUP  FROM ACEE
INITDATE DS    0CL6                    RUN DATE AND TIME STORED HERE
INITYEAR DC    C'YY'
         DC    C'.'
INITDAY  DC    C'DDD'
INITTOD  DS    0CL8                    RUN TIME
INITHR   DC    C'HH'
         DC    C'.'
INITMN   DC    C'MM'
         DC    C'.'
INITSC   DC    C'SS'
INITGMO  DC    CL4' '
         DC    C' '
INITGDAY DC    C'  '
         DC    C', 19'
INITGYR  DC    C'  '
         DS    F'0'
INITMONS DC    C'JAN '
         DC    X'031F'
         DC    C'FEB '
         DC    X'028F'
         DC    C'MAR '
         DC    X'031F'
         DC    C'APR '
         DC    X'030F'
         DC    C'MAY '
         DC    X'031F'
         DC    C'JUNE'
         DC    X'030F'
         DC    C'JULY'
         DC    X'031F'
         DC    C'AUG '
         DC    X'031F'
         DC    C'SEPT'
         DC    X'030F'
         DC    C'OCT '
         DC    X'031F'
         DC    C'NOV '
         DC    X'030F'
         DC    C'DEC '
         DC    X'031F'
         DS    0F'0'
         EJECT
INIT1    TIME
         ST    R1,DBL
         ST    R0,DBL+4                SAVE TIME AND DATE
         UNPK  WORK+3(5),DBL+1(3)
         OI    WORK+7,X'F0'
         MVC   INITYEAR,WORK+3             SAVE YEAR
         MVC   INITDAY,WORK+5              SAVE DAY          YY.DDD
         SR    R1,R1                   FORMAT THE TIME
         IC    R1,DBL+4
         STC   R1,INITHR+1
         SRL   R1,4
         STC   R1,INITHR
         OI    INITHR+1,X'F0'
         OI    INITHR,X'F0'               HH.
         IC    R1,DBL+5
         STC   R1,INITMN+1
         SRL   R1,4
         STC   R1,INITMN
         OI    INITMN+1,X'F0'
         OI    INITMN,X'F0'               MM.
         IC    R1,DBL+6
         STC   R1,INITSC+1
         SRL   R1,4
         STC   R1,INITSC
         OI    INITSC+1,X'F0'
         OI    INITSC,X'F0'               SS.      TIME NOW HH.MM.SS
         MVC   T80YR(6),INITDATE
         MVC   T80HR(8),INITTOD
*
*        GET STANDARD CALENDAR DATE AS   DEC 99, 1999
*
         XC    DBL2,DBL2             ZERO IT OUT
         MVO   DBL2,DBL+1(1)
         OI    DBL2+7,X'0F'
         UNPK  INITGYR,DBL2
         CVB   R3,DBL2
         AH    R3,=H'1900'
         SR    R2,R2                SET UP FOR DIVIDE
         D     R2,=F'4'             CHECK IF LEAP YEAR
         MVI   INITMONS+9,X'8F'
         LTR   R2,R2                CHECK FOR REMAINDER
         BNZ   INITNLEP
         MVI   INITMONS+9,X'9F'       MUST BE A LEAP YEAR
INITNLEP ZAP   DBL2,DBL+2(2)
         LA    R2,INITMONS-6          BACKOFF FROM BEGINNING OF TABLE
INITMONX LA    R2,6(R2)
         SP    DBL2,4(2,R2)
         BP    INITMONX             COUNT DAYS UNTIL NEG
         AP    DBL2,4(2,R2)          ADD DAYS BACK IN
         OI    DBL2+7,X'0F'
         UNPK  INITGDAY,DBL2
         CLI   INITGDAY,X'F0'
         BNE   INITNODY
         MVI   INITGDAY,C' '            NO LEADING ZEROS
INITNODY MVC   INITGMO,0(R2)
         MVC   T80GDATE(13),INITGMO
         EJECT
*                    OBTAIN JOB NAME, USER ID, GROUP ID
INIT2    LA    R1,16                   CVT POINTER
         L     R1,0(R1)                GET CVT IN R1
         L     R1,0(R1)                GET CVTTCB PTR
         L     R2,12(R1)               GET TCB/ASCB 2 DBL WORDS ADDRESS
         L     R3,56(R2)               GET CSCB IN R3
         L     R4,108(R2)              GET ASXB IN R4
         L     R1,200(R4)              GET ACEE IN R1
         ST    R1,INITACEE
         SR    R6,R6
         IC    R6,20(R1)               GET LENGTH OF USERID FROM ACEE
         BCTR  R6,0
         EX    R6,INITMVU              EXEC MOVE USER ID
         SR    R6,R6
         IC    R6,29(R1)               GET LENGTH OF GROUP NAME IN ACEE
         BCTR  R6,0
         EX    R6,INITMVG              EXEC MOVE GROUP NAME
         L     R6,172(R2)              GET ASCB JOB NAME IF BATCH
         LTR   R6,R6                   IF ZERO MUST BE TSO/START/
         BZ    INIT2B
         MVC   INITJOB(8),0(R6)        MOVE BATCH JOB NAME IN
         B     INIT3
INIT2B   L     R6,176(R2)              SEE IF TS USER
         LTR   R6,R6
         BZ    INIT2C                  NOT BATCH OR TSO???
         MVC   INITJOB(8),0(R6)        MOVE START/TSO NAME IN
         B     INIT3
INIT2C   MVC   INITJOB(8),=C'DONTKNOW' DONT KNOW
INIT3    L     R1,INITACEE             RESET R1 TO ACEE ADDRESS
         TM    38(R1),X'10'            SEE IF USER HAS AUDITOR
*                    VALIDATE THAT USER IS AUTHORIZED TO RUN JOB
*                    (HAS AUDITOR ATTRIBUTE)
         EJECT
INIT4    RDJFCB SMFIN
         OPEN  (SMFIN,(INPUT),CTLCARD,(INPUT),T80PRT,(OUTPUT),         X
               T81PRT,(OUTPUT),RACFSUM,(OUTPUT),WORKFILE,(OUTPUT))
*
*              MIGHT CONSIDER ADDING A CHECK HERE TO SEE IF ALL
*              FILES HAVE BEEN OPENED SUCCESSFULLY.
*
*                    OBTAIN SMF DATA SET NAME BEING PROCESSED
         B     INIT5
         DS    0F'0'
INITXITL DC    X'87'                   LAST ENTRY,JFCB POINTER
         DC    AL3(INITJFCB)
INITJFCB DC    180X'00'                BLANK JFCB
INITVOL  DC    CL6'      '             SAVE VOLUME SERIAL NUMBER
INITDSN  DS    CL44' '                 SAVE DSN
INIT5    MVC   INITVOL(6),INITJFCB+118 MOVE VOLSER IN
         MVC   INITDSN(44),INITJFCB    MOVE DSN IN
         EJECT
*                    LOAD TYPE 80 AND 81 DESCRIPTOR TABLES,
*                    AND TITLE TABLES
         B     INIT6
ADRT80   DC    F'0'
ADRT81   DC    F'0'
ADRTITL  DC    F'0'
EVENTAB  DC    F'0'
ATHTAB   DC    F'0'
REATAB   DC    F'0'
ERRTAB   DC    F'0'
DTPTAB   DC    F'0'
T81RACFX DC    F'0'
INIT6    LOAD  EP=P50065A
         ST    R0,ADRT80
         LOAD  EP=P50065B
         ST    R0,ADRT81
         LOAD  EP=P50065C
         ST    R0,ADRTITL
         L     R6,ADRT80            ADDRESS OF P50065A
         LA    R6,32(R6)            BYPASS EYECATCHER
         L     R7,0(R6)             DISP TO EVENTAB
         ST    R7,EVENTAB           SAVE ADDRESS OF EVENTAB
         L     R7,4(R6)             DISP TO ATHTAB
         ST    R7,ATHTAB            SAVE ADDRESS OF ATHTAB
         L     R7,8(R6)             DISP TO REATAB
         ST    R7,REATAB            SAVE ADDRESS OF REATAB
         L     R7,12(R6)            DISP TO ERRTAB
         ST    R7,ERRTAB            SAVE ADDRESS OF ERRTAB
         L     R7,16(R6)            DISP TO DTPTAB
         ST    R7,DTPTAB            SAVE ADDRESS OF DTPTAB
         L     R7,ADRT81
         L     R7,32(R7)            SAVE ADDRESS OF T81RACFX
         ST    R7,T81RACFX
INITEND  LM    2,14,INITSAVE
         BR    R14                     RETURN
         TITLE 'P50065 RACF AUDIT LISTING - CONTROL CARD PROCESSING '
READCTL  EQU   *
         STM   2,14,CNTLSAVE
         B     READ1
CNTLHEAD DC    CL24'********READCTL ********'
CNTLSAVE DC    18F'0'
ADRCTL   DC    F'0'                    ADDRESS OF CONTROL CARD
READ1    GET   CTLCARD                 READ THE CONTROL CARD
         USING CTLDSECT,R7
         ST    R1,ADRCTL               SAVE ADDRESS OF THE CONTROL CARD
         LR    R7,R1                   GET ADDRESSABILITY TO CARD
         MVC   CNTLC(80),0(R7)         MOVE THE CONTROL CARD OVER DEF
         EJECT
CTLCK1   CLI   CTL1,C' '               IF BLANK TAKE DEFAULT
         BE    CTLCK2                     AND GO CHECK NEXT FIELD
         CLI   CTL1,C'Y'           CHECK FOR OVERRIDE
         BNE   CTLCK2                IF NOT YES, TAKE THE DEFAULT
         MVI   CNTL1+3,X'04'           PSWD=YES WAS SPECIFIED
         SPACE 3
CTLCK2   CLI   CTL2,C' '              IF BLANK TAKE DEFAULT
         BE    CTLCK3                     AND GO CHECK NEXT FIELD
         CLI   CTL2,C'Y'           CHECK FOR OVERRIDE
         BNE   CTLCK3                  IF NOT YES, TAKE THE DEFAULT
         MVI   CNTL2+3,X'04'           WORK=YES WAS SPECIFIED
         SPACE 3
         EJECT
CTLCK3   CLI   CTL3,C' '              IF BLANK TAKE DEFAULT
         BE    CTLCK4                     AND GO CHECK NEXT FIELD
         CLI   CTL3,C'N'           CHECK FOR OVERRIDE
         BE    CTLCK3A                 IF NOT NO, CHECK FOR ONLY
         CLI   CTL3,C'O'          CHECK FOR OVERRIDE
         BE    CTLCK3B                 IF NOT ONLY,TAKE THE DEFAULT
         B     CTLCK4                  SUM=YES OR INVALID, TAKE DEFAULT
CTLCK3A  MVI   CNTL3+3,X'04'           SUM=NO SPECIFIED
         B     CTLCK4
CTLCK3B  MVI   CNTL3+3,X'08'           SUM=ONLY SPECIFIED
         B     CTLCK4
CTLCK4   CLI   CTL4,C' '               IF BLANK TAKE DEFAULT
         BE    CTLCK5                     AND GO CHECK NEXT FIELD
         CLI   CTL4,C'N'           CHECK FOR OVERRIDE
         BNE   CTLCK5                IF NOT YES, TAKE THE DEFAULT
         MVI   CNTL4+3,X'04'        TYPE 80 =N WAS SPECIFIED
         SPACE 3
CTLCK5   CLI   CTL5,C' '               IF BLANK TAKE DEFAULT
         BE    CTLCK6                     AND GO CHECK NEXT FIELD
         CLI   CTL5,C'N'           CHECK FOR OVERRIDE
         BNE   CTLCK6                IF NOT YES, TAKE THE DEFAULT
         MVI   CNTL5+3,X'04'        TYPE 81 =N  WAS SPECIFIED
         SPACE 3
CTLCK6   CLI   CTL6,C' '               IF BLANK TAKE DEFAULT
         BE    CTLCK7                     AND GO CHECK NEXT FIELD
         CLI   CTL6,C'N'           CHECK FOR OVERRIDE
         BNE   CTLCK7                IF NOT YES, TAKE THE DEFAULT
         MVI   CNTL6+3,X'04'        TYPE 81 =N  WAS SPECIFIED
         SPACE 3
CTLCK7   CLI   CTL7,C' '               IF BLANK TAKE DEFAULT
         BE    CTLCK8                     AND GO CHECK NEXT FIELD
         CLI   CTL7,C'E'           CHECK FOR OVERRIDE
         BNE   CTLCK8                IF NOT YES, TAKE THE DEFAULT
         MVI   CNTL7+3,X'04'        MASK TO BE USED
         SPACE 3
CTLCK8   CLI   CTL8,C' '               IF BLANK TAKE DEFAULT
         BE    CTLCK9                     AND GO CHECK NEXT FIELD
         CLI   CTL8,C'A'           CHECK FOR OVERRIDE
         BNE   CTLCK9                IF NOT YES, TAKE THE DEFAULT
         MVI   CNTL8+3,X'04'        MASK TO BE USED
         SPACE 3
CTLCK9   CLI   CTL9,C' '               IF BLANK TAKE DEFAULT
         BE    CTLCK9A                    AND GO CHECK NEXT FIELD
         CLI   CTL9,C'L'           CHECK FOR OVERRIDE
         BNE   CTLCK9A               IF NOT YES, TAKE THE DEFAULT
         MVI   CNTL9+3,X'04'        MASK TO BE USED
         SPACE 3
CTLCK9A  CLI   CTL9A,C' '               IF BLANK DSN, TAKE DEFAULT
         BE    CTLCK10                    AND GO CHECK NEXT FIELD
         CLI   CTL9A,C'Y'           CHECK FOR OVERIDE
         BNE   CTLCK10               IF NOT YES, TAKE THE DEFAULT
         MVI   CNTL9A+3,X'04'        DSN MASK TO BE USED
         SPACE 3
CTLCK10  CLI   CTL10,C' '               IF BLANK TAKE DEFAULT
         BE    CTLCK11                    AND GO CHECK NEXT FIELD
         CLI   CTL10,C'U'           CHECK FOR OVERRIDE
         BNE   CTLCK11               IF NOT YES, TAKE THE DEFAULT
         MVI   CNTL10+3,X'04'        MASK TO BE USED
         SPACE 3
CTLCK11  CLI   CTL11,C' '               IF BLANK TAKE DEFAULT
         BE    CTLCK12                    AND GO CHECK NEXT FIELD
         CLI   CTL11,C'G'           CHECK FOR OVERRIDE
         BNE   CTLCK12               IF NOT YES, TAKE THE DEFAULT
         MVI   CNTL11+3,X'04'        MASK TO BE USED
         SPACE 3
CTLCK12  CLI   CTL12,C' '               IF BLANK TAKE DEFAULT
         BE    CTLCK20                    AND GO CHECK NEXT FIELD
         CLI   CTL12,C'T'           CHECK FOR OVERRIDE
         BNE   CTLCK20               IF NOT YES, TAKE THE DEFAULT
         MVI   CNTL12+3,X'04'         TSO USER NOT TO BE NOTIFIED
         SPACE 3
CTLCK20  CLC   CTL20,=C'     '          IF BLANK TAKE DEFAULT
         BE    CTLCK22                    AND GO CHECK TIME FIELD ***
         CLC   CTL20,=C'SDAY='          IF INVALID LITERAL
         BNE   CTLCK22                    TAKE GO CHECK TIME FIELD ***
         MVC   CKSDAY,CTL20V            SAVE THE START DAY
*        CONVERT SDAY TO PL4 FOR SMF COMPARE
         PACK  CKSDAYP+1(3),CKSDAY
         OI    CKSDAYP+3,X'0F'              MUST BE F TO MATCH SMF
         MVI   CNTL20+3,X'04'           SDAY=YYDDD WAS SPECIFIED
         B     CTLCK21
         SPACE 3
CTLCK21  CLC   CTL21,=C'     '          IF BLANK TAKE DEFAULT
         BE    CTLCK21X                   AND GO RESET CNTL 4 AND 5
         CLC   CTL21,=C'EDAY='          IF INVALID LITERAL
         BNE   CTLCK21X                   GO RESET CNTL 4 AND 5
         MVC   CKEDAY,CTL21V            SAVE THE ENDING DAY
*        CONVERT EDAY TO PL4 FOR SMF COMPARE
         PACK  CKEDAYP+1(3),CKEDAY
         OI    CKEDAYP+3,X'0F'              MUST BE F TO MATCH SMF
         MVI   CNTL21+3,X'04'           EDAY=YYDDD WAS SPECIFIED
         B     CTLCK22
CTLCK21X MVI   CNTL20+3,X'00'           ERROR FOUND RESET TO DEFAULTS
         MVI   CNTL21+3,X'00'           ERROR FOUND RESET TO DEFAULTS
         B     CTLCK22
         SPACE 3
CKSDAY   DS    CL5                    SAVE THE STARTING DAY
CKEDAY   DS    CL5                    SAVE THE ENDING   DAY
CKSDAYP  DS    PL4                    SAVE THE STARTING DAY IN PL4
CKEDAYP  DS    PL4                    SAVE THE ENDING   DAY IN PL4
         EJECT
CTLCK22  CLC   CTL22,=C'     '          IF BLANK TAKE DEFAULT
         BE    CTLCK25                     AND GO CHECK EVENT FIELD
         CLC   CTL22,=C'STIM='          IF INVALID LITERAL
         BNE   CTLCK25                     TAKE GO CHECK EVENT FIELD
         MVC   CKSTIM,CTL22V            SAVE THE START TIME
*        CONVERT STIM TO BINARY BL4 TO COMPARE WITH SMF
         XC    DBL,DBL                  CLEAR IT OUT
         PACK  DBL+6(2),CKSTIM(2)
         CVB   R3,DBL
         SR    R2,R2
         M     R2,=F'3600'                  HOURS * 3600 FOR SECONDS
         PACK  DBL+6(2),CKSTIM+3(2)    SKIP THE PERIOD
         CVB   R9,DBL
         SR    R8,R8
         M     R8,=F'60'                    MINUTES * 60 FOR SECONDS
         AR    R3,R9                        ADD UP SECONDS
         M     R2,=F'100'                   MULTIPLY BY 100
         ST    R3,CKSTIMB
         MVI   CNTL22+3,X'04'         STIM=HH.MM WAS SPECIFIED
         B     CTLCK23
         SPACE 3
CTLCK23  CLC   CTL23,=C'     '          IF BLANK TAKE DEFAULT
         BE    CTLCK23X                   AND GO RESET CNTL 6 AND 7
         CLC   CTL23,=C'ETIM='          IF INVALID LITERAL
         BNE   CTLCK23X                   GO RESET CNTL 6 AND 7
         MVC   CKETIM,CTL23V            SAVE THE ENDING DAY
*        CONVERT ETIM TO BINARY BL4 TO COMPARE WITH SMF
         XC    DBL,DBL
         PACK  DBL+6(2),CKETIM(2)
         CVB   R3,DBL
         SR    R2,R2
         M     R2,=F'3600'                  HOURS * 3600 FOR SECONDS
         PACK  DBL+6(2),CKETIM+3(2)     SKIP THE PERIOD
         CVB   R9,DBL
         SR    R8,R8
         M     R8,=F'60'                    MINUTES * 60 FOR SECONDS
         AR    R3,R9                        ADD UP SECONDS
         M     R2,=F'100'                   MULTIPLY BY 100
         ST    R3,CKETIMB
         MVI   CNTL23+3,X'04'           ETIM=HH.MM WAS SPECIFIED
         B     CTLCK25
CTLCK23X MVI   CNTL22+3,X'00'           ERROR FOUND RESET TO DEFAULTS
         MVI   CNTL23+3,X'00'           ERROR FOUND RESET TO DEFAULTS
         B     CTLCK25
         SPACE 3
CKSTIM   DS    CL5                    SAVE THE STARTING TIME
CKETIM   DS    CL5                    SAVE THE ENDING   TIME
         DS    0F                     LINEUP
CKSTIMB  DS    BL4                    SAVE STARTING TIME HH.MM.00.00B
CKETIMB  DS    BL4                    SAVE ENDING   TIME HH.MM.00.00B
         EJECT
CTLCK25  B     CTLEOF                  IF BLANK TAKE DEFAULT
MSKEVENT DC    CL25' '                ALL EVENTS ARE DEFAULT
MSKAUTH  DC    CL5' '                 SPECIAL AUTHORITIES ARE ALL
MSKLOGR  DC    CL8' '                 ALL LOG REASONS ARE DEFAULT
MSKUSR   DC    CL8' '
MSKGRP   DC    CL8' '
MSKENT   DC    CL44' '                 ENTITY MASK(DSN)
MSKLEN   DC    F'0'                    LENGTH OF ENTITY - 1 FOR COMPARE
MSKQUAL  DC    CL6' '                  EVENT QUALIFIER MASK
CKEVT    DS    CL2                     EVENT TYPE BEING SELECTED
CKEVTB   DS    BL1                     EVENT TYPE BEING SELECTED BINARY
         SPACE 3
READEOF  MVC   ADRCTL(4),=F'0'         ZERO ADDRESS SAYS NO CNTL CARD
         B     CTLEOFX            OR SPECIFIED MASK AND NONE PROVIDED
CTLEOF   EQU   *
         LA    R7,CNTLC            GET ADDR OF FIRST CARD
         CLC   CTL7(6),=C'      '       CHECK TO SEE IF ANY MASKS SPEC
         BE    CTLEOFX
         GET   CTLCARD                 SOME MASK IS ON
         CLC   CTL7(3),=C'   '     ANY OTHER
         BNE   CTL0100                  MASKS??
         CLC   CTL7+4(2),=C'  '
         BNE   CTL0100             IF NOT, THEN MUST BE DSN MASK
         B     CTL0200             PROCESS DSN MASK
CTL0100  MVC   CNTLC1(80),0(R1)
         MVC   MSKEVENT(25),0(R1)      SAVE MASKS
         MVC   MSKAUTH(5),29(R1)
         MVC   MSKLOGR(8),39(R1)
         MVC   MSKUSR(8),49(R1)
         MVC   MSKGRP(8),59(R1)
         MVC   MSKQUAL,69(R1)
         SR    R2,R2
         LA    R6,5
         LA    R3,MSKAUTH                SET UP AUTH BITS
LOOPAU1  SLL   R2,1
         CLI   0(R3),C' '
         BNE   LOOPAU2
LOOPAU1A LA    R3,1(R3)
         BCT   R6,LOOPAU1
         B     LOOPAU3
LOOPAU2  LA    R2,1(R2)
         B     LOOPAU1A
LOOPAU3  SLL   R2,3
         STC   R2,AUTHBITS
         SR    R2,R2
         LA    R6,8
         LA    R3,MSKLOGR                SET UP LOG REASON BITS
LOOPLG1  SLL   R2,1
         CLI   0(R3),C' '
         BNE   LOOPLG2
LOOPLG1A LA    R3,1(R3)
         BCT   R6,LOOPLG1
         B     LOOPLG3
LOOPLG2  LA    R2,1(R2)
         B     LOOPLG1A
LOOPLG3  EQU   *
         STC   R2,LOGBITS
         CLI   CTL7+3,C' '         DSN ALSO SPECIFIED
         BE    CTLEOFX             NO, GET OUT
         GET   CTLCARD             YES, GET DSN CARD
CTL0200  EQU   *
         MVC   MSKENT,0(R1)        MOVE IN DSNAME
         LA    R3,MSKENT+43        GET ADDR OF LAST BYTE
CTL0300  CLI   0(R3),C' '          CHECK FOR BLANK
         BNE   CTL0350             NO --
         BCT   R3,CTL0300          OTHERWISE LOOP
CTL0350  LA    R4,MSKENT           GET ADDR OF FIRST BYTE
         SR    R3,R4               COMPUTE LENGTH - 1
         ST    R3,MSKLEN           STORE IT
CTLEOFX  LM    2,14,CNTLSAVE
         BR    R14
         EJECT
CNTL0    DC    F'0'
CNTL1    DC    F'0'  DEF   0=NO PASSWORD VIOLATIONS DETAIL
*                          4=YES INCLUDE PASSWORD VIOLATIONS
CNTL2    DC    F'0'  DEF   0=DO NOT CREATE WORK FILE
*                          4=YES DO CREATE TEMPORARY WORK FILE
CNTL3    DC    F'0'  DEF   0=YES CREATE SUMMARY REPORT
*                          4=NO DO NOT CREATE SUMMARY REPORT
*                          8=ONLY CREATE SUMMARY REPORT
CNTL4    DC    F'0'  DEF   0=SELECT TYPE 80 RECORDS
*                          4=DO NOT SELECT TYPE 80 RECORDS
CNTL5    DC    F'0'  DEF   0=SELECT TYPE 81 RECORDS
*                          4=DO NOT SELECT TYPE 81 RECORDS
CNTL6    DC    F'0'  DEF   0=INCLUDE VIOLATIONS ONLY (LOG REASON 3,4,6)
*                          4=INCLUDE ALL LOG REASONS (0-7)
CNTL7    DC    F'0'  DEF   0=EVENT MASK DEFAULTS TO ALL
*                          4=USE EVENT MASK PROVIDED
CNTL8    DC    F'0'  DEF   0=AUTHORITIES MASK DEFAULTS TO ALL
*                          4=USE AUTHORITIES MASK PROVIDED
CNTL9    DC    F'0'  DEF   0=LOG REASON MASK DEFAULTS TO (3,4,6) SEE 6
*                          4=USE LOG REASON MASK (FORCES CNTL6=4)
CNTL9A   DC    F'0'  DEF   0=INCLUDE ALL ENTITIES
*                          4=SELECT SPECIFIC ENTITY
CNTL10   DC    F'0'  DEF   0=INCLUDE ALL USER IDS
*                          4=SELECT USER ID FROM MASK PROVIDED
CNTL11   DC    F'0'  DEF   0=INCLUDE ALL GROUP IDS
*                          4=SELCT GROUP ID FROM MASK PROVIDED
CNTL12   DC    F'0'  DEF   0=NOTIFY TSO USER OF VIOLATION
*                          4=DO NOT NOTIFY TSO USER OF VIOLATION
CNTL20   DC    F'0'  DEF   0=RECORD SELECTION BY DATE NOT ACTIVATED
*                          4=RECORD SELECTION BY DATE REQUESTED
CNTL22   DC    F'0'  DEF   0=RECORD SELECTION BY TIME NOT REQUESTED
*                          4=RECORD SELECTION BY TIME REQUESTED
CNTLX    DC    4X'FF'
CNTL23   DC    F'0'  DEF   0=RECORD SELECTION BY TIME OF DAY NOT ACTIV
*                          4=RECORD SELECTION BY TIME REQUESTED
CNTL21   DC    F'0'  DEF   0=RECORD SELECTION BY DATE NOT ACTIVATED
*                          4=RECORD SELECTION BY DATE REQUESTED
CNTLC    DC    CL80' NO CONTROL CARD OPTIONS REQUESTED '
CNTLC1   DC    CL80' NO MASKS PROVIDED '
         TITLE 'P50065 RACF AUDIT LISTING - GET A RECORD PROCESSING'
GETREC   EQU   *
         STM   3,14,GETRSAVE
         B     GETREC1
GETRHEAD DC    CL24'********GETREC  ********'
GETRSAVE DC    18F'0'
ADRSMF   DC    F'0'                    ADDRESS OF CURRENT SMF RECORD
TOTSMF   DC    F'0'                    SMF RECORDS READ
TOT80    DC    F'0'                    TYPE 80 RECORDS READ
TOT81    DC    F'0'                    TYPE 81 RECORDS READ
TOT80VR  DC    F'0'                    TYPE 80 VIOLATIONS READ
TOT80VP  DC    F'0'                    TYPE 80 VIOLATIONS PROCESSED
CURRDATE DS    0CL8
CURRDAY  DC    PL4'0'
CURRTIM  DC    BL4'0'
LOWDATE  DS    0CL8
LOWDAY   DC    PL4'9999999'
LOWTIM   DC    XL4'FF'
HIGHDATE DS    0CL8
HIGHDAY  DC    PL4'0'
HIGHTIM  DC    BL4'0'
BADRECS  DC    F'0'
GETREC1  GET   SMFIN                   GET NEXT SMF RECORD
         LR    R7,R1
         ST    R7,ADRSMF
         SR    R6,R6
         SR    R4,R4
         LH    R6,0(R1)                CHECK LENGTH OF RECORD
         LH    R4,=H'72'
         CR    R6,R4                   CHECK LENGTH < 74 DECIMAL
         BH    GETREC2                 RECORD > 72
GETBADR  L     R4,BADRECS
         LA    R4,1(R4)
         ST    R4,BADRECS
         B     GETREC1
         DROP  R7
         USING T80SMF,R7               USE R7 AS BASE TO SMF RECORD
         USING T81SMF,R8
*                                      SAVE ADDRESS OF SMF RECORD
GETREC2  L     R6,TOTSMF               ADD UP SMF RECORDS READ
         LA    R6,1(R6)
         ST    R6,TOTSMF               SAVE CURRENT SMF RECORD COUNT
*
*        CHECK FOR LOW AND HIGH DATES FROM DATA SET
*
         MVC   CURRDAY,SMF80DTE
         MVC   CURRTIM,SMF80TME
         CLC   CURRDATE,LOWDATE
         BL    NEWLOW
         CLC   CURRDATE,HIGHDATE
         BH    NEWHIGH
         B     CHEKTYPE
NEWLOW   MVC   LOWDATE,CURRDATE
         B     CHEKTYPE
NEWHIGH  MVC   HIGHDATE,CURRDATE
CHEKTYPE CLI   SMF80RTY,X'50'          IF TYPE 80 GO AND COUNT IT
         BE    GET80OK
         CLI   SMF80RTY,X'51'          IF TYPE 81 GO AND COUNT IT
         BE    GET81OK
         B     GETREC1                 NOT 80-81 GO GET ANOTHER RECORD
GET80OK  L     R6,TOT80                ADD UP TYPE 80 RECORDS READ
         LA    R6,1(R6)
         ST    R6,TOT80                SAVE TYPE 80 RECORDS READ
         TM    SMF80REA,X'10'          REASON CODE 3 IS CONSIDERED
         BNO   CHECK6R                  TO BE A RACF VIOLATION
CNTVIOLR L     R6,TOT80VR              ADD UP TYPE 80 VIOLATIONS READ
         LA    R6,1(R6)
         ST    R6,TOT80VR
         B     GETVALID                CONTINUE WITH VALIDATION
CHECK6R  TM    SMF80REA,X'08'          REASON CODE 4 IS CONSIDERED
         BNO   CHECK6R1                 TO BE A RACF VIOLATION
         B     CNTVIOLR
CHECK6R1 TM    SMF80REA,X'02'          REASON CODE 6 IS CONSIDERED
         BNO   GETVALID                 TO BE A RACF VIOLATION
         B     CNTVIOLR
GET81OK  L     R6,TOT81                ADD UP TYPE 81 RECORDS READ
         LA    R6,1(R6)
         ST    R6,TOT81                SAVE TYPE 81 RECORDS READ
         B     GETVALID                GO AND VALIDATE RECORD
         EJECT
GETVALID BAL   R14,VALIDATE            VALIDATE THAT RECORD IS DESIRED
         LTR   R2,R2                   R2 = 0 SAYS RECORD WAS SELECTED
         BZ    GETRECE                 R2 > 0  RECORD NOT SELECTED
         B     GETREC1                 GO GET ANOTHER RECORD
         SPACE 3
GETRECE  LM    3,14,GETRSAVE           RESTORE REGISTERS
         BR    R14                     AND RETURN
         TITLE 'P50065 RACF AUDIT LISTING - RECORD VALIDATION '
VALIDATE STM   3,14,VALISAVE
         B     VALIDAT1
VALIHEAD DC    CL24'********VALIDATE********'
VALISAVE DC    18F'0'
VALIDAT1 SR    R2,R2                   SET R2 TO PROCESS RECORD
         L     R3,CNTL20               CHECK IF DATE PROCESSING DESIRED
         LTR   R3,R3
         BZ    VALTIMCK                NO DATE - CHECK IF TIME
         BAL   R14,VALDATE             SEE IF RECORD WITHIN DATES
         LTR   R2,R2                   IF RECORD NOT SELECTED GET OUT
         BNZ   VALIDERR                   OTHERWISE CONTINUE WITH TIME
         SPACE 2
VALTIMCK L     R3,CNTL22               CHECK IF TIME PROCESSING DESIRED
         LTR   R3,R3
         BZ    VALIDEND                NO TIME - CHECK IF EVENT
         BAL   R14,VALTIME             SEE IF RECORD WITHIN TIME
         LTR   R2,R2                   IF RECORD NOT SELECTED GET OUT
         BNZ   VALIDERR                   OTHERWISE CONTINUE WITH EVENT
         B     VALIDEND
VALIDERR LM    3,14,VALISAVE           RESTORE REGISTERS
         LA    R2,16                   SET R2 GOOD AND HIGH
         B     VALIDEND+4              GO RIGHT TO THE BR R14
         SPACE 2
VALIDEND LM    3,14,VALISAVE           RESTORE REGISTERS
         BR    R14                     AND RETURN
         TITLE 'P50065 RACF AUDIT LISTING - DATE VALIDATION '
VALDATE  STM   3,14,VALDSAVE
         B     VALDDAT1
VALDHEAD DC    CL24'********VALDATE ********'
VALDSAVE DC    18F'0'
VALDDAT1 SR    R2,R2                   SET TO 0 FOR VALID DATE CHECK
         L     R7,ADRSMF               SET TO SMF RECORD ADDRESS
         MVC   DBL(4),SMF80DTE
         L     R8,DBL
         L     R9,CKSDAYP
         CR    R8,R9
         BL    VALDBAD                 DATE LOWER THAT START DATE
         L     R9,CKEDAYP
         CR    R8,R9
         BH    VALDBAD                 DATE HIGHER THAN START DATE
         B     VALDEND
VALDBAD  LA    R2,4                    SET R2 FOR INVALID RECORD
VALDEND  LM    3,14,VALDSAVE           RESTORE REGISTERS
         BR    R14                     AND RETURN
         TITLE 'P50065 RACF AUDIT LISTING - TIME VALIDATION '
VALTIME  STM   3,14,VALTSAVE
         B     VALITIM1
VALTHEAD DC    CL24'********VALTIME ********'
VALTSAVE DC    18F'0'
VALITIM1 SR    R2,R2                   SET TO 0 FOR VALID DATE CHECK
         L     R7,ADRSMF               SET TO SMF RECORD ADDRESS
         MVC   DBL(4),SMF80TME
         L     R8,DBL
         L     R9,CKSTIMB              LOAD START DATE
         CR    R8,R9
         BL    VALTBAD                 DATE LOWER THAT START DATE
         L     R9,CKETIMB              LOAD ENDING DATE
         CR    R8,R9
         BH    VALTBAD                 DATE HIGHER THAN START DATE
         B     VALITIME
VALTBAD  LA    R2,4                    SET R2 FOR INVALID RECORD
VALITIME LM    3,14,VALTSAVE           RESTORE REGISTERS
         BR    R14                     AND RETURN
         TITLE 'P50065 RACF AUDIT LISTING - EVENT VALIDATION'
VALEVENT STM   3,14,VALESAVE
         B     VALEVT1
VALEHEAD DC    CL24'********VALEVENT********'
VALESAVE DC    18F'0'
VALEVT1  SR    R2,R2
         L     R7,ADRSMF               RELOAD SMF RECORD ADDRESS
         CLI   SMF80RTY,X'50'          SEE IF TYPE 80 RECORD HERE
         BNE   VALEVTE                 NO GET OUT, DOES NOT APPLY
         SR    R8,R8
         SR    R9,R9
         IC    R8,SMF80EVT             EVENT TYPE IN R8
         IC    R9,CKEVTB               CONTROL CARD EVENT SELECTED
         CR    R8,R9
         BNE   VALEVTNO                NOT EQUAL
         B     VALEVTE
VALEVTNO LA    R2,4                    SET R2 TO SKIP RECORD
VALEVTE  LM    3,14,VALESAVE           RESTORE REGISTERS
         BR    R14                     AND RETURN
         TITLE 'P50065 RACF AUDIT LISTING - PROCESS RACF RECORDS '
PROCESS  STM   2,14,PROCSAVE
         B     PROCESS1
PROCHEAD DC    CL24'********PROCESS ********'
PROCSAVE DC    18F'0'
PROCESS1 L     R7,ADRSMF               RE-ESTABLISH ADDRESSABILITY
         CLI   SMF80RTY,X'50'
         BE    PROCES80
PROCES81 BAL   R14,PROCTY81
         B     PROCEND
PROCES80 BAL   R14,PROCTY80
PROCEND  LM    2,14,PROCSAVE           RESTORE REGISTERS
         BR    R14                     AND RETURN
         TITLE 'P50065 RACF AUDIT LISTING - PROCESS TYPE 80 RECORDS'
PROCTY80 STM   2,14,PR80SAVE
         B     PROC80A
PR80HEAD DC    CL24'********PROCTY80********'
PR80PATX DC    32F'0'
PR80SAVE DC    18F'0'
ADR80CNT DC    F'0'
PROC80R  DC    F'0'
AUTHBITS DC    BL1'00000000'
LOGBITS  DC    BL1'00000000'
PROC80A  L     R2,CNTL4              CHECK IF TYPE 80 TO BE SELECTED
         LTR   R2,R2
         BNZ   PROC80E               NO, GET OUT
         L     R2,CNTL7              CHECK IF EVENT MASK TO BE USED
         LTR   R2,R2
         BZ    PROC80A1             NO EVENT MASK, CONTINUE
         LA    R2,MSKEVENT          POINT TO EVENT MASK
         SR    R3,R3
         IC    R3,SMF80EVT          PUT EVENT CODE IN
         BCTR  R3,0                 SUBTRACT 1 FOR DISPLACEMENT
         AR    R3,R2                POINT TO BYTE IN MASK
         CLI   0(R3),C' '           IF BLANK BYPASS  THIS RECORD
         BE    PROC80E              IF NOT BLANK SELECT THIS  RECORD
         CLC   MSKQUAL,=C'      '   WAS EVENT QUALIFIER MASK SPECIFIED
         BE    PROC80A1             NO, THEN CONTINUE
         LA    R2,MSKQUAL           POINT TO QUALIFIER MASK
         XR    R3,R3                CLEAR R3
         IC    R3,SMF80EVQ          GET EVENT QUALIFIER
         AR    R3,R2                POINT TO BYTE IN MASK
         CLI   0(R3),C' '           WAS IT SELECTED??
         BE    PROC80E              NO --
PROC80A1 L     R2,CNTL8             CHECK IF AUTH MASK TO BE USED
         LTR   R2,R2
         BZ    PROC80A2             NO SKIP AUTH MASK CHECK
         SR    R2,R2
         IC    R2,AUTHBITS          CHECK IF THIS IS AUTH WE NEED
         EX    R2,TMAUTH
         BNO   PROC80A2             NO MATCH, BIT IS NOT ON / PROCESS
         B     PROC80E              BIT IS ON SKIP THIS RECORD
TMAUTH   TM    SMF80ATH,X'00'       CHECK IF THIS IS AUTH WE NEED
PROC80A2 L     R2,CNTL9             CHECK IF LOG REASON MASK TO BE USED
         LTR   R2,R2
         BZ    PROC80AA             NO SKIP LOG REASON CHECK
         SR    R2,R2                CHECK IF THIS IS LOG REASON EXCLUDE
         IC    R2,LOGBITS
         EX    R2,TMREA
         BZ    PROC80AA             BIT NOT ON - GO PROCES THIS RECORD
         B     PROC80E              BIT IS ON SKIP THIS RECORD
TMREA    TM    SMF80REA,X'00'       CHECK IF THIS IS LOG REASON EXCLUDE
PROC80AA L     R2,CNTL9A           CHECK IF ENTITY(DSN) MASK SPECIFIED
         LTR   R2,R2
         BZ    PROC80A3            NO, CONTINUE TO CHECK NEXT FIELD
         LH    R2,SMF80CNT         GET COUNT OF NUM OF REL SEC
         LTR   R2,R2               CHECK FOR NO REL SECTIONS
         BZ    PROC80E             NO, EXIT
         LH    R3,SMF80REL         GET OFFSET TO FIRST REL SEC
         LA    R3,4(R3)            BUMP PAST HEADER
         AR    R3,R7               R3 -> FIRST RELOCATABLE SECTION
PROC80AB XR    R15,R15             CLEAR R15
         IC    R15,0(R3)           GET DATA TYPE
         CH    R15,=H'1'           WE ARE INTERESTED IN DATA TYPES 1,
         BE    PROC80AC
         CH    R15,=H'9'                   9,
         BE    PROC80AC
         CH    R15,=H'18'             AND 18
         BE    PROC80AC
         IC    R15,1(R3)           GET DATA LENGTH
         LA    R3,2(R15,R3)        DATA LEN + 2 GETS TO NEXT REL SEC
         BCT   R2,PROC80AB         LOOP THROUGH ALL REL SECTION
         B     PROC80E             IF DSN NOT FOUND THEN GET OUT
PROC80AC IC    R15,1(R3)           GET LEN OF DATA
         BCTR  R15,0               REDUCE FOR COMPARE
         C     R15,MSKLEN          CHECK AGAINST GENERIC LENGTH
         BL    PROC80E             IF LESS THEN LEAVE
         L     R15,MSKLEN          OTHERWISE USE IT FOR COMPARE
         EX    R15,DSNCOMP         CHECK FOR EQUAL
         BE    PROC80A3            YES, CONTINUE
         B     PROC80E             NO, BYPASS THIS RECORD
DSNCOMP  CLC   2(0,R3),MSKENT      COMPARE FOR EXECUTE
PROC80A3 L     R2,CNTL10            CHECK IF USERID MATCH DESIRED
         LTR   R2,R2
         BZ    PROC80A4             NO SEE IF GROUP MATCH DESIRED
         CLC   MSKUSR(8),=C'        '    SEE IF USERID BLANK
         BE    PROC80A4             YES ITS BLANK PROCESS THIS RECORD
         CLC   SMF80USR(8),MSKUSR
         BNE   PROC80E              NOT THE USER WE WANT TO TRACE
         B     PROC80A4
PROC80A4 L     R2,CNTL11            CHECK IF GROUPID MATCH DESIRED
         LTR   R2,R2
         BZ    PROC80A5
         CLC   MSKGRP(8),=C'        '  IF MASK BLANK PROCESS RECORD
         BE    PROC80A5
         CLC   SMF80GRP,MSKGRP
         BE    PROC80A5            THIS IS THE GROUP WE WANT
         B     PROC80E             NOT THE GROUP WE WANT
PROC80A5 EQU   *
         L     R2,PROC80R            RECORDS PROCESSED TYPE 80
         LA    R2,1(R2)
         ST    R2,PROC80R            ADD 1 FOR RECORDS PROCESSED
*
* CHECK FOR JUST A PASSWORD VIOLATION
         TM    SMF80REA,X'10'          REASON CODE 3 IS CONSIDERED
         BNO   CHECK6P                  TO BE A RACF VIOLATION
CNTVIOLP L     R6,TOT80VP              ADD UP TYPE 80 VIOLATIONS
         LA    R6,1(R6) PROCESSED
         ST    R6,TOT80VP
         B     CHECKLOG                CONTINUE WITH VALIDATION
CHECK6P  TM    SMF80REA,X'08'          REASON CODE 4 IS CONSIDERED
         BNO   CHECK6P1                 TO BE A RACF VIOLATION
         B     CNTVIOLP
CHECK6P1 TM    SMF80REA,X'02'          REASON CODE 6 IS CONSIDERED
         BNO   CHECKLOG                 TO BE A RACF VIOLATION
         B     CNTVIOLP
CHECKLOG CLI   SMF80EVT,X'01'          CHECK IF LOGON/INIT
         BNE   PROC80B                 NO, CONTINUE
         CLI   SMF80EVQ,X'01'          IS THIS AN INVALID PASSWORD
         BNE   PROC80B                 NO, CONTINUE
         L     R2,CNTL1                CONTROL FOR PASSWORD=YES/NO
         LTR   R2,R2
         BNZ   PROC80B                 PASSWORD=YES, CONTINUE
         L     R2,EVENTAB              NO PASSWORDS WANTED, JUST COUNT
         L     R3,56(R2)               COUNT OF INIT/LOGON EVT 01
         LA    R3,1(R3)
         ST    R3,56(R2)               SAVE THE COUNT
         L     R2,0(R2)                POINT TO TAB01
         L     R3,52(R2)               COUNT OF INVALID PASSWORDS
         LA    R3,1(R3)
         ST    R3,52(R2)              COUNT OF EVQ 01
         B     PROC80EX               SKIP PRINTING OF THIS ONE
         DS    F'0'
PROC80B  MVC   DATESMFX,SMF80DTE
         MVC   TIMESMFX,SMF80TME
         BAL   R14,SMFDTCNV
         MVC   SYR(6),DATESMFY
         MVC   SHR(8),TIMESMFY
         MVC   USER,SMF80USR
         MVC   GROUP,SMF80GRP
         MVC   JOBNAME,SMF80JBN
         BAL   R14,HEADINGS
         SPACE 3
         SR    R14,R14
         ST    R14,COMDFLAG
         L     R4,EVENTAB
         SR    R3,R3
         IC    R3,SMF80EVT
         BCTR  R3,0
         MH    R3,=H'64' TABLE ENTRIES ARE 64 FOR EVENT TABLE
         AR    R4,R3
         MVI   LINE1,C'0'
         MVC   L1LABEL,LEVT
         MVC   L1DATA,4(R4)
*
         L     R3,56(R4)           ADD TO EVENT COUNTS
         LA    R3,1(R3)
         ST    R3,56(R4)           AND SAVE IT
         BAL   R14,PRINT           PRINT EVENT CODE
         MVC   L1LABEL,LEVQ
         L     R4,0(R4)
         SR    R3,R3
         IC    R3,SMF80EVQ
         BCTR  R3,0
         MH    R3,=H'56' TABLE ENTRY IS 56 NOW
         AR    R4,R3
         MVC   L1DATA,0(R4)
*
         L     R3,52(R4)           ADD TO EVENT QUALIFIER COUNTS
         LA    R3,1(R3)
         ST    R3,52(R4)           AND SAVE IT
         BAL   R14,PRINT          PRINT EVENT QUALIFIER
         MVC   L1LABEL,LATH
         MVC   BIT,SMF80ATH
         L     R9,ATHTAB         LOAD ADDRESS OF ATHTAB IN P50065A
         LA    R8,L1DATA
         BAL   R14,BITMAP        FIND AND PRINT AUTHORITIES USED
         MVC   L1LABEL,LREA
         MVC   BIT,SMF80REA
         L     R9,REATAB         LOAD ADDRESS OF REATAB IN P50065A
         BAL   R14,BITMAP        FIND AND PRINT REASON FOR LOGGING
         MVC   L1LABEL,LERR
         MVC   BIT,SMF80ERR
         L     R9,ERRTAB         LOAD ADDRESS OF ERRTAB IN P50065A
         BAL   R14,BITMAP        FIND AND PRINT ERROR FLAGS
         MVC   L1LABEL,LVAR
         BAL   R14,PRINT         PRINT VARIABLE DATA ENTRIES
         MVI   LINE1,C'0'
         LR    R6,R7             POINT TO START OF RECORD
         AH    R6,SMF80REL       POINT TO FIRST RELOCATE DISPLACEMENT
         LA    R6,4(R6)          ADD 4 TO GET BY RECORD HEADER SECTION
         LH    R1,SMF80CNT       CHECK NUMBER OF RELOCATE ENTRIES
         LTR   R1,R1
         BNZ   RELOPROC
         MVC   DESC,LDATA
         BAL   R14,PRINT
         B     PROC80EX
RELOPROC BAL   R14,RELOCATE
         B     PROC80EX              GET OUT OF THIS
         EJECT
BITMAP   STM   2,14,BITSAVE
         LA    R2,128
BITLOOP  EX    R2,TM
         BNO   NOBIT
         MVC   0(50,R8),0(R9)
*
*              THIS CODE INSERTED TO SAVE DESCRIPTORS FROM TABLE LOOKUP
*              FOR USE IN BUILDING TSO MESSAGES FOR VIOLATIONS
*
*
         CLI   SMF80EVT,X'02'        ONLY WANT THIS FOR TYPE 2 EVENTS
         BNE   NOTSOSAV
         CLI   SMF80EVQ,X'01'        AND TYPE 1 QUALIFIER
         BNE   NOTSOSAV
         CLI   DESC+48,C'1'          CHECK FOR DPT01 ENTRY
         BNE   TSOSAV1
         MVC   TSODSN,DATA           SAVE TSO DSN
         B     NOTSOSAV
TSOSAV1  CLI   DESC+48,C'3'          CHECK FOR DPT03 ENTRY
         BNE   TSOSAV2
         MVC   TSOACCR(7),DATA       ACCESS REQUESTED
         B     NOTSOSAV
TSOSAV2  CLI   DESC+48,C'4'          CHECK FOR DPT04 ENTRY
         BNE   NOTSOSAV
         MVC   TSOACCA(7),DATA       ACCESS ALLOWED
NOTSOSAV L     R3,52(R9) ADD UP BIT TABLE COUNTS
         LA    R3,1(R3)
         ST    R3,52(R9) AND STORE IT BACK
         CLI   DESC+48,C'6'          CHECK FOR COMMAND DATA
         BNE   NOSETHEX
         L     R14,COMDFLAG
         LA    R14,4
         ST    R14,COMDFLAG
NOSETHEX BAL   R14,PRINT
         L     R14,COMDFLAG
         LTR   R14,R14
         BZ    ENDBITA
         BAL   R14,HEXDATA
ENDBITA  B     ENDBIT
NOBIT    LA    R9,56(R9) TABLE ENTRIES ARE NOW 56
         CLI   0(R9),X'FF'
         BE    FILBLKS            IF NO BIT FOUND FILL WITH BLANKS
         SRA   R2,1
         BNZ   BITLOOP
FILBLKS  MVC   0(50,R8),FILBLANK
         BAL   R14,PRINT
ENDBIT   LM    2,14,BITSAVE
         BR    R14
BITSAVE  DC    18F'0'
TM       TM    BIT,X'00'
         DS    0F
PROC80EX BAL   R14,TSOSEND             RESTORE REGISTERS
PROC80E  LM    2,14,PR80SAVE           RESTORE REGISTERS
         BR    R14                     AND RETURN
         TITLE 'P50065 RACF AUDIT LISTING - PRINT ALL RELOCATE ENTRIES'
RELOCATE STM   2,14,RELOSAVE
         B     RELO1
RELOHEAD DC    CL24'********RELOCATE********'
RELOSAVE DC    18F'0'
RELO1    ST    R1,ADR80CNT
         SR    R14,R14
         ST    R14,COMDFLAG      TURN OFF THE HEXPRINT  FLAG
         SR    R3,R3
         IC    R3,0(R6)          CHECK WHICH TYPE OF RELOCATE ENTRY
         BCTR  R3,0              SUBRACT 1 TO GET DISPLACEMENT
         MH    R3,=H'60'         CALCULATE TABLE DISPLACEMENT 60 NOW
         L     R4,DTPTAB         LOAD ADDRESS OF DPTTAB FROM P50065A
         AR    R4,R3             ADD DISPLACEMENT FOR RELOC SECTION
         MVC   DESC,4(R4)        MOVE DESCRIPTION TO PRINT LINE
         L     R9,0(R4)          LOAD INFO ON ADDITIONAL ENTRIES
         LTR   R9,R9
         BNZ   CKTAB             IF R9 NOT 0 THEN HAVE MORE SUBENTRIES
         L     R3,56(R4)         ADD TO DTPTAB COUNTS
         LA    R3,1(R4)
         ST    R3,56(R4)         AND SAVE IT
         SR    R3,R3             OTHERWISE NO MORE SUB ENTRIES
         IC    R3,1(R6)          LENGTH OF DATA FIELD IS IN R3
         LA    R2,2(R6)          START OF DATA FIELD IS IN R2
DATALOOP CH    R3,=H'55'
         BL    EXMOVE
         MVC   DATA,0(R2)
         CLI   SMF80EVT,X'02'        ONLY WANT THIS FOR TYPE 2 EVENTS
         BNE   NOSAVE1
         CLI   SMF80EVQ,X'01'        AND TYPE 1 QUALIFIER
         BNE   NOSAVE1
         CLI   DESC+48,C'1'          CHECK FOR DPT01 ENTRY
         BNE   NOSAVE1
         MVC   TSODSN,DATA           SAVE TSO DSN
NOSAVE1  CLC   DESC+47(02),=C'06'        CHECK FOR COMMAND DATA
         BNE   PRINTXXX              NO COMMAND DATA
         LA    R14,4
         ST    R14,COMDFLAG
PRINTXXX BAL   R14,PRINT
         L     R14,COMDFLAG
         LTR   R14,R14
         BZ    NOHEXDA
HEXYES   BAL   R14,HEXDATA
NOHEXDA  LA    R2,55(R2)
         SH    R3,=H'55'
         BZ    LOOPCNTL
         BM    SHORT             LESS THAN 55 WAS LEFT
         B     DATALOOP
SHORT    AH    R3,=H'55'         GET LENGTH OF MOVE + AGAIN
         B     DATALOOP
EXMOVE   BCTR  R3,0
         EX    R3,MVC
         CLI   0(R6),X'0A'
         BE    DASD
         CLI   0(R6),X'0B'
         BE    DASD
         CLI   SMF80EVT,X'02'        ONLY WANT THIS FOR TYPE 2 EVENTS
         BNE   NOSAVE2
         CLI   SMF80EVQ,X'01'        AND TYPE 1 QUALIFIER
         BNE   NOSAVE2
         CLI   DESC+48,C'1'          CHECK FOR DPT01 ENTRY
         BNE   NOSAVE2
         MVC   TSODSN,DATA           SAVE TSO DSN
NOSAVE2  CLC   DESC+47(02),=C'06'        CHECK FOR COMMAND DATA
         BNE   NOHEX
         LA    R14,4
         ST    R14,COMDFLAG
NOHEX    BAL   R14,PRINT
         L     R14,COMDFLAG
         LTR   R14,R14
         BZ    NOHEXA
         BAL   R14,HEXDATA
NOHEXA   B     LOOPCNTL
MVC      MVC   DATA(0),0(R2)
CKTAB    SR    R3,R3             OTHERWISE NO MORE SUB ENTRIES
         IC    R3,1(R6)          LENGTH OF DATA FIELD IS IN R3
         LA    R2,2(R6)          START OF DATA FIELD IS IN R2
         LA    R8,DATA
         CLI   0(R6),X'04'
         BH    CKTAB21
         MVC   BIT,2(R6)
         BAL   R14,BITMAP
         B     LOOPCNTL
CKTAB21  CLI   0(R6),X'15'
         BNE   CKTAB24
         MVC   BIT,2(R6)
         MVC   DATA(8),3(R6)
         LA    R8,DATA+10
         BAL   R14,BITMAP
         B     LOOPCNTL
CKTAB24  CLI   0(R6),X'18'
         BNE   CKTAB30
         MVC   DATA(39),3(R6)
         BAL   R14,PRINT
         MVC   BIT,2(R6)
         BAL   R14,BITMAP
         B     LOOPCNTL
CKTAB30  CLI   0(R6),X'1E'
         BNE   LOOPCNTL
         MVC   BIT,2(R6)
         BAL   R14,BITMAP
         MVC   DATA(3),3(R6)
         MVC   DATA+5(6),6(R6)
         MVC   DATA+13(1),12(R6)
         BAL   R14,PRINT
         SR    R3,R3
         IC    R3,1(R6)
         SH    R3,=H'11'
         LA    R2,13(R6)
         BCTR  R3,0
         EX    R3,MVC
         BAL   R14,PRINT
         B     LOOPCNTL
DASD     MVI   DATA,C' '
         TM    2(R6),X'80'
         BNO   DASD2
         MVC   DATA+10(20),=C'VOLUME NOT PROCESSED'
         B     DASD3
DASD2    MVC   DATA+10(16),=C'VOLUME PROCESSED'
DASD3    BAL   R14,PRINT
         B     LOOPCNTL
*
LOOPCNTL SR    R3,R3
         IC    R3,1(R6)
         LA    R6,2(R3,R6)
         L     R1,ADR80CNT
         BCT   R1,RELO1             BACK TO THE START UNTIL ALL DONE
RELOEND  LM    2,14,RELOSAVE
         BR    R14
         TITLE 'P50065 RACF AUDIT LISTING - WRITE TSO MESSAGE'
TSOSEND  STM  R2,R14,TSOSSAVE
         B    TSOSEND1
TSOSSAVE DC   18F'0'
TSODSN   DC   CL44' '
TSOACCR  DC   CL7' '
TSOACCA  DC   CL7' '
TSOE1L1  DS   0CL68
         DC   C'JOB INITIATION/LOGON FAILED WITH INVALID PASSWORD ' 50
TSOE1D   DC   C'YY.DDD '                       7
TSOE1T   DC   C'HH.MM.SS'                      8
         DC   C'   '                           3   TOTAL 78
         DS   F'0'
TSOE2L1  DS   0CL68
         DC   C'('                             1
TSOE2ACR DC   CL7' '                           7
         DC   C') ACCESS TO ('                13
TSOE2DSN DC   CL44' '                         44
         DC   C')  '                           3   TOTAL 78
         DS   F'0'
TSOE2L2  DS   0CL68
         DC   C'USER('                         5      15
TSOE2USR DC   CL8' '                           8      23
         DC   C')GROUP('                       7      30
TSOE2GRP DC   CL8' '                           8      38
         DC   C')DENIED,'                      8      46
         DC   C'ALLOWED('                      8      54
TSOE2ACA DC   CL7' '                           7      61
         DC   C') '                            2      63
TSOE2DAY DC   C'YY.DDD '                       7      70
TSOE2TIM DC   C'HH.MM.SS'                      8      78
         DS   F'0'
TSOMSG   DC   0F'0'
         DC   AL2(98,0)       2         107 IS LENGTH OF OVERALL MSG
TSOSENDM DC   C'SEND '' '                      7
TSOTEXT  DC   CL68' '                         68
         DC   C' '','                          3
         DC   C'USER=('                        6
TSORECEV DC   CL4' '                           4
         DC   C'),'                            2        105 LONG
         DC   C'SAVE'                          4
         DS   0F
TSOSEND1 L    R2,CNTL12                CHECK IF TSO MESSAGE DESIRED
         LTR  R2,R2
         BNZ  TSOSENDE                 NO MESSAGE DESIRED, EXIT
         CLI  SMF80EVT,X'01'           MUST BE A LOGON(EVENT1) OR
         BNE  TSOTEST2                    AN ACCESS VIOLATION
TSOEV1   MVC  TSOE1D(6),DATESMFY       MOVE DAY INTO RECORD
         MVC  TSOE1T(8),TIMESMFY     MOVE TIME INTO RECORD
         MVC  TSOTEXT,TSOE1L1          MOVE MESSAGE IN
TSOPUT   MODESET KEY=ZERO,MODE=SUP
         SR   R0,R0
         LA   R1,TSOMSG
         SVC  34                       ISSUE MESSAGE
         MODESET KEY=NZERO,MODE=PROB
         B    TSOSENDE
TSOTEST2 CLI  SMF80EVT,X'02'         CHECK FOR RESOURCE ACCESS(EVENT2)
         BNE  TSOSENDE               NO, GET OUT
         MVC  TSOE2DAY(6),DATESMFY   MOVE DAY IN
         MVC  TSOE2TIM(8),TIMESMFY   MOVE TIME IN
         MVC  TSOE2USR(8),SMF80USR
         MVC  TSOE2GRP(8),SMF80GRP
         MVC  TSOE2ACR(7),TSOACCR    ACCESS REQUESTED
         MVC  TSOE2ACA(7),TSOACCA    ACCESS ALLOWED
         MVC  TSOE2DSN,TSODSN
         MVC  TSORECEV(4),=C'TS01'   SEND ALL MESSAGES TO TS02 FOR TEST
         MVC  TSOTEXT,TSOE2L1
         MODESET KEY=ZERO,MODE=SUP
         SR   R0,R0
         LA   R1,TSOMSG
         SVC  34                       ISSUE MESSAGE
         MODESET KEY=NZERO,MODE=PROB
         MVC  TSOTEXT,TSOE2L2
         B    TSOPUT
TSOSENDE LM   2,14,TSOSSAVE
         BR   R14
         TITLE 'P50065 RACF AUDIT LISTING - TYPE 80 HEADINGS '
HEADINGS STM  R2,R14,T80HEDSV
         B    T80HED1
T80HEDSV DC   18F'0'
T80PAGE  DC   F'0'
PAGEMASK DC   X'402020202021'
T80HED1  L    R2,CNTL3                  CHECKFOR SUMMARY ONLY
         LA   R3,8
         CR   R2,R3
         BE   T80HEDE
         PUT  T80PRT,HEADING1
*        PAGECNTS GO HERE
         L    R2,T80PAGE
         LA   R2,1(R2)
         ST   R2,T80PAGE
         CVD  R2,DBL
         MVC  HEADPGNO-1(6),PAGEMASK
         ED   HEADPGNO-1(6),DBL+5
         PUT  T80PRT,HEADING2
         PUT  T80PRT,HEADING3
         PUT  T80PRT,HEADING4
         PUT  T80PRT,HEADING5
T80HEDE  LM   R2,R14,T80HEDSV
         BR   R14
         TITLE 'P50065 RACF AUDIT LISTING - TYPE 80 HEADINGS '
PRINT    STM   R2,R14,PRNTSAVE
         B     PRINT1
PRNTSAVE DC    18F'0'
PRINT1   L     R2,CNTL3                 CHECK FOR SUMMARY ONLY
         LA    R3,8
         CR    R2,R3
         BE    PRINTE
         PUT   T80PRT,LINE1
         MVI   LINE1,C' '
         MVC   LINE1+1(132),LINE1
PRINTE   LM    R2,R14,PRNTSAVE
         BR    R14
         TITLE 'P50065 RACF AUDIT LISTING - PRINT HEX DATA ROUTINE'
HEXDATA  STM   R2,R14,HEXDSAVE
         B     HEXDATA1
HEXDSAVE DC    18F'0'
MVCLDAT  DC    F'0'
MVCLDATA DC    F'0'
HEXON    DC    F'0'
COMDFLAG DC    F'0'
HEX4SAVE DC    F'0'
LINEIX   DC    CL55' '
         DS    0F
LINE1X   DC    CL55' '
         DS    0F
LINE2X   DC    CL55' '
         DS    0F
LINEHEX  DC    CL110' '
         DS    0F
LINE3X   DC    C'....5....1....5....2....5....3....5....4....5....5'
         DC    C'....5'
         DS    0F
LINE4X   DC    C'         0         0         0         0         0'
         DC    C'    5'
*                                      R2 POINTS TO INPUT AREA
*                                      R3 CONTAINS LENGTH OF DATA
MVCHEX   MVC   LINEIX(0),0(R2)
MVCLINE1 MVC   DATA(0),LINE1X
MVCLINE2 MVC   DATA(0),LINE2X
*
HEXDATA1 XC    LINEIX,LINEIX           CLEAR IT OUT
         ST    R3,MVCLDAT              LENGTH OF DATA  - 1
         ST    R2,MVCLDATA             LOCATION OF DATA
         MVI   LINE1X,C' '
         MVC   LINE1X+1(54),LINE1X
         MVI   LINE2X,C' '
         MVC   LINE2X+1(54),LINE2X
         MVI   LINEHEX,C' '
         MVC   LINEHEX+1(109),LINEHEX
         CH    R3,=H'55'
         BL    HEXDAT54
         LA    R3,54                   SET UP MAX MOVE
         ST    R3,MVCLDAT
HEXDAT54 EX    R3,MVCHEX               MOVE DATA INTO WORK AREA < 56
         LA    R6,LINEIX
         LA    R7,LINEHEX              POINTS TO OUTPUT AREA
         UNPK  0(15,R7),0(8,R6)
         UNPK  14(15,R7),7(8,R6)
         UNPK  28(15,R7),14(8,R6)
         UNPK  42(15,R7),21(8,R6)
         UNPK  56(15,R7),28(8,R6)
         UNPK  70(15,R7),35(8,R6)
         UNPK  84(15,R7),42(8,R6)
         UNPK  98(13,R7),49(7,R6)
         TR    0(110,R7),TRXTABLE-240
         LA    R6,55
         LA    R2,LINE1X
         LA    R3,LINE2X
         LA    R4,LINEHEX
LOOPHEX  MVC   0(1,R2),0(R4)
         MVC   0(1,R3),1(R4)
         LA    R4,2(R4)
         LA    R2,1(R2)
         LA    R3,1(R3)
         BCT   R6,LOOPHEX
         B     HEXDATAE
         DC    0F'0'
TRXTABLE DC    C'0123456789ABCDEF'
HEXDATAE BAL   R14,HEX4LINE         LESS THAN 55  PRINT AND END
HEXENDIT LM    R2,R14,HEXDSAVE      FINAL EXIT
         BR    R14
HEX4LINE ST    R14,HEX4SAVE         LESS THAN 55  PRINT AND END
         L     R3,MVCLDAT           RESET R3
         EX    R3,MVCLINE1          LESS THAN 55  PRINT AND END
         BAL   R14,PRINT
         EX    R3,MVCLINE2
         BAL   R14,PRINT
         MVC   DATA,LINE3X
         BAL   R14,PRINT
         MVC   DATA,LINE4X
         BAL   R14,PRINT
         L     R14,HEX4SAVE
         BR    R14
         TITLE 'P50065 RACF AUDIT LISTING - PROCESS TYPE 81 RECORDS'
PROCTY81 STM   2,14,PR81SAVE
         B     PROC81A
PR81HEAD DC    CL24'********PROCTY81********'
PR81PATX DC    32F'0'
PR81SAVE DC    18F'0'
PROC81R  DC    F'0'
PROC81A  L     R2,CNTL5             SEE IF TYPE 81 RECORDS DESIRED
         LTR   R2,R2
         BNZ PROC81E              NOPE SKIP THESE GUYS
         L     R2,PROC81R           TYPE 81 RECORDS PROCESSED
         LA    R2,1(R2)
         ST    R2,PROC81R
         L     R8,ADRSMF            ADDRESS OF SMF RECORD
*
*        CHECK FOR SUMMARY ONLY
*
         L     R2,CNTL3
         LA    R3,8
         CR    R2,R3
         BE    PROC81E
         MVC   DATESMFX,SMF81DTE
         MVC   TIMESMFX,SMF81TME
         BAL   R14,SMFDTCNV
         MVC   T81JYR(6),DATESMFY
         MVC   T81JHR(8),TIMESMFY
         MVC   T81SID,SMF81SID
         MVC   T81SMFDS,SMF81RDS
         MVC   T81UADSN,SMF81UDS
         MVC   T81VLSMF,SMF81RVL
         MVC   T81UNSMF,SMF81RUN
         MVC   T81VLUAD,SMF81UVL
         BAL   R7,T81HEADS
         SPACE 3
         LA    R2,T81HEAD7
         L     R3,T81RACFX
         LA    R7,*+16
         TM    SMF81OPT,X'20'         RACINIT PREPROCESSING
         BO    T81YESYE
         B     T81NONO
         LA    R7,*+16
         TM    SMF81OPT,X'10'         RACCHECK PREPROCESSING
         BO    T81YESYE
         B     T81NONO
         LA    R7,*+16
         TM    SMF81OPT,X'08'         RACDEF PREPROCESSING
         BO    T81YESYE
         B     T81NONO
         LA    R7,*+16
         TM    SMF81OPT,X'04'         RACINIT POSTPROCESSING
         BO    T81YESYE
         B     T81NONO
         LA    R7,*+16
         TM    SMF81OPT,X'02'         RACDEF POSTPROCESSING
         BO    T81YESYE
         B     T81NONO
         LA    R7,*+16
         TM    SMF81OP2,X'10'         ICHNX00 COMMAND
         BO    T81YESYE
         B     T81NONO
         LA    R7,*+16
         TM    SMF81OP2,X'08'         ICHCCX00 COMMAND
         BO    T81YESYE
         B     T81NONO
         LA    R7,*+16
         TM    SMF81OPT,X'80'         RACINIT
         BO    T81YESYE
         B     T81NONO
         LA    R7,*+16
         TM    SMF81OPT,X'40'         DATASET
         BO    T81YESYE
         B     T81NONO
         LA    R7,*+16
         TM    SMF81OP2,X'80'         TAPE VOLUME
         BO    T81NONO
         B     T81YESYE
         LA    R7,*+16
         TM    SMF81OP2,X'40'         DASD VOLUME
         BO    T81NONO
         B     T81YESYE
         LA    R7,*+16
         TM    SMF81OP2,X'20'         TERMINAL
         BO    T81NONO
         B     T81YESYE
         LA    R7,*+16
         TM    SMF81AOP,X'80'         USER CLASS PROFILES
         BO    T81YESYE
         B     T81NONO
         LA    R7,*+16
         TM    SMF81AOP,X'40'         GROUP CLASS PROFILES
         BO    T81YESYE
         B     T81NONO
         LA    R7,*+16
         TM    SMF81AOP,X'20'         DATASET CLASS PROFILES
         BO    T81YESYE
         B     T81NONO
         LA    R7,*+16
         TM    SMF81AOP,X'10'         TAPE VOLUME CLASS PROFILES
         BO    T81YESYE
         B     T81NONO
         LA    R7,*+16
         TM    SMF81AOP,X'08'         DASD VOLUME CLASS PROFILES
         BO    T81YESYE
         B     T81NONO
         LA    R7,*+16
         TM    SMF81AOP,X'04'         TERMINAL CLASS PROFILES
         BO    T81YESYE
         B     T81NONO
         LA    R7,*+16
         TM    SMF81AOP,X'02'         RACF COMMAND VIOLATIONS
         BO    T81YESYE
         B     T81NONO
         LA    R7,*+16
         TM    SMF81AOP,X'01'         SPECIAL USER ACTIVITY
         BO    T81YESYE
         B     T81NONO
         LA    R7,*+16
         TM    SMF81OP3,X'20'         DASD VOLUME PROTECTION
         BO    T81YESYE
         B     T81NONO
         LA    R7,*+16
         TM    SMF81OP3,X'80'         TAPE VOLUME PROTECTION
         BO    T81YESYE
         B     T81NONO
         LA    R7,*+16
         TM    SMF81TMO,X'80'         TERMINAL AUTHORIZATION CHECKING
         BO    T81YESYE
         B     T81NONO
         LA    R7,*+16
         TM    SMF81OP3,X'40'         DUPLICATE NAMES MAY BE DEFINED
         BO    T81NONO
         B     T81YESYE
         LA    R7,*+16
         TM    SMF81TMO,X'40'         UACC FOR UNDEFINED TERMINALS
         BO    T81NONE
         MVC   T81NO,=C'READ '
         B     T81AROND
T81NONE  MVC   T81YES,=C'NONE'
T81AROND BAL   R7,T81LINES
         B     PROC81E
         EJECT
T81PAGE  DC    F'0'
T81HEADS PUT  T81PRT,HEADING1
*        PAGECNTS GO HERE
         L    R2,T81PAGE
         LA   R2,1(R2)
         ST   R2,T81PAGE
         CVD  R2,DBL
         MVC  HEADPGNO-1(6),PAGEMASK
         ED   HEADPGNO-1(6),DBL+5
         PUT  T81PRT,HEADING2
         PUT  T81PRT,T81HEAD3
         PUT  T81PRT,T81HED3A
         PUT  T81PRT,T81HEAD4
         PUT  T81PRT,T81HEAD5
         PUT  T81PRT,T81HEAD6
         BR   R7
         SPACE 3
T81YESYE MVC   T81YES,T81Y
         B     T81LINES
T81NONO  MVC   T81NO,T81N
T81LINES DS    0H
         MVC   T81LABEL,0(R3)
         PUT   T81PRT,T81LINE
         MVI   T81LSPAC,C' '
         MVC   T81YES,T81LSPAC
         MVC   T81NO,T81LSPAC
         LA    R3,32(R3)
         CLI   0(R3),X'FF'
         BNE   T81NOTEN
         CLI   1(R3),X'FF'
         BE    T81NOTEN
         MVI   T81LSPAC,C'0'
         PUT   T81PRT,(R2)
         LA    R2,133(R2)
         LA    R3,32(R3)
T81NOTEN BR    R7
         DS    0F
         EJECT
PROC81E  LM    2,14,PR81SAVE           RESTORE REGISTERS
         BR    R14                     AND RETURN
         TITLE 'P50065 RACF AUDIT LISTING - SMF DATE AND TIME CONVERT'
SMFDTCNV STM   2,14,SMFDSAVE
         B     SMFDAT1
SMFDX    DC    CL24'********SMFDTCNV********'
SMFDSAVE DC    18F'0'
DATESMFX DC    PL4'0'
TIMESMFX DC    BL4'0'
DATESMFY DS   0CL6
T81SYR   DC   C'YY'
         DC   C'.'
T81SDA   DC   C'DDD'
TIMESMFY DS   0CL8
T81SHR   DC   C'HH'
         DC   C'.'
T81SMN   DC   C'MM'
         DC   C'.'
T81SSC   DC   C'SS'
SMFDAT1  UNPK  T81WORK+3(5),DATESMFX+1(3)
         OI    T81WORK+7,X'F0'
         MVC   T81SYR,T81WORK+3
         MVC   T81SDA,T81WORK+5
         SR    R2,R2
         MVC   T81DBL(4),TIMESMFX
         L     R3,T81DBL
         D     R2,=F'100'
         SR    R2,R2
         D     R2,=F'60'
         CVD   R2,T81DBL
         UNPK  T81WORK(3),T81DBL+6(2)
         OI    T81WORK+2,X'F0'
         MVC   T81SSC,T81WORK+1
         SR    R2,R2
         D     R2,=F'60'
         CVD   R2,T81DBL
         UNPK  T81WORK(3),T81DBL+6(2)
         OI    T81WORK+2,X'F0'
         MVC   T81SMN,T81WORK+1
         CVD   R3,T81DBL
         UNPK  T81WORK(3),T81DBL+6(2)
         OI    T81WORK+2,X'F0'
         MVC   T81SHR,T81WORK+1
SMFDAT99 LM    2,14,SMFDSAVE           RESTORE REGISTERS
         BR    R14                     AND RETURN
         TITLE 'P50065 RACF AUDIT LISTING - SUMMARY REPORT PROCESSING'
SUMMARY  STM   2,14,SUMMSAVE
         B     SUMMARY1
SUMMHEAD DC    CL24'********SUMMARY ********'
SUMMSAVE DC    18F'0'
ADRENNUM DC    F'0'
LINECNT  DC    F'0'
SUMMARY1 MVC   HEADING3+77(7),=C'SUMMARY'       MODIFY SUMMARY LINE
         MVI   HEADING4,C' '           BLANK OUT LINE 4
         MVC   HEADING4+1(132),HEADING4
         MVI   HEADING4,C'+'           NO SPACING FOR HEADING 4
         MVI   HEADING5,C' '           BLANK OUT LINE 5
         MVC   HEADING5+1(132),HEADING5
         MVI   HEADING5,C' '           SPACE 1 FOR HEADING 5
         BAL   R14,HEADSUM             PRINT SUMMARY TO T80SUM DCB
         LA    R1,0                    ZERO EVENTS TABLE ENTRY NUMBER
         ST    R1,ADRENNUM
         L     R6,EVENTAB              POINT TO EVENTS TABLE
SUMCHECK L     R2,56(R6)               CHECK FOR COUNTER > 0
         LTR   R2,R2                   > 0 ?
         BNZ   DOMAJEN                 IF > 0 PRINT THE MAJOR/MINOR
SUMLOOP  LA    R6,64(R6)               OTHER WISE FIND NEXT MAJOR EVENT
         L     R1,ADRENNUM
         LA    R1,1(R1)                INCREMENT TABLE ENTRY COUNTER
         ST    R1,ADRENNUM             SAVE THE COUNTER
         CLI   0(R6),X'FF'             CHECK FOR END OF MAJOR TABLE
         BE    SUMMEND                 END OF TABLE G0 AWAY
         B     SUMCHECK                OTHERWISE GET NEXT MAJOR ENTRY
         SPACE 2
DOMAJEN  BAL   R14,MAJOR               PERFORM PRINT MAJOR/MINOR
         B     SUMLOOP                 AND GET NEXT ENTRY IF ANY
         SPACE 2
SUMSAVE  DC    F'0'                    SAVE AREA FOR SUMMARY BAL
SUMMEND  BAL   R14,STATISTX
         LM    2,14,SUMMSAVE           RESTORE REGISTERS
         BR    R14                     AND RETURN
         TITLE 'PRINT MAJOR SUMMARY ENTRY'
MAJOR    ST    R14,MAJSAVE             SAVE R14 FOR RETURN
         L     R7,LINECNT
         LH    R3,=H'55'
         CR    R7,R3
         BL    NOTNEWP
         BAL   R14,HEADSUM
NOTNEWP  LA    R7,2(R7)                MAJOR HEADING TAKES TWO LINES
         ST    R7,LINECNT
         L     R4,EVENTAB              POINT TO EVENTABLE
         L     R1,ADRENNUM
         LR    R2,R1                   ENTRY NUMBER IN R2
         MH    R2,=H'64'        EVENT TABLE TABLE DESCRIPTION
         AR    R4,R2
         MVI   LINE1,C'0'              SINGLE SPACE
         MVC   L1LABEL(46),4(R4)         MOVE EVENT LABEL TO PRINT LINE
*
* CONVERT AND MOVE COUNT INTO PRINT LINE
*
*
         L     R8,56(R4)               LOAD R6 WITH COUNT FIELD
         CVD   R8,DBLCOUNT             CONVERT TO DECIMAL
         MVC   DBLCOUNT-4(8),=X'4020202020202120' MASK FOR EDIT
         ED    DBLCOUNT-4(8),DBLCOUNT+4   CONVERT TO EBCDIC
         MVC   DATA+10(5),DBLCOUNT-1      MOVE IT INTO THE PRINT LINE
         BAL   R14,PRINTSUM            PRINT EVENT LINE
         L     R2,0(R4)                CHECK FOR ANY MINOR ENTRIES
         LTR   R2,R2
         BNZ   MINORENT                R2 > 0 MEANS WE HAVE MINOR ENTRY
         B     MAJORE                  NO MINOR/ BRANCH TO END MAJOR
MINORENT BAL   R14,MINOR               PERFORM PRINT ALL MINORS
MAJORE   L     R14,MAJSAVE             RESTORE R14
         BR    R14                     GO BACK
MAJSAVE  DC    F'0'                    SAVE AREA FOR R14
         TITLE 'PRINT MINOR SUMMARY ENTRY'
MINOR    ST    R14,SAVEMIN             SAVE R14 FOR RETURN
         LR    R3,R2                   R3 NOW CONTAINS MINOR TAB ADDR
         LA    R4,0                    POINT TO FIRST TABLE ENTRY
         MH    R4,=H'56'               CALCULATE RELATIVE TABLE ENTRY
         AR    R3,R4                   POINT TO  TABLE ENTRY
MINLOOP  MVI   LINE1,C' '              SPACE 1
         MVC   L1LABEL+10(46),0(R3)    MOVE INDENTED MINOR ENTRY DESC
* CONVERT AND MOVE COUNT INTO PRINT LINE
*
*
         L     R8,52(R3)               LOAD R6 WITH COUNT FIELD
         CVD   R8,DBLCOUNT             CONVERT TO DECIMAL
         MVC   DBLCOUNT-4(8),=X'4020202020202120' MASK FOR EDIT
         ED    DBLCOUNT-4(8),DBLCOUNT+4   CONVERT TO EBCDIC
         MVC   DATA(5),DBLCOUNT-1      MOVE IT INTO THE PRINT LINE
*
         BAL   R14,PRINTSUM            PRINT MINOR ENTRY
         L     R7,LINECNT
         LA    R7,1(R7)
         ST    R7,LINECNT
         LA    R3,56(R3)               CHECK FOR END OF TABLE
         CLI   0(R3),X'FF'             CHECK FOR END OF MINOR TABLE
         BNE   MINLOOP                 NOT END GO PRINT NEXT MINOR
MINTABE  L     R14,SAVEMIN             RESTORE R14 FOR RETURN
         BR    R14                     GO BACK
SAVEMIN  DC    F'0'
         DC    D'0'
DBLCOUNT DC    D'0'
         TITLE 'P50065 RACF AUDIT LISTING - SUMMARY REPORT HEADINGS '
SUMPAGE  DC    F'0'
HEADSUM  ST   R14,WORK
         PUT  RACFSUM,HEADING1
*        PAGECNTS GO HERE
         L    R2,SUMPAGE
         LA   R2,1(R2)
         ST   R2,SUMPAGE
         CVD  R2,DBL
         MVC  HEADPGNO-1(6),PAGEMASK
         ED   HEADPGNO-1(6),DBL+5
         PUT  RACFSUM,HEADING2
         PUT  RACFSUM,HEADING3
         PUT  RACFSUM,HEADING4
         PUT  RACFSUM,HEADING5
         LA   R7,7
         ST   R7,LINECNT
         L    R14,WORK
         BR   R14
PRINTSUM ST    R14,WORK
         PUT   RACFSUM,LINE1
         MVI   LINE1,C' '
         MVC   LINE1+1(132),LINE1
         L     R14,WORK
         BR    R14
*
*        CONSTANTS AND WORKAREAS
*
DBL3     DC   D'0'
SAVEAREA DC   18F'0'
WORK     DC   CL8' '
BIT      DC    X'00'
         DC   D'0'
         DC   CL16'**RECORDS*IN****'
RECIN    DC   F'0'
         DC   F'0'
         DC   CL16'**VIOLATIONS****'
VIOLA    DC   F'0'
         DC   F'0'
FILBLANK DC   52CL1' '
         SPACE 3
HEADING0 DS   0CL133
         DC   C'1'                  NEW PAGE
         DC   CL10' '
         DC   C'MILLER BREWING COMPANY'
         DC   CL68' '
         DC   C'END OF PROCESSING'
EHD0     EQU  *-HEADING0
         DC   CL(133-EHD0)' '
         SPACE 3
HEADING1 DS   0CL133
         DC   C'1'                  NEW PAGE
         DC   CL10' '
         DC   C'MILLER BREWING COMPANY'
         DC   CL61' '
         DC   C'RUN DATE : '
T80YR    DC   C'YY'
         DC   C'.'
T80DA    DC   C'DDD'
         DC   CL3' '
T80GDATE DC   CL13' '
EHD1     EQU  *-HEADING1
         DC   CL(133-EHD1)' '
         SPACE 3
HEADING2 DS   0CL133
         DC   C'0'
         DC   CL10' '
         DC   C'RACF SMF POST PROCESSOR'
         DC   CL60' '
         DC   C'RUN TIME : '
T80HR    DC   C'HH'
         DC   C'.'
T80MN    DC   C'MM'
         DC   C'.'
T80SC    DC   C'SS'
         DC   C' '
HEAD2PAG DC   C'PAGE  '
HEADPGNO DC   C'     '
EHD2     EQU  *-HEADING2
         DC   CL(133-EHD2)' '
         SPACE 3
HEADING3 DS   0CL133
         DC   C'0'
         DC   CL47' '
         DC   C'RACF PROCESSING RECORD AUDIT LIST'
EHD3     EQU  *-HEADING3
         DC   CL(133-EHD3)' '
         SPACE 3
HEADING4 DS   0CL133
         DC   C'0'                  SPACE TWO
         DC   CL10' '
         DC   C'VIOLATION AUDIT LIST'
EHD4     EQU  *-HEADING4
         DC   CL(L'HEADING4-EHD4)' '
         SPACE 3
HEADING5 DS   0CL133
         DC   C'0'
         DC   CL10' '
         DC   C'USER : '
USER     DC   CL8' '
         DC   C'  GROUP : '
GROUP    DC   CL8' '
         DC   C'DATE : '
SYR      DC   C'YY'
         DC   C'.'
SDA      DC   C'DDD'
         DC   C'  TIME : '
SHR      DC   C'HH'
         DC   C'.'
SMN      DC   C'MM'
         DC   C'.'
SSC      DC   C'SS'
         DC   C'  JOBNAME : '
JOBNAME  DC   CL8' '
EHD5     EQU  *-HEADING5
         DC   CL(L'HEADING5-EHD5)' '
         SPACE 3
LINE1    DS   0CL133
         DC   C' '
         DC   CL17' '
L1LABEL  DC   CL26' '
         DC   C' '
L1DATA   DC   CL50' '
ELD1     EQU  *-LINE1
         DC   CL(L'LINE1-ELD1)' '
         DC    CL50' '
         ORG   LINE1
LINE2    DS    0CL133
         DS    CL20
DESC     DS    CL50
         DS    CL5
DATA     DS    CL55
         ORG
         SPACE 3
         DS    0F
         TITLE 'P50065 RACF AUDIT LISTING - SUMMARY LINES '
SUMLIN1  DS   0CL133
         DC   C' '
         DC   CL17' '
         DC   C'SMF DSN PROCESSED: '
SUMDSN   DC   CL44' '
         DC   CL20' '
         DC   C'JOB NAME: '
SUMJOB   DC   CL8' '
SUMLIN1E EQU  *-SUMLIN1
         DC   CL(133-SUMLIN1E)' '
SUMLIN2  DS   0CL133
         DC   C' '
         DC   CL17' '
         DC   C'VOLUME           : '
SUMVOL   DC   CL6' '
         DC   CL58' '
         DC   C'USER  ID: '
SUMUID   DC   CL8' '
SUMLIN2E EQU  *-SUMLIN2
         DC   CL(133-SUMLIN2E)' '
SUMLIN3  DS   0CL133
         DC   C' '
         DC   CL17' '
         DC   C'SMF RECORDS READ                    : '
SUMSMF   DC   CL7' '
         DC   38C' '
         DC   C'GROUP ID: '
SUMGRP   DC   CL8' '
SUMLIN3E EQU  *-SUMLIN3
         DC   CL(133-SUMLIN3E)' '
SUMLIN4  DS   0CL133
         DC   C'0'
         DC   CL17' '
         DC   C'RACF    TYPE 80 RECORDS READ        : '
SUM80R   DC   CL7' '
SUMLIN4E EQU  *-SUMLIN4
         DC   CL(133-SUMLIN4E)' '
SUMLIN5  DS   0CL133
         DC   C' '
         DC   CL17' '
         DC   C'        TYPE 80 RECORDS PROCESSED   : '
SUM80P   DC   CL7' '
SUMLIN5E EQU  *-SUMLIN5
         DC   CL(133-SUMLIN5E)' '
SUMLIN6  DS   0CL133
         DC   C' '
         DC   CL17' '
         DC   C'        TYPE 80 VIOLATIONS READ     : '
SUM80VR  DC   CL7' '
SUMLIN6E EQU  *-SUMLIN6
         DC   CL(133-SUMLIN6E)' '
SUMLIN7  DS   0CL133
         DC   C' '
         DC   CL17' '
         DC   C'        TYPE 80 VIOLATIONS PROCESSED: '
SUM80VP  DC   CL7' '
SUMLIN7E EQU  *-SUMLIN7
         DC   CL(133-SUMLIN7E)' '
SUMLIN8  DS   0CL133
         DC   C' '
         DC   CL17' '
         DC   C'        TYPE 81 RECORDS READ        : '
SUM81R   DC   CL7' '
SUMLIN8E EQU  *-SUMLIN8
         DC   CL(133-SUMLIN8E)' '
SUMLIN9  DS   0CL133
         DC   C' '
         DC   CL17' '
         DC   C'        TYPE 81 RECORDS PROCESSED   : '
SUM81P   DC   CL7' '
SUMLIN9E EQU  *-SUMLIN9
         DC   CL(133-SUMLIN9E)' '
SUMLIN10 DS   0CL133
         DC   C' '
         DC   CL17' '
         DC   C'EARLIEST SMF DATE/TIME ON DATA SET  : '
SUM10DT  DC   CL17' '                  >YY.DDD   HH.MM.SS< (17)
SUMLN10E EQU  *-SUMLIN10
         DC   CL(133-SUMLN10E)' '
SUMLIN11 DS   0CL133
         DC   C' '
         DC   CL17' '
         DC   C'LATEST   SMF DATE/TIME ON DATA SET  : '
SUM11DT  DC   CL17' '                  >YY.DDD   HH.MM.SS< (17)
SUMLN11E EQU  *-SUMLIN11
         DC   CL(133-SUMLN11E)' '
SUMLIN12 DS   0CL133
         DC   C' '
         DC   CL17' '
         DC   C'CONTROL CARD OPTIONS REQUESTED : '
SUMLN12E EQU  *-SUMLIN12
         DC   CL(133-SUMLN12E)' '
SUMLIN13 DS   0CL133
         DC   C' '
         DC   CL21' '
SUMLN13T DC   CL50' '
SUMLN13E EQU  *-SUMLIN13
         DC   CL(133-SUMLN13E)' '
         TITLE 'P50065 RACF AUDIT LISTING - SUMMARY STATISTICS'
STATISTX STM   2,14,STATISAV
         B     STATS1
         DC    CL24'********STATISTX********'
STATISAV DC    18F'0'
STATPATX DC    32X'00'
MASK6    DC    X'402020202021'
STATS1   L     R2,CNTL3
         LA    R3,4
         CR    R2,R3
         BE    STATSEX
         BAL   R14,HEADSUM
         MVC   SUMJOB,INITJOB                 JOB NAME
         MVC   SUMDSN,INITDSN                 DATA SET NAME READ
         MVC   SUMVOL,INITVOL                 VOL SER OF SMF
         MVC   SUMUID,INITUSR                 USER ID
         MVC   SUMGRP,INITGRP                 GROUP ID
         L     R3,TOTSMF
         CVD   R3,DBL
         MVC   SUMSMF(6),MASK6
         ED    SUMSMF(6),DBL+5
         L     R3,TOT80                    TOTAL 80 RECORDS READ
         CVD   R3,DBL
         MVC   SUM80R(6),MASK6
         ED    SUM80R(6),DBL+5
         L     R3,TOT81                    TOTAL 81 RECORDS READ
         CVD   R3,DBL
         MVC   SUM81R(6),MASK6
         ED    SUM81R(6),DBL+5
         L     R3,PROC80R                  TYPE 80 RECORDS PROCESSED
         CVD   R3,DBL
         MVC   SUM80P(6),MASK6
         ED    SUM80P(6),DBL+5
         L     R3,TOT80VR                  TYPE 80 VIOLATIONS READ
         CVD   R3,DBL
         MVC   SUM80VR(6),MASK6
         ED    SUM80VR(6),DBL+5
         L     R3,TOT80VP                  TYPE 80 VIOLATIONS PROCESSED
         CVD   R3,DBL
         MVC   SUM80VP(6),MASK6
         ED    SUM80VP(6),DBL+5
         L     R3,PROC81R                  TYPE 81 RECORDS PROCESSED
         CVD   R3,DBL
         MVC   SUM81P(6),MASK6
         ED    SUM81P(6),DBL+5
         MVC   DATESMFX,LOWDAY
         MVC   TIMESMFX,LOWTIM
         BAL   R14,SMFDTCNV
         MVC   SUM10DT(6),DATESMFY
         MVC   SUM10DT+9(8),TIMESMFY
         MVC   DATESMFX,HIGHDAY
         MVC   TIMESMFX,HIGHTIM
         BAL   R14,SMFDTCNV
         MVC   SUM11DT(6),DATESMFY
         MVC   SUM11DT+9(8),TIMESMFY
         PUT   RACFSUM,SUMLIN1
         PUT   RACFSUM,SUMLIN2
         PUT   RACFSUM,SUMLIN3
         PUT   RACFSUM,SUMLIN10
         PUT   RACFSUM,SUMLIN11
         PUT   RACFSUM,SUMLIN4
         PUT   RACFSUM,SUMLIN5
         PUT   RACFSUM,SUMLIN6
         PUT   RACFSUM,SUMLIN7
         PUT   RACFSUM,SUMLIN8
         PUT   RACFSUM,SUMLIN9
         PUT   RACFSUM,SUMLIN12
         MVC   SUMLN13T+7(80),CNTLC
         MVC   SUMLN13T(7),=C'IMAGE=('
         MVC   SUMLN13T+87(1),=C')'
         MVI   SUMLIN13,C'0'
         BAL   R2,PUTL13
         MVC   SUMLN13T+7(30),=C'123456789*123456789*123456789*'
         MVC   SUMLN13T+37(30),=C'123456789*123456789*123456789*'
         BAL   R2,PUTL13
         L     R7,ADRTITL              PICK UP ADDRESS OF P50065C
         L     R7,40(R7)               PICK UP ADDRESS OF CTL TABLE
         LA    R8,CNTL0
STATL1   L     R2,4(R8) PICK UP CNTL VALUE
         LTR   R2,R2
         BNZ   STATL2                  CNTL > 0 THEREFORE PICK UP 2ND
         LA    R6,4(R7)                BUMP PAST COUNTER
STATLM   MVC   SUMLN13T(52),0(R6)      MOVE IN DESCRIPTION
         B     STATLR
STATL2   LA    R6,56(R7)               SKIP AROUND FIRST LABEL
         B     STATLM
STATLR   BAL   R2,PUTL13
         LA    R7,160(R7)
         LA    R8,4(R8)
         CLI   4(R8),X'FF'
         BE    STATSE
         B     STATL1
STATLDON EQU   *
STATSE   EQU   *
*
*        PRINT EVENTS MASK LINE
*
         MVC   SUMLN13T(13),=C'EVENTS MASK=('       PRINT EVENTS
         MVC   SUMLN13T+13(25),MSKEVENT
         MVI   SUMLN13T+38,C')'
         MVI   SUMLIN13,C'0'         DOUBLE SPACE
         BAL   R2,PUTL13
         MVC   SUMLN13T+13(25),=C'123456789*123456789*12345'
         MVC   SUMLN13T+45(35),=C'EVENT CODES TO BE SELECTED         '
         BAL   R2,PUTL13
*
         MVC   SUMLN13T(16),=C'QUALIFIER MASK=('    PRINT EVENTS
         MVC   SUMLN13T+16(6),MSKQUAL
         MVI   SUMLN13T+22,C')'
         MVI   SUMLIN13,C'0'         DOUBLE SPACE
         BAL   R2,PUTL13
         MVC   SUMLN13T+16(6),=C'012345'
         MVC   SUMLN13T+45(35),=C'EVENT QUALIFIERS TO BE SELECTED    '
         BAL   R2,PUTL13
*
*        PRINT AUTH MASK
*
         MVC   SUMLN13T(18),=C'AUTHORITIES MASK=(' PRINT AUTH MASK
         MVC   SUMLN13T+18(5),MSKAUTH
         MVI   SUMLN13T+23,C')'
         MVI   SUMLIN13,C'0'         DOUBLE SPACE
         BAL   R2,PUTL13
         MVC   SUMLN13T+18(5),=C'01234'
         MVC   SUMLN13T+45(36),=C'AUTHORITY  BITS IF ON TO BE BYPASSED'
         BAL   R2,PUTL13
*
*        PRINT LOG REASON MASK
*
         MVC   SUMLN13T(17),=C'LOG REASON MASK=('    PRINT LOG REASON
         MVC   SUMLN13T+17(8),MSKLOGR
         MVI   SUMLN13T+25,C')'
         MVI   SUMLIN13,C'0'         DOUBLE SPACE
         BAL   R2,PUTL13
         MVC   SUMLN13T+17(8),=C'01234567'
         MVC   SUMLN13T+45(36),=C'LOG REASON BITS IF ON TO BE BYPASSED'
         BAL   R2,PUTL13
*
*        PRINT USERID MASK
*
         MVC   SUMLN13T(14),=C'USER ID MASK=('       PRINT USERID MASK
         MVC   SUMLN13T+14(8),MSKUSR
         MVI   SUMLN13T+22,C')'
         MVI   SUMLIN13,C'0'         DOUBLE SPACE
         BAL   R2,PUTL13
         MVC   SUMLN13T+14(8),=C'12345678'
         BAL   R2,PUTL13
*
*        PRINT GROUPID MASK
*
         MVC   SUMLN13T(14),=C'GROUPID MASK=('     PRINT GROUPID MASK
         MVC   SUMLN13T+14(8),MSKGRP
         MVI   SUMLN13T+22,C')'
         MVI   SUMLIN13,C'0'         DOUBLE SPACE
         BAL   R2,PUTL13
         MVC   SUMLN13T+14(8),=C'12345678'
         BAL   R2,PUTL13
         MVI   SUMLIN13,C'0'       DOUBLE SPACE
         MVC   SUMLN13T(12),=C'ENTITY NAME('
         MVC   SUMLN13T+12(44),MSKENT
         MVI   SUMLN13T+56,C')'
         BAL   R2,PUTL13
STATSEX  LM    2,14,STATISAV           RESTORE REGISTERS
         BR    R14                     AND RETURN
         DS   0F
PUTL13   PUT   RACFSUM,SUMLIN13
         MVI   SUMLIN13,C' '
         MVC   SUMLIN13+1(132),SUMLIN13  BLANK OUT THE FIELD
         BR    R2
         TITLE 'P50065 RACF AUDIT LISTING - CLEANUP PROGRAM '
CLEANUP  STM   2,14,CLENSAVE
         B     CLEANUP1
CLENHEAD DC    CL24'********CLEANUP ********'
CLENSAVE DC    18F'0'
CLEANUP1 CLOSE (SMFIN,,T80PRT,,T81PRT,,RACFSUM,,WORKFILE,,CTLCARD)
CLENEND  LM    2,14,CLENSAVE           RESTORE REGISTERS
         BR    R14                     AND RETURN
         DS   0F
LABELS   DS   0CL26
LEVT     DC   CL26'EVENT CODE               :'
LEVQ     DC   CL26'QUALIFIER                :'
LATH     DC   CL26'SPECIAL AUTHORITIES USED :'
LREA     DC   CL26'REASON FOR LOGGING       :'
LERR     DC   CL26'COMMAND ERROR FLAG       :'
LVAR     DC   CL26'VARIABLE DATA:            '
LDATA    DC   CL26'NO RELOCATE DATA          '
         TITLE 'P50065 RACF AUDIT LISTING - MISC DSECTS '
*
*
*
*        CONSTANTS AND    WORKAREAS
*
T81DBL   DC   D'0'
T81WORK  DC   CL8' '
         SPACE 3
T81HEAD0 DS   0CL133
         DC   C'1'                  NEW PAGE
         DC   CL10' '
         DC   C'MILLER BREWING COMPANY'
         DC   CL68' '
         DC   C'END OF PROCESSING'
T81EHD0  EQU  *-T81HEAD0
         DC   CL(133-T81EHD0)' '
         SPACE 3
T81HEAD3 DS   0CL133
         DC   C'0'
         DC   CL49' '
         DC   C'RACF INITIALIZATION RECORD SUMMARY'
T81EHD3  EQU  *-T81HEAD3
         DC   CL(133-T81EHD3)' '
         SPACE 3
T81HED3A DS   0CL133
         DC   C'0'                  SPACE TWO
         DC   CL10' '
         DC   C'SMF: DATE='
T81JYR   DC   C'YY'
         DC   C'.'
T81JDAY  DC   C'DDD'
         DC   C'  TIME='
T81JHR   DC   C'HH'
         DC   C'.'
T81JMN   DC   C'MM'
         DC   C'.'
T81JSC   DC   C'SS'
         DC   C'  SYSTEM ID='
T81SID   DC   C'IDID'
T81EHD3A EQU  *-T81HED3A
         DC   CL(L'T81HED3A-T81EHD3A)' '
         SPACE 3
T81HEAD4 DS   0CL133
         DC   C'0'                  SPACE TWO
         DC   CL10' '
         DC   C'RACF: DSN='
T81SMFDS DC   CL44' '
         DC   C'  UADS: DSN='
T81UADSN DC   CL44' '
T81EHD4  EQU  *-T81HEAD4
         DC   CL(L'T81HEAD4-T81EHD4)' '
         SPACE 3
T81HEAD5 DS   0CL133
         DC   C' '
         DC   CL16' '
         DC   C'VOLUME ID='
T81VLSMF DC   CL6' '
         DC   CL5' '
         DC   C'UNIT NAME='
T81UNSMF DC   CL3' '
         DC   CL21' '
         DC   C'VOLUME ID='
T81VLUAD DC   CL6' '
         DC   CL5' '
T81EHD5  EQU  *-T81HEAD5
         DC   CL(L'T81HEAD5-T81EHD5)' '
         SPACE 3
T81HEAD6 DS   0CL133
         DC   C'0'                  SPACE TWO
         DC   CL10' '
         DC   C'RACF EXITS ACTIVE :'
T81EHD6  EQU  *-T81HEAD6
         DC   CL(L'T81HEAD6-T81EHD6)' '
         SPACE 3
T81HEAD7 DS   0CL133
         DC   C'0'                  SPACE TWO
         DC   CL10' '
         DC   C'STATISTICS BEING RECORDED :'
T81EHD7  EQU  *-T81HEAD7
         DC   CL(L'T81HEAD7-T81EHD7)' '
         SPACE 3
T81HEAD8 DS   0CL133
         DC   C'0'                  SPACE TWO
         DC   CL10' '
         DC   C'LOGGING OPTIONS ACTIVE :'
T81EHD8  EQU  *-T81HEAD8
         DC   CL(L'T81HEAD8-T81EHD8)' '
         SPACE 3
T81HEAD9 DS   0CL133
         DC   C'0'                  SPACE TWO
         DC   CL10' '
         DC   C'OTHER OPTIONS IN EFFECT :'
T81EHD9  EQU  *-T81HEAD9
         DC   CL(L'T81HEAD9-T81EHD9)' '
         SPACE 3
T81LINE  DS   0CL133
T81LSPAC DC   C'0'
         DC   CL15' '
T81LABEL DC   CL31' '
         DC   C' '
T81YES   DC   CL4' '
T81NO    DC   CL5' '
T81LINEE EQU  *-T81LINE
         DC   CL(L'T81LINE-T81LINEE)' '
         EJECT
T81Y     DC    CL4'YES '
T81N     DC    CL5'NO   '
         TITLE 'P50065 RACF AUDIT LISTING - DCBS,MISC '
         DS    F'0'
SMFIN    DCB   DSORG=PS,               SMF FILE INPUT                  X
               MACRF=GL,                                               X
               EXLST=INITXITL,                                         X
               EODAD=MAINEOF,                                          X
               DDNAME=SMFIN
         EJECT
         DS    F'0'
CTLCARD  DCB   DSORG=PS,               CONTROL CARD INPUT              X
               MACRF=GL,                                               X
               EODAD=READEOF,                                          X
               DDNAME=CONTROL
         EJECT
         DS    F'0'
T80PRT   DCB   DSORG=PS,               TYPE 80 LISTING                 X
               MACRF=PM,                                               X
               DDNAME=T80PRT
         EJECT
         DS    F'0'
T81PRT   DCB   DSORG=PS,               TYPE 81 LISTING                 X
               MACRF=PM,                                               X
               DDNAME=T81PRT
         EJECT
         DS    F'0'
RACFSUM  DCB   DSORG=PS,               SUMMARY LISTING                 X
               MACRF=PM,                                               X
               DDNAME=SUMMARY
         EJECT
         DS    F'0'
WORKFILE DCB   DSORG=PS,               PASSED WORK FILE                X
               MACRF=PM,                                               X
               DDNAME=WORK
         TITLE 'P50065 RACF AUDIT LISTING - SMF TYPE 80,81 DSECTS '
T80SMF   DSECT
         IFASMFR9 80
         EJECT
T81SMF   DSECT
         IFASMFR9 81
WRKDSECT DSECT                         TEMPORARY WORK FILE
         DS    0F
WRKLENG  DS    0CL100                       100 BYTES LONG
WRKDSN   DS    CL44                    DATA SET NAME
WRKVOL   DS    CL6                     VOLUME SERIAL
WRKEVT   DS    BL1                     EVENT TYPE
WRKQLF   DS    BL1                     EVENT TYPE QUALIFIER
WRKACCRQ DS    CL8                     ACCESS REQUESTED
WRKACCAL DS    CL8                     ACCESS ALLOWED
WRKUSER  DS    CL8                     USER ID
WRKGRP   DS    CL8                     GROUP NAME
WRKDATE  DS    PL4                     DATE FROM SMF
WRKTIME  DS    BL4                     TIME FROM SMF
WRKJOB   DS    CL8                     JOB NAME
         EJECT
CTLDSECT DSECT                         CONTROL CARD
CTL0     DS    0CL80                      80 BYTES LONG
CTL1     DS    CL1
CTL2     DS    CL1
CTL3     DS    CL1
CTL4     DS    CL1
CTL5     DS    CL1
CTL6     DS    CL1
CTL7     DS    CL1
CTL8     DS    CL1
CTL9     DS    CL1
CTL9A    DS    CL1
CTL10    DS    CL1
CTL11    DS    CL1
CTL12    DS    CL1
         DS    CL7
CTL20    DS    CL5                     SDAY=
CTL20V   DS    CL5                          YYDDD
         DS    CL1
CTL21    DS    CL5                     EDAY=
CTL21V   DS    CL5                          YYDDD
         DS    CL1
CTL22    DS    CL5                     STIM=
CTL22V   DS    CL5                          HH.MM
         DS    CL1
CTL23    DS    CL5                     ETIM=
CTL23V   DS    CL5                          HH.MM
         DS    CL20                         NN
P50065   CSECT
PATCHX   DC    64F'0'
         LTORG
         END
