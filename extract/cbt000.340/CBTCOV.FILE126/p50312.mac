*          DATA SET P50312     AT LEVEL 003 AS OF 08/12/81
*          DATA SET P50312     AT LEVEL 002 AS OF 07/17/81
P50312   $PROLOG R12,R7
***********************************************************************
*                                                                     *
*  PROGRAM: P50312                                                    *
*  AUTHOR:  R. A. CLAUER                                              *
*  DATE:    JUNE 1981                                                 *
*  PURPOSE: THIS PROGRAM GENERATES A REPORT SHOWING THE ACCESS LISTS  *
*           FOR ALL RACF PROTECTED DATASETS. THE REPORT IS IN GROUP,  *
*           OWNER, DATASET SEQUENCE.                                  *
*                                                                     *
*  CHANGE LOG:                                                        *
*  JULY 1981 -  MINOR PAGE CHANGES WERE MADE AND LOGIC WAS ADDED TO   *
*               DISPLAY THE FOLLOWING FLAGS                           *
*               ? - THE VOUME WHICH THE DATASET IS ON IS NOT MOUNTED  *
*               * - NO DSCB WAS FOUND FOR THE DATASET                 *
*               # - THE DSCB WAS FOUND BUT NOT FLAGGED AS PROTECTED   *
*               T - THE DATASET IS A TAPE. CURRENTLY THERE IS NO LOGIC*
*                   TO CHECK IF THE TAPE IS FLAGGED AS PROTECTED IN   *
*                   THE TMC                                           *
*               V - THE DATASET IS A VSAM DATASET. CURRENTLY THERE IS *
*                   NO LOGIC TO DETERMINE IF THE DATASET ACTUALLY     *
*                   EXITSTS AND IF IT IS FLAGGED AS RACF PROTECTED    *
*                                                                     *
***********************************************************************
         TIME
         ST    R1,JULDATE          STORE JULIAN DATE
         CALL P50215,(JULDATE,GREGDATE)  CALL SUBROUTINE TO CONVERT
         MVC   HD1DAT,GREGDATE           TO GREGORIAN DATE
         LA    R1,=C'AUTH'         MAKE PROGRAM AUTHORIZED
         SVC   231
         OPEN  (REPORT,(OUTPUT))
         LA    R1,SORTPARM
         LINK  EP=SORT             LINK TO SORT
         CLOSE (REPORT)
         $EPILOG
         EJECT
INEXIT   EQU   *
***********************************************************************
*                                                                     *
*  THIS ROUTINE RUNS AS AN E15 EXIT TO THE SORT. IT READS THE RACF    *
*  DATA SET USING THE RACF MANAGER SVCS AND BUILDS A SORT RECORD WHICH*
*  IS THEN PASSED TO THE SORT.                                        *
*                                                                     *
***********************************************************************
         USING INEXIT,R12          ESTABLISH BASE
         DROP  R7
         STM   R14,R12,12(R13)     STORE REGS
         LR    R12,R15             AND
         LA    R2,EXSAVE             ESTABLISH
         ST    R2,8(R13)                      LINKAGE
         ST    R13,EXSAVE+4
         LR    R13,R2
         LA    R7,2048(R12)        ESTABLISH SECOND BASE
         LA    R7,2048(R7)
         USING INEXIT+4096,R7
INEX005  LH    R5,REMUSER          GET NUMBER OF USERS LEFT IN PROFILE
         LTR   R5,R5               ARE THERE ANY?
         BNZ   INEX045             YES, THEN NO NEED FOR ANOTHER
         BAL   R14,STC001          GO CHECK FOR WORKAREA
         CH    R15,=H'12'          CHECK FOR NO MORE IN CLASS
         BE    INEX060             STILL SOME MORE
INEX020  L     R8,STORADDR         GET ADDR OF WORKAREA
         ICHEINTY MF=(E,LOCNXT),WKAREA=(R8)   GET RESOURCE
         LTR   R15,R15             CHECK RETURN CODE
         BZ    INEX030             IF GOOD, CONTINUE
         ABEND 1,DUMP              ANYTHING ELSE, ABEND
INEX030  EQU   *
         MVC   VOLWRK,VOLUME       CHECK IF VOLUME IS NUMERIC
         PACK  DBLWD(4),VOLWRK     PACK IT
         UNPK  VOLWRK,DBLWD(4)     AND UNPACK IT
         OI    VOLWRK+5,X'F0'      FIX SIGN
         MVI   SRTFLAG,C'T'        SET FLAG TO TAPE
         CLC   VOLWRK,VOLUME       IS IT NUMERIC
         BE    INEXA99             YES--
         MVI   SRTFLAG,C'V'        SET FLAG TO VSAM
         TM    DSTYPE,X'80'        CHECK TYPE
         BO    INEXA99             MUST BE VSAM--
         MVI   SRTFLAG,C' '
         CLC   VOLUME,=C'MODEL '   IS IT A MODEL PROFILE
         BE    INEXA99             YES, THEN OKAY
         MVI   SRTFLAG,C'?'       SET FLAG TO VOLUME NOT MOUNTED
         MVI   DSN,C' '            BLANK OUT DSN
         MVC   DSN+1(43),DSN
         SR    R1,R1               CLEAR R1
         IC    R1,ENTADDR          GET LENGTH OF CURRENT DSN
         BCTR  R1,0                REDUCE FOR EXECUTE
         EX    R1,MOVEDSN          MOVE IT
         OBTAIN VTOC               GO TRY AND GET DSCB
         LTR   R15,R15             WAS IT GOOD?
         BZ    INEXA10             YES, THEN CHECK PROTECT BIT
         CH    R15,=H'4'           CHECK FOR VOLUME NOT MOUNTED
         BE    INEXA99
         MVI   SRTFLAG,C'*'       SET FLAG TO NO DSCB FOUND
         CH    R15,=H'8'
         BE    INEXA99
         ABEND 10,DUMP             OTHERWISE, SAY BYE--
INEXA10  TM    DSCB+49,X'40'       CHECK PROTECT BIT
         MVI   SRTFLAG,C' '        SET OK FLAG
         BO    INEXA99
         MVI   SRTFLAG,C'#'        SET DSCB NOT PROTECTED FLAG
INEXA99  XR    R4,R4               CLEAR REG
         IC    R4,ENTADDR          GET LENGTH OF CURRENT ENTITY
         BCTR  R4,0
         MVC   SRTRES,=CL44' '     CLEAR IT IN SORT RECORD
         EX    R4,MOVETH           MOVE IT
         LA    R5,X'1C'(R8)        GET POINTER TO OWNER FIELD
         MVC   SRTOWN,2(R5)        MOVE INTO SORT RECORD
         LA    R5,10(R5)           PTR TO NUM OF USERS
         MVC   LOCUSR+1(8),SRTOWN  MOVE IN OWNER FOR LOCATE
         ICHEINTY LOCATE,TYPE='USR',ENTRY=LOCUSR,                      X
               WKAREA=WORK,ACTIONS=(ACT7,ACT8)
         MVC   SRTGRP,=C'????????'
         MVC   SRTNAME,=CL20'????????'
         C     R15,=F'0'           CHECK RETURN CODE
         BNE   INEX032             IF BAD, THEN DEFAULT GROUP NOT FOUND
         MVC   SRTGRP,WORK+X'1E'   MOVE IN GROUP
         MVC   SRTNAME,WORK+X'28'  MOVE IN OWNER'S NAME
INEX032  EQU   *
         MVC   REMUSER,2(R5)       STORE NUM OF USERS FOR LATER
         LA    R5,4(R5)            PT TO UACC
         MVC   SRTACC,2(R5)        MOVE IN UACC
         MVC   SRTUSER,=CL4' '     BLANK OUT USER
         LA    R5,5(R5)            PT TO ACCESS LIST
         ST    R5,WRKPTR           STORE FOR LATER USE
         B     INEX050
INEX045  BCTR  R5,0                REDUCE NUMBER OF REMAINING USERS
         STH   R5,REMUSER          AND STORE IT
         L     R5,WRKPTR           GET PTR TO NEXT USER
         MVC   SRTUSER(4),0(R5)    MOVE IN USER
         MVC   SRTACC,8(R5)        MOVE IN ACCESS
         LA    R5,9(R5)            ADVANCE PAST USER
         ST    R5,WRKPTR           AND STORE IT IN WORK POINTER
INEX050  LA    R15,12              INDICATE, I WANT TO COME BACK
         LA    R1,SORTREC          TELL SORT WHERE DATA IS
         B     INEX099             AND LET HIM GO TO IT
INEX060  LA    R15,8               INDICATE, I DON'T WANT TO COME BACK
         XR    R1,R1               NO DATA THIS TIME
INEX099  L     R6,CT
         LA    R6,1(R6)
         ST    R6,CT
         L     R13,EXSAVE+4        GET PREVIOUS SAVE AREA
         L     R14,12(R13)         RESTORE
         L     R0,20(R13)                 ALL
         LM    R2,R12,28(R13)                PERTINENT REGS
         BR    R14                 AND RETURN TO SORT
MOVETH   MVC   SRTRES(0),ENTADDR+1
CT       DC    F'0'
         SPACE 5
STC001   EQU   *
         ICHEINTY NEXTC,TYPE='DS',ENTRY=ENTADDR,                       X
               WKAREA=DSWORK,ACTIONS=(ACT3,ACT9,ACTA)
         CH    R15,=H'12'          CHECK FOR END OF CLASS
         BER   R14                 YES, RETURN
         LTR   R15,R15             CHECK FOR ZERO
         BZ    STC002              OK, THEN CONTINUE
         ABEND 3,DUMP              NO, THEN STOP HERE
STC002   LA    R9,DSWORK+X'1C'     GET INTO WORK AREA
         LA    R9,2(R9)            GET PAST LENGTH
         MVC   DSTYPE,12(R9)       MOVE IN TYPE (VSAM OR NON-VSAM)
         MVC   VOLUME,4(R9)        MOVE VOLUME OUT OF WORK AREA
         MVC   SRTVOL,VOLUME
         LH    R9,0(R9)            GET NUMBER OF USERS
         LA    R11,X'30'          NUMBER OF BYTES OF OTHER STUFF
         LA    R11,0(R9,R11)       MULTIPLY NUM OF USERS BY 9
         SLL   R9,3                   TO GET THE NUMBER OF BYTES
         LA    R11,0(R9,R11)          FOR TOTAL WORKAREA
         C     R11,STORLEN         CHECK TO SEE IF WE HAVE ENOUGH
         BNHR  R14                 YES, THEN RETURN
         LR    R9,R14              PRESERVE R14
         ICM   R0,15,STORLEN
         BZ    STC003              NOTHING TO FREE
         FREEMAIN RC,LV=(0),A=STORADDR  FREE OLD STUFF
STC003   LA    R11,0(R11)          PURIFY HIGH ORDER BYTE
         LR    R0,R11              STUFF IT IN R0 FOR GETMAIN
         GETMAIN R,LV=(0)          AND GET SOME STORAGE
         ST    R11,STORLEN         STORE LENGTH
         LR    R14,R9              RESTORE R14
         ST    R1,STORADDR         STORE ADDR
         ST    R11,0(R1)           SET UP WORK AREA
         BR    R14
MOVEDSN  MVC   DSN(0),ENTDSN
STORADDR DC    F'0'
STORLEN  DC    F'0'
         DROP  R7
         EJECT
OUTEXIT  EQU   *
***********************************************************************
*                                                                     *
*  THIS ROUTINE RUNS AS AN E35 EXIT TO THE SORT. IT RETURNS RECORDS   *
*  FROM THE SORT AND GENERATES A REPORT                               *
*                                                                     *
***********************************************************************
         USING  OUTEXIT,R12
         STM   R14,R12,12(R13)     STORE REGS
         LR    R12,R15             ESTABLISH NEW BASE
         LA    R2,EXSAVE           GET ADDR OF SAVE AREA
         ST    R2,8(R13)           CHAIN FORWARD
         ST    R13,EXSAVE+4        CHAIN BACK
         LR    R13,R2              SET UP NEW SAVE
         L     R8,0(R1)            GET ADDR OF RECORD
         LTR   R8,R8               IS THERE ANY ? ? ?
         BZ    OUTEX099            NO, THEN WE'RE DONE
         USING SORTREC,R8          ESTABLISH ADDRESSIBILITY
         CLC   SRTGRP,PRGRP        CHECK FOR CHANGE IN GROUPS
         BE    OUTEX005            NO, CONTINUE
         CLC   PRGRP,=CL8' '       IS IT THE FIRST ONE?
         BE    OUTEX003            YES, THEN BYPASS SIGNATURE BLOCK
         BAL   R10,SIGBLK          OTHERWISE PRINT
OUTEX003 MVC   PAGECT,=H'0'        RESET PAGE COUNT
         MVC   DTCON,=CL23' '
         MVC   PRGRP,SRTGRP        ESTABLISH NEW GROUP
         ICHEINTY LOCATE,TYPE='GRP',ENTRY=LOCGRP,WKAREA=WORK,          X
               ACTIONS=ACT1
         MVC   HD3NAME,=CL20'????????' SET DEFAULT
         LTR   R15,R15             CHECK RETURN
         BNZ   OUTEX004            NO GOOD, THEN CONTINUE
         MVC   LOCUSR+1(8),WORK+X'1E' NEXT, FIND THE PGMR NAME OF THE
*                                  GROUP'S OWNER
         ICHEINTY LOCATE,TYPE='USR',ENTRY=LOCUSR,WKAREA=WORK,          X
               ACTIONS=ACT8
         LTR   R15,R15             WAS IT FOUND?
         BNZ   OUTEX004            NO, THEN CONTINUE
         MVC   HD3NAME,WORK+X'1E'  YES, MOVE IN PGMR NAME
OUTEX004 MVC   PROWN,SRTOWN        AND OWNER
         MVC   PRNAME,SRTNAME      AND NAME
         BAL   R14,HEAD010         GO DO HEADINGS
OUTEX005 CLC   SRTOWN,PROWN        DID OWNER CHANGE ? ?
         BE    OUTEX010            NO--
         MVC   PROWN,SRTOWN        YES, THEN RESET PROWN
         MVC   PRNAME,SRTNAME      AND NAME
         MVC   DTCON,=CL23' '
         BAL   R14,HEAD010         AND GO PRINT HEADINGS
OUTEX010 LH    R10,LINECT          CHECK IF NEW PAGE NEEDED
         C     R10,=F'55'
         BL    OUTEX015
         MVC   DTCON,=CL23'(CONTINUED)'
         BAL   R14,HEAD010
OUTEX015 CLC   SRTRES(50),PRRES        CHECK FOR CHANGE IN NAME
         BE    OUTEX020            NO CHANGE
         MVC   PRRES,SRTRES        IF CHG, THEN REINITIALIZE
         MVC   DTDSN,SRTRES        SET UP DETAIL LINE
         MVC   DTVOL,SRTVOL
         MVC   DTFLAG,SRTFLAG
         PUT   REPORT,DTLN1
         MVC   DTCON,=CL23' '
         LH    R10,LINECT          INCREMENT
         LA    R10,3(R10)                LINE
         STH   R10,LINECT                    COUNT
         MVI   DTLN3,X'F0'         SET CARRIAGE CONTROL FOR DOUBLE SP
         CLC   SRTUSER,=C'    '    CHECK FOR FIRST FOR DSN
         BNE   OUTEX020            NO, THEN MUST BE VALID DSN
         BAL   R14,TRANACC         YES, MUST BE UACC
         MVC   DT2UACC,ACCESS
         PUT   REPORT,DTLN2
         LH    R10,LINECT          INCREMENT
         LA    R10,1(R10)                LINE
         STH   R10,LINECT                    COUNT
         B     OUTEX090
OUTEX020 MVC   DTUSER,SRTUSER      MOVE IN USER
         BAL   R14,TRANACC         TRANSLATE ACCESS BYTE
         MVC   DT3ACC,ACCESS       MOVE IT IN FOR PRINTING
         MVC   LOCUSR+1(8),SRTUSER PREPARE TO GET PROGRAMMER NAME
         ICHEINTY LOCATE,TYPE='USR',ENTRY=LOCUSR,                      X
               WKAREA=WORK,ACTIONS=ACT8
         MVC   DTNAME,=CL20'????????'
         C     R15,=F'12'          CHECK FOR NOT FOUND
         BE    OUTEX025            YES, THEN GO MIGHT BE A GROUP
         C     R15,=F'0'           WAS IT GOOD?
         BNE   OUTEX030            NO, THEN SOME OTHER ERROR
         MVC   DTNAME,WORK+X'1E'   MOVE IN PGMR NAME
         B     OUTEX030
OUTEX025 ICHEINTY LOCATE,TYPE='GRP',ENTRY=LOCUSR,WKAREA=WORK,          X
               ACTIONS=ACT1
         LTR   R15,R15             CHECK RETURN
         BNZ   OUTEX030            NO GOOD, THEN CONTINUE
         MVC   LOCUSR+1(8),WORK+X'1E' NEXT, FIND THE PGMR NAME OF THE
*                                  GROUP'S OWNER
         ICHEINTY LOCATE,TYPE='USR',ENTRY=LOCUSR,WKAREA=WORK,          X
               ACTIONS=ACT8
         LTR   R15,R15             WAS IT FOUND?
         BNZ   OUTEX030            NO, THEN CONTINUE
         MVC   DTNAME,WORK+X'1E'  YES, MOVE IN PGMR NAME
OUTEX030 PUT   REPORT,DTLN3
         MVI   DTLN3,C' '
OUTEX090 LH    R10,LINECT          CHECK LINECOUNT
         LA    R10,1(R10)          INCREMENT
         STH   R10,LINECT
OUTEX095 L     R15,4               SET UP FOR ANOTHER
         B     OUTEX900
OUTEX099 PUT   REPORT,HDG6
         MVI   FIRSTSW,X'00'
         BAL   R10,SIGBLK          FINISHED
         L     R15,8
OUTEX900 L     R13,EXSAVE+4        RESTORE
         L     R14,12(R13)                ALL
         L     R0,20(R13)                    REGS
         LM    R2,R12,28(R13)
         BR    R14
*
         SPACE 5
TRANACC  TM    SRTACC,X'80'        CHECK ACCESS CODES
         BNO   TRAC01
         MVC   ACCESS,=C'ALTER  '
         BR    R14
TRAC01   TM    SRTACC,X'40'        CHECK ACCESS CODES
         BNO   TRAC02
         MVC   ACCESS,=C'CONTROL'
         BR    R14
TRAC02   TM    SRTACC,X'20'        CHECK ACCESS CODES
         BNO   TRAC03
         MVC   ACCESS,=C'UPDATE '
         BR    R14
TRAC03   TM    SRTACC,X'10'        CHECK ACCESS CODES
         BNO   TRAC04
         MVC   ACCESS,=C'READ   '
         BR    R14
TRAC04   MVC   ACCESS,=C'NONE   '
         BR    R14
*
         SPACE  5
SIGBLK   ST    R10,SIGADDR
         LH    R14,LINECT          GET CURRENT LINE COUNT
         LA    R14,7(R14)          ADD AMOUNT OF SIGNATURE BLK
         C     R14,=F'50'          SEE IF IT WILL FIT ON THE PAGE
         BL    SIG001              YES, THEN CONTINUE
         BAL   R14,HEAD010         NO, THEN PRINT HEADINGS FIRST
SIG001   LH    R15,LINECT
         LA    R10,51
         SR    R10,R15
SIG002   PUT   REPORT,BLANKLN
         BCT   R10,SIG002
         MVI   SIGHD1,C'0'
         PUT   REPORT,SIGHD1
         MVC   SIGOWN,HD3NAME
         PUT   REPORT,SIGHD2
         PUT   REPORT,SIGHD1
         PUT   REPORT,SIGHD3
         L     R10,SIGADDR
         BR    R10
SIGADDR  DS    A
         SPACE  5
HEAD010  EQU   *
         ST    R14,RETADDR
         TM    FIRSTSW,X'01'
         BZ    HEAD020
         PUT   REPORT,HDG6
HEAD020  OI    FIRSTSW,X'01'
         LH    R10,PAGECT          GET PAGE COUNT
         LA    R10,1(R10)          ADD 1
         CVD   R10,DBLWD           CONVERT TO DECIMAL
         UNPK  HD1PG,DBLWD+6(2)    UNPACK
         OI    HD1PG+2,X'F0'       FIX UP SIGN
         STH   R10,PAGECT          STORE UPDATED PAGE COUNT
         PUT   REPORT,HDG1
         PUT   REPORT,HDG5
         PUT   REPORT,HDG2
         MVC   HD3GRP,PRGRP
         PUT   REPORT,HDG3
         MVC   HD4USER,PROWN
         MVC   HD4NAME,PRNAME
         PUT   REPORT,HDG4
         PUT   REPORT,BLANKLN
         MVC   LINECT,=H'8'        RESET LINECOUNT
         XC    PRRES,PRRES         AND RESOURCE
         L     R14,RETADDR
         BR    R14
         DROP  R8
         EJECT
*  MISCELLANEOUS FIELDS
JULDATE  DS    F
GREGDATE DS    3F
RETADDR  DS    F
PAGECT   DC    H'0'
LINECT   DC    H'0'
EXSAVE   DS    18F
WRKPTR   DS    F
REMUSER  DS    H
LOCGRP   DC    X'04'
PRGRP    DC    CL8' '
PROWN    DC    CL8' '
PRNAME   DC    CL20' '
PRRES    DC    CL50' '
ACCESS   DC    CL7' '
DBLWD    DS    D
VOLWRK   DS    CL6
FIRSTSW  DC    X'00'
VTOC     CAMLST SEARCH,DSN,VOLUME,DSCB
DSCB     DS    CL140
REPORT   DCB   DDNAME=REPORT,MACRF=PM,DSORG=PS,                        X
               RECFM=FBA,LRECL=80,BLKSIZE=4000
         SPACE 5
*  RACF MACROS
ACT1     ICHEACTN FIELD=OWNER
ACT3     ICHEACTN FIELD=ACLCNT
ACT4     ICHEACTN FIELD=UACC
ACT6     ICHEACTN FIELD=ACL1
ACT7     ICHEACTN FIELD=DFLTGRP
ACT8     ICHEACTN FIELD=PGMRNAME
ACT9     ICHEACTN FIELD=VOLUME
ACTA     ICHEACTN FIELD=DSTYPE
LOCNXT   ICHEINTY LOCATE,TYPE='DS',                                    X
               ENTRY=ENTADDR,WKAREA=WORK,VOLUME=VOLUME,                X
               ACTIONS=(ACT1,ACT3,ACT4,ACT6),MF=L
ENTADDR  DC    X'2C'
ENTDSN   DC    CL44' '
ENCLASS  DC    CL8' '
         DS    0F
WORK     DC    F'62'
         DS    CL58
DSWORK   DC    F'100'
         DS    CL96
LOCUSR   DC    X'04'
         DC    CL8' '
VOLUME   DC    CL6' '
DSTYPE   DC    C' '
DSN      DC    CL44' '
         SPACE 5
*  HEADINGS
HDG1     EQU   *
         DC    CL2'1'
HD1DAT   DC    CL12' '
         DC    CL16' '
         DC    CL40'MILLER BREWING COMPANY'
         DC    CL5'PAGE'
HD1PG    DC    CL3' '
HDG2     DC    CL24'  P50312'
         DC    CL56'DATA SECURITY OWNERSHIP REPORT'
HDG3     DC    CL32'0'
         DC    CL7'GROUP'
HD3GRP   DC    CL4' '
         DC    C' '
HD3NAME  DC    CL20' '
         DC    CL16' '
HDG4     DC    CL32' '
         DC    CL7'USER'
HD4USER  DC    CL4' '
         DC    C' '
HD4NAME  DC    CL20' '
         DC    CL16' '
HDG5     DC    CL37' '
         DC    CL63'MIS'
HDG6     DC    CL80'0? - NOT MOUNTED  T - TAPE  V - VSAM  * - NO DSCB  X
               # - DSCB NOT FLAGGED'
BLANKLN  DC    CL100' '
SIGHD1   DC    CL20' '
         DC    24C'-'
         DC    66C' '
SIGHD2   DC    CL20' '
SIGOWN   DC    CL20' '
         DC    CL60' '
SIGHD3   DC    CL20'0'
SIGDATE  DC    CL12'DATE'
         DC    CL68' '
*
*  DETAIL LINES
DTLN1    DC    CL2'0'
DTFLAG   DC    C' '
         DC    C'  '
DTDSN    DC    CL44' '
         DC    CL2' '
DTVOL    DC    CL6' '
         DC    CL2' '
DTCON    DC    CL23' '
DTLN2    DC    CL10'0'
         DC    CL19'UNIVERSAL ACCESS -'
DT2UACC  DC    CL7' '
         DC    CL44' '
DTLN3    DC    CL10' '
DTUSER   DC    CL4' '
         DC    CL3' -'
DTNAME   DC    CL20' '
         DC    CL4'  -'
DT3ACC   DC    CL7' '
         DC    CL32' '
*   SORT FIELDS
         CNOP  0,4
SORTPARM DC    X'80'
         DC    AL3(PARMLIST)
         DC    X'0000'
PARMLIST DC    X'0018'
         DC    A(SORTCARD)
         DC    A(SORTEND)
         DC    A(RECCARD)
         DC    A(RECEND)
         DC    A(INEXIT)
         DC    A(OUTEXIT)
SORTCARD DC    C' SORT FIELDS=(1,70,CH,A)'
SORTEND  DC    C' '
RECCARD  DC    C' RECORD LENGTH=92,TYPE=F'
RECEND   DC    C' '
*
         LTORG
SORTREC  DS    0D
SRTGRP   DS    CL8
SRTOWN   DS    CL8
SRTRES   DS    CL44
SRTVOL   DS    CL6
SRTUSER  DS    CL4
SRTACC   DS    CL1
SRTNAME  DS    CL20
SRTFLAG  DS    C
SRTLEN   EQU   *-SORTREC
         END
