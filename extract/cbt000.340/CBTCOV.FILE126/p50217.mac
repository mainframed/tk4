*          DATA SET P50217     AT LEVEL 001 AS OF 12/01/80
         MACRO
         CSECTNM
         DC    C'&SYSECT'    CSECT NAME
         MEND
         MACRO
         RACFWTO
         TS    *+1            FOR ONE TIME OPERATION (MLPA ONLY)
         BNZ   RACF&SYSNDX    SKIP WTO AFTER FIRST EXECUTION
         TIME
         ST    1,FULL&SYSNDX
         ED    EDIT&SYSNDX,FULL&SYSNDX+1
         MVC   W&SYSNDX+8(5),EDIT&SYSNDX+1
         WTO '******************************************************', X
               ROUTCDE=(9)
W&SYSNDX WTO '      &SYSECT ACTIVE - LAST COMPILE &SYSDATE &SYSTIME',  X
               ROUTCDE=(9)
         WTO '******************************************************', X
               ROUTCDE=(9)
         B     RACF&SYSNDX
FULL&SYSNDX DC F'0'
EDIT&SYSNDX DC X'402020202020'
         CNOP  0,4
RACF&SYSNDX EQU *
         MEND
********************************************************************
*                                                                  *
*   NAME:  RACDEF  PRE-PROCESSING EXIT                             *
*                                                                  *
*   PURPOSE: THIS EXIT WILL PREVENT ANYONE FROM DOING A RACDEF IN  *
*            THE TAPEVOL CLASS. IT ALSO INCLUDES MODELING SUUPORT  *
*            FOR RESOURCES IN THE DATASET CLASS. THE MODELLING     *
*            SUPPORT WORKS AS FOLLOWS:                             *
*             A) IF A MODEL IS SPECIFIED, ON THE RACDEF, IT IS     *
*                PASSED UNALTERED AND RACDEF IS ALLOWED TO PROCEED.*
*                IF A MODEL IS SPECIFIED, IT MUST BE DEFINED OR THE*
*                RACDEF WILL FAIL.                                 *
*             B) IF NO MODEL IS SPECIFIED ON THE RACDEF, THE ENTITY*
*                IS CHECKED TO SEE IF IT IS IN THE FORM OF A GDG   *
*                (IE. THE LAST INDEX LEVEL IS IN THE FORM GXXXXVXX)*
*                IF IT IS, THE BASE NAME IS USED TO FILL IN THE    *
*                MODEL NAME. IF IT IS NOT A GDG, THE FULL DATASET  *
*                NAME IS USED TO FILL IN THE MODEL NAME. IN EITHER *
*                CASE A MODEL VOLUME OF 'MODEL ' IS FILLED IN AND  *
*                A BIT IS TURNED ON WHICH PREVENTS THE RACDEF FROM *
*                FAILING IF THE MODEL RESOURCE IS NOT DEFINED.     *
*            IF THE CLASS IS NOT DATASET, THE RACDEF IS PASSED     *
*            THROUGH UNALTERED                                     *
*                                                                  *
*                                                                  *
*           THIS IS MODULE P50217 ON PANVALET.                     *
*                                                                  *
*                                                                  *
*                                                                  *
********************************************************************
         EJECT
ICHRDX01 CSECT
 TITLE 'RACDEF PREPROCESSING EXIT  &SYSTIME  &SYSDATE'
********************************************************************
*        SET UP SAVE AREA AND SAVE CALLER'S REGISTERS
********************************************************************
         PRIME LV=WORKSIZE
         LR    R2,R1          SAVE PARAMETER LIST
         USING SAVEAREA,R13
         REGISTER
         RACFWTO
         B     START          BRANCH AROUND ID
         CSECTNM
         DC    C'&SYSDATE'
         DC    C'&SYSTIME'
         EJECT
         CNOP  0,4
START    EQU   *
*
*        RC FOR RACDEF
*
*              00 = NORMAL SVC PROCESSING IS TO CONTINUE.
*              04 = REQUEST IS TO BE FAILED.
*              08 = REQUEST IS ACCEPTED - NO MORE SVC PROCESSING.
*              0C = REQUEST IS GRANTED - SVC PROCESSING CONTINUES
*                   BUT AUTHORIZATION CHECKING IS BYPASSED.
*
         LA    R10,0               SET DEFAULT RETURN CODE
         MVC   WTO(RACFMSG-WTOC),WTOC MOVE MODEL MSG
         LA    R3,WTO              WORKAREA
         XR    R4,R4               CLEAR R4
         L     R5,24(R2)           LOAD ADDR OF CLASS
         IC    R4,0(R5)            GET LENGTH OF CLASS
         C     R4,=F'7'            CHECK FOR LENGTH(DATASET)
         BNE   EXIT                IF NOT EQUAL, LET IT GO THROUGH
         CLC   1(7,R5),=C'TAPEVOL' IS CLASS 'TAPEVOL'??
         BNE   RACDEF05            NO, CHECK FOR DATASET
         LA    R10,8               BYPASS FURTHER PROCESSEING FOR TAPES
         B     EXIT
RACDEF05 EQU   *
         CLC   1(7,R5),=C'DATASET' IS CLASS 'DATASET'??
         BNE   EXIT                IF NOT, LET IT GO THROUGH
RACDEF20 MVC   WTO+4(70),RACFMSG   SET UP WTO
         L     R6,4(R2)            GET ADDR OF FLAG BYTE
         TM    0(R6),X'C0'         CHECK REQUEST TYPE
         BZ    RACDEF30            TYPE=DEFINE
         TM    0(R6),X'80'
         BO    RACDEF40            TYPE=DELETE
         TM    0(R6),X'40'
         BO    RACDEF50            TYPE=ADDVOL
         MVC   WTO+11(6),=C'UNDEF '
         L     R4,12(R2)           GET ADDR OF VOLSER
         B     RACDEF60            CONTINUE
MOVMOD   MVC   0(0,R4),0(R14)
RACDEF30 MVC   WTO+11(6),=C'DEFINE'
         L     R4,28(R2)           GET MENTITY ADDR
         CLI   0(R4),C' '          WAS MODEL SPECIFIED
         BNE   RACDEF39            YES--CARRY ON
         L     R0,12(R2)           GET ADDR OF ENTITY
         BAL   R14,GDGNAME         GO CHECK IF GDG
         L     R14,12(R2)          GET ADDR OF ENTITY
         LTR   R15,R15             WAS IT GDG
         BZ    RACDEF35            NO--
         BCTR  R15,0               REDUCE FOR EXECUTE
         EX    R15,MOVMOD          MOVE BASE NAME TO MODEL
         L     R15,32(R2)          GET MODEL VOLSER
         MVC   0(6,R15),=C'MODEL ' SET MODEL VOLUME
         B     RACDEF38
RACDEF35 EQU   *
         L     R15,28(R2)          GET ADDR OF MENTITY
         MVC   0(44,R15),0(R14)    MOVE IT IN
         L     R15,32(R2)          GET ADDR OF MODEL VOL
         MVC   0(6,R15),=C'MODEL ' MOVE IN MODEL VOLSER
RACDEF38 EQU   *
         L     R4,36(R2)           GET ADDR OF MENTITY FLAG
         OI    0(R4),X'80'         TURN ON HIGH ORDER BIT
RACDEF39 EQU   *
         L     R4,12(R2)           GET ADDR OF VOLSER
         B     RACDEF60
RACDEF40 MVC   WTO+11(6),=C'DELETE'
         L     R4,12(R2)           GET ADDR OF DSN
         B     RACDEF60
RACDEF50 MVC   WTO+11(6),=C'ADDVOL'
         L     R4,12(R2)           ADDR OF VOLSER TO BE ADDED
RACDEF60 MVC   WTO+23(44),0(R4)    MOVE IN DSN
         WTO   MF=(E,WTO)
EXIT     L     R1,16               CVT ADDR
         USING CVT,R1
         L     R3,CVTRAC           RACF CVT
         LTR   R3,R3               SEE IF RACF CVT EXISTS
         BZ    NORACF              DOES NOT EXIST
         USING RCVT,R3
         TM    RCVTFLGS,X'80'      SEE IF RACF INACTIVE
         BO    NORACF              RACF VARIED INACTIVE
         TM    RCVTSTAT,X'80'      RACF INACTIVE ? ? ? ? ? ? ?
         BZ    EXIT1
NORACF   MVC   WTO+4(60),NORACFM   NO RACF MESSAGE
         WTO   MF=(E,WTO)
         LA    R10,8               ACCEPT REQUEST
********************************************************************
*        RESTORE REGISTERS FREE STORAGE AND RETURN
********************************************************************
EXIT1    LR    R15,R10          SET UP EXIT RETURN CODE
         TERME LV=72+WORKSIZE
         EJECT
GDGNAME  EQU   *
***********************************************************************
*                                                                     *
* THIS ROUTINE CHECKS TO SEE IF A DSN HAS A LOWEST LEVEL QUALIFIER IN *
* THE FORM GXXXVXX. REGISTER USAGE                                    *
*     R0   ADDRESS OF 44 CHARACTER DSNAME ON ENTRY                    *
*     R1   WORK REGISTER                                              *
*     R11  WORK REGISTER                                              *
*     R14  RETURN ADDRESS                                             *
*     R15  RETURN CODE                                                *
*          - 0 IF NOT GDG                                             *
*          - LENGTH OF THE BASE ENTRY IF A GDG                        *
*                                                                     *
***********************************************************************
         LA    R15,0               SET DEFAULT RETURN
         LR    R11,R2              STORE R2
         LR    R2,R0
         LA    R2,43(R2)           GET ADDR OF LAST DATA BYTE OF DSN
GDGLOOP  CLI   0(R2),C'.'          LOOK FOR PERIOD
         BE    GDG010              FOUND--
         BCTR  R2,0                NOT FOUND, DECREMENT POINTER
         CR    R2,R0               CHECK IF AT BEGININNING
         BH    GDGLOOP             IF NOT, CONTINUE TO LOOP
         B     GDGEND              PERIOD NOT FOUND(I.E THIS DSN IS A
*                                  SINGLE LEVEL AND THEREFORE CAN'T BE
*                                  A GDG
GDG010   CLI   1(R2),C'G'          CHECK FOR G IN POSITION 1
         BNE   GDGEND              IF NOT, THEN NOT A GDG
         CLI   6(R2),C'V'          CHECK FOR V IN POSITION 6
         BNE   GDGEND              IF NOT, THEN NOT A GDG
         LR    R15,R2              STORE POSITION OF PERIOD
         TRT   2(4,R15),GDGTAB     CHECK FOR NUMBERS IN 2-5
         BC    8,GDG020            IF ALL NUMBERS, CHECK 7-8
GDG015   LA    R15,0               RESET RETURN CODE
         B     GDGEND              GET OUT
GDG020   TRT   7(2,R15),GDGTAB     CHECK FOR NUMBERS IN 7-8
         BC    7,GDG015            IF NOT, RESET RET CD AND GET OUT
         SR    R15,R0              COMPUTE BASE LENGTH
GDGEND   LR    R2,R11              RESTORE R2
         BR    R14                 RETURN
GDGTAB   DC    240X'01'
         DC    10X'00'
         DC    6X'01'
         EJECT
********************************************************************
*        CONSTANTS AND LITERALS
********************************************************************
WTOC     WTO   '1234567890123456789012345678901234567890123456789012345X
               678901234567890',MF=L,ROUTCDE=(9)
RACFMSG  DC    0CL70' '
         DC    CL19'RACDEF        DSN: '
VOL      DC    CL51' '
NORACFM  DC    CL60'*** WARNING *** RACF NOT ACTIVE --- RACDEF BYPASSEDX
               '
RACFMSGE EQU   *
         LTORG
********************************************************************
*        SAVE AREA AND WORK AREA
********************************************************************
SAVEAREA DSECT
SAVE     DS    18F'0'
WTO      DS    CL(RACFMSGE-WTOC)
WORKSIZE EQU   *-SAVEAREA
********************************************************************
         EJECT
********************************************************************
*   MAPPING MACROS
********************************************************************
         EJECT
         ICHPRCVT
         EJECT
         CVT       DSECT=YES
         END
