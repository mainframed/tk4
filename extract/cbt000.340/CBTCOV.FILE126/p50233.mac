*          DATA SET P50233     AT LEVEL 004 AS OF 06/30/81
*          DATA SET P50233     AT LEVEL 003 AS OF 06/05/81
*          DATA SET P50233     AT LEVEL 002 AS OF 06/02/81
*          DATA SET P50233     AT LEVEL 007 AS OF 03/20/81
*          DATA SET P50233     AT LEVEL 006 AS OF 03/18/81
*          DATA SET P50233     AT LEVEL 005 AS OF 03/04/81
*          DATA SET P50233     AT LEVEL 004 AS OF 03/03/81
*          DATA SET P50233     AT LEVEL 003 AS OF 02/17/81
*          DATA SET P50233     AT LEVEL 002 AS OF 02/17/81
*          DATA SET P50233     AT LEVEL 001 AS OF 02/09/81
*          DATA SET P50233     AT LEVEL 052 AS OF 11/10/80
*          DATA SET P50233     AT LEVEL 050 AS OF 08/08/80
*          DATA SET P50233     AT LEVEL 046 AS OF 08/07/80
*          DATA SET P50233     AT LEVEL 036 AS OF 08/04/80
*          DATA SET P50233     AT LEVEL 033 AS OF 07/28/80
*          DATA SET P50233     AT LEVEL 032 AS OF 07/25/80
*          DATA SET P50233     AT LEVEL 029 AS OF 07/24/80
P50233   CSECT
 TITLE '***** SUBMIT PROD JOBS FROM OS CONSOLE &SYSDATE &SYSTIME ****'
         PRIME
         REGISTER
         LA    R11,4094(R12)
         USING P50233+4096,R11
         USING CIBSECT,R9
         SPACE 3
***********************************************************************
*
*      ENQ TO INDICATE MBRDR IS UP
*
**********************************************************************
         ENQ (MBRDRQ1,MBRDRQ2,E,,SYSTEM),RET=TEST
         LTR   R15,R15             IS RESOURCE AVAILABLE
         BZ    DOENQ               YES - CONTINUE
         CALL  P50233B,(14),VL     ISSUE MESSAGE FOR BAD ENQ
         ABEND 99,DUMP             ABEND
DOENQ    ENQ (MBRDRQ1,MBRDRQ2,E,,SYSTEM),RET=HAVE
         SPACE 3
*
*        INSURE THIS IS A STARTED TASK
*
FASCB    EQU   *
         L     R5,16               ADDRESS OF CVT
         USING CVT,R5
         L     R6,CVTTCBP          POINTER TO TCB AND ASCB
         L     R6,12(R6)           CURRENT ASCB POINTER
         USING ASCB,R6
         L     R7,ASCBJBNI         POINTER TO STC NAME
         LTR   R7,R7
         BZ    EXTRACT
         SR    R0,R0
         CALL  P50233B,(1),VL
         B     EXIT
         DROP  R5,R6
 TITLE '***** GET ECB AND CIB FROM COMTASK     &SYSDATE &SYSTIME ****'
EXTRACT  EQU   *
         EXTRACT COMMAREA,'S',FIELDS=COMM GET QEDIT ANCHOR
         L     R8,COMMAREA   SET BASE FOR COMMAREA
         L     R1,0(R8)          ADDRESS OF COMMUNICATION ECB
         STCM  R1,7,WAITECB+1     SAVE ECB ADDRESS
         LA    R10,4(R8)         CIB CHAIN ANCHOR ADDRESS
         ST    R10,ANCHOR         SAVE
         L     R9,4(R8)
         LTR   R9,R9              MUST BE CIB FROM CONSOLE
         BZ    ALLOC
DELCIB   EQU   *
         MVC   CONSID,CIBCONID
         QEDIT ORIGIN=(10),BLOCK=(9)
         LTR   R15,R15
         BZ    ALLOC
         ABEND 4,DUMP
 TITLE '***** ALLOCATE INPUT DATA SET                ****'
ALLOC    EQU   *
         LA    R8,JOBLIB          ALLOC MBXX.F01640
         LA    R7,JOBDDN          DDNAME
         BAL   R10,DSALLOC        ALLOC INITIAL DSN AND OPEN
         LTR   R15,R15            WAS ALLOCATION SUCCESSFULL
         BNZ   EXIT               NO - PRIMARY LIBRARY ALLOC FAILURE
         OPEN  (JOBS,(INPUT))
         LA    R8,JOBS             SET DCB SAVE
         ST    R8,CURRDCB
         ST    R8,OLDDCB           OLD AND CURRENT
         LH    R8,JOBS+82         LRECL
         CH    R8,=H'80'
         BE    CHKBLK
         CALL  P50233B,(2,0,JOBLIB),VL
         B     EXIT
CHKBLK   EQU   *
         SR    R0,R0
         LH    R0,JOBS+62         BLKSIZE
         STH   R0,JCLONG
         GETMAIN R,LV=(0)
         ST    R1,JCL
         OPEN  (JES,(OUTPUT))
 TITLE '***** ADD CIB AND WAIT FOR MODIFY OR STOP ****'
ADDCIB   EQU   *
         L     R10,ANCHOR
         QEDIT ORIGIN=(10),CIBCTR=30 ALLOW 30 CIBS (F) TO BE CHAINED
         LTR   R15,R15        CHECK RETURN CODE
         BZ    UPNOW
         ABEND 1,DUMP         INFORM USER
UPNOW    TIME
         ST    1,FULLTIME
         ED    EDITTIME,FULLTIME+1
         MVC   WTOI+8(6),EDITTIME
         WTO 'MBRDR026   *******************************************', X
               ROUTCDE=(2)
WTOI     WTO ' *****          MBRDR ACTIVE                         ',  X
               ROUTCDE=(2)
         WTO '          LAST COMPILED &SYSDATE &SYSTIME            ',  X
               ROUTCDE=(2)
         WTO '******************************************************', X
               ROUTCDE=(2)
WAIT     CLI   CONSID,0            WAS LAST REQUEST FROM MASTER CONSOLE
         BNE   WAIT1               YES, CONTINUE
         L     R14,ASCBADDR        NO, SET UP FOR CROSS ADDRESS POST
         LTR   R14,R14             WAS ASCB SUPPLIED
         BZ    WAIT1               NO-- DON'T DO CROSS ADDRESS POST
         ST    R14,ASCBHEX         STORE ADDR OF ASCB
         UNPK  ASCBHEX,ASCBHEX(5)            SET UP
         NC    ASCBHEX,=X'0F0F0F0F0F0F0F0F'  FOR TRANSLATE
         TR    ASCBHEX(8),TRANTAB  TRANSLATE TO CHARACTER
         ENQ   (MBRDRQ1,ASCBHEX,E,8,SYSTEM),RET=TEST
         LTR   R15,R15             IS HE STILL THERE
         BZ    WAIT1               NO, MUST BE A PROBLEM
         LA    R1,AUTH
         SVC   231
         L     R15,XECBADDR
         L     R10,Z999RET          RETURN CODE FOR Z999LOAD
         POST  (R15),(R10),ASCB=(R14),ERRET=ABENDXP
         SR    R1,R1
         SVC   231                 UNAUTHORIZE
WAIT1    WAIT  1,ECBLIST=WAITECB,LONG=YES
         L     R10,ANCHOR         ANCHOR ADDRESS
         L     R8,COMMAREA
         L     R9,4(,R8)         GET ADDRESS OF THE CIB
         MVI   TS+1,X'00'         CLEAR FIRST CARD SWITCH
         MVI   TS1+1,X'00'        CLEAR JOB SWITCH
         MVI   SAVCOMMA,C' '      CLEAR CONTINUATION WORK AREAS
         MVI   COMMA,C' '
         MVC   CONSID,CIBCONID        SAVE CONSOLE ID FOR CHECK LATER
         MVC   Z999RET,=F'0'       RESET RETURN CODE
         LA    R1,WTOLIST         GET ADDR WTO LIST
         USING WTOOD,R1
         CLI   CIBVERB,X'40'      IS THIS A STOP COMMAND
         BNE   WRITECMD           NO - CONTINUE
         MVI   WTOOVRB,C'P'       MODIFY CONSOLE MESSAGE
WRITECMD MVI   WTOOMFY,C' '       CLEAR WTO BUFFER
         MVC   WTOOMFY+1(79),WTOOMFY
         SR    R3,R3              CLEAR WORK REGISTER
         IC    R3,CIBDSIZE+1      GET LENGTH OF MODIFY COMMAND
         CH    R3,=H'80'          IS IT GREATER THAN 80
         BL    OK80               NO - CONTINUE
         LA    R3,80              SET TO MAX
OK80     BCTR  R3,R0              DECREMENT LENGTH FOR MOVE
         EX    R3,MOVWTO          MOVE TO WTO BUFFER
         WTO   MF=(E,WTOLIST)
         DROP  R1
OKPROCS  EQU   *
         CLI   CIBVERB,X'40'      WAS THIS A 'STOP' COMMAND?
         BNE   MODIFY          NO, CHECK IF MODIFY COMMAND
         CALL  P50233B,(3),VL
         CLOSE JES
         CLOSE JOBS
         EJECT
EXIT     EQU   *
         DEQ  (MBRDRQ1,MBRDRQ2,,SYSTEM)
         TERME
         EJECT
MODIFY   CLI   CIBVERB,X'44'     WAS THIS A 'MODIFY' COMMAND?
         BNE   IGNORE          INVALID ENTRY, IGNORE REQUEST
         MVI   COMMBUF,C' '    CLEAR COMMAND BUFFER
         MVC   COMMBUF+1(79),COMMBUF
         SR    R1,R1          CLEAR REGISTER
         IC    R1,CIBDSIZE+1  GET SIZE OF DATA
         STH   R1,COMMLNTH    SAVE LENGTH
         BCTR  R1,R0          DECREMENT FOR EXECUTE
         CH    R1,=H'80'      CHECK SIZE OF DATA
         BL    MAX802         OK, CONTINUE
         LA    R1,80          SET TO MAX ALLOWED
MAX802   EX    R1,MOVECOMM    MOVE TO WTO BUFFER
         QEDIT ORIGIN=(10),BLOCK=(9)
         LTR   R15,R15
         BZ    OKDELCIB
         ABEND 4,DUMP
OKDELCIB EQU   *
         SR    R1,R1             CLEAR WORK REGISTER
         IC    R1,COMMLNTH+1     GET SIZE OF BUFFER
         LA    R3,COMMBUF        LOAD ADDR OF BUFFER
         LA    R15,PARSE         GET ADDR PARSE ROUTINE
         BALR  R14,R15           PARSE BUFFER
         LTR   R15,R15           CHECK RETURN CODE
         BNZ   CMDERROR          TO ERROR ROUTINE
         B     EXTRINFO          TO EXTRACT PARSED INFO
*@%@%@%@%@%@%@%@%@%@%@%@%@%@%@%@%@%@%@%@%@%@%@%@%@%@%@%@%@%@%@%@%@%
*@                                                                %
*@           MODIFY COMMAND PARSE ROUTINE                         %
*@                                                                %
*@              THIS ROUTINE PARSES THE OPERATOR                  %
*@              COMMAND FOR THE:                                  %
*@                  JOB,INDEX,USER,GROUP,AND HEX                  %
*@              KEYWORDS.  THE VARIABLES ARE EXTRACTED            %
*@              AND ERROR MESSAGES ISSUED IF AN ERROR             %
*@              IS FOUND.                                         %
*@            REGISTERS:     INPUT                                %
*@                R1 = NUMBER OF CHARACTERS ENTERED IN            %
*@                        THE MODIFY COMMAND BUFFER               %
*@                R3 = ADDRESS OF MODIFY COMMAND BUFFER           %
*@                R15 = BRANCH ADDRESS AND RETURN CODE            %
*@            REGISTERS:     OUTPUT                               %
*@                R1 = # CHAR LEFT IN BUFFER - ERROR ONLY         %
*@                R3 = DISPLACEMENT INTO BUFFER OF ERROR          %
*@                R15 = RETURN CODE: 0 = OKAY                     %
*@                                   8 = ERROR                    %
*@            REGISTERS:     INTERNAL USE                         %
*@                R2 = ADDRESS OF OUTPUT VARIABLE                 %
*@                R14 = MAX LENGTH OF OUTPUT VARIABLE             %
*@                                                                %
*@%@%@%@%@%@%@%@%@%@%@%@%@%@%@%@%@%@%@%@%@%@%@%@%@%@%@%@%@%@%@%@%@%
PARSE    ST    R14,PARSRET                   SAVE RETURN ADDR
         MVC   EXTINDX+1(4),=C'    '         CLEAR AND RESET ALL
         MVI   EXTINDX,X'4'                     OUTPUT AREAS
         MVC   EXTJOB+1(8),=C'        '           PRIOR TO PARSE
         MVI   EXTJOB,X'8'
         MVC   EXTUSER+1(4),=C'    '
         MVI   EXTUSER,X'4'
         MVC   EXTGRUP+1(8),=C'        '
         MVI   EXTGRUP,X'8'
         MVC   EXTHEX+1(19),=C'                   '
         MVI   EXTHEX,X'19'
         LTR   R1,R1                WAS ANY DATA ENTERED
         BZ    EXTERROR             NO - DONT DO PARSE
PARSER   CLC   0(3,R3),=C'JOB'      CHECK FOR JOB PARAMETER
         BNE   CKINDEX              NO LOOK FOR INDEX
         CLI   EXTJOB+1,C' '        HAS JOB BEEN ENTERED
         BNE   EXTERROR             YES - ERROR
         LA    R3,3(R3)             INCREMENT POINTER
         SH    R1,=H'3'             DECREMENT COUNTER
         LA    R2,EXTJOB            POINT TO OUTPUT AREA
         BAL   R15,EXTINFO          PARSE PARAMETER
         LTR   R15,R15              WAS PARSE SUCCESSFUL
         BNZ   EXTERROR             NO - TO ERROR ROUTINE
         LTR   R1,R1                IS COMMAND BUFFER EMPTY?
         BZ    ENDPARS              YES - FININSHED
         B     PARSER               NEXT
CKINDEX  CLC   0(5,R3),=C'INDEX'    CHECK FOR INDEX KEYWORD
         BNE   CKUSER               NO - CHECK FOR USER
         CLI   EXTINDX+1,C' '       HAS INDEX BEEN ENTERED
         BNE   EXTERROR             YES - ERROR
         LA    R3,5(R3)             INCREMENT POINTER
         SH    R1,=H'5'             DECREMENT COUNTER
         LA    R2,EXTINDX           POINT TO OUTPUT AREA
         BAL   R15,EXTINFO          PARSE PARAMETER
         LTR   R15,R15              WAS PARSE SUCCESSFUL
         BNZ   EXTERROR             NO - ERROR
         LTR   R1,R1                IS COMMAND BUFFER EMPTY?
         BZ    ENDPARS              YES - FINISHED
         B     PARSER               NEXT
CKUSER   CLC   0(4,R3),=C'USER'     CHECK FOR USER KEYWORD
         BNE   CKGRUP               NO - CHECK NEXT
         CLI   EXTUSER+1,C' '       HAS USER BEEN ENTERED
         BNE   EXTERROR             YES - ERROR
         LA    R3,4(R3)             INCREMENT POINTER
         SH    R1,=H'4'             DECREMENT COUNTER
         LA    R2,EXTUSER           POINT TO OUTPUT AREA
         BAL   R15,EXTINFO          PARSE PARAMETER
         LTR   R15,R15              WAS PARSE SUCCESSFUL
         BNZ   EXTERROR             NO - ERROR
         LTR   R1,R1                IS COMMAND BUFFER EMPTY?
         BZ    ENDPARS              YES - FINISHED
         B     PARSER               NEXT
CKGRUP   CLC   0(5,R3),=C'GROUP'    CHECK FOR GROUP KEYWORD
         BNE   CKHEX                NO - CHECK NEXT
         CLI   EXTGRUP+1,C' '       WAS GROUP ENTERED
         BNE   EXTERROR             YES - ERROR
         LA    R3,5(R3)             INCREMENT POINTER
         SH    R1,=H'5'             DECREMENT COUNTER
         LA    R2,EXTGRUP           POINT TO OUTPUT AREA
         BAL   R15,EXTINFO          PARSE PARAMETER
         LTR   R15,R15              WAS PARSE SUCCESSFUL
         BNZ   EXTERROR             NO - ERROR
         LTR   R1,R1                IS COMMAND BUFFER EMPTY?
         BZ    ENDPARS              YES - FINISHED
         B     PARSER               NEXT
CKHEX    CLC   0(3,R3),=C'HEX'      CHECK FOR HEX KEYWORD
         BNE   EXTERROR             NO - THEN INVALID KEYWORD
         CLI   EXTHEX+1,C' '        WAS HEX ENTERED
         BNE   EXTERROR             YES - ERROR
         LA    R3,3(R3)             INCREMENT POINTER
         SH    R1,=H'3'             DECREMENT COUNTER
         LA    R2,EXTHEX            POINT TO OUTPUT AREA
         BAL   R15,EXTINFO          PARSE PARAMETER
         LTR   R15,R15              WAS PARSE SUCCESSFUL
         BNZ   EXTERROR             NO - ERROR
         TR    EXTHEX+3(16),PTABLE  TRANSLATE OUTPUT
         PACK  HEXWORK,EXTHEX+3(9)  PACK FIRST WORD
         MVC   HEXD(4),HEXWORK      SAVE FIRST FOUR BYTES
         PACK  HEXWORK,EXTHEX+11(9) PACK SECOND WORD
         MVC   HEXD+4(4),HEXWORK    SAVE SECOND FOUR BYTES
         LTR   R1,R1                IS COMMAND BUFFER EMPTY?
         BZ    ENDPARS              YES - FINISHED
         B     PARSER               NEXT
ENDPARS  SR    R15,R15              SET GOOD RETURN
         L     R14,PARSRET          GET RETURN ADDR
         BR    R14                  RETURN
EXTINFO  CLI   0(R3),C' '           BYPASS BLANKS
         BNE   EXTSTART
         LA    R3,1(R3)             INCREMENT POINTER
         LTR   R1,R1                CHECK FOR FORMAT ERROR
         BZ    EXTERROR             YES - GET OUT
         BCTR  R1,0                 DECREMENT COUNTER
         LTR   R1,R1                ANYTHING LEFT
         BZ    EXTERROR             NO - GET OUT
         B     EXTINFO              CHECK FOR MORE BLANKS
EXTSTART CLI   0(R3),C'('           IS THIS THE BEGINNING OF PARAM
         BNE   EXTBAD               NO - THEN ERROR
         LTR   R1,R1                ANYTHING LEFT
         BZ    EXTBAD               IF ZERO - ERROR
         LA    R3,1(R3)             INCR COMMAND BUFFER POINTER
         BCTR  R1,0                 DECREMENT SIZE OF BUFFER
         LTR   R1,R1                TEST THE SIZE
         BZ    EXTBAD               IF ZERO - NOTHING ENTERED
         SR    R14,R14              CLEAR WORK REGISTER
         IC    R14,0(R2)            INSERT MAX LENGTH FOR PARAMETER
         MVI   1(R2),C' '           CLEAR OUTPUT AREA
         SH    R14,=H'2'            DECREMENT LENGTH FOR MOVE
         EX    R14,EXTCLEAR         FINISH CLEAR
         SR    R14,R14              CLEAR WORK REGISTER
         IC    R14,0(R2)            INSERT LENGTH AGAIN
         LA    R2,1(R2)             INCREMENT OUTPUT AREA POINTER
PARMLOOP CLI   0(R3),C')'           IS IT END OF PARAMETER
         BE    ENDCHAR              YES - END OF PARAMETER
         MVC   0(1,R2),0(R3)        MOVE CHAR OF PARM TO OUTPUT
         LA    R3,1(R3)             INCR COMMAND BUFFER POINTER
         LA    R2,1(R2)             INCR OUTPUT AREA POINTER
         BCTR  R1,0                 DECREMENT SIZE OF COMMAND BUFF
         LTR   R1,R1                CHECK FOR END OF BUFFER
         BZ    ENDBUFF              NO MORE DATA WAS ENTERED
         BCT   R14,PARMLOOP         CONTINUE TILL MAX IS REACHED
         B     ENDCHAR              GET OUT WHEN MAX IS REACHED
ENDCHAR  LTR   R1,R1                ANY MORE LEFT IN BUFFER
         BZ    ENDBUFF              NO - GET OUT
         CLI   0(R3),C')'           CHECK FOR END OF PARAMETER
         BNE   EXTBAD               NO - BAD FORMAT
         LA    R3,1(R3)             INCR COMMAND BUFFER POINTER
         BCTR  R1,0                 DECREMENT SIZE OF COMMAND BUFF
         LTR   R1,R1                ANY MORE LEFT
         BZ    ENDBUFF              NO - GET OUT
         CLI   0(R3),C','           BYPASS ANY COMMA OR BLANK
         BE    INCSEP               YES INCREMENT COUNTS
MOREBLNK CLI   0(R3),C' '           ALSO BYPASS BLANK
         BNE   ENDBUFF              NO - RETURN
INCSEP   LA    R3,1(R3)             INCREMENT BUFFER POINTER
         BCTR  R1,0                 DECREMENT SIZE OF COMMAND BUFF
         LTR   R1,R1                ANY MORE
         BZ    ENDBUFF              NO - GET OUT
         B     MOREBLNK             CHECK FOR MORE SEPARATING BLANKS
ENDBUFF  LR    R14,R15              SAVE RETURN ADDR
         SR    R15,R15              SET GOOD RETURN CODE
         BR    R14                  RETURN TO CALLER
EXTBAD   LR    R14,R15              SAVE RETURN ADDR
         LA    R15,8                SET BAD RETURN CODE
         BR    R14                  RETURN
EXTERROR L     R14,PARSRET          GET RETURN ADDR
         LA    R15,8                SET BAD RETURN CODE
         BR    R14                  RETURN
CMDERROR LR    R15,R1             SAVE LENGTH OF DATA
         LA    R1,WTOERR          GET ADDR WTO LIST
         USING WTOOD,R1
         MVI   WTOOMFY,C' '       CLEAR WTO BUFFER
         MVC   WTOOMFY+1(79),WTOOMFY
         LTR   R15,R15            CHECK FOR ZERO LENGTH
         BZ    NODEC              IF ZERO DONT DECREMENT
         BM    RESR1              IF LESS THAN ZERO RESET TO ZERO
         BCTR  R15,0              DECREMENT LENGTH FOR MOVE
NODEC    EX    R15,MOVWTO1        MOVE TO WTO BUFFER
         WTO   MF=(E,WTOERR)
         B     WAIT
RESR1    SR    R1,R1              CLEAR R1
         B     NODEC              CONTINUE
         DROP  R1
EXTRINFO XR    R15,R15             CLEAR R15
         ST    R15,ASCBADDR        CLEAR ASCBADDR
         ST    R15,XECBADDR        CLEAR CROSS MEMORY ECB
         LA    R15,HEXD
         CLC   EXTHEX+1(4),=C'    '      WAS FIELD SUPPLIED
         BNE   GOTHEX              YES
         MVC   JOBNAME,=C'OPERATOR' OPERATOR DID IT
         B     CHKINDX             CONTINUE
GOTHEX   L     R1,0(R15)           GET ECB ADDR
         ST    R1,XECBADDR         STORE IT
         L     R1,4(R15)           GET ASCB ADDR
         ST    R1,ASCBADDR         STORE IT
         USING ASCB,R1             ESTABLISH ADDRESSIBILITY
         L     R14,ASCBJBNI        GET POINTER TO JOB NAME
         LTR   R14,R14             IS POINTER VALID?
         BNZ   GOTJOB              YES
         L     R14,ASCBJBNS        GET POINTER TO STARTED TASK NAME
         DROP  R1
GOTJOB   LR    R1,R14              GET POINTER IN R1
         XC    JOBNAME,JOBNAME     CLEAR JOB SAVE AREA
         LTR   R1,R1               CHECK FOR SOMETHING IN R1
         BZ    CHKINDX             NO JOB NAME AVAILABLE
         MVC   JOBNAME,0(R1)       SAVE NAME OF SENDING JOB
CHKINDX  CLC   EXTINDX+1(4),=C'    '
         BE    CHKJOBA            NO
*        CHANGE DSNAMES
         MVC   ALTINDEX(4),EXTINDX+1
         LA    R8,ALTLIB          ALLOC MBXX.F01640
         LA    R7,ALTDDN          DDNAME
         BAL   R10,DSALLOC        ALLOC INTIAL DSN AND OPEN
         LTR   R15,R15            WAS ALLOCATION SUCCESSFUL
         BNZ   WAIT               NO GET OUT
DYNOPEN  OPEN  (ALTDCB,(INPUT))
         LA    R8,ALTDCB           CHANGE DCB
         ST    R8,CURRDCB          MAKE IT CURRENT
         LH    R8,ALTDCB+62        BLKSIZE OF NEW
         CH    R8,JCLONG           LARGER THAN LAST
         BNH   CHKNL
         LH    R0,JCLONG
         L     R1,JCL
         FREEMAIN R,LV=(0),A=(1)   FREE OLD BUFFER
         LR    R0,R8
         STH   R8,JCLONG           NEW LENGTH
         GETMAIN R,LV=(0)          NEW BUFFER
         ST    R1,JCL
CHKNL    EQU   *
         LH    R8,ALTDCB+82       LRECL
         CH    R8,=H'80'
         BE    CHKJOBA
         MVC   Z999RET,=F'24'      INVALID LRECL
         CLOSE ALTDCB
         MVC   CURRDCB(4),OLDDCB   RESET DCB POINTER
         LA    R7,ALTDDN           DDNAME TO FREE
         LA    R8,ALTLIB           DSNAME TO FREE
         BAL   R10,FREEDS
         CLC   JOBNAME,=C'OPERATOR' IS THIS REQUEST FROM OPERATOR
         BNE   WAIT                NO - DONT ISSURE MESSAGE
*    RECORDS MUST BE 80 CHARACTERS
         CALL  P50233B,(2,JOBMEMB,ALTINDEX,0,JOBNAME),VL
         B     WAIT
CHKJOBA  CLC   EXTJOB+1(4),=C'    '  WAS JOB SUPPLIED ????
         BE    NOJOBA
         MVC   JOBMEMB,EXTJOB+1   MOVE JOB MEMBER NAME
 TITLE '***** FIND JOB IN DSN AND SUBMIT       *****'
         L     R7,CURRDCB          CURRENT DCB ADDRESS
         FIND  (R7),JOBMEMB,D
         CH    R15,=H'4'          MEMBER NOT FOUND
         BNE   CHKFIND
         MVC   Z999RET,=F'4'       MEMBER NOT FOUND RETURN CODE
         CLC   CURRDCB,OLDDCB      USING ALTERNATE DCB ? ? ? ?
         BNE   MOVEALT
         CLC   JOBNAME,=C'OPERATOR'  IS REQUEST FROM OPERATOR
         BNE   CHKALT             NO - BYPASS MESSAGE
         CALL  P50233B,(4,JOBMEMB,JOBINDEX,0,JOBNAME),VL
         B     CHKALT
MOVEALT  EQU   *
         CLC   JOBNAME,=C'OPERATOR'  IS REQUEST FROM OPERATOR
         BNE   CHKALT             NO - BYPASS MESSAGE
         CALL  P50233B,(4,JOBMEMB,ALTINDEX,0,JOBNAME),VL
         B     CHKALT
CHKFIND  EQU   *
         LTR   R15,R15            GOOD FIND ? ? ? ?
         BZ    OKFIND
         ABEND 5,DUMP
OKFIND   EQU   *
         L     R8,JCL             ADDRESS OF BLOCK
         L     R7,CURRDCB
         READ  DECB,SF,(R7),(8),'S'
         CHECK DECB
         LH    R8,62(R7)          BLKSIZE
         L     R7,DECB+16         IOB ADDRESS
         SH    R8,14(R7)          SUBTRACT RESIDUAL COUNT
         L     R5,JCL             BEGINNING OF BLOCK
         LA    R6,80              SIZE OF JCL CARDS
         LA    R7,0(R8,R5)        END OF BLOCK
         BCTR  R7,0               -1
JCLSCAN  EQU   *
         BAL   R10,PASSWORD       CHECK IF WE SHOULD ADD PASSWORD
         PUT   JES,(R5)
         BXLE  R5,R6,JCLSCAN
         B     OKFIND
NOJOBA   EQU   *
         MVC   Z999RET,=F'4'       SET RETURN FOR JOB NOT FOUND
         CLC   JOBNAME,=C'OPERATOR'  WAS REQUEST FROM OPERATOR
         BNE   CHKALT              NO - BYPASS MESSAGE
         CALL  P50233B,(5,0,0,0,JOBNAME),VL  NO JOB NAME SUPPLIED
         B     CHKALT
IGNORE   QEDIT ORIGIN=(10),BLOCK=(9)  FREE 1ST CIB ON CHAIN
         LTR   R15,R15        CHECK RETURN CODE
         BZ    WAIT           ZERO,CONTINUE
         ABEND 2,DUMP         INFORM USER
 TITLE '***** END OF MEMBER                ****'
EPO      EQU   *
         PUT   JES,EOJ            END OF JOB
         CLC   Z999RET,=F'0'       CHECK FOR GOOD RETURN CODE
         BNE   PRTMSG              NO - NOTIFY OPERATOR OF JOB SUBMIT
*                                  ONLY WHEN BAD RETURN PASSED TO
*                                  Z999LOAD
         CLC   JOBNAME,=C'OPERATOR'  WAS REQUEST FROM OPERATOR
         BNE   CHKALT              NO - BYPASS MESSAGE
PRTMSG   CLC   CURRDCB,OLDDCB      USING ALTERNATE DCB ? ? ? ?
         BNE   MOVEALT1
         CALL  P50233B,(6,JOBMEMB,JOBINDEX,NUSER,JOBNAME),VL
         B     CHKALT
MOVEALT1 EQU   *
         CALL  P50233B,(6,JOBMEMB,ALTINDEX,NUSER,JOBNAME),VL
CHKALT   EQU   *
         CLC   CURRDCB(4),OLDDCB   WAS THIS AN ALTERNATE ? ? ? ?
         BE    WAIT                NO
         MVC   CURRDCB(4),OLDDCB   RESET TO ORIGINAL
         CLOSE ALTDCB
         LA    R8,ALTLIB
         LA    R7,ALTDDN
         BAL   R10,FREEDS
         B     WAIT
 TITLE '***** ALLOC DSNAME                 ****'
*
*        LA  R8,DSNAME
*        LA  R7,DDNAME
*        BAL R10,DSALLOC
*
DSALLOC  EQU   *
         STM   R2,R12,SAVE
         SR    R0,R0
         LA    R0,DAPLONG         LENGTH OF DAPL
         GETMAIN R,LV=(0)
         LTR   R15,R15            WAS IT SUCCESSFUL
         BNZ   DSALLBAD           NO - ERROR
         LR    R5,R1
         USING DAPL,R5
         XC    DAPL(DAPLONG),DAPL CLEAR DAPL
         SR    R0,R0
         LA    R0,DA08LONG        LENGTH OF DAIR08
         GETMAIN R,LV=(0)
         LTR   R15,R15            WAS IT SUCCESSFUL
         BNZ   DSALLBAD           NO - ERROR
         LR    R4,R1
         USING DAPB08,R4
         XC    DA08CD(DA08LONG),DA08CD
         ST    R4,DAPLDAPB        SAVE ADDRESS IN DAPL
         MVC   DA08CD,=X'0008'    MARK AS 8
         ST    R8,DA08PDSN
         MVC   DA08DDN,0(R7)
         MVC   DA08UNIT,=CL8' '
         MVC   DA08SER,=CL8' '
         MVC   DA08BLK,=F'0'
         MVC   DA08PQTY,=F'0'
         MVC   DA08SQTY,=F'0'
         MVC   DA08DQTY,=F'0'
         MVC   DA08MNM,=CL8' '
         MVC   DA08PSWD,=CL8' '
         OI    DA08DSP1,X'08'     DISP=(SHR,
         OI    DA08DPS2,X'08'               KEEP,
         OI    DA08DPS3,X'08'                    KEEP)
         OI    DA08CTL,X'08'      PERMANENT
         MVC   DA08ALN,=CL8' '
         LINK  EP=IKJDAIR,MF=(E,DAPL),SF=(E,LINKCPL)
         LTR   R15,R15            DAIR OK
         BZ    DAIROK
DSALLBAD LA    R8,2(R8)            POINT TO DSN FOR WTO
         MVC   Z999RET,=F'32'      SET RETURN FOR CALLER
         CLC   JOBNAME,=C'OPERATOR' WAS REQUEST FROM OPERATOR
         BNE   DSALLORC            NO BYPASS MESSAGE
         CALL  P50233B,(7,(R7),(R8),0,JOBNAME),VL     FAILED
DSALLORC L     R15,=F'8'           SET BAD RETURN CODE
         B     DSALLOCR
DAIROK   EQU   *
         SR    R15,R15             SET ZERO RETURN CODE
DSALLOCR EQU   *
         LR    R2,R15              SAVE RETURN CODE
         LA    R0,DAPLONG          GET LENGTH OF AREA
         FREEMAIN R,LV=(0),A=(R5)  FREE STORAGE
         LA    R0,DA08LONG         GET LENGTH OF AREA
         FREEMAIN R,LV=(0),A=(R4)  FREE STORAGE
         LR    R15,R2              RESTORE RETURN CODE
         LM    R2,R12,SAVE
         BR    10
 TITLE '***** FREE  DSNAME                 ****'
*
*        LA  R7,DDNAME
*        LA  R8,DSNAME
*        BAL R10,FREEDS
*
FREEDS   EQU   *
         STM   R2,R12,SAVE
         SR    R0,R0
         LA    R0,DAPLONG         LENGTH OF DAPL
         GETMAIN R,LV=(0)
         LTR   R15,R15            WAS IT SUCCESSFUL
         BNZ   FREEBAD            NO - ERROR
         LR    R5,R1
         USING DAPL,R5
         XC    DAPL(DAPLONG),DAPL CLEAR DAPL
         SR    R0,R0
         LA    R0,DA18LONG        LENGTH OF DAIR18
         GETMAIN R,LV=(0)
         LTR   R15,R15            WAS IT SUCCESSFUL
         BNZ   FREEBAD            NO - ERROR
         LR    R4,R1
         USING DAPB18,R4
         XC    DA18CD(DA18LONG),DA18CD
         ST    R4,DAPLDAPB        SAVE ADDRESS IN DAPL
         MVC   DA18CD,=X'0018'    MARK AS 8
         SR    R15,R15
         ST    R15,DA18PDSN
         MVC   DA18DDN,0(R7)       DDNAME
         MVC   DA18MNM,=CL8' '
         MVC   DA18SCLS,=CL2' '
         MVI   DA18DPS2,X'00'
         MVI   DA18CTL,X'10'       DEALLOC PERM DATA SETS
         MVC   DA18CTL+1(8),=XL8'00'
         LINK  EP=IKJDAIR,MF=(E,DAPL),SF=(E,LINKCPL)
         LTR   R15,R15            DAIR OK
         BZ    FREEOK
FREEBAD  MVC   Z999RET,=F'32'  MOVE RETURN FOR CALLER
         CLC   JOBNAME,=C'OPERATOR'  WAS REQUEST FROM OPERATOR
         BNE   FREEDSCR        NO - BYPASS MESSAGE
         CALL  P50233B,(8,0,(R7),0,JOBNAME),VL  FREE FAILED
         B     FREEDSCR
FREEOK   EQU   *
FREEDSCR EQU   *
         LA    R0,DAPLONG          GET LENGTH OF AREA
         FREEMAIN R,LV=(0),A=(R5)  FREE AREA
         LA    R0,DA18LONG         GET LENGTH OF AREA
         FREEMAIN R,LV=(0),A=(R4)  FREE AREA
         LM    R2,R12,SAVE
         BR    10
 TITLE '***** ADD PASSWORD TO JCL          *****'
*                                                               MBC
*        ROUTINE TO EXTRACT PASSWORD FROM PROTECTED             MBC
*        TSB AND ADD TO JOBCARD IF                              MBC
*              // PASSWORD=,       OR                           MBC
*              // PASSWORD=                                     MBC
*        APPEAR IN THE JOBCARD SET.                             MBC
*                                                               MBC
PASSWORD EQU   *                                                MBC
         STM   R2,R12,PASSAVE
         CLC   0(3,R5),=C'//*'    IS THIS A COMMENT CARD
         BE    OUTPSWD            YES - THEN CANNOT BE FIRST JCL CARD
         LA    R1,71              GET LENGTH OF JCL CARD
         LR    R2,R5              POINT TO START OF CARD
         MVC   SAVCOMMA,COMMA     SAVE LAST COMMA VALUE
         MVI   COMMA,C' '         REINITIALIZE SAVE AREA
COMALOOP CLC   0(2,R2),=C', '     LOOK FOR CARD CONTINUATION
         BNE   NOTCOMA            NO - CONTINUE SEARCH
         MVI   COMMA,C','         SET CONTINUATION FOUND INDICATOR
NOTCOMA  LA    R2,1(R2)           INCREMENT POINTER
         BCT   R1,COMALOOP        DECREMENT COUNTER
TS       TS    *+1                FIRST TIME SWITCH
         BM    LOOKPASS           SKIP AFTER FIRST
         MVI   TABLE,0
         MVC   TABLE+1(255),TABLE
         MVI   TABLE+C' ',255     LOOK FOR FIRST BLANK
         TRT   0(16,R5),TABLE     IN FIRST 16 COLUMNS
         BZ    INVJOB             INVALID JOB
         LA    R15,10             JOB MUST KNOW APPEAR IN 10 COLS
CHKJOBB  EQU   *
         CLC   1(3,R1),=C'JOB'    MUST BE A JOB CARD
         BE    EXUSER
         LA    R1,1(R1)           NEXT BYTE
         BCT   R15,CHKJOBB        KEEP LOOKING
INVJOB   EQU   *
         MVC   Z999RET,=F'8'
*    FIRST CARD NOT JOB CARD
         CLC   JOBNAME,=C'OPERATOR'  WAS REQUEST FROM OPERATOR
         BNE   CHKALT             NO - BYPASS MESSAGE
         CALL  P50233B,(9,JOBMEMB,0,0,JOBNAME),VL
         B     CHKALT
MULTJOB  MVC   Z999RET,=F'48'     MULTIPLE JOBS IN ONE PDS MEMBER
         CLC   JOBNAME,=C'OPERATOR'  WAS REQUEST FROM OPERATOR
         BNE   INVMSG              NO - BYPASS CONSOLE MESSAGE
         CALL  P50233B,(13,JOBMEMB,0,0,JOBNAME),VL
INVMSG   B     EPO                SIMULATE EOF ON DATASET
EXUSER   EQU   *
         MVC   USER,2(R5)         USER IS FIRST FOUR CHARACTERS
         MVC   NUSER,2(R5)        USER IS FIRST FOUR CHARACTERS
         LA    R1,2(R5)           GET POINTER TO JOB NAME
         SR    R6,R6              CLEAR COUNTER
         LA    R15,8              INITIALIZE LOOP COUNTER
NAMELOOP CLI   0(R1),C' '         FIND THE END OF THE NAME
         BE    NAMEEND            YES - DO COMPARE
         LA    R6,1(R6)           INCREMENT COUNTER
         LA    R1,1(R1)           INCREMENT POINTER
         BCT   R15,NAMELOOP       CONTINUE
NAMEEND  BCTR  R6,0               DECREMENT LENGTH FOR COMPARE
         EX    R6,CLCJOB          COMPARE MEMBER NAME WITH JOB NAME
*                        'JOBNAME ' - MAKE SURE OF FOLLOWING BLANK
         BNE   INVJOB             NOT EQUAL - INVALID JOB CARD
         CLI   3(R5),C'0'   *  VERIFY THAT PRODUCTION JOB NAMES     *
         BL    INVJOB       *  HAVE THE FORMAT ANNNXXXX             *
         CLI   3(R5),C'9'   *  FIRST CHAR ALPHA, THE NEXT THREE     *
         BH    INVJOB       *  NUMERIC, AND THE NEXT FOUR FREE FORM *
         CLI   4(R5),C'0'   *                                       *
         BL    INVJOB       *                                       *
         CLI   4(R5),C'9'   *                                       *
         BH    INVJOB       *                                       *
         CLI   5(R5),C'0'   *                                       *
         BL    INVJOB       *                                       *
         CLI   5(R5),C'9'   *                                       *
         BH    INVJOB       *                                       *
LOOKPASS EQU   *
TS1      TS    *+1             BYPASS CHECK ON FIRST JOB CARD READ
         BZ    FIRSTCD
         LA    R6,3(R5)        POINT PAST //X
         LA    R15,14          SEARCH UP TO  COL 17
JOBLOOP  CLC   0(5,R6),=C' JOB '   IS THIS A JOB CARD
         BE    MULTJOB        MULTIPLE JOBS IN ONE PDS MEMBER
         LA    R6,1(R6)       INCREMENT POINTER
         BCT   R15,JOBLOOP    CONTINUE SEARCH
FIRSTCD  MVI   TABLE,255      INITIALIZE TABLE TO               MBC
         MVC   TABLE+1(255),TABLE LOOK FOR                      MBC
         MVI   TABLE+C' ',0   NON-BLANK EXCEPT                  MBC
         MVI   TABLE+C'/',0   OR SLASH                          MBC
LOOKPSWD EQU   *                                                MBC
         TRT   0(16,R5),TABLE LOOK FOR NON-BLANK (EX /)         MBC
         BZ    OUTPSWD        NO FIELDS B/4 COL 16              MBC
         CLC   0(11,R1),=C'PASSWORD=, '                         MBC
         BE    FNDPSWD        FOUND                             MBC
         CLC   0(11,R1),=C'PASSWORD=  '                         MBC
         BE    FNDPSWD                                          MBC
OUTPSWD  EQU   *                                                MBC
         LM    R2,R12,PASSAVE
         BR    R10            RETURN                            MBC
PASSAVE  DS    11F
         SPACE 2                                                MBC
FNDPSWD  EQU   *                                                MBC
         CLI   SAVCOMMA,C','  DID LAST CARD HAVE CONTINUATION
         BNE   OUTPSWD        NO - CAN'T USE PASSWORD
         LR    R6,R1          R6 POINTS TO PASSWORD=            MBC
         CLI   9(R6),C','     PASSWORD=,                        MBC
         BNE   NOCOMMA        NO                                MBC
         MVI   17(R6),C','    PASSWORD=,       ,                MBC
         MVI   9(R6),C' '     PASSWORD=        ,
NOCOMMA  EQU   *                                                MBC
         BAL   R10,FINDPASS
         CLI   17(R6),C','    PASSWORD=XXX    ,                 MBC
         BNE   OUTPSWD        NO - EXIT                         MBC
         MVI   17(R6),C' '                                      MBC
         LA    R5,17(R6)      END OF SEARCH                     MBC
         LA    R4,1           INCREMENT                         MBC
         LA    R6,9(R6)       START OF SEARCH                   MBC
LKCOMMA  EQU   *                                                MBC
         CLI   0(R6),C' '     BLANK ? ? ? ?                     MBC
         BE    INSCOMMA       YES - INSERT COMMA                MBC
         BXLE  R6,R4,LKCOMMA                                    MBC
         B     OUTPSWD                                          MBC
INSCOMMA EQU   *                                                MBC
         MVI   0(R6),C','     PASSWORD=XXX,                     MBC
         B     OUTPSWD                                          MBC
 TITLE '***** LOOK UP PASSWORD FOR USER    ****'
FINDPASS EQU   *
         STM   R2,R12,FINDSAVE
         SPACE 3
*
*        SECURITY CHECK
*        MODIFY MUST COME FROM THE MASTER CONSOLE
*        CIBCONID = 01
*
         CLI   CONSID,X'01'        MASTER CONSOLE ? ? ? ?
         BE    AUTHOR              O.K. PROCESS
         CLI   CONSID,X'09'        TAPE CONSOLE ? ? ? ?
         BE    AUTHOR              O.K. PROCESS
         SPACE 5
*
*        JOB NO SUBMITTED FROM MASTER CONSOLE
*        VERIFY THAT USER CAN SUBMIT JOB
*
         CLC   EXTUSER+1(4),=C'    '     WAS USER ID SUPPLIED ? ? ?
         BE    NOAUTH
         CLI   EXTUSER+4,C' '      MUST BE 4
         BE    NOAUTH
         MVC   NUSER,EXTUSER+1     SAVE NEW USER
         SPACE 3
         CLC   EXTGRUP+1(4),=C'    '    CHECK IF GROUP SUPPLIED ? ?
         BE    NOAUTH              NO--
         CLI   EXTGRUP+4,C' '      CHECK LENGTH OF GROUP - IS IT 4
         BE    NOAUTH              NO--
         MVC   NGROUP,EXTGRUP+1    STORE IT
         LA    R1,=C'AUTH'         MAKE
         SVC   231                 AUTHORIZED
         L     R4,ACEEADDR         GET ADDR OF ACEE
         LTR   R4,R4               IS IT THERE ? ?
         USING ACEE,R4
         BNZ   UPDTACEE            YES, GO UPDATE IT
         RACINIT USERID=NID,GROUP=NGRP,ENVIR=CREATE,                   X
               ACEE=ACEEADDR,PASSCHK=NO,SUBPOOL=0
         L     R4,ACEEADDR         GET ADDR OF NEW ACEE
         LTR   R15,R15             CHECK RETURN FROM RACINIT
         BZ    UPDTACEE            OK - CONTINUE
         ABEND 7,DUMP              NO - BOMB IT
UPDTACEE LA    R1,=C'AUTH'         MAKE AUTHORIZED
         SVC   231
         MODESET KEY=ZERO,MODE=SUP
         MVC   ACEEUSRI(4),NUSER   MOVE IN CURRENT USER
         MVC   ACEEGRPN(4),NGROUP  MOVE IN CURRENT GROUP
         MODESET KEY=NZERO,MODE=PROB
         DROP  R4
         RACHECK ENTITY=JOBMEMB,ATTR=READ,CLASS='JOBS',ACEE=(R4)
         LTR   R15,R15             GOOD RETURN
         BZ    AUTHOR              LET IT GO
         CH    R15,=H'4'           CHECK FOR NOT DEFINED TO RACF
         BNE   NOAUTH              NO MEANS DEFINED BUT NOT ALLOWED
         MVC   Z999RET,=F'52'      JOB NOT RACF DEFINED
         CLC   JOBNAME,=C'OPERATOR'  WAS REQUEST FROM OPERATOR
         BNE   NOPAMSG             NO - BYPASS MESSAGE
         CALL  P50233B,(14,JOBMEMB,0,NUSER,JOBNAME),VL
         B     PASSRET             RETURN WITHOUT INSERTING PASSWORD
NOAUTH   MVC   Z999RET,=F'12'      NOT PERMITTED TO SUBMIT JOB
         B     NOPASS
*
*
*
AUTHOR   EQU   *
         LA    R1,AUTH             AUTHORIZATION
         SVC   231
         CALL  P50239,(ID,PASSWD)
         SR    R1,R1
         SVC   231                 REMOVE AUTHORIZATION
         LTR   R15,R15
         BZ    INPASS
         MVC   Z999RET,=F'16'      FAILURE TO INSERT PASSWORD
NOPASS   EQU   *
         CLC   JOBNAME,=C'OPERATOR'  WAS REQUEST FROM OPERATOR
         BNE   NOPAMSG             NO - BYPASS MESSAGE
         CALL  P50233B,(10,JOBMEMB,0,NUSER,JOBNAME),VL WTO
NOPAMSG  B     PASSRET            RETURN WITHOUT INSERTING PASSWORD
INPASS   EQU   *
         L     R6,FINDSAVE+16     RESTORE ORIGINAL R6
         MVC   9(8,R6),PASSWD     PASSWORD
PASSRET  LM    R2,R12,FINDSAVE
         BR    R10
FINDSAVE DS    11F
 TITLE '***** COMMOM ABEND ROUTINE ENTRY IS IN R10 *****'
ABENDXP  EQU   *
         ABEND 6,DUMP              ERROR IN X-MEMORY POST
 TITLE '***** CONSTANTS AND WORKAREAS      ****'
FULLTIME DC    F'0'
EDITTIME DC    X'402020202020'
CONSID   DC    CL1' '
AWAIT    DC    A(IGNORE)
ESAVE    DS    18F
AUTH     DC    CL4'AUTH'
CURRDCB  DC    F'0'
OLDDCB   DC    F'0'
ID       DC    AL1(4)              JOBS USER ID
USER     DC    CL4' '
NID      DC    AL1(4)              SUBMITTERS USER ID
NUSER    DC    CL4' '
NGRP     DC    AL1(4)              JOBS GROUP ID
NGROUP   DC    CL4' '
OLDUSERL DC    AL1(8)
OLDUSER  DC    CL8' '
OLDPASSL DC    AL1(8)
OLDPASS  DC    CL8' '
PASSL    DC    AL1(8)
PASSWD   DC    CL8' '
MBRDRQ1  DC    CL8'MBRDR'
MBRDRQ2  DC    CL8'MASTER'
DUMPHDR  DC    X'10',C'MBRDR ABEND XXX '
         DS    0F
HEXFLD   DS    CL5
         DS    0F
ASCBHEX  DS    CL9                 TRANSLATE WORK AREA
TRANTAB  DC    C'0123456789ABCDEF'
Z999RET  DC    F'00'
ASCBADDR DS    F
XECBADDR DS    F
ACEEADDR DC    A(0)
LINKCPL  LINK  ,SF=L
MOV1PARM MVC   JOBINDEX(0),0(R1)
MOV2PARM MVC   JOBMEMB(0),0(R1)
MOVINDEX MVC   ALTINDEX(0),0(R1)
MOVECOMM MVC   COMMBUF(0),CIBDATA
         USING WTOOD,R1
MOVWTO   MVC   WTOOMFY(0),CIBDATA    MOVE FOR WTO
MOVWTO1  MVC   WTOOMFY(0),0(R3)      MOVE FOR WTO
         DROP  R1
CLCJOB   CLC   2(0,R5),JOBMEMB     COMPARE FOR JOB NAME
JOBLEN   DC    F'0'                LENGTH OF JOB NAME
EOJ      DC    CL80'/*EOF'
DEL      DC    CL80'/*PURGE'
SAVCOMMA DC    C' '              CONTINUATION CARD WORK AREA
COMMA    DC    C' '              CONTINUATION CARD WORK AREA
ANCHOR   DS    F
SAVE     DS    11F
COMMLNTH DC    H'0'               LENGTH OF COMMAND ENTERED
COMMBUF  DC    CL80' '            COMMAND SAVE AREA
COMMAREA DC    F'0'               ADDRESS OF CIB ECB & CIB ANCHOR
         DS    0F
WAITECB  DC    X'80',XL3'00'  ECB ADDRESS
         DS    0F
ANSWER   DC    F'0'
ECTDUMY  DC    2F'0'
         DS    0F
JOBLIB   DS    0CL46
         DC    AL2(11)
JOBINDEX DC    CL5'MB98.'
         DC    CL39'F01640'
JOBMEMB  DC    CL8' '             JOB MEMBER NAME
         DC    CL1' '             PADDING FOR JOB NAME COMPARE
JOBDDN   DC    CL8'JOBS'          DDNAME FOR SUBMIT
         DS    0F
ALTLIB   DS    0CL46
         DC    AL2(11)
ALTINDEX DC    CL5'MBXX.'
ALT1640  DC    CL39'F01640'
ALTDDN   DC    CL8'ALTJOBS'       DDNAME FOR SUBMIT
JCL      DC    F'0'               ADDRESS OF JCL BLOCK
JCLONG   DC    H'0'               LENGTH OF JCL BLOCKS
JOBNAME  DC    D'0'               SAVE AREA FOR SENDING JOB NAME
EXTCLEAR MVC   2(0,R2),1(R2)        MOVE INSTR FOR EXECUTE
PARSRET  DC    F'0'                 RETURN ADDR
EXTINDX  DC    X'4'                 MAX LENGTH OF INDEX
         DC    CL4'    '            INDEX VALUE
EXTJOB   DC    X'8'                 MAX LENGTH OF JOB
         DC    CL8'        '        JOB NAME
EXTUSER  DC    X'4'                 MAX LENGTH OF USER ID
         DC    CL4'    '            USER ID
EXTGRUP  DC    X'4'                 MAX LENGTH OF GROUP
         DC    CL4'    '            GROUP
EXTHEX   DC    X'19'                MAX LENGTH OF HEX DATA
         DC    CL19'                  '  HEX DATA
HEXD     DC    2F'0'                OUTPUT AREA FOR ASCB ADDR
HEXWORK  DC    CL5'     '           WORK AREA
         DS    0F
PTABLE   DC    193X'00'             TRANSLATE TABLE
         DC    X'0A0B0C0D0E0F'
         DC    41X'00'
         DC    X'00010203040506070809'
WTOLIST  WTO 'MBRDR036   F MBRDR **************************************X
               ******************************************',            X
               ROUTCDE=(2),MF=L
WTOERR   WTO 'MBRDR037   ERROR   **************************************X
               ******************************************',            X
               ROUTCDE=(1),DESC=(2),MF=L
 TITLE '***** DCBS FOR JOBLIB AND INTRDR    ******'
JOBS     DCB   DDNAME=JOBS,                                            X
               DSORG=PO,                                               X
               EODAD=EPO,                                              X
               MACRF=R
ALTDCB   DCB   DDNAME=ALTJOBS,                                         X
               DSORG=PO,                                               X
               EODAD=EPO,                                              X
               MACRF=R
JES      DCB   DDNAME=JES,                                             X
               DSORG=PS,                                               X
               LRECL=80,                                               X
               BLKSIZE=80,                                             X
               BUFNO=1,                                                X
               RECFM=FB,                                               X
               MACRF=PM
         PRINT GEN
         LTORG
TABLE    DS    XL256               USED FO JOB CARD SCAN        UIC TSO
 TITLE '***** CIB DSECT                           ****'
CIBSECT  DSECT ,              COMMAND INPUT BUFFER MAPPING
CIBCIB   DS    F              ADDRESS OF NEXT CIB IN CHAIN
CIBVERB  DS    C              CIB VERB CODE
CIBSIZE  DS    C              SIZE OF THE COMMAND INPUT BUFFER
CIBRSVD1 DS    H              RESERVED
CIBRSVD2 DS    C              RESERVED
CIBTSOID DS    CL3            TSO TERMINAL ID
CIBCONID DS    C              CONSOLE ID OF STARTED TASK
CIBRSVD3 DS    C              RESERVED
CIBDSIZE DS    H              SIZE OF USER DATA WITHIN CIB
CIBDATA  DS    C              COMMAND DATA AS ENTERED BY OPERATOR
WTOOD    DSECT            WTO MACRO EXPANSION
WTOOLEN  DS    2C             LENGTH OF DATA FOR WRITE
WTOOFLG  DS    2C             FLAGS
WTOOMSG  DS    0CL99          TEXT TO BE WRITTEN
         DS    CL11           "MBRDR036   "
WTOOVRB  DS    CL1            F OR P
         DS    CL7            " MBRDR "   - 'MBRDR036   F MBRDR '
WTOOMFY  DS    CL80           ACTUAL MODIFY COMMAND
WTOODES  DS    2C             DESCRIPTOR CODE
WTOORTE  DS    2C             ROUTE CODE
 TITLE '***** CVT                         ****'
         CVT   LIST=YES,DSECT=YES
 TITLE '***** ASCB                        ****'
         IHAASCB
 TITLE '***** DAIR PARAMETER LIST         ****'
         IKJDAPL
DAPLONG  EQU   *-DAPL
 TITLE '***** DAIR CONTROL 8 FOR ALLOC    ****'
         IKJDAP08
DA08LONG EQU   *-DAPB08
 TITLE '***** DAIR CONTROL 18 FOR FREE    ****'
         IKJDAP18
DA18LONG EQU   *-DAPB18
 TITLE '***** ADDRESS SPACE EXTENSION BLOCK **'
         IHAASXB
 TITLE '***** ACCESSOR ENVIRONMENT ELEMENT  **'
         IHAACEE
         END
