*          DATA SET P01616     AT LEVEL 001 AS OF 01/15/81
         TITLE 'P01616 - INTERFACE HANDLER UTILITY ROUTINE'
P01616   START
*
*        THIS ROUTINE WILL PROVIDE DYNAMIC LOADING OF CALLED
*              MODULES. THIS WILL ELIMINATE THE NEED TO
*              RE-LINKEDIT MAINLINE PROGRAMS IN ORDER TO
*              INSTALL NEW VERSIONS OF CALLED ROUTINES. A FRESH
*              COPY WILL BE LOADED AS PART OF PROGRAM
*              EXECUTION.
*
*
*        USAGE - CALL P01616 (MODNM,FUNC,MARGS)
*
*                   WHERE
*
*                        MODNM - MODULE NAME, 8 CHARACTERS
*                                  NAME LEFT JUSTIFIED, BLANK FILLED
*
*                        FUNC  - FUNCTION TO BE PERFORMED. FUNCTIONS
*                                  ARE DESCRIBED ON FOLLOWING PAGE
*
*                        MARGS - 0 OR MORE ARGUMENTS TO BE PASSED
*                                  TO THE CALLED MODULE.
*
*        RESTRICTIONS - ONLY 256 UNIQUE MODULES MAY BE PROCESSED
*              AT ONCE. AN ATTEMPT TO USE MORE WILL RESULT IN
*              A USER(200) ABEND.
*
         EJECT
*
*        ROUTINE FUNCTIONS.
*
*        FOUR FUNCTIONS ARE PROVIDED
*
*              (1) LOAD, DO NOT INVOKE       CODE = 'L'
*                        THE REQUESTED MODULE WILL BE LOADED,
*                             BUT CONTROL WILL NOT BE PASSED
*                             TO IT.
*
*              (2) DELETE                    CODE = 'D'
*                        THE REQUESTED MODULE WILL BE DELETED.
*
*              (3) LOAD, MULTIPLE USE        CODE = 'M'
*                        THE REQUESTED MODULE WILL BE LOADED
*                             AND CONTROL WILL BE PASSED TO
*                             THE MODULE. FOLLOWING RETURN, THE
*                             MODULE WILL BE RETAINED SO THAT
*                             SUBSEQUENT CALLS WILL NOT REQUIRE
*                             RELOADING.
*
*              (4) LOAD, SINGLE USE          CODE = 'S'
*                        THE REQUESTED MODULE WILL BE LOADED
*                             AND CONTROL WILL BE PASSED
*                             TO THE MODULE. FOLLOWING RETURN,
*                             THE MODULE WILL BE DELETED.
*
         EJECT
*
*        ABENDS
*
*              USER CODE      MEANING
*
*                   200            MORE THAN 256 MODULES
*                   201            INVALID FUNCTION CODE
*
         EJECT
         STREG
         EJECT
*
*        ESTABLISH STANDARD LINKAGE
*
BGNADDR  SAVE  (14,12),,*
         BALR  R2,R0               R2 - BASE REGISTER
         USING *,R2
         LA    R3,SAVEAREA         CHAIN SAVE AREAS
         ST    R13,4(R3)
         ST    R3,8(R13)
         LR    R13,R3
         ST    R1,SAVE1            SAVE REGISTER 1
         B     TSTFUNC
         DS    0F
SAVEAREA DC    18F'0'
SAVE1    DC    F'0'
         EJECT
*
*        EXAMINE FUNCTION CODE
*              IF FUNCTION NOT VALID, ABEND WITH USER CODE 201
*
TSTFUNC  L     R3,SAVE1
         L     R3,4(R3)            R3 - ADDR OF FUNCTION CODE
         LA    R5,FUNCTBL
NEXTFUNC CLI   0(R5),X'FF'         END OF TABLE ?
         BE    BADFUNC
         CLC   0(1,R5),0(R3)       CHECK THE FUNCTION
         BE    GOTFUNC
         LA    R5,8(R5)            NEXT ONE
         B     NEXTFUNC
         SPACE 3
BADFUNC  LA    R1,201              ABEND USER 201
         B     DUMPIT
         SPACE 3
GOTFUNC  L     R4,4(R5)            ROUTINE START ADDRESS
         BR    R4
         SPACE 5
*
*        FUNCTION TABLE
*
*
         DS    0D
FUNCTBL  EQU   *
         DC    CL4'M   ',A(LDMULT)
         DC    CL4'S   ',A(LDSNGL)
         DC    CL4'L   ',A(ULOAD)
         DC    CL4'D   ',A(UDELETE)
         DC    8XL1'FF'
         EJECT
*
*        RETN - RETURN TO THE CALLER
*
RETN     L     R13,SAVEAREA+4
         RETURN (14,12),,RC=0
         EJECT
*
*        SEVERE ERROR, ABEND
*
         DS    0F
DUMPIT   EQU   *
         OPEN  (SNAPDCB,(OUTPUT))
         SNAP  DCB=SNAPDCB,SDATA=Q,PDATA=ALL,STORAGE=(BGNADDR,ENDADDR)
         CLOSE SNAPDCB
         ABEND (R1)
         EJECT
*
*        LDMULT - LOAD A ROUTINE FOR MULTIPLE USE
*
         DS    0F
LDMULT   L     R4,SAVE1
         L     R5,0(R4)            R5 - ADDRESS OF MODULE NAME
         LR    R10,R5
         BAL   R12,FINDMCB         FIND THE CONTROL BLOCK
         LTR   R11,R11             IS THERE ONE
         BNZ   LMCALL
         SPACE 3
         LR    R10,R5              LOAD THE MODULE
         BAL   R12,LOAD
         SPACE 3
LMCALL   LR    R1,R4               CALL THE MODULE
         LA    R1,8(R1)            SKIP FIRST TWO ARGUMENTS
         L     R15,8(R11)
         BALR  R14,R15
         B     RETN
         EJECT
*
*        LDSNGL - LOAD A ROUTINE FOR SINGLE USE
*
         DS    0F
LDSNGL   L     R4,SAVE1
         L     R5,0(R4)            R5 - ADDRESS OF MODULE NAME
         LR    R10,R5
         BAL   R12,FINDMCB         FIND THE CONTROL BLOCK
         LTR   R11,R11
         BNZ   LSCALL
         SPACE 3
         LR    R10,R5              LOAD THE MODULE
         BAL   R12,LOAD
         SPACE 3
LSCALL   LR    R1,R4               CALL THE MODULE
         LA    R1,8(R1)            SKIP FIRST TWO ARGUMENTS
         L     R15,8(R11)
         BALR  R14,R15
         SPACE 3
         BAL   R12,DELETE          DELETE THE MODULE
         B     RETN
         EJECT
*
*        ULOAD - USER LOAD OF A MODULE
*
         DS    0F
ULOAD    L     R4,SAVE1
         L     R5,0(R4)            R5 - ADDRESS OF MODULE NAME
         LR    R10,R5
         BAL   R12,FINDMCB         IS THERE ALREADY ONE ?
         LTR   R11,R11
         BNZ   ULOADOK
         SPACE 3
         LR    R10,R5              LOAD THE MODULE
         BAL   R12,LOAD
         SPACE 3
ULOADOK  B     RETN                LOAD DONE, RETURN
         EJECT
*
*        UDELETE - USER DELETE OF A MODULE
*
         DS    0F
UDELETE  L     R4,SAVE1
         L     R5,0(R4)            R5 - ADDRESS OF MODULE NAME
         LR    R10,R5
         BAL   R12,DELETE
         B     RETN
         EJECT
*
*        LOAD - LOAD A MODULE
*              R10 - INPUT, ADDRESS OF MODULE NAME
*              R11 - OUTPUT, ADDRESS OF MODULE CONTROL BLOCK
*              R12 - INPUT, RETURN ADDRESS
*              R3  - WORK REGISTER
*
         DS    0F
LOAD     STM   R10,R12,LDSAVER
         LA    R10,LDZERO          FIND AN OPEN CTL BLOCK
         BAL   R12,FINDMCB
         L     R10,LDSAVER
         MVC   0(8,R11),0(R10)     MOVE IN MODULE NAME
         MVC   LDMODNM(8),0(R10)
         LOAD  EPLOC=LDMODNM       LOAD THE MODULE
         ST    R0,8(R11)           SAVE THE ENTRY POINT
         L     R12,LDSAVER+8       RETURN
         BR    R12
         DS    0F
LDSAVER  DC    3F'0'
LDMODNM  DC    CL8' '
LDZERO   DC    8XL1'00'
         EJECT
*
*        DELETE - DELETE A MODULE
*              R10 - INPUT, ADDRESS OF MODULE NAME
*              R11 - USED AS WORK REGISTER
*              R12 - INPUT, RETURN ADDRESS
*
         DS    0F
DELETE   ST    R12,DLSAVE12
         BAL   R12,FINDMCB         FIND THE CTL BLOCK
         LTR   R11,R11             IS THERE ONE
         BZ    DLRETN
         MVC   0(12,R11),DLZEROS   CLEAR THE FILE CTL BLOCK
         MVC   DLMODNM(8),0(R10)   DELETE THE MODULE
         DELETE EPLOC=DLMODNM
DLRETN   L     R12,DLSAVE12
         BR    R12
         DS    0F
DLSAVE12 DC    F'0'
DLMODNM  DC    CL8' '
DLZEROS  DC    12XL1'00'
         EJECT
*
*        FIND OR CREATE A MODULE CONTROL BLOCK
*              IF NONE AVAILABLE, ABEND USER CODE 200
*                   R10 - INPUT, ADDRESS OF MODULE NAME
*                   R11 - OUTPUT, ADDRESS OF MODULE CONTROL BLOCK
*                   R12 - INPUT, RETURN ADDRESS
*                   R3 - WORK REGISTER
*
         DS    0F
FINDMCB  LA    R3,MCBTBL
         SR    R11,R11             R11 = 0
NEXTMCB  CLC   0(8,R3),MCBTBLEN    END OF TABLE ?
         BE    MCBMISS
         CLC   0(8,R3),0(R10)      CHECK MODULE NAME
         BE    GOTMCB
         LA    R3,12(R3)           NEXT ONE
         B     NEXTMCB
         SPACE 3
MCBMISS  CLC   0(8,R10),MCBZEROS   MODULE NAME = BINARY ZEROES
         BNE   MCBRETN
         LA    R1,200              NO ROOM IN TABLE, ABEND
         B     DUMPIT
         SPACE 3
GOTMCB   LR    R11,R3
         SPACE 3
MCBRETN  BR    R12                 RETURN
         EJECT
*
*        SNAP DUMP DCB
*
SNAPDCB  DCB   DDNAME=SNAPDCB,DSORG=PS,RECFM=VBA,MACRF=W,              X
               BLKSIZE=882,LRECL=125
         EJECT
*
*        MODULE CONTROL BLOCK TABLE
*
         DS    0F
MCBZEROS DC    8XL1'00'
MCBTBL   DC    256XL12'00'         256 - 12 BYTE ENTRIES
MCBTBLEN DC    8XL1'FF'
         SPACE 3
ENDADDR  EQU   *
         END   P01616
