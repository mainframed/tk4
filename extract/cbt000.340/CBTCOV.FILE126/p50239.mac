*          DATA SET P50239     AT LEVEL 002 AS OF 06/30/80
*          DATA SET P50239     AT LEVEL 001 AS OF 06/30/80
P50239   $PROLOG
         EJECT
         SPACE  10
***********************************************************************
*                                                                     *
*  DECRYPT IS A SUBROUTINE WHICH DECRYPTS RACF PASSWORDS. IT CAN BE   *
*  ENTERED WITH A STANDARD OS CALL OF THE FORM                        *
*                                                                     *
*          CALL DECRYPT,(ID,PASSWORD)                                 *
*                                                                     *
*      WHERE  ID IS A 1 BYTE LENGTH FOLLOWED BY THE RACF USER ID WHOS *
*                PASSWORD IS TO BE DECRYPTED                          *
*                                                                     *
*             PASSWORD IS AN 8 BYTE FIELD INTO WHICH THE DECRYPTED    *
*                PASSWORD WILL BE RETURNED                            *
*                                                                     *
*  THE ONLY RESTRICTION FOR USE OF THIS SUBROUTINE IS THE CALLER MUST *
*  BE APF AUTHORIZED                                                  *
*                                                                     *
***********************************************************************
         EJECT
         LR    R3,R1               SAVE PARM ADDR
         GETMAIN R,LV=WRKLEN       GET WORK STORAGE
         LR    R2,R1               SAVE ADDR OF AREA
         MVC   0(WRKLEN,R2),WRKBEG MOVE IN WORK STUFF
         USING WRKBEG,R2           SET UP ADDRESSIBILITY
         L     R4,0(R3)            GET ADDR OF ID FIELD
         ICHEINTY MF=(E,REQUEST),ENTRY=(R4),                           X
               WKAREA=WORK,ACTIONS=ACTLST
         LTR   R15,R15             WAS LOCATE OF ID SUCCESSFUL
         BNZ   EXIT                NO-- GET OUT
         LA    R4,WORK+30          GET ADDR OF ENCRYPTED PASSWORD
         L     R5,0(R4)            GET FIRST 4 BYTES
         N     R5,=X'E0000000'     LEAVE 1ST 3 BITS ALONE
         ST    R5,OPASS            PUT IT IN ORIGINAL PASSWORD
         L     R1,SHIFT            GET INITIAL SHIFT VALUE
LOOP     LM    R6,R7,OPASS         GET ORIGINAL PASSWORD
         SRDL  R6,0(R1)            SHIFT RIGHT
         SH    R1,=H'3'            ADJUST SHIFT
         BNM   STORE               IF NON NEGATIVE, CONTINUE
         LA    R1,0                OTHERWISE SET SHIFT TO ZERO
STORE    EQU   *
         LM    R8,R9,WORK+30       GET ENCRYPTED PASSWORD
         SRDL  R8,0(R1)            SHIFT IT
         XR    R9,R7               OR 3 LOW ORDER BYTES
         SRL   R7,1                SHIFT ORIGINAL 1 MORE
         XR    R7,R9               OR IT AGAIN
         STM   R6,R7,WORK          STORE IT FOR A WHILE
         LTR   R1,R1               CHECK IF AT END
         BNZ   PURIFY01            NO--
         NI    PURIFY+7,X'F9'      YES--TURN OFF THIRD LAST BIT
PURIFY01 NC    WORK(8),PURIFY      CLEAR HIGH ORDER 61 BITS
         LM    R6,R7,WORK          LOAD IT
         SLDL  R6,0(R1)            SHIFT IT BACK
         STM   R6,R7,WORK          STORE IT AGAIN
         XC    OPASS,WORK          OR IN NEXT 3 BITS
         LTR   R1,R1               ARE WE DONE???
         BNZ   LOOP                NO--LOOP THROUGH
         L     R4,4(R3)            GET ADDR OF PASSWORD
         MVC   0(8,R4),OPASS       MOVE IN PASSWORD
         FREEMAIN R,LV=WRKLEN,A=(R2)
         XR    R15,R15             CLEAR R15 FOR RETURN CODE
EXIT     $EPILOG
         LTORG
WRKBEG   EQU   *
ACTLST   ICHEACTN MF=L,FIELD=PASSWORD
REQUEST  ICHEINTY LOCATE,MF=L,TYPE='USR',ACTIONS=ACTLST,WKAREA=WORK
WORK     DC    F'40'
         DC    XL40'00'
SHIFT    DC    F'61'
OPASS    DC    XL8'0000000000000000'
PURIFY   DC    7X'00',X'07'        PURIFY HIGH ORDER BITS
WRKLEN   EQU   *-WRKBEG            LENGTH OF WORK AREA
         END
