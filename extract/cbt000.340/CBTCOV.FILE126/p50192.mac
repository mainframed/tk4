*          DATA SET P50192     AT LEVEL 004 AS OF 12/07/79
P50192   TITLE 'RACF DATASET PROCESSOR - MILLER BREWING COMPANY'
P50192   CSECT
         PRINT NOGEN
         PRIME REG=12,ID=_M.B.C._&SYSDATE_&SYSTIME_
         REGISTER
*
* THIS PROGRAM PRINTS A REPORT OF THE RACF PROTECTED DATASETS FROM
* A FILE CREATED BY AN EXTRACT PROGRAM.  THE LISTING INCLUDES USERID,
* ACCESS, DSN, OWNER, VOL, AND UACC.  THE SELECTION IS BASED ON THE
* EXECUTION TIME PARM FIELD, AND IS REQUIRED.
*
* REGISTER USAGE
*         3 - WORK REGISTER
*         4 - WORK REGISTER
*        10 - INTERNAL LINKAGE TO PUTLINE
*        11 - INTERNAL LINKAGE TO SUBROUTINES
*        12 - BASE REGISTER
*
         L     R1,0(R1)            GET ADDRESS OF PARM DATA AREA
         ST    R1,@PARM            SAVE THE ADDRESS
         OPEN  (IN,(INPUT),OUT,(OUTPUT))
*
* THIS WILL PUT THE DATE AND TIME IN THE PAGE HEADINGS
*
         TIME
         STM   R0,R1,DBL           R0 & R1 RETURNED FROM TIME MACRO
         UNPK  WORK1,DBL           SAVE TIME AND DATE
         PACK  PKWRK,WRKYR
         DP    PKWRK,FOUR          DIVIDE YEAR BY 4
         CP    PKWRK+2(1),ZERO     IS REMAINDER ZERO?
         BNE   NOTLEAP             NO, ITS NOT A LEAP YEAR
         AP    MONTHS+8(2),ONE     YES, ADD A DAY TO FEBURARY
NOTLEAP  EQU   *
         PACK  PKWRK,WRKDAY
         LA    R3,MONTHS-5         BEGINING OF MONTH TABLE MINUS 5
NEXTMON  EQU   *
         LA    R3,5(R3)            INCREMENT TO NEXT MONTH
         SP    PKWRK,3(2,R3)       SUBTRACT NUM DAYS IN THIS MONTH
         BP    NEXTMON             STILL POSTITVE? TRY NEXT MONTH
         SPACE 1
         AP    PKWRK,3(2,R3)       ADD BACK IN TO GET DAY-OF-MONTH
         OI    PKWRK+2,X'0F'
         UNPK  HD1DOM,PKWRK        MOVE DAY-OF-MONTH TO HEADING
         MVC   HD1MON,0(R3)        MOVE MONTH NAME TO HEADING
         MVC   HD1GYR,WRKYR        MOVE GREG. YEAR TO HEADING
         MVC   HD1YR,WRKYR         MOVE JUL. YEAR TO HEADING
         MVC   HD1DAY,WRKDAY       MOVE JUL. DAY TO HEADING
         MVC   HD2HRS,WRKHRS       MOVE HOURS TO HEADING
         MVC   HD2MIN,WRKMIN       MOVE MINUTES TO HEADING
         MVC   HD2SEC,WRKSEC       MOVE SECONDS TO HEADING
         MVC   OUTREC,BLANKS       INITIALIZE OUTPUT LINE
         ZAP   PGCOUNT,ZERO        INITIALIZE PAGE-COUNT TO ZERO
         ZAP   LNCOUNT,LNMAX       INITIALIZE LINE-COUNT TO END-OF-PAGE
         SPACE 3
         L     R1,@PARM
         LH    R3,0(R1)            PUT LENGTH FIELD IN R3
         LTR   R3,R3               IS IT EQUAL TO ZERO?
         BZ    NOGOOD              YES, PARM FIELD IS MISSING
         BCTR  R3,0                SUBTRACT 1 FOR INST LENGTH
         EX    R3,SAVEPARM         SAVE FOR LATER USE
         MVC   HD3PARM,PARMDATA    MOVE PARMDATA TO HEADING
         LA    R4,2(R3,R1)
         ST    R4,@PARMEND
         LA    R1,1(R1)            R1 = @-1 OF DATA
         SR    R2,R2
SCANLOOP EQU   *
         BAL   R11,SCAN
         LTR   R15,R15             IS RETURN CODE=0?
         BNZ   GETRECRD            NO, SCAN COMPLETE - PROCESS RECORDS
         LA    R3,X'7E'
         CR    R2,R3               IS R2 AN EQUAL SIGN?
         BNE   NOGOOD              NO, THIS IS AN ERROR
         CLC   PARMCHEK,USERCODE   IS REQUEST BY USER?
         BE    BYUSER              YES, PROCESS REQUEST.
         CLC   PARMCHEK,ACCSCODE   IS REQUEST BY ACCESS?
         BE    BYACCS              YES, PROCESS REQUEST.
NOGOOD   EQU   *
         MVC   OUTREC,ERRMSG1      MOVE ERROR MESSAGE TO OUTPUT
         BAL   R10,PUTLINE         WRITE MESSAGE
         B     EOJ                 EXIT FROM PROGRAM
         SPACE 2
SAVEPARM MVC   PARMDATA(0),2(R1)   EXECUTED INSTRUCTION
         SPACE 2
BYUSER   EQU   *                   *** BY ACCESS LIST USER ***
         BAL   R11,SCAN
         LTR   R15,R15             IS RETURN CODE=0?
         BNZ   NOGOOD
         TM    SW2,CHEKUSER        DUPLICATE ENTRY?
         BO    NOGOOD              YES, ERROR
         MVC   USER,PARMCHEK
         OI    SW2,CHEKUSER
         B     SCANLOOP
         SPACE
BYACCS   EQU   *                   *** BY ACCESS LIST AUTHORITY ***
         BAL   R11,SCAN
         LTR   R15,R15             IS RETURN CODE=0?
         BNZ   NOGOOD
         TM    SW2,CHEKACCS+CHEKINCL DUPLICATE ENTRY?
         BO    NOGOOD              YES, ERROR
         CLC   ALLCODES,PARMCHEK
         BE    INCLUDE
         MVC   ACCS,PARMCHEK
         OI    SW2,CHEKACCS
         CLC   NONECODE,PARMCHEK
         BNE   SCANLOOP
INCLUDE  EQU   *                   *** INCLUDE ACCESS=NONE ***
         OI    SW2,CHEKINCL
         B     SCANLOOP
         SPACE
         EJECT
GETRECRD EQU   *
         GET   IN,INREC
         TM    SW2,CHEKINCL
         BO    SKIPINCL
         CLI   INACCS+1,X'01'
         BE    GETRECRD
SKIPINCL EQU   *
         LH    R4,INACCS
         MH    R4,HSIX             MULTIPLY TO GET DISPLACEMENT
         LA    R4,ACCSWORD-6(R4)   ADD DISPL TO @ACCSWORD MINUS SIX
         MVC   OUTACCS,0(R4)
         TM    SW2,CHEKACCS
         BZ    SKIPACCS
         CLC   ACCS,OUTACCS
         BNE   GETRECRD
SKIPACCS EQU   *
         TM    SW2,CHEKUSER
         BZ    SKIPUSER
         CLC   USER,INUSER
         BNE   GETRECRD
SKIPUSER EQU   *
         SPACE
         TS    SW1                 INDICATE AT LEAST ONE RECORD PRINTED
         MVC   OUTUSER,INUSER
         MVC   OUTDSN,INDSN
         MVC   OUTVOL,INVOL
         MVC   OUTOWN,INOWN
         LH    R4,INUACC
         MH    R4,HSIX             MULTIPLY TO GET DISPLACEMENT
         LA    R4,ACCSWORD-6(R4)   ADD DISPL TO @ACCSWORD MINUS SIX
         MVC   OUTUACC,0(R4)
         BAL   R10,PUTLINE
         B     GETRECRD
         EJECT
*
* THIS SUBROUTINE SCANS THE EXECUTION PARAMETER FOR SPECIAL CHARACTERS
*
* ON ENTRY: R1 POINTS TO THE CHARACTER BEFORE THE NEXT ONE TO BE SCANED
* ON EXIT:  R1 POINTS TO THE LAST CHARACTER PROCESSED
*           R15 = ZERO IF DATA WAS MOVED
*           R15 = FOUR IF DATA WAS NOT MOVED, IE. END OF PARM REACHED
*
SCAN     EQU   *
         MVC   PARMCHEK,BLANKS
         LA    R15,4               SET RETURN CODE = 4 TO START
         L     R3,@PARMEND         COMPUTE LENGTH
         SR    R3,R1                 FOR THIS EXECUTE
         BCTR  R3,0                    INSTRUCTION
         LTR   R3,R3               IS IT LESS THAN ZERO?
         BNP   SCANDONE            YES, END OF PARM REACHED
         LA    R4,1(R1)            SAVE BEGINING ADDRESS OF DATA
         EX    R3,SCANPARM         SCAN PARMDATA FOR "," OR "="
         BZ    SCANZERO            CC = 0 , NO CHARACTERS FOUND
         LR    R3,R1
         SR    R3,R4
         BCTR  R3,0
         B     SCANSAVE
SCANZERO EQU   *
         LA    R1,0(R3,R1)         SET R1 IF NO CHAR FOUND (CC=0)
SCANSAVE EQU   *
         EX    R3,SCANMOVE
         SR    R15,R15             SET ZERO RETURN CODE
SCANDONE EQU   *
         BR    R11
SCANPARM TRT   1(0,R1),TABLE       EXECUTED INSTRUCTION
SCANMOVE MVC   PARMCHEK(0),0(R4)   EXECUTED INSTRUCTION
         SPACE 3
*
* THIS SUBROUTINE WILL PRINT THE OUTPUT LINE AND SKIP TO THE
*  TOP OF THE PAGE TO PRINT THE HEADINGS WHEN NECESSARY
*
PUTLINE  EQU   *
         AP    LNCOUNT,ONE         ADD 1 TO LINE-COUNT
         CP    LNCOUNT,LNMAX       IS IT THE END-OF-PAGE?
         BNH   PUTREC              NO, DONT PRINT HEADINGS
         PUT   OUT,HEADING1
         AP    PGCOUNT,ONE         ADD 1 TO PAGE-COUNT
         MVC   HD2PAGE,PAGEMASK    MOVE EDIT MASK TO OUTPUT LINE
         ED    HD2PAGE,PGCOUNT     EDIT PAGE-COUNT INTO OUTPUT LINE
         PUT   OUT,HEADING2
         PUT   OUT,HEADING3
         PUT   OUT,HEADING4
         PUT   OUT,BLANKS
         ZAP   LNCOUNT,ONE         RE-INITIALIZE LINE-COUNT
PUTREC   EQU   *
         PUT   OUT,OUTREC
         MVC   OUTREC,BLANKS       RE-INITIALIZE OUTPUT LINE
         BR    R10
         SPACE 3
*
* THIS IS THE END-OF-JOB / END-OF-FILE ROUTINE
*   IT WILL PRINT AN ERROR MESSAGE IF NO RECORDS WERE FOUND
*
EOF      EQU   *
         CLI   SW1,X'00'
         BNE   EOJ
         MVC   OUTREC,ERRMSG2
         BAL   R10,PUTLINE
EOJ      EQU   *
         CLOSE (IN,,OUT)
         SR    R15,R15             RETURN
         TERME                       LINKAGE
         EJECT
         LTORG
DBL      DS    D
@PARM    DS    F
@PARMEND DS    F
HSIX     DC    H'6'
ZERO     DC    P'0'
ONE      DC    P'1'
FOUR     DC    P'4'
PKWRK    DS    PL3
PGCOUNT  DS    PL3
PAGEMASK DC    X'402020202021'
LNCOUNT  DS    PL2
LNMAX    DC    P'52'
BLANKS   DC    CL133' '
PARMDATA DC    CL100' '
PARMCHEK DC    CL10' '
USERCODE DC    CL10'USER'
USER     DC    CL8' '              USER TO BE SELECTED
ACCSCODE DC    CL10'ACCESS'
ACCS     DC    CL6' '              ACCESS AUTHORITY TO BE SELECTED
NONECODE DC    CL10'NONE'
ALLCODES DC    CL10'ALL'
ACCSWORD DC    C'NONE  READ  UPDATECONTRLALTER '
SW1      DC    X'00'
SW2      DC    X'00'
CHEKUSER EQU   X'08'
CHEKACCS EQU   X'04'
CHEKINCL EQU   X'02'
WORK1    DS    0CL15
WRKHRS   DS    CL2
WRKMIN   DS    CL2
WRKSEC   DS    CL2
         DS    CL4
WRKYR    DS    CL2
WRKDAY   DS    CL3
         SPACE 1
MONTHS   DS    0CL60
         DC    C'JAN',X'031F'
         DC    C'FEB',X'028F'
         DC    C'MAR',X'031F'
         DC    C'APR',X'030F'
         DC    C'MAY',X'031F'
         DC    C'JUN',X'030F'
         DC    C'JUL',X'031F'
         DC    C'AUG',X'031F'
         DC    C'SEP',X'030F'
         DC    C'OCT',X'031F'
         DC    C'NOV',X'030F'
         DC    C'DEC',X'031F'
         SPACE 2
TABLE    DS    0CL256
         DC    107X'00'
COMMA    EQU   *-TABLE
         DC    X'6B'               X'6B' = C','
         DC    18X'00'
EQUAL    EQU   *-TABLE
         DC    X'7E'               X'7E' = C'='
         DC    129X'00'
ENDTBL   EQU   *
         EJECT
IN       DCB   DDNAME=IN,EODAD=EOF,DSORG=PS,MACRF=GM
         SPACE
INREC    DS    0CL264
INUSER   DS    CL8                 ACCESS LIST USER
INACCS   DS    H                   ACCESS AUTHORITY CODE
INDSN    DS    CL44                DSNAME
INVOL    DS    CL6                 VOLUME (ONLY FIRST VOL CAPTURED)
INOWN    DS    CL8                 OWNER
INUACC   DS    H                   UACC CODE
         SPACE 2
OUT      DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=PM,RECFM=FA,LRECL=133
         SPACE
OUTREC   DS    0CL133
         DS    C
OUTUSER  DS    CL8
         DS    CL6
OUTACCS  DS    CL6
         DS    CL11
OUTDSN   DS    CL44
         DS    CL6
OUTVOL   DS    CL6
         DS    CL11
OUTOWN   DS    CL8
         DS    CL6
OUTUACC  DS    CL6
OUTEND   EQU   *-OUTREC
         DC    CL(133-OUTEND)' '
         SPACE 2
         EJECT
HEADING1 DS    0CL133
         DC    C'1'                 NEW PAGE
         DC    C' '
         DC    CL8'P50192'
         DC    C' '
         DC    C'MILLER BREWING COMPANY'
         DC    CL61' '
         DC    C'RUN DATE : '
HD1YR    DC    C'YY'
         DC    C'.'
HD1DAY   DC    C'DDD'
         DC    CL3' '
HD1DOM   DC    CL2'DD'
         DC    C' '
HD1MON   DC    CL3'MMM'
         DC    C' '
HD1GYR   DC    C'YY'
EHD1     EQU   *-HEADING1
         DC    CL(133-EHD1)' '
         SPACE 1
HEADING2 DS    0CL133
         DC    C'0'                 DOUBLE SPACE
         DC    CL10' '
         DC    C'RACF DATASET PROCESSOR'
         DC    CL61' '
         DC    C'RUN TIME : '
HD2HRS   DC    C'HH'
         DC    C'.'
HD2MIN   DC    C'MM'
         DC    C'.'
HD2SEC   DC    C'SS'
         DC    C' '
         DC    C'PAGE '
HD2PAGE  DC    C'000000'
EHD2     EQU   *-HEADING2
         DC    CL(133-EHD2)' '
         SPACE 1
HEADING3 DS    0CL133
         DC    C'0'                 DOUBLE SPACE
         DC    CL12' '
         DC    C'ACCESS AUTHORITY '
HD3PARM  DC    CL100' '
EHD3     EQU   *-HEADING3
         DC    CL(133-EHD3)' '
         SPACE 1
HEADING4 DS    0CL133
         DC    C'0'                 DOUBLE SPACE
         DC    C' '
         DC    C'USER'
         DC    CL9' '
         DC    C'ACCESS'
         DC    CL20' '
         DC    C'DATASET NAME'
         DC    CL29' '
         DC    C'VOLUME'
         DC    CL12' '
         DC    C'OWNER'
         DC    CL8' '
         DC    C'UACC'
EHD4     EQU   *-HEADING4
         DC    CL(133-EHD4)' '
         SPACE 1
ERRMSG1  DS    0CL133
         DC    C'0'                 DOUBLE SPACE
         DC    C'*** PARAMETER ERROR *** '
         DC    CL6' '
         DC    C'VALID KEYWORD PARAMETERS ARE: '
         DC    C'USER='
         DC    C' AND '
         DC    C'ACCESS='
         DC    CL6' '
         DC    C'AT LEAST ONE IS REQUIRED'
ERR1END  EQU   *-ERRMSG1
         DC    CL(133-ERR1END)' '
ERRMSG2  DS    0CL133
         DC    C'0'                 DOUBLE SPACE
         DC    CL12' '
         DC    C'NO RECORDS HAVE BEEN FOUND THAT MEET '
         DC    C'THE ABOVE SPECIFICATIONS'
ERR2END  EQU   *-ERRMSG2
         DC    CL(133-ERR2END)' '
         EJECT
         END
