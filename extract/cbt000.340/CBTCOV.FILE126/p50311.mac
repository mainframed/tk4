*          DATA SET P50311     AT LEVEL 002 AS OF 07/17/81
P50311   $PROLOG
***********************************************************************
*                                                                     *
*  PROGRAM: P50311                                                    *
*  AUTHOR:  R. A. CLAUER                                              *
*  DATE:    JUNE 1981                                                 *
*  PURPOSE: THIS PROGRAM GENERATES A REPORT SHOWING THE ACCESS LISTS  *
*           FOR ALL RACF RESOURCES. THE REPORT IS IN OWNER, CLASS,    *
*           RESOURCE SEQUENCE.                                        *
*                                                                     *
*  CHANGE LOG:                                                        *
*     JULY 1981: MISCELANEOUS FORMAT CHANGES WERE MADE. IN ADDITION   *
*           THE OPTION TO SELECT CLASSES WAS ADDED. AN OPTIONAL DD    *
*           CARD WITH THE NAME 'CLASSES' SHOULD BE ADDED FOLLOWED BY  *
*           CARDS WITH THE DESIRED CLASSES. EACH CARD CONTAINS ONLY   *
*           ONE CLASS AND MUST BEGIN IN COLUMN 1 AND NOT EXTEND BEYOND*
*           COLUMN 8. NOTE: NO CHECKING IS DONE TO INSURE THE CARDS   *
*           ENTERED CONTAIN VALID CLASSES. IF A CARD CONTAINS AN IN-  *
*           VALID CLASS, IT WILL BE SIMPLY IGNORED. THE ABSENCES OF   *
*           THE DD CARD CLASSES, SIGNIFIES THAT ALL CLASSES ARE DE-   *
*           SIRED.                                                    *
*           EXAMPLE.                                                  *
*              //CLASSES     DD   *                                   *
*              TERMINAL                                               *
*              $TECHSER                                               *
*                                                                     *
***********************************************************************
         TIME
         ST    R1,JULDATE          STORE JULIAN DATE
         CALL P50215,(JULDATE,GREGDATE)  CALL SUBROUTINE TO CONVERT
         MVC   HD1DAT,GREGDATE           TO GREGORIAN DATE
         L     R2,16               GET ADDR OF CVT
         L     R2,X'3E0'(R2)       GET ADDR OF RCVT
         USING RCVT,R2
         L     R2,RCVTCDTP         ADDR OF CLASS DESCRIPTOR TABLE
         DROP  R2
         ST    R2,CDTPTR           STORE FOR LATER USE
         LA    R1,=C'AUTH'         MAKE PROGRAM AUTHORIZED
         SVC   231
         EXTRACT TIOT,'S',FIELDS=TIOT
         L     R2,TIOT             GET ADDR OF TIOT
         LA    R2,X'18'(R2)        GET TO FIRST ENTRY
         B     MN010
MN005    XR    R4,R4               CLEAR R4
         IC    R4,0(R2)            GET LENGTH OF CURRENT ENTRY
         AR    R2,R4               CONPUT NEXT ENTRY
MN010    EQU   *
         CLI   0(R2),X'00'         IS IT THE END? ?
         BE    MN050               YES THEN NO DD CARD FOR CLASSES
         CLC   =CL8'CLASSES',4(R2) CHECK FOR DDNAME
         BNE   MN005               NO, THEN GO CHECK NEXT
         OI    ALLSW,X'01'         INDICATE CLASSES WILL BE SELECTIVE
         OPEN  (CLASSES,(INPUT))
         L     R2,CDTPTR           GET CLASS DESCRIPTOR POINTER
         XR    R3,R3               CLEAR R3 FOR COUNTER
MN020    CLI   1(R2),X'00'         END OF CDT? ?
         BE    MN030               YES, THEN GET SOME STORAGE
         LA    R3,1(R3)            COUNT CLASS
         LH    R4,0(R2)            GET LENGTH OF ENTRY
         AR    R2,R4               ADVANCE TO NEXT
         B     MN020               AND GO GET NEXT
MN030    SLL   R3,3                MULTIPLY BY 8
         LR    R0,R3               COPY LENGTH FOR GETMAIN
         GETMAIN R,LV=(0)
         ST    R3,CLASSLEN         STORE LENGTH
         ST    R1,CLASSTAB         STORE BEGINING OF TABLE
         LR    R2,R1
         XR    R4,R4               CLEAR COUNTER
MN035    GET   CLASSES,CARD
         MVC   0(8,R2),CARD        MOVE IT INTO TABLE
         LA    R4,1(R4)            INCREASE COUNTER
         LA    R2,8(R2)            AND ADVANCE TO NEXT SLOT IN TABLE
         CR    R4,R3               CHECK IF MORE CARDS THAN CLASSES
         BL    MN035               NO, KEEP ON GOING
         ABEND 50,DUMP             YES, SAY BYE
MN040    CLOSE (CLASSES)
         ST    R4,CLASSCT          STORE COUNT OF CARDS
MN050    EQU   *
         OPEN  (REPORT,(OUTPUT))
         LA    R1,SORTPARM
         LINK  EP=SORT             LINK TO SORT
         CLOSE (REPORT)
         $EPILOG
         LTORG
         EJECT
INEXIT   EQU   *
***********************************************************************
*                                                                     *
*  THIS ROUTINE RUNS AS AN E15 EXIT TO THE SORT. IT READS THE RACF    *
*  DATA SET USING THE RACF MANAGER SVCS AND BUILDS A SORT RECORD WHICH*
*  IS THEN PASSED TO THE SORT.                                        *
*                                                                     *
***********************************************************************
         USING INEXIT,R12          ESTABLISH BASE
         STM   R14,R12,12(R13)     STORE REGS
         LR    R12,R15             AND
         LA    R2,EXSAVE             ESTABLISH
         ST    R2,8(R13)                      LINKAGE
         ST    R13,EXSAVE+4
         LR    R13,R2
INEX004  L     R2,CDTPTR           GET CLASS DESC POINTER
         TM    FLAGS,ENDENT        ARE WE AT THE END OF A ENTITY
         BO    INEX040             NO--
INEX005  CLI   1(R2),0             YES, THEN CHECK IF END OF CDT
         BE    INEX060             YES, THEN DONE
         BAL   R10,CHKCLS          GO CHECK IF THIS IS A CLASS WE WANT
         B     *+4(R15)
         B     INEX010             IF R15 = 0, THEN GO GET NEXT CLASS
         MVC   ENTADDR,19(R2)      NO, MOVE IN RESOURCE LENGTH
         MVC   ENCLASS,3(R2)       MOVE IN CLASS
         MVC   SRTCLASS,ENCLASS
         BAL   R14,STC001          GO CHECK FOR WORKAREA
         CH    R15,=H'12'          CHECK FOR NO MORE IN CLASS
         BNE   INEX020             STILL SOME MORE
INEX010  LH    R3,0(R2)            NO MORE, GET LENGTH OF CDT ENTRY
         AR    R2,R3               COMPUTE ADDR OF NEXT CDT ENTRY
         ST    R2,CDTPTR           STORE IT
         MVC   ENTADDR+1(44),=CL44' ' CLEAR ENTITY FOR FIRST LOCATE
         B     INEX005             GO AND GET IT
INEX020  L     R8,STORADDR         GET ADDR OF WORKAREA
         ICHEINTY MF=(E,LOCNXT),WKAREA=(R8)   GET RESOURCE
         LTR   R15,R15             CHECK RETURN CODE
         BZ    INEX030             IF GOOD, CONTINUE
         ABEND 1,DUMP              ANYTHING ELSE, ABEND
INEX030  OI    FLAGS,ENDENT        SET FLAGS ON
         XR    R4,R4               CLEAR REG
         IC    R4,ENTADDR          GET LENGTH OF CURRENT ENTITY
         BCTR  R4,0
         MVC   SRTRES,=CL8' '      CLEAR IT IN SORT RECORD
         EX    R4,MOVETH           MOVE IT
         LA    R5,X'1C'(R8)        GET POINTER TO OWNER FIELD
         MVC   SRTOWN,2(R5)        MOVE INTO SORT RECORD
         LA    R5,10(R5)           PTR TO AUDIT FLAG
         MVC   LOCUSR+1(8),SRTOWN  MOVE IN OWNER FOR LOCATE
         ICHEINTY LOCATE,TYPE='USR',ENTRY=LOCUSR,                      X
               WKAREA=WORK,ACTIONS=(ACT7,ACT8)
         MVC   SRTGRP,=C'????????'
         MVC   SRTNAME,=CL20'????????'
         C     R15,=F'0'           CHECK RETURN CODE
         BNE   INEX032             IF BAD, THEN DEFAULT GROUP NOT FOUND
         MVC   SRTGRP,WORK+X'1E'   MOVE IN GROUP
         MVC   SRTNAME,WORK+X'28'  MOVE IN PGMR NAME
INEX032  MVC   SRTAUD,2(R5)        MOVE INTO SORT RECORD
         LA    R5,3(R5)            PTR TO NUM OF USERS
         MVC   REMUSER,2(R5)       STORE NUM OF USERS FOR LATER
         LA    R5,4(R5)            PT TO UACC
         MVC   SRTACC,1(R5)        MOVE IN UACC
         MVC   SRTUSER,=CL4' '     BLANK OUT USER
         LA    R5,3(R5)            PT TO INSTALLATION DATA
         MVC   SRTDESC,=CL25' '    CLEAR OUT SORT REC
         XR    R4,R4               CLEAR REG
         IC    R4,2(R5)            GET LENGTH OF INSTALLATION DATA
         LTR   R4,R4               IS IT ZERO
         BZ    INEX035             YES, THEN BYPASS MOVE
         C     R4,=F'25'           CHECK FOR GREATER THAN SORT REC
         BL    INEX034             NO, CONTINUE
         LA    R4,25               YES, SET MAX TO 25
INEX034  BCTR  R4,0                REDUCE FOR MOVE
         EX    R4,MOVDATA          MOVE IT IN
INEX035  LH    R4,0(R5)            GET LENGTH OF INSTALLATION DATA
         LA    R5,4(R4,R5)         ADVANCE TO FIRST USER
         ST    R5,WRKPTR           STORE FOR LATER USE
         B     INEX050
INEX040  LH    R5,REMUSER          GET NUM OF USERS REMAINING
         LTR   R5,R5               ANY LEFT? ?
         BNZ   INEX045             YES, CONTINUE
         NI    FLAGS,X'FE'         NO, TURN OFF SWITCH
         B     INEX004             AND GO GET NEXT RESOURCE
INEX045  BCTR  R5,0                REDUCE NUMBER OF REMAINING USERS
         STH   R5,REMUSER          AND STORE IT
         L     R5,WRKPTR           GET PTR TO NEXT USER
         MVC   LOCUSR+1(8),0(R5)   MOVE IN USER
         ICHEINTY LOCATE,TYPE='USR',ENTRY=LOCUSR,                      X
               WKAREA=WORK,ACTIONS=(ACT8)
         MVC   SRTNAME,=CL20'????????'
         LTR   R15,R15
         BNZ   INEX046             BAD RETURN, THEN NO NAME
         MVC   SRTNAME,WORK+X'1E'
INEX046  EQU   *                   IF NOT USER, THEN CHECK IF GROUP
         ICHEINTY LOCATE,TYPE='GRP',ENTRY=LOCUSR,                      X
               WKAREA=WORK,ACTIONS=(ACT1)
         LTR   R15,R15             CHECK RETURN
         BNZ   INEX047             IF NOT GROUP, THEN MUST BE AN
*                                  OBSOLETE USER
         MVC   LOCUSR+1(8),WORK+X'1E' MOVE IN GROUP OWNER'S ID
         ICHEINTY LOCATE,TYPE='USR',ENTRY=LOCUSR,                      X
               WKAREA=WORK,ACTIONS=(ACT8)
         LTR   R15,R15             CHECK IN OWNER IS THERE
         BNZ   INEX047             NO-- THEN CONTINUE
         MVC   SRTNAME,WORK+X'1E'  YES-- THEN MOVE IN NAME
INEX047  MVC   SRTUSER(4),0(R5)    MOVE IN USER
         MVC   SRTACC,8(R5)        MOVE IN ACCESS
         LA    R5,9(R5)            ADVANCE PAST USER
         ST    R5,WRKPTR           AND STORE IT IN WORK POINTER
INEX050  LA    R15,12              INDICATE, I WANT TO COME BACK
         LA    R1,SORTREC          TELL SORT WHERE DATA IS
         B     INEX099             AND LET HIM GO TO IT
INEX060  LA    R15,8               INDICATE, I DON'T WANT TO COME BACK
         XR    R1,R1               NO DATA THIS TIME
INEX099  L     R6,CT
         LA    R6,1(R6)
         ST    R6,CT
         L     R13,EXSAVE+4        GET PREVIOUS SAVE AREA
         L     R14,12(R13)         RESTORE
         L     R0,20(R13)                 ALL
         LM    R2,R12,28(R13)                PERTINENT REGS
         BR    R14                 AND RETURN TO SORT
MOVDATA  MVC   SRTDESC(0),3(R5)
MOVETH   MVC   SRTRES(0),ENTADDR+1
CT       DC    F'0'
         SPACE 5
STC001   EQU   *
         ICHEINTY NEXT,TYPE='GEN',ENTRY=ENTADDR,CLASS=ENCLASS,         X
               WKAREA=WORK,ACTIONS=(ACT3)
         CH    R15,=H'12'          CHECK FOR END OF CLASS
         BER   R14                 YES, RETURN
         LTR   R15,R15             CHECK FOR ZERO
         BZ    STC002              OK, THEN CONTINUE
         ABEND 3,DUMP              NO, THEN STOP HERE
STC002   LA    R9,WORK+X'1C'       GET INTO WORK AREA
         LA    R9,2(R9)            GET PAST LENGTH
         LH    R9,0(R9)            GET NUMBER OF USERS
         LA    R11,X'12F'          NUMBER OF BYTES OF OTHER STUFF
         LA    R11,0(R9,R11)       MULTIPLY NUM OF USERS BY 9
         SLL   R9,3                   TO GET THE NUMBER OF BYTES
         LA    R11,0(R9,R11)          FOR TOTAL WORKAREA
         C     R11,STORLEN         CHECK TO SEE IF WE HAVE ENOUGH
         BNHR  R14                 YES, THEN RETURN
         LR    R9,R14              PRESERVE R14
         ICM   R0,15,STORLEN
         BZ    STC003              NOTHING TO FREE
         FREEMAIN RC,LV=(0),A=STORADDR  FREE OLD STUFF
STC003   LA    R11,0(R11)          PURIFY HIGH ORDER BYTE
         LR    R0,R11              STUFF IT IN R0 FOR GETMAIN
         GETMAIN R,LV=(0)          AND GET SOME STORAGE
         ST    R11,STORLEN         STORE LENGTH
         LR    R14,R9              RESTORE R14
         ST    R1,STORADDR         STORE ADDR
         ST    R11,0(R1)           SET UP WORK AREA
         BR    R14
STORADDR DC    F'0'
STORLEN  DC    F'0'
         SPACE 5
CHKCLS   EQU   *
         STM   R8,R10,CHKSAV
         TM    ALLSW,X'01'         DO WE WANT ALL CLASSES
         LA    R15,4               SET RETURN FOR PROCESS ALL
         BZR   R10
         L     R8,CLASSCT          GET CLASS COUNT
         L     R9,CLASSTAB         GET BEGINING OF CLASS TABLE
CHK010   CLC   0(8,R9),3(R2)       IS THIS CLASS ONE WE WANT? ?
         BE    CHK020              YES--
         LA    R9,8(R9)            NO, ADVANCE IN TABLE
         BCT   R8,CHK010           AND LOOP
         LA    R15,0               NOT FOUND IN TABLE
CHK020   LM    R8,R10,CHKSAV
         BR    R10
CHKSAV   DS    3F
         EJECT
OUTEXIT  EQU   *
***********************************************************************
*                                                                     *
*  THIS ROUTINE RUNS AS AN E35 EXIT TO THE SORT. IT RETURNS RECORDS   *
*  FROM THE SORT AND GENERATES A REPORT                               *
*                                                                     *
***********************************************************************
         USING  OUTEXIT,R12
         STM   R14,R12,12(R13)     STORE REGS
         LR    R12,R15             ESTABLISH NEW BASE
         LA    R2,EXSAVE           GET ADDR OF SAVE AREA
         ST    R2,8(R13)           CHAIN FORWARD
         ST    R13,EXSAVE+4        CHAIN BACK
         LR    R13,R2              SET UP NEW SAVE
         L     R8,0(R1)            GET ADDR OF RECORD
         LTR   R8,R8               IS THERE ANY ? ? ?
         BZ    OUTEX099            NO, THEN WE'RE DONE
         USING SORTREC,R8          ESTABLISH ADDRESSIBILITY
         CLC   SRTGRP,PRGRP        CHECK FOR CHANGE IN GROUPS
         BE    OUTEX005            NO, CONTINUE
         CLC   PRGRP,=CL8' '       CHECK FOR FIRST GROUP
         BE    OUTEX003            YES--BYPASS SIGNATURE BLOCK
         BAL   R10,SIGBLK
OUTEX003 MVC   PRGRP,SRTGRP        ESTABLISH NEW GROUP
         ICHEINTY LOCATE,TYPE='GRP',WKAREA=WORK,ENTRY=GRPLEN,          X
               ACTIONS=(ACT1)      GET GROUP'S OWNER ID
         MVC   HD5NAME,=CL20'????????' SET DEFAULT
         LTR   R15,R15             CHECK RETURN
         BNZ   OUTEX004            IF BAD, GET OUT
         MVC   LOCUSR+1(8),WORK+X'1E' MOVE IN OWNER ID
         ICHEINTY LOCATE,TYPE='USR',WKAREA=WORK,ENTRY=LOCUSR,          X
               ACTIONS=(ACT8)      GET OWNER'S NAME
         LTR   R15,R15             CHECK RETURN
         BNZ   OUTEX004            NO GOOD, THEN DON'T MOVE IT IN
         MVC   HD5NAME,WORK+X'1E'  MOVE IN NAME OF GROUP OWNER
OUTEX004 MVC   PROWN,SRTOWN        AND OWNER
         MVC   HD3NAME,SRTNAME     MOVE IN NAME OF OWNER
         MVC   PRCLASS,SRTCLASS    MOVE IN CLASS
         MVC   PAGECT,=H'0'        START PAGE COUNT OVER
         BAL   R14,HEAD010         GO DO HEADINGS
OUTEX005 CLC   SRTOWN,PROWN        DID OWNER CHANGE ? ?
         BE    OUTEX010            NO--
         MVC   HD3NAME,SRTNAME     MOVE IN NAME OF OWNER
         MVC   PAGECT,=H'0'        RESET COUNT
         MVC   PROWN,SRTOWN        YES, THEN RESET PROWN
         MVC   PRCLASS,SRTCLASS    MOVE IN CLASS
         BAL   R14,HEAD010         AND GO PRINT HEADINGS
OUTEX010 EQU   *
         CLC   SRTCLASS,PRCLASS    ARE THEY THE SAME
         BE    OUTEX020            YES--
         MVC   PAGECT,=H'0'        RESET COUNT
         MVC   PRCLASS,SRTCLASS    RESET PRCLASS
         BAL   R14,HEAD010         AND PRINT HEADINGS
         XC    PRRES,PRRES         AND THEN CLEAR RESOURCE TO INSURE
*                                  THAT IT PRINTS
OUTEX020 CLC   SRTRES,PRRES        COMPARE RESOURCE NAMES
         BE    OUTEX030            IF THEY ARE THE SAME---
         MVC   PRRES,SRTRES        ESTABLISH NEW RESOURCE
         MVC   DTRES,SRTRES        OTHERWISE MOVE IN NEW RESOURCE
         MVC   DTDESC,SRTDESC      MOVE IN NEW DESCRIPTION
         MVC   DTUSER,SRTUSER      MOVE IN USER
         MVC   DTNAME,SRTNAME      MOVE IN PROGRAMMER NAME
         CLC   SRTUSER,=C'    '    IF BLANKS
         BNE   OUTEX025                      THEN MUST BE A UACC
         MVC   DTNAME,=CL20' '     BLANK OUT NAME
         MVC   DTUSER,=C'UACC'
OUTEX025 BAL   R14,TRANACC         GO TRANSLATE ACCESS BYTE
         MVC   DTACC,ACCESS        MOVE IN ACCESS
         PUT   REPORT,DTREC
         LH    R10,LINECT          GET LINE COUNT
         LA    R10,1(R10)          INCREMENT IT FOR DOUBLE SPACE
         STH   R10,LINECT          STORE IT
         B     OUTEX090            GET OUT
OUTEX030 MVC   DT2USER,SRTUSER     MOVE USER INTO SHORT LINE
         MVC   DT2NAME,SRTNAME     MOVE IN NAME
         BAL   R14,TRANACC         GO TRANSLATE ACCESS BYTE
         MVC   DT2ACC,ACCESS       MOVE IN ACCESS
         PUT   REPORT,DTREC2
OUTEX090 LH    R10,LINECT          CHECK LINECOUNT
         LA    R10,1(R10)          INCREMENT
         STH   R10,LINECT
         CH    R10,=H'55'          IS IT < 40
         BL    OUTEX095            YES, CONTINUE
         BAL   R14,HEAD010         NO, THEN GENERATE HEADINGS
OUTEX095 L     R15,4               SET UP FOR ANOTHER
         B     OUTEX900
OUTEX099 BAL   R10,SIGBLK          FINISHED
         LA    R15,8
OUTEX900 L     R13,EXSAVE+4        RESTORE
         L     R14,12(R13)                ALL
         L     R0,20(R13)                    REGS
         LM    R2,R12,28(R13)
         BR    R14
*
         SPACE 5
TRANACC  TM    SRTACC,X'80'        CHECK ACCESS CODES
         BNO   TRAC01
         MVC   ACCESS,=C'ALTER  '
         BR    R14
TRAC01   TM    SRTACC,X'40'        CHECK ACCESS CODES
         BNO   TRAC02
         MVC   ACCESS,=C'CONTROL'
         BR    R14
TRAC02   TM    SRTACC,X'20'        CHECK ACCESS CODES
         BNO   TRAC03
         MVC   ACCESS,=C'UPDATE '
         BR    R14
TRAC03   TM    SRTACC,X'10'        CHECK ACCESS CODES
         BNO   TRAC04
         MVC   ACCESS,=C'READ   '
         BR    R14
TRAC04   MVC   ACCESS,=C'NONE   '
         BR    R14
*
         SPACE  5
SIGBLK   ST    R10,SIGADDR
         LH    R14,LINECT          GET CURRENT LINE COUNT
         LA    R14,7(R14)          ADD AMOUNT OF SIGNATURE BLK
         C     R14,=F'50'          SEE IF IT WILL FIT ON THE PAGE
         BL    SIG001              YES, THEN CONTINUE
         BAL   R14,HEAD010         NO, THEN PRINT HEADINGS FIRST
SIG001   LH    R14,LINECT          GET LINECOUNT
         LA    R15,51
         SR    R15,R14             COMPUTE REMAINING LINES
         LR    R10,R15
SIG002   PUT REPORT,BLANKLN
         BCT   R10,SIG002
         MVI   SIGHD1,C'0'
         PUT   REPORT,SIGHD1
         MVC   SIGOWN,HD5NAME
         PUT   REPORT,SIGHD2
         PUT   REPORT,SIGHD1
         PUT   REPORT,SIGHD3
         L     R10,SIGADDR
         BR    R10
SIGADDR  DS    A
         SPACE  5
HEAD010  EQU   *
         ST    R14,RETADDR
         LH    R10,PAGECT          GET PAGE COUNT
         LA    R10,1(R10)          ADD 1
         CVD   R10,DBLWD           CONVERT TO DECIMAL
         UNPK  HD1PG,DBLWD+6(2)    UNPACK
         OI    HD1PG+2,X'F0'       FIX UP SIGN
         STH   R10,PAGECT          STORE UPDATED PAGE COUNT
         PUT   REPORT,HDG1
         PUT   REPORT,HDG7
         PUT   REPORT,HDG2
         MVC   HD3OWN,PROWN
         PUT   REPORT,HDG3
         MVC   HD5GRP,PRGRP
         PUT   REPORT,HDG5
         MVC   HDCLASS,PRCLASS
         PUT   REPORT,HDG6
         PUT   REPORT,HDG4
         PUT   REPORT,BLANKLN
         MVC   LINECT,=H'11'       RESET LINECOUNT
         XC    PRRES,PRRES         AND RESOURCE
         L     R14,RETADDR
         BR    R14
         DROP  R8
         EJECT
*  MISCELLANEOUS FIELDS
JULDATE  DS    F
GREGDATE DS    3F
RETADDR  DS    F
PAGECT   DC    H'0'
LINECT   DC    H'0'
CDTPTR   DS    F
EXSAVE   DS    18F
FLAGS    DC    X'00'
ENDENT   EQU   X'01'
WRKPTR   DS    F
REMUSER  DS    H
GRPLEN   DC    X'04'
PRGRP    DC    CL8' '
PROWN    DC    CL8' '
PRCLASS  DC    CL8' '
PRRES    DC    CL8' '
ACCESS   DC    CL7' '
DBLWD    DS    D
TIOT     DS    F
ALLSW    DC    X'00'
CLASSCT  DC    F'0'
CLASSTAB DC    F'0'
CLASSLEN DC    F'0'
CARD     DS    CL80
CLASSES  DCB   DDNAME=CLASSES,MACRF=GM,DSORG=PS,LRECL=80,EODAD=MN040
REPORT   DCB   DDNAME=REPORT,MACRF=PM,DSORG=PS,                        X
               RECFM=FBA,LRECL=80,BLKSIZE=4000
         SPACE 5
*  RACF MACROS
ACT1     ICHEACTN FIELD=OWNER
ACT2     ICHEACTN FIELD=AUDIT
ACT3     ICHEACTN FIELD=ACLCNT
ACT4     ICHEACTN FIELD=UACC
ACT5     ICHEACTN FIELD=INSTDATA
ACT6     ICHEACTN FIELD=ACL1
ACT7     ICHEACTN FIELD=DFLTGRP
ACT8     ICHEACTN FIELD=PGMRNAME
LOCNXT   ICHEINTY LOCATE,TYPE='GEN',                                   X
               ENTRY=ENTADDR,CLASS=ENCLASS,WKAREA=WORK,                X
               ACTIONS=(ACT1,ACT2,ACT3,ACT4,ACT5,ACT6),MF=L
ENTADDR  DC    X'2C'
         DC    CL44' '
ENCLASS  DC    CL8' '
         DS    0F
WORK     DC    F'62'
         DS    CL58
LOCUSR   DC    X'04'
         DC    CL8' '
         SPACE 5
*  HEADINGS
HDG1     DC    C'1 '                NEWPAGE
HD1DAT   DC    CL12' '
         DC    CL16' '
         DC    CL42'MILLER BREWING COMPANY'
         DC    CL5'PAGE'
HD1PG    DC    C'XXX'
*
HDG2     DC    C'  '
         DC    CL18'P50311'
         DC    CL60'GENERALIZED RESOURCE AUTHORIZATION REPORT'
*
HDG3     DC    CL30'0'
         DC    CL7'OWNER'
HD3OWN   DC    CL4' '
         DC    CL2' '
HD3NAME  DC    CL20' '
         DC    CL17' '
*
HDG4     DC    CL40'0 RESOURCE  DESCRIPTION'
         DC    CL40'USER   ACCESS    NAME'
*
HDG5     DC    CL30'0'
         DC    CL7'GROUP'
HD5GRP   DC    CL4' '
         DC    CL2' '
HD5NAME  DC    CL20' '
         DC    CL17' '
HDG6     DC    CL30'0'
         DC    CL7'CLASS'
HDCLASS  DC    CL8' '
         DC    CL35' '
HDG7     DC    CL39' '
         DC    CL41'MIS'
BLANKLN  DC    CL80' '
SIGHD1   DC    CL20' '
         DC    24C'-'
         DC    66C' '
SIGHD2   DC    CL20' '
SIGOWN   DC    CL20' '
         DC    CL60' '
SIGHD3   DC    CL20' '
SIGDATE  DC    CL12'DATE'
         DC    CL68' '
*
*  DETAIL LINES
DTREC    DS    0CL80
         DC    C'0 '
DTRES    DC    CL8' '
         DC    C'  '
DTDESC   DC    CL25' '
         DC    CL3' '
DTUSER   DC    CL4' '
         DC    CL3' '
DTACC    DC    CL7' '
         DC    CL3' '
DTNAME   DC    CL20' '
         DC    CL3' '
DTLEN    EQU   *-DTREC
*
DTREC2   DC    CL40' '
DT2USER  DC    CL4' '
         DC    CL3' '
DT2ACC   DC    CL7' '
         DC    CL3' '
DT2NAME  DC    CL20' '
         DC    CL3' '
         SPACE 5
*   SORT FIELDS
         CNOP  0,4
SORTPARM DC    X'80'
         DC    AL3(PARMLIST)
         DC    X'0000'
PARMLIST DC    X'0018'
         DC    A(SORTCARD)
         DC    A(SORTEND)
         DC    A(RECCARD)
         DC    A(RECEND)
         DC    A(INEXIT)
         DC    A(OUTEXIT)
SORTCARD DC    C' SORT FIELDS=(1,32,CH,A,59,4,CH,A)'
SORTEND  DC    C' '
RECCARD  DC    C' RECORD LENGTH=83,TYPE=F'
RECEND   DC    C' '
*
         LTORG
SORTREC  DS    0D
SRTGRP   DS    CL8
SRTOWN   DS    CL8
SRTCLASS DS    CL8
SRTRES   DS    CL8
SRTDESC  DS    CL25
SRTAUD   DS    CL1
SRTUSER  DS    CL4
SRTACC   DS    CL1
SRTNAME  DS    CL20
SRTLEN   EQU   *-SORTREC
*  MAPING MACROS
         ICHPRCVT
         END
