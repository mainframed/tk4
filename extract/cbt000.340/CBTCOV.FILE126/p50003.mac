*          DATA SET P50003     AT LEVEL 002 AS OF 02/26/81
         MACRO
         SMFWTO
         TS    *+1            FOR ONE TIME OPERATION (MLPA ONLY)
         BNZ   SMF&SYSNDX    SKIP WTO AFTER FIRST EXECUTION
         LOAD  EP=P50252           GET JCL TABLE
         ST    R00,TABADDR         SAVE ADDR OF TABLE
         TIME
         ST    1,FULL&SYSNDX
         ED    EDIT&SYSNDX,FULL&SYSNDX+1
         MVC   W&SYSNDX+8(5),EDIT&SYSNDX+1
         WTO '******************************************************', X
               ROUTCDE=(9)
W&SYSNDX WTO '      &SYSECT ACTIVE - LAST COMPILE &SYSDATE &SYSTIME',  X
               ROUTCDE=(9)
         WTO '******************************************************', X
               ROUTCDE=(9)
         B     SMF&SYSNDX
FULL&SYSNDX DC F'0'
EDIT&SYSNDX DC X'402020202020'
TABADDR  DC F'0'
         CNOP  0,4
SMF&SYSNDX EQU *
         MEND
IGC0023F TITLE 'SMF JOB VALIDATION EXIT ROUTINE                MBC'
***********************************************************************
*                                                                     *
*             MODULE NAME = IEFUJV                                    *
*                                                                     *
*             DESCRIPTIVE NAME =  MBC SMF JCL SCAN EXIT               *
*                                                                     *
*             FUNCTION =                                              *
*                SCAN JCL STATEMENTS FOR UNIT=INTRDR AND CHANGE OUTPUT*
*                TO SYSOUT=(A,INTRDR). IN ADDITION, A TABLE OF RES-   *
*                TRICTED JCL PARAMETERS IS CHECKED. IF ANY OF THESE   *
*                PARAMETERS HAVE BEEN USED AN ELEMENT WILL BE CHAINED *
*                OFF THE SMF COMMON PARAMETER LIST USER COMMUNICATION *
*                FIELD AND THE AUTHORIZATION TO USE THIS PARAMETER    *
*                WILL BE CHECKED VIA RACF IN IEFUJI.                  *
*                                                                     *
*                OPERATION =                                          *
*                   THIS ROUTINE RUNS AS AN SVC (236) AND IS INVOKED  *
*                   BY REPLACING THE FIRST INSTRUCTION OF IEFUJV      *
*                   WITH          SVC   236                           *
*                                 BR    14                            *
*                                                                     *
*              NOTES =                                                *
*                                                                     *
*                 DEPENDENCIES = CHARACTER SET IS EBCDIC.  REASSEMBLE *
*                    IF A DIFFERENT CHARACTER SET IS NEEDED.          *
*                                                                     *
*                 RESTRICTIONS = NONE                                 *
*                                                                     *
*                 REGISTER CONVENTIONS = STANDARD CONVENTIONS.        *
*                    REGISTER  0       = UNUSED                       *
*                    REGISTER  1       = ADDRESS OF INPUT PARAMETERS  *
*                    REGISTER  2       = UNUSED                       *
*                    REGISTER  3       = ADDRESS OF COMMON EXIT       *
*                                        PARAMETER AREA               *
*                    REGISTER  4       = ADDRESS 80 BYTE JCL TEXT     *
*                    REGISTER  5       = ADDRESS ENTRY CODE BYTE      *
*                    REGISTERS 6 & 7   = WORK REGS                    *
*                    REGISTERS 8 TO 11 = UNUSED                       *
*                    REGISTER  12      = ADDRESSABILITY TO IGC0023F   *
*                                        CSECT                        *
*                    REGISTER  13      = CALLERS SAVE AREA ADDRESS    *
*                    REGISTER  14      = WORK REGISTER                *
*                    REGISTER  15      = WORK REGISTER                *
*                                                                     *
*                PATCH LABEL = PATCH (UNUSED AND INTIALIZED TO        *
*                   BINARY ZEROES)                                    *
*                                                                     *
*             MODULE TYPE = PROCEDURE                                 *
*                                                                     *
*                PROCESSOR = ASM                                      *
*                                                                     *
*                MODULE SIZE = 256  BYTES                             *
*                                                                     *
*                ATTRIBUTES = KEY 1, REENTRANT,                       *
*                   SUPERVISOR STATE, ENABLED, NO LOCKS HELD          *
*                                                                     *
*             ENTRY POINTS = IGC0023F(ONLY ENTRY POINT)               *
*                                                                     *
*                LINKAGE =                                            *
*                                                                     *
*                                                                     *
*             INPUT = REG1 POINTS TO A LIST OF FOUR-BYTE ADRESSES AS  *
*                     FOLLOWS:                                        *
*                     1. ADDRESS OF COMMON EXIT PARAMETER AREA        *
*                     2. ADDRESS OF 80-BYTE JCL TEXT AREA             *
*                     3. ADDRESS OF 1-BYTE AREA THAT INDICATES        *
*                        THE TYPE OF JCL STATEMENT AS FOLLOWS:        *
*                        0 NULL STATEMENT                             *
*                        1 JOB  STATEMENT                             *
*                        2 EXEC STATEMENT                             *
*                        4 DD   STATEMENT                             *
*                        8 PROC STATEMENT                             *
*                       16 ALL JCL HAS BEEN CONVERTED                 *
*                       32 ALL JCL HAS BEEN INTERPRETED               *
*                                                                     *
*             OUTPUT = NONE                                           *
*                                                                     *
*             EXIT - NORMAL = AT PROGRAM END VIA BRANCH REGISTER 14   *
*                                                                     *
*                OUTPUT = NONE                                        *
*                                                                     *
*                RETURN CODE = ZERO                                   *
*                                                                     *
*             EXIT - ERROR = NONE                                     *
*                                                                     *
*                OUTPUT = NONE                                        *
*                                                                     *
*                RETURN CODE = ZERO                                   *
*                                                                     *
*             EXTERNAL REFERENCES =                                   *
*                                                                     *
*                ROUTINES = NONE                                      *
*                                                                     *
*                DATA AREAS = NONE                                    *
*                                                                     *
*                CONTROL BLOCKS = NONE                                *
*                                                                     *
*             TABLES = NONE                                           *
*                                                                     *
*             MACROS = SAVE, RETURN                                   *
*                                                                     *
*             CHANGE ACTIVITY = NONE                                  *
*                                                                     *
*             MESSAGES =                                              *
*                NONE                                                 *
*                                                                     *
*             ABEND CODES = NONE                                      *
*                                                                     *
***********************************************************************
         EJECT
IGC0023F CSECT ,                       CSECT NAME DECLARED
*    MILLER IEFUJV (SVC 236)
*
*  CONSTANT EQUATES
*
K0       EQU   0                       CONSTANT 0
K1       EQU   1                       CONSTANT 1
K2       EQU   2                       CONSTANT 2
K3       EQU   3                       CONSTANT 3
K4       EQU   4                       CONSTANT 4
K8       EQU   8                       CONSTANT 8
K12      EQU   12                      CONSTANT 12
K16      EQU   16                      CONSTANT 16
XFF      EQU   X'FF'                   CONSTANT 255
*
DDCODE   EQU   4                       JCL TYPE INDICATOR FOR DD STMTS
EXCODE   EQU   2                       JCL TYPE INDICATOR FOR EXEC STMT
JOBCODE  EQU   1                       JCL TYPE INDICATOR FOR JOB STMTS
FINALCD  EQU   16                      FINAL INDICATORY
JOBCLAS  EQU   31                      OFFSET OF JOB CLASS IN COMMON
BITMAP   EQU   0                       OFFSET OF BIT MASK
ARGLEN   EQU   4                       OFFSET OF ARGUMENT LENGTH
SRCHARG  EQU   5                       OFFSET OF COMPARE ARGUMENT
ENTLEN   EQU   6                       LENGTH OF CONSTANT TABLE ENTRY
*                                      PARAMETER AREA
LCARD    EQU   80                      LENGTH OF INPUT STATEMENT
*
* REGISTER EQUATES
*
R00      EQU   00                      REGISTER 0
R01      EQU   01                      REGISTER 1
R02      EQU   02                      REGISTER 2
R03      EQU   03                      REGISTER 3
R04      EQU   04                      REGISTER 4
R05      EQU   05                      REGISTER 5
R06      EQU   06                      REGISTER 6
R07      EQU   07                      REGISTER 7
R08      EQU   08                      REGISTER 8
R09      EQU   09                      REGISTER 9
R10      EQU   10                      REGISTER 10
R11      EQU   11                      REGISTER 11
R12      EQU   12                      REGISTER 12
R13      EQU   13                      REGISTER 13
R14      EQU   14                      REGISTER 14
R15      EQU   15                      REGISTER 15
         EJECT
         STM   14,12,12(R13)           SAVE REGS
         LR    R12,R06             SET UP NEW BASE
         USING IGC0023F,R12            SET UP BASE ADDRESSABILITY
         B     I23F001
         DC    C'IGC023F_MBC_'
         DC    C'&SYSDATE_'
         DC    C'&SYSTIME'
I23F001  LM    R03,R05,0(R01)          LOAD INPUT PARM LIST ADDRESSES
         GTRACE DATA=(13),LNG=72,ID=1
         GTRACE DATA=(3),LNG=36,ID=2
         GTRACE DATA=(4),LNG=80,ID=3
         GTRACE DATA=(5),LNG=1,ID=4
*
*    R03 = ADDRESS OF COMMON PARAMETER EXIT ARE
*    R04 = ADDRESS OF 80 BYTE JCL TEXT AREA
*    R05 = ADDRESS OF ENTRY CODE BYTE
*
*
* NOTE THAT NO SAVE_AREA WAS GETMAINED SINCE THIS ROUTINE
*      CALLS NO OTHER ROUTINE
*
         SMFWTO
         EJECT
PRMCHK00 CLI   K0(R05),FINALCD     ARE WE DONE??
         BE    PRMCHK60            YES, DO CLEANUP
         CLC   32(4,R03),=C'BYPS'  IS THIS JOB TO BE BYPASSED?
         BE    EXIT                YES--
         TM    K0(R05),JOBCODE+EXCODE+DDCODE  IS IT ONE THAT WE ARE
*                                             INTERESTED IN
         BZ    EXIT                NO, GET OUT
         TM    K0(R05),JOBCODE     IS IT A JOB CARD
         BZ    PRMCHK05            NO, THEN CONTINUE
         CLC   72(3,R04),=C'TSU'   IS IT A TSO LOGON? ?
         BNE   PRMCHK02            NO, CONTINUE CHECKING
         MVC   32(4,R03),=C'BYPS'  YES, THEN SET FOR BYPASS
         B     EXIT
PRMCHK02 CLC   72(3,R04),=C'STC'   IS IT A STARTED TASK?
         BNE   PRMCHK03            NO, CONTINUE CHECING
         MVC   32(4,R03),=C'BYPS'  YES, THEN SET FOR BYPASS
         B     EXIT
PRMCHK03 CLC   72(3,R04),=C'JOB'   IS THIS THE FIRST JOB CARD?
         BNE   PRMCHK05            NO - CONTINUE CHECKING
         MVC   32(4,R03),=F'0'     ZERO BIT TABLE FOR FIRST CARD
PRMCHK05 L     R06,TABADDR         GET ADDR OF JCL TABLE
         LTR   R06,R06             HAS TABLE BEEN LOADED
         BNZ   PRMCHK10            YES - CONTINUE
         LOAD  EP=P50252           LOAD JCL TABLE
         ST    R00,TABADDR         SAVE ITS ADDR
         LR    R06,R00
PRMCHK10 L     R07,0(R06)          LOAD ADDR OF JOB SUBTABLE
         CLI   K0(R05),JOBCODE     IS IT A JOB CARD?
         BE    PRMCHK15            YES--
         L     R07,4(R06)          GET ADDR OF EXEC SUBTABLE
         CLI   K0(R05),EXCODE      IS IT AN EXEC CARD?
         BE    PRMCHK15            YES--
         L     R07,8(R06)          THEN, MUST BE A DD CARD
PRMCHK15 LTR   R07,R07             IS SUBTABLE PRESENT
         BZ    EXIT                NO--THEN GET OUT
PRMCHK20 LA    R14,71              LENGTH OF SEARCH
         XR    R06,R06             CLEAR R06
         IC    R06,ARGLEN(R07)     GET LEN OF PARM TO SEARCH FOR
         SR    R14,R06             REDUCE LENGTH TO SEARCH BY PARM
         BCTR  R06,0               REDUCE FOR COMPARE
         LR    R15,R04             COPY BEGINNING OF CARD
PRMCHK25 EX    R06,CHKPRM          IS PARM IN CARD??
         BE    PRMCHK30            YES-- ADD TO CHAIN
         LA    R15,1(R15)          BUMP POINTER
         BCT   R14,PRMCHK25        LOOP THROUGH CARD
PRMCHK27 LA    R07,ENTLEN(R06,R07)     BUMP TO NEXT ENTRY IN TABLE
         STM   0,R15,GTFARA
         GTRACE DATA=GTFARA,LNG=64,ID=5
         CLC   0(4,R07),=F'0'      END OF TABLE??
         BE    EXIT                YES--PARM NOT FOUND
         B     PRMCHK20
PRMCHK30 L     R14,32(R03)         GET USER COMM FIELD
         O     R14,BITMAP(R07)     TURN ON PROPER BIT
         ST    R14,32(R03)         SAVE THE RESULT
         B     PRMCHK27
         SPACE 5
PRMCHK60 ICM   R06,15,32(R03)      ENTER FOR FINAL TIME
         BZ    EXIT                NO USER COMM PTR
         C     R06,=C'BYPS'        IS IT A STC OR TSU
         BE    PRMCHK70            YES, THEN CLEAR IT AND LEAVE
         B     EXIT                LEAVE IT ALONE
PRMCHK70 XR    R07,R07             CLEAR R07
         ST    R07,32(R03)         CLEAR USER COMM WHEN NO CHAIN
         B     EXIT                GET OUT
*
* RETURN TO CALLER
*
EXIT     DS    0H
         RETURN (14,12),RC=0           RETURN TO CALLER
         EJECT
*
*  DATA AREA
*
*
*
CHKPRM   CLC   SRCHARG(0,R07),0(R15)   COMPARE FOR JCL SCAN
GTFARA   DS    16F
*
* PATCH AREA
*
         DS    0F
MODLEN   EQU   *-IGC0023F         EQUATE FOR MODULE LENGTH(- PATCH)
PTCHLEN  EQU   ((MODLEN+7)/8+7)/8*8 PATCH AREA LENGTH EQUATE
PTCHLNTH DC    Y(PTCHLEN)          LENGTH OF PATCH AREA
PTCHBASE DC    S(PATCH)            BASE DISPLACED ADDRESS OF PATCH
PATCH    DC    XL(PTCHLEN)'00'     PATCH AREA
         PRINT NOGEN
         IHAASCB
         CVT DSECT=YES
         END   IGC0023F
