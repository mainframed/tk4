LODL     TITLE 'SDLODLPA - LOAD MODULE INTO LPA'
********************
* SDLODLPA ROUTINE *
********************
*
* INPUT :      R1 -> ADDR OF PARMLIST CONTAINING:
*                    (1) 8-BYTE MODULE NAME.
*                    (2) 4-BYTE DCB ADDRESS OF AUTH PGM LIB
*                        CONTAINING THE MODULE TO BE LOADED.
*                        (MAY BE ZERO IF THE LIBRARY IS STEPLIB,
*                        JOBLIB,LINKLIB ETC.)
*
* OUTPUT:      OUTPUT FROM THE LOAD SVC:
*              R0 = ADDR OF MODULE LOADED
*              R1 = AUTH CODE, LENGTH OF MODULE
*              R15= 0 , IF NO PROBLEMS ENCOUNTERED
*                 = 4 , IF ERROR OCCURRED & ABEND NOT INVOKED
         EJECT ,
         PRINT NOGEN
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE 1
CVT      CVT   DSECT=YES,LIST=YES,PREFIX=YES
         SPACE 1
TCB      IKJTCB
         SPACE 1
         IHADCB DSORG=PO,DEVD=DA
         SPACE 1
DEB      IEZDEB
         SPACE 1
         PRINT GEN
         IHACDE
CDESIZE  EQU   *-CDENTRY           SIZE OF CDE
XLSTSIZE EQU   16                  SIZE OF EXTENT LIST
         EJECT
SDLODLPA CSECT
         STM   R14,R12,12(R13)
         LR    R12,R15
         USING SDLODLPA,R12
         LR    R4,R13
         LA    R13,SAVE
         ST    R4,4(R13)
         ST    R13,8(R4)
         B     SAVE+72
         DC    CL8'&SYSDATE'
SAVE     DS    18F
         SPACE 1
         L     R1,0(,R1)           GET PARMLIST ADDRESS
         MVC   MODNAME(8),0(R1)    MODULE NAME
         L     R2,8(R1)            DCB ADDRESS
         EJECT
*
* CHECK THAT PGM LIBRARY IS OPEN
*
         LTR   R2,R2               ANY DCB ?
         BZ    OPENOK              BIF NO - OPEN OK
         USING IHADCB,R2
         TM    DCBOFLGS,DCBOFOPN   OPEN OK ?
         BO    OPENOK
         WTO   'SDLODLPA - DCB NOT OPEN',ROUTCDE=(2,11)
         LA    R7,4
         B     EXITR
OPENOK   DS    0H
         SPACE 1
*
* CHECK THAT PGM LIBRARY IS AUTHORIZED
*
         LTR   R2,R2               ANY DCB ?
         BZ    AUTHOK              BIF NO - SKIP AUTHORIZATION CHECK
         L     R3,DCBDEBAD         DEB ADDR
         USING DEBBASIC,R3
         TM    DEBFLGS1,DEBAPFIN   AUTH PGM LIB ?
         BO    AUTHOK
         WTO   'SDLODLPA - DCB NOT AUTHORIZED PGM LIBRARY',            X
               ROUTCDE=(2,11)
         LA    R7,4
         B     EXITR
AUTHOK   DS    0H
         DROP  R3
         EJECT
*
* CHECK THAT MODULE IS RE-ENTRANT
*
         LTR   R2,R2               ANY DCB ?
         BNZ   BLDLDCB             BIF YES
         BLDL  0,BLDLIST
         B     BLDLDONE
BLDLDCB  BLDL  (R2),BLDLIST
BLDLDONE LTR   R15,R15
         BNZ   BLDLERR
         TM    BLDLDATA+22,X'80'   MODULE RE-ENTRANT ?
         BO    OKRENT
         WTO   'SDLODLPA - MODULE NOT RE-ENTRANT',ROUTCDE=(2,11)
         LA    R7,4
         B     EXITR
OKRENT   DS    0H
         EJECT
*
* LOAD REQUESTED MODULE & ISSUE WTO
*
         LTR   R2,R2               ANY DCB ?
         BNZ   LOADCB              BIF YES
         LOAD  EPLOC=MODNAME,DCB=0,ERRET=LOADERR
         B     LOADDONE
LOADCB   LOAD  EPLOC=MODNAME,DCB=(R2),ERRET=LOADERR
LOADDONE STM   R0,R1,LOADRET       SAVE R0,R1 TO RETURN
         LA    R5,3
         LA    R6,LOADRET+1
         LA    R7,WTOLLOC
         SR    R2,R2
LOOP     IC    R2,0(R6)            CONVERT ENTRY PT TO EBCDIC
         SRDL  R2,4
         STC   R2,0(,R7)
         SRL   R3,28
         STC   R3,1(,R7)
         LA    R7,2(,R7)
         LA    R6,1(,R6)
         BCT   R5,LOOP
         TR    WTOLLOC(6),HEXTAB   CONVERT TO EBCDIC
         MVC   WTOLNAME(8),MODNAME MODULE NAME
WTOLOAD  WTO   'SDLODLPA - XXXXXXXX LOADED, EP= XXXXXX',               X
               ROUTCDE=(2,11)
WTOLNAME EQU   WTOLOAD+19
WTOLLOC  EQU   WTOLOAD+40
         DROP  R2
         EJECT ,
*
* FIND CDE ENTRY OFF JPAQ
*
         L     R8,CVTPTR
         USING CVT,R8
         L     R1,CVTTCBP
         L     R3,4(,R1)           CURRENT TCB
         USING TCB,R3
         L     R3,TCBJSTCB         JOBSTEP TCB
         L     R2,TCBJPQ           ADDR OF JOB PACK AREQ QUEUE
         DROP  R3
CHEKCDE  LTR   R2,R2               CHAIN ENTRY PRESENT ?
         BZ    JPAQERR             NO - ENTRY NOT FOUND
         USING CDENTRY,R2
         CLC   CDNAME(8),MODNAME   RIGHT CDE ?
         BE    GOTCDE              YES - GOT IT
         L     R2,CDCHAIN          LINK TO NEXT IN CHAIN
         B     CHEKCDE
         SPACE 1
*
* GETMAIN SPACE FOR CDE & EXTENT LIST FROM SQA (SUBPOOL 245)
*
GOTCDE   DS    0H
KEYZERO  MODESET KEY=ZERO,RELATED=(SDLODLPA,KEYNZERO)
         GETMAIN RU,LV=CDESIZE+XLSTSIZE,SP=245
         EJECT
*
* COPY & INITIALIZE CDE, EXTENT LIST
*
         MVC   0(CDESIZE,R1),0(R2) COPY CDE
         L     R4,CDXLMJP          EXTENT LIST ADDR
         MVC   CDESIZE(XLSTSIZE,R1),0(R4)   COPY EXTENT LIST
         LR    R2,R1               ADDRESS NEW CDE
         LA    R1,CDESIZE(,R2)
         ST    R1,CDXLMJP          INIT EXTENT LIST ADDR
         XC    CDRRBP,CDRRBP       INIT RB PTR
         OI    CDATTR,CDNIP        INIT CDATTR
         NI    CDATTR,X'FF'-CDJPA
         SPACE 1
*
* LINK INTO ALPA QUEUE
*
         L     R1,CVTQLPAQ         LPAQ PTR
         MVC   CDCHAIN(4),0(R1)    LINK CDE INTO LPAQ
         ST    R2,0(,R1)           STORE CDE ADDR
         DROP  R2,R8
         SPACE 1
KEYNZERO MODESET KEY=NZERO,RELATED=(SDLODLPA,KEYZERO)
         EJECT
         SR    R7,R7
         SPACE 1
EXITR    LR    R15,R7              SET RETURN CODE
         LM    R0,R1,LOADRET       LOAD R0,R1 RETURN FROM LOAD
         L     R13,4(,R13)
         L     R14,12(,R13)        RESTORE REGS
         LM    R2,R12,28(R13)
         BR    R14                 RETURN
         EJECT
BLDLERR  DS    0H
         WTO   'SDLODLPA - BLDL ERROR',ROUTCDE=(2,11)
         ABEND 8,DUMP
         SPACE 5
LOADERR  DS    0H
         WTO   'SDLODLPA - LOAD ERROR',ROUTCDE=(2,11)
         ABEND 12,DUMP
         EJECT
JPAQERR  DS    0H
         WTO   'SDLODLPA - JPAQ ENTRY MISSING',ROUTCDE=(2,11)
         ABEND 16,DUMP
         EJECT
         LTORG
         DROP  R12
         SPACE 5
LOADRET  DC    2F'0'
HEXTAB   DC    X'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'
         SPACE 1
BLDLIST  DS    0F
         DC    AL2(1),AL2(58)
BLDLDATA DS    0XL58
MODNAME  DS    CL8
         DS    XL50
         SPACE 2
         END
