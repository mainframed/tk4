ICFCATL  TITLE '-----  PRODUCE CONCISE LISTING OF ICF CATALOG   -----'
*---------------------------------------------------------------------*
*                                                                     *
*   PROGRAM NAME:  ICFCATL                                            *
*                                                                     *
*   PURPOSE:       READ OUTPUT OF 'EXPORT TEMP' ON AN ICF CATALOG     *
*                  AND PRINT A CONDENSED LISTING OF WHAT'S CATALOGED  *
*                                                                     *
*   AUTHOR:        LEONARD D. WOREN                                   *
*                                                                     *
*   DATE:          FEBRUARY 15, 1984                                  *
*                                                                     *
*   ATTRIBUTES:    NONE                                               *
*                                                                     *
*   INSTALLATION:  HUGHES AIRCRAFT COMPANY                            *
*                                                                     *
*   UPDATES:                                                          *
*      05/80/84 LDW  ADD LINECNT= PARM                                *
*                                                                     *
*---------------------------------------------------------------------*
         EJECT ,
         MACRO
&NFS     TYPENT  &TYPE,&DESC
&NFS     DC    Y(TYPE$&TYPE-$),C'&TYPE',CL10&DESC,XL3'00',F'0'
         MEND
         EJECT ,
ICFCATL  OSENTER  EXIT=LEAVE,RC=0,PARMREG=R2,LENREG=R3,ADDRREG=R4,     $
               ENV=(CALL,SIM)
$        EQU   ICFCATL                  MAS'S STUNT
LINK     EQU   R11                      INTERNAL LINKAGE REGISTER
         LTR   R3,R3                    ANY PARM?
         SPACE 1
PARMLOOP BNP   NO$PARM                  NO - SKIP
         CH    R3,=H'4'                 LONG ENOUGH?
         BL    NO$PARM                  NO - SKIP
         CLC   =C'TEST',0(R4)           PARM=TEST?
         BNE   PARM$01                  NO - SKIP
         OI    FLAGS,FTEST              YES - SET FLAG FOR LATER
         LA    R4,5(,R4)                -> NEXT PARM ITEM
         SH    R3,=H'5'                 DECREMENT LENGTH
         B     PARMLOOP                 CONTINUE IF MORE PARM
         SPACE 2
PARM$01  CH    R3,=H'10'                LONG ENOUGH?
         BL    NO$PARM                  NO - SKIP
         CLC   =C'LINECNT=',0(R4)       PARM=LINECNT=NN?
         BNE   NO$PARM                  NO - SKIP
         IC    R0,8(,R4)                GET FIRST DIGIT
         IC    R1,9(,R4)                GET SECOND DIGIT
         N     R0,=F'15'                STRIP IT
         N     R1,=F'15'                STRIP IT
         MH    R0,=H'10'                SCALE FIRST DIGIT
         AR    R0,R1                    COMBINE DIGITS
         SH    R0,=H'7'                 ADJUST FOR MY OVERHEAD
         STH   R0,LINECT                SAVE FOR PUTLINE'S USE
         SPACE 3
NO$PARM  OPEN  (CATIN,,SYSPRINT,(OUTPUT))
         TM    CATIN+48,X'10'
         BNO   ABEND99
         TM    SYSPRINT+48,X'10'
         BO    OPENOK
ABEND99  ABEND 99
OPENOK   GET   CATIN                    READ EXPORT HEADER REC # 1
         MVC   HEADER1+80(8),X'18'(R1)  PUT HIS DATE INTO MY HEADER
         MVC   HEADER1+91(8),X'10'(R1)  PUT HIS TIME INTO MY HEADER
         GET   CATIN                    READ EXPORT HEADER REC # 2
         GET   CATIN                    READ EXPORT HEADER REC # 3
******** MVC   HEADER1+33(44),X'BF'(R1) PUT CATALOG NAME INTO MY HEADER
         GET   CATIN                    READ EXPORT HEADER REC # 4
         GET   CATIN                    READ EXPORT HEADER REC # 5
         MVC   HEADER1+33(44),9(R1)     PUT CATALOG NAME INTO MY HEADER
         GET   CATIN                    READ EXPORT HEADER REC # 6
         GET   CATIN                    READ EXPORT HEADER REC # 7
         GET   CATIN                    READ EXPORT HEADER REC # 8
         GET   CATIN                    READ EXPORT HEADER REC # 9
         SPACE 3
LOOP     MVC   OLINE,BLANKS             CLEAR PRINT LINE
         GET   CATIN                    GET A CATALOG RECORD
         LH    R3,4(,R1)                SAVE LENGTH OF RECORD (NOT RDW)
         SH    R3,=H'2'                 ADJUST FOR LL
         LA    R4,4+2(,R1)              -> FIRST CELL IN RECORD
*                                       (SKIP RDW (4) & LL (2) )
         LA    R2,TYPETBL               -> CELL TYPE TABLE
         SPACE 1
TYPELOOP CLC   2(1,R4),2(R2)            THIS AN INTERESTING ENTRY TYPE?
         BE    PROCESS                  YES - USE IT
         LA    R2,TYPETBLL(,R2)         -> NEXT ENTRY TYPE
         CLI   0(R2),X'FF'              END OF TABLE?
         BNE   TYPELOOP                 NO - KEEP LOOKING
******** B     LOOP                     YES - IGNORE THIS RECORD
         LA    R2,TYPEUNKN              YES - PROCESS AS UNKNOWN TYPE
         SPACE 2
PROCESS  MVC   OL#ENTRY,3(R2)           FILL IN ENTRY TYPE
         L     R14,16(,R2)              GET ENTRY COUNT
         LA    R14,1(,R14)              INCREMENT
         ST    R14,16(,R2)              SAVE UPDATED ENTRY COUNT
         LH    R15,0(,R2)               GET OFFSET OF ROUTINE
         B     $(R15)                   INVOKE CORRECT ROUTINE
         EJECT ,
*---------------------------------------------------------------------*
*  PROCESS ENTRY TYPE 'NONVSAM'         PAGE 82                       *
*---------------------------------------------------------------------*
         USNGX NVNC,R4
TYPE$A   MVC   OL#NAME,NVNAME           ENTRY NAME TO PRINT LINE
         LH    R2,NVOLCNT               GET VOLUME COUNT
         SH    R3,NVCELEN               SUBTRACT LENGTH OF THIS CELL
         AH    R4,NVCELEN               -> OWNER CELL
         SH    R3,NVCELEN               SUBTRACT LENGTH OF THIS CELL
         AH    R4,NVCELEN               -> ASSOCIATION OR VOLUME CELL
         CLI   NVTYPE,X'03'             ASSOCIATION CELL?
         BNE   *+12                     NO - SKIP
         SH    R3,NVCELEN               SUBTRACT LENGTH OF THIS CELL
         AH    R4,NVCELEN               -> VOLUME CELL
         BP    *+8                      CONTINUE IF OK
         BAL   R14,LOGICERR             DIE IF RECORD EXHAUSTED
         DROPX R4                       NVNC
         USNGX VOLCELL,R4
         CLI   VOLTYPE,X'04'            IS IT A VOLUME CELL???
         BE    *+8                      YES - CONTINUE
         BAL   R14,LOGICERR             NO - DIE
         SPACE 1
A$VOL$LP MVC   OL#VOLSR,VOLSERN         VOLSER TO PRINT LINE
         HEX   OL#DEVTP,VOLDEVTP        DEVTYPE TO PRINT LINE
         LA    R1,VOLDEVTP              -> HEX DEVTYPE
         BAL   LINK,DEVTYPE             SEE IF WE CAN MAKE IT USEFUL
         LH    R0,VOLFLSEQ              GET FILE SEQUENCE NUMBER
         CVD   R0,DWD                   CONVERT TO PACKED
         MVC   WORK(6),=X'402020202020'  COPY EDIT MASK
         ED    WORK(6),DWD+5
         MVC   OL#FSEQN,WORK+2
         BAL   LINK,PUTLINE
         SH    R3,VOLLEN                SUBTRACT LENGTH OF THIS CELL
         AH    R4,VOLLEN                -> NEXT CELL
         BCT   R2,*+8                   CONTINUE IF MORE VOLUME CELLS
         B     LOOP                     GET NEXT RECORD IF NONE
         LTR   R3,R3                    ANY LENGTH LEFT?
         BP    A$VOL$LP                 YES - FORMAT NEXT VOL LINE
         BAL   R14,LOGICERR             NO - DIE
         DROPX R4                       VOLCELL
         EJECT ,
*---------------------------------------------------------------------*
*  PROCESS ENTRY TYPE 'ALIAS'           PAGE 82                       *
*---------------------------------------------------------------------*
         USNGX NVNC,R4
TYPE$X   MVC   OL#NAME,NVNAME           ENTRY NAME TO PRINT LINE
         SH    R3,NVCELEN               SUBTRACT LENGTH OF THIS CELL
         AH    R4,NVCELEN               -> ASSOCIATION CELL
         DROPX R4                       NVNC
         USNGX ASSOCC,R4
         CLI   ASCTYPE,X'03'            ASSOCIATION CELL?
         BE    *+8                      YES - OK
         BAL   R14,LOGICERR             NO - DIE
*  DON'T CHECK THE NUMBER OF ASSOCIATIONS (ASCOUNT)
         LA    R5,ASCKEYS               -> FIRST ASSOCIATION ENTRY
         USNGX ASCKEYS,R5
         IC    R15,ASCKYLEN             GET LENGTH OF ASSOC KEY
         BCTR  R15,0                    -1 FOR EX
         MVC   OL#MISC(*-*),ASCKEY      << EXECUTED >>
         EX    R15,*-6                  ASSOCIATED NAME TO PRINT LINE
         BAL   LINK,PUTLINE
         SH    R3,ASCLEN                SUBTRACT LENGTH OF THIS CELL
         AH    R4,ASCLEN                -> NEXT CELL
         LTR   R3,R3                    ANY MORE CELLS?
         BNP   LOOP                     NO - GET NEXT RECORD
         B     UNKN$LP                  YES - WHAT ARE THEY???
         SPACE 2
         DROPX R4,R5                    ASSOCC, ASCKEYS
         EJECT ,
*---------------------------------------------------------------------*
*  PROCESS ENTRY TYPE 'GDG BASE'        PAGE 83                       *
*---------------------------------------------------------------------*
         USNGX GDGNC,R4
TYPE$B   MVC   OL#NAME,GDGNAME          ENTRY NAME TO PRINT LINE
         LA    R15,GDGNAME+43           -> END OF NAME
         CLI   0(R15),C' '              FIND END OF NAME?
         BNE   *+12                     YES - GO COMPUTE LENGTH
         BCT   R15,*-8                  TRY PREVIOUS CHARACTER
         BAL   R14,LOGICERR             SCANNED THRU ALL OF STORAGE???
         LA    R14,GDGNAME-1            -> START OF NAME -1
         SR    R15,R14                  COMPUTE LENGTH OF BASE NAME
         STH   R15,GDG#LEN              SAVE LENGTH OF GDG BASE (KEY)
         MVC   GDG#NAME,GDGNAME         SAVE GDG BASE NAME
         CLI   GDGNOEXT,0               ANY EXTENSION RECORDS?
         BE    B$NO$EXT                 NO OK
         MVC   OL#UNKN(14),=C'NBR EXT RECS ='
         HEX   OL#UNKN+15,GDGNOEXT,1
B$NO$EXT SH    R3,GDGCELLN              SUBTRACT LENGTH OF THIS CELL
         AH    R4,GDGCELLN              -> OWNER CELL
         SH    R3,GDGCELLN              SUBTRACT LENGTH OF THIS CELL
         AH    R4,GDGCELLN              -> GAT CELL
         BP    *+8                      CONTINUE IF OK
         BAL   R14,LOGICERR             DIE IF RECORD EXHAUSTED
         DROPX R4                       GDGNC
         USNGX GATC,R4
         CLI   GATYPE,X'05'             IS IT A GEN AGING TABLE CELL?
         BE    *+8                      YES - CONTINUE
         BAL   R14,LOGICERR             NO - DIE
         SPACE 1
         MVC   OL#MISC(6),=C'LIMIT='
         SR    R0,R0                    CLEAR FOR IC
         IC    R0,GATLIMIT              GET MAX NUMBER OF ENTRIES
         CVD   R0,DWD                   CONVERT TO PACKED
         OI    DWD+7,X'0F'              REMOVE SIGN NIBBLE
         UNPK  OL#MISC+6(3),DWD
         SPACE 1
         MVC   OL#MISC+11(8),=C'CURRENT='
         SR    R0,R0                    CLEAR FOR IC
         IC    R0,GATCNT                GET CURRENT NUMBER OF ENTRIES
         CVD   R0,DWD                   CONVERT TO PACKED
         OI    DWD+7,X'0F'              REMOVE SIGN NIBBLE
         UNPK  OL#MISC+19(3),DWD
         SPACE 1
         MVC   OL#MISC+25(9),=C'NOSCRATCH'  ASSUME NOSCRATCH
         TM    GATATTR,GATSCRTH         SCRATCH?
         BNO   *+10                     NO - OK
         MVC   OL#MISC+25(2),BLANKS     YES - CHANGE TO '  SCRATCH'
         SPACE 1
         MVC   OL#MISC+36(7),=C'NOEMPTY'  ASSUME NOEMPTY
         TM    GATATTR,GATDELET         EMPTY?
         BNO   *+10                     NO - OK
         MVC   OL#MISC+36(2),BLANKS     YES - CHANGE TO '  EMPTY'
         BAL   LINK,PUTLINE
         SR    R5,R5                    CLEAR FOR IC
         IC    R5,GATCNT                GET CURRENT NUMBER OF ENTRIES
         SH    R3,GATCELN               SUBTRACT LENGTH OF THIS CELL
         AH    R4,GATCELN               -> NEXT CELL
         LTR   R3,R3                    ANY MORE CELLS?
         BNP   LOOP                     NO - GET NEXT RECORD
         DROPX R4                       GATC
         EJECT ,
*---------------------------------------------------------------------*
*  PROCESS GDS 'NONVSAM' SUBENTRIES     PAGE 83                       *
*---------------------------------------------------------------------*
         SPACE 1
         USNGX GDSNC,R4
GDG$LOOP CLI   GDSTYPE,C'H'             IS THIS A GDG NAME CELL?
         BE    *+8                      YES - CONTINUE
         BAL   R14,LOGICERR             NO - DIE
         MVC   OL#ENTRY+3(7),=C'NONVSAM'  INDICATE GDG-NONVSAM
         L     R14,GDGCOUNT             GET ENTRY COUNT
         LA    R14,1(,R14)              INCREMENT
         ST    R14,GDGCOUNT             SAVE UPDATED ENTRY COUNT
         MVC   OL#NAME(35),GDG#NAME     ENTRY NAME TO PRINT LINE
         LA    R1,OL#NAME               -> START OF NAME FIELD
         AH    R1,GDG#LEN               -> END OF GDG BASE NAME
         SR    R0,R0                    CLEAR FOR ICM
         ICM   R0,B'0011',GDSGENO       GET GENERATION NUMBER
         CVD   R0,DWD                   BINARY -> PACKED
         UNPK  2(4,R1),DWD              PACKED -> PRINTABLE
         SR    R0,R0                    CLEAR FOR IC
         IC    R0,GDSVERNO              GET VERSION NUMBER
         CVD   R0,DWD                   BINARY -> PACKED
         UNPK  7(2,R1),DWD              PACKED -> PRINTABLE
         OC    0(9,R1),=C'.G0000V00'    PUT IN MISC, REMOVE SIGNS
******** LH    R2,GDSVOLCT              GET VOLUME COUNT
*  APPARENTLY, THE ABOVE NUMBER IS ALWAYS 1 FOR A GDS!!!
*  SO, USE A DIFFERENT NUMBER...
*        LH    R2,GDSCMPLN              GET LENGTH OF GDS COMPONENT
         SR    R2,R2                    CLEAR FOR ICM
         ICM   R2,B'0011',GDSCMPLN      GET LENGTH OF GDS COMPONENT
         SH    R3,GDSCELEN              SUBTRACT LENGTH OF THIS CELL
         SH    R2,GDSCELEN              SUBTRACT LENGTH OF THIS CELL
         AH    R4,GDSCELEN              -> NEXT CELL
         DROPX R4                       GDSNC
         USNGX VOLCELL,R4               I HOPE
         CLI   VOLTYPE,X'01'            OWNER CELL?
         BNE   H$NO$OWN                 NO - SKIP
         SH    R3,VOLLEN                SUBTRACT LENGTH OF THIS CELL
         SH    R2,VOLLEN                SUBTRACT LENGTH OF THIS CELL
         AH    R4,VOLLEN                -> NEXT CELL
         LTR   R3,R3                    ANY MORE CELLS?
         BP    *+8                      YES - CONTINUE
         BAL   R14,LOGICERR             DIE IF RECORD EXHAUSTED
         LTR   R2,R2                    ANY MORE CELLS?
         BP    *+8                      YES - CONTINUE
         BAL   R14,LOGICERR             DIE IF RECORD EXHAUSTED
         SPACE 1
H$NO$OWN CLI   VOLTYPE,X'03'            ASSOCIATION CELL?
         BNE   H$NO$ASC                 NO - SKIP
         SH    R3,VOLLEN                SUBTRACT LENGTH OF THIS CELL
         SH    R2,VOLLEN                SUBTRACT LENGTH OF THIS CELL
         AH    R4,VOLLEN                -> VOLUME CELL
         LTR   R3,R3                    ANY MORE CELLS?
         BP    *+8                      CONTINUE IF OK
         BAL   R14,LOGICERR             DIE IF RECORD EXHAUSTED
         SPACE 1
H$NO$ASC CLI   VOLTYPE,X'04'            IS IT A VOLUME CELL???
         BE    *+8                      YES - CONTINUE
         BAL   R14,LOGICERR             NO - DIE
         SPACE 1
H$VOL$LP MVC   OL#VOLSR,VOLSERN         VOLSER TO PRINT LINE
         HEX   OL#DEVTP,VOLDEVTP        DEVTYPE TO PRINT LINE
         LA    R1,VOLDEVTP              -> HEX DEVTYPE
         BAL   LINK,DEVTYPE             SEE IF WE CAN MAKE IT USEFUL
         LH    R0,VOLFLSEQ              GET FILE SEQUENCE NUMBER
         CVD   R0,DWD                   CONVERT TO PACKED
         MVC   WORK(6),=X'402020202020'  COPY EDIT MASK
         ED    WORK(6),DWD+5
         MVC   OL#FSEQN,WORK+2
         BAL   LINK,PUTLINE
         SH    R3,VOLLEN                SUBTRACT LENGTH OF THIS CELL
         SH    R2,VOLLEN                SUBTRACT LENGTH OF THIS CELL
         AH    R4,VOLLEN                -> NEXT CELL
******** BCT   R2,*+8                   CONTINUE IF MORE VOLUME CELLS
******** B     NEXT$GDS                 PROCESS NEXT GDS IF NONE
         LTR   R2,R2                    DOWN WITH THIS COMPONENT?
         BNP   NEXT$GDS                 NO - PROCESS NEXT, IF ANY
         LTR   R3,R3                    ANY LENGTH LEFT?
         BP    H$VOL$LP                 YES - FORMAT NEXT VOL LINE
         BAL   R14,LOGICERR             NO - DIE
NEXT$GDS BCT   R5,*+8                   CONTINUE IF MORE GDS ENTRIES
         B     LOOP                     GET NEXT RECORD IF NO MORE GDS
         LTR   R3,R3                    ANY LENGTH LEFT?
         BP    GDG$LOOP                 YES - FORMAT NEXT GDS LINE
         BAL   R14,LOGICERR             NO - DIE
         DROPX R4                       VOLCELL
         EJECT ,
*---------------------------------------------------------------------*
*  PROCESS UNSUPPORTED ENTRY TYPE                                     *
*---------------------------------------------------------------------*
TYPE$H   EQU   *                        GDG ENTRY
TYPE$C   EQU   *                        CLUSTER
TYPE$D   EQU   *                        DATA
TYPE$I   EQU   *                        INDEX
TYPE$G   EQU   *                        AIX
TYPE$R   EQU   *                        PATH
TYPE$U   EQU   *                        UCAT CONNECTOR
TYPE$T   EQU   *                        TRUENAME
TYPE$$   EQU   *                        UNKNOWN
         MVC   OL#UNKN(3),=C'LL='
         HEX   OL#UNKN+3,(0,R1),2       LL
         SPACE 1
UNKN$LP  MVC   OL#UNKN+11(7),=C'L''CELL='
         HEX   OL#UNKN+18,(0,R4),2      LENGTH OF FIRST CELL
         MVC   OL#UNKN+24(5),=C'TYPE='
         OC    OL#UNKN+29(1),2(R4)      CELL TYPE
         MVI   OL#UNKN+31,C'('
         HEX   OL#UNKN+32,(2,R4),1,BYTE=C')'  CELL TYPE
         LH    R1,0(,R4)                GET CELL LENGTH
         SH    R1,=H'4'                 -3 ALEADY PRINTED, -1 FOR EX
         CH    R1,=Y(L'OLINE-(OL#UNKN+38-OLINE)-1)  TOO LONG?
         BNH   *+8                      NO - OK
         LH    R1,=Y(L'OLINE-(OL#UNKN+38-OLINE)-1)  YES - USE MAX
         OC    OL#UNKN+38(*-*),3(R4)    << EXECUTED >>
         EX    R1,*-6                   PRINT SOME OF THE RECORD
         BAL   LINK,PUTLINE
         SH    R3,0(,R4)                SUBTRACT LENGTH OF THIS CELL
         AH    R4,0(,R4)                -> NEXT CELL
         LTR   R3,R3                    ANY MORE CELLS?
         BP    UNKN$LP                  YES - PROCESS
         B     LOOP                     GET NEXT RECORD IF NONE
         EJECT ,
*---------------------------------------------------------------------*
*  END OF FILE ON INPUT DATASET -- PRINT ENTRY COUNTERS               *
*---------------------------------------------------------------------*
EOF      CLOSE CATIN
         SPACE 1
*  FROM HERE ON, I WON'T USE 'PUTLINE', SINCE IT WILL BREAK THE OUTPUT.
*  I CAN GET AWAY WITH THIS BECAUSE I KNOW THE NUMBER OF ENTRY TYPES
*  IS LESS THAN THE PAGE SIZE.
         SPACE 1
         PUT   SYSPRINT,HEADER1         PRINT THE HEADER
         SPACE 1
         MVC   OLINE+10(27),=C'NUMBER OF ENTRIES, BY TYPE:'
         BAL   LINK,PUTLINEB            PRINT LINE AND CLEAR
         MVI   OLINE,C'0'               DOUBLE SPACE THE HEADER
         MVC   OLINE+10(19),=C'COUNT   DESCRIPTION'
         BAL   LINK,PUTLINEB            PRINT LINE AND CLEAR
         MVI   OLINE,C'+'               OVERPRINT THE UNDERLINES
         MVC   OLINE+10(19),=C'_____   ___________'
         BAL   LINK,PUTLINEB            PRINT LINE AND CLEAR
         MVC   OLINE,BLANKS             CLEAR PRINT LINE
         MVI   OLINE,C'0'               DOUBLE SPACE THE FIRST ONE
         LA    R2,TYPETBL               -> FIRST ENTRY
         SR    R3,R3                    CLEAR ACCUMULATOR
         SPACE 2
SUMMLOOP MVC   OLINE+18(10),3(R2)       FILL IN DESCRIPTION
         L     R0,16(,R2)               GET ENTRY COUNT
SUMMLAST AR    R3,R0                    ADD TO RUNNING TOTAL
         CVD   R0,DWD                   MAKE IT PACKED
         MVC   OLINE+06(9),=X'206B2020206B202020'  GET EDIT MASK
         ED    OLINE+05(10),DWD+4       MAKE IT PRINTABLE
         BAL   LINK,PUTLINEB            PRINT LINE AND CLEAR
         LTR   R2,R2                    LAST ENTRY TYPE PRINTED?
         BZ    GRAND                    YES - GO PRINT GRAND TOTAL
         BM    DONE                     YES - LEAVE
         LA    R2,TYPETBLL(,R2)         -> NEXT TYPE ENTRY
         CLI   0(R2),X'FF'              END OF LIST?
         BNE   SUMMLOOP                 NO - DO NEXT
         SR    R2,R2                    YES - SET FLAG
         L     R0,GDGCOUNT              GET GDG ENTRY COUNT
         MVC   OLINE+18(10),=CL10' GDG ENTRY'  SHOW TYPE
         B     SUMMLAST                 GO PRINT THIS LAST COUNTER
         SPACE 3
GRAND    BCTR  R2,0                     BRANCH TO 'DONE' NEXT TIME
         LR    R0,R3                    GET THE GRAND TOTAL
         MVI   OLINE,C'0'               DOUBLE SPACE LAST LINE
         MVC   OLINE+18(10),=CL10'* TOTAL *'
         B     SUMMLAST                 THIS IS INCREDIBLY TRASHY CODE
         SPACE 1
DONE     CLOSE SYSPRINT
         SPACE 1
         B     LEAVE
         SPACE 3
DEVTYPE  LA    R15,DEVTABLE             -> FIRST TABLE ENTRY
         SPACE 1
DT$LOOP  CLC   0(4,R1),0(R15)           THIS IT?
         BE    DT$FOUND                 YES
         LA    R15,4+8(,R15)            -> NEXT TABLE ENTRY
         CLI   0(R15),X'FF'             END OF TABLE?
         BNE   DT$LOOP                  NO - KEEP LOOKING
         BR    LINK                     YES - RETURN WITH NO CHANGE
         SPACE 1
DT$FOUND MVC   OL#DEVTP,4(R15)          SET THE PRINTABLE DEVICE TYPE
         BR    LINK                     AND RETURN TO CALLER
         SPACE 3
LOGICERR SR    R14,R12                  COMPUTE OFFSET OF ERROR
         SH    R14,=H'4'                ACCOUNT FOR LENGTH OF 'BAL'
         STH   R14,DWD                  SAVE FOR UNPK
         BAL   LINK,PUTLINE             PRINT POSSIBLE UNFINISHED LINE
         MVC   OLINE(35),=C'-*** LOGIC ERROR AT OFFSET XXXX ***'
         HEX   OLINE+27,DWD,2
         TM    FLAGS,FTEST              PARM=TEST?
         BO    LE$TEST                  YES - HANDLE DIFFENTLY
         MVC   OLINE+32(36),=C'-- SKIPPING TO NEXT INPUT RECORD ***'
         LH    R15,CURLINE              GET CURRENT LINE NUMBER
         LA    R15,2(,R15)              ADJUST FOR DOUBLE SPACED ERRMSG
         STH   R15,CURLINE              SAVE UPDATED LINE NUMBER
         BAL   LINK,PUTLINE             PRINT THE ERROR MSG
         B     LOOP                     AND GO GET THE NEXT RECORD
         SPACE 2
LE$TEST  ABEND 1000,DUMP
         SPACE 3
PUTLINE  LH    R15,CURLINE              GET CURRENT LINE NUMBER
         LA    R15,1(,R15)              INCREMENT
         STH   R15,CURLINE              SAVE UPDATED LINE NUMBER
         CH    R15,LINECT               IS THIS PAGE FULL?
*        BNH   PL$01                    NO - CONTINUE
         BNH   PL$02                    NO - CONTINUE
         MVC   CURLINE,=H'1'            YES - RESET LINE COUNT
         AP    PAGENUM,=P'1'            INCREMENT PAGE NUMBER
         MVC   WORK,=X'402020202020'    MOVE IN EDIT MASK
         ED    WORK(6),PAGENUM
         MVC   HEADER1+115(4),WORK+2
         MVI   OLINE,C'0'               DOUBLE SPACE THE FIRST ONE
         PUT   SYSPRINT,HEADER1
         PUT   SYSPRINT,HEADER2
         PUT   SYSPRINT,HEADER3
         LH    R15,CURLINE              RESTORE UPDATED LINE COUNTER
         SPACE 2
*PL$01   SR    R14,R14                  CLEAR FOR DIVIDE
*        D     R14,=F'6'                PRINT 5 LINES, THEN A BLANK
*        LTR   R14,R14                  IS THIS THE FIRST IN THE GROUP?
*        BNZ   PL$02                    NO - JUST PRINT IT
*        LH    R15,CURLINE              GET CURRENT LINE NUMBER
*        LA    R15,1(,R15)              INCREMENT
*        STH   R15,CURLINE              SAVE UPDATED LINE NUMBER
*        MVI   OLINE,C'0'               DOUBLE SPACE THIS LINE
         SPACE 2
PL$02    PUT   SYSPRINT,OLINE           PRINT THE LINE
         SPACE 2
         LH    R15,CURLINE              RESTORE UPDATED LINE COUNTER
         SR    R14,R14                  CLEAR FOR DIVIDE
         D     R14,=F'5'                UNDERSCORE EVERY FIFTH LINE
         CH    R14,=F'5'                IS THIS THE LAST IN THE GROUP?
         BNZ   PL$03                    NO - SKIP IT
         MVC   OLINE(2),=C'+_'          OVERPRINT THIS LINE
         MVC   OLINE+2(L'OLINE-2),OLINE+1  PROPAGATE THE UNDERSCORES
         SPACE 1
PUTLINEB PUT   SYSPRINT,OLINE           PRINT THE LINE
         SPACE 2
PL$03    MVC   OLINE,BLANKS             CLEAR THE BUFFER
         BR    LINK                     RETURN TO CALLER
         SPACE 3
         DC    0F'0'                    ALIGNMENT
TYPETBL  TYPENT  A,'NONVSAM'            NONVSAM
TYPETBLL EQU   *-TYPETBL                LENGTH OF A TABLE ENTRY
         TYPENT  C,'CLUSTER'            CLUSTER
         TYPENT  D,'  DATA'             DATA
         TYPENT  I,'  INDEX'            INDEX
         TYPENT  G,' AIX'               AIX
         TYPENT  R,' PATH'              PATH
         TYPENT  B,'GDG BASE'           GDG BASE
         TYPENT  U,'CATALOG'            UCAT CONNECTOR
         TYPENT  T,'TRUENAME'           TRUENAME
         TYPENT  X,' ALIAS'             ALIAS
         TYPENT  H,'   NONVSAM'         GDG ENTRY
         DC    X'FF'                    END OF TABLE
TYPEUNKN TYPENT  $,'*UNKNOWN*'          UNKNOWN
         SPACE 2
         LTORG ,
         SPACE 2
DWD      DC    D'0'
GDGCOUNT DC    F'0'                     NUMBER OF GDG ENTRIES PRINTED
GDG#LEN  DC    H'0'                     LENGTH OF CURRENT GDG BASE NAME
GDG#NAME DC    CL35' '                  NAME   OF CURRENT GDG BASE
PAGENUM  DC    PL3'0'
LINECT   DC    H'55'
CURLINE  DC    H'9999'
WORK     DC    CL6' '
FLAGS    DC    B'0'
FTEST    EQU   X'80'
         DC    X'00'                    WASTED FOR ALIGNMENT
         SPACE 2
DEVTABLE DC    X'3010200E',C'3380    '
         DC    X'3050200B',C'3350    '
         DC    X'32008003',C'3400-5  '
         DC    X'32108003',C'3400-6  '
         DC    X'34208003',C'3400-4  '
         DC    X'3050200D',C'3330-1  '
         DC    X'34208001',C'2400-4  '
         DC    X'3040200A',C'3340    '
         DC    X'3010200C',C'3375    '
         DC    X'30502009',C'3330    '
         DC    X'30C08001',C'2400-2  '
         DC    X'30008001',C'2400    '
         DC    X'30C08003',C'3400-2  '
         DC    X'34008003',C'3400-3  '
         DC    X'30008001',C'2400    '
         DC    X'00000000',C'        '  INDIRECT CATALOG
         DC   5X'00000000',C'        '  PATCH SPACE
         DC    X'FF'                    END OF TABLE INDICATOR
         SPACE 2
         HEXTAB  DUAL=NO
BLANKS   DC    CL133' '
HEADER1  DC    CL133'1CONDENSED LISTING OF CATALOG --'
         ORG   HEADER1+110
         DC    C'PAGE'
         ORG   ,
HEADER2  DC    CL133'-ENTRY TYPE    DEV TYPE    VOLSER  FSEQ   ENTRY NA$
               ME'
HEADER3  DC    CL133'+__________    ________    ______  ____   ________$
               __'
OLINE    DC    CL133' '
         ORG   OLINE+1
OL#ENTRY DC    C'ENTRY TYPE',CL4' '
OL#UNKN  DS    0C                       START OF AREA FOR UNKNOWN INFO
OL#DEVTP DC    C'DEV TYPE',CL4' '
OL#VOLSR DC    C'VOLSER',CL2' '
OL#FSEQN DC    C'FSEQ',CL3' '
OL#NAME  DC    CL44' ',CL4' '
OL#MISC  DS    0C
         ORG   OLINE
         DC    CL133' '
         ORG   ,
DCBEXIT  DCBEXIT  BLKSIZE=6118
EXLST    DC    0F'0',X'85',AL3(DCBEXIT)
CATIN    DCB   DDNAME=CATIN,MACRF=GL,EODAD=EOF,                        $
               DSORG=PS,RECFM=VBS,BFTEK=A
SYSPRINT DCB   DDNAME=SYSPRINT,MACRF=PM,EXLST=EXLST,                   $
               DSORG=PS,RECFM=FBA,LRECL=133
         EJECT ,
NVNC     DSECT     PAGE 86              NONVSAM NAME CELL
NVCELEN  DS    H                        LENGTH OF NVNC INCLUDING ITSELF
NVTYPE   DC    C'A'                     TYPE 'A' FOR NONVSAM
NVRESV   DS    X                        RESERVED
NVOLCNT  DS    H                        NUMBER OF VOLUME CELLS (TO 255)
NVKEYLN  DS    AL1                      LENGTH OF NONVSAM KEY
NVNAME   DS    CL44                     NONVSAM NAME
NVPAD    DS    X                        PAD VALUE (BINARY ZEROES)
         SPACE 3
VOLCELL  DSECT     PAGE 89              VOLUME CELL
VOLLEN   DS    H                        LENGTH OF VOLCELL INCL ITSELF
VOLTYPE  DC    X'04'                    TYPE X'04' FOR VOLUME CELL
VOLOFSET DS    X                        NOT USED
VOLSERN  DS    CL6                      VOLUME SERIAL NUMBER
VOLDEVTP DS    XL4                      DEVICE TYPE
VOLFLAG1 DS    B                        VOLUME FLAG 1
VOLPRIME EQU   X'80'                    PRIME VOLUME - ALLOCATED SPACE
VOLCANDI EQU   X'40'                    CANDIDATE VOLUME NO SPACE
VOLOFLOW EQU   X'20'                    OVERFLOW KEYRANGE ONLY
VOLCONV  EQU   X'10'                    CONVERTED VSAM DATA SET VOLUME
VOLNVSAM EQU   X'08'                    NONVSAM VOLUME CELL
VOLKYRNG EQU   X'04'                    KEYRANGE QUALIFIER PRESENT
VOLVPCI  EQU   X'02'                    PRIMARY VVR CI
VOLSSQWD EQU   X'01'                    SEQUENCE SET WITH DATA
VOLFLAG2 DS    B                        RESERVED
VOLVVRBA DS    0XL4                     RELATIVE BYTE ADDRESS OF VVR
VOLDSTTR DS    XL3                      NONVSAM FORMAT 1 DSCB TTR
         DS    X                        RESERVED
VOLFLSEQ DS    H                        NONVSAM FILE SEQUENCE NO (TAPE)
VOLKRQL  DS    XL4                      KEYRANGE QUALIFIER (VSAM ONLY)
         DS    XL4                      RESERVED FOR NONVSAM
VOLLKYLN DS    H                        LENGTH OF LOW KEY RANGE KEY
VOLLOWKY DS    0C                       1-64 BYTE LOW KEY
VOLHKYLN DS    H                        LENGTH OF HIGH KEY RANGE KEY
VOLHIKY  DS    0C                       1-64 BYTE HIGH KEY
         SPACE 3
ASSOCC   DSECT     PAGE 89              ASSOCIATION CELL
ASCLEN   DS    H                        LENGTH OF ASSOCIATION CELL
ASCTYPE  DC    X'03'                    TYPE X'03' FOR ASSOCC
ASCOUNT  DS    HL2                      COUNT OF ASSOCIATIONS
         SPACE 1
*  THE FOLLOWING FIELDS ARE REPEATED 'ASCOUNT' TIMES
ASCKEYS  DS    0X
ASCFLAG  DS    X                        RESERVED
ASCREUS  EQU   X'80'                    USED IN RELATION CELL ONLY
ASCKYLEN DS    AL1                      LENGTH OF CONDENSED ASSOC KEY
ASCKEY   DS    0C                       2-45 BYTE CONDENSED ASSOC KEY
         SPACE 3
GATC     DSECT     PAGE 90              GENERATION AGING TABLE CELL
GATCELN  DS    H                        LENGTH OF GATC
GATYPE   DC    X'05'                    TYPE X'05' FOR GATC
GATATTR  DS    B                        ATTRIBUTES
GATDELET EQU   X'80'                    EMPTY SPECIFIED
GATSCRTH EQU   X'40'                    SCRATCH SPECIFIED
GATLIMIT DS    AL1                      MAXIMUM GDS ENTRIES IN GDG BASE
GATCNT   DS    AL1                      CURRENT NBR OF ENTRIES IN GAT
         SPACE 1
*  THE FOLLOWING FIELDS ARE REPEATED 'GATCNT' TIMES
GAT      EQU   *
GATENT   EQU   *
GATEXTNO DS    AL1                      EXTENSION RECORD SEQUENCE NBR
GATGEN   DS    HL2                      GENERATION NUMBER OF GDS
GATWRAP  EQU   X'80'                    GENERATION EXCEEDED 9999
GATVER   DS    AL1                      VERSION NUMBER OF GDS
         SPACE 3
GDGNC    DSECT     PAGE 86              GENERATION DATA GROUP NAME CELL
GDGCELLN DS    H                        LNTH OF GDGNC INCLUDING ITSELF
GDGTYPE  DC    C'B'                     TYPE 'B' FOR GDG
GDGCMPLN DS    AL2                      LENGTH OF GDG COMPONENT
GDGNOEXT DS    AL1                      NUMBER OF EXTENSION RECORDS
GDGKYLEN DS    AL1                      LENGTH OF GDG KEY
GDGNAME  DS    CL44                     1-35 BYTE GDG NAME
GDGPAD   DS    X                        PAD VALUE (BINARY ZEROES)
         SPACE 3
GDSNC    DSECT     PAGE 86              GENERATION DATASET NAME CELL
GDSCELEN DS    H                        LENGTH OF GDSNC
GDSTYPE  DC    C'H'                     TYPE 'H' FOR GDSNC
GDSCMPLN DS    AL2                      LENGTH OF GDS COMPONENT
GDSGENO  DS    AL2                      GENERATION NUMBER OF GDS
GDSVERNO DS    AL1                      VERSION NUMBER OF GDS
GDSVOLCT DS    AL2                      NUMBER OF VOLUME CELLS IN GDS
         SPACE 3
         END
