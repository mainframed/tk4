         TITLE 'JES2 SPOOL INTERFACE SVC'
***********************************************************************
*                                                                     *
* TITLE -      JES2 SPOOL INTERFACE SVC                               *
*                                                                     *
* RELEASE -    1.0         JES SPOOL INTERFACE RELEASE                *
*                                                                     *
* AUTHOR -     MICHAEL LEE EMIGH                                      *
*              UNITED AIR LINES - EXOKF COMPUTER CENTER               *
*              1200 W. ALGONQUIN ROAD                                 *
*              ELK GROVE VILLAGE, ILLINOIS                            *
*              PHONE: 312-952-4371
*                                                                     *
* FUNCTION -   PROVIDES INTERFACE BETWEEN AN APPLICATION PROGRAM AND  *
*              JES2 FOR READING JES2 CHECKPOINT RECORDS AND READING   *
*              OR WRITING TO THE JES2 SPOOL DATASETS.                 *
*                                                                     *
* INPUT -      STANDARD SVC LINKAGE CONVENTIONS                       *
*              REGISTER 0 - FUNCTION PARAMETER REGISTER               *
*              REGISTER 1 - FUNCTION PARAMETER REGISTER               *
*              REGISTER 3 - ADDRESS OF CVT                            *
*              REGISTER 4 - ADDRESS OF TCB                            *
*              REGISTER 5 - ADDRESS OF SVRB                           *
*              REGISTER 6 - ADDRESS OF SVC ENTRY POINT                *
*              REGISTER 7 - ADDRESS OF ASCB                           *
*              REGISTER 15 - FUNCTION CODE                            *
*                                                                     *
*                                                                     *
* OUTPUT -     REGISTER 0  - FUNCTION DEPENDENT DATA                  *
*              REGISTER 1  - FUNCTION DEPENDENT DATA                  *
*              REGISTER 15 - RETURN CODE FROM FUNCTION AS FOLLOWS     *
*                 0 - NORMAL RETURN FROM FUNCTION                     *
*                 4 - JES2 NOT ACTIVE                                 *
*                 8 - INVALID FUNCTION CODE                           *
*             >= 12 - FUNCTION DEPENDENT CODE                         *
*                                                                     *
*                                                                     *
* ATTRIBUTES - REENTERANT, REUSABLE, REFRESHABLE                      *
*                                                                     *
* NOTES -      THIS CODE IS JES2 RELEASE DEPENDENT.  CURRENT JES2     *
*              RELEASE SUPPORTED IS 4.1.                              *
*                                                                     *
*                                                                     *
***********************************************************************
         COPY $HASPGEN
         EJECT
         TITLE 'JES2 SPOOL INTERFACE SVC'
RPARM0   EQU   0                  PARAMETER REGISTER 0
RPARM1   EQU   1                  PARAMETER REGISTER 1
RCVT     EQU   3                  CVT ADDRESS REGISTER
RTCB     EQU   4                  TCB ADDRESS REGISTER
RSVRB    EQU   5                  SVRB ADDRESS REGISTER
RSSVT    EQU   6                  JES2 SSVT ADDRESS REGISTER
RASCB    EQU   7                  ASCB ADDRESS REGISTER
RBUF     EQU   8                  BUFFER ADDRESS REGISTER
RLINK    EQU   11                 INTERNAL LINKAGE REGISTER
BASEREG  EQU   12                 BASE REGISTER
RSAVE    EQU   13                 O/S SAVE AREA ADDRESS REGISTER
RRC      EQU   15                 O/S ENTRY AND RC REGISTER
         SPACE 2
LPRFX    EQU   X'58'              BUFFER PREFIX LENGTH
CD       EQU   X'80'              DATA CHAIN
CC       EQU   X'40'              COMMAND CHAIN
SILI     EQU   X'20'              SUPPRESS INCORRECT LENGTH
SKIP     EQU   X'10'              SKIP DATA TRANSFER
PCI      EQU   X'08'              PROGRAM CONTROLLED INTERRUPTION
IDA      EQU   X'04'              INDIRECT ADDRESSING
         TITLE 'IOB'
         PRINT NOGEN
         SPACE 2
         IEZIOB
         SPACE 2
         ORG   IOBSEEK+8
CHANPGM  DS    0D                  CHANNEL PGM AREA
CCW1     DS    D                   SET SECTOR / READ HA
CCW2     DS    D                   SEARCH ID EQUAL
CCW3     DS    D                   TIC
CCW4     DS    D                   READ KEY AND DATA
COUNT    DS    D                   DA COUNT FIELD
         SPACE 2
BUFDSECT EQU   IOBNIOBA            EQUATE BUFDSECT
         SPACE
         ORG   IOBNIOBA+LPRFX      ORG PAST PREFIX
         SPACE 1
BUFSTART DS    0D                  BUFFER START
         SPACE 3
         PRINT GEN
         TITLE 'JES2 SPOOL INTERFACE SVC'
IGC00230 CSECT ,
         SPACE 2
         $SVT
         EJECT
         $TED
         EJECT
         $JQE
         EJECT
         $HCT
         EJECT
         $SJB
         EJECT
         $JCT
         EJECT
         $ASCB
         EJECT
         $CSCB
         TITLE 'JES2 SPOOL INTERFACE SVC'
IGC00230 CSECT                     JES2 SPOOL INTERFACE SVC
         USING IGC00230,BASEREG    EST. ADDRESSIBILITY
         USING RBSECT,R5           SET SVRB ADDRESSIBILITY
         USING CVT,RCVT            SET CVT ADDRESSIBILITY
         USING TCB,RTCB            SET TCB ADDRESSIBILITY
         USING ASCB,RASCB          SET ASCB ADDRESSIBILITY
         USING IOBNIOBA,RBUF       SET BUFFER ADDRESSIBILITY
         XC    JIRETURN(JISL),JIRETURN CLEAR SVRB WORK AREA
         STM   R14,R1,JIRETURN     SAVE RETURN ADDRESS AND PARM REGS
         LR    BASEREG,R6          LOAD BASE ADDRESS
         SLR   R1,R1               CLEAR SSVT ADDRESS REG
         SLR   R0,R0               CLEAR SJB ADDRESS
         LA    R15,4               SET JES2 NOT ACTIVE ERROR CODE
         L     R6,TCBJSCB          POINT TO JSCB
         L     R6,JSCBSSIB-IEZJSCB(,R6) POINT TO SSIB
         USING SSIB,R6             SSIB ADDRESSIBILITY
         L     R2,CVTJESCT         POINT TO SUBSYSTEM CNTL TBL
         USING JESCT,R2            JESCT ADDRESSIBILITY
         LA    R2,JESSSCT-(SSCTSCTA-SSCT) POINT TO SSCT HEAD
         USING SSCT,R2             SSCT ADDRESSIBILITY
         SPACE 2
INIT0    DS    0H                  SEARCH FOR JES2 SSCT
         ICM   R2,15,SSCTSCTA      POINT TO NEXT SSCT
         BZR   R14                 IF ZERO THEN ERROR
         CLC   SSCTSNAM,SSIBSSNM   JES SSCT?
         BNE   INIT0               NO, THEN LOOP
         ICM   R6,15,SSCTSSVT      LOAD SSVT ADDRESS
         BZR   R14                 IF ZERO THEN JES2 NOT ACTIVE
         USING SSVT,RSSVT          JES2 SSVT ADDRESSIBILITY
         LA    R15,8               SET FUNCTION ERROR CODE
         LM    R0,R1,JISR0         RELOAD PARAMETER REGISTERS
         L     R2,JISR15           LOAD FUNCTION CODE
         C     R2,=F'8'            FUNCTION CODE OK?
         BH    0(R14)              IF HIGH THEN ERROR
         SLL   R2,2                CONVERT TO FULLWORDS
         B     *+4(R2)             BRANCH TO ROUTINE
         B     SSVTSJB             FUNCTION CODE = 0   --> SSVT/SJB
         B     CMD                 FUNCTION CODE = 1   --> CMD
         B     0(R14)              FUNCTION CODE = 2   --> ERROR
         B     RDSPOOL             FUNCTION CODE = 3   --> READ SPOOL
         B     0(R14)              FUNCTION CODE = 4   --> ERROR
         B     RDJCT               FUNCTION CODE = 5   --> READ JCT
         B     0(R14)              FUNCTION CODE = 6   --> ERROR
         B     0(R14)              FUNCTION CODE = 7   --> ERROR
         B     0(R14)              FUNCTION CODE = 8   --> ERROR
         EJECT
ERROR    DS    0H                  ERROR RETURN
         STM   R15,R1,JISR15       SAVE PARAMETER REGISTERS
         LM    R0,R1,JISBUFL       LOAD BUFFER LENGTH AND ADDRESS
         LTR   R1,R1               TEST IF BUFFER PRESENT
         BZ    EXIT0               IF NO BUFFER THEN SKIP FREE
         FREEMAIN R,LV=(0),A=(1)   FREE BUFFER
         SPACE 2
EXIT0    DS    0H            EXIT SVC
         LM    R14,R1,JIRETURN     RELOAD REGISTERS
         BR    R14                 RETURN
         TITLE 'FUNCTION 0 - FIND JES2 SSVT AND SJB ADDRESSES '
***********************************************************************
*                                                                     *
* TITLE -      FUNCTION 0 - FIND JES2 SSVT AND SJB ADDRESSES          *
*                                                                     *
* FUNCTION -   FIND JES2 SSVT AND SJB ADDRESSES                       *
*                                                                     *
* INPUT -      STANDARD LINKAGE CONVENTIONS                           *
*              REGISTER 1 - ADDRESS OF PARAMETER LIST                 *
*              REGISTER 3 - ADDRESS OF CVT                            *
*              REGISTER 4 - ADDRESS OF TCB                            *
*              REGISTER 5 - ADDRESS OF SVRB                           *
*              REGISTER 6 - ADDRESS OF JES2 SSVT                      *
*              REGISTER 7 - ADDRESS OF ASCB                           *
*                                                                     *
*                                                                     *
* OUTPUT -     REGISTER 0  - SJB ADDRESS EXECUTING PROGRAM            *
*              REGISTER 1  - JES2 SSVT ADDRESS                        *
*              REGISTER 15 - RETURN CODE                              *
*                 0 - NORMATL RETURN                                  *
*                 4 - JES2 NOT ACTIVE                                 *
*                 8 - FUNCTION CODE ERROR                             *
*                                                                     *
*                                                                     *
*                                                                     *
* NOTES -      THIS ROUTINE RETURNS ONLY THE SJB FOR THE              *
*              CURRENTLY EXECUTING TASK.                              *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
SSVTSJB  DS    0H                  FIND SSVT AND SJB ADDRESSES
         LR    R1,RSSVT            COPY SSVT ADDRESS
         L     R2,TCBJSCB          POINT TO JSCB
         L     R2,JSCBSSIB-IEZJSCB(,R2) POINT TO SSIB
         USING SSIB,R2             SSIB ADDRESSIBILITY
         L     R0,SSIBSUSE         LOAD SJB ADDRESS
         SR    R15,R15             SET RC TO ZERO
         L     R14,JIRETURN        RELOAD RETURN ADDRESS
         BR    R14                 RETURN
         TITLE 'FUNCTION 1 - VS/JES2 COMMAND INTERFACE'
***********************************************************************
*                                                                     *
* TITLE -      FUNCTION 1 - JES2 COMMAND INTERFACE                    *
*                                                                     *
* FUNCTION -   ISSUE A JES2 COMMAND VIA SVC 34.                       *
*                                                                     *
* INPUT -      STANDARD LINKAGE CONVENTIONS                           *
*              REGISTER 0 - CONSOLE IDENTIFICATION                    *
*              REGISTER 1 - ADDRESS OF JES2 COMMAND TEXT              *
*              REGISTER 3 - ADDRESS OF CVT                            *
*              REGISTER 4 - ADDRESS OF TCB                            *
*              REGISTER 5 - ADDRESS OF SVRB                           *
*              REGISTER 6 - ADDRESS OF JES2 SSVT                      *
*              REGISTER 7 - ADDRESS OF ASCB                           *
*                                                                     *
*                                                                     *
* OUTPUT -     RETURN CODE TO APPLICATION PROGRAM                     *
*              REGISTER 15 CONTAINS RETURN CODE AS FOLLOWS            *
*                 0 - NORMAL COMPLETION                               *
*                 4 - JES2 NOT ACTIVE                                 *
*                 8 - FUNCTION CODE ERROR                             *
*                12 - INVALID JES2 COMMAND FORMAT                     *
*                24 - SVC FAILURE                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
* NOTES -      THIS ROUTINE WILL ONLY ISSUE JES2 COMMANDS IN          *
*              PROPER SYNTAX STRUCTURE.                               *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
CMD      DS    0H                  ISSUE VS/JES2 COMMAND
         LA    R15,12              ASSUME BAD COMMAND
         CLC   $SVCOMCH,4(R1)      CHECK FOR JES2 COMMAND
         BNER  R14                 IF NOT JES2 CMD THEN ERROR
         SVC   34                  ISSUE COMMAND SCHEDULER SVC
         LR    R0,R15              COPY RETURN CODE REGISTER
         SR    R15,R15             SET RETURN CODE TO ZERO
         L     R14,JIRETURN        RELOAD RETURN ADDRESS
         BR    R14                 RETURN
         TITLE 'FUNCTION 3 - READ JES2 SPOOL BLOCK'
***********************************************************************
*                                                                     *
* TITLE -      FUNCTION 3 - READ JES2 SPOOL BLOCK                     *
*                                                                     *
* FUNCTION -   READ A JES2 BLOCK FROM JES2 SPOOL DATASET.             *
*                                                                     *
* INPUT -      REGISTER 1 - TRACK ADDRESS OF BLOCK TO BE READ (MTTR)  *
*              REGISTER 3 - ADDRESS OF CVT                            *
*              REGISTER 4 - ADDRESS OF TCB                            *
*              REGISTER 5 - ADDRESS OF SVRB                           *
*              REGISTER 6 - ADDRESS OF JES2 SSVT                      *
*              REGISTER 7 - ADDRESS OF ASCB                           *
*                                                                     *
*                                                                     *
* OUTPUT -     REGISTER 0  - BUFFER LENGTH AND SUBPOOL                *
*              REGISTER 1  - BUFFER ADDRESS                           *
*              REGISTER 15 - RETURN CODE                              *
*                 0 - NORMAL COMPLETION                               *
*                 4 - JES2 NOT ACTIVE                                 *
*                 8 - FUNCTION CODE ERROR                             *
*                12 - INVALID EXTENT TRACK EXTENT                     *
*                16 - INVALID TRACK ADDRESS                           *
*                20 - I/O ERROR                                       *
*                24 - SVC FAILURE                                     *
*                                                                     *
*                                                                     *
* BUFFER OUTPUT -                                                     *
*              OFFSET    LENGTH    DESCRIPTION                        *
*               +00         4      BUFFER SUBPOOL AND LENGTH          *
*               +04         4      BUFFER ADDRESS (*-4)               *
*               +08         4      POINTER TO FIRST DATA BYTE         *
*                                                                     *
*                                                                     *
* NOTES -      NONE                                                   *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
RDSPOOL  DS    0H                  READ JES2 SPOOL
         LA    R15,12              ASSUME EXTENT INVALID
         CLM   R1,8,$SVNUMDA       CHECK FOR VALID EXTENT
         BNLR  R14                 IF NOT LOW THEN INVALID
         SR    R2,R2               CLEAR BUFFER LENGTH REGISTER
         ICM   R2,3,$SVBFSIZ       LOAD BUFFER SIZE
         BAL   RLINK,GETBUF        LINK AND GET BUFFER
         L     R0,JISR1            RELOAD MTTR
         BAL   RLINK,SETIOBS       LINK AND SET IOBSEEK ADDRESS
         BAL   RLINK,EXCP          READ A SPOOL BLOCK
         LA    R2,BUFSTART         LOAD BLOCK START ADDRESS
         LM    R0,R1,JISBUFL       LOAD BUFFER LENGTH AND ADDRESS
         STM   R0,R2,IOBNIOBA      STORE IN BLOCK
         SLR   R15,R15             SET NORMAL RC
         L     R14,JIRETURN        RELOAD RETURN ADDRESS
         BR    R14                 RETURN
         TITLE 'FUNCTION 5 - READ JCT FOR A JES2 JOB'
***********************************************************************
*                                                                     *
* TITLE -      FUNCTION 5 - READ JCT FOR A JES2 JOB                   *
*                                                                     *
* FUNCTION -   FIND AND READ A JCT FOR A JES2 JOB.                    *
*                                                                     *
* INPUT -      STANDARD LINKAGE CONVENTIONS                           *
*              REGISTER 1 - ADDRESS OF PARAMETER LIST                 *
*              REGISTER 3 - ADDRESS OF CVT                            *
*              REGISTER 4 - ADDRESS OF TCB                            *
*              REGISTER 5 - ADDRESS OF SVRB                           *
*              REGISTER 6 - ADDRESS OF JES2 SSVT                      *
*              REGISTER 7 - ADDRESS OF ASCB                           *
*                                                                     *
*                                                                     *
* OUTPUT -     REGISTER 0  - BUFFER LENGTH AND SUBPOOL                *
*              REGISTER 1  - BUFFER ADDRESS                           *
*              REGISTER 15 - RETURN CODE                              *
*                 0 - NORMAL COMPLETION                               *
*                 4 - JES2 NOT ACTIVE                                 *
*                 8 - FUNCTION CODE ERROR                             *
*                12 - INVALID JOB NAME AND/OR NUMBER                  *
*                16 - INVALID JCT
*                20 - I/O ERROR                                       *
*                24 - SVC FAILURE                                     *
*                                                                     *
*                                                                     *
* BUFFER OUTPUT -                                                     *
*              OFFSET    LENGTH    DESCRIPTION                        *
*               +00         4      BUFFER SUBPOOL AND LENGTH          *
*               +04         4      BUFFER ADDRESS (*-4)               *
*               +08         4      POINTER TO FIRST DATA BYTE         *
*                                                                     *
*                                                                     *
* NOTES -      NONE                                                   *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
RDJCT    DS    0H                  READ JES2 JCT
         LR    R2,R1               COPY DUMMY JQE ADDRESS
         USING JQE,R2              SET JQE ADDRESSIBILITY
         L     R9,TCBJSCB          POINT TO JSCB
         L     R9,JSCBSSIB-IEZJSCB(,R9) POINT TO SSIB
         USING SSIB,R9             SSIB ADDRESSIBILITY
         ENQ   ,MF=(E,CSCBENQ)     PROTECT THE CSCB CHAIN
         L     R11,CVTASVT         LOAD ASVT ADDRESS
         L     R1,CVTMSER          LOAD MSTR SCHEDULER RES DATA AREA
         USING CSCDSECT,R1         SET CSCB ADDRESSIBILITY
         SPACE 2
RDJCT0   DS    0H                  FIND JES2 CSCB
         ICM   R1,7,CHPTR+1        ELSE POINT TO NEXT CSCB
         BZ    RDJCT1              YES, THEN JES2 NOT ACTIVE
         CLC   SSIBSSNM,CHKEY      JES2 CSCB?
         BNE   RDJCT0              NO, THEN CONTINUE SEARCH
         LH    R1,CHASID           PICK UP JES2 ASID
         BCTR  R1,0                MINUS ONE
         SLL   R1,2                JES2 ASID MINUS 1 TIMES FOUR
         L     R1,ASVTENTY-ASVT(R1,R11) LOAD JES2 ASCB ADDRESS
         EJECT
RDJCT1   DS    0H                  FIND JES2 CSCB
         LA    R10,0(,R1)          CLEAR HIGH BYTE
         DEQ   ,MF=(E,CSCBENQ)     RELEASE CSCB CHAIN
         LA    R15,4               ASSUME JES2 NOT ACTIVE
         LTR   R10,R10             TEST JES2 ASCB ADDRESS
         BZ    ERROR               IF ZERO THEN JES2 NOT ACTIVE
         GETMAIN R,LV=SRBWASZ,SP=241 GET SRB WORK AREA
         LR    R9,R1               POINT TO SRB WORK AREA
         USING SRBSECT,R9          SRB ADDRESSIBILITY
         XC    SRB(SRBWASZ),SRB    CLEAR SRB AREA
         ST    R10,SRBASCB         STORE JES2 ASCB ADDRESS IN SRB
         MVC   SRBID,=C'SRB '      SET SRB ID
         LA    R0,XSRB             POINT TO SRB ENTRY POINT
         ST    R0,SRBEP            STORE IN SRB
         LA    R0,SRBWAREA         POINT TO SRB WORK AREA
         ST    R0,SRBPARM          STORE IN SRB
         ST    RTCB,SRBPTCB        STORE TCB ADDRESS IN TCB
         MVC   SRBPASID,ASCBASID   SET SCHEDULING ASID IN SRB
         MVC   AJHCT,$SVHCT        COPY HCT ADDRESS
         MVC   DJQE(JQELNGTH),0(R2) COPY DUMMY JQE
         SCHEDULE SRB=(R9)         SCHEDULE SRB
         WAIT  ECB=XMECB           WAIT FOR SRB TO COMPLETE
         SLR   R10,R10             CLEAR FOR SRB RETURN CODE
         ICM   R10,3,XMECB+2       INSERT SRB RETURN CODE
         BNZ   RDJCT3              IF NOT ZERO THEN ERROR
         MVC   JQEPRIO(JQELNGTH),DJQE COPY BACK JQE
         EJECT
RDJCT3   DS    0H                  FREE OBTAINED WORK AREA
         FREEMAIN R,LV=SRBWASZ,A=(R9),SP=241 FREE SRB WORK AREA
         LTR   R15,R10             TEST SRB RETURN CODE
         BNZ   ERROR               IF NOT ZERO THEN ERROR
         L     R1,JQETRAK          LOAD JCT TRACK ADDRESS
         LA    R15,16              ASSUME EXTENT INVALID
         CLM   R1,8,$SVNUMDA       CHECK FOR VALID EXTENT
         BNL   ERROR               IF NOT LOW THEN INVALID
         SLR   R2,R2               CLEAR BUFFER LENGTH REGISTER
         ICM   R2,3,$SVBFSIZ       LOAD BUFFER SIZE
         BAL   RLINK,GETBUF        LINK AND GET BUFFER
         L     R2,JISR1            RELOAD JQE ADDRESS
         L     R0,JQETRAK          RELOAD MTTR
         BAL   RLINK,SETIOBS       LINK AND SET IOBSEEK ADDRESS
         BAL   RLINK,EXCP          READ JCT
         LA    R15,16              ASSUME INVALID JCT
         LR    JCT,RBUF            GET JCT ADDRESSIBILITY
         CLC   JCTID,=C'JCT '      VERIFY JCT ID
         BNE   ERROR               IF NOT EQUAL THEN INVALID JCT
         L     R2,JISR1            RELOAD JQE ADDRESS
         CLC   JCTJNAME,JQEJNAME   VERIFY JOB NAME
         BNE   ERROR               IF NOT EQUAL THEN INVALID JCT
         LA    R2,BUFSTART         LOAD BLOCK START ADDRESS
         LM    R0,R1,JISBUFL       LOAD BUFFER LENGTH AND ADDRESS
         STM   R0,R2,IOBNIOBA      STORE IN BLOCK
         SLR   R15,R15             SET NORMAL RC
         L     R14,JIRETURN        RELOAD RETURN ADDRESS
         BR    R14                 RETURN
         TITLE 'READ/WRITE EXCP ROUTINE'
***********************************************************************
*                                                                     *
* TITLE -      READ OR WRITE ROUTINE                                  *
*                                                                     *
* FUNCTION -   ISSUE EXCP TO READ FROM OR WRITE TO THE JES2 SPOOL     *
*              DATASETS.  FOR I/O ERRORS, LOAD APPROPRIATE STATUS     *
*              INFORMATION TO BE PASSED BACK TO THE CALLING ROUTINE.  *
*                                                                     *
***********************************************************************
         SPACE 2
EXCP     DS    0H                  ISSUE EXCP TO READ OR WRITE
         XC    IOBNECB,IOBNECB     CLEAR ECB
         EXCP  IOBSTDRD            READ SPOOL BLOCK
         WAIT  ECB=IOBNECB         WAIT FOR I/O TO COMPLETE
         CLI   IOBNECB,X'7F'       NORMAL COMPLETION?
         BER   RLINK               IF NORMAL THEN RETURN
         LA    R15,16              ASSUME TRACK ADDRESS ERROR
         CLI   IOBNECB,X'42'       TEST ASSUMPTION
         BE    ERROR               IF CORRECT THEN SKIP CODES
         L     R1,IOBCSW-1         LOAD LAST CCW ADDRESS + 8
         LA    R1,0(R1)            CLEAR HIGH BYTE
         SH    R1,=H'8'            POINT TO LAST CCW
         ICM   R0,8,0(R1)          INSERT OPERATION CODE
         ICM   R0,4,IOBFLAG3       INSERT IOB FLAG3 CODE
         ICM   R0,3,IOBSENS0       INSERT IOB SENSE BYTES
         ST    R0,IOBCSW-1         STORE STATUS
         LD    R0,IOBCSW-1         LOAD STATUS
         L     R1,IOBNECB          LOAD ERROR CODE
         LA    R15,20              SET I/O ERROR RC
         B     ERROR               GO THRU ERROR RETURN
         TITLE 'CONVERT MTTR AND SET IOB SEEK ADDRESS'
***********************************************************************
*                                                                     *
* TITLE -      CONVERT MTTR AND SET IOB SEEK ADDRESS                  *
*                                                                     *
* FUNCTION -   CONVERT MTTR TO AN ABSOLUTE TRACK ADDRESS AND SET      *
*              THE IOB SEEK ADDRESS. FOR RPS DEVICES, THE SECTOR      *
*              IS COMPUTED AND A SET SECTOR CCW IS CONSTRUCTED.       *
*                                                                     *
***********************************************************************
         SPACE 2
SETIOBS  DS    0H                 SET IOB SEEK ADDRESS
         LA    R15,16             ASSUME INVALID TRACK ADDRESS
         LR    R3,R0               COPY MTTR
         LA    R0,0(,R3)           MAKE R0 0TTR
         XR    R3,R0               MAKE R3 M000
         ST    R3,IOBM             STORE EXTENT IN IOB
         STC   R0,IOBR             STORE RECORD NUMBER IN IB
         SRL   R3,24               SHIFT EXTENT NUMBER
         MH    R3,=AL2(TEDSIZ)     CALCULATE TRACK EXTENT ADDRESS
         L     R9,$SVTED           LOAD TRACK EXTENT TBL ADDRESS
         ALR   R9,R3               COMPUTE TED ADDRESS
         USING TEDDSECT,R9         TED ADDRESSIBILITY
         LR    R2,R0               COPY 0TTR
         SRDL  R2,40               SET TT IN R2. R3 FOR DIVIDE
         ICM   R0,15,TNTC          GET NUMBER OF TRACKS/CYLINDERS
         BZ    ERROR               IF ZERO THEN SPOOL PACK ABSENT
         DR    R2,R0               ELSE COMPUTE CC HH
         STCM  R3,3,IOBCC          STORE CC IN IOB
         STCM  R2,3,IOBHH          STORE HH IN IOB
         MVI   CCW1,X'03'          ASSUME NO RPS
         ICM   R2,15,TRPS          POINT TO EXT RPS TBL
         BZR   RLINK               IF ZERO POINTER THEN NO RPS
         SLR   R3,R3               ELSE ZERO REGISTER FOR INSERT
         IC    R3,IOBR             INSERT RECORD NUMBER FROM IOB
         IC    R3,0(R3,R2)         GET CORRES SECTOR NUMBER
         STC   R3,CCW1+5           SET SECTOR DATA
         MVI   CCW1,X'23'          SET SET-SECTOR COMMAND
         BR    RLINK               RETURN
         TITLE 'GET AND INITIALIZE BUFFER   '
***********************************************************************
*                                                                     *
* TITLE -      GET AND INITIALIZE BUFFER                              *
*                                                                     *
* FUNCTION -   1) OBTAIN MAIN STORAGE FOR BUFFER AND BUFFER PREFIX    *
*              FROM SUBPOOL 30.                                       *
*              2) CLEAR BUFFER TO ZERO AND INITIALIZE INPUT/OUTPUT    *
*              BLOCK.                                                 *
*              3) CONSTRUCT CHANNEL PROGRAM.                          *
*                                                                     *
***********************************************************************
         SPACE 2
GETBUF   DS    0H                  GET BUFFER
         LA    R0,LPRFX(,R2)       ADD IN BUFFER PREFIX LENGTH
         ICM   R0,8,=AL1(30)       GET BUFFER FROM SUBPOOL 30
         ST    R0,JISBUFL          SAVE BUFFER LENGTH
         GETMAIN R,LV=(0)          GET MAIN STORAGE FOR BUFFER
         LR    RBUF,R1             LOAD BUFFER ADDRESS REGISTER
         ST    RBUF,JISBUFA        SAVE BUFFER ADDRESS
         LR    R0,R1               SET ADDRESS FOR CLEAR
         LR    R1,R2               SET LENGTH FOR CLEAR
         SR    R15,R15             SET LENGTH TO ZERO
         MVCL  R0,R14              CLEAR BUFFER TO ZEROS
         MVI   IOBFLAG1,IOBCMDCH+IOBUNREL CMD CHAINING AND UNRELATED
         LA    R0,IOBNECB          LOAD ECB ADDRESS
         ST    R0,IOBECBPT         STORE IN IOB
         L     R15,TCBJSCB         LOAD JSCB ADDRESS
         L     R15,JSCBSSIB-IEZJSCB(,R15) LOAD SSIB ADDRESS
         L     R15,SSIBSUSE-SSIBEGIN(,R15) LOAD SJB ADDRESS
         LA    R0,SJBDCB-SJBDSECT(,R15) LOAD SJB DCB ADDRESS
         ST    R0,IOBDCBPT         STORE DCB ADDRESS IN IOB
         LA    R0,IOBSEEK+8        LOAD CHANNEL PGM ADDRESS
         ST    R0,IOBSTART         STORE CP ADDRESS IN IOB
         LA    R0,CCW2             LOAD SEARCH CCW ADDRESS
         ST    R0,CCW3             STORE IN CCW3 FOR TIC
         LA    R0,BUFSTART         LOAD BUFSTART ADDRESS
         ST    R0,CCW4             STORE IN READ CCW
         LA    R0,IOBSEEK+3        LOAD SEARCH ID ADDRESS
         ST    R0,CCW2             STORE IN SEARCH ID CCW
         LA    R0,CCW1+5           LOAD SECTOR ADDRESS
         ST    R0,CCW1             STORE IN RPS CCW
         STH   R2,CCW4+6           STORE BLOCK LENGTH IN READ CCW
         OC    CCW1(LCP),CP        OR IN REST OF CHANNEL PGM
         MVC   IOBNIOBA,JISBUFL    MOVE BUFFER SUBPOOL AND LENGTH
         BR    RLINK               RETURN TO CALLING ROUTINE
         TITLE 'SRB EXECUTION ROUTINE'
***********************************************************************
*                                                                     *
* TITLE -      SRB EXECUTION ROUTINE                                  *
*                                                                     *
* FUNCTION -   1) SEARCH JES2 JOB QUEUES FOR A JOB MATCHING THE JOB   *
*              NAME IN A DUMMY JQE.                                   *
*              2) OPTIONALLY, SEARCH JOB QUEUES FOR A JOB MATCHING    *
*              BOTH THE JOB NAME AND JOB NUMBER IN A DUMMY JQE.       *
*              3) RETURN A COPY OF THEN JQE TO THE CALLING ADDRESS    *
*              SPACE.                                                 *
*              4) AT END OF ROUTINE XMPOST THE CALLING ADDRES SPACE.  *
*                                                                     *
***********************************************************************
         SPACE 2
XSRB     DS    0H                  SRB EXECUTION ROUTINE
         LR    R8,R15              LOAD BASE REGISTER
         USING XSRB,R8             ROUTINE ADDRESSIBILITY
         LR    R9,R0               LOAD SRB ADDRESS
         USING SRBSECT,R9          SET SRB ADDRESSIBILITY
         L     BASE1,AJHCT         LOAD HCT ADDRESS
         USING HCTDSECT,BASE1      SET HCT ADDRESSIBLITY
         USING JQE,R2              SET JQE ADDRESSIBILITY
         LA    R15,$JQTYPES        LOAD NUMBER OF QUEUES
         SLR   R10,R10             SET RC FOR NORMAL POST
         SPACE 2
XSRB0    DS    0H                  SEARCH JOB QUEUES
         LR    R2,R15              COPY NUMBER OF QUEUES
         SLL   R2,1                TIMES 2
         LA    R2,$JQHEADS-2(R2)   POINT TO QUEUE HEAD
         LA    R0,QUECHAIN         LOAD JQE CHAIN OFFSET
         SLR   R2,R0               ADJUST QUEUE HEAD POINTER
         SPACE 2
XSRB1    DS    0H                  LOAD THRU ACTIVE JOB QUEUE
         LH    R2,JQECHAIN         LOAD NEXT ENTRY OFFSET/4
         N     R2,=X'0000FFFF'     CLEAR HIGH BYTES AND TEST
         BNZ   XSRB2               IF NOT ZERO THEN NOT CHAIN END
         BCT   R15,XSRB0           IF MORE QUEUES THEN LOOP
         LA    R10,12              LOAD JOB NOT FOUND RC
         B     XSRB5               ERROR
         EJECT
XSRB2    DS    0H                  CHECK JQE
         SLL   R2,2                CONVERT JQE OFFSET
         AL    R2,$JOBQPTR         POINT TO JQE
         CLI   QUEJNAME+DJQE,X'40' DJQE JOB NAME BLANK?
         BE    XSRB3               YES, THEN SKIP JOB NAME TEST
         CLC   JQEJNAME,QUEJNAME+DJQE COMPARE JOB NAMES
         BNE   XSRB1               BRANCH IF NOT EQUAL
         NC    QUEJOBNO+DJQE(2),QUEJOBNO+DJQE JOB NUMBER SPECIFIED?
         BZ    XSRB5               YES, THEN FOUND JOB
         CLC   JQEJOBNO,QUEJOBNO+DJQE COMPARE JOB NUMBERS
         BNE   XSRB1               BRANCH IF NOT EQUAL
         B     XSRB5               IF EQUAL THEN FOUND JOB
         SPACE 2
XSRB3    DS    0H                  SEARCH JOB QUEUE FOR JOB NO.
         CLC   JQEJOBNO,QUEJOBNO+DJQE COMPARE JOB NUMBERS
         BNE   XSRB1               BRANCH IF NOT EQUAL
         SPACE 2
XSRB5    DS    0H                  XM POST ECB WITH RETURN CODE
         MVC   DJQE(JQELNGTH),JQE  MOVE JQE TO SRB WORK AREA
         STM   R0,R15,SSAVE        SAVE PROGRAM REGISTERS
         L     R3,CVTPTR           LOAD CVT ADDRESS
         L     R7,CVTASVT          LOAD MSTR SCHEDULER DATA AREA
         LH    R13,SRBPASID        LOAD ASID FOR XM POST
         BCTR  R13,0               MINUS 1
         SLL   R13,2               TIMES 4
         L     R13,ASVTENTY-ASVT(R13,R7) LOAD ASCB FOR XM POST
         LA    R11,XMECB           LOAD XM POST ECB ADDRESS
         ICM   R11,8,=X'80'        SET FOR XM POST
         L     R15,CVT0PT01        LOAD POST ROUTINE ADDRESS
         BALR  R14,R15             BALR TO XM POST ROUTINE
         LM    R0,R15,SSAVE        RELOAD PROGRAM REGISTERS
         BR    R14                 RETURN TO SYSTERM
         TITLE 'CHANNEL PROGRAMS AND MISCELLANEOUS CONSTANTS'
CP       DS    0D                  CHANNEL PROGRAM
CPCCW1   CCW   X'03',0,SILI+CC,1   NOP
CPCCW2   CCW   X'31',0,SILI+CC,5   SEARCH ID EQUAL
CPCCW3   CCW   X'08',0,SILI+CC,1   TIC
CPCCW4   CCW   X'06',0,SILI,0      READ DATA
         SPACE
LCP      EQU   *-CP                LENGTH OF CHANNEL PGM
         SPACE 3
CSCBENQ  ENQ   (SYSIEFSD,Q10,S,3,SYSTEM),MF=L
SYSIEFSD DC    CL8'SYSIEFSD'       ENQ QNAME
Q10      DC    CL3'Q10'            ENQ RNAME
         SPACE 3
         LTORG
         TITLE 'SRB WORK AREA'
         IHASRB
         SPACE 1
SRBWAREA DS    0D                  SRB WORK AREA
SSAVE    DS    18F                 SAVE AREA
XMECB    DS    F                   CROSS MEMORY POST ECB
AJHCT    DS    A                   JES2 HCT ADDRESS
DJQE     DS    (JQELNGTH)X         DUMMY JQE
         DS    0F                  ALIGN
SRBWASZ  EQU   *-SRBSECT           SRB WORK AREA SIZE
         TITLE 'MISCELLANEOUS DSECTS'
         CVT   DSECT=YES
         SPACE 2
         IKJTCB
         SPACE 2
         IEFJESCT
         SPACE 2
         IEFJSSIB
         SPACE 2
         IEFJSCVT
         SPACE 2
         IEZJSCB
         SPACE 2
         IHAASVT
         EJECT
         IHARB
         SPACE 2
         ORG   RBEXSAVE
JIRETURN DS    A             SVC EXIT ADDRESS
JISR15   DS    A             ENTRY REGISTER 15
JISR0    DS    A             ENTRY REGISTER 0
JISR1    DS    A             ENTRY REGISTER 1
         SPACE
         ORG   JISR0
JISCT    DS    0D            COUNT FIELD SAVE AREA
JISCCHHR DS    XL5           TRACK ADDRESS
JISKL    DS    X             KEY LENGTH
JISDL    DS    H             DATA LENGTH
         SPACE
JISBUFL  DS    A             SAVE BUFFER LENGTH
JISBUFA  DS    A             SAVE BUFFER ADDRESS
JISQSEL  DS    H             SAVE QSE LENGTH
JISQSENO DS    H             SAVE NUMBER OF QSES
JISJQESZ DS    F             JQE CHECKPOINT RECORD SIZE
JISJOESZ DS    F             JOT CHECKPOINT RECORD SIZE
JISLJQEP DS    F             JQE PREFIX LENGTH
JISLJOEP DS    F             JOT PREFIX LENGTH
         SPACE 2
JISL     EQU   *-JIRETURN    LENGTH OF SVRB WORK AREA
         EJECT
         END
