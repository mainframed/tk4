BLDLSTOP TITLE 'PROGRAM TO START OR STOP DYNAMIC BLDL'
XXBLDLSW CSECT
*
**
***      EQUATE REGISTERS AND SET UP DYNAMIC SAVEAREA
**
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
RA       EQU   10
R11      EQU   11
RB       EQU   11
R12      EQU   12
RC       EQU   12
R13      EQU   13
RD       EQU   13
R14      EQU   14
RE       EQU   14
R15      EQU   15
RF       EQU   15
*                                                           *HMD 11/82*
SVCBLDL  EQU   18                     NUMBER OF BLDL SVC    *HMD 11/82*
$LEVEL   EQU    5                     LVL OF MODULE OFFSET  *HMD 11/82*
$DYNRLD  EQU   60                     DYNAMIC RLD OFFSET    *HMD 11/82*
D0       EQU    0                     DISPLACEMENT OF 0     *HMD 11/82*
D1       EQU    1                     DISPLACEMENT OF 1     *HMD 11/82*
STOP     EQU   16                     X'10' FOR TM INSTR    *HMD 11/82*
HALT     EQU   X'F0'                  BRANCH INSTRUCTION    *HMD 11/82*
COMMENCE EQU   X'E0'                  BNO INSTRUCTION       *HMD 11/82*
         EJECT                                              *HMD 12/79*
*                                                           *HMD 01/82*
*  REFITTED TO DF/DS (JDM1134) LEVEL ON 12/24/82            *HMD 01/82*
*  OFFSETS ALL CHANGED DUE TO NEW CODE IN IGC018XX          *HMD 01/82*
*                                                           *HMD 01/82*
*  USE DYNAMIC RELOCATION DICTIONARY FROM BLDLINIT          *HMD 11/82*
*  PROGRAM TO LOCATE CONSTANTS IN IGC018XX MODULE           *HMD 11/82*
*                                                           *HMD 11/82*
         USING XXBLDLSW,RF              TEMP ADDRESSIBILITY *HMD 11/82*
         B     STO1                     BRANCH AROUND ID
         DC    AL1(STO1-STO2)           LENGTH OF ID        *HMD 11/82*
STO2     DC    CL9'XXBLSLST'            NAME OF MODULE      *HMD 11/82*
         DC    CL9'&SYSDATE'            DATE OF ASSEMBLY    *HMD 11/82*
         DC    C'COPYRIGHT (C) HOWARD M. DEAN 1982,1983'    *HMD 11/82*
STO1     STM   RE,RC,12(RD)             SAVE REGS IN HI SAVE AREA
         LR    RC,RF                    SET UP BASE
         DROP  RF                       NO NEED FOR TEMP BASE
         USING XXBLDLSW,RC              OF R12
         USING SAVEAREA,RD              DYNAMIC SAVEAREA BASE + WORK
         LR    R2,R1                    SAVE PARAMS
         LR    RB,RD                    SAVE CALLERS SAVE AREA ADDR
         GETMAIN R,LV=GETSIZE1          GET SOME CORE
         LR    RD,R1                    SET DSECT BASE
         ST    RB,SAVE1+4               SAVE CALLERS SAVE AREA ADDR
         ST    RD,8(RB)                 SAVE OURS IN CALLERS
         EJECT
         L     R1,0(R2)                 POINT TO PARM FIELD
         CLI   2(R1),C'S'               IS IT START ?
         BE    START                    GO SET START
         CLI   2(R1),C'P'               IS IT STOP ?
         BNE   BADPARM                  NO - GO ISSUE MSG
         MVI   SW,HALT                  YES - SET STOP
         B     GO
         SPACE 2
START    DS    0H
         MVI   SW,COMMENCE              SET SWITCH START
GO       DS    0H
*                                                           *HMD 11/82*
         MODESET MODE=SUP               GET SUPERVISOR ST   *HMD 11/82*
*                                                           *HMD 11/82*
         L     R2,CVTPTR                   ==> CVT          *HMD 11/82*
         L     R2,CVTABEND-CVT(,R2)        ==> SCVT         *HMD 11/82*
         L     R2,SCVTSVCT-SCVTSECT(,R2)   ==> SVC TABLE    *HMD 11/82*
         L     R2,SVCBLDL*8(,R2)           ==> IGC018XX     *HMD 11/82*
*                                                           *HMD 11/82*
         CLC   $LEVEL(L'LEVEL,R2),LEVEL CHECK IT OUT
         BNE   BADCODE                  NO GO HOMETIME
         LA    R3,$DYNRLD(,R2)          LOAD DYNRLD OFFSET  *HMD 11/82*
         USING RLDSECT,R3               ADDRESS THE DSECT   *HMD 11/82*
         L     R4,DIS01                 LOAD THE OFFSET     *HMD 11/82*
         AR    R4,R2                    RELOCATE            *HMD 11/82*
         CLC   D1(1,R4),SW              CORRECT MODE        *HMD 11/82*
         BE    DONEBE4                  NO - ALREADY SET    *HMD 11/82*
         TM    SW,STOP                  IS IT STOP          *HMD 11/82*
         BZ    VERSTART                 NO - GO CHECK CODE  *HMD 11/82*
         CLC   D0(4,R4),$CHECK2P        AND A BIT MORE      *HMD 11/82*
         BNE   BADCODE                  THIS BIT NO GOOD    *HMD 11/82*
         L     R4,DIS02                 GET SECOND DISP     *HMD 11/82*
         AR    R4,R2                    RELOCATE            *HMD 11/82*
         CLC   D0(4,R4),$CHECK3P        AND EVEN A BIT MORE *HMD 11/82*
         BNE   BADCODE                  THIS BIT NO GOOD    *HMD 11/82*
         B     GODIRTY                  GO OVERWRITE
VERSTART DS    0H                                           *HMD 11/82*
         L     R4,DIS01                 GET DISPLACEMENT    *HMD 11/82*
         AR    R4,R2                    RELOCATE            *HMD 11/82*
         CLC   D0(4,R4),$CHECK2S        AND A BIT MORE      *HMD 11/82*
         BNE   BADCODE                  THIS BIT NO GOOD    *HMD 11/82*
         L     R4,DIS02                 GET DISPLACEMENT    *HMD 11/82*
         AR    R4,R2                    RELOCATE            *HMD 11/82*
         CLC   D0(4,R4),$CHECK3S        AND EVEN A BIT MORE *HMD 11/82*
         BNE   BADCODE                  THIS BIT NO GOOD    *HMD 11/82*
GODIRTY  DS    0H
         STM   R0,R8,SAVEMODE           SAVE REGS OVER MODESET
*                                                           *HMD 01/80*
         MODESET EXTKEY=ZERO,SAVEKEY=KEYSAVE,WORKREG=1
*                                                           *HMD 01/80*
         LA    R15,DIRTY1               OVERWRITE CODE PART ONE
         BALR  R14,R15                  TRAMPLE TRAMPLE
*                                                           *HMD 11/82*
         MODESET KEYADDR=KEYSAVE,WORKREG=1                  *HMD 11/82*
*                                                           *HMD 11/82*
         TM    SW,STOP                  WAS IT STOP ?
         BZ    MSGSTART                 NO - JUST GO ISSUE MSG
         L     R4,DIS04                 GET TABLE ADDRESS   *HMD 11/82*
         AR    R4,R2                    RELOCATE            *HMD 11/82*
         LR    R9,R4                    SAVE POINTER        *HMD 11/82*
         LA    R7,D0+12(R4)             GET ADDR OF PRESENT ENTRY
         LM    R3,R5,D0(R4)             PICK UP R3 = START
*                                               R4 = ENTRY SIZE
*                                               R5 = LAST ENTRY
         LR    R6,R5                    SAVE LAST ENTRY PTR
         AR    R5,R4                    POINT TO END OF TABLE
         LA    R4,8                     SIZE OF INCREMENT
         SR    R5,R4                    TABLE END -8
         SR    R1,R1                    ZEROISE R1
         LR    R2,R1                    ALSO R2
         STM   R0,R8,SAVEMODE           SAVE REGS ACROSS MODESET
*                                                           *HMD 11/80*
         MODESET EXTKEY=ZERO,SAVEKEY=KEYSAVE,WORKREG=1      *HMD 11/82*
*                                                           *HMD 11/80*
         SR    R8,R8                    CLEAR R8            *HMD 01/80*
         USING LINKSECT,R9              ADDRESS VECT TABLE  *HMD 01/80*
         ST    R8,HITS                  ZERO CURRENT HITS   *HMD 01/80*
         ST    R8,MISSES                ZERO CURRENT MISSES *HMD 05/80*
         STH   R8,SORT                  ZERO NUMBER SORTS   *HMD 01/80*
         DROP  R9                       NO NEED FOR BASE    *HMD 01/80*
         LA    R15,DIRTY2               OVERWRITE CODE PART TWO
         BALR  R14,R15                  TRAMPLE TRAMPLE TRAMPLE
*                                                           *HMD 11/82*
         MODESET KEYADDR=KEYSAVE,WORKREG=1                  *HMD 11/82*
*                                                           *HMD 11/82*
         WTO   'XXBLDLSW - DYNAMBLDL STOPPED. TABLE CLEARED',          X
               ROUTCDE=(1,2,10,11),DESC=(4,6)               *HMD 11/82*
         EJECT
*
**
***      FREE DYNAMIC SAVEAREA AND RETURN
**
*
RET      DS    0H
         MODESET MODE=PROB              BACK TO PROBLEM ST  *HMD 11/82*
         LR    R1,RD                    ADDR OF AREA TO FREE
         L     RD,4(RD)                 HI SAVE AREA ADDR
         FREEMAIN R,LV=GETSIZE1,A=(1)   FREE UP CORE
         LM    RE,RC,12(RD)             RESORE CALLERS REGS
         BR    RE                       RETURN
         EJECT
MSGSTART DS    0H
*                                                           *HMD 11/82*
         WTO   'XXBLDLSW - DYNAMIC BLDL STARTED',           *HMD 11/82*X
               ROUTCDE=(1,2,10,11),DESC=(4,6)               *HMD 11/82*
*                                                           *HMD 11/82*
         B     RET
         EJECT
*
**
***      INCORRECT PARM FIELD
**
*
BADPARM  DS    0H
*                                                           *HMD 11/82*
         WTO   'XXBLDLSW - INCORRECT PARM FIELD',          '*HMD 11/82*X
               ROUTCDE=(1,2,10,11),DESC=3                   *HMD 11/82*
*                                                           *HMD 11/82*
         B     RET
         EJECT
*
**
***      MODULE AT WRONG LEVEL
**
*
BADCODE  DS    0H
*                                                           *HMD 11/82*
         WTO   'XXBLDLSW - INCORRECT CODE IN IGC018XX--WRONG LEVEL',   X
               ROUTCDE=(1,2,10,11),DESC=3                   *HMD 11/82*
*                                                           *HMD 11/82*
         B     RET
         EJECT
*
**
***      FUNCTION REQUESTED ALREADY EXISTS
**
*
DONEBE4  DS    0H
         TM    SW,STOP                  IS IT STOP ?
         BZ    DONES                    NO - ITS START
*                                                           *HMD 11/82*
         WTO   'XXBLDLSW - STOP REJECTED ALREADY STOPPED',  *HMD 11/82*X
               ROUTCDE=(1,2,10,11),DESC=3                   *HMD 11/82*
*                                                           *HMD 11/82*
         B     RET                      HOME
         SPACE 2
DONES    DS    0H
*                                                           *HMD 11/82*
         WTO   'XXBLDLSW - START REJECTED ALREADY STARTED', *HMD 11/82*X
               ROUTCDE=(1,2,10,11),DESC=3                   *HMD 11/82*
*                                                           *HMD 11/82*
         B     RET                      HOME
         EJECT
*
**
***      CODE EXECUTED IN KEY ZERO TO OVERWRITE IGC018XX
**
*
DIRTY1   DS    0H
         LM    R0,R8,SAVEMODE           RESTORE REGS        *HMD 01/80*
         L     R4,DIS01                 LOAD DISPLACEMENT   *HMD 11/82*
         AR    R4,R2                    RELOCATE            *HMD 11/82*
         MVC   D1(1,R4),SW              RESET PRE CODE
         L     R4,DIS02                 LOAD DISPLACEMENT   *HMD 11/82*
         AR    R4,R2                    RELOCATE            *HMD 11/82*
         MVC   D1(1,R4),SW              RESET POST CODE
         BR    R14
         SPACE 2
DIRTY2   DS    0H
         LM    R0,R8,SAVEMODE           RESTORE REGS        *HMD 01/80*
         STM   R1,R2,0(R3)              ZEROISE 8 BYTES
         BXLE  R3,R4,*-4                UP TO NEXT 8 BYTES
         ST    R6,0(R7)                 STORE LAST ENTRY AS PRESENT
         BR    R14                      BE A GOOD GUY
         EJECT
*
**
***      CONSTANTS THESE NEED UPDATING IF IGC018XX IS MODIFIED.
**
*
LEVEL    DC    C'IGC018XX11-24-82'   DF/DS LEVEL (JDM1134)  *HMD 01/82*
*                                    WITH GTE MODS INCLUDED *HMD 05/80*
$CHECK2P DC    X'47E090CE'
$CHECK3P DC    X'47E09106'
$CHECK2S DC    X'47F090CE'
$CHECK3S DC    X'47F09106'
         EJECT
*
**
***      DSECT FOR GETMAINED WORK AREA
**
*
SAVEAREA DSECT
SAVE1    DS    18F
SAVEMODE DS    9F       SAVE AREA FOR MODESET MACRO         *HMD 01/80*
SW       DS    X
KEYSAVE  DS    X        SAVE STORAGE PROTECT KEY            *HMD 11/82*
GETEND1  DS    0D
GETSIZE1 EQU   GETEND1-SAVE1
         EJECT                                              *HMD 01/80*
***                                                         *HMD 01/80*
***      DSECT FOR TABLE AREA OF IGC018XX                   *HMD 01/80*
***                                                         *HMD 01/80*
*$$$ IF YOU CHANGE THE TABLE FORMAT IN IGX018XX THEN        *HMD 01/80*
*    BE SURE TO CHANGE THE DSECT(S) BELOW                   *HMD 01/80*
***                                                         *HMD 01/80*
LINKSECT DSECT                                              *HMD 01/80*
TABSTAT  DS    A            ADDRESS OF TABLE START          *HMD 01/80*
TABSIZE  DS    F            TABLE SIZE                      *HMD 01/80*
TABEND   DS    A            ADDR OF LAST ENTRY              *HMD 01/80*
TABLAST  DS    A            ADDR OF LAST ENTRY              *HMD 01/80*
TABSLOT  DS    A            CURRENT SLOT ADDRESS            *HMD 01/80*
SORT     DS    H            NUMBER OF SORTS                 *HMD 01/80*
ENTRIES  DS    AL2          NUMBER OF ENTRIES IN TABLE      *HMD 01/80*
HITS     DS    F            NUMBER OF HITS THIS PASS        *HMD 05/80*
MISSES   DS    F            NUMBER OF MISSES THIS PASS      *HMD 05/80*
TABSTART EQU   *            START OF TABLE                  *HMD 01/80*
         EJECT                                              *HMD 11/82*
RLDSECT  DSECT                 IGC018XX RELOCATION DSECT
IGC018AD DS    A               REAL IGC018 EP               *HMD 11/82*
LINKADDR DS    A               LINKTAB ADCON                *HMD 11/82*
LINKTAB  DS    A               LINKTAB ADDRESS              *HMD 11/82*
ENTRY1   DS    A               ENTRY1 OFFSET                *HMD 11/82*
NWB1     DS    A               NWB1 ADCON                   *HMD 11/82*
ENTRY2   DS    A               ENTRY2 ADDRESS               *HMD 11/82*
NWB2     DS    A               NWB2 ADCON                   *HMD 11/82*
TABSTAT1 DS    A               TABSTAT1 ADDRESS             *HMD 11/82*
START1   DS    A               START1   OFFSET              *HMD 11/82*
LASTENT1 DS    A               LASTENT1 OFFSET              *HMD 11/82*
TABEND1  DS    A               TABEND1  OFFSET              *HMD 11/82*
LASTSLT1 DS    A               LASTSLT1 OFFSET              *HMD 11/82*
TABSLOT1 DS    A               TABSLOT1 OFFSET              *HMD 11/82*
CALC     DS    A               CALCULATION                  *HMD 11/82*
DIS01    DS    A               $$$DIS01 OFFSET              *HMD 11/82*
DIS02    DS    A               $$$DIS02 OFFSET              *HMD 11/82*
DIS04    DS    A               $$$DIS04 OFFSET              *HMD 11/82*
         EJECT                                              *HMD 11/82*
         CVT   LIST=YES,DSECT=YES                           *HMD 11/82*
         EJECT                                              *HMD 11/82*
         IHASCVT LIST=YES,DSECT=YES                         *HMD 11/82*
         END
