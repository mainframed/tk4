SCAN     TITLE '----- SCAN ALL MEMBERS OF A PDS -----'
*---------------------------------------------------------------------*
*                                                                     *
*   PROGRAM NAME:  PDSSCAN                                            *
*                                                                     *
*   AUTHOR:        LEONARD D. WOREN                                   *
*                                                                     *
*   DATE:          NOVEMBER 27, 1979                                  *
*                                                                     *
*   PURPOSE:       SCAN ALL MEMBERS OF A PDS FOR A SPECIFIED STRING   *
*                                                                     *
*/********************************************************************/
*/*                                                                  */
*/*   ADDED TO MVSUG TAPE BY MIKE HAWTHORNE MAY 1985                 */
*/*   THIS PROGRAM WORKS ON MVS XA REL 2.1.1 WITH NO PROBLEMS        */
*/*                                                                  */
*/*                                                                  */
*/********************************************************************/
*   UPDATES:                                                          *
*     02/10/83 U009 LDW  CHANGE SYSPRINT LRECL BACK TO 121            *
*                        USE A DCBEXIT TO SET SYSPRINT BLKSIZE        *
*                        ADD PARM=UNDER FOR UNDERSCORE INSTEAD OF     *
*                           OVERPRINT, AND MAKE IT THE DEFAULT (ALL   *
*                           GOOD SHOPS NOW HAVE LASER PRINTERS...)    *
*     07/12/82 U008 LDW  FIX FOR STRING LENGTH=1                      *
*     07/02/82 U007 EMS  CORRECT SCANNING BUG OFF END OF CARD         *
*                        ADD DSORG=PS SCANNING CAPABILITIES           *
*                        ADD SUPPORT FOR LRECL OTHER THAN 80          *
*                        ADD SUPPORT FOR RECFM OTHER F                *
*                        ADD RECORD COUNT TO LINE DATA                *
*                        CHANGE SYSPRINT LRECL/BLKSIZE TO 133/6118    *
*                        CREATE DSECT FOR OUTPUT LINE                 *
*                                                                     *
*     03/04/82 U006 LDW  FIX ANOTHER EMS BUG                          *
*                        ADD SP=2 TO GETMAIN FOR SCAN ELEMENTS        *
*                                                                     *
*     02/27/82 U005 LDW  ADD PARM=NOLIST                              *
*                        DELETE PARM=COUNTONLY                        *
*                        GET TITLE LINES ON SUMMARY PAGE              *
*                                                                     *
*     02/25/82 U004 LDW  ADD PARM=COUNTONLY FEATURE                   *
*                                                                     *
*     12/30/81 U003 LDW  FIX BUG IN U001 WHICH CAUSED 0C4'S           *
*                        MISCELLANEOUS MINOR CLEANUP                  *
*                                                                     *
*     12/09/81 U002 EMS  FIX PARM SEARCH OPTION                       *
*                        FIX SUBTLE LOGIC ERROR IF ONE OR MORE        *
*                           STRINGS ARE SUBSETS OF ANOTHER STRING     *
*                                                                     *
*     09/22/81 U001 EMS  CHANGE LOGIC TO USE TRT FOR INITIAL          *
*                           CHARACTER SCAN                            *
*                        REMOVE ASSEMBLED IN LIMIT OF NUMBER OF       *
*                           STRINGS TO SCAN                           *
*                                                                     *
*   NOTE:          THIS PROGRAM IS ALMOST A COMPLETE RE-WRITE OF A    *
*                  PROGRAM WITH THE SAME NAME AND FUNCTION (AUTHOR    *
*                  UNKNOWN)                                           *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*   REQUIRED JCL:                                                     *
*     //STEP   EXEC   PGM=PDSSCAN,PARM='OPTIONS'                      *
*     //STEPLIB   DD  ...                                             *
*     //SYSPRINT  DD  SYSOUT=*                                        *
*     //SYSLIB    DD  DISP=SHR,DSN=PDS.TO.BE.SCANNED                  *
*     //SYSIN     DD  *                                               *
*     STRING1                                                         *
*     STRINGTWO                                                       *
*     THE STRING ENDS AT THE LAST NON BLANK CHAR                      *
*     (UNLESS THE LAST IS A ^, THEN THE CHAR BEFORE THAT.)   ^        *
*     /*                                                              *
*                                                                     *
*     PARM OPTIONS:                                                   *
*        OVER      - OVERPRINT THE SEARCH STRING                      *
*        UNDER     - UNDERSCORE THE SEARCH STRING (DEFAULT)           *
*        TSO       - NO HIGHLIGHTING OF SEARCH STRING                 *
*        NOLIST    - PRINT COUNTS ONLY                                *
*                                                                     *
*---------------------------------------------------------------------*
         EJECT ,
PDSSCAN  OSENTER  EXIT=LEAVE,RC=0,PARMREG=R11,ADDRREG=R3,LENREG=R4,    $
               GETMAIN=(WORKLEN,WORKD)                             U001
LINK     EQU   R11
         SPACE 2
         MVI   BLANKS,C' '              INIT
         MVC   BLANKS+1(L'BLANKS-1),BLANKS   ...
         MVC   LINE,BLANKS
         XC    TABLE,TABLE              CLEAR TRT SCAN TABLE       U001
         XR    R2,R2                    ALWAYS 000000XX            U001
         ZAP   PAGENO,=P'0'             CLEAR PAGE NUMBER          U007
         SPACE 2
         MVC   PARMLINE,BLANKS          CLEAR PARM LINE            U009
         MVC   PARMERRL,BLANKS          CLEAR PARM ERROR LINE      U009
         LTR   R1,R4                    ANY PARM?                  U009
         BNP   NO$PARM                  NO - READ SYSIN            U004
         MVC   PARMLINE(21),=C'-              PARM='''             U009
         BCTR  R1,0                     -1 FOR EX                  U009
         EX    R1,PARMMVC               OC PARMLINE+21(*-*),0(R3)  U009
         LA    R1,PARMLINE+21+1(R1)     -> END OF PARM             U009
         MVI   0(R1),C''''              PUT IN ENDING QUOTE        U009
         LA    R3,PARMLINE+21           -> MY COPY OF PARMS        U009
         SPACE 2
PARM$CHK LA    R1,PARM#TAB                                         U009
         SR    R15,R15                  CLEAR FOR IC               U009
         SPACE 1
PARMLOOP IC    R15,4(,R1)               GET LENGTH OF WORD         U009
         EX    R15,PARMCLC              CLC 5(*-*,R1),0(R3)        U009
         BE    GOT$PARM                 THIS IS IT                 U009
         SPACE 1
TRY$NEXT LA    R1,PARMENTL(,R1)         -> PARM TABLE ENTRY        U009
         CLC   =X'FFFFFFFF',0(R1)       END OF TABLE?              U009
         BNE   PARMLOOP                 NO - TRY NEXT              U009
         MVI   PARMERRL-PARMLINE(R3),C'*'  FLAG THE BAD PARM       U009
         MVC   PARMERRL+1(19),=C'>----- ERROR ----->'              U009
         B     NO$PARM                  AND IGNORE THE REST        U009
         SPACE 1
PARMMVC  OC    PARMLINE+21(*-*),0(R3)   << EXECUTED >>             U009
PARMCLC  CLC   5(*-*,R1),0(R3)          << EXECUTED >>             U009
         SPACE 2
GOT$PARM L     R1,0(,R1)                -> ROUTINE ENTRY POINT     U009
         BR    R1                       GO TO IT                   U009
         SPACE 2                                                   U009
PARMNEXT LA    R3,1+1(R15,R3)           -> NEXT WORD IN PARM FIELD U009
         SR    R4,R15                   ADJUST REMAINING LENGTH    U009
         SH    R4,=H'2'                 ACCOUNT FOR BCTR & DELIM   U009
         BP    PARM$CHK                 DO NEXT PARM WORD          U009
         B     NO$PARM                  DONE WITH PARM PROCESSING  U009
         SPACE 2
P$NOLIST OI    FLAGS,F@NOLIST                                      U009
         B     PARMNEXT                                            U009
         SPACE 1
P$UNDER  NI    FLAGS,255-F@OVER                                    U009
         B     PARMNEXT                                            U009
         SPACE 1
P$OVER   OI    FLAGS,F@OVER                                        U009
         B     PARMNEXT                                            U009
         SPACE 1
P$TSO    OI    FLAGS,F@TSO                                         U009
         B     PARMNEXT                                            U009
         SPACE 2
NO$PARM  OPEN  (SYSIN,,SYSPRINT,OUTPUT)                            U007
         SPACE 1
         TM    SYSPRINT+DCBOFLGS-IHADCB,DCBOFOPN  SYSPRINT OPEN?   U007
         BZ    ABEND99                  NO, DIE NOW                U007
         TM    SYSIN+DCBOFLGS-IHADCB,DCBOFOPN  OPEN?               U007
         BO    NEXT$IN                  YES                        U001
ABEND99  ABEND 99
         SPACE 2
NEXT$IN  TM    SYSIN+DCBOFLGS-IHADCB,DCBOFOPN   FROM SYSIN OR PARM?U007
         BZ    GO$OPEN                  GETTING FROM PARM          U001
         SPACE 1
         GET   SYSIN                    GET A RECORD               U001
         SPACE 1
         LR    R3,R1                    PRESERVE CARD POINTER      U001
         SPACE 1
         BCTR  R1,0                     BE SURE TO SCAN COLUMN 1   U008
         LA    R4,71(,R3)               -> COLUMN 72               U001
         LA    R0,1
         LNR   R0,R0                    GET -1 FOR BXH INCR
         CLI   0(R4),C' '               FIND END?                  U001
         BNE   GOT$END                  YES
         BXH   R4,R0,*-8                KEEP LOOKING               U001
         B     NEXT$IN                  IGNORE BLANK CARDS
         SPACE 2
GOT$END  CLI   0(R4),C'^'               SPECIAL?                   U001
         BNE   *+6                      NO
         BCTR  R4,0                     YES - PREV CHAR IS TRUE ENDU001
         SR    R4,R3                    EX LENGTH OF STRING        U001
         BM    NEXT$IN                  IGNORE IT IF INVALID
         SPACE 2
GOT$INS  GETMAIN  R,LV=SCANENTL,SP=2                               U006
         SPACE 1
         USNGX SCANENT,R1                                          U001
         STH   R4,SCANLEN               SAVE LENGTH                U001
         MVC   SCANARG,0(R3)            SAVE CARD                  U001
         XC    SCANLINK,SCANLINK        CLEAR NEXT NODE PTR        U002
         XC    SCANHITS,SCANHITS        CLEAR HIT COUNTER          U004
         IC    R2,SCANARG               GET STARTING CHAR          U001
         XR    R4,R4                    CLEAR FOR BYTING           U001
         IC    R4,TABLE(R2)             GET CURRENT VALUE          U001
         LTR   R4,R4                    ANYTHING THERE?            U001
         BNZ   OLD$ENT                  YES, JUST ADD TO END       U001
         LH    R4,STRNGNUM              GET CURRENT INDEX VALUE    U001
         AH    R4,=H'1'                 INCR                       U001
         STH   R4,STRNGNUM              RESTORE VALUE              U001
         STC   R4,TABLE(R2)             SAVE BACK IN TRT TABLE     U001
         SLL   R4,2                     * 4 FOR ADDR               U001
         LA    R4,ADDR(R4)              -> OUR ENTRY               U001
         ST    R1,0(,R4)                SAVE LINK                  U001
         B     NEXT$IN                  GET NEXT RECORD            U001
         SPACE 1                                                   U001
OLD$ENT  SLL   R4,2                     * 4 FOR HEAD LINK          U001
         LA    R4,ADDR(R4)              -> TO LAST ENTRY           U001
         DROPX R1                                                  U002
         SPACE 1                                                   U001
OLD$LOOP ICM   R14,B'1111',SCANLINK-SCANENT(R4) NEXT NODE          U006
         USNGX SCANENT,R14                                         U006
         BZ    LAST$ENT                 LAST ONE                   U002
         CLC   SCANLEN,SCANLEN-SCANENT(R1)   THIS ONE SHORTER?     U002
         BL    OLD$INS                  YES, INSERT HERE           U002
         LR    R4,R14                   SWAP PTRS FOR NEXT TIME    U006
         B     OLD$LOOP                 AND TRY NEXT ENTRY         U002
         SPACE 1
OLD$INS  ST    R14,SCANLINK-SCANENT(,R1)  CHAIN LINKS TOGETHER     U006
LAST$ENT ST    R1,SCANLINK-SCANENT(,R4) INSERT AS LAST LINK        U002
         B     NEXT$IN                  GET NEXT RECORD            U002
         SPACE 1
         DROPX R14                                                 U006
         SPACE 3
*---  THE FOLLOWING CODE CAN NEVER BE REACHED, BUT I'M IN TOO MUCH ---*
*---  OF A HURRY AT THE MOMENT TO SEE HOW TO CLEAN IT ALL UP.      ---*
USE$PARM BCTR  R4,0                     GET EX LENGTH              U001
         B     GOT$INS                  GO INSERT THE LINE         U002
         SPACE 2
EOFSYSIN TM    SYSIN+48,X'10'           WAS SYSIN OPENED?          U001
         BZ    GO$OPEN                  NO, MUST HAVE BEEN PARM    U001
         SPACE 1
         CLOSE SYSIN                                               U001
         SPACE 1
         FREEPOOL  SYSIN
         EJECT ,
GO$OPEN  L     R1,16                    -> CVT                     U007
         L     R1,0(,R1)                -> DISPATCH
         L     R1,4(,R1)                -> TCB
         L     R1,12(,R1)               -> TIOT
         LA    R1,24(,R1)               -> DEVICE SECTION
         SPACE 1
LOOPTIOT CLC   4(8,R1),DDNAME
         BE    GOTIT
         SR    R0,R0                    CLEAR FOR IC
         IC    R0,0(,R1)                GET ENTRY LENGTH
         AR    R1,R0                    -> NEXT TIOT ENTRY
         CLC   =F'0',0(R1)              END OF TIOT?
         BNE   LOOPTIOT                 NO - KEEP LOOKING
         SPACE 1
         ABEND 1000,DUMP                SOMETHING SERIOUS WRONG
         SPACE 2
GOTIT    ICM   R15,B'0111',12(R1)       -> JFCB!!!!!               U007
         MVC   DSNAME(44),16(R15)       SAVE DSN TO PRINT IN TITLE U007
         MVC   DIRREC+256(8),16+44(R15) SAVE ELEMENT NAME          U007
         SPACE 1
         ICM   R15,B'0111',16+1(R1)                                U007
         BZ    OPEN$PS                  IF 0 JES OR DD DUMMY       U007
         CLI   18(R15),X'20'            DASD?                      U007
         BNE   OPEN$PS                  NO, CAN'T BE PARTIONED     U007
         MVC   VOLUME,28(R15)           SAVE VOLSER OF DSN         U007
         OBTAIN  DSCB#LIB               GET A DSCB                 U007
         LTR   R15,R15                  ERRORS?                    U007
         BNZ   OPEN$PO                  YES, ASSUME PO             U007
         TM    DIRREC+82-44,X'02'       DS1DSORG,PO ?              U007
         BZ    OPEN$PS                  NO, OPEN AS PARTIONED      U007
         CLC   DIRREC+256(8),BLANKS     IS MEMBER NAME PRESENT?    U007
         BE    OPEN$PO                  NO, OPEN AS PO             U007
         LA    R1,DSNAME+44             POINT TO END OF DSNAME     U007
MEM$LP1  CLI   0(R1),C' '               LAST CHAR OF DSN YET?      U007
         BNE   MEM$MEM                  YES, START WITH MEMBER     U007
         BCT   R1,MEM$LP1                                          U007
MEM$MEM  MVI   1(R1),C'('               MEMBERS ARE PARENTHESIZED  U007
         MVC   2(8,R1),DIRREC+256       MOVE IN MEMBER NAME        U007
         LA    R1,10(,R1)               -> PAST MEMBER NAME        U007
MEM$LP2  CLI   0(R1),C' '               LAST CHAR OF MEMBER YET?   U007
         BNE   MEM$END                  YES, FINISH IT             U007
         BCT   R1,MEM$LP2               LOOP BACK                  U007
MEM$END  MVI   1(R1),C')'               MEMBERS ARE PARENTHESIZED  U007
         SPACE 3
OPEN$PS  OPEN  (SEQ#DCB,INPUT)          OPEN PS DCB                U007
         TM    SEQ#DCB+DCBOFLGS-IHADCB,DCBOFOPN                    U007
         BZ    ABEND99                  DIDN'T OPEN                U007
         TM    SEQ#DCB+DCBRECFM-IHADCB,DCBRECV  RECFM V OR U?      U007
         BZ    OPEN$PSB                 NO, GET BUFFER             U007
         OI    FLAGS,F@SEQ18            YES, INDICATE SHIFTED SEQ  U007
         OI    FLAGS,F@NOSEQ %%%%%      SCAN ALL OF RECORD         U007
OPEN$PSB LH    R0,SEQ#DCB+DCBLRECL-IHADCB  GET RECORD LEN FOR F    U007
         TM    SEQ#DCB+DCBRECFM-IHADCB,DCBRECV  RECFM V OR U?      U007
         BZ    OPEN$PSG                 NO, BUY BUFFER             U007
         LH    R0,SEQ#DCB+DCBBLKSI-IHADCB  GET FULL BLOCK SIZE     U007
         TM    SEQ#DCB+DCBRECFM-IHADCB,DCBRECU  RECFM U?           U007
         BO    OPEN$PSG                 YES, BUY THE BUFFER        U007
         TM    SEQ#DCB+DCBRECFM-IHADCB,DCBRECSB+DCBRECBR  VBS?     U007
         BNO   OPEN$PSG                 NO, BUY THE BUFFER         U007
         LH    R0,SEQ#DCB+DCBLRECL-IHADCB  GET MAX LRECL           U007
OPEN$PSG ICM   R0,B'1000',=AL1(1)       GET IT OUTA SP 1           U007
         STH   R0,OVERLEN               SAVE LEN OF STORAGE        U007
         GETMAIN  R,LV=(0)              BUY A BUFFER               U007
         ST    R1,OVERADDR              SAVE PTR TO STORAGE        U007
         ZAP   RECNO,=P'0'              CLEAR RECORD COUNTER       U007
         B     GET$SEQ                  GET A RECORD               U007
         SPACE 2
OPEN$PO  OPEN  (DIR#DCB,,MEM#DCB)                                  U007
         LH    R0,MEM#DCB+DCBBLKSI-IHADCB   GET BLOCKSIZE          U007
         ICM   R0,B'1000',=AL1(1)       GET STORAGE IN SP 1        U007
         STH   R0,OVERLEN               SAVE LEN OF BUFFER         U007
         GETMAIN   R,LV=(0)             GET OVERPRINT BUFFER       U007
         ST    R1,OVERADDR              SAVE PTR TO OVERPRINT REC  U007
         TM    DIR#DCB+DCBOFLGS-IHADCB,DCBOFOPN                    U007
         BZ    ABEND99                  DIDN'T OPEN                U007
         TM    MEM#DCB+DCBOFLGS-IHADCB,DCBOFOPN                    U007
         BZ    ABEND99                  DIDN'T OPEN                U007
         TM    MEM#DCB+DCBRECFM-IHADCB,DCBRECV  RECFM V OR U?      U007
         BZ    READDIR                  NO, GET DIR BLOCK          U007
         OI    FLAGS,F@SEQ18            YES, INDICATE SHIFTED SEQ  U007
         OI    FLAGS,F@NOSEQ %%%%%      SCAN ALL OF RECORD         U007
         EJECT ,
READDIR  READ  DIR,SF,DIR#DCB,DIRREC,'S'
         SPACE 1
         CHECK DIR
         SPACE 2
         LA    R10,DIRREC+10            -> FIRST MEMBER NAME
         SPACE 2
LOOP     CLC   0(8,R10),=8X'FF'         END OF DIRECTORY?
         BE    DIREND                   YES - STOP
         MVC   MBRNAME(11),0(R10)
         B     LOCATE
         SPACE 2
GOBACK   CLC   DIRREC(8),0(R10)
         BE    READDIR
         SR    R15,R15
         IC    R15,11(,R10)
         N     R15,=F'31'
         AR    R15,R15
         LA    R10,12(R15,R10)
         B     LOOP
         SPACE 2
LOCATE   FIND  MEM#DCB,MBRNAME+8,C      SET START TTR OF MEMBER
         SPACE 1
         ZAP   RECNO,=P'0'              CLEAR RECORD COUNTER FOR   U007
         GETBUF MEM#DCB,(R6)
         SPACE 2
READMEM  READ  MEM#DECB,SF,MEM#DCB,(R6),'S'
         SPACE 1
         CHECK MEM#DECB
         SPACE 2
         LH    R14,MEM#DCB+62           GET BLKSIZE
         L     R15,MEM#DECB+16          -> IOB
         SH    R14,14(,R15)             SUBTRACT RESIDUAL
         ST    R6,NEXT
         LA    R15,0(R6,R14)            POINT TO END+1
         ST    R15,END
         SPACE 3                                                   U007
         MVC   RECLEN,MEM#DCB+DCBLRECL-IHADCB  MOVE IN REC LEN     U007
         TM    MEM#DCB+DCBRECFM-IHADCB,DCBRECV RECFM V OR U?       U007
         BZ    NEW$CARD                 NO, MUST BE F              U007
         STH   R14,RECLEN               ASSUME RECFM U             U007
         TM    MEM#DCB+DCBRECFM-IHADCB,DCBRECU RECFM U?            U007
         BO    NEW$CARD                 YES, GOT LEN               U007
         SH    R14,=H'4'                LEN - 4 FOR BDW            U007
         STH   R14,RECLEN               SAVE CORRECT DATA LEN      U007
         LA    R6,4(,R6)                -> RDW                     U007
         ST    R6,NEXT                  SAVE IN START PTR          U007
         TM    MEM#DCB+DCBRECFM-IHADCB,DCBRECBR RECFM VB?          U007
         BZ    NEW$CARD                 NO, GOT LEN                U007
         LH    R14,0(,R6)               GET LEN OF RECORD          U007
         SH    R14,=H'4'                LEN LESS RDW               U007
         STH   R14,RECLEN               SAVE FOR LATER             U007
         LA    R6,4(,R6)                -> DATA PORTION OF RECORD  U007
         ST    R6,NEXT                  SAVE FOR OVERLAYS          U007
         B     NEW$CARD                 SETUP FOR NEXT RECORD      U007
         SPACE 3                                                   U007
GET$SEQ  GET   SEQ#DCB                                             U007
         LR    R6,R1                    -> INPUT RECORD            U007
         ST    R6,NEXT                  SAVE FOR OVER PRINT        U007
         MVC   RECLEN,SEQ#DCB+DCBLRECL-IHADCB  MOVE IN RECORD LEN  U007
         SPACE 3
NEW$CARD TM    FLAGS,F@FOUND            STRING FOUND?              U007
         BZ    REC$SET                  NO, SKIP CLEAR             U007
         XR    R0,R0                    CLEAR FOR MVCL             U007
         SR    R1,R1                    CLEAR HERE TOO             U007
         L     R14,OVERADDR             -> AREA TO BLANK           U007
         LH    R15,OVERLEN              LEN TO BLANK               U007
         ICM   R1,B'1000',=C' '         PAD CHAR                   U007
         MVCL  R14,R0                   CLEAR OVER PRINT AREA      U007
         XR    R1,R1                    CLEAR OUT PAD CHAR         U007
         NI    FLAGS,X'FF'-F@FOUND      NO HIGHLIGHT LINE          U007
         SPACE 2
*U007    LA    R4,72-1                  NUMBER OF COLUMNS TO SCAN  U001
REC$SET  LH    R4,RECLEN                NUMBER OF COLUMNS TO SCAN  U007
         BCTR  R4,0                     -1 FOR EXECUTE             U007
         L     R5,NEXT                  -> CARD
         AP    RECNO,=P'1'              NEW RECORD PLEASE          U007
         TM    FLAGS,F@NOSEQ            SEQ FIELDS ON RECORDS?     U007
         BO    SCAN                     NO, GET ENTIRE RECORD      U007
         SH    R4,=H'8'                 YES, SKIP THE SCANNING     U007
         TM    FLAGS,F@SEQ18            SEQ FIELDS IN 1 TO 8?      U007
         BZ    SCAN                     NO, START SCAN HERE        U007
         LA    R5,8(,R5)                -> PAST SEQ FIELDS         U007
         SPACE 1
SCAN     SR    R2,R2                    CLEAR FOR TRT IMPLIED "IC" U003
         LR    R15,R4                   COPY TOTAL LEN TO SCAN     U007
         CH    R4,=H'256'               OVER MAX?                  U007
         BNH   SCAN$IT                  NO DO IT THEN              U007
         LA    R4,256-1                 MAX LEN TO SCAN AT A TIME  U007
SCAN$IT  EX    R4,TRT                   SCAN FOR START OF STRINGS  U007
         BZ    BUMP$SEC                 NONE FOUND, TRY NEXT SECT  U007
         SPACE 1
         SR    R1,R5                    GET LEN SCANNED            U001
         SR    R15,R1                   TOTAL LEN LEFT TO SCAN     U007
         BNM   *+8                      CONTINUE IF OK             LDWX
         EX    0,*                      BLOW IF NOT                LDWX
         AR    R5,R1                    NEW STARTING POS           U001
         SLL   R2,2                     * 2 FOR ADDR OFFSET        U001
         L     R3,ADDR(R2)              -> START OF SEARCH ARGS    U001
         XR    R2,R2                    000000XX AGAIN             U001
         USNGX SCANENT,R3                                          U001
TESTLOOP CH    R15,SCANLEN              ENOUGH LEFT FOR STRING?    U007
         BL    SKIPTHIS                 NO, SKIP THIS ONE          U001
         LH    R1,SCANLEN               LEN TO CHECK               U001
         EX    R1,CLC                   << CLC 0(*-*,R5),SCANARG >>U001
         BE    GOT$ONE                  WE FOUND ONE               U001
         SPACE 1                                                   U001
SKIPTHIS ICM   R3,B'1111',SCANLINK      -> NEXT ENTRY              U001
         BZ    BUMP                     NONE, THEN GET CHAR        U001
         B     TESTLOOP                 YES, THEN CHECK IT TOO     U001
         SPACE 2
*  STRING IS ON THIS CARD - MOVE A COPY TO OVERPRINT LINE
GOT$ONE  LR    R14,R5                   COPY STRING ADDR           U001
         S     R14,NEXT                 OFFSET OF STRING INTO CARD
         A     R14,OVERADDR             -> LOC IN OVERPRINT LINE   U007
         EX    R1,MVC                   MVC 0(*-*,R14),0(R5)
         L     R1,SCANHITS              GET HIT COUNTER            U004
         LA    R1,1(,R1)                INCREMENT                  U004
         ST    R1,SCANHITS              STORE BACK                 U004
         OI    FLAGS,F@FOUND            INDICATE ITEM FOUND        U007
         SPACE 1
BUMP     LA    R5,1(,R5)                INCR PTR REG
         BCTR  R15,0                    DECREMENT COUNT REG        U007
         LTR   R4,R15                   ANYTHING LEFT TO SCAN?     U007
         BNM   SCAN                     YES, LOOK SOME MORE        U007
         B     BUMP$TST                 NO, TRY NEXT RECORD        U007
         SPACE 1
BUMP$SEC AR    R5,R4                    BUMP BY LEN SCANNED        U007
         SR    R15,R4                   LEN LEFT TO GO             U007
         BNP   BUMP$TST                 GO DO IT AGAIN             U007
         LR    R4,R15                   HERE FOR SCAN              U007
         B     SCAN                     AND GO SCAN NEXT SEC.      U007
         SPACE 1
BUMP$TST TM    FLAGS,F@NOLIST           SUPPRESS LISTING?          U004
         BO    UPIT                     YES                        U004
         TM    FLAGS,F@FOUND            WAS ANY STRING FOUND?      U007
         BO    WRITE                    YES - PRINT IT             U001
         SPACE 2
UPIT     L     R15,NEXT
         TM    SEQ#DCB+DCBOFLGS-IHADCB,DCBOFOPN  SEQ PROCESSING    U007
         BO    GET$SEQ                  YES, GET NEXT CARD         U007
         AH    R15,RECLEN               -> NEXT RECORD             U007
         CL    R15,END
         BNL   READMEM
         ST    R15,NEXT
         TM    MEM#DCB+DCBRECFM-IHADCB,DCBRECF  RECFM F?           U007
         BO    NEW$CARD                 YES, DONE HERE THEN        U007
         LH    R14,0(,R15)              LEN OF NEW RECORD          U007
         SH    R14,=H'4'                DATA LEN                   U007
         STH   R14,RECLEN               SAVE RECORD LEN            U007
         LA    R15,4(,R15)              -> DATA PORTION ONLY       U007
         ST    R15,NEXT                 SAVE FOR NEXT PASS         U007
         B     NEW$CARD
         SPACE 3
CLC      CLC   0(*-*,R5),SCANARG        << EXECUTED >>             U001
MVC      MVC   0(*-*,R14),0(R5)         << EXECUTED >>
TRT      TRT   0(*-*,R5),TABLE          << EXECUTED >>             U001
         DROPX R3                                                  U001
         EJECT ,
WRITE    CP    LNECNT,=P'55'            NEED A NEW PAGE?
         BL    CHKNAME                  NO - CONTINUE
         MVI   LINE,C'1'
         MVC   LINEDSN,DSNAME                                      U007
         AP    PAGENO,=P'1'             NEW PAGE PLEASE            U007
         MVC   LINEPAGE+1(6),=X'20206B202120'                      U007
         ED    LINEPAGE,PAGENO          TELL THE NUMBER            U007
         MVC   LINEPAGE-5(4),=C'PAGE'   INSERT PAGE LIT            U007
         BAL   LINK,PUTIT
         MVI   LINE,C'0'
         LA    R1,=C' 10 20 30 40 50 60 70 80 90100'               U007
         LA    R0,10                    NUMBER OF LITS             U007
         LA    R15,LINEDATA+7           WHERE THE DATA STARTS      U007
WRITELP  MVC   0(3,R15),0(R1)           INSERT A LIT               U007
         LA    R1,3(,R1)                NEXT LIT                   U007
         LA    R15,10(,R15)             NEXT SPOT                  U007
         BCT   R0,WRITELP               DO IT AGAIN                U007
         BAL   LINK,PUTIT               PRINT TITLE LINE 2         U007
*U009    MVI   LINE,C' '                NEW LINE                   U007
         MVC   LINEMEM(6),=C'MEMBER'    INSERT HEADING             U009
         MVC   LINEDATA(10),=C'1234567890'  INSERT 1 SET OF DATA   U007
         MVC   LINEDATA+10(90),LINEDATA FILL THE TITLES            U007
         MVC   LINERNO(10),=C'RECORD NUM'  WHAT IS IT              U009
         BAL   LINK,PUTIT               PRINT TITLE LINE 3         U007
         MVI   LINE,C'0'                SKIP A LINE                U007
CHKNAME  CLC   HOLDNAME(8),MBRNAME      PRINTED THIS NAME YET?
         BE    MOVEJCL                  YES - SKIP IT
         MVC   LINEMEM,MBRNAME                                     U007
         BAL   LINK,PUTIT
         MVC   HOLDNAME(8),MBRNAME
         MVI   LINE,C'0'
         SPACE 2
MOVEJCL  MVC   LINERNO+1(9),=X'206B2020206B202120'  EDIT MASK      U009
         ED    LINERNO,RECNO            OUTPUT RECORD NUMBER       U007
         LH    R5,RECLEN                LENGTH OF RECORD           U007
         XR    R4,R4                    OFFSET INTO RECORD         U007
MOVELOOP LA    R2,100                   ASSUME FULL LINE TO MOVE   U007
         CH    R5,=H'100'               FULL LINE TO PRINT?        U007
         BH    MOVESOME                 YES, DO IT                 U007
         LR    R2,R5                    NO JUST FINISH OFF LINE    U007
MOVESOME BCTR  R2,0                     -1 FOR EXECUTE             U007
         LR    R1,R4                    OFFSET INTO RECORD         U007
         A     R1,NEXT                  WHERE TO START IN RECORD   U007
         EX    R2,DATAMVC               RECORD TO PRINT LINE       U007
         BAL   LINK,PUTIT
*  NOW OVERPRINT THE SEARCH STRING SO IT STANDS OUT
         TM    FLAGS,F@TSO              BYPASS HIGHLIGHTING?       U009
         BO    UPIT                     NO - SKIP IT               U009
         LR    R1,R4                    OFFSET INTO RECORD         U007
         A     R1,OVERADDR              WHERE TO START IN OVER     U007
         EX    R2,OVERCLC               IS IT BLANKS?              U007
         BE    MOVEEND                  YES, CHECK NEXT PART       U007
         EX    R2,DATAMVC               MOVE IN OVER PRINT DATA    U007
         MVI   LINE,C'+'                MAKE IT OVERPRINT
         TM    FLAGS,F@OVER             OVERPRINT?                 U009
         BO    GO$OVER                  YES - ALL SET              U009
*---  MUST BE PARM=UNDER                                           ---*
         EX    R2,OVERTR                CHANGE TO UNDERSCORES      U009
         B     *+8                      PRINT THEM ONCE            U009
GO$OVER  BAL   R14,PUT                  OVERPRINT IT ONCE
         BAL   R14,PUT                  OVERPRINT IT TWICE
MOVEEND  LA    R4,100(,R4)              NEXT PART                  U007
         SH    R5,=H'100'               LEN LEFT TO PRINT          U007
         BP    MOVELOOP                 DO IT AGAIN                U007
         SPACE 1                                                   U007
         MVC   LINE,BLANKS              CLEAR PRINT LINE
         B     UPIT                     SCAN NEXT CARD
         SPACE 2
OVERCLC  CLC   0(*-*,R1),BLANKS         <<  EXECUTED  >>           U007
DATAMVC  MVC   LINEDATA(*-*),0(R1)      <<  EXECUTED  >>           U007
OVERTR   TR    LINEDATA(*-*),UNDERTAB   <<  EXECUTED  >>           U009
         SPACE 2
PUTIT    CLI   LINE,C'-'                TRIPLE SPACE?
         BNE   *+10                     NO - SKIP
         AP    LNECNT,=P'3'             YES
         CLI   LINE,C'0'                DOUBLE SPACE?
         BNE   *+10                     NO - SKIP
         AP    LNECNT,=P'2'             YES
         CLI   LINE,C' '                SINGLE SPACE?
         BNE   *+10                     NO - SKIP
         AP    LNECNT,=P'1'             YES
         CLI   LINE,C'1'                NEW PAGE?
         BNE   *+10                     NO - SKIP
         ZAP   LNECNT,=P'1'             YES - RESET LINE COUNT
         BAL   R14,PUT                  PRINT IT
         MVC   LINE,BLANKS              CLEAR PRINT LINE
         BR    LINK
         SPACE 2
MEMEND   FREEBUF  MEM#DCB,(R6)
         SPACE 1
         B     GOBACK
         SPACE 3
DIREND   CLOSE (DIR#DCB,,MEM#DCB,,SEQ#DCB)                         U007
         SPACE 1
         TM    FLAGS,F@COUNT            WANT COUNTS?               U004
         BNO   CLOSE                    NO - JUST LEAVE NOW        U004
         ZAP   LNECNT,=P'56'            FORCE NEW PAGE             U005
         SPACE 1
*---  NOW MUST RUN DOWN ALL 256 POSSIBLE CHAINS AND PRINT COUNTS   U004
         LA    R2,ADDR-4                -> FIRST-1 ANCHOR          U004
         LA    R3,256                   NUMBER OF ANCHORS          U004
         SPACE 1
COUNT$LP LA    R2,4(,R2)                -> NEXT ANCHOR             U004
         ICM   R4,B'0111',1(R2)         -> CHAIN                   U004
         BZ    COUNTBCT                 NONE - TRY NEXT            U004
         USNGX SCANENT,R4                                          U004
         SPACE 1
COUNT$ED CP    LNECNT,=P'55'            NEED A NEW PAGE?           U005
         BL    COUNT$GO                 NO - CONTINUE              U005
         MVI   LINE,C'1'                                           U005
         MVC   LINEDSN,DSNAME                                      U007
         AP    PAGENO,=P'1'             NEW PAGE PLEASE            U007
         MVC   LINEPAGE+1(6),=X'20206B202120'                      U007
         ED    LINEPAGE,PAGENO          TELL THE NUMBER            U007
         MVC   LINEPAGE-5(4),=C'PAGE'   INSERT PAGE LIT            U007
         BAL   LINK,PUTIT                                          U005
         CLC   PARMLINE,BLANKS          ANYTHING HERE?             U009
         BE    SKIPPARM                 NO - SKIP                  U009
         MVC   LINE,PARMLINE                                       U009
         BAL   LINK,PUTIT                                          U009
         CLC   PARMERRL,BLANKS          ANYTHING HERE?             U009
         BE    SKIPPARM                 NO - SKIP                  U009
         MVC   LINE,PARMERRL                                       U009
         BAL   LINK,PUTIT                                          U009
         SPACE 2
SKIPPARM MVI   LINE,C'-'                                           U005
         SPACE 1
COUNT$GO L     R0,SCANHITS              GET NUMBER OF HITS         U004
         CVD   R0,DWD                   PREPARE TO EDIT            U004
         MVC   LINEHCNT+1(11),=X'2020206B2020206B202120'           U007
         ED    LINEHCNT,DWD+3           NUMBER OF HITS             U007
         MVC   LINESCAN,SCANARG         DISPLAY THE SEARCH STRING  U007
         BAL   LINK,PUTIT               PRINT THIS LINE            U005
         SPACE 1
COUNTNXT ICM   R4,B'0111',SCANLINK+1    GET NEXT FOR THIS CHAR     U004
         BNZ   COUNT$ED                 FORMAT IT IF MORE          U004
         SPACE 1
COUNTBCT BCT   R3,COUNT$LP              DO NEXT CHAIN              U004
         SPACE 1
         DROPX R4                                                  U004
         SPACE 1
CLOSE    CLOSE SYSPRINT                                            U004
         SPACE 1
         B     LEAVE
         SPACE 3
PUT      PUT   SYSPRINT,LINE            PRINT THE LINE
         SPACE 1
         ORG   *-2                      BACK OVER THE BALR
         BR    R15                      PUT WILL RETURN TO R14
         SPACE 3
DCBEXIT  DCBEXIT  BLKSIZE=50*121                                   U009
         EJECT
         LTORG ,                                                   U001
         SPACE 1
PATCH    DC    20S(*)                   PATCH SPACE (WHAT ELSE?)   U007
         SPACE 3
DSCB#LIB CAMLST  SEARCH,DSNAME,VOLUME,DIRREC  GIMMIE A DSCB        U007
DWD      DC    D'0'                                                U004
HOLDNAME DC    CL8' '
DIRREC   DS    0CL264
         DC    264C' '
NEXT     DC    F'0'
END      DC    F'0'
DDNAME   DC    CL8'SYSLIB'
DSNAME   DC    CL44' '
         DC    0F'0'
MBRNAME  DC    CL8' ',XL4'00'
STRNGNUM DC    H'0'                     # OF SEARCH STRINGS        U001
VOLUME   DC    CL6' '                   VOLSER OF DASD UCB         U007
LNECNT   DC    PL2'55'
         SPACE 1
FLAGS    DC    AL1(F@COUNT+F@FOUND)     MISCELLANEOUS FLAGS        U007
F@COUNT  EQU   X'80'                    PARM=COUNT                 U004
F@NOLIST EQU   X'40'                    PARM=NOLIST                U004
F@NOSEQ  EQU   X'20'                    SCAN SEQ FIELDS TOO.       U007
F@FOUND  EQU   X'10'                    STRING WAS FOUND IN RECORD U007
F@SEQ18  EQU   X'08'                    SEQ COLUMNS IN 1 TO 8      U007
F@OVER   EQU   X'04'                    OVERPRINT STYLE HIGHLIGHT  U009
F@TSO    EQU   X'02'                    NO HIGHLIGHTING            U009
         SPACE 2
PARM#TAB DC    A(P$TSO),AL1(3-1),CL8'TSO'                          U009
         DC    0A(0)                                               U009
PARMENTL EQU   *-PARM#TAB               LENGTH OF 1 ENTRY          U009
         DC    A(P$NOLIST),AL1(6-1),CL8'NOLIST'                    U009
         DC    A(P$UNDER),AL1(5-1),CL8'UNDER'                      U009
         DC    A(P$OVER),AL1(4-1),CL8'OVER'                        U009
         DC    0A(0),X'FFFFFFFF'        END OF PARM TABLE          U009
         SPACE 2
EXLST    DC    0F'0',X'85',AL3(DCBEXIT)                            U009
         SPACE 2
UNDERTAB DC    256C'_'                  CHANGE ALL TO UNDERSCORE   U009
         ORG   UNDERTAB+C' '                                       U009
         DC    C' '                     EXCEPT BLANKS              U009
         ORG   ,                                                   U009
         SPACE 3
WORKD    DSECT ,                        RESUME
OVERADDR DS    A(*-*)                   -> OVERPRINT BUFFER        U007
TABLE    DS    XL256                    TRANSLATE TABLE FOR CHARS  U001
ADDR     DS    256A(*-*)                ADDR OF ANCHORS FOR SEARCH U001
RECLEN   DS    H                        LEN OF RECORD BEING SCANNEDU007
OVERLEN  DS    H                        LEN OF OVERPRINT BUFFER    U007
BLANKS   DS    CL121                                               U009
LINE     DS    CL121                                               U009
PARMLINE DS    CL121                                               U009
PARMERRL DS    CL121                                               U009
         SPACE 1
*---  DATA LINE                                                    ---*
         ORG   LINE+1                                              U009
LINEMEM  DS    CL8                      MEMBER NAME                U007
         DS    CL2                                                 U009
LINEDATA DS    CL100                    DATA PORTION OF LINE       U007
LINERNO  DS    CL10                     RECORD NUMBER IN MEMBER    U009
         SPACE 1
*---  HEADER LINE                                                  ---*
         ORG   LINE+1                                              U009
LINEDSN  DS    CL44                     DSNAME BEING SCANNED       U007
         ORG   LINE+100                                            U007
         DC    C'PAGE '                                            U007
LINEPAGE DS    CL7                      PAGE NUMBER                U007
         SPACE 1
*---  RESULTS SUMMARY LINE                                         ---*
         ORG   LINE+1                                              U007
LINEHCNT DS    CL12                     LINE HIT COUNTER           U007
         DS    CL2                                                 U009
LINESCAN DS    CL72                     SCAN ARG                   U007
         ORG   ,                                                   U007
         SPACE 1
RECNO    DS    PL4                      RECORD NUMBER              U009
PAGENO   DS    PL3                      PAGE NUMBER                U007
WORKLEN  EQU   *-WORKD                  LENGTH OF WORKAREA
         SPACE 3
SCANENT  DSECT ,                                                   U001
SCANLINK DS    A(*-*)                   -> NEXT LINK               U001
SCANHITS DS    F                        NUMBER OF HITS             U004
SCANLEN  DS    H                        LEN OF ARG TO SCAN FOR     U001
SCANARG  DS    CL72                     ARG TO SCAN FOR            U001
         DS    2X                       RESERVED                   U001
SCANENTL EQU   *-SCANENT                LEN OF DSECT               U001
         SPACE 3                                                   U001
PDSSCAN  CSECT                          RESUME
         SPACE 2
DIR#DCB  DCB   DSORG=PS,MACRF=R,KEYLEN=8,DDNAME=SYSLIB,                $
               RECFM=F,BLKSIZE=256,EODAD=DIREND
         SPACE 3
MEM#DCB  DCB   DSORG=PO,MACRF=R,DDNAME=SYSLIB,EODAD=MEMEND,            $
               BUFNO=1
         SPACE 3
SEQ#DCB  DCB   DSORG=PS,MACRF=GL,DDNAME=SYSLIB,EODAD=DIREND,           $
               BFTEK=A                                             U007
         SPACE 3
SYSIN    DCB   DSORG=PS,MACRF=GL,DDNAME=SYSIN,LRECL=80,EODAD=EOFSYSIN
         SPACE 3
SYSPRINT DCB   DSORG=PS,MACRF=PM,DDNAME=SYSPRINT,RECFM=FBA,            $
               LRECL=121,EXLST=EXLST                               U009
         SPACE 3
*        DCBD  DSORG=PS                                            U007
IHADCB   DSECT ,                                                   U007
         ORG   IHADCB+36                                           U007
DCBRECFM DS    X                        RECFM                      U007
DCBRECF  EQU   X'80'                    RECFM F                    U007
DCBRECV  EQU   X'40'                    RECFM V                    U007
DCBRECU  EQU   X'C0'                    RECFM U                    U007
DCBRECBR EQU   X'10'                    BLOCKED RECORDS            U007
DCBRECSB EQU   X'08'                    SPANNED OR STANDARD BLOCKS U007
         ORG   IHADCB+48                                           U007
DCBOFLGS DS    X                        OPEN FLAGS                 U007
DCBOFOPN EQU   X'10'                    OPEN DCB BIT               U007
         ORG   IHADCB+62                                           U007
DCBBLKSI DS    H                        BLOCKSIZE                  U007
         ORG   IHADCB+82                                           U007
DCBLRECL DS    H                        LRECL                      U007
         SPACE 3
         END   PDSSCAN
