WHOSON   START 0                       DEFINE CSECT
*
*     REGISTER EQUATES AND USAGE
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12                      BASE REG
R13      EQU   13                      SAVE AREA ADDR
R14      EQU   14                      RETURN ADDR
R15      EQU   15                      RETURN CODE
         STM   R14,R12,12(R13)         SAVE REGISTERS
         LR    R12,R15                 SET REG 12 TO ENTRY ADDR
         USING WHOSON,R12              DEFINE BASE REG AND ADDR
         ST    R13,SAVEAREA+4          STORE SAVE AREA ADDR
         LR    R2,R13                  ALSO STASH IT TEMPORARILY
         LA    R13,SAVEAREA            LOAD ADDR OF MY SAVE AREA
         ST    R13,8(R2)               STORE IT IN CALLING SAVE AREA
*
*     RUN THROUGHT ASVT
*
*     REGISTER USE:
*
*     R2  - COUNT OF STARTUPS
*     R3  - PTR TO ENTRY IN ASVT
*     R4  - PTR TO ASCB
*     R5  - COUNT OF TSO USERS
*     R6  - PTR TO CURRENT ENTRY IN USERID TABLE
*     R7  - PTR TO JOBNAME
*     R8  - COUNT OF BATCH JOBS
*     R9  - NUMBER OF AVAILABLE ASIDS
*
         L     R3,16(0)                LOAD ADDR OF CVT
         L     R3,556(R3)              LOAD ADDR OF ASVT
         L     R9,516(R3)              LOAD # OF ASIDS
         LA    R3,528(R3)              POINT TO FIRST ASVT ENTRY
         SLR   R2,R2                   COUNT OF STARTUPS=0
         SLR   R5,R5                   COUNT OF TSO USERS=0
         SLR   R8,R8                   COUNT OF BATCH JOBS=0
         LA    R6,IDTABLE-8            ADDR OF USERID TABLE
         MVI   LAST,OFF
ASVTLOOP EQU   *
         CLC   0(4,R3),=X'80000000'    LAST ASVT ENTRY?
         BNE   NOTLAST                 NOPE
         MVI   LAST,ON                 REMEMBER THIS EVENT
NOTLAST  EQU   *
         TM    0(R3),X'80'             AVAILABLE ASCB?
         BO    NEXTASVT                IF SO, IGNORE IT
         CLI   LAST,ON                 HAVE WE HIT LAST ASCB?
         BNE   LEGIT                   NO, ALL IS WELL
         TPUT  LOSTMSG,L'LOSTMSG
LEGIT    EQU   *
         L     R4,0(R3)                LOAD ADDR OF ASCB
         ICM   R7,B'1111',172(R4)      LOAD ADDR OF INIT JOBNAME
         BZ    NOTBATCH                IF ZERO, CAN'T BE BATCH
         LA    R8,1(R8)                INCREMENT COUNT OF BATCH USERS
         B     NEXTASVT                THAT'S ALL FOR THIS GUY
NOTBATCH ICM   R7,B'1111',176(R4)      LOAD ADDR OF TSO JOBNAME
         BNZ   GOTID                   IF NOT ZERO, USER LOGGED ON
         LA    R2,1(R2)                INCREMENT COUNT OF STARTUPS
         B     NEXTASVT                THAT'S ALL FOR THIS GUY
GOTID    CLC   60(4,R4),=X'00000000'   ADDR OF TSB ZERO?
         BE    NEXTASVT                IF SO, IGNORE IT
         LA    R5,1(R5)                INCREMENT COUNT OF TSO USERS
         LA    R6,8(R6)                ADDR OF NEXT SLOT IN IDTABLE
         MVC   0(8,R6),0(R7)           MOVE ID INTO TABLE
NEXTASVT LA    R3,4(R3)                POINT TO NEXT ASVT ENTRY
         BCT   R9,ASVTLOOP
*
*     END OF ASVT REACHED
*
         ST    R5,USERS                STORE COUNT OF USERS
         CVD   R5,PACKNUM              CONVERT TO DECIMAL
         ED    CHARUSER,PACKNUM+6      PACK COUNT OF USERS
         CVD   R8,PACKNUM              CONVERT TO DECIMAL
         ED    CHARJOBS,PACKNUM+6      PACK COUNT OF JOBS
         CVD   R2,PACKNUM              CONVERT TO DECIMAL
         ED    CHARSTRT,PACKNUM+6      PACK COUNT OF STARTUPS
         TPUT  CHARUSER,LENGTH
*
*     SORT USERID'S
*
*     REGISTER USE FOR SORT:
*
*     R5  - FRONT LIMIT OF TABLE
*     R6  - BACK LIMIT OF TABLE -1
*     R7  - DELTA (8 OR -8)
*     R8  - ELEMENT BEING CHECKED
*     R9  - COUNT OF EXCHANGES ON ONE PASS
*
         LA    R5,IDTABLE              LOAD ADDR OF IDTABLE
         LA    R7,8(0)                 DELTA=+8
         SR    R6,R7                   END OF IDTABLE -1
         LR    R8,R5                   FRONT OF IDTABLE
LOOP1    SLR   R9,R9                   EXCHANGES=0
LOOP2    LTR   R7,R7                   FORWARDS OR BACKWARDS?
         BL    BACKW
         CR    R8,R6                   END OF TABLE?
         BH    ENDLOOP2
         B     COMPARE
BACKW    CR    R8,R5                   END OF TABLE?
         BL    ENDLOOP2
COMPARE  CLC   0(8,R8),8(R8)           COMPARE ADJACENT ENTRIES
         BL    NOCHANGE
         MVC   TEMPSLOT,0(R8)          EXCHANGE
         MVC   0(8,R8),8(R8)
         MVC   8(8,R8),TEMPSLOT
         LA    R9,1(R9)                INCREMENT COUNT OF EXCHANGES
NOCHANGE AR    R8,R7                   POINT TO NEXT ENTRY
         B     LOOP2
ENDLOOP2 LTR   R9,R9                   CHECK EXCHANGES
         BZ    ENDLOOP1                IF NONE, END OF SORT
         LCR   R7,R7                   SWITCH DIRECTION
         BL    BACKW2
         AR    R8,R7                   MOVE UP STARTING POINT
         AR    R5,R7                   MOVE UP START OF TABLE
         B     LOOP1
BACKW2   AR    R8,R7                   BACK UP STARTING POINT
         AR    R6,R7                   BACK UP END OF TABLE
         B     LOOP1
ENDLOOP1 EQU   *
*
*     PRINT SORTED USERS
*
         SLR   R8,R8                   BYTES OUTPUT = 0
         SLR   R9,R9                   USERS OUTPUT = 0
         LA    R10,IDTABLE             POINT TO FRONT OF IDTABLE
         L     R5,USERS                LOAD COUNT OF USERS
OUTLOOP  LA    R11,OUTLINE(R8)         RECEIVING ADDR IN OUTLINE
         MVC   0(8,R11),0(R10)         MOVE USERID TO OUTLINE
         MVC   8(2,R11),=C'  '         SEPARATE WITH BLANKS
         LA    R9,1(R9)                COUNT USERS OUTPUT
         LA    R8,10(R8)               COUNT BYTES OUTPUT
         LA    R10,8(R10)              MOVE POINTER IN IDTABLE
         CR    R5,R9                   LAST USER?
         BNH   PUTLINE                 IF SO PRINT LINE
         CH    R8,=H'70'               LINE FULL?
         BL    OUTLOOP                 IF NOT GET MORE
PUTLINE  SH    R8,=H'2'                DON'T COUNT LAST 2 BYTES
         TPUT  OUTLINE,(R8)            PRINT LINE
         SLR   R8,R8                   BYTES OUTPUT=0
         CR    R5,R9                   LAST USER?
         BH    OUTLOOP                 IF NOT CONTINUE
*
*     TERMINATE
*
         L     R13,SAVEAREA+4          LOAD ADDR OF CALLING SAVE AREA
         LM    R14,R12,12(R13)         RESTORE REGISTERS
         SR    R15,R15                 SET RETURN CODE TO ZERO
         BR    R14                     RETURN
*
*     CONSTANTS AND STORAGE RESERVATIONS
*
SAVEAREA DS    18F
TEMPSLOT DS    CL8
IDTABLE  DS    161CL8
USERS    DS    F
         DS    0D
PACKNUM  DS    PL8
CHARUSER DC    X'40202120'
         DC    C' USERS LOGGED ON,'
CHARJOBS DC    X'40202120'
         DC    C' BATCH JOBS,'
CHARSTRT DC    X'40202120'
         DC    C' ADDRESS SPACE STARTUPS'
LENGTH   EQU   *-CHARUSER
OUTLINE  DS    CL70
ON       EQU   X'FF'
OFF      EQU   X'00'
LAST     DS    XL1
LOSTMSG  DC    C'FOUND A LOST ASVT ENTRY'
         END   WHOSON
