         PRINT ON,NOGEN
*----------------------------------------------------------------------
*
*        NAME..........   FSEDIT
*
*        FUNCTION......   ALLOCATE REQUIRED SPF DATASETS
*                         INVOKE ISRPCP PGM(SPFEDIT/SPFBRO)
*
*        ATTRIBUTES....   REENTRANT REUSEABLE
*
*        MODE:.........   RMODE=24  AMODE=24   (MVS/XA COMPATIBLE)
*
*        DEPENDENCIES..   NONE
*
*----------------------------------------------------------------------
         SPACE
         PUNCH ' ALIAS FSE'
         PUNCH ' ALIAS FSBROWSE'
         PUNCH ' ALIAS FSB'
         SPACE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11                 BASE REG #2
R12      EQU   12                 BASE REG #1
R13      EQU   13
R14      EQU   14
R15      EQU   15
         EJECT
*----------------------------------------------------------------------
*        PROLOG
*----------------------------------------------------------------------
FSEDIT   CSECT
         USING *,R15
         SAVE  (14,12),,FSEDIT_&SYSDATE._&SYSTIME.
         DROP  R15
         BALR  R12,0
         USING *,R12              INFORM ASSEMBLER OF BASE REGS
         SPACE
         LR    R10,R1             SAVE CPPL ADDRESS
         USING CPPL,R10           CPPL ADDRESSABILITY
         GETMAIN RU,LV=@DATAL     GET STORAGE FOR WORKAREA
         LR    R2,R1              ADDRESS OF 'TO' FIELD
         LA    R3,@DATAL          LENGTH OF 'TO' FIELD
         XR    R5,R5              ZERO PAD CHAR AND 'FROM' LENGTH
         MVCL  R2,R4              CLEAR WORK AREA
         ST    R13,4(R1)          SAVE ADDR OF CALLERS SAVEAREA IN OURS
         ST    R1,8(R13)          SAVE ADDR OF OUR SAVEAREA IN CALLERS
         LR    R13,R1             SET WORKAREA POINTER
         USING @DATA,R13          ADDRESSABILITY TO WORKAREA
         SPACE
         GTSIZE ,                 FIND OUT THE SCREEN SIZE
         LTR   R0,R0              IS THE SCREEN LENGTH ZERO?
         BNZ   ENTRY010           NO - MUST BE A DISPLAY STATION
         TPUT  TWXMSG,TWXMSGL     FSE ON A TWX, YOU GOT TO BE KIDDING
         B     ENTRY900           LETS GET OUT OF HERE
         EJECT
*----------------------------------------------------------------------
*        SET UP TSO ENVIRONMENT
*----------------------------------------------------------------------
ENTRY010 DS    0H
         ST    R10,@CPPLPTR       STORE THE CPPL PTR
         MVC   @ECT,CPPLECT       MOVE ENVIRONMENT CONTROL TABLE PTR
         SPACE
         LA    R1,@PPL            LOAD ADDRESS OF OUR PARSE PARM LIST
         USING PPL,R1
         MVC   PPLUPT,CPPLUPT     MOVE USER PROFILE TABLE PTR
         MVC   PPLECT,CPPLECT     MOVE ENVIRONMENT CONTROL TABLE PTR
         LA    R0,@ECB            ADDRESS OF ECB
         ST    R0,PPLECB          STORE IT IN THE PARSE PARM LIST
         L     R0,PCLPTR          ADDRESS OF IKJPARM CSECT
         ST    R0,PPLPCL          STORE IT IN THE PARSE PARM LIST
         LA    R0,@PPLANS         ADDRESS OF THE PARSE ANSWER AREA
         ST    R0,PPLANS          STORE IT IN THE PARSE PARM LIST
         MVC   PPLCBUF,CPPLCBUF   MOVE COMMAND BUF POINTER
         ST    R13,PPLUWA         STORE THE ADDRESS OF THE WORKAREA
         DROP  R1
EXIT010  EQU   *
         SPACE 2
*----------------------------------------------------------------------
*        WHATS MY NAME ?
*----------------------------------------------------------------------
ENTRY020 DS    0H
         L     R9,@ECT            LOAD THE ECT PTR
         USING ECT,R9             ECT ADDRESSABILITY
         SPACE
         CLC   =C'FSE',ECTPCMD    AM I FSEDIT?
         BE    EXIT020            YES - BRANCH
         DROP  R9
         OI    @FLAG,@BROWSE      SET BROWSE FLAG
EXIT020  EQU   *
         EJECT
*----------------------------------------------------------------------
*        CHECK FOR OPTIONS
*----------------------------------------------------------------------
ENTRY030 DS    0H
         CALLTSSR EP=IKJPARS,MF=(E,@PPL)
         LTR   R15,R15
         BZ    AAA030
         TPUT  ERRPARS,ERRPARSL
         B     ENTRY900
AAA030   EQU   *
         L     R10,@PPLANS        GET POINTER TO PARSE ANSWER
         USING IKJPARMD,R10       GAIN ADDRESSABILITY TO ANSWER
         SPACE
         LA    R15,IDDSN          ADDR OF PDE
         XR    R2,R2              CLEAR REG
         ICM   R2,3,4(R15)        INSERT LENGTH OF DSNAME
         BZ    ZZZ030             GO CHECK NEXT OPT IF LEN=0
         L     R3,0(R15)          ADDR OF PARSE DSNAME
         LA    R4,@DSN
         MVI   0(R4),C' '
         MVC   1(43,R4),0(R4)
         STH   R2,@DSNLEN
         BCTR  R2,0               DECREMENT FOR EXECUTE
         EX    R2,MOVOPT          MOVE IN SPECIFIED OPTION
         SPACE
         LA    R15,8(R15)         ADDR OF PDE+8
         XR    R2,R2              CLEAR REG
         ICM   R2,3,4(R15)        INSERT LENGTH OF MEMBER
         BZ    BBB030             GO CHECK NEXT OPT IF LEN=0
         STH   R2,@MBRLEN
         L     R3,0(R15)          ADDR OF PARSE MEMBER
         LA    R4,@MBR
         MVI   0(R4),C' '
         MVC   1(8,R4),0(R4)
         BCTR  R2,0               DECREMENT FOR EXECUTE
         EX    R2,MOVOPT          MOVE IN SPECIFIED OPTION
BBB030   EQU   *
         LA    R15,SFIDVOL        ADDR OF PDE
         XR    R2,R2              CLEAR REG
         ICM   R2,3,4(R15)        INSERT LENGTH OF VOLSER
         BZ    ZZZ030             GO CHECK NEXT OPT IF LEN=0
         STH   R2,@VOLLEN
         L     R3,0(R15)          ADDR OF PARSE DSNAME
         LA    R4,@VOL
         MVI   0(R4),C' '
         MVC   1(5,R4),0(R4)
         BCTR  R2,0               DECREMENT FOR EXECUTE
         EX    R2,MOVOPT          MOVE IN SPECIFIED OPTION
ZZZ030   EQU   *
         IKJRLSA @PPLANS          FREE PARSE STORAGE
         DROP  R10                DROP ADDRESSABILITY
EXIT030  EQU   *
         B     ENTRY100
         SPACE
MOVOPT   MVC   0(0,R4),0(R3)
         EJECT
*----------------------------------------------------------------------
*        SET UP COMMAND BUFFER
*----------------------------------------------------------------------
ENTRY100 DS    0H
         LA    R4,@CMDTXT         ADDR OF COMMAND TEXT
         TM    @FLAG,@BROWSE
         BO    AAA100
         MVC   0(EDTCMDL,R4),EDTCMD  MOVE IN COMMAND NAME
         LA    R4,EDTCMDL(R4)     BUMP PAST COMMAND NAME
         B     BBB100
AAA100   EQU   *
         MVC   0(BROCMDL,R4),BROCMD  MOVE IN COMMAND NAME
         LA    R4,BROCMDL(R4)     BUMP PAST COMMAND NAME
BBB100   EQU   *
         CLI   @DSN,X'00'
         BE    DDD100
         MVI   0(R4),C' '
         MVI   1(R4),X'7D'
         LA    R4,2(R4)
         LH    R2,@DSNLEN
         BCTR  R2,0
         EX    R2,MOVDSN
         LA    R4,1(R2,R4)
         SPACE
         CLI   @MBR,X'00'
         BE    CCC100
         MVI   0(R4),C'('
         LA    R4,1(R4)
         LH    R2,@MBRLEN
         BCTR  R2,0
         EX    R2,MOVMBR
         LA    R4,1(R2,R4)
         MVI   0(R4),C')'
         LA    R4,1(R4)
CCC100   EQU   *
         MVI   0(R4),X'7D'
         LA    R4,1(R4)
         SPACE
         CLI   @VOL,X'00'
         BE    DDD100
         MVC   0(8,R4),VOLSER
         LA    R4,8(R4)
         LH    R2,@VOLLEN
         BCTR  R2,0
         EX    R2,MOVVOL
         LA    R4,1(R2,R4)
         MVI   0(R4),C')'
         LA    R4,1(R4)
DDD100   EQU   *
         MVI   0(R4),C')'
         LA    R4,1(R4)
         SPACE
ZZZ100   EQU   *
         LA    R3,@CMDBUF         ADDR OF COMMAND BUFFER
         SR    R4,R3              COMPUTE THE COMMAND LENGTH
         STH   R4,@CMDLEN         STORE THE COMMAND LENGTH
         LA    R5,7               LOAD THE OPTIONS OFFSET
         STH   R5,@CMDOFF         STORE THE OPTIONS OFFSET
*        TPUT  @CMDBUF,(R4)
EXIT100  EQU   *
         B     ENTRY800
         SPACE
MOVDSN   MVC   0(0,R4),@DSN
MOVMBR   MVC   0(0,R4),@MBR
MOVVOL   MVC   0(0,R4),@VOL
EDTCMD   DC    C'ISRPCP NEWAPPL(FSE) CMD(SPFEDIT'
EDTCMDL  EQU   *-EDTCMD
BROCMD   DC    C'ISRPCP NEWAPPL(BRO) CMD(SPFBRO'
BROCMDL  EQU   *-BROCMD
VOLSER   DC    C' VOLSER('
         EJECT
*----------------------------------------------------------------------
*        INVOKE ISRPCP
*----------------------------------------------------------------------
ENTRY800 DS    0H
         L     R1,@CPPLPTR        ADDRESS OF CPPL
         LA    R0,@CMDBUF         ADDR OF COMMAND BUFFER
         ST    R0,0(R1)           STORE IT IN THE CPPL
         LINK  EP=ISRPCP
         ST    R15,@RETCODE
EXIT800  EQU   *
         EJECT
*----------------------------------------------------------------------
*        RETURN TO CALLER
*----------------------------------------------------------------------
ENTRY900 DS    0H
         LR    R1,R13                   GET ADDRESS TO FREE
         L     R15,@RETCODE             SAVE THE RETURN CODE
         L     R13,4(,R13)              GET PREVIOUS SAVE AREA
         ST    R15,16(,R13)             STORE THE RETURN CODE
         FREEMAIN RU,A=(1),LV=@DATAL    FREE THE GOTTEN AREA
         RETURN (14,12)                 RETURN TO CALLER
         EJECT
*----------------------------------------------------------------------
*        CONSTANTS
*----------------------------------------------------------------------
TWXMSG   DC    C'*** FSEDIT NOT AVAILABLE AT TWX TERMINAL.'
TWXMSGL  EQU   *-TWXMSG
ERRPARS  DC    C'*** PARSE FAILED.'
ERRPARSL EQU   *-TWXMSG
*----------------------------------------------------------------------
         EJECT
PCLPTR   DC    V(PCL)             ADDRESS OF PARSE PDL/PCL
PCL      IKJPARM
IDDSN    IKJPOSIT DSNAME,USID
KWVOL    IKJKEYWD
         IKJNAME 'VOLSER',SUBFLD=SFVOL
*
SFVOL    IKJSUBF
SFIDVOL  IKJPOSIT DSNAME,VOLSER,PROMPT='VOLUME SERIAL NUMBER'
         IKJENDP
         SPACE
         LTORG
         EJECT
*----------------------------------------------------------------------
*        WORK AREA DSECT AND TSO DSECTS
*----------------------------------------------------------------------
@DATA    DSECT
         DS    18F                REG SAVE AREA
@SAV14   DS    F                  REG 14 SAVE AREA
@RETCODE DS    F
         SPACE
@CPPLPTR DS    F
@ECT     DS    F
         SPACE
@ECB     DS    F
@TCB     DS    F
@PPL     DS    7F                 PARSE PARM LIST
@PPLANS  DS    F                  PARSE ANSWER AREA
         SPACE
@CMDBUF  DS    0F
@CMDLEN  DS    H
@CMDOFF  DS    H
@CMDTXT  DS    CL100
         SPACE
@COMMAND DS    CL8
@DSNLEN  DS    H
@DSN     DS    CL44
@MBRLEN  DS    H
@MBR     DS    CL8
@VOLLEN  DS    H
@VOL     DS    CL6
         SPACE
         DS    0D
@TRTAB   DS    XL256
         SPACE
@FLAG    DS    X
@BROWSE  EQU   X'01'
@SPF     EQU   X'02'
         SPACE
@DATAL   EQU   *-@DATA            SIZE OF WORKAREA
         SPACE
         CVT   DSECT=YES
         SPACE
         IHAASCB
         SPACE
         IKJCPPL
         SPACE
         IKJECT
         SPACE
         IKJPPL
         SPACE
         IKJPSCB
         END
