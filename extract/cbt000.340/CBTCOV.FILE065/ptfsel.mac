PTFS     TITLE 'PTF SELECTION PROGRAM    -  BY LIONEL DYCK '
***********************************************************************
*   PTFSEL                                                            *
*                                                                     *
*       THIS PROGRAM IS DESIGNED TO COPY AND LIST EITHER              *
*       ALL OR SELECTED PTFS FROM A PTF FILE .                        *
*                                                                     *
*       A LISTING OF ALL SELECTED PTF'S COVER LETTERS                 *
*       IS PRODUCED ALONG WITH A RECORD COUNT FOR EACH                *
*       PTF AND A CUMULATIVE PTF AND RECORD COUNT.                    *
*                                                                     *
*       A SUMMARY LISTING IS PRODUCED OF ALL SELECTED PTF'S           *
*       IN A SORTED ORDER WITH A COUNT OF HOW MANY TIMES              *
*       THAT PTF WAS FOUND AND A RECORD COUNT OF THE                  *
*       FIRST OCCURANCE OF THAT PTF, WITH THE PAGE NUMBER             *
*       WHERE THE PTF STARTS.                                         *
*                                                                     *
*       IT WILL SELECT ALL PTFS IF PARM=ALL IS SPECIFIED              *
*       OTHERWISE IT WILL EXPECT TO FIND CONTROL CARDS                *
*       IN THE SYSIN DD FILE WHICH WILL DEFINE THOSE PTFS             *
*       TO BE WORKED UPON.                                            *
*                                                                     *
*       A PARM OF SUMM WILL CAUSE ONLY THE SUMMARY REPORT             *
*       TO BE PRODUCED.                                               *
*                                                                     *
*       THE FORMAT OF THE SYSIN DD CONTROL CARD IS:                   *
*                                                                     *
*       BEGINNING IN COLUMN 1 CODE THE PTF NUMBER FOLLOWED            *
*       BY A COMMA AND THEN THE NEXT THRU THE END OF THE CARD         *
*       OR YOU MAY CODE ONE PTF NUMBER PER CARD OR A VARIABLE         *
*       NUMBER OF PTFS PER CARD SO LONG AS THERE IS A COMMA           *
*       SEPEREATING THE PTF NUMBER AND THE LAST ENTRY ON THE          *
*       CARD HAS NO COMMA AFTER IT.                                   *
*                                                                     *
*       AN * IN COLUMN 1 OF ANY INPUT CARD DENOTES A                  *
*       COMMENT CARD                                                  *
*                                                                     *
*       THE INPUT CARD SCAN BE TERMINATED WITH END AND                *
*       THIS WILL TERMINATE THE READING OF THE                        *
*       SELECTION PTF #'S..                                           *
*       NOTE THAT THIS WILL HELP WITH TSO.....!!                      *
*                                                                     *
*       IF A PTF NUMBER IS FOUND TO BE BLANK THE                      *
*       SCAN OF THAT CARD WILL BE TERMINATED AND                      *
*       AN ERROR MESSAGE WILL BE PRINTED....                          *
*                                                                     *
*                                                                     *
*       IF PTFOUT DD IS MISSING THEN THE COPY WILL BE                 *
*       IGNORED.............!                                         *
*                                                                     *
*       THE JCL TO EXECUTE PTFSEL ARE:                                *
*                                                                     *
*          //PTFSEL   EXEC  PGM=PTFSEL                                *
*          //SYSPRINT  DD SYSOUT=A                                    *
*          //PTFIN     DD DSN=PTF-FILE                                *
*          //PTFOUT    DD DSN=PTF-OUTPUT FILE OR DUMMY                *
*                      (NOTE: A DCB IS REQUIRED FOR THIS FILE         *
*                       IF USED).                                     *
*          //SYSIN     DD *                                           *
*          UZ12345,UZ67890,ETC    CONTROL CARDS                       *
*          END                                                        *
*          /*                                                         *
*                                                                     *
*       THIS PROGRAM WAS WRITTEN BY:                                  *
*                                                                     *
***********************************************************************
*                                                                     *
*       LIONEL B. DYCK                                                *
*       ROCKWELL INTERNATIONAL                                        *
*       INFORMATION SYSTEMS CENTER                                    *
*       2201 SEAL BEACH BLVD.                                         *
*       SEAL BEACH, CALIF. 90740                                      *
*       MAIL CODE 041-SH48                                            *
*       (213) 594-2520                                                *
*                                                                     *
*   NO WARRENTY EXPRESSED OR IMPLIED IS CONNNECTED WITH               *
*   THE USE OF THIS PROGRAM BY ANYONE INCLUDING THE AUTHOR......      *
*                                                                     *
*                                                                     *
***********************************************************************
*        MODIFICATION LEVEL 1.3 - 05/11/79     LIONEL DYCK            *
*        MODIFICATION LEVEL 1.4 - 07/30/81     LIONEL DYCK            *
***********************************************************************
         EJECT
***********************************************************************
         MACRO
&LABEL   PARM
.*       THIS MACRO IS DESIGNED TO MOVE THE PARM INTO A DC DEFINED
.*       WITHIN THE USER PROGRAM BY THE NAME OF PARM
.*       IT WILL MOVE THE EXACT LENGTH OF THE PARM VIA AN EX INSTR.
&LABEL   L     1,0(1)
         LH    2,0(1)
         EX    2,#&SYSNDX
         B     @&SYSNDX
#&SYSNDX MVC   PARM(0),2(1)
@&SYSNDX EQU   *
         MEND
***********************************************************************
         EJECT
PTFSEL   CSECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         EJECT
PTFSEL   CSECT
         PRIME 12,,,,X
         EJECT
         PARM
*-------------------------------------------------------------*
         GETMAIN R,LV=TBLSIZ   GETMAIN SIZE FOR PTF TABLE
*-------------------------------------------------------------*
         ST    R1,PTFTBL       STORE START OF PTF TABLE
         A     R1,=AL4(TBLSIZ)   ADD LENGTH
         LM    R9,R11,PTFTBL   -> TO PTF SELECTION TABLE
         SR    R1,R10          SUB 1 ENTRY
         SR    R1,R10          DO IT 1 MORE TIME
         ST    R1,PTFLAST      AND STORE IT
         LR    R11,R1          PLACE INTO R11
         USING ENT,R9
         EJECT
*        INITIALIZE THE PTF TABLE
CLRLP    MVC   PTF#(4),=4X'FF'
         ZAP   PTFRECS,=P'00'
         NI    PTFSW,X'00'
         BXLE  R9,R10,CLRLP
         LM    R9,R11,PTFTBL   -> TO PTF SELECTION TABLE
         SR    R3,R3         ZERO R3
         EJECT
         OPEN  (SYSPRINT,OUTPUT)
*------------------------------------------------------------------*
*    PROCESS THE PARM AND DETERMINE IF ALL OR INDIVIDUAL SELECTION *
*    IS TO BE PERFORMED.............                               *
*------------------------------------------------------------------*
         CLC   PARM(4),=C'SUMM' SUMMARY REPORT ON LIST ONLY
         BNE   CLCALL          NO
         OI    SW,SUMMLIST     SET SUMM LIST BIT
         B     OPENS           AND DO ALL
CLCALL   CLC   PARM(3),=C'ALL' SELECT ALL ?
         BE    OPENS           YES SO DO NOT SET SWITCH / BYPASS SYSIN
         OI    SW,SELO         TURN ON SELECT OPTION BIT
         OPEN  SYSIN
         PUT   SYSPRINT,TITLE
         SPACE
*------------------------------------------------------------------*
GETA     GET   SYSIN
         LR    R4,R1           -> INPUT RECORD
         MVC   WORKA(80),0(R4) PUT INPUT RECORD INTO WORK
         PUT   SYSPRINT,WORK   PUT INPUT RECORD
         CLI   0(R4),C'*'      COMMENT CARD ?
         BE    GETA            YES - BYPASS IT
MVC      CLC   0(3,R4),=CL3'END'  END FOR TSO AND EASE OF CODING
         BE    SYSINE           FINISH THIS PROCESSING
         CLI   0(R4),C' '      BLANK ENTRY
         BE    BLANKCRD        GO PRINT ERROR MESSAGE
         MVC   PTF#,0(R4)      MOVE PTF# INTO SELECTION TABLE
         ST    R9,LASTENT     SAVE -> LAST ENTRY
         BXLE  R9,R10,CLI      INCRIMENT TABLE -> AND CONT
*------------------------------------------------------------------*
         ABEND 1               PASSED END OF PTF TABLE             *
*------------------------------------------------------------------*
BLANKCRD PUT   SYSPRINT,WORK   PUT INPUT RECORD
         PUT   SYSPRINT,BADCARD  PUT ERROR MESSAGE
         B     GETA            CONTINUE READ
*------------------------------------------------------------------*
CLI      CLI   7(R4),C','      MORE ON CARD ?
         BNE   GETA            NO SO GET THE NEXT CARD
         LA    R4,8(R4)        INCR R4
         B     MVC             GO GET NEXT PTF ON THIS CARD
         SPACE 2
SYSINE   CLOSE (SYSIN)
         EJECT
OPENS    OPEN  (PTFIN,,PTFOUT,OUTPUT)
         LH    R6,=H'01'     INITIALIZE R6
*------------------------------------------------------------------*
READIT   GET   PTFIN                     * READ THE PTF FILE       *
*------------------------------------------------------------------*
         LR    R4,R1         -> INPUT RECORD
         CLC   0(2,R4),=C'++' SMP CONTROL CARD?
         BE    SMPCRD         YES
         TM    SW,PTFO        ARE WE ACCEPTING PTF'S NOW
         BO    READIT         NO
         TM    SW1,JCLINSW    JCLIN PROCESSING ?
         BO    PUTSYS         YES - PRINT IT
         TM    SW,VERO        CONTROL CARD PROCESSING
         BO    VERCD           GO PROCESS VER CARD
         BZ    PUTIT          NO
         SPACE 2
PUTSYS   EQU   *         CODE TO PRINT THE DATA
         TM    SW,SUMMLIST     SUMM LIST ONLY
         BO    PUTIT           YES BY-PASS THE SYSPRINT
         MVC   WORKA(80),0(R4) MOVE TO PRINT WORK AREA
         PUT   SYSPRINT,WORK  PRINT IT
         AP    LCTR,=P'01'    ADD 1 TO LINE COUNTER
         CP    LCTR,LINECNT   LINES YET ON THIS PAGE
         BL    PUTIT          NO OK
         AP    PGCTR,=P'01'   INCR PAGE CTR
         MVC   PAGE#(6),=X'402020202021'
         ED    PAGE#(6),PGCTR  EDIT PAGE NUMBER
         PUT   SYSPRINT,PTFLINE
         PUT   SYSPRINT,BLANKLNE PUT BLANK LINE
         ZAP   LCTR,=P'02'    REINITIALIZE LINE COUNTER
*------------------------------------------------------------------*
PUTIT    EQU   *
         AP    CTR,=P'01'     INCR COUNTER FOR TOTAL RECORDS
         TM    SW,PTFADD      USE REAL COUNTER OR NOT
         BZ    ADDIT          YES
         AP    XCTR,=P'01'    INCR ALT CTR
         B     TMOUT
*------------------------------------------------------------------*
ADDIT    AP    PTFRECS,=P'01' INCR COUNTER FOR PTF RECORDS
*------------------------------------------------------------------*
TMOUT    TM    PTFOUT+X'30',X'10'  DCB OPEN ??
         BZ    READIT         NO - IGNORE PUT
         PUT   PTFOUT,(4)     PUT IT ON OUTPUT
         B     READIT         CONTINUE
         EJECT
*------------------------------------------------------------------*
*      PROCESS THE SMP CONTROL CARD AND DETERMINE IS IT IS         *
*      A  ++VER ++PTF ++IF ++FUNCTION ++APAR ++USERMOD ++JCLIN     *
*      THE SCAN WILL STOP WHEN A ( IS ENCOUNTERED ...              *
*------------------------------------------------------------------*
SMPCRD   LR    R5,R4          -> START OF CARD
         LA    R7,50(R5)      -> LAST COLUMN TO SCAN        *HMD 07/81*
         NI    SW,X'FE'       TURN OFF VER CARD PROCESSING BIT
         NI    SW1,X'80'      TURN OFF ALL CARD PROCESSING BIT
*------------------------------------------------------------------*
LOOP1    CLC   2(3,R5),=C'PTF'   IS IT A PTF CARD
         BE    PTF            YES  -  GO SEE IF WE WANT IT ???
         CLC   2(4,R5),=C'APAR'  IS IT A APAR CARD (SMP 4)
         BE    PTF            YES  -  GO SEE IF WE WANT IT ???
         CLC   2(8,R5),=C'FUNCTION' IS IT A FUNCTION CARD (SMP 4)
         BE    PTF            YES  -  GO SEE IF WE WANT IT ???
         CLC   2(7,R5),=C'USERMOD' IS IT A USERMOD CARD (SMP 4)
         BE    PTF            YES  -  GO SEE IF WE WANT IT ???
         CLC   2(3,R5),=C'VER' IS IT A VER CARD
         BE    VER             YES - WE WANT TO SEE ALL OF IT
         CLC   2(2,R5),=C'IF'  IS IT AN 'IF' CARD??         *HMD 07/81*
         BE    VER             YES - TREAT AS IF VER        *HMD 07/81*
         CLC   2(5,R5),=C'JCLIN' IS IT A VER CARD
         BE    JCLIN           YES - WE WANT TO SEE ALL OF IT
*------------------------------------------------------------------*
         BXLE  R5,R6,LOOP1
*------------------------------------------------------------------*
         TM    SW,PTFO        ARE WE ACCEPTING PTF'S NOW           *
         BO    READIT         NO                                   *
*------------------------------------------------------------------*
         B     SMPC               DEFAULT
*------------------------------------------------------------------*
PSE      EQU   *
         NI    SW1,X'FC'      TURN OFF SMP AND VER BITS
         NI    SW,X'FE'       TURN OFF VER CARD PROCESSING BIT
         B     PUTSYS          GO PRINT AND PUT IT
PS       EQU   *               PRINT IT AND PUT ROUTINE
         TM    SW,PTFO         ARE WE ACCEPTING PTF'S NOW
         BO    READIT          NO
         B     PUTSYS          GO PRINT AND PUT IT
         EJECT
PTF      EQU   *
         NI    SW1,X'7F'       TURN OFF FMIDHAVE BIT
PTFL     CLI   2(R5),C'('      FIND START OF PTF
         BE    PTFX            YES - GO SEE IF WE WANT IT ??
         BXLE  R5,R6,PTFL      CONTINUE TILL WE FIND IT
         B     PS              GIVE UP AND PRINT AND PUT IT
*------------------------------------------------------------------*
PTFX     EQU   *
         TM    SW,PTFO         SELECTION IN PROGRESS ?
         BO    NI
*------------------------------------------------------------------*
         TM    SW,FIRST        FIRST PASS ?
         BZ    NI              YES BYPASS PTF COUNT
*------------------------------------------------------------------*
         TM    SW,SUMMLIST
         BO    NI
         MVC   XCOUNT(6),PTFCNT MOVE EDIT PATTERN
         TM    SW,PTFADD       REGULAR OR ALTERNATE COUNTER
         BZ    EDRECS          REGULAR OK
         ED    XCOUNT,XCTR     EDIT ALT PTF RECORD COUNTER
         B     PUTCNT
*------------------------------------------------------------------*
EDRECS   ED    XCOUNT,PTFRECS  EDIT PTF RECORD COUNT
*------------------------------------------------------------------*
PUTCNT   PUT   SYSPRINT,CNTLINE AND PUT IT ON SYSPRINT
*------------------------------------------------------------------*
NI       NI    SW,X'FB'        TURN OFF THE PTF NO ACCEPT BIT
         NI    SW,X'DF'        TURN OFF ALT COUNT USE BIT
         OI    SW,FIRST        TURN ON FIRST PASS
         LM    R9,R11,PTFTBL   -> TO PTF SELECTION TABLE
*------------------------------------------------------------------*
PTFSLP   CLC   3(7,R5),PTF#    PTF # IN TABLE
         BE    OK              YES - WE DO WANT IT
         CLC   ENTB(4),=4X'FF'  END OF TABLE
         BE    NOTFND          NOT IN TABLE - IGNORE IT
         BXLE  R9,R10,PTFSLP   CONTINUE TILL FOUND
*------------------------------------------------------------------*
NOTFND   TM    SW,SELO         SELECTION ON ??
         BZ    OK              NO DO ALL
         OI    SW,PTFO         TURN ON NON-SELECTION BIT
         B     READIT          AND CONTINUE
*------------------------------------------------------------------*
OK       EQU   *               WE ARE ACCEPTING THIS PTF
         CLC   PTF#,3(R5)      PTF #'S = ??
         BE    ZAP             YES
         CLI   PTF#,X'FF'   NULL ENTRY ?
         BE    PTFMV
         BXLE  R9,R10,MVCPTF
*------------------------------------------------------------------*
MVCPTF   CLC   PTF#,3(R5)      PTF#'S = ?
         BE    ZAP             YES
         CLI   PTF#,X'FF'   NULL ENTRY ?
         BE    PTFMV
         BXLE  R9,R10,MVCPTF   CONTINUE SCAN
*------------------------------------------------------------------*
PTFMV    MVC   PTF#,3(R5)      MOVE PTF # INTO TABLE
         ST    R9,LASTENT      SAVE -> LAST ENTRY
*------------------------------------------------------------------*
ZAP      EQU   *
*------------------------------------------------------------------*
ICPTFSW  IC    R3,PTFSW
         AH    R3,=H'01'       INCR PTFSW BY 1
         STC   R3,PTFSW        AND SAVE IT
         CLI   PTFSW,X'01'     ONE COUNT ?
         BNH   READ
         OI    SW,PTFADD       SET TO USE ALT COUNTER
         B     ZAPX
*------------------------------------------------------------------*
ZAPX     ZAP   XCTR,=P'00'     INIT ALT COUNTER
         B     UPPTF
*------------------------------------------------------------------*
READ     ZAP   PTFRECS,=P'00'  INITITALIZE PTF RECORD COUNT
*------------------------------------------------------------------*
UPPTF    EQU   *               UPDATE PTF PAGE COUNTER
         AP    PCTR,=P'01'     INCRIMENT PTF COUNTER
         TM    SW,SUMMLIST     SUMM LIST ON SYSPRINT ONLY
         BO    PS              YES - BY-PASS THE HEADER
         MVC   PTFLINE#,3(R5)  MOVE PTF# TO HEADER LINE
         AP    PGCTR,=P'01'    INCR PAGE COUNTER
         TM    SW,PTFADD       ALT OR REGULAR COUNT ?
         BZ    PGMVC           REGULAR SO MOVE IT
         B     EDPAGE          ALT SO - GO EDIT IT
*------------------------------------------------------------------*
PGMVC    MVC   PTFPAGE,PGCTR   PLACE INTO ENTRY
*------------------------------------------------------------------*
EDPAGE   MVC   PAGE#(6),=X'402020202021'
         ED    PAGE#(6),PGCTR  EDIT PAGE NUMBER
         PUT   SYSPRINT,PTFLINE  AND PRINT IT
         PUT   SYSPRINT,BLANKLNE PUT BLANK LINE
         ZAP   LCTR,=P'02'    REINITIALIZE LINE COUNTER
         B     PS              NOW GO PRINT RECORD AND COPY IT
         SPACE 2
*------------------------------------------------------------------*
VER      EQU   *               VERIFY CARD PROCESSING              *
*------------------------------------------------------------------*
         TM    SW,PTFO        ARE WE ACCEPTING PTF'S NOW           *
         BO    READIT         NO                                   *
*------------------------------------------------------------------*
         OI    SW,VERO         TURN ON VERIFY CARD PROCESSING      *
         B     VERFM                                               *
*------------------------------------------------------------------*
VERCD    EQU   *
         LR    R5,R4           GO FIND FMID
         TM    SW1,SLASH          * FIND END SLASH ?
         BO    FINDBSLS           YES
         TM    SW1,FMIDHAVE       IF ?
         BO    SMPC               * TREAT AS OTHER
         TM    SW1,VERSW          * TRUE VER CARD
         BO    VERFM              YES
         TM    SW1,SMPSW          OTHER ?
         BO    SMPCD              * GO PROCESS AS IF
*------------------------------------------------------------------*
VERFM    LR    R5,R4           GO FIND FMID
         LA    R7,60(R5)      -> LAST COLUMN TO SCAN
*------------------------------------------------------------------*
VLP      EQU   *
         CLC   0(4,R5),=C'FMID'
         BE    FMID
         CLC   0(2,R5),=C'/*'
         BE    BSLASH             YES - GO FIND END SLASH
         CLI   0(R5),C'.'
         BE    PSE
         BXLE  R5,R6,VLP
         B     PS              AND GO PRINT AND PUT IT
*------------------------------------------------------------------*
JCLIN    EQU   *
*------------------------------------------------------------------*
         TM    SW,PTFO        ARE WE ACCEPTING PTF'S NOW           *
         BO    READIT         NO                                   *
*------------------------------------------------------------------*
         OI    SW1,JCLINSW      TURN ON VERIFY CARD PROCESSING
         B     PUTSYS           AND GO PRINT AND PUT IT
*------------------------------------------------------------------*
SMPC     EQU   *                  * IF PROCESSING
         OI    SW,VERO         TURN ON VERIFY CARD PROCESSING
         OI    SW1,SMPSW        TURN ON VERIFY CARD PROCESSING
*------------------------------------------------------------------*
SMPCD    EQU   *               GO FIND FMID
         TM    SW1,SLASH          * FIND END SLASH ?
         BO    FINDBSLS           YES
         LR    R5,R4           GO FIND FMID
         LA    R7,70(R5)      -> LAST COLUMN TO SCAN
*------------------------------------------------------------------*
SMPCL    EQU   *
         CLC   0(2,R5),=C'/*'
         BE    BSLASH             YES - GO FIND END SLASH
         CLI   0(R5),C'.'
         BE    PSE
         BXLE  R5,R6,SMPCL
         B     PS    GIVE UP ***
*------------------------------------------------------------------*
BSLASH   OI    SW1,SLASH              * SET SWITCH FOR BACK SLASH
*------------------------------------------------------------------*
FINDBSLS EQU   *
         CLC   0(2,R5),=C'*/'
         BE    FINDPERD           END OF CARD
         BXLE  R5,R6,FINDBSLS
         B     PS    GIVE UP ***
*------------------------------------------------------------------*
FINDPERD EQU   *
         CLI   0(R5),C'.'
         NI    SW1,X'FB'          TURN OFF SLASH BIT
         BE    PSE                END OF CARD
         BXLE  R5,R6,FINDPERD
         B     PS    GIVE UP ***
*------------------------------------------------------------------*
FMID     EQU   *
*------------------------------------------------------------------*
FMIDL    CLI   4(R5),C'('      FIND FMID
         BE    FMIDFD
         CLC   0(2,R5),=C'/*'
         BE    BSLASH             YES - GO FIND END SLASH
         CLI   0(R5),C'.'
         BE    PSE
         BXLE  R5,R6,FMIDL
         B     PS    GIVE UP ***
*------------------------------------------------------------------*
FMIDFD   EQU   *
         MVC   PTFFMID,5(R5)   MOVE FMID TO TABLE
         OI    SW1,FMIDHAVE       * SET FMID FOUND 1 PER PTF
         B     PS                  AND PRINT IT
*------------------------------------------------------------------*
         EJECT
PTFEND   EQU   *               END OF PTF PROCESSING
         MVC   PTFLAST,LASTENT   -> LAST ENTRY
         TM    SW,PTFO         SELECTION IN PROGRESS ?
         BO    ECNT
         TM    SW,SUMMLIST     SUMM LIST ON SYSPRINT ONLY
         BO    ECNT            YES - BY-PASS THE LAST PTF COUNT
         MVC   XCOUNT(6),PTFCNT MOVE EDIT PATTERN
         ED    XCOUNT,PTFRECS  EDIT PTF RECORD COUNT
         PUT   SYSPRINT,CNTLINE AND PUT IT ON SYSPRINT
*------------------------------------------------------------------*
ECNT     ED    COUNT,CTR       RECORD COUNTER
         ED    PTFCNT,PCTR     PTF COUNTER
*------------------------------------------------------------------*
         PUT   SYSPRINT,ENDLINE
         EJECT
*****************************************************************
*                                                               *
*        SORT THE PTF ENTRIES IN THE TABLE                      *
*        INTO ASCENDING ORDER                                   *
*                                                               *
*****************************************************************
         SPACE 2
         XC    SW,SW              CLEAR SWITCH
SORTPTFS LM    R9,R11,PTFTBL        -> PTF TABLE
         NI    SW,X'EF'             TURN OFF THE SORT BIT
*------------------------------------------------------------------*
SORTLP   CLI   ENTB,X'FF'           NULL ENTRY
         BE    SORTEND              YES  -  END THIS SORT PASS
         CLC   PTF#,ENTB            COMPARE THIS AND NEXT ENTRY
         BNH   SORTBXLE             LESS OR EQUAL TO - OK
*------------------------------------------------------------------*
         MVC   ENTSAVE,ENTA         SAVE THIS ENTRY
         MVC   ENTA,ENTB            REPLACE IT WITH NEXT
         MVC   ENTB,ENTSAVE         REPLACE NEXT WITH THIS
         OI    SW,SORT              TURN ON SORT SWITCH
*------------------------------------------------------------------*
SORTBXLE BXLE  R9,R10,SORTLP        AND CONTINUE THE SORT
*------------------------------------------------------------------*
         SPACE 2
SORTEND  EQU   *
         TM    SW,SORT              SORT BIT ON ?
         BZ    ENDSORT              YES - LEAVE THIS MESS
         B     SORTPTFS             TRY ANOTHER PASS
*------------------------------------------------------------------*
ENDSORT  B     LPRINT               EXIT THE SORT HERE
*------------------------------------------------------------------*
         EJECT
*****************************************************************
*                                                               *
*        SORT THE PTF ENTRIES IN THE TABLE                      *
*        INTO FMID ORDER                                        *
*                                                               *
*****************************************************************
         SPACE 2
$ORTFMID LM    R9,R11,PTFTBL        -> PTF TABLE
         OI    SW,$ORT              TURN ON FMID SORT BIT
         NI    SW,X'EF'             TURN OFF THE SORT BIT
*------------------------------------------------------------------*
$ORTLP   CLI   ENTB,X'FF'           NULL ENTRY
         BE    $ORTEND              YES  -  END THIS SORT PASS
         CLC   PTFFMID,$TFFMID      COMPARE THIS AND NEXT ENTRY
         BNH   $ORTBXLE             LESS OR EQUAL TO - OK
*------------------------------------------------------------------*
         MVC   ENTSAVE,ENTA         SAVE THIS ENTRY
         MVC   ENTA,ENTB            REPLACE IT WITH NEXT
         MVC   ENTB,ENTSAVE         REPLACE NEXT WITH THIS
         OI    SW,SORT              TURN ON SORT SWITCH
*------------------------------------------------------------------*
$ORTBXLE BXLE  R9,R10,$ORTLP        AND CONTINUE THE SORT
*------------------------------------------------------------------*
         SPACE 2
$ORTEND  EQU   *
         TM    SW,SORT              SORT BIT ON ?
         BZ    END$ORT              YES - LEAVE THIS MESS
         B     $ORTFMID             TRY ANOTHER PASS
*------------------------------------------------------------------*
END$ORT  EQU   *                    EXIT THE SORT HERE
*------------------------------------------------------------------*
         EJECT
LPRINT   LM    R9,R11,PTFTBL   LOAD PTF TABLE ->'S
         SR    R3,R3
*------------------------------------------------------------------*
EHEAD    PUT   SYSPRINT,HEAD
         PUT   SYSPRINT,BLANKLNE
*------------------------------------------------------------------*
         ZAP   LCTR,=P'02'    REINITIALIZE LINE COUNTER
ELOOP    EQU   *
*------------------------------------------------------------------*
         CLI   PTF#,X'FF'
         BE    ENDIT
*------------------------------------------------------------------*
         MVC   OPTF,PTF#
         MVC   OPFMID,PTFFMID
         MVC   OPTFR(6),=X'402020202021'
         MVC   OPAGE(6),=X'402020202021'
         ED    OPTFR(6),PTFRECS
         ED    OPAGE(6),PTFPAGE
*------------------------------------------------------------------*
         MVI   OPTFSW,C'*'
         MVC   COMM(9),=C'NOT FOUND'
         SLR   R3,R3                                        *HMD 07/81*
         IC    R3,PTFSW
         LTR   R3,R3
         BZ    PUTE
*------------------------------------------------------------------*
         MVC   COMM(9),=CL9' '
         CVD   R3,DOUBLEWK               CONVERT PTF COUNT  *HMD 07/81*
         MVC   WORDWK(4),=X'40202120'    MOVE EDIT PATTERN  *HMD 07/81*
         ED    WORDWK(4),DOUBLEWK+6      UNPACK THE VALUE   *HMD 07/81*
         MVC   OPTFSW(3),WORDWK+1        MOVE IN THE COUNT  *HMD 07/81*
*------------------------------------------------------------------*
PUTE     PUT   SYSPRINT,ELINE
         MVC   OPFMID,=CL7' '
         MVC   COMM(9),=CL9' '
         AP    LCTR,=P'01'
         CP    LCTR,LINECNT
         BH    EHEAD
*------------------------------------------------------------------*
BXLE     BXLE  R9,R10,ELOOP
*------------------------------------------------------------------*
ENDIT    TM    SW,$ORT
         BZ    $ORTFMID
         CLOSE (SYSPRINT,,PTFIN,,PTFOUT)
*------------------------------------------------------------------*
         TERME    ,
         EJECT
         LTORG
         EJECT
         DS    0D
DOUBLEWK DC    D'0'            DOUBLE WORD WORK AREA        *HMD 07/81*
PGCTR    DC    PL3'0'          PAGE COUNTER
PARM     DC    CL5' '          PARM
WORK     DC    C' '            CC FOR PTF
WORKA    DC    CL80' '         WORK AREA FOR PTF RECORD FOR PRINT
*                                                           *HMD 07/81*
         SPACE
LASTENT  DS    F               -> LAST PTF ENTRY
SW1      DC    X'00'           SWITCH FOR VER PROCESSING
VERSW    EQU   1                  VER CARD
SMPSW    EQU   2                  IF CARD
SLASH    EQU   4                  /* FOUND
JCLINSW  EQU   8                  JCLIN SWITCH
FMIDHAVE EQU   128                FMID FOUND FOR THIS PTF
*
SW       DC    X'00'           SWITCH FOR PROCESSING
VERO     EQU   1               VERIFY CARD PROCESSING
SELO     EQU   2               PTF SELECTION OPTION
*                              0 = SELECT   1 = ALL
PTFO     EQU   4               ACCEPT PTF OPTION
*                              0 = YES THIS PTF IS ACCEPTED
*                              1 = SKIP TILL FIND NEXT PTF
FIRST    EQU   8               0 = FIRST  1 = NOT FIRST
SORT     EQU   16              0 = CLEAN SORT PASS  1 = DID SORT
PTFADD   EQU   32              0 = USE NORMAL CTR   1 = USE ALTERNATE
SUMMLIST EQU   64              SUMM LISTING ONLY IF 1
$ORT     EQU   128             0 = CLEAN SORT PASS  1 = DID SORT
         SPACE
ENTSAVE  DS    CL21            SAVE FOR SORT
CTR      DC    PL4'00'         COUNTER FOR RECORDS PRODUCED ON OP
PCTR     DC    PL3'00'         PTF COUNTER
LCTR     DC    PL3'0'          LINE COUNTER
WORDWK   DC    XL4'00'         WORK AREA FOR EDIT           *HMD 07/81*
LINECNT  DC    PL2'58'                   * LINES PER PAGE   *HMD 07/81*
XCTR     DC    PL3'0'          ALT COUNTER
SFMID    DC    CL7' '          FMID SAVE AREA
BLANKLNE DC    CL80' '          BLANK LINE
PTFLINE  DC    C'1',CL20' '
         DC    C'PTF '
PTFLINE# DC    CL7' '
         DC    C' CONTROL INFORMATION',CL10' ',C'PAGE ='
PAGE#    DC    CL6' ',CL30' '
ENDLINE  DC    C'1',CL2' '
         DC    C'PTF SELECTION  RECORDS PROCESSED'
         DC    C' = '
COUNT    DC    X'4020202020202021',CL3' ',C'PTFS = '
PTFCNT   DC    X'402020202021',CL40' '
CNTLINE  DC    C'0'
XCOUNT   DC    CL6' ',C' RECORDS PROCESSED FOR THIS PTF',CL50' '
TITLE    DC    CL80'1    PTF SELECTION RECORDS '
HEAD     DC    CL5'1'
         DC    CL7'  PTF#',CL3' ',C'FOUND',CL2' ',CL7'RECORDS',CL4' '
         DC    C'   FMID ',CL4' '
         DC    C'PAGE #',CL28' '
ELINE    DC    CL5' '
OPTF     DC    CL7' '
         DC    CL5' '
OPTFSW   DC    CL1' '
         DC    CL5' '
OPTFR    DC    CL6' '
         DC    CL4' '
OPFMID   DC    CL7' '
         DC    CL4' '
OPAGE    DC    CL6' '
         DC    CL5' '
COMM     DC    CL9' '
         DC    CL50' '
BADCARD  DC    CL80'***** THIS CARD CONTAINS A BLANK PTF NUMBER *****'
*                                                           *HMD 07/81*
         EJECT
SYSPRINT DCB   DSORG=PS,MACRF=PM,DDNAME=SYSPRINT,LRECL=80,BLKSIZE=6160,X
               RECFM=FBA,BUFNO=5
         EJECT
SYSIN    DCB   DSORG=PS,MACRF=GL,DDNAME=SYSIN,EODAD=SYSINE
         EJECT
PTFIN    DCB   DSORG=PS,MACRF=GL,DDNAME=PTFIN,EODAD=PTFEND
         EJECT
PTFOUT   DCB   DSORG=PS,MACRF=PM,DDNAME=PTFOUT,LRECL=80,RECFM=FB
         EJECT
PTFTBL   DC    A(0)          FIRST ENTRY IN PTFTBL
         DC    A(21)         LENGTH OF PTF TABLE ENTRY
PTFLAST  DC    A(0)          END OF TABLE
         SPACE 2
TBLDSEC  DSECT                                              *HMD 07/81*
TBL      DS   9000CL21       9000 21 BYTE ENTRIES FOR PTFS  *HMD 07/81*
TBLSIZ   EQU  *-TBL          LENGTH OF TABLE
         EJECT
ENT      DSECT
ENTA     DS    CL21          ENTRY FOR PTF
         ORG   ENTA
PTF#     DS    CL7           PTF NUMBER
PTFSW    DS    CL1           PTF FOUND COUNT
PTFRECS  DS    CL3           PTF RECORD COUNT - FOR FIRST OCCURANCE
PTFPAGE  DS    CL3           PTF PAGE NUMBER  - FOR FIRST OCCURANCE
PTFFMID  DS    CL7           PTF FMID
ENTLNGH  EQU   *-PTF#        LENGTH OF 1 PTF ENTRY
ENTB     DS    CL21          ENTRY FOR NEXT PTF
         ORG   ENTB
$TF#     DS    CL7           PTF NUMBER
$TFSW    DS    CL1           PTF FOUND COUNT
$TFRECS  DS    CL3           PTF RECORD COUNT - FOR FIRST OCCURANCE
$TFPAGE  DS    CL3           PTF PAGE NUMBER  - FOR FIRST OCCURANCE
$TFFMID  DS    CL7           PTF FMID
ENTL2    EQU   *-PTF#        LENGTH OF 2 ENTRIES
         END
