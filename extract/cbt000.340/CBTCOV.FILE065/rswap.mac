RSW      TITLE 'ROCKWELL SWAP ANALYSIS COMMAND'
         MACRO
&LABEL   @M1   &FIELDB,&FIELDA
         MVC   &FIELDB.(8),=X'4020202020202020'  MOVE EDIT PATTERN
         L     R11,&FIELDA                   LOAD FIELD TO BE CONVERTED
         CVD   R11,DWK                       CONVERT TO DECIMAL
         ED    &FIELDB.(8),DWK+4           AND EDIT IT INTO WTO
         OI    &FIELDB+7,X'F0'        INSURE NUMERIC
         L     R10,&FIELDB.O      LOAD OLD VALUE
         ST    R11,&FIELDB.O      SAVE VALUE FOR NEXT CALC
         SR    R11,R10            SUB FOR DELTA
         CVD   R11,DWK                       CONVERT TO DECIMAL
         MVC   &FIELDB.D(8),=X'4020202020202020'  MOVE EDIT PATTERN
         ED    &FIELDB.D(8),DWK+4         AND EDIT IT INTO WTO
         OI    &FIELDB.D+7,X'F0'      INSURE NUMERIC
         SPACE
         MEND
         EJECT
         MACRO
&LABEL   @B    &FIELDB,&FIELDA
         MVC   &FIELDB,=X'40202020'   MOVE EDIT PATTERN
         SR    R11,R11                ZERO FIELD FOR INSERT
         IC    R11,&FIELDA            LOAD FIELD TO BE CONVERTED
         CVD   R11,DWK                CONVERT TO DECIMAL
         ED    &FIELDB,DWK+6          AND EDIT IT INTO WTO
         OI    &FIELDB+3,X'F0'        INSURE NUMERIC
         SPACE
         MEND
         EJECT
         MACRO
&LABEL   @M    &FIELDB,&FIELDA
         MVC   &FIELDB,=X'40202020'   MOVE EDIT PATTERN
         LH    R11,&FIELDA            LOAD FIELD TO BE CONVERTED
         CVD   R11,DWK                CONVERT TO DECIMAL
         ED    &FIELDB,DWK+6          AND EDIT IT INTO WTO
         OI    &FIELDB+3,X'F0'        INSURE NUMERIC
         SPACE
         MEND
         EJECT
         MACRO
&LABEL   @TPUT &LEN
         XC    TSOECB,TSOECB                                *HMD 04/82*
&LABEL   PUTLINE PARM=PTPB,OUTPUT=(&LEN,TERM,SINGLE,DATA),MF=(E,IOPL)
         TM    REPORT+X'30',X'10'  DCB OPEN ?
         BZ    $&SYSNDX           NO
         PUT   REPORT,&LEN
$&SYSNDX EQU *
         SPACE
         MEND
         EJECT
RSWAP    TSOENTER  REGS=YES,PL=(CPPL,IO),BASE=12
         LA    R9,4095(R12)       ESTABLISH SECOND BASE     *HMD 04/82*
         LA    R9,1(R9)           GO ALL THE WAY            *HMD 04/82*
         LUSE  RSWAP+4096,R9      ESTABLISH BASE            *HMD 04/82*
         INUSE ,                                            *HMD 04/82*
START    CALL  CLR3270                                      *HMD 04/82*
         EJECT
         USING CVTMAP,R1
         LA   R1,CVTPTR           -> CVT POINTER
         L    R1,0(R1)            -> CVT
         L    R2,CVTOPCTP         -> RMCT
         USING RMCT,R2
         L     R5,RMCTRCT          -> RCT
         USING RCT,R5
         L    R3,RMCTCCT          -> CCT
         USING CCT,R3
         L    R4,RMCTRMCA         -> RMCA
         USING RMCA,R4
         SPACE
         USING PVT,R8
         L    R8,CVTPVTP         -> PVT
         @M   CPU,CCVUTILP        CPU UTILIZATION
         @M   PFR,RCVPTR          PAGE FAULT RATE
         @M   ASMQ,RCVASMQA      ASM Q
         @M   UIC,RCVUICA        UNREFERENCED INTERVAL COUNT
         @M   AFC,PVTAFC          AVAIL FRAME COUNT
         @M1  TO,RMCATOSC    RMCATOSC      TERMINAL OUTPUT WAITS
         @M1  TI,RMCATISC    RMCATISC      TERMINAL INPUT WAITS
         @M1  LW,RMCALWSC    RMCALWSC      LONG WAIT SWAPS
         @M1  AUX,RMCAXSSC   RMCAXSSC      AUX STORAGE SHORTAGE
         @M1  REAL,RMCARSSC  RMCARSSC      REAL STORAGE SHORTAGE
         @M1  DET,RMCADWSC   RMCADWSC      DETECTED WAIT
         @M1  REQ,RMCARQSC   RMCARQSC      REQUESTED SWAP
         @M1  NQ,RMCANQSC    RMCANQSC      ENQ EXCHANGE SWAP
         @M1  EX,RMCAEXSC    RMCAEXSC      REQUESTED EXCHANGE SWAP
         @M1  UNI,RMCAUSSC   RMCAUSSC      UNILATERAL SWAP
         @M1  TSS,RMCATSSC   RMCATSSC      TRANSITION SWAP
         @M1  LSS,RMCALSSC   RMCALSSC      LOGIGAL SWAP
         @M1  LFS,RMCALFSC   RMCALFSC      LOGICAL SWAP FAILED
         EJECT
*
         TIME
         MVC  TIME(9),=X'4020217A20207A2020'
         ST   R0,DWK              STORE TIME
         ED   TIME(9),DWK         AND EDIT IT
         TM    REPORT+X'30',X'10' DCB OPEN
         BZ    TPUTS              NO
         PUT   REPORT,SKIP
TPUTS    @TPUT TITLE
         @TPUT DASH
         SPACE
         @TPUT CPUDATAD
         SPACE
         @TPUT DASH
         @TPUT TOL
         @TPUT TIL
         @TPUT DETL
         @TPUT LWL
         @TPUT UNIL
         @TPUT NQL
         @TPUT EXL
         @TPUT REQL
         @TPUT AUXL
         @TPUT REALL
         @TPUT TSSL
         @TPUT LSSL
         @TPUT LFSL
         @TPUT DASH
         EJECT
         XC    TSOECB,TSOECB       CLEAR ECB                *HMD 08/81*
         MVI   REPLY,C' '          CLEAR REPLY AREA         *HMD 04/82*
         GETLINE PARM=GTPB,TERMGET=(EDIT,WAIT),             *HMD 08/81*X
               MF=(E,IOPL)                                  *HMD 08/81*
         LTR   R15,R15            CHECK FOR ZERO CODE       *HMD 08/81*
         BNE   EXIT               ERROR, RETURN TO CALLER   *HMD 08/81*
         L     R1,GTPB+4          GET ADDRESS OF LINE       *HMD 08/81*
         LH    R10,0(R1)          GET LENGTH OF LINE        *HMD 08/81*
         CH    R10,=H'4'          ZERO LENGTH LINE?         *HMD 08/81*
         BE    GOFREE             YES, GO FREE BUFFER       *HMD 08/81*
         MVC   REPLY(1),4(R1)     RETURN CHAR               *HMD 08/81*
GOFREE   FREEMAIN R,LV=(10),A=(1),SP=1  FREE STORAGE        *HMD 08/81*
         TCLEARQ INPUT                                      *HMD 08/81*
         OI    REPLY,X'40'
         CLI   REPLY,C'O'         OPEN REPORT ?
         BE    OPENR              YES
         CLI   REPLY,C'C'         CLOSE REPORT
         BE    CLOSER
         CLI   REPLY,C'Z'         END ?
         BE    EXIT
         CLI   REPLY,C'M'         MENU
         BE    EXIT               YES
         CLI   REPLY,C'E'         END                       *HMD 04/82*
         BE    EXIT                                         *HMD 04/82*
         CLI   REPLY,C'0'         UPPER 0
         BL    START
         CLI   REPLY,C'9'         UPPER 9
         BH    START
EXIT     TM    REPORT+X'30',X'10' REPORT OPEN?              *HMD 04/82*
         BZ    EXIT1                                        *HMD 04/82*
         CLOSE (REPORT)
EXIT1    L     R1,4(,R13)         GET PREVIOUS SA           *HMD 04/82*
         MVC   56(1,R1),REPLY     MOVE IN REPLY CHAR        *HMD 04/82*
         TSOLEAVE ISN=LTORG       RETURN TO CALLER          *HMD 04/82*
         EJECT
OPENR    OPEN  (REPORT,OUTPUT)
         B     START
CLOSER   CLOSE (REPORT)
         B     START
         LTORG
         EJECT
DWK      DC   D'0'
PTPB     PUTLINE MF=L                                       *HMD 04/82*
GTPB     GETLINE MF=L                                       *HMD 04/82*
         SPACE 2
SKIP     DC   AL2(SKIPE-SKIP),AL2(0)
         DC   C'1'                SKIP TO CH 1
BLANKS   DC   CL30' '
SKIPE    EQU   *
         DC   CL50' '
         SPACE 2
         DS   0F
REPLY    DC    C' '
         SPACE 2
         DS   0F
TITLE    DC   AL2(TITLEE-TITLE),AL2(0)
         DC    CL5' '
         DC   C' ROCKWELL SWAP ANALYSIS DISPLAY '
TIME     DC   CL10' '
TITLEE   EQU  *
         DC    CL20' '
         DS   0F
DASH     DC    AL2(DASHE-DASH),AL2(0)
         DC    C' '
         DC    60C'-'
DASHE    EQU   *
         DS   0F
SPACE    DC   AL2(80),AL2(0)
         DC   CL80' '
         SPACE
         DS    0F
CPUDATAD DC    AL2(CPUDATDE-CPUDATAD),AL2(0)
         DC    C'  CPU='
CPU      DS    CL4
         DC    C'  PFR='
PFR      DS    CL4
         DC    C'  ASMQ='
ASMQ     DS    CL4
         DC    C'  UIC='
UIC      DS    CL4
         DC    C'  AFC='
AFC      DS    CL4
         DC    CL2' '
CPUDATDE EQU   *
         DC    CL20' '
         EJECT
         DS   0F
TOL      DC   AL2(TOE-TOL),AL2(0)
         DC   CL30' TERMINAL OUTPUT SWAPS'
TO       DS   CL8                 TERMINAL OUTPUT SWAPS
         DC    CL4' '
TOD      DS   CL8                 TERMINAL OUTPUT SWAPS
TOE      EQU  *
         DC    CL10' '
TOO      DC    F'0'
         SPACE
         DS   0F
TIL      DC   AL2(TIE-TIL),AL2(0)
         DC   CL30' TERMINAL INPUT SWAPS'
TI       DS   CL8                 TERMINAL INPUT SWAPS
         DC    CL4' '
TID      DS   CL8                 TERMINAL INPUT SWAPS
TIE      EQU  *
         DC    CL10' '
TIO      DC    F'0'
         SPACE
         DS   0F
LWL      DC   AL2(LWE-LWL),AL2(0)
         DC   CL30' LONG WAIT SWAPS'
LW       DS   CL8                 LONG WAIT SWAPS
         DC    CL4' '
LWD      DS   CL8                 LONG WAIT SWAPS
LWE      EQU  *
         DC    CL10' '
LWO      DC    F'0'
         SPACE
         DS   0F
AUXL     DC   AL2(AUXE-AUXL),AL2(0)
         DC   CL30' AUX STOR SHORT SWAPS'
AUX      DS   CL8                 AUX STORAGE SHORTAGE
         DC    CL4' '
AUXD     DS   CL8                 AUX STORAGE SHORTAGE
AUXE     EQU  *
         DC    CL10' '
AUXO     DC    F'0'
         SPACE
         DS   0F
REALL    DC   AL2(REALE-REALL),AL2(0)
         DC   CL30' REAL STOR SHORT SWAPS'
REAL     DS   CL8                 REAL STORAGE SHORTAGE
         DC    CL4' '
REALD    DS   CL8                 REAL STORAGE SHORTAGE
REALE    EQU  *
         DC    CL10' '
REALO    DC    F'0'
         SPACE
         DS   0F
DETL     DC   AL2(DETE-DETL),AL2(0)
         DC   CL30' DETECTED WAIT SWAPS'
DET      DS   CL8                 DETECTED WAIT
         DC    CL4' '
DETD     DS   CL8                 DETECTED WAIT
DETE     EQU  *
         DC    CL10' '
DETO     DC    F'0'
         SPACE
         DS   0F
REQL     DC   AL2(REQE-REQL),AL2(0)
         DC   CL30' REQUESTED SWAPS'
REQ      DS   CL8                 REQUESTED SWAP
         DC    CL4' '
REQD     DS   CL8                 REQUESTED SWAP
REQE     EQU  *
         DC    CL10' '
REQO     DC    F'0'
         SPACE
         DS   0F
NQL      DC   AL2(NQE-NQL),AL2(0)
         DC   CL30' ENQ EXCHANGE SWAPS'
NQ       DS   CL8                 ENQ EXCHANGE SWAP
         DC    CL4' '
NQD      DS   CL8                 ENQ EXCHANGE SWAP
NQE      EQU  *
         DC    CL10' '
NQO      DC    F'0'
         SPACE
         DS   0F
EXL      DC   AL2(EXE-EXL),AL2(0)
         DC   CL30' REQ EXCHANGE SWAPS'
EX       DS   CL8                 REQUESTED EXCHANGE SWAP
         DC   CL4' '
EXD      DS   CL8                 REQUESTED EXCHANGE SWAP
EXE      EQU  *
         DC    CL10' '
EXO      DC   F'0'                REQUESTED EXCHANGE SWAP
         SPACE
         DS   0F
UNIL     DC   AL2(UNIE-UNIL),AL2(0)
         DC   CL30' UNILATERAL SWAPS'
UNI      DS   CL8                 UNILATERAL SWAP
         DC   CL4' '
UNID     DS   CL8                 UNILATERAL SWAP - DELTA
UNIE     EQU  *
         DC    CL10' '
UNIO     DC   F'0'                UNILATERAL SWAP - OLD VALUE
         SPACE
         DS   0F
TSSL     DC   AL2(TSSE-TSSL),AL2(0)
         DC   CL30' TRANSITION SWAPS'
TSS      DS   CL8                 TRANSITION SWAP
         DC   CL4' '
TSSD     DS   CL8                 TRANSITION SWAP DELTA
TSSE     EQU  *
         DC    CL10' '
TSSO     DC   F'0'                TRANSITION SWAP - OLD VALUE
         SPACE
         DS   0F
LSSL     DC   AL2(LSSE-LSSL),AL2(0)
         DC   CL30' LOGICAL SWAPS'
LSS      DS   CL8                 LOGICAL SWAP
         DC   CL4' '
LSSD     DS   CL8                 LOGICAL SWAP DELTA
LSSE     EQU  *
         DC    CL10' '
LSSO     DC   F'0'                LOGICAL SWAP - OLD VALUE
         SPACE
         DS   0F
LFSL     DC   AL2(LFSE-LFSL),AL2(0)
         DC   CL30' LOGICAL FAILED SWAPS'
LFS      DS   CL8                 LOGICAL FAILED SWAP
         DC   CL4' '
LFSD     DS   CL8                 LOGICAL FAILED SWAP DELTA
LFSE     EQU  *
         DC    CL10' '
LFSO     DC   F'0'                LOGICAL FAILED SWAP - OLD VALUE
         EJECT
REPORT   DCB  DSORG=PS,MACRF=PM,DDNAME=REPORT,RECFM=VBA,LRECL=70,      *
               BLKSIZE=704
         EJECT
ICT      EQU   0                                            *HMD 08/81*
RMPT     EQU   0                                            *HMD 08/81*
RMEX     EQU   0                                            *HMD 08/81*
IRAEPPA  EQU   0                                            *HMD 08/81*
IRAEPPR  EQU   0                                            *HMD 08/81*
RMSB     EQU   0                                            *HMD 08/81*
EPDTSCN  EQU   0                                            *HMD 08/81*
EPATSCN  EQU   0                                            *HMD 08/81*
LSCT     EQU   0                                            *HMD 08/81*
IRAWTQE  EQU   0                                            *HMD 08/81*
IRAOUCB  EQU   0                                            *HMD 08/81*
IRAOUXB  EQU   0                                            *HMD 08/81*
IRACTMQE EQU   0                                            *HMD 08/81*
IRAOTQE  EQU   0                                            *HMD 08/81*
IRAINQE  EQU   0                                            *HMD 08/81*
IRAFLTM  EQU   0                                            *HMD 08/81*
IRASRBT  EQU   0                                            *HMD 08/81*
EPAT     EQU   0                                            *HMD 08/81*
RQSV     EQU   0                                            *HMD 08/81*
ICSP     EQU   0                                            *HMD 08/81*
RSPL     EQU   0                                            *HMD 08/81*
ENFPM    EQU   0                                            *HMD 08/81*
         MNOTE *,'***************************************************'
         MNOTE *,'SOME OF THE MACROS BELOW ARE LICENSED MATERIAL.'
         MNOTE *,'THEY ARE AVAILABLE WITH THE OPTIONAL MATERIAL FOR'
         MNOTE *,'MVS SYSTEM PRODUCT AND WILL NOT BE DISTRIBUTED'
         MNOTE *,'WITH THE GTEDS MACRO LIBRARIES -- HOWARD M. DEAN'
         MNOTE *,'***************************************************'
         EJECT
         CVT  DSECT=YES,LIST=YES
         EJECT
         IRARCT       ** COPYRIGHTED - FROM SP/1 PVTMACS ** *HMD 04/82*
         EJECT
         IRACCT       ** COPYRIGHTED - FROM SP/1 PVTMACS ** *HMD 04/82*
         EJECT
         IRAMCT       ** COPYRIGHTED - FROM SP/1 PVTMACS ** *HMD 04/82*
         EJECT
         IHAPVT       ** COPYRIGHTED - FROM SP/1 PVTMACS ** *HMD 04/82*
         EJECT
         IRARMCA      ** COPYRIGHTED - FROM SP/1 PVTMACS ** *HMD 04/82*
         EJECT
         IRARMCT      ** COPYRIGHTED - FROM SP/1 PVTMACS ** *HMD 04/82*
         END
