JOBS     TITLE 'JOBS - TSO DISPLAY JOBS COMMAND'
         MACRO
&NAME    TSDERASE &N
&NAME    BCR   0,0                      NOP
         MEND
         SPACE 1
         PRINT NOGEN
JOBS    CSECT
         SAVE  (14,12),T,JOBS_TSO_COMMAND
         USING JOBS,R15
         LA    R11,SAVEAREA
         ST    R13,SAVEAREA+4
         ST    R11,8(,R13)
         LR    R13,R11
         B     START
         DROP  R15
         SPACE 2
SAVEAREA DC    18F'0'
         SPACE 2
START    DS    0H
         USING SAVEAREA,R13
         SPACE 2
         LM    R6,R9,CLEARREG           INITIALIZE TABLE
         MVCL  R6,R8
         SPACE 1
         TSDERASE                       ERASE THE SCREEN
         L     R1,16                    FIND CVT
         L     R2,X'94'(,R1)            FIND BASEA (M.S.RES.DATA)
         LA    R3,TABLE                 NAME TABLE
         LA    R4,80                    BXLE INCREMENT
         L     R5,=A(TABLE+49*80)       TABLE END
         SR    R6,R6                    COUNT OF JOBS
CSCBLOOP ICM   R2,15,0(R2)
         BZ    CSCBEND                  WHEN DONE
         CLI   28(R2),2                 TSO USER ID?
         BNE   CSCBLOOP
         SPACE 1
* FIND THE ASSOCIATED ASCB
         SPACE 1
         L     R1,16                    GET CVT
         L     R1,X'22C'(,R1)           FIND ASVT
         LA    R1,X'20C'(,R1)           FIND ENTRY ZERO
         LH    R0,30(,R2)               GET ASID
         SLA   R0,2                     MULT BY FOUR
         AR    R1,R0                    R1 NOW POINTS TO ASVT ENTRY
GOTASVE  L     R1,0(,R1)                GET ASCB ADDRESS
         SPACE 1
GOTASCB  ICM   R7,15,176(R1)            PICK UP STC NAME
         BZ    CSCBLOOP                 NONE, SKIP
         CLC   =CL8'INIT',0(R7)         CHECK FOR INIT
         BNE   CSCBLOOP                 SKIP IF NOT
         SPACE 2
         LA    R6,1(,R6)                BUMP USER COUNT
         MVC   1(8,R3),8(R2)            MOVE JOBNAME TO TABLE
         SPACE
         L     R15,X'90'(,R1)           FIND OUCB
         TM    17(R15),X'80'            NON SWAPPABLE?
         BZ    *+8
         MVI   0(R3),C'^'
         CLI   32(R2),C' '              CHECK FOR PRINTABLE
         BNH   *+10
         MVC   10(8,R3),32(R2)          MOVE IN PROCSTEP
         CLI   64(R2),C' '              CHECK FOR PRINTABLE
         BNH   *+10
         MVC   19(8,R3),64(R2)          MOVE IN STEPNAME
         SPACE
         LH    R0,120(,R1)              ALLOC AUX SLOTS (VAM)
         SLA   R0,2                     MULT BY 4 TO GET IT IN 'K'
         CVD   R0,DOUBLE
         MVC   27(7,R3),=X'4020206B202120'  EDIT MASK
         ED    27(7,R3),DOUBLE+5      DO THE EDIT
         MVI   34(R3),C'K'
         LH    R0,122(,R1)              ALLOC AUX SLOTS (NON-VAM)
         SLA   R0,2                     MULT BY 4 TO GET IT IN 'K'
         CVD   R0,DOUBLE
         MVC   35(7,R3),=X'4020206B202120'  EDIT MASK
         ED    35(7,R3),DOUBLE+5      DO THE EDIT
         MVI   42(R3),C'K'
         LH    R0,152(,R1)              REAL STORAGE IN USE
         ICM   R15,15,48(R2)            CHECK FOR V=R
         BZ    VIRTJOB
         LR    R0,R15                   DISPLAY V=R SIZE
         MVI   0(R3),C'='               SHOW V=R
VIRTJOB  SLA   R0,2                     MULT BY 4 TO GET IT IN 'K'
         CVD   R0,DOUBLE
         MVC   45(7,R3),=X'4020206B202120'  EDIT MASK
         ED    45(7,R3),DOUBLE+5      DO THE EDIT
         MVI   52(R3),C'K'
         LM    R14,R15,64(R1)           PICK UP CPU TIME
         SRDL  R14,24                   MOVE TO ODD REG
         M     R14,=A(1048576)          COMPUTE IN SECONDS
         D     R14,=A(10000*256)
         CVD   R15,DOUBLE
         MVC   55(10,R3),=X'4020206B2021204B2020'
         ED    55(10,R3),DOUBLE+4      DO THE EDIT
         MVI   65(R3),C'S'
         LM    R14,R15,200(R1)          PICK UP SRB TIME
         SRDL  R14,24                   MOVE TO ODD REG
         M     R14,=A(1048576)          COMPUTE IN SECONDS
         D     R14,=A(10000*256)
         CVD   R15,DOUBLE
         MVC   66(10,R3),=X'4020206B2021204B2020'
         ED    66(10,R3),DOUBLE+4      DO THE EDIT
         MVI   76(R3),C'S'
         UNPK  DOUBLE(3),43(2,R1)       CONVERT DPRTY TO HEX
         TR    DOUBLE(2),HEXTAB
         MVC   78(2,R3),DOUBLE          MOVE FOR PRNTING
         SPACE
         BXLE  R3,R4,CSCBLOOP
         TPUT  MSGOV,L'MSGOV
         SPACE 2
CSCBEND  CVD   R6,DOUBLE                NUM JOBS MSG
         MVC   NUMJOBS(4),=X'40202120'
         ED    NUMJOBS(4),DOUBLE+6
         TPUT  NUMJOBS,LMSG
         SPACE 2
         LR    R5,R3                    SET END OF TABLE
         LA    R2,TABLE                 SET START OF TABLE
         LR    R6,R4                    FOR SORT
         LR    R7,R5
         SR    R7,R6                    BACK UP ONE ENTRY
         SR    R7,R6
         LR    R8,R2                    SAVE FIRST ADDRESS
SORTLOOP CLC   0(8,R2),80(R2)           COMPARE TWO
         BNH   SORTBXLE
         LR    R8,R2                    LAST SWAP
         XC    0(80,R2),80(R2)
         XC    80(80,R2),0(R2)
         XC    0(80,R2),80(R2)
SORTBXLE BXLE  R2,R6,SORTLOOP
         LR    R7,R8                    SAVE LAST SWAP
         LA    R2,TABLE                 REINIT
         LR    R8,R2                    REINIT LAST SWAP
COMPARE  CR    R2,R7                    DONE?
         BL    SORTLOOP
* OUTPUT THE DATA
         SPACE 1
BLNKLOOP CLC   =CL10' ',0(R2)           BLANK ENTRY?
         BE    PRNTBXLE
PRNTTPUT TPUT  (2),(4),R
PRNTBXLE BXLE  R2,R4,BLNKLOOP
         SPACE 1
         L     R13,SAVEAREA+4
         RETURN (14,12),RC=0
         SPACE 1
NUMJOBS DC    X'40202120',C' ACTIVE JOBS            --VIO--'
        DC    C' -SLOTS-   WKG SET     CPU TIME   SRB TIME PR'
LMSG     EQU   *-NUMJOBS
MSGOV    DC    C'* TABLE OVERFLOW *'
DOUBLE   DC    D'0'
         SPACE
HEXTAB   EQU   *-C'0'
         DC    C'0123456789ABCDEF'
         SPACE 2
         REGS
         SPACE 1
         LTORG
         SPACE 1
CLEARREG DC    A(TABLE,4000),A(0),X'40000000'
TABLE    DC    50CL80' '
         END   JOBS
