         TITLE 'ALLOCMN - REMOVE DATASET FROM SPF CONCATENATION'
***********************************************************************
*                  WRITTEN BY: CAROL WINICUR                          *
*                              GREAT WESTERN BANK                     *
*                              9401 CORBIN AVE.                       *
*                              NORTHRIDGE, CA 91328                   *
*                              (818) 701-8309                         *
*                                                                     *
*  THIS PROGRAM WORKS IN CONJUNCTION WITH TWO CLISTS: ALLOCMIN AND    *
*  ALLOCTRP.  ALLOCTRP ISSUES THE TSO "LISTA" AND "LISTC" COMMANDS    *
*  AND TRAPS THE OUTPUT IN A DATASET WHICH IS READ BY THIS PROGRAM.   *
*  THE IKJCT441 ROUTINE CREATES/UPDATES CLIST VARIABLES WHICH ARE THE *
*  VARIABLE NUMBER OF DATASET NAMES ALLOCATED TO THE DDNAME SPECIFIED *
*  IN THE PARM.  CLIST ALLOCMOR THEN RE-ALLOCATES THE REQUESTED       *
*  DDNAME WITH ALL PREVIOUSLY ALLOCATED DATASET NAMES MINUS THE ONE   *
*  DSNAME SPECIFIED.  WHEN MVS 2.2.0 IS INSTALLED, THE RDJFCB MACRO   *
*  WILL BE ABLE TO ACCESS DSNAMES FOR CONCATENATED DATASETS, AND      *
*  CLIST ALLOCTRP WILL BE REDUCED IN FUNCTION.                        *
***********************************************************************
ALLOCMN CSECT
         SAVE  (14,12)
         LR    R12,R15
         USING ALLOCMN,R12            ESTABLISH BASE REG
         ST    R13,SAVAREA+4          SAVE CALLERS SA PTR
         LA    R3,SAVAREA             ADDRESS OF MY SAVE AREA
         ST    R3,8(0,R13)            PUT MY SA PTR IN CALLERS SA
         LR    R13,R3                 POINT R13 TO MY SA
         SPACE 2
         L     R1,0(R1)               POINT TO PARM POINTER
         LH    R3,0(0,R1)             GET TOTAL PARM LENGTH
         LH    R2,2(R1)               GET PGM NAME LENGTH
         LA    R2,4(R2)               ADD LENGTH OFFSETS
         CR    R3,R2                  IS THERE A REAL PARM?
         BNH   B30ERR                 NO, GET OUT NOW
         AR    R1,R2                  R1 NOW POINTS TO REAL PARM
         SR    R3,R2                  R3 HAS LENGTH OF REAL PARM
         LTR   R3,R3                  LENGTH OF REAL PARM
         BZ    B30ERR                 IF ZERO, GET OUT NOW
         LR    R5,R1                  SAVE ADDRESS OF PARM
         MVI   PRMDD,C' '             BLANK PARM HOLD AREAS
         MVC   PRMDD+1(51),PRMDD
         LR    R4,R3                  SAVE LENGTH OF PARM
A10UPRCS OI    0(R5),C' '             CONVERT TO UPPERCASE
         CLI   0(R5),C','             SEARCH FOR COMMA
         BNE   A20CONT                NOT THIS BYTE
         LR    R9,R5                  SAVE LOCATION OF COMMA
A20CONT  LA    R5,1(R5)               NEXT PARM BYTE
         BCT   R4,A10UPRCS            FOR WHOLE PARM
         SR    R9,R1                  GET LENGTH OF DDNAME
         STH   R9,DDNLEN              SAVE LENGTH OF DDNAME
         BCTR  R9,0                   LENGTH OF PARM AGAIN
         EX    R9,B10MOV1             SAVE PARM
         LA    R1,2(R9,R1)            POINT TO DSN
         LH    R9,DDNLEN              LENGTH OF DDNAME
         LA    R9,1(R9)               UP BY 1 TO BYPASS COMMA
         SR    R3,R9                  LENGTH OF DSN
         STH   R3,DSNLEN              SAVE LENGTH OF DDNAME
         BCTR  R3,0                   LENGTH OF PARM AGAIN
         EX    R3,B10MOV2             SAVE PARM
         SPACE 1
         GETMAIN R,LV=TBLLEN
         LR    R8,R1                  POINT TO GETMAIN'D STORAGE
         LR    R10,R1                 POINT TO GETMAIN'D STORAGE
         USING TBLDSCT,R10            ADDRESSABILITY TO DSN TABLE
         LA    R9,TBLLEN-1            LENGTH OF TABLE TO BLANK
         LA    R14,BLANK              BLANK DSNAME TABLE
         XR    R15,R15                CLEAR REG 15
         ICM   R15,B'1001',PADIT      PAD WITH ONE BYTE BLANK
         MVCL  R8,R14                 BLANK ENTIRE DSN TABLE
         MVI   EOTBL,X'FF'            MARK END OF TABLE
         SPACE 1
         OPEN  (TRAPIP,(INPUT))       OPEN TRAPPED DATA FILE
         XR    R8,R8                  CLEAR REG
         LA    R8,DSNTBL              ADDRESS OF DSNAME TABLE
         GET   TRAPIP,IPAREA          BYPASS 1ST RECORD
A30GET   GET   TRAPIP,IPAREA          GET LISTA TRAPPED DATA RECORD
         LA    R4,IPAREA              ADDRESS OF IP AREA
         LH    R6,IPAREA              TOTAL LENGTH OF RECORD
         SH    R6,=H'4'               SUBTRACT 4-BYTE LENGTH FIELD
         LA    R4,4(R4)               BUMP TO REAL DATA
         CLC   ENDMARK,0(R4)          END OF LISTA CMD O/P?
         BE    C10ALIAS               YES, CHECK FOR ALIAS RECORDS
         CLC   0(2,R4),=C'--'         HEADER LINE?
         BE    A30GET                 YES, IGNORE
         CLC   0(2,R4),=C'  '         INDENTED LINE?
         BE    A35CHKDD               YES, GO CHECK DDNAME
         MVI   SAVDSN,C' '            BLANK DSN HOLD AREA
         MVC   SAVDSN+1(43),SAVDSN
         BCTR  R6,0                   DECREMENT 1 FOR MOVE
         EX    R6,B10MOV3             SAVE DATA SET NAME
         B     A30GET
A35CHKDD MVC   SAVDD,2(R4)            SAVE DDNAME
         CLC   SAVDD,BLANK            IS DDNAME BLANK?
         BNE   A40MTCHT               NO, NOT A CONCATENATED DD
         TM    FOUNDIT,MATCHNOW       WAS A MATCH FOUND?
         BNO   A30GET                 NO, THEN BYPASS THIS ONE
         B     A50DSN                 YES, GET THIS DSN TOO
A40MTCHT NI    FOUNDIT,MATCHOFF       SET CURRENT MATCH SWITCH OFF
         CLC   SAVDD,PRMDD            COMPARE PARM DDN TO CURRENT DDN
         BNE   A30GET                 NO MATCH, TRY ANOTHER ONE
         OI    FOUNDIT,MATCHNOW       DDNAME MATCH SWITCH SET
A50DSN   CLC   PRMDSN,SAVDSN          IS THIS THE REQUESTED DSN?
         BNE   A60TBLIT               NO, ADD TO TABLE
         OI    FOUNDIT,MATCHDSN       INDICATE THE DSN WAS FOUND
         B     A30GET                 GO GET NEXT RECORD
A60TBLIT MVC   0(44,R8),SAVDSN        SAVE DSNAME IN TABLE
         LA    R8,44(R8)              BUMP TO NEXT DSN TABLE ENTRY
         CLI   0(R8),X'FF'            END OF TABLE?
         BE    B40ERR                 YES, PUT OUT ERROR MSG
         B     A30GET                 GO GET NEXT RECORD
         SPACE
B10MOV1  MVC   PRMDD(0),0(R1)         SAVE PARM DDNAME
B10MOV2  MVC   PRMDSN(0),0(R1)        SAVE PARM DSNAME
B10MOV3  MVC   SAVDSN(0),0(R4)        SAVE DSNAME
         SPACE 1
B30ERR   MVC   ERRMSG(L'ERRMS1),ERRMS1
         LA    R2,L'ERRMS1
         B     B90ERR
B40ERR   MVC   ERRMS2+10(8),PRMDD
         MVC   ERRMSG(L'ERRMS2),ERRMS2
         LA    R2,L'ERRMS2
         B     B90ERR
B50ERR   MVC   ERRMSG(L'ERRMS3),ERRMS3
         LA    R2,L'ERRMS3
         B     B90ERR
B60ERR   MVC   ERRMSG(L'ERRMS4),ERRMS4
         LA    R2,L'ERRMS4
         B     B90ERR
B70ERR   MVC   ERRMSG(L'ERRMS5),ERRMS5
         LA    R2,L'ERRMS5
B90ERR   TPUT  ERRMSG,(R2)
         LA    R15,8                  SET ERROR RETURN CODE
         B     D99EOM
         EJECT
C10ALIAS TM    FOUNDIT,MATCHANY       WAS A DDNAME MATCH FOUND?
         BNO   B70ERR                 NO, LET EM KNOW
         MVI   0(R8),X'FF'            MARK END OF TABLE
         TM    FOUNDIT,MATCHDSN       WAS A DSNAME MATCH FOUND?
         BO    D10EOM                 YES, DONT LOOK FOR ALIAS NAME
C20GET   BAL   R5,C90GET              GO GET ANOTHER RECORD
         CLC   ALIAS,0(R4)            ALIAS RECORD?
         BNE   C20GET                 NO, TRY THE NEXT ONE
C30GET   BAL   R5,C90GET              BYPASS ALIAS RECORD
         CLC   NONVSAM,7(R4)          AND LOOK FOR NONVSAM RECORD
         BNE   C30GET                 KEEP LOOKING
         SH    R6,=H'16'              MINUS BEGINNING OF RECORD
         LA    R4,16(R4)              BUMP TO ALIAS ASSOCIATION NAME
         MVI   SAVDSN,C' '            BLANK DSN HOLD AREA
         MVC   SAVDSN+1(43),SAVDSN
         BCTR  R6,0                   DECREMENT 1 FOR MOVE
         EX    R6,B10MOV3             SAVE DATA SET NAME
         LA    R8,DSNTBL              DSNAMES TABLED ALREADY
C40LOOP  CLC   SAVDSN,0(R8)           IS THE ALIAS ASSOC NAME HERE?
         BE    C50FOUND               YES, WE FOUND IT
         LA    R8,44(R8)              BUMP TO NEXT TABLE ENTRY
         CLI   0(R8),X'FF'            END OF TABLE?
         BE    D10EOM                 YES, WE'RE THRU
         B     C40LOOP
C50FOUND OI    FOUNDIT,MATCHDSN       INDICATE THE DSN WAS FOUND
         LR    R11,R8                 SAVE ADDRESS OF TABLE ENTRY
         LA    R8,44(R8)              BUMP TO NEXT TABLE ENTRY
C60LOOP  CLI   0(R8),X'FF'            END OF TABLE?
         BE    C70MOVON               YES MOVE END
         MVC   0(44,R11),0(R8)        WIPE OUT PREV ENTRY WITH CURRENT
         LA    R11,44(R11)            GO THRU THE TABLE SO THERE ARE
         LA    R8,44(R8)              NO EMPTY ENTRIES
         B     C60LOOP
C70MOVON MVI   0(R11),X'FF'           MARK NEW END OF TABLE
         B     D10EOM                 AND FINISH UP
C90GET   GET   TRAPIP,IPAREA          GET LISTC TRAPPED DATA RECORD
         LA    R4,IPAREA              ADDRESS OF IP AREA
         LH    R6,IPAREA              TOTAL LENGTH OF RECORD
         SH    R6,=H'4'               SUBTRACT 4-BYTE LENGTH FIELD
         LA    R4,4(R4)               BUMP TO REAL DATA
         BR    R5                     RETURN
         EJECT
* REPEAT MATCHANY TEST JUST IN CASE WE FALL THRU HERE FIRST
D10EOM   TM    FOUNDIT,MATCHANY       WAS A DDNAME MATCH FOUND?
         BNO   B70ERR                 NO, LET EM KNOW
         TM    FOUNDIT,MATCHDSN       WAS A DSNAME MATCH FOUND?
         BNO   B60ERR
         L     R3,X'10'               FIXED ADDRESS OF CVT
         L     R15,CVTTVTX(,R3)       ACCESS THE TSVT
         L     R15,TSVTVACC-TSVT(,R15)   ACCESS VARIABLE ACCESS ROUTINE
         ST    R15,VARACRTN           SAVE ROUTINE ADDRESS
         LA    R8,DSNTBL
D20LOOP  CLI   0(R8),X'FF'            END OF TABLE?
         BE    D80EOM                 YES, SEND COUNT
         MVC   VALUE,0(R8)
         LR    R9,R8                  ADDRESS OF DSN TABLE ENTRY
         LA    R4,44                  MAX LENGTH OF DSN
D30LOOP  CLI   0(R9),C' '             END OF DSN?
         BE    D40LEN                 YES, GO CALC LENGTH
         LA    R9,1(R9)               NO, BUMP TO NEXT BYTE
         BCT   R4,D30LOOP             UP TO MAX LENGTH TIMES
D40LEN   SR    R9,R8                  SUBTRACT STARTING POINT
         ST    R9,VALUELEN            PUT LENGTH IN PARAMETER
         AP    DSNCNTR,=P'1'
         OI    DSNCNTR+1,X'0F'        SET SIGN TO 'F' (NUMERIC)
         UNPK  NAME+6(2),DSNCNTR
         LA    R8,44(R8)              BUMP TO NEXT ENTRY
D50ADDR  L     R15,VARACRTN           GET ROUTINE ADDRESS
         SPACE 1
*  INVOKE VARIABLE ACCESS ROUTINE
         LTR   R15,R15                VERIFY TSVT ADDRESS PRESENT
         BNZ   D60CALL                IF PRESENT, CALL IKJCT441
         LINK  EP=IKJCT441,                                            X
               PARAM=(ECODE,          ENTRY CODE                       X
               NAMEPTR,               POINTER TO VARIABLE NAME         X
               NAMELEN,               LENGTH OF VARIABLE NAME          X
               VALUEPTR,              POINTER TO VARIABLE VALUE        X
               VALUELEN,              LENGTH OF VARIABLE VALUE         X
               TOKEN),                TOKEN TO VARIABLE ACCESS SERVICE X
               VL=1                   HI BIT ON IN THE PARAM LIST
         B     D70RET
D60CALL  CALL  (15),                                                   X
               (ECODE,                ENTRY CODE                       X
               NAMEPTR,               POINTER TO VARIABLE NAME         X
               NAMELEN,               LENGTH OF VARIABLE NAME          X
               VALUEPTR,              POINTER TO VARIABLE VALUE        X
               VALUELEN,              LENGTH OF VARIABLE VALUE         X
               TOKEN),                TOKEN TO VARIABLE ACCESS SERVICE X
               VL                     HI BIT ON IN THE PARAM LIST
D70RET   LTR   R15,R15                CHECK RETURN CODE
         BNZ   B50ERR
         B     D20LOOP
D80EOM   CLC   NAME(4),=C'PSSD'       LAST VARIABLE?
         BNE   D90EOM                 YES, GET OUT
         MVC   VALUE(2),NAME+6        UNPACKED DSN COUNT
         MVC   NAME(8),=C'DSNCOUNT'   SET LAST VARIABLE NAME
         MVC   VALUELEN,F2            SET LENGTH TO TWO
         B     D50ADDR                PASS NUMBER OF DSNS TO CLIST
D90EOM   SLR   R15,R15                CLEAR RETURN CODE
D99EOM   CLOSE (TRAPIP)               CLOSE TRAPPED DATA FILE
         LR    R1,R10                 POINT R1 TO GETMAIN'D CORE
         XR    R0,R0                  CLEAR FOR SUBPOOL 0
         FREEMAIN R,LV=TBLLEN,A=(1)
         L     R13,SAVAREA+4          RESTORE CALLERS SA PTR
         RETURN (14,12),RC=(15)
         EJECT
         DS    0F
IPAREA   DS    CL84
         SPACE
VARACRTN DS    F
F2       DC    F'2'
PRMDD    DS    CL8
PRMDSN   DS    CL44
DDNLEN   DS    H
DSNLEN   DS    H
SAVDD    DS    CL8
SAVDSN   DS    CL44
         SPACE
* IKJCT441 VARIABLE ROUTINE DATA
NAME     DC    CL8'PSSDSN0 '
NAMELEN  DC    F'8'
VALUE    DS    CL44                   VALUE OF PASSDSN
VALUELEN DC    F'44'
NAMEPTR  DC    A(NAME)                POINTER TO THE VARIABLE NAME
VALUEPTR DC    A(VALUE)               POINTER TO THE VARIABLE VALUE
TOKEN    DC    F'0'                   UNUSED
ECODE    DC    A(TSVEUPDT)            ENTRY CODE FOR SETTING VALUES
         SPACE
         SPACE
DSNCNTR  DC    PL2'0'
FOUNDIT  DC    XL1'00'
MATCHANY EQU   X'08'
MATCHNOW EQU   X'09'
MATCHDSN EQU   X'02'
MATCHOFF EQU   X'FE'
COMMA    DC    C','
BLANK    DC    CL8' '
PADIT    DC    XL2'4001'
ENDMARK  DC    CL8'ENDLISTA'
ALIAS    DC    CL5'ALIAS'
NONVSAM  DC    CL7'NONVSAM'
ERRMS1   DC    C'ALMNP01 - INVALID OR MISSING PARM'
ERRMS2   DC    C'ALMNP02 - XXXXXXXX EXCEEDS 20 CONCATENATED DSNAMES'
ERRMS3   DC    C'ALMNP03 - ERROR IN IKJCT441 ROUTINE'
ERRMS4   DC    C'ALMNP04 - DSNAME WAS NOT ALLOCATED'
ERRMS5   DC    C'ALMNP05 - DDNAME IS NOT CURRENTLY ALLOCATED'
ERRMSG   DS    CL50
         SPACE
         DS    0F
TRAPIP   DCB   DDNAME=TLISTA,DSORG=PS,MACRF=GM,EODAD=D10EOM
         SPACE 2
SAVAREA  DS    18F
         LTORG
         EJECT
TBLDSCT  DSECT
DSNTBL   DS    20CL44
EOTBL    DS    XL1
TBLLEN   EQU   *-DSNTBL
         SPACE 1
CVTTVTX  EQU   X'9C'
         REGS
         SPACE
         PRINT NOGEN
         CVT   DSECT=YES
         SPACE
         IKJTSVT
         END   ALLOCMN
