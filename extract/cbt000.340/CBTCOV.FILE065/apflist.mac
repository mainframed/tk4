         MACRO
         REGEQU
***********************************************************************
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
***********************************************************************
         MEND
         EJECT
         MACRO
&NAME    PRIME &REG,&SAVE,&CONS,&NTER,&EQU
.* THIS IS THE PRIME MACRO
.* ITS FUNCTION IS
.* 1.  ESTABLISH ADDRESSABILITY SAVE REGISTERS ACT AS ENTRY
.* 2.  GENERATE REG SAVE AREA OR DO GETMAIN
.* 3.  PROVIDE EXIT USED BY TERME MACRO
.* 4.  PROVIDE ADDIT SAVE AREAS FOR SUBROUTINES SO ONLY 1 BAL REG
         GBLA  &PERFD,&PERFL
         GBLC  &PERFR,&LAB,&SNTRY
         GBLB  &EQFLG,&PRIM
         LCLB  &REENT
         LCLA  &CNT,&LOOP,&INC
         LCLC  &BASE(3),&SCSECT,&PNAME
         AIF   (&PRIM).DUMB
&PRIM    SETB  1
&LAB     SETC  'ICC'.'&SYSNDX'
&SNTRY   SETC  '&LAB'.'A'
&SCSECT  SETC  '&SYSECT'
         AIF   (T'&NAME EQ 'O').CSCT0
         AIF   ('&SCSECT' NE '').CSCT1
&NAME    CSECT
&SCSECT  SETC  '&NAME'
         AGO   .CSCT0
.DUMB    MNOTE 8,'ONLY ONE PRIME MAY BE DEFINED'
         MEXIT
.CSCT1   MNOTE 'A CSECT IS ALREADY DEFINED.'
&PNAME   SETC  '&NAME'
.CSCT0   ANOP
         USING *,15
         AIF   ('&EQU' EQ '').A1
         REGEQU
.A1      AIF   ('&CONS' EQ '').A2
&PNAME   SAVE  (14,12),,&CONS
         AGO   .A3
.A2      ANOP
&PNAME   SAVE  (14,12),,&SCSECT
.A3       ANOP
         LA    14,&LAB
         ST    14,&SNTRY
         B     &SNTRY+4
         AIF   ('&SAVE' NE '').A4
&REENT   SETB  1
.A4      AIF   ('&REG' EQ '').A6
         AIF   (N'&REG GT 3).BAD3
         AIF   (N'&REG LT 2).B1
&CNT     SETA  N'&REG
&LOOP    SETA  1
&INC     SETA  &LOOP+1
.A5      AIF   (T'&REG(&LOOP) NE 'N').BAD1
&BASE(&LOOP) SETC '&REG'(&INC,K'&REG(&LOOP))
&INC     SETA  &INC+K'&REG(&LOOP)+1
&LOOP    SETA  &LOOP+1
         AIF   (&LOOP LE &CNT).A5
         AGO   .A7
.B1      ANOP
&BASE(1) SETC  '&REG'
         AGO   .B2
.A6      ANOP
&BASE(1) SETC  '12'
.B2      ANOP
&CNT     SETA  1
.A7      ANOP
&SNTRY   DS    F
          DROP 15
         AIF   (&CNT NE 3).A8
         LA    &BASE(3),2048                     ESTABLISH ADDRESSAB
         LA    &BASE(2),2048(&BASE(3),15)        WITH THREE
         LA    &BASE(3),2048(&BASE(3),&BASE(2))  BASE REGS
         LR    &BASE(1),15
         USING &SCSECT,&BASE(1),&BASE(2),&BASE(3)
         AGO   .A10
.A8      AIF   (&CNT NE 2).A9
         LA    &BASE(2),2048                     ESTABLISH ADRESSAB
         LA    &BASE(2),2048(&BASE(2),15)        WITH TWO
         LR    &BASE(1),15                       BASE REGS
         USING &SCSECT,&BASE(1),&BASE(2)
         AGO   .A10
.A9      AIF   (&CNT NE 1).BAD4
         LR    &BASE(1),15                       ESTABLISH ADRESSAB
         USING &SCSECT,&BASE(1)
.A10     AIF   (&REENT).A11
         LA    15,&SAVE
         AGO   .A14
.A11     AIF   ('&NTER' NE '').A12
&PERFL   SETA  0
&CNT     SETA  72
         AGO   .A13
.A12     AIF   (T'&NTER NE 'N').BAD5
&PERFL   SETA  &NTER
&PERFR   SETC  '14'
&PERFD   SETA  0
&CNT     SETA  72+&NTER*4
* GENERATED SAVE AREA EXTENDED FOR USE BY NTER AND XIT MACROS
.A13     ANOP
         GETMAIN R,LV=&CNT
         LR    15,1
.A14     ANOP
         LM    0,1,20(13)
         ST    13,4(15)                          CHAIN THE
         ST    15,8(13)                          SAVE AREAS
         LR    13,15
         L     15,&SNTRY
          BR   15
         AIF   (&REENT).A20
&LAB.X   L     13,4(13)
         AGO   .A21
.A20     ANOP
&LAB.X   LR    1,13
         L     13,4(13)
         FREEMAIN R,LV=&CNT,A=(1)
.A21     ANOP
         RETURN (14,12),T,RC=(15)
         AIF   (&REENT).A24
         AIF   ('&NTER' NE '').A22
&CNT     SETA  18
         AGO   .A23
.A22     AIF   (T'&NTER NE 'N').BAD5
&PERFL   SETA  &NTER
&PERFR   SETC  '14'
&PERFD   SETA  0
&CNT     SETA  &NTER+18
* GENERATED SAVE AREA EXTENDED FOR USE BY NTER AND XIT MACROS
.A23     ANOP
&SAVE    DC    &CNT.F'0'
.A24     ANOP
         LTORG
&LAB     DS    0H
         MEXIT
.BAD1    MNOTE 8,'FIRST PARAMETER/S MUST BE SELF DEFINING'
         MEXIT
.BAD3    ANOP
.BAD4    MNOTE 8,'THIS MACRO WILL HANDLE 1-3 BASE REGS'
         MEXIT
.BAD5    MNOTE 8,'THIRD PARAMETER MUST BE SELF DEFINING'
         MEND
         EJECT
         MACRO
&NAME    TERME &PASS,&RC=O
         GBLC  &LAB
         GBLB  &PRIM
&NAME    DS    0H
         AIF   (&PRIM).TSTRC
         MNOTE 8,'PRIME MUST OCCUR BEFORE TERME'
         MEXIT
.TSTRC   AIF   ('&RC' EQ '(15)').RET
         AIF   ('&RC' EQ 'O').RET
         AIF   ('&RC'(1,1) EQ '(').ISAREG
         LA    15,&RC
         AGO   .RET
.ISAREG  ANOP
         LR    15,&RC
.RET     AIF   ('&PASS' NE 'PASS').NOPASS
         L     14,4(13)
         STM   0,1,20(14)
.NOPASS  ANOP
         B     &LAB.X
         MEND
         PRINT NOGEN
         TITLE 'APF LIBRARY LIST MODULE'
************************************************************
*    APFLIST  -  THIS PROGRAM IS DESIGNED TO RUN UNDER     *
*                TSO OR BATCH AND WILL DISPLAY OR PRINT    *
*                ALL APF AUTHORIZED LIBRARIES FOR THIS     *
*                IPL.  ALSO DISPLAYED IS THE TOTAL         *
*                NUMBER OF LIBRARIES AND THE SIZE OF       *
*                THE TABLE.                                *
*    NOTE : SYS1.LINKLIB AND SYS1.SVCLIB ARE AUTOMATICALLY *
*           ADDED AT IPL TIME.                             *
*           THE TABLE IS BUILT BY NIP MODULE IEAVNPA5      *
*           WHICH ALLOWS A MAXIMUM OF 2040 BYTES IN THE    *
*           APF TABLE.                                     *
*                                                          *
*    THE JCL NECESSARY TO EXECUTE THIS CODE IN BATCH IS:   *
*                                                          *
*          EXEC PGM=APFLIST                                *
*          SYSPRINT DD SYSOUT=A                            *
*                                                          *
*    MACROS USED ARE : PRIME,TERME,TPUT,REGEQU             *
*                                                          *
************************************************************
APFLIST  PRIME 12,,,,Y
         EJECT
         L     R1,X'224'                 -> PSAOLD
         ICM   R1,15,172(R1)             BATCH OR TSO ?
         BNZ   BATCH                     WE ARE BATCH
         EXTRACT ANS,'S',FIELDS=(TSO,COMM)
         LM    R1,R2,ANS                 -> TSO STATUS BYTE
         USING COMSECT,R2
         L     R2,CIBADDR                -> CIB
         USING CIB,R2
         TM    CIBVERB,STC               STC ?
         BZ    TSO
         MVC   CONSID+3(1),CIBCONID      GET MCS ID
         DROP  R2
         OI    SW,X'02'                  SET STC SWITCH
         B     BEGIN
BATCH    EQU   *                         WE ARE BATCH
         WTO 'ASSUME BATCH',ROUTCDE=(1,11)
         OPEN  (SYSPRINT,OUTPUT)         OPEN SYSPRINT
         OI    SW,X'01'                  TURN ON BATCH SWITCH
         B     BEGIN                     GO TO THE BEGINING
TSO      EQU   *
         WTO   'ASSUME TSO',ROUTCDE=(1,11)
BEGIN    L     R4,16                     -> CVT
         L     R4,X'1E4'(R4)             -> APF TABLE IN SQA
         SR    R5,R5                     INITIALIZE REG 5
         SR    R7,R7                     INITIALIZE REG 7
         IC    R7,1(R4)                  LOAD # OF ENTRIES
         LH    R6,=H'01'                 INITIALIZE INCREMENT
         SR    R7,R6                     SUBTRACT 1 FOR BXLE
         USING APF,R4                    ESTABLISH ADDR TO APF
         LA    R4,2(R4)                  -> 1ST ENTRY OF TABLE
         TM    SW,X'01'                  TSO OR BATCH ?
         BZ    TSOT                      TSO - BYPASS PUT
TSOTP    PUT   SYSPRINT,TITLE-1
         B     TSOTB                     BYPASS TPUT
TSOT     EQU   *
         TM    SW,X'02'                  STC ?
         BZ    TSOTT                     NO - ISSUE THE TPUT
         MVC   WTOMSG(52),TITLE          MOVE TO WTO AREA
         L     R0,CONSID                 ->CONSOLE ID WHERE STARTED
         LA    R1,WTOMSG                 -> MESSAGE
         SVC   35                        ISSUE THE WTO
         B     TSOTB                     BYPASS TPUT
TSOTT    TPUT  TITLE,52
TSOTB    EQU   *
         LH    R9,=H'02'                 LOAD LENGTH OF PREFIX
APFDISP  EQU   *                         BEGIN THE ACTUAL DISPLAY
         AP    CNT,=P'01'                INCREMENT COUNT
         SR    R2,R2                     CLEAR REG 2
         IC    R2,APFLEN                 LENGTH OF ENTRY
         AR    R9,R2                     ADD LENGTH OF ENTRY
         MVC   DISPL(52),BLANKS          CLEAR DISPLAY LINE
         MVC   DVOL,APFVOL
         LR    R3,R2                     LOAD LENGTH
         SH    R3,=H'07'                 SUBTRACT LEN OF LEN+VOL
         EX    R3,MOVEDSN
         TM    SW,X'01'                  TSO OR BATCH ?
         BZ    TSOD                      TSO - BYPASS PUT
TSODP    PUT   SYSPRINT,DISPL-1
         B     TSODB                     BYPASS TPUT
TSOD     EQU   *
         TM    SW,X'02'                  STC ?
         BZ    TSODT                     NO - ISSUE THE TPUT
         MVC   WTOMSG(52),TITLE          MOVE TO WTO AREA
         L     R0,CONSID                 ->CONSOLE ID WHERE STARTED
         LA    R1,WTOMSG                 -> MESSAGE
         SVC   35                        ISSUE THE WTO
         B     TSODB                     BYPASS TPUT
TSODT    TPUT  DISPL,52                  DISPLAY INFO
TSODB    EQU   *
         AR    R4,R2                     INCREMENT DISPLACEMENT
         LA    R4,1(R4)                  -> NEXT ENTRY
         BXLE  R5,R6,APFDISP
         ED    APFCNT,CNT                COUNT OF ENTRIES
         CVD   R9,DWK                    CONVERT TO DECIMAL
         ED    SIZE(6),DWK+5             MAKE DISPLAYABLE
         TM    SW,X'01'                  TSO OR BATCH ?
         BZ    TSOS                      TSO - BYPASS PUT
         PUT   SYSPRINT,APFCNTL-1
         PUT   SYSPRINT,APFSIZE-1
         B     TSOSB
TSOS     EQU   *
         TM    SW,X'02'                  STC ?
         BZ    TSOST                     NO - ISSUE THE TPUT
         MVC   WTOMSG(52),TITLE          MOVE TO WTO AREA
         L     R0,CONSID                 ->CONSOLE ID WHERE STARTED
         LA    R1,WTOMSG                 -> MESSAGE
         SVC   35                        ISSUE THE WTO
         B     TSOSB                     BYPASS TPUT
TSOST    TPUT  APFCNTL,52                COUNT OF ENTRIES
         TPUT  APFSIZE,52                SIZE OF TABLE
TSOSB    EQU   *
         TM    SW,X'02'                  STC ?
         BO    TERME                     YES - BYPASS THE CLOSE
         TM    SW,X'01'                  TSO OR BATCH ?
         BZ    TERME
         CLOSE (SYSPRINT)
TERME    EQU   *
         TERME
         EJECT
SW       DC    X'00'
MOVEDSN  MVC   DSN(0),7(R4)              MOVE DSN TO DISPLAY
DWK      DC    D'0'
ANS      DS    2F
         SPACE
CONSID   DC    F'0'                      MCS CONSOLE ID IF STC
WTOA     DC    AL2(WTOAE-WTOA),X'4000'
WTOMSG   DC    CL52' '
WTOAE    EQU   *
         SPACE
CNT      DC    PL2'00'
         SPACE
         DC    C'0'
APFCNTL  DC    C' TOTAL APF AUTHORIZED ENTRIES = '
APFCNT   DC    XL4'40202021'
BLANKS   DC    CL60' '                   FILLER + BLANKS
         SPACE
         DC    C'0'
APFSIZE  DC    C' THE APF TABLE IS'
SIZE     DC    XL6'402020202021'
         DC    CL29' BYTES OF A POSSIBLE 2040 '
         SPACE
         DC    C' '
DISPL    DC    C' '
DVOL     DC    CL6' '                    VOLUME
         DC    CL2' '
DSN      DC    CL44' '                   DSN OF LIBRARY
         SPACE
         DC    C'1'
TITLE    DC    CL52' VOLUME  DATA-SET NAME '
         EJECT
SYSPRINT DCB   DSORG=PS,MACRF=PM,DDNAME=SYSPRINT,LRECL=53,             *
               BLKSIZE=530,RECFM=FBA
         EJECT
         LTORG
         SPACE
         DSECT
APF      EQU   *
APFLEN   DS    CL1                       LENGTH OF ENTRY
APFVOL   DS    CL6                       VOLUME SERIAL NUMBER
APFDSN   DS    CL44                      DSN OF LIBRARY
         EJECT
COMSECT  DSECT
ECBADDR  DS    A                   ADDRESS OF MODIFY/STOP ECB
CIBADDR  DS    A                   ADDRESS OF 1ST CIB
         DS    CL8
OPECB    DC    F'0'                OPERATOR REPLY ECB
         SPACE
CIB      DSECT
CIBNEXT  DS    A                   ADDRESS OF NEXT CIB
CIBVERB  DS    X                   VERB CODE
STC      EQU   4                   START COMMAND
STOP     EQU   X'40'               STOP COMMAND
MODIFY   EQU   X'44'               MODIFY COMMAND
CIBLNGH  DS    X                   CIB LENGTH IN DOUBLE WORDS
         DS    3X                  RESERVED
CIBTSOID DS    H                   TSO TERMINAL ID
CIBCONID DS    X                   MCS CONSOLE ID
         DS    X                   RESERVED
CIBCOMLN DS    H                   COMMAND DATA LENGTH
CIBDATA  DS    C                   COMAND DATA
         END
