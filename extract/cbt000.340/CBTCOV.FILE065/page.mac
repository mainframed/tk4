SPAM     TITLE 'S P A M- SCREEN PAGING ACTIVITY MONITOR'
*.
* SPAM
*
* THIS MONITOR IS WRITTEN TO DISPLAY  ON AN INTERVAL ( CURRENTLY 1 SEC)
* PAGING STATISTICS KEPT IN THE PVT. OUTPUT IS IN BAR-GRAPH FORMAT ON
* A 3270 TUBE UNDER THE CONTROL OF DCMS.
*
* THE FOLLOWING INPUT FUNCTIONS ARE DEFINED:
*
*       3270
*        KEY     FUNCTION
*      ________  ______________________________________________________
*
*    .  -----
*      × PA1 ×   HALT AUTO UPDATE MODE, OR EXIT IF NOT UPDATING
*      ×     ×
*       -----
*
*    .  -----
*      × PF1 ×   CHEAP HELP (DESCRIPTION OF WHAT YOU ARE SEEING)
*      ×     ×
*       -----
*
*    .  -----
*      × PF2 ×   ENTER AUTO UPDATE MODE
*      ×     ×
*       -----
*
*    .  -----
*      × PF3 ×   EXIT SPAM
*      ×     ×
*       -----
*
*    .  -----
*      × PF12×   EXIT SPAM
*      ×     ×
*       -----
*
*
* AFTER SPAM GIVES YOU HIS LITTLE CHEER-LEADING PITCH YOU MUST CAUSE
* ANOTHER INTERRUPT TO FIRE HIM UP. FIELDS WILL ALWAYS BE *OVERFLOW*
* IN THE BEGINNING DUE TO OUR COMPLETE LACK OF KNOWLEDGE OF THE DAYS
* PREVIOUS EVENTS.
*
*
*    ANY PROBLEMS, COMMENTS (NON-CAUSTIC), SUGGESTIONS ARE
*    WELCOME:
*       FRED LUDDY
*       AMDAHL CORP.
*       1250 E. ARQUES
*       SUNNYVALE CA.
*    PHONE:
*       (408) - 735 - 4011
*.
         EJECT
PAGE     DCMSTART R,LV=4096,STAE=NO,IOCB=YES
*
* XSTART SAVED THE PARM PTR (R1) IN BOTH R1 & R5 SO WE FIND IT HERE
*
*%       L     R5,0(,R5)                GET THE TDCB ADDRESS
*%       LA    R5,0(,R5)
*%       ST    R5,IOCBTDCB
         MVI   FLAG,0                   INITIALIZE PROGRAM FLAGS
         L     R6,CVTPTR                FIND THE PVT
         L     R6,CVTPVTP-CVT(,R6)      ...
         USING PVT,R6                   ...
         MVC   OLDPVT(13*4),PVTNPIN     INIT ALL COUNTERS
         MVC   SCR1SCAL,FIELDNM
         MVC   SCR1SCA2,FIELDNM
         MVC   SCR1HDR(HDR2LEN+5),HDR2  GET THE WHOLE THING
         LA    R2,NAMETBL               MOVE NAMES TO FRONT OF LINE
         LA    R3,SCR1LNE0
         LA    R0,14                    THIS MANY NAMES
INIT01   MVC   0(9,R3),0(R2)            MOVE THE NAME
         LA    R2,9(,R2)                INCREMENT COUNTERS
         LA    R3,79(,R3)               ...
         BCT   R0,INIT01
         XC    PCOUNTRS(4*14),PCOUNTRS  CLEAR OLD VALUES
         TIME  BIN
         ST    R0,PTIME                 SAVE STARTING TIME
         XC    SCR1MSG,SCR1MSG
         SPACE 3
HELP     OI    IOCBFLGC,IOCBCTIM        DO NOT TIMESTAMP HELP SCREEN
         SPACE 1
         TRMIO IOCB,FORMAT=HELPFMT,IMAGE=HELPAREA,BEEP=YES
         SPACE 2
PFCHECK  PFKEY DEF=SPAM0,K1=HELP,K2=UPDATE,K3=SPAMEX,K9=DCMSOVER,      $
               K12=SPAMEX,ATTN=ATTN
         SPACE 2
ATTN     TM    FLAG,FAUTO               IN AUTO UPDATE MODE?
         BNO   SPAMEX                   NO - GET OUT OF HERE
         SPACE 2
UPDATE   XI    FLAG,FAUTO               FLIP FLAG
         EJECT
*
*  TIME  LOOP  BEGINS HERE
*
         SPACE
SPAM0    TIME  BIN
         LR    R15,R0                   SAVE FOR LATER
         S     R0,PTIME                 SUBTRACT PREVIOUS TIME
         ST    R0,ATIME                 ACTUAL ELAPSED TIME
         ST    R15,PTIME                SAVE FOR NEXT LOOP
         LA    R7,SCR1LNE0+9            POINT TO FIRST DATA AREA
         LA    R8,14                    GET NUMBER OF ENTRIES
         MVC   COPYPVT(13*4),PVTNPIN    SAVE ALL COUNTERS
         LA    R1,COPYPVT               -> FIRST CURRENT PVT ENTRY
         LA    R3,OLDPVT                -> FIRST OLD PVT ENTRY
         LA    R9,PCOUNTRS              ADDRESS OF PREVIOUS COUNTERS
*.
*   BEGIN PROCESS LOOP -
*   PICK UP EACH PVT VALUE (THEY ARE NEATLY BEHIND EACH OTHER) AND
*   SUBTRACT THE PREVIOUS VALUE FROM IT... GIVING THE INTEGER TO BE
*   PLOTTED FOR THIS TIME INTERVAL.
*   IF THE VALUE IS...      THEN...
*   ------------------      --------------------------------
*   GREATER THAN  70        WRITE *OVERFLOW* IN  THE LINE
*   NEGATIVE                WRITE *FLIPOVER* IN THE LINE (OCCURS  WHEN
*                           THE PVT COUNTER TURNS OVER)
*   0 < VALUE < 140         PLOT THE VALUE ON THE SCREEN
*
*   REGISTER USAGE
*   R0       - WORK REGISTER
*   R1       - POINTER TO CURRENT PVT ENTRY
*   R2       - CURRENT PVT ENTRY
*   R3       - POINTER TO CURRENT OLD PVT ENTRY
*   R7       - POINTER TO CURRENT OUTPUT AREA
*   R8       - BCT REGISTER
*   R9       - PTR TO PREVIOUS DIFFERENCE ( FOR ROUNDING )
*.
         SPACE 2
SPAM1    MVC   0(70,R7),BLANKS          CLEAR THIS ENTRY
         L     R2,0(,R1)                PICK UP CURRENT PVT ENTRY
         CH    R8,=H'1'                 IS THIS REALLY FMCT?
         BNE   SPAM1A                   NO - CONTINUE
         LH    R15,0(,R1)               YES - GET TRUE VALUE
         SR    R14,R14                  CLEAR FOR DIVIDE
******** D     R15-1,=F'10'             SCALE FOR PLOTTING PURPOSES
         B     SPAM1B                   GO PLOT IT
SPAM1A   S     R2,0(,R3)                GET CHANGE FROM PREVIOUS
* AT THIS POINT R2 HAS THE VALUE WE WILL LOOK AT ON THE NEXT GO AROUND
*
* SMOOTHING IS DONE EXPONENTIALLY WITH TWO FACTORS, NO WEIGHT IS PLACED
* ON EITHER.
*
         LR    R0,R2                    SAVE OVER ADD
         A     R2,0(,R9)                SMOOTHING ( EXPONENTIAL )
         ST    R0,0(,R9)                NOW WE CAN SAVE IT
         SRA   R2,1                     DIVIDE BY 2 (NEW + OLD)/2
         LR    R15,R2                   MOVE OVER TO EVEN/ODD PAIR
         SR    R14,R14                  CLEAR H.O. REG
         MH    R15,=H'100'              ALIGN DECIMAL POINT
         D     R14,ATIME                CALCULATE ACTUAL PAGING RATE
SPAM1B   LTR   R2,R15                   CHECK WHATS HAPPENING
         BZ    SPAM4                    SKIP IF ZERO
         BNM   SPAM2                    IT'S A POSITIVE
         MVC   0(70,R7),=7C'*FLIPOVER*' SHOW ENTRY FLIPPED OVER
         B     SPAM4                    ...
SPAM2    C     R2,=F'70'                WELL?
         BNH   SPAM3                    IT'S ALL RIGHT
*
* THIS CODE WILL OVERLAY THE ORIGINAL BAR WITH AN OVERFLOW CHARACTER
* WHEN THE UTILIZATION IS OVER 70 (THE LENGTH OF THE BAR).
* EXAMPLE:
* IF THE GRAPH IS TEN CHARS LONG AND THE AMOUNT WE ARE PLOTTING IS 15
* THE GRAPH WILL LOOK LIKE THIS;
*
* 0....+....1....+
* ×>>>>>*****
*
* WHERE '>' IS THE OVERLAY CHARACTER
*
* THANKS TO KEITH SOPER OF RAND FOR THE IDEA.
*
         MVC   0(70,R7),=70C'*'         FIRST FIELD
         SL    R2,=F'70'
         CL    R2,=F'70'                STILL OVERFLOWED ?
         BH    NOHOPE                   HELL.. WHATS HAPPENING HERE?
         BCTR  R2,0                     -1 FOR EX
         EX    R2,STRIPEM               MOVE THE STRIPES
         B     SPAM4
NOHOPE   MVC   0(70,R7),=7C'*OVERFLOW*'
         B     SPAM4
SPAM3    BCTR  R2,0                     -1 FOR EX
         EX    R2,STARMOVE              MOVE EM BOSS
SPAM4    LA    R1,4(,R1)                -> NEXT CURRENT PVT ENTRY
         LA    R3,4(,R3)                -> NEXT OLD PVT ENTRY
         LA    R7,79(,R7)               -> NEXT SCREEN LINE
         LA    R9,4(,R9)                -> NEXT PCOUNTR
         BCT   R8,SPAM1                 GO TO IT BOZO
         MVC   OLDPVT(4*14),COPYPVT     SAVE CURRENT VALUES FOR NEXT
         SPACE 1
*
* GET THE CPU UTILIZATION AND PAGING RATE FROM THE RCT, SEE WHAT
* THE DREADED SRM THINKS OF THIS MESS
*
         MVC   SCR1HDR(HDR2LEN),HDR2    MOVE THE SKELETON
         L     R1,CVTPTR
         L     R1,CVTOPCTP-CVT(,R1)     -> TO THE OPTIMIZER'S AREA
         LA    R1,192+128+88+96(,R1)    GET DISPLACDMENT INTO RMCT
*                                       FOR THE RCT (SORRY BOUT IT)
         LH    R0,40(,R1) RCVCPUA       GET THE CPU UTILIZATION
         SRL   R0,4                     DIVIDE USAGE BY 16
         CVD   R0,DWD
         ED    SCR1HDR+PCTOFSET(4),DWD+6
         LH    R0,46(,R1) RCVPTR        GET THE PAGING RATE
         CVD   R0,DWD
         ED    SCR1HDR+PGROFSET(4),DWD+6
         LH    R0,38(,R1) RCVUICA       GET THE UIC AVERAGE
         CVD   R0,DWD
         ED    SCR1HDR+UICOFSET(4),DWD+6
*  PVTAFC = AFC
*  PVTCNTFX = FIXED PAGE COUNT
*  ASMQ = 44(,R1)   (IRARCT MACRO)
         SPACE 2
         NI    IOCBFLGC,255-IOCBCTIM    RESET: TIMESTAMP SCREENS
         TM    FLAG,FAUTO               AUTO UPDATE?
         BO    WRT$AUTO                 YES - GO DO IT
         MVI   IOCBFLGD,0               CLEAR FLAGS
         SPACE 2
         TRMIO IOCB,FORMAT=SCR1,IMAGE=IOAREA
         SPACE 2
         B     PFCHECK                  DECODE PFKEYS
         SPACE 3
WRT$AUTO MVI   IOCBFLGD,IOCBDYON+IOCBDFRC  SET FLAGS
         SPACE 1
         TRMIO IOCB,WRITE,FORMAT=SCR1,IMAGE=IOAREA
         SPACE 2
         PFKEY ATTN=ATTN,DEF=SPAM0      DECODE PFKEYS
         TITLE ' S P A M - DATA  AREAS, DSECTS AND THE LIKE'
STARMOVE MVC   0(0,R7),=70C'*'          << EXECUTED >>
STRIPEM  MVC   0(0,R7),=70C'>'          << EXECUTED >>
         SPACE 2
HDR2     DC    C' PAGERATE='
HDRPAGER DC    X'40202120'              PAGE RATE
         DC    C' UIC='
HDRUIC   DC    X'40202120'              SYSTEM UIC
         DC    C'         << SPAM >>        '
         DC    C'CPU%='
HDRPCT   DC    X'402021204040'          SRM CALCULATED CPU USAGE
         DC    C'         '
HDR2LEN  EQU   *-HDR2                   LENGTH OF AN AFTER-THOUGHT
UICOFSET EQU   HDRUIC-HDR2              OFFSET FOR UIC VARIABLE
PGROFSET EQU   HDRPAGER-HDR2            OFFSET FOR PAGERATE
PCTOFSET EQU   HDRPCT-HDR2
         DC    CL10' '
FIELDNM  DC    CL79'--NAME--0....+....1....+....2....+....3....+....4..$
               ..+....5....+....6....+....7'
NAMETBL  DC    C'PVTNPIN ×'
         DC    C'PVTNPOUT×'
         DC    C'PVTVAMI ×'
         DC    C'PVTVAMO ×'
         DC    C'PVTVAMR ×'
         DC    C'PVTSPIN ×'
         DC    C'PVTSPOUT×'
         DC    C'PVTNPREC×'
         DC    C'PVTNSWPS×'
         DC    C'PVTCAIN ×'
         DC    C'PVTCAOUT×'
         DC    C'PVTCAREC×'
         DC    C'PVTSPREC×'
         DC    C'PVTCFMCT×'
*        DC    C'THE END ×'
         SPACE 4
         PRINT NOGEN
HELPFMT  DCMSFMT
HELPAREA DCMSFLD 79
         DCMSFLD 79
         DCMSFLD 79
         DCMSFLD 79
         DCMSFLD 79
         DCMSFLD 79
         DCMSFLD 79
         DCMSFLD 79
         DCMSFLD 79
         DCMSFLD 79
         DCMSFLD 79
         DCMSFLD 79
         DCMSFLD 79
         DCMSFLD 79
         DCMSFLD 79
         DCMSFLD 79
         DCMSFLD 79
         DCMSFLD 79
         DCMSFLD 79
         DCMSFLD 79
         DCMSFLD 79
         DCMSFEND
         SPACE 3
HELPAREA EQU   *
 DC CL79'                << S P A M  --  SCOPE PAGING ACTIVITY MONITOR $
               >>'
 DC 79C'_'                                                           '
 DC CL79'PVTNPIN  - # OF PGS PAGED IN, EXCLUDING SWAP-INS AND VIO   '
 DC CL79'PVTNPOUT - # OF PGS PAGED OUT, EXCLUDING SWAP-OUTS AND VIO '
 DC CL79'PVTVAMI  - NUMBER OF VIO PAGE INS, EXCLUDING SWAP          '
 DC CL79'PVTVAMO  - NUMBER OF VIO PAGE OUTS, EXCLUDING SWAP         '
 DC CL79'PVTVAMR  - NUMBER OF VIO RECLAIMS                          '
 DC CL79'PVTSPIN  - NUMBER OF PAGES SWAPPED IN                      '
 DC CL79'PVTSPOUT - NUMBER OF PAGES SWAPPED OUT                     '
 DC CL79'PVTNPREC - NUMBER OF PAGES RECLAIMED                       '
 DC CL79'PVTNSWPS - NUMBER OF SUCCESSFUL SWAPS                      '
 DC CL79'PVTCAIN  - NUMBER OF NON-VIO PAGE-INS                      '
 DC CL79'PVTCAOUT - NUMBER OF COMMON AREA NON-VIO PAGE-OUTS         '
 DC CL79'PVTCAREC - # OF RECLAIMS OF COMMON AREA NON-VIO PAGE-OUTS  '
 DC CL79'PVTSPREC - NUMBER OF PRIVATE AREA PAGEABLE PAGES RECLAIMED ACR$
               OSS A SWAP      '
 DC CL79'PVTCFMCT - # OF FRAMES CURRENTLY ASSIGNED TO PAGEABLE COMMON A$
               REAS (CSA && LPA '
 DC CL79'           NOTE:  PVTCFMCT IS DISPLAYED AS THE ACTUAL NUMBER/1$
               0, NOT A RATE.  '
 DC CL79' '
 DC CL79'PAGERATE, UIC AND CPU PERCENTAGE FIELDS ARE ALL EXTRACTED FROM$
                THE RCT'
 DC CL79'MAINTAINED BY THE DREADED SRM.'
 DC 79C'_'                                                           '
         SPACE 4
SCR1     DCMSFMT
SCR1HDR  DCMSFLD 79
SCR1MSG  DCMSFLD 79,ALPHA,INTEN=HI,CURSOR=AFTER
SCR1SCAL DCMSFLD 79
SCR1LNE0 DCMSFLD 79,INTEN=HI
         DCMSFLD 79,INTEN=LO
         DCMSFLD 79,INTEN=HI
         DCMSFLD 79,INTEN=LO
         DCMSFLD 79,INTEN=HI
         DCMSFLD 79,INTEN=LO
         DCMSFLD 79,INTEN=HI
         DCMSFLD 79,INTEN=LO
         DCMSFLD 79,INTEN=HI
         DCMSFLD 79,INTEN=LO
         DCMSFLD 79,INTEN=HI
         DCMSFLD 79,INTEN=LO
         DCMSFLD 79,INTEN=HI
         DCMSFLD 79,INTEN=LO
SCR1SCA2 DCMSFLD 79,INTEN=HI
         DCMSFLD 79,INTEN=HI
         DCMSFLD 79,INTEN=HI
         DCMSFLD 79,INTEN=HI
         DCMSFLD 79,INTEN=HI
*        DCMSFLD 79,INTEN=HI
         DCMSFEND
         SPACE 2
         PRINT GEN
         SPACE 2
SPAMEX   DCMSTOP SCREEN=NO
IOAREA   EQU   *
         DSGEN SCR1
         EJECT
FLAG     DS    X
FAUTO    EQU   X'80'
PCOUNTRS DS    14F                      PREVIOUS COUNTER VALUES
COPYPVT  DS    14F                      COPY OF PVT
OLDPVT   DS    14F                      PREVIOUS PVT
PTIME    DS    F                        PREVIOUS TIME OF DAY
ATIME    DS    F                        ACTUAL ELAPSED TIME
DWD      DS    D
         TITLE 'S P A M  - MVS CVT DSECT DEFINITION'
         CVT   DSECT=YES
         TITLE 'S P A M  - MVS PVT DSECT DEFINITION'
         IHAPVT
         END
