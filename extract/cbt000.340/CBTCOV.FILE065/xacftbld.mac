TBLD     TITLE 'XACFTBLD ACF2 UCT DYNAMIC TABLE BUILDER'        IV02100
****************************************************************IV02100
*  THIS ROUTINE WILL BUILD A TABLE FROM AN ENTRY                IV02100
*  RECORD IN THE INFORMATION STORAGE DATABASE;                  IV02100
*  THE RECORD MUST BE AN ENTRY OF TYPE(UCT).                    IV02100
*                                                               IV02100
*  AT ENTRY R1 POINTS TO A PARMLIST OF THE FORM:                IV02100
*    +0 ADDRESS OF RECORD KEY                                   IV02100
*    +4 ADDRESS OF TABLE DESCRIPTOR BLOCK                       IV02100
*    +8 ADDRESS OF WHERE TABLE POINTER IS TO BE STORED          IV02100
*   +12 ADDRESS OF WHERE TABLE ENTRY COUNT IS TO BE STORED      IV02100
*       IF 0, THEN COUNT OF TABLE ENTRIES IS FIRST 4 BYTES      IV02100
*       IF NEGATIVE THEN AN EXISTING TABLE IS USED              IV02100
*   +16 ADDRESS OF FLAG BYTE TO BE SET WHEN TABLE BUILT         IV02100
*   +20 ADDRESS OF FLAG MASK TO OR INTO FLAG BYTE               IV02100
*    TABLE DESCRIPTOR BLOCK:                                    IV02100
*      +0 FULLWORD NUMBER OF SUBELEMENTS IN EACH TABLE ENTRY    IV02100
*      +4 FORMAT OF EACH SUBELEMENT IN EACH TABLE ENTRY         IV02100
*        +0 1 BYTE FLAG 00 FOR NO CONVERSION                    IV02100
*                       08 TO TRANSLATE '*' TO X'00'            IV02100
*                       0C TO CONVERT TO BINARY NUMBERS         IV02100
*        +1 1 BYTE RESERVED                                     IV02100
*        +2 2 BYTE LENGTH OF SUBENTRY                           IV02100
*      +8... NEXT SUB ELEMENT DESCRIPTION                       IV02100
*                                                               IV02100
*        THE PARM LIST DESCRIBES THE TABLE ENTRIES              IV02100
*        THE ENTRY RECORDS IN INFORMATION STORAGE DATABASE      IV02100
*        HAVE AN ENTRY ELEMENT FOR EACH TABLE ENTRY             IV02100
*        EACH SUBELEMENT IN THE ENTRY IS SEPERATED BY           IV02100
*        A '/' EACH SUBELEMENT NEED NOT BE PADDED TO THE        IV02100
*        RIGHT.                                                 IV02100
*                                                               IV02100
****************************************************************IV02100
XACFTBLD CSECT ,                                                IV02100
*                                                               IV02100
*     REGISTER EQUATES                                          IV02100
*                                                               IV02100
         ACFREGS PREFIX=ACFIV,    ACF2 REGISTER EQUATES         IV02100X
               LINK=R7                                          IV02100
         GBLC  &PFX                                             IV02100
         GBLC  &SP                                              IV02100
         GBLC  &ROUTCDE                                         IV02100
&SP      SETC  '245'                                            IV02300
&ROUTCDE SETC  '4200C0A0'                                       IV02300
*                                                               IV02100
*     DSECT DEFINITIONS                                         IV02100
*                                                               IV02100
         ACCVT ,                  ACF2 CVT MAPPING MACRO        IV02100
*                                                               IV02100
XPARMLST DSECT ,                  PARM LIST MAPPING MACRO       IV02100
XPARKEY  DS    A                  ADDRESS OF KEY                IV02100
XPARTABD DS    A                  ADDRESS OF TABLE DESCRIPTOR   IV02100
XPARTABP DS    A                  ADDRESS OF TABLE POINTER      IV02100
*                                 OR ADDRESS OF EXISTING TABLE  IV02100
XPARTABC DS    A                  ADDRESS OF TABLE ENTRY COUNT  IV02100
*                                 OR 0 IF COUNT FRONT OF TABLE  IV02100
*                                 NEGATIVE IF EXISTING TABLE    IV02100
XPARTABF DS    A                  ADDRESS OF TABLE FLAG         IV02100
XPARTABM DS    A                  ADDRESS OF FLAG MASK TO SET   IV02100
*                                 FLAG WITH                     IV02100
XENTDSCR DSECT ,                  TABEL ENTRY DESCRIPTOR        IV02100
XENTNUM  DS    F                  NUMBER OF SUBELEMENTS IN ENTRYIV02100
XENTFLG1 DS    AL1                FLAG BYTE                     IV02100
XENTFLG2 DS    AL1                RESERVED                      IV02100
XENTLEN  DS    AL2                LENGTH OF SUBELEMENT          IV02100
XTABWORK DSECT                                                  IV02100
XTABSAVE DS    18F                SAVE AREA                     IV02100
         ACGRSRC DSECT=NO                                       IV02100
XTABMSG  DS    CL128                                            IV02100
XTABRTCD DS    XL4                                              IV02100
XTABDBLW DS    D                                                IV02100
XTABTABA DS    A                  ADDRESS OF TABLE              IV02100
XTABELEM DS    A                  ADDRESS OF CURRENT BUFFER LOC IV02100
XTABTABE DS    A                  ADDRESS OF CURRENT ENTRY      IV02100
XTABENTL DS    H                  LENGTH OF ONE ENTRY           IV02100
XTABENTN DS    H                  NUMBER OF ENTRIES             IV02100
XTABOFF  DS    H                  OFFSET TO FIRST ENTRY         IV02100
XTABPDSN DS    CL44                                             IV02100
XTABTBL  DS    XL256              DEFINE TRT TABLE              IV02100
XTABBFRL EQU   4096                                             IV02100
XTABBFRO EQU   *-XTABWORK         OFFSET TO BUFFER              IV02100
XTABWRKL EQU   (*-XTABWORK)+XTABBFRL LENGTH OF GETMAINED AREA   IV02100
XTABBFR  DXD   CL(XTABBFRL)                                     IV02100
XACFTBLD CSECT ,                                                IV02100
         ENTER BASEREG=R12,       SET UP LINKAGE                IV02100X
               PARMREG=R11,                                     IV02100X
               GETMAIN=XTABWRKL                                 IV02100
         USING XPARMLST,R11       SET PARMLIST ADDRESSABILITY   IV02100
         USING XTABWORK,R13       SET ADDRESSABILITY            IV02100
         XC    XTABTBL,XTABTBL    CLEAR TRT TABLE               IV02100
         MVI   XTABTBL+C'/',X'04' SET TEST CHARACTER            IV02100
         XC    ACGRSRC(ACGRSLEN),ACGRSRC CLEAR PARMLIST         IV02100
         MVI   ACGFCN,X'04'       SET REQUEST TYPE              IV02100
         MVI   ACGSFCN,ACGSRTN    SET OPTION TYPE               IV02100
         LA    R1,XTABMSG         GET ADDRESS OF MESSAGE AREA   IV02100
         ST    R1,ACGMSG          STORE MESSAGE AREA ADDRESS    IV02100
         MVC   ACGRTYPE,=C'EUCT'  MOVE IN CLASS AND TYPE        IV02100
         LR    R14,R13            SAVE ADDRESS OF SAVE AREA     IV02100
         A     R14,=A(XTABBFRO)   GET BUFFER OFFSET             IV02100
         ST    R14,ACGREDTA       STORE ENTRY BUFFER            IV02100
         MVC   ACGREDTL,=A(XTABBFRL) STORE LENGTH ENTRY BUFFER  IV02100
         LA    R1,XTABPDSN        GET ADDRESS FOR PSEUDO DSN    IV02100
         ST    R1,ACGRPDSN        STORE ADDRESS FOR PSEUDO DSN  IV02100
         L     R1,XPARKEY         GET ADDRESS OF RECORD KEY     IV02100
         MVC   ACGRNAME,0(R1)     MOVE IN RECORD KEY            IV02100
         ACFINCVT R10,            GET ACF2 CVT ADDRESS          IV02100X
               NONE=RETRNDEQ                                    IV02100
         USING ACCVT,R10          SET ACCVT ADDRESSABILITY      IV02100
         ACFSVC ACGFCN,TYPE=A,    ISSUE ACF2 SVC TO READ        IV02100X
               CVT=HAVE,                                        IV02100X
               NONE=RETRNDEQ                                    IV02100
         LTR   R15,R15            Q. GOOD RETURN CODE           IV02100
         BNZ   ERRMSG             A. NO, ISSUE WTO & POST FLAG  IV02100
         L     R8,XPARTABP        GET ADDRESS OF TABLE          IV02100
         L     R6,XPARTABC        GET ADDRESS OF COUNT          IV02100
         L     R6,0(R6)           GET COUNT                     IV02100
         TM    XPARTABC,X'80'     Q. EXISTING TABLE?            IV02100
         BO    TABLEBLD           A. YES, FILL EXISTING TABLE   IV02100
         XR    R6,R6              CLEAR COUNTER                 IV02100
         L     R2,ACGREDTA        GET ADDRESS OF BUFFER         IV02100
         XR    R3,R3              CLEAR COUNTER                 IV02100
         ICM   R3,B'0011',0(R2)   GET LENGTH OF DATA            IV02100
         BNP   TABLEBLD           IF NOT POSITIVE BUILD TABLE   IV02100
         LA    R2,2(,R2)          GO TO FIRST ELEMENT LENGTH    IV02100
         XR    R5,R5              CLEAR COUNTER                 IV02100
CNTLOOP  EQU   *                                                IV02100
         IC    R5,0(,R2)          GET ELEMENT LENGTH            IV02100
         SR    R3,R5              SUBTRACT ENTRY LENGTH         IV02100
         BNP   TABLEBLD           IF NOT POSITIVE BUILD TABLE   IV02100
         LA    R2,1(R5,R2)        GET ADDRESS OF NEXT ELEMENT   IV02100
         LA    R6,1(,R6)          INCREMENT COUNTER             IV02100
         BCT   R3,CNTLOOP         ADJUST TOTAL AND LOOP         IV02100
TABLEBLD EQU   *                                                IV02100
         STH   R6,XTABENTN        SAVE NUMBER OF ENTRIES        IV02100
         XR    R3,R3              CLEAR R3                      IV02100
         L     R1,XPARTABD        ADDRESS OF TABLE OF ENTRIES   IV02100
         USING XENTDSCR,R1        SET DESCRIPTOR ADDRESSABILITY IV02100
         L     R2,XENTNUM         GET NUMBER OF SUB-ENTRIES     IV02100
SUBLOOP  EQU   *                                                IV02100
         LA    R1,XENTFLG1        GET ADDRESS OF NEXT SUBENT    IV02100
         USING XENTFLG1,R1        SET SUB ENTRY ADDRESSABILITY  IV02100
         AH    R3,XENTLEN         ADD SUB-ENTRY LENGTH          IV02100
         BCT   R2,SUBLOOP         DECREMENT COUNT AND LOOP      IV02100
         DROP  R1                                               IV02100
         STH   R3,XTABENTL        SAVE ENTRY LENGTH             IV02100
         MR    R2,R6              CALCULATE LENGTH OF TABLE     IV02100
         XR    R0,R0              CLEAR R0                      IV02100
         ICM   R1,B'1111',XPARTABC Q. IS COUNT ADDRESS 0 ?      IV02100
         BNZ   NOOFFSET           A. NO, COUNT IS NOT IN TABLE  IV02100
         LA    R0,4               LOAD OFFSET                   IV02100
         AR    R3,R0              ADD OFFSET                    IV02100
NOOFFSET EQU   *                                                IV02100
         STH   R0,XTABOFF         STORE OFFSET TO FIRST ENTRY   IV02100
         LA    R3,7(,R3)          ADJUST LENGTH                 IV02100
         SRL   R3,3               ROUND DOWN TO NEAREST 8       IV02100
         SLL   R3,3               "                             IV02100
         GETMAIN RU,LV=(R3),SP=&SP GET STORAGE FOR TABLE        IV02100
         LR    R8,R1              SAVE ADDRESS OF TABLE         IV02100
         ST    R8,XTABTABA        SAVE TABLE ADDRESS            IV02100
         XR    R14,R14            CLEAR R14                     IV02100
         XR    R15,R15            CLEAR R15                     IV02100
         ICM   R15,B'1000',=C' '  SET BLANK FILL                IV02100
         LR    R0,R8              GET ADDRESS OF WORKAREA       IV02100
         LR    R1,R3              GET LENGTH OF AREA            IV02100
         MVCL  R0,R14             CLEAR AREA                    IV02100
         LR    R5,R8              GET ADDRESS OF TABLE          IV02100
         AH    R5,XTABOFF         ADD OFFSET TO FIRST ENTRY     IV02100
         L     R4,ACGREDTA        GET ADDRESS OF BUFFER         IV02100
         LA    R4,2(,R4)          GO TO FIRST ELEMENT LENGTH    IV02100
         ICM   R1,B'1111',XPARTABC GET ADDRESS OF FLAG          IV02100
         BNZ   NXTTABEL           IF NONZERO USE THIS ADDRESS   IV02100
         ST    R6,0(,R8)          STORE COUNT                   IV02100
NXTTABEL EQU   *                                                IV02100
         ST    R4,XTABELEM        SAVE ADDRESS OF ENTRY         IV02100
         ST    R5,XTABTABE        SAVE TABLE ENTRY              IV02100
         XR    R3,R3              CLEAR COUNTER                 IV02100
         IC    R3,0(,R4)          GET ELEMENT LENGTH            IV02100
         LA    R4,1(,R4)          INCREMENT ADDRESS             IV02100
         L     R10,XPARTABD       GET SUBENTRY TABLE ADDRESS    IV02100
         USING XENTDSCR,R10       SET DESCRIPTOR ADDRESSABILITY IV02100
         L     R9,XENTNUM         GET COUNT OF SUBENTRIES       IV02100
         LA    R2,4               PRESET R2                     IV02100
SUBLOOP2 EQU   *                                                IV02100
         LA    R10,XENTFLG1       GET NEXT SUB ENTRY            IV02100
         USING XENTFLG1,R10       SET SUBENT ADDRESSABILITY     IV02100
         CLI   XENTFLG1,X'08'     Q. = 8                        IV02100
         BNE   NOASTER            A. NO, SKIP ASTERISK CHECK    IV02100
         MVC   XTABTBL+C'*'(1),XENTFLG1 SET TEST CHARACTER      IV02100
NOASTER  EQU   *                                                IV02100
         BCTR  R3,0               DECREMENT LENGTH BY 1         IV02100
         LTR   R3,R3              Q. VALID LENGTH               IV02100
         BM    ERROR              A. NO, GO TO ERROR            IV02100
RECHECK  EQU   *                                                IV02100
         LTR   R2,R2              Q. R2=0?                      IV02100
         BNP   ERROR              A. YES, ERROR                 IV02100
         XR    R2,R2              CLEAR R2                      IV02100
         EX    R3,SLASHCHK        EXECUTE CHECK FOR SLASH       IV02100
         B     NEXT(R2)           TAKE APPROPRIATE ACTION       IV02100
NEXT     EQU   *,4,C'I'                                         IV02100
         B     LSTENTRY           HANDLE LAST PORTION OF ENTRY  IV02100
         B     SLASH              MOVE DATA IF SLASH FOUND      IV02100
         B     ASTERISK           CHANGE CHARACTER IF ASTERISK  IV02100
LSTENTRY EQU   *,4,C'I'                                         IV02100
         LR    R1,R3              SET R1 TO TOTAL LENGTH        IV02100
         B     SUBCHECK           NOW CHECK LENGTH              IV02100
ASTERISK EQU   *,4,C'I'                                         IV02100
         MVI   0(R1),X'00'        REPLACE ASTERISK WITH NULL    IV02100
         B     RECHECK            REPEAT TRT                    IV02100
NUMERIC  EQU   *,2,C'I'                                         IV02100
         XC    XTABDBLW,XTABDBLW  CLEAR DOUBLE WORD             IV02100
         EX    R1,MVZ             MOVE ZONES                    IV02100
         EX    R1,CLC             Q. ALL CHARACTERS NUMERIC     IV02100
         BNE   ERROR              A. NO, GO TO ERROR            IV02100
         XC    XTABDBLW,XTABDBLW  CLEAR DOUBLE WORD             IV02100
         EX    R1,PACK            PACK DATA                     IV02100
         CVB   R0,XTABDBLW        CONVERT TO BINARY             IV02100
         CLI   XENTLEN+1,1        Q. 1 BYTE LEN                 IV02100
         BNE   TWO                A. NO, CHECK FOR 2            IV02100
         STCM  R0,B'0001',0(R5)   STORE NUMBER                  IV02100
         B     MOVED              GO TO NEXT ENTRY              IV02100
TWO      EQU   *                                                IV02100
         CLI   XENTLEN+1,2        Q. 2 BYTE LEN                 IV02100
         BNE   THREE              A. NO, CHECK FOR 3            IV02100
         STCM  R0,B'0011',0(R5)   STORE NUMBER                  IV02100
         B     MOVED              GO TO NEXT ENTRY              IV02100
THREE    EQU   *                                                IV02100
         CLI   XENTLEN+1,3        Q. 3 BYTE LEN                 IV02100
         BNE   FOUR               A. NO, CHECK FOR 4            IV02100
         STCM  R0,B'0111',0(R5)   STORE NUMBER                  IV02100
         B     MOVED              GO TO NEXT ENTRY              IV02100
FOUR     EQU   *                                                IV02100
         CLI   XENTLEN+1,4        Q. 4 BYTE LEN                 IV02100
         BNE   ERROR              A. NO, ERROR                  IV02100
         STCM  R0,B'1111',0(R5)   STORE NUMBER                  IV02100
         B     MOVED              GO TO NEXT ENTRY              IV02100
SLASH    EQU   *,2,C'I'                                         IV02100
         SR    R1,R4              GET OFFSET TO NEXT FIELD      IV02100
         BCTR  R1,0               DECREMENT LENGTH BY 1         IV02100
SUBCHECK EQU   *,2,C'I'                                         IV02100
         LTR   R1,R1              Q. VALID LENGTH               IV02100
         BM    ERROR              A. NO, GO TO ERROR            IV02100
         CLI   XENTFLG1,X'0C'     Q. NUMERIC CONVERSION         IV02100
         BE    NUMERIC            A. YES, PROCESS NUMERIC ENTRY IV02100
         CH    R1,2(,R10)         Q. LENGTH TOO LONG?           IV02100
         BNL   ERROR              A. YES, ISSUE WTO             IV02100
         EX    R1,DATAMOVE        MOVE DATA                     IV02100
MOVED    EQU   *                                                IV02100
         SR    R3,R1              ADJUST LENGTH                 IV02100
         BCTR  R3,0               DECREMENT LENGTH              IV02100
         LA    R4,2(R1,R4)        GET ADDRESS OF NEXT DATA      IV02100
         AH    R5,XENTLEN         GET ADDRESS OF NEXT DATA      IV02100
         BCT   R9,SUBLOOP2        DECREMENT COUNT AND LOOP      IV02100
         BCTR  R4,0               DECREMENT ADDRESS             IV02100
         LTR   R2,R2              Q. R2=0?                      IV02100
         BP    ERROR              A. NO, ERROR                  IV02100
ENDTABEL EQU   *,4,C'I'                                         IV02100
         BCT   R6,NXTTABEL        DECREMENT COUNT AND LOOP      IV02100
         L     R1,XPARTABP        GET ADDRESS OF TABLE POINTER  IV02100
         MVC   0(4,R1),XTABTABA   MOVE IN ADDRESS               IV02100
         ICM   R1,B'1111',XPARTABC GET ADDRESS OF COUNT         IV02100
         BM    STRTABEL           GO TO SET FLAG
         BNZ   STRCNT             IF NONZERO USE THIS ADDRESS   IV02100
         L     R1,XTABTABA        GET ADDRESS OF COUNT          IV02100
STRCNT   EQU   *,4,C'I'                                         IV02100
         LH    R0,XTABENTN        GET NUMBER OF ENTRIES         IV02100
         ST    R0,0(,R1)          STORE COUNT                   IV02100
STRTABEL EQU   *,4,C'I'                                         IV02100
         L     R1,XPARTABF        GET ADDRESS OF FLAG BYTE      IV02100
         L     R15,XPARTABM       GET ADDRESS OF FLAG MASK      IV02100
         IC    R15,0(,R15)        GET FLAG                      IV02100
         EX    R15,ORFLAG         TURN ON FLAG BIT              IV02100
RETRNDEQ EQU   *,4,C'I'                                         IV02100
         LEAVE GETMAIN=XTABWRKL,  RETURN                        IV02100X
               RETCODE=0                                        IV02100
ORFLAG   OI    0(R1),X'00'        OR ON THE FLAG                IV02100
SLASHCHK TRT   0(*-*,R4),XTABTBL  TEST FOR SLASH                IV02100
DATAMOVE MVC   0(*-*,R5),0(R4)    MOVE DATA                     IV02100
MVZ      MVZ   XTABDBLW(*-*),0(R4) MOVE DATA                    IV02100
CLC      CLC   XTABDBLW(*-*),=C'0000000000000000' CHECK NUMERIC IV02100
PACK     PACK  XTABDBLW,0(*-*,R4) CHECK NUMERIC                 IV02100
ERROR    EQU   *                                                IV02100
         MVC   XTABMSG(ERRMSG1L),ERRMSG1 MOVE IN ERROR MESSAGE  IV02100
*     MOVE IN KEY                                               IV02100
         MVC   XTABMSG+MSGKEY-ERRMSG1(L'MSGKEY),ACGRNAME        IV02100
         BAL   LINK,ERRORMSG      LINK TO MESSAGE HANDLER       IV02100
         MVC   XTABMSG(ERRMSG2L),ERRMSG2 MOVE IN ERROR MESSAGE  IV02100
*     MOVE IN ENTRY                                             IV02100
         L     R4,XTABELEM        RESTORE ENTRY ADDRESS         IV02100
         XR    R3,R3              CLEAR R3                      IV02100
         IC    R3,0(,R4)          GET ELEMENT LENGTH            IV02100
         LA    R1,40              SET MAX LENGTH                IV02100
         CR    R3,R1              CHECK FOR VALID LENGTH        IV02100
         BH    *+6                SKIP NEXT                     IV02100
         LR    R1,R3              USE LENGTH                    IV02100
         EX    R1,MOVENTRY        EXECUTE MOVE                  IV02100
         LA    R4,1(R3,R4)        INCREMENT ADDRESS             IV02100
         L     R5,XTABTABE        GET ENTRY ADDRESS             IV02100
         BAL   LINK,ERRORMSG      LINK TO MESSAGE HANDLER       IV02100
         B     ENDTABEL           TRY TO GET NEXT ENTRY         IV02100
MOVENTRY MVC   XTABMSG+MSGENTRY-ERRMSG2(*-*),1(R4)              IV02100
ERRMSG   EQU   *                                                IV02100
         BAL   LINK,ERRORMSG      LINK TO MESSAGE HANDLER       IV02100
         MVC   XTABMSG(ERRMSG1L),ERRMSG1 MOVE IN ERROR MESSAGE  IV02100
*     MOVE IN KEY                                               IV02100
         MVC   XTABMSG+MSGKEY-ERRMSG1(L'MSGKEY),ACGRNAME        IV02100
         BAL   LINK,ERRORMSG      LINK TO MESSAGE HANDLER       IV02100
         B     STRTABEL           GO FLAG AS DONE               IV02100
ERRORMSG EQU   *                                                IV02100
         MVI   XTABMSG+2,X'80'    INDICATE ROUTE CODES PRESENT  IV02100
         LA    R1,XTABMSG         GET ADDRESS OF MESSAGE        IV02100
         LH    R2,XTABMSG         GET LENGTH                    IV02100
         LA    R2,XTABMSG(R2)     GET ROUTE CODE ADDRESS        IV02100
         MVC   0(4,R2),=XL4'&ROUTCDE' CRITICAL ACTION           IV02100
         WTO   MF=(E,(1))         ISSUE WTO                     IV02100
         BR    LINK               RETURN FOR POST-ERROR ACTION  IV02100
*                                                               IV02100
*     ERROR MESSAGES                                            IV02100
*                                                               IV02100
ERRMSG1  DC    AL2(L'LMSG1+4,0)                                 IV02100
MSG1     DC    C'&PFX.014 ACF2, ERROR PROCESSING'               IV02100
         DC    C' ACF2 DYNAMIC UCT TABLE KEY '                  IV02100
MSGKEY   DC    CL40' '                                          IV02100
LMSG1    DS    0CL(*-MSG1)                                      IV02100
ERRMSG1L EQU   *-ERRMSG1                                        IV02100
ERRMSG2  DC    AL2(L'LMSG2+4,0)                                 IV02100
MSG2     DC    C'&PFX.019 ACF2, ERROR PROCESSING'               IV02100
         DC    C' ACF2 DYNAMIC UCT TABLE ENTRY '                IV02100
MSGENTRY DC    CL40' '                                          IV02100
LMSG2    DS    0CL(*-MSG2)                                      IV02100
ERRMSG2L EQU   *-ERRMSG2                                        IV02100
         END   ,                                                IV02100
