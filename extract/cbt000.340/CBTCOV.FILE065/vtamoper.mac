         TITLE '* * *  POF - VTAM SECONDARY PROGRAM OPERATOR  * * *'
***********************************************************************
*                                                                     *
*  PURPOSE - PROVIDE VTAM SECONDARY PROGRAM OPERATOR FOR USE IN TSO   *
*            COMMAND.                                                 *
*                                                                     *
*  OPERATION - POF OPENS ITS OWN ACB, AND USING TPUT/TGET AND         *
*              SENDCMD/RCVCMD ALLOWS AN AUTHORIZED TSO USER TO        *
*              BE A VTAM SECONDARY PROGRAM OPERATOR.  THE COMMANDS    *
*              AND RESPONSES ARE ALSO RECORDED ON SYSLOG.             *
*                                                                     *
*              VTAMOPER REQUIRES THAT THE USER HAVE OPERATOR          *
*              AUTHORITY TO ISSUE VTAM COMMANDS.                      *
*                                                                     *
*     POF - DOUG MOORE, SCHERING-PLOUGH, INC                          *
*           3030 JACKSON AVE, MEMPHIS, TN 38151                       *
*           901/320-2883                                              *
*                                                                     *
*     POF - HOWARD DEAN, GTE DATA SERVICES, INC.                      *
*           4750 LINCOLN BLVD. MARINA DEL REY, CA 90291               *
*           213/821-0511                                              *
*                                                                     *
*     THIS VTAM SECONDARY PROGRAM OPERATOR ONLY RUNS UNDER TSO.       *
*     THE TSO USER IS REQUIRED TO HAVE 'OPER' AUTHORIZATION. IT ALSO  *
*     NECESSARY TO ADD THE FOLLOWING TO SYS1.VTAMLST(APPLIDS):        *
*                                                                     *
*     VTAMOPR1 APPL  PRTCT=OPERATOR,     TSO COMMAND VTAM SPO         *
*                    AUTH=(ACQ,SPO),                                  *
*                    EAS=1                                            *
*     VTAMOPR2 APPL  PRTCT=OPERATOR,     TSO COMMAND VTAM SPO         *
*                    AUTH=(ACQ,SPO),                                  *
*                    EAS=1                                            *
*     VTAMOPR3 APPL  PRTCT=OPERATOR,     TSO COMMAND VTAM SPO         *
*                    AUTH=(ACQ,SPO),                                  *
*                    EAS=1                                            *
*                                                                     *
*     SUPPORT ADDED FOR -   * = REPEAT LAST COMMAND         *HMD 08/81*
*                       -   ? = SHOW LAST COMMAND           *HMD 08/81*
*                       -   X = PCF EXIT                    *HMD 08/81*
*                                                           *HMD 05/82*
*     SUPPORT ADDED FOR -   PROGRAM FUNCTION KEYS           *HMD 05/82*
*                                                           *HMD 05/82*
*    ALL COMMANDS AND RESPONSES ARE LOGGED TO SYSLOG.                 *
*    UP TO 3 TSO USERS AT A TIME MAY BE EXECUTING POF.                *
*                                                                     *
*  WRITTEN BY DOUG MOORE      - SEPTEMBER 1978                        *
*  UPDATED BY HOWARD M. DEAN  - AUGUST, 1981                          *
*  UPDATED BY HOWARD M. DEAN  - MARCH,  1983                *HMD 03/83*
*                                                                     *
*     PROGRAM FUNCTION KEY DEFINITIONS:                               *
*                                                                     *
*   +----------+----------+----------+                                *
*   ×   HELP   × D BFRUSE ×   END    ×                                *
*   +----------+----------+----------+                                *
*   × D PENDING× D APPLS  × D MAJNODE×                                *
*   +----------+----------+----------+                                *
*   × D LINES  × D CLSTRS × D TERMS  ×                                *
*   +----------+----------+----------+                                *
*   × D E,ID=  × V ACT    × V INACT  ×                                *
*   +----------+----------+----------+                                *
***********************************************************************
         EJECT                                              *HMD 11/79*
         MACRO
&NAME    $POST &ECB=
         GBLB  &DONE
         L     14,&ECB .           ECB TO BE POSTED
         L     15,$COMP .          COMPLETION BIT AND CODE TO BE
*                                  COMPARED AND SWAPPED
         TM    &ECB,X'80' .        WAIT BIT ON
         BO    $PST&SYSNDX .       ...YES EXECUTE POST MACRO
         N     14,$WAIT .          COMPARE OPERAND HAS WAIT BIT OFF
         CS    14,15,&ECB .        COMPARE AND SWAP COMPETION BIT
*                                  AND CODE
         BZ    $CMP&SYSNDX .       BRANCH IF CS IS SUCCESSFUL
$PST&SYSNDX DS    0H .
         MNOTE '        POST  &ECB                DO THE POST'
         POST  &ECB
$CMP&SYSNDX DS    0H
         AIF   (&DONE).BYPASS
&DONE    SETB  1
         B     $POSTEND
         DS    0F
$COMP    DC    X'40000000' .       COMPLETION CODE
$WAIT    DC    X'7FFFFFFF' .       POST CODE
         DS    0F
$POSTEND DS    0H
.BYPASS  ANOP
         MEND
         EJECT
POF      CSECT
         SAVE  (14,12),,POF-&SYSDATE-&SYSTIME   SAVE REGISTERS
         LR    R12,R15             LOAD BASE REGISTER
         USING POF,R12
         ST    R12,STMREXTA
         LR    R2,R13              SAVE PREVIOUS RSA POINTER
         LA    R13,POFRSA          POINT TO MY RSA
         ST    R2,4(R13)           CHAIN SAVE AREAS
         ST    R13,8(R2)           CHAIN SAVE AREAS
         SPACE 2
         USING PSA,R0              ADDRESS THE PSA          *HMD 08/81*
         L     R2,PSAAOLD          GET A(ASCB)
         USING ASCB,R2
         ICM   R2,B'1111',ASCBTSB  GET A(TSB)
*                                  Q. IS THIS TSO (A(TSB) NOT = 0)
         BZ    POFRTN              ...NO, FORGET IT
         USING CPPL,R1             ADDRESS THE CPPL         *HMD 08/81*
         ST    R1,CPPLPTR          SAVE THE ADDR FOR SCAN   *HMD 08/81*
         TM    CPPLCBUF,X'80'      CALL VIA THE 'CALL' CMD  *HMD 08/81*
         BO    POFRTN              YES, NOT ALLOWED         *HMD 08/81*
         MVC   CSPLUPT,CPPLUPT     GET A(UPT)               *HMD 08/81*
         MVC   CSPLECT,CPPLECT     GET A(ECT)               *HMD 08/81*
         L     R2,CPPLPSCB         GET A(PSCB)
         USING PSCB,R2
         DROP  R1                                           *HMD 08/81*
         MVC   POFUSRID,PSCBUSER   SAVE USERID
         TM    PSCBATR1,PSCBCTRL   Q. OPER AUTHORIZED
         BO    POFAUTH             ...YES, OK TO PROCEED
         MVC   POFOUT(19),=C'USER NOT AUTHORIZED'
         TPUT  POFOUT,19
         B     POFRTN              DONT LET THEM PLAY
         DROP  R2
         EJECT
POFAUTH  DS    0H
         OPEN  (POFACB)            OPEN SPO ACB
         LTR   R15,R15             Q. OPEN OK
         BZ    POFOPNOK            ...YES, CONTINUE
         SPACE 1                                            *HMD 08/81*
POFOPNF  DS    0H
         LA    R2,POFACB           POINT TO ACB             *HMD 08/81*
         USING IFGACB,R2           ADDRESS THE ACB          *HMD 08/81*
         CLI   ACBOFLGS,X'02'      Q. POSSIBLE ACB OPENED?  *HMD 08/81*
         BNE   POFOPNF2            ...NO, SOMETHING ELSE    *HMD 08/81*
         CLI   ACBERFLG,X'58'      Q. POSSIBLE ACB OPENED?  *HMD 08/81*
         BNE   POFOPNF2            ...NO, SOMETHING ELSE    *HMD 08/81*
         CLC   =CL8'VTAMOPR3',POFACBAI+1                    *HMD 08/81*
*                                  IS THIS THE LAST ONE?    *HMD 08/81*
         BE    POFMAXU             YES..MAX USERS LOGGED ON *HMD 08/81*
         AP    POFACB#,=PL1'1'     GET NEXT ACB NUMBER      *HMD 08/81*
         UNPK  POFACBAI+8(1),POFACB#    MOVE IN ACB NO.     *HMD 05/82*
         OI    POFACBAI+8,X'F0'    FIX SIGN UP              *HMD 05/82*
         B     POFAUTH             RE-OPEN THE ACB          *HMD 08/81*
POFMAXU  DS    0H                  MAX USERS LOGGED ON      *HMD 08/81*
         MVC   POFOUT(28),=C'MAXIMUM SPO USERS LOGGED ON '  *HMD 08/81*
         TPUT  POFOUT,28
         B     POFRTN              RETURN TO CALLER         *HMD 08/81*
         SPACE
POFOPNF2 DS    0H
         MVC   POFOUT(39),=C'OPEN FAILED FOR VTAM SPO ACB - XXXXXXXX'
         MVC   POFOUT+31(8),POFACBAI+1  INSERT ACB NAME     *HMD 08/81*
         TPUT  POFOUT,39                PUT TO TERMINAL     *HMD 08/81*
         MVC   POFDBLWK+1(1),ACBOFLGS   GET OPEN FLAGS
         UNPK  POFDBLWK(1),POFDBLWK+1(1)   PREPARE FOR CONVERSION
         MVC   POFDBLWK+3(1),ACBERFLG   GET ERROR FLAGS
         UNPK  POFDBLWK+2(1),POFDBLWK+3(1) PREPARE FOR CONVERSION
         NC    POFDBLWK(4),=X'0F0F0F0F'    PREPARE FOR TRANSLATE
         TR    POFDBLWK(4),POFTRTBL     TRANSLATE
         MVC   POFMSG1(4),POFDBLWK    PUT IN MESSAGE
         TPUT  POFMSG1,L'POFMSG1
         B     POFRTN                 OPEN FAILED SO GET OUT
         SPACE
         DROP  R2
         EJECT
POFOPNOK DS    0H
         GTSIZE ,                  GET SCREEN SIZE          *HMD 05/82*
         STC   R0,GTSIZE0          SAVE FOR LATER TEST      *HMD 05/82*
         STC   R1,GTSIZE1          SAVE FOR LATER TEST      *HMD 05/82*
         MVC   WTOLTH,=AL2(33)     LENGTH OF MESSAGE        *HMD 08/81*
         MVC   WTOTXT(7),POFUSRID  PUT USERID IN MESSAGE    *HMD 08/81*
         MVC   WTOTXT+7(14),=C' LOGGED ON TO '              *HMD 08/81*
         MVC   WTOTXT+21(8),POFACBAI+1   PUT ACB IN MSG     *HMD 08/81*
         WTO   MF=(E,WTOLIST)      WRITE LOGON TO SYSLOG
         SPACE
         MVC   POFOUT(40),=C'VTAM SPO FUNCTION ACTIVATED FOR XXXXXXXX'
         MVC   POFOUT+32(8),POFACBAI+1   PUT ACB IN MSG     *HMD 08/81*
         TPUT  POFOUT,40
         B     POFRCV1             ...YES, DO FIRST RCVCMD
POFRCV1  DS    0H
         RCVCMD RPL=POFRPLRC       ISSUE FIRST RCVCMD
         LTR   R15,R15             Q. ACCEPTED
         BZ    POFRQCMD            ...YES, GO REQUEST COMMANDS
         BAL   R10,ABEND           ...NO, GIVE UP
         SPACE 2
POFRQCMD DS    0H
         MVC   POFOUT(18),=C'ENTER VTAM COMMAND'
         TPUT  POFOUT,18
         CLI   GTSIZE0,X'00'       IS THIS 3270 INPUT?      *HMD 05/82*
         BNE   POF3270             ..YES DO 3270 PROCESSING *HMD 05/82*
         TGET  POFIN,L'POFIN       GET THE COMMAND
         LTR   R1,R1               Q. ANY INPUT
         BZ    POFRQCMD            ...NO, GO ASK AGAIN
POFRQCHK DS    0H                                           *HMD 05/82*
         OC    POFIN,=CL80' '      MAKE UPPERCASE FOR WRITING TO SYSLOG
         SPACE 1                                            *HMD 08/81*
         CH    R1,=H'1'            Q. LENGTH GT 1           *HMD 05/82*
         BH    POFRQCH1                                     *HMD 05/82*
         CLI   POFIN,C'E'          Q. THE END?              *HMD 05/82*
         BE    POFEOJ              ..YES, GO TO EOJ         *HMD 05/82*
         SPACE 1                                            *HMD 08/81*
         CLI   POFIN,C'*'          Q. WANT TO DO SAME THING?*HMD 05/82*
         BNE   POFCHKQ             ...NO, GO CHECK FOR QMARK*HMD 05/82*
         L     R1,SAVECMDL         RELOAD LENGTH            *HMD 08/81*
         MVC   POFIN,SAVECMD       RELOAD COMMAND           *HMD 08/81*
         B     POFDOCMD            GO DO COMMAND            *HMD 08/81*
         SPACE 1                                            *HMD 08/81*
POFCHKQ  DS    0H                                           *HMD 08/81*
         CLI   POFIN,C'?'          Q. WANT TO SEE LAST CMD? *HMD 08/81*
         BNE   POFSTORE            ...NO, GO SAVE THIS CMD  *HMD 08/81*
         L     R1,SAVECMDL         RELOAD LENGTH            *HMD 08/81*
         TPUT  SAVECMD,(1)         WRITE LAST COMMAND OUT   *HMD 08/81*
         B     POFRQCMD            GO SEE WHAT TO DO        *HMD 08/81*
         SPACE 1                                            *HMD 08/81*
POFRQCH1 CLC   =CL3'END',POFIN     Q. THE END
         BE    POFEOJ              ...YES, GO TO EOJ
         SPACE 1                                            *HMD 08/81*
POFSTORE DS    0H                                           *HMD 08/81*
         ST    R1,SAVECMDL         SAVE LENGTH              *HMD 08/81*
         MVC   SAVECMD,POFIN       SAVE COMMAND             *HMD 08/81*
POFDOCMD DS    0H                                           *HMD 08/81*
         CH    R1,=H'1'            Q. LENGTH GT 1?          *HMD 05/82*
         BH    POFDOCM1            A. YES, CHECK FOR HELP   *HMD 05/82*
         CLI   POFIN,C'H'          Q. HELP WANTED?          *HMD 05/82*
         BE    POFHELP             ..YES, GO PUT OUT HELP   *HMD 05/82*
POFDOCM1 DS    0H                                           *HMD 05/82*
         CLC   =CL4'HELP',POFIN    Q. HELP WANTED?          *HMD 05/82*
         BE    POFHELP             ...YES, GO DO HELP TEXT  *HMD 05/82*
         CLC   =CL2'X ',POFIN      Q. X FOR PCF?            *HMD 08/81*
         BE    PCFEXIT             ...YES, GO DO IT         *HMD 08/81*
         SPACE 1                                            *HMD 08/81*
* ISSUE THE COMMAND                                         *HMD 08/81*
         LA    R2,POFRPLSC         POINT TO SENDCMD RPL
         USING IFGRPL,R2
         AH    R1,=H'4'            ADD HEADER LENGTH TO COMMAND LENGTH
         ST    R1,RPLRLEN          STORE LENGTH IN RPL
         DROP  R2
         STH   R1,WTOLTH           STORE LENGTH IN WTO
         MVC   WTOTXT(L'POFIN),POFIN   MOVE COMMAND TO WTO
         WTO   MF=(E,WTOLIST)      WRITE COMMAND TO LOG
         SENDCMD RPL=POFRPLSC
         LTR   R15,R15             Q. SUCCESSFUL
         BZ    $WAITCMD            ...YES, WAIT FOR CMD TO BE EXECUTED
         BAL   R10,ABEND           ...NO, GIVE UP
         EJECT                                              *HMD 08/81*
PCFEXIT  DS    0H                                           *HMD 08/81*
         XC    POFCECB,POFCECB     CLEAR ECB                *HMD 08/81*
         XC    POFCBUF+2(2),POFCBUF+2                       *HMD 08/81*
         MVC   POFCBUF+4(80),POFIN                          *HMD 08/81*
         LA    R1,CSPLIST          GET C/S PARM LIST        *HMD 08/81*
         CALLTSSR EP=IKJSCAN       CALL IKJSCAN ROUTINE     *HMD 08/81*
         B     POFRQCMD            GET NEXT COMMAND         *HMD 08/81*
         EJECT                                              *HMD 08/81*
POF3270  DS    0H                  POF 3270 PROCESSING      *HMD 05/82*
         TGET  POFIN,L'POFIN,ASIS  GET THE COMMAND          *HMD 05/82*
         LTR   R1,R1               Q. ANY INPUT?            *HMD 05/82*
         BZ    POFRQCMD            ..NO, GO ASK AGAIN       *HMD 05/82*
         L     R11,=A(AIDTABLE)    POINT TO AID TABLE    V2 *HMD 03/83*
         LA    R10,NUMAIDS         NUMBER OF AIDS           *HMD 05/82*
POFAIDLP DS    0H                                           *HMD 05/82*
         CLC   POFIN(1),0(R11)     Q. IS THIS THE AID       *HMD 05/82*
         BE    POFGAID             ..YES, PROCEED           *HMD 05/82*
         LA    R11,4(,R11)         ..POINT TO NEXT ENTRY    *HMD 05/82*
         BCT   R10,POFAIDLP        LOOP UNTIL DONE          *HMD 05/82*
* NO HITS POINTS TO DEFAULT ENTRY                           *HMD 05/82*
         SPACE 1                                            *HMD 05/82*
POFGAID  L     R2,0(,R11)          GET ADDRESS OF AID TABLE *HMD 05/82*
         CLI   0(R2),X'FF'         Q. ENTER KEY?            *HMD 05/82*
         BNE   POFNOTEN            ..NO, PROCEED            *HMD 05/82*
         MVC   WORKCMD,POFIN       SAVE COMMAND TEMPORARILY *HMD 05/82*
         MVC   POFIN,BLNKLINE      BLANK OUT THE BUFFER     *HMD 05/82*
         MVC   POFIN(L'POFIN-6),WORKCMD+6                   *HMD 05/82*
         SH    R1,=H'6'            FIX LENGTH               *HMD 05/82*
         BNP   POFRQCMD            NO INPUT, GET NEW CMD    *HMD 05/82*
         B     POFRQCHK            RETURN TO NORMAL FLOW    *HMD 05/82*
POFNOTEN DS    0H                                           *HMD 05/82*
         MVC   WORKCMD,POFIN       SAVE INPUT TEMPORARILY   *HMD 05/82*
         MVC   POFIN,BLNKLINE                               *HMD 05/82*
         CLI   0(R2),X'00'         Q. ANY PROCESSING?       *HMD 05/82*
         BNE   POFAIDP             ..YES, PROCEED           *HMD 05/82*
POFNOOPS DS    0H                                           *HMD 05/82*
         SLR   R3,R3               CLEAR REG FOR EXECUTE    *HMD 05/82*
         IC    R3,1(,R2)           GET LENGTH FOR EXECUTE   *HMD 05/82*
         EX    R3,AIDMVC           MOVE IN COMMAND          *HMD 05/82*
         LA    R1,1(,R3)           PUT REAL LENGTH IN R1    *HMD 05/82*
         B     POFRQCHK            CONTINUE WITH THE FLOW   *HMD 05/82*
AIDMVC   MVC   POFIN(0),2(R2)      MOVE COMMAND TO BUFFER   *HMD 05/82*
BLDMVC   MVC   0(0,R4),WORKCMD+6   BUILD NEW COMMAND        *HMD 05/82*
         SPACE 1                                            *HMD 05/82*
POFAIDP  DS    0H                                           *HMD 05/82*
         CLI   0(R2),X'01'         Q. FURTHER PROCESSING?   *HMD 05/82*
         BNE   POFAIDF             ..NO, PROCEED            *HMD 05/82*
         SH    R1,=H'6'            CORRECT LENGTH           *HMD 05/82*
         BNP   POFNOOPS            BRANCH IF NO OPERANDS    *HMD 05/82*
         SLR   R3,R3               CLEAR FOR EXECUTE        *HMD 05/82*
         IC    R3,1(,R2)           GET LENGTH FOR EXECUTE   *HMD 05/82*
         EX    R3,AIDMVC           MOVE IN 1ST PART OF CMD  *HMD 05/82*
         LA    R4,POFIN+1(R3)      POINT TO END OF PIECE    *HMD 05/82*
         BCTR  R1,0                DECREMENT FOR EXECUTE    *HMD 05/82*
         EX    R1,BLDMVC           MOVE IN REMAINDER OF CMD *HMD 05/82*
         LA    R1,2(R1,R3)         ADD NEW PART TO TOTAL    *HMD 05/82*
         B     POFRQCHK            RETURN TO NORMAL FLOW    *HMD 05/82*
         SPACE 1                                            *HMD 05/82*
POFAIDF  DS    0H                                           *HMD 05/82*
         L     R11,=A(BADAID)      POINT TO UNSUPPORTED AID *HMD 05/82*
         B     POFGAID             THROW IN THE TOWEL       *HMD 05/82*
         EJECT                                              *HMD 05/82*
POFHELP  DS    0H
         L     R11,=A(HELPTXT)     POINT TO TEXT            *HMD 05/82*
         LA    R10,L'HELP1         LENGTH OF TPUT           *HMD 05/82*
POFHLOPA DS    0H                                           *HMD 05/82*
         CLI   0(R11),X'FF'        END OF TEXT              *HMD 05/82*
         BE    POFHLOPB            YES, GET OUT             *HMD 05/82*
         LR    R1,R11              POINT TO TEXT            *HMD 05/82*
         LR    R0,R10              LENGTH TO PUT            *HMD 05/82*
         TPUT  (1),(0),R                                    *HMD 05/82*
         LA    R11,0(R10,R11)      BUMP TO NEXT LINE        *HMD 05/82*
         B     POFHLOPA            AND CONTINUE             *HMD 05/82*
POFHLOPB DS    0H                                           *HMD 05/82*
         L     R11,=A(PFK1)        POINT TO PFK1            *HMD 05/82*
         L     R10,=A(PFK13)       POINT TO PFK13           *HMD 05/82*
         LA    R9,12               12* 2 PFKEYS             *HMD 05/82*
         SLR   R2,R2               CLEAR REG                *HMD 05/82*
POFHLOOP DS    0H                                           *HMD 05/82*
         MVC   POFOUT,BLNKLINE     CLEAR LINE               *HMD 05/82*
         MVC   POFOUT(7),=C'PFKXX ='                        *HMD 05/82*
         MVC   POFOUT+30(7),=C'PFKXX ='                     *HMD 05/82*
         LA    R8,25               GET PFK NUMBER           *HMD 05/82*
         SR    R8,R9                                        *HMD 05/82*
         CVD   R8,POFDBLWK                                  *HMD 05/82*
         UNPK  POFDBLWK(3),POFDBLWK+6(2)                    *HMD 05/82*
         MVC   POFOUT+33(2),POFDBLWK+1                      *HMD 05/82*
         OI    POFOUT+34,X'F0'                              *HMD 05/82*
         SP    POFDBLWK+6(2),=P'12'                         *HMD 05/82*
         UNPK  POFDBLWK(3),POFDBLWK+6(2)                    *HMD 05/82*
         MVC   POFOUT+3(2),POFDBLWK+1                       *HMD 05/82*
         OI    POFOUT+4,X'F0'                               *HMD 05/82*
         IC    R2,1(R11)           GET LENGTH OF MSG        *HMD 05/82*
         EX    R2,HELPMVC1         MOVE TO BUFFER           *HMD 05/82*
         LA    R11,3(R2,R11)       POINT TO NEXT MESSAGE    *HMD 05/82*
         IC    R2,1(R10)           GET LENGTH OF MSG        *HMD 05/82*
         EX    R2,HELPMVC2         MOVE TO BUFFER           *HMD 05/82*
         LA    R10,3(R2,R10)       POINT TO NEXT MESSAGE    *HMD 05/82*
         LA    R0,39(0,R2)         GET REAL LENGTH          *HMD 05/82*
         LA    R1,POFOUT           POINT TO OUTPUT BUFFER   *HMD 05/82*
         ICM   R1,B'1000',=X'20'   SET TPUT PARMS           *HMD 05/82*
         TPUT  (1),(0),R           PUT OUT THE MESSAGE      *HMD 05/82*
         BCT   R9,POFHLOOP         LOOP UNTIL DONE          *HMD 05/82*
         B     POFRQCMD            RETURN                   *HMD 05/82*
         SPACE 1                                            *HMD 05/82*
HELPMVC1 MVC   POFOUT+8(0),2(R11)  MOVE IN MESSAGE          *HMD 05/82*
HELPMVC2 MVC   POFOUT+38(0),2(R10) MOVE IN MESSAGE          *HMD 05/82*
         EJECT                                              *HMD 05/82*
$WAITCMD DS    0H
         STIMER REAL,STMREXT,DINTVL=DINTVL
         WAIT  ECB=$WAITECB
         TTIMER CANCEL,TU
         XC    $WAITECB,$WAITECB   CLEAR WAIT BIT
         B     POFRQCMD            ...GO GET ANOTHER COMMAND
         EJECT
ABEND    DS    0H
         LA    R1,1                SET DUMP OPTION
         SLL   R1,31
         ALR   R1,R15              SET ABEND CODE
         ABEND (1)
         EJECT
POFEOJ   DS    0H
         CLOSE (POFACB)            CLOSE THE ACB
         LTR   R15,R15             Q. CLOSE SUCCESSFUL
         BZ    POFCLSOK            ...YES, PROCEED
         MVC   POFOUT(29),=C'CLOSE FAILED FOR VTAM SPO ACB'
         TPUT  POFOUT,29
         SPACE 1                                            *HMD 08/81*
POFCLSF  DS    0H
         LA    R2,POFACB           POINT TO ACB
         USING IFGACB,R2
         CLI   ACBERFLG,X'4C'      Q. MORE MESSAGES OUTSTNG?*HMD 05/82*
         BNE   POFCLSF2            ..NO, PRESS ON           *HMD 05/82*
         MVC   POFOUT(27),=C'OUTSTANDING MESSAGES PURGED'   *HMD 05/82*
         TPUT  POFOUT,27                                    *HMD 05/82*
         B     POFEOJ                   TRY CLOSE AGAIN     *HMD 05/82*
         SPACE 1                                            *HMD 05/82*
POFCLSF2 DS    0H                                           *HMD 05/82*
         MVC   POFDBLWK+1(1),ACBOFLGS   GET OPEN FLAGS
         UNPK  POFDBLWK(1),POFDBLWK+1(1)   PREPARE FOR CONVERSION
         MVC   POFDBLWK+3(1),ACBERFLG   GET ERROR FLAGS
         UNPK  POFDBLWK+2(1),POFDBLWK+3(1) PREPARE FOR CONVERSION
         NC    POFDBLWK(4),=X'0F0F0F0F'    PREPARE FOR TRANSLATE
         TR    POFDBLWK(4),POFTRTBL     TRANSLATE
         MVC   POFMSG1(4),POFDBLWK    PUT IN MESSAGE
         TPUT  POFMSG1,L'POFMSG1
         B     POFRTN                 CLOSE FAILED SO GET OUT
         SPACE 2
POFCLSOK DS    0H
         MVC   WTOLTH,=AL2(34)     LENGTH OF MESSAGE
         MVC   WTOTXT(7),POFUSRID  PUT USERID IN MESSAGE
         MVC   WTOTXT+7(15),=C' LOGGED OFF OF '
         MVC   WTOTXT+22(8),POFACBAI+1   PUT ACB IN MSG     *HMD 08/81*
         WTO   MF=(E,WTOLIST)      WRITE LOGOFF TO SYSLOG
         SPACE
POFRTN   DS    0H
         L     R13,4(R13)          RESTORE CALLERS RSA
         RETURN (14,12),RC=0       RESTORE REGISTERS AND RETURN
         SPACE
         DROP  R12
         EJECT
POFRCVEX DS    0H
         LR    R12,R15             GET NEW BASE
         USING POFRCVEX,R12
         LR    R11,R14             SAVE RETURN REG
         LR    R2,R1               SAVE RPL POINTER
         USING IFGRPL,R2           ADDRESS RPL
         LA    R13,POFRCVSA        POINT TO RSA
         CHECK RPL=POFRPLRC        CHECK RCVCMD RPL
         LTR   R15,R15             Q. SUCCESSFUL
         BZ    POFRCVA             ...YES, PROCEED
         BAL   R10,RCVEABND        ...NO, GIVE UP
         SPACE 3
POFRCVA  DS    0H
         CLC   =XL2'100D',RPLRTNCD Q. ACB CLOSED?           *HMD 08/81*
         BE    POFRCVR             ..YES, DO NO MORE        *HMD 08/81*
         CLC   =XL2'1470',RPLRTNCD Q. ACB CLOSING?       V2 *HMD 03/83*
         BE    POFRCVR             ..YES, DO NO MORE     V2 *HMD 03/83*
         TM    POFCMDI+1,X'C0'     Q. POSSIBLE NO DATA?     *HMD 08/81*
         BC    9,POFRCVB           ..NO, CONTINUE           *HMD 08/81*
*   BRANCH ONES OR ZEROS                                    *HMD 08/81*
         TM    POFCMDI+1,X'80'     Q. END OF MULTI-LINE?    *HMD 08/81*
         BO    POFRCVI             ...YES, NO OUTPUT        *HMD 08/81*
POFRCVB  DS    0H                                           *HMD 08/81*
         ICM   R0,15,RPLRLEN       GET LENGTH OF REPLY
         BZ    POFRCVI             ZERO LENGTH           V2 *HMD 03/83*
         STH   R0,WTOLTH           STORE LENGTH FOR WTO
         SH    R0,=H'4'               LESS HEADER LENGTH
         BNP   POFRCVI             ZERO OR NEGATIVE      V2 *HMD 03/83*
         LA    R1,POFIMSG          A(REPLY)                 *HMD 08/81*
         TPUT  (1),(0),R           PUT OUT THE REPLY
         SPACE
POFRCVN  DS    0H
         CLC   IST314I,POFIMSG     IS THIS AN END MESSABE
         BE    POSTIT
         L     R1,=A(MSGTBL-MSGLEN)                         *HMD 03/83*
*                                  LOAD MSGTBL ADDRESS-LEN  *HMD 03/83*
POFRCVL  DS    0H                  MESSAGE TABLE LOOP       *HMD 03/83*
         LA    R1,MSGLEN(,R1)      LOAD ADDR OF NEXT MSG    *HMD 03/83*
         CLI   0(R1),X'FF'         END OF TABLE?            *HMD 03/83*
         BE    POFRCVN1            YES, NO ERROR MSG     V2 *HMD 03/83*
         CLC   0(MSGLEN,R1),POFIMSG
*                                  CHECK FOR ERROR MESSAGE  *HMD 03/83*
         BNE   POFRCVL             NO, CONTINUE LOOP        *HMD 03/83*
POSTIT   DS    0H
         $POST ECB=$WAITECB
POFRCVN1 DS    0H
         MVC   WTOTXT(L'POFIMSG),POFIMSG  MOVE RESPONSE TO WTO
         WTO   MF=(E,WTOLIST)      WRITE RESPONSE TO LOG
POFRCVI  DS    0H                                           *HMD 08/81*
         RCVCMD RPL=POFRPLRC       ISSUE ANOTHER RCVCMD
         LTR   R15,R15             Q. ACCEPTED
         BZ    POFRCVR             ...YES, RETURN
         BAL   R10,RCVEABND        ...NO, GIVE UP
POFRCVR  DS    0H
         LR    R14,R11             RESTORE RETURN REG
         BR    R14                 RETURN
         SPACE 3
RCVEABND DS    0H
         LA    R1,1                SET DUMP OPTION
         SLL   R1,31
         ALR   R1,R15              SET ABEND CODE
         ABEND (1)                 THIS ABEND WILL CAUSE A SVC DUMP
*                                     ENTITLED 'VTAM IRB ABEND'
         SPACE
         DROP  R2,R12
         SPACE
POFRCVSA DS    18F                 RSA FOR RCVCMD EXIT
         EJECT
POFLERAD DS    0H
POFSYNAD DS    0H
         LR    R12,R15             SET UP BASE
         USING POFLERAD,R12
         LR    R2,R1               SAVE RPL POINTER
         USING IFGRPL,R2
         LR    R11,R14             SAVE RETURN ADDRESS
         CLC   =XL2'100D',RPLRTNCD   Q. IS ACB CLOSED?      *HMD 08/81*
         BE    POFNOERR            ...YES, NOT AN ERROR     *HMD 08/81*
         CLC   =XL2'1470',RPLRTNCD   Q. IS ACB CLOSING?  V2 *HMD 03/83*
         BE    POFNOERR            ...YES, NOT AN ERROR  V2 *HMD 03/83*
         CLC   =XL2'146E',RPLRTNCD   Q. IS THIS PSEUDO ERROR
         BE    POFNOERR            ...YES, NOT REALLY AN ERROR
         CLC   =XL2'1471',RPLRTNCD   Q. IS THIS PSEUDO ERROR
         BE    POFNOERR            ...YES, NOT REALLY AN ERROR
         SPACE
         MVC   POFOUT(14),=C'UNKNOWN FAILED'
         TM    RPLREQ,RPLRVCMD     Q. RCVCMD FAILED
         BNO   POFREQ2             ...NO, TRY SENDCMD
         MVC   POFOUT(7),=C'RCVCMD '  SHOW RCVCMD        V2 *HMD 03/83*
         B     POFREQST                                     *HMD 08/81*
POFREQ2  DS    0H                                           *HMD 08/81*
         TM    RPLREQ,RPLSDCMD     Q. SENDCMD FAILED?       *HMD 08/81*
         BNO   POFREQST            ...NO, THAT'S IT         *HMD 08/81*
         MVC   POFOUT(7),=C'SENDCMD'  SHOW SENDCMD          *HMD 08/81*
POFREQST DS    0H
         TPUT  POFOUT,14
POFLEMSG DS    0H
         MVC   POFDBLWK+1(1),RPLRTNCD   GET RETURN CODE
         UNPK  POFDBLWK(1),POFDBLWK+1(1)   PREPARE FOR CONVERSION
         MVC   POFDBLWK+3(1),RPLFDB2    GET FEEDBACK FIELD
         UNPK  POFDBLWK+2(1),POFDBLWK+3(1) PREPARE FOR CONVERSION
         NC    POFDBLWK(4),=X'0F0F0F0F'    PREPARE FOR TRANSLATE
         TR    POFDBLWK(4),POFTRTBL     TRANSLATE
         MVC   POFMSG2(4),POFDBLWK    PUT IN MESSAGE
         TPUT  POFMSG2,L'POFMSG2
         SPACE
POFLERTN DS    0H
         LA    R15,BIT0            INDICATE SENDCMD/RCVCMD FAILURE
         LR    R14,R11             RELOAD RETURN REG
         BR    R14                 RETURN
         SPACE
POFNOERR DS    0H
         SLR   R15,R15             SET GOOD RETURN CODE
         LR    R14,R11             RELOAD RETURN REG
         BR    R14                 RETURN
         SPACE
         DROP  R2,R12
         EJECT
STMREXT  DS    0H
         USING *,R15
         STM   R13,R6,R13SAVE      SAVE REGISTERS
         LA    R13,SAVEAREA        NEW SAVE AREA
         L     R12,STMREXTA        RESTORE BASEREG
         DROP  R15
         USING POF,R12
         $POST ECB=$WAITECB
         LM    R13,R6,R13SAVE      RESTORE REGISTERS
         BR    R14                 RETURN FROM EXIT
SAVEAREA DS    18F
R13SAVE  DS    10F
STMREXTA DS    A(0)                POINTER TO PARM
         EJECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE 2
BIT0     EQU   X'80'
BIT1     EQU   X'40'
BIT2     EQU   X'20'
BIT3     EQU   X'10'
BIT4     EQU   X'08'
BIT5     EQU   X'04'
BIT6     EQU   X'02'
BIT7     EQU   X'01'
         EJECT
POFRSA   DS    18D                 REGISTER SAVE AREA
POFDBLWK DS    D                   DOUBLE WORD WORK AREA
         SPACE 1                                            *HMD 08/81*
CPPLPTR  DC    A(0)                POINTER TO CPPL          *HMD 08/81*
         SPACE 1                                            *HMD 08/81*
CSPLIST  EQU   *                   LIST OF CPPL ADDRESSES   *HMD 08/81*
CSPLUPT  DC    A(0)                POINTER TO UPT           *HMD 08/81*
CSPLECT  DC    A(0)                POINTER TO ECT           *HMD 08/81*
CSPLECB  DC    A(POFCECB)          POINTER TO C/S ECB       *HMD 08/81*
CSPLFLG  DC    A(POFCFLG)          POINTER TO C/S FLAGS     *HMD 08/81*
CLPLOA   DC    A(POFCOA)           POINTER TO C/S OUT AREA  *HMD 08/81*
CSPLCBUF DC    A(POFCBUF)          POINTER TO C/S CBUF      *HMD 08/81*
         SPACE 1                                            *HMD 08/81*
POFCECB  DC    A(0)                ECB                      *HMD 08/81*
POFCFLG  DC    X'80',AL3(0)        FLAGS                    *HMD 08/81*
POFCOA   DC    XL8'00'             OUTPUT AREA              *HMD 08/81*
POFCBUF  EQU   *                                            *HMD 08/81*
         DC    H'84'               LENGTH OF BUFFER         *HMD 08/81*
         DC    H'0'                OFFSET                   *HMD 08/81*
         DC    CL80' '             ACTUAL BUFFER            *HMD 08/81*
         SPACE 1                                            *HMD 08/81*
POFTRTBL DC    X'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'          *HMD 08/81*
         SPACE 1
POFOUT   DS    CL80                TPUT BUFFER
         SPACE 1
POFCMDI  EQU   *                   COMMAND INPUT BUFFER (FROM VTAM)
         DS    CL4                 COMMAND HEADER
POFIMSG  DS    CL126               MESSAGE                  *HMD 08/81*
POFCMDIL EQU   *-POFCMDI           LENGTH                   *HMD 08/81*
         SPACE 1                                            *HMD 08/81*
POFCMDO  EQU   *                   COMMAND OUTPUT BUFFER (TO VTAM)
         DC    X'00'                                        *HMD 08/81*
         DC    X'03'               COMMAND HEADER           *HMD 08/81*
         DC    X'0000'                                      *HMD 08/81*
POFIN    DS    CL80                TGET BUFFER              *HMD 08/81*
POFCMDOL EQU   *-POFCMDO           LENGTH OF COMMAND        *HMD 08/81*
IST314I  DC    C'IST314I  END'     END OF DISPLAY MESSAGE   *HMD 03/83*
         EJECT                                              *HMD 08/81*
         SPACE 1                                            *HMD 08/81*
SAVECMDL DC    F'0'                                         *HMD 08/81*
SAVECMD  DC    CL80' '             SAVED COMMAND            *HMD 08/81*
WORKCMD  DC    CL80' '             COMMAND WORK AREA        *HMD 05/82*
BLNKLINE DC    CL80' '             FOR CLEARING OUT BUFFER  *HMD 05/82*
         SPACE 2                                            *HMD 08/81*
WTOLIST  WTO   ' ',MCSFLAG=HRDCPY,MF=L   WTO TO LOG CMDS & RESPONSES
         SPACE 1
WTOLTH   EQU   WTOLIST,2           LENGTH OF TEXT + 4
         ORG   WTOLIST+4           POINT TO MESSAGE
WTOTXT   DS    CL126               MESSAGE TEXT (MAX OF 126)
         SPACE 2
POFUSRID DS    CL7                 TSO USER ID
POFMSG1  DC    C'XXXX = ACBOFLGS/ACBERFLG'
POFMSG2  DC    C'XXXX = RTNCD/FDBK2'
GTSIZE0  DS    X                                            *HMD 05/82*
GTSIZE1  DS    X                                            *HMD 05/82*
         EJECT
POFACB   ACB   AM=VTAM,                                                *
               APPLID=POFACBAI,                                        *
               PASSWD=POFACBPW,                                        *
               EXLST=POFACBEX,                                         *
               MACRF=NLOGON
         EJECT
POFACB#  DC    PL1'1'            POF ACB NUMBER             *HMD 08/81*
POFACBAI DC    X'08'
         DC    CL8'VTAMOPR1'
POFACBPW DC    X'08'
         DC    CL8'OPERATOR'
         DS    0D
$WAITECB DC    A(0)               ECB FOR SEND CMD EXIT TO POST
DINTVL   DS    0D
         DC    CL8'00000400'      WAIT 04 SECONDS           *HMD 12/79*
         EJECT
POFACBEX EXLST AM=VTAM,                                                *
               LERAD=POFLERAD,                                         *
               SYNAD=POFSYNAD
         EJECT
POFRPLSC RPL   AM=VTAM,                                                *
               ACB=POFACB,                                             *
               AREA=POFCMDO,                                           *
               RECLEN=POFCMDOL,                                        *
               OPTCD=(SYN)
         EJECT
POFRPLRC RPL   AM=VTAM,                                                *
               ACB=POFACB,                                             *
               AREA=POFCMDI,                                           *
               AREALEN=POFCMDIL,                                       *
               EXIT=POFRCVEX,                                          *
               OPTCD=(ASY,Q,TRUNC)
         EJECT
         LTORG
         EJECT
AIDTABLE DS    0F
         DC    X'7D',AL3(ENTER)    ENTER KEY/SELECTOR LIGHT-PEN ATTN
         DC    X'F1',AL3(PFK1)     PFK 1
         DC    X'F2',AL3(PFK2)     PFK 2
         DC    X'F3',AL3(PFK3)     PFK 3
         DC    X'F4',AL3(PFK4)     PFK 4
         DC    X'F5',AL3(PFK5)     PFK 5
         DC    X'F6',AL3(PFK6)     PFK 6
         DC    X'F7',AL3(PFK7)     PFK 7
         DC    X'F8',AL3(PFK8)     PFK 8
         DC    X'F9',AL3(PFK9)     PFK 9
         DC    X'7A',AL3(PFK10)    PFK 10
         DC    X'7B',AL3(PFK11)    PFK 11
         DC    X'7C',AL3(PFK12)    PFK 12
         DC    X'C1',AL3(PFK13)    PFK 13
         DC    X'C2',AL3(PFK14)    PFK 14
         DC    X'C3',AL3(PFK15)    PFK 15
         DC    X'C4',AL3(PFK16)    PFK 16
         DC    X'C5',AL3(PFK17)    PFK 17
         DC    X'C6',AL3(PFK18)    PFK 18
         DC    X'C7',AL3(PFK19)    PFK 19
         DC    X'C8',AL3(PFK20)    PFK 20
         DC    X'C9',AL3(PFK21)    PFK 21
         DC    X'4A',AL3(PFK22)    PFK 22
         DC    X'4B',AL3(PFK23)    PFK 23
         DC    X'4C',AL3(PFK24)    PFK 24
         DC    X'6E',AL3(PA2)      PA 2
         DC    X'6B',AL3(PA3)      PA 3
NUMAIDS  EQU   (*-AIDTABLE)/4      TOTAL NUMBER OF AIDS
BADAID   DC    X'00',AL3(NOSUPT)   NOT SUPPORTED
         EJECT
ENTER    DC    X'FF'               FLAGS
         DC    AL1(ENTERL-3)       LENGTH FOR EXECUTED MOVE
         DC    C' '                COMMAND
ENTERL   EQU   *-ENTER             LENGTH
PFK1     DC    X'00'
         DC    AL1(PFK1L-3)
         DC    C'HELP'
PFK1L    EQU   *-PFK1
PFK2     DC    X'00'
         DC    AL1(PFK2L-3)
         DC    C'D NET,BFRUSE'
PFK2L    EQU   *-PFK2
PFK3     DC    X'00'
         DC    AL1(PFK3L-3)
         DC    C'END'
PFK3L    EQU   *-PFK3
PFK4     DC    X'00'
         DC    AL1(PFK4L-3)
         DC    C'D NET,PENDING'
PFK4L    EQU   *-PFK4
PFK5     DC    X'00'
         DC    AL1(PFK5L-3)
         DC    C'D NET,APPLS'
PFK5L    EQU   *-PFK5
PFK6     DC    X'00'
         DC    AL1(PFK6L-3)
         DC    C'D NET,MAJNODES'
PFK6L    EQU   *-PFK6
PFK7     DC    X'00'
         DC    AL1(PFK7L-3)
         DC    C'D NET,LINES,I'
PFK7L    EQU   *-PFK7
PFK8     DC    X'00'
         DC    AL1(PFK8L-3)
         DC    C'D NET,CLSTRS'
PFK8L    EQU   *-PFK8
PFK9     DC    X'00'
         DC    AL1(PFK9L-3)
         DC    C'D NET,TERMS'
PFK9L    EQU   *-PFK9
PFK10    DC    X'01'
         DC    AL1(PFK10L-3)
         DC    C'D NET,E,ID='
PFK10L   EQU   *-PFK10
PFK11    DC    X'01'
         DC    AL1(PFK11L-3)
         DC    C'V NET,ACT,ID='
PFK11L   EQU   *-PFK11
PFK12    DC    X'01'
         DC    AL1(PFK12L-3)
         DC    C'V NET,INACT,ID='
PFK12L   EQU   *-PFK12
PFK13    DC    X'00'
         DC    AL1(PFK13L-3)
         DC    C'HELP'
PFK13L   EQU   *-PFK13
PFK14    DC    X'00'
         DC    AL1(PFK14L-3)
         DC    C'D NET,BFRUSE'
PFK14L   EQU   *-PFK14
PFK15    DC    X'00'
         DC    AL1(PFK15L-3)
         DC    C'END'
PFK15L   EQU   *-PFK15
PFK16    DC    X'00'
         DC    AL1(PFK16L-3)
         DC    C'D NET,PENDING'
PFK16L   EQU   *-PFK16
PFK17    DC    X'00'
         DC    AL1(PFK17L-3)
         DC    C'D NET,APPLS'
PFK17L   EQU   *-PFK17
PFK18    DC    X'00'
         DC    AL1(PFK18L-3)
         DC    C'D NET,MAJNODES'
PFK18L   EQU   *-PFK18
PFK19    DC    X'00'
         DC    AL1(PFK19L-3)
         DC    C'D NET,LINES,I'
PFK19L   EQU   *-PFK19
PFK20    DC    X'00'
         DC    AL1(PFK20L-3)
         DC    C'D NET,CLSTRS'
PFK20L   EQU   *-PFK20
PFK21    DC    X'00'
         DC    AL1(PFK21L-3)
         DC    C'D NET,TERMS'
PFK21L   EQU   *-PFK21
PFK22    DC    X'01'
         DC    AL1(PFK22L-3)
         DC    C'D NET,E,ID='
PFK22L   EQU   *-PFK22
PFK23    DC    X'01'
         DC    AL1(PFK23L-3)
         DC    C'V NET,ACT,ID='
PFK23L   EQU   *-PFK23
PFK24    DC    X'01'
         DC    AL1(PFK24L-3)
         DC    C'V NET,INACT,ID='
PFK24L   EQU   *-PFK24
PA2      DC    X'00'
         DC    AL1(PA2L-3)
         DC    C'PA 2 KEY'
PA2L     EQU   *-PA2
PA3      DC    X'00'
         DC    AL1(PA3L-3)
         DC    C'PA 3 KEY'
PA3L     EQU   *-PA3
NOSUPT   DC    X'00'
         DC    AL1(NOSUPTL-3)
         DC    C'THIS AID NOT SUPPORTED.'
NOSUPTL  EQU   *-NOSUPT
         EJECT                                              *HMD 05/82*
HELPTXT  DS    0C                                           *HMD 05/82*
HELP1    DC    C'THE VTAMOPER COMMAND WILL ALLOW AN AUTHORIZED USER  '
HELP2    DC    C'TO ENTER VTAM COMMANDS AND RECEIVE THE REPLYS.      '
HELP3    DC    C'UP TO THREE CONCURRENT USERS MAY BE ACTIVE          '
HELP4    DC    C'AT ANY ONE TIME.                                    '
HELP5    DC    C'                                                    '
HELP6    DC    C'THE FOLLOWING SUBCOMMANDS ARE SUPPORTED:            '
HELP7    DC    C'                                                    '
HELP8    DC    C' *   =  RE-EXECUTE THE LAST VTAM COMMAND ENTERED    '
HELP9    DC    C' ?   =  DISPLAY THE LAST VTAM COMMAND ENTERED       '
HELP10   DC    C' X   =  EXIT TO ANOTHER TSO COMMAND (PCF II ONLY)   '
HELP11   DC    C'                                                    '
HELP12   DC    C'FOR 3270 DISPLAY TERMINALS, THE PF KEYS ARE DEFINED '
HELP13   DC    C'BELOW:                                              '
HELP14   DC    C'                                                    '
HELPEND  DC    X'FF'                                        *HMD 05/82*
         EJECT                                              *HMD 03/83*
******************************************************** V2 *HMD 03/83*
**           M E S S A G E    T A B L E               ** V2 *HMD 03/83*
******************************************************** V2 *HMD 03/83*
MSGTBL   DS    0H                                           *HMD 03/83*
IST511I  DC    C'IST511I'          ERROR MESSAGE            *HMD 03/83*
MSGLEN   EQU   *-MSGTBL            LENGTH OF MESSAGE        *HMD 03/83*
IST191I  DC    C'IST191I'          ERROR MESSAGE            *HMD 03/83*
IST010I  DC    C'IST010I'          ERROR MESSAGE            *HMD 03/83*
IST032I  DC    C'IST032I'          ERROR MESSAGE            *HMD 03/83*
IST037I  DC    C'IST037I'          ERROR MESSAGE            *HMD 03/83*
IST039I  DC    C'IST039I'          ERROR MESSAGE            *HMD 03/83*
IST042I  DC    C'IST042I'          ERROR MESSAGE            *HMD 03/83*
IST061I  DC    C'IST061I'          ERROR MESSAGE            *HMD 03/83*
IST066I  DC    C'IST066I'          ERROR MESSAGE            *HMD 03/83*
IST073I  DC    C'IST073I'          ERROR MESSAGE            *HMD 03/83*
IST085I  DC    C'IST085I'          ERROR MESSAGE            *HMD 03/83*
IST088I  DC    C'IST088I'          ERROR MESSAGE            *HMD 03/83*
MSGEND   DC    X'FF'               END OF MESSAGE TABLE     *HMD 03/83*
         EJECT                                              *HMD 05/82*
         ISTDPOHD
         EJECT
         IFGACB AM=VTAM
         EJECT
         IFGRPL AM=VTAM
         EJECT
         IHAASCB
         EJECT
         IKJCPPL                                            *HMD 08/81*
         EJECT                                              *HMD 08/81*
         IKJPSCB
         EJECT
         IHAPSA                                             *HMD 08/81*
         EJECT                                              *HMD 08/81*
         CVT   LIST=YES,DSECT=YES                           *HMD 08/81*
         END   POF
