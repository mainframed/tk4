XACFLGNP CSECT ,                       DEFINE CSECT
***********************************************************************
*
*     THIS IS THE ACF2 TSO LOGON POST-VALIDATION EXIT.  ITS PURPOSE IS
*     TO:
*     1) CALL XACFLGNQ TO ENFORCE TSO ACCESS QUOTAS.
*     2) CALL ACF$TERM TO DETERMINE TERMINAL TYPE.
*     3) CALL XACFLGFS TO DISPLAY TSO DEFAULTS IN FULL SCREEN
*          OR XACFLGLM TO LIST TSO DEFAULTS IN LINE MODE.
*     4) MODIFY JOB CARD WITH NEW USER PARAMETERS.
*
*     INPUT PARMS: R0 - ADDR OF ACF2 ACVALD
*                  R1 - ADDR OF LOGON WORK AREA
*
*     DATE MODIFIED: 12/08/82
*
*     CODED BY: MARK ELCONIN
*     MODIFIED BY: R.L. WELKER
*     MODIFIED BY: R.E. VIERREGGER
*
*     NOTE: THIS MODULE IS REENTRANT AND REUSABLE
*
***********************************************************************
         ACFREGS LINK=14               REGISTERS
*
*     HOUSEKEEPING
*
XACFLGNP CSECT ,                       DEFINE CSECT
         ENTER GETMAIN=WORKSIZE,  SET UP LINKAGE                       X
               PARMREG=R9,                                             +
               BASEREG=R12,                                            +
               REGZERO=R11
         USING ACVALD,R11              ESTABLISH ADDRESSABILITY
         USING WORKAREA,R13            ESTABLISH ADDRESSABILITY
*
*     LOAD AND CALL XACFLGNQ TO ENFORCE TSO ACCESS QUOTAS
*
         L     R15,@ACFLGNQ
         LR    R1,R11                  COPY PTR TO ACVALD
         CALL  (15)                    CALL
         LTR   R15,R15                 TEST RETURN CODE
         BNZ   RETURN                  IF NOT ZERO, RETURN NOW
*
*     GET READY TO DISPLAY DATA FOR THE USER
*
         L     R10,ACVRECB             LOAD ADDR OF LOGONID RECORD
         USING LIDREC,R10              ESTABLISH ADDRESSABILITY
         L     R8,4*4(R9)              GET POINTER TO JCL ACCT FIELD
         L     R8,0(R8)                POINT TO JCL ACCT FIELD
         MVC   ACCTINFO,0(R8)          MOVE IN DATA TO BE DISPLAYED
         L     R8,6*4(R9)              POINT TO REGION SIZE FROM JCL
         L     R8,0(R8)                GET REGION SIZE
         LTR   R8,R8                   WAS ANYTHING THERE?
         BNZ   CONVERT                 YEP, -->
         LH    R8,LIDSIZE              IF NOT, GET IT FROM LOGONID REC
CONVERT  DS    0H
         CVD   R8,PACKED               CONVERT IT
*
*     EDIT REGION SIZE AND MOVE IN ADDTIONAL INFO
*
         MVC   EDITWORK,EDITSTUF       MOVE IN THE EDIT PATTERN
         ED    EDITWORK(8),PACKED+4    EDIT THE SUCKER
         MVC   REGION,EDITWORK+4       MOVE DATA TO BE DISPLAYED
         MVC   PGMRNAME,LIDNAME        MOVE NAME TO BE DISPLAYED
         MVC   ROOMNO,LIDBAY           MOVE BAY NUMBER TO BE DISPLAYED
         CLC   LIDCMD,BLANKS           DOES HE HAVE A FIRST COMMAND?
         BE    NOFIRST                 NOPE -->
         CLI   LIDCMD,X'00'            IS IT HEX ZEROS?
         BE    NOFIRST                 YEP, -->
         MVC   FIRSTCMD,LIDCMD         MOVE IN USER COMMAND
         B     CHKTYPE                 --> CHECK TERMINAL TYPE
NOFIRST  DS    0H
         MVC   FIRSTCMD,WHOAMI         MOVE IN DEFAULT COMMAND
*
*     CHECK TERMINAL TYPE AND DISPLAY THE DATA
*
CHKTYPE  DS    0H
         L     R15,@TERM               GET TEST TERMINAL RTN ADDRESS
         BALR  R14,R15                 --> FIND OUT WHAT TYPE TERMINAL
         LTR   R15,R15                 CAN IT HANDLE FULL SCREEN
         BZ    FULLSCRN                YEP, -->
         L     R15,@ACFLGLM            IF NOT, LINE MODE ROUTINE
         B     CALL                    --> GO CALL IT
FULLSCRN DS    0H
         L     R15,@ACFLGFS            FULL SCREEN ROUTINE
CALL     CALL  (15),                                      AND CALL IT  +
               (PGMRNAME,ACCTINFO,REGION,ROOMNO,FIRSTCMD),             +
               MF=(E,PARMLIST)
         LTR   R15,R15                 TEST RETURN CODE
         BNZ   RETURN                  IF NOT ZERO, RETURN NOW
*
*    RIGHT JUSTIFY REGION SIZE
*
         LA    R6,L'REGION             GET LENGTH OF REGION
         LA    R7,REGION               GET ADDRESS OF REGION
CNTBLANK DS    0H
         CLI   0(R7),X'40'             IS THIS BYTE A BLANK
         BE    MOVEIT                  YEP, --> ALL THROUGH
         LA    R7,1(R7)                NEXT BYTE
         BCT   R6,CNTBLANK             CHECK COUNT
MOVEIT   DS    0H
         XC    WKREGION,WKREGION       CLEAR WORK REGION
         LA    R7,WKREGION             GET ITS ADDRESS
         AR    R7,R6                   ADD COUNT OF GOOD CHARS
         LA    R1,L'REGION             GET LENGTH OF REGION
         SR    R1,R6                   SUBTRACT COUNT
         LTR   R1,R1                   IS IT ZERO?
         BZ    TESTSIZE                YEP, --> DON'T MOVE IT
         BCTR  R1,0                    SET UP FOR EX OF MVC STATMENT
         EX    R1,MVCREGN              MOVE IT...
*
*    CHECK FOR VALID REGION SIZE AND ADJUST IF NEEDED
*
TESTSIZE DS    0H
         OC    WKREGION,ZEROS          MAKE THE WORK REGION NUMERIC
         MVC   REGION,WKREGION         MOVE IN RIGHT JUSTIFIED REGION
         TM    LIDTFLG1,LIDT1SIZ       IS IT A SPECIAL USER?
         BO    CHKBAY                  YEP, -->
         XC    PACKED,PACKED           CLEAR DECIMAL WORK AREA
         PACK  PACKED+4(4),REGION      CHANGE REGION TO DECIMAL
         CVB   R8,PACKED               CONVERT IT TO BINARY
         CH    R8,LIDTMAXS             IS IT PAST THE LIMIT?
         BNH   CHKBAY                  NOPE, --> OK SIZE
         LH    R8,LIDTMAXS             GET LOGONID MAX SIZE
         CVD   R8,PACKED               CONVERT IT
         MVC   EDITWORK,EDITSTUF       MOVE IN THE EDIT PATTERN
         ED    EDITWORK(8),PACKED+4    EDIT THE SUCKER
         MVC   REGION,EDITWORK+4       MOVE DATA TO BE USED
*
*   CHECK FOR A BAY NUMBER AND FIX IF NEEDED
*
CHKBAY   DS    0H
         CLI   ROOMNO,C' '             IS THERE A BAY NUMBER?
         BNE   GETJCL                  YEP, -->
         MVC   ROOMNO,BY00             MOVE IN JUNK BAY NUMBER
*
*   FIND THE JOBCARD AND MOVE IN NEW DATA
*
GETJCL   L     R6,7*4(,R9)               LOAD ADDR OF THE JCL DESC
         USING JCLDESC,R6                ESTABLISH ADDRESSABILITY
         L     R1,JCLPTR                 LOAD ADDR OF THE 1ST JOBCARD
         LA    R2,80                     LOAD INCREMENT
         LR    R3,R1                     GET MAX SEARCH
         AH    R3,JCLUSED                END SEARCH HERE
         SR    R3,R2                     POINT TO LAST CARD
SEARCH   DS    0H
         CLC   11(3,R1),JOBCARD          IS IT A JOBCARD?
         BNE   SEARCH1                   NOPE, -->
         MVC   15(40,R1),BLANKS          BLANK OUT OLD ACCT AREA
         MVC   15(2,R1),OPENPAR          MOVE IN " (' "
         MVC   17(ACCTLEN,R1),ACCTINFO   MOVE IN NEW STUFF
         MVC   17+ACCTLEN(3,R1),CLOSPAR  MOVE IN " '), "
         B     SEARCHX                   --> NEXT ENTRY
SEARCH1  DS    0H
         CLI   5(R1),QUOTE               IS IT THE PGMR NAME FIELD?
         BNE   SEARCH2                   NOPE, -->
         MVC   6(20,R1),PGMRNAME         MOVE IN PROGRAMMER NAME
         B     SEARCHX                   --> NEXT ENTRY
SEARCH2  DS    0H
         CLC   COMMCARD,0(R1)            IS IT A COMMENT CARD?
         BNE   SCANCARD                  NOPE, -->
         MVC   0(15,R1),JOBPARM          MAKE IT A JOBPARM CARD
         MVC   15(4,R1),ROOMNO           MOVE IN BAY NUMBER
         B     SEARCHX                   --> NEXT ENTRY
*
*    SCAN FOR "REGION=0" AND " EXEC " STATEMENTS
*
SCANCARD DS    0H
         LR    R4,R1                     GET JOBCARD POINTER
         LA    R5,10                     SET UP COUNTER
LOOP1    CLC   REGCARD,0(R4)             FOUND A REGION CARD?
         BE    MOVEREG                   YEP, -->
         CLC   EXECCARD,0(R4)            FOUND A EXEC CARD?
         BE    MOVEPARM                  YEP, -->
         LA    R4,1(R4)                  NEXT BYTE
         BCT   R5,LOOP1                  TRY AGAIN
         B     SEARCHX                   --> NEXT ENTRY
*
*    MOVE IN NEW REGION SIZE
*
MOVEREG  DS    0H
         MVC   8(4,R4),REGION            MOVE IN REGION
         B     SEARCHX                   --> NEXT ENTRY
*
*    FIND PROC NAME AND MOVE IN ",PARM='FIRSTCMD'" AFTER IT
*
MOVEPARM DS    0H
         LA    R4,7(R4)                  POINT TO PROC NAME
MOVEPRM1 DS    0H
         CLI   0(R4),C' '                IS THERE A BLANK?
         BE    FNDBLNK                   YEP, -->
         LA    R4,1(R4)                  NEXT BYTE
         B     MOVEPRM1                  CHECK AGAIN
FNDBLNK  DS    0H
         MVC   0(6,R4),PARMCARD          MOVE IN "PARM=" CARD
         MVI   6(R4),QUOTE               PUT IN " ' "
         MVC   7(20,R4),FIRSTCMD         MOVE IN FIRST COMMAND
         MVI   27(R4),QUOTE              PUT IN LAST " ' "
*
SEARCHX  BXLE  R1,R2,SEARCH              ADJUST INDEX --> LOOP
*
*     TERMINATE
*
RETURN0  XR    R15,R15                 SET RETURN CODE TO ZERO
RETURN   EQU   *
         LEAVE GETMAIN=WORKSIZE,  RETURN                               +
               RETCODE=(15)
*
*
MVCREGN  MVC   0(0,R7),REGION
*
*
         TITLE 'DATA AND ADDRESS CONSTANTS'
*
EDITSTUF DC    X'F020202020202120'
ZEROS    DC    4C'0'
BLANKS   DC    40C' '
JOBCARD  DC    C'JOB'
COMMCARD DC    C'//* '
PARMCARD DC    C',PARM='
EXECCARD DC    C'EXEC'
REGCARD  DC    C'REGION=0'
JOBPARM  DC    C'/*JOBPARM ROOM='
OPENPAR  DC    X'4D7D'
CLOSPAR  DC    X'7D5D6B'
BY00     DC    C'BY00'
WHOAMI   DC    C'WHOAMI              '
QUOTE    EQU   X'7D'
*
*
@TERM    DC    V(ACF$TERM)             ACF2 TERMINAL TEST ROUTINE
@ACFLGNQ DC    V(XACFLGNQ)             LOGON QUOTA ROUTINE
@ACFLGFS DC    V(XACFLGFS)             LOGON FULL SCREEN DISPLAY
@ACFLGLM DC    V(XACFLGLM)             LOGON LINE MODE DISPLAY
*
*
         TITLE  'PROGRAM DSECTS AND MAP OF GETMAINED AREA'
*
         ACVALD ,                      THE ACF2 VALIDATION PARM BLOCK
         ACCT D ,                      FLUORS ACCOUNTING STRING MAP
         LIDREC ,                      LOGONID RECORD DSECT
JCLDESC  DSECT
JCLPTR   DS    A
JCLMAX   DS    H
JCLUSED  DS    H
WORKAREA DSECT
SAVEAREA DS    18F
PARMLIST DS    5F
PGMRNAME DS    CL20
ACCTINFO DS    CL40
REGION   DS    CL4
ROOMNO   DS    CL4
FIRSTCMD DS    CL20
PACKED   DS    D
WKREGION DS    CL4
EDITWORK DS    CL8
WORKSIZE EQU   *-WORKAREA
         END   XACFLGNP
