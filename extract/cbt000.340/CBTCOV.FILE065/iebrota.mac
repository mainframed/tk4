IEBROTA  CSECT
         ENTRY    IEBROTA1
         ENTRY    IEBROTA2
         ENTRY    IEBROTA3
*
*        SUB-PROGRAMS CALLED BY IEBROT.
*
*        VERSION 3.0 -- 2/NOV/79
*
*        RICK BUTT,
*        ONTARIO MINISTRY OF GOVERNMENT SERVICES,
*        COMMUNICATION & COMPUTER SERVICES DIVISION,
*        LEASIDE DATA CENTRE
*        15 OVERLEA BOULEVARD, 2ND FLOOR,
*        TORONTO, ONTARIO, CANADA    M4H 1A9
*        416-965-8247
*
*        ENTRY IEBROTA1 PERFORMS TRANSLATIONS ON THE INCOMING
*        RECORD IN THE UNROTATED STACK.  (SLOPPY IN COBOL.)
*
*        ENTRY IEBROTA2 ROTATES THE MATRIX  (WITCH-CRAFT!)
*
*        ENTRY IEBROTA3 IS USED FOR BIG-PRINT.  EXPANDS THE
*        UNROTATED MATRIX, AND PERFORMS ADDITIONAL TRANSLATION.
*
*        TO UNDERSTAND THE TRANSLATION TABLES, EITHER HERE,
*        OR THE LESS CRITICAL, LESS COMPLEX ONES IN THE MAIN
*        PROGRAM, CONSULT THE GRAPHIC IMAGES FOR THE CHARAC-
*        TER SETS.
*
         EJECT
IEBROTA1 SAVE   (14,6)
*
*        REGISTER CONVENTIONS FOR THIS ENTRY:
*        3 - BASE FOR EXECUTABLE CODE
*        4 - ADDRESS FROM CALLER OF UPPER PART OF THIS LINE
*        5 - ADDRESS FROM CALLER OF LOWER PART OF THIS LINE
*        6 - ADDRESS FROM CALLER OF HIGHEST LEVEL IN STACK
*
         BALR   3,0
         USING  *,3
         LM     4,6,0(1)          GET "THREE LINES'" ADDRESSES.
         TR     0(90,4),XMAIN     TRANSLATE MAIN PART OF DATA.
         TR     0(90,5),XDESC     TRANSLATE DESCENDER PART.
         SR     15,15             SET RETURN CODE ZERO.
         TRT    0(90,6),XSPCL     CHECK: ANY SUPER SPECIAL CHARS?
         BZ     NOSPECL           NO. BYE-BYE.
         LA     15,4              YES, WARNING RETURN CODE,
         TR     0(90,6),XSPCL     AND DO WHOLE THING FOR SWITCHES.
NOSPECL  DS     0H
         RETURN (14,6),RC=(15)
*
*        TRANSLATE TABLE FOR MAIN PART OF LINE.
*
*        DC     X' 0 1 2 3 4 5 6 7 8 9 A B C D E F'  BY
*                                                    __
XMAIN    DC     X'40404040404040404040404040404040'  00
         DC     X'40404040404040404040404040404040'  10
         DC     X'40404040404040404040404040404040'  20
         DC     X'40404040404040404040404040404040'  30
         DC     X'404040404040404040404A4B4C4D4E4F'  40
         DC     X'504040404040404040405A5B5C5D7A5F'  50
         DC     X'60614040404040404040404B6C406E6F'  60
         DC     X'404040404040404040407A7B7C7D7E7F'  70
         DC     X'40818283848586878889408B4C8D8E8F'  80
         DC     X'40919293949596979899409B9C9D9E9F'  90
         DC     X'A0A1A2A3A4A5A6A7A8A940ABACAD6EAF'  A0
         DC     X'B0B1B2B3B4B5B6B7B8B940BBBCBDBEBF'  B0
         DC     X'40C1C2C3C4C5C6C7C8C9404040404040'  C0
         DC     X'40D1D2D3D4D5D6D7D8D9404040404040'  D0
         DC     X'4040E2E3E4E5E6E7E8E9404040404040'  E0
         DC     X'F0F1F2F3F4F5F6F7F8F9404040404040'  F0
*
*        TRANSLATE TABLE FOR DESCENDER PORTION OF LINE.
*
*        DC     X' 0 1 2 3 4 5 6 7 8 9 A B C D E F'  BY
*                                                    __
XDESC    DC     X'00000000000000000000000000000000'  00
         DC     X'00000000000000000000000000000000'  10
         DC     X'00000000000000000000000000000000'  20
         DC     X'00000000000000000000000000000000'  30
         DC     X'00000000000000000000000000000000'  40
         DC     X'00000000000000000000000000006B00'  50
         DC     X'00000000000000000000006B006D0000'  60
         DC     X'00000000000000000000000000000000'  70
         DC     X'00000000000000CD000000008C000090'  80
         DC     X'00DA0000000000DCDE00000000000000'  90
         DC     X'0000000000000000E100000090008C00'  A0
         DC     X'00000000000000000000900090000000'  B0
         DC     X'00000000000000000000000000000000'  C0
         DC     X'0000000000000000CA00000000000000'  D0
         DC     X'00000000000000000000000000009090'  E0
         DC     X'00000000000000000000000000000000'  F0
*
*        TRANSLATE TABLE FOR SUPER SPECIAL CHARACTER SWITCHES.
*        THIS SIGNALS THE PRESENCE OF CHARACTERS THAT MAY HAVE
*        TO BE "MANUALLY" MODIFIED BY THE MAIN PROGRAM, BASED
*        NOT SOLELY ON THE CHARACTER, BUT ALSO ON ITS NEIGHBOURS.
*
*        DC     X' 0 1 2 3 4 5 6 7 8 9 A B C D E F'  BY
*                                                    __
XSPCL    DC     X'00000000000000000000000000000000'  00
         DC     X'00000000000000000000000000000000'  10
         DC     X'00000000000000000000000000000000'  20
         DC     X'00000000000000000000000000000000'  30
*        NEXT LINE: LOGICAL OR MAY NEED DESCENDER IF FORMAT CHAR.
         DC     X'00000000000000000000000000000001'  40
*        NEXT LINE: RIGHT PAREN. MAY SIGNAL CHECK BOX.
         DC     X'00000000000000000000000000010000'  50
*        NEXT LINE: HYPHEN MAY BECOME EXTENDED DASH.
         DC     X'01000000000000000000000000000000'  60
*        NEXT LINE: QUOTE (") MAY BE OPENING OR CLOSING TYPE.
         DC     X'00000000000000000000000000000001'  70
         DC     X'00000000000000000000000000000000'  80
         DC     X'00000000000000000000000000000000'  90
         DC     X'00000000000000000000000000000000'  A0
         DC     X'00000000000000000000000000000000'  B0
         DC     X'00000000000000000000000000000000'  C0
         DC     X'00000000000000000000000000000000'  D0
         DC     X'00000000000000000000000000000000'  E0
         DC     X'00000000000000000000000000000000'  F0
*
         LTORG
         EJECT
IEBROTA2 SAVE   (14,12)
*
*        REGISTER CONVENTIONS FOR THIS ENTRY:
*        3 - BASE FOR EXECUTABLE CODE
*        4 - ADDRESS FROM CALLER BASE OF UNROTATED MATRIX-IN
*        5 - COMPUTED ADDRESS OF MIDDLE THIRD OF MATRIX-IN (FROM R4)
*        6 - COMPUTED ADDRESS OF UPPER  THIRD OF MATRIX-IN (FROM R4)
*        7 - ADDRESS FROM CALLER BASE OF ROTATED MATRIX-OUT
*        8 - INDEX FOR MATRIX-IN: UP BY 1 FROM 0 (MIN) UNTIL 89 (MAX).
*        9 - INDEX FOR MATRIX-OUT: UP BY 120 FROM 0.
*       10 - WORK FOR INTERMEDIATE STORAGE TWIXT READ/WRITE STORAGE.
*       11 - WORK FOR INTERMEDIATE STORAGE TWIXT READ/WRITE STORAGE.
*       12 - WORK FOR INTERMEDIATE STORAGE TWIXT READ/WRITE STORAGE.
*       14 - WORK FOR INTERMEDIATE STORAGE TWIXT READ/WRITE STORAGE.
*        0 - WORK FOR INTERMEDIATE STORAGE TWIXT READ/WRITE STORAGE.
*        1 - WORK FOR INTERMEDIATE STORAGE TWIXT READ/WRITE STORAGE.
*        2 - WORK FOR INTERMEDIATE STORAGE TWIXT READ/WRITE STORAGE.
*
         BALR   3,0
         USING  *,3
         LM     4,7,0(1)          GET ADDRESS OF IN/OUT MATRICES,
*                                 AND LEFT/RIGHT MARGINS.
         L      8,0(6)            DUMP LEFT MARGIN, ESTABLISHING INDEX.
         LR     9,8               AGAIN, TO COMPUTE INITIALIZATION
         MH     9,=H'120'         OF MATRIX-OUT INDEX.
         L      11,0(7)           DUMP RIGHT MARGIN.
         STH    11,THRESH         STORE FOR LOOP-STOP.
         LR     7,5               DUMP ADDRESS OF OUT-MATRIX.
         LA     5,40*90(4)        COMPUTE BASE OF MIDDLE THIRD,
         LA     6,40*90(5)        & UPPER THIRD OF MATRIX-IN.
LOOPROT  DS     0H
*
*     THE ROTATION TECHNIQUE USED BELOW IS FAR SUPERIOR TO ANYTHING
*     THAT CAN BE GENERATED WITH COBOL -- EVEN OPTIMIZED.  BEST RESULTS
*     OBTAINABLE WITH COBOL IS SERIES OF "LA/MVC" INSTRUCTIONS.  THIS
*     TAKES THE SAME MAIN MEMORY FOR CODE AND SHOULD EXECUTE IN ABOUT
*     17% OF THE TIME, ALTHOUGH IT MAY BE CONSIDERABLY FASTER THAN THAT
*     DUE TO PIPELINE FREEZING THAT COULD OCCUR WITH THE COBOL METHOD.
*
*     PREAMBLE:
         LH     12,35*90(4,8)
         LH     1,7*90(6,8)
         LH     11,19*90(4,8)
         IC     12,34*90(4,8)
         LH     0,29*90(5,8)
         IC     1,6*90(6,8)
*     GROUP
         LH     10,90(4,8)
         IC     11,18*90(4,8)
         STH    12,2*42(7,9)
         LH     14,13*90(5,8)
         IC     0,28*90(5,8)
         STH    1,2*16(7,9)
         LH     2,23*90(6,8)
         IC     10,0(4,8)
         STH    11,2*50(7,9)
         LH     12,37*90(4,8)
         IC     14,12*90(5,8)
         STH    0,2*25(7,9)
         LH     1,9*90(6,8)
         IC     2,22*90(6,8)
         STH    10,2*59(7,9)
         LH     11,21*90(4,8)
         IC     12,36*90(4,8)
         STH    14,2*33(7,9)
         LH     0,31*90(5,8)
         IC     1,8*90(6,8)
         STH    2,2*8(7,9)
*     GROUP
         LH     10,3*90(4,8)
         IC     11,20*90(4,8)
         STH    12,2*41(7,9)
         LH     14,15*90(5,8)
         IC     0,30*90(5,8)
         STH    1,2*15(7,9)
         LH     2,25*90(6,8)
         IC     10,2*90(4,8)
         STH    11,2*49(7,9)
         LH     12,39*90(4,8)
         IC     14,14*90(5,8)
         STH    0,2*24(7,9)
         LH     1,11*90(6,8)
         IC     2,24*90(6,8)
         STH    10,2*58(7,9)
         LH     11,23*90(4,8)
         IC     12,38*90(4,8)
         STH    14,2*32(7,9)
         LH     0,33*90(5,8)
         IC     1,10*90(6,8)
         STH    2,2*7(7,9)
*     GROUP
         LH     10,5*90(4,8)
         IC     11,22*90(4,8)
         STH    12,2*40(7,9)
         LH     14,17*90(5,8)
         IC     0,32*90(5,8)
         STH    1,2*14(7,9)
         LH     2,27*90(6,8)
         IC     10,4*90(4,8)
         STH    11,2*48(7,9)
         LH     12,90(5,8)
         IC     14,16*90(5,8)
         STH    0,2*23(7,9)
         LH     1,13*90(6,8)
         IC     2,26*90(6,8)
         STH    10,2*57(7,9)
         LH     11,25*90(4,8)
         IC     12,0(5,8)
         STH    14,2*31(7,9)
         LH     0,35*90(5,8)
         IC     1,12*90(6,8)
         STH    2,2*6(7,9)
*     GROUP
         LH     10,7*90(4,8)
         IC     11,24*90(4,8)
         STH    12,2*39(7,9)
         LH     14,19*90(5,8)
         IC     0,34*90(5,8)
         STH    1,2*13(7,9)
         LH     2,29*90(6,8)
         IC     10,6*90(4,8)
         STH    11,2*47(7,9)
         LH     12,3*90(5,8)
         IC     14,18*90(5,8)
         STH    0,2*22(7,9)
         LH     1,15*90(6,8)
         IC     2,28*90(6,8)
         STH    10,2*56(7,9)
         LH     11,27*90(4,8)
         IC     12,2*90(5,8)
         STH    14,2*30(7,9)
         LH     0,37*90(5,8)
         IC     1,14*90(6,8)
         STH    2,2*5(7,9)
*     GROUP
         LH     10,9*90(4,8)
         IC     11,26*90(4,8)
         STH    12,2*38(7,9)
         LH     14,21*90(5,8)
         IC     0,36*90(5,8)
         STH    1,2*12(7,9)
         LH     2,31*90(6,8)
         IC     10,8*90(4,8)
         STH    11,2*46(7,9)
         LH     12,5*90(5,8)
         IC     14,20*90(5,8)
         STH    0,2*21(7,9)
         LH     1,17*90(6,8)
         IC     2,30*90(6,8)
         STH    10,2*55(7,9)
         LH     11,29*90(4,8)
         IC     12,4*90(5,8)
         STH    14,2*29(7,9)
         LH     0,39*90(5,8)
         IC     1,16*90(6,8)
         STH    2,2*4(7,9)
*     GROUP
         LH     10,11*90(4,8)
         IC     11,28*90(4,8)
         STH    12,2*37(7,9)
         LH     14,23*90(5,8)
         IC     0,38*90(5,8)
         STH    1,2*11(7,9)
         LH     2,33*90(6,8)
         IC     10,10*90(4,8)
         STH    11,2*45(7,9)
         LH     12,7*90(5,8)
         IC     14,22*90(5,8)
         STH    0,2*20(7,9)
         LH     1,19*90(6,8)
         IC     2,32*90(6,8)
         STH    10,2*54(7,9)
         LH     11,31*90(4,8)
         IC     12,6*90(5,8)
         STH    14,2*28(7,9)
         LH     0,90(6,8)
         IC     1,18*90(6,8)
         STH    2,2*3(7,9)
*     GROUP
         LH     10,13*90(4,8)
         IC     11,30*90(4,8)
         STH    12,2*36(7,9)
         LH     14,25*90(5,8)
         IC     0,0(6,8)
         STH    1,2*10(7,9)
         LH     2,35*90(6,8)
         IC     10,12*90(4,8)
         STH    11,2*44(7,9)
         LH     12,9*90(5,8)
         IC     14,24*90(5,8)
         STH    0,2*19(7,9)
         LH     1,21*90(6,8)
         IC     2,34*90(6,8)
         STH    10,2*53(7,9)
         LH     11,33*90(4,8)
         IC     12,8*90(5,8)
         STH    14,2*27(7,9)
         LH     0,3*90(6,8)
         IC     1,20*90(6,8)
         STH    2,2*2(7,9)
*     SMALL GROUP: MISSING: LH 1; LH 11; IC 1.
         LH     10,15*90(4,8)
         IC     11,32*90(4,8)
         STH    12,2*35(7,9)
         LH     14,27*90(5,8)
         IC     0,2*90(6,8)
         STH    1,2*9(7,9)
         LH     2,37*90(6,8)
         IC     10,14*90(4,8)
         STH    11,2*43(7,9)
         LH     12,11*90(5,8)
         IC     14,26*90(5,8)
         STH    0,2*18(7,9)
         IC     2,36*90(6,8)
         STH    10,2*52(7,9)
         IC     12,10*90(5,8)
         STH    14,2*26(7,9)
         LH     0,5*90(6,8)
         STH    2,2*1(7,9)
*    POST-AMBLE:
         LH     10,17*90(4,8)
         STH    12,2*34(7,9)
         IC     0,4*90(6,8)
         LH     2,39*90(6,8)
         IC     10,16*90(4,8)
         STH    0,2*17(7,9)
         IC     2,38*90(6,8)
         STH    10,2*51(7,9)
         STH    2,0(7,9)
*
*
         CH     8,THRESH          IS THIS FINAL MATRIX IN COLUMN?
         BNL    ENDROT            YES... PREPARE TO RETURN.
         LA     8,1(8)            NO... BUMP MATRIX IN INDEX;
         LA     9,120(9)          AND BUMP MATRIX OUT INDEX;
         B      LOOPROT           AND LOOP.
ENDROT   DS     0H
         RETURN (14,12)
THRESH   DS     H
*
         LTORG
         EJECT
IEBROTA3 SAVE   (14,7)
*
*        REGISTER CONVENTIONS FOR THIS ENTRY:
*        7 - BASE FOR EXECUTABLE CODE
*        2 - ADDRESS FROM CALLER OF MIDDLE OF UNROTATED STACK
*        3 - ADDRESS FROM CALLER OF "TOP" OF UNROTATED STACK
*        4 - WORK (INDEX BUMP)
*        5 - WORK (INDEX BUMP)
*        6 - WORK (LOOP COUNTER)
*
         BALR   7,0
         USING  *,7
         LM     2,3,0(1)          GET ADDRESSES.
         LA     4,2*90            INIT.
         LA     5,4*90            INIT.
         LA     6,30              INIT.
BIGLOOP  DS     0H
         MVC    3*90(45,3),90(2)  DO LOWER PART OF DESCENDER.
         TR     3*90(45,3),XDNDN  TRANSLATE IT.
         MVC    2*90(45,3),90(2)  DO UPPER PART OF DESCENDER.
         TR     2*90(45,3),XDNUP  TRANSLATE IT.
         MVC    90(45,3),0(2)     DO LOWER PART MAIN.
         TR     90(45,3),XUPDN    TRANSLATE IT.
         MVC    0(45,3),0(2)      DO UPPER PART MAIN.
         TR     0(45,3),XUPUP     TRANSLATE IT.
         SR     2,4               DECREMENT ...
         SR     3,5               ... AS THOUGH INDECES.
         BCT    6,BIGLOOP
         RETURN (14,7)
*
*        TRANSLATE TABLE FOR UPPER MAIN PART OF LINE.
*
*        DC     X' 0 1 2 3 4 5 6 7 8 9 A B C D E F'  BY
*                                                    __
XUPUP    DC     X'40404040404040404040404040404040'  00
         DC     X'40404040404040404040404040404040'  10
         DC     X'40404040404040404040404040404040'  20
         DC     X'40404040404040404040404040404040'  30
         DC     X'404040404040404040403E403F41424F'  40
         DC     X'44404040404040404040454647484049'  50
         DC     X'49514040404040404040404052405354'  60
         DC     X'404040404040404040405556577D497F'  70
         DC     X'801B1C1D1E1F202122234058408D8E59'  80
         DC     X'90232425262728292A2B4062639D649F'  90
         DC     X'A0A12C2D2E2F30313233406566674068'  A0
         DC     X'B0B1B2B3B4B5B6B7B8B9436970717273'  B0
         DC     X'40010203040506070809404040404040'  C0
         DC     X'400A0B0C0D0E0F101112404040404040'  D0
         DC     X'4040131415161718191A40B140406573'  E0
         DC     X'3435363738393A3B3C3D405941484040'  F0
*
*        TRANSLATE TABLE FOR LOWER MAIN PART OF LINE.
*
*        DC     X' 0 1 2 3 4 5 6 7 8 9 A B C D E F'  BY
*                                                    __
XUPDN    DC     X'40404040404040404040404040404040'  00
         DC     X'40404040404040404040404040404040'  10
         DC     X'40404040404040404040404040404040'  20
         DC     X'40404040404040404040404040404040'  30
         DC     X'404040404040404040404A4B4C4D4E4F'  40
         DC     X'504040404040404040405A5B5C5D7A5F'  50
         DC     X'60614040404040404040404B6C406E6F'  60
         DC     X'404040404040404040407A7B7C407E40'  70
         DC     X'40818283848586878889408B4C40408F'  80
         DC     X'40919293949596979899409B9C409E9F'  90
         DC     X'4040A2A3A4A5A6A7A8A940ABACAD6EAF'  A0
         DC     X'40404040404040404040BABBBCBDBEBF'  B0
         DC     X'40C1C2C3C4C5C6C7C8C9404040404040'  C0
         DC     X'40D1D2D3D4D5D6D7D8D9404040404040'  D0
         DC     X'4040E2E3E4E5E6E7E8E9406D4040AC8F'  E0
         DC     X'F0F1F2F3F4F5F6F7F8F940BF4D5D4040'  F0
*
*        TRANSLATE TABLE FOR UPPER DESCENDER PORTION OF LINE.
*
*        DC     X' 0 1 2 3 4 5 6 7 8 9 A B C D E F'  BY
*                                                    __
XDNUP    DC     X'00000000000000000000000000000000'  00
         DC     X'00000000000000000000000000000000'  10
         DC     X'00000000000000000000000000000000'  20
         DC     X'00000000000000000000000000000000'  30
         DC     X'00000000000000000000000000000000'  40
         DC     X'00000000000000000000000000005E00'  50
         DC     X'00000000000000000000006B006D0000'  60
         DC     X'00000000000000000000000000000000'  70
         DC     X'0000000000000000000000008C000000'  80
         DC     X'90000000000000000000000000000000'  90
         DC     X'0000000000000000000000000000AE00'  A0
         DC     X'00000000000000000000000000000000'  B0
         DC     X'00000000000000000000CACB00CD00CF'  C0
         DC     X'00000000000000000000DADBDCDDDEDF'  D0
         DC     X'00E10000000000000000EA0000B20000'  E0
         DC     X'00000000000000000000000000000000'  F0
*
*
*        TRANSLATE TABLE FOR LOWER DESCENDER PORTION OF LINE.
*
*        DC     X' 0 1 2 3 4 5 6 7 8 9 A B C D E F'  BY
*                                                    __
XDNDN    DC     X'00000000000000000000000000000000'  00
         DC     X'00000000000000000000000000000000'  10
         DC     X'00000000000000000000000000000000'  20
         DC     X'00000000000000000000000000000000'  30
         DC     X'00000000000000000000000000000000'  40
         DC     X'00000000000000000000000000000000'  50
         DC     X'00000000000000000000000000000000'  60
         DC     X'00000000000000000000000000000000'  70
         DC     X'00000000000000000000000000000000'  80
         DC     X'90000000000000000000000000000000'  90
         DC     X'00000000000000000000000000000000'  A0
         DC     X'00000000000000000000000000000000'  B0
         DC     X'00000000000000000000000000000000'  C0
         DC     X'00000000000000000000000000000000'  D0
         DC     X'00000000000000000000000000000000'  E0
         DC     X'00000000000000000000000000000000'  F0
*
         LTORG
         END
