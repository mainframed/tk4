         TITLE 'IDMPRINT - INTERACTIVE DATA MANAGEMENT PRINT ROUTINE'
         @     IDMPRINT
***********************************************************************
*/*                                                                  */
*/*      ========================================================    */
*/*        I D M F  -  INTERACTIVE DATA MANAGEMENT FACILITY          */
*/*      ========================================================    */
*/*                                                                  */
*/********************************************************************/
            EJECT
***********************************************************************
*                                                                     *
* ABSTRACT: DATASET PRINT SUBROUTINE                                  *
*                                                                     *
* FUNCTION: IDMPRINT IS A PROGRAM TO PRINT SEQ DATASETS AND PDS'S.    *
*                                                                     *
*           IDMPRINT CALLED BY IDMMAIN, WHEN USER REQUESTS TO PRINT   *
*                    SELECTED ROW.                                    *
*           IDMPRINT GETS DSNAME (AND VOLUME) FROM ROW, SELECTED BY   *
*                    USER, PRESENTS PRINT PANEL TO TERMINAL USER TO   *
*                    CHOOSE OPTIONS AND THEN INVOKES PRINT COMMAND.   *
*                    (SOME OPTIONS FROM PRINT PANEL SAVED IN USER     *
*                    PROFILE AND RETAINED ACROSS SESSIONS).           *
*                                                                     *
*           AFTER DATASET PRINTED IDMPRINT UPDATES ROW IN TABLE AND   *
*           SETS UP MESSAGES FOR USER.                                *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*                                                                     *
* INPUT: R1 -> WORK AREA OF IDMMAIN                                   *
*        R2 -> COMMUNICATION READ-ONLY TABLE OF IDMMAIN               *
*                                                                     *
* PROGRAM WRITTEN USING STRUCTURED ASSEMBLER MACROS                   *
* MACROS USED: SET OF STRUCTURED MACROS                               *
*              SAVE                                                   *
*              RETURN                                                 *
*              GETMAIN                                                *
*              CALL                                                   *
*              FREEMAIN                                               *
*                                                                     *
* ATTRIBUTES: REENTRANT,REFRESHABLE,REUSABLE                          *
*                                                                     *
*                                                                     *
***********************************************************************
         SPACE
***********************************************************************
*                                                                     *
*  REGISTERS:   15 - ENTRY ADDRESS & RETURN CODE                      *
*               14 - RETURN ADDRESS                                   *
*               13 - SAVE AREA ADDRESS AND BASE FOR DSECT             *
*               12 - CSECT BASE                                       *
*               11 - CSECT SECOND BASE                                *
*               10 - DSECT BASE FOR IDMWORK, PASSED BY IDMMAIN        *
*                9 - DSECT BASE FOR IDMCVT, PASSED BY IDMMAIN         *
*                8 -                                                  *
*                7 -                                                  *
*                6 - WORK REG                                         *
*                5 - WORK REG                                         *
*                4 - WORK REG                                         *
*                3 - WORK REG                                         *
*                2 - PARAM ADDRESS                                    *
*                1 - PARAM ADDRESS                                    *
*                0 -                                                  *
***********************************************************************
         EJECT
***********************************************************************
*               IDMPRINT CODE                                         *
***********************************************************************
         SPACE
*                            ******************************************
*                            *     DSECTS  AREAS.                     *
*                            ******************************************
         SPACE
IDMCVTD  DSECT
         COPY  IDMCVT
         EJECT
IDMWORKD DSECT
         COPY  IDMWORK
         EJECT
*                            ******************************************
*                            *   IDMPRINT CSECT INITIALIZATION.       *
*                            ******************************************
         SPACE 2
         INIT# IDMPRINT,BASEREG=(12,11),CODE=RENT,                     X
               EXEC=MAINLINE,REL=01.03.00,                             X
               EXLIST=YES
         USING IDMWORK,RA
         USING IDMCVT,R9
         EJECT
         CPYRIGHT IDMF,1982
         EJECT
*                            ******************************************
*                            *  CONTROL TABLES AND FIELDS.            *
*                            ******************************************
         SPACE 2
*                            ******************************************
*                            *    WORK FIELDS.                        *
*                            ******************************************
         SPACE
         DATA#
         SPACE
         ENDDATA#
         EJECT
*                            ******************************************
*                            * MAINLINE- MAIN ROUTINE OF THE IDMPRINT *
*                            ******************************************
         SPACE 2
         ENTRE# MAINLINE
         LR    RA,R1                        LOAD IDMWORK BASE
         LR    R9,R2                        LOAD IDMCVT BASE
*---------------------------------------------------------------------*
*        BUILD FULLY QUALIFIED DSNAME, USING DSNAME FROM TABLE        *
*---------------------------------------------------------------------*
         MVI   MSGPARM,BLANK           CLEAR WORK FIELD FOR DSNAME
         MVC   MSGPARM+1(L'MSGPARM-1),MSGPARM
         MVI   MSGPARM,QUOTE           FIRST BYTE IS QUOTE - FULL NAME
         L     R3,DSNAMEL              R3=LENGTH OF INPUT FROM TABLE
         BCTR  R3,R0                   -1 FOR EX
         MVC   MSGPARM+1(0),DSNAME
         EX    R3,*-6                  GET DSNAME FROM TABLE
         TRT   MSGPARM,TABLE           SEARCH FOR BLANK AFTER DSNAME
         LR    R6,R1                   R6=BLANK ADDRESS
         SPACE
         IF MBR,NE,BLANK256,CLC        IF MEMBER SPECIFIED
            MVI   0(R6),LPARENT           SET UP LEFT PARENT
            MVC   1(L'MBR,R6),MBR         GET MEMBER NAME FROM TABLE
            TRT   1(L'MBR+1,R6),TABLE     FIND FIRST BLANK AFTER DSN
            LR    R6,R1                   R6=BLANK ADDRESS
            MVI   0(R6),RPARENT           SET UP RIGHT PAREN
            LA    R6,1(R6)                R6=FIRST BLANK ADDRESS
         ENDIF                         ENDIF
         SPACE
         MVI   0(R6),QUOTE             CLOSE DSNAME BY QUOTE
         SPACE
*---------------------------------------------------------------------*
*        NOW WE TEST FOR USER PRINT                                   *
*---------------------------------------------------------------------*
         MVI   LASTACT,BLANK                      CLEAR LAST ACTION
         MVC   LASTACT+1(L'LASTACT-1),LASTACT
         MVI   USERSW,NO                ASSUME FILE HAS NO STRUCTURE,
         IF FSTR,NE,BLANK,CLI           IF FILE MAY HAVE A STRUCTURE
            L     R2,=V(IDMXP)             GET ADDR OF PRINT EXIT TABL
            DOWHILE FSTR,NE,0(R2),CLC,*AND*,0(R2),NE,X'FF',CLI
               LA    R2,(IDMXLEN)(R2)      SEARCH THRU TABLE
            ENDDO
            IF 0(R2),NE,X'FF',CLI          IF FILE STRUCTURE FOUND
*--         -- MAKE VARS AND PUT IN PROFILE AND SHARED FOR USER --
               MVI   USERSW,YES               SET SWITCH - TAKE EXIT
               MVI   PNSL,BLANK
               MVC   PNSL+1(L'PNSL-1),PNSL
               MVI   PVOL,BLANK
               MVC   PVOL+1(L'PVOL-1),PVOL
               MVC   PNSL,MSGPARM
               MVC   PVOL,VOL
               L     RF,ISPLADDR
               LA    R3,TUSERN
               LA    R4,SHARED
               CALL  (15),(,(R3),(R4)),VL,MF=(E,LCALL38) PUT IN SHARED
               L     RF,ISPLADDR
               LA    R3,TPANN
               LA    R4,PROFILE
               CALL  (15),(,(R3),(R4)),VL,MF=(E,LCALL38) PUT IN PROFLE
               LA    R5,(IDMXLEN-2)               GET BUFF LENGTH
               ST    R5,BUFFLEN                   STORE IT INTO WORD
               LA    R5,2(R2)                     GET BUFFER  ADDR
               L     RF,ISPLADDR                  GET ISPLINK ADDRESS
               LA    R2,BUFFLEN                   GET BUFF. LEN. ADDR
               CALL  (15),(,(R2),(R5)),VL,MF=(E,LCALL16) INVOKE USER
               MVC   MSGID,MSGID56                   SET MSG OK
               MVC   LASTACT(L'LACTPXIT),LACTPXIT    SET LAST ACTION
*              NOW WE UPDATE ROW IN TABLE TO REFLECT LAST ACTION
*
               MVI   ACTION,BLANK                 CLEAR LINE COMMAND
               L     RF,ISPLADDR                  GET ISPLINK ADDRESS
               LA    R2,SYSTAB                    GET SYSTAB ADDR
               CALL  (15),(,(R2)),VL,MF=(E,LCALL31) UPDATE ROW IN TABL
            ENDIF
         ENDIF
*---------------------------------------------------------------------*
*        INVOKE STANDARD PRINT, IF USER PRINT IS BYPASSED             *
*---------------------------------------------------------------------*
         IF USERSW,EQ,NO,CLI             IF USER EXIT BYPASSED
            MVI   BUFFCMD,BLANK             CLEAR TSO BUFFER
            MVC   BUFFCMD+1(L'BUFFCMD-1),BUFFCMD
            L     RF,ISPLADDR               GET ISPLINK ADDRESS
            LA    R2,PANELP                 GET POINTER TO PRINT PANEL
            CALL  (15),(,(R2)),VL,MF=(E,LCALL33)  DISPLAY PRINT PANEL
            IF RF,EQ,0,LTR                  IF RC=0
               LA    R5,(BUFFEND-BUFFTSO)      GET LENGTH OF TSO BUFFR
               ST    R5,BUFFLEN                STORE LENGTH INTO WORD
               L     RF,ISPLADDR               GET ISPLINK ADDRES
               LA    R2,BUFFLEN                GET BUFFLEN ADDR
               LA    R5,BUFFTSO                GET BUFFTSO ADDR
               CALL  (15),(,(R2),(R5)),VL,MF=(E,LCALL16) EXEC PRINT CMD
               MVI   LASTACT,BLANK             ERASE LAST ACTION
               MVC   LASTACT+1(L'LASTACT-1),LASTACT
               IF RF,EQ,0,LTR                  IF PRINT OK
                  MVC   MSGID,MSGID22             SET MSG OK
                  MVC   LASTACT(L'LACTP),LACTP    SET LAST ACTION
               ELSE                            ELSE
                  MVC   MSGID,MSGID23             SET ERR MSG
                  MVC   LASTACT(L'LACTPER),LACTPER  SET LAST ACTION
               ENDIF                           ENDIF
*              NOW WE UPDATE ROW IN TABLE TO REFLECT LAST ACTION
*
               MVI   ACTION,BLANK                 CLEAR LINE COMMAND
               L     RF,ISPLADDR                  GET ISPLINK ADDRESS
               LA    R2,SYSTAB                    GET SYSTAB ADDR
               CALL  (15),(,(R2)),VL,MF=(E,LCALL31) UPDATE ROW IN TABL
            ENDIF                           ENDIF
         ENDIF
         SPACE
         EXIT# RC=0
         EJECT
*                            ******************************************
*                            *     LITERALS                           *
*                            ******************************************
         SPACE
         LTORG
         SPACE 3
         END#  IDMPRINT
