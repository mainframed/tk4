         TITLE 'CHIMP - MAIN STORAGE MONITOR FOR TSO - 2260S'
CHIMP    CSECT
***********************************************************************
* IN CASE YOU ARE INTERESTED, THE SOURCE OF THE NAME (OR RATHER THE
* JUSTIFICATION FOR THE NAME) OF THIS SILLY PROGRAM IS/WAS:
*
*  COMPUTERIZED HEURISTIC INFORMATION MONITORING PROGRAM  (WHEW!)
*
* THIS COMMAND HAS SEVERAL DIFFERENT MODES OF DISPLAY:
*
*     I   - THIS MODE WILL DISPLAY ONLY THOSE MEMORIES WHICH ARE EITHER
*           SWAPPED IN AND RUNNING OR SWAPPED OUT BUT READY TO RUN.
*     O   - THIS MODE WILL DISPLAY ALL ACTIVE MEMORIES IN THE SYSTEM,
*           REGARDLESS OF LOCATION.
*
*   TO SWITCH BETWEEN MODES, TYPE EITHER I OR O.
*
*
*      YOU MAY ALSO ENTER OPTIONS TO RESTRICT THE OUTPUT TO ONLY
*      TSO MEMORIES (IN EITHER IN/OUT OR WAITING STATUS ACCORDING
*      TO YOUR USE OF THE I AND O OPTIONS ABOVE) OR ONLY STARTED
*      TASK/BATCH JOB MEMORIES:
*
*     T  - RESTRICTS THE OUTPUT TO ONLY TSO MEMORIES
*
*     B  - RESTRICTS THE OUTPUT TO STARTED TASK/BATCH MEMORIES
*
*     A  - RESETS THE TSO/STARTED TASK/BATCH JOB SELECTION.
*
*   TO EXIT FROM THIS COMMAND, SIMPLY TYPE E
*
*  GLOSSARY OF TERMS FOR OUTPUT DISPLAY:
*
*    JOB       JOB NAME OF MEMORY
*    STEP      FOR BATCH JOBS WILL ALWAYS BE INIT.
*              FOR TSO JOBS AND STARTED TASKS WILL BE ACTUAL STEP NAME.
*    P         REASON CODE FOR SWAP OUT FROM OUCBPFL.
*              THE FOLLOWING ARE THE REASON CODES DISPLAYED:
*                R  RESET VALUE.
*                W  MEMORY IS IN LONG WAIT OR INPUT TERMINAL WAIT.
*                T  MEMORY IS IN OUTPUT TERMINAL WAIT.
*                E  AN ENQHOLD HAS BEEN RECEIVED FOR THIS MEMORY.
*                V  MEMORY WAS SWAPPED OUT BY MS6 LONG WAIT DETECTION.
*                O  MEMORY WAS SWAPPED OUT TO MAKE ROOM FOR TSO TRIV.
*                P  INVOLUNTARY SWAPOUT USUALLY DUE TO PARTIAL ANAL.
*                S  SWAPOUT CAUSED BY REAL STORAGE SHORTAGE.
*                ?  UNABLE TO DETERMINE SWAPOUT REASON.
*    MEMORY    CURRENT AMOUNT OF MEMORY ALLOCATED TO THIS MEMORY.
*    WSS       SRM'S VIEW OF THE WORKING SET SIZE FOR THIS MEMORY.
*    T         TYPE OF MEMORY (S=STC OR BATCH, T=TSO USER)
*    LOC       CURRENT LOCATION OF THIS MEMORY:
*                IN  SWAPPED IN AND ELIGIBLE TO RUN.
*                OUT SWAPPED OUT BUT READY TO RUN.
*                WT  SWAPPED OUT AND NOT READY TO RUN.
*                N/S SWAPPED IN AND V=R OR NON-SWAPPABLE STATUS.
*                <-> TRANSITIONING BETWEEN STATES.
*    DP        DISPATCHING PRIORITY OF MEMORY (IN HEX).
*    PG        PERFORMANCE GROUP.
*    SC        NUMBER OF TIMES THE MEMORY HAS BEEN SWAPPED IN THE
*              CURRENT TRANSACTION.
*    WMR       CURRENT SRM WORKLOAD MANAGER RECOMMENDATION VALUE.
*              (ACTUALLY THE WORKLOAD LEVEL AT WHICH THIS MEMORY IS
*               OPERATING).
*    SRV       SERVICE ACCUMULATED IN THE LAST SWAPPED IN PERIOD.
*    CPU       CPU TIME IN SECONDS USED BY THE MEMORY (SRB PLUS TASK).
***********************************************************************
*
         SAVE  (14,12)          SAVE THE CALLERS REGISTERS
         LR    12,15            ESTABLISH
         USING CHIMP,12           ADDRESSABILITY.
         LA    11,SAVE          SET-UP
         ST    13,SAVE+4          SAVE
         ST    11,8(,13)             AREA
         LR    13,11                  CHAINING.
         SPACE
* DO COMMAND BUFFER ANALYSIS
         SPACE
         L     2,0(,1)                  PICK UP CBUF ADDR
         LH    3,0(,2)                  PICK UP BUFFER LENGTH
         LH    4,2(,2)                  PICK UP OPERAND OFFSET
         SH    3,=H'4'                  SUBTRACT FOUR
         CR    3,4                      CHECK FOR NULL OPERAND
         BNH   FINDCVT
         LA    2,4(4,2)                 FIND OPERAND
         B     CHECKOP
         SPACE
FINDCVT  DS    0H
         TPUT  CPUTIME-1,1,HOLD,ASIS    SYNC FOR *2260*
         SVC   236                      ERASE FOR *2260*
         TPUT  HEADING,80               *2260*
         L     2,16             LOAD PTR TO CVT.
         L     2,556(,2)        TO ASVT
         L     3,516(,2)        MAXIMUM NUMBER OF ENTRIES
         LA    4,524(,2)        FIRST ENTRY MINUS 4.
ASCBLOOP LA    4,4(,4)          BUMP BY FOUR.
         ICM   5,B'1111',0(4)   LOAD THE PTR.
         BM    NOGOOD           BRANCH IF BAD PTR.
         TM    102(5),X'04'     TEST FOR SWAPPED OUT.
INOROUT  BO    NOGOOD           BRANCH IF OUT AND NOT READY TO RUN.
         L     6,144(,5)         LOAD PTR TO OUCB FOR QUICK TSO CHK
         TM    18(6),X'20'      CHECK FOR TSO.
TSOORNO  BC    0,NOGOOD         TO BE FILLED IN IF BATCH ONLY.
BATCHORN BC    0,NOGOOD         TO BE FILLED IN LATER.
         MVI   LINE,C' '        CLEAR OUTPUT LINE TO BLANKS.
         MVC   LINE+1(77),LINE   DITTO.
         MVC   JOB(8),=CL8'STARTING' TO BYPASS GARBAGE
         ICM   6,B'1111',172(5) LOAD PTR TO JOBNAME.
         BZ    NOTJOB           BRANCH IF ZERO POINTER.
         MVC   JOB,0(6)         OTHERWISE, MOVE IN JOBNAME.
         B     JOBOK            BYPASS FURTHER JOBNAME PROCESSING.
NOTJOB   ICM   6,B'1111',176(5) PTR IF S/M/L.
         BZ    JOBOK            BYPASS THIS MOVE IF POINTER IS ZERO.
         MVC   JOB,0(6)         MOVE IN JOBNAME FOR S/M/L MEMORIES.
JOBOK    DS    0H
         ICM   7,B'1111',56(5)  LOAD POINTER TO THE TOP CSCB.
         BZ    STEPOK           BRANCH IF CSCB POINTER IS ZERO.
         CLI   4(7),X'04'       CHECK TO SEE IF BATCH JOB OR S/M/L
         BE    STORMT           JOB IS START OR MOUNT
         CLI   4(7),X'0C'       CHECK TO SEE IF BATCH JOB OR S/M/L
         BE    STORMT           JOB IS START OR MOUNT
         MVC   STEP(8),16(7)    PICK UP CHCLS.
         B     STEPOK           BYPASS FURTHER CSCB PROCESSING.
STORMT   MVC   STEP(8),8(7)     PICK UP CHKEY.
STEPOK   DS    0H
         LH    6,152(,5)         LOAD ALLOC FRAME COUNT.
         SLL   6,2              MULTIPLY BY FOUR.
         CVD   6,WORK           CONVERT TO DECIMAL FORMAT.
         MVC   SIZE(6),=X'2020202120D2' GET READY FOR EDIT.
         ED    SIZE-1(6),WORK+5 EDIT THE RESULT.
         L     6,144(,5)        PTR TO OUCB.
         LH    7,58(,6)          LOAD OUCBWSS
*        SLL   7,2              TIMES FOUR FOR K.
         CVD   7,WORK           CONVERT TO DECIMAL.
         MVC   OUCBWSS(6),=X'202020212040' MOVE IN THE EDIT MASK.
         ED    OUCBWSS-1(6),WORK+5 EDIT THE RESULT.
         TM    18(6),X'20'      TEST FOR TSO MEMORY
         BZ    NOTTSO           BRANCH IF NOT TSO.
         MVI   TYPE,C'T'        MOVE IN TSO MEMORY INDICATION.
         B     TYPEOK           BYPASS REST OF TYPE PROCESSING.
NOTTSO   MVI   TYPE,C'S'        MOVE IN S/M/L INDICATION.
TYPEOK   DS    0H
         MVC   WHERE,=CL3'IN'   DEFAULT MEMORY POSITION IS IN.
         TM    17(6),X'80'      TEST FOR NON-SWAP
         BZ    TRYWAIT          BRANCH IF NOT NON-SWAP.
         MVC   WHERE,=CL3'N/S'  MOVE IN NON-SWAP INDICATION.
         B     WHEREOK          BY-PASS REST OF POSITION PROCESSING.
TRYWAIT  DS    0H
         TM    16(6),X'08'      CHECK FOR WAIT
         BZ    TRYOUT           BRANCH IF NOT.
         MVC   WHERE,=CL3'WT'   MOVE IN WAIT POSITION INDICATION.
         B     WHEREOK          BY-PASS REST OF POSITION PROCESSING.
TRYOUT   TM    16(6),X'04'      TRY OUT QUEUE
         BZ    TRYTRIV          IF NOT, GO TRY TRIVIAL QUEUE STATUS.
         MVC   WHERE,=CL3'OUT'  MOVE IN OUT QUEUE POSITION.
         B     WHEREOK          BY-PASS REST OF POSITION PROCESSING.
TRYTRIV  TM    16(6),X'02'      CHECK FOR TRIVIAL QUEUE POSITION.
         BZ    WHEREOK          IF NOT, EXIT POSITION PROCESSING.
         MVC   WHERE,=CL3'TRV'  MOVE IN TRIVIAL QUEUE POSITION.
WHEREOK  DS    0H
         TM    16(6),X'E0'      CHECK FOR TRANSITIONING STATUS
         BZ    NOTTRANS         BRANCH IF MEMORY NOT TRANSITIONING.
         MVC   WHERE(3),=CL3'<->' INDICATE TRANSITIONING.
NOTTRANS DS    0H
         SR    7,7              PREPARE FOR THE INSERT CHARACTERS.
         IC    7,43(,5)         LOAD ASCBDP
         SRL   7,4              SHIFT OUT LOW ORDER NIBBLE.
         IC    8,HEX(7)         PICK THE EBCDIC CHARACTER.
         STC   8,DP             STORE INTO OUTPUT FIELD.
         IC    7,43(,5)         LOAD THE DISPATCHING PRIORITY AGN.
         N     7,=F'15'         TURN OFF HIGH ORDER NIBBLE.
         IC    8,HEX(7)         LOAD THE EBCDIC CHARACTER.
         STC   8,DP+1           STORE INTO OUTPUT LINE.
         SR    7,7              PREPARE FOR THE IC.
         IC    7,24(,6)         NEW PGN
         CVD   7,WORK           CONVERT IT TO DECIMAL.
         MVC   OUCBPGN(3),=X'202120' MOVE IN THE EDIT MASK.
         ED    OUCBPGN-1(4),WORK+6 EDIT THE OUTPUT FIELD.
         LH    7,30(,6)         LOAD OUCBSWC (SWAP COUNT)
         CVD   7,WORK           CONVERT IT TO DECIMAL.
         MVC   OUCBSWC(3),=X'202120' MOVE IN THE EDIT MASK.
         ED    OUCBSWC-1(4),WORK+6 EDIT THE OUTPUT FIELD.
         LH    7,72(,6)         LOAD OUCBWMR
         LTR   7,7              SEE IF HI-ORDER BIT IS ON
         BNM   WMROK             INDICATING WMR INVALID.
         MVC   OUCBWMR(5),=C'*N/A*' IF SO, MOVE IN NOT AVAIL INDIC.
         MVI   OUCBWMS+4,C'-'   AND BLANK OUT THE SERVICE COUNTER.
         B     NOWMS            BY-PASS THE SERVICE PROCESSING.
WMROK    DS    0H
         SRL   7,8              DIVIDE BY 256
         CVD   7,WORK           CONVERT IT TO DECIMAL.
         MVC   OUCBWMR(5),=X'2020202120' MOVE IN EDIT MASK.
         ED    OUCBWMR-1(6),WORK+5 EDIT THE RESULT.
WMROKA   DS    0H
         CLI   71(6),C'A'               OUCBPFL PRINTABLE
         BL    *+10
         MVC   STATUS(1),71(6)  OUCBPFL (SWAP REASON CODE)
         TM    16(6),X'0E'      SEE IF OUT SOMEHOW
         BC    9,PFLDONE        MUST BE IN.
         TM    21(6),X'20'      CHECK FOR TERMINAL OUTPUT WAIT.
         BNO   NOTOUTW          BR IF NOT.
         MVI   STATUS,C'T'      INDICATE OUTPUT WAIT.
         B     PFLDONE
NOTOUTW  DS    0H
         CLI   71(6),C'R'       SEE IF R WHEN OUT.
         BNE   PFLDONE          SKIP REST OF PFL PROCESSING.
         TM    21(6),X'01'      SEE IF MS6 DETECTED WAIT.
         BNO   NOTMS6           BR IF NOT
         MVI   STATUS,C'V'      MOVE IN MS6 REASON CODE.
         B     PFLDONE
NOTMS6   TM    21(6),X'08'      SEE IF ENQHOLD AGAINST THIS MEMORY.
         BNO   NOTENQ           BR IF NOT
         MVI   STATUS,C'E'      MOVE IN ENQHOLD REASON CODE.
         B     PFLDONE
NOTENQ   TM    18(6),X'08'      SEE IF CTL URGES SWAP BIT IS ON.
         BNO   NOTCTL
         MVI   STATUS,C'C'      MOVE IN CTL REASON CODE
         B     PFLDONE
NOTCTL   MVI   STATUS,C'?'      MOVE IN DONT KNOW INDICATION.
PFLDONE  DS    0H
         L     7,44(,6)         OUCBWMS LOAD SERVICE UNITS THIS XACTION
         CVD   7,WORK           CONVERT TO DECIMAL.
         MVC   OUCBWMS(5),=X'2020202120' MOVE IN THE EDIT MASK.
         ED    OUCBWMS-1(6),WORK+5 EDIT THE RESULT.
NOWMS    LM    8,9,64(5)        LOAD UP EJST (CPU TIME - TASK TYPE)
         SRDL  8,12             TO GET MICROSEC
         LM    10,11,200(5)     LOAD UP SRB TIME.
         SRDL  10,12            TO GET MICROSEC
         AR    9,11             ADD TOGETHER.
         CVD   9,WORK           CONVERT IT TO DECIMAL.
         MVC   CPUTIME(8),=X'20202021204B2020' MOVE IN THE EDIT MASK.
         ED    CPUTIME-1(9),WORK+2 EDIT THE RESULT.
         TPUT  LINE,78                *2260*
NOGOOD   BCT   3,ASCBLOOP       BRANCH BACK TO LOOK AT NEXT MEMORY.
         B     GOAWAY
CHECKOP  OI    0(2),X'40'       GET TO UPPER CASE BEFORE COMPARE.
         CLI   0(2),C'T'        CHECK FOR TSO ONLY.
         BNE   BATCHCHK         IF NOT, TRY FOR BATCH ONLY MODE.
         MVI   BATCHORN+1,X'80' RESET THE BRANCHES TO GET
         MVI   TSOORNO+1,X'00'     ONLY TSO MEMORIES.
         B     GOODGRIF         BY-PASS FURTHER INPUT CHECKING.
BATCHCHK CLI   0(2),C'B'        CHECK FOR BATCH ONLY
         BNE   OTHERCHK         BRANCH TO CHECK OTHER OPTIONS.
         MVI   TSOORNO+1,X'10'  RESET THE BRANCHES TO GET
         MVI   BATCHORN+1,X'00'    ONLY BATCH (STC) MEMORIES.
         B     GOODGRIF         BY-PASS FURTHER INPUT CHECKING.
OTHERCHK CLI   0(2),C'A'        CHECK FOR EVERYTHING
         BNE   XYZ              IF NOT, TRY FOR IN OR OUT MODES.
         MVI   TSOORNO+1,X'00'  IF EVERYTHING, NOP ALL THE
         MVI   BATCHORN+1,X'00'    SELECTION BRANCHES.
XYZ      DS    0H
         CLI   0(2),C'O'        CHECK FOR OUT MODE
         BNE   WHATHECK
         MVI   INOROUT+1,X'00'  NOP THE BRANCH
         MVI   MODESW,X'FF'     INDICATE CHANGE OF MODES.
         B     GOODGRIF
WHATHECK CLI   0(2),C'I'        CHECK FOR IN OR READY MODE
         BNE   GOODGRIF
         MVI   INOROUT+1,X'10'  TAKE THE BRANCH
         MVI   MODESW,X'FF'     INDICATE MODE SWITCH.
GOODGRIF DS    0H
         LA    2,1(,2)                  MOVE TO NEXT CHAR
         CLI   0(2),C' '                ANOTHER OPERAND?
         BH    CHECKOP                  YES CHECK IT
         B     FINDCVT          START OVER FROM BEGINNING.
MODEOK   DS    0H
         LTR   3,3              CHECK TO SEE IF MORE MEMORIES TO PROCES
         BNZ   NOGOOD           BRANCH IF YES.
         B     FINDCVT          OTHERWISE, START OVER FROM THE TOP.
GOAWAY   L     13,SAVE+4        LOAD CALLERS SAVE AREA POINTER.
         RETURN (14,12),RC=0    AND AWAY WE GO...
MODESW   DC    X'00'  MODE CHANGE.
WORK     DS    D
HEX      DC    C'0123456789ABCDEF'
SAVE     DS    18F
X        DC    CL80' '
         ORG   X
LINE     DS    0CL78
JOB      DC    CL8' '
         DC    C' '
         DC    C' '
STEP     DC    CL8' '
         DC    C' '
STATUS   DC    C' '
         DC    C' '
SIZE     DC    CL5' '
         DC    CL2' '
OUCBWSS  DC    CL5' '
         DC    CL2' '
TYPE     DC    C' '
         DC    C' '
WHERE    DC    CL3' '
         DC    C' '
DP       DC    CL2' '
         DC    C' '
OUCBPGN  DC    CL3' '
         DC    C' '
OUCBSWC  DC    CL3' '
         DC    C' '
         DC    C' '
         DC    C' '
OUCBWMR  DC    CL5' '
         DC    C' '
OUCBWMS  DC    CL5' '
         DC    C' '
CPUTIME  DC    CL8' '
         DC    C' '
         ORG X+90
         DC    X'401DE8'
HEADING DC CL80'  JOB     STEP     P MEMORY   WSS  T LOC DP  PG  SC    X
                WMR   SRV     CPU'
         END   CHIMP
