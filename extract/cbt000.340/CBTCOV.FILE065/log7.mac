GRAPH    TITLE 'THE WORLDS MOST RIDICULOUS GRAPHIC ANIMATION SYSTEM'
GRAPHIKS CSECT                                              *HMD 08/81*
         SETREG 12
         USING SCREEN,R11
         USING CARD,R9
         USING TABLE,R8
         OPEN  (CONTROL)      OPEN CONTROL CARD FILE
         GETMAIN R,LV=4096    OBTAIN TABLE STORAGE
         ST    R1,TABLE1      SAVE TABLE ADDR
         GETMAIN R,LV=8192    SCREEN BUFFER
         ST    R1,SCRAREA     FOR LATER FREEING             *HMD 08/81*
         LA    R11,3128(R1)   START OF SCREEN DSECT
         GETMAIN R,LV=4096    COMPRESS SCREEN BUFFER        *HMD 08/81*
         ST    R1,CBAREA      SAVE ADDRESS OF BUFFER        *HMD 08/81*
         LA    R2,8(R1)       LOAD FIELDS AREA              *HMD 08/81*
         BAL   R14,CLRIMAG    CLEAR COMRESSED SCREEN IMAGE  *HMD 08/81*
         B     ERASE          CLEAR THE SCREEN
         EJECT                                              *HMD 08/81*
***********************************************************************
*                                                                     *
*   READ CONTROL CARD AND BRANCH TO PROPER ROUTINE                    *
*                                                                     *
***********************************************************************
NEXT     GET   CONTROL
         LR    R9,R1          ADDR OF CONTROL CARD
         L     R8,TABLE1      TABLE ADDR FOR FIRST PATH
         LA    R7,6           THERE ARE SIX INDEPENDENT PATHS
         CLI   CTYPE,C' '     IS THIS A MOVE STATEMENT?
         BE    MOVE           YES. STORE MOVE IN TABLE
         B     REPEAT         NO. PERFORM ALL MOVES IN TABLE
NEXT2    L     R8,TABLE1      CONTINUE PROCESSING
         LA    R7,6
         CLI   CTYPE,C'.'     IS THIS A PATH DEFINITION?
         BE    DEFINE         YES.
         CLI   CTYPE,C'?'     IS THIS A ATTRIBUTE DEFINITION?
         BE    ATTR           YES.
         CLI   CTYPE,C','     IS THIS A WAIT REQUEST?
         BE    WAIT           YES.
         CLI   CTYPE,C'/'     IS THIS A TIMER INTERVAL?
         BE    TIME           YES.
         CLI   CTYPE,C'#'     IT THIS A CLEAR SCREEN?
         BE    ERASE          YES.
         CLI   CTYPE,C'$'     IS THIS A SCREEN IMAGE?
         BE    IMAGE          YES.
         B     NEXT           NONE OF THE ABOVE. IGNORE CARD.
         EJECT                                              *HMD 08/81*
***********************************************************************
*                                                                     *
*   DEFINE A FIELD                                                    *
*                                                                     *
***********************************************************************
DEFINE0  LA    R9,12(R9)      NEXT PATH ON CARD
         LA    R8,512(R8)     TABLE ADDR FOR NEXT PATH
DEFINE   MVI   TMEND+2,X'FF'  MARK END OF MOVE TABLE
         CLI   C2,C'='        IS THERE DATA FOR THIS PATH?
         BNE   DEFINE2        NO. TRY NEXT PATH.
         LA    R1,TMEND
         ST    R1,TMNEXT
         BAL   R10,PACK       CONVERT THE DATA TO USABLE FORMAT
         MVC   TCHAR,C1       SAVE THE DISPLAY CHARACTER
         MVC   TL1,=H'1922'   DUMMY ENTRY IN LOCATION TABLE
         MVC   TL2(198),TL1   DUMMY ALL ENTRIES
         BCTR  R3,0
         AR    R3,R3
         AR    R3,R8
         ST    R3,TLEND       ADDR OF LAST LOCATION ENTRY
         STH   R2,0(R3)       FIRST ACTUAL LOCATION
         LA    R4,FIELD(R2)
         MVC   0(1,R4),TCHAR  MOVE FIRST CHARACTER TO SCREEN
DEFINE2  BCT   R7,DEFINE0     TRY NEXT PATH.
         BAL   R10,DISPLAY    DISPLAY THE SCREEN
         B     NEXT           READ NEXT CARD
         EJECT                                              *HMD 08/81*
***********************************************************************
*                                                                     *
*   STORE MOVE INFORMATION IN MOVE TABLE                              *
*                                                                     *
***********************************************************************
MOVE0    LA    R9,12(R9)      NEXT PATH ON CARD
         LA    R8,512(R8)     TABLE ADDR FOR NEXT PATH
MOVE     CLI   C5,C':'        IS THERE AN ENTRY FOR THIS PATH?
         BNE   MOVE9          NO. TRY NEXT PATH.
         BAL   R10,PACK       CONVERT THE DATA TO USABLE FORMAT
         LA    R1,ORTBL(R7)
         OC    SWITCH,0(R1)   INDICATE THIS PATH IS ACTIVE
         MVC   TM1(246),TM2   SHUFFLE THE TABLE
         STH   R2,TM50R2      STORE NEW ENTRY AT BOTTOM
         ZAP   TM50R3,CONVERT
         L     R1,TMNEXT
         SH    R1,=H'6'
         ST    R1,TMNEXT      INCREMENT MOVE TABLE ENTRY COUNT
         CLI   C2,C'@'        IS REQUEST FOR BLOCK MOVE?
         BE    MOVE2          YES. SET FLAG.
         CLI   C2,C'!'        IS REQUEST FOR MASS MOVE?
         BE    MOVE3          YES. SET FLAG.
         MVI   TM50R4,0       TURN OFF BLOCK MOVE FLAG
         B     MOVE9
MOVE2    MVI   TM50R4,1       TURN ON BLOCK MOVE FLAG
         B     MOVE9
MOVE3    MVI   TM50R4,2       TURN ON MASS MOVE FLAG
MOVE9    BCT   R7,MOVE0       TRY NEXT PATH.
         B     NEXT           READ NEXT CARD
         EJECT                                              *HMD 08/81*
***********************************************************************
*                                                                     *
*   PERFORM THE DATA MOVEMENT DEFINED IN MOVE TABLE                   *
*                                                                     *
***********************************************************************
REPEAT0  LA    R8,512(R8)     TABLE ADDR FOR NEXT PATH
REPEAT   CLI   SWITCH,0       IS PROCESSING COMPLETE?
         BE    NEXT2          YES. CONTINUE NORMAL PROCESSING.
         LA    R1,ORTBL(R7)
         IC    R1,0(R1)
         EX    R1,TEST        IS THIS PATH ACTIVE?
         BNO   REPEAT9        NO. TRY NEXT PATH.
         L     R6,TMNEXT      START AT TOP OF MOVE TABLE
REPEAT2  CLI   2(R6),X'FF'    IS THIS THE END OF THE MOVE TABLE?
         BNE   REPEAT3        NO. CONTINUE.
         LA    R1,ANDTBL(R7)
         NC    SWITCH,0(R1)   DEACTIVATE PATH
         B     REPEAT9        TRY NEXT PATH
REPEAT3  SP    2(2,R6),=P'1'  IS THIS MOVE ENTRY COMPLETE?
         BNM   REPEAT4        NO. CONTINUE.
         LA    R6,6(R6)       TRY NEXT MOVE IN TABLE
         ST    R6,TMNEXT
         B     REPEAT2
REPEAT4  TM    4(R6),1        IS REQUEST FOR BLOCK MOVE?
         BO    REPEAT5        YES.
         LH    R4,TL1         OLDEST LOCATION ENTRY
         LA    R4,FIELD(R4)
         MVI   0(R4),C' '     BLANK OUT OLDEST LOCATION
         L     R4,TLEND
         LH    R5,0(R4)       MOST RECENT LOCATION ENTRY
         MVC   TL1(198),TL2   SHUFFLE TABLE
         AH    R5,0(R6)       UPDATE LOCATION BASED ON MOVE INFO
         STH   R5,0(R4)
         LA    R5,FIELD(R5)
         MVC   0(1,R5),TCHAR  MOVE CHARACTER TO NEW LOCATION
         TM    4(R6),2        IS THIS A MASS MOVE?
         BO    REPEAT2        YES. REPEAT THIS MOVE UNTIL EXHAUSTED.
         B     REPEAT9
REPEAT5  LA    R1,TL1
REPEAT6  LH    R4,0(R1)
         LA    R5,FIELD(R4)
         MVI   0(R5),C' '     BLANK OUT OLD LOCATION
         LA    R1,2(R1)       TRY NEXT SLOT
         C     R1,TLEND       DID WE MOVE THEM ALL?
         BNH   REPEAT6        NO. DO IT AGAIN.
         LA    R1,TL1
REPEAT7  LH    R4,0(R1)
         CH    R4,=H'1922'    IS THIS A DUMMY?
         BE    REPEAT8        YES. SKIP.
         AH    R4,0(R6)       COMPUTE NEW LOCATION
         STH   R4,0(R1)
         LA    R5,FIELD(R4)
         MVC   0(1,R5),TCHAR  MOVE CHAR TO NEW LOCATION
REPEAT8  LA    R1,2(R1)       TRY NEXT SLOT
         C     R1,TLEND       DID WE MOVE THEM ALL?
         BNH   REPEAT7        NO. DO IT AGAIN.
REPEAT9  BCT   R7,REPEAT0     TRY NEXT PATH.
         BAL   R10,DISPLAY    DISPLAY WHEN ALL PATHS ARE UPDATED
         L     R8,TABLE1
         LA    R7,6
         B     REPEAT         START OVER UNTIL ALL MOVES COMPLETE
TEST     TM    SWITCH,0       USED TO CHECK PATH ACTIVITY
         EJECT                                              *HMD 08/81*
***********************************************************************
*                                                                     *
*   FIELD ATTRIBUTE BYTE DEFINITION                                   *
*                                                                     *
***********************************************************************
ATTR0    LA    R9,12(R9)
ATTR     CLI   C5,C':'
         BNE   ATTR9
         BAL   R10,PACK
         L     R1,ATTRONE
ATTR2    C     R1,ATTRLAST
         BNL   ATTR5
         CH    R2,0(R1)
         BE    ATTR8
         LA    R1,4(R1)
         B     ATTR2
ATTR5    L     R1,ATTRLAST    NEXT ENTRY IN TABLE
         STH   R2,0(R1)       STORE LOCATION
         STH   R3,2(R1)       STORE ATTRIBUTE
         LA    R1,4(R1)       INCREMENT
         ST    R1,ATTRLAST    UPDATE POINTER
         B     ATTR9
ATTR8    STH   R3,2(R1)
ATTR9    BCT   R7,ATTR0
         B     NEXT
         EJECT                                              *HMD 08/81*
***********************************************************************
*                                                                     *
*   WAIT FOR TIME INTERVAL (SSHH) IN HUNDREDTHS OF SECONDS            *
*                                                                     *
***********************************************************************
WAIT     PACK  CONVERT,CTIME  TIME IN HUNDREDTHS OF SECOND
         CVB   R2,CONVERT
         ST    R2,CONVERT
         STIMER WAIT,BINTVL=CONVERT WAIT FOR INTERVAL
         B     NEXT           READ NEXT CARD
***********************************************************************
*                                                                     *
*   SET A WAIT INTERVAL FOR EACH DISPLAY                              *
*                                                                     *
***********************************************************************
TIME     PACK  CONVERT,CTIME  TIME IN HUNREDTHS OF SECOND
         CVB   R2,CONVERT
         ST    R2,TIMER
         B     NEXT           PROCESS NEXT CARD
***********************************************************************
*                                                                     *
*   CLEAR THE SCREEN                                                  *
*                                                                     *
***********************************************************************
ERASE    LA    R2,FIELD
         LA    R3,1920
         SR    R4,R4
         IC    R5,=C' '
         SLL   R5,24
         MVCL  R2,R4
         MVC   ATTRLAST,ATTRONE ZERO THE ATTRIBUTE TABLE
         B     NEXT
***********************************************************************
*                                                                     *
*   CLEAR THE COMPRESSED SCREEN IMAGE                                 *
*                                                                     *
***********************************************************************
CLRIMAG  LA    R2,0(R2)         ADDRESS OF SCREEN IMAGE
         LA    R3,1924
         SR    R4,R4
         IC    R5,=C' '
         SLL   R5,24
         MVCL  R2,R4
         BR    R14              RETURN TO CALLER            *HMD 08/81*
***********************************************************************
*                                                                     *
*   USER SUPPLIED SCREEN IMAGE                                        *
*                                                                     *
***********************************************************************
IMAGE    LA    R2,24
         LA    R3,FIELD
IMAGE2   GET   CONTROL
         MVC   0(80,R3),0(R1)
         LA    R3,80(R3)
         BCT   R2,IMAGE2
         B     NEXT
         EJECT                                              *HMD 08/81*
***********************************************************************
*                                                                     *
*   DISPLAY THE SCREEN                                                *
*                                                                     *
***********************************************************************
DISPLAY  MVC   CLEARX,CLEAR   3270 CONTROL CHARACTERS
         L     R3,ATTRONE     FIRST ATTRIBUTE
         LA    R2,SCREENL     FIXED PORTION OF SCREEN LENGTH
         LA    R4,SCREENX     END OF FIXED SCREEN
DISPLAY2 C     R3,ATTRLAST    IS THERE ANOTHER ENTRY?
         BNL   DISPLAY9       NO.
         LH    R5,0(R3)       ABSOLUTE LOCATION
         LR    R6,R5
         SRL   R5,6           DIVIDE BY 64
         N     R6,=F'63'      ISOLATE FIRST 6 BITS
         LA    R5,ADDRTBL(R5)
         LA    R6,ADDRTBL(R6)
         MVC   ATTRCOL,0(R5)  MOVE ADDR BYTE
         MVC   ATTRROW,0(R6)  MOVE ADDR BYTE
         LH    R5,2(R3)
         LA    R5,TYPETBL(R5)
         MVC   ATTRTYPE,0(R5) MOVE TYPE BYTE
         MVC   0(5,R4),ATTRSTR
         LA    R4,5(R4)       INCREMENT
         LA    R3,4(R3)
         LA    R2,5(R2)
         B     DISPLAY2
*ISPLAY9 LA    R1,SCREEN
DISPLAY9 MVC   0(4,R4),=X'11404013'
* SET UP PARM LIST FOR CB3270 PROGRAM (COMPRESS BUFFER)     *HMD 08/81*
         LA    R5,24          NUMBER OF SCREEN LINES        *HMD 08/81*
         ST    R5,LINES       SAVE IN FULL WORD             *HMD 08/81*
         LA    R5,1924        LENGTH OF INPUT AREA          *HMD 08/81*
         ST    R5,LENGTH      SAVE IN FULL WORD             *HMD 08/81*
         MVC   SCRLINE,=A(LINES)   ADDRESS OF NO. OF LINES  *HMD 08/81*
         MVC   SCRLEN,=A(LENGTH)   ADDRESS OF LENGTH        *HMD 08/81*
         LA    R5,FIELD       ADDRESS OF INPUT AREA         *HMD 08/81*
         ST    R5,SCRBEGN     SAVE IN PARM LIST             *HMD 08/81*
         L     R5,CBAREA      LOAD A(COMPRESSED IMAGE AREA) *HMD 08/81*
         A     R5,=F'8'       MAKE ROOM FOR CLEAR SCREEN    *HMD 08/81*
         ST    R5,SCROUTP     IN-PLACE COMPRESSION          *HMD 08/81*
         LA    R1,CBPARMS     LOAD ADDRESS OF PARM LIST     *HMD 08/81*
         L     R15,=V(CB3270) CALL THE PROGRAM              *HMD 08/81*
         BALR  R14,R15                                      *HMD 08/81*
         L     R2,LENGTH      GET NEW SCREEN LENGTH         *HMD 08/81*
         A     R2,=F'8'       +4 FOR CLEAR STRING           *HMD 08/81*
         L     R5,CBAREA      GET NEW SCREEN AREA ADDR      *HMD 08/81*
         MVC   0(8,R5),CLEAR  CLEAR THE SCREEN              *HMD 08/81*
         LR    R1,R5          GET SCREEN ADDRESS            *HMD 08/81*
         TPUT  (1),(2),FULLSCR DISPLAY THE SCREEN           *HMD 08/81*
         LA    R2,8(R5)       GET SCREEN ADDR IN R2         *HMD 08/81*
         BAL   R14,CLRIMAG    CLEAR THE SCREEN IMAGE        *HMD 08/81*
         CLC   TIMER,=F'0'    IS THE WAIT INTERVAL ZERO
         BER   R10            YES. SKIP THE WAIT.
         STIMER WAIT,BINTVL=TIMER WAIT FOR TIME INTERVAL
         BR    R10            RETURN TO CALLING ROUTINE
         EJECT                                              *HMD 08/81*
***********************************************************************
*                                                                     *
*   CONVERT THE DATA TO USABLE FORMAT                                 *
*                                                                     *
***********************************************************************
PACK     PACK  CONVERT,C3     FIRST FIELD IS ROW OF DISPLAY
         CVB   R2,CONVERT
         CLI   C3,C'-'        IS IT NEGATIVE?
         BNE   PACK2          NO.
         LNR   R2,R2          MAKE IT NEGATIVE
PACK2    MH    R2,=H'80'      80 CHARACTERS PER ROW ON DISPLAY
         PACK  CONVERT,C6     SECOND FIELD IS COLUMN
         CVB   R3,CONVERT
         CLI   C6,C'-'        NEGATIVE?
         BNE   PACK3          NO.
         LNR   R3,R3          MAKE IT NEGATIVE
PACK3    AR    R2,R3          ADD COLUMN TO ROW
         PACK  CONVERT,C9     THIRD FIELD IS COUNT
         CVB   R3,CONVERT
         BR    R10            RETURN TO CALLER
         EJECT                                              *HMD 08/81*
***********************************************************************
*                                                                     *
*   CLEAN UP AND GO HOME                                              *
*                                                                     *
***********************************************************************
END      CLOSE (CONTROL)      CLOSE FILE
         L     R1,TABLE1      GET AREA TO FREE
         FREEMAIN R,LV=4096,A=(1)      FREE CORE            *HMD 08/81*
         L     R1,SCRAREA     GET AREA TO FREE              *HMD 08/81*
         FREEMAIN R,LV=8192,A=(1)      FREE CORE            *HMD 08/81*
         L     R1,CBAREA      GET AREA TO FREE              *HMD 08/81*
         FREEMAIN R,LV=4096,A=(1)      FREE CORE            *HMD 08/81*
ENDER    EOJ   RC=0           RETURN TO OPERATING SYSTEM    *HMD 08/81*
         EJECT                                              *HMD 08/81*
***********************************************************************
*                                                                     *
*   MISCELLANEOUS GARBAGE                                             *
*                                                                     *
***********************************************************************
         LTORG
CBPARMS  DS    0F             PARMS FOR CB3270 PGM          *HMD 08/81*
SCRLEN   DC    F'0'           ADDRESS OF STRING LENGTH      *HMD 08/81*
SCRLINE  DC    F'0'           ADDRESS OF NUMBER OF LINES    *HMD 08/81*
SCRBEGN  DC    F'0'           ADDRESS OF INPUT  AREA        *HMD 08/81*
SCROUTP  DC    F'0'           ADDRESS OF OUTPUT AREA        *HMD 08/81*
*                             END OF CB3270 PARMS           *HMD 08/81*
CONVERT  DC    D'0'           CONVERT TO BAINARY
TIMER    DC    F'0'           WAIT INTERVAL FOR DISPLAY
LINES    DC    F'0'           NUMBER OF LINES TO COMPRESS   *HMD 08/81*
LENGTH   DC    F'0'           LENGTH OF INPUT/OUTPUT BUFFER *HMD 08/81*
TABLE1   DC    A(0)           ADDR OF FIRST PATH TABLE
SCRAREA  DC    A(0)           ADDR OF SCREEN AREA           *HMD 08/81*
CBAREA   DC    A(0)           ADDRESS OF COMPRESSED BUFFER  *HMD 08/81*
ATTRONE  DC    A(ATTRTBL)     START OF ATTRIBUTE TABLE
ATTRLAST DC    A(ATTRTBL)     END OF ATTRIBUTE TABLE
ATTRSTR  DS    0CL5
         DC    X'11'
ATTRCOL  DC    X'00'
ATTRROW  DC    X'00'
         DC    X'1D'
ATTRTYPE DC    X'00'
SWITCH   DC    X'0'           PATH ACTIVITY INDICATOR
ORTBL    DC    X'0102040810204080' TURN ON PATH ACTIVE
ANDTBL   DC    X'FEFDFBF7EFDFBF7F' TURN OFF PATH ACTIVE
         EJECT                                              *HMD 08/81*
CONTROL  DCB   DDNAME=CONTROL,DSORG=PS,MACRF=GL,EODAD=END
         EJECT                                              *HMD 08/81*
CLEAR    DC    X'C11140403C404000' CLEAR THE SCREEN
TYPETBL  DC    X'7CF0F8'
ADDRTBL  DC    X'40C1C2C3C4C5C6C7C8C94A4B4C4D4E4F'
         DC    X'50D1D2D3D4D5D6D7D8D95A5B5C5D5E5F'
         DC    X'6061E2E3E4E5E6E7E8E96A6B6C6D6E6F'
         DC    X'F0F1F2F3F4F5F6F7F8F97A7B7C7D7E7F'
ATTRTBL  DC    100F'0'
         EJECT                                              *HMD 08/81*
***********************************************************************
*                                                                     *
*   SCREEN WORK AREA                                                  *
*                                                                     *
***********************************************************************
SCREEN   DSECT
CLEARX   DS    CL8
FIELD    DS    24CL80
SCREENL  EQU   *+4-SCREEN
SCREENX  DS    0C
***********************************************************************
*                                                                     *
*   PATH TABLES (LOCATION TABLE AND MOVE TABLE, SIX PAIRS)            *
*                                                                     *
***********************************************************************
TABLE    DSECT
TL1      DS    H              FIRST (OLDEST) ENTRY IN LOCATION TABLE
TL2      DS    99H            LOCATION TABLE IS 100 ENTRIES LONG
TLEND    DS    A              ADDR OF LAST (NEWEST) ENTRY
TM1      DS    XL6            BEGINNING OF MOVE TABLE
TM2      DS    40XL6          MOVE TABLE IS 42 ENTRIES LONG
TM50R2   DS    H              INCREMENT FOR LOCATION UPDATE
TM50R3   DS    PL2            REPETITIVE MOVE COUNT
TM50R4   DS    X              TYPE OF MOVE
         DS    X
TMEND    DS    6X'FF'         END OF MOVE TABLE
TMNEXT   DS    A              ADDR OF CURRENT MOVE TABLE ENTRY
TCHAR    DS    C              DISPLAY CHARACTER FOR PATH
***********************************************************************
*                                                                     *
*   CONTROL CARD DESCRIPTION (RECURS 6 TIMES PER CARD)                *
*                                                                     *
***********************************************************************
CARD     DSECT
CTYPE    DS    C              TYPE OF CARD
C1       DS    C              DISPLAY CHARACTER
C2       DS    C              EQUAL SIGN
CTIME    DS    0CL4           TIME INTERVAL IN HUNDREDTHS OF SECOND
C3       DS    CL2            DISPLAY ROW
C5       DS    C              SEPARATOR
C6       DS    CL2            DISPLAY COLUMN
         DS    C              SEPARATOR
C9       DS    CL2            COUNT
         END
