IDMF     TITLE 'IDMDELET - DELETE-UNCATALOG DATASET ROUTINE'
         @     IDMDELET                                               ,
***********************************************************************
*/*                                                                  */
*/*      ========================================================    */
*/*       I D M F  -  INTERACTIVE DATA MANAGEMENT FACILITY           */
*/*      ========================================================    */
*/*                                                                  */
*/********************************************************************/
            EJECT
***********************************************************************
*                                                                     *
*           IDMDELET                                                  *
*                                                                     *
* ABSTRACT: DELETE/UNCATALOG DATASET ROUTINE                          *
*                                                                     *
* FUNCTION: IDMDELET IS A PROGRAM TO DELETE/UNCATLG DATASETS          *
*                                                                     *
*           IDMDELET CALLED BY IDMMAIN, WHEN USER SELECTS A ROW.      *
*           IDMDELET GETS DSNAME (AND VOLUME) FROM ROW, SELECTED BY   *
*                    USER, ALLOCATES DATASET AND                      *
*                    PRESENTS INFO-PANEL TO TERMINAL USER, WHICH      *
*                    HAS TO CONFIRM DELETE/UNCATLG. THEN IDMDELET     *
*                    INVOKES 'DELETE' COMMAND TO PERFORM FUNCTION.    *
*                    ACTUAL NAME OF DELETE COMMAND ID DEFINED IN PANEL*
*                                                                     *
*           AFTER FUNCTION DONE   IDMDELET UPDATES ROW IN TABLE AND   *
*           SETS UP MESSAGES FOR USER.                                *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*                                                                     *
* INPUT: R1 -> WORK AREA OF IDMMAIN                                   *
*        R2 -> COMMUNICATION READ-ONLY TABLE OF IDMMAIN               *
*                                                                     *
* PROGRAM WRITTEN USING STRUCTURED ASSEMBLER MACROS                   *
* MACROS USED: SET OF STRUCTURED MACROS                               *
*              SAVE                                                   *
*              RETURN                                                 *
*              GETMAIN                                                *
*              CALL                                                   *
*              FREEMAIN                                               *
*              IKJPSCB                                                *
*              DCBD                                                   *
*              STOW                                                   *
*              OPEN                                                   *
*                                                                     *
* ATTRIBUTES: REENTRANT,REFRESHABLE,REUSABLE                          *
*                                                                     *
*                                                                     *
***********************************************************************
         SPACE
***********************************************************************
*                                                                     *
*  REGISTERS:   15 - ENTRY ADDRESS & RETURN CODE                      *
*               14 - RETURN ADDRESS                                   *
*               13 - SAVE AREA ADDRESS AND BASE FOR DSECT             *
*               12 - CSECT BASE                                       *
*               11 - CSECT SECOND BASE                                *
*               10 - DSECT BASE FOR IDMWORK, PASSED BY IDMMAIN        *
*                9 - DSECT BASE FOR IDMCVT, PASSED BY IDMMAIN         *
*                8 -                                                  *
*                7 -                                                  *
*                6 - WORK REG                                         *
*                5 - WORK REG                                         *
*                4 - WORK REG                                         *
*                3 - WORK REG                                         *
*                2 - PARAM ADDRESS                                    *
*                1 - PARAM ADDRESS                                    *
*                0 -                                                  *
***********************************************************************
         EJECT
***********************************************************************
*               IDMDELET CODE                                         *
***********************************************************************
         SPACE
*                            ******************************************
*                            *     DSECTS  AREAS.                     *
*                            ******************************************
         SPACE                                                        ,
         DCBD DSORG=PO,DEVD=DA
         EJECT
         IKJPSCB             PROTECTED STEP CONTROL BLOCK
         EJECT
IDMCVTD  DSECT
         COPY  IDMCVT
         EJECT
IDMWORKD DSECT
         COPY  IDMWORK
         EJECT
*                            ******************************************
*                            *   IDMDELET CSECT INITIALIZATION.       *
*                            ******************************************
         SPACE 2
         INIT# IDMDELET,BASEREG=(12,11),CODE=RENT,                     X
               EXEC=MAINLINE,REL=01.03.00,                             X
               EXLIST=YES
         USING IDMWORK,RA
         USING IDMCVT,R9
         EJECT
         CPYRIGHT IDMF,1982                                           ,
         EJECT
*                            ******************************************
*                            *  CONTROL TABLES AND FIELDS.            *
*                            ******************************************
         SPACE
*        BYTE 1-OPTIONS:     - USE TM/OI
IDMNWAIT EQU   X'80'              NOT WAIT FOR MOUNT BIT              *
*        BYTE 2-OPTIONS:     - USE CLI/MVI
IDMDEALL EQU   C'D'               DEALLOC DATASET                     *
IDMDOALL EQU   C'A'               ALLOCATE DATASET                    *
IDMCHALL EQU   C'C'               CHANGE ATTRIBUTES                   *
IDMNUALL EQU   C'U'               MARK NOT IN USE                     *
*
OLDST    EQU   X'01'              OLD STATUS FOR SVC 99
MODST    EQU   X'02'              MOD STATUS
NEWST    EQU   X'04'              NEW STATUS
SHRST    EQU   X'08'              SHR STATUS
*
DSORGVS  DC    X'0008'            VSAM ORGANIZATION                   ,
DSORGPO  DC    X'0200'            PDS                                 ,
DSORGPS  DC    X'4000'            SEQUENTIAL                          ,
DSORGUN  DC    X'0000'            UNKNOWN DSORG                       ,
         SPACE ,                                                      *
RCREMOVE DC    H'24'              RETURN CODE TO REQUEST REMOVE A ROW ,
DEFUNIT  DC    CL8'SYSALLDA' DEFAULT UNIT NAME, IF NOTHING IN UADS    *
         SPACE ,                                                      *
*------- ERROR MESSAGES TABLE FOR SCRATCH ----------------------------*
SCRENTRL EQU   12        ENTRY LENGTH                                 ,
SCRMSGID DS    0F                                                     ,
         DC    H'1',H'0',CL8'YDST039'                                 ,
         DC    H'2',H'0',CL8'YDST040'                                 ,
         DC    H'4',H'0',CL8'YDST041'                                 ,
         DC    H'7',H'0',CL8'YDST042'                                 ,
         DC    X'FFFF',H'0',CL8'YDST043'  END OF TABLE - DEFAULT MSG  ,
*---------------------------------------------------------------------*
         EJECT ,                                                      *
POOPEN   OPEN  (,),MF=L      PDS OPEN                                 ,
POOPENE  EQU   *                                                      ,
         SPACE                                                        ,
POCLOS   CLOSE (,),MF=L      PDS CLOSE                                ,
POCLOSE  EQU   *                                                      ,
         EJECT ,                                                      *
*                            ******************************************
*                            *    WORK FIELDS.                        *
*                            ******************************************
         SPACE
         DATA#
*------- PARM LIST - KEEP TOGETHER -----------------------------------*
ADSNAME  DS    F                                                      *
AVOL     DS    F                                                      *
AOPTIONS DS    F                                                      *
ADDNAME  DS    F                                                      *
AUNITN   DS    F                                                      *
ADSORG   DS    F                                                      *
AERRMSG  DS    F                                                      *
*------- KEEP PREV FIELDS TOGETHER -----------------------------------*
         SPACE ,
DVOL     DS    CL6                                                    *
DOPTIONS DS    F                                                      *
DSDDNAME DS    CL8                                                    *
DUNITN   DS    CL8                                                    *
DDSORG   DS    CL2                                                    *
*
DSATRC   DS    XL1                                                    *
*---------------------------------------------------------------------*
*        VOLUME LIST FOR SCRATCH MACRO                                *
*---------------------------------------------------------------------*
SVOLIST  DS    H         - H'1'   ONLY ONE VOLUME - ALWAYS            *
SVOUCBTY DS    XL4                DEVICE TYPE                         *
SVOSERNO DS    CL6                VOLSER NUMBER                       *
SVOSCODE DS    H                  SCRATCH STATUS CODE                 *
*---------------------------------------------------------------------*
*
         DS    0F            NEXT AREA MUST BE ON FULLWORD BOUNDARY   ,
         IHADVA DSECT=NO                                              ,
         SPACE 3
POSTOWL  DS    D             STOW LIST - 8 BYTES                      ,
         DS    0F            WORD BOUNDARY FOR NEXT TO LINES          ,
POOPENL  DS    CL(POOPENE-POOPEN),0F     OPEN - LIST FORM             ,
POCLOSL  DS    CL(POCLOSE-POCLOS),0F     CLOSE - LIST FORM            ,
         ENDDATA#
         EJECT
*                            ******************************************
*                            * MAINLINE- MAIN ROUTINE OF THE IDMDELET *
*                            ******************************************
         SPACE 2
         ENTRE# MAINLINE
         LR    RA,R1                        LOAD IDMWORK BASE
         LR    R9,R2                        LOAD IDMCVT BASE
         SPACE ,                                                      *
         MVI   DSATRC,0                                               *
         MVI   DSDDNAME,BLANK         WE DO NOT SUPPLY DDNAME
         MVC   DSDDNAME+1(L'DSDDNAME-1),DSDDNAME
         MVC   DVOL,VOL                                               *
         XC    DOPTIONS,DOPTIONS                                      *
         MVI   DOPTIONS+1,IDMDOALL                                    *
         MVI   DOPTIONS+2,SHRST                                       *
         IF VOL,NE,BLANK256,CLC                                       *
            L     R4,ADDRPSCB                                         *
            USING PSCB,R4                                             *
            MVC   DUNITN,PSCBGPNM                                     *
            IF DUNITN,EQ,BLANK,CLI                                    *
               MVC   DUNITN,DEFUNIT                                   *
            ENDIF                                                     *
            DROP  R4                                                  *
         ENDIF                                                        *
         MVI   BUFFCMD,BLANK                CLEAR MSG BUFFER
         MVC   BUFFCMD+1(L'BUFFCMD-1),BUFFCMD
         SPACE ,                                                      *
         LA    R3,DSNAME                                              *
         ST    R3,ADSNAME                                             *
         LA    R3,DVOL                                                *
         ST    R3,AVOL                                                *
         LA    R3,DOPTIONS                                            *
         ST    R3,AOPTIONS                                            *
         LA    R3,DSDDNAME                                            *
         ST    R3,ADDNAME                                             *
         LA    R3,DUNITN                                              *
         ST    R3,AUNITN                                              *
         LA    R3,DDSORG                                              *
         ST    R3,ADSORG                                              *
         LA    R3,BUFFCMD                                             *
         ST    R3,AERRMSG                                             *
         SPACE ,                                                      *
         LA    R1,ADSNAME                                             *
         LINK  EP=IDMALLOC                                            *
         IF RF,NE,0,LTR                                               *
            MVI   LASTACT,BLANK                ERASE LAST ACTION
            MVC   LASTACT+1(L'LASTACT-1),LASTACT
            MVC   LASTACT(L'LACTDLER),LACTDLER SET LAST ACTION
            MVC   MSGID,MSGID25                SET ERR MSG FOR ALLOC
            MVC   MSGPARM,BUFFCMD              SET MSG PARM           *
*           NOW WE UPDATE ROW IN TABLE TO REFLECT LAST ACTION
            MVI   ACTION,BLANK                    CLEAR LINE COMMAND
            L     RF,ISPLADDR                     GET ISPLINK ADDRESS
            LA    R2,SYSTAB                       GET SYSTAB ADDR
            CALL  (15),(,(R2)),VL,MF=(E,LCALL31)  UPDATE ROW IN TABLE
            IEXIT# RC=8                                               *
         ENDIF                                                        *
         IF DDSORG,EQ,DSORGVS,CLC      IF DATASET IS VSAM OBJECT      ,
            CALL# DELVSAM                 WE'LL INVOKE IDCAMS         ,
         ELSE                          ELSE                           ,
            CALL# DELNVSAM                WE'LL DELETE DATASET        ,
         ENDIF                         END                            ,
*---------------------------------------------------------------------*
*        FREE DATASET BY DD-NAME (PARM LIST IS READY-JUST SET OPTION) *
*---------------------------------------------------------------------*
         XC    DOPTIONS,DOPTIONS       ZERO OUT OPTIONS WORD          *
         MVI   DOPTIONS+1,IDMDEALL     SET OPTION - DEALLOCATE        *
         SPACE ,                                                      *
         LA    R1,ADSNAME              R1 POINTS TO PARM LIST         *
         LINK  EP=IDMALLOC             LINK TO DEALLOCATION MODULE    *
         SPACE
         EXIT# RC=0
         EJECT
*                            ******************************************
*                            *  VSAM OBJECT DELETE ROUTINE            *
*                            ******************************************
         SPACE
         ENTRE# DELVSAM
         IF DVOL,NE,VOL,CLC                 IF REAL VOL ^= TABLE VOL  ,
            XC    DVOL,VOL                     EXCHANGE VOLSERS -     ,
            XC    VOL,DVOL                     TO PASS REAL VOLSER -  ,
            XC    DVOL,VOL                     TO PANEL               ,
         ENDIF                              ENDIF                     ,
         MVC   LCC,DSDDNAME                 PASS DDNAME TO PANEL      ,
         MVI   BUFFCMD,BLANK                CLEAR TSO BUFFER
         MVC   BUFFCMD+1(L'BUFFCMD-1),BUFFCMD
         L     RF,ISPLADDR                  GET ISPLINK ADDRESS
         LA    R2,PANDELVS                  GET POINTER TO DELET PANEL,
         CALL  (15),(,(R2)),VL,MF=(E,LCALL33)  DISPLAY DELET PANEL
         IF DVOL,NE,VOL,CLC                 IF REAL VOL ^= TABLE VOL  ,
            XC    DVOL,VOL                     EXCHANGE VOLSERS -     ,
            XC    VOL,DVOL                     TO RESTORE VOLSER -    ,
            XC    DVOL,VOL                     FOR A ROW              ,
         ENDIF                              ENDIF                     ,
         IF RF,EQ,0,LTR                     IF ACTION REQUESTED BY USER
            LA    R5,(BUFFEND-BUFFTSO)         GET LENGTH OF TSO BUFFER
            ST    R5,BUFFLEN                   STORE LENGTH INTO WORD
            L     RF,ISPLADDR                  GET ISPLINK ADDRES
            LA    R2,BUFFLEN                   GET BUFFLEN ADDR
            LA    R5,BUFFTSO                   GET BUFFTSO ADDR
            CALL  (15),(,(R2),(R5)),VL,MF=(E,LCALL16) EXEC DELET CMD
            MVI   LASTACT,BLANK                ERASE LAST ACTION
            MVC   LASTACT+1(L'LASTACT-1),LASTACT
            MVI   ACTION,BLANK                 CLEAR LINE COMMAND
            MVI   MSGPARM,BLANK                 ERASE MSG PARM
            MVC   MSGPARM+1(L'MSGPARM-1),MSGPARM
            MVC   MSGPARM(L'DSNAME),DSNAME      MOVE DSNAME TO MESSAGE
            IF RF,EQ,0,LTR                     IF DELETE OK
               MVC   MSGID,MSGID38                SET MSG OK
               IF LCC,EQ,YES,CLI                  IF YES TO REMOVE ROW
                  L     RF,ISPLADDR                  GET ISPLINK ADDR
                  LA    R2,SYSTAB                    GET TABLE NAME
                  CALL  (15),(,(R2)),VL,MF=(E,LCALL05)  REMOVE THE ROW
               ELSE                               ELSE (UPDATE ROW)   ,
                  MVC   LASTACT(L'LACTDDSN),LACTDDSN SET LAST ACTION
*                 NOW WE UPDATE ROW IN TABLE
                  L     RF,ISPLADDR                  GET ISPLINK ADDR
                  LA    R2,SYSTAB                    GET SYSTAB ADDR
                  CALL  (15),(,(R2)),VL,MF=(E,LCALL31) UPDATE ROW
               ENDIF                              ENDIF               ,
            ELSE                               ELSE (DELETE FAILED)
               MVC   MSGID,MSGID44                SET ERR MSG
               MVC   LASTACT(L'LACTDLER),LACTDLER SET LAST ACTION
*              NOW WE UPDATE ROW IN TABLE TO REFLECT LAST ACTION
               L     RF,ISPLADDR                  GET ISPLINK ADDRES
               LA    R2,SYSTAB                    GET SYSTAB ADDR
               CALL  (15),(,(R2)),VL,MF=(E,LCALL31) UPDATE ROW IN TABL
            ENDIF                              ENDIF
            SPACE
         ENDIF                              ENDIF
         SPACE
         EXIT# RC=0
         EJECT
*                            ******************************************
*                            * NONVSAM OBJECT DELETE/UNCATALOG ROUTINE*
*                            ******************************************
         SPACE
         ENTRE# DELNVSAM
         IF DVOL,NE,VOL,CLC                 IF REAL VOL ^= TABLE VOL  ,
            XC    DVOL,VOL                     EXCHANGE VOLSERS -     ,
            XC    VOL,DVOL                     TO PASS REAL VOLSER -  ,
            XC    DVOL,VOL                     TO PANEL               ,
         ENDIF                              ENDIF                     ,
         L     RF,ISPLADDR                  GET ISPLINK ADDRESS
         LA    R2,PANDELET                  GET POINTER TO DELET PANEL,
         CALL  (15),(,(R2)),VL,MF=(E,LCALL33)  DISPLAY DELET PANEL
         IF DVOL,NE,VOL,CLC                 IF REAL VOL ^= TABLE VOL  ,
            XC    DVOL,VOL                     EXCHANGE VOLSERS -     ,
            XC    VOL,DVOL                     TO RESTORE VOLSER -    ,
            XC    DVOL,VOL                     FOR A ROW              ,
         ENDIF                              ENDIF                     ,
         IF RF,EQ,0,LTR                     IF USER ENTERED REQUEST
            IF MBR,EQ,BLANK256,CLC             IF MEMBER NOT SPECIFIED
               CALL# DELUDSN                      DEL/UNCAT DATASET
            ELSE                               ELSE
               CALL# DELMPDS                      DELETE MEMBER
            ENDIF                              ENDIF
*           NOW WE UPDATE/REMOVE ROW IN TABLE TO REFLECT LAST ACTION
            IF RF,EQ,RCREMOVE,CH               IF REQUEST IS REMOVE   ,
               L     RF,ISPLADDR                  GET ISPLINK ADDR
               LA    R2,SYSTAB                       GET TABLE NAME
               CALL  (15),(,(R2)),VL,MF=(E,LCALL05)  REMOVE THE ROW
            ELSE                               ELSE UPDATE ROW        ,
               MVI   ACTION,BLANK                 CLEAR LINE COMMAND
               L     RF,ISPLADDR                  GET ISPLINK ADDRESS
               LA    R2,SYSTAB                    GET SYSTAB ADDR
               CALL  (15),(,(R2)),VL,MF=(E,LCALL31)  UPDATE ROW
            ENDIF                              ENDIF                  ,
         ENDIF                              ENDIF
         EXIT# RC=0
         EJECT
*                            ******************************************
*                            * DELETE/UNCAT NONVSAM DATASET  ROUTINE  *
*                            ******************************************
         SPACE
         ENTRE# DELUDSN
         MVI   MSGPARM,BLANK                 ERASE MSG PARM           *
         MVC   MSGPARM+1(L'MSGPARM-1),MSGPARM                         *
         MVC   MSGPARM(L'DSNAME),DSNAME      MOVE DSNAME TO MESSAGE   *
         MVI   LASTACT,BLANK                 ERASE LAST ACTION
         MVC   LASTACT+1(L'LASTACT-1),LASTACT
         SPACE
         IF VOL,EQ,BLANK256,CLC       IF DSN CATALOGUED (NO VOL SPECIF)
            LA    R4,DSNAME              R4=ADDRESS OF DSNAME         ,
            ST    R4,UNCLIST+4           POINT UNCATL TO DSNAME       ,
            CATALOG UNCLIST              UNCATALOG DATASET            ,
            IF RF,NE,0,LTR               IF UNCAT FAILED              ,
               MVC   MSGID,MSGID36          SET ERR MSG               ,
               MVC   LASTACT(L'LACTUNER),LACTUNER   SET LAST ACT-ERR  ,
               IEXIT# RC=8                                            ,
            ENDIF                        ENDIF                        ,
         ELSE                         ELSE
*           LOCATE DSNAME IN CATLG, GET VOLSER AND COMPARE WITH OUR VOL
            LA    R4,DSNAME                     R4=ADDRESS OF DSNAME
            ST    R4,LOCLIST+4                  POINT LOCATE TO DSNAME
            LA    R4,LOCAREA                    R4=ADDRESS OF WORKAREA
            ST    R4,LOCLIST+12                 POINT LOCATE TO WORKARE
            LOCATE LOCLIST                      LOCATE DSNAME IN CATLG
            IF RF,EQ,0,LTR                      IF DSN IS IN CATALOG
               LA    R4,LOCAREA+2+4                R4 POINTS TO VOLSER
               IF VOL,EQ,0(R4),CLC       IF MY VOLSER IN CATALOG
*                 UNCATALOG DATASET
                  LA    R4,DSNAME           R4=ADDRESS OF DSNAME
                  ST    R4,UNCLIST+4        POINT UNCATL TO DSNAME
                  CATALOG UNCLIST           UNCATALOG DATASET
                  IF RF,NE,0,LTR            IF UNCAT FAILED
                     MVC   MSGID,MSGID36       SET ERR MSG
                     MVC   LASTACT(L'LACTUNER),LACTUNER   SET LAST ACT
                     IEXIT# RC=8
                  ENDIF                     ENDIF
               ENDIF
            ENDIF                               ENDIF
         ENDIF                        ENDIF                           ,
*---------------------------------------------------------------------*
*        AT THIS POINT WE HAVE UNCATALOGUED DATASET                   *
*---------------------------------------------------------------------*
         IF OPT,EQ,C'D',CLI           IF ITS DELETE REQUEST           ,
*           BUILD CAMLIST AND VOL-LIST AND SCRATCH DATASET            ,
            LA    R4,DSNAME              R4=ADDRESS OF DSNAME
            ST    R4,SCRLIST+4           POINT SCRATCH TO DSNAME
            LA    R4,SVOLIST             R4=ADDR OF SCRATCH VOL LIST
            ST    R4,SCRLIST+12          POINT SCRATCH TO VOLUME
            LA    R1,DSDDNAME            R1 POINTS TO DD-NAME
            DEVTYPE (1),DVAREA,DEVTAB    GET UCB TYPE INFO
            MVC   SVOUCBTY,DVAUCBTY      MOVE UCB TYPE TO VOL.LIST
            MVC   SVOLIST,=H'1'          SPECIFY - 1 VOLUME ONLY      ,
            MVC   SVOSERNO,DVOL          MOVE REAL VOLSER
            XC    SVOSCODE,SVOSCODE      SCRATCH STATUS CODE TO ZERO
            SR    R0,R0                  ZERO OUT R0 BEFORE SCRATCH
            SCRATCH SCRLIST              SCRATCH DATA SET
            IF RF,EQ,0,LTR               IF DSN SCRATCHED
               MVC   MSGID,MSGID38          MSG - DSN DELETED
               MVC   LASTACT(L'LACTDDSN),LACTDDSN  SET LAST ACT-DELET
               IF LCC,EQ,YES,CLI            IF YES TO REMOVE ROW
                  LH    RF,RCREMOVE            SET SPECIAL RC
                  IEXIT# RC=(15)               GO TO CALLER-REMOVE ROW
               ENDIF                        ENDIF
            ELSE                         ELSE (SCRATCH FAILED)
*              SET LAST ACT AND GET ERROR MESSAGE FROM TABLE          ,
               MVC   LASTACT(L'LACTDLER),LACTDLER  SET LAST ACT-FAILED
               LA    R5,SCRMSGID            R5 POINTS TO SCRATCH MSG  ,
               DOWHILE 0(R5),NE,X'FF',CLI,  DO WHILE NOT END OF TABLE  X
               *AND*,SVOSCODE,NE,0(R5),CLC  AND NOT MY ENTRY
                  LA    R5,SCRENTRL(R5)        GET NEXT ENTRY
               ENDDO                        ENDDO
               MVC   MSGID,4(R5)            MOVE MSG ID FROM TABLE
            ENDIF                        ENDIF
         ELSE                         ELSE (ITS UNCATALOG REQUEST)    ,
            MVC   MSGID,MSGID37          SET MSG - UNCATALOGUED
            MVC   LASTACT(L'LACTUDSN),LACTUDSN     SET LAST ACT - UNCT
         ENDIF                        ENDIF                           ,
         EXIT# RC=0
         EJECT
*                            ******************************************
*                            * DELETE MEMBER OF PDS  ROUTINE          *
*                            ******************************************
         SPACE
         ENTRE# DELMPDS
*---------------------------------------------------------------------*
*        INITIALIZE MSG, MSGPARM, LAST ACTION, OPEN, CLOSE, ETC       *
*---------------------------------------------------------------------*
         MVC   POOPENL,POOPEN                MOVE OPEN-LIST TO DYN AREA
         MVC   POCLOSL,POCLOS                MOVE CLOS-LIST TO DYN AREA
         MVI   POSTOWL,BLANK                 ERASE STOW LIST          *
         MVC   POSTOWL+1(L'POSTOWL-1),POSTOWL                         *
         MVI   MSGPARM,BLANK                 ERASE MSG PARM           *
         MVC   MSGPARM+1(L'MSGPARM-1),MSGPARM                         *
         MVC   MSGPARM(L'DSNAME),DSNAME      MOVE DSNAME TO MESSAGE   *
         TRT   MSGPARM(L'DSNAME),TABLE       SEARCH FOR BLANK         ,
         IF NOTZERO                          IF BLANK FOUND           ,
            LR    R4,R1                         R4=ADDR OF BLANK      ,
         ELSE                                ELSE                     ,
            LA    R4,MSGPARM+L'DSNAME           R4 POINTS AFTER DSNAME
         ENDIF                               ENDIF                    ,
         MVI   0(R4),LPARENT                 SET LEFT PARENT          ,
         LA    R4,1(R4)                      POINT R4 AFTER PARENT    ,
         MVC   0(L'MBR,R4),MBR               MOVE MEMBER TO MSGPARM   ,
         TRT   0(L'MBR,R4),TABLE             LOOK FOR BLANK AFTER MBR
         IF NOTZERO                          IF BLANK FOUND           ,
            LR    R4,R1                         R4=ADDR OF BLANK      ,
         ELSE                                ELSE                     ,
            LA    R4,(L'MBR)(R4)                R4 POINTS AFTER MBR
         ENDIF                               ENDIF                    ,
         MVI   0(R4),RPARENT                 RIGHT PARENT AFTER MBR   ,
         SPACE                                                        ,
         MVI   LASTACT,BLANK                 ERASE LAST ACTION
         MVC   LASTACT+1(L'LASTACT-1),LASTACT
*---------------------------------------------------------------------*
*        OPEN DATASET, STOW TO DELETE MEMBER, CLOSE DATASET, SET MSG  *
*---------------------------------------------------------------------*
         USING IHADCB,R6                     DCB DSECT BASE
         LA    R6,PODCBL                     LOAD DCB DSECT BASE
         MVI   DCBDDNAM,BLANK                ERASE DD-NAME IN DCB     *
         MVC   DCBDDNAM+1(L'DCBDDNAM-1),DCBDDNAM
         MVC   DCBDDNAM,DSDDNAME             MOVE OUR DD-NAME TO DCB  ,
         OPEN  ((R6),(UPDAT)),MF=(E,POOPENL) OPEN PDS
         IF DCBOFLGS,NE,X'10',TM             IF OPEN FAILED
            MVC   MSGID,MSGID45                 I/O ERROR - MSG
            MVC   LASTACT(L'LACTDLER),LACTDLER  I/O ERROR - LAST ACT
            IEXIT# RC=4                         RETURN
         ENDIF                               ENDIF
         MVC   POSTOWL,MBR                   MOVE MEMBER TO STOW LIST ,
         STOW  (R6),POSTOWL,D                DELETE MEMBER            ,
         IF RF,EQ,0,LTR                      IF DELETED OK            ,
            MVC   MSGID,MSGID46                 MEMBER DELETED
            MVC   LASTACT(L'LACTDMBR),LACTDMBR  MBR DELETED-LAST ACT
            IF LCC,EQ,YES,CLI                   IF YES TO ERASE MBR   ,
               MVI   MBR,BLANK                     ERASE MEMBER NAME
               MVC   MBR+1(L'MBR-1),MBR
            ENDIF                               ENDIF                 ,
         ELSE                                ELSE                     ,
            IF RF,EQ,=H'8',CH                   IF MBR NOT FOUND      ,
               MVC   MSGID,MSGID47                 MSG-MBR NOT FOUND
            ELSE                                ELSE                  ,
               MVC   MSGID,MSGID48                 MSG - I/O ERROR
            ENDIF                               ENDIF                 ,
            MVC   LASTACT(L'LACTDLER),LACTDLER  ERROR - LAST ACT
         ENDIF                               ENDIF                    ,
         CLOSE ((R6)),MF=(E,POCLOSL)         CLOSE PDS                ,
         SPACE
         EXIT# RC=0
         EJECT
*                            ******************************************
*                            *     LITERALS                           *
*                            ******************************************
         SPACE
         LTORG
         SPACE 3
         END#  IDMDELET
