JOBCOPY  TITLE '-   ACF2 PRIVILEGED PGM TO SUBMIT JOBS'
****************************************************************
*
* JOBCOPY -- COPIES JOBSTREAM FROM SYSUT1 TO SYSUT2 AND
*              ADDS LOGONID CARD EXTRACTED FROM ACCTING
*              FIELD ON JOB CARD.   IT ALSO ADDS /*EOF
*              TO THE STREAM. IF   /*EOF IS DETECTED IN
*              THE STREAM, LOGONID  IS PLACED BEFORE IT.
*
*        TO USE JOBCOPY IN THE MVS ENVIRONMENT, THE OUTPUT FILE
*        (SYSUT2) SHOULD BE ASSIGNED TO THE INTERNAL READER.
*        THE JCL TO EXECUTE JOBCOPY THEN BECOMES:
*
*              //SUBMIT EXEC PGM=JOBCOPY
*              //SYSUT1 DD   DSN=INPUT.FILE,DISP=SHR
*              //SYSUT2 DD   SYSOUT=(A,INTRDR)
*
*        TO LINK EDIT JOBCOPY IN MVS, USE THE FOLLOWING JCL:
*
*              //LINKMVS  EXEC PGM=IEWL,
*              //         PARM='LET,LIST,XREF,NCAL'
*              //SYSPRINT DD   SYSOUT=A
*              //SYSLMOD  DD   DSN=SYS1.LINKLIB,DISP=SHR
*              //SYSUT1   DD   UNIT=SYSDA,SPACE=(TRK,(10,10))
*              //ACFMOD   DD   DSN=SYS1.ACFMOD,DISP=SHR
*              //ACFOBJ   DD   DSN=SYS1.ACFOBJ,DISP=SHR
*              //SYSLIN   DD   *
*                INCLUDE  ACFOBJ(JOBCOPY)
*                ENTRY    JOBCOPY
*                SETCODE  AC(1)
*                NAME     JOBCOPY(R)
****************************************************************
         EJECT
JOBCOPY  CSECT
         PRINT GEN                     PRINT EVERYTHING
         ACFREGS
         USING JOBCOPY,R12
         SAVE  (14,12),,JOBCOPY_&SYSDATE._&SYSTIME.
         LR    R12,R15             COPY ENTRY ADDRESS
         GETMAIN R,LV=72           GET SAVEAREA
         ST    R13,4(R1)
         ST    R1,8(R13)
         LR    R13,R1              CHAINED AREAS, R13=SAVEAREA
*
*              INITIALIZE FIELDS
*
         XC    RETCD,RETCD         CLEAR RETURN CODE
         SR    R4,R4               CLEAR RECORD COUNTER
         XC    LSW,LSW             CLEAR CONTROL SWITCHES
         EJECT
*
*              MAIN GET/PUT PROCESSING PROGRAM
*
START    DS    0H
         OPEN  INDCB               OPEN FB (80/X*80) DS
         TM    INDCB+48,X'10'      OPEN OK?
         BZ    ERROR               NO, ERR EXIT
         TM    INDCB+36,X'C0'      RECFM=U?
         BO    ERROR               YES, DISALLOW
         OPEN  (OUTDCB,(OUTPUT))   OPEN INTRDR
         TM    OUTDCB+48,X'10'     OPEN OK?
         BZ    ERROR1              NO, ERR EXIT
GET      DS    0H
         GET   INDCB               GET A RECORD
         LR    R2,R1               COPY RECORD POINTER
         CLC   0(5,R2),=C'/*EOF'   EOF ENCOUNTERED???
         BE    EODAD               YES, TREAT AS EOF
         CLC   =CL71'//',0(R2)      IS THIS A NULL CARD?
         BE    EODAD                YES, TREAT AS EOF
PUT      DS    0H
         CLC   0(2,R2),=C'//'      JCL CARD??
         BNE   PUTOK               NO, PASS IT ON
         CLI   2(R2),C' '          NULL OR CONTINUE?
         BE    PUTOK               YES, SKIP TESTING
         CLI   2(R2),C'*'          COMMENT?
         BE    PUTOK               YES, SKIP TESTING
         LA    R9,70(,R2)          POINT TO END OF RECORD
         LA    R8,1                SET INCREMENT
         LR    R10,R2              COPY RECORD START ADDRESS
LOOP1    BXH   R10,R8,PUTOK        BUMP SCAN PTR, TEST END
         CLI   1(R10),C' '         SEARCH FOR NAME END
         BNE   LOOP1               CONTINUE UNTIL FOUND
LOOP2    BXH   R10,R8,PUTOK        BUMP, TEST
         CLI   1(R10),C' '         SCAN OVER BLANKS
         BE    LOOP2
         CLC   0(5,R10),=C' JOB '  CHECK IF VERB=JOB
         BNE   PUTOK               SKIP IF NOT JOBCARD
         LA    R10,3(,R10)         BUMP BY VERB
         TM    LSW,1               WAS A JOBCARD ALREADY SCANNED
         BZ    LIDGEN              NO, CONTINUE..
         PUT   OUTDCB,LCARD        YES, PUT ASSOCIATED LOGONID
         LA    R4,1(,R4)           BUMP COUNT
         NI    LSW,255-1           CLEAR SW
         EJECT
LIDGEN   DS    0H                  CONSTRUCT ASSOCIATED LOGONID
**
** THE FOLLOWING CODE IS FOR THE EXTRACTION OF THE LOGONID
** THE LOGONID IS SET TO 'OPERLID'
**
         MVC   LCARD,LOGONID       CREATE //*LOGONID CARD
         MVC   LID(8),=C'OPERLID '
** END OF LOGONID EXTRACTION CODE, RESUME PROCESS **
**
         OI    LSW,1               INDICATE LOGONID OBTAINED
*
*        IF THE OPERATING SYSTEM IS MVS, THE JOB SUBMITTOR'S
*        LOGONID AND THE JOB SOURCE WILL BE KNOWN WHEN THE
*        SUBMIT IS COMPLETE.
*
PUTOK    DS    0H
         PUT   OUTDCB,(2)          PUT TO INTRDR
         LA    R4,1(,R4)           BUMP COUNT
         B     GET                 GO GET ANOTHER CARD..
         EJECT
*
*              EODAD ROUTINE (FILE EOF OR /*EOF)
*                            (OR NULL CARD)
*
EODAD    DS    0H
         TM    LSW,1               WAS LOGONID BUILT
         BZ    EOFOK               NO, SKIP IT
         PUT   OUTDCB,LCARD        ELSE, PUT TO INTRDR
         LA    R4,1(,R4)           BUMP COUNT
EOFOK    DS    0H
         CVD   R4,DBWD             CONVERT COUNT
         MVC   MSG+8(8),MASK       MOVE IN MASK
         ED    MSG+8(8),DBWD+4     EDIT IN COUNT
MSG      WTO   'NNNNNNNN RECORDS SUBMITTED BY JOBCOPY',ROUTCDE=(2,11)
         EJECT
*
*              JOBCOPY EXIT CLEANUP
*
EXIT     DS    0H
         TM    INDCB+48,X'10'      OPENED??
         BZ    CKOUT               NO, SKIP CLOSE
         CLOSE INDCB               ELSE, CLOSE IT
CKOUT    TM    OUTDCB+48,X'10'     OPENED??
         BZ    EXITOK              NO, SKIP CLOSE
         CLI   RETCD,0             EXITING GOOD???
         BE    CKOUTOK             YES, GO FINISH UP
         PUT   OUTDCB,DELETE       ELSE, DELETE PRIOR JCL
CKOUTOK  PUT   OUTDCB,EOFCARD      PUT /*EOF AT CLOSE TIME
         CLOSE OUTDCB              NOW CLOSE OUTPUT DS.
EXITOK   LR    R1,R13              COPY SAVEAREA ADDR
         LA    R1,0(R1)            CLEAN IT UP
         L     R13,4(,R1)          GET LAST SAVE AREA PTR
         LA    R0,72               GET AREA LENGTH
         SVC   10                  FREE GETMAINED AREA
*  EXIT WITH RETURN CODE SET
         SR    R15,R15             GET RETURN CODE
         IC    R15,RETCD           FROM RETURN CODE LOCATION
         RETURN (14,12),RC=(15)    SET SAVED RETURN CODE
         EJECT
*
*              ERROR ROUTINES -- EXIT LOGIC
*
ERROR    WTO   'INPUT DATASET NOT USABLE BY JOBCOPY',ROUTCDE=(2,11)
         MVI   RETCD,8             SET RETURN CODE
         B     EXIT                AND EXIT
ERROR1   WTO   'OUTPUT DATASET NOT USABLE BY JOBCOPY',ROUTCDE=(2,11)
         MVI   RETCD,8
         B     EXIT
         EJECT
*
*              DCB EXIT LISTS AND  SUPPORT CODE
*
DSLST    DC    0F'0',X'05',AL3(DSTEST)  ON DS OPEN
         DC    0F'0',X'07',AL3(JFCBAREA)     READ JFCB AREA
         DC    0F'0',X'86',AL3(DSTEST)  AND EOV
DSTEST   DS    0H
DSOK     SR    R15,R15             ZIP FOR SAFETY
         BR    R14                 RETURN TO OPEN
EXLST    DC    0F'0',X'05',AL3(DCBEXIT) SYSUT2 DCB OPEN EXIT
         DC    X'87',AL3(JFCBAREA) JFCB RECORD AREA
DCBEXIT  DS    0H
         LH    R2,OUTDCB+62        BLKSIZE
         LTR   R2,R2               WAS IT PROVIDED
         BNZ   LRECL               YES, LEAVE IT
         MVC   OUTDCB+62(2),INDCB+62  ELSE, SAME AS INPUT
LRECL    LH    R2,OUTDCB+82        LRECL
         LTR   R2,R2               WAS IT PROVIDED
         BNZ   RECFM               YES, LEAVE IT
         MVC   OUTDCB+82(2),INDCB+82  ELSE, SAME AS INPUT
RECFM    TM    OUTDCB+36,X'FF'     RECFM
         BNZ   0(R14)              YES, LEAVE IT
         MVC   OUTDCB+36(1),INDCB+36  ELSE, SAME AS INPUT
         BR    R14                 RETURN
         EJECT
*
*              DATA AREAS
*
         LTORG
SAVE2    DS    8D                  DCB EXIT SAVE AREA
DBWD     DC    D'0'                WORK AREA
MASK     DC    X'4020202020202120' EDIT MASK
LOGONID  DC    CL80'//*LOGONID '   MODEL LOGONID CARD
LCARD    DC    0CL80' ',CL12' '    CONSTRUCTED CARD
LID      DC    CL68' '             MOVED IN BY EX CMVC
DELETE   DC    CL80'/*DEL '        BAD EXIT CONTROL CARD
EOFCARD  DC    CL80'/*EOF '        EOF CARD
LSW      DC    X'0'                SWITCH (JOBCARD DETECTED)
RETCD    DC    X'0'                RETURN CODE
         DC    X'0'                SPARE
         PRINT NOGEN
INDCB    DCB   DDNAME=SYSUT1,MACRF=GL,DSORG=PS,EODAD=EODAD,            +
               EXLST=DSLST
OUTDCB   DCB   DDNAME=SYSUT2,MACRF=PM,DSORG=PS,EXLST=EXLST
         PRINT GEN                 PRINT EVERYTHING
JFCBAREA DS    0D,XL176            JFCB INPUT AREA
         END   JOBCOPY
