XACFLGNQ CSECT                         DEFINE CSECT
***********************************************************************
*
*     THIS ROUTINE IS CALLED BY THE ACF2 TSO LOGON PRE-VALIDATION EXIT.
*     ITS PURPOSE IS TO ENFORCE TSO ACCESS QUOTAS.
*
*     THE LOGIC OF THIS ROUTINE IS AS FOLLOWS:
*         1) IF THE USER'S TERMINAL ID IS ONE OF THE FOLLOWING;
*            S01CN305
*            S01CN424
*            S01CN425
*            S01CN427
*            S01CN428
*            S01CN429
*            S01CN430
*            K01CNB25
*            THEN LOGON IS UNCONDITIONALLY ALLOWED.
*         2) IF THE NUMBER OF CURRENT TSO USERS (INCLUDING THE
*            ATTEMPTEE) IS GREATER THAN USERMAX, THEN LOGON IS DENIED.
*         3) IF THE USER HAS ACF2 "PRODUSER" STATUS, THEN LOGON IS
*            ALLOWED.
*         4) IF THE NUMBER OF CURRENT TSO USERS IS GREATER THAN PEONMAX
*            THEN LOGON IS DENIED.
*
*     INPUT PARMS: R1 - ADDR OF ACF2 ACVALD
*
*     DATE MODIFIED: 02/10/82
*
*     CODED BY: MARK ELCONIN
*
***********************************************************************
*
*     REGISTER EQUATES AND USAGE
*
R0       EQU   0
R1       EQU   1                       PTR TO CVT
R2       EQU   2                       PTR TO ASCB
R3       EQU   3                       PTR TO ACVALD
R4       EQU   4                       PTR TO ASVT, THEN ASVT ENTRY
R5       EQU   5                       PTR TO LIDREC
R6       EQU   6                       WORK
R7       EQU   7                       WORK
R8       EQU   8                       WORK
R9       EQU   9
R10      EQU   10                      TOTAL # OF TSO USERS
R11      EQU   11                      WORK
R12      EQU   12                      BASE REG
R13      EQU   13                      WORKAREA BASE REG AND SAVE AREA
R14      EQU   14                      RETURN ADDR
R15      EQU   15                      RETURN CODE
*
*     HOUSEKEEPING
*
         STM   R14,R12,12(R13)         SAVE REGISTERS
         LR    R12,R15                 SET REG 12 TO ENTRY ADDR
         USING XACFLGNQ,R12            ESTABLISH ADDRESSABILITY
         LR    R3,R1                   SAVE PTR TO ACVALD
         LR    R2,R13                  SAVE ADDR OF CALLING SAVE AREA
         GETMAIN RU,LV=WORKSIZE        GET SOME CORE
         LR    R13,R1                  SAVE ADDR OF CORE OBTAINED
         USING WORKAREA,R13            ESTABLISH ADDRESSABILITY
         ST    R2,SAVEAREA+4           STORE ADDR OF CALLING SAVE AREA
         ST    R13,8(R2)               STORE ADDR OF MY SAVE AREA
*
*     GET ADDRESSABILITY TO VARIOUS CONTROL BLOCKS
*
         USING PSA,R0                  ADDRESSABILITY TO PSA
         USING CVTMAP,R1               ADDRESSABILITY TO CVT
         USING ASCB,R2                 ADDRESSABILITY TO ASCB
         USING ACVALD,R3               ADDRESSABILITY TO ACVALD
         USING ASVT,R4                 ADDRESSABILITY TO ASVT
         USING LIDREC,R5               ADDRESSABILITY TO LIDREC
         L     R5,ACVRECB              LOAD ADDR OF LOGONID RECORD
*
*     CHECK TERMINAL ID
*
         CLC   ACVSRCE,=C'S01CN305'    NEAR MASTER CONSOLE
         BE    RETURN0                 SPECIAL TERMINAL, ALLOW LOGON
         CLC   ACVSRCE,=C'S01CN424'    TAPE LIBRARY
         BE    RETURN0                 SPECIAL TERMINAL, ALLOW LOGON
         CLC   ACVSRCE,=C'S01CN425'    BREAKDOWN AREA
         BE    RETURN0                 SPECIAL TERMINAL, ALLOW LOGON
         CLC   ACVSRCE,=C'S01CN427'    OPERATOR AREA, RIGHT TO LEFT
         BE    RETURN0                 SPECIAL TERMINAL, ALLOW LOGON
         CLC   ACVSRCE,=C'S01CN428'             .
         BE    RETURN0                 SPECIAL TERMINAL, ALLOW LOGON
         CLC   ACVSRCE,=C'S01CN429'             .
         BE    RETURN0                 SPECIAL TERMINAL, ALLOW LOGON
         CLC   ACVSRCE,=C'S01CN430'             .
         BE    RETURN0                 SPECIAL TERMINAL, ALLOW LOGON
         CLC   ACVSRCE,=C'K01CNB25'    OMEGAMON
         BE    RETURN0                 SPECIAL TERMINAL, ALLOW LOGON
*
*     WHIP THROUGH ASVT TO COUNT TOTAL TSO USERS
*
         SLR   R10,R10                 ZERO TOTAL COUNT OF USERS
         L     R1,FLCCVT               LOAD ADDR OF CVT
         L     R4,CVTASVT              LOAD PTR TO ASVT
         L     R11,ASVTMAXU            LOAD MAX NUMBER OF ASIDS
         LA    R4,ASVTENTY             POINT TO FIRST ASVT ENTRY
*
*     CHECK EACH ASCB
*
ASVTLOOP TM    0(R4),X'80'             AVAILABLE ASCB?
         BO    NEXTASVT                IF SO, IGNORE IT
         L     R2,0(R4)                LOAD ADDR OF ASCB
         ICM   R7,15,ASCBJBNS          LOAD PTR TO LOGONID
         BZ    NEXTASVT                IF PTR IS ZERO, IGNORE IT
         CLC   ASCBTSB,ZEROS           PTR TO TSB ZERO?
         BE    NEXTASVT                IF SO, CAN'T BE A TSO USER
         LA    R10,1(R10)              HAVE A REAL TSO USER, COUNT HIM
NEXTASVT LA    R4,4(R4)                POINT TO NEXT ENTRY
         BCT   R11,ASVTLOOP
ENDASVT  EQU   *
*
*     AND NOW FOR THE MOMENT OF TRUTH - DO I GET ON?
*
         CVD   R10,PACKED
         MVC   WORD,=X'40202120'       MOVE IN EDIT PATTERN
         ED    WORD(4),PACKED+6        EDIT COUNT OF USERS
         CH    R10,USERMAX             COMPARE TSO COUNT TO OVERALL MAX
         BL    MAYBE                   COUNT < USERMAX, NEXT TEST
         MVC   DENYMSGA,DENYMSG1
         MVC   DENYMSGA+14(4),WORD
         TPUT  BLANKS,L'BLANKS
         TPUT  DENYMSGA,L'DENYMSGA
         LA    R15,8                   SET RETURN CODE TO KILL
         B     RETURN
MAYBE    TM    LIDI1FLG,LIDI1F2        IS THIS A PRODUCTION USER
         BO    RETURN0                 YEP, LET HIM ON
         CH    R10,PEONMAX             COMPARE TSO COUNT TO PEON MAX
         BL    RETURN0                 COUNT <= PEONMAX, ALLOW LOGON
         MVC   DENYMSGB,DENYMSG2
         MVC   DENYMSGB+14(4),WORD
         TPUT  BLANKS,L'BLANKS
         TPUT  DENYMSGB,L'DENYMSGB
         LA    R15,8                   SET RETURN CODE TO KILL
         B     RETURN
*
*     TERMINATE
*
RETURN0  SLR   R15,R15                 SET RETURN CODE TO ZERO
RETURN   EQU   *
         LR    R1,R13                  SAVE PTR TO GETMAINED SAVE AREA
         LR    R2,R15                  SAVE RETURN CODE
         L     R13,SAVEAREA+4          LOAD ADDR OF CALLING SAVE AREA
         FREEMAIN R,LV=WORKSIZE,A=(R1) FREE THE CORE WE GOT
         LR    R15,R2                  PUT RETURN CODE IN R15
         L     R14,12(R13)             RESTORE R14
         LM    R0,R12,20(R13)          RESTORE R0 THROUGH R12
         BR    R14                     RETURN
*
*
*     CONSTANTS AND STORAGE RESERVATIONS
*
ZEROS    DC    F'0'
USERMAX  DC    H'125'         MAXIMUM NUMBER OF PROD+PEON USERS
PEONMAX  DC    H'110'         MAXIMUM NUMBER OF PEON USERS
BLANKS   DC    C' '
DENYMSG1 DC    C'LOGON DENIED -XXXX USERS LOGGED ON, OVERALL LIMIT IS 1*
               25'
DENYMSG2 DC    C'LOGON DENIED -XXXX USERS LOGGED ON, NON-PRODUCTION LIM*
               IT IS 110'
*
*     DSECTS
*
WORKAREA DSECT
SAVEAREA DS    18F
MYGROUP  DS    F
PACKED   DS    D
WORD     DS    CL4
DENYMSGA DC    C'LOGON DENIED -XXXX USERS LOGGED ON, OVERALL LIMIT IS 1*
               25'
DENYMSGB DC    C'LOGON DENIED -XXXX USERS LOGGED ON, NON-PRODUCTION LIM*
               IT IS 110'
WORKSIZE EQU   *-WORKAREA
         ACVALD ,
         IHAPSA
         CVT
         IHAASVT
         IHAASCB
         LIDREC
         END   XACFLGNQ
