*/********************************************************************/
*/*                                                                  */
*/*  THIS PROGRAM RECEIVES A 44 BYTE FIELD AND RETURNS               */
*/*               A DATE AND TIME WITH OPTIONALLY THE SYSTEM TIME    */
*/*               AND DATE IF WE NEED IT.                            */
*/*               THE DAY OF THE WEEK IS ALSO RETURNED.              */
*/*                                                                  */
*/*  THIS ROUTINE CAN ONLY BE USED FOR DATES ON OR AFTER             */
*/*  JAN 1 1901.                                                     */
*/*                                                                  */
*/*       IF THE FIRST FIELD IS ZERO ONLY THE SYSTEM DATE AND TIME   */
*/*       WILL BE RETURNED TO THE USER. THE BINARY TIME AND PACKED   */
*/*       JULIAN DATE WILL ALSO BE RETURNED TO THE USER              */
*/*                                                                  */
*/*                                                                  */
*/*  PARM PASSED FROM PLI PROG IS A 44 BYTE CHAR FIELD               */
*/*  MAPPED AS FOLLOWS                                               */
*/*                                                                  */
*/*    DCL 1 WORKAREA,                                               */
*/*          3 TIME        FIXED BIN(31),  (9(8) COMP)               */
*/*          3 DATE        FIXED(7),       (9(7) COMP-3)             */
*/*          3 RET_TIME    CHAR(8),        (X(8))                    */
*/*          3 RET_DATE    CHAR(7),        (X(7))                    */
*/*          3 RET_DAY     CHAR(3),        (X(3))                    */
*/*          3 MC_TIME     CHAR(8),        (X(8))                    */
*/*          3 MC_DATE     CHAR(7);        (X(7))                    */
*/*          3 MC_DAY      CHAR(3),        (X(3))                    */
*/*                                                                  */
*/*   TIME      : TIME IN HUNDREDTHS OF A SECOND (BINARY 4 BYTES)    */
*/*               ZERO IF ONLY THE SYSTEM DATE AND TIME WANTED       */
*/*               (MUST BA A FULL WORD ZERO )                        */
*/*   DATE      : PACKED DATE IN FORMAT 00YYDDDF (4 BYTES)           */
*/*   RET_TIME  : RETURNS HH:MM:SS TO USER PROGRAM                   */
*/*   RET_DATE  : RETURNS MMMDDYY TO USER PROGRAM                    */
*/*   RET_DAY   : RETURNS 3 BYTE DAY OF THE WEEK                     */
*/*   MC_TIME   : RETURNS SYSTEM TIME IN FORMAT AS RET-TIME.         */
*/*               THE IST BYTE OF THIS FIELD SHOULD BE NON BLANK     */
*/*               IF THIS INFORMATION IS NOT REQUIRED                */
*/*   MC_DATE   : RETURNS MACHINE DATE MMMDDYY TO USER PROGRAM       */
*/*   RET_DAY   : RETURNS MACHINE DAY OF WEEK DDD TO USER PROGRAM.   */
*/*                                                                  */
*/*                                                                  */
*/* IF YOU ARE CALLING THIS FROM A PL/1 PROGRAM DO NOT CHANGE ANY    */
*/* CODE TO USE R12 OR YOU WILL HAVE PROBLEMS IF ANYTHING            */
*/* ABENDS. PL/I USES R12 FOR STAE HANDLING ETC.                     */
*/*                                                                  */
*/*                                                                  */
*/********************************************************************/
DOODATE  CSECT                             /* CALLED BY PLI PROG     */
         STM  R14,R12,12(R13)              /* SAVE REGS              */
         BALR  R10,R0                      /* BASE                   */
         USING *,R10
         ST    R13,SAVEAREA+4              /* READY TO CHAIN SAVES   */
         LR    R2,R13                      /* PL/I DSA               */
         LA    R13,SAVEAREA                /* POINT TO OUR SAVE      */
         ST    R13,8(R2)                   /* CHAIN OUR SAVE         */
         L     R3,0(R1)                    /* PARM FROM PLI PROG     */
         CLC   0(4,R3),=X'00000000'        /* SYS DATE/TIME ONLY     */
         BE    DOSYS                       /* YES GO AND DO IT       */
         L     R1,0(R3)                    /* TIME FROM USER         */
         BAL   R7,HHMMSS                   /* CONVERT                */
         MVC   8(8,R3),EDWORK              /* CHAR TIME              */
         MVC   TEMPDATE(4),4(R3)           /* PACKED DATE            */
         BAL   R7,DODATE                   /* CONVERT DATE           */
         MVC   16(7,R3),WORKDATE           /* MOVE IT                */
         BAL   R7,DODAY                    /* GET DAY OF THE WEEK    */
         MVC   23(3,R3),EDWORK             /* MOVE DAY OF WEEK       */
         CLI   26(R3),C' '                 /* IF BLANK EXIT          */
         BE    EOJ                         /* CURRENT DATE NOT REQD  */
DOSYS    DS    0H
         TIME  BIN                         /* GET DATE AND TIME      */
         LR    R4,R0                       /* SAVE TIME              */
         ST    R0,TEMPDATE                 /* TEMP STORE             */
         MVC   0(4,R3),TEMPDATE            /* GIVE HIM BINARY TIME   */
         ST    R1,TEMPDATE                 /* GET CURRENT DATE       */
         MVC   4(4,R3),TEMPDATE            /* GIVE HIM DEC DATE      */
         BAL   R7,DODATE
         MVC   34(7,R3),WORKDATE
         BAL   R7,DODAY                    /* GET MACHINE DAY OF WEEK*/
         MVC   41(3,R3),EDWORK             /* MOVE IT               */
         LR    R1,R4                       /* GET CURRENT TIME       */
         BAL   R7,HHMMSS
         MVC   26(8,R3),EDWORK
EOJ      DS    0H
         XR    R15,R15            /* SET RETURN CODE FOR PLIRETV   */
BADRET   L     R13,SAVEAREA+4     /* RESTORE CALLERS DSA           */
         L     R14,12(R13)        /* RESTORE R14                   */
         LM    R0,R12,20(R13)     /* RESTORE CALLERS REGS          */
         BR    14                 /* BACK TO CALLER                */
*/********************************************************************/
*/*                                                                  */
*/*   THIS SUBROUTINE CONVERTS 00YYDDDF INTO A "REAL"                */
*/*   HUMAN DATE MMMDDYY                                             */
*/*                                                                  */
*/********************************************************************/
DODATE   XC    DWD,DWD                  CLEAR WORK AREA
         ST    R7,SAVER7                SAVE RETURN ADDRESS
         MVC   DWD+6(2),TEMPDATE+2      GET DAY OF YEAR
         CVB   R1,DWD                   GET IT IN BINARY
         CH    R1,=H'60'                BEFORE FEB 29?
         BL    NOT$LEAP                 YES - LEAP YEAR DOESN'T MATTER
         TM    TEMPDATE+1,X'01'         ODD YEAR?
         BO    NOT$LEAP                 YES - NOT LEAP YEAR
         TM    TEMPDATE+1,X'12'         ODD DECADE & 2 OR 6 YEAR?
         BM    NOT$LEAP                 ODD DECADES MUST HAVE 2 BIT
         BCTR  R1,0                     *** FUDGE FOR LEAP YEAR ***
NOT$LEAP CH    R1,=H'365'               ANY GOOD?
         XR    R14,R14                  WANT BINARY MONTH ALSO
         LA    R15,=C'JANFEBMARAPRMAYJUNJULAUGSEPOCTNOVDEC'
         LA    R7,=H'31,28,31,30,31,30,31,31,30,31,30,31'
MONTH$LP SH    R1,0(,R7)               IS IT THIS MONTH?
         BNP   MONTH$GO                 YES
         LA    R7,2(,R7)                -> NEXT FACTOR
         LA    R14,1(R14)               INCR MONTH COUNTER
         LA    R15,3(,R15)              -> NEXT MONTH NAME
         B     MONTH$LP                 LOOP
MONTH$GO AH    R1,0(,R7)                REPAIR THE DAY OF MONTH
         CVD   R1,DWD                   MAKE IT PACKED DECIMAL
         OI    DWD+7,X'0F'              REMOVE SIGN
         MVC   WORKDATE(3),0(R15)       MOVE IN NAME OF MONTH
         UNPK  WORKDATE+3(2),DWD+6(2)   GET DAY OF MONTH
         MVC   TEMP,=X'40202021202020'
         ED    TEMP(7),TEMPDATE
         MVC   WORKDATE+5(2),TEMP+3     GET YEAR
SKIPDATE L     R7,SAVER7
         BR    R7
***********************************************************************
*                                                                     *
*  CONVERT BINARY NUMBER TO HH:MM:SS.TH                               *
*                                                                     *
***********************************************************************
HHMMSS   MVC   EDWORK+2(7),=C':  :  .'  MOVE IN MASK
         SR    R0,R0                    CLEAR FOR DIVIDE
         D     R1-1,=F'100'             R0=TH  R1=HHMMSS
         CVD   R0,DWD                   CONVERT TO PACKED
         OI    DWD+7,X'0F'              REMOVE SIGN
         UNPK  EDWORK+9(2),DWD+6(2)     UNPACK TENTHS AND HUNDRETHS
         SPACE 1
         SR    R0,R0                    CLEAR FOR DIVIDE
         D     R1-1,=F'60'              R0=SS  R1=HHMM
         CVD   R0,DWD                   CONVERT TO PACKED
         OI    DWD+7,X'0F'              REMOVE SIGN
         UNPK  EDWORK+6(2),DWD+6(2)     UNPACK SECONDS
         SPACE 1
         SR    R0,R0                    CLEAR FOR DIVIDE
         D     R1-1,=F'60'              R0=MM  R1=HH
         CVD   R0,DWD                   CONVERT TO PACKED
         OI    DWD+7,X'0F'              REMOVE SIGN
         UNPK  EDWORK+3(2),DWD+6(2)     UNPACK MINUTES
         SPACE 1
         CVD   R1,DWD                   CONVERT TO PACKED
         OI    DWD+7,X'0F'              REMOVE SIGN
         UNPK  EDWORK+0(2),DWD+6(2)     UNPACK HOURS
         BR    R7                       RETURN TO CALLER
***********************************************************************
*                                                                     *
*  THIS SECTION GIVES US THE DAY OF THE WEEK                          *
*                                                                     *
*                                                                     *
*/********************************************************************/
*/*                                                                  */
*/*   EASY WAY OF WORKING THIS OUT IS AS FOLLOWS.                    */
*/*   JAN 1 1901 WAS A MONDAY.                                       */
*/*   SUBTRACT 1900 FROM (CURRENT YEAR - 1) = (A).                   */
*/*   SAVE TOTAL.                                                    */
*/*   DIVIDE BY 4 TO GET NUMBER OF LEAP YEARS IN INTERVAL = (B)      */
*/*   GET TOTAL NUMBER OF DAYS FROM JAN 1 1900 TO DEC 31 OF THE      */
*/*   PRECEDING YEAR. THIS IS (365 * A) + (B) = C                    */
*/*   ADD TO THIS  THE DAY NUMBER IN THE CURRENT YEAR. THE WEEKDAY   */
*/*   IS GOT BY ADDING DAY NUMBER TO C AND DIVIDING BY 7.            */
*/*   REMAINDER 0 = MONDAY , REMAINDER 1 = TUESDAY ETC.              */
*/*                                                                  */
*/*                                                                  */
*/*   (LITTLE WARNING : 2100 IS NOT A LEAP YEAR SO WE WILL BLOW UP   */
*/*   THEN. 2000 IS. BUT WHO CARES ANYWAY)                           */
*/*                                                                  */
*/*                                                                  */
*/********************************************************************/
DODAY    DS    0H
         MVC   TEMP,=X'40202021202020'
         ED    TEMP(7),TEMPDATE         GET YY IN CHAR FORMAT
         XC    YEAR,YEAR
         PACK  YEAR+2(2),TEMP+3(2)   GET 0YYF
         XC    DWD,DWD                  CLEAR WORK AREA
         MVC   DWD+6(2),YEAR+2          WANT 0000000000000YYF
         CVB   R1,DWD                   NOW GOT BINARY YEAR
         CH    R1,=H'00'                YEAR 2000
         BNE   NOT2000
         AH    R1,=H'100'               ADD 100 YEARS SINCE 1900
NOT2000  SH    R1,=H'1'                 REDUCE BY 1
         LR    R0,R1                    SAVE
         MH    R0,=H'365'               NUMBER OF DAYS
         ST    R0,DAYTOT                SAVE IT
         XR    R0,R0                    CLEAR FOR DIVIDE
         D     R0,=F'4'                 GET NUMBER OF LEAP YEARS
         L     R0,DAYTOT                TOT DAYS
         AR    R1,R0                    ADD TO ANSWER
         ST    R1,DAYTOT                ACCOUNTED FOR LEAP YEARS
         XC    DWD,DWD                  CLEAR AGAIN
         MVC   DWD+6(2),TEMPDATE+2      GET DAY OF YEAR (CURRENT YEAR)
         CVB   R1,DWD                   GET IT IN BINARY
         L     R0,DAYTOT                ADD TO TOTAL ALREADY GOT
         AR    R1,R0
         XR    R0,R0                    CLEAR FOR DIVIDE BY 7
         D     R0,=F'7'                 DIVIDE
         LA    R14,WEEKDAYS             WEEKDAY TABLE
         MH    R0,=H'3'                 OFFSET IN TABLE
         AR    R14,R0                   GOT IT
         MVC   EDWORK(3),0(R14)         GOTCHER
         BR    R7
************************************************************
*                                                          *
*        CONSTANTS                                         *
*                                                          *
************************************************************
WEEKDAYS DC    CL21'MONTUEWEDTHUFRISATSUN'
YEAR     DS    F
DAYTOT   DS    F
TEMP     DC    CL7' '
TEMPDATE DC    CL7' '
SAVER7   DC    F'0'
DWD      DS    D
WORKDATE DC    CL7' '
EDWORK   DC    XL11'00'
         DS    0D
SAVEAREA DS    20F           /* ENSURE ENOUGH SAVE AREA STORAGE */
         REGS
 END
