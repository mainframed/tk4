         TITLE 'SQA MONITOR PROGRAM   02-05-81'
         PRINT NOGEN
*******************************************************************
*  SQAMON  -  MONITOR SQA USAGE VIA STIMER OR TSO                 *
*                                                                 *
*  JCL:       EXEC PGM=SQAMON                                     *
*             SYSPRINT - OUTPUT LISTING                           *
*                                                                 *
*  PARM:      OPTIONAL, IF TSO IS SPECIFIED THEN NO MODESET IS    *
*             ISSUED AND THE OUTPUT IS VIA TPUT WITH TERMINATION  *
*             UPON TGET OF NON-BLANK INPUT                        *
*                                                                 *
*             THE DEFAULT TIME INTERVAL IS 60 SECONDS.            *
*                                                                 *
*             NOTE: MUST BE AUTHORIZED TO ISSUE DONTSWAP          *
*                   WHICH IMPROVES CONSISTENCY OF TIMER           *
*                   INTERVAL                                      *
*                                                                 *
*******************************************************************
         EJECT
         MACRO
&NAME    PRIME &REG,&SAVE,&CONS,&NTER,&EQU
.* THIS IS THE PRIME MACRO
.* ITS FUNCTION IS
.* 1.  ESTABLISH ADDRESSABILITY SAVE REGISTERS ACT AS ENTRY
.* 2.  GENERATE REG SAVE AREA OR DO GETMAIN
.* 3.  PROVIDE EXIT USED BY TERME MACRO
.* 4.  PROVIDE ADDIT SAVE AREAS FOR SUBROUTINES SO ONLY 1 BAL REG
         GBLA  &PERFD,&PERFL
         GBLC  &PERFR,&LAB,&SNTRY
         GBLB  &EQFLG,&PRIM
         LCLB  &REENT
         LCLA  &CNT,&LOOP,&INC
         LCLC  &BASE(3),&SCSECT,&PNAME
         AIF   (&PRIM).DUMB
&PRIM    SETB  1
&LAB     SETC  'ICC'.'&SYSNDX'
&SNTRY   SETC  '&LAB'.'A'
&SCSECT  SETC  '&SYSECT'
         AIF   (T'&NAME EQ 'O').CSCT0
         AIF   ('&SCSECT' NE '').CSCT1
&NAME    CSECT
&SCSECT  SETC  '&NAME'
         AGO   .CSCT0
.DUMB    MNOTE 8,'ONLY ONE PRIME MAY BE DEFINED'
         MEXIT
.CSCT1   MNOTE 'A CSECT IS ALREADY DEFINED.'
&PNAME   SETC  '&NAME'
.CSCT0   ANOP
         USING *,15
         AIF   ('&EQU' EQ '').A1
         REGEQU
.A1      AIF   ('&CONS' EQ '').A2
&PNAME   SAVE  (14,12),,&CONS
         AGO   .A3
.A2      ANOP
&PNAME   SAVE  (14,12),,&SCSECT
.A3       ANOP
         LA    14,&LAB
         ST    14,&SNTRY
         B     &SNTRY+4
         AIF   ('&SAVE' NE '').A4
&REENT   SETB  1
.A4      AIF   ('&REG' EQ '').A6
         AIF   (N'&REG GT 3).BAD3
         AIF   (N'&REG LT 2).B1
&CNT     SETA  N'&REG
&LOOP    SETA  1
&INC     SETA  &LOOP+1
.A5      AIF   (T'&REG(&LOOP) NE 'N').BAD1
&BASE(&LOOP) SETC '&REG'(&INC,K'&REG(&LOOP))
&INC     SETA  &INC+K'&REG(&LOOP)+1
&LOOP    SETA  &LOOP+1
         AIF   (&LOOP LE &CNT).A5
         AGO   .A7
.B1      ANOP
&BASE(1) SETC  '&REG'
         AGO   .B2
.A6      ANOP
&BASE(1) SETC  '12'
.B2      ANOP
&CNT     SETA  1
.A7      ANOP
&SNTRY   DS    F
          DROP 15
         AIF   (&CNT NE 3).A8
         LA    &BASE(3),2048                     ESTABLISH ADDRESSAB
         LA    &BASE(2),2048(&BASE(3),15)        WITH THREE
         LA    &BASE(3),2048(&BASE(3),&BASE(2))  BASE REGS
         LR    &BASE(1),15
         USING &SCSECT,&BASE(1),&BASE(2),&BASE(3)
         AGO   .A10
.A8      AIF   (&CNT NE 2).A9
         LA    &BASE(2),2048                     ESTABLISH ADRESSAB
         LA    &BASE(2),2048(&BASE(2),15)        WITH TWO
         LR    &BASE(1),15                       BASE REGS
         USING &SCSECT,&BASE(1),&BASE(2)
         AGO   .A10
.A9      AIF   (&CNT NE 1).BAD4
         LR    &BASE(1),15                       ESTABLISH ADRESSAB
         USING &SCSECT,&BASE(1)
.A10     AIF   (&REENT).A11
         LA    15,&SAVE
         AGO   .A14
.A11     AIF   ('&NTER' NE '').A12
&PERFL   SETA  0
&CNT     SETA  72
         AGO   .A13
.A12     AIF   (T'&NTER NE 'N').BAD5
&PERFL   SETA  &NTER
&PERFR   SETC  '14'
&PERFD   SETA  0
&CNT     SETA  72+&NTER*4
* GENERATED SAVE AREA EXTENDED FOR USE BY NTER AND XIT MACROS
.A13     ANOP
         GETMAIN R,LV=&CNT
         LR    15,1
.A14     ANOP
         LM    0,1,20(13)
         ST    13,4(15)                          CHAIN THE
         ST    15,8(13)                          SAVE AREAS
         LR    13,15
         L     15,&SNTRY
          BR   15
         AIF   (&REENT).A20
&LAB.X   L     13,4(13)
         AGO   .A21
.A20     ANOP
&LAB.X   LR    1,13
         L     13,4(13)
         FREEMAIN R,LV=&CNT,A=(1)
.A21     ANOP
         RETURN (14,12),T,RC=(15)
         AIF   (&REENT).A24
         AIF   ('&NTER' NE '').A22
&CNT     SETA  18
         AGO   .A23
.A22     AIF   (T'&NTER NE 'N').BAD5
&PERFL   SETA  &NTER
&PERFR   SETC  '14'
&PERFD   SETA  0
&CNT     SETA  &NTER+18
* GENERATED SAVE AREA EXTENDED FOR USE BY NTER AND XIT MACROS
.A23     ANOP
&SAVE    DC    &CNT.F'0'
.A24     ANOP
         LTORG
&LAB     DS    0H
         MEXIT
.BAD1    MNOTE 8,'FIRST PARAMETER/S MUST BE SELF DEFINING'
         MEXIT
.BAD3    ANOP
.BAD4    MNOTE 8,'THIS MACRO WILL HANDLE 1-3 BASE REGS'
         MEXIT
.BAD5    MNOTE 8,'THIRD PARAMETER MUST BE SELF DEFINING'
         MEND
         EJECT
         MACRO
&NAME    TERME &PASS,&RC=O
         GBLC  &LAB
         GBLB  &PRIM
&NAME    DS    0H
         AIF   (&PRIM).TSTRC
         MNOTE 8,'PRIME MUST OCCUR BEFORE TERME'
         MEXIT
.TSTRC   AIF   ('&RC' EQ '(15)').RET
         AIF   ('&RC' EQ 'O').RET
         AIF   ('&RC'(1,1) EQ '(').ISAREG
         LA    15,&RC
         AGO   .RET
.ISAREG  ANOP
         LR    15,&RC
.RET     AIF   ('&PASS' NE 'PASS').NOPASS
         L     14,4(13)
         STM   0,1,20(14)
.NOPASS  ANOP
         B     &LAB.X
         MEND
         EJECT
         MACRO
&LABEL   $STCK  &NOGEN
         LCLC   &L
.**********************************************************************
.****                                                             *****
.****    THIS MACRO WILL PROVIDE THE DAY, DATE, AND TIME FROM     *****
.****    THE TIME-OF-DAY CLOCK IN GREGORIAN (ENGLISH) FORMAT.     *****
.****                                                             *****
.****    IF INVOKED WITHOUT THE OPTIONAL 'NOGEN' KEYWORD, THE     *****
.****    CONSTANTS NAMED BELOW WILL BE GENERATED.  IF THE         *****
.****    'NOGEN' KEYWORD IS USED, THE USER MUST PROVIDE THIS      *****
.****    ROUTINE WITH ADDRESSABILITY TO THEM AS PRE-DEFINED       *****
.****    CONSTANTS.                                               *****
.****                                                             *****
.****    DAY    DS   X      A BINARY NUMBER (HEX) RELATIVE TO     *****
.****                       THE DAY OF THE WEEK AS FOLLOWS        *****
.****                       0=MONDAY, 1=TUESDAY, 2=WEDNESDAY,     *****
.****                       3=THURSDAY, 4=FRIDAY,                 *****
.****                       5=SATURDAY, 6=SUNDAY                  *****
.****                                                             *****
.****    DATE   DS   CL8    AN EIGHT CHARACTER FIELD CONTAINING   *****
.****                       THE DATE IN MM/DD/YY FORMAT           *****
.****                                                             *****
.****    TIME   DS   CL8    AN EIGHT CHARACTER FIELD CONTAINING   *****
.****                       THE TIME IN HH:MM:SS FORMAT           *****
.****                                                             *****
.****    NOTE THAT THE CALLER MUST PROVIDE A REGISTER SAVE AREA   *****
.****    THAT BEGINS ON A DOUBLEWORD BOUNDARY TO BE USED AS A     *****
.****    WORK AREA BY THIS ROUTINE (R-13 BASED).                  *****
.****                                                             *****
.**********************************************************************
&L       SETC  '&SYSNDX'
&LABEL   STCK  8(13)              STORE THE TIME-OF-DAY CLOCK
         LM    0,1,8(13)          LOAD INTO WORK REGS
         L     15,16              GET CVT ADDRESS
         A     0,304(15)          ADD LOCAL TIME DEVIATION
         SRDL  0,12               ISOLATE NUMBER OF MICROSECONDS
         D     0,=F'60000000'     DIVIDE BY 60M (R1=MINUTES AFT EPOCH)
         LR    15,0               COPY REMAINDER OF MICS TO GET SECS
         SR    14,14              CLEAR FOR DIVIDE
         D     14,=F'951424'      DIVIDE TO GET REMAINING SECONDS (R5)
         LR    14,15              COPY TO WORK REG
S&L.B    SL    14,=F'60'          DECREMENT BY 60 SECONDS
         BM    S&L.S              LESS THAN SIXTY, CONTINUE
         SL    15,=F'60'          MORE THAN SIXTY, ADJUST FOR LEAP
         AL    1,=F'1'            BUMP MINUTES
         B     S&L.B              CHECK AGAIN
S&L.S    CVD   15,8(13)           CONVERT SECONDS TO PACKED FORMAT
         UNPK  24(4,13),14(2,13)  UNPACK SECONDS FOR PRINT
         OI    27(13),X'F0'       SET UP FOR PRINTING
         MVC   TIME+6(2),26(13)   MOVE THE SECONDS
         CVD   1,8(13)            CONVERT MINUTES TO PACKED FORMAT
         DP    8(8,13),=P'60'     DIVIDE INTO HOURS AND MINUTES
         UNPK  24(4,13),14(2,13)  UNPACK THE MINUTES
         OI    27(13),X'F0'       SET UP FOR PRINTING
         MVC   TIME+3(2),26(13)   MOVE THE MINUTES
         ZAP   8(8,13),8(6,13)    RESET TO FULL LENGTH
         DP    8(8,13),=P'24'     DIVIDE INTO DAYS AND HOURS
         UNPK  24(4,13),14(2,13)  UNPACK THE HOURS
         OI    27(13),X'F0'       SET UP FOR PRINTING
         MVC   TIME(2),26(13)     MOVE THE HOURS
         MVI   TIME+2,C':'        ADD COLIN
         MVI   TIME+5,C':'        ADD COLIN
         ZAP   8(8,13),8(6,13)    RESET TO FULL LENGTH
         DP    8(8,13),=P'7'      DIVIDE BY NUMBER OF DAYS IN A WEEK
         ZAP   8(8,13),15(1,13)   FILL DOUBLEW WITH THE REMAINDER
         CVB   0,8(13)            CONVERT RELATIVE DAY TO BINARY
         STC   0,DAY              SET RELATIVE DAY OF WEEK
         ZAP   16(8,13),8(8,13)   SAVE THE NUMBER OF DAYS
         L     1,16               GET CVT ADDRESS
         MVC   24(4,13),57(1)     MOVE CVT DATE TO WORK AREA
         ZAP   8(8,13),=P'0'      ZERO WORK AREA
         MVO   14(2,13),24(1,13)  MOVE YEAR PORTION
         UNPK  DATE+6(2),14(2,13) UNPACK INTO OUTPUT AREA
         LA    15,S&L.T           LOAD ADDR OF TABLE
         CVB   1,8(13)            CONVERT TO BIN
         SLL   1,30               SHIFT ALL BUT LAST TWO
         LTR   1,1                TEST RESIDUAL
         BNZ   *+8                NOT 0, BRANCH
         LA    15,S&L.TL          LEAP YEAR
         LR    14,15              SAVE TABLE IN USE
         ZAP   8(8,13),25(2,13)   MOVE DAY PORTION
         CVB   0,8(13)            CONVERT TO BIN
         SR    1,1                CLEAR REG
         IC    1,0(15)            LOAD CHAR FROM TABLE
         LA    15,1(15)           INDEX TABLE POINTER
         SR    0,1                SUBTRACT FROM WORK VALUE
         BP    *-10               STILL POSITIVE, DO AGAIN
         AR    0,1                ELSE, ADD IT BACK
         CVD   0,8(13)            CONVERT TO DEC
         UNPK  DATE+3(2),14(2,13) UNPACK DAY INTO OUTPUT
         SR    15,14              FIND VALUE OF CURRENT INDEX
         CVD   15,8(13)           CONVERT TO DEC
         UNPK  DATE(2),14(2,13)   UNPACK MONTH INTO OUTPUT
         OI    DATE+1,C'0'        INSURE NUMERICS
         OI    DATE+4,C'0'        INSURE NUMERICS
         OI    DATE+7,C'0'        INSURE NUMERICS
         MVI   DATE+2,C'/'        ADD SLASH
         MVI   DATE+5,C'/'        ADD SLASH
         B     S&L.E              BRANCH AROUND CONSTANTS
S&L.T    DC    AL1(31,28,31,30,31,30,31,31,30,31,30,31) MONTH TABLE
S&L.TL   DC    AL1(31,29,31,30,31,30,31,31,30,31,30,31) LEAP YEAR
         AIF    (T'&NOGEN NE 'O').NOGEN   NOGEN SPECIFIED, SKIP
DAY      DC    XL1'00'            RELATIVE DAY OF THE WEEK
DATE     DC    C'  /  /  '        CURRENT DATE
TIME     DC    C'  :  :  '        CURRENT TIME
.NOGEN   ANOP
S&L.E    DS    0H
         MEND
         MACRO
&LABEL   @M    &FIELDA,&FIELDB
         MVC   &FIELDB,=X'40202021'   MOVE EDIT PATTERN
         LH    R8,&FIELDA             LOAD FIELD TO BE CONVERTED
         CVD   R8,DWK                 CONVERT TO DECIMAL
         ED    &FIELDB,DWK+6          AND EDIT IT INTO WTO
         OI    &FIELDB+3,X'F0'        INSURE NUMERIC
         SPACE
         MEND
         MACRO
&LABEL   @M1   &FIELDA,&FIELDB
         MVC   &FIELDB-1(5),=X'2020202021'   MOVE EDIT PATTERN
         LH    R8,&FIELDA                    LOAD DATA FIELD
         CVD   R8,DWK                        CONVERT TO DECIMAL
         ED    &FIELDB-2(6),DWK+5            AND EDIT IT INTO WTO
         OI    &FIELDB+3,X'F0'               INSURE NUMERIC
         SPACE
         MEND
         MACRO
&L       KFILL  &A,&B,&C
         LCLA   &LEN
         LCLC   &R
         AIF    ('&C'(1,1) NE '(').A
&LEN     SETA   K'&C-2
&R       SETC   '&C'(2,&LEN)
&L       LR     R1,&R
         AGO    .B
.A       ANOP
&L       L      R1,&C
.B       SRL    R1,10
         CVD    R1,DWK
         MVC    FORMAT,EDITK
         ED     FORMAT+1(6),DWK+5
         AIF    ('&A'(1,1) NE '(').C
&LEN     SETA   K'&A-2
&R       SETC   '&A'(2,&LEN)
         MVC    0(&B,&R),FORMAT+8-&B
         AGO    .D
.C       MVC    &A.(&B),FORMAT+8-&B
.D       ANOP
         SPACE
         MEND
SQAMON   PRIME 12,,,,Y
         L     1,0(1)
         LH    2,0(1)
         CLC   2(3,R1),=C'TSO'           TSO OPTION ?
         BNE   MODESET                   NO
         OI    SW,X'01'                  SET TSO SWITCH
         B     DOIT                      GO START OUR THING
         EJECT
MODESET  MODESET KEY=ZERO,MODE=SUP
         SR    R0,R0
         SYSEVENT DONTSWAP,ASID=(0)
         MODESET KEY=NZERO,MODE=PROB
         EJECT
DOIT     L     R3,CVTPTR     LOAD CVT POINTER
         USING CVT,R3        CVT ADDRESSABILITY
         L     R2,CVTSMCA                -> SMCA
         USING SMCABASE,R2
         MVC   SMFID,SMCASID             MOVE SMF SYSTEM ID
         DROP  R2
         TM    SW,X'01'                  TSO ?
         BO    SQALOOP
         OPEN  (SYSPRINT,OUTPUT)
         WTOR  'SQA MONITOR IS NOW ACTIVE - REPLY STOP TO END',        X
               REPLY,4,ECB,ROUTCDE=(1,2)
SQALOOP  EQU   *
         LR    R5,R13                    SAVE R13
         $STCK
         LR    R13,R5                    RELOAD R13
         L     R3,CVTPTR     LOAD CVT POINTER
         MVC   SDATE,DATE
         MVC   STIME,TIME
         L     R7,CVTGDA      POINT TO GLOBAL DATA AREA
         USING GDA,R7
*    GET SQA ALLOCATED SPACE
         L     R1,SQASPQEP    -> SQA SPQE
         USING SPQESECT,R1
         L     R3,SPDQEPTR    -> SQA DQE
         DROP  R3
         USING DQESECT,R3
         SR    R9,R9               INITIALIZE LARGEST SQA AREA
         XC    SQASIZET,SQASIZET  INITIALIZE SQA SIZE TOTAL
         XC    SQADQES,SQADQES    INITIALIZE SQA DQE COUNT
         L     R2,DQEBLKAD    -> START OF SQA
         LA    R2,0(R2)       ROUND
         SR    R8,R8          INITIALIZE R8
         SPACE
SQADQE   L     R1,DQELNTH     LOAD SIZE OF SQA
         A     R1,SQASIZET    ADD PRIOR DQE SIZE
         ST    R1,SQASIZET    AND SAVE
         LH    R1,SQADQES     LOAD SQA DQE COUNTER
         AH    R1,=H'01'      ADD ONE
         STH   R1,SQADQES     AND SAVE IT
         L     R5,DQFQEPTR    -> TO SQA'S FQE
         USING FQESECT,R5
         SR    R7,R7
SQALP    A     R7,FQELNTH     ADD LENGTH OF FREE SPACE
         C     R9,FQELNTH          LARGEST FREE
         BH    NOSQAL              NO
         L     R9,FQELNTH          YES - SAVE IT
NOSQAL   EQU   *
         AH    R8,=H'01'      ADD 1 TO COUNTER OF FRAGMENTS
         L     R5,FQEPTR      -> NEXT FQE
         LTR   R5,R5          TEST FOR LAST ENTRY
         BP    SQALP          CONTINUE LOOP
NDQE     L     R3,DQEPTR      -> NEXT DQE OR 0
         LTR   R3,R3          END OF LINE ?
         BP    SQADQE         NO - CONTINUE SCAN
         STH   R8,SQAFRAG     SAVE TOTAL SQA FRAGMENT COUNT
         ST    R7,SQAFREE     END SO SAVE TOTAL FREE SPACE
         ST    R9,SQALARG          SAVE SIZE OF LARGEST FREE FRAG
         L     R2,SQAFREE   SQA FREE SPACE
         L     R3,SQASIZET  LOAD SQA SIZE
         SR    R3,R2        SUB TO GET ALLOCATED
         LA    R3,1(R3)     ROUND
         ST    R3,SQASIZEA  AND SAVE IT
         @M    SQADQES,DQECNT
         @M1   SQAFRAG,FRAGCNT
         KFILL LARGFRAG,6,SQALARG
         KFILL SQAUSED,6,SQASIZEA
         KFILL SQATOTAL,6,SQASIZET
         TM    SW,X'01'                  TSO ?
         BO    TSO                       YES
         AP    CTR,=P'01'
         CP    CTR,=P'42'                END OF PAGE
         BL    PLINE
         ZAP   CTR,=P'01'
         PUT   SYSPRINT,TITLE
         PUT   SYSPRINT,SQATITLE
PLINE    PUT   SYSPRINT,SQALINE
         CLI   REPLY,C' '
         BE    STIMER
         CLC   REPLY,=C'STOP'
         BE    ENDIT
         MVI   REPLY,C' '
         WTO   'INVALID REPLY',ROUTCDE=(1,2)
         WTOR  'SQA MONITOR IS NOW ACTIVE - REPLY STOP TO END',        X
               REPLY,4,ECB,ROUTCDE=(1,2)
STIMER   STIMER WAIT,DINTVL=TIMEVAL
         B     SQALOOP
TSO      EQU   *
         LA    R1,TITLE+1                -> OUTPUT LINE
         LH    R0,=AL2(LINEL-1)          LOAD LENGTH
         SVC   93                        ISSUE TPUT SVC
         LA    R1,SQATITLE+1                -> OUTPUT LINE
         LH    R0,=AL2(LINEL-1)          LOAD LENGTH
         SVC   93                        ISSUE TPUT SVC
         LA    R1,SQALINE+1              -> OUTPUT LINE
         LH    R0,=AL2(LINEL-1)          LOAD LENGTH
         SVC   93                        ISSUE TPUT SVC
         TGET  REPLY,1
         CLI   REPLY,C' '                BLANK REPLY
         BE    SQALOOP                   YES
         B     ENDTSO                    ENDIT
ENDIT    EQU   *
         CLOSE SYSPRINT
ENDTSO   TERME
         EJECT
         DS    0F
TIMEVAL  DC    C'00010000'               HHMMSSTH
SW       DC    X'00'                     SWITCH
         SPACE
TITLE    DC    C'1              SQA MONITOR RUN FOR SYSTEM '
SMFID    DC    CL4' '
         DC    CL40' '                   FILLER
SQATITLE DC    C'      DATE      TIME     DQE  FRAG'
         DC    C'    LARG    USED   TOTAL'
         DC    CL5' '                    FILLER
SQALINE  DC    CL4' '
SDATE    DC    CL8' '
         DC    CL2' '
STIME    DC    CL8' '
         DC    CL2' '
DQECNT   DC    CL4' '
         DC    CL2' '
FRAGCNT  DC    CL4' '
         DC    CL2' '
LARGFRAG DC    CL6' '
         DC    CL2' '
SQAUSED  DC    CL6' '
         DC    CL2' '
SQATOTAL DC    CL6' '
LINEL    EQU   *-SQALINE
         SPACE
CTR      DC    PL2'42'
REPLY    DC    C' '
ECB      DC    F'00'
FORMAT   DS    D
DWK      DS    D
EDITK    DC    X'40402020202120D2'
SQASIZEA DS    F          ALLOCATED SQA
SQASIZET DS    F          TOTAL SQA
SQAFREE  DS    F          FREE SQA
SQALARG  DS    F                   LARGEST FREE SQA
SQADQES  DS    H          SQA DQE COUNT
SQAFRAG  DS    H          SQA FRAGMENT COUNT
SYSPRINT DCB   DSORG=PS,MACRF=PM,DDNAME=SYSPRINT,LRECL=LINEL,          *
               BLKSIZE=LINEL,RECFM=FA
         CVT   DSECT=YES
         EJECT
         IEESMCA
         EJECT
         IHADQE
         EJECT
         IHAFBQE
         EJECT
         IHAGDA
         EJECT
         IHAPQE
         EJECT
         IHASPQE
         EJECT
         IHAFQE
         END
