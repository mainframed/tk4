JUSTFY  TITLE 'SUBROUTINE WHICH JUSTIFIES CHARACTER STRINGS'
*
*      THIS PROGRAM JUSTIFIES THE CHARACTERS FOUND IN A CHARACTER
* STRING. THE MODE OF JUSTIFICATION MAY BE RIGHT, LEFT OR CENTER.
* THE LENGTH OF THE CHARACTER STRING TO BE JUSTIFIED MUST BE BETWEEN
* 1 AND 256, INCLUSIVE. UPON COMPLETION OF THIS SUBROUTINE, REGISTER
* 15 CONTAINS 0 IF THE JUSTIFICATION WAS SUCCESSFUL AND 12 IF THE
* JUSTIFICATION FAILED. THE CALLING SEQUENCE FOR "JUSTFY" IS AS
* FOLLOWS:
*           1. THE CHARACTER STRING TO BE JUSTIFIED
*           2. THE LENGTH OF THE CHARACTER STRING
*                  (4-BYTE BINARY)
*           3. THE MODE OF JUSTIFICATION
*                  (4-BYTE BINARY)
*                  WHERE 1 = LEFT JUSTIFICATION
*                        2 = CENTER JUSTIFICATION
*                        3 = RIGHT JUSTIFICATION
*
*     THE "JUSTFY" SUBROUTINE IS REENTRANT AND REUSEABLE.
*
JUSTFY   ENTER PARMREG=2,          SAVE REGISTERS AND INITIALIZE       X
               GETMAIN=(WORKSIZE,0)
         REGISTER                  REGISTER EQUATES
         USING WORKAREA,R13        ADDRESS WORK AREA DSECT
         LM    R4,R6,0(R2)         LOAD PARAMETER POINTERS
         L     R5,0(,R5)           LOAD LENGTH OF STRING
         L     R6,0(,R6)           LOAD JUSTIFICATION OPTION
         C     R5,F256             IF LENGTH OF STRING > 256
         BH    ERROR                  THEN FLAG AS ERROR
         LTR   R5,R5               IF LENGTH OF MOVE < 1
         BNP   ERROR                  THEN FLAG AS ERROR
         C     R6,F3               IF JUSTIFICATION OPTION > 3
         BH    ERROR                  THEN FLAG AS ERROR
         LTR   R6,R6               IF JUSTIFICATION OPTION < 1
         BNP   ERROR                  THEN FLAG AS ERROR
         LR    R2,R5               LOAD SIZE OF STRING
         BCTR  R2,R0               DECREMENT FOR EXECUTE
         LR    R8,R4               POINT TO CHARACTER STRING
         LA    R9,BLANKS           POINT TO STRING OF BLANKS
         LA    R15,0               CLEAR RETURN CODE
         EX    R2,COMPDATA         IF STRING IS ALL BLANKS
         BE    EXIT                   THEN NOTHING TO DO
         MVC   WORKSTRG,BLANKS     BLANK OUT WORK STRING
         XC    RBLANKS,RBLANKS     ZERO COUNT OF RIGHT BLANKS
         XC    LBLANKS,LBLANKS     ZERO COUNT OF LEFT BLANKS
         STC   R6,OPTION           SAVE JUSTIFICATION OPTION CODE
         LR    R7,R4               POINT TO START OF STRING
         LR    R2,R5               LOAD SIZE OF STRING
LLOOP    DS    0H
         CLI   0(R7),BLANK         IF THIS BYTE IS NOT BLANK
         BNE   LLOOPEND               THEN DONE LOOKING
         LA    R7,1(,R7)           POINT TO NEXT BYTE
         L     R8,LBLANKS          LOAD COUNT OF LEFT BLANKS
         LA    R8,1(,R8)           ADD ONE TO COUNT
         ST    R8,LBLANKS             AND SAVE IT
         BCT   R2,LLOOP            GO LOOK AT THE NEXT BYTE
LLOOPEND DS    0H
         LR    R7,R4               POINT TO START OF STRING
         BCTR  R7,R0               BACK UP ONE BYTE
         LR    R2,R5               LOAD SIZE OF STRING
         AR    R7,R2               POINT TO END OF STRING
RLOOP    DS    0H
         CLI   0(R7),BLANK         IF THIS BYTE IS NOT BLANK
         BNE   RLOOPEND               THEN DONE LOOKING
         BCTR  R7,R0               BACK UP ONE BYTE
         L     R8,RBLANKS          LOAD COUNT OF RIGHT BLANKS
         LA    R8,1(,R8)           ADD ONE TO COUNT
         ST    R8,RBLANKS             AND SAVE IT
         BCT   R2,RLOOP            GO LOOK AT THE NEXT BYTE
RLOOPEND DS    0H
TRIGHTJ  DS    0H
         CLI   OPTION,RIGHT        IF NOT RIGHT JUSTIFICATION
         BNE   TCENTERJ               THEN TEST FOR CENTER
RIGHTJ   DS    0H
         LR    R9,R4               POINT TO CHARACTER STRING
         LA    R8,WORKSTRG         POINT TO WORK AREA
         LR    R2,R5               LOAD SIZE OF WORK STRING
         S     R2,RBLANKS          SUBTRACT NUMBER OF RIGHT BLANKS
         S     R2,LBLANKS          SUBTRACT NUMBER OF LEFT BLANKS
         A     R9,LBLANKS          ADD NUMBER OF LEFT BLANKS
         A     R8,RBLANKS          ADD NUMBER OF RIGHT BLANKS
         A     R8,LBLANKS          ADD NUMBER OF LEFT BLANKS
         BCTR  R2,R0               DECREMENT FOR EXECUTE
         EX    R2,MOVEDATA         MOVE CHARACTER STRING TO WORK
         LR    R8,R4               POINT TO CHARACTER STRING
         LA    R9,WORKSTRG         POINT TO WORK AREA
         LR    R2,R5               LOAD SIZE OF WORK STRING
         BCTR  R2,R0               DECREMENT FOR EXECUTE
         EX    R2,MOVEDATA         MOVE WORK TO CHARACTER STRING
         B     EXIT                   AND EXIT
TCENTERJ DS    0H
         CLI   OPTION,CENTER       IF NOT CENTER JUSTIFICATION
         BNE   TLEFTJ                 THEN TEST FOR LEFT
CENTERJ  DS    0H
         LR    R9,R4               POINT TO CHARACTER STRING
         LA    R8,WORKSTRG         POINT TO WORK AREA
         LR    R2,R5               LOAD SIZE OF WORK STRING
         S     R2,LBLANKS          SUBTRACT NUMBER OF LEFT BLANKS
         S     R2,RBLANKS          SUBTRACT NUMBER OF RIGHT BLANKS
         A     R9,LBLANKS          ADD NUMBER OF LEFT BLANKS
         L     R7,RBLANKS          LOAD NUMBER OF RIGHT BLANKS
         A     R7,LBLANKS          ADD NUMBER OF LEFT BLANKS
         SRA   R7,1                DIVIDE NUMBER OF BLANKS BY 2
         AR    R8,R7               ADD HALF OF NUMBER OF BLANKS
         BCTR  R2,R0               DECREMENT FOR EXECUTE
         EX    R2,MOVEDATA         MOVE CHARACTER STRING TO WORK
         LR    R8,R4               POINT TO CHARACTER STRING
         LA    R9,WORKSTRG         POINT TO WORK AREA
         LR    R2,R5               LOAD SIZE OF WORK STRING
         BCTR  R2,R0               DECREMENT FOR EXECUTE
         EX    R2,MOVEDATA         MOVE WORK TO CHARACTER STRING
         B     EXIT                   AND EXIT
TLEFTJ   DS    0H
         CLI   OPTION,LEFT         IF NOT LEFT JUSTIFICATION
         BNE   ERROR                  THEN AN ERROR HAS OCCURRED
LEFTJ    DS    0H
         LR    R9,R4               POINT TO CHARACTER STRING
         LA    R8,WORKSTRG         POINT TO WORK AREA
         LR    R2,R5               LOAD SIZE OF WORK STRING
         S     R2,LBLANKS          SUBTRACT NUMBER OF LEFT BLANKS
         A     R9,LBLANKS          ADD NUMBER OF LEFT BLANKS
         BCTR  R2,R0               DECREMENT FOR EXECUTE
         EX    R2,MOVEDATA         MOVE CHARACTER STRING TO WORK
         LR    R8,R4               POINT TO CHARACTER STRING
         LA    R9,WORKSTRG         POINT TO WORK AREA
         LR    R2,R5               LOAD SIZE OF WORK STRING
         BCTR  R2,R0               DECREMENT FOR EXECUTE
         EX    R2,MOVEDATA         MOVE WORK TO CHARACTER STRING
         B     EXIT                   AND EXIT
MOVEDATA DS    0H
         MVC   0(0,R8),0(R9)       MOVE THE DATA PER SPECIFICATION
COMPDATA DS    0H
         CLC   0(0,R8),0(R9)       COMPARE THE DATA PER SPECIFICATION
ERROR    DS    0H
         LA    R15,12              SET RETURN CODE FOR ERROR CONDITION
EXIT     DS    0H
         LEAVE RETCODE=(15),       RETURN TO CALLER                    X
               GETMAIN=(WORKSIZE,0)
         SPACE 2
F256     DC    F'256'
F3       DC    F'3'
BLANKS   DC    CL256' '
BLANK    EQU   X'40'
LEFT     EQU   X'01'
CENTER   EQU   X'02'
RIGHT    EQU   X'03'
         EJECT
WORKAREA DSECT ,                   MAP OF GETMAINED WORK AREA
         DS    18A                 REGISTER SAVE AREA
WORKSTRG DS    CL256               WORK AREA TO CONSTRUCT NEW STRING
RBLANKS  DS    F                   NUMBER OF BLANKS ON RIGHT OF STRING
LBLANKS  DS    F                   NUMBER OF BLANKS ON LEFT OF STRING
OPTION   DS    X                   OPTION BYTE
WORKSIZE EQU   *-WORKAREA          SIZE OF GETMAINED WORK AREA
         END
