ISBYTX   TITLE 'BIT MANUPILATION SUBROUTINE ACROSS WORDS'
*  THIS MODULE STORES A BYTE OF LENGTH LL IN LOCATION INTO BEGINNING AT
* POSITION N. THE BYTE TO BE STORED MUST BE RIGHT JUSTIFIED IN IFROM.
* NOTE THERE ARE 32 BITS IN A WORD  COUNTED FROM 1 TO 32 FROM LEFT TO
* RIGHT. IF LENGTH OR BEGINNING BIT IS ILLEGAL AN ERROR MESSAGE WILL
* SHOW UP. IN ADDITION IF THE LENGTH TO BE STORED IS GREATER THAN THE
* BEGINNING BIT TO THE 32ND BIT ANOTHER ERROR MESSAGE WILL APPEAR. THE
* PROGRAM WILL THEN ISSUE A U0900 ABEND IN BOTH CASES.
* ENTRY POINT AND ARGUMENTS FOR FORTRAN CALLS:
*   SUBROUTINE CALL: CALL ISBYTX (N,LL,INTO,IFROM)
*   FUNCTION CALL:   LM = ISBYTX (N,LL,INTO,IFROM)
*
* WARNING: DO NOT USE BOTH FUNCTION CALL AND SUBROUTINE CALL IN THE
* SAME PROGRAM
*
* THE 'ISBYTX' SUBROUTINEIS REENTRANT AND REUSABLE.
*
ISBYTX   ENTER PARMREG=2,          SAVE REGISTERS AND INITIALIZE       X
               GETMAIN=(WORKSIZE,0)
         REGISTER                  REGISTER EQUATES
         USING WORKAREA,R13
         LM    R4,R7,0(R2)         LOAD ADDRESSES
         L     R11,0(R4)           LOAD BEGINNING BIT
         L     R12,0(R5)           LOAD LENGTH
         L     R5,0(R6)            LOAD INTO WORD
         L     R7,0(R7)            LOAD FROM WORD
         ST    R11,BGBIT           STORE BEGINNING BIT
         ST    R12,LENGTH          STORE THE LENGTH
         C     R11,ZERO            CHECKING ILLEGAL BEGIN BIT
         BL    LPP                 TO SEND ERROR MESSAGE
         C     R11,TTWO
         BH    LPP                 TO SEND ERROR MESSAGE
         C     R12,ZERO            CHECK ILLEGAL LENGTH
         BL    LPP1                TO SEND ERROR MESSAGE
         C     R12,TTWO
         BH    LPP1                TO SEND ERROR MESSAGE
         L     R9,TTWO             CHECK LENGTH WILL FIT BEGIN BIT
         A     R9,ONE              32+1
         SR    R9,R11              33-BEGIN BIT
         CR    R12,R9              COMPARE WITH LENGTH OF IFROM
         BH    LPP2                TO SEND ERROR MESSAGE
         C     R11,ONE             WHEN ONE NO SHIFT
         BE    DUM
         S     R11,ONE             BEGIN BIT -1
LP       SLDL  R4,1                SHIFT INTO THE RIGHT FIELD
         BCT   R11,LP
DUM      L     R10,TTWO            LOAD 32 TO R10
         SR    R10,R12             32-LENGTH
LP1      SLL   R7,1                LEFT SHIFT LENGTH INTO R7
         BCT   R10,LP1
         L     R12,LENGTH
         LR    R9,R5
         LR    R11,R7
HERE     SR    R8,R8               ZERO OUT R8
         SR    R10,R10             ZERO OUT R8
         SLDL  R8,1                SHIFT 1 BIT OF BEGIN BIT TO R8
         SLDL  R10,1               SHIFT I BIT OF LENGTH TO R10
         CR    R10,R8              COMPARE LENGTH AND BEGIN BIT 1 BY 1
         BE    LP3
         C     R8,ZERO
         BE    LP4
         N     R5,MSKZ             CHANGE 1 TO ZERO
         B     LP3
LP4      O     R5,MSK1             CHANGE ZERO TO 1
LP3      SLDL  R4,1
         BCT   R12,HERE
         L     R6,TTWO             LOAD 32
         S     R6,BGBIT            32- BEGINNING BIT
         S     R6,LENGTH           32-BEGINNING -LENGTH
         A     R6,ONE
LP5      SLDL  R4,1
         BCT   R6,LP5
         L     R8,4(,R13)          LOAD R0 POINTER TO R8
         ST    R4,20(,R8)          SAVE THE SHIFTED WORD TO R0
         L     R5,8(,R2)           LOAD THE POINTER OF PARM2 TO R5
         ST    R4,0(,R5)           SAVE THE SHIFTED WORD TO PARM2
         SR    R15,R15
         B     LEV
LPP      L     R8,ONE              SET FLAG FOR MESSAGE
         B     LPP4
LPP1     L     R8,TWO              SET FLAG FOR MESSAGE
         B     LPP4
LPP2     L     R8,THREE
LPP4     MVC   CALLST,CCALLST      MOVE CALL PARAMETER TO WORK
         LOAD  EP=AMIINT           LOAD SUBROUTINE TO GET JOB STATUS
         LR    R15,R0              SAVE ENTRY POINT ADDRESS
         CALL  (15),(WORK),        CALL  " AMIINT"                     X
               MF=(E,CALLST)
         CLC   WORK,ONE            IF RETURN VALUE FROM "AMIINT"<= 1
         BNH   BATCH                 THEN PROCESS WITH WTO
LOGON    C     R8,ONE
         BE    M1
         C     R8,TWO
         BE    M2
         B     M3
M1       DS    0H
         TPUT  WTOMSG1,L'WTOMSG1   WRITE MESSAGE 1 TO TERMINAL
         B     EXIT
M2       DS    0H
         TPUT  WTOMSG2,L'WTOMSG2   WRITE MESSAGE 2 TO TERMINAL
         B     EXIT
M3       DS    0H
         TPUT  WTOMSG3,L'WTOMSG3   WRITE MESSAGE 3 TO TERMINAL
         B     EXIT
BATCH    C     R8,ONE              BATCH JOB BRANCH TO
         BE    MM1                 GO TO SEND MSG WTOPRM1
         C     R8,TWO              COMAPRE WITH MESSAGE FLAG
         BE    MM2                 GO TO SEND MESSAGE
         B     MM3
MM1      DS    0H
         WTO   MF=(E,WTOPRM1)      WRITE MESSAGE 1 TO DAYFILE LOG
         B     EXIT
MM2      DS    0H
         WTO   MF=(E,WTOPRM2)      WRITE MESSAGE 2 TO DAYFILE LOG
         B     EXIT
MM3      DS    0H
         WTO   MF=(E,WTOPRM3)      WRITE MESSAGE 3 TO DAYFILE LOG
EXIT     DS    0H
         ABEND 900                 ABEND THE STEP
LEV      LEAVE RETCODE=0,          RETURN TO CALLER                    X
               GETMAIN=(WORKSIZE,0)
MSK1     DC    X'80000000'
MSKZ     DC    X'7FFFFFFF'
ZERO     DC    F'0'
ONE      DC    F'1'
TWO      DC    F'2'
THREE    DC    F'3'
TTWO     DC    F'32'
CCALLST  CALL  ,(),MF=L            CONSTANT CALL PARAMETER LIST
CCALLEN  EQU   *-CCALLST
WTOPRM1  WTO   'ILLEGAL BEGINNING  BIT LESS THAN 0 OR GREATER THAN 32',X
               ROUTCDE=11,MF=L
WTOLEN1  EQU   *-WTOPRM1
         ORG   WTOPRM1+4
WTOMSG1  DS    CL(WTOLEN1-4)
         ORG
WTOPRM2  WTO   'ILLEGAL LENGTH LESS THAN 0 OR GREATER THAN 32 BITS',   X
               ROUTCDE=11,MF=L
WTOLEN2  EQU   *-WTOPRM2
         ORG   WTOPRM2+4
WTOMSG2  DS    CL(WTOLEN2-4)
         ORG
WTOPRM3  WTO   ' LENGTH IS GREATER THAN THE BEGINNING BIT TO THE 32ND',X
               ROUTCDE=11,MF=L
WTOLEN3  EQU   *-WTOPRM3
         ORG   WTOPRM3+4
WTOMSG3  DS    CL(WTOLEN3-4)
         ORG
WORKAREA DSECT ,                   MAP OF GETMAINED WORK AREA
         DS    18A
WORK     DS    F                   WORK FIELD
CALLST   DS    CL(CCALLEN)         CALL PARAMETER LIST
LENGTH   DS    F
BGBIT    DS    F
WORKSIZE EQU   *-WORKAREA
         END
