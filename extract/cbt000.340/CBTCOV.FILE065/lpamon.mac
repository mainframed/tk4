         TITLE 'LPA MONITOR      ROCKWELL INTERNATIONAL  VERSION 1'
********************************************************************
*                                                                  *
*   LPAMON                                                         *
*          THIS PROGRAM IS DESIGNED TO MONITOR THE USAGE           *
*          OF PLPA, FLPA, AND MLPA MODULES BY EXAMINING            *
*          THEIR USE COUNTS BASED UPON THE INTERVAL                *
*          SPECIFIED IN THE PARM AND ON THE # OF SAMPLES           *
*          SPECIFIED IN THE PARM.                                  *
*                                                                  *
*         THE JCL TO EXECUTE LPAMON IS :                           *
*                                                                  *
*              //STEP1  EXEC PGM=LPAMON,PARM='XX,YYYY'             *
*              //SYSPRINT  DD SYSOUT=A                             *
*                                                                  *
*                                                                  *
*         THE FORMAT OF THE PARM IS :                              *
*                                                                  *
*                POSITIONS 1-2   SAMPLE INTERVAL (SECONDS)         *
*                POSITION  3     , (COMMA)                         *
*                POSITIONS 4-7   SAMPLE COUNT (4 POS. DECIMAL)     *
*                                                                  *
*         THIS PROGRAM WAS WRITTEN BY   LIONEL DYCK                *
*                                       ROCKWELL INTERNATIONAL     *
*                                       2201 SEAL BEACH BLVD.      *
*                                       SEAL BEACH, CALIF. 90740   *
*                                       (213) 594-2520             *
*                                                                  *
*         MACROS USED ARE:  PRIME, TERME, TIME, OPEN, CLOSE,       *
*                                 DCB, IHACDE                      *
*                                                                  *
********************************************************************
         EJECT
         MACRO
&NAME    PRIME &REG,&SAVE,&CONS,&NTER,&EQU
.* THIS IS THE PRIME MACRO
.* ITS FUNCTION IS
.* 1.  ESTABLISH ADDRESSABILITY SAVE REGISTERS ACT AS ENTRY
.* 2.  GENERATE REG SAVE AREA OR DO GETMAIN
.* 3.  PROVIDE EXIT USED BY TERME MACRO
.* 4.  PROVIDE ADDIT SAVE AREAS FOR SUBROUTINES SO ONLY 1 BAL REG
         GBLA  &PERFD,&PERFL
         GBLC  &PERFR,&LAB,&SNTRY
         GBLB  &EQFLG,&PRIM
         LCLB  &REENT
         LCLA  &CNT,&LOOP,&INC
         LCLC  &BASE(3),&SCSECT,&PNAME
         AIF   (&PRIM).DUMB
&PRIM    SETB  1
&LAB     SETC  'ICC'.'&SYSNDX'
&SNTRY   SETC  '&LAB'.'A'
&SCSECT  SETC  '&SYSECT'
         AIF   (T'&NAME EQ 'O').CSCT0
         AIF   ('&SCSECT' NE '').CSCT1
&NAME    CSECT
&SCSECT  SETC  '&NAME'
         AGO   .CSCT0
.DUMB    MNOTE 8,'ONLY ONE PRIME MAY BE DEFINED'
         MEXIT
.CSCT1   MNOTE 'A CSECT IS ALREADY DEFINED.'
&PNAME   SETC  '&NAME'
.CSCT0   ANOP
          USING *,15
         AIF   ('&EQU' EQ '').A1
         REGEQU
.A1      AIF   ('&CONS' EQ '').A2
&PNAME   SAVE  (14,12),,&CONS
         AGO   .A3
.A2      ANOP
&PNAME   SAVE  (14,12),,&SCSECT
.A3       ANOP
         LA    14,&LAB
         ST    14,&SNTRY
         B     &SNTRY+4
         AIF   ('&SAVE' NE '').A4
&REENT   SETB  1
.A4      AIF   ('&REG' EQ '').A6
         AIF   (N'&REG GT 3).BAD3
         AIF   (N'&REG LT 2).B1
&CNT     SETA  N'&REG
&LOOP    SETA  1
&INC     SETA  &LOOP+1
.A5      AIF   (T'&REG(&LOOP) NE 'N').BAD1
&BASE(&LOOP) SETC '&REG'(&INC,K'&REG(&LOOP))
&INC     SETA  &INC+K'&REG(&LOOP)+1
&LOOP    SETA  &LOOP+1
         AIF   (&LOOP LE &CNT).A5
         AGO   .A7
.B1      ANOP
&BASE(1) SETC  '&REG'
         AGO   .B2
.A6      ANOP
&BASE(1) SETC  '12'
.B2      ANOP
&CNT     SETA  1
.A7      ANOP
&SNTRY   DS    F
          DROP 15
         AIF   (&CNT NE 3).A8
         LA    &BASE(3),2048                     ESTABLISH ADDRESSAB
         LA    &BASE(2),2048(&BASE(3),15)        WITH THREE
         LA    &BASE(3),2048(&BASE(3),&BASE(2))  BASE REGS
         LR    &BASE(1),15
         USING &SCSECT,&BASE(1),&BASE(2),&BASE(3)
         AGO   .A10
.A8      AIF   (&CNT NE 2).A9
         LA    &BASE(2),2048                     ESTABLISH ADRESSAB
         LA    &BASE(2),2048(&BASE(2),15)        WITH TWO
         LR    &BASE(1),15                       BASE REGS
         USING &SCSECT,&BASE(1),&BASE(2)
         AGO   .A10
.A9      AIF   (&CNT NE 1).BAD4
         LR    &BASE(1),15                       ESTABLISH ADRESSAB
         USING &SCSECT,&BASE(1)
.A10     AIF   (&REENT).A11
         LA    15,&SAVE
         AGO   .A14
.A11     AIF   ('&NTER' NE '').A12
&PERFL   SETA  0
&CNT     SETA  72
         AGO   .A13
.A12     AIF   (T'&NTER NE 'N').BAD5
&PERFL   SETA  &NTER
&PERFR   SETC  '14'
&PERFD   SETA  0
&CNT     SETA  72+&NTER*4
* GENERATED SAVE AREA EXTENDED FOR USE BY NTER AND XIT MACROS
.A13     ANOP
         GETMAIN R,LV=&CNT
         LR    15,1
.A14     ANOP
         LM    0,1,20(13)
         ST    13,4(15)                          CHAIN THE
         ST    15,8(13)                          SAVE AREAS
         LR    13,15
         L     15,&SNTRY
          BR   15
         AIF   (&REENT).A20
&LAB.X   L     13,4(13)
         AGO   .A21
.A20     ANOP
&LAB.X   LR    1,13
         L     13,4(13)
         FREEMAIN R,LV=&CNT,A=(1)
.A21     ANOP
         RETURN (14,12),T,RC=(15)
         AIF   (&REENT).A24
         AIF   ('&NTER' NE '').A22
&CNT     SETA  18
         AGO   .A23
.A22     AIF   (T'&NTER NE 'N').BAD5
&PERFL   SETA  &NTER
&PERFR   SETC  '14'
&PERFD   SETA  0
&CNT     SETA  &NTER+18
* GENERATED SAVE AREA EXTENDED FOR USE BY NTER AND XIT MACROS
.A23     ANOP
&SAVE    DC    &CNT.F'0'
.A24     ANOP
         LTORG
&LAB     DS    0H
         MEXIT
.BAD1    MNOTE 8,'FIRST PARAMETER/S MUST BE SELF DEFINING'
         MEXIT
.BAD3    ANOP
.BAD4    MNOTE 8,'THIS MACRO WILL HANDLE 1-3 BASE REGS'
         MEXIT
.BAD5    MNOTE 8,'THIRD PARAMETER MUST BE SELF DEFINING'
         MEND
         EJECT
         MACRO
&NAME    TERME &PASS,&RC=O
         GBLC  &LAB
         GBLB  &PRIM
&NAME    DS    0H
         AIF   (&PRIM).TSTRC
         MNOTE 8,'PRIME MUST OCCUR BEFORE TERME'
         MEXIT
.TSTRC   AIF   ('&RC' EQ '(15)').RET
         AIF   ('&RC' EQ 'O').RET
         AIF   ('&RC'(1,1) EQ '(').ISAREG
         LA    15,&RC
         AGO   .RET
.ISAREG  ANOP
         LR    15,&RC
.RET     AIF   ('&PASS' NE 'PASS').NOPASS
         L     14,4(13)
         STM   0,1,20(14)
.NOPASS  ANOP
         B     &LAB.X
         MEND
         EJECT
LPAMON   PRIME
         EJECT
         REGEQU
         EJECT
         L     R1,0(R1)            -> PARM FIELD
         LTR   R1,R1               IS THERE A PARM ?
         BZ    NOPARM
         LH    R2,0(R1)            LOAD LENGTH OF PARM
         CH    R2,=H'07'
         BNE   NOPARM              IGNORE- NOT RIGHT SIZE
         MVC   PARM(7),2(R1)       MOVE PARM TO PARM
         MVC   WAITTIME+4(2),SECONDS
         PACK  DWK,PLMT(4)         PACK PARM LIMIT
         CVB   R1,DWK              AND CONVERT TO BINARY
         ST    R1,LIMIT
NOPARM   EQU   *
         EJECT
         GETMAIN R,LV=ENTRIES      GET STORAGE FOR TABLE
         ST    R1,TADDR            AND SAVE START ADDR
         A     R1,TABLEN           ADD LENGTH OF TABLE
         S     R1,TABENT           SUB 1 ENTRY
         ST    R1,TEND             SAVE END OF TABLE ADDR FOR BXLE
         LR    R9,R1               INITIALIZE R9 WITH END OF TABLE
         L     R8,TABENT           INITIALIZE R8 WITH LEN OF ENTRY
         USING TABLE,R7
         SPACE
         L     R7,TADDR
         LH    R3,=X'0FFF'
         LH    R4,=H'01'
CLEAR    XC    MNAME(TLEN),MNAME   CLEAR TABLE ENTRY
         STH   R3,MLOW             INIT LOW USE CNT
         STH   R4,MHIGH            INIT HIGH COUNT
         BXLE  R7,R8,CLEAR
         TIME  DEC
         ST    R1,STRTDATE         SAVE START DATE
         ST    R0,STRTTIME         SAVE START TIME
         EJECT
*  THIS IS WHERE THE SCAN OF THE CDE'S BEGINS
BEGIN    L     R4,16               -> CVT
         L     R1,X'C4'(R4)        -> SMCA
         MVC   SMFID(4),X'10'(R1)  MOVE SMF CPUID
         L     R10,X'80'(R4)       ->TOP OF NUC
         L     R11,X'168'(R4)      ->BOTTOM OF PLPA
         LA    R11,0(R11)          - ROUND
         L     R5,X'BC'(R4)        ->1ST LPAQ
         USING CDENTRY,R5
         L     R7,TADDR            -> TABLE
         L     R1,TOTAL
         C     R1,LIMIT            COMPARE FOR LIMIT
         BE    ENDSCN              YES - END OF SAMPLING
         A     R1,=F'01'           NO INCR
         ST    R1,TOTAL            AND SAVE IT
LOOP     TM    CDATTR,CDNIP        LOADED BY NIP ?
         BNZ   INUSE               YES
INCR     L     R5,CDCHAIN          -> NEXT CDE
         LTR   R5,R5               END OF CHAIN ?
         BZ    SLEEP               YES - GET OUT OF HERE AND SLEEP
         B     LOOP                    NO - KEEP UP THE GOOD WORK
INUSE    CLI   MNAME,X'00'         AVAILABLE ENTRY ?
         BNE   COMP                NO - COMPARE ON NAME
         MVC   MNAME(8),CDNAME     MOVE NAME INTO TABLE
         TM    CDATTR,CDMIN        MINOR CDE ?
         BO    MINOR               YES
         L     R1,CDXLMJP          LOAD XLST ->
         MVC   MLEN(3),9(R1)       MOVE LENGTH OF MODULE
         B     ENTST               GO GET EPA
MINOR    L     R1,CDXLMJP          -> MAJOR CDE
         L     R1,CDXLMJP-CDENTRY(R1) -> XLST OF MAJOR CDE
         MVC   MLEN(3),9(R1)       MOVE LENGTH OF MODULE
         SPACE
ENTST    L     R1,CDENTPT
         STCM  R1,7,MADDR+1        STORE ENTRY POINT ADDR
         C     R10,MADDR           NUC VS. EPA
         BH    FLPA                YES IN FLPA
         C     R11,MADDR           TOP OF MLPA VS. EPA
         BH    MLPA                IN MLPA
         MVI   FLAG,C'P'           IN PLPA
         B     SATTR               GO TO SAVE ATTR
FLPA     MVI   FLAG,C'F'
         B     SATTR               GO TO SAVE ATTR
MLPA     MVI   FLAG,C'M'
SATTR    MVC   MATTR1(2),CDATTR    CDE ATTR BYTE 1 AND 2 FOR SPEED
         B     COUNTIT             GO PERFORM COUNTS , ETC.
BXLE     BXLE  R7,R8,INUSE         LOOP THRU TABLE
         L     R7,TADDR            REPOINT TABLE
         B     INCR                CAN'T FIND MOVE ON
COMP     CLC   MNAME,CDNAME        SAME MODULE ?
         BNE   BXLE                NO - GO LOOP TILL WE FIND IT
COUNTIT  EQU   *
         LH    R1,CDUSE            LOAD USE COUNT
         C     R11,MADDR           BOTTOM MLPA VS. EPA
         BL    CDCNT               YES -  IN PLPA
         CH    R1,=H'01'           USE = 1 (IE NOT USED)
         BNH   COMUSE              TRUE - BYPASS INCRIMENT
CDCNT    LH    R2,MUSE             LOAD SAMPLE USED COUNT
         AH    R2,=H'01'           INCR
         STH   R2,MUSE             AND SAVE IT
COMUSE   CH    R1,MLOW             COMPARE LOW COUNT
         BL    LOWUSE              YES
         CH    R1,MHIGH            HIGH ?
         BH    HIGH
         B     TOTALIT
LOWUSE   STH   R1,MLOW             NEW LOW
         B     TOTALIT
HIGH     STH   R1,MHIGH
TOTALIT  L     R2,MTOT             LOAD TOTAL USE COUNT
         AR    R1,R2               AND UPDATE WITH CURRENT
         ST    R1,MTOT             AND SAVE IT
         L     R7,TADDR            REPOINT TABLE
         B     INCR
         SPACE 2
SLEEP    EQU   *
         STIMER WAIT,DINTVL=WAITTIME
         B     BEGIN               START LOOP AGAIN
         EJECT
ENDSCN   EQU   *                   END OF SAMPLING
         TIME  DEC
         ST    R1,STOPDATE         SAVE STOP DATE
         ST    R0,STOPTIME         SAVE STOP TIME
*        WE WILL NOW SORT THE TABLE - BY USAGE
******   SORT BY  NAME
$ORTSTRT L     R7,TADDR            -> START OF TABLE
         NI    SW,X'EF'            TURN OFF SORT BIT
$ORTLP   CLI   ENTB,X'00'          NULL ENTRY
         BE    $ORTEND             END OF TABLE
         CLC   MNAME,MNAMEB        COMPARE ENTRIES
         BNH   $ORTBXLE            LESS OR EQ - SO OK
         MVC   ENTSAVE(TLEN),MNAME  SAVE THIS ENTRY
         MVC   MNAME(TLEN),ENTB      AND REPLACE WITH NEXT
         MVC   ENTB(TLEN),ENTSAVE  SWITCH COMPLETE
         OI    SW,SORT             TURN SORT BIT ON
$ORTBXLE BXLE  R7,R8,$ORTLP        CONTINUE SORT
$ORTEND  EQU   *
         TM    SW,SORT             SORT BIT ON?
         BZ    $NDSORT             NO  - ALL SORTED
         B     $ORTSTRT            YES - ONE MORE TIME
$NDSORT  EQU   *
SORTSTRT L     R7,TADDR            -> START OF TABLE
         NI    SW,X'EF'            TURN OFF SORT BIT
SORTLP   CLI   ENTB,X'00'          NULL ENTRY
         BE    SORTEND             END OF TABLE
         CLC   MUSE,MUSEB          COMPARE ENTRIES
         BNL   SORTBXLE            LESS OR EQ - SO OK
         MVC   ENTSAVE(TLEN),MNAME  SAVE THIS ENTRY
         MVC   MNAME(TLEN),ENTB      AND REPLACE WITH NEXT
         MVC   ENTB(TLEN),ENTSAVE  SWITCH COMPLETE
         OI    SW,SORT             TURN SORT BIT ON
SORTBXLE BXLE  R7,R8,SORTLP        CONTINUE SORT
SORTEND  EQU   *
         TM    SW,SORT             SORT BIT ON?
         BZ    ENDSORT             NO  - ALL SORTED
         B     SORTSTRT            YES - ONE MORE TIME
ENDSORT  EQU   *
         EJECT
PRINT    EQU   *                   PREPARE TO PRINT IT
         TM    SW,X'01'            2ND PRINT
         BO    SECONDPT            YES
         OPEN  (SYSPRINT,OUTPUT)
         ED    SDAT,STRTDATE+1
         ED    STIM,STRTTIME
         ED    SPDAT,STOPDATE+1
         ED    SPTIM,STOPTIME
         MVC   SAMPS,PLMT
         MVC   INT,SECONDS
SECONDPT L     R7,TADDR            -> START OF TABLE
PRINTIT  CLI   MNAME,X'00'         NULL ENTRY
         BE    EXIT
         TM    SW,X'01'            1ST PASS ?
         BO    MVNAME              NO
         CLC   MUSE,=H'0000'       NULL USE ?
         BE    BXLEP               YES - IGNORE THIS ENTRY
MVNAME   MVC   NAME,MNAME
         MVC   OFLAG,FLAG          MOVE LOCATION FLAG
         MVC   LOWCNT-1(5),=X'2020202021'
         LH    R1,MLOW
         CVD   R1,DWK
         ED    LOWCNT-2(6),DWK+5
         MVC   HIGHCNT-1(5),=X'2020202021'
         LH    R1,MHIGH
         CVD   R1,DWK
         ED    HIGHCNT-2(6),DWK+5
         L     R2,MTOT             TOTAL USE COUNTS
         SRDA  R2,32               SHIFT FOR DIVIDE
         L     R1,TOTAL            TOTAL SAMPLES
         DR    R2,R1
         MVC   AVGCNT-1(5),=X'2020202021'
         CVD   R3,DWK
         ED    AVGCNT-2(6),DWK+5
         UNPK  ADDR(7),MADDR+1(4)  EPA ADDESS
         TR    ADDR(6),TRTBL-C'0'
         MVI   ADDR+6,C' '         CLEAR END OF ADDR - FROM UNPK
         UNPK  LENGTH(7),MLEN(4)   MODULE LENGTH
         TR    LENGTH(6),TRTBL-C'0'
         TM    MATTR1,CDMIN        MINOR CDE ?
         BZ    NMIN                NO
         MVC   LENGTH+6(2),=C'-M'  INDICATE MINOR CDE
NMIN     EQU   *
         SR    R1,R1
         IC    R1,MATTR1
         SLL   R1,4
         ST    R1,FWK
         OI    FWK+3,X'0F'         INSURE NUMERIC
         UNPK  DWK(4),FWK+2(2)
         TR    DWK(4),TRTBL-C'0'
         MVC   ATTR1(2),DWK+2
         SR    R1,R1
         IC    R1,MATTR2
         SLL   R1,4
         ST    R1,FWK
         OI    FWK+3,X'0F'         INSURE NUMERIC
         UNPK  DWK(4),FWK+2(2)
         TR    DWK(4),TRTBL-C'0'
         MVC   ATTR2(2),DWK+2
         LH    R2,MUSE             LOAD SAMPLE USE COUNT
         MH    R2,=H'10000'        MULTIPLY FOR PRECEISION
         SRDA  R2,32               SHIFT FOR DIVISION
         L     R4,TOTAL            LOAD TOTAL SAMPLES
         DR    R2,R4               AND DIVIDE TO GET IN USE %
         CVD   R3,DWK              CONVERT TO DECIMAL
         MVC   USEPER(6),=X'2020214B2020'
         ED    USEPER-1(7),DWK+5   AND EDIT IT
*   NOW PUT IT
PUTIT    EQU   *
         CP    LINECNT,LPERPG
         BNH   PUTLINE
         ZAP   LINECNT,=P'06'
         PUT   SYSPRINT,TITLEN
         PUT   SYSPRINT,TITLE2
         PUT   SYSPRINT,TITLE3
         PUT   SYSPRINT,TITLES
         PUT   SYSPRINT,TITLE4
PUTLINE  PUT   SYSPRINT,LINE
         MVC   LENGTH+6(2),=C'  '  CLEAR MINOR CDE FLAG
         AP    LINECNT,=P'01'
         TM    SW,X'01'            1ST PASS
         BZ    BXLEP               -YES
         CLI   FLAGB,X'00'         END?
         BE    EXIT                YES
         CLC   FLAG,FLAGB
         BE    BXLEP
         ZAP   LINECNT,=P'06'
         PUT   SYSPRINT,TITLEN
         PUT   SYSPRINT,TITLE2
         PUT   SYSPRINT,TITLE3
         PUT   SYSPRINT,TITLES
         PUT   SYSPRINT,TITLE4
BXLEP    BXLE  R7,R8,PRINTIT
EXIT     TM    SW,X'01'            1ST PRINT ?
         BO    CLOSE               NO
         ZAP   LINECNT,=P'99'
         OI    SW,X'01'            TURN ON FOR 2ND PASS
         EJECT
#ORTSTRT L     R7,TADDR            -> START OF TABLE
         NI    SW,X'EF'            TURN OFF SORT BIT
#ORTLP   CLI   ENTB,X'00'          NULL ENTRY
         BE    #ORTEND             END OF TABLE
         CLC   FLAG,FLAGB          COMPARE ENTRIES
         BNH   #ORTBXLE            LESS OR EQ - SO OK
         MVC   ENTSAVE(TLEN),MNAME  SAVE THIS ENTRY
         MVC   MNAME(TLEN),ENTB      AND REPLACE WITH NEXT
         MVC   ENTB(TLEN),ENTSAVE  SWITCH COMPLETE
         OI    SW,SORT             TURN SORT BIT ON
#ORTBXLE BXLE  R7,R8,#ORTLP        CONTINUE SORT
#ORTEND  EQU   *
         TM    SW,SORT             SORT BIT ON?
         BZ    #NDSORT             NO  - ALL SORTED
         B     #ORTSTRT            YES - ONE MORE TIME
#NDSORT  EQU   *
         MVC   TITLEN,TITLEL
         B     PRINT               GO DO SECOND PRINT
CLOSE    CLOSE (SYSPRINT)
         TERME
         EJECT
         LTORG
         EJECT
STRTDATE DC    F'0'
STRTTIME DC    F'0'
STOPDATE DC    F'0'
STOPTIME DC    F'0'
SW       DC    X'00'               SORT SWITCH
SORT     EQU   16
         SPACE
PARM     EQU   *
SECONDS  DC    CL2'01'             TIME INTERVAL IN SECONDS
COMMA    DC    C','
PLMT     DC    CL4'0002'           SAMPLE LIMIT
         DC    CL5' '
         SPACE
TADDR    DC    F'0'
TABENT   DC    AL4(TLEN)
TEND     DC    F'0'
TABLEN   DC    AL4(ENTRIES)
TOTAL    DC    F'0'                TOTAL SAMPLES
DWK      DC    D'0'
FWK      EQU   DWK
WAITTIME DC    C'00000500'   HHMMSSTH
LIMIT    DC    F'10'               SAMPLE LIMIT
         SPACE
TRTBL    DC    C'0123456789ABCDEF'
LINE     DC    CL3' '
OFLAG    DC    C' '                LOCATION FLAG
         DC    CL2' '
NAME     DC    CL8' '      MODULE NAME
         DC    CL4' '
ADDR     DC    CL6' '      MODULE ADDRESS
         DC    CL4' '
LENGTH   DC    CL6' '      MODULE LENGTH
         DC    CL4' '
LOWCNT   DC    CL6' '      LOW USE COUNT
         DC    CL4' '
HIGHCNT  DC    CL6' '      HIGH USE COUNT
         DC    CL4' '
AVGCNT   DC    CL6' '      AVERAGE USE COUNT
         DC    CL4' '
ATTR1    DC    CL2' '              CDATTR
         DC    CL2' '
ATTR2    DC    CL2' '              CDATTR2
         DC    CL4' '
USEPER   DC    CL6' '              IN USE PERCENTAGE
         DC    C'%'
         DC    CL4' '
TL       EQU   *-LINE              LENGTH OF TPUT OR LRECL
         SPACE
ENTSAVE  DC    CL50' '             SAVE ENTRY - LARGE ENOUGH FOR GROWTH
         EJECT
TITLEN   DC    CL90'1    LINK PACK AREA MONITOR    USAGE ORDER '
TITLEL   DC    CL90'1    LINK PACK AREA MONITOR    NAME-LOCATION '
TITLE2   DC    C'     '
         DC    C'START DATA-TIME  '
SDAT     DC    X'21204B202020'
         DC    C'-'
STIM     DC    X'20217A20207A2020'
         DC    CL3' '
         DC    C'STOP DATE-TIME  '
SPDAT    DC    X'21204B202020'
         DC    C'-'
SPTIM    DC    X'20217A20207A2020'
         DC    CL3' '
         DC    CL30' '
TITLE3   DC    CL5'  '
         DC    C'SAMPLES = '
SAMPS    DC    CL4' '
         DC    C'  INTERVAL = '
INT      DC    CL2' '
         DC    CL4' '
         DC    C'SMF CPUID = '
SMFID    DC    CL4' '
         DC    CL40' '
TITLE4   DC    C' '
         DC    CL5' ',C'MODULE  '
         DC    CL4' ',C'EPA   '
         DC    CL4' ',C'LENGTH'
         DC    CL6' ',C'MIN'
         DC    CL7' ',C'MAX'
         DC    CL7' ',C'AVG'
         DC    CL4' ',C'AT1'
         DC    C' AT2'
         DC    CL4' ',C'% USED'
         DC    CL10' '
TITLES   DC    CL90'0 '  SKIP LINE
LINECNT  DC    PL2'99'
LPERPG   DC    PL2'42'             DEFAULT LINES PER PAGE
         PRINT NOGEN
SYSPRINT DCB   DSORG=PS,MACRF=PM,DDNAME=SYSPRINT,LRECL=TL,            **
               RECFM=FBA,BLKSIZE=TL
         PRINT GEN
         EJECT
         IHACDE
         EJECT
TABLE    DSECT
ENTA     DS    0F
MNAME    DS    CL8    MODULE NAME
MADDR    DS    CL4    MODULE ADDRESS
MLEN     DS    CL4    MODULE LENGTH IF MAJOR CDE
MLOW     DS    CL2    LOW USE COUNT
MHIGH    DS    CL2    HIGH USE COUNT
MTOT     DS    CL4        TOTAL USE COUNT
MATTR1   DS    CL1      CDATTR
MATTR2   DS    CL1         CDATTR2
MUSE     DS    CL2              SAMPLE IN USE COUNT (INCR IF >1)
FLAG     DS    CL1                 FLAG F-M-P
TLEN     EQU   *-MNAME             LENGTH OF DSECT - TABLE ENTRY
         SPACE 2
MNAMEB   DS    CL8    MODULE NAME
ENTB     EQU   MNAMEB    SECONDARY ENTRY
MADDRB   DS    CL4    MODULE ADDRESS
MLENB    DS    CL4    MODULE LENGTH IF MAJOR CDE
MLOWB    DS    CL2    LOW USE COUNT
MHIGHB   DS    CL2    HIGH USE COUNT
MTOTB    DS    CL4        TOTAL USE COUNT
MATTR1B  DS    CL1      CDATTR
MATTR2B  DS    CL1         CDATTR2
MUSEB    DS    CL2              SAMPLE IN USE COUNT (INCR IF >1)
FLAGB    DS    CL1                 FLAG F-M-P
DSLEN    EQU   *-ENTA
ENTRIES  EQU   TLEN*1000           LENGTH OF TABLE   *** 1000 ENTRIES
         END
