LBYTX    TITLE 'FUNCTION WHICH EXTRACTS BITS WITHIN WORDS'
*
*      THIS PROGRAM EXTRACTS BITS FROM A FIELD.THE CALLER SPECIFIES
* AN OFFSET IN BITS FROM THE BEGINNING OF THE FIELD AND THE NUMBER
* OF BITS TO BE EXTRACTED. THE OFFSET MUST BE LESS THAN 32 AND THE
* SUM OF THE OFFSET AND THE LENGTH MUST BE LESS THAN 32 OR 12 IS
* RETURNED IN REGISTER 15. IF THE EXTRACTION IS  SUCCESSFUL, 0 IS
* RETURNED IN REGISTER 15. THE CALLING SEQUENCE FOR "LBYTX" IS AS
* FOLLOWS:
*           1. THE OFFSET IN BITS FROM THE BEGINNING OF THE FIELD
*                  (4-BYTE BINARY)
*           2. THE LENGTH OF THE STRING TO BE MOVED (4-BYTE BINARY)
*           3. THE FIELD FROM WHICH TO BEGIN THE EXTRACTION
*
*     THE "LBYTX" SUBROUTINE IS REENTRANT AND REUSEABLE.
*
LBYTX    ENTER PARMREG=2,          SAVE REGISTERS AND INITIALIZE       X
               GETMAIN=(WORKSIZE,0)
         REGISTER                  REGISTER EQUATES
         USING WORKAREA,R13        ADDRESS WORK AREA DSECT
         LM    R4,R6,0(R2)         LOAD PARAMETER POINTERS
         L     R4,0(,R4)           LOAD OFFSET
         L     R5,0(,R5)           LOAD LENGTH
         LR    R7,R5               SAVE LENGTH FOR COMPUTATION
         C     R4,=F'32'           IF OFFSET GREATER THAN 32
         BH    ERROR                  THEN FLAG AS ERROR
         LTR   R4,R4               IF OFFSET NEGATIVE
         BM    ERROR                  THEN FLAG AS ERROR
         C     R5,=F'32'           IF LENGTH GREATER THAN 32
         BH    ERROR                  THEN FLAG AS ERROR
         LTR   R5,R5               IF LENGTH NEGATIVE
         BM    ERROR                  THEN FLAG AS ERROR
         AR    R7,R4               COMPUTE OFFSET + LENGTH
         C     R7,=F'32'           IF LENGTH + OFFSET GREATER THAN 32
         BH    ERROR                  THEN FLAG AS ERROR
         LTR   R7,R7               IF LENGTH + OFFSET NOT POSITIVE
         BNP   ERROR                  THEN FLAG AS ERROR
         MVC   CALLIST,CCALLST     MOVE CALL PARAMETER LIST TO WORK
         LOAD  EP=SHIFT            LOAD ROUTINE WHICH SHIFTS BITS
         ST    R0,SHIFTEP          SAVE "SHIFT" ENTRY POINT ADDRESS
         L     R15,SHIFTEP         LOAD "SHIFT" ENTRY POINT ADDRESS
         ST    R4,WORK2            STORE RESULT IN WORK AREA
         CALL  (15),               SHIFT TO LEFT USING "SHIFT"         X
               ((R6),WORK2),MF=(E,CALLIST)
         LTR   R15,R15             IF "SHIFT" FAILED
         BNZ   ERROR                  THEN FLAG FOR ERROR
         LNR   R4,R4               MULTIPLY OFFSET BY -1
         ST    R0,WORK1            SAVE RESULT OF LAST SHIFT
         ST    R4,WORK2            SAVE LENGTH OF NEXT SHIFT
         L     R15,SHIFTEP         LOAD "SHIFT" ENTRY POINT ADDRESS
         CALL  (15),               SHIFT TO RIGHT USING "SHIFT"        X
               (WORK1,WORK2),MF=(E,CALLIST)
         LTR   R15,R15             IF "SHIFT" FAILED
         BNZ   ERROR                  THEN FLAG FOR ERROR
         LA    R8,32               LOAD NUMBER OF BITS IN A WORD
         SR    R8,R7               COMPUTE NUMBER OF EXTRA BITS
         LNR   R8,R8               MULTIPLY BY -1
         ST    R0,WORK1            SAVE RESULT OF LAST SHIFT
         ST    R8,WORK2            SAVE LENGTH OF NEXT SHIFT
         L     R15,SHIFTEP         LOAD "SHIFT" ENTRY POINT ADDRESS
         CALL  (15),               SHIFT TO RIGHT USING "SHIFT"        X
               (WORK1,WORK2),MF=(E,CALLIST)
         LTR   R15,R15             IF "SHIFT" FAILED
         BNZ   ERROR                  THEN FLAG FOR ERROR
         L     R6,4(,R13)          POINT TO REGISTER SAVE AREA
         ST    R0,20(,R6)          STORE RESULT IN REGISTER 0 SAVE AREA
         B     EXIT                  AND LEAVE
ERROR    DS    0H
         LA    R15,12              SET RETURN CODE FOR ERROR CONDITION
EXIT     DS    0H
         LEAVE RETCODE=(15),       RETURN TO CALLER                    X
               GETMAIN=(WORKSIZE,0)
         SPACE
CCALLST  CALL  ,(0,0),MF=L         CONSTANT PARAMETER LIST FOR CALL
CCALLEN  EQU   *-CCALLST           COMPUTED LENGTH OF PARAMETER LIST
         EJECT
WORKAREA DSECT ,                   MAP OF GETMAINED WORK AREA
         DS    18A                 REGISTER SAVE AREA
CALLIST  DS    CL(CCALLEN)         PARAMETER LIST FOR CALL
WORK1    DS    F                   FIELD TO KEEP INTERMEDIATE RESULTS
WORK2    DS    F                   FIELD TO KEEP INTERMEDIATE RESULTS
SHIFTEP  DS    F                   FIELD TO KEEP "SHIFT" ENTRY POINT
WORKSIZE EQU   *-WORKAREA          COMPUTED LENGTH OF GETMAINED AREA
         END
