PAKBIT   TITLE 'SUBROUTINE WHICH PACKS BYTES INTO BITS'
*
*      THIS PROGRAM PACKS A NUMBER OF 8-BYTE CHARACTER STRINGS
* CONSISTING OF ZEROES AND ONES INTO A CORRESPONDING NUMBER OF BYTES.
* EACH BIT WITHIN THE BYTES CORRESPONDS TO A BYTE IN THE SOURCE STRING
* AND IS 1 OR 0 DEPENDING ON WHETHER THE CORRESPONDING BYTE IS ONE OR
* ZERO. IF THE PROGRAM DETECTS A BYTE IN THE SOURCE STRING WHICH IS NOT
* ZERO OR ONE OR IF THE NUMBER OF 8-BYTE STRINGS TO BE PACKED IS
* NOT POSITIVE, 12 IS RETURNED IN REGISTER 15; OTHERWISE, 0 IS
* IN REGISTER 15. THE CALLING SEQUENCE FOR PAKBIT IS AS FOLLOWS:
*           1. THE SOURCE STRING (GROUP OF 8-BYTE CHARACTER STRINGS TO
*              BE PACKED INTO BYTES).
*           2. THE TARGET STRING.
*           3. NUMBER OF 8-BYTE CHARACTER STRINGS IN THE SOURCE STRING
*              (FULL WORD BINARY).
*
*     THE "PAKBIT" SUBROUTINE IS REENTRANT AND REUSEABLE.
*
PAKBIT   ENTER PARMREG=2,          INITIALIZE                          X
               GETMAIN=(72,0)
         REGISTER                  REGISTER EQUATES
         LM    R4,R6,0(R2)         LOAD PAARAMETER POINTERS
         L     R6,0(,R6)           LOAD STRING COUNT VALUE
         LTR   R6,R6               IF THE STRING COUNT IS NOT POSITIVE
         BNP   ERROR                  THEN FLAG AS AN ERROR
LOOP1    DS    0H
         LA    R7,8
         LA    R9,1                INITIALIZE MASK
         MVI   0(R5),X'00'         INITIALIZE TARGET STRING
LOOP2    DS    0H
         LR    R8,R4               LOAD ADDRESS OF SOURCE STRING
         BCTR  R8,0                DECREMENT BY ONE
         AR    R8,R7               POINT TO THE BYTE IN SOURCE STRING
         CLI   0(R8),C'0'          IF THE SOURCE BYTE IS ZERO
         BE    TESTOK                 THEN PREPARE FOR NEXT BYTE
         CLI   0(R8),C'1'          IF THE SOURCE BYTE IS NOT ONE
         BNE   ERROR                  THEN FLAG FOR ERROR
         EX    R9,OI                  ELSE TURN ON A TARGET BIT
TESTOK   DS    0H
         SLL   R9,1                MODIFY THE OI MASK
         BCT   R7,LOOP2            FINISH UP THIS 8-BYTE STRING
         LA    R4,8(,R4)           POINT TO NEXT 8-BYTE STRING
         LA    R5,1(,R5)           POINT TO NEXT TARGET BYTE
         BCT   R6,LOOP1            GO DO THE NEXT STRING
         LA    R15,0               INDICATE SUCCESSFUL OPERATION
         B     EXIT                   AND EXIT
OI       DS    0H
         OI    0(R5),X'00'         INSTRUCTION USED ONLY BY EXECUTE
ERROR    DS    0H
         LA    R15,12              SET RETURN CODE TO INDICATE ERROR
EXIT     DS    0H
         LEAVE RETCODE=(15),       RETURN TO CALLER                    X
               GETMAIN=(72,0)
         END
