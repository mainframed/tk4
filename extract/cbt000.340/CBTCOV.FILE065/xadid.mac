*/********************************************************************/
*/*                                                                  */
*/*                                                                  */
*/*     MODIFIED TO DYNAMICALLY USE ICKDSF FOR RE-NAMING AND         */
*/*     VERIFYING THE THE VOLUME LABEL. CONTROL IS PASSED BACK TO    */
*/*     OSDITTO MAINLINE MODULE . IF ICKDSF PASSES BACK A            */
*/*     RETURN CODE OTHER THAN ZERO A MESSAGE IS PRINTED ON THE      */
*/*     CONSOLE. --- THIS CHANGE WAS MADE AS IT WAS EASIER TO        */
*/*     IMPLEMENT FOR MVS/XA THAN TO RE-WRITE THE                    */
*/*     ORIGINAL CODE USING EXCP AND BUILDING DEBS.                  */
*/*     THIS VERSION STILL NEEDS THE VOLUME TO BE OFFLINE BEFORE     */
*/*     ALLOWING ITS VOLUME SERIAL NUMBER TO BE CHANGED. THE UCB     */
*/*     LOOKUP ROUTINE IS MUST BE CALLED IN MVS/XA. YOU CANNOT USE   */
*/*     THE OLD METHOD OF GETTING THE UCB TABLE FROM THE CVT .       */
*/*     THIS NEW METHOD OF GETTING THE UCB WILL WORK IN MVS/SP.      */
*/*                                                                  */
*/*     NOTE : YOU MUST DO AN ATTACH TO ICKDSF. IF YOU DO A LINK     */
*/*     OR A LOAD ICKDSF ABENDS WITH AN S0C4. IF YOU CAN FIND OUT    */
*/*     WHY ATTACH WORKS BUT LINK OR LOAD DOES NOT I WOULD BE        */
*/*     GRATEFUL IF YOU COULD TELL ME. ALL 3 OSDITTO MODULES HAVE    */
*/*     AN AUTHORIZATION CODE OF 1 SO I KNOW THAT                    */
*/*     THIS IS NOT THE PROBLEM.                                     */
*/*                                                                  */
*/*     OSDITTO IS RETURNED TO BY USING SVC 3 EXIT----KNICKERS       */
*/*     SEEM TO GET OCCASIONALLY TWISTED IN USING XA WTOS AND WTORS  */
*/*                                                                  */
*/*     YOU MUST HAVE DSF OR AN EQUIVALENT PROGRAM IN YOUR SYSTEM    */
*/*     AND RUN THE THING BELOW THE 16 MEG LINE (OPEN SAM DCB HAS    */
*/*     TO OPERATE UNDER THE 16 MEG LINE)                            */
*/*                                                                  */
*/*                                                                  */
*/*     J.F.M HAWTHORNE  TTI SANTA MONICA CA  SEPTEMBER 1984         */
*/*                                                                  */
*/*                                                                  */
*/********************************************************************/
         EJECT
DITTODID START
DITTODID AMODE 24                                                   XA
DITTODID RMODE 24                                                   XA
         PRINT NOGEN
         SAVE  (14,12)
         LR    R2,RD
         BALR  RB,R0
         USING *,RB
         B     AROUND              BR BY COPYRIGHT
COPYRT   DC    C'5798-ARD COPYRIGHT IBM CORPORATION 1973'
         DC    C'06-30-74 VERS.2 MOD.0' FINAL VERS. ALL MAINT INCLUDED
DOGDCB   DCB   DDNAME=SYSIN,LRECL=80,BLKSIZE=80,RECFM=F,               X
               MACRF=(PM),DSORG=PS
*/********************************************************************/
*/*                                                                  */
*/*     ABOVE DCB NEEDED AS WE HAVE TO CREATE THE SYSIN DATA SET     */
*/*     USED BY THE ICKDSF UTILITY. BY OPENING IT AS AN OUTPUT       */
*/*     DATASET AND THEN CLOSING IT WITH A DISP OF PASS ICKDSF CAN   */
*/*     READ IT AS INPUT.                                            */
*/*                                                                  */
*/********************************************************************/
AROUND   EQU   *
         LA    R3,SAVEAREA
         ST    R3,8(R2)            PTR TO MY SA
         ST    R2,4(R3)            PTR TO PREVIOUS SA
FRSTWTOR EQU   *
         MVC   CUUECB,=F'0'
         WTOR  'REPLY: CUUXXXXXX - ADDR AND PRESENT VOLUME NR, OR END -X
                TO END DID',NAMEUCB,9,CUUECB,DESC=6,ROUTCDE=2
         WAIT ECB=CUUECB
         OC    NAMEUCB(9),=C'         '    FORCE CAPS ON REPLY
         CLC   NAMEUCB(3),=C'END'
         BE    RETURN
         OPEN  (DOGDCB,(OUTPUT))
         MVC   CTLCARD+15(3),NAMEUCB  MOVE IN UNIT ADDRESS
         MVC   CTLCARD+24(6),NAMEUCB+3 MOVE IN OLD VOLSER NR.
         MVC   NEWECB,=F'0'
         MVC   VOLSER(6),=C'      '
         WTOR  'REPLY: YYYYYY - TO SPECIFY NEW VOL SERIAL NR OR END  - X
                TO END DID',VOLSER,6,NEWECB,DESC=6,ROUTCDE=2
         WAIT ECB=NEWECB
         OC    VOLSER(6),=C'         '    FORCE CAPS ON REPLY
         CLC   VOLSER(3),=C'END'
         BE    RETURN
         MVC   CTLCARD+38(6),VOLSER   GET NEW VOL
         LA    1,DOGDCB
         LA    0,CTLCARD
         PUT   (1),(0)
         CLOSE (DOGDCB,)
UCBFIND  EQU   *
         B     SETUP
*        SCAN UCB TABLE
*/***************************************************************/
*/*                                                             */
*/* NOTE MVS/XA HAS UCB ENTRIES 3 BYTES LONG SO THE UCB LOOKUP  */
*/* METHOD HAS BEEN CHANGED TO USE IOSVSUCB.                    */
*/*                                                             */
*/* THIS METHOD WILL ALSO WORK ON MVS SP 1.3.3                  */
*/*                                                             */
*/***************************************************************/
         SPACE 1
         DS    0H
SETUP    L     R3,CVTPTR                GET CVT ADDRESS         XA
         USING CVTMAP,R3                                        XA
         XC    WORKAREA,WORKAREA        CLEAR WORK AREA         XA
         LA    R1,WORKAREA              WORK AREA ADDRESS       XA
         ST    R1,PARMWA                STORE ITS ADDRESS       XA
         LA    R1,DEVCLASS              ADDRESS OF DEVICE CLASS XA
         ST    R1,PARMDEVT              STORE IT                XA
         MVI   DEVCLASS,UCB3DACC        INDICATE DEV CLASS DA   XA
         LA    R1,ADDRUCB               UCB ADDR FROM SYSTEM    XA
         ST    R1,PARMUCB               STORE IT IN PARMLIST    XA
         USING UCBOB,R8                                         XA
AGAIN    EQU   *                                                XA
         LA    R1,PARMLIST              GET PARAMETER LIST      XA
         L     RF,CVTUCBSC              POINT TO UCB LOOKUP     XA
         BALR  RE,RF                    CALL ROUTINE            XA
         SPACE 1
LOOP     CL    RF,=F'0'                 HAVE WE DONE ALL UCBS   XA
         BNE   ERR999                   INDICATE NO GOOD        XA
         SPACE 1
GOTUCB   L     R8,ADDRUCB               GET ITS ADDRESS         XA
         CLC   NAMEUCB(3),UCBNAME       HAVE WE GOT UCB         XA
         BE    LABELIT                  YES LETS DO IT          XA
         B     AGAIN                    ROUND AGAIN             XA
ERR999   MVC   WTO1+15(6),NAMEUCB+3     WE DONT HAVE THIS PACK  XA
WTO1     WTO   'VOLUME XXXXXX NOT MOUNTED OR INVALID UCB ADDRESS SPECIFX
               IED'
         B     RETURN
         EJECT
***********************************************************************
*********  LABEL ROUTINE: CALL ICKDSF TO DO THE LABELLING   ***********
*********  THEN RETURN TO OSDITTO                           ***********
***********************************************************************
         SPACE 1
LABELIT  EQU   *
         TM    SRTESTAT,SRTEONLI   ARE WE ONLINE                XA
         BNO   NOTONL              NO ALL RIGHT                 XA
         MVC   ONLINER1+27(6),NAMEUCB+3  ISSUE MESSAGE          XA
         B     ONLINERR                                         XA
NOTONL   ST    13,SAVE13           SAVE OUR REG 13              XA
         LA    13,DOGSAVE          GIVE ICKDSF ITS SAVE AREA    XA
         ATTACH EPLOC=PROG,ECB=DOGECB      GET ICKDSF UTILITY.  XA
         ST    1,TCBADDR           SAVE TCB ADDRESS             XA
         WAIT  ECB=DOGECB          WAIT FOR FUNCTION            XA
         DETACH TCBADDR            KILL IT AFTER WE ARE DONE    XA
         L     13,SAVE13           WANT REG 13 AGAIN            XA
         XC    DOGECB,DOGECB       RESET ECB FOR NEXT USE       XA
         MVC   WTO2+16(6),CTLCARD+24   MOVE OLD SER              XA
         MVC   WTO2+32(6),CTLCARD+38   MOVE NEW SER              XA
WTO2     WTO   'OLD SER=XXXXXX, NEW SER=XXXXXX - DID COMPLETE: ISSUE MOX
               UNT, VARY ONLINE',DESC=6,ROUTCDE=2
         B     FRSTWTOR                                          XA
         EJECT
***********************************************************************
**********         ERROR MESSAGES AND RETURN ROUTINE.       ***********
***********************************************************************
         SPACE 1
ONLINERR EQU   *
ONLINER1 WTO   'PLEASE VARY VOLUME XXXXXX OFFLINE AND TRY AGAIN'
RETURN   EQU   *
         LA    RD,SAVEAREA         PRIME RD BEFORE RETURN
         L     RD,4(RD)
*        RETURN (14,12),RC=0
         SVC   3                   USE EXIT SVC -- TWISTED KNICKERS  XA
         EJECT
         SPACE 1
DOGSAVE  DS    9D
SAVE13   DS    F
CTLCARD  DC    CL80' REFORMAT UNIT(XXX),VFY(XXXXXX),VOLID(YYYYYY) '
         DS    0D                  ALLIGN
CUUECB   DC    F'0'
NEWECB   DC    F'0'
DOGECB   DC    F'0'
TCBADDR  DC    F'0'
PROG     DC    CL8'ICKDSF  '
SAVEAREA DS    18F
NAMEUCB  DS    CL9' '              UCB FROM OPERTAOR
VOLSER   DC    CL6'DOGDOG'
         DS    0D                  ALLIGN
PARMLIST DS    3F                                                XA
         ORG   PARMLIST                                          XA
PARMWA   DS    F               ADDR OF 100 BYTE WORK AREA        XA
PARMDEVT DS    F               ADDR OF DEVICE TYPE BYTE          XA
PARMUCB  DS    F               ADDR OF UCB GOT FROM SYSTEM       XA
DEVCLASS DS    CL1             DEVICE CLASS BYTE                 XA
ADDRUCB  DS    F               UCB ADDRESS                       XA
         DS    0D                                                XA
WORKAREA DS    CL100           WORK AREA FOR IOSVSUCB            XA
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
RA       EQU   10
RB       EQU   11
RC       EQU   12
RD       EQU   13
RE       EQU   14
RF       EQU   15
         CVT   DSECT=YES,LIST=NO
         IEFUCBOB LIST=NO
         END   DITTODID
