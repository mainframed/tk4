JOBCRD   CSECT                         DEFINE CSECT
***********************************************************************
*
*    ROUTINE NAME ---------> JOBCRD
*
*    ENTRY POINTS ---------> -NONE-
*
*    EXTERNAL REFERENCES --> -NONE-
*
*    PARMS ----------------> JOBNAME  -  8 BYTE JOBNAME
*                            MSGCLASS -  1 BYTE MESSAGE CLASS
*                            PRIORITY -  2 BYTE INTEGER PRIORITY
*                            REGION   -  2 BYTE INTEGER REGION
*                                          (IN KBYTES)
*                            TIME     -  4 BYTE INTEGER TIME LIMIT
*                                          (IN HUNDREDTHS OF SECONDS)
*                            NAME     - 20 BYTE PROGRAMMER NAME
*                            ACCOUNT  -  N BYTE ACCOUNTING FIELD
*                            ACCTLEN  -  2 BYTE INTEGER ACNT FIELD LEN
*                            ROOM     -  N BYTE ROOM FIELD
*                            ROOMLEN  -  2 BYTE INTEGER ROOM FIELD LEN
*                            JOBCLASS -  1 BYTE JOB CLASS
*                            JES#     -  4 JES NUMBER
*                                        (THIS PARM IS OPTIONAL)
*
*    DATE LAST MODIFIED ---> 10/20/81
*
*    ROUTINE DESCRIPTION:
*         THIS ROUTINE RETURNS INFORMATION FROM THE JOB CARD OF
*    THE EXECUTING JOB.
*
*
***********************************************************************
*
*     REGISTER EQUATES AND USAGE
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8                       TCT, THEN JMR ADDR
R9       EQU   9                       ACT ADDR
R10      EQU   10                      JCT ADDR
R11      EQU   11                      WORKAREA BASE REG
R12      EQU   12                      BASE REG
R13      EQU   13                      SAVE AREA ADDR
R14      EQU   14                      RETURN ADDR
R15      EQU   15                      RETURN CODE
*
*     HOUSEKEEPING
*
         STM   R14,R12,12(R13)         SAVE REGISTERS
         LR    R12,R15                 SET REG 12 TO ENTRY ADDR
         USING JOBCRD,R12              ESTABLISH ADDRESSABILITY
         LR    R10,R1                  SAVE R1
         LR    R2,R13                  SAVE ADDR OF CALLING SAVE AREA
         GETMAIN RU,LV=WORKSIZE        GET SOME CORE
         LR    R13,R1                  SAVE ADDR OF CORE OBTAINED
         USING WORKAREA,R13            ESTABLISH ADDRESSABILITY
         ST    R2,SAVEAREA+4           STORE ADDR OF CALLING SAVE AREA
         ST    R13,8(R2)               STORE ADDR OF MY SAVE AREA
*
*     SAVE PARAMETER ADDRESSES
*
         MVC   PARMPTRS(PARMLEN),0(R10)    SAVE PARAMETER ADDRESSES
*
*     GET INFO FROM JOBCARD (JCT)
*
         USING PSA,R0                  ADDRESSABLILTY TO PSA
         L     R10,PSATOLD             GET MY TCB ADDR
         DROP  R0                      FORGET PSA
         USING TCB,R10                 ADDRESSABLILTY TO TCB
         L     R8,TCBTCT               LOAD ADDR OF TCT
         L     R10,TCBJSCB             LOAD ADDR OF JSCB
         DROP  R10                     FORGET TCB
         USING IEZJSCB,R10             ADDRESSABLILTY TO JSCB
         L     R10,JSCBJCT             LOAD ADDR OF JCT
         DROP  R10                     FORGET JSCB
         LA    R10,16(R10)             SKIP OVER 16 BYTE JCT PREFIX
         USING INJMJCT,R10             ADDRESSABILITY TO JCT
         L     R2,JOBNPTR              LOAD ADDR OF JOBNAME    PARM
         MVC   0(8,R2),JCTJNAME        PASS IT BACK TO CALLING GUY
         L     R2,MSGCPTR              LOAD ADDR OF MSGCLASS   PARM
         MVC   0(1,R2),JCTJMGPO        PASS IT BACK TO CALLING GUY
         L     R2,PRTYPTR              LOAD ADDR OF PRIORITY   PARM
         IC    R3,JCTJPRTY             LOAD MSGLEVEL & PRIORITY
         N     R3,=X'0000000F'         TURN OFF ALL BUT LAST NIBBLE
         STH   R3,0(R2)                PASS IT BACK TO CALLING GUY
         L     R2,REGNPTR              LOAD ADDR OF REGION     PARM
         MVC   0(2,R2),92(R10)         PASS IT BACK TO CALLING GUY
         L     R2,TIMEPTR              LOAD ADDR OF TIME       PARM
         SLR   R3,R3                   ZERO R3
         ICM   R3,7,JCTJMRTL           LOAD TIME LIMIT
         ST    R3,0(R2)                PASS IT BACK TO CALLING GUY
*
*     GET INFO FROM ACT
*
         SLR   R9,R9                   ZERO R9
         ICM   R9,7,JCTACTAD           LOAD 3 BYTE ACT ADDRESS
         LA    R9,16(R9)               SKIP OVER 16 BYTE ACT PREFIX
         DROP  R10
         USING IEFAACTB,R9             ADDRESSABILITY TO ACT
         L     R2,NAMEPTR              LOAD ADDR OF NAME       PARM
         MVC   0(20,R2),ACTPRGNM       PASS IT BACK TO CALLING GUY
*
*     LOCATE AND RETURN FIRST ACCOUNTING FIELD
*
         CLI   ACTJNFLD,1              NUMBER OF ACCOUNTING FIELDS
         BL    NOACCT1                 BRANCH IF <1
         CLI   ACTJNFLD+1,1            CHECK LENGTH OF FIRST FIELD
         BL    NOACCT1                 BRANCH IF <1
         SLR   R4,R4                   ZERO R4
         IC    R4,ACTJNFLD+1           LOAD LENGTH OF FIELD
         L     R2,ACTLPTR              LOAD ADDR OF ACNT LEN   PARM
         STH   R4,0(R2)                PASS IT BACK TO CALLING GUY
         LR    R5,R4                   COPY LENGTH
         BCTR  R5,0                    DECREMENT LENGTH FOR EX
         L     R2,ACCTPTR              LOAD ADDR OF ACCOUNT    PARM
         EX    R5,MOVEACCT             PASS IT BACK TO CALLING GUY
         B     GETROOM                 GO GET ROOM
NOACCT1  EQU   *
         L     R2,ACTLPTR              LOAD ADDR OF ACNT LEN   PARM
         MVC   0(2,R2),=H'0'           PASS IT BACK TO CALLING GUY
*
*     LOCATE AND RETURN SECOND ACCOUNTING FIELD
*
GETROOM  EQU   *
         CLI   ACTJNFLD,2              NUMBER OF ACCOUNTING FIELDS
         BL    NOACCT2                 BRANCH IF <2
         LA    R6,ACTJNFLD+2(R4)       COMPUTE ADDR OF 2ND FIELD LEN
         CLI   0(R6),1                 CHECK LENGTH OF SECOND FIELD
         BL    NOACCT2                 BRANCH IF <1
         SLR   R7,R7                   ZERO R7
         IC    R7,0(R6)                LOAD LENGTH OF FIELD
         L     R2,ROMLPTR              LOAD ADDR OF ROOM LEN   PARM
         STH   R7,0(R2)                PASS IT BACK TO CALLING GUY
         BCTR  R7,0                    DECREMENT LENGTH FOR EX
         L     R2,ROOMPTR              LOAD ADDR OF ROOM       PARM
         EX    R7,MOVEROOM             MOVE IN 2ND FIELD
         B     ENDROOM
NOACCT2  EQU   *
         L     R2,ROMLPTR              LOAD ADDR OF ROOM LEN   PARM
         MVC   0(2,R2),=H'0'           PASS IT BACK TO CALLING GUY
ENDROOM  EQU   *
*
*     GET STUFF FROM JMR
*
         USING SMFTCT,R8               ADDRESSABILITY TO TCT
         L     R8,TCTJMR               LOAD ADDR OF JMR
         DROP  R8                      FORGET TCT
         USING JMR,R8                  ADDRESSABILITY TO JMR
         L     R2,CLASPTR              LOAD ADDR OF JOB CLASS  PARM
         MVC   0(1,R2),JMRCLASS        PASS IT BACK TO CALLING GUY
         LTR   R2,R2                   IS CLASS THE LAST PARM?
         BM    NOJES                   YES, DON'T RETURN JES NUMBER
         L     R2,JES#PTR              LOAD ADDR OF JES NUMBER PARM
         MVC   0(4,R2),JMRUSEID+4      PASS IT BACK TO CALLING GUY
NOJES    EQU   *
*
*     TERMINATE
*
         LR    R1,R13                  SAVE PTR TO GETMAINED SAVE AREA
         LR    R2,R15                  SAVE RETURN CODE
         L     R13,SAVEAREA+4          LOAD ADDR OF CALLING SAVE AREA
         FREEMAIN R,LV=WORKSIZE,A=(R1) FREE THE CORE WE GOT
         LR    R15,R2                  PUT RETURN CODE IN R15
         L     R14,12(R13)             RESTORE R14
         LM    R0,R12,20(R13)          RESTORE R0 THROUGH R12
         BR    R14                     RETURN
*
*     CONSTANTS
*
MOVEACCT MVC   0(0,R2),ACTJNFLD+2      MOVE IN FIRST ACCOUNTING FIELD
MOVEROOM MVC   0(0,R2),1(R6)           MOVE IN SECOND ACCOUNTING FIELD
*
*     DSECTS
*
WORKAREA DSECT
SAVEAREA DS    18F
PARMPTRS DS    0F
JOBNPTR  DS    F
MSGCPTR  DS    F
PRTYPTR  DS    F
REGNPTR  DS    F
TIMEPTR  DS    F
NAMEPTR  DS    F
ACCTPTR  DS    F
ACTLPTR  DS    F
ROOMPTR  DS    F
ROMLPTR  DS    F
CLASPTR  DS    F
JES#PTR  DS    F
PARMLEN  EQU   *-PARMPTRS
WORKSIZE EQU   *-WORKAREA
         PRINT NOGEN
         IHAPSA   ,                    MAP THE PSA
         IKJTCB   ,                    MAP THE TCB
         IEZJSCB  ,                    MAP THE JSCB
         IEFAJCTB ,                    MAP THE JCT (AND ACT)
         IEFJMR   ,                    MAP THE JMR
         IEFTCT   ,                    MAP THE TCT
         END   JOBCRD
