        TITLE 'PROGRAM TO DYNAMICALLY REFRESH LNKLST BY MODULE/LIBRARY'
***********************************************************************
***********************************************************************
*    CHANGE DATE: MVS/ESA ONLY -- TD APR91
*
*     ABSTRACT
*
*     LLAU ALLOWS FOR THE DYNAMIC UPDATE OF LNKLST BY MODULE(S) OR
*     BY LIBRARY.
*
*     WITH ESA, IBM HAS ADDED THE UPDATE FEATURE TO LLA.  FROM MODULE
*     CSVLLAXX (XX=ANY SUFFIX), WE CAN DYNAMICALLY REFRESH ONLY A
*     MODULE OR A LNKLST LOAD LIBRARY, WITHOUT IMPACTING THE ENTIRE
*     LNKLST.
*
*     BEFORE LLAU, THE PROCESS IS RATHER CUMBERSOME:
*
*     1. UPDATE CSVLLAXX MEMBER WITH LNKMEMBERS OR LIBRARIES
*        CONTROL STATEMENTS.
*
*     2. ISSUE F LLA,UPDATE=XX
*
*     ASSUMING THAT THE PERSON REFRESHING THE LNKLST LIBRARY HAS
*     UPDATE ABILITY TO SYS1.PARMLIB.
*
*     OR A FEW MEMBERS OF CSVLLAXX CAN BE CODED IN ADVANCE TO
*     SPECIFICALLY REFRESH ONLY THAT MODULE(S) OR THAT LIBRARY(S).
*
*     WITH LLAU, HERE IS ALL THAT YOU HAVE TO DO:
*
*     FROM TSO:
*
*       LLAU LIB=YOUR.LNKLST (REFRESH ONLY THIS LIBRARY)
*       LLAU MOD=ISFPARMS    (REFRESH ONLY THIS MEMBER)
*
*     (NOTE: USE OF TSO COMMAND IS POSSIBLE ONLY AFTER PROPER SETUP)
*
*     LLAU SUPPORTS THE FOLLOWING RELEASES:
*
*     MVS/ESA ONLY WITH LLA SELECTIVE UPDATE ABILITY.
*
*     INQUIRIES:
*
*     SEND INQUIRIES TO:
*
*              TOM D. DIEN, INFORMATION SYSTEMS 3RD FLOOR
*              LOS ANGELES TIMES
*              TIMES MIRROR SQUARE
*              LOS ANGELES, CA 90053
*
*     OR PHONE: (213) 237-5840
*
*     INSTALLATION:
*
*     LLAU IS A SINGLE MODULE AND CAN BE LINK EDITED INTO ANY LOAD
*     LIBRARY.  SUGGEST THAT LLAU BE LNKLSTED SO EVERYONE CAN
*     ACCESS THIS MODULE.  AUTHORIZATION IS REQUIRED FOR THE SVC34.
*
*     PROGRAM LOGIC:
*
*     1. PARSE PARM, VALIDATE THAT PARMS ARE CORRECT.
*     2. DYNAMICALLY ALLOCATE SYS1.PARMLIB(CSVLLAXX)
*     3. IF CSVLLAXX DOES NOT EXIST IN SYS1.PARMLIB, IT WILL BE CREATED
*     4. RE-OPEN CSVLLAXX AS UPDATE, VERIFY THAT THE FIRST THREE BYTES
*        ARE EITHER '/* ' OR 'LNK' OR 'LIB'.  IF A MATCH IS FOUND, THEN
*        LLAU WILL UPDATE CSVLLAXX MEMBER WITH PARMS TO REFRESH LLA.
*     5. SVC 34 IS ISSUED FOR: F LLA,UPDATE=XX
*
*     ATTRIBUTES: AUTHORIZED
*
*     CREATE A STARTED TASK NAME LLAU:
*     //LLAU PROC
*     //X1 EXEC PGM=LLAU
*     //STEPLIB ... IF NEEDED
*
*     FROM SDSF: /S LLAU,PARM='MOD=AB'
*                /S LLAU,PARM=LIB='LOAD.LIB1'
*
*     MULTIPLE MODULES OR LIBRARIES CAN BE INCLUDED SEPARATED BY COMMA.
*
*
*    EXLST DID NOT LIKE CLOSE/REOPEN FOR OUTPUT, THEN REOPEN FOR UPDATE
*    AFTER THE ABEND IS TRAP.  BLDL IS A CIRCUMVENTION.
*
*
**********************************************************************
*
***********************************************************************
         MACRO
&N       BITEQU
&CNT     SETA  128
&B       SETA  0
.NEXT    ANOP
BIT&B    EQU  &CNT
         AIF  (&B EQ 7).DONE
&CNT     SETA (&CNT/2)
&B       SETA (&B+1)
         AGO  .NEXT
.DONE    MEND
***********************************************************************
         MACRO
&N       REGEQU
&CNT     SETA  0
.NEXT    ANOP
R&CNT    EQU  &CNT
         AIF  (&CNT EQ 15).DONE
&CNT     SETA (&CNT+1)
         AGO  .NEXT
.DONE    MEND
***********************************************************************
*
LLAU CSECT
         REGEQU
         BITEQU
         STM   14,12,12(13)
         LR    12,15
         USING LLAU,12
         L     R2,0(R1)
         LA    R1,SAVE
         ST    13,4(1)
         ST    1,8(13)
         LR    13,1
         XR    R3,R3
         LH    R3,0(R2)
         CH    R3,=H'5'
         BL    LENERR
         CH    R3,=H'65'
         BH    LENERR
         CLC   =C'MOD=',2(R2)
         BE    PARMMEM
         CLC   =C'LIB=',2(R2)
         BE    PARMLIB
         B     PARMERR
MEMBER   DC    C'LNKMEMBERS('
LIBRARY  DC    C'LIBRARIES('
PARMMEM  DS    0H
         MVC   OUTAREA(L'MEMBER),MEMBER
         LA    R1,OUTAREA+L'MEMBER
         B     PARMOK
PARMLIB  DS    0H
         MVC   OUTAREA(L'LIBRARY),LIBRARY
         LA    R1,OUTAREA+L'LIBRARY
PARMOK   DS    0H
         SH    R3,=H'5'
         MVC   0(0,R1),6(R2)
         EX    R3,*-6
         AR    R1,R3
         MVI   1(R1),C')'
*
         LA    R1,ALLOCPT
         DYNALLOC
         LTR   R15,R15
         BZ    PROCESS
         WTO  'LLAU: OPEN FAILED'
         ABEND 100
PROCESS  DS    0H
         OI    ALLOCTU+8,X'80'
         MVC   DDNAME,=CL8'XIN2'
         LA    R1,ALLOCPT
         DYNALLOC
         OPEN  (XIN2,INPUT)
         MVC   MEMLIST+4(8),ALMEMBER
         BLDL  XIN2,MEMLIST
         LR    R2,R15
         CLOSE (XIN2)
         LTR   R2,R2
         BZ    MEMEXIST
         OPEN  (XOUT,OUTPUT)
         PUT   XOUT
         MVC   0(80,R1),=CL80'/*        */'
         CLOSE (XOUT)
         WTO   'LLAU: MEMBER CSVLLAXX CREATED'
MEMEXIST DS    0H
         OPEN  (XIN,UPDAT)
         GET   XIN
         CLC   =C'/* ',0(R1)
         BE    MEMOK
         CLC   =C'LNK',0(R1)
         BE    MEMOK
         CLC   =C'LIB',0(R1)
         BE    MEMOK
         MVC   WTOMEM,ALMEMBER
WTOMSG1  WTO   'LLAU: 12345678 FIRST RECORD FOUND UNEXPECTED VALUES'
WTOMEM   EQU   WTOMSG1+4+10,8
         CLOSE (XIN)
         ABEND 200
MEMOK    MVC   0(80,R1),OUTAREA
         PUTX  XIN
         CLOSE (XIN)
         L     R2,X'224'
         CLC   =F'0',X'3C'(R2)
         BE    WTO1
         TPUT  LLAMSG,80
WTO1     DS    0H
         MVC   WTOMSG2T(48),LLAMSG
WTOMSG2  WTO   'LLAU:                                                 '
WTOMSG2T EQU   WTOMSG2+4+10,48
         MODESET KEY=ZERO
         XR    0,0
         MGCR  CMDLST
FINI     DS    0H
         L     R13,4(R13)
         RETURN (14,12),RC=0
LENERR   DS    0H
         WTO   'LLAU: PARM LENGTH ERROR'
         B     FINI
PARMERR  DS    0H
         WTO   'LLAU: PARAMETERS ERROR, MOD= OR LIB= NOT FOUND'
         B     FINI
YYY      DS    0F
         DC    X'91',AL3(YYYEXIT)
YYYEXIT  DS    0H
         MVI   3(R1),X'04'
         OI    FLAG,NOMEM
         LA    R15,4
         BR    R14
         PUSH  PRINT
         PRINT NOGEN
XIN      DCB   DDNAME=XIN,DSORG=PS,MACRF=(GL,PL),EODAD=FINI,LRECL=80,  X
               EXLST=YYY
XIN2     DCB   DDNAME=XIN2,DSORG=PS,MACRF=R,EODAD=FINI
XOUT     DCB   DDNAME=XIN,DSORG=PS,MACRF=(PL),LRECL=80
         POP   PRINT
         DS    0F
MEMLIST  DC    H'1',H'12',CL8' ',CL4' '
LLAMSG   DC    C'-- LLA IS UPDATED --'
OUTAREA  DC    CL80' '
FLAG     DC    X'00'
NOMEM    EQU   X'01'
SAVE DS        18F
CMDLST   DS    0F
         DC    X'80',AL1(L'OPRCMDX+4),XL2'00'
OPRCMDX  DC    C'F LLA,UPDATE=XX'
ALLOCPT  DC    X'80',AL3(ALLOCRB)
ALLOCRB  DC    AL1(20) LENGTH ALWAYS 20
ALLOCVB  DC    X'01'      DSNAME ALLOC
ALLOCFG1 DC    XL2'00'
ALLOCERR DC    XL2'00'
ALLOCINF DC    XL2'00'
ALLOCTP  DC    AL4(ALLOCTU)
ALLOCRSV DC    AL4(0)
ALLOGFG2 DC    AL4(0)
ALLOCTU  DC    X'00',AL3(ALLOCTU1)
         DC    X'00',AL3(ALLOCTU2)
         DC    X'00',AL3(ALLOCTU3)
         DC    X'80',AL3(ALLOCTU4)
ALLOCTU1 DC    X'0001'
         DC    X'0001'
         DC    X'0008'
DDNAME   DC    CL8'XIN'
ALLOCTU2 DC    X'0002'
         DC    X'0001'
ALDSNLEN DC    X'002C'   DATASET NAME LENGTH
ALDSNAME DC    CL44'SYS1.PARMLIB'
ALLOCTU3 DC    X'0004'
         DC    X'0001'
         DC    X'0001'
         DC    X'08'
ALLOCTU4 DC    X'0003'
         DC    X'0001'
ALMEMLEN DC    X'0008'         LENGTH AND MEMNAME FILLED AT EXECUTION
ALMEMBER DC    CL8'CSVLLAXX'
         DCBD  DSORG=PS,DEVD=DA
         END
