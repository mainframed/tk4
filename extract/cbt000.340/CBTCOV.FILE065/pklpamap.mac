LPAM     TITLE 'UICC LPA PACKER - PRODUCES DIRECTORY FROM SYS1.LPALIB'
*
* THIS ROUTINE READS THE DIRECTORY OF SYS1.LPALIB AND PRODUCES
* A FILE THAT IS COMPATIBLE WITH THE OUTPUT OF THE DIRECT PGM
* (WHICH READS THE IN-CORE DIRECTORY) FOR INPUT TO THE ANALYSIS
* ROUTINE.  THIS PROGRAM IS USEFUL IF THE CONTENTS OF THE
* LINK PACK AREA HAVE BEEN CHANGED SINCE THE DATA AND THE ORIGINAL
* DIRECT FILE WERE CREATED, WHICH WOULD HAPPEN DURING THE COURSE
* OF NORMAL SYSTEM MAINTENANCE.
*
* BIBLIOGRAPHY: FIGURE 41 - PARTITIONED ORGANIZATION DIRECTORY
* RECORD AS BUILT BY LINKAGE EDITOR IN OS/VS LINKAGE EDITOR
* LOGIC SY26-3815.
*
* INPUT: LPALIB DD CARD POINTING TO SYS1.LPALIB
* OUTPUT: DDNAME=DIRECT
*         DCB=(RECFM=FB,LRECL=16,BLKSIZE=3664)
*   THE RECORD CONTENTS ARE AS FOLLOWS:
*
*   RECORD 1:
*
*      **********************************************
*      * NUMBER OF * LPA LOW  * LPA HIGH * UNUSED   *
*      *  ENTIRES  * ADDRESS  * ADDRESS  *          *
*      **********************************************
*
*   ALL SUBSEQUENT RECORDS (=NUMBER OF ENTRIES)
*
*      **********************************************
*      *  MODULE NAME         * STARTING * MODULE   *
*      *                      * ADDRESS  * LENGTH   *
*      **********************************************
*
* THIS PROGRAM WAS WRITTEN BY:
*
*      BARRY SCHRAGER
*      COMPUTER CENTER
*      UNIVERSITY OF ILLINOIS AT CHICAGO CIRCLE
*      BOX 4348
*      CHICAGO, ILLINOIS 60680
*
*      (312) 996-2478
*
*      VERSION 1 DATED 7/18/77
*
PDSENT   DSECT  PDS DIRECTORY ENTRY AS BUILT BY LINKAGE EDITOR
PDSNAME  DS    CL8  MODULE NAME
PDSTTRM  DS    XL3  TTR OF MODULE
PDSMISC  DS    X  ALIAS INDICATOR AND MISC. FLAGS
PDSALIAS EQU   X'80'  ALIAS FLAG
PDSLMASK EQU   X'1F'  LENGTH MASK FOR ABOVE BYTE
PDSTTRT  DS    XL3  TTR OF FIRST TEXT RECORD
         DS    X  UNUSED
PDSTTRN  DS    XL3  TTR OF NOT LIST OR SCATTER RECORD
PDSCNTN  DS    X  NUMBER OF ENTRIES IN NOTE LIST
PDSATTR  DS    XL2  MODULE ATTRIBUTES
PDSLSIZE DS    XL3  TOTAL CONTIGUOUS VIRTUAL STORAGE REQUIRED
         SPACE 3
DIRENT   DSECT
DIRNAME  DS    CL8  MODULE NAME
DIRSTART DS    A  STARTING ADDRESS
DIRLNGTH DS    A  MODULE LENGTH
DIRSIZE  EQU   *-DIRENT  LENGTH OF DIRECTORY ENTRY
         SPACE 3
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         EJECT
LPAMAP   CSECT
         SAVE (14,12),,* ENTER
         LR    R12,R15  GET ADDRESSABILITY
         USING LPAMAP,R12
         LA    R2,SAVEAREA  POINT TO NEW SAVE AREA
         ST    R2,8(,R13)  FORWARD CHAIN SAVE AREA
         ST    R13,4(,R2)  BACK CHAIN SAVE AREA
         LR    R13,R2  SET UP NEW SAVE AREA
         OPEN (LPALIB,(INPUT))  OPEN LIBRARY DATASET
         LTR   R15,R15  TEST FOR GOOD OPEN
         BZ    *+6  OK, CONTINUE
         DC    H'0'  0C1  ABEND IF NOT
         GETMAIN VU,LA=GMAINR,A=STORAGE,BNDRY=PAGE
         L     R3,STORAGE  GET START OF AREA
         LR    R15,R3  CALCULATE END OF TABLE
         A     R15,STORSIZE
         ST    R15,STOREND  AND SAVE IT FOR LATER
         USING DIRENT,R3  ADDRESS FIRST ENTRY IN TABLE
*
* FILL IN THE TABLE FROM THE DIRECTORY OF SYS1.LPALIB
*
READ     READ  DECB,SF,LPALIB,PDSBLOCK,'S'  READ NEXT DIRECTORY BLOCK
         CHECK DECB
         CLC   PDSBLOCK(2),=H'0'  IS BLOCK EMPTY?
         BE    FINISH  YUP, THEN WE ARE FINISHED
         LA    R4,PDSBLOCK+2  SET INITIAL POINTER INTO BLOCK
PRONEXT  LR    R1,R4  GET CURRENT ADDRESS POINTER
         LA    R2,PDSBLOCK  GET BEGINNING OF BLOCK
         SR    R1,R2  GET DIFFERENCE
         CH    R1,PDSBLOCK  CHECK AGAINST USED AMT
         BNL   READ  IF LOW, THEN GET NEXT PDS DIRECTORY RECORD
         USING PDSENT,R4  ADDRESS PDS ENTRY
         CLC   PDSNAME,=XL8'FFFFFFFFFFFFFFFF'  NULL ENTRY?
         BE    READ  YES, GET NEXT BLOCK
         TM    PDSMISC,PDSALIAS  IS ALIAS FLAG ON?
         BO    GETLEN  YES, SKIP IT
         MVC   DIRNAME,PDSNAME  MOVE NAME FIELD
         L     R0,LPAHIGH  GET CURRENT LPA HIGH ADDRESS
         ST    R0,DIRSTART  SET AS MODULE START
         SR    R15,R15  CLEAR R15
         ICM   R15,7,PDSLSIZE  GET LOAD MOD SIZE
         ST    R15,DIRLNGTH  STORE MODULE LENGTH
         AR    R0,R15  BUMP LPA HIGH ADDRESS
         ST    R0,LPAHIGH  AND STUFF IT BACK
         LA    R3,DIRSIZE(R3)  INCREMENT DIRECTORY POINTER
         C     R3,STOREND  END OF TABLE?
         BNL   ERRSIZE  ERROR IF SO
GETLEN   SR    R1,R1  CLEAR R1
         NI    PDSMISC,PDSLMASK  MASK OFF EXTRANEOUS BITS
         IC    R1,PDSMISC  GET THE LENGTH IN HALFWORDS
         SLA   R1,1  GET THE LENGTH IN BYTES
         LA    R4,12(R1,R4)  GET THE NEXT ADDRESS
         B     PRONEXT  AND LOOK AT NEXT ENTRY
         SPACE 5
FINISH   L     R4,STOREND  GET THE END OF THE GETMAINED STORAGE
         SR    R4,R3  CALCULATE THE UNUSED SPACE
         FREEMAIN RU,LV=(R4),A=(R3)  FREE IT
         ST    R3,STOREND  RESET THE END OF THE STORAGE
         S     R3,STORAGE  CALCULATE THE TABLE SIZE
         ST    R3,STORSIZE  AND SAVE IT
         CLOSE (LPALIB)  CLOSE THE INPUT FILE
         SR    R2,R2  CLEAR R2
         LA    R15,DIRSIZE  GET THE TABLE ENTRY SIZE
         DR    R2,R15  CALCULATE NUMBER OF ENTRIES
         ST    R3,MODCOUNT  STORE INTO HEADER RECORD
*
* OPEN UP THE OUTPUT FILE AND WRITE OUT THE LPALIB DIRECTOR
* THE FIRST RECORD IS THE STATISTICS RECORDS
* THEN WRITE ONE RECORD FOR EACH MEMBER
*
         OPEN  (DIRECT,(OUTPUT))
         LTR   R15,R15  TEST RETURN CODE
         BZ    *+6   OK, CONTINUE
         DC    H'0' 0C1 ABEND IF NOT
         PUT   DIRECT,MODCOUNT  PUT OUT STAT RECORD
         L     R3,STORAGE  SET UP LOOP TO WRITE REST OF RECORDS
         LA    R4,DIRSIZE  ENTRY SIZE
         L     R5,STOREND  SIZE OF TABLE
         SR    R5,R4  ADDRESS OF LAST ENTRY
WLOOP    PUT   DIRECT,(R3)  WRITE RECORD
         BXLE  R3,R4,WLOOP  AND LOOP
         CLOSE (DIRECT)  CLOSE FILE
         L     R3,STORSIZE  GET STORAGE SIZE
         FREEMAIN RU,LV=(R3),A=STORAGE
         L     R13,4(,R13)  DECHAIN SAVE AREAS
         RETURN (14,12),RC=0
         SPACE 3
ERRSIZE  WTO   'REGION TOO SMALL - DIRECTORY BUILD FAILURE',           X
               ROUTCDE=11
         L     R13,4(,R13)
         RETURN (14,12),RC=12
         SPACE 3
SAVEAREA DS    9D  SAVE AREA
GMAINR   DC    A(4096,409600)  STORAGE GETMAIN AREA
STORAGE  DC    A(0)  STORAGE AREA START
STORSIZE DC    A(0)  STORAGE AREA SIZE
STOREND  DC    A(0)  FIRST BYTE NOT IN STORAGE AREA
MODCOUNT DC    A(0)  STAT RECORD
LPALOW   DC    A(0)  LPA LOW ADDRESS
LPAHIGH  DC    A(0)  LPA HIGH ADDRESS
         DC    A(0)  UNUSED IN STAT RECORD
PDSBLOCK DS    CL256  WORK AREA FOR READING IN DIRECTORY RECORD
DIRECT   DCB   DDNAME=DIRECT,BLKSIZE=3664,LRECL=DIRSIZE,DEVD=DA,       X
               DSORG=PS,MACRF=PM,RECFM=FB
LPALIB   DCB   DDNAME=LPALIB,BLKSIZE=256,LRECL=256,DEVD=DA,            X
               DSORG=PS,EODAD=FINISH,MACRF=RC,RECFM=F
         END   LPAMAP
