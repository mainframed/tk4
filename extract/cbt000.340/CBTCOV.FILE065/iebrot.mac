000100 IDENTIFICATION DIVISION.
000200   PROGRAM-ID. IEBROT.
000300   AUTHOR. RICK BUTT.
000400   INSTALLATION. LEASIDE DATA CENTRE.
000500   DATE-WRITTEN. NOVEMBER 2, 1979.
000600   DATE-COMPILED. NOVEMBER 2, 1979.
000700*
000800*  REMARKS.   THIRD VERSION OF PAGE ROTATE PROGRAM FOR 3800.
000900*             THIS VERSION INCLUDES THE OPTIONAL BIG CHARACTERS.
001000*
001100*  THIS IS THE OFFICIAL VERSION FOR PRODUCT INTERCHANGE. (V 3.1)
001200*
001300*             RICK BUTT
001400*             MINISTRY OF GOVERNMENT SERVICES
001500*             15 OVERLEA BLVD., TORONTO, ONTARIO
001600*             CANADA    M4H 1A9
001700*             416-965-8247
001800*
001900*      IT IS SUGGESTED THAT THE PRINTOUT OF THIS
002000*    COMPILED PROGRAM BE DONE WITH UPPER/LOWER CASE.
002100*
002200 ENVIRONMENT DIVISION.
002300 CONFIGURATION SECTION.
002400   SOURCE-COMPUTER. IBM-370.
002500   OBJECT-COMPUTER. IBM-370.
002600   SPECIAL-NAMES.
002700     C01 IS
002800     TO-HEAD-OF-FORM
002900     UPSI-0
003000       ON STATUS IS RESERVED-FOR-MACHINE-CODE
003100     UPSI-1
003200       ON STATUS IS RESERVED-FOR-NO-CODE
003300     UPSI-2
003400       ON STATUS IS RESERVED-FOR-TRC
003500     UPSI-3
003600       ON STATUS IS BIG-PRINT.
003700 INPUT-OUTPUT SECTION.
003800   FILE-CONTROL.
003900     SELECT SYSUT1
004000           ASSIGN TO UT-S-SYSUT1.
004100     SELECT SYSUT2
004200           ASSIGN TO UT-S-SYSUT2.
004300 DATA DIVISION.
004400 FILE SECTION.
004500 FD  SYSUT1,
004600       BLOCK CONTAINS 0 RECORDS,
004700       RECORD CONTAINS 0 CHARACTERS,
004800       RECORDING MODE IS F,
004900       LABEL RECORDS ARE STANDARD,
005000       DATA RECORD IS LIN.
005100   01  LIN,                SYNC.
005200     02  LIN-CHAR-CTL                         PIC X.
005300     02  LIN-DATA                             PIC X(79).
005400 FD  SYSUT2,
005500       LABEL RECORDS ARE STANDARD,
005600       RECORD CONTAINS 121 CHARACTERS,
005700       BLOCK CONTAINS 0 RECORDS,
005800       RECORDING MODE IS F,
005900       DATA RECORD IS LOUT.
006000   01  LOUT,               SYNC.
006100     02  FILLER,                              PIC X.
006200     02  LOUT-LINE                            PIC X(120).
006300 WORKING-STORAGE SECTION.
006400* 777777777777777777777777777777777777777777777777777777777777777
006500 77  R-C,              SYNC      PIC S9999,         COMP.
006600 77  O-FLOW-COUNTER    SYNC      PIC S9(8)        COMP VALUE ZERO.
006700 77  PAGE-THRESHOLD    SYNC      PIC S9(8)          COMP.
006800 77  SAVE-INDEX                                     USAGE INDEX.
006900 77  SAVE-INDEX-A                                   USAGE INDEX.
007000 77  SAVE-INDEX-B                                   USAGE INDEX.
007100 77  LEFT-MARGIN-INDEX-PENDING                      USAGE INDEX.
007200 77  RIGHT-MARGIN-INDEX-PENDING                     USAGE INDEX.
007300 77  LEFT-MARGIN-INDEX                              USAGE INDEX.
007400 77  RIGHT-MARGIN-INDEX                             USAGE INDEX.
007500 77  LEFT-MARGIN-ROTATED-PENDING                    USAGE INDEX.
007600 77  RIGHT-MARGIN-ROTATED-PENDING                   USAGE INDEX.
007700 77  LEFT-MARGIN-ROTATED-INDEX                      USAGE INDEX.
007800 77  RIGHT-MARGIN-ROTATED-INDEX                     USAGE INDEX.
007900 77  THE-APPROPRIATE-NUMBER-OF SYNC PIC S9(2)       COMP.
008000 77  INITIAL-PAGE-SWITCH         PIC X              VALUE '0'.
008100 77  EXTENDED-DASHES-SWITCH      PIC X              VALUE '0'.
008200   88  EXTENDED-DASHES-WERE-PRESENT VALUE '1'.
008300 77  EXTENDED-DASHES-SWITCH-2    PIC X              VALUE '0'.
008400   88  EXTENDED-DASHES-WERENT-QUOTED VALUE '0'.
008500 77  ORS-AS-FORMAT-SWITCH        PIC X              VALUE '0'.
008600   88  ORS-AS-FORMAT-WERE-PRESENT   VALUE '1'.
008700 77  SPECIFIC-CHAR-121           PIC X.
008800 77  WORK-CHAR                   PIC X.
008900   88  WORK-CHAR-HEX-4F             VALUE '×'.
009000   88  WORK-CHAR-HEX-5D             VALUE ')'.
009100   88  WORK-CHAR-HEX-7E             VALUE '='.
009200   88  WORK-CHAR-HEX-7F             VALUE '"'.
009300   88  WORK-CHAR-HEX-96             VALUE 'o'.
009400   88  WORK-CHAR-HEX-98             VALUE 'q'.
009500   88  WORK-CHAR-HEX-99             VALUE 'r'.
009600   88  WORK-CHAR-HEX-AB             VALUE '¨'.
009700   88  WORK-CHAR-HEX-AC             VALUE 'ö'.
009800   88  WORK-CHAR-HEX-BB             VALUE '³'.
009900   88  WORK-CHAR-HEX-BC             VALUE '¼'.
010000   88  WORK-CHAR-HEX-BF             VALUE '¿'.
010100   88  WORK-CHAR-HEX-D6             VALUE 'O'.
010200   88  WORK-CHAR-HEX-D8             VALUE 'Q'.
010300   88  WORK-CHAR-HEX-D9             VALUE 'R'.
010400   88  WORK-CHAR-HEX-F0             VALUE '0'.
010500   88  WORK-CHAR-HEX-F2             VALUE '2'.
010600*    THE FOLLOWING WORK AREA IS USED FOR TWO DIFFERENT DEFINITIONS
010700*    OF "PREVIOUS".
010800*    IN THE STACK ROUTINE, IT MEANS THE SERIALLY PREVIOUS
010900*    CHARACTER IN THE CURRENT LINE.
011000*    IN THE MERGE ROUTINE, IT MEANS THE CORRESPONDING CHARACTER
011100*    POSITION IN EITHER PART OF THE PREVIOUS LINE.
011200 77  WORK-PREV-CHAR              PIC X.
011300   88  WORK-PREV-CHAR-HEX-00        VALUE LOW-VALUE.
011400   88  WORK-PREV-CHAR-HEX-40        VALUE ' '.
011500   88  WORK-PREV-CHAR-HEX-4B        VALUE '.'.
011600   88  WORK-PREV-CHAR-HEX-4C        VALUE '<'.
011700   88  WORK-PREV-CHAR-HEX-4D        VALUE '('.
011800   88  WORK-PREV-CHAR-HEX-4E        VALUE '+'.
011900   88  WORK-PREV-CHAR-HEX-4F        VALUE '×'.
012000   88  WORK-PREV-CHAR-HEX-5D        VALUE ')'.
012100   88  WORK-PREV-CHAR-HEX-61        VALUE '/'.
012200   88  WORK-PREV-CHAR-HEX-6B        VALUE ','.
012300   88  WORK-PREV-CHAR-HEX-6E        VALUE '>'.
012400   88  WORK-PREV-CHAR-HEX-7F        VALUE '"'.
012500   88  WORK-PREV-CHAR-HEX-80        VALUE 'ç'.
012600   88  WORK-PREV-CHAR-HEX-AB        VALUE '¨'.
012700   88  WORK-PREV-CHAR-HEX-AC        VALUE 'ö'.
012800   88  WORK-PREV-CHAR-HEX-BB        VALUE '³'.
012900   88  WORK-PREV-CHAR-HEX-BC        VALUE '¼'.
013000   88  WORK-PREV-CHAR-HEX-BF        VALUE '¿'.
013100   88  WORK-PREV-CHAR-HEX-F1        VALUE '1'.
013200 77  MANY-LOW-VALUES             PIC X(90)       VALUE LOW-VALUES.
013300* 111111111111111111111111111111111111111111111111111111111111111
013400 01  FILLER.
013500   03  BOX-CAR-VAL     SYNC      PIC S999           COMP.
013600   03  FILLER REDEFINES BOX-CAR-VAL.
013700     05  FILLER                  PIC X.
013800     05  BOX-CAR                 PIC X.
013900 01  BOX-CAR-VALUES.
014000   03  BOX-CAR-VAL-1   SYNC      PIC S999           COMP.
014100   03  FILLER REDEFINES BOX-CAR-VAL-1.
014200     05  FILLER                  PIC X.
014300     05  BOX-CAR-1               PIC X.
014400   03  BOX-CAR-VAL-2   SYNC      PIC S999           COMP.
014500   03  FILLER REDEFINES BOX-CAR-VAL-2.
014600     05  FILLER                  PIC X.
014700     05  BOX-CAR-2               PIC X.
014800   03  BOX-CAR-VAL-4   SYNC      PIC S999           COMP.
014900   03  FILLER REDEFINES BOX-CAR-VAL-4.
015000     05  FILLER                  PIC X.
015100     05  BOX-CAR-4               PIC X.
015200   03  BOX-CAR-VAL-8   SYNC      PIC S999           COMP.
015300   03  FILLER REDEFINES BOX-CAR-VAL-8.
015400     05  FILLER                  PIC X.
015500     05  BOX-CAR-8               PIC X.
015600*  DEFINITION CONSISTS OF STRING X'00400040 ... 00400040'
015700 01  VERTICAL-SPACES             PIC X(120)        VALUE ALL '
015800 01  MATIN.
015900   02  LINE-HUGO.
016000     03  LINE-IN                       OCCURS 121 TIMES INDEXED BY
016100             IX2.
016200       04  LINE-FRED.
016300         05  CHAR-IN                    OCCURS 90 TIMES INDEXED BY
016400               IX2B              PIC X.
016500       04  FILLER REDEFINES LINE-FRED.
016600         05  FILLER              PIC X(6).
016700         05  LINE-IN-OFFSET-A    PIC X(79).
016800         05  FILLER              PIC X(5).
016900       04  FILLER REDEFINES LINE-FRED.
017000         05  LINE-IN-OFFSET-B    PIC X(45).
017100         05  FILLER              PIC X(45).
017200   02  FILLER REDEFINES LINE-HUGO.
017300     04  FILLER                  PIC X(10800).
017400     04  CHAR-IN-121 OCCURS 90 TIMES PIC X.
017500 01  MATOUT.
017600   02  LINE-OUT                         OCCURS 90 TIMES INDEXED BY
017700           IX1.
017800     05  CHAR-OUT OCCURS 120 TIMES PIC X.
017900 PROCEDURE DIVISION.
018000* ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
018100     PERFORM INITIALIZATION-ROUTINE THROUGH
018200           INITIALIZATION-ROUTINE-EXIT.
018300   MAIN-LOOP-1.
018400     READ SYSUT1 AT END
018500       GO TO END-OF-INPUT.
018600     IF O-FLOW-COUNTER NOT ZERO THEN
018700       IF LIN-CHAR-CTL NOT = '+' THEN
018800         IF LIN-CHAR-CTL = '1' OR O-FLOW-COUNTER >
018900         PAGE-THRESHOLD THEN
019000           PERFORM END-OF-LOGICAL-PAGE THROUGH
019100                 END-OF-LOGICAL-PAGE-EXIT
019200         ELSE
019300           NEXT SENTENCE
019400       ELSE
019500         PERFORM MERGE-LINE THROUGH MERGE-LINE-EXIT
019600         GO TO MAIN-LOOP-1.
019700     PERFORM STACK-LINE THROUGH STACK-LINE-EXIT.
019800     GO TO MAIN-LOOP-1.
019900   END-OF-INPUT.
020000     PERFORM END-OF-LOGICAL-PAGE THROUGH
020100           END-OF-LOGICAL-PAGE-EXIT.
020200     CLOSE SYSUT1 SYSUT2.
020300     MOVE ZERO TO RETURN-CODE.
020400     STOP RUN.
020500*
020600   END-OF-LOGICAL-PAGE.
020700     IF EXTENDED-DASHES-WERE-PRESENT AND
020800           ORS-AS-FORMAT-WERE-PRESENT AND
020900           EXTENDED-DASHES-WERENT-QUOTED THEN
021000       PERFORM BOX-ROUTINE THROUGH BOX-ROUTINE-EXIT.
021100     MOVE '0' TO EXTENDED-DASHES-SWITCH
021200           ORS-AS-FORMAT-SWITCH
021300           EXTENDED-DASHES-SWITCH-2.
021400     PERFORM ROTATE THROUGH ROTATE-EXIT.
021500     PERFORM PAGE-PRINT THROUGH PAGE-PRINT-EXIT.
021600     MOVE ZERO TO O-FLOW-COUNTER.
021700*    MOVE SPACES TO MATIN.
021800     SET IX2 TO 1.
021900   END-OF-LOGICAL-PAGE-EXIT.
022000     EXIT.
022100/
022200   STACK-MULTI-SPACE.
022300     MOVE SPACES TO LINE-IN (IX2).
022400     MOVE MANY-LOW-VALUES TO LINE-IN (IX2 + 1).
022500     ADD +1 TO O-FLOW-COUNTER.
022600     SET IX2 UP BY 2.
022700     IF O-FLOW-COUNTER > PAGE-THRESHOLD THEN
022800       PERFORM END-OF-LOGICAL-PAGE THROUGH
022900             END-OF-LOGICAL-PAGE-EXIT.
023000*
023100*
023200   STACK-LINE.
023300     IF LIN-CHAR-CTL NOT = '0' AND '-' THEN
023400       GO TO STACK-NOT-MULTI-SPACE
023500     OTHERWISE
023600       PERFORM STACK-MULTI-SPACE.
023700     IF LIN-CHAR-CTL = '-' THEN
023800       PERFORM STACK-MULTI-SPACE.
023900   STACK-NOT-MULTI-SPACE.
024000     IF LIN-DATA = SPACES THEN
024100       MOVE SPACES TO LINE-IN (IX2)
024200       MOVE MANY-LOW-VALUES TO LINE-IN (IX2 + 1)
024300       GO TO STACK-LINE-DONE.
024400     IF BIG-PRINT THEN
024500       MOVE LIN-DATA TO LINE-IN-OFFSET-B (IX2)
024600       MOVE LIN-DATA TO LINE-IN-OFFSET-B (IX2 + 1)
024700       MOVE LIN-DATA TO LINE-IN-OFFSET-B (121)
024800     ELSE
024900       MOVE LIN-DATA TO LINE-IN-OFFSET-A (IX2)
025000       MOVE LIN-DATA TO LINE-IN-OFFSET-A (IX2 + 1)
025100       MOVE LIN-DATA TO LINE-IN-OFFSET-A (121).
025200     CALL 'IEBROTA1' USING LINE-IN (IX2) LINE-IN
025300           (IX2 + 1) LINE-IN (121).
025400     IF RETURN-CODE ZERO THEN
025500       GO TO STACK-LINE-DONE.
025600     SET IX2B TO LEFT-MARGIN-INDEX.
025700     GO TO STACK-CHECK-NEXT-CHAR.
025800   STACK-SHALL-WE-LOOP.
025900     IF IX2B NOT < RIGHT-MARGIN-INDEX THEN
026000       GO TO STACK-LINE-DONE.
026100     SET IX2B UP BY 1.
026200   STACK-CHECK-NEXT-CHAR.
026300     IF CHAR-IN-121 (IX2B) = LOW-VALUE THEN
026400       GO TO STACK-SHALL-WE-LOOP.
026500   STACK-SPECIAL-ACTION.
026600     MOVE CHAR-IN (IX2 IX2B) TO WORK-CHAR.
026700     MOVE CHAR-IN (IX2 IX2B - 1) TO WORK-PREV-CHAR.
026800*    *CHECK FOR CONTINUOUS HYPHENS; CAN WE GO BACK?
026900     IF WORK-CHAR = '-' AND IX2B > LEFT-MARGIN-INDEX
027000           THEN
027100*      *WAS PREVIOUS CHARACTER IN LINE AN EXTENDED DASH
027200*      *OR A LOGICAL "OR" (×)?
027300       IF WORK-PREV-CHAR-HEX-BF OR WORK-PREV-CHAR = '×'
027400             THEN
027500*        *YES IT WAS, MAKE THIS ONE EXTENDED DASH TOO.
027600         MOVE '¿' TO CHAR-IN (IX2 IX2B)
027700         MOVE '1' TO EXTENDED-DASHES-SWITCH
027800         GO TO STACK-SHALL-WE-LOOP
027900*      *NO IT WASN'T EXTENDED DASH.
028000       ELSE
028100*        *WAS IT A NORMAL DASH?
028200         IF WORK-PREV-CHAR = '-' THEN
028300*          *YES, MAKE BOTH THIS CHAR AND PREVIOUS EXTENDED TYPE.
028400           MOVE '¿' TO CHAR-IN (IX2 IX2B) CHAR-IN
028500                 (IX2 IX2B - 1)
028600           MOVE '1' TO EXTENDED-DASHES-SWITCH
028700           GO TO STACK-SHALL-WE-LOOP.
028800*    *CHECK FOR QUOTE (") AND MANIPULATE OPENING QUOTE.
028900     IF NOT WORK-CHAR-HEX-7F THEN
029000       GO TO STACK-NOT-QUOTE.
029100     IF IX2B = LEFT-MARGIN-INDEX THEN
029200       GO TO STACK-CHANGE-QUOTE.
029300*    WHILE WE'RE AT IT, ARE WE QUOTING EXTENDED DASHES?
029400     IF WORK-PREV-CHAR = '¿' THEN
029500       MOVE '1' TO EXTENDED-DASHES-SWITCH-2.
029600     IF (WORK-PREV-CHAR = SPACE) OR (WORK-PREV-CHAR = '(')
029700           THEN
029800       GO TO STACK-CHANGE-QUOTE.
029900     GO TO STACK-NOT-QUOTE.
030000   STACK-CHANGE-QUOTE.
030100*    MOVE IS OF HEX-80.
030200     MOVE 'ç' TO CHAR-IN (IX2 IX2B).
030300     GO TO STACK-SHALL-WE-LOOP.
030400   STACK-NOT-QUOTE.
030500*    LOGIC SIMILAR TO THAT USED FOR HYPHENS/EXTENDED DASHES.
030600*    CHECK FOR "LOGICAL OR" USED AS A FORMAT CHARACTER
030700*    IS THIS A '×'?
030800     IF NOT WORK-CHAR-HEX-4F THEN
030900       GO TO STACK-NOT-OR.
031000*    *CAN WE LOOK TO PREVIOUS CHAR; IF DASH, MAKE EXTENDED.
031100     IF IX2B > LEFT-MARGIN-INDEX AND CHAR-IN (IX2
031200           IX2B - 1) = '-' THEN
031300       MOVE '1' TO EXTENDED-DASHES-SWITCH
031400       MOVE '¿' TO CHAR-IN (IX2 IX2B - 1).
031500*    CAN WE LOOK BACK TO PREVIOUS LINE?
031600     IF IX2 > 2 THEN
031700*      *YES.  DID WE PUT FORMAT DESCENDER ON PREVIOUS LINE?
031800*      (CHECK IS FOR HEX-90)
031900       IF CHAR-IN (IX2 - 1 IX2B) = 'ð' THEN
032000*        *YES.  ASSUME THIS '×' IS FOR FORMAT ALSO.
032100*        (MOVE IS OF HEX-90)
032200         MOVE 'ð' TO CHAR-IN (IX2 + 1 IX2B)
032300         MOVE '1' TO ORS-AS-FORMAT-SWITCH
032400         GO TO STACK-SHALL-WE-LOOP
032500       ELSE
032600*        *NO WE DIDN'T.  WAS PREVIOUS A '×'?
032700         IF CHAR-IN (IX2 - 2 IX2B) = '×' THEN
032800*          *YES.  PUT DESCENDER ON THIS ONE AND LAST ONE.
032900*        (MOVE IS OF HEX-90)
033000           MOVE 'ð' TO CHAR-IN (IX2 + 1 IX2B)
033100                 CHAR-IN (IX2 - 1 IX2B)
033200           MOVE '1' TO ORS-AS-FORMAT-SWITCH
033300           GO TO STACK-SHALL-WE-LOOP.
033400   STACK-NOT-OR.
033500*    CHECK FOR SEQUENCE "()" FOR BOX; CAN WE GO BACK?
033600     IF WORK-CHAR-HEX-5D AND IX2B > LEFT-MARGIN-INDEX
033700           THEN
033800*      *WAS PREVIOUS A "("?
033900       IF WORK-PREV-CHAR = '(' THEN
034000*        *YES, MAKE SEQUENCE INTO CHECK BOX.
034100*        (MOVE IS OF HEX-FC FOLLOWED BY MOVE OF HEX-FD)
034200         MOVE '' TO CHAR-IN (IX2 IX2B - 1)
034300         MOVE 'ù' TO CHAR-IN (IX2 IX2B)
034400         GO TO STACK-SHALL-WE-LOOP.
034500*    SAFETY GO.
034600     GO TO STACK-SHALL-WE-LOOP.
034700   STACK-LINE-DONE.
034800     SET IX2 UP BY 2.
034900     ADD +1 TO O-FLOW-COUNTER.
035000   STACK-LINE-EXIT.
035100     EXIT.
035200/
035300   MERGE-LINE.
035400     IF INITIAL-PAGE-SWITCH = '0' THEN
035500       MOVE SPACES TO LINE-IN (121).
035600     IF BIG-PRINT THEN
035700       MOVE LIN-DATA TO LINE-IN-OFFSET-B (121)
035800     ELSE
035900       MOVE LIN-DATA TO LINE-IN-OFFSET-A (121).
036000     SET IX2B TO LEFT-MARGIN-INDEX.
036100     SET IX2 DOWN BY 2.
036200     GO TO MERGE-CHECK-NEXT-CHAR.
036300   MERGE-SHALL-WE-LOOP.
036400     IF IX2B NOT < RIGHT-MARGIN-INDEX THEN
036500       GO TO MERGE-LINE-DONE.
036600     SET IX2B UP BY 1.
036700   MERGE-CHECK-NEXT-CHAR.
036800     IF CHAR-IN-121 (IX2B) = SPACE THEN
036900       GO TO MERGE-SHALL-WE-LOOP.
037000*    QUICK CHECK: ARE CHARACTERS IDENTICAL?
037100   MERGE-SPECIAL-ACTION.
037200     MOVE CHAR-IN-121 (IX2B) TO SPECIFIC-CHAR-121.
037300     IF SPECIFIC-CHAR-121 = CHAR-IN (IX2 IX2B) THEN
037400       TRANSFORM CHAR-IN (IX2 IX2B) FROM '0+-().*@' TO
037500             'êõéóøô'
037600       TRANSFORM CHAR-IN (IX2 IX2B) FROM '12345678' TO
037700             'µ¶¬«'
037800       TRANSFORM CHAR-IN (IX2 IX2B) FROM '9' TO '¹'
037900       GO TO MERGE-SHALL-WE-LOOP.
038000*    GET THE TWO CHARACTERS IN ASCENDING SEQUENCE IN
038100*    QUICK-REFERENCE STORAGE.
038200     IF SPECIFIC-CHAR-121 > CHAR-IN (IX2 + 1 IX2B)
038300           THEN
038400       MOVE SPECIFIC-CHAR-121 TO WORK-CHAR
038500       MOVE CHAR-IN (IX2 + 1 IX2B) TO
038600             WORK-PREV-CHAR
038700     ELSE
038800       MOVE SPECIFIC-CHAR-121 TO WORK-PREV-CHAR
038900       MOVE CHAR-IN (IX2 + 1 IX2B) TO WORK-CHAR.
039000*    IS CHARACTER TO BE MERGED AN UNDERSCORE?
039100     IF WORK-CHAR NOT = '_' THEN
039200       GO TO MERGE-NOT-UNDERSCORE-1.
039300*    IF PREVIOUS HAD NO DESCENDER, THEN SIMPLE UNDERSCORE.
039400     IF WORK-PREV-CHAR-HEX-00 THEN
039500       MOVE '_' TO CHAR-IN (IX2 + 1 IX2B)
039600       GO TO MERGE-SHALL-WE-LOOP.
039700*    CHECK FOR COMMA OR SEMI-COLON.
039800     IF WORK-PREV-CHAR-HEX-6B THEN
039900       MOVE ';' TO CHAR-IN (IX2 + 1 IX2B).
040000*    ALL ELSE UNKNOWN STAYS AS IT IS.
040100     GO TO MERGE-SHALL-WE-LOOP.
040200   MERGE-NOT-UNDERSCORE-1.
040300     IF WORK-PREV-CHAR NOT = '_' THEN
040400       GO TO MERGE-NOT-UNDERSCORE.
040500     TRANSFORM WORK-CHAR FROM 'èÊÚ£á' TO '÷Ïý'.
040600     MOVE WORK-CHAR TO CHAR-IN (IX2 + 1 IX2B).
040700     GO TO MERGE-SHALL-WE-LOOP.
040800   MERGE-NOT-UNDERSCORE.
040900*    GET CHARACTERS IN ASCENDING SEQUENCE; THIS TIME UPPER HALF.
041000     IF SPECIFIC-CHAR-121 > CHAR-IN (IX2 IX2B) THEN
041100       MOVE SPECIFIC-CHAR-121 TO WORK-CHAR
041200       MOVE CHAR-IN (IX2 IX2B) TO WORK-PREV-CHAR
041300     ELSE
041400       MOVE SPECIFIC-CHAR-121 TO WORK-PREV-CHAR
041500       MOVE CHAR-IN (IX2 IX2B) TO WORK-CHAR.
041600*    DO CHECKS AFFECTING UPPER AND LOWER HALF BASED ON UPPER
041700*    CHECK FOR HALF SIGN (1 OVER 2)
041800     IF WORK-PREV-CHAR-HEX-F1 AND WORK-CHAR-HEX-F2 THEN
041900*      (MOVE IS OF HEX-EB)
042000       MOVE 'ë' TO CHAR-IN (IX2 IX2B)
042100*      (MOVE IS OF HEX-ED)
042200       MOVE 'í' TO CHAR-IN (IX2 + 1 IX2B)
042300       GO TO MERGE-SHALL-WE-LOOP.
042400*    CHECK FOR FORMAT TEE, BRANCH LEFT.
042500     IF (WORK-PREV-CHAR-HEX-BB AND WORK-CHAR-HEX-BC) OR
042600           (WORK-PREV-CHAR-HEX-4F AND (WORK-CHAR-HEX-BB OR
042700           WORK-CHAR-HEX-BC)) THEN
042800*      (MOVE IS OF HEX-BA)
042900       MOVE 'ª' TO CHAR-IN (IX2 IX2B)
043000*      (MOVE IS OF HEX-90)
043100       MOVE 'ð' TO CHAR-IN (IX2 + 1 IX2B)
043200       GO TO MERGE-SHALL-WE-LOOP.
043300*    CHECK FOR FORMAT TEE, BRANCH RIGHT.
043400     IF (WORK-PREV-CHAR-HEX-AB AND WORK-CHAR-HEX-AC) OR
043500           (WORK-PREV-CHAR-HEX-4F AND (WORK-CHAR-HEX-AC OR
043600           WORK-CHAR-HEX-AB)) THEN
043700*      (MOVE IS OF HEX-EE)
043800       MOVE 'î' TO CHAR-IN (IX2 IX2B)
043900*      (MOVE IS OF HEX-90)
044000       MOVE 'ð' TO CHAR-IN (IX2 + 1 IX2B)
044100       GO TO MERGE-SHALL-WE-LOOP.
044200*    CHECK FOR FORMAT TEE, BRANCH DOWN.
044300     IF (WORK-PREV-CHAR-HEX-AC AND (WORK-CHAR-HEX-BC OR
044400           WORK-CHAR-HEX-BF)) OR (WORK-PREV-CHAR-HEX-BC AND
044500           WORK-CHAR-HEX-BF) THEN
044600*      (MOVE IS OF HEX-EF)
044700       MOVE 'ï' TO CHAR-IN (IX2 IX2B)
044800*      (MOVE IS OF HEX-90)
044900       MOVE 'ð' TO CHAR-IN (IX2 + 1 IX2B)
045000       GO TO MERGE-SHALL-WE-LOOP.
045100*    CHECK FOR FORMAT TEE, BRANCH UP.
045200     IF (WORK-PREV-CHAR-HEX-AB AND (WORK-CHAR-HEX-BB OR
045300           WORK-CHAR-HEX-BF)) OR (WORK-PREV-CHAR-HEX-BB AND
045400           WORK-CHAR-HEX-BF) THEN
045500*      (MOVE IS OF HEX-FB)
045600       MOVE 'û' TO CHAR-IN (IX2 IX2B)
045700       MOVE LOW-VALUE TO CHAR-IN (IX2 + 1 IX2B)
045800       GO TO MERGE-SHALL-WE-LOOP.
045900*    CHECK FOR >=.
046000     IF WORK-PREV-CHAR-HEX-6E AND WORK-CHAR-HEX-7E THEN
046100       MOVE '>' TO CHAR-IN (IX2 IX2B)
046200*      (MOVE IS OF HEX-8C)
046300       MOVE 'è' TO CHAR-IN (IX2 + 1 IX2B)
046400       GO TO MERGE-SHALL-WE-LOOP.
046500*    CHECK FOR <=.
046600     IF WORK-PREV-CHAR-HEX-4C AND WORK-CHAR-HEX-7E THEN
046700       MOVE '<' TO CHAR-IN (IX2 IX2B)
046800*      (MOVE IS OF HEX-8C)
046900       MOVE 'è' TO CHAR-IN (IX2 + 1 IX2B)
047000       GO TO MERGE-SHALL-WE-LOOP.
047100*   THEN DO CHECKS AFFECTING UPPER HALF.
047200*    CHECK FOR CLOSING QUOTATION MARKS.
047300     IF WORK-CHAR-HEX-7F AND WORK-PREV-CHAR-HEX-7F THEN
047400*      (MOVE IS OF HEX-80)
047500       MOVE 'ç' TO CHAR-IN (IX2 IX2B)
047600       GO TO MERGE-SHALL-WE-LOOP.
047700*    CHECK FOR OPENING QUOTATION MARKS.
047800     IF WORK-CHAR-HEX-7F AND WORK-PREV-CHAR-HEX-80 THEN
047900       MOVE '"' TO CHAR-IN (IX2 IX2B)
048000       GO TO MERGE-SHALL-WE-LOOP.
048100*    CHECK FOR NOT EQUALS.
048200     IF WORK-PREV-CHAR-HEX-61 AND WORK-CHAR-HEX-7E
048300*      (MOVE IS OF HEX-BE)
048400       MOVE '¾' TO CHAR-IN (IX2 IX2B)
048500       GO TO MERGE-SHALL-WE-LOOP.
048600*    CHECK FOR +-.
048700     IF WORK-PREV-CHAR-HEX-4E AND WORK-CHAR = '-'
048800*      (MOVE IS OF HEX-9E)
048900       MOVE '' TO CHAR-IN (IX2 IX2B)
049000       GO TO MERGE-SHALL-WE-LOOP.
049100*    CHECK FOR LEFT SQUARE BRACKET.
049200     IF WORK-PREV-CHAR-HEX-4D THEN
049300       IF WORK-CHAR-HEX-98 OR WORK-CHAR-HEX-D8 THEN
049400*        (MOVE IS OF HEX-AD)
049500         MOVE '[' TO CHAR-IN (IX2 IX2B)
049600         GO TO MERGE-SHALL-WE-LOOP
049700*    CHECK FOR LEFT BRACE.
049800       ELSE
049900         IF WORK-CHAR-HEX-99 OR WORK-CHAR-HEX-D9 THEN
050000*      MOVE IS OF HEX-8B
050100           MOVE '¯' TO CHAR-IN (IX2 IX2B)
050200           GO TO MERGE-SHALL-WE-LOOP.
050300*    CHECK FOR RIGHT SQUARE BRACKET.
050400     IF WORK-PREV-CHAR-HEX-5D THEN
050500       IF WORK-CHAR-HEX-98 OR WORK-CHAR-HEX-D8 THEN
050600*        (MOVE IS OF HEX-BD)
050700         MOVE ']' TO CHAR-IN (IX2 IX2B)
050800         GO TO MERGE-SHALL-WE-LOOP
050900*    CHECK FOR RIGHT BRACE.
051000       ELSE
051100         IF WORK-CHAR-HEX-99 OR WORK-CHAR-HEX-D9 THEN
051200*          (MOVE IS OF HEX-9B)
051300           MOVE 'ò' TO CHAR-IN (IX2 IX2B)
051400           GO TO MERGE-SHALL-WE-LOOP.
051500*   CHECK FOR DEGREE SIGN.
051600     IF WORK-PREV-CHAR-HEX-4B AND (WORK-CHAR-HEX-96 OR
051700           WORK-CHAR-HEX-D6 OR WORK-CHAR-HEX-F0) THEN
051800*      (MOVE IS OF HEX-A1)
051900       MOVE '~' TO CHAR-IN (IX2 IX2B)
052000       GO TO MERGE-SHALL-WE-LOOP.
052100     IF WORK-PREV-CHAR-HEX-40 THEN
052200       MOVE WORK-CHAR TO CHAR-IN (IX2 IX2B)
052300     ELSE
052400       MOVE WORK-PREV-CHAR TO CHAR-IN (IX2 IX2B).
052500     GO TO MERGE-SHALL-WE-LOOP.
052600   MERGE-LINE-DONE.
052700     SET IX2 UP BY 2.
052800   MERGE-LINE-EXIT.
052900     EXIT.
053000/
053100   BOX-ROUTINE.
053200     SET SAVE-INDEX TO IX2.
053300     SET IX2 DOWN BY 2.
053400     SET SAVE-INDEX-A TO IX2.
053500     SET SAVE-INDEX-B TO IX2B.
053600     SET IX2 TO 1.
053700   BOX-BIG-LOOP.
053800     SET IX2B TO LEFT-MARGIN-INDEX.
053900   BOX-LITTLE-LOOP.
054000     IF CHAR-IN (IX2 IX2B) = '¿' OR '×' OR '-' THEN
054100       GO TO BOX-FORMAT-FOUND.
054200   BOX-SHALL-WE-LOOP.
054300     IF IX2B < RIGHT-MARGIN-INDEX THEN
054400       SET IX2B UP BY 1
054500       GO TO BOX-LITTLE-LOOP
054600     ELSE
054700       IF IX2 < SAVE-INDEX-A THEN
054800         SET IX2 UP BY 2
054900         GO TO BOX-BIG-LOOP.
055000     GO TO BOX-PRE-EXIT.
055100   BOX-FORMAT-FOUND.
055200*
055300* LOGIC:  ANY  FORMAT  CHARACTER IS CONSIDERED TO BE COMPOSED
055400* OF A CERTAIN COMBINATION OF FOUR SPOKES.  EACH IS  ASSIGNED
055500* A VALUE AS A POWER OF TWO:
055600*
055700*                           2
055800*                           ×
055900*                       1 --+-- 4
056000*                           ×
056100*                           8
056200*
056300* FOR  INSTANCE,  THE STANDARD "OR" (×) HAS AN UP-SPOKE AND A
056400* DOWN-SPOKE, THEREFORE, A VALUE  OF  10.  BY  EXAMINING  THE
056500* NEIGHBOURING CHARACTERS, WE CAN TELL WHAT SPOKES NEED TO BE
056600* PRESENT.  FOLLOWING THE CALCULATION OF THE VALUE, WHICH  IN
056700* BINARY  CAN  BE  EXPRESSED  IN  A  SINGLE BYTE, THIS CAN BE
056800* TRANSLATED TO THE APPROPRIATE EBCDIC FOR PRINTING.
056900*
057000* IN  EACH CASE, THE NEIGHBOURING CHARACTER IS CHECKED TO SEE
057100* IF IT IS REACHING OUT TO THE CURRENT OPERATIONAL CHARACTER.
057200* IF  THAT  FAILS  TO  PRODUCE  A SPOKE, THEN THE OPERATIONAL
057300* CHARACTER IS CHECKED TO SEE IF IT IS REACHING OUT; IN  THIS
057400* CASE, WE NEED TO SEE IF THE NEIGHBOUR IS ITSELF ANY KIND OF
057500* FORMAT CHARACTER, BUT WE NEED ONLY CHECK TO SEE  IF  IT  IS
057600* ONE WHICH DID NOT SATISFY THE PREVIOUS LIST, SINCE THAT SET
057700* FAILED.
057800*
057900* NEIGHBOUR CHARACTERS ARE CHECKED FOR THE FOLLOWING VALUES:
058000*
058100* DIRECTION  NEIGHBOUR REACHING OUT           LEFTOVERS
058200* ---------  ----------------------           ---------
058300* LEFT     60, 8F, AB, AC, BF, EE, EF, FB   4F, BA, BB, BC
058400* UP       4F, 8F, AC, BA, BC, EE, EF       60, AB, BB, BF, FB
058500* RIGHT    60, 8F, BA, BB, BC, BF, EF, FB   4F, AB, AC, EE
058600* DOWN     4F, 8F, AB, BA, BB, EE, FB       60, AC, BC, BF, EF
058700*
058800     MOVE MANY-LOW-VALUES TO BOX-CAR-VALUES.
058900   BOX-LEFT-CHECK.
059000     IF IX2B NOT > LEFT-MARGIN-INDEX THEN
059100       GO TO BOX-NO-LEFT-SPOKE.
059200     MOVE CHAR-IN (IX2 IX2B - 1) TO WORK-CHAR.
059300     IF WORK-CHAR = '-' OR 'ì' OR '¨' OR 'ö' OR '¿' OR 'î' OR
059400           'ï' OR 'û' THEN
059500       GO TO BOX-LEFT-SPOKE.
059600     IF CHAR-IN (IX2 IX2B) = '-' OR '¿' THEN
059700       IF WORK-CHAR = '×' OR 'ª' OR '³' OR '¼' THEN
059800         GO TO BOX-LEFT-SPOKE.
059900   BOX-NO-LEFT-SPOKE.
060000*    (REMOVE LEFT SPOKE; VALUE IS X'01')
060100     MOVE '' TO BOX-CAR-1.
060200   BOX-LEFT-SPOKE.
060300   BOX-TOP-CHECK.
060400     IF IX2 NOT > 1 THEN
060500       GO TO BOX-NO-TOP-SPOKE.
060600*    (CHECK FOR 15-PITCH DESCENDER FROM STACK/MERGE ROUTINES.)
060700     IF CHAR-IN (IX2 - 1 IX2B) = 'ð' THEN
060800       GO TO BOX-TOP-SPOKE.
060900     IF CHAR-IN (IX2 IX2B) = '×' THEN
061000       IF CHAR-IN (IX2 - 2 IX2B) = '-' OR '¨' OR '³'
061100             OR '¿' OR 'û' THEN
061200         GO TO BOX-TOP-SPOKE.
061300   BOX-NO-TOP-SPOKE.
061400*    (REMOVE TOP SPOKE; VALUE IS X'02')
061500     MOVE '' TO BOX-CAR-2.
061600   BOX-TOP-SPOKE.
061700   BOX-RIGHT-CHECK.
061800     IF IX2B NOT < RIGHT-MARGIN-INDEX THEN
061900       GO TO BOX-NO-RIGHT-SPOKE.
062000     MOVE CHAR-IN (IX2 IX2B + 1) TO WORK-CHAR.
062100     IF WORK-CHAR              = '-' OR 'ì' OR 'ª' OR
062200           '³' OR '¼' OR '¿' OR 'ï' OR 'û' THEN
062300       GO TO BOX-RIGHT-SPOKE.
062400     IF CHAR-IN (IX2 IX2B) = '¿' OR '-' THEN
062500       IF WORK-CHAR              = '×' OR '¨' OR 'ö'
062600             OR 'î' THEN
062700         GO TO BOX-RIGHT-SPOKE.
062800   BOX-NO-RIGHT-SPOKE.
062900*    (REMOVE RIGHT SPOKE; VALUE IS X'04')
063000     MOVE '¦' TO BOX-CAR-4.
063100   BOX-RIGHT-SPOKE.
063200   BOX-BOTTOM-CHECK.
063300     IF IX2 NOT < SAVE-INDEX-A THEN
063400       GO TO BOX-NO-BOTTOM-SPOKE.
063500     MOVE CHAR-IN (IX2 + 2 IX2B) TO WORK-CHAR.
063600     IF WORK-CHAR              = '×' OR 'ì' OR '¨' OR
063700           'ª' OR '³' OR 'î' OR 'û' THEN
063800       GO TO BOX-BOTTOM-SPOKE.
063900     IF CHAR-IN (IX2 IX2B) = '×' THEN
064000       IF WORK-CHAR              = '-' OR 'ö' OR '¼'
064100             OR '¿' OR 'ï' THEN
064200         GO TO BOX-BOTTOM-SPOKE.
064300   BOX-NO-BOTTOM-SPOKE.
064400*      (REMOVE BOTTOM-SPOKE; VALUE IS X'08')
064500     MOVE '©' TO BOX-CAR-8.
064600   BOX-BOTTOM-SPOKE.
064700     MOVE +15 TO BOX-CAR-VAL.
064800     SUBTRACT BOX-CAR-VAL-1 BOX-CAR-VAL-2
064900           BOX-CAR-VAL-4 BOX-CAR-VAL-8 FROM BOX-CAR-VAL.
065000*    IF RESULT REPRESENTS < 2 SPOKES, THEN THIS IS AN
065100*    ISOLATED CHARACTER; LEAVE IT ALONE.
065200     IF BOX-CAR-VAL < 3 OR = 4 OR 8 THEN
065300       GO TO BOX-SHALL-WE-LOOP.
065400     MOVE BOX-CAR TO CHAR-IN (IX2 IX2B).
065500     TRANSFORM CHAR-IN (IX2 IX2B) FROM '	§°±' TO
065600           '³¿¨û¼×ªö'.
065700     TRANSFORM CHAR-IN (IX2 IX2B) FROM '' TO 'ïîì'.
065800     IF BOX-CAR-VAL > 7 THEN
065900*      (MOVE IS OF HEX-90)
066000       MOVE 'ð' TO CHAR-IN (IX2 + 1 IX2B)
066100     ELSE
066200*      (MOVE IS OF HEX-00)
066300       MOVE '
066400     GO TO BOX-SHALL-WE-LOOP.
066500   BOX-PRE-EXIT.
066600     SET IX2 TO SAVE-INDEX.
066700     SET IX2B TO SAVE-INDEX-B.
066800   BOX-ROUTINE-EXIT.
066900     EXIT.
067000/
067100   ROTATE.
067200     SET SAVE-INDEX TO IX2.
067300     PERFORM FILL-PAGE THROUGH FILL-PAGE-EXIT.
067400     SET IX2 TO SAVE-INDEX.
067500     IF BIG-PRINT THEN
067600       PERFORM BIG-ROUTINE THROUGH BIG-ROUTINE-EXIT.
067700*    FOLLOWING ROUTINE DOES ACTUAL ROTATION.
067800     CALL 'IEBROTA2' USING MATIN MATOUT
067900           LEFT-MARGIN-INDEX RIGHT-MARGIN-INDEX.
068000     IF INITIAL-PAGE-SWITCH = '0' THEN
068100       MOVE '1' TO INITIAL-PAGE-SWITCH
068200       SET LEFT-MARGIN-INDEX TO LEFT-MARGIN-INDEX-PENDING
068300       SET RIGHT-MARGIN-INDEX TO RIGHT-MARGIN-INDEX-PENDING
068400       SET LEFT-MARGIN-ROTATED-INDEX TO
068500             LEFT-MARGIN-ROTATED-PENDING
068600       SET RIGHT-MARGIN-ROTATED-INDEX TO
068700             RIGHT-MARGIN-ROTATED-PENDING.
068800   ROTATE-EXIT.
068900     EXIT.
069000/
069100   FILL-PAGE.
069200     IF BIG-PRINT THEN
069300       IF IX2 NOT < 60 THEN
069400         GO TO FILL-PAGE-EXIT
069500       ELSE
069600         NEXT SENTENCE
069700     ELSE
069800       IF IX2 NOT < 120 THEN
069900         GO TO FILL-PAGE-EXIT.
070000     MOVE SPACES TO LINE-IN (IX2).
070100     MOVE MANY-LOW-VALUES TO LINE-IN (IX2 + 1).
070200     SET IX2 UP BY 2.
070300     GO TO FILL-PAGE.
070400   FILL-PAGE-EXIT.
070500     EXIT.
070600/
070700   BIG-ROUTINE.
070800     CALL 'IEBROTA3' USING LINE-IN (59) LINE-IN (117).
070900   BIG-ROUTINE-EXIT.
071000     EXIT.
071100*
071200   PAGE-PRINT.
071300*  FIRST, SCAN BACKWARDS TO FIND LAST LINE OF PRINT.
071400     SET IX1 TO RIGHT-MARGIN-ROTATED-INDEX.
071500   PAGE-FIND-NEXT-LAST.
071600     IF LINE-OUT (IX1) = VERTICAL-SPACES THEN
071700       IF IX1 > 1 THEN
071800         SET IX1 DOWN BY 1
071900         GO TO PAGE-FIND-NEXT-LAST.
072000*  PRINT FIRST LINE OF THIS SHEET.
072100     MOVE LINE-OUT (1) TO LOUT-LINE.
072200     WRITE LOUT AFTER ADVANCING TO-HEAD-OF-FORM.
072300*  WAS THERE ONLY ONE LINE ON THIS PAGE?
072400     IF IX1 = 1 THEN
072500       GO TO PAGE-PRINT-EXIT.
072600*  PRINT BALANCE OF SHEET BUT SKIP BLANK VERTICAL LINES.
072700     SET SAVE-INDEX TO IX1.
072800     SET IX1 TO 2.
072900   PAGE-NEXT-LINE-LOOP.
073000     MOVE +1 TO THE-APPROPRIATE-NUMBER-OF.
073100   PAGE-NEXT-LINE-BUT-SKIPPED.
073200     IF LINE-OUT (IX1) = VERTICAL-SPACES THEN
073300       ADD 1 TO THE-APPROPRIATE-NUMBER-OF
073400       SET IX1 UP BY 1
073500       GO TO PAGE-NEXT-LINE-BUT-SKIPPED.
073600     MOVE LINE-OUT (IX1) TO LOUT-LINE.
073700     WRITE LOUT AFTER ADVANCING THE-APPROPRIATE-NUMBER-OF
073800           LINES.
073900     IF IX1 < SAVE-INDEX THEN
074000       SET IX1 UP BY 1
074100       GO TO PAGE-NEXT-LINE-LOOP.
074200   PAGE-PRINT-EXIT.
074300     EXIT.
074400/
074500   INITIALIZATION-ROUTINE.
074600* _______________________________________________________________
074700     MOVE ZEROES TO R-C, RETURN-CODE.
074800     OPEN INPUT SYSUT1 OUTPUT SYSUT2.
074900     MOVE SPACES TO MATIN.
075000*    ESTABLISH MINIMUM MARGIN VALUES FOR FIRST PAGE ROTATE,
075100*    IN ORDER THAT MATOUT MAY BE INITIALIZED.
075200     SET IX2B IX1 TO 1.
075300     SET LEFT-MARGIN-INDEX TO IX2B.
075400     SET LEFT-MARGIN-ROTATED-INDEX TO IX1.
075500     SET IX2B IX1 TO 90.
075600     SET RIGHT-MARGIN-INDEX TO IX2B.
075700     SET RIGHT-MARGIN-ROTATED-INDEX TO IX1.
075800*    ESTABLISH TRUE MARGIN VALUES.
075900     IF BIG-PRINT THEN
076000       SET IX2B IX1 TO 1
076100       SET LEFT-MARGIN-INDEX-PENDING TO IX2B
076200       SET LEFT-MARGIN-ROTATED-PENDING TO IX1
076300       SET IX2B IX1 TO 45
076400       SET RIGHT-MARGIN-INDEX-PENDING TO IX2B
076500       SET RIGHT-MARGIN-ROTATED-PENDING TO IX1
076600       MOVE +29 TO PAGE-THRESHOLD
076700*      (FOLLOWING MOVES X'00004040 ... 00004040')
076800       MOVE ALL '
076900     ELSE
077000       SET IX2B IX1 TO 7
077100       SET LEFT-MARGIN-INDEX-PENDING TO IX2B
077200       SET LEFT-MARGIN-ROTATED-PENDING TO IX1
077300       SET IX2B IX1 TO 85
077400       SET RIGHT-MARGIN-INDEX-PENDING TO IX2B
077500       SET RIGHT-MARGIN-ROTATED-PENDING TO IX1
077600       MOVE +59 TO PAGE-THRESHOLD.
077700     SET IX2 TO 1.
077800   INITIALIZATION-ROUTINE-EXIT.
077900     EXIT.
