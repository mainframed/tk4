XACFLGNI CSECT                         DEFINE CSECT
***********************************************************************
*
*     THIS IS THE ACF2 TSO LOGON PRE-VALIDATION EXIT.
*     ITS PURPOSE IS TO:
*     1) VERIFY NEW PASSWORDS WHEN ENTERED AT LOGON TIME.
*
*     INPUT PARMS: R0 - ADDR OF ACF2 ACVALD
*                  R1 - ADDR OF LOGON WORK AREA
*
*     DATE MODIFIED: 06/04/81
*
*     CODED BY: MARK ELCONIN
*
***********************************************************************
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8                       TERMINAL TYPE
R9       EQU   9                       ADDR OF ACF2 CVT
R10      EQU   10
R11      EQU   11                      ACVALD BLOCK ADDR
R12      EQU   12                      CSECT BASE REG
R13      EQU   13                      WORKAREA BASE REG AND SAVE AREA
R14      EQU   14                      RETURN ADDR
R15      EQU   15                      RETURN CODE
*
*     HOUSEKEEPING
*
         STM   R14,R12,12(R13)         SAVE REGISTERS
         LR    R12,R15                 SET REG 12 TO ENTRY ADDR
         USING XACFLGNI,R12            ESTABLISH ADDRESSABILITY
         LR    R11,R0                  SAVE ACVALD ADDR
         USING ACVALD,R11              ESTABLISH ADDRESSABILITY
         LR    R2,R13                  SAVE ADDR OF CALLING SAVE AREA
         GETMAIN RU,LV=WORKSIZE        GET SOME CORE
         LR    R13,R1                  SAVE ADDR OF CORE OBTAINED
         USING WORKAREA,R13            ESTABLISH ADDRESSABILITY
         ST    R2,SAVEAREA+4           STORE ADDR OF CALLING SAVE AREA
         ST    R13,8(R2)               STORE ADDR OF MY SAVE AREA
*
*     NEW PASSWORD ENTERED?
*
         TM    ACVCNTL,ACVCAPSD        HAS A NEW PASSWORD BEEN ENTERED?
         BZ    RETURN0                 IF NOT, RETURN
*
*     GET THE TERMINAL TYPE
*
         L     R15,$TERM               LOAD ADDR OF ACF$TERM ROUTINE
         BALR  R14,R15
         LR    R8,R15                  SAVE RETURN CODE
*
*     PROMPT FOR NEW PASSWORD DEPENDING ON TERMINAL
*
         B     BRANCH1(8)              BRANCH TO THE RIGHT BRANCH
BRANCH1  B     PROMPT1                 3270 PROMPT
         B     PROMPT2                 2741 PROMPT
         B     PROMPT3                 TWX  PROMPT
         B     PROMPT4                 ASCII PROMPT
         B     PROMPT5                 UNDEFINED PROMPT
*
*     PROMPT IS FOR 3270
*
PROMPT1  TPUT  STRING1A,LSTRNG1A,FULLSCR
         B     ENDPROMP
*
*     PROMPT IS FOR 2741
*
PROMPT2  TPUT  STRINGXA,L'STRINGXA     PROMPT FOR NEW PASSWORD
         TPUT  STRING2A,LSTRNG2A,ASIS  OUTPUT XOUT MASK
         B     ENDPROMP
*
*     PROMPT IS FOR TWX
*
PROMPT3  TPUT  STRINGXA,L'STRINGXA     PROMPT FOR NEW PASSWORD
         TPUT  STRING3A,LSTRNG3A,ASIS  OUTPUT XOUT MASK
         B     ENDPROMP
*
*     PROMPT IS FOR ASCII CRT
*
PROMPT4  TPUT  STRING4A,LSTRNG4A,ASIS  OUTPUT ASCII SCREEN CLEAR
         TPUT  STRINGXA,L'STRINGXA     PROMPT FOR NEW PASSWORD
         TPUT  STRING3A,LSTRNG3A,ASIS  OUTPUT TWX XOUT MASK
         B     ENDPROMP
*
*     PROMPT IS FOR UNKNOWN TERMINAL
*
PROMPT5  TPUT  STRINGXA,L'STRINGXA     PROMPT FOR NEW PASSWORD
         B     ENDPROMP
ENDPROMP EQU   *
*
*     CLEAR BUFFER AND CHECK FOR PROMPT WAIT TIME LIMIT
*
         MVC   BUFFER,=CL8' '          BLANK OUT THE BUFFER
         ACFINCVT R9,NONE=ERROR1       GET THE ADDR OF THE ACF2 CVT
         USING ACCVT,R9                ESTABLISH ADDRESSABILITY
         XR    R2,R2                   ZERO R2
         ICM   R2,1,ACCTLWTM           INSERT THE WAIT LIMIT
         BZ    NOLIMIT                 NO WAIT LIMIT
*
*     GET THE PASSWORD - ENFORCE TIME LIMIT
*
         LA    R2,3(R2)                ADD 3 TO LIMIT
         SRL   R2,2                    DIVIDE BY 4
         LA    R2,1(R2)                PLUS 1
         B     TGETLOOP
WAIT     STIMER WAIT,BINTVL=FOURSEC    WAIT FOR 4 SECONDS
TGETLOOP LA    R1,BUFFER               INPUT BUFFER ADDR
         ICM   R1,8,=X'90'             SET FLAGS:TGET,NOWAIT
         LA    R0,8                    BUFFER LENGTH
         TGET  (1),(0),R               ISSUE TGET SVC
         LA    R0,4                    LOAD CONSTANT
         CR    R15,R0                  CHECK TGET RETURN CODE
         BL    REPLIED                 USER HAS REPLIED
         BH    ERROR2                  TGET ERROR
         BCT   R2,WAIT                 GO WAIT AND CHECK AGAIN
         B     ERROR3                  TIME IS UP - CANCEL SESSION
*
*     GET THE PASSWORD - NO TIME LIMIT
*
NOLIMIT  LA    R1,BUFFER               INPUT BUFFER ADDR
         ICM   R1,8,=X'80'             SET FLAGS:TGET,WAIT
         LA    R0,8                    BUFFER LENGTH
         TGET  (1),(0),R               ISSUE TGET SVC
*
*     CHECK THE PASSWORD
*
REPLIED  OC    BUFFER,=CL8' '          TRANSLATE TO UPPER CASE
         CLC   BUFFER,ACVNPSWD         PASSWORD CONFIRMED?
         BNE   ERROR4                  IF NOT, CANCEL SESSION
         B     RETURN0
*
*     ERROR CONDITIONS
*
ERROR1   TPUT  ERRMSG1,L'ERRMSG1,,NOWAIT,NOHOLD
         B     ERROR
ERROR2   TPUT  ERRMSG2,L'ERRMSG2,,NOWAIT,NOHOLD
         B     ERROR
ERROR3   TPUT  STRINGXB,L'STRINGXB,,NOWAIT,NOHOLD (MOVE TO A NEW LINE)
         TPUT  ERRMSG3,L'ERRMSG3,,NOWAIT,NOHOLD
         B     ERROR
ERROR4   TPUT  ERRMSG4,L'ERRMSG4,,NOWAIT,NOHOLD
ERROR    LA    R15,8                   SET RET CODE TO CANCEL SESSION
         B     RETURN
*
*     TERMINATE
*
RETURN0  XR    R15,R15                 SET RETURN CODE TO ZERO
RETURN   LR    R1,R13                  SAVE PTR TO GETMAINED SAVE AREA
         LR    R2,R15                  SAVE RETURN CODE
         L     R13,SAVEAREA+4          LOAD ADDR OF CALLING SAVE AREA
         FREEMAIN R,LV=WORKSIZE,A=(R1) FREE THE CORE WE GOT
         LR    R15,R2                  PUT RETURN CODE IN R15
         L     R14,12(R13)             RESTORE R14
         LM    R0,R12,20(R13)          RESTORE R0 THROUGH R12
         BR    R14                     RETURN
*
*     CONSTANTS AND STORAGE RESERVATIONS
*
FOURSEC  DC    F'400'
STRINGXA DC    C'ACFLUOR1 ACF2, NEW PASSWORD SPECIFIED, CONFIRM - '
STRINGXB DC    C' '
STRING1A DC    X'F3'                   WCC
         DC    X'114040'               SBA
         DC    X'3C404000'             RA
         DC    X'1D'                   SF
         DC    X'E8'                   AB
         DC    C'ACFLUOR1 ACF2, NEW PASSWORD SPECIFIED, CONFIRM - '
         DC    X'1D'                   SF
         DC    X'4C'                   AB
         DC    CL8' '                  PASSWORD
         DC    X'1D'                   SF
         DC    X'E8'                   AB
         DC    X'114040'               SBA
         DC    X'05'                   PT
         DC    X'13'                   IC
LSTRNG1A EQU   *-STRING1A
STRING2A DC    8C'X'                   2741 XOUT STRING
         DC    8X'16'
         DC    8C'N'
         DC    8X'16'
         DC    8C'Z'
         DC    8X'16'
         DC    8C'M'
         DC    8X'16'
LSTRNG2A EQU   *-STRING2A
STRING3A DC    8C'X'                   TWX  XOUT STRING
         DC    X'151717171717'
         DC    8C'N'
         DC    X'151717171717'
         DC    8C'Z'
         DC    X'151717171717'
         DC    8C'M'
         DC    X'1517'
LSTRNG3A EQU   *-STRING3A
STRING4A DC    X'A12FA11C1A270C0D'     ASCII SCREEN CLEAR
LSTRNG4A EQU   *-STRING4A
ERRMSG1  DC    C'ACFLUOR2 ACF2, ERROR LOCATING ACF2 CVT'
ERRMSG2  DC    C'ACFLUOR3 ACF2, ATTENTION INTERRUPT OR TGET ERROR'
ERRMSG3  DC    C'ACFLUOR4 ACF2, WAIT TIME LIMIT EXCEEDED'
ERRMSG4  DC C'ACFLUOR5 ACF2, NEW PASSWORD NOT CONFIRMED - NOT CHANGED'
$TERM    DC    V(ACF$TERM)             TERMINAL IDENTIFICATION ROUTINE
*
*     DSECTS
*
WORKAREA DSECT
SAVEAREA DS    18F
BUFFER   DS    CL8
WORKSIZE EQU   *-WORKAREA
         ACVALD ,                      THE ACF2 VALIDATION PARM BLOCK
         ACCVT  ,                      THE ACF2 CVT
         END   XACFLGNI
