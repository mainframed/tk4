         TITLE 'TSO COMMAND TO UPDATE A VTOC DSCB '
ESVCR#   EQU   10
***********************************************************************
*                                                                     *
*        THIS TSO COMMAND WILL ALLOW THOSE USER'S WITH 'SPECIAL'      *
*        ABILITY TO UPDATE A VTOC ENTRY FOR A SPECIFIED               *
*        DATASET.  THE DATASET LOCATED VIA THE CATALOG UNLESS         *
*        THE OPTIONAL 'VOLUME' IS USED.  NO CHECKING AS TO            *
*        VALIDITY IS MADE FOR BLKSIZE BEING A MULTIPLE OF LRECL       *
*        SINCE THIS MAY BE USED TO LIMIT ACCESS TO DATASETS.          *
*        EXPIRATION DATE, RECFM, AND DSORG ARE VERIFIED HOWEVER.      *
*                                                                     *
*        THE FOLLOWING IS THE SYNTAX:                                 *
*                                                                     *
*        DSCB DSNAME (NULL CAUSES LIST ONLY)                          *
*                    VOLUME(VVVVVV)  { NEWNAME(NEWNAME) } {DIRF}      *
*                    LRECL(NNNNN) BLKSIZE(NNNNN) RECFM(CCC)           *
*                    PWWRITE/PWREAD/NOPW            -O.S. PASSWORDS   *
*                    SET/RESET                      -RACF PASSWORDS   *
*                    ROUND/NOROUND                                    *
*                    CHANGED/UNCHANGED                                *
*                    EXPDT(YYDDD)/NOEXPDT                             *
*                    KEYLEN(NNN)                                      *
*                    DSORG(CC)/NODSORG                                *
*                    CCHH(CCCCHHHH)                                   *
*                                                                     *
*                    NOTE: IF 'NEWNAME' IS SPECIFIED, 'VOLUME' MUST   *
*                          ALSO BE SPECIFIED.  THIS IS REQUIRED SINCE *
*                          THIS ROUTINE WILL NOT RE-CATALOG A RE-     *
*                          NAMED DATASET.  ALSO, NO PROVISION HAS     *
*                          BEEN MADE TO HANDLE INDEXED VTOCS.         *
*                                                                     *
*                    NOTE: IF 'FORMAT4.DSCB' IS SPECIFIED, THEN       *
*                          'VOLUME' MUST ALSO BE SPECIFIED.  ALSO,    *
*                          THE 'DIRF' OPTION MAY BE USED TO SET THE   *
*                          VTOC DIRF BIT.                             *
*                                                                     *
*        REQUIREMENTS:  THIS ROUTINE USES THE 'IGX00010' TO GAIN      *
*                       AUTHORIZATION WHICH IS NEEDED TO UPDATE       *
*                       A VTOC ENTRY.                                 *
*                                                                     *
*        THIS ASSEMBLY REQUIRES THAT MACRO "IECSDSL1"(SYS1.AMODGEN)   *
*        BE AVAILABLE.                                                *
*                                                                     *
***********************************************************************
         SPACE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         EJECT
         PRINT NOGEN
DSCB     CSECT
         USING *,R12
         SAVE  (14,12),,DSCB_&SYSDATE._&SYSTIME.
         LR    R12,R15        1ST BASE REGISTER
         LR    R10,R1         SAVE CPPL PTR
         USING CPPL,R10       CPPL ADDRESSABILITY
         GETMAIN RU,LV=@WORKL
         LR    R2,R1          ADDR OF AREA TO BE CLEARED
         LA    R3,@WORKL      LENGTH OF 'TO' FIELD
         XR    R5,R5          ZERO 'FROM' LENGTH AND PAD CHAR
         MVCL  R2,R4          CLEAR WORK AREA
         USING @WORK,R13      WORKAREA ADDRESSABILITY
         ST    R13,4(,R1)     PUT ADDR OF CALLER'S SAVEAREA IN OURS
         ST    R1,8(,R13)     PUT ADDR OF OUR SAVE AREA IN CALLER'S
         LR    R13,R1         SET WORKAREA POINTER
         SPACE
         MVC   PPLUPT,CPPLUPT MOVE USER PROFILE TABLE
         MVC   PPLECT,CPPLECT MOVE ENVIRONMENT CONTROL TAB
         MVC   PPLCBUF,CPPLCBUF MOVE COMMAND BUF POINTER
         DROP  R10            DROP ADDRESSABILITY
         L     R2,CVTPTR      GET CVT POINTER
         USING CVT,R2
         L     R2,CVTTCBP     OLD/NEW POINTERS
         L     R2,4(R2)       OUR TCB POINTER
         USING TCB,R2
*        L     R15,TCBTIO     OUR TIOT POINTER
*        CLC   0(2,R15),=C'C9' IS THIS SYSTEMS USER?
*        BNE   ERR10          NO, ERROR EXIT
         L     R2,TCBJSCB     JSCB POINTER
         USING IEZJSCB,R2
         L     R2,JSCBPSCB    PSCB POINTER
         USING PSCB,R2
         TM    PSCBATR2,X'80' DO WE HAVE SPECIAL ABILITY?
         BZ    ERR10          NO, ERROR EXIT
         LA    R1,PPLUPT      ADDRESS OF PARSE PARM LIST
         LINK  EP=IKJPARS     CALL TSO COMMAND PARSE
         L     R11,ANSWER     GET POINTER TO PARSE ANSWER
         USING IKJPARMD,R11   GAIN ADDRESSABILITY TO ANSWER
         L     R1,DSN         GET POINTER TO DSNAME
         LH    R2,DSN+4       GET SIZE OF DSNAME
         CH    R2,=H'12'      COULD THIS BE VTOC REQUEST?
         BNE   DSNSKIP        NO, CONTINUE
         CLC   0(12,R1),=CL12'FORMAT4.DSCB' IS THIS VTOC REQUEST?
         BNE   DSNSKIP        NO, CONTINUE
         TM    USERSER+6,X'80' WAS VOL SER SPECIFIED?
         BZ    ERR10          NO, INVALID REQUEST
         TM    USERDSN+6,X'80' WAS NEWNAME SPECIFIED?
         BO    ERR10          YES, INVALID REQUEST
         STH   R2,DSNL        SET SIZE OF DSNAME FOR SVC 99
         BCTR  R2,R0          DECREMENT FOR EXECUTE
         EX    R2,MOVEDSN     MOVE TO TEXT UNIT FOR DYNALLOC
         LA    R1,VTOCDSN     RESET DSNAME POINTER
         LA    R2,44          RESET LENGTH
         B     VTOCDONE       BRANCH AROUND NON-VTOC CODE
DSNSKIP  STH   R2,DSNL        SET SIZE OF DSNAME FOR SVC 99
         BCTR  R2,R0          DECREMENT FOR EXECUTE
         EX    R2,MOVEDSN     MOVE TO TEXT UNIT FOR DYNALLOC
VTOCDONE EX    R2,MOVENAME    MOVE TO WORK AREA FOR LOCATE/OBTAIN
         EX    R2,MOVEKEY     MOVE TO KEY FOR EXCP
         TM    USERSER+6,X'80' WAS VOL SER SPECIFIED?
         BZ    FINDIT         NO, USE CATALOG TO LOCATE
         L     R1,USERSER     GET ADDR OF VOL SER
         LH    R2,USERSER+4   GET SIZE OF PARM
         BCTR  R2,R0          DECREMENT FOR EXECUTE
         MVC   VOLSER(0),0(R1) EXECUTED MOVE INSTRUCTION
         EX    R2,*-6         MOVE VOLSER TO OBTAIN AREA
         TM    USERDSN+6,X'80' WAS NEWNAME SPECIFIED?
         BZ    OBTAIN         NO, TRY TO FIND IT
         MVC   KEY,=CL44' '   CLEAR ORIGINAL DSNAME
         L     R1,USERDSN     GET ADDR OF PARM
         LH    R2,USERDSN+4   GET SIZE OF PARM
         BCTR  R2,R0          DECREMENT FOR EXECUTE
         EX    R2,MOVEKEY     UPDATE KEY FOR EXCP
         OI    FLAG,MOD       INDICATE MODIFIED DSCB
         B     OBTAIN         TRY TO GET DSCB
FINDIT   TM    USERDSN+6,X'80' WAS NEWNAME SPECIFIED?
         BO    ERR10          YES, INVALID REQUEST
         LOCATE LOCATE        TRY TO LOCATE THE NAMED DATASET
         LTR   R15,R15        FOUND?
         BNZ   ERR1           NO, EXIT WITH MSG
         MVC   VOLSER,DATA+6  MOVE THE VOLSER FOR OBTAIN AND DYNALLOC
OBTAIN   OBTAIN CAMLST        LOCATE THE FORMAT 1 DSCB
         LTR   R15,R15        DID IT WORK?
         BNZ   ERR2           NO, EXIT AS ERROR
         MVC   CCHHR,DATA+96  SAVE CCHHR IN IOB FOR RE-WRITE
         MVC   TPUTVOL,VOLSER MOVE VOLSER FOR MSG
         LA    R1,DA99PTR     ADDRESS OF DYNALLOC PARM POINTER
         SVC   99             ALLOCATE VTOC ON VOLUME
         LTR   R15,R15        ALLOC O.K?
         BNZ   ERR3           NO, ERROR MSG AND EXIT
*        CLEAR THE SCREEN
         LA    0,3            GET TPUT OPTION BYTE
         SLL   0,24           SHIFT TO HIGH ORDER
         LA    1,=X'F1115D7E114040133C404000'
         OR    1,0            COPY TPUT OPTION
         LA    0,12           SET SIZE FOR TPUT
         SVC   93             CLEAR THE SCREEN
*
         LA    R1,PREFIX      GET ADDRESS OF PREFIX AND DSNAME
         LA    R0,72          SIZE OF PREFIX/DSNAME/VOLSER
         SVC   93             WRITE OUT DSNAME
         BAL   R14,DISPLAY    DISPLAY ORIGINAL DSCB
*
         EJECT
*
*        THE DSCB HAS BEEN READ IN, AND THE DATASET ALLOCATED
*                  NOW PROCESS THE REQUEST
*
PROCESS  SR    R15,R15        CLEAR FOR ICM
         TM    #DIRF+1,X'01'  WAS OPTION REQUESTED?
         BZ    NODIRF         NO, CONTINUE
         CLI   DSNAME,X'04'   VALID REQUEST?
         BNE   ERR10          NO, INVALID REQUEST
         OI    DS4VTOCI,DS4DIRF TURN ON DIRF BIT IN VTOC
         OI    FLAG,MOD       INDICATE MODIFIED DSCB
         B     PUTDSCB        TO RE-WRITE DSCB
NODIRF   DS    0H
         ICM   R15,3,#ROUND   WAS OPTION REQUESTED?
         BZ    NORND          NO, CONTINUE
         CH    R15,=H'1'      ROUND = ON ?
         BNE   RNDOFF         NO, MUST BE OFF
         OI    DS1SCALO,X'01' TURN ON ROUND BIT
         B     RNDDONE        TO COMMON CODE
RNDOFF   NI    DS1SCALO,255-1 TURN OFF ROUND BIT
RNDDONE  OI    FLAG,MOD       INDICATE MODIFIED DSCB
NORND    DS    0H
         ICM   R15,3,#SET     WAS OPTION REQUESTED?
         BZ    NOSET          NO, CONTINUE
         CH    R15,=H'1'      SET = ON?
         BNE   RESET          NO, MUST BE OFF
         OI    DS1DSIND,DS1IND40 TURN ON RACF PASSWORD BIT
         B     SETDONE        TO COMMON CODE
RESET    NI    DS1DSIND,255-DS1IND40 TURN OFF RACF PASSWORD BIT
SETDONE  OI    FLAG,MOD       INDICATE MODIFIED DSCB
NOSET    DS    0H
         ICM   R15,3,#CHANGE  WAS OPTION REQUESTED?
         BZ    NOCHG          NO, CONTINUE
         CH    R15,=H'1'      CHG = YES?
         BNE   UNCHG          NO, MUST BE OFF
         OI    DS1DSIND,DS1IND02 TURN ON CHANGE BIT
         B     CHGDONE        TO COMMON CODE
UNCHG    NI    DS1DSIND,255-DS1IND02 TURN OFF CHANGE BIT
CHGDONE  OI    FLAG,MOD       INDICATE MODIFIED DSCB
NOCHG    DS    0H
         ICM   R15,3,#PROT    WAS OPTION REQUESTED?
         BZ    NOTPROT        NO, TRY NEXT OPTION
         CH    R15,=H'1'      WAS PWREAD SPECIFIED?
         BH    NOTPWR         NO, CHECK NEXT
         NI    DS1DSIND,255-DS1IND04 TURN OFF PASSWORD+WRITE BIT
         OI    DS1DSIND,DS1IND10 TURN ON PASSWORD BIT
         B     PROTDONE       CONTINUE
NOTPWR   CH    R15,=H'2'      WAS PWWRITE SPECIFIED?
         BH    UNPROT         NO, MUST BE NOPW
         OI    DS1DSIND,DS1IND10+DS1IND04 TURN ON PASSWORD+WRITE BIT
         B     PROTDONE       CONTINUE
UNPROT   NI    DS1DSIND,255-DS1IND10-DS1IND04 TURN OFF BOTH PW BITS
PROTDONE OI    FLAG,MOD       INDICATE MODIFIED DSCB
         SPACE 2
NOTPROT  ICM   R15,3,#EXPDT   WAS OPTION REQUESTED?
         BZ    NOTEXPDT       NO, TRY NEXT OPTION
         CH    R15,=H'1'      WAS IT NOEXPDT?
         BH    SETEXPDT       NO, PROCESS USER REQUEST
         XC    DS1EXPDT,DS1EXPDT RESET EXPIRATION DATE
         OI    FLAG,MOD       INDICATE MODIFIED DSCB
         B     NOTEXPDT       CONTINUE
SETEXPDT L     R1,EXPDT       GET EXPIRATION DATE ADDR
         L     R1,0(R1)       GET EXPIRATION VALUE
         C     R1,=F'99365'   WITHIN LIMIT?
         BH    ERR10          NO, INVALID REQUEST
         CVD   R1,DBLWORD     CONVERT BACK TO DECIMAL
         SR    R0,R0          CLEAR FOR IC
         SR    R1,R1          CLEAR FOR ICM
         IC    R0,DBLWORD+5   ISOLATE YEAR FIELD
         CH    R0,=H'153'     CHECK MAX YEAR (HEX 99)
         BH    ERR10          HIGH, INVALID
         ICM   R1,3,DBLWORD+6 ISOLATE DATE FIELD
         SLL   R0,4           SHIFT TO MAKE ROOM FOR SIGN
         O     R0,=F'12'      ADD THE SIGN
         XC    DBLWORD,DBLWORD CLEAR WORK AREA
         ST    R0,DBLWORD+4   STORE YEAR
         CVB   R0,DBLWORD     CONVERT TO HEX
         XC    DBLWORD,DBLWORD CLEAR WORK AREA
         ST    R1,DBLWORD+4   STORE DATE
         CVB   R1,DBLWORD     CONVERT TO HEX (WHEW)
         CH    R1,=H'870'     CHECK MAX DATE (HEX 366)
         BH    ERR10          HIGH, INVALID
         STCM  R1,3,DS1EXPDT+1 DATE TO DSCB
         STC   R0,DS1EXPDT    YEAR TO DSCB
         OI    FLAG,MOD       INDICATE MODIFIED DSCB
NOTEXPDT TM    LRECL+6,X'80'  LRECL SPECIFIED?
         BZ    NOTLRECL       NO, CONTINUE
         L     R1,LRECL       ADDRESS OF LRECL
         L     R1,0(R1)       LRECL DATA
         STH   R1,DS1LRECL    UPDATE LRECL FIELD
         OI    FLAG,MOD       INDICATE MODIFIED DSCB
NOTLRECL TM    BLKSIZE+6,X'80' BLKSIZE SPECIFIED?
         BZ    NOTBLKSZ       NO, CONTINUE
         L     R1,BLKSIZE     ADDRESS OF BLKSIZE
         L     R1,0(R1)       BLKSIZE DATA
         STH   R1,DS1BLKL     UPDATE BLKSIZE FIELD
         OI    FLAG,MOD       INDICATE MODIFIED DSCB
NOTBLKSZ TM    KEYLEN+6,X'80' KEYLEN SPECIFIED?
         BZ    NOTKEYL        NO, CONTINUE
         L     R1,KEYLEN      ADDRESS OF KEYLEN
         L     R1,0(R1)       KEYLEN DATA
         STC   R1,DS1KEYL     UPDATE KEYLEN FIELD
         NI    DS1RECFM,254   INDICATE NO KEY LENGTH
         CH    R1,=H'0'       ANY KEYLENGTH?
         BZ    NOKEYL         NO, ALL DONE
         OI    DS1RECFM,1     INDICATE KEYLEN IN USE
NOKEYL   OI    FLAG,MOD       INDICATE MODIFIED DSCB
NOTKEYL  LH    R15,RECFM      PICK UP RECFM
         LTR   R15,R15        SPECIFIED ?
         BZ    NOTRECFM       NO, CONTINUE
         LA    R15,RECFMT(R15) ADDRESS OF RECFM DATA
         MVC   DS1RECFM,0(R15) MOVE RECORD FORMAT
         OI    FLAG,MOD       INDICATE MODIFIED DSCB
NOTRECFM ICM   R15,3,#DSORG   WAS OPTION REQUESTED?
         BZ    NOTORG         NO, TRY NEXT OPTION
         CH    R15,=H'1'      WAS IT NODSORG?
         BH    SETDSORG       NO, PROCESS USER REQUEST
         XC    DS1DSORG,DS1DSORG DSORG UNKNOWN
         OI    FLAG,MOD       INDICATE MODIFIED DSCB
         B     NOTORG         CONTINUE
SETDSORG LH    R15,DSORG      PICK UP DSORG
         LTR   R15,R15        SPECIFIED ?
         BZ    NOTORG         NO, CONTINUE
         SLL   R15,1          MULTIPLY BY TWO
         LA    R15,DSORGT(R15) ADDRESS OF DSORG DATA
         MVC   DS1DSORG,0(R15) MOVE DSORG DATA
         OI    FLAG,MOD       INDICATE MODIFIED DSCB
NOTORG   TM    CCHH+6,X'80'   CCHH SPECIFIED?
         BZ    NOTCCHH        NO, CONTINUE
         L     R1,CCHH        ADDRESS OF CCHH DATA
         CLC   CCHH+4(2),=H'8' VALID NUMBER OF CHARS ?
         BNE   ERR10          NO, INVALID OPERAND
         LA    R15,DS1EXT1+2  ADDRESS OF RECEIVING FIELD
         LA    R2,4           LOOP CONTROL
CCHHL1   LA    R14,2          LOOP CONTROL
CCHHL2   IC    R0,0(R1)       PICK UP CHARACTER
         N     R0,=F'15'      STRIP ALL BUT 4 BITS
         CLI   0(R1),C'9'     VALID NUMERIC?
         BH    ERR10          NO, INVALID OPERAND
         CLI   0(R1),C'0'     VALID NUMERIC?
         BNL   CCHHOK         YES, CONTINUE
         CLI   0(R1),C'F'     VALID ALPHA?
         BH    ERR10          NO, INVALID OPERAND
         CLI   0(R1),C'A'     VALID ALPHA?
         BL    ERR10          NO, INVALID OPERAND
         AH    R0,=H'9'       BUMP DECIMAL TO HEX DIGIT
CCHHOK   SLL   R3,4           SHIFT PREVIOUS LEFT
         OR    R3,R0          OR INTO WORK REG
         LA    R1,1(R1)       BUMP TO NEXT CHAR
         BCT   R14,CCHHL2     GET NEXT CHARACTER
         STC   R3,0(R15)      PLACE CHAR INTO CCHH FIELD
         LA    R15,1(R15)     BUMP TO NEXT FIELD
         BCT   R2,CCHHL1      GET NEXT BYTE
         OI    FLAG,MOD       INDICATE MODIFIED DSCB
NOTCCHH  EQU *
         EJECT
PUTDSCB  TM    FLAG,MOD       WAS DSCB MODIFIED?
         BZ    EXIT           NO, ONLY WANTED IT DISPLAYED
         CLC   DSNAME,KEY     WAS NEWNAME SPECIFIED?
         BE    SKIPIT         NO, SKIP NEW NAME DISPLAY
         LA    R1,=CL1' '     GET BLANK CHAR (NEW LINE)
         LA    R0,1           SIZE FOR TPUT
         SVC   93             BLANK LINE TPUT
         LA    R1,PREFIX2     GET ADDRESS OF PREFIX AND DSNAME
         LA    R0,56          SIZE OF PREFIX/DSNAME/VOLSER
         SVC   93             WRITE OUT NEWNAME
SKIPIT   BAL   R14,DISPLAY    DISPLAY UPDATED DSCB
         MVC   DCB+DCBDDNAM-IHADCB(8),DDNAME MOVE DDNAME TO DCB
         RDJFCB DCB           GET THE JFCB FOR VOLUME
         LTR   R15,R15        DID JFCB COME IN?
         BNZ   ERR4           NO, ERROR (SAME AS OPEN FAILURE)
         MVI   JFCB,4         BUILD THE DSNAME
         MVC   JFCB+1(43),JFCB FOR THE VTOC
         LA    R15,ESVCR#
         LA    R1,1
         SVC   109
         LTR   R15,R15
         BNZ   EXIT
         OPEN  (DCB,(UPDAT)),TYPE=J OPEN THE VTOC (AUTHORIZED)
         TM    DCB+DCBOFLGS-IHADCB,DCBOFOPN DID FILE OPEN?
         BZ    ERR4           NO, ERROR EXIT
         LA    R1,IOB         SET PTR TO THE IOB
         XC    ECB,ECB        CLEAR THE ECB
         SVC   0              ISSUE EXCP SVC
         WAIT  ECB=ECB        WAIT ON I/O
         CLOSE DCB            CLOSE THE DCB
         LA    R1,2
         LA    R15,ESVCR#
         SVC   109
         CLI   ECB,127        DID EXCP COMPLETE NORMALLY?
         BNE   ERR5           NO, INFORM USER
EXIT     IKJRLSA ANSWER       FREE PARSE STORAGE
         DROP  R11            FREE PDL USING REGISTER
         LR    R1,R13         ADDR OF AREA TO FREE
         L     R2,@RC         GET FINAL RETURN CODE
         L     R13,4(,R13)    LOAD PREVIOUS SAVE AREA
         ST    R2,16(,R13)    STORE RETURN CODE
         FREEMAIN RU,A=(1),LV=@WORKL
         RETURN (14,12)
         EJECT
DISPLAY  DS    0H
         ST    R14,@SAV14     SAVE REG
         LA    R1,=C' '       BLANK
         LA    R0,1           SIZE
         SVC   93             BLANK LINE
         LA    R3,3           SET LINE COUNT
         LA    R2,DATA        ADDR OF DATA TO WRITE
         LA    R4,DISPT       POINT TO INITIAL DISPLACEMENT
LOOP1    LA    R15,8          WORDS PER LINE
         LA    R1,BUF         ADDRESS OF OUTPUT BUFFER
LOOP2    UNPK  0(9,R1),0(5,R2) UNPACK WORD
         MVI   8(R1),C' '     ADD SPACING
         TR    0(8,R1),TBL-240 MAKE PRINTABLE
         LA    R1,9(R1)       BUMP TO NEXT FIELD
         LA    R2,4(R2)       BUMP TO NEXT FIELD
         BCT   R15,LOOP2      PROCESS NEXT WORD
         LA    R0,78          SIZE OF LINE
         MVC   DISP,0(R4)     ADD DISPLACEMENT
         LA    R4,4(R4)       BUMP DISPLACEMENT
         LA    R1,DISP        ADDR OF LINE
         SVC   93             WRITE LINE OF DATA
         BCT   R3,LOOP1       PROCESS NEXT LINE
         L     R14,@SAV14     RESTORE REG
         BR    R14            RETURN TO CALLER
MOVENAME MVC   DSNAME(0),0(R1) MOVE DSNAME TO HOLD AREA
MOVEDSN  MVC   DA99DSN(0),0(R1) MOVE DSNAME FOR DYNALLOC
MOVEKEY  MVC   KEY(0),0(R1)   MOVE ORIG DSN TO KEY FIELD FOR EXCP
         DC    0D'0'
TBL      DC    C'0123456789ABCDEF' HEX TRANSLATE TABLE
DISPT    DC    CL4'+2C ',CL4'+4C ',CL4'+6C' DISPLACEMENTS
DISP     DC    CL4' ',C' '    DSCB DISPLACEMENT
BUF      DC    CL80' '        TPUT BUFFER
VTOCDSN  DC    44X'04'        DSNAME OF VTOC
*
**
***
****
*****    THE FOLLOWING ARE ORDER DEPENDENT
****
***
**
*
ALIGN    DS    0D             DOUBLE WORD ALIGN
PREFIX2  DC    C'NEWNAME '    PREFIX FOR TPUT MESSAGE
         DC    CL4'-->'       ALIGN KEY (NEWNAME) WITH DATA
KEY      DC    CL44'JUNK'     NEW/OLD DATASET NAME
DATA     DS    0D,265C        DSCB WORK AREA
         ORG   DATA           BACK UP TO BEGINNING OF DSCB PROPER
         IECSDSL1 (4)         **
         ORG   DATA-44        (ONLY 96 BYTES READ BY OBTAIN)
         IECSDSL1 (1)         **
         ORG
CCW1     CCW   X'31',CCHHR,X'40',5  SEARCH-ID
CCW2     CCW   X'08',CCW1,0,0       TIC
CCW3     CCW   X'0D',KEY,0,140      WRITE KEY AND DATA
*
**
***
****
*****    END OF ORDER DEPENDENTCY
****
***
**
*
IOB      DC    0D'0'          *****
         DC    X'42'          *
         DC    XL4'0'         *
         DC    AL3(ECB)       * EXCP'S
         DC    2A(0)          *  IOB
         DC    A(CCW1)        *
         DC    A(DCB)         *
         DC    2A(0)          *
         DC    XL3'000000'    *
CCHHR    DC    XL5'00000000'  * DSCB CCHHR
*                             *****
ECB      DC    A(0)           PARSE/EXCP'S ECB
         DS    0D             DOUBLEWORD ALIGNMENT
LOCATE   CAMLST NAME,DSNAME,,DATA LOCATE CAM LIST
CAMLST   CAMLST SEARCH,DSNAME,VOLSER,DATA  TO READ THE FORMAT 1 DSCB
PREFIX   DC    C'  DSCB --> '  PREFIX FOR TPUT MESSAGE
DSNAME   DC    CL44' '         DATASET NAME FOR SEARCH
         DC    C'V('           VOL PREFIX
TPUTVOL  DC    CL6' '          VOL SER FOR TPUT
         DC    CL30')'         END OF TPUT DATA
         DS    0F
DA99PTR  DC    AL1(128),AL3(DA99RB) ADDRESS OF SVC 99 LIST
DA99RB   DC    AL1(20,01,00,00) LENGTH/VERB/FLAGS
         DC    2H'0'           ERROR/INFO CODES
         DC    A(DA99TXTP),F'0' FIRST TEXT UNIT
         DC    F'0'            FLAGS
DA99TXTP DC    A(DA99TU1,DA99TU2,DA99TU3,DA99TU4,DA99TU5)
         DC    AL1(128),AL3(DA99TUL)
DA99TU1  DC    H'2',H'1'       DSNAME TEXT UNIT
DSNL     DC    H'0'            DSNAME LENGTH
DA99DSN  DC    CL44' '         DSNAME FOR DYNALLOC
DA99TU2  DC    H'4',H'1',H'1',X'08' STATUS (SHR)
DA99TU3  DC    H'16',H'1',H'6' VOL SER KEY
VOLSER   DC    CL6' '            VOLUME SERIAL FOR DYNAM ALLOC
DA99TU4  DC    H'28',H'0'        FREE = CLOSE
DA99TU5  DC    H'21',H'1',H'8',CL8'SYSALLDA' UNIT NAME
         DS    0H
DA99TUL  DC    X'0055',H'1',H'8' RETURN DDNAME TXT UNIT
DDNAME   DC    CL8' '
ERR1     LA    R1,MSG1           POINT TO MESSAGE
         B     ERRTPUT           TO COMMON CODE
ERR2     LA    R1,MSG2           POINT TO MESSAGE
         B     ERRTPUT           TO COMMON CODE
ERR3     LA    R1,MSG3           POINT TO MESSAGE
         B     ERRTPUT           TO COMMON CODE
ERR4     LA    R1,MSG4           POINT TO MESSAGE
         B     ERRTPUT           TO COMMON CODE
ERR5     LA    R1,MSG5           POINT TO MESSAGE
         B     ERRTPUT           TO COMMON CODE
ERR10    LA    R1,MSG10          POINT TO MESSAGE
         B     ERRTPUT           TO COMMON CODE
ERRTPUT  LA    R0,32             LENGTH OF MSG
         SVC   93                ISSUE MSG
         MVI   @RC+3,8           SET RETCODE
         B     EXIT
MSG1     DC    CL32'LOCATE FAILED'
MSG2     DC    CL32'OBTAIN FAILED'
MSG3     DC    CL32'ALLOCATION FAILED'
MSG4     DC    CL32'OPEN FAILED'
MSG5     DC    CL32'EXCP FAILED'
MSG10    DC    CL32'INVALID REQUEST - IGNORED'
ANSWER   DC    F'0'            PARSE ANSWER AREA
PPLUPT   DC    F'0'            PARSE PARM LIST UPT
PPLECT   DC    F'0'            PARSE PARM LIST ECT
PPLECB   DC    A(ECB)          PARSE PARM LIST ECB
PPLPCL   DC    V(DSCBPCL)      PARSE PARM LIST PCL
PPLANS   DC    A(ANSWER)       PARSE PARM LIST ANSWER ->
PPLCBUF  DC    F'0'            PARSE PARM LIST COMMAND ->
DBLWORD  DC    D'0'            DOUBLEWORD WORK AREA
OPENLIST DC    X'87',AL3(JFCB) OPEN LIST FOR DCB
JFCB     DC    XL176'00'       JFCB AREA
FLAG     DC    X'00'           OPTION FLAGS
MOD      EQU   X'01'             MODIFIED DATA TAG
RECFMT   DC    X'00'           NULL RECFM
         DC    X'C0'           'U'
         DC    X'40'           'V'
         DC    X'44'           'VA'
         DC    X'42'           'VM'
         DC    X'50'           'VB'
         DC    X'54'           'VBA'
         DC    X'52'           'VBM'
         DC    X'58'           'VBS'
         DC    X'80'           'F'
         DC    X'84'           'FA'
         DC    X'82'           'FM'
         DC    X'88'           'FS'
         DC    X'90'           'FB'
         DC    X'94'           'FBA'
         DC    X'92'           'FBM'
         DC    X'98'           'FBS'
DSORGT   DC    X'0000'         'NULL' DSORG
         DC    X'8000'         'IS'
         DC    X'4000'         'PS'
         DC    X'2000'         'DA'
         DC    X'0200'         'PO'
         DC    X'8100'         'ISU'
         DC    X'4100'         'PSU'
         DC    X'2100'         'DAU'
         DC    X'0300'         'POU'
         DC    X'0008'         'AM'
DCB      DCB   DDNAME=WCFIELDS,                                        *
               DEVD=DA,                                                *
               DSORG=PS,                                               *
               KEYLEN=44,                                              *
               MACRF=E,EXLST=OPENLIST
         LTORG
         PRINT NOGEN
DSCBPCL  IKJPARM
DSN      IKJPOSIT DSNAME,USID,PROMPT='DATASET TO PROCESS'
#VOLSER  IKJKEYWD
         IKJNAME 'VOLUME',SUBFLD=@VOLSER
#NEWNAME IKJKEYWD
         IKJNAME 'NEWNAME',SUBFLD=@NEWNAME
#DIRF    IKJKEYWD
         IKJNAME 'DIRF'
#ROUND   IKJKEYWD
         IKJNAME 'ROUND'
         IKJNAME 'NOROUND'
#SET     IKJKEYWD
         IKJNAME 'SET'
         IKJNAME 'RESET'
#CHANGE  IKJKEYWD
         IKJNAME 'CHANGED'
         IKJNAME 'UNCHANGED'
#PROT    IKJKEYWD
         IKJNAME 'PWREAD'
         IKJNAME 'PWWRITE'
         IKJNAME 'NOPW',ALIAS=('NOPASSWORD')
#EXPDT   IKJKEYWD
         IKJNAME 'NOEXPDT'
         IKJNAME 'EXPDT',SUBFLD=@EXPDT
#BLKSIZE IKJKEYWD
         IKJNAME 'BLKSIZE',SUBFLD=@BLKSZ
#LRECL   IKJKEYWD
         IKJNAME 'LRECL',SUBFLD=@LRECL
#RECFM   IKJKEYWD
         IKJNAME 'RECFM',SUBFLD=@RECFM
#DSORG   IKJKEYWD
         IKJNAME 'NODSORG'
         IKJNAME 'DSORG',SUBFLD=@DSORG
#KEYLEN  IKJKEYWD
         IKJNAME 'KEYLEN',SUBFLD=@KEYLEN
#CCHH    IKJKEYWD
         IKJNAME 'CCHH',SUBFLD=@CCHH
@VOLSER  IKJSUBF
USERSER  IKJIDENT 'VOLSER',FIRST=ANY,OTHER=ANY,MAXLNTH=6,              *
               PROMPT='VOLUME SERIAL NUMBER FOR OBTAIN'
@NEWNAME IKJSUBF
USERDSN  IKJPOSIT DSNAME,USID,PROMPT='NEW NAME OF DATASET'
@EXPDT   IKJSUBF
EXPDT    IKJIDENT 'EXPDT',INTEG,FIRST=NUMERIC,OTHER=NUMERIC,           *
               PROMPT='DATASET EXPIRATION DATE',MAXLNTH=5
@BLKSZ   IKJSUBF
BLKSIZE  IKJIDENT 'BLKSIZE',INTEG,FIRST=NUMERIC,OTHER=NUMERIC,         *
               PROMPT='DATASET PHYSICAL BLOCK SIZE',MAXLNTH=5
@LRECL   IKJSUBF
LRECL    IKJIDENT 'LRECL',INTEG,FIRST=NUMERIC,OTHER=NUMERIC,           *
               PROMPT='DATASET LOGICAL RECORD LENGTH',MAXLNTH=5
@RECFM   IKJSUBF
RECFM    IKJKEYWD
         IKJNAME 'U'
         IKJNAME 'V'
         IKJNAME 'VA'
         IKJNAME 'VM'
         IKJNAME 'VB'
         IKJNAME 'VBA'
         IKJNAME 'VBM'
         IKJNAME 'VBS'
         IKJNAME 'F'
         IKJNAME 'FA'
         IKJNAME 'FM'
         IKJNAME 'FS'
         IKJNAME 'FB'
         IKJNAME 'FBA'
         IKJNAME 'FBM'
         IKJNAME 'FBS'
@DSORG   IKJSUBF
DSORG    IKJKEYWD
         IKJNAME 'IS'
         IKJNAME 'PS'
         IKJNAME 'DA'
         IKJNAME 'PO'
         IKJNAME 'ISU'
         IKJNAME 'PSU'
         IKJNAME 'DAU'
         IKJNAME 'POU'
         IKJNAME 'AM'
@CCHH    IKJSUBF
CCHH     IKJIDENT 'CCCCHHHH',MAXLNTH=8,FIRST=NONATNUM,OTHER=NONATNUM,  *
               PROMPT='CCCCHHHH OF FIRST EXTENT OF DATASET'
@KEYLEN  IKJSUBF
KEYLEN   IKJIDENT 'KEYLENGTH',INTEG,FIRST=NUMERIC,OTHER=NUMERIC,       *
               PROMPT='KEYLENGTH FOR DATASET',MAXLNTH=3
         IKJENDP
         EJECT
@WORK    DS    0D
@SAVE    DS    18F
@SAV14   DS    F
@RC      DS    F
@WORKL   EQU   *-@WORK
         EJECT
         DCBD  DSORG=PS,DEVD=DA
         CVT   DSECT=YES
         IEZJSCB
         IKJTCB
         IKJCPPL
         IKJPSCB
         END
