SAPG0300 START 0
         DS    0H
         STM   14,12,12(13)
         BALR  3,0
         USING *,3,4
START    L     4,BASEADDR
         B     EXEC
BASEADDR DC    A(START+4096)
EXEC     ST    13,SAVE+4
         LA    13,SAVE
         REGISTER     EQATES AND USAGE
         TIME
         ST    R1,ANS
         SP    ANS,=P'7'
         UNPK  DOUBLE,ANS
         OI    DOUBLE+7,X'F0'
         MVC   DATE,DOUBLE+2
*
*     OPEN THE FILES AND CHECK THEM
*
         OPEN  (REPORT,OUTPUT)                OPEN OUTPUT FILE
         OPEN  BLOCK                          OPEN VSAM FILE
         LTR   R15,R15                        R15 OPEN
         BNZ   ERROR                          IF BAD GO TO ERROR
*
*     RETRIVE RECORDS UNTIL RECORD KEYS DO NOT MATCH
*
LOOP1    GET   RPL=POSITION                   GET THE RECORD
         LTR   R15,R15                        R15 GET
         BNZ   ERROR                          IF BAD GO TO ERROR
         MVC   RECORD,IN
         CLC   INDATE,=6X'00'
         BE    LOOP1
         CLC   INDATE,DATE
         BH    CLOSER
         ERASE RPL=POSITION
         LTR   R15,R15
         BNZ   ERROR
         B     LOOP1
CLOSER   CLOSE BLOCK                          CLOSE VSAM
         LTR   R15,R15                        R15 CLOSE
         BNZ   ABEND                          IF BAD GO TO ERROR
         CLOSE (REPORT)                       CLOSE OUTPUT FILE
         SR    R15,R15
         IC    R15,RETCD
         L     R13,SAVE+4
         RETURN (14,12),RC=(15)
         EJECT
ABEND    ABEND 1369,DUMP
ERROR    SHOWCB RPL=POSITION,AREA=FDBKAREA,LENGTH=4,FIELDS=(FDBK)
         LTR   R15,R15
         BNZ   ABEND
         MVC   HEXFIELD,FDBKCODE              MOVE
         L     R4,BCON2                       NUMBER OF CHARACTERS
         LA    R5,HEXFIELD                    HEX FIELD TO BE CONV
         LA    R6,RESULT                      ANSWER IN HERE
LOOP2    MVC   BYTE1,0(R5)                    MOVE FIRST BYTE
         UNPK  CL3,PL2                        UNPACK IT
         TR    CL3,TRTAB                      TRANSLATE IT
         MVC   0(2,R6),CL3                    MOVE TO OUT AREA
         LA    R5,1(,R5)                      LOAD NEXT BYTE
         LA    R6,2(,R6)                      INCREMENT
         BCT   R4,LOOP2                       GO DO IT AGAIN (2 TIMES)
RETURN   MVC   BAD,RESULT                     MOVE RESULT TO BAD
         MVI   RETCD,16                       MOVE IN RETURN CODE
         PUT   REPORT,ERRLINE                 WRITE THE LINE
         B     CLOSER                         GO CLOSE ALL OF THIS
*
         LTORG
REPORT   DCB   DDNAME=SYSOUT,DSORG=PS,MACRF=PM,LRECL=132
BLOCK    ACB   DDNAME=FILEVSAM,AM=VSAM,MACRF=(KEY,SEQ,OUT)
POSITION RPL   ACB=BLOCK,AM=VSAM,AREA=IN,AREALEN=160,                  X
               OPTCD=(KEY,SEQ,SYN,UPD,MVE)
*
BCON2    DC    F'2'
RESULT   DC    CL80' '
PL2      DS    0PL2
BYTE1    DC    XL1'00'
BYTE2    DC    XL1'0F'
CL3      DS    CL3
TRTAB    DC    XL256'00'
         ORG   TRTAB+X'F0'
         DC    CL16'0123456789ABCDEF'
         ORG   TRTAB+256
*
DOUBLE   DS    D
ANS      DS    F
*
DATE     DS    CL6
*
RETCD    DC    X'0'
         DC    X'0'
*
IN       DS    CL160
*
RECORD   DS    0CL160
INDATE   DS    CL6
JNAME    DS    CL8
JNUMB    DS    CL4
SEQNO    DS    CL6
         DS    CL3' '
RESTOF   DS    CL133
*
HEXFIELD DS    XL1
FDBKAREA DS    0F
         DS    XL1
R15CODE  DS    XL1
FTNCODE  DS    XL1
FDBKCODE DS    XL1
         DS    0F
*
ERRLINE  DS    0CL132
         DS    CL2
BAD      DS    CL2
         DC    CL6'  --  '
ERRMSG   DS    CL27
ERRTRANS DS    CL97
*
SAVE     DS    18F                   SAVE AREA
*
         END   SAPG0300
