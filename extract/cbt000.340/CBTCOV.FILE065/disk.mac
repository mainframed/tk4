         PRINT NOGEN
*******************************************************************
*                                                                 *
*      DISK COMMAND                                               *
*                                                                 *
*            MODIFIED BY TOYOTA MOTORS SALES, INC                 *
*            ANY QUESTIONS ABOUT THE MODIFICATIONS                *
*                       PLEASE CALL                               *
*             (213) 532-5010 EX 2210 DAVE LARSEN                  *
*                                                                 *
*            THIS COMMAND MUST BE RUN ON A SU64 SYSTEM,           *
*            ALSO THIS COMMAND DOES SUPPORT DYNAMASK.             *
*                                                                 *
*      NOTE: THIS COMMAND USES A CALL AT TWO LOCATIONS TO         *
*            SUBROUTINE CLEAR TO ERASE THE SCREEN.                *
*                                                                 *
*      NOTE: COMMAND MODIFIED BY TRW TO SUPPRESS NULL LINES.      *
*                                                                 *
*******************************************************************
 TITLE 'D U D A S D R  ---   D A S D   V S N   D I S P L A Y'
         MACRO , JVDLEAVE - V1M00 - 01/28/74
&LABEL   JVDLEAVE                                                      +
               &REGS=(14,12),                                          +
               &RC=,                                                   +
               &DSA=
.*
         LCLC  &L
.*
         AIF   ('&DSA' EQ '0').NODSA
.*
&LABEL   LH    0,2(13)
         LR    1,13
         L     13,4(13)
.*
         AIF   ('&RC' NE '(15)').FREE
.*
         LR    2,15
.*
.FREE    ANOP
.*
         FREEMAIN R,LV=(0),A=(1)
.*
.RCCHK   AIF   ('&RC' EQ '').NORC
         AIF   ('&RC' NE '(15)').RTRN
.*
         LR    15,2
.*
         AGO   .RTRNN
.RTRN    AIF   ('&RC'(1,1) NE '(').RTRNC
.*
         LR    15,&RC(1)
.*
.RTRNN   ANOP
.*
&L       RETURN &REGS,RC=(15)
         SPACE
.*
         MEXIT
.RTRNC   ANOP
.*
&L       RETURN &REGS,RC=&RC
         SPACE
.*
         MEXIT
.NORC    ANOP
.*
&L       RETURN &REGS
         SPACE
.*
         MEXIT
.NODSA   ANOP
&L       SETC  '&LABEL'
         AGO   .RCCHK
.*
         MEND
         EJECT
         MACRO
&L       JVDEQU &O
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE
.*
         MEND
         EJECT
         MACRO , JVDENTER - V1M00 - 01/28/74
&LABEL   JVDENTER                                                      +
               &BASE=(11),                                             +
               &REGS=(14,12),                                          +
               &ID=,                                                   +
               &VERSION=,                                              +
               &DSA=72,                                                +
               &ORIGIN=*,                                              +
               &CFL=YES
.*
         LCLC  &EPID,&BASR,&START
.*
.BEGIN   AIF   ('&LABEL' EQ '').IDT
.*
         SPACE
&LABEL   DS    0H
         ENTRY &LABEL
         SPACE
.*
.IDT     AIF   (T'&ID EQ 'O').IDD
&EPID    SETC  '&ID'
         AGO   .VER
.IDD     AIF   ('&LABEL' EQ '').IDC
&EPID    SETC  '&LABEL'
         AGO   .VER
.IDC     ANOP
&EPID    SETC  '&SYSECT'
.VER     AIF   (T'&VERSION EQ 'O').GEN
&EPID    SETC  '&EPID-&VERSION-&SYSDATE-&SYSTIME'
         MNOTE *,'       &EPID'
.*
.GEN     ANOP
&BASR    SETC  '&BASE(1)'
.*
&START   SETC  '&ORIGIN'
         AIF   ('&ORIGIN' NE '@').START
&START   SETC  '&SYSECT'
.START   AIF   ('&ORIGIN' EQ '*').HERE
.*
         USING &START,&BASR
         SAVE  &REGS,,&EPID
         BALR  &BASR,0
         LA    14,*-&ORIGIN
         SLR   &BASR,14
         LR    2,13
         SPACE
.*
         AGO   .GETDSA
.HERE    ANOP
.*
         USING &START,&BASR
         SAVE  &REGS,,&EPID
         LR    &BASR,15
         LR    2,13
         SPACE
.*
.GETDSA  AIF   ('&DSA' EQ '0').NOCFL
.*
         LA    3,&DSA
         GETMAIN R,LV=(3)
         ST    3,0(1)
         ST    13,4(1)
         LR    13,1
.*
         AIF   ('&CFL' EQ 'NO').NOCFL
.*
         ST    1,8(2)
.*
.NOCFL   ANOP
.*
         LM    14,04,12(2)
         SPACE
.*
         MEND
         EJECT
DUDASDR  CSECT
         SPACE
ELEWRK   DSECT
ELEMENT  DS    0CL20
ELEUNIT  DS    CL3
         DS    CL2
ELEVSN   DS    CL6
ELEDASH  DS    CL1
ELESTAT  DS    CL1
ELERASH  DS    CL1
ELERSRV  DS    CL1
         DS    CL3
ELENEXT  DS    0CL1
         SPACE
DUDASDR  CSECT
         USING    DSAWRK,R13
         USING    CVTMAP,R12
         USING    CPPL,R1
         USING    IOPL,R2
         USING    UCBOB,R10
         SPACE
         JVDENTER DSA=(DSAEND-DSAWRK),BASE=(R11),VERSION=&SYSPARM
         SPACE
         CALL     CLEAR                  ERASE THE SCREEN
         LA       R2,IOPLIST
         MVC      IOPLECT,CPPLECT
         MVC      IOPLUPT,CPPLUPT
STARTD   XC       ECB,ECB
         XC       PREFIX(4),PREFIX
         LA       R15,L'BUFFER+4
         STH      R15,PREFIX
         L        R12,CVTPTR
         L        R7,CVTILK2
         XR       R10,R10
         EJECT
         CLI   ANSWER,C' '               CHECK FOR FIRST TIME THRU
         BE    FIRSTIME                  IF YES THEN GOTO FIRSTIME
         NI    FLAG,255-ONYES            TURN OFF FLAG
BAD      TPUT  MESSAGE2,L'MESSAGE2       PUT OUT ****************
         TPUT  MESSAGE,L'MESSAGE         PUT OUT
         TPUT  MESSAGE1,L'MESSAGE1               PROPTING MESSAGE
         MVC   ANSWER(6),=CL6' '         BLANK OUT ANSWER
         TGET  ANSWER,L'ANSWER           GET THE SEARCH ARGUEMENT
ERASE    CALL  CLEAR                     ERASE THE SCREEN
         OC    ANSWER,UPCASE             TRANS ANSWER TO UP CASE
         LR    R8,R1                     LOAD LENGHT OF TGET INTO R8
         BCTR  R8,0                      SUBTRACT 1 FORM THE LENGHT
         CLI   ANSWER,C'/'               CHECK FOR GENERIC NAME
         BE    GENERIC                   IF YES THEN GOTO GENERIC
         CLI   ANSWER,C' '               CHECK FOR SAME SCREEN SHOWING?
         BE    SAMESEAR                  YES, THEN GOTO SAMESEAR
         MVC   LASTENT(6),=CL6' '        MOVE BLANKS TO LASTENT
         EX    R8,MOVETEMP               MOVE ANSWER TO TEMP LOCATION
         LR    R9,R8                     SAVE THE LENTGH OF LAST TGET
         CLC   ANSWER(3),=CL3'ALL'       DO YOU WANT TO SEE ALL?
         BE    DULINE                    YES, THEN GOTO DULINE
         CLC   ANSWER(3),=CL3'END'       WANT TO TERMINATE THE PROGRAM?
         BE    DONE                      YES, THEN GOTO DONE
         OI    FLAG,ONYES                TURN ON FLAG
         B     DULINE                    BRANCH AROUND SAMESEAR
         SPACE 2
         EJECT
*    ****************************************************************
*    *     GENERIC - THIS ROUTINE WILL SEARCH THE EDT TO FIND A     *
*    *  MATCHING GENERIC NAME AND PRINT ALL THE VOLSERS ASSOCIATED  *
*    *  WITH IT.                                                    *
*    *                                                              *
*    *    FIRST THE UCB LOOK UP TABLE IS FOUND.                     *
*    *                                                              *
*    *    SECOND THE UNITS THAT MAP ONTO THE GENERIC NAME SPECIFIED *
*    *  ARE SAVED IN A TABLE. THIS TABLE IS GETMAINED. THE TABLE IS *
*    *  LARGE ENOUGH TO HOLD THE MAXIMUM # OF DEVICES.              *
*    *                                                              *
*    *     THERE ARE 5 TABLES THE ARE SEARCHED. 1) NAME TABLE -     *
*    *  WHICH CONTAINAS THE GENERIC NAME, # OF GENERICS, POINTER TO *
*    *  THE FIRST GENERIC. 2) GENERIC TABLE - WHICH CONTAINS THE    *
*    *  # OF GROUPS, AND POINTER TO THE FIRST GROUP. 3) GROUP       *
*    *  POINTER - WHICH CONTAINS THE POINTER TO THE GROUP           *
*    *  ASSOCIATED TO A PARTICULAR UCB. 4). GROUP DESCRIPTOR TABLE  *
*    *  WHICH CONTAINS # OF DEVICES IN THIS GROUP, AND A POINTER TO *
*    *  THE FIRST DEVICE IN THIS GROUP. 5) DEVICE LIST - WHICH HAS  *
*    *  INDEX TO UCB.                                               *
*    ****************************************************************
         EJECT
********************************************************************
* **************************************************************** *
* *    THE FOLLOWING IS A SAMPLE OF HOW THE TABLES ARE LINKED    * *
* **************************************************************** *
********************************************************************
         SPACE
**********************************************************************
* **********************************     *****************************
* *          NAME TABLE            *     *      GENERIC TABLE        *
* *________________________________*     *___________________________*
* × LOOK UP ×  # OF   × POINTER TO ×     × UCB    × # OF ×POINTER TO ×
* ×  NAME   × GENERIC ×  GENERIC   ×     × TYPE   ×GROUPS×FIRST GROUP×
* ×_________×_________×____________×     ×________×______×___________×
* ×   ..    ×   ..    ×    ..      ×     ×  ..    ×  ..  ×    ..     ×
* ×_________×_________×____________×     ×________×______×___________×
* ×   ..    ×   ..    ×    ..      ×     ×  ..    ×  ..  ×    ..     ×
* ×_________×_________×____________×     ×________×______×___________×
* ×   ..    ×   ..    ×    ..      ×  -->×  3350  ×  2   ×    @2     ×
* ×_________×_________×____________×  ×  ×________×______×___________×
* ×  SYSDA  ×    1    ×    :-------×--×  ×  ..    ×  ..  ×    ..     ×
* ×_________×_________×____________×     ×________×______×___________×
* ×   ..    ×   ..    ×    ..      ×     ×  ..    ×  ..  ×    ..     ×
* ×_________×_________×____________×     ×________×______×___________×
*
**********************************************************************
         EJECT
**********************************************************************
*                                                                    *
*      *****************         *******************************     *
*      * GROUP POINTER *         *      GROUP DESCRIPTOR       *     *
*      *     TABLE     *         *           TABLE             *     *
*      *_______________*         *_____________________________*     *
*      ×   POINTER TO  ×         × GROUP  ×  # OF ×POINTER TO  ×     *
*      ×     GROUP     ×         ×  ID    ×DEVICES×FIRST DEVICE×     *
*      ×_______________×         ×________×_______×____________×     *
*      ×      :        ×         ×   1    ×  ..   ×    ..      ×     *
*      ×_______________×         ×________×_______×____________×     *
*      ×      :        ×         ×   2    ×  ..   ×    ..      ×     *
*      ×_______________×         ×________×_______×____________×     *
*      ×      ..       ×         ×   3    ×  ..   ×    ..      ×     *
*      ×_______________×         ×________×_______×____________×     *
*      ×      ..       ×   ----->×   4    ×   5   ×    @3      ×     *
*      ×_______________×   ×     ×________×_______×____________×     *
*      ×      ..       ×   ×     ×   5    ×  ..   ×    ..      ×     *
*      ×_______________×   ×     ×________×_______×____________×     *
*      ×      ..       ×   ×  -->×   6    ×   2   ×    @4      ×     *
*      ×_______________×   ×  ×  ×________×_______×____________×     *
*  @2  ×      :--------×---×  ×  ×   7    ×  ..   ×    ..      ×     *
*      ×_______________×      ×  ×________×_______×____________×     *
*      ×      :--------×------×  ×   ..   ×  ..   ×    ..      ×     *
*      ×_______________×         ×________×_______×____________×     *
*      ×      ..       ×         ×   ..   ×  ..   ×    ..      ×     *
*      ×_______________×         ×________×_______×____________×     *
*      ×      ..       ×         ×   21   ×  ..   ×    ..      ×     *
*      ×_______________×         ×________×_______×____________×     *
*                                                                    *
**********************************************************************
         EJECT
***************************************
*                                     *
*      *****************              *
*      *  DEVICE LIST  *              *
*      *_______________*              *
*      ×   UCB INDEX   ×              *
*      ×_______________×              *
*      ×      ..       ×     ..       *
*      ×_______________×              *
*  @3         :--------×---> 128      *
*      ×_______________×              *
*      ×      :--------×---> 129      *
*      ×_______________×              *
*      ×      :--------×---> 36A      *
*      ×_______________×              *
*      ×      :--------×---> 36D      *
*      ×_______________×              *
*      ×      :--------×---> 36E      *
*      ×_______________×              *
*      ×      ..       ×     ..       *
*      ×_______________×              *
*      ×      ..       ×     ..       *
*      ×_______________×              *
*  @4  ×      :--------×---> 372      *
*      ×_______________×              *
*      ×      :--------×---> 377      *
*      ×_______________×              *
*      ×      ..       ×     ..       *
*      ×_______________×              *
*                                     *
***************************************
         EJECT
GENERIC  LTR   R8,R8                     TEST TO SEE IF R8 EQUALS ZERO
         BZ    NOFIND                    IF EQUAL TO ZERO GOTO NOFIND
         BCTR  R8,0                      SUBTRACT ON FROM TGET LENGTH
         MVC   TEMP,=CL8' '              CLEAR TEMP
         EX    R8,MOVEGEN                MOVE IN GENERIC NAME TO TEMP
         STM   R0,R15,STOREREG           SAVE THE REGISTERS
         SPACE
*      ****************************
*      *   POINT R14 TO THE EDT   *
*      ****************************
         SPACE
         L     R10,16                    LOAD ADDRESS OF CVT
         L     R10,40(R10)               LOAD ADDRESS OF EDT
         L     R9,16                     LOAD THE ADDRESS OF CVT
         L     R9,296(R9)                ADDRESS OF THE JESCT CSECT
         LA    R9,52(R9)
         L     R9,0(R9)                  POINT R9 TO THE EDT NAME TABLE
         SPACE
*      ************************************************
*      *   GET NUMBER OF ENTRIES IN THE DEVICE LIST   *
*      ************************************************
         SPACE
         USING EDTTAB,R9                 SET UP DSECT FOR EDTTAB
         L     R8,DLIST                  LOAD ADDR OF DEVICE LIST
         SPACE
*      ********************************************************
*      *   CALCULATE THE SPACE NEEDED FOR GETMAIN SAVE AREA.  *
*      *   THIS AREA WILL BE USED TO SAVE THE UCB'S THAT      *
*      *   CORRESPOND TO THE GENERIC NAME THAT WAS ENTERED.   *
*      ********************************************************
         SPACE
         CLC   GETAREA,=F'0'             CHECK TO SEE IF FIRST TIME
         BNE   AROUND                    IF NO THE BRANCH AROUND
         USING HDRDSECT,R8               SET UP DSECT FOR HEADER(DLIST)
         LA    R3,3                      LENGTH OF ENTRIES IN DLIST
         M     R2,NRNAMES                MULT (# OF ENTRIES X LENGTH)
         ST    R3,GETLENGH               SAVE LENGTH OF GETMAIN AREA
         GETMAIN   R,LV=(R3)             GET AREA FOR TABLE
         LR    R7,R1                     SAVE ADDRESS OF GETMAIN AREA
         ST    R7,GETAREA                SAVE ADDRESS OF GETMAIN AREA
         DROP  R8                        DROP DSECT FOR HEADER(DLIST)
         SPACE
*      ****************************************
*      *   POINT R9 TO THE NAME TABLE DSECT   *
*      ****************************************
         SPACE
AROUND   L     R7,GETAREA                LOAD ADDRESS OF GETMAIN AREA
         L     R9,NMTAB                  LOAD ADDRESS OF NAME TABLE
         DROP  R9                        DROP DSECT FOR EDTTAB
         SPACE
*      ****************************************************
*      *   POINT R9 TO THE FIRST ENTRY IN THE NAME TABLE  *
*      ****************************************************
         SPACE
         USING HDRDSECT,R9               SET DSECT HDRDSECT(NMTABLE)
         L     R4,NRNAMES                LOAD THE # OF ENTRIES
         LA    R9,HDRLEN(R9)             POINT R9 TO THE FIRST ENTRY
         DROP  R9                        DROP DSECT OF THE HEADER
         SPACE
*      *******************************************************
*      *   FIND THE MATCHING GENERIC NAME IN THE NAME TABLE  *
*      *******************************************************
         SPACE
         USING NMTABLE,R9                SET UP DSECT FOR GENERIC NAMES
BACK     CLC   TEMP,GENNAME              IS IT THE CORRECT GENERIC NAME
         BE    FOUNDGEN                  YES, GOTO FOUNDGEN
         LA    R9,NMTABLEN(R9)           NO, BUMP TO NEXT GENERIC NAME
         BCT   R4,BACK                   LAST ENTERY? NO TRY AGAIN
         SPACE
*      ***********************************************************
*      *   NO MATCH WAS FOUND. PUT OUT ERROR MESSAGE AND RETURN  *
*      ***********************************************************
         SPACE
NOFIND   TPUT  MESSAGE5,L'MESSAGE5       PUT OUT BAD GENERIC NAME MESS
         MVC   TEMP,=CL8' '              BLANK OUT TEMP FOR NEXT SEARCH
         B     STARTD                    START OVER
         SPACE
*      ******************************************************
*      *   FOUND A MATCH. NOW PICK UP THE NUMBER GENERICS   *
*      ******************************************************
         SPACE
FOUNDGEN L     R5,NBGENERS               LOAD NUMBER OF GENERICS
         L     R9,PTFSTENT               LOAD ADDR OF GENERIC TABLE
         DROP  R9                        DROP DSECT OF GENERIC NAME
         SPACE
*      ****************************************************************
*      *   POINT TO CORRECT GENERIC, AND PICK UP THE NUMBER OF GROUPS *
*      ****************************************************************
         SPACE
         USING GENTABLE,R9               SET UP DSECT FOR GENTABLE
         SR    R8,R8                     CLEAR R8 FOR # OF ENTRIES
         LR    R4,R9                     SAVE POINTER TO 1ST GENTAB ENT
         SPACE
*      ***************************************************************
*      *   TOTAL THE NUMBER OF GROUPS IN THE CORRESPONDING GENERICS  *
*      ***************************************************************
         SPACE
ADDGEN   A     R8,GNUBGRPS               ADD # OF ENTRIES(THIS GENERIC)
         LA    R9,GENTABLN(R9)           BUMP TO NEXT ENTRY
         BCT   R5,ADDGEN                 MORE GENERICS? YES THEN ADDGEN
         LR    R9,R4                     LOAD ADDR OF FIRST ENTRY
         L     R9,GFSTGPPT               LOAD ADDR OF FIRST GRP
         DROP  R9                        DROP DSECT FOR GENTABLE
         SPACE
*      ***********************************
*      *   POINT TO FIRST GROUP POINTER *
*      ***********************************
         SPACE
         USING GRPTABLE,R9               SET UP DSECT FOR GROUP POINTER
         SR    R5,R5                     CLEAR R5 TO COUNT # OF DEVICS
         SPACE
*      ******************************************************
*      *   COLLECT ALL UCB'S ASSINGED TO THIS GENERIC NAME  *
*      ******************************************************
         SPACE
NEXTGROP L     R4,GROPDESC               LOAD ADDR(FIRST GROUP POINTER)
         USING GDTABLE,R4                SET UP DSECT FOR GDTABLE
         L     R2,DEVICCNT               LOAD # OF DEVICES(THIS GROUP)
         L     R1,FRSTDEV                LOAD POINTER TO DEVICE LIST
ANOTHDEV LH    R3,0(R1)                  LOAD THE INDEX
         SLL   R3,1                      MULTIPLY BY 2
         AR    R3,R10                    ADD THE INDEX
         SPACE
*      *************************************************
*      *   SAVE ALL UCB'S ASSIGNED TO THIS GROUP NAME  *
*      *************************************************
         SPACE
         LH    R6,0(R3)                  LOAD THE ADR OF CORRECT UCB
         MVC   0(3,R7),13(R6)            MOVE ADDRESS INTO TABLE
         LA    R5,1(R5)                  ADD 1 TO # OF DEVICES
         LA    R7,3(R7)                  BUMP TO NEXT ENTRY IN TABLE
         LA    R1,2(R1)                  BUMP TO NEXT DEV(THIS ENTRY)
*      *************************************************
*      *  CHECK TO SEE IF ALL DEVICES HAVE BEEN FOUND  *
*      *************************************************
         BCT   R2,ANOTHDEV               LAST DEVICE,NO ANOTHDEV
         LA    R9,4(R9)                  YES,BUMP POINTER TO NEXT GROUP
*      **************************************************
*      *  CHECK TO SEE IF ALL GROUPS HAVE BEEN SEARCHED *
*      **************************************************
         BCT   R8,NEXTGROP               LAST GROUP, NO THEN NEXTGROP
         DROP  R9                        DROP DSECT FOR GDTABLE
         DROP  R4                        DROP DSECT FOR GRPTABLE
         ST    R5,NUMBGROP               SAVE # OF ENTRIES IN GETMAIN
         LM    R0,R15,STOREREG           RESTORE THE REGISTERS
         B     DULINE                    BRANCH TO DULINE
         SPACE 2
*        *****************************************************
*        **  REPEAT THE SAME SEARCH ARGUMENT (NOT GENERIC)  **
*        *****************************************************
         SPACE
SAMESEAR CLI   LASTENT,C' '              CHECK TO SEE, FIRST TIME THRU?
         BE    FIRSTIME                  IF YES, THEN GOTO FIRSTIME
         EX    R9,MOVEIN                 MOVE IN LAST SEARCH ARGUEMENT
         OI    FLAG,ONYES                TURN ON FLAG
         LR    R8,R9                     LOAD LENGTH FOR LASTENT
         B     DULINE                    BRANCH AROUND FIRSTIME
FIRSTIME MVC   ANSWER(3),=CL3'ALL'       IF BLANK INPUT DISPLAY ALL ENT
         SPACE 2
DULINE   EQU   *
         SPACE
         MVI   BUFFER,C' '
         MVC   BUFFER+1(L'BUFFER-1),BUFFER
         LA    R5,BUFFER
         LA    R4,L'BUFFER/L'ELEMENT
         LR    R14,R4                    SET NULL COUNT       ** TRW **
         USING ELEMENT,R5
         SPACE
DUUNIT   EQU   *
         CLI   0(R7),X'FF'
         BE    PUT
         LH    R15,0(R7)
         LA    R7,2(R7)
         CR    R15,R10
         BNH   DUUNIT
         LR    R10,R15
         CLI   UCBTYP+2,X'20'
         BNE   DUUNIT
         CLC   LASTCUU,UCBNAME
         BE    DUUNIT
         MVC   ELEUNIT,UCBNAME
         CLI   ANSWER,C'/'                 CHECK FOR GENERIC NAME
         BE    INTIAL                      IF GENERIC, GO TO INTIAL
         CLC   ANSWER(3),=CL3'ALL'         CHECK FOR AN "ALL" REPEAT
         BE    THERE
         TM    FLAG,ONYES                  TEST TO SEE IF FLAG IS ON
         BNO   THERE
         EX    R8,CHECK                    DO EXECUTED COMPARE
         BNE   ULOOP
THERE    MVC   ELEVSN,SRTEVOLI
         MVC   LASTCUU,UCBNAME
         TM    SRTESTAT,UCBONLI
         BO    ONLINE
         MVC   ELEVSN,=CL6'(OFF)'
         BCTR  R14,0                      REDUCE NULL COUNT  ** TRW **
         B     ULOOP
INTIAL   L     R6,GETAREA                 LOAD ADDR OF DEVICE TABLE
         L     R3,NUMBGROP                LOAD # OF DEVICES IN TABLE
GENER    CLC   0(3,R6),UCBNAME            COMPARE UCB'S
         BE    THERE                      FOUND A MATCH
         LA    R6,3(R6)                   BUMP TO NEXT DEVICE
         BCT   R3,GENER                   LAST DEVICE? NO KEEP CHECKING
         BCTR  R14,0                      REDUCE NULL COUNT  ** TRW **
         B     ULOOP                      NO MATCHING DEVICES
         SPACE
*    *******************
         SPACE
ONLINE   MVI   ELEDASH,C'-'
         MVI   ELESTAT,C'O'
         TM    SRTESTAT,UCBALOC
         BNO   NALLOC
         MVI   ELESTAT,C'A'
NALLOC   TM    SRTESTAT,UCBCHGS
         BNO   RESERV
         MVI   ELESTAT,C'P'
RESERV   CLI   UCBRESV,0
         BE    ULOOP
UCBBPRV1 TM    UCBSTAB,UCBBPRV
         BNO   UCBBPUB1
         MVI   ELERASH,C'-'
         MVC   ELERSRV(3),=C'PRV'
         B     ULOOP
         SPACE
*    *******************
         SPACE
UCBBPUB1 TM    UCBSTAB,UCBBPUB
         BNO   UCBBSTR1
         MVI   ELERASH,C'-'
         MVC   ELERSRV(3),=C'PUB'
         B     ULOOP
         SPACE
*    *******************
         SPACE
UCBBSTR1 TM    UCBSTAB,UCBBSTR
         BNO   UCBBSVL1
         MVI   ELERASH,C'-'
         MVC   ELERSRV(3),=C'STG'
         B     ULOOP
         SPACE
*    *******************
         SPACE
UCBBSVL1 MVI   ELERASH,C'-'
         MVC   ELERSRV(3),=C'RMV'             ASSUME SOMETHING
         B     ULOOP
         SPACE
ULOOP    LA    R5,ELENEXT
         BCT   R4,DUUNIT
         SPACE
*      **********************
*      *  PUT OUT ONE LINE  *
*      **********************
PUT      CLI   BUFFER,C' '
         BE    STARTD
         LTR   R14,R14                    CHECK NULL COUNT  ** TRW **
         BZ    DULINE                     SUPPRESS NULL LINE ** TRW **
         SPACE
         PUTLINE                                                       +
               PARM=PUTLINE,MF=(E,IOPLIST),ECB=ECB,                    +
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),                     +
               OUTPUT=(PREFIX,TERM,SINGLE,DATA)
         SPACE
         B     DULINE
         EJECT
*      **********************************************************
*      *  FINISHED, CHECK IF A GETMAIN HAS BEEN DONE.           *
*      *  IF SO THEN FREE THE GETMAIN SPACE, IF NOT THEN DON'T  *
*      **********************************************************
DONE     CLC   GETAREA,=F'0'        CHECK TO SEE IF A GETMAIN WAS DONE
         BE    AROUND1              IF NOT THE BRANCH AROUND
         L     R4,GETAREA           LOAD ADDRESS OF GETMAIN AREA
         L     R7,GETLENGH          LOAD LENGTH OF GETMAIN AREA
         FREEMAIN R,LV=(R7),A=(R4)  FREE UP GETMAIN SPACE
AROUND1  JVDLEAVE
         EJECT
*    ****** CONSTANCE AND EQUATES ******
         SPACE
MESSAGE  DC    CL77'HIT "ENTER" FOR REPEAT OF SAME SEARCH, "ALL" TO DISX
               PLAY DASD DEVICES, PARTIAL'
MESSAGE1 DC    CL79'OR ENTIRE VOLSER, OR "/XXX" WHERE XXX=GENERIC NAME,X
                OR "END" TO GET OUT OF DISK'
MESSAGE2 DC    CL47'                     **************************'
MESSAGE5 DC    CL44'GENERIC NAME CANNOT BE FOUND!!!!!! TRY AGAIN'
ANSWER   DC    CL9' '                 TGET INPUT SPACE
TEMP     DC    CL8' '                 USED TO COMPARE GENERIC NAMES
LASTENT  DC    CL6' '                 SAVE AREA FOR PREVIOUS TGET
UPCASE   DC    XL6'404040404040'      USED TO CONVERT ANSWER TO UP CASE
FLAG     DC    X'00'                  FLAG FOR CHECKING INPUT
ONYES    EQU   1
         DS    0F                     USED TO ALIGN STORAGE
STOREREG DS    XL60                   SAVE AREA FOR REGISTERS
GETAREA  DS    XL4'0'                 SAVE AREA FOR GETMAIN ADDRESS
GETLENGH DS    XL4                    SAVE LENGTH OF GETMAIN AREA
NUMBGROP DS    XL4                    SAVE AREA FOR # OF DEVICES
CHECK    CLC   ANSWER(0),UCBVOLI      EXECUTED COMPARE FOR NAME
MOVETEMP MVC   LASTENT(0),ANSWER      EXECUTED MOVE TO SAVE LAST TGET
MOVEIN   MVC   ANSWER(0),LASTENT      EXECUTED TO MOVE LAST TGET
MOVEGEN  MVC   TEMP(0),ANSWER+1       EXECUTED MOVE FOR GENERIC NAME
         SPACE 2
         EJECT
         LTORG
         EJECT
*    *****      DSECTS FOR EDT *****
         SPACE 2
EDTTAB   DSECT
NMTAB    DS    A                      ADDRESS OF NAME TABLE
GENTAB   DS    A                      ADDRESS OF GENERIC TABLE
GDTAB    DS    A                      ADDRESS OF GROUP DECRIPTOR TABLE
DLIST    DS    A                      ADDRESS OF DEVICE LIST TABLE
MASKTAB  DS    A                      ADDRESS OF MASK TABLE
GRPTAB   DS    A                      ADDRESS OF GROUP TABLE
PREFTAB  DS    A                      ADDRESS OF PREFIX TABLE
EDTLEN   EQU   *-EDTTAB               USED TO CALCULATE DSECT LENGTH
         SPACE 5
HDRDSECT DSECT
NRNAMES  DS    A                      ADDR (NUMBER OF ENTRIES IN TABLE)
NMTBLEN  DS    A                      ADDR (LENGTH OF ENTRIES
HDRLEN   EQU   *-HDRDSECT             USED TO CALCULATE DSECT LENGTH
         EJECT
NMTABLE  DSECT
GENNAME  DS    CL8                    LOOK UP NAME FOR THIS ENTRY
INTCODE  DS    F                      INTERNAL CODE FOR THIS ENTRY
MAINMASK DS    A                      ADDRESS OF MAIN MASK (THIS ENTRY)
NBGENERS DS    F                      NUMBER OF GENERICS (THIS NAME)
PTFSTENT DS    A                      POINTER TO 1ST REL ENT IN GENTAB
FLAGSET  DS    BL3                    FLAG SETTINGS
PADFULL  DS    0F                     PAD OUT TO WORD BOUNDARY
ALTENT   DS    A                      ADDRESS OF ALTERNATE (THIS ENTRY)
NMTABLEN EQU   *-NMTABLE              USED TO CALCULATE DSECT LENGTH
         SPACE 5
GENTABLE DSECT
GINTCODE DS    F                      INTERNAL CODE
GNUBGRPS DS    A                      ADDR (# OF GROUPS "THIS GENERIC")
GFSTGPPT DS    A                      ADDR (OF FIRST GROUP POINTER)
GENTABLN EQU   *-GENTABLE             USED TO CALCULATE DSECT LENGTH
         SPACE 5
GRPTABLE DSECT
GROPDESC DS    A                      POINTER TO GROUP DESC TABLE
GRPTABLN EQU   *-GRPTABLE             USED TO CALCULATE DSECT LENGTH
         SPACE 5
GDTABLE  DSECT
GROUPID  DS    F                      GROUP ID
DEVICCNT DS    F                      NUMBER OF DEVICES IN THE GROUP
FRSTDEV  DS    A                      ADDRESS OF FIRST DEVICE IN GROUP
GDTABLEN EQU   *-GDTABLE              USED TO CALCULATE DSECT LENGTH
         SPACE 5
DEVLIST  DSECT
DEVNAME  DS    H                      DEVICE NAME
DVLISTLN EQU   *-DEVLIST              USED TO CALCULATE DSECT LENGTH
         EJECT
DSAWRK   DSECT
SSA      DS    18F
IOPLIST  DS    07F
ECB      DS    01F
PREFIX   DS    2H
BUFFER   DS    CL(L'ELEMENT*4)
LASTCUU  DS    CL3
PUTLINE  PUTLINE MF=L
DSAEND   DS    0D
         EJECT
         IKJIOPL
         EJECT
         IKJCPPL
         EJECT
UCBWRK   DSECT
         IEFUCBOB
         SPACE
         JVDEQU
         EJECT
         CVT
         END   DUDASDR
