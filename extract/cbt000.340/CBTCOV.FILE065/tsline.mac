TSLINE   TITLE '-----  DISPLAY TERMINAL NAMES OF ALL TSO USERS  -----'
*---------------------------------------------------------------------*
*                                                                     *
*   PROGRAM NAME:  TSLINE                                             *
*                                                                     *
*   PURPOSE:       DISPLAY (SORTED BY TERMINAL NAME) THE TERMINAL     *
*                  NAMES (AND FOR TCAM, THE LINE ADDRESSES) OF ALL    *
*                  LOGGED TSO USERS, AND FLAG THOSE WHICH ARE         *
*                  DISCONNECTED.                                      *
*                                                                     *
*   AUTHOR:        UNKNOWN, PROBABLY DWIGHT HARM                      *
*                                                                     *
*   DATE:          SOMETIME IN 1977?                                  *
*                                                                     *
*   UPDATES:                                                          *
*      07/24/83 LDW  USE SPFCOPY SVC TO GET APF AUTHORIZED            *
*      07/05/83 LDW  FIX BUG WHICH CAUSED FOOTNOTE TO NOT BE PRINTED  *
*                       IF LAST DATA LINE WAS FULL                    *
*      06/22/83 LDW  CHECK FOR HUNG UP TERMINAL, SO IT WORKS ON TCAM  *
*                    DON'T OVERLAY TERMINAL NAME WITH "DISCON'D"      *
*      04/14/81 LDW  SORT BY TERMINAL NAME                            *
*                                                                     *
*---------------------------------------------------------------------*
         EJECT
TSLINE   OSENTER  EXIT=RETURN,RC=0,GETMAIN=(WORKLEN,WORKD)
LINK     EQU   R11
TABSIZE  EQU   200                      # OF INTERNAL TABLE ENTRIES
         MVI   FLAGS,0                  INIT ALL FLAGS
         SPACE 2
         TPUTX HEADER1,LINELEN*ENTRIES
         SPACE 1
         TPUTX HEADER2,LINELEN*ENTRIES
         SPACE 1
         LA    R7,TABSIZE               GET INTERNAL TABLE SIZE
         LA    R6,TABLE                 -> TABLE
         USING TABLED,R6
         SPACE 1
         L     R3,16                    -> CVT
         L     R3,556(,R3)              -> ASVT (X'22C' INTO CVT)
         LA    R3,524(,R3)              -> TOP ENTRY OF ASVT
         LA    R0,1                     SET ENTRY CODE "SET APF"
         SVC   243                      DO IT
         SPACE 3
LOOP     LA    R3,4(,R3)                -> NEXT ASVT ENTRY
         CLC   0(4,R3),=X'80000000'     IF LAST ASVT ENTRY,
         BE    LASTASID                 ... THEN THRU LOOP.
         TM    0(R3),X'80'              IF TOP BIT ON,
         BO    LOOP                     ...THEN ENTRY NOT IN USE.
         SPACE 1
         L     R1,0(,R3)                ASCB ADDRESS
         L     R5,60(,R1)               -> TSB (IN PROTECTED CORE)
         LTR   R5,R5                    IF ZERO,
         BZ    LOOP                     ... THEN BATCH JOB, SO SKIP.
         USING TSB,R5
         SPACE 1
         MVC   0(TABLELEN,R6),BLANKS    BLANK THIS ENTRY
         MVC   TUSERID,=C'STARTING'     ASSUME SPECIAL CASE
         L     R1,176(,R1)              -> USERID
         LTR   R1,R1                    ANY POINTER?
         BZ    *+10                     NO - SKIP
         MVC   TUSERID,0(R1)            MOVE JOBNAME
         SPACE 1
         MODESET KEY=ZERO               SET PROTECT KEY = 0
         SPACE 1
         UNPK  TLINEADR-1(5),TSBLINE(3) LINE ADDRESS
         MVC   TTERMID,TSBTRMID         TERMINAL SYMBOLIC NAME
*        TM    TSBFLG5,TSBVTAM          IS IT VTAM?
*        BNO   TCAM                     NO - TCAM
*        L     R1,TSBEXTNT              -> TSB EXTENSION
*        USING TSBX,R1
*        TM    TSBXFLG1,TSBXWREC        AWAITING RECONNECT?
*        BNO   *+10                     NO - SKIP
*        MVC   TTERMID,=C'DISCON''D'    YES - SAY SO
*        DROP  R1,R5
         MVI   TSTAR,C' '
         TM    TSBFLG4,TSBHUNG          HAS TERMINAL HUNG UP?
         BNO   *+12                     NO - OK
         MVI   TSTAR,C'*'               YES - REMEMBER
         OI    FLAGS,FSTAR
         DROP  R5
         SPACE 1
TCAM     MODESET KEY=NZERO              RESET PROTECT KEY TO NORMAL
         SPACE 1
         TR    TLINEADR(3),HEXTAB
         CLC   =C'000',TLINEADR         ANYTHING HERE?
         BNE   *+10                     YES - SKIP
         MVC   TLINEADR,BLANKS          NO - BLANK IT OUT
         LA    R6,TABLELEN(,R6)         BUMP TO NEXT ID AREA
         BCT   R7,LOOP                  ARRAY FULL?
         TPUTX 'INTERNAL TABLE OVERFLOW'  ...YES
         SPACE 3
LASTASID MVI   0(R6),X'FF'              SET END OF LIST INDICATOR
         SR    R0,R0                    SET ENTRY CODE "UNSET APF"
         SVC   243                      DO IT
         SPACE 2
SORTLP1  SH    R6,=Y(TABLELEN)          BACK UP TO LAST TABLE ENTRY
         DROP  R6
         LA    R1,TABLE                 -> FIRST TABLE ENTRY
         CR    R6,R1                    END AT START?
         BL    GOPRINT                  YES - DONE SORTING
         USING TABLED,R1
SORTLP2  CLC   TTERMID,TTERMID+TABLELEN DO WE NEED TO SWAP ENTRIES?
         BL    NOSWAP                   NO - SKIP
         XC    0(TABLELEN,R1),TABLELEN(R1)  YES - SO USE ...
         XC    TABLELEN(TABLELEN,R1),0(R1)  ... THE STANDARD ...
         XC    0(TABLELEN,R1),TABLELEN(R1)  ... CHEAP SWAP METHOD
         SPACE 1
NOSWAP   LA    R1,TABLELEN(,R1)         -> NEXT TABLE ENTRY
         CR    R1,R6                    END OF TABLE?
         BL    SORTLP2                  NO - CONTINUE THIS SORT PASS
         B     SORTLP1                  YES - DO NEXT PASS
         SPACE 3
GOPRINT  LA    R6,TABLE                 RESET POINTER
         USING TABLED,R6
         BAL   LINK,INIT                SET COUNTER & LINE POINTER
         USING LINE,R2
         SPACE 2
PRLOOP   CLI   0(R6),X'FF'              END OF TABLE?
         BE    TABDONE                  YES - LEAVE
         MVC   LTERMID,TTERMID          GET TERMID FROM TABLE
         MVC   LUSERID,TUSERID
         MVC   LSTAR,TSTAR
         MVC   LLINEADR,TLINEADR
         LA    R6,TABLELEN(,R6)         -> NEXT TABLE ENTRY
         LA    R2,LINELEN(,R2)          -> NEXT ENTRY ON LINE
         BCT   R4,PRLOOP                FILL THIS LINE
         BAL   LINK,PRINT               PRINT THIS LINE
         B     PRLOOP                   FILL NEXT LINE
         SPACE 2
TABDONE  CLC   MSGAREA,BLANKS           IF LINE IS ALL BLANK
         BE    *+8                      ...THEN NOTHING TO PRINT
         BAL   LINK,PRINT               AND PRINT LINE.
         TM    FLAGS,FSTAR              FOOTNOTE NEEDED?
         BNO   RETURN                   NO - LEAVE NOW
         BAL   LINK,PRINT               PRINT A BLANK LINE
         TPUTX '=== NOTE:  "*" PRECEEDING USERID INDICATES SESSION IS D$
               ISCONNECTED ==='
         B     RETURN                   LEAVE
         SPACE 3
PRINT    TPUTX MSGAREA,L'MSGAREA        PRINT THE LINE
         SPACE 1
INIT     LA    R4,ENTRIES               SET COUNTER
         LA    R2,MSGAREA               RESET OUTPUT POINTER
         MVC   MSGAREA,BLANKS           CLEAR THE PRINT LINE
         BR    LINK                     RETURN TO CALLER
         SPACE 3
         LTORG
         SPACE 2
BLANKS   DC    CL80' '
HEXTAB   EQU   *-C'0'
         DC    C'0123456789ABCDEF'
         SPACE 2
LINE     DSECT
LSTAR    DS    CL1
         DS    CL1
LUSERID  DS    CL8
         DS    CL1
LTERMID  DS    CL8
         DS    CL1
LLINEADR DS    CL3
         DS    CL3
LINELEN  EQU   *-LINE
         SPACE 1
*NTRIES  EQU   (L'MSGAREA-1)/LINELEN
ENTRIES  EQU   (80-1)/LINELEN           @#(*&%$&^ ASSEMBLER
         SPACE 2
TSLINE   CSECT                          RESUME
HEADER1  DC    3CL(LINELEN)'  USERID   TERMINAL LINE'
HEADER2  DC    3CL(LINELEN)'  ------   -------- ----'
         SPACE 2
TABLED   DSECT
TSTAR    DS    C,C
TUSERID  DS    CL8
TTERMID  DS    CL8,C
TLINEADR DS    CL3,C
TABLELEN EQU   *-TABLED
         SPACE 2
WORKD    DSECT                          RESUME
FLAGS    DS    X
FSTAR    EQU   X'80'                    FOOTNOTE MSG IS REQUIRED
         DS    0F                       ALIGNMENT
MSGAREA  DS    CL80
TABLE    DS    (TABSIZE)XL(TABLELEN)
TABLEND  DS    X
WORKLEN  EQU   *-WORKD
         EJECT
*        IKJTSB  LIST=YES,EXT=YES
         IKJTSB  LIST=YES
         SPACE 2
         END
