*/***************************************************************/
*/*                                                             */
*/* FUNCTION : LIST INFORMATION ABOUT ONLINE VOLUMES.           */
*/*            EXAMPLE : TSO USER ENTERS LISTVOL PAK            */
*/*                      ENTRIES RETURNED ARE IN THE FOLLOWING  */
*/*                      FORMAT : (SAMPLE FOR A TYPICAL SHOP)   */
*/*                                                             */
*/*           O N L I N E   V O L U M E   D I S P L A Y            */
*/*                                                             */
*VOLUME DEV USE ------- FREE ------  CONTIG   OPN  DEV DEV  VTOC ALLOC
* NAME  ADR CNT CYL  TRK  EXT  DSCB CYL  TRK  DCB TYPE STAT TYPE STATUS
*/*                                                             */
*PAK011 600 002 1421 1017 1034 0127 1120 1063 002 3380 PRV   OS  SEE
*PAK012 602 000 1400 0086 1021 0127 1000 0007 001 3380 PRV   IX  BELOW
*/*                                                             */
*/* ALLOCATION STATUS IS AS FOLLOWS                             */
*/*                                                             */
*/* A-REMOVABLE   ALLOCATED AND NOT PERM RESIDENT               */
*/* U-REMOVABLE   UNALLOC AND NOT PERM RESIDENT                 */
*/* A-PERM RSDNT  ALLOCATED AND PERM. RESIDENT                  */
*/* U-PERM RSDNT  UNALLOCATED AND PERM RESIDENT                 */
*/* VARY ISSUED   VARY HAS BEEN ISSUED FOR THIS DEVICE          */
*/* UNLOAD ISSUED UNLOAD HAS BEEN ISSUED FOR THIS DEVICE        */
*/* *SYSRES VOL*  THIS VOLUME IS THE SYSRES VOL FOR THIS CPU.   */
*/* DEV RESERVED  DEVICE IS MARKED AS RESERVED                  */
*/*               (DOES NOT MEAN IT ACTUALLY IS !!!)
*/*                                                             */
*/* UNDER XA THERE IS NO EASY WAY OF KNOWING WHICH MACHINE IN   */
*/* A MULTI-CPU ENVIRONMENT ACTUALLY HAS THE SPECIFIC DEVICE    */
*/* RESERVED SINCE THE IO SUBSYSTEM DIRECTS THE REQUEST TO THE  */
*/* THE ACTUAL DEVICE RATHER THAN IN MVS WHERE A SPECIFIC       */
*/* DEVICE/CHANNEL ADDRESS IS USED. IN XA THE IO SUBSYSTEM      */
*/* HANDLES MUCH MORE THAN IN MVS SO ONCE THE REQUEST IS MADE   */
*/* THE CPU IS NOT INTERESTED AGAIN UNTIL THE IO IS POSTED      */
*/* COMPLETE. IF YOU DO A D,U,,,CUU,N ON XA ON SEVERAL          */
*/* MACHINES AND A DEVICE IS RESERVED IT WILL COME UP ON        */
*/* ALL CPU'S AS DEVICE RESERVED IN THE STATUS DISPLAY.         */
*/* (NATIVE XA NOT USING GRS OR A NON-IBM PRODUCT SUCH AS MSX). */
*/*                                                             */
*/*                                                             */
*/* SYNTAX : LISTVOL OPERAND                                    */
*/*                                                             */
*/* OPERAND - NONE DEFAULTS TO ALL ONLINE VOLUMES               */
*/*         - VOLSER     INFORMATION FOR THAT SPECIFIC VOLUME   */
*/*         - GENERIC    INFORMATION FOR ALL VOLS               */
*/*                      BEGINNING WITH THAT SPECIFIC KEY       */
*/*                                                             */
*/* WARNING : OPERAND ALL NOW TREATS ALL AS A GENERIC KEY       */
*/*           AS SOME PEOPLE HAVE VOLUMES BEGINNING WITH ALLXXX */
*/*                                                             */
*/*                                                             */
*/*  PROGRAM MODIFIED TO WORK ON MVS/XA AS WELL AS MVS/370      */
*/*  SO LONG AS THE MVS/370 RELEASE IS 1.3.0 OR HIGHER.         */
*/*                                                             */
*/*  PRIMARY DIFFERENCE IS IN THAT THE OLD MVS WAY OF FINDING   */
*/*  UCBS NO LONGER WORKS IN XA---SEE THE CODE.                 */
*/*                                                             */
*/*  AS A SUPRISE FOR ONCE IBM HAS MADE SOMETHING DOWNWARD      */
*/*  COMPATABLE. YOU CAN USE THE XA METHOD OF GETTING THE UCBS  */
*/*  ON MVS SP 1.3 AND HIGHER. THIS VERSION WILL NOT WORK       */
*/*  ON ANY RELEASES BELOW 1.3.0 OF MVS/SP                      */
*/*                                                             */
*/*                                                             */
*/***************************************************************/
*/*                                                             */
*/*  SUPPORT ADDED FOR 3330 (IF THEY ARE NOT ALL IN MUSEUEMS)   */
*/*                    3340                                     */
*/*                    3375                                     */
*/*                    3380                                     */
*/*  DEVICE TYPE E.G 3380 ADDED TO DISPLAY LINE                 */
*/*  VOLUME MOUNT STATUS ADDED                                  */
*/*  IF VOLUME IS OFFLINE NO INFORMATION IS GIVEN               */
*/*  HEADINGS ADDED AT INTERVALS                                */
*/*  DEFAULT TO ALL IF NO OPERAND SUPPLIED                      */
*/*  ENTRY ADDED TO SHOW WHETHER VTOC IS INDEXED OR NOT         */
*/*  SUPPORT NOW ADDED FOR INDEXED VTOCS.                       */
*/*  SUPPORT ADDED FOR DOUBLE DENSITY 3380'S (I.E 4 POSITIONS   */
*/*  FOR TRACKS CYLINDERS AND NR OF EXTENTS)                    */
*/*  ADDED NUMBER OF OPEN DCBS ON VOLUME                        */
*/*  ADDED CODE TO CLEAR SCREEN BEFORE DISPLAYING               */
*/*  IF VOLUME IS MARKED AS RESERVED THEN INDICATE AS RESERVED  */
*/*  INDICATE ALSO VOLUME STATUS I.E ALLOC, SYSRES ETC.         */
*/*                                                             */
*/*  CHANGED TO USE PUTLINE INSTEAD OF TPUT SO CAN ALSO RUN     */
*/*  UNDER TMP IN BATCH AND GET A HARD COPY LIST. WITH          */
*/*  APPROX 200 ONLINE DISKS IT'S SOMETIMES USEFUL.             */
*/*                                                             */
*/*  ADDED CODE TO AUTHORIZE ON FLY. NOTE WE USE A USER         */
*/*  WRITTEN MODULE IGX00010 AND CALL IT VIA SVC 109            */
*/*  THIS CODE FOR SVC 109 IS MARKED AS RESERVED BUT IT IS STILL*/
*/*  FREE IN XA 2.1.2. LOAD R15 WITH THE NUMBER OF THE          */
*/*  IGX000NN MODULE YOU HAVE CODED AND SVC 109 WILL DO THE     */
*/*  REST. NOTE YOU CANNOT ADD THIS TYPE OF MODULE TO           */
*/*  LPALIB ON THE FLY WITH LPAMM COMMAND OF OMEGAMON.          */
*/*  YOU UNFORTUNATELY WILL HAVE TO IPL WITH CLPA OPTION.       */
*/*                                                             */
*/*      NOTE NO SUPPORT FOR 2311 OR 2314 DEVICES               */
*/*      AS MVS/XA WILL NOT SUPPORT THESE DEVICE TYPES          */
*/*      2305 TYPE DEVICES ALSO NOT SUPPORTED AS THESE          */
*/*      DEVICES ARE SELDOM USED FOR ANYTHING OTHER THAN        */
*/*      PAGE DEVICES---IM NOT EVEN SURE IF XA WILL SUPPORT     */
*/*      THESE.                                                 */
*/*                                                             */
*/*  NOTE : YOU MUST USE THE INDEXED VTOC ACCESS METHOD TO GET  */
*/*         ACCURATE FRESS DSCBS INFO.                          */
*/*         DASDM DOES NOT MAINTAIN THIS FIELD WITH INDEXED     */
*/*         VTOCS SO THIS COUNT WILL BE UNRELIABLE EVEN IF IT   */
*/*         IS OKAY JUST AFTER YOU HAVE CONVERTED THE VTOC      */
*/*         TO INDEXED FORMAT.                                  */
*/* =====>  PROGRAM MODIFIED TO USE CVAF TO GET NUMBER OF FREE  */
*/* =====>  DSCBS WHEN VTOC IS INDEXED.                         */
*/* =====>  UNFORTUNATELY TO USE CVAF TO DO THIS FUNCTION IT    */
*/* =====>  NEEDS A DCB AND HENCE A DEB IF YOU ARE UNAUTHORIZED.*/
*/* =====>  THIS MEANS DYNAMICALLY ALLOCATING EACH VOLUME AS A  */
*/* =====>  DATASET, MESSING AROUND WITH A LOT OF RDJFCB        */
*/* =====>  MACROS AND FINALLY DE-ALLOCATING EACH VOLUME !!!    */
*/* =====>  SINCE WE ALREADY HAVE EACH UCB WE NEED WE CAN USE   */
*/* =====>  A UCB INSTEAD OF THE ABOVE CABOODLE BUT READ ON:    */
*/* =====>  TO USE CVAF WITH A UCB INSTEAD OF A DCB AND A DEB   */
*/* =====>  THE PROGRAM MUST ALAS BE MADE AUTHORIZED.           */
*/* =====>  YOU CAN EITHER LINK IT INTO AN APF LIBRARY          */
*/* =====>  OR USE A MAGIC SVC TO GET THE REQUIRED STATE.       */
*/* =====>  (IBM RESTRICTION)                                   */
*/*                                                             */
*/*                                                             */
*/* WISH LIST : FIND OUT IF EXCLUSIVE ENQ ON SYSVTOC SO YOU     */
*/*             DONT HAVE TO WAIT FOR DFDSS TO FINISH           */
*/*             DUMPING A DOUBLE DENSITY 3380 BEFORE YOUR       */
*/*             TERMINAL IS FREED UP AGAIN.                     */
*/*             I'M SURE SOME GENIUS OUT THERE CAN FINISH       */
*/*             THIS PROGRAM OFF NICELY. THANKS IN ADVANCE!     */
*/*                                                             */
*/*                                                             */
*/*   MIKE HAWTHORNE    TTI CITICORP                            */
*/*                     3100 OCEAN PK BLVD                      */
*/*                     SANTA MONICA                            */
*/*                     CA 90405       (213) 450-9111 X 2353    */
*/*                                                             */
*/*                                                             */
*/*   CODE OBTAINED ORIGINALLY IN THE DIM AND DISTANT PAST      */
*/*   FROM SOME MOD TAPE. PROGRAM HAS BEEN EXTENSIVELY          */
*/*   RE-WORKED BUT THANKS TO ORIGINAL AUTHOR WHO SEEMS TO      */
*/*   BE ANON. IF YOU RECOGNIZE SOME OF YOUR WORK PLEASE        */
*/*   CALL UP AND YOUR NAME WILL BE PUT INTO THE CREDIT LIST.   */
*/*   THE TSO TYPE MACROS ARE IN THE MACRO LIBRARY BUT IN CASE  */
*/*   SOME ARE MISSING THE ONES USED IN THIS PROGRAM HAVE BEEN  */
*/*   ADDED IN LINE TO THE CODE.                                */
*/*                                                             */
*/*                                                             */
*/***************************************************************/
         PRINT OFF
         MACRO
&LBL     $STP  &A,&B
         AIF   (2 EQ N'&A).L2
         AIF   ('&A'(1,1) NE '(').L1
&LBL     ST    &A(1),&B
         MEXIT
.L1      ANOP
&LBL     LA    0,&A
         AGO   .L3
.L2      ANOP
&LBL     L     0,&A(1)
.L3      ANOP
         ST    0,&B
         MEND
         MACRO
&NAME    EXIT  &RC=O,&LV=
&NAME    LR    1,13 .                   GET WORKAREA ADDRESS
         L     13,4(,13) .              RELOAD PREV. SAVE AREA
         FREEMAIN R,LV=&LV,SP=1,A=(1)
         RETURN (14,12),,RC=&RC
         MEND
         MACRO
         TSCPPL
         SPACE 2
***********************************************************************
*    THE COMMAND PROCESSOR PARAMETER LIST (CPPL) IS A LIST OF         *
*    ADDRESSES PASSED FROM THE TMP TO THE CP VIA REGISTER 1           *
***********************************************************************
         SPACE 2
CPPL     DS    0A
CPPLCBUF DS    A        PTR TO COMMAND BUFFER
CPPLUPT  DS    A        PTR TO UPT
CPPLPSCB DS    A        PTR TO PSCB
CPPLECT  DS    A        PTR TO ECT
CPPLL    EQU   *-CPPL
         MEND
         MACRO
         TSCSPL
         SPACE 2
***********************************************************************
*    THE COMMAND SCAN PARAMETER LIST (CSPL) IS A LIST OF ADDRESSES    *
*    PASSED FROM THE INVOKER TO COMMAND SCAN VIA REGISTER 1           *
***********************************************************************
         SPACE 2
CSPL     DS    0A
CSPLUPT  DS    A        PTR TO  UPT
CSPLECT  DS    A        PTR TO  ECT
CSPLECB  DS    A        PTR TO  CP'S ECB
CSPLFLG  DS    A        PTR TO  FLAG WORD CSFLG
*                       BIT 0 SET TO 0= SYNTAX CHECKING OF
*                       COMMAND NAME.
CSPLOA   DS    A        PTR TO OUTPUT AREA (CSOA DSECT)
CSPLCBUF DS    A        PTR TO COMMAND BUFFER
CSPLL    EQU   *-CSPL
CSFLG    DS    F
***********************************************************************
*    THE COMMAND SCAN OUTPUT AREA (CSOA) IS AN AREA POINTED TO        *
*    BY THE CSPL.  IT IS USED BY COMMAND SCAN TO INDICATE ITS         *
*    FINDINGS.  IT IS OBTAINED AND FREED BY THE INVOKER               *
***********************************************************************
CSOA     DS    0A
CSOACNM  DS    A        PTR TO COMMAND NAME-IF 0 INVALID CMD NAME
CSOALNM  DS    H        LENGTH OF CMD NAME
CSOAFLG  DS    X        FLAGS
CSOAVWP  EQU   X'80'    VALID WITH PARAMETERS
CSOAVNP  EQU   X'40'    VALID NO   PARAMS
CSOAQM   EQU   X'20'    QUESTION MARK
CSOANOC  EQU   X'10'    NO COMMAND
CSOABAD  EQU   X'08'    BAD CMD NAME
         DS    CL1      RESERVED
CSOAL    EQU   *-CSOA
         MEND
         MACRO
&LBL     TSDAIR &Z,&DAPB=,&SYNAD=
         GBLB   &TSDAIRE                WAS TSDAIRER ROUTINE GENERATED
&LBL     $STP  &DAPB,DAPLDAPB
         LA    1,DAPL
         LINK  EP=IKJDAIR
         AIF   ('&SYNAD' EQ '').L1
         LTR   15,15
         BZ    TSD&SYSNDX+4
         LA    0,&SYNAD
         L     14,TSD&SYSNDX
         BR    14
         AIF   ('&SYNAD' EQ '').L0
         AIF   (&TSDAIRE).L0
         TSDAIRER
.L0      ANOP
TSD&SYSNDX DC  A(TSDAIRER)
.L1      MEND
         MACRO
         TSDAIRER &Z
         GBLB  &TSDAIRE                 GENERATE ONLY ONCE FLAG
         AIF   (&TSDAIRE).NOGEN
&TSDAIRE SETB  1
         SPACE 2
***********************************************************************
*              DAIR ERROR ANALYSIS SUBROUTINE                         *
***********************************************************************
         SPACE 2
         USING TSDAIRER,14
TSDAIRER STM   15,1,DMPLSAVE            RC, RTN ADRS AND DAPL ADRS
         LTR   15,15                    RETURN CODE FROM DAIR
         BZ    TSD&SYSNDX               ON ZERO RETURN CODE
         ST    1,DMPLDAPL               PTR TO DAPL
         LA    1,DMPLCODE               ADDRESS OF RETURN CODE
         ST    1,DMPLRC                 PTR TO RETURN CODE
         LA    1,TSM&SYSNDX             ADDRESS OF LOADED IKJEFT02 IS 0
         ST    1,DMPLMSG                PTR TO A F'0'
         LA    1,TSC&SYSNDX             ADDRESS OF CALLER NUMBER
         ST    1,DMPLCALL               PTR TO CALLER NUMBER
         LA    1,DMPL                   ADRS OF DAIR MSG PARM LIST
         LINK  EP=IKJEFF18
         LM    15,1,DMPLSAVE            RESTORE REGISTERS
TSD&SYSNDX LR  14,0                     RETURN ADDRESS TO USABLE REG.
         BR    14                       RETURN TO CALLER
         SPACE
TSC&SYSNDX DC  H'1'                     GENERAL CALLER NUMBER
TSM&SYSNDX DC  F'0'                     IKJEFT02 NOT LOADED
         DROP  14                       DROP ADDRESSIBLITY
         AGO   .END
.NOGEN   MNOTE *,'DUPLICATE TSDAIRER MACRO, NOT GENERATED.'
.END     SPACE 2
         MEND
         MACRO
         TSDAPL
         SPACE 2
***********************************************************************
*    THE DYNAMIC ALLOCATION INTERFACE ROUTINE (DAIR) PARAMETER LIST   *
*    (DAPL) IS A LIST OF ADDRESSES PASSED FROM THE INVOKER TO DAIR    *
*    VIA REGISTER 1
***********************************************************************
         SPACE 2
DAPL     DS    0F
DAPLUPT  DS    A        PTR TO UPT
DAPLECT  DS    A        PTR TO ECT
DAPLECB  DS    A        PTR TO CP'S ECB
DAPLPSCB DS    A        PTR TO PSCB
DAPLDAPB DS    A        PTR TO DAIR PARAMETER BLOCK
DAPLL    EQU   *-DAPL
         MEND
         MACRO
         TSDMPL
         SPACE 2
***********************************************************************
*
* (DMPL)       DAIR MESSAGE PARAMETER LIST
*
* FUNCTION     THE ADDRESS OF THIS PARAMETER LIST IS PASSED IN
*              REGISTER 1 BY THE INVOKER OF IKJEFF18 TO DIAGNOSE DAIR
*              ERRORS AND PRINT APPROPRIATE MESSAGES.
*
***********************************************************************
         SPACE 2
DMPL     DS    0F *                     DAIR MESSAGE PARAMETER LIST
DMPLDAPL DS    A *                      PTR TO THE DAPL ADDRESS
DMPLRC   DS    A *                      PTR TO THE DAIR RETURN CODE
DMPLMSG  DS    A *                      PTR TO A(IKJEFT02) IF LOADED
DMPLCALL DS    A *                      PTR TO THE CALLER NUMBER
DMPLCODE DS    0F *                     R15 SAVE IS DAIR RETURN CODE
DMPLSAVE DS    3F *                     REGISTER SAVEAREA FOR 15-1
DMPLL    EQU   *-DMPL *                 LENGTH OF THE DMPL
         SPACE 2
         MEND
         MACRO
&LBL     TSENTRY &Z,&BASE=12,&SYMREG=YES,&PL=,&GETMAIN=0,&MACRO=,      X
               &DSECT=NO
         GBLB  &GDAIRM   1 TIME FLAG TO AVOID DUPLICATE DSECTS
         LCLA  &A
         LCLB  &C,&P,&D,&I,&M,&DM
TSDSECT  DSECT
TSAVE    DS    18F                      SAVE AREA
         TSCPPL
         AIF   ('&PL' EQ '').L12
TSECB    DS    F                        ECB FOR THE TSO SERVICES
&A       SETA  1
.L1      AIF   ('&PL(&A)' NE 'CSCAN').L2
&C       SETB  1
         AGO   .L7
.L2      AIF   ('&PL(&A)' NE 'PARSE').L3
&P       SETB  1
         AGO   .L7
.L3      AIF   ('&PL(&A)' NE 'DAIR').L4
&D       SETB  1
         AGO   .L7
.L4      AIF   ('&PL(&A)' NE 'IO').L5
&I       SETB  1
         AGO   .L7
.L5      AIF   ('&PL(&A)' NE 'MESSAGE').L6A
&M       SETB  1
         AGO   .L7
.L6A     AIF   ('&PL(&A)' NE 'DAIRM').L6
&D       SETB  1                        DAIR PARAMETER LISTS
&DM      SETB  1                        DAIR MACROS (IE. ALLOC, FREE)
         AGO   .L7
.L6      MNOTE 4,'UNKNOWN PL PARAMETER = &PL(&A)'
.L7      ANOP
&A       SETA  &A+1
         AIF   (&A LE N'&PL).L1
         AIF   (NOT &C).L8
         TSCSPL
.L8      AIF   (NOT &P).L9
         TSPPL
.L9      AIF   (NOT &D).L10
         TSDAPL
         AIF   ( NOT &DM ).L9A
DAPBAREA DS    20F *                    AREA FOR DAIR PARAMETER BLOCK
.L9A     ANOP
         TSDMPL
.L10     AIF   (NOT &I).L11
         TSIOPL
.L11     AIF   (NOT &M).L12
         TSMPL
.L12     ANOP
         AIF   ('&MACRO' NE 'YES').L12A
         TSWORK
.L12A    AIF   ('&GETMAIN' EQ '0').L12B
TSWORK   DS    0D                       POINTER TO USER WORK AREA
.L12B    ANOP
TSDSECTL DS    0D
         AIF   ( NOT &DM).NODM
         AIF   ( &GDAIRM ).NODM
&GDAIRM  SETB  1                        SET 1 TIME FLAG
         EJECT
         IKJDAP04
DAPB04L  EQU   *-DAPB04 *               LENGTH OF DAPB04 BLOCK
         EJECT
         IKJDAP08
DAPB08L  EQU   *-DAPB08 *               LENGTH OF DAPB08 BLOCK
         EJECT
         IKJDAP18
DAPB18L  EQU   *-DAPB18 *               LENGTH OF DAPB18 BLOCK
         SPACE 3
         IKJDAP1C
DAPB1CL  EQU   *-DAPB1C *               LENGTH OF DAPB1C BLOCK
         EJECT
         IKJDAP30
DAPB30L  EQU   *-DAPB30 *               LENGTH OF DAPB30 BLOCK
.NODM    ANOP
         AIF   ('&SYMREG' NE 'YES').L13
         SPACE 2
***********************************************************************
*                                                                     *
*                   DEFINE SYMBOLIC REGISTERS                         *
*                                                                     *
***********************************************************************
         SPACE 2
R0       EQU   0                        THE SYMBOLIC REGISTERS
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
.L13     AIF   ('&DSECT' NE 'NO').L19
         EJECT
&LBL     CSECT
         SAVE  (14,12),,*
         USING &LBL,&BASE
         LR    &BASE,15                 ESTABLISH ADDRESSABILITY
         LR    5,1                      SAVE PTR TO CPPL
         GETMAIN R,LV=TSDSECTL-TSDSECT+&GETMAIN,SP=1
         ST    13,4(1)                  DO SAVE AREA CHAINING
         ST    1,8(13)
         LR    13,1                     ESTABLISH ADDRESSABILITY
         USING TSDSECT,13               FOR THE TSDSECT
         MVC   CPPL(CPPLL),0(5)         COPY CPPL TO TS AREA
         AIF   (NOT(&C OR &P OR &D OR &I OR &M)).L18
         L     1,CPPLUPT                GET PTR TO UPT
         L     2,CPPLECT                GET PTR TO ECT
         LA    3,TSECB                  GET PTR TO ECB
         SR    0,0                      CLEAR ECB
         ST    0,TSECB
         AIF   (NOT &C).L14
         STM   1,3,CSPL                 INITIALIZE CSPL
         ST    0,CSFLG                  ZERO CSFLG
         LA    4,CSFLG
         ST    4,CSPLFLG
         LA    4,CSOA
         ST    4,CSPLOA
.L14     AIF   (NOT &P).L15
         STM   1,3,PPL                  INITIALIZE PPL. UPT,ECT,ECB
         LA    4,TSPARANS               ADRS OF PARSE ANSWER PLACE
         ST    4,PPLANS                 POINTER TO ADRS OF PARSE ANSWER
         ST    13,PPLUWA                PARSE USER WORK AREA POINTER
.L15     AIF   (NOT &D).L16
         STM   1,3,DAPL                 INITIALIZE DAPL
         L     4,CPPLPSCB               GET PTR TO PSCB
         ST    4,DAPLPSCB               SET POINTER TO PSCB
.L16     AIF   (NOT &I).L17
         STM   1,3,IOPL                 INITIALIZE IOPL
.L17     AIF   (NOT &M).L18
         ST    3,MPLECB                 INITIALIZE MPL, PTR TO ECB
         LA    4,CPPL                   ADDRESS OF CPPL
         ST    4,MPLCPPL                PTR TO CPPL
         LA    4,MPLCSECT               PTR TO MESSAGE CSECT
         ST    4,MPLCSECP               PTR TO MESSAGE CSECT ADDRESS
         XC    MPLSW(MPLZL),MPLSW       INITIALIZE REMAINING MPL TO 0
.L18     ANOP
         MNOTE *,'THE FOLLOWING BASES HAVE BEEN ESTABLISHED'
         MNOTE *,'USING   TSDSECT,13'
         MNOTE *,'USING   &LBL,&BASE'
.L19     MEND
         MACRO
         TSIOPL
         SPACE 2
***********************************************************************
*    THE I/O SERVICE ROUTINE PARAMETER LIST (IOPL) IS A LIST OF       *
*    FULLWORD ADDRESSES PASSED BY THE INVOKER OF ANY I/O SERVICE      *
*    ROUTINE TO THE APPROPRIATE SERVICE ROUTINE VIA REGISTER ONE.     *
***********************************************************************
         SPACE 2
IOPL     DS    0A
IOPLUPT  DS    A        PTR TO UPT
IOPLECT  DS    A        PTR TO ECT
IOPLECB  DS    A        PTR TO USER'S ECB
IOPLIOPB DS    A        PTR TO THE I/O SERVICE RTN PARM BLOCK
IOPLL    EQU   *-IOPL
         MEND
         MACRO
         TSMPL &DSECT=
         SPACE 2
***********************************************************************
*        THE MESSAGE PARAMETER LIST (MPL) IS A PARAMETER LIST WHOSE   *
*        ADDRESS IS PASSED BY THE INVOKER OF THE MESSAGE PROCESSING   *
*        ROUTINE (IKJEFF02) VIA REGISTER 1.                           *
***********************************************************************
         SPACE 2
         AIF   ('&DSECT' EQ '').NODSECT
&DSECT   DSECT
.NODSECT ANOP
MPL      DS    0A .                     MESSAGE PARAMETER LIST
MPLCSECP DS    A .                      PTR TO ADRS OF MESSAGE CSECT
MPLCPPL  DS    A .                      PTR TO CPPL
MPLECB   DS    A .                      PTR TO USER'S ECB (TSECB)
MPLCSECT DS    A .                      ADDRESS OF MESSAGE CSECT
MPLSW    DS    X .                      MESSAGE OPTION FLAGS
MPLINFO  EQU   X'80' .                  BIT 0, NO MESSAGE IDENTIFIER
MPLREV   EQU   X'40' .                  BIT 1, MESSAGE REVERSAL
MPLWTO   EQU   X'20' .                  BIT 2, INDICATES WRITE TO OPR
MPLHEX   EQU   X'10' .                  BIT 3, CONVERT NO'S TO HEX
MPLREPLY DS    AL3 .                    ADDRESS OF REPLY MESSAGE
MPLMSGID DS    CL4 .                    4 CHARACTER MESSAGE ID
MPLLEN1  DS    X .                      LENGTH OF VAR TEXT INSERT 1
MPLVAR1  DS    AL3 .                    ADRS OF VARIABLE TEXT INSERT 1
MPLLEN2  DS    X .                      LENGTH OF VAR TEXT INSERT 2
MPLVAR2  DS    AL3 .                    ADRS OF VARIABLE TEXT INSERT 2
MPLLEN3  DS    X .                      LENGTH OF VAR TEXT INSERT 3
MPLVAR3  DS    AL3 .                    ADRS OF VARIABLE TEXT INSERT 3
MPLLEN4  DS    X .                      LENGTH OF VAR TEXT INSERT 4
MPLVAR4  DS    AL3 .                    ADRS OF VARIABLE TEXT INSERT 4
MPLL     EQU   *-MPL .                  LENGTH OF MPL
MPLZL    EQU   *-MPLSW
         MEND
         MACRO
&LABEL   TSMSG &ID,&TYPE=,&CSECT=,&MF=E,&TABLE=
         LCLA  &I
         LCLB  &INFO,&HEX,&WTO,&REV
&LABEL   DS    0H
         AIF   (T'&ID EQ 'O').L5        IF ID PARAMETER OMMITTED  .L5
         AIF   ('&ID'(1,1) EQ '(').IDREG ID IN REGISTER NOTATION .IDREG
         AIF   ('&ID'(1,1) EQ '''').IDQUOTE  QUOTED STRING ?
         MVC   MPLMSGID(4),=CL4'&ID'    SET 4 BYTE MESSAGE ID
         AGO   .L5
.IDREG   ANOP                           ID WAS IN REGISTER NOTATION
         MVC   MPLMSGID(4),0&ID         SET 4 BYTE MESSAGE ID
         AGO   .L5
.IDQUOTE ANOP
         MVC   MPLMSGID(4),=CL4&ID      SET 4 BYTE MESSAGE ID
.L5      ANOP
         AIF   (T'&TYPE EQ 'O').NOTYPE    IF NO TYPE  PARM THEN .NOTYPE
&I       SETA  0                        INITIALIZE I TO 0
&INFO    SETB  0                        DEFAULT TO NOINFO (=PROMPT)
&HEX     SETB  0                        DEFAULT TO NOHEX
&WTO     SETB  0                        DEFAULT TO NOWTO
&REV     SETB  0                        DEFAULT TO NOREV
.NEXTYPE ANOP
&I       SETA  &I+1                     INCREMENT I
         AIF   ('&TYPE(&I)' EQ '').TYPEND  ANY MORE TYPES?
         AIF   ('&TYPE(&I)' EQ 'INFO').INFO
         AIF   ('&TYPE(&I)' EQ 'HEX' ).HEX
         AIF   ('&TYPE(&I)' EQ 'WTO' ).WTO
         AIF   ('&TYPE(&I)' EQ 'REV' ).REV
         AIF   ('&TYPE(&I)' EQ 'PROMPT').NEXTYPE  DO NOTHING FOR NOTYPE
         AIF   ('&TYPE(&I)' EQ 'NOINFO').NEXTYPE  DO NOTHING FOR NOTYPE
         AIF   ('&TYPE(&I)' EQ 'NOHEX' ).NEXTYPE  DO NOTHING FOR NOTYPE
         AIF   ('&TYPE(&I)' EQ 'NOWTO' ).NEXTYPE  DO NOTHING FOR NOTYPE
         AIF   ('&TYPE(&I)' EQ 'NOREV' ).NEXTYPE  DO NOTHING FOR NOTYPE
         MNOTE 4,'UNKNOWN TYPE = &TYPE(&I) IGNORED'
         AGO   .NEXTYPE                 LOOK AT NEXT TYPE PARAMETER
.INFO    ANOP
&INFO    SETB  1                        INFORMATION MESSAGE BIT ON
         AGO   .NEXTYPE
.HEX     ANOP
&HEX     SETB  1                        HEX CONVERSION BIT ON
         AGO   .NEXTYPE
.WTO     ANOP
&WTO     SETB  1                        WRITE TO OPERATOR BIT ON
         AGO   .NEXTYPE
.REV     ANOP
&REV     SETB  1                        MESSAGE REVERSAL BIT ON
         AGO   .NEXTYPE
.TYPEND  ANOP
&I       SETA  128*&INFO+64*&REV+32*&WTO+16*&HEX SET FLAG VALUE
         MVI   MPLSW,&I                 SET MESSAGE OPTIONS BITS
.NOTYPE  ANOP
         AIF   (T'&CSECT EQ 'O').NOCSECT IF NO CSECT PARM THEN .NOCSECT
         AIF   (T'&TABLE EQ 'O').NOTBOTH BOTH CANNOT BE SPECIFIED
   MNOTE 4,'CSECT AND TABLE ARE MUTUALLY EXCLUSIVE.  CSECT IS ASSUMED.'
.NOTBOTH AIF   ('&CSECT'(1,1) EQ '(').CSREG  CSECT IN REGISTER NOTATION
         MVC   MPLCSECT(4),=V(&CSECT)   SET ADRS OF MESSAGE CSECT
         AGO   .L8
.CSREG   ST    &CSECT,MPLCSECT          SET ADRS OF MESSAGE CSECT
         AGO   .L8
.NOCSECT ANOP
         AIF   (T'&TABLE EQ 'O').NOTABLE IF NO TABLE PARM THEN .NOTABLE
         AIF   ('&TABLE'(1,1) EQ '(').TAREG  TABLE IN REGISTER NOTATION
         MVC   MPLCSECT(4),=A(&TABLE)   SET ADRS OF MESSAGE CSECT
         AGO   .L8
.TAREG   ST    &TABLE,MPLCSECT          SET ADRS OF MESSAGE CSECT
         AGO   .L8
.NOTABLE ANOP
.L8      ANOP
         AIF   ('&MF' EQ 'L').END       &MF=L MEANS LIST
         LA    1,MPL                    ADRS OF MESSAGE PARAMETER LIST
         LINK  EP=IKJEFF02              LOAD MESSAGE PROCESSING ROUTINE
         SPACE
* RETURN       IN REGISTER 15 IS FROM PUTLINE OR PUTGET OR
* CODES        0 IF WTO WAS REQUESTED.
         SPACE
.END     MEND
         MACRO
&LBL     TSMSGD &A,&B,&C
&LBL     IKJTSMSG &A,&B,&C
         MEND
         MACRO
         TSPARERR &Z,&NOGEN=NO,&REGEN=NO
         AIF   ('&NOGEN' NE 'YES').G1
         PRINT NOGEN
.G1      ANOP
         USING TSPARERR,14
TSPARERR STM   15,0,MPLLEN3             STORE RETURN ADD & RETURN CODE
         CH    15,TSPARER8              CHECK FOR ATTN INTERUPT
         BE    TSPARERE
         LA    15,TSPARERT-4(15)
         MVC   MPLMSGID(4),0(15)
         TSMSG TYPE=HEX,TABLE=TSPARERC
TSPARERE LM    15,0,MPLLEN3             GET RETURN ADD AND RETURN CODE
         LA    1,PPL                    RESTORE REGISTER 1
         LR    14,0                     MOVE RETURN ADD TO USABLE REG
         BR    14                       RETURN TO CALLER
         AIF   ('&NOGEN' NE 'PART').G2
         PRINT NOGEN
.G2      ANOP
TSPARER8 DC    H'8'
TSPARERT DC    C'TS1     TS2 TS3 TS4 '
TSPARERC TSMSGD ' PARSE ERROR+',TS1,Q1
         TSMSGD ' THE PPL CONTAINS INVALID INFORMATION',Q1
         TSMSGD ' PARSE ERROR+',TS2,Q2
         TSMSGD ' PARAMETERS INCOMPLETE AND COULD NOT PROMPT',Q2
         TSMSGD ' PARSE ERROR+',TS3,Q3
         TSMSGD ' NO SPACE AVAILABLE IN REGION',Q3
         TSMSGD ' PARSE ERROR+',TS4,Q4
         TSMSGD ' A VALIDITY CHECKING ROUTINE REQUESTED TERMINATION',Q4
         TSMSGD
         AIF   ('&REGEN' NE 'YES').G3
         PRINT GEN
.G3      ANOP
         DROP  14
         MEND
         MACRO
&LBL     TSPARSE &Z,&PCL=,&CBUF=,&SYNAD=
&LBL     $STP  &PCL,PPLPCL
         $STP  &CBUF,PPLCBUF
         LA    1,PPL
         LINK  EP=IKJPARS
         AIF   ('&SYNAD' EQ '').L1
         LTR   15,15
         BZ    TSP&SYSNDX+4
         LA    0,&SYNAD
         L     14,TSP&SYSNDX
         BR    14
TSP&SYSNDX DC A(TSPARERR)
.L1      MEND
         MACRO
         TSPPL
         SPACE 2
***********************************************************************
*    THE PARSE PARAMETER LIST (PPL) IS A LIST OF ADDRESSES PASSED     *
*    FROM THE INVOKER TO PARSE VIA REGISTER 1                         *
***********************************************************************
         SPACE 2
PPL      DS    0A
PPLUPT   DS    A        PTR TO UPT
PPLECT   DS    A        PTR TO ECT
PPLECB   DS    A        PTR TO CP'S ECB
PPLPCL   DS    A        PTR TO PCL
PPLANS   DS    A        PTR TO ANS PLACE
PPLCBUF  DS    A        PTR TO CMD BUFFER
PPLUWA   DS    A        PTR TO USER WORK AREA (FOR VALIDITY CK RTNS)
PPLL     EQU   *-PPL
TSPARANS DS    F                        PARSE RETURNS PTR TO PDL HERE
         MEND
         PRINT ON
*/********************************************************************/
*/*                                                                  */
*/* THE FOLLOWING TWO MACROS ARE THE AUTHORISATION ON THE FLY        */
*/* AND UNAUTHORISATION ON THE FLY WE USE IN OUR SHOP.               */
*/* WE HAVE A MODULE IGX00010 WRITTEN WHICH WE CAN THEN CALL USING   */
*/* THE EXTENDED ROUTER SVC (SVC 109). ALTHOUGH ALL THE CODES ARE    */
*/* MARKED AS RESERVED BY IBM AS OF RELEASE 2.1.2 OF XA THERE ARE    */
*/* STILL A NUMBER UNUSED. (ALSO WORKS ON MVS/370  ANY RELEASE).     */
*/* IF YOU WISH TO USE THIS METHOD (AND IT'S THE EASIEST) LIST OUT   */
*/* ALL THE IGX000NN MODULES YOU HAVE IN SYS1.LPALIB OR YOUR USER    */
*/* CONCATENATED ONE (XA 2.1.2 AND UP). THE ROUTING CODES GO FROM    */
*/* X'01' TO X'20' (IGX00001-IGX00020). CHOOSE A NUMBER THAT'S NOT   */
*/* BEING USED AND CODE YOUR MODULE (USING STANDARD SVC CONVENTIONS).*/
*/* INCLUDE IN IT YOUR OWN CHECKS TO PREVENT UNAUTHORIZED USE AND    */
*/* GIVE IT THE NAME IGX000NN WHERE NN IS THE HEX NUMBER FROM 01     */
*/* TO 20 THAT'S NOT BEING CURRENTLY USED BY IBM FUNCTIONS.          */
*/* THEN TO USE IT PASS IT A FUNCTION CODE IN R1                     */
*/* LOAD R15 WITH THE NUMBER NN YOU HAVE USED                        */
*/* SIMPLY THEN CALL SVC 109. (TALK ABOUT LEAKY OPERATING SYSTEMS!). */
*/* YOU MUST IPL WITH A CLPA. IF YOU ARE LUCKY ENOUGH TO HAVE        */
*/* OMEGAMON/XA THE LPAMM FUNCTION IS NO GOOD FOR THIS TYPE OF       */
*/* MODULE UNFORTUNATELY-- YOU WILL PROBABLY GET ABEND S16D          */
*/* WHEN YOU CALL THIS MODULE IF IT HAS BEEN DYNAMICALLY LOADED.     */
*/* IF YOU DON'T THEN GOOD LUCK--OMEGAMON HAS BEEN MODIFIED.         */
*/*                                                                  */
*/* A SAMPLE IGX000NN MODULE IS ON THE SOURCE TAPE.                  */
*/* USE AT YOUR OWN RISK.                                            */
*/*                                                                  */
*/* E.G YOUR MODULE IS IGX00010                                      */
*/*                                                                  */
*/* LA  R1,4       SAY CODE=4 REQUESTS AUTHORISATION                 */
*/* LA  R15,16     X'10' FOR IGX00010                                */
*/* SVC 109        YOU'VE GOT IT !!!!!                               */
*/*                                                                  */
*/*  (NO CHARGE FOR SIMPLE LESSON ON THE USE OF THE                  */
*/*   OFTEN OVERLOOKED EXTENDED ROUTER FACILITY).                    */
*/*                                                                  */
*/*                                                                  */
*/********************************************************************/
         MACRO
         AUTHON
         LA    R15,16                   IGX00010 USER WRITTEN SVC  JMH
         LA    R1,4                     AUTHORIZE ON FLY           JMH
         SVC   109                                                 JMH
         MEND                                                      JMH
         MACRO                                                     JMH
         AUTHOFF
         LA    R15,16                   IGX00010 USER WRITTEN SVC  JMH
         LA    R1,8                     UNAUTHORIZE                JMH
         SVC   109                                                 JMH
         MEND
         TITLE 'LISTVOL - DYNAMIC STORAGE DEFINITIONS'
         MACRO
         TSWORK
VOLUME   DS    CL6                      SEARCH INDEX
VOLUM2   DS    CL6                      SECOND SEARCH INDEX
VOLUMENO DS    X                        COUNT OF DEFAULT INDICES
INDEXED  DS    X
FLAG     DS    X
LEN      DS    X
PUTTEXT  DS    1F            2 BYTE LEN + 2BYTE ZEROS
LINE     DS    79C           THIS IS OUR DATA LINE
IOPL     DS    0F            IOPL FOR PUTLINE                    JMH
IOPLUPT  DS    A             UPT
IOPLECT  DS    A             ECT
IOPLECB  DS    A             ECB
IOPLIOPB DS    A             PLPB
DBLW     DS    4D
CAM      DS    0D
CAML     DS    4F                       OBTAIN LIST
CAMA     DS    2F                       CCHHR
CAMV     DS    2F                       VOL NAME
         DS    0D
CAMW     DS    350C                     WORK AREA
*/*******************************************************************/
*/*                                                                 */
*/*  THE FOLLOWING FIELDS ARE THE REQUIRED PARAMETER FIELDS         */
*/*  FOR THE MVS/XA UCB LOOKUP ROUTINE. (ALSO WORKS ON MVS/SP).     */
*/*                                                                 */
*/*******************************************************************/
PARMLIST DS    3F                                                JMH
         ORG   PARMLIST                                          JMH
PARMWA   DS    F               ADDR OF 100 BYTE WORK AREA        JMH
PARMDEVT DS    F               ADDR OF DEVICE TYPE BYTE          JMH
PARMUCB  DS    F               ADDR OF UCB GOT FROM SYSTEM       JMH
DEVCLASS DS    CL1             DEVICE CLASS BYTE                 JMH
ADDRUCB  DS    F               UCB ADDRESS                       JMH
         DS    0D                                                JMH
WORKAREA DS    CL100           WORK AREA FOR IOSVSUCB            JMH
*
KOUNT    DS    F               LINE COUNT FOR HEADINGS           JMH
         MEND
         TITLE 'LISTVOL - COMMAND PROCESSOR'
LISTVOL  TSENTRY BASE=12,PL=PARSE,MACRO=YES
         EJECT
         SPACE 2
         TESTAUTH FCTN=1          ARE WE AUTHORIZED              JMH
         LTR   R15,R15                                           JMH
*/********************************************************************/
*/*                                                                  */
*/* IF YOU DON'T LIKE THIS POSSIBLE INTEGRITY EXPOSURE CODE HERE     */
*/* YOUR OWN SHOP'S REQUIREMENT. YOU COULD FOR EXAMPLE CHECK         */
*/* FOR USER-IDS PERMITTED TO USE THIS SVC TO GET AUTHORIZED.        */
*/* TESTING UNDER TSO/SPF AND HAVING TO DO AN LLA REFRESH (XA)       */
*/* EACH TIME IS A PAIN IN THE BUTT ESPECIALLY ACROSS MULTIPLE       */
*/* SYSTEMS. IT'S MUCH EASIER TO TEST FROM A PRIVATE TSO LIBRARY.    */
*/*                                                                  */
*/*                                                                  */
*/********************************************************************/
         BZ    APFOK             YES  CARRY ON                      JMH
         AUTHON                                                     JMH
APFOK    MVC   VOLUME(6),=CL6' '        CLEAR SEARCH INDEX
         MVC   VOLUM2(6),=CL6' '        CLEAR SECOND SEARCH INDEX
         MVI   LEN,5                    AND DEFAULT LENGTH -1
         MVI   VOLUMENO,1               DEFAULT TO 1 SEARCH INDEX
         L     R1,CPPLECT               POINT TO ECT
         TM    ECTSWS-ECT(R1),ECTNOPD   NO OPERAND?
         BO    WANTALL                  YES DEFAULT TO ALL          JMH
         TSPARSE CBUF=(CPPLCBUF,I),PCL=(=V(PCL),I)
         L     R1,TSPARANS              POINT TO DESCRPTER LIST
         LA    R1,VOL-PDL(R1)           POINT TO VOL DESCRPT
         L     R2,0(R1)                 POINT TO THING
*/********************************************************************/
*/*                                                                  */
*/*   DEFAULT IS NOW ALL IF LISTVOL IS ENTERED WITHOUT OPERANDS.     */
*/*   ALL IS TREATED AS A GENERIC SEARCH ARGUMENT.                   */
*/*   IF YOU DON'T LIKE THIS PLEASE UNCOMMENT THE NEXT 2 LINES OF    */
*/*   CODE AND COMMENT OUT THE THIRD LINE (B NOTALL)                 */
*/*                                                                  */
*/********************************************************************/
*        CLC   0(4,R2),=CL4'ALL'        ALL VOLUMES REQUESTED ?     JMH
*        BNE   NOTALL                   NO,                         JMH
         B     NOTALL                                               JMH
WANTALL  MVI   LEN,255
         B     PUTTOP                   AND GO DO ALL VOLUMES
NOTALL   LH    R1,4(R1)                 AND LENGTH
         LTR   R1,R1                    ANY OPERAND
         BZ    WANTALL                  NO, GO DEFAULT TO ALL
         BCTR  R1,0                     DECREMENT FOR EXECUTE
         STC   R1,LEN                   SAVE FOR FUTURE COMPARES
EXMVC    MVC   VOLUME(0),0(R2)          <<< EXECUTED >>>
         EX    R1,EXMVC                 MOVE TO VOLPREFIX
         B     PUTTOP                   GO SEARCH ON ENTERED INDEX
         TITLE 'S P A C E -- PRODUCE VOLUME LIST'
*/********************************************************************/
*/*                                                                  */
*/* THIS CLEARS THE SCREEN : IF YOU CALL THIS PROGRAM FROM ISPF      */
*/* PANELS MAKE SURE THE CLIST OR INVOKING PROGRAM ISSUES AN         */
*/* ISPEXEC CONTROL DISPLAY LINE COMMAND OR YOU COULD GET            */
*/* SOME FUNNY SCREEN OVERLAYS (LINE COMMANDS AND FULL SCREEN        */
*/* COMMANDS MIXED GETS VTAM'S KNICKERS IN A TWIST!).                */
*/*                                                                  */
*/********************************************************************/
PUTTOP   DS    0H                                                 JMH
         GTSIZE ,                 ISSUE GTSIZE MACRO              JMH
         LTR   R0,R0              IS THIS A CRT?                  JMH
         BZ    NOTCRT             NO;  BRANCH AROUND TPUT         JMH
         B     CRT                YES; ISSUE TPUT TO CLEAR        JMH
CLRCRT   DC    X'C11140403C404000114040' 3277 CLEAR COMMANDS      JMH
CRT      TPUT  CLRCRT,11,FULLSCR  CLEAR SCREEN                    JMH
NOTCRT   EQU   *                                                  JMH
*/********************************************************************/
*/*                                                                  */
*/*   THIS SECTION BUILDS THE IOPL PARAMETER LIST FOR USING THE      */
*/*   PUTLINE MACRO INSTEAD OF TPUT.                                 */
*/*   SEE GUIDE TO WRITING A TMP OR TSO COMMAND PROCESSOR BOOK.      */
*/*                                                                  */
*/********************************************************************/
         L     R6,CPPLUPT               TSO UPT                   JMH
         ST    R6,IOPLUPT               STORE IN IOPL             JMH
         L     R6,CPPLECT               TSO ECT                   JMH
         ST    R6,IOPLECT               STORE IN IOPL             JMH
         LA    R6,TSECB                 TSO ECB                   JMH
         ST    R6,IOPLECB               STORE IN IOPL             JMH
         ZAP   KOUNT,=P'1'  FOR THE HEADINGS                      JMH
         MVC  PUTTEXT(4),=X'00510000' INIT HEADER FOR PUTLINE     JMH
*/********************************************************************/
*/*                                                                  */
*/*    WRITE THE HEADINGS ON THE TERMINAL                            */
*/*                                                                  */
*/********************************************************************/
         MVC  LINE(79),MSG0                                       JMH
         BAL  9,PUTLINE                                           JMH
         MVC  LINE(79),MSG3                                       JMH
         BAL  9,PUTLINE                                           JMH
         MVC  LINE(79),MSG1                                       JMH
         BAL  9,PUTLINE                                           JMH
         MVC  LINE(79),MSG2                                       JMH
         BAL  9,PUTLINE                                           JMH
         MVC  LINE(79),MSG3                                       JMH
         BAL  9,PUTLINE                                           JMH
         MVI   FLAG,0                   INDICATE NO VOLUMES YET
         B     SETUP                                              JMH
         SPACE 3
*        SCAN UCB TABLE                                           JMH
*/***************************************************************/
*/*                                                             */
*/* NOTE MVS/XA HAS UCB ENTRIES 3 BYTES LONG SO THE UCB LOOKUP  */
*/* METHOD HAS BEEN CHANGED TO USE IOSVSUCB.                    */
*/*                                                             */
*/* THIS METHOD WILL ALSO WORK ON MVS SP 1.3.0 AND ABOVE        */
*/*                                                             */
*/***************************************************************/
         SPACE 1
         DS    0H
SETUP    L     R3,CVTPTR                GET CVT ADDRESS         JMH
         USING CVTMAP,R3                                        JMH
         ZAP   KOUNT,=P'1'    RE-SET TO ALIGN SCREEN           JMH
         XC    WORKAREA,WORKAREA        CLEAR WORK AREA        JMH
         LA    R1,WORKAREA              WORK AREA ADDRESS      JMH
         ST    R1,PARMWA                STORE ITS ADDRESS      JMH
         LA    R1,DEVCLASS              ADDRESS OF DEVICE CLASS JMH
         ST    R1,PARMDEVT              STORE IT               JMH
         MVI   DEVCLASS,UCB3DACC        INDICATE DEV CLASS DA  JMH
         LA    R1,ADDRUCB               UCB ADDR FROM SYSTEM   JMH
         ST    R1,PARMUCB               STORE IT IN PARMLIST   JMH
         USING UCBOB,R8                                        JMH
AGAIN    EQU   *                                               JMH
         LA    R1,PARMLIST              GET PARAMETER LIST     JMH
         L     R15,CVTUCBSC             POINT TO UCB LOOKUP    JMH
         BALR  R14,R15                  CALL ROUTINE           JMH
         SPACE 1
LOOP     CL    R15,=F'0'                HAVE WE DONE ALL UCBS  JMH
         BNE   RETURN                   YES                    JMH
         SPACE 1
GOTUCB   L     R8,ADDRUCB               GET ITS ADDRESS        JMH
         TM    SRTESTAT,SRTEONLI        IS THIS DEVICE ONLINE  JMH
         BNO   AGAIN                    LETS GET NEXT DEVICE   JMH
         CLC   UCBTBYT3(2),=X'2005'     DATA CELL?               JMH
         BE    AGAIN                    IF SO SKIP IT            JMH
         TM    SRTEVOLI,X'FF'           ANY NAME?
         BZ    AGAIN                    NO, IGNORE IT            JMH
         CLI   LEN,255                  DO ALL?
         BE    USEUCB                   YES, USE IT
EXCLC    CLC   VOLUME(0),SRTEVOLI       <<< EXECUTED >>>
         XR    R1,R1                    CLEAR FOR IC
         IC    R1,LEN                   GET LENGTH
         EX    R1,EXCLC                 SEE IF THIS IS A MATCH
         BNE   AGAIN                    IF NOT SKIP IT
         SPACE 1
*        FORMAT UCB INFORMATION FIRST
         SPACE 1
USEUCB   MVI   LINE,C' '                CLEAR THE LINE
         MVC   LINE+1(78),LINE
*/********************************************************************/
*/*                                                                  */
*/*                                                                  */
*/*        USING CVAF CHECK FOR INDEXED VTOC-----GOT UCB IN R8       */
*/*                                                                  */
*/********************************************************************/
         CVAFTST  UCB=(R8)              TEST  VTOC           JMH
         B     BRTBL(R15)               TEST  RETURN CODE   JMH
BRTBL    B     AGEDMVS   HISTORY FOLKS  DF/DS NOT ON SYSTEM JMH
         B     NOTIX                    VTOC NOT INDEXED    JMH
         B     IXVTOC                   VTOC IS INDEXED     JMH
         B     NOTIX        EMPTY PACK  VIB NOT INITIALIZED JMH
*/*  VIB NOT INITIALIZED RETURN CODE COMES FROM EMPTY PACK  JMH      */
*/*  WHETHER IT IS ACTUALLY INDEXED OR NOT -- SO IGNORE IT  JMH      */
         B     KANITBE                                      JMH
         SPACE 2
IXVTOC   OI    INDEXED,X'FF'            INDICATE INDEXED      JMH
         B     KONTZ                                          JMH
NOTIX    EQU   *                        NOT INDEXED           JMH
AGEDMVS  DS    0H  CHANCES ARE UCB LOOKUP HAS ALREADY BROKEN  JMH
*                IF YOU ARE THAT BACK LEVELLED WITH NO DFDS   JMH
         XC    INDEXED,INDEXED          RESET INDEXED VTOC IND  JMH
KONTZ    MVC   LINE(6),SRTEVOLI         PRINT VOLUME NAME
         MVC   LINE+7(3),UCBNAME        GET UNIT ADDRESS
         CLC   UCBTBYT3(2),=X'2009'     3330   IF THEY STILL EXIST
         BE    DEV3330
         CLC   UCBTBYT3(2),=X'200D'     3330-11 IF THEY STILL EXIST
         BE    DEV3330                  TREAT IT AS A 3330
         CLC   UCBTBYT3(2),=X'200A'     3340
         BE    DEV3340
         CLC   UCBTBYT3(2),=X'200B'     3350                JMH
         BE    DEV3350                                      JMH
         CLC   UCBTBYT3(2),=X'200C'     3375                JMH
         BE    DEV3375                                      JMH
         MVC   LINE+49(4),=C'3380'      HAS TO BE A 3380    JMH
         B     FROGS                                        JMH
DEV3330  MVC   LINE+49(4),=C'3330'
         B     FROGS                                        JMH
DEV3340  MVC   LINE+49(4),=C'3340'
         B     FROGS                                        JMH
DEV3350  MVC   LINE+49(4),=C'3350'                          JMH
         B     FROGS                                        JMH
DEV3375  MVC   LINE+49(4),=C'3375'                          JMH
FROGS    TM    SRTESTAB,SRTEBPRV                            JMH
         BZ    PUBVOL                                       JMH
         MVC   LINE+54(3),=C'PRV'                           JMH
         B     GOONS                                        JMH
PUBVOL   TM    SRTESTAB,SRTEBPUB                            JMH
         BZ    STGVOL                                       JMH
         MVC   LINE+54(3),=C'PUB'                           JMH
         B     GOONS                                        JMH
STGVOL   TM    SRTESTAB,SRTEBVQS                            JMH
         BZ    GUESS                                        JMH
         MVC   LINE+54(3),=C'STG'                           JMH
         B     GOONS                                        JMH
GUESS    MVC   LINE+54(3),=C'???'                           JMH
GOONS    TM    SRTESTAT,SRTECHGS        VARY PENDING        JMH
         BZ    RESERVED                 NO TRY RESERVED     JMH
         MVC   LINE+64(13),=C'VARY ISSUED  '                JMH
         B     GETUSE                                       JMH
RESERVED TM    SRTESTAT,SRTERESV        VOLUME GOT A RESERVE ON IT JMH
         BZ    UNLOAD                   NO TRY UNLOAD STATUS JMH
         MVC   LINE+64(13),=C'DEV RESERVED '                 JMH
         B     GETUSE                                        JMH
UNLOAD   TM    SRTESTAT,SRTEUNLD        UNLOAD/DEMOUNT REQUESTED  JMH
         BZ    ALLOCATE                NO CHECK IF VOLUME ALLOCATED JMH
         MVC   LINE+64(13),=C'UNLOAD ISSUED'                 JMH
         B     GETUSE                                        JMH
ALLOCATE TM    SRTESTAT,SRTEALOC        ALLOCATED            JMH
         BZ    UNALLOC           NO MUST BE UNALLOCATED (CLEVER) JMH
         MVC   LINE+64(13),=C'A-REMOVABLE  '                 JMH
         B     RESIDNT                                       JMH
UNALLOC  MVC   LINE+64(13),=C'U-REMOVABLE  '                 JMH
RESIDNT  TM    SRTESTAT,SRTEPRES       PERM. RESIDENT VOLUME JMH
         BZ    SYSRES                                        JMH
         CLC   LINE+64(2),=C'U-'                             JMH
         BE    UNALCRES                                      JMH
         MVC   LINE+64(13),=C'A-PERM RSDNT '                 JMH
         B     SYSRES     IT COULD BE A SYSRES VOL SO CHECK  JMH
UNALCRES MVC   LINE+64(13),=C'U-PERM RSDNT '                 JMH
SYSRES   TM    UCBSTAT,UCBSYSR                               JMH
         BZ    GETUSE                                        JMH
         MVC   LINE+64(13),=C'*SYSRES VOL* '                 JMH
GETUSE   XR    R1,R1                    CLEAR A REG
         IC    R1,SRTEUSER              GET USE COUNT
         CVD   R1,DBLW                  CONVERT TO PRINT
         UNPK  LINE+11(3),DBLW+6(2)     PLACE IT ON THE LINE
         OI    LINE+13,X'F0'            FIX SIGN BITS
         XR    R1,R1                    CLEAR REG            JMH
         IC    R1,UCBDMCT                                    JMH
         STC   R1,DBLW                                       JMH
         NI    DBLW,B'01111111'         7F  MAX POSSIBLE DCBS OPEN JMH
         XR    R1,R1                    CLEAR REG            JMH
         IC    R1,DBLW                  GET NR OPEN DCBS     JMH
         CVD   R1,DBLW                  CONVERT TO PRINT     JMH
         UNPK  LINE+45(3),DBLW+6(2)     PLACE IT ON THE LINE JMH
         OI    LINE+47,X'F0'            FIX SIGN BITS        JMH
         SPACE 1
*        GET MORE INFORMATION FROM LSPACE
         SPACE 1
LSPACE   LR    R0,R8                    POINT TO UCB
         LA    R1,DBLW                  WORKSPACE
         SVC   78                       GET SPACE INFO
         LTR   R15,R15                  DID IT WORK?
         BZ    SPCOK                    YES
KANITBE  MVC   LINE+15(39),=CL39'-----------UCB OR VTOC ERROR----------X
               -'
         BAL   9,PUTLINE                PUT OUT LINE
         B     AGAIN
VTOCERR  MVC   LINE+15(39),=CL39'           VTOC ERR/INDX              X
                '
         BAL   R9,PUTLINE               PUT OUT LINE          JMH
         B     AGAIN                                          JMH
PUTLINE  XC    TSECB,TSECB              CLEAR TSO ECB         JMH
         PUTLINE PARM=PLPB,MF=(E,IOPL),                                X
               OUTPUT=(PUTTEXT,TERM,SINGLE,DATA)
         MVI   FLAG,255                 SAY WE HAVE DONE SOME JMH
         AP    KOUNT,=P'1'                                    JMH
         CP    KOUNT,=P'18'                                   JMH
         BL    SKIPIT                                         JMH
         MVC  LINE(79),MSG3                                   JMH
         BAL  R7,DOMAC                                        JMH
         MVC  LINE(79),MSG0                                   JMH
         BAL  R7,DOMAC                                        JMH
         MVC  LINE(79),MSG3                                   JMH
         BAL  R7,DOMAC                                        JMH
         MVC  LINE(79),MSG1                                   JMH
         BAL  R7,DOMAC                                        JMH
         MVC  LINE(79),MSG2                                   JMH
         BAL  R7,DOMAC                                        JMH
         MVC  LINE(79),MSG3                                   JMH
         BAL  R7,DOMAC                                        JMH
         ZAP   KOUNT,=P'1'                                    JMH
SKIPIT   BR   R9                        NOW GO ON             JMH
DOMAC    XC    TSECB,TSECB              CLEAR TSO ECB         JMH
         PUTLINE PARM=PLPB,MF=(E,IOPL),                                X
               OUTPUT=(PUTTEXT,TERM,SINGLE,DATA)
         BR    R7                                             JMH
SPCOK    MVC   LINE+15(4),DBLW+6        CYL (TOTAL)
         MVC   LINE+20(4),DBLW+11       TRK (TOTAL)
         MVC   LINE+25(4),DBLW+16       NUM (OF AREAS)
         MVC   LINE+35(4),DBLW+21       CYL (LARGEST)
         MVC   LINE+40(4),DBLW+26       TRK (LARGEST)
         SPACE 1
*        NOW FIND THE NUMBER OF DSCBS LEFT (FMT0 COUNT)
         CLI   INDEXED,X'FF'  DO WE HAVE INDEXED VTOC         JMH
         BE    IXFMT0         YES GO AND DO INDEXED BIT       JMH
*/********************************************************************/
*/*                                                                  */
*/*        THIS SECTION WORKS FOR NON INDEXED VTOCS                  */
*/*                                                                  */
*/********************************************************************/
         SPACE 1
         MVC  LINE+60(2),=C'OS' OS TYPE (I.E ORDINARY) VTOC   JMH
         MVC   CAML(4),=AL1(192,128,0,0) MOVE IN OPTIONS
         MVC   CAMV(6),SRTEVOLI         VOLUME NAME
         LA    R0,CAMA                  CCHHR
         LA    R1,CAMV                  VOLUME LIST
         LA    R2,CAMW                  WORKAREA
         STM   R0,R2,CAML+4             SET UP CAMLIST
         XC    CAMW(60),CAMW            CLEAR DEB
         MVI   CAMW+16,X'01'            1 EXTENT
         MVI   CAMW+28,X'04'            16 BYTES PER
         ST    R8,CAMW+32               UCB ADDR TO EXTENT
         MVC   CAMW+42(6),=X'FFFFFFFF7FFF' WHOLE PACK
         STM   R0,R15,CAMW+60           SAVE REGS
         LA    R4,CAMW+60               POINT TO REGS
         LA    R1,CAMW                  DEB LOCATION
         MVC   CAMW(4),SRTEFSCT         ALIGN
         L     R0,CAMW                  TTR0
         LR    R2,R1                    MBBCCHHR
         L     R15,CVTPTR               POINT TO CVT
         L     R15,CVTPCNVT-CVT(R15)    TTR CONVERT
         BALR  R14,R15                  GO CONVERT IT
         LM    R0,R14,0(R4)             RESTORE REGS
         LTR   R15,R15                  ERROR?
         BNZ   VTOCERR                  IF SO DON'T SHOW HIM NOTHING
         MVC   CAMA(5),CAMW+3           CCHHR TO THING
         OBTAIN CAML                    GET FORMAT 4 DSCB
         LTR   R15,R15                  DID IT WORK?
         BNZ   VTOCERR                  THEN GIVE UP
         LH    R1,CAMW+50               GET NUMBER OF FMT0S
         CVD   R1,DBLW                  CONVERT IT
         UNPK  LINE+30(5),DBLW+5(3)     AND MOVE TO THE LINE
         MVC   LINE+30(4),LINE+30       ONLY NEED IST 4 BYTES
         MVI   LINE+34,C' '             CLEAR UNPRINTABLE
         OI    LINE+33,X'F0'            FIX SIGN
         BAL   R9,PUTLINE               WRITE IT OUT           JMH
         B     AGAIN                    CARRY ON AGAIN         JMH
         SPACE 1
*        GO AWAY NOW
         SPACE 1
IXFMT0   EQU   *
*/*      NOW FIND THE NUMBER OF DSCBS LEFT SIMUTED FMT0 COUNT  JMH
*/********************************************************************/
*/*                                                                  */
*/*        THIS SECTION WORKS OUT THE NUMBER OF PSEUDO FMT0S         */
*/*        VIA USING CVAF.                                           */
*/*                                                                  */
*/********************************************************************/
         LA    R1,CVPL                                         JMH
         O     R8,=X'80000000'  UCB ADDR MUST BE COMPLIMENTED  JMH
         XR    R2,R2            SHOW DEB ADDRESS OF ZERO       JMH
         NI    CVPL+7,X'00'     RE-SET STATUS AGAIN            JMH
         CVAFDSM MAP=VTOC,ACCESS=MAPDATA,COUNT=YES,CTAREA=KOUNTA,      X
               UCB=(R8),DEB(R2),MF=(E,(1))                     JMH
         LH    R2,KOUNTA+2                                     JMH
         CVD   R2,DBLW                  CONVERT IT             JMH
         UNPK  LINE+30(5),DBLW+5(3)     AND MOVE TO THE LINE   JMH
         MVC   LINE+30(4),LINE+31       DONT WANT HIGH BYTE    JMH
         MVI   LINE+34,C' '             CLEAR OFF UNPRINTABLE  JMH
         OI    LINE+33,X'F0'            FIX SIGN               JMH
         MVC   LINE+60(2),=C'IX'         INDEXED VTOC          JMH
         BAL   R9,PUTLINE               WRITE IT OUT           JMH
         B     AGAIN                    CARRY ON AGAIN         JMH
RETURN   CLI   FLAG,0                   NO VOLUMES FOUND?
         BNE   RET77                    THERE WERE SOME
         MVC   LINE(54),=C'----NO VOLUMES FOUND FOR THE SEARCH ARGUMENTX
                GIVEN----'                                     JMH
         BAL   R9,PUTLINE               WRITE IT OUT           JMH
RET77    CLI   VOLUMENO,2               MORE VOLUMES TO GO
         BL    RET                      NO
         MVI   VOLUMENO,1               ONE SEARCH INDEX LEFT TO DO
         MVC   VOLUME(6),VOLUM2         SET NEW INDEX
         B     AGAIN
         SPACE 2
RET      XR    R15,R15                  RETURN CODE = 0
*/********************************************************************/
*/*                                                                  */
*/*  UNAUTHORIZE YOURSELF AGAIN : SINCE THIS IS A TSO CMD PROCESSOR  */
*/*  AUTHORISATION CHANGED YOUR ADDRESS SPACE TO AUTHORIZED.         */
*/*  YOU COULD GET ALL SORTS OF PROBLEMS LEAVING YOUR TSO ADDRESS    */
*/*  SPACE AUTHORIZED E.G YOU CANNOT LOAD PROGRAMS FROM UNAUTHORIZED */
*/*  LIBRARIES (I THINK ALWAYS TRUE BUT IT'S ACTUALLY ENFORCED       */
*/*  UNDER XA REL 2.1.2 AND HIGHER)                                  */
*/*                                                                  */
*/*                                                                  */
*/*                                                                  */
*/********************************************************************/
         AUTHOFF
*        SVC   3                        RETURN TO TMP
         EXIT  RC=0,LV=TSDSECTL-TSDSECT
         TITLE 'LISTVOL   -- CONSTANTS'
         LTORG
*/********************************************************************/
*/*                                                                  */
*/*                                                                  */
*/*    USE LIST FORM TO GENERATE PARAMETER LIST FOR CVAF             */
*/*    EXECUTE FORM WILL BE USED FOR ACTUAL EXECUTION                */
*/*                                                                  */
*/*                                                                  */
*/********************************************************************/
CVPL     CVAFDSM  MF=L,       USE NORMAL CALL                          *
               ACCESS=MAPDATA,                                         *
               MAP=VTOC,                                               *
               COUNT=YES
KOUNTA DC F'0'
*/*                                                             */
MSG0  DC   CL79'                   O N L I N E   V O L U M E   D I S P X
               L A Y'
MSG1  DC   CL79'VOLUME DEV USE  ------ FREE ------  -CONTIG- OPN  DEV DX
               EV  VTOC  ALLOCATION  '
MSG2  DC   CL79' NAME  ADR CNT  CYL  TRK EXT  DSCB  CYL  TRK DCB TYPE SX
               TAT TYPE    STATUS  '
MSG3 DC   CL79' '
PLPB     PUTLINE MF=L
PCL      IKJPARM DSECT=PDL
VOL      IKJIDENT 'VOLUME SEARCH INDEX',OTHER=ALPHANUM,MAXLNTH=6,      X
               PROMPT='VOLUME SEARCH INDEX'
         IKJENDP
         TITLE 'LISTVOL   -- DSECTS'
         CVT   DSECT=YES
         EJECT
         PRINT NOGEN       STUPID CVT MACRO RESETS GEN OPTION
*                          LIST= DOES NOT APPEAR IN MACRO !!!!!!!
         IEFUCBOB LIST=NO
         EJECT
         IKJPSCB
         EJECT
         EJECT
         IKJECT
         END
