SORTBLDL CSECT
***********************************************************************
*                                                                     *
*    THIS PROGRAM WILL SORT THE BLDL TABLE IN CORE.  THE TABLE        *
*  IS BUILT ORIGINALLY IN ALPHA-NUMERIC SEQUENCE BY LINK LIST         *
*  LIBRARIES AS SPECIFIED BY IEABLD00.  THE SYSTEM THEN               *
*  SEARCHES THE BLDL TABLE WITH A BINARY SEARCH.  THIS SORT           *
*  WILL PLACE THE ENTIRE BLDL TABLE IN OVERALL ALPHA-NUMERIC          *
*  SEQUENCE TO INSURE A CORRECT BINARY SEARCH.  THE PROGRAM           *
*  WILL ALSO READ EACH MEMBER IN THE BLDL TABLE AND CHECK IF          *
*  THE TTR IS FILLED IN.  IN THE CASE OF A MEMBER THAT HAS NO         *
*  TTR(PROBABLY DUE TO IEABLD00 LIST OUT OF SEQUENCE AT IPL TIME)     *
*  A SEPERATE BLDL WILL BE DONE FOR EACH MEMBER MISSING A TTR.        *
*  IF SUCCESSFUL THE BLDL WILL BE FILLED IN FOR THAT MEMBER.          *
*    THE PROGRAM CAN ALSO BE RUN WITH A PARM VALUE OF A MEMBER        *
*  NAME.  THE PROGRAM WILL THEN RE-DO THE BLDL ENTRY FOR THAT         *
*  ONE MEMBER ONLY REGARDLESS WHETHER IT WAS VALID BEFORE OR NOT.     *
*  THIS OPTION IS ONLY VALID AFTER THE NORMAL RUN ABOVE.              *
*                                                                     *
*  MODIFIED BY DOUG MERCER, FEB. 17, 1980, TO HAVE A BUBBLE SORT      *
*  IN CASE BSORT IS NOT AVAILABLE. NOTE THAT BSORT IS A HIGH-         *
*  PERFORMANCE PARTITIONING SORT AND THAT PERFORMANCE WITH THE        *
*  BUBBLE SORT WILL BE INFERIOR ALTHOUGH NOT SIGNIFICANTLY SO         *
*  UNLESS THERE IS A VERY LARGE BUILD LIST.                           *
*                                                                     *
***********************************************************************
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         EJECT
         STM   R14,R12,12(R13)
         BALR  R12,0
         USING *,R12
         LA    R2,SAVE
         ST    R2,8(R13)
         ST    R13,4(R2)
         LR    R13,R2
         EJECT
         OPEN  (IN)                OPEN NUCLEUS DATA SET
         SR    R10,R10             CLEAR REG 10
         SR    R11,R11             CLEAR REG 11
START    GET   IN,INAREA           GET A RECORD FROM IEANUC01
         TM    INAREA,X'20'        IS IT A CESD RECORD
         BNO   START               NO.....GET ANOTHER RECORD
         SR    R3,R3               CLEAR REG 3
         IC    R3,INAREA+7         INSERT LENGTH OF CESD RECORD
         LA    R4,INAREA+8         START OF CESD DATA
LOOP1    CLC   0(8,R4),IECPCNVT    IS IT TTR CONVERT?          DM FEB81
         BNE   CHECK2              NO.....CHECK FOR IEARESBL
         L     R10,8(R4)           YES....LOAD LINKEDIT ADDR OF MODULE
         ICM   R10,8,=X'FF'        SET TTR CONVERT FOUND INDICATOR
         LTR   R11,R11             IEARESBL CESD FOUND
         BNZ   CLOSE               YES.....GO FIND BLDL PTR
BUMP1    SH    R3,=H'16'           SUBTRACT FROM TOTAL DATA LENGTH
         BNP   START               ZERO...GET NEXT RECORD
         LA    R4,16(R4)           BUMP TO NEXT ENTRY
         B     LOOP1               CHECK NEXT ENTRY
CHECK2   CLC   0(8,R4),IEARESBL    IS IT IEARESBL
         BNE   BUMP1               NO.....GET NEXT ENTRY
         L     R11,8(R4)           YES....LOAD LINKEDIT ADDR OF MODULE
         ICM   R11,8,=X'FF'        SET IEARESBL FOUND INDICATOR
         LTR   R10,R10             TTR CONVERT CESD FOUND?
         BNZ   CLOSE               YES....GO FIND BLDL PTR
         B     BUMP1               GO CHECK NEXT ENTRY
CLOSE    CLOSE (IN)                CLOSE INPUT
         SR    R11,R10             DISPLACEMENT OF IEARESBL    DM FEB81-
                                   FROM IECPCNVT               DM FEB81
         L     R3,16               CVT ADDRESS
         L     R6,28(R3)           ADDRESS OF TTR CONVERT      DM FEB81
         AR    R6,R11              BUMP TO BLDL TABLE POINTER
         EJECT ,                                               DM FEB81
         L     R3,4(R13)           HIGHER SAVE AREA            DM FEB81
         L     R3,24(R3)           PARM POINTER                DM FEB81
         L     R3,0(R3)            LOAD PARM ADDRESS           DM FEB81
         LH    R4,0(R3)            LOAD PARM LENGTH
         LTR   R4,R4               DOES PARM VALUE EXIST
         BNZ   PARMBLDL            GO RE-DO BLDL FOR PARM MBR  DM FEB81
NORMAL   L     R7,0(R6)            ADDRESS OF BLDL TABLE
         LH    R8,2(R7)            LOAD LENGTH FIELD
         CH    R8,=H'60'           LENGTH OF ENTRIES EQUAL 60
         BNE   ERROR4              NO.....GOT THE WRONG ADDRESS
         LH    R8,0(R7)            LOAD NUMBER OF ENTRIES
         STH   R8,RECS+2           STORE NUMBER OF ENTRIES IN TABLE
         LA    R9,4(R7)            BUMP PAST COUNT FIELDS
         ST    R9,LOC              STORE ADDRESS IN SORT PARAMETER LIST
         BAL   R11,ZEROBLDL        ZERO BLDL POINTER
         LA    R1,SORTLIST         ADDRESS OF SORT PARAMETER LIST
         L     R15,=A(BSORT)       ADDRESS OF BSORT SUBPROGRAM
         WXTRN BSORT                    WHICH IS OPTIONAL      DM FEB81
         LTR   R15,R15                                         DM FEB81
         BZ    BUBBLE              BSORT IS NOT AVAILABLE      DM FEB81
         BALR  R14,R15             SORT THE BLDL TABLE IN CORE DM FEB81
         B     NEXT                                            DM FEB81
         SPACE 2                                               DM FEB81
* SORT THE BLDL ENTRIES BY MEMBER NAME. THIS                   DM DEC80
* IS A 'BUBBLE' SORT WHICH SHOULD BE ADEQUATELY EFFICIENT      DM DEC80
* IF THE BUILD LIST IS UNDER 500 ENTRIES.                      DM FEB81
         SPACE ,                                               DM DEC80
BUBBLE   L     R0,RECS             CALCULATE UPPER LIMIT       DM FEB81
         MH    R0,=Y(SORTLNG)                                  DM FEB81
         L     R15,LOC             FIRST ENTRY                 DM FEB81
         AR    R0,R15              BYTE PAST LAST (FOR LIMIT)  DM FEB81
         SPACE ,                                               DM FEB81
SORT1    LA    R14,SORTLNG(,R15)                               DM FEB81
         CR    R14,R0                                          DM FEB81
         BNL   SORT4               END OF SORT                 DM FEB81
         LR    R1,R15              CURRENT COMPARAND           DM FEB81
         SPACE ,                                               DM FEB81
SORT2    CLC   0(8,R1),0(R14)                                  DM FEB81
         BL    *+6                 OK - IN SEQUENCE            DM FEB81
         LR    R1,R14              SAVE ADDRESS FOR EXCHANGE   DM FEB81
         LA    R14,SORTLNG(,R14)   NEXT ELEMENT                DM FEB81
         CR    R14,R0              SEE IF SOME LEFT            DM FEB81
         BL    SORT2               YES - TRY NEXT              DM FEB81
         SPACE ,                                               DM FEB81
         CR    R1,R15              SEE IF SEQUENCE OK          DM FEB81
         BE    SORT3               YES - ADDRESS NOT CHANGED   DM FEB81
         XC    0(SORTLNG,R1),0(R15)     EXCHANGE               DM FEB81
         XC    0(SORTLNG,R15),0(R1)          THE               DM FEB81
         XC    0(SORTLNG,R1),0(R15)               ELEMENTS     DM FEB81
         SPACE ,                                               DM FEB81
SORT3    LA    R15,SORTLNG(,R15)   LOCATE THE NEXT ELEMENT     DM FEB81
         B     SORT1                                           DM FEB81
         SPACE ,                                               DM FEB81
SORT4    EQU   *                                               DM FEB81
         SPACE 2                                               DM FEB81
NEXT     CLI   10(R9),X'00'        BLDL INCOMPLETE FOR MEMBER
         BE    TRYBLDL             YES....TRY BLDL AGAIN
NEXT1    LA    R9,60(R9)           BUMP TO NEXT ENTRY
         BCT   R8,NEXT             GO CHECK NEXT ENTRY
         B     FINISH              CONTINUE IF NO MORE ENTRIES
TRYBLDL  MVC   BLDLNAME,0(R9)      MOVE MEMBER TO BLDL LIST
         XC    BLDLFILL,BLDLFILL   ZERO BLDL LIST
         BLDL  0,BLDLLIST          TRY BLDL AGAIN
         LTR   R15,R15             BLDL SUCCESSFUL
         BNZ   NEXT1               NO.....CHECK NEXT ENTRY
         MVC   0(60,R9),BLDLNAME   REPLACE ENTRY IN BLBL TABLE
         B     NEXT1               CHECK NEXT ENTRY
FINISH   BAL   R11,SETBLDL         SET BLDL POINTER
         B     EOJ                 END OF JOB
         EJECT
PARMBLDL CH    R4,=H'8'            PARM LENGTH LESS THAN NINE
         BH    ERROR1              NO.....GO TO PARM ERROR
         BCTR  R4,0                SUBTRACT FOR EXECUTE
         EX    R4,MOVEPARM         SAVE PARM VALUE
         L     R7,0(R6)            ADDRESS OF BLDL TABLE
         LH    R8,2(R7)            LENGTH OF ENTRIES
         CH    R8,=H'60'           LENGTH EQUAL TO 60
         BNE   ERROR4              NO.....GOT THE WRONG ADDRESS
         LH    R8,0(R7)            NUMBER OF ENTRIES
         LA    R9,4(R7)            BUMP TO FIRST ENTRY
LOOP     CLC   0(8,R9),MEMBER      MEMBER FROM PARM VALUE
         BE    BLDLREDO            YES....GO RE-D0 BLDL ENTRY
         LA    R9,60(R9)           BUMP TO NEXT ENTRY
         BCT   R8,LOOP             GO CHECK NEXT ENTRY
         B     ERROR6              ERROR IF NO MORE ENTRIES
BLDLREDO BAL   R11,ZEROBLDL        ZERO BLDL POINTER
         MVC   BLDLNAME,MEMBER     MOVE MEMBER NAME TO BLDL LIST
         BLDL  0,BLDLLIST          REDO BLDL FOR THIS MEMBER
         LTR   R15,R15             BLDL SUCCESSFUL
         BZ    OKAY                YES....REPLACE BLDL ENTRY
         MVI   10(R9),X'00'        INVALIDATE BLDL ENTRY
         BAL   R11,SETBLDL         REPLACE BLDL POINTER
         B     ERROR7              NO.....GO PRINT ERROR MESSAGE
OKAY     MVC   0(60,R9),BLDLNAME   REPLACE ENTRY IN BLDL TABLE
         BAL   R11,SETBLDL         REPLACE BLDL POINTER
         B     EOJ                 PROCESSING COMPLETE
         EJECT
ZEROBLDL MODESET KEY=ZERO          GET IN KEY 0
         ST    R6,HOLD6            SAVE BLDL TABLE POINTER
         ST    R7,HOLD7            SAVE BLDL TABLE ADDRESS
         MVC   0(4,R6),=F'0'       ZERO BLDL TABLE POINTER
         BR    R11                 RETURN TO CALLER
         SPACE 3
SETBLDL  L     R6,HOLD6            LOAD BLDL TABLE POINTER
         L     R7,HOLD7            LOAD BLDL TABLE ADDRESS
         ST    R7,0(R6)            RESTORE BLDL TABLE ADDRESS
         MODESET KEY=NZERO         BACK TO TCB KEY
         BR    R11                 RETURN TO CALLER
         SPACE 3
EOJ      MODESET MODE=PROB         BACK TO PROBLEM STATE
         L     R13,4(R13)
         LM    R14,R12,12(R13)
         SR    R15,R15
         BR    R14
         EJECT
         PRINT NOGEN
ERROR1   WTO   'SORTBLDL - PARM VALUE TOO LARGE'
         ABEND 111
         SPACE 3
ERROR3   WTO   'SORTBLDL - MEMBERS NOT FOUND READING IEANUC01 MODULE'
         ABEND 333,DUMP
         SPACE 3
ERROR4   WTO   'SORTBLDL - COMPUTED BLDL TABLE ADDRESS INVALID'
         ABEND 444,DUMP
         SPACE 3
ERROR5   WTO   'SORTBLDL - PARM VALUE OPTION INVALID ON FIRST RUN'
         ABEND 555
         SPACE 3
ERROR6   WTO   'SORTBLDL - PARM VALUE MEMBER NOT FOUND IN BLDL TABLE'
         ABEND 666
         SPACE 3
ERROR7   WTO   'SORTBLDL - BLDL FAILED FOR PARM VALUE MEMBER'
         ABEND 777,DUMP
         PRINT GEN
         EJECT
SAVE     DS    18F
CVTUNAME DC    CL8'SORTBLDL'
CVTUDATA DS    0D
HOLD6    DS    F
HOLD7    DS    F
SORTLIST DS    0F                  BSORT PARAMETER LIST
KEY      DC    A(SORTKEY)          ADDRESS OF SORT KEY
PTR1     DC    A(NUMK)
LOC      DC    F'0'
PTR3     DC    A(LEN)
PTR4     DC    A(RECS)
NUMK     DC    F'1'                NUMBER OF KEYS
LEN      DC    A(SORTLNG)          NUMBER OF BYTES PER RECORD
SORTLNG  EQU   60
RECS     DC    F'0'                NUMBER OF RECORDS TO SORT
SORTKEY  DS    0F
         DC    F'1'                START SORT POSITION
         DC    F'8'                LENGHT OF SORT FIELD
         DC    CL4'CH'             SORT FIELD FORMAT
         DC    CL4'A'              SORT ORDER
IECPCNVT DC    CL8'IECPCNVT'
IEARESBL DC    CL8'IEARESBL'
MOVEPARM MVC   MEMBER(0),2(R3)
MEMBER   DC    CL8' '
BLDLLIST DS    0CL64
BLDLNULN DC    XL4'0001003C'
BLDLNAME DC    CL8' '
BLDLFILL DC    XL52'00'
INAREA   DS    CL256
         EJECT
IN       DCB   DSORG=PS,MACRF=GM,DDNAME=NUCLEUS,EODAD=ERROR3
         END   SORTBLDL
