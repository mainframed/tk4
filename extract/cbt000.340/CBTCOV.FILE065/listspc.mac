         TITLE 'LISTSPC - DOCUMENTATION'
*.....................................................................*
*.                                                                   .*
*.   LISTSPC                                                         .*
*.                                                                   .*
*.....................................................................*
*.                                                                   .*
*.   1.0  GENERAL DESCRIPTION                                        .*
*.                                                                   .*
*.   THIS TSO COMMAND IS A MULTI-PURPOSE PROGRAM FOR LISTING         .*
*.   THE SPACE (IN TRACKS) USED BY DATASETS AND THE FREE SPACE       .*
*.   ON DISK VOLUMES.  IT CAN ALSO LIST THE EXTENTS AND VOLSER       .*
*.   OF DATASETS.                                                    .*
*.                                                                   .*
*.....................................................................*
*.                                                                   .*
*.....................................................................*
*.                                                                   .*
*.   2.0  COMMAND SYNTAX                                             .*
*.                                                                   .*
*.    LISTSPC  DATASET(DSNAME-LIST) LEVEL(INDEX-STRUCTURE)           .*
*.             VOLUME(VOLUME-LIST) EXTENTS                           .*
*.                                                                   .*
*.       DATASET(DSNAME-LIST)                                        .*
*.          -  SPECIFIES A DSNAME LIST FOR WHICH YOU DESIRE TO       .*
*.             HAVE THE SPACE INFORMATION LISTED.  TSO DATASET       .*
*.             NAMING CONVENTIONS APPLY FOR THE DSNAMES.             .*
*.                                                                   .*
*.       LEVEL(INDEX-STRUCTURE)                                      .*
*.          -  SPECIFIES AN INDEX STRUCTURE FOR WHICH YOU DESIRE     .*
*.             TO HAVE THE SPACE INFORMATION LISTED FOR EACH         .*
*.             DATASET WITHIN THIS INDEX STRUCTURE.  THIS MAY        .*
*.             BE A DSNAME CONTAINING ONE EMBEDDED ASTERISK NOT      .*
*.             AS THE HIGH-LEVEL QUALIFIER OR IT MAY BE AN INDEX     .*
*.             LEVEL.                                                .*
*.                                                                   .*
*.       VOLUME(VOLUME-LIST)                                         .*
*.          -  IF USED WITH THE 'DATASET' PARAMETER, SPECIFIES THE   .*
*.             VOLUME ON WHICH THE DATASET RESIDES.  NO CATALOG      .*
*.             SEARCH WILL BE PERFORMED FOR THE DATASETS.            .*
*.          -  IF USED AS THE ONLY PARAMETER, SPECIFIES A LIST OF    .*
*.             VOLUMES FOR WHICH FREE SPACE INFORMATION WILL BE      .*
*.             LISTED.                                               .*
*.                                                                   .*
*.       EXTENTS                                                     .*
*.          -  SPECIFIES THAT THE VOLSER AND THE DATASET'S EXTENTS   .*
*.             (IN A HEXADECIMAL FORMAT) WILL BE LISTED FOR EACH     .*
*.             DATASET.                                              .*
*.                                                                   .*
*.     NOTE:  THE USE OF THE 'VOLUME' AND THE 'EXTENTS'              .*
*.            PARAMETERS CAN BE RESTRICTED TO CERTAIN USERIDS        .*
*.            THROUGH THE USE OF BIT 0 IN THE FIELD LABELED          .*
*.            'FLAG'.                                                .*
*.                                                                   .*
*.....................................................................*
*.                                                                   .*
*.....................................................................*
*.                                                                   .*
*.   3.0  PROGRAM STRUCTURE                                          .*
*.                                                                   .*
*.                                                                   .*
*.   3.0.1  INITIALIZATION                                           .*
*.                                                                   .*
*.   THIS SECTION BUILDS THE PARAMETER LISTS FOR PARSE AND           .*
*.   LOCINDEX.  IT CAN, IF DESIRED, CHECK THE USERID FOR             .*
*.   AUTHORIZATION AND SET BIT 0 OF THE FLAG FIELD IF THE USER       .*
*.   IS AUTHORIZED.  IT THEN LINKS TO PARSE AND DETERMINES           .*
*.   WHICH TYPE OF REQUEST IS BEING MADE.                            .*
*.                                                                   .*
*.                                                                   .*
*.   3.0.2  DATASET ROUTINE                                          .*
*.                                                                   .*
*.   THIS ROUTINE IS ENTERED IF THE 'DATASET' PARAMETER IS           .*
*.   SPECIFIED.  IF THE 'VOLUME' PARAMETER IS ALSO SPECIFIED,        .*
*.   THE 'LOCATE' IS BYPASSED.  IT THEN LINKS TO THE OBTAIN AND      .*
*.   PRINT ROUTINE.                                                  .*
*.                                                                   .*
*.                                                                   .*
*.   3.0.3  LEVEL ROUTINE                                            .*
*.                                                                   .*
*.   THIS ROUTINE IS ENTERED IF THE 'LEVEL' PARAMETER IS SPECIFIED.  .*
*.   IT LINKS TO LOCINDEX TO GET THE DSNAMES FOR THE INDEX           .*
*.   STRUCTURE AND THEN LINKS TO THE OBTAIN AND PRINT ROUTINE.       .*
*.                                                                   .*
*.                                                                   .*
*.   3.0.4  VOLUME ROUTINE                                           .*
*.                                                                   .*
*.   THIS ROUTINE IS ENTERED IF THE 'VOLUME' PARAMETER IS            .*
*.   SPECIFIED AS THE ONLY PARAMETER.  IT 'OBTAIN'S THE FORMAT 4     .*
*.   DSCB AND EXTRACTS CERTAIN FIELDS.  IT THEN 'OBTAIN'S ALL        .*
*.   OF THE FORMAT 5 DSCB RECORDS AND ACCUMULATES THE FREE           .*
*.   EXTENTS.                                                        .*
*.                                                                   .*
*.                                                                   .*
*.   3.0.5  OBTAIN AND PRINT ROUTINE                                 .*
*.                                                                   .*
*.   THIS ROUTINE 'OBTAIN'S THE FORMAT 1 DSCB AND THE FORMAT 3       .*
*.   DSCB (IF ONE EXISTS) FOR A DATASET AND ACCUMULATES THE          .*
*.   EXTENTS.  IT THEN PRINTS THE DSORG, # OF ALLOCATED TRACKS,      .*
*.   # OF UNUSED TRACKS, # OF EXTENTS, AND THE DSNAME.  IF THE       .*
*.   'EXTENTS' KEYWORD WAS SPECIFIED, IT ALSO PRINTS THE VOLSER      .*
*.   AND THE EXTENTS FOR THE DATASET.                                .*
*.                                                                   .*
*.....................................................................*
         TITLE 'LISTSPC - LIST SPACE COMMAND'
LISTSPC  START 0
         STM   R14,R12,12(R13)
         USING LISTSPC,R15
         ST    R13,SAVE+4
         LA    R13,SAVE
         B     BEGIN
SAVE     DC    18F'0'
         DROP  R15
         USING SAVE,R13
         TITLE 'LISTSPC - GETMAIN AND PARSE'
BEGIN    LR    R4,R1
         USING CPPL,R4
         LA    R0,LWORK            GET LENGTH OF WORK AREA
         AH    R0,=H'4096'         GET EXTRA 4K FOR LOCINDEX WORK
         ICM   R0,B'1000',=FL1'1'  SUBPOOL 1
         GETMAIN R,LV=(0)
         LR    R12,R1               SAVE ADDR OF WORK AREA
         USING WORKAREA,R12
         LA    R0,LOCINDXW          POINT TO LOCINDEX WORK AREA
         ST    R0,PARM+12           SAVE ADDR IN PARM LIST
         MVI   PARM+12,X'80'        INDICATE END OF PARM LIST
         MVI   WXTNT+4,X'04'
         LA    R5,WIOPL             GET ADDR OF IOPL        *HMD 11/79*
         USING IOPL,R5                                      *HMD 11/79*
         L     R0,CPPLUPT           GET UPT ADDRESS         *HMD 11/79*
         ST    R0,IOPLUPT           SAVE IN IOPL            *HMD 11/79*
         L     R0,CPPLECT           GET ECT ADDRESS         *HMD 11/79*
         ST    R0,IOPLECT           SAVE IN IOPL            *HMD 11/79*
         LA    R0,CPECB             GET ECB ADDRESS         *HMD 11/79*
         ST    R0,IOPLECB           SAVE IN IOPL            *HMD 11/79*
         MVC   MSGID(L'MSGID),=C'HMD406I '  MOVE IN ID      *HMD 11/79*
         LA    R3,WPPL             GET ADDR OF PPL
         USING PPL,R3
         L     R0,CPPLCBUF
         ST    R0,PPLCBUF          SAVE ADDR OF COMMAND BUFFER
         L     R0,CPPLUPT
         ST    R0,PPLUPT           SAVE ADDR OF UPT
         LR    R10,R0
         MVI   USERID,C' '         CLEAR USERID FIELD       *HMD 12/79*
         MVC   USERID+1(L'USERID-1),USERID                  *HMD 12/79*
         LA    R10,UPTPREFX-UPT(R10) GET ADDR OF PREFIX FROM UPT
         SR    R11,R11
         ICM   R11,1,7(R10)        GET LENGTH OF PREFIX     *HMD 11/79*
         BNZ   BCTR11              IF NOT ZERO, DECREMENT   *HMD 11/79*
         LA    R11,1               FAKE OUT FOR NO PREFIX   *HMD 11/79*
BCTR11   BCTR  R11,0                                        *HMD 11/79*
AUTHRZD  OI    FLAG,X'80'
LECT     L     R0,CPPLECT
         ST    R0,PPLECT           SAVE ADDR OF ECT
         LA    R0,CPECB
         ST    R0,PPLECB           SAVE ADDR OF ECB
         XC    CPECB,CPECB         CLEAR ECB
         L     R0,=A(PARSLIST)
         ST    R0,PPLPCL           SAVE ADDR OF PCL
         LA    R0,WPDL
         ST    R0,PPLANS           SAVE ADDR OF PDL AREA
         XC    PPLUWA,PPLUWA       CLEAR UWA
         LR    R1,R3               PASS ADDR OF PPL TO PARSE
         LINK  EP=IKJPARS          LINK TO PARSE SERVICE ROUTINE
         LTR   R15,R15             PARSE ERROR
         BNZ   RETC                 YES
         TM    PPLANS,X'FF'        PARSE ERROR
         BO    RETC                 YES
         DROP  R3,R4
         L     R3,WPDL             GET ADDR OF PDL
         USING IKJPARMD,R3
         TM    EXTENT+1,X'01'      EXTENT SPECIFIED?
         BZ    *+8                  NO
         OI    FLAG,X'20'           YES, SET FLAG BIT
         TM    DSNLIST+6,X'80'      DSNAME SPECIFIED?
         BO    DSNRTN                YES
         TM    LEV+6,X'80'          INDEX LEVEL SPECIFIED?
         BO    LEVEL                 YES
         TM    VOL+6,X'80'          VOLUME SPECIFIED?
         BO    FREEA                 YES
         B     EUSLO                NO PARMS - LISTS FOR USERID
         TITLE 'LISTSPC - DATASET NAME ROUTINE'
DSNRTN   LA    R4,DSNLIST           POINT TO DSN LIST
         LA    R0,L'MSG1
         LA    R1,MSG1
         BAL   R14,PUTLINE          PUTLINE HEADING
DSNAME   L     R5,0(R4)             POINT TO DSNAME
         LH    R6,4(R4)             GET LENGTH OF DSNAME
         BCTR  R6,0
         MVI   DSN1,X'40'
         MVC   DSN1+1(43),DSN1     BLANK DSN WORK AREA
         LA    R8,DSN1              POINT TO DSN WORK AREA
         TM    6(R4),X'40'          DSNAME CONTAINED IN QUOTES?
         BO    MVCDSNAM               YES
         EX    R11,USIDMVC         MOVE USERID TO WORK AREA
         LA    R8,1(R11,R8)        BUMP PAST USERID
         MVI   0(R8),C'.'          MOVE PERIOD TO WORK AREA
         LA    R8,1(0,R8)          BUMP PAST
MVCDSNAM EX    R6,DSNMVC           MOVE DSNAME TO WORK AREA
         MVC   VOLS,BLANKS         MOVE BLANKS TO VOLSER WORK AREA
         TM    FLAG,X'80'          AUTHORIZED USER?
         BZ    LOCDSN               NO
         TM    VOL+6,X'80'         VOLUME SPECIFIED?
         BZ    LOCDSN               NO, LOCATE DSN
         LA    R1,VOLS             POINT TO VOLSER WORK AREA
         L     R5,VOL              POINT TO VOLUME PARAMETER
         LH    R6,VOL+4            GET LENGTH OF VOL PARM
         BCTR  R6,0
         EX    R6,MVCVOLS          MOVE VOL PARM TO VOLSER WORK AREA
         B     BALOBTN             BYPASS LOCATE
LOCDSN   OI    FLAG,X'10'
         LOCATE INDS
         LTR   R15,R15              DID IT FIND VOL SER
         BNZ   ERR03                 NO WRITE ERROR MSG
         NI    FLAG,X'EF'
         MVC   VOLS(6),BUF1+6      YES - MOVE IN VOL SER
         SPACE 2
BALOBTN  BAL   R9,OBTNRTN          LINK TO OBTAIN AND PRINT ROUTINE
RETDSN   L     R4,24(R4)           GET DSN LINK POINTER
         C     R4,ENDLIST          END OF LIST?
         BE    RETC                 YES
         B     DSNAME               NO, GET NEXT DSNAME
         TITLE 'LISTSPC - LEVEL ROUTINE'
EUSLO    EQU   *
**     FOR ENTIRE USERID LOGGED ON
EUSLOM   MVC   USERID(0),0(R10)        MOVE IN USERID
         EX    R11,EUSLOM              MOVE IN PREFIX       *HMD 12/79*
         B     GOTUS               BRANCH TO GOT USERID
         SPACE 3
LEVEL    EQU   *
         L     R5,LEV              POINT TO INDEX STRUCTURE
         LH    R6,LEV+4            GET LENGTH OF INDEX STRUCT
         BCTR  R6,0
         LA    R8,USERID           POINT TO WORK AREA
         EX    R6,DSNMVC           MOVE INDEX STRUCTURE TO WORK AREA
GOTUS    EQU   *
         LA    R0,L'MSG1
         LA    R1,MSG1
         BAL   R14,PUTLINE         PUTLINE HEADING
         OI    FLAG,X'40'          SET FLAG FOR DATA SETS FOR USERID
LOOP     EQU   *                   LOOP FOR DATASET IN USERID
         L     R15,=V(LOCINDEX)    POINT TO EP(LOCINDEX)
         LA    R1,PARM             POINT TO PARM LIST
         BALR  R14,R15             GO TO LOCINDEX
         B     *+4(R15)            BRANCH , DEP ON RETURN CODE
         B     OK                  0-GET INFOR FOR DSN & CONT
         B     NOUSER              4-PRINT MSG & RETRUN TO SYS
         B     NOTDISK             8-PRINT MSG&CONTINUE
         B     MULTIVOL            12-PRINT MSG&CONTINUE
         B     RETC                16-FINISHED-RETURN TO SYS
         B     RDERR               20-PRINT MSG&RETURN TO SYS
         B     SVC26R              24-SVC 26 ERROR          *HMD 04/82*
*                                     PRINT MSG&RETURN TO SYS
OK       BAL   R9,OBTNRTN          LINK TO OBTAIN AND PRINT ROUTINE
         B     LOOP                GET NEXT DSNAME FROM LOCINDEX
         SPACE 3
         TITLE 'LISTSPC - VOLUME ROUTINE'
FREEA    EQU   *
         OI    FLAG,X'05'                                   *HMD 11/79*
** TO GET AVAILABLE SPACE ON PARTICULAR VOLUME
         TM    FLAG,X'80'          AUTHORIZED USER?
         BZ    ERRF                 NO
         LA    R0,L'MSG4
         LA    R1,MSG4
         BAL   R14,PUTLINE         PUTLINE HEADING
         SPACE 2
         LA    R4,VOL              POINT TO VOLUME LIST
VOLLOOP  ST    R4,OBTNSAVE         SAVE ADDRESS
         MVI   MSG2,X'40'
         MVC   MSG2+1(75),MSG2     BLANK MESSAGE AREA
         XC    PEXCTR,PEXCTR       CLEAR EXTENT COUNTER
         LA    R1,VOLS             POINT TO VOLSER WORK AREA
         L     R5,0(R4)            POINT TO VOLUME PARM
         LH    R6,4(R4)            GET LENGTH OF VOL PARM
TESTPT1  BCTR  R6,0
         EX    R6,MVCVOLS          MOVE VOL PARM TO VOLSER WORK AREA
         LA    R1,MSG2             POINT TO MESSAGE AREA
         EX    R6,MVCVOLS          MOVE VOLSER TO MESSAGE AREA
         MVI   DSN1,X'04'          MOVE 'DSN' FOR F4 DSCB...
         MVC   DSN1+1(43),DSN1     ...INTO DSN1
         OBTAIN SERCHCAM
         CLI   BUF1,X'F4'          DID IT READ OK?
         BNE   ERRF4               NO
         MVC   VOLTKCYL(2),BUF1+20 GET NUM OF TRKS/CYL
         MVC   VOLDSCTK+1(1),BUF1+30   GET NUM OF DSCBS PER TRK
         MVC   VOLF4CHR(4),BUF1+63 GET CCHH OF START OF VTOC
         MVI   VOLF4CHR+4,X'01'    F4 DSCB IS FIRST REC
         LH    RCC,VOLF4CHR        SETUP...
         LH    RHH,VOLF4CHR+2         DISK...
         SR    RR,RR                     ADDRESSING...
         IC    RR,VOLF4CHR+4
         MVC   WXTNT(4),BUF1+63    MOVE BEGIN XTNT TO WORK AREA
         UNPK  MSG2+29(9),WXTNT(5) UNPACK INTO MESSAGE AREA
         TR    MSG2+29(8),TRTBL    TRANSLATE EXTENT
         MVC   WXTNT(4),BUF1+67    MOVE END XTNT TO WORK AREA
         UNPK  MSG2+38(9),WXTNT(5) UNPACK INTO MESSAGE AREA
         TR    MSG2+38(8),TRTBL    TRANSLATE EXTENT
         SR    R9,R9
         LH    R9,BUF1+6             MOVE IN NUMBER FREE DSCB
         CVD   R9,WKD
         MVC   MSG2+6(6),MASKED        MOVE IN MASK
         ED    MSG2+6(6),WKD+5         EDIT FREE DSCB
         LH    R1,VOLNO            GET NUM VOLS PROCESSED
         LA    R1,1(R1)            BUMP
         STH   R1,VOLNO            REPLACE
         LA    RR,1(RR)            BUMP RECORD PTR
         CH    RR,VOLDSCTK         TEST FOR LAST REC ON TRK
         BNH   VBSET               GO SET VTOCCHHR
         LA    RR,1                RESET RR TO 1
         LA    RHH,1(RHH)          BUMP TRK COUNTER
         CH    RHH,VOLTKCYL        PAST END OF CYL?
         BL    VBSET               GO SET VTOCCHHR
         SR    RHH,RHH             ELSE SET RHH TO TRK 0
         LA    RCC,1(RCC)          BUMP TO NEXT CYL
VBSET    STH   RCC,VTOCCHHR        SET...
         STH   RHH,VTOCCHHR+2         UP...
         STC   RR,VTOCCHHR+4            VTOCCHHR
         SR    R4,R4               ZERO COUNTER
         SPACE 2
PFOBT    OBTAIN SEEKCAM
         LA    R2,1                INDICATE FIRST EXTENT
         LA    R3,BUF1+4           POINT TO FIRST EXTENT
PFLOOP   CLC   0(5,R3),=D'0'       LAST EXTENT?
         BE    PFGOT               EXIT IF SO
         MVC   HWK1(2),2(R3)       MOVE NUM CYLS TO HWD
         LH    R1,HWK1             LOAD
         MH    R1,VOLTKCYL         CONVERT TO TRKS
         SR    R0,R0               ZERO R0
         IC    R0,4(R3)            LOAD NUM TRKS
         AR    R1,R0               ADD TRKS
         AR    R4,R1               ACCUMULATE
         LA    R2,1(R2)            BUMP CTR
         CH    R2,=H'9'            NINTH EXTENT?
         BE    PFXT9               BRANCH IF SO
         CH    R2,=H'27'           27TH EXTNET?
         BE    PFXT27              BRANCH IF SO
         LA    R3,5(R3)            BUMP NORMALLY
         B     PFLOOP              AND CONTINUE
PFXT9    LA    R3,6(R3)            SKIP OVER F5 IF AT DSCH+44
         B     PFLOOP              AND CONTINUE
PFXT27   AH    R2,PEXCTR           ACCUM EXT TOTALS
         BCTR  R2,0
         STH   R2,PEXCTR           SAVE EXT TOTALS
         CLC   BUF1+135(5),=D'0'   PTR TO NEXT F5?
         BE    PFGOT               DONE. NO MORE F5
         MVC   VTOCCHHR(5),BUF1+135
         B     PFOBT               GO READ NEXT F5
PFGOT    EQU   *
         AH    R2,PEXCTR           ACCUM EXTENT TOTALS
         CVD   R2,WKD              CONVERT NUM EXTENTS
         MVC   MSG2+14(4),MASKED     MOVE IN MASK
         ED    MSG2+14(4),WKD+6      EDIT NUM EXTENTS
         CVD   R4,WKD              CONVERT NUM TRKS FREE
         MVC   MSG2+21(6),MASKED     MOVE IN MASK
         ED    MSG2+21(6),WKD+5      EDIT FREE TRKS
         LA    R1,MSG2             GET MESSAGE ADDRESS      *HMD 11/79*
         LA    R0,76               GET MESSAGE LENGTH       *HMD 11/79*
         BAL   R14,PUTLINE         PUT OUT MESSAGE          *HMD 11/79*
VOLRET   L     R4,OBTNSAVE         LOAD POINTER TO VOLUME LIST
         L     R4,8(R4)            GET LINK POINTER
         C     R4,ENDLIST          END OF LIST
         BE    RETC                 YES
         B     VOLLOOP              NO, GET NEXT VOLUME
         TITLE 'LISTSPC - OBTAIN AND PRINT ROUTINES'
*   READ DSCB1 AND GET SPACE
OBTNRTN  STM   R2,R11,OBTNSAVE     SAVE CALLER'S REGISTERS
         MVC   DSNSAVE(44),DSN1
         MVI   DSN1,X'04'          MOVE 'DSN' FOR F4 DSCB...
         MVC   DSN1+1(43),DSN1     ...INTO DSN1
         OBTAIN SERCHCAM
         CLI   BUF1,X'F4'          DID IT READ OK?
         BNE   ERRF4               NO
         MVC   VOLTKCYL(2),BUF1+20 GET NUM OF TRKS/CYL
         MVC   DSN1(44),DSNSAVE
         MVI   MSG2,X'40'
         MVC   MSG2+1(75),MSG2     BLANK MESSAGE AREA
         OBTAIN SERCHCAM
         LTR   R15,R15             DID OBTAIN WORK
         BNZ   ERR03               NO - WRITE ERROR MSG
         SPACE 2
         CLI   BUF1,C'1'            IS IT F1 DSCB?
         BNE   ERR01                NOT F1
         LA    R9,XTNTS            POINT TO EXTENTS SAVE AREA
         LH    R6,BUF1+54          GET LAST RELATIVE TRK USED
         CLI   BUF1+56,X'00'       IS TRK UNUSED?
         BE    *+8                  YES
         LA    R6,1(R6)             NO, ANOTHER TRACK
         STH   R6,LASTTRK          SAVE LAST REL. TRK
         MVC   DSORG,BUF1+38       SAVE DSORG
AROUND   EQU   *
* TEST FOR TYPE OF DSORG AND MOVE TO PRINT LINE
         CLI   BUF1+38,X'80'        IS IT IS
         BNE   NIS                  NO
         MVC   MSG2+2(2),=C'IS'     YES - MOVE IN IS
         B     GDSO                 BRANCH TO GOT DSORG
NIS      CLI   BUF1+38,X'40'        IS IT PS
         BNE   NPS                   NO
         MVC   MSG2+2(2),=C'PS'      YES-MOVE IN PS
         B     GDSO                 BRANCH TO GOT DSORG
NPS      CLI   BUF1+38,X'20'        IS IT DA
         BNE   NDA                   NO
         MVC   MSG2+2(2),=C'DA'      YES - MOVE IN DA
         B     GDSO                 BRANCH TO GOT DSORG
NDA      CLI   BUF1+38,X'02'        IS IT PO
         BNE   NPO                   NO
         MVC   MSG2+2(2),=C'PO'      YES - MOVE IN PO
         B     GDSO                 BRANCH TO DSORG
NPO      CLI   BUF1+38,X'01'        IS IT UNMOVEABLE
         MVC   MSG2+2(2),=C' U'      YES
GDSO     SR    R2,R2                ZERO REG 2
         IC    R2,BUF1+15           PICK UP NUMBER OF EXTENTS
         SR    R4,R4                CLEAR R4 TO TRK ACCUMULATION
         LTR   R2,R2               NO XTNTS? - GDG PATTERN. DSCB
         BZ    VVALID               YES, BYPASS ACCUMULATE
         LA    R3,1                 SET EXTENT COUNTER
         LA    R5,BUF1+61           POINT TO FIRST EXTENT
VXTLOOP  MVC   0(10,R9),0(R5)      MOVE EXTENT TO SAVE AREA
         LA    R9,10(R9)           BUMP TO NEXT SAVE AREA
         MVC   HWK1(2),6(R5)        MOVE HI-CYL TO HWD
         LH    R0,HWK1              LOAD
         MVC   HWK1(2),8(R5)        MOVE HI-TRK TO HWD
         LH    R1,HWK1              LOAD
         MVC   HWK1(2),2(R5)        MOVE LOW-CYL TO HWD
         SH    R0,HWK1              SUBTRACT
         MVC   HWK1(2),4(R5)        MOVE LOW-TRK TO HWD
         SH    R1,HWK1              SUBTRACT
         MH    R0,VOLTKCYL          CONVERT CYL TO TRK
         AR    R1,R0                GET TOTAL MINUS1
         LA    R4,1(R1,R4)          GET TOTAL AND ACCUMULATE
         CR    R3,R2                DONE LAST EXTENT?
         BE    VVALID               GO TO VVALID IF SO
         LA    R3,1(R3)             BUMP TO EXTENT COUNTER
         CH    R3,=H'4'             FOURTH EXTENT?
         BE    VXT4                   BRANCH IF SO
         CH    R3,=H'8'             EIGHTTH EXTENT?
         BE   VXT8
         LA    R5,10(R5)            ELSE BUMP EXTENT POINTER
         B     VXTLOOP              AND GO TO NEXT EXTENT
VXT4     MVC   VTOCCHHR(5),BUF1+91  POINT NEXT DSCH(F2 OR F3)
VXT4OBT  OBTAIN SEEKCAM
         CLI   BUF1+44,C'3'         IF IT F3 DSCB
         BE    VXT4F3               BRANCH IF SO
         MVC   VTOCCHHR(5),BUF1+135  ELSE ITS F2-POINT TO F3
         B     VXT4OBT
VXT4F3   LA    R5,BUF1+4            POINT TO FIRST EXTENT IN F3
         B     VXTLOOP              CONTINUE LOOP FOR SIZE
VXT8     LA    R5,BUF1+45           SKIP OVER F3 ID IN F3 DSCB
         B     VXTLOOP              CONTINUE LOOP FOR SIZE
VVALID   EQU   *
* CONVERT SPACE ALLOC AND EDIT IN PRINT LINE
         CVD   R4,WKD               CONVERT DEC. R4  #TRKS ALLOC
         MVC   MSG2+5(6),MASKED      MOVE MASKED FIELD IN
         ED    MSG2+5(6),WKD+5       EDIT  # TRKS MSG2+5
         TM    DSORG,X'42'        IS IT PO OR PS
         BNZ   CVDU                  YES - BRANCH
         MVI   MSG2+17,C'*'
         B     CVDX                 BRANCH TO EXTENT CONVERSION
CVDU     LH    R6,LASTTRK            GET LAST RELATIVE TRACK
         LR    R7,R4
         SR    R7,R6                 R7 CONTAINS UNUSED SPACE
         CVD   R7,WKD               CONVERT DEC R7
         MVC   MSG2+12(6),MASKED      MOVE IN MASKED FIELD
         ED    MSG2+12(6),WKD+5       EDIT # TRKD UNUSED
CVDX     CVD   R2,WKD                   PICK UP # EXTENTS
         MVC   MSG2+20(4),MASKED      MOVE IN MASKED FIELD
         ED    MSG2+20(4),WKD+6      EDIT # EXTENTS USED
         MVC   MSG2+27(44),DSN1     MOVE DSN TO PRINT LINE
         LA    R1,MSG2              GET MESSAGE ADDRESS     *HMD 11/79*
         LA    R0,76                GET LENGTH OF LINE      *HMD 11/79*
         BAL   R14,PUTLINE          PUT OUT MESSAGE         *HMD 11/79*
         TM    FLAG,X'A0'          AUTHORIZED USER?
         BNO   OBTNRET              NO
         LTR   R2,R2               ANY EXTENTS?             *HMD 03/80*
         BNP   OBTNRET             NO, GET NEXT D.S.        *HMD 03/80*
         LA    R9,XTNTS            POINT TO EXTENT SAVE AREA
         MVC   MSG2(6),VOLS        MOVE VOLSER TO MESSAGE AREA
OUTLOOP  LA    R3,3                SET LOOP CONTROL
         LA    R4,MSG2+8           POINT TO MESSAGE AREA
         MVI   MSG2+6,X'40'
         MVC   MSG2+7(69),MSG2+6   BLANK MESSAGE AREA
INLOOP   MVC   WXTNT+3(1),1(R9)    MOVE EXTENT # TO WORK AREA
         UNPK  0(2,R4),WXTNT+3(2)  UNPACK EXTENT #
         TR    0(1,R4),TRTBL       TRANSLATE EXTENT #
         MVC   WXTNT(4),2(R9)      MOVE BEGIN XTNT TO WORK AREA
         UNPK  2(9,R4),WXTNT(5)    UNPACK XTNT
         TR    2(8,R4),TRTBL       TRANSLATE EXTENT
         MVC   WXTNT(4),6(R9)      MOVE END XTNT TO WORK AREA
         UNPK  11(9,R4),WXTNT(5)   UNPACK XTNT
         TR    11(8,R4),TRTBL      TRANSLATE EXTENT
         LA    R9,10(R9)           BUMP TO NEXT EXTENT
         LA    R4,22(R4)           BUMP MESSAGE AREA POINTER
         BCTR  R2,0                DECREASE # EXTENTS
         LTR   R2,R2               ANY MORE EXTENTS
         BNP   *+8                  NO                      *HMD 03/80*
         BCT   R3,INLOOP           CONVERT NEXT EXTENT
         LA    R0,L'MSG2
         LA    R1,MSG2
         BAL   R14,PUTLINE         PUT OUT MESSAGE
         MVC   MSG2(6),BLANKS      BLANK VOLSER
         LTR   R2,R2               ANY MORE EXTENTS?
         BNZ   OUTLOOP              YES
OBTNRET  LM    R2,R11,OBTNSAVE     RELOAD CALLER'S REGISTERS
         BR    R9                  RETURN TO CALLER
         TITLE 'LISTSPC - EOJ AND ERROR ROUTINES'
RETC     EQU   *
         L     13,SAVE+4           LOAD R13 PREVIOUS SPACE AREA
         LM    2,12,28(13)         RELOAD REGISTERS
         L     14,12(13)           LOAD RETURN ADDRESS
         MVI   12(13),X'FF'        INDICATE CONTROL RETURN CALLING PROG
         SR    15,15               CLEAR RETURN CODE        *HMD 04/82*
         BCR   15,14               RETURN TO CALLING PROGRAM
         SPACE 3
ERR01    EQU   *
* NO VALID COMMAND
         LA    R1,ERMSG1                                    *HMD 11/79*
         LA    R0,18                                        *HMD 11/79*
         BAL   R14,PUTLINEI                                 *HMD 11/79*
         B     RETC                BRANCH TO RETURN CODE
* DATASET NAME NOT FOUND
ERR03    MVC   MSG2(L'ERMSG9),ERMSG9
         MVC   MSG2+L'ERMSG9(44),DSN1
         LA    R0,L'ERMSG9+44
         LA    R1,MSG2
         BAL   R14,PUTLINEI        PUT OUT MSG USING PUTLINE*HMD 11/79*
         TM    FLAG,X'40'
         BO    LOOP
         TM    FLAG,X'10'
         BO    RETDSN
         B     OBTNRET
         SPACE 3
RDERR    MVC   MSG2(L'ERMSG8),ERMSG8
         MVC   MSG2+L'ERMSG8(44),DSN1
         LA    R0,L'ERMSG8+44
         LA    R1,MSG2
         BAL   R14,PUTLINEI        PUT OUT MSG USING PUTLINE*HMD 11/79*
         B     LOOP                CONTINUE THRU LOOP
         SPACE 3
NOUSER   MVC   MSG2(L'ERMSG3),ERMSG3
         MVC   MSG2+L'ERMSG3(44),USERID
         LA    R0,L'ERMSG3+44
         LA    R1,MSG2
         BAL   R14,PUTLINEI        PUT OUT MSG USING PUTLINE*HMD 11/79*
         B     RETC                RETURN TO SYSTEM
         SPACE 3                                            *HMD 04/82*
SVC26R   LA    R0,L'ERMSG12        GET SVC26 MSG LENGTH     *HMD 04/82*
         LA    R1,ERMSG12          POINT TO TEXT            *HMD 04/82*
         BAL   R14,PUTLINEI        PUT OUT MSG WITH PUTLINE *HMD 04/82*
         B     RETC                RETURN TO SYSTEM         *HMD 04/82*
         SPACE 3
NOTDISK  MVC   MSG2(L'ERMSG6),ERMSG6
         MVC   MSG2+L'ERMSG6(44),DSN1
         LA    R0,L'ERMSG6+44
         LA    R1,MSG2
         BAL   R14,PUTLINEI        PUT OUT MSG WITH PUTLINE *HMD 11/79*
         B     LOOP                PICK UP NEXT DATASET
         SPACE 3
MULTIVOL MVC   MSG2(L'ERMSG7),ERMSG7
         MVC   MSG2+L'ERMSG7(44),DSN1
         LA    R0,L'ERMSG7+44
         LA    R1,MSG2
         BAL   R14,PUTLINEI        PUT OUT MSG WITH PUTLINE *HMD 11/79*
         B     LOOP                CONTINUE WITH NEXT DSN
         SPACE 3
ERRF     EQU   *
         LA    R1,ERMSG10          LOAD ERROR MESSAGE       *HMD 11/79*
         LA    R0,20               LOAD LENGTH              *HMD 11/79*
         BAL   R14,PUTLINEI        PUT IT OUT               *HMD 11/79*
         B     RETC
ERRF4    EQU   *                   ERROR READING F4
         LA    R1,ERMSG11          LOAD ERROR MESSAGE       *HMD 11/79*
         LA    R0,21               LOAD LENGTH              *HMD 11/79*
         BAL   R14,PUTLINEI        PUT IT OUT               *HMD 11/79*
         TM    FLAG,X'40'                                   *HMD 11/79*
         BO    LOOP                                         *HMD 11/79*
         TM    FLAG,X'10'                                   *HMD 11/79*
         BO    RETDSN                                       *HMD 11/79*
         TM    FLAG,X'05'
         BO    VOLRET                                       *HMD 11/79*
         B     OBTNRET                                      *HMD 11/79*
USIDMVC  MVC   0(0,R8),0(R10)
DSNMVC   MVC   0(0,R8),0(R5)
MVCVOLS  MVC   0(0,R1),0(R5)
         TITLE 'LISTVOL - PUTLINE ROUTINES'                 *HMD 11/79*
PUTLINE  DS    0H                                           *HMD 11/79*
         ST    14,SAVER14             SAVE REG 14.          *HMD 11/79*
         LA    R15,83                                       *HMD 11/79*
         SLL   R15,16                 SHIFT TO HI ORDER     *HMD 11/79*
         ST    R15,LISTOUT            SAVE IN MSG AREA      *HMD 11/79*
         MVC   LISTTEXT,BLANKZ        CLEAR OUTPUT AREA     *HMD 11/79*
         LR    R15,R0                 SAVE LENGTH VALUE     *HMD 11/79*
         CH    R15,=H'79'             LONGER THAN 80 CHARS  *HMD 11/79*
         BNH   PUTLINE1               LOW OR EQUAL          *HMD 11/79*
         LA    R15,79                 LIMIT TO 80 CHARS     *HMD 11/79*
PUTLINE1 SH    R15,=H'1'              BUMP DOWN FOR EXECUTE *HMD 11/79*
         BNPR  R14                    DON'T EXECUTE PUTLINE *HMD 11/79*
         EX    R15,MVCPUTL            MOVE TO OUTPUT AREA   *HMD 11/79*
         XC    CPECB,CPECB            CLEAR ECB             *HMD 11/79*
         PUTLINE PARM=PUTPARM,OUTPUT=(LISTOUT,SINGLE,DATA), *HMD 11/79*X
               MF=(E,WIOPL)                                 *HMD 11/79*
         L     R14,SAVER14            LOAD RETURN REG.      *HMD 11/79*
         BR    R14                    RETURN TO CALLER      *HMD 11/79*
PUTLINEI DS    0H                                           *HMD 11/79*
         ST    R14,SAVER14            SAVE RETURN REG.      *HMD 11/79*
         LA    R15,83                                       *HMD 11/79*
         SLL   R15,16                                       *HMD 11/79*
         ST    R15,MSGOUT             SAVE IN MESSAGE AREA  *HMD 11/79*
         MVC   MSGTEXT,BLANKZ         CLEAR OUTPUT AREA     *HMD 11/79*
         LR    R15,R0                 SAVE LENGTH           *HMD 11/79*
         CH    R15,=H'71'             TOO LONG?             *HMD 11/79*
         BNH   PUTLINE2               NO, CONTINUE          *HMD 11/79*
         LA    R15,71                 LIMIT LENGTH          *HMD 11/79*
PUTLINE2 SH    R15,=H'1'              BUMP DOWN FOR EX      *HMD 11/79*
         BNPR  R14                    IF NOGOOD, LEAVE      *HMD 11/79*
         XC    CPECB,CPECB            CLEAR EVENT CNTL BLK  *HMD 11/79*
         EX    R15,MVCPUTLI           MOVE PUTLINE INFORM   *HMD 11/79*
         LA    R1,1                                         *HMD 11/79*
         ST    R1,OLD                                       *HMD 11/79*
         LA    R1,MSGOUT                                    *HMD 11/79*
         ST    R1,OLD+4                                     *HMD 11/79*
         PUTLINE PARM=PUTPARM,OUTPUT=(OLD,SINGLE,INFOR),    *HMD 11/79*X
               MF=(E,WIOPL)                                 *HMD 11/79*
         L     R14,SAVER14                                  *HMD 11/79*
         BR    R14                    RETURN TO CALLER      *HMD 11/79*
         SPACE 1                                            *HMD 11/79*
MVCPUTL  MVC   LISTTEXT(0),0(R1)      MOVE MESSAGE TO AREA  *HMD 11/79*
MVCPUTLI MVC   MSGTEXT(0),0(R1)       MOVE MESSAGE TO AREA  *HMD 11/79*
         TITLE 'LISTSPC - DATA AREAS'
ENDLIST  DS    0F
         DC    XL4'FF000000'
* SETUP CONSTANTS
VOLDSCTK DC    H'0'                NUM DSCH ON A TRK
VOLF4CHR DC    XL5'00'             CCHHR OF DSCB
VOLNO    DC    H'0'                NUM VOLUMES PROCESSED
PEXCTR   DC    H'0'                CTR FOR TATAL NUM FREE SPACE
LASTTRK  DC    H'0'
DSN1     DC    CL44' '              DATASET NAME
DSNSAVE  DC    CL44' '
VOLS     DC    CL6' '                 VOLUME SER
USERID   DC    CL44' '              USERID
FLAG     DC    X'00'
DSORG    DC    X'00'
BLANKS   DC    CL6' '
BUF1     DS    0D
         DS    265C
TRTBL    EQU   *-240
         DC    C'0123456789ABCDEF'
MASKED   DC    XL6'402020202020'   MASK FIELD FOR EDIT
         SPACE 3
* MESSAGE TO BE PRINTED
MSG1     DC    C'DSORG ALLOC UNUSED EXTENTS DSNAME'
MSG2     DC    CL76' '
MSG4     DC    C'VOLUME DSCBS EXTENTS TRACKS  VTOC'
BLANKZ   DC    CL80' '      FOR BLANKING F A S T            *HMD 11/79*
         SPACE 3
* ERROR MESSAGES
ERMSG1   DC    C'NO VALID COMMAND'
ERMSG3   DC    C'INVALID LEVEL - '
ERMSG6   DC    C'DSN NOT ON DISK - '
ERMSG7   DC    C'DSN ON MULTIVOLUMES - '
ERMSG8   DC    C'ERROR READING CATALOG DSN - '
ERMSG9   DC    C'DSN NOT FOUND - '
ERMSG10  DC    C'UNSUPPORTED KEYWORD'
ERMSG11  DC    C'ERROR READING F4 DSCB'
ERMSG12  DC    C'UNDETERMINED LOCATE ERROR'                 *HMD 04/82*
         EJECT
* CAMLST FOR DSCB3
SEEKCAM  CAMLST SEEK,VTOCCHHR,VOLS,BUF1
         SPACE 2
* CAMLST LOCATE DSN OV VOL SER
INDS     CAMLST NAME,DSN1,,BUF1
         SPACE 2
* CAMLST FOR DSCB 1
SERCHCAM CAMLST SEARCH,DSN1,VOLS,BUF1
         EJECT
* CONSTANTS AND WORK AREAS
HWK1     DC    H'0'                HALF WORD WORK AREA
VOLTKCYL DC    H'19'               # TRKS/CYL
VTOCCHHR DC    XL5'0'              TRACK ADDR WORK AREA
WKD      DC    D'0'                DOUBLE WORK WORK AREA
         SPACE 3
* PARM SETUP FOR GETDSN
PARM     DC    A(USERID)           USERID ADDRESS
         DC    A(DSN1)             DSN ADDRESS
         DC    A(VOLS)             VOL SER ADDRESS
         DC    A(0)                ADDRESS FOR GETMAIN
         SPACE 3
* EQUATE REGISTERS
**                           EQUATES FOR SYMBOLIC REG USAGE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
RA       EQU   10
RB       EQU   11
RC       EQU   12
RD       EQU   13
RE       EQU   14
RF       EQU   15
RCC      EQU   R8
RHH      EQU   R7
RR       EQU   R6
         TITLE 'LISTSPC - PARSE PARAMETER LIST'
PARSLIST IKJPARM
DSNKYD   IKJKEYWD
         IKJNAME 'DATASET',SUBFLD=DSNSUBF
LEVL     IKJKEYWD
         IKJNAME 'LEVEL',SUBFLD=LVL
VOLUME   IKJKEYWD
         IKJNAME 'VOLUME',SUBFLD=VLM
EXTENT   IKJKEYWD
         IKJNAME 'EXTENTS'
DSNSUBF  IKJSUBF
DSNLIST  IKJPOSIT DSNAME,LIST
LVL      IKJSUBF
LEV      IKJIDENT 'LEVEL',OTHER=ANY,MAXLNTH=44
VLM      IKJSUBF
VOL      IKJIDENT 'VOLUME',LIST,FIRST=ALPHANUM,OTHER=ALPHANUM,MAXLNTH=6
         IKJENDP
         EJECT                                              *HMD 11/79*
         IKJECT                                             *HMD 11/79*
         EJECT                                              *HMD 11/79*
         IKJIOPL                                            *HMD 11/79*
         EJECT                                              *HMD 11/79*
         IKJPPL
         EJECT                                              *HMD 11/79*
         IKJCPPL
         EJECT                                              *HMD 11/79*
         IKJUPT                                             *HMD 11/79*
         EJECT                                              *HMD 11/79*
         CVT    LIST=YES,DSECT=YES                          *HMD 11/79*
         TITLE 'LISTSPC - WORK AREA'
WORKAREA DSECT
SAVER14  DS    A                                            *HMD 11/79*
OLD      DS    2A                                           *HMD 11/79*
MSGOUT   DS    A                                            *HMD 11/79*
MSGID    DC    C'HMD406I '                                  *HMD 11/79*
MSGTEXT  DS    CL79                                         *HMD 11/79*
LISTOUT  DS    A                                            *HMD 11/79*
LISTTEXT DS    CL79                                         *HMD 11/79*
PUTPARM  PUTLINE MF=L                                       *HMD 11/79*
FILL     DS    0D                                           *HMD 11/79*
WPPL     DS    7A
WIOPL    DS    5A                                           *HMD 11/79*
CPECB    DS    F
WPDL     DS    F
OBTNSAVE DS    10F
XTNTS    DS    16XL10
WXTNT    DS    CL5
         DS    0D
LOCINDXW EQU   *
LWORK    EQU   *-WORKAREA
         END
