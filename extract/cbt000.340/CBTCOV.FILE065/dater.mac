*
*         DATER: SPNB DATE VALIDATION SUBROUTINE
*
*              THIS SUBROUTINE SCANS THE O.S./360 EXEC CARD PARAMETER
*              STRING FOR THE OCCURANCE OF D=MM/DD/YY OR
*              DATE=MM/DD/YY.  IF THE DATE IS VALID, IT IS RETURNED
*              TO THE CALLING PROGRAM IN THE 8 BYTE PARAMETER AREA
*              PASSED TO DATER BY THE CALLING PROGRAM.  IF NO PARAMETER
*              AREA IS PASSED, THE TASK IS ABENDED WITH A USER CODE
*              OF 4001.  IF NO EXEC CARD PARAMETER WAS SPECIFIED
*              OR IF AN INVALID DATE WAS FOUND IN THE EXEC CARD PARM,
*              THE SYSTEM DATE IS CONVERTED TO MM/YY/DD FORM AND
*              IS RETURNED TO THE CALLER.  IF THE SYSTEM DATE
*              IS INVALID (E.G. 71.366) A WTOR IS ISSUED,
*              WHEN THE OPERATOR REPLIES TO THE WTOR, THE ABOVE
*              OPERATION IS REPEATED UNTIL THE OPERATOR EITHER
*              RESETS THE SYSTEM DATE TO A VALID FIGURE, OR
*              CANCELS THE JOB
*
*        INPUT: R1 POINTS TO A FULLWORD THAT CONTAINS THE ADDRESS
*              OF THE AREA THAT IS TO CONTAIN THE DATE.
*
*              NOTE: THE EXEC CARD PARAMETER STRING IS FOUND BY
*                             LOCATING THE FIRST REGISTER SAVEAREA
*                             AND LOOKING AT THE CONTENS OF R1
*                             WHEN THE FIRST MODULE WAS ENTERED
*                             THIS ROUTINE WILL ONLY WORK FOR
*                             JOBSTEP TASKS.
*
*        OUTPUT: (R15) = RETURN CODE:
*              0 = DATE FOUND IN INPUT STRING
*              4 = NO DATE FOUND, TODAY'S DATE SUPPLIED
*              8 = INVALID DATE FOUND IN EXEC CARD PARM STRING,
*                  TODAY'S DATE RETURNED
*
*        ABEND CODES:
*              U4001 - NO PARAMETERS PASSED
*
*        OPERATOR MESSAGES:
*              TSD100A SYSTEM DATE INVALID, RE-SET THEN REPLY 'U'
*                             REPLY: IGNORED (USED FOR TIMING)
*
*        SYSTEM SVCS USED: TIME, WTOR, WAIT, ABEND
*
*        ATTRIBUTES: SERIALLY REUSABLE, NON-REENTRANT
*
*        AUTHOR: W. S. FINKELSTEIN, 9/10/71
*
*        MODIFICATIONS: 9/17/71 WSF: ADDED FACILITIES FOR OPTIONAL UPSI
*              SCAN.  IF A SECOND PARAMETER IS PASSED, ANY UPSI=
*              KEYWORD IN THE EXEC CARD PARAMTER LIST WILL BE PARSED.
*              AN 8 CHARACTER STRING WILL BE RETURNED IN THE SECOND
*              INPUT PARAMETER.  IF NO UPSI KEYWORD IS FOUND, ALL
*              ZERO CHARACTERS WILL BE RETURNED. IF AN UPSI
*              KEYWORD IS FOUND, IT WILL BE PARSED AND RETURNED,
*              WITH INVALID NUMERICS TRANSLATED TO ZEROS AND
*              OTHER INVALID CHARACTERS TERMINATING THE SCAN.
*              THE UPSI INFORMATION IS PADDED ON THE RIGHT WITH
*              ZEROS.  THE STRING RETURNED CONSISTS ONLY OF ZERO AND
*              ONE CHARACTERS.
*
*        1/30/73 WSF: ADDED A THIRD PARAMETER FOR OPTIONAL SUPPLIED
*              DATE.  IF A THIRD PARAMETER IS PASSED, IT IS ASSUMED
*              TO BE THE SUPPLIED DATE.  IT IS USED AS TODAYS DATE
*              AND NO SEARCH IS MADE FOR PARAMETERS OF ANY KIND.
*              TODAY'S DATE IS ACCEPTED IN EITHER PACKED DECIMAL
*              JULIAN, CHARACTER JULIAN, OR CHARACTER MM/DD/YY.
*              IF THE SYNTAX OF THE SUPPLIED DATE IS INVALID,
*              DATER ABENDS WITH A USER 4001 (INVALID PARAMETERS):
*
***********************************************************************
         TITLE 'DATER- SUBROUTINE ENTRY, PERFORM INITIAL PROCESSING'
DATER    CSECT
         SAVE  (14,12),T,DATER_SUBROUTINE
         SPACE 1
* PERFORM LINKAGE CONVENTIONS, USE R12 AS BASE.
         SPACE 1
         BALR  R12,0
         USING *,R12
         ST    R13,SAVR+4
         LA    R11,SAVR
         ST    R11,8(R13)
         LR    R13,R11
         MVI   FLAGS,0        RESET FLAG BYTE TO ZERO
         SPACE 1
* SEE IF PARAMETER HAS BEEN PASSED.
         SPACE 1
         LTR   R1,R1
         BZ    ABEND         IF R1=0 NO PARM WAS PASSED, ABEND CALLER
         L     R8,0(R1)       LOAD POINTER TO OUTAREA
         L     R10,4(R1)      LOAD POINTER TO UPSI OUTAREA (IF THERE)
         L     R9,8(R1) .               LOAD PNT TO SUP DATE (IF THERE)
         LTR   R8,R8          CHECK FOR NULL POINTER
         BZ    NOD            IF ZERO, NO DATE IS WANTED.
         BP    CONT           IF POSITIVE, A DATE AND UPSI IS WANTED.
         LA    R8,0(R8)       CHECK FOR SAFETY
         LTR   R8,R8
         BZ    ABEND          NOUPSI AND NODATE? ABEND!
NOU      OI    FLAGS,NOUPSIW  SET NO UPSI WANTED FLAG
         B     GETPARM        CONTINUE PROCESSING
NOD      OI    FLAGS,NODATEW  SET NO DATE WANTED FLAG
CONT     LTR   R10,R10        CHECK FOR SUPPLIED DATE
         BM    NOSUP                    NOT SUPPLIED
         OI    FLAGS,SUPDATE .          SET 'DATE SUPPLIED' FLAG
NOSUP    LA    R10,0(R10) .             OFF UPPER 8
         LTR   R10,R10 .                UPSI THERE?
         BZ    NOU .                    NO, GO BACK
         MVC   0(8,R10),=C'00000000'  MOVE IN ZERO UPSI
GETPARM  TM    FLAGS,NODATEW+NOUPSIW    BOTH FLAGS ON?
         BO    ABEND          INVALID
         SPACE 1
* SUPPLIED DATE PROCESSING
         SPACE 1
         TM    FLAGS,SUPDATE .          DATE WAS SUPPLIED?
         BZ    FCVT .                   NO, GO FIND PARAMETERS
         LA    R9,0(R9) .               CHECK FOR ZERO PARAMETER
         BZ    ABEND .                  BAD PARAMETERS
         SPACE 1
* SEE WHAT WAS PASSED
         SPACE 1
         CLI   2(R9),C'/' .             MM/DD/YY?
         BNE   CJC                      NO, CHECK FOR JUL.
         LR    R3,R9 .                  POINT R3 TO SUPPLIED DATE
         B     CHECKDAT .               GO PROCESS IT
         SPACE 1
CJC      CLI   2(R9),C'.' .             CHAR JUL FORM?
         BNE   CJH .                    NO, CHECK FOR JUL HEX
         PACK  PYEAR(3),0(3,R9) .  * * GET '00YY' IN PYEAR
         PACK  PDAY,3(3,R9) .           PACK DAY
         TM    PDAY+1,X'0F' .           VALID SIGN?
         BNO   ABEND
         L     R1,PDATE .               FOR SIMUL TIME MACRO
         B     SUPDATX .                GO AND PROCESS
         SPACE 1
CJH      CLI   0(R9),X'00' .            PACKED DATE?
         BNE   ABEND
         CLI   1(R9),X'60' .            RANGE CHECK
         BL    ABEND
         TM    3(R9),X'08' .            SIGN LOOK ABOUT RIGHT?
         BZ    ABEND
         MVC   DOUBLE(4),0(R9) .        SO WE CAN SAFELY L IT
         L     R1,DOUBLE .              FOR SIMUL TIME MACRO
         B     SUPDATX
         SPACE 1
* FIND EXEC CARD PARAMETER STRING
         SPACE 1
FCVT     L     R1,16          FIND CVT
         L     R1,0(R1)       FIND DISPATCHER DOUBLE WORD
         L     R1,4(R1)       FIND CURRENT TCB
         L     R1,112(R1)     FIND TCBFSA
         L     R1,24(R1)      FIND ADDR OF EXEC PARM STRING
         L     R1,0(R1)            ADDRESS OF PARM FIELD
         LA    R1,0(R1)       STRIP OFF UPPER BYTE
         LTR   R1,R1          CHECK FOR SAFETY
         BZ    RDATE
         LH    R2,0(R1)       LOAD LENGTH OF PASSED STRING
         LTR   R2,R2          CHECK FOR ZERO LENGTH
         BNP   RDATE          LENGTH=0 NO PARM WAS PASSED
         SPACE 1
* SET UP BXLE LOOP TO SCAN THE INPUT STRING
         SPACE 1
         LA    R3,2(R1)       R3 = BXLE INDEX REGISTER
         LA    R4,1           R4 = BXLE INCREMENT REGISTER (1)
         LA    R5,0(R3,R2)    R5 = BXLE COMPARAND (END-STR PNTR)
         BCTR  R5,0           ADJUST IT
SCANLOOP TM    FLAGS,SUPDATE  DATE SUPPLIED?
         BO    RETURN         YES, DON'T CHECK FOR IT
         CLC   0(2,R3),=C'D=' SCAN FOR 'D=' KEYWORD
         BE    FOUND
         CLC   0(5,R3),=C'DATE='   SCAN FOR 'DATE=' KEYWORD
         BE    FOUNDATE
         CLC   0(2,R3),=C'U=' CHECK FOR 'U=' KEYWORD
         BE    FOUNU
         CLC   0(5,R3),=C'UPSI='   CHECK FOR 'UPSI=' KEYWORD
         BE    FOUNUPSI
SCANBXLE BXLE  R3,R4,SCANLOOP
RDATE    TM    FLAGS,GOTDATE+NODATEW  FOUND A DATE? OR EVEN WANT ONE?
         BNZ   RETURN         EITHER WAY, WE'RE DONE
         TITLE 'DATER- SYSTEM DATE CONVERSION ROUTINE'
REALDATE TIME  DEC            GET THE DATE FROM THE SYSTEM
SUPDATX  ST    R1,PDATE       STORE DATE
         UNPK  DOUBLE,PDATE   UNPACK DATE
         MVC   DOUBLE+6(2),DOUBLE+3     MOVE YEAR
         MVI   DOUBLE+2,C'/'       MOVE IN SLASHES
         MVI   DOUBLE+5,C'/'
         MVO   DOUBL2,PYEAR   CHECK FOR LEAP YEAR
         OI    DOUBL2+7,X'0F'
         CVB   R0,DOUBL2
         ST    R0,DOUBL2
         TM    DOUBL2+3,X'03'
         BNZ   NOLEAP              NO, SKIP NEXT CODE
         CP    PDAY,=PL2'59'     COMPARE W/ LEAP DAY
         BL    NOLEAP         DOESN'T MATTER
         BE    LEAPDAY        WE'RE ALMOST DONE
         SP    PDAY,=P'1'     ELSE SUBTRACT ONE AND CONTINUE
         SPACE 1
* SCAN DATE TABLE FOR MONTH
         SPACE 1
NOLEAP   LA    R3,DTABLE
TABLOOP  CP    PDAY,2(2,R3)   COMPAIR WITH TABLE ENTRY
         BNH   GOTIT         IF DAY LOW OR EQUAL, WE GOT IT
         LA    R3,4(R3)       BUMP INDEX
         B     TABLOOP
GOTIT    MVC   DOUBLE(2),0(R3)     MOVE IN MONTH
         CLI   DOUBLE,C'?'    VALIDITY CHECK MONTH
         BE    BADSYS
         S     R3,=F'4'       BACK UP ONE ENTRY
         SP    PDAY(2),2(2,R3)  CALC DAY OF MONTH
         UNPK  DOUBLE+3(2),PDAY(2) CONVERT TO CHAR
         OI    DOUBLE+4,X'F0' FIX ZONE
         CLC   DOUBLE+3(2),=C'00'  BAD DAY OF MONTH?
         BE    BADSYS
MOVEDATE DS    0H
         MVC   0(8,R8),DOUBLE      MOVE DATE TO OUTPUT AREA
         SPACE 1
* RETURN TO CALLER
         SPACE 1
RETURN   L     R13,4(R13)       RESTORE SA POINTER
         SR    R15,R15        SET RETURN CODE TO ZERO
         TM    FLAGS,GOTDATE+NODATEW+SUPDATE RC=4 COND?
         BNZ   RET2
         LA    R15,4
RET2     TM    FLAGS,GOTBAD   CHECK FOR RC=8 CONDITION
         BZ    RET3
         LA    R15,8
RET3     RETURN (14,12),T,RC=(15)
         SPACE 1
* LEAPDAY PROCESSING
         SPACE 1
LEAPDAY  MVC   DOUBLE(5),=C'02/29' TODAY IS LEAPDAY
         B     MOVEDATE
         TITLE 'DATER- EXCPTIONAL CONDITION PROCESSING'
* ABEND ROUTINE
         SPACE 1
ABEND    ABEND 4001,DUMP
         SPACE 1
* ROUTINE TO HANDLE BAD SYSTEM DATE
         SPACE 1
         XC    WTORECB,WTORECB     ZERO WTOR EVENT CNTRL BLK
BADSYS   TM    FLAGS,SUPDATE .          SUPPLIED DATE?
         BO    ABEND .                  YA, THEN IT IS BAD
         WTOR  'TSD100A SYSTEM DATE INVALID, RE-SET THEN REPLY ''U''', *
               DOUBLE,1,WTORECB
         WAIT  ECB=WTORECB
         B     REALDATE
         TITLE 'DATER- UPSI KEYWORD PROCESSING'
* FIRST, MOVE OFF KEYWORD
         SPACE 1
FOUNU    LA    R3,2(R3)
         B     PROCUPSI
FOUNUPSI LA    R3,5(R3)
PROCUPSI TM    FLAGS,NOUPSIW  DO WE WANT UPSI INFO?
         BO    SCANBXLE       NO, CONTINUE PROCESSING
         LA    R14,1           BXLE INCREMENT
         LA    R15,7(R3)       BXLE COMPARAND
UPSILOOP TM    0(R3),X'F0'    CHECK FOR NUMERIC CHARACTER
         BNO   SCANLOOP       NONNUMERIC, CONTINUE PROCESSING
         CLI   0(R3),C'1'     VALID ONE CHARACTER?
         BNE   UPSINEXT       INVALID OR ZERO, LEAVE ZERO
         MVI   0(R10),C'1'    RESET TO ONE
UPSINEXT LA    R10,1(R10)     MOVE TO NEXT OUTPUT STRING POSITION
         BXLE  R3,R14,UPSILOOP
         B     SCANLOOP       CONTINUE PROCESSING EXEC PARAMETER STRING
         TITLE 'DATER- VALIDITY CHECK DATE AS FOUND'
* FIRST, MOVE OFF KEYWORD NAME
         SPACE 1
FOUND    LA    R3,2(R3)       MOVE OFF 'D='
         B     CHECKDAT       CONTINUE
FOUNDATE LA    R3,5(R3)       MOVE OFF 'DATE='
CHECKDAT TM    FLAGS,NODATEW  DO WE WANT A DATE?
         BO    SCANLOOP       NO, CONTINUE PROCESSING EXEC PARM STRING
         SPACE 1
* NEXT, CHECK THE DATE FOUND IN THE PARM
         SPACE 1
         CLI   2(R3),C'/'     CHECK FOR SLASHES
         BNE   NOGOOD
         CLI   5(R3),C'/'
         BNE   NOGOOD
         XC    DOUBLE,DOUBLE  ZERO WORK AREA
         MVZ   DOUBLE,0(R3)   MOVE IN ZONES FROM STRING
         CLC   DOUBLE,=X'F0F060F0F060F0F0' CHECK FOR PROPER ZONES
         BNE   NOGOOD
         CLC   0(2,R3),=C'00' CHECK MONTH RANGE
         BNH   NOGOOD
         CLC   0(2,R3),=C'13'
         BNL   NOGOOD
         SPACE 1
* CHECK DAYS IN MONTH
         SPACE 1
         PACK  DOUBLE,0(2,R3) PACK MO. NUMBER
         CVB   R6,DOUBLE           CONVERT IT TO BINARY
         SLA   R6,1                MULTIPLY IT BY 2
         LA    R7,DAYMOTAB(R6)     POINT TO 2 CHAR REP OF DAYS IN MONTH
         CLC   3(2,R3),0(R7)       CHECK FOR TOO HIGH
         BH    NOGOOD
         CLC   3(2,R3),=C'00' CHECK FOR TOO LOW
         BNH   NOGOOD
         CLC   0(5,R3),=C'02/29'   LEAPDAY?
         BNE   OK
         PACK  DOUBL2,6(2,R3) CHECK FOR LEAP YEAR
         CVB   R9,DOUBL2
         ST    R9,DOUBL2
         TM    DOUBL2+3,X'03'
         BNZ   NOGOOD
OK       MVC   0(8,R8),0(R3)   MOVE GOOD RESULT TO OUTAREA
         OI    FLAGS,GOTDATE  SET FLAG INDICATING WE HAVE A VALID DATE
         B     SCANLOOP       CONTINUE PROCESSING
NOGOOD   OI    FLAGS,GOTBAD   SET GOT BAD DATE FLAG
         B     SCANLOOP         CONTINUE PROCESSING
         TITLE 'DATER- CONSTANTS AND VARIABLES'
SAVR     DS    9D             REGISTER SAVE AREA
DOUBLE   DS    D              DOUBLEWORD WORK AREAS
DOUBL2   DS    D
RETCODE  DS    F              RETURN CODE SAVE AREA
PDATE    DS    0F             DATE FROM TIME MACRO
PYEAR    DS    PL2
PDAY     DS    PL2
WTORECB  DS    F              WTOR ECB
         SPACE 1
* FLAG BYTE
         SPACE 1
FLAGS    DS    XL1
NOUPSIW  EQU   B'10000000'    NO UPSI WANTED FLAG
NODATEW  EQU   B'01000000'    NO DATE WANTED FLAG
GOTDATE  EQU   B'00100000'    HAVE FOUND A VALID DATE FLAG
GOTBAD   EQU   B'00010000'    FOUND A BAD DATE IN EXEC PARM, FLAG
SUPDATE  EQU   B'00001000'    DATE WAS SUPPLIED AS 3RD PARM
*        EQU   B'00000100'    UNUSED
*        EQU   B'00000010'    UNUSED
*        EQU   B'00000001'    UNUSED
         SPACE 1
* DATE TABLE
         SPACE 1
DTABLE   DC    CL2'??',PL2'000'
         DC    CL2'01',PL2'31'
         DC    CL2'02',PL2'59'
         DC    CL2'03',PL2'90'
         DC    CL2'04',PL2'120'
         DC    CL2'05',PL2'151'
         DC    CL2'06',PL2'181'
         DC    CL2'07',PL2'212'
         DC    CL2'08',PL2'243'
         DC    CL2'09',PL2'273'
         DC    CL2'10',PL2'304'
         DC    CL2'11',PL2'334'
         DC    CL2'12',PL2'365'
         DC    CL2'??',PL2'999'
         SPACE 1
* TABLE OF THE NUMBER OF DAYS IN A MONTH
         SPACE 1
DAYMOTAB DC    C'00'
         DC    C'31'          JAN
         DC    C'29'          FEB
         DC    C'31'          MAR
         DC    C'30'          APR
         DC    C'31'          MAY
         DC    C'30'          JUN
         DC    C'31'          JUL
         DC    C'31'          AUG
         DC    C'30'          SEP
         DC    C'31'          OCT
         DC    C'30'          NOV
         DC    C'31'          DEC
         SPACE 1
* LITERAL POOL
         SPACE 1
         LTORG
         TITLE 'DATER- MISC. EQUATES'
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
