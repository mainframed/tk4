FRAMES   TITLE 'FRAMES -- DCMS FRAME TABLE DISPLAY'
***********************************************************************
*                                                                     *
*  UPDATES                                                            *
*    12/12/83 LDW4 - CHECK FOR ASID NOT IN USE                        *
*                  - IMPLEMENT PF5 TO CHANGE DISPLAY FROM JOBNAME TO  *
*                       ASID AND BACK (TOGGLES)                       *
*                  - FIX BUG (INTRODUCED IN LDW3) THAT CAUSED LAST    *
*                       PFTE TO NOT BE COUNTED                        *
*                  - CHANGE SPECIAL ENTRIES FROM '*XXX' TO '+XXX'     *
*                       (SO *MASTER* SORTS AFTER THEM)                *
*                  - INCREASE NUMBER OF COUNTERS CELLS, EVEN THOUGH   *
*                       THEY CAN'T ALL BE DISPLAYED...                *
*                  - CHANGE GETMAIN TO EQU (TURKIES!!!)               *
*    01/12/83 LDW3 - SP3 (EXTENDED REAL ADDRESSING) SUPPORT           *
*                  - MAKE MAP DISPLAY SCROLLABLE VIA PF7/PF8          *
*                  - ADD PCAUTH, GRS, CONSOLE, ALLOCAS TO LIST OF     *
*                       INITIAL JOBNAMES                              *
*                  - MAKE BUBBLE SORT FASTER BY CHANGING XC TO MVC    *
*                  - FIX BUG WHICH CAUSED ONLY THE FIRST AND LAST     *
*                       COLUMNS TO BE DISPLAYED (ACTUALLY, I WAS      *
*                       DISPLAYING COLUMNS 2, 3, AND 4 ALL IN THE     *
*                       COLUMN 2 POSITION!)                           *
*                  - MAKE DISPLAY 5 COLUMNS WIDE                      *
*                  - CHECK FOR JOBNAME TABLE OVERFLOW                 *
*    10/22/81 LDW2 - ADD PAGE COUNT TYPE DISPLAY                      *
*                  - MAKE "COUNT" DISPLAY THE DEFAULT (PF6 WILL FLIP) *
*                  - CHANGE MAP DEFAULT FOR "AVAIL" FROM 'A' TO '_'   *
*                  - ADD NET AS A DEFAULT SUPPLIED JOBNAME            *
*                  - CHANGE FIELD INTENSITIES ON MAP SCREEN           *
*                  - MISC OTHER CLEANUP                               *
*    07/30/80 LDW1 - STANDARDIZE PFKEYS (SPF CONVENTIONS)             *
*                                                                     *
***********************************************************************
         SPACE 2
         MACRO                                                     LDW2
&NFS     MAPLINE  &N                                               LDW2
&N(1)    DCMSFLD  3,INTEN=HI                                       LDW2
.*LDW3   MNOTE '&N(1)    DCMSFLD  3,INTEN=HI'                      LDW2
*&N(1)   DCMSFLD  3,INTEN=HI'
&N(2)    DCMSFLD  64,INTEN=LO                                      LDW2
.*LDW3   MNOTE '&N(2)    DCMSFLD  64,INTEN=LO'                     LDW2
*&N(2)   DCMSFLD  64,INTEN=LO'
&N(3)    DCMSFLD  10,ALPHA,INTEN=HI                                LDW2
.*LDW3   MNOTE '&N(3)    DCMSFLD  10,ALPHA,INTEN=HI'               LDW2
*&N(3)   DCMSFLD  10,ALPHA,INTEN=HI'
         MEND                                                      LDW2
         EJECT
FRAMES   DCMSTART RENT,LV=WORKLEN,STAE=NO                          LDW4
         SPACE 2
#CLINES  EQU   21                       # AVAIL LINES FOR 'COUNT'  LDW2
#CCOLS   EQU   5                        # COLUMNS FOR 'COUNT'      LDW3
#WIDTH   EQU   16                       WIDTH OF A COLUMN          LDW3
*#COUNTS EQU   (#CLINES)*(#CCOLS)       TOTAL # OF COUNTS          LDW2
#COUNTS  EQU   400                      TOTAL # OF COUNTS          LDW4
         SPACE 3
         MVI   FLAG,0                   INITIALIZE FLAGS           LDW2
         XC    SEGLINE,SEGLINE          START AT TOP OF MAP        LDW3
*LDW4    MVC   COUNTS+(#COUNTS-1)*12+4(8),=CL8'+OVFL+'             LDW4
         LA    R15,COUNTS               -> FIRST COUNTER CELL      LDW4
         AH    R15,=Y((#COUNTS-1)*12)   -> LAST CELL               LDW4
         MVC   4(8,R15),=CL8'+OVFL+'    FLAG THE LAST CELL         LDW4
***********************************************************************
*
*   INITIALIZE SOME STUFF TO REDUCE CONTROL BLOCK USAGE
*
***********************************************************************
         SPACE 2
         L     R1,CVTPTR
         USING CVT,R1
         L     R0,CVTNUCB               GET NUC BOUNDARY           LDW3
         SRL   R0,12                    CONVERT TO XRBN            LDW3
         STH   R0,NUCB                  SAVE                       LDW3
         L     R0,CVTEORM               GET HIGH REAL STORAGE ADDR LDW3
         SRL   R0,12                    CONVERT TO XRBN-1          LDW3
         AH    R0,=H'1'                 MAKE IT XRBN               LDW4
         STH   R0,EORM                  SAVE                       LDW3
         L     R2,CVTASVT               -> ADDR SPACE VECTOR TBL   LDW3
         L     R1,CVTPVTP               GET PAGE VECTOR TABLE ADDR
         USING PVT,R1
         MVC   PFTORG,PVTPFTP           GET PAGE TABLE VIRT ORIGIN
         SR    R14,R14                  CLEAR FOR ICM              LDW3
         SR    R15,R15                  CLEAR FOR ICM              LDW3
         ICM   R14,B'0011',PVTFPFN      FIRST PAGE INDEX OR XRBN   LDW3
         ICM   R15,B'0011',PVTLPFN      LAST PAGE INDEX OR XRBN    LDW3
         DROP  R1
         L     R1,ASVTENTY+4-ASVT(,R2)  -> SECOND ASCB             LDW3
         L     R1,ASCBJBNS-ASCB(,R1)    -> START/MOUNT JOBNAME     LDW3
         CLC   =CL8'PCAUTH',0(R1)       IS THIS 'PCAUTH'?          LDW3
         BE    *+12                     YES - WE ARE ON SP3, AND   LDW3
*                                       THEREFORE, WE HAVE XRBN    LDW3
*---  RUNNING OLDER SYSTEM.  CONVERT 12 BIT LEFT                   LDW3
*---  JUSTIFIED RBN TO 14 BIT RIGHT JUSTIFIED XRBN                 LDW3
         SRL   R14,4                    FIRST PAGE INDEX TO XRBN   LDW3
         SRL   R15,4                    LAST PAGE INDEX TO XRBN    LDW3
         STH   R14,FIRSTF               SAVE FIRST PAGE XRBN       LDW3
         STH   R15,LASTF                SAVE LAST PAGE XRBN        LDW3
         SPACE 2
* SET UP  THE  JOB IDS
         LA    R1,9                     NUMBER TO SET UP
         LA    R2,JOBN1                 FIRST ONE TO SET UP
         LA    R3,C'1'                  FIRST CHAR TO STORE
JIDLOOP1 STC   R3,0(,R2)                SAVE THE CHAR
         LA    R2,9(,R2)                NEXT ENTRY
         LA    R3,1(,R3)                NEXT CHAR
         BCT   R1,JIDLOOP1              LOOP THRU FIRST NINE
         MVI   JOBN0,C'0'               AND ADD THE LAST ONE
         MVC   JOBN1+1(8),=CL8'*MASTER*'
         MVC   JOBN2+1(8),=CL8'PCAUTH'                             LDW3
         MVC   JOBN3+1(8),=CL8'GRS'                                LDW3
         MVC   JOBN4+1(8),=CL8'CONSOLE'                            LDW3
         MVC   JOBN5+1(8),=CL8'ALLOCAS'                            LDW3
         MVC   JOBN6+1(8),=CL8'JES2'                               LDW3
         MVC   JOBN7+1(8),=CL8'TCAM'                               LDW3
         MVC   JOBN8+1(8),=CL8'NET'                                LDW3
         MVC   GLOBID,=C'_BCLNSV?'      SET UP GLOBAL IDS          LDW2
         EJECT
***********************************************************************
*
*     FORMAT THE OUTPUT SCREEN
*
***********************************************************************
         SPACE 2
*---  THIS CODE (TO CLEAR SCREEN BUFFER) MOVED HERE FROM UP ABOVE  LDW2
FORMAT   LA    R2,IOAREA                START OF IO BUFFER
         LA    R3,IOLEN                 SIZE OF IO BUFFER
         LA    R5,C' '                  PAD BYTE
         SLL   R5,24                    MOVE TO HIGH ORDER BYTE
         MVCL  R2,R4                    CLEAR THE IO BUFFER
         SPACE 2
         TM    FLAG,FMAP                DISPLAY MAP STYLE?         LDW2
         BNO   FORMATC                  NO - COUNT STYLE           LDW2
         EJECT ,
***********************************************************************
*
*     DISPLAY A REAL STORAGE MAP
*
***********************************************************************
         SPACE 2
* FIRST  SHOW  THE JOB IDENTIFIERS
         LA    R1,10                    NUMBER OF JOBNAMES TO SHOW
         LA    R2,MLINE1C               PLACE TO PUT STUFF
         LA    R3,JOBN1                 ADDR OF FIRST JOB ID
JIDLOOP2 MVC   0(1,R2),0(R3)            ID BYTE
         MVI   1(R2),C'='               MAKE IT LOOK NICE
         MVC   2(8,R2),1(R3)            SHOW JOBNAME
         LA    R2,MLINE2C-MLINE1C(,R2)  NEXT LINE
         LA    R3,9(,R3)                NEXT JOBID
         BCT   R1,JIDLOOP2              DO THEM ALL
         LA    R1,8                     NUMBER OF GLOBAL IDS
         LA    R3,GLOBID                START OF ID BYTES
         LA    R4,GLOBNAME              NAME TABLE
GIDLOOP1 MVC   0(1,R2),0(R3)            MOVE IN ID
         MVI   1(R2),C'='
         MVC   2(8,R2),0(R4)            MOVE IN NAME
         LA    R2,MLINE2C-MLINE1C(,R2)  NEXT LINE
         LA    R3,1(,R3)                NEXT ID BYTE
         LA    R4,8(,R4)                NEXT NAME
         BCT   R1,GIDLOOP1              DO ALL 8
         LA    R2,22                    NUMBER OF LINES TO FORMAT
         LA    R3,MLINE1A               START OF DISPLAY LINES
         LH    R5,SEGLINE               GET STARTING FRAME NUMBER  LDW3
NEWLINE  LA    R4,64                    FRAMES PER LINE
         STCM  R5,B'0011',TEMP1         CONVERT FRAME XRBN
         UNPK  TEMP2(4+1),TEMP1(2+1)    TO PRINTABLE HEX
         MVC   0(3,R3),TEMP2            COPY TO SCREEN AREA
         TR    0(3,R3),HEXTAB           CONV TO HEX
         LA    R3,3(,R3)                -> FIRST FRAME LOCATION    LDW2
NEWFRAME IC    R0,INDNUC                TRY NUCLEUS FIRST
         CLM   R5,B'0011',NUCB          SEE IF FRAME IS IN NUC
         BL    GOTIT                    BR IF YES
         LR    R1,R5                    COPY FRAME XRBN
         SLL   R1,4                     CONVERT TO FRAME INDEX     LDW3
         A     R1,PFTORG                GET FRAME TABLE ENTRY
         USING PFTE,R1
         CLM   R5,B'0011',FIRSTF        SEE IF IN FRAME TABLE
         BL    WHOISIT                  BR IF NOT
         CLM   R5,B'0011',LASTF
         BH    WHOISIT
         IC    R0,INDAVAIL              TRY AVAIL QUEUE
         TM    PFTFLAG1,PFTONAVQ        SEE IF FRAME AVAIL
         BO    GOTIT                    BR IF YES
         IC    R0,INDBAD                ASSUME ITS A BAD FRAME
         TM    PFTFLAG1,PFTBADPG        SEE IF IT IS
         BO    GOTIT                    BR IF YES
         IC    R0,INDVIO                ASSUME ITS VIO
         TM    PFTFLAG2,PFTIRRG         SEE IF IT IS
         BO    GOTIT
         TM    PFTQNDX,PFTLFQN          LOCAL OR LSQA
         BZ    NOTLOCAL                 BR IF NOT
         IC    R0,INDLOCAL              TRY LOCAL PAGES
         LH    R6,PFTASID               GET ASID
         SLL   R6,2                     MAKE IT FULLWORD INDEX
         L     R15,CVTPTR               CVT ADDR
         USING CVT,R15
         L     R15,CVTASVT              ASVT ADDR
         DROP  R15
*LDW4    L     R6,X'20C'(R6,R15)        GET ASCB ADDRESS
         LA    R6,ASVTENTY-4-ASVT(R6,R15)  -> ASCB ADDRESS         LDW4
         TM    0(R6),ASVTAVAI           IS THIS ASID IN USE?       LDW4
         BO    WHOISIT                  NO - SHOW AS '?'           LDW4
         L     R6,0(,R6)                -> ASCB                    LDW4
         USING ASCB,R6
         ICM   R15,B'1111',ASCBJBNS     SEE IF JOB NAME POINTER
         BZ    GETJBNI                  NO, TRY OTHER
         CLC   =CL8'INIT',0(R15)        IS 'JOBNAME' INITIATOR?
         BNE   GOTJN                    ...NO, SO USE IT
*                                       ...YES, GET OTHER POINTER
GETJBNI  ICM   R15,B'1111',ASCBJBNI     TRY THE OTHER POINTER
         BZ    GOTIT                    NO NAME, JUST STORE THE 'L'
GOTJN    LA    R6,JOBN1                 GET FIRST TABLE ENTRY
         DROP  R6
         LA    R14,10                   NUMBER OF ENTRIES TO TRY
JIDLOOP3 IC    R0,0(,R6)                PICK UP THE INDICATOR BYTE
         CLC   0(8,R15),1(R6)           SEE IF JOBNAME MATCH
         BE    GOTIT                    USE INDICATOR IF YES
         LA    R6,9(,R6)                POINT TO NEXT JOBID
         BCT   R14,JIDLOOP3             TRY ALL 10
         IC    R0,INDLOCAL              ELSE JUST USE LOCAL FLAG
         B     GOTIT
NOTLOCAL IC    R0,INDSQA                TRY FOR SQA OR SQA RESV
         TM    PFTQNDX,PFTSRQN
         BO    GOTIT                    BR IF YES
         IC    R0,INDCOM                TRY COMMON AREA
         TM    PFTQNDX,PFTCFQN
         BO    GOTIT                    BR IF YES
WHOISIT  IC    R0,INDWHO                UNKNOWN PAGE FRAME
GOTIT    STC   R0,0(,R3)                ADD CHAR TO SCREEN IMAGE   LDW2
*---  BUMP EVERYTHING FOR NEXT PAGE FRAME                          LDW2
         LA    R3,1(,R3)                NEXT FRAME LOCATION
         LA    R5,1(,R5)                NEXT FRAME XRBN            LDW3
         CLM   R5,B'0011',EORM          SEE IF BEYOND END
         BNL   DISPLAY                  BR IF LAST FRAME PASSED    LDW2
         BCT   R4,NEWFRAME              GO TRY NEXT FRAME
         LA    R3,MLINE2A-MLINE1A-64-3(,R3)  NEXT SCREEN LINE      LDW2
         BCT   R2,NEWLINE
         B     DISPLAY                                             LDW2
         EJECT ,
***********************************************************************
*
*     DISPLAY A REAL STORAGE MAP
*
***********************************************************************
         SPACE 2
FORMATC  LA    R0,#COUNTS               NUMBER OF CELLS            LDW2
         LA    R1,COUNTS                -> FIRST CELL              LDW2
CNTZLP   MVC   0(4,R1),=F'0'            CLEAR COUNT                LDW2
         LA    R1,3*4(,R1)              -> NEXT CELL               LDW2
         BCT   R0,CNTZLP                ZERO THEM ALL              LDW2
         SPACE 2
         SR    R5,R5                    START WITH FIRST FRAME     LDW2
         SPACE 2
FRAME$LP LA    R14,=CL8'+NUCLEUS'       TRY NUCLEUS FIRST          LDW4
         CLM   R5,B'0011',NUCB          SEE IF FRAME IS IN NUC     LDW2
         BL    GOTNAME                  BR IF YES                  LDW2
         LR    R1,R5                    COPY FRAME XRBN            LDW2
         SLL   R1,4                     CONVERT TO FRAME INDEX     LDW3
         A     R1,PFTORG                GET FRAME TABLE ENTRY      LDW2
         USING PFTE,R1                                             LDW2
         LA    R14,=CL8'+UNKNOWN'       ASSUME UNKNOWN PAGE FRAME  LDW4
         CLM   R5,B'0011',FIRSTF        SEE IF IN FRAME TABLE      LDW2
         BL    GOTNAME                  BR IF NOT                  LDW2
         CLM   R5,B'0011',LASTF                                    LDW2
         BH    GOTNAME                                             LDW2
         LA    R14,=CL8'+AVAIL+ '       TRY AVAIL QUEUE            LDW4
         CH    R5,=H'4096'              > 16 MB?                   LDW3
         BL    *+8                      YES - OK                   LDW3
         LA    R14,=CL8'+AVAILX+'       INDICATE AVAIL > 16MB      LDW4
         TM    PFTFLAG1,PFTONAVQ        SEE IF FRAME AVAIL         LDW2
         BO    GOTNAME                  BR IF YES                  LDW2
         LA    R14,=CL8'++BAD++ '       ASSUME ITS A BAD FRAME     LDW4
         TM    PFTFLAG1,PFTBADPG        SEE IF IT IS               LDW2
         BO    GOTNAME                  BR IF YES                  LDW2
         LA    R14,=CL8'+VIO+   '       ASSUME ITS VIO             LDW4
         TM    PFTFLAG2,PFTIRRG         SEE IF IT IS               LDW2
         BO    GOTNAME                                             LDW2
         TM    PFTQNDX,PFTLFQN          LOCAL OR LSQA              LDW2
         BZ    TRYSQA                   BR IF NOT                  LDW2
         LH    R6,PFTASID               GET ASID                   LDW2
         SLL   R6,2                     MAKE IT FULLWORD INDEX     LDW2
         L     R15,CVTPTR               CVT ADDR                   LDW2
         USING CVT,R15                                             LDW2
         L     R15,CVTASVT              ASVT ADDR                  LDW2
         DROP  R15                                                 LDW2
*LDW4    L     R6,X'20C'(R6,R15)        GET ASCB ADDRESS           LDW2
         LA    R6,ASVTENTY-4-ASVT(R6,R15)  -> ASCB ADDRESS         LDW4
         LA    R14,DWD                  -> FAKE JOBNAME WORKAREA   LDW4
         MVC   DWD(4),=C'ASID'          PUT IN FLAG                LDW4
         HEX   DWD+4,PFTASID,LEN=2      FORMAT ASID IN HEX         LDW4
         TM    0(R6),ASVTAVAI           IS THIS ASID IN USE?       LDW4
         BNO   AS$INUSE                 YES - USE ASIDXXXX         LDW4
         MVI   DWD+4,C'='               NO - CHANGE TO ASID=XXX    LDW4
         B     GOTNAME                  CONTINUE                   LDW4
         SPACE 1
AS$INUSE TM    FLAG,FASID               WANT ASID'S FOR ALL?       LDW4
         BO    GOTNAME                  YES - CONTINUE WITH FAKE   LDW4
         L     R6,0(,R6)                -> ASCB                    LDW4
         USING ASCB,R6                                             LDW2
         ICM   R14,B'1111',ASCBJBNI     -> JOBNAME FOR INIT'D JOBS LDW2
         BNZ   GOTNAME                  POINTER EXISTS, OK         LDW2
         ICM   R14,B'1111',ASCBJBNS     TRY OTHER POINTER          LDW2
         BNZ   GOTNAME                  OK                         LDW2
         LA    R14,=CL8'+LOCAL+ '       WHAT KIND OF LOCAL???      LDW4
         B     GOTNAME                                             LDW2
TRYSQA   LA    R14,=CL8'+SQA    '       TRY FOR SQA OR SQA RESV    LDW4
         TM    PFTQNDX,PFTSRQN                                     LDW2
         BO    GOTNAME                  BR IF YES                  LDW2
         LA    R14,=CL8'+COMMON '       TRY COMMON AREA            LDW4
         TM    PFTQNDX,PFTCFQN                                     LDW2
         BO    GOTNAME                  BR IF YES                  LDW2
         LA    R14,=CL8'+UNKNOWN'       UNKNOWN PAGE FRAME         LDW4
GOTNAME  LA    R2,#COUNTS               NUMBER OF CELLS TO SEARCH  LDW2
         LA    R3,COUNTS                -> FIRST CELL              LDW2
FINDNAME CLC   =F'0',0(R3)              EMPTY CELL?                LDW2
         BE    GOTCELL                  YES - USE IT               LDW2
         CLC   =CL8'+OVFL+',4(R3)       IS TABLE FULL?             LDW4
         BE    COUNTJOB                 YES - ACCUM IN LAST CELL   LDW3
         CLC   4(8,R3),0(R14)           JOBNAME IN TABLE?          LDW2
         BE    COUNTJOB                 YES - COUNT IT             LDW2
         LA    R3,4*3(,R3)              -> NEXT CELL               LDW2
         BCT   R2,FINDNAME              SEE IF END OF TABLE?       LDW2
         B     NEXTF                    IGNORE IT IF TABLE FULL    LDW2
GOTCELL  MVC   4(8,R3),0(R14)           SAVE THIS JOBNAME          LDW2
COUNTJOB L     R1,0(,R3)                GET FRAME COUNT            LDW2
         LA    R1,1(,R1)                INCR                       LDW2
         ST    R1,0(,R3)                STORE UPDATED COUNT        LDW2
*---  BUMP EVERYTHING FOR NEXT PAGE FRAME                          LDW2
NEXTF    LA    R5,1(,R5)                NEXT FRAME XRBN            LDW3
         CLM   R5,B'0011',EORM          SEE IF BEYOND END          LDW2
         BL    FRAME$LP                 GO TRY NEXT FRAME          LDW2
*---  NOW SORT CELLS INTO JOBNAME ORDER                            LDW2
         LA    R10,COUNTS               -> FIRST CELL              LDW2
         LA    R0,#COUNTS               NUMBER OF CELLS            LDW2
         SR    R1,R1                    CLEAR ACCUMULATOR          LDW2
SORTLP0  CLC   =F'0',0(R10)             EMPTY CELL (PREV=LAST)?    LDW2
         BE    SORT$TOT                 YES - SAVE TOTAL           LDW2
         A     R1,0(,R10)               ADD NUMBER OF FRAMES HERE  LDW2
         LA    R10,3*4(,R10)            -> NEXT CELL               LDW2
         BCT   R0,SORTLP0               KEEP LOOKING               LDW2
         B     SORTLP1                  START MAIN LOOP            LDW2
SORT$TOT ST    R1,0(,R10)               SAVE TOTAL                 LDW2
         MVC   4(8,R10),=CL8'++TOTAL '  AND PUT IN INDICATOR       LDW4
         B     *+8                      AND SKIP NEXT INSTRUCTION  LDW2
SORTLP1  SH    R10,=Y(3*4)              BACK UP TO LAST CELL       LDW2
         LA    R1,COUNTS                -> FIRST TABLE ENTRY       LDW2
         CR    R10,R1                   END AT START?              LDW2
         BL    SORTDONE                 YES - DONE SORTING         LDW2
SORTLP2  CLC   4(2*4,R1),3*4+4(R1)      NEED TO SWAP ENTRIES?      LDW2
         BL    NOSWAP                   NO - SKIP                  LDW2
         MVC   SORTWORK(3*4),3*4(R1)    YES - SO USE ...           LDW3
         MVC   3*4(3*4,R1),0(R1)        ... THE STANDARD ...       LDW2
         MVC   0(3*4,R1),SORTWORK       ... CHEAP SWAP METHOD      LDW3
         SPACE 1
NOSWAP   LA    R1,3*4(,R1)              -> NEXT TABLE ENTRY        LDW2
         CR    R1,R10                   END OF TABLE?              LDW2
         BL    SORTLP2                  NO - CONT. THIS SORT PASS  LDW2
         B     SORTLP1                  YES - DO NEXT PASS         LDW2
*---  NOW FORMAT THE SCREEN WITH COUNTS, 5 COLUMNS WIDE            LDW3
SORTDONE MVC   CTITLE+14(51),=C'* * *   REAL STORAGE UTILIZATION BY JOB$
               NAME   * * *'                                       LDW2
         LA    R2,#COUNTS               NUMBER OF CELLS TO SEARCH  LDW2
         LA    R3,COUNTS                -> FIRST CELL              LDW2
         LA    R4,CLINE1                -> FIRST SCREEN LINE       LDW2
         LA    R1,#CCOLS                NUMBER OF COLUMNS          LDW2
BUILD$L1 LR    R5,R4                    -> FIRST OUTPUT POSITION   LDW3
         LA    R0,#CLINES               NUMBER OF SCREEN LINES     LDW2
BUILD$L2 ICM   R14,B'1111',0(R3)        GET A COUNT                LDW2
         BZ    DISPLAY                  ALL DONE IF COUNT = 0      LDW2
         SLL   R14,2                    EACH FRAME IS 4K           LDW2
         CVD   R14,DWD                  CONVERT TO PACKED          LDW2
         MVC   TEMP1(7),=X'402020202020D2'  MOVE IN EDIT MASK      LDW3
         ED    TEMP1(6),DWD+5                                      LDW3
         MVC   0(8,R5),4(R3)            MOVE JOBNAME TO SCREEN     LDW3
         MVC   8(6,R5),TEMP1+1          MOVE NUMBER K TO LINE      LDW3
         LA    R3,3*4(,R3)              -> NEXT CELL               LDW2
         LA    R5,79(,R5)               -> NEXT SCREEN LINE        LDW2
         BCT   R0,BUILD$L2              FILL ONE COLUMN            LDW2
         LA    R4,#WIDTH(,R4)           -> TOP OF NEXT COLUMN      LDW3
         BCT   R1,BUILD$L1              FILL FOUR COLUMNS          LDW2
*        B     DISPLAY                                             LDW2
         SPACE 2
* FALL  THRU TO SHOW THE SCREEN
         EJECT
* DISPLAY THE PAGE AND CHECK FOR END REQUEST
DISPLAY  LA    R2,SCR1                  ASSUME MAP FORMAT.         LDW2
         TM    FLAG,FMAP                IS IT?                     LDW2
         BO    *+8                      YES - OK                   LDW2
         LA    R2,SCR2                  NO - COUNT FORMAT          LDW2
         TM    FLAG,FAUTO               AUTO UPDATE?
         BO    DISP2                    ...YES
*
         MVI   IOCBFLGD,X'00'           ...NO, CLEAR FLAG
         TRMIO IOCB,FORMAT=(R2),IMAGE=IOAREA                       LDW2
*
         PFKEY K9=DCMSOVER,K12=ENDIT,K2=UPDATE,K3=ENDIT,           LDW1$
               K7=UP,K8=DOWN,K5=HEXASID,                           LDW4$
               ATTN=ENDIT,DEF=FORMAT,ENTER=CKINPUT,K6=SWMODE       LDW2
*
DISP2    EQU   *
         OI    IOCBFLGD,IOCBDYON+IOCBDFRC
         TRMIO IOCB,WRITE,FORMAT=(R2),IMAGE=IOAREA                 LDW2
*
         PFKEY ATTN=UPDATE,DEF=FORMAT
*
UPDATE   EQU   *
         XI    FLAG,FAUTO               FLIP MODES, AUTO<->WAIT
         B     FORMAT                                              LDW2
         SPACE 2
HEXASID  EQU   *
         XI    FLAG,FASID               FLIP MODES, ASID<->JOBNAME LDW4
         B     FORMAT                                              LDW2
         SPACE 2
SWMODE   XI    FLAG,FMAP                FLIP MODES, MAP<->COUNT    LDW2
*---  CLEAR SCREEN BUFFER AREA FOR DIFFERENT LAYOUT                LDW2
         LA    R2,IOAREA                START OF IO BUFFER         LDW2
         LA    R3,IOLEN                 SIZE OF IO BUFFER          LDW2
         LA    R5,C' '                  PAD BYTE                   LDW2
         SLL   R5,24                    MOVE TO HIGH ORDER BYTE    LDW2
         MVCL  R2,R4                    CLEAR THE IO BUFFER        LDW2
         B     FORMAT                                              LDW2
         SPACE 2
CKINPUT  CLC   =C'END',MINPLINE         SEE IF END TYPED
         BNE   READINP                  IF NOT, GO LOOK AT INPUT
         B     ENDIT                    IF SO, TERMINATE
         SPACE 3
* READ CHANGEABLE FIELDS AND SAVE THEM
READINP  TM    FLAG,FMAP                IN MAP MODE?               LDW2
         BNO   FORMAT                   NO - NO INPUT FIELDS       LDW2
         LA    R1,10                    NUM OF JOBNAME FIELDS
         LA    R2,MLINE1C               START OF FIRST ONE
         LA    R3,JOBN1                 FIRST JOBID SAVE AREA
JIDLOOP4 MVC   0(1,R3),0(R2)            MOVE ID BYTE
         MVC   1(8,R3),2(R2)            MOVE JOBNAME
         LA    R2,MLINE2C-MLINE1C(,R2)  TRY NEXT SCREEN LINE
         LA    R3,9(,R3)                NEXT JOBID SAVE AREA
         BCT   R1,JIDLOOP4              DO ALL 10 OF THEM
         LA    R1,8                     NUMBER OF GLOBAL ID CHARS
         LA    R3,GLOBID                GLOBAL ID BYTES
GIDLOOP  MVC   0(1,R3),0(R2)            MOVE ID BYTE
         LA    R2,MLINE2C-MLINE1C(,R2)  NEXT LINE
         LA    R3,1(,R3)                NEXT ID BYTE
         BCT   R1,GIDLOOP               DO ALL 8 OF THEM
         B     FORMAT                   AND SHOW THE SCREEN
         SPACE 3
UP       LH    R15,SEGLINE              GET CURRENT TOP XRBN       LDW3
         SH    R15,=Y(22*64)            BACK UP BY 1 SCREEN WORTH  LDW3
         BNM   *+6                      CONTINUE IF OK             LDW3
         SR    R15,R15                  ELSE, USE 0                LDW3
         STH   R15,SEGLINE              SAVE NEW TOP XRBN          LDW3
         B     FORMAT                   AND GO BUILD THE SCREEN    LDW3
         SPACE 2
DOWN     LH    R15,SEGLINE              GET CURRENT TOP XRBN       LDW3
         AH    R15,=Y(22*64)            ADVANCE BY 1 SCREEN WORTH  LDW3
         CLM   R15,B'0011',EORM         PAST END?                  LDW3
         BNH   *+6                      CONTINUE IF OK             LDW3
         SR    R15,R15                  ELSE, USE 0                LDW3
         STH   R15,SEGLINE              SAVE NEW TOP XRBN          LDW3
         B     FORMAT                   AND GO BUILD THE SCREEN    LDW3
         EJECT
*----------------------------------------------------------------------
*
*              CONSTANTS AND SUCH
*
*----------------------------------------------------------------------
* NAMES  FOR   GLOBAL ID BYTES
GLOBNAME DC    CL8'AVAIL'
         DC    CL8'BAD'
         DC    CL8'COMMON'
         DC    CL8'LOCAL'
         DC    CL8'NUCLEUS'
         DC    CL8'SQA'
         DC    CL8'VIO'
         DC    CL8'UNKNOWN'
HEXTAB   EQU   *-C'0'
         DC    C'0123456789ABCDEF'
         SPACE  2
*  MAP SCREEN FORMAT
SCR1     DCMSFMT
MLINE1   MAPLINE  (MLINE1A,MLINE1B,MLINE1C)                        LDW2
         PRINT NOGEN                                               LDW2
MLINE2   MAPLINE  (MLINE2A,MLINE2B,MLINE2C)                        LDW2
         MAPLINE  ,                                                LDW2
         MAPLINE  ,                                                LDW2
         MAPLINE  ,                                                LDW2
         MAPLINE  ,                                                LDW2
         MAPLINE  ,                                                LDW2
         MAPLINE  ,                                                LDW2
         MAPLINE  ,                                                LDW2
         MAPLINE  ,                                                LDW2
         MAPLINE  ,                                                LDW2
         MAPLINE  ,                                                LDW2
         MAPLINE  ,                                                LDW2
         MAPLINE  ,                                                LDW2
         MAPLINE  ,                                                LDW2
         MAPLINE  ,                                                LDW2
         MAPLINE  ,                                                LDW2
         MAPLINE  ,                                                LDW2
         MAPLINE  ,                                                LDW2
         MAPLINE  ,                                                LDW2
         MAPLINE  ,                                                LDW2
         MAPLINE  ,                                                LDW2
         PRINT GEN                                                 LDW2
MINPLINE DCMSFLD 79,ALPHA,ROW=23,CURSOR=YES
         DCMSFEND
         SPACE  2
*  COUNT SCREEN FORMAT
SCR2     DCMSFMT
CTITLE   DCMSFLD 79
CLINE1   DCMSFLD 79,INTEN=LO
         PRINT NOGEN                                               LDW2
         DCMSFLD 79,INTEN=LO
         DCMSFLD 79,INTEN=LO
         DCMSFLD 79,INTEN=LO
         DCMSFLD 79,INTEN=LO
         DCMSFLD 79,INTEN=LO
         DCMSFLD 79,INTEN=LO
         DCMSFLD 79,INTEN=LO
         DCMSFLD 79,INTEN=LO
         DCMSFLD 79,INTEN=LO
         DCMSFLD 79,INTEN=LO
         DCMSFLD 79,INTEN=LO
         DCMSFLD 79,INTEN=LO
         DCMSFLD 79,INTEN=LO
         DCMSFLD 79,INTEN=LO
         DCMSFLD 79,INTEN=LO
         DCMSFLD 79,INTEN=LO
         DCMSFLD 79,INTEN=LO
         DCMSFLD 79,INTEN=LO
         DCMSFLD 79,INTEN=LO
         DCMSFLD 79,INTEN=LO
         PRINT GEN                                                 LDW2
CINPLINE DCMSFLD 79,ALPHA,ROW=23,CURSOR=YES
         DCMSFEND
         EJECT
ENDIT    DCMSTOP
DWD      DS    D                                                   LDW2
IOAREA   EQU   *
         DSGEN SCR1
         ORG   IOAREA                   OVERLAY THE TWO AREAS      LDW2
         DSGEN SCR2                                                LDW2
         ORG   ,                                                   LDW2
IOLEN    EQU   *-IOAREA
         EJECT ,
PFTORG   DS    F                        APPARENT VIRT ADDR OF FRAME TAB
NUCB     DS    H                        XRBN OF CVTNUCB
FIRSTF   DS    H                        FIRST PAGE FRAME XRBN
LASTF    DS    H                        LAST PAGE FRAME XRBN
EORM     DS    H                        XRBN OF CVTEORM
SEGLINE  DS    H                        XRBN OF TOP MAP LINE       LDW3
SORTWORK DS    CL12                     WORK AREA FOR BUBBLE SORT  LDW3
TEMP1    DS    CL8
TEMP2    DS    CL8
JOBN1    DS    CL9                      JOB IDENTIFIERS
JOBN2    DS    CL9                      ALL MUST BE SEQUENTIAL
JOBN3    DS    CL9
JOBN4    DS    CL9
JOBN5    DS    CL9
JOBN6    DS    CL9
JOBN7    DS    CL9
JOBN8    DS    CL9
JOBN9    DS    CL9
JOBN0    DS    CL9
GLOBID   DS    0CL8                     FOLLOWING ARE GLOBAL IDS
INDAVAIL DS    C'_'                                                LDW2
INDBAD   DS    C'B'
INDCOM   DS    C'C'
INDLOCAL DS    C'L'
INDNUC   DS    C'N'
INDSQA   DS    C'S'
INDVIO   DS    C'V'
INDWHO   DS    C'?'
*
FLAG     DS    X                        FLAG BYTE FOR STATUS
FAUTO    EQU   X'80'                    AUTO UPDATE IN EFFECT.
FMAP     EQU   X'40'                                               LDW2
FASID    EQU   X'20'                    DISPLAY ASID, NOT JOBNAME  LDW4
*
COUNTS   DS    (#COUNTS*3)F             F'COUNT', CL8'JOBNAME'     LDW2
*
WORKLEN  EQU   *-DCMSWORK               LENGTH TO GETMAIN          LDW4
         TITLE 'MVS DSECTS'
CVT      DSECT
         CVT
         EJECT
         IHAPVT
         EJECT
         IHAPFTE
         SPACE 3
         PRINT NOGEN                                               LDW3
*LDW3    EJECT
         IHAASCB
         IHAASVT  ,                                                LDW3
         SPACE 3
         END
