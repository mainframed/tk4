GTE299   TITLE 'GTEDS DATA SET MAINTENANCE UTILITY'
**********************************************************************
*  MAINTENANCE HISTORY                                               *
* PAR NUMB RL.VR.LV WHO DESCRIPTION (TCID NO HERE IF ANY)            *
* -------- -------- --- -------------------------------------------- *
* NONE     01.01.06 SHB CORRECT HANDLING OF CERTAIN GDG DATASETS     *
* NONE     01.01.06 HGB PGM UPGRADED FOR MVS. DYNAMIC ALLOCATION     *
*                       ADDED FOR PUBLIC/STORAGE PACKS AND  PARM FOR *
*                       ACCESS TO PRIVATE/PERMANENTLY RESIDENT PACKS *
* S6104583 02.01.01 HGB ERR IN AUTP1940 - DSUTIL (TCID TAUT0005)     *
* NONE     02.01.01 HGB CHG DYN ALLOC METHOD, ADD DLIB/PAGE EXCLUDE  *
*                       PER TAMPA DATA CENTER REQUEST                *
*                                                                    *
**********************************************************************
GTE299   CSECT
         STM   R14,R12,12(R13)     SAVE REGISTERS
         BALR  R12,0               ADDRESSABILITY
         USING *,R12,R10
         LR    R10,R12
         A     R10,VAL4096
         ST    R13,R13SAVE
         LA    R13,SAVEAREA
         L     R1,0(R1)                  GET ADDR OF PARM AREA
         CLC   0(2,R1),=H'0'             ANY PARM
         BE    NOPARM                    NO, LENGTH IS ZERO
         CLC   2(5,R1),=CL5'ALLOW'       PARM SAY ALLOW PVT ACCESS
         BNE   PARMTWO                   NO
         OI    PARMFLAG,PARMALLW         SET FLAG
         MVC   SLINE3AL,=C'ALLOWED    '
         LA    R1,5(R1)                  INCREM FOR PARM TWO
PARMTWO  EQU   *
         CLC   2(8,R1),=CL8',NOPRINT'    USER REQ NO ACCESSABLE MSGS
         BNE   NOPARM                    NO, CONTINUE
         OI    PARMFLAG,PARMNOPR         SET FLAG FOR NO PRINT ACCESS
NOPARM   EQU   *
         OPEN  (SYSIN,(INPUT),SYSPRINT,(OUTPUT))
         LA    R0,SAVUCBA                GET ADDR RECVING FLD
         L     R1,=A(L'SAVUCBA)          SET RECVING LEN
         LA    R2,=H'0'                  GET A SENDING ADDR
         LA    R3,0                      PAD CHAR=X'00' LEN=0
         MVCL  R0,R2                     CLEAR SAVUCBA TO X'00'S
         LA    R0,UCBTABL                GET ADDR RECVING FLD
         L     R1,=A(L'UCBTABL)          SET RECVING LEN
         LA    R2,=X'FF'                 GET A SENDING ADDR
         LA    R3,0                      SET SEND LEN TO 0
         ICM   R3,B'1000',=X'FF'         INSERT PAD CHAR
         MVCL  R0,R2                     CLEAR UCBTABL TO X'FF'S
         EJECT
**********************************************************************
* THIS ROUTINE STORES UCB ADDRESSES OF THE DASD DEVICES ALLOCATED    *
* BY DD CARDS OR ALLOC COMMANDS (IN TIOT) IN THE SAVUCBA             *
* ACCESSABILITY TABLE                                                *
**********************************************************************
         L     R6,16               PUT ADDR OF CVT IN REG 6
         L     R5,0(0,R6)          PUT ADDR OF ADDR OF TCB IN REG 5
         L     R5,4(0,R5)          PUT ADDR OF TCB (NEXT) IN REG 5
         L     R6,12(0,R5)         PUT ADDR OF TIOT IN REG 6
         LA    R5,24(R6)           PUT ADDR OF FIRST DD ENTRY IN R5
         USING UCBOB,R6            UCB ADDRESSABILITY
LOOPDD   EQU   *
         CLC   0(4,R5),=F'0'       END OF TIOT DD ENTRIES
         BE    DONEDD              YEP
         CLC   4(8,R5),=CL8'STEPLIB '  *
         BE    TESTDONE                *
         CLC   4(8,R5),=CL8'SYSPRINT'  *
         BE    TESTDONE                *
         CLC   4(8,R5),=CL8'SYSABEND'  *
         BE    TESTDONE                *** CHECK STD DD NAMES AND SKIP
         CLC   4(8,R5),=CL8'SYSUDUMP'  *
         BE    TESTDONE                *
         CLC   4(8,R5),=CL8'COREDUMP'  *
         BE    TESTDONE                *
         CLC   4(8,R5),=CL8'SYSIN   '  *
         BE    TESTDONE                *
         MVC   WORDWORK(2),18(R5)  MOVE UCB ADDR TO BOUNDARY
         LH    R6,WORDWORK         GET UCB  ADDR IN R6
         N     R6,CF0F             CLEAR 2 HI ORDER BYTES IN REG
         BAL   R14,PVTCHECK        SEE IF ALREADY ACCESSABLE
         B     CHKTABRC(R1)        TEST RETURN CODE
CHKTABRC EQU   *
         B     TESTDONE            RC=0 ITS THERE DONT DUPLICATE
         B     TESTSLOT            RC=4 NOT THERE, CHECK FOR ROOM
TESTDONE EQU   *
         SR    R4,R4               CLEAR INDEX REG
         IC    R4,0(R5)            GET LENGTH OF DD ENTRY
         LA    R5,0(R4,R5)         INDEX TO NEXT DD ENTRY
         B     LOOPDD              GO TRY IT
TESTSLOT EQU   *
         C     R4,SAVUCBMX         ANY SLOTS LEFT
         BE    NOSLOTS             NOPE TELL USER AND CONTINUE
*
         CLI   UCBTYP+2,UCB3DACC   IS IT DIRECT ACCESS
         BNE   TESTDONE            NOPE DONT ALLOW ACCESS
         CLC   UCBVOLI,=X'000000000000'  IS IT DUMMY UCB
         BE    TESTDONE            YEP, DONT ALLOW ACCESS
         CLI   UCBTYP+3,X'05'      2321 NOT SUPPORTED
         BE    TESTDONE            SKIP THEM
*              MAKE THIS UCB ACCESSABLE TO PGM
         STH   R6,0(R8)            STORE UCB ADDR IN SAVUCBA TABLE
         B     TESTDONE            CHECK NEXT DD STMT
NOSLOTS  EQU   *
         PUT   SYSPRINT,=CL80'0 NUMBER OF DD ALLOCATIONS EXCEEDS PROGRAX
               M CAPACITY - PROCESS CONTINUING'
         B     DONEDD              QUIT SCANNING TIOT
VAL4096  DC    F'4096'
*
DONEDD   EQU   *                   ALL UCB ADDR HAVE BEEN SAVED IF
         B     SVSYSTEM            THERE WAS A DD CARD FOR THEM
         EJECT
***********************************************************************
* THIS ROUTINE SAVES SYSTEM UCB ADDRESSES IN UCBTABL, ELIMINATING     *
* HOLES IN TABLE, DUPLICATES, DUMMY UCBS, AND VOL SERS STARTING       *
*              WITH 'SPOOL'. (TAMPA SPOOL  PACKS)                     *
* ALSO STORES OPERATING SYSTEM TYPE FLAGS FOR LATER REFERENCE         *
***********************************************************************
         SPACE 2
SVSYSTEM EQU   *
         L     R11,CVTPTR          ADDR CVT
         USING CVT,R11
         L     R7,CVTILK2          UCB TABLE ADDRESS
         MVC   OPSYS(1),CVTDCB          MOVE OPER SYST FLAGS TO HOLD
BLDLOOP  EQU   *
         SLR   R6,R6               CLEAR REGISTER           *HMD 02/83*
         LH    R6,0(R7)            GET SYSTEM UCB
         N     R6,CF0F             CLEAR HI-ORDER BITS      *HMD 02/83*
         BZ    BLDINCR             YEP GET NEXT UCB         *HMD 02/83*
         CL    R6,CF0F             IS IT END OF SYSTEM UCBS
         BE    BLDEND              YEP ALL DONR
         CLI   UCBTYP+2,UCB3DACC   IS IT DIRECT ACCESS
         BNE   BLDINCR             NOPE TRY NEXT UCB
         CLC   UCBVOLI,=X'000000000000'  IS IT DUMMY UCB
         BE    BLDINCR             YEP SKIP IT
         CLI   UCBTYP+3,X'05'      2321 NOT SUPPORTED SO
         BE    BLDINCR                SKIP THEM
         BAL   R14,SYSCHECK        CHECK UCBTABL FOR DUPS, ROOM
         B     BLDTSTRC(R1)        TEST RETURN CODE
BLDTSTRC EQU   *
         B     BLDINCR             RC=0 ITS IN TABLE (DUPLIC) SKIP
*                                  RC=4 NOT IN TABLE
         C     R4,UCBTABMX         IS TABLE FULL
         BE    BLDMSG              YEP TELL EM
         STH   R6,0(R8)            PUT UCB ADDR IN UCBTABL
BLDINCR  EQU   *
         LA    R7,2(R7)            BUMP TO NEXT SYSTEM UCB ADDR
         B     BLDLOOP
BLDMSG   EQU   *
         PUT   SYSPRINT,=CL80'0 NUMBER OF DASD DEVICES EXCEEDS PROGRAM X
               CAPACITY - PROCESS CONTINUING'
BLDEND   EQU   *
         B     DETACCES            GO DETERMINE ACCESSABILITY
         EJECT
***********************************************************************
* THIS ROUTINE ANALYZES ALL DASD UCB ADDRESSES IN UCBTABL AND         *
* PERFORMS THE FOLLOWING FUNCTIONS --                                 *
*  1. LISTS EACH DASD UNIT AND VOL SERIAL AND ITS ACCESSABILITY       *
*  2. DETERMINES ACCESSABILITY BY -                                   *
*    A. APPEARANCE OF UCB IN SAVUCBA TABLE (PREALLOCATED)             *
*    B. IF PUBLIC/STORAGE STATUS AND PERMANENTLY RESIDENT,            *
*       ALLOCATES UNIT DYNAMICALLY (MVS) - CALLS PVTCHECK, DYNTEST    *
*       OR ALLOWS ACCESSABILITY (NON-MVS)                             *
*    C. IF SUCCESSFULLY ALLOCATED OR ACCESSABLE, UCB ADDRESS IS       *
*          STORED IN SAVUCBA TABLE WHICH WILL SUBSEQUENTLY BE USED    *
*          TO DO PROGRAM LOCATE/SCRATCH FUNCTIONS                     *
***********************************************************************
DETACCES EQU   *
         LA    R7,UCBTABL          GET ADDR OF DASD UCB ADDRESS TBL
         TIME  DEC
         STM   R0,R1,PACKWORK
         UNPK  SLINE0+58(5),PACKWORK+5(3)    STORE RUN DATE IN PRINT
         OI    PACKWORK+3,X'0F'
         UNPK  SLINE0+73(7),PACKWORK(4)      STORE TIME IN PRINT LINE
         PUT   SYSPRINT,SLINE0
         PUT   SYSPRINT,SLINE3           WRITE PARM LINE
         TM    PARMFLAG,PARMNOPR             USER SAY NO PRT ACCESS
         BO    DETACC02                      YEP, DONT PRT HDR
         PUT   SYSPRINT,SLINE1     PRINT HEADERS
DETACC02 EQU   *
         PUT   SYSPRINT,SLINE2     SPACE 1 BLANK LINE
*
PRTLOOP  EQU   *
         LH    R6,0(R7)            UCB ADDRESS
         N     R6,CF0F             ZERO HIGH ORDER BYTE
         CL    R6,CF0F             END OF UCB'S
         BE    PRTEND
         USING UCBOB,R6            UCB ADDERSSABILITY
*
ADDRLOOP EQU   *
         BAL   R14,PVTCHECK        SEE ABOUT ROOM IN SAVUCBA TABLE
         C     R4,SAVUCBMX         HAVE WE USED UP TABLE
         BNE   ADDRMOVE            NOPE CHECK REST OF STUFF
         PUT   SYSPRINT,=CL80'0 NUMBER OF DASD DEVICES EXCEEDS PROGRAM X
               CAPACITY - PROCESS CONTINUING'
         B     PRTEND
ADDRMOVE EQU   *
Y00      CLI   UCBTYP+3,X'08'                               *HMD 02/83*
         BNE   Y01                                          *HMD 02/83*
         MVC   SLINE2+41(9),=C'2314/2319'   DEVICE IS 2314 OR 2319
         B     Y99                                          *HMD 02/83*
Y01      CLI   UCBTYP+3,X'09'                               *HMD 02/83*
         BNE   Y02                                          *HMD 02/83*
         MVC   SLINE2+43(4),=C'3330'   .DEVICE IS A 3330    *HMD 02/83*
         B     Y99                                          *HMD 02/83*
Y02      CLI   UCBTYP+3,X'0A'                               *HMD 02/83*
         BNE   Y03                                          *HMD 02/83*
         MVC   SLINE2+43(4),=C'3340'   DEVICE IS A 3340     *HMD 02/83*
         B     Y99                                          *HMD 02/83*
Y03      CLI   UCBTYP+3,X'0B'                               *HMD 02/83*
         BNE   Y04                                          *HMD 02/83*
         MVC   SLINE2+43(4),=C'3350'     DEVICE IS A 3350   *HMD 02/83*
         B     Y99                                          *HMD 02/83*
Y04      CLI   UCBTYP+3,X'0C'                               *HMD 02/83*
         BNE   Y05                                          *HMD 02/83*
         MVC   SLINE2+43(4),=C'3375'    DEVICE IS A 3375    *HMD 02/83*
         B     Y99                                          *HMD 02/83*
Y05      CLI   UCBTYP+3,X'0E'                               *HMD 02/83*
         BNE   Y06                                          *HMD 02/83*
         MVC   SLINE2+43(4),=C'3380'    DEVICE IS A 3380    *HMD 02/83*
         B     Y99                                          *HMD 02/83*
Y06      CLI   UCBTYP+3,X'0D'           3330 MOD 11         *HMD 02/83*
         BNE   Y98                      NOPE                *HMD 02/83*
         MVC   SLINE2+43(6),=C'3330-1'  YEP PRINT IT        *HMD 02/83*
         B     Y99                      AND CONTINUE        *HMD 02/83*
Y98      MVC   SLINE2+41(9),=CL9'UNKNOWN'                   *HMD 02/83*
*                                       UNKNOWN DEVICE TYPE *HMD 02/83*
Y99      MVC   SLINE2+2(6),UCBVOLI      VOL SER TO LINE
         CLC   =CL5'SPOOL',UCBVOLI       JES2 SPOOL VOL     *HMD 02/83*
         BE    ACCNO                     YEP, PREVENT ACCESS
         CLC   =CL4'DLIB',UCBVOLI        IBM DISTRIB VOL
         BE    ACCNO                     YEP, PREVENT ACCESS
         CLC   =CL2'PG',UCBVOLI          IS IT PAGE VOL     *HMD 02/83*
         BE    ACCNO                     YEP, PREVENT ACCESS*HMD 02/83*
MOVENAME MVC   SLINE2+11(3),UCBNAME
         TM    UCBSTAT,X'80'            IS DEVICE OFFLINE
         BNO   PRTOFF
         TM    UCBFL1,UCBNOTRD     IS DEVICE READY
         BO    PRTNTRD
         TM    UCBSTAB,X'04'            IS IT STORAGE
         BO    PRTSTOR
         TM    UCBSTAB,X'10'            IS IT PRIVATE
         BO    PRTPRIV
         TM    UCBSTAB,X'08'            IS IT PUBLIC
         BO    PRTPUB
         B     ACCNO
PRTOFF   MVC   SLINE2+17(7),=C'OFFLINE'
         B     ACCNO
PRTNTRD  MVC   SLINE2+16(9),=C'NOT READY'
         B     ACCNO
PRTSTOR  MVC   SLINE2+17(7),=C'STORAGE'
         BAL   R3,DYNTEST               DO DYNALLOC CHK, ALLOC IF NECC
         B     ACCVECTR(R1)             R1 HAS RETN CODE 0=YES 4=NO
PRTPUB   MVC   SLINE2+17(6),=C'PUBLIC'
         BAL   R3,DYNTEST               DO DYN ALLOC CHECK
         B     ACCVECTR(R1)             R1 HAS RETN CODE 0=YES 4=NO
PRTPRIV  EQU   *
         MVC   SLINE2+17(7),=C'PRIVATE'
         TM    PARMFLAG,PARMALLW        PARM ALLOW PVT/PERM ACCESS
         BNO   NOPERMPV                 NO, GO SEE IF DD CARD
         BAL   R3,DYNTEST               YES, DYNAMICALLY ALLOC IT
         B     ACCVECTR(R1)             R1=0,YES  R1=4,NO
NOPERMPV EQU   *
         BAL   R14,PVTCHECK             CHECK PVT PACK DD CARD
         B     ACCPVVEC(R1)             R1=0,YES  R1=4,NO
ACCPVVEC EQU   *
         B     ACCPVOK                  HE HAD DD CARD
         B     ACCNO                    HE HAD NO DD CARD
ACCPVOK  EQU   *
         MVC   SLINE2+50(22),=CL22'PREALLOCATED UNIT    ' TELL HIM
         B     ACCYES                   GO PUT IN YES
ACCVECTR EQU   *
         B     ACCYES                   ACCESSABLE - FIX PRINT LINE
         B     ACCNO                    NO ACCESS  - FIX PRINT LINE
*
ACCNO    MVC   SLINE2+32(2),=C'NO'
         B     FINPRT
ACCYES   MVC   SLINE2+32(3),=C'YES'
         STH   R6,0(R8)            STORE UCBADDR IN ACCESS TABLE
*
FINPRT   EQU   *
         TM    PARMFLAG,PARMNOPR        USER SAY NO PRT ACCESS MSG
         BO    FINPRT02                 YEP, SKIP IT
         PUT   SYSPRINT,SLINE2
FINPRT02 EQU   *
         MVC   SLINE2(80),SLINE2-1
*
UCBINCR  EQU   *
         LA    R7,2(R7)            BUMP FOR NEXT UCB
         B     PRTLOOP
PRTEND   EQU   *
         B     GTEDS
         EJECT
***********************************************************************
*                                                                     *
*        ROUTINE TO CHECK UCBADDR IN R6 AGAINST SAVUCBA TABLE         *
*              R8=SAVUCBA ENTRY                                       *
*              R4= COUNT OF SAVUCBA ENTRES IF GT SAVUCBMX, TABLE FULL *
*              R1= RETURN CODE  0=HIT 4=NO HIT                        *
*              R14= CALLERS RETURN ADDR                               *
*                                                                     *
***********************************************************************
*                                                                     *
PVTCHECK EQU   *
         LA    R8,SAVUCBA               GET TABLE ADDR
         SR    R4,R4                    CLEAR COUNT REG
PVTLOOP  EQU   *
         LA    R4,1(R4)                 COUNT 1 ENTRY
         CLC   0(2,R8),=X'0000'         END OF USED ENTRIES
         BE    PVTNO                    YEP R6 UCBADR NOT IN SAVUCBA
         CLM   R6,3,0(R8)          UCB ADDR MATCH THIS ENTRY
         BE    PVTYES                   YEP R6 UCBADDR MATCHES ENTRY
         LA    R8,2(R8)                 INCREMENT TO NEXT SAVUCBA ENTRY
         B     PVTLOOP                  GO CHECK AGAIN
PVTYES   EQU   *
         SR    R1,R1                    SET RC=0  TABLE HIT
         B     PVTEXIT                  TO EXIT
PVTNO    EQU   *
         LA    R1,4                     SET RC=4  NOT A TABLE HIT
PVTEXIT  EQU   *
         BR    R14                      EXIT TO CALLER
         EJECT
***********************************************************************
*                                                                     *
*        ROUTINE TO CHECK UCBADDR IN R6 AGAINST UCBTABL TABLE         *
*              R8= UCBTABL ENTRY                                      *
*              R4= COUNT OF UCBTABL ENTRES IF GT UCBTABMX, TABLE FULL *
*              R1= RETURN CODE  0=HIT 4=NO HIT                        *
*              R14= CALLERS RETURN ADDR                               *
*                                                                     *
***********************************************************************
*                                                                     *
SYSCHECK EQU   *
         LA    R8,UCBTABL               GET TABLE ADDR
         SR    R4,R4                    CLEAR COUNT REG
SYSLOOP  EQU   *
         LA    R4,1(R4)                 COUNT 1 ENTRY
         CLC   0(2,R8),=X'FFFF'         END OF USED ENTRIES
         BE    SYSNO                    YEP R6 UCBADR NOT IN UCBTABL
         CLM   R6,3,0(R8)          UCB ADDR MATCH THIS ENTRY
         BE    SYSYES                   YEP R6 UCBADDR MATCHES ENTRY
         LA    R8,2(R8)                 INCREMENT TO NEXT UCBTABL ENTRY
         B     SYSLOOP                  GO CHECK AGAIN
SYSYES   EQU   *
         SR    R1,R1                    SET RC=0  TABLE HIT
         B     SYSEXIT                  TO EXIT
SYSNO    EQU   *
         LA    R1,4                     SET RC=4  NOT A TABLE HIT
SYSEXIT  EQU   *
         BR    R14                      EXIT TO CALLER
         EJECT
***********************************************************************
*  ROUTINE TO CHECK PUBLIC/STORAGE PACKS AND PRIVATE, PERMANENTLY     *
*  RESIDENT PACKS AGAINST SAVUCBA TABLE.                              *
*  IF THERE IS A HIT, THE PACK IS ALREADY ALLOCATED BY DD             *
*     CARD, MSG IN SLINE2+50 SO INDICATES                             *
*  ELSE                                                               *
*     DYNAMIC ALLOCATION IS ATTEMPTED FOR THE PACK (CALL TO ALLOCVOL) *
*     SUCCESS OF ATTEMPT IS INDICATED IN SLINE2+50                    *
*  ENTRY POINT = DYNTEST  TAG      EXIT = DYNTEXIT TAG                *
*  REGISTER USAGE                                                     *
*    AT ENTRY                                                         *
*        R6 =  UCBADDR OF PUBLIC/STORAGE                              *
*        R3 =  CALLERS RETURN ADDR                                    *
*    AT EXIT                                                          *
*        R1 =  RETURN CODE 0 = ACCESSABLE 4 = NOT ACCESSABLE          *
*    OTHER                                                            *
*        CALLS PVTCHECK-USES R8,R4,R1,R14                             *
*                                                                     *
***********************************************************************
         SPACE 2
DYNTEST  EQU   *
         SR    R1,R1                    CLEAR RET REG
         BAL   R14,PVTCHECK             CHECK UCB IN R6 AGAINS SAVUCBA
         B     DYNT0010(R1)             R1=0 ITS THERE R1=4 NOT THERE
DYNT0010 EQU   *
         B     DYNT0050                 GO TELL EM IS DD ALLOCATED
*              COMES TO HERE IF NO ENTRY
         C     R4,SAVUCBMX              HAVE WE USED ALL UCBTABL ENTS
         BH    DYNT0040                 YEP TELL EM SO
         TM    UCBSTAT,UCBPRES          IS IT PERM RES VOLUME
         BNO   DYNT0045                 NO, MOUNTABLE MUST HAVE DD
         TM    OPSYS,MVS2               ARE WE IN MVS SYSTEM
         BNO   DYNT0055                 NO, DONT NEED TO ALLOCATE
         L     R15,ALOVOLAD             GET ADDR OF DYN ALLOC RTN
         BALR  R14,R15                  DO IT
         B     DYNT0020(R15)            RC=0 GOOD ALLOCATION RC=4 FAIL
DYNT0020 EQU   *
         B     DYNT0030                 GOOD ALLOC - GO TELLEM
*              ALLOCATE FAILED - TELL WHY
         MVC   SLINE2+50(22),=CL22'DYN FAIL I=     E=    '
         L     R5,RBADDR                GET ADDR  OF DYNALLOC RB
         USING S99RB,R5                      ADDRESS RB FIELDS
         MVC   WORDWORK+1(2),S99INFO         PICK UP INFO CODE
         UNPK  PACKWORK,WORDWORK+1(3)        PUT ZONES ON IT
         MVC   SLINE2+61(4),PACKWORK+3       PUT IN PRINT LINE
         TR    SLINE2+61(4),TRTAB            TRANSLATE TO ENGLISH
         MVC   WORDWORK+1(2),S99ERROR        GET ERROR REASON
         UNPK  PACKWORK,WORDWORK+1(3)        PUT ZONES ON IT
         MVC   SLINE2+68(4),PACKWORK+3       PUT IN PRINT LINE
         TR    SLINE2+68(4),TRTAB            TRANSLATE TO ENGLISH
         LA    R1,4                          SET RETURN CODE TO BAD
         B     DYNTEXIT                      EXIT
DYNT0030 EQU   *
         MVC   SLINE2+50(22),=CL22'DYNAMIC ALLOCATION OK '
         STH   R6,0(R8)       STORE UCB ADDR IN R6 INTO SAVUCBA ENTRY
         SR    R1,R1                         SET RETURN CODE TO ZERO
         B     DYNTEXIT
DYNT0040 EQU   *
         MVC   SLINE2+50(22),=CL22'SAVUCBA  TABLE FULL   '
         LA    R1,4                          SET RETURN CODE TO BAD
         B     DYNTEXIT
DYNT0045 EQU   *
         MVC   SLINE2+50(22),=CL22'MOUNTABLE NOT PREALLOC'
         LA    R1,4                          SET RETURN CODE TO BAD
         B     DYNTEXIT
DYNT0050 EQU   *
         MVC   SLINE2+50(22),=CL22'PREALLOCATED UNIT     '
         SR    R1,R1                    SET RETURN CODE TO GOOD
         B     DYNTEXIT
DYNT0055 EQU   *         NON-MVS SYSTEMS COME HERE
         STH   R6,0(R8)            PUT UCB ADDR IN ACCESABILITY TABLE
         SR    R1,R1               INDICATE ACCESABILITY TO CALLER
         B     DYNTEXIT
DYNTEXIT EQU   *
         BR    R3                       RETURN TO CALLER
         SPACE 2
***********************************************************************
*              ADCONS USED BY DYNTEST RTN / EOJ RTN                   *
*                                                                     *
ALOVOLAD DC    A(ALLOCVOL)              ADDR OF DYN ALLOC RTN
FRVOLAD  DC    A(FREEVOLS)              ADDR OF DYN FREE  RTN
RBADDR   DC    A(RB)                    ADDR OF DYN ALLOC RB
         SPACE 2
TRTAB    EQU   *-240               TRANSLATE TABLE
         DC    C'0123456789ABCDEF'      HEX TO ENGLISH
         EJECT
GTEDS    DS    0H
         TM    GDGSW,X'04'         IS ALL GENERATIONS BEING PROCESSED
         BO    PROCGEN             YES
         MVI   SW,X'00'
         MVI   GDGSW,X'00'         RESET GEN DATA GRP SW
         MVI   LOCAREA,X'40'       CLEAR DSN AREA
         MVC   LOCAREA+1(43),LOCAREA
         GET   SYSIN,LINE               GET INPUT
         PUT   SYSPRINT,LINE-1
         CLC   LINE+9(4),=CL4'DSN='     CHECK VALIDITY
         BNE   INV
         LA    R4,45          LENGTH CONTROL
         LA    R2,LINE+13               SCAN FOR BLANK
         LR    R3,R2                    END OF DSNAME
LOOP     DS    0H
         CLI   0(R3),X'40'
         BE    ENDDS
         CLI   0(R3),C','
         BE    ENDDS
TESTLEFT EQU   *
         CLI   0(R3),C'('          CHECK FOR LEFT PAREN IN DSN
         BNE   TESTRGHT            NO - GO CHECK FOR RIGHT PAREN
         OI    GDGSW,X'01'         SET GEN DATA GRP TO IND LEFT PAREN
         B     BUMPR3              GO BUMP R3 FOR LOOP
*
TESTRGHT EQU   *
         CLI   0(R3),C')'          CHECK FOR RIGHT PAREN IN DSN
         BNE   BUMPR3              NO - GO BUMP R3
         OI    GDGSW,X'02'         SET GEN DATA GRP SWITCH
*
BUMPR3   EQU   *
         LA    R3,1(R3)
         BCT   R4,LOOP
         B     INV
ENDDS    DS    0H
         LR    R4,R3          PTR TO DELIMITER
         SR    R3,R2                    GET LENGTH OF DSN
         CH    R3,=H'0'
         BE    INV
         CH    R3,=H'5'            INSURE DSN IS AT LEAST 5 CHARS XXX.X
         BL    INV3
         STC   R3,MVCGEN0+3        SET DISP IN MOVE INST
         STC   R3,CHKLOC+3         AND BAD 'LOCATE' TRAP COMPARE
         BCTR  R3,0
         STC   R3,*+5                   LENGTH FOR MOVE
         MVC   LOCAREA(1),0(R2)         ***
         MVC   DSNGEN0(44),LOCAREA SAVE INCOMING DSN FOR GEN TEST
         CLI   0(R4),C','
         BNE   OK1
         CLC   1(4,R4),=C'ALL '    AFTER , BETTER BE ALL
         BNE   INV
CHKSCR   CLI   LINE,C'S'           ONLY ALLOWED ON SCRATCH STMT
         BNE   INV                 BAD CTL CARD
         OI    SW,X'80'                INDICATE ALL
OK1      DS    0H
         TM    GDGSW,X'03'         TEST FOR BALANCED PARENS
         BM    INV                 UNBALANCED - PRINT INVALID
         BZ    TESTGDG             GO SEE IF REQUEST IS FOR ALL GEN
*
PROCGEN  EQU   *
         TM    GDGSW,X'04'         IS ALL GENERATIONS BEING PROCESSED
         BNO   LOCGEN              NO
         TM    GDGSW,X'08'         IS IT A FIND REQUEST
         BNO   SETDSN              NO
         L     R9,ADDR000          PUT ADDR OF 000 IN R9
         PACK  PACKWORK,0(3,R9)
         AP    PACKWORK,=PL1'1'
         UNPK  0(3,R9),PACKWORK+6(2)
         OI    2(R9),X'F0'
*
SETDSN   EQU   *
         MVC   LOCAREA(44),SAVEGDSN SET DSN WITH (0) IN LOCATE AREA
*
LOCGEN   EQU   *
         LOCATE LOCPARM
         LTR   R15,R15
         BZ    PRTGDG
         TM    GDGSW,X'04'         IS ALL GENERATIONS BEING PROCESSED
         BNO   NOTCTLG             NO GO REPORT NOT CATALOGED
         MVI   GDGSW,X'00'
         B     GTEDS               GO READ NEXT CONTROL CARD
*
NOTCTLG  EQU   *
         PUT   SYSPRINT,=CL80' GENERATION DATA SET NOT CATALOGED'
         B     GTEDS
*
TESTGDG  EQU   *                   THIS ROUTINE ADDS (0) TO THE
         LA    R5,DSNGEN0          INCOMING DSNAME AND DOES A LOCATE
MVCGEN0  MVC   0(6,R5),=C'(-000)'  TO SEE IF IT IS A GENERATION
         MVC   SAVEGDSN,DSNGEN0    DATA SET
         LOCATE LOCGENC
         LTR   R15,R15
         BNZ   FUNCHK              MUST NOT BE A GEN DATA GRP
*        THE FOLLOWING TEST IS TEMPORARY - IT CATCHES NON GDG DATA SETS
*        NOT DETECTED BY THE ABOVE 'LOCATE' INSTRUCTION (I.E., TSO
*        DATA SETS).
*
         CLC   DSNGEN0(44),SAVEGDSN   DID LOCATE CHG GDG REL#
         BE    FUNCHK              NOT A GDG DATA SET
         LA    R5,DSNGEN0          ADDR DSN IN LOCATE AREA
CHKLOC   CLC   0(2,R5),=CL2'.G'    IF CHGD ITS AN ABSOL GEN#
         BNE   FUNCHK              NO, NOT A GDG THEN
*
         OI    GDGSW,X'04'         SET SW TO INDICATE ALL GENERATIONS
         TM    SW,X'80'        IS THIS A SCRATCH WITH ALL SPECIFIED?
         BO    SETDSN          IF YES, GO SET DSN TO GEN (-000)
         CLC   LINE(7),=C'SCRATCH'
         BE    SET
         CLC   LINE(5),=C'FIND '   IS IT A FIND REQUEST
         BNE   SETDSN              NO
SET      OI    GDGSW,X'08'        INDICATE FIND REQ
         LA    R5,SAVEGDSN
         SR    R9,R9               CLEAR R9 FOR ADDR CALC
         IC    R9,MVCGEN0+3        PUT DISPLACEMENT OF (-000) IN R9
         LA    R9,2(R5,R9)         PUT ADDR OF 000 IN R9
         ST    R9,ADDR000          SAVE ADDR OF 000 IN DSN
         B     SETDSN
*
PRTGDG   EQU   *
         MVC   PRTGDSN+21(44),LOCAREA
         PUT   SYSPRINT,PRTGDSN
FUNCHK   EQU   *
         CLC   LINE(5),=C'FIND '        FUNCTION CHECK
         BE    FIND
*        CLC   LINE+13(3),=C'SYS'       SYSTEM D/S OK       *HMD 02/83*
*        BE    INV2                                         *HMD 02/83*
         CLC   LINE(8),=C'SCRATCH '
         BE    SCRATCH
         CLC   LINE(8),=C'UNCATLG '
         BE    UNCATLG
         B     INV                      FUNCTION INV
         EJECT
INV      DS    0H
         PUT   SYSPRINT,=CL80' INVALID PARAMETER CARD  '
         MVI   GDGSW,X'00'         CLEAR GDGSW
         B     GTEDS
INV2     DS    0H
         PUT   SYSPRINT,=CL80' SCRATCH AND UNCATLG FUNCTIONS NOT AVAILAX
               BLE FOR SYSTEM DATA SETS '
         B     GTEDS
INV3     DS    0H
         PUT   SYSPRINT,=CL80' INVALID DATA SET NAME SPECIFIED'
         B     GTEDS
         EJECT
EOF      DS    0H
         CLOSE (SYSPRINT,,SYSIN)
SPACE01A EQU   *
         L     R15,FRVOLAD              GET ADDR DYN FREE RTN
         BALR  R14,R15                  FREE ALL DYNAMICALLY ALOC VOLS
         L     R13,R13SAVE              RESTORE OS SAVEAREA ADDR
         LM    R14,R12,12(R13)     AND EXIT
         XR    R15,R15             RETURN CODE
         BR    R14
         EJECT
SPACE05  DS    0H
         LA    R7,SAVUCBA           GET ADDR OF ACCESSABLE UCB TABLE
SPACE06  DS    0H
         LH    R6,0(R7)            UCB ADDRESS
         N     R6,CF0F
         LTR   R6,R6               HOLE IN TABLE
         BZ    4(R3)         RETURN TO CALLERS RETN PLUS 4
*                            HAVE EXHAUSTED ACCESSABLE DIR ACC UNITS
         B     SPACE09       MORE UNITS, GO TRY EM
SPACE08  DS    0H
         LA    R7,02(R7)           INCREMENT TO NEXT ENTRY
         B     SPACE06             AND CHECK IT
SPACE09  DS    0H
         USING UCBOB,R6            UCB ADDRESSABILITY
*                       IF UCB IS IN THIS TABLE IT CAN BE ACCESSED
*                       TO PERFORM OBTAIN AND SCRATCH FUNCTIONS
         B     0(R3)    RETURN TO CALLER, R6 = OK UCB
         EJECT
FIND     DS    0H
         LOCATE LOCPARM                 LOCATE
         LTR   R15,R15
         BNZ   BADRC
         MVC   VOLSER(6),VLB+6          ZERO IS SUCCESSFUL
         PUT   SYSPRINT,CATREP
         LH    R4,VLB    NO. OF VOLUMES
         BCT   R4,FIOMORE
         B     FI01
FIOMORE  DS    0H
         LA    R3,VLB+18      POINT AT SECOND VOLUME
CAT3     MVC   SEC(6),0(R3)   MOVE SERIAL
         PUT   SYSPRINT,CAT2
         LA    R3,12(R3)
         BCT   R4,CAT3
         B     FI01
BADRC    DS    0H
         OI    SW,X'40'       SET UNSUCCESSFUL LOCATE
         CVD   R15,CVDAREA
         OI    CVDAREA+7,X'0F'          REPORT RET CODE
         UNPK  RC(3),CVDAREA+6(2)
         PUT   SYSPRINT,BADREP
FI01     DS    0H
         TM    SW,X'20'     CALL FROM SCRATCH
         BO    SC02
         MVI   OBTSW,X'00'         ZERO SWITCH
         BAL   R3,SPACE05          GET A UCB
         B     SPACE17             LOOK IT UP
         TM    OBTSW,X'80'
         BO    GTEDS               WAS ONE FOUND
         PUT   SYSPRINT,=CL80'0         DATA SET NOT FOUND ON ANY ACCESX
               SABLE VOLUMES'
         B     GTEDS
SPACE17  DS    0H
         MVC   VOL(6),UCBVOLI         GET VOL SER NUMBER
         OBTAIN OBT
         LTR   R15,R15
         BZ    GOOD
         CH    R15,=H'8'                NOT FOUND
         BE    SPACE08
NOT0OR8  DS    0H
         CVD   R15,CVDAREA
         OI    CVDAREA+7,X'0F'
         UNPK  RC1(3),CVDAREA+6(2)
         MVC   BADVOL(6),VOL
         PUT   SYSPRINT,BADREP2
         B     SPACE08
GOOD     DS    0H
         OI    OBTSW,X'80'   SET FOUND
         PUT   SYSPRINT,OBTGOOD
         B     SPACE08
         EJECT
UNCATLG  DS    0H
         CATALOG REMOVE
         LTR   R15,R15                  TEST RETURN CODE
         BNZ   BADUN
         PUT   SYSPRINT,=CL80'0         DATA SET SUCCESSFULLY UNCATALOGX
               ED '
         B     FI02
BADUN    DS    0H
         CVD   R15,CVDAREA              REPORT RETURN CODE
         OI    CVDAREA+7,X'0F'
         UNPK  RCU(3),CVDAREA+6(2)
         PUT   SYSPRINT,BADUREP
FI02     DS    0H
         TM    SW,X'20'
         BO    SC01             YES
         B     GTEDS
         EJECT
SCRATCH  DS    0H
         OI    SW,X'20'         SET SCRATCH PROCESSING
         MVI   OBTSW,X'00'              CLEAR SWTICH
         TM    SW,X'80'                ALL
         BO    UNCATLG
         B     FIND
SC01     DS    0H
SC02     DS    0H
         MVC   VLB1(256),VLB       SAVE LOCATE OUTPUT
         MVC   VLB1+256(9),VLB+256 *
         BAL   R3,SPACE05               GET A UCB
         B     GOTIT
         TM    OBTSW,X'40'
         BO    GTEDS
         PUT   SYSPRINT,=CL80'0         DATA SET NOT FOUND ON ANY ACCESX
               SABLE VOLUMES'
         B     GTEDS
GOTIT    DS    0H
         TM    SW,X'80'     ALL
         BO    SC03
         TM    SW,X'40'          WAS IT CATALOGUED
         BO    SC03
         LA    R5,VLB1+6           PTR TO FIRST VOLUME SERIAL NUMBER
         LH    R4,VLB1             NUMBER OF VOLUMES
CMP01    DS    0H
         CLC   0(6,R5),UCBVOLI         DO WE SCRATCH FROM THIS ONE
         BE    NOSCR          NO
         LA    R5,12(R5)         PT TO NEXT SERIAL NUMBER
         BCT   R4,CMP01
SC03     DS    0H        GO GET IT
         MVC   DEVTYP(4),UCBTYP
         MVC   VOLSERS(6),UCBVOLI      GET VOL SER FROM UCB
         SR    R0,R0
         TM    UCBSTAT,X'80'           DEV STILL ONLINE
         BZ    SPACE08             NO - GO GET NEXT UCB       10/31/74
         SCRATCH DELDS
         CLC   RCS(2),=H'0'
         BNE   BADS                     TEST RETURN CODE
         MVC   VOLS(6),VOLSERS
         PUT   SYSPRINT,GOODSCR
         OI    OBTSW,X'40'
         B     SPACE08         GET NEXT
BADS     DS    0H
         CLI   RCS+1,X'01'          DATA SET NOT ON VOLUME
         BE    SPACE08
         OI    OBTSW,X'40'
         MVC   VOLB(6),VOLSERS
         OI    RCS+1,X'F0'
         MVC   RCB(1),RCS+1
         PUT   SYSPRINT,BADSCR
         B     SPACE08             LOOK AT OTHER VOLUMES             01
NOSCR    DS    0H
         MVC   VOLN0SC(6),UCBVOLI      GET VOL  SER
         PUT   SYSPRINT,CATNOSCR
         MVC   VOL(6),UCBVOLI          FIND OUT IF ON THE VOLUME
         OBTAIN OBT
         LTR   R15,R15        0 MEANS YES
         BNZ   NOSCRA
         PUT   SYSPRINT,=CL80'          DATA SET FOUND ON THIS VOLUME'
         B     SPACE08
NOSCRA   DS    0H
         CH    R15,=H'8'      8 MEANS NOT FOUND
         BNE   NOT0OR8
         PUT   SYSPRINT,=CL80'          DATA SET NOT FOUND ON THIS VOLUX
               ME'
         B     SPACE08
         B     SPACE08
         EJECT
SYSIN    DCB   DSORG=PS,                                               X
               LRECL=80,                                               X
               DDNAME=SYSIN,                                           X
               EODAD=EOF,                                              X
               MACRF=GM,                                               X
               DEVD=DA
         EJECT
SYSPRINT DCB   DSORG=PS,                                               X
               LRECL=80,                                               X
               BLKSIZE=80,                                             X
               RECFM=FBA,                                              X
               DDNAME=SYSPRINT,                                        X
               MACRF=PM,                                               X
               DEVD=DA
         EJECT
LOCPARM  CAMLST NAME,LOCAREA,,VLB
LOCGENC  CAMLST NAME,DSNGEN0,,VLB
OBT      CAMLST SEARCH,LOCAREA,VOL,VLB
DELDS    CAMLST SCRATCH,LOCAREA,,VOLIST,,OVRD
REMOVE   CAMLST UNCAT,LOCAREA
         EJECT
LOCAREA  DS    80C
         DS    0D
VLB      DS    265C
         DS    0D
VLB1     DS    265C
OBTGOOD  DC    C'0        DATA SET FOUND ON VOLUME  -  '
VOL      DC    CL80' '
         ORG   OBTGOOD+80
BADREP2  DC    C'0     ** OBTAIN ERROR ON VOLUME  -  '
BADVOL   DC    C'        - RETURN CODE  =  '
RC1      DC    CL80'     ** '
         ORG   BADREP2+80
CATREP   DC    C'0         CATALOGUED TO VOLUME - '
VOLSER   DC    CL80' '
         ORG   CATREP+80
CAT2     DC    C'                                 '
SEC      DC    CL80' '
         ORG   CAT2+80
BADREP   DC    C'0         LOCATE (CATALOGUE SEARCH) UNSUCCESSFUL. RETUX
               RN CODE = '
RC       DC    CL80' '
         ORG   BADREP+80
CVDAREA  DS    D
VOLIST   DC    H'1'
DEVTYP   DC    4X'00'
VOLSERS  DC    6X'00'
RCS      DC    H'0'
GOODSCR  DC    C'0         DATA SET SUCCESSFULLY SCRATCHED FROM VOLUME X
                '
VOLS     DC    CL80' '
         ORG   GOODSCR+80
BADSCR   DC    C'0         SCRATCH FAILED ON VOLUME  -  '
VOLB     DC    C'        -  RETURN CODE = '
RCB      DC    CL80' '
         ORG   BADSCR+80
CATNOSCR DC    C'0         DATA SET CATALOGED TO VOLUME  '
VOLN0SC  DC    CL80'       ,  SCRATCH NOT ATTEMPTED '
         ORG   CATNOSCR+80
OBTAREA  EQU   LOCAREA
LINE0    DC    X'60'
LINE     DS    80C
OBTSW    DC    X'00'
SW       DC    X'00'
GDGSW    DC    X'00'
SAVEGDSN DC    CL44' '
DSNGEN0  DC    CL80' '
PRTGDSN  DC    CL80' FULLY QUALIFIED DSN='
*
         DS    0F
WORDWORK DC    F'0'                WORK AREA FOR DD ENRTY LENGTH
***********************************************************************
* THIS TABLE CONTAINS ALL SUPPORTED DASD DEVICES FROM SYSTEM UCB      *
* TABLE NO DUPLICATES DUMMIES OR HOLES                                *
***********************************************************************
UCBTABL  DS    XL1024               512 HWDS OF SPACE
         ORG   UCBTABL
         DC    1024X'FF'            511 ENTRIES PLUS 1 EXTRA
UCBTABMX DC    A(L'UCBTABL/2-1)   MAXIMUM ENTRIES
*                                                                     *
***********************************************************************
* THIS TABLE CONTAINS UCB ADDR'S OF ALL DEVICES ALLOCATED BY          *
* DD CARDS AND DYNAMICALLY ALLOCATED PUBLIC/STORAGE PACKS             *
***********************************************************************
         SPACE 2                        NO OF ENTRIES
         DS    0H
SAVUCBA  DS    0CL512                   256 SLOTS
         DC    255H'0'                  255 POSSIBLE UCB'S 1 ZERO ENT
SAVUCBMX DC    A(L'SAVUCBA/2-1)         COMPUTED CONSTANT OF MAX ENTS
***********************************************************************
*                                                                     *
OPSYS    DC    B'00000000'  CVTDCB      --- OPERATING SYSTEM FLAGS
*                1.......     CVTRSV08  RESERVED
*                .1......     CVT1SSS   (PCP) SSS
*                ..1.....     CBT2SPS   (MFT),SPS, OS/VS1
*                ...1....     CVT4MS1   (MVT),MS1, OS/VS2
*                ....1...     CVTRSV09  RESERVED
*                .....1..     CVT4MPS   MODEL 65  MULTIPROCESSING
*                ......1.     CVT6DAT   DYN ADDR TRANSL BY CPU VS1/VS2
*                .......1     CBTMVS2   MULT MEMORY OPT OF VS2 (MVS)
MVS2     EQU   X'01'
         SPACE 2
PARMFLAG DC    X'00'  '01234567'
PARMALLW EQU   X'01'   .......1     ALLOW PVT, PERM RES PACK ACCESS
PARMNOPR EQU   X'02'   ......1.     SUPPRESS PRT OF ACCESSABLE MSGS
*                      XXXXXX..     UNUSED                  *HMD 02/83*
         SPACE 2
SLINE3   DC    CL50'0    PARM INDICATES PRIVATE, PERMANENTLY RESIDENT '
         DC    CL12'PACK ACCESS '
SLINE3AL DC    CL11'NOT ALLOWED'
         DC    CL7' '
SLINE1   DC    CL80'0VOL SER  UNIT  VOL STATUS  ACCESSIBLE  DEV TYPE'
SLINE0   DC    CL80'1GTE299 - DATA SET MAINTENANCE UTILITY PROGRAM - RUX
               N DATE XXXXX -   TIME XXXXXXX'
         DC    C' '
SLINE2   DC    CL80' '
*                                  REFERS TO PRIVATE PACK
BADUREP  DC    C'0         UNCATALOG UNSUCCESSFUL - RETURN CODE  =  '
RCU      DC    CL80' '
         ORG   BADUREP+80
R13SAVE  DS    F
SAVEAREA DS    18F
         DS    0F
PACKWORK DC    D'0'
ADDR000  DS    F
CF0F     DC    X'0000FFFF'
         LTORG
         EJECT
***********************************************************************
*                                                                     *
*   DYNAMIC ALLOCATION OF VOLUMES  ROUTINE                            *
*   1 ALLOCATES VOLUME POINTED  TO BY UCB ADDR IN R6.                 *
*   2 REQUESTS RETURN OF DDN USED BY ALLOCATION ROUTINE               *
*     AND SAVES IT IN DYNTABLE ENTRY ASSOCIATED WITH THE UCB ADDR     *
*     USED TO OBTAIN THE VOL SERIAL.                                  *
*   3 SAVES UCB ADDR IN DYNTABLE ENTRY.                               *
***********************************************************************
*                                                                     *
*   ENTRY                                                             *
*     R14 = CALLERS RETURN ADDR                                       *
*     R15 = ENTRY POINT   (REQUIREED - USE BALR R14,R15)              *
*     R6 = UCB ADDRESS OF VOLUME TO BE ALLOCATED                      *
*   EXIT                                                              *
*     R15 = RETURN CODE  0=ALLOCATE 4=FAIL                            *
*   REGISTER USAGE INTERNAL                                           *
*    R11 = BASE REGISTER                                              *
*    R2-R4 = WORK REG                                                 *
*    R7  = DYNTABLE ENTRY PTR                DSECT = DYNENTRY         *
*    R5  = RB ADDRESS PTR                                             *
*    R1  = PARAM REG FOR DYNALLOC                                     *
*                                                                     *
*   ENTRY PT = ALLOCVOL                                               *
*   NOTE       REGISTERS ARE SAVED AND RESTORED TO AVOID CONFLICTS    *
***********************************************************************
         SPACE 2
         DS    0F
ALLOCVOL EQU   *
         USING *,R15
         STM   R14,R12,ALLCSAVE         SAVE THE REGS
         BALR  R11,0                    LOAD BASE
         USING *,R11
         LA    R5,RB                    SET UP RB ADDRESS
         USING S99RB,R5                 ADDRESSABILITY
         SR    R1,R1                    CLEAR TO ZERO
         ST    R1,S99ERROR              CLEAR ERROR AND INFO CODES
         L     R7,DYNTABAD              GET DYNTABLE ADDR
         USING DYNENTRY,R7
ALLC0010 EQU   *
         CLC   DYNUCBAD,=X'FFFF'        END OF TABLE
         BE    ALLC0090                 GO FAIL
         CLC   DYNUCBAD,=X'0000'        EMPTY SLOT
         BE    ALLC0020                 YEP GO TRY TO ALLCATE
         LA    R7,DYNLEN(R7)            BUMP DYN TABLE ENTRY ADDR
         B     ALLC0010                 GO TRY AGAIN
ALLC0020 EQU   *
         MVI   TU15USIZ+1,X'04'         RESET CHAR COUNT    *HMD 02/83*
         MVI   S99VERB,S99VRBAL         MAKE RB VERB AN ALLOCATE
         MVC   TU10VOL,UCBVOLI               PUT VOL SER IN TEXT UNIT
         CLI   UCBTYP+3,X'08'                IS IT 2314/2319
         BNE   ALLC0030                      NOPE
         MVC   TU15UNIT,=CL4'2314'           ASK FOR 2314
         B     ALLC0070
ALLC0030 EQU   *
         CLI   UCBTYP+3,X'09'                IS IT 3330
         BNE   ALLC0040                      NOPE
         MVC   TU15UNIT,=CL4'3330'           YEP ASK FOR IT
         B     ALLC0070
ALLC0040 EQU   *
         CLI   UCBTYP+3,X'0A'                IS IT 3340
         BNE   ALLC0050                      NOPE
         MVC   TU15UNIT,=CL4'3340'           YEP ASK FOR IT
         B     ALLC0070
ALLC0050 EQU   *
         CLI   UCBTYP+3,X'0B'                IS IT 3350
         BNE   ALLC0060                      NOPE ASSUME 3375
         MVC   TU15UNIT,=CL4'3350'           YEP ASK FOR IT
         B     ALLC0070
ALLC0060 EQU   *
         CLI   UCBTYP+3,X'0C'                IS IT 3375?    *HMD 02/83*
         BNE   ALLC0063                      NOPE FAIL IT   *HMD 02/83*
         MVC   TU15UNIT,=CL4'3375'           ASK FOR 3375   *HMD 02/83*
         B     ALLC0070
ALLC0063 EQU   *                                            *HMD 02/83*
         CLI   UCBTYP+3,X'0E'                IS IT 3380?    *HMD 02/83*
         BNE   ALLC0065                      NO TRY 3330-1  *HMD 02/83*
         MVC   TU15UNIT,=CL4'3380'           ASK FOR 3380   *HMD 02/83*
         B     ALLC0070                                     *HMD 02/83*
ALLC0065 EQU   *
         CLI   UCBTYP+3,X'0D'                3330 MOD 11 ?
         BNE   ALLC0090                      NOPE FAIL IT
         MVC   TU15UNIT(6),=CL6'3330-1'      YEP ASK FOR 3331
         MVI   TU15USIZ+1,X'06'              SIZE OF PARM   *HMD 02/83*
ALLC0070 EQU   *
         MVC   TU55LEN(2),=H'8'              SET DD RET LEN TO 8
         LA    R1,ALPTRLST                   GET ADDR OF ALLOCATE LIST
         ST    R1,S99TXTPP                   STORE IN RB
         LA    R1,RBPTR                      GET PARM ADDR FOR SVC
         DYNALLOC                            TRY TO ALLOCATE IT
         B     ALLC0080(R15)
ALLC0080 EQU   *
         B     ALLC0085                      GOOD RETURN  RC=0
         B     ALLC0090                      RC=4  SEE ERROR REASON
         B     ALLC0090                      RC=8  GO FAIL SEE REASON
         B     ALLC0090                      RC=12 FAIL SEE REASON
ALLC0085 EQU   *                   DYNAMIC ALLOC SUCCESSFUL
         MVC   DYNDDLEN,TU55LEN              SAVE DD LENGTH
         IC    R1,DYNDDLEN+1                 PUT IN REG
         EX    R1,SAVDD                      SAVE DD NAME
         STH   R6,DYNUCBAD                   SET ENTRY IN USE
         SR    R1,R1                         CLEAR R1
         ST    R1,ALLCSAVE+4                 SET 0 RETURN CODE FOR USER
         B     ALLCEXIT
*                             EXECUTED MVC INSTRUCTIONS
SAVDD    MVC   DYNDDNAM(0),TU55DDN           MOVE VARIABLE DDN
*
ALLC0090 EQU   *                   DYNAMIC ALLOC FAILED
         LA    R1,4                          GET RC=FAIL IN REG
         ST    R1,ALLCSAVE+4                 PUT IN R15 FOR CALLER
ALLCEXIT EQU   *
         LM    R14,R12,ALLCSAVE              RESTORE REGS
         BR    R14                           RETURN TO CALLER
         DROP  R11
         SPACE 2
***********************************************************************
*                                                                     *
*  FREE ALL DYNAMICALLY ALLOCATED VOLUMES (FREEVOLS)                  *
*                                                                     *
***********************************************************************
         SPACE 2
         DS    0H
FREEVOLS EQU   *
         USING *,R15
         STM   R14,R12,ALLCSAVE              SAVE REGS
         BALR  R11,0                         LOAD BASE
         USING *,R11
         L     R7,DYNTABAD                   GET DYNAMIC ALLOC TABLE->
FREE0010 EQU   *
         CLC   DYNUCBAD,=XL2'0000'           END OF USED ENTRIES
         BE    FREEEXIT                      YEP GET OUT
         CLC   DYNUCBAD,=XL2'FFFF'           END OF TABLE
         BE    FREEEXIT                      YEP GET OUT
         LA    R5,RB                         GET RB ADDR
         LA    R1,FRPTRLST                   GET PTR LIST FOR UNALLOC
         ST    R1,S99TXTPP                   STORE IN RB
         MVI   S99VERB,S99VRBUN              MAKE VERB CODE UNALLOCATE
         IC    R1,DYNDDLEN+1                 GET LEN OF DDNAME
         EX    R1,RSTDD                      RESTORE DDN TO TEXT UNIT
         MVC   TU55LEN,DYNDDLEN              PUT LENGTH IN TEXT UNIT
         SR    R1,R1                         ZERO R1
         ST    R1,S99ERROR                   CLEAR ERROR/INFO CODES
         LA    R1,RBPTR                      PARM ADDR FOR SVC
         DYNALLOC                            UNALLOCATE VOLUME
*                                            DISP IS DELETE FOR FAKE DS
         LA    R7,DYNLEN(R7)                 INCREMENT DYNTABLE ENTRY
         B     FREE0010                      DO NEXT VOLUME
*                                  EXECUTED MVC INSTRUCTIONS
RSTDD    MVC   TU55DDN(0),DYNDDNAM           MOVE DD NAME
*
FREEEXIT EQU   *
         SR    R1,R1                         ZERO
         ST    R1,ALLCSAVE+4                 TO RETURN CODE FOR CALLER
         LM    R14,R12,ALLCSAVE              RESTORE REGS
         BR    R14                           RETURN TO CALLER
*
         EJECT
***********************************************************************
*   CONSTANTS AND TABLES ETC NEEDED BY DYNAMIC ALLOC/FREE ROUTINES    *
***********************************************************************
         SPACE 2
ALLCSAVE DC    16F'0'         ALLOC/FREE ROUTINES SAVE AREA
DYNTABAD DC    A(DYNTABLE)
         SPACE 2
         EJECT
***********************************************************************
*    RB STRUCTURE FOR DYNALLOC MACRO -DSECT MACRO                     *
***********************************************************************
         SPACE 2
RBPTR    DS    0F
         DC    X'80'               END OF LIST
         DC    AL3(RB)             ADDRESS OF REQ BLOCK
         SPACE 2
RB       DS    0F                  RB
         DC    XL1'14'             RB LENGTH 20 BYTES
         DC    XL1'00'             VERB CODE - SET DYNAMICALLY.
         DC    XL2'2000'           FLAGS1
*                                   BIT2 ON = DO NOT CONSIDER OFFLINE
*                                             UNITS OR MOUNT VOLUMES
         DC    X'0000'             ERROR CODE
         DC    X'0000'             INFO  CODE
         DC    A(0)                ADDRESS OF TEXT UNIT POINTER LIST
         DC    F'0'                RESERVED
         DC    F'0'                FLAGS2
         SPACE 2
ALPTRLST DS    0F                  ALLOCATION TEXT UNIT POINTER LIST
         DC    A(TU04)             STATUS
         DC    A(TU05)             NORM DISP
         DC    A(TU06)             COND DISP
         DC    A(TU10)             VOL SER NO
         DC    A(TU15)             UNIT
         DC    X'80'               END OF LIST
         DC    AL3(TU55)           RETURN DDNAME
         SPACE 2
FRPTRLST DS    0F                  UNALLOCATION TEXT, UNIT POINTER LIST
         DC    X'80'               END OF LIST
         DC    AL3(TU55)           DDN FOR UNALLOC (REUSE 55)
         EJECT
***********************************************************************
*    TEXT UNITS FOR ALLOCATE/FREE FOR DYNALLOC MACRO                  *
***********************************************************************
* FORMAT OF TEXT UNITS  - REFER TO JOB MGMT SPL PUB & MACROS
*                         IEFZB4D0 - DSECT FOR RB CONSTRUCTION
*                         IEFZB4D2 - KEY FIELD VALUE  EQUATES
*        DC    XL2  KEY FIELD IDENTIFIES TEXT UNIT
*        DC    XL2  NUMBER OF OCCURRENCES OF LEN+PARM THAT FOLLOW
*        DC    XL2  LENGTH OF PARM FIELD VALUE MUST = NN IN NEXT INSTR
*        DC    CLNN'XXXXX'    PARM FIELD -LLENGTH OF NN
***********************************************************************
         SPACE 2
TU04     DC    X'0004'                  STATUS OF DATA SET
         DC    X'0001'
         DC    X'0001'
         DC    X'01'                    STATUS=OLD
TU05     DC    X'0005'                  NORM DISPOSITION
         DC    X'0001'
         DC    X'0001'
         DC    X'08'                    KEEP
TU06     DC    X'0006'                  COND DISPOSTION
         DC    X'0001'
         DC    X'0001'
         DC    X'08'                    KEEP
TU10     DC    X'0010'                  VOL SER SPECIFICATION
         DC    X'0001'
         DC    X'0006'
TU10VOL  DC    CL6' '                   VOL SER FROM UCB
TU15     DC    X'0015'                  UNIT SPECIFICATION
         DC    X'0001'
TU15USIZ DC    X'0004'          SIZE OF FIELD               *HMD 02/83*
TU15UNIT DC    CL4' '           UNIT TYPE FROM UCB BITS     *HMD 02/83*
         DC    CL4' '           FOR LONGER FIELDS           *HMD 02/83*
TU55     DC    X'0055'                  HAVE DYNALLOC RETURN DD NAME
         DC    X'0001'
TU55LEN  DC    X'0008'                  HE WILL CHG LEN TO ACTUAL
TU55DDN  DC    CL8' '                   HE PUTS DDN HERE
         EJECT
         LTORG
         EJECT
***********************************************************************
* REFER TO DYNENTRY DSECT FOR DESCRIPTION OF DYNTABLE ENTRIES         *
*    DYNTABLE - DYNAMIC ALLOCATION CONTROL  TABLE                     *
***********************************************************************
*                                                                     *
         DS    0H
DYNTABLE EQU   *
         DC    3060X'00'      255 ENTRIES OF 12X'00' EACH
         DC    XL2'FFFF'
         EJECT
MAPUCB   DSECT
         IEFUCBOB LIST=YES
         EJECT
         CVT   LIST=YES,DSECT=YES                           *HMD 02/83*
         EJECT
         IEFZB4D0
         EJECT
         IEFZB4D2
         EJECT
***********************************************************************
*     DYNAMICALLY ALLOCATED UNITS - DYNTABLE ENTRY                    *
         SPACE 2
DYNENTRY DSECT
DYNUCBAD DS    XL2       UCB ADDRESS
DYNDDENT DS    0CL10     DD ENTRY
DYNDDLEN DS    CL2            DDNAME LENGTH FOR TEXT UNIT BLOCK
DYNDDNAM DS    CL8            DDNAME RETURNED BY DYNALLOC
DYNLEN   EQU   *-DYNUCBAD     LENGTH ATTRIBUTE FOR ENTRY
         EJECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
