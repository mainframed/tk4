         TITLE 'TSO DATA SET SPACE RELEASE COMMAND'
***********************************************************************
*                                                                     *
*                                                                     *
* TITLE -      TSO DATA SET SPACE RELEASE COMMAND                     *
*                                                                     *
* FUNCTION -   PROVIDE THE ABILITY FOR A TSO USER TO                  *
*              RELEASE UNUSED SPACE IN A DATA SET, OR                 *
*              A SERIES OF DATA SETS.                                 *
*                                                                     *
*                                                                     *
* OPERATION -  ACCEPT FROM THE TSO USER A COMMAND                     *
*              STRING CONTAINING THE NAME(S) OF THE                   *
*              DATA SETS TO BE PROCESSED. OPEN EACH                   *
*              DATA SET WITH DISPOSITION=MOD, THEN                    *
*              CLOSE THE DATA SET.                                    *
*                                                                     *
*                                                                     *
* INPUT -      STANDARD COMMAND PROCESSOR PARAMETER LIST              *
*              POINTED TO BY REGISTER 1                               *
*                                                                     *
*                                                                     *
* OUTPUT -     UNUSED SPACE RELEASED IN THE REQUESTED                 *
*              DATA SETS.                                             *
*                                                                     *
*                                                                     *
* ATTRIBUTES - REENTRANT, REUSEABLE, REFRESHABLE.                     *
*                                                                     *
*                                                                     *
*        MODIFIED BY TOYOTA TO ALLOCATE DSN AS OLD,KEEP               *
*        TO ALLOC IBM FDP TSO PROGRAMMING CONTROL FACILITY            *
*        TO CONTROL ACCESS TO RESTRICTED DATASETS                     *
*                                                                     *
*        MODIFIED BY TOYOTA TO COMBINE THIS COMMAND AND THE DSAT      *
*        COMMAND IN ORDER TO PROVIDE THE PATTERN DSNAME SUPPORT TO    *
*        DSAT.                                                        *
*        THE COMBINED PROGRAMS SHOULD BE LINKEDITED WITH THE ALIASES  *
*        TRIM, TRIMNP, DSAT, DSATNP.                                  *
*        CHANGING OF THESE NAMES WILL REQUIRE SOURCE CHANGES IN       *
*        THIS MODULE.                                                 *
*                                                                     *
***********************************************************************
         EJECT
         MACRO
&NAME    CLEAR &FIELD
         LCLC  &L
&L       SETC  'L'''
&NAME    MVI   &FIELD,C' '
         MVC   &FIELD+1(&L&FIELD-1),&FIELD
         MEND
         SPACE
         MACRO
&NAME    ENTER &TYPE
         AIF   ('&TYPE' NE '').A1
&NAME    CSECT
         SAVE  (14,12),,*
         LR    BASEREG1,15
         LA    BASEREG2,4095(BASEREG1)
         LA    BASEREG2,1(BASEREG2)
         USING &NAME,BASEREG1,BASEREG2
         B     IHB&SYSNDX
         DC    C'COPYRIGHT 1973 BY SECURITY PACIFIC NATIONAL BANK'
IHB&SYSNDX DS  0H
         SPACE 2
         MEXIT
.A1      AIF   ('&TYPE' NE 'VALCHECK').A2
&NAME    SAVE  (14,12)
         L     WORKREG,4(1)   WORK AREA ADDRESS
         LM    BASEREG1,BASEREG2,BASES RESTORE BASE REGISTERS
         L     R9,0(1)       PDE ADDRESS
         LA    R15,VALSAVE
         ST    R13,4(R15)
         ST    R15,8(R13)
         LR    R13,R15
         SPACE 3
         MEXIT
.A2      ANOP
         MNOTE 8,'INVALID TYPE ''&TYPE'''
         MEND
         SPACE
         MACRO
&NAME    EXIT  &LV=
&NAME    DS    0H
         AIF   ('&LV' EQ '').A1
         LR    R2,R13         ADDR OF THIS SAVE AREA
.A1      L     R13,4(R13)
         STM   R15,R1,16(R13) RETURN REGS 15, 0, 1
         AIF   ('&LV' EQ '').A2 NOT DYNAMIC CORE
         FREEMAIN R,LV=&LV,A=(R2)
.A2      SPACE
         RETURN (14,12),T
         MEND
         SPACE
         MACRO
&NAME    MSG   &TEXT
         LCLA  &A
&A       SETA  K'&TEXT-2+4
&NAME    DC    H'&A',H'0',C&TEXT
         MEND
         EJECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
WORKREG  EQU   10
BASEREG1 EQU   11
BASEREG2 EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE 5
TRIM  ENTER
         LR    R2,R1          SAVE ADDR OF CPPL
         SPACE
         L     R3,CORESIZE
         GETMAIN R,LV=(R3)
         SPACE 2
         LR    WORKREG,R1     ADDR OF WORK AREA
         USING WORKAREA,WORKREG
         EJECT
*
*        CLEAR WORK AREA
*
         SPACE 2
         LA    R14,0(R3)      LENGTH OF AREA
         BCTR  R14,0          EXECUTED LENGTH
         LA    R15,255        LOOP FACTOR
LOOP01   CR    R14,R15        LAST PASS?
         BNH   LOOP00         YES
CLEAR1   XC    0(0,R1),0(R1)
         EX    R15,CLEAR1
         LA    R1,256(R1)
         SR    R14,R15
         BCT   R14,LOOP01     IF MORE TO CLEAR
         SPACE
LOOP00   EX    R14,CLEAR1     CLEAR LAST AREA
         SPACE 2
         STM   BASEREG1,BASEREG2,BASES SAVE BASE ADDRESSES
         SPACE 2
         LA    R15,MAINSAVE
         ST    R15,8(R13)
         ST    R13,4(R15)
         LR    R13,R15
         EJECT
*
*        LOAD TSO SERVICE ROUTINES
*
         SPACE 3
         USING CPPL,R2        BASE FOR COMMAND PARM LIST
         MVC   ADDRUPT,CPPLUPT ADDR OF USER PROFILE TABLE
         MVC   ADDRPSCB,CPPLPSCB
         MVC   ADDRECT,CPPLECT ADDR OF ENVIROMENT TABLE
         MVC   ADDRCBUF,CPPLCBUF
         DROP  R2
         SPACE 3
         L     R2,0(,R2)        ADDR OF COMMAND BUFFER
CKBLANX  CLI   4(R2),X'40'      LEADING BLANK ?
         BNE   CKDSAT           FIRST SIGNIFICANT CHARATER
         LA    R2,1(,R2)        TRY NEXT BYTE
         B     CKBLANX
CKDSAT   CLC   4(4,R2),DSAT     USER REQUEST ATTRIBUTE DISPLAY
         BNE   CKTRIMNP         NO
         OI    FLAGS,FDSAT      SO INDICATED
         CLC   8(2,R2),DSAT+4   REPORT OF TOTAL TRACKS ONLY(DSATNP)
         BNE   LODDAIR          NO
         OI    FLAGS,FNOPRINT   SO INDICATED
         B     LODDAIR
CKTRIMNP CLC   4(6,R2),TRIMNP   DID USER REQUEST NO PRINT
         BNE   LODDAIR          NO
         OI    FLAGS,FNOPRINT   INDICATE
         SPACE 3
LODDAIR  LOAD  EPLOC=IKJDAIR  DYNAMIC ALLOCATION INTERFACE
         ST    R0,ADDRDAIR
         SPACE 3
         LOAD  EPLOC=IKJPUTL  PUTLINE SERVICE ROUTINE
         ST    R0,ADDRPUTL
         SPACE 2
         LOAD  EPLOC=IKJEHCIR
         ST    R0,ADDRCIR
         EJECT
*
*        BUILD PARSE PARAMETER LIST AND INVOKE
*        IKJPARS TO ANALYZE COMMAND OPERANDS
*
         SPACE 3
GOPARSE  DS    0H
         LA    R1,PARSELST    AREA FOR PARSE PARAMETERS
         USING PPL,R1         BASE FOR PARSE PARAMETER LIST
         SPACE 2
         MVC   PPLUPT,ADDRUPT PASS UPT ADDRESS
         MVC   PPLECT,ADDRECT AND ECT ADDRESS
         MVC   PPLCBUF,ADDRCBUF AND COMMAND BUFFER ADDR
         SPACE
         ST    WORKREG,PPLUWA ALSO WORK AREA ADDR FOR VALIDITY EXITS
         SPACE
         LA    R0,ATTNECB     ECB FOR ATTN INTERRUPTS
         MVI   ATTNECB,0      CLEAR ECB
         ST    R0,PPLECB      PASSE TO PARSE
         SPACE
         LA    R0,ADDRANSR    PASS ADDR OF WORD WHERE PARSE
         ST    R0,PPLANS      RETURNS PDL ADDRESS
         SPACE
         MVC   PPLPCL,ADDRPCL STORE PCL ADDRESS
         SPACE 3
         LINK  EPLOC=IKJPARS  INVOKE PARSE
         DROP  R1
         SPACE 2
         LA    R14,MAXPARSE   RETURN CODE LIMIT
         SPACE
         CR    R15,R14        VERIFY RETURN CODE WITHIN LIMITS
         BH    PARSEBAD       NO, ERROR
         SPACE
         L     R14,ADDREXIT   PARSE EXIT PROCESSOR
         B     *+4(R15)       PROCESS RETURN CODE
         SPACE
PARSERET B     PARSEOK         0- SUCESSFUL
         B     ERROROUT        4- PARSE UNABLE TO PROMPT
         B     ERROROUT        8- USER ENTERED ATTENTION
         B     PARSEBAD       12- INVALID PARAMETERS
         B     PARSEBAD       16- PARSE INTERNAL FAILURE
         B     ERROROUT       20 - VALIDITY CHECK ERROR
MAXPARSE EQU   *-PARSERET
         SPACE 5
PARSEBAD DS    0H
         MVC   MSGTEXT2+4(L'MSGPARSE),MSGPARSE
         LA    R1,MSGTEXT2+4+L'MSGPARSE
         SPACE
         CVD   R15,DOUBLE
         OI    DOUBLE+7,X'0F'
         UNPK  0(2,R1),DOUBLE
         SPACE
         LA    R0,MSGTEXT2-2
         SR    R1,R0
         SLL   R1,16
         ST    R1,MSGTEXT2
         SPACE 2
         LA    R0,MSGTEXT2    PUT OUT 'COMMAND ERROR' MSG
         LA    R1,MSGCMDER
         SPACE
         BAL   R14,ERRORMSG
         SPACE 3
EXIT12   DS    0H
ERROROUT LA    R15,12         ERROR CODE 12 - COMMAND FAILED
         B     RETURN
         SPACE
EXIT0    TM    FLAGS,FNOPRINT+FDSAT+FPATTERN TRACK RPT ONLY(DSATNP) ?
         BO    PRTTRKS               PRINT IF WE FOUND ANY OR NOT
         TM    FLAGS,FNOPRINT    DID USER REQUEST NO PRINT
         BO    EXIT1             SO BE IT
         TM    FLAGS,FPATTERN+FDSAT         DSAT W/* OR @(AT) ?
         BNO   EXIT1                        NO - EXIT
PRTTRKS  L     R1,TOTTRAKS    TOTAL AMOUNT OF SPACE DISPLAYED
         CVD   R1,DOUBLE
         OI    DOUBLE+7,X'0F'
         SPACE 2
         SR    R15,R15
         LA    R14,10         COMPUTE WIDTH OF NUMBER
         SPACE
FIXWDTH2 DS    0H
         SR    R0,R0
         DR    R0,R14
         LA    R15,1(R15)
         LTR   R1,R1          SIZE DETERMINED?
         BNZ   FIXWDTH2       NO
         SPACE 2
         LR    R14,R15
         SLL   R15,4          SET WIDTH FOR UNPK
         SPACE 2
         UNPK  MSGTEXT1+4(0),DOUBLE
         EX    R15,*-6
         SPACE
         MVI   MSGTEXT1+4,C' '
         SPACE
         LA    R15,MSGTEXT1+5(R14)
         MVC   0(L'MSGTRKS,R15),MSGTRKS
         LA    R15,L'MSGTRKS(,R15)
         LA    R1,MSGTEXT1
         SR    R15,R1         TOTAL MSG LENGTH
         SLL   R15,16
         ST    R15,0(R1)
         SR    R0,R0
         SPACE
         BAL   R14,ERRORMSG   TELL USER HOW MANY TRACKS DISPLAYED
         SPACE 2
EXIT1    SR    R15,R15
         SPACE 3
RETURN   LTR   R2,R15         NORMAL EXIT?
         BZ    RETURN1        YES
         SPACE 2
         LA    R1,PARMLIST    AREA FOR STACK PARM LIST
         USING IOPL,R1
         SPACE
         MVC   IOPLUPT,ADDRUPT
         MVC   IOPLECT,ADDRECT
         LA    R0,ATTNECB
         MVI   ATTNECB,0
         ST    R0,IOPLECB
         SPACE 2
         STACK PARM=PARMLIST+16,DELETE=ALL,MF=(E,(1))
         SPACE 3
         TCLEARQ INPUT        CLEAR INPUT BUFFERS
         SPACE 3
RETURN1  DS    0H
         BAL   R14,FREEPDL    FREE THE PARSE STROAGE
         SPACE
         DELETE EPLOC=IKJDAIR
         SPACE
         DELETE EPLOC=IKJPUTL
         SPACE
         DELETE EPLOC=IKJEHCIR
         SPACE 3
         LR    R15,R2         RESTORE RETURN CODE
         SPACE
         L     R0,CORESIZE
         SPACE
         EXIT  LV=(0)
         EJECT
PARSEOK  DS    0H
         L     R9,ADDRANSR    ADDR OF PARSE DESCRIPTOR LIST
         USING PDL,R9         RETURNED BY PARSE
         SPACE
         LA    R2,OPTDSN      ADDR OF DSNAME PDL
         SPACE 3
NEXTPDL  DS    0H
         NI    FLAGS,X'FF'-FMATCH       CLEAR DATA SET FOUND FLAGS
         SPACE 2
         CLEAR DSNAME
         SPACE
         L     R5,0(R2)      MOVE DSNAME TO AREA
         LH    R4,4(R2)
         STH   R4,DSNLEN
         BCTR  R4,0
         MVC   DSNAME(0),0(R5)
         EX    R4,*-6
         SPACE
         NI    FLAGS,X'FF'-FQUOTED
         TM    6(R2),X'40'    DATA SET NAME QUOTED?
         BZ    NOTQUOTE       NO
         OI    FLAGS,FQUOTED
         B     PSWD
NOTQUOTE DS    0H
         LA    R14,1          DID USER SPECIFY ONE BYTE DSNAME ?
         CH    R14,DSNLEN
         BNE   GETHLI         NO - CANT BE AT SIGN(@)
         CLI   DSNAME,C'@'    WAS IT A REQUEST FOR ALL DATASETS
         BNE   GETHLI         NO - PROCESS THE ONE SPECIFIED
         OI    FLAGS,FALLDS   INDICATE 'PROCESS ALL DATASETS'
GETHLI   BAL   R14,GETUID     GET HIGH LEVEL INDEX
         MVC   DSNAME(8),0(R15) MOVE TO DSNAME
         LA    R15,DSNAME
         LA    R15,0(R1,R15)
         MVI   0(R15),C'.'      MOVE IN PERIOD
         MVC   1(0,R15),0(R5)   AND REST OF DSNAME
         EX    R4,*-6
         LA    R4,2(R4,R1)      GET NEW DSN LEN
         STH   R4,DSNLEN
         OI    FLAGS,FQUOTED    INDICATE USERID PRESENT
         SPACE
PSWD     CLEAR PASSWORD
         TM    22(R2),X'80'   PASSWORD SUPPLIED?
         BZ    NOPASS         NO
         SPACE
         L     R15,16(R2)
         LH    R14,20(R2)
         BCTR  R14,0
         MVC   PASSWORD(0),0(R15)
         EX    R14,*-6
NOPASS   DS    0H
         SPACE 2
         BAL   R14,INDXSCAN   DETERMINE IF PATTERN INDEX SPECIFIED
         B     NOPATTRN       00-SYNTAX ERROR
         B     NOPATTRN       04-NOT PATTERN FORMAT
*                             08-DSN IS PATTERN
         EJECT
*
         SPACE 2
         CLEAR PATTERN        CLEAR PATTERN AREA
         EJECT
*
*        PROCESS REQUEST BY INDEX LEVEL(S)
*        CALL IKJEHCIR TO DO VSAM GENERIC LOCATE
*
         SPACE 2
         USING CIRPARM,R5
         L     R5,CTGWKASZ    GET CORE FOR CIRPARM AND WORKAREA
         GETMAIN R,LV=(5)
         LR    R5,R1          ADDR OF GOTTEN CORE TO R5
         ST    R5,ADDRWA      SAVE ADDR OF GOTTEN CORE
         MVI   CIROPT,X'02'   INDICATE GENERIC LOCATE
         LH    R4,DSNLEN      FIND FIRST '*'(OR AT SIGN) IN DSNAME
         LA    R3,DSNAME
STARCOMP CLI   0(R3),C'*'
         BE    FNDSTAR
         CLI   0(R3),C'@'     SPECIAL FLAG FOR ALL DATASETS ?
         BNE   STARCMP2       NOPE
         OI    FLAGS,FALLDS   TELL CIR POST-PROCESSOR ITS 'ALL'
         B     FNDSTAR        AND GO TO CIR
STARCMP2 LA    R3,1(,R3)      BUMP TO NEXT CHAR
         BCT   R4,STARCOMP
FNDSTAR  MVC   0(0,R3),BLANX  BLANK OUT REST OF DSNAME
         EX    R4,*-6
         LA    R3,DSNAME
         ST    R3,CIPSRCH     ADDR(SEARCH ARGUMENT)
         LA    R3,CIRUWA
         ST    R3,CIRWA       ADDR(USER WORK AREA)
         L     R3,CIRUWAL
         STH   R3,CIRUWA      LEN(USER WORK AREA)
         LA    R3,CIRUSA
         ST    R3,CIRSAVE     ADDR(USER SAVE AREA)
         L     R15,ADDRCIR    BAL TO IKJEHCIR
         BALR  R14,R15
         LTR   R15,R15        CHECK RETURN CODE
         BZ    DORLSE
         CLI   CIRLOCRC,X'2C'  WORK AREA TOO SMALL ?
         BNE   ENDCHAIN
         LA    R1,MSG2MANY   TELL CALLER TOO MANY DATASETS
         SR    R0,R0         BUT WE WILL GIVE HIM WHAT WE GOT
         BAL   R14,ERRORMSG
         L     R3,CIRWA       ADDR(USERWORK AREA)
         LR    R5,R3          PLUS THE LENTH OF THE WORK AREA
         A     R5,CIRUWAL     TO R5 FOR LIMITING ADDRESS
         B     DORLSE2
         SPACE 2
DORLSE   L     R3,CIRWA       ADDR(USER WORK AREA)
         LH    R5,2(,R3)      NO. OF BYTES USED BY VSAM
         AR    R5,R3          END OF USED WORK AREA
DORLSE2  LA    R3,4(,R3)      MOVE PAST LENGTHS
CKNVSAM  CLI   0(R3),C'A'     NON-VSAM DATASET ?
         BNE   NEXTDSET       NO - TRY ANOTHER
         EJECT
***********************************************************************
*        SCAN EACH INDEX OF DSNAME FOR A MATCH WITH THE CURRENT       *
*        DATASET. IF AN '*'(OR AT SIGN) WAS SPECIFIED ACCEPT INDEX.   *
*        OTHERWISE IT MUST MATCH.                                     *
***********************************************************************
         SPACE 2
         LA    R9,INDXLIST+2  FIRST INDEX
         LA    R8,1(,R3)      START OF DSNAME
         SR    R7,R7          OFFSET INTO INDXLIST
         LH    R4,INDEXCNT    NUMBER OF INDEXES
NXTINDX  LH    R6,INDXLIST(R7) INDEX LENGTH
         LTR   R6,R6          DID USER SPECIFY '*'
         BNZ   INDXCMPR       NO - COMPARE THIS INDEX
         CH    R4,H1          LAST INDEX ?
         BNE   BMP8           NO - MORE COMPARES
         TM    FLAGS,FALLDS   DID USER ASK FOR ALL DATASETS ?
         BO    GETLEN         YES - PROCESS
         LA    R15,44(,R3)    CHECK FOR MORE INDEX LEVELS IN
CKPERIOD CLI   0(R8),C'.'     THIS DSNAME - IF SO DSNAME DOES
         BE    NEXTDSET       NOT MATCH PATTERNS NUMBER OF
         CR    R8,R15         INDEX LEVELS
         BE    GETLEN         OK - PROCESS
         LA    R8,1(,R8)      CHECK NEXT BYTE
         B     CKPERIOD
BMP8     LA    R8,1(,R8)      FIND NEXT INDEX IN THIS DSNAME
         CLI   0(R8),C' '     END OF DSNAME ?
         BE    NEXTDSET       YES - NOT ENOUGH LEVELS
         CLI   0(R8),C'.'
         BNE   BMP8
         BCTR  R8,0           SETUP FOR BUMP BY 2
         B     BMPINDX
INDXCMPR BCTR  R6,0           DROP 1 FOR EXECUTE
         CLC   0(0,R8),0(R9)  INDEXES MATCH ?
         EX    R6,*-6
         BNE   NEXTDSET       NO TRY ANOTHER
BMPINDX  LA    R8,2(R6,R8)    NEXT INDEX LEVEL IN DSNAME
         LA    R9,10(,R9)     NEXT INDEX SLOT
         LA    R7,10(,R7)     OFFSET INTO INDXLIST
         BCT   R4,NXTINDX     TRY NEXT
         CLI   0(R8),C' '     MORE INDEX LEVELS IN THIS DSNAME ?
         BNE   NEXTDSET       YES - DOES NOT MATCH PATTERN
GETLEN   LA    R15,1(,R3)     FIND FIRST BLANK
BMP15    LA    R15,1(,R15)
         CLI   0(R15),C' '
         BNE   BMP15
         SR    R15,R3         GET LEN(DSNAME)
         BCTR  R15,0          ALLOW FOR DSTYPE INDICATOR
         CH    R15,H44        DSN 44 BYTES LONG ?
         BL    STH15
         LA    R15,44         YES
STH15    STH   R15,DSNLEN     STORE LEN(DSNAME)
         MVC   DSNAME(44),1(R3)  AND MOVE FULL DSNAME
         TM    FLAGS,FDSAT    USER REQUEST DSAT FUNCTION ?
         BNO   GORLSE         NO - TRIM
         LA    R0,VOLUME      PASS VOLSER IF REQUESTED
*                             LET DSAT KNOW IF HEADER REQUIRED
         TM    FLAGS,FMATCH   ANY DATASETS PROCESSED YET ?
         BZ    DSAT1ST        NO - FIRST TIME
         ICM   R0,8,X04       TELL DSAT
DSAT1ST  OI    FLAGS,FMATCH   NOT NEXT TIME
         TM    FLAGS,FDSAT+FNOPRINT   TOTAL TRACK RPT ONLY ?
         BNO   GODSPLY                NO - GO TO DSAT
         LA    R15,1          TELL DSAT ITS NOPRINT
         SLL   R15,31         WITH X'80' ON IN HIGH BYTE
         OR    R0,R15         OF REG ZERO
GODSPLY  LA    R1,DSNAME      PASS DSNAME TO DSAT
         L     R15,DSATADDR   GET ADDRESS OF DSAT ROUTINE
         BALR  R14,R15        AND DOIT TOIT
         A     R15,TOTTRAKS   ACCUMULATE TOTAL TRACKS DISPLAYED
         ST    R15,TOTTRAKS   TO DISPLAY AT END
         B     NEXTDSET       CHECK FORE MORE
GORLSE   ST    R3,R3SAVE      SAVE R3
         BAL   R14,RLSEDS     AND DE-GAS
         L     R3,R3SAVE      RESTORE R3
NEXTDSET LA    R3,45(,R3)     NEXT DATASET
         CR    R3,R5          END OF DATASETS ?
         BL    CKNVSAM        NO - GET NEXT
         L     R3,ADDRWA      FREE USER WORK AREA
         L     R0,CTGWKASZ
         FREEMAIN R,LV=(0),A=(3)
         B     ENDCHAIN
         EJECT
*
*        PATTERN INDEX/DSNAME SCAN SUBROUTINE
*
         SPACE 2
INDXSCAN DS    0H
         STM   14,12,12(13)
         SPACE
         SR    R3,R3
         TM    FLAGS,FQUOTED SPECIAL DSNAME?
         BO    SCANX          YES, FIRST LEVEL IS NOT USERID
         LA    R3,1           INDICATE 1 LEVEL PROCESSED
         BAL   R14,GETUID     SET USERID AS FIRST LEVEL
SCANX    DS    0H
         SPACE 2
         LA    R0,MAXINDEX
         LA    R1,DSNAME
         LH    R15,DSNLEN
         AR    R15,R1
         BCTR  R15,0
         LA    R14,1
         NI    FLAGS,X'FF'-FPATTERN
         SPACE
SCAN0    DS    0H
         LR    R2,R1          SAVE START OF INDEX AREA
SCAN1    DS    0H
         CLI   0(R1),C'*'     SPECIAL INDEX?
         BE    SCAN2          YES
         CLI   0(R1),C'@'     VERY SPECIAL INDEX? (AT SIGN HN USERS)
         BE    SCAN2          YES
         CLI   0(R1),C'.'     INDEX SEPERATOR?
         BE    SCAN3          YES
         BXLE  R1,R14,SCAN1   GET NEXT CHARACTER
         SPACE
SCAN3    DS    0H
         LR    R14,R1
         SR    R14,R2
         SPACE
SCAN4    DS    0H
         LA    R3,1(R3)
         CR    R3,R0
         BH    SCAN0A
         LA    R4,10
         LR    R5,R3
         BCTR  R5,0
         MR    R4,R4
         LA    R5,INDXLIST(R5)
         STH   R14,0(R5)
         LTR   R14,R14
         BZ    SCAN5
         BCTR  R14,0
         MVC   2(0,R5),0(R2)
         EX    R14,*-6
         SPACE
SCAN5    DS    0H
         LA    R14,1
         BXLE  R1,R14,SCAN0
         SPACE
         STH   R3,INDEXCNT
         TM    FLAGS,FPATTERN
         LA    R15,4
         BZ    SCANEXIT
         LA    R15,8
         SPACE
SCANEXIT DS    0H
         L     14,12(13)
         LM    0,12,20(13)
         B     0(R14,R15)
         SPACE 3
SCAN0A   DS    0H             SYNTAX ERROR - TOO MANY LEVELS
         SR    R15,R15
         B     SCANEXIT
         SPACE 2
SCAN2    DS    0H
         TM    FLAGS,FQUOTED  SPECIAL DSN?
         BZ    SCAN2A         NO
         LTR   R3,R3          YES, * IN FIRST LEVEL?
         BZ    SCAN0A         YES, ERROR
SCAN2A   DS    0H
         OI    FLAGS,FPATTERN
         SR    R14,R14
         LA    R1,1(R1)
         B     SCAN4
         SPACE 5
GETUID   DS    0H
         SPACE 2
         TM    FLAGS,FDSAT             WAS DSAT REQUESTED
         BO    UIDDSAT                 YES - USE UPT PREFIX
         SPACE 2
         L     R15,ADDRPSCB
         USING PSCB,R15
         SR    R1,R1
         IC    R1,PSCBUSRL
         STH   R1,INDXLIST
         MVC   INDXLIST+2(0),PSCBUSER
         EX    R1,*-6
         DROP  R15
         SPACE 2
         BR    R14
         SPACE 2
UIDDSAT  L     R15,ADDRUPT
         USING UPT,R15
         SR    R1,R1
         IC    R1,UPTPREFL
         STH   R1,INDXLIST
         MVC   INDXLIST+2(0),UPTPREFX
         EX    R1,*-6
         DROP  R15
         LA    R15,16(,R15)         UP NAME POINTER
         SPACE 2
         BR    R14
         EJECT
*
*        END OF PATTERN DSNAME PROCESSING
*
         SPACE 2
ENDCHAIN DS    0H
         TM    FLAGS,FMATCH   WAS ANY DATA SET FOUND
         BO    NEXTDSN        YES, CONTINUE
         SPACE 2
         MVC   MSGTEXT1,MSGNOPAT
ENDCHN2  LH    R14,MSGTEXT1
         LH    R15,4(R2)      GET PATTERN LENGTH
         LA    R0,0(R14,R15)
         STH   R0,MSGTEXT1
         LA    R14,MSGTEXT1(R14)
         BCTR  R15,0
         L     R1,0(R2)
         MVC   0(0,R14),0(R1)
         EX    R15,*-6
         SPACE 2
         LA    R1,MSGTEXT1
         SR    R0,R0
         BAL   R14,ERRORMSG
         B     NEXTDSN
         EJECT
*
*        SINGLE DATA SET NAME PROCESSING
*
         SPACE 2
NOPATTRN DS    0H
         TM    FLAGS,FDSAT    USER REQUEST DSAT FUNCTION
         BNO   GORLSE2        NO - TRIM IT
         LA    R0,VOLUME      PASS VOLSER IF REQUESTED
*                             TELL DSAT IF HEADER REQUIRED
         TM    FLAGS,FMATCH   ANY DATASETS PROCESSED YET ?
         BZ    NOPAT2         NO - HEADER REQUIRED
         ICM   R0,8,X04       INDICATE NO HEADER
NOPAT2   OI    FLAGS,FMATCH   NO MORE HEADER
         LA    R1,DSNAME      PASS DSNAME TO DSAT
         L     R15,DSATADDR   GET ADDRESS OF DSAT ROUTINE
         BALR  R14,R15        AND GO DISPLAY
         B     NEXTDSN        SEE IF MORE TO DO
         SPACE
GORLSE2  BAL   R14,RLSEDS     RELEASE SPACE IN THIS DATA SET
         SPACE 3
*
*        GET NEXT DATA SET/INDEX LEVEL
*
         SPACE 2
NEXTDSN  DS    0H
         L     R2,24(R2)      GET LIST CHAIN ADDRESS
         LA    R2,0(R2)       CLEAR TOP BYTE
         LTR   R2,R2          ANOTHER ENTRY IN THE LIST?
         BNZ   NEXTPDL        YES, CONTINUE
         SPACE
         B     EXIT0          SUCESSFUL COMPLETION EXIT
         EJECT
*
*        SPACE RELEASE SUBROUTINE
*
         SPACE 3
RLSEDS   DS    0H
         ST    R14,R14RLSE
         SPACE 2
         LA    R1,DAIRBLK     ADDRESS OF DAIR PARAMETER BLOCK
         USING DAPB08,R1
         XC    DAIRBLK(LDAIRBLK),DAIRBLK
         SPACE 2
         LA    R0,X'08'
         STH   R0,DA08CD
         SPACE 2
         LA    R0,DSNLEN
         ST    R0,DA08PDSN    DSNAME ADDR FOR DAIR
         SPACE 2
         CLEAR DA08UNIT
         SPACE
         MVC   DA08SER,VOLUME SET VOLUME NAME
         SPACE 3
         CLEAR DA08MNM
         SPACE 2
         MVC   DA08PSWD,PASSWORD
         SPACE 2
         OI    DA08DSP1,DA08OLD    ASSUME DISP=(OLD,KEEP,KEEP)
         OI    DA08DPS2,DA08KEEP
         OI    DA08DPS3,DA08KEP
         SPACE
NOTQUAL  DS    0H
         CLEAR DA08DDN
         SPACE 2
         BAL   R14,CALLDAIR   ALLOCATE THE DATA SET
         LTR   R15,R15        CHECK RETURN CODE
         BNZ   NOTALLOC       DATA SET DID NOT ALLOCATE
         SPACE 2
         OI    FLAGS,FMATCH   INDICATE DATA SET MATCH
         LA    R1,DAIRBLK
         TM    DA08DSO,X'42'  DSORG=PS OR PO?
         BZ    NORLSE         NO, BYPASS RELEASE
         SPACE 2
         MVC   DDNAME,DA08DDN
         SPACE 2
         MVC   REALDCB(LDCB),DUMMYDCB
         LA    R1,EXLST
         IC    R0,DCBEXLST-IHADCB+REALDCB
         ST    R1,DCBEXLST-IHADCB+REALDCB
         STC   R0,DCBEXLST-IHADCB+REALDCB
         SPACE 2
         MVC   DCBDDNAM-IHADCB+REALDCB,DDNAME
         SPACE 2
         MVC   RLSEDCB(LDCB),REALDCB
         SPACE 2
         LA    R0,JFCB
         ST    R0,EXLST
         MVI   EXLST,X'87'
         SPACE 2
         MVI   OPENLIST,X'80'
         RDJFCB RLSEDCB,MF=(E,OPENLIST)
         SPACE 2
         OI    JFCBTSDM,X'08' PREVENT JFCB RE-WRITE
         NI    JFCBIND2,X'3F'
         OI    JFCBIND2,X'80' SET 'DISP=MOD' FLAG
         SPACE 2
         OPEN  (REALDCB,OUTPUT),TYPE=J,MF=(E,OPENLIST)
         SPACE 2
         STM   14,12,12(R13)  SAVE REGISTERS
         EJECT
*
*        CALCULATE TOTAL AMOUNT OF SPACE IN DATA SET
*
         SPACE 2
         L     R1,REALDCB+(DCBDEBAD-IHADCB) GET DEB ADDR
         SR    R14,R14
         SR    R15,R15
         IC    R14,DEBNMEXT(R1) GET EXTENT COUNT
         IC    R15,DEBAMLNG(R1) GET EXTENT SIZE
         SPACE 2
         SR    R0,R0
         SPACE
EXTNTCNT DS    0H
         AH    R0,DEBDVMOD+14(R1) ADD NUMBER OF TRACKS IN EXTENT
         AR    R1,R15         JUMP EXTENT POINTER
         BCT   R14,EXTNTCNT   LOOP THROUGH EXTENTS
         SPACE 2
*        R0 = TOTAL NUMBER OF TRACKS IN DATA SET
         SPACE 2
         BCTR  R0,0           DECREMENT FOR CALCULATIONS
         STH   R0,SIZEDS      SAVE TOTAL DATA SET SIZE
         SPACE 2
         LR    R3,R13
         L     R1,DCBDEBAD-IHADCB+REALDCB DEB ADDRESS
         LA    R2,DCBFDAD-IHADCB+REALDCB CCHHR OF LAST RECORD
         L     R15,CVT        ADDR OF CVT
         L     R15,CVTPRLTV(R15) CCHHR TO TTR CONVERT
         BALR  R14,R15
         LR    R13,R3
         LM    1,12,24(13)    RELOAD REGISTERS
         SPACE 2
         SRL   R0,16          GET RELATIVE # OF LAST TRACK
         SPACE
         LH    R1,SIZEDS      TOTAL AMOUNT IN DATA SET
         SR    R1,R0          TOTAL FREE SPACE
         BNP   FULLDS         IF NONE IS FREE
         SPACE
         STH   R1,SIZEFREE
         SPACE
         TM    FLAGS,FPARTIAL PARTIAL SPACE REQUEST?
         BZ    FREEALL        NO, RELEASE ALL SPACE
         EJECT
*
*        COMPUTE ADDRESS OF LAST TRACK IN DATA SET
*
         SPACE 2
         SH    R1,SIZESAVE    AMOUNT OF SPACE TO SAVE
         BNP   NORLSE         NONE TO RELEASE
         SPACE 2
         STH   R1,SIZEFREE    SAVE AMOUNT TO BE RELEASED
         SPACE
         BAL   R14,OPENRLSE   OPEN THE 'RELEASE' DCB
         SPACE
         LH    R0,SIZEDS      TOTAL AMOUNT IN DATA SET
         SH    R0,SIZEFREE    MINUS AMOUNT TO FREE
         SLL   R0,16          LEAVES REL # OF LAST TRACK
         LA    R1,X'100'      FORM TTR0 OF LAST RECORD
         OR    R0,R1
         SPACE
         L     R1,RLSEDCB+(DCBDEBAD-IHADCB) GET DEB ADDRESS
         LA    R2,RLSEDCB+(DCBFDAD-IHADCB) AREA FOR CCHHR
         SPACE
         L     R15,CVT
         L     R15,CVTPCNVT(R15) TTR TO CCHHR CONVERT
         LR    R3,R13
         BALR  R14,R15
         LR    R13,R3
         LM    14,12,12(R13)
         SPACE 2
FREEALL  DS    0H
         SPACE
         MVC   FDADSV(8),REALDCB+(DCBFDAD-IHADCB) SAVE LSTAR IN CASE
         SPACE
         CLOSE REALDCB,MF=(E,OPENLIST)            OF PARTIAL RLSE
         SPACE
         BAL   R14,OPENRLSE   OPEN THE 'RELEASE' DCB IF NOT OPEN
         SPACE
         CLOSE RLSEDCB,MF=(E,OPENLIST) RELEASE SPACE
         SPACE 2
***********************************************************************
*                                                                     *
*        IF USER REQUESTED PARTIAL RELEASE THE REAL DCB MUST BE       *
*        RE-OPENED, LSTAR RESET, AND CLOSED                           *
*                                                                     *
***********************************************************************
         TM    FLAGS,FPARTIAL  DID WE DO PARTIAL RLSE
         BZ    REPORT          NO - GO REPORT
         NI    JFCBIND1,X'3F'  UNSET 'RELEASE' FLAGS
         OPEN  (REALDCB,OUTPUT),TYPE=J,MF=(E,OPENLIST)
         MVC   REALDCB+(DCBFDAD-IHADCB)(8),FDADSV   RESTORE LSTAR
         CLOSE REALDCB,MF=(E,OPENLIST)              AND RESET
         EJECT
*                                      RECORD ADDRESS
         SPACE 2
REPORT   TM    FLAGS,FNOPRINT    DID USER REQUEST NO PRINT
         BO    FREEDS            SO BE IT
         LH    R1,SIZEFREE    TOTAL AMOUNT OF SPACE FREED
         CVD   R1,DOUBLE
         OI    DOUBLE+7,X'0F'
         SPACE 2
         SR    R15,R15
         LA    R14,10         COMPUTE WIDTH OF NUMBER
         SPACE
FIXWIDTH DS    0H
         SR    R0,R0
         DR    R0,R14
         LA    R15,1(R15)
         LTR   R1,R1          SIZE DETERMINED?
         BNZ   FIXWIDTH       NO
         SPACE 2
         LR    R14,R15
         SLL   R15,4          SET WIDTH FOR UNPK
         SPACE 2
         UNPK  MSGTEXT1+4(0),DOUBLE
         EX    R15,*-6
         SPACE
         MVI   MSGTEXT1+4,C' '
         SPACE
         LA    R15,MSGTEXT1+5(R14)
         MVC   0(L'MSGTRACK,R15),MSGTRACK
         LH    R1,SIZEFREE    TOTAL SIZE FREED
         BCTR  R1,0
         LTR   R1,R1          ONLY ONE TRACK?
         LA    R15,L'MSGTRACK(R15)
         BZ    ONETRACK       YES
         SPACE
         MVI   0(R15),C'S'
         LA    R15,1(R15)
         SPACE
ONETRACK DS    0H
         MVC   0(L'MSGRLSED,R15),MSGRLSED
         LA    R15,L'MSGRLSED(R15)
         SPACE
         MVC   0(44,R15),JFCB DATA SET NAME
         LA    R15,44(R15)
         LA    R1,MSGTEXT1
         SR    R15,R1         TOTAL MSG LENGTH
         SLL   R15,16
         ST    R15,0(R1)
         SR    R0,R0
         SPACE
         BAL   R14,ERRORMSG
         SPACE 2
FREEDS   DS    0H
         LA    R1,DAIRBLK
         XC    DAIRBLK(LDAIRBLK),DAIRBLK
         USING DAPB18,R1
         SPACE 2
         MVC   DA18DDN,DDNAME RELEASE THE DATA SET
         LA    R0,X'18'
         STH   R0,DA18CD
         SPACE 2
         BAL   R14,CALLDAIR
         SPACE 2
EXITRLSE DS    0H
         L     R14,R14RLSE
         BR    R14
         EJECT
FULLDS   DS    0H
         MVC   MSGTEXT1,MSGSPACE
         B     SKIPRLSE
         SPACE 2
NORLSE   DS    0H
         MVC   MSGTEXT1,MSGNRLSE
         SPACE 2
SKIPRLSE DS    0H
         LH    R15,MSGTEXT1
         LA    R14,44(R15)
         STH   R14,MSGTEXT1
         SPACE
         LA    R15,MSGTEXT1(R15)
         MVC   0(44,R15),JFCB
         SPACE 2
         CLOSE REALDCB,MF=(E,OPENLIST)
         SPACE 2
         TM    FLAGS,FNOPRINT    DID USER REQUEST NO PRINT
         BO    FREEDS            SO IT SHALL BE
         SR    R0,R0
         LA    R1,MSGTEXT1
         BAL   R14,ERRORMSG
         B     FREEDS
         EJECT
OPENRLSE DS    0H
         TM    RLSEDCB+(DCBOFLGS-IHADCB),X'10'
         BCR   1,R14
         ST    R14,R14SAVE
         SPACE
         OI    JFCBIND1,X'C0' SET 'RELEASE' FLAGS
         OPEN  (RLSEDCB,OUTPUT),TYPE=J,MF=(E,OPENLIST)
         SPACE
         L     R14,R14SAVE
         BR    R14
*
*
*        DATA SET NAME VALIDITY CHECK EXIT
*
*
         SPACE 3
VERDSN   ENTER VALCHECK
         CLEAR VOLUME
         SPACE
         TM    6(R9),X'80'    DSNAME SPECIFIED?
         MVC   MSGTEXT1,MSGDSERR
         BZ    DSNERROR       NO, MUST ONLY BE MEMBER NAME
         SPACE 3
         CLEAR DSNAME
         SPACE
         L     R15,0(R2)      GET ADDR OF DSNAME
         LH    R14,4(R2)      GET DSN LENGTH
         STH   R14,DSNLEN
         SPACE
         BCTR  R14,0
         MVC   DSNAME(0),0(R15)
         EX    R14,*-6
         SPACE 2
         BAL   R14,INDXSCAN   DETERMINE IF PATTERN DSNAME
         B     VERDSN0C       EXIT - SYNTAX ERROR
         NOP   0              RETURN - NOT PATTERN
         SR    R15,R15        RETURN - PATTERN NAME
         SPACE 2
VERDSNX  DS    0H
         EXIT
         SPACE 3
VERDSN0C DS    0H
         MVC   MSGTEXT1,MSGNOPAT
         SPACE
DSNERROR DS    0H
         LH    R1,MSGTEXT1
         LH    R14,4(R2)      LENGTH OF DSN
         LA    R0,0(R14,R1)
         STH   R0,MSGTEXT1
         SPACE
         LA    R1,MSGTEXT1(R1)
         L     R15,0(R2)
         SPACE
         BCTR  R14,0
         MVC   0(0,R1),0(R15)
         EX    R14,*-6
         SPACE
         LA    R1,MSGTEXT1
         SR    R0,R0
         SPACE
         BAL   R14,ERRORMSG
         LA    R15,4
         B     VERDSNX
         EJECT
*
*        VOLUME VERIFICATION SUBROUTINE
*
         SPACE 2
VERVOL   ENTER VALCHECK
         L     R15,0(R9)
         LH    R14,4(R9)
         SPACE 2
         CLEAR VOLUME
         SPACE 2
         BCTR  R14,0
         MVC   VOLUME(0),0(R15)
         EX    R14,*-6
         SPACE 2
         SR    R15,R15
         EXIT
         EJECT
*
*        FREE SPACE VALIDITY CHECK SUBROUTINE
*
         SPACE 2
VERSAVE  ENTER VALCHECK
         L     R15,0(R9)
         LH    R14,4(R9)
         SPACE
         BCTR  R14,0
         PACK  DOUBLE,0(,R15)
         EX    R14,*-6
         SPACE
         CVB   R1,DOUBLE
         STH   R1,SIZESAVE
         SPACE
         OI    FLAGS,FPARTIAL
         SPACE 2
         SR    R15,R15
         SPACE 2
         EXIT
         EJECT
*
*        PARSE CLEANUP ROUTINE
*
         SPACE 3
FREEPDL  DS    0H
         SPACE
         ST    R14,R14SAVE
         SPACE
         IKJRLSA ADDRANSR     RELEASE THE STORAGE
         SPACE 2
         XC    ADDRANSR,ADDRANSR
         SPACE
         L     R14,R14SAVE
         BR    R14
         EJECT
*
*        DYNAMIC ALLOCATION INVOCATION SUBROUTINE
*
         SPACE 3
CALLDAIR DS    0H
         ST    R14,R14SAVE    SAVE LINKAGE REGISTER
         SPACE 2
         LA    R1,PARMLIST    BUILD DYNAMIC ALLOCATION PARAMETER LIST
         USING DAPL,R1
         SPACE
         MVC   DAPLUPT,ADDRUPT
         MVC   DAPLECT,ADDRECT
         MVC   DAPLPSCB,ADDRPSCB
         SPACE
         LA    R0,ATTNECB
         MVI   ATTNECB,0
         ST    R0,DAPLECB
         SPACE
         LA    R0,DAIRBLK
         ST    R0,DAPLDAPB
         SPACE 2
         L     R15,ADDRDAIR
         BALR  R14,R15
         SPACE 2
         L     R14,R14SAVE    RESTORE LINKAGE REGISTER
         BR    R14            EXIT
         EJECT
NOTALLOC DS    0H
         TM    FLAGS,FPATTERN PATTERN REQUEST?
         BO    EXITRLSE       YES, EXIT W/O A MESSAGE
         SPACE 2
         LA    R14,MAXDAIR
         CR    R15,R14        CHECK DAIR RETURN CODE
         BH    DAIRBAD        VERY BAD ERROR
         SPACE 3
         B     *(R15)         DAIR ERROR PROCESSING
         B     DAIRBAD        RC=04 INVALID DAIR PARAMETERS
         B     DAIRCAM        RC=08 ERROR IN CATALOG MANAGEMENT
         B     DAIRDYN        RC=12 ERROR IN DYNAMIC ALLOCATION
         B     DAIRFULL       RC=16 NO SPACE IN TIOT
MAXDAIR  EQU   16
         SPACE 3
DAIRFULL LA    R1,MSGFULL     ERROR MSG
         LA    R0,MSGFULL1    SECOND LEVEL MSG
         OI    FLAGS,FNORETRY
         B     ALLOCERR
         EJECT
*
*        PROCESS ERRORS FROM CATALOG MANAGEMENT
*
         SPACE 2
DAIRCAM  DS    0H
         LA    R1,DAIRBLK
         USING DAPB08,R1
         SPACE
         LH    R15,DA08CTRC   GET CAM RETURN CODE
         LA    R14,MAXCAMCD   MAX CAM ERROR CODE
         CR    R15,R14
         BH    DAIRCAMX       IF DISASTER ERROR CODE
         SPACE
         B     *(R15)         PROCESS ERROR CODE
         B     CAMERR4        04 - REQUIRED VOLUME NOT MOUNTED
         B     CAMERR8        08 - INCONSISTENT CATALOG STRUCTURE
         B     CAMERR12       12 -     ''          ''       ''
         B     CAMERR16       16
         B     CAMERR20       20
MAXCAMCD EQU   20
         SPACE 3
CAMERR4  LA    R1,MSGVOL      LAST PART OF 1ST LEVEL MSG
CAMERROR SR    R0,R0          NO SECOND LEVEL MSG
         B     ALLOCERR       PUT OUT ERROR MSG
         SPACE 2
CAMERR8  DS    0H
         LA    R1,MSGNOCAT    MSG 'DATA SET NOT CATALOGED'
         B     CAMERROR
CAMERR16 DS    0H
CAMERR12 LA    R1,MSGINDEX    MSG 'INCONSISTENT CATALOG STRUCTURE'
         LA    R0,MSGDSFMT
         SPACE
         B     ALLOCERR
         SPACE 2
CAMERR20 DS    0H
         SPACE
         LA    R1,MSGSYNTX    MSG 'INVALID DSNAME SYNTAX'
         LA    R0,MSGDSN
         B     ALLOCERR
         SPACE 3
DAIRCAMX DS    0H
         LH    R1,MSGCATER    LEN OF ERROR MSG
         SPACE
         MVC   MSGTEXT2(0),MSGCATER
         EX    R1,*-6
         SPACE
         LA    R1,MSGTEXT2(R1)
         CVD   R15,DOUBLE
         OI    DOUBLE+7,X'0F'
         UNPK  0(2,R1),DOUBLE
         LA    R1,2(R1)
         LA    R0,MSGTEXT2
         SR    R1,R0
         SLL   R1,16
         ST    R1,MSGTEXT2
         SPACE 2
         SR    R1,R1
         B     ALLOCERR
         EJECT
*
*        PROCESS ERRORS FROM DYNAMIC ALLOCATION
*
         SPACE 3
DAIRDYN  DS    0H
         LA    R1,DAIRBLK
         USING DAPB08,R1
         LH    R15,DA08DARC   RETURN CODE FROM DYNAMIC ALLOCATION
         SPACE
         LA    R14,DYNMSGS    START OF MSG LOOKUP TABLE
         LA    R1,DYNMSGE     LAST MSG IN TABLE
         SPACE 2
DAIRDYN1 CH    R15,0(R14)     THIS ERROR CODE?
         BE    DAIRDYN2       YES
         SPACE
         TM    2(R14),X'80'   IS SECOND LEVEL MSG THERE?
         LA    R0,6           LENGTH FOR SINGLE MSG
         BZ    DAIRDYN3       NO
         LA    R0,10          LENGTH FOR 2 MSG LEVELS
         SPACE 2
DAIRDYN3 BXLE  R14,R0,DAIRDYN1
         SPACE 2
DAIRBAD  DS    0H
         SR    R1,R1          DEFAULT TO FIRST LEVEL MSG
DAIRFAIL DS    0H
         LH    R14,MSGDYNER
         MVC   MSGTEXT2(0),MSGDYNER
         EX    R14,*-6        CREATE MSG - DYNAMIC ALLOCATION FAILURE
         STH   R15,DOUBLE
         LA    R14,MSGTEXT2(R14)
         UNPK  0(5,R14),DOUBLE(3)
         TR    0(4,R14),TRTABLE
         LA    R0,MSGTEXT2-4
         SR    R14,R0
         SLL   R14,16
         ST    R14,MSGTEXT2
         LA    R0,MSGTEXT2
         B     ALLOCERR
         SPACE 3
DAIRDYN2 MVC   DOUBLE(8),2(R14) MOVE ADDR OF ERROR MSGS
         L     R1,DOUBLE      ADDR OF FIRST LEVEL MSG
         SR    R0,R0          DEFAULT - NO LEVEL 2 MSG
         LTR   R1,R1          ANY SECOND LEVEL?
         LA    R1,0(R1)       FIRST LEVEL MSG ADDR
         BNM   DAIRDYN4       ONLY LEVEL 1
         L     R0,DOUBLE+4    SECOND LEVEL MSG
DAIRDYN4 B     ALLOCERR
         SPACE 3
DYNMSGS  DS    0H
         DC    X'020C',X'80',AL3(MSG20C),AL4(MSG20CX)
         DC    X'0210',X'80',AL3(MSG210),AL4(MSG210X)
         DC    X'0214',X'80',AL3(MSG214),AL4(MSG214X)
         DC    X'0218',X'80',AL3(MSG218),AL4(MSG218X)
         DC    X'021C',X'80',AL3(MSG21C),AL4(MSG21CX)
         DC    X'0334',X'00',AL3(MSG334)
         DC    X'041C',X'80',AL3(0),AL4(MSG41CX)
DYNMSGE  EQU   *
         DC    X'6708',X'00',AL3(MSG6708)
         EJECT
*
*
*        ALLOCATION ERROR MESSAGE SUBROUTINE
*
*
         SPACE 3
ALLOCERR DS    0H
         LA    R15,MSGTEXT1+4 MESSAGE BUFFER
         MVC   0(L'MSG1,R15),MSG1 MOVE 'DATA SET ' MSG TO BUFFER
         LH    R14,DSNLEN     LENGTH OF DSNAME
         LA    R15,L'MSG1(R15)
         SPACE
         MVC   0(0,R15),DSNAME
         EX    R14,*-6        MOVE DSNAME TO BUFFER
         AR    R15,R14
         SPACE 2
         MVC   0(L'MSG3,R15),MSG3 MOVE ' NOT ALLOCATED, ' MSG TO BUFFER
         LA    R15,L'MSG3(R15)
         SPACE 2
         LTR   R1,R1          DEFAULT FIRST LEVEL MSG?
         BNZ   ALOCERR4       NO
         SPACE
         LA    R1,MSG4        YES
         SPACE
ALOCERR4 LH    R14,0(R1)      GET MSG LEN + 4
         SPACE
         MVC   0(0,R15),4(R1)
         EX    R14,*-6
         AR    R15,R14
         LA    R14,MSGTEXT1+4
         SR    R15,R14
         SLL   R15,16
         ST    R15,MSGTEXT1   STORE MESSAGE LENGTH
         SPACE
         LA    R1,MSGTEXT1
ALLOCBAD DS    0H
         BAL   R14,ERRORMSG   ISSUE THE ERROR MESSAGE
         SPACE
         TM    FLAGS,FNORETRY
         BO    EXIT12
         SPACE 2
         B     EXITRLSE       FOR ANOTHER DATA SET
         EJECT
ERRORMSG DS    0H
         ST    R14,R14SAVE    SAVE LINKAGE REGISTER
         SPACE
         LTR   R0,R0          SECOND LEVEL MSG?
         BZ    ERRORM1        NO
         SPACE
         MVC   MSGTEXT1,0(R1) INSURE MSG IN WORK AREA
         LA    R1,MSGTEXT1
         SPACE
         LH    R14,0(R1)      LENGTH OF FIRST LEVEL MSG
         LA    R15,0(R14,R1)  ADDR OF END OF MSG
         LA    R14,1(R14)     JUMP MSG LENGTH
         STH   R14,0(R1)
         MVI   0(R15),C'+'    INDICATE SECOND LEVEL MSG EXISTS
         SPACE 2
         SR    R14,R14        CLEAR CHAIN FIELD
         LA    R15,1          ONE SEGMENT IN 2ND MSG
         STM   R14,R0,PUTOLD2 CREATE SECOND-LEVEL
*                             OUTPUT LINE DESCRIPTOR ('OLD')
         LA    R0,PUTOLD2
         SPACE 3
ERRORM1  LR    R14,R0         NEXT 'OLD' ADDR OR ZERO
         LA    R15,1          ONE SEGMENT
         LR    R0,R1          MSG ADDR
         STM   R14,R0,PUTOLD1 FIRST LEVEL 'OLD'
         SPACE
         LA    R1,PARMLIST
         USING IOPL,R1
         SPACE
         MVC   IOPLECT,ADDRECT
         MVC   IOPLUPT,ADDRUPT
         SPACE
         LA    R0,ATTNECB
         ST    R0,IOPLECB
         MVI   ATTNECB,0
         SPACE 3
         L     R15,ADDRPUTL
         XC    PARMLIST+16(4),PARMLIST+16
         PUTLINE PARM=PARMLIST+16,ENTRY=(15),MF=(E,(1)),               X
               OUTPUT=(PUTOLD1,TERM,MULTLVL,INFOR)
         SPACE 3
         L     R14,R14SAVE
         BR    R14
         EJECT
*
*
*        P A R S E   C O N T R O L   L I S T
*
*
         SPACE 3
         PRINT NOGEN
PCLMAIN  IKJPARM DSECT=PDL
         SPACE 2
OPTDSN   IKJPOSIT DSTHING,LIST,VALIDCK=VERDSN,                         $
               PROMPT='DATASET NAME',                                  $
               HELP=('NAMES OF THE DATA SETS TO BE PROCESSED')
         SPACE 2
OPTVOL   IKJKEYWD
         IKJNAME 'VOLUME',SUBFLD=$VOLUME
         SPACE 2
OPTSPACE IKJKEYWD
         IKJNAME 'SPACE',SUBFLD=$SAVE
         IKJNAME 'LEAVE',SUBFLD=$SAVE
         IKJNAME 'KEEP',SUBFLD=$SAVE
         IKJNAME 'SAVE',SUBFLD=$SAVE
         SPACE 2
$VOLUME  IKJSUBF
OPTSER   IKJIDENT 'VOLUME NAME',VALIDCK=VERVOL,                        $
               HELP=('NAME OF THE VOLUME ON WHICH THE DATA SET(S) RESID$
               E.','ALL DATA SETS MUST RESIDE ON THIS VOLUME.'),       $
               FIRST=ALPHANUM,OTHER=ALPHANUM,MAXLNTH=6
         SPACE 2
$SAVE    IKJSUBF
OPTSAVE  IKJIDENT 'SPACE VALUE',VALIDCK=VERSAVE,                       $
               HELP=('AMOUNT OF FREE SPACE TO BE RETAINED IN THE DATA S$
               SET(S).'),                                              $
               FIRST=NUMERIC,OTHER=NUMERIC,MAXLNTH=4
         SPACE 2
         IKJENDP
         SPACE 2
         PRINT GEN
         EJECT
*
*
*        CONSTANTS
*
*
         SPACE 2
CVT      EQU   16
CVTPCNVT EQU   28
CVTPRLTV EQU   32
         SPACE
DEBAMLNG EQU   4
DEBNMEXT EQU   16
DEBDVMOD EQU   32
         SPACE 2
         PRINT NOGEN
         DS    0F
CORESIZE DC    AL1(1),AL3(LENWORK)
         SPACE
ADDRPCL  DC    A(PCLMAIN)     ADDR OF MAIN PARSE CONTROL LIST
         SPACE 3
DSATADDR DC    V(DSAT2)       ADDRESS OF DSAT ROUTINE
DSAT     DC    C'DSATNP'      DSAT FUNCTION COMMAND (PRINT/NOPRINT)
TRIMNP   DC    C'TRIMNP'      TRIM BUT DONT PRINT COMMAND
IKJDAIR  DC    CL8'IKJDAIR'   DYNAMIC ALLOCATION INTERFACE ROUTINE
IKJPUTL  DC    CL8'IKJPUTL'   PUTLINE SERVICE ROUTINE
IKJPARS  DC    CL8'IKJPARS'   PARSE SERVICE ROUTINE
IKJEHCIR DC    CL8'IKJEHCIR'
         SPACE 2
TRTABLE  EQU   *-X'F0'
         DC    C'0123456789ABCDEF'
         SPACE 3
H44      DC    H'44'
H1       DC    H'1'
X04      DC    X'04'
BLANX    DC    CL44' '
         DS    0F
CIRUWAL  DC    AL4(L'CIRUWA)
CTGWKASZ DC    AL4(CTGWKAE-CIRPARM)
DUMMYDCB DCB   DDNAME=X,DSORG=PS,MACRF=W
LDCB     EQU   *-DUMMYDCB
         EJECT
*
*        PROGRAM MESSAGES
*
         SPACE 2
         PRINT NOGEN
         SPACE
MSGVOL   MSG   'REQUIRED VOLUME NOT MOUNTED'
MSGNOCAT MSG   'DATA SET IS NOT CATALOGED'
MSGINDEX MSG   'INCONSISTENT CATALOG STRUCTURE'
MSGSYNTX MSG   ' INVALID SYNTAX IN DATA SET NAME'
MSGCATER MSG   ' CATALOG MANAGEMENT ERROR CODE '
MSGDSFMT MSG   ' A DATA SET NAME ALREADY EXISTS AT A LOWER LEVEL'
MSGDSN   MSG   ' AN INDEX OF THE DATA SET NAME EXCEEDS 8 CHARACTERS'
MSG20C   MSG   'DATA SET IN USE'
MSG20CX  MSG   ' DATA SET IS BEING USED BY ANOTHER USER OR A BACKGROUND$
                JOB'
MSG210   EQU   MSG20C
MSG210X  EQU   MSG20CX
MSG214   MSG   'VOLUME NOT AVAILABLE'
MSG214X  MSG   ' NO UNIT AVAILABLE TO MOUNT VOLUME CONTAINING DATA SET'
MSG218   EQU   MSG214
MSG218X  EQU   MSG214X
MSG21C   EQU   MSG214
MSG21CX  MSG   ' INCORRECT UNIT INFORMATION IN USER ATTRIBUTES'
MSG334   MSG   'NAME EXCEEDS 44 CHARACTERS'
MSG41CX  MSG   ' DATA SET IS ON MORE THAN ONE VOLUME'
MSG6708  MSG   'DATA SET NOT ON VOLUME'
MSGDYNER MSG   ' DYNAMIC ALLOCATION ERROR CODE '
MSGFULL  MSG   'TOO MANY DATA SETS'
MSGFULL1 MSG   ' FREE DATA SETS NO LONGER REQUIRED'
MSGCMDER MSG   ' COMMAND SYSTEM ERROR'
MSGNRLSE MSG   ' RELEASE BYPASSED FOR DATA SET '
MSGSPACE MSG   ' NO EMPTY SPACE IN DATA SET '
MSGNOPAT MSG   ' NO DATA SETS FOUND MATCHING PATTERN NAME '
MSGDSERR MSG   ' INVALID DATA SET NAME, '
MSG4     MSG   'SYSTEM ERROR'
MSG2MANY MSG   ' TOO MANY DATASETS MATCHING REQUESTED PATTERN - PARTIALX
                DISPLAY FOLLOWS '
MSG1     DC    C' DATA SET '
MSG3     DC    C' NOT ALLOCATED, '
MSGPARSE DC    C' PARSE ERROR CODE '
MSGTRACK DC    C' TRACK'
MSGRLSED DC    C' RELEASED FROM DATA SET '
MSGTRKS  DC    C' TOTAL TRACKS IN REQUESTED DATASETS'
         EJECT
*
*        DYNAMIC WORK AREA
*
         SPACE 3
WORKAREA DSECT
MAINSAVE DS    18A
         SPACE
VALSAVE  DS    18A
         SPACE
PARSELST DS    5A             AREA FOR PARSE PARAMETER LIST
         SPACE
R14SAVE  DS    A
R14RLSE  DS    A
         SPACE
BASES    DS    2A             PROGRAM BASE ADDRESSES
         SPACE
ADDRUPT  DS    A
ADDRECT  DS    A
ADDRPSCB DS    A
ADDRCBUF DS    A
         SPACE
ADDRDAIR DS    A              ADDR OF IKJDAIR
ADDRPUTL DS    A              ADDR OF IKJPUTL
ADDRCIR  DS    A              ADDRESS OF IKJEHCIR
         SPACE
ADDRANSR DS    A
ADDREXIT DS    A
ADDRWA   DS    A                  SAVE ADDR OF USER WORK AREA'
R3SAVE   DS    A                  SAVE R3
         SPACE
ATTNECB  DS    F
         SPACE
CIRPARMS DS    0A
PARMLIST DS    7A
         SPACE 2
DOUBLE   DS    D
         SPACE 2
VOLUME   DS    CL6
         SPACE 2
DDNAME   DS    CL8
PASSWORD DS    CL8
FDADSV   DS    CL8
         SPACE
FLAGS    DS    XL2            GENERAL STATUS FLAGS
FNORETRY EQU   X'80'          TERMINATE PROCESSING
FPARTIAL EQU   X'40'           'PARTIAL' RELEASE REQUEST
FNOPRINT EQU   X'20'          NOPRINT OPTION
FDSAT    EQU   X'10'          REQUESTED DSAT FUNCTION
FALLDS   EQU   X'08'          ALL DATASETS REQUESTED BY USER
FPATTERN EQU   X'04'
FQUOTED  EQU   X'02'          DATA SET NAME IN QUOTES
FMATCH   EQU   X'01'
         SPACE 3
DAIRBLK  DS    25D            SPACE FOR DAIR PARAMETER LIST
LDAIRBLK EQU   *-DAIRBLK
         SPACE 3
CVOL     DS    CL6
         DS    X
TTR      DS    XL3,X
BLOCKPTR DS    A
         DS    X
PATTERN  DS    CL44
         DS    0F
MSGTEXT1 DS    XL124
MSGTEXT2 DS    XL124
         SPACE 3
PUTOLD1  DS    3F
PUTOLD2  DS    3F
         SPACE 3
         DS    0F
TOTTRAKS DS    F
SIZEFREE DS    H
SIZEDS   DS    H
SIZESAVE DS    H
DSNLEN   DS    H
DSNAME   DS    0CL44
JFCB     DS    XL176
         ORG   JFCB+52
JFCBTSDM DS    X
         ORG   JFCB+86
JFCBIND1 DS    X
JFCBIND2 DS    X
         ORG
         SPACE 2
REALDCB  DCB   DDNAME=X,DSORG=PS,MACRF=W
RLSEDCB  DCB   DDNAME=X,DSORG=PS,MACRF=W
EXLST    DS    F
OPENLIST DS    F
         SPACE 2
MAXINDEX EQU   22
INDEXCNT DS    H
INDXLIST DS    (MAXINDEX)XL10
LINDXLST EQU   *-INDXLIST
         SPACE 2
         DS    0D
BUFFER   DS    XL265
         DS    0D
CYLTRK   DS    F                        CYLINDER/TRACK DIFF UP-LOW LIM
TRKS     DS    F'19'                    TRACKS PER CYLINDER
NAMLNG   DS    F'44'
ADDTRK   DS    F'0'                        TOTAL TRACKS IN DATASET
LSTTRK   DS    F                        LAST TRACK
XTRA     DS    CL5
DASET    DS    CL44                     DATASET NAME
VOL      DS    CL6                      VOLUME ID
DADSCB   DS    0D
         DS    265C                     DSCB WORK SPACE
CATBLK   CAMLST NAME,DASET,,DADSCB
DSDSCB   CAMLST SEARCH,DASET,VOL,DADSCB
DSCBX    CAMLST SEEK,XTRA,VOL,DADSCB
         DS    0D
LENWORK  EQU   *-WORKAREA
         PRINT GEN
         EJECT
         IKJPPL
         EJECT
         IKJIOPL
         EJECT
         IKJPSCB
         EJECT
         IKJUPT
         EJECT
         IKJECT
         EJECT
         IKJCPPL
         EJECT
         IKJDAPL
         EJECT
         IKJDAP00
         EJECT
         IKJDAP04
         EJECT
         IKJDAP08
         EJECT
         IKJDAP0C
         EJECT
         IKJDAP10
         EJECT
         IKJDAP14
         EJECT
         IKJDAP18
         EJECT
         IKJDAP1C
         EJECT
         IKJDAP24
         EJECT
         IKJDAP28
         EJECT
         IKJDAP2C
         EJECT
         IKJDAP30
         EJECT
         DCBD  DSORG=PS
         EJECT
CIRPARM  DSECT
CIROPT   DS    XL1
         DS    XL2              RESERVED
CIRLOCRC DS    XL1              LOCATE RETURN CODE
CIPSRCH  DS    A                A(SEARCH ARG.)
CIRCVOL  DS    A                A(CVOL VOLSER)
CIRWA    DS    A                A(USER WORK AREA)
CIRSAVE  DS    A                A(USER SUPPLIED SAVE AREA)
CIRPSWD  DS    A                A(PASSWORD)
CIRPARML EQU   *-CIRPARM
CIRUSA   DS    CL72             USER SAVE AREA
CIRUWA   DS    CL(CIRPARML+L'CIRUSA+(361*45))  ALLOW UP TO 361 DSETS
CTGWKAE  DS    0H               SIZE FOR GET/FREEMAIN
         END
