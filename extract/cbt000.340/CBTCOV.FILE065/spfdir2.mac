         TITLE 'SPFDIR:     SPF DIRECTORY IN LAST MODIFIED FORMAT'
         MACRO
&LABEL   READIN &BUFFER=,&DCB=,&LENGTH
         LCLC   &LENATRB
         LCLA   &INDEX
&INDEX   SETA   &SYSNDX
         AIF   ('&LENGTH' EQ '').BUFLEN
&LABEL   READ  READ&INDEX,SF,&DCB,&BUFFER,&LENGTH
         WAIT  1,ECB=READ&INDEX
.* &LABEL   GET   &DCB,&BUFFER
         MEXIT
.BUFLEN  ANOP
&LENATRB SETC  'L'''
&LABEL   READ   READ&INDEX,SF,&DCB,&BUFFER,&LENATRB&BUFFER
         WAIT  1,ECB=READ&INDEX
.* &LABEL   GET   &DCB,&BUFFER
         MEND
         PRINT NOGEN
         REGS
SPFDIR   STM   R14,R12,12(R13)   SAVE REGS
         LR    R12,R15
         USING SPFDIR,R12
         ST    R13,E15SAVE+4               /* READY TO CHAIN SAVES   */
         LR    R2,R13                      /* PL/I DSA               */
         LA    R13,E15SAVE                 /* POINT TO OUR SAVE      */
         ST    R13,8(R2)                   /* CHAIN OUR SAVE         */
         USING PDS#DIR,R9
         USING IHADCB,R4
         L     R11,0(R1)                   /* GET USERS DATA AREA    */
         LA    R4,PDS0001
         L     R6,=F'-1'           - NO NAME IF NEGATIVE 1
         CLI   E15SW,X'00'
         BNE   SKIP#1                OPEN OUTPUT CARDS
         BAL   R7,$OPEN
         MVI   E15SW,X'FF'
         B     READDIR
SKIP#1   L     R8,E15R8
         L     R5,E15R5
         L     R9,E15R9
         LA    R5,PDS#MNLN(R5)     - ADD ON THE MINUMUM LENGTH
         AR    R9,R5               POINT TO NEXT MEMBER
         SR    R8,R5               DECREMENT LENGTH
         BP    FRMT
READDIR  READIN BUFFER=PDSLST,DCB=PDS0001,256
         LA    R9,PDSLST+2         1ST DIRECTORY RECORD ELEMENT
         LH    R8,PDSLST           DIRECTORY RECORD LENGTH
         BCTR  R8,R0               DECREMENT BY 2
         BCTR  R8,R0
         SPACE
FRMT     DS    0H
         XR    R4,R4
         IC    R4,PD#FLAGS         OBTAIN FLAGS
         IC    R5,PD#HLFLN         OBTAIN HALF THE LENGTH
         N     R5,=F'15'           - MASK OFF THE HALF LENGTH
         LR    R2,R5               SAVE IT
         AR    R5,R5               - LENGTH
         C     R6,PD#MEMBR         ??? IS THERE A NAME ???
         BE    $FINISH             - NO NAME !
         MVC   DISPLAY+1(79),DISPLAY CLEAR DISPLAY
         MVC   D#NAME(8),PD#MEMBR  MOVE MEMBER NAME TO DISPLAY
         SPACE
         LA    R0,PM#ALIAS         CHECK FOR ALIAS
         NR    R0,R4
         BZ    NOTALIAS
         MVC   D#VER(5),=C'ALIAS'
         B     PUTOUT
NOTALIAS DS    0H
         LTR   R5,R5               NO DATA
         BZ    PUTOUT
         CH    R2,=H'15'           IF IT'S LESS THEN NOT SPF STATS
         BNE   PUTOUT
         LA    R0,PM#NODTA         CHECK FOR SOME DATA
         NR    R0,R4
         BNZ   PUTOUT              - NO MORE DATA, PRINT IT
         SPACE
         MVC   D#USRID(8),PD#ID    MOVE USER ID INTO DISPLAY
         SPACE
         MVC   DBLWRD+4(4),PD#CRTDT CONVERT JULIAN PACKED TO
         BAL   R7,$DATECVT
         MVC   D#CREATE(8),DATE
         SPACE
         MVC   DBLWRD+4(4),PD#MODDT CONVERT JULIAN PACKED TO
         BAL   R7,$DATECVT
         MVC   D#MODDT(8),DATE
         SPACE
         IC    R0,PD#MODTM         MODIFICATION TIME (HOURS)
         STH   R0,TIMEOUT          - CONVERT IT TO PACKED DECIMAL
         UNPK  D#MODTM(3),TIMEOUT+1(2) - ZONED DECIMAL
         MVI   D#MODTM+2,C':'      - FIX THE ZONE
         IC    R0,PD#MODTM+1       MODIFICATION TIME (MINUTES)
         STH   R0,TIMEOUT          - CONVERT IT TO PACKED DECIMAL
         UNPK  D#MODTM+3(3),TIMEOUT+1(2) - ZONED DECIMAL
         MVI   D#MODTM+5,C' '      - FIX THE ZONE
         SPACE
         XR    R0,R0
         IC    R0,PD#MODF          MODIFICATIONS
         CVD   R0,DBLWRD           - CONVERT IT TO PACKED DECIMAL
         MVC   TEMP(4),=X'40212020'
         ED    TEMP(4),DBLWRD+6
         MVC   D#MOD(2),TEMP+2
         SPACE
         IC    R0,PD#VRSN          VERSION
         CVD   R0,DBLWRD           - CONVERT IT TO PACKED DECIMAL
         MVC   TEMP(4),=X'40212020'
         ED    TEMP(4),DBLWRD+6
         MVC   D#VER(2),TEMP+2
         MVI   D#VER+2,C'.'        - PUT IN A PERIOD
         SPACE
         LH    R0,PD#SIZE          SIZE
         CVD   R0,DBLWRD           - CONVERT IT TO PACKED DECIMAL
         MVC   TEMP1(6),=X'402020202120'
         ED    TEMP1(6),DBLWRD+5
         MVC   D#SIZE(5),TEMP1+1
         SPACE
         LH    R0,PD#INTSZ         INITIAL SIZE
         CVD   R0,DBLWRD           - CONVERT IT TO PACKED DECIMAL
         UNPK  D#INITSZ(3),DBLWRD+6(2) - ZONED DECIMAL
         MVC   TEMP1(6),=X'402020202120'
         ED    TEMP1(6),DBLWRD+5
         MVC   D#INITSZ(5),TEMP1+1
         SPACE
         LH    R0,PD#MODS          NUMBER OF MODIFICATIONS
         CVD   R0,DBLWRD           - CONVERT IT TO PACKED DECIMAL
         MVC   TEMP(4),=X'40202120'
         ED    TEMP(4),DBLWRD+6
         MVC   D#MODCNT(3),TEMP+1
PUTOUT   DS    0H
         ST    R8,E15R8
         ST    R5,E15R5
         ST    R9,E15R9
         MVC   0(80,R11),DISPLAY    /* SEND A LINE BACK TO THE USER */
         B     EXITE15
$FINISH  DS    0H
ENDOFDTA EQU   *
         BAL   R7,$CLOSE
         MVC   DISPLAY+1(79),DISPLAY CLEAR DISPLAY
         MVC   D#NAME(8),=C'**END** '
         MVC   0(80,R11),DISPLAY
EXITE15  DS    0H
         L     R13,E15SAVE+4      /* RESTORE CALLERS DSA           */
         ST    R1,24(R13)         /* ZEROIZE R1                    */
         L     R14,12(R13)        /* RESTORE R14                   */
         LM    R0,R12,20(R13)     /* RESTORE CALLERS REGS          */
         BR    14                 /* BACK TO CALLER                */
$DATECVT DS    0H
         XR    R2,R2
         ST    R2,DBLWRD
         CVB   R3,DBLWRD           JULIAN DATE IN R3
         D     R2,=F'1000'         ISOLATE THE NMBR OF DAYS FROM YEAR
         C     R2,=F'62'           ??? DOES DAY NEED AJUSTING ???
         BL    D$NOADJ             - NO, ITS OK.
         LA    R2,1(,R2)           - YES, INCREMENT BY ONE.
         LA    R0,3                ??? IS THE YEAR A LEAP YEAR ???
         NR    R0,R3               - TEST LOW ORDER BITS
         BZ    D$NOADJ             - YES, THIS IS A LEAP YEAR
         LA    R2,1(,R2)           - NO, ADJUST DAY SOME MORE.
D$NOADJ  DS    0H
         LR    R10,R3              R10 : YEAR
         LR    R3,R2               R3  : DAY OF THE YEAR (ADJUSTED)
         XR    R2,R2               R2  : WILL HAVE MONTH AFTER ARITH.
         SLL   R3,8                CONVERT DAY OF YEAR TO DAY OF MONTH
         S     R3,=F'129'
         D     R2,=F'7821'         ... AND MONTH.
         LA    R3,1(,R3)           MAKE MONTH RELATIVE TO ONE
         SRL   R2,8                ADJUST DAY
         LA    R2,1(,R2)           MAKE DAY RELATIVE TO ONE
         SPACE
         CVD   R10,DBLWRD          OK HAVE THE YEAR, CONVERT TO EBCDIC
         UNPK  DATE(2),DBLWRD+6(2) , UNPACKED YEAR
         OI    DATE+1,C'0'         , FIX ZONE.
         MVI   DATE+2,C'/'         , PUT IN SLASH
         SPACE
         CVD   R3,DBLWRD           OK HAVE THE MONTH, CNVRT TO EBCDIC
         UNPK  DATE+3(2),DBLWRD+6(2) , UNPACKED MONTH
         OI    DATE+4,C'0'         , FIX ZONE.
         MVI   DATE+5,C'/'         , PUT IN SLASH
         SPACE
         CVD   R2,DBLWRD           OK HAVE THE DAY, CNVRT TO EBCDIC
         UNPK  DATE+6(2),DBLWRD+6(2) , UNPACKED DAY
         OI    DATE+7,C'0'         , FIX ZONE.
         SPACE
         BR    R7
$OPEN    EQU   *
*        MSG   'CVTEST - TRY TO OPEN PDS0001 FILE ',ROUTCDE=11
         USING IHADCB,R4
         LA    R4,PDS0001          ADDRESS READ PDS0001 DCB
         OPEN  (PDS0001,(INPUT))      OPEN INPUT CARDS
         TM    DCBOFLGS,X'10'         ??? OPEN O.K. ???
         BNO   O$ERROR
         BOR   R7                     - YES RETURN
*                                     - NO, DROP INTO ERROR ROUT
O$ERROR  EQU   *
*        MSG   'CVTEST - OPEN FAILURE - ABENDING',ROUTCDE=11
         ABEND 4
         SPACE 2
         DS    0F                      EYE CATCH - ALIGN
         DC    CL08'$CLOSE'            EYE CATCH - DEFINITION
$CLOSE   EQU   *
         CLOSE (PDS0001)              CLOSE INPUT FILE
         BR    R7                     YES RETURN
         SPACE 2
HEX      DS    0H
         LA    R15,8               POSITION COUNTER FOR FORMAT AREA
HEX#LOOP LA    R1,X'0F'            MASK FOR LOW ORDER NIBBLE
         NR    R1,R0               -
         IC    R1,FRMTTBL(R1)      GET THE EBCDC VALUE FOR NIBBLE
         STC   R1,FRMTAREA-1(R15)  AND STORE IT IN FORMAT AREA
         SRL   R0,4                SHIFT THE REGISTER
         BCT   R15,HEX#LOOP
         BR    R7
         LTORG
         DS    0F
E15SAVE  DS    18F
E15R5    DC    F'0'
E15R8    DC    F'0'
E15R9    DC    F'0'
E15PARM  DC    F'0'
E15SW    DC    X'00'
         DS    0D
FRMTTBL  DC    CL16'0123456789ABCDEF'
FRMTAREA DS    CL08
DBLWRD   DS    D
         DS    0F
         SPACE
TEMP     DS    F
TEMP1    DS    CL6
* NAME   VER.MOD CREATED LAST MODIFIED    SIZE  INIT   MOD     ID
*    NAME             '
*   NNNNNNNN AAAAAA   '
*            VER.MOD  CREATED   LAST MODIFIED  SIZE  INIT   MOD   ID
*             VV.MM  YY/MM/DD  YY/MM/DD HH:MM NNNNN NNNNN   CCC UUUUUUU
TIMEOUT  DC    H'0',X'0F'
DATE     DC    C'YY/DD/MM'
ALIAS    DC    C'ALIAS '
DISPLAY  DC    C'  '
D#NAME   DC    CL09'MBMRNAME'
D#FLAGS  DC    C'ALIAS '
         DC    C'  '
D#VER    DC    C'VV.'
D#MOD    DC    C'MM '
         DC    C' '
D#CREATE DC    C'YY/DD/MM  '
D#MODDT  DC    C'YY/DD/MM '
D#MODTM  DC    C'HH:MM '               YY/DD/MM HH:MM
D#SIZE   DC    C'NNN   '
D#INITSZ DC    C'NNN   '
D#MODCNT DC    C'NNN   '
D#USRID  DC    C'        '
         DC    CL(80+*-DISPLAY)'  '
         DS    0F
PDS0001  DCB   DSORG=PS,                                               -
               DDNAME=PDS0001,                                         -
               MACRF=R,                                                -
               RECFM=U,                                                -
               LRECL=256,                                              -
               EODAD=ENDOFDTA
PDSLST   DS    CL256
PDS#DIR  DSECT
PD#MEMBR DS    CL08
         DS    1H
         DS    1X
PD#FLAGS DS    0X
PD#HLFLN DS    1X                  HALF THE LENGTH (LSN)
PM#ALIAS EQU   8*16                MASK: ALIAS
PM#NODTA EQU   2*16                MASK: NO DATA
PDS#MNLN EQU   *-PDS#DIR
PD#VRSN  DS    XL01
PD#MODF  DS    XL01
         DS    H
PD#CRTDT DS    PL04                DATE CREATED
PD#MODDT DS    PL04                DATE LAST MODIFIED
PD#MODTM DS    2XL01               TIME LAST MODIFIED
PD#SIZE  DS    H                   NUMBER OF RECORDS
PD#INTSZ DS    H                   INITIAL NUMBER OF RECORDS
PD#MODS  DS    H                   NUMBER OF MODIFICATIONS
PD#ID    DS    CL08                ID OF LAST USER
         DS    CL02
PDS#LN   EQU   *-PDS#DIR
         DCBD  DSORG=PS,DEVD=(RD,PR)
         SPACE 1
         LTORG
         END
