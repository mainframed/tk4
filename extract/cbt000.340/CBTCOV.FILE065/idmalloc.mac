IDMF     TITLE 'IDMALLOC - DYNALLOC ROUTINE'
         @     IDMALLOC
***********************************************************************
*/*                                                                  */
*/*      ========================================================    */
*/*       I D M F  -  INTERACTIVE DATA MANAGEMENT FACILITY           */
*/*      ========================================================    */
*/*                                                                  */
*/********************************************************************/
         EJECT
***********************************************************************
*                                                                     *
*                                                                     *
*                        IDMALLOC                                     *
*                                                                     *
* ABSTRACT:PERFORMS DATASET DYNAMIC ALLOCATION AND DEALLOCATION       *
*                                                                     *
* FUNCTION:
*                                                                     *
*                                                                     *
*           IDMALLOC RETURNS CONTROL TO ITS CALLER WITH A RETURN      *
*           CODE IN REGISTER 15.                                      *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
* INPUT: R1 --> .------------.                                        *
*               | A(DSNAME)  | - 44 BYTES DSNAME                      *
*               | A(VOL)     | - 6 BYTES VOLSER                       *
*               | A(OPTIONS) | - 4 BYTES OF OPTIONS                   *
*               | A(DDNAME)  | - 8 BYTES DD-NAME                      *
*               | A(UNITNAME)| - 8 BYTES UNIT NAME                    *
*               | A(DSORG)   | - 2 BYTES FIELD TO RETURN DSORG        *
*               | A(ERRMESSG)| - 256 BYTES FIELD TO RETURN ERR MSG    *
*               '------------'                                        *
*               BYTE 1-OPTIONS:  X'80' - DO NOT MOUNT VOLUME          *
*               BYTE 2-OPTIONS:  C'D'  - DEALLOCATE DATASET           *
*                                C'A'  - ALLOCATE DATASET             *
*                                C'U'  - MARK NOT IN USE              *
*                                C'C'  - CHANGE ATTRIBUTES            *
*               BYTE 3-OPTIONS:  X'01' - OLD STATUS                   *
*                                X'02' - MOD STATUS                   *
*                                X'04' - NEW STATUS                   *
*                                X'08' - SHR STATUS                   *
*                                                                     *
* IF DDNAME,PASSED TO THE PROGRAM, IS BLANK - DYNALOC GENERATES DDNAME*
* IF DDNAME,PASSED TO THE PROGRAM, IS NONBLANK - DYNALOC USES DDNAME. *
*                                                                     *
* RETURN CODES:R15=0 - SUCCESSFUL DATA SET ALLOCATION                 *
*                  4 - CAN NOT ALLOCATE                               *
*                                                                     *
*                                                                     *
*                                                                     *
*  REGISTERS:   R15- ENTRY ADDRESS & RETURN CODE                      *
*               R14- RETURN ADDRESS                                   *
*               R13- SAVE AREA ADDRESS AND DSECT FOR DYNAMIC CORE     *
*               R12- CSECT BASE                                       *
*               R11-                                                  *
*               R10- WORK REGISTER                                    *
*               R9 - DSECT BASE FOR DYNALLOC RPLS                     *
*               R8 - DSECT BASE FOR DYNALLOC RPLS;                    *
*               R7 - WORK REGISTER                                    *
*               R6 - WORK REGISTER                                    *
*               R5 -                                                  *
*               R4 -                                                  *
*               R3 -                                                  *
*               R2 -                                                  *
*               R1 - LIST PARAM ADDRESS                               *
*               R0 -                                                  *
***********************************************************************
         EJECT
***********************************************************************
*               IDMALLOC CODE                                         *
***********************************************************************
         SPACE 5
*                            ******************************************
*                            *     DSECTS  AREAS.                     *
*                            ******************************************
         SPACE 2
         IEFZB4D0
         EJECT
         IEFZB4D2
         EJECT
*                            ******************************************
*                            *  IDMALLOC CSECT INITIALIZATION.        *
*                            ******************************************
         SPACE 2
         INIT# IDMALLOC,BASEREG=(12),CODE=RENT,                        X
               EXEC=MAINLINE,REL=01.03.00,EXLIST=YES
         EJECT
         CPYRIGHT IDMF,1982                                           *
         EJECT
*                            ******************************************
*                            *  CONTROL TABLES AND FIELDS.            *
*                            ******************************************
         SPACE
*        BYTE 1-OPTIONS:     - USE TM/OI
IDMNWAIT EQU   X'80'              NOT WAIT FOR MOUNT BIT              *
*        BYTE 2-OPTIONS:     - USE CLI/MVI
IDMDEALL EQU   C'D'               DEALLOC DATASET                     *
IDMDOALL EQU   C'A'               ALLOCATE DATASET                    *
IDMCHALL EQU   C'C'               CHANGE ATTRIBUTES                   *
IDMNUALL EQU   C'U'               MARK NOT IN USE                     *
*
RPLSIZE  EQU   512                REQUEST PARM LIST SIZE FOR SVC 99
BLANK    EQU   C' '
OLDST    EQU   X'01'              OLD STATUS FOR SVC 99
MODST    EQU   X'02'              MOD STATUS
NEWST    EQU   X'04'              NEW STATUS
SHRST    EQU   X'08'              SHR STATUS
UNCTDISP EQU   X'01'              UNCATALOG DISP FOR SVC 99
CATLDISP EQU   X'02'              CATALOG DISP
DELEDISP EQU   X'04'              DELETE DISP
KEEPDISP EQU   X'08'              KEEP DISP
         SPACE 2
BLANK80  DC    CL80' '                                                *
         SPACE 2
BTABLE   DS    0F                 BLANK SEARCH TABLE
         DC    256X'00'
         ORG   BTABLE+C' '
         DC    X'FF'
         ORG
         SPACE 2
*                            ******************************************
*                            *    WORK FIELDS.                        *
*                            ******************************************
         SPACE
         DATA#                                                        *
SAVE1    DS    F                                                      *
DSORGADD DS    A                                                      *
VOLSRADD DS    A                                                      *
RPLIST   DS    CL(RPLSIZE)        RPL FOR SVC 99                      *
IDMALDSN DS    CL44
IDMVOLSR DS    CL6
IDMOPTIS DS    F                                                      *
IDMDDNAM DS    CL8                                                    *
IDMUNITN DS    CL8                                                    *
IDMDSORG DS    CL2                                                    *
         SPACE
         ENDDATA#                                                     *
         EJECT
*                            ******************************************
*                            * MAINLINE- MAIN ROUTINE OF THE IDMALLOC *
*                            ******************************************
         SPACE 2
         ENTRE# MAINLINE
         ST    R1,SAVE1                                               *
         L     R5,0(R1)           LOAD DSN ADDRESS FROM PARM LIST
         MVC   IDMALDSN,0(R5)     GET DSNAME                          *
         L     R5,4(R1)           LOAD VOL ADDRESS FROM PARM LIST
         MVC   IDMVOLSR,0(R5)     GET VOLSER                          *
         L     R5,8(R1)           LOAD OPT ADDRESS FROM PARM LIST
         MVC   IDMOPTIS,0(R5)     GET OPTIONS                         *
         L     R5,12(R1)          LOAD DDN ADDRESS FROM PARM LIST
         MVC   IDMDDNAM,0(R5)     GET DDNAME FIELD                    *
         L     R5,16(R1)          LOAD UNITNAME ADDR FROM PARM LIST
         MVC   IDMUNITN,0(R5)     GET UNITNAME FIELD                  *
         SPACE
         LA    R8,RPLIST          GET WORK AREA ADDRESS FOR SVC 99    *
         USING S99RBP,R8          ADDRESSABILITY FOR RBPTR DSECT
         LA    R9,S99RBPTR+4      ADDRESS OF CORE FOR RB
         ST    R9,S99RBPTR        MAKE RBPTR POINTS TO RB
         OI    S99RBPTR,S99RBPND  TURN ON HIGH-ORDER BIT OF RBPTR
         SPACE
         IF IDMOPTIS+1,EQ,IDMDEALL,CLI IF OPTION 'DEALLOC DSN'
            CALL# DEALLOC                 DEALLOCATE DATA SET
         ELSE                          ELSE
            IF IDMOPTIS+1,EQ,IDMDOALL,CLI IF OPTION 'ALLOCAT DSN'
               CALL# ALLOCDSN                ALLOCATE STANDARD DSN
            ELSE                                                      *
               IF IDMOPTIS+1,EQ,IDMCHALL,CLI IF OPTION 'CHANGE ATTR'
                  CALL# CHALLOC                                       *
               ELSE                                                   *
                  CALL# NUALLOC                                       *
               ENDIF                                                  *
            ENDIF                                                     *
         ENDIF                         ENDIF
         EXIT# RC=(15)
         EJECT
*                            ******************************************
*                            * ALLOCDSN - ALLOCATE DATASET            *
*                            ******************************************
         SPACE 2
         ENTRE# ALLOCDSN
         SPACE
         USING S99RB,R9           ADDRESSABILITY FOR RB DSECT
         XC    S99RB(S99RBEND-S99RB),S99RB  * ZERO OUT 'RB'
         MVI   S99RBLN,(S99RBEND-S99RB)     * PUT RB LENGTH
         MVI   S99VERB,S99VRBAL             * SET VERB CODE FOR ALLOC.
         IF IDMOPTIS,EQ,IDMNWAIT,TM     IF OPTION 'DO NOT WAIT'
            OI    S99FLAG1,S99NOMNT        SET BIT-DO NOT WAIT FOR VOL
         ENDIF                          ENDIF
         LA    R8,S99RBEND        ADDR OF CORE FOR TEXT UNIT PTR LIST
         USING S99TUPL,R8         ADDRESSABILITY FOR S99TUPL DSECT
         ST    R8,S99TXTPP        PUT ADDRESS OF TEXT UNIT P.LIST IN RB
         LA    R9,S99TUPL+48      ADDR OF CORE FOR FIRST TEXT UNIT
         USING S99TUNIT,R9        ADDRESSABILITY FOR TEXT UNIT DSECT
         ST    R9,S99TUPTR        PUT ADDR OF FIRST TEXT UNIT IN TUPL
*
*---------------------------------------------------------------------*
*        DSNAME UNIT SPECIFICATIONS                                   *
*---------------------------------------------------------------------*
         LA    R10,DALDSNAM       KEY IS DSNAME
         STH   R10,S99TUKEY       SET KEY IN TEXT UNIT
         LA    R10,1              NUMBER MUST BE 1 FOR DSNAME
         STH   R10,S99TUNUM       SET NUMBER IN TEXT UNIT
         LA    R10,L'IDMALDSN     ASSUME MAX LENGTH OF DSN
         TRT   IDMALDSN,BTABLE    LOOK FOR BLANK AT END OF SDSN
         IF NOTZERO               IF BLANK FOUND
            LA    R10,IDMALDSN       ADDRESS OF SDSN
            SR    R10,R1             LENGTH OF SDSN (NEGATIVE)
            LCR   R10,R10            CONVERT TO POZITIVE
         ENDIF                    ENDIF
         STH   R10,S99TULNG       SET SDSN LENGTH IN TEXT UNIT
         MVC   S99TUPAR(L'IDMALDSN),IDMALDSN   SET DSN IN TEXT UNIT
*
         LA    R8,S99TUPL+4       GET NEXT TEXT UNIT POINTER FIELD
         LA    R9,S99TUNIT+6+44+6 SKIP MORE THAN FIRST TUNIT LENGTH
         ST    R9,S99TUPTR        PUT ADDR OF 2-ND TEXT UNIT IN TUPL
*
*---------------------------------------------------------------------*
*        DISP=(XXX,KEEP,KEEP)                                         *
*---------------------------------------------------------------------*
         LA    R10,DALSTATS       KEY IS DATA SET STATUS
         STH   R10,S99TUKEY       SET KEY IN TEXT UNIT
         LA    R10,1              NUMBER AND LENGTH MUST BE 1
         STH   R10,S99TUNUM       SET NUMBER IN TEXT UNIT
         STH   R10,S99TULNG       SET LENGTH IN TEXT UNIT
         MVC   S99TUPAR(1),IDMOPTIS+2    MOVE STATUS IN TEXT UNIT
*
         LA    R8,S99TUPL+4       GET NEXT TEXT UNIT POINTER FIELD
         LA    R9,S99TUNIT+6+1+1  SKIP MORE THAN SECND TUNIT LENGTH
         ST    R9,S99TUPTR        PUT ADDR OF 3-RD TEXT UNIT IN TUPL
*
         LA    R10,DALNDISP       KEY IS DATA SET NORMAL DISP
         STH   R10,S99TUKEY       SET KEY IN TEXT UNIT
         LA    R10,1              NUMBER AND LENGTH MUST BE 1 FOR DISP
         STH   R10,S99TUNUM       SET NUMBER IN TEXT UNIT
         STH   R10,S99TULNG       SET LENGTH IN TEXT UNIT
         MVI   S99TUPAR,KEEPDISP  SET DISP 'KEEP' IN TEXT UNIT
*
         LA    R8,S99TUPL+4       GET NEXT TEXT UNIT POINTER FIELD
         LA    R9,S99TUNIT+6+1+1  SKIP MORE THAN THIRD TUNIT LENGTH
         ST    R9,S99TUPTR        PUT ADDR OF 4-TH TEXT UNIT IN TUPL
*
         LA    R10,DALCDISP       KEY IS DATA SET CONDIT DISP
         STH   R10,S99TUKEY       SET KEY IN TEXT UNIT
         LA    R10,1              NUMBER AND LENGTH MUST BE 1
         STH   R10,S99TUNUM       SET NUMBER IN TEXT UNIT
         STH   R10,S99TULNG       SET LENGTH IN TEXT UNIT
         MVI   S99TUPAR,KEEPDISP  SET DISP 'KEEP' IN TEXT UNIT
*
         LA    R8,S99TUPL+4       GET NEXT TEXT UNIT POINTER FIELD
         LA    R9,S99TUNIT+6+1+1  SKIP MORE THAN THIRD TUNIT LENGTH
         ST    R9,S99TUPTR        PUT ADDR OF 4-TH TEXT UNIT IN TUPL
*
*---------------------------------------------------------------------*
*        NEXT UNITS ARE VOLSER AND UNIT SPECIFICATIONS                *
*---------------------------------------------------------------------*
         IF IDMVOLSR,NE,BLANK80,CLC IF VOLSER SUPPLIED                *
            LA    R10,DALVLSER       KEY IS VOLSER SPECIFICATION
            STH   R10,S99TUKEY       SET KEY IN TEXT UNIT
            LA    R10,1              NUMBER=1 - WE USE ONLY 1 VOLUME
            STH   R10,S99TUNUM       SET NUMBER IN TEXT UNIT
            LA    R10,L'IDMVOLSR     VOLSER LENGTH = 6
            TRT   IDMVOLSR,BTABLE    LOOK FOR BLANK AT END OF VOLSER
            IF NOTZERO               IF BLANK FOUND
               LA    R10,IDMVOLSR       ADDRESS OF IDMVOLSR
               SR    R10,R1             LENGTH OF VOLS (NEGATIVE)
               LCR   R10,R10            CONVERT TO POZITIVE
            ENDIF                    ENDIF
            STH   R10,S99TULNG       SET LENGTH IN TEXT UNIT
            MVC   S99TUPAR(L'IDMVOLSR),IDMVOLSR    VOLSER TO TUNIT
*
            LA    R8,S99TUPL+4       GET NEXT TEXT UNIT POINTER FIELD
            LA    R9,S99TUNIT+6+6    SKIP MORE THAN PREV. TUNIT LENGTH
            ST    R9,S99TUPTR        PUT ADDR OF NEXT TEXT UNIT IN TUPL
*
            LA    R10,DALUNIT        KEY IS UNIT SPECIFICATION
            STH   R10,S99TUKEY       SET KEY IN TEXT UNIT
            LA    R10,1              NUMBER MUST BE 1 FOR UNIT
            STH   R10,S99TUNUM       SET NUMBER IN TEXT UNIT
            LA    R10,L'IDMUNITN     ASSUME MAX LENGTH OF UNIT NAME
            TRT   IDMUNITN,BTABLE    LOOK FOR BLANK AT END OF UNIT
            IF NOTZERO               IF BLANK FOUND
               LA    R10,IDMUNITN       ADDRESS OF IDMUNITN
               SR    R10,R1             LENGTH OF UNIT (NEGATIVE)
               LCR   R10,R10            CONVERT TO POZITIVE
            ENDIF                    ENDIF
            STH   R10,S99TULNG       SET UNIT LENGTH IN TEXT UNIT
            MVC   S99TUPAR(L'IDMUNITN),IDMUNITN  * SET UNIT IN TEXTUN.
*
            LA    R8,S99TUPL+4       GET NEXT TEXT UNIT POINTER FIELD
            LA    R9,S99TUNIT+6+8+2  SKIP MORE THAN PREV. TUNIT LENGTH
            ST    R9,S99TUPTR        PUT ADDR OF NEXT TEXT UNIT IN TUPL
         ENDIF
***********************************************************************
*        DSORG RETURN TEXT UNIT                                       *
***********************************************************************
*
         LA    R10,DALRTORG       KEY IS DSORG RETURN
         STH   R10,S99TUKEY       SET KEY IN TEXT UNIT
         LA    R10,1              NUMBER MUST BE 1 FOR DSORG RETURN
         STH   R10,S99TUNUM       SET NUMBER IN TEXT UNIT
         LA    R10,2              DSORG LENGTH = 2
         STH   R10,S99TULNG       SET LENGTH IN TEXT UNIT
         XC    S99TUPAR(2),S99TUPAR  * CLEAR DSORG IN TEXT UNIT
         LA    R10,S99TUPAR       GET ADDRESS OF DSORG PARAMETER
         ST    R10,DSORGADD       SAVE ADDRESS OF DSORG PARM
*
         LA    R8,S99TUPL+4       GET NEXT TEXT UNIT POINTER FIELD
         LA    R9,S99TUNIT+6+2    SKIP MORE THAN PREV. TUNIT LENGTH
         ST    R9,S99TUPTR        PUT ADDR OF NEXT TEXT UNIT IN TUPL
*
***********************************************************************
*        VOLSER RETURN  TEXT UNIT                                     *
***********************************************************************
*
         LA    R10,DALRTVOL       KEY IS VOLSR RETURN
         STH   R10,S99TUKEY       SET KEY IN TEXT UNIT
         LA    R10,1              NUMBER MUST BE 1 FOR VOLSR RETURN
         STH   R10,S99TUNUM       SET NUMBER IN TEXT UNIT
         LA    R10,6              VOLSR LENGTH = 6
         STH   R10,S99TULNG       SET LENGTH IN TEXT UNIT
         MVC   S99TUPAR(6),=CL6' '  * CLEAR VOLSR IN TEXT UNIT
         LA    R10,S99TUPAR       GET ADDRESS OF VOLSR PARAMETER
         ST    R10,VOLSRADD       SAVE ADDRESS OF VOLSR PARM
*
         LA    R8,S99TUPL+4       GET NEXT TEXT UNIT POINTER FIELD
         LA    R9,S99TUNIT+6+6    SKIP MORE THAN PREV. TUNIT LENGTH
         ST    R9,S99TUPTR        PUT ADDR OF NEXT TEXT UNIT IN TUPL
*
*---------------------------------------------------------------------*
*        DD-NAME TEXT UNIT IS LAST UNIT-EASY TO FETCH DD-NAME         *
*---------------------------------------------------------------------*
         OI    S99TUPTR,S99TUPLN  TURN ON HIGH ORDER BIT-LAST TUNIT
*
         IF IDMDDNAM,NE,BLANK80,CLC IF DDNAME SUPPLIED                *
            LA    R10,DALDDNAM       KEY IS DDNAME SPECIFICATION
            STH   R10,S99TUKEY       SET KEY IN TEXT UNIT
            LA    R10,1              NUMBER MUST BE 1 FOR UNIT
            STH   R10,S99TUNUM       SET NUMBER IN TEXT UNIT
            LA    R10,L'IDMDDNAM     ASSUME MAX LENGTH OF DD-NAME
            TRT   IDMDDNAM,BTABLE    LOOK FOR BLANK AT END OF DDNAME
            IF NOTZERO               IF BLANK FOUND
               LA    R10,IDMDDNAM       ADDRESS OF IDMDDNAM
               SR    R10,R1             LENGTH OF DDNAM(NEGATIVE)
               LCR   R10,R10            CONVERT TO POZITIVE
            ENDIF                    ENDIF
            STH   R10,S99TULNG       SET UNIT LENGTH IN TEXT UNIT
            MVC   S99TUPAR(L'IDMDDNAM),IDMDDNAM  * SET DD-N IN TEXTUN.
         ELSE                      DDNAME RETRIEVEL
            LA    R10,DALRTDDN       KEY IS DDNAME RETURN
            STH   R10,S99TUKEY       SET KEY IN TEXT UNIT
            LA    R10,1              NUMBER MUST BE 1 FOR DDN RETURN
            STH   R10,S99TUNUM       SET NUMBER IN TEXT UNIT
            LA    R10,8              DD-NAME LENGTH = 8
            STH   R10,S99TULNG       SET LENGTH IN TEXT UNIT
            MVC   S99TUPAR(8),=CL8' '   * CLEAR DD-NAME IN TEXT UNIT
         ENDIF
*---------------------------------------------------------------------*
*        TEXT UNITS ARE BUILT. NOW ALLOCATE DATA SET                  *
*---------------------------------------------------------------------*
         LA    R1,RPLIST          LOAD R1 BY PARMS ADDR FOR SVC 99
         DYNALLOC                 ALLOCATE DATA SET
         LR    RA,RF              SAVE RETURN CODE
         IF RF,NE,0,LTR           IF SVC 99 COULD NOT ALLOCATE
*           PREPARE ERROR INFO FOR MSG
*           RETURN MSG TO CALLER
         ELSE                     ELSE
            MVC   IDMDDNAM,S99TUPAR  MOVE DDNAME INTO IDMDDNAM
            L     R6,DSORGADD                                         *
            MVC   IDMDSORG,0(R6)                                      *
            L     R6,VOLSRADD                                         *
            MVC   IDMVOLSR,0(R6)                                      *
            L     R6,SAVE1                                            *
            L     R7,4(R6)                                            *
            MVC   0(L'IDMVOLSR,R7),IDMVOLSR                           *
            L     R7,12(R6)                                           *
            MVC   0(L'IDMDDNAM,R7),IDMDDNAM                           *
            L     R7,20(R6)                                           *
            MVC   0(L'IDMDSORG,R7),IDMDSORG                           *
         ENDIF                    ENDIF
         DROP  R8
         DROP  R9
         LR    RF,RA              RESET RETURN CODE
         SPACE
         EXIT# RC=(15)
         EJECT
*                            ******************************************
*                            * DEALLOC-DEALLOCATE DATA SET BY DD-NAME *
*                            ******************************************
         SPACE 2
         ENTRE# DEALLOC
         USING S99RB,R9           ADDRESSABILITY FOR RB DSECT
         XC    S99RB(S99RBEND-S99RB),S99RB  * ZERO OUT 'RB'
         MVI   S99RBLN,(S99RBEND-S99RB)     * PUT RB LENGTH
         MVI   S99VERB,S99VRBUN             * SET VERB CODE FOR DEALL.
         LA    R8,S99RBEND        ADDR OF CORE FOR TEXT UNIT PTR LIST
         USING S99TUPL,R8         ADDRESSABILITY FOR S99TUPL DSECT
         ST    R8,S99TXTPP        PUT ADDRESS OF TEXT UNIT P.LIST IN RB
         LA    R9,S99TUPL+48      ADDR OF CORE FOR FIRST TEXT UNIT
         USING S99TUNIT,R9        ADDRESSABILITY FOR TEXT UNIT DSECT
         ST    R9,S99TUPTR        PUT ADDR OF FIRST TEXT UNIT IN TUPL
*
*---------------------------------------------------------------------*
*        DDNAME UNIT SPECIFICATIONS                                   *
*---------------------------------------------------------------------*
         OI    S99TUPTR,S99TUPLN  TURN ON HIGH ORDER BIT-LAST TUNIT
*
         LA    R10,DUNDDNAM       KEY IS DDNAME
         STH   R10,S99TUKEY       SET KEY IN TEXT UNIT
         LA    R10,1              NUMBER MUST BE 1 FOR DDNAME
         STH   R10,S99TUNUM       SET NUMBER IN TEXT UNIT
         LA    R10,L'IDMDDNAM     ASSUME MAX LENGTH OF DDNAME
         TRT   IDMDDNAM,BTABLE    LOOK FOR BLANK AT END OF DD-NAME
         IF NOTZERO               IF BLANK FOUND
            LA    R10,IDMDDNAM       ADDRESS OF DD-NAME
            SR    R10,R1             LENGTH OF DD-N (NEGATIVE)
            LCR   R10,R10            CONVERT TO POZITIVE
         ENDIF                    ENDIF
         STH   R10,S99TULNG       SET DD-N LENGTH IN TEXT UNIT
         MVC   S99TUPAR(L'IDMDDNAM),IDMDDNAM   SET DDN IN TEXT UNIT
*
*---------------------------------------------------------------------*
*        TEXT UNITS ARE BUILT. NOW FREE DATA SET                      *
*---------------------------------------------------------------------*
         LA    R1,RPLIST          LOAD R1 BY PARMS ADDR FOR SVC 99
         DYNALLOC                 ALLOCATE DATA SET
         SPACE
         EXIT# RC=0
         EJECT
*                            ******************************************
*                            * CHALLOC-CHANGE ATTRIBUTES BY DD-NAME   *
*                            ******************************************
         SPACE 2
         ENTRE# CHALLOC
*
         SPACE
         EXIT# RC=0
         EJECT
*                            ******************************************
*                            * NUALLOC-MARK DATASET NOT IN USE        *
*                            ******************************************
         SPACE 2
         ENTRE# NUALLOC
*
         SPACE
         EXIT# RC=0
         EJECT
*                            ******************************************
*                            *     LITERALS                           *
*                            ******************************************
         SPACE
         LTORG
         SPACE 3
         END#  IDMALLOC
