***********************************************************************
*                                                                     *
*   FUNCTION -                                                        *
*                                                                     *
*     THIS PROGRAM READS AN ICF CATALOG AND PRODUCES A DATASET        *
*     WHICH WILL THEN ALLOW THE RELEVANT VOLUME CATALOG INFORMATION   *
*     TO BE SORTED REASONABLY ENABLING A MUCH MORE READABLE LISTING   *
*     TO BE OBTAINED INSTEAD OF IDCAMS.                               *
*                                                                     *
*     READ THE FIRST RECORD WITH A 44 BYTE KEY OF BINARY ZEROS        *
*     AND THEN CHANGE TO SEQUENTIAL PROCESSING-----WARNING :          *
*     IF YOU FIDDLE AROUND WITH THIS DO NOT FORGET TO TELL AMS        *
*     TO KEEP POSITIONING TRACK OTHERWISE YOU WILL GET THE SAME       *
*     RECORD OVER AND OVER AGAIN!!!!!!!!!!                            *
*                                                                     *
*     TO GET VSAM SPACE AND OTHER STATISTICS ANOTHER PROGRAM          *
*     WILL READ THE RELEVANT VVDS.  USE THIS PROGRAM AS AN AID        *
*     TO KEEP TRACK OF WHATS IN YOUR CATALOGS AND WHERE THE DATASETS  *
*     ARE LOCATED. USE THE OTHER PROGRAM FOR VSAM STATS.              *
*                                                                     *
*     WE MAY BE ABLE AT SOME FUTURE TIME TO ALSO INCLUDE CODE         *
*     FOR VSAM CATALOGS----IF YOU HAVE XA GET RID OF VSAM CATS        *
*     AS THEY ARE A NUISANCE --VSAM VOLUME OWNERSHIP ETC.             *
*                                                                     *
*     IF YOU HAVE DFEF OR MVS/370 DFP THE ABOVE ALSO APPLIES.         *
*                                                                     *
*     IN ORDER TO READ A CATALOG AS A DATASET                         *
*     AND BYPASS RACF AND/OR PASSWORD PROTECTION                      *
*     PROGRAM HAS TO BE IN SUPERVISOR STATE, PROTECT KEY 0 , OR       *
*     GET THERE BY BEING AUTHORIZED WITH MODESET. STICK THIS          *
*     PROGRAM IN AN AUTHORIZED LIBRARY OR GET AUTHORIZED BY USING     *
*     A MAGIC SVC AND SVC 109 IF YOU HAVE ONE.                        *
*                                                                     *
*     PLEASE NOTE : GDG CODE IS NOW INCLUDED.                         *
*     GDG DATASETS ARE ASSUMED TO BE NON VSAM DATA SETS               *
*                                                                     *
*                                                                     *
*     PROGRAM ICFLIST2 PRINTS THE DATASET PRODUCED BY THIS PROGRAM.   *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*/*****************************************************************/
*/*                                                               */
*/* PLEASE SEE MVS XA CATALOG DIAGNOSIS REFERENCE FOR LAYOUT      */
*/* OF ICF CATALOG SPHERE/CELL RECORDS DFP 5665-284               */
*/* MANUAL IS SY26-3897-1                                         */
*/*                                                               */
*/*                                                               */
*/*  IF YOU DO NOT HAVE XA YOU MUST HAVE EITHER MVS/370 DFP       */
*/*  OR DFEF TO USE ICF CATALOGS--THE RECORD LAYOUT IS THE SAME   */
*/*                                                               */
*/*  THE ICF CATALOG (BCS PART) GIVES US THE INFO ABOUT WHAT      */
*/*  OBJECTS ARE CATALOGUED IN IT AND WHAT ASSOCIATIONS IF ANY    */
*/*  THESE OBJECTS HAVE. TO GET THE ACTUAL DATA SET INFORMATION   */
*/*  I.E LRECL, HOW MANY EXTENTS ETC WE MUST THEN READ THE        */
*/*  VVR RECORD ON THE PRIMARY VOLUME OBTAINED FROM THE BCS       */
*/*  (SYS1.VVDS.VVOLSER).                                         */
*/*                                                               */
*/*  BE CAREFUL MOVING THE DATA AREAS AROUND---VSAM SEEMS TO      */
*/*  OVERLAY PART OF THE CODE IF THE WORK FIELDS ARE NOT PUT      */
*/*  AT THE BEGINNING OF THE PROGRAM.                             */
*/*                                                               */
*/*                                                               */
*/*                                                               */
*/*           MIKE HAWTHORNE   TTI 3100 OCEAN PK BVD              */
*/*                            SANTA MONICA                       */
*/*                            CALIF                              */
*/*                                                               */
*/*                                                               */
*/*****************************************************************/
         EJECT
ICFLIST1 CSECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5                          UNUSED
R6       EQU   6
R7       EQU   7
R8       EQU   8                          GETMAIN ADDR FOR RECEIVING
R9       EQU   9                          RPL
R10      EQU   10                         ACB
R11      EQU   11                         UNUSED
R12      EQU   12                         BASE REGISTER
R13      EQU   13
R14      EQU   14
R15      EQU   15
         PRINT NOGEN
         STM   R14,R12,12(R13)
         LR    R12,R15
         USING ICFLIST1,R12
         ST    R13,SAVEAREA+4
         LR    R1,R13
         LA    R13,SAVEAREA
         ST    R13,8(R1)
         XC   OUTBUF,OUTBUF
         B     DOIT
SAVEAREA DC    18A(0)                     STANDARD WORK AREA
SAVEGDG  DC    CL44' '
TEMP     DC    F'0'
GDGNAME  DC   CL9'.G0000V00'         GENERATION VERSION NR
MAXGDG   DC    CL3' '
USEDGDG  DC    CL3' '
KATALOG  DC   CL44' '
PRINT    DCB   DDNAME=SEQDS,DSORG=PS,MACRF=PM,RECFM=FB,LRECL=140
PW       DS    0F
         DC    XL1'08'                    LENGTH
         DC    CL8'        '
*
ACCESS   DC    X'00'
RSW      DC    X'00'
         DS    0F
RECUSED  DC    F'0'                       SPHERE LEN USED
RECLEN   DC    F'0'
BINZERO  DS    0F
         DS    XL44'0000'
DUBBLE   DC    D'0'
CLUSTLEN DC    F'0'
KEEPIT   DC    CL140' '                   OUTPUT BUFFER
OUTBUF   DS    0CL140
VOL1     DC    CL6' '                     VOLUME THING IS ON
ID1      DC    CL1' '                     PRIMARY THING TYPE
CLUST    DC    CL44' '                    THING NAME
ID2      DC    CL1' '             RELATED THING TYPE E.G C, D, OR I
RELATED  DC    CL44' '            RELATED OBJ NAME OR GDG INFO
*   IF A GDG THIS FIELD WILL HAVE 3 BYTES FOR MAX GDG OBJECTS
*                                 3 BYTES FOR ACTUAL NUMBER USED
KATNAME  DC    CL44' '  WANT IT TO SORT BY CATALOG LATER
ID0      DC    CL1' '
KLUST    DC    CL44' '
*
*
*        THE PHYSICAL LAYOUT IS IN VBS FORMAT. AMS GIVES US A LOGICAL
*        RECORD. HOWEVER IF YOU DONT PUT THE LTORG HERE YOU WILL
*        FIND THE VSAM BUFFERS/WORKSPACE WILL OVERLAY PART OF THIS
*        PROGRAM. I SPENT DAYS CHECKING FOR A LOGIC ERROR THAT
*        NEVER EXISTED SO I WARN YOU WHEN MESSING AROUND
CORELEN  EQU   12228    BUFFSIZE -- DEPENDING ON HOW YOU ORIGINALLY
*                       DEFINED YOUR CATALOGS.  THIS SHOULD BE
*                       GOOD ENOUGH HOWEVER.
COREADDR DS    A
         LTORG                PUT IT HERE  OR VSAM BUFFS OVERLAY AREA
*
DOIT     L     R0,=A(CORELEN)
         GETMAIN R,LV=(0)
         ST    R1,COREADDR
         LR    R8,R1         USE THIS AS OUR I/O AREA
         GENCB BLK=ACB,AM=VSAM,DDNAME=ICF,MACRF=(CNV,KEY,DIR,IN),      X
               EXLST=EOD,PASSWD=PW
         LR    R10,R1
         GENCB BLK=RPL,AM=VSAM,ACB=(R10),AREA=(R8),                    X
               OPTCD=(CNV,DIR,GEN)
         LR    R9,R1
         LA    R15,16
         LA    R1,4
         SVC   109
         MODESET MODE=SUP,KEY=ZERO        KEY ZERO SUPERVISOR
         OPEN  (PRINT,(OUTPUT))           OPEN OUTFILE
         OPEN  ((R10))                    OPEN CATALOG
         LTR   R15,R15                    OPEN SUCCESSFUL ?
         BZ    VERIFY                     YES....GO VERIFY CATALOG
         CLI   49(R10),X'74'              NEED VERIFY ?
         BE    VERIFY                     YES....GO VERIFY CATALOG
         ABEND 999,DUMP                   OPEN ERROR
*        WORK FIELDS
*
VERIFY   VERIFY RPL=(R9)                  VERIFY CATALOG
         LTR   R15,R15                    VERIFY SUCCESSFUL ?
         BZ    PROCESS                    YES....GO GET RECS
         ABEND 998,DUMP                   VERIFY ERROR
*
*
EXIT0    CLOSE ((R10))
*
EXIT     CLOSE (PRINT)                    CLOSE OUTPUT FILE
         MODESET MODE=PROB,KEY=NZERO      BACK TO REAL WORLD
         LA    R15,16
         LA    R1,8                       UNAUTHORIZE OURSELVES
         SVC   109
         L     R13,SAVEAREA+4             PREPARE FOR RETURNING
         RETURN (14,12),RC=0
*
EOD      EXLST EODAD=EXIT0
         EJECT
*
*        PROCESS ICF CATALOG
*
PROCESS  EQU   *
         MODCB RPL=(R9),OPTCD=(DIR,KEY,NSP,GEN,MVE),                   X
               AREALEN=12228,ARG=BINZERO,KEYLEN=44
         GET   RPL=(R9)                   GET A SPHERE RECORD
         LTR   R15,R15                    GET SUCCESSFUL ?
         BZ    GOON                       YES....PROCESS IT
         ABEND 997,DUMP                   GET ERROR
LUPE     GET   RPL=(R9)                   GET A SPHERE RECORD
CH       LTR   R15,R15                    GET SUCCESSFUL ?
         BZ    GOON                       YES....PROCESS IT
         ABEND 997,DUMP                   GET ERROR
GOON     EQU   *
         CLI   ACCESS,X'FF'
         BE    GOONS
         MODCB RPL=(9),OPTCD=SEQ       CHANGE TO SEQUENTIAL PROCESSING
         MVI   ACCESS,X'FF'
GOONS    EQU   *
         MVC   RECLEN+2(2),0(8)
         LR    3,8                       OUR BUFF
#W1      XC    RECUSED,RECUSED
         MVI   OUTBUF,C' '
         MVC   OUTBUF+1(95),OUTBUF
         CLI   4(8),X'C1'     CHECK TYPE OF SPHERE RECORD
         BE    KOMMON
         CLI   4(8),X'E7'
         BE    ALIAS
         CLI   4(8),X'E4'
         BE    KOMMON
         CLI   4(8),X'D9'
         BE    PATH
         CLI   4(8),X'E3'
         BE    TRUENAME       TRUE NAMES CAN BE DISREGARDED
         CLI   4(8),X'C3'     AS THEIR ENTRIES ARE IN THE CAT. ANYWAY
         BE    CLUSTER
         CLI   4(8),X'C2'
         BE    GDG            ONLY TESTING FOR GDGS .
         WTO  'RECORD CELLTYPE NOT IN CATALOG'
         ABEND 995,DUMP
KOMMON   EQU   *
         XR    7,7
         A     7,=F'2'
         ST    7,RECUSED
         LA    3,2(3)
         CLI   4(8),C'A'   NON VSAM DATA SET
         BNE   K#1
         MVI   ID1,C'N'    NONVSAM
         B     K#2
K#1      MVI   ID1,C'U'    USERCAT
K#2      EQU   *
         MVC   CLUST(44),7(3)
NON#0    CLI   2(3),X'04'     VOLUME RECORD
         BNE   NON#2
         BAL   11,DOVOL
         BAL   11,PUTIT
         B     LUPE
NON#2    XR    7,7
         AH    7,0(3)
         A     7,RECUSED
         ST    7,RECUSED
         CLC   RECLEN,RECUSED
         BE    LUPE
         BL    LUPE
         LR    3,8
         AR    3,7
         B     NON#0
ALIAS    EQU   *
         MVI   ID1,C'A'
         LA    3,2(3)          SKIP OVER LL IN SPHERE REC
         MVC   CLUST(44),7(3)  ALIAS NAME
         XR    7,7
         IC    7,58(3)
         S     7,=F'2'  -1 FOR MVC -1 FOR BIN ZERO AT END OF KEY
         STC   7,CATMOVE+1  KEY
CATMOVE  MVC   RELATED+0(0),59(3)
         BAL   11,PUTIT
         B     LUPE
PATH     B     LUPE            NOT YET READY
TRUENAME B     LUPE            DONT NEED AS ITS ALREADY IN THE CATALOG
GDG      EQU   *
         MVI   SAVEGDG,X'40'
         MVC   SAVEGDG+1(43),SAVEGDG  CLEAR OUT OUR LINE
         XR    7,7
         L     7,RECUSED
         A     7,=F'2'
         ST    7,RECUSED
         LA    3,2(3)
         MVI   ID1,C'G'    GDG INDICATOR
         MVI   ID2,C'B'    INDICATE BASE COMPONENT
         MVC   CLUST(44),7(3)
         MVC   SAVEGDG(44),7(3)
         XR    4,4
         LA    1,SAVEGDG
CHEK     CLI   0(1),C' '
         BE    GDGLUPE
         LA    1,1(1)
         LA    4,1(4)
         B     CHEK
GDGLUPE  ST   4,CLUSTLEN
GDGL1    XR   7,7
         AH   7,0(3)
         A    7,RECUSED
         ST   7,RECUSED
         LR   3,8
         AR   3,7
         CLC  RECLEN,RECUSED
         BE   LUPE
         BL   LUPE            AVOID ENDLESS LOOP DURING TEST
         CLI  2(3),X'05'      GAT CELL (GDG AGING CELL !!!!)
         BNE  GDGL1           DONE  GET NEXT CELL
         XR   1,1
         IC   1,4(3)         MAX GDG ENTRIES
         CVD  1,DUBBLE
         MVC  TEMP,=X'F0212020'
         ED   TEMP(4),DUBBLE+6
         MVC  MAXGDG(3),TEMP+1
         MVC  RELATED(3),MAXGDG
         XC   DUBBLE,DUBBLE
         XR   1,1
         IC   1,5(3)        GDG ENTRIES CURRENTLY IN USE
         CVD  1,DUBBLE
         MVC  TEMP,=X'F0212020'
         ED   TEMP(4),DUBBLE+6
         MVC  USEDGDG(3),TEMP+1
         MVC  RELATED+3(3),USEDGDG
         MVC  KATNAME(44),KATALOG
         BAL  11,PUTIT1
INTQ     XR   7,7
         AH   7,0(3)
         A    7,RECUSED
         ST   7,RECUSED
         LR   3,8
         AR   3,7
         CLC  RECLEN,RECUSED
         BE   LUPE
         BL   LUPE            AVOID ENDLESS LOOP DURING TEST
         CLI   2(3),X'04'     VOLUME RECORD
         BNE   KONT
         MVC   VOL1(6),4(3)        HAVE WE HAD IST VOL
         MVC  KATNAME(44),KATALOG
         MVC  CLUST(44),SAVEGDG
         MVI  ID2,C'G'     INDICATE GDG DATASET
         MVI  ID1,C'G'     INDICATE PART OF GDG
         BAL   11,PUTIT1
         B     INTQ
KONT     CLI   2(3),X'C8'     GDG NAME CELL
         BNE   INTQ
         XR    1,1
         LH    1,5(3)       GENERATION NR
         CVD  1,DUBBLE
         MVC  TEMP,=X'F0212020'
         ED   TEMP(4),DUBBLE+6
         MVC  GDGNAME+3(3),TEMP+1
         XR    1,1
         IC    1,7(3)       VERSION NR
         CVD  1,DUBBLE
         MVC  TEMP,=X'F0212020'
         ED   TEMP(4),DUBBLE+6
         MVC  GDGNAME+7(2),TEMP+2
         LA   4,SAVEGDG
         A    4,CLUSTLEN
         MVC  0(9,4),GDGNAME
         MVC  CLUST(44),SAVEGDG
         MVI  ID2,C'G'     INDICATE GDG DATASET
         MVI  ID1,C'G'     INDICATE PART OF GDG
         B    INTQ
*
DOVOL    EQU   *
*
*
*             IF VOLUME ID IS ****** THEN VSAM SUPERLOCATE
*             WILL TRANSLATE THAT TO THE IPL VOLUME AT IPL TIME.
*             IF YOU HAVE MULTIPLE IPL VOLUMES YOU MUST MANUALLY
*             CHECK WHICH ONE YOU WANT. SINCE IN GENERAL ONLY THINGS
*             LIKE SYS1.NUCLEUS OR SYS1.LOGREC ARE IPL DEPENDANT
*             YOU SHOULD NOT FIND THIS A REAL PROBLEM. IN GENERAL
*             IF YOU HAVE USER DATASETS ON SYSRES VOLS THAT ARE NOT
*             IPL DEPENDANT THEN YOU WILL PROBABLY FIND THAT THEY
*             ARE CATALOGUED WITH REAL VOLUME IDS--IF NOT I SHOULD
*             RE-CATALOG THEM !!!!!
*
*
         CLC   CLUST(6),=C'      '
         BE    V#1
         MVC   VOL1(6),4(3)        HAVE WE HAD IST VOL
V#1      BR   11
PUTIT    CLI  RSW,X'FF'
         BE   PUTIT1
         MVC  KATALOG(44),RELATED
         MVI  RSW,X'FF'
PUTIT1   MVC  KATNAME(44),KATALOG
         PUT  PRINT,OUTBUF
         MVI  OUTBUF,C' '
         MVC  OUTBUF+1(139),OUTBUF
         BR   11
CLUSTER  EQU  *
         MVI  ID0,C'C'        IDENTIFY  COMPONENT
         XR   7,7
         L    7,RECUSED
         A    7,=F'2'
         ST   7,RECUSED
         LA   3,2(3)         SKIP OVER LL AT START OF SPHERE REC
         CLC  7(4,3),=X'00000000' GOT CATALOG BASE REC
         BNE  OKAY1           NO  ITS A NORMAL ONE
         MVI  KLUST,C'0'
         MVC  KLUST+1(43),KLUST
         B    O#1
OKAY1    MVC  KLUST(44),7(3)   OWNING CLUSTER NAME
O#1      MVC  CLUST(44),KLUST
         MVI  ID1,C'C'
*        BAL  11,PUTIT
INTLUPE  EQU  *
R#1      XR   7,7
         AH   7,0(3)
         A    7,RECUSED
         ST   7,RECUSED
         LR   3,8
         AR   3,7
         CLI  2(3),X'04'      VOLUME RECORD
         BNE  OKAY3
         BAL  11,DOVOL
         CLC  CLUST(6),=C'      '
         BE   ENDLUPE
         BAL  11,PUTIT
         B    ENDLUPE         IGNORE IT FOR MOMENT
OKAY3    EQU  *
         CLI  2(3),C'D'       DATA COMPONENT
         BNE  INDEX
         MVI  ID2,C'D'
         B    PROC
INDEX    CLI  2(3),C'I'       INDEX COMPONENT
         BNE  AIX
         MVI  ID2,C'I'
         B    PROC
AIX      CLI  2(3),C'G'       ALTERNATE INDEX
         BNE  ENDLUPE         NOT INTERESTED IN ASSOCIATIONS===> YET
         MVI  ID2,C'S'        FOR SECONDARY INDEX
PROC     XR   7,7
         IC   7,6(3)
         S    7,=F'2'
         STC  7,MOVE+1
MOVE     MVC  RELATED+0(0),7(3)   VARIABLE LENGTH NAME
         MVC  ID1(45),ID0     BASE CLUSTER NAME
ENDLUPE  EQU  *
         CLC  RECLEN,RECUSED
         BE   LUPE
         BL   LUPE            AVOID ENDLESS LOOP DURING TEST
         B    INTLUPE         ROUND AGAIN
         END
