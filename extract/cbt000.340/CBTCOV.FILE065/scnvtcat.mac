*/********************************************************************/
*/*                                                                  */
*/*   THIS PROGRAM WAS CULLED FROM A VERY EARLY IPO TAPE.            */
*/*   IF YOU ARE STILL UNFORTUNATE ENOUGH TO HAVE CVOLS AROUND       */
*/*   THIS PROGRAM WILL HELP YOU CONVERT THE ENTRIES TO ICF          */
*/*   CATALOGS REAL QUICK. (OR VSAM UCATS BUT I URGE YOU IF AT       */
*/*   ALL POSSIBLE GET RID OF VSAM UCATS REAL FAST IF YOU HAVE       */
*/*   DFEF OR DFP INSTALLED ON YOUR SYSTEM).                         */
*/*                                                                  */
*/*   UNFORTUNATELY I HAVEN'T BEEN ABLE TO GET THIS TO WORK ON XA    */
*/*   BECAUSE THERE IS A CALL TO DEVNAMET TO GET DEVICE NAMES/TYPES. */
*/*   I DON'T KNOW HOW XA DOES THIS BUT IF SOMEONE OUT THERE         */
*/*   CAN FIX IT I WOULD BE HAPPY.                                   */
*/*                                                                  */
*/*   MIKE HAWTHORNE    TTI CITICORP                                 */
*/*                     3100 OCEAN PK BVD                            */
*/*                     SANTA MONICA CA.                             */
*/*                                                                  */
*/*                                                                  */
*/*                                                                  */
*/********************************************************************/
SCNVTCAT TITLE 'ROUTINE TO PRODUCE AMS CONTROL STATEMENTS FROM IEHLIST X
               LISTCTLG OUTPUT'
*             FUNCTION =                                              *
*                GENERATE AMS CONTROL STATEMENTS FROM IEHLIST LISTCTLG*
*                OUTPUT LISTING.                                      *
*                                                                     *
*                OPERATION =                                          *
*                   IF INPUT LINE IS FOR 'CVOL PTR' THEN              *
*                     IF CVOL NOT BEEN PREVIOUSLY DEFINED THEN        *
*                       PRODUCE 'DEFINE NONVSAM(NAME(SYSCTLG.V_____)..*
*                     PRODUCE  'DEFINE ALIAS NAME(_______) RELATE     *
*                       (SYSCTLG.V______))' CONTROL STATEMENT         *
*                   ELSE IGNORE INPUT LINE AND READ ANOTHER           *
*                                                                     *
*              NOTES =                                                *
*                                                                     *
*                 DEPENDENCIES = CHARACTER SET IS EBCDIC.  REASSEMBLE *
*                    IF A DIFFERENT CHARACTER SET IS NEEDED.          *
*                                                                     *
*                 RESTRICTIONS = NONE                                 *
*                                                                     *
*                 REGISTER CONVENTIONS = STANDARD CONVENTIONS.        *
*                    REGISTERS 0 TO 2  = WORK REGISTERS               *
*                    REGISTERS 3 TO 7  = UNUSED                       *
*                    REGISTER  8       = LINEIN DSECT ADDRESSABILITY  *
*                    REGISTERS 9 TO 11 = UNUSED                       *
*                    REGISTER  12      = ADDRESSABILITY TO SCNVTCAT   *
*                                        CSECT                        *
*                    REGISTER  13      = ADDRESSIBILITY TO SAVE AREA  *
*                    REGISTERS 14,15   = WORK REGISTERS               *
*                                                                     *
*                PATCH LABEL = PATCH (UNUSED AND INTIALIZED TO        *
*                   BINARY ZEROES)                                    *
*                                                                     *
*             MODULE TYPE = PROCEDURE                                 *
*                                                                     *
*                PROCESSOR = ASM                                      *
*                                                                     *
*                MODULE SIZE = 1200 BYTES                             *
*                                                                     *
*                ATTRIBUTES = KEY 8, NON-REENTRANT,                   *
*                   PROBLEM STATE, ENABLED, NO LOCKS HELD             *
*                                                                     *
*             ENTRY POINTS = SCNVTCAT (ONLY ENTRY POINT)              *
*                                                                     *
*                LINKAGE =                                            *
*                                                                     *
*                                                                     *
*             INPUT =                                                 *
*                  CTLGIN FILE IS OUTPUT FROM IEHLIST LISTCTLG        *
*                  RECFM=FBA, LRECL=121, DSORG=PS                     *
*                                                                     *
*             OUTPUT =                                                *
*                  CARDOUT FILE IS AMS CONTROL STATEMENTS.            *
*                  RECFM=FB, LRECL=80, DSORG=PS                       *
*                                                                     *
*             EXIT - NORMAL = AT PROGRAM END VIA BRANCH REGISTER 14   *
*                                                                     *
*                OUTPUT = NONE                                        *
*                                                                     *
*                RETURN CODE = ZERO                                   *
*                                                                     *
*             EXIT - ERROR = NONE                                     *
*                                                                     *
*                OUTPUT = NONE                                        *
*                                                                     *
*                RETURN CODE = ZERO                                   *
*                                                                     *
*             EXTERNAL REFERENCES =                                   *
*                                                                     *
*                ROUTINES = NONE                                      *
*                                                                     *
*                DATA AREAS = NONE                                    *
*                                                                     *
*                CONTROL BLOCKS = NONE                                *
*                                                                     *
*             TABLES =                                                *
*                DEVNAMET  SYSTEM DEVICE NAME TABLE LOADED VIA LOAD   *
*                          MACRO. USED TO RELATE DEVICE TYPES TO      *
*                          CHARACTER DEVICE NAMES.                    *
*                                                                     *
*             MACROS = SAVE, WTO, RETURN, OPEN, CLOSE, GET, PUT,      *
*                ABEND, DCB, LOAD                                     *
*                                                                     *
*             CHANGE ACTIVITY = NONE                                  *
*                                                                     *
*             MESSAGES =  ROUTE CODES FOR WTO ARE 2 AND 11 .          *
*                INFORM USER OF CVOL TABLE OVERFLOW .                 *
*                INFORM USER OF UNKNOWN DEVICE TYPE ENCOUNTERED.      *
*                                                                     *
*             ABEND CODES =                                           *
*                U0001  CVOL ENTRY TABLE OVERFLOW                     *
*                                                                     *
***********************************************************************
         EJECT
SCNVTCAT CSECT ,                    DEFINE CSECT NAME SCNVTCAT
*
*  SHOULD MORE THAN 128 CVOLS BE NEEDED CHANGE EMAXCVOL EQUATE
*  AND RE-ASSEMBLE AND LINK EDIT
EMAXCVOL EQU   128                  MAX NUMBER OF CVOLS (TABLE ENTRIES)
*
         SAVE  (14,12),,SCNVTCAT_&SYSDATE_&SYSTIME SAVE REGS
         LR    R12,R15              LOAD BASE REGISTER
         USING SCNVTCAT,R12         SET UP ADDRESSABILITY
         LA    R2,SAVE              LOAD ADDRESS OF SAVE AREA
         ST    R13,4(R2)            SAVE CALLER'S SAVE AREA ADDRESS
         ST    R2,8(R13)            SAVE MY SAVE AREA ADDRESS
         LR    R13,R2               POINT TO MY SAVE AREA
         LOAD  EP=DEVNAMET          LOAD DEVICE NAME TABLE
         ST    R0,VDEVNAMT          STORE ENTRY ADDRESS
         OPEN  (CTLGIN,,CARDOUT,(OUTPUT))  OPEN FILES
         TM    CTLGIN+48,X'10'      DID INPUT FILE OPEN
         BZ    NODDX                NO BR TO ERROR
         TM    CARDOUT+48,X'10'     DID OUTPUT FILE OPEN
         BO    READ                 YES, ALL FILES AVAILABLE
NODDX    L     R13,4(R13)           RELOAD OLD SAVE AREA ADDRESS
         RETURN (14,12),RC=16       RETURN WITH ERROR CODE
         SPACE 3
         USING LINEIN,R8            SET UP BASE FOR INPUT LINE
READ     DS    0H                   BR HERE TO LOOP ON GET
         GET   CTLGIN               GET AN INPUT RECORD
         LR    R8,R1                PUT ADDRESS OF RECORD IN REG 8
         CLC   CVOLPTR,CENTIRE      DOES IT SAY ' ENTIRE '
         BE    EOF                  YES -> END OF CVOL RECORDS
         CLC   CVOLPTR,CCVOLPTR     DOES IT SAY 'CVOL PTR'
         BNE   READ                 NO -> READ ANOTHER RECORD
         MVC   TEMP(8),DEVTYPE      MOVE DEVICE TYPE TO TEMP FIELD
         TR    TEMP(8),TRTAB         TRANSLATE FROM CHAR->PSEUDO BINARY
         PACK  DWORD,TEMP(8)        STRIP OF ZONE FIELD
         LM    R6,R7,DWORD          LOAD IN REG FOR SHIFT
         SRDL  R6,4                 SHIFT OF SIGN DIGIT FROM PACK
         STH   R7,SCANTAG           STORE IN SCAN ARGUMENT
*        R7=4 BYTE DEVICE TYPE
         MVC   SCANTAG+K2(L'VOL),VOL MOVE VOLSER INTO SCAN ARGUMENT
         LA    R2,CVOLLIST          POINT TO BEGIN OF LIST OF CVOLS
CVOLOOP  DS    0H                   SEARCH FOR CVOL ALREADY IN TABLE
         CLC   X0000,K0(R2)         IF ENTRY BEGINS '0000'
         BE    STOW                 THEN NOT IN LIST->STORE IN TABLE
         CLC   SCANTAG,K0(R2)       IS ENTRY=SCAN ARGUMENT?
         BE    NOPROCES             YES-> ALREADY IN TABLE
         LA    R2,K8(R2)            POINT TO NEXT TABLE ENTRY
         C     R2,MAXCVOL           ARE WE AT THE END OF TABLE
         BL    CVOLOOP              NO->BR TO TRY ANOTHER ENTRY
         WTO   '* CVOL TABLE TOO SMALL, INCREASE AND REASSEMBLE',      X
               ROUTCDE=(2,11)       ELSE ISSUE ERROR MESSAGE
         ABEND 1                    AND ABEND TABLE TOO SMALL
STOW     DS    0H                   BR HERE TO PUT ENTRY IN TABLE
         MVC   0(L'SCANTAG,R2),SCANTAG  MOVE SCAN ARG INTO TABLE
         MVC   NVNAME,VOL           MOVE VOLSER INTO NAME OF SYSCTLG
         MVC   NVVOLS,VOL           MOVE VOLSER INTO VOL OF DEFINE
         L     R1,VDEVNAMT          GET ADDRESS OF DEVICE NAME TABLE
         L     R2,K0(R1)            LOAD NUMBER OF ENTRIES IN TABLE
         LA    R1,K4(R1)            POINT TO FIRST ENTRY IN DEVNAMET
DEVTLP2  C     R7,K8(R1)            IS IT THE CORRECT DEVICE TYPE
         BE    PUTNV                YES->FOUND DEVICE TYPE
DEVTLOOP LA    R1,KC(R1)            POINT TO NEXT ENTRY IN TABLE
         BCT   R2,DEVTLP2           LOOP THRU NUMBER OF ENTRIES
         WTO   '* UNKNOWN DEVICE TYPE FOUND *',ROUTCDE=(2,11) ERROR
         MVC   NVDEVT,DEVTYPE       MOVE IN DEVCODE(WILL CODE ERROR)
         B     PUTVV                BR TO PUT OUT DEF NVSAM RECORD
PUTNV    MVC   NVDEVT,K0(R1)        MOVE IN DEVICE TYPE FROM DEVNAMET
PUTVV    PUT   CARDOUT,NVCTLG       PUT DEFINE NONVSAM SYSCTLG.V RECD
NOPROCES DS    0H                   ENTER HERE TO PUT OUT DEFINE ALIAS
         MVC   ALNAME,NALIAS        MOVE IN ALIAS NAME
         MVC   ALVOLS,VOL           MOVE IN VOLSER OF CVOL FOR RELATE
         PUT   CARDOUT,ALCTLG       PUT OUT DEFINE ALIAS RELATE CARD
         B     READ                 BR TO READ ANOTHER RECORD
EOF      DS    0H                   EODAD ADDRESS OR END OF CAT INPUT
         CLOSE (CTLGIN,,CARDOUT)    CLOSE FILES
         L     R13,4(R13)           LOAD CALLER'S SAVE AREA ADDRESS
         LM    R14,R12,12(R13)      RELOAD REGISTERS
         SLR  R15,R15               SET ZERO RETURN CODE
         BR    R14                  BRANCH BACK TO CALLER
         SPACE 3
DWORD    DC    D'0'                 DOUBLE WORD WORK AREA (CVB,CVD)
SAVE     DS    18F                  REGISTER SAVE AREA
SCANTAG  DS    CL8                  SCAN ARGUMENT
CCVOLPTR DC    C'CVOL PTR'          SEARCHED FOR CVOL PTR
CENTIRE  DC    C' ENTIRE '          END OF INDEX LISTING
VDEVNAMT DC    A(0)                 SYSTEM DEVICE NAME TABLE(LPALIB)
X0000    DC    XL2'0000'            END OF TABLE INDICATOR
TEMP     DC    XL8'0000'            TEMP AREA FOR TRANSLATE
TRTAB    DC    XL256'00'            TRANSLATE TABLE FOR CONVERSION
         ORG   TRTAB+C'A'           OF CHAR HEX TO ZONE HEX
         DC    X'FAFBFCFDFEFF'      TR 'ABCDEF' X'FAFBFCFDFEFF'
         ORG   TRTAB+C'0'           ORG TO X'F0'
         DC    C'0123456789'        TR '0123456789' -> '0123456789'
         ORG   TRTAB+256            ORG TO END OF TABLE
ALCTLG   DC    CL80' '              DEFINE ALIAS IDCAMS CARD FORMAT
         ORG   ALCTLG               POINT TO BEGIN OF RECORD
         DC    C' DEFINE ALIAS(NAME(' DEFINE ALIAS
ALNAME   DC    CL8' '               ALIAS NAME FIELD
         DC    C') RELATE(SYSCTLG.V' RELATE CARD
ALVOLS   DC    CL6' '               VOLSER OF CVOL SYSCTLG.V______
         DC    C'))'                END OF DEFINE COMMAND
         ORG   ALCTLG+L'ALCTLG      ORG TO END OF RECORD
NVCTLG   DC    CL80' '              DEFINE NONVSAM IDCAMS RECORD
         ORG   NVCTLG               POINT TO BEGIN OF RECORD
         DC    C' DEF NVSAM(NAME(SYSCTLG.V'  DEF NONVSAM COMMAND
NVNAME   DC    CL6' '               VOLSER OF CVOL FOR NAME SYSCTLG.V..
         DC    C') VOL('            VOL
NVVOLS   DC    CL6' '               VOLSER OF CVOL
         DC    C') DEVT('           DEVICE TYPE KEYWORD
NVDEVT   DC    CL8' '               DEVICE TYPE OF CVOL
         DC    C'))'                END OF COMMAND
         ORG   NVCTLG+L'NVCTLG      ORG TO END OF RECORD
*
* CTLGIN FILE IS IEHLIST SYSPRINT OUTPUT OF LISTCTLG
*
CTLGIN   DCB   DDNAME=CTLGIN,DSORG=PS,MACRF=GL,EODAD=EOF
*
* IDCAMS DEFINE CARDS OUTPUT FILE
*
CARDOUT  DCB   DDNAME=CARDOUT,DSORG=PS,MACRF=PM,RECFM=FB,LRECL=80
MAXCVOL  DC    A(ENDCVOLL)          ADDRESS OF END OF CVOL TABLE
CVOLLIST DC    (EMAXCVOL)XL8'00'    CVOL TABLE
ENDCVOLL DS    D                    END OF CVOL TABLE
*
* LINEIN DSECT FOLLOWS IEHLIST LISTCTLG SYSPRINT OUTPUT FILE
*
LINEIN   DSECT                      INPUT LINE DSECT
         DS    CL2     COLS 00-01   UNUSED
NALIAS   DS    CL8          02-09   ALIAS NAME
         DS    CL17         10-26   UNUSED
CVOLPTR  DS    CL8          27-34   SAYS 'CVOL PTR'/'DATASET'/' ENTIRE'
         DS    CL16         35-50   UNUSED
VOL      DS    CL6          51-56   VOLSER OF CVOL
         DS    CL14         57-70   UNUSED
DEVTYPE  DS    CL8          71-78   DEVICE TYPE(CHAR HEX) OF CVOL
SCNVTCAT CSECT                      RESUME CSECT
R0       EQU   0                    EQU REGISTER 0
R1       EQU   1                    EQU REGISTER 1
R2       EQU   2                    EQU REGISTER 2
R3       EQU   3                    EQU REGISTER 3
R4       EQU   4                    EQU REGISTER 4
R5       EQU   5                    EQU REGISTER 5
R6       EQU   6                    EQU REGISTER 6
R7       EQU   7                    EQU REGISTER 7
R8       EQU   8                    EQU REGISTER 8
R9       EQU   9                    EQU REGISTER 9
R10      EQU   10                   EQU REGISTER 10
R11      EQU   11                   EQU REGISTER 11
R12      EQU   12                   EQU REGISTER 12
R13      EQU   13                   EQU REGISTER 13
R14      EQU   14                   EQU REGISTER 14
R15      EQU   15                   EQU REGISTER 15
* EQUATED CONSTANTS
K0       EQU   00
K1       EQU   01
K2       EQU   02
K3       EQU   03
K4       EQU   04
K5       EQU   05
K6       EQU   06
K7       EQU   07
K8       EQU   08
KA       EQU   10
KB       EQU   11
KC       EQU   12
         DS    0D
         DC    C'******PATCH AREA'
PATCH    DC    XL64'00'      PATCH AREA
         END   SCNVTCAT
