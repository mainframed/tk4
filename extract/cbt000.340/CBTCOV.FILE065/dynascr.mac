         TITLE ' DYNASCR - DELETES TEMPOTARY D.S. BASED ON SYSID'
***********************************************************************
*                                                                     *
*        THIS PROGRAM WILL SCRATCH ANY TEMPORARY DATA SET NOT         *
*        CURRENTLY USED. THE PROGRAM DEPENDS ON A MODIFACTION TO      *
*        IEFNB903 (SEE BELOW) TO INSERT THE SECOND BYTE OF SYSTEM     *
*        ID INTO THE 22RD POSITION OF THE TEMPORARY DATA SET NAME.    *
*                                                                     *
*                      1         2         3                          *
*             123456789012345678901234567890123456789                 *
*        OLD  SYS79028.T083724.RA000.JOBNAME.R0000001                 *
*        NEW  SYS79028.T083724.RA00X.JOBNAME.R0000001                 *
*                                                                     *
*        X = 2ND CHARACTER OF THE SYSID                               *
*                                                                     *
*        ONCE A TEMPORARY DATA SET IS FOUND THIS PROGRAM WILL         *
*        CHECK THE 22ND POSITION OF THE TEMP. D.S. WITH THAT OF THE   *
*        SMCA 2ND CHARACTER SYSID. IF EQUAL THEN THE ASCB'S ARE       *
*        CHECKED TO SEE IF THE JOB IS CURRENTLY EXECUTING. IF THE     *
*        JOB IS NOT FOUND THEN THE TEMPORARY DAT SET IS SCRATCHED.    *
*                                                                     *
*                                                                     *
*        LINKEDIT ATTRIBUTES: AC=1                                    *
*                                                                     *
*        JCL REQUIRED:                                                *
*                                                                     *
*        //STEP     EXEC PGM=DYNASCR,PARM=SCRATCH×LIST SEE BELOW      *
*        //STEPLIB  DD  <TO A AUTHORIZED LIBRARY, OPTIONAL>           *
*        //SYSPRINT DD SYSOUT=A <LIST OF SCRATCH DATA SETS>           *
*        //SYSUDUMP DD SYSOUT=A                                       *
*        //DDSCR001 DD UNIT=SYSDA,VOL=SER=SCR001,DISP=OLD             *
*        //DDSCR002 DD <ANY NUMBER OF DD STATEMENTS MAY APPEAR        *
*        //DD4      DD   BUT THE DDNAME MUST START WITH 'DD'          *
*                                                                     *
*        PARM=SCRATCH OPTION WILL SCRATCH ANY TEMPORARY DATA SETS     *
*                  ACCEPTABLE FOR SCRATCHING. A LIST OF THE           *
*                  SCRATCHED DATA SETS IS PRODUCED.                   *
*                                                                     *
*        PARM=LIST OPTION WILL LIST THE TEMPORARY DATA SETS           *
*                  ACCEPTABLE FOR SCRATCHING, THE LIST OPTION WILL    *
*                  NOT SCRATCH THESE DATA SETS.                       *
*                                                                     *
*        WRITTEN BY                                                   *
*             KENNETH RASMUSSEN                                       *
*             HUGHES AIRCRAFT COMPANY                                 *
*             P O BOX 3310 BLD 606 M/S B27                            *
*             FULLERTON, CA. 92634                                    *
*             (714) 732-1567                                          *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*        NOTE: THIS ZAP WILL ONLY WORK IN A JES2 ENVIRONMENT          *
*              FOR JES3, A JES3 USER EXIT MUST BE USED.               *
*                                                                     *
*        ZAP TO IEFNB903 <REQUIRED>                                   *
*                                                                     *
*        ++VER (Z037) PRE(UZ16511)                                    *
*        ++ZAP (IEFNB903)                                             *
*        NAME IEFNB903                                                *
*        VER 0202 D202,2013,B403                                      *
*        REP 0202 47F0,B42E,0700  BR TO PATCH AREA                    *
*        VER 0434 0000,0000,0000,0000,0000,0000,0000,0000             *
*        VER 0444 0000,0000,0000,0000                                 *
*        REP 0434 D201,2013,B403  MVC 2 ZEROS IN (NOT 3               *
*        REP 043A 5810,0010       LOAD CVT ADDR                       *
*        REP 043E 5811,00C4       LOAD SMCA PTR                       *
*        REP 0442 D200,2015,1011  STORE 2ND CH OF SYSID               *
*        REP 0448 47F0,B202       BRANCH BACK                         *
*                                                                     *
*                                                                     *
*        ZAP TO IEHPROGM TO CHECK SYSID (OPTIONAL)                    *
*                                                                     *
*        ++VER (Z037) PRE(UZ83200).                                   *
*        ++ZAP (IEHPROG2)                                             *
*        NAME IEHPROG2                                                *
*        VER 0C34 95C1,C44A       CLI PARAM2+18,C'A'                  *
*        VER 0C38 4780,AC4C       BE  NOTSYS                          *
*        VER 0C3C 95C6,C44A       CLI PARAM2+18,C'F'                  *
*        VER 0C40 4780,AC4C       BE  NOTSYS                          *
*        VER 0C44 95E5,C44A       CLI PARAM2+18,VEE                   *
*        VER 0C48 4770,ABBA       BNE GETADSCB                        *
*        REP 0C34 5810,0010       L   R1,16                           *
*        REP 0C38 5811,00C4       L   R1,196(R1)                      *
*        REP 0C3C D500,1011,C44D  CLC SYSID,PARAM2+21                 *
*        REP 0C42 4770,ABBA       BNE GETADSCB                        *
*        REP 0C46 0700,0700,0700  NOP'S                               *
*                                                                     *
*                                                                     *
***********************************************************************
DYNASCR  CSECT
         PRIME REG=12
         REGEQU
***********************************************************************
*                                                                     *
*        GET SYSTEM ID, OPEN SYSPRINT DATA SET                        *
*                                                                     *
***********************************************************************
         L     R2,0(,R1)                POINT AT PARM IF ANY
         L     R1,16(R0)                GET CVT ADDR.
         L     R1,196(,R1)              GET SMCA ADDR.
         MVC   SYSID,17(R1)             SAVE BYTE 2 OF SYSID
         MVC   HDR1ID,17(R1)            SAVE BYTE 2 OF SYSID
         OPEN  (SYSPRINT,(OUTPUT))
         BAL   R10,PRTHDRS
         CLC   2(7,R2),=CL7'SCRATCH'    PARM = SCRATCH ?
         BE    GETTIOT                  IF YES, THEN BRANCH
         CLC   2(4,R2),=CL4'LIST'       PARM = LIST ?
         BNE   BADPARM                  IF NOT EQUAL, THEN BRANCH
         OI    BYPASS+1,X'F0'           SET BYPASS SWITCH
         MVC   STATFLD,LISTCNST         EDIT LISTED IN STATUS FIELD
         EJECT
***********************************************************************
*                                                                     *
*        GET TIOT ADDRESS AND FIND FIRST VOLUME                       *
*                                                                     *
***********************************************************************
GETTIOT  EXTRACT TIOTADDR,FIELDS=(TIOT) GET TIOT ADDRESS
         L     R9,TIOTADDR              LOAD R5 WITH TIOT ADDRESS
         LA    R9,24(R9)                LOAD ADDR OF FIRST DD CARD
         B     CHKTIOT                  BRANCH TO CHECK TIOT
***********************************************************************
*                                                                     *
*        GET NEXT TIOT DD ENTRY                                       *
*                                                                     *
***********************************************************************
NEXTTIOT SR    R8,R8                    CLEAR R8
         IC    R8,0(R9)                 LOAD LENGTH OF THIS TIOT
         LA    R9,0(R8,R9)              POINT AT NEXT TIOT ENTRY
***********************************************************************
*                                                                     *
*        PROCESS THIS TIOT ENTRY                                      *
*                                                                     *
***********************************************************************
CHKTIOT  CLI   0(R9),X'00'              LAST TIOT
         BE    ENDPGM                   YES, BRANCH TO END ROUTINE
         CLC   4(2,R9),=CL2'DD'         DD NAME START WITH 'DD'
         BNE   NEXTTIOT                 NO,  GO TO NEXTTIOT
         ICM   R8,B'0111',17(R9)        LOAD UCB ADDRESS
         BNZ   CHKDEVTP                 BRANCH IF GOOD ADDRESS
         ABEND 620,DUMP
CHKDEVTP MVC   DEVTYPE,16(R8)           STORE DIVICE TYPE FOR SCRATCH
         CLI   18(R8),X'20'             IS UCBTYP A DISK
         BNE   NEXTTIOT                 NO, BRANCH GET NEXT TIOT ADDR
         MVC   VOLNO,28(R8)             STORE SERIAL NO IN VOLNO
         EJECT
***********************************************************************
*                                                                     *
*        SEARCH FOR FORMAT 4 DSCB                                     *
*                                                                     *
***********************************************************************
         OBTAIN DSCBFMT4
         CLI   DSCBAREA,X'F4'           IS DSCB A FORMAT 4
         BE    SAVEEXT                  YES, GO TO SAVE EXTENTS
         ABEND 621,DUMP                 NO, ABEND 621
SAVEEXT  MVC   LCCHHR(4),DSCBAREA+67    STORE VTOC LAST ADDR
         MVC   LCCHHR+4(1),DSCBAREA+30  STORE NO OF DSCB/TRK
         MVC   CCHHR(4),DSCBAREA+63     SET STARTING CCHHR
         MVC   CCHHR+4(1),=XL1'01'      SET R  EQUAL TO 1
         LH    R8,DSCBAREA+18           LOAD CYL/VOL
         ST    R8,CYLPRVOL               AND SAVE
         LH    R8,DSCBAREA+20           LOAD TRK/CYL
         ST    R8,TRKPRCYL               AND SAVE
         SR    R8,R8                    CLEAR R8
         IC    R8,DSCBAREA+30           LOAD DSCB/TRK
         ST    R8,RECPRTRK               AND SAVE
         B     SEEKFMT1                 GO TO GET FORMAT 1 DSCB
INCRADDR SR    R8,R8                    CLEAR R8
         IC    R8,CCHHR+4               INSERT R BYTE OF CCHHR IN R8
         A     R8,=F'1'                 ADD 1 TO RECORD
         STC   R8,CCHHR+4               STORE R IN CCHHR
         C     R8,RECPRTRK              COMPARE R8 TO RECPRTRK
         BNH   SEEKFMT1                 BRANCH ON NOT HIGH TO SEEKFMT1
         MVI   CCHHR+4,X'01'            HIGH, SET R OF CCHHR TO 01
         LH    R8,CCHHR+2               INSERT H OF CCHHR TO R8
         A     R8,=F'1'                 ADD 1 TO HEAD
         STH   R8,CCHHR+2               STORE ' IN CCHHR
         C     R8,TRKPRCYL              COMPARE R8 TO TRKPRCYL
         BL    SEEKFMT1                 BRANCH ON NOT HIGH TO SEEKFMT1
         MVC   CCHHR+2(2),=H'0'         HIGH, ZERO OUT HH OF CCHHR
         LH    R8,CCHHR                 INSERT C OF CCHHR IN R8
         A     R8,=F'1'                 ADD 1 TO CYLINDAR
         STH   R8,CCHHR                 STORE C IN CCHHR
         C     R8,CYLPRVOL              COMPARE R8 TO CYLPRVOL
         BNH   SEEKFMT1                 BRANCH ON NOT HIGH TO SEEKFMT1
         ABEND 622,DUMP                 HIGH, ABEND 622
***********************************************************************
*                                                                     *
*        GET NEXT FORMAT DSCB, AND CHECK FOR FORMAT 1                 *
*                                                                     *
***********************************************************************
SEEKFMT1 CLC   CCHHR,LCCHHR             COMPARE ADDR TO LAST FMT1 ADDR
         BH    NEXTTIOT                 BRANCH IF HIGH TO GET NEXT TIOT
         SR    R15,R15                  CLEAR R15
         OBTAIN DSCBFMT                 GET FORMAT 1 DSCB
         C     R15,=F'0'                IS RETURN CODE = 0
         BE    CHKFMT1                  YES, BRANCH AROUND ABEND
         ABEND 623,DUMP                 NO, ABEND 623
CHKFMT1  CLI   DSCBAREA+44,X'F1'        IS FORMAT A FORMAT 1 DSCB
         BNE   INCRADDR                 NO, BRANCH TO INCRIMENT ADDRESS
         EJECT
***********************************************************************
*                                                                     *
*        CHECK FORMAT 1 DATA SET NAME FOR TEMPORARY DATA SETS         *
*                                                                     *
***********************************************************************
CHKDSN   CLC   DSCBAREA(3),=C'SYS'      COMPARE DSN = SYS
         BNE   INCRADDR                 NO, BRANCH TO INCRIMENT ADDR
         CLC   DSCBAREA+8(2),=C'.T'     ANOTHER CHECK
         BNE   INCRADDR                 NOT EQUAL, GO TO INCRADDR
         CLC   DSCBAREA+16(7),CNSTID    CHECK CONSTANT ANS SYSID
         BNE   INCRADDR                 NOT EQUAL, GO TO INCR ADDRESS
         LA    R7,DSCBAREA+23           POINT AT JOBNAME START
         LA    R8,8                     SET FOR MAX LENGTH OF JOBNAME
         SR    R2,R2                    CLEAR R2 FOR LENGTH FIELD
FINDEND  CLI   1(R7),C'.'               END OF JOBNAME FOUND ?
         BE    HAVEJOBN                 IF PERIOD THEN GOTO HAVEJOBN
         LA    R7,1(,R7)                POINT AT NEXT FIELD OF JOBNAME
         LA    R2,1(,R2)                INCR LENGTH OF JOBNAME
         BCT   R8,FINDEND               LOOP TILL JOBNAME IS FOUND
         ABEND 624,DUMP                 ABEND IF END NOT FOUND
HAVEJOBN MVC   JOBNAME,=CL8' '          RESET JOBNAME
         EX    R2,MVCJOBNM              SAVE JOBNAME
***********************************************************************
*                                                                     *
*        COMPARE JOBNAME TO JOBS/LOGONS/STC/MOUNTS CURRENTLY EXECUTING*
*                                                                     *
***********************************************************************
         L    R2,16                     GET CVT ADDR.
         L    R2,556(,R2)               GET ASVT ADDR.
         L    R3,516(,R2)               SAVE MAX ASCB ENTRIES
         LA   R4,524(,R2)               POINT AT FIRST ASCB (-4)
ASCBLOOP LA   R4,4(,R4)                 POINT AT NEXT ASCB
         ICM  R5,B'1111',0(R4)          VALID ASCB ?
         BM   MAXLOOP                   IF NOT VALID THEN BRANCH
         ICM  R6,B'1111',172(R5)        VALID BATCH JOBNAME POINTER ?
         BP   CHKJOBNM                  IF VALID JOBNAME THEN BRANCH
         ICM  R6,B'1111',176(R5)        VALID STC/MOUNT/LOGON PTR ?
         BM   MAXLOOP                   IF INVALID THAN BRANCH
CHKJOBNM CLC  JOBNAME,0(R6)             JOBNAMES EQUAL ?
         BE   INCRADDR                  IF EQUAL THEN DO NOT SERATCH
MAXLOOP  BCT  R3,ASCBLOOP
         EJECT
***********************************************************************
*                                                                     *
*        SCRATCH TEMPORARY DATA SET                                   *
*                                                                     *
***********************************************************************
         SR    R0,R0                    CLEAR R0
         MVC   DELNAME,DSCBAREA         MOVE DSN TO DELNAME
         MVC   SERIALNO,VOLNO           MOVE VOLNO TO SERIAL NO
         MVC   DSNAME,DSCBAREA          EDIT DSNAME AND
         MVC   VOLSERNO,VOLNO            VOL SER #
BYPASS   BC    0,LISTDSN                MODIFIED BRANCH <SEE PARM>
         SCRATCH DELDSN                 DELETE OLD DATA SET
         C     R15,=F'0'                RETURN CODE = 0
         BNE   ABEND625                 NO, GO TO ABEND625
         CLI   BINARYCD+1,X'0'          COMPARE BINARYCD TO 0
         BNE   ABEND625                 NOT EQUAL, GO TO ABEND625
         EJECT
***********************************************************************
*                                                                     *
*        EDIT SYSOUT PRINT LINE                                       *
*                                                                     *
***********************************************************************
LISTDSN  PUT   SYSPRINT,PRTDTL          WRITE PRTDTL TO PRINTER
         AP    LINECNT,=P'2'            ADD 2 TO LINE CNT
         CLC   LINECNT,=P'56'           PAGE OVERFLOW
         BL    INCRADDR                 NO, BRANCH TO INCR ADDR
         BAL   R10,PRTHDRS              BAL TO PRINT HEADERS
         B     INCRADDR                 BRANCH TO INCR ADDR
ABEND625 ABEND 625,DUMP                 ABEND 625
         EJECT
***********************************************************************
*                                                                     *
*        END OF ROUTINE                                               *
*                                                                     *
***********************************************************************
ENDPGM   CLOSE SYSPRINT
         L     R15,RETCODE              SET RETURN CODE
         TERME
         EJECT
***********************************************************************
*                                                                     *
*        PRINT HEADERS ROUTINE                                        *
*                                                                     *
***********************************************************************
PRTHDRS  MVI   HDR1,X'8B'               SET TO SKIP TO NEW PAGE
         PUT   SYSPRINT,HDR1            SKIP TO NEW PAGE
         MVI   HDR1,X'11'               SET TO SKIP 2 LINES
         PUT   SYSPRINT,HDR1
         PUT   SYSPRINT,HDR2
         ZAP   LINECNT,=P'5'
         BR    R10
BADPARM  MVC   PRTDTL+3(38),ERRORMSG
         MVC   STATFLD,=CL9' '
         PUT   SYSPRINT,PRTDTL
         MVC   RETCODE,=F'8'
         B     ENDPGM
         EJECT
***********************************************************************
*                                                                     *
*        WORKING STORAGE AREA                                         *
*                                                                     *
***********************************************************************
TIOTADDR DC    F'0'
RECPRTRK DC    F'0'
TRKPRCYL DC    F'0'
CYLPRVOL DC    F'0'
RETCODE  DC    F'0'
LCCHHR   DC    CL5' '
DSCBFMT4 CAMLST SEARCH,PADBYTES,VOLNO,DSCBAREA
DSCBFMT  CAMLST SEEK,CCHHR,VOLNO,DSCBAREA
         DS    0F
CCHHR    DC    CL5' '                   ABSOLUTE TRACK ADDRESS
VOLNO    DC    CL6' '                   VOLUME SERIAL NUMBER
DSCBAREA DS    0D                       FORMAT DSCB WORK AREA
         DC    CL148' '                      ON DOUBLE WORK BOUNDRY
DELDSN   CAMLST SCRATCH,DELNAME,,VOLIST,,OVRD
DELNAME  DC    CL44' '
VOLIST   DC    H'1'
DEVTYPE  DC    CL4' '
SERIALNO DC    CL6' '
BINARYCD DC    H'0'
MVCJOBNM MVC   JOBNAME(*-*),DSCBAREA+23
CNSTID   DS    0CL7
         DC    CL5'.RA00'
SYSID    DC    C' '
         DC    C'.'
HDR1     DS    0CL81
         DC    X'11'
         DC    CL20' '
         DC    CL34'    TEMPORARY DATA SETS ON SYSTEM '
HDR1ID   DC    CL1' '
         DC    CL25' '
HDR2     DS    0CL81
         DC    X'11'
         DC    CL40'   JOBNAME       TEMPORARY DATA SET NAME'
         DC    CL40'                   VOLSER      STATUS  '
PRTDTL   DS    0CL81
         DC    X'11'
         DC    CL3' '
JOBNAME  DC    CL8' '
         DC    CL4' '
DSNAME   DC    CL44' '
VOLSERNO DC    CL6' '
         DC    CL5' '
STATFLD  DC    CL9'SCRATCHED'
         DC    CL1' '
ERRORMSG DC    CL38'BADPARM PASSED - EXECUTION TERMINATED'
LISTCNST DC    CL9' LISTED'
LINECNT  DC    P'00'
PADBYTES DC    XL44'040404040404040404040404040404040404040404040404040"
               4040404040404040404040404040404040404'
JFCBPTR  DS    0F
         DC    X'87'
         DC    AL3(JFCBADDR)
JFCBADDR DS    CL176
DCBADDR  DCB   MACRF=(E),DSORG=PS,RECFM=F,DEVD=DA,KEYLEN=0,            C
               EXLST=(JFCBPTR)
SYSPRINT DCB   DSORG=PS,LRECL=81,RECFM=FM,DDNAME=SYSPRINT,EROPT=ACC,   C
               MACRF=PM,BLKSIZE=81
         END
