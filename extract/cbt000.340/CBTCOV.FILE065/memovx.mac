MEMOVX   TITLE 'BLOCK TRANSFER AND SHIFT MASK ROUTINE'
*
*      THIS FORTRAN CALLABLE SUBROUTINE WHICH TRANSFER A BLOCK OF N
* CONSECUTIVE WORDS BEGINNING AT LOCATION IA TO LOCATION IB WITH AN
* INTERMEDIATE SHIFT,MASK AND SHIFT PERFORMED BEFORE BEING STORED IN
* IB. BOTH SHIFTS ARE LEFT CIRCULAR. IF N IS LESS THAN 1 A MESSAGE
* WILL BE WRITTEN TO THE PROGRAMMER'S LOG WHEN THE SUBROUTINE IS CALLED
* BY A BATCH JOB ;THE MESSAGE IS WRITTEN TO THE USER'S TERMINAL IF
* CALLED BY A LOGON.  SIMILARLY, WHEN EITHER ISHFT1 OR ISHFT2 IS LESS
* 1 OR GREATER THAN 31 A MESSAGE WILL BE WRITTEN TO THE LOG OR TERMINAL
* DEPEND ON THE JOB IS BATCH OR INTERACTIVE. THE PROGRAM THEN ISSUES
* A U0900 ABEND.
*
* ENTRY POINTS AND ARGUMENTS:
*       CALL MEMOVX (IA,IB,N,ISHFT1,MASK,ISHFT2)
*
*      THE "MEMOVX" SUBROUTINE IS REENTRANT AND REUSEABLE.
*
MEMOVX   ENTER PARMREG=2,          SAVE REGISTERS AND INITIALIZE       X
               GETMAIN=(WORKSIZE,0)
         REGISTER                  REGISTER EQUATES
         USING WORKAREA,R13        ADDRESS WORK AREA DSECT
         LM    R4,R9,0(R2)
         L     R7,0(R7)            R7 HAS ISHFT1
         L     R9,0(R9)            R9 HAS ISHFT2
         ST    R7,IFT1
         ST    R9,IFT2
         L     R8,0(R8)            R8 HAS MASK
         L     R11,0(R6)           R11 HAS N
         C     R7,TTONE            COMPARE WITH 31
         BH    LPP                 IF GREATER GOES TO ERROR
         C     R7,ONE              COMPARE WITH ONE
         BL    LPP                 IF LESS GOES TO ERROR
         C     R9,TTONE            COMPARE WITH 31
         BH    LPP1
         C     R9,ONE
         BL    LPP1
         C     R11,ONE             COMPARE N WITH 1
         BL    LPP2                IF LESS GOES TO ERROR
         SR    R10,R10             ZERO OUT R10
         M     R10,FOUR            (N)*4
         LR    R12,R11             (N)*4 BYTE IN R12
         SR    R6,R6               ZERO OUT R6
LP       L     R11,0(R6,R4)        LOAD A WORD FROM IA 1 BY 1
         L     R7,IFT1
         L     R9,IFT2
LP2      SR    R10,R10             ZERO OUT R10
         SLDL  R10,1               SHIFT 1 BIT FROM R11 TO R10 FROM L
         C     R10,ONE             CHECK SEE IF THE BIT IS ONE OR 0
         BL    LP1                 IF IS ZERO GO TO LP1
         O     R11,MSK1            CHANGE BIT FROM ZERO TO ONE
LP1      BCT   R7,LP2              CHECK IF SHIFTED ALL BITS
         NR    R11,R8              DO THE MASK
LP4      SR    R10,R10             ZERO OUT R10
         SLDL  R10,1               SHIFT BIT IN R11 TO R10 1 AT A TIME
         C     R10,ONE             CHECK TO SEE IF THE BIT IS 1 OR 0
         BL    LP3
         O     R11,MSK1            CHANGE THE BIT TO 1
LP3      BCT   R9,LP4              CHECK SEE IF ALL ISHFT2 ARE SHIFTED
         ST    R11,0(R6,R5)        STORE SHIFT-MSK-SHIFT WORD TO PLACE
         A     R6,FOUR             INCREASE 4 BYTE
         CR    R6,R12              COMPARE WITH (N)*4
         BL    LP
         B     EXIT1
LPP      L     R8,ONE              SET FLAG FOR MESSAGE
         B     LPP4
LPP1     L     R8,TWO              SET FLAG FOR MESSAGE
         B     LPP4
LPP2     L     R8,THREE
LPP4     MVC   CALLST,CCALLST      MOVE CALL PARAMETER TO WORK
         LOAD  EP=AMIINT           LOAD SUBROUTINE TO GET JOB STATUS
         LR    R15,R0              SAVE ENTRY POINT ADDRESS
         CALL  (15),(WORK),        CALL  " AMIINT"                     X
               MF=(E,CALLST)
         CLC   WORK,ONE            IF RETURN VALUE FROM "AMIINT"<= 1
         BNH   BATCH                 THEN PROCESS WITH WTO
LOGON    C     R8,ONE
         BE    M1
         C     R8,TWO
         BE    M2
         B     M3
M1       DS    0H
         TPUT  WTOMSG1,L'WTOMSG1   WRITE MESSAGE 1 TO TERMINAL
         B     EXIT
M2       DS    0H
         TPUT  WTOMSG2,L'WTOMSG2   WRITE MESSAGE 2 TO TERMINAL
         B     EXIT
M3       DS    0H
         TPUT  WTOMSG3,L'WTOMSG3   WRITE MESSAGE 3 TO TERMINAL
         B     EXIT
BATCH    C     R8,ONE              BATCH JOB BRANCH TO
         BE    MM1                 GO TO SEND MSG WTOPRM1
         C     R8,TWO              COMAPRE WITH MESSAGE FLAG
         BE    MM2                 GO TO SEND MESSAGE
         B     MM3
MM1      DS    0H
         WTO   MF=(E,WTOPRM1)      WRITE MESSAGE 1 TO DAYFILE LOG
         B     EXIT
MM2      DS    0H
         WTO   MF=(E,WTOPRM2)      WRITE MESSAGE 2 TO DAYFILE LOG
         B     EXIT
MM3      DS    0H
         WTO   MF=(E,WTOPRM3)      WRITE MESSAGE 3 TO DAYFILE LOG
EXIT     DS    0H
         ABEND 900                 ABEND THE STEP
EXIT1    DS    0H
         LEAVE RETCODE=0,          RETURN TO CALLER                    X
               GETMAIN=(WORKSIZE,0)
ONE      DC    F'1'
TWO      DC    F'2'
THREE    DC    F'3'
FOUR     DC    F'4'
TTONE    DC    F'31'
MSK1     DC    X'00000001'
CCALLST  CALL  ,(),MF=L            CONSTANT CALL PARAMETER LIST
CCALLEN  EQU   *-CCALLST
WTOPRM1  WTO   'ILLEGAL ISHFT1 LESS THAN 1 OR GREATER THAN 31',        X
               ROUTCDE=11,MF=L
WTOLEN1  EQU   *-WTOPRM1
         ORG   WTOPRM1+4
WTOMSG1  DS    CL(WTOLEN1-4)
         ORG
WTOPRM2  WTO   'ILLEGAL ISHFT2 LESS THAN 1 OR GREATER THAN 31',        X
               ROUTCDE=11,MF=L
WTOLEN2  EQU   *-WTOPRM2
         ORG   WTOPRM2+4
WTOMSG2  DS    CL(WTOLEN2-4)
         ORG
WTOPRM3  WTO   ' ILLEGAL NUMBER OF WORDS WHICH IS LESS THAN 1',        X
               ROUTCDE=11,MF=L
WTOLEN3  EQU   *-WTOPRM3
         ORG   WTOPRM3+4
WTOMSG3  DS    CL(WTOLEN3-4)
         ORG
WORKAREA DSECT ,                   MAP OF GETMAINED WORK AREA
         DS    18A                 REGISTER SAVE AREA
IFT1     DS    F
IFT2     DS    F
WORK     DS    F
CALLST   DS    CL(CCALLEN)         CALL PARAMETER LIST
WORKSIZE EQU   *-WORKAREA
         END
