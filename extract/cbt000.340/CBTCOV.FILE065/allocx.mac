***********************************************************************
*WRITTEN: 12/30/92 BY TOM DIEN, LOS ANGELES TIMES (213) 237-5840
*
*FUNCTION: THIS PROGRAM PERFORM TWO DISTINCT FUNCTIONS IN ADDITION TO
*           FRONT-ENDING TSO'S ALLOCATE FACILITY.
*
*     1. USE ALLOCX TO ALLOCATE GDG DATASET UNDER TSO:
*
*          ALLOCX DS('ZITTDD.GDG(+1)') SPACE(2 2) TRA LRECL(...
*
*     2. USE ALLOCX TO PERFORM CATALOG SEARCH:
*
*          ALLOCX DSN=DSNAME.DSNAME  OR
*          ALLOCX DSN=DSNAME.DSNAME(+0) OR
*          ALLOCX DSN=DSNAME.DSNAME(+1)
*
*      OUTPUT RETURNED FROM OPTION 2:
*
*        123456 12345678901234567890123456789012345678901234
*        VOLSER DSNAME................................DSNAME
*
*    FOR OPTION NUMBER 2, YOU CAN TRAP OUTPUT WITH TSO'S SYSOUTTRAP
*    FOR ADDITIONAL PROCESSING.
*
*ATTRIBUTES: RENT,REFR,REUS
*
*OPERATIONS: SAME AS TSO ALLOCATE COMMAND
*
*         ALL TSO ALLOCATE COMMAND SYNTAX RULES WILL APPLY.
*
*         WHEN ALLOCX DETECTS (+1), IT WILL RESOLVE +1 WITH THE
*         PROPER GENERATION NUMBER CORRESPONDING TO (+1) THEN
*         CALLS TSO'S ALLOCATE.
*
*         AFTER SUCCESSFUL ALLOCATION, AN ALTER WILL BE DONE FOR THE
*         NEWLY ALLOCATED GENERATION.  THIS ALTER IS APPLICABLE ONLY
*         FOR SMS DATASET; NON-SMS DATASET WILL NOT BE AFFECTED.
*
*   THE ALTER IS NEEDED FOR SMS MANAGED DATASET TO ROLL-IN THE NEW
*   GDG, CHANGING STATUS FROM DEFERRED TO ACTIVE.
*
*PROGRAM LOGIC:
*
* PARAMETERS WILL BE PARSED TO LOCATE (+1) OR DSN= KEYWORD.
*
*  (+1) KEYWORD PROCESSING:
*   WHEN +1 IS FOUND GETMAIN IS DONE TO BUILD A NEW TSO CPPL
*   WITH LONGER CPPLCBUF.
*   STRETCH THE PARAMETERS OUT BY FIVE BYTES TO ACCOMMODATE THE FULLY
*   RESOLVED GDG NUMBER.
*   PERFORM CATALOG LOCATE TO OBTAIN THE GDG NUMBER.
*   CALL TSO'S ALLOCATE
*   AFTER ALLOCATE IS SUCCESSFUL, DETERMINE IF DATASET JUST ALLOCATED
*   SMS MANAGED.
*
*   FOR SMS DATASET, ALTER WILL BE DONE TO ROLL IN NEW GDG.
*
*   FOR NON-SMS DATASET, NO FURTHER ACTION IS NEEDED.
*
*  DSN= KEYWORD PROCESSING:
*   JUST PERFORM CATALOG SEARCH AND ISSUE TSO PUTLINE WITH VOLSER AND
*   FULLY RESOLVED GDG NUMBER IN RESPONSE TO THE INQUIRY.
*
*SEND INQUIRIES TO :
*    TOM DIEN, LOS ANGELES TIMES (213) 237=5840
*
*ATTRIBUTES: PROBLEM STATE, RENT,REFR,REUS
*             NO AUTHORIZATION REQUIRED
*
*INSTALLATION: ASSEMBLE AND LINK-EDIT ALLOCX INTO YOUR TSO LOGON
*               STEPLIB OR SYSTEMS LINKLST.
*
*              YOU CAN PLACE ALLOCX IN ISPLLIB BUT THAT RESTRICT
*              ITS USAGE TO ISPF ENVIRONMENT ONLY, NOT NATIVE TSO.
*
*EXAMPLE ALLOCX USAGE FROM CLIST:
*
* CONTROL NOMSG NOLIST   /* TO SUPPRESS IDCAMS ALTER MESSAGE NON-SMS*/
*
*#1ALLOCX DSN='YOUR.DATASET(+1)' /* A ONE LINE MESSAGE WILL BE RETURNED
*                              /* WITH VOLSER AND GDG NUMBER FOR DSN*/
*  /* #1 WILL RETURN NEW GDG TO BE ALLOCATED BELOW */
*#2ALLOCX DS('YOUR.DATASET(+1)') SPACE(2 2) TRA FI(DD1) LRECL(....
*
*  YOU CAN SKIP #1 IF YOU DO NOT WISH TO SEE THE VOLSER/DSNAME MESSAGE
*
*REMEMBER TO READ NOTE IN MIDDLE OF PROGRAM.  DO A "F NOTE" FROM HERE.
***********************************************************************
GDGALLOC CSECT
         YREGS
         SAVE  (14,12)
         LR    R12,R15                LOAD ENTRY ADDR
         USING GDGALLOC,R12           BASE IS R12
         LR    R11,R1
         USING CPPL,R11
         L     R8,CPPLUPT
         L     R9,CPPLECT
         GETMAIN R,LV=WORKLEN
         ST    R13,4(R1)              STORE CALLER'S SAVE ADDR
         ST    R1,8(R13)              OUR SAVE ADDR TO CALLER
         LR    R13,R1                 SETUP OUR SAVE ADDRESS
         USING WORKAREA,R13           BASE REG FOR WORKAREA
         MVC   TEXTADS,=H'83'
         MVC   WLOCLST(TLOCLEN),TLOCLST
         MVC   WDSNAME,=CL44' '
         XC    FLAG,FLAG
         XR    R2,R2
         XR    R3,R3
* PROCESS PARM
         L     R10,CPPLCBUF
         DROP  R11
         ICM   R2,B'0011',0(R10)
         ICM   R3,B'0011',2(R10)
         SH    R2,=H'4'
         SR    R2,R3           LENGTH OF PARAMETERS LESS CMD+4
         CH    R2,=H'1'
         BL    FINI
         AR    R10,R3
         LA    R10,4(R10)
* COSMETIC CONVIENENCE
         LR    R1,R10
         LA    R0,4
JUSTLOOK CLI   0(R1),C'='
         BE    JUSTLOCX
         LA    R1,1(R1)
         BCT   R0,JUSTLOOK
* END COSMETIC CONVIENENCE
LOOKDS   DS    0H
         CLC   =C'(+1)',0(R10)
         BE    GOTDS
         LA    R10,1(R10)
         BCT   R2,LOOKDS
         B     NOTPROC1
JUSTLOCX DS    0H
         SR    R1,R10
         LA    R1,1(R1)
JUSTLOC  DS    0H
         SR    R2,R1
         LR    R5,R2
         BCTR  R5,0
         CH    R5,=H'44'
         BH    BAD
         OC    0(0,R10),WDSNAME
         EX    R5,*-6
BAD      AR    R10,R1
         OI    FLAG,WRITE
         CLI   0(R10),X'7D'
         BNE   LOCX
         LA    R10,1(R10)
         BCTR  R5,0
         LR    R0,R5
         LR    R1,R10
         AR    R1,R0
         MVI   0(R1),C' '
         B     LOCX
GOTDS    DS    0H
         XR    R4,R4
         L     R5,0(R11)
         ICM   R4,B'0011',0(R5)
         LR    R3,R4
         AH    R4,=H'5'
         GETMAIN R,LV=(4),SP=1
         OI    FLAG,FREESP1
         ST    R1,0(R11)
         SR    R3,R2
         BCTR  R3,0
         MVC   0(0,R1),0(R5)      MOVE PART A OF PARM
         EX    R3,*-6
         STCM  R4,B'0011',0(R1)    INCREASE TOTAL LENGTH BY 5 BYTES
         AR    R1,R3
         SH    R2,=H'5'
         MVC   10(0,R1),4(R10)    MOVE PART B OF PARM
         EX    R2,*-6
         LR    R10,R1
         LR    R5,R10
         LA    R0,44
         CH    R2,=H'44'
         BH    LOOKDS2
         LR    R0,R2
LOOKDS2  BCTR  R10,0
         CLI   0(R10),X'7D'
         BE    GOTDS2
         CLI   0(R10),X'4D'
         BE    GOTDS2
         CLI   0(R10),X'40'
         BE    GOTDS2
         BCT   R0,LOOKDS2
         B     NOTPROC1
GOTDS2   DS    0H
         LA    R10,1(R10)   BEGINNING OF DATASETNAME
         SR    R5,R10
         CH    R5,=H'44'
         BH    NOTPROC1
LOCX     DS    0H
         OC    0(0,R10),WDSNAME
         EX    R5,*-6
         MVC   WDSNAME(0),0(R10)
         EX    R5,*-6
         TM    FLAG,WRITE
         BO    LOCX2
         LA    R7,WDSNAME
         AR    R7,R5
         MVC   1(4,R7),=C'(+1)'
LOCX2    DS    0H
         LA    R1,WDSNAME
         ST    R1,WLOCLST+4
         LA    R1,WKLOCATE
         ST    R1,WLOCLST+12
         LOCATE WLOCLST
         LA    R5,9(R5)
         MVC   0(0,R10),WDSNAME
         EX    R5,*-6
         LTR   R15,R15
         BZ    RESUME
NOTPROC1 DS    0H
         OI    FLAG,NOTGDG
RESUME   DS    0H
         TM    FLAG,WRITE
         BO    JUSTWRITE
         LR    R1,R11
         LINK  EP=ALLOCATE
         LTR   R15,R15
         BNZ   FINI
         TM    FLAG,NOTGDG
         BO    FINI
* NOTE:
* FOR 100% NON-SMS SHOP, YOU MAY JUST INSERT A "B FINI" TO AVOID THE
* OVERHEAD OF CATALOG SEARCH AND VTOC READ TO DETERMINE IF THE DATASET
* IS SMS MANAGED SO AN ALTER CAN BE ISSUED FOR THE NEWLY ALLOCATED GDG.
* JUST UNCOMMENT THE FOLLOWING LINE FOR 100% NON-SMS SHOP
*        B     FINI
*  IT IS ACTUALLY A VERY GOOD IDEA TO PERFORM THE ALTER REGARDLESS
*  OF SMS OR NON-SMS.  AFTER YOU CONVERT TO SMS, NEW GDG ALLOCATED
*  WILL NOT BE RECOGNIZED UNTIL ROLLED-IN OR END-OF-JOB OR END-OF
*  TSO SESSION.  SO UNCOMMENTING THE ABOVE LINE IS NOT RECOMMENDED
*  DO SO AT YOUR OWN RISK.  YOU MAY SAVE ONLY A FEW MINI-SECONDS
*  OVERHEAD NOW, BUT WILL HAVE TO REVISIT THIS PROGRAM LATER AFTER SMS.
* START OPTIONAL SMS INDICATOR SEARCH
         LOCATE WLOCLST
         LTR   R15,R15
         BNZ   ALTER
         MVI   WLOCLST,X'C1'
         LA    R1,WKLOCATE+6
         ST    R1,WLOCLST+8
         OBTAIN WLOCLST
         LTR   R15,R15
         BNZ   ALTER
         TM    DS1SMSFG,DS1SMSDS
         BZ    FINI
* END OPTIONAL SMS INDICATOR SEARCH
ALTER    MVC   WDSNAME-13(4),=XL4'003F0008'
         MVC   WDSNAME-9(8),=CL8'ALTER'
         MVI   WDSNAME-1,C''''
         MVC   WDSNAME+44(8),=CL8' '
         LA    R3,44
         LA    R2,WDSNAME
DSNSCAN  CLI   0(R2),C' '
         BE    LASTBYTE
         LA    R2,1(R2)
         BCT   R3,DSNSCAN
         B     BYTE45
LASTBYTE DS    0H
         MVI   0(R2),C' '
         BCTR  R3,0
         MVC   1(0,R2),0(R2)
         EX    R3,*-6
BYTE45   MVI   0(R2),C''''
         MVC   WDSNAME+46(5),=C' ROL '
         LA    R1,WDSNAME-13
         ST    R1,0(R11)
         MVC   12(8,R9),WDSNAME-9
         LR    R1,R11
         LINK  EP=ALTER
FINI     DS    0H
         TM    FLAG,FREESP1
         BZ    HUMSAY
         FREEMAIN R,SP=1
HUMSAY   LR    R1,R13
         L     R13,4(R13)
         FREEMAIN R,LV=WORKLEN,A=(1)
         RETURN (14,12),RC=0
JUSTWRITE DS   0H
         MVC   MSG1(6),WKLOCATE+6
         MVC   MSG1+7(L'WDSNAME),WDSNAME
         LTR   R15,R15
         BZ    WRITEDSN
         MVC   MSG1(6),=CL6'ERROR'
WRITEDSN BAL   R11,TSOPUTL
         B     FINI
TSOPUTL  DS    0H
         XC    TEXTADS+2(2),TEXTADS+2
         XC    IOPLADS,IOPLADS
         PUTLINE PARM=PUTBLOK,UPT=(8),ECT=(9),ECB=ECBADS,              X
               OUTPUT=(TEXTADS,TERM,SINGLE,DATA),MF=(E,IOPLADS)
         XC    MSG1,MSG1
         BR    R11
*
TLOCLST  CAMLST NAME,0,,0
TLOCLEN  EQU   *-TLOCLST
NOTGDG   EQU   1
WRITE    EQU   2
FREESP1  EQU   4
***********************************************************************
* WORKAREA
***********************************************************************
WORKAREA DSECT
SAVEAREA DS    18F              SAVE AREA
FLAG     DS    X
WLOCLST  DS    0F,CL(TLOCLEN)
WDSNAME  DC    CL44' '
WKLOCATE DS    0D,CL265       WORK AREA FOR LOCATE AND OBTAIN
         ORG   WDSNAME
         IECSDSL1 (1)        INCORPORATE MAPPING MACRO FOR FORMAT1
         ORG   ,
*
ECBADS   DS    F
PUTBLOK  PUTLINE MF=L
TEXTADS  DC    H'84'
         DC    H'0'
MSG1     DS    CL(80)
IOPLADS  DC    4F'0'
*
WORKLEN  EQU   *-WORKAREA
         DCBD  DSORG=PS,DEVD=DA
         IEFJFCBN
         IKJCPPL
*
         END
