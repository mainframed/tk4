CPYBLK   TITLE 'SUBROUTINE WHICH COPIES SEQUENTIAL DATA SETS'
***********************************************************************
*
*      THIS PROGRAM COPIES A SEQUENTIAL DATA SET FROM ONE DDNAME TO
* ANOTHER USING BSAM.  THE DCB ATTRIBUTES OF THE INPUT DATASET ARE
* COPIED TO THE OUTPUT DATASET.  RECFM=U IS NOT SUPPORTED.
*
*      THIS ROUTINE IS INTENDED TO BE USED ON VBS DATASETS WHICH HAVE
* BEEN CREATED BY FORTRAN AND HAVE EITHER LRECL=X OR RECORDS WHOSE
* LENGTH EXCEEDS THE RECORD LENGTH DEFINED IN THE DCB.
*
* THE CALLING SEQUENCE FOR "CPYBLK" IS AS FOLLOWS:
*           1. THE INPUT DDNAME (8-BYTE CHARACTER)
*           2. THE OUTPUT DDNAME (8-BYTE CHARACTER)
*
* BOTH THE INPUT AND OUTPUT DATA SETS MUST BE CLOSED WHEN "CPYBLK" IS
* CALLED.
*
*      THE "CPYBLK" SUBROUTINE IS REENTRANT AND REUSEABLE.
*
***********************************************************************
CPYBLK   ENTER PARMREG=2,          SAVE REGISTERS AND INITIALIZE       X
               GETMAIN=(WORKSIZE,0)
         REGISTER                  REGISTER EQUATES
         USING WORKAREA,R13        ADDRESS WORK AREA DSECT
         LM    R6,R7,0(R2)         POINT TO DDNAMES
         MVC   INPUT,CINPUT        MOVE INPUT DCB TO WORK AREA
         MVC   OUTPUT,COUTPUT      MOVE OUTPUT DCB TO WORK AREA
         MVC   OPENLST,COPENLST    MOVE OPEN PARAMETER LIST TO WORK
*
*     OPEN THE INPUT DCB
*
         USING IHADCB,R4           ADDRESS DCB DSECT
         LA    R4,INPUT            POINT TO INPUT DCB
         MVC   DCBDDNAM,0(R6)      MOVE INPUT DDNAME INTO DCB
         OPEN  ((R4)),             OPEN THE INPUT DCB                  X
               MF=(E,OPENLST)
         MVC   SAVRECFM,DCBRECFM   SAVE THE INPUT RECFM
         MVC   SAVLRECL,DCBLRECL   SAVE THE INPUT LRECL
         MVC   SAVBLKSI,DCBBLKSI   SAVE THE INPUT BLOCKSIZE
*
*     DETERMINE THE SIZE OF THE INPUT BLOCKSIZE AND GET SOME CORE
*
         SLR   R12,R12             ZERO R12
         ICM   R12,3,DCBBLKSI      LOAD AND TEST THE BLOCKSIZE
         GETMAIN RU,LV=(R12)       GET THE CORE
         LR    R11,R1              SAVE ITS ADDRESS
         USING BLOCK,R11           ESTABLISH ADDRESSABILITY
         DROP  R4
         USING IHADCB,R5           ADDRESS DCB DSECT
         LA    R5,OUTPUT           POINT TO OUTPUT DCB
*
*     COPY INPUT DCB INFO TO OUTPUT DCB
*
         MVC   DCBDDNAM,0(R7)          MOVE OUTPUT DDNAME INTO DCB
         MVC   DCBRECFM,SAVRECFM
         MVC   DCBLRECL,SAVLRECL
         MVC   DCBBLKSI,SAVBLKSI
*
*     OPEN THE OUTPUT DCB
*
         OPEN  ((R5),OUTPUT),      OPEN THE OUTPUT DCB                 X
               MF=(E,OPENLST)
*
*     DO THE COPY
*
LOOP     DS    0H
         READ  INPDECB,SF,INPUT,BLOCK,MF=E
         CHECK INPDECB                 WAIT FOR COMPLETION OF READ
         LH    R6,SAVBLKSI             LOAD INPUT BLOCKSIZE
         L     R7,INPDECB+16           LOAD PTR TO IOB
         SH    R6,14(R7)               COMPUTE BYTES READ
         STH   R6,DCBBLKSI             STUFF IT IN OUTPUT DCB
         WRITE OUTDECB,SF,OUTPUT,BLOCK,MF=E
         CHECK OUTDECB                 WAIT FOR COMPLETION OF WRITE
         B     LOOP                    GO COPY ANOTHER BLOCK
*
*     CLEANUP
*
EODAD    DS    0H
         LA    R4,INPUT                POINT TO INPUT DCB
         LA    R5,OUTPUT               POINT TO OUTPUT DCB
         CLOSE ((R4)),                 CLOSE THE INPUT DCB             X
               MF=(E,OPENLST)
         CLOSE ((R5)),                 CLOSE THE OUTPUT DCB            X
               MF=(E,OPENLST)
         FREEMAIN RU,LV=(R12),A=(R11)  FREE THE BLOCK BUFFER
         LEAVE RETCODE=0,              RETURN TO CALLER                X
               GETMAIN=(WORKSIZE,0)
*
*     CONSTANTS
*
ZERO     DC    H'0'
COPENLST OPEN  ZERO,MF=L           INITIAL OPEN PARAMETER LIST
OPENLN   EQU   *-COPENLST          LENGTH OF OPEN PARAMETER LIST
CINPUT   DCB   DDNAME=INPUT,       INITIAL INPUT DCB                   X
               MACRF=R,EODAD=EODAD,DSORG=PS
INPUTLN  EQU   *-CINPUT            LENGTH OF INPUT DCB
COUTPUT  DCB   DDNAME=OUTPUT,      INITIAL OUTPUT DCB                  X
               MACRF=W,DSORG=PS
OUTPUTLN EQU   *-COUTPUT           LENGTH OF OUTPUT DCB
*
*     DSECTS
*
         PRINT GEN
WORKAREA DSECT ,                   MAP OF GETMAINED WORK AREA
         DS    18A                 REGISTER SAVE AREA
INPDECB  DS    5F
OUTDECB  DS    5F
INPUT    DS    CL(INPUTLN)
OUTPUT   DS    CL(OUTPUTLN)
SAVRECFM DS    XL1                 COPY OF INPUT DCB RECFM
SAVLRECL DS    H                   COPY OF INPUT DCB LRECL
SAVBLKSI DS    H                   COPY OF INPUT DCB BLKSIZE
WORKADDR DS    F                   COPY OF MAIN ROUTINE'S WORKAREA ADDR
OPENLST  DS    CL(OPENLN)
WORKSIZE EQU   *-WORKAREA          LENGTH OF WORK AREA
BLOCK    DSECT
         PRINT NOGEN
         DCBD  DSORG=PS            MAP OF DCB
         END
