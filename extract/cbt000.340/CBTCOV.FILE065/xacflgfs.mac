XACFLGFS TITLE 'PRE-LOGON FULL SCREEN PROGRAM'
*
*        THIS  PROGRAM IS THE PRE-LOGON FULL SCREEN EDITING PANEL.
*
*        PARMS -FIVE ARGUMENTS ARE PASSED
*
*            1. ADDRESS OF PROGRAMMERS NAME FIELD    (20 BYTES).
*            2. ADDRESS OF PROGRAMMERS ACCT FIELD    (40 BYTES).
*            3. ADDRESS OF TSO REGION SIZE FIELD     (4 BYTES).
*            4. ADDRESS OF PROGRAMMERS ROOM NUMBER   (4 BYTES).
*            5. ADDRESS OF FIRST COMMAND FIELD       (20 BYTES).
*
*       CALLS: XACFLGTM - FOR TGET AND TEST FOR TIME OUT
*
*        **** "XACFLGFS" IS REENTRANT AND REUSEABLE ****
*
*
XACFLGFS ENTER REGEQUS=YES,PARMREG=2,   START HERE WITH REGISTER EQUS, +
               GETMAIN=(WORKSIZE,0)     REG 2 FOR PARMS, AND SOME CORE
         USING WORKAREA,R13             TELL THE ASSEMBLER
         MVC   SAVEPARM(20),0(R2)       SAVE THE PARM STRING
AGAIN    DS    0H
         LA    R4,IOAREA                GET ADDRESS OF IOAREA
         LA    R5,SCRSIZE               GET THE SCREEN SIZE
         LA    R6,SCREEN                GET ADDRESS OF SCREEN
         LR    R7,R5                    SIZE IS THE SAME
         MVCL  R4,R6                    MOVE ALL THE STUFF
*
         LM    R4,R8,SAVEPARM           GET THE PARM ADDRESSES
         LA    R9,IOAREA                GET ADDRESS OF IOAREA
         MVC   L1(20,R9),0(R4)          MOVE IN PROGRAMMER NAME
         MVC   L2(40,R9),0(R5)          AND ACCOUNTING INFO
         MVC   L3(4,R9),0(R6)           AND REGION SIZE
         MVC   L4(4,R9),0(R7)           AND ROOM NUMBER
         MVC   L5(20,R9),0(R8)          AND FIRST COMMAND
*
*    DISPLAY THE SCREEN AND DATA
*
         TPUT  IOAREA,SCRSIZE,FULLSCR   WRITE THE SCREEN
*
*   CALL XACFLGTM FOR TGET AND CHECK TIME LIMIT
*
         L     R15,@ACFLGTM             GET ADDRESS OF TIMER ROUTINE
         MVI   TGPARM,ASISPRM           SET TGET PARMS
         CALL  (15),                    AND CALL IT                    +
               (IOAREA,SCRSIZE,TGPARM),                                +
               MF=(E,PARMLIST)
         LTR   R15,R15                  WAS THE CALL GOOD
         BNZ   RETURN                   NOPE, -->
         CLI   IOAREA,X'6E'             WAS IT A SHORT READ?
         BE    AGAIN                    YEP, --> TRY AGAIN
*
         LA    R4,IOAREA                GET ADDRESS OF IOAREA
         LR    R8,R4                    PUT IT IN REG 8
         L     R1,TGPARM                GET SIZE OF READ
         BCTR  R1,0                     BACKUP ONE
         AR    R8,R1                    CALC LAST BUFFER ADDRESS
         LA    R4,4(R4)                 POINT PAST SBA
         LA    R5,BUFFTBL               GET ADDRESS OF BUFFER TABLE
*
CHKNEXT  CLC   0(2,R4),0(R5)            IS THIS A GOOD ADDRESS?
         BE    FOUND1                   YEP, --> OK
         CLI   0(R5),X'FF'              LAST ENTRY IN TABLE?
         BE    EXIT                     YEP, --> ALL DONE
         LA    R5,4(R5)                 GET NEXT ENTRY
         B     CHKNEXT                  TRY AGAIN
*
FOUND1   DS    0H
         MVC   MOVEAREA,BLANKS          CLEAR MOVE AREA
         LA    R4,2(R4)                 POINT PAST BUFFER ADDRESS
         LA    R6,MOVEAREA              GET ADDRESS OF MOVE AREA
FOUND2   CR    R8,R4                    IS IT THE LAST CHARACTER?
         BL    MOVEDONE                 YEP, -->
         CLI   0(R4),X'11'              IS IT AN SBA?
         BE    MOVEDONE                 YEP, -->
         MVC   0(1,R6),0(R4)            MOVE BYTE TO MOVE AREA
         LA    R4,1(R4)                 BUMP INPUT 1 BYTE
         LA    R6,1(R6)                 BUMP OUTPUT 1 BYTE
         LA    R9,1(R9)                 BUMP CHARACTER COUNT
         B     FOUND2                   --> NEXT BYTE
*
MOVEDONE DS    0H
         OC    MOVEAREA,BLANKS          MAKE IT CAPS ONLY
         XR    R1,R1                    CLEAR REG 1
         IC    R1,2(R5)                 INSERT POINTER DISPLACEMENT
         LA    R7,SAVEPARM              GET ADDRESS OF POINTERS
         L     R7,0(R1,R7)              FIND THE RIGHT ONE
         XR    R1,R1                    CLEAR REG 1
         IC    R1,3(R5)                 INSERT CHARACTER COUNT
         BCTR  R1,0                     SET UP FOR MVC INSTRUCTION
         EX    R1,EXMOVE                EXEC MOVE INSTRUCTION
         LA    R4,1(R4)                 POINT TO NEXT INPUT ENTRY
         LA    R5,4(R5)                 POINT TO NEXT BUFFER ADDRESS
         B     CHKNEXT                  --> CHECK NEXT ENTRY
*
EXIT     DS    0H
         TPUT  CLEAR,L'CLEAR,FULLSCR    CLEAR THE SCREEN
         XR    R15,R15                  CLEAR THE RETURN CODE
RETURN   LEAVE GETMAIN=(WORKSIZE,0),    GIVE BACK THE CORE             +
               RETCODE=(15)             SET THE RETURN CODE + GO
         DS    0F
*
*
*
EXMOVE   MVC   0(0,R7),MOVEAREA         MOVE DATA FOR EX INSTRUCTION
*
*
*
         TITLE ' DATA CONSTANTS AND TABLES'
*
ASISPRM  EQU   X'91'                    TGET ASIS,NOWAIT
*
CLEAR    DC    X'F31140403C404000'      JUNK THAT CLEARS THE SCREEN
*
BLANKS   DC    CL40' '                  BLANK AREA FOR CLEARS
*
*
BUFFTBL  EQU   *
         DC    X'C2F9',AL1(0),AL1(20)  BYTES 1&2 ARE BUFFER ADDRESS
         DC    X'C5D9',AL1(4),AL1(40)  BYTE 3 IS POINTER DISPLACEMENT
         DC    X'C7F9',AL1(8),AL1(4)   BYTE 4 IS LENGTH OF MOVE
         DC    X'4AD9',AL1(12),AL1(4)
         DC    X'4CF9',AL1(16),AL1(20)
TBLEND   DC    X'FFFFFF'                END OF TABLE FLAGS
*
*
         TITLE ' FULL SCREEN DEFINITION   '
*
*
SCREEN   DS    0H
         DC    X'F3'
         DC    X'1140D33C40D3001DE8'
         DC    C'FLUOR IRVINE PRE-LOGON ACCOUNTING SCREEN'
         DC    X'11C2601DE4'
         DC    C' PROGRAMMER NAME =====>'
         DC    X'11C2F81DC4'
L1       EQU   *-SCREEN
         DC    20C' '
         DC    X'11C34D1DE4'
         DC    X'11C540'
         DC    C'  ACCOUNTING STRING ===>'
         DC    X'11C5D81DC4'
L2       EQU   *-SCREEN
         DC    40C' '
         DC    X'11C6C11DE4'
         DC    X'11C760'
         DC    C'  REGION SIZE =========>'
         DC    X'11C7F81DC4'
L3       EQU   *-SCREEN
         DC    4C' '
         DC    X'11C77D1DE4'
         DC    X'114A40'
         DC    C'  BAY NUMBER ==========>'
         DC    X'114AD81DC4'
L4       EQU   *-SCREEN
         DC    4C' '
         DC    X'114A5D1DE4'
         DC    X'114C60'
         DC    C'  FIRST COMMAND =======>'
         DC    X'114CF81DC4'
L5       EQU   *-SCREEN
         DC    20C' '
         DC    X'114D4C1DE8'
         DC    X'114F4E'
         DC    C'** MODIFY FIELDS FOR THIS SESSION, THEN "ENTER" **'
         DC    X'11C2F80513'
SCRSIZE  EQU   *-SCREEN
*
@ACFLGTM DC    V(XACFLGTM)             ADDRESS OF TIMER ROUTINE
*
         TITLE ' DSECT AREAS'
WORKAREA DSECT
SAVEADDR DS    18F                      SAVE AREA
SAVEPARM DS    5F                       SAVE PARM AREA
PARMLIST DS    3F                       SAVE PARM AREA
TGPARM   DS    F                        LENGTH OF READ FROM TGET
IOAREA   DS    CL(SCRSIZE)              IO AREA FO TPUT TGET
MOVEAREA DS    CL40                     WORK AREA FOR MOVES
WORKSIZE EQU   *-WORKAREA               END.............
         END
