         TITLE 'INTERNAL MACROS'
         MACRO
         IHADQE
DQE      DSECT
DQFQEPTR DS    F
DQEPTR   DS    F
DQEHRID  DS    C
         ORG   DQEHRID
DQEBLKAD DS    F
DQELNTH  DS    F
         MEND
         MACRO
         IHAPFTE
PFTE     DSECT
PFTPGID  DS    F
         ORG   PFTPGID
PFTASID  DS    H
PFTVBN   DS    H
PFTQPTRS DS    F
         ORG   PFTQPTRS
PFTFQPTR DS    H
PFTBQPTR DS    H
PFTFXCT  DS    H
PFTRSV1  DS    H
PFTFLAG1 DS    C
PFTFLAG2 DS    C
PFTQNDX  DS    C
PFTUIC   DS    C
PFTEND   DS    0F
         MEND
         MACRO
         IHAPQE
PQE      DSECT
PQEFFBQE DS    F
PQEBFBQE DS    F
PQEFPQE  DS    F
PQEBPQE  DS    F
PQETCB   DS    F
PQESIZE  DS    F
PQEREGN  DS    F
PQERFLGS DS    BL1
PQEHRID  DS    C
VMMFLGS  DS    BL1
VVVRFLG  EQU   1
PQERSVD  DS    C
         MEND
         MACRO
&L       FILL  &A,&B,&C
         LCLA  &LEN
         LCLC  &R
         AIF   ('&C'(1,1) NE '(').A
&LEN     SETA  K'&C-2
&R       SETC  '&C'(2,&LEN)
&L       LR    R1,&R
         AGO   .B
.A       ANOP
&L       L     R1,&C
.B       CVD   R1,DECIMAL
         MVC   FORMAT,EDITD
         ED    FORMAT,DECIMAL+4
         AIF   ('&A'(1,1) NE '(').C
&LEN     SETA  K'&A-2
&R       SETC  '&A'(2,&LEN)
         MVC   0(&B,&R),FORMAT+8-&B
         AGO   .D
.C       MVC   &A.(&B),FORMAT+8-&B
.D       MEND
         SPACE 2
         MACRO
&L       KFILL &A,&B,&C
         LCLA  &LEN
         LCLC  &R
         AIF   ('&C'(1,1) NE '(').A
&LEN     SETA  K'&C-2
&R       SETC  '&C'(2,&LEN)
&L       LR    R1,&R
         AGO   .B
.A       ANOP
&L       L     R1,&C
.B       SRL   R1,10
         CVD   R1,DECIMAL
         MVC   FORMAT,EDITK
         ED    FORMAT+1(6),DECIMAL+5
         AIF   ('&A'(1,1) NE '(').C
&LEN     SETA  K'&A-2
&R       SETC  '&A'(2,&LEN)
         MVC   0(&B,&R),FORMAT+8-&B
         AGO   .D
.C       MVC   &A.(&B),FORMAT+8-&B
.D       MEND
         SPACE 2
         MACRO
&L       HFILL &A,&B
         LCLA  &LEN
         LCLC  &R
         AIF   ('&B'(1,1) NE '(').A
&LEN     SETA  K'&B-2
&R       SETC  '&B'(2,&LEN)
&L       LR    R1,&R
         AGO   .B
.A       ANOP
&L       L     R1,&B
.B       STCM  R1,7,DECIMAL
         UNPK  FORMAT(7),DECIMAL(4)
         TR    FORMAT(6),HEXTBL-240
         AIF   ('&A'(1,1) NE '(').C
&LEN     SETA  K'&A-2
&R       SETC  '&A'(2,&LEN)
         MVC   0(6,&R),FORMAT
         AGO   .D
.C       MVC   &A.(6),FORMAT
.D       MEND
         SPACE 2
         MACRO
&L       PFILL &A,&B,&C,&D
         LCLA  &LEN
         LCLC  &R
         AIF   ('&C'(1,1) NE '(').A
&LEN     SETA  K'&C-2
&R       SETC  '&C'(2,&LEN)
&L       LR    R1,&R
         AGO   .B
.A       ANOP
&L       L     R1,&C
.B       MH    R1,=H'10000'
         SR    R0,R0
         AIF   ('&D'(1,1) NE '(').C
&LEN     SETA  K'&D-2
&R       SETC  '&D'(2,&LEN)
         DR    R0,&R
         AGO   .D
.C       D     R0,&D
.D       CVD   R1,DECIMAL
         MVC   FORMAT,EDITP
         ED    FORMAT+1(7),DECIMAL+5
         AIF   ('&A'(1,1) NE '(').E
&LEN     SETA  K'&A-2
&R       SETC  '&A'(2,&LEN)
         MVC   0(&B,&R),FORMAT+8-&B
         AGO   .F
.E       MVC   &A.(&B),FORMAT+8-&B
.F       MEND
LPAMAP   TITLE 'LINK PACK AREA MONITOR'
         SPACE 2
*  FUNCTION:  LPAMAP EXAMINES THE CONTENTS OF THE PAGE FRAME TABLE AND
*       THE ACTIVE LPA QUEUE ON A TIMER SAMPLED BASIS TO DETERMINE MVS
*       LINK PACK AREA WORKING SET.
         SPACE 1
*  ENTRY POINT:  ENTER AT LPAMAP WITH NORMAL MVS LINKAGE CONVENTIONS.
         SPACE 1
*  INPUT:  THE PARAMETER FIELD REFERENCED BY REG 1 BEGINS WITH A HALF
*       WORD CONTAINING THE LENGTH OF THE PARAMETER STRING FOLLOWED BY
*       THE STRING.  THE STRING CONSISTS OF A SERIES OF PARAMETERS
*       SEPERATED BY COMMAS. THE FOLLOWING PARAMETERS ARE SUPPORTED:
*
*         TIME=XXX    THE WAIT INTERVAL IN SECONDS  (DEFAULT 5)
*         COUNT=XXX   THE NUMBER OF SAMPLES  (DEFAULT 120)
*         NAME        PRINT MODULE NAMES ON PAGE USAGE REPORT (DEFAULT)
*         NONAME      SUPPRESS PRINT OF LPA MODULE NAMES
*         ACTIVE      MONITOR ACTIVE LPA QUEUE  (DEFAULT)
*         NOACTIVE    DON'T MONITOR ACTIVE LPA QUEUE
         SPACE 1
*  OUTPUT:  A REPORT OF COMMON AREA PAGE USAGE, FIXED LPA USAGE, AND A
*       REPORT FOR EACH 4K PAGE IN LPA WITH AN OPTIONAL LISTING OF THE
*       MODULES WITHIN THAT PAGE AND THE FREQUENCY OF OCCURANCE OF THE
*       MODULE ON THE ACTIVE LPA QUEUE.
         SPACE 1
*  JCL:  A SYSPRINT DD CARD MUST BE PROVIDED.
         SPACE 1
*  EXIT:  THE PROGRAM ISSUES THE FOLLOWING RETURN CODES:
*         0  SUCCESSFUL COMPLETION
*         4  ERROR IN PARAMETER STRING - EXECUTION TERMINATED
*         8  NO SYSPRINT - EXECUTION TERMINATED
         SPACE 1
*  LIMITATIONS:  VERSION 1 DOES NOT MONITOR MODIFIED LPA USAGE SINCE AT
*       PRESENT THIS MVS OPTION IS NOT USED.
         SPACE 1
* NOTES: LPAMAP USES MACROS IN SYS1.AMODGEN SO THAT LIBRARY SHOULD
*       BE CONCATENATED TO SYS1.MACLIB IN THE SYSLIB CARD.
         SPACE 1
*       LPAMAP MUST BE LINKED TO AN AUTHORIZED LIBRARY WITH AC(1).
*       THE PROGRAM USES A MODESET FOLLOWED BY A DONTSWAP REQUEST TO
*       THE SRM TO AVOID SWAPPING DELAYS.  LPAMAP SHOULD BE RUN AT A
*       DPRTY=(15,14) TO AVOID DISPATCHING DELAYS AND MODIFICATION OF
*       FRAME ENTRIES AND ACTIVE LPA CHAIN WHILE A SCAN IS IN PROGRESS.
         SPACE 1
*       THERE IS RELEASE DEPENDENT CODE TO CALCULATE THE SIZE OF THE
*       FIXED BLDL TABLE.  THE OFFSET IS THE DISTANCE FROM IGC018
*       (BLDL) TO IEARESBL AND CAN BE OBTAINED FROM A NUCLEUS MAP.
         SPACE 1
*  VERSION:  THIS IS VERSION 1 WRITTEN JULY 1976 BY STEVEN ANDERSON
*       OSS GROUP OF ISPL  TRW SYSTEMS GROUP
         TITLE 'EXTERNAL INITIALIZATION'
         PRINT NOGEN
LPAMAP   CSECT
         STM   R14,R12,12(R13)
         BALR  R12,0
         USING *,R12,R11
         LA    R11,2048            ESTABLISH
         LA    R11,2048(R11,R12)   SECOND BASE
         LA    R10,SAVEAREA        ESTABLISH
         ST    R10,8(,R13)          SAVE
         ST    R13,4(,R10)           AREA
         LR    R13,R10                CHAINING
         SPACE 2
*  EXAMINE THE PARAMETERS FOR THIS RUN
         SPACE 2
PARMS    L     WK1,0(,R1)          -> PARAMETER FIELD
         LH    WK2,0(,WK1)         LENGTH OF PARAMETER FIELD
         LTR   WK2,WK2             LENGTH OF ZERO
         BZ    OPENPRT             GO OPEN SYSPRINT DATASET
         LA    WK1,2(,WK1)         -> FIRST PARAMETER
NEXTPARM CLC   0(4,WK1),=C'NAME'
         BE    SETNAME
         CLC   0(6,WK1),=C'NONAME'
         BE    SETNONAM
         CLC   0(6,WK1),=C'ACTIVE'
         BE    SETACT
         CLC   0(8,WK1),=C'NOACTIVE'
         BE    SETNOACT
         CLC   0(5,WK1),=C'TIME='
         BE    SETTIME
         CLC   0(6,WK1),=C'COUNT='
         BE    SETCOUNT
         SPACE 2
*  ERROR IN PARAMETER FIELD, SET RETURN CODE OF 4 AND EXIT
         SPACE 2
PARMERR  L     R13,4(,R13)         GET LAST SAVEAREA
         LM    R14,R12,12(R13)     RESTORE REGISTERS
         LA    R15,4               SET RETURN CODE OF FOUR
         BR    R14                 RETURN
         SPACE 2
*  SET NAME OPTION FOR THIS RUN
         SPACE 2
SETNAME  OI    OPTIONS,NAMEFLG     SET NAME FLAG
         S     WK2,=F'4'           DECREASE PARAMETER LENGTH
         BNP   OPENPRT             BRANCH IF SCAN COMPLETE
         CLI   4(WK1),C','         COMMA FOUND
         BNE   PARMERR             NO, SYNTAX INCORRECT
         LA    WK1,5(,WK1)         -> NEXT PARAMETER
         BCT   WK2,NEXTPARM        SCAN NEXT PARAMETER
         B     PARMERR             ERROR IF LENGTH IS ZERO
         SPACE 2
*  SET NONAME OPTION FOR THIS RUN
         SPACE 2
SETNONAM NI    OPTIONS,255-NAMEFLG SET NAME FLAG OFF
         S     WK2,=F'6'           DECREASE PARAMETER LENGTH
         BNP   OPENPRT             BRANCH IF SCAN COMPLETE
         CLI   6(WK1),C','         COMMA FOUND
         BNE   PARMERR             NO, SYNTAX INCORRECT
         LA    WK1,7(,WK1)         -> NEXT PARAMETER
         BCT   WK2,NEXTPARM        SCAN NEXT PARAMETER
         B     PARMERR             ERROR IF LENGTH IS ZERO
         SPACE 2
*  SET ACTIVE OPTION FOR THIS RUN
         SPACE 2
SETACT   OI    OPTIONS,ACTIVE      SET ACTIVE FLAG
         S     WK2,=F'6'           DECREASE PARAMETER LENGTH
         BNP   OPENPRT             BRANCH IF SCAN COMPLETE
         CLI   6(WK1),C','         COMMA FOUND
         BNE   PARMERR             NO, SYNTAX INCORRECT
         LA    WK1,7(,WK1)         -> NEXT PARAMETER
         BCT   WK2,NEXTPARM        SCAN NEXT PARAMETER
         B     PARMERR             ERROR IF LENGTH IS ZERO
         SPACE 2
*  SET  NOACTIVE OPTION FOR THIS RUN
         SPACE 2
SETNOACT NI    OPTIONS,255-ACTIVE  SET ACTIVE FLAG OFF
         S     WK2,=F'8'           DECREASE PARAMETER LENGTH
         BNP   OPENPRT             BRANCH IF SCAN COMPLETE
         CLI   8(WK1),C','         COMMA FOUND
         BNE   PARMERR             NO, SYNTAX INCORRECT
         LA    WK1,9(,WK1)         -> NEXT PARAMETER
         BCT   WK2,NEXTPARM        SCAN NEXT PARAMETER
         B     PARMERR             ERROR IF LENGTH IS ZERO
         SPACE 2
*  SET WAIT TIME INTERVAL
         SPACE 2
SETTIME  LA    WK1,5(,WK1)         MOVE TO DATA FIELD
         S     WK2,=F'5'           DECREASE PARAMETER LENGTH
         BNP   PARMERR             ERROR IF LENGTH ZERO
         BAL   LINK,GETVAL         GET TIME INTERVAL
         ST    WK3,INTERVAL        SET WAIT TIME
         MH    WK3,=H'100'         CONVERT TO HUNDRETHS OF SECOND
         ST    WK3,WAITTIME        SET VALUE FOR STIMER
         LTR   WK2,WK2             PARAMETER LENGTH ZERO
         BNP   OPENPRT             YES, NO MORE PARAMETERS
         LA    WK1,1(,WK1)         -> NEXT PARAMETER
         BCT   WK2,NEXTPARM        SCAN NEXT PARAMETER
         B     PARMERR             ERROR IF PARAMETER LENGTH ZERO
         SPACE 2
*  SET CYCLE COUNT
         SPACE 2
SETCOUNT LA    WK1,6(,WK1)         MOVE TO DATA FIELD
         S     WK2,=F'6'           DECREASE PARAMETER LENGTH
         BNP   PARMERR             ERROR IF LENGTH ZERO
         BAL   LINK,GETVAL         GET TIME INTERVAL
         ST    WK3,MAXIMUM         SET COUNT
         LTR   WK2,WK2             PARAMETER LENGTH ZERO
         BNP   OPENPRT             YES, NO MORE PARAMETERS
         LA    WK1,1(,WK1)         -> NEXT PARAMETER
         BCT   WK2,NEXTPARM        SCAN NEXT PARAMETER
         B     PARMERR             ERROR IF PARAMETER LENGTH ZERO
         SPACE 2
*  GET INTEGER VALUE FROM PARAMETER FIELD
         SPACE 2
GETVAL   SR    WK3,WK3             SET VALUE TO ZERO
         LR    WK4,WK3
NEXTVAL  CLI   0(WK1),C','         END OF VALUE REACHED
         BE    TESTVAL             YES, CHECK VALUE FOR NON ZERO
         CLI   0(WK1),C'0'         DECIMAL
         BL    PARMERR              DIGIT
         CLI   0(WK1),C'9'           BETWEEN
         BH    PARMERR                0 AND 9
         IC    WK4,0(,WK1)         MOVE DIGIT TO REGISTER
         N     WK4,=F'15'          MASK OFF THE FIRST 4 BITS
         MH    WK3,=H'10'          MULTIPLY PREVIOUS SUM BY 10
         AR    WK3,WK4             FORM NEW TOTAL
         LA    WK1,1(,WK1)         -> NEXT DIGIT
         BCT   WK2,NEXTVAL         GET NEXT DIGIT
TESTVAL  LTR   WK3,WK3             IS VALUE ZERO
         BZ    PARMERR             IF YES, ERROR
         BR    LINK                RETURN WITH VALUE IN WK3
         SPACE 2
         SPACE 2
*  OPEN SYSPRINT DATASET
         SPACE 2
OPENPRT  OPEN  (PRINTDCB,OUTPUT)
         LA    WK1,PRINTDCB
         USING IHADCB,WK1
         TM    DCBOFLGS,DCBOFOPN   WAS OPEN SUCCESSFUL
         BO    SETUP               GO TO INITIALIZATION SECTION
         DROP  WK1
         SPACE 2
*  SYSPRINT DD CARD MISSING, SET RETURN CODE OF 8 AND EXIT
         SPACE 2
         L     R13,4(,R13)         GET LAST SAVEAREA
         LM    R14,R12,12(R13)     RESTORE REGISTERS
         LA    R15,8               SET RETURN CODE OF FOUR
         BR    R14                 RETURN
         TITLE 'INTERNAL INITIALIZATION'
         SPACE 1
*  INITIALIZATION SECTION
         SPACE 2
SETUP    L     WK1,CVTPTR          -> CVT
         USING CVT,WK1
         L     WK2,CVTSMCA         -> SMCA
         MVC   SID,16(WK2)         SMF SYSTEM ID
         L     WK2,CVTEORM         LAST BYTE OF REAL MEMORY
         LA    WK2,1(,WK2)         ROUND UP
         ST    WK2,REALEND
         L     WK2,CVTGDA          -> GLOBAL DATA AREA
         USING GDA,WK2
         L     WK3,PASIZE          SIZE OF USER PRIVATE AREA
         ST    WK3,PVTSIZE
         L     WK3,PASTRT          START OF USER PRIVATE AREA
         ST    WK3,PVTSTART
         L     WK3,VRPQEP          -> V=R PQE
         USING PQE,WK3
         L     WK4,PQESIZE         SIZE OF V=R AREA
         ST    WK4,VRSIZE
         L     WK4,PQEREGN         START OF V=R AREA
         ST    WK4,VRSTART
         L     WK3,CSAPQEP         -> CSA PQE
         L     WK4,PQESIZE         SIZE OF CSA AREA
         ST    WK4,CSASIZE
         L     WK4,PQEREGN         START OF CSA AREA
         ST    WK4,CSASTART
         L     WK3,SQASPQEP        -> SQA SPQE
         USING SPQESECT,WK3
         L     WK3,SPDQEPTR        -> SQA DQE
         USING DQE,WK3
         L     WK4,DQELNTH         SIZE OF SQA
         ST    WK4,SQASIZE
         L     WK4,DQEBLKAD        START OF SQA
         LA    WK4,0(,WK4)
         ST    WK4,SQASTART
         DROP  WK3
         DROP  WK2
         L     WK2,CVTLPDIA        -> START OF LPA
         LA    WK2,0(,WK2)
         ST    WK2,LPASTART
         SR    WK4,WK2             SIZE OF LPA
         ST    WK4,LPASIZE
         SRL   WK4,10              TABLE SIZE
         ST    WK4,TBLSIZE
         MVI   TBLSIZE,X'80'       INDICATE END OF LIST
         L     WK2,CVTABEND        -> SCVT
         L     WK2,X'84'(,WK2)     -> SVC TABLE
         L     WK2,X'90'(,WK2)     -> BLDL SVC
         A     WK2,OFFSET          IEARESBL
         L     WK2,0(,WK2)         -> BLDL TABLE
         ST    WK2,BLDSTART        SAVE TABLE ADDRESS
         L     WK2,CVTPVTP         -> PVT
         USING PVT,WK2
         L     WK3,PVTPFTP         -> APPARENT ORIGIN
         ST    WK3,FRAMEPTR
         LH    WK3,PVTFPFN         FIRST PFTE INDEX
         SLL   WK3,8               CHANGE TO ADDRESS
         ST    WK3,NUCBOUND        ADDRESS OF FIRST FRAME PAST NUCLEUS
         LA    WK3,PVTCFMCT        PTR TO COUNT OF CSA + LPA FRAMES
         ST    WK3,COUNTPTR
         LA    WK3,PVTCFQF         PTR TO FIRST CSA INDEX
         ST    WK3,CSAPTR
         LA    WK3,PVTSQAQF        PTR TO FIRST SQA INDEX
         ST    WK3,SQAPTR
         LA    WK3,PVTAFC          PTR TO AVAILABLE FRAME COUNT
         ST    WK3,FREEPTR
         LH    WK3,PVTPOOL         TOTAL AVAILABLE FRAMES
         ST    WK3,FRAMECNT
         SPACE 2
*  GET STORAGE FOR THE NAME TABLE
         SPACE 2
         TM    OPTIONS,NAMEFLG     HAS THE NAME OPTION BEEN REQUESTED
         BZ    ACTINIT             NO, SKIP GETMAIN
         L     WK3,LPASTART        START OF DIRECTORY
         LR    WK4,WK3
LPDELOOP LA    WK4,40(,WK4)        NEXT LPDE
         CLC   DUMMY,8(WK4)        END OF DIRECTORY
         BNE   LPDELOOP            NO, CONTINUE
         SR    WK4,WK3             CALCULATE SIZE OF DIRECTORY
         ST    WK4,DIRSIZE         SAVE DIRECTORY SIZE
         SR    WK3,WK3             CLEAR FIRST REG
         D     WK3,=F'40'          DIVIDE BY ENTRY SIZE
         ST    WK4,LPDECNT         # OF TABLE ENTRIES
         LA    WK4,1(,WK4)         ADD ONE FOR DIRECTORY ENTRY
         MH    WK4,=H'24'          MULTIPLY BY ENTRY SIZE
         ST    WK4,NAMESIZE        SIZE OF THE NAME TABLE
         MVI   NAMESIZE,X'80'      INDICATE END OF LIST
         GETMAIN LU,LA=NAMESIZE,A=NAMETBL
         MVI   NAMESIZE,X'00'      CLEAR TOP BYTE
         SPACE 2
*  GET STORAGE FOR ACTIVE LPA MODULE TABLE
         SPACE 2
ACTINIT  TM    OPTIONS,ACTIVE      ACTIVE LPA OPTION SELECTED
         BZ    PAGEINIT            NO, SKIP GETMAIN
         GETMAIN LU,LA=ACTSIZE,A=ACTABLE
         MVI   ACTSIZE,X'00'       CLEAR TOP BYTE
         L     WK3,CVTQLPAQ        ADDRESS OF MOST RECENT LPA CDE
         ST    WK3,ACTPTR
         SPACE 2
*  INITIALIZE ACTIVE LPA TABLE
         SPACE 2
         SR    WK3,WK3             CLEAR REGISTER
         ICM   WK3,7,DUMMY         GET ADDRESS OF ALL F'S
         LA    WK4,512             # OF ACTIVE ENTRIES
         L     WK5,ACTABLE         -> ACTIVE LPA TABLE
         USING TABLE,WK5
NULLTBL  ST    WK3,ENTRYPT         INDICATE NULL ENTRY
         LA    WK5,16(,WK5)        NEXT ENTRY
         BCT   WK4,NULLTBL         CLEAR TABLE
         L     WK3,ACTABLE         -> ACTIVE LPA TABLE
         ST    WK3,ACTNEXT         INDICATE EMPTY TABLE
         A     WK3,ACTSIZE         ADD SIZE OF ACTIVE LPA TABLE
         ST    WK3,ACTEND          END OF ACTIVE LPA TABLE
         DROP  WK5
         DROP  WK2
         DROP  WK1
         SPACE 2
*  GET STORAGE FOR THE PAGE TABLE
         SPACE 2
PAGEINIT GETMAIN LU,LA=TBLSIZE,A=PAGETBL
         MVI   TBLSIZE,X'00'       CLEAR TOP BYTE
         TITLE 'MAKE PROGRAM NONSWAPPABLE'
         SPACE 1
*  ISSUE MODESET TO SUPERVISOR STATE AND A DONTSWAP REQUEST
         SPACE 2
FREEZE   MODESET KEY=ZERO,MODE=SUP
         EXTRACT ASID,'S',FIELDS=(ASID)
         SR    R0,R0               CLEAR REGISTER
         ICM   R0,C,ASID+2         INSERT ASID IN BYTES 0-1
         O     R0,=F'41'           SET DONTSWAP CODE IN BYTE 3
         SVC   95                  ISSUE SYSEVENT SVC
         N     R1,=F'15'           WAS DONTSWAP HONORED?
         BZ    TIMER1              YES, TIME STAMP START
         SPACE 2
*  INFORM OPERATOR THAT DONTSWAP WAS DENIED
         SPACE 2
         STC   R1,SWAPMSG+42       ADD REASON TO MESSAGE
         OI    SWAPMSG+42,X'F0'    MAKE PRINTABLE
SWAPMSG  WTO   '*** DONTSWAP REQUEST DENIED  RC = X',ROUTCDE=(2),      X
               DESC=(7)
         SPACE 2
*  TIME STAMP START OF RUN
         SPACE 2
TIMER1   TIME  DEC
         STM   R0,R1,STARTIME      SAVE START TIME
         TITLE 'FRAME TABLE SEARCH'
         SPACE 1
*  EXAMINE FRAMES ON COMMON AREA CHAIN
         SPACE 2
CSASCAN  L     WK1,FRAMEPTR        -> FRAME TABLE
         USING PFTE,WK1
         SPACE 1
*  RUN THE SQA CHAIN
         SPACE 1
SQARESET SR    WK2,WK2             WK2 IS LAST INDEX
         LR    WK4,WK2             WK4 IS THE FRAME COUNT
         L     WK3,SQAPTR          -> PVTSQAQF
         LH    WK3,0(,WK3)         FIRST SQA INDEX
         LTR   WK3,WK3
         BZ    SETSQA              STOP IF ZERO
SQALOOP  LA    WK4,1(,WK4)         INCREASE FRAME COUNT
         CH    WK2,PFTBQPTR(WK3)   VALIDATE BACK PTR
         BNE   SQARESET            RESTART IF THREAD LOST
         LR    WK2,WK3             CURRENT INDEX TO OLD
         LH    WK3,PFTFQPTR(WK3)   FORWARD INDEX TO CURRENT
         LTR   WK3,WK3
         BNZ   SQALOOP             LOOP IF NON ZERO
SETSQA   LR    WK8,WK4             SAVE SQA COUNT
         C     WK4,SQAHI           IS THIS THE HIGHEST SQA COUNT
         BNH   *+8                 NO, SKIP
         ST    WK4,SQAHI           SET NEW HIGH
         C     WK4,SQALO           IS THIS THE LOWEST SQA COUNT
         BNL   *+8                 NO, SKIP
         ST    WK4,SQALO           SET NEW LOW
         A     WK4,SQATOTAL        ADD COUNT TO TOTAL
         ST    WK4,SQATOTAL        STORE NEW TOTAL
         SPACE 1
*  RUN THE CSA CHAIN
         SPACE 1
         SR    WK2,WK2             WK2 IS LAST INDEX
         LR    WK4,WK2             WK4 IS FRAME COUNT
         L     WK3,CSAPTR          -> PVTCFQF
         LH    WK3,0(,WK3)         FIRST CSA INDEX
         LTR   WK3,WK3
         BZ    SETLPA              STOP IF ZERO
         L     WK5,PAGETBL         -> PAGE TABLE
CSALOOP  LH    WK6,PFTVBN(WK3)     VIRTUAL BLOCK #
         SLL   WK6,8               FORM ADDRESS
         LA    WK6,0(,WK6)         CLEAR TOP BYTE
         C     WK6,LPASTART        IS THIS A LPA PAGE
         BL    CSACHECK            NO, GO CHECK THREAD
         S     WK6,LPASTART        RELATIVE LPA ADDRESS
         SRL   WK6,10              FORM PAGE TABLE OFFSET
         L     WK7,0(WK6,WK5)      PAGE USE COUNT
         LA    WK7,1(,WK7)         ADD 1 TO COUNT
         ST    WK7,0(WK6,WK5)      SET USE COUNT
         LA    WK4,1(,WK4)         ADD 1 TO LPA COUNT
CSACHECK CH    WK2,PFTBQPTR(WK3)   VALIDATE BACK POINTER
         BE    PFTESWAP            CHAIN STILL OK
         LA    WK4,1               ADD 1 TO
         A     WK4,LOSTCNT          THE # OF
         ST    WK4,LOSTCNT           SAMPLES LOST
         B     FREECNT             SKIP THIS SAMPLE
PFTESWAP LR    WK2,WK3             CURRENT INDEX TO OLD
         LH    WK3,PFTFQPTR(WK3)   FORWARD INDEX TO CURRENT
         LTR   WK3,WK3
         BNZ   CSALOOP             LOOP IS NON ZERO
         DROP  WK1
SETLPA   L     WK5,COUNTPTR        -> PVTCFMCT
         LH    WK5,0(,WK5)         CSA + LPA FRAMES
         SR    WK5,WK4             SUBTRACT LPA COUNT
         C     WK4,LPAHI           IS THIS THE HIGHEST LPA COUNT
         BNH   *+8                 NO, SKIP
         ST    WK4,LPAHI           SET NEW HIGH
         C     WK4,LPALO           IS THIS THE LOWEST LPA COUNT
         BNL   *+8                 NO, SKIP
         ST    WK4,LPALO           SET NEW LOW
         A     WK4,LPATOTAL        ADD COUNT TO TOTAL
         ST    WK4,LPATOTAL        SET NEW TOTAL
         C     WK5,CSAHI           IS THIS THE HIGHEST CSA COUNT
         BNH   *+8                 NO, SKIP
         ST    WK5,CSAHI           SET NEW HIGH
         C     WK5,CSALO           IS THIS THE LOWEST CSA COUNT
         BNL   *+8                 NO, SKIP
         ST    WK5,CSALO           SET NEW LOW
         A     WK5,CSATOTAL        ADD COUNT TO TOTAL
         ST    WK5,CSATOTAL        SET NEW TOTAL
         TITLE 'MONITOR FREE FRAME QUEUE SIZE'
         SPACE 1
*  ADD FRAME DATA TO SYSTEM STATISTICS
         SPACE 2
FREECNT  L     WK4,FREEPTR         -> PVTAFC
         LH    WK4,0(,WK4)         COUNT OF FREE FRAMES
         AR    WK8,WK4             ADD FREE TO FRAME TOTAL
         C     WK4,FREEHI          IS THIS THE HIGHEST FREE COUNT
         BNH   *+8                 NO, SKIP
         ST    WK4,FREEHI          SET NEW HIGH
         C     WK4,FREELO          IS THIS THE LOWEST FREE COUNT
         BNL   *+8                 NO, SKIP
         ST    WK4,FREELO          SET NEW LOW
         A     WK4,FREETOTL        ADD COUNT TO TOTAL
         ST    WK4,FREETOTL        STORE NEW TOTAL
         SPACE 2
         L     WK5,COUNTPTR        -> PVTCFMCT
         LH    WK5,0(,WK5)         CSA + LPA FRAMES
         AR    WK8,WK5             ADD COMMON TO FRAME TOTAL
         L     WK4,FRAMECNT        TOTAL AVAILABLE FRAMES
         SR    WK4,WK8             MINUS FREE,SQA,&COMMON
         C     WK4,USERHI          IS THIS THE HIGHEST USER COUNT
         BNH   *+8                 NO, SKIP
         ST    WK4,USERHI          SET NEW HIGH
         C     WK4,USERLO          IS THIS THE LOWEST USER COUNT
         BNL   *+8                 NO, SKIP
         ST    WK4,USERLO          SET NEW LOW
         A     WK4,USERTOTL        ADD COUNT TO TOTAL
         ST    WK4,USERTOTL        STORE NEW TOTAL
         TITLE 'MONITOR ACTIVE LPA QUEUE'
         SPACE 1
*  EXAMINE MODULES ON ACTIVE LPA QUEUE IF ACTIVE OPTION SELECTED
         SPACE 2
LPAQUEUE TM    OPTIONS,ACTIVE      HAS ACTIVE OPTION BEEN SELECTED
         BNO   LIMIT               NO, SKIP ACTIVE LPA MODULE SCAN
         L     WK1,ACTPTR          ADDRESS OF FIRST CDE
CDELOOP  ICM   WK1,F,0(WK1)        -> NEXT CDE
         BZ    LIMIT               END OF CDE CHAIN
         USING CDENTRY,WK1
         L     WK3,ACTABLE         -> ACTIVE LPA TABLE
         USING ATABLE,WK3
         L     WK4,CDENTPT         -> CDE ENTRY POINT
         C     WK3,ACTNEXT         EMPTY TABLE
         BNL   ADDCDE              YES, BYPASS SEARCH
         C     WK4,AENTRYPT        COMPARE TO FIRST TABLE ENTRY
         BL    PUSHDOWN            LOW, MOVE REST OF TABLE DOWN
         BE    CDEMATCH            EQUAL, GO CHECK NAME
         L     WK5,HALFTBL         MIDDLE OF THE TABLE
         LA    WK6,9               MAXIMUM SEARCH LENGTH
         B     ACTUP               GO START SEARCH
ACTLOOP  C     WK4,AENTRYPT        ENTRY POINT MATCH
         BE    CDEMATCH            YES, GO CHECK NAME
         BH    ACTUP               HIGH, SEARCH HIGHER IN TABLE
         SR    WK3,WK5             SEARCH LOWER IN TABLE
         B     ACTCNTL
ACTUP    AR    WK3,WK5             SEARCH HIGHER IN TABLE
ACTCNTL  SRL   WK5,1               HALF OF LAST INCREMENT
         BCT   WK6,ACTLOOP         CHECK NEXT ENTRY
         C     WK4,AENTRYPT        COMPARE FINAL ENTRY
         BE    CDEMATCH            EQUAL, GO CHECK NAME
         BL    PUSHDOWN            LOW, SHIFT TABLE DOWN
         LA    WK3,16(,WK3)        MOVE TO NEXT ENTRY UP
PUSHDOWN CLC   ACTNEXT,ACTEND      ANY ROOM LEFT IN TABLE
         BNL   CDELOOP             NO, DON'T ADD ENTRY
         C     WK3,ACTNEXT         SLOT PAST END OF VALID ENTRIES
         BNL   ADDCDE              YES, SKIP PUSHDOWN
         L     WK5,=F'-16'         DECREMENT
         LR    WK6,WK3             SLOT TO BE OPENED
         AR    WK6,WK5             LIMIT OF PUSHDOWN
         L     WK7,ACTNEXT         NEXT OPEN TABLE SLOT
         AR    WK7,WK5             LAST VALID TABLE ENTRY
DOWNLOOP LD    R0,0(,WK7)          MOVE
         STD   R0,16(,WK7)          ENTRY
         LD    R0,8(,WK7)            DOWN
         STD   R0,24(,WK7)            ONE
         BXH   WK7,WK5,DOWNLOOP        SLOT
ADDCDE   LD    R0,CDNAME           ACTIVE LPA MODULE NAME
         STD   R0,ANAME            SET ANAME
         ST    WK4,AENTRYPT        SET ENTRY POINT
         LA    WK4,1
         ST    WK4,AUSE            SET USE COUNT OF 1
         LA    WK2,16              SIZE OF TABLE SLOT
         A     WK2,ACTNEXT
         ST    WK2,ACTNEXT         UPDATE NEXT SLOT POINTER
         B     CDELOOP
CDEMATCH CLC   CDNAME,ANAME        SAME MODULE NAME
         BE    ADDONE              YES, INCREASE USE COUNT
BACKUP   LR    WK6,WK3             BACKUP TO FIRST
         S     WK3,=F'16'           ENTRY WITH
         C     WK4,AENTRYPT         THE SAME
         BE    BACKUP                 ENTRY POINT
         LR    WK3,WK6
SEARCH   CLC   CDNAME,ANAME        SAME MODULE NAME
         BL    PUSHDOWN            LOW, OPEN SLOT IN TABLE
         BE    ADDONE              EQUAL, INCREASE USE COUNT
         A     WK3,=F'16'          NEXT ENTRY
         C     WK4,AENTRYPT        SAME ENTRY POINT
         BE    SEARCH              YES, CONTINUE SEARCH
         B     PUSHDOWN            NO, OPEN SLOT IN TABLE
ADDONE   L     WK4,AUSE            INCREMENT COUNT OF
         LA    WK4,1(,WK4)          # OF TIMES MODULE
         ST    WK4,AUSE              FOUND ON ACTIVE QUEUE
         B     CDELOOP
         DROP  WK3
         DROP  WK1
         TITLE 'WAIT CODE AND TIMER EXIT'
         SPACE 1
*  IF COUNT LIMIT HAS NOT BEEN REACHED, WAIT SPECIFIED TIME
         SPACE 2
LIMIT    L     WK1,COUNT           COUNT OF CYCLES
         LA    WK1,1(,WK1)         INCREASE BY ONE
         C     WK1,MAXIMUM         HAS LIMIT BEEN REACHED
         BNL   REPORT              YES, GO WRITE REPORT
         ST    WK1,COUNT
         SR    R0,R0
         ST    R0,WAITECB          CLEAR ECB
         STIMER REAL,TIMEXIT,BINTVL=WAITTIME
         WAIT  ECB=WAITECB
         B     CSASCAN
         SPACE 2
*  TIMER EXIT - POST WAITING MAINLINE CODE
         SPACE 2
         USING *,R15
TIMEXIT  STM   R14,R1,12(R13)      SHORT SAVE
         POST  WAITECB
         LM    R14,R1,12(R13)      RESTORE REGISTERS
         BR    R14                 EXIT
         DROP  R15
         SPACE 2
WAITECB  DC    F'0'
         TITLE 'SYSTEM STATISTICS REPORT'
         SPACE 2
*  WRITE SYSTEM STATISTICS REPORT
         SPACE 2
REPORT   TIME  DEC
         STM   R0,R1,STOPTIME      SAVE STOP TIME
         ED    EDIT11,STARTIME     FORMAT START TIME
         ED    EDIT12,STARTIME+5   FORMAT START DATE
         ED    EDIT13,STOPTIME     FORMAT STOP TIME
         ED    EDIT14,STOPTIME+5   FORMAT STOP DATE
         FILL  HDRCOUNT,6,MAXIMUM  PRINT NUMBER OF CYCLES
         FILL  HDRTIME,4,INTERVAL  PRINT CYCLE INTERVAL
         WRITE OUT,SF,,HEADER1,MF=E
         CHECK OUT
         MVI   BUFFER,C'0'         DOUBLE SPACE
         MVC   BUFFER+10(20),=C'     NUCLEUS SIZE = '
         KFILL BUFFER+30,6,NUCBOUND
         MVC   BUFFER+40(20),=C' REAL MEMORY SIZE = '
         KFILL BUFFER+60,6,REALEND
         BAL   LINK,LINE           PRINT THE LINE
         MVC   BUFFER+10(20),=C'   USER AREA SIZE = '
         KFILL BUFFER+30,6,PVTSIZE
         MVC   BUFFER+40(20),=C'USER AREA ADDRESS = '
         HFILL BUFFER+60,PVTSTART
         BAL   LINK,LINE           PRINT THE LINE
         MVC   BUFFER+10(20),=C'         V=R SIZE = '
         KFILL BUFFER+30,6,VRSIZE
         MVC   BUFFER+40(20),=C'      V=R ADDRESS = '
         HFILL BUFFER+60,VRSTART
         MVC   BUFFER+81(11),=C'SYSTEM ID ='
         MVC   BUFFER+93(4),SID    SMF SYSTEM ID
         BAL   LINK,LINE           PRINT THE LINE
         MVC   BUFFER+10(20),=C'         CSA SIZE = '
         KFILL BUFFER+30,6,CSASIZE
         MVC   BUFFER+40(20),=C'      CSA ADDRESS = '
         HFILL BUFFER+60,CSASTART
         BAL   LINK,LINE           PRINT THE LINE
         MVC   BUFFER+10(20),=C'         LPA SIZE = '
         KFILL BUFFER+30,6,LPASIZE
         MVC   BUFFER+40(20),=C'      LPA ADDRESS = '
         HFILL BUFFER+60,LPASTART
         BAL   LINK,LINE           PRINT THE LINE
         MVC   BUFFER+10(20),=C'         SQA SIZE = '
         KFILL BUFFER+30,6,SQASIZE
         MVC   BUFFER+40(20),=C'      SQA ADDRESS = '
         HFILL BUFFER+60,SQASTART
         BAL   LINK,LINE           PRINT THE LINE
         TITLE 'FRAME USAGE REPORT'
         SPACE 1
*  WRITE FRAME USAGE REPORT
         SPACE 2
         L     WK3,MAXIMUM
         SR    WK1,WK1             DIVIDE TOTAL
         L     WK2,FREETOTL         FRAMES FOUND
         DR    WK1,WK3               BY # OF INTERVALS
         ST    WK2,FREETOTL           TO GET AVERAGE
         SR    WK1,WK1             DIVIDE TOTAL
         L     WK2,SQATOTAL         FRAMES FOUND
         DR    WK1,WK3               BY # OF INTERVALS
         ST    WK2,SQATOTAL           TO GET AVERAGE
         SR    WK1,WK1             DIVIDE TOTAL
         L     WK2,USERTOTL         FRAMES FOUND
         DR    WK1,WK3               BY # OF INTERVALS
         ST    WK2,USERTOTL           TO GET AVERAGE
         S     WK3,LOSTCNT         ADJUST FOR LOST SAMPLES
         SR    WK1,WK1             DIVIDE TOTAL
         L     WK2,CSATOTAL         FRAMES FOUND
         DR    WK1,WK3               BY # OF INTERVALS
         ST    WK2,CSATOTAL           TO GET AVERAGE
         SR    WK1,WK1             DIVIDE TOTAL
         L     WK2,LPATOTAL         FRAMES FOUND
         DR    WK1,WK3               BY # OF INTERVALS
         ST    WK2,LPATOTAL           TO GET AVERAGE
         MVI   BUFFER,C'0'         DOUBLE SPACE
         MVC   BUFFER+10(32),=C'NUMBER OF FRAMES FOUND ON QUEUES'
         BAL   LINK,LINE           PRINT LINE
         MVI   BUFFER,C'0'         DOUBLE SPACE
         MVC   BUFFER+10(32),=C'           AVERAGE   HI     LO  '
         BAL   LINK,LINE           PRINT LINE
         MVC   BUFFER+10(4),=C'FREE'
         FILL  BUFFER+21,4,FREETOTL AVERAGE # OF FREE FRAMES
         FILL  BUFFER+29,4,FREEHI  HIGHEST # OF FREE FRAMES
         FILL  BUFFER+36,4,FREELO  LOWEST # OF FREE FRAMES
         BAL   LINK,LINE           PRINT LINE
         MVC   BUFFER+10(4),=C' CSA'
         FILL  BUFFER+21,4,CSATOTAL AVERAGE # OF CSA FRAMES
         FILL  BUFFER+29,4,CSAHI   HIGHEST # OF CSA FRAMES
         FILL  BUFFER+36,4,CSALO   LOWEST # OF CSA FRAMES
         BAL   LINK,LINE           PRINT LINE
         MVC   BUFFER+10(4),=C' LPA'
         FILL  BUFFER+21,4,LPATOTAL AVERAGE # OF LPA FRAMES
         FILL  BUFFER+29,4,LPAHI   HIGHEST # OF LPA FRAMES
         FILL  BUFFER+36,4,LPALO   LOWEST # OF LPA FRAMES
         BAL   LINK,LINE           PRINT LINE
         MVC   BUFFER+10(4),=C' SQA'
         FILL  BUFFER+21,4,SQATOTAL AVERAGE # OF SQA FRAMES
         FILL  BUFFER+29,4,SQAHI   HIGHEST # OF SQA FRAMES
         FILL  BUFFER+36,4,SQALO   LOWEST # OF SQA FRAMES
         BAL   LINK,LINE           PRINT LINE
         MVC   BUFFER+10(4),=C'USER'
         FILL  BUFFER+21,4,USERTOTL AVERAGE # OF USER FRAMES
         FILL  BUFFER+29,4,USERHI  HIGHEST # OF USER FRAMES
         FILL  BUFFER+36,4,USERLO  LOWEST # OF USER FRAMES
         BAL   LINK,LINE           PRINT LINE
         TITLE 'FIXED LPA REPORT'
         SPACE 1
*  WRITE FIXED LPA REPORT
         SPACE 2
         MVI   BUFFER,C'0'         DOUBLE SPACE
         MVC   BUFFER+10(26),=C'MODULES FOUND IN FIXED LPA'
         BAL   LINK,LINE           PRINT LINE
         MVC   BUFFER+11(27),=C'MODULE    LOAD PT    LENGTH'
         BAL   LINK,LINE           PRINT LINE
         BAL   LINK,LINE           PRINT BLANK LINE
         SR    WK5,WK5
         LR    WK6,WK5
         L     WK1,ACTPTR          -> FIRST ACTIVE CDE
         L     WK2,NUCBOUND        -> END OF NUCLEUS
NUCLOOP  ICM   WK1,F,0(WK1)        -> NEXT CDE
         BZ    FIXTOTAL            END OF CHAIN
         USING CDENTRY,WK1
         C     WK2,CDENTPT         ENTRY POINT IN NUCLEUS
         BL    NUCLOOP             NO, SKIP CDE
         MVC   BUFFER+10(8),CDNAME MOVE NAME TO PRINT LINE
         LR    WK3,WK1             SAVE CHAIN POINTER
         TM    CDATTR,CDMIN        IS THIS A MINOR CDE
         BNO   MAJORMOD            NO, SKIP CDE SWITCH
         L     WK1,CDXLMJP         GET MAJOR CDE
MAJORMOD L     WK4,CDXLMJP         -> EXTENT LIST
         USING XTLST,WK4
         HFILL BUFFER+22,XTLMSBAA  FORMAT LOAD POINT
         HFILL BUFFER+32,XTLMSBLA  FORMAT MODULE LENGTH
         BAL   LINK,LINE           PRINT LINE
         ICM   WK5,7,XTLMSBAD      MODULE LOAD POINT
         C     WK5,FIXSTART        IS THIS THE
         BNL   *+8                  LOWEST FIXED
         ST    WK5,FIXSTART          LPA MODULE
         ICM   WK6,7,XTLMSBLN      GET MODULE LENGTH
         AR    WK5,WK6             END OF MODULE
         C     WK5,FIXSTOP         IS THIS THE
         BNH   *+8                  HIGHEST FIXED
         ST    WK5,FIXSTOP           LPA ADDRESS
         LR    WK1,WK3             RESTORE CHAIN POINTER
         B     NUCLOOP
         DROP  WK4
         DROP  WK1
FIXTOTAL ICM   WK1,F,FIXSTOP       FIXED LPA MODULES
         BZ    BLDLTEST            NO, CHECK BLDL
         LR    WK3,WK1             HIGHEST FIXED ADDRESS
         S     WK3,FIXSTART        LENGTH OF FIXED LPA
         MVI   BUFFER,C'0'         DOUBLE SPACE
         MVC   BUFFER+10(37),=C'TOTAL FIXED LPA LENGTH = XXXXXX BYTES'
         FILL  BUFFER+35,6,(WK3)
         BAL   LINK,LINE           PRINT LINE
BLDLTEST OC    BLDSTART,BLDSTART   FIXED BLDL
         BZ    FIXTEST             NO, TEST FIXED LPA
         CLC   NUCBOUND,BLDSTART   FIXED BLDL TABLE
         BH    BLDLINE             YES, TABLE IN NUCLEUS
FIXTEST  LTR   WK1,WK1             FIXED LPA
         BZ    NAMEBLD             NO, SKIP REPORT
         B     SPACEMSG            PRINT WASTE MESSAGE
BLDLINE  L     WK1,BLDSTART        -> BLDL TABLE
         LH    WK3,0(,WK1)         # OF ENTRIES
         LH    WK4,2(,WK1)         LENGTH OF ENTRY
         MR    WK3,WK3             LENGTH OF BLDL TABLE
         MVC   BUFFER+10(37),=C'TOTAL FIXED BLDL TABLE = XXXXXX BYTES'
         FILL  BUFFER+35,6,(WK4)   FORMAT TABLE SIZE
         BAL   LINK,LINE           PRINT LINE
         AR    WK1,WK4             -> END OF THE BLDL TABLE
SPACEMSG SR    WK2,WK1             WASTE SPACE IN NUCLEUS
         MVC   BUFFER+10(37),=C'WASTE SPACE IN NUCLEUS = XXXXXX BYTES'
         FILL  BUFFER+35,6,(WK2)
         BAL   LINK,LINE           PRINT LINE
         TITLE 'LPA DIRECTORY SEARCH'
         SPACE 1
*  SEARCH LPA DIRECTORY FOR NAMES,LOAD POINT,AND LENGTH IF NAME OPTION
*       HAS BEEN SELECTED AND LOAD NAME TABLE
         SPACE 2
NAMEBLD  TM    OPTIONS,NAMEFLG     WAS NAME OPTION SELECTED
         BNO   MAPOUT              NO, SKIP NAME TABLE INITIALIZATION
         L     WK1,NAMETBL         -> NAME TABLE
         USING TABLE,WK1
         MVC   NAME,=C'LPDES   '   LPA DIRECTORY AREA
         MVC   LENGTH,DIRSIZE      SET LENGTH OF AREA
         L     WK2,LPASTART        -> START OF LPDES
         ST    WK2,ENTRYPT         SET DIRECTORY ADDRESS
         ST    WK2,LOADPT          SET DIRECTORY ADDRESS
         USING LPDE,WK2
         L     WK3,LPDECNT         # OF LPDES
         LA    WK4,24(,WK1)        -> END OF NAME TABLE
DIRLOOP  L     WK1,NAMETBL         -> NAME TABLE
DIRPT    CLC   LPDENTP+1(3),ENTRYPT+1  COMPARE ENTRY POINTS
         BL    DIRSLOT             LOW, SLOT FOUND FOR LPDE
         BE    DIRCK               EQUAL, CHECK NAME
DIRNEXT  LA    WK1,24(,WK1)        NEXT NAME TABLE ENTRY
         CR    WK1,WK4             END OF TABLE
         BL    DIRPT               NO, CONTINUE SEARCH
         B     DIRADD              END, SLOT FOUND FOR LPDE
DIRCK    CLC   LPDENAME,NAME       NEW NAME LOWER THAN PREVIOUS
         BNL   DIRNEXT             HIGH, CONTINUE SEARCH
DIRSLOT  L     WK5,=F'-24'         DECREMENT
         LR    WK6,WK1             SLOT TO BE OPENED
         AR    WK6,WK5             LIMIT OF LOOP
         LR    WK7,WK4             NEXT OPEN NAME TABLE SLOT
         AR    WK7,WK5             LAST VALID NAME TABLE ENTRY
DIRDOWN  MVC   24(24,WK7),0(WK7)  MOVE ENTRY DOWN ONE SLOT
         BXH   WK7,WK5,DIRDOWN     LOOP UNTIL FINISHED
DIRADD   MVC   NAME,LPDENAME       SET MODULE NAME
         MVC   ENTRYPT,LPDENTP     SET MODULE ENTRY POINT
         TM    LPDEATTR,LPDEMIN    IS THIS AN ALIAS
         BO    DIRALIAS            YES, SET ALIAS FLAG
         MVC   LOADPT,LPDEXTAD     SET MODULE LOAD POINT
         MVC   LENGTH,LPDEXTLN     SET MODULE LENGTH
         B     NEXTLPDE            GET NEXT LPDE
DIRALIAS MVI   ENTRYPT,X'80'       INDICATE ALIAS
NEXTLPDE LA    WK4,24(,WK4)        -> END OF NAME TABLE
         LA    WK2,40(,WK2)        -> NEXT LPDE
         BCT   WK3,DIRLOOP         PROCESS ALL LPDES
         DROP  WK2
         TITLE 'MERGE ACTIVE LPA DATA WITH DIRECTORY DATA'
         SPACE 1
*  ADD ACTIVE LPA USAGE DATA IF ACTIVE OPTION SELECTED
         SPACE 2
         TM    OPTIONS,ACTIVE      ACTIVE OPTION SELECTED
         BNO   MAPOUT              NO, SKIP MERGE
         L     WK1,NAMETBL         -> NAME TABLE
         L     WK2,ACTABLE         -> ACTIVE LPA TABLE
         USING ATABLE,WK2
         L     WK3,LPDECNT         # OF LPDE ENTRIES
         LA    WK1,24(,WK1)        SKIP DIRECTORY ENTRY
         L     WK4,ACTNEXT         -> END OF ACTIVE TABLE
MERGE    CLC   AENTRYPT+1(3),ENTRYPT+1  ENTRY POINT MATCH
         BH    MERGE3              HIGH, GET NEXT NAME TABLE ENTRY
         BE    MERGE2              EQUAL, CHECK NAME
MERGE1   LA    WK2,16(,WK2)        -> NEXT ACTIVE LPA ENTRY
         CR    WK2,WK4             END OF ACTIVE TABLE
         BL    MERGE               NO, CONTINUE MERGE
         B     MAPOUT              YES, PRINT LPA MAP
MERGE2   CLC   ANAME,NAME          MODULE NAME MATCH
         BL    MERGE1              LOW, SKIP ACTIVE TABLE ENTRY
         BH    MERGE3              HIGH, GET NEXT NAME TABLE ENTRY
         MVC   USE,AUSE            SET USE COUNT
         LA    WK1,24(,WK1)        -> NEXT NAME TABLE ENTRY
         BCT   WK3,MERGE1          GET NEXT ACTIVE ENTRY
         B     MAPOUT              PRINT LPA MAP IF COMPLETE
MERGE3   LA    WK1,24(,WK1)        -> NEXT NAME TABLE ENTRY
         BCT   WK3,MERGE           MERGE ALL ENTRIES
         DROP  WK2
         DROP  WK1
         SPACE 2
         TITLE 'WRITE LPA MAP'
         SPACE 1
*  WRITE A LPA MAP OF FRAME USAGE AND OPTIONALLY NAMES AND ACTIVE LPA
*      USAGE DATA
         SPACE 2
MAPOUT   MVI   BUFFER,C'1'         NEW PAGE
         MVC   BUFFER+10(33),HEADER2A
         TM    OPTIONS,ACTIVE+NAMEFLG NAME OR ACTIVE LPA OPTION
         BZ    NONAME              NO, SKIP ADDITIONAL HEADER
         MVC   BUFFER+51(65),HEADER2B
         TM    OPTIONS,NAMEFLG     MODULE NAMES REQUESTED
         BO    SETNTBL             YES, SETUP FOR NAMES
         L     WK5,ACTABLE         -> ACTIVE LPA MODULE TABLE
         LA    WK6,16              TABLE ENTRY SIZE
         L     WK7,ACTNEXT         LAST VALID ENTRY + 1
         B     NONAME
SETNTBL  L     WK5,NAMETBL         -> MODULE NAME TABLE
         LA    WK6,24              TABLE ENTRY SIZE
         LR    WK7,WK5
         A     WK7,NAMESIZE        END OF MODULE NAME TABLE
NONAME   BAL   LINK,LINE           PRINT LINE
         BAL   LINK,LINE           PRINT BLANK LINE
         L     WK1,LPASTART        ADDRESS OF FIRST LPA PAGE
         L     WK2,PAGETBL         -> PAGE TABLE
         L     WK4,TBLSIZE         SIZE OF PAGE TABLE
         SRL   WK4,2               # OF LPA PAGES
PAGELOOP ICM   WK3,F,0(WK2)        GET PAGE USE COUNT
         BZ    NOPRINT
         HFILL BUFFER+11,(WK1)     FORMAT ADDRESS
         FILL  BUFFER+22,6,(WK3)   FORMAT USE COUNT
         PFILL BUFFER+35,6,(WK3),MAXIMUM FORMAT USE PERCENTAGE
         BAL   LINK,LINE
         TM    OPTIONS,ACTIVE+NAMEFLG NAMES REQUESTED OR ACTIVE LPA
         BZ    NOPRINT             NO, SKIP NAMES
         USING TABLE,WK5
         LR    WK8,WK1             CURRENT LPA PAGE POINTER
         A     WK8,=F'4096'        BUMP BY 4K
TESTMOD  CLM   WK1,7,ENTRYPT+1     PAGE PAST MODULE
         BH    NEXTMOD             YES, TEST NEXT MODULE
         CLM   WK8,7,ENTRYPT+1     MODULE PAST PAGE
         BNH   NOPRINT             YES, SKIP
         MVC   BUFFER+50(8),NAME   MODULE NAME
         HFILL BUFFER+62,ENTRYPT   FORMAT ENTRY POINT
         TM    OPTIONS,NAMEFLG     NAME OPTION SELECTED
         BNO   ACTFILL             NO, SKIP LENGTH
         TM    ENTRYPT,X'80'       MODULE NAME AN ALIAS
         BO    ACTFILL             YES, SKIP LENGTH
         HFILL BUFFER+73,LOADPT    FORMAT MODULE LOAD POINT
         HFILL BUFFER+83,LENGTH    FORMAT MODULE LENGTH
ACTFILL  TM    OPTIONS,ACTIVE      ACTIVE LPA OPTION SELECTED
         BNO   MODOUT              NO, GO PRINT DATA
         OC    USE,USE             IS USE COUNT ZERO
         BZ    MODOUT              YES, SKIP USE FORMAT
         FILL  BUFFER+94,6,USE     FORMAT ACTIVE COUNT
         PFILL BUFFER+109,6,USE,MAXIMUM FORMAT ACTIVE PERCENTAGE
MODOUT   BAL   LINK,LINE           PRINT LINE
NEXTMOD  CR    WK5,WK7             END OF TABLE REACHED
         BNL   NOPRINT             YES, SKIP FURTHER SEARCH
         AR    WK5,WK6             SHIFT TO NEXT ENTRY
         B     TESTMOD
         DROP  WK5
NOPRINT  A     WK1,=F'4096'        BUMP ADDRESS BY 4K
         LA    WK2,4(,WK2)         NEXT PAGE TABLE ENTRY
         BCT   WK4,PAGELOOP
         TITLE 'CLOSE SYSPRINT AND EXIT'
         SPACE 1
*  CLOSE SYSPRINT DATASET
         SPACE 2
SHUTDOWN CLOSE (PRINTDCB)
         SPACE 2
*  EXIT FROM THE PROGRAM
         SPACE 2
         L     R13,4(,R13)         GET LAST SAVEAREA
         LM    R14,R12,12(R13)     RESTORE REGISTERS
         SR    R15,R15             SET RETURN CODE OF ZERO
         BR    R14                 RETURN
         TITLE 'WRITE CODE AND MACROS'
         SPACE 1
*  PRINT LINE BUFFER
         SPACE 2
LINE     WRITE OUT,SF,,BUFFER,MF=E
         CHECK OUT
         MVI   BUFFER,C' '         SINGLE SPACE
         MVC   BUFFER+1(132),BUFFER CLEAR BUFFER
         BR    LINK
         SPACE 2
         WRITE OUT,SF,PRINTDCB,BUFFER,'S',MF=L
         TITLE 'REGISTER EQUATES'
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
WK1      EQU   2
WK2      EQU   3
WK3      EQU   4
WK4      EQU   5
WK5      EQU   6
WK6      EQU   7
WK7      EQU   8
WK8      EQU   9
LINK     EQU   10
A        EQU   10
B        EQU   11
C        EQU   12
D        EQU   13
E        EQU   14
F        EQU   15
         TITLE 'DATA AREAS AND CONSTANTS'
SAVEAREA DC    18F'0'
COUNT    DC    F'0'                CURRENT COUNT OF CYCLES
MAXIMUM  DC    F'120'              CYCLE LIMIT  DEFAULT(120)
ASID     DC    F'0'
WAITTIME DC    F'500'              CYCLE WAIT TIME  DEFAULT(5 SEC)
INTERVAL DC    F'5'                INTERVAL TIME IN SECONDS
NUCBOUND DC    F'0'                END OF NUCLEUS
CSASIZE  DC    F'0'                LENGTH OF CSA
CSASTART DC    F'0'                START OF CSA
LPASIZE  DC    F'0'                LENGTH OF LPA
LPASTART DC    F'0'                START OF LPA
SQASIZE  DC    F'0'                LENGTH OF SQA
SQASTART DC    F'0'                START OF SQA
REALEND  DC    F'0'                LENGTH OF REAL MEMORY
PVTSIZE  DC    F'0'                SIZE OF USER PRIVATE AREA
PVTSTART DC    F'0'                START OF USER PRIVATE AREA
VRSIZE   DC    F'0'                SIZE OF V=R AREA
VRSTART  DC    F'0'                START OF V=R AREA
BLDSTART DC    F'0'                -> FIXED BLDL TABLE
OFFSET   DC    X'000005F8'         DISPLACEMENT TO IEARESBL
DIRSIZE  DC    F'0'                SIZE OF LPA DIRECTORY
TBLSIZE  DC    F'0'                PAGE TABLE SIZE
PAGETBL  DC    F'0'                -> PAGE TABLE - 1 WORD PER LPA PAGE
NAMESIZE DC    F'0'                SIZE OF TABLE FOR LPA MODULE NAMES
NAMETBL  DC    F'0'                -> NAME TABLE
ACTSIZE  DC    X'80002000'         SIZE OF ACTIVE LPA TABLE
HALFTBL  DC    F'4096'             * ROOM FOR 512 ACTIVE LPA NAMES *
ACTABLE  DC    F'0'                -> TABLE OF ACTIVE LPA MODULES
ACTPTR   DC    F'0'                -> NEWEST CDE ON ACTIVE LPA QUEUE
ACTNEXT  DC    F'0'                NEXT SLOT IN ACTIVE LPA TABLE
ACTEND   DC    F'0'                END OF THE ACTIVE LPA TABLE
FRAMEPTR DC    F'0'                APPARENT ORIGIN OF FRAME TABLE
FRAMECNT DC    F'0'                TOTAL AVAILABLE FRAME COUNT
COUNTPTR DC    F'0'                -> PVTCFMCT  COUNT OF CSA FRAMES
CSAPTR   DC    F'0'                -> PVTCFQF   FIRST CSA INDEX
SQAPTR   DC    F'0'                -> PVTSQAQF  FIRST SQA INDEX
FREEPTR  DC    F'0'                -> PVTAFC    AVAILABLE FRAME COUNT
STARTIME DC    2F'0'               STARTING TIME STAMP
STOPTIME DC    2F'0'               ENDING TIME STAMP
SQAHI    DC    F'0'                HIGHEST NUMBER OF SQA FRAMES
SQALO    DC    F'4096'             LOWEST NUMBER OF SQA FRAMES
SQATOTAL DC    F'0'                TOTAL OF SQA FRAMES
CSAHI    DC    F'0'                HIGHEST NUMBER OF CSA FRAMES
CSALO    DC    F'4096'             LOWEST NUMBER OF CSA FRAMES
CSATOTAL DC    F'0'                TOTAL OF CSA FRAMES
LPAHI    DC    F'0'                HIGHEST NUMBER OF LPA FRAMES
LPALO    DC    F'4096'             LOWEST NUMBER OF LPA FRAMES
LPATOTAL DC    F'0'                TOTAL OF LPA FRAMES
FREEHI   DC    F'0'                HIGHEST NUMBER OF FREE FRAMES
FREELO   DC    F'4096'             LOWEST NUMBER OF FREE FRAMES
FREETOTL DC    F'0'                TOTAL OF FREE FRAMES
USERHI   DC    F'0'                HIGHEST NUMBER OF USER FRAMES
USERLO   DC    F'4096'             LOWEST NUMBER OF USER FRAMES
USERTOTL DC    F'0'                TOTAL OF USER FRAMES
LPDECNT  DC    F'0'                NUMBER OF ENTRIES IN NAME TABLE
LOSTCNT  DC    F'0'                NUMBER OF SAMPLES LOST
FIXSTART DC    X'00FFFFFF'         START OF FIXED LPA
FIXSTOP  DC    F'0'                END OF FIXED LPA
DECIMAL  DC    D'0'                CONVERSION WORK AREA
FORMAT   DC    CL8' '              FORMATING WORK AREA
DUMMY    DC    XL8'FFFFFFFFFFFFFFFF' PATTERN USED TO MARK END OF LPDES
HEXTBL   DC    CL16'0123456789ABCDEF'
EDITD    DC    X'4020202020202120'
EDITK    DC    X'40402020202120D2'
EDITP    DC    X'40402021204B2020'
HEADER1  DC    C'1LINK PACK MONITOR  START TIME = '
EDIT11   DC    X'4021204B20204B2020' HH.MM.SS
EDIT12   DC    X'40212061202020'   YY/DDD
         DC    C'  STOP TIME = '
EDIT13   DC    X'4021204B20204B2020' HH.MM.SS
EDIT14   DC    X'40212061202020'   YY/DDD
         DC    C'  # OF SAMPLES = '
HDRCOUNT DC    CL6' '
         DC    C'  INTERVAL = '
HDRTIME  DC    CL4' '
         DC    CL14' SECONDS'
BUFFER   DC    CL133' '
HEADER2A DC    CL33'ADDRESS   PAGE FOUND   PERCENTAGE'
HEADER2B DC    CL65'MODULE    ENTRY PT   LOAD PT    LENGTH  ACTIVE COUNX
               T  PERCENTAGE'
OPTIONS  DC    X'C0'               OPTIONS FLAGS
NAMEFLG  EQU   X'80'               NAME OPTION SELECTED
ACTIVE   EQU   X'40'               ACTIVE OPTION SELECTED
SID      DC    CL4'    '           SMF SYSTEM ID
PRINTDCB DCB   DSORG=PS,MACRF=W,DDNAME=SYSPRINT,DEVD=DA,RECFM=FA,      X
               BLKSIZE=133
         LTORG
         TITLE 'DSECT DEFINITIONS'
         CVT   DSECT=YES
         DCBD  DSORG=PS,DEVD=DA
         IHACDE
         IHADQE
         IHAGDA
         IHALPDE
         IHAPFTE
         IHAPQE
         IHAPVT
         IHASPQE
         IHAXTLST
         SPACE 2
TABLE    DSECT
NAME     DS    D
ENTRYPT  DS    F
USE      DS    F
LOADPT   DS    F
LENGTH   DS    F
         SPACE 2
ATABLE   DSECT
ANAME    DS    D
AENTRYPT DS    F
AUSE     DS    F
         SPACE 2
         END
