SHOW     TITLE 'SHOW - SYSTEM ACTIVITY MONITOR FOR TSO 3270S'
***********************************************************************
*
* THIS COMMAND HAS SEVERAL DIFFERENT MODES OF DISPLAY:
*
*     I   - THIS MODE WILL DISPLAY ONLY THOSE MEMORIES WHICH ARE EITHER
*           SWAPPED IN AND RUNNING OR SWAPPED OUT BUT READY TO RUN
*     O   - THIS MODE WILL DISPLAY ALL ACTIVE MEMORIES IN THE SYSTEM,
*           REGARDLESS OF LOCATION
*
*   TO SWITCH BETWEEN MODES, TYPE EITHER I OR O
*
*
*      YOU MAY ALSO ENTER OPTIONS TO RESTRICT THE OUTPUT TO ONLY
*      TSO MEMORIES (IN EITHER IN/OUT OR WAITING STATUS ACCORDING
*      TO YOUR USE OF THE I AND O OPTIONS ABOVE) OR ONLY STARTED
*      TASK/BATCH JOB MEMORIES:
*
*    'T'  - RESTRICTS THE OUTPUT TO ONLY TSO MEMORIES
*
*    'B'  - RESTRICTS THE OUTPUT TO STARTED TASK/BATCH MEMORIES
*
*    'A'  - RESETS THE TSO/STARTED TASK/BATCH JOB SELECTION
*
*   TO EXIT FROM THIS COMMAND, SIMPLY TYPE 'Z'
*
*  GLOSSARY OF TERMS FOR OUTPUT DISPLAY:
*
*    JOB       JOB NAME OF MEMORY
*    STEP      CURRENT STEPNAME
*    PROCSTEP  CURRENT PROCSTEPNAME
*    P         REASON CODE FOR SWAP OUT FROM OUCBPFL
*              THE FOLLOWING ARE THE REASON CODES DISPLAYED:
*                L  LOGICAL SWAP
*                W  MEMORY IS IN LONG WAIT OR INPUT TERMINAL WAIT
*                T  MEMORY IS IN OUTPUT TERMINAL WAIT
*                E  AN ENQHOLD HAS BEEN RECEIVED FOR THIS MEMORY
*                V  MEMORY WAS SWAPPED OUT BY MSO LONG WAIT DETECTION
*                A  MEMORY WAS SWAPPED OUT DUE TO AUX  STOR  SHORTAGE
*                S  SWAPOUT CAUSED BY REAL STORAGE SHORTAGE
*                P  SIGNIFICANT CPU USER
*                ?  UNABLE TO DETERMINE SWAPOUT REASON
*    MEMORY    CURRENT AMOUNT OF MEMORY ALLOCATED TO THIS MEMORY
*    WSS       SRM'S VIEW OF THE WORKING SET SIZE FOR THIS MEMORY
*    T         TYPE OF MEMORY (S=STC, B=BATCH, T=TSO USER)
*    LOC       CURRENT LOCATION OF THIS MEMORY:
*                PRV SWAPPED IN PRIVILEGED USER
*                IN  SWAPPED IN AND ELIGIBLE TO RUN
*                OUT SWAPPED OUT BUT READY TO RUN
*                WT  SWAPPED OUT AND NOT READY TO RUN
*                N/S SWAPPED IN AND V=R OR NON-SWAPPABLE STATUS
*                <-> TRANSITIONING BETWEEN STATES
*    DP        DISPATCHING PRIORITY OF MEMORY (IN HEX)
*    PG        PERFORMANCE GROUP
*    SC        NUMBER OF TIMES THE MEMORY HAS BEEN SWAPPED IN THE
*              CURRENT TRANSACTION
*    EXCP      SMF EXCPS ACCUMULATED BY THE MEMORY DURING THE CURRENT
*                   STEP ONLY
*    CPU       CPU TIME IN SECONDS USED BY THE MEMORY (SRB PLUS TASK)
*                   DURING THE CURRENT STEP ONLY
***********************************************************************
*
         EJECT
SHOW     ENTER BASEREG=12,      SAVE THE CALLERS REGISTERS AND         X
               PARMREG=2           ESTABLISH ADDRESSABILITY
         REGISTER               REGISTER EQUATES
         USING CVT,R2           ADDRESS DSECT FOR CVT
         USING ASVT,R3          ADDRESS DSECT FOR ASVT
         USING ASCB,R4          ADDRESS DSECT FOR ASCB
         USING CSCB,R5          ADDRESS DSECT FOR CSCB
         USING OUCB,R6          ADDRESS DSECT FOR OUCB
FINDCVT  DS    0H
         L     R2,CVTPTR        POINT TO CVT
         L     R3,CVTASVT       POINT TO ASVT
         L     R2,ASVTMAXU      LOAD MAXIMUM NUMBER OF ENTRIES
         LA    R1,BUFFER        LOAD ADDRESS OF OUTPUT BUFFER
ASCBLOOP DS    0H
         ICM   R4,B'1111',ASVTFRST   LOAD THE ASCB PTR
         BM    NOGOOD           BRANCH IF ASID IS AVAILABLE
         CLI   OUTFLAG,C'Y'     TEST FOR SWAPPED OUT REQUESTED
         BE    OUTOK            YES, CONTINUE
         TM    ASCBRCTF,ASCBOUT TEST FOR SWAPPED OUT
         BO    NOGOOD           BRANCH IF OUT AND NOT READY TO RUN
OUTOK    DS    0H
         CLI   TSOFLAG,C'Y'     TEST FOR TSO USERS REQUESTED
         BE    TSOOK            YES, CONTINUE
         L     R6,ASCBOUCB      LOAD PTR TO OUCB FOR QUICK TSO CHK
         TM    OUCBYFL,OUCBLOG  CHECK FOR TSO
         BO    NOGOOD           BRANCH IF A TSO LOGON
TSOOK    DS    0H
         CLI   BTCFLAG,C'Y'     TEST FOR INIT/STC REQUESTED
         BE    BTCOK            YES, CONTINUE
         L     R6,ASCBOUCB      LOAD PTR TO OUCB FOR QUICK TSO CHK
         TM    OUCBYFL,OUCBLOG  CHECK FOR TSO
         BNO   NOGOOD           BRANCH IF NOT A TSO LOGON
BTCOK    DS    0H
         MVI   LINE+2,C' '      CLEAR OUTPUT LINE TO BLANKS
         MVC   LINE+3(77),LINE+2
         MVC   JOB,=CL8'STARTING'    INITIALIZE JOBNAME
         ICM   R9,B'1111',ASCBJBNI   LOAD PTR TO BATCH JOBNAME
         BZ    NOTJOB           BRANCH IF ZERO POINTER
         MVC   JOB,0(R9)        OTHERWISE, MOVE IN JOBNAME
         MVC   STEP,56(R9)         AND STEPNAME
         MVC   PROCSTEP,24(R9)     AND PROCSTEPNAME
         B     JOBOK            BYPASS FURTHER JOBNAME PROCESSING
NOTJOB   DS    0H
         ICM   R9,B'1111',ASCBJBNS    LOAD JOBNAME PTR FOR S/M/L
         BZ    JOBOK            BYPASS THIS MOVE IF POINTER IS ZERO
         MVC   JOB,0(R9)        MOVE IN JOBNAME FOR S/M/L MEMORIES
         CLC   JOB,=C'*MASTER*' IF THIS IS THE MASTER SCHEDULER
         BE    JOBOK               THEN BYPASS STEP AND PROCSTEP
         ICM   R5,B'1111',ASCBCSCB    LOAD POINTER TO THE TOP CSCB
         MVC   STEP,CHCLS       MOVE IN STEPNAME
         MVC   PROCSTEP,CHPROCSN      MOVE IN PROCSTEPNAME
         BZ    JOBOK            BRANCH IF CSCB POINTER IS ZERO
JOBOK    DS    0H
         SR    R9,R9
         ICM   R9,B'0011',ASCBFMCT    LOAD ALLOC FRAME COUNT
         SLL   R9,2             MULTIPLY BY FOUR
         CVD   R9,WORK          CONVERT TO DECIMAL FORMAT
         MVC   SIZE(6),=X'2020202120D2' GET READY FOR EDIT
         ED    SIZE-1(6),WORK+5 EDIT THE RESULT
         L     R6,ASCBOUCB      POINT TO OUCB
         TM    OUCBYFL,OUCBLOG  TEST FOR TSO MEMORY
         BZ    NOTTSO           BRANCH IF NOT TSO
         MVI   TYPE,C'T'        MOVE IN TSO MEMORY INDICATION
         B     TYPEOK           BYPASS REST OF TYPE PROCESSING
NOTTSO   DS    0H
         TM    OUCBYFL,OUCBLOG+OUCBSTT+OUCBMNT  TEST FOR BATCH MEMORY
         BNZ   NOTBATCH         BRANCH IF NOT BATCH
         MVI   TYPE,C'B'        MOVE IN BATCH MEMORY INDICATION
         B     TYPEOK           BYPASS REST OF TYPE PROCESSING
NOTBATCH DS    0H
         MVI   TYPE,C'S'        MOVE IN STC/MOUNT INDICATION
TYPEOK   DS    0H
         MVC   WHERE,=CL3'IN'   DEFAULT MEMORY POSITION IS IN
         MVI   INTENSTY,HIGHINT DEFAULT HIGH INTENSITY
         TM    OUCBSFL,OUCBNSW  TEST FOR NON-SWAP
         BZ    TRYPRV           BRANCH IF NOT NON-SWAP
         MVC   WHERE,=CL3'N/S'  MOVE IN NON-SWAP INDICATION
         B     WHEREOK          BY-PASS REST OF POSITION PROCESSING
TRYPRV   TM    OUCBSFL,OUCBPVL  TEST FOR PRIV USER
         BNO   TRYWAIT          IF NOT CONTINUE
         MVC   WHERE,=CL3'PRV'     ELSE MARK PRIVILEGED USER
TRYWAIT  DS    0H
         TM    OUCBQFL,OUCBOFF  CHECK FOR WAIT
         BZ    TRYOUT           BRANCH IF NOT
         MVC   WHERE,=CL3'WT'   MOVE IN WAIT POSITION INDICATION
         MVI   INTENSTY,LOWINT  MOVE IN 3270 LOW INTENSITY ATTR BYTE
         B     WHEREOK          BY-PASS REST OF POSITION PROCESSING
TRYOUT   DS    0H
         TM    OUCBQFL,OUCBOUT  TRY OUT QUEUE
         BZ    WHEREOK          IF NOT, EXIT POSITION PROCESSING
         MVC   WHERE,=CL3'OUT'  MOVE IN OUT QUEUE POSITION
         MVI   INTENSTY,LOWINT  MOVE IN 3270 LOW INTENSITY ATTR BYTE
WHEREOK  DS    0H
         TM    OUCBQFL,OUCBGOO+OUCBGOI+OUCBGOB   CHECK TRANSITIONING
         BZ    NOTTRANS         BRANCH IF MEMORY NOT TRANSITIONING
         MVC   WHERE(3),=CL3'<->' INDICATE TRANSITIONING
NOTTRANS DS    0H
         SR    R7,R7
         IC    R7,ASCBDP        LOAD DISPATCHING PRIORITY
         SRL   R7,4             SHIFT OUT LOW ORDER NIBBLE
         IC    R8,HEX(R7)       PICK THE EBCDIC CHARACTER
         STC   R8,DP            STORE INTO OUTPUT FIELD
         IC    R7,ASCBDP        LOAD THE DISPATCHING PRIORITY AGAIN
         N     R7,=X'0000000F'  TURN OFF HIGH ORDER NIBBLE
         IC    R8,HEX(R7)       LOAD THE EBCDIC CHARACTER
         STC   R8,DP+1          STORE INTO OUTPUT LINE
         SR    R7,R7
         IC    R7,OUCBNPG+1     LOAD THE NEW PERFORMANCE GROUP
         CVD   R7,WORK          CONVERT IT TO DECIMAL
         MVC   OUCBPGN(3),=X'202120' MOVE IN THE EDIT MASK
         ED    OUCBPGN-1(4),WORK+6 EDIT THE OUTPUT FIELD
         SR    R7,R7
         MVI   STATUS,C' '      OUCBPFL (SWAP REASON CODE)
         TM    OUCBAFL,OUCBCPL  TEST FOR CPU BURNER
         BNO   NOTSCPU          IF NOT CONTINUE
         MVI   STATUS,C'P'          ELSE MARK CPU BURNER
NOTSCPU  DS    0H
         TM    ASCBRCTF,ASCBOUT SEE IF OUT SOMEHOW
         BNO   PFLDONE          MUST BE IN
         TM    OUCBEFL,OUCBOWT  CHECK FOR TERMINAL OUTPUT WAIT
         BNO   NOTOUTW          BR IF NOT
         MVI   STATUS,C'T'      INDICATE OUTPUT WAIT
         B     PFLDONE
NOTOUTW  DS    0H
         TM    OUCBEFL,OUCBMWT  SEE IF MSO DETECTED WAIT
         BNO   NOTMSO           BR IF NOT
         MVI   STATUS,C'V'      MOVE IN MSO REASON CODE
         B     PFLDONE
NOTMSO   DS    0H
         TM    OUCBEFL,OUCBNQF  SEE IF ENQHOLD AGAINST THIS MEMORY
         BNO   NOTENQ           BR IF NOT
         MVI   STATUS,C'E'      MOVE IN ENQHOLD REASON CODE
         B     PFLDONE
NOTENQ   DS    0H
         TM    OUCBEFL,OUCBLWT+OUCBTRM   SEE IF TERM INPUT OR LONG WAIT
         BNO   NOTLWT
         MVI   STATUS,C'W'      MOVE IN TERMIN OR LONG WAIT
         B     PFLDONE
NOTLWT   DS    0H
         TM    OUCBYFL,OUCBFXS  SEE IF REAL STOR SHORTAGE
         BNO   NOTRSS
         MVI   STATUS,C'S'      MOVE IN REAL STOR SHORT IND
         B     PFLDONE
NOTRSS   DS    0H
         TM    OUCBYFL,OUCBAXS  SEE IF AUX STOR SHORTAGE
         BNO   NOTASS
         MVI   STATUS,C'A'      MOVE IN AUX STOR SHORT IND
         B     PFLDONE
NOTASS   DS    0H
         TM    OUCBQFL,OUCBLSW  SEE IF LOGICAL SWAP
         BNO   PFLDONE
         MVI   STATUS,C'L'      MOVE IN LOGICAL SWAP IND
PFLDONE  DS    0H
         L     R9,OUCBIOSM      LOAD SMF EXCP COUNT
         CVD   R9,WORK          CONVERT IT TO DECIMAL
         MVC   EXCP,=X'206B2020206B202120' MOVE IN EDIT MASK
         ED    EXCP-1(10),WORK+4    EDIT THE RESULT
         LM    R8,R9,ASCBEJST   LOAD STEP TCB CPU TIME
         SRDA  R8,22            CONVERT TO MICROSECONDS
         BINTIME 8              CONVERT TO HUNDREDTHS OF SECONDS
         LM    R10,R11,ASCBSRBT LOAD STEP SRB CPU TIME
         SRDA  R10,22           CONVERT TO MICROSECONDS
         BINTIME 10             CONVERT TO HUNDREDTHS OF SECONDS
         AR    R9,R11           ADD TOGETHER
         CVD   R9,WORK          CONVERT IT TO DECIMAL
         MVC   CPUTIME,=X'202020206B2021204B2020' MOVE IN EDIT MASK
         ED    CPUTIME-1(12),WORK+3   EDIT THE RESULT
         MVC   0(81,R1),LINE    MOVE THE LINE TO THE 3270 BUFFER
         LH    R7,SCRSIZE       LOAD BUFFER SIZE
         LA    R7,81(,7)        INCREMENT BUFFER SIZE
         STH   R7,SCRSIZE       SAVE BUFFER SIZE
         LA    R1,81(,R1)       INCREMENT TO NEXT LINE OF SCREEN
         C     R1,ADBUF         SEE IF THE BUFFER IS FULL
         BE    PUTIT            IF YES, THEN GO TPUT THIS SCREEN
NOGOOD   DS    0H
         LA    R3,4(,R3)        INCREMENT TO NEXT ASCB ENTRY
         BCT   R2,ASCBLOOP      BRANCH BACK TO LOOK AT NEXT MEMORY
PUTIT    DS    0H
         LA    R1,CLEAR         PREPARE
         LA    R0,LENGTH           FOR
         AH    R0,SCRSIZE             THE
         ICM   R1,8,TPUTFLG              FULL SCREEN
         TPUT  (R1),(R0),R                  TPUT
         TGET  BUFFER,R1        READ THE INPUT DATA FROM USER
         OI    BUFFER,X'40'     GET TO UPPER CASE BEFORE COMPARE
         CLI   BUFFER,C'Z'      CHECK IF TERMINATION REQUESTED
         BE    EODAD            EXIT IF SO DIRECTED
         CLI   BUFFER,C'T'      CHECK FOR TSO ONLY
         BNE   BATCHCHK            IF NOT, TRY FOR BATCH ONLY MODE
         MVI   TSOFLAG,C'Y'     RESET THE FLAGS TO GET
         MVI   BTCFLAG,C'N'        ONLY TSO MEMORIES
         MVI   MODESW,X'FF'     INDICATE CHANGE OF MODES
         B     CLEARBUF         BY-PASS FURTHER INPUT CHECKING
BATCHCHK DS    0H
         CLI   BUFFER,C'B'      CHECK FOR BATCH ONLY
         BNE   BOTHCHK          BRANCH TO CHECK OTHER OPTIONS
         MVI   TSOFLAG,C'N'     RESET THE FLAGS TO GET
         MVI   BTCFLAG,C'Y'        ONLY BATCH (STC) MEMORIES
         MVI   MODESW,X'FF'     INDICATE CHANGE OF MODES
         B     CLEARBUF         BY-PASS FURTHER INPUT CHECKING
BOTHCHK DS     0H
         CLI   BUFFER,C'A'      CHECK FOR EVERYTHING
         BNE   OUTCHK           IF NOT, TRY FOR IN OR OUT MODES
         MVI   TSOFLAG,C'Y'     RESET THE FLAGS TO ACCEPT LOGONS
         MVI   BTCFLAG,C'Y'        AND BATCH MEMORIES
         MVI   MODESW,X'FF'     INDICATE CHANGE OF MODES
         B     CLEARBUF         BY-PASS FURTHER INPUT CHECKING
OUTCHK   DS    0H
         CLI   BUFFER,C'O'      CHECK FOR OUT MODE
         BNE   INCHK
         MVI   OUTFLAG,C'Y'     RESET THE FLAG TO TAKE SWAPPED OUT TOO
         MVI   MODESW,X'FF'     INDICATE CHANGE OF MODES
         B     CLEARBUF
INCHK    DS    0H
         CLI   BUFFER,C'I'      CHECK FOR IN OR READY MODE
         BNE   CLEARBUF
         MVI   OUTFLAG,C'N'     RESET THE FLAG TO REJECT SWAPPED OUT
         MVI   MODESW,X'FF'     INDICATE MODE SWITCH
CLEARBUF DS    0H
         MVC   SCRSIZE,=H'0'    RESET SCREEN SIZE
         LA    R1,BUFFER        PREPARE
         LA    R6,BUFFER           FOR
         ICM   R6,8,C' '              THE
         LA    R7,1863                   MOVE
         LA    R8,BUFFER                    CHARACTER
         SR    R9,R9                           LONG
         MVCL  R6,R8                              TO CLEAR BUFFER
         CLI   MODESW,X'FF'     CHECK FOR CHANGE OF MODES
         BNE   MODEOK           BRANCH IF SAME MODE
         MVI   MODESW,X'00'     RESET MODE CHANGE
         B     FINDCVT          START OVER FROM BEGINNING
MODEOK   DS    0H
         LTR   R2,R2            CHECK TO SEE IF MORE MEMORIES TO PROCES
         BNZ   NOGOOD           BRANCH IF YES
         B     FINDCVT          OTHERWISE, START OVER FROM THE TOP
EODAD    DS    0H
BYEBY    DS    0H
         LA    R1,CLR           PREPARE FOR THE
         LA    R0,L'CLR            FULL SCREEN
         ICM   R1,8,TPUTFLG           TPUT TO
         TPUT  (R1),(R0),R               CLEAR THE SCREEN
         LEAVE RETCODE=0        RETURN TO CALLER
         EJECT
TSOFLAG  DC    C'Y'
OUTFLAG  DC    C'N'
BTCFLAG  DC    C'Y'
MODESW   DC    X'00'  MODE CHANGE
WORK     DS    D
HEX      DC    C'0123456789ABCDEF'
X        DC    CL80' '
         ORG   X
LINE     DC    X'1D'
INTENSTY DC    X'60'
MSGLINE  DS    0CL77
JOB      DC    CL8' '
         DC    CL1' '
STEP     DC    CL8' '
         DC    CL1' '
PROCSTEP DC    CL8' '
         DC    CL1' '
STATUS   DC    CL1' '
         DC    CL2' '
SIZE     DC    CL5' '
         DC    CL3' '
TYPE     DC    CL1' '
         DC    CL2' '
WHERE    DC    CL3' '
         DC    CL2' '
DP       DC    CL2' '
         DC    CL1' '
OUCBPGN  DC    CL3' '
         DC    CL1' '
EXCP     DC    CL9' '
         DC    CL2' '
CPUTIME  DC    CL11' '
         DC    CL1' '
         ORG X+90
SCRSIZE  DC    H'0'
TPUTFLG  DC    X'03'
ADBUF    DC    A(Z)
CLR      DC    X'C71140403C40400011404013'
CLEAR    DC    X'C71140403C4040001140401D4013'
         DC    X'401DE8'
HEADING DC CL77'JOB    STEP     PROCSTEP    MEMORY  T  LOC  DP  PG     X
                EXCP          CPU'
BUFFER   DC    23CL81' '
LENGTH   EQU   BUFFER-CLEAR
Z        DS    X
HIGHINT  EQU   X'E8'
LOWINT   EQU   X'60'
         EJECT
CSCB     DSECT ,                MAP OF CSCB
         IEECHAIN ,
         EJECT
         IHAASVT ,              MAP OF ASVT
         EJECT
         CVT   DSECT=YES        MAP OF CVT
         EJECT
         IHAASCB ,              MAP OF ASCB
         EJECT
         IRAOUCB ,              MAP OF OUCB
         END   SHOW
