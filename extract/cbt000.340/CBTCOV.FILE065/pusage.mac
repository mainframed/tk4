PAGE     TITLE 'PAGE USEAGE MONITOR FOR ROCKMON MONITOR'
PUSAGE   CSECT
*
         TSOENTER REGS=YES,PL=(CPPL,IO),BASE=12             *HMD 04/82*
BEGIN    DS    0H
         L     R2,16          -> CVT
         L     R2,X'C4'(R2)   -> SMCA
         MVC   SYS+5(4),16(R2)  GET CPU-ID                  *HMD 04/82*
         TIME  DEC
         IC    R0,X'C0'                 PACK SIGN
         SRL   R0,4                     DROP LEADING ZERO
         ST    R0,SYSTIM      GET SYSTEM TIME
         MVC   PRTIME,=X'402120204B20204B2020' MOVE TIME MASK IN
         ED    PRTIME,SYSTIM  TIME TO PRINT
         L     R2,16          POINT TO CVT
         L     R3,556(R2)               GET ASVT POINTER
         ST    R3,ASVTAD                AND SAVE IT
         L     R2,X'2C0'(R2)  POINT TO ASMVT FROM CVT-OFFSET
         L     R5,8(R2)                 GET PART ADDR
         L     R4,4(R2)                 GET SART ADDR
         LA    R3,X'70'(R2)             GET TOTAL ADDR
         L     R8,0(R3)                 SAVE OVERALL TOTAL
         S     R8,X'6C'(R2)
         SPACE 2
** GET TOTALS OF SLOT COUNTS FOR HEADING **
         SPACE 2
         LA    R11,3                    BCT COUNT REG
         LA    R10,T1                   POINT TO TOTALS IN HDING
         B     CNVTOT1
CNVTOT   S     R8,0(R3)
CNVTOT1  DS    0H
         L     R7,0(R3)                 TOTAL TO REG
         CVD   R7,DWD                   TOT TO DECIMAL
         MVC   0(6,R10),MASK            MASK TO PRINT
         ED    0(6,R10),DWD+5           TOTAL TO PRINT
         LA    R3,4(R3)                 NEXT TOTAL ADDR
         LA    R10,16(R10)              NEXT HDING POSITION
         BCT   R11,CNVTOT               AND PROCESS
         LR    R7,R8                    GET UNUSED RESERVED SLOTS
         LA    R1,RES
         BAL   R8,CNVT
         L     R7,X'6C'(R2)             GET UNRESERVED TOTAL
         LA    R1,UNRES
         BAL   R8,CNVT
         MVC   L1+1(L'HDING),HDING
         MVC   L2+1(L'HD2),HD2
         MVC   L3+1(L'PRTHED),PRTHED    PARTE HEADING TO BLOCK
         LA    R9,L4+2                  GET POINTER TO LINES
         EJECT
** PART INFO PROCESSED **
         SPACE 2
         L     R3,24(R5)                ADDR OF DSN LIST
         L     R10,4(R5)                TOTAL NBR PARTES
         LA    R6,80(R5)                ADDR OF PARTES
         B     TSTPRT
NXTLOT   DS    0H
         LA    R6,64(R6)                NEXT PARTE
NXTDSN   LA    R3,44(R3)                NEXT DSN
TSTPRT   DS    0H
         CLI   8(R6),X'20'              DUPLEX PARTE?
         BE    UPNXT                    YES GET NEXT PARTE & DSN
         CLI   0(R3),C' '               BLANK DSN
         BE    UPNXT                   YES GET NEXT DSN
         MVC   DSN(15),0(R3)            DSN TO PRINT
         BAL   R11,GETYPE               GET PAGE TYPE
         BAL   R11,ALLOC                GET SLOTS ALLOCED
         BAL   R11,SIZE                 GET DS SIZE IN SLOTS
         BAL   R11,RATE                 GET RATE
         BAL   R11,ERRORS               GET IO ERROR COUNT
         BAL   R11,PRUCB                GET UCB INFO
         BAL   R11,TOLINE               MOVE PRINT TO LINE
UPNXT    DS    0H
         BCT   R10,NXTLOT               AND PROCESS
         EJECT
** SARTE INFO PROCESSED **
         SPACE 2
         L     R10,4(R4)                NBR OF SARTES
         L     R3,24(R4)                POINT TO DSN LIST
         LA    R6,80(R4)                POINT TO SARTES
         B     TSTSRT
SRTNXT   DS    0H
         LA    R3,44(R3)                NEXT DSN
         LA    R6,48(R6)                NEXT SARTE
TSTSRT   DS    0H
         CLI   0(R3),C' '               IS DSN BLANK
         BE    UPSRT                    NO OK
         MVC   DSN(15),0(R3)            MOVE IN DSN
         MVC   TYP(4),=C'SWAP'          MOVE IN TYPE
         BAL   R11,ALLOC                GET SWAP SETS ALLOCED
         BAL   R11,SIZE                 GET DS SIZE
         BAL   R11,ERRORS               GET ERRORS COUNT
         BAL   R11,PRUCB                GET UCB INFO
         BAL   R11,TOLINE               MOVE INFO TO LINE
UPSRT    BCT   R10,SRTNXT
         SR    R6,R6                    CLEAR NON 8 CHAR BATCH COUNT
         SR    R7,R7                    CLEAR BATCH COUNT
         SR    R10,R10                    CLEAR TSO COUNT
         L     R1,ASVTAD                RESTORE ASVT ADDRESS
         L     R2,516(R1)               MAX NUMBER OF ADDRESS SPACES
         LA    R3,524(R1)               FIRST ASVT ENTRY MINUS 4
ASVTLOOP DS    0H
         LA    R3,4(R3)                 GET ASVT ENTRY
         ICM   R4,B'1111',0(R3)         IS HIG ORDER BIT ON
         BM    GETNXT                   ASID NOT ASSIGNED-GETNXT
         ICM   R5,B'1111',60(R4)        IS THERE A TSB ADR
         BNZ   TSOJOB                   YES -MUST BE TSO JOB
         L     R1,176(R4)               2ND JOB POINTER
         CLC   =C'INIT',0(R1)           IS NAME INIT
         BE    BATCH                    YES THERFORE BATCH JOB
         LA    R7,1(R7)                 UP STASK COUNT BY 1
         B     GETNXT                   AND GET NEXT ASCB
BATCH    DS    0H
         ICM   R14,B'1111',172(R4)
         BZ    GETNXT
         LA    R6,1(R6)                 UP BATCH COUNT BY 1
         B     GETNXT                   AND GET NEXT ASCB
TSOJOB   DS    0H
         LA    R10,1(R10)                 UP TSO COUNT
GETNXT   DS    0H
         BCT   R2,ASVTLOOP              AND ROUND AGAIN
         BCTR  R7,R0                    LOSE *MASTER*
         LA    R1,TYP+10                PRINT POINTER
         BAL   R8,CNVT                  DEAL WITH STASK COUNT
         MVC   TYP(12),=C'STASK TOTAL-'
         LR    R7,R6                    GET BATCH TOTAL
         LA    R1,VOL+10                PRINT POINTER
         BAL   R8,CNVT                  DEAL WITH BATCH COUNT
         MVC   VOL(12),=C'BATCH TOTAL-'
         LR    R7,R10                   GET TSO TOTAL
         LA    R1,SIZ+8                 PRINT POINTER
         BAL   R8,CNVT                  DEAL WITH TSO COUNT
         MVC   SIZ(10),=C'TSO TOTAL-'
         BAL   R11,TOLINE
PRT      EQU   *
         CALL  CLR3270                   CLEAR THE SCREEN
         LA    R5,L1                     -> FIRST LINE
         LH    R6,=H'80'                 * LOAD INCREMENT
         L     R7,LAST                   -> LAST LINE
TPUTL    MVC   LINEOUT(80),0(R5)         MOVE TEXT TO LINE  *HMD 04/82*
         XC    TSOECB,TSOECB             CLEAR ECB          *HMD 04/82*
         PUTLINE PARM=PTPB,OUTPUT=(LINE,TERM,SINGLE,DATA),MF=(E,IOPL)
         BXLE  R5,R6,TPUTL               AND LOOP TILL ALL DONE
         XC    TSOECB,TSOECB       CLEAR ECB                *HMD 04/82*
         MVI   LI,C' '             CLEAR REPLY AREA         *HMD 04/82*
         GETLINE PARM=GTPB,TERMGET=(EDIT,WAIT),             *HMD 04/82*X
               MF=(E,IOPL)                                  *HMD 04/82*
         L     R1,GTPB+4          GET ADDRESS OF LINE       *HMD 04/82*
         LH    R10,0(R1)          GET LENGTH OF LINE        *HMD 04/82*
         CH    R10,=H'4'          ZERO LENGTH LINE?         *HMD 04/82*
         BE    GOFREE             YES, GO FREE BUFFER       *HMD 04/82*
         MVC   LI(1),4(R1)        RETURN CHAR               *HMD 04/82*
GOFREE   FREEMAIN R,LV=(10),A=(1),SP=1  FREE STORAGE        *HMD 04/82*
         TCLEARQ INPUT                                      *HMD 04/82*
         EJECT                                              *HMD 04/82*
         OI    LI,X'40'       UPPER CASE
         CLI   LI,C'E'            END ?                     *HMD 04/82*
         BE    WBRET                                        *HMD 04/82*
         CLI   LI,C'Z'            END ?
         BE    WBRET
         CLI   LI,C'M'            MENU
         BE    WBRET              YES
         CLI   LI,C'0'            UPPER 0
         BL    BEGIN
         CLI   LI,C'9'            UPPER 9
         BH    BEGIN
         B     WBRET
CNVT     DS    0H
         CVD   R7,DWD                   TO DECIMAL
         MVC   0(6,R1),MASK             MOVE IN MASK
         ED    0(6,R1),DWD+5            EDIT IN TOTAL
         BR    R8
GETYPE   DS    0H
         CLI   8(R6),X'80'              PLPA DS?
         BNE   COMDS                    NO
         MVC   TYP(4),=C'PLPA'          MOVE IN DS TYPE
         BR    R11
COMDS    DS    0H
         CLI   8(R6),X'40'              COMMON DS?
         BNE   LOCLDS                   NO
         MVC   TYP(6),=C'COMMON'        MOVE IN DS TYPE
         BR    R11
LOCLDS   DS    0H
         CLI   8(R6),X'10'              LOCAL DS?
         BNE   NXTDSN                   NO GET NEXT DSN
         MVC   TYP(5),=C'LOCAL'         MOVE IN DS TYPE
         BR    R11
ALLOC    DS    0H
         LA    R1,ALC                   PRINT ADR
         L     R7,20(R6)                ALLOC COUNT
         BAL   R8,CNVT                  CONVERTED
         BR    R11
SIZE     DS    0H
         LA    R1,SIZ                   PRINT ADR
         L     R7,16(R6)                SIZE TOTAL
         BAL   R8,CNVT
         L     R8,16(R6)    LOAD SIZE
         LR    R1,R8        GET USED SLOTS
         S     R1,20(R6)     LOAD AVAILABLE SLOTS
         SR    R0,R0
         M     R0,=F'100'    MULTIPLY FOR % CALC
         DR    R0,R8        DIVIDE FOR %
         CVD   R1,DWD        CONVERT TO DECIMAL
         MVC   USED,=X'40202120'
         ED    USED,DWD+6    EDIT THE RESULT
         MVI   USED+4,C'%'   SET % SIGN
         BR    R11
RATE     DS    0H
         L     R1,56(R6)     LOAD BURST RATE
         SRL   R1,8            DIVIDE BY 256
         CVD   R1,DWD
         MVC   RATEO,=X'40202120'
         ED    RATEO,DWD+6
         BR    R11
ERRORS   DS    0H
         LA    R1,ERS                   PRINT ADR
         L     R7,24(R6)                ERROR COUNT
         BAL   R8,CNVT                  CONVERTED
         CLI   9(R6),X'40'              BAD DS?
         BNER  R11                      NO-CARRY ON
         MVI   0(R1),C'*'               YES-MARK DS WITH *
         BR    R11
PRUCB    DS    0H
         L     R7,44(R6)                UCB POINTER
         MVC   VOL(6),28(R7)            MOVE IN VOLSER
         MVC   DVADR,13(R7)             MOVE IN DEV ADR
         BR    R11
TOLINE   DS    0H
         MVC   0(L'PSLIN,R9),PSLIN      PRINT TO LINE
         LA    R9,80(R9)                NEXT LINE
         ST    R9,LAST                   SAVE LAST LINE ->
         MVC   PSLIN,BLANKS
         BR    R11
WBRET    DS    0H
         CALL  CLR3270
         EJECT                                              *HMD 04/82*
*
**
***      FREE DYNAMIC SAVEAREA AND RETURN
**
*
RET      DS    0H
         L     R1,4(R13)                ADDR OF LAST SA     *HMD 04/82*
         MVC   56(1,R1),LI              MOVE IN REPLY R9    *HMD 04/82*
         TSOLEAVE ISN=LTORG
         EJECT                                              *HMD 04/82*
LINE     DC    AL2(84),AL2(0)             LINE DESCRIPTOR   *HMD 04/82*
LINEOUT  DC    CL80' '                    LINE OUTPUT TEXT  *HMD 04/82*
L1       DC    CL80' '
L2       DC    CL80' '
L3       DC    CL80' '
L4       DC    CL80' '
L5       DC    CL80' '
L6       DC    CL80' '
L7       DC    CL80' '
L8       DC    CL80' '
L9       DC    CL80' '
LA       DC    CL80' '
LB       DC    CL80' '
LC       DC    CL80' '
LD       DC    CL80' '
LE       DC    CL80' '
LF       DC    CL80' '
L10      DC    CL80' '
L11      DC    CL80' '
L12      DC    CL80' '
L13      DC    CL80' '
L14      DC    CL80' '
L15      DC    CL80' '
L16      DC    CL80' '
L17      DC    CL80' '
L18      DC    CL80' '
L19      DC    CL80' '
L1A      DC    CL80' '
LI       DC    C' '
SISE     EQU   *-LINE
PTPB     PUTLINE MF=L                                       *HMD 04/82*
GTPB     GETLINE MF=L                                       *HMD 04/82*
PRTHED   DC    C' TYPE   DSN             VOLSER DVAD  AVAIL   SIZE ERROX
               RS RATE  USED'
PSLIN    DS    0CL73
TYP      DS    CL6
         DS    CL1
DSN      DS    CL15
         DS    CL1
VOL      DS    CL6
         DS    CL1
DVADR    DS    CL3
         DS    CL2
ALC      DS    CL6
         DS    CL1
SIZ      DS    CL6
         DS    CL1
ERS      DS    CL6
         DS    CL1
RATEO    DS    CL4
         DS    CL1
USED     DS    CL4
         DS    CL20
SAVE11   DS    F
SYSTIM   DS    F
ASVTAD   DS    F
DWD      DS    D
LAST     DS    F
HDING    DS    0CL73
         DC    CL5' TIME'
PRTIME   DS    CL10
SYS      DC    CL9' SYS XXXX'                               *HMD 04/82*
         DC    CL1'  '
         DC    CL9'   SLOTS  '
T1       DS    CL6
         DC    CL9'     VIO  '
T2       DS    CL6
         DC    CL9'  NONVIO '
T3       DS    CL6
BLANKS   DC    CL100' '      BLANKS
MASK     DC    X'402020202021'
HD2      DS    0CL53
         DC    CL18' SLOTS UNRESERVED '
UNRES    DS    CL6
         DC    CL4'    '
         DC    CL19'RESERVED BUT UNUSED'
RES      DS    CL6
         END   PUSAGE
