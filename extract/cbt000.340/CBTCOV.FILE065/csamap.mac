         TITLE 'INTERNAL MACROS'
         MACRO
&L       FILL  &A,&B,&C
         LCLA  &LEN
         LCLC  &R
         AIF   ('&C'(1,1) NE '(').A
&LEN     SETA  K'&C-2
&R       SETC  '&C'(2,&LEN)
&L       LR    R1,&R
         AGO   .B
.A       ANOP
&L       L     R1,&C
.B       CVD   R1,DECIMAL
         MVC   FORMAT,EDITD
         ED    FORMAT,DECIMAL+4
         AIF   ('&A'(1,1) NE '(').C
&LEN     SETA  K'&A-2
&R       SETC  '&A'(2,&LEN)
         MVC   0(&B,&R),FORMAT+8-&B
         AGO   .D
.C       MVC   &A.(&B),FORMAT+8-&B
.D       MEND
         SPACE 2
         MACRO
&L       KFILL &A,&B,&C
         LCLA  &LEN
         LCLC  &R
         AIF   ('&C'(1,1) NE '(').A
&LEN     SETA  K'&C-2
&R       SETC  '&C'(2,&LEN)
&L       LR    R1,&R
         AGO   .B
.A       ANOP
&L       L     R1,&C
.B       SRL   R1,10
         CVD   R1,DECIMAL
         MVC   FORMAT,EDITK
         ED    FORMAT+1(6),DECIMAL+5
         AIF   ('&A'(1,1) NE '(').C
&LEN     SETA  K'&A-2
&R       SETC  '&A'(2,&LEN)
         MVC   0(&B,&R),FORMAT+8-&B
         AGO   .D
.C       MVC   &A.(&B),FORMAT+8-&B
.D       MEND
         SPACE 2
         MACRO
&L       HFILL &A,&B
         LCLA  &LEN
         LCLC  &R
         AIF   ('&B'(1,1) NE '(').A
&LEN     SETA  K'&B-2
&R       SETC  '&B'(2,&LEN)
&L       LR    R1,&R
         AGO   .B
.A       ANOP
&L       L     R1,&B
.B       STCM  R1,7,DECIMAL
         UNPK  FORMAT(7),DECIMAL(4)
         TR    FORMAT(6),HEXTBL-240
         AIF   ('&A'(1,1) NE '(').C
&LEN     SETA  K'&A-2
&R       SETC  '&A'(2,&LEN)
         MVC   0(6,&R),FORMAT
         AGO   .D
.C       MVC   &A.(6),FORMAT
.D       MEND
         SPACE 2
         MACRO
&L       PFILL &A,&B,&C,&D
         LCLA  &LEN
         LCLC  &R
         AIF   ('&C'(1,1) NE '(').A
&LEN     SETA  K'&C-2
&R       SETC  '&C'(2,&LEN)
&L       LR    R1,&R
         AGO   .B
.A       ANOP
&L       L     R1,&C
.B       MH    R1,=H'10000'
         SR    R0,R0
         AIF   ('&D'(1,1) NE '(').C
&LEN     SETA  K'&D-2
&R       SETC  '&D'(2,&LEN)
         DR    R0,&R
         AGO   .D
.C       D     R0,&D
.D       CVD   R1,DECIMAL
         MVC   FORMAT,EDITP
         ED    FORMAT+1(7),DECIMAL+5
         AIF   ('&A'(1,1) NE '(').E
&LEN     SETA  K'&A-2
&R       SETC  '&A'(2,&LEN)
         MVC   0(&B,&R),FORMAT+8-&B
         AGO   .F
.E       MVC   &A.(&B),FORMAT+8-&B
.F       MEND
CSAMAP   TITLE 'CSA USAGE MONITOR'
         SPACE 2
*  FUNCTION:  CSAMAP EXAMINES THE CSA FBQE CHAIN AND THE SPQE CHAIN TO
*       DETERMINE THE CSA USAGE ON A TIMER SAMPLED BASIS.
         SPACE 1
*  ENTRY POINT:  ENTER AT CSAMAP WITH NORMAL MVS LINKAGE CONVENTIONS.
         SPACE 1
*  INPUT:  THE PARAMETER FIELD REFERENCED BY REG 1 BEGINS WITH A HALF
*       WORD CONTAINING THE LENGTH OF THE PARAMETER STRING FOLLOWED BY
*       THE STRING.  THE STRING CONSISTS OF A SERIES OF PARAMETERS
*       SEPERATED BY COMMAS. THE FOLLOWING PARAMETERS ARE SUPPORTED:
*
*         TIME=XXX    THE WAIT INTERVAL IN SECONDS  (DEFAULT 5)
*         COUNT=XXX   THE NUMBER OF SAMPLES  (DEFAULT 120)
         SPACE 1
*  OUTPUT:  A REPORT OF SYSTEM STATISTICS, THE USAGE OF CSA, AND THE
*       USAGE OF EACH OF THE SUBPOOLS IN CSA.
         SPACE 1
*  JCL:  A SYSPRINT DD CARD MUST BE PROVIDED.
         SPACE 1
*  EXIT:  THE PROGRAM ISSUES THE FOLLOWING RETURN CODES:
*         0  SUCCESSFUL COMPLETION
*         4  ERROR IN PARAMETER STRING - EXECUTION TERMINATED
*         8  NO SYSPRINT - EXECUTION TERMINATED
         SPACE 1
*  VERSION:  THIS IS VERSION 1 WRITTEN APRIL 1977 BY STEVEN ANDERSON
*       OSS GROUP OF ISPL  TRW SYSTEMS GROUP
         TITLE 'EXTERNAL INITIALIZATION'
         PRINT NOGEN
CSAMAP   CSECT
         STM   R14,R12,12(R13)
         BALR  R12,0
         USING *,R12,R11
         LA    R11,2048            ESTABLISH
         LA    R11,2048(R11,R12)   SECOND BASE
         LA    R10,SAVEAREA        ESTABLISH
         ST    R10,8(,R13)          SAVE
         ST    R13,4(,R10)           AREA
         LR    R13,R10                CHAINING
         SPACE 2
*  EXAMINE THE PARAMETERS FOR THIS RUN
         SPACE 2
PARMS    L     WK1,0(,R1)          -> PARAMETER FIELD
         LH    WK2,0(,WK1)         LENGTH OF PARAMETER FIELD
         LTR   WK2,WK2             LENGTH OF ZERO
         BZ    OPENPRT             GO OPEN SYSPRINT DATASET
         LA    WK1,2(,WK1)         -> FIRST PARAMETER
NEXTPARM CLC   0(5,WK1),=C'TIME='
         BE    SETTIME
         CLC   0(6,WK1),=C'COUNT='
         BE    SETCOUNT
         SPACE 2
*  ERROR IN PARAMETER FIELD, SET RETURN CODE OF 4 AND EXIT
         SPACE 2
PARMERR  L     R13,4(,R13)         GET LAST SAVEAREA
         LM    R14,R12,12(R13)     RESTORE REGISTERS
         LA    R15,4               SET RETURN CODE OF FOUR
         BR    R14                 RETURN
         SPACE 2
*  SET WAIT TIME INTERVAL
         SPACE 2
SETTIME  LA    WK1,5(,WK1)         MOVE TO DATA FIELD
         S     WK2,=F'5'           DECREASE PARAMETER LENGTH
         BNP   PARMERR             ERROR IF LENGTH ZERO
         BAL   LINK,GETVAL         GET TIME INTERVAL
         ST    WK3,INTERVAL        SET WAIT TIME
         MH    WK3,=H'100'         CONVERT TO HUNDRETHS OF SECOND
         ST    WK3,WAITTIME        SET VALUE FOR STIMER
         LTR   WK2,WK2             PARAMETER LENGTH ZERO
         BNP   OPENPRT             YES, NO MORE PARAMETERS
         LA    WK1,1(,WK1)         -> NEXT PARAMETER
         BCT   WK2,NEXTPARM        SCAN NEXT PARAMETER
         B     PARMERR             ERROR IF PARAMETER LENGTH ZERO
         SPACE 2
*  SET CYCLE COUNT
         SPACE 2
SETCOUNT LA    WK1,6(,WK1)         MOVE TO DATA FIELD
         S     WK2,=F'6'           DECREASE PARAMETER LENGTH
         BNP   PARMERR             ERROR IF LENGTH ZERO
         BAL   LINK,GETVAL         GET TIME INTERVAL
         ST    WK3,MAXIMUM         SET COUNT
         LTR   WK2,WK2             PARAMETER LENGTH ZERO
         BNP   OPENPRT             YES, NO MORE PARAMETERS
         LA    WK1,1(,WK1)         -> NEXT PARAMETER
         BCT   WK2,NEXTPARM        SCAN NEXT PARAMETER
         B     PARMERR             ERROR IF PARAMETER LENGTH ZERO
         SPACE 2
*  GET INTEGER VALUE FROM PARAMETER FIELD
         SPACE 2
GETVAL   SR    WK3,WK3             SET VALUE TO ZERO
         LR    WK4,WK3
NEXTVAL  CLI   0(WK1),C','         END OF VALUE REACHED
         BE    TESTVAL             YES, CHECK VALUE FOR NON ZERO
         CLI   0(WK1),C'0'         DECIMAL
         BL    PARMERR              DIGIT
         CLI   0(WK1),C'9'           BETWEEN
         BH    PARMERR                0 AND 9
         IC    WK4,0(,WK1)         MOVE DIGIT TO REGISTER
         N     WK4,=F'15'          MASK OFF THE FIRST 4 BITS
         MH    WK3,=H'10'          MULTIPLY PREVIOUS SUM BY 10
         AR    WK3,WK4             FORM NEW TOTAL
         LA    WK1,1(,WK1)         -> NEXT DIGIT
         BCT   WK2,NEXTVAL         GET NEXT DIGIT
TESTVAL  LTR   WK3,WK3             IS VALUE ZERO
         BZ    PARMERR             IF YES, ERROR
         BR    LINK                RETURN WITH VALUE IN WK3
         SPACE 2
         SPACE 2
*  OPEN SYSPRINT DATASET
         SPACE 2
OPENPRT  OPEN  (PRINTDCB,OUTPUT)
         LA    WK1,PRINTDCB
         USING IHADCB,WK1
         TM    DCBOFLGS,DCBOFOPN   WAS OPEN SUCCESSFUL
         BO    SETUP               GO TO INITIALIZATION SECTION
         DROP  WK1
         SPACE 2
*  SYSPRINT DD CARD MISSING, SET RETURN CODE OF 8 AND EXIT
         SPACE 2
         L     R13,4(,R13)         GET LAST SAVEAREA
         LM    R14,R12,12(R13)     RESTORE REGISTERS
         LA    R15,8               SET RETURN CODE OF FOUR
         BR    R14                 RETURN
         TITLE 'INTERNAL INITIALIZATION'
         SPACE 1
*  INITIALIZATION SECTION
         SPACE 2
SETUP    L     WK1,CVTPTR          -> CVT
         USING CVT,WK1
         L     WK2,CVTSMCA         -> SMCA
         MVC   SID,16(WK2)         SMF SYSTEM ID
         L     WK2,CVTEORM         LAST BYTE OF REAL MEMORY
         LA    WK2,1(,WK2)         ROUND UP
         ST    WK2,REALEND
         L     WK2,CVTGDA          -> GLOBAL DATA AREA
         USING GDA,WK2
         L     WK3,PASIZE          SIZE OF USER PRIVATE AREA
         ST    WK3,PVTSIZE
         L     WK3,PASTRT          START OF USER PRIVATE AREA
         ST    WK3,PVTSTART
         L     WK3,VRPQEP          -> V=R PQE
         USING PQE,WK3
         L     WK4,PQESIZE         SIZE OF V=R AREA
         ST    WK4,VRSIZE
         L     WK4,PQEREGN         START OF V=R AREA
         ST    WK4,VRSTART
         L     WK3,CSAPQEP         -> CSA PQE
         L     WK4,PQESIZE         SIZE OF CSA AREA
         ST    WK4,CSASIZE
         L     WK4,PQEREGN         START OF CSA AREA
         ST    WK4,CSASTART
         L     WK3,SQASPQEP        -> SQA SPQE
         USING SPQESECT,WK3
         L     WK3,SPDQEPTR        -> SQA DQE
         USING DQE,WK3
         L     WK4,DQELNTH         SIZE OF SQA
         ST    WK4,SQASIZE
         L     WK4,DQEBLKAD        START OF SQA
         LA    WK4,0(,WK4)
         ST    WK4,SQASTART
         L     WK2,CVTLPDIA        -> START OF LPA
         LA    WK2,0(,WK2)
         ST    WK2,LPASTART
         SR    WK4,WK2             SIZE OF LPA
         ST    WK4,LPASIZE
         L     WK2,CVTPVTP         -> PVT
         USING PVT,WK2
         LH    WK3,PVTFPFN         FIRST PFTE INDEX
         SLL   WK3,8               CHANGE TO ADDRESS
         ST    WK3,NUCBOUND        ADDRESS OF FIRST FRAME PAST NUCLEUS
         DROP  WK3
         DROP  WK2
         DROP  WK1
         SPACE 2
*  TIME STAMP START OF RUN
         SPACE 2
TIMER1   TIME  DEC
         STM   R0,R1,STARTIME      SAVE START TIME
         TITLE 'MONITOR CSA USAGE'
         SPACE 1
*  SCAN UNALLOCATED CSA SPACE
         SPACE 2
CSASCAN  L     WK1,CVTPTR          -> CVT
         USING CVT,WK1
         L     WK1,CVTGDA          -> GLOBAL DATA AREA
         USING GDA,WK1
         L     WK2,CSAPQEP         -> CSA PQE
         USING PQE,WK2
         SR    WK4,WK4             CLEAR SUM
         ICM   WK3,F,PQEFFBQE      -> FIRST FBQE
         BZ    SETCSA              STOP IS ZERO
         USING FBQE,WK3
CSALOOP  A     WK4,SIZE            ADD FBQE SIZE TO TOTAL
         L     WK3,FWDPTR          -> NEXT FBQE
         CR    WK2,WK3             END OF CHAIN
         BNE   CSALOOP             NO, CONTINUE DOWN CHAIN
         DROP  WK3
         DROP  WK2
         DROP  WK1
SETCSA   L     WK1,CSASIZE         SIZE OF CSA
         SR    WK1,WK4             SUBTRACT UNALLOCATED SPACE
         C     WK1,CSAHI           IS THIS THE HIGHEST CSA VALUE
         BNH   *+8                 NO, SKIP
         ST    WK1,CSAHI           SET NEW HIGH
         C     WK1,CSALO           IS THIS THE LOWEST CSA VALUE
         BNL   *+8                 NO, SKIP
         ST    WK1,CSALO           SET NEW LOW
         A     WK1,CSATOTAL        ADD COUNT TO TOTAL
         ST    WK1,CSATOTAL        SET NEW TOTAL
         TITLE 'MONITOR CSA SUBPOOL USAGE'
         SPACE 1
*  EXAMINE THE ALLOCATED SPACE FOR EACH CSA SUBPOOL
         SPACE 2
SUBSCAN  L     WK1,CVTPTR          -> CVT
         USING CVT,WK1
         L     WK1,CVTGDA          -> GLOBAL DATA AREA
         USING GDA,WK1
         ICM   WK1,F,CSASPQEP      -> CSA SPQE CHAIN
         BZ    LIMIT               EXIT IF ZERO
         USING SPQESECT,WK1
SUBSTART LA    WK2,SUBTABLE        -> SUBPOOL TABLE
         USING TABLE,WK2
         ICM   WK3,F,POOLS         NUMBER OF SUBPOOLS FOUND
         BZ    NEWPOOL             BRANCH IF NO SUBPOOLS
SUBLOOP  CLC   SUBID,SPQEID        MATCHING SUBPOOL
         BE    SUBSUM              YES, GO SUM SPACE
         LA    WK2,16(,WK2)        NEXT TABLE ENTRY
         BCT   WK3,SUBLOOP         CHECK ALL SUBPOOLS
NEWPOOL  L     WK3,POOLS           NUMBER OF SUBPOOLS FOUND
         C     WK3,SUBLIMIT        TABLE LIMIT REACHED
         BNL   NEXTSPQE            YES, SKIP SPQE
         MVC   SUBID,SPQEID        SET SUBPOOL ID
         MVC   SUBMIN,MEG16        SET A HIGH VALUE AS MINIMUM
         LA    WK3,1(,WK3)         INCREASE SUBPOOL COUNT BY 1
         ST    WK3,POOLS           SAVE VALUE
SUBSUM   SR    WK4,WK4             CLEAR SUM
         ICM   WK3,F,SPDQEPTR      -> FIRST DQE
         USING DQE,WK3
         BZ    SETSUB              STOP IF ZERO PTR
DQELOOP  A     WK4,DQELNTH         SIZE OF BLOCK
         ICM   WK3,F,DQEPTR        -> NEXT DQE
         BNZ   DQELOOP             ADD ALL DQES
SETSUB   C     WK4,SUBMAX          IS THIS THE LARGEST SUBPOOL SIZE
         BNH   *+8                 NO, SKIP
         ST    WK4,SUBMAX          SET NEW MAXIMUM
         C     WK4,SUBMIN          IS THIS THE SMALLEST SUBPOOL SIZE
         BNL   *+8                 NO, SKIP
         ST    WK4,SUBMIN          SET NEW MINIMUM
         SRL   WK4,10              CONVERT ADDRESS TO K
         A     WK4,SUBTOTAL        ADD SPACE TO TOTAL
         ST    WK4,SUBTOTAL        SET NEW TOTAL
NEXTSPQE ICM   WK1,F,SPQEAD        -> NEXT SPQE
         BNZ   SUBSTART            FOLLOW THE SPQE CHAIN
         DROP  WK3
         DROP  WK2
         DROP  WK1
         TITLE 'WAIT CODE AND TIMER EXIT'
         SPACE 1
*  IF COUNT LIMIT HAS NOT BEEN REACHED, WAIT SPECIFIED TIME
         SPACE 2
LIMIT    L     WK1,COUNT           COUNT OF CYCLES
         LA    WK1,1(,WK1)         INCREASE BY ONE
         ST    WK1,COUNT           SAVE COUNT
         C     WK1,MAXIMUM         HAS LIMIT BEEN REACHED
         BNL   REPORT              YES, GO WRITE REPORT
         SR    R0,R0
         ST    R0,WAITECB          CLEAR ECB
         STIMER REAL,TIMEXIT,BINTVL=WAITTIME
         WAIT  ECB=WAITECB
         B     CSASCAN
         SPACE 2
*  TIMER EXIT - POST WAITING MAINLINE CODE
         SPACE 2
         USING *,R15
TIMEXIT  STM   R14,R1,12(R13)      SHORT SAVE
         POST  WAITECB
         LM    R14,R1,12(R13)      RESTORE REGISTERS
         BR    R14                 EXIT
         DROP  R15
         SPACE 2
WAITECB  DC    F'0'
         TITLE 'SYSTEM STATISTICS REPORT'
         SPACE 2
*  WRITE SYSTEM STATISTICS REPORT
         SPACE 2
REPORT   TIME  DEC
         STM   R0,R1,STOPTIME      SAVE STOP TIME
         ED    EDIT11,STARTIME     FORMAT START TIME
         ED    EDIT12,STARTIME+5   FORMAT START DATE
         ED    EDIT13,STOPTIME     FORMAT STOP TIME
         ED    EDIT14,STOPTIME+5   FORMAT STOP DATE
         FILL  HDRCOUNT,6,MAXIMUM  PRINT NUMBER OF CYCLES
         FILL  HDRTIME,4,INTERVAL  PRINT CYCLE INTERVAL
         WRITE OUT,SF,,HEADER1,MF=E
         CHECK OUT
         MVI   BUFFER,C'0'         DOUBLE SPACE
         MVC   BUFFER+10(20),=C'     NUCLEUS SIZE = '
         KFILL BUFFER+30,6,NUCBOUND
         MVC   BUFFER+40(20),=C' REAL MEMORY SIZE = '
         KFILL BUFFER+60,6,REALEND
         BAL   LINK,LINE           PRINT THE LINE
         MVC   BUFFER+10(20),=C'   USER AREA SIZE = '
         KFILL BUFFER+30,6,PVTSIZE
         MVC   BUFFER+40(20),=C'USER AREA ADDRESS = '
         HFILL BUFFER+60,PVTSTART
         BAL   LINK,LINE           PRINT THE LINE
         MVC   BUFFER+10(20),=C'         V=R SIZE = '
         KFILL BUFFER+30,6,VRSIZE
         MVC   BUFFER+40(20),=C'      V=R ADDRESS = '
         HFILL BUFFER+60,VRSTART
         MVC   BUFFER+81(11),=C'SYSTEM ID ='
         MVC   BUFFER+93(4),SID    SMF SYSTEM ID
         BAL   LINK,LINE           PRINT THE LINE
         MVC   BUFFER+10(20),=C'         CSA SIZE = '
         KFILL BUFFER+30,6,CSASIZE
         MVC   BUFFER+40(20),=C'      CSA ADDRESS = '
         HFILL BUFFER+60,CSASTART
         BAL   LINK,LINE           PRINT THE LINE
         MVC   BUFFER+10(20),=C'         LPA SIZE = '
         KFILL BUFFER+30,6,LPASIZE
         MVC   BUFFER+40(20),=C'      LPA ADDRESS = '
         HFILL BUFFER+60,LPASTART
         BAL   LINK,LINE           PRINT THE LINE
         MVC   BUFFER+10(20),=C'         SQA SIZE = '
         KFILL BUFFER+30,6,SQASIZE
         MVC   BUFFER+40(20),=C'      SQA ADDRESS = '
         HFILL BUFFER+60,SQASTART
         BAL   LINK,LINE           PRINT THE LINE
         TITLE 'FRAME USAGE REPORT'
         SPACE 1
*  WRITE CSA USAGE REPORT
         SPACE 2
         L     WK3,COUNT
         SR    WK1,WK1             DIVIDE TOTAL
         L     WK2,CSATOTAL         SPACE FOUND
         DR    WK1,WK3               BY # OF INTERVALS
         ST    WK2,CSATOTAL           TO GET AVERAGE
         MVI   BUFFER,C'0'         DOUBLE SPACE
         MVC   BUFFER+10(25),=C'TOTAL ALLOCATED CSA SPACE'
         BAL   LINK,LINE           PRINT THE LINE
         MVI   BUFFER,C'0'         DOUBLE SPACE
         MVC   BUFFER+10(20),=C'          AVERAGE = '
         KFILL BUFFER+30,6,CSATOTAL PRINT THE AVERAGE CSA SPACE
         BAL   LINK,LINE           PRINT THE LINE
         MVC   BUFFER+10(20),=C'          HIGHEST = '
         KFILL BUFFER+30,6,CSAHI   PRINT THE HIGHEST CSA SPACE
         BAL   LINK,LINE           PRINT LINE
         MVC   BUFFER+10(20),=C'           LOWEST = '
         KFILL BUFFER+30,6,CSALO   PRINT THE LOWEST CSA SPACE
         BAL   LINK,LINE           PRINT LINE
         TITLE 'CSA SUBPOOL USAGE REPORT'
         SPACE 1
*  WRITE CSA SUBPOOL USAGE REPORT
         SPACE 2
         ICM   WK1,F,POOLS         GET NUMBER OF SUBPOOLS
         BZ    SHUTDOWN            EXIT IF ZERO
         MVI   BUFFER,C'0'         DOUBLE SPACE
         MVC   BUFFER+10(21),=C'TABLE OF CSA SUBPOOLS'
         BAL   LINK,LINE           PRINT LINE
         MVC   BUFFER+10(35),=C'SUBPOOL KEY   MIN      AVG      MAX'
         BAL   LINK,LINE           PRINT LINE
         BAL   LINK,LINE           PRINT LINE
         LA    WK2,SUBTABLE        -> SUBPOOL TABLE
         USING TABLE,WK2
         L     WK5,COUNT           NUMBER OF INTERVALS
RPTLOOP  SR    WK3,WK3
         IC    WK3,SUBID           GET SUBPOOL ID
         FILL  BUFFER+12,3,(WK3)   PRINT THE SUBPOOL ID
         IC    WK3,SUBID+1         GET USER KEY
         SRL   WK3,4               SHIFT KEY TO REMOVE ZERO
         FILL  BUFFER+18,2,(WK3)   PRINT KEY
         KFILL BUFFER+22,6,SUBMIN  PRINT SUBPOOL MINIMUM SIZE
         SR    WK3,WK3             DIVIDE TOTAL
         L     WK4,SUBTOTAL         SPACE FOUND
         DR    WK3,WK5               BY # OF INTERVALS
         SLL   WK4,10              CONVERT FROM K TO BYTES
         KFILL BUFFER+31,6,(WK4)   PRINT AVERAGE SUBPOOL SIZE
         KFILL BUFFER+40,6,SUBMAX  PRINT SUBPOOL MAXIMUM SIZE
         BAL   LINK,LINE           PRINT THE LINE
         LA    WK2,16(,WK2)        GET NEXT ENTRY
         BCT   WK1,RPTLOOP         PRINT OUT ALL SUBPOOLS
         DROP  WK2
         TITLE 'CLOSE SYSPRINT AND EXIT'
         SPACE 1
*  CLOSE SYSPRINT DATASET
         SPACE 2
SHUTDOWN CLOSE (PRINTDCB)
         SPACE 2
*  EXIT FROM THE PROGRAM
         SPACE 2
         L     R13,4(,R13)         GET LAST SAVEAREA
         LM    R14,R12,12(R13)     RESTORE REGISTERS
         SR    R15,R15             SET RETURN CODE OF ZERO
         BR    R14                 RETURN
         TITLE 'WRITE CODE AND MACROS'
         SPACE 1
*  PRINT LINE BUFFER
         SPACE 2
LINE     WRITE OUT,SF,,BUFFER,MF=E
         CHECK OUT
         MVI   BUFFER,C' '         SINGLE SPACE
         MVC   BUFFER+1(132),BUFFER CLEAR BUFFER
         BR    LINK
         SPACE 2
         WRITE OUT,SF,PRINTDCB,BUFFER,'S',MF=L
         TITLE 'REGISTER EQUATES'
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
WK1      EQU   2
WK2      EQU   3
WK3      EQU   4
WK4      EQU   5
WK5      EQU   6
WK6      EQU   7
WK7      EQU   8
WK8      EQU   9
LINK     EQU   10
A        EQU   10
B        EQU   11
C        EQU   12
D        EQU   13
E        EQU   14
F        EQU   15
         TITLE 'DATA AREAS AND CONSTANTS'
SAVEAREA DC    18F'0'
COUNT    DC    F'0'                CURRENT COUNT OF CYCLES
MAXIMUM  DC    F'120'              CYCLE LIMIT  DEFAULT(120)
ASID     DC    F'0'
WAITTIME DC    F'500'              CYCLE WAIT TIME  DEFAULT(5 SEC)
INTERVAL DC    F'5'                INTERVAL TIME IN SECONDS
NUCBOUND DC    F'0'                END OF NUCLEUS
CSASIZE  DC    F'0'                LENGTH OF CSA
CSASTART DC    F'0'                START OF CSA
LPASIZE  DC    F'0'                LENGTH OF LPA
LPASTART DC    F'0'                START OF LPA
SQASIZE  DC    F'0'                LENGTH OF SQA
SQASTART DC    F'0'                START OF SQA
REALEND  DC    F'0'                LENGTH OF REAL MEMORY
PVTSIZE  DC    F'0'                SIZE OF USER PRIVATE AREA
PVTSTART DC    F'0'                START OF USER PRIVATE AREA
VRSIZE   DC    F'0'                SIZE OF V=R AREA
VRSTART  DC    F'0'                START OF V=R AREA
SUBTABLE DC    256F'0'             -> SUBPOOL TABLE
SUBLIMIT DC    F'64'               * ROOM FOR 64 CSA SUBPOOLS *
STARTIME DC    2F'0'               STARTING TIME STAMP
STOPTIME DC    2F'0'               ENDING TIME STAMP
POOLS    DC    F'0'                NUMBER OF CSA SUBPOOLS FOUND
CSAHI    DC    F'0'                HIGHEST NUMBER OF CSA FRAMES
CSALO    DC    X'00FFFFFF'         LOWEST NUMBER OF CSA FRAMES
CSATOTAL DC    F'0'                TOTAL OF CSA FRAMES
MEG16    DC    X'00FFFFFF'         16 MEG - 1
DECIMAL  DC    D'0'                CONVERSION WORK AREA
FORMAT   DC    CL8' '              FORMATING WORK AREA
HEXTBL   DC    CL16'0123456789ABCDEF'
EDITD    DC    X'4020202020202120'
EDITK    DC    X'40402020202120D2'
EDITP    DC    X'40402021204B2020'
HEADER1  DC    C'1CSA USAGE MONITOR  START TIME = '
EDIT11   DC    X'4021204B20204B2020' HH.MM.SS
EDIT12   DC    X'40212061202020'   YY/DDD
         DC    C'  STOP TIME = '
EDIT13   DC    X'4021204B20204B2020' HH.MM.SS
EDIT14   DC    X'40212061202020'   YY/DDD
         DC    C'  # OF SAMPLES = '
HDRCOUNT DC    CL6' '
         DC    C'  INTERVAL = '
HDRTIME  DC    CL4' '
         DC    CL14' SECONDS'
BUFFER   DC    CL133' '
HEADER2A DC    CL33'                                 '
HEADER2B DC    CL33'                                 '
SID      DC    CL4'    '           SMF SYSTEM ID
PRINTDCB DCB   DSORG=PS,MACRF=W,DDNAME=SYSPRINT,DEVD=DA,RECFM=FA,      X
               BLKSIZE=133
         LTORG
         TITLE 'DSECT DEFINITIONS'
         CVT   DSECT=YES
         DCBD  DSORG=PS,DEVD=DA
         IHACDE
         IHADQE
         IHAFBQE
         IHAGDA
         IHAPQE
         IHAPVT
         IHASPQE
         SPACE 2
TABLE    DSECT
SUBTOTAL DS    F
SUBMAX   DS    F
SUBMIN   DS    F
SUBID    DS    H
PAD      DS    H
         SPACE 2
         END
