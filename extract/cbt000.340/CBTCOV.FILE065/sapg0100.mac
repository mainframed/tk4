SAPG0100 START 0
*----------------------------------------------------------------
*
*       THIS PROGRAM DOES THE EXTRACT FROM THE VSAM FILE, BY
*  USE OF THE PARM PASSED FROM THE DIALOG MANAGER ROUTINE.
*
*----------------------------------------------------------------
         DS    0H
         STM   14,12,12(13)
         BALR  3,0
         USING *,3,4
START    L     4,BASEADDR
         B     EXEC
BASEADDR DC    A(START+4096)
EXEC     ST    13,SAVE+4
         LA    13,SAVE
         REGISTR      EQATES AND USAGE
PARM     EQU   1                              PARM REGISTER
ZERO     EQU   7
TOTAL    EQU   8
ACM      EQU   9
TEST     EQU   15                             TEST REGISTER
*
*     LOAD THE PARM
*
         L     PARM,0(PARM)                   ADDRESS OF COUNT FIELD
         LH    TOTAL,0(PARM)                  CHARACTERS IN PARM
         CLR   TOTAL,ZERO                     WAS PARM SPECIFIED ???
         BE    NOPARM                         NO, TELL ME
         LA    PARM,R2(PARM)                  ADDRESS OF PARM FIELD
         AR    TOTAL,PARM                     END OF PARM LIST
         LR    ACM,PARM                       ADDRESS OF BEGINNING
         MVC   RECID,0(ACM)                   MOVE PARM TO SRCHKEY
         MVC   SRCHKEY,RECORD                 MOVE PARM TO SRCHKEY
*
*     OPEN THE FILES AND CHECK THEM
*
         OPEN  (OUTFILE,OUTPUT,REPORT,OUTPUT) OPEN OUTPUT FILE
         OPEN  BLOCK                          OPEN VSAM FILE
         LTR   TEST,TEST                      TEST OPEN
         BNZ   ERROR                          IF BAD GO TO ERROR
*
*     POSITION VSAM FILE AT CORRECT RECORD
*
LOOP     POINT RPL=POSITION                   POINT VSAM TO RECORD
         LTR   TEST,TEST                      TEST POSITION
         BNZ   ERROR                          IF BAD GO TO ERROR
*
*     RETRIVE RECORDS UNTIL RECORD KEYS DO NOT MATCH
*
LOOP1    GET   RPL=POSITION                   GET THE RECORD
         LTR   TEST,TEST                      TEST GET
         BNZ   ERROR                          IF BAD GO TO ERROR
         MVC   OUTREC,IN+27                   MOVE RECORD TO PRINT
         MVC   IDFIELD,IN                     MOVE 27 BYTES TO IDFIELD
         CLC   IDFIELD,RECID                  COMPARE CURRENT TO OLD
         BNE   CLOSER                         IF NOT GO GET OUT
         PUT   OUTFILE,OUTREC                 WRITE OUTPUT RECORD
         B     LOOP1                          GO GET ANOTHER RECORD
CLOSER   CLOSE BLOCK                          CLOSE VSAM
         LTR   TEST,TEST                      TEST CLOSE
         BNZ   ABEND                          IF BAD GO TO ERROR
         CLOSE (OUTFILE,,REPORT)              CLOSE OUTPUT FILE
         SR    TEST,TEST                      CLEAR REGISTER '15'
         IC    TEST,RETCD                     INSERT RETURN CODE
         L     R13,SAVE+4                     RESTORE AND GET OUT
         RETURN (14,12),RC=(15)
         EJECT
ABEND    ABEND 1369,DUMP                      ABEND 'U1369' W/ DUMP
ERROR    SHOWCB RPL=POSITION,AREA=FDBKAREA,LENGTH=4,FIELDS=(FDBK)
         LTR   TEST,TEST
         BNZ   ABEND                          IF NOT ZERO GO ABEND
         MVC   HEXFIELD,FDBKCODE              MOVE
         L     R4,BCON2                       NUMBER OF CHARACTERS
         LA    R5,HEXFIELD                    HEX FIELD TO BE CONV
         LA    R6,RESULT                      ANSWER IN HERE
LOOP2    MVC   BYTE1,0(R5)                    MOVE FIRST BYTE
         UNPK  CL3,PL2                        UNPACK IT
         TR    CL3,TRTAB                      TRANSLATE IT
         MVC   0(2,R6),CL3                    MOVE TO OUT AREA
         LA    R5,1(,R5)                      LOAD NEXT BYTE
         LA    R6,2(,R6)                      INCREMENT
         BCT   R4,LOOP2                       GO DO IT AGAIN (2 TIMES)
RETURN   MVC   BAD,RESULT                     MOVE RESULT TO BAD
         CLI   FDBKCODE,RNF                   COMPARE TO RNF
         BNE   OTHER                          NO GO TO OTHER
         MVC   ERRMSG,NOTFMSG                 MOVE ERROR MESSAGES
         MVI   RETCD,16                       MOVE IN RETURN CODE
         PUT   REPORT,ERRLINE                 WRITE THE LINE
         B     CLOSER                         GO CLOSE ALL OF THIS
OTHER    MVC   ERRMSG,BADFILE                 MOVE ERROR MESSAGE
         PUT   REPORT,ERRLINE                 WRITE THE LINE
         MVI   RETCD,8                        MOVE RETURN CODE
         B     CLOSER                         GO CLOSE ALL OF THIS
NOPARM   WTO   'SFI0004I -- NO PARM SPECIFIED',ROUTCDE=(2,11)
         MVI   RETCD,4                        MOVE IN RETURN CODE
         B     CLOSER                         GO CLOSE ALL OF THIS
         LTORG
REPORT   DCB   DDNAME=SYSOUT,DSORG=PS,MACRF=PM,LRECL=132
OUTFILE  DCB   DDNAME=OUTFILE,DSORG=PS,MACRF=PM,LRECL=133
BLOCK    ACB   DDNAME=FILEVSAM,AM=VSAM,MACRF=(KEY,SEQ,IN)
POSITION RPL   ACB=BLOCK,AM=VSAM,AREA=IN,AREALEN=160,ARG=SRCHKEY,      X
               OPTCD=(KEY,SEQ,SYN,KEQ,FKS)
*
BCON2    DC    F'2'
RESULT   DC    CL80' '
PL2      DS    0PL2
BYTE1    DC    XL1'00'
BYTE2    DC    XL1'0F'
CL3      DS    CL3
TRTAB    DC    XL256'00'
         ORG   TRTAB+X'F0'
         DC    CL16'0123456789ABCDEF'
         ORG   TRTAB+256
*
HEXFIELD DS    XL1
FDBKAREA DS    0F
         DS    XL1
R15CODE  DS    XL1
FTNCODE  DS    XL1
FDBKCODE DS    XL1
DUP      EQU   X'08'
RNF      EQU   X'10'
         DS    0F
RETCD    DC    X'0'
         DC    X'0'
IN       DS    CL160
IDFIELD  DS    CL18
*
SRCHKEY  DS    CL160
OUTREC   DS    CL133
SAVE     DS    18F                   SAVE AREA
*
ERRLINE  DS    0CL132
         DS    CL2
BAD      DS    CL2
         DC    CL6'  --  '
ERRMSG   DS    CL52
ERRTRANS DS    CL70
*
NOTFMSG  DC    CL52'CANT RETRIEVE RECORD DOES NOT EXIST ON MAST FILE'
BADFILE  DC    CL52'SERIOUS PROBLEM WITH MAST FILE CONTACT TECH SUPP'
*
RECORD   DS    0CL160
RECID    DS    CL24
         DS    CL3' '
RESTOF   DS    CL133
         END   SAPG0100
