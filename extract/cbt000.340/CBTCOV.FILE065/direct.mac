DIRB     TITLE 'UICC LPA PACKER - DIRECTOY BUILD'
*   THIS PROGRAM BUILDS A FILE FROM THE CONTENTS OF THE LINK PACK AREA
*   DIRECTORY.  THIS FILE IS USED BY THE PACK LIST GENERATING PROGRAM.
*
*   THE FORMAT OF THE OUTPUT FILE IS AS FOLLOWS:
*
*   RECFM=FB,LRECL=16,BLKSIZE=3120
*
*   THE RECORD CONTENTS ARE AS FOLLOWS:
*
*   RECORD 1:
*
*      **********************************************
*      * NUMBER OF * LPA LOW  * LPA HIGH * UNUSED   *
*      *  ENTIRES  * ADDRESS  * ADDRESS  *          *
*      **********************************************
*
*   ALL SUBSEQUENT RECORDS (=NUMBER OF ENTRIES)
*
*      **********************************************
*      *  MODULE NAME         * STARTING * MODULE   *
*      *                      * ADDRESS  * LENGTH   *
*      **********************************************
*
*   THIS PROGRAM REQUIRES SYS1.AMODGEN TO ASSEMBLE CORRECTLY.
*
*   THIS PROGRAM WAS WRITTEN BY:
*
*                 BARRY SCHRAGER
*                 COMPUTER CENTER
*                 UNIVERSITY OF ILLINOIS AT CHICAGO CIRCLE
*                 BOX 4348
*                 CHICAGO, ILLINOIS 60680
*
*                 (312) 996-2478
*
*                 VERSION 1 DATED 7/21/76
*
DIRBUILD CSECT
         CVT   DSECT=YES
         IHALPDE
LPDESIZE EQU   *-LPDE  SIZE OF LPDE ENTRY
DIRENT   DSECT   DIRECTORY ENTRY
DIRNAME  DS    CL8  MODULE NAME
DIRSTART DS    A   STARTING ADDRESS
DIRLNGTH DS    A   MODULE LENGTH
DIRSIZE  EQU   *-DIRENT   LENGTH OF DIRECTORY ENTRY
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         EJECT
DIRBUILD CSECT
         SAVE  (14,12),,*  ENTER
         LR    R12,R15  SET UP ADDRESSING
         USING DIRBUILD,R12
         LA    R2,SAVEAREA   CHAIN SAVE AREAS
         ST    R2,8(,R13)
         ST    R13,4(,R2)
         LR    R13,R2
         L     R2,CVTPTR  GET THE CVT ADDRESS
         L     R2,CVTLPDIA-CVT(R2)  GET LPA DIRECTORY ADDR
         USING LPDE,R2   ADDRESS FIRST ENTRY
         GETMAIN VU,LA=GMAINR,A=STORAGE,BNDRY=PAGE
         L     R3,STORAGE  POINT TO TABLE START
         LR    R15,R3  CALCULATE END OF TABLE
         A     R15,STORSIZE
         ST    R15,STOREND  AND SAVE FOR LATER
         USING DIRENT,R3  ADDRESS IT
         SR    R15,R15  CLEAR R15 FOR USE DURING TABLE BUILD
*
*  FILL THE DIRECTORY TABLE FROM THE LINK PACK AREA DIRECTORY
*
FLOOP    CLC   LPDENAME,=XL8'FFFFFFFFFFFFFFFF'  END OF LPA?
         BE    EFLOOP  YES, EXIT THIS LOOP
         TM    LPDEATTR,LPDEMIN  MINOR ENTRY?
         BO    IFLOOP  YES, SKIP IT
         MVC   DIRNAME,LPDENAME   MOVE MODULE NAME TO TABLE
         ICM   R15,7,LPDEXTAD+1   GET MODULE START
         ST    R15,DIRSTART  AND PUT ADDR IN TABLE
         ICM   R15,7,LPDEXTLN+1    GET MODULE LENGTH
         ST    R15,DIRLNGTH  AND PUT INTO TABLE
         LA    R3,DIRSIZE(,R3)  INC TO NEXT TABLE ENTRY
         C     R3,STOREND   CHECK AGAINST END
         BNL   ERRSIZE  SIGNAL REGION TOO SMALL
IFLOOP   LA    R2,LPDESIZE(,R2)  GO TO NEXT LPDE
         B     FLOOP   AND LOOP
         SPACE 2
EFLOOP   L     R4,STOREND   GET THE END OF THE STORAGE
         SR    R4,R3  CALCULATE UNUSED SPACE
         FREEMAIN RU,LV=(R4),A=(R3)  FREE IT
         ST    R3,STOREND  RESET END OF STORAGE
         S     R3,STORAGE  CALCULATE TABLE LENGTH
         ST    R3,STORSIZE  AND SAVE STORAGE SIZE
         DROP  R2,R3   DROP REGISTERS FROM FIRST LOOP
*
*  SORT THE DIRECTORY BY MODULE START
*
         LA    R0,DIRSIZE   SET UP OUTER LOOP
         SLA   R0,1  MULTIPLY ENTRY SIZE BY 2
         L     R1,STOREND  GET N+1ST ENTRY ADDR
         SR    R1,R0  WANT N-1ST ENTRY ADDR
         SRA   R0,1  GET ENTRY SIZE BACK
         LNR   R2,R0  GET NEG ENTRY SIZE IN R2
         L     R3,STORAGE  GET DIRECTORY STARTG
         SR    R3,R0  GET -1ST ENTRY
OLOOP    L     R5,STORAGE   SET UP INNER LOOP
         LA    R6,DIRSIZE   GET ENTRY SIZE
         LR    R7,R1  SET UP INNER LOOP LIMIT
ILOOP    LA    R8,DIRSIZE(,R5)  GET N+1ST ELEMENT
         L     R0,DIRSTART-DIRENT(R5)  GET NTH ENTRY PT
         C     R0,DIRSTART-DIRENT(R8)  COMPARE TO N+1ST ENTRY PT
         BL    EILOOP  IF LOW, CONTINUE
         MVC   WORK,0(R5)  SWAP THE ENTRIES
         MVC   0(L'WORK,R5),0(R8)
         MVC   0(L'WORK,R8),WORK
EILOOP   BXLE  R5,R6,ILOOP   END INNER LOOP
         BXH   R1,R2,OLOOP  END OUTER LOOP
*
* CALCULATE NUMBER OF ENTRIES, START AND END OF LPA
*
         XC    WORK,WORK  USE THE WORK AREA FOR STORAGE
         L     R1,STORSIZE  GET THE TABLE LENGTH
         SR    R0,R0  CLEAR R0 FOR DIVIDE
         LA    R15,DIRSIZE  GET THE ENTRY SIZE
         DR    R0,R15   GET THE NUMBER OF ENTRIES
         ST    R1,WORK  PUT INTO WORK STRING
         L     R1,STORAGE  GET THE FIRST ENTRY ADDRESS
         L     R0,DIRSTART-DIRENT(R1)  GET THE FIRST MODULE START
         ST    R0,WORK+4   PUT INTO WORK AREA
         L     R1,STOREND  GET THE ADDR OF THE N+1 ST ENTRY
         SR    R1,R15   GET THE NTH ENTRY ADDR
         L     R0,DIRSTART-DIRENT(R1)  GET THE MODULE START
         A     R0,DIRLNGTH-DIRENT(R1)  ADD IN THE MODULE LENGTH
         ST    R0,WORK+8  AND PUT INTO WORK AREA
*
*  OPEN UP THE OUTPUT FILE AND WRITE OUT THE DIRECTORY
*  THE FIRST RECORD IS THE NUMBER OF ENTRIES, THE
*  LPA START AND END.  THE REST ARE THE DIRECTORY
*  ENTRIES SORTED BY MODULE START.
*
         OPEN  (DIRECT,(OUTPUT))
         LTR   R15,R15  TEST FOR GOOD OPEN
         BZ    *+6  OK, CONTINUE
         DC    H'0'  ABEND OF NON-ZERO
         PUT   DIRECT,WORK  WRITE OUT STATS
         L     R3,STORAGE  SET UP FOR LOOP TO WRITE DIRECTORY
         LA    R4,DIRSIZE  ENTRY SIZE
         L     R5,STOREND
         SR    R5,R4  LAST ENTRY ADDRESS
WLOOP    PUT   DIRECT,(R3)  WRITE OUT DIRECTORY ENTRY
         BXLE  R3,R4,WLOOP   LOOP
         CLOSE (DIRECT)
         L     R3,STORSIZE  GET STORAGE SIZE
         FREEMAIN RU,LV=(R3),A=STORAGE
         L     R13,4(,R13)  GET OLD SAVE AREA
         RETURN (14,12),RC=0
ERRSIZE  WTO   'REGION TOO SMALL - DIRECTORY BUILD FAILURE',ROUTCDE=11
         L     R13,4(,R13)  GET OLD SAVE AREA
         RETURN (14,12),RC=12  RETURN
         SPACE 10
SAVEAREA DS    9D
WORK     DS    CL(DIRSIZE)  WORK AREA
GMAINR   DC    A(4096,409600)  STORAGE GETMAIN RANGE
STORAGE  DC    A(0)  STORAGE AREA START
STORSIZE DC    A(0)  SIZE OF STORAGE AREA
STOREND  DC    A(0)  FIRST BYTE NOT IN STORAGE AREA
DIRECT   DCB   DDNAME=DIRECT,BLKSIZE=3120,LRECL=DIRSIZE,DEVD=DA,       X
               DSORG=PS,MACRF=PM,RECFM=FB
         END DIRBUILD
