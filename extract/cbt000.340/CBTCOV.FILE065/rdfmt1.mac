*          DATA SET DMODRDF    AT LEVEL 001 AS OF 04/22/76
*          DATA SET LBDMODRDF  AT LEVEL 001 AS OF 08/08/73
         MACRO
         EQUATE
** GENERAL PURPOSE REGISTERS
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
** FLOATING POINT REGISTERS
FR0      EQU   0
FR2      EQU   2
FR4      EQU   4
FR6      EQU   6
         MEND
RDFMT1   CSECT
         ENTRY WRTFMT1
         USING RDFMT1,R15
         SAVE  (14,12),,RDFMT1
         MVI   24(R13),X'00'   INDICATE READ FUNCTION
         B     START
         DROP  R15
WRTFMT1  SAVE  (14,12),,WRTFMT1
         MVI   24(R13),X'FF'   INDICATE WRITE FUNCTION
START    LR    R2,R13   SAVE REGISTER 13
         BALR  R12,0   ESTABLISH A BASE
         USING *,R12
         GETMAIN R,LV=LDSECT   GET WORK AREA
         ST    R13,4(R1)   LINK SAVE AREAS
         ST    R1,8(R13)
         LR    R13,R1   A(DSECT)
         USING DSECT,R13
         L     R1,24(R2)   RESTORE REGISTER 1
         LM    R10,R11,0(R1)   LOAD PARAMETER ADDRESSES
*
*  R10 - A(VOLID)
*  R11 - A(148 BYTE AREA - 1ST 44 BYTES CONTAIN THE DSNAME)
*
         OC    0(148,R11),0(R11)   VERIFY ADDR BEFORE ENTERING KEY 0
*
*  MOVE PARTIALLY FILLED CONTROL BLOCKS TO DSECT
*
         MVC   IOB(LPATTERN),PATTERN
*
*  FINISH FILLING THEM IN
*
         LTR   R1,R1   TEST FOR READ OR WRITE FUNCTION
         BNM   AECB   IT IS THE READ FUNCTION
         OI    FLAGS,X'40'   INDICATE WRITE
AECB     LA    R1,ECB
         ST    R1,IOB+4
         LA    R1,CHANPROG
         ST    R1,IOB+16
         ST    R1,CHANPROG+8
         MVI   CHANPROG+8,TIC
         LA    R1,DCB
         ST    R1,IOB+20
         ST    R1,DEB+24
         MVI   DEB+24,X'0F'
         LA    R1,IOBSEEK+3
         ST    R1,CHANPROG
         MVI   CHANPROG,IDEQ
         LA    R1,DSCB
         ST    R1,CCW3
         MVI   CCW3,READ
         LA    R1,CCHHR
         ST    R1,CHANPROG+24
         MVI   CHANPROG+24,COUNT
         LA    R1,DEB
         ST    R1,DCBDEBAD   STORE A(DEB)
         MVI   DEB+28,X'04'   INDICATE DASD
*
*  FIND THE UCB
*
FDUCB    L     R1,16   A(CVT)
         L     R1,40(R1)   A(UCB LOOKUP TABLE)
LOOP1    LH    R15,0(R1)   GET A UCB ADDR
         LTR   R15,R15   TEST
         BM    NOTFOUND   VOLUME DOES NOT EXIST OR IS NOT MOUNTED
         BZ    CONT   THIS IS A UCB 'HOLE'
         TM    18(R15),X'20'   CHECK FOR DASD
         BZ    CONT   NOT DASD
         CLI   19(R15),X'05'   CHECK FOR DATA CELL
         BE    DATACELL
         CLC   0(6,R10),28(R15)   CHECK FOR REQUESTED VOLUME
         BNE   CONT   TRY NEXT UCB
         STH   R15,DEB+34   STORE A(UCB)
         MVC   TTR(3),24(R15)   MOVE RELATIVE VTOC ADDR          P.H.H.
         B     CONVERT
CONT     LA    R1,2(R1)   INCREMENT TO NEXT UCB
         B     LOOP1
NOTFOUND MVI   RC,4   SET RETURN CODE
         B     RETURN
DATACELL STH   R15,DEB+34   STORE A(UCB)
         LA    R15,56(R15)  A(SUB UCB'S)
         LA    R14,10   LOAD NUMBER OF SUB UCB'S
LOOP2    CLC   0(6,R10),4(R15)   CHECK FOR REQUESTED VOLUME
         BE    FNDATCEL   THIS BIN OF THIS DATA CELL IS IT
         LA    R15,16(R15)   NEXT SUB UCB
         BCT   R14,LOOP2
         B     CONT   NOT IN THIS DATA CELL. CHECK NEXT UCB.
FNDATCEL MVC   DEB+36(2),0(R15)   MOVE BIN NUMBER TO DEB
         MVC   IOBSEEK+1(2),0(R15)   MOVE BIN NUMBER TO IOB
         MVC   TTR(3),12(R15)   MOVE RELATIVE VTOC ADDR
*
*  CONVERT TTR FOUND IN UCB TO CCHHR - A(VTOC)
*
CONVERT  L     R1,16   LOAD A(CVT)
         L     R15,28(R1)   A(CONVERT ROUTINE)
         LA    R2,MBBCCHHR   LOAD AREA FOR VTOC ADDRESS
         LA    R1,DEB
         L     R0,TTR      CURRENT A(VTOC)
         STM   R14,R12,12(R13)   CONVERT ROUTINE SCREWS UP SOME REG.
         LR    R3,R13   INCLUDING R13
         BALR  R14,R15   BRANCH TO CONVERT ROUTINE
         LR    R13,R3   RESTORE R13
         LM    R14,R12,12(R13)   RESTORE REST OF THE REGISTERS
*
*  ENTER KEY ZERO
*
         L     R3,16   A(CVT)
         L     R1,0(R3)   A(TCB DOUBLEWORD)
         L     R1,4(R1)   A(TCB)
         OC    DEB+24(1),28(R1)    MOVE TCB KEY
         MVC   DEB+29(3),21(R3)   A(SYSTEM'S AVT)
         SPACE
         MODESET KEY=ZERO
DMODSVC1 EQU   *                 NO LONGER USED (C.M.G)
         SPACE
*
*  SEARCH FOR CORRECT DSCB
*
LOOP3    MVC   IOBSEEK(8),MBBCCHHR   POINT TO NEXT DSCB
         EXCP  IOB   GET IT
         WAIT  ECB=ECB
         CLI   ECB,X'7F'   CHECK FOR NORMAL COMPLETION
         BE    CHKFMT4
         MVI   RC,12   ERROR IN READING VTOC
         B     RETURN
CHKFMT4  TM    FLAGS,X'80'   CHECK FOR 1ST DSCB
         BO    CHKDSN
         CLI   DSCB+44,X'F4'   VERIFY THIS IS A FMT 4 DSCB
         BNE   RC8
         OI    FLAGS,X'80'   SET FLAG
         MVC   ENDVTOC+3(5),DSCB+45   SAVE A(LAST FMT 1 DSCB)
         B     LOOP3
CHKDSN   CLC   DSCB(44),0(R11)   CHECK DSNAME
         BE    FNDSN   FOUND IT
         CLC   IOBSEEK+3(5),ENDVTOC+3   CHECK FOR LAST FMT 1 DSCB
         BL    LOOP3
RC8      MVI   RC,8
         B     RETURN
*
*  THE DATA SET CONTROL BLOCK HAS BEEN FOUND
*
FNDSN    TM    FLAGS,X'40'   TEST FOR READ OR WRITE
         BO    WRTDSCB
*
*  RETURN THE DSCB AND THE SEEK ADDRESS
*
         MVC   44(96,R11),DSCB+44   MOVE DATA AREA
         MVC   140(8,R11),IOBSEEK   MOVE A(DSCB)
         MVI   RC,0
         B     RETURN
*
*  WRITE MODIFIED FORMAT 1 DSCB
*
WRTDSCB  MVI   RC,16
         CLC   IOBSEEK(8),140(R11)
         BNE   RETURN
*
*  CHANGE CHANNEL PROGRAM TO WRITE FROM A(R11)
*
         ST    R11,CCW3
         MVI   CCW3,WRITE   ADD WRITE COMMAND CODE
         MVI   CCW3+4,X'00'   TURN OFF CHAINING
         OI    DEB+32,X'80'   PERMIT ALL WRITE COMMANDS
*
*  WRITE MODIFIED DSCB
*
         EXCP  IOB
         MVI   RC,0
         WAIT  ECB=ECB
         CLI   ECB,X'7F'   CHECK COMPLETION CODE
         BE    RETURN
         MVI   RC,20   A MAJOR DISASTER HAS OCCURED
*
*  RETURN
*
RETURN   MODESET KEY=NZERO
DMODSVC2 EQU   *                NO LONGER USED(C.M.G)
         SPACE
         XR    R15,R15
         IC    R15,RC
         LR    R2,R13   SAVE DSECT ADDRESS
         L     R13,4(R13)   LOAD A(HIGHER SAVE AREA)
         ST    R15,16(R13)   STORE REGISTER 15
         FREEMAIN R,LV=LDSECT,A=(R2)
         RETURN (14,12),T
         EQUATE
IDEQ     EQU   X'31'   SEARCH ID EQUAL
TIC      EQU   X'08'   TRANSFER IN CHANNEL
READ     EQU   X'0E'   READ KEY AND DATA
WRITE    EQU   X'0D'   WRITE KEY AND DATA
COUNT    EQU   X'92'   READ COUNT (MULTI-TRK)
*
*  THE FOLLOWING IS THE PATTERN FOR THE IOB, CCW'S, DEB, DCB, ETC.
*
         DS    0D
PATTERN  EQU   *
*  IOB
         DC    X'42000000'
         DC    9F'0'
         CCW   0,0,X'40',5
         CCW   0,0,X'40',1
         CCW   0,0,X'40',140
         CCW   0,0,X'20',5
         DC    4F'0'
         DC    X'01',AL3(0)
         DC    2F'0'
         DC    X'04',AL3(0)
         DC    X'40',AL3(0)
         DC    F'0'
         DC    H'0',H'-1'
         DC    H'-1',X'7FFF'
         DC    6F'0'
         DC    X'00050000'
*   DCB
         DC    6F'0'
         DC    X'0000'
         DC    X'2000'
         DC    6F'0'
LPATTERN EQU   *-PATTERN
         EJECT
DSECT    DSECT
SAVEAREA DS    18F                                               P.H.H.
DSCB     DS    35F
         DS    0D
*
IOB      DC    X'42000000'
         DC    A(ECB)
CSW      DC    2F'0'
         DC    A(CHANPROG)
         DC    A(DCB)
         DC    2F'0'
IOBSEEK  DC    2F'0'
*
CHANPROG CCW   IDEQ,IOBSEEK+3,X'40',5   SEARCH ID =
         CCW   TIC,*-8,X'40',1   TRY AGAIN IF NOT =
CCW3     CCW   READ,DSCB,X'40',140   READ KEY AND DATA
         CCW   COUNT,CCHHR,X'20',5   READ CCHHR FOR NEXT RECORD
*
DEB      DC    4F'0'
         DC    X'01',AL3(0)   INDICATE 1 EXTENT
         DC    F'0'
         DC    X'0F',AL3(DCB)   INSERT PROTECT KEY LATER
         DC    X'04',AL3(0)   DASD / A(I/O APPENDAGE TABLE)
         DC    X'40',AL3(0)   A(UCB)
         DC    F'0'   BIN NO. / CYL START ADDR
         DC    H'0',H'-1'   TRK START ADDR / CYL END ADDR
         DC    H'-1',X'7FFF'   TRK END ADDR / TRKS IN THIS EXTENT
*
*
ECB      DC    F'0'
*
MBBCCHHR DC    XL3'00'   MBB
CCHHR    DC    XL4'00'   CCHH
R        DC    XL1'00'   R
ENDVTOC  DC    XL8'00'   A(LAST FMT 1)
TTR      DC    F'0'
OLDKEY   DC    X'00'
NEWKEY   DC    X'05'
RC       DC    X'00'   RETURN CODE
*                    0  - COMPLETED TASK OK
*                    4  - VOLUME DOES NOT EXIST OR IS NOT MOUNTED
*                    8  - DATA SET NOT FOUND
*                    12 - ERROR ENCOUNTERED WHILE READING VTOC
*                    16 - INCORRECT SEEK ADDRESS
*                    20 - ERROR ENCOUNTERED WHILE WRITTING NEW DSCB
FLAGS    DC    X'00'
*                    X'80' = 1ST DSCB (FMT 4) READ
*                    X'40' = WRTFMT1
DCB      DC    6F'0'
         DC    X'0000'
DCBDSORG DC    X'2000'
         DC    4F'0'
DCBDEBAD DC    A(DEB)
         DC    F'0'
LDSECT   EQU   *-DSECT
         EJECT                                                   P.H.H.
DMODSVC  CSECT   NO LONGER USED         (C.M.G)                  P.H.H.
         USING *,R6                                              P.H.H.
         L     R5,28(R5)                PREVIOUS RB ADDR.        P.H.H.
         CLC   =A(DMODSVC1),20(R5)      Q/SVC ISSUED AT LABEL    P.H.H.
         BE    SVC1                     YES                      P.H.H.
         CLC   =A(DMODSVC2),20(R5)      Q/SVC ISSUED AT LABEL    P.H.H.
         BE    SVC2                     YES                      P.H.H.
         LA    R1,X'FEF'                LOAD ABEND CODE          P.H.H.
         SLL   R1,12                    POSITION SYSTEM CODE     P.H.H.
         ABEND (1)                      ABEND CALLER             P.H.H.
SVC1     EQU   *                                                 P.H.H.
         NI    17(R5),X'0F'             GIVE CALLER ZERO KEY     P.H.H.
         SVC   3                        RETURN                   P.H.H.
SVC2     EQU   *                                                 P.H.H.
         MVZ   17(1,R5),28(R4)          GIVE CALLER PROBLEM KEY  P.H.H.
         SVC   3                        RETURN                   P.H.H.
         LTORG                                                   P.H.H.
         ENTRY IGC0025E                                          P.H.H.
IGC0025E EQU   DMODSVC                                           P.H.H.
         DROP  R6                                                P.H.H.
         EJECT                                                   P.H.H.
         END
