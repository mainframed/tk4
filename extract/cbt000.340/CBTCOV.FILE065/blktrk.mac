BLKTRK   TITLE 'CALCULATE BLOCKS PER TRACK'
***********************************************************************
*                                                                     *
*        CALCULATE BLOCKS PER TRACK FROM BLKSIZE & DEVTYPE            *
*        OR CALCULATE MAX BLKSIZE FROM BLOCKS PER TRACK & DEVTYPE     *
*                                                                     *
*        WRITTEN BY DOUG MERCER, 4-11-78                              *
*           FOR THE LOCKHEED-CALIFORNIA COMPANY                       *
*                                                                     *
*        MODIFIED BY DOUG MERCER, 12-8-80                             *
*           FOR 3380 DEVICES.                                         *
*                                                                     *
*        CALLING PARAMETERS:                                          *
*                                                                     *
*        PARM1 - 5 HALFWORDS OF DATA                                  *
*              HALFWORD1 - BLKSIZE TO BE USED                         *
*              HALFWORD2 - KEY LENGTH TO BE USED (0 IF UNKEYED)       *
*              HALFWORD3 - BLOCKS PER TRACK TO BE USED OR 0           *
*              HALFWORD4 - RETURN AREA FOR UNUSED BYTES               *
*              HALFWORD5 - A POSITIVE NUMBER WILL BE THE FORTRAN      *
*                          UNIT NUMBER, ZERO WILL SAY PARM2           *
*                          IS A DDNAME (8 BYTES), -1 WILL SAY         *
*                          PARM2 IS 5 WORDS OF DEVTYPE DATA.          *
*                                                                     *
*        PARM2 - DDNAME, DEVTYPE DATA OR OMITTED AS REQUIRED          *
*                BY PARM1.                                            *
*                                                                     *
*        RETURN CODES:                                                *
*              0 - HALFWORD3 IN PARM1 HAS BLOCKS PER TRACK            *
*              4 - DDNAME NOT FOUND                                   *
*              8 - DDNAME OR DEVTYPE IS NOT DASD                      *
*              12 - HALFWORD5 IS INVALID                              *
*                                                                     *
*        CONTROL:                                                     *
*        IF HALFWORD3 IS 0, THEN KEYLEN, BLKSIZE, AND                 *
*        DEVTYPE ARE USED TO CALCULATE BLOCKS PER TRACK.              *
*        IF HALFWORD3 IS NOT 0 THEN KEYLEN, DEVTYPE, AND              *
*        HALFWORD3 ARE USED TO CALCULATE THE MAXIMUM                  *
*        BLKSIZE WHICH WILL GIVE THAT MANY BLOCKS PER TRACK.          *
*                                                                     *
*        ALGORITHM:                                                   *
*        THE TRACK LENGTH IS EXTENDED BY DEVICE TOLERANCE AND         *
*        DIFFERENCE IN BLOCK/LAST BLOCK OVERHEAD AS APPLICABLE.       *
*        THE BLKSIZE, KEYLEN, DEVICE TOLERANCE AND OVERHEAD           *
*        FACTORS (O/T LAST BLOCK) ARE USED TO CALCULATE               *
*        EFFECTIVE BLOCK LENGTH WHICH IS THEN DIVIDED INTO            *
*        THE EXTENDED TRACK LENGTH. THE QUOTIENT IS BLOCKS PER        *
*        TRACK AND THE REMAINDER IS UNUSED BYTES ON THE TRACK.        *
*                                                                     *
*        ATTRIBUTES - REENTRANT                                       *
*        TAB SETTINGS - 10 16 30 35 40 72                             *
*                                                                     *
***********************************************************************
         EJECT
BLKTRK   START ,
         SPACE 2
R0       EQU   0             WORK                              DM APR82
R1       EQU   1             WORK                              DM APR82
R2       EQU   2             PARM1 POINTER                     DM APR82
R3       EQU   3             PARM2 POINTER                     DM APR82
R4       EQU   4             BLKSIZE ESTIMATE                  DM APR82
R5       EQU   5             WORK                              DM APR82
R6       EQU   6             TRACK CAPACITY (ADJUSTED)         DM APR82
R7       EQU   7             WORK                              DM APR82
R8       EQU   8                                               DM APR82
R9       EQU   9                                               DM APR82
R10      EQU   10                                              DM APR82
R11      EQU   11                                              DM APR82
R12      EQU   12            PROGRAM BASE                      DM APR82
R13      EQU   13            WORK AREA BASE                    DM APR82
R14      EQU   14            WORK                              DM APR82
R15      EQU   15            WORK                              DM APR82
         SPACE 3
BR       EQU   R12
CCR      EQU   R13
LR       EQU   R14
EPR      EQU   R15
         EJECT                                                 DM APR82
         USING WRKAREA,CCR                                     DM APR82
         USING BLKTRK,BR                                       DM APR82
         SAVE  (14,12),,BLKTRK_&SYSDATE                        DM APR82
         LR    BR,EPR        SET LOCAL BASE                    DM APR82
         LR    R2,R1         SAVE PARM REG                     DM APR82
         LH    R0,=Y(WRKLNG) SIZE OF WORK AREA                 DM APR82
         GETMAIN R,LV=(0)                                      DM APR82
         ST    R1,8(,CCR)    LINK SAVE AREAS                   DM APR82
         ST    CCR,4(,R1)                                      DM APR82
         LR    CCR,R1                                          DM APR82
         MVC   2(2,CCR),=Y(WRKLNG)     SAVE GETMAIN SIZE       DM APR82
         LR    R1,R2         RESTORE PARM REGISTER             DM APR82
         EJECT ,                                               DM APR82
         LM    R2,R3,0(R1)        PICK UP PARMS
         USING PARM1,R2
         LH    R0,INDCATOR
         LTR   R0,R0
         BZ    DDNREQ             PARM2 IS DDNAME
         BP    FORTUNIT           INDICATOR IS FORTRAN UNIT
         CH    R0,=H'-1'
         BNE   RC12               ERROR - BAD INDICATOR
         MVC   DEVTYPE(20),0(R3)       DEVTYPE DATA ALREADY GIVEN
         B     CKTYPE
         SPACE
DDNREQ   MVC   DBLWRD,0(R3)       DDNAME GIVEN - SET UP FOR DEVTYPE
         B     GETDEV
         SPACE
FORTUNIT CH    R0,=H'99'
         BH    RC12               ERROR - BAD INDICATOR
         CVD   R0,DBLWRD          BUILD DDNAME FROM FORTRAN UNIT
         OI    DBLWRD+7,15
         UNPK  DBLWRD(2),DBLWRD
         LH    R0,DBLWRD
         MVC   DBLWRD,=C'FTXXF001'     BASIC DDNAME
         STH   R0,DBLWRD+2             UNIT INTO DDNAME
         SPACE 2
GETDEV   DEVTYPE DBLWRD,DEVTYPE,DEVTAB
         LTR   R15,R15
         BNZ   RC4                ERROR - NO DDNAME
         EJECT ,                                               DM APR82
CKTYPE   CLI   DEVTYPE+2,X'20'    SEE IF DASD
         BNE   RC8                ERROR - NOT DASD
         LH    R0,KEYLEN          KEY LENGTH
         LH    R1,BLKSIZE         BLOCK SIZE
         LH    R15,BLOCKS         BLOCKS PER TRACK
         LTR   R15,R15
         BZ    WANTBLKS           REQUEST IS FOR BLOCKS PER TRACK
         SR    R14,R14
         ST    R14,LOW            INITIALIZE LOW GUESS (MUST BE LOW)
         LH    R14,TRKLNG
         N     R14,=XL4'FFFF'     MAY HAVE BIT 0 ON            DM DEC80
         LA    R14,1(,R14)        INITIALIZE HIGH GUESS (MUST BE HIGH)
         ST    R14,HIGH
         SPACE
BLKLOOP  L     R4,HIGH            MAKE NEW GUESS
         S     R4,LOW
         CH    R4,=H'1'           SEE IF CONVERGED
         BNH   ENDBLOCK           YES
         SRA   R4,1
         A     R4,LOW             AVERAGE PRIOR LIMITS
         LR    R1,R4              SET PARAMETER FOR SUBROUTINE
         LH    R0,KEYLEN          GET KEY LENGTH
         BAL   R14,CALCBLK        CALCULATE BLOCKS PER TRACK
         CH    R1,BLOCKS
         BL    SETHIGH            TOO FEW BLOCKS - ESTIMATED           *
                                  BLKSIZE MUST BE TOO HIGH
         ST    R4,LOW             SET NEW LOW (GREATER THAN PREVIOUS)
         B     BLKLOOP            TRY AGAIN
         SPACE
SETHIGH  ST    R4,HIGH            SET NEW HIGH (LESS THAN PREVIOUS)
         B     BLKLOOP
         SPACE 2
ENDBLOCK L     R1,LOW             RECALCULATE TO GET BLOCKS/TRACK      *
                                  BASED ON LOW LIMIT
         LH    R0,KEYLEN          GET KEY LENGTH
         LR    R15,R0             CALCULATE KL+DL              DM DEC80
         AR    R15,R1                                          DM DEC80
         C     R15,MAXBLK         MAKE SURE NOT OVER MAX BLKSZ DM DEC80
         BNH   ENDBLK1            OK                           DM DEC80
         L     R1,MAXBLK          LIMIT TO DEVTYPE MAXIMUM     DM DEC80
         SR    R1,R0              LESS KEYLEN (IF ANY)         DM DEC80
ENDBLK1  STH   R1,BLKSIZE         AT CONVERGENCE - LOW LIMIT           *
                                  IS MAX BLKSIZE FOR                   *
                                  NUMBER OF BLOCKS PER TRACK
         BAL   R14,CALCBLK        RECALCULATE BLOCKS PER TRACK
         STH   R1,BLOCKS          SET ACTUAL BLOCKS MAX (MAY           *
                                  BE GREATER THAN REQUESTED)
         STH   R0,UNUSED          UNUSED BYTES ON TRACK
         SR    R15,R15            SET RETURN CODE
         B     RETURN
         EJECT ,                                               DM APR82
* CALCULATE BLOCKS PER TRACK
WANTBLKS BAL   R14,CALCBLK
         STH   R0,UNUSED          UNUSED BYTES
         STH   R1,BLOCKS          BLOCKS PER TRACK
         SR    R15,R15            SET RETURN CODE
         SPACE
RETURN   LR    BR,R15        SAVE RETURN CODE                  DM APR82
         LR    R1,CCR        SAVE AREA & DSECT                 DM APR82
         LH    R0,2(,CCR)    LENGTH OF AREA                    DM APR82
         L     CCR,4(,CCR)   HIGHER SAVE AREA                  DM APR82
         FREEMAIN R,LV=(0),A=(1)                               DM APR82
         LR    EPR,BR        RETURN CODE                       DM APR82
         RETURN (14,12),RC=(15)                                DM APR82
         SPACE 3
RC4      LA    R15,4              SET RETURN CODE
         B     RETURN
         SPACE
RC8      LA    R15,8              SET RETURN CODE
         B     RETURN
         SPACE
RC12     LA    R15,12             SET RETURN CODE
         B     RETURN
         EJECT ,                                               DM APR82
* CALCULATE BLOCKS PER TRACK
* R0 HAS KEYLEN, R1 HAS BLKSIZE, R14 IS RETURN
* ON RETURN R0 HAS REMAINING BYTES, R1 HAS BLOCKS PER TRACK
         SPACE
CALCBLK  STM   R14,R7,12(R13)
         SR    R5,R5
         LH    R6,TRKLNG          TRACK LENGTH
         N     R6,=XL4'FFFF'      MAY HAVE BIT 0 ON            DM DEC80
         TM    DEVIND,MODULO      CHECK FOR MODULO DEVICE      DM DEC80
         BO    CALCBLK5           YES - SEPARATE CALCULATION   DM DEC80
         TM    DEVIND,HWOVHD
         BO    CALCBLK1           HALFWORD BLOCK OVHD (ALL BLOCKS SAME)
         IC    R5,BLKOVHDC        LAST BLOCK OVERHEAD
         SR    R6,R5              FROM TRACK LENGTH
         IC    R5,BLKOVHDB        O/T LAST BLOCK OVERHEAD
         AR    R6,R5              TO TRACK LENGTH - RESULT IS TRACK    *
                                  LENGTH AS IF ALL BLOCKS HAD THE      *
                                  SAME OVERHEAD
         SPACE
CALCBLK1 AR    R1,R0              CALCULATE KEY LENGTH + DATA LENGTH
         TM    DEVIND,APPLYTOL    SEE IF DEVICE HAS TOLERANCE FACTOR
         BZ    CALCBLK2           NO
         SR    R6,R1              ADJUST TRACK LENGTH SO THAT ALL      *
                                  BLOCKS USE TOLERANCE FACTOR
         LR    R7,R1              IN CASE 2314
         MH    R1,DEVTOL          APPLY TOLERANCE FACTOR
         SLL   R1,2               * 4
         CLI   DEVTYPE+3,X'08'    SEE IF 2314
         BNE   *+6                NO
         AR    R1,R7              2314 - DEVICE TOLERANCE IS           *
                                  2137/2048 RATHER THAN 534/512
         SRA   R1,11              DIVIDE BY 2048 (512 * 4)
         AR    R6,R1              COMPLETE ADJUSTMENT OF TRACK LENGTH
         SPACE
CALCBLK2 TM    DEVIND,HWOVHD
         BO    CALCBLK3           HALFWORD BLOCK OVERHEAD
         IC    R5,BLKOVHDB        O/T LAST BLOCK OVERHEAD
         AR    R1,R5                   ADDED TO KL+DL
         B     CALCBLK4
CALCBLK3 AH    R1,BLKOVHDA        HALFWORD BLOCK OVERHEAD
         SPACE
CALCBLK4 LTR   R0,R0              SEE IF KEYED
         BNZ   CALCBLK9           YES                          DM DEC80
         IC    R5,BLKOVHDD        NOT KEYED - CONSTANT FOR SUBTRACT
         SR    R1,R5
         B     CALCBLK9                                        DM DEC80
         EJECT ,                                               DM APR82
* MODULO DEVICE (3375 & 3380) CALCULATION                      DM DEC80
CALCBLK5 LTR   R0,R0              KEYLEN                       DM DEC80
         BZ    CALCBLK6           UNKEYED BLOCK                DM DEC80
         AH    R0,DEVTOL          KEY OVERHEAD                 DM DEC80
         LR    R14,R0        TRUNCATE                          DM MAR82
         SR    R0,R0              BY MODULO                    DM MAR82
         IC    R0,BLKOVHDD             FACTOR                  DM MAR82
         SRDA  R14,32                                          DM MAR82
         DR    R14,R0                                          DM MAR82
         MR    R14,R0                                          DM MAR82
         LR    R0,R15                                          DM MAR82
CALCBLK6 AH    R1,DEVTOL          DATA OVERHEAD                DM DEC80
         LR    R14,R1        TRUNCATE                          DM MAR82
         SR    R1,R1              BY MODULO                    DM MAR82
         IC    R1,BLKOVHDD             FACTOR                  DM MAR82
         SRDA  R14,32                                          DM MAR82
         DR    R14,R1                                          DM MAR82
         MR    R14,R1                                          DM MAR82
         LR    R1,R15                                          DM MAR82
         AR    R1,R0              SUM KEY AND DATA BYTES REQ'D DM DEC80
         AH    R1,BLKOVHDA        PLUS BLOCK OVERHEAD          DM DEC80
         SPACE 3                                               DM APR82
CALCBLK9 SRDA  R6,32                                           DM DEC80
         DR    R6,R1              EXTENDED TRACK LENGTH BY BLOCK LENGTH
         STM   R6,R7,20(R13)      SET R0 & R1 FOR RETURN
         LM    R14,R7,12(R13)
         BR    R14                RETURN
         EJECT ,                                               DM APR82
WRKAREA  DSECT ,
         DS    18F           REGISTER SAVE AREA
DBLWRD   DS    D             WORK AREA
LOW      DS    F             LOWER LIMIT - BLKSIZE FOR BLOCKS/TRACK
HIGH     DS    F             UPPER LIMIT - BLKSIZE FOR BLOCKS/TRACK
DEVTYPE  DS    XL4,0XL16     DEVTYPE IS THIS & NEXT 4 WORDS
MAXBLK   DS    F             MAX BLKSIZE                       DM DEC80
         DS    H             PHYSICAL (INCLUDES ALTERNATES) CYLINDERS
         DS    H             TRACKS PER CYLINDER
TRKLNG   DS    H             TRACK LENGTH
BLKOVHDA DS    0H            BLOCK (KEYED) OVERHEAD - DEVIND BIT 4 ON
BLKOVHDB DS    X             BLOCK OVERHEAD (O/T LAST BLOCK)
BLKOVHDC DS    X             BLOCK OVERHEAD (LAST BLOCK)
BLKOVHDD DS    X             BLOCK OVERHEAD DIFFERENCE IF NOT KEYED
DEVIND   DS    X             DEVICE INDICATOR BITS
MODULO   EQU   16            MODULO DEVICE (3375, 3380)        DM DEC80
HWOVHD   EQU   8             BLKOVHDA (HALFWORD) IS USED
APPLYTOL EQU   1             DEVICE TOLERANCE (DEVTOL) IS USED
DEVTOL   DS    H             DEVICE TOLERANCE (512THS)
         SPACE
WRKLNG   EQU   *-WRKAREA
         SPACE 3
PARM1    DSECT ,             PARM1 DESCRIPTION
BLKSIZE  DS    H
KEYLEN   DS    H
BLOCKS   DS    H             RETURN AREA FOR BLOCKS PER TRACK
UNUSED   DS    H             RETURN AREA FOR UNUSED BYTES
INDCATOR DS    H             INDICATOR HALFWORD (MAY BE FORTRAN UNIT)
         SPACE 3
         END
