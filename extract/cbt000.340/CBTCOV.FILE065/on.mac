ONLN     TITLE 'ONLINE DISPLAY AND OPERATOR INTERFACE, VERSION 2'
         MACRO
&NAME    TSOENTER &FAKE,&BASE=12,&REGS=YES,&PL=,                       +
               &WORK=0,&DSECT=NO,&SP=0
         GBLC  &R
         LCLA  &A
         LCLB  &OPTS(8),&BIT
         LCLC  &BASEREG
TSODSECT DSECT ,                        DEFINE NAME OF DSECT
TSOSAVE  DS    18F .                    FIRST SAVE AREA
         CPPL  DSECT=NO                 PARAMETER LIST
&A       SETA  1
.A1      AIF   (&A GT N'&PL).L1
&OPTS(1) SETB  ((&OPTS(1))OR('&PL(&A)' EQ 'MESSAGE'))
&OPTS(2) SETB  ((&OPTS(2))OR('&PL(&A)' EQ 'PARSE'))
&OPTS(3) SETB  ((&OPTS(3))OR('&PL(&A)' EQ 'IO'))
&OPTS(4) SETB  ((&OPTS(4))OR('&PL(&A)' EQ 'CSCAN'))
&OPTS(5) SETB  ((&OPTS(5))OR('&PL(&A)' EQ 'DAIR'))
&A       SETA  &A+1
         AGO   .A1
.L1      ANOP
TSOECB   DS    F .                      DEFINE COMMAND ECB
.LL1     AIF   (NOT &OPTS(1)).L2
         MNOTE 0,'MESSAGE PARM LIST UNDEFINED'
.L2      AIF   (NOT &OPTS(2)).L3
         PPL   DSECT=NO                 PARSE PARM LIST
.L3      AIF   (NOT &OPTS(3)).L4
         IOPL  DSECT=NO                 I/O PARAMETER LIST
.L4      AIF   (NOT &OPTS(4)).L5
         CSPL  DSECT=NO                 CMD SCAN PARM LIST
.L5      AIF   (NOT &OPTS(5)).L6
         DAPL  DSECT=NO                 DAIR PARM LIST
.L6      ANOP
TSOWORK  DS    0D .                     ALIGN TO DOUBLE-WORD
TSOUSER  EQU   * .                      GIVE ALTERNATE NAME
         AIF   ('&REGS' NE 'YES').NOREGS
         EJECT
         REGS
&R       SETC  'R'
.NOREGS  AIF   ('&DSECT' EQ 'NO').GEN
         MEXIT
.GEN     EJECT
&NAME    CSECT
         SAVE  (14,12),T,*
         AIF   (T'&BASE NE 'N').LUSE1
&BASEREG SETC  '&R&BASE'
         AGO   .LUSE2
.LUSE1   ANOP
&BASEREG SETC  '&BASE'
.LUSE2   LUSE  &NAME,&BASEREG .         TELL ASSEMBLER
         LR    &BASEREG,15 .            GET ENTRY POINT
         LR    &R.2,1 .                 SAVE CPPL POINTER
         CNOP  0,4 .                    PROPER ALIGNMENT
         BAL   &R.1,*+8 .               BRANCH AROUND SP+LV
TSOLEN   DC    0XL4'00' .               DEFINE ACCESS NAME
         DC    AL1(&SP) .               SUBPOOL VALUE
         DC    AL3((((TSOUSER-TSODSECT)+(&WORK)+7)/8)*8) .  AREA LENGTH
         L     0,TSOLEN .               LOAD SP AND LV
         SVC   10 .                     ISSUE REGMAIN SVC
         ST    13,4(,1) .               CHAIN
         ST    1,8(,13) .               SAVE
         LR    &R.13,1 .                AREAS
         LUSE  TSODSECT,&R.13 .         ESTABLISH ADDRESSABILITY
         MVC   CPPL(CPPLLEN),0(&R.2) .  COPY PARM LIST
         AIF   (NOT &OPTS(2)).NPARSE
         MVC   PPLUPT(4),CPPLUPT .      USER PROFILE TAB
         MVC   PPLECT(4),CPPLECT
         LA    &R.0,PPLRANS .              LOAD ANSWER PLACE
         ST    &R.0,PPLANS
         LA    &R.0,TSOECB
         ST    &R.0,PPLECB
&BIT     SETB  1
.NPARSE  AIF   (NOT &OPTS(3)).NIO
         MVC   IOPLECT(4),CPPLECT
         MVC   IOPLUPT(4),CPPLUPT
         AIF   (&BIT).Q1
         LA    &R.0,TSOECB
.Q1      ST    &R.0,IOPLECB
&BIT     SETB  1
.NIO     AIF   (NOT &OPTS(5)).NDAIR
         MVC   DAPLUPT(4),CPPLUPT
         MVC   DAPLECT(4),CPPLECT
         MVC   DAPLPSCB(4),CPPLPSCB
         AIF   (&BIT).Q2
&BIT     SETB  1
         LA    &R.0,TSOECB
.Q2      ST    &R.0,DAPLECB
.NDAIR   AIF   (NOT &OPTS(4)).NCSCAN
         MVC   CSPLUPT(4),CPPLUPT
         MVC   CSPLECT(4),CPPLECT
         AIF   (&BIT).Q3
&BIT     SETB  1
         LA    &R.0,TSOECB
.Q3      ST    &R.0,CSPLECB
         LA    &R.0,CSFLG
         ST    &R.0,CSPLFLG
         LA    &R.0,CSOA
         ST    &R.0,CSPLOA
.NCSCAN  INUSE
         EJECT
.MEND    MEND
         MACRO
&NAME    TSOLEAVE &SPLV=TSOLEN,&ISN=,&RETCODE=0
         GBLC  &R
         LCLB  &RTYPE
.*       TSOLEAVE MACRO                  BRUCE M. DANE
.*       LAST UPDATED:                  06 NOV 1973
.*       MACRO GENERATES RE-ENTRANT CODE
.*
&NAME    LR    1,&R.13 .                LOAD RETURN ADDRESS
         L     &R.13,4(0,&R.13) .       LOAD REGISTER POINTER
         AIF   ('&RETCODE' EQ '').FREE1
         AIF   ('&RETCODE'(1,1) NE '(').FREE1
         ST    &RETCODE(1),16(,&R.13) . SAVE RETURN CODE IN R15 PLACE
&RTYPE   SETB  1
.FREE1   ANOP
*        RETURN DYNAMIC SAVE AREA TO SYSTEM
         L     0,&SPLV .                LOAD SP/LEN TO FREE
         FREEMAIN R,LV=(0),A=(1) .      ISSUE FREEMAIN
.RETTEST AIF   (&RTYPE).R0
         AIF   ('&RETCODE' EQ '').RETEQ0 * MESSAGE, ASSUME ZERO
         AIF   (T'&RETCODE NE 'N').REGLD1 * RETURN NUMBER?
         AIF   (&RETCODE EQ 0).R0       * RETCODE=0
         AGO   .REGLA                   * LOAD ADDRESS ON RETCODE
.RETEQ0  MNOTE *,'*** WARNING *** RETCODE ASSUMED ZERO (0)'
         AGO   .R0
.REGLD1  L     &R.15,&RETCODE .         LOAD SAVED RETURN CODE
         AGO   .BR14
.REGLA   LA    &R.15,&RETCODE .         LOAD REQUESTED RETURN CODE
         AGO   .BR14
.R0      LM    14,12,12(13) .           RELOAD CALLERS' REGS
         AIF   (&RTYPE).R00
         XR    15,15 .                  CLEAR RETURN CODE
.R00     BR    14 .                     RETURN TO CALLER
         AGO   .ISNCHEK
.BR14    LM    0,12,20(13) .            LOAD SAVED REGS
         L     14,12(0,13) .            AND RETURN
         BR    14 .                     RETURN TO CALLER
.ISNCHEK AIF   ('&ISN' EQ '').MEND
         &ISN
.MEND    MEND
         MACRO
&NAME    LUSE  &WHERE,&W1,&W2
         GBLB  &LUSED
         GBLC  &USENM(50),&USEW(25),&USENM1(50),&USEW1(25)
         LCLA  &A,&B,&C,&D,&E,&F
         LCLC  &X1,&X2
         AIF   ('&NAME' EQ '').NONAME
&NAME    DS    0H .           DEFINE NAME
.NONAME  AIF   (N'&SYSLIST LE 10).OK1
         MNOTE 16,'OPERAND ERROR - TOO MANY OPERANDS'
.OPFIELD MNOTE *,'OPERAND FIELD FOLLOWS'
         MNOTE *,'&SYSLIST(1),&SYSLIST(2),&SYSLIST(3),&SYSLIST(4),&SYSL*
               IST(5),&SYSLIST(6),&SYSLIST(7),&SYSLIST(8)'
         AIF   (N'&SYSLIST LE 8).MEND
         MNOTE *,'- REMAINING OPERANDS NOT PRINTED -'
         MEXIT
.OK1     AIF   (N'&SYSLIST LT 2).ERR
&A       SETA  1
&C       SETA  N'&SYSLIST
.OKX     AIF   ('&SYSLIST(&A)' NE '').INCR
         MNOTE 16,'OPERAND ERROR - NULL OPERAND'
         AGO   .OPFIELD
.INCR    AIF   (&A EQ &C).GEN
&A       SETA  &A+1
         AGO   .OKX
.GEN     AIF   (&C NE 2).RECURSE
&A       SETA  1
.FNULL   AIF   ('&USEW(&A)' EQ '').HNULL
&A       SETA  &A+1
         AIF   (&A LE 25).FNULL
         MNOTE 16,'LUSE USER ERROR - TOO MANY LUSE WITHOUT LDROP'
         AGO   .OPFIELD
.HNULL   ANOP
&D       SETA  (&A*2)-1
&E       SETA  K'&WHERE-8
&X1      SETC  '&WHERE'
         AIF   (&E LE 0).COMMON
         AIF   (&E LE 8).SETX2
&E       SETA  8
.SETX2   ANOP
&X2      SETC  '&WHERE'(9,&E)
.COMMON  ANOP
&USENM(&D)     SETC           '&X1'
&USENM(&D+1) SETC '&X2'
&USEW(&A) SETC '&W1'
&E       SETA  1
.MATCH1  AIF   (&E GE &D).MT2
         AIF   ('&USENM(&E)' NE '&USENM(&D)').NOMT1
         AIF   ('&USENM(&E+1)' NE '&USENM(&D+1)').NOMT1
         MNOTE 0,'&USENM(&D)&USENM(&D+1) PREVIOUSLY LUSED, HAS'
&F       SETA  (&D+1)/2
         MNOTE *,' ADDRESSABILITY OFF OF &USEW(&F)'
.NOMT1   ANOP
&E       SETA  &E+2
         AGO   .MATCH1
.MT2     ANOP
&E       SETA  1
.MATCH   AIF   (&E GE &A).GENUSE
         AIF   ('&USEW(&E)' EQ '&USEW(&A)').MN0
&E       SETA  &E+1
         AGO   .MATCH
.MN0     MNOTE 0,'** WARNING **  REGISTER '
         MNOTE *,'&USEW(&E) PREVIOUSLY LUSED AS BASE FOR'
&D       SETA  (&E*2)-1
         MNOTE *,'&USENM(&D)&USENM(&D+1) - NEW USING CREATED'
         LDROP &W1            DELETE LUSE
&A       SETA  &A-1           ADJUST THE TOP OF USEW TABLE
&E       SETA  &E+1
         AGO   .MATCH
.GENUSE  USING &WHERE,&W1 .   GEN USING STMT
         AIF   (&LUSED).MEND
*        --> LUSE, LDROP, AND INUSE MACROS ESTABLISHED <-
&LUSED   SETB  1
         SPACE 1
         MEXIT
.RECURSE ANOP
&B       SETA  2
.RCU     AIF   (&B GT &C).MEND
         LUSE  &WHERE&X1,&SYSLIST(&B)
&B       SETA  &B+1
&E       SETA  &E+4096
&X1      SETC  '+'.'&E'
         AGO   .RCU
.ERR     MNOTE 16,'OPERAND ERROR - AT LEAST 2 OPERANDS REQUIRED'
         AGO   .OPFIELD
.MEND    MEND
         MACRO
&NAME    LDROP &W1,&W2
         GBLB  &LUSED
         GBLC  &USENM(50),&USEW(25),&USENM1(50),&USEW1(25)
         LCLA  &A,&B,&C,&D,&E
         LCLB  &F
         LCLC  &X1,&X2
         AIF   ('&NAME' EQ '').NONAME
&NAME    DS    0H .                     NAME DEFINED
.NONAME  AIF   (&LUSED).CNTU
         MNOTE 8,'USER ERROR - LUSE HAS NEVER BEEN USED'
         MEXIT
.CNTU    ANOP
&C       SETA  N'&SYSLIST
         AIF   (&C GT 0).OK1
         MNOTE 4,'NO OPERAND(S) ON LDROP, MACRO IGNORED'
         MEXIT
.OK1     AIF   ('&W1' EQ '*').DROPALL
&A       SETA  1
.LOOP    AIF   (&A GT &C).MEND
&X1      SETC  '&SYSLIST(&A)'
&B       SETA  1
&F       SETB  0
.LL1     AIF   ('&USEW(&B)' EQ '&X1').DROPIT
         AIF   ('&USEW(&B)' EQ '').LL1A
&B       SETA  &B+1
         AIF   (&B LE 25).LL1
.LL1A    AIF   (&F).GETNEXT
         MNOTE 8,'USER ERROR - &SYSLIST(&A) NOT LUSED'
.GETNEXT ANOP
&A       SETA  &A+1
         AGO   .LOOP
.DROPIT  ANOP
&D       SETA  (&B*2)-1
         MNOTE *,'BASE FOR &USENM(&D)&USENM(&D+1) - DROPPED'
.*       CLEAN UP USEW ARRAY FIRST
&E       SETA  &B                       SET POINTER
.CL1     AIF   (&E EQ 25).NULLAST
&USEW(&E) SETC '&USEW(&E+1)'
&USEW1(&E) SETC '&USEW1(&E+1)'
&E       SETA  &E+1
         AIF   ('&USEW(&E)' EQ '').CL2
         AGO   .CL1
.NULLAST ANOP
&USEW(25) SETC ''
&USEW1(25) SETC ''
.*       NOW - THE HARD PART, CLEAN UP USENM
.CL2     AIF   (&D GE 49).NULBOTH
&USENM(&D) SETC '&USENM(&D+2)'
&USENM(&D+1) SETC '&USENM(&D+3)'
&USENM1(&D) SETC '&USENM1(&D+2)'
&USENM1(&D+1) SETC '&USENM1(&D+3)'
&D       SETA  &D+2
         AIF   ('&USENM(&D)' EQ '').GOTO
         AGO   .CL2
.NULBOTH ANOP
&USENM(49) SETC ''
&USENM(50) SETC ''
&USENM1(49) SETC ''
&USENM1(50) SETC ''
.GOTO    AIF   (&F).LL1                 TRY AGAIN
         DROP  &SYSLIST(&A) .           GEN DROP STMT
&F       SETB  1                        NO MULTI-DROPS
         AGO   .LL1                     CLEAN ANY REMAINING ENTRIES
.DROPALL MNOTE *,'LDROP * SPECIFIED - ALL REGS BEING DROPPED'
&B       SETA  1
.DD1     AIF   ('&USEW(&B)' EQ '').DDONE
         MNOTE *,'BASE FOR &USENM(&B*2-1)&USENM(&B*2) - DROPPED'
         DROP  &USEW(&B) .              GEN DROP STMT
&B       SETA  &B+1
&F       SETB  1
         AGO   .DD1
.DDONE   AIF   (&F).DDTWO
         MNOTE 4,'** NO REGISTERS IN USE TO BE LDROP''ED **'
         MEXIT
.DDTWO   ANOP
&A       SETA  1
.CLEAR   AIF   (&A GT 25).MEND
&USEW(&A) SETC ''
&B       SETA  (&A*2)-1
&USENM(&B) SETC ''
&USENM(&B+1) SETC ''
&A       SETA  &A+1
         AGO   .CLEAR
.MEND    MEND
         MACRO
&NAME    INUSE &FOOLASM
         GBLB  &LUSED
         GBLC  &USENM(50),&USEW(25)
         LCLA  &A,&D,&B
         LCLB  &F
         LCLC  &X1,&X2
         AIF   ('&NAME' EQ '').CHK
&NAME    DS    0H .                     NAME DEFINED
.CHK     AIF   (&LUSED).GO
         MNOTE 0,'USER ERROR - LUSE NEVER USED, NO KNOWN BASE REGS'
         MEXIT
.GO      SPACE 2
&A       SETA  1
*              THE FOLLOWING REGISTER(S) IN USE:
*                LOCATION           BASE
.LOOP    AIF   ('&USEW(&A)' EQ '').MENDX
&D       SETA  (&A*2)-1
&X1      SETC  '&USENM(&D)'.'           '
&X2      SETC  '&USENM(&D+1)'.'            '
         MNOTE *,'&X1&X2    &USEW(&A)'
&A       SETA  &A+1
&F       SETB  1
         AGO   .LOOP
.MENDX   AIF   (&F).MEXIT
*              ** NO REGISTERS CURRENTLY IN USE **
.MEXIT   ANOP
         SPACE 1
         MEND
         MACRO
&X       CPPL  &Y,&DSECT=NO
***********************************************************************
*                                                                     *
*             COMMAND   PROCESSOR   PARAMETER   LIST                  *
*                                                                     *
***********************************************************************
         SPACE 1
         AIF   ('&DSECT' NE 'NO').DSECT
CPPL     DS    0A .                     COMMAND PROC PARM LIST
         AGO   .COM
.DSECT   ANOP
CPPL     DSECT ,                        COMMAND PROC PARM LIST
.COM     ANOP
CPPLCBUF DC    A(0) .                   COMMAND BUFFER ADDR
CPPLUPT  DC    A(0) .                   USER PROF. TAB
CPPLPSCB DC    A(0) .                   PROT STEP CB
CPPLECT  DC    A(0) .                   ENV. CTL TABLE
CPPLLEN  EQU   *-CPPL .                 LENGTH
         SPACE 2
         MEND
         MACRO
         REGS
*        SYMBOLIC REGISTER DEFINITIONS
         SPACE     1
*        GENERAL REGISTERS
R0       EQU       0
R1       EQU       1
R2       EQU       2
R3       EQU       3
R4       EQU       4
R5       EQU       5
R6       EQU       6
R7       EQU       7
R8       EQU       8
R9       EQU       9
R10      EQU       10
R11      EQU       11
R12      EQU       12
R13      EQU       13
R14      EQU       14
R15      EQU       15
         SPACE     3
*        FLOATING POINT REGISTERS
         SPACE     1
F0       EQU       0
F2       EQU       2
F4       EQU       4
F6       EQU       6
         SPACE     1
         MEND
         EJECT
ON       TSOENTER REGS=YES,PL=CPPL
         TM    0(R2),X'80'    CHECK IF CALLED AS CMD OR WITH CALL OR $
         BO    END
         L     R15,X'10'                CVT POINTER
         L     R15,0(,R15)              DISPATCH DOUBLE-WORD
         L     R15,4(,R15)              MY TCB ADDRESS
         L     R15,12(,R15)             MY TIOT
         MVC   USERID(8),0(R15)         SAVE MY ID
*
*        TOYOTA MOTORS SVC TO RETURN IN SUP STATE, KEY 0, DISABLED
*
         SPACE 5
         MODESET KEY=NZERO,MODE=SUP
*
*                             RETAIN AUTH. FOR SUBSEQUENT MODESETS
         EJECT
         EXTRACT TJIDTEST,'S',FIELDS=(TJID)
         OC    TJIDTEST+2(2),TJIDTEST+2 IS IT THERE?
         BZ    *+8                      NO
         OI    TJIDTEST+2,X'80'         SET FOR CMD SCHEDULER
         SPACE 1
         LOAD  EP=IKJPTGT
         ST    R0,ADDRPUTG
START    LA    R1,IOPLRX
         USING IOPL,R1
         MVC   IOPLECT,CPPLECT    SET UP IOPL
         MVC   IOPLUPT,CPPLUPT    SET UP IOPL
         LA    R0,ATTNECB
         ST    R0,IOPLECB
         XC    IOPLPTG(16),IOPLPTG
         L     R15,ADDRPUTG
         PUTGET  PARM=IOPLPTG,MF=(E,(1)),ENTRY=(15),                   X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),                     X
               TERMGET=(EDIT,WAIT),                                    X
               OUTPUT=(OLD,SINGLE,MODE)
         SPACE 3
         DROP  R1
         C     R15,=F'4'
         BH    SSSS           ABEND,ERROR
         LA    R11,IOPLPTG
         USING PGPB,R11
         L     R1,PGPBIBUF    INPUT BUFFER
         LH    R3,0(R1)       LENGTH INCLUDING 4 BYTE HDR
         CH    R3,=H'4'       IS IT NULL INPUT
         BE    START          YES, START OVER
         SH    R3,=H'5'
         BM    SSSS           ERROR
         MVC   INPUT(80),=CL80' '   CLEAR INPUT BUFFER
         EX    R3,MOVEIT      MOVE TO MY BUFFER
         LH    R0,0(R1)       LENGTH OF LINE INCLUDING HEADR
         LA    R15,1          SUBPOOL 1
         SLL   R15,24
         OR    R0,R15
         L     R1,PGPBIBUF
         FREEMAIN R,LV=(0),A=(1)      FREE INPUT BUFFR
         DROP  R11
         EJECT
*        ANALYZE INPUT
         SPACE 1
DOINPUT  TR    INPUT(80),CAPS      TRANSLATE TO CAPS
         LA    R2,1(R3)       CMD LENGTH TO R2
         LTR   R2,R2                    TEST LENGTH
         BNP   START
         CLI   INPUT,C'E'               END?
         BE    END                      YES
         LA    R15,INPUT                START
CK01     CLI   0(R15),C' '              SUPPRESS BLANKS
         BNE   CK02                     NO
         SH    R2,=H'1'                 SUBTRACT ONE
         BNP   START                    ALL BLANKS
         LA    R15,1(,R15)              GET NEXT POSITION
         B     CK01                     TRY AGAIN
CK02     MVC   COMMAND(80),0(R15)       MOVE IN COMMAND
         LA    R2,4(,R2)                ADD LENGTH
         STH   R2,CMDLEN                SAVE LENGTH
         LA    R2,24(,R2)               PLUS HEADER
         STH   R2,WTOLEN                SAVE IT
         LA    R1,WTOLEN(R2)            GET LENGTH
         MVI   WTOLEN+2,X'80'           MCS FLAGS
         MVI   WTOLEN+3,X'04'           CLEAR FROM POSSIBLE REPLY
         MVC   INPUT(80),0(R15)         SHIFT LEFT
         MVC   0(4,R1),=X'02004080'     DESC & ROUTCDES
         CLI   INPUT,C'K'               ILLEGAL CMD?
         BE    START                    YES,IGNORE IT
*        CLC   INPUT(2),=C'$D'          HASP DISPLAY CMD?
*        BE    NOWTOMM                  IF YES,DONT TELL OPER
*        WTO   MF=(E,WTOLEN)            ISSUE WTO
NOWTOMM  MODESET KEY=ZERO
         L     R0,TJIDTEST              MASTER CONSOLE?
         LA    R1,CMDLEN                GET COMMAND LENGTH
         SVC   34                       ISSUE SVC
         MODESET KEY=NZERO
         B     START
         SPACE
END      TSOLEAVE ISN=LTORG
SSSS     ABEND 123,DUMP
         EJECT
CMDLEN   DC    H'0',H'0'
COMMAND  DC    CL100' '
WTOLEN   DC    H'0',X'A000'             WTO WITH RESP SO NO ECHO
         DC    CL120'SYSPGMR *** XXXXXXX *** '
USERID   EQU   WTOLEN+16
INPUT    EQU   WTOLEN+28
TJIDTEST DC    F'1'
NOTABLE  DC    C'ON                                       '
ERRMSG   DC    C'ERROR IN INPUT, PLEASE RE-ENTER-'
*
* TABLE TO TRANSLATE FROM LOWER TO UPPER CASE
*
CAPS     DS    0F
         DC    X'000102030405060708090A0B0C0D0E0F10111213141516171819'
         DC    X'1A1B1C1D1E1F'
         DC    X'202122232425262728292A2B2C2D2E2F30313233343536373839'
         DC    X'3A3B3C3D3E3F404142434445464748494A4B4C4D4E4F50515253'
         DC    X'5455565758595A5B5C5D5E5F606162636465666768696A6B6C6D'
         DC    X'6E6F707172737475767778797A7B7C7D7E7F80'
         DC    C'ABCDEFGHI'
         DC    X'8A8B8C8D8E8F90'
         DC    C'JKLMNOPQR'
         DC    X'9A9B9C9D9E9FA0A1'
         DC    C'STUVWXYZ'
         DC    X'AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3'
         DC    X'C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDD'
         DC    X'DEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7'
         DC    X'F8F9FAFBFCFDFEFF'
MOVEIT   MVC   INPUT(0),4(R1)
ATTNECB  DC    F'0'
OLD      DC    A(1),A(MSG),A(0)
MSG      DC    H'8',H'0',C' ONL'
IOPLRX   DC    4F'0'
IOPLPTG  DC    4F'0'
ADDRPUTG DC    F'0'
         EJECT
         IKJIOPL
         SPACE 5
         IKJPGPB
         END
