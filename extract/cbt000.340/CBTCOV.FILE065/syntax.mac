SYNT     TITLE 'S Y N T A X  -  TSO JCL SYNTAX CONVERTER INTERFACE'
         MACRO
&NAME    MSG   &TEXT
         LCLA  &A
&A       SETA  K'&TEXT-2+4
&NAME    DC    H'&A',H'0',C&TEXT
         MEND
         LCLB  &SP3             MACROS FOR MVS/SP 1.3       *HMD 09/82*
&SP3     SETB  1                ARE AVAILABLE IF &SP3 = 1   *HMD 09/82*
         EJECT
         SPACE 2                                            *HMD 04/82*
R0       EQU   0                  REGISTER 0
R1       EQU   1                  REGISTER 1
R2       EQU   2                  REGISTER 2
R3       EQU   3                  REGISTER 3
R4       EQU   4                  REGISTER 4
R5       EQU   5                  REGISTER 5
R6       EQU   6                  REGISTER 6
R7       EQU   7                  REGISTER 7
R8       EQU   8                  REGISTER 8
RLINK    EQU   8                  INTERNAL LINKAGE REGISTER
R9       EQU   9                  REGISTER 9
RTEXT    EQU   9                  TEXT ADDRESS REGISTER
WORKREG  EQU   10                 WORK AREA ADDRESS REGISTER
BASEREG  EQU   11                 BASE REGISTER
R12      EQU   12                 REGISTER 12
R13      EQU   13                 O/S SAVE AREA ADDRESS REGISTER
R14      EQU   14                 O/S LINKAGE REGISTER
R15      EQU   15                 O/S ENTRY AND RC REGISTER
         SPACE 2
* FLAGS + 0                                                 *HMD 09/82*
PALLOC   EQU   X'80'               INDICATE PROCLIB ALLOCATED
PQUOTE   EQU   X'40'               INDICATE PROCLIB IN QUOTES
DQUOTE   EQU   X'20'               INDICATE DATASET IN QUOTES
QEDSW    EQU   X'10'               INDICATE QED INVOCKED            JAN
DPASS    EQU   X'08'               INDICATE DATASET PASS THRU
FTIME    EQU   X'04'               FIRST TIME THRU SWITCH
JOBSUB   EQU   X'02'               JOB CARD SUBSTITUTION SWITCH     MSA
DALLOC   EQU   X'01'               INDICATE DATASET ALLOCATED
* FLAGS + 1                                                 *HMD 09/82*
DEBUGFLG EQU   X'80'               DEBUG OPTION PRESENT     *HMD 09/82*
         TITLE 'S Y N T A X   -   TSO JCL SYNTAX CONVERTER INTERFACE'
***********************************************************************
*                                                                     *
* TITLE -      SYNTAX      TSO JCL SYNTAX CHECKER                     *
*                                                                     *
*                                                                     *
* RELEASE -    1.0         SYNTAX MVS RELEASE                         *
*                                                                     *
* AUTHOR -     MICHAEL LEE EMIGH                                      *
*              UNITED AIR LINES - EXOKF COMPUTER CENTER               *
*              1200 W. ALGONQUIN ROAD                                 *
*              ELK GROVE VILLAGE, ILLINOIS                            *
*              PHONE: 312-952-4371                                    *
*                                                                     *
*                                                                     *
* FUNCTION -   PROVIDES INTERFACE BETWEEN TSO TERMINAL USER AND THE   *
*              O/S CONVERTOR FOR SYNTAX CHECKING JCL AND OBTAINING    *
*              THE CONVERTOR MESSAGES AT THE TSO TERMINAL.            *
*                                                                     *
* COMMAND FORMAT -                                                    *
*           SYNTAX 'DSN' PROCLIB('USER PROCLIB DSN')                  *
*                                                                     *
*              PROCLIB IS AN OPTIONAL PARAMETER.                      *
*                                                                     *
* INPUT -      STANDARD LINKAGE CONVENTIONS                           *
*              REGISTER 1 - ADDRESS OF COMMAND PROCESSOR PARAMETER    *
*                           LIST
*                                                                     *
*                                                                     *
* OUTPUT -     RETURN TO TERMINAL MONITOR PROGRAM                     *
*              REGISTER 15 CONTAINS RETURN CODE AS FOLLOWS            *
*                 0 - JCL CONTAINS NO ERRORS                          *
*                 4 - JCL ERRORS FOUND                                *
*                 8 - CONVERTER FAILURE                               *
*                12 - SYNTAX COMMAND OR USER ERROR                    *
*                                                                     *
*                                                                     *
* ATTRIBUTES - REENTERANT, REUSABLE, REFRESHABLE                      *
*                                                                     *
* NOTES -      THIS ROUTINE INTERFACES TO THE MVS CONVERTER           *
*              TO PROVIDE TSO JCL SYNTAX CHECKING.                    *
*                                                                     *
*              *** THIS ROUTINE REQUIRES SVC 211 (USER WRITTEN        *
*                  TYPE 3 SYNTAX SVC) TO EXECUTE.                     *
*                                                                     *
* TRW MODIFICATIONS -                                                 *
*              12/20/79 MES A) ADDED CODE TO CHECK INPUT DATASET FOR  *
*                              A JOB CARD AND TO SUPPLY A DUMMY JOB   *
*                              CARD IF NECESSARY.                     *
*                           B) ADDED CODE TO ALLOCATE AND CONCATENATE *
*                              THE FOLLOWING STD LIST OF PROCLIBS AS  *
*                              WELL AS ANY OPTIONALLY SPECIFIED USER  *
*                              PROCLIB:                               *
*                                OSS.PROCLIB                          *
*                                SYS1.PROCLIB                         *
*                                RTS.PROCLIB                          *
*                                SYS2.PROCLIB                         *
* GTE MODIFICATIONS                                         *HMD 04/82*
*                                                           *HMD 04/82*
*  ====>    (04/30/82 - HOWARD M. DEAN)                     *HMD 04/82*
*                                                           *HMD 04/82*
*      1. CHANGE STANDARD PROCLIB LIST TO:                  *HMD 04/82*
*                                                           *HMD 04/82*
*         SYS1.PROCLIB                                      *HMD 04/82*
*         LA.SYSM.PROCLIB                                   *HMD 04/82*
*         LA.PROD.PROCLIB                                   *HMD 04/82*
*         LA.UTIL.PROCLIB                                   *HMD 04/82*
*                                                           *HMD 04/82*
*      2. CHANGE DUMMY JOBCARD FORMAT                       *HMD 04/82*
*      3. SHOW SUBSTITUTION JCL ALWAYS                      *HMD 04/82*
*      4. FIX UP LISTING OPTIONS (EJECTS, ETC)              *HMD 04/82*
*      5. CHANGE SVC NUMBER TO 211 TO AVOID CONFLICT        *HMD 04/82*
*      6. FIX LOOP IN DAIRFAIL CALL IF DECONCAT FAILS       *HMD 04/82*
*                                                           *HMD 04/82*
* ====>   (09/11/81)  HOWARD M. DEAN)                       *HMD 09/82*
*                                                           *HMD 04/82*
*      1. CHECK FOR MVS/SP 1.3 SYSTEM - SET FLAG            *HMD 09/82*
*      2. ADD CODE TO USE GQSCAN MACRO FOR SYSDSN SEARCH    *HMD 09/82*
*      3. SHOW ALL JCL IF DEBUG OPTION SPECIFIED            *HMD 09/82*
*                                                           *HMD 04/82*
*  GTE MODIFICATIONS BY:                                    *HMD 09/82*
*                                                           *HMD 09/82*
*      HOWARD M. DEAN                                       *HMD 09/82*
*      GTE DATA SERVICES                                    *HMD 09/82*
*      4750 LINCOLN BLVD.                                   *HMD 09/82*
*      MARINA DEL REY, CA 90291                             *HMD 09/82*
*      (213) 821-0511 X330                                  *HMD 09/82*
*                                                           *HMD 09/82*
***********************************************************************
         EJECT
SYNTAX   CSECT                     TSO JCL SYNTAX CHECKER
         SAVE  (14,12),T,*         SAVE CALLERS REGISTERS
         LR    BASEREG,R15         LOAD BASE ADDRESS
         USING SYNTAX,BASEREG      EST. ADDRESSIBILITY
         LR    R9,R1               SAVE CPPL ADDRESS
         LA    R4,CORESIZE         LOAD MAIN STORAGE REQUIRED
         GETMAIN R,LV=(R4)         GET MAIN STORAGE
         LR    WORKREG,R1          SET WORK AREA BASE REGISTER
         USING SYNTAXD,WORKREG     EST. WORK AREA ADDR
         USING CPPL,R9             GIVE ASSM CPPL ADDRESS
         LR    R0,R1               SET R0 FOR CLEAR
         LR    R1,R4               SET R1 FOR CLEAR LENGTH
         SR    R3,R3               CLEAR PAD CHAR AND 0 LENGTH
         MVCL  R0,R2               CLEAR WORK AREA
         ST    R13,SAVE+4          CHAIN OLD SAVE AREA
         ST    WORKREG,8(R13)      CHAIN NEW SAVE AREA
         LR    R13,WORKREG         LOAD O/S SAVE AREA ADDRESS REG
         ST    R9,ACPPL            SAVE CPPL ADDRESS
         L     R5,CPPLECT          IS PRIMARY COMMAND NAME SYN???   JAN
         USING ECT,R5                 *                             JAN
         CLC   ECTPCMD(3),SYNTAX+5    *                             JAN
         BE    SYNSET                 * YES, MUST NOT BE FROM QED   JAN
         DROP  R5                     *                             JAN
         L     R5,CPPL+16          LOAD FIFTH WORD OF CPPL          JAN
         LTR   R5,R5                   *  AND TEST FOR ZERO         JAN
         BZ    SYNSET                  *   IS ZERO, NOT FROM QED    JAN
         CLC   8(4,R5),=C'QEDS'    IS QED INDICATOR PRESENT         JAN
         BNE   SYNSET                  *   NO                       JAN
         ST    R5,ECBPTR           STORE FIFTH WORD  ECB LIST PTR   JAN
         OI    FLAGS,QEDSW         SET INDICATOR, INVOCED BY QED    JAN
         EJECT
SYNSET   DS    0H                                                   JAN
         LA    R1,IOPLPARM         LOAD I/O PARM LIST ADDRESS
         USING IOPL,R1             SET IOPL DSECT
         MVC   IOPLUPT,CPPLUPT     MOVE UPT ADDRESS
         MVC   IOPLECT,CPPLECT     MOVE ECT ADDRESS
         LA    R15,IOPLEND         LOAD PUTLINE PB ADDRESS
         ST    R15,IOPLIOPB        STORE IN IOPL
         LA    R0,ATTENECB         LOAD ATTENTION ECB ADDRESS
         ST    R0,IOPLECB          STORE IN PARM LIST
         DROP  R1
         LA    R1,PARMLIST         LOAD PARM LIST ADDRESS
         USING PPL,R1              SET DAIR PB DSECT
         MVC   PPLUPT,CPPLUPT      MOVE UPT ADDRESS
         MVC   PPLECT,CPPLECT      MOVE ECT ADDRESS
         MVC   PPLCBUF,CPPLCBUF    MOVE CMD BUFFER ADDRESS
         ST    WORKREG,PPLUWA      STORE WORK AREA ADDRESS
         LA    R0,APDL             LOAD PDL ANSWER AREA ADDRESS
         ST    R0,PPLANS           STORE IN PARSE LIST
         LA    R0,ATTENECB         LOAD ATTENTION ECB ADDRESS
         ST    R0,PPLECB           STORE IN PARSE LIST
         MVC   PPLPCL,=A(PCL)      MOVE PCL ADDRESS TO PPL
         LINK  ,SF=(E,PARSLINK)    LINK TO PARSE ROUTINE
         LTR   R15,R15             NORMAL COMPLETION?
         BZ    PARSEOK             YES, THEN CONTINUE
         LA    R0,MSGPARSE         LOAD PARSE ERROR MSG ADDRESS
         B     INTERROR            GO RETURN TO CALLER
         EJECT
PARSEOK  DS    0H                  PARSE OK
         MVI   MEMBER,X'40'        SET CLEAR CHARACTER
         MVC   MEMBER+1(7),MEMBER  CLEAR MEMBER NAME
         MVI   DSN,X'40'           SET CLEAR CHARACTER
         MVC   DSN+1(43),DSN       CLEAR DSNAME
         MVI   PASSWORD,X'40'      SET CLEAR CHARACTER
         MVC   PASSWORD+1(7),PASSWORD CLEAR PASSWORD
         L     R2,APDL             LOAD PDL ADDRESS
         USING PDL,R2              SET PDL DSECT
         OC    PDLDEBUG,PDLDEBUG   CHECK FOR DEBUG OPTION   *HMD 09/82*
         BZ    NODEBUG             DEBUG NOT PRESENT        *HMD 09/82*
         OI    FLAGS+1,DEBUGFLG    FLAG DEBUG OPTION        *HMD 09/82*
NODEBUG  DS    0H                                           *HMD 09/82*
         NC    PDLDSN+6(2),PDLDSN+6 TEST IF DSNAME PRESENT
         BNZ   MOVEDSN             IF PRESENT THEN SKIP CODE
         MVC   DSN(4),=C'CNTL'     SET DEFAULT TO CNTL
         MVC   LDSN,=H'4'          LENGTH IS 4
         B     CKMEMBER            GO CHECK FOR MEMBER
         SPACE 2
MOVEDSN  DS    0H                  MOVE DSNAME
         L     R15,PDLDSN          LOAD DSNAME ADDRESS
         LH    R14,PDLDSN+4        LOAD DSNAME LENGTH
         STH   R14,LDSN            SAVE DSNAME LENGTH
         BCT   R14,MOVEDSN2        MINUS 1 FOR EX AND TEST LENGTH   JAN
         CLI   0(R15),C'$'         LENGTH OF DSNAME IS 1, IS IT '$' JAN
         BNE   MOVEDSN2               *  NO                         JAN
         TM    FLAGS,QEDSW         WERE WE ATTACHED BY QED          JAN
         BO    PROCALOC               *  YES                        JAN
         SPACE 2
MOVEDSN2 DS    0H                  TURN OFF SWITCH, USE DSNAME      JAN
         NI    FLAGS,255-QEDSW     TURN OFF SWITCH, USE DSNAME      JAN
         MVC   DSN(0),0(R15)       MOVE DSNAME
         EX    R14,*-6             EXECUTE FOR PROPER LENGTH
         TM    PDLDSN+6,X'40'      DSNAME IN QUOTES?
         BZ    CKMEMBER            NO, THEN SKIP CODE
         OI    FLAGS,DQUOTE        INDICATE DSN IN QUOTES
         SPACE 2
CKMEMBER DS    0H                  CHECK FOR MEMBER NAME
         NC    PDLDSN+14(2),PDLDSN+14 MEMBER NAME ENTERED
         BZ    CKPSWD              IF NOT THEN GO CHECK PSWD
         L     R15,PDLDSN+8        LOAD MEMBER NAME ADDRESS
         LH    R14,PDLDSN+12       LOAD MEMBER LENGTH
         BCTR  R14,0               MINUS 1 FOR EXECUTE
         MVC   MEMBER(0),0(R15)    MOVE MEMBER
         EX    R14,*-6             EXECUTE FOR PROPER LENGTH
         SPACE 2
CKPSWD   DS    0H                  CHECK FOR PASWORD
         NC    PDLDSN+22(2),PDLDSN+22 PASSWORD ENTERED
         BZ    PROCALOC            IF NOT THEN GO SETUP DAIR
         L     R15,PDLDSN+16       LOAD PASSWORD ADDRESS
         LH    R14,PDLDSN+20       LOAD PASSWORD LENGTH
         BCTR  R14,0               MINUS 1 FOR EXECUTE
         MVC   PASSWORD(0),0(R15)  MOVE PSWD
         EX    R14,*-6             EXECUTE FOR PROPER LENGTH
         EJECT
PROCALOC DS    0H              *** ALLOCATE PROCLIBS ***            MES
         LA    R1,DAIRPARM         DAIR PARM LIST ADDR              MES
         USING DAPL,R1             DSECT ADDRESSABILITY             MES
         MVC   DAPLUPT,CPPLUPT     MOVE UPT ADDRESS                 MES
         MVC   DAPLECT,CPPLECT     MOVE ECT ADDRESS                 MES
         LA    R0,ATTENECB         ADDR OF ATTENTION ECB            MES
         ST    R0,DAPLECB          STORE ECB ADDR IN PARM LIST      MES
         MVC   DAPLPSCB,CPPLPSCB   MOVE PSCB ADDR                   MES
         LA    R0,DAIRPB           LOAD DAIR PB ADDR                MES
         ST    R0,DAPLDAPB         STORE IN DAPL                    MES
         MVC   DAIRCAT(LDAPB0C),MDAPB0C INIT CONCAT LIST            MES
         LA    R3,DAIRCAT          ADDRESS OF REAL CONCATENATION LIST
         USING DAPB0C,R3           DSECT ADDRESSABILITY             MES
         SR    R12,R12             INIT PROC COUNT REG              MES
         MVC   DAIRPB(LDAPB08),MDAPB08  INIT DAIR ALLOC LIST        MES
         LA    R8,DAIRPB           ADDR OF REAL DAIR ALLOC LIST     MES
         USING DAPB08,R8           DSECT ADDRESSABILITY             MES
         MVC   DA08DDN,=CL8'IEFPDSI' SET REQUIRED DDNAME            MES
         LA    R0,PROCDSN          DATASET NAME TO BE ALLOC         MES
         ST    R0,DA08PDSN         STORE IN PARM LIST               MES
         NC    PDLKPROC,PDLKPROC   WAS A USER PROCLIB SPECIFIED ?   MES
         BZ    PROCSTD             NO                               MES
         LA    R12,1(R12)          BUMP PROCLIB COUNT               MES
         L     R15,PDLPROCN        USER PROCLIB DSNAME ADDR         MES
         LH    R14,PDLPROCN+4      USER PROCLIB DSNAME LENGTH       MES
         STH   R14,PROCDSN         SAVE LENGTH                      MES
         BCTR  R14,0               -1 FOR MOVE                      MES
         MVC   PROCDSN+2(0),0(R15) MOVE USER DSNAME                 MES
         EX    R14,*-6             DO PROPER LENGTH MOVE            MES
         TM    PDLPROCN+6,X'40'    WAS DSN IN QUOTES ?              MES
         BO    USERALOC            YES. GO ALLOCATE.                MES
         OI    DA08CTL,DA08UID     NO. DAIR MUST PREFIX USERID.     MES
USERALOC LINK  ,SF=(E,DAIRLINK)    GO DO DAIR CALL                  MES
         LTR   R15,R15             PROCLIB ALLOCATED?               MES
         BZ    USERAL01            NO, THEN GO TO DAIR FAIL ROUTINE MES
         BAL   R14,DAIRFAIL        CALL DAIRFAIL SUBROUTINE *HMD 04/82*
         B     RETURN              RETURN TO MVS            *HMD 04/82*
USERAL01 MVC   12(8,R3),DA08DDN    SAVE ALLOC DDN IN CONCAT LIST    HMD
         MVC   DA08DDN,=CL8' '     BLANK OUT ALLOC DDNAME           MES
         NI    DA08CTL,255-DA08UID TURN OFF PREFIX FLAG             MES
         LA    R3,8(R3)            BUMP TO NEXT EMPTY CONCAT SLOT   MES
         EJECT
PROCSTD  DS    0H       ***  ALLOCATE STD LIST OF PROCLIBS ***      MES
         LA    R4,ALLOCLST         ADDR OF ALLOCATION LIST          MES
PROCLOOP DS    0H                                                   MES
         TM    0(R4),X'80'         END OF LIST ?                    MES
         BO    PROCCNAT            YES. GO CONCATENATE ALL PROCLIBS MES
         ST    R4,DA08PDSN         STORE ADDR OF DSN TO BE ALLOCATEDMES
         LINK  ,SF=(E,DAIRLINK)    GO ALLOCATE                      MES
         LTR   R15,R15             WAS ALLOCATION SUCCESSFUL ?      MES
         BZ    PROCL01             YES..CONTINUE                    MES
         BAL   R14,DAIRFAIL        CALL DAIRFAIL ROUTINE    *HMD 04/82*
         B     RETURN              RETURN TO MVS.           *HMD 04/82*
PROCL01  LA    R12,1(R12)          YES. BUMP ALLOCATED PROCLIB CNT  HMD
         MVC   12(8,R3),DA08DDN    SAVE DDNAME ASSIGNED BY ALLOC    MES
         MVC   DA08DDN,=CL8' '     CLEAR ALLOC LIST DDNAME          MES
         LA    R3,8(R3)            BUMP TO NEXT EMPTY CONCAT SLOT   MES
         LA    R4,46(R4)           BUMP TO NEXT PROCLIB DSN         MES
         B     PROCLOOP            GO SEE IF IT SHOULD BE ALLOC     MES
         SPACE 2
PROCCNAT DS    0H           *** CONCATENATE ALLOCATED PROCLIBS ***  MES
         LA    R3,DAIRCAT          RESET ADDR OF CONCAT LIST        MES
         ST    R3,DAPLDAPB         STORE IN DAIR PARM LIST          MES
         STH   R12,DA0CNUMB        STORE # OF PROCLIBS IN DAIR LIST MES
         LINK  ,SF=(E,DAIRLINK)    GO CONCATENATE PROCLIBS          MES
         LTR   R15,R15             CONCATENATION SUCCESSFUL ?       MES
         BZ    DAIRDS              YES..CONTINUE            *HMD 04/82*
         BAL   R14,DAIRFAIL        NO..GO PRINT ERROR       *HMD 04/82*
         B     RETURN              RETURN TO MVS            *HMD 04/82*
         DROP  R3                                                   MES
         EJECT
DAIRDS   DS    0H          *** ALLOCATE INPUT DATASET ***
         OI    FLAGS,PALLOC        INDICATE PROCLIB ALLOCATED
         TM    FLAGS,QEDSW         ARE WE USING QED INCORE DATA     JAN
         BO    CONVERT               * YES, BYPASS ALLOC & OPEN     JAN
         LA    R1,DAIRPARM         RELOAD DAIR PARM LIST ADDRESS
         LA    R8,DAIRPB           RELOAD PB ADDRESS                MES
         ST    R8,DAPLDAPB         STORE IN DAIR PARM LIST          MES
         MVC   DAIRPB(LDAPB08),MDAPB08 RESET PATTERN DAPB
         LA    R0,PDSN             LOAD DSNAME ADDRESS
         ST    R0,DA08PDSN         STORE IN DAPB
         MVC   DA08DDN,=CL8'IEFRDER' SET DDNAME
         MVC   DA08MNM,MEMBER      SET MEMBER NAME
         MVC   DA08PSWD,PASSWORD   SET PASSWORD
         TM    FLAGS,DQUOTE        DSNAME IN QUOTES
         BO    *+8                 YES, THEN SKIP NEXT STMT
         OI    DA08CTL,DA08UID     INDICATE NAME NOT IN QUOTES
         LINK  ,SF=(E,DAIRLINK)    LINK TO DAIR ROUTINE
         LTR   R15,R15             DAIR COMPLETE NORMALLY?
         BZ    DAIROK              YES, THEN CONTINUE
         TM    FLAGS,DPASS+DQUOTE  BEEN HERE BEFORE OR DSN IN QUOTES?
         BNO   LBL001              NO, CONTINUE             *HMD 04/82*
         BAL   R14,DAIRFAIL        INDICATE ERROR           *HMD 04/82*
         B     RETURN              RETURN TO MVS            *HMD 04/82*
LBL001   ST    R15,SAVE            SAVE RETURN CODE
         OI    FLAGS,DQUOTE+DPASS  INDICATE PASSED THRU
         LA    R1,PARMLIST         LOAD PARM LIST ADDRESS
         USING DFPL,R1             SET DFPL DSECT
         MVC   DFPLUPT,CPPLUPT     MOVE UPT ADDRESS
         MVC   DFPLECT,CPPLECT     MOVE ECT ADDRESS
         LA    R0,ATTENECB         LOAD ATTENTION ECB ADDRESS
         ST    R0,DFPLECB          STORE IN DFPL
         LA    R2,DEFPB            LOAD PB ADDRESS
         ST    R2,DFPLDFPB         STORE IN DFPL
         USING DFPB,R2             SET DEFAULT PB DSECT
         LA    R0,PDSN             LOAD DSNAME ADDRESS
         ST    R0,DFPBDSN          STORE IN DFPB
         MVC   DFPBPSCB,CPPLPSCB   MOVE PSCB ADDRESS
         MVI   DFPBCODE,X'04'      SET FUNCTION CODE
         MVI   DFPBCNTL,DFPBUID    INDICATE TO PREFIX USERID
         LINK  ,SF=(E,DEFLINK)     LINK TO DEFAULT ROUTINE
         LTR   R15,R15             TEST FOR SUCCESSFUL COMPLETION
         BZ    DAIRDS              GO RETRY DAIR
         L     R15,SAVE            RELOAD RETURN CODE
         BAL   R14,DAIRFAIL        GO TO DAIR FAIL ROUTINE
         B     RETURN              RETURN TO MVS            *HMD 04/82*
         EJECT
DAIROK   DS    0H                  CONTINE WITH CP
         OI    FLAGS,DALLOC        INDICATE DATASET ALLOCATED
         MVC   SYNDCB(LQSDCB),QSDCB BUILD INPUT DCB
         LA    R0,SYNDCB           LOAD INPUT DCB ADDRESS
         ST    R0,OPLIST           STORE DCB ADDRESSES
         MVI   OPLIST,128          SET UP FOR OPEN INPUT
         OPEN  ,MF=(E,OPLIST)      OPEN JCL DATASET
         TM    SYNDCB+48,X'10'     OPEN SUCCESSFUL?
         BO    CONVERT             CONTINUE
         LA    R0,OPENMSG          LOAD OPEN ERROR MSG ADDRESS
         B     INTERROR            GO TRY IT AGAIN
         SPACE 2
CONVERT  DS    0H                  CONVERT JCL
         MVC   LINE(2),=H'254'     SET LINE LENGTH
         OI    FLAGS,FTIME         SET FIRST TIME SWITCH
         LA    R1,EXITLIST         LOAD PROGRAM EXIT LIST
         LA    R15,=CL8'IEFPDSI'   LOAD PROCLIB DDNAME ADDRESS
         SR    R0,R0               NO OVERRIDES OR OPTIONS
         ICM   R0,8,=X'40'         INDICATE INTERPRET
         SVC   211                 ISSUE CONVERTER INTERFACE SVC 211
* NOTE THAT SVC NUMBER HAS BEEN CHANGED TO 211              *HMD 04/82*
         ST    R15,SAVE            SAVE RETURN CODE
         C     R15,=F'4'           COMP MAXIMUM RETURN CODE
         BH    FAILURE             IF TOO HIGH, THEN CONVERTER ERROR
         BE    RETURN              JCL ERROR
         LA    R0,MSGNERR          LOAD SUCCESS MESSAGE ADDRESS
         BAL   RLINK,PUTLINE       LINK AND WRITE LINE TO TERMINAL
         B     RETURN              GO RETURN TO TMP
         SPACE 2
FAILURE  DS    0H
         LH    R2,CONVMSG          LOAD ERROR MESSAGE LENGTH
         BCTR  R2,0                MINUS 1 FOR MOVE
         MVC   MSGTEXT(0),CONVMSG  MOVE MSG TEXT
         EX    R2,*-6              EXECUTE MOVE FOR PROPER LENGTH
         CVD   R15,EXITSAVE        CONVERT RC TO DECIMAL
         OI    EXITSAVE+7,X'0F'    NEUTRALIZE SIGN
         UNPK  MSGTEXT+34(3),EXITSAVE(8) UNPACK RC INTO MSG
         LA    R0,MSGTEXT          LOAD MSG ADDRESS
         BAL   RLINK,PUTLINE       LINK AND WRITE LINE TO TERMINAL
         MVC   SAVE(4),=F'8'       SET RETURN CODE TO 8
         B     RETURN              GO RETURN TO TMP
         SPACE 2
INTERROR DS    0H                  INTERNAL ERROR
         BAL   RLINK,PUTLINE       LINK AND WRITE LINE TO TERMINAL
         MVC   SAVE(4),=F'12'      SET RETURN CODE TO 12
         EJECT
RETURN   DS    0H
         TM    SYNDCB+48,X'10'     DCB OPEN?
         BZ    RETURN0             NO, THEN SKIP CODE
         CLOSE ,MF=(E,OPLIST)      CLOSE DCB
         FREEPOOL SYNDCB           FREE BUFFER POOLS
         EJECT
RETURN0  DS    0H                  CHECK FOR DS ALLOCATION  *HMD 04/82*
         TM    FLAGS,DALLOC        DATASET ALLOCATED?
         BZ    RETURN3             IF NOT THEN SKIP CODE
         MVC   DAIRPB(LDAPB18),MDAPB18 MOVE IN FREE DAIR PB
         LA    R2,DAIRPB           LOAD PARM BLOCK ADDR     *HMD 04/82*
         USING DAPB18,R2           ADDRESS THE DSECT        *HMD 04/82*
         MVC   DA18DDN,=CL8'IEFRDER' MOVE IN DDNAME
         LA    R0,PDSN             LOAD DSNAME ADDRESS
         ST    R0,DA18PDSN         STORE IN DAIR PB
         MVC   DA18MNM,MEMBER      MOVE IN MEMBER NAME
         TM    FLAGS,DQUOTE        DSNAME IN QUOTES?
         BO    RETURN1             YES, THEN SKIP CODE
         OI    DA18CTL,DA18UID     INDICATE TO PREFIX USERID
         SPACE 2
RETURN1  DS    0H                  FREE JCL DATASET
         LA    R1,DAIRPARM         LOAD DAIR PARM LIST ADDR
         LINK  ,SF=(E,DAIRLINK)    LINK TO DAIR ROUTINE
         DROP  R2                                           *HMD 04/82*
         TM    FLAGS,PALLOC        WAS PROCLIB ALLOCATED
         BZ    RETURN3             IF NOT, THEN SKIP CODE
         LA    R1,DAIRPARM         ADDR OF DAIR PARM LIST
         USING DAPL,R1             DSECT ADDRESSABILITY
         LA    R0,DAIRPB           ADDR OF DECONCATENATE AREA
         ST    R0,DAPLDAPB         STORE IN DAIR PARM LIST
         MVC   DAIRPB(LDAPB10),MDAPB10 INIT DECONCAT AREA
         LINK  ,SF=(E,DAIRLINK)    GO DECONCATENATE PROCLIBS
         LTR   R15,R15             WAS REQUEST SUCCESSFUL ?
         BZ    DEALLOC             YES, CONTINUE            *HMD 04/82*
         BAL   R14,DAIRFAIL        CALL DAIRFAIL ROUTINE    *HMD 04/82*
         MVC   DAIRPB(LDAPB18),MDAPB18 INIT DAIR FREE AREA  *HMD 04/82*
         LA    R2,DAIRPB           ADDR OF DAIR 'FREE' AREA *HMD 04/82*
         USING DAPB18,R2                                    *HMD 04/82*
         MVC   DA18DDN,PRDDNAM     MOVE PROCLIB DDNAME      *HMD 04/82*
         XC    DA18PDSN,DA18PDSN   CLEAR DSNAME POINTER     *HMD 04/82*
         LA    R1,DAIRPARM         ADDR OF DAIR PARM LIST   *HMD 04/82*
         LINK  ,SF=(E,DAIRLINK)    GO FREE IEFPDSI DDNAME   *HMD 04/82*
         LTR   R15,R15             CHECK RETURN CODE        *HMD 04/82*
         BZ    DEALLOC             NOW..TRY AND DEALLOC     *HMD 04/82*
         BAL   R14,DAIRFAIL        OTHERWISE PRINT ERROR    *HMD 04/82*
         DROP  R2                  NO LONGER NEEDED NOW     *HMD 04/82*
DEALLOC  DS    0H              *** DEALLOCATE PROCLIBS ***
         L     R2,APDL             PDL ADDRESS
         USING PDL,R2
         NC    PDLKPROC,PDLKPROC   ANY USER PROCLIB ALLOCATED ?
         BZ    DEALSTD             NO
         L     R15,PDLPROCN        ADDR OF USER PROCLIB DSN
         MVC   DAIRPB(LDAPB18),MDAPB18 INIT DAIR FREE AREA
         LA    R2,DAIRPB           ADDR OF DAIR 'FREE' AREA
         USING DAPB18,R2
         ST    R15,DA18PDSN        STORE ADDR OF DSN TO BE FREED
         TM    FLAGS,PQUOTE        WAS DSN ENTERED IN QUOTES ?
         BO    *+8                 YES.
         OI    DA18CTL,DA18UID     NO. DAIR MUST PREFIX USERID
         LA    R1,DAIRPARM         ADDR OF DAIR PARM LIST
         LINK  ,SF=(E,DAIRLINK)    GO FREE USER SPECIFIED PROCLIB
DEALSTD  DS    0H               ** FREE STD PROCLIB LIST **
         NI    DA18CTL,255-DA18UID TURN OFF DAIR PREFIX BIT
         LA    R3,ALLOCLST         ADDR OF LIST OF STD PROCLIBS
DEALOOP  DS    0H
         TM    0(R3),X'80'         END OF LIST
         BO    RETURN3             YES
         ST    R3,DA18PDSN         ADDR OF DSN TO BE FREED
         LINK  ,SF=(E,DAIRLINK)    GO FREE IT
         LA    R3,46(R3)           BUMP TO NEXT DSN
         B     DEALOOP             GO PROCESS IT
         EJECT
RETURN3  DS    0H                  RETURN TO CALLING ROUTINE
         IKJRLSA APDL              RELEASE PDL STORAGE
         LA    R0,CORESIZE         LOAD FREEMAIN LENGTH
         LR    R1,WORKREG          LOAD FREEMAIN ADDRESS
         L     R8,SAVE             RELOAD RETURN CODE
         L     R13,SAVE+4          RELOAD OLD SAVE AREA ADDRESS
         FREEMAIN R,LV=(0),A=(1)   FREE WORK AREA
         LR    R15,R8              RETURN CODE TO REG 15
         RETURN (14,12),RC=(15)    RETURN TO CALLER
         EJECT
DAIRFAIL DS    0H                  DAIR FAIL ANALYSIS ROUTINE
*                                                           *HMD 04/82*
* DAIR FAIL ROUTINE -                                       *HMD 04/82*
* CALLED BY BALR R14,DAIRFAIL - RETURN TO R14 ADDRESS       *HMD 04/82*
*                                                           *HMD 04/82*
         ST    R14,DFSAVE          SAVE RETURN ADDRESS      *HMD 04/82*
         XC    PARMLIST(40),PARMLIST CLEAR PARM LIST
         LA    R1,PARMLIST         LOAD PARM LIST ADDRESS
         USING DFPARMS,R1          SET DAIR FAIL DSECT
         LA    R0,DAIRPARM         LOAD PARAMETER BLOCK ADDRESS
         ST    R0,DFDAPLP          STORE IN DAIR FAIL PB
         ST    R15,PARMLIST+32     SAVE RETURN CODE
         LA    R15,PARMLIST+32     LOAD RC ADDRESS
         ST    R15,DFRCP           STORE RC IN DAIR FAIL PB
         LA    R0,=H'1'            LOAD CALL TYPE *************
         ST    R0,DFIDP            STORE TYPE IN DAIR FAIL PB
         MVC   DFCPPLP,ACPPL       MOVE CPPL ADDRESS TO DAIR FAIL PB
         LA    R0,PARMLIST+36      LOAD ENTRY POINT ADDRESS ADDRESS
         ST    R0,DFJEFF02         STORE EP ADDRESS IN LIST
         LINK  ,SF=(E,DFLINK)      LINK TO DAIR FAIL ANALYSIS ROUTINE
         L     R14,DFSAVE          RESTORE RETURN ADDRESS   *HMD 04/82*
         BR    R14                 RETURN TO CALLER
         EJECT
PUTLINE  DS    0H                  PUTLINE ROUTINE
         PUTLINE PARM=IOPLPARM+16,OUTPUT=((0),DATA),MF=(E,IOPLPARM)
         BR    RLINK               RETURN TO CALLING ROUTINE
         EJECT
CONVMSG  MSG   ' SYNTAX CONVERTER FAILURE  RC=000'
MSGPARSE MSG   ' PARSE ERROR '
OPENMSG  MSG   ' OPEN UNSUCCESSFUL FOR INPUT DATASET'
MSGNERR  MSG   ' NO JCL ERRORS FOUND BY SYNTAX'
         EJECT                                              *HMD 04/82*
DAIRLINK LINK  EP=IKJDAIR,SF=L
         SPACE 2
PARSLINK LINK  EP=IKJPARS,SF=L
         SPACE 2
DEFLINK  LINK  EP=IKJEHDEF,SF=L
         SPACE 2
DFLINK   LINK  EP=IKJEFF18,SF=L
         EJECT
EXITLIST DS    0A                  PROGRAM SVC EXIT LIST
         DC    A(SYNJMGR)          JCL EXIT ENTRY POINT
         DC    A(SYNMMGR)          MSG EXIT ENTRY POINT
         DC    A(SYNSMGR)          STMT EXIT ENTRY POINT
         DC    A(SYNTXTX)          TEXT EXIT ENTRY POINT
         DC    A(0)                NOT USED
         DC    AL1(128),AL3(0)     NOT USED
         EJECT
MDAPB08  DS    0F                  DAIR PB 08 MAP
         DC    H'8',H'0',F'0',A(0)
         DC    3CL8' ',4F'0',2CL8' '
         DC    XL4'08080800',F'0'
         DC    CL8' '
         SPACE 1
LDAPB08  EQU   *-MDAPB08           LENGTH OF DAIR PB 08
         SPACE 2
MDAPB18  DS    0F                  DAIR PB 18 MAP
         DC    H'24',H'0',F'0',A(0)
         DC    2CL8' ',CL2' '
         DC    X'0800',CL8' '
         SPACE 1
LDAPB18  EQU   *-MDAPB18           LENGTH OF DAIR PB 18
         SPACE 2
MDAPB0C  DS    0F                  INIT DAIR CONCAT LIST            MES
         DC    H'12',H'0',F'0',F'0'                                 MES
         DC    5CL8' '             ALLOW FOR 5 PROCLIBS MAX         MES
LDAPB0C  EQU   *-MDAPB0C           LENGTH OF CONCAT LIST            MES
         SPACE 2
MDAPB10  DS    0F                  INIT DAIR DECONCATENATE AREA     MES
         DC    H'16',H'0',F'0'                                      MES
PRDDNAM  DC    CL8'IEFPDSI'                                 *HMD 04/82*
         SPACE 1
LDAPB10  EQU   *-MDAPB10           LENGTH OF DECONCATENATE AREA     MES
         EJECT
ALLOCLST DS    0F                  LIST OF PROCLIBS TO BE ALLOC
         DC    H'12'               LENGTH OF DSNAME         *HMD 04/82*
         DC    CL44'SYS1.PROCLIB'  DSNAME                   *HMD 04/82*
         DC    H'15'                                        *HMD 04/82*
         DC    CL44'LA.SYSM.PROCLIB'                        *HMD 04/82*
         DC    H'15'                                        *HMD 04/82*
         DC    CL44'LA.PROD.PROCLIB'                        *HMD 04/82*
         DC    H'15'                                        *HMD 04/82*
         DC    CL44'LA.UTIL.PROCLIB'                        *HMD 04/82*
         DC    X'8000'              END OF LIST INDICATOR   *HMD 04/82*
         DC    CL44' '              DUMMY DSN ENTRY         *HMD 04/82*
         SPACE 2
DUMMYJOB DC    CL80'//JOBNAMEX JOB (T,AJNF,S610C021),09999DMY,CLASS=A,MX
               SGCLASS=A'                                   *HMD 04/82*
         EJECT
         LTORG
         SPACE 1
         DS    0F
         EJECT
QSDCB    DCB   DSORG=PS,EODAD=EODAD,DDNAME=IEFRDER,MACRF=GL
LQSDCB   EQU   *-QSDCB
         EJECT
PCL      IKJPARM DSECT=PDL
PDLDSN   IKJPOSIT DSNAME,PROMPT='DATASET NAME'
PDLKPROC IKJKEYWD
         IKJNAME 'PROCLIB',SUBFLD=PDLPROC
PDLDEBUG IKJKEYWD
         IKJNAME 'DEBUG'
PDLPROC  IKJSUBF
PDLPROCN IKJPOSIT DSNAME,PROMPT='PROCLIB DATASET NAME'
         IKJENDP
         TITLE 'S Y N T A X     -   JCL MANAGER'
***********************************************************************
*                                                                     *
* TITLE -      SYNTAX   JCL MANAGER                                   *
*                                                                     *
* FUNCTION -   GET A JCL CARD FROM THE INPUT JCL DATASET AND RETURN   *
*              THE ADDRESS TO THE CONVERTER INTERFACE IN REGISTER 1.  *
*                                                                     *
***********************************************************************
         SPACE 2
SYNJMGR  DS    0H                  SYNTAX JCL ACB EXIT
         STM   R2,R14,EXITSAVE     SAVE CALLERS REGISTERS
         SPACE 2
SKIPCARD DS    0H
         TM    FLAGS,QEDSW         ARE WE USING QED INCORE DATA     JAN
         BNO   GETCARD                *  NO, DO NORMAL GET          JAN
         L     R2,ECBPTR           TELL QED WE WANT A RECORD        JAN
         POST  (R2)                   *                             JAN
         LA    R2,4(R2)            NOW WAIT FOR THAT RECORD         JAN
         WAIT  1,ECB=(R2)             *                             JAN
         L     R1,0(R2)            LOAD RECORD ADDR OR INDICATOR    JAN
         LA    R1,0(R1)               *  AND CLEAR HIGH ORDER BYTE  JAN
         XC    0(4,R2),0(R2)       CLEAR OUT THE ECB FOR NEXT TIME  JAN
         C     R1,=F'8'            TEST (8=CNACEL, 4=EOF,)          JAN
         BH    TESTCARD              *  MUST BE ADDRESS OF RECORD   JAN
         B     EODAD                 *  MUST BE EOF OR CANCEL       JAN
         EJECT                                              *HMD 04/82*
GETCARD  DS    0H                  GET A JCL CARD FROM DATASET
         TM    FLAGS,JOBSUB        WAS LAST JCL THE DUMMY JOB CD ?  MES
         BZ    DOGET               NO                               MES
         NI    FLAGS,255-JOBSUB    TURN OFF JOB SUBSTITUTE FLAG     MES
         L     R1,SAVER1           GET ADDR OF REAL JCL CARD        MES
         B     TESTCARD            BYPASS THE READ                  MES
DOGET    GET   SYNDCB              GET A JCL CARD FROM DATASET
         EJECT
TESTCARD DS    0H                  COMMENT CARD?
         CLC   =C'//*',0(R1)       COMMENT CARD?
         BE    SKIPCARD            YES, THEN SKIP CARD
         TM    FLAGS,FTIME         FIRST TIME THRU?
         BZ    SYNJEXIT            NO, THEN EXIT
         CLC   =C'//',0(R1)        JCL CARD?
         BNE   SKIPCARD            NO, THEN SKIP CARD
         NI    FLAGS,255-FTIME     TURN OFF FIRST TIME FLAG
         B     JOBCHECK            GO CHECK FOR JOB CARD            MES
         SPACE 2
SYNJEXIT DS    0H                  EXIT WITH CARD ADDRESS IN REG 1
         LM    R2,R14,EXITSAVE     RELOAD REGISTERS
         SR    R15,R15             RETURN CODE = 0
         BR    14                  RETURN TO CONVERTER INTERFACE
         SPACE 2
EODAD    DS    0H
         LM    R2,R14,EXITSAVE     RELOAD REGISTERS
         LA    R15,4               RETURN CODE = 4
         BR    14                  RETURN TO CONVERTER INTERFACE
         EJECT
JOBCHECK DS    0H                  ROUTINE TO INSURE THE FIRST JCL  MES
*                                  CARD IS A JOB CARD. IF NOT, PUT  MES
*                                  IN A DUMMY JOB CARD.             MES
         LA    R7,2(R1)            INCR PAST THE //                 MES
         LA    R8,1                BXH INCREMENT                    MES
         LA    R9,66(R1)           END OF SCAN                      MES
JOBLOOP  DS    0H                  SEARCH FOR JOB                   MES
         BXH   R7,R8,JOBSUBS       BUMP TO NEXT BYTE, GO TO JOBSUB  MES
*                                  AT END OF CARD.                  MES
         CLC   0(5,R7),=C' JOB '   JOB CARD ?                       MES
         BNE   JOBLOOP             DONT KNOW YET.                   MES
         B     SYNJEXIT            YES. GO PROCESS NORMALLY         MES
JOBSUBS  DS    0H                  SUBSTITUTE DUMMY JOB CARD.       MES
         ST    R1,SAVER1           SAVE ADDR OF REAL FIRST JCL CARD.MES
         LA    R1,DUMMYJOB         GET ADDR OF DUMMY JOB CARD       MES
         OI    FLAGS,JOBSUB        SET SUBSTITUTE SWITCH            MES
         B     SYNJEXIT            GO PROCESS                       MES
         TITLE 'S Y N T A X     -   STATEMENT IMAGE MANAGER '
***********************************************************************
*                                                                     *
* TITLE -      SYNTAX STATEMENT IMAGE MANAGER                         *
*                                                                     *
* FUNCTION -   MOVE A JCL IMAGE FROM THE CONVERTER WORK AREA INTO     *
*              SYNTAX COMMAND WORK AREA.                              *
*                                                                     *
***********************************************************************
         SPACE 2
SYNSMGR  DS    0H                  SYNTAX STATEMENT IMAGE HANDLER
         STM   R2,R14,EXITSAVE     SAVE REGISTERS IN EXIT   *HMD 09/82*
         LR    R15,R0              LOAD MSG LENGTH
         AH    R0,=H'4'            ADD 4 FOR PREFIX
         SLL   R0,16               SHIFT AND FILL WITH ZEROS
         ST    R0,STMTIMAG         BUILD PUTLINE LENGTH
         BCTR  R15,0               MINUS 1 FOR MOVE
         MVC   STMTIMAG+4(0),0(R1) MOVE STATEMENT IMAGE
         EX    R15,*-6             EXEC FOR PROPER LENGTH
         TM    FLAGS+1,DEBUGFLG    IS DEBUG OPTION PRESENT? *HMD 09/82*
         BZ    SYNSRETN            YES..PUT OUT EACH LINE   *HMD 09/82*
         LA    R0,STMTIMAG        LOAD STATEMENT ADDRESS    *HMD 09/82*
         BAL   RLINK,PUTLINE      LINK AND WRITE LINE       *HMD 09/82*
SYNSRETN DS    0H                                           *HMD 09/82*
         LM    R2,R14,EXITSAVE     RESTORE EXIT REGISTERS   *HMD 09/82*
         SR    R15,R15             RETURN CODE = 0
         BR    14                  RETURN TO CONVERTER INTERFACE
         TITLE 'S Y N T A X     -   MESSAGE MANAGER '
***********************************************************************
*                                                                     *
* TITLE -      SYNTAX   MESSAGE MANAGER                               *
*                                                                     *
* FUNCTION -   MOVE AN ERROR MESSAGE FROM THEN CONVERTER WORK AREA    *
*              INTO A SYNTAX COMMAND WORK AREA AND WRITE THE ERROR    *
*              MESSAGE TO THE TSO TERMINAL.                           *
*                                                                     *
***********************************************************************
         SPACE 2
SYNMMGR  DS    0H                  SYNTAX MSG ACB EXIT
         STM   R2,R14,EXITSAVE     SAVE CALLERS REGISTER
         LTR   R15,R0              LOAD MSG LENGTH
         BZ    SYNMEXIT            IF ZERO LENGTH, EXIT
         AH    R0,=H'4'            COMPUTE LENGTH - ASA CNTL
         SLL   R0,16               SHIFT AND FILL WITH ZEROS
         ST    R0,MSGTEXT          STORE LENGTH IN MSG PREFIX
         BCTR  R15,0               MINUS 1 EXECUTED MOVE
         MVC   MSGTEXT+4(0),0(R1)  MOVE STATEMENT IMAGE
         EX    R15,*-6            EXECUTE FOR PROPER LENGTH
*        CLC   =C'IEF653I SUBSTITUTION JCL',MSGTEXT+14 SUB JCL
*        BE    SYNMEXIT           IF SUB JCL SKIP STMT
* WE, AT GTEDS, WOULD LIKE TO SEE THE SUBSTITUTION JCL      *HMD 04/82*
         CLC   =C'STMT NO. MESSAGE',MSGTEXT+5 MESSAGE HEADER?
         BE    SYNMEXIT           IF HEADER SKIP STMT
         CLI   MSGTEXT+4,C'-'     FIRST CHARACTER DASH?
         BE    SYNMEXIT           IF HEADER SKIP STMT
         CLI   MSGTEXT+4,C' '     FIRST CHARACTER BLANK?
         BNE   SYNMPUTL           IF NOT THEN GO WRITE LINES
         SH    R15,=H'1'          MINUS 1 FOR COMPARE
         BM    SYNMPUTL           IF NEGATIVE THEN SKIP COMPARE
         CLC   MSGTEXT+5(0),MSGTEXT+4 COMPARE TO BLANKS
         EX    R15,*-6            EXECUTE COMPARE FOR PROPER LENGTH
         BE    SYNMEXIT           IF ALL BLANKS THEN SKIP LINE
         SPACE 2
SYNMPUTL DS    0H                 WRITE STMT AND MSG TO TERMINAL
         TM    FLAGS+1,DEBUGFLG   ARE WE IN DEBUG MODE?     *HMD 09/82*
         BO    NOIMAGE            YES, DO NOT DUPLICATE LINE*HMD 09/82*
         LA    R0,STMTIMAG        LOAD STATEMENT IMAGE ADDRESS
         BAL   RLINK,PUTLINE      LINK AND WRITE LINE TO TERMINAL
NOIMAGE  DS    0H                                           *HMD 09/82*
         LA    R0,MSGTEXT         LOAD MSG TEXT ADDRESS
         BAL   RLINK,PUTLINE      LINK AND WRITE LINE TO TERMINAL
         SPACE 2
SYNMEXIT DS    0H                 RETURN THRU VSAM EXIT
         LM    R2,R14,EXITSAVE    RELOAD CALLERS REGISTERS
         SR    R15,R15            RETURN CODE = 0
         BR    R14                RETURN TO CALLER
         TITLE 'S Y N T A X     -   INTERNAL TEXT PROCESSOR'
***********************************************************************
*                                                                     *
* TITLE -      SYNTAX    INTERNAL TEXT PROCESSOR                      *
*                                                                     *
* FUNCTION -   CHECK FOR CURRENT DATASET ALLOCATION.                  *
*                                                                     *
*                                                                     *
***********************************************************************
         SPACE 2
SYNTXTX  DS    0H                  SYNTAX INTERNAL TEXT EXIT
         STM   R2,R14,EXITSAVE     SAVE CALLERS REGISTERS
         LR    RTEXT,R1            LOAD TEXT STRING ADDRESS
         USING TEXT,RTEXT          ESTABLISH ADDRESSIBILITY
         TM    STRINDCS,DDSTR      DD STATEMENT?
         BZ    TEXTEXIT            NO, THEN SKIP STATEMENT
         TM    STRDINDC,DTXSYOUT+DTXSYSIN SYSIN OR SYSOUT?
         BNZ   TEXTEXIT            YES, THEN SKIP STATEMENT
         SR    R15,R15             CLEAR PARM REGISTER
         ICM   R15,8,=AL1(DSNAMEK) INSERT DSNAME KEY
         LA    R14,STRDKEY         POINT TO START OF TEXT KEYS
         BAL   R7,LOCKEY           LINK AND LOCATE DSNAME KEY
         BNZ   DDDSN               IF FOUND GO PROCESS DSNAME
         SPACE 3
TEXTEXIT DS    0H
         LM    R2,R14,EXITSAVE     RELOAD CALLERS REGISTERS
         SR    R15,R15             RETURN CODE = 0
         BR    R14                 RETURN TO CALLER
         EJECT
DDDSN    DS    0H                  PROCESS DSNAME
         TM    2(R14),X'80'        SUBPARM COUNT?
         BZ    *+8                 NO, THEN SKIP ADJUSTMENT
         LA    R14,1(R14)          SKIP SUBPARM COUNT
         MVI   ENQDSN,X'40'        SET TO CLEAR ENQ DSNAME
         MVC   ENQDSN+1(L'ENQDSN-1),ENQDSN CLEAR DSNAME
         SR    R15,R15             CLEAR LENGTH REGISTER
         ICM   R15,1,2(R14)        INSERT DSNAME LENGTH
         BZ    TEXTEXIT            IF ZERO THEN EXIT
         STH   R15,ENQLNGTH        SAVE LENGTH
         BCTR  R15,0               ADJ LENGTH FOR EXECUTE
         MVC   ENQDSN(0),3(R14)    MOVE DSNAME
         EX    R15,*-6             EXECUTE FOR PROPER LENGTH
         MVI   LINE+4,X'40'        SET LINE CLEAR CHARACTER
         MVC   LINE+5(L'LINE-5),LINE+4 CLEAR LINE TO SPACES
         MVC   LINE+4(0),3(R14)    MOVE DSNAME TO LINE
         EX    R15,*-6             EXECUTE FOR PROPER LENGTH
         SR    R15,R15             CLEAR KEY REGISTER
         ICM   R15,8,=AL1(DISPK)   INSERT DISP= KEY
         LA    R14,STRDKEY         POINT TO START TO TEXT KEYS
         BAL   R7,LOCKEY           LINK AND LOCATE DISP= KEY
         BZ    TEXTEXIT            IF NOT FOUND THEN DISP=NEW
         CLI   1(R14),0            CHECK IF PARMS PRESENT
         BE    TEXTEXIT            IF NO PARMS THEN DISP=NEW
         CLI   2(R14),0            CHECK 1ST PARM LENGTH
         BE    TEXTEXIT            IF MISSING THEN DISP=NEW
         CLC   =C'NEW',3(R14)      DISP=NEW?
         BE    TEXTEXIT            IF NEW THEN EXIT
         L     R2,CVTPTR           LOAD CVT ADDRESS
         LA    R2,CVTFQCB-CVT(R2)  POINT TO FIRST MAJOR QCB ADDRESS
         AIF   (NOT &SP3).NOQCB    IF NOT SP3 NO QCB CHECK  *HMD 09/82*
         CLC   =F'0',0(R2)         IS QCB CHAIN EMPTY?      *HMD 09/82*
         BE    SP3CODE             YES. THIS IS MVS/SP 1.3  *HMD 09/82*
.NOQCB   ANOP                                               *HMD 09/82*
         SPACE 2
GETMJQCB DS    0H                  GET A MAJOR QCB FOR DS
         ICM   R2,7,1(R2)          POINT TO A MAJOR QCB
         BZ    TEXTEXIT            IF ZERO THEN END OF QCB CHAIN
         CLC   SYNQNAME,16(R2)     MAJOR QCB FOR DATA SET?
         BNE   GETMJQCB            NO - GET ANOTHER QCB
         LA    R3,8(R2)            LOAD MINR QCB ADDRESS
         EJECT
GETMIQCB DS    0H                  GET MINOR QCB
         ICM   R3,7,1(R3)          POINT TO A MINOR QCB
         BZ    TEXTEXIT            IF ZERO THEN END OF MINOR QCB CHAIN
         SR    R6,R6               CLEAR LENGTH REGISTER
         IC    R6,16(R3)           GET LENGTH OF NAME IN MINOR QCB
         CH    R6,ENQLNGTH         COMPARE DSNAME LENGTHS
         BNE   GETMIQCB            IF NOT EQ GET ANOTHER MINOR QCB
         BCTR  R6,0                DECREMENT LENGTH BY ONE
         CLC   ENQDSN(0),20(R3)    COMPARE DSNAMES
         EX    R6,*-6              IF LENGTHS EQ COMPARE NAMES
         BNE   GETMIQCB            NOT EQUAL GET ANOTHER QCB
         L     R6,8(R3)            LOAD FIRST QEL ADDRESS
         CLC   =C'SHR',3(R14)      SHR REQUEST?
         BNE   ENQUEUED            NO, THEN MUST BE OLD REQUEST
         TM    12(R6),X'80'        ALREADY ENQUEUED SHR?
         BO    TEXTEXIT            YES, THEN GO EXIT
         SPACE 2
ENQUEUED DS    0H                  DSNAME IS CURRENTLY ENQUEUED
         MVC   LINE+49(L'SYNJMSG),SYNJMSG MOVE IN MSG
         LA    R0,LINE             LOAD LINE ADDRESS
         BAL   RLINK,PUTLINE       LINK AND WRITE LINE TO TERMINAL
         LA    R4,8(R3)            LOAD FIRST QEL ADDRESS
         SPACE 2
QCBFOUND DS    0H                  PROCESS A QUEUE ELEMENT
         ICM   R4,7,1(R4)          POINT TO A QEL
         BZ    TEXTEXIT            IF ZERO THEN END OF QEL CHAIN
         MVI   LINE+4,X'40'        SET CLEAR CHARACTER
         MVC   LINE+5(L'LINE-5),LINE+4 CLEAR LINE TO SPACES
         LH    R14,14(R4)          LOAD ASID
         SLL   R14,2               SHIFT FOR OFFSET INTO ASVT
         L     R7,CVTPTR           LOAD CVT ADDRESS
         L     R7,CVTASVT-CVT(,R7) LOAD ASVT ADDRESS
         L     R7,524(R7,R14)      LOAD ASCB ADDRESS
         ICM   R6,15,172(R7)       LOAD BATCH JOB NAME ADDRESS
         BNZ   *+8                 TEST IF VALID ADDRESS
         L     R6,176(R7)          LOAD TSO/STC ETC ADDRESS
         MVC   LINE+5(8),0(R6)     MOVE JOB NAME TO OUTPUT FIELD
         MVI   LINE+14,C'S'        SET AS SHARED
         TM    12(R4),X'80'        CHK ELE LIST FOR EX OR SHR
         BO    PRINTMSG            SHARED
         MVI   LINE+14,C'E'        SET AS EXCLUSIVE
         B     PRINTMSG            GO PRINT MESSAGE         *HMD 09/82*
         SPACE 2                                            *HMD 09/82*
         AIF   (NOT &SP3).NOXMEM   IF NOT SP3 BYPASS CODE   *HMD 09/82*
SP3CODE  DS    0H                                           *HMD 09/82*
         GETMAIN R,LV=4096         GET GQSCAN STORAGE       *HMD 09/82*
         ST    R1,GQAREA           SAVE AREA ADDRESS        *HMD 09/82*
         LH    R2,ENQLNGTH         GET ENQUEUE LENGTH       *HMD 09/82*
         LA    R3,SYNQNAME         GET QNAME ADDRESS        *HMD 09/82*
         LA    R4,ENQDSN           GET RNAME ADDRESS        *HMD 09/82*
         LR    R5,R13              SAVE ACROSS GQSCAN CALL  *HMD 09/82*
         L     R6,GQAREA           POINT TO GQSCAN AREA     *HMD 09/82*
         LA    R13,GQSAVE          POINT TO SAVE AREA       *HMD 09/82*
         SPACE 2                                            *HMD 09/82*
         GQSCAN AREA=((R6),4096),  SET GQSCAN AREA          *HMD 09/82*X
               REQLIM=MAX,         MAXIMUM REQUEST LIMIT    *HMD 09/82*X
               SCOPE=ALL,          ALL SCOPES POSSIBLE      *HMD 09/82*X
               RESNAME=((R3),(R4),(R2)),                    *HMD 09/82*X
               MF=(E,GQLIST)       USE LIST FORM OF MACRO   *HMD 09/82*
         EJECT                                              *HMD 09/82*
         LR    R13,R5              RESTORE POINTER          *HMD 09/82*
         LTR   R15,R15             CHECK RETURN CODE        *HMD 09/82*
         BNZ   TEXTFREE            GO FREE STORAGE          *HMD 09/82*
         ST    R0,GQRIBI           SAVE RIB INFO            *HMD 09/82*
SP3FOUND DS    0H                  WE'VE GOT DA QCB         *HMD 09/82*
         USING RIB,R3              ADDRESS THE R.I.B.       *HMD 09/82*
         USING RIBE,R5             ADDRESS THE R.I.B.E.     *HMD 09/82*
         L     R3,GQAREA           POINT TO FIRST RIB       *HMD 09/82*
         L     R9,RIBTRIBE         GET NUMBER OF RIBS       *HMD 09/82*
         LR    R5,R3               GET START OF RIB         *HMD 09/82*
         AH    R5,GQRIBI           ADD LENGTH OF FIXED      *HMD 09/82*
         AH    R5,RIBVLEN          ADD LENGTH OF VARIABLE   *HMD 09/82*
* R5 NOW POINTS TO RIB EXTENTION                            *HMD 09/82*
         CLC   =C'SHR',3(R14)      SHR REQUEST?             *HMD 09/82*
         BNE   SP3OLD              NO, THEN MUST BE OLD     *HMD 09/82*
         TM    RIBERFLG,RIBETYPE   IS THIS SHARED?          *HMD 09/82*
         BO    TEXTFREE            ALREADY SHARED, GO FREE  *HMD 09/82*
         SPACE 2                                            *HMD 09/82*
SP3OLD   DS    0H                                           *HMD 09/82*
         MVC   LINE+49(L'SYNJMSG),SYNJMSG  MOVE MESSAGE     *HMD 09/82*
         LA    R0,LINE             LOAD LINE ADDRESS        *HMD 09/82*
         BAL   RLINK,PUTLINE       GO DO A PUTLINE          *HMD 09/82*
SP3LOOP  DS    0H                                           *HMD 09/82*
         MVI   LINE+4,X'40'        PROCESS A QUEUE ELEMENT  *HMD 09/82*
         MVC   LINE+5(L'LINE-5),LINE+4  CLEAR LINE          *HMD 09/82*
         MVC   LINE+5(8),RIBEJBNM  MOVE IN JOBNAME          *HMD 09/82*
         MVI   LINE+14,C'S'        MOVE IN SHARED           *HMD 09/82*
         TM    RIBERFLG,RIBETYPE   SHARED?                  *HMD 09/82*
         BO    SP3PRNT             YES, PRINT MESSAGE       *HMD 09/82*
         MVI   LINE+14,C'E'        EXCLUSIVE                *HMD 09/82*
SP3PRNT  DS    0H                                           *HMD 09/82*
         LA    R0,LINE             LOAD LINE ADDRESS        *HMD 09/82*
         BAL   RLINK,PUTLINE       PUT IT OUT               *HMD 09/82*
         LA    R5,RIBEEND-RIBE(R5) POINT TO NEXT RIBE       *HMD 09/82*
         BCT   R9,SP3LOOP                                   *HMD 09/82*
TEXTFREE DS    0H                  FREE STORAGE AND RETURN  *HMD 09/82*
         L     R1,GQAREA           LOAD AREA ADDRESS        *HMD 09/82*
         LTR   R1,R1               CHECK FOR ZERO           *HMD 09/82*
         BZ    TEXTEXIT            ZERO MEANS EXIT          *HMD 09/82*
         FREEMAIN R,LV=4096,A=(1)  FREE THE STORAGE         *HMD 09/82*
         B     TEXTEXIT            RETURN TO MAIN PROGRAM   *HMD 09/82*
         DROP  R3,R5                                        *HMD 09/82*
         SPACE 2
.NOXMEM  ANOP                                               *HMD 09/82*
PRINTMSG DS    0H                  WRITE LINE TO TERMINAL
         LA    R0,LINE             LOAD LINE ADDRESS
         BAL   RLINK,PUTLINE       WRITE LINE TO TERMINAL
         B     QCBFOUND
         EJECT
LOCKEY   DS    0H                  LOCATE KEY WITHIN TEXT STRING
         SLR   R1,R1               CLEAR SCRATCH REGISTER
         SLR   R2,R2               CLEAR SCRATCH REGISTER
         SPACE 2
LOCKEY0  DS    0H                  LOAD NUMBER OF PARMS
         ICM   R1,1,1(R14)         SET R1 TO NUMBER OF PARMS
         LA    R14,2(R14)          GET ADDRESS OF FIRST PARM
         BZ    LOCKEY3             BRANCH IF NONE
         SPACE 2
LOCKEY1  DS    0H                  SET R2 TO PARM LENGTH
         ICM   R2,1,0(R14)         SET R2 TO PARM LENGTH
         BM    LOCKEY4             BRANCH IF SUBPARM COUNT
         LA    R14,0(R14,R2)       ELSE GET ADDRESS OF NEXT PARM
         SPACE 2
LOCKEY2  DS    0H                  SKIP OVER LENGTH BYTE
         LA    R14,1(R14)          SKIP OVER LENGTH BYTE
         BCT   R1,LOCKEY1          REPEAT IF MORE PARMS TO SKIP
         SPACE 2
LOCKEY3  DS    0H                  TEST FOR KEY TYPE
         CLI   0(R14),X'FE'        TEST FOR KEY TYPE
         BCR   8,R7                RETURN IF END OF TEXT STRING
         CLM   R15,8,0(R14)        TEST FOR DESIRED KEY
         BNE   LOCKEY0             IF NOT KEY, CONTINUE SEARCH
         SLR   R1,R1               SET RETURN CODE TO ZERO
         BR    R7                  RETURN TO CALLING ROUTINE
         SPACE 2
LOCKEY4  DS    0H                  *
         SL    R2,=A(X'80')        CLEAR HI-ORDER BIT OF SUBPARM CT
         ALR   R1,R2               ADD SUBPARM COUNT TO PARM COUNT
         B     LOCKEY2             RESUME PARM FIELD SCAN
         EJECT
SYNQNAME DC    CL8'SYSDSN' MAJOR NAME FOR TEST ENQ
SYNJMSG  DC    C'<-- CURRENTLY ALLOCATED'
         SPACE 2
         LTORG
         TITLE 'S Y N T A X   -    MISCELLANEOUS DSECTS'
         IEFVKEYS
         EJECT
         IEFTXTFT
         EJECT
         CVT   DSECT=YES,LIST=YES
         EJECT
         IKJPPL
         EJECT
         IKJIOPL
IOPLEND  DS    0F
         EJECT
         IKJDAPL
         EJECT
         IKJCPPL
         EJECT
         IKJECT
         EJECT
         IKJDAP08
         EJECT
         IKJDAP0C
         EJECT
         IKJDAP10
         EJECT
         IKJDAP18
         EJECT
         IKJDFPL
         EJECT
         IKJDFPB
         EJECT
         IKJEFFDF DFDSECT=YES
         AIF   (NOT &SP3).NORIB                             *HMD 09/82*
         EJECT                                              *HMD 09/82*
         ISGRIB ,                                           *HMD 09/82*
.NORIB   ANOP                                               *HMD 09/82*
         TITLE 'S Y N T A X   -    COMMAND PROCESSOR WORK AREA'
SYNTAXD  DSECT
SAVE     DS    18F            PRIMARY SAVE AREA
EXITSAVE DS    16F            EXIT SAVE AREA
         AIF   (NOT &SP3).NOGRS    AVOID GQSCAN MACRO       *HMD 09/82*
GQSAVE   DS    18F   SP 1.3   GQSCAN SAVE AREA              *HMD 09/82*
GQAREA   DS    F     SP 1.3        ADDRESS OF GQSCAN AREA   *HMD 09/82*
GQRIBI   DS    F     SP 1.3        GQSCAN RIB INFO AREA     *HMD 09/82*
GQLIST   GQSCAN MF=L SP 1.3        LIST FORM OF GQSCAN MAC  *HMD 09/82*
.NOGRS   ANOP                                               *HMD 09/82*
ATTENECB DS    F                   ATTENTION ECB
ECBPTR   DS    F                   POINTER TO QED ECB'S             JAN
APDL     DS    F                   PDL ADDRESS
ACPPL    DS    F                   CPPL ADDRESS
SAVER1   DS    F                   SAVE ADDR OF REAL 1ST JCL CARD
DFSAVE   DS    F                                            *HMD 04/82*
OPLIST   DS    A                   OPEN LIST
FLAGS    DS    H                   INTERNAL FLAGS
DLM      DS    CL2                 SYSIN DELIMITER
PDSN     DS    0H                  PARSE DSNAME
LDSN     DS    H                   LENGTH OF DSNAME
DSN      DS    CL44                DSNAME
PROCDSN  DS    0H                  PROCLIB DSNAME
PROCDSNL DS    H                   PROCLIB DSNAME LENGTH
PROCDSNM DS    CL44                PROCLIB DSNAME
ENQLNGTH DS    H                   LENGH OF ENQUEUE DSNAME
ENQDSN   DS    CL44                ENQUEUE DSNAME
IOPLPARM DS    10A                 I/O PARM LIST
DAIRPARM DS    10A                 DAIR PARM LIST
PARMLIST DS    10A                 GENERAL PARM LIST
DEFPB    DS    10A                 DEFAULT PB
DAIRPB   DS    CL84                DAIR PB AREA
MEMBER   DS    CL8                 MEMBER NAME
PASSWORD DS    CL8                 PASSWORD
DAIRCAT  DS    CL52                DAIR CONCATENATION LIST
SYNDCB   DS    (LQSDCB)C           SYNTAX DCB
         DS    0F                  ALIGN TO FULLWRD
STMTIMAG DS    CL256               STATEMENT IMAGE HOLD AREA
         DS    0F                  ALIGN TO FULLWRD
MSGTEXT  DS    CL256               MESSAGE TEXT
         DS    0F                  ALIGN
LINE     DS    CL256               *
         DS    0F                  ALIGN
         SPACE 2
CORESIZE EQU   *-SYNTAXD
         END
