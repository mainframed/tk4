VSAM$C   CSECT                         DEFINE CSECT
***********************************************************************
*
*    ROUTINE NAME ---------> VSAM$C
*
*    ENTRY POINTS ---------> -NONE-
*
*    EXTERNAL REFERENCES --> -NONE-
*
*    PARMS:  ACBADDR  - A FULLWORD IN WHICH VSAM$O STORES THE ACB ADDR
*            RPLADDR  - A FULLWORD IN WHICH VSAM$O STORES THE RPL ADDR
*            TYPE     - A 1 CHARACTER FLAG INDICATING THE TYPE OF CLOSE
*                            N = NORMAL CLOSE
*                            T = TYPE "T" CLOSE
*            FLAG     - A FULLWORD INTEGER INDICATING EXCEPTIONAL
*                       CONDITIONS:
*                       0 - ALL FUNCTIONS PERFORMED SUCCESSFULLY
*                       1 - UNKNOWN TYPE SPECIFIED
*                       2 - ERROR IN CLOSE
*                       3 - THE ACB ADDRESS PASSED IS INVALID
*                       4 - THE RPL ADDRESS PASSED IS INVALID
*                       5 - ERROR PERFORMING FREEMAIN FOR ACB
*                       6 - ERROR PERFORMING FREEMAIN FOR RPL
*            REG15    - A FULLWORD INTEGER CONTAINING THE RETURN CODE
*                       FROM THE OFFENDING MACRO CALL.
*            ERROR    - A FULLWORD INTEGER CONTAINING THE ERROR FIELD
*                       FROM CLOSE.
*
*    DATE LAST MODIFIED ---> 03/05/81
*
*    ROUTINE DESCRIPTION:
*
*         THIS ROUTINE CLOSES THE SPECIFIED ACB AND EXCEPT FOR A TYPE
*    "T" CLOSE, FREEMAINS THE ACB AND RPL.
*
***********************************************************************
*
*     REGISTER EQUATES AND USAGE
*
R0       EQU   0
R1       EQU   1
R2       EQU   2                       WORK
R3       EQU   3                       WORK
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10                      ADDR OF THE ACB
R11      EQU   11                      ADDR OF PARMLIST
R12      EQU   12                      BASE REG
R13      EQU   13                      WORKAREA BASE REG AND SAVE AREA
R14      EQU   14                      RETURN ADDR
R15      EQU   15                      RETURN CODE
*
*     HOUSEKEEPING
*
         B     12(R15)                 BRANCH AROUND CONSTANT
         DC    X'07'
         DC    CL7'VSAM$O '
         STM   R14,R12,12(R13)         SAVE REGISTERS
         LR    R12,R15                 SET REG 12 TO ENTRY ADDR
         USING VSAM$C,R12              EXTABLISH ADDRESSABILITY
         LR    R11,R1                  SAVE R1
         LR    R2,R13                  SAVE ADDR OF CALLING SAVE AREA
         GETMAIN RU,LV=WORKSIZE        GET SOME CORE
         LR    R13,R1                  SAVE ADDR OF CORE OBTAINED
         USING WORKAREA,R13            ESTABLISH ADDRESSABILITY
         ST    R2,SAVEAREA+4           STORE ADDR OF CALLING SAVE AREA
         ST    R13,8(R2)               STORE ADDR OF MY SAVE AREA
         MVC   ACBADDR(PARMLEN),0(R11) SAVE PARAMETER ADDRESSES
*
*     INITIALIZE THE RETURN CODES
*
         L     R2,FLAG                 LOAD ADDR OF FLAG    PARM
         XC    0(4,R2),0(R2)           ZERO FLAG
         L     R2,REG15                LOAD ADDR OF REG15   PARM
         XC    0(4,R2),0(R2)           ZERO REG15
         L     R2,ERROR                LOAD ADDR OF ERROR   PARM
         XC    0(4,R2),0(R2)           ZERO ERROR
*
*     LOAD AND CHECK THE ACB ADDRESS
*
         L     R10,ACBADDR             LOAD POINTER TO ACB ADDR
         L     R10,0(R10)              LOAD ACB ADDR
         N     R10,=X'7FFFFFFF'        TURN OFF HIGH ORDER BIT OF ADDR
         L     R2,16(0)                LOAD ADDR OF CVT
         C     R10,128(R2)             COMPARE ADDR TO MIN USER ADDR
         BL    BADACBAD                BRANCH IF LESS THAN MIN
         C     R10,416(R2)             COMPARE ADDR TO MAX USER ADDR
         BH    BADACBAD                BRANCH IF MORE THAN MAX
         CLI   0(R10),X'A0'            IS IT REALLY AN ACB?
         BE    OKACBAD
BADACBAD L     R2,FLAG                 LOAD ADDR OF FLAG    PARM
         MVC   0(4,R2),=F'3'           RETURN FLAG
         B     RETURN                  AND QUIT
OKACBAD  EQU   *
*
*     LOAD AND CHECK THE RPL ADDRESS
*
         L     R9,RPLADDR              LOAD POINTER TO RPL ADDR
         L     R9,0(R9)                LOAD RPL ADDR
         N     R9,=X'7FFFFFFF'         TURN OFF HIGH ORDER BIT OF ADDR
         L     R2,16(0)                LOAD ADDR OF CVT
         C     R9,128(R2)              COMPARE ADDR TO MIN USER ADDR
         BL    BADRPLAD                BRANCH IF LESS THAN MIN
         C     R9,416(R2)              COMPARE ADDR TO MAX USER ADDR
         BH    BADRPLAD                BRANCH IF MORE THAN MAX
         CLI   0(R9),X'00'             IS IT REALLY AN RPL?
         BE    OKRPLAD
BADRPLAD L     R2,FLAG                 LOAD ADDR OF FLAG    PARM
         MVC   0(4,R2),=F'4'           RETURN FLAG
         B     RETURN                  AND QUIT
OKRPLAD  EQU   *
*
*     TIME FOR CLOSE
*
         L     R2,TYPE                 LOAD ADDR OF TYPE
         CLI   0(R2),C'N'              IS IT NORMAL?
         BNE   NOTNORM
         CLOSE ((R10))
         B     TESTRET                 GO TEST THE RETURN CODE
NOTNORM  CLI   0(R2),C'T'              IS IT A TYPE T?
         BNE   UNKNOWN
         CLOSE ((R10)),TYPE=T
         B     TESTRET                 GO TEST THE RETURN CODE
UNKNOWN  L     R2,FLAG                 LOAD ADDR OF FLAG    PARM
         MVC   0(4,R2),=F'1'           RETURN FLAG
         B     RETURN                  AND QUIT
TESTRET  LTR   R15,R15                 TEST THE RETURN CODE
         BZ    OKCLOSE                 IT'S OK
         L     R2,FLAG                 LOAD ADDR OF FLAG    PARM
         MVC   0(4,R2),=F'2'           RETURN FLAG
         L     R2,REG15                LOAD ADDR OF REG15   PARM
         ST    R15,0(R2)               RETURN REG15
         LA    R2,SHOWAREA             LOAD ADDR OF SHOWAREA
         SHOWCB ACB=(R10),AREA=(R2),LENGTH=4,FIELDS=(ERROR)
         L     R2,ERROR                LOAD ADDR OF ERROR   PARM
         MVC   0(4,R2),SHOWAREA        RETURN ERROR
OKCLOSE  EQU   *
*
*     NOW FREE THE CORE FOR THE ACB AND RPL
*
         L     R2,TYPE                 LOAD ADDR OF TYPE
         CLI   0(R2),C'N'              IS IT NORMAL?
         BNE   DONEFREE
         FREEMAIN R,LV=76,A=(R10)      FREE THE CORE WE GOT FOR THE ACB
         LTR   R15,R15                 TEST RETURN CODE
         BZ    FREERPL
         L     R2,FLAG                 LOAD ADDR OF FLAG    PARM
         MVC   0(4,R2),=F'5'           RETURN FLAG
FREERPL  FREEMAIN R,LV=76,A=(R9)       FREE THE CORE WE GOT FOR THE RPL
         LTR   R15,R15                 TEST RETURN CODE
         BZ    DONEFREE
         L     R2,FLAG                 LOAD ADDR OF FLAG    PARM
         MVC   0(4,R2),=F'6'           RETURN FLAG
DONEFREE EQU   *
*
*     TERMINATE
*
RETURN   EQU   *
         SLR   R15,R15                 ZERO R15
         LR    R1,R13                  SAVE PTR TO GETMAINED SAVE AREA
         LR    R2,R15                  SAVE RETURN CODE
         L     R13,SAVEAREA+4          LOAD ADDR OF CALLING SAVE AREA
         FREEMAIN R,LV=WORKSIZE,A=(R1) FREE THE CORE WE GOT
         LR    R15,R2                  PUT RETURN CODE IN R15
         L     R14,12(R13)             RESTORE R14
         LM    R0,R12,20(R13)          RESTORE R0 THROUGH R12
         BR    R14                     RETURN
*
*     CONSTANTS
*
         LTORG
*
*     DSECTS
*
WORKAREA DSECT
SAVEAREA DS    18F
         DS    0F
PARMSTRT EQU   *
ACBADDR  DS    F                       ADDR OF THIS PARM
RPLADDR  DS    F                       ADDR OF THIS PARM
TYPE     DS    F                       ETC
FLAG     DS    F
REG15    DS    F
ERROR    DS    F
PARMLEN  EQU   *-PARMSTRT
SHOWAREA DS    F
WORKSIZE EQU   *-WORKAREA
         END   VSAM$C
