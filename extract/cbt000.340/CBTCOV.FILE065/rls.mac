LS       TITLE 'ROCKWELL LOGICAL SWAP ANALYSIS COMMAND'     *HMD 04/82*
         MACRO
&LABEL   @M1   &FIELDB,&FIELDA
         MVC   &FIELDB,=X'2020202021'   MOVE EDIT PATTERN
         L     R8,&FIELDA                    LOAD FIELD TO BE CONVERTED
         CVD   R8,DWK                        CONVERT TO DECIMAL
         ED    &FIELDB-1(6),DWK+5            AND EDIT IT INTO WTO
         OI    &FIELDB+4,X'F0'               INSURE NUMERIC
         SPACE
         MEND
         EJECT
         MACRO
&LABEL   @B    &FIELDB,&FIELDA
         MVC   &FIELDB,=X'40202020'   MOVE EDIT PATTERN
         SR    R11,R11                ZERO FIELD FOR INSERT
         IC    R11,&FIELDA            LOAD FIELD TO BE CONVERTED
         CVD   R11,DWK                CONVERT TO DECIMAL
         ED    &FIELDB,DWK+6          AND EDIT IT INTO WTO
         OI    &FIELDB+3,X'F0'        INSURE NUMERIC
         SPACE
         MEND
         EJECT
         MACRO
&LABEL   @M    &FIELDB,&FIELDA
         MVC   &FIELDB,=X'40202020'   MOVE EDIT PATTERN
         LH    R11,&FIELDA            LOAD FIELD TO BE CONVERTED
         CVD   R11,DWK                CONVERT TO DECIMAL
         ED    &FIELDB,DWK+6          AND EDIT IT INTO WTO
         OI    &FIELDB+3,X'F0'        INSURE NUMERIC
         SPACE
         MEND
         EJECT
         MACRO
&LABEL   @TPUT &LEN
         XC    TSOECB,TSOECB                                *HMD 04/82*
&LABEL   PUTLINE PARM=PTPB,OUTPUT=(&LEN,TERM,SINGLE,DATA),MF=(E,IOPL)
         TM    REPORT+X'30',X'10'  DCB OPEN ?
         BZ    $&SYSNDX           NO
         PUT   REPORT,&LEN
$&SYSNDX EQU *
         SPACE
         MEND
         EJECT
RLS      TSOENTER REGS=YES,PL=(CPPL,IO),BASE=12
START    CALL CLR3270                                       *HMD 04/82*
         EJECT
         USING CVTMAP,R1
         LA   R1,CVTPTR           -> CVT POINTER
         L    R1,0(R1)            -> CVT
         L    R2,CVTOPCTP         -> RMCT
         USING RMCT,R2
         L     R6,RMCTRCT          -> RCT
         USING RCT,R6
         L    R5,RMCTLSCT         -> LSCT
         USING LSCT,R5
         L    R3,RMCTCCT          -> CCT
         USING CCT,R3
         L    R4,RMCTRMCA         -> RMCA
         USING RMCA,R4
         SPACE
         USING PVT,R8
         L    R8,CVTPVTP         -> PVT
         @M   CPU,CCVUTILP        CPU UTILIZATION
         @M   PFR,RCVPTR          PAGE FAULT RATE
         @M   DPR,RCVDPR          DEMAND PAGING RATE
         @M   TPR,RCVPAGRT        TOTAL PAGING RATE
         @M   ASMQ,RCVASMQA      ASM Q
         @M   UIC,RCVUICA        UNREFERENCED INTERVAL COUNT
         @M   AFC,PVTAFC          AVAIL FRAME COUNT
         @M   UCTL,LSCTUCTL      UIC LOW THRESHOLD
         @M   UCTH,LSCTUCTH      UIC HIGH THRESHOLD
         @M   AFQL,LSCTAFQL      AFQ LOW THRESHOLD
         @M   AFQH,LSCTAFQH      AFQ HIGH THRESHOLD
         @M1  MTE,LSCTMTE         THINK TIME
         @M1  DELTA,LSCTETD       DELTA INTERVAL
         @M1  LSWAP,LSCTCNT       CURRENT LOG SWAP ADDR SPACES
         @M1  LTE,LSCTMTEL        THINK TIME
         @M1  HTE,LSCTMTEH        THINK TIME
DISPLAY  EQU  *        FALL THRU
         EJECT
*
         TIME
         MVC  TIME(9),=X'4020217A20207A2020'
         ST   R0,DWK              STORE TIME
         ED   TIME(9),DWK         AND EDIT IT
         TM    REPORT+X'30',X'10' DCB OPEN
         BZ    TPUTS              NO
         PUT   REPORT,SKIP
TPUTS    @TPUT TITLE
         @TPUT DASH
         SPACE
         @TPUT CPUDATAD
         SPACE
         @TPUT DASH
         @TPUT TSL
         @TPUT LSL
         @TPUT DASH
         EJECT
         XC    TSOECB,TSOECB       CLEAR ECB                *HMD 08/81*
         MVI   REPLY,C' '          CLEAR REPLY AREA         *HMD 04/82*
         GETLINE PARM=GTPB,TERMGET=(EDIT,WAIT),             *HMD 08/81*X
               MF=(E,IOPL)                                  *HMD 08/81*
         LTR   R15,R15            CHECK FOR ZERO CODE       *HMD 08/81*
         BNE   EXIT               ERROR, RETURN TO CALLER   *HMD 08/81*
         L     R1,GTPB+4          GET ADDRESS OF LINE       *HMD 08/81*
         LH    R10,0(R1)          GET LENGTH OF LINE        *HMD 08/81*
         CH    R10,=H'4'          ZERO LENGTH LINE?         *HMD 08/81*
         BE    GOFREE             YES, GO FREE BUFFER       *HMD 08/81*
         MVC   REPLY(1),4(R1)     RETURN CHAR               *HMD 08/81*
GOFREE   FREEMAIN R,LV=(10),A=(1),SP=1  FREE STORAGE        *HMD 08/81*
         TCLEARQ INPUT                                      *HMD 08/81*
         OI    REPLY,X'40'         INSURE NUMERIC
         CLI   REPLY,C'O'         OPEN REPORT ?
         BE    OPENR              YES
         CLI   REPLY,C'C'         CLOSE REPORT
         BE    CLOSER
         CLI   REPLY,C'Z'         END ?
         BE    EXIT
         CLI   REPLY,C'E'         END ?                     *HMD 04/82*
         BE    EXIT                                         *HMD 04/82*
         CLI   REPLY,C'M'         MENU
         BE    EXIT               YES
         CLI   REPLY,C'0'         UPPER 0
         BL    START
         CLI   REPLY,C'9'         UPPER 9
         BH    START
EXIT     TM    REPORT+X'30',X'10' REPORT FILE OPEN?         *HMD 04/82*
         BZ    EXIT1                                        *HMD 04/82*
         CLOSE (REPORT)           CLOSE FILE                *HMD 04/82*
EXIT1    L     R1,4(R13)          GET PREVIOUS SAVE AREA
         MVC   56(1,R1),REPLY     MOVE REPLY TO R9 SA       *HMD 04/82*
         TSOLEAVE ISN=LTORG
         EJECT
OPENR    OPEN  (REPORT,OUTPUT)
         B     START
CLOSER   CLOSE (REPORT)
         B     START
         LTORG
         EJECT
DWK      DC   D'0'
PTPB     PUTLINE MF=L                                       *HMD 04/82*
GTPB     GETLINE MF=L                                       *HMD 04/82*
         SPACE 2
SKIP     DC   AL2(SKIPE-SKIP),AL2(0)
         DC   C'1'                SKIP TO CH 1
BLANKS   DC   CL30' '
SKIPE    EQU   *
         DC   CL50' '
         SPACE 2
         DS   0F
REPLY    DC    C' '
         SPACE 2
         DS   0F
TITLE    DC   AL2(TITLEE-TITLE),AL2(0)
         DC    CL5' '
         DC   C' ROCKWELL LOGICAL SWAP DISPLAY '
TIME     DC   CL10' '
TITLEE   EQU  *
         DC    CL20' '
         DS   0F
DASH     DC    AL2(DASHE-DASH),AL2(0)
         DC    C' '
         DC    70C'-'
DASHE    EQU   *
         DS   0F
SPACE    DC   AL2(80),AL2(0)
         DC   CL80' '
         EJECT
         DS    0F
CPUDATAD DC    AL2(CPUDATDE-CPUDATAD),AL2(0)
         DC    C'  CPU='
CPU      DS    CL4
         DC    C'  PFR='
PFR      DS    CL4
         DC    C'  DPR='
DPR      DS    CL4
         DC    C'  TPR='
TPR      DS    CL4
         DC    C'  ASMQ='
ASMQ     DS    CL4
         DC    C'  UIC='
UIC      DS    CL4
         DC    C'  AFC='
AFC      DS    CL4
         DC    CL2' '
CPUDATDE EQU   *
         DC    CL20' '
         EJECT
         DS   0F
LSL      DC   AL2(LSE-LSL),AL2(0)
         DC   CL3' '
UCTL     DS    CL4
         DC    CL2' '
UCTH     DS    CL4
         DC    CL2' '
AFQL     DS    CL4
         DC    CL2' '
AFQH     DS    CL4
         DC    CL2' '
MTE      DS    CL5
         DC    CL2' '
LTE      DS    CL5
         DC    CL2' '
HTE      DS    CL5
         DC    CL2' '
DELTA    DS    CL5
         DC    CL2' '
LSWAP    DS    CL5
         DC    CL2' '
LSE      EQU  *
         EJECT
TSL      DC   AL2(LSE-LSL),AL2(0)
         DC   C'   UCTL  UCTH  AFQL  AFQH    MTE    LTE'
         DC   C'    HTE  DELTA  LSWAP  '
TSE      EQU  *
         EJECT
REPORT   DCB  DSORG=PS,MACRF=PM,DDNAME=REPORT,RECFM=VBA,LRECL=70,      *
               BLKSIZE=704
         EJECT
ICT      EQU   0                                            *HMD 08/81*
RMPT     EQU   0                                            *HMD 08/81*
RMEX     EQU   0                                            *HMD 08/81*
IRAEPPA  EQU   0                                            *HMD 08/81*
IRAEPPR  EQU   0                                            *HMD 08/81*
RMSB     EQU   0                                            *HMD 08/81*
EPDTSCN  EQU   0                                            *HMD 08/81*
EPATSCN  EQU   0                                            *HMD 08/81*
IRAWTQE  EQU   0                                            *HMD 08/81*
IRAOUCB  EQU   0                                            *HMD 08/81*
IRAOUXB  EQU   0                                            *HMD 08/81*
IRACTMQE EQU   0                                            *HMD 08/81*
IRAOTQE  EQU   0                                            *HMD 08/81*
IRAINQE  EQU   0                                            *HMD 08/81*
IRAFLTM  EQU   0                                            *HMD 08/81*
IRASRBT  EQU   0                                            *HMD 08/81*
EPAT     EQU   0                                            *HMD 08/81*
RQSV     EQU   0                                            *HMD 08/81*
ICSP     EQU   0                                            *HMD 08/81*
RSPL     EQU   0                                            *HMD 08/81*
ENFPM    EQU   0                                            *HMD 08/81*
         MNOTE *,'***************************************************'
         MNOTE *,'SOME OF THE MACROS BELOW ARE LICENSED MATERIAL.'
         MNOTE *,'THEY ARE AVAILABLE WITH THE OPTIONAL MATERIAL FOR'
         MNOTE *,'MVS SYSTEM PRODUCT AND WILL NOT BE DISTRIBUTED'
         MNOTE *,'WITH THE GTEDS MACRO LIBRARIES -- HOWARD M. DEAN'
         MNOTE *,'***************************************************'
         EJECT                                              *HMD 04/82*
         CVT  DSECT=YES,LIST=YES
         EJECT
         IRALSCT  ,
         EJECT
         IRARCT   ,      *** COPYRIGHTED *** IN SP/1 PVTMACS
         EJECT
         IRACCT   ,      *** COPYRIGHTED *** IN SP/1 PVTMACS
         EJECT
         IHAPVT          *** COPYRIGHTED *** IN SP/1 PVTMACS
         EJECT
         IRARMCA  ,      *** COPYRIGHTED *** IN SP/1 PVTMACS
         EJECT
         IRARMCT  ,      *** COPYRIGHTED *** IN SP/1 PVTMACS
         EJECT
         IRAMCT   ,      *** COPYRIGHTED *** IN SP/1 PVTMACS
         END
