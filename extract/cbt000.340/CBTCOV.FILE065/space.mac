SPACE    TITLE  'S P A C E   ---   TSO SPACE COMMAND'
***********************************************************************
*                                                                     *
*                             S P A C E                               *
*                                                                     *
*         TSO SPACE COMMAND TO SHOW AVAILABLE SPACE ON DISK           *
*                                                                     *
*     THIS COMMAND, INVOKED FROM TSO, WILL TELL THE USER HOW MUCH     *
*     SPACE IS AVAILABLE ON A GIVEN DISK PACK. A LIST OF COMMANDS     *
*     FOLLOWS.                                                        *
*                                                                     *
*     ALL       LIST DATA ON ALL ONLINE DISKS                         *
*     DEVICES   LIST DATA FOR ALL KNOWN I/O UNITS                     *
*     END       END THE PROGRAM                                       *
*     FXXXXXX   LIST DATA ON PACK WITH VOLUME SERIAL NUMBER 'XXXXXX'  *
*     GNAME     LIST DATA FOR ALL DEVICES WITHIN GENERIC UNIT 'NAME'  *
*     LIST      LIST CURRENTLY KNOWN GENERIC UNITS                    *
*     OFFLINE   LIST DATA FOR ONLINE AND OFFLINE DISKS                *
*     UXXX      LIST DATA FOR DEVICE AT UNIT ADDRESS 'XXX'            *
*     ?         GIVE THIS HELP ON COMMANDS                            *
*                                                                     *
*     ONLY THE FIRST LETTER OF A COMMAND NEED BE TYPED FOR THE        *
*     COMMAND TO BE RECOGNIZED.                                       *
*                                                                     *
*     MODIFIED BY S.C.LANGLEY 03/20/79                                *
*     MODIFIED BY S.C.LANGLEY 08/28/79                                *
*     MODIFIED BY J.H.KRAFT   10/17/80                                *
*                                                                     *
*                                                                     *
***********************************************************************
SPACE    CSECT
         SPACE 1
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE 1
FLAGALL  EQU   X'80'
FLAGFND  EQU   X'40'
FLAGERR  EQU   X'01'
         EJECT
         STM   14,12,12(13)
         BALR  R12,0                    GET BASE
         USING *,R12                    TELL ASM
         LA    R11,SAVE                 LOAD SAVE AREA
         ST    R11,8(,R13)              CHAIN THEM
         ST    R13,4(,R11)              FINISH FOR OS
         LR    R13,R11
         SPACE 2
***********************************************************************
*                                                                     *
*          SETUP AND INITIALIZE PARAMETER LIST FOR IKJSCAN            *
*                                                                     *
***********************************************************************
         L     R3,16              R3 = ADDR OF CVT
         L     R3,0(R3)           R3 = ADDR OF ADDR OF TCB
         L     R3,4(R3)           R3 = ADDR OF TCB
         ICM   R3,7,181(R3)       R3 = ADDR OF JSCB
         L     R4,264(R3)         R4 = ADDR OF PSCB
         L     R3,52(R4)          R3 = ADDR OF UPT
         LA    R2,CSPLSAVE        R2 = ADDR OF CMD SCAN PARM LIST
         USING CSPL,R2
         ST    R3,CSPLUPT         SAVE UPT ADDR
         L     R3,48(R4)          R3 = ADDR OF RELOGON BUFFER
         L     R3,256(R3)         R3 = ADDR OF ECT
         ST    R3,CSPLECT         SAVE ECT ADDR
         LA    R3,CPECB           R3 = ADDR OF FAKE ECB FOR THIS CP
         ST    R3,CSPLECB         SAVE ECB ADDR
         LA    R3,FLAGWORD        R3 = ADDR OF CSPL FLAG WORD
         ST    R3,CSPLFLG         SAVE FLAG ADDR
         LA    R3,CSOABLOK        R3 = ADDR OF CMD SCAN OUTPUT AREA
         ST    R3,CSPLOA          SAVE OUTPUT AREA ADDR
         LA    R3,CBUF            R3 = ADDR OF 'CMD BUFFER'
         ST    R3,CSPLCBUF        SAVE CBUF ADDR
         DROP  R2
         LOAD  EP=IKJSCAN
         ST    R0,ADDRSCAN
         EJECT
         MVI   FLAGS,FLAGERR
         USING UCB,R3
         XC    LEN(2),LEN         CLEAR LENGTH
         XC    VOLNAME(6),VOLNAME CLEAR VOLSER
         TPUT  BANNER,80,EDIT                                      JHK
***********************************************************************
*                                                                     *
*     COUNT THE UCBS IN THE UCB LOOKUP TABLE. KNOWING THE NUMBER      *
*     OF UCBS WE CAN CALCULATE THE LENGTH OF THE MASK IN THE DEVICE   *
*     MASK TABLE. THIS WILL BE USED LATER IF THE USER ISSUES THE      *
*     'G' (GENERIC) COMMAND.                                          *
*                                                                     *
***********************************************************************
         L     R1,16              R1 = ADDR OF CVT
         L     R8,40(R1)          R8 = ADDR OF UCB TABLE LIST
         LR    R1,R8              R1 = ADDR OF UCB TABLE LIST
         XR    R2,R2              CLEAR R2
UCBSCAN  ICM   R2,3,0(R1)         R2 = ADDR OF NEXT UCB IN LIST
         LA    R1,2(,R1)          NO, POINT TO NEXT UCB HALFWORD PTR
         C     R2,=XL4'0000FFFF'  END OF UCB LIST?
         BNE   UCBSCAN            CHECK NEXT ENTRY
         SR    R1,R8              R1 = (# UCBS + 1 ) * 2
         SRL   R1,1               R1 =  # UCBS + 1
         BCTR  R1,0               R1 =  # UCBS = # BITS IN MASK
         LA    R2,31              R2 = 31  (X'1F')
         AR    R1,R2              R1 = #UCBS + 31 (ROUNDUP TO FULLWORD)
         OR    R1,R2              TURN ON ALL 5 LOW ORDER BITS AND THEN
*                                 CLEAR 'REMAINDER' WITH EXCLUSIVE OR
         XR    R1,R2              R1 = # BITS IN MASK (ROUNDED UP TO
*                                      THE NEXT FULLWORD)
         SRL   R1,3               R1 = R1 / 8 = NUMBER OF BYTES IN MASK
         ST    R1,BYTCOUNT        SAVE COUNT
         SPACE 2
***********************************************************************
*                                                                     *
*     GET THE DEVICE NAME TABLE AND DEVICE MASK TABLE ADDRESSES       *
*                                                                     *
***********************************************************************
         LOAD  EP=DEVNAMET
         ST    R0,DEVNAME
         LOAD  EP=DEVMASKT
         ST    R0,DEVMASK
         B     DOINPUT
         EJECT
BEGIN    L     R8,CVTPTR          R8 = ADDR OF CVT
         MVI   FLAGS+1,X'00'      SET NONE
         L     R8,CVTILK2-CVT(,R8) R8 = ADDR OF UCB LOOKUP TABLE
         XR    R6,R6              R6 = 0
         MVC   NEWADDR(2),=H'0'   INIT
         MVC   OLDADDR(2),=H'0'   INIT
         CLI   REPLY,C' '
         BE    CKPARM
CHECKD   CLI   REPLY,C'D'         DEVICES
         BNE   CHECKF
ALL      MVI   FLAGS,FLAGALL
         TPUT  TITLE,80,EDIT PRINT TITLE LINE
         B     LOOP
CHECKF   CLI   REPLY,C'F'         FIND
         BE    FIND
CHECKU   CLI   REPLY,C'U'         UNIT
         BE    FIND
CHECKG   CLI   REPLY,C'G'         GENERIC
         BE    FIND
CHECKL   CLI   REPLY,C'L'         LIST
         BE    LIST
CHECKA   CLI   REPLY,C'A'         ALL
         BE    ALL
CHECKO   CLI   REPLY,C'O'         OFFLINE
         BE    ALL
CHECKE   CLI   REPLY,C'E'         END
         BE    END
CHECKH   CLI   REPLY,C'?'         HELP?
         BNE   SETERR             NO
         TPUT  HELPMSG1,L'HELPMSG1,EDIT    PUT OUT MSG
         TPUT  HELPMSG2,L'HELPMSG2,EDIT    PUT OUT MSG
         TPUT  HELPMSG3,L'HELPMSG3,EDIT    PUT OUT MSG
         TPUT  HELPMSG4,L'HELPMSG4,EDIT    PUT OUT MSG
         TPUT  HELPMSG5,L'HELPMSG5,EDIT    PUT OUT MSG
         TPUT  HELPMSG6,L'HELPMSG6,EDIT    PUT OUT MSG
         TPUT  HELPMSG7,L'HELPMSG7,EDIT    PUT OUT MSG
         TPUT  HELPMSG8,L'HELPMSG8,EDIT    PUT OUT MSG
         TPUT  HELPMSG9,L'HELPMSG9,EDIT    PUT OUT MSG
         B     DOINPUT                  TRY AGAIN
SETERR   MVI   FLAGS,FLAGERR
CKPARM   CLI   FLAGS,FLAGERR
         BE    ERROR
         EJECT
***********************************************************************
*                                                                     *
*      LOOP THROUGH UCB'S AND SEARCH FOR VOLUME SERIAL NUMBERS        *
*                                                                     *
***********************************************************************
LOOP     XR    R3,R3                    CLEAR  REGISTER            JHK
         ICM   R3,3,0(R8)               R3 = UCB ADDRESS           JHK
         LA    R8,2(,R8)                R8 POINTS TO NEXT UCB
         LTR   R3,R3                    IS UCB ADDRESS = 0?
         BZ    LOOP                     YES, ITS A DUMMY UCB
         C     R3,=XL4'0000FFFF'        END OF TABLE               JHK
         BE    DONE                     LAST UCB - WE ARE DONE     JHK
*                                       CHECK FOR ALT PATH
         B     ALTDONE
NEWADDR  DC    H'0'
OLDADDR  DC    H'0'   '
*
***********************************************************************
*     CHECK  FOR ALTERNATE PATHS                                      *
*     THE LAST(OLD) ADDRESS MUST NOT BE HIGHER THAT THE NEW ADDRESS   *
*         POSITION UCB +13 , A EBCDIC 3 CHARACTER IS CONVERTED TO     *
*                            A 2 PLACE BINARY NUMBER                  *
*                            3 8 A                                    *
*         IE:  C '38A' OR X'F3F8C1' IS CONVERTED TO  X'38A0'          *
*              THEN THE COMPARE CAN BE MADE                           *
*                                                                     *
*                                                                     *
*           THE CONVERSION IS TO PACK AND NUMBERS STAY NUMBERS        *
*                                  1=1,2=2,3=3,4=4,ETC.               *
*                                BUT ALPHAS BECOME NUMBERS ALSO       *
*                                  A=1,B=2,C=3,D=4,E=5,F=6            *
*                                A '9' IS THEN ADDED TO THE NUMBER    *
*                                  THAT WAS ALPHA                     *
*                                  9+1=A,9+2=B                        *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
***********************************************************************
*
ALTDONE  DS    0H
         PACK  NEWADDR(2),13(3,R3)
*
         TM    13(R3),X'F0'       CONVERT C??  A-F ,WAS UCB+13 ALPHA
         BO    TST2ND                               IF SO THEN ADD 9
         IC    0,NEWADDR
         AH    0,=X'0090'
         STC   0,NEWADDR
*
TST2ND   TM    14(R3),X'F0'             CONVERT ?U? A-F
         BO    TST3RD
         IC    0,NEWADDR
         AH    0,=X'0009'
         STC   0,NEWADDR
*                                       CONVERT ??U A-F
TST3RD   TM    15(R3),X'F0'
         BO    NILAST
         IC    0,NEWADDR+1
         AH    0,=X'0090'
         STC   0,NEWADDR+1
*
NILAST   NI    NEWADDR+1,X'F0'         TURN OFF THE '0' MASK
*                                      1111 STAY AS IS 0000 BECOME ZERO
         CLC   OLDADDR(2),NEWADDR
         BH    LOOP                    IF OLD IS HIGHER THEN IT IS AN
*                                      ALT PATH , AND NEW IS LOW OR =
         MVC   OLDADDR(2),NEWADDR      SAVE OLD ADDRESS
*
         CLI   REPLY,C'O'               OFFLINE ALSO?
         BE    CHECKDA                  YES - DONT REMOVE OFFLINE DEVS
         CLI   REPLY,C'D'               ALL DEVICES?
         BE    TESTPATH                 YES - DONT REMOVE DASD DEVS
         CLI   REPLY,C'U'               UNIT ADDR?
         BE    TESTPATH                 YES - DO ANY UNIT
         TM    UCBSTAT,UCBONLI          IS THE DEVICE ONLINE?
         BNO   LOOP                     NO, SO IGNORE IT
CHECKDA  CLI   UCBTBYT3,UCB3DACC        DIRECT ACCESS?
         BE    TESTPATH                 YES
         CLI   UCBTBYT3,UCB3TAPE        MAGTAPE?
         BNE   LOOP                     NO, DONT BOTHER TO CHECK VOLSER
TESTPATH TM    UCBCHM,X'80'             IS CPU0 PRIMARY PATH AVAILABLE?
         B     PRIMARY                  TEMP FIX FOR PATH PROBLEM
         BNO   PRIMARY                  YES; USE THIS UCB
         TM    UCBCHM,X'20'             IS CPU1 PRIMARY PATH AVAILABLE?
         BO    LOOP                     NO;  IGNORE SECONDARY PATH
PRIMARY  CLI   FLAGS,FLAGALL            ALL VOLUMES?
         BE    PROCESS                  YES
         CLI   REPLY,C'U'               UNIT ADDR?
         BNE   CKVOL                    NO; ASSUME VOLSER
         CLC   VOLNAME(3),UCBNAME       DOES UNIT ADDR MATCH?
         BNE   LOOP                     NO; GO CHECK NEXT ONE
         LA    R10,DONE                 R10 = RETURN ADDR (DON'T LOOP)
         B     DOVOL
CKVOL    IC    R15,LEN+1                GET LENGTH
         EX    R15,VOLCLC
         BNE   LOOP
PROCESS  LA    R10,LOOP
         B     DOVOL
         SPACE 3
DONE     CLI   FLAGS+1,X'FF'            ANYTHING FOUND
         BE    DOINPUT                  YES
         CLI   REPLY,C'U'         WERE WE LOOKING FOR A UNIT ADDR?
         BNE   VNF                NO; VOLUME NOT FOUND
         TPUT  ERRMSG6,L'ERRMSG6,EDIT
         B     DOINPUT
VNF      TPUT  ERRMSG4,L'ERRMSG4,EDIT
         B     DOINPUT
VOLCLC   CLC   VOLNAME(0),UCBVOLI       <<EXECUTED>>
FIND     TPUT  TITLE,80,EDIT       PRINT TITLE
         LA    R4,REPLY+1         R4 POINTS TO INPUT FIELD
         LR    R5,R4              SAVE START
FINDL1   CLI   0(R5),C' '         IS CHAR A BLANK?
         BE    FINDL2             YES - FOUND LAST CHAR
         LA    R5,1(,R5)          POINT TO NEXT CHAR
         B     FINDL1             LOOP BACK
FINDL2   SR    R5,R4              R5 = LENGTH OF INPUT
         BNP   SETERR             ERROR IF FIELD = 0
         BCTR  R5,0               R5 = LENGTH - 1
         CH    R5,=H'5'           LENGTH > 6?
         BH    SETERR             YES, ERROR
         STH   R5,LEN             STORE LENGTH
         MVC   VOLNAME(6),REPLY+1 SAVE VOLNAME OR GENERIC
         MVI   FLAGS,FLAGFND
         CLI   REPLY,C'G'         GENERIC COMMAND?
         BE    GENERIC            YES; LOOK AT DEVICE MASK TABLES
         B     LOOP               NO;  GO LOOP THRU UCBS
         EJECT
LIST     L     R10,DEVNAME              R10 = ADDR OF DEV NAME TABLE
         LA    R9,4(R10)                R9 = ADDR OF FIRST UNIT NAME
         L     R8,0(R10)                R8 = NUMBER OF ENTRIES
         MVC   LINE(80),BLANKS          BLANK OUT LINE
GENLOOP  MVC   LINE(6),0(R9)            MOVE IN GENERIC UNIT NAME
         TPUT  LINE,6,EDIT         WRITE IT OUT
         LA    R9,12(R9)                POINT TO NEXT UNIT
         BCT   R8,GENLOOP               LOOP UNTIL END OF LIST
         EJECT
***********************************************************************
*                                                                     *
*                       READ COMMAND FROM USER                        *
*                                                                     *
***********************************************************************
DOINPUT  TPUT  PROMPT,L'PROMPT,EDIT
READCHAR MVC   REPLY(79),BLANKS   BLANK OUT REPLY FIELD
         TGET  REPLY,79           GET 79 CHARACTERS FROM TERMINAL
         CLI   REPLY,X'6E'        RESHOW CODE?
         BE    READCHAR           YES; IGNORE IT
         OC    REPLY(79),BLANKS   CONVERT CHARS TO UPPER CASE
         XC    CBUF+2(2),CBUF+2   CLEAR OFFSET
         MVC   CSPLBLOK(24),CSPLSAVE  COPY IN CSPL BLOK
         XC    CSOABLOK(8),CSOABLOK
         LA    R1,CSPLBLOK        R1 = ADDR OF CMD SCAN PARM LIST
         L     R15,ADDRSCAN       R15 = ADDR OF IKJSCAN
         BALR  R14,R15            INVOKE IKJSCAN
         LA    R1,CSOABLOK        R1 = ADDR OF CMD SCAN OUTPUT AREA
         USING CSOA,R1
         TM    CSOAFLG,CSOANOC    IS THE BUFFER EMPTY?
         BO    DOINPUT            YES; JUST GO REFRESH
         DROP  R1
         B     BEGIN
ERROR    TPUT  ERRMSG5,L'ERRMSG5,EDIT
         B     DOINPUT
END      L     R13,4(,R13)
         LM    14,12,12(R13)
         XR    R15,R15
         BR    14
         EJECT
***********************************************************************
*                                                                     *
*                        PROCESS A UCB ENTRY                          *
*                                                                     *
***********************************************************************
DOVOL    MVI   FLAGS+1,X'FF'            HAVE A VOLUME
         LA    R15,4                    FAKE A BAD RETURN CODE
         MVC   VOLUME(6),BLANKS         BLANK OUT VOLUME
         MVC   SVC78(30),BLANKS         BLANK OUT SVC78 MESSAGE FIELD
         MVC   LINE(80),BLANKS          BLANK OUT LINE
         CLI   UCBTBYT3,UCB3TAPE        MAG TAPE?
         BE    MTAPE                    YES
         CLI   UCBTBYT3,UCB3DACC        DIRECT ACCESS DEVICE?
         BNE   NONDA                    NOPE
         TM    UCBSTAT,UCBONLI          IS DEVICE ONLINE?
         BNO   NONDA                    NO
         TM    UCBFLA,UCBNOTRD          IS THE DEVICE READY?
         BNO   LSPACE                   YES, ISSUE THE LSPACE
         MVC   CYLS(20),=C'* DEVICE NOT READY *'
         B     MTAPE                    NO - DON'T ISSUE SVC78
LSPACE   LR    R0,R3                    UCB ADDRESS
         LA    R1,SVC78                 LOAD PLACE
         SVC   78                       ISSUE LSPACE
MTAPE    MVC   VOLUME(6),UCBVOLI        MOVE IN VOLUME
NONDA    MVC   ADDR(3),UCBNAME          NAME
         LA    R9,DTABADDR              R9 = DEVICE CLASS TABLE ADDRESS
         LA    R5,1                     R5 = X'01'
TSTCLASS TM    UCBTBYT3,0               TEST DEVICE CLASS BIT
         EX    R5,TSTCLASS              IS BIT ON?
         BO    STRTLOOP                 YES
         SLL   R5,1                     SLIDE MASK OVER 1 BIT
         CH    R5,=H'255'               HAVE WE SLID MASK TOO FAR?
         BH    STRTLOOP                 YES - SHOW UNKNOWN DEVICE
         LA    R9,4(R9)                 BUMP POINTER TO DEVICE TABLES
         B     TSTCLASS                 TEST NEXT BIT
STRTLOOP L     R9,0(R9)                 R9 = ADDR OF CORRECT DEVICE TAB
TABLOOP  CLI   0(R9),X'00'              END OF TABLE?
         BE    TABMATCH                 YES
         CLC   UCBTBYT4,0(R9)           COMPARE UCB TYPE BYTE TO TABLE
         BE    TABMATCH                 MATCH FOUND!
         LA    R9,8(R9)                 POINT TO NEXT TABLE ENTRY
         B     TABLOOP                  LOOP BACK
TABMATCH MVC   DEVTYPE(7),1(R9)         MOVE IN DEVICE TYPE NAME
         CLC   UCBTBYT3(2),=X'4100'     A CTC
         BNE   NOCTC
         MVC   DEVTYPE(7),=C'C T C  '
NOCTC    CLI   UCBTBYT3,UCB3DACC        IS THIS A DIRECT ACCESS DEV?
         BNE   TPUTX                    NO - SKIP THE USERCOUNT STUFF
         LTR   R15,R15                  TEST RETURN CODE
         BZ    MOVESTAT                 OK
         MVC   CYLS(30),SVC78           MOVE IN MESSAGE
         B     TPUTX                    PUT IT OUT
MOVESTAT XR    R1,R1                    CLEAR REG
         IC    R1,UCBUSER               GET NUMBER OF USERS
DOUSECNT CVD   R1,DOUBLE                CONVERT IT
         UNPK  USECNT(3),DOUBLE+6(2)
         OI    USECNT+2,C'0'
         MVC   CYLS(9),FREECYL
         MVC   EXTENTS(4),EXTENT
         MVC   MAX(9),CNTGCYL
TPUTX    TM    UCBSTAT,UCBONLI    IS DEVICE ONLINE?
         BO    TPUTX1
         MVC   VOLUME(7),=CL7'OFFLINE'
TPUTX1   TPUT  LINE,80,EDIT
         BR    R10                      RETURN TO CALLER
         EJECT
***********************************************************************
*                                                                     *
*                            'G' COMMAND                              *
*                                                                     *
*     FIRST SEARCH THE DEVICE NAME TABLE FOR A MATCHING GENERIC       *
*     UNIT NAME. IF AN ENTRY IS FOUND WE CAN PICK UP THE UCBTYP OF    *
*     THE DEVICES. THEN WE SEARCH THE DEVICE MASK TABLE FOR A         *
*     MATCHING UCBTYPE.                                               *
*                                                                     *
***********************************************************************
GENERIC  L     R11,DEVMASK        R11 = ADDR OF DEV MASK TABLE
         L     R10,DEVNAME        R10 = ADDR OF DEV NAME TABLE
         L     R0,0(,R10)         R0 = ADDR OF UNIT NAME TABLE
         LA    R15,4(,R10)        R15 = ADDR OF FIRST UNIT NAME
NAMESCAN CLC   UNITNAME(6),0(R15) DOES IT MATCH INPUT?
         BE    HAVENAME           YES, BRANCH
         LA    R15,12(,R15)       NO, POINT TO NEXT UNIT
         BCT   R0,NAMESCAN        LOOP BACK
         TPUT  ERRMSG1,L'ERRMSG1,EDIT
         B     DOINPUT
HAVENAME L     R9,BYTCOUNT        R9 = LENGTH OF DEVICE MASK IN BYTES
         LH    R0,0(,R11)         R0 = NUMBER OF MASK ENTRIES
         LA    R1,4(,R11)         R1 = ADDR OF DEVTYPE IN FIRST ENTRY
FINDMASK CLC   8(4,R15),4(R1)     IS THIS THE DEVICE TYPE WE WANT?
         BE    HAVEMASK           YES; WE HAVE THE MASK WE NEED
         LA    R1,8(R1,R9)        R1 = ADDR OF NEXT MASK ENTRY
         BCT   R0,FINDMASK        LOOP IF THERE ARE MORE ENTRIES
         TPUT  ERRMSG2,L'ERRMSG2,EDIT
         B     DOINPUT
         SPACE 2
***********************************************************************
*                                                                     *
*     WE HAVE FOUND THE CORRECT ENTRY IN THE DEVICE MASK TABLE.       *
*     DEVMASKT ENTRIES ARE LAID OUT AS FOLLOWS:                       *
*                                                                     *
*        4 BYTES - NUMBER OF BITS TURNED ON IN THIS MASK ENTRY        *
*        4 BYTES - UCB DEVICE TYPE OF THIS DEVICE GROUP               *
*        N BYTES - WHERE 'N' IS NUMBER OF BYTES (ROUNDED UP TO A      *
*                  FULLWORD) NEEDED FOR THE MASK (THERE IS ONE BIT    *
*                  NEEDED FOR EACH UCB). FOR EXAMPLE, IF THE FOURTH   *
*                  BIT IN THE MASK IS ON, THE UCB POINTED TO BY THE   *
*                  FOURTH ENTRY IN THE UCB LOOKUP TABLE BELONGS TO    *
*                  THIS GROUP                                         *
*                                                                     *
***********************************************************************
HAVEMASK LA    R2,7(R1,R9)        R2 = ADDR OF LAST BYTE IN MASK ENTRY
         L     R3,0(,R1)          R3 = NUMBER OF BITS ON IN THIS ENTRY
         LA    R4,8(,R1)          R4 = ADDR OF FIRST BYTE OF MASK
         XR    R7,R7              R7 = 0
NEXTBYTE LA    R5,8               R5 = 8
         LA    R6,X'80'           R6 = X'80'
NEXTBIT  EX    R6,TESTBIT         IS THE SAME BIT ON IN BYTE AT R4 THAT
*                                 IS ON IN R6?
         BNO   NOTTHIS            NO; CHECK NECK BIT IN MASK
         LA    R15,0(R7,R8)       YES; R15 = ADDR IN UCB LOOKUP TABLE
         STM   R0,R15,TEMPSAVE    SAVE REGS TEMPORARILY
         XR    R3,R3              R3 = 0
         ICM   R3,3,0(R15)        R3 = UCB ADDRESS
         BAL   R10,DOVOL          WRITE OUT ENTRY FOR THIS UCB ADDR
         LM    R0,R15,TEMPSAVE    RESTORE REGS
         BCT   R3,NOTTHIS         IF MORE 'ON' BITS TO BE FOUND THEN
         B     DONE               KEEP CHECKING; OTHERWISE WE ARE DONE
TESTBIT  TM    0(R4),0            TEST BIT IN MASK (R6)
         SPACE 2
NOTTHIS  LA    R7,2(,R7)          R7 = INDEX INTO UCB LOOKUP TABLE
         SRL   R6,1               SHIFT BITMASK ONE BIT TO RIGHT
         BCT   R5,NEXTBIT         TEST NEXT BIT IF MASK NOT 0
         LA    R4,1(,R4)          R4 = ADDR OF NEXT MASK BYTE
         CR    R4,R2              HAVE WE HIT END-OF-MASK WITHOUT
*                                 FINDING AS MANY BITS ON AS EXPECTED?
         BH    TOOMANY            YES; MASK BIT COUNT ERROR
         B     NEXTBYTE           NO;  GO PROCESS THE NEXT BYTE
TOOMANY  TPUT  ERRMSG3,L'ERRMSG3,EDIT
         B     DOINPUT
         EJECT
SAVE     DC    18F'0'
         SPACE 5
ERRMSG1  DC    C'< WARNING > GENERIC NAME NOT FOUND IN DEVICE NAME TABL'
               E'
ERRMSG2  DC    C'< WARNING > MATCHING DEVICE TYPE NOT FOUND IN DEVICE M'
               ASK TABLE'
ERRMSG3  DC    C'** ERROR ** UNEXPECTED BITS FOUND ON IN DEVICE MASK TA'
               BLE'
ERRMSG4  DC    C'< WARNING > REQUESTED VOLUME(S) NOT MOUNTED'
ERRMSG5  DC    C'< WARNING > INVALID COMMAND - TYPE ? FOR HELP'
ERRMSG6  DC    C'< WARNING > UNIT ADDRESS NOT DEFINED'
         SPACE 5
HELPMSG1 DC    C'A(LL)     LIST DATA ON ALL ONLINE DISKS'
HELPMSG2 DC    C'D(EVICES) LIST DATA ON ALL DEVICES'
HELPMSG3 DC    C'E(END)    END PROGRAM'
HELPMSG4 DC    C'FXXXXXX   LIST DATA ON DEVICE WITH VOLSER ''XXXXXX'''
HELPMSG5 DC    C'GNAME     LIST DATA ON GENERIC UNIT ''NAME'''
HELPMSG6 DC    C'L(IST)    LIST THE GENERIC UNIT NAMES (AUTHORIZED USER*
               S ONLY)'
HELPMSG7 DC    C'O(FFLINE) LIST DATA ON ALL DISKS, ONLINE OR OFFLINE'
HELPMSG8 DC    C'UXXX      LIST DATA ON DEVICE WITH UNIT ADDR ''XXX'''
HELPMSG9 DC    C'?         PRINT THIS LIST'
         EJECT
DTABADDR DC    A(UNKNOWN)          RESERVED
         DC    A(UNKNOWN2)         RESERVED
         DC    A(CHARRDR)          CHARACTER READER
         DC    A(UNITREC)          UNIT RECORD
         DC    A(DISPLAY)          GRAPHICS DISPLAY
         DC    A(DASD)             DIRECT ACCESS
         DC    A(COMM)             COMMUNICATIONS
         DC    A(MAGTAPE)          MAG TAPE
         DC    A(UNKNOWN3)         UNKNOWN DEVICE
         SPACE 5
DASD     DC    X'06',CL7'2305-1'
         DC    X'07',CL7'2305-2'
         DC    X'08',CL7'2314'
         DC    X'09',CL7'3330'
         DC    X'0A',CL7'3340'
         DC    X'0B',CL7'3350'
         DC    X'0D',CL7'3330-1'
         DC    X'0E',CL7'3380  '
         DC    X'0F',CL7'3375  '
         DC    X'00',CL7'?DASD?'
         SPACE 3
MAGTAPE  DC    X'01',CL7'2400'
         DC    X'03',CL7'3400'
         DC    X'00',CL7'?TAPE?'
         SPACE 3
UNITREC  DC    X'01',CL7'2540'
         DC    X'02',CL7'2540'
         DC    X'03',CL7'1442'
         DC    X'04',CL7'2501'
         DC    X'05',CL7'2520'
         DC    X'06',CL7'3505'
         DC    X'08',CL7'1403'
         DC    X'09',CL7'3211'
         DC    X'0A',CL7'1443'
         DC    X'0C',CL7'3525'
         DC    X'0D',CL7'3211'
         DC    X'0E',CL7'3800'
         DC    X'10',CL7'2671'
         DC    X'16',CL7'3890'
         DC    X'18',CL7'2495'
         DC    X'1B',CL7'1287'
         DC    X'1C',CL7'1288'
         DC    X'1D',CL7'1419'
         DC    X'1E',CL7'1419'
         DC    X'1F',CL7'1275'
         DC    X'20',CL7'1052'
         DC    X'22',CL7'3210'
         DC    X'23',CL7'3215'
         DC    X'30',CL7'3213'
         DC    X'3D',CL7'7443'
         DC    X'00',CL7'?PRINT?'
         SPACE 3
COMM     DC    X'01',CL7'2702'
         DC    X'02',CL7'2701'
         DC    X'03',CL7'2703'
         DC    X'04',CL7'2955'
         DC    X'05',CL7'3705'
         DC    X'07',CL7'AAA7'
         DC    X'0A',CL7'AAAA'
         DC    X'0B',CL7'AAAB'
         DC    X'0F',CL7'AAAF'
         DC    X'12',CL7'2741-P'
         DC    X'13',CL7'2740'
         DC    X'14',CL7'2955'
         DC    X'15',CL7'3705'
         DC    X'51',CL7'2702'
         DC    X'82',CL7'2260'
         DC    X'92',CL7'2701'
         DC    X'93',CL7'BSC1'
         DC    X'F1',CL7'3791'
         DC    X'00',CL7'?COMM?'
         SPACE 3
DISPLAY  DC    X'02',CL7'2250'
         DC    X'03',CL7'2260'
         DC    X'04',CL7'1053'
         DC    X'08',CL7'3066'
         DC    X'09',CL7'3277-2'
         DC    X'0A',CL7'3284'
         DC    X'0B',CL7'3286-2'
         DC    X'0C',CL7'3158'
         DC    X'0D',CL7'3036'
         DC    X'00',CL7'?CRT?'
         SPACE 3
CHARRDR  DC    X'00',CL7'?CHAR?'
         SPACE 3
UNKNOWN  DC    X'00',CL7'UNKNOWN'
UNKNOWN2 DC    X'00',CL7'UNDEF  '
UNKNOWN3 DC    X'00',CL7'NOTDEFN'
         EJECT
TEMPSAVE DS    16F
DOUBLE   DC    D'0'
LEN      DC    H'0'
VOLNAME  DC    6C' '
         ORG   VOLNAME
UNITNAME DC    6C' '
DEVNAME  DS    A
DEVMASK  DS    A
BYTCOUNT DS    F
FLAGS    DC    H'0'
BLANKS   DC    CL80' '
         SPACE 3
SVC78    DC    C'SPACE='
FREECYL  DC    C'CCCC,'
FREETRK  DC    C'TTTT,'
EXTENT   DC    C'AAAA/'
CNTGCYL  DC    C'CCCC,'
CNTGTRK  DC    C'TTTT'
         SPACE 3
CSPLBLOK DS    6F
CSPLSAVE DS    6F
CPECB    DC    F'0'
FLAGWORD DC    F'0'
CSOABLOK DS    2F
CBUF     DC    AL2(84),AL2(0)
REPLY    DC    CL80' '             USER'S COMMAND INPUT BUFFER
ADDRSCAN DS    A
PROMPT   DC    C'ENTER COMMAND  (? FOR HELP)'
         SPACE 3
LINE     DC    CL80' '
         ORG   LINE
ADDR     DC    C'ADDR  '
VOLUME   DC    C'VOLUME    '
DEVTYPE  DC    C'UNKNOWN         '
CYLS     DC    C'CCCC,TTTT    '
EXTENTS  DC    C'AAAA         '
MAX      DC    C'CCCC,TTTT    '
USECNT   DC    C'         '
         ORG   LINE+80
         SPACE 3
TITLE    DC    CL80' '
         ORG   TITLE
         DC    C'ADDR  '
         DC    C'VOLUME  '
         DC    C'DEVICE TYPE  '
         DC    C'FREE CYLS,TRKS  '
         DC    C'EXTENTS    '
         DC    C'MAX CYLS,TRKS  USECNT'                          JHK
         DC    C' JHK'                                           JHK
         ORG   TITLE+80
         SPACE 3
BANNER   DC    CL80' '                                           JHK
         ORG   BANNER                                            JHK
         DC    CL21' '                                           JHK
         DC    C'  SANTA FE INC. '                               JHK
         DC    C'TSO DASD SPACE COMMAND'                         JHK
         DC    CL21' '                                           JHK
         ORG   BANNER+80                                         JHK
         SPACE 3
         LTORG
         EJECT
         IKJCSOA
         SPACE 4
         IKJCSPL
         EJECT
         PRINT NOGEN
CVT      DSECT
         CVT   LIST=YES
         SPACE 3
UCB      DSECT
         IEFUCBOB LIST=YES
         END   SPACE
