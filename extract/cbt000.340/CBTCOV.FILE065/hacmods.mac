./ ADD LIST=ALL,LEVEL=01,SOURCE=0,NAME=$INDEX
1
                    HUGHES AIRCRAFT COMPANY
          RADAR SYSTEMS GROUP MANUFACTURING DIVISION
                     2060 EAST IMPERIAL
                     BUILDING R4  MAIL STATION 255
                     EL SEGUNDO, CA  90245

                      JIM MCCONNELL, JR.
                      TELEPHONE (213) 648 1843


 =======================================================================


  MEMBER      PTFS            ABSTRACT
 -------    -------   ------------------------------------------------
 EU01000    EU01000   ZAP PAGE FAULT RATE THRESHOLDS FOR SRM.

 EU02000    EU02000   ZYTRON ZAP TO SUPPRESS TAPE CHAIN SCHEDULING
            EU02001   SAME AS EU02000 BUT DIFFERENT PTF LEVEL.
            EU02100   ZYTRON ZAP TO CHANGE DEFAULT TAPE BUFNO.
            EU02101   SAME AS EU02101 BUT DIFFERENT PTF LEVEL.

 EU05000    EU05000   GDG MOD

 EU06000    EU06000   COPY CMDLIB TO LPALIB DURING FULL SYSGEN.

 EU07000    EU07000   SSI DATE & TIME; DSN & VOLSER TO LINKEDIT MESSAGES

 EU08000    EU08000   ZAP TO DECREASE USER PRIVATE AREA FROM 8 MEG TO 6.

 EU09000    EU09000   ESMD JES2 SEPARATOR PAGE ROUTINE.

 EU09001    EU09001   ESMD JES2 FAKE EOJ NULL CARD TEST.

 EU09002    EU09002   ESMD JES2 REPORT COVER ROUTINE.

 EU09003    EU09003   ESMD JES2 ACCOUNT NUMBER VERIFICATION ROUTINE.

 EU09004    EU09004   ESMD JES2 BILLING LOG NUMBER VALIDATION ROUTINE.

 EU09006    EU09006   ESMD JES2 SET JOBS MESSAGE CLASS TO A.

 EU09007    EU09007   ESMD JES2 PUNCH BANNER CARD.

 EU09008    EU09008   ESMD JES2 FORCE ALL CARDS TO INTERPRET ON 3525.

 EU10000    EU10000   ADD VTAM/TSO LOGON TRANSLATE TABLE TO LPALIB.
            EU10010   ZAP NETSOL WAIT TIME IPL DURATION FROM 5 TO 1.

 EU11000    EU11000   ADD DSN AND VOLSER TO IEBCOPY MESSAGES

 EU18000    EU18000   TCAM TTY TRANSLATE TABLE ZAP

 EU19000    EU19000   CHANNEL ROTATE MOD

 EU21000    EU21000   ZAP TO AHLTSVC TO MOVE EP/DE NAME TO SVC PARMLIST
                      OF SVC 42 (ATTACH) GTF RECORDS.
 TR26021    TR26021   ZAP TO ILRCMP TO SAVE ABEND028 INFO IN PSA
./ ADD LIST=ALL,LEVEL=01,SOURCE=0,NAME=EU01000
++ PTF (EU01000).
++ VER (Z037) PRE (UZ21470) /*
***********************************************************************
*                                                                     *
*        THE PURPOSE  OF THIS ZAP IS TO CHANGE THE VALUES OF THE      *
*        SRM FOR PAGE FAULT DETERMINATION FROM MIN=100, MAX=100 TO    *
*        MIN=15, MAX=25 SUCH THAT THE PAGE FAULT RATE WILL BE         *
*        CONSIDERED IN THE SRM RECOMMENDATION.                        *
*                                                BY  C.A. BROWNS      *
*                                                                     *
***********************************************************************
                         */.
++ ZAP (IRARMCNS) .
NAME IEANUC01 IRARMCNS
VER 0204 0064      MIN=100
VER 0206 0064      MAX=100
REP 0204 000F      MIN=15
REP 0206 0019      MAX=25
IDRDATA EU01000
./ ADD LIST=ALL,LEVEL=01,SOURCE=0,NAME=EU02000
++ PTF (EU02000) /*
     THIS IS THE ZYTRON SUPPRESS TAPE CHAIN SCHEDULING MOD.
     THIS IS A REQUIREMENT OF ZYTRON MICROFICHE FORMATTING PROGRAMS.
                 */.
++ VER (Z037) PRE (UZ23262).
++ ZAP (IGG0193I).
*
* ZYTRON ZAP TO BYPASS CHAIN SCHEDULING FOR TAPES.
*
NAME IGG0191A IGG0193I
*  AT PTF LEVEL 7809
VER 00DE 910F7000    TM    PAROPT,PAROUTPT  IS THIS OUTPUT?
VER 00E2 471030FC    BO    A0155            YES, CAN USE PCI
REP 00E2 471031BC    BO    A0181            YES, SKIP PCI.
IDRDATA EU02000
++ PTF (EU02001) /*
     THIS IS THE ZYTRON SUPPRESS TAPE CHAIN SCHEDULING MOD.
     THIS IS A REQUIREMENT OF ZYTRON MICROFICHE FORMATTING PROGRAMS.
                 */.
++ VER (Z037) .
++ ZAP (IGG0193I).
*
* ZYTRON ZAP TO BYPASS CHAIN SCHEDULING FOR TAPES.
*
NAME IGG0191A IGG0193I
*  AT PTF LEVEL SU 810
VER 00D2 910F7000    TM    PAROPT,PAROUTPT  IS THIS OUTPUT?
VER 00D6 471030F0    BO    A0155            YES, CAN USE PCI
REP 00D6 471031B0    BO    A0181            YES, SKIP PCI.
IDRDATA EU02000
++ PTF (EU02100) /*
     THIS IS THE ZYTRON MOD TO REDUCE THE DEFAULT TAPE BUFFERS.
                 */.
++ VER (Z037) .
++ ZAP (IGG0196B).
*
* ZYTRON ZAP TO CHANGE DEFAULT BUFNO FOR TAPES FROM 5 TO 2.
*  THIS ZAP IS NOT NECESSARY FOR THE CHAIN SCHEDULING ZAP TO WORK.
*
NAME IGG0191A IGG0196B
*  AT PTF LEVEL SU 810
VER 00D0 95052014    CLI   DCBBUFNO,GENDEF  BUFCB BUFNO LT DEFAULT
REP 00D0 95022014    CLI   DCBBUFNO,2       BUFCB BUFNO LT 2.
VER 00D8 92052014    MVI   DCBBUFNO,GENDEF  SUPPLY 5 BUFFERS.
REP 00D8 92022014    MVI   DCBBUFNO,2       SUPPLY 2 BUFFERS.
IDRDATA EU02000
++ PTF (EU02101) /*
     THIS IS THE ZYTRON MOD TO REDUCE THE DEFAULT TAPE BUFFERS.
                 */.
++ VER (Z037) .
++ ZAP (IGG0196B).
*
* ZYTRON ZAP TO CHANGE DEFAULT BUFNO FOR TAPES FROM 5 TO 2.
*  THIS ZAP IS NOT NECESSARY FOR THE CHAIN SCHEDULING ZAP TO WORK.
*
NAME IGG0191A IGG0196B
*  AT PTF LEVEL 7810/7811
VER 00C8 95052014    CLI   DCBBUFNO,GENDEF  BUFCB BUFNO LT DEFAULT
REP 00C8 95022014    CLI   DCBBUFNO,2       BUFCB BUFNO LT 2.
VER 00D0 92052014    MVI   DCBBUFNO,GENDEF  SUPPLY 5 BUFFERS.
REP 00D0 92022014    MVI   DCBBUFNO,2       SUPPLY 2 BUFFERS.
IDRDATA EU02000
./ ADD LIST=ALL,LEVEL=01,SOURCE=0,NAME=EU05000
++PTF(EU05000) /* THIS IS THE GDG MOD.
     THE PURPOSE OF THIS MODIFICATION IS TO ALLOW RESTART OF JOBS
     THAT USE GDG AND REFER TO THEM AS +1 IN LATER STEPS.
     WITHOUT THIS MOD JOBS RESTARTED WOULD HAVE TO HAVE ALL
     REFERENCRES TO +1 CHANGED TO 0.  THIS IS AN ERROR PRONE AND
     TIME CONSUMING TASK.  THEREFORE THE FOLLOWING MODIFICATION.....

     FUNCTION:
     IF THE GDG IS NOT FOUND IN THE GDGNT (GDG NAME TABLE)
        THEN IT HAS NOT BEEN PROCESSED IN THE 'JOB' BEFORE AND WE
        NEED TO CHECK DISP.
     IF DISP IS NEW
        THEN DO NOTHING.
     IF DISP IS NOT NEW
        THEN CHECK RGN FOR +.
     IF RGN IS NOT +
        THEN DO NOTHING.
     IF RGN IS +
        THEN CHECK FOR EXACTLY +1.
     IF NOT +1
        THEN DO NOTHING.
     IF +1
        THEN SUBTRACT ONE FROM BASE LEVEL AND
        CONTINUE NORMAL PROCESSING.        */ .
++VER(Z037) .
++ZAP(IEFAB461) .
 EXPAND IEFAB461(128)
NAME IEFAB461
VER 0632 50A01040
VER 08A0 00000000
REP 08A0 50A01040 PATCH    ST    @10,HWGDGBSP,(,@01)   REPRO REPL INSTR
REP 08A4 58A0B054          L     @10,@PC00001+12       PTR TO SIOT PTR
REP 08A8 58A0A000          L     @10,SIOTPTR(,@10)     PTR TO SIOT
REP 08AC 9104A03A          TM    SCTSNEW(@10),X'04'    IS IT NEW?
REP 08B0 4710C61A          BO    @RF00157              YES, RETURN
REP 08B4 58A0B058          L     @10,@PC00001+16       PTR TO JFCB PTR
REP 08B8 5860A000          L     @10,JFCBPTR(,@10)     PTR TO JFCB
REP 08BC 954E602C          CLI   44(@6),C'+'           IS IT A PLUS?
REP 08C0 4770C61A          BNE   @RF00157              NO, RETURN.
REP 08C4 41606001 L1       LA    @6,1(,@6)             YES, ADD 1 AND
REP 08C8 95F0602C          CLI   44(@6),C'0'           CHK FOR A ZERO
REP 08CC 4780C8A8          BE    L1                    YES, SKIP IT
REP 08D0 95F1602C          CLI   44(@6),C'1'           NO, IS IT A ONE
REP 08D4 4770C61A          BNE   @RF00157              NO, RETURN
REP 08D8 9540602D          CLI   45(@6),C' '           YES,IS NEXT A BLK
REP 08DC 4770C61A          BNE   @RF00157              NO, RETURN
REP 08E0 58A01040          L     @10,HWGDGBSP(,@01)    ADDR OF BASE LVL
REP 08E4 F223B0DCA000      PACK  DATD,220(3),0(4,@10)  CONV TO DEC
REP 08EA FB20B0DCC8E2      SP    DATD+220(3),PATCH+94(1) SUBTR ONE
REP 08F0 F332A000B0DC      UNPK  0(4,@10),DATD+220(3)  UNPK IT BACK
REP 08F6 96F0A003          OI    3(@10),X'F0'          CORR ZONE
REP 08FA 47F0C61A          B     @RF00157              AND RETURN
REP 08FE 1C00              DC    PL1'1'                CONST.
REP 0632 47F0C884
IDRDATA EU05000
./ ADD LIST=ALL,LEVEL=01,SOURCE=0,NAME=EU06000
++ PTF (EU06000) /* UPDATE SYSGEN TO COPY CMDLIB TO LPALIB */.
++ VER (Z037) .
++UPDTE (GENERATE) DISTLIB (AGENLIB) .
./ CHANGE NAME=GENERATE
 PUNCH '//LPALIB   DD VOL=(,RETAIN,SER=&SGCTRLC(23)),DISP=OLD,' EU06000
 PUNCH '//         UNIT=&SGCTRLC(24),DSN=&SGCTRLC(40)..LPALIB'  EU06000
 PUNCH '    SELECT MEMBER=((IEABLDBA,IEABLD00))'                EU06000
++ UPDTE (SGIKJ5EF) DISTLIB (AGENLIB) .
./ CHANGE NAME=SGIKJ5EF
         PUNCH '    COPY OUTDD=LPALIB,INDD=AOST4'               EU06000
++ UPDTE (SGIKJ5EH) DISTLIB (AGENLIB) .
./ CHANGE NAME=SGIKJ5EH
         PUNCH '    COPY OUTDD=LPALIB,INDD=ACMDLIB'             EU06000
++ UPDTE (SGIKJ5IE) DISTLIB (AGENLIB) .
./ CHANGE NAME=SGIKJ5IE
         PUNCH '    COPY OUTDD=LPALIB,INDD=ACMDLIB'             EU06000
++ UPDTE (SGIKJ5EB) DISTLIB (AGENLIB) .
./ CHANGE NAME=SGIKJ5EB
         PUNCH '    COPY OUTDD=LPALIB,INDD=ACMDLIB'             EU06000
         PUNCH '    COPY OUTDD=LPALIB,INDD=AOST4'               EU06000
++ UPDTE (SGIKJ5EG) DISTLIB (AGENLIB) .
./ CHANGE NAME=SGIKJ5EG
         PUNCH '    COPY OUTDD=LPALIB,INDD=ACMDLIB'             EU06000
++ UPDTE (SGIKJ4EF) DISTLIB (AGENLIB) .
./ CHANGE NAME=SGIKJ4EF
&SGCTRLC(9)    SETC      'LPALIB'       LIBRARY NAME            EU06000
++ UPDTE (SGIKJ4EB) DISTLIB (AGENLIB) .
./ CHANGE NAME=SGIKJ4EB
&SGCTRLC(9)    SETC      'LPALIB'       LIBRARY NAME            EU06000
&SGCTRLC(9)    SETC      'LPALIB'       LIBRARY NAME            EU06000
++ UPDTE (SGIKJ4EH) DISTLIB (AGENLIB) .
./ CHANGE NAME=SGIKJ4EH
&SGCTRLC(9)    SETC      'LPALIB'       LIBRARY NAME            EU06000
./ ADD LIST=ALL,LEVEL=01,SOURCE=0,NAME=EU07000
++ PTF (EU07000) /* MOD TO SUPPLY THE DATE AND TIME AS SSI INFO
                    WHEN THE SETSSI CONTROL STATEMENT IS NOT
                    SPECIFIED.  THE SECOND SET OF VER AND REP
                    STATEMENTS ADD DSNAME AND VOLSER OF THE
                    SYSLMOD DD STATEMENT TO THE LINKEDIT MESSAGES. */.
++ VER (Z037) PRE(UZ06600).
++ ZAP (HEWLFFNL) DISTLIB(AOS04) .
 EXPAND HEWLFFNL(150)
 NAME HEWLFFNL
VER 0120 4780C152                           TEST SETSSI
VER 0940 00000000,00000000,00000000,00000000
VER 0950 00000000,00000000,00000000,0000
REP 0940 41100002,0A0B   TIME  DEC          GET DATE AND TIME
REP 0946 88100004        SRL   1,4          SHIFT OUT THE SIGN
REP 094A 40102208        STH   1,SSI        STORE YDDD
REP 094E 88000010        SRL   0,16         SHIFT OUT SEC,10TH,100TH
REP 0952 4000220A        STH   0,SSI+2      STORE HHMM
REP 0956 9610209E        OI    APT2,SETSSI  INDICATE SSI PROCESSED
REP 095A 47F0C122        B     BACK         BACK TO PROCESS SETSSI INFO
REP 0120 4780C93E        B     PATCH        GO TO TIME STAMP
VER 045A 4490C460        EX    REG9,MOVE
VER 0960 00000000,00000000,00000000,00000000
VER 0970 00000000,00000000,00000000,00000000
VER 0980 00000000,00000000,00000000,00000000
VER 0990 00000000,00000000,00000000,00000000
VER 09A0 00000000,00000000,00000000,00000000
VER 09B0 00000000,00000000,00000000,00000000
VER 09C0 00000000,00000000,00000000,00
REP 0960 4490C460                EX    REG9,MOVE (DISPLACED INSTRUCTION)
REP 0964 95C4300F                CLI   LINE+15,C'D'
REP 0968 4780C98A                BE    MSG3
REP 096C 95D5300F                CLI   LINE+15,C'N'
REP 0970 4770C45C                BNE   MAINLINE
REP 0974 95D93013                CLI   LINE+19,C'R'
REP 0978 4780C982                BE    MSG2
REP 097C 4190301C         MSG1   LA REG9,LINE+28
REP 0980 47F0C98E                BE    MOVE
REP 0984 4190301F         MSG2   LA REG9,LINE+31
REP 0988 47F0C98E                BE    MOVE
REP 098C 41903034         MSG3   LA    REG9,LINE+52
REP 0990 D2069000C9BA     MOVE   MVC   0(7,REG9),TAG1
REP 0996 D209900DC9C1            MVC   0(10,REG9),TAG2
REP 099C 5810C6F2                L     REG1,=A(MINOR)
REP 09A0 D22B90171000            MVC   23(44,REG9),ORR1    DSNAME
REP 09A6 5810C86A                L     REG1,DCBADRS2       DCB
REP 09AA 5810102C                L     REG1,44(,REG1)      DEB
REP 09AE 58101020                L     REG1,32(,REG1)      UCB
REP 09B2 D2059007101C            MVC   7(6,REG9),28(REG1)  VOLSER
REP 09B8 47F0C45C                B     MAINLINE
REP 09BC E5D6D3E2C5D97E    TAG1  DC    C'VOLSER='          TAG1
REP 09C3 40C4C1E3C140E2C5E37E    DC    C' DATA SET='       TAG2
REP 045A 47F0C95E                B     PATCH
IDRDATA EU07000
./ ADD LIST=ALL,LEVEL=01,SOURCE=0,NAME=EU08000
++ PTF (EU08000) /* DECREASE USER PRIVATE AREA FROM 8 MEG TO 6. */.
++ VER (Z037) PRE (UZ85100 UZ80703).
++ ZAP (IEAVNIP0).
NAME IEANUC01 IEAVNIP0
VER 2E6C 0080,0000
REP 2E6C 0060,0000
*
++ ZAP (IEAVNP08).
*  BYPASS THE CHECK FOR SYSTEM SIZE.
NAME IEAVNP08
VER 03A2 4740C380
REP 03A2 47F0C380
./ ADD LIST=ALL,LEVEL=01,SOURCE=0,NAME=EU09000
++ PTF (EU09000)  /* HUGHES EL SEGUNDO SEPARATOR PAGE ROUTINE */ .
++ VER (Z037) .
++ SRCUPD (HASPPRPU) .
./ CHANGE NAME=HASPPRPU
         LA    R0,16               SET SIZE FOR GETMAIN         EU09000
         ICM   R0,8,=AL1(230)      SET SUB-POOL NUMBER          EU09000
         GETMAIN R,LV=(0)     GET CORE FOR SEP PAGE WORKAREA    EU09000
         LR    R9,R1          LOAD ADDRESS OF WORKAREA IN REG 9 EU09000
         USING SEPWORK,R9     ESTABLISH ADDRESSABILITY          EU09000
         XC    SEPWORK,SEPWORK     CLEAR WORK AREA              EU09000
         LA    PC1,JCTPNAME        GET ADDR OF PROGR NAME/MAIL  EU09000
         ST    PC1,SEPROGNA        STORE ADDR PROGR NAME        EU09000
         LA    PC2,0               SET LENGTH TO ZERO           EU09000
         XC    SEPMS,SEPMS         CLEAR MAIL STATION           EU09000
CHKMS    CLI   0(PC1),C','         IS IT A COMMA                EU09000
         BE    MOVEMS              YES                          EU09000
         LA    PC1,1(,PC1)         INCREMENT INDEX BY 1         EU09000
         LA    PC2,1(,PC2)         INCREASE LENGTH BY 1         EU09000
         CH    PC2,=H'05'          LENGTH LESS THAN 5           EU09000
         BL    CHKMS               YES, CHECK NEXT POSITION     EU09000
         B     NEXTBLOK            NO MAIL STA SETUP NAME       EU09000
MOVMS    MVC   SEPMS(*-*),JCTPNAME MOVE MAIL STA TO HOLD        EU09000
         LTR   PC2,PC2             TEST IF MAIL STA LNG ZERO    EU09000
         BZ    BYPASSM             YES, BYPASS M/S MOVE         EU09000
         BCTR  PC2,0               SET TO LENGTH FOR M/S MOVE   EU09000
         EX    PC2,MOVMS           EXECUTE MAIL STATION MOVE    EU09000
BYPASSM  EQU   *                                                EU09000
         LA    PC1,1(,PC1)         STEP OVER COMMA              EU09000
         ST    PC1,SEPROGNA        STORE ADDR PROGR NAME        EU09000
NEXTBLOK EQU   *                                                EU09000
         ZAP   SEPPGCT,=P'2'       SET COUNT FOR 3 PAGES        EU09000
PRINTIDO EQU   *                                                EU09000
         BAL   PL,PPPUT            ADD CCW TO CHAIN             EU09000
         L     PC1,SEPROGNA        GET ADDR OF PROGR NAME       EU09000
         MVC   PCCWORK(8),0(PC1)   MOVE PROGR NAME TO BLKPRT    EU09000
         L     R1,PLNDISPL         GET NEW LINE DISPLACEMENT    EU09000
         LA    PL,BLKPRT           POINT TO BLOCK LTR ROUTINE   EU09000
         BAL   PL,0(,PL)          TO PRINT PROGRAMMER NAME LINE EU09000
*                            TO PRINT THEM SLANTED CHG 'BAL' TO EU09000
*                             'BALR PL,PL' AND 'NOPR 0'         EU09000
         LM    PC1,PC2,PRCCWSP     LOAD SPACE CCW (SKIP 3)      EU09000
         BAL   PL,PPPUT            ADD SPACER CCW TO CHAIN      EU09000
         BAL   PL,PPPUT            ADD CCW TO CHAIN             EU09000
         L     R1,PCEFORM         PAGE TYPE ID (START,CONT,END) EU09000
         CLC   0(5,R1),=C' END '   IS IT TRAILER PAGE ?         EU09000
         BNE   PGSTRT              NO, PAGE START OR CONT       EU09000
         MVC   PCCWORK(3),1(R1)    MOVE END TO BLKPRT           EU09000
         MVC   PCCWORK+3(5),JCTJOBID+3  JES JOB NO. TO BLKPRT   EU09000
         ZAP   SEPPGCT,=P'0'       SET FOR ONE TRAILER PAGE     EU09000
         B     GOPRNT              GO TO BLKPRT SETUP           EU09000
PGSTRT   DS    0H                                               EU09000
         MVC   PCCWORK(3),JCTROOMN BLDG. NO. TO BLKPRT          EU09000
         MVI   PCCWORK+3,C'/'      BLDG & M/S SEPERATOR CHAR    EU09000
         MVC   PCCWORK+4(4),SEPMS  MOVE M/S TO BLKPRT           EU09000
GOPRNT   DS    0H                                               EU09000
*        MVI   PCCWORK+7,C' '      SET TRAILING BLANK        R4 EU09000
         L     R1,PLNDISPL         GET NEW LINE DISPLACEMENT    EU09000
         LA    PL,BLKPRT           POINT TO BLOCK LTR ROUTINE   EU09000
         BAL   PL,0(,PL)           TO PRINT BLDG & M/S LINES    EU09000
*                            TO PRINT THEM SLANTED CHG 'BAL' TO EU09000
*                             'BALR PL,PL' AND 'NOPR 0'         EU09000
         BAL   PL,PPPUT            ADD SPACER CCW TO CHAIN      EU09000
         BAL   PL,PPPUT            ADD CCW TO CHAIN             EU09000
         SPACE 2                                                EU09000
         MVC   0(11,PC1),=C'JES2 *****.' PP001 FRAME CHARS      EU09000
         MVC   11(111,PC1),10(PC1) PP012-PP122 PERIODS          EU09000
         L     PL,PWKJOE           ADDRESS OF WORK-JOE          EU09000
         USING JOEDSECT,PL         ACTIVATE JOE ADDRESSABILITY  EU09000
         MVC   7(1,PC1),JOECURCL   PP008 SYSOUT CLASS           EU09000
         DROP  PL                  DROP JOE ADDRESSABILITY      EU09000
         MVC   128(4,PC1),0(PC1)   PP129-PP132 FRAME CHARS      EU09000
         MVC   122(5,PC1),5(PC1)   PP123-PP127 SYSOUT CLASS     EU09000
         MVC   22(5,PC1),0(R1)     PP023-PP027 START/END/CONT   EU09000
         MVC   28(8,PC1),JCTJOBID  PP029-PP036 JOB NUMBER       EU09000
         MVC   82(8,PC1),JCTJNAME  PP083-PP090 JOB NAME         EU09000
         MVC   92(20,PC1),JCTPNAME PP093-PP112 PROGRAMMER NAME  EU09000
         MVC   113(3,PC1),=C'SYS'  PP114-PP116 SYS              EU09000
         MVC   117(4,PC1),$SID     PP118-PP121 SYSTEM ID        EU09000
         MVC   63(5,PC1),=C'BLDG ' PP064-PP068 BLDG             EU09000
         MVC   68(3,PC1),JCTROOMN  PP069-PP071 BLDG NO.         EU09000
         MVC   72(4,PC1),=C'M/S '  PP073-PP076 M/S              EU09000
         MVC   76(4,PC1),SEPMS     PP077-PP080  MAIL STATION    EU09000
         MVC   40(11,PC1),PTIMASK  GET EDIT MASK FOR TIME       EU09000
         MVI   49(PC1),C'P'        CHANGE FROM AM TO PM         EU09000
         ED    39(9,PC1),PCCWORK   PP041-PP049 HH.MM.SS         EU09000
         MVC   40+11(10,PC1),PMESSAGE PP053-PP062 DAY MON YR    EU09000
         MVC   10(8,PC1),DCTDEVN   PP011-PP018 DEVICE NAME      EU09000
         SH    JCT,=H'59'         ACCT FOR 3800 BLK LTR & SPACE EU09000
*   FOLLOWING TWO INSTRUCTIONS WERE ASTERISKED OUT TO FORCE     EU09000
*   JES2 NEWS TO PRINT ON A SEPERATE PAGE BECAUSE OF OUR        EU09000
*   SEPARATE PAGE FORMAT.                                       EU09000
*        TM    PPFLAG,PPNEWS       JES2-NEWS AVAILABLE...       EU09000
*        BO    PRNOID              SKIP EJECT IF YES            EU09000
         SP    SEPPGCT,=P'1'       DECREMENT NO. ID PAGES       EU09000
         BNM   PRINTIDO            STILL POSITIVE DO AGAIN      EU09000
         LA    R0,16               GET LENGTH  OF SEP WORKAREA  EU09000
         ICM   R0,8,=AL1(230)      SET FOR SUB-POOL 230         EU09000
         FREEMAIN R,LV=(0),A=(9)   FREE SEP WORKAREA            EU09000
         DROP  R9                  DROP WORKAREA ADDRESSABILITY EU09000
         DC    X'0A0B0C0D0E0F10111200130000000000'              EU09000
         DC    X'1415161718191A1B1C000000000000'                EU09000
         DC    X'1D1E1F20212223242526002728000000'              EU09000
BLOCKSL  DC    X'00100030006000C00180030006000C00180030006000C000' 9000
HASPPRPU CSECT                                                  EU09000
SEPWORK  DSECT               SEPERATOR PAGE WORKAREA DSECT      EU09000
SEPMS    DS    CL4                 HOLD AREA FOR MAIL STATION   EU09000
         DS    CL1                 UNUSED                       EU09000
SEPPGCT  DS    PL1                 SEPERATOR PAGE COUNT         EU09000
SEPIND   DS    XL2                 SEPERATOR PAGE INDICATOR     EU09000
SEPROGNA DS    F            SEPERATOR PAGE ADDR OF PROGR NAME   EU09000
         DS    CL4                 UNUSED                       EU09000
         EJECT                                                  EU09000
./ ENDUP
./ ADD LIST=ALL,LEVEL=01,SOURCE=0,NAME=EU09001
++ PTF (EU09001)     /* FAKE EOJ NULL CARD TEST */ .
++ VER (Z037) .
++ SRCUPD (HASPRDR) .
./ CHANGE NAME=HASPRDR
         CLC   0(3,RPI),=C'/S*'    TEST FOR FAKE EOJ NULL CARD  EU09001
         BNE   *+8                 NOT FAKE EOJ NULL CARD       EU09001
         MVI   1(RPI),C'/'         CONVERT TO COMMENTS CARD     EU09001
         CLC   0(3,RPI),=C'/S*'    TEST FOR FAKE EOJ NULL CARD  EU09001
         BNE   *+8                 NOT FAKE EOJ NULL CARD       EU09001
         MVI   1(RPI),C'/'         CONVERT TO COMMENTS CARD     EU09001
./ ENDUP
./ ADD LIST=ALL,LEVEL=01,SOURCE=0,NAME=EU09002
++ PTF (EU09002)   /* EL SEGUNDO REPORT COVER ROUTINE */ .
++ VER (Z037) PRE (AZ32776) .
++ SRCUPD (HASPPRPU) .
./ CHANGE NAME=HASPPRPU
         TM    PCEID,PCEPRSID  CHECK PROCESSOR TYPE             EU09002
         BNO   NOTACVR         BRANCH IF NOT PRINTER            EU09002
         CLC   3(7,PW),=C'.REPORT'     .REPORT RCD ?            EU09002
         BE    CVRPRO                                           EU09002
CHKCVR   EQU   *                                                EU09002
         CLC   3(6,PW),=C'.COVER'      .COVER RCD ?             EU09002
         BNE   NOTACVR                 NO, NORMAL PRINT RCD     EU09002
CVRPRO   EQU   *                                                EU09002
         LTR   R9,R9           GETMAIN ALREADY DONE ?           EU09002
         BNZ   CVRNGM          YES, BYPASS GETMAIN              EU09002
GETCVR   L     R0,=F'4096'     SET SIZE FOR GETMAIN             EU09002
         GETMAIN RU,LV=(0),BNDRY=PAGE,SP=228,                   EU09002X
               RELATED=(FREECVR,'GET COVER STORAGE')            EU09002
         XC    0(255,R1),0(R1) CLEAR WORK AREA                  EU09002
         XC    256(255,R1),256(R1) CLEAR WORK AREA              EU09002
         LR    R9,R1           INITIALIZE USING REGISTER        EU09002
         STM   13,12,8(R9)     SAVE REGISTERS IN GOTTEN AREA    EU09002
         L     R0,=F'4096'     GET SIZE OF BUFFER AREA          EU09002
         LA    R2,PPLSAVE      ADDRESS OF PSUEDO-ECB            EU09002
        $PGSRVC FIX,(R1),(R0),(R2)   PAGE FIX COVER BUFF AREA   EU09002
         ST    R9,PCER9        STORE ADDRESS OF GOTTEN CORE     EU09002
         LM    R0,R2,20(R9)    RESTORE REGS 0, 1 & 2            EU09002
CVRNGM   EQU   *                                                EU09002
         L     R15,=A(CVRRTNE) GET COVER ROUTINE ADDRESS        EU09002
         BALR  PL,R15          BRANCH TO COVER ROUTINE          EU09002
         SPACE 1                                                EU09002
*******   RETURN FROM COVER ROUTINE TO HERE   ****************  EU09002
         SPACE 1                                                EU09002
         B     PNXTRCB         GET NEXT LOGICAL RECORD          EU09002
NOTACVR  EQU   *                                                EU09002
         SPACE 1                                                EU09002
*************************************************************** EU09002
*    EL SEGUNDO REPORT COVER PAGE AND STORAGE FREE SECTION    * EU09002
*************************************************************** EU09002
         SPACE 1                                                EU09002
         LTR   R9,R9           NEED A FREEMAIN ?                EU09002
         BZ    CVRNFRE         NO, BYPASS FREEMAIN              EU09002
         USING CVRWORKA,R9                                      EU09002
         MVI   CVREIND,X'FF'   SET COVER END INDICATOR ON       EU09002
         DROP  R9                                               EU09002
         L     R15,=A(CVRRTNE) GET COVER ROUTINE ADDRESS        EU09002
         BALR  PL,R15          BRANCH TO COVER ROUTINE          EU09002
         L     R0,=F'4096'     GET BUFFER SIZE                  EU09002
         LR    R1,R9           ADDRESS OF BUFFER                EU09002
        $PGSRVC FREE,(R1),(R0)   PAGE FREE BUFFER AREA          EU09002
FREECVR  L     R0,=F'4096'     SET SIZE FOR FREEMAIN            EU09002
         ICM   R0,8,=AL1(228)  SET SUB-POOL NUMBER              EU09002
         FREEMAIN R,LV=(0),A=(9),RELATED=(GETCVR,'GET STORAGE') EU09002
         SLR   R9,R9           CLEAR REG AND                    EU09002
         ST    R9,PCER9         AND SAVE AREA IN PCE            EU09002
         SPACE 1                                                EU09002
CVRNFRE  EQU   *                                                EU09002
         SLR   R9,R9           ZERO GETMAIN REG 9               EU09002
         ST    R9,PCER9         AND SAVE AREA FOR REG 9         EU09002
         DC    X'0A0B0C0D0E0F10111200130000000014'              EU09002
         DC    X'15161718191A1B1C1D000000000000'                EU09002
         DC    X'1E1F2021222324252627002829000000'              EU09002
BLOCKDSH DC    X'00000000000000000000FFF0FFF000000000000000000000' 9002
*  THIS LINE MOVED BY USER FIX EU09002                          EU09002
*  THIS LINE MOVED BY USER FIX EU09002                          EU09002
         TITLE 'HASP PRINT/PUNCH SERVICE -- HUGHES EL SEGUNDO REPORT COX
               VER PRINT ROUTINE'                               EU09002
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * EU09002
*                      USER PTF NO. EU09002                   * EU09002
* REPORT COVER PRINT ROUTINE FOR HUGHES EL SEGUNDO SITE       * EU09002
*              PROGRAMMED BY G. K. MADSEN  JULY 1978          * EU09002
*                                                             * EU09002
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * EU09002
         SPACE 2                                                EU09002
CVRRTNE  DS    0H                                               EU09002
         SPACE 1                                                EU09002
         USING CVRRTNE,R15         PROVIDE ADDRESSABILITY       EU09002
         USING HASPPPI1,BASE2,BASE3,BASE4 RE-EST ADDRIBLY       EU09002
         USING PCEDSECT,SAVE       RE-ESTABLISH ADDRESSABILITY  EU09002
         B     *+16                BRANCH AROUND IDENTIFIER     EU09002
         DC    CL12'$$$$CVRRTNE '                               EU09002
         STM   13,12,8(R9)     SAVE REGISTERS                   EU09002
         LR    BASE1,R15       SETUP BASE REG 1                 EU09002
         LA    BASE2,2048(,BASE1)  SETUP SECOND LOCAL           EU09002
         LA    BASE2,2048(,BASE2)    BASE REGISTER              EU09002
         DROP  R15                 DROP REG 15 ADDRESS          EU09002
         USING CVRRTNE,BASE1,BASE2  PROVIDE ADDRESSABILITY      EU09002
         USING CVRWORKA,R9         PROVIDE WORKAREA ADDRESS     EU09002
         STM   BASE1,BASE2,CVRBSAVE SAVE LOCAL BASE REGS        EU09002
         CLI   CVREIND,X'FF'   END OF REPORTS ?                 EU09002
         BE    CVRPREND        YES, PRINT END BANNERS           EU09002
         CLC   3(7,PW),=C'.REPORT' .REPORT RCD ?                EU09002
         BNE   CVRMOVE             NO, CHECK IF .COVER          EU09002
         MVI   CVRRCD,C' '           CLEAR COVER RECORD         EU09002
         MVC   CVRRCD+1(132),CVRRCD    WORK AREA                EU09002
         MVC   CVRCTLR(7),3(PW)    MOVE .REPORT TO WORK AREA    EU09002
         MVI   CVRSTRT,X'00'       SET START NO. TO ZERO        EU09002
         MVI   CVREND,X'FE'        SET END NO. TO 254           EU09002
         L     R15,PJCTBUF         GET JCT ADDRESS              EU09002
         USING JCTDSECT,R15        EST. JCT ADDRESSABILITY      EU09002
         MVC   CVRJOBNO,JCTJNAME   MOVE JOB NAME TO WORK AREA   EU09002
         DROP  R15                 DROP JCT ADDRESSABILITY      EU09002
         MVC   CVRRPTNO(8),18(PW)  MOVE REPORT NO. TO WORK AREA EU09002
         B     CVRPRT1                                          EU09002
CVRMOVE  EQU   *                                                EU09002
         MVC   CVRRCD,3(PW)        MOVE .COVER RCD TO WORKAREA  EU09002
CVRPRT1  EQU   *                                                EU09002
         CLC   PPRCPYCT(1),CVRSTRT PRINT COPY CT VS COVER CT    EU09002
         BL    CVREXIT             COPY LT GO TO EXIT           EU09002
         BE    CVRPRT2             COPY EQ GO PRINT COVER       EU09002
         CLC   PPRCPYCT(1),CVREND  COPY GT CHK VS THRU NO       EU09002
         BH    CVREXIT             COPY GT GO TO EXIT           EU09002
CVRPRT2  EQU   *                                                EU09002
         CLI   CVRFSTSW,X'00'  FIRST TIME THIS JOB ?            EU09002
         BNE   CVRPREND        NO, GO PRT END BANNER            EU09002
         MVI   CVRFSTSW,X'FF'  YES, SET INDICATOR ON            EU09002
         LA    R1,CVRBUFF          GET ADDRESS OF CVR PRT AREA  EU09002
         ST    R1,CBUFADDR         SAVE BUFFER ADDRESS          EU09002
         L     R1,PTIMEON+4        GET DATE PRINTED             EU09002
         LM    BASE1,BASE2,CVRSAVE+64  RESTORE ADDRESSABILITY   EU09002
         BAL   PL,PPDATE           GO FORMAT DATE               EU09002
         LM    BASE1,BASE2,CVRBSAVE  RE-LOAD BASE REG           EU09002
         MVC   CVRMON,PMESSAGE+4   MOVE PRINT                   EU09002
         MVC   CVRDAY,PMESSAGE+1       DATE TO                  EU09002
         MVC   CVRF19,=C', 19'             HOLD                 EU09002
         MVC   CVRYR,PMESSAGE+8                AREA             EU09002
         B     CVRNFST         BYPASS WRITING END BANNERS       EU09002
CVRPREND EQU   *                                                EU09002
         ZAP   CVRCNT,=P'+1'   SET FOR 2 END PAGES              EU09002
CVRENPG  EQU   *                                                EU09002
         LM    PC1,PC2,PRCCWEJ     GET PAGE EJECT CCW           EU09002
         BAL   PL,CVRPPPUT         ADD EJECT TO CCW CHAIN       EU09002
         MVC   CPCCWORK(9),=CL9'END      '  MOVE END TO BLKPRT  EU09002
         MVC   CBLKCNT,=F'3'       SET BLOCK COUNT TO 3         EU09002
         SLR   R1,R1               SET STARTING LINE            EU09002
         ST    R1,CLNDISPL           DISPLACEMENT TO 0          EU09002
         BAL   PL,CBLKPRT          GO DO BLOCK PRINT            EU09002
         LM    PC1,PC2,PRCCWSP     GET SPACER CCW               EU09002
         ICM   PC1,8,=X'13'        SET TO DOUBLE SPACE          EU09002
         BAL   PL,CVRPPPUT         ADD SPACER CCW TO CHAIN      EU09002
         MVC   CPCCWORK(9),=CL9'REPORT   ' MOVE REPORT TO BLK   EU09002
         MVC   CBLKCNT,=F'6'       SET BLOCK COUNT TO 6         EU09002
         L     R1,CLNDISPL         GET CURRENT LINE DISPLACE    EU09002
         BAL   PL,CBLKPRT          GO DO BLOCK PRINT            EU09002
         LM    PC1,PC2,PRCCWSP     GET SPACER CCW               EU09002
         ICM   PC1,8,=X'13'        SET TO DOUBLE SPACE          EU09002
         BAL   PL,CVRPPPUT         ADD SPACER CCW TO CHAIN      EU09002
         LM    BASE1,BASE2,CVRSAVE+64  RE-LOAD BASE REG         EU09002
         BAL   PL,PPWRITE          FORCE A WRITE                EU09002
         BAL   PL,PPCHECK          CHECK WRITE                  EU09002
         LM    BASE1,BASE2,CVRBSAVE  RESTORE ADDRESSABILITY     EU09002
         MVI   CPCCWORK,C' '           CLEAR WORK AREA          EU09002
         MVC   CPCCWORK+1(8),CPCCWORK    TO BLANKS              EU09002
         LA    PC1,6               GET LENGTH OF FIELD          EU09002
         LA    PC2,CVRPBRKN+5      GET LOW ORDER ADDR OF FIELD  EU09002
CVRSLOOP EQU    *                                               EU09002
         CLI   0(PC2),C' '          POSITION BLANK ?            EU09002
         BNE   CVRBMOVE            NO, MOVE BRKDN TO WORK       EU09002
         BCTR  PC2,0               DECREMENT TO NEXT POSITION   EU09002
         BCT   PC1,CVRSLOOP        HAVE WE DONE 6 CHECKS ?      EU09002
*                                  YES, ERROR IF FIELD IS BLANK EU09002
         LA    PC1,1               SET COUNT FOR MOVE           EU09002
CVRBMOVE ST    PC1,CBLKCNT          STORE NO. CHARS IN CNT      EU09002
         BCTR  PC1,0               ADJ. COUNT FOR MOVE          EU09002
         EX    PC1,CVRMVE          MOVE BRKDN TO BLKPRT         EU09002
         SLR   R1,R1               SET STARTING LINE            EU09002
         ST    R1,CLNDISPL           DISPLACEMENT TO 0          EU09002
         BAL   PL,CBLKPRT          GO DO BLOCK PRINT            EU09002
         LM    PC1,PC2,PRCCWSP     GET SPACER CCW               EU09002
         ICM   PC1,8,=X'13'        SET TO DOUBLE SPACE          EU09002
         BAL   PL,CVRPPPUT         ADD SPACER CCW TO CHAIN      EU09002
         MVC   CPCCWORK(8),CVRPRPT MOVE RPT NO TO BLKPRT        EU09002
         MVI   CPCCWORK+8,C' '     CLEAR UNITS POSITION         EU09002
         MVC   CBLKCNT,=F'8'       SET BLOCK COUNT TO 8         EU09002
         L     R1,CLNDISPL         GET CURRENT LINE DISPLACE    EU09002
         BAL   PL,CBLKPRT          GO DO BLOCK PRINT            EU09002
         LM    PC1,PC2,PRCCWSP     GET SPACER CCW               EU09002
         ICM   PC1,8,=X'13'        SET TO DOUBLE SPACE          EU09002
         BAL   PL,CVRPPPUT         ADD SPACER CCW TO CHAIN      EU09002
         L     R1,CLNDISPL         GET CURR LINE DISPLACEMENT   EU09002
         AL    R1,CBUFADDR         ADD BUFFER ORIGIN            EU09002
         MVI   0(R1),C' '          CLEAR PRINT AREA             EU09002
         MVC   1(131,R1),0(R1)       TO BLANKS                  EU09002
         MVC   10(8,R1),CVRPJOBN   MOVE PREV JOB NO TO PRINT    EU09002
         SLR   PC1,PC1             SET WORK REG TO 0            EU09002
         LH    PC1,CVRCPYNO    GET COPY COUNT NO                EU09002
         CVD   PC1,CBLKWORK        CONVERT COPY COUNT TO DECIMALEU09002
         OI    CBLKWORK+7,X'0F'    SET SIGN POSITIVE            EU09002
         MVC   127(4,R1),=X'40212020'  GET EDIT PATTERN         EU09002
         ED    127(4,R1),CBLKWORK+6    EDIT COPY NO TO PRINT    EU09002
         LM    PC1,PC2,PRCCWID     GET PRINT CCW                EU09002
         AL    PC1,CBUFADDR        ADD BUFFER ORIGIN            EU09002
         AL    PC1,CLNDISPL          AND LINE DISPLACEMENT      EU09002
         BAL   PL,CVRPPPUT         GO PRINT LAST LINE           EU09002
         LM    BASE1,BASE2,CVRSAVE+64  RESTORE ADDRESSABILITY   EU09002
         BAL   PL,PPWRITE          FORCE A WRITE                EU09002
         BAL   PL,PPCHECK          CHECK WRITE                  EU09002
         LM    BASE1,BASE2,CVRBSAVE  RE-LOAD BASE REG           EU09002
         SP    CVRCNT,=P'+1'       SUBTRACT 1 FROM END PAGE CT  EU09002
         BNM   CVRENPG             NOT MINUS DO AGAIN           EU09002
         CLI   CVREIND,X'FF'   END OF REPORTS ?                 EU09002
         BNE   CVRNFST         NO, CONTINUE PROCESSING          EU09002
         LM    PC1,PC2,PRCCWEJ     GET EJECT CCW                EU09002
         BAL   PL,CVRPPPUT         ADD EJECT CCW TP CHAIN       EU09002
         B     CVREXIT             END OF REPORTS. RETURN       EU09002
CVRNFST  EQU   *                                                EU09002
         MVC   CVRPCTRL,CVRCTRL    MOVE CURR CTRL TO PREV       EU09002
         ZAP   CVRCNT,=P'+1'       SET FOR 2 COVER PAGES        EU09002
CVRPRT3  EQU   *                                                EU09002
         LM    PC1,PC2,PRCCWEJ     GET EJECT CCW                EU09002
         BAL   PL,CVRPPPUT         ADD EJECT CCW TO CHAIN       EU09002
         SLR   R1,R1           CLEAR REG 1                      EU09002
         ST    R1,CLNDISPL     CLEAR DISPLACEMENT               EU09002
         AL    R1,CBUFADDR     ADD BUFFER START ADDRESS         EU09002
         MVC   0(132,R1),HDRLN1    MOVE COVER LINE  1 TO PRINT  EU09002
         BAL   PL,CVRPRTR          GO PRINT LINE 1              EU09002
         MVC   0(132,R1),HDRLN2    MOVE COVER LINE  2 TO PRINT  EU09002
         MVC   90(8,R1),CVRRPTNO   MOVE REPORT NUMBER TO PRINT  EU09002
         MVC   107(12,R1),CVRDATE  MOVE PRINTED DATE TO PRINT   EU09002
         BAL   PL,CVRPRTR          GO PRINT LINE 2              EU09002
         MVC   0(132,R1),HDRLN3    MOVE COVER LINE  3 TO PRINT  EU09002
         BAL   PL,CVRPRTR          GO PRINT LINE 3              EU09002
         MVC   0(132,R1),HDRLN4    MOVE COVER LINE  4 TO PRINT  EU09002
         MVC   78(32,R1),CVRTITLE  MOVE REPORT TITLE TO PRINT   EU09002
         BAL   PL,CVRPRTR          GO PRINT LINE 4              EU09002
         MVC   0(132,R1),HDRLN5    MOVE COVER LINE  5 TO PRINT  EU09002
         BAL   PL,CVRPRTR          GO PRINT LINE 5              EU09002
         MVC   0(132,R1),HDRLN6    MOVE COVER LINE  6 TO PRINT  EU09002
         MVC   89(12,R1),CVRTBRK   MOVE TYPE OF BREAK TO PRINT  EU09002
         MVC   105(6,R1),CVRBRKN   MOVE BREAK CODE TO PRINT     EU09002
         BAL   PL,CVRPRTR          GO PRINT LINE 6              EU09002
         MVC   0(132,R1),HDRLN7    MOVE COVER LINE  7 TO PRINT  EU09002
         BAL   PL,CVRPRTR          GO PRINT LINE 7              EU09002
         MVC   0(132,R1),HDRLN8    MOVE COVER LINE  8 TO PRINT  EU09002
         BAL   PL,CVRPRTR          GO PRINT LINE 8              EU09002
         MVC   0(132,R1),HDRLN9    MOVE COVER LINE  9 TO PRINT  EU09002
         MVC   78(32,R1),CVRRECP   MOVE RECIPIENT NAME TO PRINT EU09002
         MVC   115(2,R1),CVRSDIV   MOVE                         EU09002
         MVI   117(R1),C'-'           SOURCE                    EU09002
         MVC   118(2,R1),CVRSDEP           CODE                 EU09002
         MVI   120(R1),C'-'                   TO                EU09002
         MVC   121(2,R1),CVRSGRP               PRINT            EU09002
         BAL   PL,CVRPRTR          GO PRINT LINE 9              EU09002
         MVC   0(132,R1),HDRLN10   MOVE COVER LINE 10 TO PRINT  EU09002
         BAL   PL,CVRPRTR          GO PRINT LINE 10             EU09002
         MVC   0(132,R1),HDRLN11   MOVE COVER LINE 11 TO PRINT  EU09002
         MVC   83(4,R1),CVRBLDG    MOVE BUILDING NO. TO PRINT   EU09002
         MVC   93(6,R1),CVRMS      MOVE MAIL ST TO PRINT        EU09002
         MVC   119(4,R1),CVRDCODE  MOVE DISTRIBUTION CODE TO PR EU09002
         BAL   PL,CVRPRTR          GO PRINT LINE 11             EU09002
         MVC   0(132,R1),HDRLN12   MOVE COVER LINE 12 TO PRINT  EU09002
         BAL   PL,CVRPRTR          GO PRINT LINE 12             EU09002
         MVC   0(132,R1),HDRLN13   MOVE COVER LINE 13 TO PRINT  EU09002
         BAL   PL,CVRPRTR          GO PRINT LINE 13             EU09002
         MVC   0(132,R1),HDRLN14   MOVE COVER LINE 14 TO PRINT  EU09002
         BAL   PL,CVRPRTR          GO PRINT LINE 14             EU09002
         MVC   0(132,R1),HDRLN15   MOVE COVER LINE 15 TO PRINT  EU09002
         BAL   PL,CVRPRTR          GO PRINT LINE 15             EU09002
         MVC   0(132,R1),HDRLN16   MOVE COVER LINE 16 TO PRINT  EU09002
         BAL   PL,CVRPRTR          GO PRINT LINE 16             EU09002
         MVC   0(132,R1),HDRLN17   MOVE COVER LINE 17 TO PRINT  EU09002
         BAL   PL,CVRPRTR          GO PRINT LINE 17             EU09002
         MVC   0(132,R1),HDRLN18   MOVE COVER LINE 18 TO PRINT  EU09002
         BAL   PL,CVRPRTR          GO PRINT LINE 18             EU09002
         MVC   0(132,R1),HDRLN19   MOVE COVER LINE 19 TO PRINT  EU09002
         BAL   PL,CVRPRTR          GO PRINT LINE 19             EU09002
         MVC   0(132,R1),HDRLN20   MOVE COVER LINE 20 TO PRINT  EU09002
         BAL   PL,CVRPRTR          GO PRINT LINE 20             EU09002
         MVC   0(132,R1),HDRLN21   MOVE COVER LINE 21 TO PRINT  EU09002
         BAL   PL,CVRPRTR          GO PRINT LINE 21             EU09002
         LM    PC1,PC2,PRCCWSP     LOAD SPACER CCW              EU09002
         ICM   PC1,8,=X'1B'        SET TO TRIPLE SPACE          EU09002
         BAL   PL,CVRPPPUT         ADD SPACER CCW TO CHAIN      EU09002
         LM    BASE1,BASE2,CVRSAVE+64   RESTORE ADDRESSABILITY  EU09002
         BAL   PL,PPWRITE      FORCE A WRITE                    EU09002
         BAL   PL,PPCHECK      CHECK WRITE                      EU09002
         LM    BASE1,BASE2,CVRBSAVE   RE-LOAD BASE REG          EU09002
         MVC   CPCCWORK(8),CVRRPTNO  MOVE RPT NO TO PRT         EU09002
         MVI   CPCCWORK+8,C' ' BLANK LAST POSITION              EU09002
         MVC   CBLKCNT,=F'8'   SET CNT FOR 8 BLK LTRS           EU09002
         SLR   R1,R1           CLEAR REG 1                      EU09002
         ST    R1,CLNDISPL     CLEAR LINE DISPLACEMENT          EU09002
         BAL   PL,CBLKPRT          GO TO BLOCK LETTER ROUTINE   EU09002
         LM    PC1,PC2,PRCCWSP     GET SPACER CCW               EU09002
         ICM   PC1,8,=X'13'        SET TO DOUBLE SPACE          EU09002
         BAL   PL,CVRPPPUT         ADD SPACER CCW TO CHAIN      EU09002
         L     R1,CLNDISPL     GET DISPLACEMENT IN BUFFER       EU09002
         AL    R1,CBUFADDR     ADD BUFFER ORIGIN                EU09002
         MVC   0(132,R1),HDRLN34   MOVE COVER LINE 34 TO PRINT  EU09002
         BAL   PL,CVRPRTR          GO PRINT LINE 34             EU09002
         LM    PC1,PC2,PRCCWSP1    GET SINGLE SPACE CCW         EU09002
         BAL   PL,CVRPPPUT         ADD SPACER CCW TO CHAIN      EU09002
         LM    BASE1,BASE2,CVRSAVE+64  RESTORE ADDRESSABILITY   EU09002
         BAL   PL,PPWRITE      FORCE A WRITE                    EU09002
         BAL   PL,PPCHECK      CHECK WRITE                      EU09002
         LM    BASE1,BASE2,CVRBSAVE  RE-LOAD BASE REG           EU09002
         MVI   CPCCWORK,C' '      CLEAR WORK AREA               EU09002
         MVC   CPCCWORK+1(8),CPCCWORK    TO BLANKS              EU09002
         MVC   CPCCWORK(4),CVRBLDG MOVE BLDG NO. TO BLKPRT      EU09002
         MVC   CPCCWORK+5(4),CVRDCODE  MOVE DIST CODE TO BLKPRT EU09002
         MVC   CBLKCNT,=F'9'   SET CNT FOR 9 BLK LTRS           EU09002
         SLR   R1,R1           CLEAR REG 1                      EU09002
         ST    R1,CLNDISPL     CLEAR LINE DISPLACEMENT          EU09002
         BAL   PL,CBLKPRT          GO TO BLOCK LETTER ROUTINE   EU09002
         LM    PC1,PC2,PRCCWSP     GET 3 SPACE CCW              EU09002
         BAL   PL,CVRPPPUT         ADD SPACER CCW TO CHAIN      EU09002
         L     R1,CLNDISPL     GET DISPLACEMENT IN BUFFER       EU09002
         AL    R1,CBUFADDR     ADD BUFFER ORIGIN                EU09002
         MVI   0(R1),C' '          CLEAR PRINT                  EU09002
         MVC   1(131,R1),0(R1)       AREA TO BLANKS             EU09002
         MVC   10(8,R1),CVRJOBNO   MOVE JOB NO TO PRINT AREA    EU09002
         SLR   PC1,PC1             CLEAR REG 4 TO ZERO          EU09002
         IC    PC1,PPRCPYCT        GET COPY COUNT IN REG 4      EU09002
         AH    PC1,=H'1'           ADD 1 TO COUNT               EU09002
         STH   PC1,CVRCPYNO    SAVE COPY NO FOR END BANNER      EU09002
         CVD   PC1,CBLKWORK        CONVERT COPY COUNT TO DEC    EU09002
         OI    CBLKWORK+7,X'0F'    SET SICN TO POSITIVE         EU09002
         MVC   127(4,R1),=X'40212020'  GET EDIT PATTERN         EU09002
         ED    127(4,R1),CBLKWORK+6    EDIT COPY NO.TO PRINT    EU09002
         BAL   PL,CVRPRTR          GO WRITE LAST LINE           EU09002
         LM    BASE1,BASE2,CVRSAVE+64  RESTORE ADDRESSABILITY   EU09002
         BAL   PL,PPWRITE          FORCE A WRITE                EU09002
         BAL   PL,PPCHECK          CHECK WRITE                  EU09002
         LM    BASE1,BASE2,CVRBSAVE   RE-LOAD BASE REG          EU09002
         SP    CVRCNT,=P'+1'       SUBTRACT 1 FROM COVER COUNT  EU09002
         BNM   CVRPRT3             NOT ZERO DO AGAIN            EU09002
         B     CVREXIT             DONE GO TO EXIT              EU09002
         EJECT                                                  EU09002
CVRPRTR  EQU   *                                                EU09002
         ST    PL,CVRRETN          SAVE RETURN ADDRESS          EU09002
         CLI   PDEVTYPE+3,UCB3800  NON IMPACT DEVICE ?          EU09002
         BE    CVR3800             YES, DO NOT TRANSLATE        EU09002
         LA    PC1,CVRTTBL         GET TRANSLATE TABLE ADDRESS  EU09002
         TR    0(132,R1),0(PC1)    TRANSLATE TO 1403 CHARS      EU09002
CVR3800  EQU   *                                                EU09002
         LM    PC1,PC2,PRCCWID     GET PRINT CCW                EU09002
         AL    PC1,CBUFADDR    ADD BUFFER ORIGIN                EU09002
         AL    PC1,CLNDISPL       AND LINE DISPLACEMENT         EU09002
         BAL   PL,CVRPPPUT         ADD CCW TO OUTPUT CHAIN      EU09002
         L     R1,CLNDISPL     GET NEW                          EU09002
         LA    R1,132(,R1)       LINE DISPLACEMENT              EU09002
         ST    R1,CLNDISPL     SAVE LINE DISPLACEMENT           EU09002
         AL    R1,CBUFADDR     ADD BUFFER ORIGIN                EU09002
         L     PL,CVRRETN          GET RETURN ADDRESS           EU09002
         BR    PL                  RETURN                       EU09002
         EJECT                                                  EU09002
CBLKPRT  EQU   *               COVER BLOCK LETTER ROUTINE       EU09002
         ST    PL,CVRRETN      SAVE RETURN ADDRESS              EU09002
         MVC   CBLKWRK(9),CPCCWORK  SAVE TEXT                   EU09002
         OC    CPCCWORK,=9X'C0'   SHIFT ALL TO THE 4TH QUADRANT EU09002
         TR    CPCCWORK(9),BLOCKTR-192 TRANSLATE TO INDEX VALUE EU09002
         SLR   R4,R4           LINE 0 OF 12                     EU09002
CBLKBLD  STH   R4,CLNECNT      SAVE LINE COUNTER                EU09002
         ST    R1,CLNDISPL     SAVE NEW LINE DISPLACEMENT       EU09002
         AL    R1,CBUFADDR     ADD BUFFER ORIGIN                EU09002
         MVI   0(R1),C' '      FILL LINE                        EU09002
         MVC   1(131,R1),0(R1)   WITH BLANKS                    EU09002
         LA    R7,8            SCAN FOR                         EU09002
CBLKCNTR LA    R15,CBLKWRK(R7)   LAST                           EU09002
         CLI   0(R15),C' '        NON-                          EU09002
         BNE   CSKP510             BLANK                        EU09002
         BCT   R7,CBLKCNTR          CHARACTER                   EU09002
CSKP510  LA    R7,1(,R7)       COMPUTE                          EU09002
         MH    R7,=H'7'         BEGINNING                       EU09002
         SH    R7,=H'67'         PRINT POSITION                 EU09002
         LCR   R7,R7              TO CENTER                     EU09002
         LA    R5,0(R7,R1)         BLOCK LETTERS                EU09002
         SLR   R4,R4           SET FOR A LETTER INDEX OF 0      EU09002
CBLKLUP  IC    R7,CBLKWRK(R4)  USE RELATIVE TEXT LETTER         EU09002
         STC   R7,CPOSTSAV         TO FORM BLOCK TEXT           EU09002
         LA    R7,CPCCWORK(R4) CURRENT LETTER INDEX             EU09002
         SLR   R15,R15         CLEAR REGISTER                   EU09002
         ICM   R15,1,0(R7)     GET TRANSLATED LETTER INDEX      EU09002
         BZ    CBLKSTOR        BRANCH IF INDEX ZERO             EU09002
         BCTR  R15,0           DECREMENT BY 1                   EU09002
         MH    R15,=H'24'      CONVERT TO DISPLACEMENT          EU09002
         AH    R15,CLNECNT     SELECT FOR LINE WITHIN LETTER    EU09002
         LA    R15,BLOCKA(R15) LETTER MASK ADDRESS              EU09002
         ICM   R15,12,0(R15)   LETTER MASK BITS                 EU09002
CBLKSTOR LA    R7,12           BLOCK WIDTH OF 12                EU09002
CBLKLOOP ALR   R15,R15         SHIFT LEFT AND TEST HIGH BIT     EU09002
         BC    12,CSKP530      BRANCH IF OFF                    EU09002
         MVC   0(1,R5),CPOSTSAV OVERSTORE BLANK TO FORM BLOCK   EU09002
CSKP530  LA    R5,1(,R5)       INCREMENT COL NUMBER             EU09002
         BCT   R7,CBLKLOOP     BRANCH TO FILL 12 COLS           EU09002
         LA    R5,2(,R5)       2 BLANKS BETWEEN BLOCKS          EU09002
         LA    R4,1(,R4)       STEP TO NEXT LETTER INDEX        EU09002
         CL    R4,CBLKCNT      HAVE WE DONE 8 OR 9 BLOCKS       EU09002
         BL    CBLKLUP         BRANCH IF NO                     EU09002
         LM    PC1,PC2,PRCCWID GET PRINT CCW                    EU09002
         AL    PC1,CBUFADDR    ADD BUFFER ORIGIN                EU09002
         AL    PC1,CLNDISPL       AND LINE DISPLACEMENT         EU09002
         BAL   PL,CVRPPPUT     ADD CCW TO OUTPUT CHAIN          EU09002
         L     R1,CLNDISPL     GET NEW                          EU09002
         LA    R1,132(,R1)       LINE DISPLACEMENT              EU09002
CSKP540  LH    R4,CLNECNT      GET LINE COUNTER                 EU09002
         LA    R4,2(,R4)       STEP TO NEXT LINE                EU09002
         CH    R4,=H'24'       LAST LINE FINISHED ?             EU09002
         BL    CBLKBLD         BRANCH IF NO                     EU09002
         ST    R1,CLNDISPL     SAVE NEW LINE DISPLACEMENT       EU09002
         L     PL,CVRRETN      LOAD RETURN ADDRESS              EU09002
         BR    PL              RETURN TO CALLER                 EU09002
         SPACE 3                                                EU09002
*  FOLLOWING INSTRUCTION IS USED TO MOVE BREAKDOWN TO WORK      EU09002
         SPACE 1                                                EU09002
CVRMVE   MVC   CPCCWORK(*-*),CVRPBRKN    *** EXECUTE ONLY ***   EU09002
         EJECT                                                  EU09002
CVRPPPUT EQU   *    RE-LOADS JES BASE REGS AND GOES TO PPPUT    EU09002
         ST    PL,CVRPRETN         SAVE RETURN ADDRESS          EU09002
         LM    BASE1,BASE2,CVRSAVE+64   RESTORE JES PRPU ADDR   EU09002
         BAL   PL,PPPUT            ADD CCW TO CHAIN             EU09002
         LM    BASE1,BASE2,CVRBSAVE  RE-LOAD COVER BASE REG     EU09002
         L     PL,CVRPRETN         GET RETURN ADDRESS           EU09002
         BR    PL                  RETURN TO CALLER             EU09002
         EJECT                                                  EU09002
CVREXIT  EQU   *                                                EU09002
         LM    13,12,8(R9)     RESTORE REGISTERS                EU09002
         DROP  R9                  SUSPEND ADDRESSABILITY       EU09002
         BR    PL                  RETURN TO CALLER             EU09002
         EJECT                                                  EU09002
HDRLN1   DS    0CL132                                           EU09002
         DC    X'408C404040408C404040408C404040408C40404040'    EU09002
         DC    X'648C8C8C8CAE404040408C404040408C404040408C'    EU09002
         DC    X'8C8C8C8C8C40404040648C8C8C8CAE'                EU09002
         DC    12X'40'                                          EU09002
         DC    63X'8C'                                          EU09002
HDRLN2   DS    0CL132                                           EU09002
         DC    X'408C404040408C404040408C404040408C40404040'    EU09002
         DC    X'8C404040408C404040408C404040408C404040408C'    EU09002
         DC    X'4040404040404040408C404040408C'                EU09002
         DC    12X'40'                                          EU09002
         DC    X'8C',12X'40',C'REPORT',13X'40',C'DATE'          EU09002
         DC    26X'40',X'8C'                                    EU09002
HDRLN3   DS    0CL132                                           EU09002
         DC    X'408C404040408C404040408C404040408C40404040'    EU09002
         DC    X'8C4040404040404040408C404040408C404040408C'    EU09002
         DC    X'4040404040404040408C4040404040'                EU09002
         DC    12X'40'                                          EU09002
         DC    X'8C',61X'40',X'8C'                              EU09002
HDRLN4   DS    0CL132                                           EU09002
         DC    X'408C8C8C8C8C8C404040408C404040408C40404040'    EU09002
         DC    X'8C4040404040404040408C8C8C8C8C8C404040408C'    EU09002
         DC    X'8C8C8C404040404040638C8C8C8CAE'                EU09002
         DC    12X'40'                                          EU09002
         DC    X'8C',61X'40',X'8C'                              EU09002
HDRLN5   DS    0CL132                                           EU09002
         DC    X'408C404040408C404040408C404040408C40404040'    EU09002
         DC    X'8C4040408C8C404040408C404040408C404040408C'    EU09002
         DC    X'40404040404040404040404040408C'                EU09002
         DC    12X'40'                                          EU09002
         DC    X'8C',61X'40',X'8C'                              EU09002
HDRLN6   DS    0CL132                                           EU09002
         DC    X'408C404040408C404040408C404040408C40404040'    EU09002
         DC    X'8C404040408C404040408C404040408C404040408C'    EU09002
         DC    X'4040404040404040408C404040408C'                EU09002
         DC    12X'40'                                          EU09002
         DC    X'8C',61X'40',X'8C'                              EU09002
HDRLN7   DS    0CL132                                           EU09002
         DC    X'408C404040408C40404040638C8C8C8C6240404040'    EU09002
         DC    X'638C8C8C8C62404040408C404040408C404040408C'    EU09002
         DC    X'8C8C8C8C8C40404040638C8C8C8C62'                EU09002
         DC    12X'40'                                          EU09002
         DC    X'8C',61X'40',X'8C'                              EU09002
HDRLN8   DS    0CL132                                           EU09002
         DC    X'404040404040404040404040404040404040404040'    EU09002
         DC    X'404040404040404040404040404040404040404040'    EU09002
         DC    X'404040404040404040404040404040'                EU09002
         DC    12X'40'                                          EU09002
         DC    X'8C',61X'40',X'8C'                              EU09002
HDRLN9   DS    0CL132                                           EU09002
         DC    X'4040404040408C8C8C8C8CAE40404040648C8C8C8C'    EU09002
         DC    X'AE40404040648C8C8C8CAE404040408CAE40404064'    EU09002
         DC    X'8C404040408C8C8C8C8CAE40404040'                EU09002
         DC    12X'40'                                          EU09002
         DC    X'8C',61X'40',X'8C'                              EU09002
HDRLN10  DS    0CL132                                           EU09002
         DC    X'4040404040408C404040408C404040408C40404040'    EU09002
         DC    X'8C404040408C404040408C404040408C8CAE40648C'    EU09002
         DC    X'8C404040408C404040408C40404040'                EU09002
         DC    12X'40'                                          EU09002
         DC    X'8C',61X'40',X'8C'                              EU09002
HDRLN11  DS    0CL132                                           EU09002
         DC    X'4040404040408C404040408C404040408C40404040'    EU09002
         DC    X'40404040408C4040404040404040408C638C8C8C62'    EU09002
         DC    X'8C404040408C404040408C40404040'                EU09002
         DC    12X'40'                                          EU09002
         DC    X'8C',8X'40',C'BLDG',7X'40',C'M/S',9X'40'        EU09002
         DC    C'DISTRIBUTION',X'40',C'CODE',13X'40',X'8C'      EU09002
HDRLN12  DS    0CL132                                           EU09002
         DC    X'4040404040408C8C8C8C8C6240404040638C8C8C8C'    EU09002
         DC    X'AE404040408C4040404040404040408C40638C6240'    EU09002
         DC    X'8C404040408C404040408C40404040'                EU09002
         DC    12X'40'                                          EU09002
         DC    X'8C',61X'40',X'8C'                              EU09002
HDRLN13  DS    0CL132                                           EU09002
         DC    X'4040404040408C40408CAE40404040404040404040'    EU09002
         DC    X'8C404040408C4040408C8C404040408C4040404040'    EU09002
         DC    X'8C404040408C404040408C40404040'                EU09002
         DC    12X'40'                                          EU09002
         DC    63X'8C'                                          EU09002
HDRLN14  DS    0CL132                                           EU09002
         DC    X'4040404040408C4040638CAE404040408C40404040'    EU09002
         DC    X'8C404040408C404040408C404040408C4040404040'    EU09002
         DC    X'8C404040408C404040408C40404040'                EU09002
         DC    12X'40'                                          EU09002
         DC    X'8C',X'40',C'(',2X'40',C')',2X'40',C'CHECK'     EU09002
         DC    X'40',C'HERE',X'40',C'IF',X'40',C'THIS',X'40'    EU09002
         DC    C'REPORT',X'40',C'COPY',X'40',C'NO',X'40'        EU09002
         DC    C'LONGER',X'40',C'NEEDED',X'40',C'-',X'40'       EU09002
         DC    C'OR',2X'40',X'8C'                               EU09002
HDRLN15  DS    0CL132                                           EU09002
         DC    X'4040404040408C404040638C40404040638C8C8C8C'    EU09002
         DC    X'6240404040638C8C8C8C62404040408C4040404040'    EU09002
         DC    X'8C404040408C8C8C8C8C6240404040'                EU09002
         DC    12X'40'                                          EU09002
         DC    X'8C',X'40',C'(',2X'40',C')',2X'40',C'CHECK'     EU09002
         DC    X'40',C'HERE',X'40',C'IF',X'40',C'MAILING',X'40' EU09002
         DC    C'INFORMATION',X'40',C'IS',X'40',C'INCORRECT'    EU09002
         DC    X'40',C'AND',4X'40',X'8C'                        EU09002
HDRLN16  DS    0CL132                                           EU09002
         DC    X'404040404040404040404040404040404040404040'    EU09002
         DC    X'404040404040404040404040404040404040404040'    EU09002
         DC    X'404040404040404040404040404040'                EU09002
         DC    12X'40'                                          EU09002
         DC    X'8C',5X'40',C'PLEASE',X'40',C'FILL',X'40',C'IN' EU09002
         DC    X'40',C'CORRECT',X'40',C'INFORMATION',X'40'      EU09002
         DC    C'BELOW:',15X'40',X'8C'                          EU09002
HDRLN17  DS    0CL132                                           EU09002
         DC    X'408C8C8CAE40648C8CAE408C8C8C8C8C40648C8CAE'    EU09002
         DC    X'4040404040648C8CAE408C8C8C8C408CAE40408C40'    EU09002
         DC    X'8C8C8C8C8C408C8C8C8C408C8C8CAE'                EU09002
         DC    12X'40'                                          EU09002
         DC    X'8C',X'40',C'NAME',2X'40',C'-',2X'40',C'SOURCE' EU09002
         DC    2X'40',C'-',X'40',C'BLDG',X'40',C'-',X'40'       EU09002
         DC    C'M/S',X'40',C'-',X'40',C'DIST',X'40',C'-',X'40' EU09002
         DC    C'SUPV.',X'40',C'SIGN.',X'40',C'-',X'40'         EU09002
         DC    C'EXT',4X'40',X'8C'                              EU09002
HDRLN18  DS    0CL132                                           EU09002
         DC    X'408C40408C408C40408C4040408C4040408C40408C'    EU09002
         DC    X'40404040408C40408C408C404040408C8CAE408C40'    EU09002
         DC    X'40408C4040408C404040408C40408C'                EU09002
         DC    12X'40'                                          EU09002
         DC    X'8C',61X'40',X'8C'                              EU09002
HDRLN19  DS    0CL132                                           EU09002
         DC    X'408C40408C408C8C8C8C4040408C4040408C8C8C8C'    EU09002
         DC    X'40404040408C404040408C8C8C40408C638CAE8C40'    EU09002
         DC    X'40408C4040408C8C8C40408C8C8C62'                EU09002
         DC    12X'40'                                          EU09002
         DC    X'8C',3X'40',C'THEN',X'40',C'MAIL',X'40',C'THIS' EU09002
         DC    X'40',C'COVER',X'40',C'TO:',X'40',C'BLDG.',X'40' EU09002
         DC    C'350',2X'40',C'M/S',2X'40',C'1211',13X'40',X'8C' U09002
HDRLN20  DS    0CL132                                           EU09002
         DC    X'408C40408C408C40408C4040408C4040408C40408C'    EU09002
         DC    X'40404040408C40408C408C404040408C40638C8C40'    EU09002
         DC    X'40408C4040408C404040408C408CAE'                EU09002
         DC    12X'40'                                          EU09002
         DC    X'8C',19X'40',C'EL',X'40',C'SEGUNDO',X'40'       EU09002
         DC    C'INFO:',X'40',C'X88031',19X'40',X'8C'           EU09002
HDRLN21  DS    0CL132                                           EU09002
         DC    X'408C8C8C62408C40408C4040408C4040408C40408C'    EU09002
         DC    X'4040404040638C8C62408C8C8C8C408C4040638C40'    EU09002
         DC    X'40408C4040408C8C8C8C408C40638C'                EU09002
         DC    12X'40'                                          EU09002
         DC    63X'8C'                                          EU09002
HDRLN34  DS    0CL132                                           EU09002
         DC    20CL1' '                                         EU09002
         DC    CL7'B L D G'                                     EU09002
         DC    57CL1' '                                         EU09002
         DC    CL32'D I S T R I B U T I O N  C O D E'           EU09002
         DC    16CL1' '                                         EU09002
         EJECT                                                  EU09002
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * EU09002
*                                                             * EU09002
*                  REPORT COVER LITERAL POOL                  * EU09002
*                                                             * EU09002
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * EU09002
         SPACE 2                                                EU09002
         DS    0D                                               EU09002
         LTORG                                                  EU09002
         EJECT                                                  EU09002
CVRTTBL  DS    0CL256                                           EU09002
         DC    X'40404040404040404040404040404040'              EU09002
         DC    X'40404040404040404040404040404040'              EU09002
         DC    X'40404040404040404040404040404040'              EU09002
         DC    X'40404040404040404040404040404040'              EU09002
         DC    X'40404040404040404040404B4C4D4E4F'              EU09002
         DC    X'50404040404040404040405B5C5D5E5F'              EU09002
         DC    X'60614040404040404040406B6C6D6E6F'              EU09002
         DC    X'404040404040404040407A7B7C7D7E7F'              EU09002
         DC    X'4040404040404040404040405C404040'              EU09002
         DC    X'40404040404040404040404040404040'              EU09002
         DC    X'40404040404040404040404040404040'              EU09002
         DC    X'40404040404040404040404040404040'              EU09002
         DC    X'40C1C2C3C4C5C6C7C8C9404040404040'              EU09002
         DC    X'40D1D2D3D4D5D6D7D8D9404040404040'              EU09002
         DC    X'4040E2E3E4E5E6E7E8E9404040404040'              EU09002
         DC    X'F0F1F2F3F4F5F6F7F8F9404040404040'              EU09002
         EJECT                                                  EU09002
CVRWORKA DSECT             SAVE AND WORK AREA FOR COVER ROUTINE EU09002
CVRSAVE  DS    18F         REGISTER SAVE AREA                   EU09002
CVRBSAVE DS    2F              SAVE AREA FOR COVER BASE REGS    EU09002
CVRRETN  DS    F           SAVE AREA FOR BRANCH & LINKS         EU09002
CVRPRETN DS    F               PPPUT BRANCH & LINK SAVE AREA    EU09002
         DS    F                   UNUSED                       EU09002
CBUFADDR DS    F           GOTTEN BUFFER ADDRESS                EU09002
CLNDISPL DS    F               LINE DISPLACEMENT WITHIN BUFFER  EU09002
CBLKCNT  DS    F           BLOCK LETTER COUNT                   EU09002
CBLKWRK  DS    0CL9        BLOCK LETTER &                       EU09002
CBLKWORK DS    2F          8 BYTE WORK AREA                     EU09002
         DS    CL1         HOLD AREA                            EU09002
CPCCWORK DS    CL9         BLOCK LETTER TRANSLATE AREA          EU09002
CPOSTSAV DS    CL1         CHARACTER SAVE AREA                  EU09002
CVRCNT   DS    PL1         COVER LOOP COUNT                     EU09002
CLNECNT  DS    H           BLOCK LETTER LINE COUNT              EU09002
CVRCPYNO DS    H               SAVE COPY NO FOR END BANNER      EU09002
CVRDATE  DS    0CL12       DATE PRINTED HOLD AREA               EU09002
CVRMON   DS    CL3         MONTH                                EU09002
         DS    CL1                                              EU09002
CVRDAY   DS    CL2         DAY                                  EU09002
CVRF19   DS    CL4         , 19                                 EU09002
CVRYR    DS    CL2         YEAR                                 EU09002
CVRFSTSW DS    CL1             FIRST TIME SWITCH. FF IF NOT FST EU09002
CVREIND  DS    CL1             END OF JOB INDICATOR. FF IF END  EU09002
CVRPCTRL DS    0CL22                                            EU09002
CVRPJOBN DS    CL8             PREV JOB NO.                     EU09002
CVRPRPT  DS    CL8             PREV RPT NO.                     EU09002
CVRPBRKN DS    CL6             PREV BRKDN                       EU09002
         DS    CL103               UNUSED                       EU09002
         SPACE 1                                                EU09002
CVRRCD   DS    0CL133      .COVER OR .REPORT INPUT RCD          EU09002
CVRCTLR  DS    0CL7        .REPORT                              EU09002
CVRCTLC  DS    CL6         .COVER                               EU09002
         DS    CL1                                              EU09002
         DS    CL1             UNUSED                           EU09002
CVRSTRT  DS    XL1         STARTING COVER NO.                   EU09002
CVREND   DS    XL1         ENDING COVER NO.                     EU09002
         DS    CL3                                              EU09002
CVRCTRL  DS    0CL22                                            EU09002
CVRJOBNO DS    CL8         JOB NO.                              EU09002
CVRRPTNO DS    CL8         REPORT NO.                           EU09002
CVRBRKN  DS    CL6         BREAKDOWN CODE                       EU09002
CVRTBRK  DS    CL12        TYPE OF BREAKDOWN                    EU09002
CVRDCODE DS    CL4         DISTRIBUTION CODE                    EU09002
CVRRECP  DS    CL32        RECIPIENT                            EU09002
CVRBLDG  DS    CL4         BUILDING NO.                         EU09002
CVRMS    DS    CL6         MAIL STATION                         EU09002
CVRSOUR  DS    0CL6        SOURCE CODE                          EU09002
CVRSDIV  DS    CL2         DIVISION                             EU09002
CVRSDEP  DS    CL2         DEPARTMENT                           EU09002
CVRSGRP  DS    CL2         GROUP                                EU09002
CVRTITLE DS    CL32        REPORT TITLE                         EU09002
         DS    CL2         NO COPIES THIS COVER                 EU09002
         SPACE 2                                                EU09002
CVRBUFF  DS    0CL3696         COVER BUILD AREA 28 X 132        EU09002
         DS    28CL132                                          EU09002
CVRSLNG  EQU   *-CVRWORKA  LENGTH OF SAVE AREA                  EU09002
         EJECT                                                  EU09002
HASPPRPU CSECT                                                  EU09002
$DLENGTH $DLENGTH              CONPUTE CONTROL SECTION LENGTH   EU09002
         END
./ ENDUP
./ ADD LIST=ALL,LEVEL=01,SOURCE=0,NAME=EU09003
++ PTF (EU09003)     /* EL SEGUNDO ACCOUNT NO VERIFICATION */ .
++ VER (Z037) .
++ SRCUPD (HASPRDR) .
./ CHANGE NAME=HASPRDR
         CLI   JCTJOBID,C'J'       STARTED OR TSO TASK ?        EU09003
         MVI   RSAVE1,0            RESET ERROR FIELD TO ZERO    EU09003
         BE    *+8                 YES, GO PROCESS ACCT FIELD   EU09003
         B     RSCNRET            STU OR TSO , BYPASS ACCT SCAN EU09003
*              THIS LINE DELETED BY HUGHES EL SEGUNDO USER FIX  EU09003
*              THIS LINE DELETED BY HUGHES EL SEGUNDO USER FIX  EU09003
         CLI   JCTWORK,C'('        DOES ACCT FLD START WITH A ( EU09003
         BNE   RBADACCT            NO, DROP JOB                 EU09003
         CLI   0(R15),C')'         DOES ACCT FLD END WITH A )   EU09003
         BNE   RBADACCT            NO, DROP JOB                 EU09003
         BH    *+8                 BR IF 2 OR GREATER           EU09003
         MVC   RSCNFLDL,RSCNF1     SET SCAN LENGTH TO 1         EU09003
         BAL   RL1,RSCNFLD2        TEST FOR FIELD 1 - 1 POS DIG EU09003
         B     *+8                 FIELD PRESENT IF RETURN HERE EU09003
         B     RSCNTGT1            BRANCH IF FIELD NOT PRESENT  EU09003
         NOP   *+4       NOP TO ADJUST FOR *+12 BR AT RSCNTGT1  EU09003
         MVC   RSCNFLDL,RSCNF3     SET SCAN LENGTH TO 3         EU09003
         BAL   RL1,RSCNFLD1        TEST FOR FIELD 2 - 3 POS DIG EU09003
         B     *+8                 FIELD PRESENT IF RETURN HERE EU09003
         B     RSCNTGT1            BRANCH IF FIELD NOT PRESENT  EU09003
         ST    R0,JCTROOMN         STORE BLDG. NO. IN ROOM      EU09003
         MVC   RSCNFLDL,RSCNF6     SET SCAN LENGTH TO 6         EU09003
         BAL   RL1,RSCNFLD1        TEST FOR FIELD 3 - 6 POS DIG EU09003
         B     *+8                 FIELD PRESENT IF RETURN HERE EU09003
         B     RSCNTGT1            BRANCH IF FIELD NOT PRESENT  EU09003
         ST    R0,JCTACCTN         STORE ACCOUNT NO.            EU09003
         MVC   RSCNFLDL,RSCNF2     SET SCAN LENGTH TO 2         EU09003
         BAL   RL1,RSCNFLD1        TEST FOR FIELD 4 - 2 POS DIG EU09003
         B     *+8                 FIELD PRESENT IF RETURN HERE EU09003
         B     RSCNTGT1            BRANCH IF FIELD NOT PRESENT  EU09003
         NOP   *+4       NOP TO ADJUST FOR *+12 BR AT RSCNTGT1  EU09003
         MVC   RSCNFLDL,RSCNF2     SET SCAN LENGTH TO 2         EU09003
         BAL   RL1,RSCNFLD1        TEST FOR FIELD 5 - 2 POS DIG EU09003
         B     *+8                 FIELD PRESENT IF RETURN HERE EU09003
         B     RSCNTGT1            BRANCH IF FIELD NOT PRESENT  EU09003
         NOP   *+4       NOP TO ADJUST FOR *+12 BR AT RSCNTGT1  EU09003
         MVC   RSCNFLDL,RSCNF5     SET SCAN LENGTH TO 5         EU09003
         BAL   RL1,RSCNFLD1        TEST FOR FIELD 6 - 5 POS DIG EU09003
         B     *+8                 FIELD PRESENT IF RETURN HERE EU09003
         B     RSCNTGT1            BRANCH IF FIELD NOT PRESENT  EU09003
         MVI   RSAVE1,0            INDICATE JOB CD CHK OK.      EU09003
         SPACE 2                                                EU09003
         B     RSCNNEXT            INCREMENT FOR NEXT FIELD     EU09003
         DC    XL4'00'             JES KILLER INSTRUCTION       EU09003
*                           JES COMES HERE IF ANY FIELD IN THE  EU09003
*                           ACCOUNT FIELD HAS A 12-11-0 PUNCH.  EU09003
*        BCTR  R0,0                DECREMENT FOR MACHINE LENGTH EU09003
         C     R0,RSCNFLDL         TEST FIELD LENGTH            EU09003
         BCTR  R0,0                NOW DECREMENT FOR MACH LNG   EU09003
         BE    *+8(RL2)            BR IF FIELD CORRECT LENGTH   EU09003
         B     RBADACCT            BR IF FIELD WRONG LENGTH     EU09003
         CH    R0,=H'03'           IS LENGTH EQUAL TO 4         EU09003
         BNH   *+8                 BRANCH AROUND                EU09003
         LA    R0,3                SET LENGTH TO 4              EU09003
RALFATBL DC    91AL1(4),AL1(0,4,4,4,4,0),10AL1(4),AL1(12)       EU09003
         DC    4AL1(4)                                          EU09003
         DC    AL1(16),10AL1(4),AL1(0,0),68AL1(4),9AL1(0)       EU09003
         DC    7AL1(4)                                          EU09003
         DC    9AL1(0),8AL1(4),8AL1(0),6AL1(4),10AL1(0),5AL1(4) EU09003
         DC    AL1(8)                                           EU09003
RSCNF6   DC    F'6'                FIELDS LENGTH DEFINERS       EU09003
RSCNF5   DC    F'5'                                             EU09003
RSCNF3   DC    F'3'                                             EU09003
RSCNF2   DC    F'2'                                             EU09003
RSCNF1   DC    F'1'                                             EU09003
RSCNFLDL DC    F'0'                FIELD LENGTH TEST AREA       EU09003
./ ENDUP
./ ADD LIST=ALL,LEVEL=01,SOURCE=0,NAME=EU09004
++ PTF (EU09004)    /* BILLING LOG NO VALIDATION ROUTINE */ .
++ VER (Z037) .
++ SRCUPD (HASPRDR) .
./ CHANGE NAME=HASPRDR
         LR    R9,R1             SAVE ACCT NO. FLD ADDRESS FOR  EU09004
*                                 BILLING LOG NO. VALIDATION.   EU09004
**************************************************************  EU09004
*                                                            *  EU09004
*        EL SEGUNDO BILLING LOG NUMBER VALIDATION ROUTINE    *  EU09004
*                                                            *  EU09004
**************************************************************  EU09004
BLNP1    EQU   *                                                EU09004
         LR    R2,R9               MOVE ACCT NO ADDR TO REG 2   EU09004
         LA    RL2,4               SET SEARCH SWITCH TO BRANCH  EU09004
         TM    BLNFIL+48,X'10'     IS BLN FILE OPEN?            EU09004
         BO    BLNP5               YES                          EU09004
BLNP3    EQU   *                                                EU09004
         OPEN  (BLNFIL,INPUT)      NO, OPEN FILE AS INPUT       EU09004
BLNP4    EQU   *                                                EU09004
         GET   BLNFIL,BLNINA       READ A RECORD                EU09004
BLNP5    EQU   *                                                EU09004
         CLC   1(5,R2),BLN         JOB BLN VS BLN FILE          EU09004
         BH    BLNP4               JOB BLN GTR, GET NEXT BLN    EU09004
         BL    BLNP6               JOB BLN LESS THAN SEE IF ERR EU09004
         B     RSCNRET             BLN OK RETURN                EU09004
BLNP6    EQU   *                                                EU09004
         B     *+4(RL2)            SEARCH SWITCH BRANCH         EU09004
         B     BLNP9               THIS BRANCH IF INVALID BLN   EU09004
         LA    RL2,0               SET SEARCH SWITCH TO NOP     EU09004
         CLOSE BLNFIL              CLOSE BLN FILE               EU09004
         B     BLNP3                                            EU09004
BLNP9    EQU   *                                                EU09004
         BAL   RL1,RPUT            ADD CARD TO OUTPUT FILE      EU09004
         OI    RCARDLRC,LRC1CCTL+LRC1TASA   SET ASA CARR CTL    EU09004
         MVI   RDRCCTL,C'0'        FORCE DOUBLE SPACE           EU09004
         MVI   0(RPI),C'*'         FILL OUT CARD IMAGE          EU09004
         MVC   1(78,RPI),0(RPI)     WITH ASTERISKS              EU09004
         MVI   79(RPI),C' '        ADD TRAILING BLANK           EU09004
         MVC   (79-28)/2(28,RPI),BLNERRMG+2  MOVE IN MESSAGE    EU09004
         BAL   RL1,RPUT            ADD ERROR MESSAGE TO OUTPUT  EU09004
        $WTO   BLNERRMG,L'BLNERRMG,JOB=YES,              NOTIFY EU09004C
               ROUTE=$LOG+$UR,CLASS=$TRIVIA,PRI=$ST    OPERATOR EU09004
         BAL   RL1,RJOBKILL        KILL JOB                     EU09004
         B     RSCNRET             RETURN                       EU09004
BLNP10   EQU   *                                                EU09004
         MVI   BLNINA,X'FF'        FILL IN AREA                 EU09004
         MVC   BLNINA+1(19),BLNINA   WITH X'FF'                 EU09004
         B     BLNP5                                            EU09004
BLNERRMG $MSG  999,' INVALID BILLING LOG NUMBER '               EU09004
         SPACE 2                                                EU09004
BLNFIL   DCB   DDNAME=BLNFILE,DSORG=PS,EODAD=BLNP10,EROPT=ACC,  EU09004C
               MACRF=(GM),RECFM=FB,LRECL=25                     EU09004
         SPACE 2                                                EU09004
BLNINA   DS    0CL25               BILLING LOG NO. INPUT AREA   EU09004
BLN      DC    CL5' '              BILLING LOG NO.              EU09004
         DC    CL20' '             NOT USED                     EU09004
         SPACE 2                                                EU09004
./ ENDUP
./ ADD LIST=ALL,LEVEL=01,SOURCE=0,NAME=EU09006
++ PTF (EU09006)   /* SET JOBS MESSAGE CLASS TO A */ .
++ VER (Z037) .
++ SRCUPD (HASPRDR) .
./ CHANGE NAME=HASPRDR
         MVI   JCTMCLAS,C'A'       SET MSGCLASS TO A            EU09006
         CLI   JCTJOBID,C'J'       IS THIS A JOB JCT ?          EU09006
         BE    *+10                YES, LEAVE MSGCLASS AT A     EU09006
./ ENDUP
./ ADD LIST=ALL,LEVEL=01,SOURCE=0,NAME=EU09007
++ PTF (EU09007) .   /* PUNCH BANNER CARD */
++ VER (Z037) .
++ SRCUPD (HASPPRPU) .
./ CHANGE NAME=HASPPRPU
PUNCHRM  DS    0H                                               EU09007
         LA    R1,BUFSTART         ADDRESS BUFFER AS WORK AREA  EU09007
         MVI   0(R1),X'6A'         SETUP 12-11 LACE PUNCH       EU09007
         MVC   1(79,R1),0(R1)      PROPAGATE LACE CHARACTER     EU09007
         MVC   10(8,R1),JCTNAME    MOVE OS JOBNAME TO LACE CARD EU09007
         MVC   22(20,R1),JCTPNAME  MOVE PROGR NAME TO LACE CARD EU09007
         MVC   46(8,R1),JCTJOBID   MOVE JES JOB NO TO LACE CARD EU09007
*              THIS LINE DELETED BY HUGHES EL SEGUNDO USER FIX  EU09007
*              THIS LINE DELETED BY HUGHES EL SEGUNDO USER FIX  EU09007
*              THIS LINE DELETED BY HUGHES EL SEGUNDO USER FIX  EU09007
*              THIS LINE DELETED BY HUGHES EL SEGUNDO USER FIX  EU09007
*              THIS LINE DELETED BY HUGHES EL SEGUNDO USER FIX  EU09007
*              THIS LINE DELETED BY HUGHES EL SEGUNDO USER FIX  EU09007
*              THIS LINE DELETED BY HUGHES EL SEGUNDO USER FIX  EU09007
*              THIS LINE DELETED BY HUGHES EL SEGUNDO USER FIX  EU09007
*              THIS LINE DELETED BY HUGHES EL SEGUNDO USER FIX  EU09007
*              THIS LINE DELETED BY HUGHES EL SEGUNDO USER FIX  EU09007
*              THIS LINE DELETED BY HUGHES EL SEGUNDO USER FIX  EU09007
*              THIS LINE DELETED BY HUGHES EL SEGUNDO USER FIX  EU09007
*              THIS LINE DELETED BY HUGHES EL SEGUNDO USER FIX  EU09007
*              THIS LINE DELETED BY HUGHES EL SEGUNDO USER FIX  EU09007
         ICM   PC1,8,=X'0D'        CONVERT CCW TO PRINT LINE 1  EU09007
         BAL   PL,PPPUT            ADD CCW TO CHAIN             EU09007
*        MVI   PCCWORK,X'01'  DEFAULT 3525 CC = STKR 1  OZ33253/EU09007
         MVI   PCCWORK,X'41'  DEFAULT 3525 CC = STACKER 2       EU09007
*  ABOVE INSTRUCTION WAS CHANGED TO FORCE DEFAULT TO            EU09007
*    STACKER 2 RATHER THAN IBM'S DEFAULT OF STACKER 1.          EU09007
               DBC3E34E03E541E641000B' 3525 ASA TO MCH CNVRT    EU09007
*  E501 CHANGED TO E541 TO FORCE ALL CARDS TO DROP INTO         EU09007
*   STACKER 2 INSTEAD OF STACKER 1 WHICH WAS DEFAULT.           EU09007
./ ENDUP
./ ADD LIST=ALL,LEVEL=01,SOURCE=0,NAME=EU09008
++ PTF (EU09008)     /* FORCE ALL CARDS TO INTERPRET ON 3525 */ .
++ VER (Z037) .
++ SRCUPD (HASPPRPU) .
./ CHANGE NAME=HASPPRPU
*              THIS LINE DELETED BY HUGHES EL SEGUNDO USER FIX  EU09008
*              THIS LINE DELETED BY HUGHES EL SEGUNDO USER FIX  EU09008
./ ENDUP
./ ADD LIST=ALL,LEVEL=01,SOURCE=0,NAME=EU10000
++ PTF (EU10000).
++ VER (Z037)               /*
***********************************************************************
*                                                                     *
*        THIS IS TO ADD THE INTERPERT TABLE INTAB06 FOR TSO/VTAM      *
*        LOGON                                                        *
*                                                                     *
*                                                BY  A.R.F.H          *
*                                                                     *
***********************************************************************
                         */.
++ MOD (INTAB06) LKLIB(LOCAL).
++ PTF (EU10010).
++ VER (Z037) PRE(UZ18717) /*
***********************************************************************
*                                                                     *
*        THIS IS TO CHANGE THE WAIT TIME FROM 5 TO 1 MINUTE BEFORE    *
*        NETSOL ISSUES THE NEW MESSAGE :  LOGON OR SIGNON             *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                BY  A.R.F.H          *
*                                                                     *
***********************************************************************
                         */.
++ ZAP (ISTNSC00) .
NAME ISTNSC00 NETSOL
VER  F4 4130,0005   LA    R3,5
REP  F4 4130,0001   LA    R3,1
NAME ISTNSC00 MSGCSECT
VER  017A E3C8,C9E2,40E3,C5D9,D4C9,D5C1,D340,C9E2 'THIS TERMINAL IS'
VER  018A 40D3,D6C7,C7C5,C440,D6D5,40E3,D640,E3C8 ' LOGGED ON TO TH'
VER  019A C540,D5C5,E3E6,D6D9,D240,E2D6,D3C9,C3C9 'E NETWORK SOLICI'
VER  01AA E3D6,D9                                 'TOR'
REP  017A 4040,4040,4040,4040,D3D6,C7D6,D540,4040  '        LOGON   '
REP  018A D6D9,4040,4040,4040,E2C9,C7D5,D6D5,4040  'OR      SIGNON  '
REP  019A 4040,4040,4040,4040,4040,4040,4040,4040  '                '
REP  01AA 4040,40                                  '   '
./ ADD LIST=ALL,LEVEL=01,SOURCE=0,NAME=EU11000
++ PTF (EU11000) /*ADD DSNAME AND VOLSER TO IEBCOPY MESSAGES */ .
++ VER (Z037) PRE(UZ14392) .
++ ZAP (IEBVMS) .
 EXPAND IEBVMS(80)
NAME IEBCOPY IEBVMS
VER 0176 41604B45
VER 03EC 00000000,00000000,00000000,00000000
VER 03FC 00000000,00000000,00000000,00000000
VER 040C 00000000
VER 0550 00000000,00000000,00000000,00000000
VER 0560 00000000,00000000,00000000,00000000
VER 0570 00000000,00000000,00000000,00000000
VER 0580 00000000,00000000,00000000,00000000
VER 058C 00000000,00000000
REP 03EC D5024B49A57E     PATCH  CLC   LINE+3(3),C144
REP 03F2 4770A3FE                BNE   L161
REP 03F6 41604B79                LA    R6,LINE+51
REP 03FA 47F0A55E                B     MOVE
REP 03FE D5024B49A581     L161   CLC   LINE+3(3),C161
REP 0404 4770A550                BNE   L166
REP 0408 41604B69                LA    R6,LINE+35
REP 040C 47F0A55E                B     MOVE
REP 0550 D5024B49A584     L166   CLC   LINE+3(3),C166
REP 0556 4770A576                BNE   DONE
REP 055A 41604B64                LA    R6,LINE+30
REP 055E D2066000A587     MOVE   MVC   0(7,R6),TAG1
REP 0564 D209600DA58E            MVC   13(10,R6),TAG2
REP 056A D20560074550            MVC   7(6,R6),OUTVOL
REP 0570 D22B60174556            MVC   23(44,R6),OTDSNAME
REP 0576 41604B45         DONE   LA    R6,MSGBUF (DISPL INSTR)
REP 057A 47F0A17A                B     MAINLINE
REP 057E F1F4F4           C144   DC    CL3'144'
REP 0581 F1F6F1           C161   DC    CL3'161'
REP 0584 F1F6F6           C166   DC    CL3'166'
REP 0587 E5D6D3E2C5D97E   TAG1   DC    C'VOLSER='          TAG1
REP 058E 40C4C1E3C140E2C5E37E    DC    C' DATA SET='       TAG2
REP 0176 47F0A3EC                B     PATCH
IDRDATA EU11000
./ ADD LIST=ALL,LEVEL=01,SOURCE=0,NAME=EU18000
++ PTF (EU18000).
++ VER (Z037)  /*
*
*         TRANSZAP - TCAM - AESC ZAP TO TTYB TRANSLATE TABLE
*                    TO SUPPORT LOWER CASE, BACKSPACE AS DELETE
*                    CHARACTER AND LINE FEED ON AUTO LINE PROMPT.
*
                         */.
++ ZAP (IEDQ21).
 NAME IEDQ21
 VER 000C 3F3F
 VER 0012 3F3F
 VER 0014 3F3F
 VER 001A 3F3F
 VER 0022 3F3F
 VER 002A 3F3F
 VER 0032 3F3F
 VER 003A 3F3F
 VER 004A 3F3F
 VER 0052 3F3F
 VER 005A 3F3F
 VER 0062 3F3F
 VER 006A 3F3F
 VER 0072 3F3F
 VER 007A 3F3F
 VER 008A 3F3F
 VER 0092 3F3F
 VER 009A 3F3F
 VER 00A2 3F3F
 VER 00AA 3F3F
 VER 00B2 3F3F
 VER 00B4 3F26
 VER 00BA 3F3F
 VER 00CA 3F3F
 VER 00D2 3F3F
 VER 00DA 3F3F
 VER 00EA 3F3F
 VER 00F2 3F3F
 VER 00FA 3F3F
 VER 011A 5CFF
 VER 0184 5C82,42C3,22A3,63E2,1293
 VER 0194 5C53,D233,B272,F30A,8B4B
 VER 01A6 CA2B,AA6A,EB1B,9A5A
 REP 000C 3F05
 REP 0012 3F97
 REP 0014 3F16
 REP 001A 3F88
 REP 0022 A7A7
 REP 002A 3F84
 REP 0032 A3A3
 REP 003A 9393
 REP 004A 3F82
 REP 0052 9999
 REP 005A 9191
 REP 0062 3FA9
 REP 006A 8686
 REP 0072 3FA5
 REP 007A 3F95
 REP 008A 3F81
 REP 0092 9898
 REP 009A 8989
 REP 00A2 3FA8
 REP 00AA 8585
 REP 00B2 3FA4
 REP 00B4 3F37
 REP 00BA 3F94
 REP 00CA 8383
 REP 00D2 3FA2
 REP 00DA 3F92
 REP 00EA 3F87
 REP 00F2 A6A6
 REP 00FA 9696
 REP 011A 11FF
 REP 0184 5C87,47C6,27A6,66E7,1796
 REP 0194 5C56,D736,B777,F60F,8E4E
 REP 01A6 CF2E,AF6F,EE1E,9F5F
./ ADD LIST=ALL,LEVEL=01,SOURCE=0,NAME=EU19000
++ PTF (EU19000) .
++ VER (Z037) PRE(UZ22064)  /*
//********************************************************************
//*            THIS MODIFICATION IS FOR UNIPROCESSORS ONLY           *
//*                                                                  *
//*      THIS IS A CHANNEL ROTATE MODIFCATION. IT WILL ZAP THE       *
//*      IECIOSCN MODULE AND CHANGE THE IOS TCH ROUTINE TO CAUSE     *
//*      PHYSCIAL CHANNEL ENTRIES IN ANY LCH WITH MULTIPLE PCH' S    *
//*      TO BE ROTATED FOR THE BENEFIT OF 3330/3340/3350 IO AND      *
//*      RPS RECONNECT.                                              *
//********************************************************************
                                             */ .
++ ZAP (IECIOSAM) DISTLIB(AOSC5) /*
***********************************************************************
*                                                                     *
*              CHANNEL ROTATE ZAP                                     *
*                                                                     *
*                      BASE REGISTER -  R5 = (000)                    *
*                                       R8 = (FFF)                    *
*                                                                     *
***********************************************************************
  */ .
  NAME IECIOSCN
  VER 04E8 58A0,C010                    L     WRK6, LCHTCH
  VER 16B0 0000,0000,0000,0000,0000,0000,0000,0000  * IOS PATCH AREA  *
  VER 16C0 0000,0000,0000,0000,0000,0000,0000       * IOS PATCH AREA  *
  REP 16B0 58A0,C010                    L     WRK6,LCHTCH (DISPL INST)
  REP 16B4 9501,C014              CLI   LCHCHCNT ,X'01'
  REP 16B8 4780,54EC              BE    ITCH005+4 RETURN TO PATCH
  REP 16BC 4860,A000              LH    WRK6,ZERO (,TCHE)
  REP 16C0 D201,A000,A002         MVC   0(2,TCHE),2(TCHE)
  REP 16C6 4060,A002              STH   WRK6,2(TCHE)
  REP 16CA 47F0,54EC              B     ITCH005+4 RETURN TO PATCH
  REP 04E8 47F0,86B2              B     IOS PATCH
  IDRDATA EU19000
./ ADD LIST=ALL,LEVEL=01,SOURCE=0,NAME=EU21000
++ PTF (EU21000).
++ VER(Z037) PRE(UZ23694) /*
                THIS ZAP MOVES THE EP/DE NAME INTO THE SVC PARMLIST
                FIELD OF THE SVC 42 GTF RECORD.
                THE FOLLOWING CODE WAS ASSEMBLED TO PRODUCE THE
                AMASPZAP INPUT:
AHLTSVC  CSECT
         USING AHLTSVC,BASEREG1
         USING AHLTSVC+4095,BASEREG2
         USING AHLTSVC+8190,BASEREG3
         ORG   AHLTSVC+X'1C'
NBASEAD1 DC    A(AHLTSVC)
NBASEAD2 DC    A(AHLTSVC+4095)
NBASEAD3 DC    A(AHLTSVC+8190)
         L     BASEREG1,NBASEAD1
         L     BASEREG2,NBASEAD2
         L     BASEREG3,NBASEAD3
BASEREG1 EQU   11
BASEREG2 EQU   12
BASEREG3 EQU   4
AWSAPTR  EQU   3
PARMPTR  EQU   1
SUPLEN42 EQU   X'14A'
SUPLST42 EQU   X'14B'
         ORG   AHLTSVC+X'0D36'
         MVI   SUPLEN42(AWSAPTR),X'3C'      SET LENGTH.
         ORG   AHLTSVC+X'0D36'
         B     PATCH
CONTINUE DS    0H
         ORG   AHLTSVC+X'2098'
PATCH    MVI   SUPLEN42(AWSAPTR),X'3C'      SET LENGTH.
         L     BASEREG2,0(PARMPTR)          LOAD EP/DE POINTER.
         MVC   SUPLST42(8,AWSAPTR),0(BASEREG2) MOVE EP NAME TO
*                                           SVC PARMLIST.
         L     BASEREG2,NBASEAD2            RESTORE BASE REGISTER
         B     CONTINUE
         END   AHLTSVC
                                            */.
++ ZAP(AHLTSVC) .
 EXPAND AHLTSVC(32)
NAME AHLTSVC
VER 0D36 923C,314A
VER 2098 0000,0000
REP 0D36 47F0,409A
REP 2098 923C,314A
REP 209C 58C1,0000
REP 20A0 D207,314B,C000
REP 20A6 58C0,B020
REP 20AA 47F0,BD3A
./ ADD LIST=ALL,LEVEL=01,SOURCE=0,NAME=OLD26021
++ PTF (TR26021) /* SC1CW -- PPR 26021 ABEND028 */.
++ VER (Z037) PRE (UZ22471).
++ ZAP (ILRCMP).
*
*        WRITTEN BY D. WRIGHT   (FE510)  79/06/20
*
*        THIS TRAP DOES NOT CAUSE A SYSTEM ABEND.  THIS TRAP IS TO
*        PROVIDE DIAGNOSTIC INFORMATION AT ENTRY TO ILRCMPAE (ABNORMAL
*        END APPENDAGE) BY SAVING CERTAIN WORK AREAS.
*
*        AT ENTRY TO ILRCMPAE REG1 CONTAINS A POINTER TO THE IOSB.
*        REG7 WILL BE ADJUSTED TO RELATIVE DISPLACEMENT +0020 AND IS
*        THE BASE REGISTER.
*
*        THE FOLLOWING IS SAVED AT THE CORRESPONDING LOCATIONS
*              PSA + 0500  =       IOSB
*              PSA + 0560  =       EWA
*              PSA + 05E0  =       UCB
*              PSA + 0620  =       CCW-20
*              PSA + 0660  =       CPUTIMER
*
*        IF A POINTER TO ONE OF THE CONTROL BLOCKS OF INTEREST IS
*        ZEROES THEN THE CORRESPONDING FIELD IS MADE ZEROES SO THAT
*        NO INVALID RESIDUAL INFORMATION IS SAVED
*
*        THE TRAP WILL BE IN SMP FORMAT AND BE CONTAINED IN
*        ILRCMP.  ILRCMP WILL BE EXPANDED SO THAT S/ZAP WILL FIT.
*
  EXPAND ILRCMP(200)
  NAME ILRCMP
  VER 02BC 58C0,1020
  VER 02C0 58C0,C010
  VER 02C4 900F,C000
*  GOTO PATCH AREA AT +0B20   REG7 = +0020 INTO ILRCMP
  REP 02C4 47F0,7B00
*  VERIFY BEGINNING OF PATCH AREA IS ZEROES.
  VER 0B20 0000,0000,0000,0000
  VER 0B30 0000,0000,0000,0000
*  PUT TRAP IN
  REP 0B20 900F,C000          RESTORE  OVERLAYED CODE
  REP 0B24 4110,1000          CLEAR HI BYTE REG1.
  REP 0B28 1211               IS REG1 ZERO?
  REP 0B2A 4780,7B18          YES -- GO CLEAR SAVE IOSB.
  REP 0B2E D257,0500,1000     SAVE IOSB AT PSA+500
  REP 0B34 47F0,7B1E          SKIP OVER CLEAR.
  REP 0B38 D757,0500,0500     ELSE CLEAR STORAGE
  REP 0B3E 5890,1034          GET EWA ADDR
  REP 0B42 4190,9000          CLEAR HI BYTE REG9.
  REP 0B46 1299               IS REG9 ZERO?
  REP 0B48 4780,7B36          YES GOTO CLEAR SAVE EWA
  REP 0B4C D267,0560,9000     SAVE EWA AT PSA+560
  REP 0B52 47F0,7B3C          SKIP OVER CLEAR
  REP 0B56 D767,0560,0560     ELSE CLEAR STORAGE
  REP 0B5C 5890,1010          GET UCB ADDR
  REP 0B60 4190,9000          CLEAR HI BYTE REG9.
  REP 0B64 1299               IS R9 ZERO?
  REP 0B66 4780,7B54          YES  -- GO CLEAR SAVE UCB
  REP 0B6A D23F,05E0,9000     SAVE UCB AT PSA+5E0
  REP 0B70 47F0,7B5A          SKIP OVER CLEAR
  REP 0B74 D73F,05E0,05E0     CLEAR AREA
  REP 0B7A 5890,1014          GET CSW COMMAND ADDR
  REP 0B7E 4190,9000          CLEAR HI BYTE REG9
  REP 0B82 1299               IS REG9 ZERO?
  REP 0B84 4780,7B78          YES -- GO CLEAR SAVE CCW
  REP 0B88 4B90,7B76          SUBTRACT 0020 FROM CSWCCW ADDR
  REP 0B8C D23F,0620,9000     SAVE CCW=20 AT +0620
  REP 0B92 47F0,7B7E          SKIP OVER CLEAR
  REP 0B96 0020               DC X'0020'
  REP 0B98 D73F,0620,0620     CLEAR CCW SAVE AREA
  REP 0B9E B209,0660          SAVE CPU TIMER AT PSA+660
  REP 0BA2 47F0,72A8          RETURN TO MAINLINE +02C8
*END OF ZAP
./ ADD LIST=ALL,LEVEL=01,SOURCE=0,NAME=TR26021
++ PTF (TR26021) /* SC1CW -- PPR 26021 ABEND028 */.
++ VER (Z037) PRE (UZ22471 UZ85000).
++ ZAP (ILRCMP).
*
*        WRITTEN BY D. WRIGHT   (FE510)  79/06/20
*        UPDATED FOR SE1 SYSTEM          79/11/08
*
*        THIS TRAP DOES NOT CAUSE A SYSTEM ABEND.  THIS TRAP IS TO
*        PROVIDE DIAGNOSTIC INFORMATION AT ENTRY TO ILRCMPAE (ABNORMAL
*        END APPENDAGE) BY SAVING CERTAIN WORK AREAS.
*
*        AT ENTRY TO ILRCMPAE REG1 CONTAINS A POINTER TO THE IOSB.
*        REG7 WILL BE ADJUSTED TO RELATIVE DISPLACEMENT +0020 AND IS
*        THE BASE REGISTER.
*
*        THE FOLLOWING IS SAVED AT THE CORRESPONDING LOCATIONS
*              PSA + 0600  =       IOSB
*              PSA + 0660  =       EWA
*              PSA + 06E0  =       UCB
*              PSA + 0720  =       CCW-20
*              PSA + 0760  =       CPUTIMER
*
*        IF A POINTER TO ONE OF THE CONTROL BLOCKS OF INTEREST IS
*        ZEROES THEN THE CORRESPONDING FIELD IS MADE ZEROES SO THAT
*        NO INVALID RESIDUAL INFORMATION IS SAVED
*
*        THE TRAP WILL BE IN SMP FORMAT AND BE CONTAINED IN
*        ILRCMP.  ILRCMP WILL BE EXPANDED SO THAT S/ZAP WILL FIT.
*
  EXPAND ILRCMP(200)
  NAME ILRCMP
  VER 02BC 58C0,1020
  VER 02C0 58C0,C010
  VER 02C4 900F,C000
*  GOTO PATCH AREA AT +0B20   REG7 = +0020 INTO ILRCMP
  REP 02C4 47F0,7B00
*  VERIFY BEGINNING OF PATCH AREA IS ZEROES.
  VER 0B20 0000,0000,0000,0000
  VER 0B30 0000,0000,0000,0000
*  PUT TRAP IN
  REP 0B20 900F,C000          RESTORE  OVERLAYED CODE
  REP 0B24 4110,1000          CLEAR HI BYTE REG1.
  REP 0B28 1211               IS REG1 ZERO?
  REP 0B2A 4780,7B18          YES -- GO CLEAR SAVE IOSB.
  REP 0B2E D257,0600,1000     SAVE IOSB AT PSA+500
  REP 0B34 47F0,7B1E          SKIP OVER CLEAR.
  REP 0B38 D757,0600,0600     ELSE CLEAR STORAGE
  REP 0B3E 5890,1034          GET EWA ADDR
  REP 0B42 4190,9000          CLEAR HI BYTE REG9.
  REP 0B46 1299               IS REG9 ZERO?
  REP 0B48 4780,7B36          YES GOTO CLEAR SAVE EWA
  REP 0B4C D267,0660,9000     SAVE EWA AT PSA+560
  REP 0B52 47F0,7B3C          SKIP OVER CLEAR
  REP 0B56 D767,0660,0660     ELSE CLEAR STORAGE
  REP 0B5C 5890,1010          GET UCB ADDR
  REP 0B60 4190,9000          CLEAR HI BYTE REG9.
  REP 0B64 1299               IS R9 ZERO?
  REP 0B66 4780,7B54          YES  -- GO CLEAR SAVE UCB
  REP 0B6A D23F,06E0,9000     SAVE UCB AT PSA+5E0
  REP 0B70 47F0,7B5A          SKIP OVER CLEAR
  REP 0B74 D73F,06E0,06E0     CLEAR AREA
  REP 0B7A 5890,1014          GET CSW COMMAND ADDR
  REP 0B7E 4190,9000          CLEAR HI BYTE REG9
  REP 0B82 1299               IS REG9 ZERO?
  REP 0B84 4780,7B78          YES -- GO CLEAR SAVE CCW
  REP 0B88 4B90,7B76          SUBTRACT 0020 FROM CSWCCW ADDR
  REP 0B8C D23F,0720,9000     SAVE CCW=20 AT +0620
  REP 0B92 47F0,7B7E          SKIP OVER CLEAR
  REP 0B96 0020               DC X'0020'
  REP 0B98 D73F,0720,0720     CLEAR CCW SAVE AREA
  REP 0B9E B209,0760          SAVE CPU TIMER AT PSA+660
  REP 0BA2 47F0,72A8          RETURN TO MAINLINE +02C8
*END OF ZAP
./ ENDUP
