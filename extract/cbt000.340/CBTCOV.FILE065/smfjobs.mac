SMFJOBS  BEGIN BASE2=3
         OPEN  (SMFDATA,INPUT)
         LA    R9,20
         LA    R10,OUTPUT
BES      MVC   0(80,R10),=CL80' '
         LA    R10,80(R10)
         BCT   R9,BES
         LA    R7,20
         LA    R8,OUTPUT
         USING LINE,R8
         LA    R1,FSPARMS
         MVI   MODE,C'I'
         MVC   ROW,=H'0'
         MVC   COLUMN,=H'0'
         MVI   UPPER,C'U'
         LINK  EP=FULSCR
GETJOB   MVI   MODE,C'X'
         MVC   INATTR,LOLITE
         MVC   INPUT,=CL79' '
         MVC   JOBATTR,UNPROT
         MVC   MSGS,=CL79'ENTER THE JOB/ALL BELOW                 '
         MVC   ROW,=H'0'
         MVC   COLUMN,=H'0'
         MVI   ALARM,C'A'
         LA    R1,FSPARMS
         LINK  EP=FULSCR
         CLC   JOBPARM,=CL8' '
         BE    GETJOB
         MVC   MSGS,=CL79' '
         MVC   JOBATTR,HILITE
NEWPAGE  DS    0H
         LA    R9,20
         LA    R10,OUTPUT
CLRPAGE  MVC   1(79,R10),=CL79' '
         LA    R10,80(R10)
         BCT   R9,CLRPAGE
         LA    R7,20
         LA    R8,OUTPUT
         USING LINE,R8
READER   GET   SMFDATA,SMFREC
         LA    R2,SMFREC
         USING SMFRCD4,R2
         MVC   ATTR,LOLITE
         CLI   SMF4RTY,4
         BE    READER1
         CLI   SMF4RTY,34
         BNE   READER
READER1  MVC   JOB,SMF4JBN             INITIALIZE JOBNAME
         MVC   DATE,=X'202020202020202020'
         ED    DATE-1(9),SMF4RSD
         MVC   STEP,SMF4STMN           INITIALIZE STEPNAME
         MVC   PROG,SMF4PGMN           INITIALIZE PGMNAME
         XR    R5,R5                   CLEAR OUT REGISTER
         TCONV SMF4TME,HOUR,R5         LOAD SMF TIME
COMPCODE DS    0H
         MVC   TYPE(5),=CL5' '         INITIALIZE TYPE
         TM    SMF4STI,B'00000010'     IS THIS AN ABEND?
         BNZ   ABEND                   YES, PROCESS ABEND CODE
         TM    SMF4STI,B'00000001'     WAS THIS JOB STEP FLUSHED?
         BNZ   FLUSH                   YES, PROCESS AS FLUSHED STEP
         MVC   HALFWORD,SMF4SCC        MOVE COMPLETION CODE TO HALFWORD
         LH    R5,HALFWORD             LOAD COMPLETION CODE
         CVD   R5,PL8                  CONVERT COMP CODE TO PACKED
         UNPK  SCC1(4),PL2             CONVERT PACKED TO CHARACTER
         OI    SCC1+3,X'F0'            INSURE PROPER DISPLAY
         MVI   TYPE,C'C'               MOVE IN THE TYPE
         CLC   SCC1(4),=CL4'0000'      WAS THIS COMPLETION CODE ZERO?
         BNE   PUTIT                   NO, DISPLAY THE JOB
         MVC   TYPE(5),=CL5' '         BLANK OUT THE COMPLETION CODE
         B     PUTIT                   DISPLAY THE JOB
FLUSH    DS    0H
         MVC   TYPE(5),=CL5'FLUSH'     MOVE IN THE 'FLUSH' VALUE
         B     PUTIT                   DISPLAY THE JOB
ABEND    DS    0H
         TM    SMF4SCC,B'10000000'     IS THIS A USER ABEND?
         BNZ   USER                    YES, PROCESS AS USER ABEND
         MVC   HEXFLD,SMF4SCC          MOVE IN FIRST BYTE
         LA    R1,HEXPARMS             PREPARE TO CONVERT
         LINK  EP=HEXCONV              CONVERT FROM HEX TO CHARACTER
         MVC   SCC1,HEXOUT             MOVE IN FIRST BYTE
         MVC   HEXFLD,SMF4SCC+1        MOVE IN SECOND BYTE
         LA    R1,HEXPARMS             PREPARE TO CONVERT
         LINK  EP=HEXCONV              CONVERT FROM HEX TO CHARACTER
         MVC   SCC2,HEXOUT             MOVE IN SECOND BYTE
         MVI   TYPE,C'S'               MOVE IN SYSTEM ABEND VALUE
         MVI   SCC1,C' '               BLANK OUT LEADING ZERO
         B     PUTIT                   CONTINUE PROCESSING
USER     DS    0H
         MVC   HALFWORD,SMF4SCC        MOVE COMPLETION CODE TO HALFWORD
         LH    R5,HALFWORD             LOAD COMPLETION CODE
         CVD   R5,PL8                  CONVERT COMP CODE TO PACKED
         UNPK  SCC1(4),PL2             CONVERT PACKED TO CHARACTER
         OI    SCC1+3,X'F0'            INSURE PROPER DISPLAY
         MVI   TYPE,C'U'               MOVE IN USER ABEND VALUE
PUTIT    DS    0H
         CLC   JOBPARM,ALLJOB
         BE    PUTIT2
         CLC   JOB,JOBPARM
         BE    PUTIT2
         LA    R4,JOBPARM
         LA    R5,JOB
         LA    R6,8
C1       DS    0H
*        CLI   0(R4),C' '
*        BE    PUTIT2
         CLI   0(R4),C'-'
         BE    PUTIT2
         CLC   0(1,R5),0(R4)
         BE    C2
         CLI   0(R4),C'*'
         BNE   READER
C2       LA    R4,1(R4)
         LA    R5,1(R5)
         BCT   R6,C1
PUTIT2   MVC   INATTR,LOLITE
         MVC   INPUT,=CL79' '
         MVI   MODE,C'P'
         MVI   ALARM,C' '
         MVC   ROW,=H'0'
         MVC   COLUMN,=H'0'
         LA    R1,FSPARMS
         LINK  EP=FULSCR
         LA    R8,80(R8)
         BCT   R7,READER
GETIT    MVC   INATTR,UNPROT
         MVC   MSGS(40),=CL40'ENTER ''S'' FOR NEW JOB, ''Z'' TO END'
         MVC   MSGS+40(39),=CL39'JUST HIT ENTER TO CONTINUE'
         MVI   MODE,C'X'
         MVI   ALARM,C'A'
         MVC   ROW,=H'0'
         MVC   COLUMN,=H'0'
         LA    R1,FSPARMS
         LINK  EP=FULSCR
         CLI   INPUT,C'Z'
         BE    EXIT
         CLI   INPUT,C'S'
         BE    NEWJOB
         MVC   MSGS,=CL79' '
         B     NEWPAGE
NEWJOB   CLOSE (SMFDATA)
         OPEN  (SMFDATA,INPUT)
         B     GETJOB
EOD      DS    0H
         MVC   INATTR,UNPROT
         MVC   MSGS(79),=CL79'ENTER ''S'' FOR NEW JOB, ''Z'' TO END'
         MVC   ATTR,HILITE
         MVC   LINE+1(79),=CL79'**** END OF INPUT DATA *****'
         MVI   MODE,C'X'
         MVI   ALARM,C'A'
         MVC   ROW,=H'0'
         MVC   COLUMN,=H'0'
         LA    R1,FSPARMS
         LINK  EP=FULSCR
         CLI   INPUT,C'Z'
         BE    EXIT
         CLI   INPUT,C'S'
         BE    NEWJOB
         B     EOD
EXIT     CLOSE (SMFDATA)
         EXIT  RC=0
         LTORG
         REGISTER
*
         DS    0D
PL8      DS    0PL8
         DS    XL6
PL2      DS    PL2
*
         DS    0H
HALFWORD DS    H
XL4      DC    XL4'00000000'
CL16     DS    CL16
ALLJOB   DC    CL8'ALL'
UNPROT   SF    (UNPROT,RED)
LOLITE   SF    (PROT,BLUE)
HILITE   SF    (PROT,WHITE)
HEXPARMS DS    0D
HEXFLD   DS    XL1
HEXOUT   DS    CL2
FSPARMS  DS    0D
         DC    A(MODE)
         DC    A(SCREEN)
         DC    A(LINES)
         DC    A(ROW)
         DC    A(COLUMN)
         DC    A(ALARM)
         DC    A(UPPER)
         DC    A(KEY)
MODE     DC    C'I'
LINES    DC    H'0'
ROW      DC    H'0'
COLUMN   DC    H'0'
ALARM    DC    C' '
UPPER    DC    C'U'
KEY      DC    H'0'
*
SCREEN   DS    0CL2560
         SF    (PROT,WHITE)
HEADING  DC    CL50'    DATE   TIME      JOBNAME   STEPNAME  PGMNAME'
         DC    CL29'  COMP'
OUTPUT   DS    CL1600
INATTR   SF    (PROT,WHITE)
INPUT    DC    CL79' '
         SF    (PROT,WHITE)
MSGS     DC    CL79' '
         SF    (PROT,BLUE)
         DC    CL29' JOB NAME BEING SEARCHED FOR:'
JOBATTR  SF    (PROT,WHITE)
JOBPARM  DC    CL8' '
         SF    (PROT,BLUE)
         DC    CL2' '
         DC    CL38'***** SMF TYPE 4 RECORDS *****'
         SF    (PROT,BLUE)
         DC    CL160' '         FOR 3279 COMPATIBILITY
         DC    CL160' '         FOR 3279 COMPATIBILITY
         DC    CL160' '         FOR 3279 COMPATIBILITY
         DC    CL160' '         FOR 3279 COMPATIBILITY
SMFDATA  DCB   DDNAME=SMFDATA,DSORG=PS,MACRF=GM,EODAD=EOD,EROPT=SKP
SMFREC   DS    CL32767
LINE     DSECT
ATTR     DS    CL01
         DC    CL02' '
DATE     DS    CL07
         DC    CL02' '
HOUR     DS    CL08
         DC    CL02' '
JOB      DS    CL08
         DC    CL02' '
STEP     DS    CL08
         DC    CL02' '
PROG     DS    CL08
         DC    CL02' '
TYPE     DS    CL01
SCC1     DS    CL02
SCC2     DS    CL02
         DC    CL23' '
         IFASMFR 4
         END
