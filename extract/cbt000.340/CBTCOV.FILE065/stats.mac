*          DATA SET CBT811     AT LEVEL 001 AS OF 05/08/78
 TITLE 'DISK DATA SET STATISTICS PROGRAM    --     BY  A. BRUCE LELAND'
*
*   COMPUTE DATA SET USEAGE STATISTICS FOR DISK DATA SETS
*
*   PROGRAMMER:  A. BRUCE LELAND
*
*   DESCRIPTION:  THIS PROGRAM FORMATS INFORMATION ON ANY DISK DATA
*        SET.  IT READS THROUGH THE ENTIRE DATA SET AND OUTPUTS DISK
*        TRACK USAGE, BLOCKSIZE AND OTHER STATISTICS.
*
*
*   OPERATION:
*       A.  THE PROGRAM GETS THE INPUT DATA SET NAME AND VOLUME SERIAL
*           NUMBER VIA "RDJFCB".
*
*       B.  THE PROGRAM INPUTS THE FORMAT 1 DSCB TO DETERMINE OTHER
*           DATA SET CHARACTERISTICS.
*
*       C.  THE PROGRAM OPENS THE INPUT FILE, THEN FORMATS AND
*           OUTPUTS DEB AND DSCB INFORMATION.
*
*       D.  IF A PARM OF "LABEL" IS NOT CODED, THE PROGRAM READS
*           EACH BLOCK OF DATA IN THE DATA SET AND COLLECTS RECORD
*           COUNTS, RECORD SIZE AND TRACK USEAGE STATISTICS.
*
*       E.  ADDITIONAL PROCESSING:
*
*           1. FOR DSORG=PS, NONE.
*
*           2. FOR DSORG=DA, NONE.
*
*           3. FOR DSORG=IS, THE PROGRAM READS THROUGH THE ENTIRE
*              DATA SET (THERE MAY BE UP TO THREE SEPARATE FILES OF
*              DATA AND REPORTS ON EACH FILE.  ALSO, THE PROGRAM
*              INPUTS THE ISAM LABEL (FORMAT TWO DSCB) RECORD AND
*              PROVIDES A DATA SET PROFILE WHICH INCLUDES DATA SET
*              REORGAINIZATION DATA AND DATA SET CHARACTERISTICS.
*
*           4. FOR DSORG=PO, THE PROGRAM COMPARES DIRECTORY TTR'S
*              AGAINST ACTUAL DISK ADDRESSES TO DETERMINE THE TTRS
*              OF "GAS" MEMBERS (THE PROGRAM ALSO OUTPUTS THE FIRST
*              79 CHARACTERS OF ANY GAS MEMBER).  STATISTICS ARE
*              MAINTAINED ON THE SIZE OF GAS AND REAL MEMBERS AND
*              THE NUMBER OF ALIAS MEMBERS.
*              IF ANY ALIASES ARE IN THE DATA SET, A CHECK IS MADE
*              TO SEE THAT CORRESPONDING REAL ENTRIES ALSO EXIST.
*              NOTE: A PARM OF 'NO' WILL NULLIFY THE GAS TTR REPORT.
*
*
         PRINT NOGEN
         EJECT
         MACRO
&LBL     OUTPT   &R0,&R1,&LN=50     OUTPUT MACRO
&LBL     LA      R15,&LN       LENGTH OF STRING
         AIF     ('&R0' EQ 'R0').NOR0
         L       R0,&R0        NUMBER TO BE OUTPUT
.NOR0    LA      R1,&R1        STRING TO FOLLOW
         BAL     R14,OUTRTN    OUTPUT ROUTINE
         AIF     ('&R1' NE 'WORK').MEND
         MVC     WORK(80),BLANKS
.MEND    MEND
*
         MACRO
&LBL     TTRMBB  &TTR,&MBB=DOUBLE  TTR TO MBBCCHHR CONVERSION MACRO
&LBL     STM     R14,R12,12(R13)
         L       R1,&TTR           TTRN ACTUALLY
         SLDL    R0,24             SHIFT TTR INTO R0
         SLL     R0,8              ADJUST
         L       R1,DCBDEBAD       DEB ADDRESS
         LA      R2,&MBB           RESULT ADDRESS
         LR      R3,R13            SAVE SAVEAREA REGISTER
         L       R15,16            CVT POINTER
         L       R15,28(,R15)      TTRN->MBBCCHHR ROUTINE ADDRESS
         BALR    R14,R15
         LR      R13,R3
         LM      R14,R12,12(R13)
         MEND
*
         MACRO
&LBL     MBBTTR  &MBB,&TTR=TEMP    MBBCCHHR TO TTR CONVERSION MACRO
&LBL     L       R0,TRACKNUM       CURRENT TRACK NUMBER (RELATIVE 1)
         BCTR    R0,0              CURRENT TRACK NUMBER (RELATIVE 0)
         L       R1,LASTR          CURRENT RECORD NUMBER
         LA      R1,1(,R1)         NEXT RECORD NUMBER (R OF TTR)
         CLC     CURMBB(7),&MBB    SWITCHED TRACKS?
         BE      *+10              NO, BRANCH
         LA      R1,1              RECORD ONE
         AR      R0,R1             NEXT RELATIVE TRACK
         STH     R0,&TTR           SAVE RELATIVE TRACK NUMBER
         STC     R1,&TTR+2         SAVE RECORD NUMBER
         MEND
*
         MACRO
&LBL     HEXES   &SRC,&NUM,&OUT     OUTPUT LOOKS LIKE C1.C2.C3 . . .
         LCLC    &ONE                    FOR NUM SOURCE CHARACTERS
&ONE     SETC    'HX'.'&SYSNDX'
&LBL     SR      R15,R15
         LA      R14,&NUM
         LR      R1,R14
         BCTR    R1,0
         LA      R1,&NUM.(R1,R1)    LAST PERIOD AT (N-1)*3+1
         LA      R1,&OUT.(R1)
         S       R1,=F'3'           OUTPUT START LOCATION
&ONE     LA      R15,&SRC           SOURCE BASE ADDRESS
         SR      R0,R0
         BCTR    R15,0
         IC      R0,0(R14,R15)      INPUT CHARACTER
         LR      R15,R0
         N       R15,=F'15'
         IC      R15,HEXTBL(R15)
         STC     R15,2(,R1)         LOW NIBBLE
         LR      R15,R0
         SRL     R15,4
         IC      R15,HEXTBL(R15)
         STC     R15,1(,R1)         HIGH NIBBLE
         MVI     0(R1),C'.'         SEPARATOR
         S       R1,=F'3'           BACK UP 3 IN OUTPUT ADDRESS
         BCT     R14,&ONE           DO PREVIOUS INPUT CHARACTER
         MVI     3(R1),X'40'        BLANK THE LEADING PERIOD
         MEND
*
         MACRO
&LBL     DCBCONV &OUT=WORK      FORMATS A STRING LIKE "DCB=(RECFM=...)"
         LCLC    &ONE
&ONE     SETC    'DB'.'&SYSNDX'   UNIQUE LABEL PORTION
&LBL     LA      R1,&OUT
         MVC     0(12,R1),=CL12'DCB=(RECFM=*'
         LA      R1,11(,R1)
         TM      DS1RECFM,X'C0'   RECFM=U?
         BNO     *+12             NO, BRANCH
         MVI     0(R1),C'U'
         B       &ONE.A
         TM      DS1RECFM,X'80'   RECFM=F?
         BNO     *+12             NO, BRANCH
         MVI     0(R1),C'F'
         B       &ONE.A
         TM      DS1RECFM,X'40'   RECFM=V?
         BNO     *+8              NO, BRANCH
         MVI     0(R1),C'V'
&ONE.A   LA      R1,1(,R1)
         TM      DS1RECFM,X'10'   RECFM=.B?
         BNO     *+12             NO, BRANCH
         MVI     0(R1),C'B'
         LA      R1,1(,R1)
         TM      DS1RECFM,X'20'   RECFM=.T?
         BNO     *+12             NO, BRANCH
         MVI     0(R1),C'T'
         LA      R1,1(,R1)
         TM      DS1RECFM,X'04'   RECFM=.A?
         BNO     *+12             NO, BRANCH
         MVI     0(R1),C'A'
         LA      R1,1(,R1)
         TM      DS1RECFM,X'02'   RECFM=.M?
         BNO     *+12             NO, BRANCH
         MVI     0(R1),C'M'
         LA      R1,1(,R1)
         TM      DS1RECFM,X'C0'   RECFM=U?
         BO      &ONE.C           YES, NO LRECL MESSAGE
         MVC     0(7,R1),=CL7',LRECL='
         LA      R1,7(,R1)
         LH      R15,DS1LRECL
         CVD     R15,DOUBLE
         UNPK    DOUBLE(5),DOUBLE+5(3)
         LA      R15,DOUBLE-1
         LA      R15,1(,R15)      SCAN
         CLI     0(R15),C'0'          PAST LAST
         BE      *-8                           LEADING ZERO
         OI      DOUBLE+4,X'F0'
&ONE.B   MVC     0(1,R1),0(R15)   MOVE IN EACH CHARACTER
         LA      R1,1(,R1)
         LA      R15,1(,R15)
         TM      0(R15),X'F0'     NEXT CHARACTER NUMERIC?
         BO      &ONE.B           NO, BRANCH
&ONE.C   MVC     0(9,R1),=CL9',BLKSIZE='
         LA      R1,9(,R1)
         LH      R15,DS1BLKSI
         CVD     R15,DOUBLE
         UNPK    DOUBLE(5),DOUBLE+5(3)
         LA      R15,DOUBLE-1
         LA      R15,1(,R15)      SCAN
         CLI     0(R15),C'0'          PAST LAST
         BE      *-8                           LEADING ZERO
         OI      DOUBLE+4,X'F0'
&ONE.D   MVC     0(1,R1),0(R15)   MOVE IN EACH CHARACTER
         LA      R1,1(,R1)
         LA      R15,1(,R15)
         TM      0(R15),X'F0'     NEXT CHARACTER NUMERIC?
         BO      &ONE.D           NO, BRANCH
         MVC     0(7,R1),=CL7',DSORG='
         LA      R1,7(,R1)
         TM      DS1DSORG,X'40'   PS?
         BNO     *+10             NO, BRANCH
         MVC     0(2,R1),=CL2'PS'
         TM      DS1DSORG,X'02'   PO?
         BNO     *+10             NO, BRANCH
         MVC     0(2,R1),=CL2'PO'
         TM      DS1DSORG,X'20'   DA?
         BNO     *+10             NO, BRANCH
         MVC     0(2,R1),=CL2'DA'
         TM      DS1DSORG,X'80'   IS?
         BNO     *+10             NO, BRANCH
         MVC     0(2,R1),=CL2'IS'
         TM      DS1DSORG,X'01'   UNMOVEABLE?
         BNO     *+12             NO, BRANCH
         MVI     2(R1),C'U'
         LA      R1,1(,R1)
         MVI     2(R1),C')'
         MEND
*
STATS    CSECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SAVE  (14,12),,*
         LR    R10,R15
         LA    R15,4095
         LA    R11,1(R15,R10)
         LA    R12,1(R15,R11)
         USING STATS,R10,R11,R12
         ST    R13,SAVE+4
         LR    R2,R13
         LA    R13,SAVE
         ST    R13,8(R2)
         LA    R9,IN
         USING IHADCB,R9
         L     R1,0(R1)             PARM ADDRESS
         LH    R0,0(R1)
         LTR   R0,R0                IS LENGTH ZERO?
         BZ    OPENIT               YES, BRANCH
*        CLI   2(R1),C'N'           NO, ARE GAS RECORDS DESIRED?
*        BNE   *+8                      YES, BRANCH
         NI    FLAGS,255-GAS            NO, TURN OFF GAS RECORDS
         CLI   2(R1),C'L'           LABEL INFORMATION ONLY?
         BNE   OPENIT               NO, BRANCH
         OI    FLAGS,LABELS         YES, SET THE "LABELS ONLY" FLAG
*
OPENIT   BAL   R14,OPENIN           OPEN THE INPUT FILE
         OUTPT MINUS1,PROGRAM       PROGRAM NAME AND PURPOSE
         OUTPT MINUS1,ABL           AUTHOR
         OUTPT MINUS1,BLANKS
         MVC   WORK(4),=CL4'DSN='
         MVC   WORK+4(44),JFCBDSNM  DATA SET NAME
         LA    R1,WORK+4
         LA    R1,1(,R1)            SCAN FOR
         CLI   0(R1),X'40'                  FINAL
         BNE   *-8                               BLANK
         MVC   0(9,R1),=CL9',VOL=SER='
         MVC   9(6,R1),JFCBVOLS     ADD THE VOLUME SERIAL
         OUTPT MINUS1,WORK,LN=80
         DCBCONV WORK               FORMAT THE DCB INFORMATION
         OUTPT MINUS1,WORK,LN=80
         L     R1,DCBDEBAD
         L     R14,NUMEXT           NUMBER OF EXTENTS
         SR    R0,R0
         AH    R0,46(,R1)           TRACKS IN THE EXTENT
         LA    R1,16(,R1)           OFFSET BETWEEN EXTENTS
         BCT   R14,*-8              REPEAT FOR EACH EXTENT
         ST    R0,TOTALTRK          SAVE TRACK TOTAL
         LH    R1,DS1LSTAR          LAST TT USED
         SR    R0,R1                AVAILABLE SPACE + 0.5 TRACKS
         BCTR  R0,0                 SUBTRACT ONE MORE
         ST    R0,AVAILTRK
         MVC   TEMP(4),DS1LSTAR
         TTRMBB TEMP,MBB=LASTMBB  SAVE THE LAST USED MBBCCHHR
         OUTPT TOTALTRK,NUMTRKS
         OUTPT AVAILTRK,FRETRKS
         MVC   TEMP(2),=H'0'
         MVC   TEMP+2(2),DS1TRBAL
         OUTPT TEMP,TRBALS        BYTES LEFT ON LAST USED TRACK
         OUTPT NUMEXT,NUMEXTS
         L     R2,DCBDEBAD
         L     R3,NUMEXT
         SR    R1,R1
         IC    R1,24(R2)
         SRL   R1,4
         IC    R1,HEXTBL(R1)
         STC   R1,PROTECT         PROTECTION KEY FOR THIS DATA SET
         OUTPT MINUS1,PROTECT
         TM    DS1SCALO,X'C0'                         CYLINDER ALLOC?
         BNO   *+14                                   NO, BRANCH
         MVC   SCALOS+25(9),=CL9'CYLINDERS'           YES
         B     ALLOCS
         BNZ   *+14                                   ABS. TRACKS
         MVC   SCALOS+25(15),=CL15'ABSOLUTE TRACKS'   YES
         B     ALLOCS
         TM    DS1SCALO,X'80'                         TRACKS?
         BNO   *+14                                   NO, BRANCH
         MVC   SCALOS+25(6),=CL6'TRACKS'              YES
         B     ALLOCS
         MVC   SCALOS+25(6),=CL6'BLOCKS'              BLOCKS
         TM    DS1SCALO,X'01'                         ROUND TO CYL?
         BNO   ALLOCS                                 NO, BRANCH
         MVC   SCALOS+32(12),=CL12'(WITH ROUND)'      YES
ALLOCS   OUTPT MINUS1,SCALOS
         MVC   TEMP+1(3),DS1SAQU  SECONDARY ALLOCATION QUANTITY
         MVI   TEMP,X'00'
         CLC   TEMP,=F'0'         ANY SECONDARIES ALLOWED?
         BNE   SECS               YES, BRANCH
         OUTPT MINUS1,NOSEC       NO
         B     ALLSECS
SECS     OUTPT TEMP,EXTENTS
*
ALLSECS  SR    R4,R4              EXTENT NUMBER
         HEXES LASTMBB,8,LSTAR+13
         OUTPT MINUS1,LSTAR       LAST USED MBBCCHHR
         OUTPT MINUS1,BLANKS
         OUTPT MINUS1,EXTHDR
         OUTPT MINUS1,EXTUND
 EJECT
HEXAGN   CVD   R4,DOUBLE
         LA    R4,1(,R4)
         UNPK  DOUBLE(5),DOUBLE+5(3)
         MVC   WORK+1(2),DOUBLE+3
         OI    WORK+2,X'F0'       EXTENT NUMBER
         CLI   WORK+1,X'F0'
         BNE   *+8
         MVI   WORK+1,X'40'
         L     R1,32(R2)          UCB ADDRESS
         MVC   WORK+8(3),13(R1)   UCB
         HEXES 38(R2),4,WORK+14   INITIAL CCHH
         HEXES 42(R2),4,WORK+28   END     CCHH
         LH    R1,46(,R2)         NUMBER OF TRACKS IN THIS EXTENT
         CVD   R1,DOUBLE
         UNPK  DOUBLE(5),DOUBLE+5(3)
         MVC   WORK+42(5),DOUBLE
         LA    R1,WORK+41
         LA    R1,1(,R1)
         CLI   1(R1),C'0'         NEXT DIGIT ZERO?
         MVI   0(R1),X'40'        REPLACE CURRENT DIGIT WITH BLANK
         BE    *-12               YES, CONTINE BLANKING LEADING ZEROES
         OI    WORK+46,X'F0'      MAKE THE ZONE PRINTABLE
         OUTPT MINUS1,WORK
         LA    R2,16(,R2)         NEXT EXTENT DISPLACEMENT
         BCT   R3,HEXAGN
         OUTPT MINUS1,BLANKS
*
         SR    R0,R0
         IC    R0,DS1KEYL
         LTR   R0,R0              KEYLENGTH=0?
         BZ    DSORGTST           YES, BRANCH
         OUTPT R0,KEYLEN          NO, OUTPUT KEYLEN AND RKP
         MVC   TEMP+2(2),DS1RKP
         OUTPT TEMP,KEYPOS
         OUTPT MINUS1,BLANKS
DSORGTST TM    FLAGS,LABELS       LABEL INFORMATION ONLY DESIRED?
         BO    END3               YES, DO NOT DO ANY READS
         TM    DS1DSORG,X'02'     PARTITIONED DATA SET ORGANIZATION?
         BO    PO                 YES, BRANCH
 EJECT                            NO -- PS, DA OR IS
INPUTS   BAL   R14,EXCPSTAT       READ EACH BLOCK AND COLLECT STATS
         LTR   R15,R15            END OF FILE?
         BZ    INPUTS             NO, CONTINUE READING
         LR    R2,R15             SAVE FOR LATER
         OUTPT MINUS1,EOFSS
         TM    DS1DSORG,X'80'     ISAM?
         BNO   ENDDATA            NO, BRANCH -- END OF DATA SET
         CLC   MINBLKI,=F'33000'  EVER CHANGED?
         BNE   *+10               YES, BRANCH
         SR    R14,R14            NO, RESET TO ZERO
         ST    R14,MINBLKI
         OUTPT MINBLKI,MINBLKS
         LA    R14,1
         C     R14,READTOTI
         BH    *+8
         L     R14,READTOTI    TAKE MAX OF READTOTI AND 1
         L     R1,READTOTI
         SRL   R1,1
         A     R1,BYTECNTI
         SR    R0,R0
         DR    R0,R14          AVG BLK= (BYTECNTI + READTOTI/2) /
         LR    R0,R1                     MAX( READTOTI, 1)
         OUTPT R0,AVGBLKS
         OUTPT MAXBLKI,MAXBLKS
         OUTPT READTOTI,NUMBLKS
         OUTPT MINUS1,BLANKS
         MVC   MINBLKI,=F'33000' RESET
         SR    R14,R14                THE
         ST    R14,READTOTI              FILE
         ST    R14,MAXBLKI                   STATISTICS
         ST    R14,BYTECNTI                            VARIABLES
         C     R2,=F'5'           END OF DATA SET?
         BL    INPUTS             NO, REPORT ON THE NEXT SEGMENT
*
ENDDATA  L     R0,READTOT
         LTR   R0,R0              ANY RECORDS READ?
         BP    ENDPSPO            YES, NORMAL DATA SET
         OUTPT MINUS1,NULL        NO RECORDS IN THE DATA SET
         B     END3               QUIT
*
*
PO       SR    R5,R5                CLEAR R5 FOR LATER
         OI    FLAGS,DIRECTOR       TURN ON THE "IN DIRECTORY" FLAG
         CLI   DS1NOBDB,0           LAST DIRECTORY BLOCK IN USE?
         BE    NEXTMBR              NO, BRANCH
         SR    R0,R0
         IC    R0,DS1NOBDB          NUMBER OF BYTES IN USE
         ST    R0,TEMP
         OUTPT TEMP,NOBDBS
 EJECT
NEXTMBR  BAL   R14,MEMBERS          GET THE NEXT MEMBER
         B     *+4(R15)             BRANCH TABLE
         B     GOODMBR              SUCCESSFUL
         B     MBREOF               EOF IN DIRECTORY
         B     LASTUSED             LAST USED ENTRY FOUND
         B     NOTDIREC             NOT A DIRECTORY RECORD
*
GOODMBR  LA    R2,ALIASES
         TM    11(R1),X'80'          ALIAS ENTRY?
         BO    *+12                  YES, BRANCH
         LA    R2,REALMBR            NO, A REAL ENTRY
         NI    0(R1),X'7F'           TURN OFF THE TOP BIT IN THE NAME
         L     R14,0(,R2)
         LA    R14,1(,R14)           INCREMENT ALIASES OR REALMBR
         ST    R14,0(,R2)
         LR    R2,R1
         TTRMBB 8(R1),MBB=DOUBLE     CONVERT TTR TO MBBCCHHR
         L     R1,=A(SAVETBL-16)
TBLINC   LA    R1,16(,R1)
         CLI   0(R1),X'40'           EMPTY TABLE ENTRY?
         BE    INSERT                YES, BRANCH
         CLC   8(8,R1),DOUBLE        IS IT THIS ENTRY?
         BNE   TBLINC                NO, CHECK NEXT ENTRY
         TM    11(R2),X'80'          ALIAS?
         BO    NEXTMBR               YES, BRANCH
         MVC   0(8,R1),0(R2)         NO, USE THE REAL MEMBER NAME
         B     NEXTMBR
INSERT   MVC   0(8,R1),0(R2)        INSERT THE NAME
         MVC   8(8,R1),DOUBLE       INSERT THE MBBCCHHR
         LR    R5,R1                SAVE THE "HIGH-WATER" MARK
         L     R1,REALENT
         LA    R1,1(,R1)            COUNT THE NUMBER OF TABLE ENTRIES
         ST    R1,REALENT
         C     R1,=F'1000'
         BL    NEXTMBR
         OUTPT MINUS1,MANYENT
         ABEND 99              ** TOO MANY MEMBER ENTRIES IN THE TABLE
ALIAS    L     R1,ALIASES
         LA    R1,1(,R1)             INCREMENT ALIAS MEMBER COUNT
         ST    R1,ALIASES
         B     NEXTMBR
NOTDIREC SR    R15,R15               SIMULATED END OF FILE (GOOD READ)
MBREOF   L     R1,READTOT            END OF FILE IN DIRECTORY
         ST    R1,USEDBLK            USED COUNT
         ST    R1,ALLOCBLK           ALLOCATED COUNT
         B     PRESORT
 EJECT
LASTUSED L     R0,READTOT            END OF USED ENTRIES IN DIRECTORY
         ST    R0,USEDBLK
RPTEXCP  BAL   R14,EXCPSTAT          READ AND COLLECT STATISTICS
         LTR   R15,R15
         BZ    RPTEXCP
         L     R1,READTOT
         ST    R1,ALLOCBLK           ALLOCATED COUNT
PRESORT  SR    R0,R0
         XI    FLAGS,DIRECTOR        TURN OFF THE "IN DIRECTORY" FLAG
         ST    R15,TEMP              SAVE FOR LATER
         ST    R0,READTOT            REINITIALIZE READTOT
         ST    R0,MAXBLK                                 MAXBLK
         ST    R0,BYTECNT                                      BYTECNT
         MVC   MINBLK(4),=F'33000'   REINITIALIZE MINBLK
*
*     SORT THE MEMBER ARRAY BY MBBCCHHR  (USES A SHELLSORT)
*
         L     R2,REALENT           NUMBER OF ELEMENTS TO SORT
         SLA   R2,4                 GAP IS  16 * ELEMENTS
         L     R3,=A(SAVETBL-16)    TABLE BASE ADDRESS
         LR    R0,R2                N=GAP
SHELLG   SRL   R2,5                 GAP=GAP/2  (DROP FRACTION BITS)
         SLA   R2,4                 GAP LESS THAN ONE?
         BZ    SORTED               YES, DONE
         LR    R4,R2                I=GAP
SHELLI   LA    R4,16(,R4)           I=I+1   (TABLE WIDTH IS 16)
         CR    R4,R0                I<=N?
         BH    SHELLG               NO, HALVE THE GAP
         LR    R1,R4                YES, J=I
SHELLJ   SR    R1,R2                J=J-GAP
         BNP   SHELLI               IF J<=0, INCREMENT I
         LA    R15,0(R3,R1)         ADDRESS OF SAVETBL(J)
         LA    R14,0(R2,R1)         JG=J+GAP
         LA    R14,0(R3,R14)        ADDRESS OF SAVETBL(JG)
         CLC   8(8,R15),8(R14)      MBBCCHHR(J) <= MBBCCHHR(JG)
         BNH   SHELLI               YES, INCREMENT I
         XC    0(16,R14),0(R15)     INTERCHANGE
         XC    0(16,R15),0(R14)                SAVETBL ENTRIES
         XC    0(16,R14),0(R15)                               J AND JG
         B     SHELLJ               INCREMENT J
 EJECT
SORTED   L     R2,=A(SAVETBL-16)
         LTR   R5,R5                ANY MEMBERS?
         BZ    NULLPDS              NO, BRANCH
         MVC   LASTMEMS(8),0(R5)    LAST MEMBER IN THE PDS
         OI    LASTMEMS,X'80'       MAKE PRINTABLE (IF REAL NAME)
         OUTPT MINUS1,LASTMEMS
NULLPDS  L     R15,TEMP             RESTORE THE RETURN CODE
*
NXTREAL  LA    R2,16(,R2)           LAST MEMBER WAS REAL
NXTONE   L     R0,BYTECNT            LAST MEMBER WAS GAS
         ST    R0,SAVETOT            SAVE FOR LATER
         C     R15,=F'8'             END OF DATA SET?
         BE    LASTMTCH              YES, BRANCH
         OI    FLAGS,REALONE         SET FLAG FOR ACTUAL MEMBER
         MVC   CURRMBR(8),0(R2)      SAVE THE CURRENT MEMBER NAME
         CLC   8(8,R2),IOBSEEK       NEXT MBBCCHHR IN THE TABLE?
         BE    REALRD                YES, BRANCH TO READ LOOP
         BH    NOABE13               NO, HIGHER -- A "GAS" MEMBER
         OUTPT MINUS1,TTRTOLOW
         ABEND 13            **  TABLED TTR < CURRENT TTR  **
NOABE13  L     R1,GASCNT             NO, HIGHER -- A "GAS" MEMBER
         LA    R1,1(,R1)
         ST    R1,GASCNT             ADD ONE TO THE GAS MEMBER COUNT
         XI    FLAGS,REALONE         TURN OFF THE ACTUAL MEMBER FLAG
         TM    FLAGS,GAS             GAS RECORDS DESIRED?
         BNO   GASRD                 NO, BRANCH
         MBBTTR IOBSEEK,TEMP         CONVERT MBBCCHHR TO TTRN
         HEXES TEMP,3,GASMEM+21
         TM    DS1RECFM,X'C0'        LRECL=U?
         BNO   DODATA                NO, BRANCH
         OUTPT MINUS1,GASMEM,LN=28   YES, DO NOT DO A DATA LINE
         B     GASRD
*
DODATA   OUTPT MINUS1,BLANKS
         OUTPT MINUS1,GASMEM
         BAL   R14,EXCPSTAT          INPUT THE NEXT REAL BLOCK
         ST    R15,TEMP              SAVE THE RETURN CODE
         L     R15,LS
         C     R15,=F'79'
         BNH   *+8
         L     R15,=F'79'            LIMIT OUTPUT LENGTH TO 79 BYTES
         LTR   R15,R15
         BNZ   *+12
         LA    R15,1                 IF NULL LENGTH, USE ONE BYTE AND
         MVI   BUFFER,X'40'             BLANK THE FIRST BYTE OF BUFFER
         OUTPT MINUS1,BUFFER,LN=0(R15)
         L     R15,TEMP              RESTORE THE RETURN CODE
         B     GASRDF                SKIP THE FIRST READ (ALREADY DONE)
 EJECT
GASRD    BAL   R14,EXCPSTAT          "GAS" MEMBER
         L     R1,GASRDS
         LA    R1,1(,R1)             ADD ONE TO THE GAS RECORD COUNT
         ST    R1,GASRDS
GASRDF   LTR   R15,R15               (DON'T COUNT THE FIRST ONE)
         BZ    GASRD
         L     R0,BYTECNT
         S     R0,SAVETOT            GAS BYTES THIS MEMBER
         L     R1,GASBYTE
         AR    R1,R0
         ST    R1,GASBYTE            TOTAL GAS BYTES
         C     R0,MAXGAS
         BNH   *+8
         ST    R0,MAXGAS             MAX BYTES/GAS MEMBER
         C     R0,MINGAS
         BNL   *+8
         ST    R0,MINGAS             MIN BYTES/GAS MEMBER
         B     NXTONE
*
REALRD   BAL   R14,EXCPSTAT          "REAL" MEMBER
REALRDF  LTR   R15,R15               END OF FILE?
         BZ    REALRD                NO, CONTINUE LOOPING
         L     R0,BYTECNT
         S     R0,SAVETOT
         L     R1,RELBYTE
         AR    R1,R0
         ST    R1,RELBYTE            TOTAL BYTES FOR REAL MEMBERS
         C     R0,MAXREL
         BNH   *+8
         ST    R0,MAXREL             MAX BYTES/REAL MEMBER
         C     R0,MINREL
         BNL   *+8
         ST    R0,MINREL             MIN BYTES/REAL MEMBER
         B     NXTREAL
 EJECT
LASTMTCH CLI   0(R2),X'40'
         BE    ENDPSPO
         OUTPT MINUS1,NOTFOUND
         ABEND 19            **  ALL MEMBERS IN THE TABLE NOT FOUND  **
ENDPSPO  OUTPT MINUS1,BLANKS
         OUTPT MINR,MINRS
         L     R15,TRACKNUM
         SRL   R15,1
         A     R15,ALLR           (ALLR + TRACKNUM/2) / TRACKNUM
         SR    R14,R14
         D     R14,TRACKNUM       AVERAGE RECORDS PER TRACK
         LR    R0,R15
         OUTPT R0,AVGRS
         OUTPT MAXR,MAXRS
         OUTPT MINUS1,BLANKS
         L     R15,TRACKNUM
         SRL   R15,1
         A     R15,TRKBYTE        (TRKBYTE + TRACKNUM/2) / TRACKNUM
         SR    R14,R14
         D     R14,TRACKNUM       AVERAGE BYTES PER TRACK
         ST    R15,AVGBTRK
         OUTPT MINBYTE,MINBYTES   MIN BYTES/TRACK
         OUTPT AVGBTRK,AVGBYTES   AVG BYTES/TRACK
         OUTPT MAXBYTE,MAXBYTES   MAX BYTES/TRACK
         OUTPT MINUS1,BLANKS
         OUTPT TRKBYTE,TOTBYTS    TOTAL DATA BYTES ON ALL TRACKS
         OUTPT MINUS1,BLANKS
         CLC   MINBLK,=F'33000'   EVER CHANGED?
         BNE   *+10               YES, BRANCH
         SR    R14,R14            NO, RESET TO ZERO
         ST    R14,MINBLK
         OUTPT MINBLK,MINBLKS
         LA    R14,1
         C     R14,READTOT
         BH    *+8
         L     R14,READTOT     TAKE MAX OF READTOT AND 1
         L     R1,READTOT
         SRL   R1,1
         A     R1,BYTECNT
         SR    R0,R0
         DR    R0,R14          AVG BLK= (BYTECNT + READTOT/2) /
         LR    R0,R1                     MAX( READTOT, 1)
         OUTPT R0,AVGBLKS
         OUTPT MAXBLK,MAXBLKS
         OUTPT MINUS1,BLANKS
         OUTPT READTOT,NUMBLKS
         TM    DS1DSORG,X'02'   DSORG=PO?
         BNO   END3
         OUTPT GASRDS,GASBLKS
         OUTPT EOFS,ENDMBR
         OUTPT GASCNT,GASMBR
         L     R0,GASCNT
         LTR   R0,R0
         BZ    NOGASM
         OUTPT MINUS1,BLANKS
         OUTPT MINGAS,MINGASS     MIN BYTES PER GAS MEMBER
         L     R15,GASCNT
         SRL   R15,1
         A     R15,GASBYTE
         SR    R14,R14
         D     R14,GASCNT
         LR    R0,R15
         OUTPT R0,AVGGASS         AVG BYTES PER GAS MEMBER
         OUTPT MAXGAS,MAXGASS     MAX BYTES PER GAS MEMBER
         OUTPT MINUS1,BLANKS
         L     R1,GASBYTE
         LA    R15,100
         MR    R0,R15
         A     R1,=F'5'
         D     R0,AVGBTRK         TRKS*100 = (GASBYTE*100+5) / AVGBTRK
         CVD   R1,DOUBLE             (DOES THE REQUIRED ROUNDING)
         UNPK  GASTRK(9),DOUBLE+3(5)
         MVC   GASTRK+8(1),GASTRK+7  MOVE TENS DIGIT OVER HUNDREDS
         MVI   GASTRK+7,C'.'      MOVE IN THE DECIMAL POINT
         LA    R1,GASTRK-1
         LA    R1,1(,R1)          SCAN FOR
         CLI   0(R1),C'0'                 FIRST
         BE    *-8                             NON-ZERO
         CLI   0(R1),C'.'         WAS FIRST NON-ZERO THE PERIOD?
         BNE   *+6                NO, BRANCH
         BCTR  R1,0               YES, BACK UP ONE CHARACTER
         OUTPT MINUS1,0(R1)       OUTPUT GAS TRACK TOTAL
NOGASM   OUTPT MINUS1,BLANKS
         L     R0,EOFS
         S     R0,GASCNT
         BNP   NOREAL
         ST    R0,TEMP
         OUTPT MINREL,MINRELS     MIN BYTES PER REAL MEMBER
         L     R15,TEMP
         SRL   R15,1
         A     R15,RELBYTE
         SR    R14,R14
         D     R14,TEMP
         LR    R0,R15
         OUTPT R0,AVGRELS         AVG BYTES PER MEMBER
         OUTPT MAXREL,MAXRELS     MAX BYTES PER MEMBER
         B     SOMEARE
NOREAL   OUTPT MINUS1,NOREALS
SOMEARE  OUTPT MINUS1,BLANKS
         OUTPT ALLOCBLK,ALLBLK
         OUTPT USEDBLK,USEBLK
         L     R1,REALMBR
         A     R1,ALIASES
         ST    R1,MINBLK
         OUTPT MINBLK,USENAME
         L     R1,ALIASES
         LTR   R1,R1
         BZ    END3
         OUTPT ALIASES,ALSNAME
         CLC   REALMBR,REALENT    ANY ALIASES WITHOUT REALS?
         BE    END3               NO, DONE
         OUTPT MINUS1,BLANKS
         BAL   R14,REREAD
         L     R3,ALIASES
TRYAGN   L     R2,=A(SAVETBL-16)
         BAL   R14,MEMBERS
         LTR   R15,R15
         BP    END3
         TM    11(R1),X'80'       ALIAS?
         BNO   TRYAGN             NO, GET THE NEXT ENTRY
         MVC   ALNOREAL(8),0(R1)  PREPARE ERROR MESSAGE
         TTRMBB 8(R1),MBB=DOUBLE
REALAGN  LA    R2,16(,R2)
         CLC   8(8,R2),DOUBLE     CORRESPONDING TABLE ENTRY?
         BNE   *-10               NO, TRY THE NEXT ONE
         TM    0(R2),X'80'        YES, ALIAS (IN THE TABLE)?
         BNO   FOUNDIT                 NO, BRANCH
         OUTPT MINUS1,ALNOREAL         YES, ALIAS WITH NO REAL
FOUNDIT  BCT   R3,TRYAGN
 EJECT
END3     CLOSE IN                 END POINT IF DSORG=PO, PS OR DA
         TM    DS1DSORG,X'80'     ISAM DATA SET?
         BNO   ENDALL             NO, BRANCH
         OI    JFCBTSDM,X'08'     PREVENT REVERSE MERGE TO JFCB
         MVI   JFCBDSNM,X'04'     SET-UP DSNAME FOR
         MVC   JFCBDSNM+1(43),JFCBDSNM             FORMAT 4 DSCB
         OPEN  (IN,INPUT),TYPE=J  DO AN OPEN JFCB
         TM    DCBOFLGS,X'10'     OPENED CORRECTLY?
         BZ    ABE40              NO, QUIT
         BAL   R14,REREAD
         MVC   IOBSEEK+3(5),DS1PTRDS  POINTER TO FORMAT 2 DSCB
         BAL   R14,EXCP           READ THE FORMAT 2 DSCB
         LTR   R15,R15
         BZ    NOABE11
         OUTPT MINUS1,NODSCB2     FORMAT 2 DSCB NOT READ CORRECTLY
         ABEND 11
NOABE11  OUTPT MINUS1,BLANKS
         OUTPT MINUS1,DSCB2
         SR    R0,R0
         IC    R0,DS2NOLEV
         ST    R0,TEMP
         OUTPT R0,DSSNOLEV         INDEX LEVELS
         MVC   TEMP+3(1),DS2DVIND
         OUTPT TEMP,DSSDVIND       TRACKS FOR MASTER INDEX
         MVC   TEMP+3(1),DS2CYLOV
         OUTPT TEMP,DSSCYLOV       TRACKS OF CYL. OVERFLOW PER CYLINDER
         MVC   TEMP+2(2),DS2TAGDT
         OUTPT TEMP,DSSTAGDT       TAGGED FOR DELETION
         MVC   TEMP+1(3),DS2RORG3
         OUTPT TEMP,DSSRORG3       OVERFLOW RECORD ACCESSES
         LH    R0,DS2NOBYT
         OUTPT R0,DSSNOBYT         CORE TO HOLD THE HIGHEST INDEX
         SR    R0,R0
         IC    R0,DS2NOTRK
         OUTPT R0,DSSNOTRK         TRACKS OCCUPIED BY THE HIGHEST INDEX
         MVC   TEMP(4),DS2PRCTR
         OUTPT TEMP,DSSPRCTR       RECORDS IN THE PRIME AREA
         LH    R0,DS2BYOVL
         OUTPT R0,DSSBYOVL         BYTES LEFT ON CUR. IND. OVER. TRACK
         LH    R0,DS2RORG2
         OUTPT R0,DSSRORG2         TRACKS LEFT IN IND. OVERFLOW AREA
         LH    R0,DS2OVRCT
         OUTPT R0,DSSOVRCT         RECORDS IN THE OVERFLOW AREA
         LH    R0,DS2RORG1
         OUTPT R0,DSSRORG1         CYLINDER OVERFLOW AREAS (FULL)
         CLOSE IN
*
ENDALL   CLOSE OUT
         L     R13,4(R13)
         RETURN (14,12),RC=0
         EJECT
EXCPSTAT ST    R14,STATR14    ISSUES EXCP'S AND GATHERS STATISTICS
         BAL   R14,EXCP
         B     *+4(R15)
         B     R15IS0             GOOD READ
         B     R15IS4             END OF FILE OR END OF MEMBER
         B     R15IS8             END OF DATA SET
R15IS12  OUTPT MINUS1,BLANKS      I/O OR OTHER DISK ERROR
         L     R14,INAROW
         LA    R14,1(,R14)        UPDATE NUMBER OF CONSECUTIVE ERRORS
         ST    R14,INAROW
         C     R14,=F'10'         ALLOW ONLY 10 CONSECUTIVE ERRORS
         BL    CONTINUE
         OUTPT MINUS1,TOOMANY     TOO MANY CONSECUTIVE ERRORS
         ABEND 999
CONTINUE HEXES SAVECB,1,IOERROR+17    ECB ERROR CODE
         HEXES CURMBB+3,5,IOERROR+27  CURRENT DISK CCHHR
         OUTPT MINUS1,IOERROR
         TM    DS1DSORG,X'02'     PDS?
         BNO   BLKNUM             NO, BRANCH
         TM    FLAGS,DIRECTOR     ERROR IN THE DIRECTORY?
         BO    DIRERR             YES, BRANCH
         TM    FLAGS,REALONE      ACTUAL MEMBER?
         BNO   GASERR             NO, BRANCH
         OI    CURRMBR,X'80'      MAKE PRINTABLE
         OUTPT MINUS1,CURRMBR     OUTPUT THE CURRENT MEMBER NAME
         B     R15IS4$
GASERR   OUTPT MINUS1,GASERRS     ERROR IN READING GAS DATA
         B     R15IS4$
DIRERR   OUTPT MINUS1,DIRERRS     DIRECTORY I/O ERROR (IGNORE BLOCK)
BLKNUM   OUTPT READTOT,BLKNUMS    READ ERROR MESSAGE
         B     EXCPSTAT+4         CONTINUE--USING THE NEXT BLOCK
*
R15IS8   DS    0H                 END OF DATA SET
         B     TRKNOINC           FINISH UP PROCESSING
*
R15IS4   MVC   INAROW,=F'0'       END OF MEMBER
R15IS4$  LA    R15,4              TREAT AS AN END OF MEMBER CONDITION
         L     R1,EOFS
         LA    R1,1(,R1)          END OF MEMBER COUNTER
         ST    R1,EOFS
         CLC   MBBCCHH(7),CURMBB  NEW TRACK
         BNE   RETURNS
         L     R1,LASTR
         LA    R1,1(,R1)
         ST    R1,LASTR           UPDATE THE RECORD COUNT
         B     RETURNS
*
R15IS0   MVC   INAROW,=F'0'       GOOD READ
R15IS0$  L     R1,READTOT
         LA    R1,1(,R1)
         ST    R1,READTOT         COUNT OF BLOCKS READ
         L     R1,LS              CURRENT BLKSIZE
         LR    R0,R1              SAVE FOR LATER
         C     R1,MINBLK
         BH    *+8
         ST    R1,MINBLK          MINIMUM LENGTH BLOCK READ
         C     R1,MAXBLK
         BL    *+8
         ST    R1,MAXBLK          MAXIMUM LENGTH BLOCK READ
         A     R1,BYTECNT
         ST    R1,BYTECNT         TOTAL NUMBER OF BYTES READ
         TM    DS1DSORG,X'80'     ISAM DATA SET?
         BNO   NOFILSUM           NO, BRANCH
         L     R1,READTOTI
         LA    R1,1(,R1)
         ST    R1,READTOTI        COUNT OF BLOCKS READ
         LR    R1,R0              CURRENT BLKSIZE
         C     R1,MINBLKI
         BH    *+8
         ST    R1,MINBLKI         MINIMUM LENGTH BLOCK READ
         C     R1,MAXBLKI
         BL    *+8
         ST    R1,MAXBLKI         MAXIMUM LENGTH BLOCK READ
         A     R1,BYTECNTI
         ST    R1,BYTECNTI        TOTAL NUMBER OF BYTES READ
NOFILSUM CLC   MBBCCHH(7),CURMBB  SAME MBBCCHH?
         BNE   NEWTRACK           NO, BRANCH
         A     R0,CURBYTE
         ST    R0,CURBYTE         ACCUMULATE TRACK BYTE COUNT
         L     R1,LASTR
         LA    R1,1(,R1)
         ST    R1,LASTR           ACCUMULATE RECORD COUNT/TRACK
         B     RETURNS
*
NEWTRACK L     R1,TRACKNUM        SWITCH TRACKS --
         LA    R1,1(,R1)
         ST    R1,TRACKNUM        ACTUAL TRACKS USED
TRKNOINC MVC   MBBCCHH(7),CURMBB  SAVE CURRENT TRACK NUMBER
         L     R0,CURBYTE
         L     R1,LS
         ST    R1,CURBYTE
         L     R1,TRKBYTE
         AR    R1,R0
         ST    R1,TRKBYTE         COUNT OF ALL CHARACTERS READ
         L     R1,LASTR
         LA    R14,1
         ST    R14,LASTR
         L     R14,ALLR
         AR    R14,R1
         ST    R14,ALLR           COUNT OF ALL READS
         LTR   R0,R0              FIRST ENTRY HERE?
         BNP   NOMINS             YES, BRANCH
         C     R0,MINBYTE
         BNL   *+8
         ST    R0,MINBYTE         MIN BYTES/TRACK
         C     R1,MINR
         BNL   *+8
         ST    R1,MINR            MIN RECORD NUMBER/TRACK
NOMINS   C     R0,MAXBYTE
         BNH   *+8
         ST    R0,MAXBYTE         MAX BYTES/TRACK
         C     R1,MAXR
         BNH   *+8
         ST    R1,MAXR            MAX RECORD NUMBER/TRACK
*
RETURNS  L     R14,STATR14
         BR    R14
         EJECT
*
*   MEMBER INPUT ROUTINE
*
*
MEMBERS  ST    R14,MEMBR14
         LM    R15,R1,DIRPTRS     PICK UP ADDR, INCR, LIMIT
         LTR   R1,R1              INITIALIZED?
         BNZ   DEBLOCK            YES, BRANCH
         BAL   R14,REREAD         OPEN IN FOR INPUT OF THE DIRECTORY
GETBLK   BAL   R14,EXCPSTAT       GET A DIRECTORY BLOCK
         LTR   R15,R15            END OF FILE?
         BP    MBRDONE            YES, END OF FILE INDICATION
         CLC   LS+2(2),=H'256'    GOOD DIRECTORY BLOCK?
         BNE   NODIRBLK           NO, BRANCH
         LA    R0,2               INCREMENT IS 2 FIRST
         LH    R1,BUFFER          LENGTH HALFWORD
         LA    R1,BUFFER-1(R1)    LIMIT
         LA    R15,BUFFER         START
DEBLOCK  BXH   R15,R0,GETBLK
         IC    R0,11(,R15)
         N     R0,=F'31'          GET LENGTH BITS
         AR    R0,R0              LENGTH * 2
         A     R0,=F'12'          LENGTH * 2  +  12
         STM   R15,R1,DIRPTRS     SAVE FOR LATER
         CLI   0(R15),X'FF'       LAST MEMBER
         BNE   *+12               NO, BRANCH
         LA    R15,8              LAST MEMBER USED INDICATION
         B     MBRDONE
         LR    R1,R15             ADDRESS OF MEMBER NAME (RETURNED)
         SR    R15,R15            GOOD READ INDICATION
         B     MBRDONE
NODIRBLK OUTPT MINUS1,EOFSIMS     RECORD LENGTH IS NOT 256
         OUTPT LS,BLOCKLEN        OUTPUT CURRENT LRECL
         LA    R15,12             ERROR INDICATION
MBRDONE  L     R14,MEMBR14        RETURN ADDRESS
         BR    R14
DIRPTRS  DC    3A(0)              SAVEAREA FOR R15, R0 AND R1
MEMBR14  DC    A(0)               SAVEAREA FOR RETURN ADDRESS
         EJECT
*
*   EXCP SUBROUTINES  (OPENIN, REREAD AND EXCP)
*
*
*   OPENS THE FILE WITH DDNAME IN
*
OPENIN   ST    R14,EXCPR14                  ENTRY TO OPEN THE IN FILE
         RDJFCB (IN)                        GET DSN AND VOLUME SERIAL
         LTR   R15,R15                      SUCCESSFUL?
         BZ    NOABE40                      YES, BRANCH
ABE40    OUTPT MINUS1,NOTOPEN
         ABEND 40                  ** RDJFCB, OBTAIN OR OPEN FAILED **
NOABE40  OBTAIN MYLABEL                     READ IN THE FORMAT 1 DSCB
         LTR   R15,R15                      SUCCESSFUL?
         BNZ   ABE40                        NO, STOP THE PROGRAM
         OPEN  (IN,INPUT)
         TM    DCBOFLGS,X'10'               IN OPEN?
         BZ    ABE40                        NO, STOP THE PROGRAM
         B     REREAD+4
*
*
*   ENTRY TO REREAD THE OPEN DATA SET (DDNAME IS IN)
*
REREAD   ST    R14,EXCPR14
         L     R1,DCBDEBAD
         SR    R14,R14
         IC    R14,16(R1)                   NUMBER OF EXTENTS
         ST    R14,NUMEXT                   SAVE FOR LATER
         LA    R14,16(R1)                   CURRENT EXTENT POINTER - 16
         ST    R14,CUREXT                   SAVE FOR LATER
         MVI   IOBSEEK,X'00'                RESET THE EXTENT NUMBER
         LA    R15,4                        EARLY EXIT FLAG
         B     FIRSTONE                     DO THE INITIAL EXTENT
*
*
*
*    FOR EACH EXTENT, INITIALIZE CCHHR, SECTOR NUMBER AND READ IN THE
*        LENGTH OF THE FIRST RECORD.
*
EACHXTNT SR    R1,R1              AFTER THE FIRST EXTENT --
         IC    R1,IOBSEEK
         LA    R1,1(,R1)
         STC   R1,IOBSEEK         INCREMENT THE EXTENT NUMBER
         C     R1,NUMEXT          PAST LAST EXTENT?
         BNL   EOF$DS             YES, NO END OF DATA SET RECORDED
*
FIRSTONE ST    R15,EXCPR15                  SAVE ENTRY CODE FOR LATER
         L     R1,CUREXT
         LA    R1,16(R1)                    CURRENT EXTENT ENTRY
         MVC   IOBSEEK+3(4),6(R1)           INITIAL CCHH
         ST    R1,CUREXT                    UPDATE FOR LATER
         MVI   IOBSEEK+7,0
         MVI   SNO,0                        SET SECTOR NUMBER=ZERO
         LA    1,CCW1A
         ST    1,CPADDR
         EXCP  IOB
         WAIT  ECB=ECB
         CLI   ECB,X'7F'                    GOOD READ?
         BE    NOABE30                      YES, BRANCH
         OUTPT MINUS1,FIRSTRD
         ABEND 30          **  FIRST READ OF EXTENT DID NOT WORK  **
NOABE30  LA    R1,CCW1
         ST    R1,CPADDR
         MVC   CCW3+6(2),DATALN             GET LENGTH FOR NEXT READ
         MVI   IOBSEEK+7,1                  SET R=1
         L     R15,EXCPR15
         LTR   R15,R15                      EARLY EXIT DESIRED?
         BZ    EXCP+4                       NO, ISSUE THE EXCP AGAIN
         L     R14,EXCPR14          RETURN FROM OPENIN, REREAD OR
         BR    R14                      AFTER EOF AND EXTENT VIOLATION
*
*   ENTRY FOR EACH EXCP TO BE PERFORMED
*
EXCP     ST    R14,EXCPR14
         CLI   ECB,X'42'                    EXTENT VIOLATION LAST TIME?
         BE    EACHXTNT                     YES, DO THE NEXT EXTENT
         MVC   CURMBB(8),IOBSEEK  SAVE THE DISK ADDRESS OF THIS RECORD
         MVC   LS+2(2),DATALN     SAVE THE BLOCK LENGTH FOR THIS READ
         EXCP  IOB
         WAIT  ECB=ECB
         SR    R15,R15            GOOD READ FLAG
         CLI   ECB,X'42'          EXTENT VIOLATION (NEXT TIME)?
         BE    ENDEXCP            YES, QUIT
         TM    DS1DSORG,X'80'     ISAM DATA SET?
         BO    *+14               YES, IGNORE DS1LSTAR CHECK FOR ISAM
         CLC   LASTMBB(8),CURMBB  PAST THE DS1LSTAR MARKER?
         BNH   EOF$DS             YES, END OF FILE AND DATA SET
         CLI   ECB,X'7F'          GOOD READ?
         BE    ENDEXCP            YES, QUIT
*
         CLI   ECB,X'41'          PERMANENT ERROR?
         BE    NOABE10            YES, BRANCH
         OUTPT MINUS1,BADERROR
         B     SOMERR         **  BAD ERROR; ECB NOT HEX 41, 42 OR 7F
NOABE10  TM    CSW+4,X'01'        ACTUALLY EOF?
         BO    EOF
         CLC   CSW+4(4),=X'00200000'  NULL MEMBER OR DATA SET?
         BE    EOF                    YES, BRANCH
         OUTPT MINUS1,PERMERR
SOMERR   LA    R15,12         **  PERMANENT ERROR--NOT END OF FILE  **
         MVC   SAVECB(1),ECB      SAVE ECB CODE FOR LATER
         B     REISSUE
*
EOF      TM    DS1DSORG,X'60'     DSORG=PS OR DA?
         BNZ   EOF$DS             YES, END OF FILE AND DATA SET
         LA    R15,4              END OF MEMBER FLAG
         CLC   =H'0',DATALN       NEXT BLOCK LENGTH = 0?
         BNE   ENDEXCP            NO, BRANCH
REISSUE  ST    R15,EXCPR15
         LA    R1,CCW1A           NEED TO REISSUE THE INITIALIZATION
         ST    R1,CPADDR                EXCP TO GET LENGTH AND ADDRESS
         EXCP  IOB                      OF THE NEXT DATA BLOCK
         WAIT  ECB=ECB
         L     R15,EXCPR15        READ ERROR (12) OR END OF MEMBER (4)
         LA    R1,CCW1
         ST    R1,CPADDR
         MVC   CCW3+6(2),DATALN   DATALENGTH FOR NEXT EXCP
         CLI   ECB,X'42'          EXTENT VIOLATION?
         BE    EACHXTNT           YES, DO THE NEXT EXTENT -- EARLY EXIT
         CLI   ECB,X'7F'          GOOD READ?
         BE    ENDEXCP            YES, QUIT
         CLI   ECB,X'41'          PERMANENT ERROR?
         BE    NOABE70            YES, CHECK EOF
ABE70    OUTPT MINUS1,BADERROR
         ABEND 70             **  SOME OTHER BAD ERROR  **
NOABE70  TM    CSW+4,X'01'        NULL MEMBER (ANOTHER EOF)?
         BO    ENDEXCP
ABE80    OUTPT MINUS1,PERMERR
         ABEND 80             **  PERMANENT ERROR AFTER EOF  **
EOF$DS   LA    R15,8              END OF FILE AND DATA SET FLAG
ENDEXCP  L     R14,EXCPR14        RETURN ADDRESS
         BR    R14
         EJECT
*
*   OUTPUT ROUTINE
*      NOTE: R0 NEGATIVE IF NO NUMERIC OUTPUT; OTHERWISE OUTPUT NUMERIC
*            R1 CONTAINS THE ADDRESS OF THE STRING TO OUTPUT
*            R14 CONTAINS THE RETURN ADDRESS
*            R15 CONTAINS THE LENGTH OF THE STRING
*
OUTRTN   ST    R14,RETOUT
         BCTR  R15,0                  MACHINE LENGTH
         MVC   OUTLINE+10(*-*),0(R1)   <<EXECUTED>>
         EX    R15,*-6                MOVE IN THE STRING
         LTR   R0,R0                  ANY LEADING NUMERICS?
         LA    R1,OUTLINE+10
         BM    OUTSTMT                NO, BRANCH
         CVD   R0,DOUBLE
         UNPK  OUTLINE(9),DOUBLE+3(5) ASSUME NO MORE THAN 9 DIGITS
         LA    R1,OUTLINE-1
         LA    R1,1(,R1)              SCAN FOR
         CLI   0(R1),C'0'                     FIRST
         BE    *-8                                 NON-ZERO
         OI    OUTLINE+8,X'F0'        MAKE THE LAST DIGIT PRINTABLE
OUTSTMT  TM    DCBOFLGS-IHADCB+OUT,X'10'  OUT OPEN?
         BO    OUTNOW                     YES, BRANCH TO PUT
         ST    R1,SAVER1                  SAVE R1
         OPEN  (OUT,OUTPUT)               OPEN
         L     R1,SAVER1                  RESTORE R1
         TM    DCBOFLGS-IHADCB+OUT,X'10'  OPEN NOW?
         BO    OUTNOW                     YES, BRANCH
         WTO   'DDNAME "OUT" COULD NOT BE OPENED',ROUTCDE=(11)
         ABEND 69            ** OUTPUT FILE DID NOT OPEN  **
OUTNOW   LR    R0,R1
         PUT   OUT,(0)                OUTPUT THE LINE
         MVI   OUTLINE,X'40'
         MVC   OUTLINE+1(89),OUTLINE  BLANK IT
         L     R14,RETOUT             RETURN
         BR    R14
RETOUT   DC    A(0)                   SAVEAREA FOR RETURN ADDRESS
SAVER1   DC    A(0)                   SAVEAREA FOR R1 DURING OPEN
OUTLINE  DC    CL90' '
         EJECT
CCW1A    CCW   X'31',IOBSEEK+3,X'60',5      SEARCH ID EQUAL (CCHHR)
CCW2A    CCW   X'08',*-8,X'60',1            TIC
CCW3A    CCW   X'92',IOBSEEK+3,X'20',8      MT READ NEXT COUNT
*
CCW0     CCW   X'23',SNO,X'60',1            SET SECTOR
CCW1     CCW   X'31',IOBSEEK+3,X'60',5      SEARCH ID EQUAL (CCHHR)
CCW2     CCW   X'08',*-8,X'60',1            TIC
CCW3     CCW   X'06',BUFFER,X'60',19069     READ DATA
CCW4     CCW   X'92',IOBSEEK+3,X'60',8      MT READ NEXT COUNT
CCW5     CCW   X'22',SNO,X'20',1            READ SECTOR NUMBER
*
         DS    0F
IOB      DC    X'C2000000'
         DC    A(ECB)
CSW      DC    2A(0)
CPADDR   DC    A(CCW1)
         DC    A(IN)
         DC    2A(0)
IOBSEEK  DC    2A(0)          NEXT MBBCCHHR ADDRESS
KEYLN    DS    X              NEXT KEYLENGTH
DATALN   DS    2X             NEXT RECORD LENGTH
SNO      DC    X'00'          NEXT SECTOR NUMBER
*
CURMBB   DC    CL8' '         CURRENT MBBCCHHR ADDRESS
MBBCCHH  DC    CL7' '         SAVE AREA FOR MBBCCHH
*
ECB      DC    F'0'           ECB
LS       DC    F'0'           LENGTH OF THE CURRENT RECORD
FLAGS    DC    X'01'                      FLAG BYTE
GAS      EQU   X'01'                      GAS RECORDS DESIRED (DEFAULT)
LABELS   EQU   X'02'                      LABELS ONLY (NO DATA READ)
REALONE  EQU   X'40'                      ERROR IN ACTUAL MEMBER FLAG
DIRECTOR EQU   X'80'                      ERROR IN DIRECTORY RECORDS
SAVECB   DC    X'00'                      SAVE AREA FOR ECB
SAVE     DC    18F'0'                     SAVE AREA
LASTR    DC    F'0'                       CURRENT NUMBER OF RECORDS/TRK
EXCPR14  DC    F'0'                       RETURN REGISTER FOR EXCP
EXCPR15  DC    F'0'                       EXIT FLAG REGISTER SAVEAREA
STATR14  DC    F'0'                       RETURN REGISTER FOR EXCPSTAT
CUREXT   DC    F'0'                       ADDRESS OF THE CURRENT EXTENT
NUMEXT   DC    F'0'                       TOTAL EXTENTS IN THE DATA SET
READTOT  DC    F'0'                       TOTAL RECORDS READ
MINBLK   DC    F'33000'                   MINIMUM LENGTH BLOCK
MAXBLK   DC    F'0'                       MAXIMUM LENGTH BLOCK
BYTECNT  DC    F'0'                       TOTAL BYTES READ
READTOTI DC    F'0'                       TOTAL RECORDS READ (ISAM)
MINBLKI  DC    F'33000'                   MINIMUM LENGTH BLOCK (ISAM)
MAXBLKI  DC    F'0'                       MAXIMUM LENGTH BLOCK (ISAM)
BYTECNTI DC    F'0'                       TOTAL BYTES READ (ISAM)
TEMP     DC    F'0'                       WORK STORAGE
GASBYTE  DC    F'0'                       TOTAL BYTES IN GAS MEMBERS
RELBYTE  DC    F'0'                       TOTAL BYTES IN REAL MEMBERS
MINGAS   DC    X'7F000000'                MIN BYTES IN GAS MEMBERS
MAXGAS   DC    F'0'                       MAX BYTES IN GAS MEMBERS
MINREL   DC    X'7F000000'                MIN BYTES IN REAL MEMBERS
MAXREL   DC    F'0'                       MAX BYTES IN REAL MEMBERS
SAVETOT  DC    F'0'                       STARTING BYTE COUNT HOLD
MAXR     DC    F'0'                       MAXIMUM RECORDS/TRACK
MINR     DC    F'255'                     MINIMUM RECORDS/TRACK
TRKBYTE  DC    F'0'                       SUM OF ALL BLOCKSIZES
INAROW   DC    F'0'                       NUMBER OF CONSECUTIVE ERRORS
ALLR     DC    F'0'                       SUM OF ALL RECORDS READ
CURBYTE  DC    F'0'                       CURRENT TRACK BYTE COUNT
MAXBYTE  DC    F'0'                       MAXIMUM BYTES/TRACK
MINBYTE  DC    X'7F000000'                MINIMUM BYTES/TRACK
TRACKNUM DC    F'0'                       ACTUAL COUNT OF TRACKS USED
MINUS1   DC    F'-1'                      NO NUMERIC OUTPUT FLAG
EOFS     DC    F'0'                       COUNT OF END OF FILES
GASCNT   DC    F'0'                       NUMBER OF "GAS" MEMBERS
GASRDS   DC    F'0'                       NUMBER OF "GAS" RECORDS
AVGBTRK  DC    F'0'                       AVERAGE BYTES PER TRACK
AVAILTRK DC    F'0'                       FREE TRACKS
TOTALTRK DC    F'0'                       TOTAL TRACKS
ALIASES  DC    F'0'                       ALIASES IN THE DIRECTORY
REALMBR  DC    F'0'                       REAL ENTRIES (DIRECTORY)
REALENT  DC    F'0'                       MEMBER TABLE ENTRIES
ALLOCBLK DC    F'0'                       DIRECTORY BLOCKS ALLOCATED
USEDBLK  DC    F'0'                       DIRECTORY BLOCKS USED
*
PROGRAM  DC    CL50'CB$STATS -- DISK DATA SET STATISTICS PROGRAM      '
ABL      DC    CL50'                                                  '
NODSCB2  DC    CL50'THE ISAM LABEL RECORD COULD NOT BE INPUT          '
DSCB2    DC    CL50'THE FOLLOWING DATA IS FROM THE ISAM LABEL RECORD: '
DSSNOLEV DC    CL50'INDEX LEVELS PRESENT IN THIS DATA SET             '
DSSDVIND DC    CL50'TRACKS FOR EACH MASTER INDEX                      '
DSSCYLOV DC    CL50'TRACKS OF CYLINDER OVERFLOW AREA ON EACH CYLINDER '
DSSTAGDT DC    CL50'RECORDS TAGGED FOR DELETION                       '
DSSRORG3 DC    CL50'OVERFLOW ACCESSES (NOT COUNTING FIRST IN CHAIN)   '
DSSNOBYT DC    CL50'BYTES NEEDED TO HOLD THE HIGHEST INDEX IN CORE    '
DSSNOTRK DC    CL50'TRACKS OCCUPIED BY THE HIGHEST-LEVEL INDEX        '
DSSPRCTR DC    CL50'RECORDS IN THE PRIME AREA                         '
DSSBYOVL DC    CL50'BYTES LEFT ON CURRENT INDEPENDENT OVERFLOW TRACK  '
DSSRORG2 DC    CL50'TRACKS REMAINING IN THE INDEPENDENT OVERFLOW AREA '
DSSOVRCT DC    CL50'RECORDS IN THE OVERFLOW AREA                      '
DSSRORG1 DC    CL50'CYLINDER OVERFLOW AREAS THAT ARE FULL             '
MINRS    DC    CL50'IS THE MINIMUM NUMBER OF RECORDS PER TRACK        '
AVGRS    DC    CL50'IS THE AVERAGE NUMBER OF RECORDS PER TRACK        '
MAXRS    DC    CL50'IS THE MAXIMUM NUMBER OF RECORDS PER TRACK        '
MINBYTES DC    CL50'IS THE MINIMUM NUMBER OF DATA BYTES PER TRACK     '
AVGBYTES DC    CL50'IS THE AVERAGE NUMBER OF DATA BYTES PER TRACK     '
MAXBYTES DC    CL50'IS THE MAXIMUM NUMBER OF DATA BYTES PER TRACK     '
MINGASS  DC    CL50'IS THE MINIMUM NUMBER OF BYTES IN ANY GAS MEMBER  '
AVGGASS  DC    CL50'IS THE AVERAGE NUMBER OF BYTES IN A GAS MEMBER    '
MAXGASS  DC    CL50'IS THE MAXIMUM NUMBER OF BYTES IN ANY GAS MEMBER  '
MINRELS  DC    CL50'IS THE MINIMUM NUMBER OF BYTES IN ANY REAL MEMBER '
AVGRELS  DC    CL50'IS THE AVERAGE NUMBER OF BYTES IN A REAL MEMBER   '
MAXRELS  DC    CL50'IS THE MAXIMUM NUMBER OF BYTES IN ANY REAL MEMBER '
NOREALS  DC    CL50'NO REAL MEMBERS ARE IN THIS PARTITIONED DATA SET  '
MINBLKS  DC    CL50'IS THE SHORTEST BLOCK LENGTH                      '
AVGBLKS  DC    CL50'IS THE AVERAGE BLOCK LENGTH                       '
MAXBLKS  DC    CL50'IS THE MAXIMUM BLOCK LENGTH                       '
TOTBYTS  DC    CL50'TOTAL DATA BYTES ARE IN THIS DATA SET             '
NUMBLKS  DC    CL50'TOTAL DATA BLOCKS ARE RECORDED                    '
GASBLKS  DC    CL50'OF THESE ARE GAS BLOCKS                           '
EOFSS    DC    CL50'END OF FILE                                       '
ENDMBR   DC    CL50'END OF MEMBER (FILE MARKS) ARE RECORDED           '
GASMBR   DC    CL50'OF THESE ARE FOR GAS MEMBERS                      '
ALLBLK   DC    CL50'DIRECTORY BLOCKS ARE ALLOCATED                    '
USEBLK   DC    CL50'OF THESE ARE IN USE                               '
USENAME  DC    CL50'MEMBER NAMES ARE IN THE DIRECTORY                 '
ALSNAME  DC    CL50'OF THESE ARE ALIASES                              '
NUMTRKS  DC    CL50'TRACKS ARE ALLOCATED FOR THIS DATA SET            '
EXTENTS  DC    CL50'IS THE SECONDARY ALLOCATION QUANTITY              '
NOSEC    DC    CL50'NO SECONDARY ALLOCATION QUANTITY IS IN THE LABEL  '
FRETRKS  DC    CL50'OF THESE ARE NOT IN USE                           '
NUMEXTS  DC    CL50'EXTENTS ARE IN THIS DATA SET                      '
ALNOREAL DC    CL50'12345678 IS AN ALIAS BUT HAS NO "REAL" ENTRY      '
SCALOS   DC    CL50'DATA SET IS ALLOCATED IN 123456                   '
NOBDBS   DC    CL50'BYTES ARE USED IN LAST PDS DIRECTORY BLOCK        '
TRBALS   DC    CL50'BYTES ARE AVAILABLE ON THE LAST USED TRACK        '
IOERROR  DC    CL50'READ ERROR--ECB=12; CCHHR=12.45.78.01.34          '
TOOMANY  DC    CL50'TOO MANY CONSECUTIVE I/O ERRORS (10)              '
MANYENT  DC    CL50'MORE THAN 1000 ENTRIES IN THE MEMBER TABLE        '
NOTOPEN  DC    CL50'RDJFCB, OBTAIN OR OPEN FOR DDNAME "IN" FAILED     '
FIRSTRD  DC    CL50'FIRST READ OF AN EXTENT WAS NOT SUCCESSFUL        '
TTRTOLOW DC    CL50'TTR IN MEMBER TABLE IS LESS THAN THE CURRENT TTR  '
NOTFOUND DC    CL50'SOME MEMBERS IN THE MEMBER TABLE WERE NOT FOUND   '
BADERROR DC    CL50'UNDEFINED READ ERROR                              '
PERMERR  DC    CL50'UNDEFINED PERMANENT ERROR                         '
EOFSIMS  DC    CL50'BAD DIRECTORY RECORD -- RECORD LENGTH IS NOT 256  '
BLOCKLEN DC    CL50'IS THE BLOCK LENGTH  (END OF DIRECTORY SIMULATED) '
DIRERRS  DC    CL50'READ ERROR IN THE DIRECTORY                       '
BLKNUMS  DC    CL50'IS THE BLOCK NUMBER  (BLOCK IGNORED)              '
GASERRS  DC    CL50'ERROR IN A GAS MEMBER  (END OF MEMBER SIMULATED)  '
CURRMBR  DC    CL50'12345678 IS THE MEMBER  (END OF MEMBER SIMULATED) '
LASTMEMS DC    CL50'12345678 IS THE LAST REAL MEMBER IN THE DATA SET  '
PROTECT  DC    CL50'X IS THE PROTECTION KEY                           '
KEYLEN   DC    CL50'IS THE KEY LENGTH                                 '
KEYPOS   DC    CL50'IS THE RELATIVE KEY POSITION                      '
NULL     DC    CL50'DATA SET IS EMPTY                                 '
GASMEM   DC    CL50'"GAS" MEMBER AT TTR TT.TT.RR, DATA:               '
EXTHDR   DC    CL50'EXTENT  UCB  CC.CC.HH.HH   CC.CC.HH.HH   TRACKS   '
EXTUND   DC    CL50'------  ---  -----------   -----------   ------   '
LSTAR    DC    CL50'DS1LSTAR IS MM.BB.BB.CC.CC.HH.HH.RR               '
GASTRK   DC    CL60'1234567.9 TRACKS WOULD BE REGAINED BY COMPRESSING '
BLANKS   DC    CL80'                                                  '
HEXTBL   DC    CL16'0123456789ABCDEF'
*
WORK     DC    CL80' '
DOUBLE   DS    D
LASTMBB  DS    D
JFCBXIT  DC    X'87',AL3(JFCB)            JFCB BLOCK
JFCB     DS    0D
         IEFJFCBN                         JFCB MAPPING MACRO
*
OUT      DCB DDNAME=OUT,DSORG=PS,MACRF=PM,RECFM=FB,LRECL=80,BLKSIZE=80
IN       DCB DDNAME=IN,DSORG=PS,MACRF=E,EXLST=JFCBXIT
*
MYLABEL  CAMLST SEARCH,JFCBDSNM,JFCBVOLS,WORKAREA
WORKAREA DS    0D,148C
DS1NOBDB EQU   WORKAREA+16    BYTES USED IN LAST DIRECTORY BLOCK
DS1DSORG EQU   WORKAREA+38    DSORG
DS1RECFM EQU   WORKAREA+40    RECFM
DS1BLKSI EQU   WORKAREA+42    BLKSIZE
DS1LRECL EQU   WORKAREA+44    LRECL
DS1KEYL  EQU   WORKAREA+46    KEYLEN
DS1RKP   EQU   WORKAREA+47    RELATIVE KEY POSITION
DS1SCALO EQU   WORKAREA+50    ALLOCATION TYPE
DS1SAQU  EQU   WORKAREA+51    SECONDARY ALLOCATION QUANTITY
DS1LSTAR EQU   WORKAREA+54    LAST USED TTR
DS1TRBAL EQU   WORKAREA+57    BYTES REMAINING IN LAST USED TRACK
DS1PTRDS EQU   WORKAREA+91    CCHHR POINTER TO FORMAT 2 DSCB IF ISAM
*
         LTORG
         DS    0D
BUFFER   DS    19072X
DS2NOLEV EQU   BUFFER+1  (1)      INDEX LEVELS
DS2DVIND EQU   BUFFER+2  (1)      TRACKS FOR MASTER LEVEL
DS2CYLOV EQU   BUFFER+8  (1)      TRACKS OF CYLINDER OVERFLOW/CYLINDER
DS2TAGDT EQU   BUFFER+15 (2)      RECORDS TAGGED FOR DELETION
DS2RORG3 EQU   BUFFER+17 (3)      OVERFLOW ACCESSES
DS2NOBYT EQU   BUFFER+20 (2)      BYTES TO HOLD THE HIGHEST INDEX
DS2NOTRK EQU   BUFFER+22 (1)      TRACKS OCCUPPIED BY THE HIGHEST INDEX
DS2PRCTR EQU   BUFFER+23 (4)      RECORDS IN THE PRIME AREA
DS2BYOVL EQU   BUFFER+80 (2)      BYTES LEFT ON THE CURR. IND. OVR. TRK
DS2RORG2 EQU   BUFFER+82 (2)      TRACKS LEFT IN THE IND. OVERFLOW AREA
DS2OVRCT EQU   BUFFER+84 (2)      RECORDS IN THE OVERFLOW AREA
DS2RORG1 EQU   BUFFER+86 (2)      CYLINDER AREAS THAT ARE FULL
*
SAVETBL  DC    64CL250' ',CL16' '   ROOM FOR 1000 ENTRIES
         DCBD  DSORG=PS,DEVD=DA
         END   STATS
