*          DATA SET CATTRFIX   AT LEVEL 001 AS OF 08/15/75
         TITLE 'CATTRFIX - UTILITY PROGRAM '
CATTRFIX CSECT
         SPACE 15
*                    UTILITY PROGRAM - 'CATTRFIX'
*
*
*                           HOWARD MOODY
*                      A. O. SMITH CORPORATION
*                        MILWAUKEE WISCONSIN
*                 PHONE: (414) 873-3000  EXT 26-251
         SPACE 5
*        UPDATE #1
*
*        07/05/78   UPDATED TO HANDLE ALL DIRECT DEVICES BY           1
*                   KEN RASMUSSEN                                     1
*                   HUGHES AIRCRAFT COMPANY                           1
*                   P.O. BOX 3310  BLD 606 M/S B27                    1
*                   (714) 871-3232 EXT. 1567                          1
*                                                                     1
         EJECT
         SPACE 2
*    CATTRFIX IS A UTILITY PROGRAM THAT WILL SEQUENTIALLY READ THE
*    VTOC ON ANY DIRECT ACCESS DEVICE AND WILL UPDATE ALL             1
*    ERRONEOUS DSCB TTR POINTERS IN THE CATALOG FOR THE CORRESPONDING
*    DSN'S.
         SPACE 5
*              P H I L O S O P H Y
*
*    THE METHOD USED IS MERELY TO USE THE OS CATALOG MANAGEMENT
*    ROUTINES TO UNCATALOG AND THEN RECATALOG THOSE DATA SETS WITH
*    BAD TTR POINTERS
         SPACE 5
*    THE JCL NECESSARY TO RUN THIS PROGRAM FOLLOWS:
*       //JOB
*       //STEP1    EXEC  PGM=CATTRFIX
*       //STEPLIB    DD  DSN=LIBRARY,DISP=SHR
*       //SYSPRINT     DD  SYSOUT=A
*       //SYSUDUMP     DD  SYSOUT=A
*       //ANYNAME1     DD  UNIT=UNIT1,DISP=SHR,VOL=SER=VOLSER1
*            "         "     "    "    "    "    "     "    "
*            "         "     "    "    "    "    "     "    "
          SPACE
*    ANYNAME 1--N CAN BE ANY DDNAME FOLLOWING OS STANDARDS EXCEPT THE
*    FOLLOWING:
*          SYSIN,STEPLIB,SYSPRINT,SYSUDUMP,SYSLIB,SYSPROC,
*          PLIDUMP,PL1DUMP,JOBLIB,PANDD1,PANDD2,MACLIB.
         SPACE 5
*    OUTPUT CONSISTS OF MESSAGES INDENTIFING THOSE DSN'S FOR WHOM
*    THE CATALOGING FUNCTIONS FAILED.
         SPACE 5
*    NOTE -----------------------------:
*         THIS ROUTINE WILL NOT UNCATALOG OR RECATALOG ANY DATA SET
*         WHOSE DSN IS 'SYSCTLG'.
         EJECT
*
*   REGISTER EQUATES
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
*
*   ESTABLISH SAVEAREA AND POINT OF RETURN WHEN PROCESSING IS COMPLETE
*
         USING *,R12               SET UP BASE
         STM   R14,R12,12(R13)     SAVE REGISTERS
         LR    R12,R15             R12 - BASE
         LR    R14,R13             R14 - PTR TO SAVEAREA
         CNOP  0,4
         BAL   R13,NULL0001        R13 - MY SAVEAREA, BR TO PROCESS
         DC    3F'0'               SAVE -
         DS    15F                      -- AREA
RETURN   L     R13,4(0,R13)        POINT OF BRANCH WHEN DONE
*                                  RESTORE REG 13
         L     R14,12(0,R13)       RESTORE REG 14
         LM    R2,R12,28(R13)      RESTORE REMAINDER OF REGS
         BR    R14                 RETURN TO CALLING ROUTINE
NULL0001 ST    R13,8(0,R14)        SAVE ORIG REG 13
         ST    R14,4(0,R13)        SAVE ORIG REG 14
         EJECT
*
*                   BEGIN PROCESSING
*
START    OPEN  (OUTDCB,OUTPUT)     OPEN OUTPUT FILE
         TM    OUTDCB+48,X'10'     SUCCESSFUL OPEN??
         BNZ   OPEN1OK             YES - CONTINUE
         ABEND 111,DUMP            ABEND SINCE THIS IS UNRECOVERABLE
*
*   GET T.I.O.T. ADDRESS
*
OPEN1OK  L    R1,16                 PTR TO C.V.T.
         L    R1,0(R1)              PTR TO TCBWORDS
         L    R1,4(R1)              PTR TO OUR T.C.B.
         L    R1,12(R1)             PTR TO OUR T.I.O.T.
*
*   GET NEXT VALID DDNAME
*
         LA    R1,24(R1)
         ST    R1,TIOTADR           SAVE ADDRESS OF FIRST DDN
NEXTDDN  L     R3,TIOTADR           GET ADDRESS OF NEXT DDN
         CLI   0(R3),X'00'          IS IT ZERO??
         BZ    NODDN                NO DDN'S LEFT
         SR    R2,R2
         IC    R2,0(R3)             GET LENGTH OF DDN
         AR    R2,R3                COMPUTE ADDR OF NEXT DDN
         ST    R2,TIOTADR
         EJECT
*
*   CHECK TABLE OF PRIVELEGED DDN THAT CANNOT BE PROCESSED
*
         LA    R4,DDNTABLE         LOAD ADDRESS OF DDN TABLE
DDNSRCH  SR    R5,R5
         IC    R5,0(R4)            GET LENGTH OF DDN
         LA    R4,1(R4)            REG 4 - PTR TO DDN IN TABLE
         LTR   R5,R5               R5 = 0 - DONE SEARCHING
         BZ    DDNOK
         BCTR  R5,R0               ADJUST LENGTH FOR REMOTE CLC INST
         EX    R5,CLCINST          REMOTE COMPARE
         BE    NEXTDDN             FOUND IT - TRY NEXT DDN
         LA    R5,1(R5)
         AR    R4,R5               R4 - NEXT DDN IN TABLE
         B     DDNSRCH
CLCINST  CLC   4(0,R3),0(R4)
DDNOK    MVC   INDCB+40(8),4(R3)
         EJECT
*
*   READ JFCB AND INSERT A DDN OF 44 X'04' FOR VTOC DSN
*
        RDJFCB (INDCB)
         OI    JFCBIN+52,X'0A'     JFCB NOT MERGED BACK
         MVI   JFCBIN,X'04'
         MVC   JFCBIN+1(43),JFCBIN MOVE IN 44 X'04' FOR VTOC DSN
         OPEN  (INDCB,INPUT),TYPE=J
         TM    INDCB+48,X'10'      CHECK FOR SUCCESSFUL OPEN
         BNZ   PRELOOP
         XC    MESSAGE3,MESSAGE3
         MVC   MESSAGE3(80),=CL80'1UNSUCCESSFUL OPEN FOR DDNAME='
         MVC   MESSAGE3+30(8),4(R3)
         PUT   OUTDCB,MESSAGE3
         B     NEXTDDN
         EJECT
PRELOOP  XC    MESSAGE3,MESSAGE3
         MVC   MESSAGE3(30),=C'1PROCESSING BEGINS FOR VOLSER='
         MVC   MESSAGE3+30(6),JFCBIN+118
         PUT   OUTDCB,MESSAGE3
         XC    MESSAGE3,MESSAGE3
         MVC   MESSAGE3(2),=C'- '
         PUT   OUTDCB,MESSAGE3
         L     R8,INDCB+44         LOAD DCBDEBAD                      1
         L     R8,32(,R8)          LOAD DEBSUCBA                      1
         MVC   DEVCODE(4),16(R8)   SAVE DEVICE TYPE IN CAMLST         1
         MVC   VOLSER(6),JFCBIN+118     MOVE VOLSER TO CAMLST         1
         EJECT
*
*   LOOP TO READ ALL FORMAT1 DSCB'S
*
LOOP     XC    ECB,ECB
         READ  ECB,SF,INDCB,DSCB,'S'
         CHECK ECB
         CLI   DSCB+44,X'F4'       IS THIS A FORMAT4
         BNE   NOFMT4              NO - BR AROUND
         MVC   WORKAREA(2),DSCB+64
         LH    R11,WORKAREA        LOAD NO. TRK/CYL
NOFMT4   CLI   DSCB+44,X'F1'       IS THIS A FORMAT1
         BNE   LOOP                NO - READ NEXT DSCB
         CLC   DSN(7),=C'SYSCTLG'  IS THIS THE SYSTEM CATALOG
         BE    LOOP                YES - SKIP IT
         MVC   DCBCCHHR(5),INDCB+8  SAVE CCHHR
         EJECT
*
*   READ CATALOG FOR DSN IN THIS FORMAT1 DSCB
*
CATALOG  LOCATE LOCLIST
         LTR   R15,R15             IS IT CATALOGED
         BNZ   LOOP                NO - TRY NEXT DSN
         CLC   CATBLK(2),=X'0001'  IS THIS DSN ON MORE THAN ONE PACK
         BH    LOOP                YES - TRY NEXT DSN
         LH    R5,DCBCCHHR         LOAD CC
         SR    R4,R4               CLEAR REG 4
         MR    R4,R11              CONVERT TO TRKS
         LH    R6,DCBCCHHR+2       LOAD HH
         AR    R5,R6               REG 5 - ABSOLUTE TRK ADDRESS
         STH   R5,NEWTTR           CREATE CORRECT(NEW) TTR
         MVC   NEWTTR+2(1),DCBCCHHR+4
         CLC   JFCBIN+118(6),CATBLK+6 VOLUME SERIAL'S EQUAL ?
         BNE   LOOP                NO, BRANCH
         CLC   NEWTTR(3),CATBLK+252  COMPARE TTR'S
         BE    LOOP
         MVC   MESSAGE3,BADTTR
         LH    R1,CATBLK+252       GET BAD TTR
         CVD   R1,TEMPAREA         UNPACK
         SR    R1,R1          CLEAR REG 1
         IC    R1,CATBLK+254  GET RECORD OF TTR
         CVD   R1,WORKAREA    UNPACK IT
         MVZ   WORKAREA+6(1),TEMPAREA+7
         MVC   WORKAREA(6),TEMPAREA+1
         ED    MESSAGE3+62(8),WORKAREA+4 EDIT BAD TTR
         LH    R1,NEWTTR           GET GOOD TTR
         CVD   R1,TEMPAREA         UNPACK
         SR    R1,R1          CLEAR REG 1
         IC    R1,NEWTTR+2    GET RECORD OF TTR
         CVD   R1,WORKAREA    UNPACK IT
         MVZ   WORKAREA+6(1),TEMPAREA+7
         MVC   WORKAREA(6),TEMPAREA+1
         ED    MESSAGE3+71(8),WORKAREA+4 EDIT GOOD TTR
         MVC   MESSAGE3+1(44),DSN  SAVE DSNAME
         PUT   OUTDCB,MESSAGE3
         EJECT
*
*   UNCATALOG AND RECATALOG TO PROPERLY SET THE TTR REFERENCE TO THE
*   DSCB IN THE CATALOG.
*
         CATALOG UNCATLST
         LTR   R15,R15             CHECK RETURN CODE
         BNZ   ERROR1              YES PRINT MESSAGE
         CATALOG CATLIST
         LTR   R15,R15             TEST RETURN CODE
         BZ    LOOP                ZERO - BR TO TRY NEXT DSN
         EJECT
*
*   CODE TO HANDLE BAD CATALOGING RETURN CODES
*
         XC    MESSAGE3,MESSAGE3
         MVC   MESSAGE3(28),=C' CATALOG FCT FAILED FOR DSN='
         MVC   MESSAGE3+28(38),DSN
         MVC   MESSAGE3+66(6),=C'   RC='
         LA    R15,RCTABLE(R15)
         MVC   MESSAGE3+72(2),0(R15)
         PUT   OUTDCB,MESSAGE3
         B     LOOP
*
*   CODE TO HANDLE BAD UNCATALOGING RETURN CODES
*
ERROR1   XC    MESSAGE3,MESSAGE3
         MVC   MESSAGE3(30),=C' UNCATALOG FCT FAILED FOR DSN='
         MVC   MESSAGE3+30(38),DSN
         MVC   MESSAGE3+68(6),=C'   RC='
         LA    R15,RCTABLE(R15)
         MVC   MESSAGE3+74(2),0(R15)
         PUT   OUTDCB,MESSAGE3
         B     LOOP
*
*   CODE TO HANDLE EOF FROM THE VTOC
*
EOFVTOC  CLOSE (INDCB)
         XC    MESSAGE3,MESSAGE3
         MVC   MESSAGE3(13),=C'-     VOLSER='
         MVC   MESSAGE3+13(6),JFCBIN+118
         MVC   MESSAGE3+19(28),=C'  WAS SUCCESSFULLY PROCESSED'
         PUT   OUTDCB,MESSAGE3
         B     NEXTDDN
*
*   CODE TO HANDLE CLEANUP AND END
*
NODDN    CLOSE (OUTDCB)
         SR    R15,R15
         B     RETURN
         TITLE '  RETURN CODE TABLE -- DDNAME TABLE'
RCTABLE  DC    CL4' '
         DC    CL4'04'
         DC    CL4'08'
         DC    CL4'12'
         DC    CL4'16'
         DC    CL4'20'
         DC    CL4'24'
         DC    CL2'72'
         SPACE 5
DDNTABLE DC    X'05',C'SYSIN'
         DC    X'08',C'SYSPRINT'
         DC    X'08',C'SYSABEND'
         DC    X'08',C'SYSUDUMP'
         DC    X'06',C'PANDD1'
         DC    X'06',C'PANDD2'
         DC    X'06',C'SYSLIB'
         DC    X'07',C'SYSPROC'
         DC    X'06',C'MACLIB'
         DC    X'07',C'PLIDUMP'
         DC    X'07',C'PL1DUMP'
         DC    X'07',C'STEPLIB'
         DC    X'06',C'JOBLIB'
         DC    X'00'
         TITLE 'WORKAREAS AND OUTPUT MESSAGE AREAS'
         DS    0D
TEMPAREA DC    D'0'
WORKAREA DC    D'0'
TIOTADR  DC    F'0'
DCBCCHHR DC    CL5' '
         DS    0F
NEWTTR   DC    CL3' '
         DS    0D
LIST     DC    X'87'
         DC    AL3(JFCBIN)
JFCBIN   DC    CL176' '
         DS    0D
DSCB     DS    0CL350
DSN      DC    CL44' '
         DC    306C' '
MESSAGE3 DC    CL80' '
BADTTR   DC    CL45' '
         DC    CL17' HAS INVALID TTR '
         DC    XL8'4021202020202020'
         DC    CL1' '
         DC    XL8'4021202020202020'
         DC    CL1' '
         TITLE 'CAMLST MACROS AND VOLUME LISTS'
LOCLIST  CAMLST NAME,DSN,,CATBLK
         DS    0D
CATBLK   DS    0CL265
         DC    259C' '
CVOL     DC    CL6' '
UNCATLST CAMLST UCATDX,DSN,CVOL
CATLIST  CAMLST CATBX,DSN,CVOL,VOLLIST,DSCBTTR=NEWTTR
         DS    0H
VOLLIST  DC    H'1'
DEVCODE  DC    CL4' '
VOLSER   DC    CL6' '
         DC    H'0'
         TITLE ' INPUT -- OUTPUT   D C B '
INDCB    DCB   DDNAME=XXXXXX,DEVD=DA,DSORG=PS,MACRF=(R),BLKSIZE=96,    *
               RECFM=F,EODAD=EOFVTOC,EXLST=LIST,KEYLEN=44
OUTDCB   DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=(PM),RECFM=FA,           *
               LRECL=80,BLKSIZE=80
         END
