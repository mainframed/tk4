IDMF     TITLE 'IDMDSAT - DISPLAY DATASET ATTRIBUTES ROUTINE'
         @     IDMDSAT
***********************************************************************
*/*                                                                  */
*/*      ========================================================    */
*/*       I D M F  -  INTERACTIVE DATA MANAGEMENT FACILITY           */
*/*      ========================================================    */
*/*                                                                  */
*/********************************************************************/
            EJECT
***********************************************************************
*                                                                     *
* ABSTRACT: DISPLAY DATASET ATTRIBUTES ROUTINE                        *
*                                                                     *
* FUNCTION: IDMDSAT IS A PROGRAM TO GET AND DISPLAY DATASET ATTRIBUTES*
*                                                                     *
*           IDMDSAT CALLED BY IDMMAIN, WHEN USER SELECTS A ROW.       *
*           IDMDSAT GETS DSNAME (AND VOLUME) FROM ROW, SELECTED BY    *
*                    USER, GETS ATTRIBUTES INFORMATION FROM DSCB AND  *
*                    PRESENTS INFO-PANEL TO TERMINAL USER.            *
*                                                                     *
*           AFTER ATTRIB DISPLAYD IDMDSAT UPDATES ROW IN TABLE AND    *
*           SETS UP MESSAGES FOR USER.                                *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*                                                                     *
* INPUT: R1 -> WORK AREA OF IDMMAIN                                   *
*        R2 -> COMMUNICATION READ-ONLY TABLE OF IDMMAIN               *
*                                                                     *
* PROGRAM WRITTEN USING STRUCTURED ASSEMBLER MACROS                   *
* MACROS USED: SET OF STRUCTURED MACROS                               *
*              SAVE                                                   *
*              RETURN                                                 *
*              GETMAIN                                                *
*              CALL                                                   *
*              FREEMAIN                                               *
*              IKJPSCB                                                *
*                                                                     *
* ATTRIBUTES: REENTRANT,REFRESHABLE,REUSABLE                          *
*                                                                     *
*                                                                     *
***********************************************************************
         SPACE
***********************************************************************
*                                                                     *
*  REGISTERS:   15 - ENTRY ADDRESS & RETURN CODE                      *
*               14 - RETURN ADDRESS                                   *
*               13 - SAVE AREA ADDRESS AND BASE FOR DSECT             *
*               12 - CSECT BASE                                       *
*               11 - CSECT SECOND BASE                                *
*               10 - DSECT BASE FOR IDMWORK, PASSED BY IDMMAIN        *
*                9 - DSECT BASE FOR IDMCVT, PASSED BY IDMMAIN         *
*                8 - DSECT BASE FOR IDMINFOD                          *
*                7 -                                                  *
*                6 - WORK REG                                         *
*                5 - WORK REG                                         *
*                4 - WORK REG                                         *
*                3 - WORK REG                                         *
*                2 - PARAM ADDRESS                                    *
*                1 - PARAM ADDRESS                                    *
*                0 -                                                  *
***********************************************************************
         EJECT
***********************************************************************
*               IDMDSAT CODE                                          *
***********************************************************************
         SPACE
*                            ******************************************
*                            *     DSECTS  AREAS.                     *
*                            ******************************************
         SPACE
         IKJPSCB             PROTECTED STEP CONTROL BLOCK
         EJECT
IDMCVTD  DSECT
         COPY  IDMCVT
         EJECT
IDMWORKD DSECT
         COPY  IDMWORK
         EJECT
         IDMINFOD            OUTPUT INFORMATION LAYOUT DSECT
         EJECT
         IEFUCBOB LIST=YES   DSECT FOR UCB
         EJECT
         DCBD                DCB MAP, USED FOR SOME FIELDS OF DSCB
         EJECT
*                            ******************************************
*                            *   IDMDSAT CSECT INITIALIZATION.        *
*                            ******************************************
         SPACE 2
         INIT# IDMDSAT,BASEREG=(12,11),CODE=RENT,                      X
               EXEC=MAINLINE,REL=01.03.00,                             X
               EXLIST=YES
         USING IDMWORK,RA
         USING IDMCVT,R9
         USING IDMINFOD,R8
         EJECT
         CPYRIGHT IDMF,1982
         EJECT
*                            ******************************************
*                            *  CONTROL TABLES AND FIELDS.            *
*                            ******************************************
         SPACE
*        BYTE 1-OPTIONS:     - USE TM/OI
IDMNWAIT EQU   X'80'              NOT WAIT FOR MOUNT BIT              *
*        BYTE 2-OPTIONS:     - USE CLI/MVI
IDMDEALL EQU   C'D'               DEALLOC DATASET                     *
IDMDOALL EQU   C'A'               ALLOCATE DATASET                    *
IDMCHALL EQU   C'C'               CHANGE ATTRIBUTES                   *
IDMNUALL EQU   C'U'               MARK NOT IN USE                     *
*
OLDST    EQU   X'01'              OLD STATUS FOR SVC 99
MODST    EQU   X'02'              MOD STATUS
NEWST    EQU   X'04'              NEW STATUS
SHRST    EQU   X'08'              SHR STATUS
         SPACE ,                                                      *
DEFUNIT  DC    CL8'SYSDA'    DEFAULT UNIT NAME, IF NOTHING IN UADS    *
VTOCERR  DC    C'VTOC ERROR'      ERROR MESSAGE FOR OBTAIN
EDPATERN DC    XL12'402020202020202020202120'
         EJECT ,                                                      *
IDMDEVTB IDMDEVTB            DEVICE TABLE
         EJECT ,                                                      *
IDMDSORG IDMDSORG            DSORG TABLE
         EJECT
IDMYEART IDMYEART LEAPYR=N
         EJECT
IDMYEARL IDMYEART LEAPYR=Y
         EJECT
IDMXBLK  IDMEXTNT             EXTENTS BLOCK TABLE FOR DATASET
IDMXBLKE EQU   *              END OF TABLE
         EJECT ,                                                      *
*                            ******************************************
*                            *    WORK FIELDS.                        *
*                            ******************************************
         SPACE
         DATA#
*------- PARM LIST - KEEP TOGETHER -----------------------------------*
ADSNAME  DS    F                                                      *
AVOL     DS    F                                                      *
AOPTIONS DS    F                                                      *
ADDNAME  DS    F                                                      *
AUNITN   DS    F                                                      *
ADSORG   DS    F                                                      *
AERRMSG  DS    F                                                      *
*------- KEEP PREV FIELDS TOGETHER -----------------------------------*
         SPACE ,
DVOL     DS    CL6                                                    *
DOPTIONS DS    F                                                      *
DSDDNAME DS    CL8                                                    *
DUNITN   DS    CL8                                                    *
DDSORG   DS    CL2                                                    *
*
DSATRC   DS    XL1                                                    *
EDWORK   DS    CL12       EDIT WORK AREA
TRACKS   DS    F          WORK AREA FOR TRACKS CALCULATION
         EJECT ,
OBT1AREA DS    CL190
         ORG   OBT1AREA
         IECSDSL1 (1)
         ORG
         EJECT ,
OBT3AREA DS    CL140
         ORG   OBT3AREA
         IECSDSL1 (3)
         ORG
         EJECT ,
         DS    0F            NEXT AREA MUST BE ON FULLWORD BOUNDARY
         IHADVA DSECT=NO
         EJECT
IDMEXTNT IDMEXTNT             EXTENTS BLOCK DYNAM TABLE
         SPACE
         ENDDATA#
         EJECT
*                            ******************************************
*                            * MAINLINE- MAIN ROUTINE OF THE IDMDSAT  *
*                            ******************************************
         SPACE 2
         ENTRE# MAINLINE
         LR    RA,R1                        LOAD IDMWORK BASE
         LR    R9,R2                        LOAD IDMCVT BASE
         SPACE ,                                                      *
         MVI   DSATRC,0                                               *
         MVI   DSDDNAME,BLANK               WE DO NOT SUPPLY DDNAME
         MVC   DSDDNAME+1(L'DSDDNAME-1),DSDDNAME
         MVC   DVOL,VOL                                               *
         XC    DOPTIONS,DOPTIONS                                      *
         MVI   DOPTIONS+1,IDMDOALL                                    *
         MVI   DOPTIONS+2,SHRST                                       *
         IF VOL,NE,BLANK256,CLC                                       *
            L     R4,ADDRPSCB                                         *
            USING PSCB,R4                                             *
            MVC   DUNITN,PSCBGPNM                                     *
            IF DUNITN,EQ,BLANK,CLI                                    *
               MVC   DUNITN,DEFUNIT                                   *
            ENDIF                                                     *
            DROP  R4                                                  *
         ENDIF                                                        *
         MVI   BUFFCMD,BLANK                CLEAR MSG BUFFER
         MVC   BUFFCMD+1(L'BUFFCMD-1),BUFFCMD
         SPACE ,                                                      *
         LA    R3,DSNAME                                              *
         ST    R3,ADSNAME                                             *
         LA    R3,DVOL                                                *
         ST    R3,AVOL                                                *
         LA    R3,DOPTIONS                                            *
         ST    R3,AOPTIONS                                            *
         LA    R3,DSDDNAME                                            *
         ST    R3,ADDNAME                                             *
         LA    R3,DUNITN                                              *
         ST    R3,AUNITN                                              *
         LA    R3,DDSORG                                              *
         ST    R3,ADSORG                                              *
         LA    R3,BUFFCMD                                             *
         ST    R3,AERRMSG                                             *
         SPACE ,                                                      *
         LA    R1,ADSNAME                                             *
         LINK  EP=IDMALLOC                                            *
         IF RF,NE,0,LTR                                               *
            MVI   LASTACT,BLANK                ERASE LAST ACTION
            MVC   LASTACT+1(L'LASTACT-1),LASTACT
            MVC   LASTACT(L'LACTDER),LACTDER   SET LAST ACTION
            MVC   MSGID,MSGID25                SET ERR MSG
            MVC   MSGPARM,BUFFCMD              SET MSG PARM           *
*           NOW WE UPDATE ROW IN TABLE TO REFLECT LAST ACTION
            MVI   ACTION,BLANK                    CLEAR LINE COMMAND
            L     RF,ISPLADDR                     GET ISPLINK ADDRESS
            LA    R2,SYSTAB                       GET SYSTAB ADDR
            CALL  (15),(,(R2)),VL,MF=(E,LCALL31)  UPDATE ROW IN TABLE
            IEXIT# RC=8                                               *
         ENDIF                                                        *
***********************************************************************
*        AT THIS POINT DATASET IS ALLOCATED                           *
*        NOW WE HAVE TO FILL IN INFORMATION DISPLAY BUFFER.           *
***********************************************************************
         SPACE
         LA    R8,BUFFCMD               LOAD BASE REG FOR BUFFER
         MVI   BUFFCMD,BLANK            BLANK OUT THE BUFFER
         MVC   BUFFCMD+1(L'BUFFCMD-1),BUFFCMD
         SPACE
*---------------------------------------------------------------------*
*        GET DATASET ORGANIZATIN INFO AND MOVE INTO BUFFER            *
*---------------------------------------------------------------------*
         LA    R3,IDMDSORG                 R3 POINTED TO DSORG TABLE
         DOWHILE DDSORG,NE,0(R3),CLC,*AND*,   SEARCH THRU TABLE TILL   X
               =X'FFFF',NE,0(R3),CLC          FIND EQUAL OR END
            LA    R3,(L'IDMDSORG)(R3)         POINT TO NEXT LINE
         ENDDO
         MVC   INFDSORG,2(R3)              MOVE DSORG TO BUFFER
         SPACE
*---------------------------------------------------------------------*
*        GET DEVICE TYPE INFORMATION AND MOVE INTO BUFFER             *
*---------------------------------------------------------------------*
         LA    R1,DSDDNAME                 R1 POINTS TO DDNAME
         DEVTYPE (1),DVAREA,DEVTAB         GET UCB TYPE INFO
         LA    R3,IDMDEVTB                 R3 POINTED TO DEVICE TABLE
         DOWHILE DVACLASS(2),NE,0(R3),CLC,*AND*, SEARCH THRU TABL TILL X
               =X'0000',NE,0(R3),CLC          FIND EQUAL OR END
            LA    R3,(L'IDMDEVTB)(R3)         POINT TO NEXT LINE
         ENDDO
         MVC   INFDEVIC,4(R3)                 MOVE DEVICE TYPE TO BUFF
         SPACE
*---------------------------------------------------------------------*
*        GET SPACE AND DCB INFORMATION AND MOVE INTO BUFFER           *
*---------------------------------------------------------------------*
         IF DVACLASS,EQ,UCB3DACC,CLI      IF ITS DASD (NOT A TAPE)
            LA    R4,DSNAME                  R4=ADDR OF DSNAME
            ST    R4,OB1LIST+4               POINT OBTAIN TO DSNAME
            LA    R4,DVOL                    R4=ADDR OF VOLSER
            ST    R4,OB1LIST+8               POINT OBTAIN1 TO VOL
            LA    R4,DS1FMTID                R4=ADDR OF WORKAREA
            ST    R4,OB1LIST+12              POINT OBTAIN1 TO WORKAREA
            OBTAIN OB1LIST                   OBTAIN DSCB1
            IF RF,EQ,0,LTR                   IF OBTAIN1 IS OK
               IF DS1PTRDS,NE,ZERO10,CLC        IF IT HAS DSCB3      ,
                  LA    R4,DS1PTRDS                R4=PTR ADDRESS
                  ST    R4,OB3LIST+4               POINT OBTAIN TO CCHH
                  LA    R4,DVOL                    R4=ADDR OF VOL
                  ST    R4,OB3LIST+8               POINT OBT3 TO VOL
                  LA    R4,IECSDSL3                R4=ADDR OF WORKAREA
                  ST    R4,OB3LIST+12              POINT OBT3 TO WAREA
                  OBTAIN OB3LIST                   OBTAIN DSCB3
                  IF RF,EQ,0,LTR                   IF OBTAIN3 IS OK
                     CALL# DSCBINFO                   FORMAT DSCB INFO
                  ELSE                             ELSE
                     MVC   BUFFCMD(L'VTOCERR),VTOCERR SET ERROR MSG
                  ENDIF                            ENDIF
               ELSE                             ELSE
                  CALL# DSCBINFO                   FORMAT DSCB INFO
               ENDIF                            ENDIF
            ELSE                             ELSE
               MVC   BUFFCMD(L'VTOCERR),VTOCERR SET ERROR MSG   ,
            ENDIF                            ENDIF
         ENDIF                            ENDIF
*---------------------------------------------------------------------*
*        DISPLAY BUFFER WITH DATASET INFORMATION TO USER, UPDATE ROW  *
*---------------------------------------------------------------------*
         IF DVOL,NE,VOL,CLC                 IF REAL VOL ^= TABLE VOL
            XC    DVOL,VOL                     EXCHANGE VOLSERS -
            XC    VOL,DVOL                     TO PASS REAL VOLSER -
            XC    DVOL,VOL                     TO PANEL
         ENDIF                              ENDIF
         L     RF,ISPLADDR             GET ISPLINK ADDRESS
         LA    R2,PANELI               GET POINTER TO INFO PANEL
         CALL  (15),(,(R2)),VL,MF=(E,LCALL33)  DISPLAY INFO PANEL
         SPACE
         IF DVOL,NE,VOL,CLC                 IF REAL VOL ^= TABLE VOL
            XC    DVOL,VOL                     EXCHANGE VOLSERS -
            XC    VOL,DVOL                     TO RESTORE VOLSER -
            XC    DVOL,VOL                     FOR A ROW
         ENDIF                              ENDIF
*---------------------------------------------------------------------*
*        FREE DATASET BY DD-NAME (PARM LIST IS READY-JUST SET OPTION) *
*---------------------------------------------------------------------*
         MVI   MSGPARM,BLANK           BLANK OUT MSG PARM
         MVC   MSGPARM+1(L'MSGPARM-1),MSGPARM
         MVC   MSGPARM(L'DSNAME),DSNAME  SET MSG PARM
         MVC   MSGID,MSGID52           SET MSG - INFO DISPLAYED
*        NOW WE UPDATE ROW IN TABLE TO REFLECT LAST ACTION
         MVI   LASTACT,BLANK                ERASE LAST ACTION
         MVC   LASTACT+1(L'LASTACT-1),LASTACT
         MVC   LASTACT(L'LACTDOK),LACTDOK   SET LAST ACTION
         MVI   ACTION,BLANK                    CLEAR LINE COMMAND
         L     RF,ISPLADDR                     GET ISPLINK ADDRESS
         LA    R2,SYSTAB                       GET SYSTAB ADDR
         CALL  (15),(,(R2)),VL,MF=(E,LCALL31)  UPDATE ROW IN TABLE
         XC    DOPTIONS,DOPTIONS       ZERO OUT OPTIONS WORD          *
         MVI   DOPTIONS+1,IDMDEALL     SET OPTION - DEALLOCATE        *
         SPACE ,                                                      *
         LA    R1,ADSNAME              R1 POINTS TO PARM LIST         *
         LINK  EP=IDMALLOC             LINK TO DEALLOCATION MODULE    *
         SPACE
         EXIT# RC=0
         EJECT
*                            ******************************************
*                            * DSCBINFO - FORMAT DSCB INFORMATION     *
*                            ******************************************
         SPACE 2
         ENTRE# DSCBINFO
*---------------------------------------------------------------------*
*        DATASET BLOCKSIZE CALCULATION                                *
*---------------------------------------------------------------------*
         SR    RF,RF                           CLEAR REG
         ICM   RF,B'0011',DS1BLKL              LOAD BLOCKSIZE
         CVD   RF,DWORD                        CONVERT TO DEC
         MVC   EDWORK,EDPATERN                 COPY EDIT PATTERN
         ED    EDWORK,DWORD+2                  UNPACK+EDIT NUMBER
         MVC   INFBLKSI,EDWORK+L'EDWORK-L'INFBLKSI  MOVE NUMBER TO BUFF
         SPACE
*---------------------------------------------------------------------*
*        DATASET RECORD LENGTH CALCULATION                            *
*---------------------------------------------------------------------*
         SR    RF,RF                           CLEAR REG
         ICM   RF,B'0011',DS1LRECL             LOAD RECORD LENGTH
         CVD   RF,DWORD                        CONVERT TO DEC
         MVC   EDWORK,EDPATERN                 COPY EDIT PATTERN
         ED    EDWORK,DWORD+2                  UNPACK+EDIT NUMBER
         MVC   INFLRECL,EDWORK+L'EDWORK-L'INFLRECL  MOVE NUMBER TO BUFF
         SPACE
*---------------------------------------------------------------------*
*        EXTENTS NUMBER CALCULATION                                   *
*---------------------------------------------------------------------*
         SR    RF,RF                           CLEAR REG
         IC    RF,DS1NOEPV                     LOAD NUMBER OF EXTENTS
         CVD   RF,DWORD                        CONVERT TO DEC
         MVC   EDWORK,EDPATERN                 COPY EDIT PATTERN
         ED    EDWORK,DWORD+2                  UNPACK+EDIT NUMBER
         MVC   INFEXTNT,EDWORK+L'EDWORK-L'INFEXTNT  MOVE NUMBER TO BUFF
         SPACE
*---------------------------------------------------------------------*
*        RECORD FORMAT                                                *
*---------------------------------------------------------------------*
         LA    R3,INFRECFM                      POINT REG TO OUTPUT
         IF DS1RECFM,EQ,DCBRECU,TM
            MVI   0(R3),C'U'
         ELSE
            IF DS1RECFM,EQ,DCBRECF,TM
               MVI   0(R3),C'F'
            ELSE
               IF DS1RECFM,EQ,DCBRECV,TM
                  MVI   0(R3),C'V'
               ELSE
                  MVI   0(R3),C'?'
               ENDIF
            ENDIF
         ENDIF
         LA    R3,1(R3)      MOVE POINTER TO NEXT BYTE IN OUTPUT
         IF DS1RECFM,EQ,DCBRECTO,TM
            MVI   0(R3),C'T'
            LA    R3,1(R3)      MOVE POINTER TO NEXT BYTE IN OUTPUT
         ENDIF
         IF DS1RECFM,EQ,DCBRECBR,TM
            MVI   0(R3),C'B'
            LA    R3,1(R3)      MOVE POINTER TO NEXT BYTE IN OUTPUT
         ENDIF
         IF DS1RECFM,EQ,DCBRECSB,TM
            MVI   0(R3),C'S'
            LA    R3,1(R3)      MOVE POINTER TO NEXT BYTE IN OUTPUT
         ENDIF
         IF DS1RECFM,EQ,DCBRECCA,TM
            MVI   0(R3),C'A'
         ELSE
            IF DS1RECFM,EQ,DCBRECCM,TM
               MVI   0(R3),C'M'
            ENDIF
         ENDIF
*---------------------------------------------------------------------*
*        CREATION DATE                                                *
*---------------------------------------------------------------------*
         CALL# DSCBDATE      CALCULATE DATASET CREATION DATE
         SPACE
*---------------------------------------------------------------------*
*        GET ALLOCATION                                               *
*---------------------------------------------------------------------*
         CALL# DSCBALLC      CALCULATE DATASET ALLOCATION
         SPACE
         EXIT# RC=0
         EJECT
*                            ******************************************
*                            * DSCBDATE - FORMAT CREATION DATE        *
*                            ******************************************
         SPACE 2
         ENTRE# DSCBDATE
*---------------------------------------------------------------------*
*        DATASET CREATION DATE CALCULATION                            *
*---------------------------------------------------------------------*
         SR    R3,R3                    CLEAR REGISTER
         SR    R4,R4                    CLEAR REGISTER
         TM    DS1CREDT,X'03'           TEST ON LEAP YEAR (DIVIS. BY 4)
         IF ZERO                        IF LEAP YEAR
            LA    R3,IDMYEARL              POINT TO LEAP YEAR TABLE
         ELSE                           ELSE
            LA    R3,IDMYEART              POINT TO STANDARD YEAR TABL
         ENDIF                          ENDIF
         ICM   R4,B'0011',DS1CREDT+1    LOAD NUMBER OF DAYS FOR YEAR
         DOWHILE R4,GT,0,LTR            DOWHILE NUMBER OF DAYS GT 0
            SH    R4,0(R3)                 SUBTRACT DAYS OF POIN.MONTH
            IF R4,GT,0,LTR                 IF POZITIVE NUMBER LEFT
               LA    R3,(L'IDMYEART)(R3)      POINT TO NEXT MONTH
            ENDIF                          ENDIF
         ENDDO                          ENDDO
         AH    R4,0(R3)                 RESTORE CORRECT NUMBER OF DAYS
         SPACE
*---------------------------------------------------------------------*
*        MONTH AND DAY FOUND. NOW MOVE INFO INTO BUFFER               *
*---------------------------------------------------------------------*
         MVC   INFCDATE(2),2(R3)        MOVE MONTH NUMBER
         MVI   INFCDATE+2,C'/'          MOVE SLASH
         CVD   R4,DWORD                 CONVERT DAYS TO DECIMAL
         UNPK  INFCDATE+3(2),DWORD      UNPACK DAYS TO BUFFER
         OI    INFCDATE+4,EDSIGN        MAKE IT PRINTABLE
         MVI   INFCDATE+5,C'/'          MOVE SLASH
         SR    R3,R3                    CLEAR REG FOR YEAR
         IC    R3,DS1CREDT              LOAD YEAR
         CVD   R3,DWORD                 CONVERT YEAR TO DECIMAL
         UNPK  INFCDATE+6(2),DWORD      UNPACK YEAR TO BUFFER
         OI    INFCDATE+7,EDSIGN        MAKE IT PRINTABLE
         SPACE
*---------------------------------------------------------------------*
*        LAST REFERANCE DATE CALCULATION                              *
*---------------------------------------------------------------------*
         IF DS1REFD,EQ,ZERO10,CLC       IF SYSTEM DOES NOT MAINT REFD
            IEXIT# RC=0                    RETURN NOW
         ENDIF                          ENDIF
         SR    R3,R3                    CLEAR REGISTER
         SR    R4,R4                    CLEAR REGISTER
         TM    DS1REFD,X'03'            TEST ON LEAP YEAR (DIVIS. BY 4)
         IF ZERO                        IF LEAP YEAR
            LA    R3,IDMYEARL              POINT TO LEAP YEAR TABLE
         ELSE                           ELSE
            LA    R3,IDMYEART              POINT TO STANDARD YEAR TABL
         ENDIF                          ENDIF
         ICM   R4,B'0011',DS1REFD+1     LOAD NUMBER OF DAYS FOR YEAR
         DOWHILE R4,GT,0,LTR            DOWHILE NUMBER OF DAYS GT 0
            SH    R4,0(R3)                 SUBTRACT DAYS OF POIN.MONTH
            IF R4,GT,0,LTR                 IF POZITIVE NUMBER LEFT
               LA    R3,(L'IDMYEART)(R3)      POINT TO NEXT MONTH
            ENDIF                          ENDIF
         ENDDO                          ENDDO
         AH    R4,0(R3)                 RESTORE CORRECT NUMBER OF DAYS
         SPACE
*---------------------------------------------------------------------*
*        MONTH AND DAY FOUND. NOW MOVE INFO INTO BUFFER               *
*---------------------------------------------------------------------*
         MVC   INFLDATE(2),2(R3)        MOVE MONTH NUMBER
         MVI   INFLDATE+2,C'/'          MOVE SLASH
         CVD   R4,DWORD                 CONVERT DAYS TO DECIMAL
         UNPK  INFLDATE+3(2),DWORD      UNPACK DAYS TO BUFFER
         OI    INFLDATE+4,EDSIGN        MAKE IT PRINTABLE
         MVI   INFLDATE+5,C'/'          MOVE SLASH
         SR    R3,R3                    CLEAR REG FOR YEAR
         IC    R3,DS1REFD               LOAD YEAR
         CVD   R3,DWORD                 CONVERT YEAR TO DECIMAL
         UNPK  INFLDATE+6(2),DWORD      UNPACK YEAR TO BUFFER
         OI    INFLDATE+7,EDSIGN        MAKE IT PRINTABLE
         SPACE
         EXIT# RC=0
         EJECT
*                            ******************************************
*                            * DSCBALLC - CALCULATE ALLOCATION        *
*                            ******************************************
         SPACE 2
         ENTRE# DSCBALLC
*---------------------------------------------------------------------*
*        BUILD GENERAL EXTENTS BLOCK TABLE (WITH ABSOLUTE ADDRESSES)  *
*---------------------------------------------------------------------*
         MVC   IDMEXTNT(IDMXBLKE-IDMXBLK),IDMXBLK MVC TABLE TO DYN AREA
         SR    R2,R2                 CLEAR REG 2 - EXTENTS COUNTER  ,
         SR    R3,R3                 CLEAR R3 - IDMEXTNT TABLE POINTER
         SR    R4,R4                 CLEAR R4
         LA    R2,16                 LOAD MAX NUMBER OF EXTENTS - 16
         DO BELOW                    DO ENTRIES INITIALIZATION
            LA    R4,IECSDSL1           LOAD ADJUSTMENT VALUE
            A     R4,IDMEXTNT(R3)       ADD TO ENTRY VALUE
            ST    R4,IDMEXTNT(R3)       STORE IN ENTRY
            LA    R3,(L'IDMEXTNT)(R3)   POINT TO NEXT ENTRY IN TABLE
         UNTIL R2,EQ,0,BCT           UNTIL NO MORE ENTRIES
         SPACE
*---------------------------------------------------------------------*
*        CALCULATE SPACE ALLOCATION FOR DATASET                       *
*---------------------------------------------------------------------*
         SR    R2,R2                 CLEAR REG 2 - EXTENTS COUNTER  ,
         SR    R3,R3                 CLEAR R3 - IDMEXTNT TABLE POINTER
         SR    R4,R4                 CLEAR R4 - TRACKS ACCUMULATOR
         IC    R2,DS1NOEPV           INSERT NUMBER OF EXTENTS       ,
         IF R2,EQ,0,LTR              IF IT HAS ZERO EXTENTS
            MVI   INFALLOC+L'INFALLOC-1,C'0'    SET ZERO ALLOCATION
            MVI   INFUSED+L'INFUSED-1,C'0'      SET ZERO USAGE
            IEXIT# RC=0                         RETURN
         ENDIF                       ENDIF
         IF R2,GT,=H'16',CH          IF IT SHOWS MORE THAN 16 EXTENTS
            MVC   BUFFCMD(L'VTOCERR),VTOCERR    SET ERROR MSG   ,
            IEXIT# RC=8                         RETURN
         ENDIF                       ENDIF
         DO BELOW                    DO PROCESSING OF EXTENT BLOCK
            L     R5,IDMEXTNT(R3)       R5 POINTS TO EXTENT BLOCK
            IF 0(R5),NE,X'00',CLI       IF EXT. BLOCK VALID
               LA    R5,2(R5)           LOAD ADDRESS OF STARTING TRACK
               SR    R0,R0              CLEAR REGISTER 0
               LR    R1,R0              CLEAR REGISTER 1
               LH    R0,4(R5)           LOAD ENDING CYL NUMBER
               LH    R1,0(R5)           LOAD STARTING CYL NUMBER
               SR    R0,R1              SUBTRACT STARTING FROM ENDING
               MH    R0,DVATRK          MULTIPLY BY TRACKS PER CYL
               LH    R1,6(R5)           LOAD ENDING TRACK
               AR    R0,R1              ADD TO TRACK COUNT
               LH    R1,2(R5)           LOAD STARTING TRACK
               SR    R0,R1              SUBTRACT FROM TRACK COUNT
               AR    R4,R0              ACCUMULATE TOTAL
               LA    R4,R1(R4)          ADD 1 TRACK
            ENDIF                       ENDIF
            LA    R3,(L'IDMEXTNT)(R3)   POINT TO NEXT ENTRY IN TABLE
         UNTIL R2,EQ,0,BCT           UNTIL NO MORE EXTENTS
         CVD   R4,DWORD                        CONVERT TO DEC
         MVC   EDWORK,EDPATERN                 COPY EDIT PATTERN
         ED    EDWORK,DWORD+2                  UNPACK+EDIT NUMBER
         MVC   INFALLOC,EDWORK+L'EDWORK-L'INFALLOC  MOVE NUMBER TO BUFF
         SPACE
*---------------------------------------------------------------------*
*        CALCULATE USED SPACE FOR DATASET                             *
*---------------------------------------------------------------------*
         IF DS1LSTAR,EQ,ZERO10,CLC          IF LAST TRACK+BLOCK ZEROS
            MVI   INFUSED+L'INFUSED-1,C'0'     SET ZERO USAGE        ,
            IEXIT# RC=0                        RETURN                ,
         ENDIF                              ENDIF
         SR    R4,R4                        CLEAR REG             ,
         ICM   R4,B'0011',DS1LSTAR          LOAD RELATIVE LAST TRCK
         LA    R4,1(R4)                     GET NUMBER OF USED TRCKS
         CVD   R4,DWORD                     CONVERT TO DEC         ,
         MVC   EDWORK,EDPATERN              COPY EDIT PATTERN      ,
         ED    EDWORK,DWORD+2               UNPACK+EDIT NUMBER     ,
         MVC   INFUSED,EDWORK+L'EDWORK-L'INFUSED   MOVE NUMBER TO BUFF
         SPACE
         EXIT# RC=0
         EJECT
*                            ******************************************
*                            *     LITERALS                           *
*                            ******************************************
         SPACE
         LTORG
         SPACE 3
         END#  IDMDSAT
