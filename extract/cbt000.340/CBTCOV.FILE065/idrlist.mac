IDRLIST  CSECT
         SPACE 3
         SPACE 3
         USING IDRECORD,ROUTR
         USING *,RBASE
         SAVE  (14,12),,*
         LR    RW1,R13  PRIOR SAVE
         LR    RBASE,R15   ADDRESSIBILITY
         LA    R13,SAVEAREA
         ST    RW1,SAVEAREA+4  CHAIN BACK
         ST    R13,8(RW1)  CHAIN FOREWARD
         L     RPARM,0(R1)  POINT TO PARAMETERS
         OPEN  (SYSUT2,OUTPUT)
         SPACE 3
* THIS ROUTINE PROCESSES PARM FIELD
* RPARM POINTS TO PARM FIELD
         SPACE 3
         LH    RLEN,0(RPARM) LEN OF PARM FIELD
         LTR   RLEN,RLEN  Q. ZERO LEN
         BZ    PARMEXIT   YES, EXIT
         LA    RPARM,2(RPARM)  POINT TO PARMS
         LA    REND,0(RPARM,RLEN)  TO END OF LIST
         USING PARMSECT,RLIST
SETPTBL  LA    RLIST,PARMTBL-16  TO PARM CONTROL TBL
         LH    RCOUNT,PTBLENTS   NUM OF ENTRIES
SCRCHTBL LA    RLIST,16(RLIST)  TO NEXT ENTRY
         SR    RW1,RW1    CLEAR
         IC    RW1,PRMLEN   LENGTH OF KEYWORD
         EX    RW1,COMPARM   Q. GOT PARM KEYWORD
         BNE   BUMP1         NO, GET NEXT FOR COMPARE
         TM    PRMFLGS,USED  Q. ALREADY USED
         BO    ERROR1   YES, BRANCH
         OI    PRMFLGS,USED  INDICATE USED
         LA    RPARM,1(RPARM,RW1)  POINT TO VALUE OF KEYWORD
         LR    RSTRT,RPARM    SAVE POINTER TO VALUE
CHKEND1  CR    RPARM,REND   Q. END OF PARM FIELD
         BNL   ENDLIST    YES  BRANCH
         CLI   0(RPARM),C','  Q. END OF PARM VALUE
         BE    ENDPARM   YES, BRANCH
         LA    RPARM,1(RPARM)  TO NEXT CHARACTER
         B     CHKEND1
ENDPARM  EQU   *
         LA    RPARM,1(RPARM)  TO NEXT KEYWORD
         LR    RW1,RPARM
         SR    RW1,RSTRT    LEN OF VALUE
         SH    RW1,=H'2'   THIS GIVES LENGTH-1  OF LITERAL AFTER KEYWRD
         LTR   RW1,RW1   Q. IS VALUE NULL, NOTE THAT ZERO INDICATES
         BM    NULLPARM  NO VALUE                         LENGTH IS 1
         CH    RW1,=H'7'   Q.  LEN G.T. 8 DIGITS
         BH    ERROR2  YES, ERROR
         L     RFLD,PRMFLD  WHERE TO PUT VALUE
         TM    PRMFLGS,NUMERIC   Q, ONLY NUMERIC
         BO    NUMPARM  YES, GO HANDLE
         EX    RW1,MOVEVAL   MOVE VALUE
         STC   RW1,0(RFLD)  LEN-1 OF VALUE
CHKEND   CR    RPARM,REND  Q. END OF PARMS
         BNH   SETPTBL    NO, GO SET-UP FOR NEXT
         B     PARMEXIT
ENDLIST  EQU   ENDPARM
MOVEVAL  MVC   1(0,RFLD),0(RSTRT)
NUMPARM  EQU   *
         CH    RW1,=H'7'   Q  LEN OF VALUE G.T. 8 DIGETS
         BH    ERROR2    YES, ERROR
         XC    TSTFLD,TSTFLD   CLEAR TEST FIELD
         EX    RW1,MOVENUM  MOVE NUMRC TO TEST FIELD
         EX    RW1,TRNUM   X.LATE
         EX    RW1,CLCNUM   COMPARE WITH ORIGINAL, SAME ONLY IF NUMERIC
         BNE   ERROR3
         XC    DBLWORD,DBLWORD   CLEAR
         EX    RW1,PACKNUM    PACK VALUE, FROM PARM FLD, TO DBLWORD
         CVB   RW1,DBLWORD    CONVERT TO BINARY
         ST    RW1,0(RFLD)   MOVE BINARY VALUE TO SPECIFIED LOCATION
         B     CHKEND    SEE IF DONE
MOVENUM  MVN   TSTFLD(0),0(RSTRT)
COMPARM  CLC   0(0,RPARM),PRMNAME
TRNUM    TR    TSTFLD(0),NUMTSTBL
CLCNUM   CLC   TSTFLD(0),0(RSTRT)
NULLPARM EQU   CHKEND
PACKNUM  PACK  DBLWORD(08),0(0,RSTRT)
BUMP1    BCT   RCOUNT,SCRCHTBL  BRANCH IF MORE TO COMPARE
         B     ERROR4
         SPACE 3
PARMEXIT EQU   *
         CLI   LOPT+1,C'Y'  Q.  L RECS WANTED
         BNE   CKROPT  NO, BRANCH
         NI    LOPTSWTH+1,X'0F'  ELSE DISABLE BYPASS
         NI    CESDSWTH+1,X'0F'       DISABLE BYPASS
CKROPT   CLI   ROPT+1,C'Y'  R RECORDS WANTED
         BNE   CKZOPT  NO, BRANCH
         NI    ROPTSWTH+1,X'0F'  ELSE DISABLE BYPASS
CKZOPT   CLI   ZOPT+1,C'Y'  Z RECRODS WANTED
         BNE   OPTEXIT   NO, BRANCH
         NI    ZOPTSWTH+1,X'0F'  ELSE DISABLE BYPASS
         NI    CESDSWTH+1,X'0F'       DISABLE BYPASS
OPTEXIT  EQU   *
*        GET  MAIN FOR MEMBER LIST
         L     RODD,NOMEM    NUM OF EXPECTED MEMBERS
         MH    RODD,ENTRYSIZ         SIZE FOR MEMBER TABLE
         ST    RODD,GETLST+00   MOVE INTO GETMAIN PARM LIST
         GETMAIN EC,A=MEMLSTA,MF=(E,GETLST)
         LTR   R15,R15    Q. OK
         BNZ   ERROR4   NO BRANCH
         ST    RODD,MLSTSIZE   SAVE SIZE OF LIST
         EXTRACT TIOTA,FIELDS=(TIOT)
         L     RW1,TIOTA   TO TIOT
         LA    RW1,24(RW1) TO FIRST DD ENTRY
STLSTDD  ST    RW1,LASTDD   SAVE
CHKLSTDD EQU   *
         CLC   0(4,RW1),ZERO   9. END TIOT
         BE    ENDTIOT   YES
         CLC   4(6,RW1),=C'SYSUT1'  Q. SYSUT1
         BE    USEDD  YES, PROCESS IT
         CLC   4(6,RW1),=C'SYSLIB'  Q.  SYSLIBXX
         BE    USEDD
BUMPDD   EQU   *
         SR    R15,R15   CLEAR
         IC    R15,0(RW1)   LENGTH OF DD ENTRY
         AR    RW1,R15   TO NEXT DD
         B     STLSTDD
         SPACE 3
USEDD    EQU   *
         MVC   SYSUT1+40(8),4(RW1)   MOVE DD NAME TO DCB
         MVI   SYSUT1+36,X'00'  CLEAR RECFM
         OPEN  (SYSUT1)
*        GET MAIN FOR DIRECTORY BLOCK
         GETMAIN EC,LV=256,A=DECB1+12
         LTR   R15,R15   Q. OK
         BNZ   ERROR5   NO, BRANCH
         SPACE 3
*  READ JFCB OF SYSUT1 TO GET VOL SERIAL AND DSNAME
         L     RW1,DECB1+12  POINT TO DIRECTORY BUFFER
         ST    RW1,DCB1JFCB  MOVE INTO EXIT LIST
         MVI   DCB1JFCB,X'87' INDICATE JFCB,LAST
         RDJFCB SYSUT1   INTO AREA USED FOR DIRECTORY BUFFER
         BNZ   ERROR10     NO,BRANCH TO ERROR
         CLC   0(4,RW1),=C'SYS1'   Q. SYSTEM DATA SET
         BNE   NOTSYS1    NO, BRANCH
         MVC   LIB,5(RW1)   SAVE LIBRARY NAME BUT SKIP SYS1
         B     GETVOL
NOTSYS1  EQU   *
         MVC   LIB,0(RW1)   SVAE LIBRARY NAME
GETVOL   MVC   VOL,118(RW1)   SAVE VOLUME SERIAL
         SPACE 3
         L     RLIST,MEMLSTA   POINT TO MEMBER TABLE
         MVC   DECB1+6(2),=H'256' SIZE,  DIRECTORY BLOCK
         MVC   SYSUT1+33(3),=AL3(ERROR9) EOF ADDRESS
         SR    RCOUNT,RCOUNT    FOR MEMBER COUNT
READDIR  BAL   RBAL,READ1    GO GET A DIRECTORY BLOCK
         LR    REND,RBUF     RBUF POINTS TO BLOCK
         AH    REND,0(RBUF)   NO. OF USED BYTES IN BLOCK
         LA    RBUF,2(RBUF)  POINT TO FIRST MEMBER ENTRY
CHKENDDR CR    RBUF,REND    Q. AT END OF USED PORTION OF BLOCK
         BNL   READDIR     YES, GO GET ANOTHER BLOCK
         CLI   0(RBUF),X'FF'  Q. END OF DIRECTORY?
         BE    DIREND    YES, BRANCH
         IC    RLEN,11(RBUF)  INSERT SIZE AND FLAGS BYTE
         N     RLEN,=F'31'  CLEAR ALL BUT SIZE BITS
         SLL   RLEN,1    TIMES 2, NUM OF BYTES
         TM    11(RBUF),X'80'  Q. ALIAS
         BO    NEXTENT        YES, SKIP IT, ELSE USE IT
SWTCH1   BC    0,SYMBENT  BRANCH ENABLED IF SYSUT1 IS A SMBOLIC LIB
         LA    RCOUNT,1(RCOUNT)   INCREMENT NUMBER OF MEMBERS
         C     RCOUNT,NOMEM   Q. EXCEED TABLE SIZE
         BH    ERROR6      YES, ERROR
         MVC   0(11,RLIST),0(RBUF)  MOVE MEMBER NAME AND TTR TO TABLE
         MVC   11(3,RLIST),12(RBUF)  MOVE TTR OF 1ST TEXT BLOCK
         XC    14(4,RLIST),14(RLIST)  CLEAR SSI FIELD
         CH    RLEN,=H'26'  Q. IS DIRECTORY ENTRY BIG ENOUGH FOR SSI
         BL    NEXTSLOT  NO, BRANCH
         TM    20(RBUF),X'04'  Q. SCATTER FORMAT
         BNO   NOTSCTR   NO, BRANCH
         CH    RLEN,=H'34'  Q. IS SCTR ENTRY BIG ENOUGH FOR SSI
         BL    NEXTSLOT  NO, BRANCH
         MVC   14(4,RLIST),42(RBUF)  SSI ENTRY TO TABLE
         B     NEXTSLOT
NOTSCTR  EQU   *
         MVC   14(4,RLIST),34(RBUF) SSI ENTRY, PUT IN TABLE
NEXTSLOT EQU   *  BUMP TO NEXT AVAILABLE SLOT IN MEMBER TABLE
         LA    RLIST,ENTSIZE(RLIST)  POINT TO NEXT TABLE ENTRY
NEXTENT  EQU   *
         LA    RBUF,12(RBUF,RLEN)   POINT TO NEXT MEMBER ENTRY
         B     CHKENDDR
         SPACE 3
DIREND   EQU   *    HERE WHEN ALL DIRECTOR READ, SORT BY TTR
SWTCH2   BC    0,TERMSYMB  BRANCH ENABLED IF SYSUT1 IS A SYMBOLIC LIB
         ST    RLIST,MEMTBNDA   SAVE ADDRESS OF LIST END + 1
PASSMEMT L     RT,MEMLSTA     TO MEMB LIST, 1ST ENTRY
         LA    RB,ENTSIZE(RT)   TO  SECOND ENTRY
         SR    RFLIP,RFLIP   CLEAR FLAG
         B     CKNDPASS
COMPTTR  CLC   8(3,RT),8(RB)  Q. ENTRY N AND N+1 IN ORDER BY TTR
         BH    FLIP       NO, GO REVERSE THEM
NEXT2    LA    RT,ENTSIZE(RT)   POINT TO N+1 AND
         LA    RB,ENTSIZE(RB)    N+1
CKNDPASS CR    RB,RLIST     Q. AT END OF TABLE
         BL    COMPTTR     NO, GO SEE IF THE 2 ENTRIES ARE IN SEQUENCE
         LTR   RFLIP,RFLIP  Q. ANY ENTRIES SWITCHED, THIS PASS
         BZ    SORTEDMN   NO , SORT DONE
         B     PASSMEMT ELSE MAKE ANOTHER PASS
FLIP     EQU   *  REVERSE ENTRIES WITH 3 X-CLUSIVE OR'S
         XC    0(ENTSIZE,RT),0(RB)
         XC    0(ENTSIZE,RB),0(RT)
         XC    0(ENTSIZE,RT),0(RB)
         LA    RFLIP,1   INDICTE REVERSAL
         B     NEXT2
SORTEDMN EQU   *
FREDRBF  EQU   *
         FREEMAIN R,LV=256,A=DECB1+12  FREE DIRECTORY BUFFER
         L     RW1,NOCESD   NO CESD ENTRIES EXPECTED
         SLL   RW1,3   TIMES 8
         ST    RW1,GETLST+00   MOVE TO GETMAIN PARM AREA
         GETMAIN EC,A=CESDADR,MF=(E,GETLST)
         LTR   R15,R15  Q.OK
         BNZ   ERROR6     NO  BRANCH
         ST    RW1,CSLSTSZE
         A     RW1,CESDADR   TO END OF LIST
         ST    RW1,CESDLSND  SAVE
         LH    RW1,SYSUT1+62  MAX BLOCKSIZE
         ST    RW1,GETLST+00
         GETMAIN EC,A=DECB1+12,MF=(E,GETLST)
         LTR   R15,R15   Q. OK
         BNZ   ERROR4   NO
         STH   RW1,DECB1+6     SIZE OF BLOCK  TO DECB
         L     RLIST,MEMLSTA      TO 1ST ENTRY IN MEMBLIST
         MVC   SYSUT1+33(3),=AL3(NEXTMEMB)  EOF ADDRESS
         B     CHKEND2   SE IF AT END
STRTMBER EQU   *
         L     RCESD,CESDADR     TO FIRST SLOT IN CESTAB
         CLC   8(3,RLIST),11(RLIST)      Q. TTR-TEXT = TTR OF MEMBER
         BE    NEXTMEMB   YES, DON'T PROCESS
         MVC   BLKADR+0(3),8(RLIST)     OVE TTR TO BLKADR FIELD
         POINT SYSUT1,BLKADR   TO GET 1ST BLOCK OF MEMBER
NEXTMREC BAL   RBAL,READ1   GET A BLOCK OF MEMBER
         NOTE SYSUT1      GET TRUE TTR
         ST    R1,BLKTEST
         CLC   BLKTEST(3),11(RLIST)    Q. THIS BLOCK THE 1ST TEXT BLOCK
         BE    NEXTMEMB       YES, GO DO NEXT MEMBER
         CLI   0(RBUF),X'20'  Q.  CESD RECORD
         BE    CESDRTN      YES, GO PROCESS
         CLI   0(RBUF),X'80'  Q. IDR RECORD
         BE    IDRTN    YES
BUMP4    EQU   *
         SR    RW1,RW1     CLEAR
         IC    RW1,BLKTEST+2    INSERT R OF CURRENT BLOCK
         LA    RW1,1(RW1)     ADD 1 TO R
         STC   RW1,BLKTEST+2   ESTIMATE TTR OF NEXT BLOCK
         CLC   BLKTEST(3),11(RLIST)   Q. NEXT BLOCK THE 1ST TEXT REC
         BNE   NEXTMREC     NO, OK TO READ NEXT BLOCK OF THIS MEMBER
NEXTMEMB EQU   *
         TM    FLAG1,SHORT+OVFLO   Q. FLAG INDICATE PREV MEMB NOT
         BNZ   ERROR11    YES, BRANCH                          COMPLETE
         LA    RLIST,ENTSIZE(RLIST) TO NEXT ENTRY IN MEMBER TABLE
CHKEND2  C     RLIST,MEMTBNDA    Q. AT END OF TABLE
         BL    STRTMBER        NO, GO GET NEXT MEMBER
         L     R1,DECB1+12   ADRS OF BFR
         LH    RW1,SYSUT1+62 BLKSIZE
         LA    R0,0(RW1)     CLEAR HI BYTE
         FREEMAIN R,LV=(0),A=(1)   FREE BUFFER
         L     R1,CESDADR     ADR OF CESD TAB
         L     RW1,CSLSTSZE   SIZE OF TABL
         LA    R0,0(RW1)
         FREEMAIN R,LV=(0),A=(1)
CLOSEUT1 CLOSE (SYSUT1)
GETLSTDD EQU   *
         L     RW1,LASTDD   TO LAST DD ENTRY IN TIOT
         B     BUMPDD
         SPACE 3
TERMSYMB FREEMAIN R,LV=256,A=DECB1+12
         B     CLOSEUT1
         SPACE 3
TERM     EQU   *
         SPACE 3
ENDTIOT  EQU   *
         CLOSE (SYSUT2)
         L     R13,SAVEAREA+4
         RETURN (14,12),RC=0
CESDRTN  EQU   *
CESDSWTH BC    15,BUMP4   BYPASS SWITCH
         LH    RLEN,6(RBUF)   LENGTH OF CESD DATA
         LA    RBUF,8(RBUF)  TO 1ST CESD ENTRY
         LA    REND,0(RBUF,RLEN)   POINT TO  END OF RECORD
CHKCEND  CR    RBUF,REND   Q. AT END OF CESD RECORD
         BNL   BUMP4   YES, RETURN
         C     RCESD,CESDLSND   Q. AT END OF CESTND
         BNL   ERROR7    YES, ERROR
         MVC   0(8,RCESD),0(RBUF)   MOVE CESD NAME TO TABLE
         LA    RCESD,8(RCESD)   BUMP TO NEXT CESD TABLE SLOT
         LA    RBUF,16(RBUF)    TO NEXT CESD ENTRY
         B     CHKCEND  GO CHECK IF AT END OF RECORD
         SPACE 3
IDRTN    EQU   *
         MVC   SAVETYP,2(RBUF)  SAVE IDR TYPE
         TM    SAVETYP,X'01'  Q. SUPERZAP DATA
         BO    ZAPID 'YES'
         TM    SAVETYP,X'08'  Q. USER DATA
         BO    USRID   YES, BRANCH
         TM    SAVETYP,X'02'    Q. LKED DATA
         BO    LKEDATE   YES, BRANCH
IDCHKEND EQU   *
         TM    SAVETYP,X'80'  Q. LAST IDR REC
         BO    NEXTMEMB   YES, GET NEXT MEMBER
         B     NEXTMREC     ELSE GET NEXT BLOCK
         SPACE 3
ZAPID    EQU   *
ZOPTSWTH BC    15,IDCHKEND   BYPASS SWITCH
         NI    3(RBUF),X'3F'   TURN OFF FLAGS, LEAVE NO. ENTRIES
         SR    RCOUNT,RCOUNT
         IC    RCOUNT,3(RBUF)  NUMBER OF ID ENTRIES
         LTR   RCOUNT,RCOUNT    Q. ZERO
         BZ    IDCHKEND        YES, BRANCH
         LA    RBUF,4(RBUF)        POINT TO FIRST ENTRY
FORMATZP BAL   RBAL,IDFMTCM  GO TO COMMON ROUTINE
         BAL   RBAL,FORMTSSI   GO FORMAT SSI DATA
         MVC   IDRVAL(8),5(RBUF)    ID DATA, FROM RECORD
         MVI   IDRTYP,C'Z'  INDICATE SUPERZAP
         LA    RBUF,13(RBUF)    BUMP TO NEXT IDR ENTRY IN RECORD
         BCT   RCOUNT,FORMATZP   Q.  ANY MORE ENTRIES
         B     IDCHKEND       NO, RETURN
         SPACE 3
USRID    EQU   *
LOPTSWTH BC    15,IDCHKEND   BYPASS SWITCH
         SR    RLEN,RLEN   CLEAR
         IC    RLEN,1(RBUF)   BYTE USED
         SH    RLEN,=H'2'  BYTES OF IDR ENTRIES
         LA    RBUF,3(RBUF)  TO FIRST ENTRY
         TM    FLAG1,SHORT    Q.  PREV RECORD SHORT
         BO    PRVSHORT    YES, BRANCH
         TM    FLAG1,OVFLO    Q.  PREV RECORD OVERFLOWED
         BO    PRVOVFLO   YES, BRANCH
CHK6     CH    RLEN,=H'6'  Q.  6 BYTES REMAIN
         BL    LESTHAN6   BRANCH, LESS THAN 6
         BAL   RBAL,IDFMTCM   TO COMMON FORMATTING ROUTINE
         BAL   RBAL,FORMTSSI   GO FORMAT SSI DATA
         MVI   IDRTYP,C'L'  INDICATE LINKEDIT
DECR6    SH    RLEN,=H'6'  HAVE PROCESSED 1ST 6 BYTES
         SR    RUSR,RUSR  CLEAR
         IC    RUSR,5(RBUF)   BYTES OF USER DATA
         CR    RUSR,RLEN  Q.  USER DATA EXCEED REMAING IN BUFFER
         BH    USOFLO  YES, BRANCH
         SR    RLEN,RUSR    REDUCE BY NUM BYTES PROCESSED
         SH    RUSR,=H'1'   CONVERT TO MACHINE CODE LENGTH
         BM    NEXTIDNT  BR IF NO IDENTIFY DATA
         EX    RUSR,MOVEIDR   MOVE IDR DATA TO OUT RECORD
NEXTIDNT EQU   *
         LA    RBUF,7(RUSR,RBUF)  TO NEXT ENTRY
         B     CHK6
MOVEIDR  MVC   IDRVAL(1),6(RBUF)   EXECUTED INSTRUCTION
         SPACE 3
USOFLO   EQU   *   DATA OVERFLOWS TO NEXT IDR
         OI    FLAG1,OVFLO   ON FLAG
         STH   RLEN,RESIDLN  SAVE RESIDUAL
         LTR   RLEN,RLEN  Q.  ANY ACTUAL DATA
         BNP   CHKERR11      NO, BRANCH
         BCTR  RLEN,0  MACHINE CODE LENGTH
         EX    RLEN,MOVEIDR  MOVE THIS PART OF IDR ENTRY
         B     CHKERR11
         SPACE 3
PRVOVFLO EQU   *    PREVIOS USER DATA OVER-FLOWRD
         NI    FLAG1,OFFOFLO   OFF FLAG
         SH    RUSR,RESIDLN    REDUCE ID DATA LENGTH BY THAT IN PREV
         SR    RLEN,RUSR    DECR REMAING BYTES, 'THIS' REC
         LA    RW1,IDRVAL     POINT  TO BYTES ALREDY MOVED
         AH    RW1,RESIDLN    POINT PAST BYTES ALREADY MOVED
         BCTR  RUSR,0     MACHINE CODE LENGTH
         EX    RUSR,MOVEREST     MOVE THE REST
         LA    RBUF,1(RUSR,RBUF)   TO NEXT ENTRY
         B     CHK6
MOVEREST MVC   0(1,RW1),0(RBUF)
         SPACE 3
LESTHAN6 EQU   *    5 OR LESS BYTES REMAIN
         LTR   RLEN,RLEN  Q.  ANY LEFT IN THIS IDR
         BNP   IDCHKEND   NO, BRANCH
         OI    FLAG1,SHORT 'INDICATE SHORT
         MVC   SAVERSID(5),0(RBUF) SAVE LAST 5 OR LESS BYTES
         STH   RLEN,RESIDLN SAVE RESIDUAL
CHKERR11 TM    SAVETYP,X'80'  Q. LAST IDR REC
         BO    ERROR11  YES, ERROR
         B     NEXTMREC  GO GET NEXT RECORD
         SPACE 3
PRVSHORT EQU   *
         NI    FLAG1,OFFSHORT   OFF FLAG
         LH    RW1,RESIDLN      SIZE OF ENTRY, PREV RECORD
         LA    RW1,SAVERSID(RW1)    POINT TO END OF SAVED RESIDUAL
         MVC   0(4,RW1),0(RBUF)   MOVE REST OF CESDNO-DATE-LEN FIELD
         ST    RBUF,SAVERBUF    SAVE
         LA    RBUF,SAVERSID   POINT TO FULL CESDNO-DATE-LEN FIELD
         BAL   RBAL,IDFMTCM    TO COMMON ROUTINE
         L     RBUF,SAVERBUF   RESTORE
         SH    RBUF,RESIDLN    BACK UP, POINT TO 'BEGINNING' OF ENTRY
         AH    RLEN,RESIDLN   ADD LENGTH OF 'ADDED' BYTES
         B     DECR6     GO  PROCESS LIKE FULL ENTRY
* COMMON ROUTINE FOR IDR PROCESSING
         SPACE 3
IDFMTCM  MVC   ALIGN(2),0(RBUF)    CESD NUMBER, ALIGN FOR S/360
         LH    RW1,ALIGN       CESD NUMBER
         BCTR  RW1,0    MAKE IT AN OFFSET
         SLL   RW1,3    MULT BY 8 FOR OFFSET INTO CESD TABLE
         A     RW1,CESDADR     ADD CESD TABLE START
         CR    RW1,RCESD    Q.  OUT OF TABLE
         BNL   ERROR8    YES, ERROR
         PUT   SYSUT2    GET  AN OUTPUT BUFFER
         LR    ROUTR,R1   ADDRESSABILITY
         MVI   IDRVAL,X'40'   CLEAR DATA PORTION
         MVC   IDRVAL+1(83),IDRVAL
         MVC   IDRCSECT,0(RW1)      CSECT NAME FROM CESD TABLE
         MVC   IDRLOADM,0(RLIST)    LOAD MODULE NAME
         UNPK  IDRDATE,2(3,RBUF)   DATE, FROM IDR REC
         OI    IDRDATE+4,X'F0'  UNSIGN
         MVC   IDRLIB,LIB       LIBRARY NAME
         MVC   IDRVOL,VOL       VOLUME SERIAL
         BR    RBAL  RETURN
         SPACE 3
         SPACE 3
LKEDATE  EQU   *
ROPTSWTH BC    15,IDCHKEND         BYPASS SWITCH
         SR    RLEN,RLEN  CLEAR
         IC    RLEN,1(RBUF)   BYTES USED
         SH    RLEN,=H'2'  BYTES OF IDR DATA
         LA    RBUF,3(RBUF)  TO FIRST ENTRY
         TM    FLAG1,SHORT    Q. PREV ENTRY, LAST REC, L.T. 15 BYTES
         BO    PRVSHRTB   YES
         SPACE 3
CHK15    CH    RLEN,=H'15'  Q.  15 BYTES REMAIN
         BL    LESTHN15   BRANCH, LESS THAN 15
         BAL   RBAL,LKFMTCM  GO PROCESS ENTRY
         BAL   RBAL,FORMTSSI   GO FORMAT SSI
DECR15   SH    RLEN,=H'15' HAVE PROCESSED 15 BYTES
         LA    RBUF,15(RBUF)  TO NEXT ENTRY
         B     CHK15
         SPACE 3
LKFMTCM  EQU   *    COMMON FORMATTING ROUTINE
         PUT   SYSUT2   GET AN OUTPUT BUFFER
         LR    ROUTR,R1  ADDRESSIBILITY
         MVI   IDRVAL,X'40'   CLEAR
         MVC   IDRVAL+1(83),IDRVAL
         MVC   IDRLOADM,0(RLIST)   LOAD MODULE NAME
         MVC   IDRLIB,LIB    LIBRARY
         MVC   IDRVOL,VOL    VOLUME
         UNPK  IDRDATE,12(3,RBUF)   DATE
         OI    IDRDATE+4,X'F0'  UNSIGN
         MVI   IDRTYP,C'R' INDICATE REPLACEMENT
         BR    RBAL    RETURN
         SPACE 3
LESTHN15 EQU   *   14 OR LESS BYTES REMAIN
         LTR   RLEN,RLEN   Q.  ANY LEFT IN THIS IDR
         BNP   IDCHKEND   NO, BRANCH
         OI    FLAG1,SHORT   INDICATE SHORT
         MVC   SAVERSID(14),0(RBUF)  SAVE LAST 14 OR LESS BYTES
         STH   RLEN,RESIDLN   SAVE RESIDUAL
CKERR11B TM    SAVETYP,X'80'  LAST IDR
         BO    ERROR11   YES, ERROR
         B     NEXTMREC
         SPACE 3
PRVSHRTB EQU   *
         NI    FLAG1,OFFSHORT   OFF FLAG
         LH    RW1,RESIDLN  SIZE OF ENTRY,PREV RECORD
         LA    RW1,SAVERSID(RW1)   PNT TO END OF SAVED RESIDUAL
         MVC   0(14,RW1),0(RBUF)  MOVE REST OF DATA
         ST    RBUF,SAVERBUF  SAVE BUFFER POINTER
         LA    RBUF,SAVERSID  PNT TO ASSEMBLED ENTRY
         BAL   RBAL,LKFMTCM    TO FORMATTING RTN
         L     RBUF,SAVERBUF     RESTORE
         AH    RLEN,RESIDLN   ADD LENGTH OF 'ADDED' BYTES
         BAL   RBAL,FORMTSSI   FORMAT SSI
         B     DECR15
         SPACE 3
FORMTSSI EQU   *
         OC    14(4,RLIST),14(RLIST)      Q. NULL SSI
         BCR   8,RBAL  YES,RETURN
         MVO   SSIWORK,14(4,RLIST)    MOVE SSI TO WORK AREA
         UNPK  IDRSSI,SSIWORK  ADD ZONES
         TR    IDRSSI,SSITRTAB CONVERT TO EBCDIC
         BR    RBAL   RETURN
         SPACE 3
SYMBENT  EQU   *  PROCESS DIRECTORY ENTRY FOR SYMBOLIC LIBRARY
         CH    RLEN,=H'4'  Q. ENTRY BIG ENOGH FOR SSI
         BL    NEXTENT   NO. BRANCH
         PUT   SYSUT2     GET AN OUTPUT RECORD
         LR    ROUTR,R1
         MVI   IDRVAL,X'40'     CLEAR OUTPUT
         MVC   IDRVAL+1(83),IDRVAL         RECORD
         MVC   IDRLOADM,0(RBUF)      MEMBER NAME FROM DIRECTORY ENTRY
         MVC   IDRLIB,LIB    LIBRARY
         MVC   IDRVOL,VOL   VOL SERIAL
         MVO   SSIWORK,12(4,RBUF)  MOVE SSI TO WORKAREA
         UNPK  IDRSSI,SSIWORK   ADD ZONES
         TR    IDRSSI,SSITRTAB CONVERT TO EBCDIC
         B     NEXTENT
         SPACE 3
DCBEXIT  EQU   *
         TM    SYSUT1+36,X'C0'   Q.  RECFM=U
         BO    LDMDPDS       YES, MUST BE LOAD MODULE LIB, BRANCH
         OI    SWTCH1+1,X'F0'  ENABLE SWITCHES FOR
         OI    SWTCH2+1,X'F0'                 SYMBOLIC LIBRARIES
         OI    SYSUT1+36,X'C0'  SET RECFM=U
         NI    SYSUT1+36,X'EF'  OFF RECFM=B
         BR    R14
LDMDPDS  EQU   *
         NI    SWTCH1+1,X'0F' DISABLE SWITCHES FOR SYMBOLIC LIBS
         NI    SWTCH2+1,X'0F'
         BR    R14   RETURN TO OPEN
         SPACE 3
PUTMSG   EQU   *
         WTO   MF=(E,(R1))
         ABEND 101,DUMP
ERROR1   LA    R1,MSG1
         B     PUTMSG
ERROR2   LA    R1,MSG2
         B     PUTMSG
ERROR3   LA    R1,MSG3
         B     PUTMSG
ERROR4   LA    R1,MSG4
         B     PUTMSG
ERROR5   LA    R1,MSG5
         B     PUTMSG
ERROR6   LA    R1,MSG6
         B     PUTMSG
ERROR7   LA    R1,MSG7
         B     PUTMSG
ERROR8   LA    R1,MSG8
         B     PUTMSG
ERROR9   LA    R1,MSG9
         LTR   RCOUNT,RCOUNT  HAVE ANY MEMBERS BEEN FOUND
         BZ    TERMSYMB  NO, MUST BE A DUMMIED DD CARD
         B     PUTMSG
ERROR10  LA    R1,MSG10
         B     PUTMSG
ERROR11  LA    R1,MSG11
         B     PUTMSG
         SPACE 3
READ1    EQU   *    GENERAL BSAM READ ROUTINE
         READ  DECB1,SF,MF=E
         CHECK DECB1
         L     RBUF,DECB1+12    POINT TO  BUFFER
         BR    RBAL
         READ  DECB1,SF,SYSUT1,MF=L
         SPACE 3
SYSUT1   DCB   DDNAME=SYSUT1,                                          C
               EXLST=EXLST1,                                           C
               DSORG=PS,                                               C
               MACRF=(RP)
SYSUT2   DCB   DDNAME=SYSUT2,                                          C
               DSORG=PS,                                               C
               LRECL=84,                                               C
               MACRF=(PL),                                             C
               RECFM=FB
         EJECT
PARMTBL  DS    0F
         DC    CL8'CESD='
         DC    A(NOCESD)
         DC    X'04'
         DC    X'40'
         DC    H'0'
         DC    CL8'MEM='
         DC    A(NOMEM)
         DC    X'03'
         DC    X'40'
         DC    H'0'
         DC    CL8'L='
         DC    A(LOPT)
         DC    X'01'
         DC    X'00'
         DC    H'0'
         DC    CL8'R='
         DC    A(ROPT)
         DC    X'01'
         DC    X'00'
         DC    H'0'
         DC    CL8'Z='
         DC    A(ZOPT)
         DC    X'01'
         DC    X'00'
         DC    H'0'
         SPACE 2
PTBLENTS DC    Y((*-PARMTBL)/16)
NUMTSTBL DC    C'0123456789000000'
SSITAB   DC    C'0123456789ABCDEF'   FOR SSI TRANSLATE TO EBCDIC
SSITRTAB EQU   SSITAB-240
SSIWORK  DC    X'000000000F'  SSI X-LATE WORK AREA
SAVETYP  DS    X
ENTRYSIZ DC    Y(ENTSIZE)
SAVEAREA DS    18F
DBLWORD  DS    D
MEMLSTA  DC    F'0'  FOR ADDRESS OF MEMBER NAME LIST
MEMTBNDA DC    F'0'  ADDRESS OF ENTRY AFTER LAST USED IN MEMTABLE
CESDADR  DC    F'0'  ADDRESS OF CESD TABLE
BLKADR   DC    F'0'
BLKTEST  DC    F'0'
ALIGN    DS    F
CESDLSND DC    F'0'  END OF CESD LIST
MLSTSIZE DC    F'0'
CSLSTSZE DC    F'0'
ZERO     DC    F'0'
TIOTA    DC    F'0'   ADDRESS OF TIOT, FROM EXTRACT
LASTDD   DC    F'0'  ADDRESS OF LAST DD ENTRY IN TIOT SCANNED
TSTFLD   DS    CL10
FLAG1    DC    X'00'
LOPT     DC    X'02'
         DC    CL8'YES'
ROPT     DC    X'01'
         DC    CL8'NO'
ZOPT     DC    X'02'
         DC    CL8'YES'
RESIDLN  DC    H'0'  LEN OF 1ST HALF OF SPANNED ENTRY
SAVERSID DC    CL30' '   SAVED 1ST HALF OF SPANNED ID ENTRY
SAVERBUF DC    F'0'   BUF REG  SAVE AREA
EXLST1   DS    0F
DCB1XIT  DC    X'05'  DCB EXIT, SYSUT1
         DC    AL3(DCBEXIT)
DCB1JFCB DS    0F
         DC    X'80'
         DC    XL3'00'
VOL      DS    CL6
LIB      DS    CL8
NOCESD   DC    F'600'    DEFAULT MAX FOR NUM CESD ENTRIES, ONE MEMBER
NOMEM    DC    F'1500'   DEFAULT MAX FOR NUMBER OF MEMBERS
USED     EQU   X'80'
NUMERIC  EQU   X'40'
FREELST  FREEMAIN E,MF=L
GETLST   GETMAIN MF=L
         SPACE 3
* ERROR MESSAGES
         SPACE 3
MSG1     WTO   'IDRLIST01  DUPLICATE PARM KEYWORD',ROUTCDE=(11),MF=L
MSG2     WTO   'IDRLIST02  EXCESSIVE PARM DIGITS',ROUTCDE=(11),MF=L
MSG3     WTO   'IDRLIST03  INVALID PARM VALUE',ROUTCDE=(11),MF=L
MSG4     WTO   'IDRLIST04  INVALID PARM KEYWORD',ROUTCDE=(11),MF=L
MSG5     WTO   'IDRLIST05  INSUFFICIENT MEMORY',ROUTCDE=(11),MF=L
MSG6     WTO   'IDRLIST06  EXCESSIVE MEMBERS',ROUTCDE=(11),MF=L
MSG7     WTO   'IDRLIST07  EXCESSIVE CESD IN MEMBER',ROUTCDE=(11),     C
               MF=L
MSG8     WTO   'IDRLIST08  INVALID ESD NUMBER IN IDR',ROUTCDE=(11),    C
               MF=L
MSG9     WTO   'IDRLIST09  EOF WHILE READING DIRECTORY',ROUTCDE=(11),  C
               MF=L
MSG10    WTO   'IDRLIST10  JFCB READ FAIL',ROUTCDE=(11),MF=L
MSG11    WTO   'IDRLIST11  INVALID IDR ENTRY',ROUTCDE=(11),MF=L
         SPACE 3
***  PATCH AREA
         SPACE 2
         DC    40C'ZAP'
         SPACE 3
** REGISTER EQUATES
         SPACE 3
R0       EQU   0
R1       EQU   1
RBASE    EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
RLEN     EQU   2
RODD     EQU   5
RT       EQU   5
RUSR     EQU   5
RBUF     EQU   4
REVEN    EQU   4
RB       EQU   4
RPARM    EQU   6
RFLIP    EQU   6
ROUTR    EQU   6
RLIST    EQU   7
REND     EQU   8
RCOUNT   EQU   9
RW1      EQU   10
RFLD     EQU   11
RCESD    EQU   11
RSTRT    EQU   3
RBAL     EQU   3
SHORT    EQU   X'80'
OVFLO    EQU   X'40'
OFFSHORT EQU   X'FF'-SHORT
OFFOFLO  EQU   X'FF'-OVFLO
ENTSIZE  EQU   18
         SPACE 3
PARMSECT DSECT
PRMNAME  DS    CL8
PRMFLD   DS    F
PRMLEN   DS    X    MACHINE CODE LENGTH
PRMFLGS  DS    X
*              BIT 0  USED
*                  1  NUMERIC ONLY
IDRECORD DSECT
IDRVAL   DS    CL40
IDRLIB   DS    CL8
IDRVOL   DS    CL6
IDRTYP   DS    C
IDRDATE  DS    ZL5
IDRLOADM DS    CL8
IDRCSECT DS    CL8
IDRSSI   DS    CL8
          END
