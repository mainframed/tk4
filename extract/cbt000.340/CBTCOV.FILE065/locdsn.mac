***********************************************************************
*                                                                     *
*  THIS PROGRAM IS A TSO COMMAND PROCESSOR THAT WILL LIST ON THE TER- *
*  MINAL TO WHICH VOLUME A DATA SET IS CATALOGED AND ON WHICH         *
*  ONLINE DIRECT ACCESS VOLUMES THE DATA SET CAN BE FOUND.            *
*                                                                     *
*                  WRITTEN OCT 10, 1977 BY SCOTT HEILMAN              *
*                                                                     *
***********************************************************************
*/********************************************************************/
*/*                                                                  */
*/* MODIFIED TO USE NEW UCB LOOKUP ROUTINE FOR                       */
*/* MVS/XA AND MVS DFP/370. ALSO WORKS ON RELEASE 1.3 OF SP          */
*/*                                                                  */
*/* MODIFIED TO ALLOW PARTICULAR VOLUME SELECTION OR GENERIC         */
*/* VOLUME SEARCH. WE HAVE ABOUT 180 ONLINE ADDRESSES AND IT TAKES   */
*/* A LONG TIME TO SEARCH ALL VOLUMES.                               */
*/*                                                                  */
*/* MODIFIED TO CLEAR SCREEN ON ENTRY AND ADDED A FEW INFORMATIVE    */
*/* MESSAGES                                                         */
*/*                                                                  */
*/*                                                                  */
*/* MIKE HAWTHORNE    TTI CITICORP   SANT MONICA CA.                 */
*/* MAY 2 1985.                                                      */
*/*                                                                  */
*/* IF YOU ARE LUCKY ENOUGH TO HAVE MORE THAN 256 DISTINCT UNIT      */
*/* ADDRESSES ALTER THE CODE AROUND THE TABLE FOR VOLUME ID'S.       */
*/*                                                                  */
*/*                                                                  */
*/********************************************************************/
         EJECT
***********************************************************************
*  INITIALIZE.                                                        *
***********************************************************************
LOCDSN   CSECT
START    EQU   *
         STM   R14,R12,12(R13)         SAVE REGISTERS
         LR    R12,R15                 LOAD BASE REGISTER
         USING START,R12
         LR    R2,R1                   SAVE CPPL PTR
         LA    R0,DEND-DSTART          GET SIZE OF DSECT
         GETMAIN   R,LV=(R0)
         LR    R11,R1                  LOAD DSECT BASE REGISTER
         USING GOTTEN,R11
         ST    R13,SAVE+4              ESTABLISH SAVE
         ST    R11,8(R13)                             AREA CHAINING
         LR    R13,R11                 PTR TO MY SAVE AREA INTO R13
         EJECT
***********************************************************************
*  SEARCH UCBS FOR DIRECT ACCESS DEVICES. BUILD A TABLE OF VOLUME     *
*  SERIAL NUMBERS OF ALL ONLINE NON-VIO DIRECT ACCESS DEVICES.        *
***********************************************************************
         XC    VOLCNT,VOLCNT           ZERO VOLUME COUNT
         B     SETUP                   START UCB LOOKUP          XA
*        L     R4,16                   ADDRESS OF CVT INTO R4    XA
*        L     R5,40(R4)               UCB LOOKUP LIST FROM CVT  XA
*/*******************************************************************/
*/*                                                                 */
*/*  THE FOLLOWING FIELDS ARE THE REQUIRED PARAMETER FIELDS         */
*/*  FOR THE MVS/XA UCB LOOKUP ROUTINE. (ALSO WORKS ON MVS/SP).     */
*/*                                                                 */
*/*******************************************************************/
PARMLIST DS    3F                                                XA
         ORG   PARMLIST                                          XA
PARMWA   DS    F               ADDR OF 100 BYTE WORK AREA        XA
PARMDEVT DS    F               ADDR OF DEVICE TYPE BYTE          XA
PARMUCB  DS    F               ADDR OF UCB GOT FROM SYSTEM       XA
DEVCLASS DS    CL1             DEVICE CLASS BYTE                 XA
ADDRUCB  DS    F               UCB ADDRESS                       XA
         DS    0D                                                XA
WORKAREA DS    CL100           WORK AREA FOR IOSVSUCB            XA
VOLID    DC    CL6'      '
VLEN     DC    X'00'
DSNFLAG  DC    X'00'
LINE     DC    X'27F5'                    ESCAPE & OP CODE
         DC    X'40'                      WCC (NO BITS)
         DC    X'115D7E'                  TCAM/SPF PREFIX
         DC    X'114040'                  CURSOR AT TOP OF SCREEN
LINEL    EQU   *-LINE
*
*        SCAN UCB TABLE
*/***************************************************************/
*/*                                                             */
*/* NOTE MVS/XA HAS UCB ENTRIES 3 BYTES LONG SO THE UCB LOOKUP  */
*/* METHOD HAS BEEN CHANGED TO USE IOSVSUCB.                    */
*/*                                                             */
*/* THIS METHOD WILL ALSO WORK ON MVS SP 1.3                    */
*/*                                                             */
*/***************************************************************/
         SPACE 1
SETUP    DS    0H
         GTSIZE ,
         STFSMODE ON,INITIAL=YES          SET FULL SCREEN MODE ON
         TPUT  LINE,LINEL,FULLSCR,,HOLD   CLEAR THE SCREEN, BUT WAIT
         STFSMODE OFF                     SET FULL SCREEN MODE OFF
         TPUT  MSG10,79,EDIT,WAIT,HOLD
         TPUT  BLANKS,79,EDIT,WAIT,HOLD
         TPUT  BLANKS,79,EDIT,WAIT,HOLD
         TPUT  MSG0,73,EDIT,WAIT,HOLD         SET UP
         TGET  VOLID,6                        GET VOLUME ID (UP TO 6)
         STC   R1,VLEN                        SAVE LENGTH
         CLI   VLEN,X'00'                     DID HE ENTER ANYTHING
         BE    GOON                    NO  HE MAY BE SORRY
         BCTR  R1,0                    REDUCE BY ONE FOR MOVE
         EX    R1,OCEXC
         B     GOON
OCEXC    OC    VOLID(0),BLANKS         TRANSLATE TO UPPER CASE
GOON     DS    0H
         LA    R7,DASDLIST             GET START OF TABLE
         L     R3,CVTPTR                GET CVT ADDRESS         XA
         USING CVTMAP,R3                                        XA
         XC    WORKAREA,WORKAREA        CLEAR WORK AREA         XA
         LA    R1,WORKAREA              WORK AREA ADDRESS       XA
         ST    R1,PARMWA                STORE ITS ADDRESS       XA
         LA    R1,DEVCLASS              ADDRESS OF DEVICE CLASS XA
         ST    R1,PARMDEVT              STORE IT                XA
         MVI   DEVCLASS,UCB3DACC        INDICATE DEV CLASS DA   XA
         LA    R1,ADDRUCB               UCB ADDR FROM SYSTEM    XA
         ST    R1,PARMUCB               STORE IT IN PARMLIST    XA
         USING UCBOB,R6                                         XA
AGAIN    EQU   *                                                XA
         LA    R1,PARMLIST              GET PARAMETER LIST      XA
         L     R15,CVTUCBSC             POINT TO UCB LOOKUP     XA
         BALR  R14,R15                  CALL ROUTINE            XA
         SPACE 1
LOOP     CL    R15,=F'0'                HAVE WE DONE ALL UCBS   XA
         BNE   UCBEND                   YES                     XA
         SPACE 1
GOTUCB   L     R6,ADDRUCB               GET ITS ADDRESS         XA
         TM    SRTESTAT,SRTEONLI        IS THIS DEVICE ONLINE   XA
         BNO   AGAIN                    LETS GET NEXT DEVICE    XA
         CLC   UCBTBYT3(2),=X'2005'     DATA CELL?                XA
         BE    AGAIN                    IF SO SKIP IT             XA
         TM    SRTEVOLI,X'FF'           ANY NAME?                 XA
         BZ    AGAIN                    NO, IGNORE IT             XA
         TM    0(R6),X'80'              VIRTUAL (VIO) DEVICE      XA
         BO    AGAIN                    IGNORE                    XA
         CLI   VLEN,X'00'               ARE WE LOOKING FOR GENERIC XA
         BE    MOVEVOL                  NO SO GO AND DO IT
EXCLC    CLC   VOLID(0),SRTEVOLI        <<< EXECUTED >>>
         XR    R1,R1                    CLEAR FOR IC
         IC    R1,VLEN                  GET LENGTH
         BCTR  R1,0                     REDUCE FOR EXECUTE
         EX    R1,EXCLC                 CHECK FOR MATCH
         BNE   AGAIN                    IF NOT SKIP IT
         SPACE 1
MOVEVOL  EQU   *                       NEW VOLUME FOUND
         MVC   0(6,R7),28(R6)          MOVE VOL FROM UCB TO TABLE
         LA    R7,6(R7)                NEXT POSITION IN THE TABLE
         LH    R8,VOLCNT               GET VOLUME COUNT
         LA    R8,1(R8)                ADD 1
         STH   R8,VOLCNT               UPDATE
         CH    R8,=H'256'              CHECK FOR TABLE LIMIT
         BNH   AGAIN                   NO MORE ACCEPTED
         LTORG
UCBEND   EQU   *
         LH    R8,VOLCNT               NR OF VOLUMES PROCESSED
         CH    R8,=H'0'                DID WE DO ANY
         BNE   GOTVOLS                 YES
         LH    R0,MSG8                 ISSUE MESSAGE
         LA    R1,MSG8+2
         BAL   R10,TPUT
         B     RETURN                  BACK TO USER
         EJECT
GOTVOLS  DS    0H
***********************************************************************
*  TEST FOR COMMAND OPERANDS.  RETURN IF THERE ARE NONE.  CALCULATE   *
*  THE ADDRESS AND LENGTH OF THE COMMAND OPERAND. CONVERT ANY LOWER   *
*  CASE LETTERS TO UPPER CASE AND INITIALIZE DSN WORK AREA.           *
***********************************************************************
         L     R3,12(R2)               ECT PTR INTO R3
         TM    28(R3),X'80'            ANY OPERANDS ?
         BO    NOOPERS                 BRANCH NO
         L     R3,0(R2)                CMD BUFFER PTR INTO R3
         LH    R4,0(R3)                BUFFER LENGTH INTO R4
         LA    R5,4                    SUBTRACT 4 TO ALLOW
         SR    R4,R5                            FOR LENGTH WORD
         SH    R4,2(R3)                SUBTRACT OFFSET TO ALLOW FOR CMD
         LA    R5,4(R3)                PTR TO CMD INTO R5
         AH    R5,2(R3)                PTR TO OPERAND INTO R5
         LR    R3,R5                   PTR TO OPERAND INTO R3
         LR    R5,R4                   SAVE DSN LENGTH IN R5
         BCTR  R5,0                    REDUCE BY 1 FOR EXECUTE INST
         EX    R5,LOWTOUP              CONVERT LOWER CASE TO UPPER
         LA    R5,44                   SET DSNLEN
         STH   R5,DSNLEN                          TO 44
         MVI   DSN,C' '                BLANK OUT
         MVC   DSN+1(L43),DSN                    DSN AREA
         EJECT
***********************************************************************
*  CHECK TO SEE WHAT THE USER WANTS.  IF ALL HE WANTS IS A            *
*  PARTICULAR DATA SET, WRITE THE DSN ON THE TERMINAL AND GO CHECK    *
*  TO SEE IF LOGON ID NEEDS TO BE ADDED TO THE USER SUPPLIED DATA SET *
*  NAME.                                                              *
***********************************************************************
         LR    R1,R3                   PTR TO DSN INTO R1
         LR    R0,R4                   DSN LENGTH INTO R0
         BAL   R10,TPUT                WRITE DSN TO TERMINAL
***********************************************************************
*  CHECK TO SEE IF USER'S LOGON ID MUST BE APPENDED TO THE SUPPLIED   *
*  DSNAME AND DO SO IF IT IS NECESSARY.  MOVE THE FULLY QUALIFIED     *
*  DSNAME TO A CONTROL AREA IN PREPARATION FOR ISSUING THE LOCATE     *
*  MACRO.                                                             *
***********************************************************************
CHEKQUOT LA    R6,44                   DSN AREA LENGTH INTO R6
         LA    R5,DSN                  PTR TO DSN AREA INTO R5
         CLI   0(R3),C''''             IS 1ST CHARACTER A QUOTE ?
         BE    SKIPQUOT                BRANCH YES
         L     R7,8(R2)                PSCB PTR INTO R7
         MVC   DSN(L7),0(R7)           MOVE USER ID TO DSN AREA
ISITBLK  CLI   0(R5),C' '              IS THIS CHARACTER A BLANK ?
         BE    MOVEDOT                 BRANCH YES
         LA    R5,1(R5)                BUMP OVER 1 CHARACTER
         BCT   R6,ISITBLK              REDUCE LENGTH BY 1 & LOOP
MOVEDOT  MVI   0(R5),C'.'              MOVE PERIOD AFTER USER ID
         LA    R5,1(R5)                BUMP OVER 1 CHARACTER
         BCT   R6,MOVEDSN              REDUCE LENGTH BY 1 & BRANCH
SKIPQUOT LA    R3,1(R3)                BUMP OVER 1 CHARACTER IN OPERAND
         BCTR  R4,0                    REDUCE OPERAND LENGTH BY 1
MOVEDSN  LTR   R4,R4                   IS THIS THE END OF THE OPERAND ?
         BZ    LOCATE                  BRANCH YES
         CLI   0(R3),C''''             IS THIS CHARACTER A QUOTE ?
         BE    LOCATE                  BRANCH YES
         MVC   0(L1,R5),0(R3)          MOVE 1 CHARACTER OF DSN OPERAND
         LA    R3,1(R3)                BUMP OVER 1 CHARACTER IN OPERAND
         LA    R5,1(R5)                BUMP OVER 1 CHARACTER IN DSN
         BCTR  R4,0                    REDUCE OPERAND LENGTH BY 1
         BCT   R6,MOVEDSN              REDUCE DSN LENGTH BY 1 AND LOOP
         EJECT
***********************************************************************
*  ISSUE THE LOCATE MACRO TO FIND THE VOLUME ON WHICH THE DATA SET    *
*  RESIDES.  IF THE DATA SET IS NOT CATALOGGED ISSUE AN INFORMATIVE   *
*  MESSAGE TO THE TERMINAL. IF THE DATA SET SPANS MORE THAN ONE     *
*  VOLUME ISSUE A MESSAGE INDICATING THAT THE DATA SET CANNOT BE PRO- *
*  CESSED AND RETURN.  IF LOCATE IS SUCCESSFUL CONTINUE PROCESSING.   *
***********************************************************************
LOCATE   LA    R3,0                    ZERO R3
         ST    R3,CAMLIST              ZERO WORD 1 OF CAMLIST
         MVI   CAMLIST,X'44'           INDICATE LOCATE OPTION
         ST    R3,CAMLIST+8            ZERO WORD 3 OF CAMLIST
         LA    R3,DSN                  DSN PTR INTO
         ST    R3,CAMLIST+4                         WORD 2 OF CAMLIST
         LA    R3,SERAREA              SER PTR INTO
         ST    R3,CAMLIST+12                        WORD 4 OF CAMLIST
         LOCATE  CAMLIST               FIND DSN IN CATALOG
         LTR   R15,R15                 LOCATE SUCCESSFUL ?
         BNZ   NOTCATLG                BRANCH NO
         LA    R3,1                    DOES DATA SET SPAN MORE
         CH    R3,SERAREA                        THAN 1 VOLUME ?
         BNE   MORTHAN1                BRANCH YES
         EJECT
***********************************************************************
*   ENTRY AT LOCATE2 PUTS OUT CATLOG MESSAGE.                         *
*   ENTRY AT SETLOOP OR DROP THRU SETS UP VOLUME LOOP FOR OBTAIN      *
***********************************************************************
LOCATE2  EQU   *
         LH    R0,MSG2                 SET MESSAGE LENGTH
         MVC   OUTLINE(28),MSG2+2      MOVE TO GOTTEN AREA
         MVC   OUTLINE+22(6),SERAREA+6    MOVE IN VOL SER
         LA    R1,OUTLINE              ADDRESS OF MESSAGE
         BAL   R10,TPUT                SEND CATLOGED MESSAGE
SETLOOP  EQU   *
         LH    R8,VOLCNT               SET UP LOOP CONTROL
         LA    R7,DASDLIST             POINT TO FIRST IN TABLE
         EJECT
***********************************************************************
*  OBTAIN THE FORMAT 1 DSCB FOR THE DATA SET.  IF THE OBTAIN IS NOT   *
*  SUCCESSFUL GO ON TO NEXT VOLUME ELSE DISPLAY VOLUME ON SCREEN      *
***********************************************************************
OBTAIN1  LA    R3,0                    ZERO R3
         ST    R3,CAMLIST              ZERO WORD 1 OF CAMLIST
         MVI   CAMLIST,X'C1'           INDICATE SEARCH OPTION OF OBTAIN
         LA    R3,DSN                  DSN PTR INTO
         ST    R3,CAMLIST+4                         WORD 2 OF CAMLIST
*        LA    R3,SERAREA+6            SER PTR INTO
         ST    R7,CAMLIST+8                         WORD 3 OF CAMLIST
         LA    R3,OBTAINWK             WORK PTR INTO
         ST    R3,CAMLIST+12                         WORD 4 OF CAMLIST
         OBTAIN  CAMLIST               OBTAIN FORMAT 1 DSCB
         LTR   R15,R15                 OBTAIN SUCCESSFUL ?
         BNZ   LOOPCNTL                BRANCH NO
         CLI   DSNFLAG,X'FF'           WE DONT WANT HEADER AGAIN
         BE    SKIPMSG                 SKIP IT
         LH    R0,MSG7                 SET MESSAGE LENGTH
         LA    R1,MSG7+2               ADDRESS OF MESSAGE
         BAL   R10,TPUT                SEND HEADER MESSAGE
SKIPMSG  DS    0H
         MVI   DSNFLAG,X'FF'           INDICATE WE HAVE FOUND IT
         MVI   OUTLINE,X'40'           BLANK OUT MSG AREA
         MVC   OUTLINE+1(13),OUTLINE
         MVC   OUTLINE+4(6),0(R7)      PUT IN VOLSER
         LA    R0,14                   LOAD LENGTH OF MESSAGE
         LA    R1,OUTLINE              ADDRESS OF MESSAGE
         BAL   R10,TPUT                SEND MESSAGE
LOOPCNTL DS    0H
         LA    R7,6(R7)                NEXT ENTRY IN TABLE
         BCT   R8,OBTAIN1              IF MORE VOLUMES GO BACK
         CLI   DSNFLAG,X'00'           DID WE FIND ANY
         BNE   RETURN                  YES--WE HAVE FINISHED
         LH    R0,MSG9                 TELL USER
         LA    R1,MSG9+2
         BAL   R10,TPUT
         B     RETURN                  FINISHED
         EJECT
***********************************************************************
*  RETURN TO THE SYSTEM AFTER FREEING WORK AREA                       *
***********************************************************************
RETURN   EQU   *
         LR    R1,R13                  PTR TO GOTTEN AREA INTO R1
         L     R13,SAVE+4              RESTORE R13
         LA    R0,DEND-DSTART          GET SIZE OF DSECT
         FREEMAIN  R,LV=(R0),A=(R1)
         LM    R14,R12,12(R13)         RESTORE R14-R12
         SR    R15,R15                 ZERO R15 FOR RETURN CODE
         BR    R14                     RETURN TO INVOKER
         EJECT
***********************************************************************
*  ROUTINE TO WRITE LINES TO THE TERMINAL.                            *
***********************************************************************
TPUT     TPUT  (R1),(R0),R             WRITE MSG TO TERMINAL
         BR    R10                     RETURN TO INVOKER
         EJECT
***********************************************************************
*  ROUTINES TO ISSUE ERROR MESSAGES.                                  *
***********************************************************************
NOTCATLG LH    R0,MSG1                 MSG LENGTH INTO R0
         LA    R1,MSG1+2               PTR TO MSG INTO R1
         BAL   R10,TPUT                WRITE MSG TO TERMINAL
         B     SETLOOP                 GO SEARCH VOLUMES
MORTHAN1 LH    R0,MSG3                 MSG LENGTH INTO R0
         LA    R1,MSG3+2               PTR TO MSG INTO R1
         BAL   R10,TPUT                WRITE MSG TO TERMINAL
         B     RETURN                  GO TO RETURN
BADCATRD LH    R0,MSG4                 MSG LENGTH INTO R0
         LA    R1,MSG4+2               PTR TO MSG INTO R1
         BAL   R10,TPUT                WRITE MSG TO TERMINAL
         B     RETURN                  GO TO RETURN
UNUSDIND LH    R0,MSG5                 MSG LENGTH INTO R0
         LA    R1,MSG5+2               PTR TO MSG INTO R1
         BAL   R10,TPUT                WRITE MSG TO TERMINAL
         B     RETURN                  GO TO RETURN
NOOPERS  LH    R0,MSG6                 MSG LENGTH INTO R0
         LA    R1,MSG6+2               PTR TO MSG INTO R1
         BAL   R10,TPUT                WRITE MSG TO TERMINAL
         B     RETURN                  GO TO RETURN
         EJECT
***********************************************************************
*  INSTRUCTION THAT WHEN EXECUTED WILL CONVERT LOWER CASE LETTERS TO  *
*  UPPER CASE.                                                        *
***********************************************************************
LOWTOUP  OC    0(L0,R3),BLANKS         OBJECT OF EXECUTE INSTRUCTION
         EJECT
***********************************************************************
*  CONSTANTS.                                                         *
***********************************************************************
MSG0     DC    CL73'ENTER VOLUME SEARCH INDEX OR ENTER FOR ALL : WARNINZ
               G CAN TAKE A LONG TIME'
MSG1     DC    H'29'
         DC    CL29'DATA SET NOT FOUND IN CATALOG'
MSG2     DC    H'28'
         DC    CL28'DATA SET CATALOGED TO XXXXXX'
MSG3     DC    H'53'
         DC    CL53'DATA SET SPANS MORE THAN 1 VOLUME - UNABLE TO PROCE+
               SS'
MSG4     DC    H'21'
         DC    CL21'ERROR IN CATALOG READ'
MSG5     DC    H'12'
         DC    CL12'UNUSED INDEX'
MSG6     DC    H'40'
         DC    CL40'DATA SET NAME REQUIRED. PLEASE TRY AGAIN'
MSG7     DC    H'35'
         DC    CL35'DATA SET FOUND ON FOLLOWING VOLUMES'
MSG8     DC    H'49'
         DC    CL49'NO VOLUMES FOUND WITH THE GIVEN INDEX / SERIAL NR'
MSG9     DC    H'41'
         DC    CL41'DATA SET NOT FOUND ON REQUESTED VOLUME(S)'
MSG10    DC    C'------------------LOCDSN : LOCATE ALL OCCURRENCES OF AX
                DATA SET-----------------'
BLANKS   DC    CL80' '
         EJECT
         PRINT NOGEN
         CVT  DSECT=YES
         PRINT NOGEN
         IEFUCBOB LIST=NO
***********************************************************************
*  DSECT FOR GOTTEN STORAGE.                                          *
***********************************************************************
GOTTEN   DSECT
DSTART   EQU   *
SAVE     DS    18F
PARMWD1  DS    F
PARMWD2  DS    F
         DS    0H
OUTLINE  DS    CL57
         DS    0D
SERAREA  DS    265C
         ORG   *-249
OBTAINWK DS    148C
F3CCHHR  DS    CL5
SERENDUP DS    96C
DSNLEN   DS    H
DSN      DS    CL44
CAMLIST  DS    4F
VOLCNT   DS    H
DASDLIST DS    256CL6
DEND     EQU   *
         EJECT
***********************************************************************
*  EQUATES FOR LENGTH VALUES AND GENERAL REGISTERS.                   *
***********************************************************************
L0       EQU   0
L1       EQU   1
L2       EQU   2
L3       EQU   3
L4       EQU   4
L5       EQU   5
L6       EQU   6
L7       EQU   7
L9       EQU   9
L20      EQU   20
L43      EQU   43
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
