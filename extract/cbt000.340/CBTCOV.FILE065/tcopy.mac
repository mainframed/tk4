         PRINT NOGEN
         MACRO
         REQU  &A,&B
         LCLA  &I,&J
         AIF   (T'&A EQ 'N' AND T'&B EQ 'N').OK
         MNOTE 8,'INVALID OPERAND(S), ALL REGS EQUATED'
&J       SETA  15
         AGO   .IN
.OK      ANOP
&I       SETA  &A
&J       SETA  &B
.IN      ANOP
R&I      EQU   &I
&I       SETA  &I+1
         AIF   (&I LE &J).IN
         MEND
         SPACE 5
         MACRO
&NAME    DEFSW &SW,&NAMS,&TYPE=
         GBLC  &SWT(10),&TNAMS(80)
         GBLA  &PT,&PTX,&UNDSW,&DEFSWK
         LCLA  &PT0,&NUM
         LCLA  &PT1,&PT2,&SUB,&SWN
.*
.*         MACRO TO GENERATE SWITCH CONSTANTS AND EQUATES
.*         WITH A MAXIMUM OF 8 EQUATES PER SWITCH CONSTANT
.*
         AIF   (T'&SW EQ 'O').GEN
&NUM     SETA  1
         AIF   ('&TYPE' EQ 'I').TI
&NUM     SETA  N'&NAMS
.TI      ANOP
&PT1     SETA  1
.LOP     AIF   (&PT1 GT &PT).NFND
         AIF   ('&SWT(&PT1)' EQ '&SW').FND
&PT1     SETA  &PT1+1
         AGO   .LOP
.FND     ANOP
&PTX     SETA  &PT1
&PT1     SETA  (&PTX-1)*8+1
&PT2     SETA  &PT1+7
.LOP2    AIF   ('&TNAMS(&PT1)' EQ '').END
&PT1     SETA  &PT1+1
         AIF   (&PT1 LE &PT2).LOP2
         AGO   .ER2
.END     ANOP
&PT1     SETA  &PT1-&PT2+8
         AIF   (&PT1+&NUM GT 9).ER2
&PT0     SETA  &PT1-1
         AGO   .LOOP
.NFND    ANOP
&PT      SETA  &PT+1
         AIF   (&PT GT 10).ER1          TOO MANY SWITCH CONSTANTS
         AIF   (&NUM GT 8).ER2          TOO MANY ASSOCIATED NAMES
&PTX     SETA  &PT
.*
.*
&PT1     SETA  1
.LOOP    ANOP
.*
&SUB     SETA  &PT1+(&PTX-1)*8
&TNAMS(&SUB) SETC '&NAMS(&PT1-&PT0)'
&DEFSWK  SETA  &DEFSWK+1
.*
.*
&PT1     SETA  &PT1+1
         AIF   (&PT1-&PT0 LE &NUM).LOOP
.*         END OF EQUATING LOOP
&SWT(&PTX) SETC '&SW'
         MEXIT
.*
.*
.*
.ER1     MNOTE 8,'TOO MANY SWITCH CONSTANTS'
         MEXIT
.ER2     MNOTE 8,'TOO MANY INTERNAL SWITCHES'
         MEXIT
.GEN     AIF   (&PT EQ 0).NOGEN
         SPACE 3
         MNOTE *,'  &DEFSWK SWITHES IN &PT BYTES DEFINED'
         AIF   (&UNDSW EQ 0).NUN
&PT2     SETA  (&UNDSW+7)/8
         MNOTE *,'  &UNDSW IMPLICIT SWITCHES IN &PT2 BYTES DEFINED'
         AIF   ('&TYPE' EQ 'I').NUN
         MNOTE 4,'*** IMPLICITLY DEFINED SWITHES'
.NUN     ANOP
&PT2     SETA  1
         AIF   (T'&NAME EQ 'O').LOOP1
&NAME    DS    0XL&PT
.LOOP1   ANOP
&SWN     SETA  1
&PT1     SETA  1
         SPACE 3
&SWT(&PT2)  DC X'00'
.LOOP2   ANOP
&SUB     SETA  &PT1+(&PT2-1)*8
         AIF   ('&TNAMS(&SUB)' EQ '').DUN
&TNAMS(&SUB)  EQU  &SWN
&SWN     SETA  &SWN*2
&PT1     SETA  &PT1+1
         AIF   (&PT1 LE 8).LOOP2
.DUN     ANOP
&PT2     SETA  &PT2+1
         AIF   (&PT2 LE &PT).LOOP1
         SPACE 3
         MEXIT
.NOGEN   MNOTE *,'***  NO SWITCHES TO BE GENERATED'
         SPACE 2
         MEND
         SPACE 5
         MACRO
&NAME    CNSRV &R,&TYPE
         LCLA  &TST1
         LCLC  &RR
&RR      SETC '&R'                SET &RR
         AIF   ('&TYPE' EQ 'R').B7
         AIF   (K'&R NE 0).B1
         MNOTE *,'***  REGISTER 13 ASSUMED'
         AGO   .B2
.*
.B1      AIF   (&R NE 13).B3
         AGO   .B2
.*
.B3      AIF   ((&R NE 0) AND (&R NE 14) ).B4
.*
         MNOTE 4,'*** REGISTER IS 0 OR 14,  13 ASSUMED'
.B2      ANOP
&TST1    SETA  1                  FORCE R13
.*
.B4      DS    0H
         USING *,15
&NAME    SAVE (14,12),T,*
.*
         AIF   ('&TYPE' EQ 'R' ).B9
         AIF   ('&RR' EQ '15' OR &TST1 EQ 1).B5
.*
*
         BALR  &RR,0      ESTABLISH BASE REGISTER
         USING *,&RR
         DROP  15
.B5      CNOP  2,4  ALIGNMENT FOR SAVE AREA
         ST    13,*+22+4   ESTABLISH REVERSE CHAIN IN THIS SAVE AREA
         LR    14,13
         LA    13,*+16
.*                                TEST FOR R13 OR NOT
         AIF   (&TST1 EQ 0).B6    &TST1 NOT SET, NOT R13
.*
         DROP  15
         USING *+12,13            ESTABLISH BASE REGISTER
.*
.B6      ST    13,8(0,14) ESTABLISH FWD CHAIN IN PREVIOUS SAVE AREA
         L     14,12(0,14)  RESTORE REGISTER 14
         B     *+72+4  BRANCH AROUND SAVE AREA
         DC    18F'0'      SAVE AREA
*
         MEXIT
.*
.*             RE-ENTRANT CODING
.*
.B7      AIF   (K'&R NE 0).B8
         MNOTE *,'*** REGISTER 12 ASSUMED'
&RR      SETC  '12'
         AGO   .B4
.*
.B8      AIF   ( (&R GT 1) AND (&R NE 14) AND (&R NE 13) ).B4
         MNOTE 4,'*** REGISTER IS 0,1,13, OR 14;  12 ASSUMED'
&RR      SETC  '12'
         AGO   .B4
.*
*              GET SPACE FOR SAVE AREA
.B9      GETMAIN  R,LV=72
*
         LR    14,13   SAVE ADDRESS OF PREVIOUS SAVE AREA
         ST    13,4(0,1) ESTABLISH REVERSE CHAIN IN THIS SAVE AREA
         ST    1,8(0,13)  ESTABLISH FWD CHAIN IN PREVIOUS SAVE AREA
         LR    13,1      POINT TO NEW SAVE AREA
         AIF   (&RR EQ 15).B10
         BALR  &RR,0        ESTABLISH BASE REGISTER
         USING *,&RR
         DROP  15
.B10     LM    14,1,12(14)  RESTORE 14,15,0,1
*
         MEND
         SPACE 5
         MACRO
&NAME    BOPEN &DCB,&ADR,&DRSDEEK=1
&NAME    IHBINNRA &DCB
         TM    48(1),X'10' .            TEST IF DCB OPEN
         AIF   ('&ADR' EQ '&ADR(1)').NR
         BCR   &DRSDEEK,&ADR(1)
         MEXIT
.NR      BC    &DRSDEEK,&ADR
         MEND
         SPACE 5
         MACRO
&NAME    BNOPEN &DCB,&ADR
&NAME    BOPEN &DCB,&ADR,DRSDEEK=8
         MEND
         SPACE 5
         MACRO
&NAME    SWT   &OP,&SW
         GBLA  &UNDSW
         GBLC  &SWT(10),&TNAMS(80)
         GBLC  &TEMPOX
         GBLA  &TEMPCNT
         GBLA  &PT,&PTX
         GBLB  &BADSW
         LCLC  &SWITCH
         LCLC  &OPC,&SG,&OFF
         LCLA  &PT1,&PT2,&SUB,&SWPT,&OLD
         LCLB  &SUBSW
         ACTR  1000
.*
.*         THE FOLLOWING ROUTINE SETS UP THE OP-CODE, AND SIGN CHAR.
.*         FOR THE OUTPUT.   "OI,XI,TM,NI", SIGN="+,-"
.*
&SG      SETC  '+'
         AIF   ('&OP' NE 'OFF').N1
&OFF     SETC  'X''FF''-'
&SG      SETC  '-'
&OPC     SETC  'NI'
         AGO   .OPEX
.N1      AIF   ('&OP' NE 'ON').N2
&OPC     SETC  'OI'
         AGO   .OPEX
.N2      AIF   ('&OP' NE 'FLIP').N3
&OPC     SETC  'XI'
         AGO   .OPEX
.N3      AIF   ('&OP' NE 'TEST').ER2
&OPC     SETC  'TM'
         AGO   .OPEX
.ER2     SPACE 1
         MNOTE 4,'*** UNDEFINED OPTION, ''TEST'' USED'
&OPC     SETC  'TM'
.OPEX    ANOP
.*
.*
&PT2     SETA  &PT*8
         AIF   (&PT EQ 0).ER1           NO SWITCHES DEFINED
.*
&SUB     SETA  1
.LOOP1   ANOP                           COME HERE FOR EACH SWITCH
&PT1     SETA  1
.LOOP    ANOP                           COME HERE DURING SEARCH LOOP
         AIF   ('&SW(&SUB)' EQ '&TNAMS(&PT1)').FND
&PT1     SETA  &PT1+1
         AIF   (&PT1 LE &PT2).LOOP
         AIF   (&TEMPCNT GT 0 AND &TEMPCNT LT 8).TOK
&TEMPCNT SETA  0
&TEMPOX  SETC  'TSWT'.'&SYSNDX'
.TOK     ANOP
&TEMPCNT SETA  &TEMPCNT+1
&SWITCH  SETC  '&SW(&SUB)'
         DEFSW &TEMPOX,&SWITCH,TYPE=I
&SWPT    SETA  &PTX
&UNDSW   SETA  &UNDSW+1
         AGO   .UND
.FND     ANOP
&SWPT    SETA  (&PT1+7)/8
.UND     ANOP
         AIF   (&SUBSW).SINGLE
         AIF   (&OLD NE 0).NFRST        IF -0-, THEN FIRST TIME THRU
&OLD     SETA  &SWPT
         AGO   .NXT
.NFRST   AIF   (&SWPT EQ &OLD).NXT
         SPACE 1
         MNOTE *,'*** SWITHCES NOT FROM SAME GROUP'
.INDIV   MNOTE *,'*** OUTPUT INDIVIDUAL INSTRUCTIONS'
         AIF   ('&OPC' NE 'TM').SP  OK IF NOT SWT TEST,.....
         MNOTE 8,'*** "TEST" USED, ERROR WILL OCCUR'
.SP      SPACE 1
&SUBSW   SETB  1
&SUB     SETA  &SUB-1                   DON-T OUTPUT LAST SWITCH
         AGO   .OUT                     GO OUTPUT ALL PREVIOUS SWITHCES
.NXT     ANOP
         AIF   (&SUB EQ N'&SW).OUT      FINISHED, OUTPUT ALL SWITHCES
&SUB     SETA  &SUB+1
         AIF   (&SUB LE 8).LOOP1
         SPACE 1
         MNOTE *,'*** MORE THAN 8 SWITHCES'
         AGO   .INDIV
.*
.SINGLE  ANOP
         &OPC  &SWT(&SWPT),&OFF.&SW(&SUB)
.AAA     ANOP
&SUB     SETA  &SUB+1
         AIF   (&SUB LE N'&SW).LOOP1
         MEXIT
.*
.*
.*         ROUTINE TO OUTPUT ARRAY SWITCH INSTRUCTIONS
.*
.OUT     ANOP
         AIF   (&SUB EQ 1).ONE
         AIF   (&SUB EQ 2).TWO
         AIF   (&SUB EQ 3).THREE
         AIF   (&SUB EQ 4).FOUR
         AIF   (&SUB EQ 5).FIVE
         AIF   (&SUB EQ 6).SIX
         AIF   (&SUB EQ 7).SEVEN
.EIGHT   ANOP
&NAME    &OPC  &SWT(&OLD),&OFF&SW(1)&SG&SW(2)&SG&SW(3)&SG&SW(4)&SG&SW(5X
               )&SG&SW(6)&SG&SW(7)&SG&SW(8)
         AGO   .EXIT
.SEVEN   ANOP
&NAME    &OPC  &SWT(&OLD),&OFF&SW(1)&SG&SW(2)&SG&SW(3)&SG&SW(4)&SG&SW(5X
               )&SG&SW(6)&SG&SW(7)
         AGO   .EXIT
.SIX     ANOP
&NAME    &OPC  &SWT(&OLD),&OFF&SW(1)&SG&SW(2)&SG&SW(3)&SG&SW(4)&SG&SW(5X
               )&SG&SW(6)
         AGO   .EXIT
.FIVE    ANOP
&NAME    &OPC  &SWT(&OLD),&OFF&SW(1)&SG&SW(2)&SG&SW(3)&SG&SW(4)&SG&SW(5X
               )
         AGO   .EXIT
.FOUR    ANOP
&NAME    &OPC  &SWT(&OLD),&OFF&SW(1)&SG&SW(2)&SG&SW(3)&SG&SW(4)
         AGO   .EXIT
.THREE   ANOP
&NAME    &OPC  &SWT(&OLD),&OFF&SW(1)&SG&SW(2)&SG&SW(3)
         AGO   .EXIT
.TWO     ANOP
&NAME    &OPC  &SWT(&OLD),&OFF&SW(1)&SG&SW(2)
         AGO   .EXIT
.ONE     ANOP
&NAME    &OPC  &SWT(&OLD),&OFF&SW(1)
.*
.EXIT    AIF   (&SUBSW).EXITS
         MEXIT
.EXITS   ANOP
&SUB     SETA  &SUB+1
         AGO   .SINGLE
.ER1     SPACE 1
         MNOTE 8,'*** NO SWITCHES DEFINED YET'
         AIF   (&BADSW).ER1A
         MNOTE *,'   NOTE THAT ALL SWITCHES MUST BE DEFINED IN A'
         MNOTE *,'   ''DEFSW'' MACRO AT START OF PROGRAM, AND DUMPED'
         MNOTE *,'   WHERE DESIRED BY ''DEFSW'' WITH NO OPERANDS'
         SPACE 1
&BADSW   SETB  1
.ER1A    ANOP
&NAME    NOP   0
         MEND
         SPACE 5
         MACRO
&NAME    PRINTA &ARG,&ARG2,&ARGL
         GBLB  &IDSVCSW              INVERSE INTERNAL &DSVCSW
         GBLB  &DRSEROR
         LCLA  &PRINTS
         LCLC  &AB,&EX,&RET
         LCLC  &NAM
         LCLA  &CNT,&QUOTS,&KNT,&PT
         LCLC  &LQ
         LCLA  &BRKNT
&PRINTS  SETA  0
&EX      SETC  'PRINTA'
&LQ      SETC  'L'''
         AIF   (T'&ARG EQ 'O').NOOP
         AIF   ('&ARG'(1,1) NE '''').ER1
&CNT     SETA  K'&ARG-2
&KNT     SETA  &CNT
&PT      SETA  2
.B2      AIF   ('&ARG'(&PT,1) NE '''').B1
&QUOTS   SETA  &QUOTS+1
.B1      ANOP
&PT      SETA  &PT+1
&CNT     SETA  &CNT-1
         AIF   (&CNT NE 0).B2
&QUOTS   SETA  &QUOTS/2
&KNT     SETA  &KNT-&QUOTS
         AIF   (NOT &IDSVCSW).ND1
&NAME    L     15,=V(ERBUF) -        ADDRESS OF OUTPUT BUFFER
         BCTR  15,0
         MVC   &PRINTS.(&KNT,15),=C&ARG
         AGO   .D1
.ND1     ANOP
         AIF   (&KNT EQ 1).MOVE1
         AIF   (&DRSEROR).INL1
&NAME    MVC   ERBUF-1+&PRINTS.(&KNT),=C&ARG
         AGO   .INL1A
.INL1    ANOP
&NAME    MVC   ERBUF-1+&PRINTS.(&KNT),*+10
&BRKNT   SETA  ((&KNT+1)/2)*2
         B     *+4+&BRKNT
         DC    C&ARG
.INL1A   ANOP
         AGO   .MOVEM1
.MOVE1   ANOP
&NAME    MVI   ERBUF-1+&PRINTS,C&ARG
.MOVEM1  ANOP
.D1      ANOP
         AIF   (T'&ARG2 EQ 'O').OLDV
         AIF   (T'&ARGL EQ 'O').NOLEN
         AIF   (NOT &IDSVCSW).ND2
         MVC   &KNT+1(&ARGL,15),&ARG2
         AGO   .D2
.ND2     MVC   ERBUF+1+&KNT.(&ARGL),&ARG2
.D2      AGO   .OLDV
.NOLEN   AIF   (NOT &IDSVCSW).ND3
         MVC   &KNT+1(&LQ&ARG2,15),&ARG2
         AGO   .D3
.ND3     MVC   ERBUF+1+&KNT.(&LQ&ARG2),&ARG2
.D3      ANOP
.OLDV    ANOP
         AIF   (NOT &IDSVCSW).ND4
&NAM     L     15,=V(&EX) -          ADDRESS OF ROUTINE
&EX      SETC  '0(0,15)'
&NAM     SETC  ''
.ND4     ANOP
&NAM     BAL   14,&EX
         MEXIT
.ER1     SPACE 1
         MNOTE 4,'*** ILLEGAL OPERAND TO PRINTA(F) - &ARG'
         MNOTE *,'*** NO OPERAND ASSUMED'
         SPACE 1
.NOOP    ANOP
&NAM     SETC  '&NAME'
         AGO   .OLDV
         SPACE 5
         MEND
         SPACE 5
         MACRO
&NAME    ERROR &R,&ARG,&ARG2,&ARGL
         GBLB  &IDSVCSW                 INVERSE INTERNAL &DSVCSW
         GBLB  &DRSEROR
         LCLC  &AB,&EX,&RET
         LCLA  &CNT,&QUOTS,&KNT,&PT
         LCLC  &LQ
         LCLA  &BRKNT
         AIF   ('&R' EQ 'INLINE').INL
         AIF   ('&R' EQ 'NINLINE').NINL
&LQ      SETC  'L'''
         AIF   ('&ARG'(1,1) NE '''').B4
&CNT     SETA  K'&ARG-2
&KNT     SETA  &CNT
&PT      SETA  2
.B2      AIF   ('&ARG'(&PT,1) NE '''').B1
&QUOTS   SETA  &QUOTS+1
.B1      ANOP
&PT      SETA  &PT+1
&CNT     SETA  &CNT-1
         AIF   (&CNT NE 0).B2
&QUOTS   SETA  &QUOTS/2
&KNT     SETA  &KNT-&QUOTS
         AIF   (NOT &IDSVCSW).ND1
&NAME    L     15,=V(ERBUF) -           ADDRESS OF THE OUTPUT BUFFER
         MVC   9(&KNT,15),=C&ARG
         AGO   .D1
.ND1     ANOP
         AIF   (&DRSEROR OR '&R(3)' EQ 'I').INLA
&NAME    MVC   ERBUF+9(&KNT),=C&ARG
         AGO   .INL1
.INLA    ANOP
&NAME    MVC   ERBUF+9(&KNT),*+10
&BRKNT   SETA  ((&KNT+1)/2)*2
         B     *+4+&BRKNT
         DC    C&ARG
.INL1    ANOP
.D1      ANOP
         AIF   (T'&ARG2 EQ 'O').OLDV
         AIF   (T'&ARGL EQ 'O').NOLEN
         AIF   (NOT &IDSVCSW).ND2
         MVC   &KNT+10(&ARGL,15),&ARG2
         AGO   .D2
.ND2     MVC   ERBUF+10+&KNT.(&ARGL),&ARG2
.D2      AGO   .OLDV
.NOLEN   AIF   (NOT &IDSVCSW).ND3
         MVC   &KNT+10(&LQ&ARG2,15),&ARG2
         AGO   .D3
.ND3     MVC   ERBUF+10+&KNT.(&LQ&ARG2),&ARG2
.D3      ANOP
.OLDV    ANOP
&EX      SETC  'EPRINT+4'
&RET     SETC  'EPRINT+8'
&AB      SETC  'EPRINT'
         AIF   (NOT &IDSVCSW).ND4
&EX      SETC  '4(0,15)'
&RET     SETC  '8(0,15)'
&AB      SETC  '0(0,15)'
         L     15,=V(EPRINT) -          ADDRESS OF PUT ROUTINE
.ND4     AIF   ('&R(1)' NE '').OPT
.EX      BAL   14,&EX -                 ERROR WITH NORMAL EXIT
         AGO   .CODE
.OPT     AIF   ('&R(1)' EQ 'E').EX
         AIF   ('&R(1)' EQ 'R').RET
         AIF   ('&R(1)' EQ 'A').AB
         MNOTE 2,'ILLEGAL CODE CHCARACTER, ''E'' ASSUMED'
         AGO   .EX
.RET     BAL   14,&RET -                RETURN
         AGO   .CODE
.AB      BAL   14,&AB -                 ABEND
.CODE    AIF   ('&R(2)' EQ '').COD      OUTPUT '0'
         DC    AL1(&R(2))
         MEXIT
.COD     DC    AL1(0)
         MEXIT
.INL     ANOP
&DRSEROR SETB  1
         MEXIT
.NINL    ANOP
&DRSEROR SETB  0
         MEXIT
.B4      MNOTE 4,'ILLEGAL ARGUMENT TO ERROR - &ARG'
         MEND
         SPACE 5
          MACRO
&NAME    GOBCK &RC,&TYPE
         LCLB  &SWITCH
         LCLC &RCRC
&RCRC   SETC   '0'                INITIALIZE &RCRC
.*
&NAME    L     13,4(0,13) -       RESTORE REGISTER 13
.*
         AIF   ('&TYPE' NE 'R').A02
         AIF   ('&RC' NE '(15)' ).A01
.*
&SWITCH  SETB  1
         ST    15,16(0,13)  STORE REGISTER 15 IN SAVE AREA
.*             RE-ENTRANT RELEASE OF SAVE AREA
*
.A01     L     1,8(0,13) POINT TO FORWARD SAVE AREA AND FREE IT
         FREEMAIN  R,LV=72,A=(1)     FREE SAVE AREA
*
.A02     AIF   (K'&RC EQ 0).A1    OPERAND OMITTED, ZERO OK
&RCRC    SETC '&RC'               RESET &RCRC
.*
         AIF   ('&RC'(1,1) EQ '(' AND NOT &SWITCH).A2  OPERAND (15) ?
.A1      ANOP                     NO, COMPILE TYPE 1
         LM    14,12,12(13) -     RESTORE THE REGISTERS
         MVI   12(13),X'FF' -     SET RETURN INDICATION
         AIF   (&SWITCH).A15
         LA   15,&RCRC  -             LOAD RETURN CODE
.A15     BR    14 -               RETURN
*
         MEXIT
.*             COMPILE TYPE 2 GOBCK
.A2      AIF   ('&RC' EQ '(15)' ).A3
         MNOTE 8,'***   INVALID REGISTER SPECIFICATION, MUST BE (15)'
.A3      ANOP
         L     14,12(0,13) -      RESTORE REGISTER 14
         LM    0,12,20(13) -      RESTORE REGISTERS 0-12
         MVI   12(13),X'FF' -     SET RETURN INDICATION
         BR    14 -               RETURN
*
         MEND
         SPACE 5
         MACRO
&NAME    PRINTF &ARG,&ARG2,&ARGL
         GBLB  &IDSVCSW
         GBLB  &DRSEROR
         GBLA  &PRINTFS
         LCLA  &PRINTS
         LCLC  &AB,&EX,&RET
         LCLC  &NAM,&LQ
         LCLA  &CNT,&QUOTS,&KNT,&PT
         LCLA  &BRKNT
&PRINTS  SETA  &PRINTFS
&EX      SETC  'PRINTF'
&LQ      SETC  'L'''
         AIF   (T'&ARG EQ 'O').NOOP
         AIF   ('&ARG'(1,1) NE '''').ER1
&CNT     SETA  K'&ARG-2
&KNT     SETA  &CNT
&PT      SETA  2
.B2      AIF   ('&ARG'(&PT,1) NE '''').B1
&QUOTS   SETA  &QUOTS+1
.B1      ANOP
&PT      SETA  &PT+1
&CNT     SETA  &CNT-1
         AIF   (&CNT NE 0).B2
&QUOTS   SETA  &QUOTS/2
&KNT     SETA  &KNT-&QUOTS
         AIF   (NOT &IDSVCSW).ND1
&NAME    L     15,=V(ERBUF) -        ADDRESS OF OUTPUT BUFFER
         BCTR  15,0
         MVC   &PRINTS.(&KNT,15),=C&ARG
         AGO   .D1
.ND1     ANOP
         AIF   (&KNT EQ 1).MOVE1
         AIF   (&DRSEROR).INL1
&NAME    MVC   ERBUF-1+&PRINTS.(&KNT),=C&ARG
         AGO   .INL1A
.INL1    ANOP
&NAME    MVC   ERBUF-1+&PRINTS.(&KNT),*+10
&BRKNT   SETA  ((&KNT+1)/2)*2
         B     *+4+&BRKNT
         DC    C&ARG
.INL1A   ANOP
         AGO   .MOVEM1
.MOVE1   ANOP
&NAME    MVI   ERBUF-1+&PRINTS,C&ARG
.MOVEM1  ANOP
.D1      ANOP
         AIF   (T'&ARG2 EQ 'O').OLDV
         AIF   (T'&ARGL EQ 'O').NOLEN
         AIF   (NOT &IDSVCSW).ND2
         MVC   &KNT+1(&ARGL,15),&ARG2
         AGO   .D2
.ND2     MVC   ERBUF+1+&KNT.(&ARGL),&ARG2
.D2      AGO   .OLDV
.NOLEN   AIF   (NOT &IDSVCSW).ND3
         MVC   &KNT+1(&LQ&ARG2,15),&ARG2
         AGO   .D3
.ND3     MVC   ERBUF+1+&KNT.(&LQ&ARG2),&ARG2
.D3      ANOP
.OLDV    ANOP
         AIF   (NOT &IDSVCSW).ND4
&NAM     L     15,=V(&EX) -          ADDRESS OF ROUTINE
&EX      SETC  '0(0,15)'
&NAM     SETC  ''
.ND4     ANOP
&NAM     BAL   14,&EX
         MEXIT
.ER1     SPACE 1
         MNOTE 4,'*** ILLEGAL OPERAND TO PRINTA(F) - &ARG'
         MNOTE *,'*** NO OPERAND ASSUMED'
         SPACE 1
.NOOP    ANOP
&NAM     SETC  '&NAME'
         AGO   .OLDV
         SPACE 5
         MEND
         SPACE 5
         MACRO
&NAME    MINIT &CSPEC=0,&LSPEC=0,&CODSPEC=0,&ADSPEC=0
         GBLA  &CH,&L,&CO,&AD
&CH      SETA  &CSPEC
&L       SETA  &LSPEC
&CO      SETA  &CODSPEC
&AD      SETA  &ADSPEC
         SPACE 3
         MNOTE *,'      START OF SEQUENCED TABLE'
         SPACE 1
&NAME    DS    0F
         MEND
         SPACE 5
         MACRO
&NAME    MNEM  &ARG,&CODE
         GBLA  &CH,&L,&CO,&AD
         GBLC  &NEW01,&OLD01
         LCLC  &NW
         LCLA  &LEN
         AIF   (T'&ARG EQ 'O').END
&LEN     SETA  K'&ARG-2
&NEW01   SETC  '&ARG'(2,&LEN)
&NW      SETC  '&NEW01'.'        '
         AIF   ('&NW' GT '&OLD01').OK
         SPACE 1
         MNOTE 4,'*** OUT OF SEQUENCE'
         SPACE 1
.OK      ANOP
&OLD01   SETC  '&NW'
&NAME    DC    CL&CH&ARG
         AIF   (&L EQ 0).A1
         DC    AL&L.(&LEN)
.A1      AIF   (&CO EQ 0).A2
         DC    AL&CO.(&CODE)
.A2      AIF   (&AD EQ 0).A3
         DC    AL&AD.(&NEW01)
.A3      MEXIT
.END     DC    &CH.X'FF'
&OLD01   SETC  ' '
         SPACE 1
         MNOTE *,'      END OF SEQUENCED TABLE'
         SPACE 3
         MEND
         SPACE 5
         MACRO
&NAM     DCBE  &LRECL=,&BLKSIZE=,&BLKFACT=,&BUFNO=,&RECFM=,&CHECK=,    X
               &REG=1,&TYPE=CLOSED,&ERROR=,&EXLST=,&CSECT=,&XRECFM=
         GBLA  &RCFMDRS
         GBLB  &FFMSW,&VFMSW,&BFMSW
         LCLC  &LABL3,&LABL4,&LABL5,&LABL6,&LABL,&LABL2
         LCLC  &LABL7,&LABL8,&LABL9,&NAME,&RC,&CSCT
         LCLB  &ERSW,&EXSW
         LCLA  &N,&P,&R,&X
         SPACE 2
&LABL    SETC  'RCFM'.'&SYSNDX'
&CSCT    SETC  '&SYSECT'
&FFMSW   SETB  0
&VFMSW   SETB  0
&BFMSW   SETB  0
&LABL2   SETC  'ERRX'.'&SYSNDX'
&NAME    SETC  '&NAM'
&ERSW    SETB  (T'&ERROR NE 'O')
&EXSW    SETB  (T'&EXLST NE 'O')
         AIF   (T'&CSECT EQ 'O').NCS
&CSECT   CSECT
.NCS     AIF   ('&TYPE' NE 'CLOSED').NCK1
         AIF   (NOT &ERSW).OKA
         MNOTE 4,'*** ERROR= - IGNORED FOR TYPE=CLOSED'
&ERSW    SETB  1
         AGO   .OKA
.NCK1    AIF   (NOT &EXSW).OKA          OK IF EXLST NOT SPECIFIED
         MNOTE 4,'*** EXLST= IGNORED FOR TYPE=OPEN'
&EXSW    SETB  1
.OKA     AIF   (T'&NAM EQ 'O').NNM
         AIF   (NOT &EXSW).NEXL
.EXL     DS    0F
&EXLST   DC    X'85',AL3(&NAME) .       EXIT LIST
.NEXL    AIF   ('&TYPE' EQ 'OPEN').NTP  BR. IF NOT CLOSED
         USING &NAME,15
.NTP     ANOP
&NAME    DS    0H
         AGO   .OKN
.NNM     AIF   ('&TYPE' EQ 'OPEN').OKN
         AIF   (&EXSW).EXOK
         MNOTE 12,'*** NO LABEL SPECIFIED FOR TYPE=CLOSED, TERMINATED'
         MEXIT
.EXOK    ANOP
&NAME    SETC  'EXLB'.'&SYSNDX'
         AGO   .EXL
.OKN     SR    0,0 .                    ZERO INTO GR-0
&R       SETA  2
         AIF   ('&R' NE '&REG').OK
&R       SETA  3
.OK      AIF   ('&TYPE' NE 'OPEN').NSR
&LABL3   SETC  'RSAV'.'&SYSNDX'
         ST    &R,&LABL3
.NSR     AIF   (T'&RECFM EQ 'O').NRECFM
         DRSRECFM ,TYPE=OK              CLEAR OUT GLOBAL SWITCHES
*
*          RECFM =   HANDLER
*
&N       SETA  N'&RECFM
         AIF   (&N LT 2 AND '&XRECFM' EQ '').NX2
&FFMSW   SETB  1
&VFMSW   SETB  1
&BFMSW   SETB  1
         AIF   ('&XRECFM' EQ '').NX2
&RC      SETC  ''
&X       SETA  1
.LOPX    AIF   (&X GT N'&XRECFM).NX
&RC      SETC  '&RC'.'&XRECFM(&X)'
&X       SETA  &X+1
         AGO   .LOPX
.NX      DRSRECFM &RC,TYPE=X
&X       SETA  &RCFMDRS
.NX2     DRSRECFM &RECFM(1)
         LA    &R,&RCFMDRS .                  OBTAIN DEFAULT RECFM
         CLI   36(&REG),0 .                COMPARE RECFM TO ZERO
         AIF   ('&XRECFM' EQ '' AND N'&RECFM EQ 1).SPEC
.CHK1    BE    &LABL .               BR. IF RECFM IS ZERO
         IC    &R,36(0,&REG) .              SAVE FOR FUTURE USE
&P       SETA  1
         AIF   ('&XRECFM' EQ '').LOP
         NI    36(&REG),X'FF'-&X .        REMOVE EXTRA TYPES
         AGO   .LOP
.SPEC    BNE   &LABL+4 .             BR. IF RECFM NOT ZERO
         AGO   .CRYON
.LOPP    BE    &LABL .               BR. IF RECFM OK
.LOP     DRSRECFM &RECFM(&P)            GET RECFM IN NUMERICS
         CLI   36(&REG),&RCFMDRS .             SEE IF ALLOWABLE RECFM
&P       SETA  &P+1
         AIF   (&P LE &N).LOPP
         BNE   &LABL2 .               BR. IF RECFM NOT OK
.CRYON   ANOP
&LABL    STC   &R,36(0,&REG) .              STORE RECFM
.NRECFM  AIF   ('&XRECFM' EQ '' OR '&RECFM' NE '').NXRCFM
         MNOTE 4,'*** XRECFM= SPECIFIED WITH NO RECFM PARAMTER'
.NXRCFM  AIF   ('&LRECL' EQ '').NLRECL
*
*          LRECL=   HANDLER
*
         AIF   (T'&LRECL(1) NE 'O').LOK     BR. IF LRECL DEFAULT SPEC.
         MNOTE 4,'*** LRECL DEFAULT NOT SPECIFIED'
         AGO   .LOK2
.LOK     CH    0,82(0,&REG)
         AIF   ('&LRECL(1)'(1,1) EQ '(').LR
         BNE   *+12 .                   BR. IF LRECL NOT ZERO
&LABL4   SETC  'LRCL'.'&SYSNDX'
         LH    &R,&LABL4 .             GET DEFAULT LRECL
         STH   &R,82(0,&REG) .              STORE INTO LRECL
         AGO   .LOK2
.LR      BNE   *+8 .                    BR. IF LRECL NOT ZERO
&RC      SETC  '&LRECL(1)'(2,K'&LRECL(1)-2)
         STH   &RC,82(0,&REG) .              STORE DEFAULT LRECL
.LOK2    AIF   (T'&LRECL(2) EQ 'O').NLRECL
         AIF   ('&LRECL(2)'(1,1) EQ '(').LMR
&LABL9   SETC  'LRLM'.'&SYSNDX'
         LH    &R,&LABL9 .             GET MAXIMUM LRECL
         CH    &R,82(0,&REG) .              COMPARE MAX. TO LRECL
         AGO   .LMRN
.LMR     ANOP
&RC      SETC  '&LRECL(2)'(2,K'&LRECL(2)-2)
         CH    &RC,82(0,&REG) .              COMPARE MAX. TO LRECL
.LMRN    BL    &LABL2 .               BR. IF LRECL TOO HIGH
.NLRECL  AIF   (T'&BLKFACT EQ 'O').NFCT
*
*          BLKFACT=    HANDLER
*
&LABL8   SETC  'BFCT'.'&SYSNDX'
         CH    0,62(0,&REG) .              COMPARE BLKSIZE TO ZERO
         AIF   (&FFMSW).SML
         BNE   *+32 .                   BR. IF BLKSIZE NOT ZERO
         AGO   .LRG
.SML     BNE   *+20 .                   BR. IF BLKSIZE NOT ZERO
.LRG     LH    &R,82(0,&REG) .              OBTAIN LRECL
         MH    &R,&LABL8 .             MULTIPLY BY BLOCKING FACTOR
         AIF   (&FFMSW).NOTV
         TM    36(&REG),B'10000000' .      TEST IT RECFM='V'
         BO    *+8 .                    BR. IF IT IS NOT 'V'
         LA    &R,4(0,&R) .               ADD '4' FOR BLOCKED V FORMAT
.NOTV    STH   &R,62(0,&REG) .              INSERT CALCULATED BLKSIZE
         OI    36(&REG),B'00100000' .      FORCE BLOCKING IF BLKFACT
.NFCT    AIF   (T'&BLKFACT NE 'O' AND '&BLKSIZE' EQ '').NBLK
*
*          BLKSIZE=   HANDLER
*
         AIF   (T'&BLKSIZE(1) NE 'O' OR T'&BLKFACT NE 'O').DOBLK
.DBLK1   CH    0,62(0,&REG) .              COMPARE BLKSIZE TO ZERO
         BNE   *+12 .                   BR. IF NOT ZERO
         LH    &R,82(0,&REG) .              OBTAIN LRECL
         STH   &R,62(0,&REG) .              STORE IN BLKSIZE
         AGO   .NBLK1
.DOBLK   AIF   (T'&BLKSIZE(1) EQ 'O').NBLK1
         AIF   (T'&BLKFACT EQ 'O').NBF1
         MNOTE 4,'*** BLKSIZE DEFAULT IGNORED WHEN BLKFACT SPECIFIED'
         AGO   .NBLK1
.NBF1    CH    0,62(0,&REG) .              COMPARE BLKSIZE TO ZERO
         AIF   ('&BLKSIZE(1)'(1,1) EQ '(').BR
         BNE   *+12 .                   BR. IF BLKSIZE NOT ZERO
&LABL5   SETC  'BLKZ'.'&SYSNDX'
         LH    &R,&LABL5 .             GET DEFAULT BLKSIZE
         STH   &R,62(0,&REG) .              STORE DEFAULT BLKSIZE
         AGO   .NBLK1
.BR      BNE   *+8 .                    BR. IF BLKSIZE NOT ZERO
&RC      SETC  '&BLKSIZE(1)'(2,K'&BLKSIZE(2)-2)
         STH   &RC,62(0,&REG) .              STORE DEFAULT BLKSIZE
.NBLK1   AIF   (T'&BLKSIZE(2) EQ 'O').NBLK
         AIF   ('&BLKSIZE(2)'(1,1) EQ '(').BMR
&LABL6   SETC  'BLKC'.'&SYSNDX'
         LH    0,&LABL6 .             GET MAXIMUM BLKSIZE
         CH    0,62(0,&REG) .              COMPARE BLKSIZE TO MAX.
         AGO   .BMRN
.BMR     ANOP
&RC      SETC  '&BLKSIZE(2)'(2,K'&BLKSIZE(2)-2)
         CH    &RC,62(0,&REG) .              COMPARE BLKSIZE TO MAX.
.BMRN    BL    &LABL2 .               BR. IF BLKSIZE TOO LARGE
.NBLK    AIF   ('&BUFNO' EQ '').NBUF
*
*          BUFNO=   HANDLER
*
         AIF   (T'&BUFNO(1) EQ 'O').BFRN
         CLI   20(&REG),0 .                COMPARE BUFNO TO ZERO
         BNE   *+8 .                    BR. IF BUFNO IS ZERO
         AIF   ('&BUFNO(1)'(1,1) EQ '(').BFR
         MVI   20(&REG),&BUFNO(1) .               MOVE IN DEFAULT BUFNO
         AGO   .BFRN
.BFR     ANOP
&RC      SETC  '&BUFNO(1)'(2,K'&BUFNO(1)-2)
         STC   &RC,20(0,&REG) .              STORE DEFAULT BUFNO
.BFRN    AIF   (T'&BUFNO(2) EQ 'O').NBUF
         AIF   ('&BUFNO(2)'(1,1) EQ '(').BFMR
         CLI   20(&REG),&BUFNO(2) .               COMPARE TO MAX. BUFNO
         BNH   *+8 .                    BR. IF BUFNO TOO BIG
         MVI   20(&REG),&BUFNO(2) .               MOVE IN MAX. BUFNO
         AGO   .NBUF
.BFMR    SR    0,0
         IC    0,20(0,&REG) .              GET SPECIFIED BUFNO
&RC      SETC  '&BUFNO(2)'(2,K'&BUFNO(2)-2)
         CR    &RC,0 .                    COMPARE TO MAX. BUFNO
         BNH   *+8 .                    BR. IF BUFNO NOT TOO HIGH
         STC   &RC,20(0,&REG) .              STORE MAX. BUFNO
.NBUF    AIF   ('&CHECK' EQ '').NVC      BR. IF NOC HECK SPECIFIED
&LABL2   SETC  'ERRX'.'&SYSNDX'
         AIF   ('&CHECK(1)' NE 'F' AND '&CHECK' NE 'YES' OR &VFMSW).NFC
*
*          CROSS CHECK 'F' FORMAT
*
         AIF   (&FFMSW).ALB2
         TM    36(&REG),B'01000000' .      TEST FOR RECFM=F
         AIF   (&BFMSW).ALB1
         BO    *+32 .                   BR. IF NOT RECFM=F
         AGO   .ALB2
.ALB1    BO    *+20 .                   BR. IF NOT RECFM=F
.ALB2    LH    0,62(0,&REG) .              GET BLKSIZE
         AIF   (&BFMSW).ALB
         CH    0,82(0,&REG) .              COMPARE BLKSIZE TO LRECL
         BNH   *+8 .                    BR. IF NOT BLOCKED
         OI    36(&REG),B'00010000' .      FORCE BLOCKED IF B>L
.ALB     SH    0,82(0,&REG) .              SUBTRACT 1 LRECL
         BP    *-4 .                    BR. IF STILL MORE
         BNZ   &LABL2 .               ERROR IF NOT EVEN NO. OF LRECL
.NFC     AIF   ('&CHECK(1)' NE 'V' AND '&CHECK(2)' NE 'V' AND '&CHECK' X
               NE 'YES' OR &FFMSW).NVC
*
*          CROSS CHECK 'V' FORMAT
*
         AIF   (&VFMSW).MUSTV
         TM    36(&REG),B'10000000' .      CHECK IF RECFM=V
         BO    *+28 .                   BR. IF NOT RECFM=V
.MUSTV   ANOP
         LH    0,82(0,&REG) .              GET LRECL
         TM    36(&REG),B'00010000' .      CHECK IF BLKOCKED
         BZ    *+8 .                    BR. IF NOT BLOCKED
&LABL7   SETC  'FOUR'.'&SYSNDX'
         AH    0,&LABL7 .             ADD FOUR TO LRECL
         CH    0,62(0,&REG) .           COMPARE TO BLKSIZE
         BH    &LABL2 .                 BR. IF BLKSIZE < LRECL+4
.NVC     AIF   ('&TYPE' EQ 'OPEN').NVC1
         BR    14
         AGO   .DUN
.NVC1    B     &LABL2+8 .             BR. TO EXIT STATEMENTS
.DUN     SPACE 1
         AIF   ('&LABL3' EQ '').N1
&LABL3   DS    F
.N1      DRSORG &LABL4,&LABL5,&LABL6,&LABL7,&LABL8,&LABL9,&LRECL(1),   X
               &BLKSIZE(1),&BLKSIZE(2),4,&BLKFACT(1),&LRECL(2)
         AIF   ('&TYPE' NE 'OPEN').CLOS
         AIF   (T'&ERROR NE 'O').YER
.CLOS    DC    0A(0),X'80',AL3(432) .   ABEND U-432,DUMP
&LABL2   LR    14,&REG .                   GET ADDRESS OF DCB FOR ABEND
         L     1,&LABL2-4 .           GET ABEND CODE
         SVC   13 .                     ISSUE ABEND SVC
         AIF   ('&TYPE' EQ 'OPEN').NOPE
         DROP  15
         AGO   .MEX
.YER     ANOP
&LABL2   L     &R,&LABL3 .             RESTORE SAVED REGISTER
         B     &ERROR .                  TAKE SPEIFIED ERROR EXIT
.NOPE    L     &R,&LABL3 .             RESTORE SAVED REGISTER
.MEX     AIF   (T'&CSECT EQ 'O').MEX1
&CSCT    CSECT .                        RETURN TO OLD CSECT
.MEX1    SPACE 2
         MEND
         SPACE 5
         MACRO
         DRSRECFM  &R,&TYPE=
         GBLA  &RCFMDRS
         GBLB  &FFMSW,&VFMSW,&BFMSW
         GBLB  &SAXXXX,&SBXXXX,&STXXXX,&SMXXXX,&SSXXXX
         LCLB  &SA,&SB,&ST,&SM,&SS
         LCLA  &N,&P,&T
         LCLC  &C
         AIF   ('&TYPE' EQ '').NXX
&SAXXXX  SETB  0
&SBXXXX  SETB  0
&STXXXX  SETB  0
&SMXXXX  SETB  0
&SSXXXX  SETB  0
.NXX     ANOP
&N       SETA  0
&T       SETA  K'&R
         AIF   (&T EQ 0).DUN
&P       SETA  1
         AIF   ('&TYPE' NE '').LP1
&C       SETC  '&R'(1,1)
         AIF   ('&C' NE 'F').NF
&VFMSW   SETB  0
&N       SETA  &N+128
         AGO   .VF
.NF      AIF   ('&C' NE 'V').NV
&FFMSW   SETB  0
&N       SETA  &N+64
         AGO   .VF
.NV      AIF   ('&C' NE 'U').ER1
&VFMSW   SETB  0
&FFMSW   SETB  0
&N       SETA  &N+64+128
&SB      SETB  1                        MARK RECFM=XB ILLEGAL
&SS      SETB  1
.VF      ANOP
&P       SETA  2
.LP1     AIF   (&P GT &T).DUN
&C       SETC  '&R'(&P,1)
         AIF   ('&C' NE 'B' OR &SB OR &SBXXXX).NB
&N       SETA  &N+16
&SB      SETB  1
         AGO   .LP2
.NB      AIF   ('&C' NE 'S' OR &SS OR &SSXXXX).NS
&N       SETA  &N+8
&SS      SETB  1
         AGO   .LP2
.NS      AIF   ('&C' NE 'T' OR &ST OR &STXXXX).NT
&N       SETA  &N+32
&ST      SETB  1
         AGO   .LP2
.NT      AIF   ('&C' NE 'A' OR &SA OR &SM OR &SAXXXX).NA
&N       SETA  &N+4
&SA      SETB  1
         AGO   .LP2
.NA      AIF   ('&C' NE 'M' OR &SM OR &SA OR &SMXXXX).ER2
&SM      SETB  1
&N       SETA  &N+2
.LP2     ANOP
&P       SETA  &P+1
         AGO   .LP1
.ER2     SPACE 1
         MNOTE 4,'*** ''RECFM=&R'' - ILLEGAL OR DUPLICATE TYPE'
         AGO   .ERX
.ER1     SPACE 1
         MNOTE 4,'*** ''RECFM=&R'' - IS ILLEGAL SPECIFICATION'
.ERX     SPACE 1
&N       SETA  0
         MEXIT
.DUN     AIF   ('&TYPE' EQ '').DUN1
&SAXXXX  SETB  (&SA)
&SBXXXX  SETB  (&SB)
&SMXXXX  SETB  (&SM)
&STXXXX  SETB  (&ST)
&SSXXXX  SETB  (&SS)
.DUN1    ANOP
&RCFMDRS SETA  &N
         AIF   (&SB).NBLK
&BFMSW   SETB  0
.NBLK    MEND
         SPACE 5
         MACRO
         DRSORG
         LCLA  &P,&N,&PT,&T
&N       SETA  (N'&SYSLIST)/2
&P       SETA  1
.LOP2    AIF   ('&SYSLIST(&P)' EQ '').LENT
&T       SETA  1
         AIF   (&P EQ 1).NSAM
.LOP     AIF   ('&SYSLIST(&N+&T)' EQ '&SYSLIST(&N+&P)' AND '&SYSLIST(&TX
               )' NE '').SAM
&T       SETA  &T+1
         AIF   (&T LT &P).LOP
.NSAM    ANOP
&SYSLIST(&P) DC Y(&SYSLIST(&N+&P))
.LENT    ANOP
&P       SETA  &P+1
         AIF   (&P LE &N).LOP2
         MEXIT
.SAM     ANOP
&SYSLIST(&P) EQU &SYSLIST(&T)
         AGO   .LENT
         MEND
         SPACE 5
         SPACE 5
         MACRO
&NAME    GOBCK2 &TO=,&RC=0
         LCLC  &A,&B
&B       SETC  'CGDR'.'&SYSNDX'
&A       SETC  '&NAME'
         AIF   ('&NAME' NE '').N
&A       SETC  'CGDS'.'&SYSNDX'
.N       ANOP
&A       L     1,4(0,13)
         CLC   17(3,1),=AL3(&TO)
         BE    &B
         L     2,4(0,1)
         CLC   17(3,2),=AL3(&TO)
         BE    *+14
         MVI   12(1),X'FF'
         LR    1,2
         B     &A+14
         LR    13,1
         LM    14,12,12(13)
         MVI   12(13),X'FF'
         LA    15,&RC
         BR    14
&B       DS    0H
         SPACE 1
         MEND
         EJECT
         MACRO
&NAME    IOBD  &A,&B
***********************************************************************
*                                                                     *
*          DSECT FOR REPRESENTATION OF STANDARD FIELDS IN IOB         *
*                                                                     *
***********************************************************************
         SPACE 2
&NAME    DSECT
IOBDSECT DS    0X
IOBFLAG1 DS    X
IOBFLAG2 DS    X
IOBSENS0 DS    X
IOBSENS1 DS    X
IOBECBCC DS    0X
IOBECBPT DS    0AL4
IOBECB   DS    AL4
IOBFLAG3 DS    0X
IOBCSW   DS    XL8
IOBSIOCC DS    0X
IOBSTART DS    0AL4
IOBCCW   DS    AL4
         DS    0X .                     RESERVED
IOBDCBPT DS    0AL4
IOBDCB   DS    AL4
IOBRESTR DS    AL4
IOBINCAM DS    H
IOBERRCT DS    H
         SPACE 5
         MEND
         EJECT
         MACRO
&NAME    IOB   &ECB=0,&CCW=0,&DCB=0,&FLAG1=0,&FLAG2=0,&FLAG3=0
         SPACE 2
***********************************************************************
*                                                                     *
*          IOB GENERATION FOR STANDARD FIELDS ONLY                    *
*                                                                     *
***********************************************************************
         SPACE 2
         DS    0D
&NAME    DS    0CL32
         DC    AL1(&FLAG1) .            IOBFLAG1
         DC    AL1(&FLAG2) .            IOBFLAG2
         DC    X'0000' .                IOBSENS0,1
         DC    A(&ECB) .                ECB POINTER
         DC    2A(0) ,                  IOBFLAG3 AND CSW
         DC    A(&CCW) .                ADDRESS OF CCW
         DC    A(&DCB) .                ADDRESS OF DCB
         DC    F'0' .                   IOBRESTR
         DC    H'0' .                   IOBINCAM
         DC    H'0' .                   IOBERRCT
         SPACE 5
         MEND
         EJECT
***********************************************************************
*                                                                     *
*          TCOPY - A PROGRAM TO LIST AND/OR COPY TAPE VOLUEMS         *
*          WRITTEN AT UNIVERSITY OF TORONTO JANUARY 1969              *
*          BY DENNIS R. SMITH.                                        *
*                                                                     *
*          UPDATED AUGUST 4, 1970 -                                   *
*              1) TO HANDLE A NULL FILE AS THE FIRST FILE OF AN       *
*                  UNLABELED TAPE.                                    *
*              2) TO PRINT THE UPDATE DATE ALONG WITH THE TITLE       *
*
*
*          UPDATED MAY 10, 1971 -                                     *
*
*              1) TO HANDLE DEN=2 OR 3 ON CONTROL CARD                *
*                 TO SPECIFIY OUTPUT TAPE DENSITY.                    *
*              2) TO CHECK AND PRINT 'TO' TAPE LABEL EVEN WHEN        *
*                 CPYVOLID=NO.                                        *
*
*          UPDATED OCT 13, 1971 -
*                                                                     *
*              1) TO PRINT FILE BLOCKCOUNT, RECORD SIZES EVEN IF      *
*                 AN ERROR OCCURS WHILE PROCESSING FILES              *
*              2) TO PRINT BLOCKING ATTRIBUTE, B, S, OR BS (R)        *
*                                                                     *
*          UPDATED APR 02, 1975 -
*
*              1) TO DEFAULT TAPE DENSITY DEN=3 - 1600 BPI            *
*                 AND RETAIN DEN=2 OR 3 ON CONTROL CARD               *
*              2) TO ASSIGN ROUT AND DESC CODES TO WTO AND WTOR       *
*                                                                     *
*          UPDATED MAY 10 1977 -                                      *
*                                                                     *
*              1) SUPPORT FOR 6250 BPI                                *
*              2) CHANGE THE DENSITY INDICATOR IN THE HDR2 WHEN       *
*                 COPYING TO A TAPE WITH A DIFFERENT DENSITY THAN     *
*                 THE INPUT.                                          *
*                                                                     *
***********************************************************************
         SPACE 2
         GBLA  &PRINTFS
         LCLC  &MONTH
         LCLA  &YEAR,&DAY
TCOPY    START X'5820'
&MONTH   SETC  'APR'
&DAY     SETA  02
&YEAR    SETA  1975
&PRINTFS SETA  60
         USING IOB,R10
         REQU  0,15
LKREG    EQU   9
         DEFSW SW1,(CPYSW,LABELSW,DASDRSW,CPYVLID,TRACSW,TLABELSW,     X
               MODSW)
         DEFSW SW2,(KTOSW,KFROMSW,KLABELSW,KCPYSW,KTRACSW,KTODD,KFROMDDX
               ,KNVOLID)
         DEFSW SW5,(KOWNID,KTYPE,KMOD,KDEN)
         DEFSW SW3,(ENDSW,DASDRP,TPMKSW,EOFOK,EOFSW)
         DEFSW SW4,(TESTSW,QUITSW,ABSW,MANYSW)
         DEFSW SW6,(DATASW)
         CNSRV 12
         LR    8,1
         L     11,CIOAD
         USING CIO,11
*
*
         B     MAIN
CIOAD    DC    A(CIO)
MAIN     OPEN  (SYSIN,,SYSOUT,OUTPUT)
         BOPEN SYSOUT,PRINTO
         WTO   'CRF022I  FILE FAILED TO OPEN - SYSPRINT',ROUTCDE=(1,11)
PRINTO   DS    0H
         L     8,0(0,8)                 PARM FIELD POINTER
         LH    1,0(0,8)
         C     1,=F'4'
         BL    CKSYSIN                  BR. IF PARM FILE TO SHOURT
         CLC   2(4,8),=C'TEST'
         BE    TAPET                    TAPE-TEST OPTION
         C     1,=F'8'
         BNE   CKSYSIN
         CLC   2(8,8),=C'FULLTEST'
         BE    TAPETF
CKSYSIN  BNOPEN SYSIN,ER88A             ERROR IF NO SYSIN
         SPACE 2
LOOP     CALL  GCRD                     GET CONTROL CARD
         LTR   15,15
         BNZ   ERXX
         SWT   TEST,EOFSW
         BO    ENDPR
LOOPM    SWT   TEST,QUITSW
         BO    LOOP                     ERROR CHECK CARDS IF ERRORS
*
         CALL  TTCOPY                   PERFORM COPY
         LTR   15,15
         BNZ   ERXX
         SWT   TEST,MANYSW
         BO    LOOPM                    BR. IF TYPE=MANY
         B     LOOP
*
TAPETF   SWT   ON,TRACSW                MARK TRACE DESIRED
TAPET    WTO  'CRF011I  REPLY ''M'' TO PROCESS, ''U'' TO UNLOAD, ''C'' X
               TO TERMINATE',ROUTCDE=(1,3,5),DESC=(3)
         EXTRACT TIOT,FIELDS=TIOT
         L     1,TIOT
         LA    1,28(0,1)                POINT TO DD'S
EXL1     CLI   0(1),X'00'               CHECK FOR END
         BE    LOOPT1
         CLC   0(8,1),=CL8'SYSUT1'
         BE    UT1F                     FOUND SYSUT1
         CLC   0(8,1),=CL8'SYSUT2'
         BE    UT2F                     BR. IF SYSUT2 FOUND
EXL2     LA    1,20(0,1)
         B     EXL1
UT1F     L     2,12(0,1)                GET UCB POINTER
         MVC   UT1UN(3),13(2)           GET DEVICE ADDRESS
         B     EXL2
UT2F     L     2,12(0,1)
         MVC   UT2UN(3),13(2)
         B     EXL2
LOOPT1   CLI   UT1UN,C'X'
         BNE   UT1OK
         MVC   UT1UN(3),UT2UN
         MVC   TAPEIN+40(8),=CL8'SYSUT2'
UT1OK    CLI   UT2UN,C'X'
         BNE   UT2OK
         MVC   UT2UN(3),UT1UN
UT2OK    CLI   UT1UN,C'X'
         BE    ER30
LOOPT    SWT   ON,TLABELSW
         SWT   ON,TESTSW
         SWT   OFF,(LABELSW,DASDRSW)
         PRINTA '1  TEST PROCESS FOR UNKNOWN TAPE'
ILL      SR    R0,R0
         ST    R0,CECB
         L     1,TIOT
         MVC   WTOR+25(8),0(1)    PLACE JOBNAME IN MESS
         MVC   WTOR+23+19(3),UT1UN
WTOR     WTOR 'CRF012W  JOBNAME,, MOUNT ''---'' TAPE TO BE TESTED',    X
               REPAD,1,CECB,ROUTCDE=(1,3,5),DESC=(3)
         PRINT  NOGEN
         WAIT  ECB=CECB
         OI    REPAD,C' '               FORCE UPPER CASE LETTERS
         CLI   REPAD,C'C'
         BE    ENDPR
         CLI   REPAD,C'U'
         BE    RWU
         CLI   REPAD,C'M'
         BNE   ILL
         CALL  TTCOPY
LTR      LTR   15,15
         BE    XC1
         CLOSE  (TAPEIN)
         PRINTA '- -------  PROCESSING TERMINATED, THIS VOLUME'
XC1      XC    DDNAM2,TAPEIN+40
         XC    TAPEIN+40(6),DDNAM2
         EX    R0,XC1
XC2      XC    UT1UN(3),UT2UN
         XC    UT2UN(3),UT1UN
         EX    R0,XC2
         CLI   REPAD,C'U'
         BE    ILL
         B     LOOPT
ER30     ERROR (A,8),'NIETHER "SYSUT1" NOR "SYSUT2" SPECIFIED'
*
RWU      PRINTA '0 --- UNLOAD REQUESTED'
         B     XC1
CECB     DC    F'0'
REPAD    DC    CL2'X'
         SPACE 5
ENDPR    CLOSE (SYSOUT)
         GOBCK 0
         SPACE 2
ER15     ERROR (E,8),'''FROM'' TAPE , ILLEGAL LABEL FORMAT'
ER10     ERROR (E,8),'''TO'' TAPE , ILLEGAL LABEL FORMAT'
ER21     ERROR (E,8),'UNEXPECTED EOD ON  TAPEIN'
ER22     ERROR (E,8),'UNEXPECTED EOD ON  TAPEOUT'
ER88A    ERROR (A,8),'SYSIN - FAILED TO OPEN, SPECIFY PARM=TEST OR     X
               PARM=FULLTEST FOR TAPE TEST OPTION'
ER88     ERROR (A,8),'FILE FAILED TO OPEN -',40(1),8
ER11     ERROR (E,8),'WRONG ''TO'' VOLUME SERIAL -',TOVOLSER,6
ER12     ERROR (E,8),'WRONG ''FROM'' VOLUME SERIAL -',FRVOLSER,6
ER9      ERROR (E,8),'UNEXPECTED CONTINUATION INDICATED'
ERXX     SWT   TEST,QUITSW
         BO    LOOP
         SWT   OFF,MANYSW
         SWT   ON,QUITSW
         PRINTA '--------  PROCESSING TERMINATED, SYNTAX SCAN OF CONTROL
               L CARDS FOLLOWS'
         B     LOOP
*                                                                     *
EOD      SWT   TEST,EOFOK
         BO    EOD1
         ERROR (A,8),'UNEXPECTED EOF ON SYSIN'
EOD1     SWT   ON,EOFSW
         BR    LKREG
         EJECT
***********************************************************************
*                                                                     *
*          ROUTINE TO PRINT MESSAGES                                  *
*                                                                     *
***********************************************************************
         SPACE 2
EPRINT   SWT   ON,ABSW
         NOP   *
         MVC   ERBUF-1(8),=C'0-------'
         SWT   ON,ENDSW                 MARK ABEND
PRINTA   ST    14,EPSAV
         BAL   14,PGCK                  CHECK FOR END OF PAGE
         PUT   SYSOUT,ERBUF-1
         MVI   ERBUF-1,C' '
         MVC   ERBUF,ERBUF-1
         SWT   TEST,ENDSW
         BO    *+12                     BR< IF END
         L     14,EPSAV
         B     0(0,14)            RETURN IF PRINTA
         SWT   TEST,DATASW
         BNO   NOPSTAT
         SWT   OFF,ENDSW
         STM   9,14,ABSAV
         PRINTA ' ------- DATA SET STATISTICS TO THIS POINT FOLLOW'
         BAL   LKREG,PSTAT              PRINT STATISTICS ABOUT FILE
         LM    9,14,ABSAV
NOPSTAT  DS    0H
         SWT   TEST,ABSW
         BO    ABND
         SWT   OFF,ENDSW
         PRINT GEN
         GOBCK2 TO=TCOPY,RC=4
         PRINT NOGEN
         SWT   TEST,TESTSW
         BZ    ERXX
         LA    15,4
         B     LTR
ABND     CLOSE (SYSOUT)
         ABEND 69,DUMP
ABSAV    DS    6F
EPSAV    DC    F'0'
*
PGCK     LH    R1,PGCNT
         CLI   ERBUF-1,C'1'
         BE    NPG
         CLI   ERBUF-1,C' '
         BE    SUB1
         CLI   ERBUF-1,C'0'
         BE    SUB2
         CLI   ERBUF-1,C'-'
         BE    SUB3
         MVI   ERBUF-1,C'-'
SUB3     BCTR  R1,0
SUB2     BCTR  R1,0
SUB1     S     R1,=F'1'
         STH   R1,PGCNT
         BPR   14
*          COME HERE IF NEW PAGE
NPG      MVI   ERBUF-1,C'0'
         LH    R1,PGCNTR
         STH   R1,PGCNT
         LA    R1,SYSOUT                SIMULATE PUT
         LA    R0,HEADR
         L     15,48(0,R1)
         BR    15
         SPACE 2
PGCNTR   DC    H'55'
PGCNT    DC    H'0'
HEADR    DC    C'1         UTO - COMPUTER RESEARCH FACILITY (CRF) TAPE X
               UTILITY, D.R.SMITH  -  '
HEADR1   DC    C'UPDATED &MONTH &DAY, &YEAR'
         DC    CL(133-L'HEADR-L'HEADR1)' '
         EJECT
*********************
*              PRINT FILE STATISTICS                                  *
*********************
         SPACE 2
PSTAT    L     R1,BLKCNT                GET NUMBER OF BLOCKS READ
         CVD   R1,DWRD
         MVC   ERBUF+14(6),=X'402020202120'
         ED    ERBUF+14(6),DWRD+5
         PRINTA '  BLOCK COUNT -'
         MVC   ERBUF-1(39),MASK2
         L     R1,MAXBLK
         CVD   R1,DWRD
         ED    ERBUF+15(6),DWRD+5
         L     R1,MXBLKN
         CVD   R1,DWRD
         ED    ERBUF+32(6),DWRD+5
         PRINTA
         MVC   ERBUF-1(39),MASK2
         L     R1,MINBLK
         CVD   R1,DWRD
         ED    ERBUF+15(6),DWRD+5
         L     R1,MNBLKN
         CVD   R1,DWRD
         ED    ERBUF+32(6),DWRD+5
         PRINTA '  MIN'
         SWT   OFF,DATASW
         BR    LKREG
         EJECT
***********************************************************************
*          ROUTINES TO PERFORM I/O OPERATIONS                         *
*                                                                     *
***********************************************************************
         SPACE 2
*          READ CARDS
CREAD    SWT   TEST,EOFSW
         BO    ER29
         GET   SYSIN
         ST    R1,CBUFAD
         LR    R3,R1
         LA    R8,71(0,R3)
         MVC   ERBUF(80),0(R1)
         PRINTA
         SWT   OFF,EOFOK
         BR    LKREG
ER29     ERROR (A,8),'PREVIOUS EOF ON SYSIN, ANOTHER READ ATTEMPTED'
*          REWIND
REWIND   LA    R0,RWCCW
         SWT   OFF,TPMKSW     IF REWIND, IGNORE PREV. TPMK     30/7/70
EXC      ST    R0,IOBCCW
         BAL   14,EXCP1
         SR    15,15
         BR    LKREG
*
*          BACK SPACE
BSPBLK   LA    R0,BSPCCW
         B     EXC
*
*          FORWARD SPACE
SPACE    LA    R0,SPCCW
         B     EXC
*
*          WRITE TPAE MARK
WTPMK    SWT   TEST,CPYSW
         BZR   LKREG
         PRINTF ' *WRITE TAPE MARK'
         MVC   ERRTYPE(16),=CL16'WRITE TAPE MARK'
         LA    R0,WTMKCCW
         LA    R10,WIOB
         B     EXC
*          SENSE
SENSE    LA    R0,SENSCCW
         B     EXC
*
READ     LA    R0,RCCW
         ST    R0,IOBCCW
         MVC   ERRTYPE(16),=CL16'TAPE READ'
         BAL   14,EXCP2
         SR    15,15
         TM    IOBCSW+4,X'01'
         BZ    NTPMK
         PRINTF ' --- TAPE MARK READ'
         SWT   TEST,TPMKSW
         BO    ENDV                     IF TWO TAPE MARKS, THEN END
         SWT   ON,TPMKSW
         LA    15,4
         BR    LKREG
NTPMK    LH    R7,RCCW+6                GET READ LENGTH
         SH    R7,IOBCSW+6              SUB. RESIDUE
         STH   R7,WCCW+6                STORE IN WRITE CCW
         SWT   OFF,TPMKSW
         BR    LKREG
ENDV     LA    15,8
         BR    LKREG
*
*          WRITE TAPE
WRITE    SWT   TEST,CPYSW
         BZR   LKREG
         LA    R0,WCCW
         ST    R0,IOBCCW
         MVC   ERRTYPE(16),=CL16'TAPE WRITE'
         BAL   14,EXCP3
         SR    15,15
         BR    LKREG
         SPACE 5
*          ROUTINE TO PRINT TRACE OUTPUT
PRINTF   SWT   TEST,TRACSW
         BO    PRINTA
         MVC   ERBUF,ERBUF-1
         BR    14
         SPACE 5
*          ROUTINE TO ISSUE EXCP
EXCP1    DS    0H
EXCP2    DS    0H
EXCP3    ST    14,EXSAV
         L     R1,IOBDCB
         BNOPEN (1),(R14)
         EXCP  IOB
         L     R3,IOBECB
         BAL   R4,WAIT
         L     14,EXSAV
         BR    14
EXSAV    DC    F'0'
*
WAIT     WAIT  1,ECB=(R3)
         CLI   0(R3),X'7F'
         BNE   ISIOERR
         MVC   ERRTYPE(16),=CL16'TAPE CONTROL'
         BR    R4
ISIOERR  DS    0H
         TM    IOBCSW+4,X'01'
         BNZR  R4                       OK IF TPMK READ
ER17     ERROR (E,8),'PERMANENT I/O ERROR ON ',ERRTYPE,16
ERRTYPE  DC    CL16'TAPE CONTROL'
         EJECT
***********************************************************************
*                                                                     *
*          ROUTINE TO READ CONTROL CARDS, AND PROCESS KEYWORDS        *
*                                                                     *
***********************************************************************
GCRD     CSECT
         CNSRV 13
         XC    SW1(3),SW1
         XC    TOLOC,TOLOC
         XC    FROMLOC,FROMLOC
         XC    NEWVOL,NEWVOL
         MVC   OWNER,OWNER-1
         MVI   OWNER,X'00'
         MVI   TAPEOUT+18,B'11000011'
*                                    DEFAULT TO DEN=3 1600 BPI
         SWT   ON,TLABELSW
         SWT   ON,EOFOK
         SWT   TEST,QUITSW
         BO    NNPG
         PRINTA '1'
NNPG     PRINTA '-'
         BAL   LKREG,CREAD
         SWT   TEST,EOFSW
         BO    NER28
         BAL   LKREG,BLK
         BAL   LKREG,PICK               GET CONTROL WORD
         CLI   0(R3),C' '
         BNE   ER2
         CLC   WANT(5),=C'LIST '
         BE    LST                      BR. IF LIST CARD
         CLC   WANT(5),=C'COPY '
         BNE   ER2                      BR. IF ILLEGAL CONTROL WORD
         SWT   ON,(CPYSW,LABELSW)       MARK TO COPY
         SWT   OFF,TLABELSW
LST      BAL   LKREG,BLK
*
*          ROUTINES TO HANDLE KEYWORDS
*
LOP3     BAL   LKREG,PICK               GET KEYWORD
         LA    R4,KTAB-12               POINT TO TABLE OF KEYWORDS
LOP2     LA    R4,12(0,R4)
         CLC   0(8,R4),WANT             LOOK FOR KEYWORD
         BL    LOP2
         BH    ER2
         L     R1,8(0,R4)               GET ROUTINE ADDRESS
         BR    R1
         SPACE 5
*
*          ROUTINES TO HANDLE INDIVIDUAL KEYWORDS
*
TYPE     BAL   LKREG,BETTY1
         DC    AL1(KTYPE)
         BAL   LKREG,SLUFF
         DC    C'='
         BAL   LKREG,PICK
         CLC   WANT(4),=C'MANY'
         BNE   ER2
         SWT   ON,MANYSW
         B     NXT
         SPACE 1
*
*          DEN= PARAMETER, 2 FOR 800 3 FOR 1600 BPI
DEN      BAL   LKREG,BETTY1
         DC    AL1(KDEN)
         BAL   LKREG,SLUFF
         DC    C'='
         BAL   LKREG,PICK
         CLC   WANT(2),=C'2 '
         BE    DEN2
         CLC   WANT(2),=C'3 '
         BE    DEN3
         CLC   WANT(2),=C'4 '
         BNE   ER13
         MVI   TAPEOUT+18,B'11010011'  DEN=4, 6250 BPI
         B     NXT
DEN3     MVI   TAPEOUT+18,B'11000011'  DEN=3, 1600 BPI
         B     NXT
DEN2     MVI   TAPEOUT+18,B'10000011'  DEN=2, 800 BPI
         B     NXT
*
MOD      BAL   LKREG,BETTY1
         DC    AL1(KMOD)
         SWT   TEST,CPYSW
         BZ    ER31
         SWT   ON,MODSW
         B     NXT
ER31     ERROR (R,8),'''MOD'' SPECIFIED WITH ''LIST'' OPTION, IGNORED'
         B     NXT
*
NEWVOLID BAL   LKREG,BETTY
         DC    AL1(KNVOLID)
         SWT   ON,CPYVLID
         LA    R5,NEWVOL
         B     FROMT
TODD     BAL   LKREG,BETTY
         DC    AL1(KTODD)
         LA    R5,TAPEOUT+40
         B     FROMT
*
FROMDD   BAL   LKREG,BETTY
         DC    AL1(KFROMDD)
         LA    R5,TAPEIN+40             POINT TO DDNAME LOCATION
         B     FROMT
*
TRACE    BAL   LKREG,BETTY
         DC    AL1(KTRACSW)
         BAL   LKREG,SLUFF
         DC    C'='
         BAL   LKREG,PICK
         CLC   WANT(4),=C'YES '
         BNE   NXT
         SWT   ON,TRACSW
         B     NXT
*
OWNERID  BAL   LKREG,BETTY1
         DC    AL1(KOWNID)
         CLC   0(2,R3),=C'='''
         BNE   ER6
         LA    R3,2(0,R3)
         LR    R4,R3
         LA    R1,10
         LA    R0,1(0,R1)
OWNLOP   CLI   0(R3),C''''
         BE    FQ
         LA    R3,1(0,R3)
         BCT   R0,OWNLOP
ER80     ERROR (E,8),'ILLEGAL ''OWNERID'' SPECIFICATION'
FQ       SR    R1,R0
         BM    ER80
         STC   1,*+5
         MVC   OWNER(*-*),0(R4)
         LA    R3,1(0,R3)
         B     NXT
*
TO       BAL   LKREG,BETTY              CHECK FOR DUPLICATION
         DC    AL1(KTOSW)
         LA    R5,TOLOC
         B     FROMT
FROM     BAL   LKREG,BETTY
         DC    AL1(KFROMSW)
         LA    R5,FROMLOC
FROMT    BAL   LKREG,SLUFF
         DC    C'='                     SKIP THE =
         BAL   LKREG,PICK               GET ARG
         MVC   0(8,R5),WANT             PLACE IN 'TO' OR 'FROM' LOC
         B     NXT
*
LABEL    BAL   LKREG,BETTY
         DC    AL1(KLABELSW)
         SWT   OFF,(TLABELSW,LABELSW)
         BAL   LKREG,SLUFF
         DC    C'='
         BAL   LKREG,PICK
         CLC   WANT(3),=C'NO '
         BE    NXT
         CLC   WANT(8),=C'UNKNOWN '
         BE    UNK
         CLC   WANT(6),=C'DASDR '
         BE    DASDR                    BR. IF DASDR TAPE
         CLC   WANT(3),=C'SL '
         BE    SL
         CLC   WANT(3),=C'NL '
         BE    NXT
         CLC   WANT(4),=C'BLP '
         BE    NXT
         CLC   WANT(4),=C'YES '
         BNE   ER2                      BR. IF ILLEGAL
SL       DS    0H
         SWT   ON,LABELSW               MARK LABELLED TAPE
         B     NXT
UNK      SWT   ON,TLABELSW
         B     NXT
DASDR    SWT   ON,DASDRSW
         B     NXT
*
CPYVOLID BAL   LKREG,BETTY
         DC    AL1(KCPYSW)
         BAL   LKREG,SLUFF
         DC    C'='
         BAL   LKREG,PICK
         CLC   WANT(3),=C'NO '
         BE    NXT                      BR. IF CPYVOLID=NO
         CLC   WANT(4),=C'YES '
         BNE   ER2                      ILLEGAL
         SWT   ON,CPYVLID               MARK CPYVOLID=YES
*
*          COME HERE AFTER EACH KEYWORD
*
NXT      CLI   0(R3),C' '
         BE    END1                     BR. IF END
         BAL   LKREG,SLUFF
         DC    C','                     SKIP COMMA
         CR    R3,R8
         BNL   *+12                     BR. IF CONTINUES
         CLI   0(R3),C' '
         BNE   LOP3                     BR. IF MORE ON THIS CARD
         CLI   0(R8),C' '
         BE    ER7
         BAL   LKREG,CREAD
         LA    R3,15(0,R3)              POINT TO CONT. COL.
         B     LOP3
*
*          COME HERE AT END OF CONTROL STATEMENT
*
END1     CLI   0(R8),C' '
         BNE   ER9                      CONTINUATION CARD, NON EXPECTED
         SWT   TEST,MODSW
         BZ    NOMOD0                   BR. IF NOT MOD
         SWT   TEST,KNVOLID
         BNZ   ER32                  NEWVLID MAY NOT BE USED
         SWT   TEST,(DASDRSW,CPYVLID)
         BNZ   ER32                  MOD AND DASDR AND CPYVLID INCOMPAT
NOMOD0   SWT   TEST,MANYSW
         BO    NER28
         SWT   TEST,CPYSW
         BO    CKCOPY
         SWT   TEST,KFROMDD
         BNZ   NER28
ER13     ERROR (E,8),'ILLEGAL DEN= PARAMETER - ',WANT,8
ER28     ERROR (E,8),'MISSING OR CONFLICTING PARAMTERS'
ER32     ERROR (E,8),'''MOD'' OPTION NOT COMPATABLE WITH OTHER OPTIONS X
               SPECIFIED'
CKCOPY   SWT   TEST,(KFROMDD,KTODD)
         BNO   ER28
         SWT   TEST,TLABELSW
         BO    ER28
         CLC   TAPEIN+40(8),TAPEOUT+40
         BE    ER28
NER28    PRINTA '-'       SPACE AFTER CONTROL CARD             30/7/70
         GOBCK                                                 30/7/70
ER25     ERROR (E,8),'LABEL=UNKNOWN, IS ILLEGAL FOR ''COPY'''
         SPACE 5
*          ROUTINE TO PICK UP UP TO 8 CHAR. WORDS
PICK     TRT   0(9,R3),TRTB1
         BZ    ER3                      BR. IF MORE THAN 8 CHAR.
         LR    R2,R1
         SR    R1,R3                    GET LENGTH
         S     R1,=F'1'
         BM    ER5
         MVC   WANT,WANT-1              CLEAR WANT
         EX    R1,MVC1                  MVC  WANT(*-*),0(R3)
         LR    R3,R2
         BR    LKREG
MVC1     MVC   WANT(*-*),0(R3)
         SPACE 5
*          ROUTINE TO SLUFF A SPECIFIED CHARACTER
         SPACE 2
SLUFF    CLC   0(1,R3),0(LKREG)
         BNE   ER6                      BR. IF NOT REQUIRED CHARACTER
         LA    R3,1(0,R3)               SKIP CHARACTER
         B     2(0,LKREG)
ER6      ERROR (E,8),'ILLEGAL DELIMITER',0(R3),1
         SPACE 5
*          ROUTINE TO SLUFF BLANKS, AND READ NEW CARD IF REQUIRED
         SPACE 2
BLK      CR    R3,R8
         BNL   NEWC                     BR. IF NEW CARD NEEDED
         CLI   0(R3),C' '
         BNER  LKREG                    BR. IF FOUND NON-BLANK
         LA    R3,1(0,R3)
         B     BLK
NEWC     CLI   0(R8),C' '
         BE    ER7                      BR. IF NOT MARKED AS CONT.
         LR    R10,LKREG                SAVE RETURN REGISTER
         BAL   LKREG,CREAD
         LA    R3,15(0,R3)              POINT OT START OF NEW CARD
         BR    R10
         SPACE 5
*          ROUTINE TO CHAECK FOR DUPLICATE KEYWORDS
         SPACE 2
BETTY1   LA    R2,SWTT1
         B     BETTY+4
BETTY    LA    R2,SWTT
         IC    R1,0(0,LKREG)            GET SWITCH
         EX    R1,0(R2)
         BO    ER8
         EX    R1,4(R2)
         B     2(0,LKREG)
ER8      ERROR (E,8),'DUPLICATE KEYWORD -',WANT,8
SWTT     TM    SW2,0
SWTO     OI    SW2,0
SWTT1    TM    SW5,0
         OI    SW5,0
*
*
         PRINT GEN
         DS    0F
KTAB     MINIT CSPEC=8,ADSPEC=4
         MNEM  'CPYVOLID'
         MNEM  'DEN'
         MNEM  'FROM'
         MNEM  'FROMDD'
         MNEM  'LABEL'
         MNEM  'MOD'
         MNEM  'NEWVOLID'
         MNEM  'OWNERID'
         MNEM  'TO'
         MNEM  'TODD'
         MNEM  'TRACE'
         MNEM  'TYPE'
         MNEM
         PRINT NOGEN
ER2      ERROR (E,8),'UNDEFINED CONTROL OR KEYWORD -',WANT
ER3      ERROR (E,8),'KEYWORD>8 CHARACTERS -',0(R3),8
ER5      ERROR (E,8),'MISSING KEYWORD AT -',0(R3),8
ER7      ERROR (E,8),'EXPECTED CONTINUATION CARD, NON INDICATED'
         SPACE 5
*
*          TRT TABLE FOR PICK
*
TRTB1    DS    0X
         DC    193X'01'
         DC    9X'00'
         DC    7X'01'
         DC    9X'00'
         DC    8X'01'
         DC    8X'00'
         DC    6X'01'
         DC    10X'00'
         DC    6X'01'
         EJECT
***********************************************************************
*                                                                     *
*          ROUTINE TO COPY TAPE                                       *
*                                                                     *
***********************************************************************
         SPACE 2
TTCOPY   CSECT
         CNSRV 13
         SR    R0,R0
         ST    R0,DSCNT
TROPEN   OPEN  (TAPEIN,INPUT)
         BOPEN TAPEIN,TTCOPY1
         SWT   TEST,TESTSW
         BZ    ER88
         CLI   TAPEIN+45,C'2'
         BNE   ER88
         MVI   TAPEIN+45,C'1'
         B     TROPEN
TTCOPY1  SWT   TEST,CPYSW
         BZ    NOCPYMOD                 BR. IF NO ''TO'' REQUIRED
OPNX     OPEN  (TAPEOUT)
         BNOPEN TAPEOUT,ER88
         LA    R10,WIOB
         BAL   LKREG,SENSE
         TM    SENSED+1,X'02'
         BZ    NOCPYMOD                 BR. IF ''TO'' TAPE NOT F-PROTEC
         CLOSE (TAPEOUT)
         WTOR  'CRF010W  ''TO'' TAPE FILE PROTECT. REPLY G && RE-MOUNT X
               OR CANCEL JOB',REPLY,1,PRUECB,ROUTCDE=(1,3,5),DESC=(3)
         WAIT  ECB=PRUECB
         B     OPNX                     TRY AGAIN
PRUECB   DC    F'0'
REPLY    DC    CL1'X'
NOCPYMOD LA    R10,RIOB
         BAL   LKREG,REWIND             REWIND FOR SAFETY
         SWT   TEST,(LABELSW,DASDRSW,TLABELSW)
         BZ    NL1                      BR. IF UNLABELED
         CALL  TLABEL                   PROCESS FIRST VOLUME LABEL
         LTR   15,15
         BNZ   TTCOPY1                  BR. IF WAS UNLABELSED
         SWT   TEST,TLABELSW
         BZ    NL1
         SWT   ON,LABELSW
         PRINTA '0 LABEL TEST, TAPE CONTAINS STANDARD LABELS'
NL1      SWT   TEST,MODSW
         BZ    NL1A                     BR. IF NOT MOD
         PRINTF ' *START TO PROCESS ''TO'' TAPE FOR MOD'
         MVC   IOBSAV,RIOB              SAVE FROM IOB
         MVC   RIOB,WIOB                GET ''TO'' IOB FOR MOD PROCES
         SWT   OFF,CPYSW                NO COPY TILL END OF MOD PROCESS
NL1A     SWT   TEST,(LABELSW,DASDRSW)
         BZ    DSLOP                    BR. IF NOT LABELED
         PRINTF ' *CHECK FOR USER VOLUME LABELS'
         LA    R6,=C'VOL'               PREPARE TO SEARCH FOR USER VOLS
TLOP0    CALL  HEADER                   PASS ANY USER VOL. LABELS
         B     *+4(15)
         B     *+16
         B     NUVL
         B     ER15
         B     ER23
         PRINTF ' --- USER VOLUME LABEL PASSED'
         B     TLOP0
NUVL     LA    R10,RIOB
         BAL   LKREG,BSPBLK             BACK SPACE PAST FIRST HEADER
*
*          NOW WE START PROCESSING HEADER LABELS
*
DSLOP    L     R1,DSCNT
         LA    R1,1(0,R1)               INC. DATA-SET COUNTEDR
         ST    R1,DSCNT
DSLOPNC  DS    0H
         SWT   TEST,(LABELSW,DASDRSW)
         BZ    NL2                      BR. IF NOT LABLED
         LA    R6,=C'HDR'               SYSTEM LABELS - 2
         PRINTF ' *HANDLE HDR1 LABEL'
         CALL  HEADER
         B     *+4(15)
         B     *+16
         B     ER15
         B     ER24
         B     ENDV1                    END OF VOLUME
         PRINTF ' --- COMPLETED'
         PRINTF ' *HANDLE HDR2 LABEL'
         CALL  HEADER
         B     *+4(15)
         B     *+16
         B     ER24
         B     ER15
         B     ER23
         PRINTF ' --- COMPLETED'
         LA    R6,=C'UHL'               USER HEADER LABEL
         PRINTF ' *CHECK FOR USER HEADER LABELS'
TLOP1    CALL  HEADER
         B     *+4(15)
         B     *+16
         B     ER15
         B     TPMK
         B     ER23
         PRINTF ' --- USER HEADER LABEL PASSED'
         B     TLOP1
TPMK     BAL   LKREG,WTPMK              WRITE A TAPE MARK
NL2      PRINTA '-'
         MVC   ERBUF+30(18),MASK1
         L     R1,DSCNT
         CVD   R1,DWRD
         ED    ERBUF+44(4),DWRD+6
         SWT   TEST,LABELSW
         BO    ISLAB
         PRINTA
         B     NLX
ISLAB    MVC   ERBUF+8(17),DSNAME
         PRINTA '- DSNAME='
         PRINTA
         MVC   ERBUF+7(1),RECFM
         LA    1,ERBUF+8
         CLI   BLKATT,C' '
         BE    BLKATTB
         CLI   BLKATT,C'R'
         BE    BLKATTR
         MVC   0(1,1),BLKATT            MOVE IN BLOCK ATTRIBUTE
         LA    1,1(0,1)
         B     BLKATTB
BLKATTR  MVC   0(2,1),=C'BS'
         LA    1,2(0,1)
BLKATTB  MVC   0(1,1),PRCNTRL
         PRINTA '  RECFM='
         LA    1,RECSIZE
         LA    R10,4
BLL1     CLI   0(1),C'0'
         BNE   *+12
         LA    1,1(0,1)
         BCT   R10,BLL1
         STC   R10,*+5
         MVC   ERBUF+9(*-*),0(1)
         PRINTA '  BLKSIZE='
         LA    1,BLKSF
         LA    R10,4
BLL2     CLI   0(1),C'0'
         BNE   *+12
         LA    1,1(0,1)
         BCT   R10,BLL2
         STC   R10,*+5
         MVC   ERBUF+7(*-*),0(1)
         PRINTA '  LRECL='
         MVC   ERBUF+15(6),CDATE
         PRINTA '  CREATION DATE='
         MVC   ERBUF+17(6),EDATE
         PRINTA '  EXPIRATION DATE='
         MVC   ERBUF+17(6),DSSN
         PRINTA '  DATA SET SERIAL='
         MVC   ERBUF+9(7),=C'800 BPI'
         CLI   DENSITY,C'2'
         BE    DENOK
         MVC   ERBUF+9(8),=C'1600 BPI'
         CLI   DENSITY,C'3'
         BE    DENOK
         MVC   ERBUF+9(8),=C'6250 BPI'
         CLI   DENSITY,C'4'
         BE    DENOK
         MVC   ERBUF+9(8),=CL8'???'
DENOK    PRINTA '  DENSITY='
         MVC   ERBUF+17(17),JJSTEP
         PRINTA '  JOB/JOB STEP ID='
NLX      PRINTF ' *START TO COPY USER DATA'
         SWT   ON,DATASW
         SR    R0,R0
         ST    R0,BLKCNT
         ST    R0,MAXBLK
         L     R0,=A(32768)
         ST    R0,MINBLK
TLOP2    LA    R10,RIOB                 POINT TO INPUT IOB
         BAL   LKREG,READ               READ RECORD
         B     *+4(15)
         B     *+12
         B     TPMK2
         B     ER23X
         L     R1,BLKCNT
         LA    R1,1(0,R1)
         ST    R1,BLKCNT
         C     R7,MAXBLK
         BNH   *+12                     BR. IF NOT HIGHER THAN HIGHHEST
         ST    R1,MXBLKN
         ST    R7,MAXBLK
         C     R7,MINBLK
         BNL   *+12
         ST    R1,MNBLKN
         ST    R7,MINBLK
         LA    R10,WIOB
         BAL   LKREG,WRITE
         B     TLOP2
*
*          COME HERE WHEN TAPE MARK FOUND WHILE READING USER DATA
*
TPMK2    BAL   LKREG,WTPMK              WRITE TAPE MARK
         SWT   TEST,(DASDRSW)
         BZ    NDASDR1                  IF NOT DASDR, THEN END OF DATA
         SWT   TEST,DASDRP
         BO    NDASDR1                  BR IF ALREADY PASSED DASDR TPMK
DASDRL   SWT   ON,DASDRP                MARK DASDR TAPE MARK PASSED
         PRINTF ' *DASDR TAPE MARK PASSED, CONTINUE'
         B     TLOP2
NDASDR1  PRINTF ' --- END OF USER DATA'
         SWT   OFF,DASDRP
         SWT   TEST,(LABELSW,DASDRSW)
         BZ    ENDD                     IF NOT LEBELED, THEN EOD-SET
         LA    R6,=C'EOD'
         PRINTF ' *READ EOD/EOV-1'
         CALL  HEADER                   PROCESS TRALER LABEL-1
         B     *+4(15)
         B     *+16
         B     NLAB2
         B     ER24
         B     ER23
         PRINTF ' --- COMPLETED'
         PRINTF ' *READ EOD/EOV-2'
         CALL  HEADER
         B     *+4(15)
         B     *+16
         B     ER24
         B     ER15
         B     ER23
         PRINTF ' --- COMPLETED'
         LA    R6,=C'UTL'
         PRINTF ' *CHECK FOR USER TRAILER LABELS'
TLOP4    CALL  HEADER
         B     *+4(15)
         B     *+16
         B     ER15
         B     TPMK3
         B     ER23
         PRINTF ' --- USER TRAILER LABEL PASSED'
         B     TLOP4
TPMK3    BAL   LKREG,WTPMK              WRITE A TAPE MARK
ENDD     BAL   LKREG,PSTAT              PRINT FILE STATISTICS
         B     DSLOP
NLAB2    SWT   TEST,TLABELSW
         BZ    ER15                     IF NOT TEST LABEL, THEN ILLEGAL
         SWT   OFF,(TLABELSW,LABELSW)
         SWT   ON,DASDRSW
         PRINTA '0 LABEL TEST, TAPE CONTAINS ''DASDR'' DATA SET'
         PRINTA
         LA    R10,RIOB
         BAL   LKREG,BSPBLK
         B     DASDRL
         SPACE 2
ER24     ERROR (E,8),'UNEXPECTED TAPE MARK WHILE PROCESSING LABELS'
ER23     ERROR (E,8),'UNEXPECTED END OF VOLUME '
ER23X    SWT   TEST,(LABELSW,DASDRSW)
         BNZ   ER23
ENDV1    SWT   TEST,MODSW
         BZ    NOMOD1                   BR. IF NOT MOD
         PRINTA '0START CONCATENATION OF ''FROM'' VOLUME'
         SWT   OFF,MODSW
         PRINTF ' *BACK SPACE OVER TAPE MARK TO START MOD'
         LA    R10,RIOB
*        BACK SPACE OVER TAPE MARK REQUIRES BACK SPACE, SPACE
         BAL   LKREG,BSPBLK             SPACE BACK OVER TAPE MARK
         BAL   LKREG,SPACE
         PRINTF ' --- COMPLETED'
         MVC   RIOB,IOBSAV              RESTORE IOB
         LA    R10,RIOB
         BAL   LKREG,REWIND
         SWT   TEST,LABELSW
         BZ    NL3                      BR. IF NOT LABELED
         BAL   LKREG,SPACE              SPACE OVER VOL. LABEL
NL3      SWT   ON,CPYSW
         B     DSLOPNC
NOMOD1   BAL   LKREG,WTPMK
         PRINTA '0 END OF TAPE VOLUME'
         PRINTA
         BNOPEN TAPEOUT,NCL1
         CLOSE (TAPEOUT)
NCL1     CLOSE (TAPEIN)
         GOBCK 0
         EJECT
*          ROUTINE TO PROCESS VOLUME LABEL
         SPACE 2
TLABEL   CSECT
         CNSRV 13
         SWT   TEST,CPYSW
         BZ    NCPY1                    BR. IF NO COPY
         SWT   TEST,MODSW
         BO    CKVOL1
         SWT   TEST,CPYVLID
         BZ    CKVOL1
         CLI   TOLOC,0
         BE    LABLOK2
CKVOL1   DS    0H
         LA    R10,WIOB
         PRINTF ' *READ ''TO'' TAPE LABEL'
         BAL   LKREG,REWIND
         BAL   LKREG,READ
         LTR   15,15
         BNZ   ER10
         L     R1,BUFAD
         USING LABELSCT,R1
         CLC   VOLLABI(4),=C'VOL1'      CHECK IF VOL1 LABEL
         BNE   ER10
         MVC   TOVOLSER(6),VOLSERNO     SAVE TO VOL. SER
         CLI   TOLOC,0
         BE    *+14                     SKIP IF NO TOVOLSER SPEC
         CLC   VOLSERNO(6),TOLOC        COMPARE IF CORRECT TO TAPE
         BNE   ER11                     BR. IF NOT
         PRINTF ' --- COMPLETED'
         MVC   ERBUF+19(6),TOVOLSER
         PRINTA '0   ''TO'' VOLUME SER='
LABLOK2  LA    R10,WIOB
         BAL   LKREG,REWIND
         MVC   ERBUF+19(6),FRVOLSER
NCPY1    LA    R10,RIOB
         PRINTF ' *READ ''FROM'' TAPE LABEL'
         BAL   LKREG,REWIND             REWIND INPUT TAPE
         BAL   LKREG,READ               READ INPUT LABEL
         LTR   15,15
         BNZ   NLAB1
         C     R7,=F'80'
         BNE   NLAB1
         L     R1,BUFAD
         CLC   VOLLABI(4),=C'VOL1'
         BNE   NLAB1
         MVC   FRVOLSER(6),VOLSERNO
         MVC   ERBUF+19(6),FRVOLSER     GET VOL.SER
         PRINTA '  ''FROM'' VOLUME SER='
         CLI   FROMLOC,0
         BE    NCKVL
         CLC   FRVOLSER(6),FROMLOC      CHECK FOR CORRECT VOL-SER
         BNE   ER12
NCKVL    CLI   OWNER,X'00'
         BE    *+10
         MVC   BUFFER+VOLOWNER-LABELSCT(10),OWNER
         MVC   NOWNER(10),BUFFER+VOLOWNER-LABELSCT
         MVC   ERBUF+9(10),NOWNER
         PRINTA '  OWNERID='
         PRINTA
         PRINTF ' --- COMPLETED'
         SWT   TEST,CPYVLID
         BZ    WSPACE                   SPACE IF CPYVOLID=NO
         CLI   NEWVOL,0
         BE    *+10
         MVC   BUFFER+VOLSERNO-LABELSCT(6),NEWVOL
         MVC   TOVOLSER(6),BUFFER+VOLSERNO-LABELSCT
         MVC   ERBUF+23(6),TOVOLSER
         PRINTA '  ''TO'' VOLUME SER NOW - '
         LA    R10,WIOB                 PREPARE TO WRITE LABEL
         PRINTF ' *COPY ''FROM'' TAPE LABEL'
         BAL   LKREG,WRITE
TLABEX   PRINTF ' --- COMPLETED'
TLABEX1  SR    15,15
         GOBCK (15)
WSPACE   SWT   TEST,CPYSW
         BZ    TLABEX1
         PRINTF ' *SPACE OVER ''TO'' LABEL'
         LA    R10,WIOB
         BAL   LKREG,SPACE
         B     TLABEX
NLAB1    SWT   TEST,TLABELSW
         BZ    ER15
         PRINTA '0 LABEL TEST, TAPE IS UNLABELED'
         SWT   OFF,(LABELSW,DASDRSW,TLABELSW)
         LA    15,4
         B     TLABEX1+2
         DROP  R1,R13
         EJECT
***********************************************************************
*                                                                     *
*          ROUTINE TO HANDLE HEADER AND TRAILER LABELS                *
*                                                                     *
***********************************************************************
         SPACE 2
HEADER   CSECT
         CNSRV 13
         LA    R10,RIOB
         BAL   LKREG,READ               READ LABEL
         B     *+4(15)
         B     *+12
         B     TPMK0
         B     TTPMK
         C     R7,=F'80'
         BNE   NNHDR
         L     R1,BUFAD
         CLC   0(3,R1),0(R6)            CHECK LABEL INDICATOR
         BNE   NHDR                     BR. IF NOT EXPECTED LABEL
         CLC   0(4,R1),=C'HDR1'
         BNE   NHDR1                    BR. IF NOT HDR1
         SWT   TEST,CPYSW
         BZ    NCHNG                    BR. IF NOT COPY
CHNG     MVC   BUFFER+DSSN-LABEL1(6),TOVOLSER
NCHNG    MVC   LABEL1(80),0(R1)         GET HDR1 LABEL
NHDR1    CLC   0(4,R1),=C'HDR2'
         BNE   NHDR2A
         MVC   LABEL2(80),0(R1)         GET HDR2
         SWT   TEST,CPYSW
         BZ    NHDR2A
         CLC   TAPEOUT+18(1),TAPEIN+18 COMPARE THE DENSITIES
         BE    NHDR2A
         CLI   TAPEOUT+18,B'10000011'
         BNE   NOT2
         MVI   DENSITY,C'2'
         B     NHDR2A
NOT2     CLI   TAPEOUT+18,B'11000011'
         BNE   NOT3
         MVI   DENSITY,C'3'
         B     NHDR2A
NOT3     CLI   TAPEOUT+18,B'11010011'
         BNE   NHDR2A
         MVI   DENSITY,C'4'
NHDR2A   SWT   TEST,CPYSW
         BZ    NHDR2
         PRINTF ' --- LABEL WRITTEN'
NHDR2    LA    R10,WIOB
         BAL   LKREG,WRITE
         SR    15,15
GBCK     GOBCK (15)
NHDR     CLC   0(2,R6),=C'EO'
         BNE   NNHDR
*          TRY SOME MORE CHARACTER GROUPS IF TRAILER LABELS
         CLC   0(3,R1),=C'EOF'
         BE    NHDR1
         CLC   0(3,R1),=C'EOV'
         BNE   NNHDR
         PRINTA '  MULTI-VOLUME DATA-SET'
         B     NHDR1
NNHDR    LA    15,4
         B     GBCK
TPMK0    LA    15,8
         B     GBCK
TTPMK    LA    15,12
         B     GBCK
         EJECT
CIO      CSECT
         PRINT GEN
RIOB     IOB   ECB=RECB,                                               X
               DCB=TAPEIN,                                             X
               FLAG1=B'00000010'
         SPACE 2
WIOB     IOB   ECB=WECB,                                               X
               DCB=TAPEOUT,                                            X
               FLAG1=B'00000010'
         SPACE 5
IOBSAV   IOB   DCB=TAPEIN               SAVE AREA FOR RIOB FOR ''MOD''
RECB     DC    F'0'
WECB     DC    F'0'
         PRINT NOGEN
TAPEIN   DCB   DDNAME=SYSUT1,                                          X
               MACRF=(E),                                              X
               DSORG=PS,                                               X
               DEVD=TA,                                                X
               IOBAD=RIOB,                                             X
               EODAD=ER21
         SPACE 5
TAPEOUT  DCB   DDNAME=SYSUT2,                                          X
               MACRF=(E),                                              X
               DSORG=PS,                                               X
               DEVD=TA,                                                X
               IOBAD=WIOB,                                             X
               EODAD=ER22
         SPACE 5
BUFAD    DC    A(BUFFER)
*
         PRINT NOGEN
SYSIN    DCB   DDNAME=SYSIN,                                           X
               LRECL=80,                                               X
               EODAD=EOD,                                              X
               DSORG=PS,                                               X
               MACRF=GL,                                               X
               EXLST=DCBE1
         SPACE 2
         DCBE  EXLST=DCBE1,                                            X
               RECFM=F,                                                X
               XRECFM=(S,B,T),                                         X
               BUFNO=(5,10)
         SPACE 5
SYSOUT   DCB   DDNAME=SYSPRINT,                                        X
               DSORG=PS,                                               X
               MACRF=PM,                                               X
               EXLST=DCBE2
         SPACE 2
         DCBE  EXLST=DCBE2,                                            X
               LRECL=(121,133),                                        X
               RECFM=FA,                                               X
               XRECFM=(S,B,T),                                         X
               CHECK=F,                                                X
               BUFNO=(5,10)
         SPACE 5
         PRINT GEN
         DEFSW
         PRINT NOGEN
         SPACE 5
***********************************************************************
*                                                                     *
*          ALL THE CCW-S
*                                                                     *
***********************************************************************
         SPACE 2
RWCCW    CCW   X'07',0,0,4              REWIND
BSPCCW   CCW   X'27',0,0,4              BACK SPACE BLOCK
SPCCW    CCW   X'37',0,0,4              FORWARD SPACE BLOCK
RCCW     CCW   X'02',BUFFER,X'20',32767     READ CCW
WCCW     CCW   X'01',BUFFER,X'20',*-*
*
WTMKCCW  CCW   X'1F',0,X'40',4          WRITE TAPE MARK
NOPCCW   CCW   X'03',0,0,4              CHAINED TO NOP
SENSCCW  CCW   X'04',SENSED,X'20',4
         SPACE 5
         DC    C' '
OWNER    DC    CL10' '
NOWNER   DC    CL10'$$$$$$$$$$'
         DC    C' '
WANT     DC    CL8' '
         DC    C' '
ERBUF    DC    CL133' '
NEWVOL   DS    D'0'
CBUFAD   DC    F'0'
GBUG     DC    F'0'
MASK2    DC    C'  MAX BLOCK LEN='
         DC    X'402020202120'
         DC    C', POSITION='
         DC    X'402020202120'
MAXBLK   DC    F'0'
MINBLK   DC    F'32768'
MNBLKN   DC    F'0'
MXBLKN   DC    F'0'
MASK1    DC    C'FILE SEQ. NO.='
         DC    X'40202120'
SENSED   DC    X'0000000000000000'
DWRD     DC    D'0'
BLKCNT   DC    F'0'
DSCNT    DC    F'0'
TOLOC    DC    D'0'
FROMLOC  DC    D'0'
TOVOLSER DC    D'0'
FRVOLSER DC    D'0'
DDNAM2   DC    C'SYSUT2'
UT2UN    DC    C'XXX'
UT1UN    DC    C'XXX'
TIOT     DC    F'0'
         LTORG
         EJECT
*
*          HEADER LABEL 1
*
         SPACE 2
LABEL1   DC    CL80' '
         ORG   LABEL1
LABELID  DS    CL4
DSNAME   DS    CL17
DSSN     DS    CL6
VOLSEQ   DS    CL4
DSSEQ    DS    CL4
GENNO    DS    CL4
VERNO    DS    CL2
CDATE    DS    CL6
EDATE    DS    CL6
DSSI     DS    CL1
BLKCNTT  DS    CL6
         ORG
         SPACE 5
*
*          HEADER LABEL 2
*
         SPACE 2
LABEL2   DC    CL80' '
         ORG   LABEL2
LABELID2 DS    CL4
RECFM    DS    CL1
RECSIZE  DS    CL5
BLKSF    DS    CL5
DENSITY  DS    CL1
DSPOS    DS    CL1
JJSTEP   DS    CL17
         DS    2X
PRCNTRL  DS    X
         DS    X
BLKATT   DS    X
         ORG
         EJECT
BUFFER   DS    CL32767
         DS    CL10
         PRINT GEN
IOB      IOBD
*          LABEL DSECT
LABELSCT DSECT
VOLLABI  DS    CL3
VOLNO    DS    CL1
VOLSERNO DS    CL6
         DS    XL10
VOLVTOC  DS    CL10
         DS    XL20
VOLOWNER DS    CL10
         DS    XL29
         SPACE 5
         END   TCOPY
