         PRINT OFF
         MACRO
&NAME    SAVEALL    &RENT,&REG=3,&EQU=YES
         GBLB  &SAVRENT
         GBLB  &REGSW
         GBLB  &TIME
         GBLC  &SAVNDX
&SAVNDX  SETC  '&SYSNDX'
&NAME    CSECT
         AIF   ('&SAVRENT' EQ '1').NOTFREE
         AIF   ('&REGSW' EQ '1').NOEQU
         AIF   ('&EQU' NE 'YES').NOEQU
&REGSW   SETB  1
         SPACE 2
***********************************************************************
********           DEFINITION OF GENERAL REGISTERS             ********
***********************************************************************
R0       EQU   0    GENERAL REGISTER ZERO
R1       EQU   1    GENERAL REGISTER ONE
R2       EQU   2    GENERAL REGISTER TWO
R3       EQU   3    GENERAL REGISTER THREE
R4       EQU   4    GENERAL REGISTER FOUR
R5       EQU   5    GENERAL REGISTER FIVE
R6       EQU   6    GENERAL REGISTER SIX
R7       EQU   7    GENERAL REGISTER SEVEN
R8       EQU   8    GENERAL REGISTER EIGHT
R9       EQU   9    GENERAL REGISTER NINE
R10      EQU   10   GENERAL REGISTER TEN
R11      EQU   11   GENERAL REGISTER ELEVEN
R12      EQU   12   GENERAL REGISTER TWELVE
R13      EQU   13   GENERAL REGISTER THIRTEEN
R14      EQU   14   GENERAL REGISTER FOURTEEN
R15      EQU   15   GENERAL REGISTER FIFTEEN
         SPACE 1
RA       EQU   10   GENERAL REGISTER TEN
RB       EQU   11   GENERAL REGISTER ELEVEN
RC       EQU   12   GENERAL REGISTER TWELVE
RD       EQU   13   GENERAL REGISTER THIRTEEN
RE       EQU   14   GENERAL REGISTER FOURTEEN
RF       EQU   15   GENERAL REGISTER FIFTEEN
***********************************************************************
********             END OF REGISTER DEFINITIONS               ********
***********************************************************************
         SPACE 2
.NOEQU   ANOP
         SAVE  (14,12),,*
         AIF   ('&REG' EQ '').MESS
         BALR  &REG(1),0
         AIF   (N'&REG EQ 1).A
         AIF   (N'&REG EQ 2).B
         AIF   (N'&REG EQ 3).C
         AIF   (N'&REG EQ 4).D
         AIF   (N'&REG EQ 5).E
         MNOTE *****,'EXCESSIVE BASE REGISTERS -- 5 ASSUMED *****'
         AGO   .E
.MESS    MNOTE 12,'***** NO BASE REGISTER SPECIFIED *****'
         MEXIT
.NOTFREE MNOTE 12,'***** ENDALL NOT ISSUED PRIOR TO NEW SAVEALL *****'
         MEXIT
.E       USING *,&REG(1),&REG(2),&REG(3),&REG(4),&REG(5)
Q&SYSNDX L     &REG(2),=A(Q&SYSNDX+4096)     LOAD BASE REGISTERS
         L     &REG(3),=A(Q&SYSNDX+8192)
         L     &REG(4),=A(Q&SYSNDX+12288)
         L     &REG(5),=A(Q&SYSNDX+16384)
         AGO   .END
.D       USING *,&REG(1),&REG(2),&REG(3),&REG(4)
Q&SYSNDX L     &REG(2),=A(Q&SYSNDX+4096)     LOAD BASE REGISTERS
         L     &REG(3),=A(Q&SYSNDX+8192)
         L     &REG(4),=A(Q&SYSNDX+12288)
         AGO   .END
.C       USING *,&REG(1),&REG(2),&REG(3)
Q&SYSNDX L     &REG(2),=A(Q&SYSNDX+4096)     LOAD BASE REGISTERS
         L     &REG(3),=A(Q&SYSNDX+8192)
         AGO   .END
.B       USING *,&REG(1),&REG(2)
Q&SYSNDX L     &REG(2),=A(Q&SYSNDX+4096)     LOAD BASE REGISTER
         AGO   .END
.A       USING *,&REG(1)
.END     ANOP
         AIF   ('&RENT' NE 'RENT').NORENT
&SAVRENT SETB  1
         GETMAIN    R,LV=72        GET STORAGE FOR SAVE AREA
         ST    13,4(1)             SET UP FORWARD CHAIN
         ST    1,8(13)             SET UP BACKWARD CHAIN
         L     0,20(0,13)          RESET REGISTER 0
         L     1,24(0,13)          RESET REGISTER 1
         L     13,8(0,13)          LOAD SAVE AREA ADDRESS
         AGO   .RENT
.NORENT  ANOP
&TIME    SETB  1
         ST    13,SAVE&SYSNDX+4    SET UP FORWARD CHAIN
         LA    1,SAVE&SYSNDX
         ST    1,8(0,13)           SET UP BACKWARD CHAIN
         L     1,24(0,13)          RESET REGISTER 1
         LA    13,SAVE&SYSNDX
         B     J&SYSNDX           BRANCH AROUND BASE REGISTER CONST
SAVE&SYSNDX DC 18F'0'
.RENT    ANOP
         LTORG
J&SYSNDX DS    0H
         EJECT
         MEND
         MACRO
&NAME    ENDALL &CODE=
         GBLB  &TIME
         GBLB  &SAVRENT
         GBLC  &SAVNDX
         AIF   ('&CODE' GT '4095').MESS1
&NAME    DS    0H
         AIF   (NOT &SAVRENT).NOTRENT
&SAVRENT SETB  0
         LR    1,13                LOAD SAVE AREA ADDRESS
         L     13,4(0,13)          RE-LOAD REGISTER 13
         LA    0,72                LOAD NUMBER OF BYTES TO BE FREED
         FREEMAIN   R,LV=(0),A=(1) FREE SAVE AREA STORAGE
         AGO   .RENT
.NOTRENT ANOP
         AIF   (NOT &TIME).NOSAVE
&TIME    SETB  0
         L     13,SAVE&SAVNDX+4    RE-LOAD REGISTER 13
.RENT    ANOP
         AIF   ('&CODE' EQ '(15)').ENDIT
         AIF   ('&CODE' EQ '').COND1
         LA    15,&CODE           LOAD CODE TO REG 15
         AGO   .ENDIT
.MESS1   MNOTE 12,'***** RETURN CODE PASSED GREATER THAN 4095 *****'
         MEXIT
.NOSAVE  MNOTE 12,'***** SAVEALL NOT ISSUED PRIOR TO ENDALL *****'
         MEXIT
.COND1   LA    15,0               LOAD ZERO (NO CODE) TO REG 15
.ENDIT   ANOP
         RETURN     (14,12),T,RC=(15)
         MEND
SMFSCAN  TITLE 'FAST SCANNER FOR SMF DATASET'
         MACRO
         JOBCHEK &PLACE
         TM    FLAG,X'88'
         BNO   @J&SYSNDX
         SR    R14,R14
         IC    R14,@JOBLEN
         LA    R1,&PLACE
         EX    R14,@JOB
         BNE   NEXREC
*        TEST FOR JOBNAME EQUIVALENCE IF JOB SELECTION ACTIVE ***
         SPACE
@J&SYSNDX DS  0H .
         MEND
         MACRO
         PGMCHEK &PLACE
         TM    FLAG,X'84'
         BNO   @P&SYSNDX
         SR    R14,R14
         IC    R14,@PGMLEN
         LA    R1,&PLACE
         EX    R14,@PGM
         BNE   NEXREC
*        TEST FOR PGMNAME EQUIVALENCE IF PGM SELECTION ACTIVE ***
         SPACE
@P&SYSNDX DS  0H .
         MEND
         MACRO
         NOTJOB
         TM    FLAG,X'80'
         BO    NEXREC
*        DO NOT PROCESS THIS RECORD TYPE IF JOB SELECTION ACTIVE ***
         SPACE
         MEND
         MACRO
&NAME    JESTYPE &N
         LA    1,SMF&N.SBS
         L     15,=A(SUBSYS)
         BALR  14,15
*              NAME OF SUBSYSTEM IS IN R0 AT THIS TIME
         SPACE
         MEND
         MACRO
&NAME    SAVEALL    &RENT,&REG=3,&EQU=YES
         GBLB  &SAVRENT
         GBLB  &REGSW
         GBLB  &TIME
         GBLC  &SAVNDX
&SAVNDX  SETC  '&SYSNDX'
&NAME    CSECT
         AIF   ('&SAVRENT' EQ '1').NOTFREE
         AIF   ('&REGSW' EQ '1').NOEQU
         AIF   ('&EQU' NE 'YES').NOEQU
&REGSW   SETB  1
         SPACE 2
***********************************************************************
********           DEFINITION OF GENERAL REGISTERS             ********
***********************************************************************
R0       EQU   0    GENERAL REGISTER ZERO
R1       EQU   1    GENERAL REGISTER ONE
R2       EQU   2    GENERAL REGISTER TWO
R3       EQU   3    GENERAL REGISTER THREE
R4       EQU   4    GENERAL REGISTER FOUR
R5       EQU   5    GENERAL REGISTER FIVE
R6       EQU   6    GENERAL REGISTER SIX
R7       EQU   7    GENERAL REGISTER SEVEN
R8       EQU   8    GENERAL REGISTER EIGHT
R9       EQU   9    GENERAL REGISTER NINE
R10      EQU   10   GENERAL REGISTER TEN
R11      EQU   11   GENERAL REGISTER ELEVEN
R12      EQU   12   GENERAL REGISTER TWELVE
R13      EQU   13   GENERAL REGISTER THIRTEEN
R14      EQU   14   GENERAL REGISTER FOURTEEN
R15      EQU   15   GENERAL REGISTER FIFTEEN
         SPACE 1
RA       EQU   10   GENERAL REGISTER TEN
RB       EQU   11   GENERAL REGISTER ELEVEN
RC       EQU   12   GENERAL REGISTER TWELVE
RD       EQU   13   GENERAL REGISTER THIRTEEN
RE       EQU   14   GENERAL REGISTER FOURTEEN
RF       EQU   15   GENERAL REGISTER FIFTEEN
***********************************************************************
********             END OF REGISTER DEFINITIONS               ********
***********************************************************************
         SPACE 2
.NOEQU   ANOP
         SAVE  (14,12),,*
         AIF   ('&REG' EQ '').MESS
         BALR  &REG(1),0
         AIF   (N'&REG EQ 1).A
         AIF   (N'&REG EQ 2).B
         AIF   (N'&REG EQ 3).C
         AIF   (N'&REG EQ 4).D
         AIF   (N'&REG EQ 5).E
         MNOTE *****,'EXCESSIVE BASE REGISTERS -- 5 ASSUMED *****'
         AGO   .E
.MESS    MNOTE 12,'***** NO BASE REGISTER SPECIFIED *****'
         MEXIT
.NOTFREE MNOTE 12,'***** ENDALL NOT ISSUED PRIOR TO NEW SAVEALL *****'
         MEXIT
.E       USING *,&REG(1),&REG(2),&REG(3),&REG(4),&REG(5)
Q&SYSNDX L     &REG(2),=A(Q&SYSNDX+4096)     LOAD BASE REGISTERS
         L     &REG(3),=A(Q&SYSNDX+8192)
         L     &REG(4),=A(Q&SYSNDX+12288)
         L     &REG(5),=A(Q&SYSNDX+16384)
         AGO   .END
.D       USING *,&REG(1),&REG(2),&REG(3),&REG(4)
Q&SYSNDX L     &REG(2),=A(Q&SYSNDX+4096)     LOAD BASE REGISTERS
         L     &REG(3),=A(Q&SYSNDX+8192)
         L     &REG(4),=A(Q&SYSNDX+12288)
         AGO   .END
.C       USING *,&REG(1),&REG(2),&REG(3)
Q&SYSNDX L     &REG(2),=A(Q&SYSNDX+4096)     LOAD BASE REGISTERS
         L     &REG(3),=A(Q&SYSNDX+8192)
         AGO   .END
.B       USING *,&REG(1),&REG(2)
Q&SYSNDX L     &REG(2),=A(Q&SYSNDX+4096)     LOAD BASE REGISTER
         AGO   .END
.A       USING *,&REG(1)
.END     ANOP
         AIF   ('&RENT' NE 'RENT').NORENT
&SAVRENT SETB  1
         GETMAIN    R,LV=72        GET STORAGE FOR SAVE AREA
         ST    13,4(1)             SET UP FORWARD CHAIN
         ST    1,8(13)             SET UP BACKWARD CHAIN
         L     0,20(0,13)          RESET REGISTER 0
         L     1,24(0,13)          RESET REGISTER 1
         L     13,8(0,13)          LOAD SAVE AREA ADDRESS
         AGO   .RENT
.NORENT  ANOP
&TIME    SETB  1
         ST    13,SAVE&SYSNDX+4    SET UP FORWARD CHAIN
         LA    1,SAVE&SYSNDX
         ST    1,8(0,13)           SET UP BACKWARD CHAIN
         L     1,24(0,13)          RESET REGISTER 1
         LA    13,SAVE&SYSNDX
         B     J&SYSNDX           BRANCH AROUND BASE REGISTER CONST
SAVE&SYSNDX DC 18F'0'
.RENT    ANOP
         LTORG
J&SYSNDX DS    0H
         EJECT
         MEND
         MACRO
&NAME    ENDALL &CODE=
         GBLB  &TIME
         GBLB  &SAVRENT
         GBLC  &SAVNDX
         AIF   ('&CODE' GT '4095').MESS1
&NAME    DS    0H
         AIF   (NOT &SAVRENT).NOTRENT
&SAVRENT SETB  0
         LR    1,13                LOAD SAVE AREA ADDRESS
         L     13,4(0,13)          RE-LOAD REGISTER 13
         LA    0,72                LOAD NUMBER OF BYTES TO BE FREED
         FREEMAIN   R,LV=(0),A=(1) FREE SAVE AREA STORAGE
         AGO   .RENT
.NOTRENT ANOP
         AIF   (NOT &TIME).NOSAVE
&TIME    SETB  0
         L     13,SAVE&SAVNDX+4    RE-LOAD REGISTER 13
.RENT    ANOP
         AIF   ('&CODE' EQ '(15)').ENDIT
         AIF   ('&CODE' EQ '').COND1
         LA    15,&CODE           LOAD CODE TO REG 15
         AGO   .ENDIT
.MESS1   MNOTE 12,'***** RETURN CODE PASSED GREATER THAN 4095 *****'
         MEXIT
.NOSAVE  MNOTE 12,'***** SAVEALL NOT ISSUED PRIOR TO ENDALL *****'
         MEXIT
.COND1   LA    15,0               LOAD ZERO (NO CODE) TO REG 15
.ENDIT   ANOP
         RETURN     (14,12),T,RC=(15)
         MEND
       PRINT ON
       PRINT NOGEN
TAPE     SAVEALL REG=(11,3)
*
* THIS PROGRAM NEEDS 'SYS1.AMODGEN' AS PART OF SYSLIB
*
*        ESTAB SECND=11            SAVE REGS AND SET UP
*                                  ADDRESSABILITY.
         MVI   FLAG,X'00'
         USING SMFRCD0,R5          COMMON RECORD SEGMENT.
         OPEN  SMFTP               OPEN THE TAPE FILE.
         OPEN  (OUT,OUTPUT)
         OPEN  INPUT
         TPUT  MSG0,80
         PUT   OUT,MSG0
*        PUT   OUT,MSG1
         TPUT   BLANKS,80
         TPUT  MSG1,80
*        PUT   OUT,MSG1
         GET   INPUT
         LR    R5,R1
         PACK  WORK,0(4,R5)
         PACK  WORK2,4(4,R5)
         CVB   R10,WORK
         MH    R10,=H'3600'
         ST    R10,STIME
         CVB   R10,WORK2
         MH    R10,=H'3600'
         ST    R10,QTIME
         TPUT  MSG2,80
*        PUT   OUT,MSG2
         GET   INPUT
         LR    R5,R1
         CLC   0(3,5),=C'ALL'
         BE    DOALL
         MVC   DSN(44),0(5)   GET DSN TO CHECK
         MVI   ALLFLAG,X'00'
         B     NOMEND
DOALL    MVI   ALLFLAG,X'FF'
NOMEND   EQU   *
         TPUT  MSG3,80
*        PUT   OUT,MSG3
         GET   INPUT
         CLC   0(3,1),=C'ALL'
         BE    BLK
         MVI   JOBFLAG,X'FF'
         MVC JSCAN(8),0(1)
BLK      TPUT  BLANKS,80
         CLOSE INPUT
         TPUT  MSG0A,80
NEXREC   EQU   *
         GET   SMFTP               READ THE TAPE.
         LR    R5,R1               SAVE THE BUFFER ADDRESS.
*        CLC   SMF0SID,=C'H158'    CHECK FOR ACTUAL RECORD.
*        BNE   NEXREC              READ AGAIN IF NOT.
         SPACE
         CLI   JOBFLAG,X'FF'
         BNE   OKAYED
         CLC   JSCAN(8),18(R5)
         BNE   NEXREC
OKAYED   CLI   SMF0RTY,X'02'       CHECK FOR HEADER REC.
         BE    NEXREC              IF SO, SKIP IT.
         CLI   SMF0RTY,X'03'       CHECK FOR TRAILER REC.
         BE    NEXREC              IF SO, SKIP IT.
         MVC   TIME,SMF0TME
         CLC   TIME,STIME
         BL    NEXREC
         CLC   TIME,QTIME        THIS DOESNT WORK YET
         BH    EOF                   "" ""
         CLI   SMF0RTY,X'0E'       WE ONLY WANT DATASET STUFF HERE
         BE    DASIN
         CLI   SMF0RTY,X'0F'
         BE    DASOUT
         CLI   SMF0RTY,X'11'
         BE    DASCR
         CLI   SMF0RTY,X'12'
         BE    RENAME
         B     NEXREC
EOF      EQU   *
         CLOSE SMFTP               CLOSE THE TAPE FILE.
         CLOSE OUT
*        EXIT  RC=0                ....AND EXIT.
         B     END
         EJECT
DASIN    EQU   *
         USING SMF14LEN,R5
         TM    SMF14RIN,X'10'
         BO    NEXREC
         CLI   ALLFLAG,X'FF'
         BE    A#1
         CLC   SMFJFCB1(44),DSN
         BNE   NEXREC
A#1      BAL   R14,TIMED
         MVC   MESG(32),=C'JOB XXXXXXXX HAS READ FROM NAME='
         MVC   MESG+4(8),SMF14JBN
         MVC   MESG+32(44),SMFJFCB1
         MVC   MESG+76(14),=C'DEV ADDR = XXX'
         XC    WORD(4),WORD
         MVC   WORD(2),268(R5)
         UNPK  OUTW(5),WORD(3)
         TR    OUTW+1(3),TAB
         MVC   MESG+87(3),OUTW+1
         MVC   MESG+90(13),=C' VOLUME=XXXXXX'
         MVC   MESG+98(6),270(R5)
         PUT   OUT,LINE
         B     NEXREC
         SPACE 3
DASOUT   EQU   *
         TM    SMF14RIN,X'10'
         BO    NEXREC
         CLI   ALLFLAG,X'FF'
         BE    A#2
         CLC   SMFJFCB1(44),DSN
         BNE   NEXREC
A#2      BAL   R14,TIMED
         MVC   MESG(33),=C'JOB XXXXXXXX HAS WRITTEN TO NAME='
         MVC   MESG+4(8),SMF14JBN
         MVC   MESG+33(44),SMFJFCB1
         MVC   MESG+76(14),=C'DEV ADDR = XXX'
         XC    WORD(4),WORD
         MVC   WORD(2),268(R5)
         UNPK  OUTW(5),WORD(3)
         TR    OUTW+1(3),TAB
         MVC   MESG+87(3),OUTW+1
         MVC   MESG+90(13),=C' VOLUME=XXXXXX'
         MVC   MESG+98(6),270(R5)
         PUT   OUT,LINE
         B     NEXREC
         SPACE 3
DASCR    EQU   *
         USING SMF17LEN,R5
         CLI   ALLFLAG,X'FF'
         BE    A#3
         CLC   SMF17DSN(44),DSN
         BNE   NEXREC
A#3      BAL   R14,TIMED
         MVC   MESG(27),=C'JOB XXXXXXXX HAS SCRATCHED '
         MVC   MESG+4(8),SMF17JBN
         MVC   MESG+27(44),SMF17DSN
         MVC   MESG+88(16),=C'   VOLUME=XXXXXX'
         MVC   MESG+98(6),SMF17FVL
         PUT   OUT,LINE
         B     NEXREC
         SPACE 3
RENAME   EQU   *
         USING SMF18LEN,R5
         CLI   ALLFLAG,X'FF'
         BE    A#4
         CLC   SMF18ODS(44),DSN
         BE    A#4
         CLC   SMF18NDS(44),DSN
         BE    A#4
         B     NEXREC
A#4      BAL   R14,TIMED
         MVC   MESG(22),=C'JOB XXXXXXXX, DATASET '
         MVC   MESG+4(8),SMF18JBN
         MVC   MESG+22(44),SMF18ODS
         LA    R10,MESG+22
RENLOOP  EQU   *
         CLI   0(R10),C' '
         BE    RENGOT
         LA    R10,1(R10)
         B     RENLOOP
RENGOT   EQU   *
         LA    R10,1(R10)
         MVC   0(11,R10),=C'WAS RENAMED'
         MVC   12(44,R10),SMF18NDS
         MVC   MESG+88(16),=C'   VOLUME=XXXXXX'
         MVC   MESG+98(6),SMF18FVL
         PUT   OUT,LINE
         B     NEXREC
         SPACE 3
         SPACE 3
TIMED    EQU   *
         MVC   SYSID(4),SMF0SID-SMFRCD0(R5)
         L     R10,TIME
         CVD   R10,WORK
         DP    WORK,=P'100'
         DP    WORK(6),=P'3600'
         ZAP   WORK2,WORK(3)
         MP    WORK2,=P'10000'
         ZAP   WORK3,WORK+3(3)
         DP    WORK3,=P'60'
         ZAP   WORK,WORK3(6)
         MP    WORK,=P'100'
         AP    WORK2,WORK
         AP    WORK2,WORK3+6(2)
         ZAP   WORK,WORK2
         MVC   LTIME,PAT2
         ED    LTIME,WORK+4
         MVC   MESG(120),BLANKS
         BR    R14
         SPACE 3
CONV     EQU   *
         LA    R6,CHARS
         L     R5,WORK
         SLL   R5,20
         SR    R4,R4
         SLDA  R4,4
         IC    R10,0(R4,R6)
         STC   R10,WORK+1
         SR    R4,R4
         SLDA  R4,4
         IC    R10,0(R4,R6)
         STC   R10,WORK+2
         SR    R4,R4
         SLDA  R4,4
         IC    R10,0(R4,R6)
         STC   R10,WORK+3
         BR    R14
         SPACE 3
         DS    0F
         DS    3X
LINE     DS    0CL133
         DC    C' '
SYSID    DS    CL4
LTIME    DS    CL10
         DC    CL2' '
MESG     DS    CL120
         SPACE
WORK     DS    D
WORK2    DS    D
WORK3    DS    D
TIME     DS    F
STIME    DS    F
QTIME    DS    F
WORD     DC    F'0'
OUTW     DC    CL8' '
JOBNAME  DS    CL8
PGMNAME  DS    CL8
NEXAD    DC    S(NEXREC)
PAT1     DC    X'40202021'
PAT2     DC    X'402020217A20207A2020'
FLAG     DC    X'00'
CHARS    DC    C'0123456789ABCDEF'
MSG0     DC CL133'---------------------------DATASET ACTIVITY DISPLAY--X
               -------------------------'
MSG0A    DC CL133'NOW GATHERING DATA FROM SMF DATASET : PLEASE WAIT'
MSG1     DC CL133' ENTER TIMES, HHMMHHMM  (START END IN 24 HR FORMAT)'
MSG2     DC    CL133' ENTER DSN WITHOUT QUOTES OR ENTER ALL FOR EVERY DX
               ATASET ACTION'
MSG3     DC CL133'PLEASE ENTER JOBNAME OR ALL FOR EVERY JOBNAME'
JOBFLAG  DC    X'00'
JSCAN    DC    CL8' '
BLANKS   DC    CL120' '
BLANK    DC    CL13' '                                             AXC
DSN      DC    CL44' '
ALLFLAG  DC    X'00'
LINENUM  DC    PL3'0'
TAB      DC    XL240'00'
         DC    C'0123456789ABCDEF'
 LTORG
INPUT    DCB   DDNAME=SYSIN,DSORG=PS,MACRF=GL
OUT      DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=PM,LRECL=133,RECFM=FBA,  *
               BLKSIZE=19019
SMFTP    DCB   DDNAME=SMFTPE,DSORG=PS,MACRF=GL,EODAD=EOF,              X
               BFTEK=A,BLKSIZE=32756,LRECL=32756,RECFM=VBS
END      ENDALL
          PRINT OFF
RECDEF   DSECT
RECS     IFASMFR (0,14,17,18)
*        IFASAVR ALL,DSECT=YES,BITS=YES
         END
