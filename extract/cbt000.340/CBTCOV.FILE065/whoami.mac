WHO      TITLE 'DISPLAY TSO USER ID AND OPERATING ENVIRONMENT'
         MACRO
&LABEL   MCON  &MSG
         LCLA  &L
&L       SETA  K'&MSG-2
&LABEL   DC    AL1(&L),C&MSG
         MEND
         SPACE 3
WHO      CSECT
         SAVE  (14,12),,WHO_&SYSDATE_&SYSTIME
         LR    BASE,R15
         USING WHO,BASE
         LA    R15,REGSAVE
         ST    R15,8(,R13)
         ST    R13,4(,R15)
         LR    R13,R15
         LR    LISTPTR,R1               SAVE PARAMETERS POINTER
         BAL   LINK,CLRMSG              INITIALIZE MESSAGE AREA
         SPACE 2
*  USER ID
         LA    POINTER,MSG01            'YOU ARE '
         BAL   LINK,MCON                MOVE CONSTANT TO MESSAGE
         USING CPPL,LISTPTR
         L     POINTER,CPPLPSCB         POINT TO PSCB
         USING PSCB,POINTER
         MVC   USERLEN,PSCBUSRL         GET LENGTH OF USER ID
         MVC   USERDATA,PSCBUSER        GET USER ID DATA
         DROP  POINTER
         LA    POINTER,USERID
         BAL   LINK,MCON                MOVE USERID TO MESSAGE
         SPACE 2
*  DSNAME PREFIX
         L     POINTER,CPPLUPT          POINT TO UPT
         USING UPT,POINTER
         MVC   PRFXLEN,UPTPREFL         GET PREFIX LENGTH
         MVC   PRFXDATA,UPTPREFX        GET PREFIX DATA
         DROP  POINTER
         IC    COUNT,USERLEN            GET LENGTH FOR COMPARE
         EX    COUNT,CPCLC              COMPARE LENGTH AND DATA
         BE    IDOK                     USERID = PREFIX
         LA    POINTER,MSG02            ' ('
         BAL   LINK,MCON                MOVE PAREN INTO MESSAGE
         CLI   PRFXLEN,0                NULL PREFIX?
         BE    CP01                     YES, SPECIAL CASE.
         LA    POINTER,MSG03A           'MASQUERADING AS '
         BAL   LINK,MCON                MOVE CONSTANT TO MESSAGE
         LA    POINTER,PREFIX
         BAL   LINK,MCON                MOVE PREFIX TO MESSAGE
         B     CP02                     CONTINUE MESSAGE
CPCLC    CLC   USERID(0),PREFIX         << EXECUTED >>
CP01     LA    POINTER,MSG03B           'INCOGNITO'
         BAL   LINK,MCON                MOVE CONSTANT TO MESSAGE
CP02     LA    POINTER,MSG04            ')'
         BAL   LINK,MCON                MOVE CONSTANT TO MESSAGE
         SPACE 2
*  TERMINAL NAME (IF WE CAN GET TO IT)
IDOK     L     AUXPTR,X'220'            -> ASCB
         L     AUXPTR,60(,AUXPTR)       -> TSB (FETCH PROTECTED)
         LTR   AUXPTR,AUXPTR            ANY?
         BZ    SKIPTERM                 NO - NO TERMINAL NAME TO DISP
         SPACE 1
         TESTAUTH  FCTN=1               CAN WE DO THIS?
         SPACE 1
         LTR   R15,R15                  WELL?
         BNZ   SKIPTERM                 NO - SO DON'T
         SPACE 1
         MODESET  KEY=ZERO              SET PROTECT KEY = 0
         SPACE 1
         UNPK  LINE-1(5),82(3,AUXPTR)   GET THE LINE ADDRESS
         MVC   TERMID,104(AUXPTR)       AND THE TERMINAL NAME
         SPACE 1
         MODESET  KEY=NZERO             RESTORE PROBLEM KEY
         SPACE 1
         LA    POINTER,MSG08            ' ON TERMINAL '
         BAL   LINK,MCON                MOVE CONSTANT TO MESSAGE
         LA    POINTER,TERMID           POINT TO TERMINAL ID
         LA    AUXPTR,TERMID+7          POINT TO END OF TERMID
TID01    CLI   0(AUXPTR),C' '           END OF TERMID?
         BNE   TID02                    YES
         BCT   AUXPTR,TID01             DECREMENT AND LOOP
TID02    LA    COUNT,1(,AUXPTR)
         SR    COUNT,POINTER            SET ACTUAL LENGTH
         BAL   LINK,MVAR                MOVE TERMID TO MESSAGE
         SPACE 2
*  LINE ADDRESS (IF WE CAN GET TO IT)
         TR    LINE,HEXTAB              MAKE IT REAL HEX
         CLC   =C'000',LINE             ANYTHING HERE?
         BE    SKIPTERM                 NO - SO SKIP IT
         LA    POINTER,MSG09            ' ON LINE '
         BAL   LINK,MCON                MOVE CONSTANT TO MESSAGE
         LA    POINTER,LINE             POINT TO LINE
         LA    COUNT,3                  LENGTH
         BAL   LINK,MVAR                MOVE LINE TO MESSAGE
         SPACE 2
*  CPU MODEL NUMBER
SKIPTERM LA    POINTER,MSG05            ' LOGGED ONTO THE '
         BAL   LINK,MCON                MOVE CONSTANT TO MESSAGE
         L     POINTER,520              LOCATE THE PCCA
         LA    POINTER,12(,POINTER)     POINT TO CPU TYPE
         LR    R15,POINTER                                         U002
         LA    COUNT,4                  ASSUME FOUR BYTES
         CLI   0(POINTER),C'0'          LEADING ZERO?
         BNE   CPUOK                    NO, OK AS IS.
         LA    POINTER,1(,POINTER)      YES, POINT NO NEXT CHAR
         BCTR  COUNT,0                  REDUCE LENGTH
CPUOK    BAL   LINK,MVAR                MOVE CPU TYPE TO MESSAGE
         SPACE 2
*  LIST SMF CPUID                                                  U001
         L     POINTER,16               -> CVT                     U002
         L     POINTER,196(,POINTER)    -> SMCA                    U002
         LA    POINTER,16(,POINTER)     -> SMF ID                  U002
         CLC   0(4,R15),0(POINTER)      IS SMFID = CPU MODEL?      U002
         BE    CHECKVM                  YES, SKIP MESSAGE          U002
         LA    POINTER,MSG02            ' ('                       U002
         BAL   LINK,MCON                MOVE CONSTANT TO MESSAGE   U001
         L     POINTER,16               -> CVT                     U001
         L     POINTER,196(,POINTER)    -> SMCA                    U001
         LA    POINTER,16(,POINTER)     -> SMF ID                  U001
         LA    COUNT,4                  LEN OF SMF ID FIELD        U001
         BAL   LINK,MVAR                MOVE SMF ID TO MESSAGE     U001
         LA    POINTER,MSG04            ')'                        U001
         BAL   LINK,MCON                CLOSE LIST                 U001
         SPACE 2
*  VM/370
CHECKVM  L     POINTER,520              -> PCCA (AGAIN)
         CLC   =C'FF',4(POINTER)        IS THIS VM?
         BNE   NOTVM                    NO - SKIP
         LA    POINTER,MSG06            ' (UNDER VM/370)'
         BAL   LINK,MCON                MOVE VM INDICATION TO MESSAGE
         SPACE 2
*  LOGON PROC (ACTUALLY STEPNAME)
NOTVM    LA    POINTER,MSG07            ' WITH PROC '
         BAL   LINK,MCON                MOVE CONSTANT TO MESSAGE
         L     POINTER,16               POINT TO CVT
         L     POINTER,0(,POINTER)      POINT TO PSAAOLD
         L     POINTER,8(,POINTER)      POINT TO CURRENT ASCB
         L     POINTER,56(,POINTER)     POINT TO CSCB
         LA    POINTER,16(,POINTER)     POINT TO CHCLS (PROC NAME)
         LA    AUXPTR,7(,POINTER)       POINT TO END OF PROC NAME
PN01     CLI   0(AUXPTR),C' '           END OF PROC NAME?
         BNE   PN02                     YES
         BCT   AUXPTR,PN01              DECREMENT AND LOOP
PN02     LA    COUNT,1(,AUXPTR)
         SR    COUNT,POINTER            SET ACTUAL LENGTH
         BAL   LINK,MVAR                MOVE PROC NAME TO MESSAGE
         SPACE 2
*  END THE SENTENCE
         LA    POINTER,MSG10            '.'
         BAL   LINK,MCON                MOVE CONSTANT TO MESSAGE
         BAL   LINK,WMSG                WRITE THIS MESSAGE
         SPACE 2
RETURN   L     R13,4(,R13)
         RETURN (14,12),RC=0
         SPACE 3
* MOVE CONSTANT TEXT INTO MESSAGE
MCON     SR    COUNT,COUNT              PREPARE FOR IC
         IC    COUNT,0(,POINTER)        GET LENGTH
         LA    POINTER,1(,POINTER)      POINT TO REAL TEXT
         SPACE 1
* MOVE VARIABLE TEXT INTO MESSAGE
MVAR     LR    AUXPTR,COUNT             GET REQUESTED LENGTH
         A     AUXPTR,MSGAPTR           COMPUTE NEW END
         C     AUXPTR,MSGALIM           IS IT GONNA FIT?
         BNH   *+8                      YES, LIVE ON.
         EX    0,*                      DIDN'T FIT;  DIE (0C3).
         L     AUXPTR,MSGAPTR           FIND NEXT CHARACTER
         BCTR  COUNT,0                  PREPARE FOR EX
         EX    COUNT,MVMVC              MOVE THE DATA
         LA    AUXPTR,1(COUNT,AUXPTR)   POINT PAST NEW STRING
         ST    AUXPTR,MSGAPTR           SAVE IT FOR POSTERITY
         BR    LINK                     RETURN TO THE POOR TURKEY
MVMVC    MVC   0(0,AUXPTR),0(POINTER)   << EXECUTED >>
         SPACE 3
WMSG     L     COUNT,MSGAPTR            FIND END OF MESSAGE
         LA    POINTER,MSGAREA          POINT TO START OF MESSAGE
         SR    COUNT,POINTER            COMPUTE LENGTH OF MESSAGE
         CH    COUNT,=H'78'             IS IT TOO LONG?
         BNH   WM03                     NO, WRITE IT AS IS
         LA    AUXPTR,MSGAREA+78
WM01     CLI   0(AUXPTR),C' '           LOOK FOR A SPACE
         BE    WM02
         BCT   AUXPTR,WM01
WM02     LR    COUNT,AUXPTR
         SR    COUNT,POINTER            LENGTH OF FIRST LINE
         TPUT  (POINTER),(COUNT),R      PUT THE FIRST SEGMENT
         L     COUNT,MSGAPTR            FIND END OF MESSAGE
         LA    POINTER,1(,AUXPTR)       FIND START OF SECOND LINE
         SR    COUNT,POINTER            FIGURE LENGTH OF SECOND LINE
WM03     TPUT  (POINTER),(COUNT),R      WRITE MESSAGE
CLRMSG   LA    POINTER,MSGAREA          INITIALIZE DATA POINTER
         ST    POINTER,MSGAPTR          SAVE IT FOR LATER
         MVC   MSGAREA,SPACES           CLEAR IT TO BLANKS
         BR    LINK                     RETURN TO CALLER
         SPACE 3
         LTORG
         SPACE 3
REGSAVE  DC    9D'0'
HEXTAB   EQU   *-C'0'
         DC    C'0123456789ABCDEF'
USERID   DS    0D
USERLEN  DC    AL1(0)
USERDATA DC    CL7' '
PREFIX   DS    0D
PRFXLEN  DC    AL1(0)
PRFXDATA DC    CL7' '
         DC    C' '                     REQUIRED PADDING FOR 'LINE'
LINE     DC    CL3' '                   BYTE AFTER 'LINE' ALSO PADDING
TERMID   DC    CL8' '
MSGAPTR  DC    A(0)
MSGALIM  DC    A(MSGAREA+L'MSGAREA)
MSGAREA  DC    C'YOU ARE 1234567 (MASQUERADING AS 1234567) LOGGED ONTO $
               THE 1234 (1234) (UNDER VM/370) WITH PROC 12345678 ON TER$
               MINAL 12345678 ON LINE 123.'
SPACES   DC    CL(L'MSGAREA)' '
         EJECT
* MESSAGE CONSTANT SEGMENTS
MSG01    MCON  'YOU ARE '
MSG02    MCON  ' ('
MSG03A   MCON  'MASQUERADING AS '
MSG03B   MCON  'INCOGNITO'
MSG04    MCON  ')'
MSG05    MCON  ' LOGGED ONTO THE '
MSG06    MCON  ' (UNDER VM/370)'
MSG07    MCON  ' WITH PROC '
MSG08    MCON  ' ON TERMINAL '
MSG09    MCON  ' ON LINE '
MSG10    MCON  '.'
         EJECT
         PRINT NOGEN
         SPACE 1
         IKJCPPL
         SPACE 3
         IKJPSCB
         SPACE 3
         IKJUPT
         SPACE 1
         PRINT GEN
         SPACE 2
R0       EQU   0
R1       EQU   1
COUNT    EQU   2
POINTER  EQU   3
AUXPTR   EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
LISTPTR  EQU   10
LINK     EQU   11
BASE     EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE 3
         END   WHO
