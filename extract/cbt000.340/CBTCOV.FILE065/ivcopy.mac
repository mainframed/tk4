IVCOPY   TITLE 'SUBROUTINE WHICH COPIES SEQUENTIAL DATA SETS'
***********************************************************************
*
*      THIS PROGRAM COPIES A SEQUENTIAL DATA SET FROM ONE DDNAME TO
* ANOTHER. IF DCB ATTRIBUTES ARE INCOMPLETE IN THE OUTPUT DATASET,
* THE DCB ATTRIBUTES OF THE INPUT DATA SET ARE USED.
*
* THE CALLING ARGUMENTS FOR "IVCOPY" ARE:
*           1. THE INPUT DDNAME (8-BYTE CHARACTER)
*           2. THE OUTPUT DDNAME (8-BYTE CHARACTER)
*
* IVCOPY WILL CORRECTLY HANDLE INPUT AND OUTPUT DATASETS HAVING
* DIFFERANT DCB ATTRIBUTES.  RECFM=U IS NOT SUPPORTED.
*
* BOTH THE INPUT AND OUTPUT DATA SETS MUST BE CLOSED WHEN "IVCOPY" IS
* CALLED.
*
*      THE "IVCOPY" SUBROUTINE IS REENTRANT AND REUSEABLE.
*
***********************************************************************
IVCOPY   ENTER PARMREG=2,              SAVE REGISTERS AND INITIALIZE   X
               GETMAIN=(WORKSIZE,0)
*
*     REGISTER EQUATES AND USAGE
*
R0       EQU   0
R1       EQU   1                       WORK
R2       EQU   2                       WORK
R3       EQU   3                       BASE REG
R4       EQU   4                       INPUT DCB BASE REG
R5       EQU   5                       OUTPUT DCB BASE REG
R6       EQU   6                       ADDR TO READ INTO
R7       EQU   7                       ADDR TO WRITE FROM
R8       EQU   8                       WORK
R9       EQU   9                       WORK
R10      EQU   10                      WORK
R11      EQU   11                      WORK
R12      EQU   12                      ADDR OF BUFFER AREA
R13      EQU   13                      WORK AREA AND SAVE AREA ADDR
R14      EQU   14                      RETURN ADDR
R15      EQU   15                      RETURN CODE
         USING WORKAREA,R13            ADDRESS WORK AREA DSECT
         LM    R10,R11,0(R2)           POINT TO DDNAMES
         MVC   INPUT,CINPUT            MOVE INPUT DCB TO WORK AREA
         MVC   OUTPUT,COUTPUT          MOVE OUTPUT DCB TO WORK AREA
         MVC   OPENLST,COPENLST        MOVE OPEN PARAMETER LIST TO WORK
*
*     OPEN THE INPUT DCB
*
         LA    R4,INPUT                POINT TO INPUT DCB
         USING IHADCB,R4               ESTABLISH ADDRESSABILITY TO DCB
         MVC   DCBDDNAM,0(R10)         MOVE INPUT DDNAME INTO DCB
         OPEN  ((R4)),                 OPEN THE INPUT DCB              X
               MF=(E,OPENLST)
         MVC   INPRECFM,DCBRECFM       SAVE THE INPUT RECFM
         MVC   INPLRECL,DCBLRECL       SAVE THE INPUT LRECL
         MVC   INPBLKSI,DCBBLKSI       SAVE THE INPUT BLOCKSIZE
*
*     PREPARE THE OUTPUT DCB
*
         LA    R5,OUTPUT               POINT TO OUTPUT DCB
         DROP  R4
         USING IHADCB,R5               ESTABLISH ADDRESSABILITY TO DCB
         MVC   DCBDDNAM,0(R11)         MOVE OUTPUT DDNAME INTO DCB
         LA    R2,EXLST                POINT TO DCB EXIT LIST
         STCM  R2,7,DCBEXLSA           STORE EXIT LIST ADDRESS IN DCB
         LA    R2,OPENEXIT             POINT TO OPEN EXIT
         ST    R2,EXLST                STORE ADDRESS IN EXIT LIST
         MVI   EXLST,X'85'             FLAG EXIT LIST FOR DCB OPEN EXIT
*
*     OPEN THE OUTPUT DCB
*
         OPEN  ((R5),OUTPUT),          OPEN THE OUTPUT DCB             X
               MF=(E,OPENLST)
         MVC   OUTRECFM,DCBRECFM       SAVE THE OUTPUT RECFM
         MVC   OUTLRECL,DCBLRECL       SAVE THE OUTPUT LRECL
         MVC   OUTBLKSI,DCBBLKSI       SAVE THE OUTPUT BLOCKSIZE
*
*     CAN'T HANDLE RECFM=U
*
         TM    INPRECFM,B'11000000'    TEST INPUT RECFM FOR U
         BO    ITSU                    BRANCH IF U
         TM    OUTRECFM,B'11000000'    TEST OUTPUT RECFM FOR U
         BNO   NOTU
ITSU     WTO   'PRTGENER ROUTINE ABNORMALLY TERMINATED, RECFM=U NOT ALLX
               OWED',ROUTCDE=11
         B     EODAD
NOTU     DS    0H
*
*     GET SOME CORE FOR THE INPUT AND OUTPUT RECORD
*
         SLR   R10,R10                 ZERO R10
         ICM   R10,3,INPLRECL          LOAD AND TEST THE LRECL
         BNZ   GOTINPSZ                IF NON ZERO, USE IT
         ICM   R10,3,INPBLKSI          LOAD AND TEST THE BLOCKSIZE
GOTINPSZ EQU   *
         SLR   R11,R11                 ZERO R11
         ICM   R11,3,OUTLRECL          LOAD AND TEST THE LRECL
         BNZ   GOTOUTSZ                IF NON ZERO, USE IT
         ICM   R11,3,OUTBLKSI          LOAD AND TEST THE BLOCKSIZE
GOTOUTSZ EQU   *
         LR    R9,R10                  LOAD LENGTH OF INPUT RECORD
         CR    R9,R11                  COMPARE TO OUTPUT
         BH    HAVEMAX                 IF INPUT IS LARGER, USE IT
         LR    R9,R11                  USE OUTPUT
HAVEMAX  ST    R9,RECLEN               SAVE LENGTH OF RECORD AREA
         LA    R2,4(R9)                ADD 4 FOR THE RDW
         GETMAIN RU,LV=(R2)            GET THE CORE
         LR    R12,R1                  SAVE ITS ADDRESS
         USING BUFFER,R12              ESTABLISH ADDRESSABILITY
*
*     EXAMINE INPUT DCB
*
         TM    INPRECFM,B'10000000'    TEST INPUT RECFM FOR F
         BNO   NOTINF                  BRANCH IF NOT
         LA    R6,RECORD               POINT TO START OF DATA
         B     CHECKOUT
NOTINF   TM    INPRECFM,B'01000000'    TEST INPUT RECFM FOR V
         BNO   NOTINV                  BRANCH IF NOT
         LA    R6,RDW                  POINT TO RDW
         B     CHECKOUT
NOTINV   WTO   'PRTGENER ROUTINE ABNORMALLY TERMINATED,  INPUT RECFM NOX
               T F OR V',ROUTCDE=11
         B     EODAD
CHECKOUT DS    0H
*
*     EXAMINE OUTPUT DCB
*
         TM    OUTRECFM,B'10000000'    TEST OUTPUT RECFM FOR F
         BNO   NOTOUTF                 BRANCH IF NOT
         LA    R7,RECORD               POINT TO START OF DATA
         B     READY
NOTOUTF  TM    OUTRECFM,B'01000000'    TEST OUTPUT RECFM FOR V
         BNO   NOTOUTV                 BRANCH IF NOT
         LA    R7,RDW                  POINT TO RDW
         B     READY
NOTOUTV  WTO   'PRTGENER ROUTINE ABNORMALLY TERMINATED, OUTPUT RECFM NOX
               T F OR V',ROUTCDE=11
         B     EODAD
READY    DS    0H
*
*     INITIALIZE THE RDW
*
         XC    RDW,RDW                 ZERO THE RDW
         LA    R2,4(R10)               ADD 4 TO INPUT LRECL (FOR RDW)
         STH   R2,RDW          PUT IT IN THE RDW (IN CASE OUTPUT IS V)
*
*     DO THE   COPY
*
LOOP     DS    0H
*
*     JUST TO BE SAFE, FILL THE RECORD WITH BLANKS
*
         LA    R8,RECORD               POINT TO RECORD
         L     R9,RECLEN               RETRIEVE LENGTH OF RECORD AREA
HERE     LA    R10,HERE                R10 JUST NEEDS ANY VALID ADDRESS
         L     R11,=X'40000000'        R11=A BLANK AND ZERO LENGTH
         MVCL  8,10                   BLANK OUT R9 BYTES STARTING AT R8
         GET   (R4),(R6)               READ A RECORD FROM INPUT
         PUT   (R5),(R7)               WRITE THE OUTPUT RECORD
         B     LOOP                    GO COPY ANOTHER RECORD
*
*     CLEANUP
*
EODAD    DS    0H
         CLOSE ((R4)),                 CLOSE THE INPUT DCB             X
               MF=(E,OPENLST)
         CLOSE ((R5)),                 CLOSE THE OUTPUT DCB            X
               MF=(E,OPENLST)
         FREEPOOL (R4)                 FREE THE INPUT DCB BUFFER POOL
         FREEPOOL (R5)                 FREE THE OUTPUT DCB BUFFER POOL
         L     R9,RECLEN               RETRIEVE LENGTH OF RECORD AREA
         LA    R2,4(R9)                COMPUTE THE BUFFER SIZE AGAIN
         FREEMAIN RU,LV=(R2),A=(R12)   FREE THE RECORD BUFFER
         LEAVE RETCODE=0,              RETURN TO CALLER                X
               GETMAIN=(WORKSIZE,0)
*
*     CONSTANTS
*
ZERO     DC    H'0'
COPENLST OPEN  ZERO,MF=L               INITIAL OPEN PARAMETER LIST
OPENLN   EQU   *-COPENLST              LENGTH OF OPEN PARAMETER LIST
CINPUT   DCB   DDNAME=INPUT,           INITIAL INPUT DCB               X
               MACRF=GM,EODAD=EODAD,DSORG=PS
INPUTLN  EQU   *-CINPUT                LENGTH OF INPUT DCB
COUTPUT  DCB   DDNAME=OUTPUT,          INITIAL OUTPUT DCB              X
               MACRF=PM,DSORG=PS
OUTPUTLN EQU   *-COUTPUT               LENGTH OF OUTPUT DCB
*
*     DCB OPEN EXIT
*
OPENEXIT LR    R8,R15                  SAVE ENTRY ADDR
         USING OPENEXIT,R8             ESTABLISH ADDRESSABILITY
         LR    R5,R1                   SAVE DCB ADDR
         ICM   R2,7,DCBEXLSA           LOAD EXIT LIST ADDRESS FROM DCB
         USING EXLST,R2                ESTABLISH ADDRESSABILITY
*
*     COPY DCB INFO FROM INPUT IF NECESSARY
*
         CLC   DCBRECFM,EXITZERO      IF THE OUTPUT RECFM WAS SPECIFIED
         BNE   RECFMOK                THEN GO CHECK THE LRECL
         MVC   DCBRECFM,INPRECFM      ELSE MOVE INPUT RECFM TO OUTPUT
RECFMOK  DS    0H
         CLC   DCBLRECL,EXITZERO      IF THE OUTPUT LRECL WAS SPECIFIED
         BNE   LRECLOK                THEN GO CHECK THE BLKSIZE
         MVC   DCBLRECL,INPLRECL      ELSE MOVE INPUT LRECL TO OUTPUT
LRECLOK  DS    0H
         CLC   DCBBLKSI,EXITZERO      IF THE OUTPUT BLKSI WAS SPECIFIED
         BNE   BLKSIZOK               THEN GO OPEN THE OUTPUT DCB
         MVC   DCBBLKSI,INPBLKSI      ELSE MOVE INPUT BLKSIZE TO OUTPUT
BLKSIZOK DS    0H
         BR    R14                     AND RETURN
EXITZERO DC    H'0'
*
*     DSECTS
*
WORKAREA DSECT ,                       MAP OF GETMAINED WORK AREA
         DS    18A                     REGISTER SAVE AREA
INPUT    DS    CL(INPUTLN)
OUTPUT   DS    CL(OUTPUTLN)
*************NOTE: THE NEXT 4 QUANTITIES MUST BE CONTIGUOUS************
EXLST    DS    A
INPLRECL DS    H                       COPY OF INPUT DCB LRECL
INPBLKSI DS    H                       COPY OF INPUT DCB BLKSIZE
INPRECFM DS    XL1                     COPY OF INPUT DCB RECFM
***********************************************************************
OUTLRECL DS    H                       COPY OF OUTPUT DCB LRECL
OUTBLKSI DS    H                       COPY OF OUTPUT DCB BLKSIZE
RECLEN   DS    F                       LENGTH OF RECORD AREA
OUTRECFM DS    XL1                     COPY OF OUTPUT DCB RECFM
OPENLST  DS    CL(OPENLN)
WORKSIZE EQU   *-WORKAREA              LENGTH OF WORK AREA
BUFFER   DSECT
RDW      DS    XL4
RECORD   DS    X
         PRINT NOGEN
         DCBD  DSORG=PS                MAP OF DCB
         END
