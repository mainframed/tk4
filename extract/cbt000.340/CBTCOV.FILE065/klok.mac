CLOCK  TITLE '-----  DISPLAY CURRENT TIME AND WASTE SOME  -----'
         EJECT
CLOCK    OSENTER  EXIT=LEAVE,RC=0,GETMAIN=(WORKLEN,WORKD)
         GTSIZE  ,                      GET THE TERMINAL LINE SIZE
         SPACE 1
         CH    R1,=H'80'                80 COLUMNS WIDE?
         BL    BADTERM                  NO - GET OUT
         CH    R0,=H'24'                24 OR MORE LINES?
         BL    BADTERM                  NO - GET OUT
         MVC   IOCBNAME(8),=CL8'CLOCK'
         MVC   IOCBWAIT,=F'099'         .99 SECOND UPDATE INTERVAL
         MVI   FLAG,FAUTO               DEFAULT START AUTO UPDATING
         SPACE 1
         LOAD  EPLOC==CL8'TERMIO'       LOAD DCMS TERMINAL I/O ROUTINE
         ST    R0,IOCBATIO              SAVE ADDRESS
         SPACE 1
         STFSMODE  ON,INITIAL=YES
         SPACE 2
LOOP     LA    R14,REPLY                -> START
         LH    R15,SCR1                 LENGTH OF SCREEN BUFFER
         L     R1,=X'40000000'          GET PAD CHAR & LEN=0
         MVCL  R14,R0                   CLEAR THE SCREEN BUFFER
         SPACE 2
         TIME  DEC                      GET TIME IN R1: HHMMSSTH
         SPACE 1
         LR    R15,R0                   GET HHMMSSTH INTO BETTER REG
         SPACE 1
         LA    R2,LINEONE               WHERE TO START FORMATTING
         BAL   R10,FMTCHAR              FORMAT FIRST H
         SPACE 1
         LA    R2,12(,R2)               -> NEXT SCREEN POSITION
         BAL   R10,FMTCHAR              SECOND H
         SPACE 1
         LA    R2,12(,R2)               -> NEXT SCREEN POSITION
         MVC   02*79(2,R2),=C'**'       PUT
         MVC   03*79(2,R2),=C'**'          IN
         MVC   08*79(2,R2),=C'**'            THE
         MVC   09*79(2,R2),=C'**'               COLON
         SPACE 1
         LA    R2,4(,R2)                -> NEXT SCREEN POSITION
         BAL   R10,FMTCHAR              FORMAT FIRST M
         SPACE 1
         LA    R2,12(,R2)               -> NEXT SCREEN POSITION
         BAL   R10,FMTCHAR              SECOND M
         SPACE 1
         LA    R2,12(,R2)               -> NEXT SCREEN POSITION
         MVC   02*79(2,R2),=C'**'       PUT
         MVC   03*79(2,R2),=C'**'          IN
         MVC   08*79(2,R2),=C'**'            THE
         MVC   09*79(2,R2),=C'**'               COLON
         SPACE 1
         LA    R2,4(,R2)                -> NEXT SCREEN POSITION
         BAL   R10,FMTCHAR              FORMAT FIRST S
         SPACE 1
         LA    R2,12(,R2)               -> NEXT SCREEN POSITION
         BAL   R10,FMTCHAR              SECOND S
         EJECT
WRITE    OI    IOCBFLGC,IOCBCTIM        DO NOT TIMESTAMP SCREENS
         TM    FLAG,FAUTO               AUTO UPDATE?
         BO    WRT$AUTO                 YES - GO DO IT
         NI    IOCBFLGC,255-IOCBCTIM    DON'T TIMESTAMP WHEN NOT AUTO
         MVI   IOCBFLGD,0               CLEAR FLAGS
         SPACE 1
         TRMIO IOCB,FORMAT=SCR1,IMAGE=REPLY
         SPACE 1
         OI    IOCBFLGC,IOCBCCLR        FORMAT WHOLE SCREEN NEXT TIME
         SPACE 2
PFKEY    PFKEY ATTN=ATTN,K2=UPDATE,K3=QUIT,K12=QUIT
         SPACE 2
         B     LOOP
         SPACE 3
ATTN     TM    FLAG,FAUTO               IN AUTO UPDATE MODE?
         BNO   QUIT                     NO - GET OUT OF HERE
         L     R1,16                    -> CVT
         L     R1,0(,R1)                -> DISPATCH
         L     R1,4(,R1)                -> TCB
         L     R1,180(,R1)              -> JSCB
         L     R1,264(,R1)              -> PSCB
*        TM    PSCBATR1,PSCBCTRL        ACCOUNT?
         TM    16(R1),X'40'             ACCOUNT?
         BNO   QUIT                     NO - GET OUT OF HERE
         SPACE 2
UPDATE   XI    FLAG,FAUTO               FLIP FLAG
         B     LOOP                     AND DO IT AGAIN
         SPACE 3
WRT$AUTO OI    IOCBFLGD,IOCBDYON+IOCBDFRC
         SPACE 1
         TRMIO IOCB,WRITE,FORMAT=SCR1,IMAGE=REPLY
         SPACE 1
         NI    IOCBFLGC,255-IOCBCCLR    STOP FORMATTING WHOLE SCREEN
         SPACE 2
         PFKEY ATTN=ATTN,DEF=LOOP
         SPACE 3
QUIT     STFSMODE  OFF
         SPACE 1
         B     LEAVE
         EJECT
FMTCHAR  SR    R14,R14                  CLEAR FOR SHIFT
         SLDL  R14,4                    GET A DIGIT
         MH    R14,=Y(BLOCKLEN)         GET OFFSET INTO "BLOCK"
         LA    R14,BLOCK(R14)           -> CHARACTER
         MVC   00*79(10,R2),00*10(R14)  FIRST LINE
         MVC   01*79(10,R2),01*10(R14)
         MVC   02*79(10,R2),02*10(R14)
         MVC   03*79(10,R2),03*10(R14)
         MVC   04*79(10,R2),04*10(R14)
         MVC   05*79(10,R2),05*10(R14)
         MVC   06*79(10,R2),06*10(R14)
         MVC   07*79(10,R2),07*10(R14)
         MVC   08*79(10,R2),08*10(R14)
         MVC   09*79(10,R2),09*10(R14)
         MVC   10*79(10,R2),10*10(R14)
         MVC   11*79(10,R2),11*10(R14)  LAST LINE
         BR    R10                      RETURN TO MAINLINE
         SPACE 3
BADTERM  TPUTX 'ONLY 3270 TERMINALS ARE SUPPORTED'
         SPACE 1
         B     LEAVE
         SPACE 3
         LTORG
         EJECT
*  COLON
         DC    CL4'    '
         DC    CL4'    '
         DC    CL4' ** '
         DC    CL4' ** '
         DC    CL4'    '
         DC    CL4'    '
         DC    CL4'    '
         DC    CL4'    '
         DC    CL4' ** '
         DC    CL4' ** '
         DC    CL4'    '
         DC    CL4'    '
*  ZERO
BLOCK    DC    CL10'  ******  '
BLOCK1   EQU   *-BLOCK                  LENGTH OF 1 LINE
         DC    CL10' ******** '
         DC    CL10'**      **'
         DC    CL10'**     ***'
         DC    CL10'**    * **'
         DC    CL10'**   *  **'
         DC    CL10'**  *   **'
         DC    CL10'** *    **'
         DC    CL10'***     **'
         DC    CL10'**      **'
         DC    CL10' ******** '
         DC    CL10'  ******  '
BLOCKLEN EQU   *-BLOCK                  LENGTH OF WHOLE CHARACTER
*  ONE
         DC    CL10'    **    '
         DC    CL10'   ***    '
         DC    CL10'  ****    '
         DC    CL10'    **    '
         DC    CL10'    **    '
         DC    CL10'    **    '
         DC    CL10'    **    '
         DC    CL10'    **    '
         DC    CL10'    **    '
         DC    CL10'    **    '
         DC    CL10' ******** '
         DC    CL10' ******** '
*  TWO
         DC    CL10' ******** '
         DC    CL10'**********'
         DC    CL10'**      **'
         DC    CL10'        **'
         DC    CL10'        **'
         DC    CL10'       ** '
         DC    CL10'     **   '
         DC    CL10'   **     '
         DC    CL10' **       '
         DC    CL10'**        '
         DC    CL10'**********'
         DC    CL10'**********'
*  THREE
         DC    CL10' ******** '
         DC    CL10'**********'
         DC    CL10'**      **'
         DC    CL10'        **'
         DC    CL10'        **'
         DC    CL10'     **** '
         DC    CL10'     **** '
         DC    CL10'        **'
         DC    CL10'        **'
         DC    CL10'**      **'
         DC    CL10'**********'
         DC    CL10' ******** '
*  FOUR
         DC    CL10'      *** '
         DC    CL10'     **** '
         DC    CL10'    ** ** '
         DC    CL10'   **  ** '
         DC    CL10'  **   ** '
         DC    CL10' *********'
         DC    CL10'**********'
         DC    CL10'       ** '
         DC    CL10'       ** '
         DC    CL10'       ** '
         DC    CL10'       ** '
         DC    CL10'       ** '
*  FIVE
         DC    CL10'**********'
         DC    CL10'**********'
         DC    CL10'**        '
         DC    CL10'**        '
         DC    CL10'**        '
         DC    CL10'*******   '
         DC    CL10'********  '
         DC    CL10'       ** '
         DC    CL10'        **'
         DC    CL10'        **'
         DC    CL10'**********'
         DC    CL10'********* '
*  SIX
         DC    CL10' ******** '
         DC    CL10'**********'
         DC    CL10'**      **'
         DC    CL10'**        '
         DC    CL10'**        '
         DC    CL10'********* '
         DC    CL10'**********'
         DC    CL10'**      **'
         DC    CL10'**      **'
         DC    CL10'**      **'
         DC    CL10'**********'
         DC    CL10' ******** '
*  SEVEN
         DC    CL10'**********'
         DC    CL10'********* '
         DC    CL10'**    **  '
         DC    CL10'     **   '
         DC    CL10'    **    '
         DC    CL10'   **     '
         DC    CL10'   **     '
         DC    CL10'   **     '
         DC    CL10'   **     '
         DC    CL10'   **     '
         DC    CL10'   **     '
         DC    CL10'   **     '
*  EIGHT
         DC    CL10' ******** '
         DC    CL10'**********'
         DC    CL10'**      **'
         DC    CL10'**      **'
         DC    CL10' **    ** '
         DC    CL10'  ******  '
         DC    CL10'  ******  '
         DC    CL10' **    ** '
         DC    CL10'**      **'
         DC    CL10'**      **'
         DC    CL10'**********'
         DC    CL10' ******** '
*  NINE
         DC    CL10' ******** '
         DC    CL10'**********'
         DC    CL10'**      **'
         DC    CL10'**      **'
         DC    CL10'**      **'
         DC    CL10'**********'
         DC    CL10'**********'
         DC    CL10'        **'
         DC    CL10'        **'
         DC    CL10'**      **'
         DC    CL10'**********'
         DC    CL10' ******** '
         EJECT
         PRINT NOGEN
         SPACE 1
SCR1     DCMSFMT
REPLY    DCMSFLD  10,ALPHA,INTEN=HI,CURSOR=YES
         DCMSFLD  68,INTEN=HI
LINEONE  DCMSFLD  79,INTEN=HI,ROW=7     1
         DCMSFLD  79,INTEN=HI           2
         DCMSFLD  79,INTEN=HI           3
         DCMSFLD  79,INTEN=HI           4
         DCMSFLD  79,INTEN=HI           5
         DCMSFLD  79,INTEN=HI           6
         DCMSFLD  79,INTEN=HI           7
         DCMSFLD  79,INTEN=HI           8
         DCMSFLD  79,INTEN=HI           9
         DCMSFLD  79,INTEN=HI           10
         DCMSFLD  79,INTEN=HI           11
         DCMSFLD  79,INTEN=HI           12
         DCMSFEND
         SPACE 3
WORKD    DSECT                          RESUME
DWD      DS    D
FLAG     DS    X
FAUTO    EQU   X'80'
         SPACE 2
IOCB     IOCB
         EJECT
         DSGEN SCR1                     SCREEN BUFFER
         SPACE 2
WORKLEN  EQU   *-WORKD
         SPACE 2
         END
