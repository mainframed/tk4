%-------------------  AMDPRDMP - Print Dump PRINT List  ----------------
%COMMAND ===>_ZCMD
%
+JOBNAME list:
+    %===>_JOB1    %===>_JOB2     %===>_JOB3    %===>_JOB4    +
+
+Virtual STORAGE list:
+     ASID Range%===>_ASR1%===>_ASR2+                              (hex)
+     ASID List %===>_ASL1%===>_ASL2%===>_ASL3%===>_ASL4+          (hex)
+     Nucleus   %===>_NUC+                                         (YES
+     Common    %===>_COM+                                         (YES
+     Begin     %===>_VIRTB1%===>_VIRTB2%===>_VIRTB3%===>_VIRTB4+  (hex)
+     End       %===>_VIRTE1%===>_VIRTE2%===>_VIRTE3%===>_VIRTE4+  (hex)
+
+REAL storage list (standalone dump only):
+     Begin     %===>_REALB1 %===>_REALB2 %===>_REALB3 %===>_REALB4 +  (
+     End       %===>_REALE1 %===>_REALE2 %===>_REALE3 %===>_REALE4 +  (
)INIT
 .CURSOR = JOB1
 &JOB1   = &Z
 &JOB2   = &Z
 &JOB3   = &Z
 &JOB4   = &Z
 &ASR1   = &Z
 &ASR2   = &Z
 &ASL1   = &Z
 &ASL2   = &Z
 &ASL3   = &Z
 &ASL4   = &Z
 &NUC    = NO
 &COM    = NO
 &VIRTB1 = &Z
 &VIRTB2 = &Z
 &VIRTB3 = &Z
 &VIRTB4 = &Z
 &VIRTE1 = &Z
 &VIRTE2 = &Z
 &VIRTE3 = &Z
 &VIRTE4 = &Z
 &REALB1 = &Z
 &REALB2 = &Z
 &REALB3 = &Z
 &REALB4 = &Z
 &REALE1 = &Z
 &REALE2 = &Z
 &REALE3 = &Z
 &REALE4 = &Z
)PROC
 &NUC = TRANS(TRUNC(&NUC,1) Y,YES N,NO *,*)
 VER (&NUC,NONBLANK)
 VER (&NUC,LIST,YES,NO)
 &COM = TRANS(TRUNC(&COM,1) Y,YES N,NO *,*)
 VER (&COM,NONBLANK)
 VER (&COM,LIST,YES,NO)
 IF  (&ASR1 ^= ' ')
     VER (&ASL1,PICT,'')
 IF  (&ASL1 ^= ' ')
     VER (&ASR1,PICT,'')
 IF  (&ASR1 ^= ' ')
     VER (&ASR2,NONBLANK)
 IF  (&ASR2 ^= ' ')
     VER (&ASR1,NONBLANK)
 VER (&ASR1,HEX)
 VER (&ASR2,HEX)
 IF  (&ASL2 ^= ' ')
     VER (&ASL1,NONBLANK)
 VER (&ASL1,HEX)
 IF  (&ASL3 ^= ' ')
     VER (&ASL2,NONBLANK)
 VER (&ASL2,HEX)
 IF  (&ASL4 ^= ' ')
     VER (&ASL3,NONBLANK)
 VER (&ASL3,HEX)
 IF  (&ASL5 ^= ' ')
     VER (&ASL4,NONBLANK)
 VER (&ASL4,HEX)
 VER (&ASL5,HEX)
 IF  (&VIRTB1 ^= ' ')
     VER (&VIRTE1,NONBLANK)
 IF  (&VIRTE1 ^= ' ')
     VER (&VIRTB1,NONBLANK)
 IF  (&VIRTB2 ^= ' ')
     VER (&VIRTB1,NONBLANK)
 VER (&VIRTB1,HEX)
 VER (&VIRTE1,HEX)
 IF  (&VIRTB2 ^= ' ')
     VER (&VIRTE2,NONBLANK)
 IF  (&VIRTE2 ^= ' ')
     VER (&VIRTB2,NONBLANK)
 IF  (&VIRTB3 ^= ' ')
     VER (&VIRTB2,NONBLANK)
 VER (&VIRTB2,HEX)
 VER (&VIRTE2,HEX)
 IF  (&VIRTB3 ^= ' ')
     VER (&VIRTE3,NONBLANK)
 IF  (&VIRTE3 ^= ' ')
     VER (&VIRTB3,NONBLANK)
 IF  (&VIRTB4 ^= ' ')
     VER (&VIRTB3,NONBLANK)
 VER (&VIRTB3,HEX)
 VER (&VIRTE3,HEX)
 IF  (&VIRTB4 ^= ' ')
     VER (&VIRTE4,NONBLANK)
 IF  (&VIRTE4 ^= ' ')
     VER (&VIRTB4,NONBLANK)
 VER (&VIRTB4,HEX)
 VER (&VIRTE4,HEX)
 IF  (&REALB1 ^= ' ')
     VER (&REALE1,NONBLANK)
 IF  (&REALE1 ^= ' ')
     VER (&REALB1,NONBLANK)
 IF  (&REALB2 ^= ' ')
     VER (&REALB1,NONBLANK)
 VER (&REALB1,HEX)
 VER (&REALE1,HEX)
 IF  (&REALB2 ^= ' ')
     VER (&REALE2,NONBLANK)
 IF  (&REALE2 ^= ' ')
     VER (&REALB2,NONBLANK)
 IF  (&REALB3 ^= ' ')
     VER (&REALB2,NONBLANK)
 VER (&REALB2,HEX)
 VER (&REALE2,HEX)
 IF  (&REALB3 ^= ' ')
     VER (&REALE3,NONBLANK)
 IF  (&REALE3 ^= ' ')
     VER (&REALB3,NONBLANK)
 IF  (&REALB4 ^= ' ')
     VER (&REALB3,NONBLANK)
 VER (&REALB3,HEX)
 VER (&REALE3,HEX)
 IF  (&REALB4 ^= ' ')
     VER (&REALE4,NONBLANK)
 IF  (&REALE4 ^= ' ')
     VER (&REALB4,NONBLANK)
 VER (&REALB4,HEX)
 VER (&REALE4,HEX)
)END
