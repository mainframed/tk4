         PRINT OFF
         MACRO
&NAME    INIT &BASE=3,&REGS=Y,&PATCH=3,&RENT=N,&SAVE=Y
         AIF   ((&BASE LT 13) AND (&BASE GT 1)).N020
         MNOTE 12,'INVALID BASE REGISTER'
         MEXIT
.N020    ANOP
         PUSH  PRINT
         PRINT ON,GEN
         EJECT
&SYSECT  CSECT
         USING *,15
         B     BEGIN
         DC    AL1(24)
         DC    CL8'&SYSECT'
         DC    CL16'-&SYSDATE-&SYSTIME'
         AIF   ('&RENT' EQ 'Y').N004
MYSAVE   DC    18F'-1'
.N004    ANOP
         AIF   ('&PATCH' EQ '0').N005
PATCH    DC    &PATCH.CL8'*PATCH*'
.N005    ANOP
         AIF   ('&REGS' EQ 'N').N030
         AIF   ('&REGS' EQ 'Y').N010
         MNOTE 4,'REGS OPERAND INVALID. Y SUBSTITUTED'
.N010    ANOP
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
.N030    ANOP
BEGIN    DS   0H
         STM   14,12,12(13)
         LR    &BASE,15
         DROP  15
         USING &SYSECT,&BASE
         AIF   ('&SAVE' EQ 'N').N003
         AIF   ('&RENT' EQ 'Y').N002
         AIF   ('&RENT' EQ 'N').N001
         MNOTE 4,'RENT OPERAND INVALID. N SUBSTITUTED'
.N001    ANOP
         ST    13,MYSAVE+4
         LR    15,13
         LA    13,MYSAVE
         ST    13,8(15)
         AGO   .N003
.N002    ANOP
         GETMAIN R,LV=72
         ST    13,4(1)
         ST    1,8(13)
         LR    13,1
.N003    ANOP
         POP   PRINT
         EJECT
         MEND
         PRINT ON
*  MODULE NAME:         VSAMLST7     (REL. 1.1  08/10/79)
*
*  MODULE DESCRIPTION:  VSAM CATALOG LIST UTILITY - REPORT 2 FORMATTER
*
*  RETURN LINKAGE:      RETURN (14,12),RC=(15)
*
*  LINKAGE TABLE:       NONE - SINGLE ENTRY
*
*  PARAMETERS:          R1 POINTS TO THE ADDRESS OF A 92-BYTES RECORD
*                       FROM SORT.
*
*  EXIT:                RC=00 - SUCCESSFUL
*
*  MODULE FUNCTION:     FOR EACH RECORD FROM SORT/VSAMLST5, THIS MODULE
*                       FORMATS IT FOR THE VSAM TRACK ALLOCATION MAP
*                       REPORT.  IN ORDER TO FILL THE GAPS BETWEEN THE
*                       EXTENTS RECEIVED FROM THE CALLER, THIS MODULE
*                       MAY GENERATE TWO FORMATTED LINES TO PRINT.
*                       UPON EXIT THE GENERAL REGISTER R1 MAY CONTAINS
*                       ZERO OR THE ADDRESS OF THE SECOND TO PRINT.
*
*  CALLER:              VSAMLST5
*
*  CALLS:               NONE
*
*  SYSTEMS SERVICES:    NONE
*
*  MODULE ENVIRONMENT:  OS/VS1
         TITLE 'VSAMLST7 --- VSAM CATALOG LIST UTILITY REPORT 2 FORMATTE
                (3.2) - VSAM TRACK ALLOCATION MAP'
*        *-----------------------------------*
*        *   R E G I S T E R   U S A G E S   *
*        *-----------------------------------*
*
*  R0  -  STANDARD LINKAGE
*  R1  -  STANDARD LINKAGE (ADDR OF PARM LIST) & TEMP WORK SPACE
*  R2  -  TEMP WORK SPACE
*  R3  -  TEMP WORK SPACE
*  R4  -  TEMP WORK SPACE
*  R5  -  NOT USED
*  R6  -  NOT USED
*  R7  -  NOT USED
*  R8  -  NOT USED
*  R9  -  BASE REG FOR DSECT INEXTNT, INVLCHR
*  R10 -  BASE REG FOR DSECT TXTRKALC
*  R11 -  RETURN ADDR FOR SUBROUTINES
*  R12 -  BASE REG FOR CSECT VSAMLST7
*  R13 -  STANDARD LINKAGE (ADDR OF SAVE AREA)
*  R14 -  STANDARD LINKAGE (ADDR TO RETURN)
*  R15 -  STANDARD LINKAGE (ADDR OF ENTRY POINT & RETURN CODE)
         SPACE 3
VSAMLST7 CSECT
         INIT  BASE=12
***********************************************************************
*                                                                     *
*  3.1    VSAM TRACK ALLOCATION MAP REPORT FORMATTER                  *
*                                                                     *
*     FUNCTION:  FOR EACH RECORD PASSED TO THIS MODULE, IT FORMATS    *
*                IT FOR THE VSAM TRACK ALLOCATION MAP.  THIS REPORT   *
*                CONTAINS THE UPPER AND LOWER LIMITS OF THE EXTENT,   *
*                NUMBER OF TRACKS ALLOCATED AND AVAILABLE, EXTENT'S   *
*                SEQUENCE NUMBER, ENTRY NAME AND EXCEPTION IF ANY.    *
*                                                                     *
*     ERRORS:  NONE                                                   *
*                                                                     *
***********************************************************************
         SPACE 3
VCL32    EQU   *
         USING INEXTNT,R9
         USING TXTRKALC,R10
         LM    R9,R10,0(R1)
         MVC   RTNPARM,ZERO             CLEAR RETURN PARM
         SPACE 2
*        *-----------------------------------------------*
*        *  THERE ARE 3 TYPES OF RECORDS FROM VSAMLST5.  *
*        *    TYPE 0 - VOL CHAR INFO'S:  BEGINNING       *
*        *    TYPE 1 - EXTENT INFO'S                     *
*        *    TYPE 2 - DUMMY RECORD:  ENDING             *
*        *-----------------------------------------------*
         SPACE
         CLC   INELOTCH,ZERO            IS THIS TYPE 0?
         BE    TYPE0                    YES - GET NEW VOL INFO'S
         SPACE
         CLC   INELOTCH,FOXES           IS THIS TYPE 2?
         BE    TYPE2                    YES - SUMMARIZE IT
         SPACE
         B     TYPE1                    ELSE IT MUST BE EXTENT RECORDS
         DROP  R9
         EJECT
*        *------------------------------------*
*        *  TYPE 0 - BEGINNING OF NEW VOLUME  *
*        *------------------------------------*
         SPACE
TYPE0    EQU   *
         USING INVLCHR,R9
         MVC   DEVTYP,INVDVTYP          DEVICE TYPE
         MVC   CYLVOL,INVCYLVL          CYLINDERS PER VOLUME
         MVC   TRKCYL,INVTRKCL          TRACKS PER CYLINDER
         SPACE
         MVI   TXTLOTRK+5,C'0'          FORMAT VOLUME LABEL ENTRY
         MVC   TXTLOTCH,ZEROCCHH
         MVI   TXTHITRK+5,C'0'
         MVC   TXTHITCH,ZEROCCHH
         MVI   TXTTRKAL+5,C'1'
         MVC   TXTENTNM(L'VLABEL),VLABEL MOVE IN VOLUME LABEL NAME
         SPACE
         LA    R1,1
         STH   R1,TRKAL                 TRACKS ALLOCATED = 1
         MVC   TRKAV,ZERO               TRACKS AVAILABLE = 0
         STH   R1,LASTUPT               LAST UPPER LIMIT + 1
         SPACE
         MVI   OSFLG,X'00'              RESET OS FLAG
         CLC   INVOSEXT,FOXES           ARE THERE ANY OS SPACE INFO'S?
         BNE   GOHOME                   YES - ALL DONE FOR THIS VOLUME
         SPACE
         MVI   OSFLG,X'FF'              NO - INDICATE NOT AVAILABLE
         B     GOHOME
         SPACE
         DROP  R9
         EJECT
*        *--------------------------------*
*        *  TYPE 1 - EXTENT INFORMATIONS  *
*        *--------------------------------*
         SPACE
TYPE1    EQU   *
         USING INEXTNT,R9
         SPACE 2
*        *-----------------------------------------------*
*        *  THERE ARE 6 TYPES OF EXTENTS.                *
*        *    TYPE 1A - VTOC                             *
*        *    TYPE 1B - OS FREE SPACE                    *
*        *    TYPE 1C - VSAM FREE SPACE                  *
*        *    TYPE 1D - DUMMY:  VSAM DATA SPACE START    *
*        *    TYPE 1E - DUMMY:  VSAM DATA SPACE END      *
*        *    TYPE 1F - VSAM ALLOCATED SPACE             *
*        *-----------------------------------------------*
         SPACE
         CLI   INEXTNM,C'*'             IS THIS TYPE 1A, 1B OR 1C?
         BE    TYPE1ABC                 YES - TAKE A CLOSER LOOK
         SPACE
         CLI   INEXTNM,X'00'            IS THIS TYPE 1D?
         BE    TYPE1D                   YES - GO SET VSAM FLAG
         SPACE
         CLI   INEXTNM,X'FF'            IS THIS TYPE 1E?
         BE    TYPE1E                   YES - GO RESET VSAM FLAG
         SPACE
         B     TYPE1F                   ELSE MUST BE TYPE 1F
         EJECT
*        *-----------------------------------------*
*        *  TYPE 1A, 1B, 1C - ALL INFO'S COMPLETE  *
*        *-----------------------------------------*
         SPACE
TYPE1ABC EQU   *
         SR    R0,R0                    NORMAL RECORD
         LH    R1,INELOTRK              LOWER LIMIT
         BAL   R11,CHKGAP               FILL THE GAP IF THERE IS ONE
         SPACE
         MVC   LOTRK,INELOTRK           SET EXT DESCRIPTOR
         MVC   LOTCH,INELOTCH
         MVC   HITRK,INEHITRK
         MVC   HITCH,INEHITCH
         MVC   EXTLN,INEXTLTH
         MVC   EXTNO,INEXTNO
         MVC   TXTENTNM,INEXTNM         SET ENTRY NAME NOW
         SPACE
         CLC   VTOC,INEXTNM+7           IS IT VTOC?
         BE    TYPE1A                   YES - NOT FREE SPACE
         SPACE
TYPE1BC  EQU   *
         SR    R0,R0                    INDICATE FREE SPACE
         BAL   R11,FMTEXT
         B     GOHOME
         SPACE
TYPE1A   EQU   *
         LA    R0,4                     INDICATE USED SPACE
         BAL   R11,FMTEXT
         B     GOHOME
         SPACE 2
*        *-------------------------------*
*        *  TYPE 1D, 1E - DUMMY RECORDS  *
*        *-------------------------------*
         SPACE
TYPE1D   EQU   *
         LA    R0,4                     DUMMY RECORD
         LH    R1,INELOTRK              LOWER LIMIT
         BAL   R11,CHKGAP               FILL THE GAP IF THERE IS ONE
         MVI   VSAMFLG,X'FF'            INDICATE START OF NEW VSAM DSP
         B     GOHOME
         SPACE
TYPE1E   EQU   *
         LA    R0,4                     DUMMY RECORD
         LH    R1,INELOTRK              LOWER LIMIT
         LA    R1,1(,R1)                ONE AFTER THE END OF VSAM DSP
         BAL   R11,CHKGAP               FILL THE GAP IF THERE IS ONE
         MVI   VSAMFLG,X'00'            INDICATE END OF THIS VSAM DSP
         B     GOHOME
         EJECT
*        *------------------------------------------------------------*
*        *  TYPE 1F - VSAM ALLOCATED SPACE W/O RELATIVE TRACK INFO'S  *
*        *------------------------------------------------------------*
         SPACE
TYPE1F   EQU   *
         LH    R4,INELOCC               LOWER LIMIT
         MH    R4,TRKCYL
         AH    R4,INELOHH
         SPACE
         SR    R0,R0                    NORMAL RECORD
         LR    R1,R4                    LOWER LIMIT
         BAL   R11,CHKGAP               FILL THE GAP IF THERE IS ONE
         SPACE
         STH   R4,LOTRK
         MVC   LOTCH,INELOTCH
         SPACE
         LH    R1,INEHICC               UPPER LIMIT
         MH    R1,TRKCYL
         AH    R1,INEHIHH
         STH   R1,HITRK
         MVC   HITCH,INEHITCH
         SPACE
         SR    R1,R4                    LENGTH AND SEQ NO.
         LA    R1,1(,R1)
         STH   R1,EXTLN
         MVC   EXTNO,INEXTNO
         SPACE
         LA    R0,4                     INDICATE USED SPACE
         BAL   R11,FMTEXT
         MVC   TXTENTNM,INEXTNM         SET ENTRY NAME NOW
         B     GOHOME
         SPACE
         DROP  R9
         EJECT
*        *----------------------------------*
*        *  TYPE 2 - END OF CURRENT VOLUME  *
*        *----------------------------------*
         SPACE
TYPE2    EQU   *
         CLI   DEVTYP+2,X'20'           IS IT A DASD?
         BNE   BADDVTP                  NO - OMIT CHECKING FOR GAP
         SPACE
         SR    R2,R2                    CLEAR INDEX FOR DASD TABLE
         IC    R2,DEVTYP+3              GET DEVICE CODE
         SLL   R2,2                     MULTIPLY BY 4 FOR DISPLACEMENT
         LA    R2,TRKSDASD(R2)          R2 = ADDR OF DASD TRACKS ENTRY
         LA    R1,TRKSDEND              R1 = ADDR OF END OF TABLE
         CR    R1,R2                    IS THIS A VALID ENTRY?
         BNH   BADDVTP                  NO - OMIT CHECKING FOR GAP
         SPACE
         LH    R1,2(,R2)                YES - TOTAL NO. OF TRK'S ON VOL
         LTR   R1,R1                    IS THIS A VALID ENTRY?
         BZ    BADDVTP                  NO - OMIT CHECKING FOR GAP
         SR    R0,R0                    NORMAL RECORD
         BAL   R11,CHKGAP
         SPACE
BADDVTP  EQU   *
         LH    R1,TRKAL                 TRACKS ALLOCATED
         CVD   R1,WORK
         MVC   ENDTRKAL(6),PAT5
         ED    ENDTRKAL(6),WORK+5
         SPACE
         LH    R1,TRKAV                 TRACKS AVAILABLE
         CVD   R1,WORK
         MVC   ENDTRKAV(6),PAT5
         ED    ENDTRKAV(6),WORK+5
         SPACE
         AH    R1,TRKAL                 TRACKS ACCOUNTED FOR
         CVD   R1,WORK
         MVC   ENDTOTAL(6),PAT5
         ED    ENDTOTAL(6),WORK+5
         MVC   TXTTRKAL(L'ENDING1),ENDING1
         EJECT
*        *-------------*
*        *   E X I T   *
*        *-------------*
         SPACE
GOHOME   EQU   *
         L     R13,MYSAVE+4             RESTORE REGISTER 13
         L     R14,12(,R13)             RESTORE REGISTER 14
         SR    R15,R15                  CLEAR REGISTER 15
         L     R0,20(,R13)              RESTORE REGISTER 0
         L     R1,RTNPARM               SET RETURN PARM IN REGISTER 1
         LM    R2,R12,28(R13)           RESTORE REGISTERS 2 THROUGH 12
         BR    R14                      RETURN
         SPACE 2
RTNPARM  DC    F'0'                     MAYBE ADDR OF 2ND LINE
         EJECT
*        *---------------------------------------------------------*
*        *  CHKGAP - SUBROUTINE TO CHECK FOR GAPS BETWEEN EXTENTS  *
*        *    IN:   R0 = 0 FOR NORMAL RECORD & 4 FOR DUMMY RECORD  *
*        *          R1 = CURRENT LOW TRACK ADDRESS                 *
*        *    OUT:  IF THERE IS A GAP, IT FORMATS A LINE FOR IT &  *
*        *          SWAP A NEW LINE BEFORE CONTINUING              *
*        *---------------------------------------------------------*
         SPACE
CHKGAP   EQU   *
         CH    R1,LASTUPT               IS CURRENT TRK SAME AS LAST+1?
         BER   R11                      YES - THERE IS NO GAP - RETURN
         BH    HAVEGAP                  NO - EITHER THERE IS A GAP
         SPACE
OVERLAP  EQU   *                        OR THERE IS AN OVERLAP
         LTR   R0,R0                    IS IT A DUMMY RECORD?
         BNZR  R11                      YES - BYPASS OVERLAP
         MVC   TXTEXCPT(L'EXCEPT1),EXCEPT1
         BR    R11                      RETURN
         SPACE
HAVEGAP  EQU   *
         ST    R11,SAVER11              SAVE RETURN ADDR
         LH    R0,TRKCYL                SET EXT DESCRIPTOR
         LH    R3,LASTUPT
         STH   R3,LOTRK                 LOWER LIMIT
         SR    R2,R2
         DR    R2,R0
         STH   R3,LOCC
         STH   R2,LOHH
         SPACE
         LR    R3,R1
         BCTR  R3,0
         STH   R3,HITRK                 UPPER LIMIT
         SR    R2,R2
         DR    R2,R0
         STH   R3,HICC
         STH   R2,HIHH
         SPACE
         LR    R3,R1                    LENGTH AND SEQUENCE NUMBER
         SH    R3,LOTRK
         STH   R3,EXTLN
         MVC   EXTNO,FOXES              NO EXT SEQ NO.
         EJECT
*        *-----------------------------*
*        *  CHKGAP SUBROUTINE - CONT.  *
*        *-----------------------------*
         SPACE
         CLI   VSAMFLG,X'00'            IT IT WITHIN A VSAM DATA SPACE?
         BNE   MISSING                  YES - VSAM MISSING TRACKS
         SPACE
         LA    R0,4                     NO - NON VSAM ALLOCATION
         BAL   R11,FMTEXT               FORMAT IT AND
         SPACE
         CLI   OSFLG,X'00'              ARE THERE ANY OS SPACE INFO'S?
         BE    GOTOSDS                  YES - USE 'OS DATA SET(S)'
         MVC   TXTENTNM(L'NONVSAM),NONVSAM SET ENTRY NAME AND
         B     SWAPLINE                 SWAP
         SPACE
GOTOSDS  EQU   *
         MVC   TXTENTNM(L'OSDSET),OSDSET SET ENTRY NAME AND
         B     SWAPLINE                 SWAP
         SPACE
MISSING  EQU   *
         LA    R0,8                     DO NOT ACCUMULATE THESE TRACKS
         BAL   R11,FMTEXT               JUST FORMAT IT AND
         MVC   TXTEXCPT(L'EXCEPT2),EXCEPT2 INDICATE MISSING TRK & SWAP
         SPACE 2
SWAPLINE EQU   *
         MVI   LINE,X'40'               CLEAR NEW LINE
         MVC   LINE+1(L'LINE-1),LINE
         LA    R10,LINE                 RESET BASE REG OF TXTRKALC
         ST    R10,RTNPARM              SET RETURN PARM
         SPACE
         L     R11,SAVER11              RESTORE THE RETURN ADDR
         BR    R11                      RETURN
         SPACE 2
SAVER11  DC    F'0'
         EJECT
*        *-------------------------------------------------------*
*        *  FMTEXT - SUBROUTINE TO FORMAT AN EXTENT              *
*        *    IN:   EXTDSCP (LTH=16) HAS THE EXTENT DESCRIPTOR   *
*        *          R0=0 - FREE EXTENT                           *
*        *          R0=4 - USED EXTENT                           *
*        *          R0=8 - MISSING EXTENT                        *
*        *    OUT:  TXTRKALC IS FILLED EXCEPT ITS LAST 2 FIELDS  *
*        *          COUNTERS FOR TRACKS ALLOCATED & AVAILABLE    *
*        *          ARE UPDATED ACCORDINGLY                      *
*        *-------------------------------------------------------*
         SPACE
FMTEXT   EQU   *
         LH    R1,LOTRK                 LOWER LIMIT
         CVD   R1,WORK
         MVC   TXTLOTRK,PAT5
         ED    TXTLOTRK,WORK+5
         UNPK  WORK(9),LOTCH(5)
         TR    WORK,HEXTBL
         MVC   TXTLOTCC,WORK
         MVI   TXTLODOT,C'.'
         MVC   TXTLOTHH,WORK+4
         SPACE
         LH    R1,HITRK                 UPPER LIMIT
         CVD   R1,WORK
         MVC   TXTHITRK,PAT5
         ED    TXTHITRK,WORK+5
         UNPK  WORK(9),HITCH(5)
         TR    WORK,HEXTBL
         MVC   TXTHITCC,WORK
         MVI   TXTHIDOT,C'.'
         MVC   TXTHITHH,WORK+4
         SPACE
         LA    R1,1(,R1)                UPPER LIMIT + 1
         STH   R1,LASTUPT
         SPACE
         LH    R1,EXTNO                 EXTENT SEQUENCE NUMBER
         LTR   R1,R1
         BM    CHKEXT                   SKIP IT IF ALL X'FF'
         SPACE
         CVD   R1,WORK
         MVC   TXTEXTNO,PAT3
         ED    TXTEXTNO,WORK+6
         EJECT
*        *-----------------------------*
*        *  FMTEXT SUBROUTINE - CONT.  *
*        *-----------------------------*
         SPACE
CHKEXT   EQU   *
         LR    R1,R0                    GET EXTENT TYPE
         B     HERE(R1)
HERE     B     FREEEXT                  FREE EXT
         B     USEDEXT                  USED EXT
         BR    R11                      MISSING EXT
         SPACE
FREEEXT  EQU   *
         LH    R1,EXTLN                 EXTENT LENGTH
         CVD   R1,WORK
         MVC   TXTTRKAV,PAT5            FOR TRACKS AVAILABLE
         ED    TXTTRKAV,WORK+5
         AH    R1,TRKAV
         STH   R1,TRKAV
         BR    R11                      ALL DONE
         SPACE
USEDEXT  EQU   *
         LH    R1,EXTLN                 EXTENT LENGTH
         CVD   R1,WORK
         MVC   TXTTRKAL,PAT5            FOR TRACKS ALLOCATED
         ED    TXTTRKAL,WORK+5
         AH    R1,TRKAL
         STH   R1,TRKAL
         BR    R11                      ALL DONE
         EJECT
*        *-----------------------*
*        *   C O N S T A N T S   *
*        *-----------------------*
         SPACE
ZERO     DC    F'0'
FOXES    DC    F'-1'
PAT3     DC    XL4'40202120'
PAT5     DC    XL6'402020202120'
         SPACE
ZEROCCHH DC    CL9'0000.0000'
VLABEL   DC    C'* * *  VOL LABEL  * * *'
OSDSET   DC    C'* * *  OS DATA SET(S)  * * *'
NONVSAM  DC    C'* * *  NON VSAM  * * *'
EXCEPT1  DC    C'***  OVERLAP  ***'
EXCEPT2  DC    C'***  MISSING  ***'
VTOC     DC    C'VTOC'
         SPACE 2
*        *------------------------------------------------------------*
*        *  THIS TABLE IS INDEXED BY DASD CLASS OF UCBTYP FIELD OF    *
*        *  UCB AS DESCRIBED IN OS/VS1 SYSTEM DATA AREAS (SY28-0605). *
*        *  EACH ENTRY IS 4 BYTES LONG WITH THE FOLLOWING,            *
*        *    BYTE 0   :  DASD CLASS IN HEXADECIMAL FORMAT            *
*        *    BYTE 1   :  NOT USED - X'00'                            *
*        *    BYTE 2-3 :  TOTAL NUMBER OF TRACKS ON THIS DASD VOLUME  *
*        *------------------------------------------------------------*
         SPACE
TRKSDASD DS    0F
         DC    X'00',X'00',H'0'         * * *   NO SUCH DEVICE   * * *
         DC    X'01',X'00',H'0'         2311 DISK STORAGE DRIVE
         DC    X'02',X'00',H'0'         2301 PARALLEL DRUM
         DC    X'03',X'00',H'0'         2303 SERIAL DRUM
         DC    X'04',X'00',H'0'         2302 DISK STORAGE
         DC    X'05',X'00',H'0'         2321 DATA CELL DRIVE
         DC    X'06',X'00',H'0'         2305 FIXED HEAD STORAGE MODEL 1
         DC    X'07',X'00',H'0'         2305 FIXED HEAD STORAGE MODEL 2
         DC    X'08',X'00',H'0'         2314/2319 DIRECT ACCESS STORAGE
         DC    X'09',X'00',H'0'         3330/3333 MODEL 1 DISK STORAGE
         DC    X'0A',X'00',H'0'         3340 DISK STORAGE
         DC    X'0B',X'00',H'16650'     3350 DIRECT ACCESS STORAGE
         DC    X'0C',X'00',H'0'         * * *   NO SUCH DEVICE   * * *
         DC    X'0D',X'00',H'15352'     3330/3333 MODEL 11 DISK STORAGE
TRKSDEND EQU   *
         SPACE 2
HEXNUM   DC    CL16'0123456789ABCDEF'
HEXTBL   EQU   HEXNUM-240
         SPACE
ENDING1  DC    C' TRKAL+ TRKAV = TOTAL TRACKS ACCOUNTED FOR'
ENDTRKAL EQU   ENDING1
ENDTRKAV EQU   ENDING1+7
ENDTOTAL EQU   ENDING1+15
         EJECT
*        *-----------------------*
*        *   V A R I A B L E S   *
*        *-----------------------*
         SPACE
VSAMFLG  DC    X'00'                    X'FF' IF WITHIN A VSAM DATA SP
OSFLG    DC    X'00'                    X'FF' IF NO OS SPACE INFO'S
TRKAL    DC    H'0'
TRKAV    DC    H'0'
LASTUPT  DC    H'0'
         SPACE
EXTDSCP  DS    0CL16
LOTRK    DC    H'0'
LOTCH    DS    0CL4
LOCC     DC    H'0'
LOHH     DC    H'0'
HITRK    DC    H'0'
HITCH    DS    0CL4
HICC     DC    H'0'
HIHH     DC    H'0'
EXTLN    DC    H'0'
EXTNO    DC    H'0'
         SPACE
DEVTYP   DC    XL4'00'
CYLVOL   DC    H'0'
TRKCYL   DC    H'0'
         SPACE 2
WORK     DC    D'0'
WORD     DC    F'0'
LINE     DC    CL132' '
         EJECT
INVLCHR  DSECT
INVVOLNO DS    CL6                      VOLUME SERIAL NUMBER
INVRPTNO DS    0CL1                     REPORT NO. B'X... ....'  X=0,1
INVRCKEY DS    CL4                      RECORD KEY - ZERO FOR THIS REC
INVOLUSE DS    CL2                      VOLUME USE (UCBSTAB)
INVDVTYP DS    CL4                      DEVICE TYPE
INVCYLVL DS    H                        NO. OF CYLINDERS PER VOLUME
INVTRKCL DS    H                        NO. OF TRACKS PER CYLINDER
INVBYTTK DS    H                        NO. OF BYTES PER TRACK
INVNODST DS    H                        NUMBER OF DATA SETS ON VOLUME
INVNODSP DS    H                        NUMBER OF DATA SPACE ON VOLUME
INVSYSXT DS    H                        SYSTEM ALLOWED EXTENTS
INVCATNM DS    CL44                     VSAM CATALOG NAME
INVVSEXT DS    H                        NUMBER OF VSAM FREE EXTENTS
INVVSTRK DS    H                        NUMBER OF VSAM FREE TRACKS
INVVSLGE DS    H                        TRACKS OF VSAM LARGEST FREE EXT
INVOSEXT DS    H                        NUMBER OF OS FREE EXTENTS
INVOSTRK DS    H                        NUMBER OF OS FREE TRACKS
INVOSCYL DS    H                        NUMBER OF OS FREE CYLINDERS
INVOSLGE DS    H                        TRACKS OF OS LARGEST FREE EXT
         SPACE 2
INEXTNT  DSECT
INEVOLNO DS    CL6                      VOLUME SERIAL NUMBER
INERPTNO DS    0CL1                     REPORT NO. B'1... ....' EXTENTS
INELOTCH DS    0CL4                     LOW CCHH OF EXTENT (SORT KEY)
INELOCC  DS    H
INELOHH  DS    H
INERCKEY DS    H                        H'0' FOR DSP EXT, H'1' OTHERS
INEXTNM  DS    CL44                     DATA SET NAME (ENTRY NAME)
INEHITCH DS    0CL4                     HIGH CCHH OF EXTENT
INEHICC  DS    H
INEHIHH  DS    H
INEXTLTH DS    H                        LENGTH OF EXTENT IN TRACKS
INELOTRK DS    H                        LOW TRACK NUMBER
INEHITRK DS    H                        HIGH TRACK NUMBER
INEXTNO  DS    H                        EXTENT NUMBER
         EJECT
TXTRKALC DSECT
         DS    CL9
TXTLOTRK DS    CL6
         DS    CL1
TXTLOTCH DS    0CL9
TXTLOTCC DS    CL4
TXTLODOT DS    CL1
TXTLOTHH DS    CL4
         DS    CL1
TXTHITRK DS    CL6
         DS    CL1
TXTHITCH DS    0CL9
TXTHITCC DS    CL4
TXTHIDOT DS    CL1
TXTHITHH DS    CL4
         DS    CL1
TXTTRKAL DS    CL6
         DS    CL1
TXTTRKAV DS    CL6
         DS    CL1
TXTEXTNO DS    CL4
         DS    CL2
TXTENTNM DS    CL44
         DS    CL2
TXTEXCPT DS    CL17
         END
