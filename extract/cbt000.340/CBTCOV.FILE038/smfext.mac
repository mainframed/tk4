SMFEXT  TITLE '  SMFEXT - SMF DATA EXTRACTION PROGRAM  '
*
*
*        SMF EXTRACTION PROGRAM
*
*              TOM FRANK
*              REHAB COMPUTER INC
*              MAY 1973
*
*              MODIFIED BY DENNIS GIBLIN
*                          GODDARD SPACE FLIGHT CENTER
*                          MAY 1974
*              (MODS SHOWN BY 'DMG' IN COLS. 69-71)
*
*   FJP/29JUL80 - CORRECTED RANGE OF YEARS PERMITED IN "DATECHK"
*
***********************************************************************
         SPACE 3
***********************************************************************
*
*        THIS PROGRAM IS DESIGNED TO ENABLE A USER TO EXTRACT A SUBSET
*        OF THE DATA PRODUCED BY THE SYSTEMS MANAGEMENT FACILITY OF OS.
*        EXTRACTION IS BY 2 CRITERIA -
*              A )  RECORD TYPE
*              B )  DATE/TIME STAMP
*
*        OUTPUT IS TO A SEQUENTIAL DATA SET WITH CHARACTERISTICS
*        AS DEFINED BY THE USER IN HIS JCL OR DATA SET LABEL.
*
*        USAGE
*
*        THE JCL FOR  A TYPICAL RUN IS AS FOLLOWS
*
*              //STEPNAME EXEC PGM=SMFEXT,REGION=70K
*              //SYSPRINT DD SYSOUT=A
*              //SYSUT1 DD DSNAME=<SYS1.MANY>,DISP=SHR,
*              //  DCB=(RECFM=VBS,LRECL=3200,BLKSIZE=3204)
*              //SYSUT2 DD DSNAME=SMF.OUT,DISP=(NEW,KEEP),UNIT=SYSDA,
*              //  SPACE=(CYL,(1,1)),DCB=*.SYSUT1
*              //SYSIN DD *
*                  -YOUR PARAMETER CARDS HERE
*              /*
*
*        -THE SYSUT1 DD CARD DEFINES THE INPUT DATA SET (SYS1.MANX(Y),
*         A HISTORY DATA TAPE PRODUCED BY IFASMFDP OR ANY COLLECTION
*         OF SMF DATA.
*        -THE SYSUT2 DD CARD DEFINES THE OUTPUT DATA SET.  IT MAY BE
*         ANY SEQUENTIAL DATA SET WITH V OR F RECORDS, WITH OR
*         WITHOUT BLOCKING OR SPANNING.  IF THE RECORDS ARE TO BE
*         FIXED LENGTH, THE INPUT RECORDS WILL BE TRUNCATED OR PADDED
*         TO THE DESIRED LENGTH.  FIXED LENGTH INPUT AND VARIABLE
*         LENGTH OUTPUT FORM A COMBINATION NOT SUPPORTED.
*        -THE SYSPRINT DD CARD SPECIFIES A LISTING DATA SET FOR INPUT
*         LISTING, MESSAGES AND A STATISTICAL SUMMARY AT TERMINATION.
*        -THE SYSIN DD CARD IS FOLLOWED BY THE PARMATER CARDS
*
*        PARAMETERS
*
*        THE PARM CARDS ARE IN A FREE FORMAT WITH AS MANY PARMS/CARD
*        AS DESIRED. THE ONLY RESTRICTION IS THAT THE LAST NONBLANK
*        ON ALL BUT THE LAST CARD BE A COMMA.  THE TYPE OF PARMS ARE
*
*              SDATE=YYDDD
*                    SPECIFIES A STARTING DATE FOR SELECTION
*
*              STIME=HHMMSS
*                    USED WITH SDATE TO SPECIFY TIME OF DAY FOR START
*
*              EDATE=YYDDD
*                    SPECIFY END DATE
*
*              ETIME=HHMMSS
*                    SAME AS STIME
*
*              TYPE=AR
*                    DEFAULT -PROGRAM ASSUMES THIS ON ABSENCE OF TYPE=
*
*              TYPE=(TYPE,TYPE,...,TYPE)
*                    SPECIFY UP TO 20 RECORD TYPES
*
*              EXCLUDE=(TYPE,TYPE,...,TYPE)
*                      SPECIFY RECORD TYPES NOT TO BE SELECTED
*
*              MAXREC=NUMBER
*                    SPECIFY MAX NO OF RECORDS TO BE SELECTED
*
*              'TYPE' AND 'EXCLUDE' ARE MUTUALLY EXCLUSIVE KEYWORDS.
*
*
*        RETURN CODES
*
*              0 - NORMAL COMPLETION - NO WARNINGS
*              4 - WARNINGS ENCOUNTERED
*              12- ERRORS ENCOUNTERED - RUN ABORTED
*              16- PERMANENT I/O ERRORS ENCOUNTERED
*
*        SPECIAL CODING
*
*              THERE ARE 2  'WTO' MACROS USED WITH A ROUTING CODE OF 11
*              THESE ARE TO WRITE TO PROGRAMMER CERTAIN ERRORS WHICH
*              CANNOT BE OUTPUT TO SYSPRINT
*
***********************************************************************
         EJECT
***********************************************************************
*
*         REGISTER USAGE
*
***********************************************************************
          SPACE  2
R0        EQU    0                        TEMP REGISTER
R1        EQU    1                            "
R2        EQU    2
R3        EQU    3                            "
R4        EQU    4
R5        EQU    5
R6        EQU    6
R7        EQU    7
R8        EQU    8
R9        EQU    9                        POINTS TO OUTPUT IF RECFM=FB
R10       EQU    10                       SAVE LINKAGE REGISTER
R11       EQU    11                       LINKAGE REGISTER
R12       EQU    12                       PROGRAM BASE REGISTER
R13       EQU    13                       SAVE AREA POINTER     ×  ×
R14       EQU    14                       STANDARD LINKAGE REGISTER
R15       EQU    15                       DITTO
          EJECT
***********************************************************************
*
*         START MAINLINE HERE
*
***********************************************************************
SMFEXT    CSECT
          ENTRY  SMFBGN                   ENTRY POINT
          DS     0F
          USING  *,R15                    GET A BASE FOR START
SMFBGN    SAVE   (14,12),T,*              SAVE CALLERS REGS
          L      R14,ASAVE                GET MY SAVE AREA
          ST     R13,4(R14)               SAVE HIS ADDRESS
          ST     R14,8(R13)               SAVE MINE IN HIS
          LR     R13,R14                  INITIALIZE MY POINTER
          USING  SAVE,R13
          LR     R12,R15                  SETUP BASE OF MY PROGRAM
          USING  SMFBGN,R12
          DROP   R15
          B      SMFGO                    GET STARTED
ASAVE     DC     A(SAVE)                  ADCON FOR INIT
          SPACE  3
***********************************************************************
*
*         OPEN SYSOUT-AND HOPE IT GOES
*
***********************************************************************
SMFGO     OPEN   (SYSOUT,(OUTPUT))        OPEN SYSOUT FILE
          LA     R3,SYSOUT                SETUP BASE FOR DCBD
          USING  IHADCB,R3                TELL ASM
          TM     DCBOFLGS,OPENBITS        OPEN OK
          DROP   R3                       LET ASM FORGET BASE
          BO     SYSOUTOK                 YES-SO PROCEED
          WTO    'SYSOUT DATA SET CAN NOT BE OPENED',ROUTCDE=11
BADOPEN   LA     R0,12                    SET CONDITION CODE
          BAL    R11,RETCODE              NOW
          B      LEAVE                    EXIT TO CALLER(OS)
          SPACE  3
***********************************************************************
*
*         NOW TRY FOR SYSIN
*
***********************************************************************
SYSOUTOK  MVI    OUTMSG,C' '              CLEAR MESSAGE AREA
          MVC    OUTMSG+1(132),OUTMSG
          OPEN   (SYSIN,(INPUT))          OPEN SYSIN
          LA     R3,SYSIN                 SETUP FOR DCBD
          USING  IHADCB,R3                TELL ASM
          TM     DCBOFLGS,OPENBITS        OPEN OK
          DROP   R3                       LET ASM FORGET BASE
          BO     SYSINOK                  YOU BET SO PROCEED
          MVC    OUTMSG(L'SYSINBAD),SYSINBAD
          BAL    R11,OUTLINE              AND PRINT IT
          B      BADOPEN                  GO DO REST OF ERROR STUFF
***********************************************************************
*
*         SYSIN OPEN OK-GO SCAN PARAMS
*
***********************************************************************
SYSINOK   B      PARMSCAN                 GO DO PARMS
          EJECT
***********************************************************************
*
*         RETURN HERE FROM PARM SCAN
*         CONTINUE TO OPEN FILES
*
***********************************************************************
FILEOPEN  OPEN   (SYSUT1,(INPUT))         OPEN SMF DATA SET
          LA     R3,SYSUT1                SETUP FOR OPEN CHECK
          USING  IHADCB,R3
          TM     DCBOFLGS,OPENBITS        OPEN SUCCESSFUL
          DROP   R3
          BO     SYSUT1OK                 YES SO PROCEED
          MVC    OUTMSG(L'SYSUT1BD),SYSUT1BD
          BAL    R11,OUTLINE              NOW ABOUT FAILURE
          B      BADOPEN                  AND CONTINUE ERROR STUFF
          SPACE  3
***********************************************************************
*
*         FINALLY TRY FOR SYSUT2
*
***********************************************************************
          SPACE  2
SYSUT1OK  OPEN   (SYSUT2,(OUTPUT))        OPEN IT                   DMG
          LA     R3,SYSUT2                SETUP BASE
          USING  IHADCB,R3
          TM     DCBOFLGS,OPENBITS        OPENED OK
          BO     SYSUT2OK                 YES-ALL DONE OPENS
          DROP   R3
          MVC    OUTMSG(L'SYSUT2BD),SYSUT2BD
          BAL    R11,OUTLINE              AND PRINT IT
          B      BADOPEN                  CONTINUE ERROR
SYSUT2OK  NI     FLAGS,IOERROFF           TURN OFF IO ERROR FLAG
          XI     FLAGS,R1999              TURN OFF 1999 FLAG
         LA    R3,SYSUT1                                            DMG
         USING IHADCB,R3                                            DMG
         TM    DCBRECFM,X'C0'     LOOK IF F OR V                    DMG
         BM    FORV1         ONE BIT ON IS YES                      DMG
*                            IF BOTH OR NONE WE CAN'T HANDLE IT     DMG
BADRECFM MVC   OUTMSG(L'BADRFM1),BADRFM1                            DMG
         BAL   R11,OUTLINE                                          DMG
         B     BADOPEN                                              DMG
FORV1    TM    DCBRECFM,X'80'     SYSUT1 FIXED?                     DMG
         BO    RECFM2        YES, LEAVE FLAG ALONE                  DMG
         NI    UT1RECFM,X'00'     NO, INDICATE VARIABLE             DMG
RECFM2   LA    R3,SYSUT2                                            DMG
         TM    DCBRECFM,X'C0'                                       DMG
         BC    9,BADRECFM    ERROR IF NOT MIXED                     DMG
         TM    DCBRECFM,X'80'     SYSUT2 FIXED?                     DMG
         BO    RECFMCOM      LEAVE FLAG ALONE                       DMG
         NI    UT2RECFM,X'00'     INDICATE VARIABLE                 DMG
RECFMCOM EQU   *             WE WON'T ALLOW FIXED IN, VAR. OUT      DMG
         TM    UT1RECFM,X'FF'     FIXED?                            DMG
         BZ    ENDCOMP       NO, WE'RE OK                           DMG
         TM    UT2RECFM,X'FF'     FIXED?                            DMG
         BO    ENDCOMP       YES, WE'RE OK                          DMG
         MVC   OUTMSG(L'BADRFM2),BADRFM2                            DMG
         BAL   R11,OUTLINE                                          DMG
         B     BADOPEN                                              DMG
         DROP  R3                                                   DMG
ENDCOMP  EQU   *             WE CAN CONTINUE                        DMG
***********************************************************************
*
*        REMOVED SEQUENCE ERROR MESSAGE-BY NOT TURNING OFF FLAG
*
***********************************************************************
*        XI    FLAGS,SEQERR            TURN OFF SEQ ERROR FLAG
         TM    UT2RECFM,X'FF'          SYSUT2 A VBS FILE            DMG
          BZ     MAINLOOP                 YES SO START MAIN LOOP    DMG
***********************************************************************
*
*         ALLOCATE MEMORY FOR OUTPUT BUFFER
*
***********************************************************************
          LA     R3,SYSUT2                GET BASE
          USING  IHADCB,R3
          LH     R0,DCBLRECL              GET LENGTH FOR AREA
          DROP   R3
          GETMAIN R,LV=(0)                 GET CORE FROM OS
          ST     R1,GOTAREA               PUT IT WHERE I WANT IT    DMG
          EJECT
***********************************************************************
*
*         MAIN LOOP HERE
*
***********************************************************************
MAINLOOP  GET    SYSUT1                   FETCH A RECORD
*
*         LOCATE MODE-BUFFER IN R1
*
          TM     FLAGS,IOERR              LAST IO ERROR
          BO     IODIE                    YEP SO EXIT
          LA     R0,1                     LOAD A 1
          A      R0,TOTREAD               ADD IN TOTAL READ SO FAR
          ST     R0,TOTREAD               AND REPLACE IT
          USING  SMFAREA,R1               SETUP BASE FOR RECORD     DMG
         TM    UT1RECFM,X'FF'    FIXED INPUT?                       DMG
         BZ    RECVALID        NO, WE LEAVE R1 ALONE                DMG
         A     R1,MINUS4    YES, WE DON'T HAVE A RDW IN FRONT OF DATDMG
RECVALID EQU   *    TRY TO SEE IF VALID RECORD: GOOD PACKED DATE    DMG
*        AND VALID ALPHANUMERICS FOR SYSTEM ID AND MODEL            DMG
         IC    R2,SMFDAT+3             LOW ORDER OF DATE            DMG
         N     R2,F                    LEAVES ONLY SIGN             DMG
         C     R2,F                    SHOULD BE F                  DMG
         BNE   INVALID                 NOPE                         DMG
         LA    R2,SMFDAT+3             YES, LOOK AT ALPHAS          DMG
         LA    R3,4                    LOOK AT 4 BYTES              DMG
ALPHACHK LA    R2,1(R2)                BUMP IT                      DMG
         CLI   0(R2),C'A'                                           DMG
         BL    INVALID                                              DMG
         CLI   0(R2),C'9'                                           DMG
         BH    INVALID                                              DMG
         BCT   R3,ALPHACHK                                          DMG
         B     MOVETIME                IF WE FALL OUT, OK           DMG
INVALID  L     R2,BADCOUNT                                          DMG
         LA    R2,1(R2)                BUMP IT                      DMG
         ST    R2,BADCOUNT                                          DMG
         B     MAINLOOP                SKIP THIS RECORD             DMG
MOVETIME  MVC    SMFTIME,SMFTIM           MOVE TIME TO A NEW SPOT   DMG
          MVC    WKAR,ZEROES              SETUP
          MVC    WKAR+4(4),SMFDAT         FOR CVB
          CVB    R0,WKAR                  MAKE DATE BINARY
          ST     R0,SMFDATE               AND SAVE
          SPACE  2
***********************************************************************
*
*         SEE IF FROM 1999-IE A TEST RECORD
*
***********************************************************************
          SR     R2,R2                    CLEAR FOR DIVIDE
          L      R3,SMFDATE               FETCH DATE
          LA     R4,1000                  EXTRACT
          DR     R2,R4                    YEAR
          C      R3,SMF1999               IS IT 1999
          BNE    CHECKTIM                 NO SO SEE IF BIG INTERVAL
          TM     FLAGS,R1999              ALREADY PRINT MESSAGE
          BO     TRYSEL                   YES SO DONT DO IT AGAIN
          OI     FLAGS,R1999              NO SO DONT AGAIN
          MVC    OUTMSG(L'R1999M),R1999M  SETUP MESSAGE
          BAL    R11,OUTLINE              AND PRINT IT
          LA     R0,4                     ONLY A WARNING
          BAL    R11,RETCODE              BUT SET IT
          B      TRYSEL                   GO TRY FOR A SELECTION
          SPACE  3
***********************************************************************
*
*         SEE IF INTERVAL BETWEEN RECORDS IS GREATER THAN 3 HOURS
*
***********************************************************************
CHECKTIM  TM     FLAGS,FIRST              SKIP IF FIRST RECORD
          BO     STORETIM                 YES FIRST SO DEPOSIT ONLY
***********************************************************************
*
*         CHECK IF CURRENT DATE NOT < PREVIOUS DATE
*
***********************************************************************
*        RECORD TYPES 2,3,10 MAY HAVE SCREWY TIMES SO WE            DMG
*        BYPASS ALL TIME CHECKS IF THIS ORRPREVIOUS RECORD          DMG
*        ARE OF THOSE TYPES                                         DMG
         CLI   SMFTYPE,2                                            DMG
         BE    STORETIM      BYPASS CHECKS                          DMG
         CLI   SMFTYPE,3                                            DMG
         BE    STORETIM                                             DMG
         CLI   SMFTYPE,10                                           DMG
         BE    STORETIM                                             DMG
         CLI   LASTRECT,2                                           DMG
         BE    STORETIM      BYPASS CHECKS                          DMG
         CLI   LASTRECT,3                                           DMG
         BE    STORETIM                                             DMG
         CLI   LASTRECT,10                                          DMG
         BE    STORETIM                                             DMG
          L      R0,SMFDATE               COMPARE DATE TO
          C      R0,LASTDATE              LAST RECORD
          BE     CTIME1                   EQUAL SO CHECK TIMES
          BH     CTIME2                   GREATER SO OK
DATESQ   TM    FLAGS,SEQERR            MESSAGE PRINTED ALREADY?
         BO    STORETIM                YES-SO DONT PRINT AGAIN
          LA     R0,4                     SET COND CODE
          BAL    R11,RETCODE              DO IT
         OI    FLAGS,SEQERR            TURN ON FLAG
          MVC    OUTMSG(L'DATESEQ),DATESEQ
          BAL    R11,OUTLINE              AND PRINT IT
          B      STORETIM                 SKIP REST
CTIME1    L      R0,SMFTIME               GET TIME
          C      R0,LASTTIME              AND COMPARE
          BNL    CTIME2                   IF OK-SKIP ERRORS
          B      DATESQ
***********************************************************************
*
*         SEQUENCE IS OK-NOW TRY INTERVAL
*
***********************************************************************
CTIME2    L      R3,SMFDATE               FETCH CURRENT DATE
          S      R3,LASTDATE              GET DIFFERENCE
          M      R2,HSECDAY               CONVERT TO SECONDS
          L      R2,SMFTIME               FETCH CURRENT TIME
          S      R2,LASTTIME              MINUS LAST TIME
          AR     R2,R3                    ADD IT ALL TOGETHER
          C      R2,HSEC3HR               COMPARE WITH 3 HOURS
          BL     STORETIM                 IF LESS SKIP MSG
***********************************************************************
*
*         OOPS- A BIG INTERVAL SO TELL USER
*
***********************************************************************
          LA     R0,4                     SET FOR WARNING
          BAL    R11,RETCODE              AND SET IT
          MVC    OUTMSG(TIMEMSGE-TIMEMSG),TIMEMSG
          L      R2,LASTDATE              FETCH DATE
          CVD    R2,WKAR                  MAKE IT DECIMAL
          UNPK   OUTMSG+37(5),WKAR+5(3)   PUT IN LINE
          OI     OUTMSG+41,C'0'           OR IN PREFERRED SIGN
          L      R3,LASTTIME
         LA    R4,OUTMSG+50            GET BASE OF TIME STAMP
         BAL   R11,TIMEMOVE            PUT IN LONE
         L     R2,SMFDATE
         CVD   R2,WKAR                 MAKE IT DECIMAL
         UNPK  OUTMSG+69(5),WKAR+5(3)  PUT IN LINE
         OI    OUTMSG+73,C'0'
         LA    R4,OUTMSG+82
         L     R3,SMFTIME
         BAL   R11,TIMEMOVE
          BAL    R11,OUTLINE              AND PRINT IT
          SPACE  3
***********************************************************************
*
*         NOW SAVE THESE TIMES FOR THE NEXT TRY
*
***********************************************************************
STORETIM  L      R0,SMFDATE               SAVE THIS DATE
          ST     R0,LASTDATE              FOR NEXT PASS
          L      R0,SMFTIME               AND
          ST     R0,LASTTIME              TIME
         IC    R0,SMFTYPE                                           DMG
         STC   R0,LASTRECT   SAVE TYPE FOR NEXT PASS                DMG
          NI     FLAGS,FIRSTOFF           TURN OFF FIRST RECORD FLAG
          SPACE  3
***********************************************************************
*
*         SEE IF IN RANGE OF DATE CRITERIA ENTERED BY PARMS
*
***********************************************************************
         CLI   SMFTYPE,2                                            DMG
         BE    TRYSEL      BYPASS CHECKS                            DMG
         CLI   SMFTYPE,3                                            DMG
         BE    TRYSEL                                               DMG
         CLI   SMFTYPE,10                                           DMG
         BE    TRYSEL                                               DMG
          TM     FLAGS,ALLDTE             IF ALL DATES
          BO     TRYSEL                   GO TRY A RECORD SELECT
          TM     FLAGS,NLDTE              A LOW DATE ENTERED
          BO     SDATEHGH                 NO SO TRY FOR A HIGH CHECK
          L      R0,SMFDATE               COMPARE
          C      R0,LOWDTE                DATES
          BL     MAINLOOP                 LOOP IF LESS
          BNE    SDATEHGH                 NOT EQUAL SO DO HIGH CHECK
          L      R0,SMFTIME               FETCH TIME
          C      R0,LOWTIM                AND COMPARE
          BL     MAINLOOP                 EXIT
SDATEHGH  TM     FLAGS,NHDTE              A HIGH DATE ENTERED
          BO     TRYSEL                   NO SO GO TRY A SELECT
          L      R0,SMFDATE               COMPARE
          C      R0,HIGHDTE               DATES
          BH     ENDNORM                  NORMAL EXIT
          BNE    TRYSEL                   IF NOT EQUAL GO ON
          L      R0,SMFTIME               GET TIME
          C      R0,HIGHTIM               AND COMPARE
          BH     ENDNORM                  IF GREATER THEN EXIT
          EJECT
TRYSEL   EQU   *                                                    DMG
         SR    R7,R7                                                DMG
         IC    R7,SMFTYPE    RECORD TYPE(BIN) IN R7                 DMG
         TM    FLAGS,ALLTYPE                                        DMG
         BO    WANTIT          WILL TAKE ALL RECORDS                DMG
         LA    R3,TYPSELTB   START OF SELECTION TABLE               DMG
         AR    R3,R7         ADD(ENTRY FOR THIS TYPE)               DMG
         TM    0(R3),TYPEON  WANT THIS TYPE?                        DMG
         BZ    MAINLOOP      NO,GO TO NEXT INPUT RECORD             DMG
WANTIT   LA    R3,TYPCOUNT   YES, INCREASE COUNT FOR TYPE           DMG
         SLL   R7,2          MULT. BY 4(SIZE OF COUNT ENTRY)        DMG
         L     R5,0(R7,R3)   LOAD COUNT                             DMG
         LA    R5,1(R5)      BUMP IT                                DMG
         ST    R5,0(R7,R3)   PUT IT AWAY                            DMG
         LA    R5,1                                                 DMG
         A     R5,TOTSEL     BUMP TOTAL SELECTED                    DMG
         ST    R5,TOTSEL                                            DMG
          EJECT
*        OUTPUT RECORD.  IF OUTPUT FORMAT IS V THEN SO IS           DMG
*        INPUT BY EARLIER CHECKS.  NEED ONLY CHECK LENGTHS          DMG
*        IF OUTPUT IS FIXED, THEN MAYBE MUST MOVE TO BUFFER POINTED DMG
*        TO BY R9 AND TRUNCATE OR PAD.                              DMG
         TM    UT2RECFM,X'FF'     FIXED OUTPUT?                     DMG
         BO    FBOUT         YES                                    DMG
         LA    R3,SYSUT2     NO, VARIABLE LRECL IS IN DCB           DMG
         USING IHADCB,R3                                            DMG
         LH    R3,DCBLRECL   DESIRED MAX RECORD LENGTH              DMG
         DROP  R3                                                   DMG
         SR    R4,R4       CLEAR                                    DMG
         IC    R4,SMFLEN      DO IT THIS WAY BECAUSE OF             DMG
         SLL   R4,8                                                 DMG
         IC    R4,SMFLEN+1    BOUNDARY PROBLEMS                     DMG
         CR    R3,R4         COMPARE OUTPUT LENGTH TO INPUT         DMG
         BNL   LOAD9         DON'T HAVE TO ADJUST INPUT LENGTH      DMG
         STC   R3,SMFLEN+1                                          DMG
         SRL   R3,8                                                 DMG
         STC   R3,SMFLEN       OVERRIDE INPUT WITH OUTPUT LENGTH    DMG
LOAD9    LR    R9,R1         R9 WILL ALWAYS POINT AT OUTPUTDRECORD  DMG
         B     RECOUT        GO DO OUTPUT                           DMG
FBOUT    EQU   *             FIXED OUTPUT. WE WILL BUILD RECORD     DMG
*        IN GOTTEN CORE IF PADDING NEEDED AND LEAVE ALONE IF WE     DMG
*        HAVE TO TRUNCATE(POINT R9 AT INPUT RECORD DATA             DMG
         LA    R3,SYSUT2                                            DMG
         USING IHADCB,R3                                            DMG
         LH    R3,DCBLRECL   OUTPUT LENGTH                          DMG
         DROP  R3                                                   DMG
         TM    UT1RECFM,X'FF'     INPUT FIXED?                      DMG
         BO    FIXEDIN       YES                                    DMG
         SR    R4,R4       CLEAR                                    DMG
         IC    R4,SMFLEN      DO IT THIS WAY BECAUSE OF             DMG
         SLL   R4,8                                                 DMG
         IC    R4,SMFLEN+1    BOUNDARY PROBLEMS                     DMG
         A     R4,MINUS4     GET LENGTH OF ACTUAL DATA              DMG
         B     COMPLENG                                             DMG
FIXEDIN  LA    R4,SYSUT1                                            DMG
         USING IHADCB,R4                                            DMG
         LH    R4,DCBLRECL   INPUT LENGTH                           DMG
         DROP  R4                                                   DMG
COMPLENG LA    R1,4(R1)      POINT R1 AT ACTUAL DATA                DMG
         CR    R3,R4         COMPARE RECORD LENGTHS                 DMG
         BH    PAD           OUTPUT IS BIGGER,SO MUST PAD           DMG
*        OTHERWISE, INPUT BIGGER. SO WE TRUNCATE IMPLICITLY         DMG
         LR    R9,R1         BY MERELY POINTING AT INPUT            DMG
         B     RECOUT        DO OUTPUT                              DMG
PAD      EQU   *             TOUGHEST PART: MUST MOVE INPUT RECORD TDMG
*        GOTTEN CORE AND PAD OUT TO OUTPUT RECORD LENGTH. REMEMBER  DMG
*        MVC ONLY GOOD UP TO 256 CHARS.  R1 POINTS AT INPUT, R3 IS  DMG
*        OUTPUT LENGTH, R4 IS INPUT LENGTH.                         DMG
         L     R10,GOTAREA        POINT TO AREA FOR OUTRECORD       DMG
         LR    R9,R10        PRESERVE POINTER TO START IN R9FOR PUT DMG
         AR    R10,R4        POINTS TO START OF PAD AREA(AFTER DATA)DMG
         SR    R3,R4         LENGTH OF PAD AREA                     DMG
         MVI   0(R10),C' '   1ST BLANK                              DMG
         BCTR  R3,R0         DECREMENT R3 BY 1                      DMG
PADCOMP  C     R3,MAXMVC     > 256 TO MOVE?                         DMG
         BNH   LASTPAD       NO, GO MOVE WHAT'S LEFT                DMG
         MVC   1(256,R10),0(R10)  MOVE 256 CHARS.                   DMG
         LA    R10,256(R10)  POINT AT LAST BLANK                    DMG
         S     R3,MAXMVC     MINUS NUMBER MOVED                     DMG
         B     PADCOMP       RECYCLE                                DMG
EXPAD    MVC   1(0,R10),0(R10)    DUMMY MOVE FOR EXECUTE INSTR.     DMG
LASTPAD  EQU   *             R10 POINTS AT LAST BLANK,R3 HAS # LEFT DMG
         BCTR  R3,R0         PREPARE FOR EXECUTE BY DECR. R3        DMG
         EX    R3,EXPAD      VARIABLE LENGTH MOVE                   DMG
*        HAVE PADDED, NOW MUST MOVE RECORD. R9 POINTS AT OUT AREA   DMG
*        R4 HAS LENGTH OF INPUT, R1 POINTS AT INPUT                 DMG
         LR    R10,R9        PRESERVE R9                            DMG
MOVECOMP C     R4,MAXMVC     SAME IDEA AS INPADDING                 DMG
         BNH   LASTMOVE      LESSTHAN 257 TO MOVE                   DMG
         MVC   0(256,R10),0(R1)   MOVE 256                          DMG
         LA    R10,256(R10)  POINT AT                               DMG
         LA    R1,256(R1)    REMAINING AREAS                        DMG
         S     R4,MAXMVC     DECREMENT # TO BE MOVED                DMG
         B     MOVECOMP                                             DMG
EXMOVE   MVC   0(0,R10),0(R1)     DUMMY MOVE                        DMG
LASTMOVE BCTR  R4,R0         PREPARE FOR EXECUTE                    DMG
         EX    R4,EXMOVE                                            DMG
RECOUT   EQU   *             READY FOR THE PUT.  IN ALL CASES, R9   DMG
*                            POINTS AT THE RECORD.                  DMG
         PUT   SYSUT2,(R9)                                          DMG
         TM    FLAGS,IOERR                                          DMG
         BO    IODIE         I/O ERROR OCCURRED, SO TERMINATE       DMG
         L     R0,TOTSEL     RECORDS SELECTED                       DMG
         C     R0,MAXSEL     HAVE AS MANY AS REQUESTED?             DMG
         BL    MAINLOOP      NO, GET ANOTHER RECORD                 DMG
          EJECT
***********************************************************************
*
*         NORMAL END OF JOB
*
***********************************************************************
ENDNORM  MVC    OUTMSG(L'ENDMSG1),ENDMSG1
         BAL    R11,OUTLINE
         LA    R3,256        NUMBER OF TABLE ENTRIES                DMG
         LA    R9,TYPCOUNT-4   INITIALIZATION FOR LOOP              DMG
         SR    R10,R10                                              DMG
SUMLOOP  LA    R4,256                                               DMG
         SR    R4,R3         YIELDS TYPE # IN QUESTION              DMG
         LA    R9,4(R9)      LOOK AT ENTRY FOR THIS TYPE            DMG
         C     R10,0(R9)          ANY RECORDS SELECTED?             DMG
         BNL   LOOPEND            NO, BOTTOM OF LOOP                DMG
         MVC   OUTMSG(39),ENDMSG2 SKELTON                           DMG
         CVD   R4,WKAR            RECORD TYPE                       DMG
         UNPK  OUTMSG+7(3),WKAR+6(2)                                DMG
         OI    OUTMSG+9,C'0'                                        DMG
         L     R4,0(R9)           COUNT                             DMG
         CVD   R4,WKAR                                              DMG
         UNPK  OUTMSG+33(6),WKAR+4(4)                               DMG
         OI    OUTMSG+38,C'0'                                       DMG
         BAL   R11,OUTLINE                                          DMG
LOOPEND  BCT   R3,SUMLOOP                                           DMG
ENDNORM2 MVC    OUTMSG(30),ENDMSG3       SETUP SELECTED MESSAGE
         L      R4,TOTSEL                GET NUMBER
         CVD    R4,WKAR                  MAKE IT DECIMAL
          UNPK   OUTMSG+24(6),WKAR+4(4)
          OI     OUTMSG+29,C'0'
         BAL    R11,OUTLINE              AND PRINT
         MVC    OUTMSG(30),ENDMSG4       SETUP TOTAL READ
         L      R4,TOTREAD               GET NUMBER
         CVD    R4,WKAR                  MAKE IT DECIMAL
          UNPK   OUTMSG+24(6),WKAR+4(4)
          OI     OUTMSG+29,C'0'
         BAL    R11,OUTLINE              PRINT IT
         L     R2,BADCOUNT             # OF INVALID RECORDS FOUND   DMG
         LTR   R2,R2                   ZERO?                        DMG
         BZ    LEAVE                   YES, THEN NO MESSAGE         DMG
         CVD   R2,WKAR                                              DMG
         MVC   OUTMSG(35),ENDMSG5                                   DMG
         UNPK  OUTMSG+31(4),WKAR+5(3)                               DMG
         OI    OUTMSG+34,C'0'                                       DMG
         BAL   R11,OUTLINE                                          DMG
LEAVE    CLOSE  (SYSIN,,SYSOUT,,SYSUT1,,SYSUT2)
         L      R15,RTCODE               FETCH RETURN CODE
         L      R13,4(R13)               RESTORE CALLERS SAVE
         RETURN (14,12),RC=(15)          RETURN TO OS
         EJECT
***********************************************************************
*
*        IODIE - COME HERE FOR MORE THAN IOMAX ERRORS
*
***********************************************************************
IODIE    MVC    OUTMSG(L'IOMSG),IOMSG    MOVE IN MESSAGE
         PUT   SYSOUT,OUTMSG           PRINT ERROR
         B      LEAVE                    TRY FOR EXIT
          SPACE 3
***********************************************************************
*
*        SYSUT1ED - END OF DATA ON SYSUT1
*
***********************************************************************
SYSUT1ED TM     FLAGS,NHDTE              TOP DATE
         BO     ENDNORM                  NOPE SO OK
         MVC    OUTMSG(L'SYSUT1EM),SYSUT1EM
         BAL    R11,OUTLINE
         LA     R0,4                     SET CODE
         BAL    R11,RETCODE
         B      ENDNORM
***********************************************************************
*
*        TIMEMOVE - MOVE TIME IN R3 TO PATTERN IN R4 XX:XX:XX
*
***********************************************************************
TIMEMOVE SR    R2,R2                   CLEAR FOR DIVIDE
         LA    R0,100                  GET FACTOR
         DR    R2,R0              CONVERT TO SECONDS
         SR    R2,R2              CLEAR FOR DIVIDE
         LA    R0,60              FACTOR
         DR    R2,R0              CONVERT TO MINUTES
         CVD   R2,WKAR                 SECONDS
         UNPK  6(2,R4),WKAR+6(2)
         OI    7(R4),C'0'
         SR    R2,R2                   CLEAR FOR DIVIDE
         DR    R2,R0                   GET MINUTES AND HRS
         CVD   R2,WKAR
         UNPK  3(2,R4),WKAR+6(2)
         OI    4(R4),C'0'
         CVD   R3,WKAR
         UNPK  0(2,R4),WKAR+6(2)
         OI    1(R4),C'0'
         BR    R11                     EXIT
         EJECT
***********************************************************************
*
*        SYNADR - SYNAD ROUTINE
*
***********************************************************************
SYNRTN    CSECT
         DROP  R12
         DROP  R13
SYNADR   EQU    *
         USING  SYNADR,R15               INITIAL BASE FOR THIS ROUTINE
         SYNADAF ACSMETH=QSAM            CALL FOR ERROR ANALYSIS
          STM    R14,R12,SYNADSAV         SAVE REGS
         LR     R10,R15                  SETUP NEW BASE
         DROP   R15
          USING  SYNADR,R10
         L      R9,BSAVE                 POINT TO DATA AREA
         USING  SAVE,R9
         MVI   8(R1),C' '                BLANK OUT POSSIBLE
         MVC   9(5,R1),8(R1)             BINARY INFO
         CLC     75(8,R1),SYSPRDDN        COMPARE DDNAMES
         BNE   SYNADR0            PRINT ON SYSOUT
         LA    R1,4(R1)           SKIP BLOCK STUFF
         OI    2(R1),X'80'        TURN ON MCSFLAG
         MVC   124(4,R1),WTORTE   MOVE IN ROUTING CODE
         WTO     MF=(E,(1)),ROUTCDE=11    WRITE IN LOG
         B       SYNADR2                  AND EXIT
SYNADR0   LA     R1,7(R1)                  SKIP VB STUFF
          MVI    0(R1),C' '                BLANK OUT CARRIAGE CONTROL
          LR     R0,R1                    COPY SO PUT WILL WORK
          PUT    SYSOUT,(R0)              WRITE ERROR MESSAGE
SYNADR2  LH     R2,IOCNT                 FETCH ERROR COUNT
         LA     R2,1(,R2)                UP BY 1
         STH    R2,IOCNT                 SAVE IT
         LH     R3,IOMAX                 GET MAXIMUM
         CR    R2,R3
         BNH   SYNADR1
         OI     FLAGS,IOERR              TURN ON FLAG
         LA     R0,16                    SET COND CODE
         ST     R0,RTCODE
         DROP   R9
SYNADR1   LM     R14,R12,SYNADSAV         RESTORE REGS
         DROP  R10                     CAUSE REGS HAVE BEEN RESTORED
         USING SYNADR,R15              GOT R15 BACK
         SYNADRLS                        FREE UP AFTER SYNADEF
         BR     R14                      RETURN TO OS
BSAVE    DC     A(SAVE)
SYNADSAV DC    15F'0'                  SYNAD ROUTINE SAVE AREA
         DROP   R15
          EJECT
***********************************************************************
*
*         PARAMETER SCANNER
*
***********************************************************************
SMFEXT    CSECT                           CONTINUE MAIN CSECT
         USING SMFBGN,R12
         USING SAVE,R13
PARMSCAN  SR     R2,R2                    CLEAR END OF CARD SIGNAL
          LA     R1,1                     SET UP FOR EOCARD
         NI    FLAGS,IOERROFF          TURN OFF SWITCH
         MVC   OUTMSG(L'BGNMSG),BGNMSG PRINT INITIAL BANNER
         BAL   R11,OUTLINE
         OI    PFLAGS,COMMAON          TURN ON COMMA FLAG
***********************************************************************
*
*         LOOP HERE-EXIT TO PARMEOF ON EOD ON SYSIN
*
***********************************************************************
PARMLOOP  TM     PFLAGS,SYSEND            END OF INPUT
          BO     PARMEOF                  YEP
          BAL    R11,GETNNB               FETCH NEXT CHAR
          CLI    0(R1),C','               COMMA
          BNE    PLOOK1                   NOPE SO TRY A KEYWORD
          B      PARMLOOP
PLOOK1    CLC    SDATEM,0(R1)             STARTING DATE
          BNE    PLOOK2                   NOPE SO ANOTHER
         TM    FLAGS,NLDTE             FLAG OFF ALREADY?
         BZ    PARMTWI                 YES-SO ERROR
          LA     R1,L'SDATEM(,R1)         SKIP THIS ONE
          BAL    R11,DIGIT                FETCH NUMBER
         BAL   R11,DATECHK             VALIDATE DATE
          XI     FLAGS,NLDTE              TURN OFF FLAG
          ST     R3,LOWDTE                SAVE IT
          B      PARMLOOP                 AND SPIN
PLOOK2    CLC    STIMEM,0(R1)             START TIME
          BNE    PLOOK3                   NOPE
          LA     R1,L'STIMEM(,R1)         UP POINTER
          BAL    R11,DIGIT                GET NUMBER
         BAL   R11,TIMECHK             VALIDATE TIME
          ST     R3,LOWTIM                AND SAVE IT
          B      PARMLOOP                 AND LOOP FOR MORE
PLOOK3    CLC    EDATEM,0(R1)             ENDING DATE
          BNE    PLOOK4
         TM    FLAGS,NHDTE             FLAG ALREADY OFF?
         BZ    PARMTWI                 YES-SO ERROR
          LA     R1,L'EDATEM(,R1)         PUSH POINTER
          BAL    R11,DIGIT                GET NUMBER
         BAL   R11,DATECHK             VALIDATE DATE
          ST     R3,HIGHDTE               SAVE IT
          XI     FLAGS,NHDTE              TURN OFF FLAG
          B      PARMLOOP                 AND LOOP
PLOOK4    CLC    ETIMEM,0(R1)             ENDING TIME
          BNE    PLOOK5                   STILL MORE
          LA     R1,L'ETIMEM(,R1)         PUSH POINTER
         BAL   R11,DIGIT          GET NUMBER
         BAL   R11,TIMECHK        VALIDATE TIME
          ST     R3,HIGHTIM               AND SAVE
          B      PARMLOOP                 TRY FOR ANOTHER
PLOOK5   CLC   EXCLUDE,0(R1)      EXCLUDE= ?                        DMG
         BNE   PLOOK7        NO, TRY TYPE=                          DMG
         LA    R1,L'EXCLUDE(R1)   SKIP KEYWORD                      DMG
         CLI   0(R1),C'('    PARM LIST?                             DMG
         BE    PLOOK51       YES                                    DMG
         BAL   R11,FLAGERR   NO, NOTE ERROR                         DMG
         MVC   OUTMSG(L'BADEXCL),BADEXCL                            DMG
         B     PERROR        PARM ERROR                             DMG
PLOOK51  MVI   TYPSELTB,TYPEON         TURN ON                      DMG
         MVC   TYPSELTB+1(255),TYPSELTB ALL TYPES FIRST             DMG
         XI    FLAGS,ALLTYPE   TURN OFF ALL RECORDS INDICATOR       DMG
PLOOK52  CLI   0(R1),C')'    END OF LIST?                           DMG
         BE    PARMLOOP      YES, CONTINUE SCAN                     DMG
         BAL   R11,GETNNB    SKIP COMMA OR PAREN                    DMG
         BAL   R11,DIGIT     FETCH BINARY NUMBER INTO R3            DMG
         BAL   R11,TYPECHK   VALIDATE TYPE                          DMG
         CR    R3,R6         CHECK IT FOR OURSELVES                 DMG
         BNL   PLOOK53       IF BAD DON'T MESS WITH TABLE           DMG
         LA    R11,TYPSELTB  START OF TABLE                         DMG
         AR    R3,R11        OUR ENTRY                              DMG
         NI    0(R3),TYPEOFF DON'T WANT THIS TYPE                   DMG
PLOOK53  TM    PFLAGS,SYSEND END OF DATA?                           DMG
         BZ    PLOOK52       NO, GET NEXT TYPE                      DMG
         B     PARMERR       SOMETHING WRONG                        DMG
PLOOK7    CLC    TYPEM,0(R1)              TYPE=
          BE     PLOOK8                   MATCH SO SKIP
         CLC   MAXRECM,0(R1)           MAXREC FIELD
         BNE   PLOOK71                 NOPE SO ERROR OUT
         LA    R1,L'MAXRECM(,R1)       SKIP PARM
         BAL   R11,DIGIT               READ NUMBER
         ST    R3,MAXSEL               AND SAVE IT
         B     PARMLOOP                GO AROUND
PLOOK71  BAL   R11,FLAGERR             POINT IT OUT TO USER
          MVC    OUTMSG(L'BADPARM),BADPARM     ×
PERROR    BAL    R11,OUTLINE              PRINT IT
          LA     R0,12                    SET COND CODE
          BAL    R11,RETCODE
          B      PARMSLEW                 SKIP PAST NEXT COMMA
PLOOK8    LA     R1,L'TYPEM(,R1)          SKIP KEYWORD
          CLI    0(R1),C'('               PARM LIST
          BE     PLOOK111                  YES                      DMG
          CLC    ALLRECM,0(R1)            ALL RECORDS
          BNE    PLOOK9
          LA     R1,L'ALLRECM(,R1)        SKIP IT
          B      PARMLOOP                 AND SPIN
PLOOK9   BAL   R11,FLAGERR             POINT OUT ERROR
          MVC    OUTMSG(L'BADTYPE1),BADTYPE1
          B      PERROR                   AND RETURN CODE
PLOOK111 XI    FLAGS,ALLTYPE   TURN OFF ALL RECORDS INDICATOR       DMG
PLOOK11   CLI    0(R1),C')'               END OF LIST
          BE   PARMLOOP                   YES SO EXIT               DMG
         BAL   R11,GETNNB              SKIP OVER COMMA(OR PAREN)
          BAL    R11,DIGIT                FETCH NUMBER
          BAL    R11,TYPECHK              SEE IF OK
         CR    R3,R6                                                DMG
         BNL   PLOOK13       THIS TYPE IS > 255                     DMG
         LA    R11,TYPSELTB  START OF TABLE                         DMG
         AR    R3,R11        ADD(OUR ENTRY)                         DMG
         OI    0(R3),TYPEON  WE WANT THIS TYPE                      DMG
PLOOK13  EQU   *                                                    DMG
          TM     PFLAGS,SYSEND            END OF INPUT
          BZ     PLOOK11                  NO SO CONTINUE
          B      PARMERR                  ERROR
         SPACE 2
***********************************************************************
*
*        PARMTWI - PARAMETER SPECIFIED TWICE-FATAL ERROR
*
***********************************************************************
PARMTWI  LA    R0,12                   SET RETURN CODE
         BAL   R11,RETCODE
         BAL   R11,FLAGERR             POINT OUT ERROR
         MVC   OUTMSG(L'BADPR2),BADPR2 PRINT A MESSAGE
         B     PERROR
          SPACE  3
***********************************************************************
*
*         PARMSLEW - SKIP TO NEXT PARM
*
***********************************************************************
PARMSLEW  CLI    0(R1),C','               COMMA
          BE     PARMLOOP                 YEP SO DONE
         CLI   0(R1),C'('              PAREN
         BO    PSLEW1                  YES SO SPECIAL SCAN
          BAL    R11,GETNNB               NO SO FETCH ANOTHER
          B      PARMSLEW                 AND LOOP
PSLEW1   BAL   R11,GETNNB              GET NEXT CHAR
         CLI   0(R1),C')'         CLOSING PAREN?
         BO    PARMSLEW
         B     PSLEW1                  NOPE-SO TRY ANOTHER
          SPACE  3
***********************************************************************
*
*         DIGIT - CONSTRUCT A NUMBER - LEAVE IN R3
*
***********************************************************************
DIGIT     SR     R3,R3                    CLEAR RESULT
          SR     R4,R4                    CLEAR WORK AREA
          LR     R10,R11                  SAVE LINKAGE REGISTER
          CLI    0(R1),C' '               BLANK
          BNE    DG2                      NOPE SO START IT
DG1       BAL    R11,GETNNB               FETCH ANOTHER CHAR
DG2       LA     R5,C'0'                  SET UP FOR CONVERT
          IC     R4,0(,R1)                FETCH CHAR
          SR     R4,R5                    MAKE IT BINARY
          BM     DGDN                     NOT NUMERIC-DONE
          LR     R0,R3                    SAVE NUMBER
          SLL    R3,2                     NUM*4
          AR     R3,R0                    NUM*5
          SLL    R3,1                     NUM*10
          AR     R3,R4                    NEW NUMBER
          B      DG1                      AND LOOP
DGDN      BR     R10                      AND EXIT
          SPACE  3
TYPECHK  EQU   *  ROUTINE VALIDATES TYPE <256                       DMG
         LA    R6,256                                               DMG
         CR    R3,R6                                                DMG
         BCR   4,R11         TYPE OK, RETURN                        DMG
         LR    R10,R11       SAVE LINKAGE                           DMG
         BAL   R11,FLAGERR   TELL USER WHERE WRONG                  DMG
         MVC   OUTMSG(L'BADTYPE),BADTYPE      SET UP MSG            DMG
         BAL   R11,OUTLINE                                          DMG
         LA    R0,12         COMPLETION CODE                        DMG
         LR    R11,R10       RESTORE RETURN                         DMG
         B     RETCODE       RETCODE WILL RETURN TO CALLER          DMG
          SPACE  3
***********************************************************************
*
*         RETCODE - SET RETURN CODE
*
***********************************************************************
RETCODE   C      R0,RTCODE                COMPARE WITH CURR SETTING
          BCR    12,R11                   EXIT IF NOT GREATER
          ST     R0,RTCODE                SAVE HIGHER CODE
          BR     R11                      AND EXIT
          SPACE  3
***********************************************************************
*
*         OUTLINE - PRINT MSG AND CLEAR LINE
*
***********************************************************************
OUTLINE   ST     R1,BUFFSAVE              SAVE R1
          PUT    SYSOUT,OUTMSG
          L      R1,BUFFSAVE
          TM     FLAGS,IOERR              MAX IO ERRORS
          BO     IODIE                    YES SO DIE
          MVI    OUTMSG,C' '              CLEAR
          MVC    OUTMSG+1(132),OUTMSG     BUFFER
          BR     R11                      EXIT
          SPACE  3
***********************************************************************
*
*         GETNNB - GET NEXT NON BLANK CHARACTER
*
***********************************************************************
GETNNB    TM     PFLAGS,SYSEND            END OF FILE
          BO     PARMERR                  ERROR
          LA     R1,1(,R1)                POP POINTER
          CR     R1,R2                    END OF CARD
          BNL    GETN1                    YES
GETNN     CLI    0(R1),C' '               BLANK
          BE     GETNNB                   YES SO LOOP
          CLI    0(R1),C','               COMMA
          BE     GETN0                    YES SO SET FLAG
          NI     PFLAGS,COMMAOFF          TURN OFF COMMA FLAG
          BR     R11                      AND EXIT
GETN0     OI     PFLAGS,COMMAON           TURN ON COMMA FLAG
          BR     R11                      AND EXIT
GETN1     GET    SYSIN
*
*         LOCATE MODE - BUFFER ADDR IN R1
*
         ST    R1,BUFFST               SAVE FOR FLAG ERROR STUFF
          TM     FLAGS,IOERR              MAX ERRORS
          BO     IODIE                    YES SO EXIT
         TM    PFLAGS,COMMAON          COMMA LAST ON PRIOR CARD?
         BO    GETN2                   YES SO SKIP AROUND
         MVC   OUTMSG(L'NOCOMMA),NOCOMMA
         ST    R11,GETSAVE             SAVE LINK
         BAL   R11,OUTLINE             AND PRINT
         LA    R0,12                   SET RETURN CODE
         BAL   R11,RETCODE
         L     R11,GETSAVE             RESTORE LINK
GETN2     MVC    OUTMSG+1(80),0(R1)       PRINT CARD
          ST     R11,GETSAVE              SAVE LINK
          BAL    R11,OUTLINE              AND PRINT
         L     R11,GETSAVE        RESTORE
         LA    R2,72(R1)          FIND END OF CARD
          B      GETNN                    AND FIND NEXT CHAR
***********************************************************************
*
*         PARMERR - EOF AFTER A COMMA HAS BEEN SCANNED
*
***********************************************************************
PARMERR   MVC    OUTMSG(L'EOFERR),EOFERR  PRINT AN ERROR MSG
          BAL    R11,OUTLINE
          LA     R0,12                    SET RETURN CODE
          BAL    R11,RETCODE
          B      PARMEOF                  FINISH UP
***********************************************************************
*
*         PARMEOD - EOF AND LAST CHAR NOT A COMMA
*
***********************************************************************
PARMEOD   TM     PFLAGS,COMMAON           COMMA ON
          BO     PARMERR                  YES A BUG
          OI     PFLAGS,SYSEND            FLAG FOR EOF
          LA     R1,COMMAEND              FAKE A COMMA
          BR     R11                      EXIT BACK TO CALLER
***********************************************************************
*
*         PARMEOF - CHECK VALIDITY OF PARAMETERS
*
***********************************************************************
PARMEOF  TM    FLAGS,ALLDTE            ALL DATES ALLOWED            DMG
         BO    PEOFF                   YES SO DONE
         TM    FLAGS,NLDTE             A LOW DATE
         BO    PEOFF                   NO SO DONE
         TM    FLAGS,NHDTE             A HIGH DATE
         BO    PEOFF                   NO SO DONE
         L     R0,LOWDTE
         C     R0,HIGHDTE              LOG GT HIGH
         BL    PEOFF                   NO SO OKAY
         BH    PEOFFC1                 HIGH ERROR
         L     R0,LOWTIM               TEST TIMES
         C     R0,HIGHTIM              OKAY
         BNH   PEOFF                   YES
PEOFFC1  MVC   OUTMSG(L'INCTIME),INCTIME
         BAL   R11,OUTLINE
         LA    R0,12
         BAL   R11,RETCODE
PEOFF    MVC   OUTMSG(L'ENDINPT),ENDINPT
         BAL   R11,OUTLINE
         LA    R0,4                    GET A FOUR
          C      R0,RTCODE                CHECK AGAINST RETURN CODE
          BL     LEAVE                    TOO HIGH-EXIT
          B      FILEOPEN                 OK CONTINUE
         EJECT
***********************************************************************
*
*        TIMECHK - VALIDATE INPUT TIMES
*        ARG IS IN R3 - LEAVE RESULT THERE
*
***********************************************************************
TIMECHK  LR    R5,R3                   COPY ARGUMENT
         SR    R7,R7                   CLEAR SECOND(IF NOT USED)
         SR    R4,R4                   CLEAR FOR DIVIDE
         D     R4,F100                 EXTRACT LOW 2 DIGITS
         LR    R6,R4                   SAVE IT
         LTR   R5,R5                   IS THIS ALL
         BZ    TCHECK3                 YES SO FAKE IT
         SR    R4,R4                   CLEAR FOR DIVIDE
         D     R4,F100                 GET NEXT 2 DIGITS
         LTR   R5,R5                   3 SETS OR 2
         BNZ   TCHECK2                 3 SETS GO HERE
*
*        MINUTES IN R6
*        HOURS IN R4
*        SECONDS IN R7
*
TCHECK1  LA    R0,60                   GET MULTIPLICATION FACTOR
         CR    R6,R0                   SEE IF IN RANGE
         BH    TCHKERR                 BAD
         CR    R7,R0                   TRY SECONDS
         BH    TCHKERR                 BAD ALSO
         LA    R0,24                   MAX FOR HOURS
         CR    R4,R0                   OK
         BH    TCHKERR                 NOPE
         MH    R4,H60                  CONVERT TO MINUTES
         AR    R4,R6                   ADD IN MINUTES
         MH    R4,H60                  CONVERT TO SECS
         AR    R4,R7                   ADD IN SECS
         MH    R4,H100                 FINAL MULTIPLY
         LR    R3,R4                   PUT IN PLACE
         BR    R11                     AND EXIT
TCHECK2  LR    R7,R6                   SWAP CAUSE 3 SETS ON INPUT
         LR    R6,R4                   HRS TO MINUTES
         LR    R4,R5                   EXTRA TO HRS
         B     TCHECK1                 AND CONTINUE
TCHECK3  LR    R6,R4                   ONLY 1 SET
         SR    R6,R6                   CLEAR MINUTES
         B     TCHECK1                 AND LOOP
TCHKERR  LA    R0,12                   SET COND CODE
         LR    R10,R11                 SAVE LINK
         BAL   R11,RETCODE             SET CODE HERE
         MVC   OUTMSG(L'BADTIME3),BADTIME3
         CVD   R3,WKAR                 CONVERT ARG TO DECIMAL
         UNPK  OUTMSG+11(8),WKAR+4(4)  SETUP FOR PRINT
         OI    OUTMSG+18,C'0'
         BAL   R11,OUTLINE
         BR    R10                     EXIT
         SPACE 3
***********************************************************************
*
*        FLAGERR - PRINT SYMBOL BENEATH ERROR SPOT
*
***********************************************************************
FLAGERR  LR    R3,R1                   GET CURRENT BUFFER POSITION
         S     R3,BUFFST               MINUS START SPOT
         LA    R0,C'*'                 GET CHAR TO R0
         STC   R0,OUTMSG+1(R3)         PUT IN LINE
         LR    R10,R11                 SAVE LINK
         BAL   R11,OUTLINE             PRINT IT
         BR    R10                     AND EXIT
         SPACE 3
***********************************************************************
*
*        DATECHK - VALIDATE DATE IN R3
*
***********************************************************************
DATECHK  LR    R5,R3                   COPY ARG
         SR    R4,R4                   CLEAR
         D     R4,F1000                DIVIDE TO EXTRACT YEAR AND DAY
*
*        R4 - DAY
*        R5 - YEAR
*
         LTR   R4,R4                   ZERO?
         BZ    DATERR                  YES
         LA    R0,366                  HIGHEST DAY
         CR    R4,R0                   OKAY?
         BH    DATERR                  NOPE
         LA    R0,78                   LOWEST YEAR          FJP/29JUL80
         CR    R5,R0                   OKAY?
         BL    DATERR                  NOPE
         LA    R0,85                   HIGHEST YEAR         FJP/29JUL90
         CR    R5,R0                   OKAY?
         BH    DATERR                  NOPE
         BR    R11                     EXIT
DATERR   LA    R0,12                   SET RETURN CODE
         LR    R10,R11                 SAVE LINK
         BAL   R11,RETCODE
         MVC   OUTMSG(L'BADDATE1),BADDATE1
         CVD   R3,WKAR                 MAKE DATE DECIMAL
         UNPK  OUTMSG+11(8),WKAR+4(4)
         OI    OUTMSG+18,C'0'
         BAL   R11,OUTLINE             PRINT IT
         BR    R10                     AND EXIT
         EJECT
***********************************************************************
*
*        DATA AREA FOR PROGRAM - POINTED TO BY R13
*
***********************************************************************
SAVE     DC     18F'0'                   OS SAVE AREA
GOTAREA  DC     F'0'      GOTTEN CORE USED FOR FIXED OUTPUT         DMG
TOTSEL   DC     F'0'                     NO OF RECORDS SELECTED
TOTREAD  DC     F'0'                     NO OF RECORDS READ
BADCOUNT DC    F'0'                    # OF INVALID RECORDS         DMG
F        DC    F'15'                                                DMG
MAXMVC   DC    F'256'                                               DMG
FLAGS    DC     X'FF'                    FLAG WORD-ALL ON
ALLTYPE  EQU    X'01'                    TAKE ALL RECORDS BY TYPE
NLDTE    EQU    X'02'                    NO BEGINNING DATE
NHDTE    EQU    X'04'                    NO ENDING DATE
ALLDTE   EQU    X'06'                    ALL DATES
IOERR    EQU    X'10'                    MAX IO ERRORS
IOERROFF EQU    X'EF'                    TURN OFF IO ERROR FLAG
R1999    EQU    X'20'                    1999 RECORD PRINTED
FIRST    EQU    X'40'                    1ST RECORD FLAG
FIRSTOFF EQU   X'BF'
SEQERR   EQU   X'80'                   SEQUENCE ERROR HAS OCCURRED
PFLAGS    DC     X'00'                    FLAGS FOR PARM SCANNER
COMMAON   EQU    X'01'                    COMMA FOUND
COMMAOFF  EQU    X'FE'                    COMMA NOT FOUND
SYSEND    EQU    X'02'                    END OF SYSIN FOUND
COMMAEND  DC     C','                     FAKE A COMMA FOR SCANNER
UT1RECFM DC    X'FF'              ALL BITS ON MEANS FIXED           DMG
UT2RECFM DC    X'FF'                                                DMG
LASTRECT DC    XL1'FF'            TYPE OF LAST RECORD               DMG
         DS     0F
MAXSEL   DC    F'999999'               DEFAULT MAX RECORDS TO SELECT
LOWTIM   DC     F'0'                     START TIME
HIGHTIM   DC     F'8640000'               ENDRTIME
LOWDTE   DC     F'0'                     START DATE
HIGHDTE  DC     F'0'                     END DATE
RTCODE   DC     F'0'                     RETURN CODE
***********************************************************************
*
*        BLOCK OF POSSIBLE PARM TYPES
*
***********************************************************************
ALLRECM  DC     CL2'AR'                  ALL RECORDS
SDATEM   DC     CL6'SDATE='              STARTING DATE
STIMEM   DC     CL6'STIME='              STARTING TIME
EDATEM   DC     CL6'EDATE='              ENDING DATE
ETIMEM   DC     CL6'ETIME='              ENDING TIME
TYPEM    DC     CL5'TYPE='               RECORD TYPES
EXCLUDE  DC    CL8'EXCLUDE='      KEYWORD                           DMG
MAXRECM  DC    CL7'MAXREC='            MAX SELECTION STOP
***********************************************************************
*
*        RANDOM STUFF AND MESSAGES
*
***********************************************************************
WKAR     DC     D'0'                     WORKAREA FOR CVD,ETC
BADPARM  DC     C' INVALID KEYWORD'
OUTMSG   DC     CL133' '                 OUTPUT AREA
BADTYPE1 DC     C' TYPE= NOT A SUBLIST OR "AR"'
BADPR2   DC    C' A PARAMETER HAS BEEN SPECIFIED TWICE'
BADDATE1 DC    C' A DATE OF          IS INVALID'
INCTIME  DC    C' SDATE/STIME AND EDATE/ETIME PARAMETERS INCONSISTENT'
OPENBITS EQU    X'10'                    DCB BITS FOR GOOD OPEN
SYSINBAD DC     C' UNABLE TO OPEN SYSIN-JOB ABORTED'
SYSUT1BD DC     C' UNABLE TO OPEN SYSUT1-JOB ABORTED'
SYSUT2BD DC     C' UNABLE TO OPEN SYSUT2-JOB ABORTED'
SMF1999  DC     F'99'                    1999 DATE IN SMF RECORD
R1999M   DC     C' RECORDS FOR 1999 ENCOUNTERED-WARNING'
LASTDATE DC     F'0'                     FOR INTERVAL CALC
LASTTIME DC     F'0'                     DITTO
HSECDAY  DC    F'8640000'
HSEC3HR  DC    F'1080000'
DATESEQ  DC     C' TAPE NOT IN DATE SEQUENCE-WARNING'
TIMEMSG  DC     C' INTERVAL GREATER THAN 3 HOURS-'
         DC     C'DATE-'
         DC     X'402020202020'
         DC     C'  TIME-'
         DC    X'4020207A20207A2020'
         DC    C'  TO DATE- XXXXX  TIME- XX:XX:XX'
TIMEMSGE EQU   *
BGNMSG   DC    C'1SMF EXTRACTION PROGRAM ********* INPUT LISTING'
ENDMSG1  DC     C'1SMF EXTRACTION PROGRAM ********* SELECTION SUMMARY'
ENDMSG2  DC     C' TYPE '
         DC     X'404040404040'
         DC    C' - RECORDS SELECTED = '
         DC    X'404040404040'
ENDMSG3  DC     C' TOTAL RECORDS SELECTED='
         DC     X'402020202020'
ENDMSG4  DC     C' TOTAL RECORDS READ=    '
         DC     X'402020202020'
ENDMSG5  DC    C' INVALID RECORDS ENCOUNTERED =     '               DMG
IOMSG    DC     C' MORE THAN MAXIMUM IO ERRORS-JOB ABORTED'
IOCNT    DC     H'0'
IOMAX    DC    H'10'
SYSUT1EM DC    C' END OF FILE ON SYSUT1 BEFORE ENDING DATE'
EOFERR    DC     C' END OF FILE ON SYSIN WHILE SCANNING AFTER A COMMA'
ENDINPT  DC    C'0END OF FILE ON SYSIN'
BADEXCL  DC    C' EXCLUDE LIST MUST BE IN PARENTHESES.'             DMG
BADTYPE  DC    C' INVALID RECORD TYPE.'                             DMG
BADRFM1  DC    C' RECORD FORMAT (RECFM) MUST BE V OR F'             DMG
BADRFM2  DC    C' FIXED LENGTH SYSUT1 AND VARIABLE LENGTH SYSUT2 INCOMP*
               ATIBLE'                                              DMG
MINUS4   DC     F'-4'
BUFFSAVE DC     F'0'
GETSAVE   DC     F'0'
ZEROES    DC     PL8'0'                   FOR WKAR CLEARING
SMFDATE   DC     F'0'
SMFTIME   DC     F'0'
SYSPRDDN  DC    CL8'SYSPRINT'
BUFFST   DC    F'0'                    SAVE BUFFER BASE ADDRESS
F100     DC    F'100'
H100     DC    H'100'
H60      DC    H'60'
BADTIME3 DC    C' A TIME OF          IS INVALID'
WTORTE   DC    XL4'00000020'           ROUTING CODE OF 11 FOR WTO
NOCOMMA  DC    C' LAST CHARACTER ON A CARD NOT A COMMA-ERROR'
F1000    DC    F'1000'
***********************************************************************
*
*        DCBS AND DSECTS HERE
*
***********************************************************************
SYSIN    DCB    DDNAME=SYSIN,DSORG=PS,EROPT=ACC,LRECL=80,              X
               MACRF=(GL),RECFM=FB,EODAD=PARMEOD,SYNAD=SYNADR
SYSOUT   DCB    DDNAME=SYSPRINT,BLKSIZE=1210,DSORG=PS,EROPT=ACC,       X
               MACRF=(PM),RECFM=FBA,LRECL=121,SYNAD=SYNADR
SYSUT1    DCB    DDNAME=SYSUT1,DSORG=PS,EROPT=ACC,MACRF=(GL),          X
               BFTEK=A,EODAD=SYSUT1ED,SYNAD=SYNADR                  DMG
SYSUT2   DCB    DDNAME=SYSUT2,DSORG=PS,EROPT=ACC,MACRF=(PM),           X
               SYNAD=SYNADR                                         DMG
TYPSELTB DC    XL256'00'          TABLE OF RECORD TYPES             DMG
TYPEON   EQU   X'FF'              BITS ON MEANS TYPE TO BE SELECTED DMG
TYPEOFF  EQU   X'00'              BITS OFF MEANS NO SELECTION       DMG
TYPCOUNT DC    256F'0'            TABLE OF COUNTS FOR TYPE SELECTIONDMG
         SPACE  3
          DROP   R13
SMFAREA  DSECT
SMFLEN   DS     H                        RECORD LENGTH
SMFFIL   DS     H                        FILLER
SMFZERO  DS     XL1                      FILLER
SMFTYPE  DS     XL1                      RECORD TYPE
SMFTIM   DS     CL4                      TIME IN HUND OF SEC
SMFDAT   DS     PL4                      DATE 00YYDDDF
SMFSID   DS     CL2                      SYSTEM ID
SMFSMOD  DS     CL2                      MODEL NUMBER
SMFREST  DS     CL128                    REST OF SMF RECORD
         SPACE  3
         PRINT NOGEN
         DCBD   DSORG=QS
         END    SMFBGN
