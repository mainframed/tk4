 TITLE 'D A T A D U M P   -   DUMP/COPY OF TAPE OR DISK DATA SETS'
DATADUMP CSECT
         SPACE 2
         SETUP
         SPACE 2
         GETPARM 26                    PICK UP PARAMETER FROM EXEC CARD
         EJECT
         CLI   PARMAREA+4,C','         ARE ANY LIMIT PARAMETERS USED
         BE    PARMSOK                 IF SO, CONTINUE PROCESSING
         MVC   PARMAREA(24),DEFAULT    OTHERWISE, SETUP DEFAULT VALUES
PARMSOK  MVC   PARMWORK(18),PARMAREA+4 VERIFY DIGIT
         NC    PARMWORK(18),PARMVRFY               PORTION OF
         CLC   PARMWORK(18),PARMVRFY                         PARAMETER
         BNE   PARMERR                 AND BRANCH IF INVALID
         OC    PARMAREA+5(17),ZONE     FORCE GOOD NUMERICS ON PARM DATA
         PACK  PACK,PARMAREA+5(5)      PICK UP
         CVB   WKREG0,PACK                     'FROM' RECORD NUMBER
         ST    WKREG0,SAVSTART         AND SAVE IT FOR FUTURE USE
         PACK  PACK,PARMAREA+11(5)     PICK UP
         CVB   WKREG1,PACK                     'TO' RECORD NUMBER
         CLC   PARMAREA+11(5),=C'99999'    CHECK FOR ALL
         BNE   *+8
         LA    WKREG1,=F'999999'
         SR    WKREG1,WKREG0           NUMBER OF RECORDS REQUESTED
         LA    WKREG1,1(WKREG1)        MAKE UP FOR SUBTRACTION
         PACK  PACK,PARMAREA+17(5)     PICK UP
         CVB   WKREG2,PACK                     'INCREMENT' NUMBER
         ST    WKREG2,INCR             AND SAVE IT
         SR    WKREG0,WKREG0           ZERO LEFT OF DIVIDEND
         DR    WKREG0,WKREG2           DIVIDE INCR INTO DISPLACEMENT
         LTR   WKREG0,WKREG0           DID IT DIVIDE EVENLY
         BZ    NOREM                   IF SO, KEEP GOING
         LA    WKREG1,1(WKREG1)        OTHERWISE, MAKE UP FOR OVERFLOW
NOREM    ST    WKREG1,SAVRECNR         SET UP NUMBER OF RECORDS REQUEST
         B     OPENPRNT                GO TO DISPLAY PARAMETERS
         SPACE 2
PARMERR  OPEN  (PRINT,(OUTPUT))        OPEN MESSAGE DATA SET
         MVC   CONTROL(42),=C'0PARAMETER ERROR - NO PROCESSING ATTEMPTED
               D'                      WRITE ERROR MESSAGE
         PUT   PRINT,CONTROL                               TO USER
         B     EOF                     AND TERMINATE PROCESSING
         EJECT
OPENPRNT OPEN  (PRINT,(OUTPUT))
         MVC   CONTROL(26),=C'1DATADUMP - V03 - 11/09/70'
         PUT   PRINT,CONTROL           PRINT HEADING LINE
         MVC   CONTROL(26),=C'-OPTIONS IN EFFECT        '
         PUT   PRINT,CONTROL
         MVC   CONTROL(18),=C'0   MODE -- XXXX  '
         MVC   CONTROL+12(4),PARMAREA
         PUT   PRINT,CONTROL
         CLC   PARMAREA(4),=C'BOTH'    ARE BOTH OUTPUTS REQUESTED
         BE    HXCDTEST                IF SO, TEST FOR HEX DUMP REQUEST
         CLC   PARMAREA(4),=C'DUMP'    IS ONLY THE DUMP OUTPUT WANTED
         BNE   INFOCONT                IF NOT, SKIP HEX DUMP REQ TEST
HXCDTEST CLC   PARMAREA+22(2),=C',H'   HAS A HEX DUMP BEEN REQUESTED
         BE    MOVEHXCD                IF SO, GO WRITE MSG AND SET SW
         CLC   PARMAREA+24(2),=C',H'   HAS A HEX DUMP BEEN REQUESTED
         BNE   INFOCONT                IF NOT, SKIP HEX DUMP MSG AND SW
MOVEHXCD MVC   CONTROL(18),=C'    DUMP -- HEX   '  HEX DUMP MESSAGE
         OI    FLAGS,HEXDUMP           TURN ON HEX DUMP REQUEST FLAG
         PUT   PRINT,CONTROL           INDICATE HEX REQUEST TO USER
INFOCONT MVC   CONTROL(18),=C'   BEGIN -- XXXXX '
         MVC   CONTROL+12(5),PARMAREA+5
         PUT   PRINT,CONTROL
         MVC   CONTROL(18),=C'     END -- XXXXX '
         MVC   CONTROL+12(5),PARMAREA+11
         PUT   PRINT,CONTROL
         MVC   CONTROL(18),=C'    INCR -- XXXXX '
         MVC   CONTROL+12(5),PARMAREA+17
         PUT   PRINT,CONTROL
         MVC   CONTROL(18),=C' REBLOCK -- NO    '
         CLC   PARMAREA+22(2),=C',R'   HAS REBLOCK BEEN REQUESTED
         BE    MOVECODE                IF SO, GO WRITE MSG AND SET SW
         CLC   PARMAREA+24(2),=C',R'   HAS REBLOCK BEEN REQUESTED
         BNE   KEEPCODE                IF NOT, DON'T SET REBLOCK FLAG
MOVECODE MVC   CONTROL+12(3),=C'YES'   INDICATE REQUEST FOR REBLOCKING
         OI    FLAGS,REBLOCK           AND SET REBLOCK FLAG ON
KEEPCODE PUT   PRINT,CONTROL           TELL USER OF REBLOCK STATUS
         RDJFCB  (INPUT,(INPUT))       READ THIS JFCB INTO CORE
         TM    JFCB+100,X'C0'          TEST FOR 'RECFM=U'
         BNO   OPENCC                  AND CONTINUE PROCESSING IN NOT
         DC    H'0',H'0'               OTHERWISE, ABEND
         EJECT
OPENCC   OPEN  (CNTRLCRD,(INPUT))      OPEN CONTROL CARD DATA SET
         MVC   CONTROL(18),=C' SEL/MOD -- YES   ' SEL/MOD MESSAGE
         TM    CNTRLCRD+48,X'10'       TEST FOR GOOD OPEN
         BZ    NOCCREC                 AND BRANCH IF NO 'SYSIN' FOUND
         LA    WKREG3,1                SET ON RIGHTMOST BIT IN REGISTER
         L     WKREG1,=A(CCAREA)       GET ADDR OF CC IMAGE SAVE AREA
         GET   CNTRLCRD                READ THE FIRST CONTROL CARD
         LR    WKREG2,1                SAVE FIRST RECORD POINTER
         PUT   PRINT,CONTROL           AND PRINT IT
         OI    FLAGS,CCFOUND           INDICATE AT LEAST 1 CONTROL CARD
         LA    WKREG0,MAXCARDS         MAX ALLOWABLE CONTROL CARDS
         MVC   CONTROL(39),=C'-RECORD SELECTION/MODIFICATION REQUESTS'
         PUT   PRINT,CONTROL           PRINT SUBTITLE LINE
         MVI   CONTROL,C'0'            DOUBLE SPACE FIRST ENTRY
         LR    1,WKREG2                RESTORE FIRST RECORD POINTER
         B     CCWORK                  BEGIN PROCESSING CONTROL CARDS
GETCC    GET   CNTRLCRD                READ A CONTROL CARD
CCWORK   MVC   PARMWORK(12),3(1)       MOVE SEL/MOD DATA TO WORK AREA
         NC    PARMWORK(12),CCVERIFY   AND VERIFY THIS
         CLC   PARMWORK(12),CCVERIFY                   CONTROL INFO
         BNE   CCERROR                 IF INVALID, BR TO ERROR RTN
         CLC   0(3,1),=C'SEL'          TEST FOR RECORD SELECT
         BNE   MODTEST                 IF NOT, GO TO 'MOD' TEST
         MVC   0(4,WKREG1),=A(SELMOD)  MOVE ADDR OF WORK MOD INTO REC
         B     CCCONT                  CONTINUE PROCESSING THIS CARD
MODTEST  CLC   0(3,1),=C'MOD'          TEST FOR RECORD MODIFICATION
         BNE   CCERROR                 NOT SEL OR MOD - INDICATE ERROR
         MVC   0(4,WKREG1),=A(MODMOD)  MOVE ADDR OF WORK MOD INTO REC
CCCONT   OC    4(4,1),ZONE             FORCE GOOD ZONES
         CLC   4(4,1),ZONE             TEST FOR ZERO
         BE    CCERROR                 INDICATE ERROR IF ZERO
         PACK  PACK,4(4,1)             PREPARE
         CVB   WKREG2,PACK                     START ADDR
         S     WKREG2,=F'1'                               FOR USE
         STH   WKREG2,4(WKREG1)        AND SAVE IT IN RECORD
         OC    9(2,1),ZONE             FORCE GOOD ZONES
         CLC   9(2,1),ZONE             TEST FOR ZERO
         BE    CCERROR                 INDICATE ERROR IF ZERO
         PACK  PACK,9(2,1)             PREPARE
         CVB   WKREG2,PACK                     LENGTH
         S     WKREG2,=F'1'                           FOR USE
         STH   WKREG2,6(WKREG1)        AND SAVE IT IN RECORD
         OC    12(3,1),ZONE            FORCE GOOD ZONES
         CLC   12(3,1),ZONE            TEST FOR ZERO
         BE    CCERROR                 INDICATE ERROR IF ZERO
         PACK  PACK,12(3,1)            PREPARE
         CVB   WKREG2,PACK                     RECORD COUNTER
         C     WKREG2,=F'999'                                .
         BNE   CCNOT999                                      .
         L     WKREG2,=F'32766'                              .
CCNOT999 LA    WKREG2,1(WKREG2)                               FOR USE
         STH   WKREG2,8(WKREG1)        AND SAVE IT IN RECORD
         STH   WKREG3,10(WKREG1)       INSERT THIS CONTROL CARDS CODE
         SLL   WKREG3,1                SHIFT BIT ONE POSITION LEFT
         MVC   19(61,WKREG1),19(1)     MOVE REC DATA TO REC CC AREA
         LA    WKREG1,80(WKREG1)       POINT TO NEXT CC SAVE AREA
CCPRINT  MVC   OUTAREA(80),0(1)        MOVE CONTROL CARD TO PRINT AREA
         PUT   PRINT,CONTROL           AND LIST THE CC RECORD
         MVI   CONTROL,C' '            RESET SPACING TO SINGLE SPACE
         MVC   OUTAREA(132),CONTROL    CLEAR OUT PRINT AREA
         BCT   WKREG0,GETCC            NO MORE THAN MAX CONTROL CARDS
         SPACE 2
CCEOF    MVC   0(4,WKREG1),=A(NOSELMOD) INDICATE END OF SEL/MOD REQUEST
         CLOSE (CNTRLCRD)              CLOSE CONTROL CARD DATA SET
         TM    FLAGS,CCFOUND           WHERE THERE ANY CONTROL CARDS
         BO    OPEN                    IF SO, CONTINUE PROCESSING
NOCCREC  MVC   CONTROL+12(3),=C'NO '   OTHERWISE, INDICATE NO REQUESTS
         PUT   PRINT,CONTROL           TELL USER OF SEL/MOD STATUS
         B     OPEN                    THEN BEGIN PROCESSING DATA FILE
         SPACE 2
CCERROR  MVC   OUTAREA+80(40),=C' --- CONTROL CARD ERROR, NO ACTION TAKE
               EN'                     MOVE IN CC ERROR MESSAGE
         LA    WKREG0,1(WKREG0)        DON'T COUNT THIS BAD CARD
         B     CCPRINT                 THEN PRINT OUT CONTROL CARD
         EJECT
OPEN     OPEN  (INPUT,(INPUT))         OPEN INPUT DATA SET FOR PARMS
         SPACE 2
         TM    FLAGS,REBLOCK           TEST FOR REBLOCK OPTION
         BO    LRECL                   IF SO, BR AROUND RECFM/BLK SET
         MVC   OUTPUT+36(1),INPUT+36     'RECFM'
         MVC   OUTPUT+62(2),INPUT+62     'BLKSIZE'
LRECL    MVC   OUTPUT+82(2),INPUT+82     'LRECL'
         SPACE 2
         CLC   PARMAREA(4),=C'BOTH'    ARE BOTH OUTPUTS REQUESTED
         BNE   COMPDUMP                IF NOT, TEST FOR PRINT DUMP ONLY
         OPEN  (OUTPUT,(OUTPUT))
         MVI   COPYBR+1,X'00'          NOP BR AROUND COPY SEGMENT
         MVI   DUMPBR+1,X'00'          NOP BR AROUND DUMP SEGMENT
         B     GOTOIT                  NOW, GO TO WORK
COMPDUMP CLC   PARMAREA(4),=C'DUMP'    IS A PRINT DUMP ONLY REQUESTED
         BNE   COMPCOPY                IF NOT, TEST FOR COPY ONLY
         MVI   DUMPBR+1,X'00'          NOP BR AROUND DUMP SEGMENT
         B     GOTOIT                  NOW, GO TO WORK
COMPCOPY CLC   PARMAREA(4),=C'COPY'    IS ONLY A COPY REQUESTED
         BNE   PARMERR                 IF NOT, RETURN WITHOUT PROCESS
         OPEN  (OUTPUT,(OUTPUT))
         MVI   COPYBR+1,X'00'          NOP BR AROUND COPY SEGMENT
         B     GOTOIT                  NOW, GO TO WORK
         EJECT
GOTOIT   MVI   CONTROL,C'1'            START OFF ON A NEW PAGE
         LA    WKREG2,100              100 BYTES OF DATA PER LINE
         LH    WKREG1,INPUT+82         PICK UP INPUT 'LRECL'
         CR    WKREG1,WKREG2           COMPARE 'LRECL' TO 100
         BNL   MOVEOK                  CONTINUE IF 'LRECL' NOT LT 100
         LR    WKREG0,WKREG1           DECRIMENT
         S     WKREG0,=F'1'                   'LRECL' FOR
         ST    WKREG0,MOVERECL                         MOVE INSTRUCTION
         MVC   BFACTOR,=F'1'           AND INDICATE NO BLOCKING
         B     GETOWORK                NOW, BEGIN PROCESSING INPUT RECS
MOVEOK   SR    WKREG0,WKREG0           ZERO LEFT OF DIVIDEND
         DR    WKREG0,WKREG2           DETERMINE
         LTR   WKREG0,WKREG0                NUMBER
         BZ    SAVEBF                         OF LINES
         S     WKREG0,=F'1'                       PER RECORD
         ST    WKREG0,LASTRECL                          AND LAST
         LA    WKREG1,1(WKREG1)                             REC LENGTH
SAVEBF   ST    WKREG1,BFACTOR          SAVE LISTING BLOCKING FACTOR
         EJECT
GETOWORK L     STARTREG,SAVSTART       GET STARTING RECORD NUMBER
         L     STOPREG,SAVRECNR        GET REQUESTED RECORD COUNT
GET      GET   INPUT,INAREA            READ A RECORD
         AP    RECOUNT,=P'1'           INCREMENT RECORD COUNT
         BCT   STARTREG,GET            READ UNTIL STARTING POINT
         L     STARTREG,INCR           PICK UP REQUESTED RECORD INCR
         TM    FLAGS,CCFOUND           HAS REC SEL/MOD BEEN REQUESTED
         BO    CCRECSEL                IF SO, GO TEST FOR REC SEL/MOD
COPYBR   BC    15,DUMPBR               USED WHEN COPY NOT REQUESTED
         AP    CPYCNT,=P'1'
         PUT   OUTPUT,INAREA           WRITE COPY OF INPUT RECORD
DUMPBR   BC    15,STOPCNTR             USED WHEN DUMP NOT REQUESTED
         LA    INAREARG,INAREA         PICK UP ADDR OF INPUT RECORD
         L     MOVEREG,MOVERECL        SET UP LENGTH OF PRINT RECORDS
         L     BFREG,BFACTOR           PRINT BLOCKING FACTOR FOR RECORD
         UNPK  MSG+7(5),RECOUNT        UNPACK RECORD COUNT FOR MESSAGE
         OI    MSG+11,X'F0'            FORCE GOOD SIGN ON LAST DIGIT
         MVC   OUTAREA(14),MSG         MOVE RECORD MESSAGE TO OUTPUT
NEXTLINE EX    MOVEREG,REGMOVE         MOVE DATA TO PRINT AREA
         TM    FLAGS,HEXDUMP           HAS A HEX DUMP BEEN REQUESTED
         BO    HEXCNVT                 IF SO, GO TO HEX CONVERT ROUTINE
         TR    OUTAREA+14(100),TRTABLE TRANSLATE PRINT LINE FOR SPEED
         PUT   PRINT,CONTROL           PRINT ONE RECORD
LINECONT LA    INAREARG,100(INAREARG)  POINT TO NEXT SEGMENT OF RECORD
         MVI   CONTROL,C' '            CLEAR
         MVC   OUTAREA(132),CONTROL          OUTPUT AREA
         C     BFREG,=F'2'             IS THE LAST RECORD NEXT
         BNE   BRCNT                   IF NOT, KEEP ON COUNTING
         L     MOVEREG,LASTRECL        OR SET UP LENGTH OF LAST RECORD
BRCNT    BCT   BFREG,NEXTLINE          CONT THRU ENTIRE INPUT RECORD
         L     BFREG,BFACTOR           PICK UP LISTING BLOCKING FACTOR
         MVI   CONTROL,C'0'            DOUBLE SPACE BETWEEN EACH RECORD
STOPCNTR BCT   STOPREG,GET             PROCESS REQUESTED NUMBER OF RECS
         B     EOF                     TERMINATE PROCESSING
         SPACE 5
REGMOVE  MVC   OUTAREA+14(0),0(INAREARG)  MOVE DATA TO PRINT AREA
         EJECT
HEXCNVT  STM   2,12,HEXSAVE            SAVE ALL WORK REGISTERS
         MVC   HEXAREA(100),OUTAREA+14 MOVE PRINT LINE TO WORK AREA
         LA    WKREG0,HEXAREA          PICK UP BEGINNING OF WORK AREA
         LA    WKREG4,HEXTABLE         GET ADDR OF HEX CONVT TABLE
         LR    WKREG7,MOVEREG          HOW MANY
         LA    WKREG7,1(WKREG7)                HEX
         SR    WKREG6,WKREG6                       LINES
         D     WKREG6,=F'50'                             ARE NEEDED
HEXLOOP  LTR   WKREG7,WKREG7           IS THIS A FULL LINE
         BNZ   HEXFULIN                BRANCH IF YES
         LTR   WKREG6,WKREG6           IS THIS A SHORT LINE
         BZ    HEXEND                  BRANCH IF NOT
         LR    WKREG5,WKREG6           OTHERWISE, LOAD COUNT FOR LINE
         BAL   BRREG,HEXWORK           GO TO CONVERT A SHORT LINE
HEXEND   LM    2,12,HEXSAVE            RESTORE WORK REGISTERS
         B     LINECONT                AND RETURN TO PROCESSING ROUTINE
         SPACE 2
HEXFULIN LA    WKREG5,50               INDICATE A FULL 50 CHAR LINE
         BAL   BRREG,HEXWORK           GO TO CONVERT A FULL LINE
         S     WKREG7,=F'1'            DECREMENT FULL LINE COUNTER
         B     HEXLOOP                 AND CONTINUE ALONG LINE
         SPACE 2
HEXWORK  LA    WKREG1,OUTAREA+14       POINT TO BEGIN OF PRINT LINE
HEXCONT  SR    WKREG2,WKREG2           ZERO OUT WORK REGISTER
         IC    WKREG2,0(WKREG0)        PICK UP CHAR TO CONVERT
         SRDL  WKREG2,4                SHIFT OUT RIGHT HEX DIGIT
         AR    WKREG2,WKREG4           HEX TABLE OFFSET FOR LEFT HEX CH
         MVC   0(1,WKREG1),0(WKREG2)   MOVE HEX CHAR TO PRINT LINE
         LA    WKREG1,1(WKREG1)        ADDR NEXT CHAR OF PRINT LINE
         SR    WKREG2,WKREG2           ZERO OUT WORK REGISTER
         SLDL  WKREG2,4                SHIFT BACK IN RIGHT HEX DIGIT
         AR    WKREG2,WKREG4           HEX TABLE OFFSET FOR RIGHT CHAR
         MVC   0(1,WKREG1),0(WKREG2)   MOVE HEX CHAR TO PRINT LINE
         LA    WKREG1,1(WKREG1)        ADDR NEXT CHAR OF PRINT LINE
         LA    WKREG0,1(WKREG0)        ADDR NEXT CHAR TO CONVERT
         BCT   WKREG5,HEXCONT          CONVERT 50 CHARACTERS
         PUT   PRINT,CONTROL           PRINT CONVERTED LINE
         MVI   CONTROL,C' '            SET CAR CONTROL TO SINGLE SPACE
         MVC   OUTAREA(132),CONTROL    AND CLEAR PRINT LINE
         BR    BRREG                   RETURN TO CALLING ROUTINE
         EJECT
CCRECSEL STM   2,12,CCRSSAVE           SAVE WORK REGISTERS
         L     WKREG1,=A(CCAREA)       GET ADDR OF IMAGE SAVE AREA
         LA    WKREG2,INAREA           GET ADDR OF INPUT RECORD
CCRSCONT L     WKREG0,0(WKREG1)        GET ADDR OF PROCESSING RTN
         BR    WKREG0                  BRANCH TO PROCESSING ROUTINE
CCRSRTRN LA    WKREG1,80(WKREG1)       POINT TO NEXT CONTROL CARD
         B     CCRSCONT                AND CONTINUE PROCESSING THEM
         SPACE 2
MODMOD   OI    FLAGS,MODFLAG           INDICATE MODIFICATION REQUEST
SELMOD   LH    WKREG3,4(WKREG1)        GET STARTING ADDR FOR
         AR    WKREG3,WKREG2                        COMPARE AND MOVE
         LH    WKREG4,6(WKREG1)        GET LENGTH OF COMPARE/MOVE
         LH    WKREG5,8(WKREG1)        NR OF RECS TO SEL/MOD
         EX    WKREG4,CCSMCOMP         TEST FOR REQUESTED RECORD
         BNE   CCRSRTRN                RETURN IF NOT FOUND
         OI    FLAGS,RECFOUND          OTHERWISE, INDICATE REC FOUND
         TM    FLAGS,MODFLAG           WAS THIS A MOD REQUEST
         BZ    CCSMCONT                IF NOT, CONT SEL PROCESSING
         NI    FLAGS,X'FF'-MODFLAG     OTHERWISE, TURN OFF MOD FLAG
         EX    WKREG4,CCSMMOVE         AND MODIFY THE RECORD
CCSMCONT BCT   WKREG5,CCSMMMCT         COUNT THRU REQUESTED RECORDS
         MVC   0(4,WKREG1),=A(NOPMOD)  WHEN THRU, INDICATE NOP ACTION
         OC    SLMDTERM,10(WKREG1)     SET ON COMPLETE BIT FOR THIS REQ
CCSMMMCT STH   WKREG5,8(WKREG1)        RESTORE RECORD COUNT CC AREA
NOPMOD   B     CCRSRTRN                NO PROCESS REQ FOR THIS SEL/MOD
         SPACE 2
NOSELMOD LM    2,12,CCRSSAVE           RESTORE WORK REGISTERS
         TM    FLAGS,RECFOUND          WAS A REQUESTED RECORD FOUND
         BZ    STOPCNTR                SKIP FURTHER PROCESSING IF NOT
         NI    FLAGS,X'FF'-RECFOUND    TURN OFF RECORD FOUND FLAG
         B     COPYBR                  THEN CONTINUE PROCESSING
         SPACE 5
         SPACE 5
CCSMCOMP CLC   0(0,WKREG3),19(WKREG1)  TEST FOR REQUESTED RECORD
CCSMMOVE MVC   0(0,WKREG3),49(WKREG1)  MODIFY DATA IN REQUESTED RECORD
         EJECT
UT1EOF   CP    RECOUNT,=P'0'           ANY RECORDS IN THE DATA SET
         BNE   EOF                     IF SO, CLOSE FILES W/O MESSAGE
         MVC   CONTROL(34),=C'1NO RECORDS FOUND IN THIS DATA SET'
         PUT   PRINT,CONTROL           ISSUE MESSAGE TO USER
EOF      MVC   CONTROL(35),=C'1RECORDS COPIED TO SYSUT2 DATASET  '
         UNPK  CONTROL+35(6),CPYCNT
         OI    CONTROL+40,X'F0'
         PUT   PRINT,CONTROL
         CLOSE (INPUT,,OUTPUT,,PRINT)
         SPACE 2
         RESTORE RC=0                  RETURN TO CALLING PROGRAM
         EJECT
WKREG0   EQU   2                       GENERAL
WKREG1   EQU   3                               PURPOSE
WKREG2   EQU   4                                       WORK REGISTERS
WKREG3   EQU   5                       GENERAL
WKREG4   EQU   6                               PURPOSE
WKREG5   EQU   7                                       WORK REGISTERS
WKREG6   EQU   8                       GENERAL PURPOSE
WKREG7   EQU   9                                       WORK REGISTERS
MOVEREG  EQU   8                       CONTAINS LENGTH FOR MOVE INST
STOPREG  EQU   9                       CONTAINS NUMBER OF LAST REC REQ
STARTREG EQU   10                      CONTAINS NUMBER OF FIRST REC REQ
INAREARG EQU   11                      INPUT AREA POINTER
BFREG    EQU   7                       CONTAINS NR OF LINES PER RECORD
BRREG    EQU   12                      BRANCH REG (IN HEX CONV RTN)
         SPACE 2
CCFOUND  EQU   X'01'                   CONTROL CARD FOUND FLAG
HEXDUMP  EQU   X'04'                   HEX DUMP FLAG
MAXCARDS EQU   16                      MAX ALLOWABLE CONTROL CARDS
MODFLAG  EQU   X'10'                   MODIFICATION REQUEST FLAG
REBLOCK  EQU   X'02'                   REBLOCK FLAG
RECFOUND EQU   X'08'                   SEL/MOD RECORD FOUND
         SPACE 2
BFACTOR  DS    F                       SAVE AREA FOR LISTING BLOCK FACT
CCRSSAVE DS    11F                     RECORD SEL/MOD REG SAVE AREA
CCVERIFY DC    C',0000,00,000'         CONTROL CARD VERIFICATION FIELD
CPYCNT   DC    PL4'0'
DEFAULT  DC    CL24'DUMP,00001,99999,00001  '    DEFAULT PARAMETERS
         DS    0F                      FORCE 'EXITLIST' ON F/W BOUNDRY
EXITLIST DC    X'87',AL3(JFCB)         JFCB EXIT FOR 'RDJFCB'
FLAGS    DC    X'00'                   GENERAL POURPOSE FLAG BYTE
HEXSAVE  DS    11F                     REG SAVE AREA FOR HEX CONV RTN
HEXTABLE DC    C'0123456789ABCDEF'     HEX CONVERSION TABLE
HEXAREA  DS    100C                    HEX CONVERSION WORK AREA
INCR     DC    F'1'                    RECORD INCREMENT  (DEFAULT OF 1)
JFCB     DS    44F                     JFCB WORK AREA
LASTRECL DC    F'99'                   LAST PRINT LINE LENGTH (DEFAULT)
PARMVRFY DC    C',00000,00000,00000'   PARAMETER VERIFICATION FIELD
PARMWORK DS    18C                     PARM/CC VERIFICATION WORK AREA
MOVERECL DC    F'99'                   PRINT REC LENGTH  (DEFAULT 100)
MSG      DC    C'RECORD XXXXX  '       RECORD COUNT INDICATOR
PACK     DS    D                       USED TO CONVERT NUMERIC FORMATS
RECOUNT  DC    PL3'0'                  RECORD COUNTER FOR LISTING
SAVRECNR DS    F                       NUMBER OF RECORDS REQUESTED
SAVSTART DS    F                       NUMBER OF STARTING RECORD
SLMDTERM DC    XL2'0'                  SEL/MOD WORK DONE FLAGS
ZONE     DC    17X'F0'                 USED TO FORCE NUMERICS IN PARM
         LTORG
         SPACE 2
TRTABLE  DC    64C'.'                  TRANSLATE OUT ALL INVALID CHARS
         DC    C' '
         DC    12C'.'
         DC    C'(+.&&'
         DC    10C'.'
         DC    C'$*)..-/'
         DC    9C'.'
         DC    C','
         DC    17C'.'
         DC    C'''=.'
         DC    64C'.'
         DC    C'+ABCDEFGHI'           INCLUDES +0 IN ZONED DECIMAL
         DC    6C'.'
         DC    C'-JKLMNOPQR'           INCLUDES -0 IN ZONED DECIMAL
         DC    6C'.'
         DC    C'$.STUVWXYZ'           INCLUDES RECORD MARK FROM 1410
         DC    6C'.'
         DC    C'0123456789'
         DC    6C'.'                   AND REPLACE THEM WITH PERIODS
         EJECT
CNTRLCRD DCB   DSORG=PS,MACRF=GL,DDNAME=CARDIN,EODAD=CCEOF,LRECL=80
         EJECT
INPUT    DCB   DSORG=PS,MACRF=GM,DDNAME=SYSUT1,EODAD=UT1EOF,           ,
               EXLST=EXITLIST
         EJECT
OUTPUT   DCB   DSORG=PS,MACRF=PM,DDNAME=SYSUT2
         EJECT
PRINT    DCB   DSORG=PS,MACRF=PM,DDNAME=SYSPRINT,                      ,
               RECFM=FBA,LRECL=133,BLKSIZE=798
         EJECT
CONTROL  DS    C                       CONTROL CHARACTER FOR OUTPUT
OUTAREA  DC    132C' '                 PRINTER DATA OUTPUT AREA
INAREA   DS    1024D                   DATA INPUT/OUTPUT AREA  (8K)
CCAREA   DC    A(NOSELMOD)             ADDR OF CC END ROUTINE
         DS    16CL80                  CONTROL CARD IMMAGE SAVE AREA
         SPACE 2
         END
