*)F FUNCTION -
*  THE SPACE COMMAND PROVIDES INFORMATION ABOUT THE AMOUNT OF DIRECT
*  ACCESS SPACE OCCUPIED BY DATA SETS.  A KEYWORD PARAMETER ALLOWS
*  DIRECTORY SPACE FOR PARTITIONED DATA SETS TO BE LISTED.
*
*OUTPUT FROM THE SPACE COMMAND HAS THE FOLLOWING FORMAT:
*
*TYPE    INIT   SEC  EXT  TOTAL  UNUSED
*AAA     B-CC    D    E   B-CC     C
*
*         TYPE   -  IS THE TYPE OF ALLOCATION UNITS.
*
*                   AAA = REC IS BLOCKS OR BLKSIZE
*                       = TRK IS TRACKS
*                       = CYL IS CLYINDERS
*
*         INIT   -  IS THE AMOUNT OF PRIMARY SPACE ALLOCATED.
*
*                   B   = CYLINDERS
*                   CC  = TRACKS
*
*         SEC    -  IS THE NUMBER OF ALLOCATION UNITS (TYPE) WHICH
*                   WILL BE USED FOR SECONDARY SPACE ALLOCATED.
*
*                   D   = NUMBER OF AAA.
*
*
*         EXT    -  IS THE NUMBER OF EXTENTS A DATASET CURRENTLY HAS.
*
*                   E   = NUMBER (MAXIMUM OF 16)
*
*         TOTAL  -  IS TOTAL SPACE ALLOCATED.
*
*                   B   = CYLINDERS
*                   CC  = TRACKS
*
*         UNUSED -  IS THE AMOUNT OF SPACE NOT IN USE.
*
*                   C   = TRACKS
*
*)X SYNTAX -
*         SPACE  'DSLIST' 'DIR'
*  REQUIRED - 'DSLIST'
*  ALIAS    - SP
*)O OPERANDS -
*  'DSLIST' - SPECIFIES THE NAMES OF DATA SETS TO HAVE THEIR SPACE
*             ALLOCATIONS LISTED.
*))'DIR'    - SPECIFIES THAT TOTAL NUMBER OF DIRECTORY BLOCKS ALLOCATED
*             TO A PARTITIONED DATASET, AND THE AMOUNT OF UNUSED
*             DIRECTORY SPACE BE LISTED.
         MACRO
&SUBR    ENTER &REGS,&BASES,&SAVE
         GBLC  &LV,&SP,&SAVED(2)
         LCLA  &K,&N
         LCLC  &AREA,&B(16),&SUBNAME,&S
&SAVED(1) SETC '&REGS(1)'
&SAVED(2) SETC '&REGS(2)'
&SUBNAME SETC  '&SUBR'
         AIF   ('&SUBNAME' NE '').P1
&SUBNAME SETC  'MAIN'
.P1      ANOP
&SUBNAME CSECT
         AIF   ('&REGS' EQ '').PA
         SAVE  &REGS,T,*
.PA      AIF   ('&BASES(1)' EQ '15' OR '&BASES' EQ '').PC
         AIF   ('&BASES(1)' EQ '13' AND '&SAVE' NE '').PC
         LR    &BASES(1),15
.PC      CNOP  0,4
&S       SETC  '&SUBNAME'
         AIF   (N'&SAVE EQ 2).P4
         AIF   ('&SAVE' EQ '').P3
&AREA    SETC  '&SAVE'
         AIF   ('&SAVE' NE '*').P2
&AREA    SETC  'SAVEAREA'
.P2      AIF   ('&SAVE' NE '+').PB
&AREA    SETC  'SAVE'.'&SYSNDX'
.PB      AIF   ('&BASES(1)' NE '13').P4
&S       SETC  '*'
         USING &SUBNAME,15
         AIF   ('&REGS' EQ '').PD
         ST    14,&AREA+4
         LA    14,&AREA
         ST    14,8(13)
         L     14,&AREA+4
         ST    13,&AREA+4
.PD      BAL   13,*+76
         DROP  15
         AGO   .P4
.P3      AIF   ('&BASES(1)' NE '13').P4
         MNOTE 8,'*** THE CONTENTS OF REG. 13 ARE LOST. NO SAVE AREA WAX
               S ESTABLISHED.'
.P4      AIF   ('&BASES(1)' NE '14' OR '&SAVE' EQ '').P5
         MNOTE 8,'*** MACRO RESTRICTION - REG. 14 MUST NOT BE USED AS TX
               HE FIRST BASE REGISTER IF A SAVE AREA IS USED.'
.P5      AIF   ('&BASES' EQ '').P9
&N       SETA  N'&BASES
.P6      ANOP
&K       SETA  &K+1
&B(&K)   SETC  ','.'&BASES(&K)'
         AIF   (N'&SAVE EQ 1).PE
         AIF   ('&BASES(&K)' NE '13').P7
         MNOTE 8,'*** REG. 13 MAT NOT BE USED AS A BASE REGISTER FOR REX
               ENTERENT CODE.'
         AGO   .P7
.PE      AIF   ('&BASES(&K+1)' NE '13' OR '&SAVE' EQ '').P7
         MNOTE 8,'*** WHEN USING A SAVE AREA, REG. 13 MAY NOT BE USED AX
               S A SECONDARY BASE REGISTER.'
.P7      AIF   ('&BASES(&K+1)' NE '').P6
         USING &S&B(1)&B(2)&B(3)&B(4)&B(5)&B(6)&B(7)&B(8)&B(9)&B(10)&B(X
               11)&B(12)&B(13)&B(14)&B(15)&B(16)
&K       SETA  1
         AIF   ('&BASES(1)' NE '13' OR '&SAVE' EQ '').P8
&AREA    DC    18F'0'
.P8      AIF   (&K GE &N).P10
         LA    &BASES(&K+1),X'FFF'(&BASES(&K))
         LA    &BASES(&K+1),1(&BASES(&K+1))
&K       SETA  &K+1
         AGO   .P8
.P9      USING &SUBNAME,15
.P10     AIF   (N'&SAVE EQ 2).P13
         AIF   ('&SAVE' EQ '' OR '&BASES(1)' EQ '13').P12
         AIF   ('&REGS' EQ '').P11
         ST    14,&AREA+4
         LA    14,&AREA
         ST    14,8(13)
         L     14,&AREA+4
         ST    13,&AREA+4
.P11     BAL   13,*+76
&AREA    DC    18F'0'
.P12     MEXIT
.P13     ANOP
&LV      SETC  '&SAVE(2)'
&SP      SETC  '0'
         AIF   ('&SAVE(1)' EQ '').P14
&SP      SETC  '&SAVE(1)'
.P14     GETMAIN R,LV=&LV,SP=&SP
         ST    13,4(1)
         ST    1,8(13)
         LR    2,13
         LR    13,1
         LM    0,2,20(2)
         MEND
         MACRO
&NAME    EDIT8
         GBLA  &INSET
         AIF   (&INSET EQ 1).DEC
&NAME    UNPK  WORK(8),TEMP+4(4)
         OI    WORK+7,X'F0'
         LA    1,7
         LA    14,WORK
E&SYSNDX CLI   0(14),C'0'
         BNE   F&SYSNDX
         MVI   0(14),C' '
         LA    14,1(0,14)
         BCT   1,E&SYSNDX
F&SYSNDX EQU   *
         MEXIT
.DEC     ANOP
&NAME    MVC   WORK(8),=X'4020202020202120'
         ED    WORK(8),TEMP+4
         MEND
*
****************
*
         MACRO
&NAME    CLEAR &FIELD
         LCLA  &LEN
         AIF   (T'&FIELD EQ 'O').ERROR
&NAME    MVI   &FIELD,X'40'
&LEN     SETA  L'&FIELD-1
         MVC   &FIELD+1(&LEN),&FIELD
         MEXIT
.ERROR   MNOTE 8,'***OPERAND FIELD MISSING***'
         MEND
         EJECT
***********************************************************************
*        INSET - INSTRUCTION SET - 1 FOR DECIMAL,
*                                  0 FOR NOT DECIMAL.
         SPACE
         GBLA  &INSET
         SPACE
&INSET   SETA  1                       DECIMAL INSTRUCTIONS.
         SPACE
***********************************************************************
SPACE    ENTER (14,12),13,*
         LR    R11,R1         POINTER TO CPPL
         ST    R1,ACPPL        *********** COG SEPT 73 *******
         USING CPPL,R11
         LA    R10,PPLADDR         ADDRESSABILITY FOR PPL
         USING PPL,R10
         MVC   PPLUPT,CPPLUPT           UPT
         MVC   PPLECT,CPPLECT           ECT
         MVC   PPLCBUF,CPPLCBUF         CBUF
         LA    R2,ECB
         ST    R2,PPLECB                ECB
         LA    R2,PDLADDR               PDL ADDRESS
         ST    R2,PPLANS                ANSWER
         L     R2,PCLADDR
         ST    R2,PPLPCL                PCL
         LA    R1,PPLADDR
         LINK  EP=IKJPARS               GO PARSE
         LTR   R15,R15
         BNZ   PARSERR
*
*                   PUT OUT THE HEADER
         LA    R2,HEADER
         LA    R3,HDRLN
         TPUT  (R2),(R3)
         L     R9,PDLADDR
         USING DSPPDL,R9
         MVC   DIRSPE(1),DIR+1   **********COG NOV 73 ****
         LA    R5,DSN
         L     R6,DSN         GET ADDRESS OF DSNAME
         LH    R3,DSN+4       LENGTH OF DSN
         STH   R3,DSNLNGTH    ********* GOG SEPT 73 ***********
         L     R2,DSN+24      ADDRESS OF NEXT DSN
         ST    R2,NEXTDSN
QUALDSN  SR    R7,R7
         CLEAR DSNAME         BLANK IT
         LA    R7,DSNAME
         BCTR  R3,0           DOWN 1 FOR EX
         EX    R3,MOVEDSN     MOVE IT TO MY CORE
         LOCATE CHECKCAT      SEARCH THE CATALOG
         LTR   R15,R15        IS THE DS CATALOGUED
         BNZ   NOTCAT         IF NOT - ERROR RETURN
         LA    R15,DUMMY+2    GET ADDR OF CAT INFO.
         MVC   VOLID,4(R15)   MOVE VOL SER
*
*              FORMAT THE INFO.
*
FORMAT   LA    R8,DSNAME
         USING DSCB1,R8
*             CHECK THE DEVICE TYPE AND CORRECT THE TRK/CYL. CONST(HH)
         CLI   2(R15),X'20'     IS IT DASD
         BNE   NOTDASD
         SR    R1,R1              ZERO
         IC    R1,3(R15)         UNIT TYPE  ( 01 - 0D )
         LA    R1,HHTABLE(R1)    PLUS ADDRESS OF TABLE
         MVC   HH+1(1),0(R1)      MOVE ACTUAL TRK/CYL
         OBTAIN DSCBLIST
         LTR   R15,R15
         BNZ   OBTNERR
         EJECT
****************
*
*        DECODE ALLOCATION TYPE
*
****************
         SPACE
*********ADDED BY COG  SEPT 14 ****************************
*  SET INDICATOR IF PARTITIONED DATASET *****************
         MVI   PARTORG,X'00'     INITIALIZE
         TM    DS1DSORG,X'02'
         BZ    NOTPART
         MVI   PARTORG,X'FF'
NOTPART  EQU   *
*
*******************************************************
         MVC   TYPEO(5),=CL5' '
         TM    DS1SCALO,DS1CYLA
         BO    CYLFMT
         TM    DS1SCALO,DS1TRKA
         BO    TRKFMT
         TM    DS1SCALO,DS1RECA
         BO    RECFMT
         MVC   TYPEO(3),=C'ABS'
BKT      TM    DS1SCALO,DS1CONTA
         BO    CONTFMT
         TM    DS1SCALO,DS1MCA
         BO    MCFMT
         TM    DS1SCALO,DS1AA
         BO    AFMT
         TM    DS1SCALO,DS1RA
         BO    RFMT
         B     NOSS
CYLFMT   MVC   TYPEO(3),=C'CYL'
         B     BKT
TRKFMT   MVC   TYPEO(3),=C'TRK'
         B     BKT
RECFMT   MVC   TYPEO(3),=C'REC'
         B     BKT
CONTFMT  MVI   TYPEO+4,C'C'
         B     NOSS1
MCFMT    MVI   TYPEO+4,C'M'
         B     NOSS1
AFMT     MVI   TYPEO+4,C'A'
         B     NOSS1
RFMT     MVI   TYPEO+4,C'R'
NOSS1    MVI   TYPEO+3,C'-'
NOSS     EQU   *
         EJECT
****************
*
*        DECODE ALLOCATION VALUES FOR THIS DS.
*
****************
         SPACE 2
**********     EXTENTS
         SR    1,1
         IC    1,DS1NOEPV
         CVD   1,TEMP
         EDIT8
         MVC   EXTENO(3),WORK+5
         SPACE
**********     SECONDARY ALLOCATION.
         SR    1,1
         XC    TEMP(4),TEMP
         MVC   TEMP+1(3),DS1SCALO+1
         L     1,TEMP
         CVD   1,TEMP
         EDIT8
         MVC   SECDO(5),WORK+3
         SPACE
**********     INITIAL ALLOCATION.  (CCC.TT).
         XC    TCC,TCC
         XC    THH,THH
         CLI   DS1EXT1+1,X'00'
         BNE   NOTFIRST
         XC    TEMP,TEMP
         XC    WORK,WORK
         MVC   TEMP+2(2),DS1EXT1+2
         MVC   TEMP+6(2),DS1EXT1+4
         MVC   WORK+2(2),DS1EXT1+6
         MVC   WORK+6(2),DS1EXT1+8
         CLI   DS1EXT1,X'80'
         BE    SPLIT
         BAL   14,DECODECH
CONT     EQU   *
         ST    14,TCC
         ST    15,THH
         CVD   15,TEMP
         UNPK  WORK(8),TEMP+4(4)
         OI    WORK+7,X'F0'
         MVC   INITO+4(2),WORK+6
         CVD   14,TEMP
         EDIT8
         MVC   INITO(3),WORK+5
         MVI   INITO+3,C'-'
         B     IAFIN
SPLIT    MVC   TYPEO(6),=C'SP-05 '
         LM    0,1,TEMP
         LM    14,15,WORK
         SR    15,1
         LA    15,1(0,15)
         CVD   15,TEMP
         UNPK  WORK(8),TEMP+4(4)
         OI    WORK+7,X'F0'
         MVC   TYPEO+3(2),WORK+6
         SR    14,0
         LR    1,15
         LA    15,1(0,14)
         MR    14,1
         SR    14,14
         MVC   TEMP+2(2),HH
         D     14,TEMP
         XR    14,15
         XR    15,14
         XR    14,15
         B     CONT
NOTFIRST MVC   INITO(6),=C'******'
IAFIN    EQU   *
         SPACE
**********     TOTAL ALLOCATION.  (CCC.TT)
         MVC   TOTALO(6),=CL6' '
         CLI   DS1NOEPV,X'01'
         BE    NOTHER
         XC    TEMP,TEMP
         XC    WORK,WORK
         CLI   DS1EXT2,X'00'
         BE    NEXTA
         MVC   TEMP+2(2),DS1EXT2+2
         MVC   TEMP+6(2),DS1EXT2+4
         MVC   WORK+2(2),DS1EXT2+6
         MVC   WORK+6(2),DS1EXT2+8
         BAL   14,DECODECH
         A     14,TCC
         A     15,THH
         ST    14,TCC
         ST    15,THH
NEXTA    CLI   DS1EXT3,X'00'
         BE    NEXTB
         MVC   TEMP+2(2),DS1EXT3+2
         MVC   TEMP+6(2),DS1EXT3+4
         MVC   WORK+2(2),DS1EXT3+6
         MVC   WORK+6(2),DS1EXT3+8
         BAL   14,DECODECH
         A     14,TCC
         A     15,THH
         ST    14,TCC
         ST    15,THH
NEXTB    CLC   DS1PTRDS(5),=XL5'00'
         BE    NOTHER
         MVC   NEWCCHHR(5),DS1PTRDS
         TM    DS1DSORG,DS1ISO
         BO    ISFORM
GETTHREE SR    15,15
         OBTAIN NEWDSCB3
         LTR   15,15
         BNZ   NOTHER
         USING DSCB3,6
         LA    6,NEWAREA
         LA    2,DS3EXTNT
         MVI   BR3+1,X'00'
         LA    7,4
LOOPTHRE CLI   0(2),X'00'
         BE    NEXTC
         MVC   TEMP+2(2),2(2)
         MVC   TEMP+6(2),4(2)
         MVC   WORK+2(2),6(2)
         MVC   WORK+6(2),8(2)
         BAL   14,DECODECH
         A     14,TCC
         A     15,THH
         ST    14,TCC
         ST    15,THH
NEXTC    LA    2,10(2)
         BCT   7,LOOPTHRE
BR3      B     SECONE
         MVI   BR3+1,X'F0'
         LA    2,DS3ADEXT
         LA    7,9
         B     LOOPTHRE
SECONE   CLC   DS3PTRDS(5),=XL5'00'
         BE    NOTHER
         MVC   NEWCCHHR(5),DS3PTRDS
         B     GETTHREE
ISFORM   EQU   *
         SR    15,15
         OBTAIN NEWDSCB3
         LTR   15,15
         BNZ   NOTHER
         USING DSCB2,6
         LA    6,NEWAREA
         CLC   DS2PTRDS(5),=XL5'00'
         BE    NOTHER
         MVC   NEWCCHHR(5),DS2PTRDS
         B     GETTHREE
NOTHER   L     14,TCC
         L     15,THH
         LA    1,BKK
         ST    1,DSAVE14
         B     CHEET
BKK      EQU   *
         CVD   15,TEMP
         UNPK  WORK(8),TEMP+4(4)
         OI    WORK+7,X'F0'
         MVC   TOTALO+4(2),WORK+6
         CVD   14,TEMP
         EDIT8
         MVC   TOTALO(3),WORK+5
         MVI   TOTALO+3,C'-'
         B     TAFIN
         SPACE
**********     DECODE CYLINDER AND HEAD ALLOCATION.
DECODECH ST    14,DSAVE14
         CLC   WORK(8),=XL8'00'
         BE    SAMEDE
         CLC   TEMP(8),WORK
         BE    ONEDE
         BH    SAMEDE
         LM    0,1,TEMP
         LM    14,15,WORK
         CR    1,15
         BL    OKDEE
         AH    15,HH
         BCTR  14,0
OKDEE    SR    14,0
         SR    15,1
         LA    15,1(0,15)
CHEET    EQU   *
         LH    1,HH
TESTDE   CR    1,15
         BH    ENDDE
         SR    15,1
         LA    14,1(0,14)
         B     TESTDE
ONEDE    SR    14,14
         LA    15,1
         B     ENDDE
SAMEDE   SR    14,14
         SR    15,15
ENDDE    L     1,DSAVE14
         BR    1
DSAVE14  DS    F
TAFIN    EQU   *
         SPACE
****************
*
*        DETERMINE UNUSED SPACE
*
****************
         SPACE
UNUSED   CLC   DS1LSTAR(5),=XL8'00'
         BE    NOGOOD
         CLC   THH(8),=XL8'00'
         BE    NOGOOD
         L     0,TCC
         L     1,THH
         MH    0,HH
         AR    0,1
         XC    TEMP(4),TEMP
         MVC   TEMP+2(2),DS1LSTAR
         S     0,TEMP
         BCTR  0,0
         ST    0,TEMP
         L     15,TEMP
         CVD   15,TEMP
         EDIT8
         MVC   UNUSEDO(5),WORK+3
         B     GOOD
NOGOOD   MVC   UNUSEDO(5),=CL5' '
GOOD     EQU   *
*                   PUT OUT THE LINE
*
         LA    R2,LINE
         LA    R3,LINELEN
         TPUT  (R2),(R3)
         EJECT
*******ADDED BY COG SEPT 14 *****************************************
* OUTPUT DIRECTOR BLOCK SPACE IF PARTITIONED DATA SET *****************
         TM    PARTORG,X'FF'
         BNO   NOTPO          NO NOT PARTITIONED
* SHOULD DIR INFO BE OUTPUT
         TM    DIRSPE,X'01'   WAS DIR SPECIFIED?
         BNO   NOTPO          NO LEAVE SECTION
* SET UP TO CALL SECTION TO READ DIR BLOCKS
SETUP    MVC   DSNME(44),DSNAME   MOVE DSN NAME
         MVC   CDDATE(6),DS1CREDT   CREATION/EXPIRATION DATE
         LA    R4,ACPPL       ADDRESS OF LIST
*
         LA    R15,DIRINFO
         BALR  R14,R15
         B     NOTPO
PARTORG  DC    C' '      SET TO 'FF' IF PO ' ' OTHERWISE
ACPPL    DS    F           ADDRESS OF CPPL STORAGE
DSNLNGTH DS    H               LENGTH OF DSN NAME
DSNME    DS    CL44
CDDATE   DS    CL6           ADDRESS OF CREADION/DELEATION DATE
DIRSPE   DC    F'0'           >0 THEN OUTPUT DIR SPACE
MAJNME   DC    C'SYSDSN  '
ENQMSG   DC    C' **** UNABLE TO ALLOCATE DATASET   '
ENQMSGL  DC    F'35'
NOTPO    EQU   *
***********************************************************************
         EJECT
*              NOW CHECK FOR MORE DSN'S
         L     R5,NEXTDSN
         LA    R5,0(R5)            CLEAR FIRST BYTE
         LTR   R5,R5
         BZ    RETURN
         L     R6,0(R5)            DSN  ADDR
         LH    R3,4(R5)            LENGTH
         STH   R3,DSNLNGTH      *********** COG SEPT 73 *********
         L     R2,24(R5)
         ST    R2,NEXTDSN          NEXT DSN CHAIN
         B     QUALDSN          TRY TO GET IT'S SPACE
         EJECT
NOTDASD  LA    R2,NOTDASDM   DSN ISN'T ON DIRECT ACCESS
         LA    R3,15
         B     TPUT
OBTNERR  LA    R2,OBTERR      OBTAIN ERROR - D.S. NOT FOUND
         LA    R3,12
         B     TPUT
NOTCAT   LA    R2,CATERR      CATALOG ERROR ENCOUNTERED
         LA    R3,23
         B     TPUT
*                        PARSE ERROR ENCOUNTERED
PARSERR  LA    R2,PRSER
         LA    R3,14
         B     TPUT
*
*                        PUT OUT A LINE AND RETURN
TPUT     TPUT  (R2),(R3)
         B     RETURN
*                        EXEUNT
RETURN   L     R13,4(R13)
         RETURN (14,12),T,RC=0
         EJECT
MOVEDSN  MVC   0(1,R7),0(R6)
ECB      DC    F'0'
PDLADDR  DC    F'0'
NEXTDSN  DC    F'0'
PCLADDR  DC    A(DSPPCL)
PPLADDR  DC    7F'0'
PRSER    DC    CL14'PARSE ERROR'
CATERR   DC    CL23'DATA SET NOT CATALOGUED'
OBTERR   DC    CL12'OBTAIN ERROR'
NOTDASDM DC    CL15'DSN NOT ON DASD'
HEADER   DC    C'--'
         DC    C'TYPE    '
         DC    C'INIT   '
         DC    C'SEC  '
         DC    C'EXT '
         DC    C'TOTAL '
         DC    C'UNUSED '
HDRLN    EQU   *-HEADER
         SPACE 2
LINE     DC    C'  '
TYPEO    DC    C'NNNNN '
INITO    DC    C'CCC.TT '
SECDO    DC    C'NNNNN '
EXTENO   DC    C'NNN '
TOTALO   DC    C'CCC.TT '
UNUSEDO  DC    C'NNNNN  '
LINELEN  EQU   *-LINE
         SPACE
DSCBLIST CAMLST SEARCH,DSNAME,VOLID,USERAREA
         CNOP  4,8
DSNAME   DS    CL44
USERAREA DS    350X
         SPACE
NEWDSCB3 CAMLST SEEK,NEWCCHHR,VOLID,NEWAREA
NEWAREA  DS    0D
         DS    350X
NEWCCHHR DS    5X
         SPACE
CHECKCAT CAMLST NAME,DSNAME,,DUMMY
         DS    0D
DUMMY    DS    265C
         SPACE
VOLID    DC    CL6' '
WORK     DS    D
TEMP     DS    D
THH      DS    F
TCC      DS    F
HH       DC    H'20'               TRKS/CYL GOOD FOR 2314'S ONLY
HHTABLE  DC    X'000A080A2E1408081413001E0013'   TRKS/CYL FOR DASD
         EJECT
         LTORG
         EJECT
DSPPCL   IKJPARM DSECT=DSPPDL
DSN      IKJPOSIT DSNAME,LIST,PROMPT='DATA SET NAME',USID
DIR      IKJKEYWD
         IKJNAME 'DIR'        ****************COG NOV 73 ***********
         IKJENDP
         IKJCPPL
         IKJPPL
         IKJPSCB
         EJECT
         SPACE
*
R10       EQU  10
R11       EQU 11
R12       EQU 12
R13        EQU  13
R14        EQU 14
R15        EQU 15
R0         EQU 0
R1         EQU 1
R2       EQU 2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
         TITLE 'DATA SET CONTROL BLOCKS.'
*
         EJECT
************************************************************
DSCB1    DSECT , FMT 1 DSCB - SEE SYSTEM CONTROL BLOCKS PAGE 42
DS1DSNAM DS    XL44          DATA SET NAME.
DS1FMTID DS    XL1           FORMAT IDENTIFIER - HEX F1
DS1DSSN  DS    XL6           DATA SET SERIAL NUMBER
DS1VOLSQ DS    XL2           VOLUME SEQUENCE NUMBER
DS1CREDT DS    XL3           CREATION DATE - YDD
DS1EXPDT DS    XL3           DEPIRATION DATE - YDD
DS1NOEPV DS    XL1           NUMBER OF SEPARATE EXTENTS FOR THIS VOL
DS1NOBDB DS    XL1           NO OF BYTES IN LAST PDS DIRECTORY BLOCK
DS1RESA  DS    XL1           RESERVED FOR FUTURE USE
DS1SYSCD DS    XL13          SYSTEM CODE TO IDENTIFY PROGRAMMING SYS
DS1RESB  DS    XL7           RESERVED FOR FUTURE USE
DS1DSORG DS    XL2           DATA SET ORGANIZATION
DS1ISO   EQU      B'10000000'           INDEXED SEQUENTIAL
DS1PSO   EQU      B'01000000'           PHYSICAL SEQUENTIAL
DS1DO    EQU      B'00100000'           DIRECT ORGANIZATION
DS1RES1O EQU      B'00010000'           RESERVED
DS1RES2O EQU      B'00001000'           RESERVED
DS1RES3O EQU      B'00000100'           RESERVED
DS1PO    EQU      B'00000010'           PARTITIONED ORGANIZATION
DS1UO    EQU      B'00000001'           UNMOVABLE
DS1RECFM DS    XL1           RECORD FORMAT
DS1FR    EQU      B'10000000'           FIXED
DS1VR    EQU      B'01000000'           VARIABLE
DS1UR    EQU      B'11000000'           UNDEFINED
DS1TR    EQU      B'00100000'           TRACK OVERFLOW
DS1BR    EQU      B'00010000'           BLOCKED
DS1SR    EQU      B'00001000'           STANDARD
DS1AR    EQU      B'00000100'           ASA CONTROL CHARACTER
DS1MR    EQU      B'00000010'           MACHINE CONTROL CHARACTER
DS1OPTCD DS    XL1           OPTION CODE - SEE DCBOPTCD IN DCB
DS1BLKL  DS    XL2           BLK LEN FOR FIXED LNTH RECORS OR MAX FOR V
DS1LRECL DS    XL2           LOGICAL RECORD LENGTH
DS1KEYL  DS    XL1           KY  LENGTH
DS1RKP   DS    XL2           RELATIVE KEY POSITION IN THE DATA BLOCK
DS1DSIND DS    XL1           DATA SET INDICATORS
DS1SCALO DS    XL4           SECONDATY ALLOCATION
DS1CYLA  EQU      B'11000000'           CYLINDER ALLOCATION
DS1TRKA  EQU      B'10000000'           TRACK ALLOCATION
DS1RECA  EQU      B'01000000'           BLOCK ALLOCATION
DS1CONTA EQU      B'00001000'           CONTIGUOUS ALLOCATION
DS1MCA   EQU      B'00000100'           MAX AVAIL ALLOCATION
DS1AA    EQU      B'00000010'           FIVE EXTENTS MAX
DS1RA    EQU      B'00000001'           ROUND TO CYL BOUNDARY
DS1LSTAR DS    XL3           LAST  BLOCK POINTER
DS1TRBAL DS    XL2           THE LL PORTION OF THE FORMAT GIVEN IN DS1L
DS1RESC  DS    XL2
DS1EXT1  DS    XL10          FIRST EXTENT DESCRIPTION
DS1EXT2  DS    XL10          SECOND EXTEND DESCRIPTION
DS1EXT3  DS    XL10          THIRD EXTENT DEXCRIPTION
DS1PTRDS DS    XL5           POINTER TO FORMAT 2 DSCB
         SPACE 2
DSCB2    DSECT , FMT 2 DSCB - SEE SYSTEM CONTROL BLOCKS PAGE 50
DS2BLK   DS    XL1           CODE OF HES 02
DS22MIND DS    XL7           ADDRES OF THE FIRST TRACK
DS2L2MEN DS    XL5           CCHHR OF THE LAST ACTIVE INDEX ENTRY
DS23MIND DS    XL7           ADDRES OF THE FIRST TRACK OF 3RD LEVEL
DS2L3MIN DS    XL5           CCHHR OF LAST ACTIVE ENTRY IN 3RD LAVEL
DS2RESA  DS    XL19          RESERVED
DS2FMTID DS    XL1           FORMAT ID OF FORMAT 2 DSCB (EBCDIC 2)
DS2NOLEV DS    XL1           NUMBER OF INDEX LEVELS
DS2DVIND DS    XL1           NUMBER OF TRACKS IN MAXTER INDEX
DS21RCYL DS    XL3           HHR OF THE FIRST RECORD ON EACH CYL
DS2LTCYL DS    XL2           HH OF THE LAST DATA TRACK ON EACH CYL
DS2CYLOV DS    XL1           NUMBER OF TRACKS OF CYL OVERFLOW
DS2HIRIN DS    XL1           HI R ON A TRACK CONTAINING HIGH LEVEL INDE
DS2HIRPR DS    XL1           HI R ON PROME DATA TRACKS FOR F RECORS
DS2HIROV DS    XL1           HI R ON ONVERLOW DATA TRACKS OF F RECORDS
DS2RSHTR DS    XL1           R OF THE LAST DATA RECORD ON A SHARED TRAD
DS2HIRTI DS    XL1           R FOR AN UNSHARED DTACK
DS2RESB  DS    XL1           RESERVED FOR FUTURE USE
DS2TAGDT DS    XL2           NUM OF RECORS THAT HAVE BEEN TAGGED FOR DE
DS2RORG3 DS    XL3           NUMBER OF RANDOM REFFERENCES TO OVERFLOW R
DS2NOBYT DS    XL2           THE NUMBER OF BYTES NEEDED TO HOLD THE HIG
DS2NOTRK DS    XL1           THE NUMBER OF TRACKS OCCUPIED BY THE HI IN
DS2PRCTR DS    XL4           THE NUMBER OF RECORS IN THE PRIME DATA ARE
DS2STIND DS    XL1           STATUS INDICATORS
DS2CYLAD DS    XL7           ADDRESS OF THE FIRST TRACK OF THE CYL INDE
DS2ADLIN DS    XL7           ADDRESS OF THE FIRST TRACK OF THE LOW INDE
DS2ADHIN DS    XL7           ADDRESSOF THE FIRST TRACK OF THE HI INDEX
DS2LPRAD DS    XL8           CCHHR OF THE LAST RECORD
DS2LTRAD DS    XL5           CCHHR OF THE LAST NORMAL ENTRY IN INDEX
DS2LCYAD DS    XL5           CCHHR OF THE LAST INDEX ENTRY IN CYL INDEX
DS2LMSAD DS    XL5           CCHHR OF LAST INDEX ENTY IN MASTER INDEX
DS2LOVAD DS    XL8           ADDRESS OF LAST RECOR WRITTEN IN OVERFLOW
DS2BYOVL DS    XL2           BYTES REMAINING IN THE INDEPENDENT OVERFLO
DS2RORG2 DS    XL2           TECORS IN THE OVERFLOW AREA
DS2OVRCT DS    XL2           NUMBER OF CYL OVERFLOW AREAS FULL
DS2RORG1 DS    XL2           RESU
DS2RESC  DS    XL3           RESERVED FOR FUTURE USE
DS2PTRDS DS    XL5           POINTER TO FMT 3 DSCB
         SPACE 2
DSCB3    DSECT , FMT 3 DSCB - SEE SYSTEM CONTROL BLOCKS PAGE 52
DS3KEY   DS    XL4           KEY ID. HEX 03 IN CAH BYTE
DS3EXTNT DS    XL40          EXTEN
DS3FMTID DS    XL1           FORMAT ID
DS3ADEXT DS    XL90          ADDITIONAL EXTENT
DS3PTRDS DS    XL5           RESERVED FOR FUTURE USE.
         SPACE 2
*
DCBSEC   DCBD  DSORG=PS,DEVD=DA
*
         EJECT
* * * * * * * * * * ADDED SEPT 73 COG * * * * * * * * * * * * *
SPACE    CSECT
DIRINFO  EQU   *
         STM   R14,R12,R12(R13)
         BALR     R11,0
         USING    *,R11       ESTABLISH BASE REGISTER
         LR    R12,R13
         LA    R13,SAVEAR
         ST    R13,8(R12)
         ST    R12,4(R13)
*
* ESTABLISH DAPL
         L    R8,0(R4)            ADDRESS OF CPPL LIST STORAGE
         LA    R10,DAPLADR
         USING DAPL,R10
         MVC  DAPLUPT,4(R8)     UPT
         MVC  DAPLECT,12(R8)     ECT
         LA   R2,ECB
         ST   R2,DAPLECB          CP'S ECB
         MVC  DAPLPSCB,8(R8)   PSCB
         LA   R9,DAPBADR          PTR TO DAIR PARAMETER BLOCK
         ST   R9,DAPLDAPB
*
* ESTABLISH DAIR PARAMETER BLOCK
         DROP  R10          FREE USING REGISTER
         USING DAPB08,R9
         XC    DA08CD(84),DA08CD    CLEAR AREA
         OI    DA08CD+1,DA08SHR    X'0008' ENTRY CODE
         LA    R8,4(R4)       ADDRESS OF LENGTH AND DSN
         ST    R8,DA08PDSN
         MVI   DA08DDN,X'40'    BLANK DDNAME
         MVC   DA08DDN+1(7),DA08DDN
         MVC   DA08MNM(8),DA08DDN     BLANK MEMBER NAME
         MVC   DA08PSWD(8),DA08DDN    BLANK PASSWORD
         OI    DA08DSP1,DA08SHR       SET FIRST DISP
         OI    DA08DPS2,DA08KEEP      SET SECOND DISP
         OI    DA08DPS3,DA08KEP       SET THIRD DISP
         MVC   DA08UNIT(8),DA08DDN     BLANK UNIT
         MVC   DA08SER(8),DA08DDN      BLANK SER
         DROP  R9
*
         LA    R1,DAPLADR    ADDRESS OF DAIR PARAMETER LIST
         LINK  EP=IKJEFD00   LINK TO DAIR
         LTR   R15,R15      TEST FOR ERROR
         BNZ   DAIRERR      JUMP TO TEST DAIR RETURN CODE
*
* MOVE DDNAME TO DCB
         LA    R9,DAPBADR
         USING DAPB08,R9
         LA    R10,DSNDCB
        USING  IHADCB,R10
         MVC   DCBDDNAM(8),DA08DDN
         DROP  R9
*
* ESTABLISH JFCB  (R8 STILL POINTS TO DSCB1 DSECT)
         RDJFCB   (DSNDCB)
         LTR   R15,R15         CHECK FOR ERROR
         BNZ   JFCBERR
         MVC   JFCBDSNM(44),6(R4)        DSN NAME
         MVC   JFCBCRDT(6),50(R4)    CREATION/EXPIRATION DATE
         MVI   JFCBNVOL,1
         OI    JFCBMASK+4,X'80'
*
         OPEN  (DSNDCB,(INPUT)),TYPE=J   OPEN DSN TO READ DIR.
         TM    DCBOFLGS,X'10' TEST FOR ERROR
         BZ    OPENERR        JUMP ON ERROR
*
*  LOOP TO COUNT NO. DIR. BLOCKS
         SR    R3,R3             NO. USED REG.
         SR    R4,R4             TOTAL SIZE REG
         SR    R2,R2             ZERO FOR TEST
PDSLOOP  L     R1,=A(DSNDCB)
         GET   (R1),DIRBLK           READ DIR BLOCK
         CH    R2,DIRBLK             SEE IF BLK. IS USED
         BZ    PDSLOP
         A     R3,=F'1'          INCREMENT CNT. OF USED
         MVC   BYTUSED(2),DIRBLK         SAVE NO. BYTES USED
PDSLOP   A     R4,=F'1'          INC. COUNT OF TOTAL
         B     PDSLOOP           RECYCLE UNTIL FINISHED
*
PDSEND   EQU   *                 END OF LOOP TO CNT. DIR BLKS.
*
*
* OUTPUT NO. OF DIRECTOR BLOCKS
         CVD   R4,DBLWRD
         MVC   NODIRBNO(6),DMASK
         ED    NODIRBNO(6),DBLWRD+5
         SR    R4,R3          COMPUTE NO. AVAIL. BLKS.
         LA    R2,NODIRB
         L     R3,LNODIRB
         TPUT  (R2),(R3)
* OUTPUT NO. OF UNUSED DIR BLOCKS
         CVD   R4,DBLWRD
         MVC   NOUDIRNO(6),DMASK
         ED    NOUDIRNO(6),DBLWRD+5
         LA    R2,NOUDIR
         L     R3,LNOUDIR
         TPUT  (R2),(R3)
* OUTPUT NO. UNUSED BYTES IN LAST USED BLK.
         LH    R3,=H'256'
         SH    R3,BYTUSED
         CVD   R3,DBLWRD
         MVC   NODBYTNO(6),DMASK
         ED    NODBYTNO(6),DBLWRD+5
         LA    R2,NODBYT
         L     R3,LNODBYT
         TPUT  (R2),(R3)
*
* CLOSE DATASET AND LINK TO DAIR TO FREE IF REQUIRED
         LA    R10,DAPLADR
         USING DAPL,R10
         LA   R9,DAPBADR          PTR TO DAIR PARAMETER BLOCK
         ST   R9,DAPLDAPB
         USING DAPB18,R9
* OK TO FREE DATASET - FIRST CLOSE
         CLOSE (DSNDCB)
* ESTABLIST DAIR PARAMETERS
         OI    DA18CD+1,X'18'      X'0018' ENTRY CODE
         XC    DA18CD+2(6),DA18CD+2   ZERO ERROR FIELDS
         XC    DA18DPS2(1),DA18DPS2  ZERO DISP. FIELD
         OI    DA18DPS2,DA18KEEP   KEEP DATA SET
         XC    DA18CTL,DA18CTL   ZERO FIELD
         MVC   DA18JBNM,DA18MNM   BLANK JOB NAME
         LA    R1,DAPLADR     ADDRESS OF DAIR PARAMETER LIST
         LINK  EP=IKJEFD00    LINK TO DAIR
         LTR   R15,R15        TEST FOR ERROR RETURN
         BNZ   FREEERR        JUMP ON ERROR
*
* RETURN TO MAIN SECTION
DIRRTN   L     R13,SAVEAR+4
         LM    R14,R12,12(R13)
         BR    R14             JUMP BACK TO SPACE PROGRAM PROPER
*
* DAIR ERROR DETERMINATION SECTION
DAIRERR  EQU   *       DAIR ERROR RETURN
         LA    R2,ERRMG1
         L     R3,LERRMG
COVERR   CVD   R15,DBLWRD     CONVERT ERROR CODE TO CHAR
         MVC   28(6,R2),DMASK
         ED    28(6,R2),DBLWRD+5
PUTERRM  TPUT  (R2),(R3)
         BC    15,DIRRTN
JFCBERR  EQU   *       ERROR  FOR RDJFCB
         LA    R2,ERRMG2
         L     R3,LERRMG
         BC    15,COVERR
PDSERR   EQU   *              ERROR READING DIR BLOCKS
         LA    R2,ERRMG3
         L     R3,LERRMG
         BC    15,PUTERRM
OPENERR  EQU   *              ERROR ON OPEN OF DATASET
         LA    R2,ERRMG4
         L     R3,LERRMG
         BC    15,COVERR
FREEERR  EQU   *              ERROR FOR DAIR CALL TO FREE DSN
         LA    R2,ERRMG5
         L     R3,LERRMG
         BC    15,COVERR
*
ERRMG1   DC    C' **** ERROR RETURN DAIR08 =       '
ERRMG2   DC    C' **** ERROR RETURN RDJFCB =       '
ERRMG3   DC    C' **** ERROR RETURN -READ-         '
ERRMG4   DC    C' **** ERROR RETURN  OPEN  =       '
ERRMG5   DC    C' **** ERROR RETURN DAIR18 =       '
LERRMG   DC    F'34'
         EJECT
DIRBLK   DS    CL256
DBLWRD   DS    D              STORAGE FOR CVD
BYTUSED  DC    H'0'
DMASK    DC    X'402020202120'
SAVEAR   DS    18F            REGISTER SAVE AREA
NODIRB   DC    C'NO. DIR BLOCKS :    '
NODIRBNO DS    CL6
LNODIRB  DC    F'26'
NOUDIR   DC    C'NO. UNUSED DIR BLOCKS :    '
NOUDIRNO DS    CL6
LNOUDIR  DC    F'33'
NODBYT   DC    C'NO. AVAILABLE BYTES IN LAST USED DIR BLK. :    '
NODBYTNO DS    CL6
LNODBYT  DC    F'53'
*
DAPLADR  DC    5F'0'        DAPL STORAGE FOR DAIR
DAPBADR  DC    72F'0'       DAPB STORAGE FOR DAIR
*
* JFCB STORAGE AREA
PDSJFCB  DC    0F'0',X'87',AL3(PDSAREA)
PDSAREA  DS    CL176
JFCBDSNM EQU   PDSAREA
JFCBMASK EQU   PDSAREA+72
JFCBCRDT EQU   PDSAREA+80
JFCBIND1 EQU   PDSAREA+86
JFCBIND2 EQU   PDSAREA+87
JFCBNVOL EQU   PDSAREA+117
JFCBVOLS EQU   PDSAREA+118
*
DSNDCB   DCB   DSORG=PS,MACRF=GM,RECFM=F,BFTEK=S,BLKSIZE=256,          X
               DDNAME=DUMMY,LRECL=256,BUFNO=4,EXLST=PDSJFCB,           X
               EODAD=PDSEND,SYNAD=PDSERR
         EJECT
************************************************************
* DSECTS FOR DAIR ******************************************
*
         IKJDAPL
***************************************************IKJDAP08
         IKJDAP08
***************************************************IKJDAP18
         IKJDAP18
         EJECT
************************************************************
         END SPACE
