         PRINT OFF
         MACRO
&NAME    INIT &BASE=3,&REGS=Y,&PATCH=3,&RENT=N,&SAVE=Y
         AIF   ((&BASE LT 13) AND (&BASE GT 1)).N020
         MNOTE 12,'INVALID BASE REGISTER'
         MEXIT
.N020    ANOP
         PUSH  PRINT
         PRINT ON,GEN
         EJECT
&SYSECT  CSECT
         USING *,15
         B     BEGIN
         DC    AL1(24)
         DC    CL8'&SYSECT'
         DC    CL16'-&SYSDATE-&SYSTIME'
         AIF   ('&RENT' EQ 'Y').N004
MYSAVE   DC    18F'-1'
.N004    ANOP
         AIF   ('&PATCH' EQ '0').N005
PATCH    DC    &PATCH.CL8'*PATCH*'
.N005    ANOP
         AIF   ('&REGS' EQ 'N').N030
         AIF   ('&REGS' EQ 'Y').N010
         MNOTE 4,'REGS OPERAND INVALID. Y SUBSTITUTED'
.N010    ANOP
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
.N030    ANOP
BEGIN    DS   0H
         STM   14,12,12(13)
         LR    &BASE,15
         DROP  15
         USING &SYSECT,&BASE
         AIF   ('&SAVE' EQ 'N').N003
         AIF   ('&RENT' EQ 'Y').N002
         AIF   ('&RENT' EQ 'N').N001
         MNOTE 4,'RENT OPERAND INVALID. N SUBSTITUTED'
.N001    ANOP
         ST    13,MYSAVE+4
         LR    15,13
         LA    13,MYSAVE
         ST    13,8(15)
         AGO   .N003
.N002    ANOP
         GETMAIN R,LV=72
         ST    13,4(1)
         ST    1,8(13)
         LR    13,1
.N003    ANOP
         POP   PRINT
         EJECT
         MEND
         PRINT ON
*  MODULE NAME:         VSAMLIST     (REL. 1.1  08/10/79)
*
*  MODULE DESCRIPTION:  VSAM CATALOG LIST UTILITY - CONTROL MODULE
*
*  RETURN LINKAGE:      RETURN (14,12),RC=(15)
*
*  LINKAGE TABLE:       NONE - SINGLE ENTRY
*
*  PARAMETERS:          R1 POINTS TO THE ADDRESS OF THE INPUT PARAMETER
*                       LIST ALIGNED ON A HALF WORD BOUNDARY.
*                        BYTE 0-1:  LENGTH OF PARAMETER
*                        BYTE 2-4:  PARAMETER (ALL OR SUM)
*
*  EXIT:                RC=00 - SUCCESSFUL
*                       RC=04 - UNABLE TO OPEN DCB'S
*                       RC=08 - ERROR WHILE PROCESSING VSAM CATLG
*
*  MODULE FUNCTION:     AS THE CONTROL MODULE, IT PERFORMS MOST OF THE
*                       INITIALIZATIONS AND EXTRACT THE VSAM CATALOGS'
*                       INFORMATIONS FROM THE CONTROL STATEMENTS.
*                       FOR EACH OF THE VSAM CATALOGS SPECIFIED IN THE
*                       CONTROL STATEMENTS, THIS MODULE CREATES ONE TO
*                       THREE REPORTS ACCORDING TO THE INPUT PARAMETER
*                       SPECIFIED ON THE 'EXEC' CARD.  THEY ARE THE
*                       VSAM CATALOG SUMMARY, THE VSAM VOLUME CONTENTS
*                       AND THE VSAM TRACK ALLOCATION MAP.  IF 'ALL'
*                       IS SPECIFIED, ALL THREE REPORTS ARE PRODUCED
*                       AND IF AN OPTIONAL DD CARD 'VSAMHIST' IS IN THE
*                       JCL POINTING TO A DASD DATASET, A HISTORY FILE
*                       FOR ALL ENTRIES IN THE VSAM CATALOG IS CREATED.
*                       IF 'SUM' IS SPECIFIED, ONLY THE SUMMARY REPORT
*                       IS PRODUCED.  THE DEFAULT IS 'ALL'.
*
*  CALLER:              NONE
*
*  CALLS:               VSAMLST2, SORT/VSAMLST5
*
*  SYSTEMS SERVICES:    CALL, CLOSE, DELETE, FREEMAIN, GETMAIN, LOAD,
*                       OPEN, PUT (QSAM), TIME
*
*  MODULE ENVIRONMENT:  OS/VS1, OS/VS2
         TITLE 'VSAMLIST --- VSAM CATALOG LIST UTILITY CONTROL MODULE (1
               0)'
*        *-------------------------*
*        *   S A M P L E   J C L   *
*        *-------------------------*
*
*  //STEP1  EXEC  PGM=VSAMLIST,PARM=ALL
*  //STEPLIB  DD  DSN=SYS2.LINKLIB,DISP=SHR
*  //STEPCAT  DD  DSN=VSAMCAT1,DISP=SHR
*  //          .
*  //          .
*  //          .
*  //         DD  DSN=VSAMCATN,DISP=SHR
*  //SYSABEND DD  SYSOUT=A
*  //MSGFILE  DD  SYSOUT=A,DCB=(RECFM=FBA,LRECL=133,BLKSIZE=1330)
*  //RPTFIL1  DD  SYSOUT=A,DCB=(RECFM=FBA,LRECL=133,BLKSIZE=1330)
*  //RPTFIL2  DD  SYSOUT=A,DCB=(RECFM=FBA,LRECL=133,BLKSIZE=1330)
*  //SYSOUT   DD  SYSOUT=A
*  //SORTIN   DD  DSN=&&DETAIL,DISP=(NEW,DELETE),UNIT=DISK,
*  //             SPACE=(CYL,(5,5))
*  //SORTWK01 DD  UNIT=DISK,SPACE=(CYL,(3))
*  //SORTWK02 DD  UNIT=DISK,SPACE=(CYL,(3))
*  //SORTWK03 DD  UNIT=DISK,SPACE=(CYL,(3))
*  //*
*  //* FOLLOWING OUTPUT FILE IS OPTIONAL.  IF IT POINTS TO A DASD DATA
*  //* SET AND 'PARM=ALL' IS SPECIFIED ON THE 'EXEC' CARD, A HISTORY
*  //* FILE FOR VSAM ENTRIES WILL BE CREATED.  PLEASE NOTE THE SPEC'S
*  //* IN THE DCB.  RECORDS ARE 158 BYTES LONG.
*  //VSAMHIST DD  DSN=VSAM.HIST.FILE,DISP=(,PASS),
*  //             UNIT=SYSDA,SPACE=(CYL,(2,1)),
*  //             DCB=(RECFM=FB,LRECL=158,BLKSIZE=6162)
*  //*
*  //*  FOLLOWING INPUT FILE IS FOR VSAM CATLG LIST UTIL CONTROL STMTS
*  //*  '/' INDICATE AN OPTIONAL MASTER PASSWORD FOLLOWS
*  //*  ALL KEYWORDS SHOULD BE ON COL. 1 THRU 71 OF THE SAME CARD FOR
*  //*  EACH VSAM CATALOG TO BE LISTED
*  //VCLCNTL  DD  *
*    LISTCAT  VSAMCAT1 / MSTRPSWD
*       .
*       .
*       .
*    LISTCAT  VSAMCATN
*  /*
         EJECT
*        *-----------------------------------*
*        *   R E G I S T E R   U S A G E S   *
*        *-----------------------------------*
*
*  R0  -  STANDARD LINKAGE
*  R1  -  STANDARD LINKAGE (ADDR OF PARM LIST) & TEMP WORK SPACE
*  R2  -  TEMP WORK SPACE
*  R3  -  TEMP WORK SPACE
*  R4  -  TEMP WORK SPACE
*  R5  -  TEMP WORK SPACE
*  R6  -  NOT USED
*  R7  -  NOT USED
*  R8  -  NOT USED
*  R9  -  NOT USED
*  R10 -  NOT USED
*  R11 -  RETURN ADDR FOR SUBROUTINES
*  R12 -  BASE REG FOR CSECT VSAMLIST
*  R13 -  STANDARD LINKAGE (ADDR OF SAVE AREA)
*  R14 -  STANDARD LINKAGE (ADDR TO RETURN)
*  R15 -  STANDARD LINKAGE (ADDR OF ENTRY POINT & RETURN CODE)
         SPACE 5
VSAMLIST CSECT
         INIT  BASE=12
***********************************************************************
*                                                                     *
*  1.0    CONTROL MODULE                                              *
*                                                                     *
*     FUNCTION:  CHECK THE INPUT PARAMETER (ALL OR SUM).              *
*                CHECK THE FILES MSGFILE, RPTFIL1, SORTIN & VCLCNTL.  *
*                CHECK THE CONTROL STATEMENTS & THEN CALL THE PROCESS *
*                MODULE FOR EACH CATALOG.                             *
*                IF 'PARM=ALL' IS SPECIFIED, LINK TO SORT TO PRODUCE  *
*                THE TWO DETAIL REPORTS.  (SEE PAGE 2)                *
*                                                                     *
*     ERRORS:  IF OPEN OF ANY DCB FAILS, PRINT ERROR MESSAGE, SET     *
*              RETURN CODE AND RETURN.                                *
*              IF ERROR WHILE PROCESSING ANY VSAM CATALOG, SET        *
*              ERROR CODE AND PROCESS THE NEXT ONE.                   *
*                                                                     *
***********************************************************************
         SPACE 3
VCL10    EQU   *
         L     R1,0(,R1)                ADDR OF THE PARM LIST
         LA    R1,0(,R1)                CLEAR THE HIGH ORDER BYTE
         MVC   PARM9410(5),0(R1)        SAVE THE PARM
         CLC   PARM(3),=C'SUM'          IS ONLY THE SUMMARY REQUESTED?
         BNE   CHKALL                   NO - DO NOT SET 'SUM' SWITCH
         MVI   RPTSW,X'80'              YES - SET IT FOR SUMMARY ONLY
         B     INIT1                    AND GO TO INIT PART 1
         SPACE
CHKALL   EQU   *
         CLC   PARM(3),=C'ALL'          ARE ALL THE REPORTS REQUESTED?
         BNE   BADPARM                  NO - INVALID PARAMETER
         MVI   RPTSW,X'E0'              YES - SET IT 'ALL'
         B     INIT1                    AND GO TO INIT PART 1
         SPACE
BADPARM  EQU   *
         MVI   RPTSW,X'E0'              DEFAULT IS 'ALL' - SET SWITCH
         B     INIT1                    AND GO TO INIT PART 1
         EJECT
*        *----------------------------*
*        *  CHECK THE REQUIRED DCB'S  *
*        *----------------------------*
         SPACE
INIT1    EQU   *
         OPEN  (MSGFILE,(OUTPUT))
         SPACE
         TM    MSGFILE+48,X'10'
         BO    MSGDCBOK
         SPACE
         MVI   RC,X'04'                 RC=04 - OPEN FAILED FOR MSGFILE
         B     GOHOME                   RETURN IMMEDIATELY
         SPACE 2
MSGDCBOK EQU   *
         BAL   R11,DATETIME             DATE AND TIME AT THIS POINT
         MVC   MSG01+44(5),HHMM         TIME = HH:MM
         MVC   MSG01+53(8),MMDDYY       DATE = MM/DD/YY
         MVI   CNTL,C'1'                SKIP TO TOP OF NEXT PAGE
         MVC   LINE(L'MSG01),MSG01
         BAL   R11,PUTMSG               WRITE STARTING MESSAGE
         SPACE
         OPEN  (RPTFIL1,(OUTPUT))
         SPACE
         TM    RPTFIL1+48,X'10'
         BO    RP1DCBOK
         SPACE
         MVC   ERRDDN(8),RPTFIL1+40     SET DDNAME IN ERROR MESSAGE
         BAL   R11,ERRDCB               PRINT THE MESSAGE & SET RC=4
         B     ENDMSG                   PRINT ENDING MESSAGE
         EJECT
RP1DCBOK EQU   *
         TM    RPTSW,X'60'              ARE THE DETAILS REPORTS NEEDED?
         BZ    SORTINOK                 NO - SKIP THE SORT
         SPACE
         OPEN  (SORTIN,(OUTPUT))
         SPACE
         TM    SORTIN+48,X'10'
         BO    SORTINOK
         SPACE
         MVC   ERRDDN(8),SORTIN+40      SET DDNAME IN ERROR MESSAGE
         BAL   R11,ERRDCB               PRINT THE MESSAGE & SET RC=4
         B     CLSRPT                   CLEAN IT UP & QUIT
         SPACE 2
SORTINOK EQU   *
         OPEN  (VCLCNTL,(INPUT))
         SPACE
         TM    VCLCNTL+48,X'10'
         BO    INIT2                    ALL DCB'S ARE OK - INIT PART 2
         SPACE
         MVC   ERRDDN(8),VCLCNTL+40     SET DDNAME IN ERROR MESSAGE
         BAL   R11,ERRDCB               PRINT THE MESSAGE & SET RC=4
         B     CLSORT                   CLEAN IT UP & QUIT
         EJECT
*        *-------------------------------------*
*        *  LOAD VSAMLST2, VSAMLST3, VSAMLST4  *
*        *-------------------------------------*
         SPACE
INIT2    EQU   *
         LOAD  EP=VSAMLST2
         ST    R0,EPVCL20               ENTRY PT OF PROCESS MOD (2.0)
         SPACE
         LOAD  EP=VSAMLST3
         ST    R0,EPVCL21               ENTRY PT OF SUMMARY MOD (2.1)
         SPACE
         TM    RPTSW,X'60'              ARE THE DETAILS REPORTS NEEDED?
         BZ    INIT3                    NO - THAT'S ALL WE NEED
         SPACE
         LOAD  EP=VSAMLST4
         ST    R0,EPVCL22               ENTRY PT OF DETAILS MOD (2.2)
         EJECT
*        *--------------------------------------*
*        *  GET WORK AREAS AND INITIALIZE THEM  *
*        *--------------------------------------*
         SPACE
INIT3    EQU   *
         GETMAIN R,LV=4096              GIMME 4K
         SPACE
         ST    R1,WORKADDR              SAVE ADDR OF AREA GOTTEN
         ST    R0,WORKLENG              SAVE LENGTH OF AREA GOTTEN
         SRL   R0,1                     DIVIDE IT IN HALVES
         ST    R1,WORKA                 ADDR OF WORK AREA 'A'
         STH   R0,0(,R1)                SET IT UP FOR SVC 26
         AR    R1,R0                    BUMP TO THE SECOND HALF
         ST    R1,WORKB                 ADDR OF WORK AREA 'B'
         STH   R0,0(,R1)                SET IT UP FOR SVC 26
         EJECT
*        *----------------------------------------------------*
*        *  ALL INIT'S DONE - READ VCL CNTL STMT'S UNTIL EOD  *
*        *  CHECK THE FORMAT OF THE CONTROL STATEMENT         *
*        *  EXTRACT THE CATALOG NAME & PASSWORD IF ANY        *
*        *----------------------------------------------------*
         SPACE
READCNTL EQU   *
         GET   VCLCNTL,LINE             GET A 'LISTCAT' STATEMENT
         SPACE
         MVI   CATNAME,X'40'            CLEAR PREVIOUS CATALOG NAME
         MVC   CATNAME+1(L'CATNAME-1),CATNAME
         MVI   PASSWORD,X'40'           AND ITS PASSWORD
         MVC   PASSWORD+1(L'PASSWORD),PASSWORD
         SPACE
         MVI   CNTL,C'0'                SKIP 2 LINES WHEN PRINT
         LA    R1,LINE                  ADDR OF THE CONTROL STATEMENT
         LA    R2,71                    LENGTH TO SCAN
CHKBLK1  EQU   *
         CLI   0(R1),X'40'              SQUEEZE OUT THE LEADING BLANKS
         BNE   NONBLK1
         LA    R1,1(,R1)
         BCT   R2,CHKBLK1
         B     BADCNTL                  A BLANK CARD
         SPACE
NONBLK1  EQU   *
         CLC   LISTCAT,0(R1)
         BNE   BADCNTL                  FIRST KEYWORD IS NOT 'LISTCAT '
         AR    R2,R1
         LA    R1,L'LISTCAT(,R1)        ADDR OF 2ND FIELD TO PARSE
         SR    R2,R1                    LENGTH OF CHARACTERS REMAINING
CHKBLK2  EQU   *
         CLI   0(R1),X'40'              SQUEEZE OUT BLANKS IN BETWEEN
         BNE   NONBLK2
         LA    R1,1(,R1)
         BCT   R2,CHKBLK2
         B     BADCNTL                  'LISTCAT' IS THE ONLY KEYWORD
         EJECT
*        *----------------------------------------------------*
*        *  COPY THE VSAM CATALOG FROM THE CONTROL STATEMENT  *
*        *----------------------------------------------------*
         SPACE
NONBLK2  EQU   *
         CLI   0(R1),C'A'               IS THE 1ST CHAR 'A-Z'?
         BL    BADCNTL                  NO - INVALID CATLG NAME
         CLI   0(R1),C'Z'
         BH    BADCNTL
         SR    R3,R3                    CLEAR THE LENGTH OF CATLG NAME
         LR    R4,R1                    SAVE THE ADDR OF CATLG NAME
CHKCATNM EQU   *
         CLI   0(R1),X'40'              KEEP SCANNING UNTIL CATLG NAME
         BE    CTNMEND                  IS ENDED BY A BLANK
         CLI   0(R1),C'/'               OR
         BE    CTNMEND                  A SLASH
         LA    R3,1(,R3)                OR UNTIL
         C     R3,=F'44'                ITS LENGTH
         BH    BADCNTL                  EXCEEDS 44 BYTES
         LA    R1,1(,R1)
         BCT   R2,CHKCATNM
         SPACE
         BCTR  R3,0                     LESS ONE FOR MACHINE CODE
         EX    R3,MOVECTNM              SAVE THE CATALOG NAME AND
         B     NOPASSWD                 LOOK UP ITS PASSWORD
         SPACE 2
CTNMEND  EQU   *
         BCTR  R3,0                     LESS ONE FOR MACHINE CODE
         EX    R3,MOVECTNM              SAVE THE CATALOG NAME
CHKSLASH EQU   *
         CLI   0(R1),C'/'               IS THERE A PASSWORD?
         BE    SKPSLASH                 YES - GO TAKE A LOOK
         LA    R1,1(,R1)                KEEP SCANNING UNTIL FOUND '/'
         BCT   R2,CHKSLASH              OR END OF STMT
         B     NOPASSWD                 THEN LOOK UP ITS PASSWORD
         SPACE 2
MOVECTNM MVC   CATNAME(0),0(R4)         DUMMY INSTRUCTION 1
         EJECT
*        *-----------------------------------------------*
*        *  SAVE PASSWORD FROM THE CONTROL STATEMENT OR  *
*        *  LOOK IT UP FROM THE PRE-DEFINED TABLE        *
*        *-----------------------------------------------*
         SPACE
SKPSLASH EQU   *
         LA    R1,1(,R1)                BUMP PAST THE '/'
         BCTR  R2,0                     DECREMENT LENGTH TO SCAN
         SPACE
CHKBLK3  EQU   *
         CLI   0(R1),X'40'              SQUEEZE OUT THE BLANKS BETWEEN
         BNE   NONBLK3                  '/' AND THE PASSWORD
         LA    R1,1(,R1)
         BCT   R2,CHKBLK3
         B     BADCNTL                  MISSING PASSWORD
         SPACE
NONBLK3  EQU   *
         LA    R3,8                     MAXIMUM LENGTH OF THE PASSWORD
         CR    R2,R3                    CHECK TO SEE IF IT'S LESS
         BNL   SAVEPSWD                 NO - LENGTH = 8
         LR    R3,R2                    USE REMAINING BYTES OF STMT
SAVEPSWD EQU   *                        LENGTH OF CHARACTERS REMAINING
         BCTR  R3,0
         EX    R3,MOVEPSWD              SAVE THE PASSWORD
         EX    R3,COVERPSW              COVER UP THE PASSWORD WITH '*'
         MVI   PSWDFLG,X'FF'            USER SUPPLIED PASSWORD
         B     PRTCNTL                  PRINT THE CNTL STMT & START
         SPACE 2
MOVEPSWD MVC   PASSWORD(0),0(R1)        DUMMY INSTRUCTION 2
COVERPSW MVC   0(0,R1),=CL8'********'   DUMMY INSTRUCTION 3
         SPACE 2
NOPASSWD EQU   *
         LA    R1,TBLPSWD               ADDR OF CATNAME/PASSWORD TABLE
         LA    R2,TBLPSNO               NUMBER OF ENTRIES IN TABLE
FINDPSWD EQU   *
         CLC   CATNAME,0(R1)            IS THIS THE ENTRY?
         BE    COPYPSWD                 YES - COPY THE PASSWORD
         LA    R1,L'CATNAME+L'PASSWORD(,R1)  NO - BUMP TO NEXT ENTRY
         BCT   R2,FINDPSWD              AND KEEP LOOKING
         SPACE
         MVI   PASSWORD,X'FF'           NEITHER SUPPLIED NOR DEFINED
         MVC   PASSWORD+1(L'PASSWORD-1),PASSWORD SET IT TO X'FFFFFFFF'
         MVI   PSWDFLG,X'01'            MARK AS 'PASSWORD NOT SUPPLIED'
         B     PRTCNTL                  PRINT THE CNTL STMT & START
         SPACE
COPYPSWD EQU   *
         MVC   PASSWORD,L'CATNAME(R1)   COPY THE PASSWORD & CONTINUE
         MVI   PSWDFLG,X'00'            SYSTEM DEFAULT PASSWORD
         EJECT
*        *-----------------------------------------------------*
*        *  PRINT THE INPUT CONTROL STATEMENT JUST SCANNED     *
*        *  SET UP PARMLIST AND CALL PROCESS MODULE (VCL 2.0)  *
*        *-----------------------------------------------------*
         SPACE
PRTCNTL  EQU   *
         BAL   R11,PUTMSG
         SPACE
         LA    R1,PARM9420              PARMLIST TO VSAMLST2
         L     R15,EPVCL20
         CALL  (15)
         SPACE
         LTR   R15,R15                  IS PROCESSING SUCCESSFUL?
         BNZ   SAVEHIRC                 NO - CHECK IF TO SAVE THE R.C.
         LH    R1,CNTCAT                YES - BUMP CATLG COUNTER
         LA    R1,1(,R1)
         STH   R1,CNTCAT
         B     NOTHIGH                  ZERO R.C. - LOWEST IT CAN BE
         SPACE
SAVEHIRC EQU   *
         MVI   RC,X'08'                 ERROR WHILE PROCESSING VSAM CAT
         C     R15,RCVCL20              IS THIS RETURN CODE HIGHER?
         BNH   NOTHIGH                  NO - KEEP ON KEEPING ON
         ST    R15,RCVCL20              YES - SAVE IT
         SPACE
NOTHIGH  EQU   *
         CVD   R15,WORK                 CONVERT RETURN CODE TO DECIMAL
         OI    WORK+7,X'0F'             AND THEN
         UNPK  MSG02+52(2),WORK+6(2)    SET UP COMPLETION MESSAGE
         MVC   LINE(L'MSG02),MSG02      AND
         BAL   R11,PUTMSG               PRINT IT
         B     READCNTL                 PROCESS THE NEXT 'LISTCAT' STMT
         SPACE 2
BADCNTL  EQU   *
         MVC   LINE+81(L'ERR00),ERR00   *** INVALID CONTROL STATEMENT
         BAL   R11,PUTMSG               PRINT IT AND
         B     READCNTL                 READ NEXT STMT
         EJECT
*        *-----------------------------------*
*        *   W R A P   U P   P H A S E   I   *
*        *-----------------------------------*
         SPACE
EODCNTL  EQU   *
         BAL   R11,DATETIME             SET TIME AT THIS POINT
         MVC   MSG03+16(5),HHMM         TIME = HH:MM
         LH    R1,CNTCAT                CATALOG COUNT
         CVD   R1,WORK
         OI    WORK+7,X'0F'
         UNPK  MSG03+22(2),WORK+6(2)    CATALOGS PROCESSED SUCCESSFULLY
         L     R15,RCVCL20              HIGHEST RETURN CODE SO FAR
         CVD   R15,WORK                 CONVERT IT TO DECIMAL
         OI    WORK+7,X'0F'             AND THEN
         UNPK  MSG03+77(2),WORK+6(2)    SET UP SUMMARY MESSAGE
         MVI   CNTL,C'0'                SKIP 2 LINES
         MVC   LINE(L'MSG03),MSG03      AND
         BAL   R11,PUTMSG               PRINT IT
         SPACE
         L     R0,WORKLENG
         L     R1,WORKADDR
         FREEMAIN R,LV=(0),A=(1)        FREE GOTTEN WORK AREA
         SPACE 2
         DELETE EP=VSAMLST2
         SPACE
         DELETE EP=VSAMLST3
         SPACE
         TM    RPTSW,X'60'              ARE MODULES FOR DETAILS LOADED?
         BZ    CLSCTL                   NO - DON'T DELETE
         SPACE
         DELETE EP=VSAMLST4
         EJECT
*        *-------------------*
*        *  CLOSE THE DCB'S  *
*        *-------------------*
         SPACE
CLSCTL   EQU   *
         CLOSE VCLCNTL
         SPACE
CLSORT   EQU   *
         TM    SORTIN+48,X'10'          HAS DCB SORTIN BEEN OPENED?
         BZ    CLSRPT                   NO - SORTIN'S NEVER OPENED
         SPACE
         CLOSE SORTIN
         SPACE
CLSRPT   EQU   *
         CLOSE RPTFIL1
         SPACE
         TM    RPTSW,X'60'              ARE THE DETAIL REPORTS NEEDED?
         BZ    ENDMSG                   NO - SKIP PHASE II
         LH    R1,CNTCAT                HAS ANY VSAM CATALOG BEEN
         LTR   R1,R1                    PROCESSED SUCCESSFULLY?
         BZ    ENDMSG                   NO - SKIP PHASE II TOO
         EJECT
*        *---------------------------------------------------*
*        *   P H A S E   I I   -   L I N K   T O   S O R T   *
*        *---------------------------------------------------*
         SPACE
INIT4    EQU   *
         LOAD  EP=VSAMLST5              VCL 3.0 - E35 PRINT ROUTINE
         ST    R0,EPVCL30               ENTRY POINT ADDR OF VCL 3.0
         ST    R0,E35ADDR               SET UP SORT PARM LIST
         SPACE
         LA    R1,PARMSORT              ADDR OF SORT LIST
         LINK  EP=SORT
         SPACE
         DELETE EP=VSAMLST5
         EJECT
*        *---------------------------------*
*        *  WRITE ENDING MESSAGE AND QUIT  *
*        *---------------------------------*
         SPACE
ENDMSG   EQU   *
         BAL   R11,DATETIME             DATE AND TIME AT THIS POINT
         MVC   MSG04+43(5),HHMM         TIME = HH:MM
         MVC   MSG04+52(8),MMDDYY       DATE = MM/DD/YY
         MVI   CNTL,C'0'                SKIP 2 LINES
         MVC   LINE(L'MSG04),MSG04
         BAL   R11,PUTMSG               WRITE ENDING MESSAGE
         SPACE
         CLOSE MSGFILE
         SPACE 2
*        *-------------*
*        *   E X I T   *
*        *-------------*
         SPACE
GOHOME   EQU   *
         SR    R15,R15
         IC    R15,RC
         L     R13,MYSAVE+4
         RETURN (14,12),RC=(15)
         EJECT
*        *-----------------------------------------------*
*        *  DCB ERRORS - PRINT ERROR MESSAGE & SET RC=4  *
*        *-----------------------------------------------*
         SPACE
ERRDCB   EQU   *
         MVI   RC,X'04'                 SET RETURN CODE
         MVI   CNTL,C'0'                SKIP 2 LINES
         MVC   LINE(L'ERR01),ERR01      MOVE TO OUTPUT AREA & PRINT IT
         SPACE 2
*        *-----------------------------*
*        *  PRINT ROUTINE FOR MSGFILE  *
*        *-----------------------------*
         SPACE
PUTMSG   EQU   *
         PUT   MSGFILE,OAREA
         SPACE
         MVI   CNTL,X'40'               CLEAR OUTPUT AREA
         MVC   LINE,CNTL
         BR    R11                      RETURN
         EJECT
*        *---------------------*
*        *  DATE-TIME ROUTINE  *
*        *---------------------*
         SPACE
DATETIME EQU   *
         TIME  DEC
         SPACE
         ST    R0,WORD                  WORD = X'HHMMSSTH'
         UNPK  WORK,WORD                WORK = C'0HHMMSS*'  *=X'HT'
         MVC   HHMM(2),WORK+1           SET HOURS
         MVC   HHMM+3(2),WORK+3         SET MINUTES
         SPACE
         ST    R1,WORD                  WORD = X'00YYDDDF'
         UNPK  YYDDD,WORD
         MVC   MMDDYY+6(2),YYDDD        SET YEAR
         SPACE
         XC    WORK,WORK                WORK = X'00000000 00000000'
         MVO   WORK+6(2),YEAR           WORK = X'00000000 00000YY0'
         OI    WORK+7,X'0F'             WORK = X'00000000 00000YYF'
         CVB   R4,WORK
         STC   R4,YEAR                  YEAR IN BINARY
         MVC   WORK+6(2),DAYS           WORK = X'00000000 0000DDDF'
         CVB   R4,WORK
         STH   R4,DAYS                  DAYS IN BINARY
         SPACE
         LA    R3,2                     ASSUME LEAP YEAR
         TM    YEAR,X'03'               IS YEAR A MULTIPLE OF 4?
         BZ    LEAPYEAR                 YES - THIS IS A LEAP YEAR
         LA    R3,2(,R3)                NO - THIS IS NOT A LEAP YEAR
LEAPYEAR EQU   *
         LA    R2,DTCVNTAB              ADDR OF DATE CONVERSION TABLE
         LA    R5,12                    NUMBER OF MONTHS
CMPDAYS  EQU   *
         CH    R4,6(R3,R2)              NUMBER OF DAYS UP TO NEXT MONTH
         BNH   WHICHDAY                 THIS IS THE MONTH
         LA    R2,6(,R2)                BUMP TO NEXT ENTRY
         BCT   R5,CMPDAYS               NEXT MONTH, PLEASE
         B     DATESET                  NOT IN TABLE - FORGET IT
         SPACE
WHICHDAY EQU   *
         SH    R4,0(R3,R2)
         CVD   R4,WORK
         OI    WORK+7,X'0F'
         UNPK  MMDDYY+3(2),WORK+6(2)    SET DAY
         MVC   MMDDYY(2),0(R2)          SET MONTH
         SPACE
DATESET  EQU   *
         BR    R11                      RETURN
         EJECT
         LTORG
         SPACE
WORK     DC    D'0'
WORD     DC    F'0'
         ORG   WORD+1
YEAR     DS    XL1
DAYS     DS    H
MMDDYY   DC    C'MM/DD/YY'
HHMM     DC    C'HH:MM'
YYDDD    DC    C'YYDDD'
         SPACE
DTCVNTAB DS    0H
         DC    C'01',H'0',H'0'
         DC    C'02',H'31',H'31'
         DC    C'03',H'60',H'59'
         DC    C'04',H'91',H'90'
         DC    C'05',H'121',H'120'
         DC    C'06',H'152',H'151'
         DC    C'07',H'182',H'181'
         DC    C'08',H'213',H'212'
         DC    C'09',H'244',H'243'
         DC    C'10',H'274',H'273'
         DC    C'11',H'305',H'304'
         DC    C'12',H'335',H'334'
TOTDAYS  DC    C'13',H'366',H'365'
         EJECT
*        *-----------------------*
*        *   C O N S T A N T S   *
*        *-----------------------*
         SPACE
TBLPSWD  DS    0F
         DC    CL44'CATALOG.VCATMVA',CL8'VMVAXXXM'
         DC    CL44'CATALOG.VCATMVB',CL8'VMVBXXXM'
         DC    CL44'CATALOG.VCATMVC',CL8'VMVCXXXM'
         DC    CL44'VSAMCAT1',CL8'SHALOMM'
         DC    CL44'VSAMCAT2',CL8'BADSHAHM'
         DC    CL44'VSAMCAT3',CL8'MANTRAM'
         DC    CL44'VSAMCAT4',CL8'DEBITM'
         DC    CL44'VSAMCAT5',CL8'SHOWBISM'
         DC    CL44'VSAMCAT9',CL8'DRYSACM'
TBLPSNO  EQU   (*-TBLPSWD)/52           L'CATNAME + L'PASSWORD = 44 + 8
         SPACE
PARM9410 DS    0H
LENG     DC    H'0'
PARM     DC    CL3' '
         DS    0H
RPTSW    DC    X'00'
RC       DC    X'00'
RCVCL20  DC    F'0'
CNTCAT   DC    H'0'
         SPACE
WORKADDR DC    A(0)
WORKLENG DC    F'0'
         SPACE
LISTCAT  DC    CL8'LISTCAT'
CATNAME  DC    CL44'VSAM.CATALOG.NAME'
PASSWORD DC    CL8'PASSWORD'            X'FFFFFFFF' IF NO PASSWORD
PSWDFLG  DC    X'00'                    X'FF' - SUPPLIED
*                                       X'00' - DEFAULT
*                                       X'01' - NOT SUPPLIED
         SPACE
EPVCL    DS    0F
EPVCL20  DC    A(0)
EPVCL21  DC    A(0)
EPVCL22  DC    A(0)
EPVCL30  DC    A(0)
         EJECT
*        *-------------------------*
*        *   P A R M   L I S T S   *
*        *-------------------------*
         SPACE
PARM9420 DS    0F
         DC    A(CATNAME)
         DC    A(PASSWORD)
         DC    A(RPTSW)
         DC    A(EPVCL)
         DC    A(MSGFILE)
         DC    A(RPTFIL1)
         DC    A(SORTIN)
WORKA    DC    A(0)
WORKB    DC    A(0)
         SPACE 2
PARMSORT DS    0F
         DC    X'80',AL3(SORTLIST)
         DC    H'0'
SORTLIST DC    H'24'
         DC    A(SORTSTRT)
         DC    A(SORTEND)
         DC    A(RECDSTRT)
         DC    A(RECDEND)
         DC    A(0)                     NOT USED
E35ADDR  DC    A(0)                     EP ADDR OF VSAMLST5
         SPACE
SORTSTRT DC    C' SORT FIELDS=(1,12,CH,A)'
SORTEND  DC    C' '
RECDSTRT DC    C' RECORD TYPE=F,LENGTH=(92)'
RECDEND  DC    C' '
         EJECT
*        *---------------------*
*        *   M E S S A G E S   *
*        *---------------------*
         SPACE
OAREA    DS    0CL133
CNTL     DC    XL1'40'
LINE     DC    CL132' '
         SPACE 2
MSG01    DC    C'VSAMLIST-01  VSAM CATLG LIST UTIL STARTS AT HH:MM ON MX
               M/DD/YY'
         SPACE
MSG02    DC    C'VSAMLIST-02  FUNCTION COMPLETED WITH CONDITION CODE XXX
               '
         SPACE
MSG03    DC    C'VSAMLIST-03  AT HH:MM NN VSAM CATALOGS PROCESSED WITH X
               MAXIMUM CONDITION CODE XX'
         SPACE
MSG04    DC    C'VSAMLIST-04  VSAM CATLG LIST UTIL STOPS AT HH:MM ON MMX
               /DD/YY'
         SPACE 2
ERR00    DC    C'*** INVALID CONTROL STATEMENT ***'
         SPACE
ERR01    DC    C'VSAMLIST-05  UNABLE TO OPEN FILE RPTFILE - PROCESSING X
               IS TERMINATED'
ERRDDN   EQU   ERR01+33
         EJECT
MSGFILE  DCB   DDNAME=MSGFILE,DSORG=PS,MACRF=(PM)
         EJECT
RPTFIL1  DCB   DDNAME=RPTFIL1,DSORG=PS,MACRF=(PM)
         EJECT
SORTIN   DCB   DDNAME=SORTIN,DSORG=PS,MACRF=(PM),                      X
               RECFM=FB,LRECL=92,BLKSIZE=4600
         EJECT
VCLCNTL  DCB   DDNAME=VCLCNTL,DSORG=PS,MACRF=(GM),EODAD=EODCNTL
         END
