BLDLSTAT TITLE 'BLDLSTAT - PROGRAM TO LIST OUT DYNAMIC BLDL TABLES'
BLDLSTAT START
*
*   THIS IS A SLIGHTLY MODIFIED VERSION
*   OF THE AMDAHL VERSION OF THE CBT CODE.
*   NOTE THAT THE TABLE DISPLACEMENT IS NOW X'28'.
*   --- WJS/20MAR81
*
         B     26(,R15)            BRANCH AROUND ID         WJS/20MAR81
         DC    AL1(21),CL8'BLDLSTAT'    PROGRAM NAME
         DC    CL8'&SYSDATE'       DATE                     WJS/20MAR81
         DC    CL5'&SYSTIME'       TIME                     WJS/20MAR81
         STM   R14,R12,12(R13)     SAVE REGS IN HI SAVE AREA
         LR    R12,R15             SET UP BASE
*
         USING BLDLSTAT,R12        OF R12
         LR    R2,R1               SAVE PARAMS
         LR    R11,R13             SAVE CALLERS SAVE AREA ADDR
         LA    R13,SAVEAREA        SET DSECT BASE
         USING SAVEAREA,R13        DYNAMIC SAVEAREA BASE + WORK
         ST    R11,4(,R13)         SAVE CALLERS SAVE AREA ADDR
         ST    R13,8(,R11)         SAVE OURS IN CALLERS
*
         L     R2,0(,R2)           PARM FIELD PTR
         LH    R3,0(,R2)           PARM LENGTH
         LTR   R3,R3
         BZ    PARMDONE            NO PARM TO DO
*
         LA    R2,2(,R2)           BUMP PAST PREFIX
*
PARMLOOP LTR   R3,R3               ANY PARM LEFT
         BZ    PARMDONE            NO, ALL DONE
*
         CH    R3,=H'5'            MINIMUM LENGTH
         BL    BADPARM
         BH    NOTFIVE
         CLC   0(5,R2),=C'COUNT'   CHECK FOR COUNT ORDER
         BE    SETCOUNT
         CLC   0(5,R2),=C'ALPHA'   CHECK FOR ALPHABETIC ORDER
         BE    SETALPHA
         CLC   0(5,R2),=C'ENTRY'   CHECK FOR TABLE ORDER
         BE    SETENTRY
         B     BADPARM
*
NOTFIVE  DS    0H
         CH    R3,=H'7'            CHECK NEW MINIMUM
         BL    BADPARM
         BH    NOTSEVEN
         CLC   0(7,R2),=C'SUMMARY'
         BE    SETSUMRY
         B     BADPARM
*
NOTSEVEN DS    0H
         B     BADPARM
*
SETSUMRY OI    CTLFLAG,CTLSUMRY    SET THE SUMMARY FLAG
*
WASSEVEN LA    R2,7(,R2)           INCREMENT
         SH    R3,=H'7'            DECREMENT
*
WASCOMMN BZ    PARMDONE            QUIT IF DONE
         CLI   0(R2),C','          CHECK FOR DELIMITER
         BNE   BADPARM             ERROR IF NOT
         LA    R2,1(,R2)           INCREMENT SOME MORE
         BCT   R3,PARMLOOP         LOOP IF SOME LEFT
         B     BADPARM             ERROR IF NOT
*
SETALPHA OI    CTLFLAG,CTLALPHA    SET ALPHABETIC
         NI    CTLFLAG,255-CTLENTRY-CTLCOUNT
*
WASFIVE  LA    R2,5(,R2)           INCREMENT
         SH    R3,=H'5'            DECREMENT
         B     WASCOMMN            AND GO CHECK
*
SETCOUNT OI    CTLFLAG,CTLCOUNT    SET USE COUNT ORDER
         NI    CTLFLAG,255-CTLALPHA-CTLENTRY
         B     WASFIVE
*
SETENTRY OI    CTLFLAG,CTLENTRY    SET TABLE ENTRY ORDER
         NI    CTLFLAG,255-CTLALPHA-CTLCOUNT
         B     WASFIVE
*
         EJECT
*
BADPARM  DS    0H
         MVI   CTLFLAG,CTLCOUNT    SET TO DEFAULTS
         WTO   'DYNAMIC BLDL - INVALID PARMS - DEFAULTS ASSUMED'
*
PARMDONE DS    0H
         L     R1,PSAAOLD-PSA
         L     R1,ASCBTSB-ASCB(,R1)
         LA    R1,0(,R1)
         LTR   R1,R1
         BZ    *+8
         OI    CTLFLAG,CTLTSO
*
         L     R3,X'10'            CVT
         L     R3,X'C8'(,R3)       SSCVT
         L     R3,X'84'(,R3)       SVCTABLE
         L     R3,X'90'(,R3)       BLDL ENTRY
*
         CLC   4(8,R3),=CL8'DYNBLDL'    IS THIS SUPPORTED LEVEL
         BE    MOVETBL             YES,GO MOVE IT
*
         WTO   'DYNAMIC BLDL TABLE MISMATCH - REQUEST ABORTED.'
         B     RET
*
MOVETBL  L     R2,X'28'(,R3)       LINK TABLE ADDRESS       WJS/20MAR81
         USING TABHEAD,R2          ADDRESSABILITY
         L     R0,TABSIZE          SIZE OF 1 ENTRY
         MH    R0,ENTRIES          NUMBER OF ENTRIES
         AH    R0,=Y(TABLENG)      LENGTH OF THIS TABLE
         ST    R0,TBLLENG          SAVE THE LENGTH
         GETMAIN R,LV=(0)          GET SOME STORAGE
         ST    R1,TBLADDR          SAVE THE ADDRESS
*
         MVC   0(TABLENG,R1),TABHEAD    MOVE THE TABLE
         L     R4,TABSTART         LOAD OLD TABLE POINTERS
         LR    R2,R1               MOVE ADDRESS
*
         LA    R6,TABLENG(,R2)     POINT AT FIRST NEW ENTRY
         ST    R6,TABSTART         STORE IN NEW TABLE
         L     R6,TABSIZE          LOAD THE SIZE
         MH    R6,ENTRIES          SIZE OF THINGS
         LR    R3,R6               SAVE IT
         S     R6,TABSIZE          MINUS 1 FOR LAST ONE
         A     R6,TABSTART         ADJUST TO TABLE
         ST    R6,TABEND           LAST ENTRY
*
         L     R2,TABSTART
         LR    R5,R3               MOVE LENGTH
         MVCL  R2,R4               MOVE THE DATA
*
         L     R2,TBLADDR          RESTORE THE BASE ADDRESS
*
         EJECT
*
         TM    CTLFLAG,CTLTSO
         BO    NOOPEN
         OPEN  (SYSPRINT,(OUTPUT))
NOOPEN   DS    0H
*
         TM    CTLFLAG,CTLSUMRY    SUMMARY ONLY
         BO    NODETAIL
*
         TM    CTLFLAG,CTLALPHA+CTLCOUNT  SORT NEEDED?
         BZ    NOSORT              BRANCH IF NOT
*
         LM    R5,R7,TABSTART      LOAD TABLE POINTERS
         LR    R4,R5               LOAD SORT START
         SR    R4,R6               BACK UP ON ENTRY
*
SORTLOOP AR    R4,R6               BUMP TO NEXT ENTRY
         CR    R4,R7               CHECK FOR END
         BE    NOSORT              BRANCH IF DONE
         LR    R5,R4               POINT AT NEXT ENTRY
*
         USING ENTRY,R4
SORTINR1 AR    R5,R6               CHECK FOR END OF PASS
         CR    R5,R7               CHECK FOR END OF PASS
         BH    SORTLOOP            LOOP IF SO
*
         TM    CTLFLAG,CTLALPHA     TEST FOR ALPHA SORT
         BO    SORTALPH
         TM    CTLFLAG,CTLCOUNT     TEST FOR USE COUNT
         BO    SORTCNT
         B     SORTINR1             SO WHAT ARE WE DOING HERE
*
SORTALPH CLC   DATA(8),DATA-ENTRY(R5)    COMPARE NAMES
         BL    SORTINR1             LOOP IF FIRST ONE LOW
*
SORTEXCH XC    0(64,R4),0(R5)       EXCHANGE
         XC    0(64,R5),0(R4)       THE
         XC    0(64,R4),0(R5)       MOTHERS
         B     SORTINR1             AND CONTINUE
*
SORTCNT  CLC   TOTAL,TOTAL-ENTRY(R5)    COMPARE USES
         BH    SORTINR1             LOOP IF FIRST ONE LOW
         BL    SORTEXCH             GO EXCHANGE IF HIGH
*
         CLC   RECENT,RECENT-ENTRY(R5)   COMPARE RECENT USES
         BH    SORTINR1             LOOP IF FIRST ONE LOW
         BL    SORTEXCH             GO EXCHANGE IF HIGH
*
         B     SORTALPH             IF ALL ELSE EQUAL, TRY NAME
*
NOSORT   TM    CTLFLAG,CTLTSO
         BZ    NOTSOHD
         MVI   HEADING,C' '
         TPUT  HEADING,L'HEADING
         B     STRTLOOP
*
NOTSOHD  PUT   SYSPRINT,HEADING
*
STRTLOOP LM    R5,R7,TABSTART
         USING ENTRY,R5
*
PRINTIT  MVC   OUTLINE,BLANKS     CLEAR OUT LINE
*
         L     R9,RECENT           Q.ANY ACTION
         LTR   R9,R9               ELSE DONT PRINT LINE
         BZ    PRINTED
*
         MVC   OUTLINE+1(8),DATA   MODULE NAME
*
         SR    R9,R9
         IC    R9,DATA+59          CONCAT NO
         IC    R9,CHARTABL(R9)
         STC   R9,OUTLINE+11
*
         UNPK  OUTLINE+13(7),DATA+8(4)
         MVI   OUTLINE+19,C' '
         TR    OUTLINE+13(6),CHARTABL-240
*
         UNPK  OUTLINE+21(7),DATA+22(4)
         MVI   OUTLINE+27,C' '     MODULE SIZE
         TR    OUTLINE+21(6),CHARTABL-240
*
         MVC   OUTLINE+29(8),=X'202020206B202020'
         LH    R9,TOTAL            TOTAL COUNT
         N     R9,=X'0000FFFF'     CLEAR SIGN
         CVD   R9,DWD
         ED    OUTLINE+28(9),DWD+4
*
         MVC   OUTLINE+39(8),=X'202020206B202020'
         LH    R9,RECENT           RECENT COUNT
         CVD   R9,DWD
         ED    OUTLINE+38(9),DWD+4
*
         LH    R9,TOTAL            CALCULATE PERCENTAGE
         N     R9,=X'0000FFFF'     CLEAR SIGN
         M     R8,=F'10000'        PROVIDE DECIMAL PLACES
         D     R8,HITS             GET THE PERCENTAGE
*
         CVD   R9,DWD
         MVC   OUTLINE+48(7),=X'2020214B20206C'
         ED    OUTLINE+47(7),DWD+5
*
         LA    R1,OUTLINE+57       POINT AT ATTR FIELD
         TM    DATA+11,X'80'        TEST FOR ALIAS
         BZ    NOALIAS
         MVC   0(6,R1),=C'ALIAS,'
         LA    R1,6(,R1)
*
NOALIAS  TM    DATA+20,X'80'       TEST FOR RENT
         BZ    NORENT
         MVC   0(5,R1),=C'RENT,'
         LA    R1,5(,R1)
*
NORENT   DS    0H
         BCTR  R1,0                BACK UP
         MVI   0(R1),C' '
*
         BAL   R10,PUTOUT
*
PRINTED  BXLE  R5,R6,PRINTIT
*
NODETAIL MVC   OUTLINE,BLANKS
         BAL   R10,PUTOUT
         BAL   R10,PUTOUT
*
         LH    R9,SORTS
         N     R9,=X'0000FFFF'     FIX THE SIZE
         CVD   R9,DWD
         MVC   OUTLINE+8(8),=X'202020206B202120'
         ED    OUTLINE+7(9),DWD+4
         MVC   OUTLINE+1(5),=C'SORTS'
         BAL   R10,PUTOUT
*
         MVC   OUTLINE,BLANKS
         L     R9,HITS
         CVD   R9,DWD
         MVC   OUTLINE+8(8),=X'202020206B202120'
         ED    OUTLINE+7(9),DWD+4
*
         L     R1,HITS
         AL    R1,MISSES
         M     R8,=F'10000'
         DR    R8,R1
*
         CVD   R9,DWD
         MVC   OUTLINE+17(7),=X'2020214B20206C'
         ED    OUTLINE+16(7),DWD+5
         MVC   OUTLINE+1(4),=C'HITS'
*
         BAL   R10,PUTOUT
*
         MVC   OUTLINE,BLANKS
         L     R9,MISSES
         CVD   R9,DWD
         MVC   OUTLINE+8(8),=X'202020206B202120'
         ED    OUTLINE+7(9),DWD+4
*
         L     R1,HITS
         AL    R1,MISSES
         M     R8,=F'10000'
         DR    R8,R1
*
         CVD   R9,DWD
         MVC   OUTLINE+17(7),=X'2020214B20206C'
         ED    OUTLINE+16(7),DWD+5
         MVC   OUTLINE+1(6),=C'MISSES'
         BAL   R10,PUTOUT
*
         TM    CTLFLAG,CTLTSO
         BO    RET
         PUT   SYSPRINT,BLANKS
*
         B     RET
*
         EJECT
*
RET      DS    0H
         L     R0,TBLLENG          LENGTH OF GETMAIN
         L     R1,TBLADDR          ADDRESS OF GETMAIN
         LTR   R1,R1               IS THERE ANY
         BZ    LEAVE
         FREEMAIN R,LV=(0),A=(1)   FREE IT
*
LEAVE    TM    CTLFLAG,CTLTSO      TEST FOR TSO
         BO    LEAVETSO
         CLOSE (SYSPRINT)
*
LEAVETSO L     R13,4(,R13)         HI SAVE AREA ADDR
         LM    R14,R12,12(R13)     RESORE CALLERS REGS
         SR    R15,R15             ZERO THE RETURN CODE (ALWAYS)
         BR    R14                 RETURN
*
PUTOUT   TM    CTLFLAG,CTLTSO
         BZ    PUTPUT
         TPUT  OUTLINE,L'OUTLINE
         BR    R10
PUTPUT   PUT   SYSPRINT,OUTLINE
         BR    R10
*
         EJECT
SAVEAREA DS    18F
*
TBLLENG  DC    F'0'
TBLADDR  DC    F'0'
*
LITERALS LTORG
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
*
DWD      DC    D'0'
*
BLANKS   DC    CL80' '
OUTLINE  DC    CL80' '
HEADING  DC    CL80'1NAME      LOCATION   SIZE      TOTAL    RECENT  %TX
               OTAL  ATTRIBUTES'
*
CHARTABL DC    C'0123456789ABCDEF'
*
CTLFLAG  DC    AL1(CTLCOUNT)       CONTROL FLAG FROM PARMS
CTLSUMRY EQU   X'80'               PRINT SUMMARY ONLY
CTLCOUNT EQU   X'40'               DETAIL BY USE COUNT
CTLALPHA EQU   X'20'               DETAIL BY ALPHABETICAL ORDER
CTLENTRY EQU   X'10'               DETAIL BY TABLE ORDER
CTLTSO   EQU   X'08'               OUTPUT IN UNDER TSO
*
SYSPRINT DCB   DSORG=PS,MACRF=PM,DDNAME=SYSPRINT,LRECL=80,             X
               RECFM=FA,BLKSIZE=80
*
         EJECT
TABHEAD  DSECT
TABSTART DS    F
TABSIZE  DS    F
TABEND   DS    F
LASTSLOT DS    F
TABSLOTF DS    F
SORTS    DS    H
ENTRIES  DS    H
HITS     DS    F
MISSES   DS    F
         DS    0F
TABLENG  EQU   *-TABHEAD
*
ENTRY    DSECT
RECENT   DS    H
TOTAL    DS    H
DATA     DS    0F
*
         IHAASCB
*
         IHAPSA
*
         END   BLDLSTAT
