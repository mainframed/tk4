         PRINT OFF
         MACRO
&NAME    INIT &BASE=3,&REGS=Y,&PATCH=3,&RENT=N,&SAVE=Y
         AIF   ((&BASE LT 13) AND (&BASE GT 1)).N020
         MNOTE 12,'INVALID BASE REGISTER'
         MEXIT
.N020    ANOP
         PUSH  PRINT
         PRINT ON,GEN
         EJECT
&SYSECT  CSECT
         USING *,15
         B     BEGIN
         DC    AL1(24)
         DC    CL8'&SYSECT'
         DC    CL16'-&SYSDATE-&SYSTIME'
         AIF   ('&RENT' EQ 'Y').N004
MYSAVE   DC    18F'-1'
.N004    ANOP
         AIF   ('&PATCH' EQ '0').N005
PATCH    DC    &PATCH.CL8'*PATCH*'
.N005    ANOP
         AIF   ('&REGS' EQ 'N').N030
         AIF   ('&REGS' EQ 'Y').N010
         MNOTE 4,'REGS OPERAND INVALID. Y SUBSTITUTED'
.N010    ANOP
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
.N030    ANOP
BEGIN    DS   0H
         STM   14,12,12(13)
         LR    &BASE,15
         DROP  15
         USING &SYSECT,&BASE
         AIF   ('&SAVE' EQ 'N').N003
         AIF   ('&RENT' EQ 'Y').N002
         AIF   ('&RENT' EQ 'N').N001
         MNOTE 4,'RENT OPERAND INVALID. N SUBSTITUTED'
.N001    ANOP
         ST    13,MYSAVE+4
         LR    15,13
         LA    13,MYSAVE
         ST    13,8(15)
         AGO   .N003
.N002    ANOP
         GETMAIN R,LV=72
         ST    13,4(1)
         ST    1,8(13)
         LR    13,1
.N003    ANOP
         POP   PRINT
         EJECT
         MEND
         PRINT ON
*  MODULE NAME:         VSAMLST5     (REL. 1.1  08/10/79)
*
*  MODULE DESCRIPTION:  VSAM CATALOG LIST UTILITY - E35/DETAILS REPORTS
*
*  RETURN LINKAGE:      RETURN (14,12),RC=(15)
*
*  LINKAGE TABLE:       NONE - SINGLE ENTRY
*
*  PARAMETERS:          R1 POINTS TO THE ADDRESS OF A 92-BYTES RECORD
*                       FROM SORT.
*
*  EXIT:                RC=04 - DELETE RECORD
*                       RC=08 - DO NOT RETURN
*
*  MODULE FUNCTION:     FOR EACH RECORD FROM SORT, THIS MODULE FORMATS
*                       IT AFTER DETERMINING THE REPORT TO WHICH IT
*                       BELONGS.  THIS MODULE PRODUCES TWO FORMATTED
*                       DETAILS REPORTS.  THEY ARE THE VSAM VOLUME
*                       CONTENTS AND THE VSAM TRACK ALLOCATION MAP.
*                       IF THE OPTIONAL DD CARD 'VSAMHIST' IS IN THE
*                       JCL AND POINTS TO A DASD DATA SET, IT WILL
*                       WRITE OUT A SUMMARY VSAM HISTORY FILE WITH
*                       INFORMATION FROM THE VSAM VOLUME CONTENTS
*                       REPORT.
*
*  CALLER:              VSAMLIST/SORT
*
*  CALLS:               VSAMLST6, VSAMLST7, VSAMLST8
*
*  SYSTEMS SERVICES:    CALL, CLOSE, DELETE, DEVTYPE, LOAD, OPEN,
*                       PUT (QSAM), TIME
*
*  MODULE ENVIRONMENT:  OS/VS1
         TITLE 'VSAMLST5 --- VSAM CATALOG LIST UTILITY DETAILS REPORTS X
               GENERATOR (3.0) - SORT EXIT E35'
*        *-----------------------------------*
*        *   R E G I S T E R   U S A G E S   *
*        *-----------------------------------*
*
*  R0  -  STANDARD LINKAGE
*  R1  -  STANDARD LINKAGE (ADDR OF PARM LIST) & TEMP WORK SPACE
*  R2  -  TEMP WORK SPACE
*  R3  -  TEMP WORK SPACE
*  R4  -  TEMP WORK SPACE
*  R5  -  TEMP WORK SPACE
*  R6  -  NOT USED
*  R7  -  NOT USED
*  R8  -  NOT USED
*  R9  -  NOT USED
*  R10 -  BASE REG FOR DSECT INDTAIL, INVLCHR, INEXTNT
*  R11 -  RETURN ADDR FOR SUBROUTINES
*  R12 -  BASE REG FOR CSECT VSAMLST5
*  R13 -  STANDARD LINKAGE (ADDR OF SAVE AREA)
*  R14 -  STANDARD LINKAGE (ADDR TO RETURN)
*  R15 -  STANDARD LINKAGE (ADDR OF ENTRY POINT & RETURN CODE)
         SPACE 3
VSAMLST5 CSECT
         INIT  BASE=12
***********************************************************************
*                                                                     *
*  3.0    E35 EXIT TO FORMAT DETAILS REPORTS                          *
*                                                                     *
*     FUNCTION:  IF REPORT NO. IS ZERO, PROCESS IT FOR VSAM VOLUME    *
*                CONTENTS & OPTIONAL VSAM HISTORY FILE.               *
*                IF REPORT NO. IS ONE, PROCESS IT FOR VSAM TRACK      *
*                ALLOCATION MAP.                                      *
*                                                                     *
*     ERRORS:  NONE                                                   *
*                                                                     *
***********************************************************************
         SPACE 3
VCL30    EQU   *
         SPACE
NOP0     B     INIT0                    INITIALIZE IF 1ST TIME THRU
         L     R10,0(,R1)               GET ADDR OF A SORTED RECORD
         LA    R10,0(,R10)              CLEAR HIGH ORDER BYTE
         LTR   R10,R10                  IS IT EOD YET?
         BZ    EOSORTIN                 YES - CLEAN IT UP AND GO HOME
         SPACE
         USING INDTAIL,R10
         TM    INDRPTNO,X'80'           IS THE REPORT NO. ONE?
         BO    RPT2                     YES - VSAM TRK ALLOC MAP
*                                       NO - VSAM VOLUME CONTENTS
         EJECT
*        *************************************
*        *                                   *
*        *  REPORT 1 - VSAM VOLUME CONTENTS  *
*        *                                   *
*        *************************************
         SPACE
RPT1     EQU   *
         CLI   RECPEND,X'00'            IS THERE A RECORD PENDING?
         BE    CHKRCTYP                 NO - GO CHECK THE RECORD TYPE
         CLC   SAVKEYSQ,INDRCKEY        YES - IS THIS A NEW RECORD?
         BNE   PRTSAVED                 YES - PRINT THE PENDING RECORD
         SPACE
         LH    R2,INDTRKAL              TRACKS ALLOCATED
         AH    R2,SAVTRKAL
         STH   R2,SAVTRKAL
         SPACE
         LH    R1,INDTRKUS              TRACKS USED
         AH    R1,SAVTRKUS
         STH   R1,SAVTRKUS
         SPACE
         SR    R0,R0                    PERCENTS OF USAGE
         MH    R1,HUNDRED
         DR    R0,R2
         STC   R1,SAVPCTUS
         SPACE
         SR    R0,R0                    NUMBER OF EXTENTS
         IC    R0,SAVNOEXT
         SR    R1,R1
         IC    R1,INDNOEXT
         AR    R0,R1
         STC   R0,SAVNOEXT
         B     RPT1TYP3                 ALL DONE FOR NOW
         EJECT
*        *-----------------------------*
*        *  THERE IS A RECORD PENDING  *
*        *-----------------------------*
         SPACE
PRTSAVED EQU   *
         MVI   RECPEND,X'00'            RESET RECORD-PENDING FLAG
         SPACE
         LA    R1,SAVEDREC              FORMAT & PRINT THE SAVED RECORD
         ST    R1,RECD31
         ST    R1,RECD33
         LA    R1,PARM9431
         L     R15,EPVCL31
         CALL  (15)
         SPACE
         BAL   R11,PUTRPT
         SPACE 2
         CLI   VSMHSTSW,X'FF'           IS HISTORY FILE NEEDED?
         BNE   CHKRCTYP                 NO - SKIP THIS
         LA    R1,PARM9433
         L     R15,EPVCL33
         CALL  (15)
         EJECT
*        *-----------------------------------------------*
*        *  THERE ARE 4 TYPES OF RECORDS FROM SORT.      *
*        *    TYPE 0 - VOL CHAR INFO'S:  BEGINNING       *
*        *    TYPE 1 - CL, AIX & ASSOC                   *
*        *    TYPE 2 - D & I:  MAYBE MULTIPLE RECORDS    *
*        *    TYPE 3 - DUMMY RECORD:  ENDING             *
*        *-----------------------------------------------*
         SPACE
CHKRCTYP EQU   *
         CLC   INDRCKEY,ZERO            IS THIS TYPE 0?
         BE    RPT1TYP0                 YES - BEGINNING OF A NEW VOLUME
         SPACE
         CLC   INDRCSEQ,FOXES           IS THIS TYPE 3?
         BE    RPT1TYP3                 YES - END OF THE CURRENT VOLUME
         SPACE
         CLI   INDENTYP,C'D'            IS THIS TYPE 2?
         BE    RPT1TYP2
         CLI   INDENTYP,C'I'
         BE    RPT1TYP2                 YES - CHECK IF MULTIPLE RECORDS
         SPACE
         B     RPT1TYP1                 NO - MUST BE CL, AIX OR ASSOC
         DROP  R10
         EJECT
*        *----------------------------------------------------------*
*        *  TYPE 0 - BEGIN A REPORT OF A NEW VOLUME - PRINT TITLES  *
*        *----------------------------------------------------------*
         SPACE
RPT1TYP0 EQU   *
         USING INVLCHR,R10
         MVI   RPTFLAG,X'00'            INDICATE REPORT 1
         SPACE
*        *---------------*
*        *  SET TITLE 1  *
*        *---------------*
         SPACE
         MVI   RPTFLAG,X'00'            INDICATE REPORT 1
         MVC   SUBTIT1,SUBTIT11         VSAM VOLUME CONTENTS
         MVC   VOLSER1,INVVOLNO         VOLUME SERIAL NUMBER
         AP    PAGECNT,=P'1'            YES - TIME FOR A NEW PAGE
         MVC   PAGE1,PAT3
         ED    PAGE1,PAGECNT            SET NEW PAGE NUMBER
         SPACE 2
*        *---------------*
*        *  SET TITLE 2  *
*        *---------------*
         SPACE
         CLI   INVDVTYP+2,X'20'         IS IT A DASD?
         BNE   BADDVTP                  NO - GO TRANSLATE IT
         SPACE
         MVI   DEVTYPE2,X'40'           CLEAR DEVICE TYPE
         MVC   DEVTYPE2+1(L'DEVTYPE2-1),DEVTYPE2
         SR    R2,R2                    CLEAR INDEX FOR DASD TYPE TABLE
         IC    R2,INVDVTYP+3            GET DEVICE CODE
         SLL   R2,3                     MULTIPLY BY 8 FOR DISPLACEMENT
         LA    R2,TYPEDASD(R2)          R2 = ADDR OF DASD TYPE ENTRY
         LA    R1,TYPEDEND              R1 = ADDR OF END OF TABLE
         CR    R1,R2                    IS THIS A VALID ENTRY?
         BNH   BADDVTP                  NO - GO TRANSLATE IT
         MVC   DEVTYPE2(7),1(R2)        ONLY 7 BYTES FROM TABLE
         B     STAB1
         SPACE
BADDVTP  EQU   *
         UNPK  DEVTYPE2(9),INVDVTYP(5)  TRANSLATE INTO HEX
         TR    DEVTYPE2,HEXTBL
         MVI   DEVTYPE2+8,X'40'
         EJECT
*        *-----------------------*
*        *  SET TITLE 2 - CONT.  *
*        *-----------------------*
         SPACE
STAB1    EQU   *                        DASD VOLUME USE
         TM    INVOLUSE+1,X'10'
         BZ    STAB2
         MVC   VOLUSE2,=C'PRIVATE'
         B     CYLVOL
         SPACE
STAB2    EQU   *
         TM    INVOLUSE+1,X'08'
         BZ    STAB3
         MVC   VOLUSE2,=C'PUBLIC '
         B     CYLVOL
         SPACE
STAB3    EQU   *
         TM    INVOLUSE+1,X'04'
         BZ    STAB4
         MVC   VOLUSE2,=C'STORAGE'
         B     CYLVOL
         SPACE
STAB4    EQU   *
         MVC   VOLUSE2,=C'STAB XX'      TRANSLATE INTO HEX
         UNPK  VOLUSE2+5(3),INVOLUSE+1(2)
         TR    VOLUSE2+5(2),HEXTBL
         MVI   VOLUSE2+7,X'40'
         SPACE
CYLVOL   EQU   *
         LH    R1,INVCYLVL              NO. OF LOGICAL CYLINDERS/VOL
         CVD   R1,WORK
         MVO   WORK(3),WORK+5(3)
         MVC   CYLVOL2,PAT4
         ED    CYLVOL2,WORK
         SPACE
         LH    R1,INVTRKCL              NO. OF TRACKS/CYL
         CVD   R1,WORK
         MVC   TRKCYL2,PAT3
         ED    TRKCYL2,WORK+6
         SPACE
         LH    R1,INVBYTTK              NO. OF BYTES/TRK
         CVD   R1,WORK
         MVC   BYTTRK2,PAT5
         ED    BYTTRK2,WORK+5
         EJECT
*        *---------------*
*        *  SET TITLE 3  *
*        *---------------*
         SPACE
         LH    R1,INVNODST              NO. OF VSAM DATA SETS ON VOL
         CVD   R1,WORK
         MVC   DSNVOL3,PAT5
         ED    DSNVOL3,WORK+5
         SPACE
         LH    R1,INVNODSP              NO. OF DATA SPACES ON VOL
         CVD   R1,WORK
         MVC   DSPCVOL3,PAT3
         ED    DSPCVOL3,WORK+6
         SPACE
         LH    R1,INVSYSXT              NO. OF SYSTEM ALLOWED EXTENTS
         CVD   R1,WORK
         MVC   MXTALLC3,PAT3
         ED    MXTALLC3,WORK+6
         SPACE
         MVC   CATNAME3,INVCATNM        VSAM CATALOG NAME
         SPACE 2
*        *---------------*
*        *  SET TITLE 4  *
*        *---------------*
         SPACE
         LH    R1,INVVSEXT              NO. OF VSAM FREE EXTENTS
         CVD   R1,WORK
         MVC   VSFSNUM4,PAT5
         ED    VSFSNUM4,WORK+5
         SPACE
         LH    R1,INVVSTRK              NO. OF VSAM FREE TRACKS
         CVD   R1,WORK
         MVC   VSFSTRK4,PAT5
         ED    VSFSTRK4,WORK+5
         SPACE
         LH    R1,INVVSLGE              TRK'S OF VSAM LARGEST FREE EXT
         CVD   R1,WORK
         MVC   VSFSLGE4,PAT5
         ED    VSFSLGE4,WORK+5
         EJECT
*        *---------------*
*        *  SET TITLE 5  *
*        *---------------*
         SPACE
         CLC   INVOSEXT,FOXES           ARE OS SPACE INFO'S AVAILABLE?
         BNE   SETITLE5                 YES - CONTINUE
         LA    R1,TITLE5A               NO - SET MESSAGE
         ST    R1,ATITLE5
         B     ALLTSET                  AND PRINT THEM
         SPACE
SETITLE5 EQU   *
         LH    R1,INVOSEXT              NO. OF OS FREE EXTENTS
         CVD   R1,WORK
         MVC   OSFSNUM5,PAT5
         ED    OSFSNUM5,WORK+5
         SPACE
         LH    R1,INVOSTRK              NO. OF OS FREE TRACKS
         CVD   R1,WORK
         MVC   OSFSTRK5,PAT5
         ED    OSFSTRK5,WORK+5
         SPACE
         LH    R1,INVOSCYL              NO. OF OS FREE CYLINDERS
         CVD   R1,WORK
         MVO   WORK(3),WORK+5(3)
         MVC   OSFSCYL5,PAT4
         ED    OSFSCYL5,WORK
         SPACE
         LH    R1,INVOSLGE              TRK'S OF OS LARGEST FREE EXT
         CVD   R1,WORK
         MVC   OSFSLGE5,PAT5
         ED    OSFSLGE5,WORK+5
         EJECT
*        *-----------------------------------*
*        *  ALL TITLES SET - PRINT THEM NOW  *
*        *-----------------------------------*
         SPACE
ALLTSET  EQU   *
         LA    R2,TITLENO               NO. OF TITLES S/B 7
         LA    R3,TITLES                BEGINNING OF ADDR'S OF TITLES
         SPACE
PRNTITLE EQU   *
         L     R0,0(,R3)                ADDR OF TITLE OR HEADING
         PUT   RPTFIL2,(0)
         SPACE
         LA    R3,4(,R3)                NEXT TITLE ADDR
         BCT   R2,PRNTITLE              PRINT THEM ALL
         SPACE
         CLC   INVOSEXT,FOXES           ARE OS SPACE INFO'S AVAILABLE?
         BNE   NORSTL5                  YES - CONTINUE
         LA    R1,TITLE5                NO - RESET ADDR OF TITLE
         ST    R1,ATITLE5
         SPACE
NORSTL5  EQU   *
         MVI   LINECNT+1,X'0D'          13 LINES HAVE BEEN PRINTED
         MVI   CNTL,C'0'                SKIP 2 LINES FOR NEXT PRINT
         B     RPT1TYP3                 ALL DONE FOR TYPE 0 RECORD
         SPACE
         DROP  R10
         EJECT
*        *-----------------------------*
*        *  TYPE 1 - FORMAT AND PRINT  *
*        *-----------------------------*
         SPACE
RPT1TYP1 EQU   *
         USING INDTAIL,R10
         ST    R10,RECD31
         LA    R1,PARM9431
         L     R15,EPVCL31
         CALL  (15)
         SPACE
         CLC   INDRCSEQ,ZERO            IS THIS THE FIRST OF THE SET?
         BNE   ASSOCREC                 NO - JUST PRINT IT
         CLI   CNTL,C'0'                IS THIS THE FIRST LINE?
         BE    ASSOCREC                 YES - JUST PRINT IT
         SPACE
         LH    R1,LINEMAX               CHECK IF IT'S THE LAST LINE
         BCTR  R1,0
         CH    R1,LINECNT
         BH    NOTLAST
         MVI   LINECNT+1,X'FF'          PRINT IT ON A NEW PAGE
         B     ASSOCREC
         SPACE
NOTLAST  EQU   *
         MVI   CNTL,C'0'                SKIP 2 LINES
         BAL   R11,PUTRPT
         LH    R1,LINECNT
         LA    R1,1(,R1)
         STH   R1,LINECNT
         B     RPT1TYP3
         SPACE
ASSOCREC EQU   *
         BAL   R11,PUTRPT
         B     RPT1TYP3
         EJECT
*        *--------------------------------------------------*
*        *  TYPE 2 - IF MULTIPLE RECORDS POSSIBLE, SAVE IT  *
*        *           ELSE FORMAT AND PRINT                  *
*        *--------------------------------------------------*
         SPACE
RPT1TYP2 EQU   *
         TM    INDDSORG,X'04'           KEY RANGE?
         BO    HOLDTYP2                 YES - HOLD IT
         DROP  R10
         SPACE
         ST    R10,RECD31
         ST    R10,RECD33
         LA    R1,PARM9431
         L     R15,EPVCL31
         CALL  (15)
         SPACE
         BAL   R11,PUTRPT
         SPACE 2
         CLI   VSMHSTSW,X'FF'           IS HISTORY FILE NEEDED?
         BNE   RPT1TYP3                 NO - SKIP THIS
         LA    R1,PARM9433
         L     R15,EPVCL33
         CALL  (15)
         B     RPT1TYP3
         SPACE
HOLDTYP2 EQU   *
         MVC   SAVEDREC,0(R10)          SAVE RECORD
         MVI   RECPEND,X'FF'            AND INDICATE SO
         B     RPT1TYP3
         SPACE 2
*        *-----------------------*
*        *  TYPE 3 - DO NOTHING  *
*        *-----------------------*
         SPACE
RPT1TYP3 EQU   *
         LA    R15,4                    TELL SORT TO DELETE THIS RECORD
         B     GOHOME
         EJECT
*        ******************************************
*        *                                        *
*        *  REPORT 2 - VSAM TRACK ALLOCATION MAP  *
*        *                                        *
*        ******************************************
         SPACE
RPT2     EQU   *
         USING INEXTNT,R10
         SPACE
*        *-----------------------------------------------*
*        *  THERE ARE 3 TYPES OF RECORDS FROM SORT.      *
*        *    TYPE 0 - VOL CHAR INFO'S:  BEGINNING       *
*        *    TYPE 1 - EXTENT INFO'S                     *
*        *    TYPE 2 - DUMMY RECORD:  ENDING             *
*        *-----------------------------------------------*
         SPACE
         CLC   INELOTCH,FOXES           IS THIS TYPE 2?
         BE    RPT2TYP2                 YES - END OF THE CURRENT VOLUME
         SPACE
         NI    INERPTNO,X'7F'           TURN OFF THE FIRST BIT
         CLC   INELOTCH,ZERO            IS THIS TYPE 0?
         BE    RPT2TYP0                 YES - BEGINNING OF A NEW VOLUME
         SPACE
         B     RPT2TYP1                 ELSE MUST BE EXTENT INFO'S
         DROP  R10
         EJECT
*        *--------------------------*
*        *  TYPE 0 - RESET TITLE 1  *
*        *--------------------------*
         SPACE
RPT2TYP0 EQU   *
         MVI   RPTFLAG,X'FF'            INDICATE REPORT 2
         MVC   SUBTIT1,SUBTIT21         VSAM TRACK ALLOCATION MAP
         MVI   LINECNT+1,X'FF'          MAKE SURE TO START A NEW PAGE
         SPACE
         ST    R10,RECD32
         LA    R1,PARM9432
         L     R15,EPVCL32
         CALL  (15)                     PASS VCL 3.2 THE VOLUME INFO'S
         SPACE
         BAL   R11,PUTRPT               WRITE OUT THE VOL LABEL EXT
         B     RPT1TYP3                 DELETE AND GO HOME
         SPACE 2
*        *-----------------------------*
*        *  TYPE 1 - FORMAT AND PRINT  *
*        *-----------------------------*
         SPACE
RPT2TYP1 EQU   *
         ST    R10,RECD32
         LA    R1,PARM9432
         L     R15,EPVCL32
         CALL  (15)
         SPACE
         LTR   R4,R1                    IS THERE A SECOND LINE?
         BZ    ONELINE1                 NO - ONLY ONE LINE
         BAL   R11,PUTRPT
         MVC   LINE,0(R4)               SET UP SECOND LINE
         SPACE
ONELINE1 EQU   *
         BAL   R11,PUTRPT
         B     RPT1TYP3
         EJECT
*        *-------------------------------------------------*
*        *  TYPE 3 - END OF CURRENT REPORT - SUMMARIZE IT  *
*        *-------------------------------------------------*
         SPACE
RPT2TYP2 EQU   *
         ST    R10,RECD32
         LA    R1,PARM9432
         L     R15,EPVCL32
         CALL  (15)
         SPACE
         LTR   R4,R1                    IS THERE A SECOND LINE?
         BZ    ONELINE2                 NO - ONLY ONE LINE
         BAL   R11,PUTRPT
         MVC   LINE,0(R4)               SET UP SECOND LINE
         SPACE
ONELINE2 EQU   *
         LH    R1,LINECNT               CHECK IF THERE'S ENOUGH ROOM
         LA    R1,4(,R1)                FOR 4 MORE LINES
         CH    R1,LINEMAX
         BNH   FOURMORE                 YES - THERE'S ENOUGH
         MVI   LINECNT+1,X'FF'          NO - PRINT IT ON A NEW PAGE
         SPACE
FOURMORE EQU   *
         MVI   CNTL,C'0'                SKIP 2 LINES
         BAL   R11,PUTRPT
         SPACE
         MVI   CNTL,C'0'                SKIP 2 LINES
         MVC   LINE+51(L'ENDING1),ENDING1
         BAL   R11,PUTRPT
         B     RPT1TYP3
         EJECT
*        *---------------------------------------------*
*        *   I N I T   -   S E T   D A T E / T I M E   *
*        *---------------------------------------------*
         SPACE
INIT0    EQU   *
         TIME  DEC
         SPACE
         ST    R0,WORD                  WORD = X'HHMMSSTH'
         UNPK  WORK,WORD                WORK = C'0HHMMSS*'  *=X'HT'
         MVC   TIME1(2),WORK+1          SET HOURS
         MVC   TIME1+3(2),WORK+3        SET MINUTES
         SPACE
         ST    R1,WORD                  WORD = X'00YYDDDF'
         UNPK  YYDDD,WORD
         MVC   DATE1+6(2),YYDDD         SET YEAR
         SPACE
         XC    WORK,WORK                WORK = X'00000000 00000000'
         MVO   WORK+6(2),YEAR           WORK = X'00000000 00000YY0'
         OI    WORK+7,X'0F'             WORK = X'00000000 00000YYF'
         CVB   R4,WORK
         STC   R4,YEAR                  YEAR IN BINARY
         MVC   WORK+6(2),DAYS           WORK = X'00000000 0000DDDF'
         CVB   R4,WORK
         STH   R4,DAYS                  DAYS IN BINARY
         SPACE
         LA    R3,2                     ASSUME LEAP YEAR
         TM    YEAR,X'03'               IS YEAR A MULTIPLE OF 4?
         BZ    LEAPYEAR                 YES - THIS IS A LEAP YEAR
         LA    R3,2(,R3)                NO - THIS IS NOT A LEAP YEAR
LEAPYEAR EQU   *
         LA    R2,DTCVNTAB              ADDR OF DATE CONVERSION TABLE
         LA    R5,12                    NUMBER OF MONTHS
CMPDAYS  EQU   *
         CH    R4,6(R3,R2)              NUMBER OF DAYS UP TO NEXT MONTH
         BNH   WHICHDAY                 THIS IS THE MONTH
         LA    R2,6(,R2)                BUMP TO NEXT ENTRY
         BCT   R5,CMPDAYS               NEXT MONTH, PLEASE
         B     DATESET                  NOT IN TABLE - FORGET IT
         SPACE
WHICHDAY EQU   *
         SH    R4,0(R3,R2)
         CVD   R4,WORK
         OI    WORK+7,X'0F'
         UNPK  DATE1+3(2),WORK+6(2)     SET DAY
         MVC   DATE1(2),0(R2)           SET MONTH
         EJECT
*        *---------------------------------------------------*
*        *   I N I T   -   O P E N   R E P O R T   F I L E   *
*        *---------------------------------------------------*
         SPACE
DATESET  EQU   *
         OPEN  (RPTFIL2,(OUTPUT))
         SPACE
         TM    RPTFIL2+48,X'10'         IS OPEN SUCCESSFUL?
         BO    DCBOK                    YES - KEEP ON GOING
         LA    R15,8                    NO - STOP PROCESSING
         B     GOHOME
         SPACE 2
*        *---------------------------------------------------*
*        *   I N I T   -   L O A D   S U B R O U T I N E S   *
*        *---------------------------------------------------*
         SPACE
DCBOK    EQU   *
         LOAD  EP=VSAMLST6
         ST    R0,EPVCL31               ENTRY PT OF REPORT 1 MOD (3.1)
         SPACE
         LOAD  EP=VSAMLST7
         ST    R0,EPVCL32               ENTRY PT OF REPORT 2 MOD (3.2)
         EJECT
*        *-----------------------------------------------*
*        *   I N I T   -   C H E C K   V S A M H I S T   *
*        *-----------------------------------------------*
         SPACE
CKVSMHST EQU   *
         MVI   VSMHSTSW,X'00'           RESET VSAM HISTORY SWITCH
         DEVTYPE VSAMHIST,DEVINFO       GET SOME DEVICE INFOS
         SPACE
         LTR   R15,R15                  IS THERE A DD CARD 'VSAMHIST'?
         BNZ   NOVSMHST                 NO - CONTINUE W/ VSMHSTSW OFF
         CLI   DEVCLASS,X'20'           DOES IT POINT TO A DASD DEVICE?
         BNE   NOVSMHST                 NO - CONTINUE W/ VSMHSTSW OFF
         SPACE
         LOAD  EP=VSAMLST8
         ST    R0,EPVCL33               ENTRY PT OF VSAM HIST MOD (3.3)
         SPACE
         SR    R1,R1
         ST    R1,FUNC33                FUNCTION CODE 0 - INIT CALL
         LA    R1,PARM9433              ADDR OF PARM LIST
         LR    R15,R0                   ADDR OF VSAMLST8
         CALL  (15)
         SPACE
         LTR   R15,R15                  HOW WAS IT?
         BZ    SETHSTSW                 OK - ALL INIT DONE
         DELETE EP=VSAMLST8             OR ELSE GET RID OF IT
         B     NOVSMHST                 AND CONTINUE
         SPACE
SETHSTSW EQU   *
         MVI   VSMHSTSW,X'FF'           READY FOR SOME HISTORY
         MVI   FUNC33+3,X'04'           LATER ON
NOVSMHST EQU   *
         L     R1,MYSAVE+4              RESTORE PARM LIST POINTER
         L     R1,24(,R1)               AND
         MVI   NOP0+1,X'00'             COME HERE ONLY ONCE
         B     VCL30                    TAKE IT FROM THE TOP AGAIN
         SPACE
VSAMHIST DC    CL8'VSAMHIST'            DD NAME
DEVINFO  DC    2F'0'
DEVCLASS EQU   DEVINFO+2
         EJECT
*        *-----------------------*
*        *   L A S T   R I D E   *
*        *-----------------------*
         SPACE
EOSORTIN EQU   *
         DELETE EP=VSAMLST6
         SPACE
         DELETE EP=VSAMLST7
         SPACE
         CLI   VSMHSTSW,X'FF'           IS HISTORY OPTION IN EFFECT?
         BNE   NO9433D                  NO - BYPASS THIS CLEAN UP
         MVI   FUNC33+3,X'08'           FUNCTION CODE 8 - FINAL CALL
         LA    R1,PARM9433              ADDR OF PARM LIST
         L     R15,EPVCL33              ADDR OF VSAMLST8
         CALL  (15)
         SPACE
         DELETE EP=VSAMLST8
         SPACE
NO9433D  EQU   *
         CLOSE RPTFIL2
         SPACE
         LA    R15,8                    TELL SORT WE ARE ALL DONE
         SPACE 2
*        *-------------*
*        *   E X I T   *
*        *-------------*
         SPACE
GOHOME   EQU   *
         L     R13,MYSAVE+4
         RETURN (14,12),RC=(15)
         EJECT
*        *-------------------------------------*
*        *  PRINT ROUTINE FOR THE REPORT FILE  *
*        *-------------------------------------*
         SPACE
PUTRPT   EQU   *
         LH    R1,LINECNT               CURRENT NUMBER OF LINES ON PAGE
         CH    R1,LINEMAX               IS IT OVER THE LIMIT?
         BL    SAMEPAGE                 NO - IT'S STILL THE SAME PAGE
         SPACE 2
         AP    PAGECNT,=P'1'            YES - TIME FOR A NEW PAGE
         MVC   PAGE1,PAT3
         ED    PAGE1,PAGECNT            SET NEW PAGE NUMBER
         PUT   RPTFIL2,TITLE1           PRINT TITLE 1
         SPACE
         CLI   RPTFLAG,X'00'            IS THIS REPORT 1?
         BNE   RPT2HEAD                 NO - MUST BE REPORT 2
         SPACE
RPT1HEAD EQU   *
         LA    R2,HEADING1
         LA    R3,HEADING2
         B     PRNTHEAD
         SPACE
RPT2HEAD EQU   *
         LA    R2,HEADING3
         LA    R3,HEADING4
         EJECT
*        *---------------------------------------------*
*        *  PRINT ROUTINE FOR THE REPORT FILE - CONT.  *
*        *---------------------------------------------*
         SPACE
PRNTHEAD EQU   *
         PUT   RPTFIL2,(2)              PRINT HEADING
         SPACE
         PUT   RPTFIL2,(3)              PRINT UNDERSCORE
         SPACE
         MVI   CNTL,C'0'                SKIP 2 LINES FOR THE NEXT LINE
         LA    R1,5                     WE HAVE PRINTED 5 LINES ALREADY
         SPACE 2
SAMEPAGE EQU   *
         LA    R1,1(,R1)
         STH   R1,LINECNT               BUMP LINE COUNT
         PUT   RPTFIL2,OAREA
         SPACE
         MVI   CNTL,X'40'
         MVC   LINE,CNTL
         BR    R11
         SPACE 2
         LTORG
         EJECT
*        *-------------------------------------------*
*        *   F O R   D A T E   C O N V E R S I O N   *
*        *-------------------------------------------*
         SPACE
WORK     DC    D'0'
WORD     DC    F'0'
         ORG   WORD+1
YEAR     DS    XL1
DAYS     DS    H
YYDDD    DC    C'YYDDD'
         SPACE
DTCVNTAB DS    0H
         DC    C'01',H'0',H'0'
         DC    C'02',H'31',H'31'
         DC    C'03',H'60',H'59'
         DC    C'04',H'91',H'90'
         DC    C'05',H'121',H'120'
         DC    C'06',H'152',H'151'
         DC    C'07',H'182',H'181'
         DC    C'08',H'213',H'212'
         DC    C'09',H'244',H'243'
         DC    C'10',H'274',H'273'
         DC    C'11',H'305',H'304'
         DC    C'12',H'335',H'334'
TOTDAYS  DC    C'13',H'366',H'365'
         SPACE 2
*        *-------------------------------------*
*        *   C O N S T A N T   N U M B E R S   *
*        *-------------------------------------*
         SPACE
HEXNUM   DC    CL16'0123456789ABCDEF'
HEXTBL   EQU   HEXNUM-240
         SPACE
ZERO     DC    F'0'
FOXES    DC    F'-1'
HUNDRED  DC    H'100'
         EJECT
*        *------------------------------------------------------------*
*        *  THIS TABLE IS INDEXED BY DASD CLASS OF UCBTYP FIELD OF    *
*        *  UCB AS DESCRIBED IN OS/VS1 SYSTEM DATA AREAS (SY28-0605). *
*        *  EACH ENTRY IS 8 BYTES LONG WITH THE FOLLOWING,            *
*        *    BYTE 0   :  DASD CLASS IN HEXADECIMAL FORMAT            *
*        *    BYTE 1-7 :  DASD TYPE IN CHARACTER FORMAT -             *
*        *                A BLANK FIRST BYTE IMPLIES ENTRY NOT USED   *
*        *------------------------------------------------------------*
         SPACE
TYPEDASD DS    0F
         DC    X'00',CL7' '             * * *   NO SUCH DEVICE   * * *
         DC    X'01',CL7'2311'          2311 DISK STORAGE DRIVE
         DC    X'02',CL7'2301'          2301 PARALLEL DRUM
         DC    X'03',CL7'2303'          2303 SERIAL DRUM
         DC    X'04',CL7'2302'          2302 DISK STORAGE
         DC    X'05',CL7'2321'          2321 DATA CELL DRIVE
         DC    X'06',CL7'2305-1'        2305 FIXED HEAD STORAGE MODEL 1
         DC    X'07',CL7'2305-2'        2305 FIXED HEAD STORAGE MODEL 2
         DC    X'08',CL7'2314'          2314/2319 DIRECT ACCESS STORAGE
         DC    X'09',CL7'3330'          3330/3333 MODEL 1 DISK STORAGE
         DC    X'0A',CL7'3340'          3340 DISK STORAGE
         DC    X'0B',CL7'3350'          3350 DIRECT ACCESS STORAGE
         DC    X'0C',CL7' '             * * *   NO SUCH DEVICE   * * *
         DC    X'0D',CL7'3330-1'        3330/3333 MODEL 11 DISK STORAGE
TYPEDEND EQU   *
         EJECT
*        *-----------------------------------------------*
*        *  USED FOR MULTIPLE RECORDS WITH THE SAME KEY  *
*        *-----------------------------------------------*
         SPACE
SAVEDREC DS    0CL92
SAVVOLNO DS    CL6                      VOLUME SERIAL NUMBER
SAVKEYSQ DS    0CL6                     SORT KEY - LTH OF 6
SAVRCKEY DS    CL4                      RECORD KEY - GENERATED SORT KEY
SAVRCSEQ DS    CL2                      RECORD SEQ - SEQ NO IN 'NAMEDS'
SAVENTNM DS    CL44                     ENTRY NAME
SAVENTYP DS    CL1                      ENTRY TYPE
SAVCREDT DS    CL3                      CREATION DATE
SAVEXPDT DS    CL3                      EXPIRATION DATE
SAVCRAVL DS    CL6                      CRA VOLUME SERIAL NUMBER
SAVSCALC DS    CL3                      SECONDARY SPACE ALLOCATION
SAVSCTYP DS    CL1                      SPACE ALLOCATION TYPE
SAVDSORG DS    CL1                      DATA SET ORGANIZATION (AMDATTR)
SAVCISIZ DS    CL4                      CONTROL INTERVAL SIZE
SAVMAXRC DS    CL4                      MAXIMUM RECORD SIZE
SAVAVGRC DS    CL4                      AVERAGE RECORD SIZE
SAVTRKAL DS    H                        TRK'S ALLOC'D FOR DATA SET
SAVTRKUS DS    H                        TRK'S USED FOR DATA SET
SAVPCTUS DS    CL1                      PERCENT OF USAGE
SAVNOEXT DS    CL1                      NO. OF EXTENTS FOR DATA SET
         EJECT
*        *-----------------------------------------------*
*        *   F O R   R E P O R T   F O R M A T T I N G   *
*        *-----------------------------------------------*
         SPACE
LINECNT  DC    H'0'
LINEMAX  DC    H'60'
PAGECNT  DC    PL2'0'
PAT3     DC    XL4'40202120'
PAT4     DC    XL5'4020202120'
PAT5     DC    XL6'402020202120'
OAREA    DS    0CL133
CNTL     DC    X'40'
LINE     DC    CL132' '
         SPACE
VSMHSTSW DC    X'00'                    X'FF' IF VSAM HISTORY OPTION
RPTFLAG  DC    X'00'                    X'00' - RPT 1, X'FF' - RPT 2
RECPEND  DC    X'00'                    X'FF' IF A RECORD IS PENDING
         SPACE
TITLES   DS    0F
         DC    A(TITLE1)
         DC    A(TITLE2)
         DC    A(TITLE3)
         DC    A(TITLE4)
ATITLE5  DC    A(TITLE5)
         DC    A(HEADING1)
         DC    A(HEADING2)
TITLENO  EQU   (*-TITLES)/4
         SPACE 2
*        *-------------------------------------------------------*
*        *   P A R M   L I S T S   &   E N T R Y   P O I N T S   *
*        *-------------------------------------------------------*
         SPACE
PARM9431 DS    0F
RECD31   DC    A(0)
LINE31   DC    A(LINE)
         SPACE
PARM9432 DS    0F
RECD32   DC    A(0)
LINE32   DC    A(LINE)
         SPACE
PARM9433 DS    0F
FUNC33   DC    A(0)
RECD33   DC    A(0)
         SPACE
EPVCL31  DC    A(0)
EPVCL32  DC    A(0)
EPVCL33  DC    A(0)
         EJECT
RPTFIL2  DCB   DDNAME=RPTFIL2,DSORG=PS,MACRF=(PM)
         EJECT
*        *---------------------------------------------------*
*        *   T I T L E   F O R   R E P O R T S   1   &   2   *
*        *---------------------------------------------------*
         SPACE
TITLE1   DS    0CL133
         DC    C'1',CL14'             ',CL16'              '
         DC    CL19'PGM=VSAMLIST'
SUBTIT1  DC    CL25' '
         DC    CL5' FOR'
VOLSER1  DC    CL6'123456'
         DC    CL12' ',CL5'DATE'
DATE1    DC    CL8'MM/DD/YY'
         DC    CL7'  TIME'
TIME1    DC    CL5'HH:MM'
         DC    CL6'  PAGE'
PAGE1    DC    CL4' 000'
         SPACE
SUBTIT11 DC    CL25'     VSAM VOLUME CONTENTS'
SUBTIT21 DC    CL25'VSAM TRACK ALLOCATION MAP'
         EJECT
*        *-------------------------------------------*
*        *   T I T L E S   F O R   R E P O R T   1   *
*        *-------------------------------------------*
         SPACE
TITLE2   DS    0CL133
         DC    C'0',CL28' DEVICE DESCRIPTION:  TYPE='
DEVTYPE2 DC    CL8'DEVTYPE'
         DC    CL6'  USE='
VOLUSE2  DC    CL7'UCBSTAB'
         DC    CL10'  CYL/VOL='
CYLVOL2  DC    CL5' NNNN'
         DC    CL10'  TRK/CYL='
TRKCYL2  DC    CL4' NNN'
         DC    CL11'  BYTE/TRK='
BYTTRK2  DC    CL6' NNNNN'
         DC    CL37' '
         SPACE
TITLE3   DS    0CL133
         DC    C'0',CL35' VOLUME INFORMATION:  VSAM DSN/VOL='
DSNVOL3  DC    CL6' NNNNN'
         DC    CL11'  DSPC/VOL='
DSPCVOL3 DC    CL4' NNN'
         DC    CL16'  MAX-EXT/ALLOC='
MXTALLC3 DC    CL4' NNN'
         DC    CL9'  CATLG='
CATNAME3 DC    CL44'VSAM.CATALOG.NAME'
         DC    CL3' '
         SPACE
TITLE4   DS    0CL133
         DC    C'0',CL24' AVAILABLE SPACE:  VSAM='
VSFSNUM4 DC    CL6' NNNNN'
         DC    CL18' EXTENTS, TOTAL OF'
VSFSTRK4 DC    CL6' NNNNN'
         DC    CL23' TRACKS. **************'
         DC    CL38'****************  LARGEST FREE EXTENT='
VSFSLGE4 DC    CL6' NNNNN'
         DC    CL11' TRACKS'
         SPACE
TITLE5   DS    0CL133
         DC    C'0',CL21' ',CL3'OS='
OSFSNUM5 DC    CL6' NNNNN'
         DC    CL18' EXTENTS, TOTAL OF'
OSFSTRK5 DC    CL6' NNNNN'
         DC    CL18' TRACKS, INCLUDING'
OSFSCYL5 DC    CL5' NNNN'
         DC    CL38' FULL CYLINDERS.  LARGEST FREE EXTENT='
OSFSLGE5 DC    CL6' NNNNN'
         DC    CL11' TRACKS'
         SPACE
TITLE5A  DS    0CL133
         DC    C'0',CL21' ',CL111'OS SPACE INFORMATION NOT AVAILABLE'
         EJECT
*        *-----------------------------------------------*
*        *   H E A D I N G S   F O R   R E P O R T   1   *
*        *-----------------------------------------------*
         SPACE
HEADING1 DS    0CL133
         DC    C'-'
         DC    C' V S A M   E N T R Y   N A M E                '
         DC    C'TYPE  CRE DATE EXP DATE ORG   CISZ  AVG R MAX R '
         DC    C'TRKAL TRKUS PCT EXT SECAL T RCV-VL F  '
         SPACE
HEADING2 DS    0CL133
         DC    C'+'
         DC    1C' ',44C'_',1C' ',5C'_',1C' ',8C'_',1C' ',8C'_'
         DC    1C' ',5C'_',1C' ',5C'_',1C' ',5C'_',1C' ',5C'_'
         DC    1C' ',5C'_',1C' ',5C'_',1C' ',3C'_',1C' ',3C'_'
         DC    1C' ',5C'_',1C' ',1C'_',1C' ',6C'_',1C' ',1C'_',2C' '
         SPACE 2
*        *-----------------------------------------------*
*        *   H E A D I N G S   F O R   R E P O R T   2   *
*        *-----------------------------------------------*
         SPACE
HEADING3 DS    0CL133
         DC    C'-'
         DC    C'          F I R S T   T K  L A S T   T R K  '
         DC    C'TRKAL  TRKAV  EXT  E N T R Y   N A M E   O R   '
         DC    C'U S A G E         EXCEPTIONS IF ANY      '
         SPACE
HEADING4 DS    0CL133
         DC    C'+'
         DC    10C' ',15C'_',2C' ',15C'_',2C' ',5C'_',2C' ',5C'_'
         DC    2C' ',3C'_',2C' ',44C'_',2C' ',17C'_',6C' '
         SPACE
ENDING1  DC    C'***** END OF TRACK MAP *****'
         SPACE
         DS    0H
         EJECT
INDTAIL  DSECT
INDVOLNO DS    CL6                      VOLUME SERIAL NUMBER
INDRPTNO DS    0CL1                     REPORT NO. B'0... ....' DETAILS
INDRCKEY DS    CL4                      RECORD KEY - GENERATED SORT KEY
INDRCSEQ DS    CL2                      RECORD SEQ - SEQ NO IN 'NAMEDS'
INDENTNM DS    CL44                     ENTRY NAME
INDENTYP DS    CL1                      ENTRY TYPE
INDCREDT DS    CL3                      CREATION DATE
INDEXPDT DS    CL3                      EXPIRATION DATE
INDCRAVL DS    CL6                      CRA VOLUME SERIAL NUMBER
INDSCALC DS    CL3                      SECONDARY SPACE ALLOCATION
INDSCTYP DS    CL1                      SPACE ALLOCATION TYPE
INDDSORG DS    CL1                      DATA SET ORGANIZATION (AMDATTR)
INDCISIZ DS    CL4                      CONTROL INTERVAL SIZE
INDMAXRC DS    CL4                      MAXIMUM RECORD SIZE
INDAVGRC DS    CL4                      AVERAGE RECORD SIZE
INDTRKAL DS    H                        TRK'S ALLOC'D FOR DATA SET
INDTRKUS DS    H                        TRK'S USED FOR DATA SET
INDPCTUS DS    CL1                      PERCENT OF USAGE
INDNOEXT DS    CL1                      NO. OF EXTENTS FOR DATA SET
         EJECT
INVLCHR  DSECT
INVVOLNO DS    CL6                      VOLUME SERIAL NUMBER
INVRPTNO DS    0CL1                     REPORT NO. B'X... ....'  X=0,1
INVRCKEY DS    CL4                      RECORD KEY - ZERO FOR THIS REC
INVOLUSE DS    CL2                      VOLUME USE (UCBSTAB)
INVDVTYP DS    CL4                      DEVICE TYPE
INVCYLVL DS    H                        NO. OF CYLINDERS PER VOLUME
INVTRKCL DS    H                        NO. OF TRACKS PER CYLINDER
INVBYTTK DS    H                        NO. OF BYTES PER TRACK
INVNODST DS    H                        NUMBER OF DATA SETS ON VOLUME
INVNODSP DS    H                        NUMBER OF DATA SPACE ON VOLUME
INVSYSXT DS    H                        SYSTEM ALLOWED EXTENTS
INVCATNM DS    CL44                     VSAM CATALOG NAME
INVVSEXT DS    H                        NUMBER OF VSAM FREE EXTENTS
INVVSTRK DS    H                        NUMBER OF VSAM FREE TRACKS
INVVSLGE DS    H                        TRACKS OF VSAM LARGEST FREE EXT
INVOSEXT DS    H                        NUMBER OF OS FREE EXTENTS
INVOSTRK DS    H                        NUMBER OF OS FREE TRACKS
INVOSCYL DS    H                        NUMBER OF OS FREE CYLINDERS
INVOSLGE DS    H                        TRACKS OF OS LARGEST FREE EXT
         EJECT
INEXTNT  DSECT
INEVOLNO DS    CL6                      VOLUME SERIAL NUMBER
INERPTNO DS    0CL1                     REPORT NO. B'1... ....' EXTENTS
INELOTCH DS    0CL4                     LOW CCHH OF EXTENT (SORT KEY)
INELOCC  DS    H
INELOHH  DS    H
INERCKEY DS    H                        H'0' FOR DSP EXT, H'1' OTHERS
INEXTNM  DS    CL44                     DATA SET NAME (ENTRY NAME)
INEHITCH DS    0CL4                     HIGH CCHH OF EXTENT
INEHICC  DS    H
INEHIHH  DS    H
INEXTLTH DS    H                        LENGTH OF EXTENT IN TRACKS
INELOTRK DS    H                        LOW TRACK NUMBER
INEHITRK DS    H                        HIGH TRACK NUMBER
INEXTNO  DS    H                        EXTENT NUMBER
         END
