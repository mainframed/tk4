//* THIS VERSION OF IEFUJV HAS CONSIDERABLE INSTALLATION-DEPENDENT
//* CODE.  HOWEVER, IT MAY BE EASILY MODIFIED OR ROUTINES LIFTED
//* FOR USE IN YOUR OWN JCL-VALIDATION STRATEGY. ALL ROUTINES ARE
//* REFRESHABLE.
//*       AMONG ROUTINES THAT MIGHT BE LIFTED ARE ---
//*  - GENERALIZED PARSING FOR JCL OPERANDS, KEYWORDS, AND VALUES,
//*    RETURNING YOU LOCATION, LENGTH CODE, DELIMITER VALUE.
//*    IT HAS ERROR EXITS, MAINTAINS POSITION WITHIN JCL CARD,
//*    USES ONLY REGS 14,15,0,1,2, AND USES TRT EXCLUSIVELY.
//*  - OPERATOR-INTERVENTION ROUTINE THAT CAN BE ENABLED OR DISABLED
//*    VIA MAINTAINING JCL-VALIDATION TABLE, ALLOWING OPR TO ACCEPT
//*    NON-STANDARD JCL IF DESIRED.
//*  - ACCESS TO JES INTERNAL JOB CONTROL TABLE, USED IN THIS CASE TO
//*    DETERMINE WHERE JCL WAS SUBMITTED FROM.
//*  - ENFORCEMENT OF NAMING STANDARDS FOR NEW OR MOD DATASETS,
//*    INCLUDING SYMBOLIC PARAMETER SUBSTITUTION THAT COULD BE USED
//*    FOR ANY SYMBOLIC PARAMETERS, INCLUDING QUOTED-STRING VALUES.
//*    CAUTION, IF MORE THAN 1 CONSECUTIVE BLANK APPEARS IN QUOTED
//*    STRING, STRING IS NOT PARSED CORRECTLY.
//*  - TABLE-DRIVE CONCEPT PERMITTING YOU TO MAKE CHANGES IN SOME JCL
//*    STANDARDS BY REASSEMBLING A TABLE IN LINKLIB INSTEAD OF THIS
//*    EXIT. (SEE NEXT FILE FOR SAMPLE TABLE.)
//*
//* NOTE - A SAMPLE JCL VALIDATION TABLE IS INCLUDE AS NEXT FILE.
//*
//SYSIN DD *
         TITLE 'IEFUJV - DOCUMENTATION'
* INTER-CALL COMMUNICATION -
*     USERID FIELD OF COMMON EXIT COMMUNICATION AREA IS USED TO HOLD
* INFORMATION NEEDED BETWEEN CALLS TO THIS EXIT, AS FOLLOWS.
* BYTE 0 (20 PAST R8) HOLDS RETURN CODE OF 4 IF JOB IS TO BE REJECTED
* AFTER ALL CHECKING IS COMPLETE, OTHERWISE BINARY ZERO.
* BYTE 1 (21 PAST R8) HOLDS BIT SWITCHES DEALING WITH JOB STATUS.
*      BIT 0 ON MEANS FIRST JOB CARD HAS BEEN PROCESSED AND WORKING
*            STORAGE HAS BEEN ACQUIRED (SEE BYTES 5-7).
*      BIT 1 NOT USED, INITIALIZED TO 1 BY JOB MGT.
*      BIT 2 ON MEANS JOB NAME INDICATES THIS IS A NON-PRODUCTION
*            JOB AND MUST NOT BE ALLOWED TO CATALOG OR CREATE A
*            DATASET WITH A PRODUCTION NAME.
*      BIT 3 ON MEANS OPERATOR ALREADY ASKED WHETHER TO CANCEL THIS
*            JOB ON PREVIOUS ERROR AND SHOULD NOT BE MESSAGED AGAIN.
*      BIT 4 ON MEANS DATASET NAME HAS ALREADY BEEN LOCATED AND CHECKED
*      BIT 5 ON MEANS DISP HAS ALREADY BEEN LOCATED AND CHECKED.
*      BIT 6 NOT USED.
*      BIT 7 NOT USED.
* BYTE 2 (22 PAST R8) HOLDS BIT SWITCHES USED IN PROC-CARD PARAMETER
* SUBSTITUTION. ONLY BIT 0 IS USED, AND MEANS PROC NAME HAS ALREADY
* BEEN FOUND, ADDED TO LIST, AND PROCESSED. INHIBITS FURTHER PROCESSING
* OF THAT SPECIFIC PROC NAME. *** REMEMBER THAT JOB MGT INITIALIZES
* BIT ONE TO 1 (X 40).
* BYTES 3 AND 4 NOT USED.
* BYTES 5-7 HOLD ADDRESS OF GETMAINED STORAGE TO BE USED BY ALL
* CALLS, PROVIDED BYTE 1, BIT 0 IS ON.
         TITLE 'IEFUJV - SYMBOLIC EQUATES && REGISTER USAGE'
IEFUJV   CSECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
RA       EQU   10
RB       EQU   11
RC       EQU   12
RD       EQU   13
RE       EQU   14
RF       EQU   15
NOTOREND EQU   B'1010'  TRT NOT FOUND OR FOUND AT END
FOUNDMID EQU   B'0100'  TRT FOUND BEFORE END
FOUND    EQU   B'0110'  TRTFOUND BEFORE OR AT END
FOUNDEND EQU   B'0010'  TRT FOUND ONLY AT END
NOTFOUND EQU   B'1000'  TRT NOT FOUND IN STRING
ERMSGLTH EQU   8  LENGTH OF ERROR MESSAGE IN CARD
STORPOOL EQU   230    SUBPOOL FOR GETMAIN                           *M*
REPLYLTH EQU   1  LENGTH OF REPLY TO OPERATOR-INTERVENTION REQUEST
         TITLE 'IEFUJV - INITIALIZATION '
*
*  NOTE - FULL CHAINING COMPLETED ONLY WHEN NEEDED BECAUSE VS/1
*  VERSION GOT CTL ON JOBS THAT DIDNT HAVE TO BE SCREENED
*
         USING *,RF
RENTLINK EQU   *
         B     LOADBASE
         CNOP  0,8
         DC    C'IEFUJV--02/04/80' INDICATE VERSION TO LOCATE READER
*                                  INPUT DEVICE AND ENFORCE RJE EXEC
*                                  STANDARDS.
LOADBASE EQU   *
         STM   RE,RC,12(RD)
         LR    RB,RF        SETUP 11 AS BASE REG ALIGNED WITH RENTLINK
         USING RENTLINK,RB
         DROP  RF
         LM    R8,RA,0(R1)  ACQUIRE PARAMS FROM SMF
         TM    21(R8),B'10000000'  IS THIS AFTER FIRST JOB STATEMENT?
         BNO   CKCRDTYP       NO, DONT PICK UP PTR
         ICM   R7,7,32(R8)  YES, GET PTR TO VALIDATION TABLE
         TITLE 'IEFUJV - DETERMINE TYPE OF STATEMENT BEING PASSED'
CKCRDTYP EQU   *
         SR    R2,R2    CHECK CARD TYPE ---
         IC    R2,0(,RA)  FIRST GET THE TYPE CODE FROM SMF
         SLA   R2,2   THEN CONVERT IT TO AN INDEXING
         B     CARDTABL(R2)  VALUE AND GO VIA BRANCH TABLE
CARDTABL EQU   *
         B     NULLCHEK      STATEMENT TYPE 0
         B     JOBCHEK       STATEMENT TYPE 1
         B     EXECCHEK      STATEMENT TYPE 2
         B     BADTYPE       STATEMENT TYPE 3
         B     DDCHEK        STATEMENT TYPE 4
         B     BADTYPE       STATEMENT TYPE 5
         B     BADTYPE       STATEMENT TYPE 6
         B     BADTYPE       STATEMENT TYPE 7
         B     PROCCHEK      STATEMENT TYPE 8
         B     BADTYPE       STATEMENT TYPE 9
         B     BADTYPE       STATEMENT TYPE 10
         B     BADTYPE       STATEMENT TYPE 11
         B     BADTYPE       STATEMENT TYPE 12
         B     BADTYPE       STATEMENT TYPE 13
         B     BADTYPE       STATEMENT TYPE 14
         B     BADTYPE       STATEMENT TYPE 15
         B     CNVTCHEK      STATEMENT TYPE 16
         DC    15XL4'47000000'  FILLER FOR TYPES 17-31
         B     INTRCHEK  TYPE 32 INTERPRETER ENTRY
* TEMPORARY ROUTINE FOR UNCODED CARD TYPES
TEMPRTNE EQU   *
         B     RETURN0
BADTYPE  EQU   TEMPRTNE
         TITLE 'IEFUJV - RETURN LINKAGE'
*
*  NOTE- TRUE RETURN CODE PASSED TO SMF ONLY ON TYPE 16 SO
*  THAT ALL STATEMENTS CAN BE SCREENED FOR ERRORS
*
RETURN0  EQU   *
NULLCHEK EQU   RETURN0
INTRCHEK EQU   RETURN0  COME HERE ONLY IF ALL JCL IS OK
         SR    RF,RF SET OK RETCODE - NOTE - REG 13 MUST BE POINTING TO
*  CALLER'S SAVE AREA TO USE EITHER OF THESE RETURN POINTS
RETURN   EQU   *
         L     RE,12(,RD)  SET RETURN ADDRESS
         LM    R0,RC,20(RD)  RESTSORE CALLER'S REGS
         BR    RE
         TITLE 'IEFUJV - JOB FAIL PROCESSING ROUTINES'
         USING WSTORAGE,RD
OPARAMS  WTOR  '*HOB001A INVALID JCL JOB XXXXXXXX - REPLY C TO CANCEL, *
               OR U TO ACCEPT',                                        *
               ,1,,ROUTCDE=(1),DESC=2,MF=L
OPARAMS2 EQU   *    MARK END OF WTOR EXPANSION TO CALC MOVE LENGTH
*
*  DETERMINE WHETHER OPERATOR HAS ALREADY BEEN ASKED ABOUT THIS JOB
*  BYPASS IF YES, SET INHIBIT INDICATOR IF NO
*
ASKOPER  DS    0H  ALIGN LABEL TO NEXT INSTRUCTION OP CODE
         USING VALIDTBL,R7
         CLC   =C'INTERVEN',OPERMODE  IS OPR INTERVENTION ALLOWED?
         DROP  R7
         BNE   REJECT
         TM    21(R8),X'10'  HAS OPR ALREADY BEEN ASKED ABOUT THIS JOB?
         BOR   RC      YES, RETURN TO ERROR DETECTION ROUTINE
         OI    21(R8),X'10'  NO, SET WTOR INHIBIT BIT IN USERID FIELD
ASKAGAIN EQU   *
         MVC   WOPARAMS(OPARAMS2-OPARAMS),OPARAMS COPY INTO WSTORAGE
         MVC   WJOBNAME(8),0(R8)  AND INSERT JOB NAME INTO WTOR PARMS
         LA    R1,WOPARAMS  SETUP FOR WTOR
         XC    WOPRECB,WOPRECB
         LA    R6,WOPREPLY
         LA    R7,WOPRECB  *** BE CAREFUL TO RESTORE WITH TABLE PTR ***
         WTOR  ,(R6),,(R7),MF=(E,WOPARAMS) ASK OPR TO CANCEL OR ACCEPT
         LR    R2,R1  SAVE MSG IDENT NBR FOR LATER DELETION
         WAIT  ECB=WOPRECB,LONG=YES
         EJECT
         ICM   R7,7,32(R8)  PICK UP ADDRESS OF VALIDATION TABLE ***
         DOM   MSG=(2)  DELETE MSG FROM  CONSOLE
         CLI   WOPREPLY,C'U'  ACCEPT?
         BER   RC   YES, RETURN TO ERROR DETECTION ROUTINE
         CLI   WOPREPLY,C'C'   CANCEL?
         BNE   ASKAGAIN   NO, ASK UNTIL OPER GIVES RECOGNIZABLE DEPLY
REJECT   EQU   *
         MVI   20(R8),X'04'  SET REJECT CODE TO INHIB JOB ENQ
         BR    RC  AND RETURN TO ERROR DETECTION ROUTINE
         TITLE 'IEFUJV - SETUP TO PROCESS JOB CARD - GET WORKING STORAG*
               E, RDR DEVICE NAME, AND VALIDATION TABLE'
JOBCHEK  EQU   *
         TM    21(R8),B'10000000'  WAS 1ST JOB CARD PROCESSED OK?
         BZ    GETSTORG  NOT YET, HAVE TO SET UP FOR THIS JOB
JOBCHEK2 EQU    *
         LR    R2,RD  CONTINUATION JOB CARD, SO HAVE TO CK FOR PERFORM
         SR    RD,RD  RE-CHAIN TO SMF AND RECOVER WORKING STORAGE
         ICM   RD,7,25(R8) FROM PTR IN USERID FIELD
         ST    R2,WBACKPTR
         ST    RD,8(,R2)
*
*  FOR CONTINUATION JOB CARD HAVE TO GET PAST INITIAL //
*
         LA    R1,2(,R9)  POINT TO START OF CONTINUATION CARD
         LA    RE,70      GIVE PARSE A LTH CODE
         BAL   RC,PARSEJCL  GET PAST THE FIRST WORD
         B     JOBNMERR
         B     JOBNMERR
         B     JOBNMERR
         B     CKPRFORM  BRANCH TO LOOP FOR PERFORM= SEARCH
GETSTORG EQU   *
         GETMAIN RU,SP=STORPOOL,LV=8192,BNDRY=PAGE
         OI    21(R8),B'10000000' SET INDICATOR THAT STORAGE HAS BEEN
*  ACQUIRED AND FIRST JOB CARD PROCESSED
CHAINSAV EQU   *
         LR    R2,RD  SAVE BACK PTR TO CALLER'S SAVEAREA
         LR    RD,R1   ESTAB ADDRESSABILITY TO WORKING STORAGE
         XC    WSTORAGE(WBINARY-WSTORAGE),WSTORAGE CLEAR 1ST PART OF WS
         ST    R2,WBACKPTR CHAIN SAVE AREAS WITH SMF
         ST    RD,8(,R2)
         STCM  RD,7,25(R8)  AND SAVE WSTORAGE ADDR FOR FUTURE CALLS
         LA    R2,WBINARY  INITIALIZE DSN ANALYSIS AREA TO BLANKS
         LH    R3,=H'7936'
         LA    R5,0
         ICM   R5,8,=X'40'
         MVCL  R2,R4
         EJECT
***************
* FIND DEVICE NAME OF INPUT READER IN ORDER TO CHECK WHETHER IT IS
* RESTRICTED AS TO WHAT JOB CAN EXECUTE (SEE EXEC CRD PROCESSING).
* INSTRS MARKED WITH ASTERISK ARE ONLY FOR LATER DEBUGGING IN CASE
* SOMEONE CHANGES RDR NAMES OR APPLIES PTF THAT IMPACTS POINTERS.
* 02/04/80
***************
*
         CLC   =X'11111111',4(RC) * VERIFY ACTUALLY POINTING TO
         BNE   CWAIDERR *           CONVERTER WORK AREA
         L     RC,236(,RC)    PICK UP WANELPTR IN CONVERTER WORK AREA
         L     RC,20(,RC)     PICK UP NELJMR IN CONVERTER ENTRANCE LIST
         LA    RC,0(,RC)      B SURE NO HIGH-ORDER BITS
         LR    R2,RC *        VERIFY ATUALLY POINTING TO JES JCT
         SH    R2,=H'420' *   POINT TO JCTID
         CLC   =C'JCT ',0(R2) *
         BNE   JCTIDERR *
         AH    R2,=H'68' *    VERIFY THIS JCT BELONGS TO THE RIGHT JOB
         CLC   0(8,R2),2(R9) * JCTJNAME EQUAL NAME IN JOB CARD IMAGE?
         BNE   JCTJNERR *     NO, PUT ERROR TRACE IN JOB CARD SEQ FLD
         SH    RC,=H'316'     CALCULATE ADDRESS OF JES JCTINDEV
         MVC   WINDEV,0(RC)   MOVE JCTINDEV TO OWN WORKING STORAGE
         MVC   72(8,R9),WINDEV * AND PUT IT IN JOB CARD SEQ NR FLD
         EJECT
LOADTABL EQU   *
         LOAD  EP=IEFUJV00
         ST    R0,WTABLE   AND STORE ITS ADDR IN WORKING STORAGE
         LR    R7,R0  SET PTR TO VALIDITY TABLE  (MAY HAVE TO GIVE UP)
         STCM  R7,7,32(R8)  STORE ADDRESS IN USER COMM FLD FOR DSN ANAL
         TITLE 'IEFUJV - VALIDATE JOB NAME ON JOB CARD'
         MVI   20(R8),X'00'  INITIALIZE REJECT CODE TO OK VALUE
         USING VALIDTBL,R7
*
*  CHECK FOR  TSO LOGON JOBNAME  10/05/79
*
         TM    29(R8),B'00000001'  FOREGROUND-JOB INDICATOR ON?
         BO    CARDEND  YES, DONT CHECK JOB CARD ANY FURTHER
*
*  PARSE JOB NAME
*
         LA    R1,2(,R9)  POINT TO JOB NAME
         LA    RE,68  SET JOB CARD LENGTH MINUS POSITIONS FOR //
         BAL   RC,PARSEJCL
         B     JOBNMERR
         B     JOBNMERR
         B     JOBNMERR
         CLI   3(RF),C'0'  4TH CHAR NON-NUMERIC?
         BL    CHKTSO  YES - CHECK PROD JOB NAME FORMAT
*
*  CHECK GENERAL FORMAT OF DEVELOPMENT JOB NAME
*
DEVJOB   EQU   *
         CLI   4(RF),C'0'  5TH CHAR ALPHA?
         BL    JOBNMERR  YES, INVALID
         CLI   5(RF),C'Z'   6TH CHAR NUMERIC?
         BH    JOBNMERR  YES, ENVALID
         CLI   6(RF),C'Z'   7TH ALSO
         BH    JOBNMERR
*
* CHECK SYSTEM ID OF DEVELOPMENT JOB NAME
*
         LM    R3,R5,TABLIMIT  GET TABLE SEARCH BOUNDARIES
DEVLOOP  EQU   *
         CLC   0(3,RF),0(R3)  FIRST 3 CHARS IN TABLE?
         BE    PASSDEV  YES, JOB NAME IS VALID
         BXLE  R3,R4,DEVLOOP
         B     JOBNMERR  NO, JOB NAME FAILS
*
*  CHECK FOR OLD TSO LOGON FORMAT
*
CHKTSO   EQU   *
         CH    R0,=H'1'  IF TSO LOGON FORMAT, ACCEPT WITHOUT
         BE    CARDEND  FURTHER CHECKING
*
*  CHECK PLANT CODE OF PRODUCTION JOB NAME
*
         LM    R3,R5,PLTLIMIT SETUP LOOP CONTROL
PLTLOOP  EQU   *
         CLC   0(2,R3),6(RF)  PLANT CODE IN TABLE ?
         BE    CKPRSYST  YES, GO CHECK SYSTEM ID
         BXLE  R3,R4,PLTLOOP  NO, TRY NEXT ENTRY
         B     JOBNMERR
*
*  CHECK SYSTEM ID OF PRODUCTION JOB NAME
*
CKPRSYST EQU   *
         LM    R3,R5,TABLIMIT  GET TABLE SEARCH BOUNDARIES
PRODLOOP EQU   *
         CLC   0(4,RF),0(R3)  1ST 4 CHARS IN TABLE?
         BE    PASSPROD  YES, JOB NAME PASSES
         BL    JOBNMERR  TABLE IS IN ASCENDING SEQUENCE
         BXLE  R3,R4,PRODLOOP
         B     JOBNMERR
         TITLE 'IEFUJV - VALIDATE ACCOUNT CODE ON JOB CARD'
*
*  DETERMINE WHICH GROUP OF ACCOUNT CODES APPLIES TO THIS JOB
*
PASSPROD EQU   *
         LM    R3,R5,PRODLIMS  SET UP LOOP CONTROL
         B    CKACCT
PASSDEV  EQU   *
         OI    21(R8),B'00100000' INDICATE A NON-PROD JOB FOR DSN ANAL
         LM    R3,R5,INITLIMS  SETUP TO FIND PGMMER INITS IN VALID TBLE
INITLOOP EQU   *
         CLC   0(2,R3),5(RF)  DOES TABLE ENTRY MATCH INITS FROM JOB CRD
         BE    SETGROUP YES, GO SETUP ACCOUNT CODE GROUP FOR PGMMER
         BXLE  R3,R4,INITLOOP  NO, TRY NEXT TABLE ENTRY
INITERR  EQU   *
         BAL   RC,ASKOPER  PGMMER INIT NOT IN VALIDATION TABLE
         MVC   72(ERMSGLTH,R9),INERMSSG  SETUP ERROR MSSG IN CRD IMAGE
         B     CARDEND
SETGROUP EQU   *
         CLC   =C'TEC',0(RF)  IS IT A TECH SERVICES JOB ?
         BNE   NOTTEC
         CLI   2(R3),C'1'  IS INITIAL IN TECH SERVICES GROUP ?
         BNE   JOBNMERR  NO, JOB CANT START WITH TEC
TECGRP   EQU   *
         LM     R3,R5,TECLIMS  SETUP LOOP CONTROL
         B     CKACCT
NOTTEC   EQU   *
         CLI   2(R3),C'3'  IS ACCT GRP CODE FOR APPL DEVELOPMENT ?
         BE    NOTSYS  YES, GO SETUP ITS GROUP LIMITS
         CLI   2(R3),C'9'  IS IT FOR MUSLTILPLE GROUP PERSON ?
         BE    MULTGRPS  SETUP TO PROCESS BOTH APPL AND SYST SUPPT
         CLI   2(R3),C'1'  IS GRP CODE FOR TECH SERVICES?
        BE    TECGRP
         LM    R3,R5,SYSLIMS  SETUP LOOP CONTROL
         B     CKACCT
MULTGRPS EQU   *
         LM    R3,R5,MULTLIMS SETUP TO SEARCH TWO TABLE SEGMENTS
         B     CKACCT
NOTSYS   EQU   *
         LM    R3,R5,DEVLIMS  ALL OTHER DEVELOPMENT JOB GROUPS
         EJECT
*
*
*  CHECK ACCOUNT CODE IN TABLE AGAINST FIRST ACCT PARAM IN CARD
*
*
CKACCT   EQU   *
         BAL   RC,PARSEAGN  RETRIEVE NEXT WORD
         B     ACCTERR
         B     ACCTERR
         B     ACCTERR
         BAL   RC,PARSEAGN  RETRIEVE NEXT WORD
         B     ACCTERR  NO WORD
         B     ACCTERR  ACCOUNT NBR IN LAST TWO POSITIONS OF CARD
         B     ACCTERR  NO DELIMITER
         CLI   0(RF),C'('  DOES ACCT FIELD START WITH PAREN ?
         BNE   NOPAREN
         LA    RF,1(,RF) YES, POINT PAST IT TO REASON CODE
NOPAREN  EQU   *
         CLC   0(2,R3),0(RF)  CHECK JOB CARD ACCT FIELD VS TABLE VALUE
         BE    PASSACCT  IF MATCH, ACCT CODE IS OK
         BXLE  R3,R4,NOPAREN
         TITLE 'IEFUJV - JOB && EXEC CARD ERROR  ROUTINES'
*
*  ACCOUNT CODE ERROR ROUTINE
*
ACCTERR  EQU   *
         BAL   RC,ASKOPER  GO CHECK FOR OPERATOR ACCEPTANCE
         MVC   72(ERMSGLTH,R9),ACERMSSG
         B     CARDEND
**********************
* NEXT THREE ERROR ROUTINES ARE DIAGNOSTIC ONLY, AND DO NOT CAUSE JOB
* FAILURE OR OPERATOR MESSAGES
**********************
CWAIDERR EQU   *
         MVC   72(8,R9),=C'CWAIDERR'
         B     LOADTABL
JCTIDERR EQU   *
         MVC   72(8,R9),=C'JCTIDERR'
         B     LOADTABL
JCTJNERR EQU   *
         MVC   72(8,R9),=C'JCTJNERR'
         B     LOADTABL
***********************
*
*  JOB NAME ERROR ROUTINE
*
JOBNMERR EQU   *
         BAL   RC,ASKOPER
         MVC   72(ERMSGLTH,R9),JBERMSSG
         B     CARDEND
*
*  JOB & EXEC CARD PERFORM= ERROR ROUTINE
*
PERFERR  EQU   *
         BAL   RC,ASKOPER
         MVC   72(ERMSGLTH,R9),PFERMSSG
         B     CARDEND
*
*  EXEC CARD DPRTY= ERROR ROUTINE
*
DPRTYERR EQU   *
         BAL   RC,ASKOPER
         MVC   72(ERMSGLTH,R9),DPERMSSG
         B     CARDEND
*
*  JOB CARD CLASS= ERROR ROUTINE  04/17/79
*
CLASSERR EQU   *
         BAL   RC,ASKOPER
         MVC   72(ERMSGLTH,R9),CLERMSSG
         B     CARDEND
         TITLE 'IEFUJV - SCAN FOR PERFORM, DPRTY, CLASS'
PASSACCT EQU   *
LOOKAGN  EQU   *
         BAL   RC,PARSEAGN
         B     CARDEND        NO MORE WORDS
         B     CARDEND        DELIM IS IN 71
         B     CARDEND        LAST WORD GOES THRU 71
         CLC   =C'CLASS=',0(RF)  IS IT JOB CLASS KEYWORD?
         BE    CKJOBCLS       YES, GO CHECK FOR TSO-PRIVILEGED COMPILE
CKPRFORM EQU   *
         CLC   =C'PERFORM=',0(RF)
         BE    PERFERR
         CLC   =C'DPRTY=',0(RF)
         BE    DPRTYERR
         B     LOOKAGN
CKJOBCLS EQU   *                    04/17/79
         TM    6(RF),B'10000000'  NORMAL CLASS CHARACTER?
         BNO   TSOJOB         NO, BIT TURNED OFF BY TSO/SPF SUBMIT
         CLI   6(RF),C'Q'  YES, JOB CANT USE SPECIAL CLASS
         BE    CLASSERR
         B     LOOKAGN        ALL OK, KEEP CHECKING REST OF CARD
TSOJOB   EQU   *    04/17/79
         OI    6(RF),B'10000000'  TURN ON BIT TO AVOID LATER JCL ERR
         B     LOOKAGN        AND KEEP CHECKING IMAGE
         TITLE 'IEFUJV - DD CARD - LOCATE DISP && DSN'
*
*  ESTAB LINKAGE TO CALLER, VALIDATION TABLE, AND WORKING STORAGE
*
DDCHEK   EQU   *
         LR    R2,RD SAVE SMF S/A PTR
         SR    RD,RD  RECOVER WORKING STORAGE PTR
         ICM   RD,7,25(R8)  FROM USERID FIELD
         ST    R2,WBACKPTR  CHAIN SAVE AREAS
         ST    RD,8(,R2)
*
*  DETERMINE IF THIS IS A NEW DD
         LA    R1,0(,R9)  POINT TO CARD IMAGE
         LA    RE,70  GIVE PARSE A LENGTH CODE
         BAL   RC,PARSEJCL  AND START TO PARSE CARD
         B     DDCRDERR  NO WORD
         B     DDCRDERR  DELIMITER IN 71
         B     DDCRDERR   WORD CONTINUES PAST 71
         BAL   RC,PARSEAGN  GO FIND FIRST WORD AFTER //
         B     DDCRDERR  NO WORD
         B     DDCRDERR  DELIMITER IN 71
         B     DDCRDERR   WORD CONTINUES PAST 71
         CH    R0,=H'1'  IS WORD 2 CHARS LONG?
         BNE   CKDSPDSN  NO, IT CANT BE DD
         CLC   =C'DD',0(RF)  IS IT DD ?
         BNE   CKDSPDSN  NO, MUST BE AN OPERAND
         CLC   =C'X/',0(R9)  IS THIS AN OVERRIDDEN DD ?
         BE    FIRSTOPR   NOT A NEW ONE
         CLC   =C'+/',0(R9)  SAME TEST FOR INSTREAM PROCS
         BE    FIRSTOPR   NOT A NEW ONE
*
*  IF NEW DD, INITIALIZE STATUS INDICATORS AND CHECK
*  FOR JOBCAT CARD
*
         NI    21(R8),B'11110011'  RESET DD STATUS INDICATORS
         CLC   =C'JOBCAT',2(R9)  IS IT A JOBCAT CARD?
         BNE   FIRSTOPR  NO, LEAVE IT ALONE
         MVC   0(80,R9),JOBLIB  YES, CONVERT IT TO A JOBLIB CARD
         B     CARDEND  AND GO PROCESS NEXT STATEMENT
JOBLIB   DC    CL8'//JOBLIB'  CARD IMAGE MUST HAVE SIGNIFICANT CHARS AS
         DC    CL32' '   FAR OUT TO RIGHT AS POSSIBLE
         DC    CL40'DD DISP=SHR,DSN=HOB1.DUMMYLIB'
         EJECT
*
*  LOCATE FIRST OPERAND ON CARD
*
FIRSTOPR EQU   *
         BAL   RC,PARSEAGN
         B     CARDEND
         B     CARDEND
         B     CARDEND
         B     CKDSPDSN   BRANCH AROUND CHECK FOR COMMENTS
*
*  FIND A DISP OR DSN OPERAND
*
GETOPRND EQU   *
         BAL   RC,PARSEAGN  YES, TRY AGIIN
         B     CARDEND  NO MORE OPRRANDS
         B     CARDEND  DELIM IN 71, MUST BE A VALUE
         B     CARDEND  NO DELIM, SAME CONDITION
         LR    R6,RF  CHECK FOR  BEGINNING OF COMMENTS
         BCTR  R6,0 IF CHARACTER TO LEFT OF SUSPECTED OPERAND IS
         CLI   0(R6),C' '  A BLANK  THIS IS BEGINNING OF COMMENTS
         BE    CARDEND  AND REST OF CARD SHOULD BE IGNORED
CKDSPDSN EQU   *
         TM    21(R8),B'00001100'  DD BYPASS ?
         BO    CARDEND  YES, IGNORE REST OF CARD
         CH    R2,=H'126'  IS DELIMITER AN EQUAL SIGN ?
         BNE   GETOPRND  IF NOT, IT CANT BE AN OPERAND
         CLC   =C'DISP',0(RF)   IF YES, IT MUST BE DISP OR DSN
         BE    FINDDISP
         CLC   =C'DSN',0(RF)
         BNE   GETOPRND  GO TRY AGAIN
         EJECT
*
*  PROCESS DSN OPERAND
*
         TM    21(R8),B'00001000'  HAS DSN BEEN LOCATED PREVIOUSLY ?
         BO    GETOPRND  YES, KEEP SEARCHING FOR DISP
         OI    21(R8),B'00001000'  NO, SET DSN STATUS BIT IN USERID
FINDDSN  EQU   *
         BAL   RC,PARSEAGN  PARSE FOR DSN VALUE
         B     DDCRDERR  MUST BE ON SAME CARD
         B     FOUNDDSN  CAN END IN 71
         B     FOUNDDSN  CHARS CAN FILL LAST POSITION
*
*  STORE DSN FROM CARD IN HOLDING AREA FOR LATER ANALYSIS AND
*  POSSIBLE SYMBOLIC PARAMETER SUBSTITUTION
*
FOUNDDSN EQU   *
         MVC   WDSNAREA,BLANKS   CLEAR DSNAME STORAGE
         LR    R2,R0   AREA AND MOVE FULL DSN  TO IT
         EX    R2,HOLDDSN
         ST    R2,WDSNLTH  STORE LTH FOR USE BY DSN ANALYSIS
         TM    21(R8),B'00000100'  DISP ALREADY PROCESSED?
         BNO   GETOPRND  NO, GO FIND IT
         TITLE 'IEFUJV - DD CARD - ANALYZE DATASET NAME'
ANALDSN  EQU   *
         CLC   =C'&&&&',WDSNAREA  TEMPORARY DSN ?
         BE    DSNOK  DONT WORRY ABOUT IT
         CLC   =C'NULLFILE',WDSNAREA  DUMMY?
         BE    DSNOK  DONT WORRY ABOUT IT
         MVC   WDSNAME,BLANKS  CLEAR FIELD FOR FINISHED DSN
         LA    RE,WDSNAME  POINT TO IT
         LA    RF,WDSNAREA   POINT TO RAW DSN
         L     R1,WDSNLTH  INDICATE ITS LENGTH
         BAL   RC,SUBSTUTE  SUBSITTUTE SYMBOLIC PARAMETERS
         CLC   =C'TEC',0(R8)   TECH SERVICES JOB ?
*
*  CHECK FOR SPECIAL TECH SERVICES AND SYS1/HOB1 COMBINATION
*
         BNE   CKPRODSN  GO CHECK FOR POSSIBLE PROD DSN PROBLEM
         CLC   =C'SYS1.',WDSNAME  CAN CREATE SYS1 DATASETS OR
         BE    DSNOK  HOB1 WITHOUT RESTRAINTS
         CLC   =C'HOB1.',WDSNAME
         BE    DSNOK
         B     CKLEVEL1  BYPASS CHECK FOR PROD DATASET PROBLEMS
*
*  CHECK FOR OK TO CREATE PRODUCTION DATASET NAME
*  02/04/80
*
CKPRODSN EQU   *
         TM    21(R8),B'00100000' IS IT NON-PROD JOB NAME?
         BNO   CKLEVEL1  NO, CONTINUE NORMAL CHECKS
         CLI   WDSNAME,C'N' DOES NAME START WITH NON-PROD INDICATOR?
         BNE   DSNERR  NO, CANT USE PRODUCTION NAME
*
*  EXAMINE HIGHEST-LEVEL QUALIFIER
*
CKLEVEL1 EQU   *
         CLC   =C'SYSH.',WDSNAME  RESERVED FOR LINKLIST LIBS ONLY
         BE    DSNERR
         CLI   WDSNAME+4,C'.'  1ST LVL QUALIFIER MUST BE 4 CHARS LONG
         BNE   DSNERR
CK1STLVL EQU   *
         LM    RF,R1,LV1LIMIT  CHECK 1ST LEVEL OF DSN
LV1LOOP  EQU   *
         CLC   0(4,RF),WDSNAME  COMPARE  QUALIFIER AGAINST TABLE
         BE    PASSLVL1  IN TALBE, OK
         BXLE  RF,R0,LV1LOOP  NO, TRY NEXT TABLE ENTRY
         B     DSNERR  NOT IN TABLE AT ALL
*
*  EXAMINE SECOND-LEVEL QUALIFIER
*
PASSLVL1 EQU   *
         CLI   WDSNAME+11,C'.'  2ND LVL QUALIFIER MUST BE 6 CHARS
         BNE   DSNERR
         LM    RF,R1,TABLIMIT  NOW CHECK FOR SYSTEM NAMES
LV2LOOP1 EQU   *
         CLC   0(4,RF),WDSNAME+5  1ST 4 MUST BE VALID SYSTEM ID
         BE    DSNOK
         BXLE  RF,R0,LV2LOOP1  TRY NEXT TALBE I ENTRY
         EJECT
*
*  DATASET NAME ERROR PROCESSING
*
DSNERR   EQU   *
         BAL   RC,ASKOPER  CHECK WITH OPERATOR TO CANCEL
         MVC   72(ERMSGLTH,R9),DSERMSSG
         OI    21(R8),B'00001100'  SET DD BYPASS
         B     CARDEND
*
*  DATASET NAME OK
*
DSNOK    EQU   *
         OI    21(R8),B'00001100'  SET DD BYPASS
*
*  COMMON TERMINATION FOR DD AND PROC STATEMENTS
*
CARDEND  EQU   *
DDCRDERR EQU   CARDEND  ADDRESS OF RTNE FOR DD WITH UNKNOWN FORMAT
         L     RD,WBACKPTR  POINT TO SMF SAVE AREA
         B     RETURN0
HOLDDSN  MVC   WDSNAREA(0),0(RF)  EXED UNDER LABEL 'FOUNDDSN'
         TITLE 'IEFUJV - DD CARD - ANALYZE DISP'
*
*  LOCATE VALUE SUPPLIED FOR DISP
*
FINDDISP EQU   *
         TM    21(R8),B'00000100'  DISP ALREADY PROCESSED ?
         BO    GETOPRND  YES, GO LOOK FOR DSN
         OI    21(R8),B'00000100'  NO, SET DISP STATUS BIT
         BAL   RC,PARSEAGN  AND GO GET DISP VALUE
         B     DDCRDERR  VALUE MUST BE ON SAME CARD
         B     FOUNDISP  CAN END THE CARD
         B     FOUNDISP  CHARS CAN FILL LAST POSITION
*
*  ADJUST FOR SYMBOLIC PARAMETERS AND PARENTHESES
*
FOUNDISP EQU   *
         MVC   WDISP,BLANKS  CLEAR FINISHED DISP FIELD
         LA    RE,WDISP  POINT TO IT - RF ALREADY PTS TO RAW DISP
         LR    R1,R0  INDICATE LENGTH OF RAW DISP
         BAL   RC,SUBSTUTE  GO SU STITUTE FOR ANY SYMBOLIC PARAMS
         LA    R2,WDISP  POINT TO FINISHED DISP VALUE
         CLI   0(R2),C'('  DOES DISP HAVE PARENS ?
         BE    LEFPAREN  SPECIAL HANDLING FI IN PARENS
*
*  DETERMINE IF DISP IS NEW OR MOD
*  IF NOT INHIBIT FURTHER PROCESSING FOR THSI DD
*
CKNEW    EQU   *
         CLC   =C'NEW',0(R2)  IS DISPOSITION NEW OR MOD?
         BE    NEWMOD YES, WE WANT IT
CKMOD    EQU   *
         CLC   =C'MOD',0(R2)
         BE    NEWMOD   YES, HAVE TO PROCESS
SETBYPAS EQU   *
         OI    21(R8),B'00001100'  NO, DONT PROCESS FURTHER
         B     CARDEND
LEFPAREN EQU *
         CLI   WDISP+1,C' '  WAS FIRST PARAM A OMITTED ?
         BE    NEWMOD  YES, TREAT AS NEW
         LA    R2,1(,R2)  INCREM PTR PAST PAREN
        B     CKNEW  NO, CHECK FOR  'NEW '
NEWMOD   EQU   *
         TM    21(R8),B'00001000'  HAS DSN BEEN LOCATED ?
         BO    ANALDSN  YES, GO ANALYZE IT
         B     GETOPRND  NO, GO FIND IT
         TITLE 'IEFUJV - SUBSTITUTE VALUES FOR SYMBOLIC PARAMETERS'
SUBSTUTE EQU   *
         ST    RC,WREGC  WILL BE USING LINK REGISTER
         LA    R0,1  BXLE INCREMENT
         AR    R1,RF   BXLE LIMIT
TESTCHAR EQU   *
         CLI   0(RF),C'&&' SYMBOLIC PARAM
         BE    MOVPARAM  YES, SPECIAL HANDLING
         MVC   0(1,RE),0(RF)  NO, MOVE CHAR TO FINISHED DSN
         LA    RE,1(,RE)  INCREMENT PTR TO FINISHED DSN
TSTAGAIN EQU   *
         BXLE  RF,R0,TESTCHAR  TRY NEXT CHARACTER
         L     RC,WREGC  RESTORE LINK REGISTER AND RETURN
         BR    RC  FINISHED REBUILDING DSN
MOVPARAM EQU   *
         LA    R3,WEXECPTR CHK OVERRIDES FROM EXEC CRD FIRST
         LA    R2,TESTDFLT  SET RETURN PTR IN CASE NO VALUE
         BAL    RC,FINDPROC
TESTOVER EQU   *
         C    R3,WLISTEND  AT PHYSICAL END OF LIST ?
         BER   R2 YES, WE CANT FIND NAME OF THIS SYMBOL
         L     R3,0(,R3)  PT TO PARAM ENTRY
         CLI   8(R3),C' '  ARE WE AT NEXT PROC NAME ?
         BNER  R2  YES, WE CANT FIND VALUE FOR THIS SYMBOL
         L     R4,16(,R3)  NO, GET LTH OF PARAM SYMBOL NAME
         EX    R4,COMPNAME  AND COMPARE AGAINST VALUE
         BNE   TESTOVER  NO MATCH GET NEXT SYMBOL IN LIST
         LA    R5,2(R4,RF) POINT PAST SYMBOL NAME IN RAW DSN
         CLI   0(R5),C'A'  IS IT A SPECIAL CHAR ?
         BNL   TESTOVER  NO, NAME IN DSN IS LONGER THAN NAME IN LIST
         CLI   0(R5),C'#'  NATIONAL CHARACTERS  DONT COUNT AS DELIMS
         BE    TESTOVER
         CLI   0(R5),C'@'
         BE    TESTOVER
         CLI   0(R5),C'$'
         BE    TESTOVER
         L     R6,4(,R3)  GET LTH CODE FOR PARAM VALUE
         LTR   R6,R6  WAS IT NULLIFIED ?
         BM    UPRAWPTR YES, DONT ADD TO FINISHED DSN
         EX    R6,PARAMOVE  AND MOVE VALUE TO FINISHED DSN AREA
         LA    RE,1(R6,RE) INCR FINISHED-DSN PTR BY 1 MORE THAN LTH CDE
UPRAWPTR EQU   *
         LA    RF,1(R4,RF)   INCR RAW-DSN PTR
         CLI   0(R5),C'.'  WAS PERIOD USED AS DELIM ?
         BNE   TSTAGAIN NO,RESUME TESTING EACH CHAR
         LA    RF,1(,RF)  YES, PASS IT BY
         B     TSTAGAIN  AND RESUME TESTING EACH CHAR
COMPNAME CLC   9(0,R3),1(RF)  EXED TO CHECK SYMBOL NAME AGAINST LIST
PARAMOVE MVC   0(0,RE),20(R3)  EXED TO MOVE VALUE FROM LIST TO DSN
         EJECT
TESTDFLT EQU   *
         LA    R3,WPROCPTR CHK DEFAULTS FROM PROC CRD LAST
         BAL   RC,FINDPROC
         LTR   R3,R3  WAS THERE A DEFAULT STATEMENT ?
         BZ    NODFLT  NO, CANT SUBSTITUTE IT
         LA    R2,NODFLT  IN CASE CANT FIND SYMBOL NAME
         B     TESTOVER
NODFLT   EQU   *
         L     R2,WDSNLTH  CHECK FOR TEMP DSN WITH SINGLE AMPERSAND
          EX    R2,CHEKTEMP COMPARE PARAMETER WITH RAWDSN FOR ITS LSTH
         BE    DSNOK  YES, PASS IT
PARAMERR EQU   *
         BAL   RC,ASKOPER  CHK FOR OPERATOR ACCEPTANC/REJECTION
         MVC   72(ERMSGLTH,R9),PMERMSSG  PUT ERROR MSSG IN CARD IMAGE
         OI    21(R8),B'00001100' SET INHIBIT FOR FURTHER PROCESSING
         B     CARDEND
CHEKTEMP CLC   0(0,RF),WDSNAREA  EXED WITH LENTH OF RAW DSNAME
            TITLE 'IEFUJV - ROUTINE TO PARSE JCL STATEMENT'
* PARSEJCL -
* ROUTINE PARSES JCL STRING TO LOCATE WORDS DELIMITED BY SPACE,=,
* OR COMMA. ROUTINE IS REFRESHABLE & MAINTAINS ITS OWN INTEGRITY FOR
* REGISTERS 14,15,0,1,&2.
*
* ENTRY -
* BAL RC,PARSEJCL
* ON FIRST ENTRY, REG 14 MUST HAVE  (MAX LTH OF STRING - 1) AS POSITIVE
* BINARY NUMBER.  REG 1 MUST POINT TO START OF STRING TO BE PARSED.
* STRING MAY START WITH SPACES AND MAY END WITHOUT A DELIMITER. IN THIS
* CASE THE NEXT CALL WILL RETURN WITH END-OF-STRING INDICATION.
*
* EXIT -
* ROUTINE RETURNS TO NSI IF NO WORD IS FOUND BEFORE END OF STRING -
* TO NSI + 4 IF WORD ENDS WITH LAST POSITION OF STRING -
* TO NSI + 8 IF WORD RUNS PAST END OF STRING (NORMALLY AN ERROR
* CONDITION) -
* TO NSI + 12 IF WORD ENDS BEFORE END OF STRING (MOST LIKELY CONDITION)
* ON RETURN, REG 15 POINTS TO START OF WORD, REG 0 HAS A LENGTH CODE
* DECREMENTED FOR USE IN VARIAGLE INSTRUCTIONS, AND REG 2 HAS DELIMITER
* IN LOW ORDER 8 BITS.  REGS 14 AND 1 ARE USED TO MAINTAIN POSITION
* AND RESIDUAL LENGTH OF STRING. REGS 14-2 ARE SAVED AND RESTORED BY
* THIS ROUTINE FOR USE IN MULTIPLE CALLS.
*
PARSEJCL EQU   *
         LA    R1,0(,R1)  CLEAN OUT ANY EXTRANEOUS BITS
         LR    RF,R1 SAVE START PTR
         XC    WPARSREG,WPARSREG  CLEAR REGISTER STORAGE AREA
         SR    R2,R2  CLEAN REGISTER THAT WILL HOLD DELIMITER
         B     PARSETUP  AND START TO PROCESS
PARSEAGN EQU   *
         LM    RE,R2,WPARSREG  RESTORE FROM PREVIOUS CALL
         LR    RF,R1  RESET START PTR
PARSETUP EQU   *
         LTR   RE,RE  SEE IF ANY POSITIONS LEFT
         BM    0(,RC)
         CLI   0(RF),X'40'  FIRST CHAR A SPACE?
         BNE   SCNWORDS  NO, GO DIRECT TO SCAN FIRST WORD
SCNSPACE EQU   *
         EX    RE,FINDWORD  YES, FIND START OF WORD
         BC    NOTOREND,NOMORE  SPACES FILL OUT REST OF STRING
         LR    R0,R1  COMPUTE NUMBER OF SPACES
         SR    R0,RF
         SR    RE,R0   ADJUST RESIDUAL STRING LENGTH
         BM    0(,RC)  NEGATIVE MEANS NO MORE POSITIONS
         LR    RF,R1   ADJUST START PTR
SCNWORDS EQU   *
         EX    RE,FINDELIM  FIND A DELIMITER
         BC    FOUNDMID,NORMAL   FOUND IT BERORE END
         BC    FOUNDEND,SETUPEND  FOUND EXACTLY AT END
         LA    R1,1(RE,RF)
         LR    R0,RE  NO DELIM FOUND, COUDL BE OK VALUE SO
         SR    RE,RE SET LTH CODE AND ZERO RESIDUAL
         STM   RE,R2,WPARSREG
         B     8(,RC)  ERROR - RETURN TO 3RD INSTR AFTER CALL
SETUPEND EQU   *
         LA    RC,4(,RC)  ADJUST RETURN TO 2ND INSTR AFTER CALL
         B     CALCLNTH  AND PROCESS AS NORMAL
NORMAL   EQU   *
         LA    RC,12(,RC)  ADJUST RETURN TO 4TH INSTR AFTER CALL
CALCLNTH EQU   *
         LA    R1,1(,R1)  POINT AP  PAST DELIMITER
         LR    R0,R1   COMPUTE DISTANCE INTO STRING
         SR    R0,RF
         SR    RE,R0  ADJUST RESIDUAL STRING LENGTH
         SH    R0,=H'2'  COMPUTE LENGTH CODE FOR CALLER
         STM   RE,R2,WPARSREG  SAVE FOR NEXT CALL
         BR    RC  RETURN
NOMORE   EQU   *
         LH    RE,=H'-1'  INDICATE CARD EXHAUSTED IN CASE CALLED AGAIN
         STM   RE,R2,WPARSREG  SAVE REGS IN CASE ANOTHER CALL
         B     0(,RC)  RETUNR TO NSI
         TITLE 'IEFUJV - CONSTANTS USED TO PARSE JCL'
FINDWORD EQU   *
         TRT   0(0,RF),NONBLANK  EXED TO ELIMINATE SPACES
FINDELIM EQU   *
         TRT   0(0,RF),DELIMTRS  EXED TO FIND A DELIMITER
DELIMTRS EQU   *
         DC    64X'00'  TABLE USED TO FIND A DELIMITER
         DC    X'40'  SPACE
         DC    42X'00'
         DC    X'6B'   COMMA
         DC    18X'00'
         DC    X'7E'   EQUAL SIGN
         DC    129X'00'
NONBLANK EQU   *
         DC    64X'FF'   TABLE USED TO ELIMINATE SPACES
         DC    X'00'
         DC    191X'FF'
         TITLE 'IEFUJV - PROCESS PROC OR EXEC STATEMENT'
*
* CHAIN SAVE AREAS + ESTAB ADDRESSABILITY TO WORKING STORAGE
*
PROCCHEK EQU   *
EXECCHEK EQU   *
         LR    R2,RD SAVE SMF S/A PTR
         SR    RD,RD  RECOVER WORKING STORAGE PTR
         ICM   RD,7,25(R8)  FROM USERID FIELD
         ST    R2,WBACKPTR  CHAIN SAVE AREAS
         ST    RD,8(,R2)
*
* ANALYZE FIRST WORD ON CARD + STORE PROC NAME IF PRESENT
*
PROCWRD1 EQU   *
         LA    R1,0(,R9)  POINT TO PROC CARD
         LA    RE,70  PARSE 71 COLS
         BAL   RC,PARSEJCL
         B     PROCDERR  NOTHING ELSE ON CARD
         B     PROCDERR  DELIM IN 71
         B     PROCDERR  DELIM IS PAST 71
         CH    R0,=H'1'  WAS THERE A PROC NAME ?
         BE    PROCWRD2  NO, GO CHECK MISSING NAME
         CH    R0,=H'10' PROC NAME CAN HAVE 8 CHARS MAX + //'S
         BNL   PROCDERR  CANT PROCESS JOBSTREAM
         MVC   W1STWORD,BLANKS CLEAR FIELD FOR POSSIBLE PROC NAME
         LR    R2,R0  REDUCE LTH CODE BY 2 FOR THE // CHARACTERS
         SH    R2,=H'2'
         LA    RF,2(,RF) INCR PTR PAST THE // CHARS
         EX    R2,STORPROC  AND STORE THE NAME
         EJECT
*
* ANALYZE 2ND WORD, DETERMINE WHETHER THI IS PROC OR EXECUTE CARD
* IF PROC, DETERMINE WHETHER THIS PROC IS ALREADY ON PROC LIST
*
PROCWRD2 EQU   *
         BAL   RC,PARSEAGN  FIND THE WORD PROC, OR THE FIRST PARAM
         B     PROCDERR  NO WORD ON CARD
         B     PROCDERR  DELIM IN 71
         B     PROCDERR  DELIM PAST 71
         CLC   =C'PROC ',0(RF)  IS THIS THE FIRST PROC STATEMENT ?
         BNE   CKFOREX  MAY BE AN EXEC OR CONTINUATION CARD
         CLI   2(R9),C' '  WAS THERE A PROC NAME ?
         BE    NOPROCNM   NO, ERROR CONDITION
         MVC   WPROCNAM,W1STWORD YES, UPDATE CURRENT-PROC-NAME FIELD
         NI    22(R8),B'01111111'  TURN OFF PROC INHIBIT INDICATOR
         LA    R3,WPROCPTR POINT TO LIST FOR PROC STATEMENTS
         BAL   RC,FINDPROC  GO FIND NAME ON LIST
         LTR    R3,R3  IS IT THERE ALREADY ?
         BZ    ADTOPROC  NO, GO ADD IT
         OI    22(R8),B'10000000' YES, TURN ON INHIBIT IND FOR CONT
         B     CARDEND  CARDS AND DONT PROCESS THIS PROC AGAIN
NOPROCNM EQU   *
PROCDERR EQU   *
         BAL   RC,ASKOPER
         MVC   72(ERMSGLTH,R9),PRERMSSG
         B     CARDEND
         TITLE 'IEFUJV - STORE NEW PROC NAMES AND PARAMETERS'
*
* ADD NEW PROC NAME TO PROC LIST
*
ADTOPROC EQU   *
         LA    R6,WPROCPTR HEADER FOR NAMES FROM PROC STATEMENTS
         BAL   RC,ADTOLIST  AND ADD THIS PROC'S NAME
*
* GET A PARAMETER NAME FROM CARD
*
GETPARAM EQU   *
         BAL   RC,PARSEAGN  FIND A PARAM
         B     CARDEND  NO MORE WORDS
         B     CKFORPRM  DELIM IS IN 71, MAY BE NULL VALUE
         B     CARDEND
*
* CHECK WHETHER PARAMETER OR VALUE
* IF PARAM, STORE NAME ON LIST AND GET DEFAULT OR OVERRIDE VALUE
*  IF PERFORM= OR DPRTY= OCCURS INDICATE ERROR AND TERMINATE CARD
*
CKFORPRM EQU   *
         CH    R2,=H'126'  IS DELIMITER AN EQUAL SIGN ?
         BNE   GETPARAM  NO, TRY AGAIN
         CLC   =C'PERFORM=',0(RF)  NOT ALLOWED ON EXEC OR PROC STATEMT
         BE    PERFERR
         CLC   =C'DPRTY=',0(RF)  NOT ALLOWED ON EXEC OR PROC STATEMT
         BE    DPRTYERR
         CH    R0,=H'6'  IS PARAM NAME LONGER THAN 6 CHARS ?
         BH    GETPARAM  YES, THEN IT ISNT A SYMBOLIC ONE
         CLI   4(RF),C'.'  IS IT AND EXECUTE CARD PARAMETER ?
         BE    GETPARAM YES, DON'T ADD TO LIST
         LR    R2,R0 STORE NAME OF PARAM
         EX    R2,STORNAME
         ST    R2,16(,R3)  STORE LTH FOR USE IN PARAM SUBSTITUTION
         BAL   RC,PARSEAGN
         B     NULLDFLT  NO VALUE MEANS NULL
         B     CKVALUE  DELIM IN 71 IS OK
         B     CKVALUE  VALUE INN 71 IS OK
CKVALUE  EQU   *
         LTR   R4,R0  WAS THE DEFAULT NULL ?
         BM    STORLTH  YES, DONT STORE A NAME
         CLI   0(RF),C''''  IS VALUE A QUOTED STRING ?
         BE    CKSTRING   YES, HAVE TO EXAMINE STRING
*
* STORE DEFAULT OR OVERRIDE VALUE ON LIST
*
STOREVAL EQU   *
         EX    R4,STORDFLT  NO, STORE THE DEFAULT AS IS
*
* STORE LENGHT CODE ON LIST AND LOCATE NEW STORAGE AREA FOR NEXT ENTRY
*
STORLTH  EQU   *
         ST    R4,4(,R3)  STORE LTH CODE FOR PARAM VALUE
         LA    R4,24(R4,R3)  DEVELOP TRIAL LINK PTR
         EJECT
*
* CHAIN NEW STORAGE AREA TO LIST
*
STORPTR2 EQU   *
         N     R4,ROUNDOFF  ALIGN DOWN TO FULLWORD
         ST    R4,0(,R3) UPDATE PHYSICAL-LINK PTR TO POINT TO NXT ENTRY
         LR    R3,R4 TRANSFER ADDRESS OF NXT AVAIL TO CURRENT ENTRY
         ST    R4,WLISTEND  AND RESET NEXT-AVAIL LINK
         B     GETPARAM
NULLDFLT EQU   *
         LH    R4,=H'-1'  SET SAME LTH CODE AS IF COMMA FOLLOWED
         B     STORLTH
         DS    0F  ALIGN CONSTANT FOR LOAD INSTRUCTION
ROUNDOFF DC    X'FFFFFFFC' TO ROUND ADDRESS DOWN TO FULLWORD BOUNDARY
*
* SERVICE ROUTINE TO ADD A PROC NAME TO PROC OR EXECUTE LIST
*
ADTOLIST EQU   *
         CLI   0(R6),X'40'  HAS POINTER BEEN INITIALIZED ?
         BNE   USELIST  YES, OK TO USE
         CLI   WLISTEND,X'40'  HAS THE STORAGE POOL BEEN USED ?
         BNE   INITSTRT YES, JUST HAVE TO INIT THIS LIST
         LA    R5,WLISTART  POINT TO START OF STORAGE POOL
         ST    R5,WLISTEND  INIT NEXT-AVAILABLE POINTER
         ST    R5,0(,R6) INIT START PTR FOR THIS LIST
         XC    4(4,R6),4(R6) INIT PROC-NAME PTR FOR THIS LIST
         B     USELIST
INITSTRT EQU   *
         L     R5,WLISTEND  PICK UP PTR TO NEXT AVAILABLE STORAGE
         ST    R5,0(,R6)   STORE IT IN START PTR FOR THIS LIST
         XC    4(4,R6),4(R6)  ZERO PTR TO LAST PROC NAME ADDED
USELIST  EQU   *
         L     R3,WLISTEND  POINT TO NEXT AVAIL STORAGE
         LR    R2,R0  STORE NAME OF PROC
         MVC   8(8,R3),WPROCNAM TRANSFER PROC NAME FROM HOLDING AREA
         LH    R4,=H'-1' SET VALUE LTH CODE TO INDICATE NO VALUE STORED
         ST    R4,4(,R3)  STORE LENGTH CODE FOR PARAM VALUE
         MVC   16(4,R3),4(R6)  STORE LINK PTR TO LAST PROC ADDED
         ST    R3,4(,R6)    THEN UPDATE LINK PTR FOR THIS ONE
         LA    R4,24(R4,R3)  DEVELOP TRIAL LINK PTR
STORPTR1 EQU   *
         N     R4,ROUNDOFF  ALIGN TO NEXT LOWER FULLWORD BOUNDARY
         ST    R4,0(,R3) UPDATE PHYSICAL-LINK PTR TO POINT TO NXT ENTRY
         LR    R3,R4 TRANSFER ADDRESS OF NXT AVAIL TO CURRENT ENTRY
         ST    R4,WLISTEND  AND STORE IT IN NEXT-AVAIL PTR FIELD
         BR    RC
STORPROC MVC   W1STWORD(0),0(RF)   EXED TO MOVE POTENTIAL PROC NAME
STORNAME MVC   9(0,R3),0(RF)  EXED TO STORE NAME OF PARAMETER
STORDFLT MVC   20(0,R3),0(RF)  EXED TO STORE DEFAULT VALUE
         TITLE 'IEFUJV - PROCESS EXEC STATEMENT'
*
* DETERMINE WHETHER EXECUTE OR CONTINUATION CARD
* IF EXECUTE DETERMINE WHETEHER THIS PROC IS ALREADY ON EXEC LIST
*
CKFOREX  EQU   *
         CLC   =C'EXEC ',0(RF)  IS IT FIRST EXEC CARD ?
         BNE   CONTINUE  NO, MUST BE CONTINUATION CARD
         NI    22(R8),B'01111111'  BE SURE PROC INHIBIT IS OFF
         BAL   RC,PARSEAGN  FIND THE PROC NAME FROM THIRD WORD
         B     CARDEND  NO PARAM OVERRIDES
         B     PROCDERR  DELIM IN 71
         B     PROCDERR  DELIM PAST 71
         CH    R0,=H'7'  PROC NAME CAN'T BE MORE THAN 8 CHARS
         BH    PROCDERR
*
* DETERMINE WHETHER JOB ORIGINIALLY CAME FROM A RESTRICTED READER.
* IF SO, IT CAN ONLY EXECUTE A SINGLE PROC
* 02/04/80
*
         CLC   =C'//',0(R9) IS THIS ORIGINAL JCL EXECUTE CARD?
         BNE   CKPGMEQU       NO, IT CAN EXECUTE WHATEVER IS IN PROC
         LM    R3,R5,RDRLIMS  YES, SETUP TO SCAN VALIDATION TABLE
CKRDRS   EQU   *
         CLC   WINDEV,0(R3) IS READER DEVICE NAME IN RESTRICTED LIST?
         BE    VALIDPRC     YES, GO VALIDATE WHAT IT'S EXECUTING
         BXLE  R3,R4,CKRDRS NO, KEEP SCANNING UNTIL END OF TABLE SEG
CKPGMEQU EQU   *
         CLC   =C'PGM=',0(RF)  IS IT EXECUTING A PROC ?
         BNE   CKPROCNM  YES, GO ON AND PROCESS
         OI    22(R8),B'10000000'  NO, TURN PROC INHIBIT FOR CONTIN
         B     CKPRFORM            CARDS AND GO CHK PROHIBITED PARAMS
VALIDPRC EQU   *
         CLC   8(6,R3),0(RF) IF JOB FROM RESTRICTED READER IS EXECUTING
         BE    CKPGMEQU      VALID PROC, CONTINUE PROCESSSING,
         BAL   RC,ASKOPER                ELSE,
         MVC   72(ERMSGLTH,R9),EXERMSSG  FAIL THE JOB AND
         B     CKPGMEQU                  CONTINUE HUNTING FOR ERRORS
CKPROCNM EQU   *
         MVC   W1STWORD,BLANKS  SINCE ITS A PROC, 1ST WORD WAS JUST
         LR    R2,R0  A STEP NAME & MUST BE REPLACED BY REAL PROC NAME
         EX    R2,STORPROC
         MVC   WPROCNAM,W1STWORD UPDATE WITH TRUE PROC NAME
         LA    R3,WEXECPTR POINT TO KUST FOR EXEC STATEMENTS
         BAL   RC,FINDPROC
         LTR   R3,R3  IS PROC NAME ON LIST ?
         BZ    ADTOEXEC  NO, HAVE TO ADD IT
         MVI   8(R3),X'00'  YES, HAVE TO INVALIDATE IT
*
* ADD NEW PROC NAME TO EXECUTE LIST
*
ADTOEXEC EQU   *
         LA    R6,WEXECPTR  POINT TO LIST FOR EXEC STATEMENTS
         BAL   RC,ADTOLIST  ADD THIS PROC NAME
         B    GETPARAM  AND START PROCESSING PARAMETERS
*
* SET UP TO RESUME PARAM STORAGE FROM CONTINUATION CARD
*
CONTINUE EQU   *
         TM    22(R8),B'10000000'  PROC ALREADY STORED ?
         BO    CKPRFORM   YES, DONT PROCESS BUT GO CK PROHIBITED PARAMS
         L     R3,WLISTEND  PICK UP PTR TO SAME LIST AS LAST CARD
         B     CKFORPRM  AND START PROCESSING THE PARAMETER
         TITLE 'IEFUJV - FIND PROC ALREADY STORED IN TABLE'
*
* SERVICE ROUTINE TO LOCATE PROC NAME ON PROC OR EXEC LIST
*
FINDPROC EQU   *
         CLI   0(R3),X'40'  HAS LIST BEEN INITIALIZED ?
         BNE   CHEKLIST  YES, GO CHECK IT
         SR    R3,R3  NO, INDICATE PROC NAME NOT FOUND
         BR    RC    AND RETURN
CHEKLIST EQU   *
         L     R3,4(,R3)  GET PTR TO FIRST PROC NAME ENTRY
CHEKEND  EQU   *
         LTR   R3,R3  AT END OF CHAIN ?
         BZR   RC  YES, RETURN
         CLC   WPROCNAM,8(R3)  DO NAMES MATCH ?
         BER   RC  YES, EXIT POINTING TO RIGHT ENTRY
          L     R3,16(,R3)  NO, GET LOGICAL LINK PTR
         B     CHEKEND  AND TRY NEXT ONE
         TITLE 'IEFUJV - DETERMINE BOUNDARIES OF QUOTED STRING'
*
* ANALYZE QUOTED-STRING VALUE
* IF DELIMITER APPEARS WITHIN STRING , REST OF STRING MUST BE LOCATED
* AND VALUE MUST BE STRETCHED UNTIL TRUE DELIMITER IS FOUND
*
CKSTRING EQU   *
         SH    R4,=H'2' DECREMENT LTH CODE TO REMOVE TWO APPOSTROPHES
CKAGAIN  EQU   *
         IC    R0,2(R4,RF) DOES VALUE END WITH APPOSTROPHE ?
         CH    R0,=H'125'
         BNE   NXSTRING  NO, DELIMITER WAS PART OF THE STRING
         IC    R0,1(R4,RF)  WAS APPOSTROPHE DOUBLED ?
         CH    R0,=H'125'
         BNE   VALUEOK  NO, IT IS A STANDARD STRING
         IC    R0,0(R4,RF)  WAS IT TRIPLED ?
         CH    R0,=H'125'
         BNE   NXSTRING NO, APPOSTROPHES ARE PART OF THE VALUE
         BCTR  R4,R0 YES, HAVE TO REMOVE AN EXTRA APPOSTROPHE
VALUEOK  EQU   *
         LA    RF,1(,RF)  RESET START PTR TO ROMOVE 1ST APPOSTROPHE
         B     STOREVAL
NXSTRING EQU   *
         LR    R6,RF  SAVE STRING START PTR
         BAL   RC,PARSEAGN  GET NEXT PART OF STRING
         B     PROCDERR  MUST BE FINISHED ON THIS CARD
         B     STRETCH  DELIM IN 71
         B     STRETCH  NO DELIM
STRETCH  EQU   *
         LR    R2,R0  INCREMENT LTH CODE
         LA    R4,2(R2,R4)  TO ACCOUNT FOR FIRST DELIM AND NEXT PART
         LR    RF,R6 OF STRING, THE RESTORE ORININAL START PTR
         B     CKAGAIN
         TITLE 'IEFUJV- CONVERTER ENTRY PROCESSING'
CNVTCHEK EQU   *
         LR    R2,RD  SAVE PTR TO SMF SAVE AREA
         SR    RD,RD  RECOVER PTR TO WORKING STORAGE FROM
         ICM   RD,7,25(R8)  COMMON USERID FIELD
         ST    R2,WBACKPTR    CHAIN SAVE AREAS BACKWARD
         ST    RD,8(,R2)     AND FORWARD
         DELETE EP=IEFUJV00
         L     R2,WBACKPTR   SAVE ADDRESS OF SMF'S SAVE AREA
         LA    R1,0(,RD) FREE PREVIOUSLY-GETMAINED WORKING STORAGE
         FREEMAIN RU,A=(1),SP=STORPOOL,LV=8192
         SR    RF,RF  PICK UP JOB RETURN CODE FROM USERID FIELD
         IC    RF,20(,R8)
         LR    RD,R2  POINT TO SMF'S SAVE AREA
         B     RETURN  NEXT-TO-LAST RETURN TO SMF
         TITLE 'IEFUJV - CONSTANTS'
BLANKS   DC    CL64' '
PMERMSSG DC    CL8'SYMB*ERR'
JBERMSSG DC    CL8' JBN*ERR'
ACERMSSG DC    CL8'ACCT*ERR'
PRERMSSG DC    CL8'PROC*ERR'
DSERMSSG DC    CL8' DSN*ERR'
INERMSSG DC    CL8'INIT*ERR'
PFERMSSG DC    CL8'PERF*ERR'
DPERMSSG DC    CL8'DPRT*ERR'
CLERMSSG DC    CL8'JCLS*ERR'    04/17/79
EXERMSSG DC    CL8'EXEC*ERR'    02/04/80
******** BE SURE ALL ERROR MSSGS HAVE BLANK FOR COLUMN 72 ********
         TITLE 'IEFUJV - LITERALS'
         LTORG
         TITLE 'IEFUJV - DSECTS'
WSTORAGE DSECT MAP OF GETMAINED STORAGE USED FOR ALL WRITES TO MEMORY
WSAVAREA DS    18F  SAVE AREA FOR SMSF EXIT ROUTINE
WBACKPTR EQU   WSAVAREA+4  PTR TO SMF'S SAVE AREA
WTABLE   DS    F   PTR TO VALIDATION TABLE AFTER LOADING IT
WPARSREG DS    5F   FOR SAVING REGS USED BY PARSEJCL BETWEEN PARSES
WOPRECB  DS    F  ECB FOR JOB-FAIL WTOR
WDSNLTH  DS    F  LENGTH CODE FOR RAW DSN
WREGC    DS    F  TO STORE LINKING REG ON NESTED BAL-S
WOPARAMS DS    CL(OPARAMS2-OPARAMS) CAUTION - MUST BE ON FULLWORD BNDRY
WJOBNAME EQU   WOPARAMS+12+25 POSITION OF JOB NAME IN WTOR TEXT
WOPREPLY DS    C  REPLY AREA FOR JOB-FAIL WTOR
WINDEV   DS    CL8 TO STORE DEVICE-NAME OF JOB READER 02/04/80
         ORG   WSTORAGE+256  MOVE UP TO EBCDIC STORAGE
WBINARY  EQU   *   END OF BINARY WORKING STORAGE
WPROCNAM DS    CL8  FOR NAME OF PROC BEING PROCESSED CURRENTLY
W1STWORD DS    CL8 1ST WORD ON PROC OR EXEC CRDS, MINUS INITIAL //
WDSNAME  DS    CL44  FOR DSN AFTER SUBSTITUTING SYMBOLIC PARAMS
WDSNAREA DS    CL64  FOR STORING RAW DSN
WDISP    DS    CL32   FOR DISP AFTER SUBSTITUTING SYMBOLIC PARAMETERS
WLISTEND DS    F   POINTS TO NEXT AVAIL PARAM LIST ENTRY
WEXECPTR DS    F  PTS TO START OF EXEC PARAM LIST
WEXECPRC DS    F  PTS TO LAST PROCNAME ENTRY FOR EXEC STATEMENTS
WPROCPTR DS    F  PTS TO START OF PROC PARAM LIST
WPROCPRC DS    F  PTS TO LAST PROCNAME ENTRY FOR PROC STATEMENTS
WLISTART EQU   *
WSTOREND EQU   WSTORAGE+4095
VALIDTBL DSECT MAP FOR VALIDATION TABLE
TABLIMIT DS    3F  BXLE START,INCREMENT,AND LIMIT FOR SEARCHING
LV1LIMIT DS    3F  SEARCH LIMITS FOR VALID LEVEL-1 QUALIFIERS
PLTLIMIT DS    3F  SEARCH LIMITS FOR VALID PLANT CODES
PRODLIMS DS    3F  TABLE LIMITS FOR ALL PRODUCTION JOB ACCT CODES
TECLIMS  DS    3F  TABLE LIMITS FOR TECH SERVICES JOB ACCT CODES
SYSLIMS  DS    3F  TABLE LIMITS FOR SYSTEMS SUPPORT JOB ACCT CODES
DEVLIMS  DS    3F  TABLE LIMITS FOR ALL OTHER DEVELOPMENT ACCT CODES
MULTLIMS DS    3F  TABLE LIMITS FOR MULTI-GROUP PROGRAMMERS
INITLIMS DS    3F  TABLE LIMITS FOR VALID PROGRAMMER INITIALS (JOB NAME
RDRLIMS  DS    3F  TABLE LIMITS FOR RESTRICTED READERS
OPERMODE DS    CL8 TELLTALE TO PERMIT OPERATOR INTERVENTION
         CSECT
         END
