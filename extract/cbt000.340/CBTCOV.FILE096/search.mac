SEARCH   TITLE 'QUEUE COMMAND - JQE AND JOE SEARCH AND FORMAT'    ONL01
SEARCH   QSTART ,                  START SEARCH CSECT ASSEMBLY    ONL01
******************************************************************BFG02
* BFG CHANGES:                                                    BFG02
*      (1) BFG02 - ADD DUPLICATE COUNT TO DQ COMMAND              BFG02
*      (2) BFG10 - FIX DJ COMMAND FOR JOB NUMBER AND '*'          BFG10
*      (3) BFG11 - REINSTALL FCI MOD TO DISPLAY JOBS ACTIVE ON    BFG11
*                  ANY INPUT OR OUTPUT QUEUE                      BFG11
*      (4) BFG12 - DISPLAY NJE QUEUES IF IN SP ($XMIT & $RECV)    BFG12
*                  ALSO DISPLAY THE JOT NETWORK AND DUMP QUEUES   BFG12
*                  ALSO ADD COMMAND NJ TO DISPLAY ONLY NJE QS     BFG12
******************************************************************BFG02
*******************************************************************
* RNB CHANGES:                                                    *
*      (1) RNB16 - PROCESS BOTH LOCAL AND REMOTE JOE QUEUE.       *
*                  ALSO, FIX BUG IN UF020 THAT WAS CLEARING       *
*                  FIELD JOEFLAG1 IN THE WORK JOE.                *
*      (2) RNB19 - FOR SP, SEARCH DUMP Q AND CONVERSION (XEQ) Q IF*
*                  STATUS COMMAND OR DJ. ALSO OUTPUT QUEUE        *
*******************************************************************
         L     R10,QVCKPT     LOAD BASE REG
         USING JQE,R9         BASE REG FOR JQE DSECT
         USING JOE,R8         BASE REG FOR JOE DSECT
         USING WORK,R13       BASE REG FOR LOCAL WORK AREA
******************************************************************UF006
*                                                                 UF006
*   CALL - READ JES2 CHECKPOINT FILE                              UF006
*                                                                 UF006
******************************************************************UF006
         L     R15,=V(CKPT)   ADDR OF CKPT ROUTINE                UF006
         BALR  R14,R15        GO TO IT                            UF006
***********************************************************************
*                                                                     *
*   BRANCH TO PROPER ROUTINE                                          *
*                                                                     *
***********************************************************************
         NI    QFLAG2,255-QFLG2NET          RESET FLAGS           BFG12
         LH    R1,QCODEH      LOAD FUNCTION CODE INTO R1
         CH    R1,=AL2(CODEND-4-CODSTRT) IS THE FCN SUPPORTED?    BFG12
         BH    STOP           NO. RETURN.
         B     CODSTRT(R1)    BRANCH TO ROUTINE                   BFG12
CODSTRT  B     ST             0 OFFSET                            BFG12
         B     DA             4
         B     DI             8
         B     AO   DO        12
         B     AI             16
         B     AO             20
         B     HI             24
         B     HO             28
         B     DT             32
         B     DJ             36
         B     DS             40
         B     DQ             44
         B     DF             48
         B     WO             52   WTRID OUTPUT                   UF047
         B     NJ             56   NJE QUEUE DISPLAY              BFG12
CODEND   EQU   *              END OF TABLE                        BFG12
***********************************************************************
*                                                                     *
*   STATUS - FIND ALL JOBS THAT MATCH LEVEL                           *
*                                                                     *
***********************************************************************
ST       CLI   QPARM1,C' '    DID USER SPECIFY LEVEL?
         BNE   ST2            NO. USE QLOGON.
         MVC   QPARM1,QLOGON  MOVE USER PARM1 TO LEVEL
ST2      BAL   R2,PARMLEN     DETERMINE PARM LENGTH
* SEARCH THE TSO QUEUE
         USING JQTDSECT,R1    BASE REG FOR JQT
DJ2      LH    R6,QLNG1       LENGTH OF COMPARE FOR LEVEL
         L     R1,QCJQHEAD    LOAD ADDR OF JQT
         LA    R4,JQTTSU      ADDR OF TSO QUEUE
         MVI   QCLASS,0       INDICATE THIS IS THE TSO QUEUE
         BAL   R2,SRCHJQE     SEARCH THE QUEUE
         B     DJ3            END OF QUEUE
         EX    R6,STCLC       IS THE JOBNAME EQUAL TO LEVEL?
         BNE   SKIPJQE        NO. SKIP THIS RECORD.
         B     PRTJQE         PRINT THE RECORD
* SEARCH THE SYSTEM QUEUE
DJ3      L     R1,QCJQHEAD    LOAD ADDR OF JQT
         LA    R4,JQTSTC      ADDR OF STC QUEUE
         MVI   QCLASS,4       INDICATE THIS IS THE STC QUEUE
         BAL   R2,SRCHJQE     SEARCH THE QUEUE
         B     DJ4A           END OF QUEUE                        CL005
         EX    R6,STCLC       IS THE JOBNAME EQUAL TO LEVEL?
         BNE   SKIPJQE        NO. SKIP THIS RECORD.
         B     PRTJQE         PRINT THE RECORD
         SPACE 1                                                  CL005
* SEARCH FOR SETUP QUEUE ELEMENT                                  CL005
DJ4A     L     R1,QCJQHEAD         LOAD ADDR OF JQT               CL005
         LA    R4,JQTSETUP         ADDR OF $SETUP QUEUE           CL005
         MVI   QCLASS,24           INDICATE THIS IS SETUP QUEUE   CL005
         BAL   R2,SRCHJQE          SEARCH THE QUEUE               CL005
         B     DJ4                 + 0 END OF QUEUE               CL005
         EX    R6,STCLC            + 4 JOBNAME EQUAL TO LEVEL?    CL005
         BNE   SKIPJQE             NO, SKIP THIS RECORD           CL005
         B     PRTJQE              PRINT THE ELEMENT              CL005
         SPACE 1                                                  CL005
* SEARCH FOR HELD OUTPUT
DJ4      L     R1,QCJQHEAD    LOAD ADDR OF JQT
         LA    R4,JQTOUT      ADDR OF $OUTPUT QUEUE
         DROP  R1
         MVI   QCLASS,8       INDICATE THIS IS THE HELD OUT QUEUE
         BAL   R2,SRCHJQE     SEARCH THE QUEUE
         B     DJ6            END OF QUEUE                           CL
         EX    R6,STCLC       IS THE JOBNAME EQUAL TO LEVEL?
         BNE   SKIPJQE        NO. SKIP THIS RECORD.
         CLC   JQEHDSCT,=X'000000'  ERE ANY HELD DATASETS? (PART 1EGG01
         BNE   PRTJQE         YES. PRINT THE RECORD.              EGG01
*        CLI   JQEHLDCT,0     ARE THERE ANY HELD DATASETS? (PART 1EGG01
*        BNE   PRTJQE         YES. PRINT THE RECORD.              EGG01
*        TM    JQEHQLOK,X'F0' ARE THERE ANY HELD DATASETS? (PART 2EGG01
*        BNZ   PRTJQE         YES. PRINT THE RECORD.              EGG01
         TM    JQEFLAG3,JQE3SYSD   PRINT JQE IF                      CL
         BO    PRTJQE               SPECIAL                          CL
         B     REJJQE         REJECT THE RECORD
* SEARCH CONVERSION (XEQ) QUEUE                                   RNB19
DJ6      L     R1,QCJQHEAD    LOAD ADDR OF JQT                    RNB19
         USING JQTDSECT,R1    BASE REG FOR JQT                    RNB19
         LA    R4,JQTXEQ      ADDR OF CONVERSION QUEUE            RNB19
         DROP  R1                                                 RNB19
         MVI   QCLASS,16      INDICATE THIS IS THE CNV QUEUE      RNB19
         BAL   R2,SRCHJQE     SEARCH THE QUEUE                    RNB19
         B     DJ7            END OF QUEUE                        RNB19
         EX    R6,STCLC       IS THE JOBNAME EQUAL TO LEVEL?      RNB19
         BNE   SKIPJQE        NO. SKIP THIS RECORD.               RNB19
         B     PRTJQE         PRINT THE RECORD                    RNB19
* SEARCH OUTPUT (AWAITING OUTPUT) QUEUE                           RNB19
DJ7      L     R1,QCJQHEAD    LOAD ADDR OF JQT                    RNB19
         USING JQTDSECT,R1    BASE REG FOR JQT                    RNB19
         LA    R4,JQTAWOUT    ADDR OF OUTPUT QUEUE                RNB19
         DROP  R1                                                 RNB19
         MVI   QCLASS,20      INDICATE THIS IS THE AWO QUEUE      RNB19
         BAL   R2,SRCHJQE     SEARCH THE QUEUE                    RNB19
         B     DJ7A           END OF QUEUE                  RNB19 BFG12
         EX    R6,STCLC       IS THE JOBNAME EQUAL TO LEVEL?      RNB19
         BNE   SKIPJQE        NO. SKIP THIS RECORD.               RNB19
         B     PRTJQE         PRINT THE RECORD                    RNB19
* SEARCH TRANSMISSION QUEUE                                       BFG12
DJ7A     L     R1,QCJQHEAD    LOAD ADDR OF JQT                    BFG12
         USING JQTDSECT,R1    BASE REG FOR JQT                    BFG12
         LA    R4,JQTXMIT     ADDR OF XMIT QUEUE                  BFG12
         DROP  R1                                                 BFG12
         MVI   QCLASS,28      INDICATE THIS IS THE XMIT QUEUE     BFG12
         BAL   R2,SRCHJQE     SEARCH THE QUEUE                    BFG12
         B     DJ7B           END OF QUEUE                        BFG12
         EX    R6,STCLC       IS THE JOBNAME EQUAL TO LEVEL?      BFG12
         BNE   SKIPJQE        NO. SKIP THIS RECORD.               BFG12
         B     PRTJQE         PRINT THE RECORD                    BFG12
* SEARCH SYSOUT RECEIVE QUEUE                                     BFG12
DJ7B     L     R1,QCJQHEAD    LOAD ADDR OF JQT                    BFG12
         USING JQTDSECT,R1    BASE REG FOR JQT                    BFG12
         LA    R4,JQTRECV     ADDR OF RECV QUEUE                  BFG12
         DROP  R1                                                 BFG12
         MVI   QCLASS,32      INDICATE THIS IS THE RECV QUEUE     BFG12
         BAL   R2,SRCHJQE     SEARCH THE QUEUE                    BFG12
         B     ST3            END OF QUEUE                        BFG12
         EX    R6,STCLC       IS THE JOBNAME EQUAL TO LEVEL?      BFG12
         BNE   SKIPJQE        NO. SKIP THIS RECORD.               BFG12
         B     PRTJQE         PRINT THE RECORD                    BFG12
* SEARCH INPUT QUEUES
ST3      MVI   QCLASS,192     START WITH CLASS A
ST4      BAL   R2,NEXTJQT     FIND NEXT QUEUE
         BAL   R2,SRCHJQE     SEARCH THE QUEUE
         B     ST4            END OF QUEUE
         CLI   JQEFLAG1,0     IS THE JOB EXECUTING OR HELD?
         BNE   ST7            YES. SPECIAL HANDLING.
         EX    R6,STCLC       IS THE JOBNAME EQUAL TO LEVEL?
         BNE   SKIPJQE        NO. SKIP THIS RECORD.
         B     PRTJQE         PRINT THE JQE
ST7      EX    R6,STCLC       IS THE JOBNAME EQUAL TO LEVEL?
         BNE   REJJQE         NO. SKIP THIS RECORD.
         B     PRT2JQE        PRINT THE RECORD WITHOUT INCR COUNT
* SEARCH OUTPUT QUEUES
ST5      MVI   QCLASS,192     START WITH CLASS A
ST6      BAL   R2,NEXTJOT     DETERMINE NEXT QUEUE
         BAL   R2,SRCHJOE     SEARCH A JQE QUEUE
         B     ST6            END OF QUEUE
         EX    R6,STCLC       IS THE JOBNAME EQUAL TO LEVEL?
         BNE   SKIPJOE        NO. SKIP THIS RECORD.
         B     PRTJOE         PRINT THE RECORD
* COMPARE USED TO CHECK LEVEL
STCLC    CLC   QPARM1(1),JQEJNAME IS THE JOBNAME EQUAL TO LEVEL?
***********************************************************************
*                                                                     *
*   DQ - PRINT SUMMARY OF ALL JOBS IN THE INPUT QUEUES                *
*                                                                     *
***********************************************************************
*  SEARCH ALL QUEUES
DQ       MVI   QCLASS,192           START WITH CLASS A
         MVC   QDHLINE,DQHEADER     MOVE IN THE HEADING
DQ1      BAL   R2,NEXTJQT           FIND NEXT QUEUE
         ZAP   QCOUNTE,=P'0'        ZERO COUNT FOR EXECUTING JOBS
         ZAP   QCOUNTA,=P'0'        ZERO COUNT FOR AWAITING JOBS
         ZAP   QCOUNTH,=P'0'        ZERO COUNT FOR HELD JOBS
         ZAP   QCOUNTD,=P'0'        ZERO COUNT FOR DUP JOBS       BFG02
         BAL   R2,SRCHJQE           SEARCH THE QUEUE
         B     DQ4                  END OF QUEUE
         TM    JQEFLAG1,JQE1BUSY    IS THIS JOB EXECUTING
         BZ    DQ2                  NO, NEXT TEST
         AP    QCOUNTE,=P'1'        YES, BUMP COUNTER
         B     SKIPJQE              PROCESS NEXT JQE
DQ2      TM    JQEFLAG1,JQE1HLDA+JQE1HLD1 HELD JOB?               BFG02
         BZ    DQ2A                 NO, NEXT TEST                 BFG02
         AP    QCOUNTH,=P'1'        YES, BUMP COUNTER
         B     SKIPJQE              PROCESS NEXT JQE
DQ2A     TM    JQEFLAG1,JQE1HLD2    IS THIS A DUPLICATE JOB?      BFG02
         BZ    DQ3                  NO, NEXT TEST                 BFG02
         AP    QCOUNTD,=P'1'        YES, BUMP COUNTER             BFG02
         B     SKIPJQE              PROCESS NEXT JQE              BFG02
DQ3      CLI   JQEFLAG1,0           IS THIS JOB AWAITING EXECUTION
         BNE   SKIPJQE              NO, PROCESS NEXT JQE
         AP    QCOUNTA,=P'1'        YES, BUMP COUNTER
         B     SKIPJQE              PROCESS NEXT JQE
DQ4      CLC   QCOUNT,=PL3'0'       IS THIS QUEUE EMPTY
         BE    DQ1                  YES, TRY THE NEXT QUEUE
         MVC   QDMSG,DQLINE         MOVE IN DETAIL LINE
         MVC   FCOUNT,ED5           MOVE IN
         ED    FCOUNT,QCOUNTE            NUMBER OF JOBS
         MVC   QECOUNT,FCOUNT+3                    IN EXECUTION
         MVC   FCOUNT,ED5           MOVE IN
         ED    FCOUNT,QCOUNTA            NUMBER OF JOBS
         MVC   QACOUNT,FCOUNT+3                    AWAITING EXECUTION
         MVC   FCOUNT,ED5           MOVE IN
         ED    FCOUNT,QCOUNTH            NUMBER OF JOBS
         MVC   QHCOUNT,FCOUNT+3                    IN HELD STATUS
         MVC   FCOUNT,ED5           MOVE IN                       BFG02
         ED    FCOUNT,QCOUNTD            NUMBER OF JOBS           BFG02
         MVC   QDCOUNT,FCOUNT+3                    IN DUP  STATUS BFG02
         MVC   FCOUNT,ED5           MOVE IN THE TOTAL NUMBER OF JOBS
         ED    FCOUNT,QCOUNT             IN THIS QUEUE
         MVC   CLASS,QCLASS         MOVE IN QUEUE CLASS
         BAL   R2,DISPLAY           GO DISPLAY THIS LINE
         B     DQ1                  PROCESS THE NEXT QUEUE
***********************************************************************
*                                                                     *
*   DF - PRINT SUMMARY OF ALL JOBS IN THE OUTPUT QUEUES               *
*                                                                     *
***********************************************************************
DF       MVI   QCLASS,192           START WITH CLASS A
         MVC   QDHLINE,DFHEADER     MOVE IN THE HEADING
DF1      BAL   R2,NEXTJOT           FIND NEXT QUEUE
         ZAP   QCOUNTE,=P'0'        ZERO COUNT FOR JOBS PRINTING
         BAL   R2,SRCHJOE           SEARCH THE QUEUE
         B     DF2                  END OF QUEUE
         TM    JOEFLAG1,X'20'       IS JOB PRINTING
         BNO   SKIPJOE              NO, PROCESS NEXT JOE
         AP    QCOUNTE,=P'1'        YES, BUMP COUNTER
         B     SKIPJOE              PROCESS NEXT JOE
DF2      CLC   QCOUNT,=PL3'0'       QUEUE EMPTY
         BE    DF1                  YES, TRY THE NEXT QUEUE
         MVC   QDMSG,DFLINE         MOVE IN DETAIL LINE
         MVC   FCOUNT,ED5           MOVE IN
         ED    FCOUNT,QCOUNTE            NUMBER OF JOBS
         MVC   QECOUNT,FCOUNT+3                    PRINTING
         MVC   FCOUNT,ED5           MOVE IN TOTAL NUMBER OF JOBS
         ED    FCOUNT,QCOUNT             IN THIS QUEUE
         MVC   CLASS,QCLASS         MOVE IN QUEUE CLASS
         BAL   R2,DISPLAY           GO DISPLAY THIS LINE
         B     DF1                  PROCESS NEXT QUEUE
***********************************************************************
*                                                                     *
*   DJ - FIND A SPECIFIC JOB                                          *
*                                                                     *
***********************************************************************
DJ       CLI   QPARM1,C' '    DID USER SPECIFY JOBNAME?
         BE    DJ9            NO. TILT.
         CLI   QPARM1,C'*'    DID USER SPECIFY SAME JOB??         BFG10
         BE    DJB1           YES - SO USE FINDJOB                BFG10
         CLI   QPARM1,C'0'    DID USER SPECIFY JOB NUMBER???      BFG10
         BL    DJB2           NO - ASSUME JOB NAME                BFG10
DJB1     L     R15,=V(FINDJOB) USE FINDJOB TO GET JCT             BFG10
         BALR  R14,R15                                            BFG10
         L     R6,QCJCTA      GET ADDRESS OF JCT                  BFG10
         USING JCT,R6         SET ADDRESSABILITY                  BFG10
         MVC   QPARM1,JCTJNAME SET JOB NAME                       BFG10
         DROP  R6                                                 BFG10
DJB2     DS    0H                                                 BFG10
         MVC   QLNG1,=H'7'    COMPARE FOR 8 CHARACTERS
         B     DJ2            USE THE STATUS ROUTINES
*J9      QTILT '*** YOU MUST SPECIFY JOBNAME ***'                 EGG02
DJ9      QTILT 'QSEARCH - You must specify Jobname'               EGG02
***********************************************************************
*                                                                     *
*   DI - PRINT ALL JOBS IN INPUT QUEUES                               *
*                                                                     *
***********************************************************************
DI       CLI   QPARM1,C' '    DID USER SPECIFY CLASS?
         BNE   DI5            YES. LIMIT TO ONE QUEUE.
* SEARCH ALL QUEUES
         MVI   QCLASS,192     START WITH CLASS A
DI2      BAL   R2,NEXTJQT     DETERMINE NEXT QUEUE
         BAL   R2,SRCHJQE     SEARCH A JQE QUEUE
         B     DI2            END OF QUEUE
         B     PRTJQE         PRINT THE RECORD
* SEARCH ONLY ONE QUEUE
DI5      MVC   QCLASS,QPARM1  USER SPECIFIED CLASS
         BAL   R2,FINDJQT     FIND QUEUE
         BAL   R2,SRCHJQE     SEARCH THE QUEUE
         B     STOP           END OF QUEUE
         B     PRTJQE         PRINT THE RECORD
***********************************************************************
*                                                                     *
*   AI - PRINT JOBS IN INPUT QUEUES THAT ARE AVAILABLE FOR SELECTION  *
*                                                                     *
***********************************************************************
AI       CLI   QPARM1,C' '    DID USER SPECIFY CLASS?
         BNE   AI5            YES. LIMIT TO ONE QUEUE.
* SEARCH ALL QUEUES
         MVI   QCLASS,192     START WITH CLASS A
AI2      BAL   R2,NEXTJQT     DETERMINE NEXT QUEUE
         BAL   R2,SRCHJQE     SEARCH A JQE QUEUE
         B     AI2            END OF QUEUE
         CLI   JQEFLAG1,0     IS THE JOB BUSY OR HELD?
         BNE   REJJQE         YES. SKIP IT.
         B     PRTJQE         PRINT THE RECORD
* SEARCH ONLY ONE QUEUE
AI5      MVC   QCLASS,QPARM1  USER SPECIFIED CLASS
         BAL   R2,FINDJQT     FIND QUEUE
         BAL   R2,SRCHJQE     SEARCH THE QUEUE
         B     STOP           END OF QUEUE
         CLI   JQEFLAG1,0     IS THE JOB BUSY OR HELD?
         BNE   REJJQE         YES. SKIP IT.
         B     PRTJQE         PRINT THE RECORD
***********************************************************************
*                                                                     *
*   AO - PRINT AVAILABLE JOBS IN THE OUTPUT QUEUE                     *
*                                                                     *
***********************************************************************
AO       CLI   QPARM1,C' '    DID USER SPECIFY CLASS?
         BNE   AO5            YES. LIMIT TO ONE QUEUE.
* SEARCH ALL QUEUES
         MVI   QCLASS,192     START WITH CLASS A
AO2      BAL   R2,NEXTJOT     DETERMINE NEXT QUEUE
         BAL   R2,SRCHJOE     SEARCH A JQE QUEUE
         B     AO2            END OF QUEUE
         B     PRTJOE         PRINT THE RECORD
* SEARCH ONLY ONE QUEUE
AO5      MVC   QCLASS,QPARM1  USER SPECIFIED CLASS
         BAL   R2,FINDJOT     FIND QUEUE
         BAL   R2,SRCHJOE     SEARCH THE QUEUE
         B     STOP           END OF QUEUE
         B     PRTJOE         PRINT THE RECORD
***********************************************************************
*                                                                     *
*   WO - PRINT JOES IN OUTPUT QUEUE THAT HAVE WTRID SPECIFIED         *
*                                                                     *
***********************************************************************
* SEARCH ALL QUEUES                                               UF047
WO       MVI   QCLASS,192     START WITH CLASS A                  UF047
WO2      BAL   R2,NEXTJOT     DETERMINE NEXT QUEUE                UF047
         BAL   R2,SRCHJOE     SEARCH A JQE QUEUE                  UF047
         B     WO2            END OF QUEUE                        UF047
         SR    R1,R1          CLEAR REG FOR INSERT                UF047
         ICM   R1,B'0111',JOECHARB  OFFSET TO CHAR JOE            UF047
         BZ    REJJOE         NONE, SKIP THIS ONE                 UF047
         A     R1,QCJOTA      GET REAL JOE ADDRESS                UF047
         TM    JOEWTRID-JOE(R1),X'FF'-X'40' WTRID PRESENT?        UF047
         BZ    REJJOE         NO, TRY NEXT ONE                    UF047
         B     PRTJOE         PRINT THE RECORD                    UF047
***********************************************************************
*                                                                     *
*   HI - PRINT JOBS IN INPUT QUEUES THAT ARE HELD                     *
*                                                                     *
***********************************************************************
HI       CLI   QPARM1,C' '    DID USER SPECIFY CLASS?
         BNE   HI5            YES. LIMIT TO ONE QUEUE.
* SEARCH ALL QUEUES
         MVI   QCLASS,192     START WITH CLASS A
HI2      BAL   R2,NEXTJQT     DETERMINE NEXT QUEUE
         BAL   R2,SRCHJQE     SEARCH A JQE QUEUE
         B     HI2            END OF QUEUE
         TM    JQEFLAG1,JQE1HLDA+JQE1HLD1+JQE1HLD2 IS JOB HELD?
         BZ    REJJQE         NO. SKIP IT.
         B     PRTJQE         PRINT THE RECORD
* SEARCH ONLY ONE QUEUE
HI5      MVC   QCLASS,QPARM1  USER SPECIFIED CLASS
         BAL   R2,FINDJQT     FIND QUEUE
         BAL   R2,SRCHJQE     SEARCH THE QUEUE
         B     STOP           END OF QUEUE
         TM    JQEFLAG1,JQE1HLDA+JQE1HLD1+JQE1HLD2 IS JOB HELD?
         BZ    REJJQE         NO. SKIP IT.
         B     PRTJQE         PRINT THE RECORD
***********************************************************************
*                                                                     *
*   HO - LIST ALL JOBS WITH HELD OUTPUT                               *
*                                                                     *
***********************************************************************
         USING JQTDSECT,R1    BASE REG FOR JQT
HO       L     R1,QCJQHEAD    LOAD ADDR OF JQT
         LA    R4,JQTOUT      ADDR OF $OUTPUT QUEUE
         DROP  R1
         MVI   QCLASS,8       INDICATE THIS IS THE HELD OUT QUEUE
         BAL   R2,SRCHJQE     SEARCH THE QUEUE
         B     STOP           END OF QUEUE
         CLC   JQEHDSCT,=X'000000'  ERE ANY HELD DATASETS? (PART 1EGG01
         BNE   PRTJQE         YES. PRINT THE RECORD.              EGG01
*        CLI   JQEHLDCT,0     ARE THERE ANY HELD DATASETS? (PART 1EGG01
*        BNE   PRTJQE         YES. PRINT THE RECORD.              EGG01
*        TM    JQEHQLOK,X'F0' ARE THERE ANY HELD DATASETS? (PART 2EGG01
*        BNZ   PRTJQE         YES. PRINT THE RECORD.              EGG01
         B     REJJQE         REJECT THE RECORD
***********************************************************************
*                                                                     *
*   DA - FIND ALL EXECUTING JOBS                                      *
*                                                                     *
***********************************************************************
DA       MVI   QCLASS,192     START WITH CLASS A
DA2      BAL   R2,NEXTJQT     DETERMINE NEXT QUEUE
         BAL   R2,SRCHJQE     SEARCH THE QUEUE
         B     DA2            END OF QUEUE
         TM    JQEFLAG1,JQE1BUSY IS THE JOB EXECUTING?
         BZ    REJJQE         NO. REJECT IT.
         B     PRTJQE         PRINT THE RECORD
*                                                             FCI BFG11
*   SEARCH SPECIAL INPUT QUEUE (PLAIN UNMARKED)               FCI BFG11
*                                                             FCI BFG11
DA3      L     R1,QCJQHEAD    GET JQE QUEUE HEAD POINTER      FCI BFG11
*                               (MAPPED BY JQTDSECT)          FCI BFG11
         USING JQTDSECT,R1    BASE REG FOR JQT                FCI BFG11
         LA    R4,JQTINPUT    POINT TO READING  QUEUE HEAD    FCI BFG11
         DROP  R1                                             FCI BFG11
         BAL   R2,SRCHJQE     GO SEARCH THIS QUEUE            FCI BFG11
         B     DA3A           END OF QUEUE..SPLIT TO NEXT LEVELCI BFG11
         CLI   JQETYPE,$INPUT ON INPUT?                       FCI BFG11
         BE    PRTJQE         YES..PRINT IT                   FCI BFG11
         B     REJJQE         NO..NOT THE ONE                 FCI BFG11
*                                                                 BFG12
* SEARCH SYSOUT RECEIVE QUEUE (IF ON QUEUE THEN ACTIVE)           BFG12
*                                                                 BFG12
DA3A     L     R1,QCJQHEAD    LOAD ADDR OF JQT                    BFG12
         USING JQTDSECT,R1    BASE REG FOR JQT                    BFG12
         LA    R4,JQTRECV     ADDR OF RECV QUEUE                  BFG12
         DROP  R1                                                 BFG12
         MVI   QCLASS,32      INDICATE THIS IS THE RECV QUEUE     BFG12
         BAL   R2,SRCHJQE     SEARCH THE QUEUE                    BFG12
         B     DA4            END OF QUEUE                        BFG12
         CLI   JQETYPE,$RECEIVE ON RECV Q?                        BFG12
         BE    PRTJQE         YES. PRINT THE RECORD.              BFG12
         B     REJJQE         NO. NOT DESIRED                     BFG12
*                                                                 BFG12
* SEARCH TRANSMISSION QUEUE                                       BFG12
*                                                                 BFG12
DA4      L     R1,QCJQHEAD    LOAD ADDR OF JQT                    BFG12
         USING JQTDSECT,R1    BASE REG FOR JQT                    BFG12
         LA    R4,JQTXMIT     ADDR OF XMIT QUEUE                  BFG12
         DROP  R1                                                 BFG12
         MVI   QCLASS,28      INDICATE THIS IS THE XMIT QUEUE     BFG12
         BAL   R2,SRCHJQE     SEARCH THE QUEUE                    BFG12
         B     DA4A           END OF QUEUE                        BFG12
         TM    JQEFLAG1,JQE1BUSY IS THE JOB TRANSMITTING          BFG12
         BNZ   PRTJQE         YES. PRINT THE RECORD.              BFG12
         B     REJJQE         NO. NOT DESIRED                     BFG12
*                                                             FCI BFG11
*   SEARCH OUTPUT QUEUES                                      FCI BFG11
*                                                             FCI BFG11
DA4A     MVI   QCLASS,192     START WITH CLASS A              FCI BFG11
DA5      BAL   R2,NEXTJOT     DETERMINE NEXT QUEUE            FCI BFG11
         BAL   R2,SRCHJOE     SEARCH A JQE QUEUE              FCI BFG11
         B     DA5            END OF QUEUE                    FCI BFG11
         TM    JOEFLAG1,JOE1BUSY   JOE ACTIVE ON A DEVICE?    FCI BFG11
         BZ    REJJOE         NO. SKIP THIS RECORD            FCI BFG11
         B     PRTJOE         PRINT THE RECORD                FCI BFG11
***********************************************************************
*                                                                     *
*   DT - LIST ALL TSO USERS                                           *
*                                                                     *
***********************************************************************
         USING JQTDSECT,R1    BASE REG FOR JQT
DT       L     R1,QCJQHEAD    LOAD ADDR OF JQT
         LA    R4,JQTTSU      ADDR OF TSO QUEUE
         DROP  R1
         MVI   QCLASS,0       INDICATE THIS IS THE TSO QUEUE
         BAL   R2,SRCHJQE     SEARCH THE QUEUE
         B     STOP           END OF QUEUE
         B     PRTJQE         PRINT THE RECORD
***********************************************************************
*                                                                     *
*   DS - LIST ALL SYSTEM STARTED TASKS                                *
*                                                                     *
***********************************************************************
         USING JQTDSECT,R1    BASE REG FOR JQT
DS       L     R1,QCJQHEAD    LOAD ADDR OF JQT
         LA    R4,JQTSTC      ADDR OF STC QUEUE
         DROP  R1
         MVI   QCLASS,4       INDICATE THIS IS THE STC QUEUE
         BAL   R2,SRCHJQE     SEARCH THE QUEUE
         B     STOP           END OF QUEUE
         B     PRTJQE         PRINT THE RECORD
***********************************************************************
*                                                                     *
*   NJ - DISPLAY ALL NJE QUEUES (JQE AND JOE)                         *
*                                                                     *
***********************************************************************
NJ       DS    0H                                                 BFG12
* SEARCH JOB TRANSMISSION QUEUE                                   BFG12
         L     R1,QCJQHEAD    LOAD ADDR OF JQT                    BFG12
         USING JQTDSECT,R1    BASE REG FOR JQT                    BFG12
         LA    R4,JQTXMIT     ADDR OF XMIT QUEUE                  BFG12
         DROP  R1                                                 BFG12
         MVI   QCLASS,28      INDICATE THIS IS THE XMIT QUEUE     BFG12
         BAL   R2,SRCHJQE     SEARCH THE QUEUE                    BFG12
         B     NJ1            END OF QUEUE                        BFG12
         B     PRTJQE         PRINT THE RECORD                    BFG12
* SEARCH SYSOUT RECEIVE QUEUE                                     BFG12
NJ1      L     R1,QCJQHEAD    LOAD ADDR OF JQT                    BFG12
         USING JQTDSECT,R1    BASE REG FOR JQT                    BFG12
         LA    R4,JQTRECV     ADDR OF RECV QUEUE                  BFG12
         DROP  R1                                                 BFG12
         MVI   QCLASS,32      INDICATE THIS IS THE RECV QUEUE     BFG12
         BAL   R2,SRCHJQE     SEARCH THE QUEUE                    BFG12
         B     NJ2            END OF QUEUE                        BFG12
         B     PRTJQE         PRINT THE RECORD                    BFG12
* SEARCH SYSOUT TRANSMISSION QUEUE                                BFG12
NJ2      MVI   QCLASS,C'>'    SET SPECIAL CLASS CODE              BFG12
         OI    QFLAG2,QFLG2NET SET FLAG FOR SPECIAL QUEUE         BFG12
         USING JOT,R1         SET ADDRESSABILITY                  BFG12
         L     R1,QCJOTA      POINT AT JOT                        BFG12
         LA    R4,JOTNTWKQ    POINT AT NETWORK QUEUE              BFG12
         DROP  R1             KILL USING                          BFG12
         BAL   R2,SRCHJOE     SEARCH A JOE QUEUE                  BFG12
         B     STOP           END OF QUEUE                        BFG12
         B     PRTJOE         PRINT THE RECORD                    BFG12
***********************************************************************
*                                                                     *
*   DETERMINE LENGTH OF LEVEL                                         *
*                                                                     *
***********************************************************************
PARMLEN  LA    R3,7           MAXIMUM LENGTH OF 8
         LA    R4,QPARM1+7    END OF FIELD
PARMLEN2 CLI   0(R4),C' '     IS THIS BYTE BLANK?
         BNE   PARMLEN3       NO. THIS IS THE LENGTH
         BCTR  R4,0           TRY PREVIOUS BYTE
         BCT   R3,PARMLEN2    LOOP
PARMLEN3 STH   R3,QLNG1       STORE THE LENGTH OF LEVEL
         BR    R2             RETURN TO CALLER
***********************************************************************
*                                                                     *
*   SEARCH A JQE QUEUE                                                *
*                                                                     *
***********************************************************************
SRCHJQE  ZAP   QCOUNT,=P'0'   ZERO THE QUEUE COUNT
         L     R9,0(R4)       LOAD FIRST JQE OFFSET               UF020
NEXTJQE  LA    R9,0(,R9)      KILL EXTRANEOUS BITS                UF020
         LTR   R9,R9          TEST FOR END OF QUEUE               UF020
         BZR   R2             END OF QUEUE. RETURN.
         A     R9,QCJQTA      ADD BASE TO OFFSET
         B     4(R2)          DETERMINE ELIGIBILITY
PRTJQE   AP    QCOUNT,=P'1'   INCREMENT COUNT
PRT2JQE  SR    R1,R1          INDICATE THIS IS A JQE
         L     R15,=V(FORMAT) ADDR OF PRINT MODULE
         BALR  R14,R15        PRINT THE JQE IN R9
REJJQE   L     R9,JQENEXT     LOAD OFFSET TO NEXT JQE             UF020
         B     NEXTJQE        GET THE NEXT JQE
SKIPJQE  AP    QCOUNT,=P'1'   INCREMENT COUNT
         B     REJJQE         CONTINUE
***********************************************************************
*                                                                     *
*   SEARCH A JOE QUEUE                                                *
*                                                                     *
***********************************************************************
SRCHJOE  ZAP   QCOUNT,=P'0'    ZERO THE QUEUE COUNT               RNB16
         TM    QFLAG2,QFLG2NET          SPECIAL QUEUES???         BFG12
         BNZ   FIRSTJOE        YES - DONT SET LCL BIT             BFG12
         OI    QFLAG1,QFLG1LCL SHOW SEARCHING LOCAL QUEUE         RNB16
         B     FIRSTJOE        AND GO DO IT                       RNB16
*                                                                 RNB16
SRCHJOE1 NI    QFLAG1,X'FF'-QFLG1LCL TURN OFF LOCAL QUEUE FLAG    RNB16
         LA    R4,4(,R4)             POINT TO REMOTE QUEUE        RNB16
*                                                                 RNB16
FIRSTJOE L     R8,0(R4)       LOAD FIRST JOE OFFSET               UF020
         LA    R8,0(,R8)       KILL EXTRANEOUS BITS.              UF020
         LTR   R8,R8          IS THE QUEUE EMPTY?
         BNZ   $1             /NO  - CONTINUE                     RNB16
*                             /YES -                              RNB16
         TM    QFLAG1,QFLG1LCL WAS THIS THE LOCAL QUEUE?          RNB16
         BO    SRCHJOE1       /YES - GO DO REMOTE QUEUE           RNB16
         BR    R2             /NO  - RETURN TO CALLER             RNB16
$1       EQU   *                                                  RNB16
         XC    PRIORITY(12),PRIORITY ZERO OUT HIGHEST POINTERS
NEXTJOE  LA    R8,0(,R8)      CLEAR EXTRA BITS                    UF020
         LTR   R8,R8          TEST FOR END OF QUEUE               UF020
         BZ    TESTJOE        END OF QUEUE. PASS HIGHEST TO CALLER.
         A     R8,QCJOTA      ADD BASE TO OFFSET
         L     R9,JOEJQE      OFFSET TO JQE                       UF020
         N     R9,=A(X'00FFFFFF')  CLEAR EXTRA BITS               UF020
         BZ    TRYJOE         THIS JOE ALREADY USED. TRY NEXT ONE.
         A     R9,QCJQTA      ADD BASE TO OFFSET
         LA    R7,255         PRESET MAXIMUM PRIORITY
         TM    JQEPRIO,240    IS THIS JOB PRIORITY 15?
         BO    HIGHJOE        YES. PASS TO CALLER.
         LA    R1,16          PRESET PRIORITY ONE
         CLI   JQETYPE,$HARDCPY IS THE JOB EXECUTING?
         BNE   EXECJOE        YES. USE PRIORITY ONE.
         IC    R1,JQEPRIO     INSERT JQE PRIORITY
EXECJOE  IC    R7,JOEPRIO     INSERT JOE PRIORITY
         AR    R7,R1          ADD PRIORITIES
         SRL   R7,1           BECAUSE HASP DOES IT, THAT'S WHY
HIGHJOE  C     R7,PRIORITY    IS THIS LESS THAN PREVIOUS HIGH?
         BL    TRYJOE         YES. TRY NEXT ONE.
         STM   R7,R9,PRIORITY NO. REPLACE PREVIOUS HIGH.
TRYJOE   L     R8,JOENEXT     ADDR OF NEXT JOE                    UF020
         N     R8,=A(X'00FFFFFF')  CLEAR EXTRA BITS               UF020
         B     NEXTJOE        TRY NEXT JOE
TESTJOE  LM    R7,R9,PRIORITY LOAD ADDR OF HIGHEST JOE
         LTR   R8,R8          WAS THE QUEUE EMPTY?
         BNZ   $2                                                 RNB16
         TM    QFLAG1,QFLG1LCL WAS THIS THE LOCAL QUEUE?          RNB16
         BO    SRCHJOE1       /YES - GO DO REMOTE QUEUE           RNB16
         BR    R2             /NO  - END OF QUEUE.                RNB16
$2       EQU   *                                                  RNB16
         MVC   JOEJQEB,=F'0'  INDICATE THIS JOE USED              RNB16
         B     4(R2)          DETERMINE ELIGIBILITY
PRTJOE   LA    R1,4           INDICATE THIS IS A JOE
         AP    QCOUNT,=P'1'   INCREMENT COUNT
         L     R15,=V(FORMAT) ADDR OF PRINT MODULE
         BALR  R14,R15        PRINT THE JOE IN R9
REJJOE   B     FIRSTJOE       GET THE NEXT JOE
SKIPJOE  AP    QCOUNT,=P'1'   INCREMENT COUNT
         B     REJJOE         CONTINUE
***********************************************************************
*                                                                     *
*   DETERMINE INPUT QUEUE                                             *
*                                                                     *
***********************************************************************
FINDJQT  TR    QCLASS,CLASSTBL DETERMINE OFFSET
         LH    R4,QCLASSH     LOAD TABLE OFFSET
         BCTR  R4,0           SUBTRACT 1
         STH   R4,QCLASSH     RESTORE VALUE
         B     NEXTJQT2       CONTINUE
NEXTJQT  TR    QCLASS,CLASSTBL DETERMINE OFFSET FROM FIRST CLASS
         LH    R4,QCLASSH     LOAD TABLE OFFSET
         CH    R4,=H'36'      IS THIS THE LAST QUEUE?
         BNL   NEXTJQT9       YES. GO HOME.
NEXTJQT2 TR    QCLASS,NAMETBL MOVE CLASS NAME TO QCLASS
         AR    R4,R4          MULTIPLY BY 2
         AR    R4,R4          AND BY 2 AGAIN                      UF020
         USING JQTDSECT,R1    BASE REG FOR JQT
         L     R1,QCJQHEAD    LOAD ADDR OF JQT
         LA    R4,JQTCLSA(R4) NEXT QUEUE
         DROP  R1
         BR    R2             RETURN TO CALLER
NEXTJQT9 CLI   QCODE,0        IS THIS A STATUS REQUEST?
         BE    ST5            YES. GO TO STATUS.
         CLI   QCODE,36       IS THIS A DJ REQUEST?
         BE    ST5            YES. RETURN TO STATUS           FCI BFG11
         CLI   QCODE,4        IS THIS A DA REQUEST?           FCI BFG11
         BNE   STOP           NO. GO HOME.                    FCI BFG11
         B     DA3            YES. GO TO DA JOE PROCESSING    FCI BFG11
***********************************************************************
*                                                                     *
*   DETERMINE OUTPUT QUEUE                                            *
*                                                                     *
***********************************************************************
FINDJOT  TR    QCLASS,CLASSTBL DETERMINE OFFSET
         LH    R4,QCLASSH     LOAD TABLE OFFSET
         BCTR  R4,0           SUBTRACT 1
         STH   R4,QCLASSH     RESTORE VALUE
         B     NEXTJOT2       CONTINUE
NEXTJOT  DS    0H                                                 BFG12
         TM    QFLAG2,QFLG2NET HAVE WE NETWORK YET                BFG12
         BO    STOP           IF SO THEN SKIP FUN AND GAMES       BFG12
         TR    QCLASS,CLASSTBL DETERMINE OFFSET FROM FIRST CLASS
         LH    R4,QCLASSH     LOAD TABLE OFFSET
         CH    R4,=H'36'      IS THIS THE LAST QUEUE?
         BL    NEXTJOT2       NO. GO PROCESS.                     BFG12
*                                                                 BFG12
**       HANDLE SEARCH OF NETWORK QUEUE                           BFG12
*                                                                 BFG12
         OI    QFLAG2,QFLG2NET SET THAT IN NETWORK QUEUE          BFG12
         MVI   QCLASS,C'>'    SET SPECIAL CLASS CODE              BFG12
         USING JOT,R1         SET ADDRESSABILITY                  BFG12
         L     R1,QCJOTA      POINT AT JOT                        BFG12
         LA    R4,JOTNTWKQ    POINT AT NETWORK QUEUE              BFG12
         DROP  R1             KILL USING                          BFG12
         BR    R2             GO AND DO QUEUE                     BFG12
         SPACE 2                                                  BFG12
NEXTJOT2 TR    QCLASS,NAMETBL MOVE CLASS NAME TO QCLASS
         AR    R4,R4          MULTIPLY BY 2
         SLL   R4,2           AND THEN BY 4 (WILL ONLY GET LOCALS)UF020
         USING JOT,R1         BASE REG FOR JOT
         L     R1,QCJOTA      LOAD ADDR OF JOT
         LA    R4,JOTCLSQ(R4) NEXT QUEUE
         DROP  R1
         BR    R2             RETURN TO CALLER
***********************************************************************
*                                                                     *
*   CALL DISPLAY ROUTINE                                              *
*                                                                     *
***********************************************************************
DISPLAY  LA    R1,QDMSG             SAVE ADDRESS
         ST    R1,QDMSGA                 OF THE MESSAGE
         MVC   QDMLNG,=H'80'        SET THE LENGTH
         L     R15,=V(DISPLAY)      BRANCH TO
         BALR  R14,R15                     DISPLAY
         BR    R2                   RETURN TO CALLER
***********************************************************************
*                                                                     *
*   GO HOME                                                           *
*                                                                     *
***********************************************************************
STOP     QSTOP
         LTORG
***********************************************************************
*                                                                     *
*   TABLES FOR CLASS DETERMINATION                                    *
*                                                                     *
***********************************************************************
NAMETBL  DC    C'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'
CLASSTBL DC    192X'01'
         DC    X'00010203040506070809',7X'00'
         DC    X'0A0B0C0D0E0F101112',8X'00'
         DC    X'131415161718191A',6X'00'
         DC    X'1B1C1D1E1F2021222324',6X'00'
***********************************************************************
*                                                                     *
*   MISCELLANEOUS GARBAGE                                             *
*                                                                     *
***********************************************************************
ED5      DC    X'402020202120'
DQHEADER DC    CL80'Input Queues'
DQLINE   DC    CL80' Input                        Executing      WaitinX
               g      Held      Duplicate'                        EGG02
DFHEADER DC    CL80'Output Queues'
DFLINE   DC    CL80' Output                       Printing'
SYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023
SEARCH   CSECT ,                                                  UF023
         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL01
         SPACE 1                                                  UF001
         $HASPEQU
         $JQE
*QEHQLOK EQU   JQEJBLOK       NEW LABEL FOR OLD FIELD             EGG01
         $JOE
         $JOT
         $JQT
         IFGRPL ,                                                 BFG11
         $BUFFER ,                                                BFG11
         $JCT ,                                                   BFG11
         QCOMMON
         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL01
         ORG   QDMSG
         DS    CL9
CLASS    DS    CL1
         DS    CL2
QTCOUNT  DS    CL6
         DS    CL7
QECOUNT  DS    CL3
         DS    CL12
QACOUNT  DS    CL3
         DS    CL10
QHCOUNT  DS    CL3
         DS    CL7                                                BFG02
QDCOUNT  DS    CL3                                                BFG02
         ORG   QTCOUNT
FCOUNT   DS    CL6
WORK     DSECT
         DS    CL80
PRIORITY DS    3F
QCOUNTD  DS    PL3                                                BFG02
SYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023
         END
