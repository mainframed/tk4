)ATTR
  _  TYPE(INPUT) INTENS(HIGH) PAD(_)
  `  TYPE(INPUT) INTENS(HIGH) PAD(_)
  ~  TYPE(TEXT)  INTENS(LOW)  SKIP(ON)
  #  AREA(DYNAMIC) EXTEND(ON)
  $  TYPE(INPUT) INTENS(HIGH) PAD(0) JUST(RIGHT)
  ?  TYPE(INPUT) INTENS(HIGH)        JUST(RIGHT)
  07 TYPE(DATAOUT) INTENS(HIGH)   COLOR(WHITE)
  10 TYPE(DATAIN)  INTENS(NON)
  11 TYPE(DATAIN)  INTENS(LOW)    COLOR(GREEN)
)BODY EXPAND(//) WIDTH(80)
%------------------------ &TITLE ---------------------------------------
%COMMAND ===>_ZCMD
%
_Z+AGGRAGATE              _Z+ATTRIBUTES (_ATTR +)   _Z+CHARSET ($CS~,_FO
_Z+COMPILE (_C+)          _Z+CONTROL (_PASSWORD+)   _Z+COUNT
_Z+DECK                   _Z+DUMP                   _Z+ESD
_Z+FLAG (_F+)             _Z+FLOW (`FLMAX~,`FLMIN+)
_Z+GONUMBER               _Z+GOSTMT                 _Z+GRAPHIC
_Z+IMPRECISE              _Z+INCLUDE                _Z+INSOURCE
_Z+INTERRUPT              _Z+LINECOUNT($LNCNT+)     _Z+LIST (?LISTN~,?LI
_Z+MESSAGE                _Z+MACRO                  _Z+MAP
_Z+MARGINI (_M+)          _Z+MARGINS ($MM~,$MN~,?MC+)
_Z+MDECK                  _Z+NAME (_NAME    +)      _Z+NEST
_Z+NOSPIE                 _Z+NOSTAE                 _Z+NUMBER
_Z+OBJECT                 _Z+OFFSET                 _Z+OPTIMIZE (_OPTM+)
_Z+OPTIONS                _Z+SEQUENCE ($S1~,$S2+)   _Z+SIZE (_SIZE    +)
_Z+SOURCE                 _Z+STMT                   _Z+STORAGE
_Z+SYNTAX (_S+)           _Z+TERMINAL
_Z+XREF (_XREF +)

+PLI OPTIONS:
#PLIOPTS
)INIT
 .CURSOR=ZCMD
 &OPTN = 'OP01,OP02,OP03,OP04,OP05,OP06,OP07,OP08,OP09,OP10'
 &OPTN = '&OPTN,OP11,OP12,OP13,OP14,OP15,OP16,OP17,OP18,OP19,OP20'
 &OPTN = '&OPTN,OP21,OP22,OP23,OP24,OP25,OP26,OP27,OP28,OP29,OP30'
 &OPTN = '&OPTN,OP31,OP32,OP33,OP34,OP35,OP36,OP37,OP38,OP39,OP40'
 &OPTN = '&OPTN,OP41,OP42,OP43'
 .ZVARS = '(&OPTN)'
 &PLIOPTS = '&POPT'
 &TITLE = 'PL/I Option Selection'
)PROC
 VER (&OPTM,LIST,TIME,0,2)
 VER (&ATTR,LIST,FULL,SHORT)
 VER (&CS,LIST,48,60)
 VER (&FORMAT,LIST,EBCDIC,BCD)
 VER (&F,LIST,I,W,E,S)
 VER (&C,LIST,W,E,S)
 VER (&MM,NUM)
 VER (&MN,NUM)
 VER (&MC,NUM)
)END
)ATTR
   05 TYPE(DATAOUT) INTENS(LOW)    COLOR(BLUE)
   07 TYPE(DATAOUT) INTENS(HIGH)   COLOR(WHITE)
   10 TYPE(DATAIN)  INTENS(NON)
   11 TYPE(DATAIN)  INTENS(LOW)    COLOR(GREEN)
   13 TYPE(DATAIN)  INTENS(HIGH)   COLOR(RED)
   1C TYPE(DATAIN)  INTENS(NON)                  CAPS(ON)
   1D TYPE(DATAIN)  INTENS(LOW)    COLOR(GREEN)  CAPS(ON)
   1F TYPE(DATAIN)  INTENS(HIGH)   COLOR(RED)    CAPS(ON)
    % TYPE(TEXT)    INTENS(HIGH)   COLOR(WHITE)
    + TYPE(TEXT)    INTENS(LOW)    COLOR(BLUE)
    _ TYPE(INPUT)   INTENS(HIGH)   COLOR(RED)
    @ TYPE(OUTPUT)  INTENS(HIGH)   COLOR(WHITE)
    $ TYPE(OUTPUT)  INTENS(LOW)    COLOR(BLUE)
    # AREA(DYNAMIC) EXTEND(ON) SCROLL(ON)
)BODY WIDTH(&ZSCREENW) EXPAND(//)
@ISFLN1
%COMMAN  INPUT ===>_ISFCMD                                    %SCROLL ==
#ISFBUF -----------------------/-/--------------------------------------
)INIT
.HELP = &ISFHELP
.CURSOR = &ISFCSRN
.CSRPOS = &ISFCSRP
VPUT ( ISFLN1 ISFBUF ISFNEWCM ) SHARED
)PROC
&ISFCSRN = .CURSOR
&ISFCSRP = .CSRPOS
&ISFLVL  = LVLINE(ISFBUF)
&ZTRAIL = ''
IF (&ISFNEWCM ^= ' ')
  &ISFCMD = '&ISFNEWCM'
  &ISFNEWCM = ' '
VPUT ( ZTRAIL )
)END
