//ONE   EXEC  PGM=IFOX00,REGION=2048K,
//             PARM=(NORLD,RENT,TERM,'XREF(SHORT)')
//SYSLIB   DD  DSN=SYS1.AMODGEN,DISP=SHR
//         DD  DSN=SYS1.MACLIB,DISP=SHR
//SYSUT1   DD  UNIT=SYSDA,SPACE=(CYL,(10,5))
//SYSUT2   DD  UNIT=SYSDA,SPACE=(CYL,(10,5))
//SYSUT3   DD  UNIT=SYSDA,SPACE=(CYL,(10,5))
//SYSPUNCH DD  UNIT=SYSDA,SPACE=(TRK,(5,5)),DISP=(,PASS),DSN=&&X,
//         DCB=BLKSIZE=3120
//SYSPRINT DD  SYSOUT=*
//SYSTERM  DD  SYSOUT=*
//SYSIN    DD  *
VTSOCMD  CSECT
*
* SAMPLE TSO COMMAND AUTHORIZATION EXIT FOR RACF SYSTEMS WRITTEN BY:
*   DAVID SAGER   JOHNS HOPKINS UNIVERSITY / APPLIED PHYSICS LABORATORY
*
*        TSO COMMAND VALIDATION EXIT
*
*        THIS ROUTINE IS CALLED BY THE TSO PROCESSOR TO VALIDATE
*        THE TSO COMMAND USAGE.
*
*        FUNCTIONS -
*            1) INVOKE RACF TO VALIDATE USERS ACCESS TO THE TSO
*               COMMAND.
*            2) FOR UNAUTHORIZED ATTEMPTS, WRITES A TYPE 80 SMF RECORD.
*
*        INPUT -
*            R1 POINTS TO A STANDARD TSO CPPL FOLLOWED BY A POINTER
*            TO AN EIGHT BYTE AREA CONTAINING THE COMMAND NAME.
*
*        OUTPUT -
*            R15 CONTAINS A RETURN CODE WITH THE FOLLOWING MEANING:
*               0 - COMMAND IS AUTHORIZED
*               4 - COMMAND IS NOT AUTHORIZED
*
         SAVE  (14,12),,VTSOCMD-&SYSDATE-&SYSTIME SAVE REGISTERS
         USING VTSOCMD,R12        ESTABLISH ADDRESSABILITY
         LR    R12,R15            LOAD BASE REGISTER
         LR    R11,R1             SET UP PARAMETER REGISTER
         GETMAIN RU,LV=WORKSIZE,BNDRY=PAGE  ACQUIRE WORK AREA
         LR    R10,R1             GET ADDRESS OF WORK AREA
         ST    R13,4(,R10)        CHAIN
         ST    R10,8(,R13)          SAVEAREAS
         LR    R13,R10            POINT TO MY SAVE AREA
         USING WORKAREA,R13       ESTABLISH ADDRESSABILITY
         L     R11,16(R11)        POINT TO COMMAND NAME
         MVC   COMMAND(8),0(R11)  SAVE COMMAND NAME
*
*        DETERMINE IF TSO COMMAND CHECKING IS WANTED.
*
         L     R1,CVTPTR          ADDRESS OF CVT
         USING CVT,R1
         L     R1,CVTUSER         ADDRESS OF JHU/APL CVT
         USING APLCVT,R1
         TM    RACFFLG1,RACFTSOC  IS TSO COMMAND CHECKING WANTED?
         BNO   AUTH               NO, ALLOW ALL COMMANDS
         DROP  R1
*
*        GET ACEE ADDRESS
*
         L     R1,CVTPTR          ADDRESS OF CVT
         USING CVT,R1
         L     R1,CVTTCBP         TCB POINTER
         DROP  R1
         L     R1,12(R1)          CURRENT ASCB
         USING ASCB,R1
         L     R1,ASCBASXB        ADDRESS OF ASXB
         DROP  R1
         USING ASXB,R1
         ICM   R10,B'1111',ASXBSENV  GET ADDRESS OF ACEE
         DROP  R1
         BZ    NOTAUTH            NO ACEE, FAIL REQUEST
         USING ACEE,R10
         TM    ACEEFLG1,ACEERACF  IS USER RACF DEFINED?
         BNO   NOTAUTH            NO, GO CHECK USERID
         TM    ACEEFLG1,ACEESPEC  IS USER SPECIAL?
         BO    AUTH               YES, ALLOW ALL COMMANDS
*
*        DETERMINE IF RACF IS ACTIVE AND USER IS RACF DEFINED.
*
         L     R1,CVTPTR          ADDRESS OF CVT
         USING CVT,R1
         ICM   R2,15,CVTRAC       ADDRESS OF RACF CVT
         DROP  R1
         BZ    NOTAUTH            RACF NOT IN SYSTEM
         USING RCVT,R2
         TM    RCVTSTAT,RCVTRNA   IS RACF ACTIVE?
         BO    NOTAUTH            NO
         TM    RCVTFLGS,RCVTROFF  HAS RVARY INACTIVE BEEN ISSUED?
         BO    NOTAUTH            YES
         DROP  R2
*
*        VALIDATE COMMAND USAGE
*
         LA    R5,GRACINST        GET ADDRESS OF INSTALLATION AREA
         USING RACFINST,R5
         MVC   GRACCALL(8),=CL8'SASRACF'  MOVE IN CALLER NAME
         DROP  R5
         MVC   FRC1A(FRC1L),FRC1  COPY LIST FORM OF MACRO
*        FRACHECK DESTROYS REGISTERS 0-5, 14,AND 15.
         FRACHECK ENTITY=COMMAND,ATTR=READ,ACEE=(R10),                 X
               WKAREA=FRWORK,INSTLN=(R5),MF=(E,FRC1A)
         LTR   R15,R15            TEST RETURN CODE
         BZ    AUTH               USER IS AUTHORIZED
         C     R15,FULL4
         BE    AUTH               COMMAND NOT DEFINED TO RACF
         C     R15,FULL8
         BE    LOG                USER IS NOT AUTHORIZED
         B     NOTAUTH            OTHER ERROR
         SPACE 3
*
*        LOG COMMAND VIOLATION
*
LOG      DS    0H
         SMFRTEST RECTYPE=80      ARE TYPE 80 RECORDS WANTED?
         LTR   R15,R15
         BNZ   NOTAUTH            NO, SKIP LOGGING
*        FILL IN TYPE 80 RECORD
         LA    R2,SMF80           ADDRESS OF SMF RECORD
         USING SMFRCD80,R2
         LA    R1,79              LENGTH OF FIXED PORTION
         LA    R0,VARLEN          LENGTH OF VARIABLE PORTION
         AR    R1,R0              TOTAL RECORD LENGTH
         STH   R1,SMF80LEN        SET RDW LENGTH
         MVI   SMF80RTY,X'50'     SET RECORD TYPE - 80
         MVI   SMF80DES,X'A0'     DESCRIPTOR - VIOLATION & VER NUMBER
         MVI   SMF80EVT,X'02'     EVENT CODE - RESOURCE ACCESS
         MVI   SMF80EVQ,X'01'     EVENT QUALIFIER - INSUFF AUTHORITY
         MVC   SMF80USR(8),ACEEUSRI  USERID
         MVC   SMF80GRP(8),ACEEGRPN  GROUP
         LA    R1,75
         STH   R1,SMF80REL        OFFSET TO RELOCATE SECTION
         LA    R1,4
         STH   R1,SMF80CNT        NUMBER OF RELOCATE SECTIONS
         MVI   SMF80ATH,X'80'     NORMAL AUTHORITY CHECK
         MVI   SMF80REA,X'10'     AUDIT ACCESS TO ENTITY
         MVC   SMF80TRM(8),ACEETRID  TERMINAL ID
         MVC   SMF80JBN(8),ACEEUSRI  JOB NAME
         MVC   SMF80UID(8),ACEEUSRI  USERID
         MVI   SMF80VER,X'02'     RACF RELEASE 3
         MVC   SMF80DTP(VARLEN),VARAREA   MOVE IN VARIABLE DATA
         MVC   SMF80DTA(8),COMMAND   MOVE IN COMMAND NAME
         SMFWTM (2)               WRITE TYPE 80 RECORD
         DROP  R2
         B     NOTAUTH            FAIL REQUEST
         SPACE 3
NOTAUTH  DS    0H                 FAIL REQUEST
         MVC   SAVERC(4),FULL4    SET RETURN CODE TO 4
         B     EXIT               EXIT
AUTH     DS    0H                 ALLOW REQUEST
         MVC   SAVERC(4),FULL0    SET RETURN CODE TO 0
         B     EXIT               EXIT
         SPACE 2
EXIT     DS    0H
         L     R2,SAVERC          GET RETURN CODE
         LR    R1,R13             GET POINTER TO WORK AREA
         L     R13,4(,R13)        UNCHAIN SAVE AREAS
         FREEMAIN R,LV=WORKSIZE,A=(1)  FREE DYNAMIC AREA
         LR    R15,R2             RESTORE RETURN CODE
         RETURN (14,12),RC=(15)
         SPACE 2
         DROP  R10
         EJECT
*
*        CONSTANTS
*
FULL0    DC    F'0'
FULL4    DC    F'4'
FULL8    DC    F'8'
         SPACE 3
FRC1     FRACHECK CLASS='CTSO',MF=L
FRC1L    EQU   *-FRC1
         SPACE 3
VARAREA  DS    0C
         DC    X'01'              RESOURCE
         DC    X'08'              LENGTH
         DC    CL8' '             COMMAND
         DC    X'03'              ACCESS REQUESTED
         DC    X'01'              LENGTH
         DC    X'10'              READ
         DC    X'04'              ACCESS ALLOWED
         DC    X'01'              LENGTH
         DC    X'08'              NONE
         DC    X'11'              CLASS
         DC    X'08'              LENGTH
         DC    CL8'GTSO'          GTSO
VARLEN   EQU   *-VARAREA
         LTORG
         REGS
         SPACE 3
         ENTRY PATCH
PATCH    DC    50S(*)             PATCH AREA
         EJECT
WORKAREA DSECT
SAVEAREA DS    18F                SAVE AREA
FRWORK   DS    16F                WORKAREA FOR FRACHECK
SAVERC   DS    F
FRC1A    DS    CL(FRC1L)
COMMAND  DS    CL8                COMMAND NAME
GRACINST DS    CL80               INSTALLATION WORKAREA
SMF80    DS    CL256              SMF TYPE 80 RECORD
         DS    0D                 FILL OUT DSECT
WORKSIZE EQU   *-WORKAREA         LENGTH OF WORK AREA
         SPACE 3
         RACFINST                 GENERATE RACF INSTALLATION AREA DSECT
         SPACE 3
         APLCVT                   GENERATE APL'S CVT DSECT
         SPACE 3
         IHAACEE                  GENERATE ACEE DSECT
         SPACE 3
         IHAASCB                  GENERATE ASCB DSECT
         SPACE 3
         IHAASXB                  GENERATE ASXB DSECT
         SPACE 3
         CVT   DSECT=YES          GENERATE CVT DSECT
         SPACE 3
         ICHPRCVT                 GENERATE RCVT DSECT
         SPACE 3
         IFASMFR 80               GENERATE SMF RECORD DSECT
         SPACE 3
         IEESMCA                  GENERATE SMCA DSECT
         SPACE 3
         END
//LK1    EXEC  PGM=IEWL,PARM='MAP,RENT,REUS,REFR,LET,NCAL',COND=(5,LT)
//SYSPRINT DD  SYSOUT=*
//SYSLMOD  DD  DISP=SHR,DSN=LINK.LIBRARY    <=== MODIFY
//IN       DD  DSN=&&X,DISP=(OLD,DELETE)
//SYSUT1   DD  UNIT=SYSDA,SPACE=(TRK,(5,5))
//SYSLIN   DD  *
  INCLUDE  IN
  ENTRY    PDSMAIN
  INCLUDE  SYSLMOD(PDS45678)                <=== MODIFY
  NAME     PDS45678(R)                      <=== MODIFY
