         TITLE 'P D S  --  PDS DSNAME                        09/28/88'
***********************************************************************
***      DSNAME  SUBCOMMAND                                         ***
***********************************************************************
*
         SPACE 1
DSNAMES  CSECT
         BALR  R6,0
         USING *,R6
         CLC   ##SUBCOM(8),$DSN         DSN SUBCOMMAND?
         BNE   DSNAMES2                 NO, BRANCH
*** REOPEN THE DATA SET TO ENSURE DS1LSTAR IS CORRECT
         OI    FLAGSJJ,FNOREAD          CALL EXCP FOR OPEN ONLY
         MVC   STARTTR(3),DS1LSTAR      SET BEYOND END OF DATA SET
         L     R15,=V(EXCP)
         BALR  R14,R15
         NI    FLAGSJJ,FF-FNOREAD       CALL IS COMPLETED
         SPACE 2
DSNAMES2 DS    0H
         MVC   INSERT#1(80),BLANK128    BLANK THE FIRST LINE
         MVI   MTHIGHL,80               80 CHARACTER MESSAGE
         TM    FLAGSJJ,FDSNMSG          MSG ALLOCATION?
         BO    DSNMSG                   YES, BRANCH
         TM    FLAGSJJ,FDSNTSO          TSO ALLOCATION?
         BO    DSNTSO                   YES, BRANCH
         SPACE 1
DSNJCL   MVC   INSERT#1(20),DSNJDSN     ADD "//12345678  DD  DSN="
         MVC   INSERT#1+2(8),DDNAME     MOVE IN THE DDNAME
         LA    R1,INSERT#1+20           DSNAME START POSITION
         MVC   0(44,R1),DSNAME          MOVE IN THE DSNAME
         AH    R1,DSNLEN                LENGTH OF THE DSNAME
         MVC   0(15,R1),DSNJDSND        ADD ",DISP=SHR,UNIT="
         CLI   DSPALLOC,ALLOSHR         DISP=SHR?
         BE    *+10                     YES, BRANCH
         MVC   6(3,R1),=C'OLD'          NO, DISP=OLD
         LH    R15,BYTEUCB              UCBBYTE
         MH    R15,=H'9'                INDEX INTO THE UNIT TABLE
         LA    R15,UNITTBL(R15)         DEVICE UNIT TYPE
         LA    R1,15(,R1)               START OF UNIT DATA
         MVC   0(8,R1),1(R15)           ADD TO THE MESSAGE
         MVI   8(R1),X'40'              ADD A TERMINATOR
         LA    R1,1(,R1)                SCAN
         CLI   0(R1),X'40'                  FOR FIRST
         BNE   *-8                                   BLANK
         MVI   0(R1),C','               ADD A TERMINATOR AND CONTINUE
         M$MSG L220$1
         MVC   INSERT#1(80),BLANK128    BLANK THE SECOND LINE
         MVC   INSERT#1(20),DSNJDCT     "// DCB=(RECFM=, ..."
         IC    R5,FLAGSCC               RECFM BITS
         SLL   R5,29                    DROP TOP BITS
         SRL   R5,29                    REPOSITION
         IC    R5,RECFMTYP(R5)          RECORD FORMAT
         STC   R5,INSERT#1+15           MOVE INTO MESSAGE
         LA    R1,INSERT#1+16
         TM    RECFM,DCBRECBR           RECFM=.B?
         BNO   *+12                     NO, BRANCH
         MVI   0(R1),C'B'
         LA    R1,1(R1)
         TM    RECFM,DCBRECSB           RECFM=.S?
         BNO   *+12                     NO, BRANCH
         MVI   0(R1),C'S'
         LA    R1,1(R1)
         TM    RECFM,DCBRECTO           RECFM=.T?
         BNO   *+12                     NO, BRANCH
         MVI   0(R1),C'T'
         LA    R1,1(R1)
         TM    RECFM,DCBRECCA           RECFM=.A?
         BNO   *+12                     NO, BRANCH
         MVI   0(R1),C'A'
         LA    R1,1(R1)
         TM    RECFM,DCBRECCM           RECFM=.M?
         BNO   *+12                     NO, BRANCH
         MVI   0(R1),C'M'
         LA    R1,1(R1)
         TM    FLAGSCC,RECFMU           RECFM=U?
         BO    DSN010                   YES, NO LRECL
         MVC   0(7,R1),DSNJDCTL         MOVE IN LRECL TEXT
         LA    R1,7(R1)
         LH    R4,LABLRECL
         BAL   R14,DSNCONV
         SPACE 1
DSN010   MVC   0(9,R1),DSNJDCTB
         LA    R1,9(R1)
         LH    R4,BLKSI
         BAL   R14,DSNCONV
         SPACE 1
         SR    R4,R4
         ICM   R4,B'0001',DS1KEYL       ANY KEY LENGTH?
         BZ    DSN020                   NO, BRANCH
         MVC   0(8,R1),DSNJDCTK         ADD ,KEYLEN=
         LA    R1,8(R1)
         BAL   R14,DSNCONV
         SPACE 1
         MVC   0(5,R1),DSNJDCTR         ADD ,RKP=
         LA    R1,5(R1)
         SR    R4,R4
         ICM   R4,B'0011',DS1RKP        RELATIVE KEY POSITION
         BAL   R14,DSNCONV
         SPACE 1
DSN020   TM    OPTCD,X'A4'              ANY OPTCD CHARACTERS?
         BZ    DSN024                   NO, BRANCH
         MVC   0(7,R1),DSNJDCTO         ADD ,OPTCD=
         LA    R1,7(R1)
         TM    OPTCD,DCBOPTW            OPTCD=W?
         BNO   *+12                     NO, BRANCH
         MVI   0(R1),C'W'
         LA    R1,1(R1)
         TM    OPTCD,DCBOPTC            OPTCD=C?
         BNO   *+12                     NO, BRANCH
         MVI   0(R1),C'C'
         LA    R1,1(R1)
         TM    OPTCD,DCBSRCHD           OPTCD=Z?
         BNO   *+12                     NO, BRANCH
         MVI   0(R1),C'Z'
         LA    R1,1(R1)
         SPACE 1
DSN024   TM    DSORG,DS1DSGPO           PARTITIONED?
         BO    DSN030                   NO, BRANCH
         MVC   0(7,R1),DSNJDCTD         ADD ,DSORG=
         IC    R5,DSORG                 DSORG BITS
         SLL   R5,24                    DROP TOP BITS
         SRL   R5,28                    REPOSITION BITS *2
         LA    R5,DSORGTYP(R5)          DSORG
         MVC   7(2,R1),0(R5)            MOVE INTO MESSAGE
         TM    DSORG+1,DS1ACBM          VSAM DATA SET?
         BNO   *+10                     YES, BRANCH
         MVC   7(2,R1),DSNLVS
         LA    R1,9(,R1)                SKIP OVER DSORG TEXT
         TM    DS1DSORG,DS1DSGU         UNMOVEABLE?
         BNO   DSN030                   NO, BRANCH
         MVI   0(R1),C'U'               ADD U
         LA    R1,1(,R1)                SKIP OVER U
         SPACE 1
DSN030   MVC   0(10,R1),DSNJDCTV        ADD ),VOL=SER=
         MVC   10(6,R1),VOLALLOC        ADD THE SERIAL NUMBER
         MVI   10+6(R1),C','
         M$MSG L220$1
         SPACE 1
         MVC   INSERT#1(80),DSNJSPA     //  SPACE= ...
         L     R1,DCBDEBAD-IHADCB+INDCB GET DEB ADDRESS
         LH    R14,NUMEXT               NUMBER OF EXTENTS
         SR    R0,R0
         SR    R15,R15
*
         ICM   R15,3,32+14(R1) <----+   NUMBER OF TRACKS IN EXTENT
         AR    R0,R15               ×   ADD NUMBER OF TRACKS
         LA    R1,16(,R1)           ×   NEXT EXTENT
         BCT   R14,*-4-2-4  --------+   BRANCH FOR ALL EXTENTS
*
         ST    R0,DSNTOTAL              SAVE TOTAL D.S. SIZE IN TRACKS
         SR    R1,R1
         ICM   R1,3,DS1LSTAR            GET TT OF LAST TRACK
         CLC   DS1LSTAR(3),ZERO         ANY ALLOCATION?
         BE    *+8                      NO, BRANCH
         LA    R1,1(,R1)                JUMP FOR COMPUTATION
         SR    R0,R1
         ST    R0,DSNEMPTY              TOTAL FREE SPACE
         SPACE 1
         LA    R1,INSERT#1+DSNJSPAP     PRIMARY SPACE
         L     R4,DSNTOTAL              TOTAL FREE SPACE
         TM    DS1SCALO,X'C0'           CYLINDER ALLOCATION?
         BNO   DSN050                   NO, BRANCH
         MVC   INSERT#1+11(3),=C'CYL'   YES, MARK AS CYLINDER ALLOC.
         LH    R0,DEVTTRKS              TRACKS/CYLINDER
         LR    R5,R0
         BCTR  R5,0                     TRACKS/CYLINDER -1
         AR    R5,R4                    TOTAL+TRK/CYL -1
         SR    R4,R4
         DR    R4,R0                    CEIL(TOTAL+TRK/CYL-1) / TRK/CYL
         LR    R4,R5                    RESULTING QUOTIENT
DSN050   BAL   R14,DSNCONV
         SPACE 1
         SR    R4,R4
         ICM   R4,B'0111',DS1SCALO+1    SECONDARY ALLOCATION?
         BZ    DSN070                   NO, BRANCH
         TM    DS1SCALO,X'80'           TRACK OR CYLINDER ALLOCATION?
         BO    DSN060                   YES, BRANCH
         TM    DS1SCALO,X'40'           AVERAGE BLOCK ALLOCATION?
         BNO   DSN060                   NO, BRANCH
         LH    R14,BLKSI                BLOCKSIZE
         ICM   R14,B'1000',=X'01'       R=1, K=0, DD=BLKSIZE
         TRKCALC FUNCTN=TRKCAP,TYPE=BYTEUCB+1,RKDD=(14),               X
               REGSAVE=YES,MF=(E,PARMLIST)
         LR    R5,R0
         BCTR  R5,0
         AR    R5,R4
         SR    R4,R4
         DR    R4,R0                    CEIL((BUFFERS+#/TRK-1)/(#/TRK))
         LR    R4,R5                    RESULTING QUOTIENT
DSN060   MVI   0(R1),C','               SEPARATOR
         LA    R1,1(,R1)
         BAL   R14,DSNCONV
         SPACE 1
DSN070   TM    DSORG,DS1DSGPO           PARTITIONED DATA SET?
         BNO   DSN080                   NO, BRANCH
         MVI   0(R1),C','               SEPARATOR
         CLC   DS1SCALO+1(3),ZERO       SECONDARY ALLOCATION?
         BNE   *+8                      YES, BRANCH
         LA    R1,1(,R1)                NO, ADD ANOTHER COMMA
         MVI   0(R1),C','               SEPARATOR
         LA    R1,1(,R1)
         L     R4,TOTALLOX              TOTAL DIRECTORY BLOCKS
         BAL   R14,DSNCONV
         SPACE 2
DSN080   MVI   0(R1),C')'               PAIRED PARENTHESIS 1
         MVI   1(R1),C')'               PAIRED PARENTHESIS 2
         TM    DS1SCALO,X'01'           CYLINDER ROUNDING?
         BNO   *+10                     NO, BRANCH
         MVC   1(9,R1),DSNLROUN         YES, MARK IT
         SPACE 1
         LA    R1,INSERT#1+DSNJSPAT     WHERE TO STORE NUMBER FREE
         L     R4,DSNEMPTY              TOTAL FREE TRACKS
         BAL   R14,DSNCONV
         SPACE 1
         TM    DSORG,DS1DSGPO           PARTITIONED?
         BNO   DSN090                   NO, BRANCH
         MVC   0(10,R1),DSNLFREE        FREE DIRECTORY BLOCKS
         LA    R1,10(,R1)               WHERE TO STORE NUMBER FREE
         L     R4,TOTALLOX              TOTAL DIRECTORY BLOCKS
         S     R4,TOTUSEDX              FREE DIRECTORY BLOCKS
         BAL   R14,DSNCONV
DSN090   MVI   0(R1),C'*'               TERMINATOR
         MVI   1(R1),C'/'                         CHARACTERS
         M$MSG L220$1
         B     DSNFIN
         SPACE 3
DSNTSO   MVC   INSERT#1(22),DSNTDSN     ADD "ALLOC F(1234567)  DA('"
         MVC   INSERT#1+8(8),DDNAME     MOVE IN THE DDNAME
         LA    R1,INSERT#1+8            DDNAME START POSITION
         LA    R1,1(,R1)                SCAN
         CLI   0(R1),X'40'                  FOR FIRST
         BNE   *-8                                   BLANK
         MVI   0(R1),C')'               ADD TERMINATOR
         LA    R1,INSERT#1+22           DSNAME START POSITION
         MVC   0(44,R1),DSNAME          MOVE IN THE DSNAME
         AH    R1,DSNLEN                LENGTH OF THE DSNAME
         MVC   0(12,R1),DSNTDSND        ADD "') SHR UNIT("
         CLI   DSPALLOC,ALLOSHR         DISP=SHR?
         BE    *+10                     YES, BRANCH
         MVC   3(3,R1),=C'OLD'          NO, DISP=OLD
         LH    R15,BYTEUCB              UCBBYTE
         MH    R15,=H'9'                INDEX INTO THE UNIT TABLE
         LA    R15,UNITTBL(R15)         DEVICE UNIT TYPE
         LA    R1,12(,R1)               START OF UNIT DATA
         MVC   0(8,R1),1(R15)           ADD TO THE MESSAGE
         MVI   8(R1),X'40'              ADD A TERMINATOR
         LA    R1,1(,R1)                SCAN
         CLI   0(R1),X'40'                  FOR FIRST
         BNE   *-8                                   BLANK
         MVC   0(3,R1),DSNLPAR          ADD A TERMINATOR AND CONTINUE
         M$MSG L210$1
         MVC   INSERT#1(80),BLANK128    BLANK THE SECOND LINE
         MVC   INSERT#1(08),DSNTDCT     "  RECFM("
         IC    R5,FLAGSCC               RECFM BITS
         SLL   R5,29                    DROP TOP BITS
         SRL   R5,29                    REPOSITION
         IC    R5,RECFMTYP(R5)          RECORD FORMAT
         STC   R5,INSERT#1+8            MOVE INTO MESSAGE
         LA    R1,INSERT#1+9
         TM    RECFM,DCBRECBR           RECFM=.B?
         BNO   *+12                     NO, BRANCH
         MVI   1(R1),C'B'
         LA    R1,2(R1)
         TM    RECFM,DCBRECSB           RECFM=.S?
         BNO   *+12                     NO, BRANCH
         MVI   1(R1),C'S'
         LA    R1,2(R1)
         TM    RECFM,DCBRECTO           RECFM=.T?
         BNO   *+12                     NO, BRANCH
         MVI   1(R1),C'T'
         LA    R1,2(R1)
         TM    RECFM,DCBRECCA           RECFM=.A?
         BNO   *+12                     NO, BRANCH
         MVI   1(R1),C'A'
         LA    R1,2(R1)
         TM    RECFM,DCBRECCM           RECFM=.M?
         BNO   *+12                     NO, BRANCH
         MVI   1(R1),C'M'
         LA    R1,2(R1)
         TM    FLAGSCC,RECFMU           RECFM=U?
         BO    DSN310                   YES, NO LRECL
         MVC   0(8,R1),DSNTDCTL         MOVE IN LRECL TEXT
         LA    R1,8(R1)
         LH    R4,LABLRECL
         BAL   R14,DSNCONV
         SPACE 1
DSN310   MVC   0(10,R1),DSNTDCTB
         LA    R1,10(R1)
         LH    R4,BLKSI
         BAL   R14,DSNCONV
         SPACE 1
         SR    R4,R4
         ICM   R4,B'0001',DS1KEYL       ANY KEY LENGTH?
         BZ    DSN320                   NO, BRANCH
         MVC   0(9,R1),DSNTDCTK         ADD ,KEYLEN=
         LA    R1,9(R1)
         BAL   R14,DSNCONV
         SPACE 1
         MVC   0(6,R1),DSNTDCTR         ADD ,RKP=
         LA    R1,6(R1)
         SR    R4,R4
         ICM   R4,B'0011',DS1RKP        RELATIVE KEY POSITION
         BAL   R14,DSNCONV
         SPACE 1
DSN320   TM    OPTCD,X'A4'              ANY OPTCD CHARACTERS?
         BZ    DSN324                   NO, BRANCH
         MVC   0(8,R1),DSNTDCTO         ADD OPTCD(
         LA    R1,8(R1)
         TM    OPTCD,DCBOPTW            OPTCD=W?
         BNO   *+12                     NO, BRANCH
         MVI   0(R1),C'W'
         LA    R1,1(R1)
         TM    OPTCD,DCBOPTC            OPTCD=C?
         BNO   *+12                     NO, BRANCH
         MVI   0(R1),C'C'
         LA    R1,1(R1)
         TM    OPTCD,DCBSRCHD           OPTCD=Z?
         BNO   *+12                     NO, BRANCH
         MVI   0(R1),C'Z'
         LA    R1,1(R1)
         SPACE 1
DSN324   TM    DSORG,DS1DSGPO           PARTITIONED?
         BO    DSN330                   NO, BRANCH
         MVC   0(8,R1),DSNTDCTD         ADD ) DSORG(
         IC    R5,DSORG                 DSORG BITS
         SLL   R5,24                    DROP TOP BITS
         SRL   R5,28                    REPOSITION BITS *2
         LA    R5,DSORGTYP(R5)          DSORG
         MVC   8(2,R1),0(R5)            MOVE INTO MESSAGE
         TM    DSORG+1,DS1ACBM          VSAM DATA SET?
         BNO   *+10                     YES, BRANCH
         MVC   8(2,R1),DSNLVS
         LA    R1,10(,R1)               SKIP OVER DSORG TEXT
         TM    DS1DSORG,DS1DSGU         UNMOVEABLE?
         BNO   DSN330                   NO, BRANCH
         MVI   0(R1),C'U'               ADD U
         LA    R1,1(,R1)                SKIP OVER U
         SPACE 1
DSN330   MVC   0(9,R1),DSNTDCTV         ADD ) VOLUME(
         LA    R1,9(,R1)                START OF UNIT DATA
         MVC   0(6,R1),VOLALLOC         ADD THE SERIAL NUMBER
         MVI   6(R1),X'40'              ADD A TERMINATOR
         LA    R1,1(,R1)                SCAN
         CLI   0(R1),X'40'                  FOR FIRST
         BNE   *-8                                   BLANK
         MVC   0(3,R1),DSNLPAR          ADD A TERMINATOR AND CONTINUE
         M$MSG L210$1
         SPACE 1
         MVC   INSERT#1(80),DSNTSPA     "  TRK SPACE(N ..."
         L     R1,DCBDEBAD-IHADCB+INDCB GET DEB ADDRESS
         LH    R14,NUMEXT               NUMBER OF EXTENTS
         SR    R0,R0
         SR    R15,R15
*
         ICM   R15,3,32+14(R1) <----+   NUMBER OF TRACKS IN EXTENT
         AR    R0,R15               ×   ADD NUMBER OF TRACKS
         LA    R1,16(,R1)           ×   NEXT EXTENT
         BCT   R14,*-4-2-4  --------+   BRANCH FOR ALL EXTENTS
*
         ST    R0,DSNTOTAL              SAVE TOTAL D.S. SIZE IN TRACKS
         SR    R1,R1
         ICM   R1,3,DS1LSTAR            GET TT OF LAST TRACK
         CLC   DS1LSTAR(3),ZERO         ANY ALLOCATION?
         BE    *+8                      NO, BRANCH
         LA    R1,1(,R1)                JUMP FOR COMPUTATION
         SR    R0,R1
         ST    R0,DSNEMPTY              TOTAL FREE SPACE
         SPACE 1
         LA    R1,INSERT#1+DSNTSPAP     PRIMARY SPACE
         L     R4,DSNTOTAL              TOTAL FREE SPACE
         TM    DS1SCALO,X'C0'           CYLINDER ALLOCATION?
         BNO   DSN350                   NO, BRANCH
         MVC   INSERT#1+2(3),=C'CYL'    YES, MARK AS CYLINDER ALLOC.
         LH    R0,DEVTTRKS              TRACKS/CYLINDER
         LR    R5,R0
         BCTR  R5,0                     TRACKS/CYLINDER -1
         AR    R5,R4                    TOTAL+TRK/CYL -1
         SR    R4,R4
         DR    R4,R0                    CEIL(TOTAL+TRK/CYL-1) / TRK/CYL
         LR    R4,R5                    RESULTING QUOTIENT
DSN350   BAL   R14,DSNCONV
         SPACE 1
         SR    R4,R4
         ICM   R4,B'0111',DS1SCALO+1    SECONDARY ALLOCATION?
         BZ    DSN370                   NO, BRANCH
         TM    DS1SCALO,X'80'           TRACK OR CYLINDER ALLOCATION?
         BO    DSN360                   YES, BRANCH
         TM    DS1SCALO,X'40'           AVERAGE BLOCK ALLOCATION?
         BNO   DSN360                   NO, BRANCH
         LH    R14,BLKSI                BLOCKSIZE
         ICM   R14,B'1000',=X'01'       R=1, K=0, DD=BLKSIZE
         TRKCALC FUNCTN=TRKCAP,TYPE=BYTEUCB+1,RKDD=(14),               X
               REGSAVE=YES,MF=(E,PARMLIST)
         LR    R5,R0
         BCTR  R5,0
         AR    R5,R4
         SR    R4,R4
         DR    R4,R0                    CEIL((BUFFERS+#/TRK-1)/(#/TRK))
         LR    R4,R5                    RESULTING QUOTIENT
DSN360   MVI   0(R1),C','               SEPARATOR
         LA    R1,1(,R1)
         BAL   R14,DSNCONV
         SPACE 1
DSN370   MVI   0(R1),C')'               PAIRED PARENTHESIS 1
         LA    R1,1(,R1)
         TM    DSORG,DS1DSGPO           PARTITIONED DATA SET?
         BNO   DSN380                   NO, BRANCH
         MVC   1(4,R1),DSNLDIR          SEPARATOR
         LA    R1,5(,R1)
         L     R4,TOTALLOX              TOTAL DIRECTORY BLOCKS
         BAL   R14,DSNCONV
         MVI   0(R1),C')'               FINAL PARENTHESIS
         SPACE 2
DSN380   LA    R1,INSERT#1+DSNTSPAT     WHERE TO STORE NUMBER FREE
         L     R4,DSNEMPTY              TOTAL FREE TRACKS
         BAL   R14,DSNCONV
         SPACE 1
         TM    DSORG,DS1DSGPO           PARTITIONED?
         BNO   DSN390                   NO, BRANCH
         MVC   0(10,R1),DSNLFREE        FREE DIRECTORY BLOCKS
         LA    R1,10(,R1)               WHERE TO STORE NUMBER FREE
         L     R4,TOTALLOX              TOTAL DIRECTORY BLOCKS
         S     R4,TOTUSEDX              FREE DIRECTORY BLOCKS
         BAL   R14,DSNCONV
DSN390   MVI   0(R1),C'*'               TERMINATOR
         MVI   1(R1),C'/'                         CHARACTERS
         M$MSG L210$1
         B     DSNFIN
         SPACE 3
DSNMSG   MVC   INSERT#1(80),DSNM200H       ADD HEADER
         TM    OPTCD,X'A4'                 ANY OPTCD CHARACTERS?
         BZ    *+10                        NO, BRANCH
         MVC   INSERT#1+10(3),DSNLOPT      ADD OPT
         TM    DSORG,DS1DSGPO              PARTITIONED?
         BO    *+10                        YES, BRANCH
         MVC   INSERT#1+63(7),DSNLDSO      NO, CHANGE THE HEADER
         M$MSG L200$1
         MVC   INSERT#1(80),DSNM200E    ADD DATA LINE
         CLI   DSPALLOC,ALLOSHR         DISP=SHR?
         BE    *+10                     YES, BRANCH
         MVC   INSERT#1+0(3),=C'OLD'    NO, DISP=OLD
         LH    R15,BYTEUCB              UCBBYTE
         MH    R15,=H'9'                INDEX INTO THE UNIT TABLE
         LA    R15,UNITTBL(R15)         DEVICE UNIT TYPE
         MVC   INSERT#1+05(8),1(R15)    DEVICE TYPE TEXT
         TM    OPTCD,X'A4'              ANY OPTCD CHARACTERS?
         BZ    DSN650                   NO, BRANCH
         LA    R1,INSERT#1+10
         TM    OPTCD,DCBOPTW            OPTCD=W?
         BNO   *+12                     NO, BRANCH
         MVI   0(R1),C'W'
         LA    R1,1(R1)
         TM    OPTCD,DCBOPTC            OPTCD=C?
         BNO   *+12                     NO, BRANCH
         MVI   0(R1),C'C'
         LA    R1,1(R1)
         TM    OPTCD,DCBSRCHD           OPTCD=Z?
         BNO   *+12                     NO, BRANCH
         MVI   0(R1),C'Z'
         LA    R1,1(R1)
DSN650   IC    R5,FLAGSCC               RECFM BITS
         SLL   R5,29                    DROP TOP BITS
         SRL   R5,29                    REPOSITION
         IC    R5,RECFMTYP(R5)          RECORD FORMAT
         STC   R5,INSERT#1+14           MOVE INTO MESSAGE
         LA    R1,INSERT#1+15
         TM    RECFM,DCBRECBR           RECFM=.B?
         BNO   *+12                     NO, BRANCH
         MVI   0(R1),C'B'
         LA    R1,1(R1)
         TM    RECFM,DCBRECSB           RECFM=.S?
         BNO   *+12                     NO, BRANCH
         MVI   0(R1),C'S'
         LA    R1,1(R1)
         TM    RECFM,DCBRECTO           RECFM=.T?
         BNO   *+12                     NO, BRANCH
         MVI   0(R1),C'T'
         LA    R1,1(R1)
         TM    RECFM,DCBRECCA           RECFM=.A?
         BNO   *+12                     NO, BRANCH
         MVI   0(R1),C'A'
         LA    R1,1(R1)
         TM    RECFM,DCBRECCM           RECFM=.M?
         BNO   *+12                     NO, BRANCH
         MVI   0(R1),C'M'
         LA    R1,1(R1)
         LH    R4,LABLRECL
         TM    FLAGSCC,RECFMU           RECFM=U?
         BNO   *+6                      NO, BRANCH
         SR    R4,R4                    YES, LRECL IS ZERO
         CVD   R4,DOUBLE                CONVERT TO DECIMAL
         ED    INSERT#1+19(6),DOUBLE+5  CONVERT TO DISPLAY
         LH    R4,BLKSI
         CVD   R4,DOUBLE                CONVERT TO DECIMAL
         ED    INSERT#1+27(6),DOUBLE+5  CONVERT TO DISPLAY
         SPACE 1
         LH    R14,NUMEXT               NUMBER OF EXTENTS
         CVD   R14,DOUBLE
         ED    INSERT#1+33(4),DOUBLE+6  CONVERT TO DISPLAY
         L     R1,DCBDEBAD-IHADCB+INDCB GET DEB ADDRESS
         SR    R0,R0
         SR    R15,R15
*
         ICM   R15,3,32+14(R1) <----+   NUMBER OF TRACKS IN EXTENT
         AR    R0,R15               ×   ADD NUMBER OF TRACKS
         LA    R1,16(,R1)           ×   NEXT EXTENT
         BCT   R14,*-4-2-4  --------+   BRANCH FOR ALL EXTENTS
*
         ST    R0,DSNTOTAL              SAVE TOTAL D.S. SIZE IN TRACKS
         CVD   R0,DOUBLE
         ED    INSERT#1+38(6),DOUBLE+5  CONVERT TO DISPLAY
         SR    R1,R1
         ICM   R1,3,DS1LSTAR            GET TT OF LAST TRACK
         CLC   DS1LSTAR(3),ZERO         ANY ALLOCATION?
         BE    *+8                      NO, BRANCH
         LA    R1,1(,R1)                JUMP FOR COMPUTATION
         SR    R0,R1
         ST    R0,DSNEMPTY              TOTAL FREE SPACE
         SPACE 1
         CVD   R0,DOUBLE
         ED    INSERT#1+46(6),DOUBLE+5  CONVERT TO DISPLAY
         SPACE 1
         SR    R4,R4
         ICM   R4,B'0111',DS1SCALO+1    SECONDARY ALLOCATION?
         BZ    DSN660                   NO, BRANCH
         TM    DS1SCALO,X'80'           TRACK OR CYLINDER ALLOCATION?
         BO    DSN660                   YES, BRANCH
         TM    DS1SCALO,X'40'           AVERAGE BLOCK ALLOCATION?
         BNO   DSN660                   NO, BRANCH
         LH    R14,BLKSI                BLOCKSIZE
         ICM   R14,B'1000',=X'01'       R=1, K=0, DD=BLKSIZE
         TRKCALC FUNCTN=TRKCAP,TYPE=BYTEUCB+1,RKDD=(14),               X
               REGSAVE=YES,MF=(E,PARMLIST)
         LR    R5,R0
         BCTR  R5,0
         AR    R5,R4
         SR    R4,R4
         DR    R4,R0                    CEIL((BUFFERS+#/TRK-1)/(#/TRK))
         LR    R4,R5                    RESULTING QUOTIENT
DSN660   CVD   R4,DOUBLE
         ED    INSERT#1+52(6),DOUBLE+5  CONVERT TO DISPLAY
         SPACE 1
         TM    DS1SCALO,X'C0'           CYLINDER ALLOCATION?
         BNO   *+10                     NO, BRANCH
         MVC   INSERT#1+59(3),=C'CYL'   YES, MARK AS CYLINDER ALLOC.
         SPACE 1
         TM    DSORG,DS1DSGPO           PARTITIONED?
         BO    DSN680                   NO, BRANCH
         LA    R1,INSERT#1+63           WHERE TO ADD DSORG DATA
         MVC   0(8,R1),BLANKS           BLANK THE EDIT DATA
         IC    R5,DSORG                 DSORG BITS
         SLL   R5,24                    DROP TOP BITS
         SRL   R5,28                    REPOSITION BITS *2
         LA    R5,DSORGTYP(R5)          DSORG
         MVC   0(2,R1),0(R5)            MOVE INTO MESSAGE
         TM    DSORG+1,DS1ACBM          VSAM DATA SET?
         BNO   *+10                     YES, BRANCH
         MVC   0(2,R1),DSNLVS
         TM    DS1DSORG,DS1DSGU         UNMOVEABLE?
         BNO   DSN690                   NO, BRANCH
         MVI   2(R1),C'U'               ADD U
         B     DSN690
         SPACE 1
DSN680   L     R4,TOTALLOX              TOTAL DIRECTORY BLOCKS
         S     R4,TOTUSEDX              FREE DIRECTORY BLOCKS
         CVD   R4,DOUBLE
         ED    INSERT#1+62(8),DOUBLE+4  CONVERT TO DISPLAY
         SPACE 1
DSN690   M$MSG L200$1
         SPACE 2
DSNFIN   MVI   MTHIGHL,8                RESET THE INSERT LENGTH
         M$ERRST MSGBLANK               ONE BLANK LINE
         SPACE 1
         TM    DDNAMEN,X'80'            ANY NON-PARTITIONED MESSAGE?
         BNO   DSNFIN4                  NO, BRANCH
         M$MSG L530                     NOT PARTITIONED WARNING
         M$ERRST MSGBLANK               ONE BLANK LINE
         NI    DDNAMEN,FF-X'80'         RESET TOP BIT
DSNFIN4  CLI   DDNAMEN,0                ANY N OF M MESSAGE?
         BER   R2                       NO, BRANCH
         SR    R15,R15
         IC    R15,DDNAMEN
         CVD   R15,DOUBLE
         MVI   MTHIGHL,2
         MVC   FULLWORD(4),=X'40202120'
         ED    FULLWORD(4),DOUBLE+6
         MVC   INSERT#1(2),FULLWORD+2
         SR    R15,R15
         IC    R15,DDNAMEM
         CVD   R15,DOUBLE
         MVI   MTHIGHL+4,2             LENGTH OF THE STANDARD INSERT
         MVC   FULLWORD(4),=X'40202120'
         ED    FULLWORD(4),DOUBLE+6
         MVC   INSERT#2(2),FULLWORD+2
         M$MSG L194$2
         M$ERRST MSGBLANK               ONE BLANK LINE
         MVI   MTHIGHL,8                RESET THE INSERT LENGTH
         MVI   MTHIGHL+4,8              RESET THE INSERT LENGTH
         MVI   DDNAMEN,0
         BR    R2
         SPACE 3
DSNCONV  CVD   R4,DOUBLE
         MVC   FULLWORD(4),DOUBLE+4
         UNPK  DOUBLE(7),FULLWORD(4)
         LA    R4,DOUBLE-1
         LA    R4,1(R4)
         CLI   0(R4),C'0'
         BE    *-8
         OI    DOUBLE+6,X'F0'
DSNMOVE  MVC   0(1,R1),0(R4)
         LA    R1,1(R1)
         TM    1(R4),X'F0'
         LA    R4,1(R4)
         BO    DSNMOVE
         BR    R14
         SPACE 1
DSNTDSN  DC    C'ALLOC F(1234567)  DA('''') SHR UNIT('
DSNTDSND EQU   DSNTDSN+22,12
         SPACE 1
DSNTDCT  DC    C'  RECFM() LRECL() BLKSIZE() DSORG(**) KEYLEN() RKP() OX
               PTCD() VOLUME('
DSNTDCTL EQU   DSNTDCT+8,8
DSNTDCTB EQU   DSNTDCT+8+8,10
DSNTDCTD EQU   DSNTDCT+8+8+10,10
DSNTDCTK EQU   DSNTDCT+8+8+10+10,9
DSNTDCTR EQU   DSNTDCT+8+8+10+10+9,6
DSNTDCTO EQU   DSNTDCT+8+8+10+10+9+6,8
DSNTDCTV EQU   DSNTDCT+8+8+10+10+9+6+8,9
         SPACE 1
DSNTSPA  DC    CL80'  TRK SPACE(N                            /*FREE TRKX
               =N'
DSNTSPAP EQU   12,4
DSNTSPAT EQU   52,7
         SPACE 2
DSNJDSN  DC    C'//12345678  DD  DSN=,DISP=SHR,UNIT='
DSNJDSND EQU   DSNJDSN+20,15
         SPACE 1
DSNJDCT  DC    C'//  DCB=(RECFM=,LRECL=,BLKSIZE=,DSORG=**,KEYLEN=,RKP=,X
               OPTCD=),VOL=SER='
DSNJDCTL EQU   DSNJDCT+15,7
DSNJDCTB EQU   DSNJDCT+15+7,9
DSNJDCTD EQU   DSNJDCT+15+7+9,9
DSNJDCTK EQU   DSNJDCT+15+7+9+9,8
DSNJDCTR EQU   DSNJDCT+15+7+9+9+8,5
DSNJDCTO EQU   DSNJDCT+15+7+9+9+8+5,7
DSNJDCTV EQU   DSNJDCT+15+7+9+9+8+5+7,10
         SPACE 1
DSNJSPA  DC    CL80'//  SPACE=(TRK,(N                        /*FREE TRKX
               =N'
DSNJSPAP EQU   16,4
DSNJSPAT EQU   52,7
         SPACE 1
DSNM200H DC    CL80'DISP UNIT     RECFM LRECL BLKSIZE   ALLOCTRK FREETRX
               K SECONDARY FREEDIR'                   123X 12345
DSNM200E DC    CL80'SHR                                  X             X
                       TRK        '
         ORG   DSNM200E+19
         DC    X'402020202120'
         ORG   DSNM200E+27
         DC    X'402020202120'
         ORG   DSNM200E+33
         DC    X'40202120'
         ORG   DSNM200E+38
         DC    X'402020202120'
         ORG   DSNM200E+46
         DC    X'402020202120'
         ORG   DSNM200E+52
         DC    X'402020202120'
         ORG   DSNM200E+62
         DC    X'4020202020202120'
         ORG   ,
DSNLFREE DC    C',FREE DIR='
DSNLROUN DC    C',,,ROUND)'
DSNLDSO  DC    CL7'DSORG'
DSNLDIR  DC    C'DIR('
DSNLOPT  DC    C'OPT'
DSNLPAR  DC    C') -'
DSNLVS   DC    C'VS'
DSORGTYP DC    C'**DAPS??IS'              DSORG=.. TEXT
RECFMTYP DC    C'*FV?U'                   RECFM=. TEXT
ALLOOLD  EQU   X'01'
ALLOMOD  EQU   X'02'
ALLOSHR  EQU   X'08'
         DROP  R6
