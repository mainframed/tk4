         TITLE 'ISPF - OUTPUT LV 1 SUBROUTINE'
***  EXTRACT THE CURRENT ISPMODE/MEMLIST TABLE                ABL JUN85
ISPDISPT DS    0H                                             ABL JUN85
         USING *,R4
         MVC   SPFMSGID(8),ISPBLK8   TURN OFF MESSAGES
         MVC   SPFCURSR(8),ISPBLK8   TURN OFF CURSOR NAME
         NI    HFLAGSDD,FF-X'02'     NO OPEN YET
ISPD020  OI    ##ADRPA#,$A+$D        IGNORE ATTENTION NOW
         NI    HFLAGSDD,FF-X'01'     NO ATTRIBUTES
         BAL   R2,REFCHECK           CONDITIONAL REFRESH      ABL JAN87
         LA    R14,ISPDISP           DISPLAY TABLE
         LA    R15,ISPDEXN           PANEL NAME
         LA    R0,ISPBLK8            NO MSG                    SS NOV86
         CLC   SPFMSGID(4),ISPPDSM   ANY MSG
         BNE   ISPD030
         LA    R0,SPFMSGID
*  ALWAYS SPECIFY PANEL ID              *                      SS DEC87
*        CLC   SPFPANPR(8),0(R15)    SAME PANEL AS LAST TIME?
*        BNE   ISPD030               NO, BRANCH
*        LA    R15,ISPBLK8           YES, NULLIFY PANEL NAME   SS NOV86
ISPD030  MVC   SPFPANPR(8),ISPDEXN   SAVE LAST PANEL NAME
         LA    R1,SPFCURSR           DEFAULT CURSOR POSITIONING
         STM   R14,R1,PARMLIST
         OI    PARMLIST+12,X'80'
         LA    R1,PARMLIST
         L     R15,ISPLINK
         BALR  R14,R15
         MVC   SPFMSGID(8),ISPBLK8   TURN OFF MESSAGES
         MVC   SPFCURSR(8),ISPBLK8   TURN OFF CURSOR NAME
         LTR   R15,R15               PF3/PF4 HIT?
         BNZ   ISPD900               YES, BRANCH
         SPACE 2
         LA    R14,ISPDDSNL          SET OUT LOCATION
         LA    R15,44                SET LENGTH
         LA    R0,SPFDDSN            SET OUTPUT VARIABLE NAME
         BAL   R2,ISPDVCOP           COPY INTO STORAGE
         SPACE 1
         LA    R14,ISPDMEML          SET OUT LOCATION
         LA    R15,8                 SET LENGTH
         LA    R0,SPFDMEM            SET OUTPUT VARIABLE NAME
         BAL   R2,ISPDVCOP           COPY INTO STORAGE
         SPACE 1
         LA    R14,ISPDDESL          SET OUT LOCATION
         LA    R15,8                 SET LENGTH
         LA    R0,SPFDDEST           SET OUTPUT VARIABLE NAME
         BAL   R2,ISPDVCOP           COPY INTO STORAGE
         SPACE 1
         LA    R14,ISPDFORL          SET OUT LOCATION
         LA    R15,4                 SET LENGTH
         LA    R0,SPFDFORM           SET OUTPUT VARIABLE NAME
         BAL   R2,ISPDVCOP           COPY INTO STORAGE
         SPACE 1
         LA    R14,ISPDDISL          SET OUT LOCATION
         LA    R15,1                 SET LENGTH
         LA    R0,SPFDDISP           SET OUTPUT VARIABLE NAME
         BAL   R2,ISPDVCOP           COPY INTO STORAGE
         SPACE 1
         LA    R14,ISPDSYSP          SET OUT LOCATION
         LA    R15,1                 SET LENGTH
         LA    R0,SPFDSOUT           SET OUTPUT VARIABLE NAME
         BAL   R2,ISPDVCOP           COPY INTO STORAGE
         SPACE 1
         LA    R14,ISPDNUM           SET OUT LOCATION
         LA    R15,2                 SET LENGTH
         LA    R0,SPFDNUM            SET OUTPUT VARIABLE NAME
         BAL   R2,ISPDVCOP           COPY INTO STORAGE
         SPACE 3
         LA    R1,M99RBPTR              DYNAMIC ALLOCATION
         XC    M99RBPTR(40),M99RBPTR    CLEAR THE WORK AREA
         LA    R1,M99RBPTR              DYNAMIC ALLOCATION
         USING S99RBP,R1
         SPACE 1
         LA    R14,M99RB
         USING S99RB,R14
         ST    R14,S99RBPTR
         OI    S99RBPTR,S99RBPND        MARK END OF LIST
         SPACE 1
         LA    R15,M99TUPL
         USING S99TUPL,R15
         MVI   S99RBLN,20               LENGTH 20
         MVI   S99VERB,S99VRBAL         ALLOCATE
         ST    R15,S99TXTPP             POINT TO TEXT POINTERS
         LA    R2,WORKTBL                        START OF TEXT
         SPACE 1
         MVC   0(L'ISPDDDNA,R2),ISPDDDNA         SPECIFY DDNAME TEXT
         ST    R2,S99TUPTR                       POINT TO TEXT UNIT
         LA    R2,L'ISPDDDNA(,R2)                START OF NEXT TEXT
         SPACE 1
         LA    R15,4(,R15)                       NEXT POINTER ELEMENT
         MVC   0(L'ISPDDSOR,R2),ISPDDSOR         SPECIFY DSORG TEXT
         ST    R2,S99TUPTR                       POINT TO TEXT UNIT
         LA    R2,L'ISPDDSOR(,R2)                START OF NEXT TEXT
         SPACE 1
         LA    R15,4(,R15)                       NEXT POINTER ELEMENT
         MVC   0(L'ISPDFREE,R2),ISPDFREE         SPECIFY FREE TEXT
         ST    R2,S99TUPTR                       POINT TO TEXT UNIT
         LA    R2,L'ISPDFREE(,R2)                START OF NEXT TEXT
         SPACE 1
         MVC   SPFCURSR(8),ISPDSYSP              SYSOUT VARIABLE
         CLI   SPFDSOUT,X'40'                    DSNAME ALLOCATION?
         BH    ISPD080                           NO, BRANCH
         OI    S99FLG11,S99NOCNV                 NO CONVERT   ABL JAN87
         MVC   SPFCURSR(8),ISPDDSNP              DSNAME VARIABLE
         LA    R15,4(,R15)                       NEXT POINTER ELEMENT
         MVC   0(L'ISPDDSNA,R2),ISPDDSNA         SPECIFY DSNAME TEXT
         MVC   6(44,R2),SPFDDSN                  SPECIFY DSNAME
         ST    R2,S99TUPTR                       POINT TO TEXT UNIT
         LA    R2,L'ISPDDSNA+44(,R2)             START OF NEXT TEXT
         SPACE 1
         CLI   SPFDMEM,X'41'                     ANY MEMBER?
         BL    ISPD050                           NO, BRANCH
         LA    R15,4(,R15)                       NEXT POINTER ELEMENT
         MVC   0(L'ISPDMEMB,R2),ISPDMEMB         SPECIFY MEMBER TEXT
         MVC   6(8,R2),SPFDMEM                   SPECIFY MEMBER
         ST    R2,S99TUPTR                       POINT TO TEXT UNIT
         LA    R2,L'ISPDMEMB(,R2)                START OF NEXT TEXT
         SPACE 1
ISPD050  LA    R15,4(,R15)                       NEXT POINTER ELEMENT
         MVC   0(L'ISPDALLO,R2),ISPDALLO         SPECIFY DISP=OLD
         CLI   SPFDDISP,C'S'                     SHR?
         BNE   *+8                               NO, BRANCH
         MVI   6(R2),ISPDSHR                     SPECIFY DISPOSITION
         CLI   SPFDDISP,C'M'                     MOD?
         BNE   *+8                               NO, BRANCH
         MVI   6(R2),ISPDMOD                     SPECIFY DISPOSITION
         CLI   SPFDDISP,C'N'                     NEW?
         BNE   *+8                               NO, BRANCH
         MVI   6(R2),ISPDNEW                     SPECIFY DISPOSITION
         ST    R2,S99TUPTR                       POINT TO TEXT UNIT
         LA    R2,L'ISPDALLO(,R2)                START OF NEXT TEXT
         SPACE 1
         CLI   SPFDDISP,C'O'                     OLD?
         BE    ISPD070                           YES, BRANCH
         CLI   SPFDDISP,C'S'                     SHR?
         BE    ISPD070                           YES, BRANCH
         LA    R15,4(,R15)                       NEXT POINTER ELEMENT
         MVC   0(L'ISPDFIRS,R2),ISPDFIRS         SPECIFY PRIMARY
         ST    R2,S99TUPTR                       POINT TO TEXT UNIT
         LA    R2,L'ISPDFIRS(,R2)                START OF NEXT TEXT
         SPACE 1
         LA    R15,4(,R15)                       NEXT POINTER ELEMENT
         MVC   0(L'ISPDSECO,R2),ISPDSECO         SPECIFY SECONDARY
         ST    R2,S99TUPTR                       POINT TO TEXT UNIT
         LA    R2,L'ISPDSECO(,R2)                START OF NEXT TEXT
         SPACE 1
         LA    R15,4(,R15)                       NEXT POINTER ELEMENT
         MVC   0(L'ISPDTRK,R2),ISPDTRK           SPECIFY TRACK ALLOC
         ST    R2,S99TUPTR                       POINT TO TEXT UNIT
         LA    R2,L'ISPDTRK(,R2)                 START OF NEXT TEXT
         SPACE 1
         CLI   SPFDMEM,X'41'                     ANY MEMBER NAME?
         BL    ISPD070                           NO, BRANCH
         LA    R15,4(,R15)                       NEXT POINTER ELEMENT
         MVC   0(L'ISPDDIR,R2),ISPDDIR           SPECIFY DIRECTORY BLKS
         ST    R2,S99TUPTR                       POINT TO TEXT UNIT
         LA    R2,L'ISPDDIR(,R2)                 START OF NEXT TEXT
         SPACE 1
ISPD070  LA    R15,4(,R15)                       NEXT POINTER ELEMENT
         MVC   0(L'ISPDNORM,R2),ISPDNORM         SPECIFY DISP=(,CATLG)
         ST    R2,S99TUPTR                       POINT TO TEXT UNIT
         LA    R2,L'ISPDNORM(,R2)                START OF NEXT TEXT
         SPACE 1
         LA    R15,4(,R15)                       NEXT POINTER ELEMENT
         MVC   0(L'ISPDANOR,R2),ISPDANOR         SPECIFY DISP=(,,KEEP)
         ST    R2,S99TUPTR                       POINT TO TEXT UNIT
         B     ISPD110
         SPACE 1
ISPD080  CLI   SPFDFORM,X'41'                    ANY FORM?
         BL    ISPD090                           NO, BRANCH
         LA    R15,4(,R15)                       NEXT POINTER ELEMENT
         MVC   0(L'ISPDFORM,R2),ISPDFORM         SPECIFY FORMS TEXT
         MVC   6(4,R2),SPFDFORM                  SPECIFY FORM NAME
         ST    R2,S99TUPTR                       POINT TO TEXT UNIT
         LA    R2,L'ISPDFORM(,R2)                START OF NEXT TEXT
         SPACE 1
ISPD090  CLI   SPFDDEST,X'41'                    ANY DEST?
         BL    ISPD095                           NO, BRANCH
         LA    R15,4(,R15)                       NEXT POINTER ELEMENT
         MVC   0(L'ISPDDEST,R2),ISPDDEST         SPECIFY DEST TEXT
         MVC   6(8,R2),SPFDDEST                  SPECIFY DESTINATION
         ST    R2,S99TUPTR                       POINT TO TEXT UNIT
         LA    R2,L'ISPDDEST(,R2)                START OF NEXT TEXT
         SPACE 1
ISPD095  CLC   SPFDNUM(2),=C'01'                 ANY COPY NUMBER
         BE    ISPD100                           NO, BRANCH
         LA    R15,4(,R15)                       NEXT POINTER ELEMENT
         MVC   0(L'ISPDNUMC,R2),ISPDNUMC         SPECIFY COPIES TEXT
         CLI   SPFDNUM+1,X'40'                   SECOND DIGIT BLANK?
         BH    ISPD096                           NO, BRANCH
         MVC   SPFDNUM+1(1),SPFDNUM              SLIDE FIRST DIGIT DOWN
         MVI   SPFDNUM,C'0'                      ADD A LEADING ZERO
ISPD096  PACK  DOUBLE(8),SPFDNUM(2)              CONVERT TO PACKED
         CVB   R0,DOUBLE                         CONVERT TO BINARY
         STC   R0,6(,R2)                         SPECIFY THE COUNT
         ST    R2,S99TUPTR                       POINT TO TEXT UNIT
         LA    R2,L'ISPDNUMC(,R2)                START OF NEXT TEXT
         SPACE 1
ISPD100  LA    R15,4(,R15)                       NEXT POINTER ELEMENT
         MVC   0(L'ISPDSYSO,R2),ISPDSYSO         SPECIFY SYSOUT TEXT
         MVC   6(1,R2),SPFDSOUT                  SPECIFY SYSOUT CLASS
         ST    R2,S99TUPTR                       POINT TO TEXT UNIT
         SPACE 1
ISPD110  OI    S99TUPTR,X'80'                    MARK END OF LIST
         DYNALLOC
         SPACE 2
         DROP  R1,R14,R15
         MVC   DDNAMEH,WORKTBL+6        SAVE DDNAME
         LTR   R15,R15                  SUCCESSFUL?
         BZ    ISPD120                  YES, BRANCH
         SPACE 2
         LA    R14,M99RB                POINTER TO SVC 99 BLOCK
         ST    R15,DAIRRC               RETURN CODE
         LA    R15,DAIRRC               POINTER TO RETURN CODE
         LA    R0,ADDRFF02              POINTER TO A(IKJEFF02)
         LA    R1,=AL2(DFSVC99)         POINTER TO INVOCATION TYPE
         L     R2,ADDRCPPL              POINTER TO THE CPPL
         STM   R14,R2,DFDAPLP           INITIALIZE DFDAPLP, DFDRCP,
*                                         DFJEFF02, DFIDP AND DFCPPLP
         SPACE 1
         LINK  EP=IKJEFF18,MF=(E,DFPARMS)
         MVC   SPFMSGID(8),ISPD701X     ERROR MESSAGE
         LTR   R15,R15                  PROBLEM WITH IKJEFF18?
         BNZ   ISPD020                  YES, BRANCH
         B     ISPD020
         SPACE 2
ISPD120  CLI   SPFDSOUT,X'40'           SYSOUT ALLOCATION?
         BH    ISPD180                  YES, BRANCH
         CLI   WORKTBL+14+6,DS1DSGPO    PARTITIONED?
         BNE   ISPD130                  NO, BRANCH
         CLI   SPFDMEM,X'41'            ANY MEMBER NAME?
         BL    ISPD170                  NO, ERROR
         B     ISPD180
         SPACE 1
ISPD130  CLI   WORKTBL+14+6,DS1DSGPS    SEQUENTIAL?
         BNE   ISPD170                  NO, ERROR
         CLI   SPFDMEM,X'41'            ANY MEMBER NAME?
         BL    ISPD180                  NO, ERROR
         SPACE 1
ISPD170  MVC   SPFMSGID(8),ISPD702X     ERROR MESSAGE
         B     ISPD020
         SPACE 2
*** OPEN THE SYSOUT/DATA SET
ISPD180  MVC   BAMDCB(ISPDDCBL),ISPDDCB      CONSTRUCT A DCB
         MVC   DCBDDNAM-IHADCB+BAMDCB(8),DDNAMEH
         MVI   OPENLIST,X'80'
         OPEN  (BAMDCB,(OUTPUT)),MF=(E,OPENLIST)
         TM    DCBOFLGS-IHADCB+BAMDCB,X'10'  OPEN ALREADY
         BNO   ISPD190                       NO, ERROR
         OI    HFLAGSDD,X'02'                OPEN NOW
         TM    HFLAGSDD,X'01'                OPEN WITH GOOD VALUES?
         BO    ISPD200                       YES, BRANCH
         MVI   OPENLIST,X'80'
         CLOSE (BAMDCB),MF=(E,OPENLIST)
ISPD190  MVC   SPFMSGID(8),ISPD703X     ERROR MESSAGE
         B     ISPD020
         SPACE 2
*** OUTPUT THE DATA
ISPD200  DS    0H
         BAL   R2,ISPMVTBL              GET INFO               SS AUG86
         LA    R15,4(,R15)              ALTERNATE ENTRY        SS AUG86
         ST    R15,SPFTSV1              TEMPORY SAVE ADDRESS   SS AUG86
         ST    R14,SPFTSV2              ALSO SAVE TITLE ADDR   SS AUG86
         MVC   SPFTSVX,10(R1)           ALSO SAVE TITLE COUNT  SS AUG86
         MVC   SPFTSVC,11(R1)           ALSO SAVE HEADER TYPE ABL FEB87
         SR    R0,R0                    *                      SS AUG86
         IC    R0,9(R1)                 GET LENGTH             SS AUG86
         STH   R0,SPFTSVH               SAVE LENGTH            SS AUG86
*
         STM   R14,R8,MSGTEXT1              SAVE ENTRY REGS   ABL FEB87
         L     R8,ISPDTIME                  TIME ROUTINE      ABL FEB87
         MVI   ##SUBCOM,C'N'                NOT "TIME"        ABL FEB87
         BALR  R2,R8                        CALL TIME ROUTINE ABL FEB87
         LM    R14,R8,MSGTEXT1              RESET ENTRY REGS  ABL FEB87
*
         MVI   MSGTEXT1+4,X'40'                               ABL FEB87
         MVC   MSGTEXT1+5(79),MSGTEXT1+4    CLEAR MSGTEXT1    ABL FEB87
         SR    R1,R1                                          ABL FEB87
         IC    R1,SPFTSVC                   HEADER TYPE       ABL FEB87
         SLL   R1,5                         TIMES 32          ABL FEB87
         LA    R1,ISPDHEAD(R1)              INDEX TO HEADER   ABL FEB87
         MVC   MSGTEXT1+4(32),0(R1)         MOVE IN HEADER    ABL FEB87
         MVC   MSGTEXT1+41(42),MSGTEXT2+4   MOVE IN TIME/DATE ABL FEB87
         LA    R0,MSGTEXT1+4                TIME HEADER MSG   ABL FEB87
         PUT   BAMDCB,(0)                                     ABL FEB87
*
         MVI   MSGTEXT1+4,X'40'                               ABL FEB87
         MVC   MSGTEXT1+5(79),MSGTEXT1+4    CLEAR MSGTEXT1    ABL FEB87
         LA    R0,MSGTEXT1+4                BLANK LINE        ABL FEB87
         PUT   BAMDCB,(0)                                     ABL FEB87
*
         CLI   SPFTSVC,3                    LISTA?            ABL FEB87
         BE    ISPD250                      YES, BRANCH       ABL FEB87
         CLI   SPFTSVC,4                    LISTV?            ABL FEB87
         BE    ISPD250                      YES, BRANCH       ABL FEB87
         LA    R15,FIRST4K                                    ABL JUL86
         LA    R0,SPFDSNMG-FIRST4K(R15)     DSN AND VOL MSG   ABL JUL86
         PUT   BAMDCB,(0)                                     ABL JUL86
ISPD250  DS    0H                                             ABL FEB87
*
         LA    R14,TBTOP                    TBTOP
         LA    R15,SPFTBL                   TABLE ADDRESS
         STM   R14,R15,PARMLIST
         OI    PARMLIST+4,X'80'
         LA    R1,PARMLIST
         L     R15,ISPLINK
         BALR  R14,R15
         SPACE 2
         L     R0,RECOVER                   CURRENT RECOVERY ADDRESS
         STM   R14,R8,WORKTBL               SAVE ENTRY REGISTERS
         LA    R0,ISPD500                   LOCAL RECOVERY ADDRESS
         ST    R0,RECOVER
         OI    ##ADRPA#,$Q                  QUIET MODE IF ABEND
         SPACE 1
*  THIS IS CONTROLLED BY PANEL TABLE                           SS NOV85
         L     R0,SPFTSV2               GET TITLE ADDRESS     ABL FEB87
         SPACE 1
         CLI   SPFTSVX,1                ONE OR MORE TITLES    ABL FEB87
         BL    ISPD300                  NO                    ABL FEB87
         PUT   BAMDCB,(0)
         SPACE 1
         CLI   SPFTSVX,2                TWO OR MORE TITLES     SS AUG86
         BL    ISPD300                  NO                     SS AUG86
         L     R0,SPFTSV2               GET TITLE ADDRESS      SS AUG86
         AH    R0,SPFTSVH               ADD LENGTH             SS AUG86
         PUT   BAMDCB,(0)
         CLI   SPFTSVX,3                THREE TITLES           SS AUG86
         BL    ISPD300                  NO                     SS AUG86
         L     R0,SPFTSV2               GET TITLE ADDRESS      SS AUG86
         AH    R0,SPFTSVH               ADD LENGTH             SS AUG86
         AH    R0,SPFTSVH               ADD LENGTH             SS AUG86
         PUT   BAMDCB,(0)
         SPACE 2
ISPD300  LA    R14,TBSKIP                   TBSKIP
         LA    R15,SPFTBL                   TABLE ADDRESS
         STM   R14,R15,PARMLIST
         OI    PARMLIST+4,X'80'
         LA    R1,PARMLIST
         L     R15,ISPLINK
         BALR  R14,R15
         LTR   R15,R15                      END OF DATA?
         BNZ   ISPD600                      NO, BRANCH
         SPACE 2
*   OUTPUT FORMATING RTNS NOW SEPARATE SUBROUTINES             SS AUG86
         L     R15,SPFTSV1              FORMAT RTN ADDRESS     SS AUG86
ISPD420  LA    R1,WORKTBL+80            *                      SS AUG86
         MVI   0(R1),C' '               BLANK                  SS AUG86
         MVC   1(79,R1),0(R1)           RIPPLE                 SS AUG86
         BALR  R2,R15                   MOVE ROUTINE           SS AUG86
         LR    R2,R15                   SAVE NEXT RTN ADDR     SS AUG86
         LR    R0,R1
         PUT   BAMDCB,(0)
         LTR   R15,R2                   NEXT RTN IF ANY        SS AUG86
         BNZ   ISPD420                  YES                    SS AUG86
         B     ISPD300                  NEXT TABLE ENTRY       SS AUG86
         SPACE 1
ISPD500  LM    R14,R8,WORKTBL               RESET ENTRY REGISTERS
         ST    R0,RECOVER                   RESET THE RECOVERY ADDRESS
         NI    ##ADRPA#,FF-$Q               RESET QUIET MODE
         MVC   SPFMSGID(8),ISPD704X         ERROR MESSAGE
         MVI   OPENLIST,X'80'
         TM    DCBOFLGS-IHADCB+BAMDCB,X'10'  STILL OPEN?
         BNO   ISPD020                       NO, BRANCH
         CLOSE (BAMDCB),MF=(E,OPENLIST)
         B     ISPD020
         SPACE 2
*** CLOSE THE SYSOUT/DSNAME DATA SET
ISPD600  MVI   OPENLIST,X'80'
         CLOSE (BAMDCB),MF=(E,OPENLIST)
         LM    R14,R1,WORKTBL               RELOAD CHANGED REGISTERS
         ST    R0,RECOVER                   RESET THE RECOVERY ADDRESS
         MVC   SPFMSGID(8),ISPD705X         COMPLETED MESSAGE
         SPACE 1
ISPD900  NI    ##ADRPA#,FF-$Q-$A-$D         RESET QUIET MODE/ATTN
         BAL   R2,REFSAVE                   TPIN, TPOUT COUNT ABL JAN87
         LA    R15,40                       RETURN TO ISPDISP6 SS NOV85
         BR    R3                           WILL NOT RESTART   SS JUL85
         SPACE 3
         USING IHADCB,R1
*** DCB OPEN EXIT
ISPD980  SR    R15,R15
         CH    R15,DCBDSORG                  ANY DSORG?
         BNE   *+8                           YES, BRANCH
         OI    DCBDSORG,DS1DSGPS             NO, USE DSORG=PS
         TM    DCBDSORG,DS1DSGPS             DSORG=PS?
         BNOR  R14                           NO, ERROR
         CLI   DCBRECFM,0                    ANY RECFM?
         BNE   *+8                           YES, BRANCH
         MVI   DCBRECFM,DCBRECF+DCBRECBR     NO, USE RECFM=FB
         TM    DCBRECFM,DCBRECF+DCBRECV      RECFM=F. OR RECFM=V.?
         BNMR  R14                           NO, ERROR
         LA    R0,80                         DEFAULT LRECL
         TM    DCBRECFM,DCBRECV              RECFM=V.?
         BOR   R14                           YES, ERROR
         CH    R15,DCBLRECL                  ANY LRECL?
         BNE   *+8                           YES, BRANCH
         STH   R0,DCBLRECL                   NO, USE LRECL=80
         CH    R0,DCBLRECL                   LRECL=80?
         BNER  R14                           NO, ERROR
         LA    R0,3120                       DEFAULT BLKSIZE
         CH    R15,DCBBLKSI                  ANY BLKSIZE?
         BNE   *+8                           YES, BRANCH
         STH   R0,DCBBLKSI                   NO, USE BLKSIZE=3120
         OI    HFLAGSDD,X'01'                ALL ATTRIBUTES ARE CORRECT
         BR    R14
         DROP  R1
         SPACE 2
ISPDVCOP LA    R1,VCOPY              COPY VARIABLE VALUES
         ST    R1,PARMLIST
*        LA    R14,XXXXXX            GET FIRST VARIABLE
*        L     R15,YYYYYY            SET LENGTH
         ST    R15,SPFFIXED
         LA    R15,SPFFIXED
*        LA    R0,ZZZZZZ             SET OUTPUT VARIABLE NAME
         LA    R1,ISPMOVE
         STM   R14,R1,PARMLIST+4
         OI    PARMLIST+16,X'80'
         LA    R1,PARMLIST
         L     R15,ISPLINK
         BALR  R14,R15
         C     R15,ISPL8                                       SS NOV85
         BH    ISPERR                                          SS NOV85
         BR    R2
         SPACE 2
         LTORG  ,                                              SS NOV85
         SPACE 2                                               SS NOV85
         PRINT NOGEN
ISPDDCB  DCB   DSORG=PS,DDNAME=PDSLOG,MACRF=(PM),EXLST=ISPDXIT
ISPDDCBL EQU   *-ISPDDCB
         PRINT GEN
         SPACE 2
ISPDXIT  DC    0F'0',X'85',AL3(ISPD980)      OPEN EXIT ONLY
ISPDTIME DC    V(TIME)                       TIME ROUTINE
ISPDDSNL DC    C'EXTRDSN '
ISPDMEML DC    C'MEMBER '
ISPDDESL DC    C'PDSPDEST '
ISPDFORL DC    C'PDSPFORM '
ISPDDISL DC    C'PDSPDISP '
ISPDSYSP DC    C'PDSPCLAS '
ISPDDSNP DC    C'PDSPXDSN '
ISPDNUM  DC    C'PDSPNUM '
ISPDCMD  DC    C'CMD  '
ISPDTEXT DC    CL8'LOGCOPY'
ISPDDDNA DC    X'0055000100084040404040404040'     RETURN DDNAME
ISPDDSOR DC    X'0057000100024040'                 RETURN DSORG
ISPDFREE DC    X'001C0000'                         FREE=CLOSE
ISPDMEMB DC    X'0003000100084040404040404040'     DSNAME
ISPDDSNA DC    X'00020001002C'                     DSNAME
ISPDALLO DC    X'00040001000101'                   DISP=(_)
ISPDNORM DC    X'00050001000102'                   DISP=(,CATLG)
ISPDANOR DC    X'00060001000108'                   DISP=(,,KEEP)
ISPDTRK  DC    X'00070000'                         SPACE=(TRK,
ISPDFIRS DC    X'000A00010003000001'               SPACE=(,1
ISPDSECO DC    X'000B00010003000004'               SPACE=(,,4
ISPDDIR  DC    X'000C00010003000005'               SPACE=(,,,5)
ISPDNUMC DC    X'001D0001000100'                   COPIES=_
ISPDOLD  EQU   X'01'
ISPDMOD  EQU   X'02'
ISPDNEW  EQU   X'04'
ISPDSHR  EQU   X'08'
ISPDSYSO DC    X'001800010001C1'                   SYSOUT=A
ISPDFORM DC    X'001A00010004C4F1F0F1'             SYSOUT=(,,D101)
ISPDDEST DC    X'005800010008D5F1F3F040404040'     DEST=R130
ISPDEXN  DC    CL8'&P.VEXT '                       PANEL NAME  SS NOV85
ISPD701X DC    CL8'PDS&M.1X'                       ERROR NAME
ISPD702X DC    CL8'PDS&M.2X'                       ERROR NAME
ISPD703X DC    CL8'PDS&M.3X'                       ERROR NAME
ISPD704X DC    CL8'PDS&M.4X'                       ERROR NAME
ISPD705X DC    CL8'PDS&M.5X'                       DONE MESSAGE
ISPDT0   DS    0H   TITLES FOR TABLE OUTPUT FOLLOW:
ISPDT1   DC    CL80'ISPMODE TABLE FOLLOWS:'
ISPDT2   DC    CL80'ISPMODE TABLE FOLLOWS: 1-79 AND 80-156'
ISPDT4   DC    CL80'ISPMODE TABLE DISPLAY COLUMNS 80-158'     ABL JAN89
ISPDT5   DC    CL80'CMD  NAME     DATA     VER.MOD    CREATED   LAST MOX
               DIFIED  SIZE  INIT    ID'
ISPDT6   DC    CL80'CMD  NAME     DATA     ALIASOF   TTR      VER.MOD  X
                LAST MODIFIED  SIZE  ID'
ISPDT7   DC    CL80'CMD  NAME     DATA     ALIASOF  LEN/LKED --  ATTRIBX
               UTES   -- APF  MODE  MAIN'
ISPDT8   DC    CL80'CMD  NAME     DATA     ALIASOF   TTR     MAIN    MAX
               TCH   LENGTH  ENTRY   SSI'
ISPDTB   DC    CL80'ISPMODE TABLE DISPLAY COLUMNS 1-79 (ON THE FIRST LIX
               NE)'
         DC    CL80'ISPMODE TABLE DISPLAY COLUMNS 80-158 (ON THE SECONDX
                LINE)'
ISPDTD   DC    CL80'CMD  NAME     DATA     ALIASOF  LEN/LKED --  ATTRIBX
               UTES   -- APF  MODE  MAIN'
         DC    CL80'                       MATCH    LENGTH   TTR       X
               ENTRY     SSI'
ISPDTF   DC    CL80'CMD  DDNAME   DATA     TYPE O# VOLUME  MEMBER   ---X
               --- DATA SET NAME ----------'
ISPDTG   DC    CL80'CMD  DDNAME   DATA     TYPE O# STAT ------DATA SET X
               NAME ----------------------'
         DC    CL80'                       VOLUME  -MEMBER-    ---- DISX
               P ----'
ISPDTH   DC    CL80'CMD  VOLUME   DATA   DEV DEV   MOUNT USE ---- TOTALX
                FREE ---  LARGEST   STATUS'
         DC    CL80'      NAME  -------- ADR TYPE   ATTR CNT CYLS TRKS X
                NUM DSCB CYLS TRKS --INDC--'
ISPDTI   DC    CL80'CMD  VOLUME   DATA   DEV DEV    ------MOUNT------- X
               USE -----VTOC---- FREE'
         DC    CL80'      NAME  -------- ADR TYPE   ATTR STAT --INDC-- X
               CNT --CCHH-- SIZE DSCB'
ISPDTK   DC    CL80'CMD  C V DATA/MSG DO RECFM LRECL BLKSI VOLUME -----X
               ----DATA SET NAME ----------'
ISPDTL   DC    CL80'CMD  C V DATA/MSG DO RECFM VOLUME ---------DATA SETX
                NAME ---------------------'
ISPDTM   DC    CL80'CMD  C V DATA/MSG DO RECFM VOLUME ---------DATA SETX
                NAME ---------------------'
         DC    CL80'                   LRECL  KEY  CREATED  EXPIRATION X
               --SIZE-  -DUR-  ALLOC'
         DC    CL80'                    BLKSI   RKP REFERENCED UPD EXT X
                --FREE-  -MEM- -SEC-'
ISPDTN   DC    CL80'OPT    MSG/RC  TYPE ------ PDS/TSO COMMAND OR CLISTX
                ----------------'
ISPDTO   DC    CL80'CMD  DATA/MSG TYPE STATUS -ADDR- NUM VOLUME -------X
               --DATA SET NAME ----------'
*                   123456789 123456789 123456789    TYPE     ABL FEB87
ISPDHEAD DC    CL32'*** LOG TABLE OUTPUT ***'          00     ABL FEB87
         DC    CL32'*** MEMLIST TABLE OUTPUT ***'      01     ABL FEB87
         DC    CL32'*** MEMLIST TABLE OUTPUT ***'      02     ABL FEB87
         DC    CL32'*** LISTA TABLE OUTPUT ***'        03     ABL FEB87
         DC    CL32'*** LISTV TABLE OUTPUT ***'        04     ABL FEB87
         DC    CL32'*** LISTF TABLE OUTPUT ***'        05     ABL JAN89
         DC    CL32'*** TCT TABLE OUTPUT ***'          06     ABL JAN89
         DC    CL32'*** CAX TABLE OUTPUT ***'          07     ABL JAN89
         DROP  R4                                              SS MAR85
         TITLE 'ISPF - MOVE TABLE AND ROUTINES'                SS AUG86
*                                       *                      SS AUG86
*    THE FOLLOWING TABLE IS INDEXED BY SPFTBPPI                SS AUG86
*    BY LH, AH, AH  AND SHIFTING BY 2 (TIMES 12)               SS AUG86
*                                       *                      SS AUG86
ISPMOVES DS    0F                                              SS AUG86
*     RTN ADD   TITLE      CNT    LENG  T CNT  TYPE            SS AUG86
 DC  A(ISPM310),A(ISPDT1),X'01',AL1(80),X'00',X'00'     1=01  ABL FEB87
 DC  A(ISPM310),A(ISPDT1),X'01',AL1(80),X'00',X'00'     2=02  ABL FEB87
 DC  A(ISPM310),A(ISPDT1),X'01',AL1(80),X'00',X'00'     3=03  ABL FEB87
 DC  A(ISPM340),A(ISPDT4),X'01',AL1(80),X'01',X'00'     4=04  ABL JAN89
 DC  A(ISPM350),A(ISPDT5),X'01',AL1(80),X'01',X'01'     5=05   SS AUG86
 DC  A(ISPM360),A(ISPDT6),X'01',AL1(80),X'01',X'01'     6=06   SS AUG86
 DC  A(ISPM370),A(ISPDT7),X'01',AL1(80),X'01',X'02'     7=07   SS AUG86
 DC  A(ISPM380),A(ISPDT8),X'01',AL1(80),X'01',X'02'     8=08   SS AUG86
 DC  A(ISPM310),A(ISPDT1),X'01',AL1(80),X'00',X'00'     9=09  ABL FEB87
 DC  A(ISPM340),A(ISPDT4),X'01',AL1(80),X'01',X'00'     A=10  ABL JAN89
 DC  A(ISPM3B0),A(ISPDTB),X'02',AL1(80),X'02',X'00'     B=11  ABL JAN89
 DC  A(ISPM3B0),A(ISPDTB),X'02',AL1(80),X'02',X'00'     C=12  ABL JAN89
 DC  A(ISPM3D0),A(ISPDTD),X'03',AL1(80),X'02',X'02'     D=13   SS AUG86
 DC  A(ISPM340),A(ISPDT4),X'01',AL1(80),X'01',X'00'     E=14  ABL JAN89
 DC  A(ISPM3F0),A(ISPDTF),X'01',AL1(80),X'01',X'03'     F=15   SS AUG86
 DC  A(ISPM3G0),A(ISPDTG),X'03',AL1(80),X'02',X'03'     G=16   SS AUG86
 DC  A(ISPM3H0),A(ISPDTH),X'01',AL1(80),X'02',X'04'     H=17   SS AUG86
 DC  A(ISPM3I0),A(ISPDTI),X'01',AL1(80),X'02',X'04'     I=18  ABL FEB87
 DC  A(ISPM3B0),A(ISPDTB),X'02',AL1(80),X'02',X'00'     J=19  ABL JAN89
 DC  A(ISPM3K0),A(ISPDTK),X'01',AL1(80),X'01',X'05'     K=20  ABL JAN89
 DC  A(ISPM3L0),A(ISPDTL),X'01',AL1(80),X'01',X'05'     L=21  ABL JAN89
 DC  A(ISPM3M0),A(ISPDTM),X'03',AL1(80),X'03',X'05'     M=22  ABL JAN89
 DC  A(ISPM3N0),A(ISPDTN),X'01',AL1(80),X'01',X'06'     N=23  ABL JAN89
 DC  A(ISPM3O0),A(ISPDTO),X'01',AL1(80),X'01',X'07'     O=24  ABL JAN89
 DC  A(ISPM3O0),A(ISPDTO),X'01',AL1(80),X'01',X'08'     P=25  ABL JAN89
 DC  A(ISPM3O0),A(ISPDTO),X'01',AL1(80),X'01',X'09'     Q=26  ABL JAN89
         SPACE 2                        *                      SS AUG86
*  GROUP TABLES NOT YET BUILT           *                      SS AUG86
         SPACE 5                        *                      SS AUG86
*                                                              SS AUG86
* THE FOLLOWING ROUTES RUN WITHOUT A BASE                      SS AUG86
* CALLER CAN USE BALR R2,R15 (R15 SET FROM TABLE)              SS AUG86
* OR BAL R2,4(,R15) FOR ALTERNATE ENTRY                        SS AUG86
* R1 POINTS TO PRE CLEARED OUTPUT AREA                         SS AUG86
* FOR PRIME ENTRY EACH LINE FOLLOWS THE LAST                   SS AUG86
* FOR ATLERNATE ENTRY R15 IS SET TO NEXT RECORD ROUTINE        SS AUG86
* OR ZERO WHEN END OF ROUTINES                                 SS AUG86
* BETWEEN EACH ROUTINE THE CALLER CAN PROCESS THE RECORD       SS AUG86
* AND CLEAR THE OUTPUT AREA FOR THE NEXT RECORD THEN           SS AUG86
* CONTINUE BY BALR R2,R15                                      SS AUG86
*                                                              SS AUG86
ISPM300  NOP   0                           NULL LINE           SS OCT88
         SR    R15,R15                  *                      SS OCT88
         BR    R2                       *                      SS OCT88
ISPM310  NOP   0                                               SS AUG86
         MVC   0(80,R1),SPFLINE             ADD TABLE DATA
         SR    R15,R15                     END OF LINE         SS AUG86
         CLI   0(R1),X'39'                  NULL FIRST BYTE?
         BHR   R2                           NO, BRANCH         SS AUG86
         MVI   0(R1),X'40'                  YES, RESET TO BLANK
         BR    R2                                              SS AUG86
         SPACE 2
ISPM340  NOP   0                                              ABL JAN89
         MVC   0(79,R1),SPFLINE+79          ADD TABLE DATA    ABL JAN89
         SR    R15,R15                      END OF LINE       ABL JAN89
         CLI   0(R1),X'39'                  NULL FIRST BYTE?  ABL JAN89
         BHR   R2                           NO, BRANCH        ABL JAN89
         MVI   0(R1),X'40'                  YES, RESET BLANK  ABL JAN89
         BR    R2                                             ABL JAN89
         SPACE 2
ISPM350  NOP   0                                               SS AUG86
         MVC   0(4,R1),MEM2OPT              PANEL=5
         OC    4+1(8,R1),MEMLNAME
         OC    13+1(8,R1),MEMLDATA
         OC    23+1(6,R1),MEM2VMOD
         OC    31+2(8,R1),MEM2CDAT
         OC    41+2(8,R1),MEM2MDAT
         OC    51+1(8,R1),MEM2MTIM
         OC    57+1(8,R1),MEM2CSIZ
         OC    63+1(8,R1),MEM2ISIZ
         OC    71+1(8,R1),MEM2MID
         SR    R15,R15                     END OF LINE         SS AUG86
         BR    R2                                              SS AUG86
         SPACE 2
ISPM360  NOP   0                                               SS AUG86
         MVC   0(4,R1),MEM2OPT              PANEL=6
         OC    4+1(8,R1),MEMLNAME
         OC    13+1(8,R1),MEMLDATA
         OC    22+1(8,R1),MEM2ALIS
         OC    31+2(8,R1),MEM2TTR
         OC    41+2(5,R1),MEM2VMOD
         OC    50+1(8,R1),MEM2MDAT
         OC    59+1(5,R1),MEM2MTIM
         OC    65+1(5,R1),MEM2CSIZ
         OC    71+1(7,R1),MEM2MID
         SR    R15,R15                     END OF LINE         SS AUG86
         BR    R2                                              SS AUG86
         SPACE 2
ISPM370  NOP   0                                               SS AUG86
         MVC   0(4,R1),MEM2OPT              PANEL=7
         OC    4+1(8,R1),MEMLNAME
         OC    13+1(8,R1),MEMLDATA
         OC    22+1(8,R1),MEM2ALIS
         OC    31+1(8,R1),MEM2LDAT
         OC    40+1(4,R1),MEM2ATT1
         OC    45+1(4,R1),MEM2ATT2
         OC    50+1(4,R1),MEM2DC
         OC    55+1(4,R1),MEM2TEST
         OC    60+1(4,R1),MEM2APF
         OC    65+1(4,R1),MEM2MODE
         OC    70+1(8,R1),MEM2MNAM
         SR    R15,R15                     END OF LINE         SS AUG86
         BR    R2                                              SS AUG86
         SPACE 2
ISPM380  NOP   0                                               SS AUG86
         MVC   0(4,R1),MEM2OPT              PANEL=8
         OC    4+1(8,R1),MEMLNAME
         OC    13+1(8,R1),MEMLDATA
         OC    22+1(8,R1),MEM2ALIS
         OC    30+2(6,R1),MEM2TTR
         OC    37+2(8,R1),MEM2MNAM
         OC    47+1(8,R1),MEM2MTTR
         OC    56+1(6,R1),MEM2LENG
         OC    63+1(6,R1),MEM2ENTY
         OC    70+1(8,R1),MEM2SSI
         SR    R15,R15                     END OF LINE         SS AUG86
         BR    R2                                              SS AUG86
         SPACE 2
ISPM3B0  OI    SPFLAG4,SPFMORE                                 SS OCT88
         BALR  R15,0                        PANEL=B            SS OCT88
ISPM3B1  MVC   0(79,R1),SPFLINE             ADD TABLE DATA     SS OCT88
         CLI   0(R1),X'39'                  NULL FIRST BYTE?   SS OCT88
         BH    ISPM3B2-ISPM3B1(R15)         NO, BRANCH         SS OCT88
         MVI   0(R1),X'40'                  YES, RESET TO BLAN SS OCT88
ISPM3B2  BALR  R15,0                    GENERATE ADDRESS *     SS OCT88
         LA    R15,14(R15)              RESTART *+14           SS OCT88
         TM    SPFLAG4,SPFMORE          CONTINUE OR RETURN     SS OCT88
         BZR   R2                       RETURN                 SS OCT88
         LA    R1,80(R1)                NEXT SLOT              SS OCT88
         BALR  R15,0                    GENERATE ADDRESS *     SS OCT88
         MVC   0(79,R1),SPFLINE+79          ADD TABLE DATA     SS OCT88
         SR    R15,R15                     END OF LINE         SS OCT88
         CLI   0(R1),X'39'                  NULL FIRST BYTE?   SS OCT88
         BHR   R2                           NO, BRANCH         SS OCT88
         MVI   0(R1),X'40'                  YES, RESET TO BLAN SS OCT88
         BR    R2                       *                      SS OCT88
         SPACE 2
ISPM3D0  OI    SPFLAG4,SPFMORE                                 SS AUG86
         MVC   0(4,R1),MEM2OPT              PANEL=D
         OC    4+1(8,R1),MEMLNAME
         OC    13+1(8,R1),MEMLDATA
         OC    22+1(8,R1),MEM2ALIS
         OC    31+1(8,R1),MEM2LDAT
         OC    40+1(4,R1),MEM2ATT1
         OC    45+1(4,R1),MEM2ATT2
         OC    50+1(4,R1),MEM2DC
         OC    55+1(4,R1),MEM2TEST
         OC    60+1(4,R1),MEM2APF
         OC    65+1(4,R1),MEM2MODE
         OC    70+1(8,R1),MEM2MNAM
         BALR  R15,0                    GENERATE ADDRESS *     SS AUG86
         LA    R15,14(R15)              RESTART *+14           SS AUG86
         TM    SPFLAG4,SPFMORE          CONTINUE OR RETURN     SS AUG86
         BZR   R2                       RETURN                 SS AUG86
         LA    R1,80(R1)                NEXT SLOT              SS AUG86
         OC    22+1(8,R1),MEM2MTTR                            ABL FEB87
         OC    31+1(6,R1),MEM2LENG
         OC    40+1(6,R1),MEM2TTR
         OC    50+1(6,R1),MEM2ENTY
         OC    60+1(8,R1),MEM2SSI
         BALR  R15,0                    GENERATE ADDRESS *     SS AUG86
         LA    R15,10(R15)              RESTART *+10           SS AUG86
         TM    SPFLAG4,SPFMORE          CONTINUE OR RETURN     SS AUG86
         BZR   R2                       RETURN                 SS AUG86
*  NULL LINE                                                   SS AUG86
         NI    SPFLAG4,255-SPFMORE      NO MORE                SS AUG86
         SR    R15,R15                     END OF LINE         SS AUG86
         BR    R2                                              SS AUG86
         SPACE 2
ISPM3F0  NOP   0                        *                      SS AUG86
         MVC   0(4,R1),SPFAOPT              PANEL=F
         OC    04+1(8,R1),SPFADDNM
         OC    13+1(8,R1),SPFADATA
         OC    22+1(4,R1),SPFATYPE
         OC    27+1(1,R1),SPFAOCNT
         OC    30+1(6,R1),SPFAVOL
         OC    37+1(8,R1),SPFAMEM
         OC    46+1(32,R1),SPFADSN
         SR    R15,R15                     END OF LINE         SS AUG86
         BR    R2                                              SS AUG86
         SPACE 2
ISPM3G0  OI    SPFLAG4,SPFMORE                                 SS AUG86
         MVC   0(4,R1),SPFAOPT              PANEL=G
         OC    04+1(8,R1),SPFADDNM
         OC    13+1(8,R1),SPFADATA
         OC    22+1(4,R1),SPFATYPE
         OC    27+1(1,R1),SPFAOCNT
         OC    30+1(4,R1),SPFASTAT
         OC    35+1(44,R1),SPFADSN
         BALR  R15,0                    GENERATE ADDRESS *     SS AUG86
         LA    R15,14(R15)              RESTART *+14           SS AUG86
         TM    SPFLAG4,SPFMORE          CONTINUE OR RETURN     SS AUG86
         BZR   R2                       RETURN                 SS AUG86
         LA    R1,80(R1)                NEXT SLOT              SS AUG86
         OC    22+1(6,R1),SPFAVOL
         OC    30+1(8,R1),SPFAMEM
         OC    42+1(4,R1),SPFAALLC
         OC    47+1(4,R1),SPFADISP
         OC    52+1(4,R1),SPFAADSP
         BALR  R15,0                    GENERATE ADDRESS *     SS AUG86
         LA    R15,10(R15)              RESTART *+10           SS AUG86
         TM    SPFLAG4,SPFMORE          CONTINUE OR RETURN     SS AUG86
         BZR   R2                       RETURN                 SS AUG86
*  NULL LINE                                                   SS AUG86
         NI    SPFLAG4,255-SPFMORE      NO MORE                SS AUG86
         SR    R15,R15                     END OF LINE         SS AUG86
         BR    R2                                              SS AUG86
         SPACE 2
ISPM3H0  NOP   0                        *                      SS AUG86
         MVC   0(4,R1),SPFVOPT              PANEL=H
         OC    04+1(6,R1),SPFVVOL
         OC    11+1(8,R1),SPFVDATA
         OC    20+1(3,R1),SPFVADDR
         OC    24+1(6,R1),SPFVTYPE
         OC    31+1(4,R1),SPFVATTR
         OC    36+1(4,R1),SPFVCNT
         OC    40+1(4,R1),SPFVTCYL
         OC    45+1(4,R1),SPFVTTRK
         OC    50+1(4,R1),SPFVXNUM
         OC    55+1(4,R1),SPFVDSCB
         OC    60+1(4,R1),SPFVLCYL
         OC    65+1(4,R1),SPFVLTRK
         OC    70+1(8,R1),SPFVINDC
         SR    R15,R15                     END OF LINE         SS AUG86
         BR    R2                                              SS AUG86
         SPACE 2
ISPM3I0  NOP   0                        *                      SS AUG86
         MVC   0(4,R1),SPFVOPT              PANEL=I
         OC    04+1(6,R1),SPFVVOL
         OC    11+1(8,R1),SPFVDATA
         OC    20+1(3,R1),SPFVADDR
         OC    24+1(6,R1),SPFVTYPE
         OC    31+1(4,R1),SPFVATTR
         OC    36+1(4,R1),SPFVSTAT
         OC    41+1(8,R1),SPFVINDC
         OC    50+1(3,R1),SPFVCNT
         OC    54+1(8,R1),SPFVVTOC
         OC    63+1(4,R1),SPFVVSIZ
         OC    68+1(4,R1),SPFVDSCB
         SR    R15,R15                     END OF LINE         SS AUG86
         BR    R2                                              SS AUG86
         SPACE 2
ISPM3K0  NOP   0                        *                     ABL JAN89
         MVC   0(4,R1),SPFCOPT              PANEL=K           ABL JAN89
         OC    04+1(L'SPFCCAT,R1),SPFCCAT                     ABL JAN89
         OC    06+1(L'SPFCVTOC,R1),SPFCVTOC                   ABL JAN89
         OC    08+1(L'SPFCDATA,R1),SPFCDATA                   ABL JAN89
         OC    17+1(L'SPFCDSOR,R1),SPFCDSOR                   ABL JAN89
         OC    20+1(L'SPFCRF,R1),SPFCRF                       ABL JAN89
         OC    26+1(L'SPFCLREC,R1),SPFCLREC                   ABL JAN89
         OC    32+1(L'SPFCBLKS,R1),SPFCBLKS                   ABL JAN89
         OC    38+1(L'SPFCVOL,R1),SPFCVOL                     ABL JAN89
         OC    45+1(34,R1),SPFCDSN                            ABL JAN89
         SR    R15,R15                     END OF LINE        ABL JAN89
         BR    R2                                             ABL JAN89
         SPACE 2
ISPM3L0  NOP   0                        *                     ABL JAN89
         MVC   0(4,R1),SPFCOPT              PANEL=L           ABL JAN89
         OC    04+1(L'SPFCCAT,R1),SPFCCAT                     ABL JAN89
         OC    06+1(L'SPFCVTOC,R1),SPFCVTOC                   ABL JAN89
         OC    08+1(L'SPFCDATA,R1),SPFCDATA                   ABL JAN89
         OC    17+1(L'SPFCDSOR,R1),SPFCDSOR                   ABL JAN89
         OC    20+1(L'SPFCRF,R1),SPFCRF                       ABL JAN89
         OC    26+1(L'SPFCVOL,R1),SPFCVOL                     ABL JAN89
         OC    33+1(44,R1),SPFCDSN                            ABL JAN89
         SR    R15,R15                     END OF LINE        ABL JAN89
         BR    R2                                             ABL JAN89
         SPACE 2
ISPM3M0  OI    SPFLAG4,SPFMORE                                ABL JAN89
         MVC   0(4,R1),SPFCOPT              PANEL=M           ABL JAN89
         OC    04+1(L'SPFCCAT,R1),SPFCCAT                     ABL JAN89
         OC    06+1(L'SPFCVTOC,R1),SPFCVTOC                   ABL JAN89
         OC    08+1(L'SPFCDATA,R1),SPFCDATA                   ABL JAN89
         OC    17+1(L'SPFCDSOR,R1),SPFCDSOR                   ABL JAN89
         OC    20+1(L'SPFCRF,R1),SPFCRF                       ABL JAN89
         OC    26+1(L'SPFCVOL,R1),SPFCVOL                     ABL JAN89
         OC    33+1(44,R1),SPFCDSN                            ABL JAN89
         BALR  R15,0                    GENERATE ADDRESS *    ABL JAN89
         LA    R15,14(R15)              RESTART *+14          ABL JAN89
         TM    SPFLAG4,SPFMORE          CONTINUE OR RETURN    ABL JAN89
         BZR   R2                       RETURN                ABL JAN89
         LA    R1,80(R1)                NEXT SLOT             ABL JAN89
         OC    18+1(L'SPFCLREC,R1),SPFCLREC                   ABL JAN89
         OC    25+1(L'SPFCKEYL,R1),SPFCKEYL                   ABL JAN89
         OC    30+1(L'SPFCCDAT,R1),SPFCCDAT                   ABL JAN89
         OC    39+1(L'SPFCEDAT,R1),SPFCEDAT                   ABL JAN89
         OC    50+1(L'SPFCTOT,R1),SPFCTOT                     ABL JAN89
         OC    59+1(L'SPFCDIR,R1),SPFCDIR                     ABL JAN89
         OC    66+1(L'SPFCATYP,R1),SPFCATYP                   ABL JAN89
         BALR  R15,0                    GENERATE ADDRESS *    ABL JAN89
         LA    R15,14(R15)              RESTART *+14          ABL JAN89
         TM    SPFLAG4,SPFMORE          CONTINUE OR RETURN    ABL JAN89
         BZR   R2                       RETURN                ABL JAN89
         LA    R1,80(R1)                NEXT SLOT             ABL JAN89
         OC    19+1(L'SPFCBLKS,R1),SPFCBLKS                   ABL JAN89
         OC    27+1(L'SPFCRKP,R1),SPFCRKP                     ABL JAN89
         OC    31+1(L'SPFCRDAT,R1),SPFCRDAT                   ABL JAN89
         OC    42+1(L'SPFCUPD,R1),SPFCUPD                     ABL JAN89
         OC    46+1(L'SPFCEXT,R1),SPFCEXT                     ABL JAN89
         OC    51+1(L'SPFCFREE,R1),SPFCFREE                   ABL JAN89
         OC    60+1(L'SPFCMMCT,R1),SPFCMMCT                   ABL JAN89
         OC    66+1(L'SPFCSEC,R1),SPFCSEC                     ABL JAN89
         BALR  R15,0                    GENERATE ADDRESS *    ABL JAN89
         LA    R15,10(R15)              RESTART *+10          ABL JAN89
         TM    SPFLAG4,SPFMORE          CONTINUE OR RETURN    ABL JAN89
         BZR   R2                       RETURN                ABL JAN89
*  NULL LINE                                                  ABL JAN89
         NI    SPFLAG4,255-SPFMORE      NO MORE               ABL JAN89
         SR    R15,R15                     END OF LINE        ABL JAN89
         BR    R2                                             ABL JAN89
         SPACE 2
ISPM3N0  OI    SPFLAG4,SPFMORE                                ABL JAN89
         MVC   0(4,R1),SPFTOPT              PANEL=N           ABL JAN89
         OC    06+1(L'SPFTDATA,R1),SPFTDATA                   ABL JAN89
         OC    15+1(L'SPFTTYPE,R1),SPFTTYPE                   ABL JAN89
         L     R15,SPFSEC4A                SECOND 4K          ABL JAN89
         MVC   17+1(62,R1),SPFTCMDD-SPFSEC4K(R15)             ABL JAN89
         BALR  R15,0                    GENERATE ADDRESS *    ABL JAN89
         LA    R15,14(R15)              RESTART *+14          ABL JAN89
         TM    SPFLAG4,SPFMORE          CONTINUE OR RETURN    ABL JAN89
         BZR   R2                       RETURN                ABL JAN89
         LA    R1,80(R1)                NEXT SLOT             ABL JAN89
         L     R15,SPFSEC4A                SECOND 4K          ABL JAN89
         MVC   0(80,R1),SPFTCMDD-SPFSEC4K+62(R15)             ABL JAN89
         BALR  R15,0                    GENERATE ADDRESS *    ABL JAN89
         LA    R15,10(R15)              RESTART *+10          ABL JAN89
         TM    SPFLAG4,SPFMORE          CONTINUE OR RETURN    ABL JAN89
         BZR   R2                       RETURN                ABL JAN89
*  NULL LINE                                                  ABL JAN89
         NI    SPFLAG4,255-SPFMORE      NO MORE               ABL JAN89
         SR    R15,R15                     END OF LINE        ABL JAN89
         BR    R2                                             ABL JAN89
         SPACE 2
ISPM3O0  NOP   0                        *                     ABL JAN89
         MVC   0(4,R1),SPFXOPT              PANEL=O           ABL JAN89
         OC    04+1(L'SPFXDATA,R1),SPFXDATA                   ABL JAN89
         OC    13+1(L'SPFXTYPE,R1),SPFXTYPE                   ABL JAN89
         OC    18+1(L'SPFXSTAT,R1),SPFXSTAT                   ABL JAN89
         OC    25+1(L'SPFXADDR,R1),SPFXADDR                   ABL JAN89
         OC    32+1(L'SPFXNUM,R1),SPFXNUM                     ABL JAN89
         OC    36+1(L'SPFXVOL,R1),SPFXVOL                     ABL JAN89
         OC    43+1(36,R1),SPFXDSN                            ABL JAN89
         SR    R15,R15                     END OF LINE        ABL JAN89
         BR    R2                                             ABL JAN89
