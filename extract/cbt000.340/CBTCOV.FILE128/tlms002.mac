         TITLE 'ICHRTX01 - EXIT FROM TLMS-DSP TO RACF PROTECT TAPES'
***********************************************************************
*    NAME:    RACF TAPE MANAGEMENT EXIT.                              *
*                                                                     *
*    PURPOSE: THIS ROUTINE IS CALLED FROM THE TLMS DSP(DATASET        *
*            PROTECT FEATURE) SVC DURING OPEN AND EOV FOR SL          *
*            OUTPUT TAPES. ITS FUNCTION IS TO RACF PROTECT TAPES      *
*            FOR ADSP & NON-ADSP USERS(PROTECT=YES) IN AN             *
*            EQUIVALENT MANNER.                                       *
*                                                                     *
***********************************************************************
*                                                                     *
*   MODULE NAME -  ICHRTX01                                           *
*                                                                     *
*   DESCRIPTIVE NAME  -  RACF TAPE MANAGEMENT EXIT                    *
*                                                                     *
*                                                                     *
*   STATUS - RACF VERSION 1, RELEASE 2                                *
*                                                                     *
*   FUNCTION - PERFORMS THE FOLLOWING FUNCTIONS :                     *
*                                                                     *
*      -  ENFORCE DATASET NAMING CONVENTIONS FOR TAPE DATASETS        *
*                                                                     *
*      -  ALLOW ADSP USERS AUTOMATIC TAPE PROTECTION IF THE VOLUME    *
*         IS UNDER TLMS CONTROL.                                      *
*                                                                     *
*      -  SUPPORTS THE GRPACC ATTRIBUTE FOR TAPE DS THAT              *
*         BEGIN WITH A VALID CONNECT GROUP-ID FOR THIS USER           *
*                                                                     *
*      -  PROVIDES DESCRIPTIVE INFORMATION IN THE PROFILE WHICH       *
*         INDICATES THE DSN, JOBNAME, CONNECT GROUP, AND A FLAG       *
*         TO INDICATE IF THIS IS A USER OR GROUP DS.                  *
*                                                                     *
*      -  FLAGS GENERATION DATA GROUP MEMBERS SO THAT GDG MODELING    *
*         CAN TAKE PLACE(IF REQUESTED) IN ICHRDX01(RACFDEF            *
*         PRE-PROCESSING EXIT)                                        *
*                                                                     *
*                                                                     *
*                                                                     *
*    OPERATION - THE OPERATION IS DOCUMENTED IN THE CODE.             *
*                                                                     *
*    NOTES -                                                          *
*      DEPENDENCIES -                                                 *
*        THIS MODULE IS DEPENDANT ON THE EBCDIC CHARACTER SET. IT     *
*        MUST BE REASSEMBLED IF A NEW CHARACTER SET IS USED.          *
*                                                                     *
*      RESTRICTIONS - NONE                                            *
*                                                                     *
*      REGISTER CONVENTIONS - STANDARD USAGE                          *
*                                                                     *
*      PATCH LABEL - PATCHLOC                                         *
*                                                                     *
*    MODULE TYPE - PROCEDURE                                          *
*                                                                     *
*      PROCESSOR - ASSEMBLER X                                        *
*                                                                     *
*      MODULE SIZE - SEE ASSEMBLER LISTING                            *
*                                                                     *
*      ATTRIBUTES - PLPA, REENTRANT, REUSABLE, APF-AUTHORIZED         *
*                   LINKED INTO IGC0024C(TLMS DSP SVC)                *
*                                                                     *
*    ENTRY POINT - ICHRTX01                                           *
*                                                                     *
*      PURPOSE - MAIN ENTRY POINT FOR RACF TAPE MANAGEMENT EXIT       *
*                                                                     *
*      LINKAGE - CALLED BY TLMS DSP SVC                               *
*                                                                     *
*      INPUT -                                                        *
*        REGISTER 1 POINTS TO PARAMETER LIST                          *
*               AL4(VOLNAME) -> CL6'VOLUME'   VOL-SER OF TAPE         *
*               AL4(IOSWA)   -> CL612         IOS WORK AREA           *
*               AL4(FLAG)    -> FL4'0'        FLAG WORD(0=TLMS TAPE   *
*                                                       4=NON TLMS    *
*                                                                     *
*      REGISTERS SAVED - GPR 0-15                                     *
*                                                                     *
*      REGISTER USAGE -                                               *
*                                                                     *
*      REGISTERS RESTORED - GPR 0-14                                  *
*                                                                     *
*    EXIT-NORMAL - RETURN TO CALLER                                   *
*                                                                     *
*      CONDITIONS - NO TERMINATING ERROR                              *
*                                                                     *
*      OUTPUT -                                                       *
*                                                                     *
*      RETURN CODE - 0 - TAPE HAS BEEN DEFINED TO RACF                *
*      RETURN CODE - 4 - TAPE HAS NOT BEEN DEFINED TO RACF            *
*                                                                     *
*    EXIT-ERROR - USER 485 ABEND                                      *
*                                                                     *
*                                                                     *
*                                                                     *
*    EXTERNAL REFERENCES -                                            *
*                                                                     *
*      ROUTINES -  NONE                                               *
*                                                                     *
*      DATA AREAS - OPEN/CLOSE/EOV WORK AREA(IECDSECT)                *
*                                                                     *
*      MAPPING MACROS - IHAASXB,IHAACEE,                              *
*                       IECDSECS(IECDSECT,IEFJFCBN,ICHPRCVT,CVT,PSA)  *
*                                                                     *
*      EXECUTABLE MACROS - GETMAIN, FREEMAIN, MODESET, RACDEF,        *
*                       ICHEINTY, ICHEACTN, ICHETEST                  *
*                                                                     *
*      SERIALIZATION - NONE                                           *
*                                                                     *
*      CHANGE ACTIVITY - RACF VERSION 1, RELEASE 2                    *
*                                                                     *
*                                                                     *
*      ABEND CODES - U485 IF NAMING CONVENTIONS NOT MET.              *
***********************************************************************
         SPACE 3
ICHRTX01 CSECT
         SAVE  (14,12),T,ICHRTX01_&SYSDATE_&SYSTIME
         LR    R12,R15                   COPY ENTRY ADDRESS
         LR    R3,R1                     SAVE PARAMETER ADDRESS
         USING ICHRTX01,R12              ADDRESSABILITY
         GETMAIN R,LV=WORKSIZE           GET DYNAMIC STORAGE
         LR    R10,R13                   SAVE OLD SAVE AREA ADDR
         ST    R1,8(R13)                 LINK IN PREVIOUS S.A.
         LR    R13,R1                    ADDRESS NEW SAVE AREA
         USING SAVEAREA,R13              ADDRESS DYNAMIC STORAGE
         LA    R7,WORKSIZE               SET UP MVCL FOR DSA INIT
         LR    R15,R7                    LENGTH
         LR    R6,R13                    ADDRESS TARGET
         LA    R14,SAVEINIT              ADDRESS SOURCE
         MVCL  R6,R14                    INITIALIZE DSA
         ST    R10,4(R13)                LINK BACK TO PREV. S.A.
         EJECT
***********************************************************************
* PARAMETERS ON ENTRY:                                                *
*     R1  -> AL4(VOLNAME) -> CL6'VOLUME'    VOL-SER OF TAPE           *
*            AL4(IOSWA)   -> CL612          IOS WORK AREA(IECDSECT)   *
*            AL4(FLAG)    -> FL4'0'         0 IF TAPE UNDER TLMS CNTL *
*                                           4 IF TAPE IS AN EXTERNAL  *
*                                                VOLUME               *
*     NOTE: ENTRY IS IN SUPERVISOR STATE,KEY 0.                       *
*                                                                     *
* PARAMETERS RETURNED:                                                *
*     R15  = RETURN CODE                                              *
*                0 IF TAPE HAS NOT BEEN DEFINED TO RACF               *
*                4 IF TAPE HAS BEEN DEFINED TO RACF                   *
*                                                                     *
***********************************************************************
         SPACE 2
         USING PARMLIST,R3               ADDRESS THE PARAMETERS BY NAME
         L     R2,TLMSVOL                ADDRESS OF VOLSER
         MVC   VOLSER(6),0(R2)           COPY IT
         MVI   STATUS,0                  CLEAR STATUS BYTE
         L     R2,TLMSFLAG               ADDRESS OF FLAG
         L     R2,0(R2)                  FLAG
         LTR   R2,R2                     TLMS TAPE?
         BNZ   LOADOPWA                  NO - GO ON
         OI    STATUS,TLMSTAPE           FLAG AS TLMS CONTROLLED
LOADOPWA L     R3,TLMSOPWA               LOAD ADDR OF OPEN WORK AREA
         DROP  R3                        FORGET PARMS NOW
         USING FORCORE,R3
         SPACE 2
***********************************************************************
*  CHECK IF RACF INACTIVE OR TAPE CHECKING IS OFF                     *
***********************************************************************
         L     R1,X'10'                  CVT ADDRESS
         USING CVT,R1
         L     R2,CVTRAC                 ADDRESS OF RACF CVT
         LTR   R2,R2                     SEE IF IT EXISTS
         BZ    INACTIVE                  RACF INACTIVE(NON-RACF SYSTEM)
         USING RCVT,R2                   ADDRESS RACF CVT
         TM    RCVTFLGS,RCVTROFF         HAS RACF BEEN VARIED INACTIVE
         BO    INACTIVE                  -YES-
         TM    RCVTSTA1,RCVTTAPE         TAPE OPTION INACTIVE
         BNO   INACTIVE                  -YES-
         DROP  R2                        CANCEL BASE TO RCVT
***********************************************************************
*  CHECK IF THIS VOLUME IS A RACF CANDIDATE                           *
***********************************************************************
         USING PSA,0
         L     R10,PSAAOLD               ADDRESS OF CURRENT ASCB
         USING ASCB,R10
         L     R4,ASCBASXB               ADDRESS OF ASXB
         USING ASXB,R4
         L     R5,ASXBSENV               ADDRESS OF ACEE
         USING ACEE,R5
         DROP  R4
         LTR   R5,R5                     IS THERE AN ACEE?
         BZ    RETURN0                   NO-RETURN RC=0
         TM    ACEEFLG1,ACEERACF         RACF DEFINED USER?
         BNO   RETURN0                   NO-DO NOTHING
         SPACE 3
***********************************************************************
*  CHECK IF WE ARE HERE FOR EOV(RACF PROTECTION ON FIRST VOLUME)      *
***********************************************************************
*  NOTE: IN THE EVENT THAT THE TAPE IN USE WAS RACF DEFINED BEFORE    *
*    EXECUTION OF THE CURRENT JOB, AND THAT TLMS HAS ALLOWED THE TAPE *
*    TO BE OPENED FOR OUTPUT, THIS CHECK WILL PREVENT FURTHER         *
*    MODIFICATION OF THE ACCESS LIST. IF THE DS IS EXTENDED TO        *
*    ANOTHER VOLUME, THAT VOLUME WILL BE HANDLED NORMALLY BY EOV.     *
***********************************************************************
         L     R4,DXDEBXAD               DEB EXTENSION ADDRESS
         MODESET EXTKEY=DATAMGT,SAVEKEY=(2)
         USING DEBXTN,R4
         CLC   JFCBVLSQ,=H'1'            IF 2ND OR SUBSEQUENT VOL,
         BE    FIRSTVOL
         TM    DEBXFLG1,DEBXDSSI         CHECK IF 1ST VOL WAS RACF'ED.
         BO    RET4                      YES, LEAVE FOR EOV TO HANDLE,
*                                         BUT TELL TLMS THAT IT HAS
*                                         BEEN DEFINED (ELSE S585-12)
FIRSTVOL EQU   *
         MODESET KEYADDR=(2)             RESTORE OLD KEY
         B     CHKPROT                    CHECK IF SHOULD BE PROTECTED
RET4     MODESET KEYADDR=(2)             RESTORE OLD KEY
         B     RETURN4                   BEEN DEFINED.
         SPACE 3
***********************************************************************
*  NOT EOV - MUST CHECK IF ADSP OR PROTECT=YES                        *
***********************************************************************
CHKPROT  TM    JFCFLGS1,JFCBPROT         IS THIS A PROTECT=YES DS?
         BO    CHKUSER                   YES-GO CHECK DSN
         TM    ACEEFLG1,ACEEADSP         ADSP ATTRIBUTE?
         BO    CHKUSER                   YES-GO CHECK DSN
         B     RETURN0                   NEITHER-RETURN CODE=0
         EJECT
***********************************************************************
*                                                                     *
* CHECK IF THE USER IS AUTHORIZED TO CREATE THIS DATASET NAME         *
*    - IF THE DSN IS A USER DSN,THEN OK                               *
*        - THE GROUP PROFILE IS THEN RETRIEVED,                       *
*          AND IF IT IS A GROUP,THE USER IS ALLOWED TO CREATE THE DS  *
*          IF:  1) HE HAS AT LEAST CREATE AUTHORITY IN THE GROUP.     *
*               2) THE GROUP UACC IS AT LEAST CREATE                  *
*        - OTHERWISE IF THE USER HAS THE OPERATIONS ATTRIBUTE,        *
*          AND THE HIGH LEVEL INDEX IS A USERID,THEN OK.              *
***********************************************************************
         SPACE 1
CHKUSER  DS    0H
         MVI   TVOLLEN,6                 LENGTH OF VOLSER
         MVC   TVOL(6),VOLSER            VOLSER
         SPACE 2
***********************************************************************
* CHECK IF APPRORIATE LABEL TYPE FOR RACF SUPPORT                     *
*    AND THAT THIS IS A PERMANENT DATASET                             *
***********************************************************************
         TM    JFCBLTYP,JFCSL            IS IT SL??
         BNO   RETURN0                   IF NOT THEN OK,BUT NO RACDEF
         TM    JFCBIND2,JFCTEMP          IS IT TEMPORARY?
         BO    RETURN0                   IF SO THEN OK,BUT NO RACDEF
***********************************************************************
* CHECK IF THIS IS AN OLD OR MOD REQUEST- IF SO WE WILL NOT           *
*    ISSUE A RACDEF                                                   *
***********************************************************************
         TM    JFCBIND2,JFCNEW           IS THIS NEW DSN??
         BM    RETURN0                    -NO-DO NOTHING (OLD OR MOD)
         SPACE 2
         SR    R7,R7                     CLEAR R7
         IC    R7,ACEEUSRL               LOAD USER LENGTH
         LA    R8,JFCBDSNM               ADDRESS OF DSNAME
         LA    R9,0(R7,R8)               ADDRESS OF '.'?
         CLI   0(R9),C'.'                END OF INDEX?
         BNE    CHKGROUP                 NO
         BCTR  R7,0                      MINUS 1 FOR EXECUTED CLC
         EX    R7,INDEXCLC               INDEX COMPARE
         BNE   CHKGROUP                  INDEXES DO NOT MATCH
         B     AUTHOK
INDEXCLC CLC   0(*-*,R8),ACEEUSRI        **EXECUTE ONLY**
         SPACE 2
CHKGROUP DS    0H
         LA    R6,JFCBDSNM               GET HIGH LEVEL INDEX
         SR    R7,R7                     CLEAR CHAR COUNT
         LA    R8,GRPNM                  GROUP NAME ADDR
MVCCHAR  MVC   0(1,R8),0(R6)             MOVE A CHAR
         LA    R7,1(R7)                  COUNT IT
         LA    R6,1(R6)
         LA    R8,1(R8)
         CLI   0(R6),C'.'                END OF INDEX?
         BE    ENDQUAL                   YES
         CLI   0(R6),C' '                END OF INDEX?
         BNE   MVCCHAR                   NO-
ENDQUAL  STC   R7,GRPNMLN                STORE INDEX NAME LENGTH
         LA    R6,ACEEUSRI               ADDRESS OF USERID
         ICHETEST FLDATA=(,(R6)),MF=(E,TUSER) INSERT USERID INTO PARMS
         ICHEACTN TESTS=(TUSER),MF=(E,RUSERACS) ADDR TEST INTO ACTION
         EJECT
***********************************************************************
* INSERT FIELD DEFINITION OFFSET,CURRENT AND MAX TESTS & ACTION       *
* COUNT. A WORK AREA IS PASSED TO THE RACF MANAGER TO RETURN THE      *
* USERS AUTHORITY TO THE GROUP AND THE GROUPS UNIVERSAL ACCESS.       *
***********************************************************************
* NOTE: AS DISTRIBUTED RACF DOES NOT PROVIDE FOR MODIFICATION OF      *
*    A GROUP'S UNIVERSAL ACCESS. THE ONLY GROUP WITH A VALUE OTHER    *
*    THAN "NONE" WILL BE THE VSAMDSET GROUP. THIS CODE IS INCLUDED    *
*    TO BE COMPLETELY COMPATIBLE WITH EITHER FUTURE RACF CHANGES OR   *
*    WITH ANY USER MODIFICATIONS AFFECTING GROUP UACC.                *
***********************************************************************
         MVC    WKAREA(4),=F'80'         INITIALIZE LENGTH OF WKAREA
         ICHEINTY LOCATE,ENTRY=GRPNMLN,                                X
               OPTIONS=(FLDEF,TESTC,TESTM,ACTION),                     X
               WKAREA=WKAREA,                                          X
               ACTIONS=(RUACC,RUSERACS),                               X
               MF=(E,LOC),                                             X
               TYPE='GRP'
         CH    R15,=H'12'                GROUP NOT FOUND?
         BE    CHKOPER                   NO-CHECK IF OPERATIONS
         LTR   R15,R15                   ANY OTHER ERROR
         BNZ   ABEND                     YES-PROGRAM BUG??
         SPACE
         OI    STATUS,GROUPDS            FLAG AS GROUP DS
         CLC   EXTALEN(2),=H'0'          USER CONNECTED TO GROUP?
         BE    CHKUACC                   NO-CHECK GROUP UACC
         TM    EXTAUTH,X'E0' AUTHJOIN+AUTHCONN+AUTHCRTE AUTH>=CREATE
         BNZ   AUTHOK                    OK
         B     ABEND                     NO-ABEND THIS ONE
         SPACE
CHKUACC  TM    EXTUACC,X'E0' AUTHJOIN+AUTHCONN+AUTHCRTE UACC>=CREATE
         BNZ   AUTHOK                    OK - GROUP UACC ALLOWS CREATE
         B     ABEND                     NO GOOD
         SPACE 3
CHKOPER  TM    ACEEFLG1,ACEEOPER         OPERATIONS ATTR?
         BNO   ABEND                     NO
         ICHEINTY TYPE='USR',OPTIONS=ACTION,MF=(E,LOC)
         LTR   R15,R15                   IS THE HI-LEVEL INDEX A USER?
         BNZ   ABEND
         EJECT
AUTHOK   DS    0H
         SPACE
***********************************************************************
* THIS VOLUME IS ELIGIBLE TO BE DEFINED TO RACF                       *
***********************************************************************
         TM    JFCBIND1,JFCGDG           GDG MEMBER?
         BNO   DEFINE                    NO
         OI    STATUS,GDG                FLAG AS SUCH
***********************************************************************
* ALL NORMAL PROCESSING HAS BEEN DONE IN THE WAY OF NAMING CONVENTIONS*
* BUT IF THE TAPE IS NON-TLMS IT WILL NOT BE DEFINED HERE. PROTECT=YES*
* WILL FUNCTION IN ITS NORMAL MANNER, ADSP USERS WILL BE ISSUED A     *
* WARNING SAYING THAT THE TAPE IS EXTERNAL TO TLMS AND HAS NOT BEEN   *
* PROCESSED.                                                          *
***********************************************************************
DEFINE   TM    STATUS,TLMSTAPE           IS THIS EXTERNAL TAPE?
         BNO   EXTERNAL                  YES
         SPACE
         RACDEF ENTITY=VOLSER,CLASS=CLASST,MF=(E,RACDEFL),INSTLN=STATUS
         SPACE
***********************************************************************
* RETURN CODES FROM RACDEF ARE:                                       *
*        -  0  RACDEF HAS COMPLETED SUCCESSFULLY.                     *
*        -  4  FOR DEFINE THE RESOURCE WAS PREVIOUSLY DEFINED.        *
*        -  8  FOR DEFINE/DELETE THE REQUEST WAS FAILED BY THE        *
*              INSTALLATION EXITS,USER NOT RACF DEFINED,              *
*              NOT AUTHORIZED TO CREATE GROUP DATASETS,               *
*              OR FOR ADDVOL THE FIRST VOL WAS NOT DEFINED.           *
*        - 12  FOR NEWNAME, THE OLD DATASET WAS NOT DEFINED.          *
*        - 16  FOR DEFINE WITH MENTITY, THE MODEL WAS NOT DEFINED.    *
***********************************************************************
         CH    R15,=H'16'                CHECK IF UNKNOWN CODE
         BH    ABEND                     WHAT TO DO NOW?
*
         B     *+4(R15)                  CHECK RETURN
         B     ACCESS                    RC=0 - BUILD ACCESS LIST
         B     ABEND                     RC=4 - DUPLICATE DEFINE
*                                        SHOULD NEVER HAPPEN AS MOUNT
*                                        (IFG0194F) WILL SET DEBXDSSI
         B     ABEND                     RC=8 - SHOULDN'T HAPPEN
         B     ABEND                     RC=12- SHOULDN'T HAPPEN
         B     ABEND                     RC=16- SHOULDN'T HAPPEN
         EJECT
***********************************************************************
*  THE RACDEF REQUEST WAS SUCCESSFUL, ANY EXTRA ACCESS LIST CAN       *
*  NOW BE BUILT.                                                      *
***********************************************************************
         SPACE
ACCESS   DS    0H
***********************************************************************
*  MUST NOW GET INTO DATAMGMT KEY TO MODIFY DEB SO                    *
*  EOV WILL DO RACFDEF TYPE=ADDVOL FOR SUBSEQUENT VOLUMES             *
***********************************************************************
         MODESET EXTKEY=DATAMGT,SAVEKEY=(2)
         OI    DEBXFLG1,DEBXDSSI         SET FOR EOV
         NI    JFCFLGS1,255-JFCBPROT     TURN OFF PROTECT=YES
         MODESET KEYADDR=(2)             RESTORE OLD KEY
***********************************************************************
*  CHECK IF USER HAS GRPACC ATTRIBUTE, AND IF HIGH LEVEL INDEX OF DSN *
*        IS =  A VALID GROUP FOR THIS USER THEN ADD                   *
*        THE GROUP WITH UPDATE AUTHORITY.                             *
*      (SEE COMMAND LANGUAGE REFERENCE-ADDUSER/GRPACC)                *
***********************************************************************
         TM    ACEEFLG3,ACEEGRPA         GROUP ACCESS ATTRIBUTE?
         BNO   NOTGRP                    NO-ALL DONE
         TM    STATUS,GROUPDS            GROUP DATASET?
         BNO   NOTGRP
         MVC   ACLUSR(8),GRPNM           MOVE IN GROUP NAME
         MVI   ACLACC,X'20'              UPDATE AUTHORITY
         XC    ACLCNT(2),ACLCNT          ZERO COUNT FIELD
         SPACE
         ICHEACTN FLDATA=(11,ACL),MF=(E,ACLIST),RUN=YES
         EJECT
NOTGRP   DS    0H
         MVI   INSTDALN,69               LENGTH 69
         MVC   INSTDA(44),JFCBDSNM       COPY DSNAME
         MVI   INSTDA+44,C'/'            SEPARATOR
         L     R6,ASCBJBNI               JOBNAME ADDRESS
         LTR   R6,R6                     THERE?
         BNZ   MVCJOB                    YES-THIS IS AN INITIATED JOB
         L     R6,ASCBJBNS               GET IT FOR START/MOUNT/LOGON
MVCJOB   MVC   INSTDA+45(8),0(R6)        JOBNAME
         MVI   INSTDA+53,C'/'
         MVI   INSTDA+54,C'U'            FLAG AS USER DS
         TM    STATUS,GROUPDS            GROUP DS?
         BNO   MVCGRP                    NO
         MVI   INSTDA+54,C'G'            FLAG AS GROUP DS
MVCGRP   MVI   INSTDA+55,C'/'
         MVC   INSTDA+56(8),ACEEGRPN     CONNECT GROUP NAME
         MVI   INSTDA+65,C'/'
         MVC   INSTDA+66,=C'   '         CLEAR GDG FIELD
         TM    JFCBIND1,JFCGDG           IS THIS A GDG?
         BNO   ADDINST
         MVC   INSTDA+66,=C'GDG'         INSERT GDG
         SPACE 3
***********************************************************************
*  SET UP MANAGER PARAMETER LIST FOR THE INSTALLATION DATA(RUN=YES)   *
***********************************************************************
         CNOP  0,4                       INSURE ALIGNED BEFORE MGR
*                                        CALL AS HE DOES A DS 0F IF
*                                        A LABEL IS PRESENT
ADDINST  ICHEACTN FLDATA=(69,INSTDATA),MF=(E,INST),RUN=YES
         SPACE
         LA    R6,TVOLLEN                ADDRESS OF ENTITY DESCRIPTION
***********************************************************************
*  REQUEST MANAGER TO ADD INSTALLATION DATA & ACCESS LIST IF RUN=YES  *
***********************************************************************
         ICHEINTY ,MF=(E,ALTER),ENTRY=(R6),                            X
               OPTIONS=(FLDEF),          FILL IN FIELD DEF OFFSET      X
               CLASS=CLASS,              CLASS NAME                    X
               ACTIONS=(ACLIST,          ACCESS LIST FOR GROUP         X
               INST)                     INSTALLATION DATA
         LTR   R15,R15                   TEST RC
         BNZ   ABEND                     NO-ABEND
         SPACE 3
RETURN4  DS    0H
         LR    R10,R13
         L     R13,4(R13)
         FREEMAIN R,LV=WORKSIZE,A=(R10)
         RETURN (14,12),RC=4             RETURN TO TLMS
         EJECT
RETURN0  LR    R10,R13
         L     R13,4(R13)
         FREEMAIN R,LV=WORKSIZE,A=(R10)
         RETURN (14,12),RC=0             RETURN TO TLMS
         SPACE 5
ABEND    ABEND 485,DUMP,STEP             ABEND ON RACDEF
         EJECT
***********************************************************************
* A TAPE IS BEING USED WHILE THE TAPE OPTION IS VARIED INACTIVE, OR   *
* RACF IS INACTIVE. ALLOW PROCESSING, BUT DO NOTHING.                 *
***********************************************************************
         SPACE 3
INACTIVE DS    0H                        RACF OR TAPE VARIED INACTIVE
         WTO   'RTX999W - RACF OR TAPE OPTION VARIED INACTIVE',        X
               ROUTCDE=9
         B     RETURN0
         EJECT
***********************************************************************
* AN EXTERNAL TAPE IS BEING HANDLED - IF USER SPECIFIED PROTECT=YES   *
* THEN WARN HIM THAT SYSTEM PROCESSING WILL OCCUR, OR IF THE USER IS  *
* ADSP THEN WARN HIM NO TLMS ACTION WILL OCCUR.                       *
***********************************************************************
         SPACE 3
EXTERNAL DS    0H                        TAPE IS NOT TLMS CONTROLLED
         TM    JFCFLGS1,JFCBPROT         IS PROTECT=YES SPECIFIED?
         BNO   EXTNADSP                  EXTERNAL NON-ADSP?
         WTO   'RTX998W - NON-TLMS TAPE WILL BE DEFINED BY SYSTEM.',   X
               ROUTCDE=9
         B     RETURN0
EXTNADSP DS    0H
         WTO   'RTX997W - NON-TLMS TAPE WILL NOT BE AUTOMATICALLY DEFINX
               ED.',ROUTCDE=9
         B     RETURN0
         EJECT
CLASST   DC    X'07',CL7'TAPEVOL'        CLASS NAME
CLASS    DC    CL8'TAPEVOL'              CLASS NAME
         LTORG
         EJECT
SAVEINIT DS    0D                        INITIAL VALUES FOR DSA
$SAVE    DS    18F'0'                    DYNAMIC SAVE AREA
$VOLSER  DS    CL6'VOLSER'               COPIED VOLSER FROM PARMS
         DS    0D                        ALIGN
$RACDEFL RACDEF ENTITY=,TYPE=DEFINE,CLASS=CLASST,MF=L
$ALTER   ICHEINTY ALTER,MF=L,            LIST FORM OF ALTER            X
               ACTIONS=($ACLIST,$INST),  ACCESS LIST & INSTALLATION DATA
               TYPE='GEN',               THIS IS A GENERAL CLASS       X
               CLASS=CLASS               ADDRESS OF CLASS NAME
$LOC     ICHEINTY LOCATE,TYPE='GRP',ACTIONS=(,,,,),TESTS=(,,),         X
               MF=L,ENTRY=0,WKAREA=0
$ACLIST  ICHEACTN FIELD=ACL,MF=L,FLDATA=(11,*-*),RUN=NO
$INST    ICHEACTN FIELD=INSTDATA,FLDATA=(69,*-*),RUN=NO,MF=L
$USERACS ICHEACTN FIELD=USERACS,TESTS=(),MF=L
$UACC    ICHEACTN FIELD=UACC,FLDATA=(1,0),MF=L
$TUSER   ICHETEST FIELD=USERID,FLDATA=(8,0),MF=L
$ACL     DS    0H
$ACLUSR  DC    CL8' '                    USERID
$ACLACC  DC    XL1'00'                   ACCESS AUTHORITY
$ACLCNT  DC    XL2'0000'                 ACCESS COUNT
$TVOLLEN DC    XL1'00'                   LENGTH OF ENTITY
$TVOL    DC    CL44' '                   ENTITY NAME
$INSDATA DS    0H                        BEGIN INSTALLATION DATA
$INSTLN  DC    XL1'00'                   LENGTH OF DCNAME
$INSTDAT DC    CL69' '                   DCNAME NAME
$GRPNL   DC    XL1'00'                   HIGH LEVEL INDEX NAME LENGTH
$GRPN    DC    CL8' '                     AND NAME
$WKAREA  DC    CL80' '                   WORK AREA FOR LOCATE
$STATUS  DS    XL1'00'                   FLAGS
         EJECT
SAVEAREA DSECT
SAVE     DS    18F                       DYNAMIC SAVE AREA
VOLSER   DS    CL6'VOLSER'               COPIED VOLSER FROM PARMS
         DS    0D                        ALIGN
RACDEFL  RACDEF ENTITY=,TYPE=DEFINE,MF=L
ALTER    ICHEINTY ALTER,MF=L,            LIST FORM OF ALTER            X
               ACTIONS=(ACLIST,INST),    ACCESS LIST AND INSTALLATION  X
               TYPE='GEN',               THIS IS A GENERAL CLASS       X
               CLASS=,                   ADDRESS OF CLASS NAME         X
               OPTIONS=ACTION            FILL IN ACTION COUNT
LOC      ICHEINTY LOCATE,TYPE='GRP',ACTIONS=(,,,,),TESTS=(,,),         X
               MF=L,ENTRY=0,WKAREA=0
ACLIST   ICHEACTN FIELD=ACL,MF=L,FLDATA=(11,*-*),RUN=NO
INST     ICHEACTN FIELD=INSTDATA,FLDATA=(69,*-*),RUN=NO,MF=L
RUSERACS ICHEACTN FIELD=USERACS,TESTS=(),MF=L
RUACC    ICHEACTN FIELD=UACC,FLDATA=(1,0),MF=L
TUSER    ICHETEST FIELD=USERID,FLDATA=(8,0),MF=L
ACL      DS    0H
ACLUSR   DS    CL8                       USERID
ACLACC   DS    XL1                       ACCESS AUTHORITY
*                                        ALTER=X'80',CONTROL=X'40'
*                                        UPDATE=X'20',READ=X'10'
*                                        NONE=X'01'
ACLCNT   DS    XL2                       ACCESS COUNT
*
TVOLLEN  DS    AL1                       LENGTH OF ENTITY
TVOL     DS    CL44                      ENTITY NAME
INSTDATA DS    0H                        BEGIN INSTALLATION DATA
INSTDALN DS    AL1                       LENGTH OF DSNAME
INSTDA   DS    CL69' '                   DSNAME NAME
GRPNMLN  DS    XL1                       HIGH LEVEL INDEX NAME LENGTH
GRPNM    DS    CL8                        AND NAME
         SPACE 5
***
*** MAP WORK AREA PASSED TO RACF MANAGER ON A LOCATE CALL
***
WKAREA   DS    CL80                      WORK AREA FOR LOCATE
         ORG   WKAREA                    BACK UP AND MAP FIELDS
WKLEN    DS    F                            * LENGTH(INCLUDING SELF)
WKRBA    DS    CL6                          * RBA RETURN AREA
WKRES    DS    XL2                          * RESERVED
WKDUPCNT DS    F                            * DUPLICATE DSN COUNT
WKRES2   DS    D                            * RESERVED
WKLEN2   DS    F                            * LENGTH RETURNED DATA
WKAREA2  DS    0F                           * ACTUAL RETURNED DATA
         DS    X'0001'                 - PREFIX FOR FLAG FIELD(UACC)
EXTUACC  DS    XL1                     - GROUP UACC
EXTALEN  DS    XL2                     - LENGTH OF NEXT ELEMENT(0 OR 1)
EXTAUTH  DS    XL1                     - USERS ACCESS AUTHORITY
         ORG   ,                         ORG TO END OF WKAREA
         SPACE 2
STATUS   DS    XL1                       FLAGS
GROUPDS  EQU   X'80'                     GROUP DATASET
TLMSTAPE EQU   X'40'                     TLMS CONTROLLED VOLUME
GDG      EQU   X'20'                     GDG MEMBER
$DSAEND  EQU   *
WORKSIZE EQU   *-SAVEAREA
*
PARMLIST DSECT
TLMSVOL  DS    AL4                       ADDRESS OF CL6'VOLSER'
TLMSOPWA DS    AL4                       ADDRESS OF IOS WORK AREA
TLMSFLAG DS    AL4                       ADDRESS OF F'0',OR F'1'
*                                        0 IF TLMS TAPE,1 IF EXTERNAL
         EJECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         PRINT GEN
         IECDSECS (ASCB)
         IECDSECS (CVT)
         IECDSECS (IEZDEB)
         IECDSECS (MAIN)
         IECDSECS (PSA)
         IECDSECS (RACVT),EXPAND=YES
         EJECT
         IHAASXB                         ADDRESS SPACE EXTENSION BLOCK
         EJECT
         IHAACEE                         ACCESSOR ENVIRONMENT ELEMENT
         END
