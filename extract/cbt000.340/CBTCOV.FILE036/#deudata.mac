***********************************************************************
*                                                                     *
*        LOCAL DATA AND CONSTANT AREA FOR SCRIPTHY                    *
*                                                                     *
***********************************************************************
         SPACE
SCRIPTHY CSECT ,
         SPACE
HYALPHA  DC    C'ETAONRISHDLFCMUGYPWBVKXJQZ',C' '  INTERNAL CHAR ORDER
HYANCH   DC    (L'HYALPHA)A(0)     HYPHEN EXCEPTION WORD ANCHORS
HYPRATAD DC    A(HYPRATAB)         ADDR PRATT FREQUENCY TABLE
HYPLAST  DC    F'0'                LAST HYPHEN POSITION
HYLENWRD DC    F'0'                LENGTH OF WORD WORK
HYMAXSYL DC    F'14'               MAXIMUM SYLLABLE LENGTH
HYMAXWRD DC    F'35'               MAXIMUM INPUT WORD LENGTH
         SPACE
HYDCWORD DC    CL40' '             WORD DECOMPOSITION AREA
HYPRWORD DC    AL2(L'HYWKWORD+5,0),C'*'      RDW/CC TO DUMP WORDS
HYWKWORD DC    CL40' '             STRIPPED HYPHEN WORD WORK
HYPIND   DC    XL9'00'             HYPHEN BREAK POINTS WORK AREA
HYALPHSW DC    X'00'               WORD SCANNING SWITCH
         SPACE
         DC    0D'0'               FOR ALIGNMENT OF TABLE
HYPRATAB DC    0XL256'00'          PRATT FREQUENCY TABLE OF LETTERS
         DC    64X'21'                  INVALID LETTER CODES
         DC    X'20'                    BLANK
         DC    31X'21'                  INVALID LETTER CODES
         DC    X'1C'                    HYPHEN
         DC    27X'21'                  INVALID LETTER CODES
         DC    X'21'                    FORMER HYPHEN-T
         DC    4X'21'                   INVALID LETTER CODES
         DC    X'02130C09000B0F0806'    A,B,C,D,E,F,G,H,I  LOWER CASE
         DC    7X'21'                   INVALID LETTER CODES
         DC    X'17150A0D0403111805'    J,K,L,M,N,O,P,Q,R  LOWER CASE
         DC    8X'21'                   INVALID LETTER CODES
         DC    X'07010E1412161019'      S,T,U,V,W,X,Y,Z    LOWER CASE
         DC    23X'21'                  INVALID LETTER CODES
         DC    X'02130C09000B0F0806'    A,B,C,D,E,F,G,H,I
         DC    7X'21'                   INVALID LETTER CODES
         DC    X'17150A0D0403111805'    J,K,L,M,N,O,P,Q,R
         DC    8X'21'                   INVALID LETTER CODES
         DC    X'07010E1412161019'      S,T,U,V,W,X,Y,Z
         DC    22X'21'                  INVALID LETTER CODES
         EJECT
***********************************************************************
*                                                                     *
*              REGISTER DEFINITIONS                                   *
*                                                                     *
***********************************************************************
         SPACE
REGWK0   EQU   0
REG1     EQU   1
REG2     EQU   2
WORDREG  EQU   3
REGNCR   EQU   4     USED TO INCREMENT REGIX1 TO THE LIMIT IN REGLMT
REGLMT   EQU   5                       SEE REGNCR
REGIX1   EQU   6                       SEE REGNCR
REGWK3   EQU   7
REGWK2   EQU   8
REGWK1   EQU   9
REGRET   EQU   14                      CONTAINS SUBROUTINE RETURN ADDR
REGLNK   EQU   15    CONTAINS SUBROUTINE ADDR - POSS BASE REGISTER
*
*
GSTATUS  DS    CL63
ASFXTAB  DC    A(SFXTAB)
ASFXTBLS DC    A(SFXTBLS)
AYNMTRX  DC    A(YNMTRX)           YES/NO MATRIX TABLES
         SPACE
BINZERO  DC    F'0'
BIN4     DC    F'4'
BIN10    DC    F'10'
BIN14    DC    F'14'
BIN26    DC    F'26'
         SPACE
BINHEX   DC    X'000102030405060708090A0B0C0D0EF0'  CHAR TO HEX CONV
         SPACE
SAVEODD  DS    F
PREVDCM  DS    H         LENGTH OF WORD AFTER PREVIOUS DECOMPOSITION
PREVROOT DS    H
NUMFIT   DS    H
HYFCOM   DC    CL40' '
ASTATUS  DC    CL40' '
NUMCHR   DS    H
FIRSTVOW DS    H
LASTVOW  DS    H
INDBYTE  DS    CL1
POSSFLD  EQU   INDBYTE
YESFLD   EQU   INDBYTE
SFXSYL   DS    CL8
         DC    X'FF'
LSTCHR   DS    CL1
LSTCHROF DC    H'0'                LAST CHAR OFFSET FOR LAST FIT
ATEOW    DC    F'0'
BGWDSG   DC    F'0'
HFLDAD   DC    F'0'                  ADDRESS OF HYPFIELD INC. LTF IND.
MRGCNT   DC    H'0'
SCNDSW   DC    X'00'
HYFSW    DC    X'00'
VOWTBL   DC    X'0102010102020102'      01 = VOWEL
*                 E T A O N R I S       02 = CONSONANT
         DC    X'0202020202020102'      03 = Y INDIC.
*                 H D L F C M U G       00 = NON-ALPHA
         DC    X'0302020202020202'
*                 Y P W B V K X J
         DC    X'0202000000000000'
*                 Q Z*NON-ALPHA**
*
         SPACE 3
*****                                                             *****
*              SCAN LEFT FROM L-T-F FOR YES POINT BEFORE POSSIBLE     *
*****                                                             *****
SCNLFT   TM    NUMFIT+1,X'FF'
         BZ    RTRNLFT
         LH    REG1,NUMFIT
         LA    REG1,ASTATUS(REG1)   * REQUIRING SUFFIX ANALYSIS
         LA    REGWK1,ASTATUS      PLUS REG.FOR TEST OF BEGIN.OF WORD
SCNLFT1  TM    0(REG1),X'30'       TEST STATUS
         BO    FNDOUT              IF YES POINT EXIT
         BM    RTRNLFT             IF POSS. POINT GO TO SUFFIX ANALYSIS
BYPOSS   CR    REG1,REGWK1         HAS BEGINNING OF WORD BEEN REACHED
         BNH   FNDOUT               IF YES GO TO FOUND ROUTINE
         BCT   REG1,SCNLFT1        ELSE DECREMENT TO NEXT POINT TO LEFT
         B     SCNLFT1              AND CONTINUE TESTING
FNDOUT   DS    0H
        $CC    POS                 INDICATE FOUND
         B     SCNRET              GO TO RETURN
RTRNLFT  DS    0H
        $CC    NEG                 SET FOR SUFFIX ANALYSIS
SCNRET   DS    0H
         BR    REGRET              RETURN TO CALLER
         SPACE
*****          REVERSE NEGATE - SET POINTS RIGHT TO LEFT
*              TO NO TILL VOWEL ENCOUNTERED
NEGREV   LA    REGWK3,ASTATUS(REGWK3)   GENERATE ADDR FOR STATUS BYTE
REVTST   TM    0(REGWK3),X'01'          TEST CHAR FOR VOWEL
         BZ    STNREV                   AND BRANCH IF NOT
EXIT     LA    REG1,ASTATUS             TERMINATE FORWORD OR REVERSE
         SR    REGWK3,REG1               SCAN AND SET REGWK3 FOR REL.
        $CC    POS                 SET RETURN COND CODE
         BR    REGRET                    ADDRESS
STNREV   BCT   REGWK3,SET               ON NEGREV - SET TO PRECEEDING
        $CC    NEG                 SET RETURN COND CODE
         BR    REGRET
SET      TM    0(REGWK3),X'B0'     TEST FOR YES POINT SET BY SUFFIX
         BO    REVTST                   & BYPASS IF YES
         NI    0(REGWK3),X'CF'          ELSE SET TO NO
         B     REVTST                     THEN RETURN FOR TEST
*****          FORWARD NEGATE - SET POINTS LEFT TO RIGHT
*              TO NO TILL VOWEL ENCOUNTERED
NEGFWD   LA    REGWK3,ASTATUS+1(REGWK3) GENERATE ADDRESS FOR STATUS
FWDTST   TM    0(REGWK3),X'01'           BYTE & TEST FOR VOWEL
         BO    EXIT                     BRANCH IF YES
         NI    0(REGWK3),X'CF'           ELSE SET TO NO
         LA    REGWK3,1(REGWK3)          & INCREMENT TO NEXT CHAR.
         B     FWDTST
