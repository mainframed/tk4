***********************************************************************
*                                                                     *
*              INTERNAL FUNCTION 'READ' --- READ TO BUFF2             *
*                                                                     *
***********************************************************************
         SPACE
READ    $ENTER ,
READ01   DS    0H
         MVC   BUFF2,BLANKS        CLEAR INPUT AREA TO BLANKS
         SPACE
        $IFOFF SWITCHS,HIDBSWS,READ02   BRANCH IF NO HIDDEN BUFFER DATA
         LA    R1,HIDBANCH         POINT TO ANCHOR
        $CALL  HIDBDEL             CLEAN UP BUFFERS
         BC    BOMIT,READ02        BRANCH IF NO DATA
         L     X1,HIDBANCH         POINT TO HIDDEN BUFFER
         USING HIDB,X1             AREA LOOKS LIKE THIS
         LH    TEMP,HIDBLEN        LENGTH OF DATA
         STH   TEMP,BUFF2LGZ       SET DATA LENGTH
         BCTR  TEMP,0              LENGTH-1 OF DATA
         EX    TEMP,READMVCH       MOVE DATA TO BUFFER
         XC    HIDBLEN,HIDBLEN     ZERO HIDDEN BUFFER LENGTH
         LA    R1,HIDBANCH         POINT TO ANCHOR
        $CALL  HIDBDEL             CLEAN UP BUFFERS AGAIN
         LA    R1,BUFF2LGZ         POINT TO RESULT
         B     READ06              CONTINUE
         SPACE
READMVCH MVC   BUFF2(*-*),HIDBDATA PASS BACK HIDDEN BUFFER
         DROP  X1
         SPACE
READ02   DS    0H
         L     X1,PEANCH           PERFORM LINE ANCHOR
         LTR   X1,X1               DOES IT EXIST .Q
         BZ    READ04              BRANCH IF NOT
         SPACE
         USING OODSECT,X1          DATA LOOKS LIKE THIS
         L     R1,OOQCNT           NUMBER OF TIMES LEFT
         S     R1,F1               LESS ONE
         BNM   READ03              BRANCH IF SOME LEFT
         LA    R1,PEANCH           POINT TO ANCHOR
        $CALL  OVREMOV             DELETE TOP ENTRY
         B     READ02              AND TRY AGAIN
         SPACE
READ03   DS    0H
         ST    R1,OOQCNT           UPDATE TIMES LEFT
         LH    TEMP,OOQRDW         GET DATA LENGTH
         S     TEMP,F1             DECREMENT AND TEST LENGTH
         BM    READ02              TRY AGAIN IF NOTHING
         EX    TEMP,READMVCP       MOVE DATA TO BUFF2
         LA    TEMP,1(,TEMP)       RESTORE ACTUAL DATA LENGTH
         STH   TEMP,BUFF2LGZ       AND SET LENGTH
         LA    R1,BUFF2LGZ         POINT TO RESULT
         B     READ06              SUCCESSFUL READ
READMVCP MVC   BUFF2(*-*),OOQDATA  MOVE PERFORM DATA LINE
         DROP  X1
         SPACE
READ04   DS    0H
         LA    R1,BUFF2LGZ         POINT TO TARGET
         SPACE
READ05   DS    0H
         LA    TEMP,B2LG           GET MAXIMUM LINE LENGTH
         STH   TEMP,0(,R1)         AND STORE IN PARM AREA
         SPACE
        $CALL  RDLINE              GO TO INPUT COORDINATOR
         B     *+4(R15)            BRANCH ON RETURN CODE
         B     READ06              SUCCESSFUL READ
         B     READ07              EOF ON BOTTOM FILE..REISSUE READ
         B     READ09              EOF ON BOTTOM FILE..USER EXIT
         B     READ08              EOF ON BOTTOM FILE..REMOTE EXIT
         LA    R1,WRETQT           FINAL RECORD RETURN CODE
        $CALL  QUITS               CALL TERMINATION ROUTINE
         SPACE
READ06   DS    0H
         CLI   1(R1),X'00'         IS THIS A NULL LINE
         BNE   READ09              IF NOT, PASS IT BACK
         B     READ05              IF SO, READ ANOTHER ONE
         SPACE
READ07   DS    0H
         B     READ01              REISSUE THE READ
         SPACE
READ08   DS    0H
        $CALL  RMNEXT              SET UP FOR NEXT REMOTE IF ANY
         OC    RMIMSAV(4*16),RMIMSAV    ALTERNATE RETURN .Q
         BZ    READ01              BRANCH IF NOT
        $RESTOR ,                  RESTORE CALLER'S DUMMY REGS
         LM    R0,R15,RMIMSAV      RESTORE STACKED SAVED AREA
         XC    RMIMSAV(4*16),RMIMSAV    AND CLEAR IT AGAIN
         BR    RETURN              AND  RETURN TO ITS CALLER
         SPACE
READ09   DS    0H
         MVI   3(R1),C' '          SET DUMMY CHAR ONE TO BLANK
        $RESTOR KEEP=(R1)          RESTORE CALLER'S REGISTERS
         BR    RETURN              AND RETURN TO CALLER
         SPACE
***********************************************************************
*                                                                     *
*              INTERNAL FUNCTION 'TERMREAD' --- READ TO BUFF3         *
*                                                                     *
***********************************************************************
         SPACE
TERMREAD $ENTER ,
         L     R1,BUFF3AD          ADDRESS OF INPUT AREA
         MVC   4(B2LG,R1),BLANKS   CLEAR INPUT AREA TO BLANKS
         L     BASE2,VSCRICVT      COMMUNICATION VECTOR TABLE
         L     BASE2,VREAD-SCRICVT(,BASE2)   BASE ADDR OF ROUTINE
         LA    TEMP,READ05-READ(,BASE2)   WHERE TO ENTER
         BR    TEMP                ENTER IN MID STREAM
