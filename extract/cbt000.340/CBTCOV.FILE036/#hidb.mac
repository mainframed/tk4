***********************************************************************
*                                                                     *
*              INTERNAL FUNCTIONS 'HIDB' --- ALTER HIDDEN READ BUFFS  *
*                                                                     *
***********************************************************************
         SPACE
*        ON ENTRY  (R1>0) ->  AREA TO ENTER 'LIFO' ON HIDDEN STACK
*                  (R1<0) ->  AREA TO ENTER 'FIFO' ON HIDDEN STACK
*                  (TEMP) = LENGTH-1 OF DATA
*        ON EXIT   CC  =  BPOS  IF LINE STACKED
*                      =  BNEG  IF NOT
         SPACE
HIDBADD $ENTER ,
         LA    X3,HIDBANCH+HIDBCHN-HIDB POINT TO ANCHOR
         LTR   R1,R1               LIFO OR FIFO REQUEST .Q
         BNM   HIDBA02             BRANCH IF LIFO
         USING HIDB,X3             WANT END AREA LIKE THIS
HIDBA01  DS    0H
         OC    HIDBCHN,HIDBCHN     END OF THE CHAIN .Q
         BZ    HIDBA02             BRANCH IF YES
         L     X3,HIDBCHN          GET NEXT AREA
         B     HIDBA01             AND TRY AGAIN
         DROP  X3
         SPACE
HIDBA02  DS    0H
         LPR   X1,R1               POINT TO DATA LINE
         LTR   X2,TEMP             LENGTH-1 OF DATA
         BM    HIDBA06             ERROR IF NEGATIVE
         L     TEMP,0(,X3)         HIDDEN BUFFER ADDRESS
         LTR   TEMP,TEMP           DOES ONE EXIST .Q
         BNZ   HIDBA03             BRANCH IF YES
         LA    R1,HIDBLN+B2LG      FIRST LEVEL BUFFER LENGTH
        $CALL  GETCELL             GET THE AREA
         BC    BNEG,HIDBA06        ERROR IF NO SPACE
         ST    TEMP,0(,X3)         SET FIRST LEVEL BUFFER ADDRESS
         USING HIDB,TEMP           AREA GOT LOOKS LIKE THIS
         XC    HIDB(HIDBLN),HIDB   CLEAR PREFIX AREA
         STH   R1,HIDBBLKL         SET BLOCK LENGTH
         SPACE
HIDBA03  DS    0H
         OC    HIDBLEN,HIDBLEN     DATA AREA FREE .Q
         BZ    HIDBA04             BRANCH IF YES
         LA    R1,HIDBLN+1(,X2)    LENGTH NEEDED TO SAVE
        $CALL  GETCELL             GET THE NEW AREA
         BC    BNEG,HIDBA06        ERROR IF NO SPACE
         XC    HIDB(HIDBLN),HIDB   CLEAR PREFIX AREA
         MVC   HIDBCHN,0(X3)       MOVE 'NEXT' PTR TO CURRENT
         ST    TEMP,0(,X3)         ANCHOR POINTS TO NEW
         STH   R1,HIDBBLKL         SET LENGTH OF BLOCK
HIDBA04  DS    0H
         EX    X2,HIDBAMVC         SAVE TEXT
         LA    X2,1(,X2)           ACTUAL DATA LENGTH
         STH   X2,HIDBLEN          SAVE LENGTH OF DATA
        $ON    SWITCHS,HIDBSWS     HIDDEN BUFFER DATA PRESENT
        $CC    POS                 SUCCESSFUL TERMINATION
HIDBA05  DS    0H
        $EXIT  RC=0                AND RETURN TO CALLER
         SPACE
HIDBA06  DS    0H
         MVI   EFLAG024,ERRSET     NO SPACE ERROR
        $CC    NEG                 FAILURE TERMINATION
         B     HIDBA05             GO AND RETURN
         SPACE
HIDBAMVC MVC   HIDBDATA(*-*),0(X1) MOVE DATA TO HIDDEN BUFFER
         DROP  TEMP
         SPACE
***********************************************************************
*                                                                     *
*              HIDBDEL --- DELETE UNUSED HIDDEN BUFFER ELEMENTS       *
*                                                                     *
***********************************************************************
         SPACE
*        ON ENTRY  --  (R1) POINTS TO ANCHOR
*        ON EXIT    CC = BPOS  IF SOME DATA LEFT IN BUFFER CHAIN
*                      = BOMIT IF NO DATA LEFT IN BUFFER CHAIN
         SPACE
HIDBDEL $ENTER ,                   SAVE CALLER'S REGISTERS
         LR    X2,R1               POINT TO ANCHOR
HIDBD01  DS    0H
         L     X1,0(,X2)           POINT TO HIDDEN BUFFER CHAIN
         LTR   X1,X1               ANY PRESENT .Q
         BZ    HIDBD03             BRANCH IF NOT
         USING HIDB,X1             AREA LOOKS LIKE THIS
         LH    TEMP,HIDBLEN        LENGTH OF DATA
         S     TEMP,F1             DECREMENT AND TEST LENGTH
         BNM   HIDBD02             BRANCH IF DATA PRESENT
         OC    HIDBCHN,HIDBCHN     LAST IN QUEUE .Q
         BZ    HIDBD03             BRANCH IF YES, NOTHING HERE
         MVC   0(L'HIDBANCH,X2),HIDBCHN UNCHAIN THIS ENTRY
         LA    R0,HIDB             POINT TO AREA
         LH    R1,HIDBBLKL         LENGTH OF BLOCK
        $CALL  FREECELL            RELEASE AREA
         B     HIDBD01             AND DO IT AGAIN
         DROP  X1
         SPACE
HIDBD02  DS    0H
        $ON    SWITCHS,HIDBSWS     HIDDEN BUFFER DATA PRESENT
        $CC    POS                 SET CC FOR DATA PRESENT
         B     HIDBD04             GO TO RETURN
HIDBD03  DS    0H
        $OFF   SWITCHS,HIDBSWS     NO HIDDEN BUFFER DATA PRESENT
        $CC    OMIT                SET CC FOR NO DATA PRESENT
HIDBD04  DS    0H
        $EXIT  RC=0                AND RETURN TO CALLER
         SPACE
***********************************************************************
*                                                                     *
*              HIDBPUR --- DELETE ALL HIDDEN BUFFER ELEMENTS          *
*                                                                     *
***********************************************************************
         SPACE
*        ON ENTRY  --  (R1) POINTS TO ANCHOR
         SPACE
HIDBPUR $ENTER ,
         LR    X2,R1               POINT TO ANCHOR
         L     X1,0(,X2)           HIDDEN BUFFER CHAIN ANCHOR
HIDBP01  DS    0H
         LTR   X1,X1               AT THE END .Q
         BZ    HIDBP02             YES, GO AND RETURN
         USING HIDB,X1             AREAS LOOK LIKE THIS
         LA    R0,HIDB             FREE THIS AREA
         LH    R1,HIDBBLKL         WITH THIS LENGTH
         L     X1,HIDBCHN          NEXT ELEMENT IN CHAIN
        $CALL  FREECELL            FREE AN ELEMENT
         B     HIDBP01             GO DO NEXT ONE
         DROP  X1
         SPACE
HIDBP02  DS    0H
         XC    0(L'HIDBANCH,X2),0(X2)   CLEAR CHAIN ANCHOR
        $OFF   SWITCHS,HIDBSWS     SAVE RESULT FOR QUICK REFERENCE
        $EXIT  RC=0                RETURN TO CALLER
