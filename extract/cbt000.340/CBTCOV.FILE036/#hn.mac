***********************************************************************
*                                                                     *
*              .HN (HEADNOTE DEFINITION) --- CONTROL                  *
*                                                                     *
***********************************************************************
         SPACE
HN      $ENTER ,
        $CALL  GETYESNO            GET AND TEST FIRST ARG
         LA    X1,HNEAREA          ASSUME EVEN HEADNOTE AREA
         LA    X2,ICORHNE          AND ITS FLAG
         CLI   YNRESULT,YNEVN      WAS ARG 'EVEN' .Q
         BE    HN01                BRANCH IF YES
         LA    X1,HNOAREA          ASSUME ODD HEADNOTE AREA
         LA    X2,ICORHNO          AND ITS FLAG
         CLI   YNRESULT,YNODD      WAS ARG 'ODD' .Q
         BE    HN01                BRANCH IF YES
         LA    X1,HNAREA           ORDINARY HEADNOTE AREA
         LA    X2,ICORHN           AND ITS FLAG
         ST    COUNT,ARGSTART      RESCAN ARGUMENT AGAIN
         USING CPFKFN,X1           DESCRIPTOR AREA POINTER
         SPACE
HN01     DS    0H
        $CALL  GETYESNO            GET AND TEST ARGUMENT
         BC    BPOS,HNBEG          BRANCH IF START
         BC    BNEG,HNEND          BRANCH IF END
         BC    BOMIT,HNE003        BRANCH IF ARG OMITTED
         CLI   YNRESULT,YNDEL      WAS ARG 'DELETE' .Q
         BE    HNCAN               BRANCH IF YES
         CLI   YNRESULT,YNPUR      WAS ARG 'PURGE' OR 'CANCEL' .Q
         BE    HNCAN               BRANCH IF YES
         CLI   YNRESULT,YNDUMP     WAS ARG 'DUMP' .Q
         BE    HNDUMP              BRANCH IF YES
         B     HNE005              ELSE ARG IS INVALID
         SPACE
HNBEG    DS    0H
         CLI   ICORFLG,ICORNONE    FORMATTING INTO CORE NOW .Q
         BNE   HNE043              ERROR IF YES
         LA    R1,CPFKFN           AREA TO FREE
        $CALL  HNCLR               DELETE ANY CURRENT HEADNOTE
         LA    R1,ICORSLEN         NEED THIS MUCH SPACE FOR STATUS
        $CALL  GETCELL             GET THE SPACE
         BC    BNEG,HNE024         BRANCH IF FAILURE
         SPACE
         USING ICORSAVE,TEMP       SAVE AREA LOOKS LIKE THIS
         ST    TEMP,CPFKFNS        RETAIN SAVE POINTER
         MVC   ICOROLD1,FMTOLD1    SAVE CURRENT SWITCH INFORMATION
         MVC   ICOROLD2,FMTOLD2    SAVE CURRENT PAGE DESCRIPTORS
         MVC   ICORBX,BXPTR        SAVE CURRENT BOX BUILD INFORMATION
         XC    BXPTR,BXPTR         CLEAR CURRENT BOX
         MVC   ICOROO,OOANCH       SAVE OUTPUT OVERLAY ANCHOR
         XC    OOANCH,OOANCH       CLEAR CURRENT OUTPUT OVERLAY
         MVC   ICORSKSP,SKSP       SAVE CONDITIONAL SKIP/SPACE
         XC    SKSP,SKSP           CLEAR CURRENT SKIP/SPACE
         DROP  TEMP
         SPACE
         XC    OLDCOUNT,OLDCOUNT   WIPE OUT PREVIOUS LINE
         STC   X2,ICORFLG          NOW SAVING HEADNOTE
         LA    TEMP,CPFKFN         HEADNOTE BLOCK CONTROL
         ST    TEMP,ICORANCH       SAVE THIS FOR LATER
         LH    TEMP,INDL           RESET INDENT
         AH    TEMP,OFFLI          ..
         STH   TEMP,INDL           ..
         STH   TEMP,RMARGIN        SET RIGHT MARGIN
         SR    TEMP,TEMP           ZERO WORK REGISTER
         STH   TEMP,INDENTR        ZERO RIGHT INDENT VALUE
         STH   TEMP,PICNT          ZERO PARAGRAPH INDENT
         STH   TEMP,HICNT          ZERO HANGING INDENT
         STH   TEMP,UNDL           ZERO UNDENT VALUE
         STH   TEMP,OFFLI          ZERO OFFSET VALUE
         STH   TEMP,CECNT          ZERO CENTER VALUE
         STH   TEMP,LICNT          ZERO LITERAL VALUE
         MVC   CLLZ,LLZ            SET LINE LENGTH TO FULL PAGE WIDTH
         B     HNDONE              START SAVING HEADNOTE
         SPACE
HNEND    DS    0H
         EX    X2,HNCLI            NOW SAVING A .HN SEQUENCE INCORE .Q
         BNE   HNE043              ERROR IF NOT
        $CALL  PRINT               CLEAR LAST .HN LINE FROM BUFFER
         SPACE
         L     TEMP,CPFKFNS        RESTORE SAVE POINTER
         XC    CPFKFNS,CPFKFNS     CLEAR POINTER
         USING ICORSAVE,TEMP       SAVE AREA LOOKS LIKE THIS
        $CALL  BXCLR               DELETE ANY BOX IN EFFECT
         LA    R1,OOANCH           OUTPUT OVERLAY ANCHOR
        $CALL  OVCLR               DELETE ANY IN PROGRESS
        $MVC   FMTOLD1,ICOROLD1    RESTORE CURRENT SWITCH INFORMATION
        $MVC   FMTOLD2,ICOROLD2    RESTORE CURRENT PAGE DESCRIPTORS
        $MVC   BXPTR,ICORBX        RESTORE BOX BUILD INFORMATION
        $MVC   OOANCH,ICOROO       RESTORE OUTPUT OVERLAY INFORMATION
        $MVC   SKSP,ICORSKSP       RESTORE CONDITIONAL SKIP/SPACE
         LA    R0,ICORSAVE         SAVE AREA HERE
         LA    R1,ICORSLEN         LENGTH OF SAVE AREA
        $CALL  FREECELL            RELEASE THE AREA
         DROP  TEMP
         SPACE
         MVI   ICORFLG,ICORNONE    RESET SAVING HEADNOTE SWITCH
         XC    ICORANCH,ICORANCH   CLEAR HEADNOTE BLOCK CONTROL
        $ON    CPFKFNG,CPFKKEEP    MARK DATA TO BE KEPT AFTER PRINT
         B     HNDONE              ALL THROUGH
         SPACE
HNCAN    DS    0H
         EX    X2,HNCLI            DEFINING A HEADNOTE NOW .Q
         BE    HNE043              YES, CAN'T DELETE NOW
         LA    R1,CPFKFN           AREA TO FREE
        $CALL  HNCLR               FREE THE HEADNOTE DATA
         B     HNDONE              AND GO TO RETURN
         SPACE
HNDUMP   DS    0H
         EX    X2,HNCLI            DEFINING A HEADNOTE NOW .Q
         BE    HNE043              YES, CAN'T PRINT NOW
         LA    R1,CPFKFN           AREA TO PRINT
        $CALL  HNPRT               PRINT HEADNOTE
         B     HNDONE              AND GO TO RETURN
         SPACE
HNDONE   DS    0H
        $EXIT  RC=0                RETURN TO CALLER
         SPACE
HNCLI    CLI   ICORFLG,*-*         DEFINING SAME TYPE OF HEADNOTE .Q
         DROP  X1
         SPACE
HNE003   DS    0H
         MVI   EFLAG003,ERRSET     OMITTED OPERAND
         B     HNDONE              GO TO TERMINATE
HNE005   DS    0H
         MVI   EFLAG005,ERRSET     INVALID OPERAND
         B     HNDONE              GO TO TERMINATE
HNE024   DS    0H
         MVI   EFLAG024,ERRSET     NO SPACE FOR SAVING CURRENT STATUS
         B     HNDONE              GO TO TERMINATE
HNE043   DS    0H
         MVI   EFLAG043,ERRSET     NOT IN A KEEP
         B     HNDONE              GO TO TERMINATE
         SPACE 2
***********************************************************************
*                                                                     *
*              HEADNOTE CANCEL SUBROUTINE                             *
*                                                                     *
***********************************************************************
         SPACE
*        ON ENTRY  --  (R1) POINTS TO HEADNOTE DESCRIPTOR AREA
         SPACE
HNCLR   $ENTER ,
         LR    X1,R1               DESCRIPTOR BLOCK TO FREE
         USING CPFKFN,X1           TELL THE ASSEMBLER
         L     TEMP,CPFKFNA        FIRST LINK OF CHAIN
         SPACE
HNCLR01  DS    0H
         LTR   TEMP,TEMP           ANY DATA PRESENT .Q
         BZ    HNCLR02             BRANCH IF NOT
         USING FNQELEM,TEMP        ELEMENT LOOKS LIKE THIS
         LH    R1,FNQRDW           LENGTH OF DATA
         LA    R1,FNQOVHD(,R1)     PLUS LEADING OVERHEAD
         LA    R0,FNQELEM          POINT TO DATA
         L     TEMP,FNQFCHN        NEXT ELEMENT
        $CALL  FREECELL            FREE THE ELEMENT
         B     HNCLR01             GO DO THE NEXT
         DROP  TEMP
         SPACE
HNCLR02  DS    0H
         XC    CPFKFN(CPFKFNL),CPFKFN   CLEAR THE DESCRIPTOR BLOCK
         DROP  X1
         SPACE
        $EXIT  RC=0                RETURN TO CALLER
         SPACE 2
***********************************************************************
*                                                                     *
*              HEADNOTE PRINT SUBROUTINE                              *
*                                                                     *
***********************************************************************
         SPACE
*        ON ENTRY  --  (R1) POINTS TO HEADNOTE DESCRIPTOR AREA
         SPACE
HNPRT   $ENTER ,
         LR    X1,R1               DESCRIPTOR BLOCK TO PRINT
         USING CPFKFN,X1           TELL THE ASSEMBLER
         L     R1,CPFKFNC          HEADNOTE LINE COUNT
         LTR   R1,R1               ANYTHING THERE .Q
         BZ    HNPRT01             BRANCH OUT IF NOT
         LH    COUNT,PLCT          LINES LEFT ON THIS PAGE
         SH    COUNT,BMMRG         LESS BOTTOM MARGIN
         SH    COUNT,FNSEP         LESS FOOTNOTE MARGIN
         CR    R1,COUNT            CHECK LENGTH OF HEADNOTE
         BH    HNPE037             BRANCH IF IT WON'T FIT
         LA    R1,CPFKFN           POINT TO HEADNOTE DESCRIPTOR
        $CALL  CPFKPRT             PRINT HEADNOTE
         SPACE
HNPRT01  DS    0H
        $EXIT  RC=0                RETURN TO CALLER
         DROP  X1
         SPACE
HNPE037  DS    0H
         MVI   EFLAG037,ERRSET     HEADNOTE TOO LONG FOR PAGE
         B     HNPRT01             AND GO TO RETURN
