***********************************************************************
*                                                                     *
*              .BX (BOX) --- CONTROL                                  *
*                                                                     *
***********************************************************************
         SPACE
BX      $ENTER ,
        $CALL  PRINTNB             CLEAR PRINT BUFFER
        $CALL  PRSKSPC             FLUSH ANY COND SKIP/SPACE
        $CALL  GETYESNO            GET AND TEST FIRST ARGUMENT
         BC    BOMIT,BX01          IF NO ARGS, REPEAT LAST SET
         BC    BNEG,BX03           BRANCH IF 'OFF'
         CLI   YNRESULT,YNDEL      WAS ARG 'DELETE' .Q
         BE    BX06                BRANCH IF YES
         B     BX07                TRY AGAIN FOR NUMERICS
         SPACE
BX01     DS    0H
         L     X1,BXPTR            GET BOX DATA POINTER
         LTR   X1,X1               ANY PRESENT .Q
         BZ    BX25                NO, GO TO RETURN
         USING BXAREA,X1           AREA LOOKS LIKE THIS
         LH    COUNT,BXBLKLN       LENGTH OF HORIZONTAL LINE
         LR    X2,COUNT            RETAIN LENGTH FOR LATER
         BCTR  X2,0                BUT AS AN OFFSET
BX02     DS    0H
         S     COUNT,F1            DECREMENT LENGTH BY ONE
         BM    BX20                BRANCH TO PUT IF ALL DONE
         LA    R1,BXDATA(COUNT)    POINT TO CHAR
         TM    0(R1),BXDOWN        DOWN CHAR ON .Q
         BZ    BX02                BRANCH IF NOT
         OI    0(R1),BXUP          TURN ON UP CHAR ALSO
         B     BX02                AND CONTINUE
         DROP  X1
         SPACE
BX03     DS    0H
         L     X1,BXPTR            GET BOX DATA POINTER
         LTR   X1,X1               ANY PRESENT .Q
         BZ    BX25                NO, GO TO RETURN
         USING BXAREA,X1           AREA LOOKS LIKE THIS
         LH    COUNT,BXBLKLN       LENGTH OF HORIZONTAL LINE
BX04     DS    0H
         S     COUNT,F1            DECREMENT LENGTH BY ONE
         BM    BX05                BRANCH TO PUT IF ALL DONE
         LA    R1,BXDATA(COUNT)    POINT TO CHAR
         TM    0(R1),BXDOWN        DOWN CHAR ON .Q
         BZ    BX04                BRANCH IF NOT
         OI    0(R1),BXUP          TURN ON UP CHAR
         NI    0(R1),FF-BXDOWN     TURN OFF DOWN CHAR
         B     BX04                AND CONTINUE
BX05     DS    0H
        $CALL  BXHORIZ             STACK HORIZONTAL RESULT
BX06     DS    0H
        $CALL  BXCLR               REMOVE CURRENT BOX DEFINITION
         B     BX25                GO TO RETURN
         SPACE
BX07     DS    0H
         SR    X2,X2               FORMER COLUMN OFFSET
         BCTR  X2,0                MINUS ONE FOR NEVER USED
         ST    COUNT,ARGSTART      RESCAN FOR NUMERIC
BX08     DS    0H
        $CALL  GETNUM              GET NUMERIC ARGUMENT
         BC    BOMIT,BX17          BRANCH IF DONE
         BC    BDNO,BXE005         ERROR IF INVALID
         CLI   NUMSIGN,C' '        ARG UNSIGNED .Q
         BE    BX09                BRANCH IF YES
         LA    COUNT,1(COUNT,X2)   MAKE RELATIVE CHANGE
BX09     DS    0H
         LA    X3,1(,X2)           LAST OPERAND VALUE
         CR    COUNT,X3            BIGGER THAN LAST .Q
         BNP   BXE014              ERROR IF TOO SMALL
         L     X1,BXPTR            DATA AREA POINTER
         LTR   X1,X1               AREA PRESENT .Q
         BNZ   BX10                BRANCH IF YES
         LA    R1,BXLEN            LENGTH REQUIRED
        $CALL  GETCELL             GET THE AREA
         BC    BNEG,BXE024         ERROR IF NO SPACE
         LR    X1,TEMP             TRANSFER POINTER
         ST    X1,BXPTR            AND SAVE FOR LATER
         USING BXAREA,X1           AREA LOOKS LIKE THIS
         XC    BXAREA(BXLEN),BXAREA     CLEAR ENTIRE AREA
BX10     DS    0H
         LR    X3,COUNT            TRANSFER COLUMN
         BCTR  X3,0                CHANGE TO OFFSET
         LR    TEMP,X2             RETAIN STARTING OFFSET
BX11     DS    0H
         LA    X2,1(,X2)           NEXT OFFSET
         CR    X2,X3               DONE .Q
         BNL   BX14                BRANCH IF YES
         LA    R1,BXDATA(X2)       POINT TO NEXT CHAR
         TM    0(R1),BXDOWN        DOWNWARD POINTER ON .Q
         BNO   BX12                BRANCH IF NOT
         OI    0(R1),BXRIGHT       POINT TO RIGHT
         NI    0(R1),FF-BXDOWN     NO FURTHER DOWNWARD MOVEMENT
BX12     DS    0H
         LTR   TEMP,TEMP           FIRST TIME THROUGH .Q
         BM    BX13                BRANCH IF YES
         OI    0(R1),BXLEFT+BXRIGHT     ENTER A DASH
         B     BX11                AND CONTINUE
BX13     DS    0H
         TM    0(R1),BXUP          CHARACTER POINTS UP .Q
         BZ    BX11                NO LINE FILL IF NOT
         SR    TEMP,TEMP           RESUME DRAGGING DASHES
         B     BX11                AND CONTINUE
BX14     DS    0H
         LA    R1,BXDATA(X3)       POINT TO THIS COLUMN
         OI    0(R1),BXDOWN+BXRIGHT     ADD DOWN AND RIGHT
         LTR   X3,X3               FIRST COLUMN .Q
         BZ    BX16                BRANCH IF YES
         BCTR  R1,0                BACKUP ONE
         CLI   0(R1),BXBLANK       IS FORMER CHAR NULL .Q
         BNE   BX15                BRANCH IF NOT
         NI    1(R1),FF-BXLEFT     KILL LEFT CHAR
         B     BX16                AND CONTINUE
BX15     DS    0H
         OI    1(R1),BXLEFT        POINT TO THE LEFT
BX16     DS    0H
         LR    X2,X3               REMEMBER LAST OFFSET
         LA    X3,1(,X3)           FROM OFFSET TO COLUMN
         CH    X3,BXBLKLN          HAS LINE GROWN .Q
         BNH   BX08                BRANCH IF NOT
         STH   X3,BXBLKLN          SET LONGER LENGTH
         B     BX08                GET NEXT ARGUMENT
         SPACE
BX17     DS    0H
         LA    R1,BXDATA(X2)       LAST CHAR ENTERED
         CLI   1(R1),BXBLANK       NEXT CHAR NULL .Q
         BNE   BX18                BRANCH IF NOT
         NI    0(R1),FF-BXRIGHT    CLEAR RIGHT POINTER
BX18     DS    0H
         LA    TEMP,1(,X2)         NEXT OFFSET VALUE
BX19     DS    0H
         CH    TEMP,BXBLKLN        OFF THE END OF LINE .Q
         BNL   BX20                BRANCH IF YES
         LA    R1,BXDATA(TEMP)     POINT TO NEXT CHAR
         NI    0(R1),FF-BXDOWN     CLEAR ANY DOWNWARD POINTER
         OI    0(R1),BXLEFT        ENTER LEFT POINTER
         BCTR  R1,0                BACKUP ONE
         OI    0(R1),BXRIGHT       AND POINT TOWARDS SAME
         LA    TEMP,1(,TEMP)       NEXT CHARACTER OFFSET
         B     BX19                LOOK TO END OF LINE
         DROP  X1
         SPACE
BX20     DS    0H
        $CALL  BXHORIZ             STACK HORIZONTAL RESULT
         L     X1,BXPTR            RESTORE DATA POINTER
         LTR   X1,X1               ANY AREA PRESENT .Q
         BZ    BX25                BRANCH IF NOT
         USING BXAREA,X1           AND TELL THE ASSEMBLER
         LH    COUNT,BXBLKLN       LENGTH OF HORIZONTAL LINE
BX21     DS    0H
         S     COUNT,F1            DECREMENT LENGTH BY ONE
         BM    BX23                BRANCH IF ALL DONE
         LA    R1,BXDATA(COUNT)    POINT TO CHAR
         NI    0(R1),FF-BXUP       CLEAR UP POINTER
         TM    0(R1),BXDOWN        DOES CHAR GO DOWN .Q
         BZ    BX22                BRANCH IF NOT
         OI    0(R1),BXUP          THEN NEXT LINE IT GOES UP
BX22     DS    0H
         CR    COUNT,X2            PASSED LAST DOWN .Q
         BNH   BX21                BRANCH IF NOT
         MVI   0(R1),BXBLANK       CLEAR CHAR
         STH   COUNT,BXBLKLN       SET STRING LENGTH
         LTR   COUNT,COUNT         FIRST COLUMN .Q
         BNP   BX21                BRANCH IF YES
         BCTR  R1,0                BACKUP ONE COLUMN
         NI    0(R1),FF-BXRIGHT    DO NOT POINT TO THIS
         B     BX21                CONTINUE
BX23     DS    0H
         SR    COUNT,COUNT         START AGAIN FROM THE BEGINNING
BX24     DS    0H
         LA    R1,BXDATA(COUNT)    POINT TO CHAR
         TM    0(R1),BXDOWN        IS IT A DOWN .Q
         BO    BX25                YES, BRANCH OUT
         MVI   0(R1),BXBLANK       ELSE CLEAR CHAR
         NI    1(R1),FF-BXLEFT     AND NEXT CHAR THAT POINTS TO IT
         LA    COUNT,1(,COUNT)     NEXT CHAR
         CH    COUNT,BXBLKLN       ALL FINISHED STRING .Q
         BL    BX24                BRANCH BACK IF NOT
         SPACE
BX25     DS    0H
        $EXIT  RC=0                RETURN TO CALLER
         SPACE
BXE005   DS    0H
         MVI   EFLAG005,ERRSET     INVALID OPERAND
         B     BX25                AND GO TO RETURN
BXE014   DS    0H
         MVI   EFLAG014,ERRSET     OPERAND TOO SMALL
         B     BX25                AND GO TO RETURN
BXE024   DS    0H
         MVI   EFLAG024,ERRSET     NO SPACE FOR WORK AREA
         B     BX25                AND GO TO RETURN
         SPACE
BXCLR   $ENTER ,
         L     R0,BXPTR            CURRENT BOX DEFINITION POINTER
         LTR   R0,R0               ANY PRESENT .Q
         BZ    BXCLR01             BRANCH IF NOT
         XC    BXPTR,BXPTR         CLEAR POINTER
         LA    R1,BXLEN            HOW MUCH TO FREE
        $CALL  FREECELL            FREE THE WORK AREA
BXCLR01  DS    0H
        $EXIT  RC=0                RETURN TO CALLER
