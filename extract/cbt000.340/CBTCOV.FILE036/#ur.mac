***********************************************************************
*                                                                     *
*              .UR (USE REFERENCE) --- RE-FORMAT WITH SUBSTITUTION.   *
*                                                                     *
***********************************************************************
         SPACE
*        ON EXIT:  R15 = 0   IF NULL LINE RESULTS FROM SUBSTITUTION
*                  R15 = 8   IF NON-NULL LINE RESULTS
         SPACE
UR      $ENTER ,
        $OFF   SWITCHS,URSWS       SET NO SUBSTITUTES
         XC    URBBACK,URBBACK     CLEAR URBUMP BACKUP COUNT
         SPACE
         MVC   BUFF1,BUFF2         COPY INPUT LINE
         LA    R0,BUFF2            TARGET ADDRESS FOR RESULT
         ST    R0,URCURPTR         SET CURRENT POINTER
         L     TEMP,ARGSTART       ADDRESS OF BLANK AFTER ".UR"
         SR    TEMP,R0             RELATIVE ADDRESS
         LA    TEMP,BUFF1+1(TEMP)  ADDRESS OF OPERAND COPY START
         L     R1,ARGSTOP          LAST CHARACTER TO SCAN IN ORIGINAL
         SR    R1,R0               RELATIVIZE IT
         LA    R1,BUFF1(R1)        REAL ADDRESS OF COPY
         SPACE
         LA    R0,BUFF2+B2LG       END OF AREA FOR RESULT
         ST    R0,URENDPTR         SET END POINTER
        $IFOFF SWITCHS,UTSWS,UR01  BRANCH IF NO TRACE
         CLC   URMAXCNT(2),URMAXCNT+2  FIRST TIME .Q
         BNE   UR01                BRANCH IF NOT
         BAL   RETURN,URTRAC       PRINT OUT INPUT LINE
UR01     DS    0H
         MVC   BUFF2(B2LG),BUFF2M1 BLANK OUT BUFFER FOR DIAGNOSTICS
         SPACE
UR02     DS    0H
         MVI   URFLAG,X'00'        INITIALIZE LOCAL FLAGS
         LR    R15,TEMP            SAVE SCAN START ADDRESS
         LA    R0,1                INCREMENT FOR BXLE
UR03     DS    0H
         CLI   0(TEMP),URAMPCHR    IS THIS A PARAMETER .Q
         BE    UR04                IF MAYBE, SKIP AHEAD
         BXLE  TEMP,R0,UR03        NO, KEEP LOOKING
UR04     DS    0H
         LR    X1,TEMP             COMPUTE STRING COUNT
         SR    X1,R15              ..
         BNP   UR05                IF NOTHING TO MOVE, DON'T TRY
         BAL   RETURN,URBUMP       BUMP PTRS AND MOVE DATA
UR05     DS    0H
         CLR   TEMP,R1             DID END OF STRING STOP US .Q
         BH    UR22                IF YES, GO FINISH UP
         BE    UR07                CHECK FOR ENDING VARIABLE INDIC
         SPACE
         CLI   1(TEMP),C' '        VARIABLE INDIC ALL ALONE .Q
         BNE   UR06                BRANCH IF NOT
         LA    TEMP,1(,TEMP)       BUMP OVER AMPERSAND
         B     UR08                AND GO TO ENTER ONE
UR06     DS    0H
         CLI   1(TEMP),URAMPCHR    NO, DOUBLED VARIABLE INDIC .Q
         BNE   UR09                IF NOT, MUST BE A REFERENCE NAME
UR07     DS    0H
         LA    TEMP,2(,TEMP)       SKIP DOUBLE "&" IN SOURCE
UR08     DS    0H
         LA    R15,URAMPER         SINGLE AMPERSAND POINTER
         LA    X1,L'URAMPER        LENGTH OF AMPERSAND
         BAL   RETURN,URBUMP       BUMP PTRS AND MOVE DATA
         CLR   TEMP,R1             END OF SOURCE STRING YET .Q
         BNH   UR02                IF NOT, CONTINUE SCAN
         B     UR22                YES, QUIT
         SPACE
UR09     DS    0H
         LA    TEMP,1(,TEMP)       UP TO START OF NAME
         ST    TEMP,ARGSTART       SCAN FROM THERE
         ST    R1,ARGSTOP          AND THIS WILL BE THE END
         STM   R0,R15,URSV         SAVE REGISTERS
        $CALL  GETSYM              GET SYMBOL FROM INPUT STRING
         BC    15-BOMIT,UR10       BRANCH IF NOT OMITTED
         LM    R0,R15,URSV         RESTORE REGS
         B     UR08                AND GO BACK
         SPACE
UR10     DS    0H
         BC    15-BDNO,UR11        BRANCH IF NOT INVALID
        $IFON  SRNMFLG,SRNMTSYM,URE01   BRANCH IF BAD SYMBOL
        $IFON  SRNMFLG,SRNMTSUB,URE02   BRANCH IF BAD SUBSCRIPT
        $IFANY SRNMFLG,(SRNMTFR,SRNMTTO),URE03  BRANCH IF BAD SUBSTRING
UR11     DS    0H
         LR    X1,COUNT            POINT TO AMPERSAND
         S     X1,F3               BACK UP THREE CHARACTERS (*'&)
         CLI   1(X1),C''''         QUOTE BEFORE AMPERSAND .Q
         BNE   UR15                BRANCH IF NOT
         CLI   0(X1),C'L'          LQUOTE BEFORE AMPERSAND .Q
         BE    UR12                BRANCH IF YES
         CLI   0(X1),C'T'          TQUOTE BEFORE AMPERSAND .Q
         BE    UR13                BRANCH IF YES
         B     UR15                CONTINUE
UR12     DS    0H
        $ON    URFLAG,URLQUT       SET LQUOTE FLAG
         B     UR14                GO MARK LENGTH
UR13     DS    0H
        $ON    URFLAG,URTQUT       SET TQUOTE FLAG
UR14     DS    0H
         LA    X1,2                LENGTH OF CHARQUOTE
         ST    X1,URBBACK          SET BUMP BACK LENGTH
         SPACE
UR15     DS    0H
         LA    TEMP,1(TEMP,COUNT)  POINT TO NEXT CHAR TO SCAN
         ST    TEMP,URSV+4*TEMP    RESTORE NEXT CHAR POINTER LATER
        $OFF   SWITCHS,UCSWS       TURN OFF .UR COMMA SWITCH
        $CALL  SYMUR               LOOK UP SYMBOL
         ST    COUNT,URSV+4*COUNT  RESTORE POINTER
         USING RND,COUNT           RETURNED POINTER
         LM    R0,R15,URSV         RESTORE REGISTERS
         BC    BPOS,UR20           BRANCH IF SINGLE ENTRY
         SPACE
UR16     DS    0H
         CLC   RNSLINK,F0          AT THE SUBSCRIPT END .Q
         BE    UR21                BRANCH OUT IF YES
         L     COUNT,RNSLINK       LOAD NEXT POINTER
         TM    SRNMFLG,SRNMALLP+SRNMALLN  ONLY NEG OR POS SUBS .Q
         BZ    UR18                BRANCH TO ENTER IF NOT
         TM    SRNMFLG,SRNMALLN    NEGATIVE ONLY .Q
         BO    UR17                BRANCH IF YES
         TM    RNSUBS,X'80'        TEST FOR POSITIVE SUBSCRIPT .Q
         BO    UR19                BRANCH IF NOT POSITIVE
         B     UR18                GO ENTER POSITIVE SUBSCRIPT
UR17     DS    0H
         TM    RNSUBS,X'80'        TEST FOR NEGATIVE SUBSCRIPT .Q
         BNO   UR19                BRANCH IF NOT NEGATIVE
UR18     DS    0H
         BAL   RETURN,URENTER      ENTER NEXT PORTION
UR19     DS    0H
         B     UR16                LOOK FOR MORE ENTRIES
         SPACE
UR20     DS    0H
         BAL   RETURN,URENTER      ENTER SINGLE ITEM
         SPACE
UR21     DS    0H
        $ON    SWITCHS,URSWS       SET SUBSTITUTE MADE SWITCH
         CLR   TEMP,R1             DID STRING END STOP US .Q
         BH    UR22                IF YES, GO FINISH UP
         CLI   0(TEMP),C'.'        NO, DID PERIOD END SCAN .Q
         BNE   UR02                IF NOT, CONTINUE SCAN
         LA    TEMP,1(,TEMP)       YES, A PERIOD IS IGNORED
         B     UR02                NOW CONTINUE SCAN
         SPACE
UR22     DS    0H
         L     R1,URCURPTR         CURRENT END OF RECORD POINTER
         LA    TEMP,BUFF2          START OF STRING
         SR    R1,TEMP             COMPUTE RE-FORMATTED LENGTH
         STH   R1,BUFF2LGZ         SET IT FOR MAIN CONTROLLER'S USE
        $IFOFF SWITCHS,UTSWS,UR23  BRANCH IF NO TRACE
        $IFOFF SWITCHS,URSWS,UR23  BRANCH IF NO CHANGES
         BAL   RETURN,URTRAC       PRINT OUT NEW LINE
         SPACE
UR23     DS    0H
         LH    R15,BUFF2LGZ        GET LENGTH OF SUBSTITUTED RESULT
         LTR   R15,R15             IS IT NULL .Q
         BZ    UR24                BRANCH IF YES
         LA    R15,WRETNR          SET OK RETURN CODE
UR24     DS    0H
        $EXIT  RC=(R15)            GO PROCESS THE NEW LINE
         SPACE
URE01    DS    0H
         MVI   EFLAG008,ERRSET     INVALID SYMBOL
         B     URE04               GO TO COMMON ERROR EXIT
URE02    DS    0H
         MVI   EFLAG038,ERRSET     INVALID SUBSCRIPT
         B     URE04               GO TO COMMON ERROR EXIT
URE03    DS    0H
         MVI   EFLAG039,ERRSET     INVALID SUBSTRING
         B     URE04               GO TO COMMON ERROR EXIT
URE04    DS    0H
        $IFON  SWITCHS,URSWS,URE05 BRANCH IF SOME SUBSTITUTION
         MVC   BUFF2,BUFF1         RESTORE ORIGINAL INPUT LINE
URE05    DS    0H
         B     UR23                GO TO RETURN
         SPACE
***********************************************************************
*                                                                     *
*              SUBROUTINE TO ENTER DATA IN OUTPUT STRING              *
*                                                                     *
***********************************************************************
         SPACE
URENTER  DS    0H
        $SAVE  ,                   SAVE REGISTERS THRU URENT
         LH    X2,SRNMFR           SAVE 'FROM' SUBSTRING
         LH    X3,SRNMTO           SAVE 'TO' SUBSTRING
        $IFNONE URFLAG,(URLQUT,URTQUT),URENT05    BRANCH IF NO SPECIAL
        $IFON  URFLAG,URTQUT,URENT03    BRANCH IF TQUOTE
         SR    R0,R0               PREPARE LENGTH REGISTER
         IC    R0,RNCLEN           GET CHARACTER LENGTH
         TM    RNFLAG,RNCHAR       CHARACTER VARIABLE .Q
         BO    URENT02             BRANCH IF YES
         L     R0,RNDVAL           LOAD NUMERIC VALUE
         CVD   R0,DECM             CONVERT TO PACKED
         LA    R1,UREDWRK+L'UREDWRK-1   IN CASE SIGNIFICANCE FORCED
         MVC   UREDWRK,UREDPTN     INSERT EDIT PATTERN FOR EDIT
         EDMK  UREDWRK,DECM+3      UNPACK TO CHARACTER
         BNM   URENT01             BRANCH IF POSITIVE
         BCTR  R1,0                BACK UP OUTPUT POINTER
         MVI   0(R1),C'-'          ENTER LEADING MINUS
URENT01  DS    0H
         LA    R0,UREDWRK+L'UREDWRK     END OF FORMATTED NUMBER
         SR    R0,R1               LENGTH OF RESULT
URENT02  DS    0H
         LH    R1,SRNMTO           'END' SUBSTR VALUE
         CR    R1,R0               COMPARE WITH ACTUAL LEN
         BNH   URENT02A            BRANCH IF NOT GREATER
         LR    R1,R0               TAKE ACTUAL LENGTH
URENT02A DS    0H
         SH    R1,SRNMFR           LESS 'START' SUBSTR
         A     R1,F1               PLUS ONE IS LENGTH
         CR    R1,R0               IS SUBSTR SHORTER .Q
         BNL   URENT02B            BRANCH IF NOT
         LTR   R0,R1               USE SUBSTR LENGTH AND TEST
         BNM   URENT02B            BRANCH IF OK
         SR    R0,R0               ELSE USE ZERO
URENT02B DS    0H
         LA    COUNT,URDLQUT       POINT TO NUMERIC WORK
         ST    R0,RNDVAL           ENTER LENGTH OF VARIABLE
         B     URENT04A            CONTINUE WITH RESULT
URENT03  DS    0H
         LA    R0,C'N'             ASSUME NUMERIC
         TM    RNFLAG,RNCHAR       IS IT CHARACTER .Q
         BNO   URENT04             BRANCH IF NOT
         LA    R0,C'C'             SET TO CHARACTER TYPE
URENT04  DS    0H
         LA    COUNT,URDTQUT       POINT TO CHARACTER WORK
         STC   R0,RNCVAL           ENTER TYPE OF VARIABLE
URENT04A DS    0H
         MVC   SRNMFR,SRNMFR+L'SRNMFR   RESTORE DEFAULT 'FROM' SUBSTR
         MVC   SRNMTO,SRNMTO+L'SRNMTO   RESTORE DEFAULT 'TO' SUBSTR
         SPACE
URENT05  DS    0H
         TM    RNFLAG,RNCHAR       CHARACTER STRING .Q
         BNO   URENT08             IF NOT, SKIP AHEAD
         CLI   RNCLEN,X'00'        YES, IS IT NULL STRING .Q
         BE    URENT11             IF YES, NO COPY
        $IFOFF SWITCHS,UCSWS,URENT06  BRANCH IF NO CONCATENATOR
         LA    R15,URCOMBL         CONCATENATOR STRING
         LA    X1,L'URCOMBL        LENGTH OF STRING
         BAL   RETURN,URBUMP       BUMP PTRS AND MOVE DATA
URENT06  DS    0H
         SR    X1,X1               NOT NULL, ZERO REG
         IC    X1,RNCLEN           GET STRING LENGTH
         LA    R15,RNCVAL          SHORT CHARACTER OPERAND
         CLI   RNCLEN,L'RNCVAL     LONG CHARACTER VALUE .Q
         BNH   URENT07             BRANCH IF NOT
         L     R15,RNCPTR          POINTER TO LONG VALUE
URENT07  DS    0H
         BAL   RETURN,URSUBSTB     BUMP PTRS AND MOVE DATA
        $ON    SWITCHS,UCSWS       SET COMMA SWITCH
         B     URENT11             GO TO RETURN
         SPACE
URENT08  DS    0H
         L     X1,RNDVAL           LOAD NUMERIC VALUE
         CVD   X1,DECM             CONVERT TO PACKED
         LA    R1,UREDWRK+L'UREDWRK-1   IN CASE SIGNIFICANCE FORCED
         MVC   UREDWRK,UREDPTN     INSERT PATTERN FOR EDIT
         EDMK  UREDWRK,DECM+3      UNPACK TO CHARACTER
         BNM   URENT09             BRANCH IF POSITIVE
         BCTR  R1,0                BACK UP OUTPUT POINTER
         MVI   0(R1),C'-'          ENTER LEADING MINUS
URENT09  DS    0H
        $IFOFF SWITCHS,UCSWS,URENT10  BRANCH IF NO ', '
         LA    R15,URCOMBL         CONCATENATOR STRING
         LA    X1,L'URCOMBL        LENGTH OF STRING
         BAL   RETURN,URBUMP       BUMP PTRS AND MOVE DATA
URENT10  DS    0H
         LA    X1,UREDWRK+L'UREDWRK     END OF FORMATTED NUMBER
         SR    X1,R1               LENGTH OF RESULT
         LR    R15,R1              ADDRESS OF NUMBER
         BAL   RETURN,URSUBSTB     BUMP PTRS AND MOVE DATA
        $ON    SWITCHS,UCSWS       SET COMMA SWITCH
URENT11  DS    0H
         STH   X2,SRNMFR           RESTORE 'FROM' SUBSTRING
         STH   X3,SRNMTO           RESTORE 'TO' SUBSTRING
        $RESTOR ,                  RESTORE URENT REGISTERS
         BR    RETURN              RETURN TO CALLER
         SPACE
***********************************************************************
*                                                                     *
*              SUBROUTINE TO ADD A STRING OF TEXT TO THE              *
*              OUTPUT BUFFER.  IT HAS TWO ENTRY POINTS.               *
*              THE FIRST 'URBUMP' ADDS TEXT WITH NO QUESTIONS.        *
*              THE SECOND 'URSUBSTB' ALLOWS FOR L' OR T' AND          *
*              FOR SUBSTRING.                                         *
*                                                                     *
***********************************************************************
         SPACE
*        ON ENTRY     (X1)  LENGTH OF STRING TO ADD
*                     (R15) POINTER TO STRING TO ADD
         SPACE
URBUMP   DS    0H
        $SAVE  ,                   SAVE CALLER'S REGS
         L     X2,URCURPTR         CURRENT OUTPUT PTR
         B     URBUMP03            ADD SIMPLE STRING
URSUBSTB DS    0H
        $SAVE  ,                   SAVE CALLER'S REGS AT ALT ENTRY
         L     X2,URCURPTR         CURRENT OUTPUT PTR
         L     X3,URBBACK          BACKUP OUTPUT LENGTH
         S     X3,F1               LENGTH-1
         BNP   URBUMP01            BRANCH IF NONE
         S     X2,URBBACK          BACKUP CURRENT POINTER
         EX    X3,URMVCBL          BLANK BACKUP RESULT
         XC    URBBACK,URBBACK     CLEAR BACKUP VALUE
URBUMP01 DS    0H
         AH    R15,SRNMFR          POINTER PLUS START OFFSET
         BCTR  R15,0               LESS ONE
         SH    X1,SRNMFR           LENGTH LESS START OFFSET
         A     X1,F1               PLUS ONE
         BNM   URBUMP02            BRANCH IF SOMETHING LEFT
         SR    X1,X1               ELSE ONLY NULL STRING LEFT
URBUMP02 DS    0H
         LH    R0,SRNMTO           END SUBSTRING POINT
         SH    R0,SRNMFR           LESS FROM SUBSTRING
         A     R0,F1               PLUS ONE IS LENGTH
         CR    R0,X1               IS SUBSTRING SHORTER .Q
         BNL   URBUMP03            BRANCH IF NOT
         LR    X1,R0               USE SUBSTRING LENGTH
URBUMP03 DS    0H
         LTR   X1,X1               IS LENGTH VALID .Q
         BNM   URBUMP04            BRANCH IF YES
         SR    X1,X1               ELSE ONLY NULL STRING
URBUMP04 DS    0H
         AR    X2,X1               PLUS THIS LENGTH
         C     X2,URENDPTR         OFF THE TOP .Q
         BH    URBUMP05            YES, IGNORE ERROR FOR NOW
         ST    X2,URCURPTR         UPDATE CURRENT POINTER
         SR    X2,X1               RESTORE ORIGINAL POINTER
         S     X1,F1               SS LENGTH-1
         BM    URBUMP05            BRANCH IF NOTHING LEFT
         EX    X1,URMVC            MOVE DATA SEGMENT
URBUMP05 DS    0H
        $RESTOR ,                  RESTORE CALLER'S REGS
         BR    RETURN              RETURN TO CALLER
         SPACE
***********************************************************************
*                                                                     *
*              SUBROUTINE TO DISPLAY SUBSTITUTED RESULT               *
*                                                                     *
***********************************************************************
         SPACE
URTRAC   DS    0H
        $SAVE  ,                   SAVE CALLER'S REGS
         L     COUNT,BUFF3AD       POINT TO WORK AREA
         XC    0(4,COUNT),0(COUNT) CLEAR RDW
         MVC   4(B2LG,COUNT),BLANKS     CLEAR CC AND DATA AREA
        $IFON  SWITCHS,URSWS,URTRAC01   BRANCH IF SOME SUBSTITUTION
         CLC   URMAXCNT(2),URMAXCNT+2   FIRST LEVEL CALL .Q
         BNE   URTRAC01                 BRANCH IF NOT
         MVI   4(COUNT),C'0'            DOUBLE SPACE FIRST LINE
URTRAC01 DS    0H
         LR    R0,COUNT            POINT TO RECORD TO DISPLAY
         LA    R1,1                OFFSET ONE IF OFFLINE
        $IFOFF TTYPE,TONLINE,URTRAC02   BRANCH IF NOT ONLINE
         LA    R1,2                OFFSET IF ONLINE
URTRAC02 DS    0H
        $CALL  PRNUM               ENTER LINE NUMBER FIRST
         MVC   4+1+28(B2LG-1-28,COUNT),BUFF2  ENTER DATA TO PRINT
         LH    R1,BUFF2LGZ         DATA LENGTH
         LA    R1,5+28(,R1)        PLUS RDW, CC AND LINE NUMBER
         STH   R1,0(,COUNT)        SET LRECL FOR PRINT
        $CALL  PRTERM              DISPLAY THE TRACE LINE
        $RESTOR ,                  RESTORE CALLER'S REGS
         BR    RETURN              RETURN TO CALLER
         SPACE
URMVC    MVC   0(*-*,X2),0(R15)    EXECUTED MOVE DATA SEGMENT
URMVCBL  MVC   0(*-*,X2),BLANKS    EXECUTED CLEAR REMAINDER
         SPACE
URCOMBL  DC    C', '               INTER ENTRY CONCATENATOR
URAMPCHR EQU   C'&&'               REFERENCE NAME INDICATOR CHAR
URAMPER  DC    AL1(URAMPCHR)       SINGLE AMPERSAND REPLACES ONE
         SPACE
        $SYSREF URDLQUT,TYPE=NUM,VALUE=*-*
        $SYSREF URDTQUT,TYPE=CHAR,LENGTH=1,VALUE='*'
         SPACE
         DROP  COUNT
