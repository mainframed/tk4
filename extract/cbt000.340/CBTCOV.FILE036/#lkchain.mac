***********************************************************************
*                                                                     *
*                            LKCHAIN                                  *
*                                                                     *
*        ROUTINE TO INIT NEW LINK ELEMENT FREE STORAGE LIST           *
*                                                                     *
***********************************************************************
         SPACE
*        ON ENTRY --  (PCHAR) POINT TO NEW LARGE CHAR BLOCK
         SPACE
LKCHAIN $ENTER ,
         USING LARAELEM,PCHAR      ENTRY PARM
         XC    LARAELEM(LARABSIZ),LARAELEM   CLEAR BLOCK PREFIX
         MVC   LARAFOR,LKANCH      NEXT LARGE BLOCK PTR
         ST    PCHAR,LKANCH        POINT TO NEW LARGE BLOCK
         SPACE
         L     R1,LKASIZE          CURRENT TOTAL CHAR COUNT
         LA    R1,LKAONE(,R1)      PLUS NUMBER WE ADD
         ST    R1,LKASIZE          SET NEW TOTAL CHAR COUNT
         L     R1,LKSIZE           LENGTH OF FREE LIST
         LA    R1,LKAONE(,R1)      BUMP SAME
         ST    R1,LKSIZE           UPDATE LENGTH OF FREE LIST
         SPACE
         LA    PCHAR,LARAELEM+LARABSIZ  CHARACTER BLOCKS GO HERE
         USING LINKELEM,PCHAR      TELL THE ASSEMBLER
         LA    R1,LINKELEM         REMEMBER THE FIRST
         LA    COUNT,LKAONE-1      NUMBER OF BLOCKS TO LINK -1
         SR    LAST,LAST           INITIALIZE BACKWARD POINTER
         SR    R0,R0               CONSTANT ZERO
LKCH01   DS    0H
         LA    NEXT,LINKELEM+LINKBSIZ   ADDRESS OF NEXT ELEMENT
         ST    NEXT,LINKFOR        SET FORWARD POINTER
         ST    R0,LINKDOWN         INITIALIZE DOWNWARD LINE
         ST    LAST,LINKBACK       SET BACKWARD LINK
         LR    LAST,PCHAR          MOVE CURRENT TO LAST
         LR    PCHAR,NEXT          MOVE FORWARD TO NEXT LINK ELEMENT
         BCT   COUNT,LKCH01        TEST FOR END OF LIST
         L     COUNT,LKSTAR        START OF FREE LIST
         LTR   COUNT,COUNT         ANY LIST PRESENT .Q
         BZ    LKCH02              BRANCH IF NOT
         ST    PCHAR,LINKBACK-LINKELEM(,COUNT)    CHAIN BACKWARDS
LKCH02   DS    0H
         ST    COUNT,LINKFOR       LAST FORWARD POINTER TO EXISTING
         ST    R1,LKSTAR           SET FIRST FREE ELEMENT
         ST    R0,LINKDOWN         CLEAR LAST DOWN POINTER
         DROP  PCHAR
        $EXIT  RC=0                RETURN TO CALLER
