***********************************************************************
*                                                                     *
*        INTERNAL FUNCTION 'PNUMFMT' --- FORMAT CURRENT PAGE NUMBER   *
*                                                                     *
***********************************************************************
         SPACE
*        ON EXIT  --  (COUNT)  LENGTH-1 OF RESULTING STRING
*                 --  EBCDPAGE CONTAINS RESULTING STRING
         SPACE
PNUMFMT $ENTER ,
         MVC   EBCDPAGE,BLANKS     CLEAR TARGET AREA
         L     R1,PACNTI           GET CURRENT INTEGER PAGE NUMBER
         CVD   R1,DECM             CONVERT TO DECIMAL
        $IFOFF SWITCHS,FROMAN,HPDEC01   BRANCH IF ARABIC
         LA    X3,DECPAGE          RUNNING RESULT ADDRESS
         LA    X2,4*4-2            SHIFT AMOUNT AND INDEX
         LA    X1,X'0F'            DIGIT SELECT MASK
         SLL   X1,4*4              START LEFT TO RIGHT
         LA    R0,4                BXH INCREMENT = -4
         LNR   R0,R0               ..
         SR    R1,R1               STOP AT -2
         SR    COUNT,COUNT         HOLDS COUNT BYTE
         B     HPROM02             SKIP SHIFT FIRST TIME
         SPACE
HPROM01  DS    0H
         SRL   X1,4                SET TO SELECT NEXT DIGIT
HPROM02  DS    0H
         L     TEMP,DECM+4         GET PAGE NUMBER
         NR    TEMP,X1             SELECT NEXT DIGIT
         BZ    HPROM03             (IF ZERO, NO DIGIT)
         SPACE
         SRL   TEMP,0(X2)          SHIFT TO POSITION
         IC    COUNT,ROMPATL(TEMP) GET BYTE COUNT
         LA    TEMP,ROMPAT(TEMP)   PATTERN ADDRESS
         MVC   0(4,X3),0(TEMP)     COPY IN PATTERN
         LA    TEMP,ROMCHAR(X2)    CHARACTERS FOR THIS DECADE
         TR    0(4,X3),0(TEMP)     NOW ROMAN NUMERALS
         AR    X3,COUNT            UPDATE POINTER TO TARGET
         SPACE
HPROM03  DS    0H
         BXH   X2,R0,HPROM01       DO 4 DIGIT POSITIONS
         SPACE
         LA    X2,DECPAGE          RESULT ADDRESS
         SR    X3,X2               COMPUTE LENGTH OF RESULT
         BP    HPROM04             BRANCH IF SOMETHING THERE
         MVI   0(X2),C'*'          ENTER ASTERISK INSTEAD
         B     HPROM05             AND GO TO DONE
HPROM04  DS    0H
         BCTR  X3,0                COMPUTE SS-TYPE COUNT
HPROM05  DS    0H
         LR    COUNT,X3            TRANSFER LENGTH-1
         EX    COUNT,PNUMMVC       ENTER ROMAN RESULT
        $IFOFF SWITCHS,FUPCASE,HPROM06  BRANCH IF NOT UPPER CASE
         EX    COUNT,PNUMOC        CONVERT ROMAN TO UPPER CASE
HPROM06  DS    0H
         B     PNUMRET             DONE WITH CONVERSION, GO TO RETURN
         SPACE
PNUMMVC  MVC   EBCDPAGE(*-*),0(X2) SAVE FIRST PART OF NUMBER
PNUMOC   OC    EBCDPAGE(*-*),BLANKS     CONVERT NUMBER TO UPPER CASE
         SPACE
HPDEC01  DS    0H
         OI    DECM+7,X'0F'        FIX THE SIGN FIRST
         UNPK  DECPAGE,DECM        UNPACK TO CHARACTERS
         LA    COUNT,L'DECPAGE-1   LOCATE FIRST CHARACTER
         LA    X2,DECPAGE          ..
HPDEC02  DS    0H
         TM    0(X2),X'0F'         LOOK FOR NON-ZERO DIGIT
         BNZ   HPDEC03             BRANCH IF FOUND
         LA    X2,1(,X2)           ..
         BCT   COUNT,HPDEC02       ..
HPDEC03  DS    0H
         EX    COUNT,PNUMMVC       ENTER INTEGER RESULT
         SPACE
         L     R1,PACNTD           DECIMAL PART OF PAGE NUMBER
         LTR   R1,R1               ANYTHING THERE .Q
         BNP   PNUMRET             NO, GO TO RETURN
         SPACE
         LA    COUNT,1(,COUNT)     BUMP LENGTH-1 BY ONE
         LA    R0,C'.'             DECIMAL POINT BETWEEN
         STC   R0,EBCDPAGE(COUNT)  ENTER IT
         SPACE
         CVD   R1,DECM             CONVERT DECIMAL PART
         OI    DECM+7,X'0F'        FIX THE SIGN FIRST
         UNPK  DECPAGE,DECM        UNPACK TO CHARACTER
         LA    R1,L'DECPAGE-1      LENGTH OF RESULT TO CHECK
         LA    X2,DECPAGE          WHERE IT LIES
HPDEC04  DS    0H
         TM    0(X2),X'0F'         LOOK FOR NON-ZERO DIGIT
         BNZ   HPDEC05             BRANCH IF FOUND
         LA    X2,1(,X2)           NEXT CHARACTER
         BCT   R1,HPDEC04          CONTINUE TO LOOK
HPDEC05  DS    0H
         LA    TEMP,EBCDPAGE+1(COUNT)   NEXT PART GOES HERE
         EX    R1,PNUMDECA         ADD DECIMAL PART
         LA    COUNT,1(COUNT,R1)   NEW TOTAL LENGTH-1
         SPACE
PNUMRET  DS    0H
         SR    R1,R1               CLEAR WORK REGISTER
         IC    R1,PNPREF           LENGTH OF PAGE NUMBER PREFIX
         S     R1,F1               LENGTH-1 OF PAGE PREFIX
         BM    PNPRSF02            BRANCH IF NO PREFIX
         LA    TEMP,1(,COUNT)      LENGTH OF CURRENT
         LA    X2,EBCDPAGE(R1)     START OF TARGET
PNPRSF01 DS    0H
         IC    R0,EBCDPAGE-1(TEMP) END CHARACTER
         STC   R0,0(TEMP,X2)       MOVE RESULT ABOUT
         BCT   TEMP,PNPRSF01       DO THEM ALL
         LA    COUNT,1(R1,COUNT)   NEW LENGTH-1
         LA    X2,PNPREF+1         PREFIX IS HERE
         EX    R1,PNUMMVC          ENTER PAGE NUMBER PREFIX
PNPRSF02 DS    0H
         SR    R1,R1               CLEAR WORK REGISTER
         IC    R1,PNSUFX           LENGTH OF PAGE SUFFIX
         S     R1,F1               LENGTH-1 OF PAGE SUFFIX
         BM    PNPRSF03            BRANCH IF NO SUFFIX
         LA    TEMP,EBCDPAGE+1(COUNT)   TARGET FOR SUFFIX
         LA    COUNT,1(R1,COUNT)   NEW LENGTH-1
         LA    X2,PNSUFX+1         SUFFIX IS HERE
         EX    R1,PNUMDECA         ENTER PAGE NUMBER SUFFIX
         SPACE
PNPRSF03 DS    0H
        $RESTOR KEEP=(COUNT)       RESTORE CALLER'S REGISTERS
         BR    RETURN              AND RETURN TO CALLER
         SPACE
PNUMDECA MVC   0(*-*,TEMP),0(X2)   ADD DECIMAL PART TO END
         SPACE
ROMPAT   EQU   *-4                 ORIGIN OR ROMAN NUMERAL PATTERNS
ROMPATL  EQU   *-1                 ORIGIN OF LENGTH TABLE
         DC    X'04000001'              I    X    C    M
         DC    X'04040002'              II   XX   CC   MM
         DC    X'04040403'              III  XXX  CCC  MMM
         DC    X'04030002'              IV   XL   CD   M?
         DC    X'03000001'              V    L    D    ?
         DC    X'03040002'              VI   LX   DC   ?M
         DC    X'03040403'              VII  LXX  DCC  ?MM
         DC    X'03040404'              VIII LXXX DCCC ?MMM
         DC    X'04020002'              IX   XC   CM   *M
         SPACE
ROMCHAR  EQU   *-4                 ORIGIN OF DECADE CHARACTERS
         DC    XL4'A7A58900'            (XVI)
         DC    XL4'8393A700'            (CLX)
         DC    XL4'94848300'            (MDC)
         DC    XL4'5C6F9400'            (*?M)
