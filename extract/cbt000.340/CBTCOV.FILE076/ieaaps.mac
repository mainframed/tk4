         MACRO
         IEAAPS  &STORAGE,&TIMER,&FLOATPT,&IQE,&TRACE,&TIMESL,     EM94C
               &JST,&EMU,&ATTACH,&SMF,&SERR                       19E02
     TITLE 'IEAAPS, DISPATCHER AND EXIT EFFECTOR'
* 71980005                                                         3434
.*1284043200,043410                                                MO17
.*0480005410,033735-033745,043200-043405,043415,043436,049185,     2472
.*    049186                                                       2472
.*0480135400                                                       1834
.*0480032800-033611,034000-036000                                A25384
.*   030453-030456,033691-033697,048924-049028,050426-050433       I275
.*  030410-030500,033612-033632,038420-038520,043300-043415       19018
.*  043612-043618,048820-048880,049181-049191                     19018
.*  069200-070200,079400-080400,115600-115800                     19572
.*133110-133116,133142-133147                                    A40746
.*133180-133204                                               BD A48096
         AIF   ('&SMF' NE 'SMF').NOSMFA                           19018
***   THIS SMF WORD IS DEPENDENT ON A MINUS FOUR         ***      19018
***   DISPLACEMENT FROM  'IEA0DS'.....                   ***      19018
         DC    A(SYSWSAVE)    .ADDR OF SYS WAIT SAVE FIELDS       19018
.NOSMFA  ANOP                                                     19018
IEAAPS   DS    0D
         ENTRY IEA0DS
IEA0DS   DS    0D
         USING IEAAPS,0
         ENTRY IEATCBP
         ENTRY IECXTLER
         ENTRY SIRB
         ENTRY IEA0EF00
         ENTRY SVCNV
         ENTRY IECIERLC
         ENTRY DISPRET                                        CE A35198
         EXTRN IEA0FN00
         AIF   ('&SERR' NE 'MCH').NORMS                           19E02
         ENTRY IEARMSSW,IEARMSAD                                  19E02
.NORMS   ANOP                                                     19E02
.*
.*       PARAMETERS FOR IEAAPS   -  JST AND T/S REQUIRE TTIME
.*                               -  TTIME REQUIRES OTHR12  OR BOTH12
.*                               -   EMULATOR FOR MOD 85 ONLY
.* IEAAIH
.* DEPENDENT
.*
.*
.*  YES        1    STORAGE             PRIM      PART
.*  YES        2    TIMER               NOTIM     DTIME     TTIME
.*  YES        3    F.P. REGS           Y         N
.*             4    IQE                 NONE12    ONLY12
.*                                      OTHR12    BOTH12
.*
.*  YES        5    TRACE               Y         N
.*             6    TIMESLICE           NOSLICE   TIMESL
.*  YES        7    JOB/STEP TIME       Y         N
.*             8    EMULATOR            EMUY      EMUN
.*             9    MFT-ATTACH          ATTACH    NOATTH           I250
.*  YES       10    SMF                 SMF       NSF             19018
.*            11    SERR                MCH       SERP            19E02
.*
.*       NONE12     DOES NOT HAVE SPECIAL  12*
.*
.*       ONLY12     BDAM,ISAM,BTAM
.*
.*       OTHR12     GRAPHICS, TTIME (INTERVAL TIMER)
.*
.*       BOTH12     ONLY12  + OTHR12
.*
        AIF   ('&STORAGE' EQ 'PRIM').PSBP
         EXTRN IEAHEAD
       ENTRY LEQC
.PSBP   ANOP
         AIF   ('&SMF' NE 'SMF').NOSMF                            19018
         ENTRY SYSWSAVE                                           19018
.NOSMF   ANOP                                                     19018
IQETCB   EQU   12                                                A67891
MSK      EQU   120                                               A67891
         SPACE 3
         AIF   ('&EMU' NE 'EMUY').NOEMEQU                          EM94
EMBIT    EQU   X'10' .        MASK TO TEST EMULATOR TCB.BIT        EM94
EMMCW    EQU   56                  EMMCW DISP IN MSB              19019
MSBPTR   EQU   224                 MSBPTR DISP IN CVT             19019
.NOEMEQU ANOP                                                      EM94
PIBPTR   EQU   1                        .ADDR OF PIB              19018
JSTQEADR EQU   1                        .J/S TQE ADDRESS          19018
RETREG   EQU   2                        .LINK REG                 19018
TENQ     EQU   3                        .ADDR OF TIMER ENQUEUE    19018
TDEQ     EQU   3                        .ADDR OF TIMER DEQUEUE    19018
TCBOLD   EQU   11                       .'OLD' TCB POINTER        19018
PIBJSTQE EQU   40                       .PIB J/S TQE DISPL        19018
TQEFLAG  EQU   0                        .TQE FLAG BYTE            19018
TCBPIB   EQU   124                      .TCB PIB OFFSET           19018
CVTHEADA EQU   160                                                M0004
R9MSB    EQU   9 .            MSB REG                              EM94
R13MSB   EQU   13 .           MSB REG (AFTER GPRS 0-9 RESTORED)    EM94
R14WK    EQU   14 .           WORK REG                             EM94
GX       EQU   1                   IQE REGISTER
GL       EQU   14
GA       EQU   4
GB       EQU   6
GC       EQU   12                  WORK REGISTER
IRBOF    EQU   8                   OFFSET OF IRB ADDR. IN DEB.
ERRTAB   EQU   8
DEBOF    EQU   8
TQEREG   EQU   1                        TQE REGISTER               MTS0
TSCEREG  EQU   2                       TIME-SLICE CONTROL ELEMENT  MTS0
LINKREG  EQU   2                        RETREG                     MTS0
XOLD     EQU   11                      CURRENTLY DISPATCHED TCB    MTS0
XNEW     EQU   10                       ADDR OF NEW TCB            MTS0
XRB      EQU   12                       ADDR OF RB                 MTS0
WORKR    EQU   13                       USED TO SAVE NEXT TCB      MTS0
X14      EQU   14                       RETURN REGISTER
TCBFTS   EQU   X'01'                    TIME-SLICE BIT IN TCB      MTS0
TQEFLGS  EQU   0                        TQE FLAGS FIELD            MTS0
TQEVAL   EQU   12                       TQE LENGTH FIELD           MTS0
.NSLICE1 ANOP                                                      MTS0
        EJECT
         AIF   ('&STORAGE' NE 'PRIM').PSAA
         ENTRY IEATCBLK
***  MINIMUM SYSTEM DISPATCHER  ***
         SPACE
XTFNOP   BC    0,XTFKTR            Q. IRB'S ARE TO BE SCHEDULED.
XTG      DS    0H
**      L      12,IEAPPTCB+TCBRBP  GET CURRENT RB ADDRESS.
         SPACE
         DC    AL4(IEAPPTCB+0)
         ORG   *-4
         DC    X'58C0'
         ORG   *+2
         SPACE
**      MVC   RESUMPSW(8),XRBPSW(12)  MOVE RESUME PSW TO LOW CORE.
         SPACE
         DC    AL4(RESUMPSW)
         ORG   *-4
         DC    X'D207'
         ORG   *+2
         DC    AL2(XRBPSW+X'C000')
         SPACE
         AIF   ('&TIMER' NE 'TTIME').PSAB
         CLI   XRBWAT(12),0        Q. RB HAS WAIT COUNT.
         BC    7,DSPA
**      L     1,IEAPPTCB+TCBTME    GET TIMER ELEMENT ADDR.
         SPACE
         DC    AL4(IEAPPTCB+120)
         ORG   *-4
         DC    X'5810'
         ORG   *+2
         SPACE
         TM    0(1),X'81'          Q. TIMER ELEMENT IS NOT TO BE ENQ'D.
         BC    9,DSPB
**      STM   2,9,IEAPPTCB+TCBGRS+32  SAVE REGS 2-9.
         SPACE
         DC    AL4(IEAPPTCB+80)
         ORG   *-4
         DC    X'9029'
         ORG   *+2
         SPACE
         L     3,TIMNQ             GO TO TIMER ENQUEUE ROUTINE.
****************************************************************  19572
*        TIMER ENQ ROUTINE                                        19572
         BALR  2,3
****************************************************************  19572
**      LM    2,9,IEAPPTCB+TCBGRS+32  RESTORE REGS 2-9.
         SPACE
         DC    AL4(IEAPPTCB+80)
         ORG   *-4
         DC    X'9829'
         ORG   *+2
         SPACE
         B     DSPB
         AGO   .PSBW
.PSAB    ANOP
         TM    XRBWAT(12),X'FF'    Q. RB IS IN WAIT.
         BC    8,DSPB
.PSBW    ANOP
** DSPA OI     RESUMPSW+1,2        PLACE RESUME PSW IN WAIT.
         SPACE
DSPA     DS    0H
         DC    AL4(RESUMPSW+1)
         ORG    *-4
         DC    X'9602'
         ORG   *+2
         SPACE
         AIF   ('&TIMER' NE 'TTIME').PSBX
**      L      1,IEAPPTCB+TCBTME   GET TIMER ELEMENT.
         SPACE
         DC    AL4(IEAPPTCB+120)
         ORG   *-4
         DC    X'5810'
         ORG   *+2
         SPACE
         TM    0(1),X'8E'     TEST-BR IF INTERVAL ALREADY DEQUEUED OR
         BC    7,DSPX         IS A 'REAL' OR 'WAIT' INTERVAL.
**      STM   2,9,IEAPPTCB+TCBGRS+32  SAVE REGS IN TCB.
         SPACE
         DC    AL4(IEAPPTCB+80)
         ORG   *-4
         DC    X'9029'
         ORG   *+2
         SPACE
         L     3,TIMDQ             GET DEQUEUE ROUTINE ADDR.
****************************************************************  19572
*        TIMER DEQ ROUTINE                                        19572
         BALR  2,3                 GO TO TIMER DEQUEUE ROUTINE.
****************************************************************  19572
**      LM    2,9,IEAPPTCB+TCBGRS+32  RESTORE REGS FROM TCB.
         SPACE
         DC    AL4(IEAPPTCB+80)
         ORG   *-4
         DC    X'9829'
         ORG   *+2
         SPACE
DSPX     DS    0H
.PSBX    ANOP
** DSPB LM     10,1,IEAPPTCB+TCBGRS  RESTORE RESUME REGISTERS.
         SPACE
DSPB     DS    0H
         DC    AL4(IEAPPTCB+48)
         ORG   *-4
         DC    X'98A1'
         ORG   *+2
         SPACE
         MVC   NEW+2(2),OLD+2      RESTORE TCB POINTERS.
**      LPSW   RESUMPSW            RESUME PROCESSING.
         SPACE
         DC    X'82'
         DC    AL3(RESUMPSW)
         AGO   .PSBT
.PSAA    ANOP
***  MULTI-TASK DISPATCHER  ***
         SPACE
DSPTCH   LM    10,11,NEW           Q. TASK  SWITCH IS NECESSARY.
         AIF   ('&SERR' NE 'MCH').NORMS2                          19E02
IEARMSSW BC    0,RMSRTN .          RMS SWITCH                     19E02
.NORMS2  ANOP                                                     19E02
XTFNOP   BC    0,XTFKTR            Q. IRB'S ARE TO SCHEDULED.
XTG      DS    0H
         CLR   10,11
         L     12,TCBRBP(0,10)     GET OLD RB ADDRESS.
         BC    7,DSPA1                  BR TO FIND NEW TASK        MTS0
         AIF   ('&TIMESL' NE 'TIMESL').NSLICE3                     MTS0
         TM    TCBFLGS+2(XOLD),TCBFTS   IS 'OLD' A TIME-SLICE TASK MTS0
         BC    8,DSPG1                 NO, SKIP SPECIAL            MTS0
*                                       PROCESSING                 MTS0
TMSL1    EQU   *                                                   MTS0
         L     TQEREG,TSTQE             LOAD ADDR OF TIME-SLICE    MTS0
*                                       TQE                        MTS0
         TM    0(TQEREG),X'80'          IS TIME-SLICE TQE ON QUEUE MTS0
         BC    8,DSPG1                 YES, RE-DISPATCH OLD TASK   MTS0
         SR    XNEW,XNEW                ZERO 'NEW' REGISTER        MTS0
         BC    15,DSPA1                 BR TO FIND 'NEW' TASK      MTS0
.NSLICE3 ANOP                                                      MTS0
DSPG     DS    0H
         AIF   ('&TIMESL' NE 'TIMESL').NSLICEA                     MTS0
         TM    TCBFLGS+2(XNEW),TCBFTS  IS 'NEW' A TIME-SLICE TASK  MTS0
         BC    8,DSPG1                 NO, SKIP TIME-SLICE CODE    MTS0
         L     TQEREG,TSTQE            LOAD ADDR OF TIME-SLICE TQE
         NI    TQEFLGS(TQEREG),X'80'   RESET FLGS IN T/S TQE       MTS0
         STM   2,9,TCBGRS+32(11) . SAVE 2-9 OVER ENQ              M2926
         L     3,TIMNQ                 LOAD ADDR OF TIMER ENQ      MTS0
****************************************************************  19572
*        TIMER ENQ ROUTINE                                        19572
         BALR  2,3                     BR TO ENQ TIME-SLICE TQE    MTS0
****************************************************************  19572
         LM    2,9,TCBGRS+32(11)       RELOAD REGS 2-9             MTS0
DSPG1    EQU   *                                                   MTS0
.NSLICEA ANOP
         AIF   ('&TIMER' NE 'TTIME').PSBV
         L     1,TCBTME(0,11)      GET TIMER ELEMENT ADDR.
         LTR   1,1                 Q. THIS TASK HAS NO TIMER ELEMENT.
         BC    8,DSPW1                  .PROCESS J/S TQE          19018
         TM    0(1),X'81'          Q. TIMER ELEMENT NOT TO BE ENQUEUED.
         BC    9,DSPW1                  .PROCESS J/S TQE          19018
         STM   2,9,TCBGRS+32(11) . SAVE 2-9 OVER ENQ              M2926
         L     3,TIMNQ
****************************************************************  19572
*        TIMER ENQ ROUTINE                                        19572
         BALR  2,3                 TO TIMER ENQUEUE ROUTINE.
****************************************************************  19572
         LM    2,9,TCBGRS+32(11)
DSPW1    EQU   *                                                  19018
         AIF   ('&JST' NE 'Y').NOJST1                             19018
         L     PIBPTR,TCBPIB(TCBOLD)    .GET PIB ADDR FROM 'OLD'  19018
         LA    PIBPTR,0(PIBPTR)         .CLEAR HI-ORDER BYTE      19018
         LTR   PIBPTR,PIBPTR            .Q. IS THERE A PIB        19018
         BZ    DSPW                     .NO. CONTINUE DISPATCH    19018
         TM    PIBJSTQE(PIBPTR),X'80'   .Q. VALID J/S TQE         19018
         BZ    DSPW                     .NO. CONTINUE DISPATCH    19018
         STM   2,9,TCBGRS+32(11) .     STORE REGS OVER ENQ        M3529
         L     JSTQEADR,PIBJSTQE(PIBPTR) .GET ADDR OF J/S TQE     19018
         LA    JSTQEADR,0(JSTQEADR)     .CLEAR HI-ORDER BYTE      19018
         TM    0(JSTQEADR),X'08' . Q. IS TQE REAL(WAIT)          A36229
         BNO   NQJSTQE .           NO ENQ JS TQE                 A36229
         TM    0(JSTQEADR),X'80' . Q. IS TQE OFF QUEUE           A36229
         BO    NQJSTQE .           YES SKIP DEQ                  A36229
         L     TDEQ,TIMDQ .        ADDR OF TIMER DEQ             A36229
         LR    4,JSTQEADR .        SAVE TQE ADDR                 A36229
*****************************************************************A36229
*        TIMER DEQ ROUTINE                                       A36229
         BALR  RETREG,TDEQ .       DEQ REAL(WAIT) TQE            A36229
*****************************************************************A36229
         LR    JSTQEADR,4 .        RESTORE TQE ADDR              A36229
         MVC   12(4,JSTQEADR),20(JSTQEADR) RESTORE CPU VALUE     A36229
         NI    TQEFLAG(JSTQEADR),X'F7' MARK AS TASK TIME         A36229
NQJSTQE  EQU   * .                                               A36229
         L     TENQ,TIMNQ .        ADDR OF TIMER ENQ             A36229
****************************************************************  19572
*        TIMER ENQ ROUTINE                                        19572
         BALR  RETREG,TENQ              .TO TIMER ENQUEUE         19018
****************************************************************  19572
         LM    2,9,TCBGRS+32(11)                                  19018
.NOJST1  ANOP                                                     19018
.PSBV    ANOP
DSPW     DS    0H
         TM    XSTAB(12),X'D0'     Q.  POSSIBLE TRANSIENT SVC    A26244
         BO    DSPC                A.  YES FURTHER TESTING       A26244
DSPW2    EQU   *                                                 A26244
**      MVC    RESUMPSW(8),XRBPSW(12)        MV RESUME PSW TO LO-CORE
         SPACE
         DC    AL4(RESUMPSW)
        DC    AL2(XRBPSW+X'C000')
        ORG   *-6
         DC    X'D207'
         ORG   *+4
         SPACE
         AIF   ('&EMU' NE 'EMUY').NOEM3                            EM94
         TM    TCBTRN(XOLD),EMBIT .     Q. IS NEW TCB AN EMULATOR  EM94
         BZ    NOEM3 .                  IF NOT, THEN SKIP THIS STEPEM94
         L     R13MSB,CVTPTR .     GET CVT POINTER                19019
         L     R13MSB,MSBPTR(R13MSB) . GET MSB POINTER FROM CVT   19019
         SR    R14WK,R14WK .            CLEAR WORK REG             EM94
         ST    R14WK,EMMCW+Q4(R13MSB) . PUT INTO EMMCW FOR FPR NOOPEM94
         MVC   EMMCW(Q5,R13MSB),Q0(R13MSB) SET 1ST PART OF EMMCW   EM94
** ISSUE DIAGNOSE INSTR (83) TO ENTER.EMULATOR.MODE (I-FIELD=02)   EM94
** WITH A POINTER TO THE EMULATOR MAINTENANCE.CONTROL.WORD (MCW)   EM94
** IN RECOVERY MANAGEMENT SERVICES' (RMS) MACHINE.STATUS.BLOCK(MSB)EM94
         DC    X'8302' .                DIAGNOSE TO ENT.EMUL.MODE  EM94
         DC    S(EMMCW(R13MSB)) .       PTR TO EMUL.MCW            EM94
NOEM3    DS    0H .                     END OF BRANCH AROUND EMUL  EM94
.NOEM3   ANOP                                                      EM94
         LM    10,1,TCBGRS(11)
**     LPSW   RESUMPSW
         SPACE
         DC    X'82'
         DC    AL3(RESUMPSW)
         SPACE
DSPA1    EQU   *                                                   MTS0
         STM   2,9,TCBGRS+32(11)        SAVE OLD REGISTER SET, 2-9 MTS0
         AIF   ('&FLOATPT' NE 'Y').PSBQ
         TM    TCBFLGS+3(11),X'08' Q. FLT.PT. REGS ARE NOT TO BE SAVED.
         BC    8,DSPZ
         AIF   ('&EMU' NE 'EMUY').NOEM1                            EM94
         TM    TCBTRN(XOLD),EMBIT .     Q. IS OLD TCB AN EMULATOR  EM94
         BZ    NOEM1 .                  IF NOT, THEN SKIP THIS STEPEM94
         L     R9,CVTPTR .         GET CVT POINTER                19019
         L     R9MSB,MSBPTR(R9MSB) . GET MSB POINTER FROM CVT     19019
         MVC   EMMCW(Q5,R9MSB),Q0(R9MSB) . SET 1ST PART OF MCW     EM94
         MVC   EMMCW+Q5(Q3,R9MSB),CS9FF . SET 2ND PART OF MCW      EM94
** ISSUE DIAGNOSE INSTR (83) TO LEAVE.EMULATOR.MODE (I-FIELD=00)   EM94
** WITH A POINTER TO THE EMULATOR MAINTENANCE.CONTROL.WORD (MCW)   EM94
** IN RECOVERY MANAGEMENT SERVICES' (RMS) MACHINE.STATUS.BLOCK(MSB)EM94
         DC    X'8300' .                DIAGNOSE TO LV.EMUL.MODE   EM94
         DC    S(EMMCW(R9MSB)) .        PTR TO EMUL.MCW            EM94
NOEM1    DS    0H .                     END OF BRANCH AROUND EMUL  EM94
.NOEM1   ANOP                                                      EM94
         LA    15,32
         LNR   15,15
         STD   0,0(11,15)          STORE FLOAT.PT. REGS.
         STD   2,8(11,15)
         STD   4,16(11,15)
         STD   6,24(11,15)
DSPZ     DS    0H
.PSBQ    ANOP                                                    A25384
         AIF   ('&JST' NE 'Y').NOJST2                             19018
         LA    R3,DSPA21 .         SET UP RETURN REG             A40380
         ENTRY JSTDEQ .                                          A40380
JSTDEQ   DS    0H                                                A40380
         L     PIBPTR,TCBPIB(TCBOLD)    .GET PIB ADDR FROM 'OLD'  19018
         LA    PIBPTR,0(PIBPTR)         .CLEAR HI-ORDER BYTE      19018
         LTR   PIBPTR,PIBPTR            .Q. IS THERE A PIB        19018
         BZ    DSPA2                    .NO. CONTINUE DISPATCH    19018
         TM    PIBJSTQE(PIBPTR),X'80'   .Q. VALID J/S TQE         19018
         BZ    DSPA2                    .NO. CONTINUE DISPATCH    19018
         L     JSTQEADR,PIBJSTQE(PIBPTR) .GET ADDR OF J/S TQE     19018
         LA    JSTQEADR,0(JSTQEADR)     .CLEAR HI-ORDER BYTE      19018
         TM    TQEFLAG(JSTQEADR),X'08'  .Q. REAL(WAIT) TQE        19018
         BO    DSPA2                    .YES. DON'T DEQ           19018
         L     R2,TIMDQ               .GET ADDR OF TIMER DEQ      19018
****************************************************************  19572
*        TIMER DEQ ROUTINE                                        19572
         BALR  RETREG,R2            .TO TIMER DEQ                 19018
****************************************************************  19572
DSPA2    EQU   *                                                  19018
         BR    R3 .                RET TO CALLER                 A40380
DSPA21   DS    0H                                                A40380
         LM    2,3,TCBGRS+32(11)        .RESTORE REGS             19018
.NOJST2  ANOP                                                     19018
         AIF   ('&TIMESL' NE 'TIMESL').NSLICE4                     MTS0
         TM    TCBFLGS+2(XOLD),TCBFTS   IS OLD A TIME-SLICE TASK   MTS0
         BC    8,DSPA                   NO, BR TO NORMAL CODE      MTS0
         LTR   XNEW,XNEW                IS  'NEW' EQ ZERO          MTS0
         BC    8,TMSL3                  YES, BR TO DEQUEUE TQE     MTS0
         TM    TCBFLGS+2(XNEW),TCBFTS   IS 'NEW' TIME-SLICE TASK   MTS0
         BC    8,TMSL3                  NO, BR TO DEQUEUE TQE      MTS0
CONT2    EQU   *                                                   MTS0
         L     XRB,TCBRBP(XOLD)         LOAD RB ON 'OLD'           MTS0
         TM    XRBLNK(XRB),X'FF'        IS RB IN WAIT              MTS0
         BC    7,TMSL3                  YES, BR TO DEQUEUE T/S TQE MTS0
         TM    TCBWAT(XOLD),X'FF'      IS 'OLD' TCB IN WAIT        MTS0
         BC    7,TMSL3                 YES, BR TO DEQ T/S TQE      MTS0
         L     TQEREG,TSTQE        GET ADDR OF TIMESLICE TQE       2472
         TM    0(TQEREG),X'80'     Q. IS TIME-SLICE TQE ON QUEUE   2472
         BNZ   TMSL2               A. NO BRANCH TO FIND NEW TASK   2472
         LR    XNEW,XOLD           A. YES REDISPATCH OLD           2472
         LA    X14,DSPG1              AFTER CHECKING XSNT REFRESH  2472
         B     DSPE1                  AND GOING TO TRACE           2472
TMSL2    EQU   *                                                   2472
         SR    XNEW,XNEW           ZERO NEW REGISTER               2472
TMSL3    EQU   *                                                   MTS0
         L     TQEREG,TSTQE             LOAD ADDR OF TIME-SLICE    MTS0
*                                       TQE                        MTS0
         L     WORKR,TIMDQ              LOAD ADDR OF TIMER         MTS0
*                                       DEQUEUE ROUTINE            MTS0
****************************************************************  19572
*        TIMER DEQ ROUTINE                                        19572
         BALR  LINKREG,WORKR            BR  TO DEQ TIME-SLICE TQE  MTS0
****************************************************************  19572
.NSLICE4 ANOP                                                      MTS0
DSPA     EQU   *                                                   MTS0
         AIF   ('&TIMER' NE 'TTIME').PSBU
         L     1,TCBTME(0,11)      GET TIMER ELEMENT ADDR.
         LTR   1,1
         BC    8,DSPX              Q. THIS TASK HAS NO TIMER ELEMENT.
         TM    0(1),X'8E'     TEST-BR IF INTERVAL ALREADY DEQUEUED OR
         BC    7,DSPX         IS A 'REAL' OR 'WAIT' INTERVAL.
         L     3,TIMDQ
****************************************************************  19572
*        TIMER DEQ ROUTINE                                        19572
         BALR  2,3
****************************************************************  19572
DSPX     DS    0H
.PSBU   ANOP
         L     10,NEW                  RE INIT                   A67340
         LTR   10,10                   NEW READY TASK FOUND      A67340
         BC    8,DSPB              TCB QUEUE FOR READY TASK.
         AIF   ('&TIMESL' NE 'TIMESL').NSLICE5                     MTS0
         TM    TCBFLGS+2(XNEW),TCBFTS   IS NEW A TIME-SLICE TASK   MTS0
         BC    7,TMSL4                  BR TO FIND TIME-SLICE TASK MTS0
.NSLICE5 ANOP                                                      MTS0
DSPE     DS    0H
         LA    X14,DSPG   SET STANDARD RETURN TO DISPATCH         19018
*                         ANY GIVEN TASK. (NEW=OLD)               19018
DSPE1    EQU   *                                                   2472
         AIF   ('&TRACE' NE 'Y').PSBS
         LR    0,10               TEMP, TO PUT DISPATCHED PSW'S ON
         LR    1,11               TRACE TABLE.
         MVC   SVCOPSW(8),XRBPSW(12)
         OI    SVCOPSW+2,X'F0'     TRACE TASK SWITCH, USING SVC
****************************************************************  19572
*        TRACE ROUTINE                                            19572
         L     9,ATR               INTERFACE TO TRACE ROUTINE.
         BALR  11,9
****************************************************************  19572
         LR    10,0                RESTORE NEW TCB ADDRESS.
.PSBS    ANOP
         LR    11,10               SET OLD EQUAL TO NEW.
         STM   10,11,NEW
         AIF   ('&FLOATPT' NE 'Y').PSBR
         TM    TCBFLGS+3(11),X'08' Q. FLT.PT. REGS NOT TO BE RESTORED.
         BC    8,DSPY
         LA    15,32
         LNR   15,15
         LD    0,0(11,15)          RESTORE FLT.PT. REGS.
         LD    2,8(11,15)
         LD    4,16(11,15)
         LD    6,24(11,15)
         AIF   ('&EMU' NE 'EMUY').NOEM2                            EM94
         TM    TCBTRN(XOLD),EMBIT .     Q. IS NEW TCB AN EMULATOR  EM94
         BZ    NOEM2 .                  IF NOT, THEN SKIP THIS STEPEM94
         L     R9,CVTPTR .         GET CVT POINTER                19019
         L     R9MSB,MSBPTR(R9MSB) . GET MSB POINTER FROM CVT     19019
         MVC   EMMCW(Q5,R9MSB),Q0(R9MSB) . SET 1ST PART OF MCW     EM94
         MVC   EMMCW+Q5(Q3,R9MSB),CS9FF . SET 2ND PART OF MCW      EM94
** ISSUE DIAGNOSE INSTR (83) TO ENTER.EMULATOR.MODE (I-FIELD=02)   EM94
** WITH A POINTER TO THE EMULATOR MAINTENANCE.CONTROL.WORD (MCW)   EM94
** IN RECOVERY MANAGEMENT SERVICES' (RMS) MACHINE.STATUS.BLOCK(MSB)EM94
         DC    X'8302' .                DIAGNOSE TO ENT.EMUL.MODE  EM94
         DC    S(EMMCW(R9MSB)) .        PTR TO EMUL.MCW            EM94
NOEM2    DS    0H .                     END OF BRANCH AROUND EMUL  EM94
.NOEM2   ANOP                                                      EM94
DSPY     DS   0H
.PSBR    ANOP
         L     12,TCBRBP(0,10)    SET CURRENT RB
         AIF   ('&STORAGE' EQ 'PRIM').AFTDHK                      21014
*  ISSUE HOOK FOR DISPATCHER TRACE                                21014
         HOOK  EID=IHLMDSP    .ISSUE HOOK FOR DISPATCHER TRACE    21014
.AFTDHK  ANOP                                                     21014
         LM    0,9,TCBGRS+24(XOLD)                                 2472
         BR    X14                 TO DSPG OR -----              A26244
*                        TO DSPG1 WHEN REDISPATCHING OLD T/S     A26244
DSPC     EQU   *                                                 A26244
         TM    XSTAB(XRB),X'28'    Q. CURRENT RB LOADED            2472
         BNZ   DSPW2     A. YES NOT XSNT SVC RETURN TO LOAD PSW  A26244
         L     15,XSNTCCAD                                         0051
         CLC   0(3,15),0(12)        Q. SVC STILL IN CORE           0051
         BE    DSPW2     A. YES SKIP XSNT REFRESH                A26244
         LM    0,9,TCBGRS+24(XOLD)                               A26244
         MVC   TCBGRS+40(24,11),TCBGRS(11)  RE-ARRANGE TCB REGISTERS
         STM   0,9,TCBGRS(11)      UNTIL STD. SAVE SEQUENCE.
         EJECT
*********      XSNT AREA REFRESH ROUTINE      *********            0051
*              ROUTINE EXITS FROM DISPATCHER BY BRANCH TO SVC 3   19572
         LR    4,11                                                0051
         LR    5,12                                                0051
         LM    12,13,SVEX                                          0051
         LA    6,1(0,12)                INDICATE SAVE AREA SIZE    0051
****************************************************************  19572
*        SECOND LEVEL SVC INTERRUPT HANDLER                       19572
         BAL   2,14(0,12)               AND GO TO SVRB CREATE      0051
DISPRET  EQU   *                        FOR SLIH TEST         CE A35198
****************************************************************  19572
         SPACE
.* REGISTERS FOR XSNT ROUTINE ARE NOW IN T2 XRBSAV  0-15 SEQUENCE  0051
         MVI   XSTAB(5),XACTV           FLAG SVRB AS AN IRB        0051
         ST    5,TCBGRS+44(4)           SAVE RB PTR ACROSS DSPG    0051
         STM   12,13,XRBNM(5)     SAVE ATA BASE & ENTRY OVER FINCH 0051
         MVC   XRBPSW(8,5),PSW                                     0051
         LM    10,11,NEW                SET NEW & OLD FOR DSPG     0051
         B     XTG                                                 0051
         SPACE
DSPR     L     6,DXFINCH0                                          0051
         L     10,XRBLNK(5)             PASS XSNT SVRB TO FINCH    0051
****************************************************************  19572
*        INTERFACE WITH FETCH THROUGH FINCH                       19572
         BALR  8,6                                                 0051
         DC    X'000E'                                             0051
****************************************************************  19572
         SPACE
         LM    12,13,XRBNM(5)           PICK UP ATA BASE & ENTRY   0051
         BR    13                       GO TO EXIT-DXA             0051
PSW      DC    X'00040000'                                         0051
         DC    AL4(DSPR)                                           0051
*                                                                 19572
*********      END OF TRANSIENT REFRESH ROUTINE     ************  19572
************************************************************MMMM  19572
         SPACE 3
DSPB     EQU   *                                                   MTS0
         LR    13,11                    INITIALIZE WKREG WITH OLD  MTS0
DSPF     EQU   *                                                   MTS0
         AIF   ('&TIMESL'NE'TIMESL').NSLICE8                       MTS0
         TM    TCBFLGS+2(13),TCBFTS     IS TCB A TIME-SLICE TASK   MTS0
         BC    7,TMSL4                  YES, BR TO FIND NEXT T/S   MTS0
.NSLICE8 ANOP                                                      MTS0
         L     12,TCBRBP(0,13)          FIND CURRENT RB            MTS0
         TM    XRBLNK(12),X'FF'    Q. RB IS IN WAIT.
         BC    7,DSPD
         TM    TCBWAT(13),X'FF'    Q. TASK IS IN WAIT.
         BC    7,DSPD
         LR    10,13               READY TASK IS FOUND.
         BC    15,DSPE
DSPD     L     13,TCBTCB(0,13)     Q. MORE TCB'S ON TCB QUEUE TO
         LTR   13,13               INTERROGATE.
         BC    7,DSPF
         LTR   11,11                   .FIRST                    A68084
         BC    8,NRDY                  NO                        A68084
         L     11,CVTPTR                                         A68084
         L     13,CVTHEADA(11)         .HIGH PRI TCB              M0004
         SR    11,11                   .INDICATE LAST            A68084
         B     DSPF                    .SEARCH TCB               A68084
NRDY     L     11,NEW+4                .RE INIT OLD              A68084
         L     12,TCBRBP(0,11)     PLACE RESUME PSW OF OLD IN WAIT.
         OI    XRBPSW+1(12),2
         AIF   ('&SMF' NE 'SMF').NOSMF1                           19018
* SAVE VALUE IN TIMER WHICH MARKS BEGINNING OF SYSTEM WAIT        19018
         L     INTIMVAL,INTTIME         .READ OUT TIMER           19018
         ST    INTIMVAL,SYSWSAVE        .SAVE VALUE               19018
.NOSMF1  ANOP                                                     19018
         LM    2,9,TCBGRS+32(11)        RESUME IN WAIT             0885
         B     DSPW2    LOAD PSW WITH WAIT BIT ON                A26244
         AIF   ('&TIMESL' NE 'TIMESL').NSLICE7                     MTS0
TMSL4    EQU   *                                                   MTS0
         USING TSCE,TSCEREG                                        MTS0
         L     TSCEREG,TSCEADC                                     MTS0
NORMAL   L     XNEW,TSPNEXT       GET NEXT TO BE DISP T/S TCB      MTS0
TMSL5    EQU   *                                                   MTS0
         L     WORKR,TCBTCB(XNEW)       SAVE NEXT TCB ON READY Q   MTS0
         LA    WORKR,0(WORKR)                                      MTS0
         LTR   WORKR,WORKR              IS THIS END OF READY QUEUE MTS0
         BC    8,TMSL6                  YES, BR TO GET FIRST       MTS0
         TM    TCBFLGS+2(WORKR),TCBFTS  IS IT A TIME-SLICE TASK    MTS0
         BC    7,TMSL7                  YES, CONTINUE              MTS0
TMSL6    EQU   *
         L     WORKR,TSFIRST-1          GO TO TOP OF TIME-SL GROUP MTS0
         LA    WORKR,0(WORKR)                                      I250
TMSL7    EQU   *                                                   MTS0
         L     XRB,TCBRBP(XNEW)         LOAD RB ADDR               MTS0
         TM    XRBLNK(XRB),X'FF'        IS RB IN WAIT?             MTS0
         BC    7,TMSL8                  YES, BR TO GET NEXT TASK   MTS0
         TM    TCBWAT(XNEW),X'FF'       IS TCB IN WAIT?            MTS0
         BC    8,TMSL9                  NO, BR TO UPDATE 'NEXT'    MTS0
TMSL8    EQU   *                                                   MTS0
         LR    XNEW,WORKR               LOAD NEXT TCB INTO NEW     MTS0
         C     WORKR,TSPNEXT            HAVE ALL TIME-SLICE TASKS  MTS0
*                                       BEEN CHECKED.              MTS0
         BC    7,TMSL5                  NO, BR TO CHECK NEXT TCB   MTS0
         L     WORKR,TSPLAST            YES, LOAD ADDR OF LAST TCB MTS0
*                                       IN TIME-SLICE GROUP        MTS0
         BC    15,DSPD                  BR TO MAINLINE CODE TO     MTS0
*                                       FIND READY TASK            MTS0
TMSL9    EQU   *                                                   MTS0
         ST    WORKR,TSPNEXT            UPDATE 'NEXT' IN TSCE      MTS0
TMSL9A   EQU   *                                                   MTS0
         L     TQEREG,TSTQE             LOAD ADDR OF T/S TQE       MTS0
         MVC   TQEVAL+1(3,TQEREG),TSLENGTH+1  MOVE LENGTH OF TIME- MTS0
*                                             SLICE INTO TQE.      MTS0
         MVI   TQEVAL(TQEREG),X'00'     ZERO HIGH ORDER BYTE OF    MTS0
*                                       TQE TIME-SLICE LENGTH      MTS0
         BC    15,DSPE                  BR TO DISPATCH NEW TASK    MTS0
.NSLICE7 ANOP                                                      MTS0
XSNTCCAD DC    V(XSNTCC)                                           0051
         AIF   ('&ATTACH' NE 'ATTACH').NOSET                       I250
ASYSER   DC    V(IEASETCB)     ADDR OF SYS ERR TCB                 I250
.NOSET   ANOP                                                      I250
CVTIXAVL EQU   124            ADDR OF IOS DATA AREA                I250
         AIF   ('&EMU' NE 'EMUY').NOEMDC                           EM94
CS9FF    DC    X'9FF000' .         CONTROL STORE (WCS) BRANCH ADDR EM94
         DS    0H .                                                EM94
.NOEMDC  ANOP                                                      EM94
         AIF   ('&TRACE' NE 'Y').PSBT
ATR      DC    A(PSWNDX)           TRACE ROUTINE ADDRESS.
.PSBT   AIF   ('&TIMER' NE 'TTIME').PSAC
TIMNQ    DC    V(IEAQTE00)
TIMDQ    DC    V(IEAQTD01)
         AIF   ('&JST' EQ 'Y').NOBR3                           BD M0645
JSTDEQ   BR    R3 .                                            BD M0645
.NOBR3   ANOP                                                  BD M0645
         AIF   ('&SMF' NE 'SMF').NOSMF2                           19018
SYSWSAVE DC    F'0'                     .SYS WAIT START TIME      19018
         DC    F'0'                     .ACC SYS WAIT TIME        19018
.NOSMF2  ANOP                                                     19018
         AIF   ('&TIMESL' NE 'TIMESL').NSLICE9                     MTS0
TSTQE    DC    V(IEATSTQE)                                         MTS0
TSCEADC  DC    V(IEATSCE)                                          MTS0
TSTAB    DC    X'FF'              WORK BYTE                        MTS0
         IHBTSCE                                                   MTS0
IEAAIH00 CSECT                                                     MTS0
.NSLICE9 ANOP                                                      MTS0
.PSAC    ANOP
         EJECT
NEW     DC    A(IEAHEAD)
OLD     DC    A(IEAHEAD)
IEATCBP  EQU   NEW
         AIF   ('&STORAGE' NE 'PART').NOADS                        I250
         AIF   ('&ATTACH' NE 'ATTACH').NOEOT                       I250
.***********************************************************       I250
.*       THESE VCONS ARE ONLY NECESSARY IN ATTACH BUT      *       I250
.*       DEPEND UPON FOLLOWING 'OLD'...                    *       I250
.***********************************************************       I250
TSKWITAD DC    V(TASKSWIT)   ADDRESS OF TASKSWITCH RTNE IN ATA     I250
         DC    V(FEOT)             FORCED END OF TASK IN ATA       I250
         DC    V(RESATTCH) .       RESIDENT ATTCH SUBRTN ATA  BD A44183
.NOEOT   ANOP                                                      I250
.NOADS   ANOP                                                      I250
         AIF   ('&STORAGE' NE 'PRIM').PSCJ
IEATCBLK EQU   NEW
.PSCJ    ANOP
*...THE FOLLOWING IS THE FIELD DEFINITION FOR THE QUEUES USED BY THE
*   ASYNCHRONOUS EXIT EFFECTOR. ACTUAL GENERATION FOLLOWS
         SPACE 2
*...THE FIRST PORTION OF THIS TABLE CONSISTS OF THREE HALF WORDS
*   USED IN  PROCESSING IQE'S WITH HALF WORD LIN FIELDS.
         DS    1H
IECIERLC DS    0H
LEQA     DC    AL2(0)    .POINTER TO NEXT ELEMENT TO BE DEQUEUED
LEQB     DC    AL2(0)    .POINTER TO LAST ELEMENT QUEUED. USED TO APP-
*                         END ADDITIONAL QUEUE ELEMENTS.
LEQE     DC    AL2(0)    .INITIAL VALUE OF LEQA.
         SPACE
*...HALF WORD RELOCATABLE ADDRESS CONSTANTS ARE GENERATED TO FILL THIS
*   TABLE AS FOLLOWS...THE TECHNIQUE IS TO GENERATE BACKWARDS.
         ORG   LEQE-1    .ADJUST LOCATION COUNTER TO CAUSE TWO BYTES
         DC    AL3(LEQA)  FROM THREE BYTE ADDRESSCONSTANTS TO FALL IN
         ORG   LEQB-1     PROPER HALF WORD SLOTS.
         DC    AL3(LEQA)
         ORG   LEQA-1
         DC    AL3(LEQA)
         ORG   LEQE+2    .RESET LOCATION COUNTER.
         SPACE
 AIF (('&IQE' EQ 'ONLY12' OR '&IQE' EQ 'NONE12') AND '&STORAGE' EQ 'PRIX
               M').PSAF                                            9669
*...THE SECOND PORTION OF THIS TABLE IS TWO FULL WORDS USED IN
*   IN PROCESSING IQE'S WITH FULL WORD LINK FIELDS.
         DS    0F                  PLACE AEQ ON FULL WORD BOUNDARY.
LEQC     DC    X'FF'     .FLAG INDICATING THIS IS THE INITIAL POINTER.
         DC    AL3(LEQC) .POINTER TO NEXT ELEMENT TO BE DEQUEUED
LEQD     DC    X'FF'     .FLAG INDICATING THIS IS THE INITIAL POINTER.
         DC    AL3(LEQC) .POINTER TO LAST ELEMENT ON QUEUE...USED TO
*                         APPEND ADDITIONAL QUEUE ELEMENTS.
         AGO  .PSAG
.PSAF    ANOP
LEQC     DC    F'-1'
.PSAG    ANOP
         EJECT
***  STAGE TWO OF EXIT EFFECTOR IQE REMEMBERING STAGE  ***
*   THIS EXIT EFFECTOR DOES NOT HAVE 12* RELOCATION.
         SPACE 1
IEA0EF00 DS    0H
   AIF  ('&STORAGE' NE 'PRIM' AND ('&IQE' EQ 'NONE12' OR '&IQE' EQ 'ONL*
               Y12')).PSAD
         LTR   1,1                 Q. IQE IS 12*.
         BC    4,XTA
.PSAD AIF ('&IQE' EQ 'NONE12' OR '&IQE' EQ 'OTHR12').PSAH
         ST    10,XTA7                 SAVE REG
         LH    10,LEQB             ENQUEUE IQE ON 12* LEQ.
         MVC   0(2,1),0(10)
         STH   1,0(0,10)
         STH   1,LEQB
         AGO   .PSAI
.PSAH    ANOP
         MVC   0(2,1),LEQA         ENQUEUE 12*.
         STH   1,LEQA
.PSAI    ANOP
XTB      MVI   XTFNOP+1,X'F0'      INDICATE STAGE THREE TO BE ENTERED.
         L     10,XTA7                 RESTORE REG
         BR    14
         AIF   ('&STORAGE' NE 'PRIM' AND ('&IQE' EQ 'ONLY12' OR '&IQE' *
               EQ 'NONE12')).PSBN
XTA      LCR   1,1                 RE-COMPLENENT IQE ADDRESS.
         LA    10,LEQC                                           A67891
         CR    1,10                    INVALID REQUEST           A67891
         BNL   XTA01                   NO                        A67891
XTA0A    ST    1,XTA4                  SAVE NO SCHED             A67891
         ST    14,XTA5                                           A67891
         BR    14                      RETURN                    A67891
XTA01    MVI   IQETCB(1),MSK           INDICATE IQE              A67891
         L     10,LEQD
         CR    1,10                    SAME REQUEST              A64483
         BE    XTA0A                   YES DO NOT SCHEDULE       A64483
         MVC   0(4,1),0(10)        ENQUEUE 4-BYTE IQE ON LEQ.
         ST    1,0(0,10)
         ST    1,LEQD
         L     10,LEQC                                           A67891
         LA    1,LEQC                                            A72558
XTA02    CLI   IQETCB(10),MSK          VALID IQE                 A67891
         BNE   XTA03                   NO                        A67891
         CLC   1(3,10),XTA6+1      LAST                          A67891
         BE    XTB                     YES                       A67891
         LR    1,10                                              A67891
         L     10,0(10)                NEXT                      A67891
         B     XTA02                                             A67891
XTA03    MVC   0(4,1),LEQD                                       A67891
         L     1,LEQD                                            A67891
         MVC   0(4,1),XTA6             INITIALIZE                A67891
         MVI   0(1),X'FF'                                        A67891
         ST    10,XTA1             INVALID IQE                   A67891
         ST    14,XTA2                 RETURN                    A67891
         L     10,16                   CVT                       A67891
         L     10,0(10)                OLD NEW                   A67891
         MVC   XTA3(4),4(10)       CURRENT TASK                  A67891
         AGO   .PSAK
.PSAJ    ANOP
         MVC   0(4,1),LEQC         ENQUEUE 4-BYTE IQE.
         ST    1,LEQC
.PSAK    ANOP
         B     XTB
XTA1     DC    F'0'                    ERROR IQE                 A67891
XTA2     DC    F'0'                    ERROR RETURN              A67891
XTA3     DC    F'0'                TASK                          A67891
XTA4     DC    F'0'                NON SCHED IQE                 A67891
XTA5     DC    F'0'                    NON SCHED RETURN          A67891
XTA6     DC    AL1(255)                                          A67891
         DC    AL3(LEQC)                                         A67891
XTA7     DC    F'0'
.PSBN    ANOP
         AIF   ('&SERR' NE 'MCH').NORMS3                          19E02
         SPACE 2
***************************************************************   19E02
*        BRANCH TO RMS ROUTINE -- IEARMSAD IS INITIALIZED     *   19E02
*        BY NIP.                                              *   19E02
***************************************************************   19E02
RMSRTN   EQU   *                                                  19E02
         L     RF,IEARMSAD .       GET ADDRESS OF RMS             19E02
         BR    RF .                ROUTINE AND GO                 19E02
IEARMSAD DC    F'0' .              ADDRESS FILLED IN BY NIP       19E02
         SPACE
.NORMS3  ANOP
         SPACE 2
**************************************************************    19572
*       BRANCH TO THIRD STAGE OF EXIT EFFECTOR               *    19572
**************************************************************    19572
         SPACE
XTFKTR   DS    0H       FROM SECOND INSTRUCTION IN DISPATCHER.    19572
         L     12,EXITVCON          GET ADDRESS OF EXIT EFFECTOR  19572
         BR    12          TO THIRD STAGE (RETURN IS TO XTG)      19572
EXITVCON DC    V(IEAEXTEF)       THIRD STAGE CSECT.               19572
XTQVCON  DC    V(XTQ)        RETURN POINTS FOR THE                19572
XTLVCON  DC    V(XTL)        ERROR TRANSIENT AREA HANDLER         19572
*                            TO THE THIRD STAGE EXIT EFFECTOR.    19572
         EJECT
**************************************************************    19572
*                                                            *    19572
*      IEAEXTEF  CSECT  ---  THIRD STAGE EXIT EFFECTOR       *    19572
*                                                            *    19572
*      THIS CSECT CONTAINS THE THIRD STAGE EXIT EFFECTOR     *    19572
*      WHICH HAS BEEN MOVED FROM LOW CORE TO CONSERVE 12     *    19572
*      STAR CORE.  THIS ROUTINE ASSUMES THE FOLLOWING:       *    19572
*                  REG 10   -- NEW                           *    19572
*                  REG 11   -- OLD                           *    19572
*                                                            *    19572
*      REG TWELVE IS THE BASE WHICH IS INITIALIZED BY THE    *    19572
*      DISPATCHER AT XTFKTR BEFORE BRANCHING HERE.           *    19572
*                                                            *    19572
**************************************************************    19572
         SPACE
IEAEXTEF CSECT                                                    19572
         ENTRY XTL,XTQ                                            19572
         USING *,12                                               19572
       AIF   ('&STORAGE' EQ 'PART').PSPRT
         TM    SIRB+XSTAB+1,XACTV  Q. SIRB IS BUSY.
         BC    7,XTG
**      STM    2,9,IEAPPTCB+TCBGRS+32  SAVE REMAINING REGISTERS.
         SPACE
         DC    AL4(IEAPPTCB+80)
         ORG   *-4
         DC    X'9029'
         ORG   *+2
         SPACE
XTC      L     1,LEQC
         LTR   1,1                 Q. THERE ARE NO NON-12* IQE'S.
         BC    4,XTE
.PSAR    AIF   ('&IQE' EQ 'ONLY12' OR '&IQE' EQ 'NONE12').PSAM
.PSBO    ANOP
         CL    1,LEQD             .IS LAST IQE BEING DEQUEUED
         MVC   LEQC(4),0(1)       .DEQUEUE IQE.
         BC    7,*+10
         MVC   LEQD(4),0(1)        REINITIALIZE EMPTY QUEUE.
         AGO   .PSAN
.PSAM    ANOP
         MVC   LEQC(4),0(1)        DEQUEUE NON-12* IQE.
         L     4,IRBOF(0,1)        LOAD IRB ADDR. FROM IQE.
         BAL   9,XTL
         AGO   .PSBM
.PSAN    ANOP
         BAL   9,XTH
         B     XTC
.PSBM    ANOP
         SPACE 1
XTE      LH    1,LEQA
.PSBY    ANOP
         AIF   ('&IQE' EQ 'ONLY12' OR '&IQE' EQ 'BOTH12').PSAO
        CH    1,LEQE              Q. 12 * ERROR QUEUE EMPTY.
         BC    8,XTR
        MVC   LEQA(2),0(1)        DEQUEUE 12*.
         AGO   .PSAS                                            A26244
.PSAO    ANOP
         CH    1,LEQE              Q. 12* LEQ HAS NO ENTRIES.
         BC    8,XTR
         CH    1,LEQB              Q. NOT LAST 12* BEING DEQUEUED.
         MVC   LEQA(2),0(1)        DEQUEUE 12*.
         BC    7,*+10
         MVC   LEQB(2),0(1)        REINITIALIZE QUEUE.
.PSAP    ANOP
         L     2,DEBOF(0,1)       GET DEB ADDRESS.
         TM    3(1),1              Q. REQUEST IS FOR SIRB.
         BC    8,XTO
         NI    3(1),X'FE'          REMOVE SIRB INDICATOR.
         B     SXA
.PSPRA   ANOP
.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*
.*       PRIM AND PART
XTO      DS    0H
        LA    9,XTE
         AGO   .PSAT
.PSAS    ANOP
         NI    3(1),X'FE'          TURN OFF SIRB INDICATOR.
         B     SXA
         AGO   .PSAU
.PSAT    ANOP
         SPACE 1
***  BASE 12* IQE IRB SCHEDULING ROUTINE  ***
         SPACE
XTD      L     4,IRBOF(0,2)        SCHEDULE IRB WITH 12*.
         LA    5,XRBQ+2(0,4)       INITIALIZE ENQUEUE PROCEEDURE.
XTK      LH    6,0(0,5)            ENQUEUE 12* ON IRB.
         LTR   6,6                 END OF QUEUE.
         BC    8,XTJ
         LR    5,6
         B     XTK
XTJ      STH   1,0(0,5)
         STH   6,0(0,1)
         AIF   ('&STORAGE' EQ 'PRIM').PSBE
         AIF   ('&IQE' EQ 'ONLY12').PSAV                        A26244
         AGO   .PSPRW                                           A26244
.PSBE    ANOP
**      TM     IEAPPTCB+TCBFLGS+1  Q. IRB'S SUPPRESSED FOR THIS TASK.
         SPACE
         DC    AL4(IEAPPTCB+29)
         ORG   *-4
         DC    X'9101'
         ORG   *+2
         SPACE
.PSBF   ANOP
         BC    7,XTE
.PSPRW   ANOP
         B     XTL                 GO TO COMMON INITIALIZATION ROUTINE.
.PSAU AIF ('&IQE' EQ 'ONLY12' OR '&IQE' EQ 'NONE12').PSAV
         SPACE 1
***  NON-12* IQE IRB SCHEDULING ROUTINE  ***
         SPACE 1
XTH      L     4,IRBOF(0,1)        GET IRB ADDRESS FROM IQE.
         AIF   ('&IQE' EQ 'ONLY12' OR '&IQE' EQ 'NONE12').PSCC
         OI    XSTAB+1(4),X'0C'    IRB HAS NON-12* IQE.
.PSCC    ANOP
         LA    5,XRBQ(0,4)         ENQUEUE NON-12* IQE.
XTN      L     6,0(0,5)
         LTR   6,6
         BC    8,XTM
         CLC   13(3,6),13(1)       TCB ADDRS EQUAL            BD A55636
         BNE   XTDEF               NO DEFER IQE               BD A55636
         CLC   IRBOF+1(3,6),IRBOF+1(1)                           A64488
         BNE   XTDEF                                             A64488
         LR    5,6
         B     XTN
XTM      EQU   *                                                 A66484
         ST    1,0(5)                  IQE TO IRB                A66484
         ST    6,0(0,1)
         AIF   ('&STORAGE' EQ 'PRIM').PSBG
         TM    TCBFLGS+1(3),1      Q. IRB'S SUPPRESSED FOR THIS TASK.
         AGO   .PSBH
.PSBG    ANOP
**      TM      IEAPPTCB+TCBFLGS+1 Q. IRB'S TO BE SUPPRESSED THIS TASK.
         SPACE
         DC    AL4(IEAPPTCB+29)
         ORG   *-4
         DC    X'9101'
         ORG   *+2
         SPACE
.PSBH    ANOP
         BC    7,0(9)                                            A64488
         LR    0,1                .PLACE IQE ADDR. IN REG. 0
         L     1,4(0,1)           .GET PARAM. VALUE FROM IQE
**  FALL THROUGH TO XTL
.PSAV    ANOP
         EJECT
***  GENERAL IRB INITIALIZATION  ***
         SPACE
XTL      DS    0H
         AIF   ('&IQE' EQ 'NONE12').PSCE
         TM    XSTAB+1(4),XACTV    Q. IRB ALREADY ACTIVE.
         BCR   7,9
.PSCE    ANOP
         AIF   ('&STORAGE' EQ 'PRIM').PSAW
         MVC   XRBREG(40,4),TCBGRS+24(3)  MOVE TCB REGS TO IRB.
         MVC   XRBREG+40(24,4),TCBGRS(3)
         AGO   .PSAX
.PSAW    ANOP
**      MVC    XRBREG(40,4),IEAPPTCB+TCBGRS+40  MOVE TCB REGS TO IRB.
         SPACE
         DC    X'D227'
         DC    AL4(IEAPPTCB+72)
         ORG   *-4
         DC    AL2(XRBREG+X'4000')
         ORG   *+2
         SPACE
**      MVC    XRBREG+40(24,4),IEAPPTCB+TCBGRS(3)
         SPACE
         DC    X'D217'
         DC    AL4(IEAPPTCB+48)
         ORG   *-4
         DC    AL2(XRBREG+40+X'4000')
         ORG   *+2
         SPACE
         OI    XSTAB+1(4),XACTV    ACTIVATE IRB.
**      MVC    XRBLNK+1(3,4),IEAPPTCB+TCBRBP+1  ENQUEUE IRB ON TCB.
         SPACE 1
         DC    X'D202'
         DC    AL4(IEAPPTCB+1)
         ORG   *-4
         DC    AL2(XRBLNK+1+X'4000')
         ORG   *+2
         LA    4,0(0,4)      ZERO HI-ORDER BYTE OF RB PTR
         SPACE
**      ST     4,IEAPPTCB+TCBRBP
         SPACE
         DC    AL4(IEAPPTCB+0)
         ORG   *-4
         DC    X'5040'
         ORG   *+2
         SPACE
         AGO   .PSAY
.PSAX    ANOP
         OI    XSTAB+1(4),XACTV    ACTIVATE IRB.
         MVC   XRBLNK+1(3,4),TCBRBP+1(3)   ENQUEUE IRB ON TCB.
         LA    4,0(0,4)                      0 HI-ORDER BYTE OF RB PTR
         ST    4,TCBRBP(0,3)
.PSAY    ANOP
         MVC   XRBPSW+5(3,4),XRBEP+1(4)  .INIT. E.P. IN SIRB PSW
         AIF   ('&IQE' EQ 'NONE12').PSCF
*  SECOND BYTE OF PSW MUST BE INITIALIZED IN STAGE I.
         TM    XRBPSW+1(4),1       Q. SUPERVISOR IRB ROUTINE.
         BC    1,*+8              .BR IF NOT.
.PSCF    ANOP
         MVI   XRBPSW(4),X'00'    .DISABLE PSW
         LA    14,DEXIT            SET RETURN ADDRESS,ENTRY POINT,
         L     15,XRBEP(0,4)       AND SAVE AREA REGISTERS FOR ITNB
         AIF   ('&IQE' EQ 'NONE12').PSAZ
         L     13,XRBNM(0,4)       IRB ROUTINE.
.PSAZ    AIF   ('&STORAGE' EQ 'PRIM').PSBA
         STM   13,1,TCBGRS+12(3)
         AGO   .PSBB
.PSBA    ANOP
**      STM   13,1,IEAPPTCB+TCBGRS+12  INIT. E.P. REGISTERS.
         SPACE
         DC    AL4(IEAPPTCB+60)
         ORG   *-4
         DC    X'90D1'
         ORG   *+2
         SPACE
         BR    9
         SPACE
XTR      EQU   *
         MVI   XTFNOP+1,0          RESET EXIT EFFECTOR SWITCH   A26244
XTQ      EQU   *                                                A26244
         LM    2,9,IEAPPTCB+80     RESTORE REGISTERS            A26244
         AGO   .PSCB                                            A26244
.PSBB    ANOP
         LTR   10,10                         Q. NEW NOT = 0
         BC    7,XTS
         CLC   TCBDSP(1,11),TCBDSP(3)        Q. OLD PR GT IRB TCB
         BCR   2,9           YES - CONTINUE PROCESSING             I250
         AIF   ('&ATTACH' NE 'ATTACH').NEQPR1                      I250
         BE    XEQPR         PRIORITIES ARE EQUAL.                 I250
.NEQPR1  ANOP                                                      I250
         B     XTP           GO TO UPDATE 'NEW'                    I250
XTS      EQU   *
         CLC   TCBDSP(1,3),TCBDSP(10)   IRB-TCB PR GT NEW.         I250
         BCR   4,9           NO - CONTINUE PROCESSING              I250
         AIF   ('&ATTACH' NE 'ATTACH').NEQPR2                      I250
         BE    XEQPR         PRIORITIES ARE EQUAL.                 I250
.NEQPR2  ANOP
XTP      LR    10,3
         ST    10,NEW              CHANGE NEW TCB ADDRESS.
.PSBD    ANOP
         BR    9
         SPACE
         AIF   ('&ATTACH' NE 'ATTACH').NEQPR3                      I250
**********  IF PRIORITIES ARE EQUAL USE THE TASKSWIT RTNE TO ***   I250
**********  FIND THE APPROPIATE VALUE FOR 'NEW'...           ***   I250
XEQPR    L     15,TSKWITAD   GET ADDRESS OF TASKSWITCH ROUTINE.    I250
         LR    0,3           PUT IRB-TCB ADDRESS IN 0              I250
         BALR  14,15         BRANCH TO TASKSWITCH ROUTINE IN ATA   I250
         L     10,NEW        ADJUST NEW                            I250
         BR    9             RETURN TO PROCESSING                  I250
.NEQPR3  ANOP                                                      I250
         SPACE
         SPACE
XTR      EQU   *
         AIF   ('&IQE' EQ 'ONLY12' OR '&IQE' EQ 'NONE12').PSPRN A26244
       TM    LEQC,X'FF'                IS IRB QUEUE EMPTY?
       BC    14,*+8                    NO.GO AROUND
.PSPRN   ANOP
        MVI   XTFNOP+1,0                    RESET EXET EFFECTOR SW
.PSPRO ANOP
XTQ      DS    0H
         LM    2,9,TCBGRS+32(11)             RESTORE REGISTERS
         AGO   .PSCB
.PSCB    ANOP
         B     XTG
         SPACE
         DROP  12                                                 19572
***   END OF IEAEXTEF CSECT ---  CONTROL FLOWS BACK TO     ***    19572
***   THE DISPATCHER. AT  XTG                              ***    19572
         EJECT
**************************************************************    19572
         SPACE
IEAAIH00 CSECT                                                    19572
         SPACE
*      THIS ROUTINE IS ENTERED FROM THE THIRD STAGE EXIT     *    19572
*      EFFECTOR AND RETURNS TO IT IN CERTAIN CASES.          *    19572
*      THEREFORE THE BASE FOR THE THIRD STAGE EXIT EFFECTOR  *    19572
*      WHICH IS IN REGISTER 12 MUST BE PRESERVED .           *    19572
**************************************************************    19572
         SPACE
***  ERROR TRANSIENT AREA SCHEDULER  ***
         SPACE
         DS    0D
SIRB     DC    CL8'IGE00000'
         DC    X'00048000'
         DC    A(0)
         DC    X'0004000000000000'
         DC    9D'0'
         SPACE 1
*   THE ROUTINE NAMED IECRQE00 IS PART OF IOS.  IF THE SIRB      A55639
*        SHOULD GET ABENDED, DAR AND/OR ABEND WILL               A55639
*        SET THE SIRB UP TO ENTER THIS ROUTINE.  IECRQE00        A55639
*        WILL TURN ON FLAGS IN THE IOB TO SIMULATE A PERMANENT   A55639
*        I/O ERROR.  IT WILL THEN ISSUE SVC 15 (ERROR EXCP)      A55639
*        WHICH WILL RETURN THE RQE TO THE FREELIST AND RESET     A55639
*        THE UCB TO ALLOW THE DEVICE TO BE USED AGAIN.  IT WILL  A55639
*        THEN RETURN TO THE SYSTEM VIA SVC 3.                    A55639
         SPACE 1
SIRBIEC  DC    V(IECRQE00) .                                     A55639
SIRBTCB  DC    F'0' .            WILL CONTAIN TCB ID IN LOW BYTE A55639
         SPACE 1
DXFINCH0 DC    A(IEA0FN00)
         AIF   ('&ATTACH' NE 'ATTACH').NTI250A                BD A58238
SERRFQE  DC    V(SEFQE) .          SYS ERR PART FQE ADDR      BD A58238
SERRBGN  DC    V(IEASEBGN) .       SYS ERR PART BEGINNING ADDR   A58238
.NTI250A ANOP                                                 BD A58238
         SPACE 2
SXA      LA    GA,SIRB
         ST    GX,XRBQ(0,GA)       STORE 12* ADDRESS IN IRB.
         MVC   SIRBTCB+3(1),4(GX) .    PUT TCB ID INTO SIRB      A55639
         L     13,XTLVCON    BRANCH AND LINK TO                   19572
         BALR  9,13          IRB HANDLING IN THIRD STAGE.         19572
         AIF   ('&STORAGE' EQ 'PRIM').PSBK
         OI    TCBFLGS+3(3),X'20'  SET SIRB BUSY FOR THIS TASK.
.PSBK    ANOP
SXB      LH    GB,2(GX)            GET UCB ADDRESS.
         SR    13,13               CONVERT NAME CODE TO DECIMAL.
         IC    13,ERRTAB(0,GB)
         AIF   ('&ATTACH' NE 'ATTACH').NTI250B                BD A58238
         L     RA,SERRFQE .        ADDR OF SYS ERR PART FQE   BD A58238
         L     RB,SERRBGN .        ADDR OF SYS ERR PART       BD A58238
         MVC   Q0(8,RB),Q0(RA) .   SET PARTITION FREE         BD A58238
         L     RA,ASYSER .         ADDR OF SYS ERR TCB        BD A58238
         L     RA,TCBMSS(RA) .     ADDR OF BOUNDARY BOX       BD A58238
         ST    RB,Q0(RA) .         SET FQE ADDR INTO B.B.     BD A58238
.NTI250B ANOP                                                 BD A58238
.PSCG    ANOP
IECXTLER DS    0H
         AIF   ('&STORAGE' EQ 'PRIM').PSCH
         LM    10,11,IEATCBP       GET TCB POINTERS.
.PSCH    ANOP
         BAL   15,SVCNV
         CLI   SIRB,C'I' .         Q. IS ERP LOADED           BD A57946
         BNE   NOTINTA .           NO                         BD A57946
         CL    14,SIRB+XRBNM+4     Q. CURRENT ERROR ROUTINE IS IN XSNT.
NOTINTA  DS    0H .                                           BD A57946
         ST    14,SIRB+XRBNM+4     INITIALIZE ERROR ROUTINE NAME IN SIR
         MVI   SIRB+XRBPSW,X'00'  DISABLE SIRB RESUME PSW          3434
         L     13,XTQVCON        RETURN TO                        19572
         BCR   8,13        THIRD STAGE IF YES.                    19572
         AIF   ('&STORAGE' EQ 'PRIM').PSBC
         LA    15,SXC
         ST    15,SIRB+XRBPSW+4    SET RESUME ADDRESS TO FINCH XSNT2.
         L     13,XTQVCON    RETURN TO                            19572
         BR    13            THIRD STAGE.                         19572
SXC      DS    0H
.PSBC    ANOP
         MVI   SIRB,0 .            SET ERP NAME INVALID WHILE LOADING
         L     11,DXFINCH0        .GET ADDR OF FINCH0
         LA    10,SIRB             GIVE FINCH SIRB ADDRESS.
****************************************************************
*        INTERFACE WITH FETCH THROUGH FINCH
         BALR  8,11               .GO TO FINCH0
         DC    X'000A'
         AIF   ('&STORAGE' EQ 'PRIM').PSBZ
         STM   14,1,TCBGRS+16(4)   ALLOW FOR PSEUDO-DIS'BL TASK SWITCH.
****************************************************************  19572
         MVI   SIRB,C'I' .         RESTORE I IN ERP NAME      BD A57946
         NC    SIRB+XRBQ+Q2(Q2),SIRB+XRBQ+Q2 WAS RQE PURGED   BD A57946
         BNZ   DSPTCH .            NO - CONTINUE              BD A57946
         LA    RA,DEXIT .          GET EXIT ADDR              BD A57946
         ST    RA,SIRB+XRBPSW+Q4 . SET IN RESUME PSW          BD A57946
         B     DSPTCH
.PSBZ    ANOP
         SPACE
DEXIT    SVC   3
         SPACE 3
SVCNV    CVD   13,0
         UNPK  8(4),5(3)           CONVERT AND UNPACK BINARY QUANTITY.
         L     14,8                RETURN DECIMAL VALUE IS REG. 14.
         BCR   15,15
         AGO   .PSRPA
.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*  19572
.*       BRANCH TO END OF MACRO                                   19572
.PSPRT ANOP
         STM   2,9,TCBGRS+32(11)
       AIF   ('&IQE' EQ 'ONLY12' OR '&IQE' EQ 'NONE12').PSPRU
XTC    DS    0H
         LA    7,LEQC                  GET ADDRESS OF 1ST POINTER  8897
XTLOOP   L     1,0(7)                  ADDRESS OF NEXT IQE NOW IN REG7
         LTR   1,1                     IS THIS LAST IQE ON QUEUE   8897
         BC    13,XTEND                  YES BRANCH                8897
XTNEXT   CLI   IQETCB(1),MSK           VALID IQE                 A67891
         BNE   XTEND                   NO                        A67891
         L     8,0(1)                  NEXT IQE                  A67891
         L     3,12(0,1)               GET TCB ADDRESS             8897
         LA    3,0(3) .                CLEAR HI BYTE          BD A52529
         TM    TCBFLGS+3(3),X'20'      IS SIRB BUSY FOR THIS TCB   8897
         BC    7,XTDEF                 YES DEFER IRB               8897
         CLI   TCBFLGS+5(3),X'00'      IS THE TCB DISPATCHABLE     8897
         BC    7,XTDEF                 NO DEFER IRB                8897
         TM    TCBFLGS+1(3),X'01'      DOES TCB WANT IRB DEFER     8897
         BC    14,XTSCH                NO  GO TO SCHEDULE IRB      8897
XTDEF    LR    7,1                     REINIT 7 TO NEXT IQE        8897
         B     XTLOOP                                              8897
XTSCH    BAL   9,XTH                   GO TO SCHEDULE IRB          8897
         ST    8,0(7)                  FIX POINTER TO CORRECTLY SET Q
         LTR   1,8                     WAS IT LAST IQE             8897
         BC    11,XTNEXT               NO BRANCH BACK              8897
          ST    7,LEQD                 STORE POINTER TO LAST IQE   8897
XTEND    EQU   *                                                   8897
.PSPRU ANOP
         AIF   ('&IQE' EQ 'NONE12' OR '&IQE' EQ 'OTHR12').PSPRV    1834
XTE      EQU   *                                                   1834
         LH    1,LEQA         GET FIRST RQE                        1834
         CH    1,LEQE         Q.  IS THE QUEUE EMPTY               1834
         BE    XTR            A.  YES RESET SWITCH                 1834
         LA    4,LEQA              INITIALIZE FOR SEARCH.        A29227
XTE1     EQU   *                                                   1834
         TM    SIRB+11,X'40'  Q.  SIRB BUSY                        1834
         BZ    XTE2           A.  NO PROCESS THIS REQUEST          1834
         TM    3(1),X'01'     Q.  THIS REQUEST FOR SIRB            1834
         BO    XTFN           A.  YES  CHECK NEXT RQE              1834
         L     3,SIRB+24      GET RQE ADDRESS FROM SIRB            1834
         CLC   4(1,3),4(1)    Q.  SIRB BUSY FOR THIS TASK          1834
         BE    XTFN           A.  YES  CHECK NEXT RQE              1834
XTE2     EQU   *                                                   1834
         AGO   .PSPRX                                              1834
.PSPRV   ANOP                                                      1834
XTE    LH    1,LEQA                    GET FIRST RQE
       TM    SIRB+11,X'40'             IS SIRB ACTIVE
       BC    7,XTQ                     YES.LEAVE EXIT EFFECTOR
       CH    1,LEQE                    IS THE QUEUE EMPTY
         BC    8,XTR                     YES.GO RESET SWITCH
         LA    4,LEQA              INITIALIZE FOR SEARCH.        A29227
.PSPRX   ANOP                                                      1834
         AIF   ('&ATTACH' NE 'ATTACH').YZGO                        I250
         AIF   ('&IQE' EQ 'NONE12' OR '&IQE' EQ 'OTHR12').NOAM     I250
FINDTCB  EQU   *                                                   I250
         TM    3(1),X'01'          REQ FOR SIRB                    I250
         BC    8,FINDTCB1          NO                              I250
         L     3,ASYSER          GET ADDR OF SYS ERR TCB           I250
         B     YESSIRB             SIRB PROC                       I250
FINDTCB1 LA    9,XTO          SET EXIT                             I250
         L     3,8(1) .           GET DEB ADDR FROM RQE          A40746
         L     3,0(3) .           GET TCB ADDR FROM DEB          A40746
         LA    3,0(3) .           CLEAR HIGH ORDER BYTE          A40746
         TM    TCBFLGS+5(3),X'FF'  TASK DISP                       I250
         BC    8,OKGO         TASK IS DISP                         I250
XTFN     EQU   *                                                   I250
NOGO     LR    4,1            SAVE RQE ADDR                        I250
         LH    1,0(1)         GET NEXT RQE                         I250
         CH    1,LEQE         NO MORE                              I250
         BC    8,XTQ          ALL GONE                             I250
         B     XTE1           GO BACK AND START OVER               I250
OKGO     EQU   *                                                   I250
         TM    TCBFLGS+1(3),X'01'  TASK ASK DEFER                  I250
         BC    7,NOGO         GET NEXT RQE                         I250
         B     PROCBOTH                                            I250
YESSIRB  LA    9,SXA          SET EXIT                             I250
PROCBOTH NI    3(1),X'FE'     CLEAR SIRB IND                       I250
         L     2,8(1)         DEB ADDR                             I250
         MVC   0(2,4),0(1)    DEQ RQE                              I250
         CH    1,LEQB         WAS Q NOW EMPTY                      I250
         BC    7,*+8          NO                                   I250
         STH   4,LEQB         INITIALIZE Q                         I250
         BCR   15,9           EXIT                                 I250
         AGO   .PSRPI                                              I250
.NOAM    ANOP                                                      I250
         L     3,ASYSER          GET ADDR OF SYS ERR TCB           I250
         TM    TCBFLGS+5(3),XFF    IS SE TCB NON - DISP            I250
         BNZ   XTQ                 YES - LEAVE EXIT EFFECTOR       I250
         LA    R4,LEQA             INITIALIZE REG 4                I250
X01      EQU   X'01'               NO ASY EXITS TCB FLAG           I250
XFF      EQU   X'FF'               MASK FOR NON-DISPATCHABILITY    I250
CVTIOST  EQU   124                 DISP IN CVT OF IOS DA           I250
         NI    3(1),X'FE'     CLEAR SIRB IND                       I250
         L     2,8(1)         GET DEB                              I250
         MVC   0(2,4),0(1)    DEQ RQE                              I250
         CH    1,LEQB         LAST                                 I250
         BC    7,*+8          NO                                   I250
         STH   4,LEQB         INITIALIZE                           I250
         B     SXA                                                 I250
         AGO   .PSAU                                               I250
.YZGO    ANOP                                                      I250
XTFH     SR    3,3                 CLEAR REG 3
         IC    3,4(0,1)            GET TCB ID FROM RQE
         SLL   3,2 .               MULT BY 4                      M3317
         L     2,16                GET CVT POINTER                 I250
         L     2,CVTIXAVL(2)       GET IOS DATA AREA               I250
         L     2,4(2)              GET TCB TABLE POINTER           I250
         L     3,0(2,3)            GET TCB ADDRESS                 I250
       CLI   TCBFLGS+5(3),X'00'        IS TCB DISPATCHABLE
       BC    8,XTFI                    YES.GO
XTFN   LR    4,1                       SAVE PREVIOUS RQE ADDR
       LH    1,0(0,1)                  GET NEXT RQE
       CH    1,LEQE                    WAS THIS LAST
       BC    8,XTQ                     YES.LEAVE
       AIF   ('&IQE' EQ 'NONE12' OR '&IQE' EQ 'OTHR12').PSPRL
         B     XTE1                LOOK AT NEXT RQE                1834
XTFI   TM    3(1),X'01'                IS THIS REQUEST FOR SIRB
       LA    9,SXA                     INITIALIZE BRANCH REG
       BC    7,XTFU                    YES.GO TO DEQUEUE IT
       LA    9,XTO                     RE-INITIALIZE BRANCH REG
       TM    TCBFLGS+1(3),X'01'        DOES THIS TCB WANT IRB DEFER
       BC    7,XTFN                    YES.GO FIND NEXT
XTFU   NI    3(1),X'FE'                CLEAR SIRB INDICATOR
       L     2,8(0,1)                  GET DEB ADDR FROM RQE
       MVC   0(2,4),0(1)               DEQUEUE RQE
       CH    1,LEQB                    WAS IT LAST
       BC    7,*+8                     NO.DON'T RE-INITIALIZE QUEUE
       STH   4,LEQB                    RE-INITIALIZE QUEUE
       BCR   15,9                      BRANCH OUT
       AGO   .PSRPI
.PSPRL ANOP
         B     XTFH                LOOK AT NEXT RQE                1834
XTFI   NI    3(1),X'FE'                CLEAR SIRB INDICATOR
       L     2,8(0,1)                  GET DEB ADDR
       MVC   0(2,4),0(1)               DEQUEUE RQE
       CH    1,LEQB                    WAS IT LAST
       BC    7,*+8                     NO.DON'T RE-INITIALIZE
       STH   4,LEQB                    RE-INITIALIZE QUEUE
       B     SXA
         AGO   .PSAU
.PSRPI AGO   .PSPRA
.* LAST MACRO LABEL .PSCL                                          0051
.PSRPA   ANOP
        MEND
