         MACRO
         SGIEE001  &PCUCB,&ACUCB,&CCA1,&CCV1,&CCN1,&CCA2,&CCV2,&CCN2,&V
         GBLC  &SCHDLR
         LCLC  &IEEPG,&IEEPP,&IEEAG,&IEEAP
.*
.*       THIS IS A MASTER SCHEDULER GROUP 0 SYSGEN MACRO WHICH
.*       GENERATES THE MASTER SCHEDULER CONSOLE INITIALIZATION RT
.*
.*       THE FOLLOWING MACRO PARAMETERS WILL BE EQUATED TO THE
.*       CORRESPONDING VALUES:
.*       1.  &PCUCB = PRIN CONSOLE INPUT AND OUTPUT UCB'S
.*       2.  &ACUCB = ALT  CONSOLE INPUT AND OUTPUT UCB'S
.*       3.  &CCA1 = START READER ADDRESS
.*       4.  &CCN1 = DATA SET NAME OF READER
.*       5.  &CCV1 = VOLUME SERIAL NR OF READER
.*       6.  &CCA2 = START WRITER ADDRESS
.*       7.  &CCN2 = DATA SET NAME OF WRITER
.*       8.  &CCV2 = VOLUME SERIAL NR OF WRITER
.*       9.    &V = VERSION - SSS OR SPS
.*
&SCHDLR  SETC  '&V'
&IEEPG   SETC  '&PCUCB'(1,3)
&IEEPP   SETC  '&PCUCB'(4,3)
&IEEAG   SETC  '&ACUCB'(1,3)
&IEEAP   SETC  '&ACUCB'(4,3)
*
MSCED    IEEGMSLT DSECT,SMBL=YES
         TITLE 'CONSOLE INITIALIZATION ROUTINE - MODULE IEEICCAN'
IEEICCAN CSECT
CCR1     EQU   1                  COUNT REG
CCR3     EQU   3                  2 BYTE UCB ADR TBL REG
CCR4     EQU   4                  CURRENT CONSOLE UCB PTR ADR REG
CCR5     EQU   5                  UCB PTR ADR REG
CCR6     EQU   6                  END OF 2 BYTE UCB ADR TBL REG
CCRI     EQU   9                  CARD IMAGE ADR/2 BYTE UCB TBL INC REG
CCR10    EQU   10                 UCB PTR SLOT ADR REG
CCR13    EQU   13                 RETURN FOR CONSETUP REG
CCRREG   EQU   14                 RETURN REG
CCRB     EQU   15                 BASE REG
SRTESTAT EQU   3        SRTUCB STATUS BITS SLOT      - OFFSET IN UCB
UCBATI   EQU   11       ATNTAB SLOT                  - OFFSET IN UCB
UCBNAME  EQU   13       UNIT NAME SLOT               - OFFSET IN UCB
         USING IEEICCAN,CCRB      CCRB=IEEICCAN BASE REGISTER 15
         USING IEEMSLT,BASEREG1   BASEREG1=IEEMSLT MODULE BASE REGISTER
         AIF   ('&SCHDLR' EQ 'SPS').NOINIT
FIRSTIME NOP   CANDCOMD           NOP FIRST TIME ONLY
         OI    FIRSTIME+1,BIT0+BIT1+BIT2+BIT3    NOP TO BRANCH
         LA    CCR1,4              UCB LOOP COUNT TO R1
         L     CCR3,TVTADR         CVT ADR TO R3
         L     CCR4,IEECUCBT(CCR3) 4 WORD UCB TABLE ADDRESS TO R4
         L     CCR3,IECLSTTV(CCR3) 2 BYTE UCB LOOKUP TABLE ADR TO R3
         LA    CCR5,CONSOLES       ADR OF SYSGENED UCB NAMES TO R5
         LH    CCR6,IEEMSFF        ADR OF END OF 2 BYTE UCB LOOKUP TBL
IEELOOP1 SR    CCRI,CCRI           CLEAR R9
IEELOOP2 LH    CCR10,0(CCR3,CCRI)  2 BYTE UCB ADDRESS TO R10
         CR    CCR6,CCR10          END OF UCB LOOKUP TABLE
         BE    LOOPAGIN             YES,ERROR
         LTR   CCR10,CCR10          NO,HOLE IN UCB LOOKUP TABLE
         BNE   GETDNAME              NO,PROCEED
INCUCBAD LA    CCRI,2(CCRI)          YES,STEP TO NEXT 2 BYTE UCB ADR
         B     IEELOOP2              AND LOOP
GETDNAME N     CCR10,IEEZZ11           ZERO 2 HIGH ORDER BYTES OF R10
         CLC   0(3,CCR5),UCBNAME(CCR10) SYSGENED NAME=UNIT NAME
         BNE   INCUCBAD                  NO,CHECK NEXT ENTRY
         ST    CCR10,0(CCR4)             YES,STORE UCB ADR IN 4 WRD TBL
LOOPAGIN LA    CCR4,4(CCR4)       INCREMENT 4 WORD TABLE TO NEXT WORD
         LA    CCR5,3(CCR5)       INCREMENT SYGENED UCB NAMES TO NEXT
         BCT   CCR1,IEELOOP1       NAME AND LOOP TO COMPARE AGAIN
         L     CCR3,TVTADR         CVT ADDRESS TO R3
         L     CCR4,IEECUCBT(CCR3) 4 WORD UCB TABLE ADDRESS TO R4
         L     CCR10,0(0,CCR4)     GET UCB ADDRESS OF THE PRIMARY
*                                  INPUT CONSOLE.
         TM    SRTESTAT(CCR10),X'80'    IS IT ONLINE
         BZ    PRIMEOFF                 NO
         MVI   0(CCR4),BIT0        PRINCIPLE INPUT BIT ON
         MVI   4(CCR4),BIT0        PRINCIPLE OUTPUT BIT ON
         L     CCR3,0(CCR4)        PRINCIPLE UCB INPUT ADDRESS TO R3
         OI    SRTESTAT(CCR3),BIT6     PRIMARY/COMPOSITE(INPUT) BIT ON
         NI    SRTESTAT(CCR3),F-BIT7   ALTERNATE BIT OFF
         MVI   UCBATI(CCR3),BIT5  ATTNTAB ENTRY NO FOR CONS INT TO UCB
         CLC   1(3,CCR4),5(CCR4)   COMPOSITE CONSOLE
         BNE   COMPCONS             YES,SET UP COMPOSITE CONSOLE
         CLC   1(3,CCR4),9(CCR4)    NO,ALTERNATE CONSOLE
         BE    CANDCOMD              NO,CHECK FOR CANNED COMMANDS
ALTCONS  L     CCR3,8(CCR4)          YES,ALT UCB INPUT ADR TO R3
         OI    SRTESTAT(CCR3),BIT7 ALTERNATE BIT ON
         NI    SRTESTAT(CCR3),F-BIT6   PRIMARY/COMPOSITE(INPUT) BIT OFF
         MVI   UCBATI(CCR3),BIT5   ATTNTAB ENTRY NO FOR CONS INT TO UCB
         B     CANDCOMD            CHECK FOR CANNED COMMANDS
PRIMEOFF OI    8(CCR4),BIT0        SET ALTERNATE INPUT CONSOLE ACTIVE
         OI    12(CCR4),BIT0       SET ALTERNATE OUTPUT CONSOLE ACTIVE
         L     CCR10,0(0,CCR4)     GET UCB ADDRESS OF THE PRIMARY
*                                  INPUT CONSOLE.
         OI    SRTESTAT(CCR10),BIT7     SET ALTERNATE CONSOLE BIT ON
         NI    SRTESTAT(CCR10),F-BIT6   SET PRIMARY BIT OFF
         MVI   UCBATI(CCR10),BIT5       ATTENTION TABLE NUMBER FOR
*                                       CONSOLE
PNOTCOMP L     CCR10,8(0,CCR4)     GET UCB ADDRESS FOR ALTERNATE
*                                  INPUT CONSOLE.
         OI    SRTESTAT(CCR10),BIT6     SET PRIMARY CONSOLE BIT ON
         NI    SRTESTAT(CCR10),F-BIT7   SET ALTERNATE BIT OFF
         MVI   UCBATI(CCR10),BIT5       ATTENTION TABLE NUMBER FOR
*                                       CONSOLE
         B     CANDCOMD
COMPCONS L     CCR3,4(CCR4)        PRINCIPLE UCB OUTPUT ADR TO R3
         OI    SRTESTAT(CCR3),BIT6 PRIMARY/COMPOSITE(OUTPUT) BIT ON
         NI    SRTESTAT(CCR3),F-BIT7   ALTERNATE BIT OFF
.NOINIT  ANOP
CANDCOMD SR    CCRI,CCRI          ZERO IMAGE ADR,MAY BE NO CANNED COMD
         TM    MSPFG,MSDATE       HAS A SET COMMAND BEEN ISSUED
         BZ    0(CCRREG)           NO,RETURN TO MCR FOR SET COMMAND
         L     CCR1,CCURNT         YES,PUT CURRENT COUNT OF BYTES IN R1
         C     CCR1,CCNBR         IS CURRENT COUNT LT TOTAL NUMBER
         BNL   CCRTRN               IF NOT, RETURN
         LA    CCRI,CCBGN(CCR1)     IF SO, GET NEXT CARD IMAGES ADDR
         LA    CCR1,80(CCR1)      UPDATE BYTE COUNT
         ST    CCR1,CCURNT
CCRTRN   BR    CCRREG             RETURN
CCBGN    EQU   *
         AIF   ('&CCA1' EQ '').B1
RDRCAN   DC    80X'40'
         ORG   RDRCAN
         DC    C'START RDR,&CCA1'
         AIF   ('&CCV1' EQ '' AND '&CCN1' EQ '').B1
         DC    C','
         AIF   ('&CCV1' EQ '').A1
         DC    C'&CCV1'
.A1      AIF   ('&CCN1' EQ '').B1
         DC    C',DSN=&CCN1'
.B1      AIF   ('&CCA2' EQ '').C1
         ORG
WTRCAN   DC    80X'40'
         ORG   WTRCAN
         DC    C'START WTR,&CCA2'
         AIF   ('&CCV2' EQ '' AND '&CCN2' EQ '').C1
         DC    C','
         AIF   ('&CCV2' EQ '').B2
         DC    C'&CCV2'
.B2      AIF   ('&CCN2' EQ '').C1
         DC    C',DSN=&CCN2'
.C1      ANOP
         ORG
CCEND    EQU   *
CCNBR    DC    A(CCEND-CCBGN)     TOTAL NBR OF BYTES IN CANNED COMMANDS
CCURNT   DC    F'0'               CURRENT BYTE COUNT
IEEZZ11  DC    X'0000'
IEEMSFF  DC    X'FFFF'
CONSOLES DC    C'&IEEPG'
         DC    C'&IEEPP'
         DC    C'&IEEAG'
         DC    C'&IEEAP'
         MEND
