         MACRO
         IGFCATAP   &MSCATAP,&CATMVT,&GTSVNSP                     19032
         TITLE 'CHANNEL CHECK HANDLER -- IGFCATAP'
IGFCAT   CSECT .   ENTRY POINT TO CCH                              CSC
.**************************************************************** 19E03
.*       CHANGE RECORD FOR RELEASE 20                           * 19E03
.*             CODE 19E03                                       * 19E03
.**************************************************************** 19E03
.* 001820-002300,008000,103800,108000,110200,112800,114900,     * 19E03
.* 116100,117300,118500,118800,123300,125100,238000,246700,     * 19E03
.* 248363,248391,295320-295380,315000,342000,347110-347320,     * 19E03
.* 347400,349200,430720,434560,441000,448000,523400-523600,     * 19E03
.* 528600,569600-569800,578780-578880,663400-663800,668400,     * 19E03
.* 670800-672620,674980,839400,840400,846000,865380,883500,     * 19E03
.* 884100                                                       * 19E03
         SPACE
         USING *,CCHBASE .
         USING RECENTRY,REREG .        DUSING STATEMENT FOR RECORD ENT
         USING CVTDSECT,CVTREG .        USING STATEMENT FOR CVT
         USING CCHPTTAB,WRK4 .     BASE FOR POINTER TABLE DSECT   19032
         ENTRY IGFCCH
         ENTRY CHRADTAB .          ADDRESS OF ROUTINE ADDR TABLE  19032
         ENTRY ERPIBFD .           ADDRESS OF ERPIB FIELD         19032
         EXTRN IECILK2  .    ADDRESS OF LIST OF UCB ADDRESSES       CSC
         EXTRN IECILK1  .    ADDRESS OF LOOKUP TABLE                CSC
         AIF   (&MSCATAP NE 1).EXTSKIP                              CSC
         EXTRN CHAN0  .      LOCN FOR ENTRY FOR CHANNEL 0           CSC
         EXTRN CPUID .     LOC CONTAIN CPU IDENTIFICATION BYTE      CSC
         EXTRN CPUSTAT .     LOC CONTAIN PROCESSOR STATUS BYTE      CSC
         EXTRN MCNEWPSW .    MCK NEW PSW IN PARTIONED SYSTEM        SSC
         EXTRN PREFIX2 .     LOC CONTAIN INDEX TO OTHER CPU PSA     CSC
         EXTRN PREFTMRA .    LOC CONTAIN INDEX TO ACTV TMR PSA      CSC
.EXTSKIP ANOP                                                       CSC
         EXTRN SIRB
         EJECT
***********************************************************************
*
* STATUS ---- 20.00
*
* FUNCTION --- THE FUNCTION OF THIS MACRO IS TO DETERMINE THE CAUSE
*              OF A PREVIOUS CHANNEL ERROR, GENERATE AN I/O INBOARD
*              RECORD ENTRY TO BE WRITTEN AT A LATER TIME BY OBR, AND
*              ATTEMPT RECOVERY BY ONE OF SEVERAL METHODS.  THE METHOD
*              USED IS DEPENDENT UPON THE INTERCEPT POINT WITHIN IOS
*              AND THE CAUSE OF THE ERROR.
         SPACE 1
*                   1. RETRY THE INSTRUCTION CAUSING TROUBLE.
*                   2. DEVELOP  AN INTERFACE BYTE TO BE GIVEN TO THE
*                      ERP'S TO AID THEM IN RECOVERY
         SPACE 1
* ENTRY PTS -- CCH CAN BE ENTERED ONLY WHEN A CHANNEL ERROR IS REALIZED
*        IN IOS.
         SPACE 1
*                   IGFCAT                                          CSC
         SPACE 1
* INPUT ------ 1. CHANNEL LOG
*              2. PROGRAM STATUS WORD
*              3. I/O OLD PSW
*              4. REGISTERS AND POINTERS WITHIN OS
*              5. IOB,UCB,ETC.
         SPACE 1
* OUTPUT ----- 1. ERPIB
*              2. RECORD ENTRY
         SPACE 1
* EXT REF ---- IEACVT
         SPACE 1
*
* EXIT,NORMAL -CCH WILL RETURN CONTROL TO THE APPROPRIATE POINT WITHIN
*              IOS DEPENDING ON THE TYPE AND PLACE OF ERROR. RETURN
*              IS VIA LINK REGISTER 14 PLUS A DISPLACEMENT DETERMINED
*              WHEN THE ERROR IS DIAGNOSED.
*
* EXIT,ERROR - IF CCH DETERMINES THAT THE ERROR IS CATASTROPHIC (SYSTEM
*              INTEGRITY HAS BEEN LOST), THE MACHINE CHECK NEW PSW
*              IS LOADED.
*
* TABLES ----- 1. ERPIB TABLE
*              2. RECORD ENTRY TABLE
*              3. CCH POINTER TABLE
*              4. CCH DEPENDENT ROUTINE ADDRESS TABLE
*
* ATTRIBUTES --SERIALLY REUSABLE,DISABLED, PRIVILEGED
*
***********************************************************************
         EJECT
***********************************************************************
* NOTES
***********************************************************************
*              2870 LOG FORMAT
         SPACE 3
*        LOG WORD ONE
         SPACE 1
***********************************************************************
*KEY *OPS *      DATA ADDRESS      * FLAGS * STATUS  *   BYTE COUNT   *
***********************************************************************
* 0-3  4-7           8-31            32-38    39-47         48-63
*
*        OPS                            STATUS
*
*        4   - INCORRECT LENGTH         39 - PREFETCH
*        5   - HALT I/O BIT             40 - DATA ADDRESS PROG. CHECK
*        6,7 - OPERATION CODE           41 - CONTROL CHECK
*                00 - IDLE              42 - PROGRAM CHECK
*                01 - WRITE             43 - PROTECTION CHECK
*                10 - READ              44 - DATA CHECK
*                11 - READ BACKWARD     45-47 - BYTE COUNTER (MSC ONLY)
*                                       46 - COUNT PO (SSC ONLY)
*                                       47 - COUNT 7 (SSC ONLY)
         SPACE 2
*        LOG WORD TWO
         SPACE 1
***********************************************************************
*KEY *XXXX*    COMMAND ADDRESS     * PARITY * RESIDUAL COMMAND ADDR.  *
***********************************************************************
* 0-3  4-7          8-31              32-39          40-63
               EJECT .
*        LOG WORD THREE
         SPACE 1
***********************************************************************
* CONTROL TGRS. *CHN*UNIT ADDR*XXXXXX* CHECKS *X*SUB CHAN* SEL SUB  *X*
***********************************************************************
*       8-20    21-23  24-31   32-36   37-46  47   48-55   56-62    63
*
*   CONTROL TGRS.             CHECKS              SELECTOR SUB CHANNEL
*
*                              37 - UAB0 ERROR                        I
*                              38 - DATA ERROR                        I
*   0 - CAW                   39 - SECOND CHECK   56 - BC P
*   1 - CCW REQD              40 - WORD 0 UCW     57 - BC 4
*   2 - CCW IN CHAN           41 - WORD 2 UCW     58 - BC 2
*   3 - DATA REQD             42 - LOC STOR ADDR  59 - BC 1
*   4 - START I/O             43 - STORAGE        60 - ILI
*   5 - TEST I/O              44 - BYTE COUNT     61 - DATA CHECK
*   6 - HALT I/O              45 - TIME COUNT     62 - CHAIN CHECK
*   7 - PSEUDO SIO            46 - PRIORITY
*   8 - MODE 1
*   9 - MODE 2                SUB CHANNEL
*  10 - MODE 3
*  11 - MODE 4                48 - UNIT ADDRESS CHECK
*  12                         49 - COMMAND CHECK
*  13   MODE 6                50 - BYTE COUNT CHECK (SSC ONLY)
*  14   MODE 7                51 - INCORRECT SELECTION
*  15                         52 - NO RESPONSE
*  16   MODE 9                53 - INCORRECT TAG SEQUENCE
*  17   MODE 10               54 - AD-1 CHECK
*  18   MODE 11               55 - ST-1 CHECK
*  19
*  20   MC BC PARITY          48-50 ARE CHANNEL CONTROL CHECKS
*                             51-55 ARE INTERFACE CONTROL CHECKS
         EJECT
*              2860 LOG FORMAT
         SPACE 3
*        LOG WORD ONE
         SPACE 1
***********************************************************************
*TAGS*0000*    COMMAND ADDRESS     * STATUS * CHANNEL*   BYTE COUNT   *
***********************************************************************
* 0-3  4-7           8-31            32-39     40-47      48-63
         SPACE 2
*        LOG WORD TWO
         SPACE 1
***********************************************************************
* B REG  * CC 1   *FLGS* CHN*UNIT ADD*      DATA ADDRESS      *SIM I.F*
***********************************************************************
*  0-7     8-15   16-20 21-23 24-31           32-55             56-63
         SPACE 2
*        LOG WORD THREE
         SPACE 1
***********************************************************************
*  CONTROL TRIGGERS      * CLOCK   * I. F. TAGS     * REG. PARITIES   *
***********************************************************************
*         0-23             24-31        32-47             48-63
*
*  CONTROL TRIGGERS           I. F. TAGS          REGISTER PARITIES
*
*   0 - A REG PULL            32 - OP-I           48 - STORAGE PROTECT
*   1 - B REG PULL            33 -                49 - P0 COMMAND ADDR.
*   2 - CHAIN CMD LATCH       34 - AD-O LATCH     50 - P1 COMMAND ADDR.
*   3 - SEQ 1                 35 - SL-O LATCH     51 - P2 COMMAND ADDR.
*   4 - SEQ 2                 36 - SR-O LATCH     52 - DATA IN BUS
*   5 - SEQ 3                 37 - CM-O           53 - P0 COUNT
*   6 - SEQ 4                 38 - SIO LATCH      54 - P1 COUNT
*   7 - SEQ 5                 39 - HALT I/O LATCH 55 - P2 COUNT
*   8 - CCW VAILD             45 - STOR CHECK     56 - UNIT ADDRESS
*   9 - READ                                      57 - P0 DATA ADDRESS
*  10 - WRITE                                     58 - P1 DATA ADDRESS
*  11 - SET UP                                    59 - P2 DATA ADDRESS
*  12 - TIC                                       60 - MARK B
*  13 - TIC CYCLE                                 61 - COMMAND
*  14 - POLLING INTERRUPT                         62 - FLAG
*  15 - CDA LATCH                                 63 - SIM I. F.
*  16 - LAST WORD TRGR
*  17 - BC = CTB TRGR
*  18 - BC = 0 LATCH
*  19 - BC = 0 TRGR
*  20 - BC REG PAR
*  21 - BIT 3 BC REG
*  22 - BIT 2 BC REG
*  23 - BIT 1 BC REG
         EJECT
*                     INBOARD  RECORD  ENTRY  AREA                    *
               SPACE 1
*     *****************************************************************
*  +0 *                                                               *
*     *                        COUNT FIELD                            *
*     *                                                               *
*     *****************************************************************
*  +8 *               *               *                               *
*     *     KEY       *   SWITCHES    *   SPARE    *
*     *               *               *                               *
*     *****************************************************************
* +16 *                               *                               *
*     *              DATE             *          TIME                 *
*     *                               *                               *
*     *****************************************************************
* +24 *                                                               *
*     *             *      CPU  SERIAL  NUMBER                        *
*     *             *
*     *****************************************************************
*     *                               *                               *
*     *      CPU MODEL NUMBER         *  MAX MCEL LENGTH              *
*     *                               *                               *
*     *****************************************************************
* +32 *                                                               *
*     *                       JOB  IDENTITY                           *
*     *                                                               *
*     *****************************************************************
* +40 *                                                               *
*     *                                                               *
*     *                ACTIVE I/O UNITS                               *
*     *                                                               *
*     *                                                               *
*     *****************************************************************
* +56 *                                                               *
*     *                        FAILING   CCW                          *
*     *                                                               *
*     *****************************************************************
* +64 *                                                               *
*     *               CHANNEL  STATUS  WORD                           *
*     *                                                               *
*     *****************************************************************
* +72 *                               *                               *
*     *     ECSW/RIGHT HALF ERPIB     *        DEVICE TYPE            *
*     *                               *                               *
*     *****************************************************************
* +80 *                               *                               *
*     *  CHAN *  CONTROL UNIT ADDRESS *     MP  INFORMATION           *
*     *   ID  *                       *                               *
*     *****************************************************************
* +88 *                                                               *
*     *               2860/2870 - 24 BYTES                            *
*     *               2880      - 112 BYTES                           *
*     *               A48       - 4 BYTES                             *
*     *****************************************************************
*
* KEY
*
*   BYTE 0 = 20 = CCH
*   BYTE 1 -
*        BITS 0-1 = 00 = OS SYSTEM
*        BIT  2   = SPARE
*        BITS 3-7 = RELEASE LEVEL IN BINARY
*
* SWITCHES
*
*   BYTE 0 -
*        BIT 0 = OPERATION ACTION MESSAGE
*        BIT 1 = NS MACHINE (DATE AND TIME FROM NS CLOCK)
*        BIT 2 = EC MODE
*        BITS 3-7 = NOT USED
*
*   BYTE 1 -
*        BIT 0 = MESSAGE REQUIRED
*        BIT 1 = RECORD INCOMPLETE
*        BIT 2 = CCH TERMINATED SYSTEM
*        BIT 3 = CHANNEL NOT SUPPORTED
*        BITS 4-7 = NOT USED
*********
*
*
* MULTIPROCESSING INFORMATION
*
*   BYTE 0 - MULTI-SYSTEM FLAGS
*          0-2 - NOT USED
*            3 - MULTI-SYSTEM ENVIRONMENT PRESENT
*                    IF THE MULTI-SYSTEM BIT IS ZERO,
*                    THERE IS NO MEANINGFUL INFORMATION
*                    IN THE REST OF THE MP INFORMATION FIELD
*            4 - CPUID
*                    0 - CPU NUMBER 1
*                    1 - CPU NUMBER 2
*            5 - NOT USED
*          6-7 - CPUSTAT
*                   00 - SHARED
*                    01 - PARTITIONED
*                   10 - SHARED BUT RECONFIGURED OUT
*                   11 - NOT USED
*
*   BYTE 1 - RESERVED
*
         SPACE 1
         AIF   (&MSCATAP NE 1).CDOC
         SPACE 1
*
*   BYTES 2-3 - CHANNEL STATUS BYTES
*
*        BYTE1= CHANNEL STATUS FOR CPU IN CONTROL (SEE CPUID)
         SPACE 1
*           16 - CHANNEL0 OFFLINE
*           17 - CHANNEL1 OFFLINE
*           18 - CHANNEL2 OFFLINE
*           19 - CHANNEL3 OFFLINE
*           20 - CHANNEL4 OFFLINE
*           21 - CHANNEL5 OFFLINE
*           22 - CHANNEL6 OFFLINE
*           23 - NOT USED
         SPACE 1
*        BYTE2= CHANNEL STATUS FOR OTHER CPU
         SPACE 1
*           24 - CHANNEL0 OFFLINE
*           25 - CHANNEL1 OFFLINE
*           26 - CHANNEL2 OFFLINE
*           27 - CHANNEL3 OFFLINE
*           28 - CHANNEL4 OFFLINE
*           29 - CHANNEL5 OFFLINE
*           30 - CHANNEL6 OFFLINE
*           31 - NOT USED
         SPACE 1
.CDOC    ANOP
         EJECT
*                         ERPIB FIELD
         SPACE 2
*        **************************************************************
*        *       *              *PROGRAM*                             *
*        *   0   * UCB ADDRESS  * FLAGS *    EXTENDED CHANNEL STATUS  *
*        *       *              *       *                             *
*        **************************************************************
*          0-7         8-31      32-39              39-63
*
*        PROGRAM  FLAGS
         SPACE 1
*           32 - CSW STORED FROM SIO INSTRUCTION
*           33 - CSW STORED FROM INTERRUPT
*           34 - CSW STORED FROM TIO INSTRUCTION
*           35 - CSW STORED FROM HIO INSTRUCTION
*           36 - NOT USED
*           37 - SENSE DATA STORED
*           38 - COUNT VALID
*           39 - NO RETRY
         SPACE 1
*   EXTENDED CHANNEL STATUS
*
*        PROBABLE SOURCE OF ERROR FIELD                               I
         SPACE 1
*           40 - CPU ERROR                                            I
*           41 - CHANNEL ERROR                                        I
*           42 - STORAGE CONTROL UNIT ERROR
*           43 - STORAGE ERROR                                        I
*           44 - CONTROL UNIT ERROR
*        45-47 - UNUSED                                               I
         SPACE 1
*        STATUS FLAGS
         SPACE 1
*           48 - INTERFACE ADDRESS VALID
*        49-50 - NOT USED
*           51 - RETRY CODE VALID
*           52 - DEVICE STATUS VALID
*           53 - CHANNEL PROGRAM ADDRESS AND KEY VALID
*           54 - CHANNEL ADDRESS VALID
*           55 - DEVICE ADDRESS VALID
*        56-57 - COMPLETION CODE
*                   11 - SYSTEM RESET
*                   10 - SELECTIVE RESET
*                   01 - STOP OR STACKED STATUS
*                   00 - INTERFACE DISCONNECT
*        58-59 - SET TO ZERO (RESERVED)
*           60 - DISCONNECT IN
*        61-63 - RETRY CODE (TIME CHANNEL DETECTED ERROR)
*               000 - WHILE EXECUTING TIO
*               001 - BETWEEN COMMAND OUT AND UNIT STATUS RETURN
*               010 - COMMAND ACCEPTED BUT BEFORE DATA TRANSFER
*               011 - SOME DATA TRANSFER-CSW COMMAND ADR UPDATED
*               100 - COMMAND REJECTED OR COMMAND OUT NOT SENT
*               101 - COMMAND ACCEPTED-DATA TRANSFER UNDETERMINED
*               110 - NOT USED
*               111 - NO OTHER CODES APPLY
         EJECT
*                   CHANNEL CHECK HANDLER COMMUNICATIONS
         SPACE 3
*
*          CVT
*
*       *********
*       *       *                                      ERPIB TABLE
*       *       *
*       *       *                                 *********************
*       *       *                            ....X*                   *
*       *       *                            .    *********************
*       *       *                            .+8  *                   *
*       *       *                            .    *********************
*       *       *                            .+16 *                   *
*       *       *                            .    *********************
*       *       *                            .+24 *                   *
*       *********                            .    *********************
* +116  *       *.....                       .+32 *                   *
*       *********    .                       .    *********************
*       *       *    .    **********         .    * FF *
*       *       *    ....X*        *....     .    ******
*       *       *         **********   .     .
*       *       *                      .     .
*       *********                      .     .
*                                .......     .
*                                .           .
*                                .           .
*                                X           .         RECORD ENTRY TAB
*                             ************** .
*                         +0  *            *..         ****************
*                             **************           *              *
*                         +4  *  *         *..........X*              *
*                             **************           ****************
*                          +8 *  *         *           *              *
*                             **************           *              *
*                         +12 *            *           ****************
*                             **************           *              *
*                         +16 *            *           *              *
*                             **************           ****************
*                                                      * FF *
*                             CCH POINTER TABLE        ******
*        BYTES 0-3 - POINTER TO ERPIB TABLE
*                4 - FLAG FOR RECORD ENTRIES
*              5-7 - POINTER TO RECORD ENTRY TABLE
*                8 - CCH CODE
*              9-11- CCH BASE REGISTER (START)
*             12-15- POINTER TO CHANNEL DEPENDENT RTN ADR TABLE
*             16-19- RESERVED
         EJECT
*****    REGISTER DEFINITION
*
IBREG    EQU   5 .                ADDRESS OF ERPIB                19032
IOBREG   EQU   2 .       IOB ADDRESS                                CSC
UAREG    EQU   6 .       UNIT ADDRESS                               CSC
UCBREG   EQU   7 .       UCB ADDRESS                                CSC
INDEX    EQU   8 .                      BRANCH TABLE INDEX REGISTER
WKERPIB  EQU   8 .                ADDRESS OF WORK ERPIB           19032
WRK4     EQU   4 .                WORK REGISTER                   19032
RESZREG  EQU   11 .                    RECORD ENTRY SIZE          19032
CVTREG   EQU   9 .                      POINTER TO CVT
WORK5    EQU   CVTREG .                 SECONDARY WORK REGISTER
WKREG1   EQU   10 .           MAIN WORKING REGISTER                 CSC
WKREG2   EQU   11 .           WORKING REGISTER                      CSC
WKREG3   EQU   12 .           SPACE WORK REGISTER                   CSC
REREG    EQU   13 .                     ADDRESS OF RECORD ENTRY
LINKRG1  EQU   14 .                     LINK REGISTER
LINKRG2  EQU   10 .                    SECONDARY LINK REGISTER
WORK4    EQU   LINKRG1 .                WORK REG TO FIND INTERCEPT PT.
WKREG0   EQU   9 .                      MP WORK REG
CCHBASE  EQU   15 .                     BASE REGISTER FOR CCH
WORK3    EQU   3 .                      WORK REG-FOR UCBSCH           I
RTNADRG  EQU   3 .                DEPENDENT RTN ADDRESS REG       19032
R0       EQU   0 .            NON-ADDRESSING REGISTER
R12      EQU   12 .           USED TO SAVE
R14      EQU   14 .                        AND RESTORE REGS
         SPACE 2
*****    FIXED CORE LOCATIONS
*
INTCVTPT EQU   16 .                     ADDRESS OF CVT POINTER
CSWLOC   EQU   64 .      CSW LOCATION                               CSC
CAWLOC   EQU   72 .      CAW LOCATION                               CSC
MACHCK   EQU   112 .                    LOCATION OF MACH. PSW
LOG6070  EQU   304 .                    2860/70 LOGOUT LOCATION   19E03
         SPACE 2
*****    DISPLACEMENTS
*
CCHCUA   EQU   4 .                      DISPLACEMENT OF CUA
LISTEND  EQU   X'FF' .                  END OF ERPIB AND R.E. LISTS
QUITCODE EQU   X'0F' .                  SEREP CODE FOR CHANNEL CHECK
IOBCHAN  EQU   13 .                     DISPLACE OF CHAN STATUS IN IOB
ACTTCB   EQU   4 .             ACTIVE TCB DISPLACEMENT
LTPC     EQU   8 .             LOCAL TIME PSEUDO CLOCK
T4PC     EQU   4 .             24 HOUR PSEUDO CLOCK
SHPC     EQU   0 .             6 HOUR PSEUDO CLOCK
UCBID    EQU   2 .       UCB ID                                     CSC
UCBCHA   EQU   4 .       CHANNEL ADDRESS                            CSC
UCBFL1   EQU   6 .       FLAGS 1                                    CSC
UCBTYP   EQU   16 .      DEVICE TYPE CODE                           CSC
DASD     EQU   X'20' .        DASD TYPE
UCBASK   EQU   X'02' .   DISK ARM SEEKING                           CSC
UCBDTR   EQU   X'04' .   DISK DATA TRANSFER                         CSC
UCBIDV   EQU   X'FF' .   ID BYTE OF UCB                             CSC
UCBPST   EQU   X'20' .   POST FLAG                                  CSC
UCBBSY   EQU   X'80' .   BUSY BIT                                   CSC
TCBTIOT  EQU   12 .                DISPLACEMENT OF TIOT           19032
NXTTCB   EQU   116 .              DISP FOR NEXT TCB               19032
DEVDESC  EQU   16 .               UCB DEVICE TYPE DISP            19032
RQEADR   EQU   20 .                RQE ADDRESS FIELD              19032
DEBDISP  EQU   8 .                 DEB DISPLACEMENT IN RQE        19032
DEBTCB   EQU   0 .                 TCB ADR DISPLACEMENT IN DEB    19032
UCBDISP  EQU   X'1C' .             DISPLACEMENT OF UCBREG IN SAVE 19032
RBSTAB2  EQU   11 .           RB STATUS BYTE 2
SIRBACT  EQU   X'40' .        SIRB ACTIVE FLAG
RBIQE    EQU   26 .           LIST ORIGIN FOR SIRB'S RQES
         SPACE 2
*****    RETURN DISPLACEMENTS TO OS
*
CCHRTHIO EQU   0 .                      HALT IO RETURN
CCHRTSIO EQU   0 .                      STAND ALONE SEEK, SIO MODULE
CCHRTINT EQU   4 .                      INTERRUPT
CCHRTSNY EQU   8 .                      SENSE RETRY
CATSNS   EQU    8 .      SENSE SUBROUTINE--SIO                      CSC
CATTIOSN EQU   12 .      SENSE SUBROUTINE--TIO                      CSC
CCHRTSNN EQU   12 .                     SENSE NO RETRY
CCHINT2  EQU   16 .                ALTERNATE RETURN DISPLACEMENT  19032
CATREC   EQU   28 .      SENSE SUBROUTINE RETURN                    CSC
         SPACE 1
*                       ERPIB DEFINITION
*
IBUCBD   EQU   0 .                      UCB FIELD
IBPRGFGA EQU   4 .                      1ST PROGRAM CONTROLLED SWITCHES
CCHSIOB  EQU   X'80' .                  SIO BIT
CCHINTB  EQU   X'40' .                  INTERRUPT BIT
CCHTIOB  EQU   X'20' .                  TIO BIT
CCHHIOB  EQU   X'10' .                  HIO BIT
CCHSNSB  EQU   X'04' .                  SENSE DATA STORED BIT
CCHCNTB  EQU   X'02' .                  COUNT VALID BIT
CCHNRYB  EQU   X'01' .                  NO RETRY BIT
CCHCPU   EQU   X'80' .             CPU IS SOURCE OF ERROR             I
CCHCHNL  EQU   X'40' .             CHANNEL IS SOURCE OF ERROR         I
CCHSTG   EQU   X'10' .             STORAGE IS SOURCE OF ERROR         I
CCHINTFC EQU   X'08' .             I/O INTERFACE IS SOURCE OF ERROR   I
CCHRCV   EQU   X'10' .                  RETRY CODE VALID
CCHUSV   EQU   X'08' .                  UNIT STATUS VALID
CCHCMDV  EQU   X'04' .                  COMMAND ADDRESS VALID
CCHCAV   EQU   X'02' .                  CHANNEL ADDRESS VALID
CCHDAV   EQU   X'01' .                  DEVICE ADDRESS VALID
COMPSYS  EQU   X'C0' .                  SYSTEM RESET
COMPSEL  EQU   X'80' .                  SELECTIVE RESET
COMPFES  EQU   X'40' .                  FORCED ENDING SEQUENCE
COMPID   EQU   X'00' .                  INTERFACE DISCONNECT
CCHDI    EQU   X'08' .             DISCONNECT IN BIT              19032
RTCODE0  EQU   X'00' .                  RETRY
RTCODE1  EQU   X'01' .                       CODE
RTCODE2  EQU   X'02' .                           VALUES
RTCODE3  EQU   X'03' .                                 FOR
RTCODE4  EQU   X'04' .                                    ERPIB
RTCODE5  EQU   X'05' .
RTCODE6  EQU   X'06' .
RTCODE7  EQU   X'07' .
         SPACE 2
*****
*        CSW STATUS INDICATORS
*
CSWICK   EQU   X'02' .   CHANNEL INTERFACE CONTROL CHECK            CSC
CSWCTK   EQU   X'04' .   CHANNEL CONTROL CHECK                      CSC
CSWCDK   EQU   X'08' .   CHANNEL DATA CHECK                         CSC
CATBIT   EQU   CSWCTK+CSWICK .          CATASTROPHIC ERROR          CSI
CHEBIT   EQU   X'08' .                  CHANNEL END
DEVBIT   EQU   X'04' .                  DEVICE  END
UCKBIT   EQU   X'02' .                  UNIT CHECK
CCCBIT   EQU   X'04' .                  CHANNEL CONTROL CHECK
ICCBIT   EQU   X'02' .                  INTERFACE CONTROL CHECK
*****    MASK VALUES
*
MOD65    EQU   X'65' .                  MODEL NUMBER FOR RETRY IN CCH
ASRCODE  EQU   01 .                     CODE FOR ASR TO IDEN CCH IN CTL
ERPIBSZ  EQU   8 .                      NUMBER OF BYTES IN A ERPIB
CHNSPRT  EQU   X'10' .             RE INDICATOR FOR CHANNEL NOT   19032
*                                  SUPPORTED.                     19032
TERMBIT  EQU   X'20' .             R.E. BIT TO INDICATE SYSTEM    19032
NSMACH   EQU   X'40' .             INDICATES NS MACHINE           19E03
NSTIME   EQU   X'40' .             NS CLOCK SUPPORTED SWITCH      19E03
COMP07   EQU   X'07' .             2880 CHANNEL ID                19E03
COMP08   EQU   X'08' .             2880 CHANNEL ID                19E03
*                      CCH INTERNAL SWITCHES
*
*              SWITCH BYTE 1
*
CCHCMDRG EQU   X'80' .                  CMD REG PARITY VALID          I
CCHNORE  EQU   X'40' .                  NO RECORD ENTRY AVAILABLE
CCHERFRE EQU   X'20' .             ERPIP FREED FROM ACTIVE LIST   19032
CCHNOLST EQU   X'10' .             RECORD ONLY-NO ERPIB TO LIST   19032
CCHHAND  EQU   X'08' .             D.E. OR ATTENTION PRESENTED    19032
CCHIBC   EQU   X'04' .             ERPIB ALREADY CREATED          19032
UCBNVBIT EQU   X'02' .             UCB INVALID                    19032
*
*
*        SWITCH BYTE 2
*
SYSTERM  EQU   X'80' .             SIGNAL FOR SYSTEM TERMINATION  19032
INTRTN2  EQU   X'40' .             ALTERNATE RETURN SWITCH        19032
MODELNO  EQU   X'20' .             SET FOR MODELS 2880 NOT SUPPORT19E03
NOLOG    EQU   X'10' .             CHANNEL FAILED TO LOG OUT      19E03
*
         AIF   (&MSCATAP NE 1).EQUSKIP
*****
*
*              MULTI-SYSTEM SWITCHES
*
MSBYTE   EQU   X'78' .             TEST FOR OFFLINE CHANNEL
MSBIT    EQU   X'10' .             SWITCH FOR MULTI-SYSTEM ENVIRONMENT
LOBITS   EQU   X'03' .             SAVE CPUSTAT INFORMATION
CPUIDBIT EQU   X'01' .             TEST FOR CPUID
ID2BIT   EQU   X'08' .             SWITCH FOR CPUID=CPU2
*
*
.EQUSKIP ANOP
*                                                                     I
*        GENERAL EQUATES                                              I
*                                                                     I
LENGTH   EQU   X'52' .             CDC RECORD ENTRY LENGTH        19E03
LGH6070   EQU   X'68'         2860/2870 R.E. DATA LENGTH       @S67053P
ONE12    EQU   112 .                    2880 LOGOUT LENGTH        19E03
CCH23    EQU   23 .                CONSTANT                           I
CCH3     EQU   3 .                 CONSTANT                           I
CCH4     EQU   4 .                 CONSTANT                           I
CCH7     EQU   7 .                 CONSTANT                           I
ALLFS    EQU   X'FF' .             CONSTANT                           I
ZERO     EQU   0 .                 CONSTANT                           I
THREE    EQU   3 .                      CONSTANT                      I
HEX06    EQU   X'06' .                 CONSTANT                       I
HEX40    EQU   X'40' .                  CONSTANT                      I
HEX70    EQU   X'70' .                  CONSTANT                      I
FIVE     EQU   5 .                      CONSTANT                      I
TWO      EQU   2 .                      CONSTANT                      I
HEX02    EQU   X'02' .                  CONSTANT                      I
ONE      EQU   1 .                      CONSTANT                      I
HEX20    EQU   X'20' .                  CONSTANT                      I
HEX04    EQU   X'04' .                  CONSTANT                      I
HEX80    EQU   X'80' .                  CONSTANT                      I
HEX10    EQU   X'10' .                  CONSTANT                      I
HEX08    EQU   X'08' .                  CONSTANT                      I
HEX03    EQU   X'03' .                  CONSTANT                      I
HEX01    EQU   X'01' .                  CONSTANT                      I
I        EQU   1 .                 NUMBER TO BE USED IN SMALL AREA19E03
HEX07    EQU   X'07' .        CONSTANT
HEX0E    EQU   X'0E' .                  SEQUENCE 2,3,4 TRIGGERS       I
HEXE0    EQU   X'E0' .                  MODE TRIGGERS 9,10,11         I
FOUR     EQU   4 .            CONSTANT FOR DISPLACEMENT
SIX      EQU   6 .            CONSTANT FOR DISPLACEMENT
SEVEN    EQU   7 .            CONSTANT FOR DISPLACEMENT
EIGHT    EQU   8 .            CONSTANT FOR DISPLACEMENT
SIXTEEN  EQU   16 .           CONSTANT FOR DISPLACEMENT
TWENTY4  EQU   24 .           CONSTANT FOR DISPLACEMENT
FIFTY2   EQU   52 .           CONSTANT FOR DISPLACEMENT
FIFTY6   EQU   56 .          CONSTANT FOR DISPLACEMENT
EIGHTY   EQU   80 .           CONSTANT FOR DISPLACEMENT
CC1      EQU   1 .            CONDITION CODE =1 .
CC3      EQU   3 .            CONDITION CODE =3 .
CC4      EQU   4 .            CONDITION CODE =4 .
CC5      EQU   5 .            CONDITION CODE =5 .
CC6      EQU   6 .            CONDITION CODE =6 .
CC7      EQU   7 .            CONDITION CODE =7
CC8      EQU   8 .            CONDITION CODE =8
CC9      EQU   9 .            CONDITION CODE =9
CC10     EQU   10 .           CONDITION CODE =10
         TITLE 'INITIAL ENTRY ROUTINE -- IGFCATAP'
***********************************************************************
*
* FUNCTION---- THIS ROUTINE WILL PERFORM NECESSARY INITIALIZATION AT
*              ENTRY TO CCH, LOCATE AN AVAILABLE ERP INTERFACE BYTE
*              (ERPIB), AND LOCATE AN AVAILABLE RECORD ENTRY AREA.  IT
*              WILL THEN MOVE THE CSW, CHANNEL/UNIT ADDRESS,
*              TIME,  DATE,  JOB  IDENTIFICATION  AND THE
*              CHANNEL TYPE TO THE RECORD ENTRY.  FOLLOWING THIS, IT
*              PERFORMS FUNCTIONS ASSOCIATED WITH TYPE OF INTERCEPTION.
         SPACE 2
* INPUT------- UCB, IOB, UNIT ADDRESSES FROM IOS
*              I/O OLD PSW AND/OR CSW
         SPACE 1
* ENTRY------- IGFCAT, ON ANY CHANNEL ERROR
         SPACE 1
* EXIT--------
*              EXIT POINT          REASON
*              CCHSNS              SIO IN SENSE ROUTINE
*              CCHTION             TIO IN SENSE ROUTINE
*              CCHSSK              SIO IN STAND-ALONE-SEEK ROUTINE
*              CCHTIOSK            TIO IN STAND-ALONE-SEEK ROUTINE
*              CCHINT              INTERRUPTION
*              CCHSIO              SIO IN SIO MODULE
*              CCHHIO                   HALT IO
         SPACE 1
* OUTPUT------ NONE
         SPACE 1
* EXT REF----- CVT
         SPACE 1
* ERR COND---- NONE
         SPACE 1
* TABLES------ ERPIB
*              RECORD ENTRY
*
***********************************************************************
         SPACE 3
*****    CAUSE MCH TO TERMINATE THE SYSTEM IF A MACH. CK. OCCURS
*
         MVI   MACHCK+THREE,ASRCODE .       MOVE MCK CODE TO LOC 115
         SPACE 2
*****    SAVE REGISTERS.  ZERO ALL INTERNAL SWITCH SETTINGS
*
CCH029   STM   R0,R14,CCHSAVE .           SAVE REGISTERS
         NI    CCHSW2,ZERO .   ZERO SWITCH BYTE 2                 19032
CCHRCUR  XC    CCHSWS(ONE),CCHSWS .    ZERO SWITCH SETTINGS       19032
         XC    IBWORK(EIGHT),IBWORK .  ZERO WORK ERPIB            19032
         MVI   RECBYTE,ZERO .              ZERO THE RECORD BYTE
         L     CVTREG,INTCVTPT .        LOAD ADDR OF CVT
         SPACE 2
*****    FIND INDEX VALUE FOR BRANCH TABLE
*
         SR    WORK4,WORK4 .            CLEAR INDEX REGISTER
         SLDL  WORK4,EIGHT .                SHIFT CODE TO REGISTER
         LR    INDEX,WORK4 .            LOAD INDEX VALUE FOR BRANCH TAB
         SRDL  WORK4,EIGHT .      RESTORE BASE REGISTER           19032
         STC   INDEX,CCHWORK .          STORE INDEX BYTE FOR TESTING
         SPACE 2
*
*
*****    CHECK PENDING LOGOUT CONDITION AND UCB ADDRESS VALIDITY
*
         TM    CSWLOC,HEX04 .      LOGOUT PENDING
         BZ    CCHTUCB .           NO CHECK UCB ADDR VALID
         OI    CCHSW1,CCHNOLST .   SET RECORD RECORD ONLY SWITCH
         OI    CCHSW2,SYSTERM .    SET SYSTEM TERMINATION SWITCH
CCHTUCB  LTR   UCBREG,UCBREG .     HAS A UCB ADDR BEEN PASSED
         BNZ   CCHUCBV .           BRANCH IF ADDRESS NOT ZERO     19032
         OI    CCHSW1,UCBNVBIT .   SET UCB INVALID BIT            19032
CCH006A  OI    CCHSW1,CCHNOLST .   SET RECORD ONLY SWITCH         19032
         B     CCH007 .            GO FIND R.E.                   19032
CCHUCBV  TM    CCHSW2,SYSTERM .    IS THIS A RECURSION TO FILL RE 19032
         BO    CCH006A             YES, SKIP ERPIB FIND           19032
         CLI   CCHWORK,CATSNS .         IS INTERCEPT FROM SENSE ROUTINE
         BE    CCH000 .                 YES, DO NOT CHECK FOR POST/BUSY
         CLI   CCHWORK,CATTIOSN .       IS INTERCEPT FROM SENSE ROUTINE
         BE    CCH000 .                 YES, DO NOT CHECK FOR POST/BUSY
         CLI   CCHWORK,CATREC  .        IS INTERCEPT FROM RECURSION OF *
                                        ASYNCHRONOUS SENSE ON TP OR    *
                                        SHARED DASD
         BE    CCH000 .                 YES,DO NOT CHECK FOR POST/BUSY
         TM    UCBFL1(UCBREG),UCBBSY+UCBPST IS POST OR BUSY BIT SEY
         BC    CC5,CCH000 .               YES, CONTINUE
         OI    CCHSW1,CCHHAND .    SET SPECIAL HANDLING SWITCH    19032
         EJECT
*                  ERPIB ENTRY FIND ROUTINE
         SPACE 2
*****    CHECK ERPIB'S AND FIND POINTER TO FIRST FREE ERPIB
*
CCH000   EQU   *
*
         TM    CSWLOC+FIVE,CATBIT .IS THIS CHANNEL DATA CHECK ONLY19E03
         BC    CC7,CCH000A .       NO,BRANCH TO FIND ERPIB        19E03
         OI    CCHSW1,CCHNOLST .   YES, SET RECORD ONLY SWITCH    19E03
*
CCH000A  SR    WKREG1,WKREG1 .          CLEAR INDEX REGISTER
         SR    IBREG,IBREG .            CLEAR ERPIB REGISTER
CCH005   LA    WKREG3,ERPIBFD(WKREG1) . GET ADDRESS OF ERPIB
         CLI   ZERO(WKREG3),LISTEND .      IS THIS THE END OF THE LIST
         BE    CCH004 .                 YES, GO TO NEXT STEP
         LA    WKREG1,ERPIBSZ(WKREG1) . UPDATE INDEX FOR NEXT ERPIB
         NC    ZERO(ERPIBSZ,WKREG3),ZERO(WKREG3) TEST FOR AVAILABLE
         BZ    CCH006 .                 AVAILABLE, BRANCH
         CH    UCBREG,TWO(WKREG3) .    HAS THIS DEVC A PREV ERROR 19032
         BNE   CCH005 .                 NO, CONTINUE LOOP
         OI    CCHSW1,CCHIBC .          SET ERPIB-ALREADY-CREATED SW
         LR    IBREG,WKREG3 .           DEFINE POINTER TO THIS ERPIB
         CLI   CCHWORK,CATREC .         WAS ENTRY ON ASYNCH SENSE REC I
         BNE   CCH007 .                 NO-BRANCH
         OI    IOBCHAN(IOBREG),CCCBIT . FORCE CHAN ERR TO IOB CSW     I
         OI    IBPRGFGA(IBREG),CCHNRYB . SET NO RETRY BIT IN ERPIB    I
         LA    WKREG3,CCHRTSNN .        GET NO RETRY DISPLACEMENT     I
         B     CCHEXIT .                GO EXIT CCH                   I
*
CCH006   LR    IBREG,WKREG3 .           SAVE POINTER TO THIS ERPIB
         B     CCH005 .                 LOOP
*
CCH004   LTR   IBREG,IBREG .            HAS A ERPIB POINTER BEEN DEF
         BC    CC6,CCH007 .               YES, CONTINUE
         LA    IBREG,ERPIBFD . ADDR OF FIRST ENTRY IN ERPIB TABLE
         LA    WKREG3,FIVE .  LOOP CONTROL FOR 5 ERPIB ENTRIES
CCH005A  L     REREG,CVTIERLC  .        ADDR OF ASYNCHR.ERROR QUEUE
         CH    REREG,TWO(REREG)  .        COMPARE AG. LAST ENTRY (LEQB)
         BNE   CCH005D .                TEST ENTRIES ON ERRLCH
CCH005B  L     WKREG2,CCHSIRB  .        GET ADDR OF SIRB
         TM    RBSTAB2(WKREG2),SIRBACT  .    IS SIRB ACTIVE
         BZ    CCH005C .  NO
         LH    WKREG2,RBIQE(WKREG2) .      LIST ORIGEN FOR RQE'S
         N     WKREG2,CCHMASK1 .        AND OUT 2 HIGH ORDER BYTES
         CLC   TWO(TWO,WKREG2),TWO(IBREG) .  DO UCB ADDRESSES MATCH
         BE    CCH005C .  YES
         XC    ZERO(ERPIBSZ,IBREG),ZERO(IBREG) ZERO INACTIVE ERPIB
         OI    CCHSW1,CCHERFRE .   SET ERPIB FREED SWITCH         19032
CCH005C  LA    IBREG,ERPIBSZ(IBREG) .  UPDATE PTR TO NEXT ERPIB
         BCT   WKREG3,CCH005A .         LOOP TO TEST IF NXT ERPIB ACTIV
         TM    CCHSW1,CCHERFRE .   HAS AN ERPIB BEEN FREED        19032
         BZ    CCH005F .  NO
         XI    CCHSW1,CCHERFRE .   CLEAR ERPIB FREED SWITCH       19032
         B     CCH000A .                GET ADDRESS OF USEABLE ERPIB
CCH005D  LH    WKREG1,ZERO(REREG) .     GET PTR TO FIRST RQE ON QUEUE
CCH005E  N     WKREG1,CCHMASK1 .        CLEAR OUT HIGH ORDER BITS
         LH    WKREG2,TWO(WKREG1) . GET UCB ADDR FROM RQE
         N     WKREG2,CCHMASK1 .        CLEAR OUT HIGH ORDER BITS
         SRL   WKREG2,ONE .               CLEAR LOW ORDER BIT
         SLL   WKREG2,ONE .
         CH    WKREG2,TWO(IBREG) .  COMPARE RQE AND ERPIB UCB ADDRS
         BE    CCH005C .                TEST NEXT ERPIB
         CLC   ZERO(TWO,WKREG1),TWO(REREG) . IS THIS LAST RQE ON LIST
         BE    CCH005B .                IF SO,TEST SIRB
         LH    WKREG1,ZERO(WKREG1) .    GET PTR TO NEXT RQE ON ERRLCH
         B     CCH005E .                LOOP TO TEST RQE
CCH005F  EQU   *
         LA    IBREG,ERPIBFD .          GET ADDRESS OF FIRST ERPIB
         EJECT
*                        DATA COLLECT ROUTINE
         SPACE 2
*****    LOCATE RECORD ENTRY AND SET FLAG
*
CCH007   LR    WKREG2,UAREG .     GET UNIT ADDRESS                19032
         SRL   WKREG2,EIGHT .      ISOLATE CHANNEL NUMBER         19032
         SLL   WKREG2,TWO .          MULTIPLY BY 4
         LA    WORK3,CHRADTAB(WKREG2)  GET ADR OF RTN ADR IN TABLE19032
         L     WRK4,ADRPTRTB .     GET PTR TABLE ADDRESS          19032
         L     REREG,RECORD .     GET RECORD AREA ADDRESS         19032
         L     RESZREG,RESIZE .   LOAD RECORD ENTRY SIZE          19032
         LTR   WRK4,WRK4 .       CHECK IF INITIALIZED             20302
         BZ    CCHQUIT .     MODEL IS LESS THAN 65 GO TO MCH      20302
         BCTR  RESZREG,R0 .       SET UP SIZE FOR EXECUTE         19032
CCH007A  CLI   ZERO(REREG),LISTEND . IS THIS END OF R E AREA      19032
         BE    CCH008 .           YES, GO TO SET NO R E AVAILABLE 19032
         EX    RESZREG,RECOMPR .  IS THIS R.E. IN USE             19032
         BC    CC8,CCHSETFL . NO GO TO SET FLAG AND FILL RE       19032
         AL    REREG,RESIZE .     UPDATE ADDRESS TO NEXT R. E.    19032
         B     CCH007A .          GO TO CHECK IF AVAILABLE FOR USE19032
RECOMPR  NC    ZERO(ZERO,REREG),ZERO(REREG) . IS RCD USED TEST    19032
CCHSETFL MVI   CCHREFG,LISTEND .   SET NON-ZERO VALUE IN FLAG     19032
         MVC   RECIDFD,RECORDID .       MOVE ID TO RECORD ENTRY
         TM    CSWLOC+FIVE,CATBIT .  IS THIS CDC ONLY             19E03
         BNZ   CCH009 .            NO, SKIP LENGTH SET            19E03
         OI    RECENTRY+CCH7,LENGTH .  SET R E LENGTH FOR CDC     19E03
         SPACE 2
***      MOVE CSW AND CUA TO RECORD ENTRY                         19032
*
CCH009   MVC   CSWLWB,CSWLOC .          MOVE CSW TO THE RECORD ENTRY
         ST    UAREG,CUA .         STORE CUA IN RECORD ENTRY      19032
*
*        MOVE RELEASE LEVEL TO RECORD ENTRY
*
GRELV    L     WKREG3,RECORD .    GET RECORD ENTRY AREA ADR       19032
         BCTR  WKREG3,ZERO .      SUBTRACT THREE                  19032
         BCTR  WKREG3,ZERO .                                      19032
         BCTR  WKREG3,ZERO .                                      19032
.*                                     MOVE RELEASE LEVEL TO      19032
         OC    RECIDFD+ONE(ONE),ZERO(WKREG3) . RECORD ENTRY       19032
*
*               MOVE MODEL ID TO RECORD ENTRY
*
         MVC   CPUIDFD,MODID .     MOVE ID TO RECORD ENTRY        19E03
         SPACE 2
*****    GET   TIME OF DAY                                        19E03
*                                                                 19E03
         TM    NSCLOCK,NSTIME .    IS NS CLOCK SUPPORTED          19E03
         BNO   GETDATE .           NO-GO COMPUTE                  19E03
         OI    RECSWCH1,NSMACH .   SET NS BIT                     19E03
*                                                                 19E03
         DC    X'B205' .           ISSUE                          19E03
         DC    S(DATE) .           STORE CLOCK                    19E03
*                                                                 19E03
         BC    EIGHT+ONE,TIMEOK .  VALUE IS PREDICTABLE           19E03
         XC    DATE(EIGHT),DATE .  VALUE UNPREDICTABLE-CLEAR      19E03
TIMEOK   B     CCH010 .            GO GET JOB ID                  19E03
         SPACE 2
*****    COMPUTE DATE AND LOCAL TIME OF DAY FOR RECORD ENTRY
*
GETDATE  MVC   DATE,CVTDATE .      MOVE DATE TO RECORD ENTRY      19E03
         SR    WKREG1,WKREG1 .          CLEAR WORK REGISTER
         AL    WKREG1,CVTTPC .          LOAD POINTER TO PSEUDO CLOCKS
         BC    CC10,CCH010 .            BR--NO PSEUDO CLOCKS AVAILABLE
         L     WKREG2,SHPC(WKREG1) .   LOAD SIX HOUR PSEUDO CLOCK
         AL    WKREG2,T4PC(WKREG1) .   ADD 24 HOUR PSEUDO CLOCK
         AIF   (&MSCATAP NE 1).TSKIP
         L     WKREG3,TIMELOC .         GET INDEX TO ACTIVE TMR PSA CSC
         L     WKREG3,ZERO(WKREG3) . ADDR OF PREFIX W/ACTIVE TMR  CSC
         L     WKREG3,EIGHTY(WKREG3) .     GET TIMER VALUE
         AGO   .TMRSKIP
.TSKIP   ANOP
         L     WKREG3,EIGHTY .             LOAD HARDWARE TIMER
.TMRSKIP ANOP
         SRA   WKREG3,ONE .              CONVERT TO 26 US INCREMENTS
         SLR   WKREG2,WKREG3 .         SUBTRACT TIMER
         AL    WKREG2,LTPC(WKREG1) .   ADD LOCAL TIME PSEUDO CLOCK
         BC    CC3,CCH011 .              BRANCH ON OVERFLOW
         CL    WKREG2,TD24HRS .        CHECK FOR OVER 24 HOURS
         BC    CC4,CCH011+FOUR  .  BRANCH IF NOT OVER 24 HOURS
CCH011   AL    WKREG2,TDADJ .          ADD 7+ HOURS CORRECTION FACTOR
         ST    WKREG2,CCHWORK .        STORE TIME IN WORK AREA
         MVC   TIME,CCHWORK .           MOVE TIME TO RECORD ENTRY
         SPACE 2
*****    MOVE JOB ID TO RECORD ENTRY                              19032
*
CCH010   LTR   UCBREG,UCBREG .     UCB ADR  PRESENT               19032
         BZ    CCH012 .            NO, BRANCH- NO UCB ADR         19032
         TM    UCBFL1(UCBREG),UCBPST .    IS POST UP IN UBC       19032
         BZ    CCH012 .           NO, BRANCH - NO JOB ID          19032
         LH    WKREG3,RQEADR(UCBREG) .  GET RQE ADDRESS FROM UCB  19032
         L     WKREG3,DEBDISP(WKREG3) . GET DEB ADDRESS FROM RQE  19032
         L     WKREG3,DEBTCB(WKREG3) .  GET TCB ADDRESS FROM DEB  19032
         LA    WKREG3,ZERO(WKREG3) .   CLEAR HIGH ORDER BYTE      19032
         L     WKREG2,CVTHEAD .   GET ADR FIRST TCB ON QUEUE      19032
COMPRAD  LTR   WKREG2,WKREG2 .    IS THIS END OF CHAIN            19032
         BZ    CCH012 .           YES, BRANCH - NO JOBID          19032
         CR    WKREG2,WKREG3 .    ARE THEY THE SAME TCB           19032
         BE    GJOBID           YES, GO GET JOBID                 19032
         L     WKREG2,NXTTCB(WKREG2) .  GET NEXT TCB ON QUEUE     19032
         B     COMPRAD .          LOOP FOR COMPARE                19032
GJOBID   EQU   *
         L     WKREG2,TCBTIOT(WKREG3) . GET ADR OF TIOT           19032
         LTR   WKREG2,WKREG2 .    IS THERE A TIOT ADR             19032
         BZ    CCH012 .           NO , BRANCH - NO JOBID          19032
         MVC   JOBID,ZERO(WKREG2) .    MOVE JOB ID TO RECORD ENTRY19032
*****    MOVE CHANNEL TYPE ASSIGNMENT TO RECORD ENTRY
*
CCH012   SR    WKREG3,WKREG3 .     CLEAR REGISTER                 19032
         IC    WKREG3,ZERO(WORK3) . GET CHANNEL TYPE FROM TABLE   19032
         STC   WKREG3,CHANID .     STORE CHANNEL TYPE IN R.E.     19032
         TM    CCHSW1,UCBNVBIT .   IS UCB ADR INVALID             19032
         BC    CC1,CCH017 .        YES, SKIP DEVICE TYPE IN R.E.  19032
         MVC   DEVTYPE,DEVDESC(UCBREG) .  MOVE DEVICE TYPE TO R.E.19032
         B     CCH017 .            GO TO BRANCH TABLE             19032
*                                                                 19032
CCH008   TM    CCHSW2,SYSTERM .    IS TERMINATION SWITCH SET      19032
         BC    CC8,CCH008A .       NO,GO SET NO R.E. AVAILABLE SW 19032
         L     RESZREG,RESIZE .    GET R.E. SIZE                  19032
         SR    REREG,RESZREG .     POINT TO LAST R.E.             19032
         BCTR  RESZREG,R0 .       SET UP LENGTH FOR EXECUTE       19032
         EX    RESZREG,CCHZERE .   CLEAR RECORD ENTRY             19032
         B     CCHSETFL .          GO FILL RECORD FOR TERM        19032
CCHZERE  XC    ZERO(ZERO,REREG),ZERO(REREG) . ZERO RECORD ENTRY   19032
CCH008A  OI    CCHSW1,CCHNORE .    SET NO R.E. AVAILABLE SWITCH   19032
         SR    REREG,REREG .       ZERO R.E. ADR.REG              19032
CCH017   EQU   *
         SPACE
         EJECT
*                     BRANCH TABLE ROUTINE
         SPACE 2
*****    BRANCH TABLE -- ENTER PROPER ROUTINE
*
         B     *+FOUR(INDEX) .             ENTER BRANCH TABLE
         SPACE 1
         B     CCHSSK .                  0 -(SIO) DIRECT ACCESS SIO MOD
         B     CCHTIOSK .                4 -(TIO) DIRECT ACCESS TIO MOD
         B     CCHSNS .                  8 -(SIO) SENSE SUBROUTINE
         B     CCHTIOSN .               12 -(TIO) SENSE SUBROUTINE
         B     CCHSIO .                16 -(SIO) START I/O MODULE
         B     CCHINT .                20 -(INT) INTERRUPT SUPERVISOR
         B     CCHHIO .                24 -(HIO) HALT I/O SUBROUTINE
         SPACE 2
         TITLE 'SENSE ROUTINE INTERCEPTION -- IGFCATAP'
***********************************************************************
*
* FUNCTION --- THIS ROUTINE WILL ATTEMPT RECOVERY ON
*                CHANNEL CONTROL CHECKS.  HOWEVER, IF ANY TYPE
*              OF RESET OCCURS EITHER WITHIN OR EXTERNAL TO CCH, AN
*              ERPIB WILL BE CREATED AND THE NO RETRY BIT SET.  RETRY
*              WILL NOT BE ATTEMPTED
         SPACE 1
* ENTRY PTS -- CCHSNS
*              CCHTIOSN
         SPACE 1
* EXIT PTS --- UCBSCH
         SPACE 1
* INPUT ------ INTERNAL SWITCH SETTINGS
         SPACE 1
* OUTPUT ----- NO RETRY SET IN ERPIB OR ZERO SENSE DATA
*              OR RECORD ONLY SWITCH
         SPACE 1
* EXT REF ---- IOB
*              ERROR COUNTER
         SPACE 1
* ERR COND --- NONE
         SPACE 1
* TABLES ----- ERPIB
*              RECORD ENTRY
*
***********************************************************************
         SPACE 3
CCHSNS   OI    RECBYTE,CCHSIOB .        SET SIO BIT IN RECORD BYTE
         B     CCH018 .                 GO TO TEST R.E. AVAIL SW
*
CCHTIOSN OI    RECBYTE,CCHTIOB .        SET TIO BIT IN RECORD BYTE
*                                                                     I
*        ROUTE  CONTROL THRU ERPIBSET--CYA                            I
CCH018   OI    CCHSW1,CCHNOLST .   SET INTERNAL SWITCH TO PREVENT 19032
*                                       MOVING ERPIB TO LIST          I
         BAL   LINKRG2,ERPIBSET .       CREATE AN ERPIB FOR STAT ONLY I
*
         TM    CSWLOC+FIVE,CATBIT .  IS THIS CDC ALONE            19032
         BZ    CCH026A .           YES, SKIP TERM CODE TEST       19E03
CCH026   TM    IBEXCSW2,COMPSEL .  IS TERM CODE= 2 OR 3           19032
         BO    CCH021 .            YES, DO NOT RETRY              19032
CCH026A  LH    WKREG1,CCHSAVE+TWO .GET ERROR COUNT FROM SAVED REG 19E03
         LTR   WKREG1,WKREG1 .          IS VALUE ZERO
         BZ    CCH021 .                 YES, BRANCH
         BCTR  WKREG1,R0 .               REDUCE ERROR COUNT BY ONE
         STH   WKREG1,CCHSAVE+TWO . RESTORE DECREMENTED REG       19032
         LA    WKREG3,CCHRTSNY .        LOAD RETURN DISPLACEMENT TO IOS
         B     UCBSCH .                 GO TO UCB SEARCH ROUTINE
*
CCH021   TM    CCHSW1,CCHIBC .          ERPIB ALREADY CREATED SW ON
         BO    CCH022 .                 YES, GO TO SET BAD SENSE
         TM    CSWLOC+FIVE,CATBIT .IS THIS CDC ONLY               19E03
         BZ    CCH024 .            YES,LOAD NO RETRY DISPLACEMENT 19E03
CCH025   OI    IOBCHAN(IOBREG),CCCBIT . FORCE CHANNEL ERROR TO IOB CSW
.*                                      ZERO ERPIB IN CASE OF INUSE
         XC    ZERO(ERPIBSZ,IBREG),ZERO(IBREG) .
         ST    UCBREG,IBUCBD(IBREG) .   STORE UCB ADDRESS IN THE ERPIB
         OI    IBPRGFGA(IBREG),CCHNRYB .SET NO RETRY BIT IN THE ERPIB
         TM    CCHSW1,CCHNORE .         IS THERE A RECORD ENTRY AVAIL.
         BO    CCH024 .                 NO, SKIP RECORDING OF THE ERPIB
         MVC   ERPIB,IBPRGFGA(IBREG) .  MOVE ERPIB TO R. E.       19032
CCH024   LA    WKREG3,CCHRTSNN .        LOAD RETURN DISPLACE FOR NO RTY
         B     UCBSCH .                 GO TO UCB SEARCH ROUTINE
*
CCH022   NI    IBPRGFGA(IBREG),ALLFS-CCHSNSB . OFF SNS DATA STORE BIT
         OI    IBPRGFGA(IBREG),CCHNRYB .  SET NO RETRY IN ERPIB   19E03
         B     CCH024 .                 GO TO FIND RETURN DISPLACEMENT
*
         TITLE 'STAND ALONE SEEK, START I/O INTERCEPTION -- IGFCATAP'
***********************************************************************
*
* FUNCTION --- THIS ROUTINE FILLS THE INTERCEPTION-DEPENDENT PORTION
*              OF THE RECORD ENTRY (IF ONE EXISTS).  AN ERPIB IS
*              CREATED BY PASSING CONTROL TO THE ERPIBSET SUBROUTINE.
         SPACE 1
* ENTRY PTS -- CCHSSK
*              CCHTIOSK
*              CCHSIO
         SPACE 1
* EXIT PTS --- UCBSCH
         SPACE 1
* INPUT ------ INTERNAL SWITCH SETTINGS
         SPACE 1
* OUTPUT ----- ERPIB
         SPACE 1
* EXT REF ---- NONE
         SPACE 1
* ERR COND --- NONE
         SPACE 1
* TABLES ----- RECORD ENTRY
*              ERPIB
*
***********************************************************************
         SPACE 3
CCHSIO   EQU   *
CCHSSK   OI    RECBYTE,CCHSIOB .        SET SIO BIT IN RECORD BYTE
         B     CCH027 .            GO CREATE AN ERPIB             19032
*
CCHTIOSK OI    RECBYTE,CCHTIOB .        SET TIO BIT IN RECORD BYTE
CCH027   EQU   *
         BAL   LINKRG2,ERPIBSET .       CREATE AN ERPIB
         LA    WKREG3,CCHRTSIO .        LOAD RETURN DISPLACEMENT TO IOS
         B     UCBSCH .                 GO TO UCB SEARCH ROUTINE
         TITLE 'INTERRUPT INTERCEPTION -- IGFCATAP'
***********************************************************************
*
* FUNCTION---- THIS IS THE SAME AS FOR THE STAND ALONE SEEK
*              INTERCEPTION ROUTINE.
         SPACE 1
* ENTRY PTS---
*              ENTRY POINT         FROM
*              CCHINT              NORMAL INTERRUPTION
         SPACE 1
* EXIT PTS----
*              UCBSCH              UCB SEARCH ROUTINE
         SPACE 1
* INPUT------- INTERNAL SWITCH SETTINGS
         SPACE 1
* OUTPUT ----- APPROPRIATE BITS IN THE RECORD BYTE
         SPACE 1
* EXT REF----- NONE
         SPACE 1
* ERR COND---- NONE
         SPACE 1
* TABLES------ RECORD ENTRY
*              ERPIB
*
***********************************************************************
         SPACE 3
CCHINT   OI    RECBYTE,CCHINTB .   SET INTERRUPT BIT IN REC BYTE  19032
*****    COMPLET ERPIB AND EXIT
*
CCH041   EQU   *
         BAL   LINKRG2,ERPIBSET .       CREATE AN ERPIB
         TM    CCHSW1,UCBNVBIT .   IS UCB ADR VALID               19032
         BO    CCH045 .            NO,SKIP DASD CHECK             19032
         TM    UCBTYP+TWO(UCBREG),DASD . IS THIS A DIRECT DASD DEVICE
         BZ    CCH045 .                 NO, BRANCH
         TM    UCBFL1(UCBREG),UCBASK+UCBDTR IS THIS A STAND ALONE SEEK
         BC    CC9,CCH045 .   NO, CONTINUE
         OI    CSWLOC+FOUR,UCKBIT .     SET UNIT CHECK TO DEQUEUE SEEK
CCH045   TM    CCHSW1,CCHHAND .    IS SPECIAL HANDLING SWITCH ON  19032
         BZ    CCH044 .                 NO, SKIP THE NEXT STEP
         TM    CCHSW2,SYSTERM .    IS SYSTEM TERMINATING          19E03
         BO    CCH044 .            YES-DO NOT MODIFY              19E03
         NI    CSWLOC+FIVE,ALLFS-ICCBIT-CCCBIT . FORCE ICC,CCC TO 0   I
CCH044   TM    CCHSW2,INTRTN2 .    IS ALTERNATE RETURN INDICATED  19032
         BO    CCH044A .           YES, GO TO LOAD ALT. DISPLAC   19032
         LA    WKREG3,CCHRTINT .   FIND PRIME INT RET POINT TO IOS19032
         B     UCBSCH .            GO TO UCB SEARCH ROUTINE       19032
CCH044A  LA    WKREG3,CCHINT2 .    FIND ALT RETURN TO IOS FOR INT 19032
         B     UCBSCH .                 GO TO THE UCB SEARCH ROUTINE
*
         TITLE 'HALT I/O INTERCEPT -- IGFCATAP'
***********************************************************************
*
* FUNCTION     THIS ROUTINE RECORDS THE CAUSE OF THE ERROR IN THE
*              RECORD ENTRY.
         SPACE 1
* ENTRY PTS--- CCHHIO
         SPACE 1
* EXIT PTS----
*              UCBSCH              UCB SEARCH ROUTINE
         SPACE 1
* INPUT------- INTERNAL SWITCH SETTINGS
         SPACE 1
* OUTPUT------ HIO BIT IN RECORD ENTRY
*              RECORD ONLY SWITCH
         SPACE 1
* EXT REF----- NONE
         SPACE 1
* ERR COND---- NONE
         SPACE 1
* TABLES------ RECORD ENTRY
*
***********************************************************************
         SPACE 3
CCHHIO   OI    RECBYTE,CCHHIOB .        SET HIO IN RECORD BYTE
*                                                                     I
*        ROUTE CONTROL THRU ERPIBSET                                  I
         OI    CCHSW1,CCHNOLST .   SET INTERNAL SWITCH TO PREVENT 19032
*                                       MOVING ERPIB TO LIST          I
         BAL   LINKRG2,ERPIBSET .       CREATE AN ERPIB FOR STAT ONLY I
         LA    WKREG3,CCHRTHIO .        LOAD RETURN DISPLACE TO THE SVC
         B     UCBSCH .                 GO TO THE UCB SEARCH ROUTINE
*
         TITLE 'UCB SEARCH ROUTINE -- IGFCATAP'
***********************************************************************
*
* FUNCTION---- 1.  COMPLETE THE RECORD ENTRY BY MOVING UP TO
*                  8  ACTIVE I/O UNIT ADDRESSES INTO IT.          19032
*              2.  TO DETERMINE IF THE SYSTEM SHOULD BE           19032
*                  TERMINATED--AND IF NECESSARY, TERMINATE IT.    19032
         SPACE 1
* ENTRY PTS--- UCBSCH
         SPACE 1
* EXIT PTS---- APPROPRIATE POINTS IN IOS AS IDENTIFIED BY
*              PREVIOUS ROUTINES.
         SPACE 1
* INPUT------- INTERNAL SWITCH SETTINGS  ADDRESS OF RETURN POINT
*              TO IOS.
         SPACE 1
* OUTPUT------ UCB ADDRESSES IN RECORD ENTRY  COMPLETED RECORD ENTRY
         SPACE 1
* EXT REF----- UCBS  RETURN POINT IN IOS
         SPACE 1
* ERR COND---- NONE
         SPACE 1
* TABLES------ RECORD ENTRY
*
***********************************************************************
         SPACE 3
UCBSCH   SR    WKREG1,WKREG1 .          SET COUNT REG TO ZERO
         TM    CCHSW1,CCHNORE .         IS THERE A RECORD ENTRY AVAIL
         BO    CCHEXIT .           NO, SKIP RECORD ENTRY FILLING  19032
         LA    WKREG1,EIGHT .      SET COUNT TO NBR OF ACT I/O UNT19032
         LA    WORK4,ACTIO .            GET ADDR OF ACT I/O REC. ENT.
CCH060   L     WKREG2,CVTILK2 .   ADDR OF TWO BYTE UCB POINTERS   19032
CCH064   LH    WORK5,ZERO(WKREG2) .        GET ADDRESS OF UCB
         LTR   WORK5,WORK5 .            TEST UCB ADDRESS
         BZ    CCH061 .                 NO UCB ADDRESS FOR THIS ENTRY
         BP    CCH062 .                 GOOD ENTRY, CK FOR POST + BUSY
CCH066   EQU   *                                                  19032
         AIF   (&MSCATAP NE 1).MSSKIP
         EJECT
***********************************************************************
*
* FUNCTION---- 1.   TO DETERMINE WHICH CHANNELS ARE ON-LINE  IN THE
*                   MULTI-SYSTEM CONFIGURATION AND TO INSERT THIS
*                   INFORMATION INTO CHANSTAT, A TWO BYTE FIELD AT
*                   RELATIVE LOCATION 76 FROM START OF RECORD ENTRY
*              2.   TO DETERMINE THE ID OF THE CPU IN CONTROL AND
*                   THE STATUS OF THE SYSTEM AND ENTER THIS INFOR-
*                   MATION IN THE FIRST BYTE OF THE MPINFO FIELD
* INPUT------- 1.   SWITCH SETTINGS IN A FOURTEEN BYTE CHANNEL TABLE
*                   IN THE PREFIX AREA OF EACH CPU
*              2.   CPUSTAT AND CPUID, TWO 1-BYTE FIELDS IN THE PREFIX
*                   AREA OF THE CPU IN CONTROL
* OUTPUT------ VARIOUS FIELDS IN THE RECORD ENTRY
* ERR COND---- NONE
* TABLES------ 1.   RECORD ENTRY
*              2.   CHANNEL TABLES IN PREFIX AREAS
*
*
*
***********************************************************************
         SPACE 2
*
         STM   WKREG0,WKREG3,CCHKEEP .   SAVE CCH WORK REGS
         SR    WKREG0,WKREG0 .     CLEAR CHANSTAT INDEX REG
         L     WKREG1,ACHAN0 .    GET ADDRESS OF CHAN TABLE IN PREFIX
CCHMS10  LA    WKREG2,SEVEN .          LOOP CONTROL
         SR    WKREG3,WKREG3 .          REG TO HOLD CHANNEL STATUS BYTE
CCHMS20  TM    ZERO(WKREG1),MSBYTE . ARE 5 HI ORDER BITS IN CHAN TBL ON
         BZ    CCHMS30 .           IF NOT, CHANNEL ONLINE
         LA    WKREG3,ONE(WKREG3) .  IF OFFLINE, SET CHANSTAT BIT
CCHMS30  SLL   WKREG3,ONE .          REPOSITION FOR NEXT CHANNEL TEST
         LA    WKREG1,TWO(WKREG1) .  GET NEXT CHANNEL TABLE ENTRY
         BCT   WKREG2,CCHMS20 .    STORE BYTE WHEN COMPLETED
         STC   WKREG3,CHANSTAT(WKREG0) STORE BYTE IN CHANSTAT
         LTR   WKREG0,WKREG0 .     IF NON-ZERO,CHANSTAT COMPLETED
         BC    CC7,CCHMS50 .             CHANSTAT COMPLETE
         L     WKREG3,APREFIX2                                      CSC
         L     WKREG3,ZERO(WKREG3) . POINT TO OTHER CPU PRFX AREA  CSC
         L     WKREG1,ACHAN0                                        CSC
         LA    WKREG1,ZERO(WKREG1,WKREG3) PTR TO OTHER CHAN TABLE  CSC
         LA    WKREG0,ONE(WKREG0) .  POINT TO 2ND BYTE OF CHANSTAT
         B     CCHMS10 .           CONSTRUCT 2ND CHANNEL BYTE
CCHMS50  L     WKREG0,ACPUSTAT .        ADDR OF CPU STATUS BYTE     CSI
         MVC   MPINFO(ONE),ZERO(WKREG0) . GET CPU INDICATOR BYTE
         NI    MPINFO,LOBITS .     CLEAR SIX HIGH ORDER BITS      19032
         OI    MPINFO,MSBIT .      SET MULTI-SYSTEM BIT           19032
         L     WKREG0,ACPUID                                        CSC
         TM    ZERO(WKREG0),CPUIDBIT . TEST FOR CPU ID              CSC
         BO    CCHMS60 .                IF ON, CPUID=CPU1
         OI    MPINFO,ID2BIT .     CPUID=CPU2                     19032
CCHMS60  LM    WKREG0,WKREG3,CCHKEEP
*
*
.MSSKIP  ANOP
*
         SPACE 1
CCHEXIT  TM    CCHSW2,SYSTERM .         IS SYSTEM TERMINATING     19E03
         BNO   CCHGETRG .               NO-BRANCH-CONTINUE        19E03
         TM    CCHSW1,CCHNORE .         HAS A R.E. BEEN CREATED   19E03
         BO    CCHGETRG .               NO,BRANCH                 19E03
         CLI   COUNT+SEVEN,LGH6070 .    IS THIS 2860/2870         19E03
         BL    CCHGETRG .               NO-INTEGRATED-BRANCH      19E03
         BE    REST6070 .               YES-GO RESTORE            19E03
         L     WRK4,ADRPTRTB .          GET PTR TABLE ADDRESS     19E03
         L     WKREG1,CCHLOG80 .        GET 2880 LOGOUT POINTER   19E03
         LTR   WKREG1,WKREG1 .          IS IT INITIALIZED         19E03
         BZ    CCHGETRG .               NO-BRANCH-NO RESTORE      19E03
         MVC   ZERO(ONE12,WKREG1),CHNLOG .   RESTORE FOR SEREP    19E03
         B     CCHGETRG .               GO RESTORE REGS           19E03
*                                                                 19E03
REST6070 MVC   LOG6070(TWENTY4),CHNLOG .SET UP FOR SEREP          19E03
CCHGETRG LR    LINKRG1,WKREG3 .         GET RETURN DISPLACEMENT   19E03
         LM    R0,R12,CCHSAVE .   RESTORE REGISTERS               19032
         A     LINKRG1,CCHSAVE+FIFTY6 . ADD DISPLACEMENT TO RETURN ADDR
*                                                                     I
         TM    CCHSW2,SYSTERM .    SHOULD SYSTEM BE TERMINATED.   19032
         BNO   CCHOUT .            NO, BRANCH TO OUT              19032
         TM    CCHSW1,CCHNORE .    HAS A R.E. BEEN CREATED        19032
         BO    CCHRCUR .           NO, RECURSE TO CREATE R.E.     19032
         OI    RECSWCH,TERMBIT .   SET R.E. BIT FOR TERMINATION   19032
CCHQUIT  MVI   MACHCK+THREE,QUITCODE .  STORE SEREP CODE IN 115   19032
         AIF   (&MSCATAP NE 1).MCHSKIP                            19032
         L     WKREG1,ACPUSTAT .   POINT TO ADR OF CPU STATUS BYTE19032
         TM    ZERO(WKREG1),LOBITS .   IS STATUS SHARED           19032
         BC    CC7,SKIPPSW .       BRANCH IF NOT SHARED           19032
         L     WKREG1,AMCHCK .     GET ADR SHARED MCI NEW PSW     19032
         LPSW  ZERO(WKREG1) .      LOAD MACHINE CHECK NEW PSW     19032
SKIPPSW  EQU   *                                                  19032
.MCHSKIP ANOP                                                     19032
         LPSW  MACHCK .            LOAD MACHINE CHECK PSW         19032
*
*
CCHOUT   L     REREG,CCHSAVE+FIFTY2 .   RESTORE REG 13            19E03
         MVI   MACHCK+THREE,ZERO .      CLEAR CODE FROM 115       19E03
         BR    LINKRG1 .                RETURN TO THE OPERATING SYSTEM
*
CCH062   TM    UCBFL1(WORK5),UCBBSY .  IS THIS UNIT ACTIVE        19032
         BO    CCH063 .            YES,BRANCH                     19032
CCH061   LA    WKREG2,TWO(WKREG2) .       NO, UP ADDRESS BY TWO
         B     CCH064 .                 LOOP
*
CCH063   LR    WRK4,UAREG .        GET UNIT ADDRESS               19032
         SRL   WRK4,EIGHT .        ISOLATE CHANNEL NUMBER         19032
         LH    WORK3,CCHCUA(WORK5) . GET UCB UNIT ADDRESS         19032
         SLL   WORK3,SIXTEEN .     ISOLATE CHANNEL NUMBER         19032
         SRL   WORK3,TWENTY4 .                                    19032
         XR    WORK3,WRK4 .        DO CHANNEL NUMBERS AGREE       19032
         BNE   CCH061 .            NO, GO UP POINTER              19032
         LTR   WKREG1,WKREG1 .     IS RECORD ENTRY FULL           19032
         BZ    CCH066 .            YES, DO NOT RECORD THIS UNIT   19032
         LA    WORK3,ACTIO .            GET ADDR OF ACT I/O ENT AREA  I
CCH063A  CLC   ZERO(TWO,WORK3),CCHCUA(WORK5) . IS CUA ALREADY RECOR   I
         BE    CCH061 .                YES,BRANCH                     I
         CR    WORK3,WORK4 .            IS SCAN COMPLETED             I
         BNL   CCH063B .               YES,BR, MOVE IN CUA            I
         LA    WORK3,TWO(WORK3) .       NO, UP PTR AND                I
         B     CCH063A .                 CONTINUE SCAN.               I
*
CCH063B  MVC   ZERO(TWO,WORK4),CCHCUA(WORK5) . MOVE CUA TO RECORD ENT I
         LA    WORK4,TWO(WORK4) .       UP ADDRESS OF ACT I/O REC. ENT.
         BCTR  WKREG1,R0 .               REDUCE COUNT BY ONE
*
*        AT THIS POINT IT IS POSSIBLE TO POST ALL DEVICES AFFECTED
*        BY THE SYSTEM RESET. IN GENERAL, THE OVERALL
*        INTEGRITY OF THE PROGRAM HAS BEEN RETAINED AND MODIFICATION
*        NEED ONLY BE INCLUDED AT THIS POINT.
*
         LTR   WKREG1,WKREG1 .          IS RECORD ENTRY FULL
         BZ    CCH066 .                 YES, RETURN TO SYSTEM
         B     CCH061 .                 GO TO UPDATE UCB POINTER
         TITLE 'ERPIB FILL SUBROUTINE -- IGFCATAP'
***********************************************************************
*
* FUNCTION --- THIS ROUTINE COMPLETES THE ERPIB BY MOVING THE UCB
*              ADDRESS INTO IT AND TRANSFERRING CONTROL TO THE
*              APPROPRIATE CHANNEL DEPENDENT ROUTINE TO SET THE
*              REMAINING APPROPRIATE BITS IN THE ERPIB.  WHEN CONTROL
*              IS RETURNED, THE LAST HALF OF THE ERPIB AND THE FAILING
*              CCW ARE MOVE TO THE RECORD ENTRY.  UNLESS OTHERWISE
*              SPECIFIED,  THE WORK ERPIB IS MOVED TO THE LIST.
*
* ENTRY PTS--- ERPIBSET
         SPACE 1
* EXIT PTS---- LINK REGISTER
         SPACE 1
* INPUT ------ ADDRESS OF ERPIB IN PARAMETER REGISTER.
         SPACE 1
* OUTPUT------ COMPLETED ERPIB
         SPACE 1
* ERR COND---- NONE
         SPACE 1
* EXT REF----- CHANNEL LOGOUT, UCB
         SPACE 1
* TABLES------ ERPIB
*
***********************************************************************
         SPACE 3
ERPIBSET STM   WKREG1,WKREG3,CCHKEEP .  SAVE WORK REGISTERS
         AIF   (&MSCATAP EQ 1).SKPCOM1
         CLI   ZERO(WORK3),COMP08 .IS THIS A 2880 CHANNEL         19E03
         BE    CON80 .             YES,GO TO COMPLETE ERPIB       19E03
         CLI   ZERO(WORK3),COMP07 .IS THIS A 2880 CHANNEL         19E03
         BE    CON80 .             YES,GO TO BUILD ERPIB          19E03
.SKPCOM1 ANOP
         TM    CSWLOC+FIVE,CATBIT .IS THIS CDC ONLY               19E03
         BC    CC8,CCH101 .        YES, SKIP ERPIB FILL ROUTINE   19E03
CON80    MVC   IBPRGFG1(I),RECBYTE . MOVE RECORD BYTE TO THE ERPIB19E03
         MVC   IBPRGFG1(ONE),RECBYTE .    MOVE RECORD BYTE TO THE ERPIB
         ST    UCBREG,IBUCB .           PUT UCB ADDR IN ERPIB
         L     INDEX,CCHMASK4 .    LOAD CHECK MASK                19032
         N     INDEX,ZERO(WORK3) . IS THERE AN ADDR IN THIS ENTRY 19032
         BZ    SETTERMA .          NO, BR TO SET SYSTERM          19032
         OI    IBPRGFG1,CCHSNSB .  SET SENSE DATA STORED BIT      19032
         OI    IBEXCSW1,CCHRCV+CCHCAV .  SET R CODE,CMD ADR VALID 19032
REPEAT   L     RTNADRG,ZERO(WORK3) . GET RTN ADDR FROM TABLE      19E03
         LA    WKERPIB,IBWORK .    GET WORK ERPIB ADDRESS TO PASS 19032
         BALR  LINKRG2,RTNADRG .   GO TO DEPENDENT FILL ROUTINE   19032
*
*       RETURN POINT FOR SUBROUTINE
*
         AIF   (&MSCATAP EQ 1).SKPCOM2
*************
*    THIS SECTION TESTS FOR A 2880 OPERATING IN COMPATIBILITY MODE
*
CCHRETRN TM    CCHSW2,NOLOG .      DID 2860 FILL RTN FIND NO LOG  19E03
         BZ    NORMCONT .          NO, GO ANALYZE ERPIB           19E03
         LA    WORK3,CHRADTAB .    YES,GET RTN ADDR TABLE ADDR    19E03
         L     INDEX,CCHMASK4 .    TO CHECK FOR 2880 RTN PRESENCE 19E03
LOOP80   TM    ZERO(WORK3),ALLFS . IS THIS THE END OF TABLE       19E03
         BO    NORMCONT .          YES,GO TO ANALYZE ERPIB        19E03
         CLI   ZERO(WORK3),COMP08 .IS THIS ENTRY FOR 2880 CHANNEL 19E03
         BE    CKADR .             YES-GO SEE IF ADDRESS THERE    19E03
         CLI   ZERO(WORK3),COMP07 .IS THIS ENTRY FOR 2880         19E03
         BE    CKADR .             YES-GO CHECK FOR ADDRESS       19E03
         B     UPLOOP .            GO TO NEXT ENTRY               19E03
*                                                                 19E03
CKADR    N     INDEX,ZERO(WORK3) . IS THERE AN ADDRESS IN ENTRY   19E03
         BZ    UPLOOP .            NO, GO INSPECT NEXT ENTRY      19E03
         B     REPEAT .            YES,GO SET UP TO ENTER 2880 RTN19E03
UPLOOP   LA    WORK3,CCH4(WORK3) . UP POINTER TO NEXT TABLE ENTRY 19E03
         B     LOOP80 .            GO EXAMINE THIS ENTRY          19E03
NORMCONT TM    CSWLOC+FIVE,CATBIT .IS THIS CDC ONLY               19E03
         BZ    CCH101 .            YES, SKIP ERPIB INSPECTION     19E03
.SKPCOM2 ANOP
         TM    IBEXCSW2,COMPSYS .  DOES TERM CODE EQ 3 (SYS RESET)19032
         BO    SETTERM .           YES, BRANCH TO SET SYSTERM BIT 19032
         TM    IBEXCSW1,CCHDAV        . IS UNIT ADR VALID         19032
         BNO   CCHINTCK .          NO, BRANCH TO CHK INTERCEPT    19032
         LTR   UCBREG,UCBREG .     IS UCB ADR ZERO                19032
         BNZ   CCHCNTU .           NO, BRANCH TO CONTINUE         19032
CCHINTCK TM    RECBYTE,CCHINTB .   IS INTERCEPTION ON AN INTERRUPT19032
         BO    ZUCB .              YES, BRANCH TO ZERO UCBREG     19032
** APAR 67053  9/25/73    SRB                                  @S67053P
         TM    RECBYTE,CCHHIOB     IS THIS HIO INTERCEPT?      @S67053P
         BNO   CCHCNTU             NO, MUST BE SIO OR TIO      @S67053P
*                                  ALLOW RETRY                 @S67053P
**                                                             @S67053P
SETTERM  OI    CCHSW2,SYSTERM .    SET SYSTEM TERMINATION SWITCH  19032
         B     RECOYSET .          GO TO SET RECORD ONLY SW       19032
SETTERMA LTR   REREG,REREG .       IS THERE A RECORD ENTRY AVAIL  19032
         BZ    SETTERM .           NO,SKIP SETTING SWITCH         19032
         OI    RECSWCH,CHNSPRT .   SET CHANNEL NOT SUPPORTED SW   19032
         MVI   RECENTRY+7,LENGTH .  SET DEFAULT LENGTH           A62683
         B     SETTERM .           IN R.E. AND GO SET SYSTERM SW  19032
*                                                                 19032
*                                                                 19032
ZUCB     XC    UCBDISP+CCHSAVE(CCH4),UCBDISP+CCHSAVE . ZERO UCBREG19032
         OI    CCHSW2,INTRTN2 .    SET ALTERNATE RETURN SWITCH    19032
         OI    CCHSW1,UCBNVBIT .  SET UCB ADR INVALID BIT         19032
RECOYSET OI    CCHSW1,CCHNOLST .   SET RECORD ONLY SWITCH         19032
*
*
*                                                                     I
*   THIS ROUTINE WILL SET CA, COUNT INVALID ON A SIO                  I
*                                                                     I
CCHCNTU  TM    RECBYTE,CCHSIOB .   IS THIS SIO                    19032
         BZ    CCH101 .                NO,BRANCH.                     I
         NI    IBEXCSW1,ALLFS-CCHCMDV .  OTHERWISE, SET CA INVALID    I
         NI    IBPRGFG1,ALLFS-CCHCNTB .  SET COUNT INVALID ALSO.      I
CCH101   TM    CCHSW1,CCHNORE .         IS THERE A RECORD ENTRY AVAIL
         BO    CCH102 .                 NO, DO NOT RECORD ERPIB
         MVC   ERPIB,IBPRGFG1 .    SAVE LAST HALF ERPIB IN R.E.   19032
*        THIS ROUTINE RECORDS THE FAILING CCW AND SETS THE CA     19032
*        TO ZERO ON A SIO.                                        19032
*                                                                 19032
         L     WKREG1,CAWLOC .     GET CMD ADR FROM CAW           19032
         LA    WKREG1,ZERO(WKREG1) . CLEAR HIGH ORDER BYTE        19032
         TM    RECBYTE,CCHINTB .   IS INTERCEPT ON AN INTERRUPT   19032
         BNO   CCHMOVE .           NO, GO MOVE CCW TO REC ENTRY   19032
         TM    CSWLOC+FIVE,CSWCDK .  IS THIS CHANNEL DATA CHECK PTM6061
         BO    CCH101A .           SKIP TESTING COMMAND ADDR    PTM6061
         TM    IBEXCSW1,CCHCMDV .  IS COMMAND ADDRESS VALID       19032
         BNO   CCH102 .            NO, SKIP MOVING CCW TO RE      19032
CCH101A  L     WKREG1,CSWLOC .     GET CMD ADR FROM CSW         PTM6061
         LA    WKREG1,ZERO(WKREG1) . CLEAR HIGH ORDER BYTE        19032
         LTR   WKREG1,WKREG1 .     IS CMD ADDRESS ZERO            19032
         BZ    CCH102 .            YES, BRANCH NO CCW AVAILABLE   19032
         LA    WKREG2,EIGHT .      LOAD DECREMENT CONSTANT        19032
         SR    WKREG1,WKREG2 .     DECREMENT COMMAND ADDRESS      19032
CCHMOVE  C     WKREG1,CVTMZ00 .    COMPARE FOR LEGAL ADDRESS      19032
         BH    CCH102 .            BRANCH,ILLEGAL ADDRESS         19032
         STC   WKREG1,CCHWORK .    STORE ADR FOR BOUNDARY CHECK   19032
         TM    CCHWORK,HEX07 .  IS BOUNDARY ALIGNMENT IMPROPER    19032
         BC    CC5,CCH102 .        YES, DO NOT RECORD CCW         19032
         MVC   CCW,ZERO(WKREG1) .  RECORD FAILING CCW             19032
         TM    RECBYTE,CCHSIOB .  IS THIS SIO                     19032
         BZ    CCH102 .           NO, BRANCH                      19032
         XC    CSWLWB+ONE(THREE),CSWLWB+ONE .  ZERO CMD ADDRESS   19032
CCH102   TM    CCHSW1,CCHNOLST .   IS SW SET TO PREVENT MOVE      19032
         BO    CCH104 .                 YES,BRANCH-RESTORE REGS       I
         TM    UCBFL1(UCBREG),UCBPST .  IS POST UP                    I
         BZ    CCH103 .                 NO, DO NOT PUT ERPIB IN THE LST
         LH    WKREG1,UCBCHA(UCBREG) .  GET UNIT ADDRESS          19E03
         N     WKREG1,MPADRMSK .        AND OUT UNWANTED          19E03
         CR    WKREG1,UAREG .           DOES TROUBLE DEV. EQ UCB  19E03
         BNE   CCH103 .                 NO,DO NOT STORE ERPIB     19E03
         MVC   ZERO(ERPIBSZ,IBREG),IBWORK .ERPIB TO ERPIB LIST
CCH103   TM    IBEXCSW1,CCHUSV .        IS THE UNIT STATUS VALID
         BO    CCH104 .                 YES, GO TO RESTORE REGISTERS
         SPACE 1
         TM    CCHSW2,SYSTERM .    IS SYSTERM TERMINATING         19032
         BO    CCH104 .                 YES,BRANCH. DO NOT CHANGE     I
*                                       CSW STATUS. MISLEADING,IF DO  I
*                                       SYSTEM IS GOING DOWN          I
         SPACE 1
         MVI   CSWLOC+FOUR,ZERO .  ZERO STATUS ACCORDING TO           I
*                                       CONVERSATION OF 3-12-69       I
***********************************************************************
         SPACE 1
CCH104   LM    WKREG1,WKREG3,CCHKEEP .  RESTORE WORK REGISTERS
         BR    LINKRG2 .                RETURN VIA LINK REGISTER
         SPACE 1
         TITLE 'CONSTANTS -- IGFCATAP'
*****    GENERAL
*
         DS    0H
.*   THE FOLLOWING DOWN TO THE END OF CHRADTAB ARE POSITION
.*   DEPENDENT. DO NOT ALTER THEM WITHOUT ALTERING IGFCCHIN
         CNOP  6,8
NSCLOCK  DC    X'00' .             NS CLOCK SUPPORTED SWITCH      19E03
         DC    X'00' .             SPARE                          19E03
MODID    DC    1D'0' .             STORE CPU ID FIELD             19E03
RESIZE   DC    1F'0' .            MAX RECORD SIZE-STORED AT INIT  19032
ADRPTRTB DC    1F'0' .             PARAMETER TABLE ADDRESS        19032
CHRADTAB DC    7F'0' .             CHANNEL ROUTINE ADDRESS TABLE  19032
         AIF   (&GTSVNSP NE 1).CNSKIP                             19032
         DC    9F'0' .             EXTENSION OF ADDRESS TABLE     19E03
.CNSKIP  ANOP                                                     19032
         DC    X'FF' .                                            19032
IBWORK   DS    0D .                     IRPIB WORK AREA
IBUCB    DS    CL4 .                    UCB FIELD
IBPRGFG1 DS    CL1 .                    1ST PROGRAM CONTROLLED SWITCHES
IBPRGFG2 DS    CL1 .                    2ND PROGRAM CONTROLLED SWITCHES
IBEXCSW1 DS    CL1 .                    1ST EXTENDED CSW BYTE
IBEXCSW2 DS    CL1 .                    2ND EXTENDED CSW BYTE
CCHSWS   DS    0CL2 .              INTERNAL CCH SWITCHES          19032
CCHSW1   DS    CL1 .               BYTE ONE                       19032
CCHSW2   DC    X'00' .             BYTE TWO                       19032
RECBYTE  DS    1C .                RECORD BYTE                    19032
ERPIBFD  DC    5D'0' .                  5 ERPIB'S DEFINED
         DC    X'FF' .                  END OF ERPIB TABLE
         AIF   (&MSCATAP NE 1).PREFSKP
APREFIX2 DC    A(PREFIX2) .             LOC OF ADDR OF OTHER PREF 19E03
.PREFSKP ANOP
CCHWORK  DS    F .                      WORK AREA FOR CCH
CCHKEEP  DS    4F .                SAVE AREA FOR CCH SUBROUTINES     MP
TDADJ    DC    X'3A3F0000' .       PSEUDO CLOCK CORRECTION FACTOR 19032
TD24HRS  DC    X'C5C10000' .       PSEUDO CLOCK CORRECTION FACTOR 19032
CCHSAVE  DS    11F .                    REGISTER
SWKRG2   DS    4F .                          SAVE AREA
CCHMASK1 DC    X'0000FFFF'
CCHMASK4 DC    X'00FFFF00' .       MASK FOR ADDRESS CHECK         19032
CCHPARBT DS    X .                      PARITY CHECK BYTE
IGFCCH   DC    X'00' .                  MODEL NUMBER SUPPLIED BY NIP
RECORDID DC    X'2000' .           RECORD ENTRY KEY ID FIELD      19032
RECMACH  DS    X
         DC    C'I'
         DC    X'0000' .               INBOARD INDICATOR
         AIF   (&MSCATAP NE 1).CONSKIP
ACHAN0   DC    A(CHAN0) .    LOCAATION OF ADDR OF CHAN TABLE IN PREFIX
ACPUID   DC    A(CPUID)                                             CSC
ACPUSTAT DC    A(CPUSTAT) .       ADDR OF CPU STATUS BYTE           CSC
AMCHCK   DC    A(MCNEWPSW) .  ADDR OF DISABLED PSW TO START OTHER CPU
TIMELOC  DC    A(PREFTMRA) .      ADDR OF INDX TO PSA W/ACTIVE TIMER SC
.CONSKIP ANOP
CCHSIRB  DC    A(SIRB) .               ADDRESS OF SYSTEM IRB
MPADRMSK DC    X'00003FFF' .            UNIT ADDRESS MASK         19E03
         DS    0F .
MAINT    DC    50C'M' .     MAINTAINENCE AREA
         SPACE 2
         EJECT
*                     COMMUNICATIONS VECTOR TABLE FORMAT
         SPACE 2
CVTDSECT DSECT  .
         CVT
         SPACE 4
*                       RECORD ENTRY FORMAT
         SPACE 2
RECENTRY DSECT  .
COUNT    DS    CL8 .               COUNT FIELD                    19032
RECIDFD  DS    CL2 .               KEY                            19032
RECSWCH1 DS    CL1 .              SWITCH BYTE 1                   19032
RECSWCH  DS    CL1 .              SWITCH BYTE 2                   19032
SPARE    DS    CL4 .               RESERVED                       19E03
DATE     DS    CL4 .               DATE FIELD                     19032
TIME     DS    CL4 .               TIME FIELD                     19032
CPUIDFD  DS    CL8 .               CPU ID AND SERIAL NUMBER       19E03
JOBID    DS    CL8 .               JOB ID FIELD                   19032
ACTIO    DS    CL16 .              ACTIVE I/O UNITS               19032
CCW      DS    CL8 .               FAILING CCW                    19032
CSWLWB   DS    CL8 .               CHANNEL STATUS WORD            19032
ERPIB    DS    CL4 .               ERPIB FIELD-SECOND HALF        19032
DEVTYPE  DS    CL4 .              DEVICETYPE FIELD                19032
CUA      DS    0CL4 .              CHANNEL UNIT ADDRESS FIELD     19032
CHANID   DS    CL1 .               CHANNEL TYPE                   19032
CUAA     DS    CL3 .               ACTUAL ADDRESS                 19032
MPINFO   DS    CL2 .               MULTIPROCESSING INFO           19032
CHANSTAT DS    CL2 .               MP CHANNEL STATUS BYTE         19032
CHNLOG   DS    CL24 .              CHANNEL LOG                    19032
*                                                                 19032
****     CHANNEL CHECK POINTER TABLE FORMAT                       19032
CCHPTTAB DSECT                                                    19032
EBFLD    DS    CL4 .               ERPIB TABLE ADDRESS            19032
RECORD   DS    0CL4 .              RECORD ENTRY TABLE ADDRESS     19032
CCHREFG  DS    CL1 .               RECORD ENTRY FLAG              19032
RECADR   DS    CL3 .                                              19032
CCHEP    DS    F .                      BASE ENTRY VALUE          19E03
CCHANTAB DS    F .                      CCH CHANNEL PT TABLE      19E03
CCHLOG80 DS    F .                      CCH 2880 LOGOUT POINTER   19E03
*
*        END OF DSECT'S
         MEND
