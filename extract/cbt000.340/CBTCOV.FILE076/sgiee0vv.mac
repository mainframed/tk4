         MACRO
         SGIEE0VV &CCA1,&CCN1,&CCV1,&CCA2,&CCN2,&CCV2,&CCA3,           C
               &JUCB,&PUCB,&LCLS,&LCTR,&SMF                       19018
.*
.*   THIS IS A MASTER SCHEDULER GROUP 0 SYSGEN MACRO WHICH GENERATES
.*      THE MASTER SCHEDULER IPL(INITIALIZATION) ROUTINE
.*
.*   THE MACRO PARAMETERS ARE LISTED BELOW WITH THEIR RESPECTIVE
.*      MEANINGS
.*            .&CCA1 - START READER ADDRESS
.*            .&CCN1 - DATA SET NAME OF READER
.*            .&CCV1 - VOLUME SERIAL OF READER
.*            .&CCA2 - START WRITER ADDRESS
.*            .&CCN2 - DATA SET NAME OF WRITER
.*            .&CCV2 - VOLUME SERIAL OF WRITER
.*            .&CCA3 - START INITIATOR NAME
.*            .&JUCB - UCB NAME FOR JOB QUEUE
.*            .&PUCB - UCB NAME FOR PROC LIB
.*                .&LCLS - LOG CLASSNAME
.*                .&LCTR - LOG CHAIN COUNTER
.*                .&SMF - SMF SYSGEN OPTION PARAMETER             19018
.*
*
         TITLE 'MASTER SCHEDULER INITIALIZATION'
IEFSD569 CSECT
* C 715000                                                      SA72373
* A 292710  C 293000                                             A56096
* A 331050-331110,331250,579544                                  A52614
* 487000,488000                                                   M0046
* A  499500,585060                                               A42562
* 274000-277000,278000-281000,292800,293000,293500,488000,657000  21374
*                                                                A38130
*                                                                A31300
*                                                                A31769
*                                                                A27654
*                                                                A31761
* 091000,169550-169600,169800-169900,293000-294000,300000-306000,  I250
* 267000                                                         A31202
* 330700-330730                                                   M5381
* 321000-324000,576000                                             I250
* 114240                                                          M4355
* 170400-173000                                                  A21606
* 222000                                                         A24273
*0148                                                             20135
*3052  170000                                                     19821
*1793076000-077000,101000-103000,272000,320000,323000,330000       OC43
*1793343900,346300,348100,351100,356700,446630,455000,517000       OC43
*1793530000-531000,536000,563000,615000                            OC43
* 114090-114180,178000,223000-224000,247000,254000,257000,312000,  IMCS
* 316000-318000,443000,524000,568000-569000,569400,608000,646000,  IMCS
* 657000,668000                                                    IMCS
* 329000-334000,335500,624000-625000                              20071
* 579420                                                          M3230
* 330460,332350-332380,332950-333040,333730,333820                M1866
***********************************************************************
*
*   NAME      .IEFSD569
*
*   FUNCTION  .INITIALIZE FOR PARTITION DESCRIPTION AND INTERPRETER
*
*   BASIC FLOW.SETUP FOR JOB QUEUE AND PROC LIB TO RESIDE ON
*              SYSTEM RESIDENCE
*             .INITIALIZE AND POST COMMUNICATION TASK
*             .REQUEST AND EFFECT PARTITION CHANGES
*             .CHECK FOR SYSGEN OVERRIDES
*             .CHECK FOR CONSOLE OVERRIDES
*             .CATALOG SYS1.PROCLIB
*             .CREATE TIOT
*             .INITIALIZE QUEUE
*             .INITIALIZE ATTRIBUTES FOR TAPE AND DIRECT ACCESS DEVICES
*             .PRINT AND EXECUTE ANY CANNED COMMANDS FOR READER AND
*              WRITER
*             .IN SYSTEMS WITH TOD CLOCK, GET SET PARAMETERS      20071
*              FROM THE CONSOLE,                                  20071
*              ISSUE INTERNAL SET COMMAND,                        20071
*              WAIT FOR SUCCESSFUL SETTING OF TOD CLOCK           20071
*
*   ENTRY     .FROM DISPATCHER UNDER MASTER SCHEDULER TASK
*
*   EXIT      .TO DISPATCHER
*
*   TABLES    .COMMUNICATION VECTOR TABLE (CVT)
*
*   MACROS    .IEEBASEA - RESIDENT CORE MAP
*             .IEFUCBOB - UCB ENTRY MAP
*             .IEEXA    - EXTENDED SAVE AREA MAP
*             .IEEVTIOT - CREATE TIOT MACRO
*             .CVT      - CVT MAP
*
*   SUBMODULES.IEEDFIN1 - PARTITION INITIALIZATION
*             .IEECVCTI - COMMUNICATION TASK INITIALIZATION.
*              .IEEVLIN  -LOG INITIALIZATION                       XMCS
*             .IEFSQINT - JOB QUEUE FORMAT
*             .IEEVPRES - RESIDENT DEVICE MOUNT
*             .IEE0503D  - MASTER SCHEDULER MESSAGE ROUTINE
         AIF   ('&SMF' EQ '0').S10                                19018
*             .IEESMFIT - SMF INITIALIZATION                      19018
.S10     ANOP                                                     19018
*
*  ATTRIBUTES .NONREENTRANT
*             .CHARACTER DEPENDENCE-TYPE C
*
***********************************************************************
*
*SYMBOL        VALUE     RTN USED(BY LABEL)       FOR PURPOSE
*
R0       EQU   0
R1       EQU   1
R2       EQU   2         IP500,                             WORK
R3       EQU   3         IP700
R4       EQU   4
R5       EQU   5         IP100,IP300,IP400,IP500,IP700      WORK
R6       EQU   6         IP400,IP700,                       WORK
R7       EQU   7         IP400                              WORK
R8       EQU   8         ALL                                       OC43
R9       EQU   9         IP300,IP400,IP600,IP700  RETURN REGISTER  OC43
R10      EQU   10        ALL                      VTIOT BASE
R11      EQU   11        ALL                      RESIDENT CORE BASE
R12      EQU   12        ALL                      CVT BASE
R13      EQU   13        ALL                      REGISTER SAVE POINTER
R14      EQU   14
R15      EQU   15
*
E0       EQU   0                                                  M2063
E1       EQU   1                                                  M2063
E2       EQU   2                                                  M2063
E3       EQU   3                                                  M2063
E4       EQU   4                                                  M2063
ESTAR    EQU   C'*'                                               M2063
*
E28      EQU   28                                                  I250
E80      EQU   80                                                 21374
EHEX00   EQU   X'00'                                               I250
TCBDEB   EQU   8
TCBTIO   EQU   12
TCBMSS   EQU   24                       BOUNDARY BOX DISPLACEMENT
PKEY     EQU   28                       PROTECT KEY DISPL.
TCBLLS   EQU   36
TCBIDF   EQU   112                     TCB ID FIELD
TCBTCB   EQU   116                      TCB LINK FIELD
TCBDAR   EQU   172                     TCB DAR RECURSION BITS     M4300
XC0      EQU   X'C0'                   DAR RECURSION BITS MASK    M4300
PIBPTR   EQU   124
CAT      EQU   100                 CATALOG INDICATOR
TWO      EQU   2                                                 A31761
THREE    EQU   3                                                 A31761
STATUS   EQU   76                      SVC 76                     20070
FOUR     EQU   4                                                 A31761
CODEDISP EQU   44       IP516                                    A31761
FOXZERO  EQU   240                                               A31761
*
***********************************************************************
***********************************************************************
*                                                                     *
*                               CONSTANTS USED BY TOD CLOCK       20071
*                               ROUTINE FOR OFFSETS,LENGTHS,ETC.  20071
K0       EQU   0                               **                 20071
K1       EQU   1                               **                 20071
K2       EQU   2                               **                 20071
K3       EQU   3                               **                 20071
K4       EQU   4                               **                 20071
K5       EQU   5                               **                 20071
K6       EQU   6                               **                 20071
K7       EQU   7                               **                 20071
K8       EQU   8                               **                 20071
K12      EQU   12                              **                 20071
K13      EQU   13                              **                 20071
K15      EQU   15                              **                 20071
K26      EQU   26                              **                 20071
K119     EQU   119                             **                 20071
BITS32   EQU   32                              **                 20071
HEX00    EQU   X'00'               MASK FOR COND CODE 0           20071
HEX03    EQU   X'03'               MASK FOR COND CODE 2           20071
HEXDD    EQU   X'DD'               MASK FOR NO SET, INTRN SET BITS20071
SIXTY    EQU   60                  FIRST YEAR OF TOD CLOCK        20071
BLANK    EQU   C' '                BLANK CHARACTER                20071
DOT      EQU   C'.'                'DOT' CHARACTER                20071
QUOTE    EQU   C''''               'QUOTE' CHARACTER              20071
***********************************************************************
*
***********************************************************************
*              INITIALIZE SYSTEM TO SYSTEM RESIDENCE
*                UCB POINTERS LOCATED VIA CVT
***********************************************************************
         BALR  R8,0                    SET PROGRAM BASE            OC43
         USING *,R8                                                OC43
         STM   R9,R13,PARMSAVE         SAVE PARMS PASSED BY NIP    OC43
         B     IP001
         DC    X'EEEE'
         DC    CL8'IEFSD569'
         DC    X'02181969'
         DC    X'EEEE'
         SPACE
**********************************************************************
         SPACE
IP001    DS    0H
         L     R12,CVTPTR
         USING CVT,R12
         L     R11,CVTTCBP             GET PTR TO DOUBLE TCB'S     LMCS
*                                       1ST=NEXT, 2ND=CURRENT
         L     R11,4(R11)              LOAD PTR TO CURRENT-MSTR    LMCS
*                                                                 M4300
*  THE FOLLOWING TEST DETERMINES WHETHER IEFSD569 WAS ENTERED BY  M4300
*  DAMAGE ASSESSMENT ROUTINE (DAR).  IF ENTRY WAS BY DAR (THE DAR M4300
*  RECURSION BITS IN THE TCB WILL BE ON) THE MASTER TASK ABENDED  M4300
*  DURING INITIALIZATION AND THE WTO WILL BE ISSUED.  A WAIT ON   M4300
*  A LOCAL ECB THAT WILL NEVER BE POSTED IS THEN DONE BECAUSE A   M4300
*  RE-IPL IS NECESSARY                                            M4300
*                                                                 M4300
         TM    TCBDAR(R11),XC0         DAR RECURSION BITS ON-     M4300
         BZ    NOABEND            NO-CONTINUE NORMAL EXECUTION    M4300
         SPACE
*        THE FOLLOWING LINE IS CHANGED FOR PTM 4355               M4355
         WTO   'IEE395W MASTER SCHEDULER INITIALIZATION FAILED - RE-IPLX
               ',ROUTCDE=(1),DESC=(1)                             M4300
         SPACE
         LA    R13,IPREGSV         GET ADDRESS FOR SECOND BASE    20071
         USING IPREGSV,R13         ESTAB ADDRESSABILITY           20071
         WAIT  ECB=LECB                                           M4300
         DROP  R13                                                20071
         SPACE
NOABEND  EQU   *                                                  M4300
         L     R5,TCBMSS(R11)      MASTER BBOX                      LCS
         L     R11,CVTMSER         MASTER REGION                    LCS
         USING BASE,R11                                             LCS
         MVC   BALCSBND(4),8(R5)  HIGH BOUND H0 / LOW BOUND H1      LCS
         TM    0(R5),X'01'         LCS IN SYSTEM                    LCS
         BZ    IP0015                                               LCS
         OI    BASFL2,BALCS        SET LCS INDICATER                LCS
IP0015   EQU   *                                                    LCS
       GETMAIN  R,SP=255,LV=72
         LR    R5,R1
         LR    R13,R1                   STANDARD SAVE PTR
*                                 CONSOLE INITIALIZATION
       LINK  EP=IEECVCTI
*
         LR    R1,R5
*
     FREEMAIN  R,SP=255,LV=72,A=(1)
*
         SR    R0,R0
         LA    R1,BAIPL
         POST  (1),(0)                 POST COMMUNICATIONS TASK
*
**********************************************************************
*                            CONTINUE HERE AFTER INITIALIZATION.
IP100    EQU   *
         SPACE
         LA    R13,IPREGSV
         USING IPREGSV,R13   DO NOT DELETE THIS INSTRUCTION.IT    20071
*                             ESTABLISHES ADDRESSABILITY FOR ALL  20071
*                             THE CONST ANTS FOLLOWING 'IPREGSV'. 20071
*                             'IPREGSV' MUST BE WITHIN THE FIRST  20071
*                             1000 HEX BYTES OF THE MODULE, SO IF 20071
*                             CODE IS ADDED BETWEEN HERE AND THAT 20071
*                             LABEL, BEWARE.                      20071
         L     R12,CVTPTR              CVT BASE
*                                IEFJOB APPENDAGE PTR.
        L     R1,CVTJOB
         MVC   80(4,R1),CVTXAPG
*                                      DATE SIGN-CODE.
         LA    R1,15                   'F' FOR SIGN.
         ST    R1,CVTDATE
*
         L     R11,CVTMSER             MASTER RESIDENT CORE BASE
         XC    BAIPL,BAIPL             CLEARED FOR SET COMMAND.
         NI    BASFL,255-BAIN          AND CLEAR IPL SWITCH
         XC    BAQ(8),BAQ     JOBQE AND PROCLIB UCB POINTERS ZERO
*
IP300    EQU   *
*              ISSUE REQUEST FOR CHANGE OF PARTITIONS STRUCTURE,
*        LISTING OF PARTITIONS AND INTENTION FOR LATER DYNAMIC
*        PARTITION CHANES
         CLI   DYNDEF,0           IS THIS THE SECOND PASS?  IF SO,
*                                 PARTITIONS ARE ALREADY DESRIBED.
         BE    IP302              BR YES.
         MVI   BADEFINE,0         ZERO ALL DEFINE SWITCHES
*                                  THIS TCB SCAN IS DONE BEFORE    I250
*                                  PARTITIONS CAN BE CHANGED       I250
         XR    R1,R1               CLEAR TO HOLD INDEX IN TCB TAB  I250
         XR    R3,R3               FOR INDEX AFTER LAST SYSGENED   I250
         IC    R3,CVTSYST          NO OF SYSGENED TCB'S            I250
         SLL   R3,E2               CONVERT TO TABLE INDEX          I250
IP300A   L     R5,CVTTAT-E1        GET ADDR OF TCB TABLE           I250
         L     R5,E0(R1,R5)        LOAD PTR TO TCB                 I250
         CLI   E28(R5),EHEX00      PROTECTION KEY                  I250
         BE    IP300B             BR-NO                           19821
         OI    BADEFINE,BAPFK     INDICATE SYSTEM PROTECTED       19821
         B     IP300C             CONTINUE MAINLINE               19821
IP300B   LA    R1,E4(R1)           INCR INDEX IN TCB TABLE         I250
         CR    R1,R3               EQUAL, IF AFTER LAST            I250
         BNE   IP300A              GET TCB FOR NEXT PARTITION      I250
IP300C   EQU   *                                                 A21606
         XC    MY(4),MY           CLEAR FOUR INDICATORS
         MVI   REPLY,C' '          CLEAR
         MVC   REPLY+1(14),REPLY   REPLY AREA
         MVI   ECB,X'00'          CLEAR ECB
         LA    R1,PTNCHNG         READY FOR CHANGE PARTITIONS MSG XMCS
         WTOR  ,REPLY,15,ECB,MF=(E,(1))                            XMCS
         WAIT  ECB=ECB
SYNSCAN  EQU   *
         LA    R5,REPLY
         LR    R1,R5              SET TO CONVERT REPLY TO
         LA    R0,15              UPPER CASE
UPPER    OI    0(R1),C' '          BY ORING BLANKS
         LA    R1,1(R1)            TO REPLY
         BCT   R0,UPPER           BR IF MORE
SYNLOOP  CLC   0(3,R5),YES        YES?
         BNE   TRYNO              BR NO.
         XI    MY,X'FF'           TURN ON YES INDIC
         BZ    SYNER              ERROR IF ALREADY ON
         OI    BADEFINE,BACHANGE  INDICATE CHANGE REQUSTED
         LA    R5,3(R5)           PT TO NEXT CHARACTER
         B     DLIM
TRYNO    EQU   *
         CLC   0(2,R5),NO         NO?
         BNE   TRYLIST            IF NOT BR.
         XI    MN,X'FF'         TURN ON INDIC
         BZ    SYNER              ERROR IF ALREADY ON
         NI    BADEFINE,255-BACHANGE NO CHANGES DESIRED
         LA    R5,2(R5)           PT TO NEXT CHAR.
         B     DLIM
TRYLIST  EQU   *
         CLC   0(4,R5),LIST       LIST?
         BNE   TRYDYN             BR NOT EQ TO TRY FOR DYNDEF
         XI    ML,X'FF'           TURM ON INDIC
         BZ    SYNER              ERROR IF ENCOUNTERED BEFORE
         OI    BADEFINE,BALIST    INDIC LIST REQ.
        LA    R5,4(R5)            PT TO NEXT CHAR.
         B     DLIM
TRYDYN   EQU   *
         CLC   0(6,R5),DYNDEF     DYNAMIC DEF REQUEST?
         BNE   SYNER              NO, ERROR
         XI    MD,X'FF'           INDICATION ENCOUNTERED BEFORE
         BZ    SYNER              NO ERROR
         LA    R5,6(R5)
DLIM     EQU   *
         CLI   0(R5),C' '         BLANK?
         BE    ENDRPY              BR YES.
         CLI   0(R5),C','         COMMA?
         LA    R5,1(R5)           INCR TO NEXT CHARACTER
         BE    SYNLOOP
SYNER    EQU   *
         XC    MY(4),MY           CLEAR FOUR INDICATORS
         MVI   REPLY,C' '          CLEAR
         MVC   REPLY+1(14),REPLY   REPLY AREA
         MVI   ECB,X'00'          TURN OFF POST BIT
         NI    BADEFINE,X'01'     RESET SWITCHES                 A24273
         LA    R1,PTNERR          READY FOR PARAMETER ERROR MSG    XMCS
         WTOR  ,REPLY,15,ECB,MF=(E,(1))                            XMCS
         WAIT  ECB=ECB            WTOR & WAIT FOR REPLY
         B     SYNSCAN
ENDRPY   EQU   *
         OI    BADEFINE,BADYNDEF   INDICATE DYNAMIC DEFINITION REQ.
         LINK  EP=IEEDFIN1
         NI    BADEFINE,BADYNDEF+BAPFK  LEAVE ON PROTECT AND DYNAMIC
*                                 BITS IF ALREADY ON
         OI    BADEFINE,BAON+BASTP FUTURE DEFINES ARE NOT IPL TYPE AND
*                                  REQUIRE ADJACENT PARTITION CHECK.
IP302    EQU   *
*
***********************************************************************
*
*              WRITES READY MESSAGE TO OPERATOR, BRANCHES TO
*              COMMAND WRITE SUBROUTINE (IP700) WHICH RETURNS CONTROL
*              TO AWAIT POSTING FROM SET COMMAND
*              OR, IN SYSTEMS WITH TOD CLOCK SUPPORT, WRITES A    20071
*              MESSAGE TO THE OPERATOR TO WHICH HE MUST REPLY     20071
*              WITH SET PARAMETERS OR 'U', ISSUES AN INTERNAL SET 20071
*              COMMAND, AND WAITS FOR RETURN FROM SVC 34.         20071
*              ON RETURN FROM SVC 34, IF THE SET COMMAND IS IN-   20071
*              VALID, REISSUES THE WTOR ASKING FOR SET PARAMETERS.20071
*              NOTES.STOP AREA IS PRESET FOR NO STOPS=ALL N'S AND
*                    FLAG SET TO WTO ONLY ON ENTERING COMMAND WRITE
*                    SUBROUTINE
*                   .STOP AREA MADE AVAILABLE TO STOP COMMAND BEFORE
*                    AWAITING SET COMMAND
*
***********************************************************************
*
         LA    R1,RDYMSG          ADDRESS OF 'READY' MESSAGE       XMCS
         WTO   MF=(E,(1))                                          XMCS
*
***********************************************************************
*             ROUTINE CREATES TIOT BY GETMAIN FROM CORE SUBPOOL 255
*               AND MOVING THE MASTER TIOT ASSEMBLED WITHIN THE
*              IPL MODULE BY MACRO IEFVTIOT INTO THE GOTTEN CORE
***********************************************************************
         L     R0,CX108                108 BYTES OF SUBPOOL 255  LMCS
         AIF   ('&LCTR' EQ '0').SKIPLOG  IS LOG SPECIFIED - ZERO BUFS
*                                      OR NOLOG EXCLUDES LOG
         AL    R0,LOGTIOT              IF LOG ADD TIOT SPACE     LMCS
         MVC   BALOG+2(2),IPLCS        SAVE OPTIONS FOR LOG INITIAL LM
.SKIPLOG ANOP
         AIF   ('&SMF' EQ '0').S0      IS SMF PRESENT-            19018
         AL    R0,SMFTIOT              ADD SMF TIOT SIZE          19018
.S0      ANOP                                                     19018
         GETMAIN R,LV=(0)
         LA    R10,VTIOT
         MVC   0(108,R1),0(R10)        MOVE TIOT INTO GOTTEN CORE LMCS
         LR    R10,R1                  SETUP TIOT BASE
         USING VTIOT,R10
         L     R2,CVTTCBP              LOCATE TCB
         L     R2,4(R2)
         ST    R10,TCBTIO(R2)          STORE TIOT PTR IN TCB
         DROP  R10                                               A31202
         AIF   ('&CCA1' NE '').CANCMD
         AIF   ('&CCA2' NE '').CANCMD
         AIF   ('&CCA3' EQ '').NOCAN
.CANCMD  ANOP
         CLI   DYNDEF,X'00'        PARTITIONS ALREADY DESCRIBED
         BE    AOKAY               YES. PROCESS AUTOS
         LA    R7,CCBGN POINT AT FIRST AUTO BUFFER
         AIF   ('&CCA2' EQ '').NOWTR  TEST WTR
         LA    R5,WTRCAN               SUBJECT CANNED COMMAND
         LA    R6,128                  SET RESIDENT WTR SCAN
         BAL   R9,TCBSCAN              SCAN FOR WRITERS            OC43
.NOWTR   AIF   ('&CCA1' EQ '').NORDR  TEST RDR
         LA    R6,64              SET FOR RESIDENT RDR SCAN       21374
         LA    R5,RDRCAN          SUBJECT CANNED COMMAND          21374
         BAL   R9,TCBSCAN         SCAN FOR RESIDENT RDR PART.     21374
.NORDR   ANOP
         B     AOKAY              MSGS ARE ALL HANDLED            21374
*              THE TCBS WILL BE SCANNED FOR A RESIDENT WTR & RDR.  IF
*        FOUND THE AUTOMATIC COMMAND FOR START WILL BE DIRECTED TO THE
*        TCB'S PARTITION.  OTHERWISE THE AUTOMATIC COMMAND FOR    21374
*        THE SYSTEM OUTPUT WRITER WILL BE PREVENTED FROM          21374
*        ENTERING THE SYSTEM ; WHILE THE SYSTEM-ASSIGNED          21374
*        TRANSIENT READER WILL BE STARTED IF NO DEDICATED         21374
*       READER PARTITION WAS FOUND.                               21374
*        THE IPL ROUTINE SHOULD NOT TRY TO ANTICIPATE             21374
*        THE USER'S WTR PARTITION IF IN FACT HE                   21374
*        SPECIFIES NO DEDICATED WTR PARTITION.                    21374
TCBSCAN  EQU   *                                                   I250
         XR    R0,R0               CLEAR TO HOLD ID OF P0          I250
         L     R2,CVTTAT-E1        GET ADDR OF TCB TABLE           I250
         L     R2,E0(E0,R2)        GET PTR TO TCB FOR P0           I250
         IC    R0,TCBIDF(R2)       SAVE ID OF P0                   I250
         XR    R4,R4               CLEAR TO HOLD INDEX IN TCB TAB  I250
RESCAN   EQU   *                                                   I250
         SR    R3,R3              CLEAR REG                      A56096
         IC    R3,CVTSYST          GET # OF GENED PARTITIONS     A38130
         SLL   R3,E2               INCREMENT TO END OF TABLE     A38130
         CLR   R4,R3               LAST SYSGENED PARTITION ?      21374
HIGH     EQU   2                                                   I250
         BNL   CHKIFRDR           NO PARTITION FOUND-BRANCH      A56096
         L     R2,CVTTAT-E1        GET ADDR OF TCB TABLE           I250
         L     R2,E0(R4,R2)        GET PTR TO NEXT TCB             I250
         LTR   R2,R2               FLAG AFTER LAST MAKES PTR NEG   I250
LOW      EQU   4                                                   I250
         BC    LOW,CHKIFRDR        NO PARTITION FOUND - BRANCH    21374
         LA    R4,E4(E0,R4)        INCREMENT INDEX FOR NEXT TRY    I250
         LA    R3,PIBPTR(R2)      PTR TO PIB AND TYPE
         NC    MASK(1),0(R3)           SET UP COMPARE BY DISCARDING
*                                      LOW 6 BITS
         EX    R6,CMPTYPE              COMPARE FOR TYPE
         MVC   MASK(1),MASK+1          RESET MASK
         BNE   RESCAN              CHECK NEXT TCB                  I250
         XR    R1,R1                                               I250
         IC    R1,TCBIDF(R2)                                       I250
         SR    R1,R0               SUBTRACT ID OF P0 TO GET        I250
*                                  PARTITION NO                    I250
         SR    R0,R0                                               I250
         CVD   R1,CONVERT         CONVERT PARTITION NUMBER AND
         OI    CONVERT+7,X'0F'     SET LOWDIGITS ZONE
         UNPK  CONVERT(2),CONVERT+6(2)
         CLI   CONVERT,C'0'       ONE DIGIT
         BE    ONE
         MVC   15(2,R5),CONVERT   MOVE IN PARTITION NUMBER         WMCS
         MVC   0(80,R7),0(R5)     PACK COMMAND
         B     DOWN
ONE      EQU   *
         MVC   15(1,R5),CONVERT+1 MOVE IN ONE DIGIT PARTITION NO   WMCS
         MVC   0(16,R7),0(R5)     MOVE IN UP TO PARTITION NUMBER   WMCS
         MVC   16(63,R7),17(R5)   MOVE IN REST OF COMMAND          WMCS
DOWN     LA    R7,80(R7)               INCR TO NEXT OPEN SLOT
         C     R6,RDRPART         WAS THE SEARCH FOR A RDR PART.  21374
         BE    FORRDR             BRANCH IF FOR RDR PARTITION     21374
         BR    R9                 SEARCH FOR WTR PART. - RETURN   21374
FORRDR   EQU   *                                                  21374
*      FOUND RDR PARTITION. MAKE SURE NEXT BUFFER (SYSTEM RDR)    21374
*      IS MARKED FOR NO WTO/MGCR                                  21374
         MVI   E0(R7),X'40'       MARK THIS BUFFER AS NO WTO/MGCR 21374
         LA    R7,E80(R7)         INCREMENT TO NEXT BUFFER        21374
         BR    R9                 RETURN                          21374
*                                                                 21374
*  END OF TCB TABLE REACHED - IF WE WERE LOOKING FOR RESIDENT WTR 21374
*  RETURN. IF IT WAS FOR A RESIDENT RDR THEN THE SYSTEM ASSIGNED  21374
*  RDR WILL BECOME THE AUTO START COMMAND FOR THE READER.         21374
*                                                                 21374
CHKIFRDR C     R6,RDRPART         WAS SEARCH FOR RESIDENT RDR     21374
         BE    NORDRPRT           BRANCH IF YES                   21374
         MVI   E0(R7),X'40'       DON'T WTO/MGCR WTR COMMAND      21374
         LA    R7,E80(R7)         INCREMENT TO NEXT BUFFER        21374
         BR    R9                 RETURN                          21374
NORDRPRT EQU   *                                                  21374
         AIF   ('&CCA1' EQ '').SKIPRDR                            21374
         MVI   E0(R7),X'40'       MAKE SURE THIS BUFFER IS        21374
*                                 NOT USED FOR WTO/MGCR           21374
         LA    R7,E80(R7)         INCREMENT TO NEXT BUFFER        21374
         MVC   E0(E80,R7),SYSRDR  NO RESID. RDR PART - USE SYSTEM 21374
*                                 ASSIGNED RDR AS AUTO START      21374
*                                 RDR COMMAND                     21374
         LA    R7,E80(R7)         INCREMENT TO NEXT BUFFER        21374
.SKIPRDR ANOP                                                     21374
         BR    R9                      RETURN                     21374
CMPTYPE  CLI   MASK,X'00'              EX FOR T YPE COMPARE
MASK     DC    X'C0C0'                 MASK FOR PART. TYPE COMPARE
AOKAY    EQU   *
.NOCAN   ANOP
         MVI   DYNDEF,X'00'        INDICATE PARTITIONS DESCRIBED SO
*                                  ERROR CAUSING SECOND PASS WILL NOT
*                                  RESULT IN REDISCRIBING THEM
         MVI   CB1,X'00'               FLAG-00=WTO ONLY-NO MGCR
         LA    R9,IP308                SET WRITE COMMAND RETURN    OC43
         B     IP700                   GO WRITE COMMANDS
*
IP308    LA    R5,CB8                   PT TO STOP INDICATOR AREA
         ST    R5,BACV                  BEFORE WAIT
TODRTN   EQU   *                                                  20071
***********************************************************************
*                                                                     *
*       THIS ROUTINE HANDLES TOD CLOCK SUPPORT                    20071
*                                                                     *
* 1. STCK IS ISSUED TO DETERMINE THE STATE OF THE TOD CLOCK-      20071
*         CONDITION CODE 0 = CLOCK SET                            20071
*         CONDITION CODE 1 = CLOCK NOT SET                        20071
*         CONDITION CODE 2 = CLOCK IN ERROR STATE                 20071
* 2. IF CC=0, THE TOD VALUE IS CONVERTED TO DECIMAL AND MESSAGE   20071
*    IEE114A IS ISSUED.  THE OPERATOR CAN REPLY WITH ANY VALID    20071
*    SET PARAMETERS OR 'U'.                                       20071
* 3. IF CC=1 OR 2,MESSAGE IEE116A IS ISSUED. THE OPERATOR CAN     20071
*    REPLY WITH ANY VALID SET PARAMETERS,BUT HE MUST INCLUDE AT   20071
*    LEAST DATE.                                                  20071
* 4. AN INTERNAL SET COMMAND IS BUILT USING THE OPERATOR'S PARAM- 20071
*    ETERS AND/OR TOD VALUES, AND SVC 34 IS ISSUED.(MGCR)         20071
* 5. ON RETURN FROM SVC 34, IF THE SET COMMAND IS INVALID, THE    20071
*    ORIGINAL MESSAGE WILL BE REPEATED UNTIL A VALID COMMAND IS   20071
*    RECEIVED.                                                    20071
* 6. THE ' NO IPL ' BIT IS TURNED OFF.                            20071
***********************************************************************
         NI    BASFL,HEXDD         TURN OFF NO SET, INTRN SET BITS20071
         TM    CVTOPTB,CVTTOD      IS TOD SUPPORTED               20071
         BZ    NOTOD               NO, BRANCH AROUND TOD CODE     20071
         STCK  TIMEAREA            READ THE TOD VALUE             20071
         BZ    CCZERO              IF CC IS 0, GO TO CONVERT RTN  20071
         BC    K4,CCONE            IF CC IS 1, SET BITS TO X'01'  20071
         OI    CCBITS,HEX03        CC IS 2, SET BITS TO X'11'     20071
         B     TODWTOR1            GO SET UP FOR WTOR             20071
CCONE    EQU   *                                                  20071
         OI    CCBITS,BA7          SET BIT TO 1 FOR CC=1          20071
TODWTOR1 EQU   *                                                  20071
         TM    CCBITS,HEX03        WAS CC=0 (CLOCK IS SET WITH    M1866
*                                  YEAR 2000 OR MORE)             M1866
         BZ    CCONE               CHANGE CCBITS TO CC=1          M1866
         LA    R1,TODMSG1          PUT MSG ADDR IN REG1 FOR WTOR  20071
         B     SETWTOR             GO SET UP FOR WTOR,TOD INVALID 20071
CCZERO   EQU   *                                                  20071
         NI    CCBITS,HEX00        INDICATE CC=0 (BITS=00)        20071
***********************************************************************
*                                                                     *
*                 TOD CLOCK CONVERSION ROUTINE                    20071
*                                                                     *
***********************************************************************
* NOTES-                                                          20071
*                                                                     *
*    THE TOD CLOCK IS A DOUBLE WORD WHOSE HIGH-ORDER WORD IS      20071
*    VALID TO 1.048576 MICRO SECONDS.  TO CALCULATE THE EXACT     20071
*    NUMBER OF SECONDS, THE NUMBER OF MICRO SECONDS IN THE HIGH   20071
*    ORDER WORD IS MULTIPLIED BY 16384 AND DIVIDED BY 15625. THIS 20071
*    IS THE SAME AS MULIIPLYING BY 1.048576, BUT ELIMINATES THE   20071
*    DECIMAL POINT.                                               20071
*    THE CONSTANTS, 16384 AND 15625 ARE ALSO USED BY IEE6503D,    20071
*    AND THERE WILL BE A TIME DISCREPANCY IF THEY ARE UPDATED IN  20071
*    ONE MODULE AND NOT THE OTHER.                                20071
*    THE TOD CLOCK STARTS AT JAN 1,1960 AND RUNS FOR 142 YEARS.   20071
*    HOWEVER, THIS ROUTINE DOES NOT RECOGNIZE ANY YEAR OVER 1999  20071
*    AS VALID. ANY YEAR GREATER THAN 1999 WILL BE TREATED AS IF   M1866
*    THE CONDITION CODE FROM THE STORE CLOCK(STCK) HAD BEEN = 1.  M1866
***********************************************************************
CONVERT1 EQU   *                                                  20071
         L     R7,TIMEAREA         LOAD HIGH ORDER WORD OF TOD    20071
*                                  CLOCK-VALID TO 1.048576 MIC SEC20071
         CL    R7,YR2000           IS TOD GT JAN 1,2000           M5381
         BNL   TODWTOR1            YES,ERROR. TOD INVALID         M5381
         M     R6,D16384           TOD VALUE MULT BY DEC 16384    20071
         D     R6,D15625           DIVIDE BY DECIMAL 15625 FOR    20071
*                                  NUMBER OF SECONDS IN TOD CLOCK 20071
         XR    R6,R6               CLEAR REMAINDER REG            20071
         D     R6,D86400           DIV BY SEC PER DAY TO GET DAYS 20071
         LR    R4,R6               SAVE CONTENTS-REM=HH.MM.SS     20071
         C     R7,D366             IS NO. DAYS LESS THAN 366      20071
         BL    LOWYEAR             YES. YEAR IS 1960              20071
         S     R7,D366             SUBTRACT 366 FROM NO. DAYS     20071
         XR    R6,R6               ZERO REMAINDER REG             20071
         D     R6,D1461            DIV NO.DAYS LEFT BY NO.DAYS    20071
*                                  IN 4 YEARS- COUNTS LEAP YEAR   20071
         LR    R5,R7               SAVE NO. 4 YEAR BLOCKS         20071
         C     R6,D1460            CK FOR LAST DAY OF LEAP YEAR  A52614
         BNE   NOTLAST             BRANCH IF NO                  A52614
         LA    R7,N3               SET QUOTIENT TO 3 YEARS       A52614
         L     R6,D365             SET REMAINDER TO 365 DAYS     A52614
         B     LASTDAY             GO TO FIGURE LAST DAY OF LEAP A52614
NOTLAST  EQU   *                                                 A52614
         SRDL  R6,BITS32           MOVE EVEN REG TO ODD REG       20071
         D     R6,D365             GET NO. YRS SINCE LEAP YEAR    20071
LASTDAY  EQU   *                                                 A52614
         LA    R7,SIXTY(R7)        ADD NO. YEARS SINCE LEAP YEAR  20071
*                                  TO 1960(FIRST YEAR OF CLOCK)   20071
         SLL   R5,K2               NO. OF YEARS = NO. OF FOUR     20071
*                                  YEAR BLOCKS TIMES FOUR         20071
         AR    R7,R5               ADD NO. OF 4 YEAR BLKS TO (60+ 20071
*                                  NO. OF YEARS SINCE LEAP YEAR   20071
*   NOTE- IT IS NECESSARY TO ADD 1,BECAUSE THE CLOCK STARTS AT 0  20071
*         ON JAN 1,1960, BUT WE REFER TO THAT DAY AS DAY 1.       20071
         LA    R7,K1(R7)           ADD ONE. TOTAL= CURRENT YEAR   20071
         LA    R6,K1(R6)           ADD ONE. TOTAL= CURRENT DAY    20071
         MH    R7,TEN              SET UP YEAR FOR CVD            20071
         CVD   R7,DOUBLE           MAKE YEAR PACKED DECIMAL       20071
         UNPK  YDATE(K3),DOUBLE+K6(K2)  UNPACK YEAR (YY)          20071
         MH    R6,TEN              SET UP FOR CVD                 20071
         CVD   R6,DOUBLE           MAKE DAY PACKED DECIMAL        20071
         B     SETDAY              GO PUT DDD IN BUFFER           20071
LOWYEAR  EQU   *                                                  20071
         MVC   YDATE(K2),D60       YEAR IS 1960                   20071
         LA    R7,K1(R7)           ADD ONE DAY FOR LEAP YEAR      20071
         MH    R7,TEN              SET UP DAY FOR CVD             20071
         CVD   R7,DOUBLE           MAKE DAY PACKED DECIMAL        20071
SETDAY   EQU   *                                                  20071
         UNPK  DDATE(K4),DOUBLE+K5(K3)  UNPACK DAY (DDD)          20071
         MVI   YDATE+K2,DOT         SET UP FOR COMMAND (YY.DDD)   20071
         LR    R7,R4                GET HOURS, MIN, SEC           20071
         XR    R6,R6                ZERO REMAINDER REG            20071
         D     R6,D3600             DIVIDE BY NO.SEC PER HOUR     20071
         MH    R7,TEN               SET UP HOURS FOR CVD          20071
         CVD   R7,DOUBLE            MAKE HOURS PACKED DECIMAL     20071
         UNPK  HTIME(K3),DOUBLE+K6(K2)  UNPACK HOURS (HH)         20071
         MVI   HTIME+K2,DOT         SET UP FOR COMMAND (HH.MM.SS) 20071
         SRDL  R6,BITS32            MOVE MIN AND SEC INTO ODD REG 20071
         XR    R6,R6                ZERO REMAINDER REG            20071
         D     R6,F60               DIVIDE BY NO. SEC PER MINUTE  20071
         MH    R7,TEN               SET UP MINUTES FOR CVD        20071
         CVD   R7,DOUBLE            MAKE MINUTES PACKED DECIMAL   20071
         UNPK  MTIME(K3),DOUBLE+K6(K2) UNPACK MINUTES (MM)        20071
         MVI   MTIME+K2,DOT         SET UP FOR COMMAND (HH.MM.SS) 20071
         MH    R6,TEN               SET UP SECONDS FOR CVD        20071
         CVD   R6,DOUBLE            MAKE SECONDS PACKED DECIMAL   20071
         UNPK  STIME(K3),DOUBLE+K6(K2)  UNPACK SECONDS (SS)       20071
TODWTOR2 EQU   *                                                  20071
         LA    R1,TODMSG2          GET ADDR OF WTOR MSG           20071
         MVC   MSGCHNG+K13(K6),YDATE PUT CURRENT TOD DATE IN MSG  20071
         MVC   MSGCHNG+K26(K8),HTIME PUT CURRENT TOD TIME IN MSG  20071
SETWTOR  EQU   *                                                  20071
         MVI   TODREPLY,BLANK      PUT BLANK IN FIRST BYTE        20071
         MVC   TODREPLY+K1(K119),TODREPLY  CLEAR REPLY AREA       20071
         MVI   TODECB,HEX00        CLEAR ECB FOR TOD MSG WTOR     20071
         WTOR  ,TODREPLY,120,TODECB,MF=(E,(1))   ISSUE WTOR       20071
         WAIT  ECB=TODECB          WAIT FOR OPERATOR'S REPLY      20071
         LA    R5,TODREPLY         GET ADDR OF REPLY              20071
         CLC   K0(K2,R5),U         YES. WAS REPLY 'U'             20071
         BNE   DATECHK             NO. SEE IF DATE WAS SPECIFIED  20071
         TM    CCBITS,HEX03        WAS YHE CC=0                   20071
         BNZ   SETUP               NO, GO ISSUE SET COMMAND       20071
         MVC   TODREPLY(K5),DATE   MOVE 'DATE=' INTO BUFFER       20071
         MVC   TODREPLY+K5(K6),YDATE  MOVE YY.DDD INTO BUFFER     20071
         B     NOSET               GO SET NO SET BIT              20071
DATECHK  EQU   *                                                  20071
         CLC   K0(K5,R5),DATE      WAS 'DATE=' SPECIFIED          20071
         BE    TIMECHK             YES. CHECK FOR 'CLOCK='        20071
         CLC   K0(K5,R5),LOWCASE1  WAS IT LOWER CASE 'DATE='      M1866
         BE    TIMECHK             YES. CHECK FOR 'CLOCK='        M1866
         LA    R5,K1(R5)           NO. POINT TO NEXT CHAR         20071
         CLI   K0(R5),BLANK        IS CHAR BLANK(END OF COMMAND)  20071
         BNE   DATECHK             NO. CHECK FOR 'DATE=' AGAIN    20071
         TM    CCBITS,HEX03        IS CC=0                        20071
         BNZ   SETUP               NO. ERROR. PASS CMND AS IS     20071
         MVC   K0(K6,R5),COMDATE   YES. ADD 'DATE=' TO PARAMS     20071
         MVC   K6(K6,R5),YDATE     DATE=TOD DATE FOR SET COMMAND  20071
         LA    R5,K1(R5)           ADD 1 SO REG POINTS TO 'DATE=' 20071
TIMECHK  EQU   *                                                  20071
         LR    R6,R5               SAVE POINTER TO 'DATE='        20071
         LA    R5,TODREPLY         POINT TO START OF REPLY        20071
TIMECHK2 EQU   *                                                  20071
         CLC   K0(K6,R5),CLOCK     WAS 'CLOCK=' SPECIFIED         20071
         BE    SETUP               'DATE=', 'CLOCK=' SPECIFIED    20071
         CLC   K0(K6,R5),LOWCASE2  WAS IT LOWER CASE 'CLOCK='     M1866
         BE    SETUP               YES. GO ISSUE COMMAND          M1866
         LA    R5,K1(R5)           POINT TO NEXT CHAR             20071
         CLI   K0(R5),BLANK        IS CHARACTER BLANK(END OF CMND)20071
         BNE   TIMECHK2            NO. CHECK FOR 'CLOCK='         20071
         LR    R1,R5               TEMP SAVE PTR TO COMMAND END   20071
         TM    CCBITS,HEX03        WHAT IS COND CODE FROM STCK    20071
         BZ    DATECHK2            CC=0. SEE IF TOD DATE=REPLY    20071
*                                  DATE. IF YES,TOD WONT BE SET   20071
         MVC   K0(K15,R5),COMCLOCK CC NOT 0- CLOCK=00.00.00       M1866
         B     SETUP               GO ISSUE SET COMMAND           20071
DATECHK2 EQU   *                                                  20071
         CLC   K5(K6,R6),YDATE     IS REPLY DATE=TOD DATE         20071
         BNE   SETUP               NO. GO ISSUE SET COMMAND       20071
NOSET    EQU   *                                                  20071
         OI    BASFL,BANOSET       TURN ON NO SET BIT             20071
SETUP    EQU   *                                                  20071
         XR    R0,R0               ZERO REG0- INDICATE SYSTEM     20071
*                                  COMMAND FOR SVC 34             20071
         OI    BASFL,BAINTSET      TURN ON INTERNAL SET BIT       20071
         XC    BAIPL,BAIPL         CLEAR RETURN CODE ECB          20071
         MGCR  TODBUF                                             20071
         CLI   BAIPL+K3,K8         WAS SET COMMAND OK (IF NOT,    20071
*                                  RET CODE PASSED IN ECB)        20071
         BE    IP308               NO.  CLOCK COULD NOT BE SET. GO20071
*                                  BACK AND REISSUE TOD MESSAGE   20071
         B     ENDIPL              SET COMMAND OK. IPL OVER       20071
NOTOD    EQU   *                                                  20071
         WAIT  ECB=BAIPL
ENDIPL   EQU   *                                                  20071
         OI    BASFL,BAIN          TURN ON 'NO IPL' BIT           20071
         EJECT
***********************************************************************
*
*  THE FOLLOWING DETERMINES THE LOCATION OF SYS1.SYSJOBQE AND
*  SYS1.PROCLIB AND VERIFIES THAT THE DATA SET EXISTS ON THE INDICATED
*  UNIT.
*
*  THE FOLLOWING POSSIBILITIES EXIST:
*
*      1) THE UNIT WAS SPECIFIED IN THE SET COMMAND
*            A)LOCATIONS BAQ AND/OR BAPRC WILL NOT BE ZERO
*      2) THE DATA SET IS CATALOGUED
*      3) SYSGEN VALUES ARE USED
*      4) THE IPL VOLUME CONTAINS THE DATA SET
*
*  THE FOLLOWING ERRORS ARE POSSIBLE:
*
*      1) THE VOLUME INDICATED BY THE CATALOGUE IS NOT MOUNTED
*      2) THE SELECTED VOLUME DOES NOT CONTAIN THE DATA SET
*
*  WHEN THE LOCATION OF SYS1.PROCLIB IS ASCERTAINED, THAT DATA SET WILL
*  BE RECATALOGUED
*
***********************************************************************
IP325    DS    0H
* GETMAIN AND SET UP WORKAREA FOR LOCATE AND OBTAIN MACROS
         GETMAIN R,LV=IPWKEND,SP=255
         LR    R4,R1               WORKAREA ADDRESS TO R4
         USING IPWKST,R4           ADDRESSABILTY
         MVI   DSNAREA,X'40'       BLANK DATA SET NAME AREA
         MVC   DSNAREA+1(43),DSNAREA
* SET UP PARAMETER LIST
         ST    R4,PARM4            ADDRESS OF WORKAREA
         LA    R1,DSNAREA          ADDRESS OF DATA SET NAME AREA
         ST    R1,PARM2
* SET UP TO VERIFY THE LOCATION OF SYS1.SYSJOBQE
         MVC   IP400WKR(6),BLNKS   BLANK WORK AREA
         MVC   DSNAREA(14),JOBQDSN JOBQ DATA SET NAME TO PARAMETER AREA
         TM    BAQ,X'FF'           UNIT NAME SPECIFIED ON SET COMMAND
*                                  FOR SYS1.SYSJOBQE
         BC    7,IP340             BRANCH IF Q UNITNAME SPECIFIED
         BAL   R9,IP350      IF NOT SPECIFIED IN SET COMMAND,      OC43
*                                  GO TO SEARCH CATALOG FOR DATA SET
* UPON RETURN, UCB ADDRESS OF THE UNIT CONTAINING JOBQ IS CONTAINED
* IN R1
IP327    DS    0H
         USING UCBOB,R6                                           *OCI9
         OI    SRTESTAT,SRTEPRES   SET VOLUME PERM. RES.          *OCI9
         ST    R6,BAQ              SAVE JOBQ UCB ADDRESS
* DETERMINE AND VERIFY THE LOCATION OF SYS1.PROCLIB
         MVC   IP400WKR(6),BLNKS   BLANK WORK AREA
IP330    DS    0H
         MVC   DSNAREA(14),PROCDSN PROCLIB DATA SET NAME TO PARM AREA
         TM    BAPRC,X'FF'         PROCLIB UNIT NAME SPECIFIED ON SET
         BC    7,IP345             BRANCH IF UNIT NAME SPECIFIED
         BAL   R9,IP350      IF NOT SPECIFIED,BRANCH TO LOCATE     OC43
* UPON RETURN, UCB ADDRESS OF THE UNIT CONTAINING THE PROCEDURE
* LIBRARY IS CONTAINED IN R1
IP333    DS    0H
         OI    SRTESTAT,SRTEPRES   SET VOLUME PERM. RES.          *OCI9
         DROP  R6                                                 *OCI9
         ST    R6,BAPRC            SAVE PROC UCB ADDRESS
         B     IP500               BRANCH TO NEXT PHASE
* Q UNIT NAME SPECIFIED IN SET COMMAND
IP340    DS    0H                  ALIGNMENT
         MVC   IP400WKR(3),BAQ     UNIT NAME TO WORKAREA FOR UCB SEARCH
         LA    R9,IP327            RETURN ADDRESS                  OC43
IP343    MVI   IP400SW,BIT0        INDICATE SEARCH ON UNIT NAME
         BAL   R3,IP400            GO TO UCB SEARCH ROUTINE
         B     IP413               UCBNAME NOT VERIFIED
         B     IP360               BRANCH TO OBTAIN ROUTINE
* PROC UNIT NAME SPECIFIED IN SET COMMAND
IP345    DS    0H
         MVC   IP400WKR(3),BAPRC   UNIT NAME TO WORK AREA
         CLI   BAPRC+3,C' '        IS 2321 INDICATED
         BE    IP346               NO,BRANCH
         MVI   IP400WKR+3,C'/'     SLASH TO WORKAREA
         MVC   IP400WKR+4(1),BAPRC+3 BIN NUMBER TO WORK AREA
         CLI   IP400WKR+4,X'F0'    IS BIN NUMBER VALID
         BL    IP413               NO,ERROR
IP346    DS    0H
         LA    R9,IP333            RETURN ADDRESS                  OC43
         B     IP343               BRANCH
* ISSUE LOCATE FOR REQUIRED DATA SET
IP350    DS    0H                  ALIGNMENT
         MVC   PARM1(4),LOCCNTRL   LOCATE CONTROL BYTE
         XC    PARM3(4),PARM3      ZERO PARM3 FOR LOCATE
         LA    R1,PARM1            INDICATE PARAMETER AREA
*
         LOCATE (1)
*
         LTR   R15,R15             WAS LOCATE SUCCESSFUL
         BC    7,IP370             NO,BRANCH; DATA SET IS NOT CATALOGED
         MVC   VOLSRAR(6),VCBVOLSN MOVE VOLUME SERIAL TO WORK AREA
         MVI   IP400SW,BIT1        INDICATE SEARCH FOR VOLUME SERIAL
         BAL   R3,IP400            BRANCH TO DETERMINE IF VOLUME MNTD
         B     IP380               VOLUME NOT MOUNTED,BRANCH
* VOLUME HAS BEEN SELECTED,DETERMINE IF DATA SET EXISTS ON VOLUME
IP360    DS    0H                  NORMAL RETURN FROM ABOVE AND
*                                  ENTRY TO OBTAIN ROUTINE
         LA    R1,VOLSRAR          ADDRESS OF VOLUME SERIAL FOR
         ST    R1,PARM3            OBTAIN TO WORK AREA
         MVC   PARM1(4),OBTCNTRL   OBTAIN CONTROL BYTE
         LA    R1,PARM1            INDICATE PARAMETERS
*
         OBTAIN (1)
*
         LTR   R15,R15             WAS OBTAIN SUCCESSFUL
         BC    7,IP390             OBTAIN FAILED, BRANCH
         BR    R9                  RETURN                          OC43
* LOCATE FAILED  DETERMINE VOLUME BY LOOKING AT SYSGEN VALUE FOR
* DATA SET OR IPL VOLUME IF NO SYSGEN VALUE WAS SPECIFIED
IP370    DS    0H
         CLC   DSNAREA(7),JOBQDSN  IS SEARCH FOR JOBQ DEVICE
         BE    IP372               YES,BRANCH
         CLI   IPSGPL,C' '         SYSGEN VALUE FOR PROCLIB
         BE    IP375               NO,SEARCH FOR IPL VOLUME
         MVC   IP400WKR(5),IPSGPL  PROCLIB UNIT ADDRESS FOR UCB SEARCH
IP371    DS    0H
         MVI   IP400SW,BIT0        INDICATE SEARCH ON UNIT NAME
IP371A   BAL   R3,IP400            BRANCH TO UCB SEARCH
         USING UCBOB,R6
         B     IP413               ERROR,NOT VERIFIED
IP371B   DS    0H
         MVC   VOLSRAR(6),SRTEVOLI VOLUME SERIAL TO WORKAREA
         B     IP360               BRANCH TO OBTAIN ROUTINE
IP372    DS    0H                  SEARCH IS FOR JOBQ DEVICE
         CLI   IPSGJQ,C' '         SYSGEN VALUE FOR JOBQ DEVICE
         BE    IP375               NO,SEARCH FOR IPL VOLUME
         MVC   IP400WKR(3),IPSGJQ  PROCLIB UNIT ADDRESS FOR UCB SEARCH
         B     IP371               GO TO SEARCH ROUTINE
* SYSGEN VALUES NOT SPECIFIED,SEARCH FOR IPL VOLUME
IP375    DS    0H
         L     R6,CVTSYSAD         LOAD UCB ADDRESS OF IPL VOLUME
         LR    R5,R6               R5,ADDRESS OF IPL VOLUME UCB
         MVC   IP394(3),UCBNAME    UCB NAME TO MESSAGE AREA
         B     IP371B              CONTINUE
* THE VOLUME INDICATED BY THE CATALOGUE IS NOT MOUNTED
IP380    DS    0H
         LA    R1,IP381            ADDRESS OF MESSAGE
         MVC   IP383(14),DSNAREA   DATA SET NAME TO MESSAGE
         MVC   IP382(6),VOLSRAR    VOLUME SERIAL TO MESSAGE
         B     IP380390            BRANCH TO WRITE
* REQUIRED DATA SET NOT FOUND ON SELECTED VOLUME
IP390    DS    0H
         LA    R1,IP391            ADDRESS OF MESSAGE
         MVC   IP392(14),DSNAREA   DATA SET NAME TO
         MVC   IP393(6),VOLSRAR    VOLUME SERIAL TO MESSAGE
IP380390 DS    0H
         WTO   MF=(E,(1))          *
         B     IP450               FREE CORE
**********************************************************************
*
* UCB SEARCH:
*
*        IP400SW INDICATES THE TYPE OF SEARCH TO MAKE
*              BIT0=UNITNAME
*              BIT1=VOLUME SERIAL NUMBER
*              BIT2=IPL VOLUME
*        IP400WKR CONTAINS 3 OR 5 BYTE UCB NAME
*        VOLSRAR CONTAINS THE VOLUME SERIAL NUMBER
*
*        NORMAL EXIT
*              R6 CONTAINS UCB ADDRESS
*              BRANCH R3
*
**********************************************************************
IP400    DS    0H
         L     R7,CVTILK2          SRT TABLE ADDRESS
IP401    LH    R6,0(R7)            UCB ADDRESS
         LTR   R6,R6               HOLE IN TABLE
         BZ    IP403               YES,BRANCH TO GET NEXT ADDRESS
         N     R6,CF0F             ZERO HIGH ORDER BITS
         CL    R6,CF0F             END OF UCB LIST
         BNE   IP404               BRANCH TO CHECK UCB
IP402    BR    R3                  END OF UCB LIST AND UCB NOT FOUND
*                                  ERROR RETURN
IP403    LA    R7,2(R7)            INCREMENT TO NEXT ENTRY
         B     IP401               CHECK ENTRY
IP404    MVC   IP394(3),UCBNAME    SAVE UNIT NAME
         USING UCBOB,R6
         TM    IP400SW,BIT0        SEARCH ON UCB NAME
         BO    IP407               YES,BRANCH
IP405    DS    0H                  SEARCH ON VOLUME SERIAL
         LR    R5,R6               MAIN UCB ADDRESS TO R5
         CLC   SRTEVOLI(6),VOLSRAR VOLUME SERIALS MATCH
         BE    4(R3)               YES,RETURN
         CLC   UCBTYP+2(2),TYPE2321 IS DEVICE A 2321
         BNE   IP403               NO GET NEXT UCB
         LA    R1,10(0,0)          LOOP CONTROL
         LA    R6,DATACELL-UCBOB(0,R6) INCREMENT TO SUB UCBS
IP406    DS    0H
         USING DATACELL,R6
         CLC   DCELVOLI(6),VOLSRAR VOLUME SERIALS MATCH
         BE    4(R3)               YES,RETURN
         LA    R6,16(R6,0)         INCREMENT TO NEXT SUB UCB
         BCT   R1,IP406
         B     IP403               CESSED;GET NEXT UCB
IP407    DS    0H                  SEARCH ON UNITNAME
         USING UCBOB,R5
         LR    R5,R6               ADDRESS OF MAIN UCB TO R5
         CLC   UCBNAME(3),IP400WKR UCB NAMES MATCH
         BNE   IP403               NO,GET NEXT UCB
         CLI   IP400WKR+3,C'/'     IS 2321 SPECIFIED
         BE    IP408               YES,BRANCH
         CLC   UCBTYP+2(2),TYPE2321 IS IT 2321
         BE    IP413               YES,ERROR
         OC    SRTEVOLI,SRTEVOLI   VOLUME READY
         BZ    IP413               NO,BRANCH
         MVC   VOLSRAR(6),SRTEVOLI VOLUME SERIAL TO WORKAREA
         B     4(R3)               RETURN
IP408    DS    0H
         CLC   UCBTYP+2(2),TYPE2321 IS IT 2321
         BNE   0(R3)               NO,ERROR
IP409    DS    0H
         IC    R6,IP400WKR+4       BIN NUMBER
         N     R6,CF00F            ZERO ZONE AND THREE HIGH BYTES
         SLL   R6,4                TIMES 16
         LA    R6,DATACELL-UCBOB(R5,R6) INCREMENT TO CORRECT SUB UCB
         OC    DCELVOLI,DCELVOLI   DEVICE READY
         BZ    IP413               NO,BRANCH
         MVC   VOLSRAR(6),DCELVOLI VOLUME SERIAL TO WORKAREA
         B     4(R3)               NORMAL RETURN
*
IP413    EQU   *
         USING XSA,R2
         LA    R2,IPXSA                      SETUP MSG TO PRINT
         MVI   XAV,X'40'                     BLANK VERB AREA
         MVC   XAV+1(7),XAV
         MVI   XAR,X'0D'                     INSERT MSG NO
         MVC   XAV(5),IP400WKR     INSERT INVALID UNIT REF
IP455    EQU   *
         LA    R14,IP449           RETURN POINT
         ST    R4,MAINSVE          SAVE ADDRESS OF GOTTEN AREA
         LINK  EP=IEE0503D                   GO PRINT MSG -RETURN TO
IP449    L     R4,MAINSVE          RESTORE GOTTEN CORE POINTER
IP450    NI    BASFL,255-BAIN               ZERO IPL FLAG
         LR    R1,R4               ADDRESS OF AREA TO FREE
         FREEMAIN R,SP=255,LV=IPWKEND,A=(1)
         B     IP540                                             A31769
         DROP  R6
         USING UCBOB,R5
         DROP  R2
***********************************************************************
*              CATALOG SYS1.PROCLIB
*             FILL IN TIOT WITH THE UCB ADDRESSES FOR JOB QUEUE AND
*              PROCLIB BEFORE GOING TO IEFQINTZ TO INITIALIZE
*              JOB QUEUE
***********************************************************************
*
IP500    EQU   *
         LR    R1,R4               ADDRESS OF AREA TO FREE
         FREEMAIN R,SP=255,LV=IPWKEND,A=(1)
         MVC   IPDEVTYP(4),UCBTYP  DEVICE  TYPE
         DROP  R5                                                 *OCI9
         USING UCBOB,R6                                           *OCI9
         CLI   UCBID,X'FF'         IS THIS MAIN UCB?
         BNE   IP510               YES
         MVC   IPVOLSER(6),SRTEVOLI  VOLUME SER NO
         B     IP515
IP510    EQU   *
         MVC   IPVOLSER(6),DCELVOLI-DATACELL(R6) VOLUME SERIAL
         DROP  R6                                                 *OCI9
IP515    EQU   *
         CATALOG IPCAT             CATALOG DATA SET
         C     R15,CB08            IS RETURN CODE 8?
         BNE   IP517               NO. CONTINUE
         CLI   IPCAT,CAT           IS THIS SECOND FAILURE
         BE    IP516              GO TO WRITE ERROR MSG          A31761
         MVI   IPCAT,CAT           INDICATE CATALOG
         B     IP515               TRY CATALOG
IP516    CVD   R15,WORK1          PREPARE TO PRINT RETURN CODE   A31761
         UNPK  WORK2(4),WORK1+FOUR(4) FROM CATALOG IN ERROR MSG  A31761
         OI    WORK2+THREE,FOXZERO   MAKE PRINTABLE LAST DIGIT   A31761
         MVC   NOIPLMSG+CODEDISP(2),WORK2+TWO  PUT RETURN CODE   A31761
*                                 INTO THE MESSAGE               A31761
NOIPLMSG WTO  'IEE139I INITIALIZATION FAILED  CODE=  ',ROUTCDE=2,DESC=4
         B     IP540                                             A31761
IP517    EQU   *
         LTR   R15,R15             TEST RETURN CODE
         BNZ   IP516              GO TO WTITE ERROR MSG.         A31761
         USING VTIOT,R10
         MVC   VJUCBPT+1(3),BAQ+1       INITIALIZE JQ TIOT UCB PTR
         MVC   VPUCBPT+1(3),BAPRC+1           PROC LB TIOT UCB PTR
*
***********************************************************************
*              QUEUE MANAGER TO INITIALIZE THE JOB QUEUE--
*              INTERFACE- R1 - POINTS TO 4 WORD PARAMETER LIST ON ENTRY
*                              .WORD 1 CONTAINS UCB ADDRESS FOR JOB Q
*              ERROR DETECTION-FREES TIOT CORE,ZERO TIOT PTR IN TCB
*                              AND RETURNS TO MODULE BEGINNING TO TRY
*                              AGAIN
*                             -SUPPRESS AUTO STARTS IF QCR ERROR A31300
*                              OCCURRED DURING WARM START        A31300
***********************************************************************
*
         DROP  R10
IP520    MVC   IPQPAM(4),BAQ            INIT JOB Q
         MVC   IPQPAM(1),BACV        PICK UP Q FORMAT IND..
         AIF   ('&SMF' EQ '0').S1      IS SMF PRESENT-            19018
         TM    BACV,X80                WARM START INDICATED-      19018
         BC    N7,IP527                NO-BRANCH                  19018
         OI    SMFOPT+N3,SMFWMST       YES-INDICATE IT            19018
IP527    EQU   *                                                  19018
.S1      ANOP                                                     19018
IP530    LA    R1,IPQPAM                SETUP QM
         LINK  EP=IEFSQINT
         LTR   R15,R15  *               RETURN OKAY?
         BNZ   IP540                   NO - FREE TIOT AND GO     A31300
*                                           TO BEGINNING AGAIN   A31300
         TM    IPQPAM,X'40'            QCR ERR DURING WARM START A31300
         BZ    IP560                   NO - CONTINUE             A31300
         MVI   CB8+1,C'Y'              YES - SUPPRESS AUTO START A31300
         MVC   CB8+2(6),CB8+1               COMMANDS             A31300
         B     IP560                   CONTINUE WITH NORMAL PATH A31300
IP540    EQU   *
         L     R2,CVTTCBP                    LOCATE START ADDR TO FREE
         L     R2,4(R2)                   ADDR IN TCBTIO OF TCB
         L     R1,TCBTIO(R2)
         XR    R0,R0                         ZERO TCBTIO
         ST    R0,TCBTIO(R2)
         L     R0,CX108                                            LMCS
         AIF   ('&LCTR' EQ '0').SKIPLFR      IS LOG PRESENT        LMCS
         AL    R0,LOGTIOT              ADD LOG TIOT LENGTH         LMCS
.SKIPLFR ANOP
         AIF   ('&SMF' EQ '0').S5      IS SMF PRESENT-            19018
         AL    R0,SMFTIOT              ADD SMF TIOT SIZE          19018
.S5      ANOP                                                     19018
         FREEMAIN R,LV=(0),A=(1)
         B     IP100
*
*             IEFPRES - TO INITIALIZE VOLUME ATTRIBUTES FOR ALL TAPE
*              AND DIRECT ACCESS DEVICES
*              .INTERFACE - R1 - POINTS TO 4 WORD PARAMETER LIST ON
*                              ENTRY- WORD 1 CONTAINS THE UCB ADDRESS
*                              FOR SYS1.PROCLIB
*
IP560    EQU   *
         XC    IPQPAM(16),IPQPAM  ZERO PARAM AREA
         L     R2,PARMSAVE         GET PARMLIB UCB POINTER         OC43
         LTR   R2,R2               IS PARMLIB PRESENT              OC43
         BZ    IP600               NO,BYPASS VOLUME INITIALIZATION OC43
         ST    R2,IPQPAM           SET UCB POINTER FOR PARMLIB     OC43
         LA    R1,IPQPAM          PT TO PARAM LIST
         LINK  EP=IEEVPRES
         LTR   R15,R15            ZERO RETURN CODE?
         BNZ   IP540              BR NO - FREE TIOT AND REIPL
***********************************************************************
*
*              ISSUE SVC 76 TO WRITE IPL RECORD TO SYS1.LOGREC.   20070
*              IF RELIABILITY DATA EXTRACTOR (RDE) IS NOT         20070
*              SYSGENED, NO RECORD IS WRITTEN AND RETURN          20070
*              IS MADE TO THIS ROUTINE.                           20070
*
         AIF   ('&LCTR' EQ '0').SKIPCOM     IS LOG PRESENT
*
*              LINK TO LOG INITIALIZATION                          WMCS
*
.SKIPCOM ANOP
*              SETUP TO WRITE AND EXECUTE CANNED COMMANDS PROVIDING
*              NO STOPS WERE GIVEN
*              .FLAG=FF MGCR IF NECESSARY
***********************************************************************
*
IP600    EQU   *
         L     R0,CB08                 INDICATE IPL ENTRY         20070
         SVC   STATUS                  GO WRITE IPL RECORD        20070
         AIF   ('&LCTR' EQ '0').SKIPLIN     IS LOG PRESENT         WMCS
         LINK  EP=IEEVLIN
.SKIPLIN ANOP
         MVI   CB1,X'FF'               FLAG-FF=EXECUTE MGCR
         LA    R9,IP800                                            OC43
***********************************************************************
*              WRITE AND/OR EXECUTE COMMANDS FOR READER,WRITER,AND
*              INITIATOR
*              .FIRST TEST FOR COMMAND TO OPERATE ON - CCURNT TO CCNBR
*              .TEST PARTICULAR STOP GIVEN             CB8+1 FOR C'Y'
*              .MOVE COMMAND TO BUFFER
*              .BACKSCAN TO CALCULATE LENGTH
*              .TEST WTO ONLY                    CB1 - 00
*              .TEST ANY STOP AT ALL GIVEN (TO BYPASS WTO PART) CB8-01
*              .WTO
*              .TEST FLAG FOR WTO ONLY -NO MGCR (EXECUTE)   CB1 FOR 00
*              .MGCR
*              .INITIALIZE FOR NEXT COMMAND AND RETURN
*              USES REGISTERS R5 - CURRENT COMMAND CT
*                             R7 - COMMAND START ADDRESS
*                             R6 - ADDRESS OF STOP FLAG AREA
*                             R8 - RETURN REG
*                            R2,R3 -TO BACK SCAN FOR COMMAND LENGTH
***********************************************************************
IP700    EQU   *
         XC    IPCC(80),IPCC      ZERO BUFFER                    A27654
         XR    R5,R5
         L     R5,CCURNT               CURRENT BYTE COUNT OF COMMANDS
         LA    R7,CCBGN                        TO FLIP DOWN COMMANDS
         XR    R6,R6
         LA    R6,CB8+1                    SET UP FOR STOP CHECK
IP710    EQU   *
         CL    R5,CCNBR                IS THERE A COMMAND TO WRITE
         BNL   IP799                   NO MORE -GO EXIT
         CLI   0(R7),C' '              IS FIRST CHAR. A BLANK     M0046
         BE    IP785                   YES. SKIP WTO/MGCR         M0046
         CLI   0(R6),C'Y'              YES PARAMETER CHECK
         BE    IP780                   YES. SKIP WTO/MGCR
         CLC   IPCC(80),0(R7)          TEST FOR DUPLICATE AUTOS.  20135
         BE    IP780                   GO GET NEXT COMMAND.       20135
         MVC   IPCC(80),0(R7)          MOVE COMMAND TO BUFFER
         LA    R2,80                   SETUP TO BACKSCAN FOR LENGTH
IP766    EQU   *
         BCT   R2,IP770                DECREMENT COUNT REG
         B     IP780                   NO COMMAND -BCH CT REG ZERO
IP770    EQU   *
         LA    R3,IPCC(R2)             SETUP AREA POINTER REG
         CLI   0(R3),C' '              TEST FOR BLANK
         BE    IP766                   BCH STILL BLANK
         LA    R2,1(R2)           NONBLANK-ADJUST LENGTH
* LENGTH DOES NOT INCLUDE ROUT AND DESC CODES FIELDS
         STH   R2,IPWTO                 SAVE TOTAL LENGTH
         MVC   IPWTO+K2(K2),HALFZERO    ZERO OUT RT. CODE        A42562
         LA    R1,IPWTO
         CLI   CB1,X'00'               TEST WTO ONLY
         BE    IP773                   YES-GO STRAIGHT TO WTO
         TM    CB8,X'01'          ANY N'S IN AUTO PARM OF SET COMMAND
         BZ    IP775              NO-SKIP WTO
IP773    EQU   *
         WTO   MF=(E,(1))
IP775    EQU   *
         CLI   CB1,X'00'               TEST FLAG FOR WTO ONLY
         BE    IP780                   BCH YES TO UPDATE FOR NEXT COMMD
         XR    R0,R0              SPECIFY SYSTEM COMMAND TO SVC 34 WMCS
         MVC   IPCC(72),8(R7)          MOVE SYSTEM COMMAND TO CIB XMCS
         S     R2,CB08                 ADJUST START COMMAND LENGTH
         STH   R2,IPWTO                SAVE LENGTH
*     REGISTER 0 CONTAINS 0 TO SPECIFY SYSTEM COMMAND TO SVC 34 *  XMCS
         LA    R1,IPWTO+E3         POINT TO 1 BEFORE COMMAND      M2063
STARLOOP EQU   *                                                  M2063
         LA    R1,E1(E0,R1)        INCREMENT POINTER TO COMMAND   M2063
         CLI   E0(R1),ESTAR                                       M2063
         BNE   STARLOOP            LOOP UNTIL * ENCOUNTERED       M2063
         MVC   E1(E4,R1),BLANKS    BLANK ROUTING AND DESC. CODES  M2063
         MGCR  IPWTO
IP780    EQU   *
         LA    R6,1(R6)                 INCREMENT INDEX REG
IP785    EQU   *                                                  21374
         LA    R5,80(R5)
         LA    R7,80(R7)                     FLIP TO NEXT COMMAND
         B     IP710
*
IP799    BR    R9                      RETURN                      OC43
*
***********************************************************************
         AIF   ('&SMF' EQ '0').S6                                 19018
*
*              EXIT TO SMF INITIALIZATION MODULE IEESMFIT-
*
*        SINCE IEESMFIT IS SYSTEM INDEPENDENT AND IS XCTLED TO IN
*        MVT, IT CANNOT SAVE REGISTERS ON ENTRY.  THEREFORE, THIS
*        MODULE WILL  SAVE ITS  OWN REGISTERS  BEFORE LINKING AND
*        IEESMFIT WILL SAVE THE POINTER TO THE REGISTER SAVE AREA
*
.S6      ANOP                                                     19018
*                   .TURN OFF IPL BIT=1 TO INDICATE NO LONGER IPL
*                   .CLEAR PTR TO STOP INDICATOR AREA
***********************************************************************
IP800    EQU   *
         AIF   ('&SMF' EQ '0').S2                                 19018
         LA    R13,IPREGSV             GET SAVE AREA PTR          19018
         STM   R14,R12,N12(R13)        SAVE REGISTERS             19018
         L     R3,PARMSAVE             PASS PARMLIB UCB PTR       19018
         L     R12,CVTPTR              POINT TO CVT               19018
         L     R10,SMFOPT              GET SMF OPTIONS            19018
         STC   R10,CVTSMCA             STORE OPTIONS BYTE         19018
         LINK  EP=IEESMFIT             LINK TO SMF INIT           19018
         LM    R14,R12,N12(R13)        RESTORE REGISTERS          19018
.S2      ANOP                                                     19018
         L     R5,CVTTCBP              GET PTR TO DOUBLE TCB'S     LMCS
         L     R5,4(R5)                NOW HAVE PTR TO MS TCB      LMCS
         SSM   *+1 *                    DISABLE
IP805    EQU   *
         NI    RBSET,X'00'         CLEAR RB SET UP STATUS           LCS
         LR    R6,R5 *                  LOOK AT
         L     R5,TCBTCB(R6) *          NEXT TCB
         L     R7,TCBMSS(R6) *          GET BBOX
         LA    R4,PIBPTR(R6)       PT TO PIB AND ID                 LCS
IP810    EQU   *                                                    LCS
         L     R9,4(0,R7)               GET LO BOUNDARY            OC43
         USING IEAPRB2,R9                                          OC43
*                             ESTABLISH RB,XCTL CODE,PROTECT KEY AND
*                             DISPATCHABILITY FOR ALL ACTIVE TASKS
IP820    EQU   *
         LTR   R9,R9              ZERO SIZE                        OC43
         BZ    IP850               YES.TEST LCS                     LCS
         MVI   33(R6),X'00' *          SET TASK DISPATCHABLE
IP822    EQU   *
         OI    RBSET,X'40'         RB SET INDICATER                 LCS
         TM    0(R4),X'FF' *            SYSTEM TASK?
         BZ    IP845               TRY NEXT IF YES                  LCS
*
*              SET UP ALL PARTITIONS AS DEFINED BY NIP
         TM    0(R4),X'20'         SCHEDULER SIZE?
         BO    IP860
         MVC   IEALINK+8(8),IEFSD599 SET XCTL NAME
IP830    MVC   IEAPRB2(IEARBEND-IEAPRB2),RBDMY  MOVE RB TO PARTITION
         ST    R6,XRBLNK *              SET TCB PTR IN LINK FLD.
         LA    R3,IEAPPGM *             R3 = PTR TO START OF CODE
         ST    R3,XRBPSW1 *             STORE TO RB
         LA    R3,IEAFQE *              FQE PTR
         ST    R9,0(0,R6)              RB POINTER TO TCB FIELD      LCS
         TM    RBSET,X'80'         LCS PREVIOUSLY PROCESSED         LCS
         BO    IP8216              YES. FINISH FILLING RB           LCS
         L     R2,8(R7)                 HI BNDRY
         SR    R2,R3                    GET NO. BYTES FOR FQE
         SR    R1,R1                    CLEAR
         STM   R1,R2,0(R3)              SET FQE
         ST    R3,0(R7)            SET UP FQE PTR                   LCS
IP850    TM    BASFL2,BALCS        LCS IN SYSTEM                    LCS
         BZ    IP845               NO. USE HSS ONLY                 LCS
         L     R9,16(R7)           LCS LOW BOUND                    LCS
         TM    RBSET,X'40'         RB PREVIOUSLY SET                LCS
         BZ    IP8215              NO. USE LCS                      LCS
         ST    R9,12(0,R7)         SAVE LOW BOUND FOR FQE           LCS
         LTR   R9,R9               ANY SPACE                        LCS
         BZ    IP855               NO. SET LCS INDICATOR            LCS
         L     R2,20(R7)           POINTER TO HIGH BOUND IN LCS     LCS
         SR    R2,R9               PARTITION SIZE FOR FQE           LCS
         SR    R1,R1               CLEAR REGISTER                   LCS
         STM   R1,R2,0(R9)         SET UP FQE                       LCS
IP855    EQU   *                                                    LCS
         OI    0(R7),X'01'         SET LCS ACTIVE IN FQE            LCS
         B     IP845               GET NEXT TCB                     LCS
IP8215   EQU   *                                                    LCS
         OI    RBSET,X'80'         SET LCS PROCESSED INDICATER      LCS
         LTR   R9,R9               ANY LCS CORE                     LCS
         BZ    IP845               NO. SET HSS ONLY BIT             LCS
         B     IP820                                                LCS
IP8216   EQU   *                                                    LCS
         ST    R3,12(R7)           FQE  PTR                         LCS
         L     R2,20(R7)           HIGH BOUND LCS                   LCS
         SR    R2,R3               SPACE IN LCS PARTITON            LCS
         SR    R1,R1               CLEAR R1                         LCS
         STM   R1,R2,0(R3)         SET UP FQE                       LCS
         B     IP855                                                LCS
IP845    EQU   *                                                    LCS
         LTR   R5,R5
         BNE   IP805              RETURN IF MORE TCBS
         B     IP900
         DROP  R9                                                  OC43
IP860    EQU   *
         MVC   IEALINK+8(8),IEFSD510
         B     IP830
IP900    EQU   *
         L     R2,CVTTCBP              GET PTR TO DOUBLE TCB'S     LMCS
         L     R2,4(R2)                GET MS TASK TCB             LMCS
         AIF   ('&LCTR' NE '0').SKIPTIO   IF LOG IS SUPPORTED,SKIP LMCS
         AIF   ('&SMF' NE '0').SKIPTIO IF SMF-DONT FREE TIOT      19018
         L     R1,TCBTIO(R2)
         XR    R0,R0                         ZERO TCBTIO
         ST    R0,TCBTIO(R2)
         L     R0,CX108                                            LMCS
         FREEMAIN R,LV=(0),A=(1)
.SKIPTIO ANOP
         L     R3,TCBMSS(R2)      GET BBOX
         LM    R4,R7,PARMSAVE+4   RESTORE PARMS FROM NIP
         ST    R4,0(R2)           RESET RP PT
         STM   R5,R7,0(R3)        RESET BBOX
         SR    R0,R0
         ST    R0,TCBDEB(R2)      ERASE DEB QUEUE
         ST    R0,TCBLLS(R2)      ERASE LOAD QUEUE
         OI    BASFL,BAIN         SET IPL THROUGH INDIC
         XC    BACV(4),BACV       ZERO STOP INDICATOR FIELD
         L     R11,CVT0DS               GO TO DISPATCHER.
         BR    R11
***********************************************************************
*                                                                     *
*                        *** N O T E ***                              *
*                                                                     *
* THE FOLLOWING SAVE AREA(IPREGSV) MUST PRECEDE THE REST OF THE   20071
* OTHER CONSTANTS AND IT MUST BE WITHIN 1000 HEX BYTES OF THE     20071
* BEGINNING OF THE MODULE BECAUSE THE SECOND BASE OF THE MODULE   20071
* DEPENDS ON ITS POSITION FOR ADDRESSABILITY TO THE CONSTANTS.    20071
*                                                                     *
IPREGSV  DS    18F                 REGISTER SAVE AREA             20071
*                                                                     *
***********************************************************************
***********************************************************************
*                                                                     *
*               TOD CLOCK CONSTANTS                                   *
*                                                                     *
***********************************************************************
         DS    0D
DOUBLE   DC    CL8'0'              UNPACKING DOUBLE WORD          20071
TIMEAREA DC    F'0'                DOUBLE WORD FOR                20071
         DC    F'0'                TOD CLOCK VALUE                20071
TODMSG1  WTOR  'IEE116A TOD CLOCK INVALID- REPLY WITH SET PARAMETERS', X
               MF=L,ROUTCDE=(1),DESC=(2)                          20071
TODMSG2  WTOR  'IEE114A DATE=00.000,CLOCK=00.00.00 - REPLY WITH SET PARX
               AMETERS OR U',MF=L,ROUTCDE=(1),DESC=(2)            20071
MSGCHNG  EQU   TODMSG2+K12         SET UP EQUATE TO DYNAMICALLY   20071
*                                  CHANGE MESSAGE                 20071
TODECB   DC    F'0'                TOD WTOR ECB                   20071
TODBUF   DC    X'0078'             START OF REPLY BUFFER          20071
         DC    X'0000'                      **                    20071
TODSET   DC    CL4'SET'            ALREADY IN REPLY BUFFER FOR    20071
*                                  LATER INTERNAL SET COMMAND     20071
TODREPLY DC    CL122' '            REPLY AREA FOR TOD WTORS       20071
YDATE    DC    CL3'0'              *             KEEP THIS        20071
DDATE    DC    CL3'0'              *          AREA TOGETHER       20071
HTIME    DC    CL3'0'              *           FOR INTERNAL       20071
MTIME    DC    CL3'0'              *            SET-UP OF         20071
STIME    DC    CL3'0'              *           DATE AND TIME      20071
COMDATE  DC    C','                COMMA MUST PRECEDE 'DATE='     20071
DATE     DC    C'DATE='            DATE PARAM FOR SET COMMAND     20071
LOWCASE1 DC    X'8481A3857E'       'DATE=' IN LOWER CASE          M1866
COMCLOCK DC    C','                COMMA MUST PRECEDE 'CLOCK='    20071
CLOCK    DC    C'CLOCK=00.00.00'   CLOCK PARAM FOR SET COMMAND    M3230
LOWCASE2 DC    X'83939683927E'     'CLOCK=' IN LOWER CASE         M1866
CCBITS   DC    X'00'               SAVE COND CODE FROM STCK       20071
TEN      DC    H'10'               USED IN CONVERTING TO DECIMAL  20071
YR2000   DC    F'1203826904'       NO. SEC IN TOD ON JAN 1,2000   M5381
D16384   DC    F'16384'            SECOND CONVERSION CONSTANT     20071
D15625   DC    F'15625'                        **                 20071
D86400   DC    F'86400'            NO. SECONDS PER DAY            20071
D365     DC    F'365'              NO. DAYS IN REGULAR YEAR       20071
D366     DC    F'366'              NO. DAYS IN LEAP YEAR          20071
U        DC    CL2'U'              CHARACTER 'U' FOR REPLY        20071
D60      DC    C'60'               CHAR 60 FOR FIRST YEAR OF TOD  20071
F60      DC    F'60'               NO. SECONDS PER MINUTE         20071
D3600    DC    F'3600'             NO. SECONDS PER HOUR           20071
D1460    DC    F'1460'             NO. DAYS PER FOUR YEARS-1     A52614
D1461    DC    F'1461'             NO. DAYS PER FOUR YEARS        20071
***********************************************************************
***********************************************************************
*
*              MODULE CONSTANTS
*
***********************************************************************
*
RDRPART  DC    F'64'                                              21374
WTRPART  DC    F'128'                                             21374
HALFZERO DC    H'0'                                              A42562
LECB     DC    F'0'               LOCAL ECB-WILL NEVER BE POSTED  M4300
FZERO    DC    F'0'                                                 LCS
RBSET    DC    F'0'                BOUNDARY BOX SET-UP STATUS       LCS
         DS    0D
CONVERT  DC    2F'0'               CONVERT SLOT FOR PARTITION NOS.
ECB      DC    F'0'
         DS    0F
CB8      DC    X'00'                    KEEP        8 BYTE AREA
         DC    C'NNNNNNN'                 TOGETHER      FOR STOP FLAGS
CB1      DC    X'00'
*
MY       DC    X'00'
MN       DC    X'00'
ML       DC    X'00'
MD       DC    X'00'
LIST     DC    C'LIST'
DYNDEF   DC    C'DYNDEF'
COMMA    DC    C','
NO       DC    C'NO'
YES      DC    C'YES'
REPLY    DC    15X'00'
         DC    C' '
         DS    0F
IPCAT    CAMLST RECAT,IPDSN,,IPVOLS PARM LSIT FOR CATALOG
IPDSN    DC    C'SYS1.PROCLIB '    PROCLIB NAME
IPVOLS   DC    H'1'                RESIDES ON 1 VOLUME
IPDEVTYP DS    4C                  DEVICE TYPE
IPVOLSER DS    6C                  VOL SER NO
         DC    H'0'                ZERO SEQUENCE NUMBER
CB08     DC    F'8'
BLANKS   DC    C'    '
CB10     DS    1F
CF04     DC    F'4'
CX108    DC    X'FF00006C'        GET CORE CONSTANT FOR 108 IN S  LMCS
LOGTIOT  DC    F'40'              LENGTH OF LOG TIOT ENTRIES       LMCS
CF0F     DC    X'0000FFFF'
IPSGJQ   DC    CL4'&JUCB. '             SYSGEN JOB QUEUE UNIT.
IPSGPL   DC    CL5'&PUCB. '       SYSGEN PROCEDURE LIBRARY UNIT
IPLCS    DC    CL1'&LCLS'
IPLCT    DC    AL1(&LCTR)               LOG QUEUE LIMIT.
TYPE2321 DC    X'2005'             2321 ID
BINTABLE DC    C'012345678'        BIN ID'S
BINLAST  DC    C'9'                LAST ENTRY IN TABLE
MAINSVE  DS    F
         DS    0F
IP400SW  DC    X'00'
IP400WKR DS    D
JOBQDSN  DC    CL14'SYS1.SYSJOBQE '
PROCDSN  DC    CL14'SYS1.PROCLIB  '
LOCCNTRL DC    X'44000000'   LOCATE CONTROL BYTE
OBTCNTRL DC    X'C1000000'   OBTAIN CONTROL BYTE
CF00F    DC    X'0000000F'
BLNKS    DC    X'40404040'
         DS    0F
IP381    DC    AL2(IP384-*)        **MESSAGE LENGTH
         DC    AL2(0)              **
         DC    C'IEE343A  '       **MESSAGE NUMBER                 WMCS
IP382    DC    C'      , '         **VOLUME SERIAL NUMBER
IP383    DC    CL14'              ' *DATA SET NAME
         DC    C', NOT MOUNTED'    **
IP384    EQU   *
         DC    X'2000'            DESCRIPTOR CODES                 WMCS
         DC    X'9000'            ROUTING CODES                    WMCS
         DS    0F
IP391    DC    AL2(IP395-*)        **MESSAGE LENGTH
         DC    AL2(0)              **
         DC    C'IEE344A  '       **MESSAGE NUMBER                 WMCS
IP392    DC    CL14'              ' *DATA SET NAME
         DC    C', NOT FOUND ON '  **
IP393    DC    C'      , '         **VOLUME SERIAL
IP394    DC    C'     '            **UNIT NAME
IP395    EQU   *
         DC    X'2000'            DESCRIPTOR CODES                 WMCS
         DC    X'9000'            ROUTING CODES                    WMCS
PTNCHNG  WTOR  'IEE801D CHANGE PARTITIONS- REPLY YES/NO (,LIST) ',     X
               MF=L,ROUTCDE=(1),DESC=(2)                           XMCS
PTNERR   WTOR  'IEE807A DEFINITION PARAMETER ERROR- REPLY AGAIN',      X
               MF=L,ROUTCDE=(1),DESC=(2)                           XMCS
RDYMSG   WTO   'IEE101A READY',MF=L,ROUTCDE=(1),DESC=(3)           WMCS
PARMSAVE DC    5F'0'                   INPUT PARAMETER SAVE        OC43
WORK1    DS    D        WORKAREA--USED TO PREPARE CATALOG RETURN A31761
WORK2    DS    F        CODE FOR ERROR MESSAGE                   A31761
*
         SPACE 2
N0       EQU   0
N3       EQU   3
N4       EQU   4
N7       EQU   7
N12      EQU   12
N24      EQU   24
N108     EQU   108
N128     EQU   128
X80      EQU   X'80'
         SPACE 2
         AIF   ('&SMF' EQ '0').S4      IS SMF PRESENT-            19018
         EJECT
SMFTIOT  DC    F'40'                   LENGTH OF SMF TIOT ENTRIES 19018
SMFOPT   DC    F'&SMF'                 SMF SYSGEN OPTIONS         19018
         SPACE
* BIT REPRESENTATIONS FOR SMFOPT+3
         SPACE
SMFREQ   EQU   X'80'                   SMF REQUESTED              19018
SMFWMST  EQU   X'01'                   WARM START                 19018
         SPACE
.S4      ANOP
*
         IEFVTIOT
*
IPQPAM   DS    4F                       QUEUE MANAGER PARAMETER LIST
*
IPXSA    DS    10F                           ERROR MESSAGE AREA
*
IPWTO    DC    X'0050'
         DC    X'0000'
IPCC     DC    4CL20' '
         DS    0F
*
***********************************************************************
.*             COMMANDS ARE ORDERED--S WTR
.*                                   S RDR
.*                                   S INIT
.*             &CCA2 = START WRITER UNIT
.*             &CCN2 = DSNAME OF WRITER
.*             &CCV2 = VOLUME SERIAL OF WRITER
.*             &CCA1 = START RDR UNIT
.*             &CCN1 = DSNAME OF READER
.*             &CCV1 = VOLUME SERIAL OF READER
.*             &CCA3 = START INITIATOR INDICATOR
CCBGN    EQU   *
.A1      AIF   ('&CCA2' EQ '').B1      TEST FOR WTR
WTRCAN   DC    4CL20' '                COMMAND AREA
         ORG   WTRCAN
WTRP     DC    C'IEE103I S WTR.PXX'                                XMCS
WTRD     DC    C',&CCA2'
         AIF   ('&CCV2' EQ '' AND '&CCN2' EQ '').A3
         DC    C','                    ADD COMMA
         AIF   ('&CCV2' EQ '').A2      TEST VOLSER OF WTR
         DC    C'&CCV2'                ADD WTR VOLSER
.A2      AIF   ('&CCN2' EQ '').A3      TEST DSNAME FOR WTR
         DC    C',DSNAME=&CCN2'        ADD   DSNAME=NAME
.A3      DC    C' *'                   AUTOMATIC INDICATOR
         DC    X'1000'            DESCRIPTOR CODES                 WMCS
         DC    X'8000'            ROUTING CODES                    WMCS
.B1      AIF   ('&CCA1' EQ '').C1      TEST FOR RDR
         ORG
RDRCAN   DC    4CL20' '                COMMAND AREA
         ORG   RDRCAN
RDRP     DC    C'IEE103I S RDR.PXX'                               21374
RDRD     DC    C',&CCA1'
         AIF   ('&CCV1' EQ '' AND '&CCN1' EQ '').B3
         DC    C','                    ADD COMMA
         AIF   ('&CCV1' EQ '').B2      TEST VOLSER FOR RDR
         DC    C'&CCV1'                ADD VOLSER FOR RDR
.B2      AIF    ('&CCN1' EQ '').B3     TEST DSNAME FOR RDR
         DC    C',DSNAME=&CCN1'        ADD   DSNAME=NAME
.B3      DC    C' *'                   AUTOMATIC INDICATOR
         DC    X'1000'            DESCRIPTOR CODES                 WMCS
         DC    X'8000'            ROUTING CODES                    WMCS
         ORG
SYSRDR   DC    4CL20' '           COMMAND AREA                    21374
         ORG   SYSRDR                                             21374
SYSRDRP  DC    C'IEE103I S RDR.S'                                 21374
SYSRDRD  DC    C',&CCA1'                                          21374
         AIF   ('&CCV1' EQ '' AND '&CCN1' EQ '').B4               21374
         DC    C','               ADD COMMA                       21374
         AIF   ('&CCV1' EQ '').B5    TEST VOLSER FOR RDR          21374
         DC    C'&CCV1'              ADD VOLSER FOR RDR           21374
.B5      AIF   ('&CCN1' EQ '').B4    TEST DSNAME FOR RDR          21374
         DC    C',DSNAME=&CCN1'      ADD DSNAME = NAME            21374
.B4      DC    C' *'                AUTOMATIC INDICATOR           21374
         DC    X'1000'            DESCRIPTTOR CODES               21374
         DC    X'8000'            ROUTING CODES                   21374
.C1      AIF   ('&CCA3' EQ '').D1
         ORG
INITC    DC    4CL20' '
         ORG   INITC
         DC    C'IEE103I S &CCA3'      CREATE S INIT               XMCS
         DC    C'.ALL'
         DC    C' *'
         DC    X'1000'            DESCRIPTOR CODES                 WMCS
         DC    X'8000'            ROUTING CODES                    WMCS
.D1      ANOP
         ORG
CCEND    EQU   *
CCNBR    DC    A(CCEND-CCBGN)           TOTAL NO. BYTES
CCURNT   DC    F'0'
         DS    0F
IEFSD500 DC    C'IEFSD500'
IEFSD510 DC    C'IEFSD510'
IEFSD599 DC    C'IEFSD599'
*                                       WTR OR RDR - IF RES RDR OR WTR
*                                       FOUND BIT TURNED OFF
RBDMY    DS    0D *     PRB & CODE  FOR PARTITIONS
         DC    CL8'        ' RB NAME
         DC    H'8' *        DBL WD RB SIZE
         DC    X'00C0'
         DC    A(0) *        EP
         DC    X'FF040000' * RESUME PSW
         DC    A(*+12)
         DC    A(0)
         DC    A(0) *        LINK PTR, WT CNT
IEAKICK  BALR  R14,0
         USING *,R14
         LA    R15,IEALINK+8
         ST    R15,IEALINK
         LA    R15,IEALINK
         SVC   7
         DS    0F
IEALINK  DC    A(0) *   XCTL PARAM LIST
         DC    A(0)
         DC    C'IEFSD500'
         DS    1D
         DS    1D
*
***********************************************************************
*
         IEEBASEB
*
SXSA     DSECT
         DS    0F
         IEEXSA
*
***********************************************************************
*
         EJECT
***                                                                 ***
* THE FOLLOWING DSECT MAPS THE WORK AREA IN GOTTEN CORE THAT IS USED  *
* BY THE OBTAIN AND LOCATE ROUTINES                                   *
***                                                                 ***
IPWKAREA DSECT
         DS    0D
IPWKST   EQU   *
VCBCOUNT DS    CL2  *COUNT OF VOLUMES IN VCB      *****
VCBDEVTP DS    CL4  *DEVICE TYPE FOR VOLUME           *
VCBVOLSN DS    CL6  *VOLUME SERIAL NUMBER             *
VCBDSSQN DS    CL2  *DATA SET SEQ NUMBER              *
         DS    CL228                                  ***LOCATE
VCBSPARE DS    CL10 *                                 *
VCBNXTCB DS    CL4  *TTR OF NEXT VCB                  *
VCBINDXA DS    CL3  *TTR OF THIS INDEX BLOCK          *
VCBCVOLM DS    CL6  *CNTRL VOL ID FIELD           *****
*                                                     ***OBTAIN
OBTWK    DS    CL85 *TO MAKE WORK AREA FOR OBTAIN *****
*PARAMETER LIST FOR LOCATE AND OBTAIN ROUTINES
         DS    0F
PARM1    DS    F    LOCATE/OBTAIN CONTROL BYTE
PARM2    DS    A   ADDRESS OF DATA SET NAME
PARM3    DS    F    ZERO FOR LOCATE
*                  ADDRESS OF VOLUME SERIAL FOR OBTAIN
PARM4    DS    A    ADDRESS OF WORKAREA
*DATA AREAS
DSNAREA  DS    CL44 DATA SET NAME AREA
VOLSRAR  DS    CL6  VOLUME SERIAL AREA
IPWKEND  EQU   *-IPWKST
CVT      DSECT
         CVT    SYS=MFT                                         SA72373
*
***********************************************************************
*
         DS    0F
UCB      DSECT
         IEFUCBOB
***********************************************************************
IEAPRB2  DSECT
         DS    0D
XRBNM    DC    CL8' '
         DC    H'8'
XSTAB    DC    X'00C0'
XRBUSE   DC    A(0)
XRBPSW   DC    X'FF040000'
XRBPSW1  DC    A(0)
XRBQ     DC    A(0)
XRBLNK   DC    A(0)
IEAPPGM  DS    4D
IEAFQE   DS    1D
IEARBEND DS    0F
         MEND
