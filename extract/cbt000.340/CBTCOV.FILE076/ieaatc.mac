         MACRO
         IEAATC   &B,&C,&D,&STORAGE,&SCHED,&E,&RAM,&RSVC,&HIARCHY,     C
               &LPAQ,&ERP,&TMSLC,&ATTACH,&DDRSR
         LCLB  &IDENT,&TRSVCTB,&TESTRAN,&PROTECT,&AM,&RESVC,&LPA
         LCLB  &HIAR,&RERP,&TSLC,&ATT,&DDR
         LCLB  &BASE2                                              I250
&IDENT   SETB  ('&B' EQ 'Y')
&TRSVCTB SETB  ('&C' EQ 'Y')
&TESTRAN SETB  ('&D' EQ 'Y')
&PROTECT SETB  ('&E' EQ 'Y')
&AM    SETB  ('&RAM' EQ 'Y')
&RESVC   SETB  ('&RSVC' EQ 'Y')
&HIAR    SETB  ('&HIARCHY' EQ  'Y')                                LCOA
&LPA     SETB  ('&LPAQ' EQ 'Y')                                    LPA
&RERP    SETB  ('&ERP' EQ 'Y')                                    19017
&TSLC    SETB  ('&TMSLC' EQ 'Y')                                   I275
&ATT     SETB  ('&ATTACH' EQ 'Y')                                  I250
&DDR     SETB  ('&DDRSR' EQ 'Y')                                  19022
&BASE2   SETB  1                                              BD A49851
IGC006   CSECT
         TITLE 'IEAATC00.  LINK, XCTL, LOAD, AND FINCH.'
*STATUS.  CHANGE LEVEL 000.
.*0432000400-000600,087400-087600,088600-089000,101400-101600      LCOA
.*0432125000,125400-127200,127800,128200-130000                    MXMV
.*0432020300                                                       OASR
.*0432106330,120400                                                5381
.*3531067200                                                       1435
.*000400,000800,003800,111800-112000                              19017
.*000400,008500-008550,038900-039100,098009-098171,103260-103560  19018
.*000400,000800,002900,008500-008550,038900-039100,069440-069560   I275
.*069700,071200-073200,075610-075730,098000-099360,103260-103560   I275
.*104800-105200,115820-115920,121800                               I275
.*029600                                                          19572
.*011400,026600,030200,045200,051200,051810,052340,052800,053200,  I250
.*083800                                                           I250
.*000400                                                          19022
.*050087                                                          20372
.*003090-003112,003156,003400-003600                          CI A41341
.*061134-061137,061143,061149                                 CI A41341
.*117600,118200,118600,121600                                 BD A45530
         ENTRY IEA0FN00,IGC007,IGC008,IEFLINK,IEASVDCB,IEAAXSNT
         ENTRY IEAASNT2 .                                          OASR
         ENTRY IEAEXT                                            A67032
         AIF   (NOT &DDR).AAA10                                   19022
         ENTRY ERCOUNT                                            19022
.AAA10   ANOP                                                     19022
         AIF   ('&STORAGE' EQ 'PRIM').TACP1A                       I275
         ENTRY IEAFNCH .  ENTRY POINT OF XSNT AREA LOADING TCB     I275
         ENTRY IEAXERR .                                           I275
         EXTRN IEATCBP .   ADDR OF NEW IN DISPATCHER               I275
         EXTRN IORGSAV .           ADDR OF I/O REG SAVE AREA     A37059
.TACP1A  ANOP                                                      I275
         ENTRY IEAARAM4                                            I250
         ENTRY IEAARAM2                                       BD A45530
         AIF   (NOT &AM AND NOT &RESVC).XM02
     ENTRY  IEAARAM0,IEAARAM1
.XM0     AIF   (NOT &RERP).XERP1                                  19017
         ENTRY IEAAERP                                            19017
.XERP1   ANOP                                                     19017
         AIF   (NOT &RESVC).XM02
         ENTRY IEAARSV1
.XM02    ANOP
         AIF   (NOT &LPA).XA01                                     LPA
         ENTRY LPAQSRCH                                            LPA
.XA01    ANOP                                                      LPA
         EXTRN IEA0IO02,MINAPNDG
XCOMMV   EQU   16
*
XFPLSZ   EQU   24                  SIZE OF FETCH PARAMETER LIST.
         AIF   (NOT &HIAR).XLCS01                                  LCOA
XBLDLSZ  EQU   48                      SIZE SYS BUILD LIST         LCOA
*                                      SCATTER EXTENSION           LCOA
XFWASZ   EQU   432                     SIZE OF FETCH WORK AREA     LCOA
*                                      SCATTER                     LCOA
         AGO   .XLCS02                                             LCOA
.XLCS01  ANOP                                                      LCOA
XBLDLSZ  EQU   40                  SIZE OF MIN SYS BUILD LIST.
XFWASZ   EQU   412                 SIZE OF FETCH'S WORK AREA.
.XLCS02  ANOP                                                      LCOA
XRGSVSZ  EQU   36                  SIZE OF FINCH'S REGISTER SAVE AREA.
XFPL     EQU   0                   FPL'S OFFSET FROM WORK AREA ORIGIN.
XBLDL    EQU   XFPL+XFPLSZ         BLDL'S OFFSET FROM WORK AREA ORIGIN.
XFWA     EQU   XBLDL+XBLDLSZ       FWA'S OFFSET FROM WORK AREA ORIGIN.
XRGSAV   EQU   XFWA+XFWASZ         RGSAV'S OFFSET FROM WORK AREA ORIGIN
*                            TCB FIELDS.
TCBRBP   EQU   0
TCBPKF   EQU   28
TCBFLGS  EQU  29
TCBDSP   EQU   35
TCBLLS   EQU   36
TCBJLB   EQU   40
TCBJSE   EQU   44
TCBID    EQU   112
TCBNSTAE EQU   160
TCBPIB   EQU   124                 PIB ADDRESS                     I250
TCBPIB1  EQU   125                 LAST 3 BYTES OF PIB ADDRESS     I250
*                            ABEND ERROR CODES.
FETCHERR EQU   X'106'              FETCH ERROR.
IRBXCTL  EQU   X'207'              XCTLING FROM AN IRB.
LODMINOR EQU   X'308'              LOADING A MINOR.
LRBMINOR EQU   X'406'              LINKING/XCTLING TO A MINOR OR LRB.
TTRANCOR EQU   X'506'              NO CORE FOR TESTRAN OR OVERLAY.
NOPPCORE EQU   X'606'              NO CORE FOR PP LINK, XCTL, LOAD.
NONEXEC  EQU   X'706'              PROGRAM CANNOT BE EXECUTED.
BLDLERR  EQU   X'806'              BLDL ERROR.
XSNTERR  EQU   X'0F5'              ERROR IN TAFETCH TASK           I275
*                            COMMUNICATION VECTOR FIELDS.
CVT0EF00 EQU   4                                                   I250
LINKDCB  EQU   8
CVTPTR   EQU   16                  POINTER TO CVT                  I250
CVTABTM  EQU   52 .   ADDRESS OF ABTERM IN CVT                     I275
DEXIT    EQU   80
SVCDCB   EQU   84
BLDLADDR EQU   92
DISPADDR EQU   136 .  ADDR OF DISP IN CVT                          I275
         AIF   (NOT &LPA).XLPA                                     LPA
LPAQ     EQU   188                                                 LPA
.XLPA    ANOP                                                      LPA
*                            SVC CODES.
EXIT     EQU   3
GETMAIN  EQU   4
FREEMAIN EQU   5
LOAD     EQU   8
DELETE   EQU   9
REGMAIN  EQU   10
ABEND    EQU   13
TTSAV    EQU   61
*                            REGISTER ASSIGNMENTS.
R0       EQU   0
R2       EQU   2 .                                             BD M1950
R3       EQU   3 .                                             BD M1950
JOR      EQU   2                   RB ADDRESS OF LINKOR, XCTLOR, ETC.
JCOMMV   EQU   3                   ADDRESS OF COMMUNICATION VECTOR.
JERPN    EQU   3                   ERP NAME - LAST 4 CHARACTERS   19017
JOLD     EQU   4                   CURRENT TCB ADDRESS.
JI       EQU   5                   RB ADDRESS OF LINK, XCTL, ETC.
JWORK    EQU   6                   WORK AREA ADDRESS.
JBASE    EQU   7                   BASE REGISTER.
JRET     EQU   8                   RETURN REGISTER.
JBR      EQU   9                   INTERNAL BRANCH REGISTER.  ODD.
JEE      EQU   10                  RB ADDRESS OF LINKEE, XCTLEE, ETC.
JX       EQU   11                  WORK REGISTERS.
JY       EQU   12                  JX,JY,JZ MUST BE CONTIGUOUS.
JZ       EQU   13
JERPA    EQU   15                  ERP EP ADDRESS                 19017
R1       EQU   1                                                   LCOA
R5       EQU   5                                                   LCOA
R15      EQU   15                                                  I250
         AIF   ('&STORAGE' EQ 'PRIM').TACP2A                       I275
*           REGS USED TO HANDLE CONTENTION FOR XSNT AREA           I275
XSNTSVC  EQU   11 .      PTR TO XSNTCC (XSNT AREA CONTENTS)        I275
QUEPTR   EQU   12 .      PTR TO ELEM OF TASK FOR QUEING XSNT REQ   I275
REQPTR   EQU   12 .      PTR TO REQS ON XSNT AREA QUEUE            I275
SVRBPTR  EQU   13 .      PTR TO SVRB ON XSNT AREA QUEUE            I275
WORKREG  EQU   13 .      USED FOR DEQUEUEING REQS                  I275
NEWPTR   EQU   13 .      PTR TO NEW IN DISP FOR TASK SWITCH        I275
DISPREG  EQU   13 .      ADDR FOR ENTRY IN DISP FOR TASK SWITCH    I275
TCBREG   EQU   13 .      ADDR OF XSNT AREA LOADING TASK'S TCB      I275
LSVRB    EQU   13 .      ADDR OF XSNT AREA LOADING TASK'S SVRB     I275
RGTSTASK EQU   13 .      PTR TO TCB OF TM SLC REQ PREV IN FINCH    I275
SVRBREG  EQU   13 .      PTR TO SVRB OF TM SLC REQ PREV IN FINCH   I275
RG1      EQU   1 .       FETCH ERROR ABEND CODE FOR ABTERM         I275
RG0      EQU   0 .       ADDR OF REQ ABENDING FOR FETCH ERROR      I275
*           DISPLACEMENTS USED FOR XSNT AREA QUEUE                 I275
RBPSW    EQU   16 .      DISP OF RPSW IN RB                        I275
RBPSWAD  EQU   21 .      DISP OF ADDR IN RPSW IN RB                I275
RBWAIT   EQU   28 .      DISP OF WAIT CNT IN RB                    I275
SVRBWAIT EQU   28 .      DISP OF WAIT CNT IN SVRB                  I275
TMSLCFLG EQU   30 .      DISP OF TM SLC FLG IN TCB                 I275
TCBWT    EQU   33 .      DISP OF NON-DISP FLGS IN TCB              I275
RBNAME   EQU   0 .       DISP OF ACTIVE RB IN TCB                  I275
TCBGRS   EQU   48 .      DISP OF REG SAVE IN TCB                   I275
TCBMSS   EQU   24 .      DISP OF ADDR OF BOUNDARY BOX IN TCB       I275
DISPQUE  EQU   16 .      DISP OF QUEUE IN BB (NEG NUMBER)          I275
QNXTREQ  EQU   0 .       DISP OF PTR TO NXT REQ IN QUEUE           I275
QSVRB    EQU   4 .       DISP OF PTR TO SVRB IN QUEUE              I275
PANICFLG EQU   12 .      DISP OF PANIC FLG IN WORKAREA             I275
*                                                                  I275
*           FLAGS FOR XSNT AREA QUEUE                              I275
TSFLG    EQU   X'01' .   TM SLC FLG IN TCB                         I275
SVCFLG   EQU   X'10' .   FLG IN SVRB FOR LOADED SVC                I275
INWAIT   EQU   X'01' .   WAIT COUNT FOR XSNT REQ                   I275
OUTWAIT  EQU   X'00' .   OUT OF WAIT                               I275
WAIT     EQU   X'FF' .   WAIT FLAGS FOR NON-DISPATCHABLE           I275
OFF      EQU   X'00' .   XSNT AVBLE FOR LOADING                    I275
ON       EQU   X'FF' .   XSNT NOT AVBLE FOR LOADING                I275
PFLG     EQU   X'FF' .   TASK USING PANIC FOR WORKAREA             I275
.TACP2A  ANOP                                                      I275
*                            RB FIELDS.
XRBNM    EQU   0
XRBSZ    EQU   8
XLRBNM   EQU   8                   NAME FIELD - LRB/LPRB          19017
XSTAB    EQU   10
XRBUSE   EQU   12
XRBEP    EQU   12
XRBPSW   EQU   16
XLRBEP   EQU   20                  EP FIELD - LRB/LPRB            19017
XRBQ     EQU   24
XRBLNK   EQU   28
XRBREG   EQU   32
XPRBSZ   EQU   32
XLRBSZ   EQU   16
XRBWLE   EQU   12                                                  I250
XRBREQ   EQU   16                                                  I250
XRBTLPRB EQU   20                                                  I250
XRBTP    EQU   X'C0'
XLOD     EQU   X'20'
XNSVRB   EQU   X'10'
XACTV    EQU   X'40'
XPRVD    EQU   X'20'
XRSCHD   EQU   X'10'
XIOSRB   EQU   X'08'
XTCBPT   EQU   X'80'
XIQE12   EQU   X'04'
XDYN     EQU   X'02'
HEX01    EQU   X'01'                   REFRESHABILITY CODE         OASR
*                                                                  I250
*        MISC EQUATES                                              I250
PIBJPQ   EQU   X'2C'                   OFFSET IN PIB TO JPQ ADDR   I250
ESA1     EQU   96                  OFFSET TO EXSTENDED SA IN SVRB  I250
SVCOLD   EQU   32 .                SVC OLD PSW                BD A49851
SP240    EQU   240 .                                          BD A46470
         EJECT
*LINK CAUSES CONTROL TO PASS FROM THE CALLING ROUTINE, THE LINKOR,
*TO ANOTHER PROGRAM, THE LINKEE, IN SUCH A FASHION THAT WHEN THE
*LINKEE ISSUES RETURN, THE LINKOR WILL REGAIN CONTROL.
*XCTL, HOWEVER, REMOVES THE XCTLOR FROM CORE SO THAT WHEN THE XCTLEE
*ISSUES RETURN, THE PROGRAM TO REGAIN CONTROL IS THE ONE WHICH
*WOULD HAVE REGAINED CONTROL HAD THE XCTLOR ISSUED RETURN.
*BOTH LINK AND XCTL SEARCH THE LOAD LIST TO DETERMINE IF THE
*SPECIFIED PROGRAM IS IN CORE, AND IF NOT, THEN FINCH IS USED AS A
*SUBROUTINE TO BRING THE PROGRAM INTO CORE.
*
*THE LOAD ROUTINE SEARCHES THE LOAD LIST FOR THE SPECIFIED PROGRAM.
*IF IT IS FOUND, THE LOAD ROUTINE ECHES THE PROGRAM'S USE COUNT.
*IF IT IS NOT FOUND, THEN LOAD USES FINCH AS A SUBROUTINE TO BRING
*THE PROGRAM INTO CORE AND THEN SETS THE USE COUNT TO ONE.
         EJECT
         USING *,JBASE
IGC007   EQU   *
IGC008   LR    JBASE,6
         LR    JWORK,JCOMMV        SHOW WORK AREA NOT GOTTEN.
         L     JOR,XRBLNK(JI)
         LA    JOR,0(JOR)   CLEAR HI BYTE SINCE HI BIT ON MEANS    4380
*                           AN XCTL WAS ISSUED                     4380
         SR    14,14
         CLI   XRBPSW+3(JOR),7
         BC    2,XLOAD
         MVC   XRBNM(8,JI),0(15)
         MVC   XRBQ(2,JI),XRBPSW(JOR)
         MVC   XRBQ+2(1,JI),XRBPSW+4(JOR)
         BC    8,XXCTL
XLINK    EQU   *                                                   I250
         AIF   (NOT &ATT).NALK1                                    I250
         SSM   *+1                 INSURE ACTIVE TCB IS DISABLED   I250
         CLC   TCBPIB1(3,JOLD),O+1 SEE IF TCB HAS A PIB            I250
         BE    ENDLK1              IF NOT,BR AROUND JOB PK         I250
*                                  PROCESSING                      I250
         BAL   JZ,JPQSRCH          CHECK IF MODULE IN JPQ          I250
         B     LKONJPQ             FOUND-JEE ADDR NAME FIELD       I250
         B     ENDLK1              NOT FOUND                       I250
LKONJPQ  BAL   JRET,CKJPQN         CHECK IF Q ENTRY USABLE         I250
         B     RIDATT              USABLE                          I250
         B     ENDLK1              NOT USABLE                      I250
         STM   10,1,TCBGRS(JOLD)   IN PROCESS OF LOADING-SAVE      I250
*                                  REGISTERS                       I250
         MVC   XRBPSW(8,JI),ADLNK      SET RESUME PSW              I250
**       B     IEA0DS              GO TO DISPATCHER                I250
         EXTRN IEA0DS                                              I250
         DC    AL4(IEA0DS)         DISPATCHER ADDRESS              I250
         ORG   *-4                                                 I250
         DC    X'47F0'                                             I250
         ORG   *+2                                                 I250
ENDLK1   EQU   *                                                   I250
.NALK1   ANOP                                                      I250
         BAL   JRET,XL2                                            I250
         BC    15,XLINK4           FOUND.
         AIF   (NOT &LPA).XA02                                     LPA
XLINK0   DS    0H .
         BAL   JZ,LPAQSRCH         SEARCH LINK PACK FOR LINKEE     LPA
         B     XLINK4 .            FOUND                          19372
.XA02    ANOP
XLINK1   EQU   *
         BAL   JRET,XFINCH
         DC    X'0002'
         AIF   (NOT &BASE2).NMAT0                                  I250
         BALR  JBASE,0   RE-ESTABLISH BASE ON RETURN FROM FINCH    I250
         LA    14,*-IGC006                                         I250
         SR    JBASE,14                                            I250
         SR    14,14 .                                            20372
.NMAT0   ANOP                                                      I250
XLINK4   EQU   *                                                   I250
         AIF   (NOT &ATT).NEW2                                     I250
*IF CALLER IS ATTACH,HIS RB IS TO BE REMOVED AND FREED             I250
*   IF THE LINKOR IS ATTACH - PRB NAME = 99999999 - IT IS VALID    I250
*        TO BE A MINOR LPRB                                        I250
RIDATT   CLI   XRBNM(JOR),X'F9'    Q.ATTACH IS THE LINKOR          I250
         BNE   ENDLK2              NO.BRANCH                       I250
         MVC   XRBLNK+1(3,JI),XRBLNK+1(JOR)  DEQ ATT PRB           I250
         XC    TCBLLS(4,JOLD),TCBLLS(JOLD)  ZERO LLS PTR           I250
         OI    XSTAB+1(JI),XTCBPT  SET LINK SVRB TO POINT TO TCB   I250
         MVI   XRBNM(JOR),X'00'    DESTROY ATTACH ID               I250
      FREEMAIN R,LV=88,A=(JOR)     FREE THE CORE                 A39714
ENDLK2   EQU   *                                                   I250
         TM    XSTAB(JEE),X'E0'    Q.LRB OR MINOR LPRB             I250
         BC    14,NOABERR          NO.BRANCH                       I250
         TM    XSTAB(JEE),X'10'    Q.LRB                           I250
         BC    1,XF17              YES.ABEND                       I250
         TM    XSTAB+1(JI),XTCBPT  Q.RBLINK FIELD POINTS TO TCB    I250
*                        CANNOT OCCUR UNLESS ATTACH IS THE LINKOR  I250
         BC    8,XF17 .            NO.ABEND                        I250
         AIF   (NOT &IDENT).NTIDX                                A37413
         TM    XSTAB+1(JEE),XACTV IS MINOR ACTIVE                A37413
         BZ    XLINK2 .            NO.USE EXISTING RB            A37413
*        GET CORE FOR A DUMMY RB                                 A37413
         LA    0,32 .              RB LENGTH                     A37413
         BAL   1,*+4 .             INDICATE GETMAIN              A37413
         SVC   10 .                GET CORE FOR RB               A37413
         XC    0(32,1),0(1) .      CLEAR GOTTEN CORE             A37413
         MVC   XRBEP+1(3,1),XRBEP+1(JEE) INITIALIZE EP           A37413
         MVI   XRBSZ+1(1),4 .      SET RB LENGTH                 A37413
         MVC   0(8,1),0(JEE) .     PUT NAME INTO RB              A37413
         OI    XSTAB+1(1),2 .      FLAG TO FREE RB ON EXIT       A37413
         LR    JEE,1 .             INIT JEE WITH RB ADDR         A37413
         B     XLINK2 .            CONTINUE                      A37413
.NTIDX   ANOP                                                    A37413
NOABERR  EQU   * .                                               A37413
         AGO   .NEW3                                               I250
.NEW2    ANOP                                                      I250
         TM    XSTAB(JEE),X'E0'   Q.LRB OR MINOR LPRB              I250
         BC    1,XF17              YES.ABEND                       I250
.NEW3    ANOP                                                      I250
         TM    XSTAB+1(JEE),XACTV
         AIF   (NOT &LPA).XA00                                     LPA
         BC    8,XLINK2            NOT ACTIVE, PROCEED             LPA
         TM    XSTAB+1(JEE),X'0C'  LPA MODULE ?                    LPA
         BC    11,XLINK1           NO,GO TO FINCH                  LPA
         B     XLINK0              YES,GO TO SET UP NEW RB         LPA
         AGO   .ARD
.XA00    ANOP                                                      LPA
         BC    7,XLINK1
.ARD     ANOP                                                      LPA
XLINK2   LA    JX,DEXIT(JCOMMV)
         ST    JX,XRBREG+56(JI)
XLINK6   OI    XSTAB+1(JEE),XACTV
         MVC   XRBPSW(2,JEE),XRBQ(JI) PROPAGATE PSW BITS.
         MVC   XRBPSW+4(1,JEE),XRBQ+2(JI)
         MVC   XRBLNK+1(3,JEE),XRBLNK+1(JI) QUEUE LINKEE BETWEEN LINKOR
         LA    JEE,0(JEE)          AND LINK.
         ST    JEE,XRBLNK(JI)
XLINK7   MVC   XRBPSW+5(3,JEE),XRBEP+1(JEE)
         MVC   XRBREG+60(4,JI),XRBPSW+4(JEE)
         TM    XSTAB+1(JI),XTCBPT  IF XCTL'S SVRB POINTED TO TCB, SET
         BC    8,*+12              BIT TO SHOW THAT XCTLEE'S RB NOW
         OI    XSTAB+1(JEE),XTCBPT POINTS TO TCB.
         NI    XSTAB+1(JI),255-XTCBPT
XLINK3   LM    0,1,XRBREG(JI)
         L     15,XRBREG+60(JI)
*        THE CODE FOR STAE HAS BEEN ALTERED TO FIX APAR 24380      4380
         LTR   JOR,JOR     Q.XCTL IN PROCESS. HI BIT ON IMPLIES IT 4380
         BNL   OUT     NO.EXIT                                     4380
         LA    JX,TCBNSTAE(JOLD)       ADDRESS OF TCBNSTAE         4380
STAELOOP L     JY,0(JX)            ADDRESS OF SCB                  4380
         LTR   JY,JY               Q.  SCB PRESENT                 4380
         BZ    NOSCB               NO, BRANCH                      4380
         LA    JOR,0(JOR)   SET REGS UP FOR COMPARE                4380
         L     JZ,12(JY)    LOAD SCB-RB POINTER                    4380
         LA    JZ,0(JZ)                                            4380
         CR    JOR,JZ   Q.XCTLING PROGRAM ISSUES STAE              4380
         BNE   NOSCB      NO.EXIT                                  4380
         TM    0(JX),X'20'   Q.XCTL OPTION SPECIFIED               4380
         BO    STAEXCTL    YES.UPDATE SCB-RB ADDRESS FIELD         4380
         OI    8(JY),X'80'     FLAG FOR EXIT TO FREE SCB           4380
         B     CONT     DON'T UPDATE SCB-RB ADDRESS FIELD IF       4380
*                       XCTL OPTION IS NOT SPECIFIED               4380
STAEXCTL ST    JEE,12(JY)   SCB RB-ADDRESS FIELD POINTS TO XCTLEE  4380
CONT     LR    JX,JY   UPDATE SCB ADDRESS                          4380
         B     STAELOOP   BR TO CONTINUE SCB SEARCH                4380
NOSCB    EQU *                                                     4380
OUT      LM    0,9,XRBREG(JI)                                    A67032
         SVC   EXIT                                              A67032
IEAEXT   EQU   *                                                 A67032
         EJECT
XXCTL    LR    JEE,JOR             JEE = JOR IF SVRB.
         O     JOR,O   TURN ON HI BIT TO INDICATE AN XCTL          4380
         TM    XSTAB(JOR),X'C0' .  Q. POSSIBLE SVRB ?          BD M5024
         BNO   XXCTL1 .            NO                          BD M5024
         TM    XSTAB(JOR),X'E0' .  Q. MINOR LPRB ?             BD M5024
         BO    XF18 .              YES ABEND                   BD M5024
         AIF   (NOT &RESVC).X11
         NI    XSTAB(JEE),X'F7'         RESET RES. TYPE 3 IND. BIT 0051
         L     JX,IEAARSV1         YES, TYPE 3-4, L PTR RESVC LOAD LIST
         L     JY,XRBNM(JI)        L PTR TO NAME
         BAL   JRET,XL21           SEARCH LIST
         B     XXCTL5              FOUND
         LR    JEE,JOR             NOT FOUND, RESET JEE, GO TO FINCH
.X11     ANOP
         MVC   XRBNM+4(4,JI),SVCDCB(JCOMMV) USE SVC DCB FOR SVC XCTL.
         BAL   JRET,XFINCH
         DC    X'0008'
         AIF   (NOT &BASE2).NMAT1                                  I250
         BALR  JBASE,0   RE-ESTABLISH BASE ON RETURN FROM FINCH    I250
         LA    14,*-IGC006                                         I250
         SR    JBASE,14                                            I250
         SR    14,14 .                                            20372
.NMAT1   ANOP                                                      I250
XXCTL0   EQU   *
         OI    XSTAB(JEE),X'D0'    TYPE III SVC.
         BC    15,XLINK7
         AIF   (NOT &LPA).XA04
XXCTL1   TM   XSTAB(JOR),X'80'                                     LPA
         BC    1,XF18              XCTL FROM LRB,MINOR,SIRB OR IISURB
         TM    XSTAB(JOR),X'40'
         BC    1,XF18              XCTL FROM IRB
         AGO   .XA05
.XA04    ANOP
XXCTL1   TM    XSTAB(JOR),X'C0'
         BC    7,XF18   XCTL FROM AN IRB,SIRB, OR TYPE 2 SVRB    A29096
.XA05    AIF   (NOT &PROTECT).X123
   TM  TCBFLGS+2(JOLD),X'02'      IS SCHED XCTLING TO USER
         BC    8,XXCTL10               BRANCH IF NO
     MVZ  XRBQ+1(1,JI),TCBPKF(JOLD)   GIVE XCTLEE USERS KEY
.X123    ANOP                                                     M3267
XXCTL10  MVC   XRBLNK+1(3,JI),XRBLNK+1(JOR)  DEQUEUE XCTLOR FROM RB Q.
         LA    JX,ESA1(JI) .   ADDR OF SVRB ESA               BD A37447
         L     JY,XRBNM(JI) .  ADDR OF NAME OR DE             BD A37447
         MVC   ESA1(44,JI),0(JY) .MOVE NAME OR DE TO ESA      BD A37447
         N     JY,O .          ISOLATE DE INDICATOR           BD A37447
         OR    JX,JY .         SET ESA ADDR                   BD  M1706
         ST    JX,XRBNM(JI) .  RESET NAME/DE ADDR             BD A37447
         TM    XSTAB+1(JOR),XTCBPT IF XCTLOR'S RB POINTED TO TCB, SET
         BC    8,*+8               BIT TO SHOW THAT XCTL'S SVRB NOW
         OI    XSTAB+1(JI),XTCBPT  POINTS TO TCB.
         NI    XSTAB+1(JOR),255-XTCBPT-XACTV
         LA    JX,0(JOR)
         TM    XSTAB(JOR),XLOD
         BNO   NOTLPRB .           NOT LOADED                    A32098
         CLI   XRBUSE(JOR),0 .     USE COUNT ZERO                A32098
         BNE   XXCTL2 .            NO - DONT FREE                A32098
         LR    JX,JOR .            RB ADDRESS                     20272
         SH    JX,EIGHT .          ADDRESS CHAIN FIELD            20272
         LM    JX,JY,0(JX) .       DEQ                            20272
         ST    JX,0(0,JY) .            THE                        20272
         ST    JY,4(0,JX) .                LPRB                   20272
         L     1,XRBSZ(JOR) .      GET SIZE                      A32098
         SRL   1,16 .              ISOLATE                       A32098
         LA    1,1(0,1) .          ADD CHAINING FIELD            A32098
         SLL   1,3 .               MULT BY 8                     A32098
         LR    0,1 .               IN 0 FOR FREEMAIN             A32098
         LA    1,0(JOR) .          RB ADDRESS                    A32098
         SH    1,EIGHT .           ADDRESS CHAIN FIELD           A32098
         SVC   REGMAIN .           FREEMAIN                      A32098
         B     XXCTL6 .            AND CONTINUE                  A32098
NOTLPRB  EQU   * .                                               A32098
.X3      ANOP
         L     0,XRBSZ(0,JOR)
         SRL   0,16
         SLL   0,3
         AIF   (NOT  &HIAR).XXLCS01                                LCOA
*        THIS CODE FREE'S XCTLOR'S WHO ARE SCATTER LOADED          LCOA
         TM    XSTAB(JOR),X'02'        SCATTER RB WITH XLIST       LCOA
         BZ    XXLCSL02                NO - BRANCH, YES - FALL     LCOA
XXLCSL01 L     0,32(JOR)               H0 BLOCK SIZE               LCOA
         LTR   0,0                      Q.IS ANY PART IN H0        LCOA
         BZ    XXLCSF01                   NO-BRANCH                LCOA
         L     1,40(JOR)               H0 BLOCK ADDRESS            LCOA
         SVC   REGMAIN                 FREE H0 BLOCK               LCOA
XXLCSF01 EQU   *                                                   LCOA
         L     0,36(JOR)               H1 BLOCK SIZE               LCOA
         LTR   0,0                      Q.IS ANY PART IN H1        LCOA
         BZ    XXLCSF02                   NO-BRANCH                LCOA
         L     1,44(JOR)               H1 BLOCK ADDRESS            LCOA
         SVC   REGMAIN                 FREE H1 BLOCK               LCOA
XXLCSF02 EQU   *                                                   LCOA
         L     0,XRBSZ(0,JOR)          RB SIZE                     LCOA
         SRL   0,16                    CLEAR XSTAB                 LCOA
         SLL   0,3                     CONV. SIZE TO D WORDS       LCOA
XXLCSL02 EQU   *                                                   LCOA
.XXLCS01 ANOP                                                      LCOA
         LA    1,0(JOR)
         SVC   REGMAIN
.X4      ANOP
XXCTL6   EQU   *
         AIF   (NOT &IDENT).X2
         TM    XSTAB(JOR),X'10'
         BC    8,XXCTL2            Q. THERE EXIST NO MINORS.
         L     JX,XRBQ(JX)
         LTR   JX,JX
         BC    8,XXCTL2
         LA    0,8(JX)
         MVI   XSTAB+8(JX),X'20' . FAKE OUT DELETE                19372
         SVC   DELETE
.X2      ANOP
XXCTL2   EQU   *                                                   I250
         AIF   (NOT &ATT).NAXTL1                                   I250
         SSM   *+1                 INSURE ACTIVE TCB IS DISABLED   I250
         CLC   TCBPIB1(3,JOLD),O+1 SEE IF TCB HAS LIB              I250
         BE    ENDXTL1             IF NOT,BR AROUND PIB            I250
*                                  PROCESSING                      I250
         BAL   JZ,JPQSRCH          CHECK IF MOD ON JPQ             I250
         B     XTLONJP             FOUND                           I250
         B     ENDXTL1             NOT FOUND                       I250
XTLONJP  BAL   JRET,CKJPQN         IS COPY USABLE                  I250
         B     XLINK6              YES                             I250
         B     ENDXTL1             NO                              I250
         STM   10,1,TCBGRS(JOLD)   IN PROCESS OF LOADING-SAVE      I250
*                                  REGISTERS                       I250
         MVC   XRBPSW(8,JI),ADXCTL     SET RESUME PSW              I250
**       B     IEA0DS              GO TO DISPATCHER                I250
         DC    AL4(IEA0DS)         DISPATCHER ADDRESS              I250
         ORG   *-4                                                 I250
         DC    X'47F0'                                             I250
         ORG   *+2                                                 I250
ENDXTL1  EQU   *                                                   I250
.NAXTL1  ANOP                                                      I250
         BAL   JRET,XL2            SEARCH LL FOR XCTLEE            I250
         BC    15,XXCTL3           FOUND.
         AIF   (NOT &LPA).X5
XXCTL1A  EQU   * .
         BAL   JZ,LPAQSRCH             SEARCH LPA FOR XCTLEE       LPA
         B     XLINK6                                              LPA
.X5      ANOP
XXCTL4   EQU   *
         BAL   JRET,XFINCH
         DC    X'0006'
         AIF   (NOT &BASE2).NMAT2                                  I250
         BALR  JBASE,0   RE-ESTABLISH BASE ON RETURN FROM FINCH    I250
         LA    14,*-IGC006                                         I250
         SR    JBASE,14                                            I250
         SR    14,14 .             FOR ABEND CODE GENERATION     A40754
.NMAT2   ANOP                                                      I250
XXCTL3   TM    XSTAB(JEE),X'E0'
         BC    1,XF17              Q. XCTLEE IS LRB OR A MINOR.
         TM    XSTAB+1(JEE),XACTV
         BC    14,XLINK6                                           LPA
         AIF   (NOT &LPA).XLPA2
         TM    XSTAB+1(JEE),X'0C'  LPA MODULE                      LPA
         BC    4,XXCTL1A           YES,GO TO BUILD NEW RB          LPA
         BC    11,XXCTL4           NO,GO TO FINCH                  LPA
         AGO   .XLPA3
.XLPA2   ANOP
         BC    1,XXCTL4
.XLPA3   ANOP
         AIF   (NOT &RESVC).XHOCH
XXCTL5   MVC   XRBEP+1(3,JOR),XRBEP+1(JEE) GET RESIDENT ENTRY POINT
         MVC   XRBNM+4(4,JOR),XRBNM+4(JEE)   UPDATE RBNAME FIELD   9739
         LR    JEE,JOR             RESET JEE TO JOR BECAUSE OF SEARCH
         OI    XSTAB(JOR),X'08'         SET RES. TYPE 3 IND BIT ON 0051
         B     XXCTL0
.XHOCH   ANOP
         EJECT
XLOAD    LR    15,0                                              A67422
         N     0,O                 PARAMETERS.
         LA    JX,ESA1+4(JI) .     ADDR OF SVRB ESA+4         BD A39933
         OR    0,JX .              INTO REG 0-DE PRESERVED    BD A39933
         LTR   15,15                   DE PARAM                  A67422
         BC    4,DDE                   YES                       A67422
         LPR   15,15                                             A67422
         MVC   ESA1+4(8,JI),0(15)      MOVE NAME TO SVRB         A67422
         B     DDE2                                              A67422
DDE      EQU   *                                                 A67422
         LPR   15,15                                             A67422
         MVC    ESA1+4(44,JI),0(15) MOVE NAME/DE TO SVRB ESA  BD A39933
DDE2     EQU   *                                                 A67422
         STM   0,1,XRBNM(JI)
         AIF   (NOT &ATT).NOAT1                                    I250
         CLC   TCBPIB1(3,JOLD),O+1 SEE IF TCB HAS PIB              I250
         BE    NOPIB               IF NOT,BR AROUND JOB PK         I250
*                                  PROCESSING                      I250
*SEARCH JOB PACK LIST FOR DESIRED MODULE                           I250
BACKIN   SSM   *+1                 INSURE ACTIVE TCB IS DISABLED   I250
         BAL   JZ,JPQSRCH          SEARCH JOB PACK FOR MODULE      I250
         B     LDONJP              FOUND                           I250
         B     BLDFRB              NOT FOUND                       I250
LDONJP   LR    JWORK,JEE           SAVE ADDR OF ENTRY              I250
         BAL   JRET,XL2            SEARCH LOAD LIST-IF FOUND,      I250
*                                  THE LL ENTRY IS A MINOR AND     I250
*                                  USED                            I250
         B     XLOAD1              NOTE USER WILL BE TERMINATED    I250
         LR    JEE,JWORK           RESTORE ADDR OF JP ENTRY        I250
         B     ONJPQ                                               I250
BLDFRB   GETMAIN R,LV=32,SP=240    GET CORE FOR FRB                I250
         XC    0(32,R1),0(R1)      ZERO CORE                       I250
         L     JX,TCBPIB(JOLD)                                     I250
         LA    JX,PIBJPQ(JX)       ADDR OF PIB FIELD IN NEW        I250
         IC    JZ,0(JX)                                            I250
         ST    JX,4(R1)            FRB LAST FIELD                  I250
         L     JY,0(JX)            JY PTS TO LAST ENTRY            I250
         ST    R1,0(JX)                                            I250
         ST    JY,0(R1)            SET NEW PTR TO OLD              I250
         LTR   JY,JY            Q. FIRST ON JPQ                    I250
         BZ    BIGBUG             YES-BRANCH                       I250
         ST    R1,4(JY)            SET OLD PTR TO NEW              I250
BIGBUG   ST    R1,ESA1(JI)        SAVE FRB ADDR IN ESA             I250
         L     JY,XRBNM(JI)                                        I250
         MVC   8(8,R1),0(JY)       MOVE MOD NAME TO FRB            I250
         LA    JY,X'50'            SET STAB FIELD                  I250
         STC   JY,XSTAB+8(R1)      TO SHOW RB IS FRB               I250
         ST    JOLD,XRBREQ+8(R1)   SET REQUESTORS ADDR             I250
         STC   JZ,0(JX)            RESTORE CNT OF SUBTASKS         I250
         L     R0,XRBNM(JI)       RESTORE PTR TO OBJ NAME          I250
         B     ENDAT1                                              I250
ONJPQ    CLI   XSTAB(JEE),X'50'    IS RB AN LPRB OR LRB            I250
         BC    7,XLOAD2            YES                             I250
*RB IS AN FRB AND THIS REQUEST IS TO BE DEFERRED PENDING           I250
* COMPLETION OF THE REQUEST REPRESENTED BY THE FRB                 I250
         LA    JRET,LOADOUT-8      SET RETURN ADDR                 I250
         B     LOADIN              GO BLD WLE                      I250
LOADOUT  MVC   XRBPSW(8,JI),ADBACK     SET RESUME PSW              I250
         STM   10,1,TCBGRS(JOLD)   SAVE REGS LIKE DISP             I250
**       B     IEA0DS                                              I250
         DC    AL4(IEA0DS)         DISPATCHER ADDRESS              I250
         ORG   *-4                                                 I250
         DC    X'47F0'                                             I250
         ORG   *+2                                                 I250
ENDAT1   EQU   *                                                   I250
.NOAT1   ANOP                                                      I250
     AIF  (NOT &AM).X60
   LR  JY,0    L PTR TO OBJECT NAME
   CLC  0(6,JY),IGGNAME    Q. BEGIN WITH 'IGG019'
   BNE  XLOAD0    NO GO TO NEXT SEARCH
   BAL  JRET,IEAAXL0   YES-SEARCH RES.ACCESS METHODS
         AIF   (&ATT).ATT2                                         I250
         B     XLOAD3                                              I250
         AGO   .NOAT2                                              I250
.ATT2    ANOP                                                      I250
         B     REMVJP1             FOUND                           I250
         B     XLOAD0              NOT FOUND                       I250
REMVJP1  BAL   JRET,FRBSUB         GO HANDLE FRB                   I250
         B     XLOAD3                                              I250
.NOAT2   ANOP                                                      I250
XLOAD0  EQU  *
.X60   ANOP
         BAL   JRET,XL2            SEARCH LOAD LIST FOR LOADEE.
         AIF   (&ATT).ATT3                                         I250
         B     XLOAD1                                              I250
         AGO   .NOAT3                                              I250
.ATT3    ANOP                                                      I250
         B     REMVJP2             FOUND                           I250
         SSM   *+1                 DISABLE                         I250
         B     ENDAT3                                              I250
REMVJP2  BAL   JRET,FRBSUB         GO HANDLE FRB                   I250
         B     XLOAD1                                              I250
ENDAT3   EQU   *                                                   I250
.NOAT3   ANOP                                                      I250
         AIF   (NOT &LPA).XA08
         LA    RG0,SP240 .         SET SUB POOL 240           BD A46470
         BAL   JZ,LPAQLOAD         SEARCH FOR MODULE IN LPA.  BD A46470
         B     *+8                 FOUND                           LPA
         B     XGOFINCH            NOT FOUND,GO TO FINCH           LPA
         LA    JY,8                PUT INDEX INTO JY               LPA
         SR    JEE,JY              JEE PTS TO XRBSVCC FIELD        LPA
         AIF   (NOT &ATT).CHLLS
         L     JY,TCBPIB(JOLD) .   CHAIN                          19372
         LA    JY,PIBJPQ(JY) .     LPRB                           19372
         L     JX,0(JY) .          TO                             19372
         STM   JX,JY,0(JEE) .      THE                            19372
         ST    JEE,4(JX) .         JPAQ                           19372
         ST    JEE,0(JY) .                                        19372
         AGO   .CHJPAQ
.CHLLS   ANOP
         LA    JY,TCBLLS(JOLD)     CHAIN                           LPA
         L     JX,0(JY)            LPRB                            LPA
         STM   JX,JY,0(JEE)        TO THE                          LPA
         ST    JEE,4(JX)           LOAD                            LPA
         ST    JEE,0(JY)           LIST                            LPA
.CHJPAQ  ANOP
         LA    JEE,8(JEE)          JEE POINTS TO XRBNAME FIELD     LPA
         NI    XSTAB+1(JEE),X'FD'  TURN OFF BIT WHICH TELLS EXIT   LPA
*                                  TO FREE RB.LPRB MUST STAY ON LL.LPA
         AIF   (NOT &ATT).ATT55                                    I250
         BAL   JRET,FRBSUB    FOUND, REMOVE FRB                    I250
.ATT55   ANOP                                                      I250
         B     XLOAD2                                              LPA
.XA08    ANOP
XGOFINCH MVI   LDCONS+1,4                                          I250
         CLC   SVCDCB+1(3,JCOMMV),XRBNM+5(JI)
         BC    7,*+8
         MVI   LDCONS+1,16                                         I250
         BAL   JRET,XFINCH         NOT FOUND.  FETCH PROGRAM INTO CORE.
LDCONS   DC    X'0004'                                             I250
         AIF   (NOT &BASE2).NMAT3                                  I250
         BALR  JBASE,0   RE-ESTABLISH BASE ON RETURN FROM FINCH    I250
         LA    14,*-IGC006                                         I250
         SR    JBASE,14                                            I250
         SR    14,14 .                                            20372
.NMAT3   ANOP                                                      I250
         SSM   *+1                 DISABLE                         I250
         OI    XSTAB(JEE),X'20'
         SH    JEE,EIGHT           RESET JEE TO ADDR LOAD LIST ELEMENT.
         AIF   (NOT &ATT).NOAT4                                    I250
         L     JY,ESA1(JI)         GET ADDR OF FRB                 I250
         TM    XSTAB+9(JY),X'80'   IS MOD RE-ENT                   I250
         BNZ   REMVJP3             NO                              I250
         L     JY,TCBPIB(JOLD)     GET PIB ADDR                    I250
         LA    JY,PIBJPQ(JY)       ADDR OF PTR TO JPQ              I250
         IC    JRET,0(JY)          SAVE SUBTASK COUNT         BD A39933
         L     JX,0(JY)            PTR TO ENTRY ON JPQ             I250
         STM   JX,JY,0(JEE)        QUEUE NEW RB                    I250
         ST    JEE,4(JX)           TO JPQ                          I250
         ST    JEE,0(JY)                                           I250
         STC   JRET,0(JY)          RESTORE SUBTASK COUNT      BD A39933
         LA    JRET,ENDAT4         SET EXIT                        I250
         C     JOLD,TCBJSE(JOLD)       LOAD FROM JOBSTEP           I250
         BE    FRBSUB                  YES - GO FREE FRB           I250
         L     JX,TCBMSS(JOLD)         GET GQE Q PTR               I250
         L     JY,0(JX)                GET PTR TO 1ST GQE          I250
         LA    JY,0(JY)                                            I250
         LA    JZ,8                                                I250
         LNR   JZ,JZ                                               I250
         AR    JZ,JEE                  GET ADDR GQE                I250
LOOPCOM  CR    JZ,JY                   IS THIS THE GQE             I250
         BE    REPAFRE                 YES - DEQ & FREE            I250
         LR    JX,JY                                               I250
         L     JY,0(JX)                                            I250
         LA    JY,0(JY)                                            I250
         LTR   JY,JY                   END OF QUEUE REACHED        I250
         BZ    FRBSUB                  YES - SERCH NO MORE         I250
         B     LOOPCOM                 CHECK MORE                  I250
REPAFRE  MVC   0(4,JX),0(JY)           DEQ THE GQE                 I250
         FREEMAIN  R,LV=8,A=(JZ),SP=240                            I250
         B     FRBSUB                                              I250
REMVJP3  BAL   JRET,FRBSUB         GET RID OF FRB                  I250
.NOAT4   ANOP                                                      I250
         LA    JY,TCBLLS(JOLD)
         L     JX,0(JY)
         STM   JX,JY,0(JEE)
         ST    JEE,4(JX)
         ST    JEE,0(JY)
ENDAT4   EQU   *                                                   I250
         LA    JEE,8(JEE)
XLOAD1   EQU   *
     AIF  (NOT &IDENT).X6
         TM    XSTAB(JEE),X'E0'
         BC    12,XLOAD2           Q. NEITHER AN LRB NOR A MINOR.
         TM    XSTAB(JEE),X'10'
         BC    8,XF19              Q. MINOR.
.X6      ANOP
XLOAD2   IC    JX,XRBUSE(JEE)      ECHE USE COUNT.
         LA    JX,1(JX)
         STC   JX,XRBUSE(JEE)
XLOAD3   EQU  *
         MVC   XRBREG+1(3,JI),XRBEP+1(JEE) RETURN EP IN R0.
         MVI   XRBREG(JI),0
         BC    15,XLINK3
    AIF  (NOT &AM).X61
IEAAXL0   EQU  *
   L  JY,XRBNM(JI)     L  PTR TO OBJECT NAME
   L  JX,IEAARAM4       L PTR TO SYSLL OF ACCESS METHODS
   B  XL21
.X61  ANOP
XL2      L     JY,XRBNM(JI)        JY ADDRESSES PROGRAM NAME.
         L     JX,TCBLLS(JOLD)     SEARCH LOAD LIST FOR LXLEE.
         LA    JX,0(JX)                ZERO HIGH BYTE              I250
XL21     LTR   JX,JX
         BC    8,4(JRET)
         LA    JEE,8(JX)
         CLC   XRBNM(8,JEE),0(JY)
         BCR   8,JRET
         L     JX,0(JX)
         LA    JX,0(JX)                ZERO HIGH BYTE              I250
         BC    15,XL21
         AIF   (NOT &LPA).XA09
*
* LPAQSEARCH SEARCHES FOR THE NEEDED MODULE IN THE LINK PACK AREA. IF
* FOUND, THIS ROUTINE BUILDS A REPLICA OF THE LPRB AND RETURNS ITS ADDR
* IN REG JEE(10)
         AIF   (NOT &ATT).NOATTLP                             BD A46470
* ENTRY FROM LINK AND XCTL (AND ANY EXTERNAL ROUTINE) THE REPLICA WILL
* BE GETMAINED FROM SUBPOOL ZERO. THIS ALLOWS ABEND TO FREE BY GQE
* QUEUE FOR ALL ACTIVE RB'S ON SUBTASK TERMINATION.
* NO GQE WILL BE BUILT FOR A LOAD REQUEST FOR A SUBTASK TO ALLOW THE
* REPLICA TO REMAIN ON THE JPAQ ON SUBTASK TERMINATION.
.NOATTLP ANOP                                                 BD A46470
* ENTRY FROM LOAD REG 0 WILL CONTAIN SUBPOOL 240
LPAQSRCH SR    RG0,RG0 .          SET SUBPOOL 0               BD A46470
LPAQLOAD DS    0H .                                           BD A46470
         L     JY,XRBNM(JI)       POINT TO MODULE NAME
         L     JX,LPAQ(JCOMMV)
         BALR  JBASE,0
         USING *,JBASE             SET UP ADDR. FOR EXTERNAL MODULES/
         L     JBASE,JBASEAD       RESET ADDRESS TO BEGINNING
         USING IGC007,JBASE        OF THIS PROGRAM
         BAL   JRET,XL21           SEARCH LINK PACK AREA
         B     LPA1                FOUND
         B     4(JZ)               NOT FOUND,EXIT
LPA1     DS    0H .                                           BD A46470
         LR    JEE,RG0 .           PUT SUB POOL INTO REG FOR GETMAIN
         GETMAIN R,LV=48,SP=(JEE)  GET CORE FOR RB            BD A46470
         LR    JEE,R1              LOAD ADDRESS OF CORE
         MVC   0(40,JEE),0(JX)     MOVE LPRB TO CORE
         XC    0(8,JEE),0(JEE) .   ZERO CHAIN POINTERS            M1182
         LA    JX,8(JX)            INCRE JX TO POINT TO NAME FIELD
         ST    JX,40(JEE)          SAVE FOR USE BY IDENTIFY
         LA    JEE,8(JEE)          JEE POINTS TO NAME
         SR    JRET,JRET
         STC   JRET,XRBUSE(JEE)    ZERO USE COUNT
         ST    JRET,XRBQ(JEE)      PUT ZERO IN MINOR CHAINING FIELD
         LA    JRET,5
         STH   JRET,XRBSZ(JEE)     SIZE IS 32 BYTES WITHOUT LLE
         NI    XSTAB+1(JEE),X'BB' SET INACTIVE AND BITS 4&5 TO 0&1 LPA
         OI    XSTAB+1(JEE),X'1A'  SET REENT & DYNAMIC ATTR BITS   LPA
*     ALL PROGRAMS IN THE LPA ARE REENTRANT                        LPA
         NI    XSTAB(JEE),X'0F'
         OI    XSTAB(JEE),X'20'    INDICATE THAT RB IS LPRB
         B    0(JZ)               RETURN FOUND
JBASEAD  DC    A(IGC007)
.XA09    ANOP
         EJECT
         AIF   (NOT &ATT).ATSBS                                    I250
* THIS SECTION OF CODE PREFORMS LOAD PROCESSING FOR THOSE TASKS    I250
* WHO DO NOT HAVE PIBS (NIP AND MASTER SCHEDULER). THIS IS DONE    I250
* TO AVOID JOB PACK PROCESSING.                                    I250
*                                                                  I250
NOPIB   LR    JY,0                 LOAD POINTR TO OBJECT NAME      I250
         AIF   (NOT &AM).NOTAM                                     I250
         CLC   0(6,JY),IGGNAME     Q. BEGIN WITH IGG019            I250
         BNE   XLOADX              NO. GO TO NEXT SEARCH.          I250
         BAL   JRET,IEAAXL0        YES. SEARCH RES. ACCESS METH.   I250
         B     XLOAD3                                              I250
.NOTAM   ANOP                                                      I250
XLOADX   EQU   *                                                   I250
         BAL   JRET,XL2                                            I250
         B     XLOAD1                                              I250
         AIF   (NOT &LPA).NOLPCD                                   I250
         ENTRY XLOADX1                                           A69888
XLOADX1  EQU   *                                                 A69888
         LA    RG0,SP240 .         SET SUBPOOL 240            BD A46470
         BAL   JZ,LPAQLOAD     Q.MODULE IN LPA                BD A46470
         B     *+8      YES.BRANCH                                 I250
         B     NOPIBLPA     NO.NOT IN LPA                          I250
         LA    JY,8                                                I250
         SR    JEE,JY     JEE POINTS TO XRBSVCC                    I250
         LA    JY,TCBLLS(JOLD)         CHAIN                       I250
         L     JX,0(JY)                LPRB                        I250
         STM   JX,JY,0(JEE)            TO THE                      I250
         ST    JEE,4(JX)               LOAD                        I250
         ST    JEE,0(JY)               LIST                        I250
         LA    JEE,8(JEE)    JEE POINTS TO XRBNAME                 I250
         NI    XSTAB+1(JEE),X'FD'   DON'T FLAG RB TO BE FREED      I250
*                                   BY EXIT. IT MUST REMAIN ON     I250
*                                   THE LOAD LIST                  I250
         B     XLOAD2                                              I250
NOPIBLPA EQU   *                                                   I250
.NOLPCD  ANOP                                                      I250
         MVI   LDCONSX+1,4                                         I250
         L     JCOMMV,CVTPTR                                       I250
         CLC   SVCDCB+1(3,JCOMMV),XRBNM+5(JI)                      I250
         BC    7,*+8                                               I250
         MVI   LDCONSX+1,16                                        I250
         BAL   JRET,XFINCH         NOT FOUND,FETCH PGM INTO CORE   I250
LDCONSX  DC    X'0004'                                             I250
         BALR  JBASE,0                                             I250
         LA    14,*-IGC006                                         I250
         SR    JBASE,14                                            I250
         SR    14,14 .                                            20372
         OI    XSTAB(JEE),X'20'                                    I250
         SH    JEE,EIGHT           RESET JEE TO ADDR LL ELEM       I250
         B     REMVJP3+4                                           I250
*                                                                  I250
*THIS SUBROUTINE SEARCHES THE JOB PACK QUEUE LOOKING FOR AN        I250
*ENTRY THAT MATCHES THE NAME OF THE REQUESTED MODULE. IF FOUND A   I250
* BRANCH IS TAKEN ON THE REGISTER JZ. IF NOT FUUND, EXIT IS TO     I250
* JZ + 4.                                                          I250
*                                                                  I250
JPQSRCH  L     JX,TCBPIB(JOLD)     GET PIB ADDR                    I250
         LTR   JX,JX               IS THERE A PIB                  I250
         BZ    4(JZ)               NO. RETURN                      I250
         L     JX,PIBJPQ(JX)       GET ADDR FIRST MOD IN JP        I250
         LA    JX,0(JX)            CLEAR BYTE                      I250
         L     JY,XRBNM(JI)        JY PTS TO REQ MOD NAME          I250
         BAL   JRET,XL21           SEARCH LIST                     I250
         B     0(JZ)               FOUND                           I250
         B     4(JZ)               NOT FOUND                       I250
         EJECT
*THIS SUBROUTINE IS INVOKED BY LINK AND XCTL TO CHECK IF AN RB     I250
*FOUND ON JPQ CAN BE USED IN THE LINK OR XCTL. IF THE MODULE       I250
*CANNOT BE USED. EACH ROUTINE WILL LOAD A COPY. IF AN FRB IS       I250
*FOUND, HOWEVER, BOTH ROUTINES DEFER THE CURRENT REQUESTOR         I250
*UNTIL THE FIRST REQUEST IS FULFILLED                              I250
*
*        EXITS                                                     I250
*           1. TO ADDR IN JRET-MODULE AVAILABLE                    I250
*           2. TO ADDR IN JRET+4-MODULE NOT USABLE                 I250
*           3. TO ADDR IN JRET+8-MODULE REQ TO BE DEFERED          I250
*                                                                  I250
*                                                                  I250
CKJPQN   CLI   XSTAB(JEE),X'50'    IS RB AN LPRB OR LRB            I250
         BC    7,CKAVAIL           NO-IT IS EITHER AN LPRB, LRB    I250
*DEFER REQ BY CHAINING WLE OFF OF FRB AND INCREMENTING RB WAITCT   I250
LOADIN   GETMAIN R,LV=8,SP=240     CORE FOR WLE                    I250
         L     JY,XRBWLE(JEE)      PTR TO OTHER WLE                I250
         ST    JY,0(R1)            QUEUE WLE                       I250
         ST    R1,XRBWLE(JEE)                                      I250
         LA    JY,1                GET WAIT COUNT                  I250
         STC   JY,XRBLNK(JI)       SET SVRB WAITING                I250
         ST    JI,4(R1)            SET ADDR OF SVRB IN WLE         I250
         LR    JZ,14               SAVE REG 14                     I250
         L     14,0(JCOMMV)                                        I250
         L     14,8(14)            GET TASK SWITCH ADDR            I250
         SR    0,0                 SEARCH TCB Q FROM OLD FOR       I250
*                                  NEXT TASK                       I250
         BALR  14,14               GO TO TASK SWITCH               I250
         LR    14,JZ               RESTORE REG                     I250
         B     8(JRET)             DEFER REQ EXIT                  I250
CKAVAIL  TM    XSTAB(JEE),X'E0'    LRB                             I250
         BC    1,4(JRET)           UNAVAILABLE IF YES              I250
         TM    XSTAB+1(JEE),XACTV  MOD ALREADY ACTIVE              I250
         BC    7,4(JRET)           YES-MOD NOT USABLE              I250
         B     0(JRET)             MODULE IS USABLE                I250
         EJECT
FRBSUB   SSM   *+1                 DISABLE                         I250
         L     JZ,ESA1(JI)         GET ADDR OF ENTRY               I250
         LM    JX,JY,0(JZ)         GET NEXT AND LAST               I250
         IC    JZ,0(JY)            SAVE POSSIBLE SUBTASK CNT       I250
         ST    JX,0(JY)             FRB                            I250
         STC   JZ,0(JY)             RESTORE POSSIBLE SUBTASK CNT   I250
         L     JZ,ESA1(JI)         RESTORE FRB PTR                 I250
         LTR   JX,JX                                               I250
         BZ    WLELOOP            BRANCH                           I250
         ST    JY,4(JX)            DEQ THE                         I250
WLELOOP  L     JY,XRBWLE+8(JZ)     GET MOST REC REQ                I250
         LTR   JY,JY               ANY LEFT                        I250
         BZ    NOWLE              NO                               I250
         MVC   XRBWLE+8(4,JZ),0(JY) DEQ WLE                        I250
         L     JX,4(JY)            GET ADDR SVRB                   I250
         SR    JWORK,JWORK         GET ZERO                        I250
         IC    JWORK,XRBLNK(JX)    GET WAIT CNT                    I250
         BCTR  JWORK,0             SUB 1                           I250
         STC   JWORK,XRBLNK(JX)    RESTORE CNT                     I250
         FREEMAIN R,LV=8,A=(JY),SP=240  FREE WLE                   I250
         B     WLELOOP             BRANCH                          I250
NOWLE    FREEMAIN R,LV=32,A=(JZ),SP=240  FREE FRB                  I250
         LR    JX,14               SAVE 14                         I250
         L     14,0(JCOMMV)                                        I250
         L     14,8(14)            GET ADDR TASK SW                I250
         SR    0,0                 NEG VALUE TO                    I250
         BCTR  0,0                 FORCE ALL Q SRCH                I250
         BALR  14,14               GO TO TASK SW                   I250
         LR    14,JX                                               I250
         BR    JRET                RETURN TO CALLER                I250
.ATSBS   ANOP                                                      I250
         AIF   (NOT &RESVC).X99                                    I250
IEAARSV1 DC    A(0)                PTR TO RESIDENT SVC LOAD LIST   I250
.X99     ANOP                                                      I250
IEAARAM4  DC  A(0)    PTR TO SYSLL 1 OF ACCESS METHODS             I250
     AIF  (NOT &AM).XEND                                           I250
IGGNAME  DC  C'IGG019'                                             I250
.XEND   ANOP                                                       I250
         AIF   (NOT &ATT).NOATCN                                   I250
* ADDRS USED BY ATTACH CODE                                        I250
         DS    0F                                                  I250
ADBACK   DC    X'FF040000'                                         I250
         DC    A(BACKIN)                                           I250
         DS    0F                                                  I250
ADLNK    DC    X'FF040000'                                         I250
         DC    A(XLINK)                                            I250
         DS    0F                                                  I250
ADXCTL   DC    X'FF040000'                                         I250
         DC    A(XXCTL2)                                           I250
.NOATCN  ANOP                                                      I250
         EJECT
*FINCH  USES BLDL AND FETCH TO BRING A PROGRAM INTO PROBLEM
*PROGRAM CORE, INTO THE SVC TRANSIENT AREA, OR INTO THE ERROR
*TRANSIENT AREA.
*FINCH IS ENTERED FROM THE EIGHT PROGRAMS SHOWN BELOW.  THE EXPECTED
*CALLING SEQUENCE IS A BAL INSTRUCTION FOLLOWED BY THE INDICATED,
*TWO BYTE ENTRY CODE.  FINCH USES THE ENTRY CODE TO SELECT A STRING
*OF BITS WHICH ARE TESTED IN SEQUENCE DURING THE EXECUTION OF FINCH.
*THESE BIT STRINGS ENABLE FINCH TO INCLUDE OR DELETE THE COMBINATION
*OF FUNCTIONS RELEVENT TO THE PARTICULAR ENTRY SOURCE.
*THE BITS STRINGS ARE CONSTRUCTED AT ASSEMBLY TIME THROUGH THE USE
*OF THE IHBXLENT, IHBXLE, IHBXLIN, IHBXLOUT, AND IHBXLTAB MACROS.
         SPACE   1
*  ENTRY NUMBER  ENTRY SYMBOL  ENTRY SOURCE
*    X'0000'         ATT       ATTACH
*    X'0002'         LNK       LINK
*    X'0004'         LOD       LOAD
*    X'0006'         XCT       XCTL FROM A PROBLEM PROGRAM
*    X'0008'         XCN       XCTL FROM A XSNT PROGRAM
*    X'000A'         XC2       XCTL FROM A XSNT2 PROGRAM
*    X'000C'         SVC       SVC HANDLER, FILLING XSNT
*    X'000E'         EXT       EXIT, REFILLING XSNT.
*    X'0010'         LSV       LOAD FROM SVC LIBRARY.
         SPACE   2
         AIF   ('&STORAGE' EQ 'PRIM').TACP3A                       I275
*     PARM LIST FOR ABEND -- DISP MUST BE DIRECTLY ABOVE           I275
*    ENTRY POINT IEA0FN00 (REF CVT FOR ENTRY POINT)                I275
         SPACE
         AIF   (NOT &BASE2).NMAT7                                  I250
AUFINCH  EQU   *     ESTABLISH BASE FROM THIS POINT                I250
.NMAT7   ANOP                                                      I250
         AIF   (NOT &TSLC).TMSLC0                                  I275
TSSVRB   DC    F'0' .   TM SLC SW--PTR TO TM SLC SVRB REQ          I275
.TMSLC0  ANOP                                                      I275
TSTASK   DC    F'0' .   TM SLC SW--PTR TO TM SLC TCB               I275
TAQUE    DC    F'0' .   HEAD OF XSNT AREA REQ QUEUE                I275
.TACP3A  ANOP                                                      I275
* ATT,XC2,SVC,EXT
IEA0FN00 BALR  JBASE,0
         AIF   (NOT &BASE2).NMAT4                                  I250
         LA    JX,*-AUFINCH      ESTABLISH A BASE FOR FINCH        I250
         USING AUFINCH,JBASE                                       I250
         AGO   .NMAT40                                             I250
.NMAT4   ANOP                                                      I250
         LA    JX,*-IGC006
.NMAT40  ANOP                                                      I250
         SR    JBASE,JX
         L     JCOMMV,XCOMMV       JCOMMV ADDRESSES COMMUNICATION VECTR
         L     JOLD,0(JCOMMV)
         L     JOLD,4(JOLD)        JOLD ADDRESSES CURRENT TCB.
         AIF   (NOT &RERP).XERP3                                  19017
         CLI   1(JRET),X'0A'       Q. REQUEST FOR ERROR ROUTINE   19017
         BNE   XERPRBYP            NO, BR TO BYPASS RERP LOGIC    19017
         L     JERPN,XRBNM+4(JEE)  GET LAST 4 CHAR OF ERP NAME    19017
         CL    JERPN,XSNT2NAM      Q. ERP CURRENTLY IN ERROR T/A  19017
         BE    XF13                YES, BR TO SET T/A PSW         19017
         L     JX,IEAAERP          GET PTR TO ERP LOAD LIST       19017
XERPSRCH LTR   JX,JX               Q. END OF ERP LOAD LIST        19017
         BZ    XERPRBYP            YES, BR TO FETCH PROCESS       19017
         CL    JERPN,XLRBNM+4(JX)  Q. LRB FOR REQUESTED ERP       19017
         BE    XERPRES             YES, BR TO SET RES ERP PSW     19017
         L     JX,0(JX)            CHAIN TO NXT LRB ON LOAD LIST  19017
         B     XERPSRCH            BR TO TEST THIS ENTRY          19017
XERPRES  L     JERPA,XLRBEP(JX)    GET RESIDENT EP ADDRESS        19017
         LA    JERPA,0(JERPA)      STRIP FLAG BYTE                19017
         B     XERPXRES            BR TO FINCH EXIT-RERP FOUND    19017
XERPRBYP EQU   *                                                  19017
         L     JCOMMV,XCOMMV       RESET COMMUNICATION VECTR REG  19017
.XERP3   ANOP                                                     19017
         SR    14,14
         LR    JWORK,JCOMMV        SHOW WORK AREA NOT GOTTEN.
* ALL
XFINCH   EQU   *                                                   1435
         AIF   (NOT &BASE2).NMAT5                                  I250
         BALR  JBASE,0                                             I250
         LA    R15,*-AUFINCH     ESTABLISH A BASE FOR FINCH        I250
         SR    JBASE,R15                                           I250
.NMAT5   ANOP                                                      I250
         SSM   *+1           DISABLE                               1435
         LH    JBR,0(JRET)   GET ENTRY NUMBER FOR BXLE TABLE       1435
         IHBXLENT  JBR,H,TAB,(ATT,LNK,LOD,XCT,XCN,XC2,SVC,EXT,LSV)
         LA    1,XGTCORE+4
         MVI   9(1),X'80'          RESET INDICATOR.
         IHBXLE    (ATT,LNK,XCT,XCN,XC2,SVC,EXT),*+12
         IHBXLE    (LSV),XF1
MMLABEL  MVI  9(1),0         INDISCATE LO CORE REQ
IEAARAM0  EQU  MMLABEL+1     POINT TO IMMEDIATE FIELD-NIP
         IHBXLIN   (ATT,LNK,XCT,XCN,XC2,SVC,EXT)
         SVC   GETMAIN
         L     JWORK,XGTCORE       JWORK ADDRESSES WORK AREA.
         LTR   15,15               R15 HOLDS 4 IF REQ NOT SATISFIED.
         IHBXLE    (XCN,XC2,SVC,EXT),*+8
         IHBXLOUT NOCORE                                           9183
         ORG   *-4
         BC    7,NOCORE            BRANCH TO INDICATE NO CORE      9183
         IHBXLIN   (XCN,XC2,SVC,EXT)
         BC    8,XFINCH1           GO TO XFINCH1 IF REQ SATISFIED.
         IHBXLIN   (LSV)
XF1      LA    JWORK,PANIC
*        MVC   XFPL+13(1,JWORK),IEA0IO02+1 SAVE BYTE AND PSEUDODISABLE.
*        MVI   IEA0IO02+1,X'F0'
         DC    X'D200'
         DC    AL4(IEA0IO02+1)
         DC    AL4(IEA0IO02+1)
         ORG   *-8
         DC    X'600D'
         ORG   *+2
         DC    X'92F0'
         ORG   *+2
.X65     ANOP
         IHBXLOUT  XFINCH1+4
XFINCH1  IHBXLIN   (ATT,LNK,LOD,XCT,XCN,XC2,SVC,EXT,LSV)
         MVI   XFPL+12(JWORK),0
         AIF   (NOT &HIAR).XLCS021                                 LCOA
         MVI   XFPL+20(JWORK),X'00'    CLEAR SCAT IND PARM LIST    LCOA
.XLCS021 ANOP                                                      LCOA
         LA    JX,XBLDL+4(JWORK)
         ST    JX,XFPL+8(JWORK)    INITIALIZE BLDL ADDR IN FPL.
         IHBXLE    (XC2,SVC,EXT),XF2
         LM    0,1,XRBNM(JI)
         IHBXLE    (LNK,LOD,XCT,XCN,LSV),*+8
         LM    0,1,96(JI)
         IHBXLIN   (LNK,LOD,XCT,XCN,LSV)
         LR    JX,0
         MVC   XBLDL+4(8,JWORK),0(JX)  MOVE BLDL OR NAME TO BLDL.
         IHBXLE    (ATT,LNK,LOD,XCT,LSV),*+10
         MVC   XRBNM+4(4,JEE),XBLDL+8(JWORK)
         IHBXLIN   (ATT,LNK,LOD,XCT,LSV)
         SSM   SSM                 ENABLE.
         LA    R1,0(R1)              CLEAR HIARCHY INDICATOR BYTE  LCOA
*                                      WITHIN DCB POINTER          LCOA
         ST    1,XFPL(JWORK)       STORE DCB ADDRESS IN FPL.
         LTR   0,0
         BC    10,XF12             Q.  BUILD LIST NOT PRESENT.
         AIF   (NOT &HIAR).XLCS03                                  LCOA
         MVC   XBLDL+12(36,JWORK),8(JX) MOVE REMAINDER OF BLDL     LCOA
         AGO   .XLCS04                                             LCOA
.XLCS03  ANOP                                                      LCOA
         MVC   XBLDL+12(32,JWORK),8(JX)  MOVE REMAINDER OF BLDL.
.XLCS04  ANOP                                                      LCOA
         IHBXLOUT  XFINCH2
XF2      IHBXLIN   (XC2,SVC,EXT)
         SSM   SSM                 ENABLE.
         IHBXLE    (EXT),XF10
         L     1,SVCDCB(JCOMMV)    INITIALIZE BLDL PARAMETERS.
         MVC   XBLDL+4(8,JWORK),XRBNM(JEE)
         CLI   1(JRET),X'0A' .     REQUEST FOR ERP            BD A57946
         BNE   XNOTERP .           NO                         BD A57946
         MVI   XBLDL+4(JWORK),C'I' RESET I IN ERP NAME        BD A57946
XNOTERP  DS    0H .                                           BD A57946
XF12     IHBXLIN   (ATT,LNK,LOD,XCT,XCN,LSV)
         MVC   XBLDL(4,JWORK),XSVCBLDL+2
         AIF   (NOT &HIAR).XLCS041                                 LCOA
         MVI   XBLDL+3(JWORK),X'2C'    BLDL FOR 44 BYTES WITH LCS  LCOA
.XLCS041 ANOP                                                      LCOA
         LA    0,XBLDL(JWORK)
         STM   2,10,XRGSAV(JWORK)
         L     JX,BLDLADDR(JCOMMV)
         LA    13,XFWA(JWORK)
         BALR  14,JX
         LM    2,10,XRGSAV-XFWA(13)
         SR    14,14               FREEMAN MICKEY MOUSE.
         LTR   15,15
         BC    7,XF11              Q. ERROR IN BLDL OPERATION.
XFINCH2  IHBXLE    (XCN,XC2,SVC),XF4
         TM    XBLDL+26(JWORK),X'02'
         BC    8,XF16              PROGRAM IS NON-EXECUTABLE.
         L     JX,XBLDL+28(JWORK)
         SRL   JX,8
LRBCMPD  EQU   *+2                 COMPARAND FOR LRB SIZE.
         LA    JY,XLRBSZ
         TM    XBLDL+26(JWORK),X'08'
         BC    7,*+8               Q. PROGRAM IS ONLY LOADABLE.
         LA    JY,XPRBSZ
         SR    JZ,JZ
         TM    XBLDL+26(JWORK),X'20'
         BC    8,*+16              Q. PROGRAM IS NOT IN OVERLAY.
         IC    JZ,XBLDL+25(JWORK)
         LA    JZ,3(JZ)
         SRL   JZ,1
         SLL   JZ,3
         LR    0,JY                RB SIZE PLUS
         AR    0,JZ                NOTE LIST SIZE + 8 PLUS
         AR    0,JX                PROGRAM SIZE EQUALS CORE REQUEST.
         SR    JEE,JEE
         AIF   (NOT &HIAR).XLCS1                                   LCOA
         L     R1,XRBREG+60(R5)        POINT TO PARAMATER LIST     LCOA
         CLI   1(JRET),X'06' .     XCTL REQUEST               BD A56044
         BNE   XNOTXCTL .          NO                         BD A56044
         LA    R1,0(R5) .          SET PARM ADDR AT SVRB ADDR BD A56044
XNOTXCTL DS    0H .                                           BD A56044
.XLCS1   ANOP                                                      LCOA
         IHBXLE   (ATT,LNK,XCT),XF5                                LCOA
         AIF   (NOT &HIAR).XLCS2                                   LCOA
         LA    R1,XRBREG(R5)           POINT TO REG SAVE IN RB     LCOA
.XLCS2   ANOP                                                      LCOA
         LA    JEE,8               ADD 8 IF LOADED PROGRAM AND INDICATE
         AR    0,JEE               HIGH CORE REQUEST.
IEAARAM1  EQU  *
*  NOTE REG 0 MUST BE USED TO PERMIT CHANGING THE NEXT INST TO NOP
         O     0,O                     OR  GR 0 WITH O FOR OSCAR   LCOA
XF5      IHBXLIN  (ATT,LNK,XCT)                                    LCOA
         AIF   (NOT &HIAR).XLCS07                                  LCOA
         MVI   XFPL+20(JWORK),X'00'    CLEAR SCAT IND PARM LIST    LCOA
         TM    4(R1),X'02' .       TEST FOR HI=1                  19372
         BO    XFLCS1 .            BRANCH HI=1                    19372
         TM    4(R1),X'01' .       TEST FOR HI=0                  19372
         BO    XFLCS2 .            BRANCH HI=0                    19372
         TM    XBLDL+26(JWORK),X'04'    LOAD ATT = SCATTER         LCOA
         BZ    XFLCS2                  NO DEFLAUT TO HI = 0        LCOA
         LA    0,16(JY)                RB SIZE + EXTENT LIST       LCOA
         AR    0,JEE                   PLUS LOAD LIST EXTENTION    LCOA
         LTR   JEE,JEE                 LOAD LIST EXTENSION=8       LCOA
         MVI   XFPL+20(JWORK),X'F0'    SET SCAT IND PARM LIST      LCOA
         BNH   XFLCS2                  NO - GET RB STORAGE H0      LCOA
         MVI   XFPL+20(JWORK),X'FF'    YES, LLIST INDIC SET        LCOA
         B     XFLCS2                  GET RB STORAGE H0           LCOA
XFLCS1   L     R1,XFLCSV               SET GETMAIN HI=1            LCOA
         B     XFLCS3                                              LCOA
XFLCS2   EQU   *                                                   LCOA
.XLCS07  ANOP                                                      LCOA
         L     R1,O                    GETMAIN NO HIARCHY          LCOA
*                                      OR HIARCHY EQ 0             LCOA
XFLCS3   EQU   *                                                   LCOA
         AIF   (NOT &ATT).NAFN1                                    I250
         CLC   TCBPIB1(3,JOLD),O+1                                 I250
         BNE   PIBON                                               I250
         SVC   REGMAIN                                             I250
         B     ENDFN2                                              I250
PIBON    EQU   *                                                   I250
         LA    JX,4           GET A FOUR                           I250
         CH    JX,0(JRET)     IS CALLER LOAD                       I250
         BE    SAVEDATA       YES                                  I250
         LA    JX,16 .       LSV ENTRY CODE                        I250
         CH    JX,0(JRET)     IS CALLER LOAD FROM SVCLIB           I250
         BNE   ENDFN1         NO                                   I250
SAVEDATA L     JX,ESA1(JI)    GET ADDR OF FRB                      I250
         TM    XBLDL+26(JWORK),X'80'  IS MOD RE-ENT                I250
         BNZ   YESRENT    YES - BRANCH                             I250
         OI    XSTAB+9(JX),X'80'   SET FRB TO SHOW NOT RE-ENT      I250
         B     ENDFN1                                              I250
YESRENT  O     0,SUB240       CORE IS FROM JST CORE                I250
         LR    15,0           LOAD REQUEST SIZE                    I250
         LA    15,0(15)       CLEAR NOISE                          I250
         AH    15,EIGHT            ROUND UP REQ                    I250
         BCTR  15,0                TO MULT OF 8                    I250
         SRL   15,3                AND SAVE IN                     I250
         STH   15,XRBSZ+8(JX)      THE FRB                         I250
         B     LEAVEJX                                             I250
ENDFN1   O     JX,O                    SET NEG                   A74001
LEAVEJX  MVC   NSAV(1),XRBNM+8(JX)     SAVE                      A69853
         MVI   XRBNM+8(JX),X'00'                                 A69853
         SVC   REGMAIN                                           A69853
         MVC   XRBNM+8(1,JX),NSAV      RESTORE                   A69853
         LTR   JX,JX                   WAS FRB ADJ BEFORE GM     A69853
         BM    ENDFN2              NO                              I250
         ST    R1,XRBTLPRB+8(JX)   SAVE CORE ADDR                  I250
         OI    XSTAB+9(JX),X'40'   SAY FINCH DID GM                I250
ENDFN2   EQU   *                                                   I250
         AGO   .NDFN1                                              I250
.NAFN1   ANOP                                                      I250
         SVC   REGMAIN                                             LCOA
.NDFN1   ANOP                                                      I250
         AR    JEE,1               JEE ADDRESSES RB FOR LINKEE, ETC.
         TM    XBLDL+26(JWORK),X'08' . ONLY LOADABLE             A30735
         BO    *+10 .                  YES  CLEAR LRB SIZE ONLY  A30735
         XC    0(XPRBSZ,JEE),0(JEE) CLEAR RB.
         XC    0(16,JEE),0(JEE) .      CLEAR LRB SIZE            A30735
         AIF   (NOT &HIAR).XLCS071                                 LCOA
         TM    XFPL+20(JWORK),X'F0'    SCATTER RB WITH XLIST       LCOA
         BZ    XFLCS4                  NO                          LCOA
         OI    XSTAB(JEE),X'02'        YES - SET STAB              LCOA
XFLCS4   EQU   *                                                   LCOA
.XLCS071 ANOP                                                      LCOA
         CH    JY,LRBCMPD
         BC    7,*+8               Q. NOT AN LRB.
         OI    XSTAB(JEE),X'F0'    SET STAB TO SHOW LRB.
         AR    JY,JEE
         ST    JY,XFPL+4(JWORK)
         AR    JY,JZ
         ST    JY,XFPL+16(JWORK)
         TM    28(JOLD),X'F0'          Q.DOES TCBPKF = ZERO.      4636
         BZ    XFSCHED                 YES,NO FETCH VAL.CHK.      4636
         MVI   XFPL+16(JWORK),X'FF' INDICATE FETCH VALITY CHECKING.
XFSCHED  EQU   *                                                  4636
         AH    0,EIGHT             ROUND UP TO DOUBLE WORD SIZE.
         BCTR  0,0
         SRL   0,3
         IHBXLE    (ATT,LNK,XCT),*+6
         BCTR  0,0
         IHBXLIN   (ATT,LNK,XCT)
         STH   0,XRBSZ(JEE)
         MVC   XRBNM(8,JEE),XBLDL+4(JWORK) SAVE NAME IN RB.
         TM    XBLDL+16(JWORK),2   IF ENTERED WITH ZERO DCB ADDRESS,
         BC    8,*+10              INSERT EITHER JOB LIB DCB ADDRESS OR
         MVC   XFPL+1(3,JWORK),TCBJLB+1(JOLD) LINK LIB DCB ADDRESS
         TM    XBLDL+16(JWORK),1   INTO FETCH PARAMETER LIST.
         BC    8,*+10
         MVC   XFPL+1(3,JWORK),LINKDCB+1(JCOMMV)
         SSM   SSM                 IF PROGRAM OCCUPIES PP CORE, THEN
         IHBXLOUT  XF6
XF10     IHBXLIN   (EXT)
         MVI   XBLDL+15(JWORK),0            INSERT N.
         MVC   XBLDL+18(3,JWORK),XRBNM(JEE) INSERT TTR.
         MVC   XBLDL+26(10,JWORK),XSVCBLDL INSERT STAB BITS AND ZERO EP
         MVC   XBLDL+29(4,JWORK),XRBQ(JEE) INSERT SIZES.
XF4      IHBXLIN   (XCN,XC2,SVC)
         LA    JX,XSNT             INITIALIZE ADDR OF PROBLEM PROGRAM.
         IHBXLE    (XCN,SVC,EXT),*+8
         LA    JX,XSNT2
         IHBXLIN   (XCN,SVC,EXT)
         ST    JX,XFPL+16(JWORK)
         MVC   XFPL+1(3,JWORK),SVCDCB+1(JCOMMV) MOVE SVCDCB ADDR TO FPL
         SSM   *+1                 AND ENTER FETCH DISABLED.
         IHBXLE    (XC2),XF6
         AIF   ('&STORAGE' EQ 'PRIM').TACP1                        I275
         ST    JX,XRBEP(JEE) .  SET UP ENTRY POINT IN SVRB         I275
.TACP1   ANOP                                                      I275
         MVC   XRBNM(4,JEE),XBLDL+18(JWORK) SAVE TTRN IN RB
         MVC   XRBNM+3(1,JEE),XBLDL+15(JWORK)
         MVC   XRBQ(4,JEE),XBLDL+29(JWORK) RECORD SIZES OF XSNT ROUTNS.
         AIF   ('&STORAGE' EQ 'PRIM').TACP2                        I275
XSNTQUES EQU   * .                                                 I275
         SSM   *+1 .   DISABLE FOR INTERRUPTS                      I275
         L     XSNTSVC,XXSNTCC .                                   I275
         CLC   0(8,XSNTSVC),RBNAME(JEE) IS SVC IN XSNT AREA        I275
         BC    8,XSNTEXIT .   YES, BRANCH                          I275
         AIF   (NOT &TSLC).TMSLC1                                  I275
* A PREV TM SLC REQ THAT HAS NOT BEGUN EXECUTION OF ITS LOADED     I275
* SVC CANNOT BE PRE-EMPTED BY ANOTHER TM SLC REQ UNLESS THAT REQ   I275
* IS NO LONGER DISPATCHABLE. HOWEVER, IT CAN BE PRE-EMPTED BY A    I275
* REQ OUTSIDE THE TM SLC GROUP.                                    I275
*                                                                  I275
         TM    TMSLCFLG(JOLD),TSFLG IS THIS REQ TIME-SLICED?       I275
         BC    8,QAVBLE .        NO, CAN PRE-EMPT A TM SLC REQ     I275
         L     RGTSTASK,TSTASK .                                   I275
         LTR   RGTSTASK,RGTSTASK .  WAS THERE A PREV TM SLC REQ?   I275
         BC    8,QAVBLE .          NO, SEE IF XSNT AVBLE TO LOAD   I275
* THIS TASK IS TIME-SLICED & THERE WAS A PREVIOUS TM- SLC REQ      I275
* THAT HAS NOT BEGUN EXECUTION OF ITS SVC. ONLY IF THE PREVIOUS    I275
* REQ IS NON-DISP CAN THIS REQ PRE-EMPT IT & LOAD THE XSNT AREA.   I275
*                                                                  I275
         TM    TCBWT(RGTSTASK),WAIT .    TCB DISP?                 I275
         BC    5,QAVBLE .                NO, PRE-EMPT              I275
         CLC   TSSVRB(4),RBNAME(RGTSTASK) IS SVRB ACTIVE RB        I275
         BC    7,QAVBLE .                 NO, PRE-EMPT             I275
         L     SVRBREG,RBNAME(RGTSTASK) .                          I275
         TM    RBWAIT(SVRBREG),WAIT .     IS SVRB IN WAIT?         I275
         BC    8,TMSLCEXT .               NO, CAN NOT PRE-EMPT     I275
* BRANCH TO GIVE UP TM-SLC BY SETTING 'NEW' TO 0 & GO TO DISP      I275
*                                                                  I275
QAVBLE   EQU   * .                                                 I275
.TMSLC1  ANOP                                                      I275
         CLI   LOADSW,ON .     IS XSNT AREA AVBLE TO LOAD?         I275
         BC    8,QUEREQ .      NO, BRANCH  --LOAD SW IS ON         I275
*** XSNT AREA IS AVAILABLE TO LOAD -- SET UP FOR TASK SWITCH TO    I275
*     XSNT AREA LOADING TASK                                       I275
         XC    0(8,XSNTSVC),0(XSNTSVC) RE-INIT XSNT AREA CONTENT   I275
         AIF   (NOT &TSLC).TMSLC2                                  I275
         XC    TSTASK(4),TSTASK .        RE-INIT TM SLC SW         I275
.TMSLC2  ANOP                                                      I275
         CR    JCOMMV,JWORK .     DOES TASK NEED TO SET UP PANIC   I275
         BC    8,XF1 .   YES, PANIC NOT SET UP - BRNCH TO SET UP   I275
*  SET LOADING SWITCH-- EITHER REGULAR WORK AREA OR                I275
         MVI   LOADSW,ON .           PANIC IS NOW SET UP           I275
         L     TCBREG,XSNTTCB .     SET UP PARMS FOR XSNT AREA     I275
         STM   10,9,TCBGRS(TCBREG) .LOADING TCB BY REQ'S REGS      I275
         ST    TCBREG,FNCHNEW .     SET UP 'NEW' FOR TASK SW       I275
         L     LSVRB,RBNAME(TCBREG) TAKE LOADING                   I275
         MVI   RBWAIT(LSVRB),OUTWAIT .      SVRB OUT OF WAIT       I275
*   SAVE ADDRESS OF REQUESTORS TCB AND WORK AREA INCASE            I275
*     XSNT AREA LOADING TASK PROGRAM CHECKS                        I275
         ST    JWORK,DARPARMS+4 .                                  I275
         ST    JOLD,DARPARMS .                                     I275
*                                                                  I275
*   REQUEST IS PUT ON XSNT AREA REQUEST QUEUE & IN RB WAIT         I275
QUEREQ   EQU   * .                                                 I275
         L     QUEPTR,TCBMSS(JOLD) .                               I275
         LA    WORKREG,DISPQUE .        COMPUTE PTR TO ELEM OF     I275
         SR    QUEPTR,WORKREG .         QUEUE FOR REQ              I275
         L     SVRBPTR,QSVRB(QUEPTR) .                             I275
         LTR   SVRBPTR,SVRBPTR .        IS THIS 1ST REQ FOR TASK   I275
         BC    8,FRST .                 YES, BRANCH                I275
         MVI   RBWAIT(SVRBPTR),OUTWAIT .TAKE 1ST OUT OF WAIT       I275
         BC    15,SECND .               DEQ 1ST & QUEUE 2ND        I275
FRST     EQU   * .                                                 I275
         MVC   QNXTREQ(4,QUEPTR),TAQUE .  PTR TO NXT REQ           I275
         ST    QUEPTR,TAQUE .             PTR TO THIS REQ          I275
SECND    EQU   * .                                                 I275
         ST    JI,QSVRB(QUEPTR) .         PTR TO SVRB              I275
         MVI   RBWAIT(JI),INWAIT .        PUT SVRB IN WAIT         I275
TMSLCEXT EQU   * .                                                 I275
         MVC   RBPSW(8,JI),REENTRY .  SET UP RESUME PSW IN SVRB    I275
         CR    JWORK,JCOMMV .  IS WORK AREA SET UP?                I275
         BC    8,TASKSW .  NO, THEN NOT PSEUDO-DISABLED            I275
         CLI   PANICFLG(JWORK),PFLG DOES TASK HAVE OWN WORK AREA   I275
         BC    7,TASKSW .  YES, NOT PSEUDO-DISABLED                I275
***  TASK IS USING PANIC AND IS PSEUDO-DISABLED --IF TASK          I275
*  SWITCHING FROM REQ TO LOADING TASK, STAY PSEUDO-DISABLED        I275
         CLC   FNCHNEW(4),XSNTTCB .                                I275
         BC    8,LOADING .  BRANCH, DON'T PSEUDO-ENABLE            I275
*        MVC   IEA0IO02+1(1),XFPL+13(JWORK) .      PSEUDO-ENABLE   I275
         DC    X'D2' .                        UNLESS NESTED        I275
         DC    AL3(IEA0IO02+1) .                                   I275
         DC    X'600D' .                                           I275
         L     NEWPTR,NEWDISP CHECK IF 'NEW' HAS BEEN CHANGED TO   I275
         C     JOLD,0(NEWPTR) .HI PRI TASK WHILE PSEUDO-DISABLED   I275
         BC    8,LOADING .BRANCH, NO HIGHER PRI TASK               I275
         MVC   FNCHNEW(4),0(NEWPTR) . YES, SAVE PTR TO             I275
*                                              HIGHER PRI TASK     I275
LOADING  EQU   * .                                                 I275
***   SET UP REQ'S REGISTERS INCASE HAS TO RE-INIT PANIC WITH      I275
*         FETCH PARAMETERS                                         I275
*SHOW PANIC NEEDS TO BE RE-INIT BY REQ BEFORE USED FOR LOADING     I275
         LR    JWORK,JCOMMV .                                      I275
*   SET UP INTERNAL BRANCH TO INIT PANIC WITH FPL                  I275
         LH    JBR,TAB+14 .                                        I275
         SLL   JBR,18 .                                            I275
*                                                                  I275
*                     TASK SWITCH                                  I275
TASKSW   EQU   * .                                                 I275
         STM   10,9,TCBGRS(JOLD) .      SAVE REGS IN TCB           I275
DISPEXIT EQU   * .                                                 I275
*   SET 'NEW' TO PROPER VALUE FOR TASK SWITCH                      I275
         L     NEWPTR,NEWDISP .                                    I275
         MVC   0(4,NEWPTR),FNCHNEW .                               I275
         XC    FNCHNEW(4),FNCHNEW .     RE-SET FNCHNEW TO 0        I275
         L     DISPREG,DISPADDR(JCOMMV) .                          I275
         CLI   ERRSW,ON .          Q. ENTRY FROM ABTERM          A37059
         MVI   ERRSW,OFF .         RESET ERROR SWITCH            A37059
         BNE   NORESTOR .          NOT ABTERM ENTRY              A37059
         LM    0,14,ABSAVE .       RESTORE REGS               BD A49851
         MVI   SVCOLD,ON .         ENABLE SVC OLD PSW         BD A49851
         BR    14 .                RETURN TO ABEND REQUESTOR  BD A49851
NORESTOR EQU   * .                                               A37059
         BCR   15,DISPREG .             BRANCH TO DISPATCHER       I275
****************************************************************   I275
*        ****   XSNT AREA LOADING TCB ENTRY POINT ****             I275
IEAFNCH  EQU   * .                                                 I275
         SSM   *+1 .   DISABLE FOR INTERRUPTS                      I275
         STM   2,10,XRGSAV(JWORK) SAVE REGS FOR RETURN FROM FTCH   I275
         NI    ERCOUNT+12,0        INITIALIZE RECYCLE COUNT       19022
IEAFNCH1 EQU   *                                                  M4825
         L     JOLD,XSNTTCB .  REG 4 MUST CONTAIN TCB PTR          I275
*                                                  FOR FETCH       I275
         BC    15,TOFETCH .                                        I275
         AGO   .NOTPRIM                                            I275
.TACP2   ANOP                                                      I275
STICOM1  EQU   *                                                   MO17
         ST    JI,ICOMPLTD         RECORD SVRB FILLING XSNT.
         L     JX,XXSNTCC
         XC    0(8,JX),0(JX)       ERASE RECORD OF XSNT CONTENTS.
.NOTPRIM ANOP                                                      I275
XF6      IHBXLIN   (ATT,LNK,LOD,XCT,XC2,LSV)
         STM   2,10,XRGSAV(JWORK)
TOFETCH  EQU   * .                                                 I275
         LA    1,XFPL(JWORK)       PASS PARAMETERS TO FETCH.
         LA    3,XFWA(JWORK)
         L     15,XFETCHEP
         BALR  14,15
         AIF   (NOT &HIAR).XLCS200                                 LCOA
*              LCS LOADER RETURNS RB ADDRESS IN GEN REG 10         LCOA
         LM    2,9,XRGSAV(JWORK)                                   LCOA
         AGO   .XLCS201                                            LCOA
.XLCS200 ANOP                                                      LCOA
         LM    2,10,XRGSAV(JWORK)
.XLCS201 ANOP                                                      LCOA
         SR    14,14                   FREEMAN MICKEY MOUSE
         AIF  ('&STORAGE' EQ 'PART').PRIM1                         I275
SSM      EQU   *+1                 USE FF AS SSM MASK.
         LTR   15,15
         BC    7,XF15              EXIT IF FETCH ERROR.
.PRIM1   ANOP                                                      I275
         SSM   *+1                 DISABLE.
         IHBXLE    (ATT,LNK,LOD,XCT,XC2,LSV),XF8
         AIF  ('&STORAGE' EQ 'PART').PRIM2                         I275
         C     JI,ICOMPLTD
         BC    8,*+12              Q. DID I COMPLETE WITHOUT
         SRL   JBR,1               INTERRUPTION.
         BC   15,STICOM1
         OI    XSTAB(JEE),X'10'    SET SVRB TO TYPE III.
         L     JX,XXSNTCC
         MVC   0(8,JX),XRBNM(JEE)
         AIF   (&TRSVCTB).X73
         MVC   8(4,JX),XRBQ(JEE)
.X73     ANOP
         AGO   .TACP3                                              I275
.PRIM2   ANOP                                                      I275
***   XSNT AREA LOADING TASK IS FINISHED LOADING SVC FOR REQUEST   I275
         L     XSNTSVC,XXSNTCC .                                   I275
         LTR   15,15 .             WAS THERE A FETCH ERROR?        I275
         BC    8,NOERROR .         NO, BRANCH                      I275
         ST    15,TCBGRS+20(JOLD) . SAVE FETCH RETURN CODE        M2913
         CLI   ERCOUNT+12,5        IS RECYCLE COUNT 5             19022
         AIF   (NOT &DDR).AAA0                                    19022
         BNL   DDRINTF             BRANCH ON LOW                  19022
         AGO   .AAA1                                              19022
.AAA0    ANOP                                                     19022
         BNL   RECOVER1            BRANCH ON LOW                  19022
.AAA1    ANOP                                                     19022
         XR    JY,JY               ZERO OUT WORK REG              19022
         IC    JY,ERCOUNT+12          PICK UP COUNT               19022
         LA    JY,1(JY)             INCREMENT COUNT               19022
         STC   JY,ERCOUNT+12       SAVE UPDATED COUNT             19022
         B     IEAFNCH1            GO TO RETRY                    19022
         AIF   (NOT &DDR).AAA2                                    19022
DDRINTF  BH    RECOVER1            BRANCH ON HIGH                 19022
         L     15,DDRSRAD          PICK UP DDR ENTRY              19022
         BALR  14,15               GO TO SYSRES DDR               19022
         LTR   15,15               IS RETURN CODE 0               19022
         BNZ   RECOVER1            NO,BRANCH OUT                  19022
         OI    ERCOUNT+12,X'0F'       RESET COUNT                 19022
         B     IEAFNCH1            GO TO RETRY                    19022
.AAA2    ANOP                                                     19022
RECOVER1 EQU   *                                                  19022
*                SCHEDULE REQUESTOR TO ABEND                       I275
         LA    RG1,FETCHERR .                                      I275
RECOVER  EQU   * .                                                 I275
         SLL   RG1,12 .                                            I275
         O     RG1,O .     REG 1 CONTAINS ABEND CODE               I275
         LR    RG0,JOLD .  REG 0 CONTAINS PTR TO TCB TO ABEND      I275
         L     15,CVTABTM(JCOMMV) .  ADDRESS OF ABTERM             I275
         BALR  14,15 .  BRANCH TO ABTERM TO ABEND REQ              I275
         BC    15,ERROR .              DON'T INIT XSNTCC           I275
NOERROR  EQU   * .                                                 I275
         MVC   0(8,XSNTSVC),RBNAME(JEE) .SET UP XSNTCC             I275
         AIF   (&TRSVCTB).X73TACP                                  I275
         MVC   8(4,XSNTSVC),XRBQ(JEE) .                            I275
.X73TACP ANOP                                                      I275
         AIF   (NOT &TSLC).TMSLC3                                  I275
         TM    TMSLCFLG(JOLD),TSFLG . IS REQ TASK TIME-SLICED?     I275
         BC    8,NOTTMSLC .           NO, BRANCH                   I275
         ST    JOLD,TSTASK .          YES, SAVE PTR TO TCB &       I275
         ST    JI,TSSVRB .           SVRB SO WON'T BE PRE-EMPTED   I275
NOTTMSLC EQU   * .                                                 I275
.TMSLC3  ANOP                                                      I275
ERROR    EQU   * .                                                 I275
         MVI   LOADSW,OFF .           TURN OFF LOADING SW          I275
*                                                                  I275
*  DEQUEUE REQUESTS & TAKE OUT OF WAIT                             I275
*                                                                  I275
         L     WORKREG,TAQUE .                                     I275
         XC    TAQUE(4),TAQUE .           RE-INIT HEAD OF QUEUE    I275
LOOP     EQU   * .                                                 I275
         LTR   WORKREG,WORKREG .   IS THE QUEUE EMPTY?             I275
         BC    8,DEQEND .          YES, BRNCH TO SET UP TASK SW    I275
         LR    REQPTR,WORKREG .  NO, DEQUEUE REQUEST               I275
         L     SVRBPTR,QSVRB(REQPTR) .    PTR TO SVRB REQ          I275
         MVI   SVRBWAIT(SVRBPTR),OUTWAIT . SVRB OUT OF WAIT        I275
         L     WORKREG,QNXTREQ(REQPTR) .                           I275
         XC    QNXTREQ(8,REQPTR),QNXTREQ(REQPTR) ZERO OUT ELEM     I275
         BC    15,LOOP .                                           I275
DEQEND   EQU   * .                                                 I275
*    SET UP XSNT AREA LOADING TASK'S SVRB                          I275
         L     JOLD,XSNTTCB .                                      I275
         L     LSVRB,RBNAME(JOLD) .    PTR TO LOADING SVRB         I275
         MVC   RBPSW(5,LSVRB),REENTRY .                            I275
         MVC   RBPSWAD(3,LSVRB),EPTCB . SET UP RPSW FOR RE-ENTRY   I275
         MVI   RBWAIT(LSVRB),INWAIT .  PUT LOADING SVRB IN WAIT    I275
         XC    DARPARMS(8),DARPARMS .                              I275
         CLI   PANICFLG(JWORK),PFLG .   USING PANIC?               I275
         BC    7,DISPEXIT .BRANCH, NOT USING PANIC                 I275
*        MVC   IEA0IO02+1(1),XFPL+13(JWORK) . YES, PSEUDO-ENABLE   I275
         DC    X'D2' .                        UNLESS NESTED        I275
         DC    AL3(IEA0IO02+1) .                                   I275
         DC    X'600D' .                                           I275
         BC    15,DISPEXIT .           BRANCH TO EXIT              I275
***************************************************************    I275
*  ENTRY POINT OF XSNT AREA LOADING TASK FROM ABTERM               I275
IEAXERR  EQU   * .     RE-INSTATE XSNT AREA LOADING TASK           I275
*   ABTERM BRANCHES HERE ON REG 15 WITH THE ABTERM CALLER'S
*   REGS(0-14) INTACT.
*  THESE REGS WILL BE RESTORED AND CONTROL RETURNED TO THE CALLER
*  AFTER ABTERMING THE REQUESTOR OF THE TRANSIENT AREA
         USING *,15                                           BD A49851
         STM   0,14,ABSAVE .                                  BD A49851
         DROP  15                                             BD A49851
         BALR  JBASE,0 .                                           I275
         AIF   (NOT &BASE2).NMAT6                                  I250
         LA    JX,*-AUFINCH      ESTABLISH A BASE FOR FINCH        I250
         AGO   .NMAT60                                             I250
.NMAT6   ANOP                                                      I250
         LA    JX,*-IGC006 .                                       I275
.NMAT60  ANOP                                                      I250
         SR    JBASE,JX .                                          I275
         SSM   *+1 .   DISABLE FOR INTERRUPTS                      I275
         MVI   ERRSW,ON .          INDICATE ENTRY FROM ABTERM    A37059
         L     JOLD,DARPARMS . SET UP REGS FOR ABENDING REQ &      I275
         L     JWORK,DARPARMS+4 .    RE-INIT SWITCHES              I275
         LA    RG1,XSNTERR .                                       I275
         L     JCOMMV,XCOMMV .                                     I275
         BC    15,RECOVER .                                        I275
****************************************************************   I275
*   *** REQUESTING SVRB EXITS ONCE SVC IS IN XSNT AREA  *****      I275
XSNTEXIT EQU   * .                                                 I275
         OI    XSTAB(JEE),SVCFLG . SET SVRB FLG FOR LOADED SVC     I275
         AIF   (NOT &TSLC).TMSLC4                                  I275
         C     JOLD,TSTASK .    IS THIS TM SLC TASK THAT LOADED    I275
         BC    7,NOTTS .          XSNT AREA-- NO, BRANCH           I275
         XC    TSTASK(4),TSTASK . YES, RE-INIT SWITCH              I275
NOTTS    EQU   * .                                                 I275
.TMSLC4  ANOP                                                      I275
**  IF REQ USED PANIC BUT NO LONGER IS USING PANIC -- RETURN       I275
         CR    JWORK,JCOMMV .                                      I275
         BC    8,2(JRET) .     RETURN                              I275
**  IF REQ HAS PANIC -- PSEUDO-ENABLE & RETURN                     I275
         CLI   PANICFLG(JWORK),PFLG .  IS REQ USING PANIC?         I275
         BC    7,REGWK .   BRANCH, NOT USING PANIC                 I275
*        MVC   IEA0IO02+1(1),XFPL+13(JWORK) . YES, PSEUDO-ENABLE   I275
         DC    X'D2' .                        UNLESS NESTED        I275
         DC    AL3(IEA0IO02+1) .                                   I275
         DC    X'600D' .                                           I275
         BC    15,2(JRET) .       RETURN                           I275
**  IF REQ HAS WORK AREA -- FREE IT & RETURN                       I275
REGWK    EQU   * .                                                 I275
         LR    1,JWORK .                                           I275
         L     0,XGTCORE+4 .                                       I275
         SVC   REGMAIN .                                           I275
         BC    15,2(JRET) .       RETURN                           I275
.TACP3   ANOP                                                      I275
XF8      IHBXLIN   (ATT,LNK,LOD,XCT,XC2,LSV)
         AIF   ('&STORAGE' EQ 'PRIM').TACP4                        I275
SSM      EQU   *+1 .    FF IS USED FOR SETTING MASK                I275
         LTR   15,15 .    WAS THERE A FETCH ERROR                  I275
         BC    7,XF15 .   YES, ABEND                               I275
.TACP4   ANOP                                                      I275
         MVC   XRBEP+1(3,JEE),XFPL+21(JWORK)
         TM    XBLDL+26(JWORK),X'C0' REENTERABLE OR REUSABLE MEANS
         BC    8,*+8               RESCHEDULABLE.
         OI    XSTAB+1(JEE),XRSCHD
*                                                                  OASR
*        ASR REFRESHABLE CODE                                      OASR
*                                                                  OASR
         TM    XBLDL+27(JWORK),X'01' TEST PDS FOR REFRSHBLE ATTRBT OASR
         BC    8,*+8                   NOT REFRESHABLE             OASR
         OI    XSTAB(JEE),HEX01        SET LINKEE REFRESHABLE BIT  OASR
         TM    XFPL+12(JWORK),X'FF'
         BC    8,XF9               Q. NOT IN PANIC.
*        MVC   IEA0IO02+1(1),XFPL+13(JWORK) PSEUDO ENABLE
         DC    X'D2'                        UNLESS NESTED.
         DC    AL3(IEA0IO02+1)
         DC    X'600D'
.X8      ANOP
         TM    XBLDL+26(JWORK),X'30' ABEND IF PSEUDO DISABLED AND
         BC    7,XF20              PROGRAM IS IN TEST OR OVERLAY.
         BC    15,XF14
XF9      EQU   *
         AIF   (NOT &TESTRAN).X9
         TM    XBLDL+26(JWORK),X'10'
         BC    8,*+16              Q. PROGRAM NOT IN TEST.
         LA    1,XFPL(JWORK)       PASS PARAMETER IN REGISTER 1.
         MVC    XFPL+14(2,JWORK),PANIC+14
         SVC   TTSAV
.X9      ANOP
         TM    XBLDL+26(JWORK),X'20'
         LR    1,JWORK             FREE WORK AREA.
         L     0,XGTCORE+4
         SVC   REGMAIN
         BC    8,*+12              Q. PROGRAM NOT IN OVERLAY.
         LA    0,IEWSZOVR
         SR    1,1
         SVC   LOAD
XF14     IHBXLE    (ATT,LNK,LOD,XCT,XCN,SVC,EXT,LSV),2(JRET)
XF13     LA    JERPA,XSNT2         GET EP ADDRESS FOR ERROR T/A   19017
         AIF   (NOT &RERP).XERP6                                  19017
         MVC   XSNT2NAM(4),XRBNM+4(JEE)  SAVE NAME OF ERP IN T/A  19017
XERPXRES EQU   *                                                  19017
         ST    JERPA,XRBEP(JEE)    RESET EP IN SIRB               19017
.XERP6   ANOP                                                     19017
         L     1,XRBQ(JEE)                                        19017
         AIF   ('&STORAGE' NE 'PRIM').X91
         BALR  14,15
         AGO   .X92
.X91     ANOP
         ST    15,XRBPSW+4(JEE)
         MVI   XRBPSW(JEE),0       DISABLE PSW FOR DISP REENTRY.
         BAL   14,2(JRET)
.X92     ANOP
         SVC   EXIT
NOCORE   LR    JWORK,JCOMMV        SHOW CORE NOT AVAILABLE         9183
         B     XF21                BRANCH TO SET UP 606 ABEND      9183
XF11     LA    14,BLDLERR-NONEXEC(14)
XF16     LA    14,NONEXEC-NOPPCORE(14)
XF21     LA    14,NOPPCORE-TTRANCOR(14)
XF20     LA    14,TTRANCOR-LRBMINOR(14)
XF17     LA    14,LRBMINOR-LODMINOR(14)
XF19     LA    14,LODMINOR-IRBXCTL(14)
XF18     LA    14,IRBXCTL-FETCHERR(14)
XF15     LA    1,FETCHERR(14)
***********************************************************************
*          THE FOLLOWING CODE IS INSERTED TO FACILITATE PROBLEM       *
*          DETERMINATION DURING ABEND.                                *
***********************************************************************
         AIF   (NOT &BASE2).NMAT8                                  I250
         BALR  JBASE,0                 SET UP BASE COMMON          I250
         USING *,JBASE                                             I250
.NMAT8   ANOP                                                      I250
         CR    JWORK,JCOMMV        NOT PSEUDO-DISABLED IF
         BC    8,*+18              WORK AREA NOT GOTTEN.
         TM    XFPL+12(JWORK),X'FF'
         BC    8,*+10              Q. NOT IN PANIC.
*        MVC   IEA0IO02+1(1),XFPL+13(JWORK) PSEUDO ENABLE
         DC    X'D2'                        UNLESS NESTED.
         DC    AL3(IEA0IO02+1)
         DC    X'600D'
MM2  NOP  NIPCODE     NOP TO BR AT NIP TIME
IEAARAM2  EQU  MM2+1   PONITS TO CONDITIONAL FIELD-NIP
         LA    JX,TTRANCOR             LOAD IN 506                21016
         CR    JX,R1                   IS IT 506                  21016
         BH    PROCE                   IT IS LOWER, GO ON         21016
         LA    JX,NOPPCORE             LOAD IN 606                21016
         CR    JX,R1                   Q. IS IT 606               21016
         BL    PROCE                   IT IS HIGHER, GO ON        21016
         B     BACK                    CODE 506 OR 606, NO MESSAGE
PROCE    LR    JX,R1                   SAVE COMP CODE         CD  21016
         LR    JY,15                   SAVE REASON CODE       CD  21016
         LA    0,MESSIZE               SET UP FOR GETMAIN         21016
         GETMAIN  R,LV=(0)
         ST    JX,WORK(R1)        SAVE COMP CODE              CD  21016
         ST    JX,COMPCOD(R1)     SAVE IT AGAIN FOR END       CD  21016
         LR    15,JY              RESTORE REASON CODE         CD  21016
         MVC   0(MESSIZEA,R1),MESSAGE  MOVE IN MESG. SKELETON     21016
         L     JX,TCBTIO(JOLD)         GET TIOT ADDR              21016
         MVC   JOBNM(8,R1),0(JX)       MOVE IN JOB NAME           21016
         MVC   STEPNM(8,R1),8(JX)      MOVE IN STEP NAME          21016
         LA    14,IRBXCTL              LOAD 207                   21016
         C     14,WORK(R1)             Q. IS IT 207               21016
         BE    XCTLER                  YES, BRANCH                21016
         LA    14,FETCHERR             LOAD 106                   21016
         C     14,WORK(R1)             Q. IS IT 106               21016
         BE    FCHERR                  YES, BRANCH                21016
         LA    14,BLDLERR              LOAD 806                   21016
         C     14,WORK(R1)             Q. IS IT 806               21016
         BE    FCHERR                  YES, BRANCH                21016
         LA    14,NONEXEC              LOAD A 706              CD 21016
         C     14,WORK(R1)             Q. IS IT 706            CD 21016
         BE    FCHERRA                 YES  BRANCH             CD 21016
         MVC   MODNM(8,R1),XRBNM(JEE)  MOVE IN MOD NAME           21016
         SR    R15,R15                 ZERO REG 15                21016
         B     CODES                   GET COND. CODE             21016
FCHERRA  SR    15,15                   ZERO REASON CODE       CD  21016
FCHERR   L     JY,8(JWORK)             GET ADDR OF MOD NAME       21016
         LM    R2,R3,R0(JY) .          SAVE NAME               BD M1950
         MVC   MODNM(8,R1),0(JY)       MOVE IN MOD NAME           21016
         B     CODES                   GET COND. CODE             21016
XCTLER   L     JOR,XRBNM(JI)           PTR TO NAME            CD  21016
         MVC   MODNM(8,R1),XRBNM(JOR)  MOVE IN MOD NAME           21016
         SR    R15,R15                 ZERO REG 15                21016
CODES    L     14,WORK(R1)             SAVE COMP CODE             21016
         SLL   14,16                   PREPARE COMP CODE          21016
         ST    14,WORK(R1)         STORE SHIFTED COMP CODE        21016
         STC   R15,WORK+2(R1)          AND REASON                 21016
         UNPK  COMCDE(7,R1),WORK(4,R1)      CODE FOR              21016
         TR    COMCDE(6,R1),TRANTAB-X'F0'   PRINTING              21016
         MVI   COMCDE+4(R1),X'60'      INSERT DASH                21016
         MVI   COMCDE+6(R1),X'40'  CLEAN OUT GARBAGE BYTE         21016
         CLI   COMCDE+5(R1),X'F0'      IS THERE A REASON CODE     21016
         BNE   RCODE                   YES, BRANCH                21016
         MVI   COMCDE+4(R1),X'40'      BLANK OUT DASH             21016
         MVI   COMCDE+5(R1),X'40'      BLANK OUT REASON CDE       21016
RCODE    MVI   COMCDE(R1),X'40'        CLEAN UP MESG              21016
         LR    JX,R1               SAVE REG 1 ADDRESS         CD  21016
         LR    JY,R15 .            SAVE 106/806 REASON CODE    BD M0551
         WTO   MF=(E,(1))
         L     R1,COMPCOD(JX)          RESTORE REG 1              21016
         LR    R15,JY .            RESTORE REG 15              BD M0551
BACK     EQU   *                                                  21016
         SLL   1,12
         O     1,O
         SVC   ABEND
NIPCODE  EQU  *
   LA  1,0(1)    ZERO HI BYTE
   SRL  1,12    MOVE ERROR CODE TO LO ORDER
   CH  1,BCODE      IS ERRCODE=BLDLERR
   BE  BERR       YES,SKIP FREEMAIN
   LH  0,XRBSZ(JEE)   NO,FETCHERR,GET SIZWE
   SLL 0,3      CHANGE TO BYTES
   SH  JEE,EIGHT     ADDRESS BEGINNING OF LRB
         AH    R0,EIGHT                 GET TOTAL SIZE OF AREA     APAR
    LR  1,JEE      SET UP TO ADDRESS OF AREA
     SVC   REGMAIN    FREEMAIN
BERR   SR  0,0        RETURN CODE TO NIP
     SVC   3                        RETURN
BCODE  DC  XL2'806'          BLDLERR
EIGHT    DC    H'8'                                               M0017
         AIF   (NOT &HIAR).XLCS4                                   LCOA
XLCSRB   DC    H'32'                                               LCOA
XLCSPRB  DC    H'48'                                               LCOA
         DS    0F                      DEFINE FULLWORD BOUNDARY    LCOA
XFLCSV   DC    X'80D3C3E3'             GETMAIN LCS IND. FOR HI=1   LCOA
.XLCS4   ANOP                                                      LCOA
XXSNTCC  DC    V(XSNTCC)
XFETCHEP DC    V(IEWMSEPT)
         DS    0F .                                            BD M5024
O        DC    X'80000000' .                                   BD M5024
         AIF   (NOT &DDR).AAA7                                    19022
DDRSRAD  DC    V(IGFDDRSR)         ENTRY OF SYSRES DDR            19022
.AAA7    ANOP                                                     19022
ERCOUNT  EQU   *-12                                               19022
         DC    X'0'                RECYCLE COUNT                  19022
         AIF   ('&STORAGE' EQ 'PRIM').TACP5                        I275
* STORAGE FOR XSNT AREA QUEUE                                      I275
FNCHNEW  DC    F'0' .       0 OR XSNT TCB ADDR-USED FOR TASK SW    I275
XSNTTCB  DC    V(IEAXSNT) . ADDR OF XSNT AREA LOADNG TASK TCB      I275
REENTRY  DC    X'FF04000000' .RPSW --  ENABLED FOR INTERRUPTS      I275
         DC    AL3(XSNTQUES) .RPSW ADDR FOR REQS FOR XSNT AREA     I275
EPTCB    DC    AL3(IEAFNCH) RPSW ADDR FOR LOADING XSNT TCB         I275
LOADSW   DC    X'00' .      LOADING SW--  00=AVBLE,  FF=NOT AVBL   I275
ERRSW    DC    X'00' .             TO INDICATE ABTERM ENTRY      A37059
NSAV     DC    X'00'                                             A69853
NEWDISP  DC    A(IEATCBP) . ADDR OF NEW IN DISP                    I275
DARPARMS DC    2F'0' .                                             I275
ABSAVE   DC    15F'0' .                                       BD A49851
         AGO   .PRIM3                                              I275
.TACP5   ANOP                                                      I275
ICOMPLTD DC    F'0'
.PRIM3   ANOP                                                      I275
         AIF   (NOT &ATT).NO240C                                   I250
SUB240   DC    X'F0000000'   SPECIFY SUBPOOL 240 FOR GETMAIN       I250
.NO240C  ANOP                                                      I250
*                                                                 M0017
XGTCORE  DC    A(0)
         DC    A(XRGSAV+XRGSVSZ)   GETCORE PARAMETER LIST.
         DC    A(*-8)
         DC    X'2080'
         IHBXLTAB
         CNOP  2,4
XSVCBLDL DC    X'C35000010024'
         DC    X'80000000'                                     BD M5024
         DS    0F                                                 21016
COMPCOD  EQU   X'44'               COMP CODE SAVE AREA            21016
ABMESG   EQU   *                                                  21016
MESSAGE  WTO   'IEA703I                         MODULE ACCESSED        X
                ',MF=L,ROUTCDE=11,DESC=6                          21016
ENDMESS  EQU   *
         DC    8X'0'
ENDOMES  EQU   *
         DS    0F
WORK     EQU   X'40'                                              21016
MESSIZE  EQU   ENDOMES-ABMESG
MESSIZEA EQU   ENDMESS-ABMESG
TRANTAB  DC    C'0123456789ABCDEF'
TCBTIO   EQU   12
*                     MESSAGE FIELDS                                  *
COMCDE   EQU   11
JOBNM    EQU   18
STEPNM   EQU   27
MODNM    EQU   52
         DS    0D
IEWSZOVR DC    C'IEWSZOVR'
IEFLINK  EQU   *-40
         DC    X'00008000'
         DC    A(0)                LINKLIB DEB ADR - NIP FILL IN   MXMV
         DC    X'12000000'
IEASVDCB EQU   *-40
         DC    X'00008000'
         DC    A(0)                SVCLIB  DEB ADR - NIP FILL IN   MXMV
         DC    X'12000000'
PANIC    DS    3F
         DC    X'FF000001'
         AIF   (NOT &HIAR).XLCS10                                  LCOA
         DS    66D                     EXPANDED PANIC FOR LCS      LCOA
         AGO   .XLCS11                                             LCOA
.XLCS10  ANOP                                                      LCOA
         DS    62D
.XLCS11  ANOP                                                      LCOA
IEAAXSNT EQU   *
XSNT     DS    128D
         AIF   (NOT &RERP).XERP9                                  19017
XSNT2NAM DC    F'0'                SAVE AREA-LAST T/A ERP NAME    19017
IEAAERP  DC    F'0'                PTR TO RESIDENT ERP LOAD LIST  19017
*                                  - NIP FILL-IN                  19017
.XERP9   ANOP                                                     19017
*                                                                  OASR
*        DEFINE XSNT2 AS ENTRY POINT FOR ASR.  ENTRY=IEAASNT2      OASR
*        EXPAND ERROR TRANSIENT AREA FOR ASR-FRM 400 TO 1024 BYTES OASR
*                                                                  OASR
XSNT2    DS    128D          EXPANDED ERROR TRANSIENT AREA         OASR
IEAASNT2 EQU   XSNT2                                               OASR
         MEND
