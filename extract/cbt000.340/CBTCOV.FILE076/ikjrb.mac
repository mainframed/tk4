*        %GOTO RBBSL;                                                /*
         MACRO
         IKJRB &DSECT=YES
         AIF   ('&DSECT' EQ 'NO').NODSCT
RBSECT   DSECT , -            RBSECPTR
         AGO   .CONT
.NODSCT  ANOP
         DS    0D -
RBSECT   EQU   * -            RBSECPTR
.CONT    ANOP
         SPACE 1
         IEZBITS , -          SYMBOLIC BIT DEFINITIONS
         SPACE 1
***********************************************************************
*
*        THIS MACRO MAPS MVT REQUEST BLOCKS
*
*        SVRB - SUPERVISOR REQUEST BLOCK FOR TRANSIENT SVC ROUTINES
*        SVRB - SUPERVISOR REQUEST BLOCK FOR RESIDENT SVC ROUTINES
*        IRB  - INTERRUPTION REQUEST BLOCK
*        SIRB - SYSTEM INTERRUPT REQUEST BLOCK
*        PRB  - PROGRAM REQUEST BLOCK
*
*    RELEASE 21, 11/11/71, LEVEL=2
***********************************************************************
         SPACE 1
RBTABNO  DS    H -            DISPLACEMENT FROM BEGINNING OF TACT TO
*                             ENTRY FOR MODULE REPRESENTED BY THIS SVRB
*                             (SVRB-TRANS)
RBRTLNTH DS    H -            LENGTH OF SVC ROUTINE IN BYTES
*                             (SVRB-TRANS)
RBABOPSW DS    CL4 -          AFTER EXECUTION OF TRANSIENT AREA HANDLER
*                             ROUTINE - FOUR LOW-ORDER BYTES OF NAME OF
*                             REQUESTED ROUTINE  (SVRB-TRANS)
*                             AFTER EXECUTION OF ABTERM ROUTINE -
*                             RIGHT HALF OF USER'S OLD PSW ---
*                             OTHERWISE - ZERO
*                             (SVRB-BOTH, IRB, PRB)
RBWCSA   DS    FL1 -          NUMBER OF REQUESTS WAITING AT TIME OF
*                             TERMINATION (WAIT COUNT SAVE AREA)
*                             (ALL RB'S)
RBSIZE   DS    FL1 -          SIZE OF THIS RB IN DOUBLEWORDS (ALL RB'S)
RBSTAB   DS    0BL2 -         STATUS AND ATTRIBUTE BITS
RBSTAB1  DS    B -            FIRST BYTE OF STATUS AND ATTRIBUTE BITS
RBFTP    EQU   BIT0+BIT1 -    TYPE OF RB
RBFTPRB  EQU   X'00' -        PRB
RBFTIRB  EQU   BIT1 -         IRB
RBFTSIRB EQU   BIT0 -         SIRB
RBFTSVRB EQU   BIT0+BIT1 -    SVRB
RBTRSVRB EQU   BIT3 -         SVRB FOR TRANSIENT SVC ROUTINES
RBWAITP  EQU   BIT4 -         INDICATE TO ABEND THAT AN ECB IS POINTING
*                             AT THE RB.  ABEND WILL TURN OFF THE WAIT
*                             BIT IN THE ECB IN ORDER TO NOP ANY POST.
*                             (ICB416)                       APAR 45983
RBFTCKPT EQU   BIT5 -         A CHECKPOINT MAY BE TAKEN IN A USER EXIT
*                             FROM THIS SVC ROUTINE (SVRB-BOTH)
RBSTAB2  DS    B -            SECOND BYTE OF STATUS AND ATTRIBUTE BITS
RBTCBNXT EQU   BIT0 -         RBLINK FIELD POINTS TO TCB (ALL RB'S)
RBFACTV  EQU   BIT1 -         IRB OR SIRB IS QUEUED TO TCB - PROGRAM IS
*                             ACTIVE
RBATTN   EQU   BIT2 -         EXITING PROGRAM IS AN ATTENTION EXIT
*                             (IRB)
RBETXR   EQU   BIT3 -         IRB IS FOR AN ETXR EXIT ROUTINE
RBIQETP  EQU   BIT4+BIT5 -    EXPLAINED BELOW
RBRQENR  EQU   X'00' -        REQUEST QUEUE ELEMENT IS NOT TO BE
*                             RETURNED
RBIRBAER EQU   BIT5 -         IRB HAS QUEUE ELEMENTS FOR ASYNCHRONOUSLY
*                             EXECUTED ROUTINES THAT ARE RQE'S
RBIQENR  EQU   BIT4 -         IQE IS NOT TO BE RETURNED AT EXIT
RBIRBAIQ EQU   BIT4+BIT5 -    IRB HAS QUEUE ELEMENTS FOR ASYNCHRONOUSLY
*                             EXECUTED ROUTINES THAT ARE IQE'S
RBFDYN   EQU   BIT6 -         RB STORAGE CAN BE FREED AT EXIT
RBECBWT  EQU   BIT7 -         IF ZERO, WAIT FOR A SINGLE EVENT OR ALL
*                             OF A NUMBER OF EVENTS ---
*                             IF ONE, WAIT FOR A NUMBER OF EVENTS THAT
*                             IS LESS THAN THE TOTAL NUMBER OF EVENTS
*                             WAITING
RBSVTQN  DS    A -            ADDRESS OF NEXT REQUEST BLOCK ON QUEUE OF
*                             TRANSIENT ROUTINES
RBOPSW   DS    CL8 -          USER'S OLD PSW (ALL RB'S)
RBTAWCSA DS    FL1 -          SAVE AREA FOR NUMBER OF REQUESTS FIELD,
*                             USED IF TRANSIENT ROUTINE IS OVERLAID
*                             (SVRB-TRANS)
RBSVTTR  DS    CL3 -          TTR FOR SVC ROUTINE (SVRB-TRANS)
RBLINK   DS    0A -           SAME AS FOR RBLINKB BELOW
RBWCF    DS    FL1 -          NUMBER OF REQUESTS WAITING (WAIT COUNT)
*                             (ALL RB'S)
RBLINKB  DS    AL3 -          ADDRESS OF PREVIOUS RB, OR ADDRESS OF TCB
*                             WHEN THIS IS FIRST RB ON THE QUEUE
*                             (ALL RB'S)
PRBEND   DS    0F -           END OF PRB
RBGRSAVE DS    0CL64 -        GENERAL REGISTER SAVE AREA
*                             (SVRB-BOTH, IRB, SIRB)
RBGRS0   DS    F -            SAVE AREA FOR GENERAL REGISTER 0
RBGRS1   DS    F -            SAVE AREA FOR GENERAL REGISTER 1
RBGRS2   DS    F -            SAVE AREA FOR GENERAL REGISTER 2
RBGRS3   DS    F -            SAVE AREA FOR GENERAL REGISTER 3
RBGRS4   DS    F -            SAVE AREA FOR GENERAL REGISTER 4
RBGRS5   DS    F -            SAVE AREA FOR GENERAL REGISTER 5
RBGRS6   DS    F -            SAVE AREA FOR GENERAL REGISTER 6
RBGRS7   DS    F -            SAVE AREA FOR GENERAL REGISTER 7
RBGRS8   DS    F -            SAVE AREA FOR GENERAL REGISTER 8
RBGRS9   DS    F -            SAVE AREA FOR GENERAL REGISTER 9
RBGRS10  DS    F -            SAVE AREA FOR GENERAL REGISTER 10
RBGRS11  DS    F -            SAVE AREA FOR GENERAL REGISTER 11
RBGRS12  DS    F -            SAVE AREA FOR GENERAL REGISTER 12
RBGRS13  DS    F -            SAVE AREA FOR GENERAL REGISTER 13
RBGRS14  DS    F -            SAVE AREA FOR GENERAL REGISTER 14
RBGRS15  DS    F -            SAVE AREA FOR GENERAL REGISTER 15
SIRBEND  DS    0F -           END OF SIRB
RBEXSAVE DS    12F -          EXTENDED SAVE AREA FOR SVC ROUTINES
*                             (SVRB-BOTH)
SVRBEND  DS    0F -           END OF SVRB (BOTH)
         SPACE 2
         ORG   RBTABNO -      FOR SIRB
RBEXRTNM DS    CL8 -          EIGHT-CHARACTER NAME OF ERROR EXIT
*                             ROUTINE (SIRB)
         SPACE 2
         ORG   RBTABNO -      FOR IRB
RBPPSAV  DS    0A -           ADDRESS OF PROBLEM PROGRAM REGISTER SAVE
*                             AREA (IRB)
RBTMFLD  DS    B -            INDICATORS FOR TIMER ROUTINES.  WHEN
*                             THERE ARE NO TIMER ROUTINES, THIS FIELD
*                             IS ZERO.  (IRB)
RBTMQUE  EQU   BIT0 -         TIMER ELEMENT NOT ON QUEUE
RBTMTOD  EQU   BIT1 -         LOCAL TIME-OF-DAY OPTION IS USED
RBTMIND1 EQU   BIT2+BIT3 -    TIME INTERVAL REQUEST FORM
RBTITU   EQU   X'00' -        TIME INTERVAL REQUESTED IN TIMER UNITS
RBTIB    EQU   BIT3 -         TIME INTERVAL REQUESTED IN BINARY FORM
RBTID    EQU   BIT2+BIT3 -    TIME INTERVAL REQUESTED IN DECIMAL FORM
RBTMCMP  EQU   BIT4 -         INTERVAL HAS EXPIRED
RBTMIND2 EQU   BIT5 -         EXIT SPECIFIED WITH TASK OR REAL REQUEST
RBTMIND3 EQU   BIT6+BIT7 -    TYPE OF REQUEST
RBTREQ   EQU   X'00' -        TASK REQUEST
RBWREQ   EQU   BIT7 -         WAIT REQUEST
RBRREQ   EQU   BIT6+BIT7 -    REAL REQUEST
RBPPSAV1 DS    AL3 -          ADDRESS OF PROBLEM PROGRAM REGISTER SAVE
*                             AREA (IRB)
         SPACE 2
         ORG   RBSVTQN -      FOR SVRB-RES AND PRB
RBCDE    DS    0A -           SAME AS RBCDE1 BELOW
RBCDFLGS DS    B -            CONTROL FLAGS
RBCDWORK EQU   BIT4 -         A WORK AREA HAS BEEN ESTABLISHED FOR BLDL
*                             AND FETCH
RBCDSYNC EQU   BIT5 -         SYNCH MACRO INSTRUCTION REQUESTED
RBCDXCTL EQU   BIT6 -         XCTL MACRO INSTRUCTION REQUESTED
RBCDLOAD EQU   BIT7 -         LOAD MACRO INSTRUCTION REQUESTED
RBCDE1   DS    AL3 -          ADDRESS OF CDE FOR MODULE THAT THIS RB IS
*                             ASSOCIATED WITH (SVRB-RES, PRB)
         SPACE 2
         ORG   RBSVTQN -      FOR IRB AND SIRB
RBEP     DS    A -            ENTRY POINT ADDRESS OF ASYNCHRONOUSLY
*                             EXECUTED ROUTINE (IRB, SIRB)
         SPACE 2
         ORG   RBTAWCSA -     FOR SVRB-RES AND PRB
RBPGMQ   DS    0A -           SAME AS RBPGMQ1 BELOW
         DS    X -            ZERO
RBPGMQ1  DS    AL3 -          ADDRESS OF RB INDICATING A REQUEST TO USE
*                             SAME SERIALLY REUSABLE PROGRAM
*                             (SVRB-RES, PRB)
         SPACE 2
         ORG   RBTAWCSA -     FOR IRB (3-BYTE LINK FIELD SEGMENT)
RBIQE    DS    0A -           LIST ORIGIN FOR IQE (IRB)
RBUSE    DS    FL1 -          USE COUNT USED BY ATTACH (IRB)
RBIQE1   DS    AL3 -          LIST ORIGIN FOR IQE (IRB)
         SPACE 2
         ORG   RBTAWCSA -     FOR IRB (2-BYTE LINK FIELD SEGMENT), SIRB
RBIQE2   DS    0F -
         DS    XL2 -          RESERVED
RBIQEA   DS    H -            LIST ORIGIN FOR RQE (IRB WITH 2-BYTE LINK
*                             FIELD SEGMENT, SIRB)
         SPACE 2
         ORG   RBEXSAVE -     FOR IRB--FIELDS PRESENT ONLY IF REQUESTED
RBNEXAV  DS    A -            ADDRESS OF NEXT AVAILABLE IQE (IRB)
RBIQEWRK DS    F -            IQE WORK SPACE, VARIABLE LENGTH,
*                             MAXIMUM SIZE IS 1984 BYTES (IRB)
         MEND  , */
*%RBBSL   :  ;
*DECLARE
*  1 RBSECT   BASED(RBSECPTR),
*
*/* **************************************************************** */
*
*/*      THIS MACRO MAPS MVT REQUEST BLOCKS                          */
*
*/*      SVRB - SUPERVISOR REQUEST BLOCK FOR TRANSIENT SVC ROUTINES  */
*/*      SVRB - SUPERVISOR REQUEST BLOCK FOR RESIDENT SVC ROUTINES   */
*/*      IRB  - INTERRUPTION REQUEST BLOCK                           */
*/*      SIRB - SYSTEM INTERRUPT REQUEST BLOCK                       */
*/*      PRB  - PROGRAM REQUEST BLOCK                                */
*
*/*  RELEASE 21, 11/11/71, LEVEL=2                                   */
*/* **************************************************************** */
*
*   2 RBTABNO     FIXED(15),             /* DISPLACEMENT FROM
*                                           BEGINNING OF TACT TO
*                                           ENTRY FOR MODULE
*                                           REPRESENTED BY THIS SVRB
*                                           (SVRB-TRANS)             */
*   2 RBRTLNTH    FIXED(15),             /* LENGTH OF SVC ROUTINE IN
*                                           BYTES  (SVRB-TRANS)      */
*   2 RBABOPSW    CHAR(4),               /* AFTER EXECUTION OF
*                                           TRANSIENT AREA HANDLER
*                                           ROUTINE - FOUR LOW-ORDER
*                                           BYTES OF NAME OF
*                                           REQUESTED ROUTINE
*                                           (SVRB-TRANS)  AFTER
*                                           EXECUTION OF ABTERM
*                                           ROUTINE -  RIGHT HALF OF
*                                           USER'S OLD PSW ---
*                                           OTHERWISE - ZERO
*                                           (SVRB-BOTH, IRB, PRB)    */
*   2 RBWCSA      PTR(8),                /* NUMBER OF REQUESTS
*                                           WAITING AT TIME OF
*                                           TERMINATION (WAIT COUNT
*                                           SAVE AREA)  (ALL RB'S)   */
*   2 RBSIZE      PTR(8),                /* SIZE OF THIS RB IN
*                                           DOUBLEWORDS (ALL RB'S)   */
*   2 RBSTAB      CHAR(2),               /* STATUS AND ATTRIBUTE
*                                           BITS                     */
*    3 RBSTAB1     CHAR(1),              /* FIRST BYTE OF STATUS AND
*                                           ATTRIBUTE BITS           */
*     4 RBFTP    BIT(2),                 /* TYPE OF RB               */
*%DCL RBFTPRB  CHAR;
*%RBFTPRB ='''00''B';                    /* PRB                      */
*%DCL RBFTIRB  CHAR;
*%RBFTIRB ='''01''B';                    /* IRB                      */
*%DCL RBFTSIRB CHAR;
*%RBFTSIRB='''10''B';                    /* SIRB                     */
*%DCL RBFTSVRB CHAR;
*%RBFTSVRB='''11''B';                    /* SVRB                     */
*     4 *        BIT(1),                 /* RESERVED                 */
*     4 RBTRSVRB BIT(1),                 /* SVRB FOR TRANSIENT SVC
*                                           ROUTINES                 */
*     4 RBWAITP  BIT(1),                 /* INDICATE TO ABEND THAT AN
*                                           ECB IS POINTING AT THE RB.
*                                           ABEND WILL TURN OFF THE
*                                           WAIT BIT IN THE ECB IN
*                                           ORDER TO NOP ANY POST.
*                                           (ICB416)       APAR 45983*/
*     4 RBFTCKPT BIT(1),                 /* A CHECKPOINT MAY BE
*                                           TAKEN IN A USER EXIT
*                                           FROM THIS SVC ROUTINE
*                                           (SVRB-BOTH)              */
*     4 *        BIT(2),                 /* RESERVED                 */
*    3 RBSTAB2     CHAR(1),              /* SECOND BYTE OF STATUS
*                                           AND ATTRIBUTE BITS       */
*     4 RBTCBNXT BIT(1),                 /* RBLINK FIELD POINTS TO
*                                           TCB (ALL RB'S)           */
*     4 RBFACTV  BIT(1),                 /* IRB OR SIRB IS QUEUED TO
*                                           TCB - PROGRAM IS ACTIVE  */
*     4 RBATTN   BIT(1),                 /* EXITING PROGRAM IS AN
*                                           ATTENTION EXIT  (IRB)    */
*     4 RBETXR   BIT(1),                 /* IRB IS FOR AN ETXR EXIT
*                                           ROUTINE                  */
*     4 RBIQETP  BIT(2),
*%DCL RBRQENR  CHAR;
*%RBRQENR ='''00''B';                    /* REQUEST QUEUE ELEMENT IS
*                                           NOT TO BE RETURNED       */
*%DCL RBIRBAER CHAR;
*%RBIRBAER='''01''B';                    /* IRB HAS QUEUE ELEMENTS
*                                           FOR ASYNCHRONOUSLY
*                                           EXECUTED ROUTINES THAT
*                                           ARE RQE'S                */
*%DCL RBIQENR  CHAR;
*%RBIQENR ='''10''B';                    /* IQE IS NOT TO BE
*                                           RETURNED AT EXIT         */
*%DCL RBIRBAIQ CHAR;
*%RBIRBAIQ='''11''B';                    /* IRB HAS QUEUE ELEMENTS
*                                           FOR ASYNCHRONOUSLY
*                                           EXECUTED ROUTINES THAT
*                                           ARE IQE'S                */
*     4 RBFDYN   BIT(1),                 /* RB STORAGE CAN BE FREED
*                                           AT EXIT                  */
*     4 RBECBWT  BIT(1),                 /* IF ZERO, WAIT FOR A
*                                           SINGLE EVENT OR ALL  OF
*                                           A NUMBER OF EVENTS ---
*                                           IF ONE, WAIT FOR A
*                                           NUMBER OF EVENTS THAT
*                                           IS LESS THAN THE TOTAL
*                                           NUMBER OF EVENTS
*                                           WAITING                  */
*   2 RBSVTQN     PTR(31),               /* ADDRESS OF NEXT REQUEST
*                                           BLOCK ON QUEUE OF
*                                           TRANSIENT ROUTINES       */
*   2 RBOPSW      CHAR(8),               /* USER'S OLD PSW (ALL
*                                           RB'S)                    */
*   2 RBTAWCSA    PTR(8),                /* SAVE AREA FOR NUMBER OF
*                                           REQUESTS FIELD,  USED IF
*                                           TRANSIENT ROUTINE IS
*                                           OVERLAID  (SVRB-TRANS)   */
*   2 RBSVTTR     CHAR(3),               /* TTR FOR SVC ROUTINE
*                                           (SVRB-TRANS)             */
*   2 RBLINK      PTR(31),               /* SAME AS FOR RBLINKB
*                                           BELOW                    */
*    3 RBWCF       PTR(8),               /* NUMBER OF REQUESTS
*                                           WAITING (WAIT COUNT)
*                                           (ALL RB'S)               */
*    3 RBLINKB     PTR(24)  BDY(BYTE),   /* ADDRESS OF PREVIOUS RB,
*                                           OR ADDRESS OF TCB WHEN
*                                           THIS IS FIRST RB ON THE
*                                           QUEUE  (ALL RB'S)        */
*   2 PRBEND   CHAR(0),                  /* END OF PRB               */
*   2 RBGRSAVE    CHAR(64)  BDY(WORD),   /* GENERAL REGISTER SAVE
*                                           AREA  (SVRB-BOTH, IRB,
*                                           SIRB)                    */
*    3 RBGRS0      FIXED(31),            /* SAVE AREA FOR GENERAL
*                                           REGISTER 0               */
*    3 RBGRS1      FIXED(31),            /* SAVE AREA FOR GENERAL
*                                           REGISTER 1               */
*    3 RBGRS2      FIXED(31),            /* SAVE AREA FOR GENERAL
*                                           REGISTER 2               */
*    3 RBGRS3      FIXED(31),            /* SAVE AREA FOR GENERAL
*                                           REGISTER 3               */
*    3 RBGRS4      FIXED(31),            /* SAVE AREA FOR GENERAL
*                                           REGISTER 4               */
*    3 RBGRS5      FIXED(31),            /* SAVE AREA FOR GENERAL
*                                           REGISTER 5               */
*    3 RBGRS6      FIXED(31),            /* SAVE AREA FOR GENERAL
*                                           REGISTER 6               */
*    3 RBGRS7      FIXED(31),            /* SAVE AREA FOR GENERAL
*                                           REGISTER 7               */
*    3 RBGRS8      FIXED(31),            /* SAVE AREA FOR GENERAL
*                                           REGISTER 8               */
*    3 RBGRS9      FIXED(31),            /* SAVE AREA FOR GENERAL
*                                           REGISTER 9               */
*    3 RBGRS10     FIXED(31),            /* SAVE AREA FOR GENERAL
*                                           REGISTER 10              */
*    3 RBGRS11     FIXED(31),            /* SAVE AREA FOR GENERAL
*                                           REGISTER 11              */
*    3 RBGRS12     FIXED(31),            /* SAVE AREA FOR GENERAL
*                                           REGISTER 12              */
*    3 RBGRS13     FIXED(31),            /* SAVE AREA FOR GENERAL
*                                           REGISTER 13              */
*    3 RBGRS14     FIXED(31),            /* SAVE AREA FOR GENERAL
*                                           REGISTER 14              */
*    3 RBGRS15     FIXED(31),            /* SAVE AREA FOR GENERAL
*                                           REGISTER 15              */
*   2 SIRBEND  CHAR(0),                  /* END OF SIRB              */
*   2 RBEXSAVE (12) FIXED(31),           /* EXTENDED SAVE AREA FOR
*                                           SVC ROUTINES
*                                           (SVRB-BOTH)              */
*   2 SVRBEND  CHAR(0);                  /* END OF SVRB (BOTH)       */
*
*
*DECLARE 1 RBSECS01
*      BASED(ADDR(RBTABNO)),             /* FOR SIRB                 */
*   2 RBEXRTNM    CHAR(8);               /* EIGHT-CHARACTER NAME OF
*                                           ERROR EXIT  ROUTINE
*                                           (SIRB)                   */
*
*
*DECLARE 1 RBSECS02
*      BASED(ADDR(RBTABNO)),             /* FOR IRB                  */
*   2 RBPPSAV     PTR(31),               /* ADDRESS OF PROBLEM
*                                           PROGRAM REGISTER SAVE
*                                           AREA (IRB)               */
*    3 RBTMFLD     CHAR(1),              /* INDICATORS FOR TIMER
*                                           ROUTINES. WHEN  THERE
*                                           ARE NO TIMER ROUTINES,
*                                           THIS FIELD  IS ZERO.
*                                           (IRB)                    */
*     4 RBTMQUE  BIT(1),                 /* TIMER ELEMENT NOT ON
*                                           QUEUE                    */
*     4 RBTMTOD  BIT(1),                 /* LOCAL TIME-OF-DAY OPTION
*                                           IS USED                  */
*     4 RBTMIND1 BIT(2),                 /* TIME INTERVAL REQUEST
*                                           FORM                     */
*%DCL RBTITU   CHAR;
*%RBTITU  ='''00''B';                    /* TIME INTERVAL REQUESTED
*                                           IN TIMER UNITS           */
*%DCL RBTIB    CHAR;
*%RBTIB   ='''01''B';                    /* TIME INTERVAL REQUESTED
*                                           IN BINARY FORM           */
*%DCL RBTID    CHAR;
*%RBTID   ='''11''B';                    /* TIME INTERVAL REQUESTED
*                                           IN DECIMAL FORM          */
*     4 RBTMCMP  BIT(1),                 /* INTERVAL HAS EXPIRED     */
*     4 RBTMIND2 BIT(1),                 /* EXIT SPECIFIED WITH TASK
*                                           OR REAL REQUEST          */
*     4 RBTMIND3 BIT(2),                 /* TYPE OF REQUEST          */
*%DCL RBTREQ   CHAR;
*%RBTREQ  ='''00''B';                    /* TASK REQUEST             */
*%DCL RBWREQ   CHAR;
*%RBWREQ  ='''01''B';                    /* WAIT REQUEST             */
*%DCL RBRREQ   CHAR;
*%RBRREQ  ='''11''B';                    /* REAL REQUEST             */
*    3 RBPPSAV1    PTR(24)  BDY(BYTE);   /* ADDRESS OF PROBLEM
*                                           PROGRAM REGISTER SAVE
*                                           AREA (IRB)               */
*
*
*DECLARE 1 RBSECS03
*      BASED(ADDR(RBSVTQN)),             /* FOR SVRB-RES AND PRB     */
*   2 RBCDE       PTR(31),               /* SAME AS RBCDE1 BELOW     */
*    3 RBCDFLGS    CHAR(1),              /* CONTROL FLAGS            */
*     4 *        BIT(4),                 /* RESERVED                 */
*     4 RBCDWORK BIT(1),                 /* A WORK AREA HAS BEEN
*                                           ESTABLISHED FOR BLDL AND
*                                           FETCH                    */
*     4 RBCDSYNC BIT(1),                 /* SYNCH MACRO INSTRUCTION
*                                           REQUESTED                */
*     4 RBCDXCTL BIT(1),                 /* XCTL MACRO INSTRUCTION
*                                           REQUESTED                */
*     4 RBCDLOAD BIT(1),                 /* LOAD MACRO INSTRUCTION
*                                           REQUESTED                */
*    3 RBCDE1      PTR(24)  BDY(BYTE);   /* ADDRESS OF CDE FOR
*                                           MODULE THAT THIS RB IS
*                                           ASSOCIATED WITH
*                                           (SVRB-RES, PRB)          */
*
*
*DECLARE 1 RBSECS04
*      BASED(ADDR(RBSVTQN)),             /* FOR IRB AND SIRB         */
*   2 RBEP        PTR(31);               /* ENTRY POINT ADDRESS OF
*                                           ASYNCHRONOUSLY  EXECUTED
*                                           ROUTINE (IRB, SIRB)      */
*
*
*DECLARE 1 RBSECS05
*      BASED(ADDR(RBTAWCSA)),            /* FOR SVRB-RES AND PRB     */
*   2 RBPGMQ      PTR(31),               /* SAME AS RBPGMQ1 BELOW    */
*    3 *           CHAR(1),              /* ZERO                     */
*    3 RBPGMQ1     PTR(24)  BDY(BYTE);   /* ADDRESS OF RB INDICATING
*                                           A REQUEST TO USE SAME
*                                           SERIALLY REUSABLE
*                                           PROGRAM   (SVRB-RES,
*                                           PRB)                     */
*
*
*DECLARE 1 RBSECS06
*      BASED(ADDR(RBTAWCSA)),            /* FOR IRB (3-BYTE LINK
*                                           FIELD SEGMENT)           */
*   2 RBIQE       PTR(31),               /* LIST ORIGIN FOR IQE
*                                           (IRB)                    */
*    3 RBUSE       PTR(8),               /* USE COUNT USED BY ATTACH
*                                           (IRB)                    */
*    3 RBIQE1      PTR(24)  BDY(BYTE);   /* LIST ORIGIN FOR IQE
*                                           (IRB)                    */
*
*
*DECLARE 1 RBSECS07
*      BASED(ADDR(RBTAWCSA)),            /* FOR IRB (2-BYTE LINK
*                                           FIELD SEGMENT), SIRB     */
*   2 RBIQE2      FIXED(31),
*    3 *           CHAR(2),              /* RESERVED                 */
*    3 RBIQEA      FIXED(15);            /* LIST ORIGIN FOR RQE (IRB
*                                           WITH 2-BYTE LINK FIELD
*                                           SEGMENT, SIRB)           */
*
*
*DECLARE 1 RBSECS08
*      BASED(ADDR(RBEXSAVE)),            /* FOR IRB--FIELDS PRESENT
*                                           ONLY IF REQUESTED        */
*   2 RBNEXAV     PTR(31),               /* ADDRESS OF NEXT
*                                           AVAILABLE IQE (IRB)      */
*   2 RBIQEWRK    FIXED(31);             /* IQE WORK SPACE, VARIABLE
*                                           LENGTH,  MAXIMUM SIZE IS
*                                           1984 BYTES (IRB)         */
