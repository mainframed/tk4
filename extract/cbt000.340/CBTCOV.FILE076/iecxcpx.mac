         MACRO
         IECXCP &TAPE,&SMF,&P3211,&TP,&APR,&VP,&SKORD,&RFIFO,&RPR,     *
               &TWOSW,&VS,&PROTECT,&TRACE,&SSDA,&TCBTYP,&SSTA,&GR,     *
               &NOP1,&RWTAU,&RESJQ,&NOP2,&ASR,&M65MP,&TBASE,&ANR,      X
               &DAVV,&DDR,&M7CH,&ASPN,&NOP4,&OLTEP,&TSO,&CEXT,&RMS,    X
               &TCAM,&MFTATT,&NOP3,&ALTSHR                       A52475
         GBLB  &IECITB
         GBLB  &D2311,&D2321,&D2301,&D2303,&D2305,&DML            20201
         GBLB  &R2311,&R2321,&R2301,&R2303,&R2305,&RML            20201
         LCLB  &RESREL,&RPS,&TBYT                                 20201
&RESREL  SETB  (&R2321 OR &R2311)                                 20201
&RPS     SETB  (&D2305 OR &DML)                                   20201
&TBYT    SETB  (&IECITB)                SET IF 2 BYTE CU LOOKUP TA20201
         TITLE 'EXTRNS AND ENTRYS - INPUT/OUTPUT SUPERVISOR'
         AIF   (&TCBTYP LT 2).MVT010                             A24739
         EXTRN  IEA0XE00,DISMISS
         AIF   (&M65MP EQ 1).MPB004
         EXTRN IEATCBP
.MPB004  EXTRN IEA0DS02,IEAHEAD                                    MP1A
.MVT010  EXTRN IEA0PT01                POST ROUTINE ENTRY POINT    MP1A
         AIF   (&ASR EQ 0 OR &M65MP EQ 1 OR &TCBTYP EQ 1).NCLP01  M0192
         EXTRN IEA0IO02                 PSEUDO DISABLE SW IN FLIH 21111
.NCLP01  EXTRN ER2311                   2311 ERROR ROUTINE ENTRY POINT
         EXTRN IEEBA1         CONSOLE ATTENTION HANDLER
         EXTRN IEFDPOST       SCHEDULE POST ROUTINE (ATTENTION)
         AIF   (&TCAM EQ 0).NTCAM       TEST FOR TCAM             20002
         EXTRN IEDQATTN                 TCAM ATTENTION HANDLER    20002
.NTCAM   AIF   (&DDR EQ 0).DDR21                                  20002
         EXTRN DDRIOB,DDRDEB,IGFRMTCB,IGF0IOB,IGF0DEB             19022
.DDR21   AIF   (&M65MP EQ 0).MPB008                               19022
         EXTRN SHOLDTAP                 SHOULDER TAP ENTRY POINT   MP1A
         ENTRY IECTCHMP       ENTRY FROM M65MP VARY COMMANDS       MP1A
         ENTRY IECTIOMP       ENTRY FROM M65MP VARY COMMANDS       MP1A
         ENTRY IECISHTP            S.T. INTERFACE, RECEIVING CPU   MP1A
.MPB008  ENTRY IGC000                   EXCP
         AIF   (&TCBTYP EQ 0).PGMCK00                            A24739
         ENTRY IECCPL00       PROGRAM CHECK ROUTINE              A24739
.PGMCK00 ENTRY IECINT         I/O INTERRUPTION SUPERVISOR        A24739
         ENTRY IGC015         ERROR EXCP
         ENTRY IECIHIO                 COMMON HIO ROUTINE          IMP2
         ENTRY IECIXAVL       POINTER TO NEXT AVAILABLE REQUEST ELEMENT
         ENTRY IECXAPG        APPENDAGE VECTOR TABLE
         ENTRY IECILCH        LOGICAL CHANNEL WORD TABLE
         ENTRY IECILK1        UCB LOOKUP TABLE CH + CNTRL UNIT PORTION
         ENTRY IECILK2        UCB LOOKUP TABLE UCB ADDRESS PORTION
         ENTRY IECIOQET       REQUEST ELEMENT TABLE
         ENTRY IECSTB         STATISTICS TABLE
         ENTRY INT025         ENTRY TO PURGE COMPLETE AND RETURN
*                             RQE FOR THE SUPERVISOR
         ENTRY XCP064         LOCATE LOGICAL CHANNEL WORD
         ENTRY IECDMS                   DIMISS ADDRESS-I/O INTR. RETURN
         ENTRY IECCST,IECITSAR                                     IMP4
         ENTRY IECRQE00                                         SA53191
         AIF   (&TSO EQ 0).TSO000       TEST FOR TIME SHARING     20001
         ENTRY IGC092                   TCB EXCP                  20001
.TSO000  ANOP                                                     20001
         ENTRY IECOLTVT,DEVTAB          OLTEP SUPPORT
         AIF   (&RMS EQ 0).RMS10                                  19021
         ENTRY IECRMS                                             19021
.RMS10   AIF   (&DDR EQ 0).DDR20                                  19022
         ENTRY DDRRQE,DDRAPNVT,DDRSRTO  RQE, APN VT, SVAREA       19022
.DDR20   AIF   (&DDR LT 2).DDR22        NO SYSRES DDR, SKIP       19022
         ENTRY DDRRQESR                 RQE FOR SYSRES DDR        19022
.DDR22   TITLE 'EQUATES - INPUT/OUTPUT SUPERVISOR'
*    REGISTER DEFINITIONS                                        BBBBBB
REG0     EQU   0                        TEMPORARY BAL REGISTER   BBBBBB
TCBRG0   EQU   0                        PARAMETER REGISTER        20001
TSTREG   EQU   1                        REQUEST ELEMENT ADDRESS
IOBREG   EQU   2                        IOB ADDRESS
DEBREG   EQU   3                        DEB ADDRESS
DCBREG   EQU   4                        DCB ADDRESS
TCBREG   EQU   4                        TCB ENVIRONMENTAL REGISTER20001
BASREG   EQU   5                        BASE VALUE FOR IOS
UAREG    EQU   6                        UNIT ADDRESS
UCBREG   EQU   7                        UCB ADDRESS
BASREG2  EQU   8                        SECOND BASE REGISTER       TBSE
LNKRG1   EQU   8                        MAIN LINK REGISTER
ICREG    EQU   9                        INSERT CHARACTER REG
WKREG1   EQU   10                       MAIN WORKING REGISTER
WKREG2   EQU   11                       WORKING REGISTER
WKREG3   EQU   12                       SPARE WORK REGISTER
LNKRG3   EQU   WKREG3                   SPARE LINK REGISTER
LCHREG   EQU   13                       LOGICAL CHANNEL WORD
LNKRG2   EQU   14                       LINK REGISTER
APBSRG   EQU   15                       APPENDAGE BASE REG
         EJECT
*    IOB DEFINITION                                              BBBBBB
IOBFL1   EQU   0                        FLAGS 1
IOBFL2   EQU   1                        FLAGS 2
IOBSNS   EQU   2                        SENSE DATA
IOBCOD   EQU   4                        ECB CODE
IOBECB   EQU   5                        ECB POINTER
IOBCSW   EQU   8                        CSW STORAGE
IOBFL3   EQU   IOBCSW                   FLAGS 3 ARE IN FIRST BYTE
IOBCC    EQU   16                       CONDITION CODE
IOBST    EQU   17                       START ADDRESS
IOBWGT   EQU   20                       WEIGHT CODE
IOBDCB   EQU   21                       DCB POINTER
IOBMDB   EQU   24                       MODIFIER BYTE
IOBRST   EQU   25                       RESTART POINTER
IOBBCI   EQU   28                       BLOCK COUNT INCR.
IOBECT   EQU   30                       ERROR COUNTS
IOBDAM   EQU   32                       DIRECT ACCESS EXTENT (M) BYTE
IOBCCR   EQU   35                       SEEK CYLINDER IN IOB
         SPACE 2
*    THESE FLAGS ARE IN IOB FLAG 1                               BBBBBB
IOBCDS   EQU   X'C0'                    IOB CHANNEL DESP. FLAG
IOBERR   EQU   X'20'                    ERROR CORRECTION IND.
IOBMD1   EQU   X'10'                    MOD1 FLAG- POSITIONING
IOBMD2   EQU   X'08'                    MOD2 FLAG- TAPE(CRC CORRECTION)
IOBEX    EQU   X'04'                    EXCEPT FLAG
IOBURL   EQU   X'02'                    UNRELATED OR NON-SEQUENT.
IOBSRS   EQU   X'01'                    START/RESTART FLAG
         SPACE 1
*    THESE FLAGS ARE IN IOB FLAG 2                               BBBBBB
IOBHLT   EQU   X'80'                    HALT I/O ISSUED FLAG
IOBSNB   EQU   X'40'                    SENSE BIT
IOBPRG   EQU   X'20'                    PURGE FLAG
IOBHAR0  EQU   X'10'                    READ HA AND R0 FLAG
IOBNET   EQU   X'08'                    NO TEST FOR OUT OF EXT.  BBBBBB
IOBUEX   EQU   IOBNET                   WRT.ERR.ON UE FOR 2400 TAPE
IOBROR   EQU   X'04'                    RD OP RECOVERY IN PROC.  BBBBBB
IOBGRF   EQU   X'02'                    CE WITHOUT DE INDICAT. FOR GR.
IOBQSM   EQU   X'01'                    USED BY QSAM AND TP
         SPACE 1
IOBCC1   EQU   X'10'                    CONDITION CODE OF SIO
IOBCC3   EQU   X'30'                    NOT OPERATIONAL C CODE
         SPACE 3
*    ECB DEFINITION                                              BBBBBB
ECBFL    EQU   0                        FLAGS
         SPACE 1
*    THESE ARE COMPLETION CODE SETTINGS                          BBBBBB
NORMC    EQU   X'7F'                    NORMAL COMPLETE SETTING OF FLS
IOBINT   EQU   X'7E'                    IOB INTERCEPT CODE
PERMER   EQU   X'41'                    I-O PERM ERROR
EXTERR   EQU   X'42'                    EXTENT PERM ERROR
INTCOD   EQU   X'44'                    INTERCEPT POST CODE
PRGCOD   EQU   X'48'                    PURGED REQUEST
HAR0ER   EQU   X'4F'                    HOME ADDRESS AND R0 ERROR
         SPACE 3
*    UCB DEFINITION                                              BBBBBB
UCBMPANX EQU   4                        NEG. DISP. FOR MP FLAGS3   MP1A
UCBFL3   EQU   0                        FLAG IN UCB ANNEX        BBBBBB
UCBALLC  EQU   1                        ALLOCATE MASK FOR UCB
UCBFL5   EQU   1                        EXTRA UCB FLAGS           20201
SRTESTAT EQU   3                        STATUS BYTE A
UCBID    EQU   2                        UCB  I D
UCBCHA   EQU   4                        CHANNEL ADDRESS
UCBUA    EQU   5                        UNIT ADDRESS
UCBFL1   EQU   6                        FLAGS 1
UCBDTI   EQU   7                        DEVICE TABLE INDEX
UCBETI   EQU   8                        ERROR TABLE INDEX
UCBSTI   EQU   9                        STATISTICS TABLE INDEX
UCBLCI   EQU   10                       LOGICAL CHANNEL INDEX
UCBATI   EQU   11                       ATTENTION TABLE INDEX
UCBCHM   EQU   12                       CHANNEL MASK(BITS 4-7)
UCBNAM   EQU   13                       UNIT NAME - EBCDIC        19022
UCBTYP   EQU   16                       DEVICE TYPE CODE
UCBLTS   EQU   20                       LAST REQUEST ELEMENT ADDRESS
UCBSNS   EQU   22                       SENSE DATA
UCBFL7   EQU   UCBSNS                   FLAGS 7 BYTE FOR DEVICES A44146
*                                       WITH EXPANDED SENSE      A44146
UCBNBRSN EQU   24                       COUNT OF DEVICE SENSE INFO20201
UCBSNADR EQU   25                       POINTER TO SENSE DATA AREA20201
UCBVOL1  EQU   28                       VOLUME SERIAL              DAVV
UCBRQESV EQU   42                       VOL VER RTN RQE SAVE AREA  DAVV
UCBFL4   EQU   44                       VOL VER RTN FLAGS          DAVV
UCBORCNT EQU   44                       ORD. SEEK QUEUE USER COUNT OSER
UCBORSV  EQU   45                       ORD. SEEK QUEUE LAST DEB   OSER
UCBSKA   EQU   48                       LAST SEEK ADDRESS
UCBROR   EQU   48                       RD OP RECOVERY WK AREA   BBBBBB
UCBVOPT  EQU   48                       TAPE VOLUME OPTIONS       21048
UCBCCR   EQU   51                       CYLINDER OF LAST OPERATION
DCELBBNR EQU   56                       FIRST SUB-UCB OF 2321     19022
UCBWKADB EQU   60                       PTR TO NON-2321 ERP WKAREA
UCBWKADA EQU   216                      PTR TO 2321 ERP WORK AREA  S248
UCBWKDCC EQU   80                       WK AREA DISPL TO DCC CP   19025
UCBRRCNT EQU   40                       ONE BYTE RES/REL COUNTER BBBBBB
UCBDVRES EQU   41                       DEVICE RESERVED INDICATOR  SDA1
RSVD     EQU   X'80'                    DEVICE RESERVED BIT     SA73317
PND      EQU   X'40'                    RESERVE/RELEASE PENDING SA73317
UCBRR0A  EQU   124                      INPUT AREA FOR READ R0     S248
UCBRHA   EQU   4                        OFSET FROM R-R0 TO R-HA
RHADR    EQU   8                        INCR. TO RHA ADDRESS     A49373
RR0ADR   EQU   16                       INCR. TO RR0 DATA ADDR   A49373
UCBRR    EQU   X'20'                    SHARED DEVICE OPTION IND.BBBBBB
UCBRPS   EQU   X'10'                    ROT. POS. SNS. OPT. FEAT  19025
UCBCHGS  EQU   X'40'                    VARY PENDING BIT        SA67706
UCBUNSOL EQU   X'01'                    UNSOLICITED INTERRUPT     21048
         SPACE 2
*    FLAGS IN UCB CHANNEL FIELD
UCBHLT   EQU   X'80'                    HALT I/O FLAG FROM PURGE
UCBSMD   EQU   X'40'                    STATUS MODIFIER FLAG
UCBDSNS  EQU   X'20'                    DELAYED SENSE PENDING     21111
UCBDHIO  EQU   X'10'                    DELAYED HIO PENDING       21111
         SPACE 1                                                 BBBBBB
*    FLAGS 1 IN UCB                                              BBBBBB
UCBBSY   EQU   X'80'                    BUSY BIT
UCBNRY   EQU   X'40'                    UCB NOT READY
UCBPST   EQU   X'20'                    POST FLAG
UCBITF   EQU   X'10'                    UCB INTERCEPT FLAG
UCBCUB   EQU   X'08'                    CONTROL UNIT BUSY FLAG
UCBDTR   EQU   X'04'                    DISK DATA TRANSFER
UCBASK   EQU   X'02'                    DISK ARM SEEKING
UCBERR   EQU   X'01'                    ERROR RTN IN CONTROL FLAG
UCBIDV   EQU   X'FF'                    ID BYTE OF UCB           BBBBBB
         SPACE 1
*    FLAGS 5 IN UCB                                               20201
UCBUEX   EQU   X'80'                    UNIT EXEP ON SENSE       S22024
UCBTICBT EQU   X'20'                    CE OR DE INTER. OWED     A42261
UCBEXTSN EQU   X'08'                    SNESE DATA NOT IN UCB     20201
UCBNALOC EQU   X'04'                    OLTEP OWNS DEVICE       SA58683
         SPACE 1
*    FLAGS 3 IN UCB FOR MULTIPROCESSING                          BBBBBB
UCBACU   EQU   X'80'                    ALT. C.U. ON THIS DEVICE  19022
UCBCPUA  EQU   X'08'                    WHICH CPU ISSUED LAST SIO 21063
         SPACE 1                                                  19022
*    FLAGS 4 IN UCB
UCBDAV   EQU   X'F8'                    DAVV FLAG BYTE             DAVV
UCBDAVV  EQU   X'78'                    DAVV MNT MASK           SA57136
UCBVVR   EQU   X'40'                    VOL VER RTN IN CONTROL     DAVV
UCBVER   EQU   X'48'                    VOLUME VERIFIED FLAG       DAVV
         SPACE 1
*    FLAGS 7 IN UCB
STPPRNT  EQU   X'80'                    CANCEL KEY HIT ON 3211   A44146
         SPACE 1
*    UCB DEVICE TYPE CODES
DRUM     EQU   X'02'                    DRUM
UCB2321  EQU   X'05'                    DATA CELL
ZEUSA    EQU   X'06'                                              20201
ZEUSC    EQU   X'07'                                              20201
MERLIN   EQU   X'09'                                              20201
GRTYPE   EQU   X'10'                    GRAPHICS
DSKTYP   EQU   X'20'                    DISK
TPTYPE   EQU   X'40'                    TELEPROCESSING
TAPE     EQU   X'80'                    TAPE
         SPACE 3
*    DEB DEFINITION                                              BBBBBB
DEBTCB   EQU   1                        DEB POINTER TO TCB
DEBDEB   EQU   4                        ADDR OF NEXT DEB IN CHAINDEBVTY
DEBOPFL  EQU   8                        DATA SET STATUS FLAGS
DEBQUS   EQU   13                       DEB QUIESCE COUNT        BBBBBB
DEBENT   EQU   16                       NO. OF DEB EXTENTS
DEBUPG   EQU   17                       USER PURGE CHAIN
DEBPR    EQU   20                       PRIORITY
DEBEPG   EQU   21                       PURGE ECB ADDR.
DEBPRT   EQU   24                       PROTECTION TAG
DEBID    EQU   24                       ID FOR PROTECTION
DEBDCB   EQU   25                       DCB LOC POINTER
DEBEXT   EQU   28                       EXTENT SCALE
DEBAPG   EQU   29                       APPD. TABLE BASE
DEBMDM   EQU   32                       MODIFIER MASK
DEBUCB   EQU   33                       UCB POINTER
DEBEXTNT EQU   36                       DEB EXTENT OFFSET
DEBIDV   EQU   X'0F'                    VALUE OF DEB ID
DEBSCA   EQU   X'04'                    SPLIT CYLINDER ALLOCATION
         SPACE 2
*    DEB EXTENT OFFSETS
DEBBB    EQU   0                        BIN NUMBER
DEBST    EQU   2                        EXTENT START ADDRESS
DEBEND   EQU   6                        EXTENT END ADDRESS
*    DEB APPENDAGE VECTOR TABLE OFFSETS                          BBBBBB
APGEOE   EQU   0                        END OF EXTENT VECTOR
APGSIO   EQU   4                        APPENDAGE SIO VECTOR
APGPCI   EQU   8                        APPENDAGE PCI VECTOR
APGCHE   EQU   12                       APPENDAGE CHANNEL END
APGABE   EQU   16                       APPENDAGE ABNORMAL END LOC
         SPACE 3
*    DCB DEFINITION                                              BBBBBB
DCBBLK   EQU   12                       DCB FLOCK COUNT
DCBFL    EQU   44                       FLAGS
DCBDEB   EQU   45                       DEB POINTER
DCBIEM   EQU   52                       IOS ERROR MASK
DCBUEM   EQU   56                       USER ERROR MASK
         SPACE 2
*    DCB FLAGS
DCBPER   EQU   X'C0'                    PERMANENT ERROR FLAGS
DCBEX    EQU   X'40'                    EXCEPTION CONDITION
DCBIEK   EQU   X'0C'                    IOS ERROR KEY
DCBUEK   EQU   X'03'                    USER ERROR KEY
         SPACE 3
*    REQUEST ELEMENT DEFINITION                                  BBBBBB
TSTLNK   EQU   0                        FORWARD RQE LINK
TSTUCB   EQU   2                        UCB POINTER
TSTASSN  EQU   4                        ASSIGN RQE BYTE
         AIF   (&TCBTYP LT 2).STIOS33   NOT MVT, SKIP            A24739
TSTKEY   EQU   12                       REQUESTORS PROTECT KEY
TSTTCB   EQU   12                       TCB POINTER
RQELN    EQU   16                       MVT RQE LENGTH
         AGO   .STIOS34
.STIOS33 ANOP                           SSS TCB/ID
TSTTCB   EQU   4                        TCB ID BYTE
RQELN    EQU   12                       MFT RQE LENGTH
.STIOS34 ANOP
TSTIOB   EQU   5                        IOB POINTER
TSTPR    EQU   8                        PRIORITY OF ENTRY
TSTDEB   EQU   9                        DEB POINTER
         SPACE 3
*    LOGICAL CHANNEL DEFINITION                                  BBBBBB
LCHFTS   EQU   0                        FIRST RQE
LCHLTS   EQU   2                        LAST RQE
LCHENQ   EQU   4                        ENQUEUE CODE POINTER
LCHSRH   EQU   4                        SCRATCH AREA
LCHTCH   EQU   6                        TEST CHANNEL CODE ADDRESS
LCHOUT   EQU   X'80'                                               PRER
         SPACE 3
*    DEVICE TABLE DEFINITION                                     BBBBBB
DVTENQ   EQU   0                        ENQUEUE ADDRESS OFFSET
DVTSIO   EQU   2                        SIO ADDRESS OFFSET
DVTTRP   EQU   4                        TRAP ADDRESS OFFSET
DVTSEN   EQU   6                                                  20201
         SPACE 3
*    LOGICAL CHANNEL TABLE                                       BBBBBB
LCTCSC   EQU   0                        LOGICAL CH. TBL SEARCH CODE
LCTMSK   EQU   2                        LOGICAL CH. TBL MSK
LCTFLS   EQU   3                        LOGICAL CHANNEL TBL FLAGS
LCTSLBX  EQU   X'03'                    SELECTOR OR BLK MPX MASK A47317
         SPACE 3                                                 BBBBBB
*    SYSTEM CHANNEL PROGRAM OFFSETS                              BBBBBB
SEEK2    EQU   0                        D/A DTR CCW
SFMCCW   EQU   SEEK2+8                  SET FILE MASK CCW        BBBBBB
SMMSK2   EQU   SEEK2+13                 FILE MASK LOC. IN CCW
SKTIC    EQU   SEEK2+16                 TIC TO USERS PROGRAM
TAPEIO   EQU   8                        SET MODE OR TIE OPCODE  SA54451
CRCBTE   EQU   13                       CRC CORRECTION BYTE     SA54451
TAPETIC  EQU   16                       TIC TO USER             SA54451
         SPACE 2                                                 BBBBBB
*    CCW FLAG BITS                                               BBBBBB
CCWFLG   EQU   4                        CCW OFFSET TO FLAGS      BBBBBB
CCWCC    EQU   X'40'                    COMMAND CHAINING BIT     BBBBBB
CCWSLI   EQU   X'20'                    SUPPRESS LENGTH BIT      BBBBBB
CCWSD    EQU   X'10'                    SUPPRESS DATA TRANSFER   BBBBBB
CCWLN    EQU   8                        LENGTH OF CCW            A27691
         SPACE 1
*    CCW COMMAND CODES
RELEASE  EQU   X'94'                    2-CHANNEL SWITCH RELEASE   IMP5
RESERVE  EQU   X'B4'                    2-CHANNEL SWITCH RESERVE   IMP5
SENSOP   EQU   X'04'                    SENSE                      IMP5
RR0OP    EQU   X'16'                    READ R0                  A49373
SETFMSK  EQU   X'1F'                    SET FILE MASK              IMP5
HAOP     EQU   X'1A'                    READ HOME ADDRESS          IMP5
TICOP    EQU   X'08'                    TRANSFER IN CHANNEL        IMP5
TIEOP    EQU   X'1B'                    TRACK IN ERROR FOR TAPE    IMP5
NOOP     EQU   X'03'                    NO OPERATION               IMP5
         EJECT
*    STATUS INDICATORS                                           BBBBBB
CSWATN   EQU   X'80'                    ATTENTION FLAG
CSWSMD   EQU   X'40'                    STATUS MODIFIER
CSWCUE   EQU   X'20'                    CONTROL UNIT END
CSWBSY   EQU   X'10'                    BUSY
CSWCHE   EQU   X'08'                    CHANNEL END
CSWDVE   EQU   X'04'                    DEVICE END
CSWUCK   EQU   X'02'                    UNIT CHECK
CSWUEX   EQU   X'01'                    UNIT EXCEPTION
CSWPCI   EQU   X'80'                    PCI
CSWIL    EQU   X'40'                    WRONG LENGTH IND.
CSWPC    EQU   X'20'                    PROGRAM CHECK
CSWPCK   EQU   X'10'                    PROTECTION CHECK
CSWCDK   EQU   X'08'                    CHANNEL DATA CHECK
CSWCTK   EQU   X'04'                    CHANNEL CONTROL CHECK
CSWICK   EQU   X'02'                    INTERFACE CONTROL CHECK
CSWCCK   EQU   X'01'                    CHAINING CHECK
CUBBIT   EQU   CSWSMD+CSWBSY            CONTROL UNIT BUSY        BBBBBB
CATBIT   EQU   CSWCDK+CSWCTK+CSWICK     CATASTROPHIC ERROR       BBBBBB
         AIF   (&ASR EQ 0).ASR00                                 BBBBBB
CATCCH   EQU   CSWCDK                   CHANNEL DATA CHECK       BBBBBB
CSWCLP   EQU   X'04'                    CHANNEL LOGOUT PENDING    21111
ERPWKA   EQU   104                      OFFSET TO ERP WORK AREA   21111
         AGO   .ASR01                                            BBBBBB
.ASR00   ANOP                                                    BBBBBB
CATCCH   EQU   0                        ZERO IF NO CCH IN SYSTEM BBBBBB
.ASR01   SPACE 3                                                 BBBBBB
*    CCH INDEX/FLAG DEFINITIONS                                  BBBBBB
CATSSK   EQU   0                        DIRECT ACCESS MODULE - SIO  CCH
CATTIOSK EQU   4                        DIRECT ACCESS MODULE - TIO  CCH
CATSNS   EQU   8 .                      SENSE SUBROUTINE ----- SIO  CCH
CATTIOSN EQU   12 .                     SENSE SUBROUTINE ----- TIO  CCH
CATSIO   EQU   16                       POST SIO MODULE -----SIO BBBBBB
CATINT   EQU   20                       IOS INTERRUPT SUP. ---INT.
CATHIO   EQU   24                       HIO SUBROUTINE -----HIO  BBBBBB
CATREC   EQU   28                       SENSE SUBROUTINE RETURN  BBBBBB
         SPACE 3
*    CHANNEL ERROR BLOCK DEFINITION AND APR FLAGS                BBBBBB
CEBINA   EQU   0                        CEB INACTIVE FIELD        19022
CEBCHMSK EQU   1                        CEB CHAN MASK FIELD       19022
CEBRQE   EQU   2                        CEB RQE FIELD             19022
FREE     EQU   X'FE'                    INACTIVE CEB INDICATOR    19022
CEBNXT   EQU   4                        OFFSET TO NEXT CEB        19022
CEBACT   EQU   X'01'                    CEB ACT SW, AN ACTIVE CEB 19022
MULTPATH EQU   X'01'                    MULTIPLE PATH INDICATOR   19022
PTHIND   EQU   1                        PATH INDICATOR FIELD      19022
HEXF00   EQU   X'F00'                   CHANNEL MASK              19022
CUZER    EQU   X'0F'                    CONTRL UNIT ADDR MASK     19022
CUAZER   EQU   X'F0'                    CONT UNIT ADDR ZERO MSK   19022
CPUA     EQU   X'C1'                    CPUA INDICATOR            19022
CPUB     EQU   X'C2'                    CPUB INDICATOR          SA60510
TWOPATHS EQU   X'0A'                    PATH COMP MASK - 2 PATHS  19022
FOURPATH EQU   X'0F'                    PATH COMP MASK - 4 PATHS  19022
         SPACE 3                                                 BBBBBB
*    THESE ARE THE FLAGS SET IN XCPBTE
XCPCNT   EQU   X'80'                    XCP IN CONTROL FLAG
XCPERR   EQU   X'20'                    ERROR RTN ENTRANCE
XCPST    EQU   X'01'                    SHOULDER TAP ENTRANCE      MP1A
XCPRMS   EQU   X'10'                    RMS PROCESSING FLAG       19021
XCPRECUR EQU   X'08'                    PROGRAM CHECK RECURSING  A24739
XCPVALID EQU   X'02'                    VDTY CHK IN PROCESS      A24739
         SPACE 3                                                 BBBBBB
*    TCB FLAGS
TCBPRT   EQU   28                       LOC IN TCB FOR USER PROTECT
TCBFLG   EQU   30                       TCB MUST COMPLETE FLAG BYTE
TCBPR    EQU   35                       TCB DISPATCH PRIORITY    BBBBBB
         AIF   (&TCBTYP LT 2).NOTMVT                             A24739
TCBFLGS  EQU   32                       TCB DISPATCHABILITY FLAGE
TCBTCB   EQU   116                      TCB READY Q LINK FIELD
.NOTMVT  ANOP
TCBRQENA EQU   X'20'                    RQE NOT AVAL FLAG(TCB)
PPKEY    EQU   X'F0'
         SPACE 3                                                 BBBBBB
*    RMS FLAGS                                                    19021
RMSACTV  EQU   X'80'                    RMS ACTIVE INDICATOR      19021
RMSRQEFL EQU   X'40'                    RMS RQE SAVE AREA IN USE  19021
         AIF   (&OLTEP EQ 0).OLT000                              BBBBBB
         SPACE 3                                                 BBBBBB
*    OPTION CODES FOR OLTEP                                       19026
OLTCHOPT EQU   X'80'                    OLTEP CHANNEL FUNCTION    19026
OLTDEPST EQU   X'40'                    OLTEP D.E. POSTING        19026
OLTATPST EQU   X'20'                    OLTEP ATTN POSTING        19026
OLTBYPFN EQU   X'10'                    BYPASS SK, SFM, TIC CHAIN 19026
OLTEXP   EQU   X'08'                    SPECIFIC 2305 EXPOSURE    21051
OLTSIO   EQU   X'02'                    2ND SIO FUNCTION          21051
         SPACE 2
*    EXIT OFFSETS TO OLTEP ROUTINE                                19026
OLTHLT   EQU   8                        FROM HALT I/O ROUTINE     19026
OLTCHN   EQU   16                       FROM TEST CHANNEL         19026
OLTZEUS  EQU   20                       FROM 2305 SIO CODE        21051
.OLT000  SPACE 3                                                 BBBBBB
*    VECTOR TABLE OFFSETS                                        BBBBBB
SELTAG   EQU   4                        SELECT TRY AGAIN EXIT
SELBSY   EQU   8                        SELECT BUSY EXIT
SELNLCH  EQU   12                       SELECT NXT. LCH RETURN
         SPACE 3                                                 BBBBBB
*    PERMANENT STORAGE LOCATION ASSIGNMENTS                      BBBBBB
CVTADR   EQU   16                       LOCATION OF CVT ADDRESS  BBBBBB
SVOPSW   EQU   32                       SVC OLD PSW LOC.
PCKOPSW  EQU   40                       PGM CK OLD PSW
IOPSWO   EQU   56                       I/O OLD PSW LOCATION
CSWLOC   EQU   64                       CSW LOCATION
CAWLOC   EQU   72                       CAW LOCATION
MCKPSW   EQU   112                      MACHINE CHECK PSW LOC    BBBBBB
         SPACE 3
*        ABEND SAVE AREA EQUATES
ABID     EQU   0                    0   ABEND EBCDIC ID
ABTCB    EQU   ABID+8               8   ABEND TCB
ABCODE   EQU   ABTCB+4              C   ABEND CODE
ABIOPSW  EQU   ABCODE+4            10   ABEND I/O OLD PSW
ABRQEAD  EQU   ABIOPSW+4           14   ABEND RQE ADDRESS
ABBTE    EQU   ABRQEAD             14   ABEND XCPBTE
ABRQE    EQU   ABRQEAD+4           18   ABEND RQE CONTENTS
ABCSW    EQU   ABRQE+16            28   ABEND CURRENT CSW
ABPCOPSW EQU   ABCSW+8             30   ABEND PGM CHECK OLD PSW
ABSVOPSW EQU   ABPCOPSW+8          38   ABEND SVC OLD PSW
ABREGS   EQU   ABSVOPSW+8          40   ABEND PGM CK REGS
         AIF   (&TCBTYP GT 1).STMS1X1   IF MVT, SKIP             A24739
IONPSW   EQU   120                      IO NEW PSW DISAVLE MASK
.STMS1X1 SPACE 3                                                 BBBBBB
*    MISCELLANEOUS DEFINITIONS                                   BBBBBB
         AIF   (&TBASE EQ 1).TBS000                                RL19
IOSBASE  EQU   IPLPSW
.TBS000  ANOP                                                      RL19
ZERO     EQU   0                        ZERO OFFSET                IMP5
CHPTH    EQU   0                        OFFSET IN MP CHAN AVAIL TBL
TSKSW    EQU   0                        TASK SWITCH
BASADR   EQU   0                        OFFSET FOR BASE UCP PTR   20201
ONE      EQU   1                        USER COUNT INCREMENT       OSER
NXTCH    EQU   1                        INCREMENT CHAN ADDR
TWO      EQU   2                                                 BBBBBB
FOUR     EQU   4                                                 BBBBBB
OLDTCB   EQU   4                        OLD TCB ADDRESS
CHSNXT   EQU   4                        INC. FOR NEXT CODING IN CH. SH.
NXTEXP   EQU   4                        OFFSET FOR EXPOSURE UCB CH20201
FIVE     EQU   5                        OFFSET TO TCB ADDR ENTRY  20001
TCBADR   EQU   8                        OFFSET IN PARM LIST      BBBBBB
QCNT     EQU   8                        QUIESCE COUNT OFFSET     BBBBBB
TEN      EQU   10                       SENSE RETRY COUNT        A50319
ADTCE    EQU   12                       ADDRESS TRACE ROUTINE      TRCE
QPLPTR   EQU   12                       LIST PTR IN PURGE PARM    20001
SIOCNT   EQU   14                       TAPE SIO COUNTER OFFSET  19023
SIRBRQE  EQU   26                       RQE OFFSET IN SIRB      SA53191
CVTABT   EQU   52                       OFFSET TO ABTERM ADDRESS BBBBBB
EXPCHN   EQU   92                       OFFSET FOR CONTROL UCB PTR20201
TCBID    EQU   112                      ID OFFSET IN THE TCB
CVTHEAD  EQU   160                      OFFSET TO HIGHEST TCB    A24739
UPBND    EQU   164                      UPPER BOUND OF CORE        TRCE
KYWD     EQU   252                      ADDRESS KEYWORD            TRCE
PLIST    EQU   264                      PARM LIST                  TRCE
ONLNPTH  EQU   X'80'                    PATH IS AVAILABLE       SA60510
SHRDMPX  EQU   X'80'                    LOW UNIT ON SHARED MPX   A47317
DUMADR   EQU   X'01'                    DUMMY ADDRESS
SYSCON   EQU   X'02'                    SYSRES OR CONSOLE DEV
LSTOPT   EQU   X'08'                    LIST OPTION FOR PURGE     20001
BLKMPX   EQU   X'10'                    BLOCK MPX CHN INDICATOR   19025
NOTPMF   EQU   X'20'                    ALL CODES EXCEPT PERM ERROR
CHRCF    EQU   X'70'                    RECONFIGURED BITS
CHBSY    EQU   X'80'                    SELECTOR CHAN BUSY BIT
QPLFLST  EQU   X'80'                    LAST ENTRY INDICATOR      20001
PATHINOP EQU   X'0F'                    INOPERATIVE PATH MASK
OF       EQU   X'0F'
EXTMSK   EQU   X'FE'                    EXTENT MASK
RSTMSK   EQU   X'FE'                    CHANNEL MASK FOR RESTRT  A24739
FF       EQU   X'FF'
         AIF   (&TSO EQ 0).TSO001                               SA71480
SVC92    EQU   X'5C'                    TSO TCB EXCP SVC CODE   SA71480
.TSO001  ANOP                                                   SA71480
MAXENQ   EQU   X'03'                    MAXIMUM USER COUNT         OSER
ORCNTR   EQU   X'07'                                               OSER
         IHLMHOOK
INVECB   EQU   X'20'                    ABEND CODE FOR INVALID ECB21016
INVDEB   EQU   X'30'                    ABEND CODE FOR INVALID DEB21016
INVDCB   EQU   X'40'                    ABEND CODE FOR INVALID DCB21016
INVUCB   EQU   X'50'                    ABEND CODE FOR INVALID UCB21016
INVLCH   EQU   X'60'                    ABEND CODE FOR INVALID LCH
         TITLE 'MAJOR ROUTINE ENTRY POINTS - INPUT/OUTPUT SUPERVISOR'
***********************************************************************
*                                                                     *
*             ENTRY LABELS TO MAJOR SUBROUTINES AND MODULES           *
*                                                                     *
*        TITLE                              LABEL          MACRO      *
         SPACE 1
*        EXCP SUPERVISOR                    XEXCP          IECXCP     *
*        EXCP VALIDITY CHECK SUBROUTINE     XVCK01         IECXCP     *
*        GET REQUEST ELEMENT SUBROUTINE     XCPTST         IECXCP     *
*        TAPE SIO MODULE                    XIOTPE         IECXCP     *
*        DIRECT ACCESS SIO MODULE           XIODSK         IECXCP     *
*        UNIT RECORD AND TP SIO MODULE      XIOUR          IECXCP     *
*        SIO SUBROUTINE                     XCPSIO         IECXCP     *
*        POST SIO SUBROUTINE                XCPPIO         IECXCP     *
*        DEQUEUE MODULE                     XCPPDQ         IECXCP     *
*        I/O INTERRUPT SUPERVISOR           IECINT         IECINT     *
*        CHANNEL RESTART SUBROUTINE         INT033         IECINT     *
*        QUIESCE COMPLETE INTERFACE         PRGCOMA        IECINT     *
*        TASK SWITCH ON LAST RQE            INTVMSA        IECINT     *
*        ATTENTION ROUTINE INTERFACE        INTATT         IECINT     *
*        DAVV ATTENTION ROUTINE             INTATN         IECINT     *
*        UNIT RECORD TRAP MODULE            INTURT         IECINT     *
*        TAPE TRAP MODULE                   INTTAT         IECINT     *
*        DIRECT ACCESS TRAP MODULE          INTDAT         IECINT     *
*        TELEPROCESSING TRAP MODULE         XCPTPT         IECINT     *
*        SENSE SUBROUTINE                   INTSEN         IECINT     *
*        INTERRUPT ERROR INTERFACE          INTERR         IECINT     *
*        SHOULDER TAP INTERFACE             IECISHTP       IECINT     *
*        POST ROUTINE INTERFACE             XCPPST         IECIOS     *
*        VALIDITY CHECK SUBROUTINE          VALCHK         IECIOS     *
*        COMMON TEST CHANNEL MODULE         XCPTCH         IECXTCH    *
*        CHANNEL SEARCH - CONFIG DEP        INTCS-         IECICS     *
*        PROGRAM CHECK RECOVERY SUBROUTINE  IECCPL00       IECIOSB    *
*        ABTERM INTERFACE                   XERX04         IECIOSB    *
*        TSO TCB EXCP INTERFACE             IECXPT         IECIOSB    *
*        SERR INTERFACE                     SERR           IECIOSB    *
*        FIFO ENQUEUE MODULE                XCPENQ         IECIOSB    *
*        ORDERED SEEK ENQUEUE MODULE        XCPSEQ         IECIOSB    *
*        PRIORITY ENQUEUE MODULE            XCPPRQ         IECIOSB    *
*        RMS CHANNEL RESTART INTERFACE      INTRMS         IECIOSB    *
*        RMS MODULE LOADER INTERFACE        IECRMS         IECIOSB    *
*        DDR APPENDAGE SUPPORT INTERFACE    DDRAPNVT       IECIOSB    *
*        APR CEB DEACTIVATE SUBROUTINE      INTDEACT       IECIOSB    *
*        ALTERNATE PATH RETRY SUBROUTINE    INTAPR01       IECIOSB    *
*        COMMON HIO SUBROUTINE              IECIHIO        IECIOSB    *
*        M65MP VARY COMMAND INTERFACE       IECTIOMP       IECIOSB    *
*        EXCP ERROR INTERFACE               IECXCPER       IECIOSB    *
*                                                                     *
***********************************************************************
         TITLE 'IOS PROBLEM DETERMINATION AREA LAYOUT'
         AIF (&TCBTYP EQ 2).MVTPDA
*  TWO IOS PROBLEM DETERMINATION AREAS ARE PROVIDED IN IOS
*  AT LABELS ABSV1 AND ABSV2.  THESE ARE ROTATED AND USED
*  AS NEEDED.  THE PROBLEM DETERMINATION AREAS SAVE MUCH
*  INFORMATION IN A SYSABEND DUMP WHICH OTHERWISE MAY BE
*  IMPOSSIBLE TO OBTAIN.
         AGO   .PDA
.MVTPDA  ANOP
*  PROBLEM DETERMINATION AREAS ARE OBTAINED AS NEEDED FROM
*  SUBPOOL 253 IN SQS.  TO LOCATE THE AREA IN A SYSABEND DUMP,
*  LOCATE THE SQS POINTER AT TCB+X'9C'.  FOLLOW THE CHAIN TO
*  A BLOCK BEGINNING WITH THE CHARACTERS 'IOSABEND'.
*  THE PROBLEM DETERMINATION AREA SAVES MUCH INFORMATION IN
*  A SYSABEND DUMP WHICH MAY OTHERWISE BE IMPOSSIBLE TO
*  OBTAIN.
.PDA     ANOP
         SPACE 2
************************************************
*                                              *
*        PROBLEM DETERMINATION AREA            *                US06042
*                                              *
************************************************
*00*     I  O  S  A  B  E  N  D                *
************************************************
*08*         TCB ADDRESS                       *
************************************************
*0C*       ABEND COMPLETION CODE               *
************************************************
*10*     FIRST HALF OF THE I/O OLD PSW         *
************************************************
*14*  XCPBTE  *          *   RQE ADDRESS       *
************************************************
*18*     RQE CONTENTS   (4 WORDS)              *
************************************************
*28*     CURRENT CSW    (2 WORDS)              *
************************************************
*30*    PGM CK OLD PSW  (2 WORDS)              *
************************************************
*38*     SVC OLD PSW    (2 WORDS)              *
************************************************
*40*     PGM CHECK REGS OR CURRENT REGS        *
************************************************
         SPACE 1
*                         XCPBTE
* 00  INTERRUPT ENTRY TO IOS         * 02  VALIDITY CHECK IN PROC
* 80  EXCP ENTRY TO IOS              * 10  RMS IN CONTROL
* A0  ERROR EXCP ENTRY TO IOS        * 08  PGM CHECK IOS
         SPACE 1
*                       ABEND CODES
* 200  INV ECB             * 0F1  PGM CHK IN INT HANDLER
* 300  INV DEB             * 0F2  PGM CHK IN IOS--SVC ENTRY
* 400  INV DCB             * 10F  INVALID RQE PASSED TO ERR EXCP
* 500  INV UCB             * F5C  INVALID USE OF SVC 92
* 600  INV LCH
         TITLE 'EXCP HANDLER - INTPUT/OUTPUT SUPERVISOR'
**********************************************************************
*                                                                    *
*                        EXCP SUPERVISOR
         SPACE 2
*              THE EXCP SUPERVISOR IS THAT PART OF THE INPUT OUTPUT
*              SUPERVISOR WHICH HANDLES THE EXCP MACRO INSTRUCTION.
*              THE FOLLOWING IS THE GENERAL FLOW THROUGH THIS ROUTINE.
         SPACE
*                   1. THE ADDRESSES OF THE SYSTEM CONTROL BLOCKS FOR
*                      THIS REQUEST ARE DETERMINED.
*                   2. THESE BLOCKS ARE CHECKED FOR VALIDITY. IF THEY
*                      ARE INVALID,THE TASK ISSUING THE I/O REQUEST
*                      IS ABNORMALLY TERMINATED.
*                   3. A REQUEST ELEMENT IS OBTAINED AND THE ADDRESSES
*                      OF THE UCB, IOB AND DEB ARE PLACED INTO IT ALONG
*                      WITH TASK AND PRIORITY DATA.
*                   4. A TEST IS MADE TO SEE IF THE DEVICE IS AVAILABLE
*                      IF NOT THE REQUEST IS ENQUEUED FOR FUTURE RE-
*                      START.
*                   5. A TEST IS MADE TO SEE IF THE CHANNEL IS AVAIL-
*                      ABLE. IF NOT, THE REQUEST IS ENQUEUED.
*                   6. THE APPROPRIATE SIO MODULE IS ENTERED AND DEVICE
*                      DEPENDANT SIO PROCEDURES ARE INITIATED.
*                   7. WHEN THE DEVICE IS STARTED, THE REQUEST ELEMENT
*                      IS HUNG ON THE UCB FOR THAT DEVICE.
*                   8. ANY ERROR CONDITIONS ASSOCIATED WITH THE SIO
*                      ARE ANALYZED AND APPROPRIATE ACTION TAKEN.
*                   9. RETURN IS MADE TO THE SUPERVISOR.
*                                                                    *
***********************************************************************
        SPACE 2
IGC000   DS    0D                       START ON DOUBLE WORD BOUNDRY
         AIF   (&TBASE EQ 0).TBS005                                TBSE
         USING IOSBAS,BASREG            SPECIFY                    RL19
         USING IOSBAS+4094,BASREG2      BASE REGISTERS             RL19
XEXCP    BALR  BASREG,0            SET LOW BASE REGISTER           TBSE
IOSBAS   LA    BASREG2,4094(BASREG)     SET HIGH BASE REG          RL19
IOSBASE  EQU   IOSBAS                   EQUATE FOR AL2'S           RL19
         AGO   .TBS006                                           BBBBBB
.TBS005  USING *,0,BASREG                                          TBSE
XEXCP    LA    BASREG,2048              INITIALIZE BASE REG
         AR    BASREG,BASREG            SET BASE EQUAL TO 4096
.TBS006  ST    TCBREG,CURRTCB           SAVE CURRENT TCB ADDR   SA53199
XBASE    LR    IOBREG,1                 TRANSFER FROM PASSING REGISTER
         TITLE 'EXCP VALIDITY CHECK - INTPUT/OUTPUT SUPERVISOR'
***********************************************************************
*                                                                    *
*                        EXCP VALIDITY CHECK
         SPACE 2
*              THIS ROUTINE CHECKS THE VALIDITY OF THE VARIOUS CONTROL
*              BLOCKS USED BY THE I/O SUPERVISOR.  THESE BLOCKS ARE
*              THE IOB, DCB, DEB, AND UCB.  IMPROPER BOUNDRIES WILL   *
*              RESULT IN A PROGRAM CHECK IN IOS WHEN TRYING TO LOAD   *
*              REGISTERS.  THE BLOCK ID IS CHECKED ON THE DEB AND UCB *
*              THE BACKLINK FROM THE DEB TO THE DCB IS CHECKED. IF ANY
*              OF THESE CHECKS FAIL ABNORMAL TERMINATION PROCEDURES
*              ARE INITIATED.  THE REQUEST ELEMENT REGISTER IS ZEROED,
*              HOWEVER, IN CASE A PROGRAM CHECK WOULD OCCUR IN WHICH
*              CASE THE PC INTERRUPT HANDLER WILL CORRECTLY BE ABLE TO
*              ASSOCIATE THE INTERRUPT WITH THE PROPER TASK.
*                                                                    *
* ENTRY POINTS                                                        *
*              XVCK01   REGISTER INITIALIZATION FROM ERREXCP INTERFACE*
*                                                                     *
* EXITS                                                               *
*              XERX04  INVALID CONTROL BLOCK, EXIT TO ABTERM.         *
*                                                                     *
***********************************************************************
        SPACE 2
         MVI   XCPBTE,XCPCNT+XCPVALID   CLEAR FLAGS, SET EXCP    A24739
         LA    LNKRG3,XCP060            LOAD ADDR OF CTL BLK INITA51000
         SR    TSTREG,TSTREG            CLEAR FOR POSSIBLE PGM CHECK
         STH   TSTREG,LTSVALSV          NO VALID RQE YET         A24739
         SPACE 1                                                 A24739
**********************************************************************
*              ENTRANCE IS MADE HERE FROM THE ERREXCP ENTRANCE
*              SO THAT REGISTERS CAN BE SET UP.
         SPACE 1
*  THIS PICKS UP THE CURRENT TCB ADDR. IN CASE OF ABTERM. ON EXCP
         SPACE 1
XVCK01   LR    REG0,4                  GET TCB ADDRESS             IMP4
         L     DCBREG,IOBDCB-1(IOBREG)  GET DCB POINTER
         L     DEBREG,DCBDEB-1(DCBREG)  GET DEB POINTER
         CLC   IOBDCB(3,IOBREG),DEBDCB(DEBREG) TEST FOR VALID DCB
         L     APBSRG,IECPL2            GET TEMP BASE REG      @SA77644
         BC    7,XERX02C-IECCPL02(APBSRG) ERROR,INVALID DCB    @SA77644
         TM    XCPBTE,XCPERR            ENTRY FROM SVC 15      @SA77622
         BC    8,XVCK02                 NO, NO RQE YET         @SA77622
         CLC   TSTDEB(3,TSTREG),DCBDEB(DCBREG) RQEDEB = DCBDEB @SA77622
         BC    7,XERX02C-IECCPL02(APBSRG) ERROR,INVALID DCB    @SA77622
XVCK02   EQU   *                                               @SA77622
         AIF   (&PROTECT EQ 0).NVALCK                            A24739
         TM    SVOPSW+1,PPKEY           IS PROTECT KEY ZERO
         BC    8,XCP061                 YES-BYPASS NEXT TEST
         AIF   (&TCBTYP EQ 2).SXIOS1A   MVT, SKIP                A24739
         MVZ   IDBYTE(1),DEBPRT(DEBREG) SEPARATE PROTECT KEY     BBBBBB
*    IF THIS IS NOT A SUPERVISOR REQUEST, INSURE THAT THE DEB      IMP5
*    PROTECTION KEY CORRESPONDS TO THE CURRENT TASK'S KEY.         IMP5
         LR    WKREG1,REG0             TRANSFER TCB ADDRESS        IMP4
         CLC   IDBYTE(1),TCBPRT(WKREG1) COMPARE WITH TAG IN TCB
         BC    7,XERX02D-IECCPL02(APBSRG) ERROR,INVALID DEB    @SA77644
.SXIOS1A ANOP                                                   SA68418
         BAL   LNKRG2,VALCHK            BRANCH TO VALIDITY CHECK A24739
.NVALCK  ANOP                                                      VDTY
XCP061   SR    ICREG,ICREG              CLEAR INSERT CHAR  REG.
         LR    WKREG1,ICREG             PREPARE SHIFT REG.
         TM    DEBENT(DEBREG),EXTMSK    TEST FOR ANY EXTENTS
         BC    7,XCP061B                YES-USE M GT 1 DIRECTLY
         LH    UCBREG,DEBUCB+1(DEBREG)  GET 1ST EXTENT
         TM    UCBTYP+2(UCBREG),DSKTYP+TPTYPE+GRTYPE
         BC    8,XCP061C                NO-DOESN'T HAVE AN M
XCP061B  IC    ICREG,DEBENT(DEBREG) .   GET NBR OF EXTENTS--DEB  A43938
         IC    WKREG1,IOBDAM(IOBREG)    GET EXTENT INDEX
         CR    WKREG1,ICREG .           IOB EXTENT TO USE + DEB  A43938
         BL    XCP061A .                DO NOT TEST FOR BAD M   SA61714
         LTR   WKREG1,WKREG1 .          IS DEB COUNT ZERO        SM5480
         L     APBSRG,IECPL2            GET TEMP BASE REG      @SA77644
         BC    7,XERX02D-IECCPL02(APBSRG) NO, INVALID DEB      @SA77644
XCP061A  IC    ICREG,DEBEXT(DEBREG) .   GET EXTENT SIZE          A43938
         SLL   WKREG1,0(ICREG)          MULTIPLY BY SIZE
         LH    UCBREG,DEBUCB+1(WKREG1,DEBREG)    GET UCB ADR       IMP2
XCP061C  DS    0C
         TM    UCBID(UCBREG),UCBIDV     TEST UCB ID VALUE
         L     APBSRG,IECPL2            GET TEMP BASE REG      @SA77644
         BC    14,XERX02B-IECCPL02(APBSRG) ERROR,INVALID UCB   @SA77644
XCP061D  L     WKREG2,IOBECB-1(IOBREG) GET ECB POINTER             SMF2
         SPACE 1                                                  M4757
***********************************************************************
*              NOW LOCATE THE LOGICAL CHANNEL WORD
         SPACE
XCP064   SR    WKREG1,WKREG1            PREPARE WORK REGISTER
         IC    WKREG1,UCBLCI(UCBREG)    GET LCH INDEX FROM UCB
         SLL   WKREG1,3                 MULTIPLY BY 8
         LA    LCHREG,LCHTAB(WKREG1)    GET LCH ADDR. FROM IOS TABLE
         BCR   15,LNKRG3                BRANCH TO NEXT IN LINE OR EXIT
***********************************************************************
         SPACE 1
*              ZERO AND INITIALIZE CONTROL BLOCK AREAS
XCP060   STH   TSTREG,IOBECT(IOBREG)    CLEAR ERROR COUNTER
        SPACE 1
*   THE FOLLOWING IS AN INTIAL CLEAR OF IOB FLAGS AND CSW AREA
         XC    IOBFL3(9,IOBREG),IOBFL3(IOBREG)
         NC    IOBFL1(4,IOBREG),CLEARM  CLEAR ALL FLAGS AND SENSE
        SPACE 1
*   CLEAR IOB CODE BYTE AND SET COMPLETE FLAG FOR POST TRANSFER
         MVI   IOBCOD(IOBREG),NORMC     SET NORMAL COMPLETE FLAG
         ST    TSTREG,ECBFL(WKREG2)     RESET ECB FIELD
         NI    XCPBTE,FF-XCPVALID       ALL BLOCKS ARE VALID      M4757
         IECLNK1 XCP020A,BAL,LNKRG1,XCPTST,,,XCP022,&TBASE         TBSE
**********************************************************************
*                                                                     *
*        EXCP SELECT ROUTINE RETURN VECTOR TABLE
XCP022   BC    15,XCP021                ACCEPT VECTOR-EXIT
         BC    15,XCP030                TRY AGAIN VECTOR RE-INIT.
         BC    0,0                      BUSY VECTOR -ENQUE
*****    BC    15,XCP020                NEXT LCH VECTOR, ENQUE     IMP5
*                                                                     *
**********************************************************************
XCP020   L     APBSRG,ENQAD             ADDR OF XCPPNQ RTN       BBBBBB
         BALR  LNKRG2,APBSRG            TO ENQUEUE RQE           BBBBBB
*        PREPARE TO EXIT FROM EXCP PORTION OF IOS
XCP021   LR    1,IOBREG            RESTORE IOB ADDRESS             IMP2
XCP021A  L     LNKRG2,SVCXAD            TYPE 1 EXIT ADDRESS
         BCR   15,LNKRG2                TO TYPE 1 EXIT
         SPACE 1
         IECLNK1 XCP030,LA,LNKRG1,XCP022,,,,&TBASE
         BAL   LNKRG3,XCP064            GO SET UP LCHREG           IMP4
         BC    15,XCP011                GO TO TEST CHANNEL         IMP4
         TITLE 'GET REQUEST QUEUE ELEMENT - INPUT OUTPUT SUPERVISOR'
**********************************************************************
*                                                                    *
*                        GET REQUEST ELEMENT ROUTINE
         SPACE 1
*              THIS ROUTINE OBTAINS A REQUEST ELEMENT FROM A LIST OF
*              AVAILABLE ELEMENTS. IF NONE, IT ENTERS THE PSEUDO DIS-
*              ABLE FUNCTION AND "WAITS" FOR ONE. THE UCB, IOB AND
*              DEB ADDRESSES ARE PLACED IN THE RQE ALONG WITH THE    *
*              DISPATCHING PRIORITY AND THE TCB ID BYTE              *
*                                                                     *
* ENTRY POINTS                                                        *
*              XCPTST  NORMAL IN LINE ENTRY, FROM EXCP VALIDITY CHECK *
*                                                                     *
* EXITS                                                               *
*              XCP072  TO CHECK ID OF USER REQUESTING LAST RQE.       *
*                                                                     *
*                                                                    *
**********************************************************************
        SPACE 1
XCPTST   DS    0H
         AIF   (&APR EQ 0).APR030
         SPACE 1
*    GO DEACTIVATE ANY INACTIVE CHANNEL ERROR BLOCKS IF THE ACTIVE
*    CEB SWITCH IS SET.
         L     LNKRG3,CEBCTR            ADDR OF CEBTAB           BBBBBB
         L     APBSRG,ADEACT            ADDR OF APR DEACTIVATE RTN BBBB
         TM    0(LNKRG3),CEBACT         TEST FOR CEBACT SWITCH   BBBBBB
         BCR   7,APBSRG                 YES, GO DEACTIVATE       BBBBBB
XCPTST1  DS    0H
.APR030  LH    TSTREG,NEXAVL            GET ADDR OF NEXT RQE
         LTR   TSTREG,TSTREG            TEST FOR DUMMY
         BC    4,XCP070                 TO PSUEDO DISSABLE
         SPACE 1
*        RESERVE THE LAST TWO RQES FOR SYSTEM TASK REQUESTS
         SPACE 1
         TM    TSTLNK+1(TSTREG),DUMADR  TEST FOR LAST RQE
         BC    1,XCP072                 YES- CHECK USER
         LH    WKREG1,TSTLNK(TSTREG)    GET NEXT RQE ADDR
         TM    TSTLNK+1(WKREG1),DUMADR  TEST FOR LAST RQE
         BC    1,XCP072                 YES- CHECK USER
         SPACE 1
XCPTST2  LR    WKREG1,REG0              GET TCB ADDR IN WORK REG A51000
         STH   UCBREG,TSTUCB(TSTREG)    STORE UCB ADDR. IN RQE   A51000
         STM   IOBREG,DEBREG,TSTIOB-1(TSTREG)  ST. IOB AND DEB ADDR.
*   THIS GETS AN ID FROM THE TCB REQUESTING IO ACTION
         AIF   (&TCBTYP LT 2).TSTMFT    NOT MVT, SKIP            A51000
         ST    WKREG1,TSTTCB(TSTREG)    STORE TCB ADDR IN RQE    A51000
         MVI   TSTASSN(TSTREG),ZERO     MARK AS ASSIGNED         BBBBBB
*        STORE SVC OLD PSW PROTECT KEYIN RQE FOR VALIDITY CHECK AT INT
         AIF   (&TSO EQ 0).TSO002                               SA71480
         CLI   SVOPSW+3,SVC92           TSO TCB EXCP ENTRY     @SA76667
         BE    XCPTST2C                 YES, KEY OK ALREADY    @SA77080
.TSO002  MVZ   TSTKEY(1,TSTREG),SVOPSW+1 MOVE KEY OF REQUESTOR TO RQE
         AGO   .TSTMVT                                           A51000
.TSTMFT  MVC   TSTTCB(1,TSTREG),TCBID(WKREG1)  MOVE ID INTO RQE  A51000
.TSTMVT  ANOP                                                   SA71480
XCPTST2C MVC   NEXAVL(2),TSTLNK(TSTREG) UPDATE RQE LIST          A51000
         STH   TSTREG,LTSVALSV          NOW A VALID RQE          A24739
         AIF   (&RPR EQ 0).TSTRPR                                A51000
         MVC   TSTPR(1,TSTREG),TCBPR(WKREG1) SET TEMP. PRIORITY  A51000
.TSTRPR  AIF   (&SMF EQ 0).TSTSMF       IS SMF IN SYSTEM         A51000
         L     APBSRG,SMFRTN            GET ADDR OF SMF ROUTINE  A51000
         BALR  LNKRG2,APBSRG            REPORT EXCP TO SMF       A51000
         SPACE 1                                                 A51000
*    DEFINITION OF SMF - IOS INTERFACE                           A51000
*    INPUT   REG0(TCB ADDR),DCBREG,UCBREG,LNKRG2(RET ADDR),      A51000
*            APBSRG(BASE ADDR)                                   A51000
*    REGS CHANGED - WKREG1,WKREG2,WKREG3,LCHREG                  A51000
         SPACE 1                                                 A51000
         BAL   LNKRG3,XCP064            RESTORE LCHREG           A51000
.TSTSMF  BAL   LNKRG2,INT034G           INSPECT FURTHER          A51000
XCP010A  TM    UCBFL1(UCBREG),FF-UCBITF TEST ALL BUT INTERCEPT   BBBBBB
* THIS TESTS ALL THE OTHER FLAGS - UBCCUB, BSY, NRY, ASK, PST, ERR IMP3
         IECLNK1 ,BC,7,SELBSY,0,LNKRG1,,&TBASE                     TBSE
         AIF   (&M7CH EQ 0).M7CH000                                MSVN
         NC    CHMSK(2),CHMSK           PREVIOUS RSTRT INCOMPLETE  MSVN
         AGO   .M7CH001                                            MSVN
.M7CH000 TM    CHMSK,FF                 IS RESTART INCOMPLETE      RL19
.M7CH001 BC    4+1,INTER7D              YES, START FROM CH RESTRT  RL19
XCP011   TM    UCBFL1(UCBREG),UCBITF    PREV REQ HAVE INTCPT COND  P340
         BC    1,INTERR5                GO TO ERP INTERFACE        IMP5
         LH    WKREG1,LCHTCH(LCHREG)    GET TCH CODE ADDRESS       P340
         AIF   (&TBASE EQ 0).TBS045                                IMP3
         N     WKREG1,HWMSK             CLEAR PROPAGATED BITS    BBBBBB
.TBS045  BCR   15,WKREG1               GO TO TEST CHANNEL CODE     IMP3
         SPACE 1
*              TEST CHANNEL CODE WILL LINK TO EITHER ENQUE OR SELECT RT
         SPACE 1
*   CHECKS WHEN LAST RQE IS ABOUT TO BE GIVEN AWAY
         AIF   (&TCBTYP EQ 2 OR &MFTATT EQ 1).CHKTCB             A48653
XCP072   CLC   IOBDCB(3,IOBREG),SVCDCB+1   CHECK FOR SVC LIB
         BC    8,XCPTST2                YES-LET THRU
         AGO   .NOERR1                                           A48653
.CHKTCB  ANOP                                                    A48653
XCP072   CLC   CURRTCB+1(3),MASTCB+1    IS THIS A SYSTEM TASK   SA53199
         BC    4,XCPTST2                YES, GIVE AWAY LAST RQE  A48653
.NOERR1  ANOP                                                    A48653
*   SIMULATE PSUEDO DISABLE FUNCTION
XCP070   L     WKREG1,SVOPSW+4          PICK UP IC
         IC    ICREG,SVOPSW+4           PICK UP ILC              A49380
         SRL   ICREG,6                  ISOLATE ILC              A49380
         SLL   ICREG,1                  MULTIPLY ILC BY 2        A49380
         SR    WKREG1,ICREG             GET PROPER RESUME ADDR   A49380
         ST    WKREG1,SVOPSW+4         STORE ADJUSTED
         AIF   (&TCBTYP GT 1).MS1A      IF MVT, SKIP             A24739
         L     WKREG1,XCPSDA           GET SUPR ADDRESS
         IC    ICREG,0(0,WKREG1)        OLD PSUEDO SWITCH
         MVI   0(WKREG1),X'F0'          SET FOR IOS RETURN
         SSM   XCPENB                   ENABLE
         SSM   IONPSW                   DISABLE
         STC   ICREG,0(0,WKREG1)        RESTORE OLD SWITCH
         BC    15,XCP021                TO TYPE 1 EXIT
         AGO   .STMS1XA
.MS1A    L     WKREG2,CURRTCB           TCB ADDRESS TO WKREG2   SA53199
         OI    TCBFLGS(WKREG2),TCBRQENA SET RQE NON DISPATCHABILITY BIT
         MVI   INT025B+1,X'F0'          SET RQE RERTRN SWITCH
         SR    ICREG,ICREG              CLEAR ICREG
         AIF   (&M65MP EQ 1).MPB012                                MP1A
         L     WKREG1,AIEATCBP         PICK UP ADDRESS OF NEW
         AGO   .MPB013                                             MP1A
.MPB012  LA    WKREG1,IEATCBP          PICK UP TCB ADDRESS         MP1A
.MPB013  ST    ICREG,ZERO(0,WKREG1)     INDICATE TASK SWITCH
         AIF   (&M65MP EQ 0).MPB014                                MP1A
         L     WKREG2,PREFIX2            GET OTHER 4K ADDRESS      MP1A
         ST    ICREG,TSKSW(WKREG2,WKREG1) ADJUST OTHER CPU S NEW   MP1A
.MPB014  BC    15,XCP021                TO TYPE 1 EXIT
.STMS1XA AIF   (&TAPE EQ 0).STIOS4      TEST FOR TAPE              RL19
         TITLE 'TAPE UNIT SIO ROUTINE - INPUT/OUTPUT SUPERVISOR'
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*                      SIO MODULE FOR TAPE UNITS                      *
*                                                                     *
*  FUNCTION    SET UP THE TIC ADDRESS TO THE USER CCW CHAIN AND SET   *
*              MODE COMMAND FOR CRC RECOVERY BEFORE GOING TO THE SIO  *
*              SUBROUTINE                                             *
*                                                                     *
*     ENTRY    XIOTPE  FROM THE SELECT ROUTINE WHICH GETS THIS ADDRESS*
*                      FROM THE DEVICE TABLE FOR TAPE                 *
         AIF   (&ASPN EQ 0).ASPN1
*              XIOTPEA ENTRY POINT FOR 3400 TAPES                     *
*                      ADDRESS OF ENTRY POINT FROM DEVICE TABLE       *
.ASPN1   ANOP
*                                                                     *
*     EXITS    XCP130  TO SIO SUBROUTINE FOR UNIT POSITIONING         *
*              XCPSIO  TO SIO SUBROUTINE                              *
*              XCP111B TO SIO SUBROUTINE FOR MODE SET-RETURN    SA54451
         AIF   (&ASPN EQ 0).ASPN2
*              INT022  TO IOS ERROR INTERFACE TO SCHEDULE ERP         *
.ASPN2   ANOP
*                                                                     *
* OPERATION    CHECK IF UNIT POSITIONING IS NEEDED, IOB MODIFIER 1 FLAG
*              ON, YES EXIT TO XCP130 IN SIO SUBROUTINE               *
*              SET UP AND EXECUTE MODE SET.  BAD, GO TO POST.         *
*              NOP THE COMMAND AND MOVE THE IOB START ADDR. TO TIC CMD.
*              CHECK IF RESTART, YES REPLACE START ADDRESS IN TIC CMD *
*              WITH IOB RESTART ADDRESS                               *
*              CHECK FOR CRC CORRECTION, IOB MODIFIER 2 FLAG, YES
*              LOAD CRC CCW ADDRESS INTO WKREG1 AND MOVE UCB SENSE
*              BYTE 3 INTO THE CRC CCW.  IF NO CRC CORRECTION
*              LOAD ADDR OF TAPE INITIALZATION CCW INTO WKREG1 (NOP   *
*              OR CRC) AND BRANCH TO SIO SUBROUTINE                   *
*                                                                     *
         AIF   (&ASPN EQ 0).ASPN3
*              FOR 3400 TAPES - IF AN UNSOLICITED DEVICE END INTERRUPT*
*              IS RECEIVED AND THE USER IS USING IOS ERP'S, THE SIO   *
*              REQUEST WILL BE DEQUEUED AND THE ERP WILL BE SCHEDULED,*
*              OTHERWISE THE SIO WILL BE ISSUED.                      *
*                                                                     *
.ASPN3   ANOP
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 4
         AIF   (&ASPN EQ 0).ASPN4
XIOTPEA  TM    UCBVOPT(UCBREG),UCBUNSOL UNSOL INTER REC THIS DEV  21048
         BZ    XIOTPE                   NO GO DO SIO              21048
         TM    DCBFL(DCBREG),DCBIEK     CHECK FOR IOS ERP USED    21048
         BNZ   XIOTP00                  NO GO RESET UNSOL FLG     21048
         BAL   LNKRG2,XCPPDQ            GO DEQUEUE REQUEST        21048
         OI    IOBFL2(IOBREG),IOBHAR0   INDIC UNSOL DE FOR ERP    21048
         B     INT022                   GO SCHEDULE ERP           21048
XIOTP00  NI    UCBVOPT(UCBREG),FF-UCBUNSOL RESET UNSOL INT FLG    21048
         SPACE 2
.ASPN4   ANOP
XIOTPE   DS    0H                                               SA54451
         TM    IOBFL1(IOBREG),IOBMD1    UNIT POSITIONING NEEDED SA54451
         BC    8,XIOTP01                NO, GO BUILD CCWS       SA54451
         TM    IOBFL2(IOBREG),IOBROR    CHECK RD OP RECOVERY    SA54451
         BC    8,XCP130                 GO START IMMEDIATE CCW  SA54451
XIOTP01  L     APBSRG,CCWRTNAD          GET CCW ROUTINE ADDR
         BALR  WKREG1,APBSRG            GO GET CCW ADDR
         AIF   (&SSDA EQ 0 AND &SSTA EQ 0).MPX060
         BC    15,XIOREQUE              CCWS BUSY, REQUE RQE
         AGO   .MPX060
.MPX060A LR    LNKRG2,REG0              SET RETURN FOR TCH
         BCR   15,LNKRG2                RETURN TO TCH
.MPX060  AIF   (&RWTAU EQ 0).SXIO666    CHECK RWTAU             SA56509
         SPACE 1                                                SA54451
* READ-WRITE TAU SUPPORT SPLITS SET MODE COMMAND FROM CHANNEL PROG.
* ANY SYSTEM SPECIFING R/W TAU'S GET THIS SUPPORT FOR ALL TAPES.
         SPACE 1                                                SA54451
.SXIO666 ANOP                                                   SA54451
XIOTPE8  DS    0H                                               SA54451
         AIF   (&RWTAU EQ 0).SXIO6AA    CHECK RWTAU             SA54451
         ST    WKREG3,TAPECCW           SAVE CCW ADDRESS        SA54451
.SXIO6AA MVC   0(16,WKREG3),TAPESM      MOVE SKELETON CCWS      SA54451
         AIF   (&RWTAU EQ 0).SXIO6      CHECK RWTAU             SA54451
         MVC   0(1,WKREG3),DEBMDM(DEBREG)   SETMODE OP CODE     SA54451
         ST    WKREG3,CAWLOC            SET UP CAW FOR SIO      SA54451
         BAL   LNKRG3,XCP111B           EXECUTE MODE SET CMD    SA54451
         BCR   8+2+1,LNKRG3             TO PSIO IF NOT CSW STOREDA27691
         SPACE 1                                                 A27691
*    CC=1,CSW STORED, EXAMINE STATUS                             A27691
         LH    WKREG1,CSWLOC+4          TEST RETURN STATUS      SA54451
         N     WKREG1,CHEDVE            NORMAL STATUS
         BC    7,XCP113                 CHECK ABNORMAL STATUS    A27691
.SXIO6   ANOP                                                   SA54451
         L     WKREG1,UCBROR(UCBREG)    GET PTR TO ROR CCW      SA54451
         TM    IOBFL2(IOBREG),IOBROR    IS RD OP RECOV IN PROCESS  ROR1
         BC    1,XCP131C                YES, BYPASS RESTART TEST   ROR1
         L     WKREG1,IOBST-1(IOBREG)   GOOD EXEC-CCW START ADDR
         TM    IOBFL1(IOBREG),IOBSRS    RESTART FROM ERROR RTN
         BC    8,XCP131C                NO-CHECK FOR CRC CORRECTION
         L     WKREG1,IOBRST-1(IOBREG)  YES- GET RESTART CCW
XCP131C  DS    0H                                               SA54451
         AIF   (&RWTAU EQ 0).SXIO6BB    CHECK RWTAU             SA54451
         TM    IOBFL1(IOBREG),IOBMD2    CRC CORRECTION NEEDED   SA54451
         BC    8,XCP131B                NO- SKIP                SA54451
         L     WKREG3,TAPECCW           GET CCW ADDRESS         SA54451
.SXIO6BB ST    WKREG1,TAPETIC(WKREG3)   SET UP TIC ADDRRESS     SA54451
         MVI   TAPETIC(WKREG3),TICOP    SET TIC COMMAND         SA54451
         AIF   (&RWTAU NE 0).SXIO6CC    CHECK RWTAU             SA54451
         LA    WKREG1,TAPEIO(WKREG3)    GET POSSIBLE SETMODE    SA54451
         TM    IOBFL1(IOBREG),IOBMD2    CRC CORRECTION NEEDED   SA54451
         BC    8,XCP133                 NO- SKIP                SA54451
.SXIO6CC LA    WKREG1,CRCBTE(WKREG3)    GET CRC BYTE ADDR       SA54451
         ST    WKREG1,TAPEIO(WKREG3)    SET ADDR IN CCW         SA54451
         MVI   TAPEIO(WKREG3),TIEOP     SET TIE OPCODE          SA54451
         AIF   (&RWTAU EQ 0).SXIO6DD    CHECK RWTAU             SA54451
         LA    WKREG1,TAPEIO(WKREG3)    GET START CCW ADDR      SA54451
         AGO   .SXIO6EE                                         SA54451
.SXIO6DD LR    WKREG1,WKREG3            GET START CCW ADDR      SA54451
.SXIO6EE AIF   (&ASPN EQ 0).TAP020B     CHECK EXTENDED SENSE    SA54451
         LA    WKREG2,UCBSNS(UCBREG)    SET PTR TO SENSE DATA     21048
         TM    UCBFL5(UCBREG),UCBEXTSN  THIS DEV USE EXPAND SENSE 21048
         BZ    XCP132B                  NO GET SENSE DATA FROM UCB21048
         L     WKREG2,UCBSNADR-1(UCBREG) GET PTR TO SENSE DATA    21048
XCP132B  MVC   CRCBTE(1,WKREG3),TWO(WKREG2) MOVE BYTE TO CCW    SA54451
         AGO   .TAP022B                                         SA54451
.TAP020B MVC   CRCBTE(1,WKREG3),UCBSNS+2(UCBREG) MOVE TO CCW    SA54451
.TAP022B AIF   (&RWTAU NE 0).TAP024B    CHECK RWTAU             SA54451
XCP133   MVC   0(1,WKREG1),DEBMDM(DEBREG)  GET MODE OPCODE      SA54451
         BC    15,XCPSIO                GO ISSUE SIO            SA54451
         AGO   .STIOS4                                          SA54451
.TAP024B ANOP                                                   SA54451
XCP131B  ST    WKREG1,CAWLOC            SET CCW ADDR
         LA    LNKRG3,XCPPIO            SET RETURN REG           BBBBBB
         BC    15,XCP110                TO START UP UNIT
         SPACE 1
.STIOS4  AIF   (NOT &D2305).SKPZU                                20201
  TITLE 'MULTIPLE-EXPOSURE UNIT SIO ROUTINE - INPUT/OUTPUT SUPERVISOR'
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*                   SIO MODULE FOR MULTIPLE-EXPOSURE UNITS            *
*                                                                     *
*    FUNCTION  FIND A FREE EXPOSURE TO WHICH THIS REQUEST MAY BE      *
*              ADDRESSED, CONSTRUCT THE APPROPRIATE SYSTEM CHANNEL    *
*              PROGRAM, AND INITIATE THE DATA TRANSFER OPERATION.     *
*                                                                     *
*    ENTRY     ZEUSIO  FROM THE TEST CHANNEL COMMON ROUTINE.  ITS     *
*    POINT     ADDRESS IS CONTAINED IN THE DEVICE-TABLE ENTRY FOR     *
*              THE MULTIPLE-EXPOSURE DEVICE.                          *
         AIF   (&OLTEP EQ 0).OLT010
*              FOR SPECIFIC EXPOSURE REQUESTS FROM OLTEP,ENTRY IS     *
*              TO ZEUSOLT VIA SPECIFIC EXPOSURE DEVTAB ENTRY.         *
.OLT010  ANOP
*                                                                     *
*    EXITS     TO POST-SIO SOUTINE VIA LNKRG3                         *
*              TO TEST CHANNEL, TO THE ADDRESS IN REG0                *
*              TO ENQUEUE OR CHANNEL RESTART, VIA LNKRG1              *
*                                                                     *
*    SUBROUTINES   EXTTST FOR EXTENT CHECKING                         *
*       USED       CHPBLD FOR INITIALIZING SK/SFM/TIC CHAIN           *
*                  XCP111 FOR EXECUTING SIO                           *
*                                                                     *
*    NOTES     A MULTIPLE-EXPOSURE UNIT IS A DIRECT-ACCESS DEVICE,    *
*              CONNECTED TO A CHANNEL WITH THE BLOCK-MULTIPLEX        *
*              FEATURE, WHICH CAN BE ADDESSED THROUGH ANY ONE OF      *
*              EIGHT ADDRESSES. IT IS REPRESENTED BY 8 UCB'S - A BASE *
*              UCB AND 7 EXPOSURE UCB'S.  EXCP REQUESTS ARE ADDRESSED *
*              TO THE BASE UCB, BUT ARE SERVICED BY IOS ON ANY FREE   *
*              EXPOSURE.  IF AN ERROR OCCURS, ERROR RECOVERY IS       *
*              EXECUTED ON THE EXPOSURE WHERE THE ERROR WAS DETECTED. *
*              A SHARED-FILE DEVICE IS RESERVED USING THE BASE UCB,   *
*              BUT THE DATA TRANSFER REQUEST IS SERVICED ON ANY FREE  *
*              EXPOSURE.                                              *
*                                                                     *
*    OPERATION FOR A NORMAL REQUEST, THE EXPOSURE CHAIN IS SCANNED    *
*              UNTIL A FREE EXPOSURE IS FOUND. (AN EXPOSURE IS        *
*              DESIGNATED AS FREE IF THE UCBBSY AND UCBERR FLAGS      *
*              ARE BOTH OFF.) THE EXTENT SUBROUTINE, EXTTST, IS USED  *
*              TO INSURE THAT THE SEEK ADDRESS IS NOT OUT OF THE      *
*              EXTENTS SPECIFIED IN THE DEB.  THE CCW INITIALIZATION  *
*              SUBROUTINE (CHPBLD) IS ENTERED, AND XCP111 IS GIVEN    *
*              CONTROL TO INITIATE THE USER'S REQUEST.  IF THE        *
*              REQUEST WAS SUCCESSFULLY STARTED, THE RQE IS TIED TO   *
*              THE EXPOSURE UCB, AND CONTROL IS GIVEN TO THE POST-SIO *
*              ROUTINE.  IF THE SIO DID NOT RESULT IN A ZERO C.C.,    *
*              THE RQE IS TIED TO THE BASE UCB BEFORE GOING TO PSIO.  *
*                                                                     *
*              IF A FREE EXPOSURE IS NOT FOUND, THE REQUEST IS QUEUED *
*              (IF FROM EXCP), OR CHANNEL RESTART IS RESUMED          *
*              (IF FROM THE INTERRUPT HANDLER).                       *
*                                                                     *
*              IF THIS REQUEST IS RELATED, IT IS NOT INITIATED IF     *
*              ANOTHER RELATED REQUEST FOR THE SAME DEB IS PRESENTLY  *
*              BEING SERVICED.                                        *
*                                                                     *
         AIF   (NOT &R2305).COMZ1                                 M0418
*              IF THIS IS A SHARED-FILE DEVICE, THE SOFTWARE AND      *
*              ACTUAL RESERVE COUNTERS ARE COMPARED.  IF THEY ARE NOT *
*              EQUAL, AND ONE IS ZERO, A STAND-ALONE RESERVE OR       *
*              RELEASE COMMAND USING THE BASE UCB IS STARTED.  IF THE *
*              SIO WAS UNSUCCESSFUL, XCPPIO IS GIVEN CONTROL.         *
*              OTHERWISE, A TIO LOOP IS EXECUTED UNTIL THE CSW HAS    *
*              BEEN STORED. XCPPIO3 IS ENTERED IF ANY ABNORMAL        *
*              CONDITIONS ARE PRESENTED.  IF D/E IS OUTSTANDING,      *
*              RETURN IS ON LNKRG1+SELBSY.  OTHERWISE, THE USER'S     *
*              REQUEST IS PROCESSED IN THE USUAL MANNER.              *
.COMZ1   ANOP                                                    ZEUS01
*                                                                     *
*              IF THE ERP IS IN CONTROL, AND THE PATH ABOUT TO BE     *
*              ACCESSED IS DOWN, CONTROL IS RETURNED TO TEST CHANNEL. *
*              IF IT IS A REQUEST FOR STAND-ALONE I/O, THE REQUEST IS *
*              INITIATED.  IF IT IS A RESTART, THE EXTENT SUBROUTINE  *
*              IS ENTERED BEFORE FURTHER PROCESSING. OTHERWISE, THE   *
*              SEEK ADDRESS COPIED FROM THE IOB TO THE UCB BEFORE THE *
*              EXTENT SUBROUTINE IS ENTERED.                          *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         AIF   (&OLTEP EQ 0).OLT030                               21051
         SPACE 2
*   ENTRY POINT FOR OLTEP SPECIFIC EXPOSURE REQUEST. THIS CODE    21051
*    BRANCHES TO IOS OWNED IECIOLTS FOR EXPOSURE SELECTION.       21051
*    RETURN + 4 MEANS TO QUEUE REQUEST. RTN + 0 MEANS START SIO   21051
         SPACE 1
ZEUSOLT  TM    UCBFL1(UCBREG),UCBERR    IS ERP IN CONTROL         21051
         BO    ZU120                    YES, PREPARE FOR SIO      21051
         AIF   (NOT &R2305).OLT020                                21051
         BAL   LNKRG2,RR00              DETERMINE IF RES/REL NEED 21051
.OLT020  L     APBSRG,IECOLTSW          IECIOLTS ADDRESS          21051
         BAL   LNKRG2,OLTZEUS(0,APBSRG) GET AN EXPOSURE           21051
         B     ZU050                    GO GET SEEK ADDR          21051
         IECLNK1 ,BC,15,SELBSY,0,LNKRG1,,&TBASE                   21051
.OLT030  SPACE 2                                                  21051
ZEUSIO   DS    0H                                                 20201
         TM    UCBFL1(UCBREG),UCBERR    IS ERP IN CONTROL         20201
         BC    1,ZU120                  YES, GO PREPARE FOR SIO   20201
         L     APBSRG,UCBWKADB(UCBREG)  GET PTR TO UCB EXTENSION  20201
         L     UCBREG,EXPCHN+BASADR(APBSRG) INSURE UCBREG PT BASE 20201
         N     UAREG,ZBASMSK            JUSTIFY UAREG TO BASE   SA62867
         AIF   (NOT &R2305).RRZU00                                20201
         SPACE 1
*    DETERMINE IF RESERVE OR RELEASE IS REQUIRED.                 20201
         BAL   LNKRG2,RR00              GO TO SHARED CODE         20201
.RRZU00  SPACE 1
*    FIND EXPOSURE CHAIN AND INITIALIZE CHAIN SEARCH CONTROLS     20201
ZU010    L     APBSRG,UCBWKADB(UCBREG)  GET PTR TO UCB EXTENSION  20201
         LR    WKREG3,UCBREG            SAVE PTR TO BASE ADR      20201
         L     WKREG1,EXPCHN+NXTEXP(APBSRG)  SAVE FIRST EXPOSURE P20201
         L     APBSRG,UCBWKADB(WKREG1)  GET PTR TO EXP EXTENSION  20201
         SR    UCBREG,UCBREG            INITIALIZE FOR FREE EXPOSU20201
         LR    WKREG2,UCBREG            INIT EXPOSURE AVAIL REG   20201
         SPACE 1
*    DETERMINE IF THIS REQUEST CAN BE STARTED ON A FREE EXPOSURE  20201
ZU020    LTR   WKREG2,WKREG2            PREVIOUS EXPOSURE SAVED   20201
         BC    7,ZU030                  YES, BYPASS SAVING THIS ON20201
         LR    WKREG2,UCBREG            INDICATE A FREE EXPOSURE  20201
ZU030    CR    UCBREG,WKREG1            ALL EXPOSURES TESTED      20201
         BC    8,ZU100                  YES, GO CHECK FOR FREE EXP20201
         L     UCBREG,EXPCHN+NXTEXP(APBSRG)  GET PTR TO NEXT EXP  20201
         L     APBSRG,UCBWKADB(UCBREG)  GET PTR TO THIS EXTENSION 20201
         TM    UCBFL1(UCBREG),UCBBSY+UCBERR  THIS EXPOSURE BUSY   20201
         BC    7,ZU110                  YES, GO TEST FOR RELATED  20201
         TM    IOBFL1(IOBREG),IOBURL    IS REQUEST RELATED        20201
         BC    8,ZU020                  YES, GO SET FREE EXP AVAIL20201
         SPACE 1
*    UPDATE THE EXPOSURE CHAIN FIELD IN BASE UCB EXTENSION        20201
ZU040    L     WKREG1,UCBWKADB(WKREG3)  GET BASE EXTENSION        20201
         ST    UCBREG,EXPCHN+NXTEXP(WKREG1) SAVE PTR TO LAST STRT 20201
         SPACE 1
*    INITIALIZE SEEK ADDRESS IN UCB AND GO EXTENT CHECK IT        20201
ZU050    MVC   UCBSKA(8,UCBREG),IOBDAM(IOBREG) MBBCCHHR TO UCB    20201
ZU060    BAL   LNKRG2,EXTTST            GO INSURE IT IS WITHIN EXT20201
ZU070    IC    UAREG,UCBUA(UCBREG)      GET EXPOSURE UNIT ADDRESS 20201
         SPACE 1
*    FIND SYSTEM CHANNEL PROGRAM                                  20201
*    INITIALIZE THE SYSTEM CHANNEL PROGRAM                        20201
         BAL   LNKRG2,CHPBLD           GO INITIALIZE SYSTEM CCW'S 20201
         SPACE 1                                                  20201
*    GO START THE DATA TRANSFER AND HANDLE UNUSUAL CONDITIONS     20201
ZU080    LR    WKREG1,WKREG3            INITIALIXE CCW PTR REG    20201
         BAL   LNKRG3,XCP111A           GO TO SIO SUBROUTINE      20201
         BC    8,ZU090                  CHANNEL WAS STARTED       20201
         SPACE 1                                                  20201
         LH    APBSRG,TSTUCB(TSTREG)    GET BASE OR ERR UCB PTR   20201
         BC    3,ZU085                  BUSY OR NOT OPER         A51608
         CLI   CSWLOC+4,CSWBSY          DEVICE BUSY STATUS       A51608
         BC    8,ZU095                  YES, LEAVE ON EXPOSURE  SA71786
         AIF   (&TWOSW EQ 0).RRX01                                20201
         MVC   UCBCHA(1,APBSRG),UCBCHA(UCBREG)  SET CHAN ADDR     M0192
.RRX01   ANOP                                                    A51608
ZU085    MVC   UCBSKA(8,APBSRG),UCBSKA(UCBREG) MOVE UCB SEEK     A51608
* .                                     ADDR FROM EXP TO BASE    A51608
         LR    UCBREG,APBSRG            INIT WITH BASE/ERR UCB   A51608
         STH   TSTREG,UCBLTS(UCBREG)    INITIALIZE BASE UCB FOR PS20201
ZU090    STH   UCBREG,TSTUCB(TSTREG)    SAVE EXPOSURE ADR FOR INT 20201
         BC    15,XCP113                RESET CC AND GO TO PSIO  A51608
         SPACE 1
ZU095    NI    UCBFL1(UCBREG),FF-UCBNRY RESET NOT READY         SA71786
         OI    UCBFL1(UCBREG),UCBBSY    IND DE EXPECTED         SA74193
         AIF   (&OLTEP EQ 0).OLT040                             SA74193
*   OLTEP GETS CONTROL OF A 2305 BY ZEROING THE DEVICE TABLE    SA74193
*   INDEX IN THE UCB.  IF UCBDTI IS ZERO, CONTROL RETURNS TO    SA74193
*   THE OLTEP ENTRY TO THE 2305 SIO ROUTINE, TO INFORM OLTEP    SA74193
*   THAT THE EXPOSURE TO BE TESTED IS BUSY.  IF OLTEP DOES      SA74193
*   NOT CONTROL THE 2305, IOS ATTEMPTS TO START THE REQUEST     SA74193
*   ON ANOTHER EXPOSURE.  THE DEVICE BUSY STATUS COULD BE       SA74193
*   THE RESULT OF ATTEMPTING TO START AN EXPOSURE WHICH HAS AN  SA74193
*   OUTSTANDING 'SET SECTOR' FROM ANOTHER PATH.                 SA74193
         L     APBSRG,UCBWKADB(UCBREG)  GET PRT TO UCB EXTEN.   SA74193
         L     APBSRG,EXPCHN+BASADR(APBSRG) GET BASE ADDRESS    SA74193
         CLI   UCBDTI(APBSRG),ZERO      DOES OLTEP OWN ZEUS     SA74193
         BE    ZEUSOLT                  YES, TO ZEUS OLTEP ENTRY A74193
.OLT040  B     ZEUSIO                   TRY ANOTHER EXPOSURE    SA74193
         SPACE 1                                                  20201
*    ALL EXPOSURES HAVE BEEN CHECKED.                             20201
*    SET BASE UCB BUSY AND                                        20201
*    EXIT IF A FREE ONE WAS NOT FOUND                             20201
ZU100    LTR   WKREG2,WKREG2            IS A FREE EXPOSURE AVAIL  20201
         BC    7,ZU105                  YES, GO USE IT FOR SIO    20201
         OI    UCBFL1(WKREG3),UCBBSY+UCBCUB PREVENT MORE RSTRTS SA74193
         STH   TSTREG,UCBLTS(WKREG3)    TIE REQUEST TO THE BASE SA74193
         STH   WKREG3,TSTUCB(TSTREG)                            SA74193
         IECLNK1  ,BC,15,SELBSY,0,LNKRG1,,&TBASE                  20201
         SPACE 1                                                  20201
ZU105    LR    UCBREG,WKREG2            INIT TO USE EXPOSURE ADDR 20201
         BC    15,ZU040                 GO INITILIAZE FOR SIO     20201
         SPACE 1                                                  20201
*    CHECK THIS BUSY EXPOSURE FOR A RELATED REQUEST IF THIS       20201
*    REQUEST IS RELATED                                           20201
ZU110    TM    UCBFL1(UCBREG),UCBPST+UCBERR+UCBCUB REQUEST TIED TO UCB
         BZ    ZU030                    NO, GO GET NEXT EXPOSUR SA74193
         TM    IOBFL1(IOBREG),IOBURL    IS REQUEST RELATED      SA74193
         BC    1,ZU030                  NO, GO GET NEXT EXPOSURE  20201
         LH    DEBREG,UCBLTS(UCBREG)    FIND LAST REQUEST STARTED 20201
         CLC   TSTDEB(3,TSTREG),TSTDEB(DEBREG) SAME DEB           20201
         L     DEBREG,TSTPR(TSTREG)    RESTORE DEBREG             20201
         BC    7,ZU030                  NO, GO GET NEXT EXPOSURE  20201
         IECLNK1 ,BC,15,SELBSY,0,LNKRG1,,&TBASE                   20201
         SPACE 1                                                  20201
*    ERROR ROUTINE IS PROCESSING THIS REQUEST                     20201
ZU120    DS    0H                                                 20201
         TM    UCBFL1(UCBREG),UCBBSY    INTERRUPT EXPECTED      SA75351
         IECLNK1 ,BC,1,SELBSY,0,LNKRG1,,&TBASE                  SA75351
         AIF   (&M65MP EQ 1).APR005                               M5704
         AIF   (&APR EQ 0 OR &TWOSW EQ 0).APR111                  M5704
.APR005  L     WKREG1,UCBWKADB(UCBREG)  GET UCB EXTENSION         20201
         L     WKREG1,EXPCHN+BASADR(WKREG1) GET BASE UCB ADDRESS  20201
         SPACE 1                                                  20201
*    CHECK FOR PREVIOUS INOP PATH                                 20201
         IC    ICREG,PATHMSK            GET PATH INDICATOR        20201
         IC    WKREG1,UCBCHM(WKREG1)    GET PATH STATUS INDICATORS20201
         NR    WKREG1,ICREG             IS THIS PATH DOWN         20201
         LR    LNKRG2,REG0              SETUP FOR RETURN          20201
         BCR   4,LNKRG2                 YES, RETURN TO TCH        20201
.APR111  SPACE 1                                                  20201
*    DETERMINE WHAT ACTION IS REQUIRED FOR THE ERP                20201
         L     WKREG3,IOBRST-1(IOBREG)  INITIALIZE FOR RESTART    20201
         TM    IOBFL2(IOBREG),IOBHAR0   IS THIS RECALIBRATE OPERAT20201
         BC    1,ZU080                  YES, GO PREPARE FOR SIO   20201
         TM    IOBFL1(IOBREG),IOBSRS    IS THIS RESTART           20201
         BC    8,ZU050                  NO, GO SET SEEK ADR       20201
         BC    15,ZU060                 GO TEST FOR OUT OF EXTENT 20201
.SKPZU AIF (NOT &R2301 AND NOT &R2303 AND NOT &R2305 AND NOT &RML).RR01
         TITLE 'SHARED FILE SUPPORT FOR DRUMS AND 3330 - INPUT/OUTPUT SX
               UPERVISOR'
*    INITIALIZE THE CCW IF A DEVICE RESERVE OR RELEASE IS REQUIRED20201
RR00     TM    UCBTYP+1(UCBREG),UCBRR   THIS DEVICE SHARED        20201
         BCR   8,LNKRG2                 NO, RETURN                20201
         CLI   UCBRRCNT(UCBREG),ZERO    RESERVE REQUESTED       SA73317
         BC    8,ZU160                  NO, CHK FOR RELEASE     SA73317
         TM    UCBDVRES(UCBREG),RSVD    ALREADY RESERVED        SA73317
         BCR   1,LNKRG2                 YES, RETURN             SA73317
         MVI   RRDRMCCW,RESERVE         INITIALIZE RESERVE OP CODE20201
ZU140    LA    WKREG1,RRDRMCCW          GET PTR TO CCW            20201
         ST    WKREG1,CAWLOC            INITIALIZE CAW            20201
         SPACE 1                                                  20201
*    GO ISSUE SIO FOR RESERVE/RELEASE FUNCTION AND DETERMINE RESULTS
         ST    WKREG3,EXTSAV            SAVE ADR OF CHAN PGM      20201
         AIF  (&PROTECT EQ 0).PRO100                             SM4220
         BAL   LNKRG3,XCP110C           GO DO SIO                 20201
         AGO    .PRO200                                          SM4220
.PRO100  ANOP                                                    SM4220
         BAL   LNKRG3,XCP110B           GO DO SIO                SM4220
.PRO200  ANOP                                                    SM4220
         L     WKREG3,EXTSAV            RESTORE ADR OF CHAN PGM   20201
         BC    7,XCPPIO                 GO SEE WHY IT WASNT STARTE20201
         L     WKREG1,LPCNT             GET LOOP LIMIT          SA68848
ZU150    TIO   ZERO(UAREG)              BRING IN CHANNEL END      20201
         BC    4,ZU150A                 LOOP UNTIL STORED       SA68848
         BCT   WKREG1,ZU150             DECREMENT LOOP COUNT    SA68848
ZU150B   OI    UCBFL1(UCBREG),UCBBSY    INDICATE DE IS EXPECTED   20201
         MVI   UCBDVRES(UCBREG),PND     INDICATE RR PENDING     SA73317
         IECLNK1 ,BC,15,SELBSY,0,LNKRG1,,&TBASE                   20201
         SPACE 1
ZU150A   LH    WKREG1,CSWLOC+4          GET STATUS                20201
         N     WKREG1,CHEDVE            ANY EXCEPT CE AND DE      20201
         BC    8,ZU150C                 NO, CONTINUE            SA73317
         MVI   UCBDVRES(UCBREG),PND     INDICATE RR PENDING     SA73317
         BC    15,XCPPIO3               YES, GO INVESTIGATE       20201
         SPACE 1                                                  20201
*    INDICATE THAT COMMAND WAS ACCEPTED                           20201
ZU150C   CLI   RRDRMCCW,RELEASE         RELEASE OPERATION       SA73317
         BC    7,ZU150D                 NO, INDICATE RSVD       SA73317
         MVI   UCBDVRES(UCBREG),ZERO    INDICATE RELEASED       SA73317
         BC    15,ZU150E                CONTINUE                SA73317
ZU150D   MVI   UCBDVRES(UCBREG),RSVD    INDICATE RESERVED       SA73317
ZU150E   DS    0H                                               SA73317
         AIF   (NOT &R2305).NOSEPDE                             SA68848
         TM    CSWLOC+4,CSWDVE          IS OPERATION COMPLETE     20201
         BCR   1,LNKRG2                 YES, RETURN TO START USER 20201
         BC    15,ZU150B                ALLOW CPU TO ENABLE     SA68848
         AGO   .SEPDE                                           SA68848
.NOSEPDE ANOP                                                   SA68848
         BCR   15,LNKRG2                RETURN TO START USER    SA68848
.SEPDE   ANOP                                                   SA68848
         SPACE 1                                                  20201
*    SET RELEASE IF REQUIRED                                      20201
ZU160    TM    UCBDVRES(UCBREG),RSVD+PND  OUTSTANDING RESERVE   SA73317
         BCR   8,LNKRG2                 NO, NO RELEASE REQUIRED SA73317
         MVI   RRDRMCCW,RELEASE         INITIALIZE RELEASE OP CODE20201
         BC    15,ZU140                 GO PREPARE FOR RELEASE FUN20201
.RR01    TITLE 'DIRECT ACCESS SIO ROUTINE - INPUT/OUTPUT SUPERVISOR'
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*                   DIRECT ACCESS SIO MODULE                          *
*                                                                     *
*  FUNCTION    SET UP PRELIMINARY PROCEDURES FOR D/A DEVICES, USES THE*
*              SEEK ADDRESS IN THE IOB FOR A STAND ALONE SEEK AND     *
*              RELEASES THE CHANNEL WHILE THE ARM IS SEEKING          *
*              AFTER THE SEEK IS COMPLETED A START DATA TRANSFER SEEK *
*              IS PREPARED THEN BRANCH TO THE SIO SUBROUTINE          *
*                                                                     *
*   ENTRIES    XIODSK  FROM SELECT SUBROUTINE BY USE OF DEVICE TABLE  *
*              XCP166  USED AS COMMON DEQUEUE LINKAGE TO GET CORRECT  *
*                      LOGICAL CHANNEL CONTROL WORD ADDRESS           *
*     EXITS    XCP111  TO SIO SUBROUTINE FOR STAND ALONE SEEK         *
*              XCP111A TO SIO SUBROUTINE FOR DRUM
*              XCP110  TO SIO SUBROUTINE TO START DATA TRANSFER       *
*              WKREG1  TO DEQUEUE ROUTINE BY USE OF DEVTAB + UCB INDEX*
*                                                                     *
* OPERATION    SET UP THE STAND ALONE SEEK AND CHECK TO MAKE SURE IT  *
*              IS WITHIN EXTENT THEN GO TO SIO SUBROUTINE, ON RETURN  *
*              THE CONDITION CODE IS CHECKED FOR ZERO AND COMPLETION  *
*              OF DATA TRANSFER TO CONTROL UNIT, SET ARM SEEKING FLAG *
*              AND DEQUEUE STAND ALONE SEEK                           *
*              AFTER DEVICE END FOR THE STAND ALONE SEEK THE IO INTER-*
*              RUPT SUPERVISOR PASSES CONTROL BACK TO THIS ROUTINE    *
*              THE START OR RESTART ADDRESS IS MOVED TO THE TIC CCW IN*
*              THE START DATA TRANSFER CHAIN DEPENDING ON THE RESTART *
*              FLAG IN THE IOB, THE FIRST CCW ADDRESS IS PUT INTO THE *
*              CAW AND THE DATA TRANSFER FLAG IS SET IN THE UCB       *
*              SET UP POST SIO RETURN IN LNKRG3 AND BRANCH TO SIO     *
*              SUBROUTINE                                             *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 3
RPSSIO   DS    0H                                                 20201
XIODSK   DS    0H                                                  SDA2
         AIF   (&ALTSHR EQ 1).RR109B                             A52475
         AIF   (&M65MP EQ 0 OR &RESREL EQ 0).RR109              SA60750
.RR109B  ANOP                                                   SA60750
         TM    UCBTYP+1(UCBREG),UCBRR   IS THIS DEVICE SHARED    A27707
         BC    8,XIODSKA                NO, SKIP PATH CHECK      A27707
         CLI   UCBDVRES(UCBREG),ZERO    IS DEVICE RESERVED       A27707
         BC    7,XIODSKB                YES, GO INSURE SAME PATH A27707
         TM    UCBFL1(UCBREG),UCBASK    RESERVE IN EFFECT        A52438
         BC    8,XIODSKA                NO, SKIP PATH CHECK      A27707
XIODSKB  DS    0H
         AIF   (&M65MP EQ 0).RR107
         SPACE
*              INSURE SIO FOR RESERVED DEVICE IS ISSUED ON        21063
*              CORRECT PATH IN CORRECT CPU FOR M65MP SHARED DASD  21063
         LR    WKREG1,UCBREG            TRANSFER UCB ADDR         21063
         S     WKREG1,NEGDISP           POINT TO UCB MP PREFIX    21063
         TM    UCBFL3(WKREG1),UCBCPUA   LAST SIO FROM CPU A       21063
         BO    XIOCPUB                  NO - GO CHK FOR CPU B     21063
         CLI   CPUID-IEAQFX00,CPUA      YES-ARE WE IN CPU A       21063
         BE    XIODSKB1                 YES-GO CHK FOR CORR PATH  21063
         B     XIOREQUE                 NO-GO BACK TO TEST CHANNEL21063
XIOCPUB  CLI   CPUID-IEAQFX00,CPUA      IS THIS CPU A             21063
         BE    XIOREQUE                 YES-WRONG CPU-BACK TO TCH 21063
XIODSKB1 DS    0H                                                 21063
.RR107   LH    WKREG1,UCBCHA(UCBREG)    GET LAST PATH STARTED    A27707
         N     WKREG1,ADDRMSK           CLEAR FLAGS              A27707
         CR    WKREG1,UAREG      PATH SAME AS LAST ONE STARTED   A27707
         BC    7,XIOREQUE               NO, GO GET ANOTHER PATH
XIODSKA  DS    0H                                                A27707
.RR109   AIF   (&DAVV EQ 0).DAVV03                               A27707
         TM    UCBFL4(UCBREG),UCBVVR    VOL VER RTN IN CONTROL     DAVV
         BC    1,XCP168                 YES GO TO TEST CONDITION   DAVV
XCP188   DS    0H                                               SA58676
.DAVV03  AIF   (&TCBTYP LT 2).MVT015    NOT MVT, SKIP            A24739
*   DO NOT ALLOW THE EXTENT TEST TO BE BYPASSED UNLESS THE ERROR   IMP3
*   ROUTINE IS IN CONTROL.                                         IMP3
         SPACE 1                                                   IMP3
         TM    UCBFL1(UCBREG),UCBERR                               IMP3
         BC    7,XIODSK1               BYPASS EXTENT TEST          IMP3
         NI    IOBFL2(IOBREG),FF-IOBNET-IOBHAR0  RESET FLAGS     BBBBBB
.MVT015  SPACE 1                                                   IMP5
XIODSK1  TM    IOBFL2(IOBREG),IOBHAR0  HA OR R0 FROM ERROR RTN     IMP3
         BC    1,XCP166A                YES NO SEEK NEEDED
XIODSK1A TM    UCBFL1(UCBREG),UCBASK    SEEK BEEN ISSUED         BBBBBB
         BC    1,XCP160                 YES, TO START DATA TRANSFERSDA2
         TM    IOBFL1(IOBREG),IOBSRS    IS RESTART FLAG SET
         BC    1,XCP161                 YES- SEEK AT UCB ALREADY
         MVC   UCBSKA(8,UCBREG),IOBDAM(IOBREG) MOVE MBBCCHHR      M2691
XCP161   TM    IOBFL2(IOBREG),IOBNET    IS EXTENT TEST REQUIRED   20201
         BC    1,XCP161B                NO, SKIP CHECKS
         BAL   LNKRG2,EXTTST            GO SEE IF WITHIN EXTENT   20201
XCP161B  DS    0C                                                 19025
         AIF   (NOT &D2301 AND NOT &D2303).DRM000                 20201
         TM    UCBTYP+3(UCBREG),DRUM    IS THIS A DRUM            20201
         BC    1,XCPDRM                 YES, GO PREPARE FOR SIO   20201
.DRM000  AIF   (&RPS EQ 0).RPS01                                  20201
         TM    UCBTYP+1(UCBREG),UCBRPS  TEST FOR RPS              19025
         BC    1,XCPRPS                 YES, GO PREPARE FOR SIO   20201
         SPACE 1                                                  20201
*    SA SEEK MUST BE STARTED, INITIALIZE THE CCW FOR EXECUTION    20201
.RPS01   LA    WKREG1,UCBSKA+1(UCBREG)  POINT AT SEEK ADDRESS     20201
         STH   WKREG1,SEEK1+2           INIT SA SEEK CCW          20201
         LA    WKREG1,SEEK1             INIT FOR CAW STORE        20201
         AIF   (&RESREL EQ 0).RR003
         TM    UCBTYP+1(UCBREG),UCBRR   RESERVE/RELEASE CAPABILITY
         BC    8,XCPRR007               NO-SKIP
         LA    WKREG1,SEEKRR            GET RESERVE ADDRESS        SDA2
XCPRR007 DS    0C
.RR003   BAL   LNKRG3,XCP111            TO SIO ROUTINE
XCP161C  DS    0H                       RETURN FROM SIO          BBBBBB
         AIF   (&ASR EQ 0).ASR2         CHANNEL CHECK HANDLER       CCH
         MVI   CATAPP,CATSSK .          SET CCH CODE FOR SIO SEEK   CCH
.ASR2    SPACE 1                                                   IMP2
*   CONDITION CODE SET UPON RETURN
         BC    7,XCPPIO1A               RETURN TO PSIO-CK CSW     M2959
XCP162   DS    0H
         TIO   0(UAREG)                 TEST FOR DATA TRANS. COMPLETE
*                                       TO CONTROL UNIT
         BC    11,XCP162                BRANCH BACK UNTIL COMPLETE
         AIF   (&ASR EQ 0).ASR3         CHANNEL CHECK HANDLER       CCH
         MVI   CATAPP,CATTIOSK .        SET CCH CODE FOR TIO SEEK   CCH
.ASR3    LH    WKREG1,CSWLOC+4          STATUS
         N     WKREG1,CHEDVE            MASK
         BC    7,XCPPIO3                CHECK ABNORMAL STATUS    A27025
         OI    UCBFL1(UCBREG),UCBASK+UCBBSY+UCBPST  SET FLAGS    BBBBBB
         AIF   (&RESREL EQ 0).RR006                                SDA1
         MVC   UCBDVRES(1,UCBREG),UCBRRCNT(UCBREG)  IND RES DEV    SDA1
.RR006   MVC   IOBCSW+1(7,IOBREG),CSWLOC+1  SAVE STATUS IN IOB
         TM    CSWLOC+4,CSWDVE          SEEK COMPLETE
         IECLNK1 ,BC,8,SELBSY,0,LNKRG1,,&TBASE
         NI    UCBFL1(UCBREG),FF-UCBBSY-UCBPST RESET FLAGS       BBBBBB
XCP169A  TM    XCPBTE,XCPCNT+XCPERR     XCP ALONE                BBBBBB
         IECLNK1 ,BC,8+1,SELBSY,0,LNKRG1,,&TBASE                   TBSE
         SPACE 1                                                 BBBBBB
*   START DATA TRANSFER CODE
XCP160   LA    LNKRG2,XCP163            SET RETURN TO FALL THRU   20201
CHPBLD   L     APBSRG,CCWRTNAD          GET CCW ROUTINE ADDR
         BALR  WKREG1,APBSRG            GO GET CCW ADDR
         AIF   (&SSDA EQ 0 AND &SSTA EQ 0).MPX010
         BC    15,XIOREQUE              CCWS BUSY, REQUE RQE
         AGO   .MPX010
.MPX010A LR    LNKRG2,REG0              SET RETURN TO TCH
         BCR   15,LNKRG2                RETURN TO TCH
.MPX010  ANOP
XIODSK8  DS    0H                                                  IMP4
         MVC   0(16,WKREG3),RRDXCCW     MOVE SKELETON CCWS      SA56509
CHPBLDA  LA    WKREG1,UCBSKA+1(0,UCBREG)  POINT AT SEEK ADDR      20201
         STH   WKREG1,SEEK2+2(0,WKREG3)  SET POINTER TO CCHH     BBBBBB
         SR    WKREG2,WKREG2                                    SA68948
         IC    WKREG2,UCBSKA(0,UCBREG)  GET M FROM UCB
         AIF   (&CEXT EQ 0).CEX000                                20201
         IC    ICREG,DEBEXT(DEBREG)     GET EXTENT SCALE          20201
         SLL   WKREG2,ZERO(ICREG)       DETERMINE FM OFFSET       20201
         AGO   .CEX001                                            20201
.CEX000  SLL   WKREG2,4                 DETERMINE FM OFFSET       20201
.CEX001  IC    ICREG,DEBMDM(DEBREG,WKREG2) PICK UP FILE MASK      20201
         STC   ICREG,SMMSK2(0,WKREG3)   STORE IT IN CCW
         LA    WKREG2,SMMSK2(WKREG3)    GET ADDR OF FM IN CCW      1543
         ST    WKREG2,SFMCCW(0,WKREG3)  SET F.M. ADDRESS IN CCW    SDA1
         MVI   SFMCCW(WKREG3),SETFMSK  INSERT OP CODE              SDA1
         MVC   SKTIC+1(3,WKREG3),IOBST(IOBREG)  MOVE IN START ADDR
         LR    WKREG1,WKREG3            INITIALIZE FOR CAW STORE  20201
         SPACE 1                                                  20201
         TM    IOBFL1(IOBREG),IOBSRS    IS RESTART FLAG ON
         BCR   8,LNKRG2                 NO, USE START ADDRESS     20201
         MVC   SKTIC+1(3,WKREG3),IOBRST(IOBREG) YES-GET RESTART ADDR.
         TM    IOBFL2(IOBREG),IOBNET    IS THIS ALTERNATE TRACK PROCE.
         BCR   8,LNKRG2                 NO, DO NOT CHANGE FILE MAS20201
         OI    SMMSK2(WKREG3),X'18'     INHIBIT ALL SEEKS
         BCR   15,LNKRG2                FALL THROUGH OR RETURN    20201
XCP163   DS    0H                                                 20201
         AIF   (&RESREL EQ 0).RR004
         SPACE 1                                                 BBBBBB
*    IF THIS IS A SHARED-FILE DEVICE AND THE RESERVE COUNT IS    BBBBBB
*    ZERO, THE DATA TRANSFER COMMAND IS PRECEDED BY A RELEASE.   BBBBBB
         TM    UCBTYP+1(UCBREG),UCBRR   RR CAPABILITY
         BC    8,XCP165                 NO, GO PREPARE FOR SIO    20201
         CLI   UCBRRCNT(UCBREG),ZERO    IS COUNTER ZERO           20201
         BC    7,XCP165                 NO, DO NOT RELEASE        20201
         SH    WKREG1,EIGHT             BACK UP CCW CMD.
         MVI   CCWFLG(WKREG1),CCWCC+CCWSLI+CCWSD  SET FLAGS        SDA1
         MVI   0(WKREG1),RELEASE        IN CASE RRCNT = 0
.RR004   SPACE 1                                                  20201
*    START DATA TRANSFER FOR SEEKABLE DEVICE                     BBBBBB
XCP165   ST    WKREG1,CAWLOC            CCW ADR IN CAW            20201
         BAL   LNKRG3,XCP110            GO DO SIO                 20201
         AIF   (&RESREL EQ 1).RR005AA                            M6152
         BCR   7,LNKRG3                 RETURN IF NOT O.K.       BBBBBB
         SPACE 1                                                 A27691
         AGO   .RR005AB                                          M6152
.RR005AA BC    8,XCP165AB .             GOOD SIO BYPASS UCBHLT   M6152
         LTR   WKREG2,WKREG2 .          WAS UCBHLT ON FROM PURGE M6152
         BC    8+2,XCP165AA .           NO, RE-INSERT SIO CC     M6152
         OI    UCBCHA(UCBREG),UCBHLT .  SET HIO BIT ON FOR PURGE M6152
XCP165AA SPM   WKREG1 .                 RE-INSERT SIO CC         M6152
         BCR   15,LNKRG3 .              RETURN TO POSTSIO        M6152
         SPACE 3
.RR005AB ANOP                                                    M6152
*    SET POST, BUSY, DATA TRANSFER AND ARM SEEKING FLAGS IN UCB  A27691
XCP165AB OI    UCBFL1(UCBREG),UCBBSY+UCBPST+UCBDTR+UCBASK        M6152
         AIF   (&RESREL EQ 0).RR36733                            A36733
         TM    UCBTYP+1(UCBREG),UCBRR . RR CAPABILITY            A36733
         BC    8,XCPPIO1 .              NO, CONTINUE PROCESSING  A36733
         MVC   UCBDVRES(1,UCBREG),UCBRRCNT(UCBREG) . IND RES DEV A36733
.RR36733 BC    15,XCPPIO1 .             CONTINUE PROCESSING      A27691
         SPACE 1                                                 BBBBBB
XCP166A  L     WKREG1,IOBRST-1(IOBREG)  GET RESTART ADDR          20201
         AIF   (&RESREL EQ 0).RR012
         TM    UCBTYP+1(UCBREG),UCBRR   IS REQUEST FOR A RES/REL DEVICE
         BC    8,XCP165                 NO, GO PREPARE FOR SIO    20201
         CLI   0(WKREG1),HAOP           BUT IS IT A R-HA         A36342
         BC    7,XCP165                 NO, GO PREPARE FOR SIO    20201
         MVC   IOBCSW+1(8,IOBREG),CLEAR SIMULATE CE/DE             SDA1
         BC    15,INTS02G               GO TO DEQ AND ABE APGE   BBBBBB
         AGO   .RR013
.RR012   BC    15,XCP165                GO PREPARE FOR SIO        20201
.RR013   SPACE 1                                                   IMP4
         AIF   (&RPS EQ 0).RPS02                                  20201
XCPRPS   L     WKREG3,UCBWKADB(0,UCBREG) GET PTR TO EXTENSION   SA68948
         LA    WKREG3,UCBWKDCC(0,WKREG3) POINT TO BLOCK MPX CP    20201
         LA    LNKRG2,XCPDRM1           SET RETURN REG            20201
         BC    15,CHPBLDA               GO INITIALIZE SYS CHAN PRO20201
.RPS02   SPACE 3                                                  20201
XCPDRM   BAL   LNKRG2,CHPBLD            GO INITIALIZE SYS CHAN PRO20201
XCPDRM1  DS    0H                                                 20201
         AIF    (NOT &R2301 AND NOT &R2303 AND NOT &RML).RR002    20201
         BAL   LNKRG2,RR00              GO CHECK FOR RESERVE/RELEA20201
         LR    WKREG1,WKREG3            INIT FOR CAW STORE        20201
.RR002   BC    15,XCPSIO                GO DO SIO                 20201
         SPACE 2                                                  20201
         AIF   (&ALTSHR NE 0).REQUE1
         AIF   (&SSDA EQ 0 AND &SSTA EQ 0 AND &RESREL EQ 0).REQUE2
.REQUE1  ANOP
XIOREQUE OI    IOBCC(IOBREG),IOBCC1     PREVENT LCH SWITCH
         OI    UCBFL1(UCBREG),UCBCUB    INSURE NO EXCP START
         STH   TSTREG,UCBLTS(UCBREG)    SET CORRECT RQE
         LR    LNKRG2,REG0              SET RETURN TO TCH
         BCR   15,LNKRG2                GO FIND REVERVED PATH   SA73137
         SPACE 2
.REQUE2  AIF   (&DAVV EQ 0).DAVV04
XCP168   DS    0H                                                 M4482
         AIF   (&RESREL EQ 0).CKRRDEB                           SA58676
         CLC   RRDCBDEB+1(3),TSTDEB(TSTREG)  CHECK FOR RRDEB    SA58676
         BC    8,XCP178                 YES, RE-SCHEDULE DAVV   SA58676
.CKRRDEB AIF   (&DDR EQ 0).DDRDAV1                              SA58676
         C     TSTREG,ADDRRQE           IS THIS THE DDR RQE     SA57220
         BC    8,XCP178                 YES, RE-SCHEDULE DAVV   SA57220
         AIF   (&DDR LT 2).DDRDAV1                                M4482
         L     WKREG1,TOADDR            ADDR OF DDRSRTO          BBBBBB
         CH    UCBREG,0(WKREG1)         IS THIS DDR 'TO' DEVICE  BBBBBB
         BC    8,XCPVOLVR               YES-TO CANCEL DAVV        M4482
.DDRDAV1 CH    TSTREG,UCBRQESV(0,UCBREG) DOES XSNT RTN NEED CTL   M4482
         BC    7,INTERR4A               YES, GO TO SCHEDULE        DAVV
         TM    UCBFL4(UCBREG),UCBVER    TEST FOR VOLUME VERIFIED   DAVV
         BC    1,XCPVOLVR               YES-CLEAN UP               DAVV
         TM    UCBFL1(UCBREG),UCBERR    TEST IF RQE PURGED         DAVV
         BC    8,INTERR4B               YES-GO TO REST. XSNT FUNC. DAVV
         TM    IOBFL2(IOBREG),IOBNET    DAVV-TYPE OF SEEK BYPASS  M0161
         BC    8,XCP166A                YES,NO SEEK NEEDED       A43739
         BC    15,XIODSK1A              NO-GO SET UP SEEK          DAVV
         SPACE 1                                                   DAVV
XCP178   BAL   LNKRG2,INTATN            RE-SCHEDULE DAVV        SA58676
         BC    15,XCP188                CONTINUE PROCESSING     SA58676
         SPACE 1                                                SA58676
XCPVOLVR NI    UCBFL4(UCBREG),FF-UCBDAV RESET DAVV RTN FLAGS       DAVV
         TM    IOBFL1(IOBREG),IOBEX     IS IOB EXCEPTION ON?   @SA77089
         BC    1,XIODSK1A               YES, LEAVE IOB ERR ON  @SA77089
         NI    IOBFL1(IOBREG),FF-IOBERR RESET ERR RTN FLAG         DAVV
         BC    15,XIODSK1A              GO TO SET UP SEEK          DAVV
.DAVV04  TITLE 'DIRECT ACCESS EXTENT TEST - INPUT/OUTPUT SUPERVISOR'
***********************************************************************
*                                                                     *
*                  DIRECT ACCESS EXTENT TEST SUBROUTINE               *
*                                                                     *
*    FUNCTION  ENSURE THAT THE SEEK ADDRESS WHICH IS GOING TO BE      *
*              ACCESSED FOR THIS REQUEST LIES WITHIN THE DATA SET     *
*              EXTENTS DEFINED IN THE DEB.                            *
*                                                                     *
*    ENTRY PT  EXTTST  FROM DIRECT ACCESS SIO MODULES.                *
*                                                                     *
*    EXITS     TO CALLING ROUTINE ON LNKRG2 IF NORMAL REQUEST         *
*              TO DEQUE AND ABNORMAL END APPENDAGE IF EXTENT ERROR.   *
*              TO DEQUE AND INT024 IF REQUEST IS TO BE IGNORED.       *
*                                                                     *
*    OPERATION CHECK THE SEEK ADDRESS IN THE UCB TO ENSURE IT IS      *
*              VALID.  A VALID SEEK ADDRESS IS NOT LOWER THAN THE     *
*              START OF THE EXTENT, NOR HIGHER THAN THE END OF IT.    *
*              FOR A DATA CELL, THE BIN NUMBER IN THE UCB IS EQUAL    *
*              TO THE BIN NUMBER IN THE DEB.  FOR SPLIT CYCLINDER     *
*              ALLOCATION, THE TRACK NUMBER IS ALTERED, IF NEEDED, SO *
*              THAT IT FALLS WITHIN THE TRACK BOUNDARIES OF THE DATA  *
*              SET. IF THE SEEK ADDRESS IS INVALID, THE END OF EXTENT *
*              APPENDAGE IS ENTERED, AND IT DETERMINES SUBSEQUENT     *
*              ACTION. THE REQUEST MAY BE                             *
*                MARKED WITH THE EXTENT ERROR CODE - X'42' - AND SENT *
*                TO THE ABNORMAL END APPENDAGE.                       *
*                POSTED NORMALLY AND DEQUEUED.                        *
*                VALIDITY CHECKED AGAIN                               *
*                                                                     *
***********************************************************************
         SPACE 2                                                  20201
*    FIND THE PROPER DEB EXTENT                                   20201
EXTTST   SR    WKREG2,WKREG2            INITIALIZE WORK REG       20201
         IC    WKREG2,UCBSKA(UCBREG)    GET EXTENT M              20201
.CEX010  SLL   WKREG2,4                 FORM INDEX TO EXTENT      20201
.CEX020  LA    WKREG1,DEBEXTNT(WKREG2,DEBREG) POINT AT EXTENT     20201
         SPACE 1                                                  20201
*    GO TO THE EOE APPENDAGE IF THE SEEK ADDRESS IS NOT BETWEEN   20201
*    THE EXTENT START AND END ADDRESSES                           20201
EXTTST1  CLC   UCBSKA+3(4,UCBREG),DEBST(WKREG1)  COMPARE WITH STA 20201
         BC    4,XCP03E                 BR-LOWER THAN LOW ADDRESS 20201
         CLC   UCBSKA+3(4,UCBREG),DEBEND(WKREG1)  TEST END LIMIT  20201
         BC    2,XCP03E                 BR- HIGHER THAN END LIMIT 20201
         AIF   (&D2321).DCEL001                                   20201
         CLC   UCBSKA+1(2,UCBREG),DEBBB(WKREG1)  BB EQUAL         20201
         BC    7,XCP03E                 NO-EXTENT ERROR           20201
.DCEL001 SPACE 1                                                  20201
*    RETURN TO CALLER IF NOT SPLIT CYLINDER ALLOCATION            20201
         TM    DEBOPFL(DEBREG),DEBSCA   TEST FOR SPLIT CYLINDER   20201
         BCR   8,LNKRG2                 RETURN TO CALLER          20201
         CLC   UCBSKA+5(2,UCBREG),DEBST+2(WKREG1)  TRACK ADDR L.T 20201
         BC    4,XCP161A                YES  -RESET TO TOP OF EXT 20201
         CLC   UCBSKA+5(2,UCBREG),DEBEND+2(WKREG1)   TRK ADDR G.T 20201
         BCR   8+4,LNKRG2               RETURN TO CALLER          20201
XCP161A  MVC   UCBSKA+5(2,UCBREG),DEBST+2(WKREG1)  RESET TO TOP O 20201
         BCR   15,LNKRG2                RETURN TO CALLER          20201
         SPACE 1                                                  20201
*    EXIT TO THE EOE APPENDAGE                                    20201
XCP03E   ST    LNKRG2,EXTSAV            SAVE RETURN ADR ACROSS APG20201
         ST    LCHREG,LCHWDSV           SAVE LCH REG           @SA78136
         L     APBSRG,DEBAPG-1(DEBREG)  GET APG VECTOR TABLE      20201
         L     APBSRG,APGEOE(APBSRG)    GET EOE APPENDAGE VECTOR  20201
         BALR  LNKRG2,APBSRG            TO END OF EXTENT APPENDAG 20201
         SPACE 1                                                  20201
*    DEFINITION OF EOE APPENDAGE - IOS INTERFACE                  20201
*    INPUT     TSTREG,IOBREG,DEBREG,DCBREG,UCBREG,                20201
*              LNKRG2(RET ADDR),APBSRG(BASE ADDR)                 20201
*    REGS CHANGED  WKREG1,WKREG2,WKREG3,LCHREG                    20201
         SPACE 3                                                  20201
*    END OF EXTENT APPENDAGE RETURN VECTOR TABLE                  20201
*                                                                 20201
         BC    15,XCP167                EXTENT ERROR RETURN       20201
         BC    15,XCP03F                SKIP RETURN DEQUEUE RQE   20201
*        BC    15,EXTTST5               TRY AGAIN EXIT            20201
         SPACE 3                                                  20201
*    RETRY WITH NEW SEEK ADDRESS                                  20201
EXTTST5  L     LNKRG2,EXTSAV            REINITIALIZE RETURN REG   20201
         L     LCHREG,LCHWDSV           RESTORE LCH REG        @SA78136
         BC    15,EXTTST                RETRY EXTENT TEST         20201
         SPACE 1                                                  20201
*    IGNORE THIS REQUEST. DEQUEUE RQE,POST NORMAL AND RETURN RQE  20201
XCP03F   LA    LNKRG2,INT024            POST RETURN ADDRESS       20201
         BC    15,XCP167A               TO RESET PENDING FLAGS OR 20201
         SPACE 1                                                  20201
*    ILLEGAL REQUEST. DEQUEUE RQE AND GO TO ABNORMAL APPENDAGE    20201
XCP167   MVI   IOBCOD(IOBREG),EXTERR    EXTENT ERROR CODE         20201
         LA    LNKRG2,INT058            DEQUE RETURN ADDR.        20201
XCP167A  NI    UCBFL1(UCBREG),FF-UCBERR CLEAR UCB ERROR FLAG     A27691
         NI    IOBFL1(IOBREG),FF-IOBERR RESET FLAG                20201
         BC    15,XCPPDQ                REQ. REQUEST              20201
    TITLE 'UNIT RECORD AND TP SIO ROUTINE - INPUT/OUTPUT SUPERVISOR'
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*        SIO MODULE FOR UNIT RECORD OR TELECOMMUNICATION EQUIPMENT    *
*                                                                     *
*  FUNCTION    DETERMINE ENTRY PRINT TO SIO SUBROUTINE, AND CCW ADDRESS
*                                                                     *
*     ENTRY    XIOWR   FROM SELECT SUBROUTINE BY DEVICE TABLE ENTRY   *
*                      FOR PRINTERS WITH EXPANDED SENSE               *
*              XIOUR   FROM SELECT SUBROUTINE BY DEVICE TABLE ENTRY   *
*                      FOR UNIT RECORD                                *
*              XCP121  FROM SELECT SUBROUTINE BY DEVICE TABLE ENTRY   *
*                      FOR TELEPROCESSING DEVICES                     *
*                                                                     *
*     EXITS    XCP130  TO SIO SUBR. FOR IMMEDIATE COMMANDS FROM ERR RTN
*              XCPSIO  TO SIO SUBR. FOR NORMAL START                  *
*                                                                     *
* OPERATION    CHECK IOB MODIFIER 1 FLAG, YES GO TO SIO SUBR. IMMED.  *
*              COMMAND ENTRY                                          *
*              LOAD WKREG1 WITH THE IOB RESTART ADDRESS               *
*              CHECK IF IOB RESTART FLAG IS ON, NO REPLACE RESTART WITH
*              START ADDRESS IN WKREG1 AND GO TO NORMAL ENTRY OF SIO  *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 4
XIOWR    EQU   *                        NEW UNIT RECORD
         AIF   (&P3211 EQ 0).P321100                             A44146
         TM    UCBFL7(UCBREG),STPPRNT   HAS CANCEL KEY BEEN HIT
         BC    8,XIOUR                  NO - CONTINUE SIO        A44146
         TM    UCBFL5(UCBREG),UCBNALOC  DEV OWNED BY OLTEP      SA64237
         BC    1,XIOUR             YES, SKIP CANCEL             SA64237
         L     WKREG2,UCBSNADR-1(UCBREG) GET PTR TO SENSE DATA @SA78519
         MVI   IOBCSW+4(IOBREG),CSWDVE+CSWUCK SET DEVICE END,    A44146
*                                       UNIT CHECK INTO IOBCSW   A44146
         STH   TSTREG,UCBLTS(UCBREG)    SET UP RQE IN UCB        A44146
         BC    15,INTS02H               DEQUE RQST, SEND TO ERP  A44146
         SPACE 1
.P321100 ANOP                                                    A44146
XIOUR    TM    IOBFL1(IOBREG),IOBMD1    IMMEDIATE OPERATION FOR ERROR
*                                       ROUTINE
         BC    1,XCP130                 YES TO START UP  ROUTINE
XCP121   L     WKREG1,IOBRST-1(IOBREG)  LOAD RESTART ADDRESS
         TM    IOBFL1(IOBREG),IOBSRS    IS RESTART FLAG ON
         BC    1,XCP120                 BR- TO SKIP NEXT INSTRUCTION
         L     WKREG1,IOBST-1(IOBREG)   LOAD START ADDRESS
XCP120   DS    0C
         BC    15,XCPSIO                TO START UP DEVICE       BBBBBB
         TITLE 'COMMON SIO ROUTINE - INPUT/OUTPUT SUPERVISOR'
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*              SIO SUBROUTINE                                         *
*                                                                     *
*  FUNCTION    ISSUE THE SIO COMMAND FOR ALL I/O REQUESTS             *
*                                                                     *
* ENTRY        XCPSIO  COMMON ENTRY FROM DEVICE DEPENDENT SIO MODULES *
*    POINTS    XCP130  TO PICK UP IMMEDIATE COMMAND OR REPOSITIONING  *
*                      OP CODES FROM ERROR ROUTINES                   *
*              XCP110  FROM DIRECT ACCESS SIO ROUTINE TO START        *
*                      DATA TRANSFER                                  *
*              XCP111  IS THE STAND ALONE SEEK ENTRY FROM DA SIO MODULE
*                      SINCE IT EXPECTS CONTROL BACK, IT LOADS LNKRG3 *
*                      WITH IT'S OWN RETURN ADDRESS                   *
*                                                                     *
*     EXITS    VIA LNKRG3 TO POST SIO OR RETURN TO DEV. DEP. SIO MODULE
*              XCPPDQ  (SIO APP. SKIP RETURN) DEQUES REQUEST AND RETURN
*                                                                     *
* OPERATION    1. THE CAW IS SET UP THEN TEST IF ERROR ROUTINE IS IN  *
*                 CONTROL, IF YES SKIP 2                              *
*              2. LINK TO THE SIO APPENDAGE (DEB) RETURN VIA LNKRG2 TO*
*                 SIO APPENDAGE VECTOR TABLE FOR NORMAL OR SKIP RETURN*
*              3. NORMAL PROCESSING THE SIO IS ISSUED, IF THE RESULT IS
*                 BUSY (COND. CODE) SET CSW TO REFLECT CONTROL
*                 UNIT BUSY.
*              4. STORE THE CC, ILC, AND PROG. MASK IN IOB, STORE THE *
*                 CHANNEL AND UNIT ADDRESS AND THE RQE IN THE UCB.    *
*              5. SET THE CC TO REFLECT THE SIO CC AND EXIT VIA LNKRG3*
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 2                                                   IMP2
*   ERROR RTN WILL USE THIS CODE FOR IMMEDIATE OPERATIONS
*   IT USES THE MODIFER BITS IN THE IOB FOR THE CCW OP CODE
XCP130   MVC   SYSIMD(1),IOBMDB(IOBREG) OP CODE TO STAND ALONE CCW
         LA    WKREG1,SYSIMD            GET ADDRESS OF STAND ALONE CCW
         SPACE 2
XCPSIO   LA    LNKRG3,XCPPIO            LOAD RETURN REGISTER
XCP111A  DS    0C
XCP111   ST    WKREG1,CAWLOC            PLACE CCW ADDRESS INTO CAW
XCP111B  TM    IOBFL1(IOBREG),IOBERR    ERP IN CONTROL
         AIF   (&TWOSW EQ 0).TWS150                              BBBBBB
         BC    8,XCP111C                NO-GO TO APPENDAGE       BBBBBB
         TM    UCBTYP+2(UCBREG),DSKTYP  DA DEVICE               SA71587
         BC    8,XCP111D                NO, DONT CHECK FOR DAVV SA71587
         TM    UCBFL4(UCBREG),UCBVVR    IS DAVV IN CONTROL       A42468
         BC    1,XCP110                 YES, NO TEST FOR ERR KEY A42468
XCP111D  TM    DCBFL(DCBREG),DCBIEK     TEST FOR IOS ERROR KEY  SA71587
         BC    8,XCP110                 NO-BYPASS APPENDAGE      BBBBBB
*    IF THE IOBERR FLAG IS ON AND THE USER IS NOT USING IBM      BBBBBB
*    ERROR ROUTINES, THIS MUST BE THE RETRY OF A PREVIOUS        BBBBBB
*    CONDITION CODE 3.  FLAGS IN THE USER'S CONTROL BLOCKS MUST  BBBBBB
*    BE RE-INITIALIZED SO THAT THE CC3 IS TRANSPARENT TO HIM.    BBBBBB
         NI    DCBFL(DCBREG),FF-DCBPER  RESET DCB ERROR FLAG     BBBBBB
         NI    IOBFL1(IOBREG),FF-IOBERR-IOBEX  IOB ERR FLAGS    SA49357
         AGO   .TWS155                                           BBBBBB
.TWS150  BC    1,XCP110                 YES-BYPASS APPENDAGE     BBBBBB
.TWS155  ANOP                                                    BBBBBB
XCP111C  L     APBSRG,DEBAPG-1(DEBREG)  GET APPENDAGE VECTOR TABLE ADDR
         L     APBSRG,APGSIO(APBSRG)    GET SIO APPENDAGE ADDRESS
         ST    LCHREG,LCHWDSV           SAVE LCH ADDR
         BALR  LNKRG2,APBSRG            TO SIO APPENDAGE
         SPACE 1
*    DEFINITION OF SIO APPENDAGE - IOS INTERFACE                 BBBBBB
*    INPUT     TSTREG,IOBREG,DEBREG,DCBREG,UCBREG,               BBBBBB
*              LNKRG2(RET ADDR),APBSRG(BASE ADDR)                BBBBBB
*    REGS CHANGED  WKREG1,WKREG2,LCHREG                          BBBBBB
         SPACE 1
***********************************************************************
*                                                                     *
*        SIO APPENDAGE RETURN VECTOR TABLE                            *
*                                                                     *
         BC    15,XCP110A               NORMAL RETURN-TO SIO EXECUTION
         SPACE 1
*   SKIP SIO RETURN
         LA    LNKRG2,INT024B           LOAD RETURN ADDRESS      BBBBBB
         BC    15,XCPPDQ                TO DEQUEUE
*                                                                     *
***********************************************************************
         SPACE 1
XCP110A  DS    0H                                                BBBBBB
         L     LCHREG,LCHWDSV           RESTORE LCH ADDR
XCP110   MVI   CAWLOC,ZERO              CLEAR PROTECTION TAG     BBBBBB
         AIF   (&PROTECT EQ 0).STIOS3L
*  THE FOLLOWING TEST WILL DETERMINE IF A DISK ERROR ROUTINE IS
*  PREPARING A READ HA AND READ R0 COMMAND.
         TM    UCBFL1(UCBREG),UCBERR    IS ERROR ROUTINE IN CONTROL
         BC    8,XCP110C                NO.  BYPASS NEXT TEST
         TM    IOBFL2(IOBREG),IOBHAR0   ERROR RTN READING R0
         BC    1,XCP110B                YES-SKIP PROT.KEY
         AIF   (&TCBTYP LT 2).CAWH      NOT MVT, SKIP            A24739
XCP110C  MVZ   CAWLOC(1),TSTKEY(TSTREG)  SET PROTECTION KEY
         AGO   .STIOS3L
.CAWH    ANOP
XCP110C  MVZ   CAWLOC(1),DEBPRT(DEBREG)  MOVE PROTECT TAG TO CAW
.STIOS3L ANOP
XCP110B  DS    0H                                                  IMP4
         SIO   0(UAREG)                 START UP DEVICE            TEST
         BALR  WKREG1,0                 GET RIGHT HALF OF PSW    A27691
         SRL   WKREG1,24                SHIFT CC TO LOW BYTE     BBBBBB
         STC   WKREG1,IOBCC(IOBREG)     STORE CC,ILC, AND PROG. MASK
         AIF   (&ASR EQ 0).ASR1         CHANNEL CHECK HANDLER       CCH
         MVI   CATAPP,CATSIO .          SET CCH CODE FOR SIO MODULE CCH
.ASR1    AIF   (&TCBTYP EQ 0).GTF1                                M0120
         SPACE 1                                                  21014
*   GTF SIO TRACE - IOS INTERFACE                                 21014
*   INPUT   UAREG,WKREG1(SIO C.C.),CAW,CSW                        21014
         HOOK  EID=IHLMSIO              TRACE SIO USING GTF       21014
.GTF1    AIF   (&TRACE EQ 0).STIOS1A                              21014
         L     ICREG,TRACON             LOAD ADDRESS OF TRACE
         BALR  WKREG2,ICREG             TO TRACE START I/O
         SPACE 1                                                   RL19
*    DEFINITION OF TRACE - IOS INTERFACE                         BBBBBB
*    INPUT     ICREG(BASE ADDR),UAREG,WKREG1(SIO C.C.),CAW,CSW   BBBBBB
*              WKREG2(RET ADDR)                                  BBBBBB
*    REGS CHANGED  WKREG1                                        BBBBBB
         SPACE 1                                                   RL19
         SR    ICREG,ICREG              CLEAR THE ICREG
.STIOS1A AIF   (&RESREL EQ 0).RR004AA                           SA54451
         LH    WKREG2,UCBCHA(UCBREG) .  SET REG NEG IF UCBHLT ON M6152
.RR004AA ANOP                                                    M6152
         STH   UAREG,UCBCHA(0,UCBREG)   SET UP CURRENT PATH     SA54451
*                                       RESET HIO & SMD IF ON      IMP5
         STH   TSTREG,UCBLTS(0,UCBREG)  SAVE RQE ADDRESS           P540
         AIF   (&M65MP EQ 0).MPB021                                MP1A
         LR    APBSRG,UCBREG       TRANSFER UCB POINTER            MP1A
         S     APBSRG,NEGDISP      GET NEG. DISPL. IN UCB          MP1A
         NI    UCBFL3(APBSRG),X'F7'    CLEAR IOCPUID
         OC    UCBFL3(1,APBSRG),IOCPUID+3  PUT IOCPUID IN UCB      MP1A
.MPB021  ANOP
XCP113   L     WKREG1,IOBCC(0,IOBREG)   RE-INSERT SIO CC         A27691
         SPM   WKREG1                   INTO PSW                 A27691
         BALR  LNKRG3,LNKRG3            TO RETURN TO REQUESTING RTN
         TITLE 'POST SIO ROUTINE - INPUT/OUTPUT SUPERVISOR'
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*              POST SIO ROUTINE
*                                                                     *
*    FUNCTION  HANDLE CONDITION CODE RESULTING FROM SIO INSTRUCTION.  *
*                                                                     *
*    ENTRY POINTS  XCPPIO  FROM SIO SUBROUTINE                        *
*                  XCPPIO1 FROM DA SIO  MODULE                        *
*                  XCP056E FROM CCH RETURN VECTOR TABLE               *
*                                                                     *
*    OPERATION HANDLE EACH CONDITION CODE AS FOLLOWS -                *
*                                                                     *
*        CC=0, SUCCESSFUL SIO -                                       *
*          SET UCB BUSY AND POST FLAGS, SAVE UCB ADDRESS FOR FAST UCB *
*          LOOKUP, SAVE CURRENT PATH IN UCBCHM FILED, DEQUEUE RQE,    *
*          AND RETURN ON LNKRG1 TO SVC EXIT OR CHANNEL RESTART.       *
*                                                                     *
*        CC=1,CSW STORED - EXAMINE STATUS -                           *
*          INCREMENT BY EIGHT THE COMMAND ADDRESS IN THE CSW.         *
         AIF   (&ASR EQ 0 OR &M65MP EQ 1).ASRCL01                 21111
*         IF CHANNEL LOGOUT PENDING - EXIT VIA LNKRG2                 *
.ASRCL01 ANOP                                                     21111
*          IF CATASTROPHIC ERROR, GO TO SERR01                        *
*          IF BUSY + CUE, TRY REQUEST AGAIN - RETURN ON LNKRG1+8      *
*          IF BUSY + SMD, SET UCBCUB FLAG, RETURN TO TCH              *
*          IF BUSY + DVE + ATT'N, GO TO ATTENTION INTERFACE           *
*          FOR ANY OTHER BUSY CONDITIONS, RETURN ON LNKRG1+8          *
*          ALL OTHER STATUS, ENTER INTERRUPT SPVSR. AT INT005         *
*                                                                     *
*        CC=2, CHANNEL BUSY -                                         *
*          SET UCBCUB FLAG, RETURN TO TCH.                            *
*                                                                     *
*        CC=3, CHANNEL OR CONTROL UNIT NON-OPERATIONAL -              *
*          INCREMENT BY EIGHT THE COMMAND ADDRESS IN THE CSW.         *
*          IF THIS IS THE FIRST TIME THAT CC 3 WAS ENCOUNTERED ON     *
*          THIS PATH, SET 'UNIT CHECK' AND 'INTERVENTION REQUIRED'    *
*          BITS IN THE IOB AND EXIT TO INTS02G SO THAT A MESSAGE MAY  *
*          BE ISSUED.                                                 *
*          IF THIS IS NOT THE FIRST CC3 ON THIS PATH, SET UCBCUB FLAG *
*          IN THE UCB AND RETURN TO TCH.                              *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 2
XCPPIO   BC    4+2+1,XCPPIO2            BRANCH IF CC=1,2 OR 3    A27691
         SPACE 1                                                 A26051
*    CC=0 PRESENTED ON SIO                                       A26051
         OI    UCBFL1(UCBREG),UCBBSY+UCBPST SET DEV BSY AND STARTED
XCPPIO1  IC    ICREG,UCBCHA(0,UCBREG) . SAVE THIS UCB            A27691
         AR    ICREG,ICREG .            ADDRESS FOR              A27691
         STH   UCBREG,UCBSAVE(ICREG) .  FAST LOOKUP              A27691
         AIF   (&M65MP EQ 0).TBS100
         OI    CHAN0-IEAQFX00(ICREG),CHBSY SET CHANNEL BUSY      A26051
.TBS100  AIF   (&TWOSW EQ 0 OR &APR EQ 1).TWOS2                  A27691
         SPACE 1                                                  19022
*   RESET PATH IND. IF THERE WAS A PREVIOUS CC 3 ON THAT PATH     19022
         OC    UCBCHM(1,UCBREG),PATHMSK SET ON CURRENT PATH       19022
         XC    UCBCHM(1,UCBREG),PATHMSK RESET INDICATOR           19022
.TWOS2   BAL   LNKRG2,XCPPDQ            GO DEQ REQUEST           A27691
         SPACE 1                                                 A27691
*    EXIT FROM SVC OR RETURN TO CHANNEL SEARCH                   A27691
         IECLNK1 ,BCR,15,LNKRG1,,,,&TBASE                        A27691
         SPACE 1                                                 A27691
*    CC=1 (CSW STORED), CC=2 (CH BUSY) OR CC=3 (CH OR CU INOP)   A27691
XCPPIO1A DS    0H                                                 M2959
XCPPIO2  BC    2,XCP054D                BRANCH IF BUSY            M2959
         SPACE 1                                                 A27691
*    CC=1 (CSW STORED) OR CC=3 (CH OR CU INOP)                   A27691
*    CARE SHOULD BE TAKEN NOT TO CHANGE THE CC  WITH ANY FIXES    M1647
*      OR ADDITIONS TO THE FOLLOWING CODE.                        M1647
         AIF   (&ASR EQ 0 OR &M65MP EQ 1).ASRCL00 LOGOUT PENDING  21111
         MVC   CAWLOC(1),CSWLOC         SAVE POSS LOG PEND COND   M1647
.ASRCL00 ANOP                                                     21111
         L     WKREG1,CAWLOC            GET CCW ADDRESS          A27691
         LA    WKREG1,CCWLN(WKREG1)     INCREMENT CSW FOR ERP     M1647
         ST    WKREG1,CSWLOC            SET UP FOR INT. SAVE     A27691
         AIF   (&ASR EQ 0 OR &M65MP EQ 1).NOLOG00  NO LOGOUT      M1647
         MVC   CSWLOC(1),CAWLOC         RESTORE POSS LOGOUT PEND  M1647
.NOLOG00 ANOP                                                     M1647
         MVC   IOBCSW+1(7,IOBREG),CSWLOC+1                       A27691
         BC    1,XCP054                 BRANCH IF INOP. CC       A27691
         SPACE 1                                                 A27691
*    CC=1 (CSW STORED) DETERMINE CAUSE OF CSW STORED             A27691
XCPPIO3  LR    LNKRG2,REG0              SET TCH RETURN           A27691
         AIF   (&ASR EQ 0 OR &M65MP EQ 1).ASRCL02                 21111
         TM    CSWLOC,CSWCLP            CHANNEL LOGOUT PENDING    21111
         BCR   7,LNKRG2                 EXIT TO TEST CHANNEL      21111
.ASRCL02 SPACE 1                                                  21111
*    SET POST AND BUSY FLAGS FOR INTERRUPT HANDLER AND CCH        M4756
         OI    UCBFL1(UCBREG),UCBBSY+UCBPST SET POST AND BUSY     M4756
         TM    CSWLOC+5,CSWCTK+CSWICK+CATCCH  CAT. ERRORS        BBBBBB
         L     APBSRG,IECPL2            GET TEMP BASE REG      @SA77644
         BC    7,SERR01-IECCPL02(APBSRG) YES, GO HANDLE THEM   @SA77644
XCP056E  TM    CSWLOC+4,CSWBSY          STAT CAUSED BY PREV SIO  A27691
         BC    8,XCP056C                NO, GO INSPECT STATUS    A27691
         SPACE 1                                                 A27691
*   BUSY BIT INSPECTION BRANCH CODE
         NI    UCBFL1(UCBREG),FF-UCBBSY RESET UCB BUSY         @SA77621
         TM    CSWLOC+4,CSWUCK          UNIT CHECK             @SA77621
         BC    1,XCP056G                YES-DON'T RESET POST   @SA77621
         NI    UCBFL1(UCBREG),FF-UCBPST RESET UCB POST         @SA77621
XCP056G  OI    UCBFL1(UCBREG),UCBCUB    SET C.U. BUSY FLAG     @SA77621
         TM    CSWLOC+4,CSWCUE          TEST FOR CONTROL UNIT END
         BC    8,XCP056H                NO,CONTINUE            @SA78138
***************************************************************@SA78138
* THE FOLLOWING CODE WILL SETUP CHMSK TO RESTART THE CHANNEL  *@SA78138
* PATH THAT JUST RECEIVED SIO CC=1 WITH STATUS OF BUSY AND    *@SA78138
* CONTROL UNIT END. BECAUSE CONTROL UNIT ENDING STATUS MAY BE *@SA78138
* USED TO RESTART A DEVICE ASSIGNED TO A DIFFERENT LOGICAL    *@SA78138
* CHANNEL ON A CHANNEL PATH NOT IN COMMON WITH THE DEVICE     *@SA78138
* PRESENTING THE STATUS. THIS WOULD PREVENT CHANNEL RESTART   *@SA78138
* FOR THE ORIGINAL DEVICE. THIS CODE WILL FORCE CHANNEL       *@SA78138
* RESTART FOR ALL LOGICAL CHANNEL QUEUES WHICH THE PHYSICAL   *@SA78138
* CHANNEL IS DEFINED FOR.                                     *@SA78138
***************************************************************@SA78138
         IC    ICREG,UCBCHA(UCBREG)     GET PATH ADDRESS       @SA78138
         L     WKREG1,CHANBIT           GET CHANNEL BIT        @SA78138
         SRL   WKREG1,ZERO(ICREG)       DERIVE PSW EQUIVALENT  @SA78138
         O     WKREG1,CHANBIT           ANY CHANNEL TO RESTART @SA78138
         ST    WKREG1,CHANBIT           SAVE CHANNEL RESTART   @SA78138
    IECLNK1 ,BC,15,SELTAG,0,LNKRG1,,&TBASE
XCP056H  LR    LNKRG2,REG0              SET TCH RETURN         @SA78138
         TM    CSWLOC+4,CSWSMD          STATUS MODIFIER SET
         AIF   (&M65MP EQ 1).MPB022A
         BCR   1,LNKRG2                 RETURN TO TEST CHANNEL
         AGO   .MPB022B
.MPB022A BC    8,XCPPI04                NO, BRANCH AROUND        BBBBBB
         LR    WKREG1,UCBREG            COPY UCB ADDRESS          19022
         S     WKREG1,NEGDISP           POINT AT UCB PREFIX       19022
         TM    UCBFL3(WKREG1),UCBACU    IS THERE AN ALT C.U.      19022
         BCR   1,LNKRG2                 YES, RETURN TO TCH        19022
         IECLNK1 ,BC,15,SELBSY,0,LNKRG1,,&TBASE                   19022
         SPACE 1                                                  19022
.MPB022B ANOP
XCPPI04  TM    CSWLOC+4,CSWDVE+CSWATN  BUSY ALONE                  IMP4
         BC    7,XCPPI04A               NO DON'T SET BUSY FLAG @SA77621
         OI    UCBFL1(UCBREG),UCBBSY    SET INTERRUPT EXPECTED   A27707
         IECLNK1 ,BC,15,SELBSY,0,LNKRG1,,&TBASE                  A27707
XCPPI04A TM    CSWLOC+4,CSWUCK          UNIT CHECK IN CSW?     @SA77621
         BO    INTATT2                  YES,LEAVE LNKRG1S AS IS@SA77621
         IECLNK1 XCPPI05,LA,LNKRG1,SELTAG,0,LNKRG1,,&TBASE       A27707
.TBS140  BC    15,INTATT2          TO ATTENTION ROUTINE-EXITS      TBSE
*                                       AFTER INSPECTION AT TRY AGAIN
         SPACE 1
*    CC=3 (CH OR CU INOP) ISSUE MESSAGE IF NEEDED                BBBBBB
         SPACE 1
*  THE COND CODE 3 MAY BE THE RESULT OF THE RQE BEING ON THE WRONG
*  LOGICAL CHANNEL.  IF THIS IS THE CASE, THE RQE WILL BE REMOVED
*  FROM THE WRONG LCH AND THE TASK WILL BE ABENDED.  AN INVALID
*  CONDITION EXISTS AND IT IS IMPOSSIBLE TO DETERMINE WHY.
XCP054   TM    XCPBTE,XCPCNT+XCPERR     INT OR ERR ENTRY
         BC    4,XCP054A                NO,CONTINUE CC3 HANDLING
         LA    LCHREG,0(LCHREG)         CLEAR HI BYTE           SA71384
         ST    LCHREG,LCHWDSV           SAVE LCH ADDR
         BAL   LNKRG3,XCP064            INIT LCHREG
         C     LCHREG,LCHWDSV           IS RQE ON PROPER LCH    SA71384
         BC    7,XCP054G                NO, GO DEQUEUE AND TERM TASK
XCP054A  DS    0C                                                  2745
         AIF   (&TWOSW EQ 0 AND &M65MP EQ 0).TWOS3               A26051
         AIF   (&APR EQ 1).TWOS2B                                 19022
         IC    ICREG,PATHMSK            GET PATH INDICATOR        19022
         IC    WKREG1,UCBCHM(0,UCBREG)  GET PREVIOUS CC 3         19022
         NR    ICREG,WKREG1             WAS IT ON THIS PATH       19022
         BC    7,XCP054D                YES, NO MSG REQUIRED     BBBBBB
.TWOS2B  ANOP                                                    BBBBBB
         MVN   IOBCC(1,IOBREG),PATHMSK  INDIC PATH FOR ERROR RTN A27691
         TM    SRTESTAT(UCBREG),SYSCON  SYSRES OR CONSOLE
         BC    8,XCP054C                NO, ISSUE MESSAGE         M0807
         TM    UCBTYP+2(UCBREG),DSKTYP  TEST FOR SYSRES ONLY      M0807
         BC    1,XCP054D                YES, CAN'T ISSUE MSG      M0807
.TWOS3   ANOP                                                     M0807
XCP054C  MVI   IOBSNS(IOBREG),X'40'     SIMULATE INT. REQ.
         MVI   IOBCSW+4(IOBREG),CSWUCK  SET UNIT CHECK
         BC    15,INTS02G              DEQUE RQST, SEND TO ERRTN   IMP3
         SPACE 1
XCP054D  OI    UCBFL1(UCBREG),UCBCUB    SET C.U. BUSY FLAG       A27691
         LR    LNKRG2,REG0              SET FOR TCH RETURN       A27691
         BCR   15,LNKRG2                RETURN TO TCH            A27691
         SPACE 1                                                 A27691
XCP054G  L     LCHREG,LCHWDSV           RESTORE WRONG LCH ADDR IN REG
         L     APBSRG,LCHERRAD          GET LCH ERROR RTN ADDR
         BCR   15,APBSRG                GO ABEND TASK
         SPACE 1
*    IF ACCEPTED, DEQUEUE, THEN INSPECT STATUS FURTHER           A27691
XCP056C  BAL   LNKRG2,XCPPDQ            DEQUEUE BEFORE PROCESSING
         BC    15,INT008                EXAMINE STAT. AS INT.   SA52441
         TITLE 'COMMON DEQUEUE ROUTINE - INPUT/OUTPUT SUPERVISOR'
*              COMMON DEQUEUE ROUTINE                                 *
*                                                                     *
*   FUNCTION   TO DEQUEUE AN RQE FROM A LOGICAL CHANNEL QUEUE         *
*                                                                     *
*   ENTRY PTS  XCPPDQ   FROM DA SIO RTN                               *
*                       SKIP SIO RETURN FROM SIO APPENDAGE            *
*                       POST SIO                                      *
*                       CHANNEL RESTART                               *
*                       SENSE SUBROUTINE                              *
*                       INTERRUPT ERROR INTERFACE                     *
*              XCPDDRDQ FROM XERX02                                   *
*                       DDRRETRY                                      *
*                       DDR005                                        *
*                       DDRCANCL                                      *
*                                                                     *
*   EXITS      LNKRG2   TO RETURN TO CALLER                           *
*                                                                     *
         SPACE 1                                                 BBBBBB
XCPPDQ   DS    0C
         TM    XCPBTE,XCPCNT+XCPERR     EXCP ALONE
         BCR   4,LNKRG2                 YES-NO DQ.
         BAL   LNKRG3,XCP064            GET LCH WRD.
         AIF   (NOT &D2305).NOZUS2
         LR    REG0,UCBREG              SAVE UCB ADDR             20201
*              GO GET BASE UCB ADDRESS IN CASE 2305               20201
         L     WKREG2,AZUSRTN           GET SUBRTN ADDR           20201
         BALR  LNKRG3,WKREG2            GO GET BASE ADDR  IF 2305 20201
         BC    15,XCP091A               GO DEQUE RQE            SA65046
XCPDDRDQ LR    REG0,UCBREG              SAVE UCBREG IN REG0     SA65046
XCP091A  LR    WKREG1,LCHREG            INIT BACK LINK POINTER  SA65046
         AGO   .ZEUSDQ                                          SA65046
.NOZUS2  ANOP
XCPDDRDQ LR    WKREG1,LCHREG            INIT BACK LINK POINTER    19022
.ZEUSDQ  ANOP                                                   SA65046
         ST    LCHREG,BLNKPTR          IN CASE NO DQ OCCURS        TPF1
         LA    LNKRG3,XCP091            SET RECURSING LINK REG     PRER
XCP091   LR    WKREG2,WKREG1            SAVE BACKLINK POINTER
         LH    WKREG1,TSTLNK(WKREG2)    GET ENTRY ADDRESS
         LTR   WKREG1,WKREG1     TEST FOR DUMMY                    CCHA
         BC    4,XCP092A                IT WASN'T HERE ANYWAY    A26116
         CR    WKREG1,TSTREG            COMPARE WITH RQE TO BE D.Q.'D
         BC    8,XCP093                 YES,TO DEQUEUE
*   KEEP TRACK OF FIRST REQUEST IN LCH FOR THE UCB IN QUESTION
         CH    UCBREG,TSTUCB(0,WKREG1)  FOR THIS UCB
         BCR   7,LNKRG3                 NO-SKIP
*   ERP, PRIORITY, AND ORDERED ENQUEUEING REQUIRE THE QUEUE TO
*   CONTINUE SEARCH FROM THE TOP REQUEST FOR THE DEVICE.
XCP092   TM    BLNKPTR,LCHOUT           YES, IS LCH OUT OF ORDER
         BCR   1,LNKRG3                 BACK-LINK PTR OUT OF ORDER
         ST    WKREG2,BLNKPTR           SET TO HIGHEST POINT IN Q
         OI    BLNKPTR,LCHOUT           SET UP DATE INDICATOR
         BCR   15,LNKRG3                EXIT TO COMPLETE OR INTERM.
         SPACE 1
XCP092A  ST    LCHREG,BLNKPTR           SET TO RESTART AT Q TOP  A26116
         AIF   (NOT &D2305).NOZUS3
         LR    UCBREG,REG0              RESTORE UCB ADDR          20201
.NOZUS3  BCR   15,LNKRG2                RETURN                   A26116
         SPACE 1
XCP093   BAL   LNKRG3,XCP092            SET BACK-LINK PTR IF NEEDED
         AIF   (NOT &D2305).NOZUS4
         LR    UCBREG,REG0              RESTORE UCB ADDR          20201
.NOZUS4  MVC   TSTLNK(2,WKREG2),TSTLNK(TSTREG) RELINK ENTRIES
         TM    TSTLNK+1(TSTREG),DUMADR  TEST FOR LAST ENTRY IN Q
         BCR   8,LNKRG2                 EXIT- NO FURTHER UPDATE
         STH   WKREG2,LCHLTS(LCHREG)    UPDATE LAST IN QUEUE POINTER
         BCR   15,LNKRG2                EXIT
         SPACE 1
*  AN EMPTY QUEUE WILL HAVE ITS LCHWRD ADDRESS IN LTS WHEN EMPTIED
         SPACE 2
*        THE IOS PATCH AREA HAS 15 WORDS AVAILABLE FOR ZAPS NEEDED
*        TO CORRECT OR TRAP PROBLEMS.  THIS AREA HAS ADDRESSABILITY
*        WITHIN IOS USING THE STANDARD BASE REGS.  THERE IS NO
*        INTERNAL OR EXTERNAL REFERENCE TO THIS AREA.
         SPACE 2
         DC    C'IOSPATCH-US07653'                             @SA78519
         BC    15,IOSPATCH
IOSPATCH DC    15F'0'
         TITLE 'INTERRUPT HANDLER - INPUT/OUTPUT SUPERVISOR'
         MEND
