         MACRO                                                   BBBBBB
         IECIOSB &TAPE,&SMF,&P3211,&TP,&APR,&VP,&SKORD,&RFIFO,&RPR,    *
               &TWOSW,&VS,&PROTECT,&TRACE,&SSDA,&TCBTYP,&SSTA,&GR,     *
               &NOP1,&RWTAU,&RESJQ,&NOP2,&ASR,&M65MP,&TBASE,&ANR,      X
               &DAVV,&DDR,&M7CH,&ASPN,&NOP4,&OLTEP,&TSO,&CEXT,&RMS,    X
               &TCAM,&MFTATT,&NOP3,&ALTSHR
         GBLB  &D2311,&D2321,&D2301,&D2303,&D2305,&DML
         GBLB  &R2311,&R2321,&R2301,&R2303,&R2305,&RML
         GBLB  &IECITB
         LCLB  &RESREL,&RPS,&TBYT
&RESREL  SETB  (&R2321 OR &R2311)
&RPS     SETB  (&D2305 OR &DML)
&TBYT    SETB  (&IECITB)                SET FOR 2 BYTE CU LOOKUP
         TITLE 'ITEL 7330 RPS SETUP ROUTINE'                      ITH01
         USING *,APBSRG *               ADDRESSABILITY            ITH01
IXCP110A CLC   UCBTYP+2(2,UCBREG),IT7330 * IS IT 7330?            ITH01
         BCR   7,LNKRG2 *               NO, BYPASS 7330 RPS       ITH01
         L     WKREG1,UCBWKADB(0,UCBREG) * GET PTR TO EXTENSION   ITH01
         LA    WKREG1,UCBWKDCC(0,WKREG1) * POINT TO BLKMPX CP     ITH01
         C     WKREG1,CAWLOC *          DOES CAW PT TO BLKMPX CP  ITH01
         BCR   7,LNKRG2 *               NO, BYPASS 7330 RPS       ITH01
         L     WKREG2,CVTADR *          GET CVT ADDRESS           ITH01
         L     LCHREG,SEEK2(0,WKREG1) * GET SEEK ARG ADDRESS      ITH01
         LA    LCHREG,0(LCHREG) *       CLEAR HI BYTE             ITH01
         C     LCHREG,CVTMZ00(WKREG2) * IS SEEK ARG IN MACH?      ITH01
         BCR   2,LNKRG2 *               NO, BYPASS RPS            ITH01
*    SETUP 7330 RPS (STAND ALONE SEEK & SET SECTOR)               ITH01
         LA    LNKRG3,XCP161C *         SET RET TO SA SK RET      ITH01
         MVC   SSS1ARG(6),0(LCHREG) *   SETUP SEEK ADDRESS        ITH01
         MVI   SSS1ARG+6,SSSNOP *       PRESET ZERO SECTOR VALUE  ITH01
         L     LCHREG,SKTIC(0,WKREG1) * GET TIC TO ADDRESS        ITH01
         LA    LCHREG,0(LCHREG) *       CLEAR HI BYTE             ITH01
         C     LCHREG,CVTMZ00(WKREG2) * IS TIC TO ADDRESS IN MCH? ITH01
         BH    IXCP110J *               NO, BYPASS SECTOR SETUP   ITH01
         CLI   CMDCODE(LCHREG),SSCMD *  IS TIC TO A SET SECTOR?   ITH01
         BNE   IXCP110J *               NO, BYPASS SECTOR SETUP   ITH01
         L     LCHREG,ARGADDR(LCHREG) * GET ADDRESS OF SECTOR ARG ITH01
         LA    LCHREG,0(LCHREG) *       CLEAR HI BYTE             ITH01
         C     LCHREG,CVTMZ00(WKREG2) * IS SECTOR ARG IN MACH?    ITH01
         BH    IXCP110J *               NO, BYPASS SECTOR SETUP   ITH01
         CLI   0(LCHREG),MAXSECTR *     IS SECTOR ARG VALID?      ITH01
         BNL   IXCP110J *               NO, BYPASS SECTOR SETUP   ITH01
         IC    LCHREG,0(LCHREG) *       GET SECTOR ARG            ITH01
         STC   LCHREG,SSS1ARG+6 *       SETUP SECTOR VALUE        ITH01
         L     LCHREG,SKTIC(0,WKREG1) * GET TIC TO ADDRESS        ITH01
         TM    CCWFLG(LCHREG),CCWCC *   IS COMMAND CHAINING ON?   ITH01
         BZ    IXCP110J *               NO, DONT TIC PAST SS CMD  ITH01
         AL    LCHREG,EIGHTF *          POINT TO CMD AFTER SS CMD ITH01
         TM    CMDCODE(LCHREG),TICOP *  IS CMD NOT TIC?           ITH01
         BZ    *+12 *                   NOT TIC, PT TO THIS CMD   ITH01
         TM    CMDCODE(LCHREG),X'0F'-TICOP * IS CMD TIC?          ITH01
         BZ    *+12 *                   YES, USE THIS TIC ADDR    ITH01
         ST    LCHREG,SKTIC(0,WKREG1) * SETUP TIC PAST SET SECTOR ITH01
         B     IXCP110J *               CONTINUE 7330 RPS SETUP   ITH01
         MVC   SKTIC+1(3,WKREG1),1(LCHREG) * SETUP TIC AROUND TIC ITH01
IXCP110J DS    0H *                     SETUP STAND ALONE S&SS    ITH01
         L     WKREG2,UCBWKADB(0,UCBREG) * GET PTR TO EXTENSION   ITH01
         MVC   RSBSECTR(1,WKREG2),SSS1ARG+6 SAVE FOR CMD RETRY    ITH01
IXCP110K LA    WKREG1,SSS1 *            GET ADDRESS OF S&SS CMD   ITH01
IXCP110L ST    WKREG1,CAWLOC *          SETUP CAW                 ITH01
         BR    LNKRG2 *                 RETURN                    ITH01
         TITLE 'ENQUEUE ROUTINES- INPUT/OUTPUT SUPERVISOR'
***********************************************************************
*                                                                     *
*                       ENQUEUE ROUTINES                              *
*                                                                     *
*              THERE ARE 3 OPTIONS FOR LOGICAL CHANNEL QUEUEING       *
*                   1. FIFO
*                   2. PRIORITY
*                   3. ORDERED SEEK
*                                                                     *
*              LCH AND SEEK QUEUEING MODULES ARE ACCESSED FROM
*                   THE DEVICE TABLE AND LCH TAB.
*                                                                     *
* ENTRY POINTS                                                        *
*              XCPPNQ  ENTRY PT TO DEVICE DEPENDENT QUEUE CODE        *
*              XCP100  NORMAL, FIFO QUEUING
*              XCPENQA NORMAL, FIFO QUEUING
*              XCPENQ  ENTRY PT FROM ORDERED SEEK RTN                 *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 2
*        THE FOLLOWING IS AN INTERFACE TO CORRECT QUEUE ROUTINE
         SPACE 2
*              THIS ROUTINE GETS ITS ENQUEUE CODE FROM DEVTAB
         SPACE 1
         USING *,APBSRG                 ESTABLISH ADDRESSABILITY BBBBBB
XCPPNQ   LA    WKREG1,XCP064                                     BBBBBB
         BALR  LNKRG3,WKREG1            GO GET PROPER LCH        BBBBBB
XCPPNQB  DS    0H                                               SA65004
         AIF   (&DDR EQ 0).DDRENQ       DDR IN SYSTEM?          SA65004
         C     TSTREG,ADDRRQE           IS THE DDR RQE          SA65004
         BNE   XCPPNQD                  NO, NORMAL ENQUEUE      SA65004
         MVC   TSTLNK(2,TSTREG),LCHFTS(LCHREG)  PUT DDR RQE     SA65004
         STH   TSTREG,LCHFTS(LCHREG)    ON TOP OF LCH           SA65004
         TM    TSTLNK+1(TSTREG),DUMADR  WAS LCH EMPTY           SA65004
         BCR   8,LNKRG2                 NO, RETURN              SA65004
         STH   TSTREG,LCHLTS(LCHREG)    PUT AS LAST RE          SA65004
         BCR   15,LNKRG2                RETURN                  SA65004
XCPPNQD  DS    0H                                               SA65004
.DDRENQ  ANOP                                                   SA65004
         IC    ICREG,UCBDTI(UCBREG)     GET DEVICE TABLE INDEX  SA65004
         LA    WKREG1,DEVTAB            ADDR OF DEVICE TABLE     BBBBBB
         LH    WKREG1,DVTENQ(WKREG1,ICREG) GET ENQ RTN ADDR      BBBBBB
         AIF   (&TBASE EQ 0).TBS181                                IMP3
         AR    WKREG1,BASREG            ADJUST ADDRESS             RL19
.TBS181  BCR   15,WKREG1               GO TO ENQUE CODE FOR DEVICE IMP3
         TITLE 'FIFO ENQUEUE ROUTINE - INPUT/OUTPUT SUPERVISOR'
*        FIFO ENQUEUE ROUTINE
         SPACE 1
XCP100   DS    0C
XCPENQ   DS    0C
         AIF   (&RPR EQ 0).SXIOSS2
         MVI   TSTPR(TSTREG),ZERO       ZERO OUT PRIORITY IN RQE BBBBBB
.SXIOSS2 ANOP
XCPENQ1  TM    LCHFTS+1(LCHREG),DUMADR  TEST EMPTY QUEUE
         BC    8,XCP080                 NO- PUT AT END OF CHAIN
XCPENQ2  STH   TSTREG,LCHFTS(0,LCHREG)  PUT THE RQE FIRST INTO QUEUE
XCP081   STH   TSTREG,LCHLTS(LCHREG)    PUT AS LAST
         MVC   TSTLNK(2,TSTREG),ENDAD   POINT LAST ENTRY TO DUMMY
         BCR   15,LNKRG2                BR- RETURN
         SPACE 1
XCP080   LH    WKREG1,LCHLTS(LCHREG)    GET LAST REQUEST IN QUEUE
         STH   TSTREG,TSTLNK(WKREG1)    LINK ENTRY ON END
         BC    15,XCP081                BR- TO EXIT
ENDAD    DC    XL2'FFFF'                DUMMY ADDRESS            BBBBBB
         AIF   (&SKORD EQ 0).STIOS12                             BBBBBB
       TITLE 'ORDERED SEEK ENQUEUE ROUTINE - INPUT/OUTPUT SUPERVISOR'
*              ORDERED SEEK ENQUEUE ROUTINE
         SPACE 2
*      FUNCTION:    THIS ROUTINE ENQUEUES SEEK REQUESTS ACCORDING TO
*                   THEIR SEEK CYLINDER ADDRESS AND THEIR RELATION TO
*                   OTHER OPERATIONS, THUS REDUCING THE SEEK TIME.
*         ENTRY:    XCPSEQ    FROM IOS MAIN LINE USING DEVICE TABLE
*         INPUT:    ADDRESS OF REQUEST ELEMENT IN GENERAL REGISTER 1
*                   AND ADDRESS OF UCB IN GENERAL REGISTER 7
*        OUTPUT:    NONE
*       EXT REF:    UCB REG AND ENQREG ADJUSTMENT VALUES
*         EXITS:    RETURN TO IOS MAIN LINE
*      ERR MSGS:    NONE
         SPACE 2                                                   OSER
XCPSEQ   DS    0C                                                  OSER
         AIF   (&RPR EQ 0).SXIOSS3                                 OSER
         MVI   TSTPR(TSTREG),ZERO       ZERO OUT PRIORITY IN RQE   OSER
.SXIOSS3 LR    WKREG1,LCHREG            INITIALIZE LINK PTR        OSER
         LR    REG0,DCBREG              SAVE DCB ADDR            BBBBBB
XCPOQ01  LR    WKREG2,WKREG1            SAVE BACK-UP RQE           OSER
XCPOQ02  LH    WKREG1,TSTLNK(0,WKREG1)  GET NEXT RQE               OSER
         LTR   WKREG1,WKREG1            CHECK FOR DUMMY            OSER
         BC    4,XCPOQ05                YES-CHECK FOR PROPER SLOT  OSER
         CH    UCBREG,TSTUCB(0,WKREG1)  REQUEST FOR SAME DEVICE    OSER
         BC    7,XCPOQ02                NO-SKIP THIS ONE           OSER
         CR    WKREG2,LCHREG            WAS FIRST BACK-UP FOUND    OSER
         BC    8,XCPOQ09                NO-CHECK WHERE TO QUEUE    OSER
         TM    IOBFL1(IOBREG),IOBURL    RELATED REQ. TO BE QUEUED  OSER
         BC    8,XCPOQ011               YES-CHECK IF SAME DEB      OSER
         L     WKREG3,TSTIOB-1(0,WKREG1) RANDOM-CHECK NEXT IOB     OSER
         TM    IOBFL1(WKREG3),IOBURL    RELATED REQUEST            OSER
         BC    8,XCPOQ02                YES-SKIP IT FOR COMPARE    OSER
*    FALL THROUGH WHEN BACK-UP RQE CAN BE USED FOR COMPARE.        OSER
         L     DCBREG,TSTIOB-1(0,WKREG2) GET IOB OF BACKUP RQE   BBBBBB
         CLC   IOBDAM+1(6,DCBREG),IOBDAM+1(WKREG3) COMPARE       BBBBBB
*                                       BACK-UP WITH NEXT          OSER
         BC    2,XCPOQ07                BRANCH IF BREAK-POINT      OSER
*    NORMAL CASE, FIRST SEEK ADDRESS IN QUEUE IS LESS THAN NEXT.   OSER
XCPOQ03  CLC   IOBDAM+1(6,IOBREG),IOBDAM+1(DCBREG) IS NEW SEEK   BBBBBB
*                                       ADDR LESS THAN NEXT        OSER
         BC    4,XCPOQ01                YES-LOOK FOR BREAK-POINT   OSER
*    TEST FOR NEW SEEK ADDRESS LESS THAN NEXT IN QUEUE.            OSER
XCPOQ04  CLC   IOBDAM+1(6,IOBREG),IOBDAM+1(WKREG3) IS NEW LESS     OSER
         BC    8+2,XCPOQ01              NO-CHECK NEXT SPOT IN QUE  OSER
         SPACE 1                                                   OSER
*    END OF THE QUEUE REACHED IF FROM XCPOQ01 SEARCH.  CHECK FOR   OSER
*    1) RANDOM - NO PROPER SLOT TO INSERT THIS NEW REQUEST.        OSER
*    2) SEQUENTIAL - FOUND LAST REQUEST RELATED TO THIS DATASET    OSER
*    AND THEN HIT END OF THE CHAIN.                                OSER
XCPOQ05  CR    WKREG2,LCHREG            WAS ANY BACK-UP FOUND      OSER
         BC    8,XCPOQ08                NO-USE NORMAL ENQUEUE    BBBBBB
*    YES-FIND PROPER SLOT TO INSERT                                OSER
         SPACE 1
*    FIND THE NEXT REQUEST FOR THIS DEVICE SO THAT THE NEW         OSER
*    REQUEST DOES NOT GET PROMOTED RELATIVE TO THE OTHER DEVICES   OSER
*    ON THIS QUEUE.  QUEUE NEW REQUEST IN FRONT OF ANY OTHER       OSER
*    REQUESTS.  RELATED REQUESTS ALWAYS LOGICALLY FOLLOW THE LAST  OSER
*    IN THE QUEUE.  RANDOM REQUESTS ARE ALWAYS BETWEEN THE         OSER
*    ENTRIES THAT QUALIFY DUE TO THE SEEK ADDRESS.  NOTE - THIS    OSER
*    PROCEDURE CAUSES A DESIRABLE BIAS TOWARD RANDOM REQUESTS      OSER
*    IN PROMOTING THEM AHEAD OF ANY RELATED REQUESTS QUEUED        OSER
*    WITHIN THE PROPER SLOT.                                       OSER
         SPACE 1
         LR    WKREG1,WKREG2            INIT. FOR CHAIN SEARCH     OSER
XCPOQ06  LR    WKREG2,WKREG1            SAVE PREVISOU REQ.         OSER
         LH    WKREG1,TSTLNK(0,WKREG1)  GET NEXT RQE ADDR          OSER
         LTR   WKREG1,WKREG1            IS IT DUMMY                OSER
         BC    4,XCPOQ08                YES-USE NORMAL ENQUEUE   BBBBBB
         CH    UCBREG,TSTUCB(0,WKREG1)  NO-IS IT FOR THIS DEVICE   OSER
         BC    7,XCPOQ06                NO-GET NEXT IN QUEUE       OSER
         STH   WKREG1,TSTLNK(0,TSTREG)  YES-FOUND PROPER SLOT      OSER
         STH   TSTREG,TSTLNK(0,WKREG2)  SET UP LINKAGE             OSER
         LR    DCBREG,REG0              RESTORE DCB POINTER      BBBBBB
         BCR   15,LNKRG2                RETURN TO CALLER           OSER
*    IF NEW ADDRESS IS HIGHER THAN FIRST, QUEUE IT HERE.           OSER
*    OTHERWISE, QUEUE IT HERE ONLY IF IT IS LESS THAN NEXT.        OSER
XCPOQ07  CLC   IOBDAM+1(6,IOBREG),IOBDAM+1(DCBREG) IS NEW ADDR   BBBBBB
*                                       HIGHER OR EQUAL TO FIRST   OSER
         BC    8+2,XCPOQ05              YES-QUEUE NEW RQE HERE     OSER
         BC    15,XCPOQ04               SEE IF NEW LESS THAN NEXT  OSER
         SPACE 1                                                   OSER
XCPOQ08  LR    DCBREG,REG0              RESTORE DCB POINTER      BBBBBB
         BC    15,XCPENQ1               GO TO FIFO ENQUEUE       BBBBBB
         SPACE 1                                                 BBBBBB
*    CHECK FOR RELATED (SEQUENTIAL) USER MONOPOLIZING THE DEVICE.
*    ALLOW A MAXIMUM OF FOUR REQUESTS WITHOUT BREAKING UP THE STRING.
XCPOQ09  CLC   TSTDEB(3,WKREG1),UCBORSV(UCBREG) WAS THIS REQUEST   OSER
*                                       FIRST IN QUEUE             OSER
         BC    8,XCPOQ010               YES-CHECK IF NEW SAME      OSER
         MVC   UCBORSV(3,UCBREG),TSTDEB(WKREG1) NO-MAKE THIS FIRST OSER
         NI    UCBORCNT(UCBREG),FF-ORCNTR CLEAR COUNT IN UCB       OSER
         BC    15,XCPOQ01               GO GET NEXT IN QUEUE       OSER
         SPACE 1                                                   OSER
XCPOQ010 CLC   TSTDEB(3,TSTREG),TSTDEB(WKREG1) NEW REQUESTOR SAME  OSER
*                                       AS FIRST IN QUEUE          OSER
         BC    7,XCPOQ01                NO-GO CHECK NEXT           OSER
         TM    IOBFL1(IOBREG),IOBURL    RANDOM REQUEST             OSER
         BC    1,XCPOQ01                YES-GO CHECK NEXT IN QUEUE OSER
         TM    UCBORCNT(UCBREG),MAXENQ  SHOULD STRING BE BROKEN    OSER
         BC    1,XCPOQ08                YES-USE NORMAL ENQUEUE   BBBBBB
         IC    ICREG,UCBORCNT(0,UCBREG) GET COUNT FROM UCB         OSER
         LA    ICREG,ONE(0,ICREG)       INCREMENT QUEUE COUNT      OSER
         STC   ICREG,UCBORCNT(0,UCBREG) SAVE NEW COUNT IN UCB      OSER
         BC    15,XCPOQ01               GO CHECK NEXT IN QUEUE     OSER
         SPACE 1                                                   OSER
*    ALWAYS CHECK ID OF REQUEST TO SEE HOW TO UPDATE BACK-LINK PTR.
XCPOQ011 CLC   TSTDEB(3,TSTREG),TSTDEB(WKREG1)  IS NEW DEB EQUAL   OSER
*                                       TO BACK-UP DEB             OSER
         BC    8,XCPOQ01                YES-GET NEXT BACK-UP     BBBBBB
         CLC   TSTDEB(3,TSTREG),TSTDEB(WKREG2)  IS NEW DEB EQUAL
*                                       TO PREVIOUS              BBBBBB
         BC    7,XCPOQ01                NO-GET NEXT BACK-UP      BBBBBB
         BC    15,XCPOQ02               YES-CHECK WHERE TO QUEUE BBBBBB
.STIOS12 AIF   (&RPR EQ 0).STIOS13                                M0403
         TITLE 'PRIORITY ENQUEUE ROUTINE - INPUT/OUTPUT SUPERVISOR'
*              PRIORITY IO ENQUEUE ROUTINE
         SPACE 2
*      FUNCTION:    TO ENQUEUE IO REQUESTS ACCORDING TO ITS PRIORITY
*         ENTRY:    FROM IOS MAIN LINE USING DEVICE TABLE
*         INPUT:    ADDRESS OF RQE IN GENERAL REGISTER 1 AND
*                   ADDRESS OF LOGICAL CHANNEL QUEUE IN GENERAL REG 13
*        OUTPUT:    NONE
*       EXT REF:    ENQUEUE ADJUSTMENT VALUES                         *
*         EXITS:    RETURN TO IOS MAIN LINE                           *
*      ERR MSGS:    NONE
*         NOTES:    NONE
*     OPERATION:    TAKE THE PRIORITY OF RQE AND
*                   COMPARE WITH THE PRIORITY OF THE RQE'S PREVIOUSLY
*                   QUEUED, AND INSERT INTO THEM WHEN REQUEST PRIORITY
*                   GETS HIGHER.
         SPACE 2
*        PRIORITY ENQUEUE ROUTINE
XCP100A  DS    0C                       PRIORITY DISK ENTRY
XCPPRQA  DS    0C                       DRUM PR QUEUEING
XCPPRQ   DS    0C                                                  9915
         AIF   (&TCBTYP LT 2).MFTRPR1   NOT MVT, SKIP            A24739
*  CHAP MAY CHANGE TCB PRIORITY DYNAMICALLY - CHECK IN MVT         9915
         TM    IOBFL1(IOBREG),IOBURL    SEQUENTIAL FILE            9915
         BC    1,XCPPRQ1A               NO - TCB PRIORITY OK       9915
         MVC   TSTPR(1,TSTREG),DEBPR(DEBREG) YES - USE DEB PRTY    9915
.MFTRPR1 ANOP
XCPPRQ1A LR    WKREG1,LCHREG            INITIALIZE BACK-UP PTR     9915
XCPPRQ1  LR    WKREG2,WKREG1            SAVE BACK-UP
         LH    WKREG1,TSTLNK(0,WKREG2)  ADVANCE TO NEW RQE
         LTR   WKREG1,WKREG1            TEST FOR DUMMY
         BC    4,XCPENQ1                TO NORMAL ENQUEUE
         CLC   TSTPR(1,TSTREG),TSTPR(WKREG1) COMPARE WITH NEXT
         BC    8+4,XCPPRQ1              NEW NOT HIGH ENOUGH
         MVC   TSTLNK(2,TSTREG),TSTLNK(WKREG2) HIGH -INSERT IN CHAIN
         STH   TSTREG,TSTLNK(0,WKREG2)  LINK NEW TO BACK-UP
         BCR   15,LNKRG2                EXIT
.STIOS13 DROP  APBSRG                                            BBBBBB
         IECSSDA  &SSDA,&SSTA,&M65MP
         TITLE 'LCHWD ERROR ROUTINE - INPUT/OUTPUT SUPERVISOR'
*     THIS ROUTINE RECEIVES CONTROL WHEN A REQUEST ELEMENT      US04550
*     (RQE) IS FOUND TO BE ON THE WRONG LOGICAL CHANNEL QUEUE   US04550
*     (LCH).  THE RQE IS REMOVED FROM THE WRONG LCH AND THE     US04550
*     TASK OWNING THE REQUEST IS ABENDED.                       US04550
         SPACE 2
LCHERR1  BALR  APBSRG,0            ESTABLISH ADDRESSABILITY     US04550
         USING *,APBSRG                                         US04550
LCHERR   BAL   LNKRG2,XCPDDRDQ     DEQUEUE RQE FROM WRONG LCH   US04550
         MVI   CODEDUMP,INVLCH          INVALID LOG CH QUEUE
         L     APBSRG,IECPL2            GET TEMP BASE REG      @SA77644
         BC    15,XERX02E-IECCPL02(APBSRG) GO ABEND THE TASK   @SA77644
         SPACE 1
         DROP  APBSRG                                           US04550
  TITLE 'PROGRAM CHECK RECOVERY ROUTINE - INPUT/OUTPUT SUPERVISOR'
*                                                                A24739
*              PROGRAM CHECK RECOVERY SUBROUTINE                 A24739
*
*  FUNCTION    TO CORRECTLY ABEND A TASK AFTER INVALID CONTROL   A24739
*                   BLOCKS HAVE CAUSED IOS TO PROGRAM CHECK      A24739
*                   AND TO RESTART ANY I/O REQUESTS IF           A24739
*                   NECESSARY.                                   A24739
*                                                                A24739
*  ENTRY POINT IECCPL00 - BRANCHED TO BY PROLOGUE AFTER          A24739
*                   DETERMING THAT A PROGRAM CHECK OCCURRED      A24739
*                   IN IOS.                                      A24739
*                                                                A24739
*  EXITS       1. XCP021 - TO SVC FLIH.                          A24739
*                   A. INT024B - RETURN AN RQE TO THE FREE LIST. A24739
*                   B. INT026  - NO RQE TO BE RETURNED.          A24739
*                                                                A24739
*              2. INT027 - TO CHANNEL RESTART.                   A24739
*                   A. INT024B - RETURN AN RQE TO THE FREE LIST. A24739
*                   B. INT026  - NO RQE TO BE RETURNED.          A24739
*                                                                A24739
         SPACE 1
IECCPL00 DS    0H                                                A24739
         BALR  APBSRG,0                 SET UP LOCAL BASE REG  @SA77644
         USING *,APBSRG                 ESTABLISH ADDRESSABLITY@SA77644
         AIF   (&TBASE EQ 0).CPL0010                             A24739
         DROP  BASREG,BASREG2                                     M2806
IECCPL02 L     BASREG,AIOSBAS           INIT BASE REGISTER     @SA77644
         LA    BASREG2,4094(0,BASREG)   INIT SECOND BASE REG     A24739
         USING IOSBAS,BASREG            ESTABLISH                 M2806
         USING IOSBAS+4094,BASREG2      ADDRESSABILITY            M2806
         AGO   .CPL0020                                          A24739
.CPL0010 ANOP                                                  @SA77644
IECCPL02 LA    BASREG,2048              INIT BASE REG          @SA77644
         AR    BASREG,BASREG            SET TO 4096              A24739
         USING IPLPSW+4096,BASREG       ESTABLISH ADDRESSABILTY@SA77644
.CPL0020 ANOP                                                    A24739
         MVI   CODEDUMP,INVECB          INVALID ECB, IOB          21016
         B     XERX00A                  BRANCH AROUND DEBCODE     21016
XERX00   MVI   CODEDUMP,INVDEB          DEB NOT KEY ZERO          21016
XERX00A  SR    TSTREG,TSTREG            INIT TSTREG FOR RECURSION 21016
         SR    ICREG,ICREG              CLEAR ICREG              A24739
         TM    XCPBTE,XCPRECUR          ENTERED TWICE            A24739
         BC    1,XERX02A                YES DON'T HANDLE         A24739
         OI    XCPBTE,XCPRECUR          SET FLAG                 A24739
         LH    TSTREG,LTSVALSV          PICK UP LAST USED RQE    A24739
         LTR   TSTREG,TSTREG            IS THERE AN RQE          A24739
         BC    8,XERX02A                NO SET NO RETURN RQE SW  A24739
         LH    UCBREG,TSTUCB(0,TSTREG)  PICK UP LAST UCB         A24739
         LM    IOBREG,DEBREG,TSTIOB-1(TSTREG) INIT IOB + DEB ADDRA24739
         CH    TSTREG,UCBLTS(0,UCBREG)  IS RQE ACTIVE ON UCB     A24739
         BC    7,XERX02                 NO GO DEQUE FROM LCH     A24739
         MVI   UCBFL1(UCBREG),ZERO      CLEAR UCB FLAGS          A24739
XERX02   LA    LNKRG3,XCPDDRDQ          SET RETURN FROM LCH INIT A24739
         BAL   LNKRG2,XCP064            GO TO INIT LCHRG,DEQ RQE A24739
*                                                               SA47823
*        AN ATTEMPT IS MADE TO VALIDITY CHECK THE DEB TO        SA47823
*        DETERMINE WHETHER THE PGM CHK RECOVERY SUBROUTINE      SA47823
*        SHOULD INVOKE THE QUIESCE COMPLETE SUBROUTINE.         SA47823
*        IF THE DEB IS INVALID, THE QUIESCE COMPLETE            SA47823
*        SUBROUTINE MUST BE BYPASSED.                           SA47823
*                                                               SA47823
XERX02E  L     WKREG1,DEBDCB-1(DEBREG)
         CLC   TSTDEB(3,TSTREG),DCBDEB(WKREG1)  VAL CTRL BLKS   SA47823
         BE    XERX02F
***************************************************************@SA77644
         TITLE 'POST PURGE ROUTINE - INPUT/OUTPUT SUPERVISOR'  @SA77644
*     THIS ROUTINE RECEIVES CONTROL WHEN AN ABEND CONDITION    @SA77644
*     OCCURS AND THE DEB IS INVALID.  THERE MAY BE A PURGE     @SA77644
*     QUIESCE OUTSTANDING, AND IF THE PURGE COUNT CANNOT BE    @SA77644
*     DECREMENTED, THE SYSTEM MAY ENTER A WAIT STATE.          @SA77644
*     THE PURPOSE OF THIS ROUTINE IS TO ATTEMPT TO POST PURGE  @SA77644
*     OUT OF A WAIT STATE SO IT CAN RE-PURGE THE DEB AND       @SA77644
*     REINITIALIZE THE QUIESCE COUNT OR RETURN TO ITS CALLER.  @SA77644
***************************************************************@SA77644
         SPACE 2                                               @SA77644
PSTPRG   L     WKREG2,PRGPPLAD          GET PPL ADDRESS        @SA77644
         LTR   WKREG2,WKREG2            IS PURGE WAITING       @SA77644
         BC    8,XERX02A                NO, RETURN             @SA77644
         XC    PRGPPLAD(4),PRGPPLAD     CLEAR PPL POINTER      @SA77644
         BAL   LNKRG2,PRGPST1           GO POST PURGE          @SA77644
         L     APBSRG,IECPL2            RELOAD TEMP BASE REG   @SA77644
         B     XERX02A                  RETURN                 @SA77644
         SPACE 1                                               @SA77644
XERX02F  BAL   LNKRG2,PRGCOMB                                  @SA77644
         L     APBSRG,IECPL2            RELOAD TEMP BASE REG   @SA77644
         SPACE 1                                                 A24739
         IECLNK1 XERX02A,LA,LNKRG1,XCP021,,,,&TBASE              A24739
         TM    XCPBTE,XCPCNT+XCPERR     TEST IF INTRPT ENTRY     A24739
         BC    4,XERX01                 YES, LNKRG1 SET          A24739
         IECLNK1    ,LA,LNKRG1,INT027,,,,&TBASE                  A24739
         AIF   (&TCBTYP NE 2).PGMSENS   IS THIS MVT              A51502
         TM    CSWLOC+4,CSWUCK          UNIT CHECK INTERRUPT     A51502
         BC    8,XERX07B                NO, DON'T DO SENSE       A51502
         TM    XCPBTE,XCPVALID          IS THIS VALIDITY ABEND   A51502
         BC    8,XERX07B                NO, DON'T DO SENSE       A51502
         IECLNK1    ,LA,LNKRG1,XERX07,,,,&TBASE                  A51502
.PGMSENS ANOP                                                    A51502
XERX07B  XC    CHMSK(4),CHMSK           CLEAR INVALID CHANNEL    A51502
         MVI   CHMSK,RSTMSK             SET TO RESTART ALL CHANS A24739
XERX01   LA    LNKRG3,INT026            SET EXIT NO RQE          A24739
         LTR   WKREG2,TSTREG            TEST IF RQE FOUND        A24739
         BC    8,XERX05                 NO, GO TO TEST IF EXCP   A24739
         AIF   (&DDR EQ 0).CPL0022                               A24739
         L     WKREG1,ADDRRQE           INIT PTR TO DDR RQE      A24739
         CR    TSTREG,WKREG1            CHECK IF DDR PGM CK      A24739
         BC    8,XERX01A                YES, SKIP RETURN OF RQE  A24739
         AIF   (&DDR EQ 1).CPL0022                               A24739
         L     WKREG1,ADDRRQES          INIT PTR TO SYSRES RQE    M3374
         CR    TSTREG,WKREG1            CHECK IF SR DDR PGM CK   A24739
         BC    8,XERX01A                YES, SKIP RETURN OF RQE  A24739
.CPL0022 LA    LNKRG3,INT025A .         INIT REG TO RETURN RQE   A37476
XERX01A  DS    0H                                                A24739
         AIF   (&TCBTYP GT 1).CPL0030                            A24739
         CLI   TSTTCB(TSTREG),FF        WAS RQE FREED
         BE    XERX05                   YES, CHECK IF EXCP
         L     WKREG1,TCBTBL            GET PTR TO TCB TABLE     A24739
         IC    ICREG,TSTTCB(0,TSTREG)   GET TCB INDEX            A24739
         SLL   ICREG,2                  MULTIPLY BY 4            A24739
         L     WKREG1,0(ICREG,WKREG1)   GET TCB ADDR FOR RQE     A24739
         SR    ICREG,ICREG              CLEAR PRIOR CHAN RESTART  M1542
         AGO   .CPL0032                                          A24739
.CPL0030 L     WKREG1,TSTTCB(0,TSTREG)  GET TCB ADDR FOR RQE     A24739
         LA    WKREG1,0(WKREG1)         CLEAR HI-ORDER BYTE       M3330
.CPL0032 L     LNKRG2,CVTADR            GET CVT ADDR.          @SA77644
         L     LNKRG2,CVTHEAD(0,LNKRG2) GET HI-PRIORITY TCB    @SA77644
XERX01B  LTR   LNKRG2,LNKRG2            END OF TCB CHAIN?      @SA77644
         BC    8,XERX05                 YES-CHECK IF EXCP         M4757
         CR    WKREG1,LNKRG2            IS THIS THE TCB        @SA77644
         L     LNKRG2,TCBTCB(0,LNKRG2)  GET ADDR OF NEXT TCB   @SA77644
         BC    7,XERX01B                NO-TO TEST NEXT TCB      A24739
         TITLE  'ABTERM INTERFACE - INPUT/OUTPUT SUPERVISOR'
*                                                                     *
*                       ABTERM INTERFACE                              *
*                                                                     *
*  FUNCTION    SET UP ABTERM CODE AND BRANCH TO ABTERM TO SCHEDULE    *
*              ABEND FOR THIS TASK                                    *
*                                                                     *
*  ENTRY       XERX00 - FROM VALIDITY CHECK SUBROUTINE                *
*              XERX04                                                 *
*                                                                     *
*  EXITS       XCP021 - TO SVC FLIH                                   *
*              INT027 - TO CHANNEL RESTART                            *
*                                                                     *
*    GO TO ABTERM TO SET TASK WITH ABEND CODE                    A24739
         SPACE 1
XERX04   L     ICREG,DUMPCODE           SET TO 400 CODE          A24739
         TM    XCPBTE,XCPVALID          TEST IF DURING VDTY CHK  A24739
         BC    1,XERX04A                YES, 400 ABEND           A24739
         L     ICREG,DUMPCOD1           INIT FOR 0F1 (INT) CODE  A24739
         TM    XCPBTE,XCPCNT            TEST IF DURING SVC       A24739
         BC    8,XERX04A                NO, 0F1 CODE             A24739
         L     ICREG,DUMPCOD2           INIT FOR 0F2 CODE        A24739
         AIF   (&TCBTYP EQ 2).CPL0040                           SM00010
XERX04A  L     APBSRG,GETMAIN                                   SM00010
         BALR  LNKRG2,APBSRG            GO GET SAVE AREA        SM00010
         LA    TCBREG,0(WKREG1)         GET TCB ADDRESS         SM00010
         L     APBSRG,IECPL2            LOAD TEMP BASE REG     @SA77644
         AGO   .CPL0045                                         SM00010
.CPL0040 ANOP                                                   SM00010
XERX04A  L     REG0,ABCORE              GET NON-PGM CK CORE SIZE
         LR    TSTREG,REG0              INDICATE GETMAIN
         LA    TCBREG,0(WKREG1)         GET TCB ADDRESS
         L     APBSRG,GETMAIN           GET REGMAIN ENTRY ADDR
         BALR  LNKRG2,APBSRG            GO GET SAVE AREA CORE
         L     APBSRG,IECPL2            RELOAD TEMP BASE REG   @SA77644
.CPL0044 ANOP                                                  @SA77644
*        DEFINITION OF IOS - GETMAIN INTERFACE
*              REG0 (SUBPOOL AND LENGTH), TSTREG (NEGATIVE),
*              TCBREG (TCB ADDRESS), LNKRG2 (RETURN ADDR) ,
*              ABPSRG (ENTRY POINT ADDRESS)
.CPL0045 ANOP
         XC    0(128,TSTREG),0(TSTREG)  CLEAR SAVE AREA
         MVC   ABID(8,TSTREG),IOSABEND  PUT IN EBCDIC ID
         ST    TCBREG,ABTCB(TSTREG)     SAVE TCB ADDRESS
         ST    ICREG,ABCODE(TSTREG)     SAVE ABEND CODE
         MVC   ABIOPSW(4,TSTREG),IOPSWO  SAVE INT DEVICE ADDR
         ST    WKREG2,ABRQEAD(TSTREG)   SAVE RQE ADDRESS
         MVC   ABBTE(1,TSTREG),XCPBTE   SAVE XCPBTE
         MVC   ABRQE(RQELN,TSTREG),0(WKREG2)  SAVE RQE CONTENTS
         MVC   ABPCOPSW(8,TSTREG),PCKOPSW  SAVE PGM CK OLD PSW
         MVC   ABCSW(8,TSTREG),CSWLOC   SAVE CURRENT CSW
         MVC   ABSVOPSW(8,TSTREG),SVOPSW  SAVE SVC OLD PSW
         TM    XCPBTE,XCPRECUR          PROGRAM CHECK CAUSE ABND
         BC    8,XERX04B                NO, SAVE CURR REGS
         L     WKREG1,PCKREGS           GET PGM CK REGS ADDR
         MVC   ABREGS(64,TSTREG),0(WKREG1)  SAVE PGM CK REGS
         BC    15,XERX04C               CONTINUE
XERX04B  STM   0,15,ABREGS(TSTREG) SAVE CURR REGS
XERX04C  LA    REG0,0(TCBREG)           INIT TCB PTR FOR ABTERM
         LR    TSTREG,ICREG             GET ABEND CODE
         L     APBSRG,CVTADR            GET CVT POINTER          A24739
         L     APBSRG,CVTABT(0,APBSRG)  GET ABTERM ADDRESS       A24739
         BALR  LNKRG2,APBSRG            TO ABTERM                BBBBBB
         L     APBSRG,IECPL2            RELOAD LOCAL BASE REG  @SA77644
         SPACE 1
*    DEFINITION OF ABTERM - IOS INTERFACE                        BBBBBB
*     INPUT    TSTREG(CODE),LNKRG2(RET ADDR) APBSRG(BASE ADDR)    21016
*    REGS CHANGED  ICREG                                         BBBBBB
         SPACE 1
         SR    ICREG,ICREG              CLEAR REG                A24739
         LR    TSTREG,WKREG2            RELOAD RQE ADDRESS       A24739
XERX03   NI    XCPBTE,FF-XCPRECUR-XCPVALID  CLEAR RECURSING FLAG
         BCR   15,LNKRG3                EXIT                     A24739
         SPACE 1                                                 A24739
XERX05   TM    XCPBTE,XCPCNT+XCPERR     EXCP ENTRY               A24739
         BC    8+1,XERX03               NO GO TO CHANNEL RESTART A24739
XERX06   DS    0H                                                A24739
         AIF   (&TCBTYP EQ 2 AND &M65MP EQ 0).CPL0050            A24739
         L     WKREG1,IEATCBP+4         GET PTR TO CURRENT TCB   A24739
         AGO   .CPL0060                                          A24739
.CPL0050 L     WKREG1,AIEATCBP          GET NEW/OLD POINTER      A24739
         L     WKREG1,4(0,WKREG1)       GET CURRENT TCB          A24739
.CPL0060 BC    15,XERX04                GO TO ABEND TASK         A24739
XERX09   L     ICREG,DUMP10F            GET ABEND CODE          SA63707
XERX09A  LA    LNKRG3,XCP021A           SET RETURN ADDRESS      SA63707
         SR    WKREG2,WKREG2            CLEAR RQE ADDR
         LR    WKREG1,TCBREG            GET TCB ADDRESS         SA63707
         B     XERX04A                  GO ABEND TASK           SA63707
XERX02B  MVI   CODEDUMP,INVUCB          INVALID UCB               21016
         B     XERX02E                  HANDLE THE ERROR          21016
XERX02C  MVI   CODEDUMP,INVDCB          INVALID DCB               21016
         B     XERX02E                  HANDLE THE ERROR          21016
XERX02D  MVI   CODEDUMP,INVDEB          INVALID DEB               21016
         B     XERX02E                  HANDLE THE ERROR          21016
         DROP  APBSRG                                          @SA77644
         AIF   (&TCBTYP NE 2).STSIOH2   IS THIS MVT              A51502
         SPACE 1
*  THIS ROUTINE CLEARS A POSSIBLE CONTINGENT CONNECT AFTER A     A51502
*  PROGRAM CHECK IN THE VALIDITY CHECK ROUTINE.                  A51502
         IECLNK1 XERX07,LA,LNKRG1,INT027,,,,&TBASE               A51502
         LH    UAREG,UCBCHA(UCBREG)     GET DEV/PATH ADDR       SA71469
         N     UAREG,ADDRMSK                                    SA71469
         BC    15,INTSEN3A .            GO DO A SENSE           SA62867
.STSIOH2 AIF   (&TSO EQ 0).NOTS         TEST FOR TIME SHARING     20001
         TITLE 'TCB EXCP INTERFACE (TSO) - INPUT/OUTPUT SUPERVISOR'
*        THIS ROUTINE USES THE TCB ADDRESS IN PARAMETER REGISTER
*          TO OVERLAY THE TCB ADDRESS IN THE ENVIRONMENTAL REGISTER.
*          THE REQUEST WILL BE PROCESSED AS A NORMAL EXCP.
         SPACE 2
*  ENTRY-      IGC092                                             20001
         SPACE 1
*  INPUT-      REGISTER 0-
*                 BYTE1 - RESERVED FOR OPTION FIELD
*                 BYTES 2,3,4 - TCB ADDRESS
*              REGISTER 1-
*                 IOB ADDRESS
         SPACE 1
*  OUTPUT-     NONE
*  EXTRN REF-  NONE
*  ERROR MSG-  NONE
         SPACE 1
IECXPT   DS    0D                       ALIGN ON DOUBLE WORD      20001
IGC092   DS    0H                       SVC NAME                  20001
         AIF   (&TBASE EQ 0).TSO005                               20001
         BALR  BASREG,0                 GET TEMP LOCAL BASE REG   20001
         USING *,BASREG                 ESTABLISH TEMP ADDRESS    20001
         DROP  BASREG2                  DROP BASE REG2            M5547
         L     BASREG,AIOSBAS           GET IOS BASE LOADED    @SA77644
         DROP  BASREG                   DROP TEMP BASE REG        20001
         USING IOSBAS,BASREG            ESTABLISH REAL ADDRESSABILTY
         LA    BASREG2,4094(0,BASREG)   LOAD HIGH BASE REG        20001
         USING IOSBAS+4094,BASREG2      ESTABLISH HIGH ADDRESSABILTY
         L     APBSRG,IECPL2            GET LOCAL BASE REG     @SA77644
         USING IECCPL02,APBSRG          ESTAB. LOCAL ADDRESS   @SA77644
         AGO   .TSO010                                            20001
.TSO005  USING IPLPSW+4096,BASREG                                 20001
         LA    BASREG,2048              SET UP SINGLE             20001
         AR    BASREG,BASREG            BASE REGISTER             20001
         L     APBSRG,IECPL2            GET LOCAL BASE REG     @SA77644
         USING IECCPL02,APBSRG          ESTAB. LOCAL ADDRESS   @SA77644
.TSO010  TM    SVOPSW+1,PPKEY           IS REQST FROM SPVSR       20001
         BC    7,IECXPT1                NO, GO ABEND TASK         20001
         TM    IOBCC(TSTREG),X'0F'      IS PTK IN IOBSIOCC?    @SA78151
         BNO   IEC092B                  NO, CONTINUE           @SA77080
         MVZ   IEASCSAV(1),IOBCC(TSTREG) YES, UPDATE SVC SAVE  @SA78151
         L     TCBRG0,IEASCSAV          AND PARAMETER REGISTER @SA77080
         SPACE 1                                                  20001
*   GET TCB ADDRESS PASSED IN REG 0 (PARAMETER REGISTER)          20001
IEC092B  EQU   *                                               @SA77080
         ST    TCBREG,CURRTCB           SAVE CURRENT TCB ADDR   SA53199
         LR    TCBREG,TCBRG0            CHANGE TCB ADDRESS        20001
         BC    15,XBASE                 SERVICE EXCP              20001
         SPACE 1                                                  20001
IECXPT1  L     ICREG,DUMPTCB            SET UP ABEND CODE         20001
         MVI   XCPBTE,XCPCNT            SETUP ENTRANCE BYTE     SA65663
         BC    15,XERX09A               GO TO ABTERM            SA65663
         SPACE 1                                                  20001
.NOTS    AIF   (&ASR EQ 0).ASR11                                 BBBBBB
    TITLE 'CHANNEL CHECK HANDLER INTERFACE - INPUT/OUTPUT SUPERVISOR'
*              CHANNEL CHECK HANDLER INTERFACE
         SPACE 2
*        THIS ROUTINE LOADS THE APPENDAGE BASE REGISTER WITH THE
*        BASE REGISTER VALUE FOR CCH.  THIS VALUE IS ALSO THE FIRST
*        EXECUTABLE INSTRUCTION IN CCH.  A CODE, PLACED IN THE HIGH
*        ORER END OF BASE REGISTER VALUE, IS ALSO LOADED.  THIS CODE
*        IS DETERMINED AT EACH INTERCEPT POINT WITHIN IOS.  A BRANCH
*        IS THEN TAKEN VIA REGISTER 15 TO THE CHANNEL CHECK HANDLER.
*        FOLLOWING THE BALR INSTR. IS THE RETURN VECTOR TABLE.
*        WHICH WILL DETERMINE THE RETURN POINT TO IOS IF THE SYSTEM
*        IS NOT ABORTED.
         SPACE 1
*        THE PROGRAM IS ENTERED WHEN
*             1. CDC,CCC,ICC ERROR BITS ARE FOUND IN THE CSW
*             2. CHANNEL OR SUBCHANNEL BUSY WHEN CONDITION SHOULD
*                NOT EXIST
         SPACE 2
*    ENTRY FOR INTERRUPT WITH NO ASSOCIATED UCB.                   CCHB
SERR     DS    0H                       ENTRY TO SERR ROUTINE     21014
         HOOK  EID=IHLMIO1              TRACE THE INTERRUPT       21014
         TM    CSWLOC+5,CSWCTK+CSWICK+CATCCH CAT ERRORS           21014
         IECLNK1 ,BCR,8,LNKRG1,,,,&TBASE                           CCHB
         SPACE 1
*    ENTER CHANNEL CHECK HANDLER TO RECORD CHANNEL FAILURE.        CCHB
         SR    UCBREG,UCBREG            INDICATE NO UCB            CCHB
SERR02   MVI   CATAPP,CATINT            SET CCH CODE FOR INTERRUPT CCHB
SERR01   EQU   * .                      CAUSE ALL POSSIBLE ENTRIES TO
SERR04   EQU   *
         L     APBSRG,CATAPP .          LOAD APPENDAGE BASE REGISTER
         STH   UAREG,IOPSWO+2           SET UNIT ADDR IN I/O OLD BBBBBB
         BALR  LNKRG2,APBSRG            GO TO CCH HANDLER
         SPACE 1
*    DEFINITION OF CATAPP - IOS INTERFACE                        BBBBBB
*    INPUT     UAREG,UCBREG,LNKRG2(RET ADDR),APBSRG(BASE ADDR)   BBBBBB
*    REGS CHANGED  NONE                                          BBBBBB
         SPACE 1
*        RETURN VECTOR TABLE
**********************************************************************
         SPACE 1
**********************************************************************
         BC    15,XCP056E               RETURN AFTER SIOAND TIO ON SEEK
         BC    15,INTCCH                RETURN AFTER INERRUPT
         BC    15,INTSEN3               RETURN, RETRY SENSE     SA61121
         BC    15,INTS10A               RETURN AFTER INVALID SNSSA61121
         BC    15,INT027              RETURN NO UCB OR INVALID CUA19062
         AGO   .RMS000                                            19021
.ASR11   TITLE 'SERR INTERFACE - INPUT/OUTPUT SUPERVISOR'
*                   SERR INTERFACE
         SPACE 2
*        THIS ROUTINE SETS THE CODE IN THE MACHINE CHECK OLD PSW TO
*        INDICATE THE CONDITIONS OF HARDWARE MALFUNCTION WHICH ARE
*        UNCORRECTABLE AND SO SERIOUS THAT FURTHER OPERATION OF THE
*        SYSTEM IS UNFEASABLE.
         SPACE 1
*   ENTRY POINTS   WHENEVER A CHANNEL CONTROL CHECK ,CHANNEL DATA CHECK
*                  OR INTERFACE CONTROL CHECK OCCUR ON A SIO OR AN
*                  ASSYNCHRONOUS INTERRUPT
*                  WHENEVER A CHANNEL OR SUBCHANNEL BUSY CONDITION
*                  OCCURS, WHEN WE ARE CERTAIN THAT SUCH A CONDITION
*                  SHOULD NOT EXIST
         SPACE 1
*        INPUT :    NONE
*        OUTPUT:    CODE AT BYTE 115, UNIT ADDRESS AT 58 AND 59 AND
*                   RQE ADDRESS AT 280
*     EXTRN REF:    NONE
*         EXITS:    TO SERR ROUTINE BY LOADING PSW
         SPACE 5
SERR     DS    0H                       ENTRY TO SERR ROUTINE     21014
         HOOK  EID=IHLMIO1              TRACE THE INTERRUPT       21014
         TM    CSWLOC+5,CSWCTK+CSWICK   ANY CATASTROPHIC ERRORS   21014
         IECLNK1 ,BCR,8,LNKRG1,,,,&TBASE                           CCHB
SERR02   DS    0H                                                  CCHB
*   ENTERED HERE WHEN CATASTROPHIC OR CC=2 WHEN RQE IS AVAILABLE
SERR01   ST    TSTREG,280               PLACE RQE ADDRESS IN 280
SERR04   MVI   MCKPSW+3,OF              MOVE CAT ERR CODE INTO PSW BBBB
*                                       ENTRY USED BY CAT ERR W/O RQE
         STH   UAREG,IOPSWO+2           STORE UNIT ADDRESS       BBBBBB
         LPSW  MCKPSW                   TO SER VIA MACHINE CHECK BBBBBB
.RMS000  AIF   (&TBASE EQ 0).TBS001                            @SA77644
AIOSBAS  DC    A(IOSBAS)                IOS BASE ADDRESS       @SA77644
.TBS001  AIF   (&TCBTYP EQ 2).SIRB01                           @SA77644
         TITLE 'MFT ABEND SAVE AREA ROUTINE - INPUT/OUTPUT SUPERVISOR'
RMBRANCH DS    0H                                               SM00010
         USING *,APBSRG                                         SM00010
         L     TSTREG,ABSV2AD           GET ADDR OF SAVE AREA   SM00010
         MVC   ABSV2AD(4),ABSV1AD       ROTATE SAVE AREA PRTS   SM00010
         ST    TSTREG,ABSV1AD           STORE CURR SAVE AREA PTRSM00010
         BCR   15,LNKRG2                RETURN                  SM00010
         SPACE 3                                                SM00010
ABSV1AD  DC    A(ABSV1)                 ABEND SAVE AREA ADDR    SM00010
ABSV2AD  DC    A(ABSV2)                 ABEND SAVE AREA ADDR    SM00010
         SPACE 3                                                SM00010
ABSV1    DC    32F'0'                   ABEND SAVE AREA         SM00010
ABSV2    DC    32F'0'                   ABEND SAVE AREA         SM00010
         DROP  APBSRG                                           SM00010
.SIRB01  ANOP
         TITLE 'SIRB BLOCK RQE RETURN - INPUT/OUTPUT SUPERVISOR'
*     THIS ROUTINE RECEIVES CONTROL FROM THE SUPERVISOR WHEN    SA53191
*     THE SIRB HAS ABENDED.  SVC 15 ZEROES THE RQE ADDRESS IN   SA53191
*     THE SIRB.  IF THIS ROUTINE IS ENTERED AND THE ADDRESS IS  SA53191
*     NOT ZERO, SVC 15 IS ISSUED TO POST THE USER, FREE THE     SA53191
*     RQE AND CLEAN UP THE UCB.                                 SA53191
         SPACE 2                                                SA53191
IECRQE00 BALR  APBSRG,0      ADDRESSABILITY                     SA53191
         USING *,APBSRG                                         SA53191
         L     WKREG1,SIRBAD2           GET ADDR OF SIRB        SA53191
         LH    TSTREG,SIRBRQE(WKREG1)   GET RQE FROM SIRB       SA53191
         LTR   TSTREG,TSTREG            HAS RQE BEEN RETURNED   SA53191
         BC    8,XCPRQE2                YES, DON'T ISSUE SVC 15 SA53191
         L     IOBREG,TSTIOB-1(TSTREG)  GET IOB ADDR            SA53191
         NI    IOBFL1(IOBREG),FF-IOBERR   MARK IOB WITH         SA53191
         OI    IOBFL1(IOBREG),IOBEX       PERMENENT ERROR       SA53191
         LH    UCBREG,TSTUCB(TSTREG)    GET UCB ADDRESS         SA53191
         TM    UCBID(UCBREG),UCBIDV     WAS 25E SCHEDULED       SA53191
         BC    1,XCPRQE1                NO, ISSUE SVC 15        SA53191
         LA    UCBREG,6(UCBREG)         CORRECT UCB ADDR        SA53191
         STH   UCBREG,TSTUCB(TSTREG)    IN UCB                  SA53191
XCPRQE1  SVC   15                       ISSUE ERROR EXCP        SA53191
XCPRQE2  SVC   3                        ISSUE EXIT FOR SIRB     SA53191
SIRBAD2  DC    V(SIRB)                  SIRB ADDRESS            SA53191
         DROP  APBSRG                                           SA53191
         AIF   (&RMS EQ 0).RMSEND                                BBBBBB
    TITLE 'RMS CHANNEL RESTART INTERFACE - INPUT/OUTPUT SUPERVISOR'
*    THIS CODE IS ENTERED WHEN IOS IS PROCESSING I/O FOR RMS.     20061
*    ITS FUNCTION IS TO ALLOW ONLY THE RMS RQE TO BE PROCESSED.   20061
*    WHEN FOUND, IF THE UCB WAS ACTIVE FOR ANOTHER REQUEST,       20061
*    HOUSEKEEPING IS DONE TO INSURE THAT THE OTHER REQUEST WILL   20061
*    BE RESTARTED FROM THE BEGINNING AFTER RMS IS DONE, AND THE   20061
*    RMS RQE REQUEST IS STARTED.                                  20061
         SPACE 1                                                  20061
*    ALLOW ONLY THE RMS RQE TO BE STARTED                         20061
         USING *,APBSRG                 ESTABLISH ADDRESSABILITY BBBBBB
INTRMS   LH    WKREG1,UCBLTS(0,UCBREG)  INIT REG TO LAST USER     20061
         LH    WKREG2,ARMSRQE+1         INIT PTR TO RMS RQE       20061
         CR    TSTREG,WKREG2            TEST IF RMS REQUEST       20061
         BC    7,INTRMS3                NO, GO TO TEST RMS UCB    20061
         CR    TSTREG,WKREG1            TEST IF RMS WAS LAST USER 20061
         BC    8,INTRMS1                YES-PROCESS REQUEST       20061
         BC    15,INTRMS4               GO TO TEST UCB            20061
         SPACE 1                                                  20061
INTRMS3  CH    UCBREG,ARMSUCB           TEST IF RMS UCB           20061
         BCR   7,LNKRG2                 NO, RETURN TO CHN SRCH    20061
         CR    WKREG1,WKREG2            TEST IF RMS WAS LAST USER 20061
         BCR   8,LNKRG2                 YES, GO TO GET RMS RQE    20061
INTRMS4  TM    UCBFL1(UCBREG),UCBCUB+UCBERR IS LAST RQE IMPORTANT 20061
         BC    8,INTRMS2                NO-GO TO INIT UCB FLAG    20061
         STH   WKREG1,RMSRQESV          STORE IN SAVE AREA        20061
         L     WKREG1,TSTIOB-1(0,WKREG1) GET IOB POINTER          20061
         NC    IOBFL1(4,WKREG1),CLRMSK  CLEAR FLAGS AND SENSE     20061
         XC    IOBFL3(9,WKREG1),IOBFL3(WKREG1) CLEAR FLG,CSW,CC   20061
         XC    IOBECT(2,WKREG1),IOBECT(WKREG1) CLEAR ERROR COUNT  20061
         L     WKREG1,IOBDCB-1(0,WKREG1) GET DCB POINTER          20061
         NI    DCBFL(WKREG1),FF-DCBPER  RESET ERROR FLAGS         20061
         OI    RMSFLAG,RMSRQEFL         SET SAVE-AREA-IN-USE FLAG 20061
INTRMS2  DS    0H                                                 20061
         AIF   (&DAVV EQ 0).RMS07                                 20061
         NI    UCBFL4(UCBREG),FF-UCBDAV RESET DAVV FLAGS          20061
.RMS07   TM    UCBFL1(UCBREG),UCBASK    TEST ARM SEEK             20061
         MVI   UCBFL1(UCBREG),ZERO      ZERO FLAG IN ALL CASES    20061
         LA    WKREG1,INT027                                      20061
         BCR   1,WKREG1                 YES-RECYCLE TO            M0400
*                                       RESTART LCH WITH SEEKS    20061
         CR    TSTREG,WKREG2            TEST IF RMS RQE           20061
         BCR   7,LNKRG2                 NO, GO TO GET RMS RQE     20061
         BC    15,INTRMS1               GO TO PROCESS RMS REQ     20061
         SPACE 1
         DROP  APBSRG
         TITLE 'EXCP BRANCH ENTRY FOR RMS MODULE LOADER - INPUT/OUTPUT X
               SUPERVISOR'
*        EXCP BRANCH ENTRY                                        20061
*                                                                 20061
*    THIS ROUTINE ALLOWS THE RMS MODULE LOADER TO USE THE EXCP    20061
*    FUNCTION OF IOS WITHOUT USING THE INTERRUPT HANDLERS OR      20061
*    OTHER SUPERVISOR ROUTINES.  THIS DIRECT BRANCH ENTRY IS      20061
*    PROVIDED TO REDUCE THE EXPOSURE TO A SECOND HARD             20061
*    MACHINE CHECK.  RMS HAS AN RQE DEFINED FOR ITS EXCLUSIVE     20061
*    USE, SO THE BRANCH ENTRY CAN BE TREATED AS AN ERROR EXCP.    20061
*    INPUT TO THIS ROUTINE IS THE IOB ADDRESS IN REGISTER 1, AND  20061
*    LNKRG2, WHICH POINTS TO A FULL WORD PARAMETER LOCATION, IS  A40762
*    ALSO USED TO EXIT TO RMS. BIT 0 AND 1 OF THE PARAMETER      A40762
*    LOCATION WILL INDICATE RMS ENTRANCE, RMS EXIT OR MCH IS TO  A40762
*    ENTER WAIT STATE.                                           A40762
         SPACE 1                                                  20061
IECRMS   DS    0C                                                 20061
         AIF   (&TBASE EQ 0).RMS01                                20061
         DROP  BASREG,BASREG2           DROP BASE REGS TEMP       20061
         USING *,APBSRG                 ESTAB TEMP BASE REG       20061
         L     BASREG,IOSBASAD          INIT BASREG               20061
RMS001   LA    BASREG2,4094(0,BASREG)   INIT SECOND BASE REG      20061
         USING IOSBAS,BASREG            ESTABLISH                 20061
         USING IOSBAS+4094,BASREG2      ADDRESSABILITY            20061
         AGO   .RMS02                                             20061
.RMS01   USING *,APBSRG                 ESTABLISH ADDRESSABILITY BBBBBB
         LA    BASREG,2048              INIT IOS BASE REG        BBBBBB
         AR    BASREG,BASREG            SET TO 4096               20061
.RMS02   ST LNKRG2,RMSSAVE              SAVE RMS RETURN ADDR      20061
*    A TEST IS NOW MADE TO DETERMINE IF, VIA A PREVIOUS BRANCH    20061
*    EXCP, THE TIES BETWEEN A UCB AND AN RQE WERE REMOVED (I.E.-  20061
*    UCBERR OR UCBCUB WAS TURNED OFF).  IF SO, THE TIES ARE       20061
*    RESTORED VIA THE UCBCUB FLAG AND THE UCBLTS FIELD.           20061
         TM    RMSFLAG,RMSRQEFL         TEST IF PREV RQE IMPORTNT 20061
         BC    8,RMS002                 NO-BRANCH                 20061
         NI    RMSFLAG,FF-RMSRQEFL      RESET FLAG                20061
         LH    WKREG3,RMSRQESV          GET RQE PTR               20061
         LH    WKREG2,TSTUCB(0,WKREG3)  GET UCB IT WAS TIED TO    20061
         MVI   UCBFL1(WKREG2),UCBCUB    SET FLAG TO TIE RQE + UCB 20061
         STH   WKREG3,UCBLTS(0,WKREG2)  INSURE PROPER RQE         20061
RMS002   SR    ICREG,ICREG              CLEAR ICREG               20061
         TM    0(LNKRG2),X'80'          TEST FOR FINAL ENTRANCE  A40762
         BC    1,IECRMSEX               YES-RMS THRU,GO TO EXIT  A40762
         OI    RMSFLAG,RMSACTV          SET RMS FLAG FOR CHN REST 20061
*                                       TO START ONLY THE RMS RQE 20061
         MVI   XCPBTE,XCPRMS+XCPCNT+XCPERR SET ENTRY FLAGS        20061
*    INITIALIZE THE STANDARD IOS REGISTERS                        20061
         LR    IOBREG,1                 XFER IOB PTR FROM PARM RG 20061
         L     DCBREG,IOBDCB-1(0,IOBREG) GET DCB POINTER          20061
         L     DEBREG,DCBDEB-1(0,DCBREG) GET DEB POINTER          20061
         LH    UCBREG,DEBUCB+1(0,DEBREG) GET UCB PTR-ASSUME 1 EXT 20061
         STH   UCBREG,ARMSUCB           SAVE RMS UCB ADDR         20061
         SPACE 1
*    THIS TEST IS TO SEE IF RMS PASSED SPECIAL INDICATOR. IF YES,A40762
*    UCBFL1 WILL BE CLEARED TO ALLOW RMS TO RESTART THE DEVICE.  A40762
*    IF NO THE REQUEST IS IGNORED AND CONTINUE NORMALLY.         A40762
         SPACE 1
         TM    0(LNKRG2),X'40'          TEST FOR RMS INDICATOR   A40762
         BC    8,RMS002A                NO-CONTINUE              A40762
         MVI   UCBFL1(UCBREG),ZERO      YES ALLOW RMS TO RESTART A40762
*    INITIALIZE THE IOB                                           20061
RMS002A  STH   ICREG,IOBECT(0,IOBREG)   CLEAR ERROR COUNTER      20061
         XC    IOBFL3(9,IOBREG),IOBFL3(IOBREG) CLEAR FL3,CSW,CC   20061
         NC    IOBFL1(4,IOBREG),CLRMSK  CLEAR FLAGS AND SENSE     20061
         MVI   IOBCOD(IOBREG),NORMC     SET NORMAL COMPL FLAG     20061
*    INITIALIZE THE RMS RQE                                       20061
         LH    TSTREG,ARMSRQE+1         INIT TSTREG TO RMS RQE    20061
         STH   UCBREG,TSTUCB(0,TSTREG)  STORE UCB PTR IN RQE      20061
         STM   IOBREG,DEBREG,TSTIOB-1(TSTREG) ST IOB AND DEB PTRS 20061
         MVI   TSTASSN(TSTREG),ZERO     INSURE RQE ASSIGNED       20061
         AIF   (&TCBTYP LT 2).RMS05     NOT MVT, SKIP            A24739
         MVI   TSTKEY(TSTREG),ZERO      SUPERVISOR PROT. KEY      20061
.RMS05   ANOP                                                     20061
*    ENQ THE RMS RQE ON THE PROPER LCH QUEUE                      20061
         L     APBSRG,PNQAD             ADDR OF XCPPNQ           BBBBBB
         BALR  LNKRG2,APBSRG            ENQ RMS RQE ON LCH       BBBBBB
         USING *,LNKRG2                 ESTABLISH TEMP BASE REG  BBBBBB
RMS003   L     APBSRG,RMSBASE           ADDR OF IECRMS           BBBBBB
         DROP  LNKRG2                   DROP TEMP BASE REG       BBBBBB
         USING IECRMS,APBSRG            ESTABLISH ADDRESSABILITY BBBBBB
*    SET I/O OLD PSW FOR PROPER CHANNEL RESTART                   20061
         MVN   IOPSWO+2(1),UCBCHA(UCBREG) INIT CHAN ADDR IN IOPSW 20061
         NI    UCBFL1(UCBREG),FF-UCBNRY INSURE FLG OFF-ALLOW REST 20061
         LA    WKREG2,INT027                                      20061
         BCR   15,WKREG2                GO TO CHAN RESTART        20061
         SPACE 1                                                  20061
*    WHEN RMS IS ACTIVE, THIS IS THE ONLY EXIT FROM IOS           20061
INTRMSEX L     LNKRG2,RMSSAVE           LOAD SAVED RMS RETURN REG 20061
         TM    RMSFLAG,RMSACTV          TEST IF RMS STILL ACTIVE  20061
         BC    1,4(LNKRG2)              YES EXIT TO RMS          A40762
         NI    XCPBTE,FF-XCPRMS         RESET RMS FLAG            20061
         BC    15,4(LNKRG2)             RETURN TO RMS            A40762
         SPACE 1                                                  20061
*        RMS BRANCH EXIT                                          20061
*                                                                 20061
*    THIS ROUTINE IS ENTERED AFTER RMS HAS COMPLETED ALL OF       20061
*    ITS WORK.  THE PURPOSE OF THE ROUTINE IS TO TURN OFF THE     20061
*    RMS ACTIVE FLAG AND TRY TO RESTART THE SYSTEM.  THE          20061
*    RMS FLAG IN XCPBTE IS LEFT ON TO INSURE EXITING TO RMS       20061
*    FOR ITS FINAL CLEAN-UP.                                      20061
IECRMSEX MVI   XCPBTE,XCPRMS            INDICATE INTRPT ENTRY     20061
         NI    RMSFLAG,FF-RMSACTV       RESET ACTIVE FLAG         20061
         MVI   CHMSK,X'FE'              SET CHMSK TO REST ALL CHN 20061
         LA    WKREG2,INT033                                      20061
         BCR   15,WKREG2                GO TO CHAN RESTART        20061
         SPACE 1                                                 BBBBBB
         DROP  APBSRG                                            BBBBBB
.RMSEND  AIF   (&DDR EQ 0).DDR06                                SA41451
         TITLE 'DDR APPENDAGE SUPPORT - INPUT/OUTPUT SUPERVISOR'
*                       DDR APPENDAGE SUPPORT
         SPACE 1                                                 BBBBBB
*   DDR USES THE DDR APPENDAGE VECTOR TABLE (DDRAPNVT) TO RETURN
*   FROM ITS SIO, CHANNEL END, AND ABNORMAL END APPENDAGES.  SINCE
*   DDR HAS ITS OWN RQE, AND USES SVC 15 IN LIEU OF EXCP, ALL
*   OF ITS I/O IS DRIVEN BY THESE APPENDAGE RETURNS.
         SPACE 3                                                 BBBBBB
*        REGISTER DEFINITION USED ONLY IN THIS ROUTINE            19022
DDRLNK1  EQU   UAREG .                  LINK REG                  19022
DDRWK1   EQU   LCHREG .                 WORK REG                  19022
DDRWK3   EQU   2 .                      PURGE WORK REG           BBBBBB
DDRWK2   EQU   DDRWK3 .                 WORK REG                 BBBBBB
DDRBKLNK EQU   8 .                      BACK LINK PTR - PRG SBRTN 19022
DDRTST   EQU   9 .                      RQE PTR - PRG SUBRTN      19022
DDRPGBAS EQU   13 .                     BASE REG FOR PURGE SUBRTN 19022
DDRPGLNK EQU   15 .                     RET REG FOR PURGE SUBRTN  19022
*        WKREG2(11) & LNKRG2(14) USED AS WORK REGS AT DDRPURGE   A42501
         SPACE 1                                                  19022
*        MISCELLANEOUS DEFINITIONS USED IN THIS ROUTINE           19022
DDRFRUCB EQU   0 .                      OFFSET TO 'FROM' UCB PTR  19022
DDRTOUCB EQU   2 .                      OFFSET TO 'TO' UCB PTR    19022
CURRENT  EQU   0 .                      DISPL. OF 0 INTO DDRWORK  19022
LISTNXT  EQU   2 .                      OFFSET OF 2 FOR UCB LKUP  19022
DDRPGEND EQU   14 .                     PRG RET DISPL-QUE COMPL   19022
DDRPRG   EQU   X'80' .                  RQE PURGED FROM WAIT QUE  19022
DDRPASS1 EQU   X'40' .                  PRG FLG- FST PASS THRU Q  19022
UCBUTB   EQU   X'13'                    OFFSET FOR DEVICE TYPE   A45778
D2314A   EQU   X'08'                    2314 DEVICE TYPE         A45778
D30A     EQU   X'09'                    3330 DEVICE TYPE         A45778
UCBSNS5  EQU   26                       OFFSET FOR SNS           A54231
         SPACE 3                                                  19022
*        RE-EXCP APPENDAGE RETURNS                                19022
*                                                                 19022
*    THIS APPENDAGE RETURN BRANCHES TO THE ROUTINE THAT ENQUEUES  19022
*    THE RQE ON THE LCH.  FOR THE RETAIN UCB CONTROL VECTOR, THE  19022
*    UCBERR FLAG IS SET, AND THE RQE ADDRESS IS STORED AT UCBLTS. 19022
         SPACE 1                                                 BBBBBB
DDRSTART DS    0H                                                BBBBBB
         USING *,APBSRG                 ESTABLISH ADDRESSABILITY BBBBBB
         AIF   (&DDR LT 2).DDR4415                                M4415
         SPACE 1                                                  M4415
DDRXCPSR TM    UCBTYP+1(UCBREG),UCBRPS  TEST IF RPS DEVICE        M4415
         BC    1,DDRXCPWC .             YES-NO SA SEEK-BRANCH     M4415
         OI    UCBFL1(UCBREG),UCBASK  . SET SEEK COMPLETE         M4415
.DDR4415 SPACE 1                                                  M4415
DDRXCPWC OI    UCBFL1(UCBREG),UCBERR .  SET ERROR FLAG TO         19022
         STH   TSTREG,UCBLTS(0,UCBREG) .  TIE UCB TO DDR RQE      19022
         BC    15,INT17B                GO TO INIT REQUEST       BBBBBB
         SPACE 1                                                  19022
DDRXCPNC NI    UCBFL1(UCBREG),FF-UCBNRY RESET NOT READY TO INSURE 19022
*                                       DDR RQE GETS THRU. MAY    19022
*                                       RESULT IN MULT INT REQ MSG19022
         BC    15,INT17B                GO TO INIT REQUEST       BBBBBB
         SPACE 3                                                  19022
*        POST DDR APPENDAGE RETURNS                               19022
*                                                                 19022
*    THIS APPENDAGE RETURN LINKS TO THE IOS POST INTERFACE, AND   19022
*    THEN RETURNS TO CHANNEL RESTART.  FOR THE RELINQUISH         19022
*    CONTROL VECTOR, UCBERR IS SET OFF.  FOR RETAINING CONTROL,   19022
*    UCBERR IS SET ON AND THE RQE ADDRESS IS STORED IN UCBLTS.    19022
         SPACE 1                                                  19022
DDRPSTNC NI    UCBFL1(UCBREG),FF-UCBERR REMOVE TIE TO RQE         19022
         BC    15,DDRPST01 .            GO TO POST                19022
         SPACE 1                                                  19022
DDRPSTWC OI    UCBFL1(UCBREG),UCBERR .  TIE UCB TO DDR RQE        19022
         STH   TSTREG,UCBLTS(0,UCBREG) . WITH UCBERR ON          BBBBBB
DDRPST01 BAL   LNKRG2,XCPPST            GO TO POST INTERFACE     BBBBBB
         AIF   (&TBASE EQ 0).DDRBB1                              BBBBBB
DDRPST1A BC    15,SELECTV                                        BBBBBB
         AGO   .DDRBB2                                           BBBBBB
.DDRBB1  ANOP                                                    BBBBBB
DDRPST1A BCR   15,LNKRG1                                         BBBBBB
.DDRBB2  SPACE 3                                                 BBBBBB
*        RETRY USER REQUEST APPENDAGE RETURN                      19022
*                                                                 19022
*    THIS APPENDAGE RETURN IS ENTERED AFTER DDR HAS COMPLETED     19022
*    ALL OF ITS FUNCTIONS.  THE INPUT IS THE USER RQE ADDRESS     19022
*    IN TSTREG.  THE USER RQE IS DEQUEUED FROM THE DDR WAIT       19022
*    QUEUE, AND IS ENQUEUED ON THE APPROPRIATE LCH.  ALL TRACES   19022
*    OF THE PREVIOUS ERROR ARE REMOVED FROM THE IOB, AND THE      19022
*    UCB IS TIED TO THE USER RQE VIA UCBERR AND UCBLTS.  CHANNEL  19022
*    RESTART IS THEN ENTERED.                                     19022
         SPACE 1                                                  19022
DDRRETRY L     LCHREG,ADDRWTQ .         INIT PTR TO QUEUE         19022
         BAL   LNKRG2,XCPDDRDQ          TO DEQ FROM WAIT QUEUE   BBBBBB
DDRRET1  TM    BLNKPTR,LCHOUT           TEST IF RQE WAS FOUND    BBBBBB
         AIF   (&TBASE EQ 0).DDRBB3                              BBBBBB
         BC    8,SELECTV                NO-GO TO CHAN RESTART    BBBBBB
         AGO   .DDRBB4                                           BBBBBB
.DDRBB3  BCR   8,LNKRG1                 NO-GO TO CHAN RESTART    BBBBBB
.DDRBB4  LH    UCBREG,TSTUCB(0,TSTREG)  INIT UCB PTR             BBBBBB
         OI    UCBFL1(UCBREG),UCBERR .  SET ERROR FLAG            19022
         STH   TSTREG,UCBLTS(0,UCBREG) .  TO TIE UCB TO USER RQE  19022
         LM    IOBREG,DEBREG,TSTIOB-1(TSTREG) INIT USER CB REGS   19022
         L     DCBREG,DEBDCB-1(0,DEBREG) INIT DCB PTR             19022
         NI    DCBFL(DCBREG),FF-DCBPER .RESET DCB ERR FLAG        19022
         STH   TSTREG,LTSVALSV          UPDATE CURRENT RQE ADDR US05348
         BC    15,INT17A                GO TO INIT RE-EXCP       BBBBBB
         SPACE 3                                                  19022
*        SWAP UCB INFORMATION APPENDAGE RETURN                    19022
*                                                                 19022
*    THIS APPENDAGE RETURN IS ENTERED AFTER ALL I/O HAS BEEN      19022
*    QUIESCED ON THE 'TO' AND 'FROM' DEVICES.  IT SWAPS ALL       19022
*    DEVICE INFORMATION IN THE UCBS, BUT LEAVES THE VOLUME        19022
*    INFORMATION.  ALL ENTRIES IN THE UCB LOOK UP TABLE FOR       19022
*    THESE UCBS ARE CHANGED.  IF THE UCBS HAVE DIFFERENT          19022
*    LCH QUEUES, ALL RQES FOR THESE UCBS ARE SWAPPED TO THE       19022
*    OTHER LCH QUEUE.  THE UCBNRY FLAG IS SET SO THAT NO I/O      19022
*    IS STARTED UNTIL THE VOLUME SWAP IS COMPLETE.  CHANNEL       19022
*    RESTART IS THEN ENTERED.                                     19022
*    THE INPUT TO THIS ROUTINE IS A POINTER IN REG0 TO A FULL     19022
*    WORD CONSTANT CONTAINING TWO HALF WORD POINTERS TO THE       19022
*    'FROM' AND 'TO' UCBS.                                        19022
         SPACE 1                                                  19022
*    THIS ROUTINE SWAPS THE 'TO' AND 'FROM' UCB POINTERS IN       19022
*    THE UCB LOOK UP TABLE.                                       19022
DDRSWAP  LR    DDRWK2,REG0 .            SAVE PTR TO UCBS          19022
         LH    WKREG2,DDRFRUCB(0,DDRWK2) GET PTR TO 'FROM'        19022
         LH    WKREG1,DDRTOUCB(0,DDRWK2) GET PTR TO 'TO'          19022
         CR    WKREG2,WKREG1 .          TEST IF 'TO' = 'FROM'     19022
         BC    8,DDR007 .               YS, BR PAST INFO SWAP     19022
         L     WKREG3,LISTA .           INIT LOOK UP TBL PTR    SA71362
DDR001   CH    WKREG2,CURRENT(0,WKREG3) TEST FOR 'FROM' UCB       19022
         BC    7,DDR002 .               NO, GO TO TST 'TO'        19022
         STH   WKREG1,CURRENT(0,WKREG3) STORE 'TO' PTR            19022
         BC    15,DDR003 .              BRANCH                    19022
         SPACE 1                                                  19022
DDR002   CH    WKREG1,CURRENT(0,WKREG3) TEST FOR 'TO' UCB         19022
         BC    7,DDR003 .               NO, BRANCH                19022
         STH   WKREG2,CURRENT(0,WKREG3) STORE 'FROM' PTR          19022
DDR003   LA    WKREG3,LISTNXT(0,WKREG3) UPDATE LKUP TBL PTR       19022
         TM    CURRENT+1(WKREG3),DUMADR TEST FOR END OF TBL       19022
         BC    8,DDR001 .               NO, LOOP                  19022
         SPACE 1                                                  19022
*    THIS ROUTINE SWAPS BYTES 1, 4 THRU 6, 8 THRU 15, AND FOR   SA77183
*    MULTI-PROCESSING, -4 THROUGH -1 OF THE UCBS.                 19022
         AIF   (&M65MP EQ 0).DDR01                                19022
         LR    WKREG3,WKREG1 .          GET 2ND PTR TO 'TO' UCB   19022
         LR    DDRWK1,WKREG2 .          GET 2ND PTR TO 'FROM' UCB 19022
         S     WKREG3,NEGEXT .          POINT TO 'TO' PREFIX     BBBBBB
         S     DDRWK1,NEGEXT .          POINT TO 'FROM' PREFIX   BBBBBB
.DDR01   MVC   DDRWORK(20),0(WKREG1)    SAVE 'TO' BYTES          A45578
         AIF   (&M65MP EQ 0).DDR02                                19022
         MVC   DDRMPWK(4),0(WKREG3) .   SAVE 'TO' BYTES -4 - -1   19022
.DDR02   MVC   1(1,WKREG1),1(WKREG2)    SWAP 'FROM' BYTES       SA70265
         MVC   UCBCHA(5,WKREG1),UCBCHA(WKREG2) SWAP 'FROM' BYTES A45578
         MVC   UCBLCI(1,WKREG1),UCBLCI(WKREG2) SWAP 'FROM' BYTE SA77183
         MVN   UCBCHM(1,WKREG1),UCBCHM(WKREG2) SWAP 'FROM' BYTES  19022
         MVC   UCBNAM(7,WKREG1),UCBNAM(WKREG2) SWAP 'FROM' BYTES  19022
         AIF   (&M65MP EQ 0).DDR03                                19022
         MVC   0(4,WKREG3),0(DDRWK1) .  SWAP 'FROM' PREFIX        19022
.DDR03   OI    UCBFL1(WKREG1),UCBNRY .  SET 'TO' NOT READY        19022
         NI    SRTESTAT(WKREG1),FF-UCBCHGS  TURN OFF IN 'TO'    SA67706
         TM    SRTESTAT(WKREG2),UCBCHGS     ON IN 'FROM'        SA67706
         BC    8,DDR03SW                                        SA67706
         OI    SRTESTAT(WKREG1),UCBCHGS     TURN ON IN 'TO'     SA67706
DDR03SW  EQU   *                                                SA67706
         NI    UCBFL1(WKREG1),FF-UCBERR REMOVE TIE TO RQE         19022
         MVC   1(1,WKREG2),DDRWORK+1        SWAP 'TO' BYTE      SA70265
         MVC   UCBCHA(5,WKREG2),DDRWORK+4 SWAP 'TO' BYTES        A45578
         MVC   UCBLCI(1,WKREG2),DDRWORK+10 SWAP 'TO' BYTE       SA77183
         MVN   UCBCHM(1,WKREG2),DDRWORK+12  SWAP 'TO' BYTES      A45578
         MVC   UCBNAM(7,WKREG2),DDRWORK+13  SWAP 'TO' BYTES      A45578
         AIF   (&M65MP EQ 0).DDR04 .                              19022
         MVC   0(4,DDRWK1),DDRMPWK .    SWAP 'TO' PREFIX          19022
.DDR04   OI    UCBFL1(WKREG2),UCBNRY .  SET 'FROM' NOT READY      19022
         NI    SRTESTAT(WKREG2),FF-UCBCHGS  TURN OFF IN 'FROM'  SA67706
         TM    DDRWORK+3,UCBCHGS            ON IN 'TO'          SA67706
         BC    8,DDR03SW1                                       SA67706
         OI    SRTESTAT(WKREG2),UCBCHGS     TURN ON IN 'FROM'   SA67706
DDR03SW1 EQU   *                                                SA67706
         NI    UCBFL1(WKREG2),FF-UCBERR REMOVE TIE TO RQE         19022
         CLI   UCBTYP+2(WKREG1),DSKTYP  IS DEVICE DISK           A50243
         BNE   DDR03D                   NO, DON'T CHECK 3330     A50243
         CLI   UCBUTB(WKREG1),D30A      IS DEVICE 3330           A45778
         BE    DDR03X                   YES NO STAT SWAP         A45778
DDR03D   STM   WKREG1,LNKRG2,DDREGSAV   SAVE REGISTERS          SA57909
         BAL   LNKRG2,DDRSTAT           GO GET STAT ADDRESS     SA57909
         ST    WKREG3,DDRWORK           SAVE STAT ADDRESS       SA57909
         LH    WKREG1,DDRFRUCB(DDRWK2)  GET 'FROM' UCB ADDRESS  SA57909
         BAL   LNKRG2,DDRSTAT           GO GET STAT ADDRESS     SA57909
         L     LCHREG,DDRWORK           GET SAVED STAT ADDRESS  SA57909
         AIF   (&ASPN EQ 0).NODDR34     ANY 3400S IN THE SYSTEM SA57909
         LM    WKREG1,WKREG2,DDREGSAV   GET TO AND FROM UCBS    SA57909
         CLC   UCBTYP+2(2,WKREG2),DDR34XX  SWAPPING 3400        SA57909
         BNE   DDRNOT34               NO, DON'T SWAP EXTRA INFO SA57909
         L     LNKRG2,UCBNBRSN(WKREG1)  SWAP SENSE DATA ADDR    SA57909
         MVC   UCBNBRSN(4,WKREG1),UCBNBRSN(WKREG2)  AND LENGTH  SA57909
         ST    LNKRG2,UCBNBRSN(WKREG2)                          SA57909
         L     LNKRG2,UCBVOPT(WKREG1)   SWAP WORK AREA          SA57909
         MVC   UCBVOPT(4,WKREG1),UCBVOPT(WKREG2)  ADDRESSES     SA57909
         ST    LNKRG2,UCBVOPT(WKREG2)                           SA57909
         MVC   DDRWORK(10),10(LCHREG)   SWAP SECOND TEN BYTES   SA57909
         MVC   10(10,LCHREG),10(WKREG3)   OF THE STAT INFO      SA57909
         MVC   10(10,WKREG3),DDRWORK      FOR 3400 TAPES        SA57909
.NODDR34 ANOP                                                   SA57909
DDRNOT34 MVC   DDRWORK(10),0(LCHREG)    SWAP TEN BYTES OF       SA57909
         MVC   0(10,LCHREG),0(WKREG3)     THE STAT INFO         SA57909
         MVC   0(10,WKREG3),DDRWORK                             SA57909
         LM    WKREG1,LNKRG2,DDREGSAV   RESTORES REGISTERS      SA57909
DDR03X   EQU   *                                                 A45778
         AIF   (NOT &D2321).DDR16                                 20201
         CLC   UCBTYP+2(2,WKREG2),DDRDCEL TEST FOR 2321           19022
         BC    7,DDRSWLCH .             NO-BYPASS                 19022
         XC    DCELBBNR(160,WKREG1),DCELBBNR(WKREG2) SWAP SUB-UCB 19022
         XC    DCELBBNR(160,WKREG2),DCELBBNR(WKREG1) INIT 'FROM'  19022
         XC    DCELBBNR(160,WKREG1),DCELBBNR(WKREG2) INIT 'TO'    19022
.DDR16   SPACE 1                                                  19022
*    THIS ROUTINE SWAPS ALL REQUESTS FOR THE 'FROM' UCB FROM      19022
*    THE 'FROM' LCH QUEUE TO THE 'TO' LCH QUEUE AND VICE-VERSA.   19022
DDRSWLCH CLC   UCBLCI(1,WKREG1),UCBLCI(WKREG2) IS LCH SWAP NEEDED 19022
         AIF   (&TBASE EQ 0).DDRBB5                              BBBBBB
         BC    8,SELECTV                                         BBBBBB
         AGO   .DDRBB6                                           BBBBBB
.DDRBB5  BCR   8,LNKRG1                                          BBBBBB
.DDRBB6  LR    UCBREG,WKREG1            INIT TO 'TO' UCB         BBBBBB
         ST    DDRWK2,DDREGSAV          SAVE PARM REGISTER       A50243
         BAL   LNKRG3,XCP064            GET 'FRM' LCH VIA 'TO' UCB
DDRRET2  LH    UCBREG,DDRFRUCB(0,DDRWK2)   INIT 'FROM' UCB       BBBBBB
         BAL   DDRLNK1,DDR004 .         GO TO SWAP 'FRM' REQUESTS 19022
*                                         TO 'TO' LCH             19022
         L     DDRWK2,DDREGSAV          RESTORE PARM REG         A50243
         BAL   LNKRG3,XCP064            GET 'TO' LCH VIA 'FRM' UCB
DDRRET3  LH    UCBREG,DDRTOUCB(0,DDRWK2)   INIT 'TO' UCB PT*     BBBBBB
         BAL   DDRLNK1,DDR004 .         GO TO SWAP 'TO' REQUESTS  19022
*                                         TO 'FROM' LCH           19022
         AIF   (&TBASE EQ 0).DDRBB7                              BBBBBB
         BC    15,SELECTV               GO TO CHAN SEARCH        BBBBBB
         AGO   .DDRBB8                                           BBBBBB
.DDRBB7  BCR   15,LNKRG1                GO TO CHAN SEARCH        BBBBBB
.DDRBB8  SPACE 1                                                 BBBBBB
*        THIS ROUTINE LOOKS UP THE STATISTICS TABLE ENTRY AND PASSES
*        THE ADDRESS OF IT BACK IN WKREG3
*        IT USES WKREG1,WKREG3,WKREG2,LCHREG,AND LNKRG2          A45778
DDRSTAT  EQU   *                        ENTRY FOR STAT LOOK UP   A45778
         L     WKREG2,DDRSTBL           GET STAT TABEL ADDRESS    M1046
         SR    WKREG3,WKREG3            CLEAR WORK REG           A45778
         IC    WKREG3,DDRTST(WKREG1)    GET STAT INDEX           A45778
DDR03A   CH    WKREG1,0(WKREG2)         IS UCB IN THIS SEG       A45778
         BL    DDR03B                   YES CONTINUE             A45778
         LA    WKREG2,2(WKREG2)         NO INC INDEX             A45778
         LA    WKREG3,256(WKREG3)       NO INC INDEX             A45778
         B     DDR03A                   CHECK NEXT SEG           A45778
DDR03B   CLI   UCBUTB(WKREG1),D2314A    IS DEVICE 2314           A45778
         BNE   DDR03C                   NO CONTINUE              A45778
         SR    LCHREG,LCHREG             YES CLEAR WORK REG      A45778
         TM    UCBSNS5(WKREG1),X'0F'    IS MODULE ASSIGNED       A45778
         BO    DDR03C                   NO USE ZERO              A45778
         IC    LCHREG,UCBSNS5(WKREG1)   GET MODULE ID            A45778
         N     LCHREG,DDRAND            CLEAR HIGH 2 BITS        A54231
         AR    WKREG3,LCHREG            ADD TO INDEX
DDR03C   MH    WKREG3,DDRH10            MULT BY 10               A45778
         AR    WKREG3,WKREG2            ADD TO BEG OF STAT TAB   A45778
         BR    LNKRG2                   RETURN                   A45778
DDR004   LR    TSTREG,LCHREG .          INIT RQE PTR FOR LOOP     19022
DDR005   TM    TSTLNK+1(TSTREG),DUMADR .TEST FOR END OF QUEUE     19022
         BCR   1,DDRLNK1 .              YES,RETURN                19022
         LH    TSTREG,TSTLNK(0,TSTREG) .GET NEXT RQE              19022
         CH    UCBREG,TSTUCB(0,TSTREG) .TEST FOR UCB TO BE DEQ'D  19022
         BC    7,DDR005 .               NO, LOOP                  19022
         BAL   LNKRG2,XCPDDRDQ          GO TO DEQUEUE            A49183
DDRRET4  ST    LCHREG,DDRWORK           SAVE LCHREG OVER ENQ
         LM    IOBREG,DEBREG,TSTIOB-1(TSTREG) INIT REGS FOR ENQ   19022
         L     APBSRG,PNQAD             ADDR OF ENQUEUE RTN     SM00244
         BALR  LNKRG2,APBSRG            GO TO ENQ ON NEW LCH    SM00244
         USING *,LNKRG2                 ESTABLISH TEMP BASE REG  BBBBBB
DDRRET4A L     APBSRG,DDRBASE           ADDR OF DDRSTART         BBBBBB
         DROP  LNKRG2                   DROP TEMP BASE REG       BBBBBB
         USING DDRSTART,APBSRG          ESTABLISH ADDRESSABILITY BBBBBB
         L     LCHREG,DDRWORK           RESTORE LCHREG
         BC    15,DDR004 .              SEARCH LCH AGAIN          19022
         SPACE 1                                                  19022
*    THIS CODE IS ENTERED WHEN BOTH UCB ADDRESSES ARE THE SAME;   19022
*    I.E. - NO SWAP.                                              19022
DDR007   OI    UCBFL1(UCBREG),UCBNRY .  SET DEVICE NOT READY      19022
         NI    UCBFL1(UCBREG),FF-UCBERR REMOVE TIE TO RQE         19022
         AIF   (&TBASE EQ 0).DDRBB9                              BBBBBB
         BC    15,SELECTV                                        BBBBBB
         AGO   .DDRBB10                                          BBBBBB
.DDRBB9  BCR   15,LNKRG1                                         BBBBBB
.DDRBB10 SPACE 3                                                 BBBBBB
*        CANCEL DDR REQUEST APPENDAGE RETURN                      19022
*                                                                 19022
*    THIS APPENDAGE RETURN IS ENTERED WHEN THE OPERATOR HAS       19022
*    REPLIED THAT HE DOES NOT WANT THE SWAP TO OCCUR.  THE USER   19022
*    RQE MUST BE DEQUEUED FROM THE WAIT QUEUE, AND THE UCBERR     19022
*    FLAG MUST BE TURNED OFF.  INPUT IS THE USER RQE IN TSTREG.   19022
DDRCANCL L     LCHREG,ADDRWTQ .         GET PTR TO QUEUE          19022
         BAL   LNKRG2,XCPDDRDQ          GO TO DEQ FROM WAIT QUE  BBBBBB
DDRRET5  TM    BLNKPTR,LCHOUT           TEST IF RQE FOUND        BBBBBB
         AIF   (&TBASE EQ 0).DDRBB11                             BBBBBB
         BC    8,SELECTV                NO-GO TO CHAN SEARCH     BBBBBB
         AGO   .DDRBB12                                          BBBBBB
.DDRBB11 BCR   8,LNKRG1                 NO-GO TO CHAN SEARCH     BBBBBB
.DDRBB12 LH    UCBREG,TSTUCB(0,TSTREG)  GET UCB PTR              BBBBBB
         NI    UCBFL1(UCBREG),FF-UCBERR RESET UCB ERR FLAG        19022
         STH   TSTREG,LTSVALSV          UPDATE CURRENT RQE ADDR US05348
         OI    XCPBTE,XCPVALID          IND VALIDITY CK IN PROC US05348
         BC    15,INTER6                GO TO POST USER          BBBBBB
         SPACE 3                                                  19022
         AIF   (&DDR LT 2).DDR14                                  19022
*        CANCEL DDR SYSRES REQUEST                                19022
*                                                                 19022
*    THIS APPENDAGE IS ENTERED WHEN THE OPERATOR HAS REQUESTED A  19022
*    SYSRES SWAP, BUT PRIOR TO DDR GAINING CONTROL OF SYSRES, THE 19022
*    SYSTEM REQUESTS A SYSRES SWAP.  THE SYSRES DDR RQE MUST BE   19022
*    DEQUEUED FROM THE LCH QUEUE.                                 19022
DDRSRCAN BAL   LNKRG2,XCPPDQ            GO TO DEQ DDR RQE        BBBBBB
         AIF   (&TBASE EQ 0).DDRBB13                             BBBBBB
DDRRET6  BC    15,SELECTV                                        BBBBBB
         AGO   .DDRBB14                                          BBBBBB
.DDRBB13 ANOP                                                    BBBBBB
DDRRET6  BCR   15,LNKRG1                                         BBBBBB
.DDRBB14 SPACE 3                                                 BBBBBB
.DDR14   DROP  APBSRG                                            BBBBBB
*        CONSTANTS AND WORK AREAS                                 19022
         SPACE 1                                                  19022
         AIF   (&M65MP EQ 0).DDR08                                19022
DDRMPWK  DC    F'0' .                   ADDITIONAL WK AREA FOR MP 19022
.DDR08   ANOP                                                     19022
DDRWORK  DC    5F'0' .                  WORK AREA FOR DDR RTNS    19022
DDREGSAV DC    5F'0'                    REGISTER SAVE AREA       A45778
DDRAND   DC    X'0000000F'              AND MASK FOR 2314 ID     A54231
DDRSTBL  DC    A(IECSTB)                                         A45578
DDRH10   DC    H'10'                    TEN FOR MULT             A45778
         AIF   (NOT &D2321).DDR09                                 20201
DDRDCEL  DC    X'2005' .                DEVICE TYPE FOR 2321      19022
.DDR09   AIF   (&ASPN EQ 0).DDR0934                             SA57909
DDR34XX  DC    X'8003'                  DEVICE TYPE FOR 3400    SA57909
.DDR0934 ANOP                                                   SA57909
DDRSRTO  DC    H'0' .                   SAVE AREA FOR SYSRES 'TO' 19022
         SPACE 3                                                  19022
.DDR06   AIF   (&TCBTYP NE 1).DDR0MFT                           SA41451
    TITLE 'MFT AQE AND SIRB PURGE ROUTINE - INPUT/OUTPUT SUPERVISOR'
         AIF   (&DDR NE 0).DDRBASF                              SA41451
DDRPGBAS EQU   13 .                                             SA41451
.DDRBASF USING *,DDRPGBAS .                                       19022
         AIF   (&TBASE EQ 0).NODRP01                            SA69223
         DROP  BASREG2                                          SA69223
.NODRP01 ANOP                                                   SA69223
         SPACE 1                                                  19022
**************************************************
WTQPRG   EQU   * .                                              SA41451
**************************************************
* EQUATES BROUGHT OVER FROM PURGE(SVC 16)                       SA41451
INPREG   EQU   1 .                      PURGE PARM LIST         SA41451
PWKRG2   EQU   2 .                      WKREG2 IN PURGE(2)      SA41451
CVTREG   EQU   3 .                      CVT ADDR                SA41451
IRBREG   EQU   5 .                      RB ADDR                 SA41451
AEQREG   EQU   5 .                      HOLD ERR LCH ADDR       SA41451
PWKRG1   EQU   8 .                      WKREG1 IN PURGE(8)      SA41451
RQEREG   EQU   9 .                      RQE/BACK-PNTR           SA41451
CVTIXA   EQU   124 .                    NEXT AVAIL ADDR         SA41451
CVTIER   EQU   144 .                    DISPL TO ADDR ERR LCH   SA41451
RQELNK   EQU   0 .                      RQE LINK FIELD          SA41451
SPOPSW   EQU   X'04' .                  SPECIAL OPTION          SA41451
THREE    EQU   3 .                      INCR AND DISPL          SA41451
RBTAB    EQU   10 .                     RB FLAGS                SA41451
RBRQE    EQU   24 .                     RQ RQE ADDR             SA41451
RBACTV   EQU   X'40' .                  RB ACTIVE FLAG          SA41451
PRGOPT   EQU   0 .                      OFFSET--OPTION BYTE/PPL SA41451
**************************************************
*
         ST    APBSRG,HDRTN16 .         SAVE ADDR--RETURN/PURGE SA41451
         ST    PWKRG2,HDPGCKA .         SAVE ADDR OF PURGCHK    SA41451
*                                                               SA41451
**************************************************
         AIF   (&DDR EQ 0).DDRMFTA                              SA45451
*
* THIS ROUTINE USES EXISTING DDR STRUCTURE                      SA41451
DDRFST   EQU   4 .                      DDR PURGE 1ST NTRY DISP SA41451
*                                                               SA41451
         LA    PWKRG2,DDRFST .          1ST ENTRY DISPL.        SA41451
WTQPRGA  EQU   *  .                                             SA41451
         LA    LNKRG2,DDRPURGE .        BEG. WAITQ PURG RTNE    SA41451
* INITIALIZE REGS FOR FIRST ENTRY                               SA41451
* PWKRG2 CLEARED FOR 2ND AND ON ENTRY TO WAIT Q PURGE RTNE      SA41451
* FIRST ENTRY WAS +4                                            SA41451
         BAL   APBSRG,ZERO(LNKRG2,PWKRG2) . ENTER WAITQ PURG    SA41451
* RETURN HERE IF RQE ON DDR WAIT Q                              SA41451
         LR    PWKRG2,APBSRG .          INDICATE DDR WAIT Q PURGSA41451
         L     APBSRG,HDPGCKA .         GET ADDR OF PURGCHK     SA41451
         BALR  LNKRG2,APBSRG .          GO TO PURGCHK           SA41451
         SR    PWKRG2,PWKRG2 .          CLEAR FOR 2ND/ON ENTRY  SA41451
         B     WTQPRGA .                GO GET NEXT RQE--WAITQ  SA41451
.DDRMFTA ANOP                                                   SA45451
*                                                               SA45451
* RETURN HERE IF NO RQE'S ON WAIT Q OR ALL PURGED               SA41451
*              **  ASYNCHRONOUS EXIT QUEUE PURGE  **            SA41451
AEQPURG  L     AEQREG,CVTIER(CVTREG) .  GET ERR LCH ADDR        SA41451
         LR    PWKRG1,AEQREG .          GET BACK-PNTR           SA41451
         B     AEQ004 .                 GO TEST FOR EMPTY Q     SA41451
AEQ002   LR    RQEREG,PWKRG1 .          SAVE BACK-PNTR          SA41451
         LH    RQEREG,RQELNK(RQEREG) .  GET RQE                 SA41451
         TM    PRGOPT(INPREG),SPOPSW .  TEST FOR 'SPEC' OPTION  SA41451
         BZ    AEQ003 .                 PURGE ALL               SA41451
         TM    THREE(RQEREG),X'01' .    TEST FOR REQ FOR 'ERP'  SA41451
         BZ    AEQ003A .                NO,GET NEXT REQ         SA41451
AEQ003   L     APBSRG,HDPGCKA .         GET ADDR OF PURGCHK     SA41451
         XR    PWKRG2,PWKRG2 .          IND. NOT DDR PURG       SA70247
         BALR  LNKRG2,APBSRG .          GO TO PURGCHK           SA41451
         CH    RQEREG,ZERO(PWKRG1) .    WAS RQE DEQUEUED        SA41451
         BNE   AEQ004 .                 YES,CHECK FOR END OF Q  SA41451
AEQ003A  LH    PWKRG1,ZERO(PWKRG1) .    ADVANCE BACK-PNTR       SA41451
AEQ004   CH    AEQREG,ZERO(PWKRG1) .    END OF AEQ              SA41451
         BNE   AEQ002 .                 NO,GET NEXT RQE         SA41451
         STH   PWKRG1,TWO(AEQREG) .     UPDATE 'LAST' PNTR.     SA41451
*                                                               SA41451
         AIF   (&MFTATT NE 1).RETTO16 .  SIRB PURGE BY USER TCB SA41451
*              **  PURGE SIRB IN MFT WITH SUBTASKING  **        SA41451
SIRBTST  EQU   * .                      GET SIRB UNDER SYS ERR  SA41451
         L     IRBREG,PASIRB .          GET ADDR OF SIRB        SA41451
         TM    RBTAB+1(IRBREG),RBACTV . SIRB ACTIVE             SA41451
         BZ    RET216 .                 RETURN TO SVC 16        SA41451
         LH    RQEREG,RBRQE+2(IRBREG) . YES,GET RQE             SA41451
* PURGE ENTERED BEFORE                                          SA41451
         LTR   RQEREG,RQEREG .          RQE ADDR CLEARED        SA41451
         BZ    RET216 .                 SIRB ALREADY HANDLED    SA41451
* RETURN TO PURGE TO CLEAN UP SIRB                              SA41451
         LR    PWKRG2,RQEREG .          ASSURE IND. OF SIRB WORKSA41451
FRET216  L     APBSRG,HDRTN16 .         ADDR OF RETURN/PURGE    SA41451
         BR    APBSRG .                 BACK TO PURGE           SA41451
RET216   XR    PWKRG2,PWKRG2 .          INDICATE NO SIRB WORK   SA41451
         B     FRET216 .                                        SA41451
* RETURN TO PURGE---NO SEPARATE SIRB CLEAN UP REQUIRED          SA41451
.RETTO16 ANOP                                                   SA41451
         XR    PWKRG2,PWKRG2 .          INDICATE NO SIRB WORK   SA41451
         L     APBSRG,HDRTN16 .         ADDR OF RETURN/PURGE    SA41451
         BR    APBSRG .                 RETURN TO PURGE         SA41451
*                                                               SA41451
PASIRB   DC    V(SIRB) .                BRING SIRB ADDR IN CODE SA41451
HDPGCKA  DC    X'F0F0F0F0' .            HOLD ADDR OF PURGCHK    SA41451
HDRTN16  DC    X'F0F0F0F0' .            HOLD ADDR--RETURN/PURGE SA41451
         AIF   (&DDR NE 0).DDRMFT1                              SA41451
         DROP  DDRPGBAS                                         SA41451
.DDRMFT1 ANOP                                                   SA41451
**************************************************              SA41451
.DDR0MFT  AIF  (&DDR EQ 0).DDRA2H                               SA41451
    TITLE  'DDR WAIT QUEUE PURGE ROUTINE - INPUT/OUTPUT SUPERVISOR'
*    THE DDR WAIT QUEUE IS SUPPORTED BY THE IOS ENQUEUE AND     SA41451
*    DEQUEUE ROUTINES.  THUS, IT HAS A SIMILAR FORMAT TO A LCH  SA41451
*    QUEUE.                                                     SA41451
         SPACE 2                                                SA41451
         AIF   (&TCBTYP EQ 1).DDRMFT2                           SA41451
         USING *,DDRPGBAS                                       SA41451
         AIF   (&TBASE EQ 0).DDRMFT2                            SA69223
         DROP  BASREG2                                          SA69223
.DDRMFT2 ANOP                                                   SA41451
DDRWAITQ DC    X'FFFF' .                FIRST ON THE QUEUE        19022
         DC    XL6'0' .                 LAST ON QUE,FLAGS,SCRATCH 19022
         SPACE 1                                                  19022
*    THIS ROUTINE MUST RESIDE AT DDRWAITQ+8.  IT IS CALLED        19022
*    AS A SUBROUTINE BY SVC PURGE TO PASS AN RQE POINTER FOR      19022
*    PURGE TO EXAMINE AND POSSIBLY DEQUEUE.                       19022
         SPACE 1                                                  19022
         AIF   (&TCBTYP NE 1).DDRPRG6                           SA62503
DDRPURGE BC    0,DDRPRG05 .             ENTRY PT AFTER FST PASS SA62503
         BALR  DDRPGBAS,0 .             JUSTIFY BASE FOR ABEND  SA41451
         USING *,DDRPGBAS .             ESTABLISH NEW BASE      SA62503
DDRPRGXX SH    DDRPGBAS,WTQPRGBS .      SET BASE TO WTQPRG      SA62503
         USING WTQPRG,DDRPGBAS .        ESTABLISH NEW BASE      SA62503
         LTR   PWKRG2,PWKRG2            IS THIS SECOND ENTRY    SA62503
         BC    8,DDRPRG05               YES                     SA62503
         AGO   .DDRPRG7                                         SA62503
.DDRPRG6 ANOP                                                   SA62503
DDRPURGE BC    15,DDRPRG05 .            ENTRY PT AFTER FST PASS SA62503
.DDRPRG7 ANOP                                                   SA62503
DDRPRG01 LA    DDRBKLNK,DDRWAITQ .      INIT PTR TO QUEUE         19022
         OI    DDRWAITQ+4,DDRPASS1 .    SET FLAG FOR POSSIBLE DEQ 19022
*                                       OF ACTIVE RQE IN PASS 1   19022
         BC    15,DDRPRG04 .            SKIP PASS 2 INIT'ZATION   19022
         SPACE 1                                                  19022
DDRPRG02 LH    DDRBKLNK,TSTLNK(0,DDRBKLNK) RE-INIT BACK-LNK PTR   19022
DDRPRG03 NI    DDRWAITQ+4,FF-DDRPASS1 . RESET PASS 1 INDIC        19022
DDRPRG04 LH    DDRTST,TSTLNK(0,DDRBKLNK) GET NEXT RQE ON QUE      19022
         LTR   DDRTST,DDRTST .          TEST FOR END OF QUE       19022
         BC    4,DDRPRG06 .             YES, GO TO FINAL EXIT     19022
         BCR   15,DDRPGLNK .            RET TO PRG W. RQE IN RG9  19022
         SPACE 1                                                  19022
DDRPRG05 CH    DDRTST,TSTLNK(0,DDRBKLNK) TEST IF RQE DEQUED       19022
         BC    8,DDRPRG02 .             NO, GO TO UPDATE BKLNK    19022
         LH    WKREG2,TSTUCB(DDRTST) . GET UCB ADDR---WAITQ RQE  A42501
         LH    LNKRG2,UCBLTS(WKREG2) . GET RQE FROM UCB          A42501
         CH    LNKRG2,TSDDRA .         LTS = DDRRQE              A42501
         BE    DDRPRGA2 .                                        A42501
         AIF   (&DDR LT 2).DDRA1H .                              A42501
         CH    LNKRG2,TSSDDRA .        LTS = SYS RES DDRRQE      A42501
         BE    DDRPRGA2 .                                        A42501
.DDRA1H ANOP                                                     A42501
DDRPRGA1 EQU   * .                     CHECK Q STATUS AT DEQ     A42501
         TM    DDRWAITQ+4,DDRPASS1 .    TEST IF DEQ DURING PASS 1 19022
         BC    8,DDRPRG04 .             NO, GO TO GET NEXT RQE    19022
         OI    DDRWAITQ+4,DDRPRG .      INDICATE 1ST RQE PURGED   19022
         BC    15,DDRPRG03 .            GO TO GET NEXT RQE        19022
         SPACE 1                                                  19022
DDRPRG06 STH   DDRBKLNK,DDRWAITQ+LCHLTS UPDATE LAST RQE ON WT QUE 19022
         BC    15,DDRPGEND(0,DDRPGLNK)  RETURN TO PURGE - NO RQE  19022
DDRPRGA2 EQU   * .                     TURN OFF DDR'S NRY & ERR  A42501
         NI    UCBFL1(WKREG2),FF-UCBNRY-UCBERR .                SA55688
         B     DDRPRGA1 .                                        A42501
         AIF   (&TCBTYP NE 1).DDRPRG8   MFT SYSTEM              SA62503
WTQPRGBS DC    AL2(DDRPRGXX-WTQPRG)     BASE ADJUSTMENT         SA62503
.DDRPRG8 ANOP                                                   SA62503
TSDDRA   DC    Y(DDRRQE-IPLPSW) .      BRING ADDR INTO BASE      A42501
         AIF   (&DDR LT 2).DDRA2J .                              A42501
TSSDDRA  DC    Y(DDRRQESR-IPLPSW) .    SYS RES DDRRQE            A42501
.DDRA2J  DROP  DDRPGBAS .                                         19022
.DDRA2H  ANOP
         TITLE 'EXCP ERROR INTERFACE - INPUT/OUTPUT SUPERVISOR'
*                  EXCP ERROR INTERFACE -  SVC 15
        SPACE 2
*              THIS IS THE ENTRY TO THE ERROR INTERFACE FROM THE
*              SUPERVISOR, WHEN THE SUPERVISOR IS HANDLING THE ERROR
*              ROUTINE. THE FOLLOWING IS THE GENERAL FLOW
         SPACE 2
*OPERATION
*              1. SET UP FLAGS AND INITIALIZE REGS. GET UNIT ADDRESS  *
*                 AND SET UP RETURN ADDRESS.                          *
*              2. TEST FOR ERROR RTN IN CONTROL.  IF YES, ENQ RQE.    *
*                 IF NOT AND NOT A PERMANENT ERROR, GO TO             *
*                 CHANNEL END APPDG.  IF PURGE, GO TO ERROR INTERFACE.*
*                 OTHERWISE, GO TO ABNORMAL CHANNEL END APPDG.        *
*        ***NOTE***  WKREG1 IS USED AS A TEMPORARY LOCAL BASE REGISTER*
         SPACE 3
IECXCPER DS    0D                       ERROR EXCP ENTRY POINT
IGC015   DS    0C
         BALR  WKREG1,0                 ESTABLISH LOCAL BASE   @SA76327
         USING *,WKREG1                                        @SA76327
         AIF   (&TBASE EQ 0).TBS305     TEST NEED TWO BASE REGS@SA76327
         AIF   (&TCBTYP EQ 1 OR &DDR NE 0).ERXCP01              US06042
         DROP  BASREG2                                           BBBBBB
.ERXCP01 ANOP                                                   US06042
IGC015A  L     BASREG,IOSBASAD          ESTABLISH IOS BASE REG. US06042
         USING IOSBAS,BASREG                                     BBBBBB
         LA    BASREG2,4094(BASREG)     SET UP HIGH BASE REG       RL19
         USING IOSBAS+4094,BASREG2                               BBBBBB
         AGO   .TBS306                                             TBSE
.TBS305  LA    BASREG,2048              INITIALIZE BASE REG
         AR    BASREG,BASREG            SET BASE EQUAL TO 4096
.TBS306  MVI   XCPBTE,XCPCNT+XCPERR+XCPVALID SET ENTRY FLAGS    US06042
         L     APBSRG,IECPL2            GET TEMP BASE REG      @SA77644
         CH    TSTREG,FSTRQE            COMPARE WITH FIRST RQE  SA63707
         BL    XERX09-IECCPL02(APBSRG)  INVALID RQE,ABEND      @SA77644
         CH    TSTREG,LSTRQE            COMPARE WITH LAST RQE   SA63707
         BH    XERX09-IECCPL02(APBSRG)  INVALID RQE, ABEND     @SA77644
         STH   TSTREG,LTSVALSV          VALID RQE              @SA77644
         L     APBSRG,SIRBAD            GET ADDRE OF SIRB       SA53191
         SR    ICREG,ICREG              CLEAR REGISTER          SA53191
         CH    TSTREG,SIRBRQE(APBSRG)   IS THIS RQE ON THE SIRB SA53191
         BNE   INTER6                   NO, DON'T CLEAR SIRB RQESA53191
         STH   ICREG,SIRBRQE(APBSRG)    INDICATE RQE RETURNED   SA53191
INTER6   L     IOBREG,TSTIOB-1(TSTREG)  INITIALIZE IOB REGISTER SA53191
         BAL   LNKRG3,XVCK01            INITIALIZE ALL OTHER REGISTERS
         DROP  WKREG1                                          @SA76327
         NI    XCPBTE,FF-XCPVALID       ALL BLOCKS ARE VALID      M4757
         LH    UAREG,UCBCHA(UCBREG)     GET UNIT ADDRESS          M4757
         N     UAREG,ADDRMSK            MASK OUT HIGH ORDER FLAGS
         STH   UAREG,IOPSWO+2           SET CHANNEL ADDR. FOR SEARCH
         TM    IOBFL1(IOBREG),IOBERR    TEST FOR ERROR RTN IN CONTROL
         BC    7,INTER7C                YES, ENQUE REQUEST         RL19
         IECLNK1 ,LA,LNKRG1,INT027,,,,&TBASE                       TBSE
         AIF   (&DDR EQ 0).DDRX1                                  M0127
         C     TSTREG,ADDRRQE           IS THIS THE DDR RQE       M0127
         BC    8,INTER8                 YES DONT CLEAR UCBERR     M0127
.DDRX1   LH    APBSRG,TSTUCB(TSTREG)    INSURE PROPER UCB ADDR    M2189
         CH    TSTREG,UCBLTS(APBSRG)    IS RQE TIED TO UCB      SA61247
         BNE   INTER8                   NO, DON'T CLEAR UCBERR  SA61247
         NI    UCBFL1(APBSRG),FF-UCBERR CLEAR UCB ERROR FLAG      M2189
         B     INTER8                   CONTINUE                US06042
         AIF   (&APR EQ 0).APR058                                 19022
    TITLE 'ALTERNATE PATH RETRY ROUTINE -INPUT/OUTPUT SUPERVISOR'
*                CHANNEL ERROR BLOCK DEACTIVATE ROUTINE           19022
*                                                                     *
*  FUNCTION    TO DEACTIVATE ANY ACTIVE CHAN ERROR BLOCKS WHICH   19022
*                   POINT TO INACTIVE RQES AND SET THE CEB ACTIVE 19022
*                   SWITCH OFF WHEN THERE ARE NO LONGER ANY ACTIVE19022
*                   CEBS.  IT IS ENTERED ONLY WHEN THERE IS AT    19022
*                   LEAST ONE ACTIVE CHANNEL ERROR BLOCK          19022
*                                                                     *
*  ENTRY PT INTDEACT--ENTERED FROM IOS' 'GET RQE ROUTINE' WHEN    19022
*                   THE CEB ACTIVE SW. IS SET (1 OR MORE ACTIVE   19022
*                   CEBS).                                        19022
*                                                                     *
*  EXIT        TO XCPTST1 (GET RQE ROUTINE) WHEN ITS FUNCTION HAS 19022
*                   BEEN COMPLETED.                               19022
*                                                                     *
*  OPERATION   THE CEB ACTIVE SWITCH IS SET OFF. WHEN ACTIVE CEB  19022
*                   FOUND, THIS ROUTINE CHECKS FOR AN ACTIVE RQE. 19022
*                   IF RQE IS INACTIVE, CEB IS DEACTIVATED. CEB   19022
*                   ACTIVE SW IS SET ON WHENEVER ACTIVE CEB FOUND 19022
*                   FOR WHICH THERE IS AN ACTIVE RQE              19022
*                                                                     *
         SPACE 1
         USING *,APBSRG                 ESTABLISH ADDRESSABILITY BBBBBB
INTDEACT LA    WKREG1,CEBCTR            ADDR OF CEBTAB           BBBBBB
         IC    ICREG,0(WKREG1)          INITIALIZE CEB CTR       BBBBBB
         LA    WKREG1,CEBTAB            INITIALIZE CEB PTR       BBBBBB
         NI    CEBTAB,FF-CEBACT         SET CEB ACT SW OFF        19022
INTDA1   TM    CEBINA(WKREG1),FREE      CEB FREE                  19022
         BC    1,INTDA4                 YES-LOOK AT NEXT CEB      19022
         LH    WKREG2,CEBRQE(WKREG1)    PICK UP RQE FROM CEB      19022
         TM    TSTASSN(WKREG2),FF       RQE FREE                  19022
         BC    1,INTDA3                 YES-DEACTIVATE CEB        19022
         OI    CEBTAB,CEBACT            SET CEB ACT SW ON         19022
INTDA4   LA    WKREG1,CEBNXT(WKREG1)    LOOK AT NEXT CEB          19022
         BCT   ICREG,INTDA1                 IF ANY LEFT           19022
         LA    LNKRG3,XCPTST1                                    BBBBBB
         BCR   15,LNKRG3                RETURN TO XCPTST1        BBBBBB
         SPACE 1
INTDA3   LA    LNKRG2,INTDA4            SET RETURN ADDRESS        19022
INTDA3A  OI    CEBINA(WKREG1),FREE      DEACTIVATE CH ERR BLOCK   19022
         AIF   (NOT &D2305).ZUS300
         STH   UCBREG,CEBUCBSV          SAVE THIS REQSTORS UCB  SA62429
         LH    UCBREG,TSTUCB(0,WKREG2)  GET UCB FROM CEB'S RQE    20201
         BAL   LNKRG3,ZUSRTNA           GET BASE UCB IN CASE 2305 20201
         LR    WKREG2,UCBREG            INITIALIZE WORK REG       20201
         LH    UCBREG,CEBUCBSV          RESTORE REQUESTOR'S UCB SA62429
         AGO   .ZUS301
.ZUS300  LH    WKREG2,TSTUCB(0,WKREG2)  GET UCB FROM CEB'S RQE    20201
.ZUS301  NC    UCBCHM(1,WKREG2),CEBCHMSK(WKREG1) RESTORE ORIG CHM 20201
         IC    WKREG2,UCBCHA(WKREG2)    GET THE CHAN ADDR         19022
         N     WKREG2,DEVMSK            CLEAR FLAGS              BBBBBB
         AIF   (&M7CH EQ 1).M7CH010                               19022
         SLL   WKREG2,2                 CH ADR * 2 TO SPAN TAB ENT19022
         A     WKREG2,AIECCST           POINT TO CHAN TAB ENTRY  BBBBBB
         LA    WKREG3,CHMSK             GET ADDR OF CHAN MASK    BBBBBB
         OC    ZERO(1,WKREG3),LCTMSK(WKREG2) SET FOR RESTART     BBBBBB
         AGO   .M7CH020                                           19022
.M7CH010 L     WKREG3,CHANBIT           CH ADR REPRESENTATION    BBBBBB
         SRL   WKREG3,0(WKREG2)         CALCULATE CHAN MASK       19022
         LA    WKREG2,CHMSK             GET ADDR OF CHAN MASK    BBBBBB
         O     WKREG3,ZERO(WKREG2)      ADD TO THIS CHAN BIT     BBBBBB
         ST    WKREG3,ZERO(WKREG2)      PUT IT BACK              BBBBBB
.M7CH020 BCR   15,LNKRG2                GO TO INTDA4 OR RETURN    19022
         AIF   (NOT &D2305).APR2305     2305 IN THE SYSTEM      SA62429
CEBUCBSV DC    H'0'                     UCBREG SAVE AREA        SA62429
.APR2305 EJECT                                                  SA62429
*                   ALTERNATE PATH RETRY ROUTINE                  19022
*  FUNCTION    DETERMINE IF INITIATION OF ALTERNATE PATH RETRY    19022
*                   FUNCTION POSSIBLE.  IF SO, INITIALIZE CHANNEL 19022
*                   ERROR BLK AND SET NEW CHNN. MASK IN UCB. IF   19022
*                   NOT,RETRY ON ANY AVAILBL PATH TO THE DEVICE.  19022
*                                                                     *
*  ENTRY POINT--INTAPR01,ENTERED FROM ERROR RECOVERY PROCEDURE    19022
*                   RETRY RETURN TO IOS                           19022
*                                                                     *
*  EXITS:      VIA LNKRG2 TO 'ERP RETURN TO IOS' UNDER FOLLOWING  19022
*              CONDITIONS:                                            *
*              A.  RETRY DOES NOT RESULT FROM CHANNEL ERROR       19022
*              B.  THERE IS ONLY ONE PATH TO THIS DEVICE          19022
*              C.  NO CHANNEL ERROR BLOCK FREE FOR THIS REQUEST   19022
*              D.  APR SUCCESSFULLY INITIATED-PATH ON WHICH       19022
*                       ERROR OCCURRED VARIED OFFLINE             19022
*              E.  APR FUNCTION CANNOT BE INITIATED--ONLY ONE     19022
*                       PATH AVAILABLE TO THIS DEVICE             19022
*                                                                     *
*  OPERATION   CHECK FOR CHANNEL ERROR AND MORE THAN ONE PATH TO  19022
*                   THE DEVICE. IF NEITHER, RETURN. CHK FOR FREE  19022
*                   OR ACTIVE CEB FOR THIS REQUEST. IF NEITHER,   19022
*                   RETURN.  IF ACTIVE CEB FOUND AND THIS IS      19022
*                   NOT THE LAST AVAILABLE PATH TO THIS DEVICE,   19022
*                   THE PATH INDICATOR FOR THIS PATH IS OR'ED     19022
*                   INTO THE UCBCHM FIELD, AND RETRY IS INITIATED 19022
*                   ON ONE OF THE REMAINING AVAILBL CHNNLS. IF    19022
*                   A FREE CEB IS FOUND AND THIS IS NOT THE LAST  19022
*                   AVAILBL PATH TO THIS DEV., THE UCBCHM AND RQE 19022
*                   POINTER ARE MOVED TO THE CEB, THE ACTIVE CEB  19022
*                   INDICATR IS SET AND RETRY IS INITIATD ON ONE  19022
*                   OF THE REMAINING AVAILBL CHANNLS.IF,IN EITHER 19022
*                   OF THE ABOVE CASES, THIS IS THE LAST AVAILBL  19022
*                   PATH TO THE DEVICE, THE APR FUNCTION WILL BE  19022
*                   CANCLLD (WHEN THERE WAS AN ACTIVE CEB, IT WILL19022
*                   BE DEACTIVATED BEFORE RETURNING TO RETRY THE  19022
*                   OPERATION).                                   19022
*                                                                     *
         SPACE 1
*    DETERMINE IF ALTERNATE PATH RETRY FUNCTION CAN BE INITIATED  19022
*    FOR THIS REQUEST.                                            19022
         SPACE 1
INTAPR01 TM    IOBCSW+5(IOBREG),CSWCDK+CSWCTK+CSWICK ANY CHAN ERR 19022
         BCR   8,LNKRG2                 NO, DO NOT ALLOW APR     19022
         AIF   (&M65MP EQ 1).APR100     SKIP UNI-PRCSSNG CODE     19022
         TM    UCBALLC(UCBREG),MULTPATH MORE THAN 1 PATH TO DEV.  19022
         BCR   8,LNKRG2                 NO, DO NOT ALLOW APR     19022
.APR100  TM    UCBTYP+2(UCBREG),DSKTYP  DA DEVICE                 19022
         BC    8,INTAP0                 NO-SKIP SDASD TEST        19022
         TM    SRTESTAT(UCBREG),SYSCON  IS THIS SYSRES           A53915
         BCR   1,LNKRG2                 YES-DO NOT ALLOW APR     A53915
         TM    UCBTYP+1(UCBREG),UCBRR   SDASD CAPABILITY          19022
         BC    8,INTAP0                 NO, ALLOW APR           SA70563
         TM    UCBTYP+1(UCBREG),UCBRPS  RPS DEVICE              SA70563
         BCR   8,LNKRG2                 NO, DO NOT ALLOW APR    SA70563
         CLI   UCBDVRES(UCBREG),ZERO    RESERVE OUTSTANDING     SA70563
         BCR   7,LNKRG2                 YES, DO NOT ALLOW APR   SA70563
INTAP0   DS    0H                                                 19022
         SPACE 1                                                  19022
*    THE FOLLOWING CODING DETERMINES IF THERE IS AN ACTIVE CEB    19022
*    FOR THIS REQUEST, OR A FREE CEB TO USE FOR THIS REQUEST.     19022
         SPACE 1
         LA    WKREG2,CEBTAB            LOAD ADDR OF FIRST CEB    19022
         LA    WKREG1,CEBCTR            ADDR OF CEBCTR           BBBBBB
         IC    ICREG,0(WKREG1)          INITIALIZE CEB COUNTER   BBBBBB
         SR    WKREG1,WKREG1            ZERO FREE CEB PTR        BBBBBB
INTAP1   TM    CEBINA(WKREG2),FREE      Q.IS CEB FREE             19022
         BC    8,INTAP3                 A.NO,CHK IF RETRY IN PROC 19022
         LR    WKREG1,WKREG2            A.YES,SAVE FREE CEB ADDR  19022
INTAP2   LA    WKREG2,CEBNXT(WKREG2)    LOOK AT NEXT CEB IN TBL   19022
         BCT   ICREG,INTAP1             BR IF MORE CEBS TO CHECK  19022
         LTR   WKREG2,WKREG1            Q.CEB FREE TO USE         19022
         BCR   8,LNKRG2                 A.NO,RETRN TO NORML OPRTN 19022
         BC    15,INTAP4                                          19022
         SPACE 1
INTAP3   CLC   UCBLTS(2,UCBREG),CEBRQE(WKREG2) Q.RETRY IN PROCESS 19022
         BC    7,INTAP2                 A.NO, LOOK AT NEXT CEB    19022
INTAP4   ST    WKREG2,CEBSAV            SAVE THE CEB ADDRESS      19022
         SPACE 1
*    THE FOLLOWING CODING DETERMINES IF APR FUNCTION MAY BE       19022
*    INITIATED.  IT WILL BE IF SUCH ACTION DOES NOT CAUSE THE     19022
*    LAST PATH TO A DEVICE TO BE MARKED OFFLINE.                  19022
         SPACE 1
         MVI   CEPTH,ZERO               INITIALIZE FAILING PATH SAVE
         MVI   PTHAVL+3,ZERO            CLEAR WORK AREA           19022
         LR    REG0,DCBREG              SAVE DCB POINTER         BBBBBB
         AIF   (&M65MP EQ 0).APR102     SKIP M.P. CODE            19022
         TM    UCBALLC(UCBREG),MULTPATH Q. MORE THAN 2 PATHS      19022
         BC    7,INTAP5                 A. YES, GO FIND PATH TBL  19022
         MVI   PTHCNT,TWOPATHS          INDICATE 2 PATHS          19022
         LA    ICREG,X'08'              GET PATH INDCATR CONSTNT  19022
         STC   ICREG,MSKSAV             INITIALIZE                19022
         LR    WKREG1,UCBREG            COPY UCB ADDRESS          19022
         S     WKREG1,NEGEXT            POINT TO MP FLAGS        BBBBBB
         TM    UCBFL3(WKREG1),X'08'     WHICH CPU HAD FAILURE     19022
         BC    8,INTAP4A                CPU-A, KEEP MSK BIT AS IS 19022
         SRL   ICREG,2                  MOVE TO CPU-B             19022
INTAP4A  STC   ICREG,CEPTH              SAVE FAILNG PTH INDCATR   19022
         IC    ICREG,UCBCHA(UCBREG)     GET CHAN ADDRESS          19022
         N     ICREG,DEVMSK             CLEAR FLAGS              BBBBBB
         BC    15,INTAP5B                                         19022
         SPACE 1
*   FIND TCH TABLE AND LOCATE CORRECT PATH INDICATOR              19022
         SPACE 1
INTAP5   MVI   PTHCNT,FOURPATH          INDICATE 4 PATHS          19022
.APR102  LH    WKREG1,LCHTCH(0,LCHREG)  GET TCH CODE ADDR         19022
         AIF   (&TBASE EQ 0).TBS440     SKIP ADDR ADJUSTMENT      19022
         N     WKREG1,HWMSK             CLEAR PROPAGATED BITS    BBBBBB
.TBS440  BCTR  WKREG1,0                 DECREMENT TO              19022
         BCTR  WKREG1,0                 PATH COMPOSITE            19022
         IC    ICREG,ZERO(WKREG1)       INSERT NO. OF PATHS       19022
         AR    ICREG,ICREG              DOUBLE FOR START OF TAB   19022
         LR    WKREG3,WKREG1            SAV PTR TO PATH COMPOSITE 19022
         SR    WKREG1,ICREG             FIND BEGINNING OF TABLE   19022
         LH    UAREG,UCBCHA(UCBREG)     GET FAILNG CH ADDRESS     19022
         SPACE 1
* DETERMINE PATH AVAILABILITY AND SET UP OFFLINE INDICATORS       19022
* IN LOW ORDER BYTE OF PTHAVL, A FULLWORD OF STORAGE              19022
         SPACE 1
INTAP5A  MVN   MSKSAV(CEBCHMSK),CEBCHMSK(WKREG1) ISOLATE PATH MSK 19022
         AIF   (&M65MP EQ 0).APR111     SKIP M.P. CODE            19022
         IC    ICREG,ZERO(WKREG1)       GET CHAN ADDR FROM TCHTBL 19022
*   DOUBLE CHANNEL AND ADD TABLE ADDRESS                          19022
INTAP5B  LA    DCBREG,CHAN0-IEAQFX00(ICREG,ICREG)                BBBBBB
         IC    ICREG,MSKSAV             GET PATH MASK             19022
         CLI   CPUID,CPUA               Q.IS THIS CPU A           19022
         BC    8,INTAP6                 A.YES, KEEP MASK AS IS    19022
         SRL   ICREG,2                  SET FOR CPU B             19022
INTAP6   TM    ZERO(DCBREG),CHRCF       IS CHANNEL OFFLINE       BBBBBB
         BC    8,INTAP7                 A.NO,DO NOT MARK THIS PATH19022
         O     ICREG,PTHAVL             ADD THIS BIT TO PREVIOUS  19022
         ST    ICREG,PTHAVL             SAVE UPDATED MASK         19022
INTAP7   A     DCBREG,PREFIX2           SET TO OTHER CHAN TABLE  BBBBBB
         IC    ICREG,MSKSAV             REINIT PATH MASK          19022
         CLI   CPUID,CPUA               Q.IS THIS CPU A           19022
         BC    7,INTAP8                 A.NO, KEEP MASK AS IS     19022
         SRL   ICREG,2                  SET FOR CPU B             19022
INTAP8   TM    ZERO(DCBREG),CHRCF       IS CHANNEL OFFLINE       BBBBBB
         BC    8,INTAP9                 A.NO, DONT MASK THIS PATH 19022
         O     ICREG,PTHAVL             ADD THIS BIT TO PREVIOUS  19022
         ST    ICREG,PTHAVL             SAVE UPDATED MASK         19022
INTAP9   TM    UCBALLC(UCBREG),MULTPATH  MORE THAN 2 PATHS        19022
         BC    8,INTAP12                NO, SKIP MULTI-PATH CODE  19022
.APR111  LA    DCBREG,HEXF00            GET MASK FOR CHANNEL     BBBBBB
         TM    PTHIND(WKREG1),CUAZER    Q.ARE THERE ALT. C.U.S    19022
         BC    8,INTAP10                A.NO, SKIP C.U. MASK      19022
         LA    DCBREG,CUAZER(DCBREG)    INCLUDE C.U. MASKS       BBBBBB
         SPACE  1
INTAP10  LH    WKREG2,ZERO(WKREG1)      PICK UP TCHTAB ENTRY      19022
         XR    WKREG2,UAREG             ZERO MATCHING BITS        19022
         NR    WKREG2,DCBREG            ARE THE FIELDS EQUAL     BBBBBB
         BC    7,INTAP11                A.NO, DONT SAVE THIS MSK  19022
         MVC   CEPTH(1),MSKSAV          SAVE FAILING PATH INDCATR 19022
INTAP11  LA    WKREG1,2(WKREG1)         INCRMNT TABLE ENTRY PTR   19022
         CR    WKREG3,WKREG1            Q.IS THIS END OF TBL      19022
         BC    2,INTAP5A                A.NO, GO CHECK THIS ENTRY 19022
         SPACE 1
* ACCUMULATE OFFLINE PATH INDICATOR AND CHECK FOR AN AVAILABLE    19022
* PATH FOR RETRY.                                                 19022
         SPACE 1
INTAP12  LR    DCBREG,REG0              RESTORE DCB POINTER      BBBBBB
         LR    WKREG1,WKREG3            PTR TO PATH COMPOSITE     20201
         AIF   (NOT &D2305).ZUS302
         BAL   LNKRG3,ZUSRTNA           GET BASE UCB ADDR IF 2305 20201
.ZUS302  OC    PTHAVL+3(1),UCBCHM(UCBREG) PUT IN PREV OFF BITS    20201
         OC    PTHAVL+3(1),CEPTH        PUT IN FAILING PATH       19022
         NI    PTHAVL+3,OF              CLEAR HIGH ORDER BITS     19022
         L     WKREG2,CEBSAV            GET CEB POINTER           19022
         AIF   (&M65MP EQ 0).APR114     SKIP M.P.CODE             19022
         XC    PTHAVL+3(1),PTHCNT       ANY PATH LEFT FOR RETRY   19022
         AGO   .APR116                  SKIP UNI-PROCESSING CODE  19022
.APR114  XC    PTHAVL+3(1),PTHIND(WKREG1) ANY PTH LEFT FOR RETRY  19022
.APR116  BC    8,INTAP13                NO, CANCEL APR FUNCTION   19022
         SPACE 1
*   INITIALIZE THE CEB AND RETRN FOR RETRY                        19022
         SPACE 1
         TM    CEBINA(WKREG2),FREE      IS THERE INFO IN THE CEB  19022
         BC    8,INTAP12A               YES, SKIP CEB INITLIZATN  19022
         STH   TSTREG,CEBRQE(WKREG2)    PUT IN RQE POINTER        19022
         NI    CEBINA(WKREG2),FF-FREE   MAKE CEB ACTIVE           19022
         OI    CEBTAB,CEBACT            SET CEB ACTIVE SWITCH ON  19022
         MVI   CEBCHMSK(WKREG2),FF      INIT CHM SAVE AREA        19022
INTAP12A XC    CEBCHMSK(1,WKREG2),CEPTH SAVE COMPLEMENT OF BIT    19022
         OC    UCBCHM(1,UCBREG),CEPTH   SET FAILING PATH OFF      19022
         AIF   (NOT &D2305).ZUS304                                20201
         LH    UCBREG,TSTUCB(0,TSTREG)  IN CASE ZEUS EXPOSURE     20201
.ZUS304  BCR   15,LNKRG2                RETRY REMAINING PATH      20201
         SPACE 1
*   CANCEL APR FUNCTION FOR THIS DEV & ALLOW RETRY ON FAILNG PATH 19022
         SPACE 1
INTAP13  TM    CEBINA(WKREG2),FREE      Q.IS CEB FREE             19022
         BCR   1,LNKRG2                 A.YES, RETRN TO RETRY     19022
         LR    WKREG1,WKREG2            COPY CEB ADDRESS          19022
         LH    WKREG2,CEBRQE(WKREG2)    INIT RQE PTR              19022
         BC    15,INTDA3A               GO CANCEL APR             19022
         AIF   (&D2305).APR058                                    20201
         DROP  APBSRG                                            BBBBBB
.APR058  AIF   (NOT &D2305).APR060
         SPACE 1
*  THIS SUBROUTINE DETERMINES IF THE UCB INDICATES A 2305 DEVICE. 20201
*  IF SO, THE BASE EXPOSURE UCB ADDR IS PLACED IN UCBREG.         20201
         SPACE 1
         AIF   (&APR EQ 0).APR059                                 20201
ZUSRTNA  BALR  WKREG2,0        LOAD BASE REG                      20201
         DROP  APBSRG                                             20201
.APR059  ANOP                                                     20201
         USING *,WKREG2                 ESTABLISH ADDRESSABILITY  20201
ZUSRTN   CLI   UCBTYP+2(UCBREG),DSKTYP  IS THIS DASD              20201
         BCR   7,LNKRG3                 NO, RETURN                20201
         CLI   UCBTYP+3(UCBREG),ZEUSA   IS THIS 2305 MODEL 1      20201
         BC    8,ZUSRTNC                YES GO GET BASE UCB ADDR  20201
         CLI   UCBTYP+3(UCBREG),ZEUSC   IS THIS 2305 MODEL 2      20201
         BCR   7,LNKRG3                 NO, RETURN                20201
*              GET BASE UCB ADDRESS
ZUSRTNC  L     UCBREG,UCBWKADB(0,UCBREG) GET PTR TO UCB EXTENSION 20201
         L     UCBREG,EXPCHN+BASADR(0,UCBREG) GET BASE ADDR       20201
         BR    LNKRG3                   RETURN TO CALLER          20201
         DROP  WKREG2                   DROP BASE REG             20201
.APR060  ANOP
*   PURGE STORES THE ADDRESS OF A PURGE PARAMETER LIST, ON WHICH
*   IT IS WAITING, AT THIS LOCATION.  IF A PROGRAM CHECK IN IOS
*   OR CONTROL BLOCK VALIDITY ERROR OCCURS, AND THE DEB IS INVALID,
*   MAKING IT IMPOSSIBLE TO CHECK FOR A QUIESCE COUNT, THIS POINTER
*   WILL ALLOW IOS TO POST PURGE SO IT CAN RE-PURGE, THEREBY
*   REINITIALIZING THE QUIESCE COUNT.
*   THE FOLLOWING LABEL MUST DIRECTLY PRECEED LABEL IECIHIO.
*   PURGE WILL LOCATE THE LABEL, BACKUP A WORD AND STORE THE
*   PPL ADDRESS.
         SPACE 2
PRGPPLAD DC    F'0'                     PURGE PPL ADDRESS
         TITLE 'COMMON HIO ROUTINE - INPUT/OUTPUT SUPERVISOR'
*   COMMON HIO ROUTINE                                                *
         SPACE 3                                                      *
*   THIS ROUTINE IS PROVIDED FOR THOSE SYSTEM ROUTINES WHICH REQUIRE  *
*   AN I/O DEVICE TO BE STOPPED.                                      *
         SPACE
*   ENTRY POINTS  IECIHIO - ENTERED FROM SVC 16, SVC 33, IECKOCTL,    *
*                           IECKLNCH, OR M65MP EXTERNAL INTERRUPT     *
*                           ROUTINE.
         AIF   (&M65MP EQ 0).MPB053
*                 HIOMP00 - ENTERED FROM M65MP EXTERNAL INTERRUPT     *
*                           ROUTINE.                                  *
.MPB053  SPACE 1                                                   IMP2
*   INPUT  REGISTER 8 CONTAINS A POINTER TO THE UCB OF THE            *
*          DEVICE TO BE HALTED.                                       *
*          REGISTER 15 CONTAINS THE RETURN ADDRESS                    *
         SPACE 2                                                   RL19
*        REGISTER DEFINITION FOR HIO                               RL19
         SPACE 2                                                   RL19
HUSERG   EQU   7                        USER'S REG                 IMP5
HINREG   EQU   8                       POINTER TO UCB              IMP2
HSAVR6   EQU   9                        SAVE REG FOR USER'S REG 6
HSAVR7   EQU   10                       SAVE REG FOR USER'S REG 7  RL19
HSAVR15  EQU   11                       SAVE REG FOR USER'S REG 15 RL19
HUAREG   EQU   12                       HIO REG FOR UNIT ADDRESS   RL19
HIOBAS   EQU   13                      HIO ROUTINE BASE REG        IMP2
HBALREG  EQU   14                       BRANCH/LINK REG FOR HIO    RL19
HRETRG   EQU   15                      RETUN REG                   IMP2
         SPACE 2                                                   IMP2
IECIHIO  DS    0H                                                  IMP2
         BALR  HIOBAS,0                                            IMP2
         AIF   (&TBASE EQ 0).TBS361
         DROP  BASREG,BASREG2                                      IMP2
         AGO   .APR1E                                            BBBBBB
.TBS361  DROP  BASREG                                              IMP2
.APR1E   USING *,HIOBAS                                          BBBBBB
         AIF   (&M65MP EQ 0).HIO001
         B     IECMPHIO                GO TO SHOULDER TAP ROUTINE  MP1A
         DC    H'0'                    LOCK FOR MP SPINNING
IECHIORT DS    0H                      RETURN FOR SHOULDER TAP RT MP1A
.HIO001  NI    UCBFL1(HINREG),FF-UCBBSY-UCBPST-UCBDTR-UCBASK CLEAR FL1
         LH    HUAREG,UCBCHA(HINREG)    GET UNIT ADDRESS           RL19
         N     HUAREG,ADMSK             CLEAR HIGH ORDER BITS    BBBBBB
         AIF   (&OLTEP EQ 0).OLT010                               19026
         SPACE 1                                                  19026
*   HAS OLTEP REQUESTED D.E. OR ATT'N POSTING                     19026
         L     HSAVR7,AOLTSW            ADDR OF IECOLTSW         BBBBBB
         TM    0(HSAVR7),OLTDEPST+OLTATPST                       BBBBBB
         BC    8,HIO002                 NO-CONTINUE               19026
         LR    HSAVR6,HRETRG            SAVE USER'S RETURN ADR    19026
         L     HRETRG,0(HSAVR7)         GET ADDR OF OLTEP RTN    BBBBBB
         BAL   HBALREG,OLTHLT(HRETRG)   GO TO PROPER ENTRY        19026
         LR    HRETRG,HSAVR6            RESTORE RETURN ADDRESS    19026
.OLT010  ANOP                                                     19026
HIO002   DS    0H                                                  TEST
         CLC   UCBTYP+2(2,HINREG),HT7330 * IS IT 7330?            ITH01
         BNE   HIO002J *                NO, GO DO HIO             ITH01
         TM    UCBCHA(HINREG),UCBSMD *  WAITING FOR SENSE?        ITH01
         BNO   HIO002J *                NO, GO DO HIO             ITH01
         OI    UCBFL1(HINREG),UCBBSY *  IND DE EXPECTED           ITH01
         BR    HRETRG *                 RETURN TO CALLER          ITH01
HIO002J  DS    0H *                     CONNECT                   ITH01
         HIO   0(HUAREG)                ISSUE HALT I/O           BBBBBB
         ORG   *-3                                                19025
         DC    X'01'                    SET BIT IN IMMED FIELD    19025
         ORG   *+2                                                19025
         BCR   8+1,HRETRG *             RET IF DONE OR UNNEEDED   ITH01
         BC    2,HIO002K *              OPERATION TERMINATED      ITH01
*****    CSW STORED CONDITION - EXAMINE STATUS                     RL19
         AIF   (&ASR EQ 0 OR &M65MP EQ 1).ASRCL09                 21111
         TM    CSWLOC,CSWCLP            CHANNEL LOGOUT PENDING    21111
         BC    7,HCLP                   YES-GO SET UP TO ENABLE   21111
.ASRCL09 TM    CSWLOC+5,CSWCTK+CSWICK+CATCCH CAT.ERRORS           BBBBB
         BC    7,HIO004                YES, GO HANDLE THEM         IMP2
         AIF   (&TP EQ 0).HIO022
         TM    CSWLOC+4,CSWCUE+CSWBSY   DID DEVICE DISCONNECT
         BC    1,HIO002                 NO - RETURN UNTIL FREE
.HIO022  BCR   15,HRETRG                RETURN TO CALLER
HIO002K  CLC   UCBTYP+2(2,HINREG),HT7330 * IS IT 7330?            ITH01
         BCR   7,HRETRG *               NO, RETURN TO CALLER      ITH01
         OI    UCBCHA(HINREG),UCBSMD *  IND WAITING FOR SENSE     ITH01
         OI    UCBFL1(HINREG),UCBBSY *  IND DE EXPECTED           ITH01
         BCR   15,HRETRG *              RETURN TO CALLER          ITH01
HT7330   DC    X'2009' *                UCBTYP FOR 7330           ITH01
         SPACE 1
HIO004   DS    0H                       CATASTROPHIC ERROR HANDLING
         AIF   (&ASR EQ 0).HIO040                                  IMP2
*    CCH MUST HAVE THE UCB ADDRESS IN REG 7, THE RETURN ADDRESS IN
*    REG 14, THE UNIT ADDRESS IN REG 6, AND ITS BASE ADDR IN REG 15.
         LR    HSAVR6,UAREG             SAVE USER'S REG 6          RL19
         LR    UAREG,HUAREG             PUT U.A. IN REG 6          RL19
         STH   UAREG,IOPSWO+2           PUT U.A. IN PSW
         LR    HSAVR15,HRETRG           SAVE RETURN ADDRESS        RL19
         LR    HSAVR7,HUSERG            SAVE REG 7 CONTENTS       19062
         LR    HUSERG,HINREG            UCB ADR IN 7 FOR CATAPP
         MVI   ACATAPP,CATHLT           INDICATE WHICH ENTRY     BBBBBB
         L     HRETRG,ACATAPP           LOAD CATAPP ADDRESS      BBBBBB
         BALR  HBALREG,HRETRG           GO TO CATAPP               RL19
         LR    HRETRG,HSAVR15           RESTORE REG 15             RL19
         LR    HUSERG,HSAVR7            RESTORE REG 7              RL19
         LR    UAREG,HSAVR6             RESTORE REG 6              RL19
         BCR   15,HRETRG                RETURN TO CALLER
         SPACE 1                                                   IMP2
         AIF   (&ASR EQ 0 OR &M65MP EQ 1).ASRCL10                 21111
*   CHANNEL LOGOUT PENDING - MARK UCB FOR DELAYED HIO-SET PSEUDO  21111
*   DISABLE SWITCH IN FLIH THEN ENABLE TO ALLOW CHANNEL TO LOGOUT 21111
*   WHEN CONTROL RETURN- DISABLE- RESET PSEUDO DISABLE SWITCH     21111
         SPACE 1                                                  21111
HCLP     OI    UCBCHA(HINREG),UCBDHIO   MARK UCB FOR DELAY SENSE  21111
         L     HSAVR6,HCLPCNTA          GET PTR TO CLP COUNTER    21111
         IC    HUAREG,ZERO(HSAVR6)      GET THE CNTR              21111
         LA    HUAREG,ONE(HUAREG)       INCREMENT CNTR            21111
         STC   HUAREG,ZERO(HSAVR6)      STORE COUNTER             21111
         L     HSAVR6,PDSABLA           GET PTR TO PDSABL SW FLIH 21111
         OI    ONE(HSAVR6),PPKEY        SET PSEUDO DISABLE SWITCH 21111
         SSM   HIOENB                   ENABLE FOR INTERRUPT      21111
         SPACE 1                                                  21111
*   THE CHANNEL WILL LOGOUT - WHEN ALL INTERRUPTS ARE CLEARED,    21111
*   FLIH WILL RETURN CONTROL TO NEXT INSTRUCTION                  21111
         SPACE 1                                                  21111
         SSM   PDSABLA                  DISABLE INTERUPTS         21111
         NI    ONE(HSAVR6),ZERO         RESET PSEUDO DISABLE SW   21111
         BCR   15,HRETRG                RETURN TO USER            21111
         SPACE 1                                                  21111
HCLPCNTA DS    0F                                                 21111
HIOENB   DC    X'FE'                    ENABLE MASK               21111
         DC    AL3(CLPCNT)              CHAN LOGOUT PEND CNTR PTR 21111
PDSABLA  DC    A(IEA0IO02)              PSEUDO DISABLE SW IN FLIH 21111
.ASRCL10 ANOP                                                     21111
         AGO   .HIO050                                             IMP2
.HIO040  LR    UAREG,HUAREG             PUT UNIT ADDRESS IN R6     RL19
         L     HRETRG,ASERR             ADDR OF SERR             BBBBBB
         BCR   15,HRETRG                GO TO SERR OR LOAD WAIT  BBBBBB
         SPACE 1
.HIO050  DROP  HIOBAS                                              TEST
         AIF   (&D2305).ZUSPRG          TEST FOR ZEUS             20201
         TITLE '2305 PURGE ROUTINE - INPUT/OUTPUT SUPERVISOR'
*                                                                 20201
*   THIS IS THE PURGE INTERFACE TO HANDLE ZEUS DEVICES            20201
*                                                                 20201
ZDEBPRG  BC    15,FOUR(LNKRG2)          RETURN-NO ZEUS DEVICES    20201
         AGO   .NZUSPRG                                           20201
.ZUSPRG  ANOP                                                     20201
ZUCBREG  EQU   10                       PURGE UCB REG             20201
         USING *,APBSRG                                           20201
ZDEBPRG  CLC   UCBTYP+2(2,ZUCBREG),ZEUSCON IS THIS ZEUS MOD 1     20201
         BE    PGZDEB1                  YES-BRANCH TO HANDLE      20201
         CLC   UCBTYP+2(2,ZUCBREG),ZEUSCN1 IS THIS ZEUS MOD 2     20201
         BC    7,PGZDEB3                NO-RETURN TO PURGE        20201
*                                                                 20201
*   TEST IF FIRST PASS                                            20201
*                                                                 20201
PGZDEB1  TM    ZDEBSW,FF                TEST FOR INITIAL ENTRY    20201
         BO    PGZDEB2                  NO-BRANCH AROUND          20201
*                                                                 20201
*   SET SWITCH AND INITIALIZE POINTERS                            20201
*                                                                 20201
         MVI   ZDEBSW,FF                SET INITIAL SWITCH        20201
         L     ZUCBREG,UCBWKADB(ZUCBREG)     GET WK AREA PTR      20201
         MVC   ZRNGSAV(2),EXPCHN+NXTEXP+TWO(ZUCBREG)   GET ST PT  20201
         MVC   ZRNGPTR(2),ZRNGSAV       INIT CURRENT UCB PTR      20201
*                                                                 20201
*   GET NEXT UCB ADDRESS                                          20201
*                                                                 20201
PGZDEB4  LH    ZUCBREG,ZRNGPTR          GET CURRENT UCB PTR       20201
         L     ZUCBREG,UCBWKADB(ZUCBREG)    GET WK AREA PTR       20201
         L     ZUCBREG,EXPCHN+NXTEXP(ZUCBREG)     NEXT IN RING    20201
         STH   ZUCBREG,ZRNGPTR          SAVE NEXT IN RING         20201
*                                                                 20201
*   IF ERROR OR POST FLAG ON - RETURN TO PURGE - REENTER AT PGZDEB20201
         TM    UCBFL1(ZUCBREG),UCBERR+UCBPST TEST FOR ERR OR PST  20201
         BCR   7,LNKRG2                 RETURN TO PURGE           20201
*                                                                 20201
*   CHECK FOR LAST UCB HANDLED                                    20201
*                                                                 20201
PGZDEB2  CLC   ZRNGPTR(2),ZRNGSAV       TEST IF LAST UCB          20201
         BNE   PGZDEB4                  NO-BRANCH TO GET NEXT     20201
*                                                                 20201
*   CLEAR POINTERS AND ENTRY SWITCH IF LAST                       20201
         XC    ZRNGPTR(4),ZRNGPTR       CLEAR POINTERS            20201
PGZDEB3  MVI   ZDEBSW,ZERO              CLEAR SWITCH              20201
         BC    15,FOUR(LNKRG2)          RETURN-ALL DONE           20201
ZEUSCON  DC    X'2006'                  MODEL 1 TYPE              20201
ZEUSCN1  DC    X'2007'                  MODEL 2 TYPE              20201
ZRNGPTR  DC    H'0'                     CURRENT UCB POINTER       20201
ZRNGSAV  DC    H'0'                     START UCB POINTER         20201
ZDEBSW   DC    X'00'                    ENTRY SWITCH              20201
         DROP  APBSRG                                             20201
.NZUSPRG ANOP                                                     20201
    TITLE 'CHANNEL LOGOUT PENDING ROUTINE - INPUT/OUTPUT SUPERVISOR'
*                                                                     *
*                                                                     *
*   FUNCTION - THIS ROUTINE WILL SCAN UCB'S LOOKING FOR DEVICES THAT  *
*              HAVE EITHER SENSE OR HIO OPERATIONS PENDING.           *
*                                                                     *
*   ENTRY POINT - CLPRTN - ENTERED FROM CHANNEL RESTART WHEN CHANNEL  *
*                          LOGOUT PENDING COUNT IS GREATER THAN ZERO  *
*                                                                     *
*   EXITS      INT027 - ON SUCCESSFUL COMPLETION OF HALT I/O          *
*                     - CHANNEL LOGOUT PENDING FOR HIO ISSUED IN THIS *
*                       ROUTINE                                       *
*                     - IF NO UCB IS FOUND REQUIRING DELAYED ACTION   *
*              INTSEN3- TO ISSUE SENSE OPERATION                      *
*              INTS07-  TO CHECK STATUS OF SENSE THAT CAME IN AS      *
*                       INTERRUPT WHEN SYSTEM WAS ENABLED             *
*              CCH    - FOR CHANNEL ERROR ENCOUNTERED IN THIS ROUTINE *
         SPACE 3
CLPRTN   DS    0H                                                 21111
         USING *,APBSRG                 ESTABLISH ADDRESSABILITY  21111
         AIF   (&TBASE EQ 0).CLP01                                21111
         USING IOSBAS,BASREG            ESTABLISH BASE REG        21111
         USING IOSBAS+4094,BASREG2      ESTABLISH BASE REG        21111
         AGO   .CLP03                                             21111
.CLP01   USING IPLPSW+4096,BASREG       ESTABLISH BASE REG        21111
.CLP03   TM    XCPBTE,XCPCNT+XCPERR     EXCP ENTRANCE             21111
         IECLNK1 ,BCR,4,LNKRG1,,,,&TBASE                          21111
*              SCAN UCB'S                                         21111
         L     WKREG1,IECILK2A          POINT TO UCB LOOKUP TBL SA71362
CLP003   LH    UCBREG,ZERO(WKREG1)      GET UCB ADDR              21111
         LA    WKREG1,TWO(WKREG1)       POINT TO NEXT ENTRY       21111
         LTR   UCBREG,UCBREG            IS IT LAST OR DUMMY ENTRY 21111
         BM    CLP014                   END OF CHAIN GO HANDLE    21111
         BZ    CLP003                   DUMMY ENTRY CK NEXT UCB   21111
         TM    UCBCHA(UCBREG),UCBDSNS+UCBDHIO WAITING FOR SNS/HIO 21111
         BZ    CLP003                   NO GO CHECK NEXT UCB      21111
         IC    ICREG,CLPCNT             LOAD CHAN LOGOUT PEND CNTR21111
         BCTR  ICREG,ZERO               SUBTRACT ONE              21111
         STC   ICREG,CLPCNT             RESTORE CNTR              21111
         AIF   (&ASR EQ 0).NMP01                                SM00042
         TM    UCBCHA(UCBREG),UCBDSNS . WAITING FOR SENSE       SA62867
         BZ    CLPHIO .                 NO, GO SET UP FOR HIO   SA62867
.NMP01   ANOP                                                   SA68848
         SPACE 1                                                  21111
*   THIS UCB WAITING FOR DELAYED SENSE-INITIALIZE REGISTERS AND   21111
*   GO TO SENSE ROUTINE FOR SENSE OPERATION                       21111
         NI    UCBCHA(UCBREG),FF-UCBDSNS-UCBSMD  RESET DELAYED SW 21111
         TM    UCBFL1(UCBREG),UCBPST    IS THERE AN RQE           21111
         BZ    CLP006                   NO - BYPASS SETUP         21111
         LH    TSTREG,UCBLTS(UCBREG)    GET RQE PTR FROM UCB      21111
         LM    IOBREG,DEBREG,TSTIOB-1(TSTREG) GET IOB & DEB ADDR  21111
         L     DCBREG,DEBDCB-1(DEBREG)  LOAD DCB ADDR             21111
CLP006   DS    0H                                                 21111
         LH    UAREG,UCBCHA(UCBREG) .   GET LAST PATH STARTED     21111
         N     UAREG,ADDRMSK .          AND OFF HI ORDER BITS     21111
*   IF LOGOUT PENDING WAS INDICATED ON THE SIO, UCBDHIO WILL    SA62867
*   BE ON AND THE SIO MAY BE REISSUED.  IF PRESENTED ON THE     SA62867
*   TIO, THE REGISTERS NEEDED ARE SETUP AND THE NORMAL TIO      SA62867
*   IS REISSUED.                                                SA62867
         TM    UCBCHA(UCBREG),UCBDHIO . WAS LOG PENDING ON SIO  SA62867
         BC    8,CLPTIOSN .             NO, HANDLE TIO          SA62867
         NI    UCBCHA(UCBREG),FF-UCBDHIO .RESET SIO SENSE BIT   SA62867
         BC    15,INTSEN3A .            GO RE-ISSUE SENSE SIO   SA62867
CLPTIOSN LA    LNKRG2,INTS05A .         SET RETURN REG          SA68848
         MVI   SNSCNT,ZERO .            CLEAR RETRY COUNT       SA62867
         LA    REG0,3 .                 SET CCH RETRY COUNT     SA62867
         BC    15,INTSEN6B .            GO ISSUE TIO            SA62867
         AIF   (&ASR EQ 0).NMP02                                SM00042
         SPACE 2                                                  21111
*   SET UP AND ISSUE HIO DELAYED BY CHANNEL LOGOUT PENDING        21111
CLPHIO   DS    0H                                                 21111
         NI    UCBCHA(UCBREG),FF-UCBDHIO RESET DELAY HIO FLAG     21111
         LH    UAREG,UCBCHA(UCBREG)     INITIALIZE WITH DEV ADDR  21111
         N     UAREG,ADDRMSK            AND OFF HI ORDER BITS     21111
CLP012   HIO   ZERO(UAREG)              ISSUE HALT I/O            21111
         ORG   *-3                      ORG BACK TO IMMED FIELD   21111
         DC    X'01'                    SET BIT FOR HALT DEVICE   21111
         ORG   *+2                      ORG TO NEXT INSTRUCTION   21111
         BC    8+1,INT027 *             EXIT TO CHANNEL RESTART   ITH01
         BC    2,CLP012J *              OPERATION TERMINATED      ITH01
         SPACE 1                                                  21111
*    CSW STORED EXAMINE STATUS                                    21111
         TM    CSWLOC,CSWCLP            CHANNEL LOGOUT PENDING    21111
         BC    7,CLP015                 YES GO HANDLE             21111
         TM    CSWLOC+5,CSWCTK+CSWICK+CATCCH CAT. ERROR           21111
         BC    7,CLP018                 YES GO HANDLE THEM        21111
         AIF   (&TP EQ 0).CLP06                                   21111
         TM    CSWLOC+4,CSWCUE+CSWBSY   DID DEVICE DISCONNECT     21111
         BC    1,CLP012                 NO RETURN UNTIL FREE      21111
.CLP06   B     INT027 *                 EXIT TO CHANNEL RESTART   ITH01
CLP012J  CLC   UCBTYP+2(2,UCBREG),CLP7330 * IS IT 7330?           ITH01
         BNE   INT027 *                 NO, EXIT TO CH RESTART    ITH01
         OI    UCBCHA(UCBREG),UCBSMD *  IND WAITING FOR SENSE     ITH01
         OI    UCBFL1(UCBREG),UCBBSY *  IND DE EXPECTED           ITH01
         B     INT027 *                 EXIT TO CH RESTART        ITH01
CLP7330  DC    X'2009' *                UCBTYP FOR 7330           ITH01
.NMP02   ANOP                                                   SA68848
         SPACE 1                                                  21111
*    CHANNEL LOGOUT PENDING COUNT GREATER THAN ZERO YET NO        21111
*   UCB HAS BIT INDICATING WAITING FOR DELAYED SENSE OR HIO       21111
CLP014   MVI   CLPCNT,ZERO              RESET COUNT               21111
         B     INT027                   EXIT TO CHANNEL RESTART   21111
         SPACE 1                                                  21111
         AIF   (&ASR EQ 0).NMP03                                SM00042
*   CHANNEL LOGOUT PENDING CONDITION ENCOUNTERED FOR HIO          21111
*   ISSUED IN THIS ROUTINE                                        21111
CLP015   OI    UCBCHA(UCBREG),UCBDHIO   RESET HIO PEND BIT IN UCB 21111
         IC    ICREG,CLPCNT             GET CHAN LOGOUT PEND CNTR 21111
         LA    ICREG,ONE(ICREG)         ADD ONE TO CNTR           21111
         STC   ICREG,CLPCNT             STORE CNTR                21111
         B     INT027                   EXIT TO CHANNEL RESTART   21111
         SPACE 1                                                  21111
*   CATISTROPHIC ERROR ON HIO-GO TO CCH-RETURN TO CHANNEL RESTART 21111
CLP018   MVI   ACATAPP,CATHLT           INDICATE HIO ENTRY FOR CCH21111
         LA    LNKRG2,INT027            SET RETURN ADDR FROM CCH  21111
         L     APBSRG,ACATAPP           LOAD CCH ADDR             21111
         BCR   15,APBSRG                EXIT TO CCH               21111
.NMP03   ANOP                                                   SA68848
         AIF   (&TBASE EQ 0).CLP07                                21111
         DROP  BASREG,BASREG2,APBSRG                              21111
         AGO   .CLP08                                           SA68848
.CLP07   DROP  BASREG,APBSRG                                      21111
.CLP08   AIF   (&M65MP EQ 0).MPB070                                MP1A
         TITLE 'MULTIPROCESSING VARY COMMANDS INTERFACE - INPUT/OUTPUT X
                SUPERVISOR'
*****************************************************************  MP1A
*                                                                  MP1A
*        IOS INTERFACE WITH MULTIPROCESSING VARY COMMANDS          MP1A
*                                                                  MP1A
*FUNCTION/OPERATION                                                MP1A
*   TO ISSUE THE PRIVILEGED I/O INSTRUCTIONS FOR MULTIPROCESSING   MP1A
*   VARY CHANNEL, VARY CPU, AND QUIESCE COMMANDS.                  MP1A
*   THE TWO ENTRY POINTS, IECTIOMP AND IECTCHMP ARE BRANCHED TO    MP1A
*   FROM THE COMMAND ROUTINES TO ISSUE THE TEST CHANNEL AND        MP1A
*   TEST I/O INSTRUCTIONS.  RETURN IS MADE TO THE COMMANDS AFTER   MP1A
*   SETTING THE CONDITION CODE OR PLACING A RETURN CODE IN REG 15. MP1A
*                                                                  MP1A
*ENTRY POINTS                                                      MP1A
*        IECTIOMP -                                                MP1A
*   TO ISSUE THE TEST I/O INSTRUCTION                              MP1A
*        IECTCHMP -                                                MP1A
*   TO ISSUE THE TEST CHANNEL INSTRUCTION                          MP1A
*                                                                  MP1A
*INPUT                                                             MP1A
*   DEVICE ADDRESS IN REG 6 - UAREG                                MP1A
*OUTPUT                                                            MP1A
*   FOR TEST I/O - A RETURN CODE IN REG 15                         MP1A
*                                                                  MP1A
*   0 = NORMAL RETURN                                              MP1A
*   1 = EITHER CONTROL UNIT SW SET WRONG OR DEVICE NOT OPERATIONAL MP1A
*   2 - CATASTROPHIC CHANNEL ERROR ENCOUNTERED
*                                                                  MP1A
*   FOR TEST CHANNEL - THE CONDITION CODE SET                      MP1A
*                                                                  MP1A
*EXIT                                                              MP1A
*   BACK TO THE COMMAND ROUTINES VIA REG 14.                       MP1A
*                                                                  MP1A
*****************************************************************  MP1A
         SPACE 1                                                   MP1A
IECTIOMP DS    0H                                                  MP1A
         USING *,15                                                MP1A
IECTIO1  TIO   0(UAREG)                                            MP1A
         BC    2,IECTIO1                BUSY, KEEP TRYING          MP1A
         BC    1,IECTIO5                NOT OPER, SET UNUSUAL CODE MP1A
         BC    8,IECTIO4                AVAILABLE, SET NORMAL CODE MP1A
         TM    CSWLOC+5,CATBIT         CSW STORED - CAT. ERROR     MP1A
         BC    7,IECTICAT              YES, RETURN CAT. CODE       MP1A
         TM    CSWLOC+4,CSWUCK         UNIT CHECK                  MP1A
         BC    14,IECTIO4               NO, SET NORMAL RETURN CODE MP1A
         LA    WKREG1,MPSENCCW                                     MP1A
         ST    WKREG1,CAWLOC                                       MP1A
IECTIO2  SIO   0(UAREG)                                            MP1A
         BC    8,IECTIO3               DONE - CLEAR CONT. CONN.    MP1A
         BC    3,IECTIO2               KEEP TRYING                 MP1A
         TM    CSWLOC+5,CATBIT         CSW STORED CAT. ERROR       MP1A
          BC    7,IECTICAT             YES, RETURN CAT. CODE       MP1A
         TM    CSWLOC+4,CSWBSY         BUSY                        MP1A
          BC    1,IECTIO2              YES, SPIN ON SENSE          MP1A
IECTIO3  TIO   0(UAREG)                CLEAR CONTINGENT CONNECTION MP1A
         BC    11,IECTIO3               KEEP TRYING                MP1A
*    SET RETURN CODE TO INDICATE UNIT CHECK. VARY CHANNEL WILL   BBBBBB
*    SET PATH ONLINE AND DEVICE ONLINE IF DIRECT ACCESS,         BBBBBB
*    NO CHANGE TO THE UCB IF TAPE, AND ONLINE AND READY          BBBBBB
*    IF ANY OTHER DEVICE                                         BBBBBB
         LA    APBSRG,3                 INDICATE UNIT CHECK      BBBBBB
         BCR   15,LNKRG2                RETURN                   BBBBBB
IECTIO4  LA    APBSRG,ZERO              SET NORMAL RETURN CODE   BBBBBB
         BCR   15,LNKRG2                RETURN                   BBBBBB
IECTIO5  LA    APBSRG,1                 SET NOT OPERATIONAL      BBBBBB
         BCR   15,LNKRG2                RETURN                   BBBBBB
IECTICAT LA    APBSRG,2                 SET CATASTROPHIC CODE    BBBBBB
         BCR   15,LNKRG2                RETURN                   BBBBBB
         SPACE 1
IECTCHMP DS    0C                                                  MP1A
         TCH   0(UAREG)                                            MP1A
         BCR   15,14                                               MP1A
         SPACE 1
         DROP  15
*                                                                  MP1A
*****************************************************************  MP1A
.MPB070  TITLE 'CONSTANTS USED IN IECIOSB - INPUT/OUTPUT SUPERVISOR'
         DS    0F                       ALIGNMENT                BBBBBB
         AIF   (&RMS EQ 0).RMSBB1                                 20061
RMSFLAG  DC    X'00'                    FLAG USED FOR RMS         20061
ARMSRQE  DC    AL3(RMSRQE)              ADDR OF THE RMS RQE       20061
RMSSAVE  DC    F'0'                     RMS RETURN ADDR SAVE AREA 20061
ARMSUCB  DC    H'0'                     ADDR OF THE RMS UCB       20061
RMSRQESV DC    H'0'                     RMS SAVE AREA FOR RQES    20061
RMSBASE  DC    A(IECRMS)                BASE ADDR FOR RMS        BBBBBB
CLRMSK   DC    AL1(IOBCDS+IOBURL)       CLEAR IOB FLAGS           20061
         DC    AL1(IOBQSM)              QSAM FLAG                 20061
         DC    AL2(0)                   CLEAR IOB SENSE           20061
.RMSBB1  AIF   (&TBASE EQ 0).RMSBB2                            @SA76327
IOSBASAD DC    A(IOSBAS)                ADDR OF IOS BASE CONSTANT 20061
.RMSBB2  AIF   (&DDR EQ 0).DDRBB16                             @SA76327
DDRBASE  DC    A(DDRSTART)              BASE ADDR FOR DDR        BBBBBB
.DDRBB16 ANOP                                                    BBBBBB
PNQAD    DC    A(XCPPNQ)                ADDR OF ENQ CODE         BBBBBB
ADMSK    DC    X'00003FFF'                                       BBBBBB
         AIF   (&M65MP EQ 0).MPB070A                             BBBBBB
MPSENCCW CCW   X'04',MPSENCCW,X'30',4   CLEAR MP CONT. CONNECTION BBBBB
.MPB070A AIF   (&APR EQ 0).APR140                                BBBBBB
APRMSK   DC    X'0000FFFF'                                       BBBBBB
CEBSAV   DC    F'0'                     CEB PTR SAVE AREA         19022
PTHAVL   DC    F'0'                     COMPOSITE OF M.P. PATHS   19022
PTHCNT   DC    F'0'                     COUNT OF M.P. PATHS       19022
         SPACE 1
*    THE FOLLOWING IS THE CHANNEL ERROR BLOCK TABLE.               APR
         SPACE 1
* NOTE  X'01' IN THE FIRST BYTE OF THE FIRST CEB INDICATES THAT    APR
*    THERE IS AT LEAST ONE ACTIVE CHANNEL ERROR BLOCK.             APR
         DS    0F
CEBTAB   DC    X'FE'                    CEB ACT SW AND IND FIELD   APR
         DC    X'00'                    CEB CHAN MASK FIELD        APR
         DC    X'0000'                  CEB RQE FIELD              APR
         DC    X'FE'                    CEB ACT IND FIELD          APR
         DC    X'00'                                               APR
         DC    X'0000'                                             APR
         DC    X'FE'                    CEB ACT IND FIELD          APR
         DC    X'00'                                               APR
         DC    X'0000'                                             APR
         DC    X'FE'                    CEB ACT IND FIELD          APR
         DC    X'00'                                               APR
         DC    X'0000'                                             APR
         DC    X'FE'                    CEB ACT IND FIELD          APR
         DC    X'00'                                               APR
         DC    X'0000'                                             APR
CEPTH    DC    X'00'                    CHANNEL ERROR PATH BYTE   19022
MSKSAV   DC    X'00'                    PATH MASK SAVE AREA       19022
AIECCST  DC    A(IECCST)                ADDR OF CHAN TAB         BBBBBB
.APR140  AIF   (&M65MP EQ 0).MPB070B    BBBB                     BBBBBB
NEGEXT   DC    A(UCBMPANX)              NEG. DISP. FOR MP UCB    BBBBBB
.MPB070B AIF   (&OLTEP EQ 0).OLT1C                               BBBBBB
AOLTSW   DC    A(IECOLTSW)              ADDR OF OLTEP RTN.       BBBBBB
.OLT1C   AIF   (&ASR EQ 0).ASR1D                                 BBBBBB
CATHLT   EQU   24                       OFFSET FOR HIO ENTRY     BBBBBB
ACATAPP  DC    V(IGFCAT)                ADDR OF CCH RTN          BBBBBB
         AGO   .ASR1F
.ASR1D   ANOP
ASERR    DC    A(SERR04)                ADDR OF SERR             BBBBBB
.ASR1F   ANOP
         MEND
