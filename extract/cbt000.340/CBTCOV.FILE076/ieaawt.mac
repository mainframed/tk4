         MACRO
         IEAAWT &EVENT,&STORAGE,&PROTECT,&VALIDCK,&SCHED,              +
               &JST,&SMF,&ATTACH                                  19018
.*2056002200-002600,003600,010000-010200,014800-015000             MFT2
.*2056040400-045600                                                MFT2
.*037400-037600                                                   M3036
.*064362-064368 .                                             BD A44046
*STATUS, CHANGE LEVEL--000
.*THE SYMBOLIC PARAMETER &EVENT INDICATES WHETHER THE USER
.*HAS CHOSEN MULTIPLE EVENT OR SINGLE EVENT WAIT.
.*
.*THE SYMBOLIC PARAMETER &PROTECT INDICATES WHETHER
.*    OR NOT THIS SYSTEM HAS THE PROTECTION OPTION.
.*
.*THE SYMBOLIC PARAMETER &STORAGE INDICATES THE TYPE OF STORAGE
.*CONFIGURATION THIS SYSTEM HAS. FOR '&STORAGE' EQ 'PART' THE      MFT2
.*'&EVENT' PARAMETER IS AUTMATICALLY SET TO 'MULT', IE. FOR AN     MFT2
.*MFT SYSTEM, MULTIPLE EVENT WAIT IS REQUIRED.                     MFT2
.*                                                                 MFT2
.*ALL CODE BOUNDED BY ASTERISK COMMENT CARDS IS INEFFECTIVE FOR THEMFT2
.*REASON SPECIFIED ABOVE. ALL WAITR COMMENTS ARE MEANINGLESS.      MFT2
*
*ROUTINE
*
         AIF   ('&EVENT' NE 'SING').DNTSG1
.******************************************************************MFT2
         AIF   ('&STORAGE' EQ 'PART').DWTR4                        MFT2
.******************************************************************MFT2
*        WAIT--SINGLE EVENT
         AIF   ('&PROTECT' EQ 'N').DPROT1
         TITLE 'IEACWT00,WAIT'
*        MODULE NAME--IEACWT00
         AGO   .DNEXT1
.DPROT1  ANOP
         TITLE 'IEAAWT00,WAIT'
*        MODULE NAME--IEAAWT00
         AGO   .DNEXT1
.******************************************************************MFT2
.DWTR1   ANOP
*        WAITR WITHOUT ROLL-OUT(IN PARTIONED MAIN STORAGE),SINGLE EVENT
         AIF   ('&PROTECT' EQ 'N').DPROT3
         TITLE 'IEAOWT00,WAIT'
*        MODULE NAME--IEAOWT00
         AGO   .DNEXT1
.DPROT3  ANOP
         TITLE 'IEAMWT00,WAIT'
*        MODULE NAME--IEAMWT00
         AGO   .DNEXT1
.******************************************************************MFT2
.*MULTIPL EVENT WAIT'S
.DNTSG1  AIF   ('&STORAGE' EQ 'PART').DWTR4
*        WAIT--MULTIPLE EVENT.
         AIF   ('&PROTECT' EQ 'N').DPROT4
         TITLE 'IEADWT00,WAIT'
*        MODULE NAME--IEADWT00
         AGO   .DNEXT1
.DPROT4  ANOP
         TITLE 'IEABWT00,WAIT'
*        MODULE NAME--IEABWT00
         AGO   .DNEXT1
.DWTR4   ANOP
*        WAIT--IN PARTITIONED MAIN STORAGE--MULTIPLE EVENT.        MFT2
         AIF   ('&PROTECT' EQ 'N').DPROT6
         TITLE 'IEAPWT00,WAIT'
*        MODULE NAME--IEAPWT00
         AGO   .DNEXT1
.DPROT6  ANOP
         TITLE 'IEANWT00,WAIT'
*        MODULE NAME--IEANWT00
.DNEXT1  ANOP
*
*FUNCTION
*
         AIF   ('&EVENT' EQ 'MULT').DMFUN1
         AIF   ('&STORAGE' EQ 'SHAR').DFWTR1
         AIF   ('&STORAGE' EQ 'PART').DFWTR1
*        TO INFORM THE SUPERVISOR THAT THE CURRENT TASK DOES NOT WISH
*        TO CONTINUE IN CONTROL UNTIL THE SPECIFIED EVENT HAS OCCURRED.
         AGO   .DNEXT2
.DFWTR1  ANOP
*        TO INFORM THE SUPERVISOR THAT THE CURRENT HIGH-PRIORITY TASK
*        DOES NOT WISH TO CONTINUE IN CONTROL UNTIL THE SPECIFIED EVENT
*        HAS TAKEN PLACE.
.DFWTR4  AIF   ('&STORAGE' EQ 'SHAR').DFWTR2
         AGO   .DNEXT2
.DFWTR2  ANOP
*        TO ACTIVATE THE ROLL-OUT OF THE HIGH PRIORITY TASK & ROLL-IN
*        OF THE LOW PRIORITY TASK.
         AGO   .DNEXT2
.DMFUN1  AIF   ('&STORAGE' EQ 'SHAR').DFWTR3
         AIF   ('&STORAGE' EQ 'PART').DFWTR3
*        TO INFORM THE SUPERVISOR THAT THE CURRENT TASK DOES NOT WISH
*        TO CONTINUE IN CONTROL UNTIL THE SPECIFIED EVENTS (OR A
*        CERTAIN SUBSET OF THESE EVENTS)  HAVE OCCURRED.
         AGO   .DNEXT2
.DFWTR3  ANOP
*        TO INFORM THE SUPERVISOR THAT THE CURRENT HIGH-PRIORITY TASK
*        DOES NOT WISH TO CONTINUE IN CONTROL UNTIL THE SPECIFIED
*        EVENTS(OR A CERTAIN SUBSET OF THESE EVENTS) HAVE OCCURRED.
         AGO   .DFWTR4
.*END OF FUNCTION DOCUMENTATION.
.DNEXT2  ANOP
*
*ENTRY POINT
*        IGC001--FROM THE SVC HANDLER
*
.*INPUT DOC.
*INPUT
*
         AIF   ('&STORAGE' EQ 'PART').DINWTR1
         AIF   ('&STORAGE' EQ 'SHAR').DINWTR1
         AIF   ('&EVENT' EQ 'MULT').DINMLT1
*        REGISTER 0--THE WAIT COUNT(EITHER 0 OR 1) WHERE
         AGO   .DINPT1
.DINMLT1 ANOP
*        REGISTER 0--THE WAIT COUNT WHERE
         AGO   .DINPT1
.DINWTR1 AIF   ('&EVENT' EQ 'MULT').DINMLT2
*        REGISTER 0--THE 2'S COMPLEMENT OF THE WAIT COUNT(EITHER 0 OR1)
*                    WHERE
         AGO   .DINPT1
.DINMLT2 ANOP
*        REGISTER 0--THE 2'S COMPLEMENT OF THE WAIT COUNT WHERE
.DINPT1  ANOP
*              WAIT COUNT--COUNT OF NUMBER OF EVENTS WHICH MUST
*                          BE COMPLETED BEFORE THE TASK MAY CONTINUE.
*
         AIF   ('&EVENT' EQ 'MULT').DINMLT3
*        REGISTER 1--ECB ADDRESS,ADDRESS OF THE EVENT CONTROL
*                    BLOCK TO BE POST'ED WHEN THE EVENT IS COMPLETED.
         AGO   .DNEXT3
.DINMLT3 ANOP
*        REGISTER 1--ECB ADDRESS (ADDRESS OF THE EVENT CONTROL
*                    BLOCK TO BE POST'ED WHEN THE EVENT IS COMPLETED).
*
*                    OR,IF A MULTIPLE EVENT WAIT IS ISSUED, THE 2'S
*                    COMPLEMENT OF THE ECBLIST ADDRESS,WHICH IS
*                    THE ADDRESS OF A PARAMETER LIST CONTAINING
*                    ADDRESSES OF THE ECB'S TO BE WAIT'ED UPON. EACH
*                    ADDRESS IS A FULL-WORD ON A FULL-WORD BOUNARY
*                    WITH THE HIGH-ORDER BYTE ZERO. THE HIGH-ORDER
*                    BIT OF THE LAST ELEMENT IN THE LIST MUST BE A 1.
.DNEXT3  ANOP
*
*OUTPUT
*        NONE
*
*EXTERNAL REFERENCES
        AIF   ('&VALIDCK' EQ 'N').NVAL2
*        IEA0AB00--ADDRESS OF ABTERM ROUTINE
.NVAL2   ANOP
*        IEA0XE00--ADDRESS OF TYPE 1 SVC EXIT ROUTINE
*        IEATCBP--ADDRESS OF CURRENT TASK'S TCB
         AIF   ('&PROTECT' EQ 'N' OR '&VALIDCK' EQ 'N').NVLD
*        IEA0VL00--ENTRY TO SUPERVISOR VALIDITY CHECK ROUTINE
.NVLD    ANOP
*
*EXIT
*        EXIT IS MADE BY A BRANCH TO THE TYPE 1 SVC EXIT ROUTINE.
*
*ERROR MESSAGES
*
         AIF  ('&VALIDCK' EQ 'Y').VAL
*       NOT APPLICABLE
        AGO   .DNEXT5
.VAL    ANOP
*        IF AN ERROR IS FOUND, THE WAIT ROUTINE BRANCHES
*        TO ABTERM WITH THE ADDRESS OF THE CURRENT TCB IN REGISTER 0,
*        THE ADDRESS OF THE TYPE 1 SVC EXIT ROUTINE IN REGISTER 14(THE
*        RETURN REGISTER) & THE APPROPRIATE ERROR CODE IN REGISTER 1-
*              80301000--WAIT ON A WAITING ECB.
*              80201000--INVALID ECB ADDRESS
         AIF   ('&EVENT' EQ 'SING').DNEXT5
*              80101000--INVALID WAIT COUNT
.DNEXT5  ANOP
*
*TABLES/WORKAREAS
*
         AIF   (('&STORAGE' NE 'PRIM') OR ('&EVENT' NE 'SING')).DNEXT8
*        NOT APPLICABLE.
         AGO   .DNEXT6
.DNEXT8  AIF  (('&STORAGE' EQ 'PRIM') OR ('&STORAGE' EQ 'SING')).DNEXT7
*        WTFLAG--1 BYTE FIELD OF FLAG BITS.
.DNEXT7  AIF   ('&EVENT' EQ 'SING').DNEXT6
*        WTSIMLST--1 FULL-WORD USED TO PUT AN ECB ADDRESS
*                  INTO THE LIST FORMAT.
.DNEXT6  ANOP
*
*NOTES
*
*        1.  WAIT COUNT = 0 EFFECTS A NO-OP
*
*
IGC001   CSECT
         EXTRN IEATCBP
         AIF   ('&JST' NE 'Y').NTPART                             19018
         EXTRN IEAQTD01                                           19018
         ENTRY JSTWAIT                                        BD A44046
.NTPART  AIF   ('&VALIDCK' EQ 'N').NVAL3
         EXTRN IEA0AB00
.NVAL3   ANOP
         EXTRN IEA0XE00
BEGIN    BALR  RBASE,0
         USING *,RBASE
         AIF   (('&EVENT' EQ 'SING') AND ('&STORAGE' NE 'PART')).SKP
         SR    RE,RE
.SKP     ANOP
         LTR   R0,R0               Q. WAIT COUNT = ZERO
         BCR   8,REXIT               IF YES, LEAVE ROUTINE
         MVI   32(0),X'FF'         ENABLE THE WAIT-OR
         L     RNEWAD,WTNEW       GET ADDRESS OF NEW
.SKIP1   AIF   ('&EVENT' EQ 'SING').SING1 IF SINGLE EVENT IS REQUESTED
.* GO TO SINGLE EVENT WAIT CODE.
         EJECT
NTWTR    LPR   R0,R0               MAKE C(RO) POSITIVE
*MULTIPLE EVENT  CODE
*THIS ROUTINE TESTS R1, TO SEE WHETHER IT CONTAINS A PTR TO LIST
*OR AN ECB ADDRESS. IF IT IS AN ECB ADDRESS IT CHANGES R1 TO
*SIMULATE A LIST.
         LR    RCT,R0              SAVE WAIT COUNT
         LTR   R1,R1               Q. IS THIS A SINGLE ECB PTR
         BC    4,WTLPINIT            IF NO, BRANCH
         ST    R1,WTSIMLST         PUT ECB ADDR INTO STORAGE
         OI    WTSIMLST,X'80'      TURN ON HIGH-ORDER BIT INDICATING
         LA    R1,WTSIMLST         LAST EL IN PARALIST + GET ADDR OF
*                                    THE ECB ADDR IN R1
*INITIALIZE FOR LOOP
WTLPINIT LPR   R1,R1               MAKE R1 POSITIVE
         SR    RC,RC               CLEAR REG FOR USE AS CTR
WTBGLOOP L     RD,0(RE,R1)
         LA    RC,1(0,RC)          INCREMENT CT OF ECB'S
*
         EJECT
        AIF   ('&VALIDCK' EQ 'N').CHK3
*VALIDITY CHECKING OF ECB ADDRESS FOR WAIT.
*
         LA    RX,0(RD)            CLEAR HIGH ORDER BYTE OF ECB ADDR  *
         AIF   ('&PROTECT' EQ 'N').CHK1
         TM    33,X'F0'            Q. SVC OLD PSW PROT. KEY = 0.
         BC    7,WTCHKRTN            IF NO, GO TO VALIDITY CHK RTN
.CHK1    ANOP
         C     RX,MACHSZE(0,RCVT)    Q. ECB ADDRESS LESS THAN MACHINE
*                                       SIZE.
         BC    4,WTADDROK               IF YES, CONTINUE WITH WAIT
WTADRERR L     1,INVADDR                IF NO, GET ERROR CODE
WTERREND LR    0,RA                GET  TCB ADDRESS
         L     15,WTADABT          GET ADDRESS OF ABTERM
         BR    15                  BRANCH TO ABTERM
WWERR    L     R1,WAITWAIT
         BC    15,WTERREND
         AIF   ('&PROTECT' EQ 'N').CHK3
*IF SYSTEM ROUTINE DID NOT ISSUE SVC TO WAIT, THIS ROUTINE IS THE
*LINKAGE TO THE SYSTEM VALIDITY CHECK ROUTINE, WHICH TESTS TO
*SEE IF THE ECB STORAGE KEY = THE TCB PROTECT KEY
WTCHKRTN L     LNKREG,VCRAD1(0,RCVT)    GET ADDR OF VALIDITY CHK RTN
         SR    RX1,RX1             CLEAR TCB REG FOR VLDCK
         BALR  RX2,LNKREG          GO TO VAL CHK RTN
.*  TEST FOR TCAM DELETED IN 21.8                             AB A66491
         BZ    WTADDROK .          ECB IS IN PROPER PARTITION.    20002
         L     RX1,TCBJSCB(RA) .   GET JSCB ADDR.                 20002
         USING IEZJSCB,RX1 .                                      20002
         L     RX1,JSCBCSCB .      GET CSCB ADDR.                 20002
         USING CSCB,RX1 .                                         20002
         L     RX1,CHECBP .        GET COMMUNICATIONS             20002
* .                                  ECB ADDRESS                  20002
         DROP  RX1                                                20002
         LA    RX1,0(0,RX1) .      CLEAR HIGH ORDER BYEE          20002
         LA    RX,0(0,RD) .        GET ECB ADDRESS                M0340
         CR    RX,RX1 .            IS THIS A LEGAL ECB            M0340
.NTCAM1  ANOP                                                     20002
.*                                                                20002
.**************************************************************   20002
         BNE   WTADRERR .          GO TO ABTERM                   20002
.CHK3    ANOP
*THIS ROUTINE CHECKS THE WAIT AND COMPLETE FLAGS IN THE ECB
WTADDROK TM    0(RD),X'80'         Q. IS WAIT FLAG ON
         AIF   ('&VALIDCK' EQ 'Y').WWERR
         BC    1,WTENDLUP               IF YES GO TO END OF LOOP
         AGO   .WWERR1
.WWERR   ANOP
         BC    1,WWERR
.WWERR1  ANOP
         TM    0(RD),X'40'         Q. IS COMPLETE FLAG ON
         BC    8,WT10                IF NO, GO TO FILL-IN ECB
         BCTR  R0,0                IF YES, DECREMENT WAIT COUNT
         LTR   R0,R0               Q. DID COUNT GO TO ZERO
         BC    7,WTENDLUP            IF NO, GO TO END OF LOOP
*THIS ROUTINE TURNS OFF THE WAIT FLAG IF THE COUNT GOES TO ZERO
WTLOOP2  L     RD,0(R1)            GET PTR TO FIRST/NEXT ECB IN RD
         NI    0(RD),X'7F'         TURN OFF WAIT FLAG
         LA    R1,4(R1)            INCREMENT PTR TO LIST
         LTR   RD,RD               Q. IS THIS LAST EL OF LIST
         BC    2,WTLOOP2             IF NO, GO BACK
         BCR   15,REXIT
*THIS ROUTINE PUTS THE RB ADDRESS INTO THE ECB AND TURNS ON THE
*WAIT FLAG
WT10     IC    RX,0(RD)           SAVE UPPER BYTE OF ECB
         ST    RB,0(RD)            PLACE RB ADDRESS INTO ECB
         STC   RX,0(RD)           RESTORE UPPER BYTE OF ECB
         OI    0(RD),X'80'         TURN ON WAIT FLAG
****END OF LOOP***
WTENDLUP LA    RE,4(RE)            INCREMENT INDEX REG TO GET NEXT EL
*                                    OF THE LIST
         LTR   RD,RD               WAS THIS LAST EL IN LIST OF PTRS
         BC    2,WTBGLOOP            IF NO, GO BACK AND GET NEXT ECB
*
*THIS ROUTINE CHECKS FOR AN INCORRECT WAIT COUNT AND M NOT EQUAL TO N.
*IT SIGNALS THE DISPATCHER TO LOOK FOR A NEW TASK AND STORES THE
*WAIT COUNT IN THE TOP RB.
         CR    RC,RCT              COMPARE NO. OF ECB'S WITH WT. COUNT
        BC    8,WTOK1               IF NO=N,CONTINUE
        AIF   ('&VALIDCK' EQ 'N').NVAL1
         BC    2,WTOK              IF NO GRTR THAN CT, CONTINUE
         L     1,WTCTERR           IF WT CT GRTR THAN ECB'S, ERROR
         BC    15,WTERREND           SO GO TO ABTERM
.NVAL1   ANOP
*
WTOK     OI    XMULTWT(RB),X'01'   TURN SEARCH BIT IN RB- SHOWS M NOT=N
WTOK1    STC   R0,XRBWT(RB)        INSERT WAIT CT IN RB
         AIF   ('&JST' NE 'Y').NOJST                              19018
         LA    R11,RET2WAIT .      SET RETURN ADDR FOR WAIT   BD A44046
JSTWAIT  EQU   * .                 ENTRY POINT FOR EXIT       BD A44046
         BALR  RBASE,0 .           ESTABLISH NEW BASE ADDR    BD A44046
         USING *,RBASE .                                      BD A44046
         L     RBASE,BASEWT .      RELOAD WAIT BASE           BD A44046
         USING IGC001+2,RBASE .                               BD A44046
         STM   0,15,SAVEALL .      SAVE ALL REGS THRU JST         M3832
         L     PIBPTR,TCBPIB(RA)        .GET 'OLD' PIB PTR        19018
         LA    PIBPTR,0(PIBPTR)         .CLEAR HI ORDER BYTE      19018
         LTR   PIBPTR,PIBPTR            .Q. IS THERE A PIB        19018
         BZ    WTOK2                    .NO. COMM/MSCH TASK       19018
         TM    PIBJSTQE(PIBPTR),X'80'   .Q. VALID JS TQE          19018
         BZ    WTOK2                    .NO. CONT WAIT PROC       19018
         AIF   ('&ATTACH' NE 'Y').NATACH1                         19018
         L     ATCBREG,TCBFTJST(RA)     .PICK UP J/S TCB ADDR     19018
         LR    XRSAV6,ATCBREG           .SAVE J/S TCB ADDR        19018
         L     JSTQEADR,PIBJSTQE(PIBPTR) .GET J/S TQE ADDR        19018
         LA    JSTQEADR,0(JSTQEADR)     .CLEAR HI ORDER BYTE      19018
         TM    TQEFLGS(JSTQEADR),X'08'  .Q. REAL(WAIT) TQE        19018
         BNO   TASKTQE                  .BR IF NO                 19018
         TM    TQEFLGS(JSTQEADR),X'80'  .Q. TQE ON QUEUE          19018
         BZ    WTOK2                    .BR IF YES                19018
TASKTQE  EQU   *                                                  19018
         B     EXAMINE                  .START SCAN WITH JSTCB    19018
*                                                                 19018
CONTSRCH EQU   *                                                  19018
         BAL   LNKREG,SELECT            .GO TO TASK SELECT RTN    19018
         AGO   .DEQUEUE                                           19018
.NATACH1 ANOP                                                     19018
         L     JSTQEADR,PIBJSTQE(PIBPTR) .GET J/S TQE ADDR        19018
         LA    JSTQEADR,0(JSTQEADR)     .CLEAR HI ORDER BYTE      19018
         TM    TQEFLGS(JSTQEADR),X'08'  .Q. REAL(WAIT) TQE        19018
         BNO   TASKTQE                  .BR IF NO                 19018
         TM    TQEFLGS(JSTQEADR),X'80'  .Q. TQE ON QUEUE          19018
         BZ    WTOK2                    .BR IF YES                19018
TASKTQE  EQU   *                                                  19018
.DEQUEUE ANOP                                                     19018
*                                                                 19018
* DEQUEUE THE JOB/STEP TQE                                        19018
*                                                                 19018
         L     TIMEDQ,BASEDEQ           .GET TIMER DEQ ADDR       19018
         BALR  XRTSTADR,TIMEDQ          .GO TO DEQUEUE TQE        19018
         USING *,XRTSTADR               .RE-EST ADDRESSABILITY    19018
         L     RBASE,BASEWT                                       19018
         USING IGC001+2,RBASE                                     19018
         DROP  XRTSTADR                                           19018
*                                                                 19018
* CONVERT THE JOB/STEP(TASK) TQE TO A WAIT(REAL) TQE              19018
*                                                                 19018
         L     RCVT,16 .           INSURE CVT ADDRESS             M3832
         L     TIMENQ,CVTQTE00(RCVT)    .GET TIMER ENQ ADDR       19018
         L     RA,WTNEW                 .GET ADDR OF THE 'OLD'    19018
         L     RA,4(RA)                 .(CURRENT) TCB            19018
         L     PIBPTR,TCBPIB(RA)        .GET PIB ADDR             19018
         L     JSTQEADR,PIBJSTQE(PIBPTR) .GET J/S TQE ADDR        19018
         LA    JSTQEADR,0(JSTQEADR)     .CLEAR HI ORDER BYTE      19018
         MVC   TQESAV(4,JSTQEADR),TQEVAL(JSTQEADR) .SAVE CPU      19018
*                                                  .VALUE         19018
         AIF   ('&SMF' NE 'Y').NOSMF                              19018
         L     TCTPTR,TCBTCT(RA)        .GET TCT ADDR             19018
         LA    TCTPTR,0(TCTPTR) .  CLEAR HIGH ORDER BYTE          20002
         LTR   TCTPTR,TCTPTR .     IS THERE A TCT?                20002
         BZ    NOTCT .             NO USE 30 MIN VALUE.           20002
         MVC   TQEVAL(4,JSTQEADR),TCTWLMT(TCTPTR) .INSERT VALUE   20002
         B     CONTINUE .          CONTINUE PROCESSING            20002
NOTCT    EQU   * .                 THIS JOB HAS NO TCT            20002
.NOSMF   ANOP                                                     19018
         MVC   TQEVAL(4,JSTQEADR),W30MIN .INS 30MIN WAIT VALUE    19018
CONTINUE EQU   * .                                                20002
         OI    TQEFLGS(JSTQEADR),X'08'  .MARK TQE AS REAL         19018
*                                                                 19018
* ENQUEUE THE WAIT(REAL) TQE                                      19018
*                                                                 19018
         BALR  XRTSTADR,TIMENQ          .GO TO NQ WAIT TQE        19018
         B     WTOK2                    .CONT WAIT PROC           19018
         AIF   ('&ATTACH' NE 'Y').NOJST3                          19018
SELECT   L     SELREG,TCBLTC(ATCBREG)   .GET DAUGHTER             19018
SELECT1  LTR   SELREG,SELREG            .Q. DAUGHTER EXIST        19018
         BNZ   SELECT2                  .YES. TCB FOUND           19018
         L     SELREG,TCBNTC(ATCBREG)   .NO. GET SISTER           19018
         CR    ATCBREG,XRSAV6           .Q. SCAN COMPLETE         19018
         BCR   8,LNKREG                 .YES. LAST TIME RETURN    19018
         L     ATCBREG,TCBOTC(ATCBREG)  .NO. GET MOTHER           19018
         B     SELECT1                  .CONTINUE SCAN            19018
SELECT2  LR    ATCBREG,SELREG           .MODIFY TCB REGISTER      19018
EXAMINE  EQU   *                                                  19018
         CR    ATCBREG,RA               .Q. IS THIS WAIT ISSUER   19018
         BE    CONTSRCH .          YES-CONTINUE               BD A44046
         TM    TCBFLG(ATCBREG),X'02'    .Q. THIS TASK ENDED       19018
         BO    CONTSRCH                 .YES. FIND NEXT TCB       19018
         L     SELREG,TCBRBP(ATCBREG)   .PICK UP TOP RB           19018
         CLI   XRBWT(SELREG),X'00'      .Q. WAIT CT = ZERO        19018
         BE    WTOK2                    .YES. CONT WAIT PROC      19018
         L     SELREG,RHOPSW(SELREG)    .GET RIGHT HALF OF PSW    19018
         S     SELREG,KTWO              .GET LAST EXEC INSTR      19018
         BC    12,WTOK2                 .NOT 2 BYTE INSTR         19018
         CLC   KTEST(2),0(SELREG)       .Q. 0A01(WAIT) ISSUED     19018
         BE    CONTSRCH                 .YES. GET NEXT TCB        19018
         B     WTOK2                    .NO. ENTIRE TREE IS NOT   19018
*                                       .IN SVC WAIT, CONT WAIT   19018
.NOJST3  ANOP                                                     19018
WTOK2    EQU   *                                                  19018
         LM    0,15,SAVEALL .      RELOAD ALL REGS                M3832
         BR    R11 .               RETURN TO EXIT OR NSI      BD A44046
RET2WAIT DS    0H .                RETURN ADDR FOR WAIT JS TIMING 44046
         L     RNEWAD,WTNEW .      RESET ADDR OF NEW          BD A44046
.NOJST   ANOP                                                 BD A44046
         AGO   .SKIP2
.SING1   ANOP
         AIF   ('&STORAGE' EQ 'PRIM').SPRIM
NTWTR    EQU   *
.SPRIM   ANOP
        AIF   ('&VALIDCK' EQ 'N').CHK4
*VALIDITY CHECKING OF ECB ADDRESS FOR WAIT.
*
        LA    R1,0(0,R1)          CLEAR HIGH-ORDER BYTE OF ECB ADDRESS
         AIF   ('&PROTECT' EQ 'N').CHK2
         TM    33,X'F0'            Q. SVC OLD PSW PROT. KEY = 0.
         BC    7,WTCHKRTN            IF NO, GO TO VALIDITY CHK RTN
.CHK2    ANOP
         CL    R1,MACHSZE(0,RCVT)    Q. ECB ADDRESS LESS THAN MACHINE
*                                       SIZE.
         BC    4,WTADDROK               IF YES, CONTINUE WITH WAIT
WTADRERR L     1,INVADDR                IF NO, GET ERROR CODE
WTERREND LR    0,RA                GET  TCB ADDRESS
         L     15,WTADABT          GET ADDRESS OF ABTERM
         BR    15                  BRANCH TO ABTERM
WWERR    L     R1,WAITWAIT
         B     WTERREND
         AIF   ('&PROTECT' EQ 'N').CHK4
*IF SYSTEM ROUTINE DID NOT ISSUE SVC TO WAIT, THIS ROUTINE IS THE
*LINKAGE TO THE SYSTEM VALIDITY CHECK ROUTINE, WHICH TESTS TO
*SEE IF THE ECB STORAGE KEY = THE TCB PROTECT KEY
WTCHKRTN L     LNKREG,VCRAD1(0,RCVT)    GET ADDR OF VALIDITY CHK RTN
         LR    RX,R1               SAVE REGISTER ONE
         SR    RX1,RX1             CLEAR TCB REG FOR VLDCK
         BALR  RX2,LNKREG          GO TO VAL CHK RTN
         BC    7,WTADRERR          IF ERROR, GO TO ABTERM.
.CHK4    ANOP
*THIS ROUTINE CHECKS THE COMPLETION FLAG IN THE ECB.  IF IT IS ON,
*NOTHING IS DONE TO THE ECB.  IF OFF, THE RB POINTER IS INSERTED
*AND THE WAIT FLAG IS TURNED ON.
WTADDROK EQU   *
         AIF   ('&VALIDCK' EQ 'N').WWERR2
         TM    0(R1),X'80'
         BC    7,WWERR             Q.  WAIT FLAG ON.
.WWERR2  ANOP
         TM    0(R1),X'40'
         BCR   7,REXIT             Q. COMPLETION FLAG ON.
         OI    XRBWT(RB),X'01'     PLACE WAIT COUNT IN RB.
         IC    RC,0(R1)           SAVE HIGH ORDER BYTE OF ECB
         ST    RB,0(R1)            PLACE RB POINTER IN ECB
         STC   RC,0(R1)            RESTORE HIGH ORDER BYTE OF ECB
         OI    0(R1),X'80'         TURN ON WAIT FLAG IN ECB
.SKIP2   AIF   ('&STORAGE' EQ 'PART' AND '&EVENT' EQ 'SING').SKP6
         SR    RE,RE
.SKP6    ANOP
       AIF   ('&STORAGE' EQ 'PRIM').SKIP7
       CLC   1(3,RNEWAD),5(RNEWAD)    HAS TASK SWITCH BEEN MADE
        BC    7,*+8                   YES DO NOT STORE
.SKIP7 ANOP
         ST    RE,0(RNEWAD)        INDICATE TASK SWITCH BY PLACING
*                                    ZERO IN NEW.
         BCR   15,REXIT            EXIT
         EJECT
***CONSTANTS AND SYMBOLIC DISPLACEMENTS
WTNEW   DC    A(IEATCBP)          ADDRESS OF NEW AND OLD
        AIF   ('&VALIDCK' EQ 'N').NABD
WTADABT  DC    A(IEA0AB00)         ADDRESS OF ABTERM
.NABD   AIF   ('&EVENT' EQ 'SING').SKIP5
WTSIMLST DS    1F
        AIF   ('&VALIDCK' EQ 'N').SKIP5
WTCTERR  DC    X'80101000'          1-INVALID WAIT COUNT
.SKIP5   ANOP
        AIF   ('&VALIDCK' EQ 'N').NVAL
INVADDR  DC    X'80201000'          2-INVALID ECB ADDRESS
WAITWAIT DC    X'80301000'          3-WAIT ON A WAITING ECB.
.NVAL    ANOP
         AIF   ('&JST' NE 'Y').NOJST1                             19018
SAVEALL  DS    16F .               HOLDS ALL REGS THRU JST        M3832
BASEDEQ  DC    A(IEAQTD01)              .TIMER DEQUEUE            19018
BASEWT   DC    A(IGC001+2)              .RE-EST WAIT ADDR         19018
W30MIN   DC    X'041EC148'              .30 MIN IN TU'S           19018
         AIF   ('&ATTACH' NE 'Y').NOJST1                          19018
KTWO     DC    X'00000002'              .RB CHECK VALUE           19018
KTEST    DC    X'0A01'                  .SVC 1 CHECK VALUE        19018
.NOJST1  ANOP                                                     19018
MACHSZE  EQU   164
R0       EQU   0
R1       EQU   1
RC       EQU   2
RCVT     EQU   3
RA       EQU   4                   TCB ADDRESS.
RB       EQU   5                   RB ADDRESS.
RE       EQU   6
RX       EQU   7
LNKREG   EQU   8
RX1      EQU   9
RX2      EQU   10
RNEWAD   EQU   11                 ADDRESS OF NEW
R11      EQU   11 .                                           BD A44046
RCT      EQU   12
RD       EQU   13
REXIT    EQU   14                  RETURN REGISTER
RBASE    EQU   15     .           BASE REGISTER
TCBRBP   EQU   0                   PTR TO TOP RB ON RB QUEUE
TCBFTCTC EQU   31
TCBMSS   EQU   24
TCBPKF   EQU   28                  PROTECT KEY OF TASK
TCBTCB   EQU   116                 PTR TO NEXT TCB ON QUEUE
TCBJSCB  EQU   180 .               DISP OF JSCB PTR               20002
XMULTWT  EQU   11                  SEARCH BIT IN RB FOR MULT WAIT
XRBWT    EQU   28                  WAIT CT IN RB
VCRAD    EQU   16                  DISPLACEMENTS TO GET
VCRAD1   EQU   24                  ENTRY POINT OF VALIDITY CHK RTN
         AIF   ('&JST' NE 'Y').NOJST2                             19018
*                                                                 19018
*        REGISTER EQUATES                                         19018
*                                                                 19018
JSTQEADR EQU   1                        .J/S TQE ADDR             19018
XRTSTADR EQU   2                        .TIME NQ/DQ LINK REG      19018
PIBPTR   EQU   9                        .PIB ADDR                 19018
TIMENQ   EQU   13                       .TIMER ENQ ADDR           19018
TIMEDQ   EQU   15                       .TIMER DEQ ADDR           19018
         AIF   ('&ATTACH' NE 'Y').NATACH3                         19018
XRSAV6   EQU   6                        .WORK REG                 19018
SELREG   EQU   9                        .WORK REG                 19018
ATCBREG  EQU   10                       .ALT TCB REG              19018
.NATACH3 ANOP                                                     19018
         AIF   ('&SMF' NE 'Y').SMF2                               19018
TCTPTR   EQU   9                        .TCT ADDRESS              19018
.SMF2    ANOP                                                     19018
*                                                                 19018
*        TCB EQUATES                                              19018
*                                                                 19018
TCBPIB   EQU   124                      .PIB OFFSET               19018
         AIF   ('&ATTACH' NE 'Y').NATACH4                         19018
TCBFTJST EQU   44                       .J/S TCB OFFSET           19018
TCBNTC   EQU   128                      .SISTER TCB ADDR          19018
TCBOTC   EQU   132                      .ORIGIN TCB ADDR          19018
TCBLTC   EQU   136                      .DAUGHTER TCB OFFSET      19018
TCBFLG   EQU   173                      .TCB FLAG BYTE            19018
.NATACH4 ANOP                                                     19018
         AIF   ('&SMF' NE 'Y').SMF3                               19018
TCBTCT   EQU   164                      .TCT OFFSET               19018
.SMF3    ANOP                                                     19018
*                                                                 19018
*        TQE EQUATES                                              19018
*                                                                 19018
TQEFLGS  EQU   0                        .TQE FLAG BYTE            19018
TQEVAL   EQU   12                       .TOX/TOX REMAINING        19018
TQESAV   EQU   20                       .CPU TIME LEFT S.A.       19018
*                                                                 19018
*        MISCELLANEOUS EQUATES                                    19018
*                                                                 19018
PIBJSTQE EQU   40                      .PIB J/S TQE DISPL         19018
CVTQTE00 EQU   104                      .CVT TIME NQ ADDR OFF     19018
         AIF   ('&ATTACH' NE 'Y').NATACH5                         19018
RHOPSW   EQU   20                       .RIGHT HALF OPSW RB OFF.  19018
SVCOPSW  EQU   32                       .ADDR SVC OPSW            19018
.NATACH5 ANOP                                                     19018
         AIF   ('&SMF' NE 'Y').NOJST2                             19018
TCTWLMT  EQU   44                       .TCT J/S MAX WAIT TIME    19018
.NOJST2  ANOP                                                     19018
CSCB     DSECT                                                    20002
         IEECHAIN                                                 20002
         IEZJSCB                                                  20002
.NTCAM2  ANOP                                                     20002
         MEND
