         MACRO
         IEAATA &STORAGE,&IDENT,&PROTECT,&JBSTIME,&TRSVCTB,        I250C
               &IQE,&RESVC,&TIMER,&FLOATPT,&LCS,&EMU,&LOGTCB,          *
               &ATTACH,&SLICE                                      I250
.*2422000400,019400,021840-021960                                  LC0A
.*2422000450-000550,017900,019800                                  MO17
.*2422062100                                                       0083
.*2422,018606-019200                                               SWS
.*2422,049210-049580,049800                                        4380
.*2422062060-062120,066607-066684                                  2472
.*242000370                                                        EM94
.*000370,004200,018200,018400,018600,019004,054200-055600          I250
.*007329-007335                                                   19019
.*061300,062520,062700,063000-066700                             A26244
.*082672,082681                                                  A35004
.*054624-054656,055390-055500,055242,055360                   BD A51364
     TITLE 'IEAATA, EXIT AND TRANSIENT AREA HANDLER'
***  STATUS - CHANGE LEVEL  007                                   19572
       SPACE
.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*  19572
.*       PARAMETERS FOR IEAATA                                    19572
.*                                                                19572
.*  1    STORAGE                   PRIM      PART                 19572
.*                                                                19572
.*  2    IDENTIFY                  Y         N                    19572
.*       (EXTRA ENTRY POINTS)                                     19572
.*                                                                19572
.*  3    PROTECTION                Y         N                    19572
.*                                                                19572
.*  4   *JOB STEP TIME             Y         N                    19572
.*                                                                19572
.*  5    RES TTR TABLE FOR TYPE    Y         N                    19572
.*       III & IV SVC                                             19572
.*                                                                19572
.*  6    IQE                       NONE12    ONLY12               19572
.*                                 OTHR12    BOTH12               19572
.*                                                                19572
.*  7    RES TYPE III & IV SVC     Y         N                    19572
.*       REQUIRES RES TTR TABLE                                   19572
.*                                                                19572
.*  8    TIMER                     NOTIM     DTIME     TTIME      19572
.*                                                                19572
.*  9    FLOATING POINT REGS       Y         N                    19572
.*                                                                19572
.*  10   LARGE CORE STORAGE        Y         N                    19572
.*                                                                19572
.*                                                                19572
.*       FOLLOWING ITEMS FOR STORAGE = PART                       19572
.*                                                                19572
.*  11  *EMULATOR                  EMUY      EMUN                 19572
.*                                                                19572
.*  12   LOGTCB                    LOGY      LOGN                 19572
.*                                                                19572
.*  13   ATTACH                    ATTACH    NOATTH               19572
.*                                                                19572
.*  14  *TIMESLICE                 TSLICE    NOSLCE               19572
.*                                                                19572
.*                                                                19572
.*       NONE12     DOES NOT HAVE SPECIAL 12*                     19572
.*       ONLY12     BDAM,BTAM,ISAM                                19572
.*       OTHR12     GRAPHICS, TTIME (INTERVAL TIMER), ATTACH      19572
.*       BOTH12     ONLY12 + OTHR12                               19572
.*      *  ITEM IS TESTED AND SET ONLY IF ATTACH IS SPECIFIED     19572
.*         IF ATTACH IS NOT SPECIFIED NEGATIVE VALUE IS GIVEN     19572
.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*  19572
IEAATA00 CSECT
         SPACE
         ENTRY IEA0VL00
         ENTRY XSNTCC
         EXTRN SLMT
         ENTRY SVE                                                 0051
         ENTRY DXA                                                 0051
         ENTRY IGC003
         ENTRY VMCSZ
         ENTRY ABENDSUC                                            I250
         EXTRN IEAAPK00                                          A64472
         ENTRY SVRBPOOL,SVRB3,USERTCB .                       CE A35198
         EXTRN SVCSAV,IEA0FN00
         EXTRN SVLMT
         EXTRN SVF
         EXTRN SVCNV
         EXTRN IEA0DS
         EXTRN SVPRFX
         EXTRN SVEX
         EXTRN IEATCBP
         EXTRN AIOS
         EXTRN IEAAXSNT
         AIF   ('&LOGTCB' NE 'LOGY' ).NLOG1                       M2092
         EXTRN IEELOGWR                                           M2092
.NLOG1   ANOP                                                     M2092
         EJECT
XCTL     EQU   7 .                                            CE A35198
ABEND    EQU   13 .                                           CE A35198
XIRB     EQU   X'C0'               EITHER ONE BIT INDICATES IRB.
XLODP    EQU   X'E0'               ANY BIT ON, NOT INACTIVE PROGRAM.
XACTV    EQU   X'40'               RB AND ASSOCIATED PGM. ACTIVE.
XIQEN12  EQU   X'08'               IQE NOT 12*.
XIQE12   EQU   X'04'               IQE TYPE IS 12*.
XREG     EQU   X'20'               RB HAS 16 REGISTER SAVE AREA.
XDYN     EQU   X'02'               RB CORE IS TO BE FREED AT EXIT.
XNSVRB   EQU   X'10'               TRANSIENT SVRB.
XSVRB    EQU   X'C0'               RB IS SVRB.
PINPSW   EQU   X'68'               PROGRAM INTERRUPT NEW PSW LOCATION.
LPRB     EQU   X'20'               LPRB BIT IN RB STAB.          A27743
SVCOPSW  EQU   X'20'               SVC OLD PSW LOCATION.
XRBWAT   EQU   X'1C'                                               I250
         SPACE 2                                                   I250
***   CVT DISPLACEMENT VALUES     ***                              I250
*                                                                  I250
CVTTCBP  EQU   0                                                   I250
CVT0EF00 EQU   4              ADDR OF STAGE 2                      I250
CVTABTRM EQU   52             ABTERM ENTRY                         I250
CVTTSCE  EQU   216            TIME SLICE CONTROL ELEMENT           I250
TSCE     EQU   X'D8'                   DISP IN CVT FOR TSCE        MTS0
CVTPURG  EQU   260       CVT PTR TO SUBSYSTEM PURGE ROUTINE       21014
CVTPTR   EQU   16                      PTR TO CVT                  MTS0
CVT0DS   EQU   X'88' .        ADDR OF DISPATCHER               BD M2058
         AIF   ('&EMU' NE 'EMUY').NOEMEQU                          EM94
         SPACE 2                                                  19572
***   DISPLACEMENTS, MASKS AND REGISTERS FOR EMULATOR ***         19572
EMBIT    EQU   X'10' .        MASK TO TEST EMULATOR TCB.BIT        EM94
EMMCW    EQU   56 .                EMMCW DISPL IN MSB             19019
CVTRMS   EQU   224                                                19019
R9MSB    EQU   9 .            MSB REG                              EM94
.NOEMEQU ANOP                                                      EM94
         SPACE 2                                                   EM94
***   QUANTITY OR VALUE EQUATES    ***                             EM94
         SPACE 1                                                   EM94
Q0       EQU   0 .            VALUE OF 0                           EM94
Q1       EQU   1 .            VALUE OF 1                           EM94
Q2       EQU   2 .            VALUE OF 2                           EM94
Q3       EQU   3 .            VALUE OF 3                           EM94
Q4       EQU   4 .            VALUE OF 4                           EM94
Q5       EQU   5 .            VALUE OF 5                           EM94
         SPACE 2                                                  19572
***   GENERAL REGISTER EQUATES     ***                             EM94
         SPACE 1                                                   EM94
R0       EQU   0 .            REG 0                           CE A35198
R5       EQU   5 .            REG 5                           CE A35198
R8       EQU   8 .            REG 8                                EM94
R9       EQU   9 .            REG 9                                EM94
R1TCB    EQU   1 .            TCB REG                             19019
Z1       EQU   1                           REG  1                  I250
Z4       EQU   4                           REG  4                  I250
R4TCB    EQU   4         REGISTER4                                 I250
Z2       EQU   2         REGISTER 2                                I250
REG2     EQU   2                   REG 2                           I250
IQEIRB   EQU   8     DISP OF IRB ADDR WITHIN IQE                   I250
Z3       EQU   3         REGISTER 3                                I250
ZB       EQU   11        REGISTER 11                               I250
INPUT    EQU   2                                                   I250
OLDREG   EQU   1                                                   I250
WORK     EQU   3                                                   I250
RETURN   EQU   14                                                 21014
ENTRY    EQU   15                                                 21014
***   RB DISPLACEMENT VALUES.   ***
         SPACE 1
XRBNM    EQU   0                   NAME FIELD OF PRB, TTR IN SVRB.
XRBSZ    EQU   8                   SIZE FIELD OF RB.
XRBSIZE  EQU   9 .                                            CE A35198
XSTAB    EQU   10                  STATUS + ATTRIBUTE BYTES.
XRBUSE   EQU   12                  USE COUNT, FOR LOADED PROGRAMS.
XRBEP    EQU   12                  ENTRY POINT OF ASSOCIATED PROGRAM.
XRBPSW   EQU   16                  RB-PSW SAVE AREA.
XRBPSWIC EQU   19 .                PSW INTERRUPT CODE         CE A35198
XRBQ     EQU   24                  SECONDARY QUEUENG FIELD.
XRBLNK   EQU   28                  RB TO RB LINK FIELD.
XRBREG   EQU   32                  REGISTER SAVE AREA.
         SPACE 2
***   TCB DISPLACEMENT VALUES   ***
*
TCBRBP   EQU   0                   TCB-RB ACTIVE QUEUE LIST ORIGIN.
TCBPIE   EQU   4                   POINTER TO P.I.E.
TCBDEB   EQU   8                   DEB QUEUE LIST ORIGIN.
TCBTIO   EQU   12                  POINTER TO TASK IO TABLE.
TCBCMP   EQU   16                  COMPLETION CODE FIELD FOR ABEND.
TCBTRN   EQU   20                  FIELD FOR USE BY TESTRAN.
TCBMSS   EQU   24                  FIELD FOR USE BY MAIN STORAGE SUPVR.
TCBPKF   EQU   28                  PROTECT KEY FIELD.
TCBFLGS  EQU   28                  TCB FLAG BYTES (29-33).
TCBFLGS1 EQU   29 .                                           CE A35198
TCBPOOL  EQU   X'04' .        TCB USING ABENDSVRB POOL        CE A35198
TCBLMP   EQU   34                  LIMIT PRIORITY.
TCBDSP   EQU   35                  DISPATCHING PRIORITY.
TCBLLS   EQU   36                  ORIGIN OF LIST OF LOADED PROGRAMS.
TCBJLB   EQU   40                  JOB LIBRARY DCB POINTER.
TCBJSTCB EQU   44             JOB STEP ADDR                        I250
TCBGRS   EQU   48                  GENERAL REGISTER SAVE AREA, 10-9.
TCBFSA   EQU   112            SAVE AREA FOR SUB TASK               I250
TCBTCB   EQU   116                 TCB TO TCB LINK FIELD.
TCBTME   EQU   120                 TIMER ELEMENT POINTER.
TCBPIB   EQU   124                 TCB PIB OFFSET                  I250
TCBLTC   EQU   136            DAUGHTER TASK                        I250
TCBOTC   EQU   132                 MOTHER TCB                      I250
TCBIQE   EQU   140            IQE FOR ETXR                         I250
TCBECB   EQU   144            ECB TO POST                          I250
TCBNSTAE EQU   160 .                                               STAE
TCBDAR1  EQU   172                                                M2092
TCBDAR   EQU   173                                                19572
TCBATNDS EQU   174            FLAGS                                I250
TCBABND  EQU   X'40'                                               I250
TCBPBIT  EQU   X'01'                                               I250
TCBFC    EQU   X'80'                                               I250
TCBQEL   EQU   34             ENQUE COUNT                          I250
SVHI     EQU   75
TCBID    EQU   112
TCBWAT   EQU   33
         SPACE 2                                                  19572
ENABLE   EQU   X'FF'         ENABLE FOR PSW                       M2414
         SPACE 2                                                  19572
***      OTHER CONTROL BLOCK DISPLACEMENTS  ***
PIBJSTQE EQU   40                  J/S TQE DISPLACEMENT IN PIB     I250
TQEFLAG  EQU   0                   FLAG BYTE IN TQE                I250
FIRST    EQU   0        FIRST TIMESLICED TCB                       I250
LAST     EQU   4       LAST TIMESLICED TCB                         I250
         SPACE 4
         EJECT
***  2ND LEVEL SVC HANDLER ***
         SPACE 1
         USING SVE,12
SVE      BC    10,SVZ              Q. SVC IS NON-RESIDENT.
         LA    2,SVT               SET EXIT FROM SVRB CREATE.
         SPACE 2
***  SVRB CREATION AND GENERAL INITIALIZATION ROUTINE  ***
SVM      DS    0H
         MVC   XRBPSW(8,5),SVCOPSW STORE SVC OPSW IN CURRENT RB.
***  IEAAPS IS DEPENDENT ON SVH AT LOC SVE+14                      0051
SVH      LA    11,7                PLACE MASK IN REGISTER.
         NR    11,6                    ISOLATE EXTENDED SAVE AREA
         XR    6,11                    SIZE FROM ENTRY  POINT ADDRESS
         LA    11,11(0,11)         COMPUTE TOTAL SVRB SIZE.
         LNR   1,11                SET REG 1 NEGATIVE TO INDICATE
         ALR   1,1                 GETMAIN AND PLACE SUBPOOL 255 INTO
         ALR   1,1                 REG 0 WHILE CONVERTING SVRB SIZE
         LA    0,0(1,1)            FROM DOUBLE WORDS INTO BYTES.
         AIF   ('&STORAGE' NE 'PART').BYPMFT                       MFT2
         O     0,HIMASK       SET UP MFT2 SVRB GM FOR SUBPOOL 254  MFT2
.BYPMFT  ANOP                                                      MFT2
         LCR   0,0
         STC   0,SIZESAVE .    SAVE SVRB SIZE                  BD M7536
         SVC   10                                                  I250
         SPACE 3
*  THE FOLLOWING LTR INSTR MUST IMMEDIATELY FOLLOW THE SVC 10      I250
*       FOR THE SVRB CORE.   THIS ALLOWS AMS TO DISTINGUISH A      I250
*       REQUEST FROM THE SLIH FROM THE OTHERS.                     I250
         SPACE 2
ABENDSUC LTR   15,15               Q. IS SVRB CORE AVIALABLE       I250
         BC    8,SVK                                               I250
         AIF   ('&ATTACH' NE 'ATTACH').NOCK                        I250
         L     1,TCBJSTCB(4)      GET ADDR OF JSTCB                I250
         CR    1,4                IS THIS JOB STEP                 I250
         BE    NORM               YES-EVERYTHING OK                I250
         L     ENTRY,CVTPURG(Z3)        LOCATE SUBSYSTEM PURGE RT 21014
         LR    R1TCB,R4TCB              LOAD REG 1 WITH TCB ADDR  21014
         BALR  RETURN,ENTRY             GO TO SUBSYSTEM PURGE     21014
         L     1,TCBJSTCB(4)            RESTORE ADDR OF JSTCB     21014
         OI    TCBATNDS+1(4),TCBABND MAKE SUBTASK NON-DISP         I250
         OI    TCBFLGS+5(4),TCBPBIT  TURN ON PRIM IND              I250
         TM    TCBFLGS+1(1),X'A0'   IS JS TERMINATING              I250
         BC    8,ABTRMJS           NO-KILL THE JS                  I250
TSKSW    L     2,TCBGRS+4(4)    SAVE REG 1                         I250
         MVC   TCBGRS(24,4),TCBGRS+40(4)   MOVE REGS 10-15         I250
         ST    2,TCBGRS+24(4)    SET IN REG 1                      I250
         MVI   XRBPSW(5),ENABLE .       ENABLE PSW IN TOP RB      M4431
*                                       IN CASE WE REDISPATCH OLD M4431
         SR    0,0    GET ZERO IN REG                              I250
         BCTR  0,0   NEG VAL INDICATES TO SRCH ENTIRE TCB QUEUE    I250
         BAL   14,TASKSWIT             GO TO TSK SW                I250
****************************************************************   I250
*        LEAVE BY BRANCHING TO THE DISPATCHER                      I250
***      B     IEA0DS              BRANCH TO DISPATCHER            I250
         DC    AL4(IEA0DS)         INSTR IS                        I250
         ORG   *-4                 CONED                           I250
         DC    X'47F0'             INTO                            I250
         ORG   *+2                 STORAGE                         I250
****************************************************************   I250
ABTRMJS  LR    0,1                 SET JST ADDR                    I250
         L     1,TCBCMP(4)         SET COMPLETION CODE             I250
         L     14,CVTPTR           ADDR OF CVT                     I250
         L     14,CVTABTRM(14)     GET ABTERM ADDR                 I250
****************************************************************   I250
*        ABTERM INTERFACE                                          I250
         BALR  14,14               ABTERM THE JOB STEP             I250
****************************************************************   I250
         B     TSKSW               EXIT                            I250
NORM     EQU   *                                                   I250
.NOCK    ANOP                                                      I250
         AIF   ('&LOGTCB' NE 'LOGY' ).NLOG2                       M2092
         C     4,LGTCBPT      Q. IS THIS THE LOG TCB              19572
         BNE   NOTLOG         A.  NO STEAL CORE                   M2092
         OI    TCBDAR1(4),X'40'        SET 2NDRY DAR BIT          M2092
         L     15,LOGAD       GIVE CONTROL TO LOG ROUTINE         M2092
****************************************************************  19572
*        LEAVE BY BRANCHING TO LOG ROUTINE                        19572
         BR    15                                                 19572
LOGAD    DC    AL4(IEELOGWR)                                      M2092
****************************************************************  19572
NOTLOG   EQU   *                                                  M2092
.NLOG2   ANOP                                                     M2092
         L     Z1,USERTCB .     LOCATE POOL USER              CE A35198
         LTR   Z1,Z1 .          IS THE ABEND SVRB POOL FREE   CE A35198
         BZ    ALOCPOOL .       YES, ALLOCATE POOL            CE A35198
         CR    Z1,R4TCB .       IS CURRENT TASK USING POOL    CE A35198
         BE    ALOCRB .         YES, ALLOCATE SVRB FROM POOL  CE A35198
         TM    TCBFLGS+1(4),X'02'       CORE ALREADY STOLEN
         BZ    STLCR                    NO
SETNONDP EQU   * .                                            CE A35198
         TM    XRBLNK(5),X'FF'  IS THE WAIT COUNT 255              SWS
         BO    DXQSTCR          SKIP ADDING                        SWS
         SR    6,6                                                 SWS
         IC    6,XRBLNK(5)      GET THE WAIT COUNT                 SWS
         LA    6,1(6)           ADD ONE TO THE WAIT COUNT          SWS
         STC   6,XRBLNK(5)      REPLACE WAIT COUNT                 SWS
DXQSTCR  EQU   *                                                  21014
         L     ENTRY,CVTPURG(Z3)        LOCATE SUBSYSTEM PURGE RT 21014
         LR    R1TCB,R4TCB              LOAD REG 1 WITH TCB ADDR  21014
         BALR  RETURN,ENTRY             GO TO SUBSYSTEM PURGE     21014
         MVI   TCBWAT(4),X'01'  SET TASK PRIM NON-DISPATCHABLE    21014
         MVI   TCBDAR(4),X'40'  TURN ON THE DAR DISPACHIBILITY BIT SWS
         MVI   XRBPSW(5),ENABLE    ENABLE THIS PSW IN             M2414
*                                  CASE WE REDISPATCH OLD..       M2414
         AIF   ('&STORAGE' EQ 'PART').TAA7                          SWS
         B     DXQ              GO TO THE DISPACHER                SWS
         AGO   .TAA9                                                SWS
.TAA7    ANOP                                                       SWS
         B     DXGN                                                 SWS
.TAA9    ANOP                                                       SWS
ALOCPOOL EQU   * .                                            CE A35198
         ST    R4TCB,USERTCB .  POOL ALLOCATED TO CURRENT TCB CE A35198
ALOCRB   EQU   * .                                            CE A35198
*   ABEND MAY SET TCB ADDR WITHOUT FLAG BEING ON              CE A35198
*   INSURE THE FLAG FOR THE SVRB POOL IS ON IN THE TCB        CE A35198
         OI    TCBFLGS1(R4TCB),TCBPOOL USING POOL FLAG ON     CE A35198
************************************************************* CE A35198
         LA    Z2,Q0(Z2) .                                    CE A35198
         CL    Z2,DRETURN .     IS RETURN TO THE DISPATCHER   CE A35198
         BE    ABTERMCT .       YES, ABTERM CURRENT TASK      CE A35198
         CLI    XRBPSWIC(R5),16
         BE     ELGSVC
         CLI   XRBPSWIC(R5),XCTL IS SVC XCTL                  CE A35198
         BE    ELGSVC .     YES, SVC ELIGIBLE FOR USE OF POOL CE A35198
         CLI   XRBPSWIC(R5),ABEND IS SVC ABEND                CE A35198
         BNE   ABTERMCT .       NO, ABTERM CURRENT TASK       CE A35198
ELGSVC   EQU   * .                                            CE A35198
         LA    Z1,SVRB1 .                                     CE A35198
         CLI   XRBSIZE(Z1),Q0 . IS SVRB1 FREE                 CE A35198
         BE    SVK .            YES, USE IT                   CE A35198
         LA    Z1,SVRB2 .                                     CE A35198
         CLI   XRBSIZE(Z1),Q0 . IS SVRB2 FREE                 CE A35198
         BE    SVK .            YES, USE IT                   CE A35198
         LA    Z1,SVRB3 .                                     CE A35198
         CLI   XRBSIZE(Z1),Q0 . IS SVRB3 FREE                 CE A35198
         BE    SVK .            YES, USE IT                   CE A35198
* IF ALL POOL SVRBS ARE IN USE FREEZE THE CURRENT TASK        CE A35198
         MVI   SVRB1+XRBSIZE,Q0 FREE SVRB1                    CE A35198
         MVI   SVRB2+XRBSIZE,Q0 FREE SVRB2                    CE A35198
         MVI   SVRB3+XRBSIZE,Q0 FREE SVRB3                    CE A35198
         SR    R0,R0 .                                        CE A35198
         ST    R0,USERTCB .     FREE ABEND SVRB POOL          CE A35198
         B     SETNONDP .       FREEZE TCB                    CE A35198
ABTERMCT EQU   * .                                            CE A35198
         LR    R0,R4TCB .      INDICATE ABTERM OF CURRENT TCB CE A35198
         L     Z1,ABCOD80A SET COMPLETION CODE                CE A35198
         SVC   13                  ABEND REQUESTOR            BD A55307
STLCR    EQU   *                                                   I250
         MVI   SIZESAVE,144 .      SET SVRB SIZE FOR CLEARING  BD M7536
         L     15,TCBMSS(4)        STEAL CORE FROM PART AT 32      I250
         OI    TCBFLGS+1(4),2  BYTES FROM ORIGIN                  19572
         L     1,4(0,15)       FOR SVRB                            SWS
         AIF   ('&STORAGE' NE 'PART').MF0                          LC0A
         AIF   ('&LCS' NE 'Y').MF0                                 LC0A
         LTR   1,1                 Q.ANY CORE AVAILABLE IN PART.   LC0A
         BNZ   STEALIT             A.YES - GET IT FROM H0          LC0A
         LA    15,12(15)           ADDR. OF H1 BOUNDARY BOX IN R15 LC0A
         L     1,4(0,15)           LOWER BOUNDARY OF PART. IN R1   LC0A
STEALIT  LA    1,32(0,1)           TREAT STOLEN CORE AS SVRB       LC0A
         AGO   .MF1                                                LC0A
.MF0     ANOP                                                      LC0A
         LA    1,32(0,1)           TREAT STOLEN CORE AS SVRB       LC0A
.MF1     ANOP                                                      LC0A
         SR    0,0
         NC    0(4,15),HIMASK      CLEAR MSS FQE POINTER           LC0A
SVK      DS    0H
         IC    15,SIZESAVE .      SVRB SIZE                    BD M7536
         BCTR  15,0 .             LESS ONE FOR EXECUTE         BD M7536
         EX    15,ZEROSVRB .      ZERO SVRB,REG SAVE,ESA       BD M7536
         ST    6,XRBEP(0,1)            INIT. E.P. ADDRESS IN SVRB.
         STH   11,XRBSZ(0,1)       INIT. SIZE FIELD IN SVRB.
         MVI   XSTAB(1),XSVRB      FLAG RB AS SVRB ALSO ACTIVE,
         MVI   XSTAB+1(1),XACTV+XDYN+XREG     16REGSAVE, AND DYNAMIC.
        MVC   XRBREG(64,1),TCBGRS(4)  MOVE REGS TO SVRB.
        ST    5,XRBLNK(0,1)       ENQUEUE SVRB ON RB QUEUE.
        ST    1,TCBRBP(0,4)
        LR    5,1                 SVRB IS NOW CURRENT RB.
         BCR   15,2
         DS    0F                                                  LC0A
HIMASK   DC    X'01000000'                                         LC0A
ZEROSVRB XC    0(1,1),0(1) .      ZERO SVRB                    BD M7536
SIZESAVE DC    X'00' .            SAVE AREA FOR SVRB SIZE      BD M7536
         EJECT
***  TYPE III SVC HANDLER  ***
*
IEAATR00 DS    0H
SVZ      DS    0H
         AIF   ('&TRSVCTB' EQ 'N').TAAE
         LH    13,SVCOPSW+2        SVRB CREATE AND INITIALIZE ROUTINE.
         BAL   2,SVM
****************************************************************  19572
*        SVC CONVERT IN IEAAIH00                                  19572
**     BAL    15,SVCNV            CONVERT SVC CODE TO DECIMAL.
        SPACE
        DC    AL4(SVCNV)
        ORG   *-4
        DC    X'45F0'
        ORG   *+2
****************************************************************  19572
        SPACE
         AIF   ('&RESVC' EQ 'N').TAAE1
         SPACE 2
         CLI   XRBEP(5),X'FF'           IS TYPE 3 OR 4 RESIDENT    0051
         BNE   NOTRES                   NO-GO TO FETCH             0051
         L     13,RESLABEL         L 'RES-' PREFIX
         STM   13,14,XRBNM(1)      STORE NAME IN SVRB
         SPACE
* SET BIT 4 IN RBSTAB BYTE TO INDICATE A RESIDENT TYPE 3 OR 4      0051
* TO IEAAPS XSNT REFRESH ROUTINE                                   0051
         SPACE
         OI    XSTAB(5),X'08'           FLAG AS RESIDENT ROUTINE   0051
         B     SVU                 PREPARE TO GO TO MODULE
NOTRES   EQU   *
         SPACE 2
.TAAE1   ANOP
        LR    13,6
         LM    6,9,DXFINCH0        LOAD CONSTANTS
         SRL   13,3                ISOLATE TTR&SIZE
         LA    11,2047
         NR    11,13
         XR    13,11
         SRL   13,3
         STH   11,XRBQ(0,1)
         STH   11,XRBQ+2(0,1)
         STM   13,14,XRBNM(1)      STORE NAME IN SVRB
         ST    9,XRBEP(0,1)        STORE ENTRY POINT IN SVRB
         AGO   .TAAF
.TAAE    ANOP
**       SH    10,SLMT       CORRECT SVC TABLE INDEX FACTOR
         SPACE
         DC    AL4(SLMT)
         ORG   *-4
         DC    X'4BA0'
       ORG   *+2
         SPACE
         AL    10,ASVLMT
         IC    6,0(0,10)               GET EXTENDED SAVE AREA
         LH    13,SVCOPSW+2        RETAIN ORIGINAL SVC CODE
         BAL   2,SVM
****************************************************************  19572
*        SVC CONVERT IN IEAAIH00                                  19572
**      BAL    15,SVCNV            CONVET SVC CODE TO DECIMAL
         SPACE 1
                                                      DC  AL4(SVCNV)
                                                         ORG  *-4
                                                         DC  X'45F0'
                                                         ORG  *+2
****************************************************************  19572
         SPACE 1
         LM    6,11,DXFINCH0       GET CONSTANTS
         STM   7,8,XRBNM(1)        INITIALIZE SVRB IN CASE CURRENT
         ST    9,XRBQ(0,1)         REQUEST MATCHES XSNT CONTENTS.
         ST    11,XRBEP(0,1)
.TAAF    ANOP
         AIF    ('&TRSVCTB' NE 'Y').NOTSTTR                   BD A48693
         CLR   13,7 .        Q. CURRENT SVC RESIDES IN XSNT.     A31774
         BC    8,SVU
.NOTSTTR ANOP                                                 BD A48693
         AIF   ('&TRSVCTB' EQ 'Y').TAAG
         LR    11,14               PLACE LIBRARY NAME IN SVRB.
         STM   10,11,XRBNM(1)
         AGO   .TAAI
.TAAG    ANOP
        LR    10,5
****************************************************************  19572
*        FINCH  INTERFACE                                         19572
         BALR  8,6
SVN      DC    X'000E'             FINCH PARAMETER.
****************************************************************  19572
         AGO   .TAAJ
.TAAI    ANOP
         LR    10,5                FINCH INPUT RB REGISTER.
****************************************************************  19572
*        FINCH  INTERFACE                                         19572
         BALR  8,6
SVN      DC    X'000C'             FINCH INPUT PARAMETER FOR SVC.
****************************************************************  19572
.TAAJ    ANOP
         USING SVN,8
.*                                                                19572
.*  NOTE                                                          19572
.*                                                                19572
.*       REGISTER 8 WILL NOT CONTAIN THE INDICATED BASE           19572
.*       IF THE BALR TO FINCH WAS NOT EXECUTED                    19572
.*                                                                19572
.TAAL    AIF   ('&TRSVCTB' EQ 'Y').TAAM
         MVC   XSNTSIZ(4),XRBQ(10) STORE CURRENT XSNT LOAD SIZE.
.TAAM    ANOP
SVU      DS    0H
        OI    XSTAB(5),X'10'      FLAG SVRB AS TRANSIENT.
SVT     LM    0,1,XRBREG(5)        LOAD PARAMETER REGISTERS.
         LM    13,15,XRBREG+52(5)  LOAD SVC PARAMETER REG.
         L     6,XRBEP(0,5)
         BALR  14,6
DEXIT    SVC   3
         DROP 8
         EJECT
         AIF  ('&IQE' EQ 'NONE12' OR '&IQE' EQ 'OTHR12').TACE
TSRET    DC    V(INT025)           IOS 12*-RETURN ROUTINE ADDR.
.TACE    ANOP
ASVLMT   DC    A(SVLMT)
DXFINCH0 DC    A(IEA0FN00)
XSNTCC   DC    XL8'00'             NAME ASSOCIATED WITH CURRENT XSNT.
         AIF   ('&TRSVCTB' EQ 'Y').TAAS
XSNTSIZ  DC    F'0'                CURRENT XSNT PGM. SIZE.
         DC    C'IGC0'             STANDARD LEFT-HALF SVC NAME.
.TAAS    ANOP
XSNTLDEP DC    A(IEAAXSNT)         TRANSIENT AREA ENTRY POINT.
         AIF   ('&RESVC' EQ 'N').TAAS1
         SPACE 2
RESLABEL DC    C'RES-'             SVRB NAME PREFIX
         SPACE 2
.TAAS1   ANOP
         EJECT
***  EXIT PROGRAM  ***
         SPACE 2
IEAAXT   DS    0D
IGC003   DS    0H
**      L     12,SVEX              SET BASE ADDRESS.
         SPACE
         DC    AL4(SVEX)
         ORG   *-4
         DC    X'58C0'
         ORG   *+2
         SPACE
**      MVC   TCBGRS(64,4),SVCSAV  ,OVE REGISTERS TO TCB.
         SPACE
         DC    X'D23F'
         DC    AL4(SVCSAV)
         ORG   *-4
         DC    AL2(X'4000'+TCBGRS)
         ORG   *+2
         SPACE
**      NI     SVF+1,X'0F'         RESET SVC TYPE 1 SWITCH
         SPACE 1
                                                      DC    AL4(SVF+1)
                                                             ORG   *-4
                                                         DC    X'940F'
                                                             ORG   *+2
         CLC   SVCOPSW+5(3),APK+1                                 66784
         BNE   STAECK                                              4380
         L     14,TCBPIE(0,4)      GET P.I.E. ADDRESS.
         MVI   0(14),0             FLAG P.I.E. 'RE-ENTRANT'.
         LM    13,2,8(14)          RESTORE P.I.E. REGISTERS.
         ST    13,SVCOPSW+4        INITIALIZE RESUME ADDRESS.
         LM    3,13,TCBGRS+12(4)   RESTORE REMAINING REGISTERS.
****************************************************************  19572
*        RETURN CONTROL TO P/P AFTER SPIE                         19572
         LPSW  SVCOPSW
****************************************************************  19572
STAECK   EQU   *                                                   4380
         LA    7,TCBNSTAE(4) .         TCBNSTAE FIELD ADDRESS      4380
         LR    10,15 .                 SAVE POSSIBLE RETURN CODE A50257
STAELOOP L     8,0(7) .                SCB ADDRESS POINTER         4380
         LTR   8,8 .                   Q. SCB PRESENT              4380
         BZ    DXA   .                 NO, BRANCH                  4380
         CLC   1(3,4),13(8) .          Q. EXITING PGM ISSUE STAE   4380
         BE    FREESCB .               YES, BRANCH                 4380
         CLC   13(3,8),XRBLNK+1(5) .   Q. PREVIOUS PGM ISSUE STAE  4380
         BNE   DXA   .                 A=NO, BRANCH                4380
         TM    8(8),X'80' .            Q. PGM XCTL                 4380
         BO    FREESCB .               A=YES, BRANCH               4380
         LR    7,8 .                   UPDATE SCB ADDRESS POINTER  4380
         B     STAELOOP .              BR TO CONTINUE SCB SEARCH   4380
         SPACE 1
FREESCB  LA    1,0(8) .                SET ADDR FOR FREEMAIN       4380
         MVC   0(4,7),0(8) .           UPDATE SCB ADDR POINTER     4380
         L     0,SP253 .               SUBPOOL 253 LENGTH 16      M1930
         SVC   10 .                    FREE SCB                    4380
         B     STAELOOP .              BR TO CONTINUE SCB SEARCH   4380
         DS    0F .                                               M1930
SP253    DC    X'FD000010' .           SUBPOOL MASK FOR 253       M1930
APK      DC    A(IEAAPK00)                                        66784
         SPACE 1
DXA                                    DS   0H
         LR    15,10 .                 RESTORE 15 - RETURN CODE  A50257
         LR    10,5
         L     13,XRBLNK(10)       GET NEXT RB ADDRESS.
         TM    XSTAB(10),XIRB      Q. RB IS IRB OR SIRB.
         BC    4,DXB
         AIF   ('&IDENT' EQ 'N').TAAZ
         BC    7,DXC               Q. RETURNOR IS NOT PRB.
         TM    XSTAB(10),XNSVRB   Q. RB IS NON-LOADED 'MAJOR'.
         BC    14,DXO             BR-NO
         TM    XSTAB(10),LPRB      IS THIS AN LPRB?              A27743
         BC    14,NOTLPRB1 .       NO                            A32098
         CLI   XRBUSE(10),0 .      USE COUNT EQUAL ZERO          A32098
         BNE   DXO .               NO - DON'T FREE MINORS        A32098
NOTLPRB1 EQU   * .                                               A32098
         NI    XSTAB(10),255-XNSVRB  TURN OFF 'MAJOR' INDICATOR.
         L     11,XRBQ(0,10)       GET FIRST 'MINOR' RB.
DXP      LA    0,8(0,11)           POINT TO NAME TO BE DELETED.
         MVI   XSTAB+8(11),X'20'   REMOVE MINOR FLAG FOR DELETE.
         LR    5,15         SAVE RETURN CODE                    SA74776
         SVC   9                   DELETE 'MINOR'.
         LR    15,5         RESTORE RC                          SA74776
         LR    5,10         RESTORE PRB                         SA74776
         L     11,XRBQ+8(0,11)     GET NEXT 'MINOR'.
         LTR   11,11               Q. 'MINORS' REMAIN TO DELETE.   I250
         BC    7,DXP                                               I250
.TAAZ    ANOP                                                      I250
DXO      DS    0H                                                  I250
         MVC   TCBGRS+56(4,4),XRBPSW+4(13)  SET R14 FROM RESUME    I250
DXC      EQU   * .                                            BD A42549
         CLR   13,4                Q. RETURN NOT FROM HIGHEST      I250
         BC    7,DXF                                               I250
         AIF   ('&ATTACH' NE 'ATTACH').ATCOM                       I250
         TM    TCBATNDS+1(4),TCBFC  RETURN FROM SUB-TASK END       I250
         BZ    TIME1          NO-GO TERMINATE                      I250
         SPACE 3
*THE FOLLOWING CODE IS EOT WHICH GETS CONTROL ONLY FOR TERM'D      I250
*SUBTASKS. IT COULD BE CONSIDERD A RES LOAD OF ABEND. IT HANDLES   I250
*THE POSTING OF ECB, SCHED OF ETXR AND FREEING THE TCB.            I250
*WHEN THIS CODE IS ENTERED ONLY ABEND'S SVRB SHOULD BE ON RB Q     I250
         L     11,TCBECB(4)   GET ECB ADDR                         I250
         LTR   11,11          ANY ECB                              I250
         BZ    GODISP         NO                                   I250
         LR    8,12                    SAVE BASE OVER POST         I250
         TM    Q0(ZB),X'40' .      Q. IS ECB ALREADY POSTED    BD M2058
         BZ    GOTOPOST .          NO GO POST ECB              BD M2058
         L     R0,TCBOTC(4) .      TCB ADDR TO ABTERM - MOTHER BD M2058
         L     R9,CVTPTR .         CVT ADDR                    BD M2058
         L     ENTRY,CVTABTRM(R9) .ABTERM ADDR                 BD M2058
         L     Z1,CODE103 .        SET 103 ABEND CODE          BD M2058
         BALR  RETURN,ENTRY .      GO TO ABTERM                BD M2058
         OI    TCBFLGS+5(4),TCBPBIT SET THIS TCB               BD M2058
         OI    TCBATNDS+1(4),TCBABND .           NONDISPATCHABLE  M2058
         MVI   XRBPSW(R5),ENABLE . ENABLE RESUME PSW IN CASE   BD M2058
*                                  REDISPATCH OF THIS TCB AS WAIT TASK
         SR    R0,R0 .             SET TASK SWITCH INPUT REG   BD M2058
         BCTR  R0,R0 .             SO THAT SEARCH STARTS AT CVTHEAD
         L     RETURN,CVT0DS(R9) . SET RETN ADDR TO DISPATCHER BD M2058
         B     TASKSWIT .               TO TASK SWITCH         BD M2058
GOTOPOST EQU   * .                                             BD M2058
         L     15,POSTBREP         GET BR ENTRY PT OT POST         I250
         L     12,TCBOTC(4) .      GET MOTHER                  BD M2058
         L     10,TCBCMP(4)   COMPL CODE                           I250
****************************************************************   I250
*        POST  - BRANCH ENTRY POINT                                I250
         BAL   14,4(15)            BYPASS VALIDITY CK              I250
         LR    12,8                    RESTORE BASE                I250
****************************************************************   I250
GODISP   EQU   *                                                   I250
POSTFIX  EQU   *                                                   I250
         SR    0,0            ZERO REG                             I250
         L     1,TCBRBP(4)    GET ADDR OF RB                       I250
         MVC   TCBGRS(24,Z4),XRBREG+40(Z1)  MOVE REGS IN           I250
*                                   DISP ORDER FROM RB             I250
         MVC   TCBGRS+24(40,Z4),XRBREG(Z1)  TO TCB                 I250
         ST    0,TCBRBP(4)    NO MORE RBS                          I250
         LH    0,XRBSZ(1)     GET RB LNG                           I250
         SLL   0,3            CONVERT TO BYTES                     I250
         O     0,SUB240            INDICATE SUBPOOL 240            I250
         FREEMAIN R,LV=(0),A=(1)  FREE RB CORE                     I250
         L     1,TCBIQE(4)    GET IQE ADDR FOR ETXR                I250
         LCR   1,1            MAKE NEG                             I250
         BZ    TCBOFFQ        NO ETXR ASKED FOR                    I250
STAGE2   L     14,CVTPTR           CVT ADDR                        I250
         L     14,CVT0EF00(14)     ADDR OF STAGE 2                 I250
****************************************************************   I250
*        STAGE II EXIT EFFECTOR                                    I250
         BALR  14,14               GO SCHED ETXR                   I250
****************************************************************   I250
TCBOFFQ  L     0,TCBTCB(4)         ADDR OF TCB BELOW ENDOR         I250
         L     1,AHEAD             GET ADDR MS                     I250
REMOVE   C     4,TCBTCB(1)         DOES THIS TCB PT TO ENDOR       I250
         BZ    REPLTCB             YES                             I250
         L     1,TCBTCB(1)         GET NEXT TCB ON Q               I250
         B     REMOVE              LOOP                            I250
REPLTCB  ST    0,TCBTCB(1)         REMOVE TCB FROM Q               I250
         L     REG2,NEW            GET NEW-OLD PTR                 I250
         XC    Q0(Q4,REG2),Q0(REG2) ZERO NEW                  BD A51364
         L     R0,AHEAD .          SET OLD AS HIGHEST         BD A51364
         ST    R0,Q4(REG2) .                   PRIORITY TCB   BD A51364
         AIF   ('&SLICE' NE 'TSLICE').POST                         I250
         SPACE 3
*RESET THE TSCE AS FOLLOWS IF ENDOR IS TIMESLICED                  I250
* ENDOR IS FIRST AND LAST-SET FIRST,LAST AND NEXT TO 0             I250
* ENDOR IS FIRST BUT NOT LAST-SET FIRST TO TCB BELOW ENDOR         I250
* ENDOR LAST BUT NOT FRST-SET LAST TO TSK THAT POINTD TO ENDOR     I250
         TM    TCBFLGS+2(4),X'01'  IS TASK TIME SLICED             I250
         BZ    CKECB               NOT SLICED                      I250
         L     14,CVTPTR                                           I250
         L     14,CVTTSCE(14)      GET ADDR OF TSCE                I250
         SR    15,15               GET REGS TO HOLD                I250
         SR    0,0                 DISP PRIORITIES                 I250
         IC    15,FIRST(14)        SAVE HI PR FIELD                I250
         IC    0,LAST(14)          SAVE LO PR FIELD                I250
         L     2,FIRST(14)         IS ENDOR BEGINNING OF GROUP     I250
         LA    2,0(2)              CLEAR BYTE                      I250
         CR    4,2                 CK ADDR OF ENDOR                I250
         BNE   NOTFIRST            NOT FIRST IN GROUP              I250
         L     2,LAST(14)          GET LAST                        I250
         LA    2,0(2)              CLR BYTE                        I250
         CR    4,2                 ALSO LAST                       I250
         BNE   FIRNOTLT            NO                              I250
         XC    FIRST(12,14),FIRST(14) ZERO ALL THREE TSCE FIELDS   I250
         B     RESPRI              GO FIX UP PRIORITY FIELDS       I250
FIRNOTLT MVC   FIRST(4,14),TCBTCB(4) SET FIRST NEXT TCB            I250
         B     RESPRI                                              I250
NOTFIRST L     2,LAST(14)          GET LAST IN GROUP               I250
         LA    2,0(2)              CLR BYTE                        I250
         CR    4,2                 IS ENDOR LAST                   I250
         BNE   CKECB2                                            A72089
         ST    1,LAST(14)          REG 1 TCB THAT PTED TO ENDOR    I250
RESPRI   STC   15,FIRST(14)                                        I250
         STC   0,LAST(14)                                          I250
CKECB2   L     2,8(14)                 NEXT TSCE                 A72089
         LA    2,0(2)                  NEXT TIME                 A72089
         CR    4,2                     EQUAL                     A72089
         BNE   CKECB                   NO                        A72089
         MVC   9(3,14),FIRST+1(14)     SET TO FIRST              A72089
CKECB    EQU   *                                                   I250
.POST    ANOP                                                      I250
         AIF   ('&SLICE' NE 'TSLICE' AND '&JBSTIME' NE 'Y').ZUGYPT I250
         AIF   ('&JBSTIME' NE 'Y').NOJST                           I250
         L     Z1,TCBPIB(R4TCB)    GET PIB OF ENDOR                I250
         LA    Z1,0(Z1)            CLEAR HI BYTE                   I250
         LTR   Z1,Z1               Q. IS THERE A PIB               I250
         BZ    NOJST               A. NO                           I250
         TM    PIBJSTQE(Z1),X'80'  Q. VALID J/S TQE                I250
         BZ    NOJST               A. NO                           I250
         L     Z1,PIBJSTQE(Z1)     GET ADDR OF J/S TQE             I250
         LA    Z1,0(Z1)            CLEAR HI BYTE                   I250
         TM    TQEFLAG(Z1),X'08'   Q. REAL (WAIT) TQE              I250
         BO    NOJST               A. YES                          I250
         L     Z3,ADTIMDQ          A. NO GET ADDR TIMER DQ RTN     I250
*****************************************************************  I250
*        TIMER DEQ                                                 I250
         BALR  Z2,Z3               GO TO DEQ J/S TIME TQE          I250
*****************************************************************  I250
NOJST    EQU   *                                                   I250
         AIF   ('&SLICE' NE 'TSLICE').NTSL                         I250
.NOJST   ANOP                                                      I250
         TM    TCBFLGS+2(4),X'01'  IS TERM'D TSK T-S'D             I250
         BZ    RESTORER            NO - CK TSK STORED AS OLD       I250
         L     13,ADTIMDQ          GET ADDR OF TIMER DEQ RTN       I250
         L     1,TSTQE             GET T-S TQE                     I250
****************************************************************   I250
*        TIMER DEQ                                                 I250
         BALR  2,13                GO DEQ T-S TQE                  I250
**************************************************************     I250
RESTORER EQU   *                                                   I250
.NTSL    ANOP                                                      I250
.ZUGYPT  ANOP                                                      I250
         L     Z1,AHEAD .              ADDR OF IEAHEAD        BD A51364
         LM    2,9,TCBGRS+32(1)        SET REGS FOR DISP           I250
****************************************************************   I250
*        LEAVE BY BRANCHING TO THE DISPATCHER                      I250
***      B     IEA0DS   GO TO THE DISPATCHER                       I250
         SPACE
         DC    AL4(IEA0DS)                                         I250
         ORG   *-4                                                 I250
         DC    X'47F0'                                             I250
         ORG   *+2                                                 I250
**************************************************************     I250
         SPACE
TIME1    L     1,TCBLTC(4)    ANY SUBTASKS STILL ABOUT             I250
         LTR   1,1                                                 I250
         BNE   ABND1          YES-AN ABNORMAL END                  I250
         C     4,TCBJSTCB(4)  IS THIS THE JOB STEP                 I250
         BE    NORMEND        YES                                  I250
         SR    1,1                                                 I250
         IC    1,TCBQEL(4)    ENQUE CNT                            I250
         LTR   1,1            ANY QELS                             I250
         BZ    NORMEND                                             I250
**************************************************************     I250
*        LEAVE  BY ABNORMAL TERMINATION (ABEND)                    I250
         L     1,ABENQ        CODE C03                             I250
         SVC   13             ABEND                                I250
ABND1    L     1,ABDESC       CODE A03                             I250
         SVC   13             ABEND                                I250
**************************************************************     I250
NORMEND  EQU   *                                                   I250
.ATCOM   ANOP                                                      I250
         OI    TCBFLGS+1(4),X'40'  FLAG TCB NORMAL RETURN.
         SR    1,1                 SET UNIQUE ABEND CODE IN REGISTER 1.
         BCTR  1,0
**************************************************************     I250
* LEAVE   BY CALLING SVC 13 FOR NORMAL TERMINATION                 I250
         SVC   13
**************************************************************     I250
DXF      DS    0H
         NI    XSTAB+1(10),255-XACTV   DEACTIVATE RETURNING RBBD A42549
         ST    13,TCBRBP(0,4)      DEQUEUE CURRENT RB.
         TM    XSTAB(10),LPRB .    IS IT LPRB                    A32098
         BNO   NOTLPRB2 .          NO                            A32098
         AIF   ('&IDENT' EQ 'N').NOIDENT                          M0484
         CLI   XSTAB(10),XLODP .   IS IT A MINOR LPRB ?           M0484
         BE    DXE .               YES - DONT FREE                M0484
.NOIDENT ANOP                                                     M0484
         CLI   XRBUSE(10),0 .      USE COUNT EQUAL 0             A32098
         BNE   DXE .               NO - DON'T FREE               A32098
         L     1,XRBSZ(0,10) .     GET SIZE                      A32098
         SRL   1,16 .              ISOLATE                       A32098
         LA    1,1(0,1) .          ADD CHAIN FIELD               A32098
         SLL   1,3 .               MULT BY 8                     A32098
         LR    0,1 .               INTO REG 0 FOR FREEMAIN       A32098
         LA    1,8 .               CHAIN LENGTH                  A32098
         SR    10,1 .              ADDRESS XRBSUS FIELD          A32098
         LM    7,8,0(10) .         DEQUEUE                        M0484
         ST    7,0(0,8) .                  LPRB FROM              M0484
         ST    8,4(0,7) .                            LOADLIST     M0484
         B     FREERB .            FREE THE CORE                 A32098
NOTLPRB2 EQU   * .                                               A32098
         TM    XSTAB(10),XLODP     RETURNOR IS NOT NORMAL PRB.
         BC    7,DXM
         OI    XSTAB+1(10),XDYN    CAUSE RB CORE TO BE FREED.
.TABK    ANOP
DXM      TM    XSTAB+1(10),XREG+XDYN Q. ABNORMAL ACTION REQUIRED
       BC      8,DXE               Q. RB CORE IS NOT TO BE FREED
         BC    4,XLCS2              Q.RB DOES NOT HAVE SAVE AREA   LCOA
         MVC   TCBGRS+8(52,4),XRBREG+8(5)  MOVE RB REGS TO TCB.
XLCS2    EQU   *
         AIF   ('&LCS' NE 'Y').MF5                                 LCOA
         TM    XSTAB(10),X'F0'          Q.IS RETURNOR NORMAL PRB   LCOA
         BNZ   DXN                        NO-BRANCH                LCOA
         TM    XSTAB(10),X'02'          Q.SCATTER RB WITH XLIST    LCOA
         BZ    DXN                        NO-BRANCH                LCOA
         L     0,32(10)                 H0 BLOCK SIZE              LCOA
         LTR   0,0                      Q.MODULE RESIDE ALL IN H1  LCOA
         BZ    XLCS1                      YES-BRANCH               LCOA
         L     1,40(10)                 H0 BLOCK ADDRESS           LCOA
         SVC   10                       FREE H0 BLOCK              LCOA
XLCS1    EQU   *                                                   LCOA
         L     0,36(10)                 H1 BLOCK SIZE              LCOA
         LTR   0,0                      Q.MODULE RESIDE ALL IN H0  LCOA
         BZ    DXN                        YES-BRANCH               LCOA
         L     1,44(10)                 H1 BLOCK ADDRESS           LCOA
         SVC   10                       FREE H1 BLOCK              LCOA
.MF5     ANOP                                                      LCOA
DXN      L     0,XRBSZ(0,10)
         SRL   0,16
         SLL   0,3
FREERB   EQU   * .                                               A32098
         LA    10,0(10)                                         SA75076
         LA    1,SVRB3             LAST                         SA75076
         CR    10,1                                             SA75076
         BH    FREERB2             NOT SVRB POOL                SA75076
         LA    1,SVRB1                                          SA75076
         CR    10,1                                             SA75076
         BL     FREERB2                                        @SA76398
         MVI   XRBSIZE(10),0                                    SA75076
         CLI   SVRB1+XRBSIZE,0                                  SA75076
         BNE   DXE                                              SA75076
         CLI   SVRB2+XRBSIZE,0                                  SA75076
         BNE   DXE                                              SA75076
         CLI   SVRB3+XRBSIZE,0                                  SA75076
         BNE   DXE                                              SA75076
         XC    USERTCB(4),USERTCB                               SA75076
         B     DXE                                              SA75076
FREERB2  EQU   *                                                SA75076
         FREEMAIN R,LV=(0),A=(10)
DXE      DS    0H
         SPACE
         AIF   ('&STORAGE' EQ 'PRIM').TACG                         1546
***            PLACE TCB REGS IN 10-9 SEQUENCE                  ***1546
         SPACE
         LR    15,4           PUT CURRENT INTO R15                 1546
         LM    0,9,TCBGRS(15)                                      1546
         MVC   TCBGRS(24,15),TCBGRS+40(15)                         1546
         STM   0,9,TCBGRS+24(15)                                   1546
         AIF   ('&JBSTIME' NE 'Y').SKPWJST                    BD A44046
         SPACE 1                                              BD A44046
         CLI   XRBLNK(13),Q0 .    RB STILL IN WAIT            BD A44046
         BE    DXQ1 .             NO-WAIT JS TQE CHECK        BD A44046
*                                 NOT NEEDED                  BD A44046
         LR    4,15 .             SAVE TCB ADDR FOR WAIT       BD M2051
*   ALL REGS ARE SAVED IN THE WAIT CHECK ROUTINE UPON ENTRY
*   AND RESTORED UPON EXIT
*   NOTE - REGS 2-9 MUST BE LOADED BEFORE BRANCHING TO THE DISPATCHER
*   THIS WAS DONE PRIOR WHEN SETTING THE REGS IN THE TCB
*   SINCE REG 4 IS NEEDED BY THE WAIT ROUTINE,(WITH THE TCB ADDR)
*   REG 4 MUST BE RESTORED UPON RETURN HERE BEFORE BRANCH TO DISPATCHER
         L     ZB,WJSTADDR .      ADDR OF JS TIMING RTN IN WAIT  A44046
         BALR  ZB,ZB .            GO CHECK FOR JS WAIT        BD A44046
**       CL    4,IEATCBP     Q. TASK SWITCH INDICATED          BD M2051
         SPACE
         DC    AL4(IEATCBP)                                   BD A44046
         ORG   *-4                                            BD A44046
         DC    X'5540'                                         BD M2051
         ORG   *+2                                            BD A44046
         SPACE
         BNE   RESTOR4  BRANCH IF YES                         BD A44046
DXGN     EQU   * .                                            BD A44046
         SR    R0,R0 .            INDICATE THAT A TASK SWITCH BD A44046
**       ST    R0,IEATCBP         IS REQUIRED                 BD A44046
         SPACE 1                                              BD A44046
         DC    AL4(IEATCBP) .                                 BD A44046
         ORG   *-4 .                                          BD A44046
         DC    X'5000' .                                      BD A44046
         ORG   *+2 .                                          BD A44046
         SPACE 1                                              BD A44046
RESTOR4  EQU   * .                                            BD A44046
         L     4,TCBGRS+40(4) .   RESTORE REG 4                BD M2051
DXQ1     EQU   * .                                            BD A44046
         AGO   .TACB1 .                                       BD A44046
.SKPWJST ANOP .                                               BD A44046
         SPACE 1                                              BD A44046
**       CL    15,IEATCBP     Q. TASK SWITCH INDICATED             1546
         SPACE
         DC    AL4(IEATCBP)                                        1546
         ORG   *-4                                                 1546
         DC    X'55F0'                                             1546
         ORG   *+2                                                 1546
         SPACE
         BNE   DXQ1     BRANCH IF YES                              2472
         AGO   .TACI             .                               A26244
.TACG    ANOP                                                      1546
         TM    XSTAB(13),X'D8'     Q. RB IS FOR RES. TYPE 3 OR 4
         BC    1,DXQ               BRANCH-YES
         TM    XSTAB(13),XSVRB+XNSVRB Q. RB IS SVRB FOR NON-RES
         BC    14,DXQ             BRANCH NO
         TM    XSTAB(13),X'20'
         BC    1,DXQ
         CLC   XRBNM(3,13),XSNTCC Q. SVC IS STILL IN CORE          1546
         AIF   ('&RESVC' EQ 'N').TACG1                           A26244
         BC    7,DXD            BR-NO                              1546
         AGO   .TACI4                                            A26244
.TACG1   ANOP                                                      1546
         BC    8,DXQ          BR-YES                               1546
         TM    XSTAB(13),X'D8' Q. RB IS FOR RES. TYPE 3 OR 4
         BC    14,DXD             BR-NO
         AGO   .TACI4                                            A26244
.TACI    ANOP                                                      1546
DXQ      EQU   *                                                   1546
         CLI   XRBLNK(13),0   Q. RB STILL IN WAIT                  1546
         BC    8,DXQ1         BR-NO                                1546
         SPACE
DXGN     SR    0,0            INDICATE THAT A TASK SWITCH          1546
**       ST    0,IEATCBP      IS REQUIRED                          1546
         SPACE
         DC    AL4(IEATCBP)                                        1546
         ORG   *-4                                                 1546
         DC    X'5000'                                             1546
         ORG   *+2                                                 1546
         SPACE
DXQ1     EQU   *                                                   1546
         AGO   .TACB1                                            A26224
.TACI4   ANOP                                                    A26224
DXQ      EQU   *                                                 A26224
         LR    15,4           PUT CURRENT INTO R15                 1546
         LM    0,9,TCBGRS(15)                                      1546
         MVC   TCBGRS(24,15),TCBGRS+40(15)                         1546
         STM   0,9,TCBGRS+24(15)                                   1546
.TACB1   ANOP                                                      1546
****************************************************************  19572
*        LEAVE BY BRANCHING TO THE DISPATCHER                     19572
**       B     IEA0DS                                              1546
         SPACE
         DC    AL4(IEA0DS)                                         1546
         ORG   *-4                                                 1546
         DC    X'47F0'                                             1546
         ORG   *+2                                                 1546
****************************************************************  19572
         SPACE
         AIF   ('&STORAGE' NE 'PART').TACI5                        1546
         AIF   ('&ATTACH' NE 'ATTACH').NOCONS                      I250
         DS    0F                                                  I250
POSTBREP DC    V(IEAAPT01)         BR ENTRY POINT ADDR POST        I250
ABDESC   DC    X'80A03000'                                         I250
ABENQ    DC    X'80D03000'                                         I250
CODE103  DC    X'80103000' .                                   BD M2058
         AIF   ('&EMU' NE 'EMUY').NOCONS                          19019
CS9FF    DC    X'9FF000' .         CONTROL STORE (WCS) BRANCH     19019
         DS    0H .                                                EM94
.NOCONS  ANOP                                                      I250
         AIF   ('&JBSTIME' NE 'Y').NOWAIT .                   BD A44046
WJSTADDR DS    0F .                                           BD A44046
         DC    V(JSTWAIT) .                                   BD A44046
.NOWAIT  ANOP .                                               BD A44046
         AIF   ('&LOGTCB' NE 'LOGY').NLOG3                        19572
LGTCBPT  DC    V(IEALTCB)                                         19572
.NLOG3   ANOP                                                     19572
         AIF   ('&TIMER' NE 'TTIME').TACI5                         1546
ADTIMDQ  DC    V(IEAQTD01)                                         1546
.TACI5   ANOP                                                      1546
         SPACE
         AIF   ('&STORAGE' EQ 'PART').TACJ                         1546
********** TRANSIENT REFRESH INTERFACE ROUTINE  ****************** 1546
         SPACE
DXD      EQU   *                                                   1546
         LA    6,SVE+1
         LR    5,13
         LR    10,13
         BAL   2,SVH               TO SVRB CREATE ROUTINE.
         L     11,DXFINCH0         GO TO FINCH.
****************************************************************  19572
*        FINCH  INTERFACE                                         19572
         BALR  8,11
         DC    X'000E'
****************************************************************  19572
         L     12,XRBEP(0,5)
         MVC  TCBGRS(64,4),XRBREG(5)   PLACE RESUME REGS IN TCB
         B     DXA
**********END OF TRANSIENT REFRESH INTERFACE ******************** 19572
         SPACE 4
.TACJ    ANOP                                                      0051
DXB      DS    0H
         AIF   ('&IQE' EQ 'NONE12').TABW
         TM    XSTAB+1(10),XIQEN12+XIQE12 Q. IRB'S IQE IS NOT 12*.
         BC    11,DXJ              Q. IQE IS NOT 12*.
         AIF   ('&IQE' EQ 'OTHR12').TAAA
         L     1,XRBQ(0,10)        DEQUEUE 12* FROM IRB.
         LH    7,0(0,1)
         ST    7,XRBQ(0,10)        COMPLETE 12* DEQUEUE.
         LM    2,3,4(1)            GET IOB AND DEB ADDRESSES.
**      L     5,AIOS               LOAD IOS BASE ADDR.
         SPACE
         DC    AL4(AIOS)
         ORG   *-4
         DC    X'5850'
         ORG   *+2
         SPACE
         L     11,TSRET            GET IOS 12*-RETURN ROUTINE ADDR.
         LR    6,10                SAVE REG. 10.
****************************************************************  19572
*        IOS INTERFACE FOR RETURNING 12*                          19572
         BALR  8,11                ENTER IOS 12*-RETURN ROUTINE.
****************************************************************  19572
         SPACE
**      L     12,SVEX              RE-ESTABLISH ADDRESSABILITY.
         DC    AL4(SVEX)
         ORG   *-4
         DC    X'58C0'
         ORG   *+2
         SPACE
         LR    10,6
DXL      LTR   1,7                 Q. LAST 12* FOR THIS IRB.
         BC    8,DXH
.TAAA    ANOP
DXI      DS    0H
         L     15,XRBEP(0,10)      GET IRB ROUTINE ENTRY POINT ADDRESS
         ST    15,SVCOPSW+4        AND ASSEMBLE RE-ENTRY PSW.
         LA    14,DEXIT            PLACE RETURN ADDRESS IN RETURN REG.
         L     13,XRBNM(0,10)      REINIT. SAVE AREA ADDRESS.
         TM    SVCOPSW+1,1         Q. IRB IS PROBLEM PROGRAM.
         BC    7,*+8
         MVI   SVCOPSW,0           DISABLE PSW IF IRB PRIVILEGED.
****************************************************************  19572
*        RETURN CONTROL TO IRB                                    19572
         LPSW  SVCOPSW             RE-ENTER ROUTINE.
****************************************************************  19572
DXJ      DS    0H
         AIF   ('&IQE' EQ 'ONLY12').TABW
         BC    8,DXH               Q. NO IQE'S TO BE DEQUEUED.
         L     1,XRBQ(0,10)       DEQ NON-12* IQE                  I250
         L     11,0(0,1)                                           I250
         ST    11,XRBQ(0,10)                                       I250
         CLI   XRBSZ+1(10),X'0C'  Q. DOES IRB HAVE NXT AVAIL LST   I250
         BC    12,NOFREIQE .      NO BRANCH                        I250
         TM     XSTAB(10),X'02' . Q. IS IQE FOR ETXR          BD A50004
         BO     DXK .             YES FREE IQE                BD A50004
         MVC   0(4,1),96(10)      RETURN IQE TO NXT AVAIL LIST     I250
         ST    1,96(10)                                            I250
         B     NOFREIQE .          DON'T FREE THE IQE            A38693
DXK      DS    0H .
         LA    0,16 .              IQE LENGTH                    A38693
         LA    1,0(0,1) .          IQE ADDRESS                   A38693
         SVC   10 .                FREEMAIN                      A38693
NOFREIQE EQU   * .                                               A38693
         SR    Z1,Z1 .             ZERO USE COUNT REG            A40366
         IC    Z1,XRBUSE(10) .     GET USE COUNT                 A40366
         BCTR  Z1,Q0 .             DECREMENT                     A40366
         STC   Z1,XRBUSE(10) .     STORE UPDATED USE COUNT       A40366
         L     1,4(0,11)           RESTORE REGS 0 AND 1            I250
         LTR   0,11                Q.  IRB TO BE RESCHEDULED       I250
         BC    7,DXI
.TABW    ANOP
DXH      DS    0C
         MVC   TCBGRS(64,4),XRBREG(10)  MOVE IRB REGS TO TCB.
         AIF   ('&STORAGE' EQ 'PRIM').TABZ
       AIF   ('&IQE' EQ 'NONE12').TZZA
         TM    XSTAB(10),X'80'    Q. SIRB RETURNING.
         BC    14,EXLEVIT         BR-NO
.TZZA    ANOP
       ENTRY DSYMCSW
DSYMCSW  BC    15,*+12                 THIS SW. IS SET BY ENQUE
         OI    DSYMCSW+1,X'F0'         TURN SW BACK ON
         OI    33(4),X'08'             SET TCB NONDISPATCHABLE
.TACA    ANOP
         NI    TCBFLGS+3(4),255-TCBFSIRB  FLAG TCB, SIRB NOT BUSY.
.TABZ    ANOP
TCBFSIRB EQU   X'20'               TCB, SIRB-IN-PROCESS INDICATOR.
         B     DXC .                                             A40366
         AIF   ('&IQE' EQ 'NONE12').NO12IQE                      A40366
EXLEVIT  EQU   * .                                               A40366
         CLC   XRBEP+1(3,10),TRANSREF Q. TRANSIENT AREA REFRESH  A40366
         BE    DXC .               YES-SKIP IRB TESTING          A40366
         CLI   XRBUSE(10),Q0       Q. USE COUNT GO TO ZERO       A40366
         BNZ   NOFREIRB .          NO-DON'T FREE IRB             A40366
         TM    XSTAB(10),X'02' .   Q. IRB CORE TO BE FREED       A40366
         BZ    NOFREIRB .          NO                            A40366
         L     Z1,Q0(10) .         GET PP SAVE AREA POINTER      A39451
         LA    Z1,Q0(Z1) .         CLEAR HI BYTE                 A39451
         LTR   Z1,Z1 .             Q. SAVE AREA PRESENT          A39451
         BZ    NOFRESAV .          NO                            A39451
         LA    Q0,72 .             SAVE AREA LENGTH              A39451
         SVC   10 .                FREE PP SAVE AREA             A39451
NOFRESAV EQU   * .                                               A39451
         B     DXC .               CONTINUE WITH NORMAL EXIT     A39451
NOFREIRB EQU   * .
         NI    XSTAB+1(10),X'BF' . TURN OFF ACTIVE BIT           A40366
         ST    13,TCBRBP(4) .      DEQ CURRENT RB                A40366
         B     DXE .               CONTINUE                      A40366
TRANSREF DC    AL3(SVE) .          EP IN TRANS AREA REFRESH IRB  A40366
         DS    0H .                FORCE ALIGNMENT                M6194
.NO12IQE ANOP                                                    A40366
         AIF   ('&ATTACH' NE 'ATTACH').NOFEOT                      I250
         SPACE 4
*THIS ROUTINE IS ENTERED UNDER IRB ON MOTHER AND IS USED TO        I250
*DETACH A SUB-TASK FOR WHOM THERE WAS NO ETXR OR ECB               I250
         ENTRY FEOT                                                I250
FEOT     L     1,CVTPTR       GET CVT ADDR                         I250
         L     Z1,CVTTCBP(Z1)      GET NEW-OLD ADDR                I250
         L     4,4(1)         GET OLD TCB WHO IS THIS TASK         I250
         L     5,0(4)         GET IRB ADDRESS                      I250
         LA    1,96(5)        ADDR OF ADDR OF SUB-TASK             I250
         DETACH (1)           GET RID OF SUBTASK                   I250
RETFEOT  BR    14             RETURN                               I250
.NOFEOT  ANOP                                                      I250
         DROP  12
         EJECT
***  ADDRESS VALIDITY CHECK ROUTINE  ***
         SPACE
*UPON ENTRY TO THIS ROUTINE REGISTER 7 MUST CONTAIN THE ADDRESS TO
*BE CHECKED FOR VALIDITY. REGISTER 8 MUST CONTAIN THE ROUTINE ENTRY
*POINT, AND 10 THE RETURN ADDRESS. REGISTER 9 MUST CONTAIN EITHER THE
*TCB ADDRESS OR ZERO. IF ZERO IS FOUND IN REGISTER 9 THE CURRENT TCB
*ADDRESS WILL BE RETURNED TO THE CALER IN REGISTER 9. UPON RETURN TO
*THE CALLER REGISTER 7 WILL CONTAIN THE STORAGE KEY IN THE LOW ORDER
*BYTE,LEFT ADJUSTED,AND THE CONDITION CODE WILL HAVE BEEN SET TO 8
*(AS IN BC  8,***) FOR A VALID ADDRESS.  IF THE CONDITION CODE IS OTHER
*THAN 8 THE ADDRESS BEING CHECKED HAS BEEN FOUND TO BE INVALID DUE TO
*ADDRESSING OR PROTECTION. REGISTERS 8 AND 10 WILL REMAIN TRANSPARENT.
*CALLERS TO THIS ROUTINE MUST BE PRIVILEGED. THE SYSTEM MASK IS
*UNIMPORTANT.
         SPACE
R1       EQU   7
R2       EQU   8
R3       EQU   9
R4       EQU   10
*
         USING *,R2
IEA0VL00 DS    0H
         LTR   R3,R3               Q. CALLER HAS SUPPLIED TCB ADDRESS.
         BC    7,VLA
*        L     L3,IEATCBP+4        GET CURRENT TCB ADDRESS.
         DC    AL4(IEATCBP+4)
                                                ORG   *-4
                                                DC   X'5890'
                                                ORG   *+2
VLA      DS    0H
         LA    R1,0(0,R1) .        ZERO HI BYTE                BD M2378
         CL    R1,VMCSZ            ADDRESS NOT WITHIN MACHINE RANGE.
         BCR   2,R4                RETURN TO CALLER WITH CC SET.
         AIF   ('&PROTECT' EQ 'N').TABX
         IC    R1,VLCLI+1          PREVENT POSSIBLE PROGRAM INTERRUPT.
         ISK   R1,R1               DETERMINE STORAGE KEY IN REGISTER 7.
         EX    R1,VLCLI            CONDITION CODE INDICATES VALIDITY.
         BCR   15,R4               RETURN TO CALLER WITH CC SET.
VLCLI    CLI   TCBPKF(R3),0
         AGO   .TABY
.TABX    ANOP
         SR    R1,R1
         BCR   15,R4               RETURN TO CALLER WITH CC SET.
.TABY    ANOP
VMCSZ    DS    1F
         DROP  R2
         AIF   ('&ATTACH' NE 'ATTACH').LAST                        I250
         EJECT                                                     I250
*THE FOLLOWING RTN IS USED TO DETERMINE IF A NEW ADDR IS TO BE     I250
*PLACED IN IEATCBP-NEW-WHICH WILL CAUSE A LATER TASK SWITCH.       I250
*                                                                  I250
*ENTRY CONDITIONS-                                                 I250
*        ENTERED BY BRANCH-RETURN REG IS 14                        I250
*        CALLER MUST BE  DISABLED EXCEPT FOR MACHINE CHKS          I250
*        INPUT IS IN REG 0 BUT IS MOVED TO REG 2 FOR PROCESSING    I250
*              A NEGATIVE VALUE INDICATES THAT THE ENTIRE TCB Q    I250
*              IS TO  BE SRCHED FOR THE HIGHEST PRI READY TASK     I250
*              ZERO INDICATES THAT THE READY Q IS TO BE SRCHED     I250
*              FROM THE TASK BELOW THE CURRENT TASK ON DOWN        I250
*              A POSITIVE VALUE WHICH MUST BE THE ADDR OF A TCB.   I250
*              THIS   ROUTINE DETERMINES IF THE SPECIFIED TASK     I250
*              IS TO BE  GIVEN CONTROL                             I250
* OUTPUT- NEW POSSIBLY ALTERED- REGS EXCEPT 15 ARE PRESERVED       I250
*        REGISTER 15 IS 0 IF IEATCBP WAS ALTERED                   I250
*        REGISTER 15 IS 4 IF IT WAS UNALTERED                      I250
         ENTRY TASKSWIT                                            I250
TASKSWIT DS    0H                                                  I250
         BALR  15,0                    SET UP BASE                 I250
         USING *,15                                                I250
         STM   1,3,TSSAV           SAVE REGS                       I250
         LR    2,0   MOVE VALUE INTO INPUT REG                     I250
         LTR   INPUT,INPUT         TEST TYPE OF PROC TO BE DONE    I250
         BZ    SEARCH1             FROM BELOW OLD ON DOWN          I250
         BM    SEARCH2             FROM TOP DOWN                   I250
         L     WORK,NEW                GET NEW PTR                 I250
         L     OLDREG,0(WORK)          CHECK A SPECIFIC TASK       I250
         LTR   OLDREG,OLDREG       IS NEW = 0                      I250
         BNZ   COMPP               GO COMPARE PRI USING NEW        I250
         L     OLDREG,4(WORK)          USE OLD                     I250
COMPP    CLC   TCBDSP(1,INPUT),TCBDSP(OLDREG) COMP PRTY            I250
         BH    CKDISP              TASK SPECIFIED HIGHR PRI        I250
         BL    NOSWIT              NO TASK SWITCH                  I250
         LR    WORK,OLDREG         SAVE OLD                        I250
EQLOOP   C     INPUT,TCBTCB(WORK)  DOES OLD PT TO INPUT TCB        I250
         BE    NOSWIT              YES-NO TASK SWITCH              I250
         L     WORK,TCBTCB(WORK)   GET NEXT TCB                    I250
         LTR   WORK,WORK           ANY MORE                        I250
         BNZ   EQLOOP              YES- LOOP BACK                  I250
CKDISP   TM    TCBFLGS+5(INPUT),X'FF' IS TCB DISPATCHABLE          I250
         BNE   NOSWIT              NO-NO TASK SWITCH               I250
         L     WORK,TCBRBP(INPUT)  GET TOP RB ON INPUT TCB         I250
         TM    XRBWAT(WORK),X'FF'  IS RB WAITING                   I250
         BZ    TSKSW1              NO- TASK SW WILL BE INDICATD    I250
NOSWIT   LM    1,3,TSSAV           RESTORE REGS                    I250
         LA    15,4                SET RETURN CODE                 I250
         BR    14                      RETURN                      I250
TSKSW1   L     WORK,NEW                GET NEW PTR                 I250
         ST    INPUT,0(WORK)           SET NEW TO GIVEN TCB        I250
         LM    1,3,TSSAV           RESTORE REGS                    I250
         LA    15,0                SET RETURN CODE                 I250
         BR    14                  RETURN                          I250
SEARCH1  L     WORK,NEW                                            I250
         CLC   0(4,WORK),4(WORK)       NEW = OLD                   I250
         BE    SEARCH4             A. YES SEARCH FOR NEW TASK      I250
         C     INPUT,0(4,WORK)     Q. NEW EQUALS ZERO              I250
         BNE   NOSWIT              A. NO- READY TASK WAS FOUND     I250
SEARCH4  EQU   *                                                   I250
*                                  PREVIOUSLY                      I250
         L     INPUT,4(WORK)           SRCH STRTS TCB BELOW OLD    I250
         AIF   ('&SLICE' NE 'TSLICE').NSLIC02                      I250
         TM    TCBFLGS+2(INPUT),X'01'   IS OLD A T-S'D TSK         I250
         BNO   GETNXT              NO GET NEXT                     I250
         L     INPUT,CVTPTR        YES                             I250
         L     INPUT,TSCE(INPUT)   GET ADDR OF TSCE                I250
         L     INPUT,0(INPUT)      GET FIRST IN TSCE               I250
         LA    INPUT,0(INPUT)      ZERO HOGH ORDER BYTE            I250
         B     SEARCH3             START SEARCH                    I250
.NSLIC02 ANOP                                                      I250
GETNXT   L     INPUT,TCBTCB(INPUT)                                 I250
         B     SEARCH3                                             I250
SEARCH2  L     INPUT,AHEAD         GET TOP OF Q                    I250
SEARCH3  LTR   INPUT,INPUT         MOTE TASKS                      I250
         BZ    TSKSW1              NO-SET NEW TO 0                 I250
         TM    TCBFLGS+5(INPUT),X'FF'  IS THIS TASK DISPATCHABLE   I250
         BNE   GETNXT              NO-GET NEXT TCB                 I250
         L     WORK,TCBRBP(INPUT)  GET ADDR OF TOP RB ON TCB       I250
         TM    XRBWAT(WORK),X'FF'  IS RB WAITING                   I250
         BZ    TSKSW1              NO-PLACE ITS ADDR IN NEW        I250
         B     GETNXT              LOOP                            I250
         SPACE 4                                                   I250
***            CONSTANTS USED IN THIS ROUTINE                      I250
AHEAD    DC    V(IEAHEAD)          ADDR OF TOP TASK                I250
NEW      DC    V(IEATCBP)              LOC NEW-OLD IN DISP         I250
         AIF   ('&SLICE' NE 'TSLICE').NOZXZX                       I250
TSTQE    DC    V(IEATSTQE)         ADDR OF T-S TQE                 I250
.NOZXZX  ANOP                                                      I250
SUB240   DC    X'F0000000'         SUBPOOL INDICATOR               I250
TSSAV    DC    3F'0'               SAVE AREA FOR REGS 1-3          I250
.LAST    ANOP                                                      I250
************************************************************* CE A35198
SVRBPOOL DS    0D .           ABEND SVRB POOL                 CE A35198
SVRB1    DC    18D'0' .                                       CE A35198
SVRB2    DC    18D'0' .                                       CE A35198
SVRB3    DC    18D'0' .                                       CE A35198
USERTCB  DC    F'0' .                                         CE A35198
DRETURN  DC    VL4(DISPRET) .                                 CE A35198
ABCOD80A DC    X'0080A000' .                                  CE A35198
         AIF   ('&ATTACH' NE 'ATTACH').ENDMAC
         EJECT
         TITLE  'RESIDENT SUBROUTINE OF ASYNCHRONOUS ATTACH'
*   THE FOLLOWING IS A RESIDENT SUBROUTINE OF ATTACH
         SPACE
XR0      EQU   0         WORK REGISTER
XR1      EQU   1         REGISTER 1
XRCOREAD EQU   1         ADDRESS OF  GOTTEN CORE
XR2      EQU   2         REGISTER 2
XRCVT    EQU   3         CONTROL VECTOR TABLE ADDRESS
XROTCB   EQU   4         CONTENT OF 'OLD'
XR6      EQU   6         REGISTER 6
XR7      EQU   7         REGISTER 7
XR8      EQU   8         REGISTER 8
XRATCB   EQU   10        ATTACHED TCB ADDRESS
XRBASE   EQU   11        BASE REGISTER
XRLINK   EQU   12        LINK REGISTER
XRPARA   EQU   14        INPUT PARAMETER ADDRESS
XR15     EQU   15        WORK REG 15
ZERO     EQU   X'00'                   ZERO BYTE
ONE      EQU   1                       DISPLACEMENT OF ONE
MAXTCB   EQU   X'062A'                                             I250
TBLINCR  EQU   4                        TABLE ENTRYN LENGTH        I250
X83      EQU   X'83'                    TQE AVAILIBILITY FLAG      I250
Q0A      EQU   0                                                   I250
Q4A      EQU   4                        DECIMAL EQUIVALENT 4       I250
Q8       EQU   8                        DECIMAL EQUIVALENT 8       I250
Q16      EQU   16                      ADDR OF PTR TO CVT          I250
Q32      EQU   32                      LENGTH OF F PT REG SVAREA   I250
Q80      EQU    80                     LENGTH PRB + PLIST AREA     I250
TQEDISP  EQU   192                 TQE OFFSET IN GOTTEN CORE  BD A58667
XRGQELTH EQU   13                       GQE LENGTH PTR             I250
TCBLH    EQU   192                 LENGTH OF TCB              BD A58667
TQELH    EQU   112                 LENGTH OF TQE                   I250
XAVALPTR EQU   124                 OFFSET WITHIN CVT OF PTR        I250
*                                  TO IOS TABLE WHICH CONTAINS     I250
*                                  A PTR TO THE BEG OF TCB TAB6)   I250
CVTCBTBE EQU   244                 NUMBER OF TCB TABLE ENTRIES
         EJECT
* DSECT FOR ATTACH INPUT PARAMETER (BASE REGISTER 14)
         SPACE 2
ATPRMS   DSECT
ATDEFLAG DS    CL1                     FLAG TO INDICATE ENTRY POINT
ATPGNADR DS    CL3                     ENTRY ADDRESS
ATDCBADR DS    CL4                     DCB ADDRESS
ATECBADR DS    CL1                     FLAG FOR LOGON,TASKLIB,STAI20021
         DS    CL3                     ECB ADDRESS                20021
ATGSFLAG DS    CL1                     GIVE SP FLAG INDICATE VALUE/ADR
ATGSFLD  DS    CL3                     GIVE SP VALUE OR ADDRESS
ATSHFLAG DS    CL1                     SHARE SP FLAG INDICATE VALUE/ADR
ATSHFLD  DS    CL3                     SHARE SP VALUE OR ADDRESS
ATROLL   DS    CL1                     ROLLOUT BITS                RORI
ATETXR   DS    CL3                     ETXR ROUTINE ADDRESS        RORI
ATDPMOD  DS    CL2                     DISPACHING PRIORITY VALUE
ATLPMOD  DS    CL1                     LIMIT PRIORITY VALUE
ATINDS   DS    CL1                     FLAG FOR JSCB,GIVEJPQ,      I270
*                                      KEY,SZERO,SVAREA,JSTCB,     I270
*                                      AND SM PARAMETERS           I270
ATPRGNM  DS    CL8                     PROGRAM NAME
ATJSCBAD DS    CL4                     JSCB ADDRESS                I270
ATSTPLAD DS    CL4                     STAI PARAM LIST ADDR       20021
ATEXRTAD DS    CL4                     EXIT RTN ADDR FOR STAI     20021
ATASKLIB DS    CL4                     TASKLIB DCB ADDRESS        20021
         EJECT
* ATTACH ROUTINE REQUESTOR TCB DSECT (BASE REGISTER 4)
         SPACE 2
TCBFLDSP DSECT
TCBRBPP  DS    CL4                     RB ADR
TCBPIEP  DS    CL4                     PIE ADR
TCBDEBP  DS    CL4                     DEB ADR
TCBTIOP  DS    CL4                     TASK I/O TABLE ADR
TCBCMPP  DS    CL4                     TASK COMPLETION CODE
TCBTRNP  DS    CL4                     TESTRAN FIELD
TCBNROCP DS    CL1                     NON-ROLLOUT COUNT           RORI
TCBMSSP  DS    CL3                     DATA BLOCK QUEUE ELEMENT    RORI
TCBPKFP  DS    CL1                     PROTECT KEY
TCBFLGSP DS    CL5                     FLAG BYTES
TCBQELP  DS    CL1                                                 I250
TCBDSPP  DS    CL1                     DISPACHING PRIORITY
TCBLLSP  DS    CL4                     LOADED PROGRAM LIST ADR
TCBJLBP  DS    CL4                     JOB LIBRARY DCB ADR
TCBJSEP  DS    CL4                     JOB STEP INDEX ELEMENT ADR
TCBGRSP  DS    CL64                    GENERAL REGISTER SAVE AREA
TCBIDFP  DS    CL1                      TCB ID                     I250
TCBFSAP  DS    CL3                      ADDR FIRST PP SVAREA       I250
TCBTCBP  DS    CL4                     ADR OF NEXT TCB ON READY QUEUE
TCBTMEP  DS    CL4                     ADR OF TIMER ELEMENT
TCBPIBP  DS    CL4                      ADDR OF PIB                I250
TCBNTCP  DS    CL4                     TCB'S NEXT TCB ADR
TCBOTCP  DS    CL4                     TCB'S ORIGIN TCB ADR
TCBLTCP  DS    CL4                     TCB'S LAST TCB ADR
TCBIQEP  DS    CL4                     IQE ADR FOR ETXR ROUTINE
TCBECBP  DS    CL4                     ECB ADR
TCBTSFLP DS    C                       TIME SHARING FLAGS         20021
TCBTSTSP EQU   X'80'                   INDICATES TASK IS A TIME   20021
*                                      SHARING TSK.               20021
TCBSTPCP DS    C                                                  20021
TCBTSLPP DS    C                       TIME SHARING LIMIT PRIORITY20021
TCBTSDPP DS    C                       TIME SHARING DISPAT PRIO   20021
TCBLMPP  DS    CL1                      LIMIT PRIORITY             I250
TCBRESVP DS    CL3                      ABEND INFO                 I250
TCBAQEP  DS    CL4                     ALLOCATED QUEUE ELEM. ADDR  MO17
TCBNSTAP DS    CL4                     STAE CONTROL BLOCK ADDRESS  STAE
TCBTCTP  DS    CL4                     TIMING CONTROL TABLE ADDR   STCB
TCBUSERP DS    CL4                     RESERVED                    STCB
TCBDARP  DS    CL1 DAMAGE ASSESSMENT BITS                           DAR
TCBDISPP DS    CL3                     SECONDARY DISPATCHABILITY   I270
*                                       FLAGS                      I270
TCBRESP  DS    CL4                     RESERVED                    I270
TCBJSCBP DS    CL4                     JSCB ADDRESS                I270
         DS    CL4                     RESERVED               BD A58667
         DS    CL4                     TCBIOBRC               BD A58667
         EJECT
* ATTACHED TCB DSECT (BASE REGISTER 10)
         SPACE 2
TCBFLDS  DSECT
TCBRBPA  DS    CL4                     RB ADR
TCBPIEA  DS    CL4                     PIE ADR
TCBDEBA  DS    CL4                     DEB ADR
TCBTIOA  DS    CL4                     TASK I/O TABLE ADR
TCBCMPA  DS    CL4                     TASK COMPLETION CODE
TCBTRNA  DS    CL4                     TESTRAN FIELD
TCBNROC  DS    CL1                     NON-ROLLOUT COUNT           RORI
TCBMSSA  DS    CL3                     DATA BLOCK QUEUE ELEMENT    RORI
TCBPKFA  DS    CL1                     PROTECT KEY
TCBFLGSA DS    CL5                     FLAG BYTES
TCBQELA  DS    CL1                                                 I250
TCBDSPA  DS    CL1                     DISPACHING PRIORITY
TCBLLSA  DS    CL4                     LOADED PROGRAM LIST ADR
TCBJLBA  DS    CL4                     JOB LIBRARY DCB ADR
TCBJSE   DS    CL4                     JOB STEP INDEX ELEMENT ADR
TCBGRSA  DS    CL64                    GENERAL REGISTER SAVE AREA
TCBIDF   DS    CL1                      TCB ID                     I250
TCBFSAA  DS    CL3                      ADDR FIRST PP SVAREA       I250
TCBTCBA  DS    CL4                     ADR OF NEXT TCB ON READY QUEUE
TCBTMEA  DS    CL4                     ADR OF TIMER ELEMENT
TCBPIBA  DS    CL4                      ADDR OF PIB                I250
TCBNTC   DS    CL4                     TCB'S NEXT TCB ADR
TCBOTCA  DS    CL4                     TCB'S ORIGIN TCB ADR
TCBLTCA  DS    CL4                     TCB'S LAST TCB ADR
TCBIQEA  DS    CL4                     IQE ADR FOR ETXR ROUTINE
TCBECBA  DS    CL4                     ECB ADR
TCBTSFLG DS    C                       TIME SHARING FLAGS         20021
TCBTSTSK EQU   X'80'                   INDICATES TIME SHAR TSK    20021
TCBSTPCT DS    C                                                  20021
TCBTSLP  DS    C                       TIME SHARING LIMIT PRIOR   20021
TCBTSDP  DS    C                       TIME SHARING DISPAT PRIOR  20021
TCBLMPA  DS    CL1                      LIMIT PRIORITY             I250
TCBRESV  DS    CL3                      ABEND USE                  I250
TCBAQE   DS    CL4                     ALLOCATED QUEUE ELEM. ADDR  MO17
TCBNSTAA DS    CL4                     STAE CONTROL BLOCK ADDRESS  STAE
TCBTCT   DS    CL4                     TIMING CONTROL TABLE ADDR   STCB
TCBUSER  DS    CL4                     RESERVED                    STCB
TCBDARA  DS    CL1 DAMAGE ASSESSMENT BITS                           DAR
TCBDISP  DS    CL3                     SECONDARY DISPATCHABILITY   I270
*                                       FLAGS                      I270
TCBRES   DS    CL4                     RESERVED                    I270
TCBJSCB  DS    CL4                     JSCB ADDRESS                I270
         DS    CL4                     RESERVED               BD A58667
         DS    CL4                     TCBIOBRC               BD A58667
         EJECT
         CNOP  0,8
         ENTRY RESATTCH
RESATTCH CSECT
         USING *,XR8                    RESIDENT ATTACH SUBR BASE REG
         USING ATPRMS,XRPARA            INPUT PARAMETER BASE REG
         USING TCBFLDSP,XROTCB          ATTACHOR'S TCB BASE REG
         USING TCBFLDS,XRATCB           ATTACHED TCB BASE REG
*  SEARCH TCB TABLE FOR EMPTY SLOT. IF NONE FOUND ABEND THE        I250
* REQUESTOR.  IF FOUND, RETAIN THE TCB ID TO BE PLACED IN THE      I250
* NEW TCB.                                                         I250
         SR    XR0,XR0                  CLEAR TCB COUNT REG        I250
         IC    XR0,CVTCBTBE(XRCVT)      GET NO OF TABLE ENTRIES    I250
         L     XR2,XAVALPTR(XRCVT)      GET ADDR IOS TABLE         I250
         L     XR2,Q4A(XR2)              GET ADDR 1ST TABLE ENTRY
         SR    XR6,XR6            ZERO INDEX REGISTER              I250
TCBTSRCH EQU   *                                                   I250
         L     XR1,ZERO(XR2)            TABLE ENTRY                I250
         LTR   XR1,XR1                  EMPTY SLOT                 I250
         BZ    TBLEFND                  YES - PROCEED WITH ATTACH  I250
         LA    XR6,ONE(XR6)       INCREMENT INDEX                  I250
         CR    XR6,XR0            SEARCH FINI                      I250
         BNL   INABND1                  YES - INVOKE ABEND         I250
         LA    XR2,TBLINCR(XR2)         ADDR THE NEXT SLOT         I250
         B     TCBTSRCH                 CONTINUE SEARCH            I250
INABND1  EQU   *                                                   I250
         LA    XR1,MAXTCB               EXCEEDED ALLOWABLE NUMBER  I250
*                                        OF ATTACHES               I250
         SLL   XR1,12                   POSITION ERROR CODE
         ABEND (1),DUMP
*  GET THE CORE REQUIRED FOR THE ATTACHED TCB (SP=255)             I250
         SPACE 1
TBLEFND  EQU   *                                                   I250
         L     XR0,TCBLNGTH             INDICATE LENGTH NEEDED     I250
         GETMAIN R,LV=(0)               DO GETMAIN FOR TCB         I250
         AIF   ('&FLOATPT' NE 'Y').BYPFPR                          I250
         LA    XRATCB,Q32(XR1)          INCREMENT TCB ADDR PAST    I250
*                                        FLOTING PT REG SAVE AREA  I250
         AGO   .CONMFT1                                            I250
.BYPFPR  ANOP                                                      I250
         LR    XRATCB,XR1               SET UP ATTACHD TCB DSECT   I250
.CONMFT1 ANOP                                                      I250
         ST    XRATCB,ZERO(XR2)    PUT ADDR OF ATTACHED TCB        I250
*                                        IN TCB ADDR TABLE         I250
         XC    TCBRBPA(TCBLH),TCBRBPA  ZERO NEW TCB
         AIF   ('&TIMER' NE 'TTIME').BYPTQE                        I250
         XC    TQEDISP(TQELH,XRATCB),TQEDISP(XRATCB) . CLEAR TQE   I250
         ST    XRATCB,TQEDISP(XRATCB)   STORE TCB ADDR IN TQE      I250
         MVI   TQEDISP(XRATCB),X83      INDICATE TQE AVAILABLE     I250
         LA    XR0,TQEDISP(XRATCB)      GENERATE TQE ADDR          I250
         ST    XR0,TCBTMEA              PUT TQE ADDR IN TCB        I250
         LA    XR0,TCBLH+TQELH+Q16(XRATCB) GET PSEUDO MSS PTR      I250
         LA    XR1,TCBLH+TQELH(XRATCB)                             I250
         AGO   .CAFMS                                              I250
.BYPTQE  ANOP                                                      I250
         LA    XR0,TCBLH+Q16(XRATCB)  GET PSEUDO MSS PTR           I250
         LA    XR1,TCBLH(XRATCB)                                   I250
.CAFMS   ANOP                                                      I250
         ST    XR0,TCBNROC         PUT MSS FIELD IN TCB            I250
         XC    Q0A(Q16,XR1),Q0A(XR1) ZERO TAC & ABEND APPENDAGES
*
* PROPAGATE BYTE 20                                                CPRS
*
         MVC   TCBTRNA(1),TCBTRNP
         SPACE 1
*   GET CORE FOR THE ATTACHD TCB'S PRB. (SP=240)  THEN CONSTRUCT   I250
* A GQE IN THE GOTTEN CORE AND LINK TO THE ATTACHED TCB'S MSS      I250
* FIELD.                                                           I250
*                                                                  I250
       GETMAIN R,LV=96,SP=240                                    A39714
         SPACE 1
         SR    XRLINK,XRLINK       ZERO GQE LENGTH                 I250
         LA    XRGQELTH,96            LOAD LENGTH DYN AREA       A46456
         STM   XRLINK,XRGQELTH,ZERO(XRCOREAD) PUT GQE IN DYN AREA  I250
         LA    XRCOREAD,ZERO(XRCOREAD)  ENSURE HIGH BYTE ZEROAREA  I250
         L     XR15,TCBNROC             GET PTR TO PSEUDO MSS      I250
         ST    XRCOREAD,ZERO(XR15)      STORE GQE ON QUEUE         I250
*                                        ATTACHED TCB              I250
         LA    XR0,Q8(XRCOREAD)    GET ADDR OF PRB  B              I250
         ST    XR0,TCBRBPA         STORE IN ATTAHCED TCB           I250
         SPACE 1
* GET CORE FOR THE FIRST SAVE AREA TO BE USED BY THE ATTACHED      I250
*TASK.  THIS CORE WILL BELONG TO THE ATTACHING TASK, THEREFORE,    I250
*SPECIFICATION OF A SUBPOOL OR CONTSTRUCTION OF A GQE IS           I250
*UNNECESSARY.                                                      I250
*                                                                  I250
         OC    ATETXR(3),ATETXR .    ETXR SPECIFIED?              M6197
         BNZ    IQEUSED .             YES, IQE WILL BE USED.      M6197
         OC    ATECBADR+1(3),ATECBADR+1 .IS ECB SPECIFIED         M6197
         BZ    IQEUSED .                                          M6197
* IF AN ECB IS SPECIFIED WITHOUT ETXR                             M6197
* NO IQE SAVE AREA IS GOTTEN                                      M6197
         LA    XR7,72 .            GET SAVE AREA ONLY             M6259
         B     IQENTUSE  .                                        M6197
IQEUSED  DS    0H .                                               M6197
         LA    XR7,88 .            GET SAVE AREA AND IQE          M6259
IQENTUSE DS    0H .                                               M6197
         SPACE 1
         GETMAIN R,LV=(7) .        ATTACHEE'S SVAREA AND IQE      M6259
         SPACE 1
         XC    0(72,XRCOREAD),0(XRCOREAD) ZERO SAVE AREA         A36199
         ST    XRCOREAD,TCBIDF          LOW ORDER 3 BYTE POINT     I250
*                                        TO SVAREA                 I250
         STC   XR6,TCBIDF         PUT TCBID IN ATTACHED TCB        I250
         BR    XRBASE             RETURN TO MAIN ATTACH
         DS    0F                                                  I250
         AIF   ('&TIMER' NE 'TTIME').NINTVLT                       I250
         AIF   ('&FLOATPT' NE 'Y').NFPR1                           I250
TCBLNGTH DC    X'FF000164'              LENGTH TCB, TQE & FPRSA  A58667
         AGO   .NXTCON                                             I250
.NFPR1   ANOP                                                      I250
TCBLNGTH DC    X'FF000144'              LENGTH OF TCB & TQE   BD A58667
         AGO   .NXTCON                                             I250
.NINTVLT AIF   ('&FLOATPT' NE 'Y').NFPR2                           I250
TCBLNGTH DC    X'FF0000F4'              LENGTH OF TCB & FP REG SA 58667
         AGO   .NXTCON                                             I250
.NFPR2   ANOP                                                      I250
TCBLNGTH DC    X'FF0000D4'              LENGTH OF TCB         BD A58667
.NXTCON  ANOP                                                      I250
.ENDMAC  ANOP
         MEND
