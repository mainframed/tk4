         MACRO
         IEECSUB  &GRCON,&TRCON,&CON60,&CONANR,&CON85,&CON50,&T,&PFK=0
*A321100-321484                                               MC A61227
*D321500-330000                                               MC A61227
*C342000,345500                                               MC A61227
*C321400                                                       @SA68606
         LCLA  &GRAPH,&TRANA,&TRANB,&NUMTA
&GRAPH   SETA  &GRCON
         AIF   ('&TRCON' EQ '').RRR
&TRANA   SETA  &TRCON
&TRANB   SETA  &TRCON
         AGO   .SSS
.RRR     ANOP
&TRANA   SETA  0
&TRANB   SETA  0
.SSS     ANOP
***********************************************************************
*        CONTAINS FLAGS FOR DA I/O AND SPECIAL ROUTING FLAGS          *
***********************************************************************
         SPACE
SUBDAIO  DC    X'00'               DA I/O FLAGS
SUBIOUSE EQU   X'80'               I/O ROUTINE IN USE
SUBREAD  EQU   X'40'               READ IN PROCESS
SUBWRITE EQU   X'20'               WRITE IN PROCESS
SUBEXP   EQU   X'10'               EXPECTING CONTROL RECORD
SUBPFK   EQU   X'08'               PFK WRITE IN PROCESS
SUBFLGS  DC    X'00'               SPECIAL ROUTING FLAGS
SUBACT   EQU   X'80'               EXIT TO PROC-1 IF ON
SUBINIT  EQU   X'40'               INIT SUB ON FIRST ENTRY
SUBK     EQU   X'20'               UNUSED
SUBL     EQU   X'10'               UNUSED
SUBPFKWR EQU   X'08'               WRITE PFK UPDATES TO LIB
SUBPKLIB EQU   X'04'               PF KEYS ARE SUPPORTED
SUBNUM   DC    FL2'&TRANA'         NUMBER TRANSIENT CONSOLES
         SPACE
***********************************************************************
*        THE FOLLOWING ADCONS ARE ALWAYS GENERATED                    *
***********************************************************************
         SPACE
SUBDOM   DC    A(SUBKEY)           POINTER TO DOM LIST
SUBPBASE DC    A(SUBDCMB)          POINTER TO BASE DCM
SUBTIOT  DC    A(SUBTASK)          POINTER TO TASK I/O TABLE
SUBSPACE DC    A(SUBAREA)          POINTER TO SUB WORK AREA
         SPACE
***********************************************************************
*        THESE ADCONS GENERATED IF ANY TRANSIENT DCMS ARE PRESENT     *
***********************************************************************
SUBQUE   DC    A(SUBREQ)           POINTER TO DCM REQUEST QUEUE
SUBBLDL  DC    A(SUBTTR)           POINTER TO DCM BLDL LIST
SUBBLK   DC    A(SUBDCB)           POINTER TO D A DCB
         AIF   ('&PFK' EQ '0').CVX
SUBPFKAD DC    V(IEEPFKEY)         POINTER TO PFK AREA
         AGO   .CVY
.CVX     ANOP
SUBPFKAD DC    F'0'                POINTER TO PFK AREA
.CVY     ANOP
         EJECT
***********************************************************************
*        SUB WORK AREA                                                *
***********************************************************************
SUBAREA  EQU   *                   SUB WORK AREA
SUBCXSVE DC    F'0'                CXSA SAVE AREA
SUBRGSVE DC    6F'0'               REGISTER SAVE AREA
SUBRLPTR DC    F'0'                POINTER TO TTR ELEMENT
SUBTRACK DC    F'0'                TTR OF READ/WRITE IN PROCESS
         SPACE
***********************************************************************
*        DOM ELEMENTS FOR EACH GRAPHIC CONSOLE IN SYSTEM              *
***********************************************************************
SUBKEY   EQU   *                   DOM BY PROT KEY LIST
.B       AIF   ('&GRAPH' EQ '0').C
         DC    H'0'                DOM ELEMENT
&GRAPH   SETA  &GRAPH-1
         AGO   .B
.C       DS    0F                  ALIGN TO FULL WORD BOUNDRY
         SPACE
***********************************************************************
*        DCM REQUEST ELEMENTS FOR ALL TRANSIENT CONSOLES              *
***********************************************************************
SUBREQ   EQU   *                   DCM REQUEST ELEMENTS
.F       AIF   ('&TRANA' EQ '0').G
         DC    2F'0'               REQUEST ELEMENT
&TRANA   SETA  &TRANA-1
         AGO   .F
.G       ANOP
         SPACE
***********************************************************************
*        DCM BLDL LIST FOR ALL TRANSIENT DCMS IN SYSTEM               *
***********************************************************************
SUBTTR   EQU   *                   DCM BLDL ELEMENTS
***********************************************************************
*        RMS/SER CHAN PROGS FOR ALL GRAPHIC CONSOLES IN SYSTEM        *
***********************************************************************
*
*        THESE CCW CHAINS ARE USED BY-
*           1. RMS- WHEN THE SYSTEM IS DEAD
*           2. IORMS- WHEN SWITCHING RESIDENT PACKS
*        THE FOLLOWING INSTRUCTIONS ARE IN IORMS CODE
*        SET BIT TO CAUSE PURGING OF STATUS DISPLAYS
*        OI    DCMASYNC,DCMASCAN
*        SET FULL SCREEN ON GRAPHIC CONSOLE
*        OI    DCMDSTAT,DCMDSTFL
*        STOP ROLL ON GRAPHIC CONSOLE
*        MVI   DCMRQDEL,C'Z'
*
         AIF   ('&CON60' NE 'Y').K
         AIF   ('&T' EQ 'Y').KK
         ENTRY   SUB2260
.KK      ANOP
SUB2260  DS    0D                  2260 CHAN PROG
         CCW   X'07',0,X'60',960        ERASE
         CCW   X'05',A,X'A0',1          SET FOR WRITE
         CCW   X'05',0,X'60',0          WRITE USER MESSAGE
         CCW   X'05',B,X'20',2          SET CURSOR
A        DC    X'03'                    LINE FOR MESSAGE
B        DC    X'094A'                  LINE FOR CURSOR
.K       ANOP
         AIF   ('&CONANR' NE 'Y').L
         AIF   ('&T' EQ 'Y').LL
         ENTRY   SUBAN48           3277 MODEL 1               MC  M1510
         ENTRY   SUBAN19           3277 MODEL 2               MC  M1510
.LL      ANOP
SUBAN19  CCW   WR,WCC,DATAX,1       INITIAL WRITE             MC A61227
SUBAN48  EQU   SUBAN19              3277 MODEL 1              MC A61227
         CCW   WR,BUFDATA,DATAX,3   WRITE BUFFER DATA         MC A61227
        CCW   WR,0,SLI,0          WRITE USER MESSAGE           @SA68606
BUFDATA  DC    X'11C650'            BUFFER DATA               MC A61227
WCC      DC    X'C4'                SOUND ALARM ORDERS        MC A61227
SLI      EQU   X'20'                SLI FLAG                  MC A61227
WR       EQU   X'05'                WRITE OP CODE             MC A61227
TIC      EQU   X'08'                TRANSFER IN CHANNEL       MC A61227
DATAX    EQU   X'A0'                DATA CHAIN AND SLI FLAGS  MC A61227
.L       ANOP
         AIF   ('&CON85' NE 'Y').M
         AIF   ('&T' EQ 'Y').MM
         ENTRY   SUB3066                                      MC A61227
.MM      ANOP
SUB3066  CCW   X'07',0,X'60',2     ERASE SCREEN               MC A61227
         CCW   X'27',AC,X'60',2    SET BUFFER ADDRESS         MC  M1510
         CCW   X'01',0,X'60',0     USER MESSAGE WRITE         MC  M1510
         CCW   X'0F',AC,X'60',2    SET CURSOR ADDRESS         MC  M1510
         CCW   X'0B',0,X'20',2     SOUND ALARM                MC  M1510
AC       DC    X'0E00'             LINE FOR MSG AND CURSOR    MC  M1510
.M       ANOP
         AIF   ('&CON50' NE 'Y').N
         AIF   ('&T' EQ 'Y').NN
         ENTRY   SUB2250
.NN      ANOP
SUB2250  DS    0D                  2250 CHAN PROG
         CCW   X'07',RMSA,X'60',2       SET BUFFER AND STOP
         CCW   X'01',RMSB,X'60',10      WRITE INITIAL ORDERS
         CCW   X'01',0,X'60',0          WRITE USER MESSAGE
         CCW   X'01',RMSC,X'60',4       WRITE TRANSFER ORDERS
         CCW   X'27',RMSA,X'60',2       START REGENERATION
         CCW   X'0B',0,X'20',2          SOUND ALARM
RMSA     DC    H'0'                     BUFFER START ADDRESS
RMSB     DC    X'2A822A02400008002A40'  INITIAL ORDERS
RMSC     DC    X'2AFF0000'              TRANSFER ORDERS
.N       ANOP
         SPACE
***********************************************************************
*        CONTROL BLOCKS GENERATED IF ANY TRANSIENT DCMS IN SYSTEM     *
***********************************************************************
         DS    0D                  DOUBLE WORD ALLIGNMENT
SUBDCB   DCB   DDNAME=DCMDS,MACRF=(E),DSORG=PO,DEVD=DA,RECFM=V
         DS    0D
IOB      DC    X'420000'
IOBSEN   DC    X'00'               SENSE BYTE
IOBNR    EQU   X'08'               NO RECORD FOUND
         DC    A(0)
         DC    XL6'0'
RESCNT   DC    H'0'                RESIDUAL COUNT
         DC    A(CCW)
         DC    A(SUBDCB)
         DC    2F'0'
SEEK     DC    2F'0'
CCW      DC    X'31'
         DC    AL3(SEEK+3)
         DC    X'4000'
         DC    H'5'
         DC    X'08'
         DC    AL3(CCW)
         DC    F'0'
TYPE     DC    X'00'
DATA     DC    AL3(0)
         DC    X'2000'
LENGTH   DC    H'0'
         SPACE
SUBTASK  DC    CL8' '
         DC    CL8' '
         DC    CL8' '
         DC    X'14'
         DC    X'00'
         DC    H'0'
PNTDDN   DC    CL8'DCMDS'
PNTTR    DC    XL3'00'
         DC    X'00'
PNTUCB   DS    0F
         DC    X'00'
         DC    FL3'0'
PNEND    DC    F'0'
         DS    0D
PNJEF    DC    X'80'
         DC    FL3'0'
PNXLST   DC    X'87'
         DC    AL3(PNJFCB)
PNJFCB   DS    0D
PNJNAME  DC    C'SYS1.DCMLIB '
         DC    32C' '
         DC    XL8'0'
         DC    X'88000000'
         DC    XL31'0'
         DC    X'40'
         DC    XL10'0'
         DC    X'02'
         DC    XL18'0'
         DC    X'01'
SUBVOL   DC    C'SYSRES'
         DC    XL52'0'
         SPACE
SUBECB   DC    F'0'                SPECIAL ECB FOR PFKS
SUBPFTTR DC    XL8'0'              TTR OF PFK MEMBER
         SPACE
***********************************************************************
*        EXECUTABLE BASE DCM CODE CONTAINED HERE                      *
***********************************************************************
         DS    0F                                             MH A54211
SUBDCMB  EQU   *                   BASE DCM
*
         TITLE 'IEECVDCC  BASE, DISPLAY CONTROL MODULE  (BASE DCM)'
*
*  STATUS    CHANGE LEVEL 0
*
*  FUNCTION    THIS MODULE GAINS DONTROL AUTOMATICALLY WHENEVER THE
*            STIMER ELAPSES.  IT THEN POSTS A DCM SO THAT THE TIMER-
*            INTERPRETER CAN GET IN TO ANALYZE THE SITUATION.
*
*  ENTRY POINT    THE SOLE ENTRY POINT IS AT DCMSTART, AT A DISPLACE-
*               MENT OF X'12' FROM THE BEGINNING OF THE MODULE.
*
*  INPUT    NONE
*
*  OUTPUT    NONE
*
*  EXTERNAL REFERENCES    NONE
*
*  EXITS    NORMAL    TO CALLER, VIA BR 14.
*
*           ERROR    NONE
*
*  TABLES/WORK AREAS    DISPLAY CONTROL MODULE  (DCM)
*
*  ATTRIBUTES    RESIDENT, SERIALLY REUSABLE
*
*  NOTES     THIS MODULE REFERENCES DCMTIMES, IN THE DCM, BY ITS
*            ABSOLUTE DISPLACEMENT (X'18').  A CHANGE IN THAT
*            DISPLACEMENT WOULD REQUIRE A CHANGE IN THE OI INSTRUCTION
*            REFERENCING IT.
*
DCMSTMR  DC    F'0'                TIME INTERVAL FOR STIMER
DCMSVDCM DC    F'0'                TI RTN SAVES DCM ADDR HERE
DCMUAD   DC    F'0'                TO PASS UCM ADDR
DCMIND   DC    X'00'               INDICATOR BYTE
DCMTMRST EQU   X'80'               STIMER IN EFFECT
DCMENTOP EQU   X'40'               ENTRY WAS FROM OPTIONS
DCMSWCH  EQU   X'20'               INTERNAL TIMER RTN SWITCH
DCMINTI  DC    X'00'               BYTE OF BITS FOR INTERNAL USE OF TI
DCMTMRCH EQU   X'80'               TIMER INTERVAL HAS BEEN CHANGED
DCM1FULL EQU   X'40'               AT LEAST 1 DCM HAS FULL SCREEN
DCMDYRL  EQU   X'20'               AT LEAST 1 DCM READY TO ROLL
DCMIVGCD DC    H'0'                TIME INTERVAL, IN SECONDS
DCMNEXTT DC    H'0'                TIME INTERVAL FOR NEXT STIMER MACRO
DCMSTART SAVE  (14,12)
         LR    BASERC,RF           ESTABLISH INITIAL ADDRESSABILITY
         USING DCMSTART,BASERC
         SH    BASERC,HW18         POINT BASE REG TO INITIAL DC'S
         USING DCMSTMR,BASERC
         ST    RD,DCMSVADR         SAVE AREA ADDR
         NI    DCMIND,OFFTMRST     TURN OFF STIMER RUNNING BIT
         L     UCMR4,DCMUAD        PICK UP UCM ENTRY ADDR
* THE FOLLOWING LINES NEED TO BE CHECKED CAREFULLY
* TO PICK UP DCM RIGHT AND SET CORRECT FLAG.
         L     DCMR3,XXVIII(UCMR4) PICK UP DCM ADDRESS
         OI    44(DCMR3),X'02'     SET ON TIMER ELAPSED
         TM    5(DCMR3),X'40'      TRANSIENT DCM
         BZ    AAA                 NO, BRANCH
         L     DCMR3,0(DCMR3)
         LR    2,DCMR3             LOAD T DCM ADDRESS
         SH    2,FORE              GET PREFIX
         CLC   DCMUAD+1(3),1(2)    DCM IN CORE
         BNE   CCC                 NO, BRANCH
BBB      OI    24(DCMR3),X'80'     SET ON TIMER FLAG
CCC      TM    XXIV(UCMR4),H20     BUSY BIT ON
         BO    DCMRESTR            IF SO, DO NOT POST
         CLI   Z(UCMR4),H80        DEVICE WAITING
         BE    DCMPOST             IF SO, POST
         CLI   Z(UCMR4),H00        DEVICE READY
         BNE   DCMRESTR            IF NOT, EXIT
DCMPOST  EQU   *
         LR    R1,UCMR4            SET PARAMETERS
         LA    R1,0(R1)            CLEAR HIGH BYTE
         LH    R0,HW255
         SVC   II                  POST
DCMRESTR EQU   *
         L     RD,DCMSVADR         EXIT CODING
         RETURN (14,12)
AAA      L     DCMR3,0(DCMR3)      LOAD T DCM POINTER
         B     BBB                 BRANCH TO SET ON FLAG
HW18     DC    H'18'               VALUE
HW255    DC    H'255'              VALUE
DCMSVADR DC    F'0'                TO STORE SAVE AREA ADDR
FORE     DC    H'4'                CONSTANT
*     REGISTER EQUATES
BASERC   EQU   12                  PROGRAM BASE REG
DCMR3    EQU   3                   DCM PTR REG
UCMR4    EQU   4                   UCM PTR REG
R0       EQU   0                   REGISTER 0
R1       EQU   1                   REGISTER 1
RC       EQU   12                  REGISTER 12
RD       EQU   13                  REGISTER 13
RE       EQU   14                  REGISTER 14
RF       EQU   15                  REGISTER 15
*     EQUATES
H00      EQU   X'00'               BIT SETTING
H20      EQU   X'20'               BIT SETTING
H38      EQU   X'38'
H80      EQU   X'80'               BIT SETTING
OFFTMRST EQU   255-DCMTMRST        TO TURN BIT OFF
Z        EQU   0                   NUMBER
II       EQU   2                   NUMBER
XXIV     EQU   24                  NUMBER
XXVIII   EQU   28                  NUMBER
         MEND
