         MACRO
         SGIUN00V &CCA1,&CCN1,&CCV1,&CCA2,&CCN2,&CCV2,&CCA3,           C
               &JUCB,&PUCB,&LCLS,&LCTR,&SMF,&TSO,&BCLMT           20030
         LCLA  &KCCA3                                             *UNC8
&KCCA3   SETA  K'&CCA3                                            *UNC8
.*
.*      THIS IS A MASTER SCHEDULER GROUP 0 SYSGEN MODULE WHICH
.*       GENERATES THE SYMBOLIC STATEMENTS OF THE MASTER SCHEDULER
.*       INITIALIZATION MODULE-IEEVIPL. IN ADDITION,VIA MACRO PARAMETRS
.*            1. THE SYSTEM INITIAL COMMANDS CAN BE GENERATED
.*            2. THE UNITNAMES OF THE VOLUMES FOR THE PROCEDURE LIBRARY
.*               AND THE JOB QUEUE CAN BE SPECIFIED
.*            3. THE CLASSNAME-TO WHICH THE LOG DATA SET WILL BE
.*               AUTOMATICALLY WRITTEN WHEN THE DATA SET IS FULL-CAN BE
.*                GIVEN
.*            4. THE NUMBER OF BUFFER AREAS TO BE USED BY THE LOG
.*               WRITER CAN BE INDICATED
.*
.*       THE MACRO PARAMETERS AS LISTED IN THE ABOVE PROTOTYPE STATEMNT
.*        INDICATE AS FOLLOWS-
.*            &CCA1 -THE UNITNAME FOR THE START READER COMMAND
.*            &CCN1 -A DSNAME PARAMETER FOR THE START READER COMMAND
.*            &CCV1 -A VOLUME SERIAL FOR THE START READER COMMAND
.*            &CCA2 -THE UNITNAME FOR THE START WRITER COMMAND
.*            &CCN2 -A DSNAME PARAMETER FOR THE START WRITER COMMAND
.*            &CCV2 -A VOLUME SERIAL FOR THE START WRITER COMMAND
.*            &CCA3 -SPECIFIES 'INIT' IF A START INIT COMMAND IS TO BE
.*                   CREATED
.*            &JUCB -UNITNAME FOR THE VOLUME ON WHICH THE JOB QUEUE IS
.*                   TO RESIDE
.*            &PUCB -UNITNAME FOR THE VOLUME WHICH CONTAINS THE
.*                   PROCEDURE LIBRARY
.*            &LCLS -CLASSNAME FOR THE LOG DATA SET
.*            &LCTR -THE MAXIMUM NUMBER OF RESIDENT BUFFER AREAS TO BE
.*                   USED BY THE LOG WRITER
.*             &SMF  -SMF SYSGEN OPTION PARAMETER
.*             &TSO  -TSO SYSGEN OPTION PARAMETER
.*            &BCLMT -MAXIMUM NO. OF BROADCAST RECORDS            20030
.*                   FOR TSO SEND CP/ OR ZERO IF TSO              20030
.*                   IS NOT IN THE SYSTEM                         20030
.*
.*       GIVEN ALL OF THE ABOVE PARAMETERS,THE COMMANDS-
.*            S WTR,&CCA2,DSNAME=&CCN2,VOLUME=SER=&CCV2 *
.*            S RDR,&CCA1,DSNAME=&CCN1,VOLUME=SER=&CCV1 *
.*            S INIT *
.*            WILL BE GENERATED WITHIN THE CODE OF THE INITIALIZATION
.*            MODULE- THE LOG CLASSNAME WILL BE SET TO &LCLS AND THE
.*            BUFFER COUNT SET TO &LCTR
.*                  &VALU REPLACED IN THE ABOVE BY THE INCOMING PARAM
.*
*
         TITLE ' IPL WITH MS/1 CONSOLE'
IUNVIPL  CSECT                                                    *UNCC
*IEEVIPL CSECT               (THIS CARD REPLACED)                 *UNCC
* D 068000, 079324-079360                                       SA72193
* A 064820-064980                                               SA72193
* A 046194-046284,046344,095169                                  A52614
* C 062600,093100,093300                                          M1874
* A 030820-030900,093100-093300                                  A40047
* A 088100                                                       A42562
*                                                                 M5510
*                                                                A31300
*                                                                A31761
* 000600,093400,093601,100610                                     20030
*AABA OCIP #9,REL #16
* 048600-048800                                                  A24430
*1735024600-024800,028000-028200,048000,051200,051800,052250,      OC43
*1735053000,054400,075400,079600,091600                            OC43
* 069200,076400                                                    I270
* 112430-112550                                                   M0035
* 045300,049100                                                   20071
* 095120                                                          M3230
* 046000,046630-046640,046830-046860,047090,047120                M1866
* 046080-046090,095132                                            M5381
***********************************************************************
*
*  MODULE NAME-IEEVIPL
*
*******************************************************************UNCC
*                                                                 *UNCC
*  THE FOLLOWING CHANGES HAVE BEEN MADE TO IEEVIPL:               *UNCC
*                                                                 *UNCC
*    1) CHANGE THE NAME TO IUNVIPL (THIS ROUTINE IS ONLY USABLE   *UNCC
*       WITH A CHANGE TO IEANIP0 WHICH LINKS TO THIS ROUTINE FOR  *UNCC
*       "NORMAL" IPLS                                             *UNCC
*                                                                 *UNCC
*    2) CHANGE THE NAME WHICH THIS ROUTINE ATTACHES TO INITIALIZE *UNCC
*       JOB QUE (FROM IEFQINTZ TO IUNQINTZ)                       *UNCC
*       (NOTE:IUNQINTZ IS THE SAME AS IEFQINTZ EXCEPT THAT IT     *UNCC
*        ALWAYS WILL FORMAT JOB Q AND DO SO WITHOUT DOING A WTOR) *UNCC
*                                                                 *UNCC
*    3) IT IS EXPECTED THAT THE PARM CCA3 WILL REFLECT THE START- *UNCC
*       ING OF HASP; IF SO THE FOLLOWING CMD IS ISSUED INTERNALLY *UNCC
*       BY THIS ROUTINE "S HASP,PARM=AUTO".                       *UNCC
*                                                                 *UNCC
*    4) IF HASP IS AUTOMATICALLY STARTED CODE IS INSERTED TO CHECK*UNCC
*       THE EXISTENCE OF LCS (IE HIGH ADDR IN THE MACHINE > 1MEG  *UNCC
*       IF IT EXISTS THE NORMAL START CMD IS ISSUED. IF LCS IS NOT*UNCC
*       AVAILABLE THE HASP START CMD INCLUDES A SPECIFIED REGION  *UNCC
*       AND THE PARM 'AUTO,NOINIT' (OS INITIATORS NORMALLY STARTED*UNCC
*       BY HASP USE UP MORE Q-SPACE THAN EXISTS IN THE SMALL      *UNCC
*       SYSTEM                                                    *UNCC
*          ***77252*** MODIFIED TO CHECK FOR HIERARCHY SUPPORT.   *UNC8
*       IF NO HIERARCHY, START NORMAL HASP.  IF HIERARCHY AND     *UNC8
*       MACHINE > 1 MEG, START NORMAL HASP.  IF HIERARCHY AND     *UNC8
*       MACHINE ^> 1 MEG, START SPECIAL HASP.       (SID)         *UNC8
*                                                                 *UNCC
*    5) IF THE MASTER CONSOLE IS A GRAPHICS DEVICE THEN A PROTO-  *UNCC
*       TYPE OF THE T DATE COMMAND IS PUT IN THE COMMAND LINE OF  *UNCC
*       MASTER CONSOLE (THIS PATCH IS FROM UNIV. OF IOWA)         *UNCC
*        ***77252***  IF TOD CLOCK IS SUPPORTED A REPLY COMMAND   *UNC8
*       PROMPT (RATHER THAN T DATE) IS PLACED IN THE COMMAND      *UNC8
*       LINE.      (SID)                                          *UNC8
*                                                                 *UNC8
*                                                                 *UNCC
*                                                                 *UNCC
*                                                                 *UNCC
*******************************************************************UNCC
*  FUNCTION   -THIS IS THE FIRST MODULE OF MASTER SCHEDULER. IT IS
*              RESPONSIBLE FOR SCHEDULER INITIALIZATION.
*  PROGRAM
*        FLOW -LINKS TO THE CONSOLE INITIALIZATION MODULE-IEECVCTI AND
*              POSTS THE COMMUNICATIONS TASK
*             -DETERMINES THE VOLUMES ON WHICH THE JOB QUEUE AND THE
*              PROCEDURE LIBRARY WILL RESIDE.
*             -WRITES TO THE OPERATOR THE SYSTEM 'READY' MESSAGE
*             -WRITES-TO-OPERATOR THE INITIAL COMMANDS AVAILABLE
*             -IN SYSTEMS WITH THE TOD CLOCK, WRITES TO THE OP-   20071
*              ERATOR THE CURRENT TIME OF DAY, OR ASKS HIM FOR    20071
*              SET PARAMETERS SO THAT AN INTERNAL SET COMMAND CAN 20071
*              BE ISSUED.                                         20071
*             -WAITS ON POSTING FROM THE SET DATE COMMAND
*             -OR, WAITS FOR RETURN FROM SVC 34 AFTER THE VALID   20071
*              SET COMMAND HAS BEEN PROCESSED, AND THE TOD CLOCK  20071
*              HAS BEEN SET.                                      20071
*             -MOVES THE MASTER TIOT-ASSEMBLED WITHIN THE IEEVIPL
*              MODULE INTO SUPERVISOR CORE-SUBPOOL 255
* DETERMINES WHERE THE SYS1.SYSJOBQE AND SYS1.PROCLIB DATA SETS    AABA
* RESIDE. THE UNIT AND VOLUME ARE CHOSEN IN THE FOLLOWING HIERARCHYAABA
* 1. THE UNIT SPECIFIED IN THE SET COMMAND                         AABA
* 2. THE CATALOG-THE UNIT CONTAINING THE INDICATED VOLUME          AABA
* 3. THE UNIT SPECIFIED AT SYSGEN TIME                             AABA
* 4. THE IPL VOLUME                                                AABA
*             -CATALOGS SYS1.PROCLIB
*             -SETS INTO THE TIOT THE UCB POINTERS FOR QUEUE AND PROCLB
*             -ATTACHES THE JOB QUEUE INITIALIZATION TASK -IEFQINTZ
*             -WAITS ON TASK COMPLETION
*             -DETACHES THE QUEUE INITIALIZATION TASK
*             -WRITES-TO-OPERATOR COMMANDS SELECTED THROUGH THE SET
*              DATE COMMAND AND SCHEDULES THEIR EXECUTION
*             -PASSES CONTROL TO THE MASTER SCHEDULER WAIT MODULE
*               IEEVWAIT
*              -PASSES CONTROL TO LOG INITIALIZATION VIA XCTL IF LOG
*               IS IN SYSTEM
*              -PASSES CONTROL TO SYS1.BRODCAST INITIALIZATION VIA LINK
*               IF TSO IS IN SYSTEM
*
*  ENTRY      -LINK FROM NIP -NUCLEUS INITIALIZATION
*
*  EXTERNAL   -IEECVCTI-CONSOLE INITIALIZATION
*   REFERENCES-IEEVLIN-LOG INITIALIZATION
*             -IEE0503D-WTO MESSAGE MODULE- ERROR EXIT
*             -IEEVWAIT-NORMAL EXIT
*             -IEEVSIPL-SYS1.BRODCAST INITIALIZATION              20030
*
*  ATTRIBUTES -NONREENTRANT
*             -CHARACTER DEPENDENCE-TYPE C
*
*  MACROS AND -CVT -COMMUNICATIONS VECTOR TABLE MAPPING
*    MAPPINGS -IEFVTIOT-MASTER TIOT
*             -IEEBASEA-MAPPING OF MASTER RESIDENT CORE
*             -IEEXSA-MAPPING OF EXTENDED SAVE AREA
*             -IEFUCBOB-MAPPING OF THE UNIT CONTROL BLOCK
*             -LINK                     -ATTACH
*             -GETMAIN                  -FREEMAIN
*             -WRITE-TO-OPERATOR        -DETACH
*             -POST                     -MGCR
***********************************************************************
*
*SYMBOL        VALUE     RTN USED(BY LABEL)       FOR PURPOSE
*
R0       EQU   0
R1       EQU   1
R2       EQU   2         IP500,                             WORK
R3       EQU   3         IP700
R4       EQU   4
R5       EQU   5         IP100,IP300,IP400,IP500,IP700      WORK
R6       EQU   6         IP400,IP700,                       WORK
R7       EQU   7         IP400                              WORK
R8       EQU   8         ALL                      PROGRAM BASE     OC43
R9       EQU   9         IP300,IP400,IP600,IP700  RETURN REG       OC43
R10      EQU   10        ALL                      VTIOT BASE
R11      EQU   11        ALL                      RESIDENT CORE BASE
R12      EQU   12        ALL                      CVT BASE
R13      EQU   13        ALL                      REGISTER SAVE POINTER
R14      EQU   14
R15      EQU   15
TWO      EQU   2                                                 A31761
THREE    EQU   3                                                 A31761
FOUR     EQU   4                                                 A31761
CODEDISP EQU   44       IP516                                    A31761
FOXZERO  EQU   240                                               A31761
*
*
***********************************************************************
***********************************************************************
*                                                                     *
*                               CONSTANTS USED BY TOD CLOCK       20071
*                               ROUTINE FOR OFFSETS,LENGTHS,ETC.  20071
K0       EQU   0                               **                 20071
K1       EQU   1                               **                 20071
K2       EQU   2                               **                 20071
K3       EQU   3                               **                 20071
K4       EQU   4                               **                 20071
K5       EQU   5                               **                 20071
K6       EQU   6                               **                 20071
K7       EQU   7                               **                 20071
K8       EQU   8                               **                 20071
K12      EQU   12                              **                 20071
K13      EQU   13                              **                 20071
K15      EQU   15                              **                 20071
K26      EQU   26                              **                 20071
K119     EQU   119                             **                 20071
BITS32   EQU   32                              **                 20071
SIXTY    EQU   60                  FIRST YEAR OF TOD CLOCK        20071
HEX00    EQU   X'00'               MASK FOR COND CODE 0           20071
HEX03    EQU   X'03'               MASK FOR COND CODE 2           20071
HEXDD    EQU   X'DD'               MASK FOR NO SET, INTRN SET BITS20071
BLANK    EQU   C' '                BLANK CHARACTER                20071
DOT      EQU   C'.'                'DOT' CHARACTER                20071
QUOTE    EQU   C''''               'QUOTE' CHARACTER              20071
***********************************************************************
TCBTIO   EQU   12
CAT      EQU   100                 CATALOG INDICATOR
STATUS   EQU   76                      SVC 76                     20070
*
*
***********************************************************************
*              INITIALIZE SYSTEM TO SYSTEM RESIDENCE
*                UCB POINTERS LOCATED VIA CVT
***********************************************************************
         BALR  R8,0                    SET BASE REG                OC43
         USING *,R8                                                OC43
         ST    R9,PARMSAVE             SAVE PARMLIB UCB POINTER    OC43
         B     IP001
         DC    X'EEEE'
         DC    CL8'IUNVIPL' .      MODULE IDENTIFICATION          *UNCC
         DC    X'02171969'
         DC    X'EEEE'
         SPACE
**********************************************************************
         SPACE
IP001    DS    0H
         L     R12,CVTPTR
         USING CVT,R12
         L     R11,CVTMSER
         USING BASE,R11
*                                                                A40047
* THE FOLLOWING GETMAIN IS FOR 8 BYTES OUT OF SUBPOOL 250 AND    A40047
* THE SOLE PURPOSE OF IT IS TO SET UP THE MASTER'S REGION.       A40047
* THE MASTER'S REGION, IN ORDER TO ENSURE DESIGN POINTS BEING    A40047
* MET, MUST HAVE ITS SUBPOOL 250 (0) CORE IN THE HIGHEST         A40047
* 2K SLOT OF THE MASTER'S REGION. THESE 8 BYTES WILL NEVER       A40047
* BE FREED TO KEEP THIS CONFIGURATION.                           A40047
       GETMAIN  R,SP=250,LV=8                                    A40047
         SPACE
       GETMAIN  R,SP=255,LV=72
         LR    R5,R1
         LR    R13,R1                   STANDARD SAVE PTR
*                                 CONSOLE INITIALIZATION
       LINK  EP=IEECVCTI
*
         SR    R0,R0
         LA    R1,BAIPL                 ECB ADDRESS
*
       POST  (1),(0)                    POST THE COMMUNICATIONS TASK
         LR    R1,R5
*
     FREEMAIN  R,SP=255,LV=72,A=(1)
*
*
**********************************************************************
*                            CONTINUE HERE AFTER INITIALIZATION.
IP100    EQU   *
         SPACE
         LA    R13,IPREGSV
         L     R12,CVTPTR              CVT BASE
*                                IEFJOB APPENDAGE PTR.
        L     R1,CVTJOB
         MVC   80(4,R1),CVTXAPG
*                                      DATE SIGN-CODE.
         LA    R1,15                   'F' FOR SIGN.
         ST    R1,CVTDATE
*
         L     R11,CVTMSER             MASTER RESIDENT CORE BASE
         XC    BAIPL,BAIPL             CLEARED FOR SET COMMAND.
         NI    BASFL,255-BAIN          AND CLEAR IPL SWITCH
         XC    BAQ(8),BAQ     JOBQE AND PROCLIB UCB POINTERS ZERO  AABA
***********************************************************************
*
*              WRITES READY MESSAGE TO OPERATOR, BRANCHES TO
*              COMMAND WRITE SUBROUTINE (IP700) WHICH RETURNS CONTROL
*              TO AWAIT POSTING FROM SET COMMAND
*              OR, IN SYSTEMS WITH TOD CLOCK SUPPORT, WRITES A    20071
*              MESSAGE TO THE OPERATOR TO WHICH HE MUST REPLY     20071
*              WITH SET PARAMETERS OR 'U', ISSUES AN INTERNAL SET 20071
*              COMMAND, AND WAITS FOR RETURN FROM SVC 34.         20071
*              ON RETURN FROM SVC 34, IF THE SET COMMAND IS IN-   20071
*              VALID, REISSUES THE WTOR ASKING FOR SET PARAMETERS.20071
*              NOTES.STOP AREA IS PRESET FOR NO STOPS=ALL N'S AND
*                    FLAG SET TO WTO ONLY ON ENTERING COMMAND WRITE
*                    SUBROUTINE
*                   .STOP AREA MADE AVAILABLE TO STOP COMMAND BEFORE
*                    AWAITING SET COMMAND
*
***********************************************************************
*
IP300    EQU   *
         LA    R1,RDYMSG               ISSUE 'READY' MESSAGE       XMCS
         WTO   MF=(E,(1))                                          XMCS
*
$UNSWTR  BC    0,$UNNOSET .        ALLOW ONLY ONCE THRU THIS CODE *UNCC
         OI    $UNSWTR+1,X'F0' .   MAKE SURE ABOVE IS TRUE        *UNCC
         L     R12,CVTPTR .        MAKE SURE CVT BASE IS GOOD     *UNCC
         L     R4,CVTCUCB .        FIND UCB BASE                  *UNCC
         USING PMUCM,R4 .          AND DECLARE IT                 *UNCC
         LM    R3,R5,UCMVEA .      FIND POINTERS TO UCM ENTRIES   *UNCC
         DROP  R4 .                                               *UNCC
         USING UCMLIST,R3 .        AND DECLARE UCM ENTRY BASE     *UNCC
$UNFIND  TM    UCMDISP,UCMDISPA .  TEST FOR MASTER CONSOLE        *UNCC
         BO    $UNFOUND .          YES, GO PROCESS                *UNCC
         BXLE  R3,R4,$UNFIND .     LOOP TO FIND MST CONSOLE       *UNCC
         B     $UNNOSET .          EXIT, IF NOT MASTER CONSOLE??? *UNCC
         SPACE 2                                                  *UNCC
$UNFOUND TM    UCMATR,UCMUF .      BE SURE MASTER IS ACTIVE       *UNCC
         BNO   $UNNOSET .          EXIT, IF MSTCON NOT ACTIVE     *UNCC
         LA    R5,20 .             SET MAX NUMBER TIMES TO WAIT   *UNCC
*        STIMER WAIT,BINTVL=$ONESEC . MAKE SURE NO TIMING PROBLEM *UNCC
$WAITDEV STIMER WAIT,BINTVL=$ONESEC .                             *UNCC
         L     R4,UCMXB .          FIND UCM BASE                  *UNCC
         LTR   R4,R4 .             TEST FOR DCM (GRAPHIC CONSOLE) *UNCC
         BZ    $UNNOSET .          EXIT, IF MSTCON NON GRAPHIC    *UNCC
         USING DCMRDST,R4 .        DECLARE DCM BASE               *UNCC
         TM    DCMRFLGS,DCMTYPE .  TEST FOR DCM BEING RESIDENT    *UNCC
         BO    $UNNOSET .          EXIT, IF MSTCON DCM NON RES    *UNCC
         TM    UCMSTS,UCMBF+UCMPF+UCMTC .       TEST DEVICE BUSY  *UNCC
         BZ    $DEVOK .            BRANCH IF AVAILABLE            *UNCC
         BCT   R5,$WAITDEV .       LOOP FOR DEVICE TO QUIESCE     *UNCC
         B     $UNNOSET .          GIVE UP, ITS TOO BUSY FOR US   *UNCC
$DEVOK   SSM   *+1 .               MAKE SURE IT IS NOT BUSY AGAIN *UNCC
         L     R1,DCMADTRN .       FIND TRANS PART OF THE DCM     *UNCC
         DROP  R4 .                                               *UNCC
         USING DCMDSECT,R1 .       GET ADDRESSABILITY             *UNCC
         OI    DCMIOCM1,DCMWRENT+DCMINSC .WRITE ENTRY LINE+CURSOR *UNCC
         MVI   DCMCULNO,1 .        PUT CURSOR ON 1ST ENTRY LINE   *UNC8
         DROP  R3                                                 *UNC8
         L     R3,DCMAENTR     GET POINTER TO SCRN COMMAND AREA.  *UNC8
         TM    CVTOPTB,CVTTOD     IS TOD CLOCK SUPPORTED?         *UNC8
         BZ    $NOTOD             JUMP IF NOT.                    *UNC8
         MVI   DCMPOSCU,7         PUT CURSOR ON BYTE 7 OF ENTRY   *UNC8
         MVC   0(L'$RUCMD,R3),$RUCMD   MOVE IN REPLY CMD PROMPT   *UNC8
         B     $CMDOK                                             *UNC8
$NOTOD   MVI   DCMPOSCU,11        PUT CURSOR ON BYTE 11 OF ENTRY  *UNC8
         MVC   0(L'$TDATE,R3),$TDATE .MOVE IN THE T DATE COMMAND  *UNC8
         DROP  R1                 RELEASE DCM BASE.               *UNC8
$CMDOK   SSM   *+1 .               LET CONSOLES DO IT TO IT       *UNC8
         ORG   *-3 .                                              *UNCC
         DC    X'FF' .                                            *UNCC
         ORG   , .                                                *UNCC
$UNNOSET EQU   * .                 END OF PROCESSING              *UNCC
***********************************************************************
*             ROUTINE CREATES TIOT BY GETMAIN FROM CORE SUBPOOL 255
*               AND MOVING THE MASTER TIOT ASSEMBLED WITHIN THE
*              IPL MODULE BY MACRO IEFVTIOT INTO THE GOTTEN CORE
*              TIOT IS REQUIRED FOR LOG INITIALIZATION
***********************************************************************
         LA    R5,CB8                  PT TO STOP INDICATOR      A24430
         ST    R5,BACV                 AREA BEFORE WAIT          A24430
         L     R0,CX108                108 BYTES OF SUBPOOL 255  LMCS
         AIF   ('&LCTR' EQ '0').SKIPLOG  IS LOG SPECIFIED - ZERO BUFS
*                                      OR NOLOG EXCLUDES LOG
         AL    R0,LOGTIOT              IF LOG ADD TIOT SPACE     LMCS
         MVC   BALOG+2(2),IPLCS        SAVE OPTIONS FOR LOG INITIAL LM
.SKIPLOG ANOP
         AIF   ('&SMF' EQ '0').S0      IS SMF PRESENT
         AL    R0,SMFTIOT              ADD SMF TIOT SIZE            SMF
.S0      ANOP
         AIF   ('&TSO' EQ '0').NOTSO    IS TSO PRESENT            20030
         AL    R0,SENDTIOT        ADD TIOT FOR SYS1.BROADCAST     20030
.NOTSO   ANOP
         GETMAIN R,LV=(0)
         LA    R10,VTIOT
         MVC   0(108,R1),0(R10)        MOVE TIOT INTO GOTTEN CORE LMCS
         LR    R10,R1                  SETUP TIOT BASE
         USING VTIOT,R10
         L     R2,CVTTCBP              LOCATE TCB
         L     R2,4(R2)
         ST    R10,TCBTIO(R2)          STORE TIOT PTR IN TCB
         MVI   CB1,X'00'               FLAG-00=WTO ONLY-NO MGCR
         AIF   ('&CCA3'(1,4) NE 'HASP').FF                        *UNCC
         DROP  R10 .               DROP VTIOT ADDRESSABILITY      *UNCC
         TM    CVTOPTA,X'04'       HIERARCHY SUPPORTED?           *UNC8
         BZ    $HASPOK             JUMP, START NORMAL HASP.       *UNC8
         L     R9,CVTMZ00 .        FIND HIGH ADDRESS IN MACHINE   *UNCC
         C     R9,$UNMEG1 .        CHECK FOR EXISTENCE OF LCS     *UNCC
         BH    $HASPOK             MACHINE BIGGER THAN 1 MEG.     *UNCC
         MVC   INITC+&KCCA3+16(L'INITCX+4),INITCX SPECIAL GOODIES *UNC8
         USING VTIOT,R10 .         AND RESTORE VTIOT ADDRESSABILIT*UNCC
$HASPOK  DS    0H                                                 *UNC8
.FF      ANOP                                                     *UNCC
         LA    R9,IP308                SET WRITE COMMAND RETURN    OC43
         B     IP700                   GO WRITE COMMANDS
$UNMEG1  DC    0F'0',X'000FFFFF' . LCS BOUNDARY ADDRESS           *UNCC
*
IP308    EQU   *                                                 A24430
***********************************************************************
*                                                                     *
*       THIS ROUTINE HANDLES TOD CLOCK SUPPORT                    20071
*                                                                     *
* 1. STCK IS ISSUED TO DETERMINE THE STATE OF THE TOD CLOCK-      20071
*         CONDITION CODE 0 = CLOCK SET                            20071
*         CONDITION CODE 1 = CLOCK NOT SET                        20071
*         CONDITION CODE 2 = CLOCK IN ERROR STATE                 20071
* 2. IF CC=0, THE TOD VALUE IS CONVERTED TO DECIMAL AND MESSAGE   20071
*    IEE114A IS ISSUED.  THE OPERATOR CAN REPLY WITH ANY VALID    20071
*    SET PARAMETERS OR 'U'.                                       20071
* 3. IF CC=1 OR 2,MESSAGE IEE116A IS ISSUED. THE OPERATOR CAN     20071
*    REPLY WITH ANY VALID SET PARAMETERS,BUT HE MUST INCLUDE AT   20071
*    LEAST DATE.                                                  20071
* 4. AN INTERNAL SET COMMAND IS BUILT USING THE OPERATOR'S PARAM- 20071
*    ETERS AND/OR TOD VALUES, AND SVC 34 IS ISSUED.(MGCR)         20071
* 5. ON RETURN FROM SVC 34, IF THE SET COMMAND IS INVALID, THE    20071
*    ORIGINAL MESSAGE WILL BE REPEATED UNTIL A VALID COMMAND IS   20071
*    RECEIVED.                                                    20071
* 6. THE ' NO IPL ' BIT IS TURNED OFF.                            20071
***********************************************************************
         NI    BASFL,HEXDD         TURN OFF NO SET, INTRN SET BITS20071
         TM    CVTOPTB,CVTTOD      IS TOD SUPPORTED               20071
         BZ    NOTOD               NO, BRANCH AROUND TOD CODE     20071
         STCK  TIMEAREA            READ THE TOD VALUE             20071
         BZ    CCZERO              IF CC IS 0, GO TO CONVERT RTN  20071
         BC    K4,CCONE            IF CC IS 1, SET BITS TO X'01'  20071
         OI    CCBITS,HEX03        CC IS 2, SET BITS TO X'11'     20071
         B     TODWTOR1            GO SET UP FOR WTOR             20071
CCONE    EQU   *                                                  20071
         OI    CCBITS,BA7          SET BIT TO 1 FOR CC=1          20071
TODWTOR1 EQU   *                                                  20071
         TM    CCBITS,HEX03        WAS CC=0 (CLOCK IS SET WITH    M1866
*                                  YEAR 2000 OR MORE)             M1866
         BZ    CCONE               CHANGE CCBITS TO CC=1          M1866
         LA    R1,TODMSG1          PUT MSG ADDR IN REG1 FOR WTOR  20071
         B     SETWTOR             GO SET UP FOR WTOR,TOD INVALID 20071
CCZERO   EQU   *                                                  20071
         NI    CCBITS,HEX00        INDICATE CC=0 (BITS=00)        20071
***********************************************************************
*                                                                     *
*                 TOD CLOCK CONVERSION ROUTINE                    20071
*                                                                     *
***********************************************************************
* NOTES-                                                          20071
*                                                                     *
*    THE TOD CLOCK IS A DOUBLE WORD WHOSE HIGH-ORDER WORD IS      20071
*    VALID TO 1.048576 MICRO SECONDS.  TO CALCULATE THE EXACT     20071
*    NUMBER OF SECONDS, THE NUMBER OF MICRO SECONDS IN THE HIGH   20071
*    ORDER WORD IS MULTIPLIED BY 16384 AND DIVIDED BY 15625. THIS 20071
*    IS THE SAME AS MULIIPLYING BY 1.048576, BUT ELIMINATES THE   20071
*    DECIMAL POINT.                                               20071
*    THE CONSTANTS, 16384 AND 15625 ARE ALSO USED BY IEE6503D,    20071
*    AND THERE WILL BE A TIME DISCREPANCY IF THEY ARE UPDATED IN  20071
*    ONE MODULE AND NOT THE OTHER.                                20071
*    THE TOD CLOCK STARTS AT JAN 1,1960 AND RUNS FOR 142 YEARS.   20071
*    HOWEVER, THIS ROUTINE DOES NOT RECOGNIZE ANY YEAR OVER 1999  20071
*    AS VALID. ANY YEAR GREATER THAN 1999 WILL BE TREATED AS IF   M1866
*    THE CONDITION CODE FROM THE STORE CLOCK(STCK) HAD BEEN = 1.  M1866
***********************************************************************
CONVERT  EQU   *                                                  20071
         L     R7,TIMEAREA         LOAD HIGH ORDER WORD OF TOD    20071
*                                  CLOCK-VALID TO 1.048576 MIC SEC20071
         CL    R7,YR2000           IS TOD GT JAN 1,2000           M5381
         BNL   TODWTOR1            YES,ERROR. TOD INVALID         M5381
         M     R6,D16384           TOD VALUE MULT BY DEC 16384    20071
         D     R6,D15625           DIVIDE BY DECIMAL 15625 FOR    20071
*                                  NUMBER OF SECONDS IN TOD CLOCK 20071
         XR    R6,R6               CLEAR REMAINDER REG            20071
         D     R6,D86400           DIV BY SEC PER DAY TO GET DAYS 20071
         LR    R4,R6               SAVE CONTENTS-REM=HH.MM.SS     20071
         C     R7,D366             IS NO. DAYS LESS THAN 366      20071
         BL    LOWYEAR             YES. YEAR IS 1960              20071
         S     R7,D366             SUBTRACT 366 FROM NO. DAYS     20071
         XR    R6,R6               ZERO REMAINDER REG             20071
         D     R6,D1461            DIV NO.DAYS LEFT BY NO.DAYS    20071
*                                  IN 4 YEARS- COUNTS LEAP YEAR   20071
         LR    R5,R7               SAVE NO. 4 YEAR BLOCKS         20071
         C     R6,D1460            CK FOR LAST DAY OF LEAP YEAR  A52614
         BNE   NOTLAST             BRANCH IF NO                  A52614
         LA    R7,N3               SET QUOTIENT TO 3 YEARS       A52614
         L     R6,D365             SET REMAINDER TO 365 DAYS     A52614
         B     LASTDAY             GO TO FIGURE LAST DAY OF LEAP A52614
N3       EQU   3                                                 A52614
NOTLAST  EQU   *                                                 A52614
         SRDL  R6,BITS32           MOVE EVEN REG TO ODD REG       20071
         D     R6,D365             GET NO. YRS SINCE LEAP YEAR    20071
LASTDAY EQU   *                                                  A52614
         LA    R7,SIXTY(R7)        ADD NO. YEARS SINCE LEAP YEAR  20071
*                                  TO 1960(FIRST YEAR OF CLOCK)   20071
         SLL   R5,K2               NO. OF YEARS = NO. OF FOUR     20071
*                                  YEAR BLOCKS TIMES FOUR         20071
         AR    R7,R5               ADD NO. OF 4 YEAR BLKS TO (60+ 20071
*                                  NO. OF YEARS SINCE LEAP YEAR   20071
*   NOTE- IT IS NECESSARY TO ADD 1,BECAUSE THE CLOCK STARTS AT 0  20071
*         ON JAN 1,1960, BUT WE REFER TO THAT DAY AS DAY 1.       20071
         LA    R7,K1(R7)           ADD ONE. TOTAL= CURRENT YEAR   20071
         LA    R6,K1(R6)           ADD ONE. TOTAL= CURRENT DAY    20071
         MH    R7,TEN              SET UP YEAR FOR CVD            20071
         CVD   R7,DOUBLE           MAKE YEAR PACKED DECIMAL       20071
         UNPK  YDATE(K3),DOUBLE+K6(K2)  UNPACK YEAR (YY)          20071
         MH    R6,TEN              SET UP FOR CVD                 20071
         CVD   R6,DOUBLE           MAKE DAY PACKED DECIMAL        20071
         B     SETDAY              GO PUT DDD IN BUFFER           20071
LOWYEAR  EQU   *                                                  20071
         MVC   YDATE(K2),D60       YEAR IS 1960                   20071
         LA    R7,K1(R7)           ADD ONE DAY FOR LEAP YEAR      20071
         MH    R7,TEN              SET UP DAY FOR CVD             20071
         CVD   R7,DOUBLE           MAKE DAY PACKED DECIMAL        20071
SETDAY   EQU   *                                                  20071
         UNPK  DDATE(K4),DOUBLE+K5(K3)  UNPACK DAY (DDD)          20071
         MVI   YDATE+K2,DOT         SET UP FOR COMMAND (YY.DDD)   20071
         LR    R7,R4                GET HOURS, MIN, SEC           20071
         XR    R6,R6                ZERO REMAINDER REG            20071
         D     R6,D3600             DIVIDE BY NO.SEC PER HOUR     20071
         MH    R7,TEN               SET UP HOURS FOR CVD          20071
         CVD   R7,DOUBLE            MAKE HOURS PACKED DECIMAL     20071
         UNPK  HTIME(K3),DOUBLE+K6(K2)  UNPACK HOURS (HH)         20071
         MVI   HTIME+K2,DOT         SET UP FOR COMMAND (HH.MM.SS) 20071
         SRDL  R6,BITS32            MOVE MIN AND SEC INTO ODD REG 20071
         XR    R6,R6                ZERO REMAINDER REG            20071
         D     R6,F60               DIVIDE BY NO. SEC PER MINUTE  20071
         MH    R7,TEN               SET UP MINUTES FOR CVD        20071
         CVD   R7,DOUBLE            MAKE MINUTES PACKED DECIMAL   20071
         UNPK  MTIME(K3),DOUBLE+K6(K2) UNPACK MINUTES (MM)        20071
         MVI   MTIME+K2,DOT         SET UP FOR COMMAND (HH.MM.SS) 20071
         MH    R6,TEN               SET UP SECONDS FOR CVD        20071
         CVD   R6,DOUBLE            MAKE SECONDS PACKED DECIMAL   20071
         UNPK  STIME(K3),DOUBLE+K6(K2)  UNPACK SECONDS (SS)       20071
TODWTOR2 EQU   *                                                  20071
         LA    R1,TODMSG2          GET ADDR OF WTOR MSG           20071
         MVC   MSGCHNG+K13(K6),YDATE PUT CURRENT TOD DATE IN MSG  20071
         MVC   MSGCHNG+K26(K8),HTIME PUT CURRENT TOD TIME IN MSG  20071
SETWTOR  EQU   *                                                  20071
         MVI   TODREPLY,BLANK      PUT BLANK IN FIRST BYTE        20071
         MVC   TODREPLY+K1(K119),TODREPLY  CLEAR REPLY AREA       20071
         MVI   TODECB,HEX00        CLEAR ECB FOR TOD MSG WTOR     20071
         WTOR  ,TODREPLY,120,TODECB,MF=(E,(1))   ISSUE WTOR       20071
         WAIT  ECB=TODECB          WAIT FOR OPERATOR'S REPLY      20071
         LA    R5,TODREPLY         GET ADDR OF REPLY              20071
         CLC   K0(K2,R5),U         YES. WAS REPLY 'U'             20071
         BNE   DATECHK             NO. SEE IF DATE WAS SPECIFIED  20071
         TM    CCBITS,HEX03        WAS YHE CC=0                   20071
         BNZ   SETUP               NO, GO ISSUE SET COMMAND       20071
         MVC   TODREPLY(K5),DATE   MOVE 'DATE=' INTO BUFFER       20071
         MVC   TODREPLY+K5(K6),YDATE  MOVE YY.DDD INTO BUFFER     20071
         B     NOSET               GO SET NO SET BIT              20071
DATECHK  EQU   *                                                  20071
         CLC   K0(K5,R5),DATE      WAS 'DATE=' SPECIFIED          20071
         BE    TIMECHK             YES. CHECK FOR 'CLOCK='        20071
         CLC   K0(K5,R5),LOWCASE1  WAS IT LOWER CASE 'DATE='      M1866
         BE    TIMECHK             YES. CHECK FOR 'CLOCK='        M1866
         LA    R5,K1(R5)           NO. POINT TO NEXT CHAR         20071
         CLI   K0(R5),BLANK        IS CHAR BLANK(END OF COMMAND)  20071
         BNE   DATECHK             NO. CHECK FOR 'DATE=' AGAIN    20071
         TM    CCBITS,HEX03        IS CC=0                        20071
         BNZ   SETUP               NO. ERROR. PASS CMND AS IS     20071
         MVC   K0(K6,R5),COMDATE   YES. ADD 'DATE=' TO PARAMS     20071
         MVC   K6(K6,R5),YDATE     DATE=TOD DATE FOR SET COMMAND  20071
         LA    R5,K1(R5)           ADD 1 SO REG POINTS TO 'DATE=' 20071
TIMECHK  EQU   *                                                  20071
         LR    R6,R5               SAVE POINTER TO 'DATE='        20071
         LA    R5,TODREPLY         POINT TO START OF REPLY        20071
TIMECHK2 EQU   *                                                  20071
         CLC   K0(K6,R5),CLOCK     WAS 'CLOCK=' SPECIFIED         20071
         BE    SETUP               'DATE=', 'CLOCK=' SPECIFIED    20071
         CLC   K0(K6,R5),LOWCASE2  WAS IT LOWER CASE 'CLOCK='     M1866
         BE    SETUP               YES. GO ISSUE COMMAND          M1866
         LA    R5,K1(R5)           POINT TO NEXT CHAR             20071
         CLI   K0(R5),BLANK        IS CHARACTER BLANK(END OF CMND)20071
         BNE   TIMECHK2            NO. CHECK FOR 'CLOCK='         20071
         LR    R1,R5               TEMP SAVE PTR TO COMMAND END   20071
         TM    CCBITS,HEX03        WHAT IS COND CODE FROM STCK    20071
         BZ    DATECHK2            CC=0. SEE IF TOD DATE=REPLY    20071
*                                  DATE. IF YES,TOD WONT BE SET   20071
         MVC   K0(K15,R5),COMCLOCK CC NOT 0- CLOCK=00.00.00       M1866
         B     SETUP               GO ISSUE SET COMMAND           20071
DATECHK2 EQU   *                                                  20071
         CLC   K5(K6,R6),YDATE     IS REPLY DATE=TOD DATE         20071
         BNE   SETUP               NO. GO ISSUE SET COMMAND       20071
NOSET    EQU   *                                                  20071
         OI    BASFL,BANOSET       TURN ON NO SET BIT             20071
SETUP    EQU   *                                                  20071
         XR    R0,R0               ZERO REG0- INDICATE SYSTEM     20071
*                                  COMMAND FOR SVC 34             20071
         OI    BASFL,BAINTSET      TURN ON INTERNAL SET BIT       20071
         XC    BAIPL,BAIPL         CLEAR RETURN CODE ECB          20071
         MGCR  TODBUF                                             20071
         CLI   BAIPL+K3,K8         WAS SET COMMAND OK (IF NOT,    20071
*                                  RET CODE PASSED IN ECB)        20071
         BE    IP308               NO.  CLOCK COULD NOT BE SET. GO20071
*                                  BACK AND REISSUE TOD MESSAGE   20071
         B     ENDIPL              SET COMMAND OK. IPL OVER       20071
NOTOD    EQU   *                                                  20071
         WAIT  ECB=BAIPL
ENDIPL   EQU   *                                                  20071
         OI    BASFL,BAIN          TURN ON 'NO IPL' BIT           20071
         EJECT                                                     AABA
*******************************************************************AABA
*                                                                  AABA
*  THE FOLLOWING DETERMINES THE LOCATION OF SYS1.SYSJOBQE AND      AABA
*  SYS1.PROCLIB AND VERIFIES THAT THE DATA SET EXISTS ON THE INDICAAABA
*  UNIT.                                                           AABA
*                                                                  AABA
*  THE FOLLOWING POSSIBILITIES EXIST:                              AABA
*                                                                  AABA
*      1) THE UNIT WAS SPECIFIED IN THE SET COMMAND                AABA
*            A)LOCATIONS BAQ AND/OR BAPRC WILL NOT BE ZERO         AABA
*      2) THE DATA SET IS CATALOGUED                               AABA
*      3) SYSGEN VALUES ARE USED                                   AABA
*      4) THE IPL VOLUME CONTAINS THE DATA SET                     AABA
*                                                                  AABA
*  THE FOLLOWING ERRORS ARE POSSIBLE:                              AABA
*                                                                  AABA
*      1) THE VOLUME INDICATED BY THE CATALOGUE IS NOT MOUNTED     AABA
*      2) THE SELECTED VOLUME DOES NOT CONTAIN THE DATA SET        AABA
*                                                                  AABA
*  WHEN THE LOCATION OF SYS1.PROCLIB IS ASCERTAINED,THE DATA SET WIAABA
*  BE RECATALOGUED                                                 AABA
*                                                                  AABA
***********************************************************************
IP325    DS    0H                                                  AABA
* GETMAIN AND SET UP WORKAREA FOR LOCATE AND OBTAIN MACROS         AABA
         GETMAIN R,LV=IPWKEND,SP=255                               AABA
         LR    R4,R1               WORKAREA ADDRESS TO R4          AABA
         USING IPWKST,R4           ADDRESSABILTY                   AABA
         MVI   DSNAREA,X'40'       BLANK DATA SET NAME AREA        AABA
         MVC   DSNAREA+1(43),DSNAREA                               AABA
* SET UP PARAMETER LIST                                            AABA
         ST    R4,PARM4            ADDRESS OF WORKAREA             AABA
         LA    R1,DSNAREA          ADDRESS OF DATA SET NAME AREA   AABA
         ST    R1,PARM2                                            AABA
* SET UP TO VERIFY THE LOCATION OF SYS1.SYSJOBQE                   AABA
         MVC   IP400WKR(6),BLNKS   BLANK WORK AREA                 AABA
         MVC   DSNAREA(14),JOBQDSN JOBQ DATA SET NAME TO PARAMETR  AABA
         TM    BAQ,X'FF'           UNIT NAME SPECIFIED ON SET COMMAAABA
*                                  FOR SYS1.SYSJOBQE               AABA
         BC    7,IP340             BRANCH IF Q UNITNAME SPECIFIED  AABA
         BAL   R9,IP350      IF NOT SPECIFIED IN SET COMMAND,      OC43
*                                  GO TO SEARCH CATALOG FOR DATA SEAABA
* UPON RETURN, UCB ADDRESS OF THE UNIT CONTAINING JOBQ IS CONTAINEDAABA
* IN R1                                                            AABA
IP327    DS    0H                                                  AABA
         USING UCBOB,R6                                           *AABA
         OI    SRTESTAT,SRTEPRES   SET VOLUME PERM. RES.          *AABA
         ST    R6,BAQ              SAVE JOBQ UCB ADDRESS           AABA
* DETERMINE AND VERIFY THE LOCATION OF SYS1.PROCLIB                AABA
         MVC   IP400WKR(6),BLNKS   BLANK WORK AREA                 AABA
IP330    DS    0H                                                  AABA
         MVC   DSNAREA(14),PROCDSN PROC3IB DATA SET NAME TO PARM ARAABA
         TM    BAPRC,X'FF'         PROCLIB UNIT NAME SPECIFIED     AABA
         BC    7,IP345             BRANCH IF UNIT NAME SPECIFIED   AABA
         BAL   R9,IP350      IF NOT SPECIFIED,BRANCH TO LOCATE     OC43
* UPON RETURN, UCB ADDRESS OF THE UNIT CONTAINING THE PROCEDURE    AABA
* LIBRARY IS CONTAINED IN R1                                       AABA
IP333    DS    0H                                                  AABA
         OI    SRTESTAT,SRTEPRES   SET VOLUME PERM. RES.          *AABA
         DROP  R6                                                 *AABA
         ST    R6,BAPRC            SAVE PROC UCB ADDRESS           AABA
         B     IP500               BRANCH TO NEXT PHASE            AABA
* Q UNIT NAME SPECIFIED IN SET COMMAND                             AABA
IP340    DS    0H                  ALIGNMENT                       AABA
         MVC   IP400WKR(3),BAQ     UNIT NAME TO WORKAREA           AABA
         LA    R9,IP327            RETURN ADDRESS                  OC43
IP343    MVI   IP400SW,BIT0        INDICATE SEARCH ON UNIT NAME    AABA
         BAL   R3,IP400            GO TO UCB SEARCH ROUTINE        AABA
         B     IP413               UCBNAME NOT VERIFIED            AABA
         B     IP360               BRANCH TO OBTAIN ROUTINE        AABA
* PROC UNIT NAME SPECIFIED IN SET COMMAND                          AABA
IP345    DS    0H                                                  AABA
         MVC   IP400WKR(3),BAPRC   UNIT NAME TO WORK AREA          AABA
         CLI   BAPRC+3,C' '        IS 2321 INDICATED               AABA
         BE    IP346               NO,BRANCH                       AABA
         MVI   IP400WKR+3,C'/'     SLASH TO WORKAREA               AABA
         MVC   IP400WKR+4(1),BAPRC+3 BIN NUMBER TO WORK AREA       AABA
         CLI   IP400WKR+4,X'F0'    IS BIN NUMBER VALID             AABA
         BL    IP413               NO,ERROR                        AABA
IP346    DS    0H                                                  AABA
         LA    R9,IP333            RETURN ADDRESS                  OC43
         B     IP343               BRANCH                          AANA
* ISSUE LOCATE FOR REQUIRED DATA SET                               AABA
IP350    DS    0H                  ALIGNMENT                       AABA
         MVC   PARM1(4),LOCCNTRL   LOCATE CONTROL BYTE             AABA
         XC    PARM3(4),PARM3      ZERO PARM3 FOR LOCATE           AABA
         LA    R1,PARM1            INDICATE PARAMETER AREA         AABA
*                                                                  AABA
         LOCATE (1)                                                AABA
*                                                                  AABA
         LTR   R15,R15             WAS LOCATE SUCCESSFUL           AABA
         BC    7,IP370             NO,BRANCH DATA SET NOT CATALOGEDAABA
         MVC   VOLSRAR(6),VCBVOLSN MOVE VOLUME SERIAL TO WORK AREA AABA
         MVI   IP400SW,BIT1        INDICATE SEARCH FOR VOL SERIAL  AABA
         BAL   R3,IP400            DETERMINE IF VOLUME MOUNTED     AABA
         B     IP380               VOLUME NOT MOUNTED,BRANCH       AABA
* VOLUME HAS BEEN SELECTED,DETERMINE IF DATA SET EXISTS ON VOLUME  AABA
IP360    DS    0H                  NORMAL RETURN FROM ABOVE AND    AABA
*                                  ENTRY TO OBTAIN ROUTINE         AABA
         LA    R1,VOLSRAR          ADDRESS OF VOLUME SERIAL FOR    AABA
         ST    R1,PARM3            OBTAIN TO WORK AREA             AABA
         MVC   PARM1(4),OBTCNTRL   OBTAIN CONTROL BYTE             AABA
         LA    R1,PARM1            INDICATE PARAMETERS             AABA
*                                                                  AABA
         OBTAIN (1)                                                AABA
*                                                                  AABA
         LTR   R15,R15             WAS OBTAIN SUCCESSFUL           AABA
         BC    7,IP390             OBTAIN FAILED, BRANCH           AABA
         BR    R9                  RETURN                          OC43
* LOCATE FAILED  DETERMINE VOLUME BY LOOKING AT SYSGEN VALUE FOR   AABA
* DATA SET OR IPL VOLUME IF NO SYSGEN VALUE WAS SPECIFIED          AABA
IP370    DS    0H                                                  AABA
         CLC   DSNAREA(7),JOBQDSN  IS SEARCH FOR JOBQ DEVICE       AABA
         BE    IP372               YES,BRANCH                      AABA
         CLI   IPSGPL,C' '         SYSGEN VALUE FOR PROCLIB        AABA
         BE    IP375               NO,SEARCH FOR IPL VOLUME        AABA
         MVC   IP400WKR(5),IPSGPL  PROCLIB UNITNAME FOR UCB SRCH   AABA
IP371    DS    0H                                                  AABA
         MVI   IP400SW,BIT0        INDICATE SEARCH ON UNIT NAME    AABA
IP371A   BAL   R3,IP400            BRANCH TO UCB SEARCH            AABA
         USING UCBOB,R6                                            AABA
         B     IP413               ERROR,NOT VERIFIED              AABA
IP371B   DS    0H                                                  AABA
         MVC   VOLSRAR(6),SRTEVOLI VOLUME SERIAL TO WORKAREA       AABA
         B     IP360               BRANCH TO OBTAIN ROUTINE        AABA
IP372    DS    0H                  SEARCH IS FOR JOBQ DEVICE       AABA
         CLI   IPSGJQ,C' '         SYSGEN VALUE FOR JOBQ DEVICE    AABA
         BE    IP375               NO,SEARCH FOR IPL VOLUME        AABA
         MVC   IP400WKR(3),IPSGJQ  PROCLIB UNIT ADDRESS FOR UCB SEARCH
         B     IP371               GO TO SEARCH ROUTINE            AABA
* SYSGEN VALUES NOT SPECIFIED,SEARCH FOR IPL VOLUME                AABA
IP375    DS    0H                                                  AABA
         L     R6,CVTSYSAD         LOAD UCB ADDRESS OF IPL VOLUME  AABA
         LR    R5,R6               R5,ADDRESS OF IPL VOLUME UCB    AABA
         MVC   IP394(3),UCBNAME    UCB NAME TO MESSAGE AREA        AABA
         B     IP371B              CONTINUE                        AABA
* THE VOLUME INDICATED BY THE CATALOGUE IS NOT MOUNTED             AABA
IP380    DS    0H                                                  AABA
         LA    R1,IP381            ADDRESS OF MESSAGE              AABA
         MVC   IP383(14),DSNAREA   DATA SET NAME TO MESSAGE        AABA
         MVC   IP382(6),VOLSRAR    VOLUME SERIAL TO MESSAGE        AABA
         B     IP380390            BRANCH TO WRITE                 AABA
* REQUIRED DATA SET NOT FOUND ON SELECTED VOLUME                   AABA
IP390    DS    0H                                                  AABA
         LA    R1,IP391            ADDRESS OF MESSAGE              AABA
         MVC   IP392(14),DSNAREA   DATA SET NAME TO                AABA
         MVC   IP393(6),VOLSRAR    VOLUME SERIAL TO MESSAGE        AABA
IP380390 DS    0H                                                  AABA
         WTO   MF=(E,(1))          *                               AABA
         B     IP450               FREE CORE                       AABA
**********************************************************************
*                                                                  AABA
* UCB SEARCH:                                                      AABA
*                                                                  AABA
*        IP400SW INDICATES THE TYPE OF SEARCH TO MAKE              AABA
*              BIT0=UNITNAME                                       AABA
*              BIT1=VOLUME SERIAL NUMBER                           AABA
*              BIT2=IPL VOLUME                                     AABA
*        IP400WKR CONTAINS 3 OR 5 BYTE UCB NAME                    AABA
*        VOLSRAR CONTAINS THE VOLUME SERIAL NUMBER                 AABA
*                                                                  AABA
*        NORMAL EXIT                                               AABA
*              R6 CONTAINS UCB ADDRESS                             AABA
*              BRANCH R3                                           AABA
*                                                                  AABA
**********************************************************************
IP400    DS    0H                                                  AABA
         L     R7,CVTILK2          SRT TABLE ADDRESS               AABA
IP401    LH    R6,0(R7)            UCB ADDRESS                     AABA
         LTR   R6,R6               HOLE IN TABLE                   AABA
         BZ    IP403               YES,BRANCH TO GET NEXT ADDRESS  AABA
         N     R6,CF0F             ZERO HIGH ORDER BITS            AABA
         CL    R6,CF0F             END OF UCB LIST                 AABA
         BNE   IP404               BRANCH TO CHECK UCB             AABA
IP402    BR    R3                  END OF UCB LIST ZND NOT FOUND   AABA
*                                  ERROR RETURN                    AABA
IP403    LA    R7,2(R7)            INCREMENT TO NEXT ENTRY         AABA
         B     IP401               CHECK ENTRY                     AABA
IP404    MVC   IP394(3),UCBNAME    SAVE UNIT NAME                  AABA
         USING UCBOB,R6                                            AABA
         TM    IP400SW,BIT0        SEARCH ON UCB NAME              AABA
         BO    IP407               YES,BRANCH                      AABA
IP405    DS    0H                  SEARCH ON VOLUME SERIAL         AABA
         LR    R5,R6               MAIN UCB ADDRESS TO R5          AABA
         CLC   SRTEVOLI(6),VOLSRAR VOLUME SERIALS MATCH            AABA
         BE    4(R3)               YES,RETURN                      AABA
         CLC   UCBTYP+2(2),TYPE2321 IS DEVICE A 2321               AABA
         BNE   IP403               NO GET NEXT UCB                 AABA
         LA    R1,10(0,0)          LOOP CONTROL                    AABA
         LA    R6,DATACELL-UCBOB(0,R6) INCREMENT TO SUB UCBS       AABA
IP406    DS    0H                                                  AABA
         USING DATACELL,R6                                         AABA
         CLC   DCELVOLI(6),VOLSRAR VOLUME SERIALS MATCH            AABA
         BE    4(R3)               YES,RETURN                      AABA
         LA    R6,16(R6,0)         INCREMENT TO NEXT SUB UCB       AABA
         BCT   R1,IP406                                            AABA
         B     IP403               CESSED;GET NEXT UCB             AABA
IP407    DS    0H                  SEARCH ON UNITNAME              AABA
         USING UCBOB,R5                                            AABA
         LR    R5,R6               ADDRESS OF MAIN UCB TO R5       AABA
         CLC   UCBNAME(3),IP400WKR UCB NAMES MATCH                 AABA
         BNE   IP403               NO,GET NEXT UCB                 AABA
         CLI   IP400WKR+3,C'/'     IS 2321 SPECIFIED               AABA
         BE    IP408               YES,BRANCH                      AABA
         CLC   UCBTYP+2(2),TYPE2321 IS IT 2321                     AABA
         BE    IP413               YES,ERROR                       AABA
         OC    SRTEVOLI,SRTEVOLI   VOLUME READY                    AABA
         BZ    IP413               NO,BRANCH                       AABA
         MVC   VOLSRAR(6),SRTEVOLI VOLUME SERIAL TO WORKAREA       AABA
         B     4(R3)               RETURN                          AABA
IP408    DS    0H                                                  AABA
         CLC   UCBTYP+2(2),TYPE2321 IS IT 2321                     AABA
         BNE   0(R3)               NO,ERROR                        AABA
IP409    DS    0H                                                  AABA
         IC    R6,IP400WKR+4       BIN NUMBER                      AABA
         N     R6,CF00F            ZERO ZONE AND THREE HIGH BYTES  AABA
         SLL   R6,4                TIMES 16                        AABA
         LA    R6,DATACELL-UCBOB(R5,R6) INCREMENT TO SUB UCB       AABA
         OC    DCELVOLI,DCELVOLI   DEVICE READY                    AABA
         BZ    IP413               NO,BRANCH                       AABA
         MVC   VOLSRAR(6),DCELVOLI VOLUME SERIAL TO WORKAREA       AABA
         B     4(R3)               NORMAL RETURN                   AABA
*                                                                  AABA
IP413    EQU   *
         DROP  R10
         USING XSA,R2
         LA    R2,IPXSA                      SETUP MSG TO PRINT
         MVI   XAV,X'40'                     BLANK VERB AREA
         MVC   XAV+1(7),XAV
         MVI   XAR,X'0D'                     INSERT MSG NO
         MVC   XAV(5),IP400WKR     INSERT INVALID UNIT REF         AABA
         MVC   XAJ(TWO),HALFZERO   CLEAR OUT TJID FIELD           M5510
IP455    EQU   *
         LA    R14,IP449           RETURN POINT                    AABA
         ST    R4,MAINSVE          SAVE ADDRESS OF GOTTEN AREA     AABA
         LINK  EP=IEE0503D                   GO PRINT MSG -RETURN TO
IP449    L     R4,MAINSVE          RESTORE GOTTEN CORE POINTER     AABA
IP450    NI    BASFL,255-BAIN               ZERO IPL FLAG
         LR    R1,R4               ADDRESS OF AREA TO FREE         AABA
         FREEMAIN R,SP=255,LV=IPWKEND,A=(1)                        AABA
         B     IP540                                              M1874
         DROP  R6                                                  AABA
         USING UCBOB,R5                                            AABA
         DROP  R2
***********************************************************************
*             CATALOG SYS1.PROCLIB
*             FILL IN TIOT WITH THE UCB ADDRESSES FOR JOB QUEUE AND
*              PROCLIB BEFORE GOING TO IEFQINTZ TO INITIALIZE
*              JOB QUEUE
***********************************************************************
*
IP500    EQU   *
         LR    R1,R4               ADDRESS OF AREA TO FREE         AABA
         FREEMAIN R,SP=255,LV=IPWKEND,A=(1)                        AABA
         MVC   IPDEVTYP(4),UCBTYP  DEVICE TYPE
         NI    IPDEVTYP+1,X'FE'                                  S21167
         DROP  R5                                                 *AABA
         USING UCBOB,R6                                           *AABA
         CLI   UCBID,X'FF'         IS THIS MAIN UCB
         BNE   IP510               YES
         MVC   IPVOLSER(6),SRTEVOLI VOLUME SER NO
         B     IP515
IP510    EQU   *
         MVC   IPVOLSER(6),DCELVOLI-DATACELL(R6) VOLUME SERIAL     AABA
         DROP  R6                                                 *AABA
IP515    EQU   *
         CATALOG IPCAT             CATALOG DATA SET
         C     R15,CB08            IS RETURN CODE 8
         BNE   IP517               NO. CONTINUE
         CLI   IPCAT,CAT           IS THIS SECOND FAILURE
         BE    IP516              YES-ERROR EXIT                 A31761
         MVI   IPCAT,CAT           INDICATE CATALOG
         B     IP515               TRY CATALOG
IP516    CVD   R15,WORK1          PREPARE TO PRINT RETURN CODE   A31761
         UNPK  WORK2(4),WORK1+FOUR(4) FROM CATALOG IN ERROR MSG  A31761
         OI    WORK2+THREE,FOXZERO   MAKE PRINTABLE LAST DIGIT   A31761
         MVC   NOIPLMSG+CODEDISP(2),WORK2+TWO  PUT RETURN CODE   A31761
*                                 INTO THE MESSAGE               A31761
NOIPLMSG WTO  'IEE139I INITIALIZATION FAILED  CODE=  ',ROUTCDE=2,DESC=4
         B     IP540                                             A31761
WORK1    DS    D        WORKAREA--USED TO PREPARE CATALOG RETURN A31761
WORK2    DS    F        CODE FOR ERROR MESSAGE                   A31761
IP517    EQU   *
         LTR   R15,R15             TEST RETURN CODE
         BNZ   IP516              ERROR EXIT
         USING VTIOT,R10
         MVC   VJUCBPT+1(3),BAQ+1       INITIALIZE JQ TIOT UCB PTR
         MVC   VPUCBPT+1(3),BAPRC+1           PROC LB TIOT UCB PTR
*************************************************************** SA72193
*              INTERFACE WITH POWER WARNING                     SA72193
*************************************************************** SA72193
         DROP  R10                                              SA72193
         XC    IPQPAM(16),IPQPAM       ZERO PARM LIST           SA72193
         ST    R10,IPQPAM              PASS TIOT PTR            SA72193
         LA    R1,IPQPAM               SETUP PARM PTR           SA72193
         L     R15,VCONBIE0                                     SA72193
         BALR  R14,R15                                          SA72193
*
***********************************************************************
*              QUEUE MANAGER TO INITIALIZE THE JOB QUEUE--
*              INTERFACE- R1 - POINTS TO 4 WORD PARAMETER LIST ON ENTRY
*                              .WORD 1 CONTAINS UCB ADDRESS FOR JOB Q
*                         R2 -CONTAINS THE ECB ADDRESS-BAIPL- FOR
*                            POSTING WAIT FROM IEFQINTZ AND THE
*                            RETURN CODE FROM THE QUEUE INITIALIZATION
*                              .ZERO -INITIALIZATION COMPLETE
*                              .NOTZERO=ERROR=NOT COMPLETE
*              ERROR DETECTION-FREES TIOT CORE,ZERO TIOT PTR IN TCB
*                              AND RETURNS TO MODULE BEGINNING TO TRY
*                              AGAIN
*                             -SUPPRESS AUTO STARTS IF QCR ERROR A31300
*                              OCCURRED DURING WARM START        A31300
***********************************************************************
*
IP520    MVC   IPQPAM(4),BAQ            INIT JOB Q
         MVC   IPQPAM(1),BACV        PICK UP Q FORMAT IND..
         AIF   ('&SMF' EQ '0').S1      IS SMF PRESENT
         TM    BACV,X'80'              WARM START INDICATED         SMF
         BC    7,IP527                 NO                           SMF
         OI    SMFOPT+3,X'01'          YES, INDICATE IT             SMF
IP527    EQU   *                                                    SMF
.S1      ANOP
IP530    LA    R1,IPQPAM                SETUP QM
         XC    BAIPL,BAIPL            CLEAR ECB FOR ATTACH
         LA    R2,BAIPL            SETUP ECB ADDRESSIN R2
         ATTACH EP=IUNQINTZ,ECB=(2),MF=(E,(1)),SM=PROB,           *UNCCX
               JSTCB=YES,KEY=ZERO,SVAREA=NO,SZERO=NO,GIVEJPQ=NO    I270
*        ATTACH EP=IEFQINTZ,ECB=(2),MF=(E,(1)),SM=PROB,           *UNCC
*                (EP NAME CHANGED FOR ATTACH)                     *UNCC
         ST    R1,CB10          TEMP SAVE TCB OF SUBTASK
         WAIT  ECB=BAIPL          WAIT TO BE POSTED
         LA    R1,CB10        RESET SUBTASK TCB TO DETACH
         DETACH  (1)
         CLC   BAIPL+2(2),CF0F      TEST FOR ERROR-IS ECB ZERO
         BNE   IP540                   ERROR - FREE TIOT AND GO  A31300
*                                           TO BEGINNING AGAIN   A31300
         TM    IPQPAM,X'40'            QCR ERR DURING WARM START A31300
         BZ    IP560                   NO - CONTINUE             A31300
         MVI   CB8+1,C'Y'              YES - SUPPRESS AUTO START A31300
         MVC   CB8+2(6),CB8+1               COMMANDS             A31300
         B     IP560                   CONTINUE WITH NORMAL PATH A31300
IP540    EQU   *
         L     R2,CVTTCBP                    LOCATE START ADDR TO FREE
         L     R2,4(R2)                   ADDR IN TCBTIO OF TCB
         L     R1,TCBTIO(R2)
         XR    R0,R0                         ZERO TCBTIO
         ST    R0,TCBTIO(R2)
         L     R0,CX108                                            LMCS
         AIF   ('&LCTR' EQ '0').SKIPLFR      IS LOG PRESENT        LMCS
         AL    R0,LOGTIOT              ADD LOG TIOT LENGTH         LMCS
.SKIPLFR ANOP
         AIF   ('&SMF' EQ '0').S5      IS SMF PRESENT
         AL    R0,SMFTIOT              ADD SMF TIOT SIZE            SMF
.S5      ANOP
         AIF   ('&TSO' EQ '0').FREE    IS TSO PRESENT             20030
         AL    R0,SENDTIOT            ADD TIOT FOR SYS1.BRODCAST  20030
.FREE    ANOP                                                     20030
         FREEMAIN R,LV=(0),A=(1)
         B     IP100
*
*             IEFPRES - TO INITIALIZE VOLUME ATTRIBUTES FOR ALL TAPE
*              AND DIRECT ACCESS DEVICES
*             .INTERFACE - R1 - POINTS TO 4 WORD PARAMETER LIST ON
*                               ENTRY -WORD 1 CONTAINS THE UCB ADDRESS
*                               FOR SYS1.PROCLIB
*                          R2 - CONTAINS THE ECB ADDRESS-BAIPL- FOR
*                               POSTING FROM ATTACHED TASK AND RETURN
*                               CODE
*                          R5 - CONTAINS TCB ADDR OF SUBTASK FOR DETACH
*                               PURPOSES
*
*
IP560    EQU   *
         XC    IPQPAM(16),IPQPAM   ZERO PARAM AREA
         L     R2,PARMSAVE         GET PARMLIB UCB POINTER         OC43
         LTR   R2,R2               IS PARMLIB PRESENT              OC43
         BZ    IP600         NO, BYPASS VOLUME INITIALIZATION      OC43
         ST    R2,IPQPAM           SET UCB POINTER FOR PARMLIB     OC43
         LA    R1,IPQPAM           PASS ON PARAM LIST
         XC    BAIPL(4),BAIPL      ZERO ECB
         LA    R2,BAIPL            SETUP ECB ADDR
*
         ATTACH EP=IEEPPRES,ECB=(2),MF=(E,(1)),SM=PROB,            I270X
               JSTCB=YES,KEY=ZERO,SVAREA=NO,SZERO=NO,GIVEJPQ=NO    I270
         ST    R1,CB10        SAVE TCB ADDR OF ATTACHED TASK
         WAIT  ECB=BAIPL        WAIT TO BE POSTED
         LA    R1,CB10        SET TO DETACH
         DETACH (1)
         CLC   BAIPL+2(2),CF0F  RETURN CODE ZERO
         BE    IP600          BCH ON ZERO
         B     IP540          ERROR- FREE TIOT AND REINITIALIZE
***********************************************************************
*
*              ISSUE SVC 76 TO WRITE IPL RECORD TO SYS1.LOGREC.   20070
*              IF RELIABILITY DATA EXTRACTOR (RDE) IS NOT         20070
*              SYSGENED, NO RECORD IS WRITTEN AND RETURN          20070
*              IS MADE TO THIS ROUTINE.                           20070
*
*              SETUP TO WRITE AND EXECUTE CANNED COMMANDS PROVIDING
*              NO STOPS WERE GIVEN
*              .FLAG=FF MGCR IF NECESSARY
***********************************************************************
*
IP600    EQU   *
         L     R0,CB08                 INDICATE IPL ENTRY         20070
         SVC   STATUS                  GO WRITE IPL RECORD        20070
         MVI   CB1,X'FF'               FLAG-FF=EXECUTE MGCR
         LA    R9,IP800                                            OC43
***********************************************************************
*              WRITE AND/OR EXECUTE COMMANDS FOR READER,WRITER,AND
*              INITIATOR
*              .FIRST TEST FOR COMMAND TO OPERATE ON - CCURNT TO CCNBR
*              .TEST PARTICULAR STOP GIVEN             CB8+1 FOR C'Y'
*              .MOVE COMMAND TO BUFFER
*              .BACKSCAN TO CALCULATE LENGTH
*              .TEST WTO ONLY                    CB1 - 00
*              .TEST ANY STOP AT ALL GIVEN (TO BYPASS WTO PART) CB8-01
*              .WTO
*              .TEST FLAG FOR WTO ONLY -NO MGCR (EXECUTE)   CB1 FOR 00
*              .MGCR
*              .INITIALIZE FOR NEXT COMMAND AND RETURN
*              USES REGISTERS R5 - CURRENT COMMAND CT
*                             R7 - COMMAND START ADDRESS
*                             R6 - ADDRESS OF STOP FLAG AREA
*                             R8 - RETURN REG
*                            R2,R3 -TO BACK SCAN FOR COMMAND LENGTH
***********************************************************************
IP700    EQU   *
         XR    R5,R5
         L     R5,CCURNT               CURRENT BYTE COUNT OF COMMANDS
         LA    R7,CCBGN                        TO FLIP DOWN COMMANDS
         XR    R6,R6
         LA    R6,CB8+1                    SET UP FOR STOP CHECK
IP710    EQU   *
         CL    R5,CCNBR                IS THERE A COMMAND TO WRITE
         BNL   IP799                   NO MORE -GO EXIT
         CLI   0(R6),C'Y'              YES PARAMETER CHECK
         BE    IP780                   YES. SKIP WTO/MGCR
         MVC   IPCC(80),0(R7)          MOVE COMMAND TO BUFFER
         LA    R2,80                   SETUP TO BACKSCAN FOR LENGTH
IP766    EQU   *
         BCT   R2,IP770                DECREMENT COUNT REG
         B     IP780                   NO COMMAND -BCH CT REG ZERO
IP770    EQU   *
         LA    R3,IPCC(R2)             SETUP AREA POINTER REG
         CLI   0(R3),C' '              TEST FOR BLANK
         BE    IP766                   BCH STILL BLANK
         LA    R2,1(R2)           NONBLANK-ADJUST LENGTH
* LENGTH DOES NOT INCLUDE ROUT AND DESC CODES FIELDS
         STH   R2,IPWTO                 SAVE TOTAL LENGTH
         MVC   IPWTO+K2(K2),HALFZERO    ZERO OUT THE RT. CODE    A42562
         LA    R1,IPWTO
         CLI   CB1,X'00'               TEST WTO ONLY
         BE    IP773                   YES-GO STRAIGHT TO WTO
         TM    CB8,X'01'          ANY N'S IN AUTO PARM OF SET COMMAND
         BZ    IP775              NO-SKIP WTO
IP773    EQU   *
         WTO   MF=(E,(1))
IP775    EQU   *
         CLI   CB1,X'00'               TEST FLAG FOR WTO ONLY
         BE    IP780                   BCH YES TO UPDATE FOR NEXT COMMD
         XR    R0,R0    TO SPECIFY SYSTEM COMMAND TO SVC 34        XMCS
         MVC   IPCC(72),8(R7)          MOVE SYSTEM COMMAND TO CIB  XMCS
         S     R2,CB08                 ADJUST START COMMAND LENGTH
         STH   R2,IPWTO                SAVE LENGTH
         MGCR  IPWTO
IP780    EQU   *
         LA    R6,1(R6)                 INCREMENT INDEX REG
         LA    R5,80(R5)
         LA    R7,80(R7)                     FLIP TO NEXT COMMAND
         B     IP710
*
IP799    BR    R9                      RETURN                      OC43
*
***********************************************************************
         AIF   ('&LCTR' EQ '0').L2
*              EXIT TO LOG INITIALIZATION MODULE
         AGO   .S7
.L2      ANOP
         AIF   ('&SMF' EQ '0').S6
*              EXIT TO SMF INITIALIZATION MODULE
         AGO   .S7
.S6      ANOP
*              EXIT TO WAIT MODULE
.S7      ANOP
*                   .CLEAR PTR TO STOP INDICATOR AREA
***********************************************************************
IP800    EQU   *
         AIF   ('&LCTR' EQ '0').NOLGLOD      IS LOG PRESENT       M1874
         LOAD  EP=IEEVLIN                    LOAD LOG INIT       A40047
.NOLGLOD ANOP                                                     M1874
         XC    BACV(4),BACV                ZERO STOP IND ADDRESS
*                                      IS NO LONGER IPL           20030
         MVC   BABCMAX(L'BCLMT),BCLMT  MOVE LIMIT TO BASEA        20030
         AIF   ('&LCTR' EQ '0' AND '&SMF' EQ '0' AND '&TSO' EQ '0').S2
.* IF NEITHER LOG NOR SMF NOR TSO ARE PRESENT GOTO MASTER WAIT    20030
         L     R3,PARMSAVE             PASS PARMLIB UCB PTR       M0419
         L     R12,CVTPTR                                         M0419
         L     R10,SMFOPT              GET SMF OPTION FIELDS      M0419
         SLL   R10,24             ISOLATE SMFOPT+3 IN HI-ORDER    M0419
         ST    R10,CVTSMCA             BYTE OF CVTSMCA SLOT       M0419
         AIF   ('&TSO' EQ '0').SKIPTSO   IS TSO SPECIFIED         20030
         LINK  EP=IEEVSIPL            LINK TO SYS1.BRODCAST INIT  20030
.SKIPTSO ANOP                                                     20030
         AIF   ('&LCTR' EQ '0').SKIPLIN  IS LOG PRESENT            LMCS
         XCTL  EP=IEEVLIN              GO TO LOG INITIALIZATION    LMCS
*
*        LOG CONSTANTS                                             LMCS
LOGTIOT  DC    F'40'                   LENGTH OF LOG TIOT ENTRIES  LMCS
         AGO   .CONSTNT                                            LMCS
.SKIPLIN ANOP
         AIF   ('&SMF' EQ '0').S2      IS SMF PRESENT
         XCTL  EP=IEESMFIT             GO TO SMF INITIALIZATION     SMF
         AGO   .CONSTNT
.S2      ANOP
         XCTL  EP=IEEVWAIT             GO TO MASTER WAIT           LMCS
.CONSTNT ANOP
***********************************************************************
*
*              MODULE CONSTANTS
*
***********************************************************************
*
***********************************************************************
*                                                                     *
*               TOD CLOCK CONSTANTS                                   *
*                                                                     *
***********************************************************************
         DS    0D                                                 20071
DOUBLE   DC    CL8'0'              UNPACKING DOUBLE WORD          20071
TIMEAREA DC    F'0'                DOUBLE WORD FOR                20071
         DC    F'0'                TOD CLOCK VALUE                20071
TODMSG1  WTOR  'IEE116A TOD CLOCK INVALID- REPLY WITH SET PARAMETERS', X
               MF=L,ROUTCDE=(1),DESC=(2)                          20071
TODMSG2  WTOR  'IEE114A DATE=00.000,CLOCK=00.00.00 - REPLY WITH SET PARX
               AMETERS OR U',MF=L,ROUTCDE=(1),DESC=(2)            20071
MSGCHNG  EQU   TODMSG2+K12         SET UP EQUATE TO DYNAMICALLY   20071
*                                  CHANGE MESSAGE                 20071
TODECB   DC    F'0'                TOD WTOR ECB                   20071
TODBUF   DC    X'0078'             START OF REPLY BUFFER          20071
         DC    X'0000'                      **                    20071
TODSET   DC    CL4'SET'            ALREADY IN REPLY BUFFER FOR    20071
*                                  LATER INTERNAL SET COMMAND     20071
TODREPLY DC    CL122' '            REPLY AREA FOR TOD WTORS       20071
YDATE    DC    CL3'0'              *             KEEP THIS        20071
DDATE    DC    CL3'0'              *          AREA TOGETHER       20071
HTIME    DC    CL3'0'              *           FOR INTERNAL       20071
MTIME    DC    CL3'0'              *            SET-UP OF         20071
STIME    DC    CL3'0'              *           DATE AND TIME      20071
COMDATE  DC    C','                COMMA MUST PRECEDE 'DATE='     20071
DATE     DC    C'DATE='            DATE PARAM FOR SET COMMAND     20071
LOWCASE1 DC    X'8481A3857E'       'DATE=' IN LOWER CASE          M1866
COMCLOCK DC    C','                COMMA MUST PRECEDE 'CLOCK='    20071
CLOCK    DC    C'CLOCK=00.00.00'   CLOCK PARAM FOR SET COMMAND    M3230
LOWCASE2 DC    X'83939683927E'     'CLOCK=' IN LOWER CASE         M1866
CCBITS   DC    X'00'               SAVE COND CODE FROM STCK       20071
TEN      DC    H'10'               USED IN CONVERTING TO DECIMAL  20071
YR2000   DC    F'1203826904'       MIC SEC IN TOD ON JAN 1,2000   M5381
D16384   DC    F'16384'            SECOND CONVERSION CONSTANT     20071
D15625   DC    F'15625'                        **                 20071
D86400   DC    F'86400'            NO. SECONDS PER DAY            20071
D365     DC    F'365'              NO. DAYS IN REGULAR YEAR       20071
D366     DC    F'366'              NO. DAYS IN LEAP YEAR          20071
U        DC    CL2'U'              CHARACTER 'U' FOR REPLY        20071
D60      DC    C'60'               CHAR 60 FOR FIRST YEAR OF TOD  20071
F60      DC    F'60'               NO. SECONDS PER MINUTE         20071
D3600    DC    F'3600'             NO. SECONDS PER HOUR           20071
D1460    DC    F'1460'             NO. DAYS PER FOUR YEARS-1     A52614
D1461    DC    F'1461'             NO. DAYS PER FOUR YEARS        20071
***********************************************************************
$ONESEC  DC    F'200' .            TWO SECOND WAIT FOR TIMING     *UNCC
$TDATE   DC    C'T DATE=79.DDD,CLOCK=HH.MM.00   ' T DATE COMMAND  *UNCC
$RUCMD   DC    C'R 00,''U'''     R U CMD PROMPT FOR TOD SUPPORT   *UNC8
         DS    0F
CB8      DC    X'00'                    KEEP        8 BYTE AREA
         DC    C'NNNNNNN'                 TOGETHER      FOR STOP FLAGS
CB1      DC    X'00'
         DS    0H                                                 M5510
HALFZERO DC    H'0'                TJID ZEROES OVERLAY            M5510
*
         DS    0F
IPCAT    CAMLST RECAT,IPDSN,,IPVOLS  PARAMETER LIST FOR CATALOG
IPDSN    DC    C'SYS1.PROCLIB '    PROCLIB NAME
IPVOLS   DC    H'1'                RESIDES ON 1 VOLUME
IPDEVTYP DS    4C                  DEVICE TYPE
IPVOLSER DS    6C                  VOL SER NO
         DC    H'0'                ZERO SEQUENCE NUMBER
CB08     DC    F'8'
CB10     DS    1F
CF04     DC    F'4'
CX108    DC    X'FF00006C'             GET CORE CONSTANT FOR 108 IN S
CF0F     DC    X'0000FFFF'
IPSGJQ   DC    CL4'&JUCB. '             SYSGEN JOB QUEUE UNIT.
IPSGPL   DC    CL5'&PUCB. '
IPLCS    DC    CL1'&LCLS'
IPLCT    DC    AL1(&LCTR)               LOG QUEUE LIMIT.
BCLMT    DC    AL2(&BCLMT)             LIMIT OF BROADCAST MSG RECORDS
*                                      FOR TSO SEND CP            20030
TYPE2321 DC    X'2005'                  2321 ID
BINTABLE DC    C'012345678'             BIN ID'S
BINLAST  DC    C'9'                     LAST ENTRY IN TABLE
MAINSVE  DS    F                                                   AABA
         DS    0F
IP400SW  DC    X'00'                                               AABA
IP400WKR DS    D                                                   AABA
JOBQDSN  DC    CL14'SYS1.SYSJOBQE '                                AABA
PROCDSN  DC    CL14'SYS1.PROCLIB  '                                AABA
LOCCNTRL DC    X'44000000'   LOCATE CONTROL BYTE                   AABA
OBTCNTRL DC    X'C1000000'   OBTAIN CONTROL BYTE                   AABA
CF00F    DC    X'0000000F'                                         AABA
BLNKS    DC    X'40404040'                                         AABA
         DS    0F                                                  AABA
IP381    DC    AL2(IP384-*)        **MESSAGE LENGTH                AABA
         DC    AL2(0)              **                              AABA
         DC    C'IEE343E  '       **MESSAGE NUMBER                 WMCS
IP382    DC    C'      , '         **VOLUME SERIAL NUMBER          AABA
IP383    DC    CL14'              ' *DATA SET NAME                 AABA
         DC    C', NOT MOUNTED'    **                              AABA
IP384    EQU   *
         DC    X'2000'            DESCRIPTOR CODES                 WMCS
         DC    X'9000'            ROUTING CODES                    WMCS
         DS    0F                                                  AABA
IP391    DC    AL2(IP395-*)        **MESSAGE LENGTH                AABA
         DC    AL2(0)              **                              AABA
         DC    C'IEE344E  '       **MESSAGE NUMBER                 WMCS
IP392    DC    CL14'              ' *DATA SET NAME                 AABA
         DC    C', NOT FOUND ON '  **                              AABA
IP393    DC    C'      , '         **VOLUME SERIAL                 AABA
IP394    DC    C'     '            **UNIT NAME                     AABA
IP395    EQU   *
         DC    X'2000'            DESCRIPTOR CODES                 WMCS
         DC    X'9000'            ROUTING CODES                    WMCS
RDYMSG   WTO   'IEE101A READY',MF=L,ROUTCDE=(1),DESC=(3)           WMCS
*
*
         IEFVTIOT
*
PARMSAVE DC    F'0'                     PARMLIB UCB POINTER SAVE   OC43
IPQPAM   DS    4F                       QUEUE MANAGER PARAMETER LIST
*
IPXSA    DS    10F                           ERROR MESSAGE AREA
*
IPREGSV  DS    18F                      REGISTER SAVE
*
IPWTO    DC    X'0050'
         DC    X'0000'
IPCC     DC    4CL20' '
         AIF   ('&TSO' EQ '0').SKIPDC                             20030
SENDTIOT DC    F'20'     LENGTH OF SYS1.BRODCAST TIOT ENTRY       20030
.SKIPDC  ANOP                                                     20030
         AIF  ('&SMF' EQ '0' AND '&LCTR' EQ '0' AND '&TSO' EQ '0').S4
SMFTIOT  DC    F'60'                   LENGTH OF SMF TIOT ENTRIES   SMF
SMFOPT   DC    F'&SMF'                 SMF SYSGEN OPTIONS           SMF
*                                                                   SMF
* BIT REPRESENTATIONS FOR SMFOPT+3                                  SMF
*                                                                   SMF
*        BIT0 - SMF REQUESTED                                       SMF
*        BIT1 -                                                     SMF
*        BIT2 -                                                     SMF
*        BIT3 -                                                     SMF
*        BIT4 -                                                     SMF
*        BIT5 -                                                     SMF
*        BIT6 -                                                     SMF
*        BIT7 - WARM START                                          SMF
*                                                                   SMF
.S4      ANOP
         DS    0F
*
***********************************************************************
.*             COMMANDS ARE ORDERED--S WTR
.*                                   S RDR
.*                                   S INIT
.*             &CCA2 = START WRITER UNIT
.*             &CCN2 = DSNAME OF WRITER
.*             &CCV2 = VOLUME SERIAL OF WRITER
.*             &CCA1 = START RDR UNIT
.*             &CCN1 = DSNAME OF READER
.*             &CCV1 = VOLUME SERIAL OF READER
.*             &CCA3 = START INITIATOR INDICATOR
CCBGN    EQU   *
.A1      AIF   ('&CCA2' EQ '').B1      TEST FOR WTR
WTRCAN   DC    4CL20' '                COMMAND AREA
         ORG   WTRCAN
         DC    C'IEE103I S WTR,&CCA2'  CREATE S WTR UNIT           XMCS
         AIF   ('&CCV2' EQ '' AND '&CCN2' EQ '').A3
         DC    C','                    ADD COMMA
         AIF   ('&CCV2' EQ '').A2      TEST VOLSER OF WTR
         DC    C'&CCV2'                ADD WTR VOLSER
.A2      AIF   ('&CCN2' EQ '').A3      TEST DSNAME FOR WTR
         DC    C',DSNAME=&CCN2'        ADD   DSNAME=NAME
.A3      DC    C' *'                   AUTOMATIC INDICATOR
         DC    X'1000'            DESCRIPTOR CODES                 WMCS
         DC    X'8000'            ROUTING CODES                    WMCS
.B1      AIF   ('&CCA1' EQ '').C1      TEST FOR RDR
         ORG
RDRCAN   DC    4CL20' '                COMMAND AREA
         ORG   RDRCAN
         DC    C'IEE103I S RDR,&CCA1'   CREATE S RDR UNIT          XMCS
         AIF   ('&CCV1' EQ '' AND '&CCN1' EQ '').B3
         DC    C','                    ADD COMMA
         AIF   ('&CCV1' EQ '').B2      TEST VOLSER FOR RDR
         DC    C'&CCV1'                ADD VOLSER FOR RDR
.B2      AIF    ('&CCN1' EQ '').B3     TEST DSNAME FOR RDR
         DC    C',DSNAME=&CCN1'        ADD   DSNAME=NAME
.B3      DC    C' *'                   AUTOMATIC INDICATOR
         DC    X'1000'            DESCRIPTOR CODES                 WMCS
         DC    X'8000'            ROUTING CODES                    WMCS
.C1      AIF   ('&CCA3' EQ '').D1
         ORG
INITC    DC    4CL20' '
         ORG   INITC
         DC    C'IEE103I S &CCA3'      CREATE S UNIT               XMCS
         DC    C' *'
         DC    X'1000'            DESCRIPTOR CODES                 WMCS
         DC    X'8000'            ROUTING CODES                    WMCS
.D1      ANOP
         AIF   ('&CCA3'(1,4) NE 'HASP').FF2                       *UNC8
         ORG   INITC+10+&KCCA3                                    *UNC8
         DC    C',PARM=AUTO *',X'1000',X'8000' .                  *UNCC
.FF2     ANOP                                                     *UNCC
         ORG
CCEND    EQU   *
CCNBR    DC    A(CCEND-CCBGN)           TOTAL NO. BYTES
CCURNT   DC    F'0'
         AIF   ('&CCA3'(1,4) NE 'HASP').FF3                       *UNC8
INITCX   DC    C'''AUTO,NOINIT'',REGION=200K *',X'1000',X'8000' . *UNCC
.FF3     ANOP                                                     *UNCC
VCONBIE0 DC    V(ICFBIE00)
         DS    0F
*
***********************************************************************
*
         IEEBASEA
***********************************************************************
*
SXSA     DSECT
         DS    0F
         IEEXSA
*
***********************************************************************
*
         EJECT                                                     AABA
***                                                                AABA
* THE FOLLOWING DSECT MAPS THE WORK AREA IN GOTTEN CORE THAT IS USED  *
* BY THE OBTAIN AND LOCATE ROUTINES                                AABA
***                                                                AABA
IPWKAREA DSECT                                                     AABA
         DS    0D                                                  AABA
IPWKST   EQU   *                                                   AABA
VCBCOUNT DS    CL2  *COUNT OF VOLUMES IN VCB      *****            AABA
VCBDEVTP DS    CL4  *DEVICE TYPE FOR VOLUME           *            AABA
VCBVOLSN DS    CL6  *VOLUME SERIAL NUMBER             *            AABA
VCBDSSQN DS    CL2  *DATA SET SEQ NUMBER              *            AABA
         DS    CL228                                  ***LOCATE    AABA
VCBSPARE DS    CL10 *                                 *            AABA
VCBNXTCB DS    CL4  *TTR OF NEXT VCB                  *            AABA
VCBINDXA DS    CL3 *TTR OF THIS INDEX BLOCK                        AABA
VCBCVOLM DS    CL6  *CNTRL VOL ID FIELD           *****            AABA
*                                                     ***OBTAIN    AABA
OBTWK    DS    CL85 *TO MAKE WORK AREA FOR OBTAIN *****            AABA
*PARAMETER LIST FOR LOCATE AND OBTAIN ROUTINES                     AABA
         DS    0F                                                  AABA
PARM1    DS    F    LOCATE/OBTAIN CONTROL BYTE                     AABA
PARM2    DS    A   ADDRESS OF DATA SET NAME                        AABA
PARM3    DS    F    ZERO FOR LOCATE                                AABA
*                  ADDRESS OF VOLUME SERIAL FOR OBTAIN             AABA
PARM4    DS    A    ADDRESS OF WORKAREA                            AABA
*DATA AREAS                                                        AABA
DSNAREA  DS    CL44 DATA SET NAME AREA                             AABA
VOLSRAR  DS    CL6  VOLUME SERIAL AREA                             AABA
IPWKEND  EQU   *-IPWKST                                            AABA
CVT      DSECT
         CVT
*
***********************************************************************
*
         DS    0F
UCB      DSECT
         IEFUCBOB
DCMRDST  DSECT ,                                                  *UNCC
         IEECRDCM DSECT=YES                                       *UNCC
PMUCM    DSECT ,                                                  *UNCC
         IEECUCM ,                                                *UNCC
DCMDSECT DSECT ,                                                  *UNCC
         IEECBJH ,                                                *UNCC
         MEND
