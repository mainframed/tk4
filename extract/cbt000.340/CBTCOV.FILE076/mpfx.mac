         MACRO
         MPFX  &SERMPFX,&GENMPFX
         AIF   ('&GENMPFX' NE 'YES').MPNOREF
         TITLE 'MULTIPROCESSOR PRIVATE STORAGE AREA'
         SPACE
         ENTRY MPCVTPTR            .PTR TO MULTIPROCESOR SECONDARY CVT.
         ENTRY CPUSTAT             .LOCN CONTAIN PROCESSOR STATUS BYTE.
         ENTRY PREFIX2             .LOCN CONTAIN INDEX TO OTHR CPU PSA.
         ENTRY IOCPUID             .LOCN CONTAIN CPU BIT FOR I/O IDENT.
         ENTRY CPUID               .LOCN CONTAIN CPU IDENTIFICATN BYTE.
         ENTRY IORGSW              .LOCN CONTAIN CPU I/O NESTNG SWITCH.
         ENTRY IEA0IO01            .ALIAS FOR I/O NESTING SWITCH.
         ENTRY STMASK              .LOCN CONTAIN REQUESTS FOR OTHR CPU.
         ENTRY IEATCBP             .LOCN CONTAIN CPU OLD,NEW TASK ADDR.
         ENTRY PREFTMRA            .LOCN CONTAIN INDEX TO ACTV TMR PSA.
         ENTRY CONSOLID            .LOCN CONTAIN I/O ADR OF CPU CONSOL.
         ENTRY FSSEMAP             .LOCN CONTAIN STORAG RECONFIGUR MAP.
         ENTRY LOCKSTOP            .LOCN CONTAIN PGM TO PUT CPU MANUAL.
         ENTRY TESTDSP             .LOCN CONTAIN PGM TST DISPACHBILITY.
         ENTRY INTEXTRN            .LOCN CONTAIN PGM TST OTHR CPU SGNL.
         ENTRY EXINTPSW            .EXT NEW PSW IN MULTIPROCESSOR.
         ENTRY EXNEWPSW            .EXT NEW PSW IN PARTITIONED SYSTEM.
         ENTRY MCWTEPSW            .MCK NEW PSW IN MULTIPROCESSOR.
         ENTRY MCNEWPSW            .MCK NEW PSW IN PARTITIONED SYSTEM.
         ENTRY INTCNTDL .LOCN CONTAINS ADJUSTABLE LOOP TIME.       2K
         ENTRY CHAN0     .LOCN IS ENTRY FOR CHANNELS 0-6  IORMS
         SPACE
.MPNOREF ANOP
         ORG   IEAQFX00+X'298'     .ORGN TO PUT -FSSEMAP- ON 300 BOUND.
TSTQE    DC    V(IEATSTQE)         .ADDR OF OWN TIME-SLICE TQE.
MPCVTPTR DC    V(IEAMPCVT)         .ADDR MULTIPROCESSOR CVT WITH LOCK.
CHRECNUC DS    0CL14               .CHANNEL AVAILABILITY TABLE.
         AIF   ('&GENMPFX' NE 'YES').MPCHNBY
CHRECBSY EQU   B'10000000'           CHANNEL IN -BUSY- STATUS
CHRECNOP EQU   B'01000000'           CHANNEL IN -NOT OPERATIONL- STATUS
CHRECNGN EQU   B'00100000'           CHANNEL NOT SYSGENNED IN SYSTEM
CHRECNAV EQU   B'00010000'           CHANNEL NOT ON CPU IN SYSTEM
*
.MPCHNBY ANOP
CHAN0    DC    X'1000'                  ENTRY FOR CHANNEL 0
CHAN1    DC    X'1100'                  ENTRY FOR CHANNEL 1
CHAN2    DC    X'1200'                  ENTRY FOR CHANNEL 2
CHAN3    DC    X'1300'                  ENTRY FOR CHANNEL 3
CHAN4    DC    X'1400'                  ENTRY FOR CHANNEL 4
CHAN5    DC    X'1500'                  ENTRY FOR CHANNEL 5
CHAN6    DC    X'1600'                  ENTRY FOR CHANNEL 6
*
PTRIGGER DC    XL1'00'             .PREFIXED CPU INDICATOR.
         AIF   ('&GENMPFX' NE 'YES').MPPRFBY
PTRIGGON EQU   C'P'                  CPU IS PREFIXED (PSA IN HI CORE)
PTRIGGOF EQU   C' '                  CPU NOT PREFIXD (PSA IN LO CORE)
*
.MPPRFBY ANOP
CPUSTAT  DC    XL1'01'             .CPU STATUS BYTE.
         AIF   ('&GENMPFX' NE 'YES').MPSTABY
CPUSTMP2 EQU   B'00000000'           TWO CPU MULTIPROCESSOR SYSTEM
CPUSTMP1 EQU   B'00000010'           ONE CPU MULTIPROCESSOR SYSTEM
CPUSTPRT EQU   B'00000001'           ONE CPU PARTITIONED SYSTEM
CPUSTTWO EQU   CPUSTPRT+CPUSTMP1   .CODES FOR ONE-PROCESSOR SYSTEM.
*
.MPSTABY ANOP
PREFIX2  DC    XL4'0003F000'       .ADDR OF PREFIX AREA IN HIGH CORE.
IOCPUID  DC    XL4'00000000'       .CPU IDENTIFICATN BIT FOR I/O OPER.
CPUID    DC    XL1'00'             .CPU IDENTIFICATION BYTE.
CPUWAIT  DC    XL1'00'             .FLAG BYTE FOR CPU SYNCHRONIZATION.
         DC    XL1'00'              RESERVED
         SPACE
         DC    XL1'00'             .I/O FLIH NESTING SWITCH.
         ORG *-2                   .MAKE BELIEVE IEA0IO01 IS BR/NOP SW.
IORGSW   DS    0H                  .TAG FOR I/O FLIH NESTING SWITCH.
IEA0IO01 DS    0H                  .ALIAS FOR I/O FLIH NESTING SWITCH.
         ORG *+2                   .REORIGIN AFTER ASSIGN NEST SW TAGS.
         SPACE
STMASK   DC    F'0'                .SHOULDER TAP MASK.
IEATCBP  DC    V(IEAMSTCB)             ADR OF NEW TCB
         DC    V(IEAMSTCB)              ADR OF OLD TCB
PREFTMRA DC    F'0'                .INDX TO PSA WITH ACTIVE TIMER.
*
ASRFLAGS DC    XL1'00'             .FLAG BYTE FOR RMS SYNCHRONIZATION.
         AIF ('&GENMPFX' NE 'YES').MPASRBY
ASRTOFLG EQU   B'10000000'           TIME-OUT FLG - CPU GOT MALFN SIGNL
ASRCMFLG EQU   B'00001000'           COMPLETN FLG - RMS RUN ON OTHR CPU
ASRTORST EQU   X'FF'-ASRTOFLG      .MASK TO TURN OFF MALFN SIGNAL FLAG.
ASRCMRST EQU   X'FF'-ASRCMFLG      .MASK TO TURN OFF RMS COMPLETE FLAG.
*
.MPASRBY ANOP
CONSOFF  DC    XL1'00'             .CONSOLE RECONFIGURATION FLAGS.
         AIF   ('&GENMPFX' NE 'YES').MPCNSBY
CONSOFCP EQU   B'10000000'           CONSOLE UNAVAILABLE - CPU OFFLINE
CONSOFCH EQU   B'01000000'           CONSOLE UNAVAILABLE - CHANL OFFLIN
*
.MPCNSBY ANOP
CONSOLID DC    XL2'0000'           .CH-CU-DV ADDR OF 1052 ON THIS CPU.
*
UCBSAVE  DC    7Y(DMYUCB)          .TABLE FOR IOS TO REDUCE UCB LOOKUP.
DMYCHA   DC    X'7FFF'             DUMMY UCB CHANNEL ADDRESS
DMYUCB   EQU   DMYCHA-4-IPLPSW     ADDR 4 BEFORE INVALID I/O ADDR COMPR
*
         SPACE
         AIF   ('&SERMPFX' EQ 'SERP').MPNOSER
MCNEWPSW DC    A(0)                .DISABLED PSW TO START UP OTHER CPU.
EDSMCH   DC    V(IGFN0000)         .MCH ENTRY POINT.
         AGO   .MPFXPSW
.MPNOSER ANOP
MCNEWPSW DC    XL4'00020000'       .COMPLETELY DISABLED WAIT PSW.
         DC    XL4'000000E2'       .WAIT STATE CODE FOR SYSTEM W/O SER.
.MPFXPSW ANOP
MCWTEPSW DC    XL4'00020000'       .COMPLETELY DISABLED WAIT PSW.
         DC    XL4'00000A21'       .M65MP MACHINE CHECK WAIT CODE.
EXNEWPSW DC    XL4'00040000'       .RESUME EXTERNAL NEW PSW.
         DC    V(IEAQEX00)         .EX FLIH ADDR.
EXINTPSW DC    XL4'00040000'       .DISABLED ENTRY TO MALF ALERT TEST.
         DC    V(INTEXTRN)         .MULTISYSTEM EX INTRPT ENTRY POINT.
         SPACE
*
*   CORE STATUS FOR EACH 2K BLOCK (2 BITS FOR EACH 2K BLOCK)
*
*                   00 - OK (BLOCK IS DESCRIBED BY VALID FBQE OR DQE)
*                   11 - CONFIGURED OUT (DOES NOT EXIST ON ANY QUEUE)
*
         SPACE
FSSEMAP  DC    XL256'00'           .STORAGE ELEMENT STATUS MAP (2048K).
         SPACE
         AIF   ('&GENMPFX' NE 'YES').MPEJTBY
         EJECT
.MPEJTBY ANOP
*
*   FLRETFLG, RNEXCODE, RNSAVGPR, AND RNSAVPSW FUNCTION TO ALLOW
*   EXTERNAL INTERRUPTS TO BE TAKEN WHILE SPINNING IN THE PI, IO,
*   OR EX FLIH'S TEST-SUPERVISOR-LOCK LOOP. (TO TRAP POSS. M.A.)
*
RNSAVCSW DC    D'0'                .I/O FLIH T-S-L LOOP CSW SAVE AREA.
RNSAVPSW DC    D'0'                .ALL FLIH T-S-L LOOP PSW SAVE AREA.
RNSAVGPR DC    16F'0'              .ALL FLIH T-S-L LOOP GPR SAVE AREA.
RNSAVFPR DC    4D'0'               .ALL FLIH T-S-L LOOP FPR SAVE AREA.
*
RNEXCODE DC    X'00'               .EXT FLIH T-S-L LOOP INTR COD STACK.
INTCNTDL DC    H'0' . MAJOR LOOP CTL, INTCTCNT VALUE ADJUSTED.     2K
         AIF   ('&GENMPFX' NE 'YES').MPEXTBY
EXMAINTR EQU   B'00100000'         .MALFUNCTION ALERT - OTHER CPU MCHK.
EXSCINTR EQU   B'00010000'         .SYSTEM CALL - OTHER CPU SHOULDRTAP.
EXMLFRST EQU   X'FF'-EXMAINTR      .MASK TO TURN OFF MALF ALERT EX COD.
EXCPUATT EQU   EXMAINTR+EXSCINTR   .EX INTRPT CODES FOR OTHR CPU SIGNL.
EXNMINTR EQU   X'FF'-EXCPUATT      .EX INTRPT CODES NOT FRM MULTISYSTM.
INTSIZE  EQU   L'RNEXCODE          .SYMBOLIC LENGTH PSW INTERRUPT CODE.
EXIPLWRD EQU   B'10000000'         .MULTISYST DIR CTL - EXTERNAL START.
EXCALWRD EQU   B'00010000'         .MULTISYST DIR CTL - SYSTEM CALL.
*
.MPEXTBY ANOP
FLRETFLG DC    X'00'               .ALL FLIH T-S-L LOOP INTR TYP STACK.
         AIF   ('&GENMPFX' NE 'YES').MPFLGBY
FSSTFLAG EQU   B'00100000'           ST RTNE INDICATOR
FSPIFLAG EQU   B'00000100'           PI FLIH INDICATOR
FSEXFLAG EQU   B'00000010'           EX FLIH INDICATOR
FSIOFLAG EQU   B'00000001'           IO FLIH INDICATOR
FSSTNOFL EQU   X'FF'-FSSTFLAG      .MASK TO TURN OFF ST RTNE SPIN FLAG.
FSALFLAG EQU   FSIOFLAG+FSEXFLAG+FSPIFLAG .ANY STACK INDICATOR.
*
.MPFLGBY ANOP
         SPACE
         AIF   ('&GENMPFX' NE 'YES').MPCODBY
         TITLE 'E X T E R N A L    I N T E R R U P T    H A N D L E R'
*
INTRGPSA EQU   14                  .INDX REG TO OTHER CPU PSA.
INTRGWK1 EQU   INTRGPSA            .WORK REG.
INTRGPSW EQU   15                  .ADDR REG FOR EXIT PSW.
INTRGWK2 EQU   INTRGPSW            .WORK REG.
         SPACE
*
*   DEFINITION OF FLAGS USED IN FIRST BYTE OF -STMASK-
*
WRDPEND  EQU   X'80'               .SHOULDER TAP FLAG FOR PENDING REQ.
WRDWTBEL EQU   X'20'               .SHOULDER TAP MASK FOR BELL RING WT.
WRDWTCCH EQU   X'10'               .SHOULDER TAP MASK FOR CCH PROCESS.
WRDWTHIO EQU   X'01'               .SHOULDER TAP MASK FOR IMM HALT I/O.
WRDNTBEL EQU   X'FF'-WRDWTBEL      .MASK TO TURN OFF BEL STAP BIT.
WRDNTCCH EQU   X'FF'-WRDWTCCH      .MASK TO TURN OFF CCH STAP BIT.
WRDNTHIO EQU   X'FF'-WRDWTHIO      .MASK TO TURN OFF HIO STAP BIT.
WRDWTIMM EQU   WRDWTBEL+WRDWTHIO   .SERVICES PERFORMED W/O SYSTEM LOCK.
WRDNTIMM EQU   X'FF'-WRDWTIMM      .SERVICES NOT DEFIN W/O SYSTEM LOCK.
*
         SPACE
*
*              S E C O N D    C P U    I N T R P T    A N A L Y S I S
*
         SPACE
*
*   EXTERNAL INTERRUPT ENTRY POINT.  TEST FOR MALFUNCTION ALERT OR
*   CHANNEL CHECK HANDLER SHOULDER TAP.  IF EITHER, EXECUTE SECOND
*   CPU RECOVERY MANAGEMENT SYSTEM INTERFACE, WHICH CAUSES THIS CPU
*   TO SPIN WHILE WAITING FOR THE FIRST CPU TO RECOVER FROM ITS ERROR.
*
*
INTEXTRN DS    0H                  .EX INTERRUPT MALF ALERT TEST ENTRY.
         STM   INTRGPSA,INTRGPSW,INTEXSAV .SAVE CONTENTS OF REGS CHNGD.
         L     INTRGPSA,PREFIX2    .PICK INDEX TO OTHER CPU PSA.
         TM    EXOPSW+3,EXMAINTR   .TEST MALFUNCTION ALERT INTERRUPT.
         BO    INTMLFAL            .YES - COMMENCE MCH SETUP.
         TM    STMASK-IEAQFX00(INTRGPSA),WRDWTCCH .TEST CHANCHECK STAP.
         BO    INTCCHST            .YES - COMMENCE CCH SETUP.
*
*   NOW TEST IF THIS CPU SHOULD PERFORM A SERVICE FOR THE OTHER CPU,
*   WHO RETAINS THE SYSTEM LOCK.  NOTE THAT THIS CPU WILL PERFORM THE
*   SERVICE BEFORE GOING TO THE EX FLIH, WHERE THE LOCK IS TESTED.
*
         TM    STMASK-IEAQFX00(INTRGPSA),WRDWTIMM .TEST IMMEDIATE STAP.
         BNZ   INTEXRTN            .YES - GO PERFM THE SERVIC REQUIRED.
*
*   GO ON TO NORMAL EX FLIH IF THIS CPU HAS ANOTHER INTERRUPT BESIDES
*   THE IMMEDIATE SHOULDRTAP.  ELSE RETURN DIRECTLY TO INTERRUPTED PGM.
*
INTEXTST TM    FLRETFLG,FSSTFLAG   .TEST IF SPIN IN SIGNAL ROUTINE.
         BO    INTEXBAK            .YES - FORC RETURN BY RELOD OLD PSW.
         LA    INTRGPSW,EXNEWPSW   .SET UP TO ENTER EX FLIH.
         TM    FLRETFLG,FSALFLAG   .TEST CPU SPIN ON LOCK IN ANY FLIH.
         BNZ   INTEXSET            .YES - CPU ALREDY HAS ANOTHR INTRPT.
         L     INTRGWK1,STMASK-IEAQFX00(,INTRGPSA) .PICK OTHR STAP MSK.
         N     INTRGWK1,INTEXSTM   .TEST ANY SERVICE BESIDES W/O LOCK.
         BNZ   INTEXSET            .YES - GO ON TO EX FLIH TO GET LOCK.
         TM    EXOPSW+3,EXNMINTR   .TEST ANY NON-MULTIPROCES EX INTRPT.
         BNZ   INTEXSET            .YES - GO ON TO EX FLIH TO SERVICE.
INTEXBAK LA    INTRGPSW,EXOPSW     .SET UP TO GO BACK TO INTRPT POINT.
INTEXSET MVC   INTEXPSW,PSWDSPBG(INTRGPSW) .MOVE EXIT PSW TO WORK AREA.
         LM    INTRGPSA,INTRGPSW,INTEXSAV .RESTORE REGISTERS.
         LPSW  INTEXPSW            .E X I T.
         SPACE
*
*   CONSTANTS AND WORKAREAS USED BY EXTERNAL SIGNAL INTERFACE
*
INTEXSAV DC    D'0'                .INTER-CPU COMMUNICATN REG SAV AREA.
INTEXPSW DC    D'0'                .INTER-CPU COMMUNICATN PSW LOD AREA.
INTEXSRG DC    D'0'                .EXTERNAL SIGNAL RECV REG SAVE AREA.
FLASSAVE DC    D'0'                .EXTERNAL SIGNAL SEND REG SAVE AREA.
TESTSAVE DC    5F'0'               .DISPATCHABILITY RTN WKREG SAV AREA.
TESTBACK DC    F'0'                .DISPATCHABILITY RTN RTREG SAV AREA.
PSWDSPBG EQU   0                   .SYMBOLIC OFFSET TO 1ST BYTE OF PSW.
PSWDSPWT EQU   1                   .SYMBOLIC OFFSET TO 2ND BYTE OF PSW.
PSWWAIT  EQU   X'02'               .WAIT BIT IN BYTE ONE OF PSW.
PSWENAB  EQU   X'FF'               .TEST PSW ENABLED FOR INTERRUPTS.
PSWSIZE  EQU   L'INTEXPSW          .SYMBOLIC LENGTH OF PSW.
NTZERO   EQU   7                   .SYMB I2 FIELD FOR COND CODE NOT 0.
CCZERO   EQU   8                   .SYMB I2 FIELD FOR COND CODE EQL 0.
MCHKOK   EQU   X'FF'               .SYMB I2 FIELD FOR TEST MCOPSW+2.
INTEXSTM DC    AL1(WRDNTIMM),X'FFFFFF' .MASK FOR ALL BUT IMMED STAP.
         TITLE 'R E C O V E R Y    M A N A G M E N T    I N T R F A C'
*
*   SECOND CPU MCH - CCH ROUTINE.  IF HARDWARE ERROR HAS IMPACTED
*   THIS CPU, LOAD MACHINE CHECK WAIT PSW.
*
*
INTCCHST NI    STMASK-IEAQFX00(INTRGPSA),WRDNTCCH .TURN OFF STAP FLAG.
INTMLFAL OI    ASRFLAGS,ASRTOFLG   .INDICATE THIS CPU PROCESSING MALF.
         TM    ASRFLAGS-IEAQFX00(INTRGPSA),ASRTOFLG .TEST MLF BOTH CPU.
         BNZ   INT2WAIT            .YES - PUT BOTH CPUS INTO WAIT.
         TM    EXOPSW+3,EXMAINTR   .TEST MALFUNCTION ALERT (MCH).
         BZ    INTDOCCH            .NOT ON - CCH STAP BYPASSES LOCK.
         L     INTRGWK2,MPCVTPTR   .ADDR MULTIPROCESSING SECONDARY CVT.
         TS    MPCVTLK(INTRGWK2)   .TEST SYSTEM LOCK BYTE.
         BZ    INTDOMCH            .IF OFF, LOCK AND BRANCH.
         CLC   MPCVTAFF(,INTRGWK2),CPUID .OTHRWISE, CHECK CPU AFFINITY.
         BNE   INTDOMCH            .OTHER GUY HAD LOCK - LET HIM RMS.
INT2WAIT LA    INTRGPSW,MCWTEPSW   .SETUP WAIT (MACH CHECK) PSW.
         B     INTEXSET            .GO LOAD PSW.
         SPACE
*
*   MALFUNCTION ALERT INDICATES OTHER CPU EXPERIENCED MACHINE CHECK.
*   ISSUE ELECTRONIC START TO OTHER CPU TO SET IT TO PROCESSING MCH.
*
INTDOMCH MVC   MPCVTAFF(,INTRGWK2),CPUID-IEAQFX00(INTRGPSA) .LOCK SUPV.
         MVC   PSWDSPBG(PSWSIZE,INTRGPSA),MCNEWPSW .SETUP RESTART PSW.
         L     INTRGWK1,INTCTIPL   .SET UP LOOP COUNTER.
INTWTIPL BCT   INTRGWK1,INTWTIPL   .SPIN FOR 250 MS.
         WRD   INTERPSW,EXIPLWRD   .ISSUE ELECTRONIC IPL TO MALF CPU.
*
*   WAIT FOR OTHER CPU TO COMPLETE RMS PROCESSING.  IF OTHER CPU DIED
*   (DID NOT RESPOND WITHIN REASONABLE TIME), LOAD WAIT STATE PSW.
*
INTDOCCH NI    ASRFLAGS,ASRCMRST   .CLEAR WAIT-FOR-RMS-COMPLETE FLAG.
         LH    INTRGWK2,INTCTCNT .SET UP LOOP COUNTER.             2K
INT1SPIN LH    INTRGWK1,INTCTSPN .SET UP SPIN COUNTER.             2K
         STH   INTRGWK2,INTCNTDL .SAVE MAJOR LOOP CONTROL.         2K
         CNOP  0,8                 .PUT BCT ON DOUBLE WORD BOUNDARY.
INTWTCMP BCT   INTRGWK1,INTWTCMP   .SPIN FOR 2 MS.
         TM    ASRFLAGS,ASRCMFLG   .TEST IF RMS PROCESSING COMPLETED.
         BNZ   INTRESUM            .YES - GO TEST IF CAN RESUME.
         L     INTRGPSA,PREFIX2    .PICK INDEX TO OTHER CPU PSA.
         TM    STMASK-IEAQFX00(INTRGPSA),WRDWTIMM .TEST IMMEDIATE STAP.
         BNZ   INTEXRTN            .YES - GO PERFM THE SERVIC REQUIRED.
INT2SPIN LH    INTRGWK2,INTCNTDL  .SAVE MAJOR LOOP CTL OBTAIN.     2K
         BCT   INTRGWK2,INT1SPIN .KEEP SPINNING TILL TIME RUNS OUT.2K
INT1WAIT LA    INTRGPSW,INTERPSW   .ERROR PSW - RMS NEVER COMPLETED.
         B     INTEXSET            .GO LOAD PSW.
         SPACE
*
*   TEST RMS RESULTS.  IF RMS PUT ERROR CPU INTO WAIT, THIS CPU WAITS
*   ALSO.  IF RMS WAS ABLE TO RECOVER, TRAP STRAY MALFUNCTION ALERTS
*   AND RE-PROCESS EXTERNAL INTERRUPT.
*
INTRESUM L     INTRGPSW,INTRMSAD   .RMS RESUME PSW LOCATION.
         TM    PSWDSPWT(INTRGPSW),PSWWAIT .TEST IF RMS WENT INTO WAIT.
         BZ    INTRESOK            .NO WAIT - LET THIS CPU RESUME.
         TM    PSWDSPBG(INTRGPSW),PSWENAB .TEST COMPLET DISABLED WAIT.
         BZ    INTEXSET            .YES - LOAD SAME PSW ON THIS CPU.
INTRESOK MVC   INTEXPSW,EXOPSW     .SAVE EXTERNAL OLD PSW.
         MVC   EXNPSW(PSWSIZE),INTENABL .ENABLED PSW TRAP MALF ALERT.
         LPSW  EXNPSW              .ENABLE - OTHR CPU STILL HAS LOCK.
INTTENAB LPSW  INTDISAB            .DISABLE EXTERNAL.
INTTDSAB NI    ASRFLAGS,ASRTORST   .CLEAR HAVE-GOTTEN-MALF-SIGNAL FLAG.
         OC    INTEXPSW+3(INTSIZE),EXOPSW+3 .SAVE EX INTRPT CODE BITS.
         MVC   EXOPSW,INTEXPSW     .RESTORE ORIGINAL EX OLD PSW.
         NI    EXOPSW+3,EXMLFRST   .CLEAR MALFUNCTION ALERT BIT.
         MVC   EXNPSW(PSWSIZE),EXINTPSW .RESTORE CPU EXTERN NEW PSW.
         LA    INTRGPSW,EXINTPSW   .SET UP TO RE-ENTER PRE-FLIH.
         B     INTEXSET            .GO LOAD PSW.
         SPACE
*
*   CONSTANTS AND WORKAREAS USED BY RECOVERY MANAGEMENT INTERFACE
*
         DS    0D                   ADDRESSABILITY ON DOUBLE WORD
INTENABL DC    XL4'01040000'       .PSW TO TRAP MALFUNCTION ALERTS.
         DC    A(INTTENAB)         .TEMP EX ENTRY PT.
INTDISAB DC    XL4'00040000'       .DISABLED PSW FOR RMS INTERFACE.
         DC    A(INTTDSAB)         .INTF RESUME LOCN.
INTERPSW DC    XL4'00020000'       .COMPLETELY DISABLED WAIT PSW.
         DC    XL4'00000A22'       .M65MP RMS-INCOMPLETE WAIT CODE.
FLASENAB DC    XL4'01040000'       .PSW TO ALLOW MALFUNCTION ALERT.
         DC    A(FLASNOMA)         .ADDR VECTOR IF NO EXTERNAL INTERPT.
FLASDSAB DC    XL4'00040000'       .DISABLED PSW FOR SIGNAL RTNE.
         DC    A(FLASHOFF)         .RESUME LOCN.
         AIF   ('&SERMPFX' NE 'MCH').MPRESLV
         EXTRN IGFNUC01            .ADDR OF NUCL DATA IN RMS COMM AREA.
INTRMSAD DC    A(IGFNUC01+16)      .ADDR OF RESUM PSW IN RMS COMM AREA.
.MPRESLV ANOP
FLASTMOT DC    F'0'                .EXTERNAL SIGNAL TIME OUT COUNTER.
FLASSPIN DC    F'8388608'          .COUNT TO SPIN 80 SEC.
INTCTIPL DC    F'217391'           .COUNT TO SPIN 250 MS.
INTCTCNT DC    H'6000' .COUNT TO LOOP TEN SEC(ADJUSTABLE TO 53).   2K
INTCTSPN DC    H'1739' .COUNT TO SPIN 2 MS.                        2K
MPCVTAFF EQU   0                   .OFFSET OF CPU AFFINTY BYT IN MPCVT.
MPCVTLK  EQU   1                   .OFFSET OF SYSTM LOCK BYTE IN MPCVT.
LOKSIZE  EQU   MPCVTLK+1           .SYMBOLIC LENGTH OF SYSTEM LOCK.
         TITLE 'E X T E R N A L    S I G N A L    I N T E R F A C E S'
*
*              S E C O N D    C P U    S E R V I C E    R O U T I N E
*
         SPACE
*
*   DECIDE WHICH SERVICE THIS (SECOND) CPU IS REQUESTED TO PERFORM
*   FOR THE SIGNALLING (FIRST) CPU WHILE THE FIRST RETAINS THE LOCK.
*
INTEXRTN STM   INTRGPSA,INTRGPSW,INTEXSRG .SAVE CONTENTS OF REGS CHNGD.
         L     INTRGPSA,PREFIX2    .PICK INDEX TO OTHER CPU PSA.
         TM    STMASK-IEAQFX00(INTRGPSA),WRDWTBEL .TEST SYSTMWAIT STAP.
         BO    INTBELST            .YES - GO PUT CPU INTO WAIT STATE.
         TM    FLRETFLG,FSIOFLAG   .TEST THIS CPU SPINNING IN IO FLIH.
         BZ    INTEXHIO            . NO - BYPAS STACK IO INTERRUPT.
         MVC   RNSAVCSW(PSWSIZE),CSWLOC .SAVE ORIGINAL IO INTRPT CSW.
INTEXHIO TM    STMASK-IEAQFX00(INTRGPSA),WRDWTHIO .TEST IMMED HIO STAP.
         BO    HLTIOUNT            .YES - GO TO IMMEDIATE HALT IO RTNE.
INTEXSWC TM    FLRETFLG,FSIOFLAG   .TEST THIS CPU SPINNING IN I/O FLIH.
         BZ    INTEXRTO            . NO - BYPAS UNSTACK I/O INTERRUPT.
         MVC   CSWLOC(PSWSIZE),RNSAVCSW .RESTOR ORIGINAL IO INTRPT CSW.
INTEXRTO LM    INTRGPSA,INTRGPSW,INTEXSRG .RESTORE REGISTERS.
         TM    ASRFLAGS,ASRTOFLG   .TEST IF SERV REQ BY RECOVERY MNGMT.
         BZ    INTEXTST            . NO - GO LOAD RESUME PSW.
         B     INT2SPIN            .RETURN TO WAIT FOR RMS COMPLETE.
         SPACE
*
*              F I R S T    C P U    S I G N A L    R O U T I N E
*
         SPACE
*
*   SIGNAL THE OTHER (SECOND) CPU THAT IT IS TO PERFORM A SERVICE WHICH
*   HAS CPU AFFINITY AND CAN NOT BE DONE BY THE REQUESTING (FIRST) CPU.
*
FLASH    DS    0H                  .ENTRY TO 1ST CPU COMMUNICATN RTNE.
         TM    CPUSTAT,CPUSTTWO    .TEST IF TWO PROCESSOR SYSTEM.
         BCR   NTZERO,INTRGWK1     . NO - DON'T SHOULDER TAP.
         TM    STMASK,WRDWTIMM+WRDPEND  .TEST USER SERV, TASK SW REQ.
         BCR   CCZERO,INTRGWK1     . NO - DON'T SHOULDER TAP.
         STM   INTRGWK1,INTRGWK2,FLASSAVE .STORE REGISTERS.
         L     INTRGWK2,FLASSPIN   .SET UP SPIN COUNTER.
FLAS1SPN ST    INTRGWK2,FLASTMOT   .SAVE CURRENT SPIN COUNT.
         WRD   INTERPSW,EXCALWRD   .ISSUE SYSTEM CALL TO OTHER CPU.
         TM    STMASK,WRDWTIMM     .TEST IF IMMED SERVICE PROCESSED.
         BZ    FLASLEVE            .YES - GO OUT.
FLASCONT L     INTRGWK2,FLASTMOT   .RESTORE REMAINING SPIN COUNT.
         L     INTRGPSA,PREFIX2    .PICK INDEX TO OTHER CPU PSA.
         TM    MCOPSW+2-IEAQFX00(INTRGPSA),MCHKOK .TST OTHR HAD MCHCHK.
         BO    FLAS2SPN            . NO - KEEP TRYING TO GET THROUGH.
         OI    FLRETFLG,FSSTFLAG   .INDICATE SPIN IN SIGNAL ROUTINE.
         LPSW  FLASENAB            .ENABLE - THIS CPU STILL HAS LOCK.
FLASNOMA LPSW  FLASDSAB            .DISABLE EXTERNAL.
FLASHOFF NI    FLRETFLG,FSSTNOFL   .CLEAR SPIN IN SIGNAL ROUTINE FLAG.
         OC    RNEXCODE,EXOPSW+3   .SAVE EXTRN INTRPT CONDITION.
         BZ    FLAS2SPN            .BYPASS MARK RETRN IF NO EX STACKED.
         OI    FLRETFLG,FSEXFLAG   .INDICATE RECURSIVE EXTRN INTERRUPT.
FLAS2SPN BCT   INTRGWK2,FLAS1SPN   .KEEP SPINNING TILL TIME RUNS OUT.
         MVC   INTEXSAV,FLASSAVE   .PASS REGISTERS ON.
         B     INT1WAIT            .GO INDICATE MACHINE CHECK.
FLASLEVE LM    INTRGWK1,INTRGWK2,FLASSAVE .RESTORE REGISTERS.
         BR    INTRGWK1            .RETURN TO CALLER.
         SPACE
*
*              T A S K    R E M O V A L    R O U T I N E
*
         SPACE
*
TESTTCB  EQU   4                        TCB TO BE TESTED
WKRG     EQU   5                        WORK REGISTER
PRF2     EQU   6                        ADDRESS OF OTHER CPU PSA
LKRG     EQU   7                        RETURN REG FOR TCB DISPATCH TST
VECTR    EQU   8                        BRANCH LOCN IF TCB NON-DISP
RTRG     EQU   14                       RETURN REG FROM ROUTINE
*
IEATCBPO EQU   IEATCBP+4           .LOCN CONTAIN CPU CURRENT TASK ADDR.
TCBRBP   EQU   0                        DISPL RB POINTER IN TCB
RBWCF    EQU   28                       DISPL WAIT COUNT IN RB
*
         SPACE
*
*   BRANCH ENTRY FROM SUPERVISR RUTINES WHICH CHANG THE DISPATCHABILITY
*   STATUS OF TASKS OTHER THAN THE CURRENT TASK ON THE EXECUTING CPU.
*   BEGIN BY TESTING IF A CURRENTLY EXECUTING (ON THE OTHER CPU) TASK
*   HAS BEEN SET NON-DISPATCHABLE.  IF SO, CAUSE AN EXTERNAL INTERRUPT
*   (SHOULDER TAP) TO THE OTHER CPU, AND WAIT UNTIL THAT CPU HAS STORED
*   THE STATUS ASSOCIATED WITH THE CURRENT TASK HE WAS WORKING UPON.
*
         SPACE
TESTDSP  DS    0H                       ENTRY FRM RTN CHNG DSPCHBILITY
         STM   TESTTCB,VECTR,TESTSAVE   SAVE REGS OVER ROUTINE
         ST    RTRG,TESTBACK            SAVE RETURN ADDRESS
         L     PRF2,PREFIX2             PICK ADDRESS OF 2ND CPU PSA
         LA    LKRG,TESTOWN             BYP STAP IF OLD2 DISPATCHABLE
         L     TESTTCB,IEATCBPO-IEAQFX00(,PRF2) PICK CURR TASK 2ND CPU
         BAL   VECTR,READYCHK           GO CHECK - COME BACK IF N-D
         OI    STMASK,WRDPEND           SET SHOULDER TAP PENDING FLAG
         BAL   RTRG,FLASH               LINK TO 1ST CPU SIGNAL ROUTINE
         TM    FLRETFLG-IEAQFX00(PRF2),FSEXFLAG TEST IF HAD EXTRN INTR
         BZ    FLASCONT                 NO - LOOP TILL GET RESPONSE
*
*   CONTINUE BY TESTING WHETHER ANY OF THE TASKS TO WHICH THE TWO CPUS
*   WOULD NEXT BE DISPATCHED HAVE BEEN SET NON-DISPATCHABLE.  IF SO,
*   ZERO THE -NEW- TASK ADDRESSES ON BOTH CPUS TO FORCE THE DISPATCHER
*   TO SEARCH THE ENTIRE TCB QUEUE FOR READY TASKS.
*
TESTOWN  LA    VECTR,ZERONEW            FORCE REDYQ SCAN IF REST NONDSP
         L     TESTTCB,IEATCBPO         PICK CURR TASK OWN CPU
         BAL   LKRG,READYCHK            GO CHECK
         L     TESTTCB,IEATCBP-IEAQFX00(,PRF2) PICK NEXT TASK 2ND CPU
         BAL   LKRG,READYCHK            GO CHECK
         L     TESTTCB,IEATCBP          PICK NEXT TASK OWN CPU
         BAL   LKRG,READYCHK            GO CHECK
TESTRET  LM    TESTTCB,VECTR,TESTSAVE   RESTORE REGISTERS
         L     RTRG,TESTBACK            PICK RETURN ADDRESS
         BR    RTRG                     EXIT
         SPACE
*
*   SUBROUTINE TO TEST TCB DISPATCHABILITY FLAGS AND RB WAIT COUNT.
*
READYCHK LTR   TESTTCB,TESTTCB          TEST IF HAVE TCB ADDRESS
         BCR   CCZERO,VECTR              NO - CANNOT BE DISPATCHABLE
         LH    WKRG,TCBFLGS(,TESTTCB)   PICK TCB NON-DISPATCHABL FLGS
         LTR   WKRG,WKRG                TEST IF ANY FLAGS SET
         BCR   NTZERO,VECTR              YES - TCB NOT DISPATCHABLE
         L     WKRG,TCBRBP(,TESTTCB)    PICK TOP RB ON SELECTED TCB
         TM    RBWCF(WKRG),PSWENAB      TEST IF RB IN WAIT STATE
         BCR   NTZERO,VECTR              YES - TCB NOT DISPATCHABLE
         BR    LKRG                     TCB IS DISPATCHABLE
*
ZERONEW  XC    IEATCBP,IEATCBP          ZERO BOTH NEWS - OWN
         XC    IEATCBP-IEAQFX00(,PRF2),IEATCBP-IEAQFX00(PRF2) - OTHR
         B TESTRET                      GO RESTORE REGISTERS, EXIT
         TITLE 'H A L T    I / O    I N T E R F A C E'
*
HIORG0   EQU   0                   .SYMB REG.
HIORG1   EQU   1                   .UCB MP65.
HIORG2   EQU   2                   .WORK REG.
HIORGL   EQU   7                   .UCB SRCH.
HIORGU   EQU   8                   .UCB ADDR.
HIORGE   EQU   14                  .LINK REG.
HIORGF   EQU   15                  .RETN REG.
*
         SPACE
*
*              S E C O N D    C P U    H A L T    I / O    R O U T I N
*
         SPACE
*
*   ENTRY FROM EXTERNAL INTERRUPT.  WHEN HIO SERVICE HAS BEEN PERFORMD,
*   INDICATE SO BY TURNING OFF REQUEST FLAG IN OTHER CPU STMASK, AND
*   RETURN TO SECOND CPU SERVICE ROUTINE TO TEST FOR FURTHER REQUESTS.
*
HLTIOUNT DS    0H                  .EX INTERRUPT IMM HIO ENTRY.
         STM   HIORG0,HIORGF,HIOSAV .SAVE ALL REGS.
         TM    CPUSTAT,CPUSTTWO    .TEST IF TWO PROCESSOR SYSTEM.
         BZ    HIOTST              .YES - CONTINUE.
HIOLEV   L     HIORGE,PREFIX2      .OTHER CPU PSA ADDR.
         NI    STMASK-IEAQFX00(HIORGE),WRDNTHIO .TURN OFF IMM HIO FLAG.
         LM    HIORG0,HIORGF,HIOSAV .RELOAD ALL REGS.
         B     INTEXSWC            .EXIT.
         SPACE
*
*   SCAN ENTIRE UCB TABLE TO FIND EACH DEVICE WHICH HAS BEEN FLAGGED
*   FOR THIS CPU TO PERFORM HIO OPERATION.
*
HIOTST   L     HIORGL,HIOILK       .ADDR OF UCB LOOKUP TABLE.
HIOUCB   LH    HIORGU,HIODSU(,HIORGL) .PICK UCB ADDR.
         LA    HIORGL,HIODSL(,HIORGL) .STEP TO NEXT UCB PTR.
         N     HIORGU,HIOTWM       .CLEAR 2 HI BYTES.
         BZ    HIOUCB              .FILLER - STEP UCB.
         CL    HIORGU,HIOTWM       .TEST IF END OF UCB LOOKUP TABLE.
         BE    HIOLEV              .YES - EXIT FROM HIO ROUTINE.
         L     HIORG1,HIONEG       .PICK NEGATIVE UCB DISPLACEMENT.
         AR    HIORG1,HIORGU       .DEVELOP EXTENSION BYTE ADDRESS.
         IC    HIORG2,HIODSB(,HIORG1) .PICK UCB EXTENSION BYTE.
         SRL   HIORG2,HIOSHF       .POSITION HALT I/O REQUEST BITS.
         N     HIORG2,HIOCPM       .CLEAR ALL BUT LOW 2 BITS.
         EX    HIORG2,HIOTMK       .TEST HIO FLAG FOR THIS CPU.
         BZ    HIOUCB              .NO - STEP UCB.
         IC    HIORG2,HIODSB(,HIORG1) .PICK UCB EXTENSION BYTE.
         N     HIORG2,HIOPUM       .CLEAR ALL BUT I/O CPUID BIT.
         C     HIORG2,IOCPUID      .WAS I/O STARTED ON THIS CPU.
         BNE   HIOFLG              .NO - TURN OFF BAD FLAG.
*
*   LINK TO RESIDENT IOS ROUTINE TO HANDLE HIO AND CCH FOR THIS DEVICE.
*
         L     HIOBAS,HIOHIO       .GET I/O RESIDENT HIO RTNE ADDR.
         USING IECIHIO+2,HIOBAS
         BAL   HRETRG,IECHIORT     .LINK TO HIO ROUTINE.
         DROP  HIOBAS
*
*   TURN OFF UCB FLAG WHICH REQUESTED HIO BY THIS CPU.
*
HIOFLG   IC    HIORG2,CPUID        .PICK OWN CPU IDENTIFICATION.
         N     HIORG2,HIOCPM       .CLEAR ALL BUT LOW 2 BITS.
         SLL   HIORG2,HIOSHF       .POSITION BITS FOR HALT I/O FLAG.
         X     HIORG2,HIOTWM       .INVERT FLAG.
         EX    HIORG2,HIONMK       .TURN OFF HIO FLAG IN UCB EXTENSION.
         B     HIOUCB              .GO ON TO NEXT UCB.
         SPACE
*
*              F I R S T    C P U    H A L T    I / O    R O U T I N E
*
         SPACE
*
*   BRANCH ENTRY FROM RESIDENT IOS HIO ROUTINE.  GIVEN THAT AN I/O OPER
*   CAN ONLY BE HALTED BY THE SAME CPU WHICH ISSUED THE SIO, TEST WHICH
*   CPU STARTED THE I/O OPERATION.  IF I/O STARTED BY THIS CPU, BRANCH
*   BACK TO IOS HIO ROUTINE TO CONTINUE HIO PROCESSING BY THIS CPU.
*
IECMPHIO DS    0H                  .RESIDENT IOS HIO ROUTINE ENTRY.
         USING IECIHIO+2,HIOBAS
         TM    CPUSTAT,CPUSTTWO    .TEST IF TWO PROCESSOR SYSTEM.
         BNZ   IECHIORT            .NO - RETURN TO IOS HIO ROUTINE.
         STM   HIORGE,HIORG2,HIOPSV .SAVE REGISTERS.
         L     HIORG1,HIONEG       .PICK NEGATIVE UCB DISPLACEMENT.
         AR    HIORG1,HIORGU       .DEVELOP EXTENSION BYTE ADDRESS.
         IC    HIORG2,HIODSB(,HIORG1) .PICK UCB EXTENSION BYTE.
         N     HIORG2,HIOPUM       .CLEAR ALL BUT I/O CPUID BIT.
         C     HIORG2,IOCPUID      .WAS I/O STARTED ON THIS CPU.
         BNE   HIOTHR              .NO - GO SHOULDERTAP OTHER CPU.
         LM    HIORG1,HIORG2,HIOPSU .RELOAD USED REGISTERS.
         B     IECHIORT            .EXIT TO IOS HIO ROUTINE.
         SPACE
*
*   OTHER CPU STARTED I/O - MUST REQUEST IT TO PERFORM THE ACTUAL HIO.
*   INDICATE THAT AN IMMEDIATE HIO IS REQUESTD, AND SIGNAL (SHOULDRTAP)
*   THE OTHER CPU.  WHEN HIO DONE, RETURN TO CALLER OF IOS HIO ROUTINE.
*
HIOTHR   IC    HIORG2,CPUID        .PICK OWN CPU IDENTIFICATION.
         N     HIORG2,HIOCPM       .CLEAR ALL BUT LOW 2 BITS.
         X     HIORG2,HIOCPM       .INVERT CPU ID FLAG BITS.
         SLL   HIORG2,HIOSHF       .POSITION BITS FOR HALT I/O FLAG.
         EX    HIORG2,HIOIFL       .SETON HIO FLAG IN UCB EXTENSION.
         OI    STMASK,WRDWTHIO     .SETON HIO FLAG IN SHOULDTAP MASK.
         BAL HIORGE,FLASH          .LINK TO FIRST CPU EXTRN SIGNAL RTN.
         LM    HIORGE,HIORG2,HIOPSV .RELOAD REGS.
         BR    HRETRG              .EXIT TO CALLER OF IOS HIO ROUTINE.
         DROP  HIOBAS
         SPACE
*
*   CONSTANTS AND WORKAREAS USED BY HIO ROUTINE
*
HIOSAV   DS    16F                 .REG SAVE AREA.
HIOPSV   DS    5F                  .REG SAVE AREA.
HIOPSU   EQU   HIOPSV+12           .OFFSET TO REG 1 IN REG SAVE AREA.
HIOILK   DC    A(IECILK2)          .UCB LOOKUP TABLE BEG ADDR.
HIOHIO   DC    A(IECIHIO+2)        .RESIDENT HIO ROUTINE BASE.
HIONEG   DC    X'FFFF'             .NEGATIVE PREFIX TO ADDR CONSTANT.
         DC    Y(0-UCBMPANX)       .M65MP UCB EXTENSION NEG DISPLACMT.
HIOTWM   DC    X'0000FFFF'         .MASK TO CLEAR HIGH 2 BYTES.
HIOCPM   DC    X'00000003'         .MASK TO CLEAR ALL BUT LOW 2 BITS.
HIOPUM   DC    X'00000008'         .MASK TO CLEAR ALL BUT IOCPUID BIT.
*
HIODSU   EQU   0                   .SYMB DISPL UCB ADR IN LOOKUP TABLE.
HIODSL   EQU   2                   .SYMB LENGTH ENTRY UCB LOOKUP TABLE.
HIODSB   EQU   0                   .SYMB DISPL MP BYTE IN NEG UCB EXTN.
HIOSHF   EQU   4                   .SYMB SHIFT TO HIO FLAG IN MP BYTE.
*
HIOZRO   EQU   X'00'               .SYMB I2 FIELD OF ZERO FOR EX INSTR.
HIOTMK   TM    CPUID,HIOZRO        .EXECUTED INST TEST HIO THIS CPU.
HIOIFL   OI    HIODSB(HIORG1),HIOZRO .EXECUTED INST TURNS ON HIO FLAG.
HIONMK   NI    HIODSB(HIORG1),HIOZRO .EXECUTED INST TURN OFF HIO FLAG.
         TITLE 'P R O C E S S O R    S T O P    R O U T I N E S'
*
*   SECOND CPU BELL RING ROUTINE - PUT CPU INTO SAME WAIT STATE
*
INTBELST NI    STMASK-IEAQFX00(INTRGPSA),WRDNTBEL .TURN OFF STAP FLAG.
         LA    INTRGPSW,IONPSW-IEAQFX00(,INTRGPSA) .DISPLAY SAME WTCOD.
         B     INTEXRTO            .EXIT.
         SPACE
*
*   SECOND CPU VARY OFFLINE ROUTINE - PUT CPU INTO -MANUAL- STATE
*
LOCKSTOP DS    0H                  .ENTRY TO PUT CPU IN -MANUAL- STATE.
*        WRD   VARYMCW,X'20'       .ENABLE I/O ON OTHER CPU /SIESTA/.
         L     INTRGWK2,MPCVTPTR   .PICK ADDR MPCVT WITH SYSTEM LOCK.
         XC    MPCVTAFF(LOKSIZE,INTRGWK2),MPCVTAFF(INTRGWK2) .CLR LOCK.
VARYSTOP DC    X'8300'             .DIAGNOSE INSTR - GIVE CPU ROS ADDR.
         DC    S(VARYMCW)          .ADDR OF MAINTENANCE CONTROL WORD.
         B     VARYSTOP            .REPEAT STOP IF OPERATR PRESS START.
         DS    0D                  ADDRESSABILITY ON DOUBLE WORD
VARYMCW  DC    X'00026000'         ROS TRANSFER ADDRESS FOR STOP LOOP
         DC    F'0'                RIGHT HALF MAINTENANCE CONTROL WORD
         TITLE ' '
.MPCODBY ANOP
         MEND
