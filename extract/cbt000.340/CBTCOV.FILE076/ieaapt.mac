         MACRO
         IEAAPT  &EVENT,&STORAGE,&PROTECT,&VALIDCK,&SCHED,         I250X
               &TIMER,&JST,&ATTACH
.*000400,068200-068400                                             I250
.*2050062400-063000                                                1453
.*062500                                                          19372
.*050400                                                          M0471
.*THE SYMBOLIC PARAMETER &EVENT INDICATES WHETHER THIS IS A
.*MULTIPLE OR SINGLE EVENT WAIT ENVIRONMENT.
.*
.*THE SYMBOLIC PARAMETER &STORAGE INDICATES THE TYPE OF STORAGE
.*CONFIGURATION.
.*
.*THE SYMBOLIC PARAMETER &PROTECT INDICATES WHETHER OR NOT
.*THIS SYSTEM HAS THE PROTECTION OPTION.
*                                                                     *
*        POST
*
* THIS VERSION OF THE POST ROUTINE HANDLES
         AIF   ('&STORAGE' NE 'PRIM').DIVCOM1
         AIF   ('&EVENT' EQ 'MULT').DIVCOM2
* ONLY SINGLE EVENT, SINGLE TASK WAITS.
.DIVPROT AIF   ('&VALIDCK' EQ 'Y').DIVKEY
* NO VALIDITY CHECKING IS PERFORMED.
         AGO   .DIVRET
.DIVKEY  AIF   ('&PROTECT' NE 'Y').NPRT
* EXTENSIVE VALIDITY CHECKING IS PERFORMED, PARTICULARLY TO
*  SUPPORT PROTECTION.
         AGO   .DIVRET
.NPRT    ANOP
*  VALIDITY CHECKING TO THE EXTENT APPROPRIATE IN AN
*  UNPROTECTED SYSTEM IS PERFORMED.
         AGO   .DIVRET
.DIVCOM2 ANOP
* MULTIPLE EVENTS , SINGLE TASK
         AGO   .DIVPROT
.DIVCOM4 ANOP
* MULTIPLE EVENT , MULTIPLE TASK
         AGO   .DIVRET
.DIVCOM1 AIF   ('&EVENT' EQ 'MULT').DIVCOM4
* SINGLE EVENT , MULTIPLE TASK.
* IF TASK IS NOT IN WAIT STATE AND HAS HIGH PRIORITY;
* CONTROL IS GIVEN TO THIS TASK.
.DIVCOM3 ANOP
* VALIDITY CHECKING IS PERFORMED.
         AGO   .DIVRET
.DIVRET  ANOP
*        ROUTINE
         TITLE 'IEAAPT00,POST'
*                                                                     *
*FUNCTION                                                             *
*                                                                     *
*        TO INFORM THE SUPERVISOR THAT AN EVENT HAS COMPLETED AND,    *
*        BY MEANS OF A COMPLETION CODE, IN WHAT MANNER THE EVENT WAS  *
*        COMPLETED.                                                   *
         AIF   ('&STORAGE' EQ 'PRIM').DENTRPT
*        TO INFORM THE SUPERVISOR, WHEN THE POST'ED TASK HAS A        *
*        HIGHER DISPATCHING PRIORITY THAN THE CURRENT TASK, THAT THE  *
*        POSTED TASK MAY NOW GAIN CONTROL.                            *
.DENTRPT ANOP
*                                                                     *
*ENTRY POINTS                                                         *
*                                                                     *
*        1.  IGC002---ENTERED FROM THE SVC HANDLER AFTER AN           *
*                     SVC TO POST HAS BEEN ISSUED.                    *
*                                                                     *
*        2. IEA0PT01--BRANCH ENTRY TO POST FOR SYSTEM ROUTINES        *
*                     WITH THE FOLLOWING CONDITIONS-                  *
*                      1.THE BRANCH-OR MUST BE DISABLED.              *
*                      2.REGISTERS--                                  *
*                        A.0-8 ARE TRANSPARENT                        *
         AIF   ('&STORAGE' NE 'PRIM').DMLTSK2
*                        B.REGISTERS 9, 12, & 13 ARE WORK REGISTERS.  *
*                        C.REGISTERS 10, 11, 14, 15, CONTAIN INPUT    *
*                          PARAMETERS.                                *
         AGO   .DINPUT1
.DMLTSK2 ANOP
*                        B.REGISTERS 9 & 13 ARE WORK REGISTERS        *
*                        C.REGISTERS 10, 11, 12, 14 & 15 CONTAIN INPUT*
*                          PARAMETERS                                 *
.DINPUT1 ANOP
*                                                                     *
*INPUT                                                                *
*                                                                     *
*        FOR ENTRY VIA SVC HANDLER                                    *
*              REGISTER 0--30-BIT COMPLETION CODE, INDICATING IN WHAT *
*                          MANNER THE EVENT COMPLETED (RIGHT-ADJUSTED)*
*              REGISTER 1--ADDRESS OF EVENT CONTROL BLOCK TO          *
*                         BE POSTED OR ADDRESS OF POINTER TO ECB  21372
*                         IF INTER-PARTITION POST FORMAT.         21372
*                                                                     *
*        ENTRY VIA THE BRANCH                                         *
*              REGISTER 10--COMPLETION CODE, RIGHT-ADJUSTED.          *
*              REGISTER 11--ECB ADDRESS                               *
         AIF   ('&STORAGE' EQ 'PRIM').DSGTSK2
*              REGISTER 12--ADDRESS OF TCB UNDER WHICH THE            *
*                           CORRESPONDING WAIT WAS ISSUED & WHOSE     *
*                           PROTECT KEY = ECB STORAGE KEY.            *
.DSGTSK2 ANOP
*              REGISTER 14--RETURN ADDRESS                            *
*              REGISTER 15--ADDRESS OF BRANCH ENTRY POINT TO BE USED  *
*                           FOR SETTING UP ADDRESSABILITY.            *
*                                                                     *
*OUTPUT                                                               *
*                                                                     *
*        SVC ENTRY--NONE                                              *
*        BRANCH ENTRY--REGISTER NINE WILL BE ZERO UPON NORMAL         *
*                      RETURN TO THE BRANCH-OR.                       *
*                                                                     *
*EXTERNAL REFERENCES                                                  *
*        IEA0XE00--ADDRESS OF TYPE 1 SVC EXIT ROUTINE                 *
        AIF   ('&VALIDCK' EQ 'N' AND '&STORAGE' EQ 'PRIM' AND '&EVENT' *
               EQ 'SING').NONEW2
*        IEATCBP--ADDRESS OF NEW & OLD                                *
.NONEW2  ANOP
         AIF   ('&VALIDCK' EQ 'N').DEXT
*        IEA0AB00--ADDRESS OF ABTERM
.DEXT    ANOP
*                                                                     *
*EXITS                                                                *
*                                                                     *
*        POST RETURNS TO SUPERVISOR HANDLER (IEA0XE00) OR BRANCH-OR,  *
*        WHICHEVER IS APPROPRIATE, BY A BRANCH.                       *
*                                                                     *
*ERROR MESSAGES                                                       *
*                                                                     *
         AIF   ('&VALIDCK' EQ 'Y').VAL
*        NOT APPLICABLE
         AGO   .TW
.VAL     ANOP
*        IF AN ERROR IS FOUND, THE POST ROUTINE BRANCHES TO ABTERM    *
*        WITH THE ADDRESS OF THE CURRENT TCB, IF POST WAS ENTERED     *
*        VIA AN SVC, OR THE TCB ADDRESS PASSED BY THE BRANCH-OR, IF   *
*        POST WAS ENTERED VIA A BRANCH, IN REGISTER 0.                *
*        REGISTER 1 CONTAINS THE APPROPRIATE ERROR CODE--             *
*              80102000--INVALID ECB ADDRESS                          *
*              80202000--INVALID RB ADDRESS                           *
*        REGISTER 14 CONTAINS THE RETURN ADDRESS TO POST WHICH,
*              AFTER  ABTERM RETURNS, RESTORES REGISTERS AND RETURNS
*              TO THE CALLER.
.TW      ANOP
*                                                                     *
*TABLES/WORKAREAS                                                     *
*                                                                     *
         AIF   (('&VALIDCK' EQ 'N') AND (('&STORAGE' EQ 'PRIM') OR ('&E*
               VENT' EQ 'SING'))).NOTBL
*        SAVE01--2 WORD REGISTER SAVE AREA
         AIF   ('&PROTECT' EQ 'N').NPROT
*        PTREGSAV--3 FULL-WORDS FIELD TO SAVE BRANCH-ORS REGISTERS    *
.NPROT   AIF   (('&PROTECT' EQ 'N') AND (('&STORAGE' EQ 'PRIM') OR ('&E*
               VENT' EQ 'SING'))).PROG
*        PTFLAG--1 BYTE FIELD OF FLAG BITS.                           *
         AGO   .PROG
.NOTBL   ANOP
*        NOT APPLICABLE
.PROG    ANOP
*                                                                     *
IGC002   CSECT
         ENTRY IEAAPT01
         ENTRY IEA0PT01
         AIF   ('&JST' NE 'Y').NOJST1                             19018
         EXTRN IEAQTD01                                           19018
.NOJST1  ANOP                                                     19018
BEGIN    BALR  RBASE,0
         USING *,RBASE
         LR    R0,0           SAVE COMPLETION CODE
         LR    R11ECB,1                                          A68836
         TM    33(0),X'F0'             KEY ZERO                  A68836
         BC    7,PGTTCB                NO                        A68836
         LTR   R11ECB,1            IPP?                           21372
         BP    PGTTCB         NO. DO NORMAL PROCESSING            21372
         L     R11ECB,PARMECB(R11ECB) YES GET ECB FROM IPP LIST   21372
PGTTCB   EQU   *                                                  21372
         AIF   ('&VALIDCK' EQ 'N').NVAL4
         L     RA,PNEWAD           GET TCB ADDRESS OF CURRENT     21372
         L     RA,4(RA)              TASK FROM OLD
*
*VALIDITY CHECKING OF ECB ADDRESS FOR POST
*
PTCHKRTN TM    PTFLAG,X'20'            Q. BR. WITHOUT VALIDITY
         BC    1,PTOK1                 IF YES CONTINUE WITH POST
         L     RCVT,16
         LA    R1,0(R1)            CLEAR HIGH-ORDER BYTE OF ADDRESS
         CL    R1,MACHSZE(RCVT)    Q. IS ECB ADDRESS A VALID MACHINE
*                                    ADDRESS
         AIF   ('&PROTECT' EQ 'Y').CHK1
         BC    4,PTOK1               IF OK, CONTINUE WITH POST
         AGO   .CHK8
.CHK1    ANOP
         BC    10,PTECBERR           IF NO, GO TO ABTERM
  AIF ('&STORAGE' EQ 'PRIM').CHKA
         TM   PTCBPKF(RA),X'F0'   IS COMMUNICATION TASK POSTING
         BC    8,PTOK1            BR IF YES
.CHKA    ANOP
         LR    R2,R1               GET ECB ADDR INTO WORK REGISTER
         SR    RX3,RX3
         IC    R2,PTCHK+1          CLEAR LOW-ORDER BYTE
         ISK   RX3,R2              RX3 CTNS ECB STORAGE KEY
         EX    RX3,PTCHK           Q. ECB S.K.= TCB PROTECT KEY
         BC    8,PTOK1               IF YES, ECB ADDR VALID SO POST
.*                                                                20002
.**************************************************************   20002
.*    THIS IS CODE NECESSARY FOR TCAM ONLY. TCAM IS DEPENDENT *   20002
.*    ON ATTACH SO THIS ONLY APPEARS IN AN ATTACH SYSTEM.     *   20002
.*                                                                20002
         AIF   ('&ATTACH' NE 'Y').NTCAM1                          20002
.*                                                                20002
         L     RX4,TCBJSCB(RA) .   GET JSCB ADDR                  M5934
         USING IEZJSCB,RX4                                        M5934
         L     RX4,JSCBCSCB .      GET CSCB ADDR                  M5934
         USING CSCB,RX4 .          SET BASE FOR CSCB              M5934
         L     RX4,CHECBP .        GET ECB POINTER.               M5934
         DROP  RX4                                                M5934
         LA    RX4,0(0,RX4) .      CLEAR HIGH ORDER BYTW          M5934
         CR    R1,RX4 .            IS THIS A LEGAL ECB?           M5934
         BE    PTOK1 .             YES CONTINUE POSTING.          20002
.NTCAM1  ANOP                                                     20002
.*                                                                20002
.**************************************************************   20002
         TM    PTFLAG,X'01'        Q. WAS THIS BRANCH ENTRY
         BC    8,PTSTSVC             IF NO, GO TO SEE IF SYS RTN SAID
*                                    POST
.CHK8    ANOP
PTECBERR L     1,INVECBAD            IF ERROR, GET ERROR CODE
***ABTERM LINKAGE
ABTRMLNK LR    0,RA                GET TCB ADDRESS
         LR    13,14               SAVE RETURN ADDRESS
         L     12,ABTRMAD          PLACE ABTERM ENTRY POINT IN REG 12
         BALR  14,12               BRANCH TO ABTERM
* ABTERM AND POST USE SAME BASE REG, REG 14 USED TO RESTORE REGS,...
         USING *,14
         AIF   ('&PROTECT' EQ 'Y').PRLM
         LM    0,1,SAVE01               RESTORE REGISTERS
         AGO   .LVE
.PRLM    ANOP
         LM    0,4,SAVE01               RESTORE REGISTERS
.LVE     ANOP
         NI    PTFLAG,X'00'             CLEAR FLAG BYTE
         SR    9,9            IOS REQUIRES THIS REG BE ZERO
         DROP  14
         BR    13                  RETURN
         AIF   ('&PROTECT' EQ 'N').CHK2
PTCHK    CLI   PTCBPKF(RA),0       Q. TCB PROTECT KEY = STORAGE KEY
        AGO   .CHK2
.NVAL4  AIF   ('&EVENT' EQ 'SING' OR '&STORAGE' NE 'PRIM').NGTTCB
         B     PGTTCBAD
        AGO   .CHK2
.NGTTCB ANOP
         B     PTOK1
.CHK2    ANOP
*
IEAAPT01 EQU  *
         AIF   ('&VALIDCK' EQ 'N').NVALBR
IEA0PT01 B     8(RBASE)             BRANCH ENTRY WITH VALIDITY CHECK
         OI    PTFLAG-IEA0PT01(RBASE),X'20'  SET BIT FOR BR.
         AGO   .BECON
.NVALBR  ANOP
IEA0PT01 NOP   *+2
.BECON   ANOP
         LA    RX,IEA0PT01-BEGIN-2     SET UP BASE REGISTER
         SR    RBASE,RX                 FOR BRANCH-OR
         AIF   ('&JST' NE 'Y').NOPJST1                        BD A50267
         L     CYCLER9,CVTPTR .    GET CVT ADDRESS            GF A50267
         TM    PCPTR(CYCLER9),POSTFLAG .IS POST CYCLE FLG ON? GF A50267
         BO    PTNOSAVE .          YES, SKIP REG SAVING       GF A50267
.NOPJST1 ANOP                                                 BD A50267
         STM   0,4,SAVE01               SAVE REGISTERS
         AIF   ('&JST' NE 'Y').NOPJST2                        BD A50267
PTNOSAVE EQU   * .                 LABEL TO SKIP REG SAVING   GF A50267
.NOPJST2 ANOP                                                 BD A50267
        AIF   ('&VALIDCK' EQ 'N').NVAL3
        AIF   ('&PROTECT' EQ 'Y').YPROT
         AGO  .CHK9
.YPROT  ANOP
         OI    PTFLAG,X'01'             INDICATE BRANCH ENTRY
.CHK9    AIF   ('&STORAGE' EQ 'PRIM').SKIP1
         B     PTCHKRTN
         AGO   .CHK7
.SKIP1   ANOP
         B     PGTTCB
.CHK7    AIF   ('&PROTECT' EQ 'N').SKIP2
PTSTSVC  TM    33(0),X'F0'         Q. DID SYSTEM ROUTINE ISSUE SVC
*                                  (SVC OLD PSW PROTECT KEY = 0)
         BC    7,PTECBERR          IF NO, GO TO ERROR RTN
         OI    PTFLAG,X'10'          IF YES, SET A BIT
        AGO   .SKIP2
.NVAL3  AIF   ('&EVENT' EQ 'SING' OR '&STORAGE' NE 'PRIM').SKIP2
PGTTCBAD L     RA,PNEWAD           GET TCB ADDRESS OF CURRENT
         L     RA,4(RA)              TASK FROM OLD.
.SKIP2   ANOP
*THE FOLLOWING ROUTINE CHECKS THE WAIT & COMPLETE FLAGS IN THE ECB.
*IF THE COMPLETE BIT IS ON, THE ROUTINE IS EXITED.
PTOK1    TM    0(R1),X'40'    Q. IS COMPLETE BIT ON?
         BC    1,PRETURN1            IF YES, LEAVE
         TM    0(R1),X'80'         Q. IS WAIT FLAG ON
         BC    8,PRETURN             IF NO, SKIP CHANGING RB
         L     RB,0(R1)            GET RB ADDRESS INTO REG RB
*
         AIF   ('&VALIDCK' EQ 'N').NVAL
*VALIDITY CHECK OF RB ADDRESS
         TM    PTFLAG,X'20'       Q. BR. WITHOUT VALIDITY
         BC    1,PTOK2                 IF YES CONTINUE WITH POST
         CLC   1(3,R1),MACHSZE+1(RCVT) Q. RB ADDRESS VALID MACHINE
*                                         ADDRESS.
         AIF   ('&PROTECT' EQ 'N').CHK3
         BC    10,PTRBERR           IF NO, GO TO ABTERM
  AIF ('&STORAGE' EQ 'PRIM').CHKB
         TM   PTCBPKF(RA),X'F0'   IS COMMUNICATION TASK POSTING
         BC    8,PTOK2       BRANCH IF YES
.CHKB    ANOP
         LR    R2,RB               GET RB ADDRESS INTO WORK REG
         IC    R2,PTCHK+1          CLEAR LOW-ORDER BYTE
         SR    RX2,RX2
         ISK   RX2,R2              RX2 CTNS RB STORAGE KEY
         CR    RX2,RX3             Q. ECB STOR KEY = RB STOR KEY
         BC    8,PTOK2               IF YES, DON'T CHECK FURTHER
         TM    PTFLAG,X'10'        WAS THIS SVC TO POST WITH OPSW
         BC    1,PTOK2               PROTECT KEY = 0.  IF YES, ASSUME
*                                    ADDRESS TO BE VALID.
         AIF   ('&TIMER' NE 'Y').CHK40
         CLC   1(3,R1),TCBTME+1(RA)     Q. TIMER IRB
         BC    8,PTOK2                  YES, CONTINUE POSTING
.CHK40   ANOP
         LTR   RX2,RX2             RB KEY ZERO                     6312
         BC    7,PTRBERR           NO                              6312
         TM    XLSTRB-1(RB),X'A0'                              @AY75522
         BC    4,PTRBERR                                       @AY75522
         TM    XLSTRB-1(RB),X'40'      IRB                       A63120
         BC    7,PTOK2                                           A63120
         AGO   .CHK4
.CHK3    ANOP
         BC    4,PTOK2               IF OK, CONTINUE WITH POST
.CHK4    ANOP
PTRBERR  L     1,INVRBAD             IF ERROR, GET ERROR CODE AND
         B     ABTRMLNK              BRANCH TO ABTERM LINKAGE
.NVAL    AIF   ('&EVENT' EQ 'MULT').MLTCT
*ZERO WAIT COUNT IN RB.
PTOK2    NI    XRBWT(RB),X'00'     ZERO RB WAIT COUNT
         AIF   ('&STORAGE' EQ 'PRIM').ENDCDE
         AGO   .NXT
.MLTCT   ANOP
*DECREMENT WAIT COUNT
*THIS ROUTINE DECREMENTS THE RB WAIT COUNT AND TESTS TO SEE IF THE
*WAIT CONDITION HAS BEEN SATISFIED.
*
PTOK2    SR    RX1,RX1
         IC    RX1,XRBWT(RB)       GET RB WAIT COUNT                 MT
         LTR   RX1,RX1             Q. IS COUNT=ZERO
         BC    8,PRETURN             IF YES, DON'T DECREMENT COUNT
         BCTR  RX1,0               DECREMENT WAIT COUNT AND
         STC   RX1,XRBWT(RB)         STORE IT BACK INTO RB
         LTR   RX1,RX1             Q. DID IT GO TO ZERO
         BC    7,PRETURN             IF NO, DON'T TURN OFF WAIT FLAGS
.TASKTST AIF   ('&STORAGE' EQ 'PRIM').SGTSK1
*                                    AND TASK NOT DISPATCHABLE.
.NXT     ANOP
* THIS ROUTINE OBTAINS THE TCB ADDRESS AND TESTS TO SEE IF THE    19372
* POSTED RB IS THE TOP RB ON THE QUEUE                            19372
         LR    RA,RB                                              19372
PSTGTRB  TM    XLSTRB(RA),X'80'   Q.IS THIS THE BOTTOM RB         19372
         L     RA,XRBRBP(RA)      GET ADDR OF TCB OR RB           19372
         BZ    PSTGTRB  IF NOT BOTTOM RB, GET NEXT RB ON CHAIN    19372
         CLC   1(3,R1),TCBRBP+1(RA)   Q. WAS RB GIVEN, TOP RB
         AIF   ('&EVENT' NE 'SING').MLTWT2
         BNE   PRETURN               IF NO, TASK NOT DISPATCHABLE
         AGO   .NXT1
.MLTWT2  ANOP
         BNE   PST4                  IF NO, BRANCH
         AIF   ('&JST' NE 'Y').NOJST                              19018
         L     CYCLER4,CVTPTR .    GET CVT ADDRESS            GF A50267
         TM    PCPTR(CYCLER4),POSTFLAG .IS POST CYCLE FLG ON? GF A50267
         BO    PTINCYCL .          YES, SKIP REG SAVING       GF A50267
         STM   0,15,JSTSAVE             .SAVE 0-15                19018
PTINCYCL EQU   * .                 LABEL TO SKIP REG SAVING   GF A50267
         L     PIBPTR,TCBPIB(RA)        .LOAD PIB PTR             19018
         LA    PIBPTR,0(PIBPTR)         .CLEAR HI ORDER BYTE      19018
         LTR   PIBPTR,PIBPTR            .Q. IS THERE A PIB        19018
         BZ    NODEQ                    .NO. EXIT FROM J/ST       19018
         TM    PIBJSTQE(PIBPTR),X'80'   .Q. VALID J/S TQE         19018
         BZ    NODEQ                    .NO. EXIT FROM J/ST       19018
         L     XRWORK9,PIBJSTQE(PIBPTR)  .GET J/S TQE ADDR        19018
         TM    TQEFLGS(XRWORK9),X'08'   .Q. IS TQE REAL(WAIT)     19018
         BC    14,NODEQ                 .NO. EXIT FROM J/ST       19018
         TM    TQEFLGS(XRWORK9),X'80'   .Q. IS TQE OFF QUEUE      19018
         BO    NODEQ                    .YES. EXIT FROM J/ST      19018
         LR    JSTQEADR,XRWORK9         .J/S TQE IN R1 FOR DEQ    19018
         ST    XRWORK9,SAVE9 .     SAVE REGISTER 9 ACCROSS DEQ    M3832
         L     RBASE,BASEDEQ            .GET ADDR OF TIMER DEQ    19018
         BALR  RX2,RBASE                .GO TO DEQUEUE TQE        19018
         USING *,RX2                                              19018
         L     RBASE,BASE               .RE-ESTABLISH             19018
         USING IGC002+2,RBASE           .ADDRESSABILITY           19018
         DROP  RX2                                                19018
         L     XRWORK9,SAVE9 .     RESTORE REGISTER 9             M3832
         MVC   TQEVAL(4,XRWORK9),TQESAV(XRWORK9) .RESTORE CPU     19018
*                                                 .VALUE          19018
         NI    TQEFLGS(XRWORK9),X'F7'   .MARK AS TASK TIME        19018
NODEQ    EQU   *                        .CONTINUE POST EXAM       19018
         L     CYCLER4,CVTPTR .    GET CVT ADDRESS            GF A50267
         TM    PCPTR(CYCLER4),POSTFLAG .IS POST CYCLE FLG ON? GF A50267
         BO    NORESTOR .          YES, SKIP REG RESTORING    GF A50267
         LM    0,15,JSTSAVE             .RESTORE 0-15             19018
.NOJST   ANOP                                                     19018
NORESTOR EQU   * .                 LABEL TO SKIP REG RESTORE  GF A50267
         OI    PTFLAG,X'80'        IF YES, SET A BIT
.NXT1    ANOP
*IF THE TOP RB HAD ITS WAIT CONDITION SATISFIED, THIS ROUTINE TESTS TO
*SEE IF THIS TASK IS TO BE DISPATCHED. IF YES, THE POINTER TO THE
*CURRENT TCB IS PUT INTO NEW AS A SIGNAL TO THE DISPATCHER.
*
         TM    TCBFLGS+4(RA),X'FF'         Q. IS TCB IN WAIT STATE
         BC    7,PST4                IF YES, TASK NOT DISPATCHABLE
         AIF   ('&EVENT' EQ 'MULT').MULTWT3
         L     RB,PNEWAD             IF NO, GET CONTENTS
         L     RX,0(RB)              OF NEW
         AGO   .NMLTWT1
.MULTWT3 ANOP
         L     RX,PNEWAD           IF NO, GET CONTENTS
         L     RX,0(RX)              OF NEW
.NMLTWT1 ANOP
         LTR   RX,RX               Q. C(NEW)= ZERO
         BC    8,PST2                GO TO RTN TO PUT IN POSTED TCB
         CLC   PTCBDSP(1,RA),PTCBDSP(RX)  IF NO,TEST PRIORITY
         AIF   ('&ATTACH' EQ 'Y').ATTCH                            I250
         BNH   PST4                IF CURRENT TCB HAS GREATER      I250
*                                  PRIORITY THAN POSTED TCB,       I250
*                                  DON'T CHANGE NEW                I250
         AGO   .NOATTCH                                            I250
.ATTCH   ANOP                                                      I250
         BL    PST4                DISPATCH TCB IN NEW             I250
         BH    PST2                DISPATCH POSTED TCB             I250
         SPACE
* SINCE PRIORITIES ARE EQUAL, THE TCB HIGHEST ON THE QUEUE         I250
* RECEIVES CONTROL. THE POSTED TCB IS COMPARED TO ALL TCB'S        I250
* LOWER ON THE QUEUE THAN THE TCB INDICATED BY NEW. IF A MATCH     I250
* IS FOUND, THE CONTENTS OF NEW REMAIN INTACT. OTHERWISE, NEW IS   I250
* CHANGED TO REFLECT THE POSTED TCB                                I250
         SPACE
         LR    NXTCB2,RX           INIT REG WITH NEW               I250
CKTCB    L     NXTCB2,TCBTCB(NXTCB2) NEXT LOWER TCB ON QUEUE       I250
         LTR   NXTCB2,NXTCB2       Q. LAST TCB CHECKED             I250
         BE    PST2                A. YES DISPATCH POSTED TCB      I250
         CR    NXTCB2,RA           Q. POSTED TCB LOWER ON QUEUE    I250
         BE    PST4                A. YES DISPATCH NEW             I250
         CLC   PTCBDSP(1,NXTCB2),PTCBDSP(RA) Q. ALL TCB'S OF       I250
*                                      SAME PRIORITY CHECKED       I250
         BE    CKTCB               A. NO CHECK NEXT TCB            I250
*                                  A. YES DISPATCH POSTED TCB      I250
.NOATTCH ANOP                                                      I250
PST2     LA    RA,0(RA)             CLEAR HIGH ORDER BYTE OF TCB ADDR
         AIF   ('&EVENT' NE 'SING').SGTSK3
         ST    RA,0(RB)             IF PSTD GRTR THAN CURR,SIGNAL DISP.
PST4     EQU   *
         AGO   .ENDCDE
.SGTSK3  ANOP
         L     RX,PNEWAD           GET ADDRESS OF NEW
         ST    RA,0(RX)              AND PLACE TCB ADDRESS IN NEW AS
*                                    SIGNAL TO DISPATCHER
.SGTSK1  ANOP
*THE FOLLOWING ROUTINE TESTS TO SEE IF THIS ECB WAS PART OF A MULTI- MW
*PLE WAIT WHERE M NOT EQUAL TO N. IF SO, THIS ROUTINE SEARCHES       MW
*FOR THE  ECB LIST PTR AND TURNS OFF THE ALL THE WAIT FLAGS SINCE    MW
*THE WAIT IS NOW SATISFIED                                           MW
*
PST4     TM    XMULTWT(RB),X'01'  Q. IN WAIT DID M=N (SEARCH BIT =0)
         BC    8,PRETURN             IF YES, SKIP TURNING OFF WAIT BITS
         NI    XMULTWT(RB),X'FE'     TURN OFF SEARCH BIT
         AIF   ('&STORAGE' EQ 'PRIM').SGTSK2
         TM    PTFLAG,X'80'       Q.WAS RB IN ECB,8THE TOP RB
         L     RC,TCBGR1(RA)         IF YES, GET ECB LIST PTR FROM TCB
         BC    1,PSWOFF              AND GO TO TURN OFF WAIT BITS
         AGO   .MLTSRCH
.SGTSK2  ANOP
         CLC   1(3,R1),TCBRBP+1(RA)  Q. IS RB IN ECB, THE TOP RB.
         L     RC,TCBGR1(RA)         IF YES, GET ECB LIST PTR FROM TCB
         BE    PSWOFF                AND GO TO TURN OFF WAIT BITS
.MLTSRCH ANOP
*THIS ROUTINE GOES TO NEXT RB UP ON Q TO GET REG1 WITH ECB LIST
*POINTER FROM REGISTER SAVE AREA SINCE RB PTR IN ECB WAS NOT FOR TOP RB
         L     RC,TCBRBP(RA)       GET ADDRESS OF TOP RB.
PSTLOOP  CLC   1(3,R1),XRBLNK(RC)  Q. IS THIS THE ONE WANTED.
         BE    PSTREGSW              IF YES, CONTINUE.
         L     RC,XRBRBP(RC)         IF NO, GET ONE AND GO TO
         B     PSTLOOP               TOP OF LOOP.
PSTREGSW L     RC,XRBREG1(RC)      PUT ECB LIST PTR INTO RC
*THIS ROUTINE TURNS OFF ALL WAIT FLAGS
PSWOFF   L     RX,0(RC)            GET ADDRESS OF FIRST/NEXT ECB     MW
         NI    0(RX),X'7F'         TURN OFF WAIT FLAG                MW
         LTR   RX,RX               Q. IS THIS LAST ELEMENT IN LIST   MW
         LA    RC,4(RC)            INCREMENT PTR TO LIST             MW
         BC    2,PSWOFF              IF NO, GO BACK TO NEXT ONE      MW
*
.ENDCDE  ANOP
*FILLING IN ECB
PRETURN  ST    R0,0(R1)            PUT COMPLETION CODE INTO ECB
         OI    0(R1),X'40'         TURN ON COMPLETE FLAG IN ECB
PRETURN1 NI    0(R1),X'7F'         TURN OFF WAIT FLAG
         AIF   ('&JST' NE 'Y').NOPJST3                        BD A50267
         L     CYCLER4,CVTPTR .    GET CVT ADDRESS            GF A50267
         TM    PCPTR(CYCLER4),POSTFLAG .IS POST CYCLE FLG ON? GF A50267
         BO    PTNOLOAD .          IF YES, SKIP REG RESTORE   GF A50267
.NOPJST3 ANOP                                                 BD A50267
*RESTORING FOR BRANCH ENTRY.
         LM    2,4,PTREGSAV             RESTORE REGISTERS
         AIF   ('&JST' NE 'Y').NOPJST4                        BD A50267
PTNOLOAD EQU   * .                 LABEL TO SKIP REG RESTORE  GF A50267
.NOPJST4 ANOP                                                 BD A50267
.END3    AIF   ('&VALIDCK' EQ 'N').END2
         NI    PTFLAG,X'00'        CLEAR FLAG BYTE
         AGO   .END1
.END2    AIF   ('&STORAGE' EQ 'PRIM').END1
         AIF   ('&EVENT' EQ 'SING').END1
         NI    PTFLAG,X'00'        CLEAR FLAG BYTE
.END1    ANOP
*GENERAL HOUSEKEEPING.
         SR    9,9
         BCR   15,RXT
**EQUATED REGISTERS & SYMBOLIC DISPLACEMENTS**
         AIF   ('&VALIDCK' EQ 'N').NVAL2
PTFLAG   DS    0F                  FLAG BYTE (IN HIGH-ORDER BYTE OF
*                                    ADDRESS OF ABTERM).
ABTRMAD  DC    V(IEA0AB00)         ADDRESS OF ABTERM
         AGO   .NFLAG2
.NVAL2   AIF   (('&STORAGE' EQ 'PRIM') OR ('&EVENT' EQ 'SING')).NFLAG2
PTFLAG   DC    X'00'               FLAG BYTE
.NFLAG2  ANOP
        AIF   ('&VALIDCK' EQ 'N' AND '&STORAGE' EQ 'PRIM' AND '&EVENT' *
               EQ 'SING').NONEW
PNEWAD   DC    V(IEATCBP)         ADDRESS OF NEW
.NONEW   AIF   ('&VALIDCK' EQ 'N').NSAV
INVECBAD DC    X'80102000'         1- INVALID ECB ADDRESS
INVRBAD  DC    X'80202000'         2--CONTENTS OF ECB CLOBBERED.
.NSAV    ANOP
SAVE01   DS    2F                       SAVE AREA FOR REGS 0,1
TCBTME   EQU   120                      POINTER TO TIMER Q ELEMENT
PTREGSAV DS    3F
         AIF   ('&JST' NE 'Y').NOJST2                             19018
SAVE9    DS    1F .                HOLDS REG 9 ACCROSS TIMER DEQ  M3832
BASEDEQ  DC    A(IEAQTD01)              .TIMER DEQ ADDR           19018
BASE     DC    A(IGC002+2)                                        19018
JSTSAVE  DS    16F                      .SAVE AREA REGS 0-15      19018
*                                                                 19018
*        REGISTER EQUATES                                         19018
*                                                                 19018
JSTQEADR EQU   1                        .J/S TQE ADDR             19018
XRWORK9  EQU   9                        .WORK REGISTER            19018
PIBPTR   EQU   9                        .PIB ADDRESS              19018
*                                                                 19018
*        MISCELLANEOUS EQUATES                                    19018
*                                                                 19018
TQEFLGS  EQU   0                        .TQE FLAG BYTE            19018
TQEVAL   EQU   12                       .TOX/TIME REMAINING       19018
TQESAV   EQU   20                       .CPU TIME LEFT S.A.       19018
PIBJSTQE EQU   40                      .PIB J/S TQE DISPL         19018
TCBPIB   EQU   124                      .TCB PIB PTR OFFSET       19018
.NOJST2  ANOP                                                     19018
PARMECB  EQU   0         DISPLACEMENT OF ECB IN IPP PARM LIST  BD M0645
MACHSZE  EQU   164
TCBRBP   EQU   0                   PTR IN TCB TO TOP RB ON QUEUE
PTCBPKF  EQU   28                  TCB PROTECT KEY FIELD
PTCBDSP  EQU   35                  TASK DISPATCHING PRIORITY
TCBGR1   EQU   76                  REGISTER SAVE AREA IN TCB
TCBTCB   EQU   116                 NEXT LOWER TCB                  I250
TCBJSCB  EQU   180 .               DISP OF JSCB PTR               20002
XMULTWT  EQU   11                  MULT WAIT FLAG IN RB
XLSTRB   EQU   11
XRBWT    EQU   28                  WAIT COUNT IN RB
XRBRBP   EQU   28                  PTR TO NEXT RB DOWN ON QUEUE F/W
XRBLNK   EQU   29                  PTR TO 3 BYTE ADDR OF NEXT RB
XRBREG1  EQU   36                  RB REGISTER SAVE AREA
TCBFLGS  EQU   29
RX2      EQU   2
NXTCB2   EQU   2                   USED TO DETERMINE TCB TO BE     I250
*                                  BE DISPATCHED WHEN POSTED       I250
*                                  HAS SAME PRIORITY AS NEW TCB    I250
RX3      EQU   3
RX4      EQU   4                                                  M5934
R2       EQU   4
RX       EQU   9
RX1      EQU   RX
RCVT     EQU   9                   CONTAINS ADDRESS OF CVT
R0       EQU   10
R11ECB   EQU   11                  ECB REG                        21372
R1       EQU   11
RA       EQU   12
RB       EQU   13
RC       EQU   RB
RXT      EQU   14
RBASE    EQU   15                  BASE REGISTER
RECB     EQU    1 .                ECB REG FOR SVC ENTRY.         20021
CVTPTR   EQU   16 .                ABSOLUTE ADDRESS OF CVT    GF A50267
PCPTR    EQU   88 .                PSEUDO CLKS ADDR IN CVT    GF A50267
CYCLER4  EQU   4 .                 REG 4 FOR POSTFLAG TEST    GF A50267
CYCLER9  EQU   9 .                 REG 9 FOR POSTFLAG TEST    GF A50267
POSTFLAG EQU   X'80' .             POST CYCLE FLAG BIT        GF A50267
         AIF   ('&ATTACH' NE 'Y').NTCAM2                          20002
CSCB     DSECT                                                    20002
         IEECHAIN                                                 20002
         IEZJSCB                                                  20002
.NTCAM2  ANOP                                                     20002
         MEND
