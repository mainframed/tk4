         MACRO
         IEAQCH  &TIMESL,&STORAGE,&TSO                            20021
.*       IEAQCH IS A NEW SYSGEN MACRO. IT PRODUCES CODE WHICH IS
.*       THE TYPE 1 SVC # 44 CHAP SERVICE ROUTINE. THE CHAP
.*       FUNCTION HAS BEEN DELETED FROM IEAQTB00, AND IS NOW
.*       SUPPORTED BY MACRO/MODULE IEAQCH00.  THIS CHANGE WAS DONE IN
.*       SUPPORT OF RELEASE # 16 TIME-SLICING.
*417000,421000,423000-424000                                       MO18
IGC044   START
*  KEYS FOR COMMENTS
*        INITIALIZATION                 $
*        EXIT-NORMAL                    *
*        EXIT-SUBROUTINE                **
*        EXIT-ERROR                     ***
*        SPECIAL ENTRY POINT            /
*        INTEROGATIVE OPERATION         Q.
         SPACE 2
* REGISTER ASSIGNMENTS
         SPACE 1
XRERCODE EQU   1         ERROR CODE IN REGISTER BEFORE GOING TO ABTERM
XRTESTWD EQU   1         WORD TO BE TESTED FOR VALIDITY
XRTSTADR EQU   2         ADDRESS OF VALIDITY CHECK ROUTINE
XRCVT    EQU   3         ADDRESS OF VECTOR TABLE (SVC HANDLER SETS)
XROTCB   EQU   4         CONTENT OF 'OLD' (SVC HANDLER SETS)
XRORB    EQU   5         ADDRESS OF TOP RB OF 'OLD' (SVC HANDLER SETS)
XRSAVE   EQU   6         SAVE REGISTER 1 CONTENT
XRLINK   EQU   12        LINK REGISTER
XRABTERM EQU   13        ABTERM ROUTINE ADDRESS (SVC HANDLER SETS)
XRRETURN EQU   14        TYPE 1 SVC EXIT ADDRESS (SVC HANDLER SETS)
XRBASE   EQU   15        BASE REGISTER
         SPACE 1
*  CHAP ROUTINE
         SPACE 2
XRCVALUE EQU   0         INPUT PARAMETER CHAP VALUE
XR0      EQU   0                        REG  0                     I250
XRCTCB   EQU   1         INPUT PARAMETER DAUGHTER TCB ADR OR 0
OLDPRE   EQU   1         PREV. TCB ABOVE CHAPPED TCB
CHAPTCB  EQU   2         CHAPPED TCB
XRWTCB   EQU   2         WORK TCB (DAUGHTER OR REQUESTING TCB ADR)
CURTCB   EQU   6         CURRENT TCB ON R.Q. UNDER INVESTIGATION
LASTCB   EQU   7         TCB FROM WHICH CURR. TCB IS OBTAINED
XRDSP    EQU   8         TOTAL ADDED DISPATCHING PRIORITY
XRRB     EQU   8         CHAP WORK RB ADDRESS
NEWPRE   EQU   9         TCB ABOVE WHICH CHAPPED TCB IS TO BE PLAC'ED
XRNEWOLD EQU   10        CONTENT OF EITHER 'NEW' OR 'OLD'
EQUAL    EQU   8                                                  M4631
NOTLOW   EQU   11                                                 M4631
         AIF   ('&TSO' NE '1').NOTSOXX                            20021
XTJBXLST EQU   10         PTR TO LAST TCB IN TIME-SHARING USER'S  20021
*                         TASK GROUP                              20021
.NOTSOXX ANOP                                                     20021
XRTCBTST EQU   11
TEMPREG  EQU   12        TEMPORARY WORK REGISTER
         AIF   ('&TIMESL' NE 'TIMESL').NOTMSL1
TSREGA   EQU   6
TSREGB   EQU   7
XRTSBASE EQU   11
.NOTMSL1 ANOP
         SPACE 2
*  TASK CONTROL BLOCK DISPLACEMENT (TCB)
TCBRBP   EQU   0         PTR TO TOP RB
TCBPIE   EQU   4         PTR PROGRAM INTERUPT ELEMENT (PIE)
TCBDEB   EQU   8         PTR TO DATA ELEMENT BLOCK (DEB)
TCBTIO   EQU   12        PTR TO TASK I/O TABLE (TIOT)
TCBCMP   EQU   16        TCB COMPLETION CODE
TCBTRN   EQU   20        TESTRAN FIELD
         AIF   ('&STORAGE' NE '2').MVTE1                           I250
TCBMSS   EQU   24                       PTR TO EITHER BOUNDARY     I250
*                                        BOX(JOB STEP TCB) OR GQE  I250
*                                        QUEUE(SUBTASKS)           I250
         AGO   .MFTE1                                              I250
.MVTE1   ANOP                                                      I250
TCBMSS   EQU   24        PTR TO SUBPOOL QUEUE ELEMENT (SPQE)
.MFTE1   ANOP                                                      I250
TCBPKF   EQU   28        TASK PROTECT KEY
TCBFLG   EQU   29        FLAGS
         AIF   ('&TIMESL' NE 'TIMESL').NOTMSL2
TCBFTS   EQU   30                  FLAG BYTE 2 BIT 2=1=TIME-SLICING
.NOTMSL2 ANOP
         AIF   ('&STORAGE' NE '2').MVTE2                           I250
TCBLMP   EQU   152                      TCB'S LIMIT PRIORITY       I250
TCBFC    EQU   175        TERM'D TSK FLG                           I250
TCBFINI  EQU   X'80'                                               I250
         AGO   .MFTE2                                              I250
.MVTE2   ANOP                                                      I250
TCBFC    EQU   X'80'     TASK COMPLETE FLAG                        I250
TCBFL5   EQU   33        FLAG BYTE 5  BIT 0=1=TASK COMPLETE        MO18
TCBLMP   EQU   34        TCB'S LIMIT PRIORITY
.MFTE2   ANOP                                                      I250
TCBDSP   EQU   35        TCB'S DISPATCHING PRIORITY
TCBLLS   EQU   36        PTR TO LOADED PROGRAM LIST ADR
TCBJLB   EQU   40        PTR TO JOB LIBRARY DATA CONTROL BLOCK
TCBJSE   EQU   44        PTR TO JOB STEP INDEX ELEMENT (JSIE)
TCBGRS   EQU   48        GENERAL REGISTER SAVE AREA
TCBIDF   EQU   112       TCB'S ID
TCBFSA   EQU   113       PTR TO FIRST PROBLEM PROGRAM SAVE AREA
TCBTCB   EQU   116       PTR TO NEXT TCB ON READY QUEUE
TCBTME   EQU   120       PTR TO TIMER ELEMENT
         AIF   ('&STORAGE' NE '2').MVTE3                           I250
TCBPIB   EQU   124                      POINTER TO PIB             I250
         AGO   .MFTE3                                              I250
.MVTE3   ANOP                                                      I250
TCBITB   EQU   124       PTR TO INITIATOR/TERMINATOR TCB
.MFTE3   ANOP                                                      I250
TCBSTC   EQU   128       PTR TO SISTER TCB
TCBMTC   EQU   132       PTR TO MOTHER TCB
TCBDTC   EQU   136       PTR TO DAUGHTER TCB
TCBIQE   EQU   140       PTR TO INTERUPT QUEUE ELEMENT (IQE)
TCBECB   EQU   144       PTR TO EVENT CONTROL BLOCK (ECB)
TCBTSFLG EQU   148                      TIME SHARING FLAGS        20021
TCBTSTSK EQU   X'80'                    SWAPPED TS TASK INDICAT   20021
TCBTSLP  EQU   150                      LIMIT PRIORITY OF TS TAS  20021
TCBTSDP  EQU   151                      DISP. PRIORITY OF TS TAS  20021
TCBJSCB  EQU   180                      PTR. TO JOB STEP C.B.     20021
         SPACE 2
*  REQUEST BLOCK DISPLACEMENT (RB)
         AIF   ('&STORAGE' NE '2').MVTE4                           I250
RBNM     EQU   0                        PROGRAM NAME               I250
RBSIZE   EQU   8                        SIZE OF RB                 I250
RBSTAB   EQU   10                       FLAG BYTES                 I250
RBUSE    EQU   12                       USE COUNT                  I250
RBEP     EQU   13                       ENTRY POINT ADDR           I250
RBOPSW   EQU   16                       SAVE AREA FOR PSW          I250
RBQ      EQU   24                       ADDR OF SIZE OF PROG       I250
RBWCF    EQU   28                       WAIT COUNT                 I250
RBLINK   EQU   29                       ADDR PREVIOUS RB OR TCB    I250
         AGO   .MFTE4                                              I250
.MVTE4   ANOP                                                      I250
RBABOPSW EQU   4         BITS 32-36 OF USER'S PSW
RBSIZE   EQU   8         SIZE OF RB IN DOUBLE WORD
RBSTAB   EQU   10        STATUS AND ATTRIBUTE BITS (STAB)
RBCDFLGS EQU   12        CONTENT CONTROL FLAGS
RBEP     EQU   12        IRB'S ENTRY POINT ADDRESS
RBCDE    EQU   13        PTR TO CONTENT DIRECTORY ENTRY
RBOPSW   EQU   16        INTERRUPT OPSW
RBPGMQ   EQU   24        QUEUE FIELD FOR SERIALLY REUSABLE PROGRAM
RBWCF    EQU   28        WAIT COUNT
RBLINK   EQU   29        PTR TO NEXT RB ON QUEUE, OR TCB IF LAST RB
NXTRBS   EQU   28       PTR. TO NEXT RB.
.MFTE4   ANOP                                                      I250
         SPACE 2
* GENERAL EQUATES
Q3       EQU   3                       DECIMAL EQUIVALENT 3        I250
ABEND    EQU   13                  ABEND SVC NUMBER                I250
X01      EQU   X'01'                    HEX 1                      I250
TSKSWA   EQU   8                       ENTRY PT ADDR OF TSK SW     I250
*                                      IS IN DISPATCHER            I250
*                                        SWITCH IN EXIT EFFECTOR   I250
SVCCHAP  EQU   44 .                                           BD A47511
SVCOLD   EQU   32 .                                           BD A47511
HEADADR  EQU   160       DISPLACMENT IN VECTOR TABLE TO 'HEAD' POINTER
ERRCHAP  EQU   X'012C'   CHAP'S DAUGHTER'S ADDRESS INVALID
ERRCHP2  EQU   X'022C'  INPUT ADR OF SUBTASK TO BE CHAPPED IS INVALID
ZERO     EQU   X'00'    ZERO BYTE
ONE      EQU   1                      .INSTRUCTION VALUE.         20021
FOUR    EQU   4                        GENERAL PURPOSE NO.       20021
         AIF   ('&TIMESL' NE 'TIMESL').NOTMSL3
         AIF   ('&STORAGE' NE '2').MVTE5                           I250
         SPACE 2                                                   I250
*  TIME-SLICING     DSECT OF TSCE                                  I250
         SPACE 1                                                   I250
TSCE     DSECT                                                     I250
TSHIPR   DS    CL1                      HIGH DISPATCHING PRIORITY  I250
*                                        LIMIT OF T-S GROUP        I250
TSFIRST  DS    CL3                      FIRST TCB IN T-S GROUP     I250
TSLWPR   DS    CL1                      LOW DISPATCHING PRIORITY   I250
*                                        LIMIT OF T-S GROUP        I250
TSLAST   DS    CL3                      LAST TCB IN T-S GROUP      I250
TSPNEXT  DS    CL1                      UNUSED                     I250
TSNEXT   DS    CL3                      NEXT TCB IN T-S GROUP TO   I250
*                                        BE DISPATCHED             I250
TSLENGTH DS    CL4                      LENGTH OF TIME-SLICE       I250
TSPLAST  EQU   TSLWPR                                              I250
         AGO   .MFTE5                                              I250
.MVTE5   ANOP                                                      I250
NEXTTSCE EQU   16                       OFFSET FOR NEXT TIME-SLICE TSCE
         SPACE 2
*      TIME SLICING DSECT OF TSCE
         IHBTSCE
.MFTE5   ANOP                                                      I250
.NOTMSL3 ANOP
         SPACE 3
XCCVT    DSECT
         AIF   ('&STORAGE' NE '2').MVTE6                           I250
         AIF   ('&TIMESL' EQ 'TIMESL').YEATM                       I250
         CVT   SYS=INT                                             I250
         AGO   .OUT12                                              I250
.YEATM   ANOP                                                      I250
         CVT   SYS=INT,OPTIONS=TSLICE                              I250
         AGO   .OUT12                                              I250
.MVTE6   ANOP                                                      I250
         AIF   ('TIMESL' EQ 'TIMESL').YESTM
         CVT
         AGO   .OUT12
.YESTM   ANOP
         CVT   OPTIONS=(TSLICE)
.OUT12   ANOP
         AIF   ('&TSO' NE '1').TSO                                20021
         IKJTSCVT                                                 20021
         IKJTJB                                                   20021
         IKJTJBX                                                  20021
         IEZJSCB                                                  20021
.TSO   ANOP                                                       20021
* ENTRY AND EXTRN STATEMENTS
         SPACE 2
         ENTRY IGC044
*
*ROUTINE NAME-           IGC044- CHAP -  SVC ROUTINE
*
*FUNCTIONS-              TO CHANGE THE DISPATCHING PRIORITY
*                        OF THE TASK ISSUING THE CHAP MACRO
*                        INSTRUCTION OR ANY OF IT'S SUBTASKS.
         AIF   ('&TSO' NE '1').NOTSO1                             20021
*                        FOR SWAPPABLE TSO TASKS, THE TS DISPAT-  20021
*                        CHING PRIORITY OF THE TASK BEING CHAP-   20021
*                        PED IS MODIFIED AND THE TASK IS RE-      20021
*                        STRUNG ON THE TCB READY QUEUE WITHIN     20021
*                        THE 'SUBGROUP' OF USERS TASKS FOR A      20021
*                        PARTICULAR REGION. NOTE-THE FIRST SUCH   20021
*                        TASK OF A 'SUBGROUP' IS NOT TO BE CHAP-  20021
*                        PED AND MUST REMAIN FIRST ON THE 'SUB-   20021
*                        GROUP' QUEUE.                            20021
.NOTSO1  ANOP
*
*
*
*ENTRY POINT NAMES-      IGC044- CHAP-   SVC ENTRY POINT
*
*CONTAINED IN MODULE-    IEAQTB00- TASK CONTROL BLOCK EFFECTOR
*
         AIF   ('&STORAGE' NE '2').HMVT0                           I250
*ATTRIBUTES-             TRANSIENT, RE-ENTRANT, SUPERVISOR STATE   I250
*                        TYPE III SVC ROUTINE                      I250
         AGO   .HMFT0                                              I250
.HMVT0   ANOP                                                      I250
*ATTRIBUTES-             RESIDENT,RE-ENTRANT,SUPERVISOR STATE,
*                        TYPE 1 SVC ROUTINE
.HMFT0   ANOP                                                      I250
*
         AIF   ('&STORAGE' NE '2').MVTH1                           I250
*APPLICABILITY-          OPTION 2 ONLY                             I250
         AGO   .MFTH1                                              I250
.MVTH1   ANOP                                                      I250
*APPLICABILITY-          OPTION 4 ONLY
.MFTH1   ANOP                                                      I250
*
         AIF   ('&STORAGE' NE '2').MVTH2                           I250
*EXTERNAL REFERENCES     CVT- COMMUNICATIONS VECTOR TABLE          I250
         AGO   .MFTH2                                              I250
.MVTH2   ANOP                                                      I250
*EXTERNAL REFERENCES-    IEATCBP- LOCATION 'NEW' AND'OLD'
*                        IEABTERM- ABTERM
*                        SVCXT- TYPE 1 SVC EXIT ROUTINE
*                        IEAHEAD- TCB AT THE TOP OF THE READY QUEUE
.MFTH2   ANOP                                                      I250
*
*SVC'S USED-             NONE
*
*INPUT-                  REGISTER 0 CONTAINS THE NUMERIC VALUE
*                        BY WHICH THE SPECIFIED TCB'S DISPATCHING
*                        PRIORITY IS TO BE ALTERED.
*
*                        REGISTER 1 CONTAINS A POINTER TO A FULLWORD
*                        WHICH CONTAINS THE ADDRESS OF THE TCB TO BE
*                        CHAPPED.  IF REGISTER 1 CONTAINS ZERO,
*                        THE REQUESTORS TCB WILL BE CHAPPED.
*
*
* EXAMPLES OF MACRO EXPANSIONS
*
DUMMY3   DSECT
         USING *,1
         SPACE 2
* EXAMPLE 1.........SPECIFIES THAT REGISTERS 0 AND 1 HAVE BEEN PRE-
*                   LOADED. REGISTER 1 INDICATES,IF PRE-LOADED WITH
*                   ZERO, THAT THE ISSUING TASK'S TCB IS TO BE CHAPPED.
*                   A NON-ZERO SPECIFIES A SUB-TASK TO BE CHAPPED.
*                   REGISTER  0 INDICATES THE VALUE BY WHICH THE
*                   DISPATCHING PRIORITY OF THE INDICATED TCB IS TO
*                   BE ALTERED.
         SPACE 2
*        CHAP  (0),(1)                                            20021
         CHAP  (0),(1)
         SPACE 2
* EXAMPLE 2.........MAY INCREASE THE DISPATCHING PRIORITY OF THE
*                   ISSUING TASK BY 10.
         SPACE 2
*        CHAP  10,'S'                                             20021
         CHAP  10,'S'
         SPACE 2
* EXAMPLE 4.........MAY INCREASE OR DECREASE THE DISPATCHING
*                   PRIORITY OF THE ISSUING TASK.
         SPACE 2
*        CHAP  (0),'S'                                            20021
         CHAP  (0),'S'
         SPACE 2
*        THE ABOVE MACRO EXPANSIONS ARE NOT TO BE MISCONSTRUED
*   AS BEING AN EXECUTABLE PORTION OF THIS CHAP SVC SERVICE ROUTINE.
*   THESE MACRO EXPANSIONS SERVE ONLY TO ILLUSTRATE WHAT SOME OF
*   THE VARIOUS FORMS OF THE EXPANSION LOOK LIKE.
*OUTPUT-                 NONE
*
*ENTRY POINTS-         1.IGC044- CHAP-   SVC ROUTINE ENTRY POINT.
         AIF   ('&STORAGE' NE '2').MVTH3                           I250
*                        GIVEN CONTROL BY THE SVC TRANSIENT AREA   I250
*                        HANDLER                                   I250
         AGO   .MFTH3                                              I250
.MVTH3   ANOP                                                      I250
*                        GIVEN CONTROL BY THE SVC FIRST LEVEL
*                        INTERRUPT HANDLER (FLIH) VIA AN LPSW,
*                        IN ORDER TO PERFORM THE CHAP FUNCTION
*                        REQUESTED BY THE CALLER. AN SVC 44
*                        IS ISSUED BY THE CALLER.
.MFTH3   ANOP                                                      I250
*
*                      2.THE PSW MUST BE
*                        DISABLED FOR ALL MASKABLE INTERRUPTS
*                        EXCEPT MACHINE CHECK,IN SUPERVISOR
*                        MODE AND HAVE SUPERVISOR PROTECT KEY.
*
*                      3.THE REGISTERS CONTAIN.
*
*                        REGISTER 1 CONTAINS A POINTER TO A FULLWORD
*                        WHICH CONTAINS THE ADDRESS OF THE TCB TO BE
*                        CHAPPED.  IF REGISTER 1 CONTAINS ZERO, THE
*                        REQUESTOR WILL BE CHAPPED.
*                        REGISTER  0 CONTAINS THE VALUE BY
*                        WHICH THE SPECIFIED DISPATCHING PRIORITY IS
*                        TO BE ALTERED.
*
*                        REGISTERS   2,6-12 AND 15 CONTAIN
*                        THE CONTENTS AT THE TIME SVC 44 WAS
*                        GIVEN.
*
*                        REGISTER 3 CONTAINS THE ADDRESS OF THE
*                        CVT TABLE.
*
*                        REGISTER 4 CONTAINS THE ADDRESS OF THE
*                        CURRENT TCB.
*
*                        REGISTER 5 CONTAINS THE ADDRESS OF THE
*                        RB AT THE TOP OF THE RB QUEUE.
*
*                        REGISTER 14 CONTAINS THE RETURN
*                        ADDRESS OF THE CALLER.IN THE
*                        CASE OF THE SVC FLIH BEING THE
*                        CALLER REGISTER 14 CONTAINS
*                        THE ADDRESS OF THE TYPE 1 SVC
*                        EXIT ROUTINE.(SVCXT)
*
*EXIT POINT-           1.TO THE CALLING ROUTINE VIA
*                        A BRANCH REGISTER 14.
*
*                      2.THE PSW IS.
*                        DISABLED FOR ALL MASKABLE INTERRUPTS
*                        EXCEPT MACHINE CHECK,IN SUPERVISOR
*                        MODE AND HAVE SUPERVISOR PROTECT KEY
*                        OF 0.
*
*                      3.REGISTER 13 CONTAINS THE ADDRESS OF THE
*                        ABTERM ROUTINE.
*
*ERROR EXIT POINTS-    1.TO ABTERM IN ORDED TO CAUSE THE ISSUING
*                        TASK TO BE TERMINATED.
*
*                      2.THE PSW IS.
*                        DISABLED FOR ALL MASKABLE INTERRUPTS
*                        EXCEPT FOR MACHINE CHECK, IN SUPERVISOR
*                        MODE AND HAVE A PROTECT KEY OF 0.
*
*                      3.REGISTER 1 WILL CONTAIN THE ERROR CODE.
*
*                      4.REGISTERS 0,3-5    AND 14 CONTAIN THE
*                        INFORMATION IN THEM AT THE TIME SVC
*                        44 WAS GIVEN CONTROL.
*
*                      5.THE ERROR CODE IS.
*                        X'012C' ERROR # 1 THE ADDRESS OF THE
*                                          INPUT SUB-TASK IS
*                                          INVALID OR TASK IS
*                                          COMPLETE.
*                       X'022C' ERROR # 2  INPUT ADDRESS OF PTR
*                                          TO TCB TO BE CHAP-
*                                          ED IS INVALID.
*
*                      6.REGISTER 13 CONTAINS THE ADDRESS OF THE
*                        ABTERM ROUTINE.
*
*TABLES AND CONTROL
*BLOCKS REFERENCED-    1.TCB TASK CONTROL BLOCK
*                        THE CONTROLING BLOCK UNDER WHICH
*                        THE TASK IS OPERATING.
*
*                        TCBLMP- LIMIT PRIORITY,
*                                TESTED AND SET BY CHAP.
*
*                        TCBDSP- DISPATCHING PRIORITY,
*                                SET BY CHAP.
*
*                        TCBTCB- POINTER TO NEXT TCB ON READY QUEUE,
*                                TESTED AND SET BY CHAP.
*
*                        TCBFC,TCBFWFPK,TCBFRO,TCBFCKT,TCBFTMWT,
*                        TCBFCD1,TCBNOP. NON-DISPATCHABILITY FLAGS
*                        TESTED BY CHAP.
*
*                        TCBTSTSK-FLAG TESTED BY TSO CHAP.        20021
*                        ON INDICATES A SWAPPABLE TSO TASK.       20021
*                                                                 20021
*TCBLTC-                 FIRST SUB-TASK TCB ADDRESS,
*                                TESTED BY CHAP.
*TCBNTC-                 POINTER TO NEXT SUB-TASK,
*                                TESTED BY CHAP.
*
*                        TCBRBP- POINTER TO RB,
*                                TESTED BY CHAP.
*
*                        TCBTSFLG- FLAG FIELD FOR TSO             20021
*                                  TESTED BY CHAP                 20021
*                        TCBTSLP - TIME SHARING LIMIT PRIORITY    20021
*                                  TESTED AND MODIFIED BY CHAP    20021
*                        TCBTSDP - TIME SHARING DISP. PRIORITY    20021
*                                  TESTED AND MODIFIED BY CHAP    20021
*                        TCBJSCB - PTR. TO JOB STEP CTRL. BK.     20021
*                                - ACCESSED BY TSO CHAP           20021
*                                                                 20021
*                      2.RB REQUEST BLOCK
*                        THE CONTROLING BLOCK UNDER WHICH
*                        THE ROUTINE IS OPERATING.
*
*                        RBWCF- RB WAIT COUNT FIELD,
*                               TESTED BY CHAP.
*
*                      3.IEATCBP- DOUBLE WORD CONTAING TCB POINTERS,
*                                 FIRST WORD 'NEW' ALTERED WHEN
*                                 CHAP FINDS A HIGHER PRIORITY TASK.
*
*LIST ORIGINS,TABLES
*AND CONTROL BLOCKS-     NONE
*
         AIF   ('&TSO' NE '1').NOTSO5                             20021
*CONTROL BLOCKS FOR TSO-                                          20021
*                                                                 20021
*                      1. COMMUNICATIONS VECTOR TABLE             20021
*                      2. TIME SHARING SECONDARY CVT              20021
*                      3. TIME SHARING JOB BLOCK                  20021
*                      4. TIME SHARING JOB BLOCK EXTENTION        20021
*                      5. JOB STEP CONTROL BLOCK                  20021
*                                                                 20021
.NOTSO5  ANOP                                                     20021
*RESTRICTIONS ON
*USE OF ROUTINE-       1.THE DISPATCHING PRIORITY OF A TASK
*                        MUST BE EQUAL TO IT'S OWN LIMIT PRIORITY
*                        OR BETWEEN IT'S OWN LIMIT PRIORITY AND 0.
*                      2.A TASK ATTEMPTING TO CHANGE ITS
*                        OWN DISPATCHING PRIORITY TO A NEGITIVE
*                        VALUE WILL CAUSE THE DISPATCHING PRIORITY
*                        TO BE SET TO ZERO.
*                      3.A TASK ATTEMPTING TO INCREASE IT'S OWN
*                        DISPATCHING PRIORITY TO A VALUE GREATER
*                        THAN IT'S LIMIT PRIORITY WILL CAUSE THE
*                        DISPATCHING PRIORITY TO BE SET EQUAL TO
*                        THE EXISTING LIMIT PRIORITY.
*                      4.A TASK MAY CHANGE THE DISPATCHING PRIORITY
*                        OF A SUBTASK UP TO IT'S OWN LIMIT PRIORITY.
*                        IF THE LIMIT OF THE SUBTASK IS LESS THAN
*                        THE DISPATCHING PRIORITY ESTABLISHED BY
*                        CHAP,CHAP WILL ALSO SET THE LIMIT PRIORITY
*                        OF THE SUBTASK TO THE DISPATCHING PRIORITY
*                        OF THE SUBTASK.
*
*NOTES-                  IF THE DISPATCHING PRIORITY OF THE
*                        ISSUING TASK IS REDUCED BELOW THAT OF
*                        ANOTHER TASK WAITING FOR CONTROL THIS
*                        OTHER TASK WILL GET CONTROL IMMEDIATELY
*                        AFTER CHAP.
         AIF   ('&STORAGE' EQ '2').MFTH4                           I250
*                          IF A SUPERVISOR ROUTINE IS AWARE
*                        THAT IT IS REFERENCING DATA WHO'S
*                        STORAGE KEY IS VALID BUT WILL NOT
*                        PASS THE VALIDITY CHECK ROUTINE
*                        EMPLOYED BY THIS ROUTINE ,A BRANCH
*                        ENTRY SHOULD BE USED.  THAT IS
*                        THIS ROUTINE'S ADDRESS + 12.
.MFTH4   ANOP                                                      I250
*
         EJECT
IGC044   CSECT
* CHAP ROUTINE (SVC 44)
*  CHAP ROUTINE
*        THIS ROUTINE CHANGES THE DISPATCHING PRIORITY OF REQUESTING
* TCB OR DAUGHTER TCB. IF INPUT REGISTER (1) IS 0 CHAP REQUESTING TCB.
*IF THE REQUESTOR HAS A NON-ZERO PROTECT KEY, THE CONTENTS OF REGISTER
*ONE ARE VALIDITY CHECKED IF IT IS NOT ZERO.  IN ADDITION, THE TCB
*POINTED TO FROM THE PARAMETER LIST IS CHECKED TO ENSURE THAT IT IS
*A SUBTASK OF THE REQUESTOR AND IS STILL ACTIVE.  FAILURE OF ANY OF
*THESE TESTS CAUSES THE REQUESTOR TO BE ABTERMED.
*        AFTER FINDING THE TCB TO CHAP, ADD INPUT CHAP VALUE (REGISTER
* 0) AND DISPATCHING PRIORITY OF REQUESTING TCB OR DAUGHTER, WHICH EVER
* SPECIFIED BY INPUT REGISTER. IF RESULTING TOTAL IS 0 OR LESS, 0 IS
* PUT IN THE DISPATCHING PRIORITY OF THE CHAP TCB. IF RESULT IS NOT 0
* OR LESS IT IS COMPARED WITH THE LIMIT PRIORITY OF THE REQUESTING TCB
* AND THE SMALLER VALUE IS STORED IN THE DIS. PRIORITY FIELD OF CHAP'D
* TCB.
*        NEXT COMPARE DISPATCHING PRIORITY AND LIMIT PRIORITY OF CHAP
* TCB. IF DISPATCH PRIORITY IS EQUAL OR LESS GO TO REQUEUE TCB. IF NOT
* EQUAL OR LESS, PROPAGATE DISPATCHING PRIORITY TO LIMIT PRIORITY IN
* CHAP TCB.
*        NOW REQUEUE CHAP TCB IN TCB READY QUEUE BY IT'S DISPATCHING
* PRIORITY. QUEUE IT JUST ABOVE A TCB OF LOWER DISPATCHING PRIORITY OR
* AT THE END OF QUEUE IF LOWER DISPATCHING PRIORITY NOT FOUND.
*        WHILE TESTING TCB'S TO FIND POSITION OF CHAP TCB IN QUEUE,
* CHECK IF HIGHER PRIORITY TCB HAS BEEN MADE READY. IF A TCB OF HIGHER
* PRIORITY IS FOUND PUT IT'S ADDRESS IN 'NEW' AND SET INDICATER SO
* 'NEW' WILL NOT BE CHANGED AGAIN BY CHAP.
*        CHAP MAXIMUM OF 255 OR MINIMUM OF MINUS 255.
         AIF   ('&TSO' NE '1').NOTSO6                             20021
*        FOR SWAPABLE TSO TASKS, THE TS DISPATCHING AND TS        20021
* LIMIT FIELDS OF THE TCBS ARE EMPLOYED. THE TCBDSP AND           20021
* TCBLMP FIELDS ARE NOT USED BY TSO CHAP. ONLY TASKS WITHIN A     20021
* PARTICULAR USERS SUBGROUP (KEPT TOGETHER BY REGION) MAY BE      20021
* CHAPPED. HOWEVER, THE FIRST TASK OF A PARTICULAR GROUP IS NOT   20021
* CHAPPABLE.                                                      20021
*                                                                 20021
.NOTSO6  ANOP                                                     20021
         SPACE 2
         CNOP  0,8
         BALR  XRBASE,0
         USING *,XRBASE
         USING XCCVT,XRCVT                                        20021
         AIF   ('&STORAGE' NE '2').MVTBP                           I250
         AIF   ('&TIMESL' NE 'TIMESL').MVTBP                       I250
         USING TSCE,XRTSBASE                                       I250
.MVTBP   ANOP                                                      I250
         SPACE 1
*  TEST IF REQUESTING TCB WANTS TO CHAP OWN TCB OR DAUGHTER.
         SPACE 2
         LTR   XRCTCB,XRCTCB           Q.INPUT TCB PTR TO DAUGHTER TCB
         BZ    OWNTCB                 ** NO BRANCH
         AIF   ('&STORAGE' EQ '2').MFTC0                           I250
         B     *+8                     SVC ENTRY PATH
         B     OWNTCB                  BRANCH ENTRY PATH
         AGO  .MVT216                                         BD A47511
.MFTC0   ANOP                                                      I250
         CLI   SVCOLD+3,SVCCHAP .      Q. IS SVC INT CODE CHAP   A47511
         BE    TYPEONE .               YES - CHAP IS TYPE 1 SVC  A47511
         L     TEMPREG,RBLINK-1(XRORB) GET RB WHICH ISSUED CHAP  A47511
         TM    RBOPSW+1(TEMPREG),X'F0' Q. IS PROTECT KEY ZERO    A47511
         BNZ   VALCHK .                 NO VALIDITY CHECK REQUEST 47511
         B     LOADTCB .                CONTINUE W/O VALIDITY CHECK
TYPEONE  DS    0H .                                           BD A47511
.MVT216  ANOP                                                 BD A47511
         TM    33,X'F0' .              Q.IS PROTECT KEY   ZERO    47511
         BC    5,VALCHK                NO. VALIDITY CHECK INPUT ADDR
LOADTCB  EQU   * .
         L     XRWTCB,0(0,XRCTCB)      GET TCB ADDR TO CHAP
         AIF   ('&TIMESL' NE 'TIMESL').NOTMSL7
         B     TSTTSBIT                 CHECK IF DAUGHTER IS
*                                       A TIME-SLICE TASK
         AGO   .TSXX1
.NOTMSL7 ANOP
         B     DOCHAP
.TSXX1   ANOP
VALCHK   DS    0H
         AIF   ('&STORAGE' NE '2').MVTC1                           I250
         LA    TEMPREG,Q3               GENERATE BIT CHECKER       I250
         NR    TEMPREG,XRCTCB           INPUT ADDR ON FULLWORD     I250
         BNZ   ERROR2                ***NO - BRANCH                I250
         AGO   .MFTC1                                              I250
.MVTC1   ANOP                                                      I250
         L     XRABTERM,ABTERM         LOAD ABTERM'S ADDRESS
         LR    XRSAVE,XRCTCB            SAVE INPUT ADR OF PRAMTR LIST
         L     XRTSTADR,CHECK          ABTERM' ADDRESS
         BAL   XRLINK,4(XRTSTADR)      Q. ADDRESS OF TCB PTR. VALID
         BNE   ERROR2              ***NNO BRANCH
         LR    XRCTCB,XRSAVE           RESTORE INPUT REGISTER
.MFTC1   ANOP                                                      I250
         L     XRCTCB,0(XRCTCB)        LOAD TCB ADDRESS
         LA    XRCTCB,0(XRCTCB)         CLEAR BITS S-7
         SPACE 1
*  TEST IF INPUT TCB ADDRESS IS CORRECT ADDRESS OF DAUGHTER.
         SPACE 2
         L     XRWTCB,TCBDTC(XROTCB)    LOAD DAUGHTER TCB
LOOP     LTR   XRWTCB,XRWTCB           Q.IS DAUGHTER TCB PRESENT
         BZ    ERROR                 ***NO ERROR
         CR    XRCTCB,XRWTCB           Q.DAUGHTER TCB FOUND
         BE    CMPLTEST                 YES, BR TO COMPLETE TEST   MO18
         L     XRWTCB,TCBSTC(XRWTCB)    LD NEXT DAUGHTER TCB ADDR
         B     LOOP
CMPLTEST EQU   *                                                   MO18
         AIF   ('&STORAGE' NE '2').CONTCH                          I250
         TM    TCBFC(XRWTCB),TCBFINI   CHAP'D TERM'D SUBTSK        I250
         AGO   .MFTCT                                              I250
.CONTCH  ANOP                                                      I250
         TM    TCBFL5(XRCTCB),TCBFC     IS SUBTASK STILL ACTIVE    MO18
.MFTCT   ANOP                                                      I250
         AIF   ('&TIMESL' NE 'TIMESL').NOTMSL8
         BZ    TSTTSBIT                 YES-CHECK IF DAUGHTER IS   MO18
*                                       A TIME-SLICE TASK
         AGO   .TSXX2
.NOTMSL8 ANOP
         BZ    DOCHAP                   YES, BRANCH                MO18
.TSXX2   ANOP
ERROR    LA    XRERCODE,ERRCHAP         CHAP'S DAUGHTER ADDRESS INVALID
         AIF   ('&STORAGE' NE '2').MVTZ1                           I250
         B     SHIFTCD             GO READY ABEND CODE             I250
         AGO   .MFTZ1                                              I250
.MVTZ1   ANOP                                                      I250
         BR    XRABTERM              ***GO TO ABTERM
.MFTZ1   ANOP                                                      I250
ERROR2   LA    XRERCODE,ERRCHP2        ADDRESS OF INPUT PTR TO SUB-
         AIF   ('&STORAGE' NE '2').MVTZ2                           I250
SHIFTCD  EQU   *                                                   I250
         SLL   XRERCODE,12         POSITION ABEND CODE             I250
         SVC   ABEND               ABEND THE REQUESTOR             I250
         AGO   .MFTZ2                                              I250
.MVTZ2   ANOP                                                      I250
         BR    XRABTERM                TASK IS INVALID. BR TO ABTERM
.MFTZ2   ANOP                                                      I250
*  LOAD OWN TCB ADDRESS TO CHAP.
         SPACE 2
OWNTCB   LR    XRWTCB,XROTCB            LD REQUESTING TCB ADR
         AIF   ('&TIMESL' NE 'TIMESL').NOTMSL4
TSTTSBIT TM    TCBFTS(XRWTCB),X'01'   Q. REQUESTING TCB A T/S TASK MTS0
         BZ    DOCHAP                   NO- NOT A T/S TASK
BITOFF   NI    TCBFTS(XRWTCB),X'FE'     TURN OFF T/S BIT
         AIF   ('&STORAGE' NE '2').MVTC2                           I250
         L     XRTSBASE,CVTTSCE         PTR TO TSCE                I250
         CLC   TSFIRST,TSLAST         Q.1ST SLOT EQUAL LAST SLOT   I250
*                                        IN TSCE                   I250
         AGO   .MFTC2                                              I250
.MVTC2   ANOP                                                      I250
         L     XRTSBASE,CVTTSCE         PTR TO 1ST TSCE
         USING TSCE,XRTSBASE
FINDTSCE CLC   TSDPRTY,TCBDSP(XRWTCB)   TCB IN THIS T/S GROUP
         BE    REMOVTCB                 YES-REMOVE TCB FROM TSCE
         LA    XRTSBASE,NEXTTSCE(XRTSBASE)  NO- GET NEXT TSCE
         B     FINDTSCE
REMOVTCB CLC   TSFIRST,TSLAST     Q.1ST SLOT EQUAL LAST SLOT IN TSCE
.MFTC2   ANOP                                                      I250
         BNE   CHKTSCE             NO- CONTINUE CHECK TO REMOVE CHAP.
*                                      TCB FROM TSCE
         MVC   TSFIRST,CONZERO     YES- ZERO OUT 1ST,NEXT AND
         MVC   TSLAST,CONZERO          LAST SLOTS IN TSCE
         MVC   TSNEXT,CONZERO
         B     DOCHAP              BR. TO CHECK NEW DISP PRTY
CHKTSCE  LR    TSREGB,XRWTCB            GET ADDR OF CHAPPED TCB IN REG
         LA    TSREGB,0(TSREGB)         CLEAR HIGH-ORDER BYTE
         AIF   ('&STORAGE' NE '2').MVTC3                           I250
         L     TSREGA,TSHIPR            GET ADDR 1ST TCB IN T-S    I250
         AGO   .MFTC3                                              I250
.MVTC3   ANOP                                                      I250
         L     TSREGA,TSDPRTY           GET ADDR OF 1ST TCB IN T/S GRP
.MFTC3   ANOP                                                      I250
         LA    TSREGA,0(TSREGA)         CLEAR HIGH-ORDER BYTE
         CR    TSREGB,TSREGA           Q.CHAPPED TCB 1ST IN TSCE
         BNE   CHKTSCE1            NO-CONTINUE CHECK
         L     TSREGA,TSPNEXT           YES-SEE IF CHAPPED TCB
*                                       IS NEXT IN TSCE
         LA    TSREGA,0(TSREGA)         CLEAR HIGH-ORDER BYTE
         CR    TSREGB,TSREGA
         BNE   CHKTSCEA                  NO- BR. TO MOVE TCB ADDR
         MVC   TSNEXT,TCBTCB+1(XRWTCB)   YES-MOVE NEXT TCB ON READY
*                                        QUEUE TO NEXT IN TSCE
CHKTSCEA MVC   TSFIRST,TCBTCB+1(XRWTCB) MOVE NEXT TCB ON READY QUE TO
*                                       FIRST IN TSCE
         B     DOCHAP              BR. TO CHECK NEW DISP PRTY
CHKTSCE1 L     TSREGA,TSPNEXT          Q.CHAPPED TCB NEXT IN TSCE
         LA    TSREGA,0(TSREGA)         CLEAR HIGH-ORDER BYTE
         CR    TSREGB,TSREGA
         BE    CHKTSCE2            YES-CONTINUE CHECK
         AIF   ('&STORAGE' NE '2').MVTC4                           I250
         L     TSREGA,TSLWPR            NO- CHAP'D TCB LAST IN GRP I250
         AGO   .MFTC4                                              I250
.MVTC4   ANOP                                                      I250
         L     TSREGA,TSPLAST           NO-Q.CHAPPED TCB LAST IN TSCE
.MFTC4   ANOP                                                      I250
         LA    TSREGA,0(TSREGA)         CLEAR HIGH-ORDER BYTE
         CR    TSREGB,TSREGA
         BE    SRCH4TCB                  YES-BR. TO SEARCH READY QUEUE
*                                            FOR TCB THAT HAS TCBTCB
*                                            PTR TO CHAPPED TCB
         B     DOCHAP                    NO-BR. TO CHECK NEW DISP PRTY
CHKTSCE2 CLC   TSNEXT,TSLAST     Q.NEXT EQUAL LAST IN TSCE
         BE    CHKTSCE3            YES-BR. TO UPDATE TSCE
         MVC   TSNEXT,TCBTCB+1(XRWTCB) NO-MOVE TCBTCB FLD OF CHAP. TASK
*                                       TO NEXT IN TSCE
         B     DOCHAP              BR. TO CHECK NEW DISP PRTY
CHKTSCE3 MVC   TSNEXT,TSFIRST      MOVE FIRST TO NEXT IN TSCE
         AIF   ('&STORAGE' NE '2').MVTC5                           I250
SRCH4TCB EQU   *                                                   I250
         L     XRDSP,TSHIPR             GET ADDR OF 1ST TCB IN     I250
*                                        READY QUEUE               I250
         AGO   .MFTC5                                              I250
.MVTC5   ANOP                                                      I250
SRCH4TCB L     XRDSP,TSDPRTY       GET ADDR OF FIRST TCB IN READY QUEUE
.MFTC5   ANOP                                                      I250
*                                  FOR THIS DISP PRTY
SRCHMORE L     TSREGA,TCBTCB(XRDSP)     DOES THIS TCB POINT
*                                       TO LAST TCB IN TSCE
         LA    TSREGA,0(TSREGA)         CLEAR HIGH-ORDER BYTE
         CR    TSREGB,TSREGA
         BE    ENDSRCH             YES- BR TO UPDATE TSCE
         L     XRDSP,TCBTCB(XRDSP) NO- GET ADDR OF NEXT TCB IN READY
*                                      QUEUE
         B     SRCHMORE            CONTINUE SEARCH OF READY QUEUE
ENDSRCH  LA    XRDSP,0(XRDSP)           CLEAR HIGH-ORDER BYTE
         AIF   ('&STORAGE' NE '2').UUSOB                           I250
         IC    XRABTERM,TSLWPR         SAVE LOW PRIORITY           I250
         SLL   XRABTERM,24                                         I250
         OR    XRDSP,XRABTERM                                      I250
.UUSOB   ANOP                                                      I250
         ST    XRDSP,TSPLAST            STORE ADDR OF TCB IN TSCE
*                                       THAT REPLACES LAST IN TSCE
         SPACE 1
.NOTMSL4 ANOP
*  ADD INPUT PARAMETER VALUE TO CHAP TCB DISPATCHING PRIORITY AND TEST
*  RESULTS.
         SPACE 2
DOCHAP   SR    XRDSP,XRDSP
         AIF   ('&TSO' NE '1').NOTSO2                             20021
         EJECT
* TEST TO DETERMINE IF REQUESTING TCB IS A TIME SHARING USER'S    20021
* TASK. IF SO, THE TS CHAP ROUTINE, WHICH USES TIME SHARING       20021
* DISPATCHING AND LIMIT PRIORITIES, IS USED.                      20021
*                                                                 20021
         TM    TCBTSFLG(XRWTCB),TCBTSTSK  Q. CHAPPED TASK TS      20021
         BZ    DOCHAP1                       NO                   20021
         SPACE
*-NOTE-THE FIRST TIME SHARING USER TCB IS TO REMAIN FIRST ON THE  20021
* TCB READY QUEUE FOR HIS 'SUBGROUP'.                             20021
         SPACE
         IC    XRDSP,TCBTSDP(,XRWTCB)  .CHAP TS DISP.PRIORITY.    20021
         AR    XRDSP,XRCVALUE                ADD CHAP VALUE       20021
         BC    12,TSZSTRE                    BR ON 0 OR MINUS     20021
         CH    XRDSP,P255            Q.TOTAL HIGHER THAN 255      20021
         BH    TSYADEH                       YES  TAKE BRANCH     20021
         EX    XRDSP,TSLMPRTE        Q.TOT LESS THAN TSLIMIT      20021
         BNL   TSWSTPR                       YES  TAKE BRANCH     20021
TSYADEH  EQU   *                                                  20021
* PROPOGATE REQUESTING TCBS TS LIMIT PRIORITY TO TS DISPATCHING   20021
* AND LIMIT PRIORITY OF CHAP                                      20021
         MVC   TCBTSDP(ONE,XRWTCB),TCBTSLP(XROTCB) .TO DISPAT.    20021
         MVC   TCBTSLP(ONE,XRWTCB),TCBTSLP(XROTCB) .TO LIMIT.     20021
*                                                                 20021
         B     TSXREST                       GO FIX TCB QUE ETC.  20021
TSWSTPR  EQU   *                                                  20021
         STC   XRDSP,TCBTSDP(,XRWTCB)  .RESULT IN TS DISP. PRI.   20021
         EX    XRDSP,TSDSPRTE        Q.CHAP DISP.GREATER THAN LI  20021
         BNL   TSXREST                  NO-RESTRING TCB Q. ETC.   20021
         STC   XRDSP,TCBTSLP(,XRWTCB)  .UPDATE CHAP TS LIMIT PRI  20021
         B     TSXREST                                            20021
TSZSTRE  EQU   *                                                  20021
         MVI   TCBTSDP(XRWTCB),ZERO     IN TS DISP PRI. OF CHAP   20021
*                                                                 20021
* FIND TS USER 'SUBGROUP' OF TCBS ON TCB READY QUEUE THRU TJB +   20021
* TJBX DSECTS. PLACE CHAPPED TCB JUST PRIOR TO TCB OF LOWER       20021
* DISPATCHING PRIORITY IN USER SUBGROUP. IF NONE LOWER, PUT CHAP  20021
* TCB AT END OF SAME. ADJUST TJBX LAST POINTER IF REQUIRED. THEN  20021
* ADJUST TCB NEW POINTER,IF REQUIRED, BY USING TASK SWITCH ROUT.  20021
*
TSXREST  EQU   *
         L     TEMPREG,TCBJSCB(,XRWTCB) PTR. TO JOB STEP CB       20021
         USING IEZJSCB,TEMPREG                                    20021
         LH    XRDSP,JSCBTJID         .GET TJID FROM JSCB.        20021
         DROP  TEMPREG                                            20021
         L     TEMPREG,CVTTSCVT         PTR TO TSO SECONDARY CVT  20021
         USING TSCVT,TEMPREG                                      20021
         MH    XRDSP,TSCVTSZU           SIZE OF TJB               20021
         A     XRDSP,TSCVTTJB           ADDRESS OF TJB            20021
         DROP  TEMPREG                                            20021
         USING TJB,XRDSP                                          20021
         L     XRDSP,TJBEXTNT           ADDRESS OF TJBX           20021
         DROP  XRDSP                                              20021
         USING TJBX,XRDSP                                         20021
         L     LASTCB,TJBXFST          PTR TO TS USER'S 1ST TASK  20021
         L     XTJBXLST,TJBXLAST       PTR TO TS USER'S LAST TSK  20021
         CR    CHAPTCB,LASTCB          TS USER'S LOGON TASK?      20021
         BNE   TSOVERB                  .NO.                      20021
         L     TEMPREG,TCBTCB(,CHAPTCB)     .YES-GO TO SECOND TK  20021
TSOVERA  EQU   *                                                  20021
         CLC   TCBTSDP(ONE,CHAPTCB),TCBTSDP(TEMPREG) Q.FIRST LOW  20021
         BCR   NOTLOW,XRRETURN .     NO-DON'T ADJUST LOWER-RETURN M4631
         MVC   TCBTSDP(ONE,TEMPREG),TCBTSDP(CHAPTCB) .YES-ADJUST  20021
         CR    TEMPREG,XTJBXLST       .Q.LAST USERS TASK DONE.    20021
         BCR   EQUAL,XRRETURN .      YES-DON'T CONTINUE-RETURN    M4631
         L     TEMPREG,TCBTCB(,TEMPREG) .STEP TO NEXT TASK.       20021
         B     TSOVERA                                            20021
TSOVERB  EQU   *                                                  20021
         SR    NEWPRE,NEWPRE           CLEAR NEW PREV. POINTER    20021
         CLC   TCBTSDP(ONE,CHAPTCB),TCBTSDP(LASTCB) CHAP HI FIR   20021
         BNH   TSOVER                   .NO.                      20021
         MVC   TCBTSDP(ONE,CHAPTCB),TCBTSDP(LASTCB) YES- MAKE FI  20021
TSOVER   L     CURTCB,TCBTCB(LASTCB)   CURR.TCB IS NXT. AFTR LST  20021
         LTR   NEWPRE,NEWPRE         Q.IS NEW PREV. FOUND YET     20021
         BC    7,TSQUEUE               YES BRANCH                 20021
         CR    LASTCB,XTJBXLST         END OF USER'S TASK GROUP?  20021
         BE    TSDEQUE                 QUEUE CHAP TCB TO LAST OR  20021
*                                      NEW PREVIOUS.              20021
         CLC   TCBTSDP(ONE,CURTCB),TCBTSDP(CHAPTCB) IS CURRENT    20021
*                                      LOWER THAN CHAP TCB?       20021
         BNL   TSQUEUE                 NO BRANCH                  20021
TSDEQUE  LR    NEWPRE,LASTCB           IT'S LAST OR NEW PREV.     20021
TSQUEUE  CR    CHAPTCB,CURTCB          CHAP THE CURRENT TCB?      20021
         BNE   TSBUMPUP                NO                         20021
         LR    OLDPRE,LASTCB           YES LAST IS OLD PREV.      20021
TSBUMPUP CR    LASTCB,XTJBXLST         LAST TCB IN TASK GROUP?    20021
         LR    LASTCB,CURTCB           CURRENT TCB BECOMES LAST   20021
         BNE   TSOVER                  NOT LAST. CONTINUE SEARCH  20021
         CR    NEWPRE,CHAPTCB          IS CHAPPED TCB IN PLACE    20021
         BCR   EQUAL,XRRETURN .      YES-DON'T CONTINUE-RETURN    M4631
         L     TEMPREG,TCBTCB(OLDPRE)  NO, ENQUE CHAPPED TCB      20021
         MVC   TCBTCB(FOUR,OLDPRE),TCBTCB(CHAPTCB)                20021
         MVC   TCBTCB(FOUR,CHAPTCB),TCBTCB(NEWPRE)                20021
         ST    TEMPREG,TCBTCB(NEWPRE)                             20021
         CR    CHAPTCB,XTJBXLST      Q.CHAPPED TCB EQ. USERS LAS  20021
         BNE   TSLSTCH                  .NO.                      20021
         ST    OLDPRE,TJBXLAST         .YES-UPDATE LAST PTR.      20021
         B     SETFORTS .           SET FOR TS TASK SWITCH        M4631
TSLSTCH  EQU   *                                                  20021
         CLC   TCBTSDP(ONE,CHAPTCB),TCBTSDP(XTJBXLST) IS CHAP     20021
*                                      TCB BELOW LAST TCB IN TS   20021
*                                      USER'S TASK GROUP?         20021
         BH    SETFORTS .           SET FOR TS TASK SWITCH        M4631
         ST    CHAPTCB,TJBXLAST        UPDATE TS TASK GROUP PTR.  20021
SETFORTS EQU   * .
         LR    TEMPREG,XRRETURN .   SAVE RET REG FOR TASK SWITCH  M4631
         L     XRNEWOLD,TJBXFST .   POINTER TO USERS FIRST TASK   M4631
         B     COMPARE .            SET FOR TS TASK SWITCH        M4631
         DROP  XRDSP
         EJECT
DOCHAP1  EQU   *
.NOTSO2  ANOP                                                     20021
         IC    XRDSP,TCBDSP(XRWTCB)     LD CHAP TCB DISPATCH PRIORITY
         AR    XRDSP,XRCVALUE           ADD CHAP VALUE
         BNH   STZERO                  Q.TOTAL 0 OR NEGATIVE (YES BR)
         CH    XRDSP,P255               Q.TOTAL HIGHER THAN 255
         BH    ADDEDHI                  YES BRANCH
         EX    XRDSP,TESTLPRI          Q.TOTAL LESS THAN LIMIT PRIORITY
*                                       OF REQUESTING TCB
         BNL   STDPRI                   YES BRANCH
         SPACE 1
*  TOTAL ADDED RESULT NOT 0 OR NEGATIVE AND HIGHER THAN REQUESTING TCB
*  LIMIT PRIORITY. PROPAGATE LIMIT PRIORITY OF REQUESTING TCB TO CHAP
*  TCB'S DISPATCHING AND LIMIT PRIORITY FIELD.
         SPACE 2
ADDEDHI  MVC   TCBDSP(1,XRWTCB),TCBLMP(XROTCB) PROPAGATE REQUESTING TCB
         MVC   TCBLMP(1,XRWTCB),TCBLMP(XROTCB) L PRI TO D AND L OF CHAP
         AIF   ('&TIMESL' NE 'TIMESL').NOTMSL5
         AIF   ('&STORAGE' NE '2').MVTC6                           I250
CHK4TSP  EQU   *                                                   I250
         L     XRTSBASE,CVTTSCE         PTR TO TSCE                I250
         LTR   XRTSBASE,XRTSBASE        A TSCE PRESENT             I250
         BZ    LOCPLACE                 NO - BRANCH AROUND T-S CK  I250
         SPACE 1                                                   I250
         CLC   TCBDSP(1,XRWTCB),TSHIPR  DP OF CHAP'D TCB LESS THAN I250
*                                        HIGH LIMIT OF T-S GRP     I250
         BH    LOCPLACE                 NO - NEW DP NOT IN T-S GRP I250
         CLC   TCBDSP(1,XRWTCB),TSLWPR  DP OF CHAP'D TCB HIGHER    I250
*                                        THAN LOW LIM OF T-S GRP   I250
         BL    LOCPLACE                 NO - NEW DP NOT IN T-S GRP I250
         OI    TCBFTS(XRWTCB),X01       TURN ON TCB T-S FLAG BIT   I250
         CLC   TSFIRST,CONZERO          ANY TASKS IN T-S GRP       I250
         BNE   TESTFAL                  YES CHECK FOR REPLACEMENT  I250
*                                        OF 1ST OR LAST            I250
         ST    XRWTCB,TSPNEXT           NO- PUT CHAP'D TCB AS      I250
         MVC   TSFIRST(3),TSNEXT         FIRST, LAST, AND NEXT IN  I250
         MVC   TSLAST(3),TSNEXT          T-S GRP                   I250
         AGO   .NOTMSL5                                            I250
.MVTC6   ANOP                                                      I250
         DROP  XRTSBASE
CHK4TSP EQU    *
         L     XRTSBASE,CVTTSCE    POINTER TO 1ST TSCE
         LTR   XRTSBASE,XRTSBASE Q.ARE THERE ANY TSCES'
         BZ    LOCPLACE                 NO-BRANCH AROUND T/S CHECK
CHK4TSB  EQU   *
         USING TSCE,XRTSBASE
CHK4TSC  CLC   TSDPRTY,TCBDSP(XRWTCB) Q. NEW D PRTY OF CHAPPED TCB A
*                                        TIME SLICE TASK
         BE    TRNBITON            YES- BRANCH TO ADD TCB TO TSCE
         TM    TSLENGTH,X'80'           NO-Q.ALL TSCES' CHECKED
         BO    LOCPLACE                 YES-NEW DISP PRTY NOT IN
*                                           TIME-SLICE GROUP
         LA    XRTSBASE,NEXTTSCE(XRTSBASE) NO-GET ADDR OF NEXT TSCE
*                                             AND BRANCH
         B     CHK4TSC                 BACK TO CHECK D PRTY IN TCB
TRNBITON OI    TCBFTS(XRWTCB),X'01'    TURN ON TCB T/S FLAG BIT    MTS0
         ST    XRWTCB,TSPLAST      PUT ADDR OF CHAPPED TCB IN LAST SLOT
*                                   IN TSCE
         CLC   TSFIRST,CONZERO   Q.ANY TASKS IN THIS TIME-SLICE GROUP
         BNE   LOCPLACE            YES-NO  FURTHUR TSCE CHANGES
         ST    XRWTCB,TSPNEXT      NO-SET UP CHAPPED TCB AS 1ST AND
         MVC   TSFIRST,TSNEXT      NEXT IN TSCE
.NOTMSL5 ANOP
         B     LOCPLACE                UNCONDITIONALLY
         SPACE 1
         AIF  (('&STORAGE' NE '2') OR ('&TIMESL' NE 'TIMESL')).BPFLT
*  THE DISPATCHING PRIORITY OF THE ATTACHED TASK IS COMPARED TO    I250
* THE DISPATCHING PRIORITIES OF THE FIRST AND LAST TCB'S IN THE    I250
* TSCE.  IF THE DISPATCHING PRIORITY OF THE ATTACHED TASK IS       I250
* GREATER THAN THE DP OF THE FIRST OR LESS THAN THE DP OF LAST IT  I250
* REPLACES FIRST OR LAST RESPECTIVELY.                             I250
         SPACE 1                                                   I250
TESTFAL  EQU   *                                                   I250
         L     TEMPREG,TSHIPR           GET PTR TO FIRST TSCE TCB  I250
         CLC   TCBDSP(1,XRWTCB),TCBDSP(TEMPREG)  ATTACHEE'S DP GT  I250
*                                       FIRST                      I250
         BH    REPFRST                  YES - PUT ATTACHEE FIRST   I250
         L     TEMPREG,TSLWPR           GET PTR TO LAST TSCE TCB   I250
         CLC   TCBDSP(1,XRWTCB),TCBDSP(TEMPREG) ATTACHEE'S DP LT   I250
*                                            TSCE'S LAST           I250
         BNH   REPLAST             YES - PUT ATTACHEE LAST         I250
         B     LOCPLACE                 ATTACHEE FITS IN CONT      I250
REPFRST  EQU   *                                                   I250
         IC    XR0,TSHIPR               SAVE HI DP LIM             I250
         ST    XRWTCB,TSHIPR            REPLACE FRST TSCE TCB      I250
*                                        WITH ATTACHEE             I250
         STC   XR0,TSHIPR               RESTORE HI DP LIM          I250
         B     LOCPLACE                 CONTINUE                   I250
REPLAST  EQU   *                                                   I250
         IC    XR0,TSLWPR               SAVE LOW DP LIM TSCE       I250
         ST    XRWTCB,TSLWPR            REPLACE LAST TSCE TCB      I250
*                                       WITH ATTACHEE              I250
         STC   XR0,TSLWPR               RESTORE LOW DP LIM TSCE    I250
         B     LOCPLACE                 CONTINUE                   I250
         SPACE 1                                                   I250
.BPFLT   ANOP                                                      I250
*  TOTAL ADDED RESULT NOT 0 OR NEGATIVE AND LOWER THAN REQUESTING TCB'S
*  LIMIT PRIORITY. ST RESULT IN DISPATCHING PRIORITY FIELD OF CHAP TCB.
*  THAN COMPARE DISPATCH AND LIMIT PRIORITY OF CHAP TCB. STORE THE
*  HIGHER OF THE TWO IN THE LIMIT PRIORITY FIELD OF THE CHAP'D TCB.
         SPACE 2
STDPRI   STC   XRDSP,TCBDSP(XRWTCB)     ST ADDED RESULT IN CHAP D PRI
         EX    XRDSP,TESTLCH           Q.CHAP D GREATER THAN IT'S L PRI
         AIF   ('&TIMESL' NE 'TIMESL').NOTMSL9
         BNL   CHK4TSP                  NO- TAKE BRANCH
         AGO   .YESTSA
.NOTMSL9 ANOP
         BNL   LOCPLACE
.YESTSA  ANOP
         STC   XRDSP,TCBLMP(XRWTCB)     ST ADDED RESULT IN CHAP L PRI
         AIF   ('&TIMESL' NE 'TIMESL').NOTMSLA
         B     CHK4TSP                  BRANCH UNCONDITIONALLY
         AGO   .YESTSB
.NOTMSLA ANOP
         B     LOCPLACE                 BR UNCOND
.YESTSB  ANOP
         SPACE 1
*  TOTAL ADDED RESULT 0 OR NEGATIVE STORE 0 IN DISPATCHING PRIORITY
*  FIELD OF CHAP TCB
         SPACE 2
STZERO   MVI   TCBDSP(XRWTCB),X'00'     ST 0 IN D PRIORITY OF CHAP TCB
         SPACE 1
*  FIND POSITION IN READY QUEUE WHERE CHAP TCB BELONGS. PUT IT JUST
*  PRIOR TO TCB OF LOWER DISPATCHING PRIORITY. IF NO LOWER PRIORITY TCB
* FOUND, PUT IT AT END OF THE QUEUE. WHILE CHECK'G THRU QUEUE TO FIND
* POSITION OF CHAP'D TCB. CHECK TO SEE IF TCB OF H'ER PRIORITY HAS
*  BEEN MADE READY. IF HIGHER PRIORITY TCB FOUND READY PUT IT'S ADDRESS
*  IN 'NEW' AND SET INDICATER SO 'NEW' WON'T BE CHANGED AGAIN IN THIS
*  REQUESTING CHAP.
         SPACE 2
LOCPLACE EQU   *                                                  20021
         LA    TEMPREG,X'74'           LD. PTR. TO TCBTCB FIELD   20021
         LA    LASTCB,HEADADR(XRCVT)   LOAD ADR. OF 1ST TCB ON R.Q.
         SR    LASTCB,TEMPREG          SET PSEUDO POINTER TO NXT TCB
         SR    NEWPRE,NEWPRE           CLEAR NEW PREV. POINTER
OVER     L     CURTCB,TCBTCB(LASTCB)   CURR.TCB IS NXT. AFTER LST.
         LTR   NEWPRE,NEWPRE         Q.IS NEW PREV. FOUND YET
         BC    7,QUEUE                 YES BRANCH
         LTR   CURTCB,CURTCB         Q. IS LASTCB END OF QUEUE
         BZ    DEQUEUE                 YES BRANCH
         CLC   TCBDSP(1,CURTCB),TCBDSP(CHAPTCB) NO CUR. LO'R THAN CHAP
         AIF   ('&TSO' EQ '1').TSOYES                             M0197
         BNL   QUEUE .                 NO.BRANCH
         AGO   .NTSO10                                            M0197
.TSOYES  ANOP                                                     M0197
         BH    QUEUE .                 PRI HIGHER, BRANCH         M0197
         BL    DEQUEUE .               PRI LOWER, BRANCH          M0197
         CLI   TCBDSP(CURTCB),ZERO .   Q.PRI = O                  M0197
         BNZ   QUEUE .                 NO.CONTINUE                M0197
         SPACE 1
* IF CURRENT = TSTASK, QUEUE CHAPPED TASK AHEAD OF IT (PRI = 0)   M0197
         SPACE 1
         TM    TCBTSFLG(CURTCB),TCBTSTSK .  Q.CURRENT = TSTASK    M0197
         BNO   QUEUE .                      NO.BRANCH             M0197
.NTSO10  ANOP                                                     M0197
DEQUEUE  LR    NEWPRE,LASTCB           YES, IT'S LAST, OR NEW PREV.
QUEUE    CR    CHAPTCB,CURTCB          IS CURRENT TCB TO BE CHAPPED
         BNE   BUMPUP                  NO
         LR    OLDPRE,LASTCB           YES LAST IS OLD PREV.
BUMPUP   LTR   LASTCB,CURTCB           CURRENT TCB BECOMES LASTCB
         BC    7,OVER
         CR    NEWPRE,CHAPTCB          IS CHAPPED TCB IN PLACE
         BCR   EQUAL,XRRETURN .      YES-DON'T CONTINUE           M4631
         L     TEMPREG,TCBTCB(OLDPRE)  NO, ENQUE CHAPPED TCB
         MVC   TCBTCB(4,OLDPRE),TCBTCB(CHAPTCB)
         MVC   TCBTCB(4,CHAPTCB),TCBTCB(NEWPRE)
         ST    TEMPREG,TCBTCB(NEWPRE)
         AIF   ('&STORAGE' NE '2').MVTEDC                          I250
SETNEW   EQU   *                                                   I250
         L     TEMPREG,ZERO(XRCVT)     GET NEW-OLD PTR             I250
         L     TEMPREG,TSKSWA(TEMPREG) GET TASK SWITH ADDR         I250
         LR    XRNEWOLD,XRRETURN       SAVE RET ADDR OVER TSKSW    I250
         LNR   XR0,TEMPREG             INDICATE QUEUE SEARCH       I250
         BALR  XRRETURN,TEMPREG        GO TO TASK SWITCH           I250
         LR    XRRETURN,XRNEWOLD       RESTORE RETURN REG          I250
         BR    XRRETURN                RETURN                      I250
         AGO   .MFTENDC                                            I250
.MVTEDC  ANOP                                                      I250
SETNEW   LR    TEMPREG,XRRETURN        SAVE RETURN REG
         L     XRNEWOLD,HEADADR(XRCVT) GET HEAD TCB
COMPARE  CR    XRNEWOLD,CHAPTCB        Q. CHAP TCB FOUND
         L     XRTCBTST,TSKSWTR        LOAD ADDR. OF TSK. SWT. RT.
         BC    8,OUT              YES TAKE BRANCH                  MTS0
         BALR  XRRETURN,XRTCBTST       BRANCH TO TSK. SWT. RT.
         L     XRNEWOLD,TCBTCB(XRNEWOLD)  GET NEXT TCB
         B     COMPARE
OUT      LR    XRRETURN,TEMPREG        RESTORE RETURN REG.
         BR    XRTCBTST                                            MTS0
*
*
.MFTENDC ANOP                                                      I250
TESTLPRI CLI   TCBLMP(XROTCB),ZERO
TESTLCH  CLI   TCBLMP(XRWTCB),ZERO
         AIF   ('&TSO' NE '1').NOTSO9                             20021
TSLMPRTE CLI   TCBTSLP(XROTCB),ZERO    TEST TS LIMIT PRIORITY     20021
TSDSPRTE CLI   TCBTSLP(XRWTCB),ZERO    TEST TS DISP. PRIORITY     20021
.NOTSO9  ANOP                                                     20021
* DEFINE CONSTANT
         SPACE 1
         DS    0F
HALF0    DC    X'0000FFFF'
P255     DC    H'255'
         AIF   ('&TIMESL' NE 'TIMESL').NOTMSL6
CONZERO  DC    AL3(0)
.NOTMSL6 ANOP
         AIF   ('&STORAGE' EQ '2').MFTEND                          I250
         DS    0F
         EXTRN IEA0VL01,IEA0AB01,IEA0DS02
ABTERM   DC    A(IEA0AB01)             ABTERM'S ADDRESS
CHECK    DC    A(IEA0VL01)             VALIDITY CHECK ADDRESS
TSKSWTR  DC    A(IEA0DS02)             ADR OF TASK SWITCH ROUTINE
.MFTEND  ANOP                                                      I250
         MEND
