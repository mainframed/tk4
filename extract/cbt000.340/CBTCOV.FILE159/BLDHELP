00002890PROC 0 DEBUG
00002900/* )STARTHELP
00002910/* )F FUNCTION -
00002920/*    THE BLDHELP COMMAND IS A CLIST USED TO BUILD A HELP MEMBER
00002930/*    IN A SELECTED HELP DATASET. IT ASSUMES THAT YOU HAVE DOCUMENTED
00002940/*    THE SOURCE MEMBER IN "HELP" FORMAT - SEE PAGE 29 OF GC28-0648;
00002950/*    "TSO GUIDE TO WRITING A TERMINAL MONITOR PROGRAM" FOR THE
00002960/*    PROPER FORMAT.
00002970/*
00002980/*    NOTE: I N   A D D I T I O N --- THE SOURCE HELP DOCUMENTATION
00002990/*          MUST BE BRACKETED WITH SENTINAL RECORDS IN THE FOLLOWING
00003000/*          FORMAT:
00003010/*
00003020/*    FOR CLISTS: /* )STARTHELP
00003030/*                /* )ENDHELP
00003040/*
00003050/*    FOR JCL:    //*)STARTHELP
00003060/*                //*)ENDHELP
00003070/*
00003080/*    FOR NORMAL
00003090/*    HELP DATA:  OMIT STARTHELP AND ENDHELP SENTINELS ENTIRELY.
00003100/*                ----
00003110/*
00003120/* )X SYNTAX -  'BLDHELP'
00003130/* )O OPERANDS - YOU WILL BE PROMPTED FOR THE FOLLOWING:
00003140/*
00003150/*      * ENTER SOURCE 'DATASET' OR 'DATASET(MEMBER)'
00003160/*                -ENTER THE NAME OF THE DATASET TO BE TRANSCRIBED.
00003170/*                 IF IT IS A PDS, INCLUDE (MEMBERNAME).
00003180/*      * ENTER TARGET 'DATASET(MEMBER)' OR NULL TO UPDATE
00003190/*               'SYS2.JCLLIB(MEMBER)'.
00003200/*                -ENTER THE NAME OF THE TARGET DATASET;
00003210/*                 INCLUDE (MEMBERNAME)  -OR-
00003220/*                 DEPRESS ENTER TO UPDATE THE DEFAULT LIBRARY.
00003230/*
00003240/*             MISCELLANEOUS MESSAGES -
00003250/*
00003260/*      *  DATASET NAMES WITHOUT QUOTES WILL BE PREFIXED WITH "LOGONID".
00003270/*                 -INFORMATIONAL MESSAGE.
00003280/*      *  SEQUENTIAL DATASET SPECIFIED OR ERROR SPECIFYING MEMBER.
00003290/*                 -INFORMATIONAL MESSAGE. IMPLIES MISSING OR UNBALANCED
00003300/*                   PARENTHESES.
00003310/*      *  PLEASE ENTER MEMBER NAME IN TARGET DATASET:
00003320/*                 -OCCURS IF SEQUENTIAL SOURCE DATASET SPECIFIED.
00003330/*                  ENTER MEMBER NAME.
00003340/*      *  COMMAND "BLDJCL" INTENDED FOR   L I B R A R Y  USE ONLY.
00003350/*         PLEASE SPECIFY TARGET IN THE FORM: 'DSNAME(MEMBER)'.
00003360/*                 -NO TARGET MEMBER NAME WAS SPECIFIED. RE-ENTER
00003370/*                  TARGET DATASET NAME AND MEMBER NAME.
00003380/*      *  SPECIFY VOLUME-SERIAL NUMBER OR NULL IF CATALOGUED:
00003390/*                 -ALLOWS USER TO BYPASS CATALOG  BY SPECIFYING
00003400/*                  VOLUME SERIAL NUMBER. ENTER EITHER VOLUME-SERIAL
00003410/*                  NUMBER OR NULL LINE TO ACCEPT CATALOG DEFAULT.
00003420/*      *  SOURCE DATASET IS: DSNAME - TARGET DATASET IS: DSNAME
00003430/*         IS THIS CORRECT? Y/N
00003440/*                 -FINAL VERIFICATION MESSAGE. REPLY "Y" TO ALLOW
00003450/*                  UPDATE OF TARGET DATASET. REPLY "N" TO RESPECIFY.
00003460/*      *  UPDATE PROCEEDING.
00003470/*                 -INFORMATIONAL MESSAGE. OCCURS AFTER RESPONDING "Y"
00003480/*                  TO PREVIOUS MESSAGE.
00003490/*      *  DON'T FORGET TO UPDATE THE APPROPRIATE MEMBER OF 'SYS2.HELP'
00003500/*         WITH ONE-LINER POINTER IF THIS IS A NEW MEMBER.
00003510/*                 -INFORMATIONAL MESSAGE.
00003520/*                  MEMBER "TSOCMDS" OR "RDCCMDS" SHOULD BE UPDATED.
00003530/*
00003540/* )ENDHELP
00003550CONTROL NOFLUSH NOMSG
00003560SET &LCC EQ 0
00003570IF &DEBUG NE &STR() THEN CONTROL CONLIST LIST
00003580SET &TARG EQ &SUBSTR(4:&LENGTH(&SYSICMD),&SYSICMD)
00003590REDO: +
00003600WRITE DATASET NAMES WITHOUT QUOTES WILL BE PREFIXED WITH &SYSUID..
00003610WRITENR ENTER SOURCE 'DATASET' OR 'DATASET(MEMBER)'
00003620READ
00003630SET &SOURCE EQ &STR(&SYSDVAL)
00003640SET &N EQ &LENGTH(&SOURCE)
00003650DO WHILE &N GT 1
00003660  IF &SUBSTR(&N,&SOURCE) EQ ) THEN +
00003670  DO
00003680    SET &M EQ &N
00003690    SET &N EQ &N-1
00003700    DO WHILE &SUBSTR(&N,&SOURCE) NE &STR((
00003710      SET &N EQ &N-1
00003720    END
00003730    SET &MEMBER EQ &SUBSTR(&N+1:&M-1,&SOURCE)
00003740    GOTO GETARG
00003750  END
00003760  SET &N EQ &N-1
00003770END
00003780WRITE SEQUENTIAL SOURCE DATASET SPECIFIED OR ERROR SPECIFYING MEMBER.
00003790WRITENR PLEASE ENTER MEMBER NAME IN TARGET DATASET:
00003800READ &MEMBER
00003810GETARG: WRITE ENTER TARGET 'DATASET(MEMBER)' OR NULL TO UPDATE 'SYS2.&TARG(&MEMBER)'
00003820RESPEC: READ
00003830SET &X EQ N
00003840IF &SYSDVAL EQ &STR() THEN +
00003850DO
00003860  SET &TARG EQ 'SYS2.&TARG(&MEMBER)'
00003870  SET &X EQ Y
00003880END
00003890/* ENSURE MEMBER OF TARGET DATASET IS SPECIFIED.*/
00003900ELSE +
00003910DO
00003920  DO
00003930    SET &TARG EQ &STR(&SYSDVAL)
00003940    SET &N EQ &LENGTH(&TARG)
00003950    DO WHILE &N GT 1
00003960      IF &SUBSTR(&N,&TARG) EQ ) THEN +
00003970      DO
00003980        /* RIGHT PAREN FOUND, LOOK FOR LEFT PAREN. */
00003990        SET &N EQ &N-1
00004000        DO WHILE &SUBSTR(&N,&TARG) NE &STR((
00004010          SET &N EQ &N-1
00004020        END
00004030        GOTO MEMFOUND
00004040      END
00004050      SET &N EQ &N-1
00004060    END
00004070  END
00004080WRITE COMMAND "&SYSICMD" INTENDED FOR   L I B R A R Y  UPDATE ONLY.
00004090WRITE PLEASE SPECIFY TARGET IN THE FORM: 'DSNAME(MEMBER)'.
00004100GOTO RESPEC
00004110END
00004120MEMFOUND: +
00004130SET &VOL EQ &STR()
00004140SET &UNIT EQ &STR()
00004150IF &X NE Y THEN +
00004160DO
00004170  WRITENR SPECIFY VOLUME-SERIAL NUMBER OR NULL IF CATALOGUED:
00004180  READ &VOL
00004190  IF &VOL EQ &STR() THEN GOTO FINAL
00004200  SET &VOL EQ &STR(VOLUME(&VOL))
00004210  SET &UNIT EQ UNIT(SYSALLDA)
00004220END
00004230FINAL: +
00004240WRITE SOURCE DATASET IS: &SOURCE
00004250WRITE TARGET DATASET IS: &TARG &VOL
00004260WRITENR IS THIS CORRECT? Y/N
00004270READ &YN
00004280IF &YN NE Y THEN GOTO REDO
00004290ATTN GOTO CLEANUP
00004300WRITE UPDATE PROCEEDING.
00004310FREE F(IN SYSUT1 SYSUT2) ATTR(XX)
00004320ALLOC F(IN) DA(&SOURCE) SHR
00004330ATTR XX LRECL(80) BLKSIZE(3120) DSORG(PS) RECFM(F B)
00004340ALLOC F(SYSUT1) NEW SPACE(2) TRACKS USING(XX)
00004350OPENFILE IN
00004360OPENFILE SYSUT1 OUTPUT
00004370ERROR +
00004380DO
00004390  SET &LCC EQ &LASTCC
00004400  IF &LCC EQ 400 THEN GOTO LAST
00004410  WRITE ABNORMAL END
00004420  ELIST &LCC
00004430  CLOSFILE IN
00004440  CLOSFILE SYSUT1
00004450  FREE F(IN SYSUT1 SYSUT2) ATTR(XX)
00004460  EXIT
00004470END
00004480/*
00004490/*  GET FIRST RECORD, DETERMINE IF CLIST OR PROCEDURE.
00004500/*
00004510SET &BLANK EQ &STR(                                                                                                     )
00004520SET &S EQ 100000100
00004530GET: GETFILE IN
00004540IF &DATATYPE(&SUBSTR(1:8,&IN)) EQ NUM THEN GOTO VARIABLE
00004550ELSE GOTO FIXED
00004560/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
00004570/*
00004580/*  ROUTINE FOR FIXED LENGTH INPUT RECORDS.
00004590/*
00004600/*
00004610/*  FIND FIRST SENTINEL (STARTHELP)
00004620/*
00004630GETF1: GETFILE IN
00004640FIXED: IF &SUBSTR(5:13,&IN) NE STARTHELP THEN GOTO GETF1
00004650/*
00004660/*  SENTINEL FOUND. LOOP WRITING UNTIL ENDHELP FOUND.
00004670/*
00004680GETF2: GETFILE IN
00004690IF &SUBSTR(5:11,&IN) EQ ENDHELP THEN GOTO LAST
00004700/*
00004710/* BUILD NEW OUTPUT RECORD WITH SEQUENCE NUMBER; WRITE RECORD.
00004720/*
00004730SET &SYSUT1 EQ &SUBSTR(4:72,&IN)&STR(   )&SUBSTR(&LENGTH(&S)-7:&LENGTH(&S),&S)
00004740SET &S EQ &S+100
00004750PUTFILE SYSUT1
00004760GOTO GETF2
00004770/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
00004780/*
00004790/*  ROUTINE FOR VARIABLE LENGTH INPUT RECORDS.
00004800/*
00004810/*
00004820/*  FIND FIRST SENTINEL (STARTHELP)
00004830/*
00004840GETV1: GETFILE IN
00004850VARIABLE: IF &LENGTH(&IN) NE 21 THEN GOTO GETV1
00004860IF &SUBSTR(13:21,&IN) NE STARTHELP THEN GOTO GETV1
00004870GETV2: GETFILE IN
00004880/*
00004890/*  SENTINEL FOUND. TEST FOR SPACER RECORDS AND BUILD, IF FOUND.
00004900/*
00004910IF &LENGTH(&IN) LE 11 THEN +
00004920DO
00004930  SET &SYSUT1 EQ &SUBSTR(1:72,&STR(&BLANK))&SUBSTR(&LENGTH(&S)-7:&LENGTH(&S),&S)
00004940  PUTFILE SYSUT1
00004950  SET &S EQ &S+100
00004960  GOTO GETV2
00004970END
00004980/*
00004990/*  LOOK FOR ENDING SENTINEL (ENDHELP)
00005000/*
00005010IF &LENGTH(&IN) EQ 19 THEN +
00005020DO
00005030  IF &SUBSTR(13:19,&IN) EQ ENDHELP THEN GOTO LAST
00005040END
00005050/*
00005060/*  PROCESS DETAIL RECORD INCLUDING NEW SEQUENCE NUMBER
00005070/*
00005080SET &SYSUT1 EQ &SUBSTR(12:&LENGTH(&IN),&IN)&STR(&BLANK)
00005090SET &SYSUT1 EQ &SUBSTR(1:72,&STR(&SYSUT1))&SUBSTR(&LENGTH(&S)-7:&LENGTH(&S),&S)
00005100PUTFILE SYSUT1
00005110SET &S EQ &S+100
00005120GOTO GETV2
00005130/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
00005140LAST: +
00005150ERROR OFF
00005160CLOSFILE IN
00005170CLOSFILE SYSUT1
00005180%UMSG
00005190IF &LCC EQ 400 THEN ALLOC F(SYSUT1) DA(&SOURCE) SH REUSE
00005200ALLOC F(SYSUT2) DA(&TARG) &VOL &UNIT SH REUSE
00005210FREE F(SYSIN SYSPRINT)
00005220ALLOC F(SYSIN) DUMMY
00005230ALLOC F(SYSPRINT) DUMMY
00005240CALL 'SYS1.LINKLIB(IEBGENER)'
00005250WRITE DON'T FORGET TO UPDATE THE APPROPRIATE MEMBER OF SYS2.HELP
00005260WRITE WITH ONE-LINE POINTER IF THIS IS A NEW MEMBER.
00005270CLEANUP: FREE F(SYSUT1 SYSUT2 SYSIN SYSPRINT IN) ATTR(XX)
00005280ALLOC F(SYSIN) DA(*)
00005290ALLOC F(SYSPRINT) DA(*)
