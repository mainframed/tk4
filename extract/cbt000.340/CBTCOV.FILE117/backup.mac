CPY      TITLE '*----NSP025----*  MULTI-UTILITY BACKUP PROGRAM'
         PRINT OFF
         MACRO
&NAME    DCBEXITB
         SPACE 2
***********************************************************************
*        DCBEXITB MACRO                                               *
***********************************************************************
         SPACE 2
&NAME    DS    0F
         DC    X'85'                    SET EXIT INDICATOR
         DC    AL3(*+3)                 ADDRESS
         CLC   62(2,1),82(1)            BLOCKSIZE/LRECL
         BHR   14                       GREATER - EXIT
         MVC   62(2,1),82(1)            SET BLKSIZE=LRECL
         NI    36(1),X'E7'              TURN OFF BLOCKED/STANDARD
         BR    14                       EXIT
         SPACE 2
         MEND
   MACRO
   EQUR
         GBLB  &ACSC1(8)
         GBLA  &ACSC2(4)
         GBLC  &ACSC3(4)
         AIF   (&ACSC1(3)).DID
&ACSC1(3) SETB 1
         SPACE 2
***********************************************************************
*        EQUR MACRO - REGISTER EQUATES                                *
***********************************************************************
         SPACE 2
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE 2
         MEXIT
.DID     MNOTE 0,'REG EQUATES PREVIOUSLY ISSUED, IGNORED'
   MEND
         MACRO
&NAME    GTDATE &ADDR,&SLASH=YES
         LCLB  &SL
         SPACE 2
***********************************************************************
*        GTDATE MACRO - OBTAIN DATE AS MMDDYY OR MM/DD/YY             *
***********************************************************************
         SPACE 2
         AIF   ('&SLASH' NE 'YES').NSLA
&SL      SETB  1
         AGO   .NSLB
.NSLA    AIF   ('&SLASH' EQ 'NO').NSLB
         MNOTE 8,'INVALID SLASH PARAM, NO ASSUMED'
.NSLB    ANOP
&NAME    LA    0,7                      SET UP FOR BOUNDARY CALC
         LA    14,12+7(13)              SET WORK ADDRESS IN SAVE AREA
         OR    14,0
         XR    14,0                     SET TO DOUBLEWORD
         L     1,16                     GET CVT
         MVC   4(4,14),56(1)            MOVE DATE TO WORK
         MVC   29(1,14),5(14)           SAVE
         MVC   8(12,14),GTT&SYSNDX      SET DATE TABLE
         TM    29(14),X'01'             ODD
         BO    GTC&SYSNDX               NOT LEAP
         TM    29(14),X'12'             CHECK DIV BY 4
         BM    GTC&SYSNDX               NOT LEAP
         MVI   9(14),29                 SET LEAP DAYS
GTC&SYSNDX SR  15,15                    SET WORK REG
         SR    1,1
         XC    0(6,14),0(14)            CLEAR FOR CONVERT
         CVB   0,0(14)                  GET DAYS
GTL&SYSNDX IC  15,8(1,14)               GET FACTOR
         LA    1,1(0,1)                 SET MONTH AND NEW FACTOR
         SR    0,15                     REDUCE DAYS
         BP    GTL&SYSNDX               LOOP TO EXHAUST DAYS
         AR    0,15                     RESTORE DAYS
         MH    0,=H'10'                 ADJUST FOR EDITS
         MH    1,=H'1000'               ADJUST MONTH
         AR    1,0                      SET MMDD0
         CVD   1,0(14)                  SET 00MMDD0C IN WORD
         UNPK  20(3,14),5(2,14)         SET MM
         UNPK  22+&SL.(3,14),6(2,14)    SET DD
         UNPK  24+&SL*2(3,14),29(2,14)  SET YY
         AIF   (NOT &SL).CONT
         MVI   22(14),C'/'              SET SLASHES
         MVI   25(14),C'/'
.CONT    AIF   ('&ADDR'(1,1) NE '(').NORG
         MVC   0(6+&SL*2,&ADDR(1)),20(14)
         AGO   .CONT1
.NORG    MVC   &ADDR.(6+&SL*2),20(14)
.CONT1   B     GTX&SYSNDX
         SPACE
*---------------------------------------------------------------------*
*        DATE TABLE INDEX SET                                         *
*---------------------------------------------------------------------*
         SPACE
GTT&SYSNDX DC  AL1(31,28,31,30,31,30,31,31,30,31,30,31)
GTX&SYSNDX DS  0H
         SPACE 2
         MEND
         MACRO
&NAME    INIT  &RG=1,&PC=,&REQ=,&PATCH=,&SAVE=,&PARM=,&PGM=,&ENTRY
         GBLB  &ACSC1(8)
         GBLA  &ACSC2(4)
         GBLC  &ACSC3(4)
         LCLA  &A1,&A2,&A3,&A4
         SPACE 2
***********************************************************************
*        INIT MACRO - PROGRAM ENTRY AND HOUSEKEEPING                  *
***********************************************************************
         SPACE 2
         AIF   (T'&REQ EQ 'O').REGS
         AIF   ('&REQ' EQ 'NO').EREGS
         MNOTE 0,'INVALID ''REQ'' PARAM, NO ASSUMED'
         AGO   .EREGS
.REGS    ANOP
.* ISSUE EQUR MACRO FOR REGISTER EQUATED SYMBOLS
         EQUR
.EREGS   ANOP
.* CHECK PC AND SET APPROPRIATE SWITCH
         AIF   (T'&PC EQ 'O').NOPCX
         AIF   ('&PC' NE 'ARM' AND '&PC' NE 'YES').NOPC
&ACSC1(1) SETB 1
         AGO   .NOPCX
.NOPC    ANOP
         MNOTE 0,'INVALID PC, IGNORED'
.NOPCX   AIF   (T'&ENTRY EQ 'O').NOENTRY
         AIF   ('&ENTRY' EQ 'ENTRY').ENTOK
         MNOTE 4,'INVALID POSITIONAL OPERAND, NO ENTRY GENERATED'
         AGO   .NOENTRY
.ENTOK   ANOP
         ENTRY &NAME
.NOENTRY ANOP
&NAME    DS    0H
*---------------------------------------------------------------------*
*        ISSUE SAVE MACRO                                             *
*---------------------------------------------------------------------*
         SAVE  (14,12),,&SYSECT-&SYSDATE-&SYSTIME
         SPACE 2
*---------------------------------------------------------------------*
*        SAVE PARM, GET SAVE AREA, SET UP BASE REGS                   *
*---------------------------------------------------------------------*
         SPACE 2
         LR    2,1                      SAVE PASSED PARAMS
.NPARM1  AIF   (T'&SAVE EQ 'O').NOSAVE
         USING &NAME,15                 SET UP BASE
&ACSC3(1) SETC '&SAVE'                  SAVE LENGTH
         LA    0,&SAVE+72+&ACSC1(1)*4   SET GETMAIN LENGTH
* ISSUE GETMAIN FOR SAVE AREA AND WORK SPACE
         GETMAIN R,LV=(0)
.CHAIN   ST    13,4(1)                  SAVE BACKWARD POINTER
         ST    1,8(13)                  SAVE FORWARD POINTER
         LR    13,1                     SET SAVE AREA
         DROP  15
         AGO   .ADDRS
.NOSAVE  USING &NAME,15                 SET UP BASE
         CNOP  0,4                      SET ON BOUNDRY
         BAL   1,*+76+&ACSC1(1)*4       SET REG SAVE PLUS WORK AREA
         USING *,13
         DS    18F                      SAVE AREA
         AIF   (NOT &ACSC1(1)).CHAIN
         DS    F                        SPIE SAVE AREA
         AGO   .CHAIN
.ADDRS   AIF   (T'&SAVE EQ 'O').NSAV1
         AIF   (T'&RG NE 'O').OKBASE
         MNOTE 4,'YOU REQUESTED NO BASE REGISTERS, WILL GIVE YOU ONE'
&A1      SETA  1
         AGO   .NOBASE
.OKBASE  ANOP
&A1      SETA  &RG
.NOBASE  ANOP
&A2      SETA  11
&A3      SETA  1
&A4      SETA  0
         BALR  12,0                     SET BASE REG
         USING *,12
.ADRLP   ANOP
&A1      SETA  &A1-1
         AIF   (&A1 EQ 0).EADDR
         LA    &A2,4095(&A2+1)          SET MORE BASES
         USING *+4095*&A3-&A4-4*&A3-&ACSC1(1)*4,&A2
&A3      SETA  &A3+1
&A2      SETA  &A2-1
         AGO   .ADRLP
.NSAV1   ANOP
         AIF   (T'&RG EQ 'O').OKBASE1
         AIF   (T'&RG NE 'O').OKBASE1
         MNOTE 4,'YOU REQUESTED NO BASE REGISTERS, WILL GIVE YOU ONE'
&A1      SETA  1
         AGO   .NOBASE1
.OKBASE1 ANOP
&A1      SETA  &RG
.NOBASE1 ANOP
&A2      SETA  12
&A3      SETA  1
&A4      SETA  82
         AGO   .ADRLP
.EADDR   AIF   (T'&PARM EQ 'O').PATCHS
         SPACE 2
*---------------------------------------------------------------------*
*        SAVE PARM ADDRESS OR INFO                                    *
*---------------------------------------------------------------------*
         SPACE 2
         AIF   ('&PARM(2)' NE 'ADDR').NPARM2
         ST    2,&PARM(1)               SAVE PARM ADDRESS POINTER
         AGO   .PATCHS
.NPARM2  AIF   ('&PARM(2)' NE 'DATA').NPARM3
         L     1,0(0,2)                 GET PARM ADDRESS
         LH    3,0(0,1)                 GET LENGTH
         LA    3,1(0,3)                 SET FOR MVC
         EX    3,*+8                    DO THE MOVE
         B     *+10                     GO AROUND
         MVC   &PARM(1).(0),0(1)        EXECUTED MOVE
         AGO   .PATCHS
.NPARM3  MNOTE 4,'INVALID ''PARM'' PARAM, NO INFO SAVED'
.PATCHS  AIF   ('&PATCH' EQ 'NO').LEAVE
         AIF   ('&PATCH' NE 'YES').LEAVE
         SPACE 2
*---------------------------------------------------------------------*
*        PATCH AREA                                                   *
*---------------------------------------------------------------------*
         B     *+104                    GO AROUND
         NOP   *                        SET UP ADDRESS INDICATOR
         DC    96X'00'                  CLEAR PATCH AREA
.LEAVE   AIF   ('&PC' NE 'YES').NPCYES
         SPACE 2
*---------------------------------------------------------------------*
*        ISSUE SPIEPC MACRO                                           *
*---------------------------------------------------------------------*
         SPACE 2
         SPIEPC
.NPCYES ANOP
         SPACE 2
         AIF   (T'&PGM EQ 'O').OUT
*        ISSUE WTO FOR PROGRAM NAME
         SPACE
         WTO   '&PGM EXECUTING',ROUTCDE=2
         SPACE
.OUT     ANOP
         LR 1,2                         RESTORE PARM INFO
         SPACE 2
         MEND
         MACRO
&NAME    IOBGEN &DCB=,&CCWS=,&ECB=,&FLAGS=
         LCLB  &FLG(3)                  FLAG1 BIT ID
         LCLA  &FCNT,&LCNT
         AIF   (T'&FLAGS EQ 'O').NOFLG
&FCNT    SETA  N'&FLAGS
.LOOP1   ANOP
&LCNT    SETA  1
.LOOP2   AIF   ('&FLAGS(&FCNT)' EQ 'DCCCUN'(&LCNT,2)).SET
.UPLP    ANOP
&LCNT    SETA  &LCNT+2
         AIF   (&LCNT LT 6).LOOP2
&FCNT    SETA  &FCNT-1
         AIF   (&FCNT GT 0).LOOP1
         AGO   .NOFLG
.SET     ANOP
&FLG((&LCNT+1)/2) SETB 1
         AGO   .UPLP
.NOFLG   ANOP
&NAME    DS    0F                       ALIGN
         DC    B'&FLG(1)&FLG(2).0000&FLG(3).0'  FLAG BYTE 1
         DC    AL3(0)                   FILL
         DC    A(&ECB)                  ECB ADDRESS
         DC    2A(0)
         DC    A(&CCWS)                 CCW STRING ADDRESS
         DC    A(&DCB)                  DCB ADDRESS
         DC    2A(0)
         DS    CL8                      MBBCCHHR AREA FOR DA
         MEND
         MACRO
&NAME    LEAVE &SAVE=,&RC=0,&RECREG=
         GBLB  &ACSC1(8)
         GBLA  &ACSC2(4)
         GBLC  &ACSC3(4)
         SPACE 2
***********************************************************************
*        LEAVE MACRO                                                  *
***********************************************************************
         SPACE 2
&NAME    DS    0H
         AIF   (NOT &ACSC1(2)).NOSP1
*---------------------------------------------------------------------*
*        RESET SPIE ROUTINE                                           *
*---------------------------------------------------------------------*
         SPACE 2
         L     1,&ACSC3(1)+72(13)       GET SAVED ADDRESS
* ISSUE SPIE MACRO
         SPIE  MF=(E,(1))
         SPACE 2
.NOSP1   ANOP
*---------------------------------------------------------------------*
*        RESET SAVE AREA AND EXIT                                     *
*---------------------------------------------------------------------*
         SPACE 2
         AIF   (T'&SAVE EQ 'O').NSAV
         LR    1,13                     SET FOR RELEASE
.NSAV    L     13,4(13)                 UNCHAIN SAVE AREA
         AIF   (T'&SAVE EQ 'O').NSAV1
* ISSUE FREEMAIN MACRO
         LA    0,&SAVE+72+&ACSC1(1)*4   GET LENGTH OF AREA
         FREEMAIN R,LV=(0),A=(1)
.NSAV1   AIF   (T'&RECREG EQ 'O').RET
         AIF   ('&RECREG'(1,1) EQ '(').RECOK
         MNOTE 4,'INVALID RECREG, NOT REGISTER NOTATION, IGNORED'
         AGO   .RET
.RECOK   ST    &RECREG(1),24(13)        SAVE RECREG IN R1 AREA
.RET     RETURN (14,12),T,RC=&RC
         SPACE 2
         MEND
         MACRO
&NAME    PRNT  &OVF=,&CNTR=,&RESET=,&LINK=,&PAGE=,&HEADR=,             X
               &HLIST=,&EXIT=,&ID=,&DCB=,&CLEAR=NO
         LCLA  &LA3,&LA4,&LA5
         LCLB  &B1,&EBR
         LCLC  &LC1,&LC2
         AIF   (T'&NAME NE 'O' AND K'&NAME LT 8).NAMOK
         MNOTE 9,'MISSING OR LONG NAME FIELD, MACRO IGNORED.'
         AGO   .ENDIT
.NAMOK   ANOP
         SPACE
***********************************************************************
*        PRINT SUBROUTINE                                             *
         CNOP  0,4
&NAME    EQU   *
&LA3     SETA  N'&HEADR
&LA4     SETA  1
         AIF   (T'&CNTR  NE 'O').NO1
         MNOTE 9,'CNTR= OMITTED, MACRO NOT ASSEMBLED'
         AGO   .ENDIT
.NO1     AIF   (T'&LINK  NE 'O').NO2
         MNOTE 9,'LINK= OMITTED, MACRO NOT ASSEMBLED'
         AGO   .ENDIT
.NO2     AIF   (T'&RESET NE 'O').NO2X
         MNOTE *,'RESET= OMITTED, DEFAULT=1'
&LC1     SETC  '1'
         AGO   .NO3
.NO2X    ANOP
&LC1     SETC  '&RESET'
.NO3     AIF   (T'&OVF NE 'O').NO3X
         MNOTE *,'OVF= OMITTED, DEFAULT=56'
&LC2     SETC  '56'
         AGO   .NO4
.NO3X    ANOP
&LC2     SETC  '&OVF'
.NO4     AIF   (T'&HEADR EQ 'O' AND T'&HLIST EQ 'O').NO4A
         CP    &CNTR,=P'&LC2'           CHECK FOR OVERFLOW
         AGO   .NO4B
.NO4A    ANOP
         MVC   PR&SYSNDX+1(1),CTRL&ID   SAVE CONTROL CHARACTER
         CP    &CNTR,=P'&LC2'          CHECK FOR OVERFLOW
.NO4B    BH    PH&SYSNDX               YES, GO TO OVERFLOW ROUTINE
&NAME.A  LA    0,CTRL&ID                POINT REG 0 TO PRINT LINE
PI&SYSNDX EQU  *
         AIF   (T'&DCB EQ 'O').DFLTDCB
         AIF   (N'&DCB GT 1).DCBFULL
         AIF   ('&DCB'(1,1) EQ '(').DCBREG
         LA    1,&DCB                   LOAD DCB ADDRESS INTO REG 1
         ST    1,&NAME.D                SAVE ADDRESS IN FULLWORD
         AGO   .NEXT1
.DCBFULL ANOP
         MVC   &NAME.D,&DCB(1)          MOVE DCB ADDRESS TO SAVE AREA
         AGO   .NEXT1
.DCBREG  ANOP
         ST    &DCB,&NAME.D             SAVE ADDRESS IN FULL WORD
         AGO   .NEXT1
.DFLTDCB ANOP
         LA    1,IJSYSLS                LOAD DCB ADDRESS
         ST    1,&NAME.D                SAVE ADDRESS IN FULLWORD
.NEXT1   ANOP
         L     1,&NAME.D                POINT REG 1 TO DCB
.ERRET   ANOP
         PUT   (1),(0)
.ARND1   ANOP
         AIF   (T'&HEADR NE 'O' OR T'&HLIST NE 'O').NO4C
PR&SYSNDX MVI  CTRL&ID,X'00'            RESTORE CONTROL CHARACTER
.NO4C    ANOP
         AIF   ('&CLEAR' NE 'YES').NO4D
&NAME.C  NOPR  &LINK                    CLEAR BRANCH SWITCH
         MVI   CTRL&ID,C' '             CLEAR OUTPUT PRINT LINE
         MVC   P0&ID,CTRL&ID
.NO4D    ANOP
         BR    &LINK                    RETURN VIA LINK REGISTER
PH&SYSNDX ZAP  &CNTR,=P'&LC1'          RESET LINE COUNTER
         AIF   ('&CLEAR' NE 'YES').NO4E
         AIF   (T'&HEADR EQ 'O' AND T'&HLIST EQ 'O').NO4E
         OI    &NAME.C+1,X'F0'          SET CLEAR BRANCH SWITCH
.NO4E    ANOP
         AIF   (T'&HEADR NE 'O' OR T'&HLIST NE 'O').NO5
         MVI   CTRL&ID,C'1'             SKIP TO CHANNEL ONE
         B     &NAME.A
         AGO   .NO10
.NO5     ST    &LINK,PS&SYSNDX          STORE RETURN ADDRESS
         AIF   (T'&EXIT EQ 'O').NOEX1
         BAL   &LINK,PXT&SYSNDX         BRANCH TO EXIT ROUTINE
.NOEX1   ANOP
.NO50    AIF   (T'&PAGE EQ 'O').NO5A
         AIF   (N'&PAGE NE 2).NO8
         AIF   (K'&PAGE(2) GT 1).NO8
&B1      SETB  1
&LA5     SETA  1
.X1      AIF   ('&PAGE(2)' EQ '13579'(&LA5,1)).X2
         AIF   (&LA5 EQ 5).X11
&LA5     SETA  &LA5+1
         AGO   .X1
.X11     ANOP
         AP    &NAME.P,=P'10'
         AGO   .X3
.X2      ANOP
         AP    &NAME.P,=P'1'
.X3      ANOP
         MVC   &PAGE(1)(&PAGE(2)+1),MS&SYSNDX
         ED    &PAGE(1)(&PAGE(2)+1),&NAME.P
.NO5A    AIF   (T'&HEADR EQ 'O').NO5B
         LA    0,&HEADR(&LA4)
.EBHR    ANOP
         BAL   &LINK,PI&SYSNDX          BRANCH TO PRINT
         AIF   (&LA3 EQ &LA4).NO5B
&LA4     SETA  &LA4+1
         AGO   .NO5A
.NO5B    AIF   (T'&HLIST EQ 'O').NO6
         ST    2,PS&SYSNDX+4
         LA    2,&HLIST
PL&SYSNDX CLI  0(2),X'FF'
         BE    PX&SYSNDX
         L     0,0(2)
.EBLR    ANOP
         BAL   &LINK,PI&SYSNDX
         AP    &CNTR,=P'1'              INCREASE LINE COUNTER
         LA    2,4(2)
         B     PL&SYSNDX
PX&SYSNDX L    2,PS&SYSNDX+4
.NO6     L     &LINK,PS&SYSNDX          LOAD RETURN ADDRESS
         AIF   ('&CLEAR' NE 'YES').NO7
         NI    &NAME.C+1,X'0F'          RESET CLEAR BRANCH SWITCH
.NO7     B     &NAME.A                  BRANCH AND PRINT DETAIL
PS&SYSNDX DS   F
         AIF   (T'&HLIST EQ 'O').NO7A
         DS    F
.NO7A    AIF   (NOT &B1).NO10
&LA5     SETA  &PAGE(2)/2+1
&NAME.P  DC    PL&LA5'0'
&LA5     SETA  &PAGE(2)
MS&SYSNDX DC   C' '
         DC    &LA5.X'20'
         AGO   .NO10
.NO8     ANOP
         MNOTE *,'INVALID PAGE PARAMS, IGNORED'
         AGO   .NO5A
.NO10    ANOP
&NAME.D  DC    F'0'
PXT&SYSNDX DS  0H
.ENDIT   ANOP
*                                                                     *
***********************************************************************
         SPACE
         MEND
         MACRO
         PRTAREA &A,&EBR=NO,&ID=
         LCLA  &B,&C
         SPACE
***********************************************************************
*        PRTAREA - GENERATE PRINT AREA                                *
         SPACE
         AIF   ('EBR' EQ 'YES').A1A
         AIF   (T'&A EQ 'N').A2
.A1      ANOP
         MNOTE *,'INPROPER OR MISSING OPERAND, 132 ASSUMED.'
&B       SETA  132
         AGO   .A3
.A1A     AIF   (T'&A EQ 'O').A1
.A2      AIF   (&A GT 132).A1
&B       SETA  &A
.A3      ANOP
         AIF   ('&EBR' NE 'YES').A31
EBRC1&ID DS    CL1                      EBR POS 1
EBRC2&ID DS    CL1                      EBR POS 2
.A31     ANOP
CTRL&ID  DC    C' '                     CONTROL POSITION
P0&ID    DS    0CL&B                    CLEARING POSITION
.A4      ANOP
&C       SETA  &C+1
         AIF   (&C GT &B).A5
P&C&ID   DC    C' '
         AGO   .A4
.A5      ANOP
         AIF   ('&EBR' NE 'YES').A51
EBRC3&ID DS    CL1                      EBR POS 3
.A51     ANOP
*                                                                     *
***********************************************************************
         SPACE
         MEND
         MACRO
&N       SORT  &TAB,&SEQ=H,&KEY=
         LCLC  &CL1,&CL2,&TL1,&TL2,&DISP
&N       DS    0H
         AIF   ('&TAB'(1,1) EQ '(').REG
&TL1     SETC  'L'''
&TL2     SETC  '&TAB'
         AGO   .LOK
.REG     ANOP
         AIF   (T'&TAB(2) NE 'O').ROK
         MNOTE 0,'NO ENTRY LENGTH / GENERATION TERMINATED'
         MEXIT
.ROK     ANOP
&TL1     SETC  '&TAB(2)'
&TL2     SETC  ''
.LOK     ANOP
         AIF   (T'&KEY EQ 'O').DKEY
&DISP    SETC  '&KEY(1)'
         AIF   (T'&KEY(2) EQ 'O').DLEN
&CL1     SETC  '&KEY(2)'
&CL2     SETC  ''
         AGO   .COK
.DKEY    ANOP
&DISP    SETC  '0'
.DLEN    ANOP
&CL1     SETC  '&TL1'
&CL2     SETC  '&TL2'
.COK     ANOP
*GJS* SORT MACRO   CHANGE LEVEL 0-0
         AIF   (T'&TAB(2) EQ 'O').LA
         AIF   ('&TAB(1)' EQ '1').R1
         LR    1,&TAB(1)
         AGO   .R1
.LA      ANOP
         LA    1,&TAB
.R1      ANOP
ST#1&SYSNDX LR 14,1
         LA    15,&TL1&TL2.(1)
         CLI   0(15),X'FF'
         BE    ST#5&SYSNDX
ST#2&SYSNDX CLC &DISP.(&CL1&CL2,14),&DISP.(15)
         BN&SEQ ST#3&SYSNDX
         LR    14,15
ST#3&SYSNDX LA 15,&TL1&TL2.(15)
         CLI   0(15),X'FF'
         BNE   ST#2&SYSNDX
         CR    14,1
         BNH   ST#4&SYSNDX
         XC    0(&TL1&TL2,1),0(14)
         XC    0(&TL1&TL2,14),0(1)
         EX    0,*-12
ST#4&SYSNDX LA 1,&TL1&TL2.(1)
         B     ST#1&SYSNDX
ST#5&SYSNDX EQU *
*
         MEND
         MACRO
&NAME    URGEN &TYPE,&EOD=
         SPACE 2
***********************************************************************
*        URGEN MACRO                                                  *
***********************************************************************
         SPACE 2
         AIF   ('&TYPE' EQ 'READ').RDR
         AIF   ('&TYPE' EQ 'PUNCH').PCHA
         AIF   ('&TYPE' EQ 'PRINT').PRT
         AIF   ('&TYPE' EQ 'PUNCH80').PCH80
         AIF   ('&TYPE' EQ 'PUNCH81').PCH
         MNOTE 8,'INVALID GEN TYPE, MACRO TERMINATED'
         MEXIT
.PRT     ANOP
&NAME    DCB   DDNAME=&NAME,MACRF=PM,DSORG=PS,                         X
               LRECL=133,RECFM=FBA,EXLST=URGN&SYSNDX
         SPACE 2
URGN&SYSNDX DCBEXITB
         SPACE 2
         MEXIT
.RDR     ANOP
         AIF   (T'&EOD NE 'O').RDRA
         MNOTE 8,'MISSING EOD PARAMETER, MACRO TERMINATED'
         MEXIT
.RDRA    ANOP
&NAME    DCB   DSORG=PS,MACRF=GM,DDNAME=&NAME,EODAD=&EOD
         SPACE 2
         MEXIT
.PCH80   ANOP
&NAME    DCB   DDNAME=&NAME,DSORG=PS,MACRF=PM,                         X
               LRECL=80,RECFM=FB,EXLST=URGN&SYSNDX
         SPACE 2
URGN&SYSNDX DCBEXITB
         SPACE 2
         MEXIT
.PCHA    MNOTE 0,'PUNCH 81 BYTE WITH ASA ASSUMED.'
.PCH     ANOP
&NAME    DCB   DDNAME=&NAME,DSORG=PS,MACRF=PM,                         X
               LRECL=81,RECFM=FBA,EXLST=URGN&SYSNDX
         SPACE 2
URGN&SYSNDX DCBEXITB
         SPACE 2
         MEND
         GBLB  &ACSC1(8)
         GBLA  &ACSC2(4)
         GBLC  &ACSC3(4)
         PRINT ON
***********************************************************************
*                                                                     *
*        M E T H O D   O F   O P E R A T I O N                        *
*                                                                     *
*        THIS ROUTINE IS A DRIVER FOR THE IEBCOPY UNLOAD              *
*        FUNCTION.  ITS PURPOSE IS TO AVOID ABENDS AND JCL            *
*        FAILURES DUE TO MISSING DATASETS.                            *
*                                                                     *
*        THE DATASETS TO BE BACKED UP WILL BE IDENTIFIED IN           *
*        A CONTROL FILE WHICH WILL BE READ BY THE PROGRAM.            *
*        IN ADDITION, A STATUS LISTING WILL ALSO BE PRODUCED.         *
*                                                                     *
*        JCL WILL MEARLY ALLOCATE THE DEVICES AS REQUIRED             *
*        SO THAT THIS DRIVER WILL BE RESPONSIBLE FOR                  *
*        CHANGING THE DATASET NAMES AND POINTERS.                     *
*                                                                     *
*        AFTER THE DATASET IS IDENTIFIED AND LOCATED, THE             *
*        APPROPRIATE TIOT ENTRY IS FOUND AND THE JFCB IS              *
*        MODIFIED ACCORDING TO THE TAPE AND DISK REQUIREMENTS.        *
*        THIS WILL BE VERIFIED AFTER IEBCOPY HAS BEEN RUN             *
*        SO THAT IF THERE IS A TAPE OVERRUN, THE FILE                 *
*        WILL BE RECOPIED  TO THE TAPE AGAIN.                         *
*                                                                     *
***********************************************************************
NSP025   START 0
         SPACE
SSS      INIT  PGM=NSP025,RG=2
         SPACE
         ST    R1,PARMAD                SAVE FOR IEBCOPY
         SPACE
         EXTRACT $TIOT,FIELDS=TIOT
         SPACE
         LA    R2,JFCBD1                POINT TO MODEL AREA
         USING JFCBDSNM,R2
         SPACE
         OI    JFCBTSDM,JFCNDCB+JFCPAT  SET NO DCB AND PAT OK
         MVI   JFCBLTYP,SR              SET STD LABELS
         OI    JFCBMASK+4,X'80'         FORCE WRITE BACK
         MVI   JFCBIND2,JFCSHARE+JFCOLD IND OLD/SHARE
         MVI   JFCBNVOL,1               SET ONLY ONE VOL
         MVI   JFCBVLCT,1               AND IN SECOND PLACE
         SPACE 2
         SPACE
**00000000000000000000000000000000000000000000000000000000000000000000*
*        CHECK THAT OUTPUT FILE IS A TAPE AND IS PROPER               *
**00000000000000000000000000000000000000000000000000000000000000000000*
         SPACE
         RDJFCB TAPE                    READ JFCB
         LA    R2,JFCBT1                POINT FOR ADDRESSABILITY
         USING JFCBDSNM,R2              ADDRESS
         LH    R1,JFCBFLSQ              GET SEQ NUMBER
         LTR   R1,R1                    IS IT HERE?
         BZ    NEWA                     NO, START AT BEGIN
         BCTR  R1,0                     REDUCE FOR ROUTINES
         STH   R1,FILENO                SET IN CONTROL AREA
         DROP  R2
         SPACE
***********************************************************************
*        POINT TO NEW AREA FOR JFCB                                   *
***********************************************************************
         SPACE
NEWA     EQU   *
         BAL   R10,CKTIOT               CHECK FOR TAPE
         SPACE
         USING UCB,R1
         SPACE
         MVC   CAM2TYP,UCBTYP           SET DEVICE TYPE
         SPACE
         DROP  R1
         SPACE
         MVC   DDNAME(2),=C'DD'         RESET DD PREFIX
         MVI   FTYPE,X'20'              SET UCB TYPE
         LA    R1,JFCBT2                AREA
         STCM  R1,B'0111',EXTAPE+1      SET IN LIST
*000000000000000000000000000000000000000000000000000000000000000000000*
*        OPEN OUR CONTROL DATASET                                     *
*000000000000000000000000000000000000000000000000000000000000000000000*
         SPACE
         GTDATE HD1+90
         OPEN (OUTPUT,OUTPUT,INPUT)     OPEN FILES
         TITLE 'IEBCOPY INVOCATION PROGRAM'
         SPACE
G1       EQU   *
***********************************************************************
*        WE WILL NOW READ A CONTROL STATEMENT                         *
*        FROM THE INPUT FILE.  IT WILL HAVE THE NAME OF THE           *
*        DATASET TO BE BACKED UP TO TAPE.                             *
***********************************************************************
         SPACE
         NI    SW1,255-RECAT            RESET RECAT BIT
         MVC   VERB,BLANKS              BLANK VERB
         MVC   INAREA,BLANKS            BLANK NAME
         MVC   HOLDNAME,BLANKS          BLANK NAME
         MVI   AUTO,C'*'                INDICATE MANUAL
         TM    SW1,VSA1                 IS VSAM IN PROGRESS?
         BO    DVSA                     YES, CONTINUE
         GET   INPUT,IOAREA             GET IT
         LA    R2,INAREA                POINT TO RECEIVE
         LA    R3,IOAREA                POINT TO STATEMENT
         LA    R4,68                    MAX LENGTH
         CLI   IOAREA,C' '              ANY VERB
         BE    NOVRB                    NO
         MVC   VERB,IOAREA              SET IT
         CLC   VERB,=C'VSAM '           IS IT VSAM CALL?
         BE    AMSIT                    YES, DO IT NOW
         CLI   IOAREA+4,C' '            ALL OK?
         BNE   TERR                     INVALID VERB
         LA    R3,IOAREA+4              POINT PAST IT
NOVRB    EQU   *
         CLI   0(R3),C' '               ANY NAME YET?
         BNE   FND1                     FOUND IT
         LA    R3,1(R3)
         BCT   R4,NOVRB                 TRY AGAIN
         B     NAMERR                   TOO BAD
         SPACE
FND1     EQU   *
         CH    R4,=H'44'                ENOUGH?
         BNH   FND2                     NOT MAX
         LA    R4,44                    LOAD IT
FND2     EQU   *
         MVC   0(1,R2),0(R3)            MOVE A CHAR
         LA    R3,1(R3)                 NEXT INPUT
         LA    R2,1(R2)                 NEXT OUTPUT
         CLI   0(R3),C' '               END?
         BE    FND3                     YES
         CLI   0(R3),C','               IS IT DELIM?
         BE    FND3                     YES
         BCT   R4,FND2                  MOVE MORE
         B     NAMERR                   TOO BAD
         SPACE
FND3     EQU   *
         MVC   HOLDNAME,INAREA          SAVE ORIGINAL NAME
         SPACE
         CLI   0(R3),C' '               TRUE END?
         BE    CKCAT                    YES, CHECK CATALOG
         CLC   =C',RECAT',0(R3)         RECAT?
         BNE   CATERR                   NO, ERROR
         OI    SW1,RECAT                SET RECAT BIT
         SPACE
CKCAT    EQU   *
         LOCATE CAM1                    READ THE CATALOG
         LTR   R15,R15                  IS IT OK?
         BNZ   LOCERR                   TOO BAD, CAN'T FIND IT
         CLI   CAMVNUM,1                ONE VOL?
         BNE   CNERR                    TOO BAD
         CLI   CAMTYPE+2,X'20'          DASD?
         BNE   DASDERR                  TOO BAD
         MVC   DDVOLS(6),CAMVOL         SET VOLSER ID
         MVC   P55(6),CAMVOL            PLACE FOR PRINTING
         OBTAIN OBT1                    READ THE DSCB
         LTR   R15,R15                  IS ALL OK?
         BNZ   OBERR                    NO, TOO BAD
         SPACE
         CLI   VERB,C' '                ANY VERB
         BE    NOVERB                   NO, CHECK AUTO
         SPACE
         BAL   R10,CKTIOT               CHECK TIOT
         SPACE
         USING UCB,R1                   ADDRESS UCB
         SPACE
         CLC   UCBVOLI,DDVOLS           CHEC IT OUT
         BNE   IDERR                    NOT CORRECT
         MVC   CAM3TYP,UCBTYP           SET DASD TYPE CODE (SCR)
         SPACE
         DROP  R1
         SPACE
         CLC   VERB,=C'MOVE'            VERB CHECK
         BE    MOVEIT
         CLC   VERB,=C'GENR'
         BE    GENERIT
         CLC   VERB,=C'COPY'
         BE    COPYIT
         B     TERR                     TOO BAD
         SPACE
NOVERB   EQU   *
         LA    R2,DSCBAREA              POINT TO DSCB
         USING DS1FMTID,R2              ADDRESS
         MVI   AUTO,C' '                INDICATE AUTO
         TM    DS1DSORG+1,VSAM          IS IT VSAM
         BO    ORGERR                   TOO BAD
         BAL   R10,CKTIOT               CHECK OUT, NOT VSAM
         USING UCB,R1
         CLC   UCBVOLI,DDVOLS           CHECK OUT
         BNE   IDERR                    TOO BAD
         SPACE
         DROP  R1
         SPACE
         LA    R2,DSCBAREA              RELOAD IT
         TM    DS1DSORG,PO              IS IT PARTITIONED?
         BO    COPYIT                   YES
         TM    DS1DSORG,PS              IS IT SEQUENTIAL?
         BO    GENERIT                  YES, GENER
         B     MOVEIT                   THEN IEHMOVE
         SPACE 2
COPYIT   EQU   *
         MVC   VERB,=C'COPY'            SET VERB CODE
         LA    R2,DSCBAREA              POINT TO DSCB
         USING DS1FMTID,R2
         TM    DS1DSORG,PO              IS IT PO?
         BNO   ORGERR                   ERROR
         MVC   LINKPRMS,=A(CPYPARMS)    SET IN LINK
         MVC   LINKNAME,=CL8'IEBCOPY'   SET NAME OF ROUTINE
         MVC   CTRLAD,=A(CPYCTRL)       SET CONTROL CARD
         B     SETGO                    GO SET IT
MOVEIT   EQU   *
         MVC   VERB,=C'MOVE'            SET MOVE CODE
         CLI   VOLSERT,C' '             ANY VOLSER YET?
         BNE   MOVEITA                  YES, DON'T HAVE TO GET IT
         OPEN  (TAPE,OUTPUT)            BETTER GET IT
         CLOSE TAPE
         RDJFCB TAPE                    GET CONTROL
         LA    R2,JFCBT2                POINT
         USING JFCBDSNM,R2              ADDRESS IT
         MVC   VOLSERT,JFCBVOLS         GET IT
         DROP  R2
         SPACE
MOVEITA  EQU   *
         MVC   MVSR,VOLSERT             GET VOLSER
         MVC   LINKPRMS,=A(MOVPARMS)    SET MOVE
         MVC   LINKNAME,=CL8'IEHMOVE'   PROCESS
         MVC   CTRLAD,=A(MOVCTRL)       CONTROL INFO
         B     SETGO                    CONTINUE
         SPACE 2
GENERIT  EQU   *
         MVC   VERB,=C'GENR'            SET CODE
         LA    R2,DSCBAREA              POINT FOR CHECK
         USING DS1FMTID,R2
         TM    DS1DSORG,PS              IS IT SEQ
         BNO   ORGERR                   TOO BAD
         DROP  R2
         MVC   LINKPRMS,=A(GENPARMS)
         MVC   LINKNAME,=CL8'IEBGENER'
         B     SETGO                    CONTINUE
         SPACE 2
AMSIT    EQU   *
         TM    SW1,VSA2                 ALREADY DONE?
         BO    G1                       YES, SKIP IT
         MVC   LINKPRMS,=A(VSAPARMS)
         MVC   LINKNAME,=CL8'IDCAMS'
         MVC   CTRLAD,=A(VSACTL)
         L     R2,$TIOT                 POINT TO TIOT
         LA    R2,24(R2)                POINT TO THE DD'S
AMSITA   EQU   *
         CLI   0(R2),0                  END?
         BE    AMSITC                   EXIT
         CLC   4(4,R2),=C'VSAM '        IS IT PREFIX?
         BNE   AMSITB                   YES
         LA    R1,DISK                  POINT
         USING IHADCB,R1
         MVC   DCBDDNAM,4(R2)           SET NAME
         MVC   AMSD1,4(R2)           SET NAME
         ST    R2,HOLDTIO               SAVE POINTER
         OI    SW1,VSA1                 SET IN PROGRESS
         DROP  R1
         RDJFCB DISK                    READ JFCB
         LA    R1,JFCBD2                POINT TO IT
         USING JFCBDSNM,R1
         MVC   HOLDNAME,JFCBDSNM        SET NAME
         MVC   INAREA,JFCBDSNM          SET NAME
         MVC   DDVOLS,BLANKS            BLANK PRINTING USE
         MVC   VERB,=C'VSAM'            SET VSAM CONTROL
         MVI   AUTO,C' '                INDICATE AUTO
         TM    JFCDSORG+1,VSAM          IS IT VSAM?
         BNO   ORGERR                   TOO BAD
         DROP  R1
         B     SETGO                    CONTINUE
DVSA     EQU   *
         L     R2,HOLDTIO               RELOAD TIOT POINTER
AMSITB   EQU   *
         SR    R1,R1                    CLEAR
         IC    R1,0(R2)                 LENGTH
         LA    R2,0(R1,R2)              NEXT ONE
         B     AMSITA                   CONT
         SPACE
AMSITC   EQU   *
         NI    SW1,255-VSA1             RESET IT
         OI    SW1,VSA2                 SET DONE
         TM    SW1,EOFJB                IS IT END?
         BO    EOFIN                    YES
         B     G1                       GO GET MORE
         SPACE
***********************************************************************
*        NOW HAVE VALIDATED THAT ALL IS OK, SET UP FOR FILE COPY      *
***********************************************************************
         SPACE
SETGO    EQU   *
         LH    R1,FILENO                GET LAST OUTPUT FILE NUMBER
         LA    R1,1(R1)                 NEXT ONE
         STH   R1,FILENO                RESET IT
         CVD   R1,DBL                   GET SEQ
         UNPK  MVFL,DBL+6(2)
         OI    MVFL+2,X'F0'             SIGN IT
         MVC   JFCBT2(176),JFCBT1       SET MODELS
         MVC   JFCBD2(176),JFCBD1       AND DISK
         LA    R2,JFCBD2
         USING JFCBDSNM,R2              ADDRESS IT
         MVC   JFCBDSNM,INAREA          COPY DD NAME
         MVC   JFCBVOLS(6),DDVOLS       SET VOLSER
         LA    R2,JFCBT2                NOW SET UP TAPE
         MVC   JFCBDSNM,INAREA          SET DS NAME
         MVC   JFCBFLSQ,FILENO          SET FILE NUMBER
         OI    JFCBMASK+4,X'80'         WRITE BACK
         CLI   VERB,C'V'                VSAM?
         BNE   NODCBAT                  NO, NO NEED FOR DCB
         MVC   JFCBLKSI,H8192           SET BLOCKSIZE
         MVC   JFCLRECL,H8100           SET LRECL
         MVI   JFCRECFM,VB              SET VARIABLE BLOCKED
         B     OPSYSN                   GO OPEN UP
NODCBAT  EQU   *
         CLI   VERB,C'M'                IS IT MOVE?
         BE    NODCBATX                 YES, DO NOT MODIFY
         CLI   VERB,C'C'                IS IT COPY?
         BE    NODCBATB                 YES, ONLY BLOCK CHANGE
         LA    R1,DSCBAREA              POINT TO DSCB
         USING DS1FMTID,R1              ADDRESS IT
         MVC   JFCRECFM,DS1RECFM        SET RECORD FORMAT
         MVC   JFCLRECL,DS1LRECL        SET LRECL EQUAL
         MVC   JFCBLKSI,DS1BLKL         SET BLOCKSIZE
         DROP  R1
         TM    JFCRECFM,JFCUND          IS IT UNDEFINDE?
         BO    NODCBATX                 YES, SET SAME ONE
         OI    JFCRECFM,JFCRFB          SET BLOCKED
         TM    JFCRECFM,JFCVAR          IS IT VARIABLE
         BO    NODCBATB                 YES, SET MAX BLOCK
         CLC   JFCLRECL,H0              NO LRECL?
         BNE   NODCBATA                 LRECL PRESENT
         MVC   JFCLRECL,JFCBLKSI        SET LRECL=BLKSIZE
NODCBATA EQU   *
         LH    R14,MAXBLOCK             GET BLOCKSIZE
         SRDL  R14,32                   SET TO DIVIDE
         LH    R0,JFCLRECL              GET LRECL
         DR    R14,R0                   SET UP BLOCKSIZE
         MR    R14,R0
         STH   R15,JFCBLKSI             SET IN BLOCK SIZE
         B     NODCBATX                 EXIT
NODCBATB EQU   *
         MVC   JFCBLKSI,MAXBLOCK        SET MAX BLOCKSIZE
NODCBATX EQU   *
         DROP  R2
         SPACE
         LA    R1,DISK
         USING IHADCB,R1
         MVC   DCBDDNAM,DDNAME          SET NEW NAME
         MVC   GENR1,DDNAME             SET FOR GENER
         DROP  R1
         SPACE
***********************************************************************
*        NOW READY TO RESET JFCB'S                                    *
***********************************************************************
         CLI   VERB,C'G'                GENER?
         BE    NOCTL                    YES, DUMMY INPUT
OPSYSN   EQU   *
         OPEN  (SYSIN,OUTPUT)           OPEN IEBCOPY CONTROL
         L     R0,CTRLAD                GET DATA
         PUT   SYSIN,(0)
         CLOSE SYSIN                    RESET FILE
         SPACE
NOCTL    EQU   *
         SPACE
         CLI   VERB,C'M'                MOVE?
         BE    ENQIT                    YES, NO JFCB CHANGE
         OPEN  (TAPE,OUTPUT),TYPE=J
         CLOSE TAPE
         CLI   VERB,C'V'                VSAM?
         BE    ENQIT                    YES, NO DISK MODS
         OPEN  (DISK),TYPE=J
         CLOSE DISK
         SPACE
***********************************************************************
*        ENQ SHARE ON THE FILE                                        *
***********************************************************************
         SPACE
ENQIT    EQU   *
         LA    R1,INAREA+44             LAST CHARACTER
         LA    R2,45                    LENGTH
LENSRCH  EQU   *
         BCTR  R2,0                     REDUCE LENGTH
         BCTR  R1,0                     POINT BACK ONE
         CLI   0(R1),C' '               IS IT BLANK?
         BE    LENSRCH                  YES
         STC   R2,RNAME                 SET NAME LENGTH
         EX    R2,MVMS1                 MOVE DSNAME TO MESSAGE
         LA    R2,GOMSL(R2)             ACCOUNT FOR LENGTH
         STH   R2,GOMSG                 SET IN MSG
         LA    R1,GOMSG(R2)             POINT FOR CODES
         MVC   0(4,R1),OMCODES          SET DESC/ROUTCDE
         ENQ   (QNAME,RNAME,S,0,SYSTEM),RET=USE
         LTR   R14,R15                  IS IT OK?
         BZ    LINKIT                   YES
         SR    R15,R15                  GET RETURN CODE
         IC    R15,3(R14)               GET IT
         B     EQBR(R15)                CHECK RESULTS
EQBR     B     LINKIT                0  ALL OK
         B     ENQERR                4  CANNOT HAVE IT
         B     HAVE                  8  ALREADY HAVE IT
         B     NOENQ                 12 PERM UNAVAILABLE
         B     LINKIT                16 NOT USED
         B     NOENQ                    SHOULD NOT HAPPEN, NOT ASYNC
         SPACE
HAVE     EQU   *
         MVI   RNAME,0                  SET NO DEQ, OWN IT
         B     LINKIT                   CONTINUE
         SPACE 2
***********************************************************************
*        NOW MUST INVOKE IEBCOPY                                      *
***********************************************************************
         SPACE
LINKIT   EQU   *
         WTO   MF=(E,GOMSG)             LET OPERATOR KNOW
         L     R1,LINKPRMS              GET PARAMS
         LINK  EPLOC=LINKNAME
         ST    R15,RETSAVE              SAVE IT
         CLI   RNAME,0                  DEQ NEEDED?
         BE    NODQ                     NO
         DEQ   (QNAME,RNAME,0,SYSTEM)
NODQ     EQU   *
         CLI   VERB,C'M'                MOVE?
         BNE   CKRET                    NO
         MVC   MTEST,RETSAVE+3          SAVE RETURN CODE
         CLI   MTEST,4                  IS IT 4
         BNE   MOCPY                    THEN COPY SYSPRINT
         MVI   RETSAVE+3,0              SET GOOD RETURN CODE
MOCPY    EQU   *
         OPEN (SYSPRINT,OUTPUT,MOVPRINT)
G2       EQU   *
         GET   MOVPRINT                 GET INPUT REC
         LR    R0,R1                    SET FOR OUTPUT
         CLI   MTEST,4                  SHOULD WE LOOK?
         BNE   PUT1                     NO
         CLC   =C'IEH',0(R1)            MESSAGE?
         BNE   PUT1                     NO
         CLC   =C'IEH411',0(R1)         IS IT THIS?
         BE    PUT1                     YES
         CLC   =C'IEH417',0(R1)         THIS ONE?
         BE    PUT1                     YES
         MVI   RETSAVE+3,8              SET BAD
         MVI   MTEST,8                  SET OFF
PUT1     EQU   *
         PUT   SYSPRINT,(0)             OUTPUT IT
         B     G2                       CONTINUE
EOF2     EQU   *
         CLOSE MOVPRINT
         FREEPOOL MOVPRINT
         CLOSE SYSPRINT
         FREEPOOL SYSPRINT
         SPACE
CKRET    EQU   *
         L     R15,RETSAVE              RESTORE IT
         LTR   R15,R15                  IS IT OK?
         BNZ   CPYERR                   YES, ERROR
         SPACE
***********************************************************************
*        READ THE JFCB OF TAPE TO EXTRACT THE VOLUME SERIAL           *
***********************************************************************
         SPACE
         RDJFCB TAPE                    GET THE JFCB
         LA    R2,JFCBT2                POINT
         LA    R3,JFCBT1                RECEIVING
         USING JFCBDSNM,R2              ADDRESS IT
         MVC   JFCBVOLS-JFCBDSNM(6,R3),JFCBVOLS  SET VOLSER
         MVC   VOLSERT,JFCBVOLS         SET UP IN HOLD
         CLI   JFCBNVOL,1               STILL ONE VOL?
         BE    NOREND                   YES, CONTINUE
         MVC   JFCBVOLS-JFCBDSNM(6,R3),JFCBVOLS+6 GET NEXT ONE
         MVC   VOLSERT,JFCBVOLS+6       HOLD IT
         XC    FILENO,FILENO            RESET FILE NUMBER
         B     SETGO                    RETRY IT
NOREND   EQU   *
         TM    SW1,RECAT                RECATALOG ?
         BNO   NEND0                    NO
         CLI   VERB,C'G'                IS IT GENER?
         BNE   NEND0                    NO, SKIP IT
         MVC   CAM2VOL,VOLSERT          INDICATE VOLSER
         MVC   CAM2SEQ,FILENO           SET IT
         LA    R1,CAM2                  POINT TO RECATALOG
         CATALOG (1)
         LTR   R15,R15                  IS ALL OK?
         BZ    DONR                     YES
         MVC   P95(L'DONRMSG),DONRMSG   SET ERROR
         B     SETCD4                   SET BAD RETURN
         SPACE
DONR     EQU   *
         MVC   CAM3VOL,DDVOLS           GET SCRATCH VOL
         XC    CAM3RET,CAM3RET          CLEAR RETURN
         SR    R0,R0
         LA    R1,CAM3                  SET TO SCRATCH
         SCRATCH (1)
         LTR   R15,R15                  IS ALL OK?
         BZ    DONS                     YES
         MVC   P95(L'DONSMSG),DONSMSG   SET ERROR
SETCD4   EQU   *
         OI    RETCD+3,4                SET RETURN
         B     NEND0                    CONTINUE
         SPACE
DONS     EQU   *
         MVC   P95(L'RECATMS),RECATMS   SET MESSAGE
         SPACE
NEND0    EQU   *
         NI    SW1,255-RECAT            RESET RECAT BIT
         MVC   P55(6),DDVOLS            SET FROM VOLSER
         MVC   P65(6),JFCBVOLS  SET VOLSER
         LH    R1,FILENO                SET FILE NUMBER
         CVD   R1,DBL                   SET EDITABLE
         OI    DBL+7,X'0F'              SET SIGN
         UNPK  P75(3),DBL+6(2)
         BAL   R10,PPA                  GO PRINT A LINE
         CLC   HOLDNAME,INAREA          NAME THE SAME?
         BE    G1                       YES, CONTINUE
         MVI   P9,C'('                  SET ORIGINAL NAME
         MVC   P11(44),HOLDNAME         SET NAME
         LA    R1,P54                   POINT TO LAST OF NAME
NENDA    EQU   *
         CLI   0(R1),C' '               IS IT END
         BNE   NENDB                    YES
         BCT   R1,NENDA                 TRY AGAIN
NENDB    EQU   *
         MVI   2(R1),C')'               SET CLOSURE
         BAL   R10,PPB                  PUT THIS ONE OUT
         B     G1                       CONTINUE
         DROP  R2
         SPACE 2
MVMS1    MVC   GOMSG1(0),INAREA         MOVE DS NAME (EXEC)
         TITLE 'TERMINATION AND SUBROUTINES'
PPA      DS    0H                       HERE
         MVC   P1(44),INAREA            SET DATASET NAME
         MVC   P83(4),VERB              SET CODE
         MVC   P88(1),AUTO              SET IND
         MVI   CTRL,C'0'                DOUBLE SPACE
         AP    LINES,PK1                ACCOUNT FOR IT
PPB      EQU   *
         AP    LINES,PK1                UP LINE COUNT
PPX      PRNT  CNTR=LINES,LINK=R10,CLEAR=YES,DCB=OUTPUT,               X
               HEADR=(HD1,HD2,HD3),PAGE=(HD1+115,3),RESET=4
         SPACE
CKTIOT   EQU   *
         L     R2,$TIOT                 GET TIOT ADDRESS
         LA    R2,24(R2)                GET DD POINTERS
TIOTLP1  EQU   *
         CLI   0(R2),0                  IS IT END OF TIOT
         BE    TIOERR                   YES, ERROR, NO DD
         CLC   DDNAME,4(R2)             IS IT SAME
         BE    TIOFND                   YES
         SR    R1,R1                    CLEAR REG
         IC    R1,0(R2)                 GET LENGTH OF ENTRY
         LA    R2,0(R1,R2)              NEXT ENTRY
         B     TIOTLP1                  DO AGAIN
TIOFND   EQU   *
         L     R1,16(R2)                POINT TO UCB
         USING UCB,R1                   ADDRESS IT
         CLC   FTYPE,UCBTYP+2           CHECK DEVICE TYPE
         BNE   TYPERR                   OOPS, ERROR
         DROP  R1
         BR    R10                      BACK TO CALLER
         SPACE 2
NEWERR   EQU   *
         ABEND 101,DUMP
         SPACE 2
LOCERR   EQU   *
         MVC   P95(L'LMSG),LMSG         SET MESSAGE
         B     ERRPT                    TRY MORE
         SPACE 2
OBERR    EQU   *
         MVC   P95(L'OMSG),OMSG         SET OBTAIN ERROR
         B     ERRPT                    GO PRINT
         SPACE 2
POERR    EQU   *
         MVC   P95(L'POMSG),POMSG
         B     ERRPT
         SPACE 2
TIOERR   EQU   *
         MVC   P95(L'TIOMSG),TIOMSG
         B     ERRPT
         SPACE 2
IDERR    EQU   *
TYPERR   EQU   *
         CLC   =C'DD',DDNAME            LOOKING FOR DD'S
         BE    NOABND                   YES
         ABEND 103,DUMP
NOABND   EQU   *
         MVC   P95(L'IDMSG),IDMSG       SET ERROR MSG
         B     ERRPT
         SPACE 2
ERRPT    EQU   *
         OI    RETCD+3,8                SET SKIPPED CODE
ERRPTA   EQU   *
         BAL   R10,PPA                  PRINT IT
         B     G1                       CONTINUE
         SPACE 2
EOFIN    EQU   *
         OI    SW1,EOFJB                SET END
         TM    SW1,VSA2                 COMPLETE?
         BNO   AMSIT                    NO, DO IT
         L     R1,RETCD                 GET RETURN
         CVD   R1,DBL                   SET EDITABLE
         ED    FINLED,DBL+6             SET IN MESSAGE
         PUT   OUTPUT,FINLINE           SET PRINT
         CLOSE (INPUT,,OUTPUT)
         CLI   RETCD+3,4                MAJOR ERROR
         BL    EXIT                     NO, CONTINUE TO EXIT
         WTO   ('************ N   S   P   0   2   5 ***********',D),   X
               ('***             W A R N I N G              ***',D),   X
               ROUTCDE=(2,10),DESC=2
         TM    RETCD+3,255-4            DATASETS BYPASSED?
         BZ    WTO2                     NO
         WTO   ('*** E R R O R S  D U R I N G  B A C K U P  ***',D),   X
               ('***    D A T A S E T S   B Y P A S S E D   ***',D),   X
               ROUTCDE=(2,10),DESC=2
WTO2     EQU   *
         TM    RETCD+3,4                IS IT CAT FAILURE
         BZ    WTO3                     NO
         WTO   ('***       CATALOG OR SCRATCH FAILURE       ***',D),   X
               ('***    CATALOG OR DASD DATASETS IN ERROR   ***',D),   X
               ROUTCDE=(2,10),DESC=2
WTO3     EQU   *
         WTO   ('************ N   S   P   0   2   5 ***********',D),   X
               ROUTCDE=(2,10),DESC=2
         B     EXIT                     GET OUT
EXIT     EQU   *
         L     R15,RETCD                GET RETURN CODE
         LEAVE RC=(15)
         SPACE 2
CPYERR   EQU   *
         MVC   P95(L'CMSG),CMSG
CPYERRA  EQU   *
         BAL   R10,PPA                  PRINT IT
         OI    RETCD+3,16               SET ERROR CODE
         LH    R1,FILENO                GET NUMBER
         BCTR  R1,0                     REDUCE IT
         STH   R1,FILENO                FORCE REWRITE OF FILE
         B     G1
         SPACE 2
ENQERR   EQU   *
         MVC   EMS1,INAREA              SET DSN IN MSG
         SR    R2,R2                    CLEAR WORK
         IC    R2,RNAME                 GET LENGTH OF DNAME
         LA    R1,EMS1+1(R2)            POINT TO ADD MESSAGE
         MVC   0(L'WTOEND,R1),WTOEND    SET ADDITIONAL
         LA    R1,L'WTOEND(R1)          POINT TO DSCR AND ROUTE
         MVC   0(4,R1),WTOCODE          SET DESCR/ROUTE
         S     R1,=A(EMSG)              GET LENGTH
         STH   R1,EMSG                  SET IN MESSAGE
         WTO   MF=(E,EMSG)
         LR    R4,R1                    SAVE DOM ELEMENT
ENQE0    EQU   *
         LA    R3,18                    WAIT 3 MINS
ENQE1    EQU   *
         STIMER WAIT,BINTVL=TIME1       WAIT FOR IT
         ENQ   (QNAME,RNAME,S,0,SYSTEM),RET=USE
         LTR   R15,R15                  IS ALL OK NOW?
         BZ    DOMIT                    CLEAR IT OUT
         BCT   R3,ENQE1                 TRY AGAIN
         B     OPASK                    CONT
DOMIT    EQU   *
         DOM   MSG=(R4)                 CLEAR MESSAGE
         B     LINKIT                   GO
OPASK    EQU   *
         XC    ECB1,ECB1                ASK WHAT TO DO
         WTOR  'NSP025 --- SHOULD FILE BE SKIPPED?',                   X
               REPLY,6,ECB1,ROUTCDE=(2)
         WAIT  ECB=ECB1
         CLC   =C'NO ',REPLY
         BE    ENQE0                    RETRY
         CLC   =C'YES ',REPLY
         BNE   OPASK                    NOT PROPER RESPONSE
         DOM   MSG=(R4)                 CLEAR MESSAGE
NOENQ    EQU   *
         MVC   P95(L'EM2),EM2           SET MSG
         LH    R1,FILENO
         BCTR  R1,0
         STH   R1,FILENO                REWRITE INTENDED FILE
         B     ERRPT                    PRINT ERROR
TERR     EQU   *
         MVC   P95(L'TMSG),TMSG         SET MESSAGE
         B     ERRPT                    DO IT
         SPACE
ORGERR   EQU   *
         MVC   P95(L'ORGMSG),ORGMSG     SET MESSAGE
         B     ERRPT
CNERR    EQU   *
         MVC   P95(L'CNMSG),CNMSG     SET MESSAGE
         B     ERRPT
         SPACE 2
NAMERR   EQU   *
         MVC   P95(L'NAMSG),NAMSG       SET MESSAGE
         B     ERRPT
         SPACE
DASDERR  EQU   *
         MVC   P95(L'DASDMSG),DASDMSG
         OI    RETCD+3,2                SET MINOR ERROR
         B     ERRPTA                   CONT
         SPACE
CATERR   EQU   *
         MVC   P95(L'CATMSG),CATMSG     SET ERROR
         B     ERRPT                    PRINT IT
         SPACE 2
         DROP
         TITLE 'IDCAMS IOROUTINE INTERCEPT'
IORTN    INIT  REQ=NO
         LM    R4,R5,4(R1)              PICK UP FLAGS AND IO
         CLI   0(R4),0                  IS IT OPEN CALL?
         BE    IOOPEN                   YES
         CLI   0(R4),4                  IS IT CLOSE
         BE    IOCLOSE                  YES
         LM    R6,R7,0(R5)              PICK UP DATA ADDR AND LEN
         CH    R7,=H'121'               MAX SIZE
         BNH   IOPUT                    GOOD
         LA    R7,121                   SET MAX
IOPUT    EQU   *
         BCTR  R7,0                     SET MACHINE
         EX    R7,IOMOVE                MOVE IT
         PUT   SYSPRINT,CTRL            PUT IT OUT
         MVI   CTRL,C' '                CLEAR IT
         MVC   P0,CTRL                  RESET LINE
IEXIT0   EQU   *
         SR    R15,R15                  SET RETURN
IEXITX   EQU   *
         LEAVE RC=(15)
IOOPEN   EQU   *
         OPEN  (SYSPRINT,OUTPUT)
         B     IEXIT0
IOCLOSE  EQU   *
         CLOSE SYSPRINT
         FREEPOOL SYSPRINT
         B     IEXIT0
         SPACE
IOMOVE   MVC   CTRL(0),0(R6)            <<EXECUTED>>
         SPACE 2
         DROP
         TITLE 'CONSTANTS AND WORK AREAS'
         LTORG
         SPACE
DBL      DS    D                        A WORK AREA
ADDNME   DC    A(DDNAME)                ADDRESS OF DDNAME
RETCD    DC    F'0'                     RETURN CODE
TIME1    DC    F'1000'                  TEN SEC
ECB1     DC    F'0'
DSCBAREA DS    0D,CL148
LOCAREA  DS    0D,CL265
CAMVNUM  EQU   LOCAREA+1                VOL COUNT
CAMTYPE  EQU   LOCAREA+2
CAMVOL   EQU   LOCAREA+6,6
$TIOT    DS    F
PARMAD   DS    F
LINKPRMS DS    F                        PARM POINTER
CTRLAD   DS    F                        CONTROL CARD ADDRESS
RETSAVE  DS    F                        RETURN CODE SAVE
H0       DC    H'0'                     HALF ZERO
H8100    DC    H'8100'
H8192    DC    H'8192'
MAXBLOCK DC    H'20000'                 SET BLOCK FACTOR
CAM1     CAMLST NAME,INAREA,,LOCAREA
OBT1     CAMLST SEARCH,INAREA,DDVOLS,DSCBAREA
CAM2     CAMLST RECAT,INAREA,,CAM2LST
CAM2LST  DC    H'1'
CAM2TYP  DS    CL4                      TYPE CODE
CAM2VOL  DS    CL6                      TAPE VOLSER
CAM2SEQ  DC    H'0'                     FILE SEQ NO
CAM3     CAMLST SCRATCH,INAREA,,CAM3LST
CAM3LST  DC    H'1'
CAM3TYP  DS    CL4                      TYPE
CAM3VOL  DS    CL6
CAM3RET  DS    CL2                      RETURN CODE
LINKNAME DS    CL8                      CONTROL NAME
QNAME    DC    CL8'SYSDSN'
CPYCTRL  DC    C'   COPY OUTDD=TAPE,INDD='
DDNAME   DC    CL8'TAPE'                INITIAL USE
DDVOLS   EQU   DDNAME+2,6               VOL SER HOLDER
         DC    CL20' '                  MAKE FOR GOOD CONTROL
FTYPE    DC    X'80'                    TAPE UCB(INITIAL)
         SPACE
SW1      DC    X'00'                    CONTROL SWITCH
VSA1     EQU   X'80'                    VSAM DUMP IN PROGRESS
VSA2     EQU   X'40'                    VSAM DUMP COMPLETED
EOFJB    EQU   X'20'                    END OF FILE ON INPUT
RECAT    EQU   X'10'                    RECATALOG FUNCTN REQ
         SPACE
HOLDTIO  DS    F                        WORK AREA
         SPACE 2
VERB     DS    CL4                      VERB CODE
AUTO     DS    X                        AUTO INDICATOR
BLANKS   DC    CL44' '                  BLANKER
RNAME    DS    X                        LENGTH OF DS NAME
INAREA   DS    CL44                     WORK AREA
         SPACE 2
MOVCTRL  DC    C'  COPY TO=TAPE=('
MVSR     DS    CL6
         DC    C','
MVFL     DC    C'001'                   SEQ NO
         DC    C'),DSNAME='
HOLDNAME DS    CL44                     WORK HOLD AREA
         DC    CL20' '                  SPACE
VOLSERT  DC    CL6' '                   VOLSER HOLDER
MTEST    DC    X'00'                    MOVE TEST HOLDER
         SPACE
WTOCODE  DC    X'40004000'              DESCR/ROUTING CODES
WTOEND   DC    C'UNAVAILABLE, CURRENTLY IN USE'   BACK OF MESSAGE
         SPACE
FILENO   DC    H'0'
         SPACE
JFCBD1   DC    0D'0',176X'00'
JFCBD2   DS    0D,176C
JFCBT1   DS    0D,176C
JFCBT2   DS    0D,176C
         SPACE
         PRTAREA 132
         SPACE
PK1      DC    P'1'                     PACKED 1
LINES    DC    P'75'                    LINE COUNTER
         SPACE
HD1      DC    C'1'
         DC    CL45'     N S P 0 2 5   D A T A   S E T   B A C K '
         DC    CL45'U P   U T I L I T Y                          '
         DC    CL42'                  PAGE                    '
HD2      DC    C'0'
         DC    CL45' D A T A   S E T   N A M E                   '
         DC    CL45'        D - VOL   T - VOL  SEQ NO    TYPE    '
         DC    CL42'      C O M M E N T S                     '
         SPACE
FINLINE  DC    C'-'                     SKIP THREE
         DC    C'* NSP025 COMPLETED, RETURN CODE IS'
FINLED   DC    X'40212020'
HD3      DC    CL133' '
         SPACE
LMSG     DC    C'LOCATE FAILED'
OMSG     DC    C'OBTAIN FAILED'
POMSG    DC    C'DATASET NOT PO'
TIOMSG   DC    C'CANNOT LOCATE TIOT ENTRY'
CMSG     DC    C'BAD RETURN FROM UTILITY'
TMSG     DC    C'INVALID TYPE'
ORGMSG   DC    C'INVALID ORGANIZATION'
CNMSG    DC    C'DATASET MULTIVOLUME'
IDMSG    DC    C'REQUIRED DD INVALID'
NAMSG    DC    C'INVALID/MISSING NAME'
CATMSG   DC    C'INVALID DATASET OPTION'
DONRMSG  DC    C'RECATALOG FAILURE'
DONSMSG  DC    C'SCRATCH FAILURE'
RECATMS  DC    C'RECATALOGUED/SCRATCHED'
DASDMSG  DC    C'DATASET NOT ON DASD'
         SPACE 2
VSACTL   DC    C'  REPRO OUTFILE(TAPE),INFILE('
AMSD1    DC    CL8' '
         DC    CL3')'
         DC    CL3';'
         SPACE 2
CPYPARMS DC    0F'0',X'80',AL3(H0)   IEBCOPY
MOVPARMS DC    A(H0),X'80',AL3(MOVDDS)  IEHMOVE
GENPARMS DC    A(H0),X'80',AL3(GENDDS)   IEBGENER
VSAPARMS DC    A(H0),A(H0),A(H0),X'80',AL3(IOLIST)
         SPACE
IOLIST   DC    F'1'                     ONLY ONE SET
         DC    A(LNAME)                 SYSPRINT NAME
         DC    A(IORTN)                 IOROUTINE
         DC    A(0)                     WORK AREA
         SPACE
LNAME    DC    CL10'DDSYSPRINT'         DDNAME FOR IDCAMS
         SPACE 2
MOVDDS   DC    H'48'                    6
         DC    5XL8'00'                 5 DUMMIES
         DC    CL8'MOVPRINT'            SYSPRINT OVERRIDE
         SPACE 2
GENDDS   DC    H'72'                    9
         DC    4XL8'00'                 4 DUMMIES
         DC    CL8'DUMMY'               SYSIN OVERRIDE
         DC    2XL8'00'                 2 DUMMIES
GENR1    DC    CL8' '                   SYSUT1
         DC    CL8'TAPE'                SYSUT2
EM2      DC    C'UNABLE TO ENQ'
         SPACE
EMSG     WTO   'NSP025 --- XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                UNAVAILABLE, CURRENTLY IN USE',MF=L,                   X
               ROUTCDE=2,DESC=2
EMS1     EQU   EMSG+4+11,44
         SPACE 2
OMCODES  DC    X'00004000'              DESC=0,ROUTCDE=2
         SPACE
GOMSG    DC    0F'0',X'00008000'        MCS PREFIX
         DC    C'NSP025 --- CURRENT DATA SET = '
GOMSG1   DS    CL48                     MAX PLUS CODES
GOMSL    EQU   GOMSG1-GOMSG             LENGTH OF PREFIXES
         SPACE
REPLY    DC    CL6' '
         SPACE
IOAREA   DS    CL80                     INPUT AREA
         TITLE 'EQUATES AND MISC.'
PO       EQU   X'02'
SR       EQU   X'02'
VSAM     EQU   X'08'
PS       EQU   X'40'
VB       EQU   X'50'
         SPACE
         TITLE 'DCB AREAS'
INPUT    URGEN READ,EOD=EOFIN
DISK     DCB   DDNAME=DISK,DSORG=PO,MACRF=E,EXLST=EXDISK
TAPE     DCB   DDNAME=TAPE,DSORG=PS,MACRF=E,EXLST=EXTAPE
         SPACE
OUTPUT   URGEN PRINT
SYSIN    URGEN PUNCH80
         SPACE 2
EXTAPE   DC    0F'0',X'87',AL3(JFCBT1)  INITIAL TAPE READ
EXDISK   DC    0F'0',X'87',AL3(JFCBD2)  INITIAL TAPE READ
         SPACE 2
SYSPRINT DCB   DDNAME=SYSPRINT,MACRF=PM,DSORG=PS,                      X
               RECFM=FBA,LRECL=121,EXLST=DEXA
         SPACE
DEXA     DCBEXITB
         SPACE
MOVPRINT DCB   DDNAME=MOVPRINT,MACRF=GL,DSORG=PS,EODAD=EOF2
         SPACE 2
         TITLE 'DSECTS'
         DCBD DSORG=PO,DEVD=DA
JFCB     DSECT
         IEFJFCBN
DSCB     DSECT
         IECSDSL1 1
UCB      DSECT
         IEFUCBOB
         END
