         TITLE '* * *  POF - VTAM SECONDARY PROGRAM OPERATOR  * * *'
***********************************************************************
*                                                                     *
*  PURPOSE - PROVIDE VTAM SECONDARY PROGRAM OPERATOR FOR USE IN TSO   *
*            COMMAND OR AS A STAND ALONE VTAM APPLICATION PROGRAM.    *
*                                                                     *
*  OPERATION - POF OPENS ITS OWN ACB, AND USING TPUT/TGET AND         *
*              SENDCMD/RCVCMD ALLOWS AN AUTHORIZED TSO USER TO        *
*              BE A VTAM SECONDARY PROGRAM OPERATOR.  THE COMMANDS    *
*              AND RESPONSES ARE ALSO RECORDED ON SYSLOG.             *
*                                                                     *
*  WRITTEN BY DOUG MOORE - SEPTEMBER 1978                             *
*                                                                     *
*  MODIFIED BY DOUG MOORE - JANUARY 1980                              *
*     SUPPORT ADDED FOR * = REPEAT LAST COMMAND                       *
*                       ? = SHOW LAST COMMAND                         *
*                       X = PCF EXIT                                  *
*                                                                     *
***********************************************************************
         EJECT
POF      CSECT
         SAVE  (14,12),,POF-&SYSDATE-&SYSTIME   SAVE REGISTERS
         LR    R12,R15             LOAD BASE REGISTER
         USING POF,R12
         LR    R2,R13              SAVE PREVIOUS RSA POINTER
         LA    R13,POFRSA          POINT TO MY RSA
         ST    R2,4(R13)           CHAIN SAVE AREAS
         ST    R13,8(R2)           CHAIN SAVE AREAS
         SPACE 2
         L     R2,PSAAOLD          GET A(ASCB)
         USING ASCB,R2
         L     R2,ASCBTSB          GET A(TSB)
         LTR   R2,R2               Q. IS THIS TSO (A(TSB) NOT = 0)
         BZ    POFRTN              ...NO, FORGET IT
         ST    R1,CPPLPTR          SAVE A(CPPL)
         USING CPPL,R1
         MVC   CSPLUPT,CPPLUPT     GET A(UPT)
         MVC   CSPLECT,CPPLECT     GET A(ECT)
         L     R2,CPPLPSCB         GET A(PSCB)
         USING PSCB,R2
         DROP  R1
*        MVC   POFUSRID,PSCBUSER   SAVE USERID
*        TM    PSCBATR1,PSCBCTRL   Q. OPER AUTHORIZED
*        BO    POFAUTH             ...YES, OK TO PROCEED
         B     POFAUTH             ...YES, OK TO PROCEED
         MVC   POFOUT(23),=C'* USER NOT AUTHORIZED *'
         TPUT  POFOUT,23
         B     POFRTN              DONT LET THEM PLAY
         SPACE
         DROP  R2
         EJECT
POFAUTH  DS    0H
         OPEN  (POFACB)            OPEN SPO ACB
         LTR   R15,R15             Q. OPEN OK
         BZ    POFOPNOK            ...YES, CONTINUE
         MVC   POFOUT(28),=C'OPEN FAILED FOR VTAM SPO ACB'
         TPUT  POFOUT,28
         SPACE
POFOPNF  DS    0H
         LA    R2,POFACB           POINT TO ACB
         USING IFGACB,R2
         CLI   ACBOFLGS,X'02'      Q. POSSIBLE ACB ALREADY OPEN
         BNE   POFOPNF2            ...NO, SOMETHING ELSE
         CLI   ACBERFLG,X'58'      Q. POSSIBLE ACB ALREADY OPEN
         BNE   POFOPNF2            ...NO, SOMETHING ELSE
         MVC   POFOUT(22),=C'* POF ALREADY IN USE *'
         TPUT  POFOUT,22
         B     POFRTN              GO AWAY
         SPACE
POFOPNF2 DS    0H
         MVC   POFDBLWK+1(1),ACBOFLGS   GET OPEN FLAGS
         UNPK  POFDBLWK(1),POFDBLWK+1(1)   PREPARE FOR CONVERSION
         MVC   POFDBLWK+3(1),ACBERFLG   GET ERROR FLAGS
         UNPK  POFDBLWK+2(1),POFDBLWK+3(1) PREPARE FOR CONVERSION
         NC    POFDBLWK(4),=X'0F0F0F0F'    PREPARE FOR TRANSLATE
         TR    POFDBLWK(4),POFTRTBL     TRANSLATE
         MVC   POFMSG1(4),POFDBLWK    PUT IN MESSAGE
         TPUT  POFMSG1,L'POFMSG1
         B     POFRTN              OPEN FAILED SO GET OUT
         SPACE
         DROP  R2
         EJECT
POFOPNOK DS    0H
         MVC   WTOLTH,=AL2(28)     LENGTH OF MESSAGE
         MVC   WTOTXT(7),POFUSRID  PUT USERID IN MESSAGE
         MVC   WTOTXT+7(17),=C' LOGGED ON TO POF'
         WTO   MF=(E,WTOLIST)      WRITE LOGON TO SYSLOG
         SPACE
         MVC   POFOUT(27),=C'VTAM SPO FUNCTION ACTIVATED'
         TPUT  POFOUT,27
         SPACE
POFRCV1  DS    0H
         RCVCMD RPL=POFRPLRC       ISSUE FIRST RCVCMD
         LTR   R15,R15             Q. ACCEPTED
         BZ    POFRQCMD            ...YES, GO REQUEST COMMANDS
         BAL   R10,ABEND           ...NO, GIVE UP
         SPACE 2
POFRQCMD DS    0H
         MVC   POFOUT(18),=C'ENTER VTAM COMMAND'
         TPUT  POFOUT,18
         TGET  POFIN,L'POFIN       GET THE COMMAND
POFRQCHK DS    0H
         LTR   R1,R1               Q. ANY INPUT
         BZ    POFRQCMD            ...NO, GO ASK AGAIN
         OC    POFIN,=CL80' '      MAKE UPPERCASE FOR WRITING TO SYSLOG
         CLC   =CL3'END',POFIN     Q. THE END
         BE    POFEOJ              ...YES, GO TO EOJ
         SPACE
         CLI   POFIN,C'*'          Q. WANT TO DO SAME THING
         BNE   POFCHKQ             ...NO, GO CHECK FOR QUESTION MARK
         L     R1,SAVECMDL         RELOAD LENGTH
         MVC   POFIN,SAVECMD       RELOAD COMMAND
         B     POFDOCMD            GO DO COMMAND
         SPACE
POFCHKQ  DS    0H
         CLI   POFIN,C'?'          Q. WANT TO SEE LAST COMMAND
         BNE   POFSTORE            ...NO, GO SAVE THIS INPUT
         L     R1,SAVECMDL         RELOAD LENGTH
         TPUT  SAVECMD,(1)         WRITE LAST COMMAND BACK OUT
         B     POFRQCMD            GO SEE WHAT TO DO
         SPACE
POFSTORE DS    0H
         ST    R1,SAVECMDL         SAVE LENGTH
         MVC   SAVECMD,POFIN       SAVE COMMAND
POFDOCMD DS    0H
         CLC   =CL2'X ',POFIN      Q. X FOR PCF
         BE    PCFEXIT             ...YES, GO DO IT
         SPACE
* ISSUE THE COMMAND
         LA    R2,POFRPLSC         POINT TO SENDCMD RPL
         USING IFGRPL,R2
         AH    R1,=H'4'            ADD HEADER LENGTH TO COMMAND LENGTH
         ST    R1,RPLRLEN          STORE LENGTH IN RPL
         DROP  R2
         STH   R1,WTOLTH           STORE LENGTH IN WTO
         MVC   WTOTXT(L'POFIN),POFIN   MOVE COMMAND TO WTO
         WTO   MF=(E,WTOLIST)      WRITE COMMAND TO LOG
         SENDCMD RPL=POFRPLSC
         LTR   R15,R15             Q. SUCCESSFUL
         BZ    POFRQCMD            ...YES, GO GET ANOTHER COMMAND
         BAL   R10,ABEND           ...NO, GIVE UP
         EJECT
PCFEXIT  DS    0H
         XC    POFCECB,POFCECB     CLEAR ECB
         XC    POFCBUF+2(2),POFCBUF+2   CLEAR OFFSET
         MVC   POFCBUF+4(80),POFIN   GET COMMAND
         LA    R1,CSPLIST          POINT TO CSPL
         LINK  EPLOC=IKJSCAN
         B     POFRQCMD
         EJECT
ABEND    DS    0H
         LA    R1,1                SET DUMP OPTION
         SLL   R1,31
         ALR   R1,R15              SET ABEND CODE
         ABEND (1)
         EJECT
POFEOJ   DS    0H
         CLOSE (POFACB)            CLOSE THE ACB
         LTR   R15,R15             Q. CLOSE SUCCESSFUL
         BZ    POFCLSOK            ...YES, PROCEED
         MVC   POFOUT(29),=C'CLOSE FAILED FOR VTAM SPO ACB'
         TPUT  POFOUT,29
         SPACE
POFCLSF  DS    0H
         LA    R2,POFACB           POINT TO ACB
         USING IFGACB,R2
         CLI   ACBERFLG,X'4C'      Q. MORE MESSAGES OUSTANDING
         BNE   POFCLSF2            ...NO, PRESS ON
         MVC   POFOUT(27),=C'OUTSTANDING MESSAGES PURGED'
         TPUT  POFOUT,27
         B     POFEOJ              TRY CLOSE AGAIN
         SPACE
POFCLSF2 DS    0H
         MVC   POFDBLWK+1(1),ACBOFLGS   GET OPEN FLAGS
         UNPK  POFDBLWK(1),POFDBLWK+1(1)   PREPARE FOR CONVERSION
         MVC   POFDBLWK+3(1),ACBERFLG   GET ERROR FLAGS
         UNPK  POFDBLWK+2(1),POFDBLWK+3(1) PREPARE FOR CONVERSION
         NC    POFDBLWK(4),=X'0F0F0F0F'    PREPARE FOR TRANSLATE
         TR    POFDBLWK(4),POFTRTBL     TRANSLATE
         MVC   POFMSG1(4),POFDBLWK    PUT IN MESSAGE
         TPUT  POFMSG1,L'POFMSG1
         B     POFRTN              CLOSE FAILED SO GET OUT
         SPACE 2
POFCLSOK DS    0H
         MVC   WTOLTH,=AL2(29)     LENGTH OF MESSAGE
         MVC   WTOTXT(7),POFUSRID  PUT USERID IN MESSAGE
         MVC   WTOTXT+7(18),=C' LOGGED OFF OF POF'
         WTO   MF=(E,WTOLIST)      WRITE LOGOFF TO SYSLOG
         SPACE
POFRTN   DS    0H
         L     R13,4(R13)          RESTORE CALLERS RSA
         RETURN (14,12),RC=0       RESTORE REGISTERS AND RETURN
         SPACE
         DROP  R12
         EJECT
POFRCVEX DS    0H
         LR    R12,R15             GET NEW BASE
         USING POFRCVEX,R12
         LR    R11,R14             SAVE RETURN REG
         LR    R2,R1               SAVE RPL POINTER
         USING IFGRPL,R2           ADDRESS RPL
         LA    R13,POFRCVSA        POINT TO RSA
         CHECK RPL=POFRPLRC        CHECK RCVCMD RPL
         LTR   R15,R15             Q. SUCCESSFUL
         BZ    POFRCVA             ...YES, PROCEED
         BAL   R10,RCVEABND        ...NO, GIVE UP
         SPACE 3
POFRCVA  DS    0H
         CLC   =XL2'100D',RPLRTNCD   Q. ACB CLOSED
         BE    POFRCVR               ...YES, DONT DO ANY MORE
         TM    POFCMDI+1,X'C0'     Q. POSSIBLE NO DATA
         BC    9,POFRCVB           ...NO, CONTINUE (ONES OR ZEROS)
         TM    POFCMDI+1,X'80'     Q. END OF MULTI-LINE, NO DATA
         BO    POFRCVI             ...YES, NO OUTPUT, ISSUE RCVCMD
POFRCVB  DS    0H
         L     R0,RPLRLEN          GET LENGTH OF REPLY
         STH   R0,WTOLTH           STORE LENGTH FOR WTO
         SH    R0,=H'4'               LESS HEADER LENGTH
         LA    R1,POFIMSG          A(REPLY)
         TPUT  (1),(0)             PUT OUT THE REPLY
         SPACE
POFRCVN  DS    0H
         MVC   WTOTXT(L'POFIMSG),POFIMSG   MOVE RESPONSE TO WTO
         WTO   MF=(E,WTOLIST)      WRITE RESPONSE TO LOG
POFRCVI  DS    0H
         RCVCMD RPL=POFRPLRC       ISSUE ANOTHER RCVCMD
         LTR   R15,R15             Q. ACCEPTED
         BZ    POFRCVR             ...YES, RETURN
         BAL   R10,RCVEABND        ...NO, GIVE UP
POFRCVR  DS    0H
         LR    R14,R11             RESTORE RETURN REG
         BR    R14                 RETURN
         SPACE 3
RCVEABND DS    0H
         LA    R1,1                SET DUMP OPTION
         SLL   R1,31
         ALR   R1,R15              SET ABEND CODE
         ABEND (1)                 THIS ABEND WILL CAUSE A SVC DUMP
*                                     ENTITLED 'VTAM IRB ABEND'
         SPACE
         DROP  R2,R12
         SPACE
POFRCVSA DS    18F                 RSA FOR RCVCMD EXIT
         EJECT
POFLERAD DS    0H
POFSYNAD DS    0H
         LR    R12,R15             SET UP BASE
         USING POFLERAD,R12
         LR    R2,R1               SAVE RPL POINTER
         USING IFGRPL,R2
         LR    R11,R14             SAVE RETURN ADDRESS
         CLC   =XL2'100D',RPLRTNCD   Q. IS THIS PSEUDO ERROR (ACB CLSD)
         BE    POFNOERR            ...YES, NOT REALLY AN ERROR
         CLC   =XL2'146E',RPLRTNCD   Q. IS THIS PSEUDO ERROR
         BE    POFNOERR            ...YES, NOT REALLY AN ERROR
         CLC   =XL2'1471',RPLRTNCD   Q. IS THIS PSEUDO ERROR
         BE    POFNOERR            ...YES, NOT REALLY AN ERROR
         SPACE
         MVC   POFOUT(14),=C'UNKNOWN FAILED'
         TM    RPLREQ,RPLRVCMD     Q. RCVCMD FAILED
         BNO   POFREQ2             ...NO, TRY SENDCMD
         MVC   POFOUT(7),=C'RCVCMD '   SHOW RCVCMD
         B     POFREQST
POFREQ2  DS    0H
         TM    RPLREQ,RPLSDCMD     Q. SENDCMD FAILED
         BNO   POFREQST            ...NO, THATS IT
         MVC   POFOUT(7),=C'SENDCMD'   SHOW SENDCMD
POFREQST DS    0H
         TPUT  POFOUT,14
POFLEMSG DS    0H
         MVC   POFDBLWK+1(1),RPLRTNCD   GET RETURN CODE
         UNPK  POFDBLWK(1),POFDBLWK+1(1)   PREPARE FOR CONVERSION
         MVC   POFDBLWK+3(1),RPLFDB2    GET FEEDBACK FIELD
         UNPK  POFDBLWK+2(1),POFDBLWK+3(1) PREPARE FOR CONVERSION
         NC    POFDBLWK(4),=X'0F0F0F0F'    PREPARE FOR TRANSLATE
         TR    POFDBLWK(4),POFTRTBL     TRANSLATE
         MVC   POFMSG2(4),POFDBLWK    PUT IN MESSAGE
         TPUT  POFMSG2,L'POFMSG2
         SPACE
POFLERTN DS    0H
         LA    R15,BIT0            INDICATE SENDCMD/RCVCMD FAILURE
         LR    R14,R11             RELOAD RETURN REG
         BR    R14                 RETURN
         SPACE
POFNOERR DS    0H
         SLR   R15,R15             SET GOOD RETURN CODE
         LR    R14,R11             RELOAD RETURN REG
         BR    R14                 RETURN
         SPACE
LEABEND  DS    0H
         LA    R15,BIT0+BIT1       INDICATE SENDCMD/RCVCMD FAILURE
*                                     PLUS TPUT FAILURE
         LR    R14,R11             RELOAD RETURN REG
         BR    R14                 RETURN
         SPACE
         DROP  R2,R12
         EJECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE 2
BIT0     EQU   X'80'
BIT1     EQU   X'40'
BIT2     EQU   X'20'
BIT3     EQU   X'10'
BIT4     EQU   X'08'
BIT5     EQU   X'04'
BIT6     EQU   X'02'
BIT7     EQU   X'01'
         SPACE 2
PSAAOLD  EQU   548                 A(CURRENT ASCB)
         EJECT
POFRSA   DS    18D                 REGISTER SAVE AREA
POFDBLWK DS    D                   DOUBLE WORD WORK AREA
         SPACE
CPPLPTR  DC    A(0)                A(CPPL)
         SPACE
CSPLIST  EQU   *
CSPLUPT  DC    A(0)                A(UPT)
CSPLECT  DC    A(0)                A(ECT)
CSPLECB  DC    A(POFCECB)          A(ECB)
CSPLFLG  DC    A(POFCFLG)          A(FLAGS)
CSPLOA   DC    A(POFCOA)           A(OUTPUT AREA)
CSPLCBUF DC    A(POFCBUF)          A(BUFFER)
         SPACE
POFCECB  DC    A(0)                ECB
POFCFLG  DC    X'80',AL3(0)        FLAGS
POFCOA   DC    XL8'00'             OUTPUT AREA
POFCBUF  EQU   *
         DC    H'84'               LENGTH
         DC    H'0'                OFFSET
         DC    CL80' '             BUFFER
         SPACE
IKJSCAN  DC    CL8'IKJSCAN'        NAME OF IKJSCAN FOR LINK
         SPACE
POFTRTBL DC    X'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5F6'
         SPACE
POFOUT   DS    CL80                TPUT BUFFER
         SPACE
POFCMDI  EQU   *                   COMMAND INPUT BUFFER (FROM VTAM)
         DS    CL4                 COMMAND HEADER
POFIMSG  DS    CL126               MESSAGE
POFCMDIL EQU   *-POFCMDI
         SPACE
POFCMDO  EQU   *                   COMMAND OUTPUT BUFFER (TO VTAM)
         DC    X'00'               COMMAND HEADER
         DC    X'03'
         DC    X'0000'
POFIN    DS    CL80                TGET BUFFER
POFCMDOL EQU   *-POFCMDO
         SPACE
SAVECMDL DC    F'0'                LENGTH OF SAVED COMMAND
SAVECMD  DC    CL80' '             SAVED COMMAND
         SPACE 2
WTOLIST  WTO   ' ',MCSFLAG=HRDCPY,MF=L   WTO TO LOG CMDS & RESPONSES
         SPACE
WTOLTH   EQU   WTOLIST,2           LENGTH OF TEXT + 4
         ORG   WTOLIST+4           POINT TO MESSAGE
WTOTXT   DS    CL126               MESSAGE TEXT (MAX OF 124)
         SPACE 2
POFUSRID DS    CL7                 TSO USER ID
POFMSG1  DC    C'XXXX = ACBOFLGS/ACBERFLG'
POFMSG2  DC    C'XXXX = RTNCD/FDBK2'
         EJECT
POFACB   ACB   AM=VTAM,                                                *
               APPLID=POFACBAI,                                        *
               PASSWD=POFACBPW,                                        *
               EXLST=POFACBEX,                                         *
               MACRF=NLOGON
         SPACE 2
POFACBAI DC    X'08'
         DC    CL8'POF'
POFACBPW DC    X'08'
         DC    CL8'POFSPOPW'
         EJECT
POFACBEX EXLST AM=VTAM,                                                *
               LERAD=POFLERAD,                                         *
               SYNAD=POFSYNAD
         EJECT
POFRPLSC RPL   AM=VTAM,                                                *
               ACB=POFACB,                                             *
               AREA=POFCMDO,                                           *
               RECLEN=POFCMDOL,                                        *
               OPTCD=(SYN)
         EJECT
POFRPLRC RPL   AM=VTAM,                                                *
               ACB=POFACB,                                             *
               AREA=POFCMDI,                                           *
               AREALEN=POFCMDIL,                                       *
               EXIT=POFRCVEX,                                          *
               OPTCD=(ASY,Q,TRUNC)
         EJECT
         LTORG
         EJECT
         ISTDPOHD
         SPACE 5
         PRINT NOGEN
         SPACE 5
         IFGACB AM=VTAM
         SPACE 5
         IFGRPL AM=VTAM
         SPACE 5
         IHAASCB
         SPACE 5
         IKJPSCB
         SPACE 5
         IKJCPPL
         SPACE 5
         END   POF
