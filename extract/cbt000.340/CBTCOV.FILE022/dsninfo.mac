DSNI     TITLE 'RETURN DATASET CHARACTERISTICS TO ISPF'          *LBD*
*--------------------------------------------------------------------*
*                                                                    *
*        MODIFIED BY L. DYCK TO RETURN DSNAME INFORMATION        *LBD*
*        TO ISPF VARIABLES.                                      *LBD*
*                                                                *LBD*
*        THIS  WAS ORIGINALLY THE LISTSPC TSO COMMAND FROM       *LBD*
*        THE CBT TAPE FILE 300                                   *LBD*
*                                                                    *
*   DSNINFO IS INVOKED AS FOLLOWS :                              *LBD*
*                                                                    *
*        ISPEXEC PGM(DSNINFO) PARM(DSN-VARIABLE,VOL-VARIABLE)
*                                                                    *
*        WHERE  DSN-VARIABLE IS THE ISPF VARIABLE CONTAINING     *LBD*
*        THE DSNAME TO BE ANALYZED.                              *LBD*
*                                                          *LBD 08/86*
*        WHERE VOL-VARIABLE IS THE ISPF VARIABLE CONTAINING*LBD 08/86*
*        THE VOLSER ON WHICH THE DATASET RESIDES (OPTIONAL)*LBD 08/86*
*                                                          *LBD 12/83*
*        IF THE DSNAME IS NOT FULLY QUALIFIED, THAT IS     *LBD 12/83*
*        IN QUOTES, THEN THE ISPF ZPREFIX IS APPENDED TO   *LBD 12/83*
*        THE BEGINNING OF THE DSNAME SO THAT THE DYNAMIC   *LBD 12/83*
*        ALLOCATION WILL BE SUCCESSFUL.                    *LBD 12/83*
*                                                          *LBD 12/83*
*                                                                *LBD*
* ISPF VARIABLE NAMES:                                           *LBD*
*                                                                *LBD*
*              ALCYL                   # ALLOCATED CYL'S   *LBD 12/83*
*              ATRECFM                 RECORD FORMAT FOR ATTR    *LBD*
*              BALC                    # BLK'S ALLOCATED    *LBD 03/85*
*              BLKSIZE                 BLOCK SIZE                *LBD*
*              BUSE                    # BLK'S USED         *LBD 03/85*
*              CREDT                   CREATION DATE             *LBD*
*              DSORG                   DATA SET ORGANIZATION     *LBD*
*              DEVTYPE                 UNIT NAME FOR DATASET     *LBD*
*              DIRALLOC                # ALLOC DIR BLOCKS  *LBD 11/83*
*              DIRUSE                  # USED DIR BLOCKS   *LBD 11/83*
*              EX                      # OF EXTENTS              *LBD*
*              GCREDT                  GREGORIAN CREDT     *LBD 11/83*
*              GUSEDT                  GREGORIAN USEDT     *LBD 11/83*
*              KEYLEN                  KEY LENGTH                *LBD*
*              LRECL                   LOGICAL RECORD LENGTH     *LBD*
*              MEMBER                  MEMBER NAME (OR BLANK)    *LBD*
*              RECFM                   RECORD FORMAT             *LBD*
*              RKP                     RELATIVE KEY POSITION     *LBD*
*              SCALO                   SECONDARY ALLOCATION      *LBD*
*              TRALC                   ALLOCATED TRACKS          *LBD*
*              TRUSE                   USED TRACKS               *LBD*
*              UNIT                    ALLOCATION UNIT TYPE      *LBD*
*              USEDT                   LAST USE DATE             *LBD*
*              VOLSER                  VOLSER OF DATASET         *LBD*
*              USCYL                   # USED CYL'S        *LBD 12/83*
*                                                                *LBD*
*        NOTE: IF A MEMBER NAME IS SPECIFIED THE DSORG     *LBD 01/84*
*              WILL REMAIN PO.  BUT VARIABLE MEMBER WILL   *LBD 01/84*
*              CONTAIN THE MEMBER NAME .                   *LBD 01/84*
*                                                          *LBD 02/84*
*        RETURN CODES:            0 = OK                   *LBD 02/84*
*                                 99 = DATASET NOT FOUND   *LBD 02/84*
*                                                          *LBD 02/84*
*                                                                    *
*        ADDED CHECK FOR VSAM DSORG FOR DSORG= ONLY         *LBD 02/84*
*        ADDED BALC VARIABLE                                *LBD 03/85*
*        ADDED VOLSER ACCESS                               *LBD 08/86*
*--------------------------------------------------------------------*
         EJECT                                             *LBD 11/83*
         MACRO
&L       CVDT  &O
.*
&L       XR    R15,R15
         IC    R15,DS1&O
         CVD   R15,DWD
         ICM   R14,B'0011',DWD+L'DWD-2
         ICM   R15,B'0011',DS1&O+1
         CVD   R15,DWD
         SRL   R14,4
         STC   R14,DWD+5
         ED    FMT&O,DWD+5
         SPACE
.*
         MEND
         EJECT                                             *LBD 11/83*
         MACRO
&L       CVRTX &O,&ADD=0,&OFFSET=0
.*
&L       XR    R15,R15
         L     R15,DS1&O
.*
         CVD   R15,DWD
         ED    FMT&O,DWD+8-((L'FMT&O+1)/2)
         SPACE
.*
         MEND
         MACRO
&L       CVRT  &O,&ADD=0,&OFFSET=0
.*
&L       XR    R15,R15
         LA    R1,1
         SLA   R1,(L'DS1&O-&OFFSET)
         BCTR  R1,0
         EX    R1,*+L'*+4
         B     *+L'*+4
         ICM   R15,*-*,DS1&O+&OFFSET
.*
         AIF   (&ADD EQ 0).CVD
.*
         LA    R15,&ADD.(R15)
.*
.CVD     ANOP
.*
         CVD   R15,DWD
         ED    FMT&O,DWD+8-((L'FMT&O+1)/2)
         SPACE
.*
         MEND
         EJECT                                             *LBD 11/83*
         MACRO                                             *LBD 11/83*
         JUSTL &OUT,&IN                                    *LBD 11/83*
         LA    R1,&IN                  -> INPUT FIELD      *LBD 11/83*
         LA    R2,&OUT                 -> OUTPUT FIELD     *LBD 11/83*
         LA    R3,L'&IN                LOAD LEN            *LBD 11/83*
S&SYSNDX DS    0H                      START JUSTIFICATION *LBD 11/83*
         CLI   0(R1),C' '              BLANK               *LBD 11/83*
         BE    U&SYSNDX                YES - INCREMENT     *LBD 11/83*
         MVC   0(1,R2),0(R1)           MOVE CHARACTER      *LBD 11/83*
         LA    R2,1(R2)                DITTO               *LBD 11/83*
U&SYSNDX DS    0H                                          *LBD 11/83*
         LA    R1,1(R1)                INCR BY 1           *LBD 11/83*
         BCT   R3,S&SYSNDX             KEEP DOING IT       *LBD 11/83*
E&SYSNDX DS    0H                      END OF JUSTIFICATION*LBD 11/83*
         SPACE 2                                           *LBD 11/83*
         MEND                                              *LBD 11/83*
         EJECT
*--------------------------------------------------------------------*
*                                                                    *
*   PERFORM STANDARD REENTRANT PROLOGUE - GET WORK AREA AND SET UP   *
*                                                                    *
*--------------------------------------------------------------------*
         SPACE 2
DSNINFO  $PROLOG R11,R12
         EJECT                                             *LBD 12/83*
         L     R1,0(R1)         * LOAD ADDR OF PARM        *LBD 12/83*
         LH    R2,0(R1)         * LOAD LENGTH OF PARM      *LBD 12/83*
         LTR   R2,R2            * LENGTH OF ZERO           *LBD 12/83*
         BZ    NOPARM           * NO - BYPASS MOVE         *LBD 12/83*
         BCTR  R2,R0            * SUBTRACT LENGTH BY 1     *LBD 12/83*
         MVC   DSN+1(8),=CL8' '    BLANK DSN VAR NAME      *LBD 12/83*
         LA    R5,DSN+1            -> DSN VAR NAME O/P     *LBD 08/86*
         LA    R1,2(R1)            -> INPUT PARM           *LBD 08/86*
MVDSN    MVC   0(1,R5),0(R1)       MOVE CHAR OF DSN VAR    *LBD 08/86*
         LA    R1,1(R1)            BUMP R1                 *LBD 08/86*
         LA    R5,1(R5)            BUMP R5                 *LBD 08/86*
         CLI   0(R1),C','          COMMA                   *LBD 08/86*
         BE    DOMVCVOL            YES - MOVE VOL VAR      *LBD 08/86*
         CLI   0(R1),C' '          END OF PARM ?           *LBD 08/86*
         BNH   NOPARM              YES                     *LBD 08/86*
         B     MVDSN               NO - KEEP MOVING        *LBD 08/86*
DOMVCVOL DS    0H                                          *LBD 08/86*
         LA    R1,1(R1)            BUMP PAST COMMA         *LBD 08/86*
         LA    R5,VOLPARM+1        -> VOLPARM              *LBD 08/86*
MVVOL    MVC   0(1,R5),0(R1)       MOVE CHAR OF VOL VAR    *LBD 08/86*
         LA    R1,1(R1)            BUMP R1                 *LBD 08/86*
         LA    R5,1(R5)            BUMP R5                 *LBD 08/86*
         CLI   0(R1),C' '          END OF PARM ?           *LBD 08/86*
         BNH   NOPARM              YES                     *LBD 08/86*
         B     MVVOL               NO - KEEP MOVING        *LBD 08/86*
NOPARM   DS    0H                                          *LBD 12/83*
         EJECT
         GETMAIN R,LV=DSALEN                               *LBD 12/83*
         ST    R1,CORE                                     *LBD 12/83*
         LR    R8,R1                                       *LBD 12/83*
         SPACE 2
         USING DSAWRK,R8
         USING UCBWRK,R7
         EJECT
         SPACE
         EXTRACT TIOTA,'S',FIELDS=TIOT,MF=(E,EXTRACT)
         EJECT
*----------------------------------------------------------------*LBD*
*                                                                *LBD*
*        ACQUIRE DATASET NAME FROM ISPF                          *LBD*
*                                                                *LBD*
*----------------------------------------------------------------*LBD*
         L     R15,ISPLINK
         CALL  (15),(VDEFINE,ZPRF,VZPRF,CHAR,LZPRF),VL     *LBD 12/83*
         EJECT                                             *LBD 12/83*
         L     R15,ISPLINK
         CALL  (15),(VDEFINE,DSN,VDSN,CHAR,LDSN),VL              *LBD*
         EJECT                                             *LBD 12/83*
         L     R15,ISPLINK
         CALL  (15),(VGET,DSN),VL                                *LBD*
         EJECT                                             *LBD 12/83*
         CLI   VOLPARM+1,C' '      ANY VOL ?               *LBD 08/86*
         BE    NOVOLP              NO                      *LBD 08/86*
         L     R15,ISPLINK                                 *LBD 08/86*
         CALL  (15),(VDEFINE,VOLPARM,VVOL,CHAR,LVOL),VL    *LBD 08/86*
         SPACE 1                                           *LBD 08/86*
         L     R15,ISPLINK                                 *LBD 08/86*
         CALL  (15),(VGET,VOLPARM),VL                      *LBD 08/86*
NOVOLP   DS    0H                                          *LBD 08/86*
         EJECT                                             *LBD 12/83*
         L     R15,ISPLINK
         CALL  (15),(VGET,ZPRF),VL                         *LBD 12/83*
         EJECT                                             *LBD 12/83*
         LA    R1,ODSN
         LA    R2,VDSN
         CLI   0(R2),X'7D'             QUOTE ?
         BE    DSNUP                   YES - SKIP IT
         MVC   TDSN(8),VZPRF           MOVE PREFIX         *LBD 12/83*
         LA    R3,TDSN                                     *LBD 12/83*
FINDP    CLI   0(R3),C' '                                  *LBD 12/83*
         BE    MVCP                                        *LBD 12/83*
         LA    R3,1(R3)                                    *LBD 12/83*
         B     FINDP                                       *LBD 12/83*
MVCP     MVI   0(R3),C'.'                                  *LBD 12/83*
         LA    R3,1(R3)                                    *LBD 12/83*
         L     R1,LDSN                                     *LBD 12/83*
         BCTR  R1,R0                                       *LBD 12/83*
         STC   R1,MVCPDSN+1                                *LBD 12/83*
MVCPDSN  MVC   0(0,R3),VDSN                                *LBD 12/83*
         LA    R1,ODSN                                     *LBD 12/83*
         LA    R2,TDSN                                     *LBD 12/83*
DSNLP    DS    0H
         CLI   0(R2),X'7D'             QUOTE ?
         BE    EDSN                    YES - SKIP IT
         CLI   0(R2),C' '              END OF DSNAME
         BE    EDSN                    YES - SKIP IT
         CLI   0(R2),C'('              START OF MEMBER ?
         BE    HMEMBER                 YES
         MVC   0(1,R1),0(R2)           MOVE CHAR
         LA    R1,1(R1)
DSNUP    LA    R2,1(R2)
         B     DSNLP
HMEMBER  DS    0H
         LA    R1,OMEM                 -> MEMBER
         LA    R2,1(R2)                -> START OF MEMBER NAME
MLP      CLI   0(R2),C')'              END OF MEMBER NAME ?
         BE    EDSN                    YES
         MVC   0(1,R1),0(R2)           NO - MOVE IT
         LA    R1,1(R1)
         LA    R2,1(R2)
         B     MLP
EDSN     DS    0H                      END OF DSNAME
         L     R15,ISPLINK
         CALL  (15),(VDEFINE,NAMES,VNAMES,CHAR,LNAMES),VL        *LBD*
         MVC   MEMBER,OMEM
         EJECT
*--------------------------------------------------------------------*
*                                                                    *
*        ALLOC DATASET                                           *LBD*
*                                                                    *
*--------------------------------------------------------------------*
         SPACE 2
         CLI   VVOL,C' '           ANY VOL TO USE ??       *LBD 08/86*
         BNE   USEVOL              YES                     *LBD 08/86*
         ALLOC DDNRET=DDNRET,DSN=OURDSN,ERROR=S99FAIL,DISP=SHR   *LBD*
         MVC   OURDDN,DDNRET+2                                   *LBD*
         B     ALLOCOK                                     *LBD 08/86*
VOLMSG   DC    C'*** USING VOLSER  ***'                    *LBD 08/86*
USEVOL   DS    0H                                          *LBD 08/86*
         ALLOC DDNRET=DDNRETV,DSN=OURDSN,ERROR=S99FAIL,    *LBD 08/86*XX
               DISP=SHR,VOL=OURVOLA                        *LBD 08/86*
         MVC   OURDDN,DDNRETV+2                            *LBD 08/86*
ALLOCOK  DS    0H                                          *LBD 08/86*
         EJECT
*--------------------------------------------------------------------*
*                                                                    *
*   LOOK UP DDNAME IN TIOT, GET UCB INFORMATION, AND OBTAIN DSCB'S   *
*                                                                    *
*--------------------------------------------------------------------*
         SPACE 1
         L     R15,TIOTA
         LA    R15,TIOENTRY-TIOT(R15)
         USING TIOENTRY,R15
         XR    R14,R14
         SPACE
TIOLOOK  EQU   *
         CLC   TIOEDDNM,OURDDN
         BE    DDNHIT
         IC    R14,TIOELNGH
         LA    R15,0(R14,R15)
         LTR   R14,R14
         BP    TIOLOOK
         SPACE
         ABEND 100
         SPACE
DDNHIT   EQU   *
         ICM   R7,B'0111',TIOEFSRT
         MVC   VOLSER,UCBVOLI
         MVC   CUU,UCBNAME
         MVC   DWD,OURDDN
         SPACE
         DEVTYPE DWD,DVTWKA,DEVTAB
         SPACE
         LA    R1,DEVTAB                                   *LBD 11/83*
DEVLOOP  CLC   0(1,R1),UCBTYP+3        OUR DEVICE          *LBD 11/83*
         BE    HAVEDEV                 YES                 *LBD 11/83*
         LA    R1,9(R1)                -> NEXT DEVICE      *LBD 11/83*
         CLI   0(R1),X'FF'             END OF TABLE        *LBD 11/83*
         BNE   DEVLOOP                                     *LBD 11/83*
         MVC   MYDEVTYP,=CL8'UNKNOWN'                      *LBD 11/83*
         B     GOTDEV                                      *LBD 11/83*
HAVEDEV  MVC   MYDEVTYP,1(R1)                              *LBD 11/83*
         TM    UCBTYP+1,X'08'          3330V               *LBD 11/83*
         BZ    GOTDEV                                      *LBD 11/83*
         MVC   MYDEVTYP,=CL8'3330V'                        *LBD 11/83*
GOTDEV   DS    0H                                                *LBD*
         SPACE
         MVC   CAMLST,CAMSRCH
         EJECT
OBTAINF1 EQU   *
         LA    R15,ODSN
         ST    R15,CAMDSN
         LA    R15,VOLSER
         ST    R15,CAMSER
         LA    R15,OBTWKA
         ST    R15,CAMWKA
         XR    R0,R0
         SPACE
         OBTAIN CAMLST
         SPACE
         LTR   R15,R15
         BNZ   OBTNFAIL
         SPACE
         CLI   DS1NOEPV,3
         BNH   FORMAT
         SPACE
         LA    R15,DS1PTRDS
OBTAINF3 ST    R15,CAMDSN
         LA    R15,F3WKA
         ST    R15,CAMWKA
         MVC   CAMLST,CAMSEEK
         SPACE
         OBTAIN CAMLST
         SPACE
         LTR   R15,R15
         BNZ   OBTNFAIL
         SPACE
         CLI   DS3FMTID,C'3'
         LA    R15,DS2PTRDS
         BNE   OBTAINF3
         SPACE
         DROP  R15
         EJECT
*--------------------------------------------------------------------*
*                                                                    *
*   OUTPUT HEADINGS AND FORMAT DATA SET LABEL INFORMATION IN BUFFER  *
*                                                                    *
*--------------------------------------------------------------------*
         SPACE 1
FORMAT   EQU   *
         MVC   OUTPUT,MASK                                 *LBD 11/83*
         SPACE
*DS1SCAL EQU   DS1SCALO+1,3
         CVRT  SCAL
         CVRT  BLKL
         MVC   TRKCALDD,DS1BLKL    SAVE BLKSIZE             *LBD 03/85*
         EJECT
         CVRT  LRECL
         CVRT  KEYL
         MVC   TRKCALK,DS1KEYL     SAVE KEY FOR TRKCALC     *LBD 03/85*
         CVRT  RKP
         CVRT  NOEPV
         EJECT
RFAORM   LA    R15,FMTRECFM+L'FMTRECFM-1
         TM    DS1RECFM,B'00000110'
         BZ    RFT
         BCTR  R15,0
         TM    DS1RECFM,B'00000010'
         BZ    RFA
RFM      MVI   1(R15),C'M'
         B     RFT
RFA      MVI   1(R15),C'A'
RFT      TM    DS1RECFM,B'00100000'
         BZ    RFS
         MVI   0(R15),C'T'
         BCTR  R15,0
RFS      TM    DS1RECFM,B'00001000'
         BZ    RFB
         MVI   0(R15),C'S'
         BCTR  R15,0
RFB      TM    DS1RECFM,B'00010000'
         BZ    RFU
         MVI   0(R15),C'B'
         BCTR  R15,0
RFU      TM    DS1RECFM,B'11000000'
         BM    RFFORV
         BZ    UNITS
         MVI   0(R15),C'U'
         B     UNITS
RFFORV   TM    DS1RECFM,B'10000000'
         BO    RFF
         MVI   0(R15),C'V'
         B     UNITS
RFF      MVI   0(R15),C'F'
         EJECT
UNITS    XR    R15,R15
         IC    R15,DS1SCALO
         SRL   R15,6
         LA    R14,ALLCUNIT(R15)
         CLI   0(R14),C'A'                                 *LBD 11/83*
         BE    UNABS                                       *LBD 11/83*
         CLI   0(R14),C'B'                                 *LBD 11/83*
         BE    UNBLK                                       *LBD 11/83*
         CLI   0(R14),C'T'                                 *LBD 11/83*
         BE    UNTRK                                       *LBD 11/83*
*        ASSUME CYLINDER ALLOCATION                        *LBD 11/83*
UNCYL    MVC   FMTUN(3),=C'CYL'                            *LBD 11/83*
         B     UNDONE                                      *LBD 11/83*
UNABS    MVC   FMTUN(3),=C'ABS'                            *LBD 11/83*
         B     UNDONE                                      *LBD 11/83*
UNBLK    MVC   FMTUN(3),=C'BLK'                            *LBD 11/83*
         B     UNDONE                                      *LBD 11/83*
UNTRK    MVC   FMTUN(3),=C'TRK'                            *LBD 11/83*
UNDONE   DS    0H                                          *LBD 11/83*
         SPACE
         LA    R15,FMTDSORG+L'FMTDSORG-2
         TM    DS1DSORG+1,X'08'        VSAM DATASET ?       *LBD 02/84*
         BO    DSVSAM                                       *LBD 02/84*
         TM    DS1DSORG,1
         BZ    DODSORG
         MVI   1(R15),C'U'
         BCTR  R15,0
         B     DODSORG                                      *LBD 02/84*
         SPACE
DSVSAM   MVC   FMTDSORG+2(2),=C'VS'    SET AS VSAM          *LBD 02/84*
         B     DATES                   SKIP DIR COUNT       *LBD 02/84*
         SPACE 1                                            *LBD 02/84*
DODSORG  MVC   DWD(1),DS1DSORG
         NI    DWD,X'E2'
         TR    DWD(1),TRDSORG
         XR    R1,R1
         IC    R1,DWD
         LA    R14,DSORGMN(R1)
         MVC   0(2,R15),0(R14)
         CLC   FMTDSORG+2(2),=C'PO'                        *LBD 11/83*
         BNE   DATES                   NO - SKIP DIR COUNT *LBD 11/83*
         EJECT                                             *LBD 11/83*
*----------------------------------------------------------*LBD 11/83*
*                                                          *LBD 11/83*
*        COUNT  USED DIRECTORY BLOCKS                      *LBD 11/83*
*                                                          *LBD 11/83*
*----------------------------------------------------------*LBD 11/83*
         MVC   PDS+40(8),OURDDN        SET UP DDNAME       *LBD 11/83*
         OPEN  PDS                                         *LBD 11/83*
         USING DIR,R10                                     *LBD 11/83*
READDIR  GET   PDS                                         *LBD 11/83*
         LR    R10,R1                                      *LBD 11/83*
         LH    R9,0(R10)                                   *LBD 11/83*
         AR    R9,R10                  -> END OF DIR BLOCK *LBD 11/83*
         LA    R10,2(R10)              -> PAST LENGTH      *LBD 11/83*
         AP    DIRACNT,=P'01'          ADD 1 TO ALLOC CNT  *LBD 11/83*
PLPS     CLI   DIRNAME,X'FF'           LAST USED BLOCK ?   *LBD 11/83*
         BE    ENDUSE                  YES -               *LBD 11/83*
         TM    DIRFLAG,DIRALIAS        ALIAS ??            *LBD 11/83*
         BZ    NOTALIAS                NO                  *LBD 11/83*
         AP    ALIASCNT,=P'01'                             *LBD 11/83*
NOTALIAS DS    0H                                          *LBD 11/83*
         AP    MEMCNT,=P'01'                               *LBD 11/83*
         SR    R1,R1                                       *LBD 11/83*
         NI    DIRFLAG,X'1F'           TURN OFF MISC BITS  *LBD 11/83*
         IC    R1,DIRFLAG                                  *LBD 11/83*
         LA    R1,6(R1)                ADD 6 HALF WORDS    *LBD 11/83*
         SLA   R1,1                    MULT BY 2           *LBD 11/83*
         AR    R10,R1                                      *LBD 11/83*
         CR    R10,R9                                      *LBD 11/83*
         BL    PLPS                                        *LBD 11/83*
         AP    DIRCNT,=P'01'           INCR COUNT BY 1     *LBD 11/83*
         B     READDIR                 AND READ NEXT BLOCK *LBD 11/83*
ENDUSE   AP    DIRACNT,=P'01'          ADD 1 TO ALLOC CNT  *LBD 11/83*
         GET   PDS                                         *LBD 11/83*
         B     ENDUSE                                      *LBD 11/83*
EOFPDS   CLOSE PDS                     DONE - CLOSE IT     *LBD 11/83*
         AP    DIRCNT,=P'01'           FOR LAST BLOCK      *LBD 11/83*
         SP    DIRACNT,=P'01'          -1 TO CORRECT BUG   *LBD 12/83*
         SPACE
DATES    CVDT  CREDT
         PACK  DWD,FMTCREDT+1(5)       PACK JULIAN DATE    *LBD 11/83*
         LA    R1,DWD+4                LOAD PACKED CDATE   *LBD 11/83*
         BAL   R14,DATEROU             AND GET GREG DATE   *LBD 11/83*
         MVC   GCREDT(8),0(R1)         INTO ISPF VARIABLE  *LBD 11/83*
         CVDT  REFD
         PACK  DWD,FMTREFD+1(5)        PACK JULIAN DATE    *LBD 11/83*
         LA    R1,DWD+4                LOAD PACKED USE DATE*LBD 11/83*
         BAL   R14,DATEROU             AND GET GREG DATE   *LBD 11/83*
         MVC   GUSEDT(8),0(R1)         INTO ISPF VARIABLE  *LBD 11/83*
         XR    R15,R15
         ST    R15,BTRALC
         ICM   R15,B'0001',DS1NOEPV
         BZ    EXTCVRT
         MVC   DS3FMTID(9*10),DS3ADEXT
         MVC   DS3EXTNT-3*10(3*10),DS1EXT1
         LA    R14,DS3EXTNT-3*10
         EJECT
         XC    DS1ALCYL,DS1ALCYL                           *LBD 12/83*
         XC    DS1USCYL,DS1USCYL                           *LBD 12/83*
         XC    DS1BALC,DS1BALC                              *LBD 03/85*
         XC    DS1BUSE,DS1BUSE                              *LBD 03/85*
EXTENTS  EQU   *
         USING EXTENT,R14
         CLI   EXTTYPE,0
         BNH   EXTLOOP
* DEVTPC EQU   DVTWKA+10
         LH    R1,EXTHICC              LOAD HI CYL         *LBD 02/84*
         SH    R1,EXTLOCC              SUB LOC CYL         *LBD 02/84*
         LA    R1,1(R1)                ADD FOR CURRENT CYL *LBD 02/84*
CYLOK    A     R1,DS1ALCYL             ADD ALLOC CYL       *LBD 02/84*
         ST    R1,DS1ALCYL             AND SAVE IT         *LBD 02/84*
         LH    R1,EXTLOCC
         MH    R1,DEVTPC
         AH    R1,EXTLOHH
         LH    R0,EXTHICC
         MH    R0,DEVTPC
         AH    R0,EXTHIHH
         BCTR  R1,0
         SR    R0,R1
         A     R0,BTRALC
         ST    R0,BTRALC
         SPACE
EXTLOOP  LA    R14,EXTNEXT
         BCT   R15,EXTENTS
         SPACE
EXTCVRT  EQU   *
         CLC   =C'BLK',FMTUN       BLOCK ALLOCATION ?       *LBD 03/85*
         BNE   NOTBLK              NO                       *LBD 03/85*
         TRKCALC FUNCTN=TRKCAP,UCB=(R7),REGSAVE=YES,R=1,    *LBD 03/85*X
               K=TRKCALK,DD=TRKCALDD                        *LBD 03/85*
         LR    R4,R0               SAVE BLKS/TRK            *LBD 03/85*
         L     R3,DS1TRALC         LOAD ALLOC TRKS          *LBD 03/85*
         SR    R2,R2               ZERO R2 FOR MULTIPLY     *LBD 03/85*
         LR    R1,R0               GET BLKS PER TRK         *LBD 03/85*
         MR    R2,R1               GET BLKS IN DATASET      *LBD 03/85*
         ST    R3,DS1BALC          SAVE BLOCKS ALLOCATED    *LBD 03/85*
         CVRT  BALC                CONVERT TO DISPLAY       *LBD 03/85*
         LH    R3,DS1TRUSE         LOAD USED TRACKS         *LBD 03/85*
         SR    R2,R2               ZERO R2 FOR MULTIPLY     *LBD 03/85*
         MR    R2,R4               GET BLKS IN DATASET      *LBD 03/85*
         ST    R3,DS1BUSE          SAVE BLOCKS ALLOCATED    *LBD 03/85*
         CVRT  BUSE                CONVERT TO DISPLAY       *LBD 03/85*
NOTBLK   DS    0H                                           *LBD 03/85*
*DS1TRALC EQU  BTRALC,4
         CVRT  TRALC
*DS1TRUSE EQU  DS1LSTAR,2
         ICM   R15,B'11',DS1LSTAR
         CLI   DS1LSTAR+2,0                                       82089
         BNH   *+L'*+4
         LA    R15,1(R15)
         STCM  R15,B'11',DS1LSTAR
         CVRT  TRUSE
         LR    R3,R15                  LOAD USED TRACKS    *LBD 02/84*
         SR    R2,R2                   ZERO R2             *LBD 02/84*
         LH    R1,DEVTPC               LOAD TRKS/CYL       *LBD 02/84*
         DR    R2,R1                   DIVIDE              *LBD 02/84*
         LTR   R2,R2                   ANY REMAINDER       *LBD 02/84*
         BZ    NOLEFT                  NO                  *LBD 02/84*
         LA    R3,1(R3)                YES - ADD 1 CYL     *LBD 02/84*
NOLEFT   DS    0H                                          *LBD 02/84*
         ST    R3,DS1USCYL             SAVE IT             *LBD 02/84*
         L     R1,DS1ALCYL             LOAD ALLOC CYL      *LBD 02/84*
         LTR   R1,R1                   ANY CYL ALLOC ?     *LBD 02/84*
         BNZ   DOCYL                   YES                 *LBD 02/84*
         LH    R1,=H'01'               SET AS MIN 1        *LBD 02/84*
DOCYL    ST    R1,DS1ALCYL             RESAVE IT           *LBD 02/84*
         CVRT  ALCYL                                       *LBD 12/83*
         CVRT  USCYL                                       *LBD 12/83*
         EJECT
*--------------------------------------------------------------------*
*                                                                    *
*   TRANSLATE OUT EDIT CHARACTERS AND WRITE FORMATTED LABEL DATA     *
*                                                                    *
*--------------------------------------------------------------------*
         SPACE
         TR    OUTPUT(MASKEND-MASK),TREDIT
         JUSTL BALC,FMTBALC        BLOCKS ALLOCATED         *LBD 03/85*
         JUSTL BUSE,FMTBUSE        BLOCKS USED              *LBD 03/85*
         JUSTL TRALC,FMTTRALC                                    *LBD*
         JUSTL TRUSE,FMTTRUSE                                    *LBD*
         JUSTL EX,FMTNOEPV                                       *LBD*
         MVC   UNIT(3),FMTUN                                     *LBD*
         JUSTL SCALO,FMTSCAL                                     *LBD*
         JUSTL RECFM,FMTRECFM                                    *LBD*
         JUSTL BLKSIZE,FMTBLKL                                   *LBD*
         JUSTL LRECL,FMTLRECL                                    *LBD*
         JUSTL KEYLEN,FMTKEYL                                    *LBD*
         JUSTL DSORG,FMTDSORG                                    *LBD*
         JUSTL RKP,FMTRKP                                        *LBD*
         JUSTL ALCYL,FMTALCYL                              *LBD 12/83*
         JUSTL USCYL,FMTUSCYL                              *LBD 12/83*
         MVC   CREDT(5),FMTCREDT+1                               *LBD*
         MVC   USEDT(5),FMTREFD+1                                *LBD*
         MVC   MYVOLSER(6),VOLSER                                *LBD*
         MVC   FMTWORK,=XL8'4020202020202021'              *LBD 11/83*
         ED    FMTWORK,DIRCNT                              *LBD 11/83*
         JUSTL DIRUSE,FMTWORK                              *LBD 11/83*
         MVC   FMTWORK,=XL8'4020202020202021'              *LBD 11/83*
         ED    FMTWORK,DIRACNT                             *LBD 11/83*
         JUSTL DIRALLOC,FMTWORK                            *LBD 11/83*
         MVC   FMTWORK,=XL8'4020202020202021'              *LBD 11/83*
         ED    FMTWORK,MEMCNT                              *LBD 11/83*
         JUSTL MEMBERS,FMTWORK                             *LBD 11/83*
         MVC   FMTWORK,=XL8'4020202020202021'              *LBD 11/83*
         ED    FMTWORK,ALIASCNT                            *LBD 11/83*
         JUSTL ALIASES,FMTWORK                             *LBD 11/83*
         LA    R1,RECFM                                    *LBD 11/83*
         LA    R2,ATRECFM                                  *LBD 11/83*
FXRECFM  DS    0H                                          *LBD 11/83*
         MVC   0(1,R2),0(R1)                               *LBD 11/83*
         LA    R1,1(R1)                                    *LBD 11/83*
         LA    R2,2(R2)                                    *LBD 11/83*
         CLI   0(R1),C' '              END OF RECFM ?      *LBD 11/83*
         BE    DOPUT                                       *LBD 11/83*
         B     FXRECFM                                     *LBD 11/83*
DOPUT    DS    0H                                          *LBD 11/83*
         L     R15,ISPLINK
         CALL  (15),(VPUT,NAMES),VL
         SPACE 2                                          *LBD 01/85*
         L     R15,ISPLINK
         CALL  (15),(VDELETE,NAMES),VL                           *LBD*
         L     R15,ISPLINK
         CALL  (15),(VDELETE,DSN),VL                             *LBD*
         SPACE
         EJECT
*-------------------------------------------------------------------*
*                                                                   *
*   WHEN OUTPUT HAS BEEN GENERATED, FREE DATASET                    *
*                                                                   *
*-------------------------------------------------------------------*
         SPACE 2
FREE     EQU   *
         FREE  DDN=OURDDNA,ERROR=S99FAIL
         BE    DONE
         EJECT
*-------------------------------------------------------------------*
*                                                                   *
*   ABNORMAL SERVICE ROUTINE                                        *
*                                                                   *
*-------------------------------------------------------------------*
         SPACE
OBTNFAIL EQU   *
         B     DONE
         SPACE
S99FAIL  S99FAIL
         LA    R2,99              SET RETURN CODE          *LBD 02/84*
         B     ALLDONE                                     *LBD 02/84*
         EJECT
*--------------------------------------------------------------------*
*                                                                    *
*        EXIT                                                    *LBD*
*                                                                    *
*--------------------------------------------------------------------*
         SPACE 2
DONE     DS    0H
         SR    R2,R2              SET OK RETURN CODE       *LBD 02/84*
         SPACE 1                                                 *LBD*
ALLDONE  DS    0H                                          *LBD 02/84*
         DELETE EP=ISPLINK
         SPACE 1                                                 *LBD*
         FREEMAIN R,LV=DSALEN,A=CORE                       *LBD 12/83*
         LR    R15,R2             SET RETURN CODE          *LBD 02/84*
         $EPILOG ,                                               *LBD*
         SPACE 2
         PRINT NOGEN
         EJECT
*----------------------------------------------------------*LBD 11/83*
*                                                          *LBD 11/83*
*        CONVERT JULIAN DATE TO GREGORIAN DATE             *LBD 11/83*
*                                                          *LBD 11/83*
*----------------------------------------------------------*LBD 11/83*
*        REG = THE REGISTER CONTAING THE PACKED JULIAN DATE
*        THIS ROUTINE ALSO USES REGISTERS 1,2,3
*        THIS ROUTINE CONVERTS THE JULIAN DATE INTO THE CALENDAR DATE
*        EX.   FROM 75339 TO 12/05/75
DATEROU  ZAP   MX001M,=P'01'           INITIALIZE MONTH
         ZAP   T001BL+2(2),=P'28'      INITIALIZE FEB
         MVC   R1001ST(4),0(R1)        MOVE JULIAN DATE    *LBD 11/83*
         XC    W001X,W001X             ZERO WORK AREA
         MVC   W001X+3(1),R1001ST+1    MOVE YEAR INTO WORK
         L     R1,W001X                LOAD YEAR INTO REGISTER
         SLL   R1,4                    SHIFT LEFT 1/2 BYTE
         ST    R1,W001X                STORE YEAR INTO WORK AGAIN
         OI    W001X+3,X'0F'           CONVERT YEAR INTO PACKED FORMAT
         ZAP   YR001X,W001X            SAVE YEAR
         DP    W001X,=P'04'            DIVIDE YEAR BY 4
         CP    W001X+2(2),=P'00'       IF REMAINDER THEN LEAP YEAR
         BNE   XNOLEAPX                NOT A LEAP YEAR
         ZAP   T001BL+2(2),=P'29'      SET MONTH 2 EQUAL TO 29 DAYS
XNOLEAPX LA    1,T001BL                SET POINTER TO MONTH TABLE
         L     2,=F'02'                SET COUNTER
         LA    3,MX001M-1              SET POINTER TO END OF TABLE
XCPR01   CP    R1001ST+2(2),0(2,1)     COMPARE DAYS TO MONTH DABLE
         BNH   XDATEX                  LESS THAN TABLE
         AP    MX001M,=P'01'           INCRIMENT MONTH COUNTER
         SP    R1001ST+2(2),0(2,1)     SUB TABLE DAY FORM JULIAN DAY
         BXLE  1,2,XCPR01              CONTINUE SCAN
XDATEX   ZAP   DYXX,R1001ST+2(2)       SET DAY
         UNPK  W001X,DYXX              UNPACK DAY
         OI    W001X+3,X'F0'           RESET SIGN
         MVC   XD1(2),W001X+2          MOVE DAY TO O/P AREA
         UNPK  W001X,MX001M            UNPACK MONTH
         OI    W001X+3,X'F0'           RESET SIGN
         MVC   XM1(2),W001X+2          MOVE MONTH TO O/P AREA
         UNPK  W001X,YR001X            UNPACK YEAR
         OI    W001X+3,X'F0'           RESER SIGN
         MVC   XY1(2),W001X+2          MOVE YEAR TO O/P AREA
         LA    R1,XM1                  LOAD REGISTER WITH ADDR OF CAL
         BR    R14                     RETURN TO CALLER
         EJECT
*--------------------------------------------------------------------*
*                                                                    *
*   DECLARE ALL CONSTANTS, LITERALS, WORK AREAS, AND CONTROL BLOCKS  *
*                                                                    *
*--------------------------------------------------------------------*
         SPACE 2
CORE     DC    F'0'                                        *LBD 12/83*
         SPACE 2
MASK     DC    X'402020202120402020202120202120404040'
*                FMTTRALC    FMTTRUSE    NOEPV  FMTUN      *LBD 02/84*
         DC    X'402020202120404040404040402020202120'
*                SCAL         RECFM      BLKL              *LBD 02/84*
         DC    X'4020202021204020202021204020212040202120'
*                LRECL       KEYL         DSORG  RKP       *LBD 02/84*
         DC    X'402020202120402020202120'
*                CREDT       REFD                          *LBD 02/84*
         DC    X'402020202021402020202021'                 *LBD 02/84*
*                ALCYL       USCYL                         *LBD 02/84*
         DC    X'402020202021'                              *LBD 03/85*
*                BALC                                       *LBD 03/85*
         DC    X'402020202021'                              *LBD 03/85*
*                BUSE                                       *LBD 03/85*
MASKEND  EQU   *
         SPACE 2                                           *LBD 11/83*
DEVTAB   DS    0F                                          *LBD 11/83*
         DC    X'09',CL8'3330'                             *LBD 11/83*
         DC    X'0B',CL8'3350'                             *LBD 11/83*
         DC    X'0D',CL8'3330-1'                           *LBD 11/83*
         DC    X'0E',CL8'3380'                             *LBD 11/83*
         DC    X'FF'                   END OF TABLE        *LBD 11/83*
         SPACE 2                                           *LBD 11/83*
TREDIT   DC    256AL1(*-TREDIT)
         ORG   TREDIT+X'20'
         DC    X'4040'
         ORG   TREDIT+256
TRDSORG  DC    XL256'00'
         ORG   TRDSORG+X'80'
         DC    AL1(2)
         ORG   TRDSORG+X'40'
         DC    AL1(4)
         ORG   TRDSORG+X'20'
         DC    AL1(6)
         ORG   TRDSORG+X'02'
         DC    AL1(8)
         ORG   TRDSORG+256
DSORGMN  DC    C'  ISPSDAPO'       DATA SET ORGANIZATIONS
ALLCUNIT DC    C'ABTC'             ALLOCATION UNIT MNEMONICS
         EJECT                                             *LBD 11/83*
*******  CONSTANTS USED BY THE DATE CONVERSION ROUTINE     *LBD 11/83*
W001X    DC    F'00'
T001BL   EQU   *                       MONTH TABLE
         DC    PL2'31'
         DC    PL2'28'
         DC    PL2'31'
         DC    PL2'30'
         DC    PL2'31'
         DC    PL2'30'
         DC    PL2'31'
         DC    PL2'31'
         DC    PL2'30'
         DC    PL2'31'
         DC    PL2'30'
         DC    PL2'31'
MX001M   DC    PL2'00'                 MONTH WORK AREA
R1001ST  DC    F'00'                   REGISTER SAVE AREA FOR REG
YR001X   DC    PL2'00'                 YEAR WORK AREA
DYXX     DC    PL2'00'                 DAY WORK AREA
XM1      DC    CL2'  '                 MONTH O/P AREA
         DC    C'/'
XD1      DC    CL2'  '                 DAY O/P AREA
         DC    C'/'
XY1      DC    CL2'  '                 YEAR O/P AREA
         EJECT
CAMSRCH  CAMLST      SEARCH,*-*,*-*,*-*
CAMSEEK  CAMLST      SEEK,*-*,*-*,*-*
*        PRINT       DATA
         SPACE
         LTORG
         EJECT                                                   *LBD*
ISPLINK  DC    V(ISPLINK)
DIRCNT   DC    PL4'0'                  COUNT OF USED DIR   *LBD 11/83*
DIRACNT  DC    PL4'0'                  ALLOC DIR BLOCKS    *LBD 11/83*
MEMCNT   DC    PL4'0'                  MEMBER COUNT        *LBD 11/83*
ALIASCNT DC    PL4'0'                  ALIAS COUNT         *LBD 11/83*
OURVOLA  DC    A(VVOL),Y(6)                                *LBD 08/86*
OURDDNA  DC    A(OURDDN),Y(8)                                    *LBD*
OURDDN   DC    CL8' '                                            *LBD*
OURDSN   DC    A(ODSN),Y(44)                                     *LBD*
ODSN     DC    CL44' '                                           *LBD*
OMEM     DC    CL8' '                                            *LBD*
TDSN     DC    CL56' '                                           *LBD*
VDSN     DC    CL56' '                                           *LBD*
VVOL     DC    CL6' '                                      *LBD 08/86*
VZPRF    DC    CL8' '                                      *LBD 12/83*
VDEFINE  DC    CL8'VDEFINE'                                      *LBD*
VGET     DC    CL8'VGET'                                         *LBD*
VPUT     DC    CL8'VPUT'                                         *LBD*
DSN      DC    C'(DSNINFO )'                                     *LBD*
VOLPARM  DC    C'(        )'                               *LBD 08/86*
ZPRF     DC    C'(ZPREFIX)'                                *LBD 12/83*
CHAR     DC    CL8'CHAR'                                         *LBD*
LDSN     DC    A(L'VDSN)                                         *LBD*
LVOL     DC    A(6)                                        *LBD 08/86*
LZPRF    DC    A(L'VZPRF)                                  *LBD 12/83*
VDELETE  DC    CL8'VDELETE'                                      *LBD*
NAMES    DC    C'(TRALC,TRUSE,EX,UNIT,SCALO,RECFM,'        *LBD 11/83*
         DC    C'BLKSIZE,LRECL,KEYLEN'                     *LBD 11/83*
         DC    C',DSORG,RKP,CREDT,USEDT,MEMBER,ATRECFM,'         *LBD*
         DC    C'VOLSER,DEVTYPE,DIRUSE,DIRALLOC'                 *LBD*
         DC    C',GCREDT,GUSEDT'                           *LBD 11/83*
         DC    C',MEMBERS,ALIASES'                         *LBD 11/83*
         DC    C',ALCYL,USCYL'                             *LBD 12/83*
         DC    C',BALC,BUSE'                                *LBD 03/85*
         DC    C',)'                                       *LBD 11/83*
LNAMES   DC    A(8)                                              *LBD*
VNAMES   DS    0F                                                *LBD*
TRALC    DC    CL8' '                                            *LBD*
TRUSE    DC    CL8' '                                            *LBD*
EX       DC    CL8' '                                            *LBD*
UNIT     DC    CL8' '                                            *LBD*
SCALO    DC    CL8' '                                            *LBD*
RECFM    DC    CL8' '                                            *LBD*
BLKSIZE  DC    CL8' '                                            *LBD*
LRECL    DC    CL8' '                                            *LBD*
KEYLEN   DC    CL8' '                                            *LBD*
DSORG    DC    CL8' '                                            *LBD*
RKP      DC    CL8' '                                            *LBD*
CREDT    DC    CL8' '                                            *LBD*
USEDT    DC    CL8' '                                            *LBD*
MEMBER   DC    CL8' '                                            *LBD*
ATRECFM  DC    CL8' '                                            *LBD*
MYVOLSER DC    CL8' '                                            *LBD*
MYDEVTYP DC    CL8' '                                            *LBD*
DIRUSE   DC    CL8' '                                      *LBD 11/83*
DIRALLOC DC    CL8' '                                      *LBD 11/83*
GCREDT   DC    CL8' '                                      *LBD 11/83*
GUSEDT   DC    CL8' '                                      *LBD 11/83*
MEMBERS  DC    CL8' '                                      *LBD 11/83*
ALIASES  DC    CL8' '                                      *LBD 11/83*
ALCYL    DC    CL8' '                                      *LBD 12/83*
USCYL    DC    CL8' '                                      *LBD 12/83*
BALC     DC    CL8' '                                       *LBD 03/85*
BUSE     DC    CL8' '                                       *LBD 03/85*
         EJECT
PDS      DCB   DSORG=PS,MACRF=GL,DDNAME=NULLDDN,LRECL=256, *LBD 11/83* X
               BLKSIZE=256,RECFM=F,EODAD=EOFPDS            *LBD 11/83*
         EJECT
         SPACE 2
EXTENT   DSECT
         SPACE
EXTTYPE  DS    BL1
EXTSEQ   DS    XL1
EXTLOCC  DS    HL2
EXTLOHH  DS    HL2
EXTHICC  DS    HL2
EXTHIHH  DS    HL2
         SPACE
EXTNEXT  EQU   *
         EJECT
TIOT     DSECT
         IEFTIOT1
         EJECT
UCBWRK   DSECT
         IEFUCBOB
         EJECT
DSAWRK   DSECT
DSASTART DS    0H                                          *LBD 12/83*
         SPACE
TIOTA    DS    A
ANS      DS    A
ECB      DS    A
UWA      DS    A
DWD      DS    D
OBTSTRT  DS    CL44                                        *LBD 12/83*
OBTWKA   DS    0D,XL148
F3WKA    DS    0D,XL148
DVTWKA   DS    5F
FAIL     DS    4F
BTRALC   DS    F
CAMLST   DS    F
CAMDSN   DS    A
CAMSER   DS    A
CAMWKA   DS    A
VOLSER   DS    CL6
CUU      DS    CL3
TRKCALK  DS    X                   KEYLEN OF DATASET        *LBD 03/85*
TRKCALDD DS    H                   BLKSIZE OF DATASET       *LBD 03/85*
         SPACE 2                                            *LBD 03/85*
         DYNSPACE ,                                              *LBD*
         EJECT
EXTRACT  EXTRACT  TIOTA,FIELDS=TIOT,MF=L
         EJECT
         SPACE
OUTLAST  DS    A
OUTLLEN  DS    2H
OUTPUT   DS    0CL(MASKEND-MASK)
FMTTRALC DS    ZL6
FMTTRUSE DS    ZL6
FMTNOEPV DS    ZL3
FMTUN    DS    CL3
FMTSCAL  DS    ZL6
FMTRECFM DS    CL6
FMTBLKL  DS    ZL6
FMTLRECL DS    ZL6
FMTKEYL  DS    ZL6
FMTDSORG DS    CL4
FMTRKP   DS    ZL4
FMTCREDT DS    ZL6
FMTREFD  DS    ZL6                                         *LBD 11/83*
FMTALCYL DS    ZL6                                         *LBD 12/83*
FMTUSCYL DS    ZL6                                         *LBD 12/83*
FMTBALC  DS    ZL6                                          *LBD 03/85*
FMTBUSE  DS    ZL6                                          *LBD 03/85*
FMTWORK  DS    ZL8                                         *LBD 11/83*
DS1ALCYL DS    F                                           *LBD 12/83*
DS1USCYL DS    F                                           *LBD 12/83*
DS1BALC  DS    F                                            *LBD 03/85*
DS1BUSE  DS    F                                            *LBD 03/85*
         EJECT                                                   *LBD*
         ORG   OBTWKA-44
         IECSDSL1 (1)
         SPACE
         ORG   F3WKA
         SPACE
         IECSDSL1 (3)
         SPACE
         ORG   F3WKA
         SPACE
         IECSDSL1 (2)
         SPACE
         ORG
         SPACE
DSALEN   EQU   *-DSASTART                                  *LBD 12/83*
         SPACE
DS1SCAL  EQU   DS1SCALO+1,3
DEVTPC   EQU   DVTWKA+10
DS1TRALC EQU   BTRALC,4
DS1TRUSE EQU   DS1LSTAR,2
         EJECT                                                   *LBD*
DIR      DSECT                                             *LBD 12/83*
DIRNAME  DS    CL8                                         *LBD 12/83*
DIRTTR   DS    XL3                                         *LBD 12/83*
DIRFLAG  DS    X                                           *LBD 12/83*
DIRALIAS EQU   X'80'                                       *LBD 12/83*
         EJECT                                                   *LBD*
         IEFZB4D0                                                *LBD*
         EJECT                                                   *LBD*
         IEFZB4D2                                                *LBD*
         END
