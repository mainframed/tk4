SOFTLOG  TITLE 'ISPF TABLE BUILD FOR LOGREC SOFTWARE EVENT HISTORY'
***********************************************************************
*        THIS PROGRAM IS A SUBROUTINE WHICH RUNS UNDER ISPF.
*        IT READS AN ACCUMULATION (HISTORY) DATA SET CREATED BY EREP
*        AND MAKES ENTRIES IN A TABLE NAMED SOFTLOG. ENTRIES ARE MADE
*        ONLY FOR EOD, IPL, AND SOFTWARE RECORDS--ALL OTHERS ARE
*        IGNORED. IT IS ASSUMED THAT THE CALLER HAS OPENED THE SOFTLOG
*        TABLE WITH THE APPROPRIATE VARIABLE NAMES DEFINED.
***********************************************************************
         EJECT
SOFTLOG  CSECT
SOFTWARE DSECT                     EREP SOFTWARE RECORD
HDRTYP   DS    B                   CLASS/SOURCE
HDROPRN  DS    B                   SYSTEM/RELEASE LEVEL
HDRIS    DS    B                   RECORD INDEPENDENT SWITCHES
HDRDS    DS    BL3                 RECORD DEPENDENT SWITCHES
HDRCNT   DS    B                   RECORD COUNT
         DS    B
HDRTM    DS    F                   SYSTEM DATE OF INCIDENT
         DS    F                   SYSTEM TIME OF INCIDENT
HDRCPID  DS    B                   MACHINE VERSION CODE
CPU      DS    XL3                 CPU SERIAL NUMBER
         DS    XL2                 CPU MACHINE MODEL NUMBER
         DS    H                   MAXIMUM LENGTH OF LOGOUT AREA
JOBID    DS    CL8                 JOB NAME
         IHASDWA DSECT=NO          SDWA
ERRORID  DS    0XL10               RTM-GENERATED ERROR IDENTIFIER
         DS    XL2                 SEQUENCE NUMBER
         DS    XL2                 CPU IDENTIFIER
         DS    XL2                 ASID
         DS    XL4                 TIME STAMP
         EJECT
         REGEQU                                            *LBD 01/86*
         EJECT
         CVT   DSECT=YES,PREFIX=YES                        *LBD 01/86*
         EJECT                                             *LBD 01/86*
         IEFJESCT TYPE=DSECT                               *LBD 01/86*
         EJECT                                             *LBD 01/86*
         IEFJSCVT                                          *LBD 01/86*
         EJECT
IPLEOD   DSECT                     EREP IPL OR EOD RECORD
CLASRC   DS    B                   CLASS/SOURCE
OPSYS    DS    B                   SYSTEM/RELEASE LEVEL
SW1      DS    BL4                 RECORD SWITCHES
         DS    BL2                 NOT USED
DATE     DS    F                   SYSTEM DATE
TIME     DS    F                   SYSTEM TIME
CPUSER   DS    B                   MACHINE VERSION CODE
CPUSER1  DS    XL3                 CPU SERIAL NUMBER
CPUMODEL DS    XL2                 CPU MACHINE MODEL NUMBER
MCELLNG  DS    H                   NOT USED
SUBSYSID DS    B                   DEVICE TYPE/PROGRAM THAT CAUSED IPL
         DS    BL3                 NOT USED
REASON   DS    CL2                 ALPHANUMERIC REASON FOR IPL
         DS    BL2                 NOT USED
CHANASSN DS    BL8                 CHANNEL TYPE ASSIGNED TO SYSTEM
HIGHADDR DS    F                   ADDRESS LAST VALID BYTE OF STORAGE
         DS    BL4                 RESERVED
LASTACT  DS    BL8                 LAST ACTIVITY TIME AND DATE
         EJECT
***********************************************************************
*        INITIALIZATION
***********************************************************************
SOFTLOG  CSECT
         SAVE  (14,12)
         USING SOFTLOG,15
         MODID ,
         DROP  15
         LR    12,15
         LA    11,2048(12)                                 *LBD 01/86*
         LA    11,2048(11)                                 *LBD 01/86*
         USING SOFTLOG,12,11
         ST    13,SAVE+4
         LA    13,SAVE
         EJECT
***********************************************************************
*        DEFINE ISPF TABLE VARIABLES
***********************************************************************
         ISPF  LOAD                                        *LBD 01/86*
         EJECT                                             *LBD 11/86*
         VDEFINE '(T1 T2 T3 T4 T5 T6 T7 T8)',COUNT,FIXED,4 *LBD 11/86*
         VDEFINE '(C1 C2 C3 C4 C5 C6 C7 C8)',NAMES,CHAR,1  *LBD 11/86*
         EJECT                                             *LBD 11/86*
*                                                          *LBD 11/86*
**       INFORMATION USED BY CPU NAME/SERIAL # ACQUISITION *LBD 11/86*
*                                                          *LBD 11/86*
         VDEFINE '(CNTR)',NODENAME,CHAR,8                  *LBD 11/86*
         VGET    '(CNTR)'                                  *LBD 11/86*
         VDEFINE '(NODE)',NODE,CHAR,8                      *LBD 11/86*
         VDEFINE '(CPU)',TCPU,CHAR,8                       *LBD 11/86*
         VDEFINE '(SERIAL1 SERIAL2 SERIAL3 SERIAL4)',      *LBD 11/86*XX
               SERIALS,CHAR,6                              *LBD 11/86*
         TBOPEN 'IPCCPU',WRITE='NOWRITE',SHARE='SHARE'     *LBD 11/86*
         LA    R4,NAMES           -> NAMES TABLE           *LBD 01/86*
         LA    R7,COUNT           -> VARIABLE COUNT        *LBD 01/86*
         LA    R8,CPUTABLE        -> OUR CPU TABLE         *LBD 01/86*
GETCPULP DS    0H                                          *LBD 11/86*
         TBSKIP 'IPCCPU'           SKIP TO NEXT ENTRY      *LBD 11/86*
         LTR   R15,R15             TEST END OF TABLE       *LBD 11/86*
         BNZ   CPUTEND             AT END - CLOSE IT       *LBD 11/86*
         CLC   NODENAME,NODE       REQUESTED NODE ?        *LBD 11/86*
         BNE   GETCPULP            NO - GET NEXT           *LBD 11/86*
         LA    R2,SERIALS          -> SERIAL NUMBER ENTRIES*LBD 11/86*
         CLI   0(R2),C' '          ANY SERIALS             *LBD 11/86*
         BE    GETCPULP            NO - MUST BE ALIAS      *LBD 11/86*
         MVC   0(1,R4),TCPU        MOVE CPU TO CPU TABLE   *LBD 11/86*
         LA    R4,1(R4)            BUMP CPU ID TABLE       *LBD 11/86*
CPUSERLP DS    0H                                          *LBD 11/86*
         ST    R7,4(R8)            SAVE COUNTER ADDR       *LBD 11/86*
         MVC   0(1,R8),TCPU        MOVE CPU TO CPU/SERIAL  *LBD 11/86*
         PACK  WORK(4),0(6,R2)     PACK SERIAL NUMBER      *LBD 11/86*
         L     R1,WORK             LOAD INTO REG THEN      *LBD 11/86*
         SRL   R1,4                SHIFT OUT SIGN          *LBD 11/86*
         STCM  R1,B'0111',1(R8)    AND SAVE IT             *LBD 11/86*
         LA    R8,8(R8)            BUMP CPU TABLE          *LBD 11/86*
         LA    R2,6(R2)            -> NEXT SERIAL          *LBD 11/86*
         CLI   0(R2),C' '          AT END OF TABLE   ?     *LBD 11/86*
         BNE   CPUSERLP            NO - PROCESS IT         *LBD 11/86*
         LA    R7,4(R7)            BUMP COUNTER ADDR       *LBD 11/86*
         CLI   0(R8),X'FF'         END OF TABLE ?          *LBD 11/86*
         BE    CPUTEND             FORCE END *****         *LBD 11/86*
         B     GETCPULP            AND KEEP LOOPING        *LBD 11/86*
         EJECT                                             *LBD 11/86*
*----------------------------------------------------------*LBD 11/86*
*        CLOSE OUT TABLE AND DELETE TABLE VARIABLES        *LBD 11/86*
*----------------------------------------------------------*LBD 11/86*
CPUTEND  DS    0H                                          *LBD 11/86*
         TBEND 'IPCCPU'                                    *LBD 11/86*
         VDELETE '(CPU SERIAL1 SERIAL2 SERIAL3 SERIAL4)'   *LBD 11/86*
         VDELETE '(NODE NODENAME)'                         *LBD 11/86*
         EJECT
*----------------------------------------------------------*LBD 11/86*
*        DEFINE OTHER VALUES USED DURING THIS DIALOG       *LBD 11/86*
*----------------------------------------------------------*LBD 11/86*
         EJECT                                             *LBD 11/86*
         VDEFINE '(COMPMOD)',COMPMOD,CHAR,8                *LBD 01/86*
         VDEFINE '(CPU)',VCPU,CHAR,1,'(NOBSCAN)'           *LBD 11/86*
         VDEFINE '(CSECTID)',CSECTID,CHAR,8                *LBD 01/86*
         VDEFINE '(DATE)',VDATE,CHAR,6                     *LBD 01/86*
         VDEFINE '(JOBNAME)',JOBNAME,CHAR,8                *LBD 01/86*
         VDEFINE '(REASON)',VREASON,CHAR,8                 *LBD 01/86*
         VDEFINE '(RECTYP)',RECTYP,CHAR,7                  *LBD 01/86*
         VDEFINE '(SEQNO)',SEQNO,CHAR,5                    *LBD 01/86*
         VDEFINE '(TIME)',VTIME,CHAR,11                    *LBD 01/86*
         SPACE 1                                           *LBD 02/86*
         VDEFINE '(ABMODULE ABCSECT ABCODE ABLRDATE)',ABMODULE,CHAR,8
         VDEFINE '(ABCOUNT)',ABCOUNT,FIXED,4               *LBD 02/86*
         EJECT
***********************************************************************
*        PROCESS EREP DATA
***********************************************************************
         OPEN  (ACCIN,INPUT)       OPEN DATA SET
GET      EQU   *
         SETOF ADDOK                                       *LBD 02/86*
         GET   ACCIN               GET A RECORD
         LR    11,1                RECORD BASE
         USING SOFTWARE-4,11
         MVI   VARIABLE,C' '       CLEAR VARIABLES
         MVC   VARIABLE+1(VARSIZE-1),VARIABLE
*----------------------------------------------------------------------
*        DATE
*----------------------------------------------------------------------
         MVC   WORK(7),=X'F020204B202020' 0YY.DDD
         ED    WORK(7),HDRTM+1     EDIT DATE
         MVC   VDATE,WORK+1        MOVE DATE
*----------------------------------------------------------------------
*        TIME
*----------------------------------------------------------------------
         MVC   WORK(12),=X'F021207A20207A20204B2020' 0HH:MM:SS.TH
         ED    WORK(12),HDRTM+4    EDIT TIME
         MVC   VTIME,WORK+1        MOVE TIME
*----------------------------------------------------------------------
*        CPU NAME
*----------------------------------------------------------------------
         LA    3,CPUTABLE          POINT TO CPU NAME/SERIAL TABLE
         LA    4,8                 GET LENGTH OF ENTRY
         LA    5,CPUEND            POINT TO END OF TABLE
CPULOOP  EQU   *
         CLC   1(3,3),CPU          DOES ENTRY MATCH?
         BE    CPUFOUND            YES, BRANCH
         BXLE  3,4,CPULOOP         NO, LOOP TO NEXT ENTRY
         MVI   VCPU,C'?'           UNKNOWN CPU
         B     TYPE                BRANCH
CPUFOUND EQU   *
         MVC   VCPU,0(3)           MOVE CPU NAME
*----------------------------------------------------------------------
*        EVENT COUNTERS PER CPU
*----------------------------------------------------------------------
         L     1,4(3)              GET CPU COUNT POINTER
         L     2,0(1)              GET CPU COUNT
         LA    2,1(2)              INCREMENT BY ONE
         ST    2,0(1)              STORE CPU COUNT
*----------------------------------------------------------------------
*        DETERMINE RECORD TYPE
*----------------------------------------------------------------------
TYPE     EQU   *
         CLI   HDRTYP,X'40'        IS IT ABEND?
         BE    SFTABN
         CLI   HDRTYP,X'42'        IS IT PROGRAM INTERRUPT
         BE    SFTPI
         CLI   HDRTYP,X'44'        IS IT SYSTEM RESTART
         BE    SFTRST
         CLI   HDRTYP,X'48'        IS IT MACHINE CHECK
         BE    SFTMCH
         CLI   HDRTYP,X'4F'        IS IT LOST RECORD?
         BE    SFT
         CLI   HDRTYP,X'50'        IS IT IPL?
         BE    IPL
         CLI   HDRTYP,X'80'        IS IT END OF DAY?
         BE    EOD
         CLI   HDRTYP,X'81'        IS IT END OF DAY?
         BE    EOD
         CLI   HDRTYP,X'84'        IS IT END OF DAY?
         BE    EOD
         B     GET                 BRANCH - IGNORE
SFTABN   EQU   *
         MVC   RECTYP,=C'SFT-ABN' ABEND
         B     DETAIL              BRANCH
SFTPI    EQU   *
         MVC   RECTYP,=C'SFT-PI ' PROGRAM INTERRUPT
         B     DETAIL              BRANCH
SFTRST   EQU   *
         MVC   RECTYP,=C'SFT-RST' SYSTEM RESTART
         B     DETAIL              BRANCH
SFTMCH   EQU   *
         MVC   RECTYP,=C'SFT-MCH' MACHINE CHECK
         B     DETAIL              BRANCH
SFT      EQU   *
         MVC   RECTYP,=CL7'SFT'    LOST RECORD
         MVC   VREASON,=CL8'LOST'  MOVE REASON
         B     DONE                BRANCH
IPL      EQU   *
         MVC   RECTYP,=CL7'IPL'    IPL
         B     DONE
EOD      EQU   *
         MVC   RECTYP,=CL7'EOD'    END OF DAY
         B     DONE
DETAIL   EQU   *
         SETON ADDOK                                       *LBD 02/86*
*----------------------------------------------------------------------
*        JOB NAME
*----------------------------------------------------------------------
         MVC   JOBNAME,JOBID       MOVE JOB NAME
*----------------------------------------------------------------------
*        ABEND CODE
*----------------------------------------------------------------------
         UNPK  WORK(9),SDWAABCC(5) CONVERT ABEND CODE
         NC    WORK(8),=8X'0F'
         TR    WORK(8),=C'0123456789ABCDEF'
         MVC   VREASON,WORK        MOVE REASON (ABEND CODE)
*----------------------------------------------------------------------
*        MODULE NAME
*----------------------------------------------------------------------
         MVC   COMPMOD,SDWAMODN    MOVE MODULE NAME
*----------------------------------------------------------------------
*        CSECT NAME
*----------------------------------------------------------------------
         MVC   CSECTID,SDWACSCT    MOVE CSECT NAME
*----------------------------------------------------------------------
*        ERROR ID
*----------------------------------------------------------------------
         TM    HDRDS,X'20'         IS THERE AN ERRORID?
         BZ    DONE                NO, BRANCH
         LH    10,0(11)            GET LRECL
         LA    10,0(10,11)         GET END OF RECORD
         S     10,=F'10'           GET END MINUS TEN
         SR    1,1
         ICM   1,3,0(10)           CONVERT SEQUENCE NUMBER TO DECIMAL
         CVD   1,WORK
         MVC   WORK+8(6),=X'F02020202020'
         ED    WORK+8(6),WORK+5
         MVC   SEQNO,WORK+9        MOVE SEQUENCE NUMBER
*----------------------------------------------------------------------
*        ADD ISPF TABLE ROW
*----------------------------------------------------------------------
DONE     EQU   *
         TBADD TABLENAM                                    *LBD 01/86*
         EJECT                                             *LBD 02/86*
*----------------------------------------------------------------------
*        BUILD SUMMARY TABLE
*----------------------------------------------------------------------
         IFOFF ADDOK,GET                                   *LBD 02/86*
         USING ABDSECT,R9                                  *LBD 02/86*
         LA    R9,ABNDTBL                                  *LBD 02/86*
ABNDLOOP DS    0H                                          *LBD 02/86*
         CLI   ABMOD,X'00'                                 *LBD 02/86*
         BE    ADDMOD                                      *LBD 02/86*
         OC    COMPMOD,=CL8' '                             *LBD 02/86*
         OC    CSECTID,=CL8' '                             *LBD 02/86*
         CLC   ABMOD,COMPMOD      SAME MODULE ?            *LBD 02/86*
         BE    CKMOD              YES                      *LBD 02/86*
ABINCR   DS    0H                                          *LBD 02/86*
         LA    R9,ABENTL(,R9)     INCR TABLE               *LBD 02/86*
         CLI   0(R9),X'FF'        END OF TABLE             *LBD 02/86*
         BE    ENDAB              YES - TELL SOMEONE       *LBD 02/86*
         B     ABNDLOOP                                    *LBD 02/86*
ADDMOD   DS    0H                                          *LBD 02/86*
         MVC   ABMOD,COMPMOD                               *LBD 02/86*
         MVC   ABCS,CSECTID                                *LBD 02/86*
         MVC   ABREASON,VREASON                            *LBD 02/86*
         MVC   ABLDATE(6),VDATE   SET LAST HIT DATE        *LBD 02/86*
         LA    R1,1                                        *LBD 02/86*
         ST    R1,ABCTR                                    *LBD 02/86*
         B     GET                                         *LBD 02/86*
CKMOD    DS    0H                                          *LBD 02/86*
         CLC   ABCS,CSECTID       SAME CSECTID ?           *LBD 02/86*
         BE    CKCSECT            NO                       *LBD 02/86*
         CLC   ABREASON,VREASON   SAME ABEND CODE ?        *LBD 02/86*
         BNE   ABINCR             NO - KEEP LOOKING        *LBD 02/86*
         L     R1,ABCTR                                    *LBD 02/86*
         LA    R1,1(R1)                                    *LBD 02/86*
         ST    R1,ABCTR                                    *LBD 02/86*
         MVC   ABLDATE(6),VDATE   SET LAST HIT DATE        *LBD 02/86*
         B     GET                                         *LBD 02/86*
CKCSECT  DS    0H                                          *LBD 02/86*
         CLC   ABREASON,VREASON   SAME ABEND CODE ?        *LBD 02/86*
         BNE   ABINCR             NO - KEEP LOOKING        *LBD 02/86*
         L     R1,ABCTR                                    *LBD 02/86*
         LA    R1,1(R1)                                    *LBD 02/86*
         ST    R1,ABCTR                                    *LBD 02/86*
         MVC   ABLDATE(6),VDATE   SET LAST HIT DATE        *LBD 02/86*
         B     GET                                         *LBD 02/86*
         DROP  R9                                          *LBD 02/86*
ENDAB    DS    0H                                          *LBD 02/86*
         SETON ABFULL                                      *LBD 02/86*
         SPACE 1                                           *LBD 02/86*
         B     GET                 GO GET ANOTHER RECORD
         DROP  11
         EJECT
***********************************************************************
*        TERMINATION
***********************************************************************
CLOSE    EQU   *
         CLOSE (ACCIN)             CLOSE ACCUMULATION DATA SET
         FREEPOOL ACCIN            FREE BUFFER POOL
*----------------------------------------------------------------------
*        PUT EVENT COUNTERS INTO ISPF SHARED VARIABLE POOL
*----------------------------------------------------------------------
         VPUT  '(T1 T2 T3 T4 T5 T6 T7 T8)'                 *LBD 01/86*
         VPUT  '(C1 C2 C3 C4 C5 C6 C7 C8)'                 *LBD 01/86*
         EJECT                                             *LBD 02/86*
*----------------------------------------------------------------------
*        UPDATE SOFTLOG SUMMARY TABLE
*----------------------------------------------------------------------
         LA    R9,ABNDTBL                                  *LBD 02/86*
         USING ABDSECT,R9                                  *LBD 02/86*
UPABLOOP DS    0H                                          *LBD 02/86*
         MVC   ABMODULE,ABMOD                              *LBD 02/86*
         MVC   ABCSECT,ABCS                                *LBD 02/86*
         MVC   ABCODE,ABREASON                             *LBD 02/86*
         MVC   ABCOUNT,ABCTR                               *LBD 02/86*
         MVC   ABLRDATE(6),ABLDATE                         *LBD 02/86*
         TBADD SUMMNAME                                    *LBD 02/86*
         LA    R9,ABENTL(,R9)                              *LBD 02/86*
         CLI   0(R9),X'FF'        END OF TABLE             *LBD 02/86*
         BE    EXIT                                        *LBD 02/86*
         CLI   0(R9),X'00'                                 *LBD 02/86*
         BNE   UPABLOOP                                    *LBD 02/86*
EXIT     DS    0H                                          *LBD 02/86*
         EJECT                                             *LBD 02/86*
         ISPF  DELETE                                      *LBD 01/86*
         L     13,SAVE+4
         IFON  ABFULL,RC4                                  *LBD 02/86*
         RETURN (14,12),RC=0       RETURN
RC4      RETURN (14,12),RC=4       RETURN
         DROP  12
         EJECT
***********************************************************************
*        DATA AND WORK AREAS
***********************************************************************
         LTORG                                             *LBD 02/86*
         BITSW ABFULL,ADDOK                                *LBD 02/86*
SAVE     DC    18F'0'              SAVE AREA
WORK     DC    2D'0'               WORK AREA
         ISPF  PARMS                                       *LBD 01/86*
*----------------------------------------------------------------------
ACCIN    DCB   DDNAME=ACCIN,       ACCUMULATION DATA SET               *
               DSORG=PS,                                               *
               EODAD=CLOSE,                                            *
               MACRF=GL
*----------------------------------------------------------------------
TABLENAM DC    CL8'SOFTLOG'
SUMMNAME DC    CL8'SOFTLOGS'                               *LBD 02/86*
*----------------------------------------------------------------------
NODENAME DC    CL8' '              REQUESTED NODE NAME     *LBD 11/86*
NODE     DC    CL8' '              NODE IN CPU TABLE       *LBD 11/86*
TCPU     DC    CL8' '              CPU NAME FROM TABLE     *LBD 11/86*
SERIALS  DS    0H                  SERIAL                  *LBD 11/86*
         DC    CL6' '                NUMBERS               *LBD 11/86*
         DC    CL6' '                  FROM                *LBD 11/86*
         DC    CL6' '                    CPU               *LBD 11/86*
         DC    CL6' '                      TABLE           *LBD 11/86*
         DC    C' '                END OF TABLE            *LBD 11/86*
*----------------------------------------------------------------------
COUNT    DS    0F                  CPU EVENT COUNTERS
V1       DC    F'0'
V2       DC    F'0'
V3       DC    F'0'
V4       DC    F'0'
V5       DC    F'0'
V6       DC    F'0'
V7       DC    F'0'
V8       DC    F'0'
*----------------------------------------------------------------------
NAMES    DS    0F                  CPU NAMES
C1       DC    C' '
C2       DC    C' '
C3       DC    C' '
C4       DC    C' '
C5       DC    C' '
C6       DC    C' '
C7       DC    C' '
C8       DC    C' '
*----------------------------------------------------------------------
VARIABLE DS    0C                  TABLE VARIABLE VALUES
COMPMOD DC     CL8'CCCCCCCC'
VCPU     DC    C'X'
CSECTID DC     CL8'CCCCCCCC'
VDATE    DC    C'YY.DDD'
JOBNAME DC     CL8'CCCCCCCC'
VREASON  DC    CL8'XXXXXXXX'
RECTYP   DC    C'CCC-CCC'
SEQNO    DC    CL5'NNNNN'
VTIME    DC    C'HH:MM:SS.TH'
VARSIZE  EQU   *-VARIABLE
ABMODULE DC    CL8' '                                      *LBD 02/86*
ABCSECT  DC    CL8' '                                      *LBD 02/86*
ABCODE   DC    CL8' '                                      *LBD 02/86*
ABLRDATE DC    CL8' '                                      *LBD 02/86*
ABCOUNT  DC    F'0'                                        *LBD 02/86*
*----------------------------------------------------------------------
CPUTABLE DS    0D                  CPU NAME VS. SERIAL NUMBER
         DC    C' ',XL3'0',A(0)                            *LBD 01/86*
         DC    C' ',XL3'0',A(0)                            *LBD 01/86*
         DC    C' ',XL3'0',A(0)                            *LBD 01/86*
         DC    C' ',XL3'0',A(0)                            *LBD 01/86*
         DC    C' ',XL3'0',A(0)                            *LBD 01/86*
         DC    C' ',XL3'0',A(0)                            *LBD 01/86*
         DC    C' ',XL3'0',A(0)                            *LBD 01/86*
         DC    C' ',XL3'0',A(0)                            *LBD 01/86*
         DC    C' ',XL3'0',A(0)                            *LBD 01/86*
         DC    C' ',XL3'0',A(0)                            *LBD 01/86*
         DC    C' ',XL3'0',A(0)                            *LBD 01/86*
         DC    C' ',XL3'0',A(0)                            *LBD 01/86*
         DC    C' ',XL3'0',A(0)                            *LBD 01/86*
         DC    C' ',XL3'0',A(0)                            *LBD 01/86*
         DC    C' ',XL3'0',A(0)                            *LBD 01/86*
         DC    C' ',XL3'0',A(0)                            *LBD 01/86*
         DC    C' ',XL3'0',A(0)                            *LBD 01/86*
         DC    C' ',XL3'0',A(0)                            *LBD 01/86*
         DC    C' ',XL3'0',A(0)                            *LBD 01/86*
         DC    C' ',XL3'0',A(0)                            *LBD 01/86*
         DC    C' ',XL3'0',A(0)                            *LBD 01/86*
         DC    C' ',XL3'0',A(0)                            *LBD 01/86*
         DC    C' ',XL3'0',A(0)                            *LBD 01/86*
         DC    C' ',XL3'0',A(0)                            *LBD 01/86*
         DC    C' ',XL3'0',A(0)                            *LBD 01/86*
         DC    C' ',XL3'0',A(0)                            *LBD 01/86*
         DC    C' ',XL3'0',A(0)                            *LBD 01/86*
         DC    C' ',XL3'0',A(0)                            *LBD 01/86*
         DC    C' ',XL3'0',A(0)                            *LBD 01/86*
         DC    C' ',XL3'0',A(0)                            *LBD 01/86*
         DC    C' ',XL3'0',A(0)                            *LBD 01/86*
         DC    C' ',XL3'0',A(0)                            *LBD 01/86*
         DC    C' ',XL3'0',A(0)                            *LBD 01/86*
         DC    C' ',XL3'0',A(0)                            *LBD 01/86*
         DC    C' ',XL3'0',A(0)                            *LBD 01/86*
         DC    C' ',XL3'0',A(0)                            *LBD 01/86*
         DC    C' ',XL3'0',A(0)                            *LBD 01/86*
         DC    C' ',XL3'0',A(0)                            *LBD 01/86*
         DC    C' ',XL3'0',A(0)                            *LBD 01/86*
         DC    C' ',XL3'0',A(0)                            *LBD 01/86*
         DC    X'FF'              END OF TABLE             *LBD 01/86*
CPUEND   EQU   *-L'CPUTABLE
         EJECT
ABNDTBL  DS    0F                                          *LBD 02/86*
         DC    1500XL34'0'                                 *LBD 02/86*
         DC    X'FF'              END OF ABEND TABLE       *LBD 02/86*
ABDSECT  DSECT                                             *LBD 02/86*
ABMOD    DS    CL8                                         *LBD 02/86*
ABCS     DS    CL8                                         *LBD 02/86*
ABREASON DS    CL8                                         *LBD 02/86*
ABCTR    DS    CL4                                         *LBD 02/86*
ABLDATE  DS    CL6                                         *LBD 02/86*
ABENTL   EQU   *-ABMOD                                     *LBD 02/86*
         END   ,
