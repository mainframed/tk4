         TITLE 'PARSE DATASET NAMEFOR ISPF SKEL AND CLIST USAGE'
*---------------------------------------------------------------------*
*        PARSEDSN IS AN ISPF PROGRAM DESIGNED TO SIMPLIFY             *
*        CLIST AND SKELETON USAGE UNDER ISPF BY PARSEING THE          *
*        DSN PASSED AND PARSEING IT INTO THE FOLLOWING ISPF           *
*        VARIABLES:                                                   *
*                                                                     *
*        THE INPUT DATASET NAME MAY BE FULLY QUALIFIED IN QUOTES OR   *
*        UNQUALIFIED WITHOUT QUOTES.  IF IN QUOTES THEN THE QUOTES    *
*        WILL BE REMOVED AND THE PARSE WILL CONTINUE.  IF UNQUALIFIED *
*        THE THE USERS PREFIX WILL BE APPENDED TO THE DATASET NAME    *
*        AND THE PARSE WILL CONTINUE.                                 *
*                                                                     *
*        THE NAME OF THE VARIABLE CONTAINING THE DATASET NAME TO      *
*        PARSE MUST BE PROVIDED VIA THE PARM.  IF NOT THEN THE        *
*        DEFAULT IS RDSN.                                             *
*                                                                     *
*        THE FIRST CHARACTER OF THE INPUT VARIABLE NAME WILL BE       *
*        USED AS THE FIRST CHARACTER OF THE OUTPUT VARIABLE NAMES.    *
*        (I.E. IF THE INPUT VARIABLE NAME IS XDSN THEN THE OUTPUT     *
*        VARIABLE NAMES WILL BE XDS, XDSQ, ETC. )                     *
*                                                                     *
*              -INPUT VAR NAME    -CONTENTS                           *
*              RDSN               DATASET NAME (UNCHANGED)            *
*                                                                     *
*              -OUTPUT VAR NAME   -CONTENTS                           *
*              RDS                DSN WITH PREFIX, W/O QUOTES,        *
*                                 W/O MEMBER AND W/O SUFFIX.          *
*              RDSQ               DSN WITH PREFIX AND W/O MEMBER,     *
*                                 AND W/O QUOTES.                     *
*              RDSQM              DSN WITH PREFIX, W/O QUOTES         *
*                                 AND WITH (MEMBER).                  *
*              RDSP               DSN PREFIX                          *
*              RDSS               DSN SUFFIX                          *
*              RDSM               MEMBER NAME                         *
*                                                                     *
*                                                                     *
*                                                                     *
*        TO INVOKE VIA CLIST:                                         *
*              ISPEXEC SELECT PGM(PARSEDSN) PARM(DSN-VARIABLE-NAME)   *
*                                                                     *
*        TO RETRIEVE THE PARSED VARIABLES:                            *
*              ISPEXEC VGET (RDS RDSQ RDSQM RDSP RDSS RDSM)           *
*                                                                     *
*---------------------------------------------------------------------*
*---------------------------------------------------------------------*
* AUTHOR:      LIONEL DYCK                                            *
*              ROCKWELL INTERNATIONAL                                 *
*              PO BOX 2515                                            *
*              2201 SEAL BEACH BLVD.                                  *
*              SEAL BEACH, CALIF  90740                               *
*              MAIL CODE 110-SH28                                     *
*              PHONE (213) 594-1125                                   *
*              COMNET 374-1125                                        *
*---------------------------------------------------------------------*
         EJECT
*---------------------------------------------------------------------*
*        INTERNAL MACRO DEFINITIONS                                   *
*---------------------------------------------------------------------*
         SPACE 2
*---------------------------------------------------------------------*
*        BUILD ISPF VARIABLE DEFINITION CONSTANTS                     *
*---------------------------------------------------------------------*
         MACRO
         VDS   &ID,&LEN
&ID      DC    C'(&ID)'                ISPF VAR NAME
V&ID     DC    CL&LEN' '               ISPF VAR DATA
L&ID     DC    A(L'V&ID)               ISPF VAR LEN
         MEND
         SPACE 2
*---------------------------------------------------------------------*
*        VPUT AND VDELETE ISPF VARIABLE                               *
*---------------------------------------------------------------------*
         MACRO
&L       VPUTD &ID
         L     R15,ISPLINK             -> ISPLINK EPA
         CALL  (15),(VPUT,&ID),VL
         SPACE 1
         L     R15,ISPLINK             -> ISPLINK EPA
         CALL  (15),(VDELETE,&ID),VL
         SPACE 2
         MEND
         SPACE 2
*---------------------------------------------------------------------*
*        VDEFINE ISPF VARIABLE                                        *
*---------------------------------------------------------------------*
         MACRO
&L       VDEF  &ID
         L     R15,ISPLINK             -> ISPLINK EPA
         CALL  (15),(VDEFINE,&ID,V&ID,CHAR,L&ID),VL
         EJECT
         MEND
         EJECT
PARSEDSN $PROLOG
         L     R1,0(R1)           * LOAD ADDR OF PARM
         LH    R2,0(R1)           * LOAD LENGTH OF PARM
         LTR   R2,R2              *    LENGTH OF ZERO
         BZ    STARTIT            * NO - BYPASS MOVE
         BCTR  R2,R0              *    SUBTRACT LENGTH BY 1
         EX    R2,MVCPARM         * EXECUTE THE MOVE
         B     STARTIT
MVCPARM  MVC   PARM(0),2(1)
STARTIT  DS    0H
         MVC   RDS+1(1),PARM      SET 1ST CHARACTER
         MVC   RDSQ+1(1),PARM     SET 1ST CHARACTER
         MVC   RDSQM+1(1),PARM    SET 1ST CHARACTER
         MVC   RDSP+1(1),PARM     SET 1ST CHARACTER
         MVC   RDSS+1(1),PARM     SET 1ST CHARACTER
         MVC   RDSM+1(1),PARM     SET 1ST CHARACTER
         VDEF  RDS
         VDEF  RDSQ
         VDEF  RDSQM
         VDEF  RDSP
         VDEF  RDSS
         VDEF  RDSM
         L     R15,ISPLINK
         CALL  (15),(VDEFINE,PNAME,WORK,CHAR,L56,OPT),VL
         L     R15,ISPLINK
         CALL  (15),(VGET,PNAME),VL
         CLI   WORK,X'7D'          QUOTED DSN ?
         BNE   ADDPRE              NO - SO ADD PREFIX
         LA    R1,WORK+1           -> FIRST REAL CHARACTER
         LA    R5,DSNWORK
         LA    R6,56               MAX SEARCH
DSNMOVE  CLI   0(R1),X'7D'
         BE    HAVEIT
         MVC   0(1,R5),0(R1)
         LA    R5,1(R5)            INCR R5
         LA    R1,1(R1)            INCR R1
         BCT   R6,DSNMOVE
HAVEIT   DS    0H
         MVC   WORK,DSNWORK
         B     DOIT
ADDPRE   MVC   DSNWORK,WORK        SAVE DSN
         L     R15,ISPLINK
         CALL  (15),(VDEFINE,ZPREF,PREFIX,CHAR,L8,OPT),VL
         L     R15,ISPLINK
         CALL  (15),(VGET,ZPREF),VL
         L     R15,ISPLINK
         CALL  (15),(VDELETE,ZPREF),VL
         LA    R1,PREFIX
         LA    R2,8
FPREE    CLI   0(R1),C' '          END OF PREFIX
         BE    MVDSN               YES
         LA    R1,1(R1)
         BCT   R2,FPREE
MVDSN    MVI   0(R1),C'.'
         LA    R1,1(R1)
         LA    R2,48(R2)               ADD 48 TO COUNT
         LA    R3,DSNWORK
MDSN     CLI   0(R3),C' '          END OF DSN ?
         BE    DOIT                YES
         MVC   0(1,R1),0(R3)
         LA    R1,1(R1)
         LA    R3,1(R3)
         BCT   R2,MDSN
         EJECT
DOIT     DS    0H
         LA    R1,WORK            -> DSN
         LA    R3,VRDSQ           -> DSN W/O (MEM)
         LA    R4,VRDSQM          -> DSN W (MEM)
         LA    R5,VRDSP           -> PREFIX
         LA    R7,VRDSM           -> MEMBER
         LA    R8,56              BCT LOOP COUNT
L1       DS    0H
         MVC   0(1,R3),0(R1)      MOVE RDSQ
         MVC   0(1,R4),0(R1)      MOVE RDSQM
         MVC   0(1,R5),0(R1)      MOVE RDSP
         LA    R1,1(R1)
         LA    R3,1(R3)
         LA    R4,1(R4)
         LA    R5,1(R5)
         BCTR  R8,R0
         LTR   R8,R8
         BZ    GETRDS
         CLI   0(R1),C'.'
         BE    UPL2
         CLI   0(R1),C'('
         BE    UPLM
         CLI   0(R1),C' '
         BE    GETRDS
         B     L1
         SPACE 2
L2       DS    0H
         MVC   0(1,R3),0(R1)      MOVE RDSQ
         MVC   0(1,R4),0(R1)      MOVE RDSQM
         LA    R1,1(R1)
         LA    R3,1(R3)
         LA    R4,1(R4)
         BCTR  R8,R0
         LTR   R8,R8
         BZ    GETRDS
UPL2     DS    0H
         CLI   0(R1),C'('
         BE    UPLM
         CLI   0(R1),C' '
         BE    GETRDS
         B     L2
         SPACE 2
LM       DS    0H
         MVC   0(1,R4),0(R1)      MOVE RDSQM
         CLI   0(R1),C'('
         BE    NOP
         CLI   0(R1),C')'
         BE    NOP
         MVC   0(1,R7),0(R1)      MOVE RDSM
         LA    R7,1(R7)
NOP      DS    0H
         LA    R1,1(R1)
         LA    R4,1(R4)
         BCTR  R8,R0
         LTR   R8,R8
         BZ    GETRDS
UPLM     DS    0H
         CLI   0(R1),C' '
         BE    GETRDS
         B     LM
         EJECT
GETRDS   DS    0H
         MVC   VRDS,VRDSQ
         LA    R1,43
         LA    R2,VRDS+43         -> END OF VRDS
         MVI   DSNWORK,C' '       BLANK DSNWORK AREA
         MVC   DSNWORK+1(44),DSNWORK   FOR VRDSS
         LA    R6,DSNWORK+43      -> END OF SUFFIX
RDSL     DS    0H
         CLI   0(R2),C'.'
         BE    RDSLC
         CLI   0(R2),C' '         ANY THING HERE ?
         BE    UPRDSL             NO
         MVC   0(1,R6),0(R2)      MOVE TO SUFFIX
         MVI   0(R2),C' '         BLANK IT IN RDS
UPRDSL   DS    0H
         BCTR  R2,R0              LESS 1 IN VRDS
         BCTR  R6,R0              LESS 1 IN VRDSS
         BCTR  R1,R0
         LTR   R1,R1
         BZ    VPUTIT
         B     RDSL
RDSLC    MVI   0(R2),C' '
         MVC   VRDSS,1(R6)
         B     VPUTIT
         EJECT
VPUTIT   DS    0H
         VPUTD RDS
         VPUTD RDSQ
         VPUTD RDSQM
         VPUTD RDSP
         VPUTD RDSS
         VPUTD RDSM
LEAVE    $EPILOG
         SPACE
         LTORG
ISPLINK  DC    V(ISPLINK)         EPA OF ISPLINK
PNAME    DC    C'('
PARM     DC    CL8'RDSN'
         DC    C')'
PREFIX   DC    CL56' '
WORK     EQU   PREFIX,56
DSNWORK  DC    CL56' '
L8       DC    F'8'
L56      DC    F'56'
OPT      DC    C'(COPY,NOBSCAN)'
SHARED   DC    CL8'SHARED'
CHAR     DC    CL8'CHAR'
ZPREF    DC    C'(ZPREFIX)'
VGET     DC    CL8'VGET'
VPUT     DC    CL8'VPUT'
VDELETE  DC    CL8'VDELETE'
VDEFINE  DC    CL8'VDEFINE'
         EJECT
         VDS   RDS,44
         VDS   RDSQ,44
         VDS   RDSQM,54
         VDS   RDSP,8
         VDS   RDSS,8
         VDS   RDSM,8
         END
