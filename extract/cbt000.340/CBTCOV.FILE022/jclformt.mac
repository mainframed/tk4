*        FROM  CBT FILE 352                               *LBD 02/84*
*          DATA SET JCLFORMT   AT LEVEL 001 AS OF 05/14/80
JCLFORMT CSECT
           SPACE 1
*  EQUATE THE GENERAL REGISTERS FOR XREF USE.
         SPACE 1
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE 2
*  SET UP BASE REGISTERS AND SAVE AREA POINTERS
         SPACE 1
         STM   R14,R12,12(R13)
         LR    R11,R15
         USING JCLFORMT,R11,R12
         LA    R12,4095(R11)
         LA    R12,1(R12)
         ST    R13,SAVEAREA+4
         LR    R4,R13
         LA    R13,SAVEAREA
         ST    R13,8(R4)
         EJECT
*  OPEN ALL DATA SETS FOR PROCESSING, CHECK FOR MISSING DD CARDS AND
*  PROCEED ACCORDINGLY.
         SPACE 2
OPENS    OPEN  (SYSIN,(INPUT))         REFORMAT TABLE - REQUIRED.
         SPACE 2
         OPEN  (SYSUT1,(INPUT))        UNFORMATTED PROCS - REQUIRED.
         SPACE 2
         OPEN  (SYSUT2,(OUTPUT))       REFORMATTED PROCS - OPTIONAL.
         SPACE 2
         OPEN  (SYSPRNT1,(OUTPUT))     BEFORE FORMAT LIST - OPTIONAL.
         SPACE 2
         OPEN  (SYSPRNT2,(OUTPUT))     AFTER  FORMAT LIST - OPTIONAL.
         EJECT
*  CHECK FOR THE MISSING DD CARDS. (IF ANY)
         SPACE 1
         SR    R15,R15
CHECK1   TM    SYSIN+48,X'10'
         BNZ   CHECK2
         LA    R15,12
         SPACE 1
CHECK2   TM    SYSUT1+48,X'10'
         BNZ   CHECK3
         LA    R15,12
         SPACE 1
CHECK3   TM    SYSUT2+48,X'10'
         BNZ   CHECK4
         MVI   UT2SW,X'F0'
         SPACE 1
CHECK4   TM    SYSPRNT1+48,X'10'
         BNZ   CHECK5
         MVI   PRNT1SW,X'F0'
         SPACE 1
CHECK5   TM    SYSPRNT2+48,X'10'
         BNZ   CHECK6
         MVI   PRNT2SW,X'F0'
         SPACE 1
CHECK6   C     R15,=F'0'
         BNE   ABORT
         SPACE 2
*  SET THE NOP INSTRUCTIONS FOR SYSUT2,SYSPRNT1,SYSPRNT2.
         SPACE 1
         MVC   PUTPRNT1+1(1),PRNT1SW
         MVC   PUTPRNT2+1(1),PRNT2SW
         MVC   PUTUT2+1(1),UT2SW
         EJECT
*  LOAD THE KEYWORD PARAMETER TABLE FOR THE FORMATTING OF PROCS.
         SPACE 1
LOADTAB  LA    R2,TABLE
         SR    R5,R5
         SPACE 1
GETSYSIN GET   SYSIN,CARD
         SPACE 1
         PACK  DOUBLE(8),CARD(2)
         SP    DOUBLE(8),=PL2'1'
         MP    DOUBLE(8),=PL2'80'
         SR    R4,R4
         CVB   R4,DOUBLE
         LA    R3,TABLEOUT
         AR    R3,R4
         ST    R3,FULLWORD
         MVC   0(4,R2),FULLWORD
         SPACE 1
         PACK  DOUBLE(8),CARD+2(3)
         SR    R4,R4
         CVB   R4,DOUBLE
         BCTR  R4,0
         STC   R4,4(R2)
         SPACE 1
         MVC   5(20,R2),CARD+5
         CLC   5(3,R2),=CL3'DCB'
         BNE   NODCBPRM
         MVI   DCBSW,C'1'
         SPACE 1
NODCBPRM LA    R5,1(R5)
         LA    R2,25(R2)
         B     GETSYSIN
         SPACE 2
EODSYSIN CLOSE (SYSIN)
         SPACE 1
         STC   R5,PTABCNT
         EJECT
**  MAINLINE OF THE PROGRAM -- BEGIN PROCESSING DATA.
         SPACE 2
GETUT1   CLI   EOFUT1,C'1'             END OF FILE ON INPUT?
         BE    ENDOFJOB                YES, GO TO END OF JOB.
         SPACE 1
         GET   SYSUT1,CARD
         SPACE 1
         BAL   R10,PUTPRNT1
         SPACE 1
CHECKS   CLC   CARD(2),=CL2'//'
         BNE   NOTJCL
         SPACE 1
         CLC   CARD(3),=CL3'//*'
         BE    ALLDONE
         SPACE 1
         CLC   CARD+2(69),INITOUT+2
         BE    ALLDONE
         SPACE 1
         LA    R2,20
*        LA    R3,CARD+3                                   *LBD 07/86*
         LA    R3,CARD+2                                   *LBD 07/86*
         SPACE 1
COMPARES CLC   0(5,R3),=CL5' JOB '
         BE    JOBCARD
         SPACE 1
         CLC   0(6,R3),=CL6' EXEC '
         BE    EXECARD
         SPACE 1
         CLC   0(6,R3),=CL6' PEND '                        *LBD 07/86*
         BE    PENDCARD                                    *LBD 07/86*
         SPACE 1                                           *LBD 07/86*
         CLC   0(4,R3),=CL4' DD '
         BE    DDCARD
         SPACE 1
         LA    R3,1(R3)
         BCT   R2,COMPARES
         SPACE 2
ALLDONE  MVC   CARD+72(8),INITOUT+2
NOTJCL   BAL   R10,PUTPRNT2
         BAL   R10,PUTUT2
         B     GETUT1
         EJECT
JOBCARD  B     ALLDONE
         SPACE 2
EXECARD  B     ALLDONE
         SPACE 2                                           *LBD 07/86*
PENDCARD B     ALLDONE                                     *LBD 07/86*
         EJECT
DDCARD   MVC   0(4,R3),=CL4'    '
         SPACE 1
         LA    R2,25
         LA    R3,TABLEIN
         LA    R4,TABLEOUT
INITLOOP MVC   0(80,R3),INITIN
         MVC   0(80,R4),INITOUT
         LA    R3,80(R3)
         LA    R4,80(R4)
         BCT   R2,INITLOOP
         SPACE 1
         MVC   CARD(2),INITOUT+2
         MVC   CARD+72(8),INITOUT+2
         MVC   TABLEIN(80),CARD
         MVC   TABLEOUT+11(2),=CL2'DD'
         SPACE 1
         BAL   R10,FINELOAD
         SPACE 1
         LA    R2,TABLEIN+2
         LA    R3,TABLEOUT+2
         LA    R4,8
DDNAMEMV CLI   0(R2),C' '
         BE    DDNAMOVR
         MVC   0(1,R3),0(R2)
         MVI   0(R2),C' '
         LA    R2,1(R2)
         LA    R3,1(R3)
         BCT   R4,DDNAMEMV
         EJECT
DDNAMOVR LA    R6,TABLEIN
         ST    R6,CURENTRY
         SPACE 1
         LA    R6,72
         ST    R6,COUNT
         SPACE 1
GOAGAIN  MVC   NOPX+1(1),=X'F0'
         L     R2,CURENTRY
         L     R3,COUNT
         BAL   R10,SEARCH
         CLI   HITSW,C'0'
         BE    NEWENTRY
         SPACE 1
CONTINUE MVC   OUTADDR(4),0(R4)
         ST    R2,START
         MVC   NOPX+1(1),=X'00'
         LA    R2,1(R2)
         BCTR  R3,0
         BAL   R10,SEARCH
         CLI   HITSW,C'0'
         BE    NEWENTRY
         ST    R2,STOP
         SPACE 1
         L     R9,START
         L     R10,STOP
         SR    R10,R9
         BCTR  R10,0
         L     R9,OUTADDR
         STC   R10,MOVEPARM+1
         STC   R10,CLEARPRM+1
         STC   R10,78(R9)
         L     R10,START
         SPACE 1
MOVEPARM MVC   15(0,R9),0(R10)
CLEARPRM MVC   0(0,R10),INITOUT+2
         MVI   79(R9),C'X'
         CLI   EODCSW,C'1'
         BNE   CONTINUE
         MVI   EODCSW,C'0'
         SPACE 1
         LR    R7,R10
         BAL   R10,SAVECMNT
         SPACE 1
NEWENTRY L     R6,CURENTRY
         LA    R6,80(R6)
         CLC   0(80,R6),INITIN
         BE    WRITEIT
         ST    R6,CURENTRY
         B     GOAGAIN
         EJECT
WRITEIT  LA    R3,25
         LA    R4,TABLEOUT
         MVC   CARDSAVE,CARD
         SPACE 1
         BAL   R10,LASTLOOK
         BAL   R10,ADCOMMAS
         BAL   R10,ADCOMNTS
         SPACE 1
         CLI   TABLEOUT+79,C'X'
         BE    WRITLOOP
         MVC   SLOTSAVE(11),TABLEOUT+2
         MVC   BYSLOT+1(1),=XL1'00'
         SPACE 1
WRITLOOP MVC   CARD(80),0(R4)
         CLI   CARD+79,C'X'
         BNE   BUMPWRIT
         SPACE 1
BYSLOT   B     BLANKX
         MVC   CARD+2(11),SLOTSAVE
         MVC   BYSLOT+1(1),=XL1'F0'
BLANKX   MVC   CARD+78(2),INITOUT+2
         BAL   R10,PUTPRNT2
         BAL   R10,PUTUT2
BUMPWRIT LA    R4,80(R4)
         BCT   R3,WRITLOOP
         SPACE 2
         CLI   ECSW,C'1'
         BNE   WITEXIT
         MVI   ECSW,C' '
         MVC   CARD,ECARD
         BAL   R10,PUTPRNT2
         BAL   R10,PUTUT2
         SPACE 1
WITEXIT  MVC   SLOTSAVE(11),INITOUT+2
         MVC   CARD,CARDSAVE
         CLI   EOFUT1,C'1'
         BE    ENDOFJOB
         B     CHECKS
         EJECT
EODUT1   MVI   EOFUT1,C'1'
         SPACE 1
         CLI   FINEON,C'1'
         BE    FINERTRN
         SPACE 2
ENDOFJOB LA    R15,0
ABORT    L     R13,4(R13)
         L     R14,12(13,0)
         LM    R0,R12,20(13)
         BR    R14
         EJECT
*  SUBROUTINE TO FINISH LOAD OF THE INPUT TABLE
         SPACE 2
FINELOAD ST    R10,FINESAVE
         MVI   FINEON,C'1'
         SPACE 1
         LA    R8,24
         LA    R9,TABLEIN+80
         SPACE 1
FINEGET  GET   SYSUT1,CARD
         SPACE 1
         BAL   R10,PUTPRNT1
         SPACE 1
         BAL   R10,CHECKER
         SPACE 1
         CLI   MOREDD,C'0'
         BE    FINERTRN
         SPACE 1
         MVC   CARD(2),=CL2' '
         MVC   CARD+72(8),=CL8' '
         MVC   0(80,R9),CARD
         LA    R9,80(R9)
         BCT   R8,FINEGET
         SPACE 1
FINERTRN MVI   FINEON,C'0'
         L     R10,FINESAVE
         BR    R10
         EJECT
*  ROUTINE TO CHECK FOR CONTINUATION CARDS OF A DD CARD.
         SPACE 2
CHECKER  CLC   CARD(3),=CL3'//*'
         BE    NOMODD
         SPACE 1
         CLC   CARD(2),=CL2'//'
         BNE   NOMODD
         SPACE 1
         CLC   CARD+2(14),INITOUT+2
         BE    NOMODD
         SPACE 1
         LA    R2,CARD+2
         LA    R3,20
CHKLOOP  CLC   0(5,R2),=CL5' JOB '
         BE    NOMODD
         CLC   0(6,R2),=CL6' EXEC '
         BE    NOMODD
         CLC   0(4,R2),=CL4' DD '
         BE    NOMODD
         CLC   =CL6' PEND ',0(R2)  PEND STATEMENT ?        *LBD 07/86*
         BE    NOMODD              YES - BRANCH            *LBD 07/86*
         LA    R2,1(R2)
         BCT   R3,CHKLOOP
         SPACE 1
         MVI   MOREDD,C'1'
         BR    R10
NOMODD   MVI   MOREDD,C'0'
         BR    R10
         EJECT
*  ROUTINE TO SEARCH FOR PARAMETERS IN A DD CARD.
         SPACE 2
SEARCH   LA    R4,TABLE
         SR    R5,R5
         IC    R5,PTABCNT
         MVI   HITSW,C'0'
         SPACE 1
SETLEN   MVC   COMPARE+1(1),4(R4)
         CLI   0(R2),X'7D'
         BE    QUOTE
COMPARE  CLC   0(0,R2),5(R4)
         BE    HIT
         SPACE 1
NOPX     NOP   BUMP
         CLI   0(R2),C' '
         BE    EODCARD
         SPACE 1
BUMP     LA    R4,25(R4)
         BCT   R5,SETLEN
         SPACE 1
BUMP2    LA    R2,1(R2)
         BCT   R3,SEARCH
         SPACE 1
         BR    R10
HIT      MVI   HITSW,C'1'
         BR    R10
EODCARD  MVI   EODCSW,C'1'
         BE    HIT
         SPACE 2
QUOTELUP CLI   0(R2),X'7D'
         BE    BUMP2
QUOTE    LA    R2,1(R2)
         BCT   R3,QUOTELUP
         B     EODCARD
         EJECT
*  ROUTINE TO MARK INPUT AREA FOR SAVING COMMENTS.
         SPACE 1
SAVECMNT SR    R4,R4
         IC    R4,78(R9)
         AR    R7,R4
         LA    R7,1(R7)
         LR    R4,R3
         BCTR  R4,0
         STC   R4,BCOMPR+1
BCOMPR   CLC   0(0,R7),INITOUT+2
         BE    SCEXIT
         SPACE 1
         L     R5,CURENTRY
         MVI   0(R5),C'C'
         SPACE 1
SCEXIT   BR    R10
         EJECT
*  ROUTINE TO SCAN OUTPUT AREA AND INSERT COMMAS WHERE NECESSARY
         SPACE 1
ADCOMMAS CLI   79(R4),C'X'
         BNE   ADCBUMP
         SPACE 1
         CLC   15(3,R4),=CL3'DCB'
         BNE   ADCCONT
         CLI   ECSW,C'1'
         BNE   ADCCONT
         MVC   ADCMVCOM+1(1),=XL1'6B'
ADCCONT  LR    R5,R4
         LA    R5,15(R5)
         SR    R6,R6
         IC    R6,78(R4)
         LA    R6,1(R6)
         AR    R5,R6
         CLI   0(R5),C','
         BE    ADCBUMP
         BCTR  R5,0
         CLI   0(R5),C','
         BE    ADCBUMP
         LA    R5,1(R5)
         MVI   0(R5),C','
         SPACE 1
ADCBUMP  LA    R4,80(R4)
         LR    R7,R5
         BCT   R3,ADCOMMAS
         SPACE 1
ADCMVCOM MVI   0(R7),C' '
         LA    R3,25
         LA    R4,TABLEOUT
         MVC   ADCMVCOM+1(1),=XL1'40'
         BR    R10
         EJECT
*  ROUTINE TO MOVE COMMENTS FROM INPUT AREA TO OUTPUT AREA
         SPACE 1
ADCOMNTS LA    R5,TABLEIN
         LA    R6,25
CLIC     CLI   0(R5),C'C'
         BE    COMPUTE
ADCBUMP2 LA    R5,80(R5)
         BCT   R6,CLIC
         B     INCMNTS
         SPACE 1
COMPUTE  LA    R7,71
         LR    R3,R5
         LA    R3,1(R3)
CLIBLANK CLI   0(R3),C' '
         BNE   CMNTSTRT
         LA    R3,1(R3)
         BCT   R7,CLIBLANK
         MVI   0(R5),C' '
         B     ADCBUMP2
         SPACE 1
CMNTSTRT ST    R3,FULLWORD
         MVC   1(4,R5),FULLWORD
         LR    R3,R5
         LA    R3,71(R3)
CLIBLNK2 CLI   0(R3),C' '
         BNE   CMNTEND
         BCTR  R3,0
         BCT   R7,CLIBLNK2
         MVI   0(R5),C' '
         B     ADCBUMP2
         SPACE 1
CMNTEND  STC   R7,5(R5)
         B     ADCBUMP2
         SPACE 1
INCMNTS  LA    R5,TABLEIN
         LA    R6,25
INCSCLIC CLI   0(R5),C'C'
         BE    INSERT
INCSBUMP LA    R5,80(R5)
         BCT   R6,INCSCLIC
         B     ADCEXIT
         EJECT
INSERT   MVC   FULLWORD,1(R5)
         L     R1,FULLWORD
         MVC   MVCX+1(1),5(R5)
         MVC   MVCY+1(1),5(R5)
         LR    R7,R4
         SR    R15,R15
         IC    R15,5(R5)
         SR    R7,R15
         SH    R7,=H'9'
         LA    R7,80(R7)
         CLI   0(R7),C' '
         BE    MVCX
         LA    R4,80(R4)
         B     INSERT
MVCX     MVC   0(0,R7),0(R1)
MVCY     MVC   0(0,R1),INITOUT+2
         MVC   0(6,R5),INITOUT+2
BUMP4    LA    R4,80(R4)
         B     INCSBUMP
         SPACE 1
ADCEXIT  LA    R3,25
         LA    R4,TABLEOUT
         BR    R10
         EJECT
*  ROUTINE TO CHECK INPUT AREA FOR ANY DATA LEFT.
         SPACE 2
LASTLOOK CLI   DCBSW,C'1'
         BNE   LLEXIT
         LA    R4,TABLEIN
         SPACE 1
LLGOON   CLC   0(72,R4),INITOUT+2
         BNE   CHKITOUT
LLBUMP   LA    R4,80(R4)
         BCT   R3,LLGOON
         SPACE 1
LLEXIT   LA    R3,25
         LA    R4,TABLEOUT
         BR    R10
         SPACE 1
CHKITOUT MVC   CARD(80),0(R4)
         LA    R5,72
         LA    R6,CARD
CIOCLI   CLI   0(R6),C' '
         BNE   CIOCOMP
         LA    R6,1(R6)
         BCT   R5,CIOCLI
         B     LLBUMP
         SPACE 1
CIOCOMP  LA    R5,DCBTABL
         LA    R7,39
MVCCLID  MVC   CLIDCB+1(1),0(R5)
CLIDCB   CLC   1(0,R5),0(R6)
         BE    DCBCONT
         LA    R5,9(R5)
         BCT   R7,MVCCLID
         B     LLBUMP
         SPACE 1
DCBCONT  MVC   ECARD(80),INITOUT
         MVC   ECARD+15(55),0(R6)
         MVI   ECSW,C'1'
         B     LLBUMP
         EJECT
*  ROUTINES TO WRITE SYSPRNT1, SYSPRNT2, SYSUT2.
         SPACE 2
PUTPRNT1 NOP   PRNT1RET
         SPACE 1
         PUT   SYSPRNT1,CARD
         SPACE 1
PRNT1RET BR    R10
         SPACE 5
PUTPRNT2 NOP   PRNT2RET
         SPACE 1
         PUT   SYSPRNT2,CARD
         SPACE 1
PRNT2RET BR    R10
         SPACE 5
PUTUT2   NOP   UT2RET
         SPACE 1
         PUT   SYSUT2,CARD
         SPACE 1
UT2RET   BR    R10
         EJECT
SYSIN    DCB   DDNAME=SYSIN,DSORG=PS,MACRF=GM,EODAD=EODSYSIN
         EJECT
SYSUT1   DCB   DDNAME=SYSUT1,DSORG=PS,MACRF=GM,EODAD=EODUT1
         EJECT
SYSUT2   DCB   DDNAME=SYSUT2,DSORG=PS,MACRF=PM
         EJECT
SYSPRNT1 DCB   DDNAME=SYSPRNT1,DSORG=PS,MACRF=PM,                      X
               RECFM=FB,LRECL=120,BLKSIZE=1200
         EJECT
SYSPRNT2 DCB   DDNAME=SYSPRNT2,DSORG=PS,MACRF=PM,                      X
               RECFM=FB,LRECL=120,BLKSIZE=1200
         EJECT
SAVEAREA DS    18F
         SPACE 1
FINESAVE DS    F
OUTADDR  DS    F
CURENTRY DS    F
NXTENTRY DS    F
COUNT    DS    F
START    DS    F
STOP     DS    F
         SPACE 1
FULLWORD DS    F
DOUBLE   DS    D
         SPACE 1
PRNT1SW  DC    XL1'00'
PRNT2SW  DC    XL1'00'
UT2SW    DC    XL1'00'
FINEON   DC    C'0'
MOREDD   DC    C'0'
EOFUT1   DC    C'0'
HITSW    DC    C'0'
EODCSW   DC    C'0'
DCBSW    DC    C'0'
ECSW     DC    C' '
PTABCNT  DS    C
         SPACE 1
INITIN   DC    80XL1'FF'
INITOUT  DC    CL2'//'
         DC    CL78' '
         SPACE 1
CARD     DS    CL80
         DC    CL40' '
CARDSAVE DS    CL80
ECARD    DS    CL80
         DC    CL40' '      SAFETY FILLER
         SPACE 1
SLOTSAVE DC    CL11' '
         SPACE 1
         LTORG
         SPACE 1
DCBTABL  DC    XL1'4',CL8'BFALN   '
         DC    XL1'4',CL8'BFTEK   '
         DC    XL1'6',CL8'BLKSIZE '
         DC    XL1'4',CL8'BUFIN   '
         DC    XL1'3',CL8'BUFL    '
         DC    XL1'5',CL8'BUFMAX  '
         DC    XL1'4',CL8'BUFNO   '
         DC    XL1'5',CL8'BUFOFF  '
         DC    XL1'5',CL8'BUFOUT  '
         DC    XL1'4',CL8'BUFRQ   '
         DC    XL1'6',CL8'BUFSIZE '
         DC    XL1'3',CL8'CODE    '
         DC    XL1'3',CL8'CPRI    '
         DC    XL1'5',CL8'CYLOFL  '
         DC    XL1'2',CL8'DEN     '
         DC    XL1'5',CL8'DIAGNS  '
         DC    XL1'4',CL8'DSORG   '
         DC    XL1'4',CL8'EROPT   '
         DC    XL1'3',CL8'FUNC    '
         DC    XL1'3',CL8'GNCP    '
         DC    XL1'6',CL8'HIARCHY '
         DC    XL1'4',CL8'INTVL   '
         DC    XL1'5',CL8'KEYLEN  '
         DC    XL1'4',CL8'LIMCT   '
         DC    XL1'4',CL8'LRECL   '
         DC    XL1'4',CL8'LRECL   '
         DC    XL1'3',CL8'MODE    '
         DC    XL1'2',CL8'NCP     '
         DC    XL1'2',CL8'NTM     '
         DC    XL1'4',CL8'OPTCD   '
         DC    XL1'2',CL8'PCI     '
         DC    XL1'4',CL8'PRTSP   '
         DC    XL1'4',CL8'RECFM   '
         DC    XL1'6',CL8'RESERVE '
         DC    XL1'2',CL8'RKP     '
         DC    XL1'3',CL8'SOWA    '
         DC    XL1'4',CL8'STACK   '
         DC    XL1'5',CL8'THRESH  '
         DC    XL1'4',CL8'TRTCH   '
         SPACE 2
TABLE    DS    25CL25
TABLEIN  DS    25CL80
TABLEOUT DS    25CL80
         SPACE 1
         END
