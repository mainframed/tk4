IPCSDUMP TITLE 'CREATE AN ISPF TABLE FROM SYS1.DUMPNN HEADER RECORDS'
IPCSDUMP CSECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         EJECT
         AMDDATA
PRDINPUT DSECT
         ORG   PRDINPUT+12
P37TODVL DS    CL8                 MVS/370 CLOCK VALUE FROM DUMP
P37TITLE DS    CL100               MVS/370 TITLE FROM DUMP
         ORG   PRDINPUT+X'13A'
P37HASID DS    H                   MVS/370 HOME ASID
         ORG   PRDINPUT+X'7F8'
P37SR    EQU   *
         ORG   ,
         EJECT
         DCBD  DSORG=QS,DEVD=DA
         EJECT
         IEFZB4D0
         EJECT
         IEFZB4D2
         EJECT
***********************************************************************
*              INITIALIZATION
***********************************************************************
IPCSDUMP CSECT
         SAVE  (14,12),,IPCSDUMP-&SYSDATE
         LR    R12,R15
         USING IPCSDUMP,R12
         ST    R13,SAVE+4          CHAIN SAVE AREAS
         LA    R13,SAVE            ...
         USING SAVE,R13            DATA BASE REGISTER
         L     R1,0(R1)            POINT TO PARM FIELD
         LH    R2,0(R1)            GET PARM FIELD LENGTH
         LTR   R2,R2               IS IT ZERO?
         BZ    PARMERR             YES, BRANCH
         CH    R2,=H'8'            IS IT GREATER THAN EIGHT?
         BH    PARMERR             YES, BRANCH
         BCTR  R2,0                DECREMENT LENGTH FOR MOVE
         EX    R2,MVCPARM          MOVE PARM TO NJENODE
         LOAD  EP=ISPLINK          PRE-LOAD ISPLINK (ISPF)
         ST    R0,ISPLINK          ...
         LOAD  EP=BLSUMTOD         PRE-LOAD BLSUMTOD (IPCS TOD)
         ST    R0,BLSUMTOD         ...
         EJECT
***********************************************************************
*              CREATE ISPF TABLE "IPCDUMP". RETURN IMMEDIATELY IF IT
*              ALREADY EXISTS. PREPARE FOR SORTED ROWS, AND DEFINE ALL
*              TABLE VARIABLES.
***********************************************************************
         L     R15,ISPLINK         TRY TO OPEN TABLE
         CALL  (15),(TBOPEN,IPCDUMP,NOWRITE,@,SHARE),VL
         LTR   R15,R15             DOES TABLE ALREADY EXIST?
         BZ    RETURN              YES, RETURN
         L     R15,ISPLINK         CREATE IPCDUMP TABLE
         CALL  (15),(TBCREATE,IPCDUMP,@,NAMES,NOWRITE,@,@,SHARE),VL
         L     R15,ISPLINK         SORT EMPTY TABLE
         CALL  (15),(TBSORT,IPCDUMP,SORTLIST),VL
         L     R15,ISPLINK         DEFINE ISPF VARIABLES
         CALL  (15),(VDEFINE,NCPU,VCPU,CHAR,LCPU),VL
         L     R15,ISPLINK
         CALL  (15),(VDEFINE,NDATE,VDATE,CHAR,LDATE),VL
         L     R15,ISPLINK
         CALL  (15),(VDEFINE,NDATETIM,VDATETIM,CHAR,LDATETIM),VL
         L     R15,ISPLINK
         CALL  (15),(VDEFINE,NDEVTYPE,VDEVTYPE,CHAR,LDEVTYPE),VL
         L     R15,ISPLINK
         CALL  (15),(VDEFINE,NDSNAME,VDSNAME,CHAR,LDSNAME),VL
         L     R15,ISPLINK
         CALL  (15),(VDEFINE,NDUMPOS,VDUMPOS,CHAR,LDUMPOS),VL
         L     R15,ISPLINK
         CALL  (15),(VDEFINE,NFILE,VFILE,CHAR,LFILE),VL
         L     R15,ISPLINK
         CALL  (15),(VDEFINE,NID,VID,CHAR,LID),VL
         L     R15,ISPLINK
         CALL  (15),(VDEFINE,NID1,VID1,CHAR,LID1),VL
         L     R15,ISPLINK
         CALL  (15),(VDEFINE,NID2,VID2,CHAR,LID2),VL
         L     R15,ISPLINK
         CALL  (15),(VDEFINE,NNODE,VNODE,CHAR,LNODE),VL
         L     R15,ISPLINK
         CALL  (15),(VDEFINE,NPRDUMPT,VPRDUMPT,CHAR,LPRDUMPT),VL
         L     R15,ISPLINK
         CALL  (15),(VDEFINE,NQUAL,VQUAL,CHAR,LQUAL),VL
         L     R15,ISPLINK
         CALL  (15),(VDEFINE,NSERIAL1,VSERIAL1,CHAR,LSERIAL1),VL
         L     R15,ISPLINK
         CALL  (15),(VDEFINE,NSERIAL2,VSERIAL2,CHAR,LSERIAL2),VL
         L     R15,ISPLINK
         CALL  (15),(VDEFINE,NSERIAL3,VSERIAL3,CHAR,LSERIAL3),VL
         L     R15,ISPLINK
         CALL  (15),(VDEFINE,NSERIAL4,VSERIAL4,CHAR,LSERIAL4),VL
         L     R15,ISPLINK
         CALL  (15),(VDEFINE,NSOURCE,VSOURCE,CHAR,LSOURCE),VL
         L     R15,ISPLINK
         CALL  (15),(VDEFINE,NSRABD,VSRABD,CHAR,LSRABD),VL
         L     R15,ISPLINK
         CALL  (15),(VDEFINE,NSRRC,VSRRC,CHAR,LSRRC),VL
         L     R15,ISPLINK
         CALL  (15),(VDEFINE,NSRCID,VSRCID,CHAR,LSRCID),VL
         L     R15,ISPLINK
         CALL  (15),(VDEFINE,NSRLM,VSRLM,CHAR,LSRLM),VL
         L     R15,ISPLINK
         CALL  (15),(VDEFINE,NSRCSECT,VSRCSECT,CHAR,LSRCSECT),VL
         L     R15,ISPLINK
         CALL  (15),(VDEFINE,NSRFRR,VSRFRR,CHAR,LSRFRR),VL
         L     R15,ISPLINK
         CALL  (15),(VDEFINE,NSREGPSW,VSREGPSW,CHAR,LSREGPSW),VL
         L     R15,ISPLINK
         CALL  (15),(VDEFINE,NSRPGM,VSRPGM,CHAR,LSRPGM),VL
         L     R15,ISPLINK
         CALL  (15),(VDEFINE,NSRLVL,VSRLVL,CHAR,LSRLVL),VL
         L     R15,ISPLINK
         CALL  (15),(VDEFINE,NSRSC,VSRSC,CHAR,LSRSC),VL
         L     R15,ISPLINK
         CALL  (15),(VDEFINE,NSRRRL,VSRRRL,CHAR,LSRRRL),VL
         L     R15,ISPLINK
         CALL  (15),(VDEFINE,NTIME,VTIME,CHAR,LTIME),VL
         L     R15,ISPLINK
         CALL  (15),(VDEFINE,NTITLE,VTITLE,CHAR,LTITLE),VL
         L     R15,ISPLINK
         CALL  (15),(VDEFINE,NTITLE2,VTITLE2,CHAR,LTITLE2),VL
         L     R15,ISPLINK
         CALL  (15),(VDEFINE,NTYPE,VTYPE,CHAR,LTYPE),VL
         L     R15,ISPLINK
         CALL  (15),(VDEFINE,NVOLUME,VVOLUME,CHAR,LVOLUME),VL
         EJECT
***********************************************************************
*              LOOP THROUGH ALL ROWS IN ISPF TABLE "IPCCPU".
*              "IPCCPU" CONTAINS ONE ROW FOR EACH CPU, WITH CPU NAME,
*              DUMP RANGE, AND VOLUME.
***********************************************************************
         L     R15,ISPLINK         TOP OF IPCCPU TABLE
         CALL  (15),(TBTOP,IPCCPU),VL
CPULOOP  EQU   *
         L     R15,ISPLINK         GET NEXT IPCCPU ROW
         CALL  (15),(TBSKIP,IPCCPU),VL
         LTR   R15,R15             END OF IPCCPU TABLE?
         BNZ   CLEANUP             YES, BRANCH
         CLC   VNODE,NJENODE       DOES ROW MATCH REQUESTED NODE?
         BNE   CPULOOP             NO, BRANCH
         CLI   VSERIAL1,C' '       IS THIS AN ALIAS ROW?
         BE    CPULOOP             YES, BRANCH
***********************************************************************
*              LOOP THROUGH ALL SYS1.DUMPNN DATA SETS ON THE CPU,
*              ALLOCATE EACH DUMP DATA SET.
***********************************************************************
         MVC   VOLUME,VVOLUME      GET VOLUME SERIAL
         MVC   UNIT,VDEVTYPE       GET UNIT NAME
         PACK  ID1,VID1            GET FIRST DUMP ID
         PACK  ID2,VID2            GET LAST DUMP ID
         ZAP   ID,ID1              INITIALIZE ID TO FIRST ONE
DUMPLOOP EQU   *
         UNPK  VID,ID              GET DSNAME SUFFIX
         OI    VID+L'VID-1,C'0'    CORRECT THE ZONE
         MVC   DSN,DSNAME          GET DSNAME FOR DYNALLOC
         LA    R1,RBP              POINT TO DYNALLOC PARM LIST
         DYNALLOC                  ALLOCATE SYS1.DUMPNN
         LTR   R15,R15             SUCCESSFUL ALLOCATION?
         BZ    OPEN                YES, BRANCH
         ST    R15,RETCODE         SAVE DYNALLOC RETURN CODE
         CLC   INFO,=X'0218'       VOLUME NOT MOUNTED?
         BE    NEXTDSN             YES, IGNORE
         LA    R1,DFPARMS          POINT TO DYNALLOC REQUEST BLOCK
         LINK  EP=IKJEFF18         INFORM USER OF ERROR
         B     NEXTDSN             BRANCH, IGNORE IT
***********************************************************************
*              OPEN A SYS1.DUMPNN DATA SET AND SEARCH FOR HEADER RECORD
***********************************************************************
OPEN     EQU   *
         MVC   DCBDDNAM-IHADCB+SYS1DUMP,DDNAME  DDNAME FROM DYNALLOC
         OPEN  (SYS1DUMP,INPUT)    OPEN SYS1.DUMPNN
         LA    R9,10               TRY FIRST TEN RECORDS
RECLOOP  EQU   *
         GET   SYS1DUMP            GET A SYS1.DUMPNN RECORD
         LR    R10,R1              SET BASE FOR RECORD
         USING PRDINPUT,R10
         CLI   PRDRECID,PRDHDREC   HEADER RECORD?
         BNE   NEXTREC             NO, BRANCH
         CLI   PRDHDRID,PRDHD811   MVS/XA?
         BE    MVSXA               YES, BRANCH
         CLI   PRDHDRID,PRDHDR     MVS/370?
         BE    MVS370              YES, BRANCH
NEXTREC  EQU   *
         BCT   R9,RECLOOP          TRY NEXT RECORD
         B     CLOSE               BRANCH, HEADER NOT FOUND
***********************************************************************
*              OBTAIN DATA FROM MVX/XA HEADER RECORD.
***********************************************************************
MVSXA    EQU   *
         LA    R8,PRDSR            POINT TO MVS/XA SYMPTOM AREA
         MVC   VDUMPOS,=C'XA '     SET MVS/XA DUMP
         MVC   TOD,PRDTODVL        GET MVS/XA DUMP TIME
         MVC   VTITLE,PRDTITLE     GET MVS/XA DUMP TITLE
         MVI   VFILE,C' '
         MVC   VFILE+1(L'VFILE-1),VFILE  CLEAR FILE NAME
         MVC   VSOURCE,SRCDSN      GET DSNAME AS SOURCE
         CLC   VID,=C'09'          IS DUMP CATALOGED?
         BH    MVSXA1              YES, BRANCH
         MVC   FILE,=C'DUMP'       GET FILE NAME
         MVC   FILECPU,VCPU        ... CPU
         MVC   FILEID,VID          ... DUMP ID
         MVC   VSOURCE,SRCFILE     GET FILE AS SOURCE
MVSXA1   EQU   *
         MVC   ASID,PRDASID        GET ADDRESS SPACE
         CLC   ASID,=H'1'          IS IT 1?
         BNE   MVSXA2              NO, BRANCH
         LH    R7,PRDSDMPO         GET COMMON SECTION OFFSET
         LA    R7,0(R7,R10)        POINT TO COMMON SECTION
         USING PRDSDSM,R7
         MVC   ASID,PRDHASID       GET HOME ADDRESS SPACE
         DROP  R7
MVSXA2   EQU   *
         MVC   VPRDUMPT,=CL11'STAND/ALONE'  SET STAND/ALONE DUMP
         CLI   PRDDUMPT,PRDSADP    WAS IT?
         BE    COMMON              YES, BRANCH
         MVC   VPRDUMPT,=CL11'SVC        '  SET SVC DUMP
         CLI   PRDDUMPT,PRDSVCDP   WAS IT?
         BE    COMMON              YES, BRANCH
         MVC   VPRDUMPT,=CL11'SYSMDUMP   '  SET SYSMDUMP
         CLI   PRDDUMPT,PRDSADP    WAS IT?
         BE    COMMON              YES, BRANCH
         MVC   VPRDUMPT,=CL11'SLIP       '  SET SLIP DUMP
         CLI   PRDDUMPT,PRDSLPDP   WAS IT?
         BE    COMMON              YES, BRANCH
         MVI   VPRDUMPT,C' '       CLEAR DUMP TYPE
         MVC   VPRDUMPT+1(L'VPRDUMPT-1),VPRDUMPT
         B     COMMON              BRANCH
***********************************************************************
*              OBTAIN DATA FROM MVS/370 HEADER RECORD.
***********************************************************************
MVS370   EQU   *
         LA    R8,P37SR            POINT TO MVS/370 SYMPTOM AREA
         MVC   VDUMPOS,=C'370'     SET MVS/370 DUMP
         MVC   TOD,P37TODVL        GET MVS/370 DUMP TIME
         MVC   VTITLE,P37TITLE     GET MVC/370 DUMP TITLE
         MVC   FILE,=C'DUMP'       GET FILE NAME
         MVC   FILECPU,VCPU        ... CPU
         MVC   FILEID,VID          ... DUMP ID
         MVC   VSOURCE,SRCDSN      GET DSNAME AS SOURCE
         MVC   ASID,PRDASID        GET ADDRESS SPACE
         CLC   ASID,=H'1'          IS IT 1?
         BNE   MVS370A             NO, BRANCH
         MVC   ASID,P37HASID       YES, GET HOME ADDRESS SPACE
MVS370A  EQU   *
         MVI   VPRDUMPT,C' '       CLEAR DUMP TYPE
         MVC   VPRDUMPT+1(L'VPRDUMPT-1),VPRDUMPT
***********************************************************************
*              OBTAIN DATA FROM EITHER HEADER RECORD.
***********************************************************************
COMMON   EQU   *
         USING PRDSR,R8
         MVI   VSRBASIC,C' '       CLEAR BASIC SYMPTOM STRING
         MVC   VSRBASIC+1(L'VSRBASIC-1),VSRBASIC
         MVI   VSROPT2,C' '        CLEAR OPTIONAL SYMPTOM STRING
         MVC   VSROPT2+1(L'VSROPT2-1),VSROPT2
         CLC   SR,=C'SR'           IS SYMPTOM STRING PRESENT?
         BNE   PROCESS             NO, BRANCH
         MVC   VSRBASIC,SRBASIC    GET BASIC SYMPTOM STRING
         MVC   VSROPT2,SROPT2      BET OPTIONAL SYMPTOM STRING
         DROP  R8
***********************************************************************
*              CONVERT DATA TO DESIRED FORMAT AND ADD ROW TO "IPCDUMP"
*              TABLE.
***********************************************************************
PROCESS  EQU   *
         LH    R0,ASID             GET ASID
         CVD   R0,WORK             CONVERT TO DECIMAL
         UNPK  QUAL,WORK           CONVERT TO EBCDIC
         OI    QUAL+L'QUAL-1,C'0'  CORRECT THE ZONE
         L     R15,BLSUMTOD        CONVERT TOD TO CHARACTER FORM
         CALL  (15),(TOD,TODBUF),VL
         MVC   SYEAR,YEAR          REARRANGE FOR SORT
         MVC   SMONTH,MONTH        ...
         MVC   SDAY,DAY            ...
         MVC   SHOUR,HOUR          ...
         MVC   SMINUTE,MINUTE      ...
         MVC   SSECOND,SECOND      ...
         L     R15,ISPLINK         ADD ROW TO IPCDUMP TABLE
         CALL  (15),(TBADD,IPCDUMP,@,ORDER),VL
         DROP  R10                 SYS1DUMP
***********************************************************************
*              TERMINATE SYS1.DUMPNN PROCESSING
***********************************************************************
CLOSE    EQU   *
         CLOSE (SYS1DUMP)          CLOSE/DEALLOCATE SYS1.DUMPNN
***********************************************************************
*              PREPARE FOR NEXT SYS1.DUMPNN
***********************************************************************
NEXTDSN  EQU   *
         AP    ID,=P'1'            INCREMENT TO NEXT SYS1.DUMPNN
         CP    ID,ID2              LAST DATA SET FOR CPU?
         BNH   DUMPLOOP            NO, LOOP FOR NEXT SYS1.DUMPNN
***********************************************************************
*              PREPARE FOR NEXT CPU
***********************************************************************
         BH    CPULOOP             YES, LOOP FOR NEXT CPU
***********************************************************************
*              CLEAN UP AND TERMINATE
***********************************************************************
CLEANUP  EQU   *
         TM    DCBBUFCB+3-IHADCB+SYS1DUMP,1  DOES BUFFER POOL EXIST?
         BO    RESETTB             NO, BRANCH
         FREEPOOL SYS1DUMP         FREE I/O BUFFER POOL
RESETTB  EQU   *
         L     R15,ISPLINK         SET IPCDUMP TABLE TO TOP
         CALL  (15),(TBTOP,IPCDUMP),VL
         L     R15,ISPLINK         RESET ALL DEFINED ISPF VARIABLES
         CALL  (15),(VRESET),VL
RETURN   EQU   *
         DELETE EP=ISPLINK         DELETE ISPF
         DELETE EP=BLSUMTOD        DELETE IPCS TOD CONVERSION
         L     R13,SAVE+4          POINT TO CALLER'S SAVE AREA
         RETURN (14,12),RC=0       NORMAL RETURN
PARMERR  EQU   *
         L     R13,SAVE+4          POINT TO CALLER'S SAVE AREA
         RETURN (14,12),RC=12      ERROR RETURN
         EJECT
MVCPARM  MVC   NJENODE(0),2(R1)    MOVE PARM VALUE
         DROP  R13
         DROP  R12
         EJECT
***********************************************************************
*              DATA
***********************************************************************
SAVE     DC    18F'0'              SAVE AREA
@        DC    CL8' '              BLANK FOR ISPLINK
ASID     DC    H'0'
BLSUMTOD DC    A(0)                ADDRESS OF BLSUMTOD (IPCS TOD)
CHAR     DC    CL8'CHAR'
IPCCPU   DC    CL8'IPCCPU'
ID       DC    PL2'0'
ID1      DC    PL2'0'
ID2      DC    PL2'0'
IPCDUMP  DC    CL8'IPCDUMP'        NAME OF ISPF TABLE
ISPLINK  DC    A(0)                ADDRESS OF ISPLINK (ISPF)
LCPU     DC    A(L'VCPU)
LDATE    DC    A(L'VDATE)
LDATETIM DC    A(L'VDATETIM)
LDEVTYPE DC    A(L'VDEVTYPE)
LDSNAME  DC    A(L'VDSNAME)
LDUMPOS  DC    A(L'VDUMPOS)
LFILE    DC    A(L'VFILE)
LID      DC    A(L'VID)
LID1     DC    A(L'VID1)
LID2     DC    A(L'VID2)
LNODE    DC    A(L'VNODE)
LPRDUMPT DC    A(L'VPRDUMPT)
LQUAL    DC    A(L'VQUAL)
LSERIAL1 DC    A(L'VSERIAL1)
LSERIAL2 DC    A(L'VSERIAL2)
LSERIAL3 DC    A(L'VSERIAL3)
LSERIAL4 DC    A(L'VSERIAL4)
LSOURCE  DC    A(L'VSOURCE)
LSRABD   DC    A(L'VSRABD)
LSRRC    DC    A(L'VSRRC)
LSRCID   DC    A(L'VSRCID)
LSRLM    DC    A(L'VSRLM)
LSRCSECT DC    A(L'VSRCSECT)
LSRFRR   DC    A(L'VSRFRR)
LSREGPSW DC    A(L'VSREGPSW)
LSRPGM   DC    A(L'VSRPGM)
LSRLVL   DC    A(L'VSRLVL)
LSRSC    DC    A(L'VSRSC)
LSRRRL   DC    A(L'VSRRRL)
LTIME    DC    A(L'VTIME)
LTITLE   DC    A(L'VTITLE)
LTITLE2  DC    A(L'VTITLE2)
LTYPE    DC    A(L'VTYPE)
LVOLUME  DC    A(L'VVOLUME)
*----------------------------------------------------------------------
*              ISPF TABLE NAME LIST
*----------------------------------------------------------------------
NAMES    DS    0D                  ISPF TABLE NAME LIST
         DC    A((NAMEEND-NAMES-8)/8)
         DC    F'0'
NCPU     DC    CL8'CPU'
NDATE    DC    CL8'DATE'
NDATETIM DC    CL8'DATETIME'
NDEVTYPE DC    CL8'DEVTYPE'
NDSNAME  DC    CL8'DSNAME'
NDUMPOS  DC    CL8'DUMPOS'
NFILE    DC    CL8'FILE'
NIBMPMR  DC    CL8'IBMPMR'
NID      DC    CL8'ID'
NJOB     DC    CL8'JOB'
NNODE    DC    CL8'NODE'
NOWNER   DC    CL8'OWNER'
NPRDUMPT DC    CL8'PRDUMPT'
NQUAL    DC    CL8'QUAL'
NSERIAL  DC    CL8'SERIAL'
NSOURCE  DC    CL8'SOURCE'
NSPR     DC    CL8'SPR'
NSRABD   DC    CL8'SRABD'
NSRRC    DC    CL8'SRRC'
NSRCID   DC    CL8'SRCID'
NSRLM    DC    CL8'SRLM'
NSRCSECT DC    CL8'SRCSECT'
NSRFRR   DC    CL8'SRFRR'
NSREGPSW DC    CL8'SREGPSW'
NSRPGM   DC    CL8'SRPGM'
NSRLVL   DC    CL8'SRLVL'
NSRSC    DC    CL8'SRSC'
NSRRRL   DC    CL8'SRRRL'
NTIME    DC    CL8'TIME'
NTITLE   DC    CL8'TITLE'
NTITLE2  DC    CL8'TITLE2'
NTYPE    DC    CL8'TYPE'
NVOLUME  DC    CL8'VOLUME'
NAMEEND  EQU   *
*----------------------------------------------------------------------
NID1     DC    CL8'ID1'
NID2     DC    CL8'ID2'
NJENODE  DC    CL8' '              PARM = NJE NODE NAME
NOWRITE  DC    CL8'NOWRITE'
NSERIAL1 DC    CL8'SERIAL1'
NSERIAL2 DC    CL8'SERIAL2'
NSERIAL3 DC    CL8'SERIAL3'
NSERIAL4 DC    CL8'SERIAL4'
ORDER    DC    CL8'ORDER'
RETCODE  DC    F'0'
SHARE    DC    CL8'SHARE'
SORTLIST DC    C'(DATETIME,C,D)'   ISPF TABLE IPCDUMP SORT LIST
TBADD    DC    CL8'TBADD'
TBCREATE DC    CL8'TBCREATE'
TBOPEN   DC    CL8'TBOPEN'
TBSORT   DC    CL8'TBSORT'
TBTOP    DC    CL8'TBTOP'
TBSKIP   DC    CL8'TBSKIP'
TOD      DC    XL8'0'
*----------------------------------------------------------------------
*              TIME OF DAY
*----------------------------------------------------------------------
TODBUF   DS    0CL17
VDATE    DS    0CL8
MONTH    DC    C'MM'
         DC    C'/'
DAY      DC    C'DD'
         DC    C'/'
YEAR     DC    C'YY'
         DC    C' '
VTIME    DS    0CL8
HOUR     DC    C'HH'
         DC    C':'
MINUTE   DC    C'MM'
         DC    C':'
SECOND   DC    C'SS'
*----------------------------------------------------------------------
VCPU     DC    CL8' '
*----------------------------------------------------------------------
*              SORTABLE DATE/TIME
*----------------------------------------------------------------------
VDATETIM DS    0CL12' '
SYEAR    DC    C'YY'
SMONTH   DC    C'MM'
SDAY     DC    C'DD'
SHOUR    DC    C'HH'
SMINUTE  DC    C'MM'
SSECOND  DC    C'SS'
*----------------------------------------------------------------------
VDEFINE  DC    CL8'VDEFINE'
VDEVTYPE DC    CL8' '
SRCDSN   DS    0CL21
         DC    C'DSNAME('
VDSNAME  DC    CL13'''SYS1.DUMP00'''
         ORG   VDSNAME+1
DSNAME   DS    C'SYS1.DUMP00'      DSNAME
         ORG   DSNAME+9
VID      DS    C'00'               DSNAME SUFFIX
         ORG   ,
         DC    C')'
*----------------------------------------------------------------------
*              FILE NAME
*----------------------------------------------------------------------
SRCFILE  DS    0CL21
         DC    C'FILE('
VFILE    DS    0CL8
FILE     DC    C'DUMP'
FILECPU  DC    C' '
FILEID   DC    CL2' '
         DC    C' '
         DC    CL8')'
*----------------------------------------------------------------------
VID1     DC    CL2' '
VID2     DC    CL2' '
VDUMPOS  DC    CL3' '
VNODE    DC    CL8' '
VPRDUMPT DC    CL11' '
VQUAL    DC    CL11'ASID(     )'
         ORG   VQUAL+5
QUAL     DS    CL5
         ORG   ,
VRESET   DC    CL8'VRESET'
VSERIAL1 DC    CL6' '
VSERIAL2 DC    CL6' '
VSERIAL3 DC    CL6' '
VSERIAL4 DC    CL6' '
VSOURCE  DC    CL21' '
*----------------------------------------------------------------------
*              SYMPTOM STRING
*----------------------------------------------------------------------
VSRBASIC DS    0CL112              BASIC SYMPTOM STRING
VSRABD   DC    CL8' '
VSRRC    DC    CL16' '
VSRCID   DC    CL16' '
VSRLM    DC    CL16' '
VSRCSECT DC    CL16' '
VSRFRR   DC    CL16' '
VSREGPSW DC    CL24' '
VSROPT2  DS    0CL84               OPTIONAL SYMPTOM STRING
VSRPGM   DC    CL16' '
VSRLVL   DC    CL24' '
VSRSC    DC    CL28' '
VSRRRL   DC    CL16' '
*----------------------------------------------------------------------
VTITLE   DC    CL100' '
         ORG   VTITLE+L'VTITLE/2
VTITLE2  DS    CL(L'VTITLE/2)
         ORG   ,
VTYPE    DC    CL4'DUMP'
VVOLUME  DC    CL6' '
WORK     DC    D'0'
         EJECT
***********************************************************************
*              DCB FOR SYS1.DUMPNN
***********************************************************************
SYS1DUMP DCB   BLKSIZE=4104,                                           *
               DSORG=PS,                                               *
               EODAD=CLOSE,                                            *
               EROPT=SKP,                                              *
               LRECL=4104,                                             *
               MACRF=GL,                                               *
               RECFM=FS
         EJECT
***********************************************************************
*              DYNAMIC ALLOCATION PARAMETER LIST
***********************************************************************
         DS    0F
RBP      DC    AL1(X'80'),AL3(RB)  REQUEST BLOCK POINTER
RB       DS    0F                  REQUEST BLOCK
         DC    AL1(20)             LENGTH
         DC    AL1(S99VRBAL)       VERB CODE
         DC    AL1(S99NOMNT),AL1(0) FLAGS1
ERROR    DC    XL2'0'              ERROR CODE
INFO     DC    XL2'0'              REASON CODE
         DC    A(TXTPP)            TEXT POINTERS
         DC    F'0'                RESERVED
         DC    XL4'0'              FLAGS2
TXTPP    DS    0F
         DC    A(KDDNAME)
         DC    A(KDSNAME)
         DC    A(KSTATUS)
         DC    A(KCLOSE)
         DC    A(KVOLUME)
         DC    AL1(X'80'),AL3(KUNIT)
KDDNAME  DC    AL2(DALRTDDN),AL2(1),AL2(8)
DDNAME   DC    CL8' '              DDNAME
KDSNAME  DC    AL2(DALDSNAM),AL2(1),AL2(11)
DSN      DC    CL11'SYS1.DUMP00'
KSTATUS  DC    AL2(DALSTATS),AL2(1),AL2(1)
         DC    AL1(8)              DISP=SHR
KCLOSE   DC    AL2(DALCLOSE),AL2(0) FREE=CLOSE
KVOLUME  DC    AL2(DALVLSER),AL2(1),AL2(6)
VOLUME   DC    CL6' '              VOLUME=SER
KUNIT    DC    AL2(DALUNIT),AL2(1),AL2(8)
UNIT     DC    CL8' '              UNIT
         EJECT
***********************************************************************
*              DAIRFAIL PARAMETER LIST
***********************************************************************
         IKJEFFDF ,
         ORG   DFS99RBP
         DC    A(RB)               DYNALLOC REQUEST BLOCK
         ORG   DFRCP
         DC    A(RETCODE)          DYNALLOC RETURN CODE
         ORG   DFJEFF02
         DC    A(EFF02)
         ORG   DFIDP
         DC    A(IDP)              SWITCHES/CALLER ID
         ORG   DFCPPLP
         DC    A(0)
         ORG   DFBUFP
         DC    A(0)
         ORG   ,
EFF02    DC    A(0)
IDP      DC    AL1(DFWTP),AL1(DFSVC99)  ISSUE WTP ONLY/FOR SVC 99
         EJECT
         END   IPCSDUMP
