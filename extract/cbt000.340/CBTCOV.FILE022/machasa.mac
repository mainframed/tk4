MACHASA  $PROLOG R12
         EJECT
*---------------------------------------------------------*
*                                                         *
* FUNCTION: CONVERT MACHINE CARRIAGE CONTROL TO ASA       *
*           CARRIAGE CONTROL.                             *
*                                                         *
* FILES:    INPUT CONTAINS A DATASET WITH MACH CC OR      *
*           NO  CC.                                       *
*                                                         *
*           OUTPUT WILL BE A VBA DATASET WITH ASA CC.     *
*                                                         *
*                                                         *
*---------------------------------------------------------*
         EJECT
         OPEN  (INPUT,,OUTPUT,OUTPUT)
         LA    R9,INPUT
         USING IHADCB,R9
         TM    DCBRECFM,DCBRECV        VARIABLE LENGTH ?
         BZ    CKCC
         SETON VAR                     SET VAR
CKCC     DS    0H
         TM    DCBRECFM,DCBRECCC       ANY CC ?
         BZ    SETNOCC
CKCCA    TM    DCBRECFM,DCBRECCA       ASA ??
         BZ    CKMACH                  NO - CHECK MACH
         SETON ASACC
CKMACH   TM    DCBRECFM,DCBRECCM       MACH ??
         BZ    READ                    NO - IGNORE IT
         SETON MACHCC
         B     READ
SETNOCC  SETON NACC                    CC NOT AVAILABLE
         EJECT
READ     GET   INPUT
         LR    R5,R1                   -> INPUT RECORD
         LA    R8,RECORD               -> OUTPUT COPY
         IFOFF NACC,NACCX
         LA    R8,1(R8)                SKIP OVER CC POSITION
NACCX    DS    0H
         IFON  VAR,DOVAR
*        ASSUME FIXED FORMAT
         LH    R3,DCBLRECL
         EX    R3,MOVEREC
         IFOFF NACC,NACCF
         LA    R3,1(R3)                +1 FOR CC POSITION
NACCF    DS    0H
         LA    R3,4(R3)                UP FOR LEN OF RDW
         STH   R3,RDW                  SET UP RDW
         B     FIXCC
DOVAR    DS    0H
         LH    R3,DCBLRECL
         LA    R5,4(R5)                SKIP RDW
         SH    R3,=H'04'               LESS RDW LENGTH
         EX    R3,MOVEREC              AND MOVE IT
         IFOFF NACC,NACCV
         LA    R3,1(R3)                +1 FOR CC POSITION
NACCV    DS    0H
         LA    R3,4(R3)                ADD FOR RDW
         STH   R3,RDW                  SET UP RDW
         EJECT
FIXCC    DS    0H
         IFON  ASACC,PUTIT             IF ASA - NO FIX
         IFON  NACC,DEFCC              IF NOCC THEN ->
         MVC   HPREV,PREV              SAVE PREV IN HOLDING SLOT
         TRT   RECORD(1),MACHTBL       CHECK CC
         BZ    DEFCC                   NO GOOD CC
         STC   R2,PREV                 SAVE PREV FOR NEXT RECORD
         TM    RECORD,X'02'            IS IT AN IMMEDIATE ?
         BZ    NOIMM                   NO
         CLI   HPREV,0                 ANY OUTSTANDING CC
         BE    READ                    NO
         CLI   HPREV,C'+'              WAS PREV WRTSP0 OR IMMSP0 ?
         BE    READ                    NO
         CLI   HPREV,C' '              WAS PREV WRTSP1 OR IMMSP1 ?
         BNE   PREVSIG                 NO - TRY IT
         TM    RECORD,X'80'            SKIP, NOT A SPACE ?
         BO    READ                    IGNORE
PREVSIG  MVC   BLINE(1),HPREV
         PUT   OUTPUT,BLINERDW         WRITE SHORT LINE
         B     READ
NOPREV   DS    0H
         B     READ                    NO WRITE
NOIMM    DS    0H
         MVC   RECORD(1),HPREV
         CLI   RECORD,0                CC BASED ON PREV RECORD
         BNE   PUTIT                   NO PUTIT
*        WE'VE HIT A MACH WRT CC NOT PRECEDED BY A MACH CC.
*        MAKE  IT A SKIP TO CH 1.
         MVI   RECORD,C'1'
*        DO ASA CC
         SPACE 2
ASA      DS    0H
         CLI   PREV,0                  WAS PREV RECORD MACH
         BE    PUTIT                   NO - BRANCH
         MVI   PREV,0                  RESET PREV
*        WE'VE  HIT A ASA RECORD NOT PRECEDED BY AN ASA RECORD
*        IF IT IS A SINGLE SPACE - MAKE IT A SKIP TO CH 1.
         CLI   RECORD,C' '
         BNE   PUTIT
         MVI   RECORD,C'1'
         B     PUTIT
DEFCC    MVI   RECORD,C' '             SINGLE SPACE
PUTIT    PUT   OUTPUT,RDW              AND PUT IT
         XC    RECORD,RECORD           CLEAR RECORD
         B     READ                    AND CONTINUE
         DROP  R9
EOF      CLOSE (INPUT,,OUTPUT)
         $EPILOG 0
         EJECT
         LTORG
         SPACE 2
         BITSW VAR,ASACC,MACHCC,NACC
MOVEREC  MVC   0(0,R8),0(R5)           EXECUTED *****
PREV     DC    C'0'
HPREV    DC    C'0'
         SPACE 3
***********************************************************************
* TRANSLATE TABLE FOR MACH CARRIAGE CONTROL
***********************************************************************
         DS    0D
MACHTBL  DC    256X'00'
         ORG   MACHTBL+X'01'       WRT SP0
         DC    C'+'
         ORG   MACHTBL+X'09'       WRT SP1
         DC    C' '
         ORG   MACHTBL+X'11'       WRT SP2
         DC    C'0'
         ORG   MACHTBL+X'19'       WRT SP3
         DC    C'-'
         ORG   MACHTBL+X'89'       WRT SK1
         DC    C'1'
         ORG   MACHTBL+X'91'       WRT SK2
         DC    C'2'
         ORG   MACHTBL+X'99'       WRT SK3
         DC    C'3'
         ORG   MACHTBL+X'A1'       WRT SK4
         DC    C'4'
         ORG   MACHTBL+X'A9'       WRT SK5
         DC    C'5'
         ORG   MACHTBL+X'B1'       WRT SK6
         DC    C'6'
         ORG   MACHTBL+X'B9'       WRT SK7
         DC    C'7'
         ORG   MACHTBL+X'C1'       WRT SK8
         DC    C'8'
         ORG   MACHTBL+X'C9'       WRT SK9
         DC    C'9'
         ORG   MACHTBL+X'D1'       WRT SK10
         DC    C'A'
         ORG   MACHTBL+X'D9'       WRT SK11
         DC    C'B'
         ORG   MACHTBL+X'E1'       WRT SK12
         DC    C'C'
         ORG   MACHTBL+X'03'       IMM SP0 (NO-OP)
         DC    C'+'
         ORG   MACHTBL+X'0B'       IMM SP1
         DC    C' '
         ORG   MACHTBL+X'13'       IMM SP2
         DC    C'0'
         ORG   MACHTBL+X'1B'       IMM SP3
         DC    C'-'
         ORG   MACHTBL+X'8B'       IMM SK1
         DC    C'1'
         ORG   MACHTBL+X'93'       IMM SK2
         DC    C'2'
         ORG   MACHTBL+X'9B'       IMM SK3
         DC    C'3'
         ORG   MACHTBL+X'A3'       IMM SK4
         DC    C'4'
         ORG   MACHTBL+X'AB'       IMM SK5
         DC    C'5'
         ORG   MACHTBL+X'B3'       IMM SK6
         DC    C'6'
         ORG   MACHTBL+X'BB'       IMM SK7
         DC    C'7'
         ORG   MACHTBL+X'C3'       IMM SK8
         DC    C'8'
         ORG   MACHTBL+X'CB'       IMM SK9
         DC    C'9'
         ORG   MACHTBL+X'D3'       IMM SK10
         DC    C'A'
         ORG   MACHTBL+X'DB'       IMM SK11
         DC    C'B'
         ORG   MACHTBL+X'E3'       IMM SK12
         DC    C'C'
         ORG
         EJECT
OUTEXIT  DS    0H
         USING IHADCB,R1
         CLI   DCBBLKSI,0              ANY BLKSIZE SPECIFIED
         BNER  R14                     YES - RETURN TO MAINLINE
         MVC   DCBBLKSI,=H'6220'
         BR    R14
         EJECT
INPUT    DCB   DSORG=PS,MACRF=GL,DDNAME=INPUT,EODAD=EOF
         EJECT
OUTPUT   DCB   DSORG=PS,MACRF=PM,DDNAME=OUTPUT,                        X
               RECFM=VBA,LRECL=259,EXLST=OUTEXITL
         EJECT
         DS    0D
OUTEXITL DC    0F'0',X'85',AL3(OUTEXIT)
         SPACE 1
RDW      DC    F'00'
RECORD   DS    CL255
         SPACE 1
BLINERDW DC    H'05',H'00'
BLINE    DC    C' '
         EJECT
         DCBD  DSORG=PS
         END
