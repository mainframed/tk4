         MACRO
&NAME    TSAVE &REG,&CODE,&ID
.*  --CCN VERSION OF SAVE--
.*  SAVE (14,12),,* ADDS 8-BYTE DATE FIELD AFTER CSECT NAME, OF THE
.*  FORM '74MAR28'.
         LCLA  &A,&B,&C
         LCLC  &E,&F,&G,&H
         AIF   ('&REG' EQ '').E1
         AIF   ('&ID' EQ '').NULLID
         AIF   ('&ID' EQ '*').SPECID
&A       SETA  ((K'&ID+2)/2)*2+4
&NAME    B     &A.(0,15)                         BRANCH AROUND ID
&A       SETA  K'&ID
         DC    AL1(&A)                           LENGTH OF IDENTIFIER
.CONTB   AIF   (&A GT 32).SPLITUP
.CONTAA  AIF   (&A GT 8).BRAKDWN
&E       SETC  '&ID'(&B+1,&A)
         DC    CL&A'&E'                          IDENTIFIER
         AGO   .CONTA
.BRAKDWN ANOP
&E       SETC  '&ID'(&B+1,8)
         DC    CL8'&E'                           IDENTIFIER
&B       SETA  &B+8
&A       SETA  &A-8
         AGO   .CONTAA
.SPLITUP ANOP
&E       SETC  '&ID'(&B+1,8)
&F       SETC  '&ID'(&B+9,8)
&G       SETC  '&ID'(&B+17,8)
&H       SETC  '&ID'(&B+25,8)
         DC    CL32'&E.&F.&G.&H'                      IDENTIFIER
&B       SETA  &B+32
&A       SETA  &A-32
         AGO   .CONTB
.NULLID  ANOP
&NAME    DS    0H
         AGO   .CONTA
.SPECID  AIF   ('&NAME' EQ '').CSECTN
&E       SETC  '&NAME'
&A       SETA  1
.CONTQ   AIF   ('&E'(1,&A) EQ '&E').LEAVE
&A       SETA  &A+1
         AGO   .CONTQ
.LEAVE   ANOP
&B       SETA  ((&A+2)/2)*2+4+8
&NAME    B     &B.(0,15)                         BRANCH AROUND ID
         DC    AL1(&A+8)
         DC    CL&A'&E'                          IDENTIFIER
         DC    C' ',CL7'&SYSDATE'                DATE OF ASMBLY
         AGO   .CONTA
.CSECTN  AIF   ('&SYSECT' EQ '').E4
&E       SETC  '&SYSECT'
&A       SETA  1
         AGO   .CONTQ
.E4      IHBERMAC 78,360                    CSECT NAME NULL
.CONTA   AIF   (T'&REG(1) NE 'N').E3
         AIF   ('&CODE' EQ 'T').CONTC
         AIF   ('&CODE' NE '').E2
&A       SETA  &REG(1)*4+20
         AIF   (&A LE 75).CONTD
&A       SETA  &A-64
.CONTD   AIF   (N'&REG NE 2).CONTE
         STM   &REG(1),&REG(2),&A.(13)           SAVE REGISTERS
         MEXIT
.CONTE   AIF   (N'&REG NE 1).E3
         ST    &REG(1),&A.(13,0)                 SAVE REGISTER
         MEXIT
.CONTC   AIF   (&REG(1) GE 14 OR &REG(1) LE 2).CONTF
         STM   14,15,12(13)                      SAVE REGISTERS
&A       SETA  &REG(1)*4+20
         AIF   (N'&REG NE 2).CONTG
         STM   &REG(1),&REG(2),&A.(13)           SAVE REGISTERS
         MEXIT
.CONTG   AIF   (N'&REG NE 1).E3
         ST    &REG(1),&A.(13,0)                 SAVE REGISTER
         MEXIT
.CONTF   AIF   (N'&REG NE 2).CONTH
         STM   14,&REG(2),12(13)                 SAVE REGISTERS
         MEXIT
.CONTH   AIF   (N'&REG NE 1).E3
         STM   14,&REG(1),12(13)                 SAVE REGISTERS
         MEXIT
.E1      IHBERMAC 18,360                    REG PARAM MISSING
         MEXIT
.E2      IHBERMAC 37,360,&CODE              INVALID CODE SPECIFIED
         MEXIT
.E3      IHBERMAC 36,360,&REG               INVALID REGS. SPECIFIED
         MEND
         EJECT
         MACRO
         USNGX  &ADDR,&REG
         GBLC  &REGADDR(16),&REGREG(16)
         LCLA  &LOOP
&LOOP    SETA  1
         USING &ADDR,&REG
.FIND    AIF   ('&REGADDR(&LOOP)' EQ '').GOT
&LOOP    SETA  &LOOP+1
         AIF   (&LOOP LE 16).FIND
         MNOTE *,'REGISTER TABLE OVERFLOW'
         MEXIT
.GOT     ANOP
&REGADDR(&LOOP) SETC '&ADDR'
&REGREG(&LOOP) SETC '&REG'
         MEND
         EJECT
***   COPYRIGHT 1976 - REGENTS OF THE UNIVERSITY OF CALIFORNIA,     ***
***   CAMPUS COMPUTING NETWORK   (SHARE CODE 'UR')  -  1/15/76      ***
***   ALTHOUGH WE ARE RUNNING THIS MODULE IN OUR PRODUCTION SYSTEM, ***
***   NO WARRANTY, EXPRESSED OR IMPLIED, IS MADE BY CCN AS TO THE   ***
***   FUNCTIONING OR CORRECTNESS OF THE FOLLOWING CODE.             ***
CATSPACE CSECT
         TSAVE (14,12),,*
         LR    R12,R15                  GET BASE REG
         USNGX CATSPACE,R12
         LR    R14,R13                  HIS SA
         LA    R13,SAVEAREA             POINT TO MY SA
         ST    R14,SAVEAREA+4           BACKCHAIN
         ST    R13,8(,R14)              FORWARD CHAIN
         SPACE 4
         OPEN (SYSCTLG,(INPUT))         OPEN SYSCTLG DS
         TM    SYSCTLG+48,X'10'         DID IT WORK?
         BO    OPENOK                   YES.
         ABEND 1                        NO
OPENOK   L     R1,SYSCTLG+44            GET A(DEB)
         L     R1,32(,R1)               GET A(UCB)
         MVC   VOLID(6),28(R1)          GET VOLUME ID
         OBTAIN CAMLST
         LTR   R15,R15                  I/O ERROR SINCE NOT FMT 1?
         BZ    OBTAINOK                 YES
         ABEND 2                        NO
OBTAINOK MVC   #RECPTRK+3(1),BUF1+31    SAVE # CAT BLKS/TRK
         EJECT
         PRINT NOGEN
         READ  X1,SF,MF=E               PRIME BUFFERS
         READ  X2,SF,MF=E               ...
         READ  X3,SF,MF=E               ...
         READ  X4,SF,MF=E               ...
         READ  X5,SF,MF=E               ...
         READ  X6,SF,MF=E               ...
         READ  X7,SF,MF=E               ...
         READ  X8,SF,MF=E               ...
RDLOOP   CHECK X1                       WAIT FOR COMPLETION
         LA    R8,BUF1                  POINT TO BUFFER
         BAL   R10,ANAL                 GO ANALZYE IT
         READ  X1,SF,MF=E               START ANOTHER READ
         CHECK X2                       DITTO
         LA    R8,BUF2
         BAL   R10,ANAL
         READ  X2,SF,MF=E
         CHECK X3                       DITTO
         LA    R8,BUF3
         BAL   R10,ANAL
         READ  X3,SF,MF=E
         CHECK X4                       DITTO
         LA    R8,BUF4
         BAL   R10,ANAL
         READ  X4,SF,MF=E
         CHECK X5                       DITTO
         LA    R8,BUF5
         BAL   R10,ANAL
         READ  X5,SF,MF=E
         CHECK X6                       DITTO
         LA    R8,BUF6
         BAL   R10,ANAL
         READ  X6,SF,MF=E
         CHECK X7                       DITTO
         LA    R8,BUF7
         BAL   R10,ANAL
         READ  X7,SF,MF=E
         CHECK X8                       DITTO
         LA    R8,BUF8
         BAL   R10,ANAL
         READ  X8,SF,MF=E
         B     RDLOOP                   BACK TO TOP OF CHAIN
         PRINT GEN
         EJECT
         USNGX CATBLOCK,R8
         SPACE 2
ANAL     L     R1,#TOTAL                # OF BLOCKS IN CATLG
         LA    R1,1(,R1)                +1
         ST    R1,#TOTAL                SAVE NEW COUNT
         TM    FLAG,NOTFIRST            IS THIS THE FIRST BLK?
         BNO   FIRSTBLK                 YES. SPECIAL PROCESS
         CLC   BLKKEY,=D'0'             DOES BLK HAVE A KEY OF ZEROS?
         BE    ZEROKEY                  YES.  THIS IS A FREE BLOCK.
         SPACE 3
NZKEY    L     R1,#USED                 THIS BLK IS IN USE. GET COUNT
         LA    R1,1(,R1)                +1
         ST    R1,#USED                 SAVE NEW COUNT
         CLC   BLKKEY,=XL8'FFFFFFFFFFFFFFFF'  CATALOG EOF?
         BNER  R10                      NO. GO READ NEXT.
         LH    R3,BLKBUSED              YES. GET BYTES USED THIS BLK
         LA    R4,CATBLOCK+8(R3)        POINT TO FIRST FREE BYTE
         S     R4,=F'12'                BACK UP TO INDEX LINK ENTRY
         CLC   0(R4,8),=XL8'FFFFFFFFFFFFFFFF'  REALLY AN ILE?
         BNER  R10                      NO, SO SKIP IT
         OC    8(3,R4),8(R4)            REAL ILE.  ANY NEXT BLK?
         BZR   R10                      NO.
         L     R1,#FRAG                 YES, SO GET FRAG COUNT
         LA    R1,1(,R1)                +1
         ST    R1,#FRAG                 SAVE NEW COUNT
         BR    R10                      GO READ NEXT BLK
         SPACE 3
ZEROKEY  C     R1,HOLEREC#           00001840IS THIS BLK ABOVE HOLE?
         BNL   ZFREE                    YES, SO THIS IS A FREE BLK
ZRESR    L     R1,#RESR                 NO, SO IS RESRV BLK. GET CNT
         LA    R1,1(,R1)                +1
         ST    R1,#RESR                 SAVE NEW COUNT
         BR    R10                      GO READ NEXT BLK.
ZFREE    L     R1,#FREE                 FREE BLK. GET COUNT
         LA    R1,1(,R1)                +1
         ST    R1,#FREE                 SAVE NEW COUNT
         BR    R10                      GO READ NEXT BLK.
         SPACE 3
FIRSTBLK L     R1,#USED                 THIS BLK IS IN USE. GET COUNT
         LA    R1,1(,R1)                +1
         ST    R1,#USED                 SAVE NEW COUNT
         OI    FLAG,NOTFIRST            SET FLAG
         LH    R3,BHOLETT               GET TT OF FIRST FREE BLK
         M     R2,#RECPTRK              TIME # PER TRK
         SR    R2,R2                    ZERO FOR IC
         IC    R2,BHOLER                GET R OF FIRST FREE BLK
         AR    R3,R2                    REC# OF FIRST FREE BLK
         ST    R3,HOLEREC#
         BR    R10
SUMMARY  EQU   *                        EOF ON CATLG OCCURRED
         MVC   OVOL(6),VOLID            MOVE VOLNAME TO WTO
         L     R1,#TOTAL                FORMAT COUNTS FOR WTO
         CVD   R1,DWORD
         UNPK  OTOT(5),DWORD
         OI    OTOT+4,X'F0'
         L     R1,#USED                 DITTO
         CVD   R1,DWORD
         UNPK  OUSED(5),DWORD
         OI    OUSED+4,X'F0'
         L     R1,#FREE                 DITTO
         CVD   R1,DWORD
         UNPK  OFREE(5),DWORD
         OI    OFREE+4,X'F0'
         L     R1,#RESR                 DITTO
         CVD   R1,DWORD
         UNPK  ORSRV(5),DWORD
         OI    ORSRV+4,X'F0'
         L     R1,#FRAG                 DITTO
         CVD   R1,DWORD
         UNPK  OFRAG(5),DWORD
         OI    OFRAG+4,X'F0'
         SPACE 3
         OPEN  (SYSPRINT,OUTPUT)
         TM    SYSPRINT+48,X'10'         DID IT WORK?
         BZ    DOWTO                     NO
         PUT   SYSPRINT,OUTLINE
         CLOSE SYSPRINT
         B     CLOSE
DOWTO    EQU   *
         MVC   WTOF#0(6),OVOL
         MVC   WTOF#1(5),OTOT
         MVC   WTOF#2(5),OUSED
         MVC   WTOF#3(5),OFREE
         MVC   WTOF#4(5),ORSRV
         MVC   WTOF#5(5),OFRAG
         LA    R1,WTOMFL                POINT TO WTO
         WTO   MF=(E,(1))               SPEW OUT THE INFO WE'VE GOTTEN
CLOSE    CLOSE (SYSCTLG)                CLOSE UP THE CATLG
         L     R13,SAVEAREA+4           RESTORE CALLER'S SA
         LM    R14,R12,12(R13)          AND ALSO HIS REGS
         SR    R15,R15                  SET ZERO RETCODE
         BR    R14                      RETURN
         EJECT
         PRINT NOGEN
SYSCTLG  DCB   DDNAME=SYSCTLG,DSORG=PS,MACRF=R,RECFM=F,                *
               KEYLEN=8,BLKSIZE=256,NCP=8,OPTCD=C,EODAD=SUMMARY
SYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=PM,LRECL=LINEL,RECFM=FA, X
               BLKSIZE=LINEL
         SPACE 3
WTOMFL   WTO 'CAT001A  SYSCTLG - XXXXXX - TOTAL=00000, USED=00000, FREE*
               =00000, RSRV=00000, FRAG=00000',ROUTCDE=(1,11),MF=L
WTOF#0   EQU   WTOMFL+23
WTOF#1   EQU   WTOMFL+38
WTOF#2   EQU   WTOMFL+50
WTOF#3   EQU   WTOMFL+62
WTOF#4   EQU   WTOMFL+74
WTOF#5   EQU   WTOMFL+86
OUTLINE  DC    C' CAT001A SYSCTLG - '
OVOL     DC    CL6' ',C' - TOTAL='
OTOT     DC    CL5' ',C', USED='
OUSED    DC    CL5' ',C', FREE='
OFREE    DC    CL5' ',C', RSRV='
ORSRV    DC    CL5' ',C', FRAG='
OFRAG    DC    CL5' '
LINEL    EQU   *-OUTLINE
         SPACE 3
DWORD    DC    D'0'
#TOTAL   DC    F'0'
SAVEAREA DC    18F'0'
#USED    DC    F'0'
#FREE    DC    F'0'
#RESR    DC    F'0'
#FRAG    DC    F'0'
#RECPTRK DC    F'0'
HOLEREC# DC    F'0'
FLAG     DC    X'00'
NOTFIRST EQU   X'80'
HEX04S   DC    44X'04'
VOLID    DC    CL6' '
         SPACE 3
CAMLST   CAMLST SEARCH,HEX04S,VOLID,BUF1
         SPACE 3
         READ  X1,SF,SYSCTLG,BUF1,MF=L
         READ  X2,SF,SYSCTLG,BUF2,MF=L
         READ  X3,SF,SYSCTLG,BUF3,MF=L
         READ  X4,SF,SYSCTLG,BUF4,MF=L
         READ  X5,SF,SYSCTLG,BUF5,MF=L
         READ  X6,SF,SYSCTLG,BUF6,MF=L
         READ  X7,SF,SYSCTLG,BUF7,MF=L
         READ  X8,SF,SYSCTLG,BUF8,MF=L
         PRINT GEN
         SPACE 3
BUF1     DC    33D'0'
BUF2     DC    33D'0'
BUF3     DC    33D'0'
BUF4     DC    33D'0'
BUF5     DC    33D'0'
BUF6     DC    33D'0'
BUF7     DC    33D'0'
BUF8     DC    33D'0'
         SPACE 3
         LTORG
         SPACE 3
CATBLOCK DSECT
BLKKEY   DS    D
BLKENTRY DS    0XL256
BLKBUSED DS    H
         ORG   BLKENTRY+16+2
BHOLETT  DS    H
BHOLER   DS    X
         SPACE 3
         REGEQU
         END
