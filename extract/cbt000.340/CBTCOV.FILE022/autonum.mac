         TITLE 'AUTOMATIC NUMBER GENERATOR FOR BLANK SEQ FIELDS 07-02-8*
               3'
*---------------------------------------------------------------------*
*  MODULE NAME: AUTONUM                                               *
*                                                                     *
*  DESCRIPTION: THIS PROGRAM WILL READ A SOURCE PROGRAM THAT HAS      *
*               SEQUENCE NUMBERS IN COLS 73-80 AND GENERATE NUMBERS   *
*               FOR THOSE CARDS WHICH HAVE BEEN INSERTED WITHOUT      *
*               SEQUENCE NUMBERS.                                     *
*                                                                     *
*  FLOW:        1)  PROCESS PARM                                      *
*               2)  GETMAIN STORAGE FOR SOURCE PROGRAM                *
*               3)  READ FILE FROM DD IN INTO STORAGE                 *
*               4)  FIND FIRST RECORD WITH BLANKS IN 73-80            *
*                   AND ADD THE INCREMENT SPECIFIED IN THE            *
*                   PARM OR FROM THE DEFAULT TO THE PRIOR             *
*                   RECORDS SEQUENCE NUMBER.                          *
*               4A) IF COL 73 HAS A + THEN COLS 74-77 SHOULD HAVE     *
*                   A 1-4 POSITION NUMBER TO BE USED AS THE INCREMENT *
*                   FOR THAT SECTION.                                 *
*               5)  DETERMINE IF A GENERATED SEQUENCE NUMBER IS       *
*                   GREATER THAN THE NEXT VALID RECORDS SEQUENCE      *
*                   NUMBER - RETURN CODE = 8.                         *
*               6)  DETERMINE IF UPDATE=Y WAS SPECIFIED.              *
*                   IF UPDATE=Y THEN OPEN DD IN FOR OUTPUT AND        *
*                   OVERLAY THE ORIGINAL SOURCE PROGRAM.              *
*                   IF UPDATE=N THEN OPEN DD OUT FOR OUTPUT           *
*                   AND COPY THE SOURCE PROGRAM FROM STORAGE          *
*                   TO DD OUT.                                        *
*                                                                     *
*  JCL:         //STEP1  EXEC PGM=AUTONUM,PARM= (SEE BELOW)           *
*               //IN     DD   DSN= SOURCE PROGRAM                     *
*               //OUT    DD   DSN= NEW COPY OF SOURCE PROGRAM (OPT)   *
*                                                                     *
*  PARM:        UPDATE = Y     OVERLAY ORIGINAL PROGRAM WITH UPDATED  *
*                              COPY.                                  *
*                        N     COPY UPDATED CODE TO DD OUT.           *
*                              DEFAULT = N                            *
*                                                                     *
*               RECORDS = XXXX NUMBER OF RECORDS TO BE GETMAINED      *
*               R=             DEFAULT = 5000                         *
*                                                                     *
*               INCR   = ####  NUMBER TO BE USED TO INCREMENT SEQUENCE*
*                              NUMBERS.                               *
*                              DEFAULT = 10                           *
*---------------------------------------------------------------------*
* RETURN CODES:                                                       *
*              0 - ALL IS OK                                          *
*              4 - INVALID INCREMENT - POSSIBLE OVERLAY               *
*              8 - NOT ENOUGH STORAGE FOR AUTONUMBER                  *
*---------------------------------------------------------------------*
* AUTHOR:  LIONEL DYCK                                                *
*          ROCKWELL INTERNATIONAL                                     *
*          PO BOX 2515                                                *
*          SEAL BEACH, CALIF 90740                                    *
*          (213) 594-1125                                             *
*---------------------------------------------------------------------*
*  GUARANTEE -  NON IS EXPRESSED OR IMPLIED BY THE DISTRIBUTION       *
*  OF THIS CODE.  USE IT AT YOUR OWN RISK.                            *
*---------------------------------------------------------------------*
         EJECT
AUTONUM  $PROLOG
         L    1,0(1)            * LOAD ADDR OF PARM
         LH   2,0(1)            * LOAD LENGTH OF PARM
         LTR   2,2              * LENGTH OF ZERO
         BZ    NOPARM           * NO - BYPASS MOVE
         LA    R4,2(R1)         * -> PARM DATA
         LR    R5,R4
         AR    R5,R2            * -> END OF PARM DATA
PLOOP    EQU   *
*---------------------------------------------------------------------*
         CLC   =C'INCR=',0(R4)
         BE    DOINCR
*---------------------------------------------------------------------*
         CLC   =C'RECORDS=',0(R4)
         BE    DOREC
         CLC   =C'R=',0(R4)
         BE    DORECS
*---------------------------------------------------------------------*
         CLC   =C'UPDATE=',0(R4)
         BE    DOUP
*---------------------------------------------------------------------*
         B     INCR
*---------------------------------------------------------------------*
DOUP     LA    R4,7(R4)                 -> UPDATE=
         CLI   0(R4),C'Y'               UPDATE IN PLACE
         BE    SETINPL                  YES
         B     INCR                     ASSUME NO - MUST HAVE OUTPUT DD
SETINPL  SETON INPLACE
         B     INCR
*---------------------------------------------------------------------*
DOINCR   LA    R4,5(R4)                 -> INCR=
         LA    R7,DWK
         SR    R1,R1
DILOOP   EQU   *
         CLI   0(R4),C','
         BE    ENDDI
         CLI   0(R4),C' '
         BL    ENDDI
         MVC   0(1,R7),0(R4)
         LA    R1,1(R1)
         LA    R7,1(R7)                 -> NEXT BYTE
         LA    R4,1(R4)
         CR    R4,R5
         BH    ENDDI
         B     DILOOP
ENDDI    EQU   *
         BCTR  R1,R0
         EX    R1,PKCNT
         B     INCR
PKCNT    PACK  INCRP(4),DWK(0)
*---------------------------------------------------------------------*
DORECS   LA    R4,2(R4)                 -> R=
         B     DOLA
DOREC    LA    R4,8(R4)                 -> RECORDS=
DOLA     MVC   DWK,=CL8' '
         LA    R7,DWK
         SR    R1,R1
DRLOOP   EQU   *
         CLI   0(R4),C','
         BE    ENDDR
         CLI   0(R4),C' '
         BL    ENDDR
         MVC   0(1,R7),0(R4)
         LA    R1,1(R1)
         LA    R7,1(R7)                 -> NEXT BYTE
         LA    R4,1(R4)
         CR    R4,R5
         BH    ENDDR
         B     DRLOOP
ENDDR    EQU   *
         BCTR  R1,R0
         EX    R1,PCREC
         CVB   R3,DWK2
         SR    R2,R2
         M     R2,=F'80'
         ST    R3,STORL                 SAVE LENGTH
         B     INCR
PCREC    PACK  DWK2(8),DWK(0)
         EJECT
INCR     EQU   *
         LA    R4,1(R4)
         CR    R4,R5
         BH    ENDSCAN
         B     PLOOP
ENDSCAN  EQU   *
         B     HAVEPARM
         EJECT
NOPARM   EQU   *
HAVEPARM EQU   *
         ZAP   SINCRP,INCRP
         L     R2,STORL
         GETMAIN R,LV=(R2)
         ST    R1,STORA
         AR    R1,R2                    -> END OF STORAGE
         ST    R1,STORE
         OPEN  (IN)
         L     R5,STORA                 -> START OF STORAGE
         L     R6,STORE                 -> END OF STORAGE
READIN   GET   IN
         MVC   0(80,R5),0(R1)           MOVE RECORD INTO STORAGE
         LA    R5,80(R5)                INCR STORAGE ->
         CR    R5,R6
         BNL   OUTOFIT                  NO MORE STORAGE
         B     READIN
EOF      CLOSE IN
         MVI   0(R5),X'FF'              SET END OF FILE FLAG
         L     R5,STORA                 -> START OF STORAGE
NLOOP    EQU   *
         CLC   72(8,R5),=CL8' '
         BE    NUMIT                    YES - NUMBER THIS RECORD
         CLI   72(R5),C'+'         USER SPECIFIED INCR ?
         BE    UNUMIT              YES
         ZAP   INCRP,SINCRP        RESET INCRP TO ORIGINAL
         PACK  RECP,72(8,R5)            ELSE PACK CURRENT NUMBER
         CP    RECP,CNTR                COMPARE CURR WITH CALC #
         BH    NINCR                    A HIGH IS OK
HI       UNPK  CURCNT,CNTR              UNPK CURRENT CALC #
         OI    CURCNT+7,X'F0'
         MVC   CURRCARD,72(R5)          MOVE CURRENT CARD COUNT
         TPT   OVERLAYM
         B     BADRETRN                 RETURN WITH BAD RETURN CODE
UNUMIT   EQU   *                   PICK UP USER INCREMENT
         LA    R2,73(R5)           -> INCR VALUE
         LA    R7,DWK
         SR    R1,R1
UNLOOP   EQU   *
         CLI   0(R2),C' '
         BE    ENDUN
         MVC   0(1,R7),0(R2)
         LA    R2,1(R2)
         LA    R7,1(R7)                 -> NEXT BYTE
         LA    R1,1(R1)
         B     UNLOOP
ENDUN    EQU   *
         BCTR  R1,R0
         EX    R1,PKUN
         B     NUMIT
PKUN     PACK  INCRP(4),DWK(0)
         SPACE 2
NUMIT    AP    RECP,INCRP               ADD INCR
         UNPK  72(8,R5),RECP
         OI    79(R5),X'F0'
         ZAP   CNTR,RECP
NINCR    LA    R5,80(R5)                -> NEXT RECORD
         CLI   0(R5),X'FF'              END OF STOR FILE ??
         BNE   NLOOP                    NO - KEEP LOOPING
         L     R5,STORA                 -> START OF STORAGE
         IFON  INPLACE,UPIN
         OPEN  (OUT,OUTPUT)
PUTLOOP  PUT   OUT,0(R5)
         LA    R5,80(R5)                -> NEXT RECORD
         CLI   0(R5),X'FF'              END OF STOR FILE ??
         BNE   PUTLOOP                  NO - KEEP WRITING
         CLOSE OUT
         B     FINISHED
UPIN     OPEN  (IN,OUTPUT)
UPLOOP   PUT   IN,0(R5)
         LA    R5,80(R5)                -> NEXT RECORD
         CLI   0(R5),X'FF'              END OF STOR FILE ??
         BNE   UPLOOP                   NO - KEEP WRITING
         CLOSE IN
         B     FINISHED
         EJECT
FINISHED EQU   *
         L     R3,STORA
         L     R2,STORL
         FREEMAIN R,LV=(R2),A=(R3)
         $EPILOG
         SPACE 2
BADRETRN EQU   *
         L     R3,STORA
         L     R2,STORL
         FREEMAIN R,LV=(R2),A=(R3)
         LA    R15,4
         $EPILOG
         SPACE 2
OUTOFIT  TPT   LACKOMEM
         L     R3,STORA
         L     R2,STORL
         FREEMAIN R,LV=(R2),A=(R3)
         LA    R15,8
         $EPILOG
         EJECT
         LTORG
         SPACE 2
         BITSW INPLACE
         SPACE 2
LACKOMEM DC    C'*** NOT ENOUGH STORAGE FOR AUTONUM -INCREASE MAX RECORX
               DS ON PARM'
         SPACE 2
OVERLAYM DC    CL70' '
         ORG   OVERLAYM
         DC    C'OVERLAY CURRENT CARD = '
CURRCARD DC    CL8' '
         DC    C'  CALC CARD = '
CURCNT   DC    CL8' '
         ORG
         SPACE 2
         DS    0D
DWK      DC    8C'0'
DWK2     DC    D'0'
INCRP    DC    PL4'10'                  DEFAULT INCREMENT OF 10
SINCRP   DC    PL4'00'                  USER SPECIFED INCREMENT
RECP     DC    PL5'0'
CNTR     DC    PL5'00'
STORA    DC    F'0'                     ADDR OF GETMAINED STORAGE
STORE    DC    F'0'                     -> END OF GETMAINED STORAGE
STORL    DC    A(80*5000)               DEF 5,000 SOURCE RECORDS
         SPACE 2
         PRINT NOGEN
IN       DCB   DSORG=PS,MACRF=(GL,PM),DDNAME=IN,EODAD=EOF
OUT      DCB   DSORG=PS,MACRF=PM,DDNAME=OUT,LRECL=80,RECFM=FB
         END
