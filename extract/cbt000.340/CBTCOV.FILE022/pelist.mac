*----------------------------------------------------------------------
*
*        FIND PTF'S THAT HAVE BEEN APPLIED THAT ARE IN ERROR
*
*----------------------------------------------------------------------
* CHANGES: 01/03/89 - CHANGED TO USE LOCAL MACROS ($PROLOG/$EPILOG)
*----------------------------------------------------------------------
PELIST   $PROLOG 12
*----------------------------------------------------------------------
*        PROCESS INPUT PARM
*----------------------------------------------------------------------
         L     R3,0(R1)          LOAD REG 3 WITH PTR TO PARM
         LH    R4,0(R3)          PARM LENGTH
         BCTR  R4,R0             DECR FOR MVC
         B     EXECWTO           BRANCH AROUND
EXMVC1   MVC   WTOPARM+15(0),2(R3)
EXECWTO  EX    R4,EXMVC1
WTOPARM  WTO   'PARM =                    '
         B     EXCPARM           BRANCH AROUND
EXMVC2   MVC   ZONENAME(0),2(R3)
EXCPARM  EX    R4,EXMVC2         COPY ZONENAME TO KEY
         OPEN  (GLBLCSI,(INPUT),TARGCSI,(INPUT))
         LTR   R15,R15           GOOD OPEN
         BNZ   ERROR             NO ABEND
         OPEN  (DISTCSI,(INPUT),WRKDISK,(OUTPUT))
         LTR   R15,R15           GOOD OPEN
         BNZ   ERROR             NO ABEND
*----------------------------------------------------------------------
*        SEPERATE TARGET ZONE AND DISTRIBUTION ZONE NAMES
*----------------------------------------------------------------------
SEPZONE  DS    0H
         LA    R5,7              POSSIBLE 7 POSITION NAME
         LA    R15,TZONAME       FIRST POS OF TZONE NAME
         LA    R2,ZONENAME       FIRST POS OF PARM AREA
CHKTNAM  DS    0H
         CLI   0(R2),C','        END OF NAME
         BE    ENDNAM            YES
         MVC   0(1,R15),0(R2)    MOVE ONE POS OF TZONE NAME
         LA    R15,1(R15)        ADD ONE
         LA    R2,1(R2)          ADD ONE
         BCT   R5,CHKTNAM        IF NOT END GO MOVE NEXT POS
ENDNAM   DS    0H
         LA    R2,1(R2)          ADD ONE
         MVC   DZONAME,0(R2)     MOVE DZONE NAME
*----------------------------------------------------------------------
*        FIND THE TARGET ZONE RECORD THAT HAS A HEX NUMBER IN IN THAT
*        IS USED AS PART OF THE KEY TO THAT TARGET ZONE.
*----------------------------------------------------------------------
FINDTZ   DS    0H
         GET   RPL=TARGSEQ       GET A RECORD
         LTR   R15,R15           DID WE GET ONE?
         BNZ   ERROR             NO
         CLC   TARGETZ,=X'000002' PAST ZONE RECORD
         BNH   FINDTZ2           NO - OK
         WTO   'THERE IS NO TARGET ZONE TO MATCH THE INPUT PARM',      C
               ROUTCDE=(11)
         B     STOP2
FINDTZ2  EQU   *
         CLC   TZONAME,TARGETS   COMPARE THE ZONE NAMES
         BNE   FINDTZ            NOT THE ONE WE WANT
         MVC   TZONKEY,TARGETH   SAVE ZONE KEY
         MVC   TARGHEX,TZONKEY   MOVE ZONE HEX TO TARGET
         EJECT
*----------------------------------------------------------------------
*        FIND THE DIST   ZONE RECORD THAT HAS A HEX NUMBER IN IN THAT
*        IS USED AS PART OF THE KEY TO THAT DIST   ZONE.
*----------------------------------------------------------------------
FINDDZ   DS    0H
         GET   RPL=DISTSEQ     GET A RECORD
         LTR   R15,R15         DID WE GET ONE
         BNZ   ERROR           NO
         CLC   DISTZ,=X'000002' PAST ZONE RECORDS
         BNH   FINDDZ2         NO - OK
         WTO   'THERE IS NO DIST  ZONE TO MATCH THE INPUT PARM',       C
               ROUTCDE=(11)
         B     STOP2
FINDDZ2  EQU   *
         CLC   DZONAME,DISTS     COMPARE THE ZONE NAMES
         BNE   FINDDZ            NOT THE ONE WE WANT
         MVC   DZONKEY,DISTH     SAVE ZONE KEY
         MVC   DISTHEX,DZONKEY   MOVE ZONE HEX TO DIST
         EJECT
*----------------------------------------------------------------------
*        POSITION OURSELVES INTO THE GLOBAL ZONE AT THE FIRST
*        GLOBAL ZONE SYSMOD RECORD.
*----------------------------------------------------------------------
SETUP    DS    0H
         POINT RPL=GLBLSEQ     POSITION TO GLOBAL ZONE START
         LTR   R15,R15         OK?
         BNZ   ERROR           NO - REEOR
*----------------------------------------------------------------------
*        LOCK AT EACH GLOBAL ZONE SYSMOD RECORD TO SEE IF IT IS A
*        HOLD TYPE SYSMOD.
*----------------------------------------------------------------------
READGLB  DS    0H
         GET   RPL=GLBLSEQ     GET A RECORD
         LTR   R15,R15         GOT IT
         BNZ   ERROR           NO - ERROR
         CLC   GLOBALK,ZONE26  LAST GLOBAL SYSMOD RECORD
         BNE   SETEOF
         CLI   GLOBALF,X'F4'   HOLD TYPE RECORD
         BNE   READGLB         NO - KEEP LOOKING
*----------------------------------------------------------------------
*        ONCE WE HAVE A HOLD TYPE SYSMOD. SEE IF IT IS APPLIED IN
*        OUR TARGET ZONE.
*----------------------------------------------------------------------
         MVC   TARGSYS,GLOBALP  MOVE HOLD PTF
         GET   RPL=TARGDIR      SEE IF IT IS IN THE ZONE
         LTR   R15,R15          FIND IT?
         BNZ   READGLB          NO - OK
*----------------------------------------------------------------------
*        JUST BECAUSE THE HELD PTF IS APPLIED DOESN'T MEAN IT IS
*        ON IN ERROR. THE APAR NUMBER THAT THE PTF IS BEING HELD FOR
*        MAY HAVE BEEN VALIDLY SUPERCEDED BY ANOTHER PTF.
*        TO CHECK THIS OUT, SEE IF THE APAR IN ERROR IS APPLIED
*        IN OUR TZONE. IF IT IS NOT, THEN WE KNOW THAT THE HELD
*        PTF IS ON IN ERROR.
*----------------------------------------------------------------------
         MVC   TARGSYS,GLOBALE  MOVE ERROR APAR
         GET   RPL=TARGDIR      SEE IF IT IS ON
         LTR   R15,R15          IS THE ERROR APAR IN THE TZONE?
         BZ    READGLB          YES - THEN IT IS SUPERCEDED.
*----------------------------------------------------------------------
*        CREATE WORK DISK FILE. . .
*----------------------------------------------------------------------
         MVC   WDISKS,GLOBALP   PTF IN ERROR
         MVC   WDISKE,GLOBALE   FIXING APAR
         PUT   WRKDISK,WDISK    WRITE WORK DISK RECORD
         B     READGLB          GET NEXT RECORD
*----------------------------------------------------------------------
*        ROUTINE TO DETERMINE ACTION TO BE TAKEN. .
*----------------------------------------------------------------------
SETEOF   DS    0H
         MVI   EOFSW,C'Y'       VALID EOF REACHED
CHKWORK  DS    0H
         CLOSE (GLBLCSI,,TARGCSI,,WRKDISK,,DISTCSI)
         LTR   R15,R15          GOOD CLOSE
         BNZ   ERROR            NO - ABEND
         OPEN  (GLBLCSI,(INPUT),TARGCSI,(INPUT),REPORT,(OUTPUT))
         LTR   R15,R15          GOOD OPENS
         BNZ   ERROR            NO - ABEND
         OPEN  (DISTCSI,(INPUT),DISKIN,(INPUT))
         LTR   R15,R15          GOOD OPENS
         BNZ   ERROR            NO - ABEND
*----------------------------------------------------------------------
         MVI   REPRTA,C'1'         NEW PAGE
         MVC   REPRTS,=C' P E   '
         MVC   REPRTE,=C'A P A R'
         MVC   REPRTF,=C' F I X '
         PUT   REPORT,REPRT     WRITE A LINE
         MVI   REPRTA,C' '         NEXT LINE
         MVC   REPRTS,=C'-------'
         MVC   REPRTE,=C'-------'
         MVC   REPRTF,=C'-------'
         MVC   REPRTM,=C'----------------------------------------'
         PUT   REPORT,REPRT     WRITE A LINE
*----------------------------------------------------------------------
         MVC   TARGHEX,TZONKEY
         MVI   TARGHEX-1,X'00'
         MVI   TARGHEX+1,X'26'
         MVC   SUPDHEX,DZONKEY
         MVI   SUPDHEX-1,X'00'
         MVI   SUPDHEX+1,X'26'
         MVI   SUPDPE+7,C' '
         MVC   SUPDPE+8,=C'26010000'
         MVC   SUPDPE+12,=C'UNKNOWN'
         MVC   DISTHEX,DZONKEY
         MVI   DISTHEX-1,X'00'
         MVI   DISTHEX+1,X'26'
         EJECT
*----------------------------------------------------------------------
*        READ WORK FILE. . .
*----------------------------------------------------------------------
READWRK  DS    0H
         MVI   FIXFND,C'N'      RESET FIX FOUND SWITCH
         CLI   EOFSW,C'N'       VALID EOF REACHED?
         BE    STOP             NO
*----------------------------------------------------------------------
         GET   DISKIN,WDISK     READ RECORD
         MVC   REPRTS,WDISKS    PTF IN ERROR
         MVC   REPRTE,WDISKE    FIXING APAR
*----------------------------------------------------------------------
*        POSITION OURSELVES INTO THE GLOBAL ZONE AT THE FIRST
*        GLOBAL ZONE SYSMOD RECORD.
*----------------------------------------------------------------------
CHKFIX   DS    0H
         POINT RPL=GLBLSEQ     POSITION TO GLOBAL ZONE START
         LTR   R15,R15         OK?
         BNZ   ERROR           NO - ERROR
*----------------------------------------------------------------------
*        LOOK AT EACH GLOBAL ZONE SYSMOD RECORD TO SEE IF IT IS THE
*        CORRECTING PTF FOR THIS APAR FIX. . .
*----------------------------------------------------------------------
APARFIX  DS    0H
         GET   RPL=GLBLSEQ     GET A RECORD
         LTR   R15,R15         GOT IT?
         BNZ   ERROR           NO ERROR
         CLC   GLOBALK,ZONE26  LAST GLOBAL SYSMOD RECORD?
         BNE   NOFIX           YES
         CLI   GLOBALF,X'A5'   SUPING APAR?
         BNE   APARFIX         NO - KEEP LOOKING
         CLC   GLOBALE,WDISKE  PTF FIX FOR APAR?
         BNE   APARFIX         NO - KEEP LOOKING
         MVC   REPRTF,GLOBALP  FIXING PTF
         MVI   FIXFND,C'Y'     FIX FOUND
         B     CHKSUPD         CHECK TO SEE IF IT IS SUPD
NOFIX    DS    0H
         MVC   REPRTF,=C'       '
         MVI   FIXFND,C'N'     FIX NOT FOUND
*----------------------------------------------------------------------
*        ONCE WE HAVE A FIXING SYSMOD, BEGIN CHECK FOR SUPD PE IN
*        OUR TARGET ZONE.
*----------------------------------------------------------------------
CHKSUPD  DS    0H
         MVC   SUPDPE,WDISKS   PE PTF
         GET   RPL=TARGSUP     SEE IF IT IS IN THE TZONE
         LTR   R15,R15         FIND IT?
         BNZ   CHKACC          NO - OK
         CLI   FIXFND,C'Y'     WAS A FIX FOUND?
         BNE   FIXNFND         NO
         MVC   REPRTM,MESS4    PE SUPD IGNORE FIX
         B     PRTRPT
FIXNFND  DS    0H
         MVC   REPRTM,MESS5    PE SUPD
         B     PRTRPT
*----------------------------------------------------------------------
*        ONCE WE HAVE A FIXING PTF THAT HAS NOT BEEN SUPERCEDED,
*        SEE IF PE IS ACCEPTED INTO OUR DISTRIBUTION ZONE. . .
*----------------------------------------------------------------------
CHKACC   DS   0H
         CLI  FIXFND,C'Y'      WAS A FIX FOUNF?
         BE   CONTCHK          YES
         MVC  REPRTM,MESS3     FIX NOT ON SYSTEM
         B    PRTRPT
CONTCHK  DS   0H
         MVC  DISTSYS,WDISKS   MOVE HOLD PTF
         GET  RPL=DISTDIR      SEE IF IT IS IN THE DIST ZONE
         LTR  R15,R15          FINF IT?
         BNZ  NOACC            NO - OK
         MVC  REPRTM,MESS1     APPLY FIX
         B    PRTRPT
NOACC    DS   0H
         MVC  REPRTM,MESS2     RESTORE OR APPLY FIX
         B    PRTRPT
*----------------------------------------------------------------------
*        PRINT REPORT
*----------------------------------------------------------------------
PRTRPT   DS    0H
         MVI   REPRTA,C'0'     SPACE 2
         PUT   REPORT,REPRT    WRITE A LINE
         AP    COUNT,=P'1'     ADD ONE
         B     READWRK         GET NEXT RECORD
         EJECT
*----------------------------------------------------------------------
*        END OF JOB ROUTINE
*----------------------------------------------------------------------
STOP     DS    0H
         MVI   REPRTA,C'0'     SPACE 2
         MVC   REPRTS,=C'-------'
         MVC   REPRTE,=C'-------'
         MVC   REPRTF,=C'-------'
         MVC   REPRTM,=C'----------------------------------------'
         PUT   REPORT,REPRT     WRITE A LINE
         MVI   REPRTA,C' '     SPACE 1
         MVC   REPRTS,=C'*******'
         MVC   REPRTE,TZONAME
         MVC   REPRTF,DZONAME
         MVC   REPRTM,=C'PRINT AND READ MCS FOR ALL FIXES        '
         PUT   REPORT,REPRT     WRITE A LINE
*----------------------------------------------------------------------
         UNPK  WTO+23(7),COUNT UNPACK COUNT
         OI    WTO+29,X'F0'    SET SIGN
WTO      WTO   'RECORD COUNT = NNNNNNN'
         CLOSE (GLBLCSI,,TARGCSI,,DISKIN)
         CLOSE (DISTCSI,,REPORT)
STOP2    EQU   *
         LA    R15,0
         $EPILOG
*----------------------------------------------------------------------
*        ERROR ROUTINES
*----------------------------------------------------------------------
ERROR    DS    0H
         ABEND 16,DUMP
*----------------------------------------------------------------------
ZONE26   DC    XL3'000026'
*----------------------------------------------------------------------
GLOBAL   DS    0CL142
GLOBALK  DC    CL3'   '
GLOBALP  DC    CL7'      '
         DC    CL2'  '
*
GLOBALF  DC    CL1' '          X'F4'  = HOLD ERROR
*                              X'F5'  = SYSTEM HOLD
*                              X'F7'  = SOURCE ID
*                              X'A5'  = SUPS THIS APAR
         DC    CL2'  '
GLOBALE  DC    CL7'      '
         DC    CL120' '
*----------------------------------------------------------------------
ZONENAME DC    CL15' '
TZONAME  DC    CL7' '
DZONAME  DC    CL7' '
*----------------------------------------------------------------------
SUPDKEY  DS    CL23
         DC    XL1'00'
SUPDHEX  DC    XL1'00'
         DC    XL1'26'
SUPDPE   DC    CL7'      '
         DC    CL1' '
         DC    XL1'26'
         DC    XL1'01'
         DC    XL2'0000'
         DC    CL8'UNKNOWN '
*----------------------------------------------------------------------
TARGKEY  DS    0CL10
         DC    XL1'00'
TARGHEX  DC    XL1'00'
         DC    XL1'26'
TARGSYS  DC    CL7'      '
*----------------------------------------------------------------------
TARGET   DS    0CL142
TARGETZ  DC    CL3'   '
TARGETE  DC    CL7'      '
         DC    CL2'  '
*
TARGETF  DC    CL1' '          X'01'  = SUPD IF TARGETS = UNKNOWN
*                              X'12'  = SUPD BY TARGETS
         DC    CL2'  '
TARGETS  DC    CL7'      '
         DC    CL120' '
*----------------------------------------------------------------------
         ORG   TARGET
         DS    CL4
TARGETH  DS    CL1
         ORG
*----------------------------------------------------------------------
DISTKEY  DS    0CL10
         DC    XL1'00'
DISTHEX  DC    XL1'00'
         DC    XL1'26'
DISTSYS  DC    CL7'      '
*----------------------------------------------------------------------
DISTRIB  DS    0CL142
DISTZ    DC    CL3'   '
DISTE    DC    CL7'      '
         DC    CL2'  '
DISTF    DC    CL1' '
         DC    CL2'  '
DISTS    DC    CL7'      '
         DC    CL120' '
*----------------------------------------------------------------------
         ORG   DISTRIB
         DS    CL4
DISTH    DS    CL1
         ORG
*----------------------------------------------------------------------
WDISK    DS    0CL80
WDISKS   DC    CL7'    '       PTF IN ERROR
WDISKE   DC    CL7'    '       APAR FIX
         DC    CL66' '
*----------------------------------------------------------------------
REPRT    DS    0CL133
REPRTA   DC    CL1' '          SPACEING
         DC    CL1' '
REPRTS   DC    CL7' '          PTF IN ERROR
         DC    CL2' '
REPRTE   DC    CL7' '          APAR FIX
         DC    CL2' '
REPRTF   DC    CL7' '          FIXING PTF
         DC    CL2' '
REPRTM   DC    CL40' '         ACTION TO BE TAKEN
         DC    CL64' '
*----------------------------------------------------------------------
MESS1    DC    CL40'APPLY FIXING PTF'
MESS2    DC    CL40'RESTORE PTF IN ERROR OR APPLY FIXING PTF'
MESS3    DC    CL40'FIXING PTF NOT ON SYSTEM * CALL SUPPORT'
MESS4    DC    CL40'PE HAS BEEN SUPD * FIX CAN BE IGNORED'
MESS5    DC    CL40'PE HAS BEEN SUPD'
*----------------------------------------------------------------------
COUNT    DC    PL4'0'          RECORD COUNT
EOFSW    DC    CL1'N'          END OF FILE SWITCH
FIXFND   DC    CL1'N'          FIXING PTF FOUND SWITCH
TZONKEY  DC    XL1'00'         TARGET ZONE KEY
DZONKEY  DC    XL1'00'         TARGET ZONE KEY
*----------------------------------------------------------------------
GLBLCSI  ACB   AM=VSAM,MACRF=(KEY,SEQ,DIR,IN),DDNAME=GLBLCSI,          C
               EXLST=CSIEXIT
TARGCSI  ACB   AM=VSAM,MACRF=(KEY,SEQ,DIR,IN),DDNAME=TARGCSI,          C
               EXLST=CSIEXIT
DISTCSI  ACB   AM=VSAM,MACRF=(KEY,SEQ,DIR,IN),DDNAME=DISTCSI,          C
               EXLST=CSIEXIT
GLBLSEQ  RPL   ACB=GLBLCSI,AM=VSAM,OPTCD=(KEY,SEQ,KEQ,GEN,MVE),        C
               KEYLEN=3,ARG=ZONE26,AREA=GLOBAL,AREALEN=142
TARGDIR  RPL   ACB=TARGCSI,AM=VSAM,OPTCD=(KEY,DIR,MVE,GEN,KEQ),        C
               KEYLEN=10,ARG=TARGKEY,AREA=TARGET,AREALEN=142
TARGSEQ  RPL   ACB=TARGCSI,AM=VSAM,OPTCD=(KEY,SEQ,MVE),                C
               AREA=TARGET,AREALEN=142
TARGSUP  RPL   ACB=TARGCSI,AM=VSAM,OPTCD=(KEY,DIR,MVE,GEN,KEQ),        C
               KEYLEN=23,ARG=SUPDKEY,AREA=TARGET,AREALEN=142
DISTDIR  RPL   ACB=DISTCSI,AM=VSAM,OPTCD=(KEY,DIR,MVE,GEN,KEQ),        C
               KEYLEN=10,ARG=DISTKEY,AREA=DISTRIB,AREALEN=142
DISTSEQ  RPL   ACB=DISTCSI,AM=VSAM,OPTCD=(KEY,SEQ,MVE),                C
               AREA=DISTRIB,AREALEN=142
CSIEXIT  EXLST AM=VSAM,EODAD=READWRK
WRKDISK  DCB   DDNAME=WRKDISK,DSORG=PS,MACRF=(PM),RECFM=FB,LRECL=80,   C
               BLKSIZE=3120
DISKIN   DCB   DDNAME=DISKIN,DSORG=PS,MACRF=(GM),RECFM=FB,LRECL=80,    C
               BLKSIZE=3120,EODAD=STOP
REPORT   DCB   DDNAME=REPORT,DSORG=PS,MACRF=(PM),RECFM=FBA,LRECL=133,  C
               BLKSIZE=2660,EODAD=STOP
         END
