         TITLE 'IEESL03D -   #J  DISPLAY ACTIVE REPLACEMENT'
***********************************************************************
***********************************************************************
***                                                                 ***
***                                                                 ***
***                                                                 ***
***                     COMMAND  SUB-SYSTEM                         ***
***                  -------------------------                      ***
***                                                                 ***
***                                                                 ***
***       IEESL03D -       #J  DISPLAY ACTIVE REPLACEMENT           ***
***                                                                 ***
***       VERSION -        1.3                                      ***
***                                                                 ***
***       MVS LEVEL -      TO MVS/SP1.3 LEVEL                       ***
***                                OR MVS 2.1.3                     ***
***                                                                 ***
***       UPDATED -        05/27/81                                 ***
***                        RICK LEOPOLDI RLL-CHANGE ESTAE PARM LEN. ***
***                                      RLL-HAVE IN & OUT DISPLAYSQQ**
***                        02/22/82 -JCC-BCB TEST FOR END OF ASCBS  ***
***                        08/01/85 -LIONEL DYCK - CHANGE FOR TSSO  ***
***********************************************************************
***********************************************************************
         EJECT
IEESL03D MENTER 12,EQU,COM=TESTSL,CP=YES
         L     R1,CVTPTR           -> CVT                   *LBD 11/85*
         USING CVT,R1                                       *LBD 11/85*
         TM    CVTDCB,CVTMVSE      XA ?                     *LBD 11/85*
         BZ    ESTAEBYP            NO                       *LBD 11/85*
         DROP  R1                                           *LBD 11/85*
         SETON XA                                           *LBD 11/85*
         L     R1,=A(ESTAEBYP+X'80000000')                  *LBD 11/85*
         BSM   0,1                 SET 31 BIT MODE          *LBD 11/85*
*        B     ESTAEBYP            BYPASS ESTAE LIST
ESTAEOVL ESTAE STAEXIT,CT,MF=L
ESTAEBYP MVC   ESTAELST(20),ESTAEOVL                  ****(RLL)****
         LA    R1,ESTAELST
         ESTAE PARAM=(10),MF=(E,(1))
         MVI   TSOSW,C' '
         L     R3,CPPLCBUF         PARM LIST ADDR
         LH    R1,2(R3)            * OFFSET TO PARMS      *LBD 07/85*
         LA    R3,4(R3)            * PAST HEADER          *LBD 07/85*
         AR    R3,R1               * ADD OFFSET           *LBD 07/85*
         MVC   TSOSW(2),0(R3)      SAVE PARM
         OC    TSOSW(2),=CL2' '    * MAKE UPPER CASE      *LBD 07/85*
         CLI   TSOSW,C'T'          TSO DISPLAY
         BE    PARM2               YES, CONTINUE
         CLI   TSOSW,C'I'          *** DISPLAY IN-QUEUE ONLY ***(RLL)
         BE    PARM2               *** YES, CONTINUE ***        (RLL)
         CLI   TSOSW,C'O'          *** DISPLAY OUT-QUEUE ONLY **(RLL)
         BE    PARM2               *** YES, CONTINUE ***        (RLL)
         CLI   TSOSW,C' '          TEST FOR A BLANK                WJB
         BE    PARM1               YES CONTINUE                    WJB
         MVC   DOUBLE(2),=C'00'
         MVZ   DOUBLE(2),TSOSW
         CLC   DOUBLE(2),=C'00'    DOMAIN DISPLAY
         BNE   PARM1
         PACK  DOUBLE(8),TSOSW(2)
         CVB   R1,DOUBLE
         STC   R1,DOMAIN           SAVE DOMAIN
         MVI   TSOSW,C'D'
         B     PARM2
         SPACE 1
PARM1    MVI   TSOSW,C' '
         SPACE 1
PARM2    MVC   WTOLIST(4),=X'00400100'
         MVI   SCANRET,C' '        SET FOUND
         SR    R8,R8               CLEAR ASID
         MVI   SCANTYPE,C'I'       SET IN QUEUE SCAN
         CLI   TSOSW,C'O'          *** IS THIS OUT-Q DISPLAY ***(RLL)
         BE    JOBOUT5             *** YES - THEN GET OUT    ***(RLL)
         LA    R1,HDRI             IN QUEUE HDR
         BAL   R11,MSGRTN1
         EJECT
JOBOUT   MVI   JOBMSG,C' '
         MVC   JOBMSG+1(59),JOBMSG
         LR    R5,R8               LOAD ASID
         LTR   R5,R5               ZERO ASID
         BZ    *+6                 YES, BYPASS ADJUST
         BCTR  R5,0                ADJUST ASID
         SLL   R5,2                MULTIPLY BY 4
         L     R4,16               CVT ADDR
         L     R4,556(0,R4)        ASVT ADDR
         L     R6,516(0,R4)        MAX # OF ASIDS               JCC
         MH    R6,=H'4'            MULT BY LENGTH               JCC
         LA    R6,528(R4,R6)       FIND END OF ASID LIST        JCC
         ST    R6,ASVTEND          STORE THAT ADDRESS           JCC
         LA    R4,524(R5,R4)       ASCB SLOT ADDR
         B     JOBOUT4
         SPACE 1
JOBOUT1  L     R5,0(0,R4)          ASCB ADDR
         L     R6,56(0,R5)         CSCB ADDR
         L     R7,144(0,R5)        LOAD OUCB ADDR
         CLI   SCANTYPE,C'I'       IN QUEUE SCAN
         BNE   JOBOUT2             NO
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*  THIS CHANGE MADE TO HANDLE MVS SE(SU50)         AXC          *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*        TM    114(R5),X'80'       ON ASCB DSP QUEUE               WJB
*        BO    JOBOUT4             NO, OUT QUEUE                   WJB
         CLI   41(R7),0            DOES IT HAVE A SWAP REASON CODE WJB
         BNE   JOBOUT6             YES, CHECK SRC                  WJB
         CLI   38(R5),X'7F'        MVS SE                          WJB
         BE    JOBOUT4                                             WJB
         B     JOBOUT3             CONTINUE
         SPACE 1
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*  THIS CHANGE MADE TO HANDLE MVS SE(SU50)         AXC          *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*JOBOUT2 TM    114(R5),X'80'       ON ASCB DSP QUEUE    MVS/SE     WJB
*        BE    JOBOUT4             YES, IN QUEUE        MVS/SE     WJB
JOBOUT2  CLI   38(R5),X'7F'        MVS/SE                          WJB
         BE    JOBOUT3        YES GO PROCESS THIS AS ON OUTQUEUE   WJB
         CLI   41(R7),0            THIS HAVE A SWAP REASON CODE?   WJB
         BE    JOBOUT4             NO, IT'S IN THE IN QUEUE        WJB
         CLI   41(R7),X'06'        DETECTED WAIT
         BNE   JOBOUT3             NO, OUT QUEUE
         TM    21(R7),X'01'        MSO DETECTED WAIT BIT ON
         BZ    JOBOUT4             NO, SRC IS NO GOOD
         SPACE 1
JOBOUT3  CLI   TSOSW,C'I'          *** IN-QUEUE ONLY *** (RLL)
         BE    JOBOUTIO            *** YES, DO IT    *** (RLL)
         CLI   TSOSW,C'O'          *** OUT-QUEUE ONLY*** (RLL)
         BNE   JOBOUTCN            *** NO ,CONTINUE  *** (RLL)
JOBOUTIO EQU   *                   *** WRITE IN/OUT  *** (RLL)
         CLC   SCANTYPE(1),TSOSW   *** IN/OUT=OPTION?*** (RLL)
         BNE   JOBOUT4             *** NO, DONT WRITE*** (RLL)
JOBOUTCN EQU   *                   *** YES, DO IT    *** (RLL)
         BAL   R11,ASCBFORM        GO FORMAT ASCB INFO
         L     R6,144(0,R5)        OUCB ADDR
         L     R3,60(0,R5)         TSB ADDR
         L     R5,56(0,R5)         CSCB ADDR
         BAL   R11,CSCBFORM        GO FORMAT CSCB INFO
         BAL   R11,OUCBFORM        GO FORMAT OUCB INFO
         LA    R1,WTOLIST          MSG AREA
         BAL   R11,MSGRTN          GO PRINT MSG
         SPACE 1
JOBOUT4  LA    R4,4(0,R4)          INCR INTO ASVT
         C     R4,ASVTEND          END OF ASVT                   JCC
         BNL   JOBOUT5             YES, RETURN                   JCC
         TM    0(R4),X'80'         AVAILABLE ENTRY
         BO    JOBOUT4             YES, CHECK NEXT
         B     JOBOUT1             GO USE IT
         SPACE 1
JOBOUT5  CLI   SCANTYPE,C'O'       OUT QUEUE SCAN
         BE    RETURN              YES, EXIT
         CLI   TSOSW,C'I'          *** IS THIS IN-Q DISPLAY ***(RLL)
         BE    RETURN              *** YES - THEN GET OUT   ***(RLL)
         MVI   SCANRET,C' '        INIT OUTPUT SWITCH
         MVI   SCANTYPE,C'O'       SET OUT QUEUE SCAN NEXT
         LA    R1,HDRO             OUT QUEUE HDR
         BAL   R11,MSGRTN1
         B     JOBOUT              NEXT PASS
         SPACE 1
JOBOUT6  CLI   41(R7),X'06'        DETECTED WAIT
         BNE   JOBOUT4             NO, OUT QUEUE
         TM    21(R7),X'01'        MSO DETECTED WAIT BIT ON
         BZ    JOBOUT3             NO, SRC IS NO GOOD
         B     JOBOUT4             OUT QUEUE
         EJECT
ASCBFORM UNPK  DOUBLE(5),36(3,R5)
         NC    DOUBLE(4),=4X'0F'
         TR    DOUBLE(4),=C'0123456789ABCDEF'
         MVC   ASID(4),DOUBLE      SET ASID IN MSG
         SR    R9,R9
         IC    R9,43(0,R5)         DPRTY TO MSG
         CVD   R9,DOUBLE
         UNPK  DPRTY(3),DOUBLE+6(2)
         OI    DPRTY+2,X'F0'
         LH    R1,38(0,R5)         DISP POSITION
         CVD   R1,DOUBLE
         UNPK  SRC(2),DOUBLE+6(2)
         OI    SRC+1,X'F0'
         MVC   EXECTIME(10),=XL10'402021204B40404B4040'
         LM    R14,R15,64(R5)      CPU TIME
         SRDL  R14,22
         LR    R9,R15              SAVE CPU TIME
         LM    R14,R15,200(R5)     SRB TIME
         SRDL  R14,22
         AR    R15,R9              CPU PLUS SRB TIME
         SR    R14,R14
         D     R14,=F'10'          HUNDREDTHS
         SR    R14,R14
         D     R14,=F'100'         SECONDS
         CVD   R14,DOUBLE          HUNDREDTHS TO PRINT
         UNPK  EXECTIME+8(2),DOUBLE+6(2)
         OI    EXECTIME+9,X'F0'
         SR    R14,R14
         D     R14,=F'60'          MINUTES
         CVD   R14,DOUBLE          SECONDS TO PRINT
         UNPK  EXECTIME+5(2),DOUBLE+6(2)
         OI    EXECTIME+6,X'F0'
         CVD   R15,DOUBLE          MINUTES TO PRINT
         ED    EXECTIME(4),DOUBLE+6
         MVI   FLAGS-1,C'-'
         TM    52(R5),X'10'        V=R
         BCR   8,R11               NO
         MVI   FLAGS-1,C'R'
         BR    R11
         EJECT
CSCBFORM CLI   TSOSW,C'T'          TSO USER DISPLAY
         BNE   CSCBFRM0            NO
         CLI   28(R5),X'01'        TSO USER
         BNE   JOBOUT4             NO, BYPASS
         B     CSCBFRM6
         SPACE 1
CSCBFRM0 CLI   28(R5),X'01'        TSO USER
         BE    JOBOUT4             YES, DONT PROCESS
         CLI   28(R5),X'03'        INIT
         BNE   CSCBFRM3            NO, GO HANDLE
         LA    R9,0(0,R5)          SAVE CSCB ADDR
         SR    R10,R10             INSERT
         IC    R10,30(0,R5)
         SLL   R10,8               ASID
         IC    R10,31(0,R5)
         SPACE 1
CSCBFRM1 L     R5,0(0,R5)          NEXT CSCB
         LA    R5,0(0,R5)          CLEAR HIGH ORDER
         LTR   R5,R5               END OF CSCBS
         BNZ   *+10                NO, CONTINUE
         LR    R5,R9               LOAD CSCB ADDR
         B     JOBOUT4             NO GOOD
         CR    R5,R9               SAME CSCB
         BE    JOBOUT4             YES, NO GOOD
         CH    R10,30(0,R5)        SAME ASID
         BNE   CSCBFRM1            NO, CHECK NEXT
         SPACE 1
CSCBFRM2 MVC   JOBNAME(8),8(R5)
         MVC   STEPNAME(8),64(R5)
         MVC   PROCNAME(8),32(R5)
         B     CSCBFRM4
         SPACE 1
CSCBFRM3 MVC   JOBNAME(8),16(R5)
         MVC   STEPNAME(8),8(R5)
         MVC   PROCNAME(8),32(R5)
         SPACE 1
CSCBFRM4 CLI   TSOSW,C'D'          DOMAIN DISPLAY
         BNE   CSCBFRM5            NO
         CLC   DOMAIN(1),40(R6)    DOMAIN MATCH    MVS/SE         WJB
         BNE   JOBOUT4
         SPACE 1
CSCBFRM5 CLC   ASID(4),=C'0001'
         BCR   7,R11
         MVC   JOBNAME(26),=CL26'MASTER'
         BR    R11
         SPACE 1
CSCBFRM6 MVC   JOBNAME(8),8(R5)
         MVC   STEPNAME(8),16(R5)
         MVC   PROCNAME+4(4),=CL4' '
         B     CSCBFRM5
         EJECT
OUCBFORM DS    0H                                                  WJB
         CLI   41(R6),X'00'        JOB ON IN QUEUE                 WJB
         BE    OUCBFRM0            YES, NO SWAP REASON
         UNPK  SRC(3),41(2,R6)     SWAP REASON             MVS/SE WJB
         NC    SRC(2),=8X'0F'
         TR    SRC(2),=C'0123456789ABCDEF'
         MVI   SRC+2,C' '
         CLI   38(R5),X'7F'        MVS SE                          WJB
         BNE   OUCBLOG1                                            WJB
         MVC   SRC(2),=CL3'LG'     FAKE UP LOGICAL SWAP CODE       WJB
         B     OUCBFRM0            AND CONTINUE                    WJB
OUCBLOG1 DS    0H                                                  WJB
         SPACE 1
OUCBFRM0 MVC   FLAGS(3),=CL3'NSW'
         TM    17(R6),X'80'        NON-SWAPPABLE
         BO    OUCBFRM1
         MVC   FLAGS(3),=CL3'IN'
         CLI   SCANTYPE,C'I'       IN QUEUE SCAN
         BE    OUCBFRM1
         MVC   FLAGS(3),=CL3'OUT'
         TM    16(R6),X'E0'        GOING IN/OUT
         BZ    OUCBFRM1            NO, JUST OUT
         MVC   FLAGS(3),=CL3'GOO'
         TM    16(R6),X'80'        GOING OUT
         BO    OUCBFRM1
         MVC   FLAGS(3),=CL3'GOB'
         TM    16(R6),X'20'        TRANSITIONING
         BO    OUCBFRM1
         MVC   FLAGS(3),=CL3'GOI'
         SPACE 1
OUCBFRM1 MVC   FLAGS+3(2),=CL2'A'
         TM    18(R6),X'04'        AUX STORAGE SHORTAGE
         BCR   1,R11
         MVC   FLAGS+3(2),=CL2'S'
         TM    18(R6),X'01'        REAL STORAGE SHORTAGE
         BCR   1,R11
         MVC   FLAGS+3(2),=CL2'LW'
         TM    21(R6),X'80'        LONG WAIT
         BCR   1,R11
         MVC   FLAGS+3(2),=CL2'MW'
         TM    21(R6),X'01'        DETECTED WAIT
         BCR   1,R11
         MVC   FLAGS+3(2),=CL2'CP'
         TM    19(R6),X'10'        CPU USER
         BCR   1,R11
         MVC   FLAGS+3(2),=CL2' '
         BR    R11
         EJECT
         USING *,R15
STAEXIT  CH    R0,=H'12'           SDWA GOTTEN
         BE    STAEXIT1            NO, FORCE RETURN
         L     R2,=A(STAERTRY)     LOAD RETRY ADDR
         SETRP RC=4,RETADDR=(2),FRESDWA=YES,DUMP=NO
         SPACE 3
STAEXIT1 L     R0,=A(STAERTRY)     LOAD RETRY ADDR
         LA    R15,4
         BR    R14
         DROP  R15
         SPACE 3
         USING *,R15
STAERTRY L     R12,=A(IEESL03D)    LOAD ENTRY POINT ADDR
         DROP  R15
         LA    R1,STAEMSG          ADDRESSING ERROR
         L     R2,IOPLADS          RELOAD IOPL ADDR
         LA    R11,RETURN          LOAD RET ADDR
         EJECT
MSGRTN   MVI   SCANRET,C'P'
         SPACE 1
MSGRTN1  DS    0H
         MVC   PLINE+4,BLANKS                             *LBD 07/85*
         LH    R3,0(R1)         * LOAD LEN                *LBD 07/85*
         SH    R3,=H'05'        * -4 (WTO HDR) -1 (MVC)   *LBD 07/85*
         EX    R3,MVCPLINE      * AND PLACE IN PLINE      *LBD 07/85*
         LA    R3,5(R3)         * ADD THE 5 BACK          *LBD 07/85*
         STH   R3,PLINE         * RESET PUTLINE LENGTH    *LBD 07/85*
         PUTLINE PARM=PUTBLOK,OUTPUT=(PLINE,TERM,SINGLE,DATA),       XXX
               MF=(E,IOPLADS)                             *LBD 07/85*
         BR    R11
         SPACE 1                                          *LBD 07/85*
MVCPLINE MVC   PLINE+4(0),4(R1) * EXECUTED INSTRUCTION    *LBD 07/85*
         SPACE 3
RETURN   EQU   *
         CLI   TSOSW,C'I'          *** IS THIS IN-Q DISPLAY ***(RLL)
         BE    GOBACK              *** YES - THEN GET OUT   ***(RLL)
         CLI   SCANRET,C' '        ANY FOUND
         BE    NOTFOUND            NO, TELL OPERATOR
GOBACK   EQU   *                   *** THIS BYPASS NOTFOUND ***(RLL)
         ESTAE 0                                      ****(RLL)****
         IFOFF XA,DOEXIT                                    *LBD 11/85*
         LA    R1,DOEXIT                                    *LBD 11/85*
         BSM   0,1                 RETURN TO 24 BIT MODE    *LBD 11/85*
DOEXIT   DS    0H                                           *LBD 11/85*
         MLEAVE                    RETURN ADDR
         SPACE 3
NOTFOUND LA    R11,RETURN
         LA    R1,NFNDMSG
         B     MSGRTN
         EJECT
         LTORG
         SPACE 3
         BITSW XA                                           *LBD 11/85*
         DS    0F
PLINE    DC    H'80',H'0'                                 *LBD 07/85*
         DC    CL80' '                                    *LBD 07/85*
BLANKS   DC    CL80' '          * 80 BLANKS TO CLEAR PLINE*LBD 07/85*
         DS    0F
STAEMSG  DC    X'00360100'
         DC    CL50'ERROR ENCOUNTERED IN CONTROL BLOCKS, RETRY COMMAND'
         SPACE 3
         DS    0F
NFNDMSG  DC    X'00360100'
         DC    CL50'NO JOBS ON OUT QUEUE'
         SPACE 3
HDRI     DC    X'00400100'
         DC    CL26'*****   IN  QUEUE   *****'
         DC    CL34'   ASID DPRTY QP  FLAGS   CPU TIME'
         SPACE 3
HDRO     DC    X'00400100'
         DC    CL26'*****   OUT  QUEUE   *****'
         DC    CL34'   ASID DPRTY SR  FLAGS   CPU TIME'
         EJECT
WORKSTRT DS    0D
DOUBLE   DS    2F
ASVTEND  DS    F                                                 JCC
SCANRET  DS    C
SCANTYPE DS    C
TSOSW    DS    C
DOMAIN   DS    C
         SPACE 5
         DS    0F
WTOLIST  DS    F
JOBMSG   DS    0CL60
JOBNAME  DS    CL9
STEPNAME DS    CL9
PROCNAME DS    CL11
ASID     DS    CL6
DPRTY    DS    CL5
SRC      DS    CL4
FLAGS    DS    CL6
EXECTIME DS    CL10
         SPACE 3
ESTAELST DS    5F                                     ****(RLL)****
         EJECT
         IKJIOPL
         EJECT
         IHASDWA
         EJECT                                              *LBD 11/85*
         CVT   DSECT=YES                                    *LBD 11/85*
         END
