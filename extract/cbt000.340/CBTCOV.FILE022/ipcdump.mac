 /* CREATE AN ISPF TABLE FROM SYS1.DUMPNN HEADER RECORDS              */
 /*********************************************************************/
 IPCDUMP: PROCEDURE (NJENODE) OPTIONS(MAIN) REORDER;
 DECLARE ALLOCATE ENTRY;
 DECLARE ALLOCRET FIXED BINARY INITIAL (0);
 DECLARE BINARY BUILTIN;
 DECLARE BLSUMTOD ENTRY (BIT(64),CHARACTER(17))
         OPTIONS (ASSEMBLER INTER RETCODE);
 DECLARE 1 CMDALLOC,
           2 SELECT  CHARACTER(41)
             INITIAL ('SELECT CMD(ALLOCATE FILE(DUMP) SHR REUSE '),
           2 DATASET CHARACTER(18) INITIAL ('DATASET(''SYS1.DUMP'),
           2 ID      PICTURE '99',
           2 ENDDSN  CHARACTER(3)  INITIAL (''') '),
           2 DEVTYPE CHARACTER(15) INITIAL ('UNIT(        ) '),
           2 VOLUME  CHARACTER(15) INITIAL ('VOLUME(      ) '),
           2 END     CHARACTER(1)  INITIAL (')');
 DECLARE D POINTER INITIAL (NULL);
 DECLARE DUMP FILE RECORD INPUT
         ENVIRONMENT (F RECSIZE(4104) BLKSIZE(4104) TOTAL);
 DECLARE DUMPEOF BIT(1);
 DECLARE FOUND BIT(1);
 DECLARE FREE CHARACTER(35)
         INITIAL ('ISPEXEC SELECT CMD(FREE FILE(DUMP))');
 DECLARE I FIXED BINARY;
 DECLARE IBMBOCAA ENTRY;
 DECLARE IBMBOPAA ENTRY;
 DECLARE IBMBOPBA ENTRY;
 DECLARE IBMBOPCA ENTRY;
 DECLARE IBMBOPDA ENTRY;
 DECLARE IBMBREFA ENTRY;
 DECLARE IBMBRQAA ENTRY;
 DECLARE ISPEXEC ENTRY (FIXED BINARY(31),CHARACTER(*))
         OPTIONS (ASSEMBLER INTER RETCODE);
 DECLARE ISPLINK ENTRY OPTIONS (ASSEMBLER INTER RETCODE);
 DECLARE LENGTH BUILTIN;
 DECLARE 1 MVSXA BASED (D),
           2 PRDHDRID BIT(8),
           2 PRDRECID BIT(8),
           2 PRDASID  BIT(16),
           2 PRDDUMPT BIT(16),
           2 PRDRSVRD BIT(16),
           2 PRDMODNM CHARACTER(8),
           2 PRDTODVL BIT(64),
           2 PRDCPU   BIT(64),
           2 PRDTITLE CHARACTER(100);
 DECLARE 1 MVS370 BASED (D),
           2 PRDHDRID BIT(8),
           2 PRDRECID BIT(8),
           2 PRDASID  BIT(16),
           2 PRDMODNM CHARACTER(8),
           2 PRDTODVL BIT(64),
           2 PRDTITLE CHARACTER(100);
 DECLARE NAMES   CHARACTER(150)
 INITIAL ('(CPU DATE DATETIME DEVTYPE DSNAME DUMPOS FILE IBMPMR ID JOB
 NODE OWNER QUAL SERIAL SOURCE SPR TIME TITLE TITLE2 TYPE VOLUME)');
 DECLARE NJENODE CHARACTER(100) VARYING;
 DECLARE NULL BUILTIN;
 DECLARE PLIRETV BUILTIN;
 DECLARE PLIXOPT CHARACTER(25) VARYING STATIC EXTERNAL
         INITIAL ('ISASIZE(4K),NOSPIE,NOSTAE');
 DECLARE PRDHDR   BIT(8) INITIAL('11111111'B);
 DECLARE PRDHDRE  BIT(8) INITIAL('11111111'B);
 DECLARE PRDHD811 BIT(8) INITIAL('11111110'B);
 DECLARE 1 PRDINPUT BASED (D),
           2 PRDHDRID BIT(8),
           2 PRDRECID BIT(8);
 DECLARE RETCODE FIXED BINARY INITIAL(0);
 DECLARE STRING BUILTIN;
 DECLARE SUBSTR BUILTIN;
 DECLARE SUFFIX PICTURE '99';
 DECLARE SYSTEM CHARACTER(1);
 DECLARE 1 TABLE,
           2 CPU      CHARACTER(8)   INITIAL('X'),
           2 DATE     CHARACTER(8)   INITIAL('MM/DD/YY'),
           2 DATETIME,
             3 DATE,
               4 YEAR   CHARACTER(2)   INITIAL('YY'),
               4 MONTH  CHARACTER(2)   INITIAL('MM'),
               4 DAY    CHARACTER(2)   INITIAL('DD'),
             3 TIME,
               4 HOUR   CHARACTER(2)   INITIAL('HH'),
               4 MINUTE CHARACTER(2)   INITIAL('MM'),
               4 SECOND CHARACTER(2)   INITIAL('MM'),
           2 DEVTYPE  CHARACTER(8)   INITIAL('XXXXXXXX'),
           2 DSNAME,
             3 DUMP   CHARACTER(10)  INITIAL('''SYS1.DUMP'),
             3 ID     PICTURE '99'   INITIAL('00'),
             3 END    CHARACTER(1)   INITIAL(''''),
           2 FILE     CHARACTER(8)   INITIAL('DUMPX00 '),
           2 ID1      PICTURE '99'   INITIAL('00'),
           2 ID2      PICTURE '99'   INITIAL('00'),
           2 NODE     CHARACTER(8)   INITIAL('X'),
           2 DUMPOS   CHARACTER(3)   INITIAL('XXX'),
           2 SERIAL1  CHARACTER(6)   INITIAL('NNNNNN'),
           2 SERIAL2  CHARACTER(6)   INITIAL('NNNNNN'),
           2 SERIAL3  CHARACTER(6)   INITIAL('NNNNNN'),
           2 SERIAL4  CHARACTER(6)   INITIAL('NNNNNN'),
           2 SOURCE   CHARACTER(21)  INITIAL('DSNAME(''SYS1.DUMP00'')'),
           2 TIME     CHARACTER(8)   INITIAL('HH:MM:SS'),
           2 TITLE    CHARACTER(100) INITIAL(''),
           2 TITLE2   CHARACTER(50)  INITIAL(''),
           2 TOD      BIT(64)        INITIAL('0'B),
           2 VOLUME   CHARACTER(6)   INITIAL('XXXXXX');
 DECLARE TODBUFFER CHARACTER(17) DEFINED (TODDATETIME);
 DECLARE 1 TODDATETIME,
           2 DATE,
             3 MONTH  CHARACTER(2) INITIAL('00'),
             3 SLASH1 CHARACTER(1) INITIAL('/'),
             3 DAY    CHARACTER(2) INITIAL('00'),
             3 SLASH2 CHARACTER(1) INITIAL('/'),
             3 YEAR   CHARACTER(2) INITIAL('00'),
           2 BLANK    CHARACTER(1) INITIAL(' '),
           2 TIME,
             3 HOUR   CHARACTER(2) INITIAL('00'),
             3 COLON1 CHARACTER(1) INITIAL(':'),
             3 MINUTE CHARACTER(2) INITIAL('00'),
             3 COLON2 CHARACTER(1) INITIAL(':'),
             3 SECOND CHARACTER(2) INITIAL('00');
 DECLARE TYPE CHARACTER(4) INITIAL('DUMP');

1/*********************************************************************/
 /*                                                                   */
 /* CREATE ISPF TABLE "IPCDUMP". RETURN IMMEDIATELY IF IT ALREADY     */
 /* EXISTS. PREPARE FOR SORTED ROWS, AND DEFINE ALL TABLE VARIABLES.  */
 /*                                                                   */
 /*********************************************************************/
 CALL ISPLINK ('TBOPEN  ','IPCDUMP ','NOWRITE ',' ','SHARE   ');
 IF PLIRETV = 0
 THEN RETURN;

 FETCH ISPLINK,ISPEXEC,BLSUMTOD,IBMBOPAA,IBMBOPBA,IBMBOPCA,IBMBOPDA,
       IBMBRQAA,IBMBREFA,IBMBOCAA,ALLOCATE;
 CALL ISPLINK ('TBCREATE','IPCDUMP ',' ',NAMES,
               'NOWRITE ',' ',' ','SHARE   ');
 CALL ISPLINK ('TBSORT  ','IPCDUMP ','(DATETIME,C,D)');
 CALL ISPLINK ('VDEFINE ','(CPU)'   ,TABLE.CPU   ,'CHAR ',BINARY(8,31));
 CALL ISPLINK ('VDEFINE ','(DATE)'  ,TABLE.DATE  ,'CHAR ',BINARY(8,31));
 CALL ISPLINK ('VDEFINE ','(DATETIME)' ,TABLE.DATETIME ,'CHAR ',
               BINARY(12,31));
 CALL ISPLINK ('VDEFINE ','(DEVTYPE)  ',TABLE.DEVTYPE ,'CHAR ',
               BINARY(8,31));
 CALL ISPLINK ('VDEFINE ','(DSNAME)',TABLE.DSNAME,'CHAR ',
               BINARY(13,31));
 CALL ISPLINK ('VDEFINE ','(FILE)'  ,TABLE.FILE  ,'CHAR ',BINARY(8,31));
 CALL ISPLINK ('VDEFINE ','(ID)'    ,TABLE.ID    ,'CHAR ',BINARY(2,31));
 CALL ISPLINK ('VDEFINE ','(ID1)'   ,TABLE.ID1   ,'CHAR ',BINARY(2,31));
 CALL ISPLINK ('VDEFINE ','(ID2)'   ,TABLE.ID2   ,'CHAR ',BINARY(2,31));
 CALL ISPLINK ('VDEFINE ','(NODE)'  ,TABLE.NODE  ,'CHAR ',BINARY(8,31));
 CALL ISPLINK ('VDEFINE ','(DUMPOS)',TABLE.DUMPOS,'CHAR ',BINARY(3,31));
 CALL ISPLINK ('VDEFINE ','(SERIAL1)',TABLE.SERIAL1,'CHAR ',
               BINARY(6,31));
 CALL ISPLINK ('VDEFINE ','(SERIAL2)',TABLE.SERIAL2,'CHAR ',
               BINARY(6,31));
 CALL ISPLINK ('VDEFINE ','(SERIAL3)',TABLE.SERIAL3,'CHAR ',
               BINARY(6,31));
 CALL ISPLINK ('VDEFINE ','(SERIAL4)',TABLE.SERIAL4,'CHAR ',
               BINARY(6,31));
 CALL ISPLINK ('VDEFINE ','(SOURCE)',TABLE.SOURCE,'CHAR ',
               BINARY(21,31));
 CALL ISPLINK ('VDEFINE ','(TIME)'  ,TABLE.TIME  ,'CHAR ',BINARY(8,31));
 CALL ISPLINK ('VDEFINE ','(TITLE)' ,TABLE.TITLE ,'CHAR ',
               BINARY(100,31));
 CALL ISPLINK ('VDEFINE ','(TITLE2)' ,TABLE.TITLE2 ,'CHAR ',
               BINARY(50,31));
 CALL ISPLINK ('VDEFINE ','(TYPE)'  ,TYPE        ,'CHAR ',BINARY(4,31));
 CALL ISPLINK ('VDEFINE ','(VOLUME)',TABLE.VOLUME,'CHAR ',BINARY(6,31));
1/*********************************************************************/
 /*                                                                   */
 /* LOOP THROUGH ALL ROWS IN ISPF TABLE "CPUDATA". "CPUDATA" CONTAINS */
 /* ONE ROW FOR EACH CPU, WITH CPU NAME, DUMP RANGE, AND VOLUME.      */
 /*                                                                   */
 /*********************************************************************/
 ON ENDFILE (DUMP) DUMPEOF = '1'B;
 CALL ISPLINK ('TBTOP   ','CPUDATA ');
 CALL ISPLINK ('TBSKIP  ','CPUDATA ');
 RETCODE = PLIRETV;
 DO WHILE (RETCODE = 0);
    IF TABLE.NODE = NJENODE & TABLE.SERIAL1 ^= '      '
    THEN DO;
       IF TABLE.VOLUME = ' '
       THEN CMDALLOC.VOLUME,CMDALLOC.DEVTYPE = '';
       ELSE DO;
          CMDALLOC.VOLUME  = 'VOLUME(' ×× TABLE.VOLUME  ×× ')';
          CMDALLOC.DEVTYPE = 'UNIT('   ×× TABLE.DEVTYPE ×× ')';
          END;
 /*********************************************************************/
 /*                                                                   */
 /* LOOP THROUGH ALL SYS1.DUMPNN DATA SETS ON THE CPU. ALLOCATE EACH  */
 /* DUMP DATA SET.                                                    */
 /*                                                                   */
 /*********************************************************************/
       DO TABLE.ID = TABLE.ID1 TO TABLE.ID2;
          CMDALLOC.ID = TABLE.ID;
          CALL ISPEXEC (LENGTH(STRING(CMDALLOC)),STRING(CMDALLOC));
          ALLOCRET = PLIRETV;
 /*********************************************************************/
 /*                                                                   */
 /* READ A SYS1.DUMPNN DATA SET AND SEARCH FOR HEADER RECORD.         */
 /*                                                                   */
 /*********************************************************************/
          IF ALLOCRET = 0
          THEN DO;
             DUMPEOF = '0'B;
             OPEN FILE (DUMP);
             READ FILE (DUMP) SET (D);
             END;
          ELSE DUMPEOF = '1'B;
          FOUND = '0'B;
          DO  I = 1 TO 10 WHILE (^ DUMPEOF & ^ FOUND);
 /*********************************************************************/
 /*                                                                   */
 /* OBTAIN DATA FROM MVS/XA HEADER RECORD.                            */
 /*                                                                   */
 /*********************************************************************/
             IF PRDINPUT.PRDHDRID = PRDHD811 &
                PRDINPUT.PRDRECID = PRDHDRE
             THEN DO;
                FOUND        = '1'B;
                TABLE.DUMPOS = 'XA';
                TABLE.TOD    = MVSXA.PRDTODVL;
                TABLE.TITLE  = MVSXA.PRDTITLE;
                TABLE.TITLE2 = SUBSTR(TABLE.TITLE,51,50);
                END;
 /*********************************************************************/
 /*                                                                   */
 /* OBTAIN DATA FROM MVS/370 HEADER RECORD.                           */
 /*                                                                   */
 /*********************************************************************/
             ELSE IF PRDINPUT.PRDHDRID = PRDHDR &
                     PRDINPUT.PRDRECID = PRDHDRE
                   THEN DO;
                      FOUND        = '1'B;
                      TABLE.DUMPOS = '370';
                      TABLE.TOD    = MVS370.PRDTODVL;
                      TABLE.TITLE  = MVS370.PRDTITLE;
                      TABLE.TITLE2 = SUBSTR(TABLE.TITLE,51,50);
                      END;
 /*********************************************************************/
 /*                                                                   */
 /* CONVERT DATA TO DESIRED FORMAT AND ADD ROW TO "IPCDUMP" TABLE.    */
 /*                                                                   */
 /*********************************************************************/
             IF FOUND
             THEN DO;
                CALL BLSUMTOD (TABLE.TOD,TODBUFFER);
                TABLE.DATE     = STRING(TODDATETIME.DATE);
                TABLE.TIME     = STRING(TODDATETIME.TIME);
                TABLE.DATETIME = TODDATETIME, BY NAME;
                IF TABLE.DUMPOS = 'XA' & TABLE.ID > '09'
                THEN DO;
                   TABLE.FILE = '';
                   TABLE.SOURCE = 'DSNAME('            ××
                                  STRING(TABLE.DSNAME) ××
                                  ')';
                   END;
                IF TABLE.DUMPOS = 'XA' & TABLE.ID <= '09'
                THEN DO;
                   TABLE.FILE = 'DUMP'                ××
                                SUBSTR(TABLE.CPU,1,1) ××
                                TABLE.ID;
                   TABLE.SOURCE = 'FILE(' ×× TABLE.FILE ×× ')';
                   END;
                IF TABLE.DUMPOS = '370'
                THEN DO;
                   TABLE.FILE = 'DUMP'                ××
                                SUBSTR(TABLE.CPU,1,1) ××
                                TABLE.ID;
                   TABLE.SOURCE = 'DSNAME('            ××
                                  STRING(TABLE.DSNAME) ××
                                  ')';
                   END;
                CALL ISPLINK ('TBADD   ','IPCDUMP ',' ','ORDER   ');
                END;
 /*********************************************************************/
 /*                                                                   */
 /* END OF DATA CONVERSION AND TABLE ADD.                             */
 /*                                                                   */
 /*********************************************************************/
             ELSE READ FILE (DUMP) SET (D);
             END;
          IF ALLOCRET = 0
          THEN CLOSE FILE (DUMP);
          END;
 /*********************************************************************/
 /*                                                                   */
 /* END OF HEADER RECORD PROCESSING.                                  */
 /*                                                                   */
 /*********************************************************************/
       END;
 /*********************************************************************/
 /*                                                                   */
 /* END OF SYS1.DUMPNN PROCESSING FOR A CPU.                          */
 /*                                                                   */
 /*********************************************************************/
   CALL ISPLINK ('TBSKIP  ','CPUDATA ');
   RETCODE = PLIRETV;
   END;
 /*********************************************************************/
 /*                                                                   */
 /* END OF "CPUDATA" TABLE.                                           */
 /*                                                                   */
 /*********************************************************************/
 /*********************************************************************/
 /*                                                                   */
 /* CLEAN UP AND TERMINATE.                                           */
 /*                                                                   */
 /*********************************************************************/
 CALL ISPEXEC (LENGTH(FREE),FREE);
 CALL ISPLINK ('TBTOP   ','IPCDUMP ');
 CALL ISPLINK ('VRESET  ');
 RELEASE ISPLINK,ISPEXEC,BLSUMTOD,IBMBOPAA,IBMBOPBA,IBMBOPCA,IBMBOPDA,
         IBMBRQAA,IBMBREFA,IBMBOCAA,ALLOCATE;
 END IPCDUMP;
