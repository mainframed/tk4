EXCOPY   TITLE 'LIST ASSEMBLER SOURCE CODE WITH EXPANDED COPY STMTS'
EXCOPY   CSECT
         EJECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         EJECT
         DCBD  DSORG=PO
         EJECT
***********************************************************************
*              WORK AREA FOR RECURSION
***********************************************************************
WORK     DSECT                     WORK AREA
SAVE     DS    18F                 SAVE AREA
FLAG     DS    X                   FLAGS
FLAGCONT EQU   X'80'               FLAG CONTINUATION EXPECTED
CALL     CALL  ,(OPER,SYSLIB),MF=L CALL PARAMETER LIST
OPER     DS    CL8                 COPY OPERAND (MEMBER NAME)
         READ  DECB,SF,MF=L        DECB
BLOCK    DS    F                   NOTE/POINT BLOCK ADDRESS
WORKSIZE EQU   *-WORK              SIZE OF FIXED PORTION OF DSECT
*----------------------------------------------------------------------
BUFFER   DS    0X                  INPUT BUFFER (SIZE IN DCB)
         EJECT
***********************************************************************
*              SOURCE OR COPY MEMBER NAME
***********************************************************************
MEMSTART DSECT
MEMBER   DS    CL8                 MEMBER NAME
         EJECT
***********************************************************************
*              SOURCE CARD
***********************************************************************
CARDSTRT DSECT
CARD     DS    0CL80               SOURCE CARD
CARDSTMT DS    0CL71               STATEMENT FIELD
CARDBEGN DS    C                   BEGIN COLUMN
         DS    14C
CARDCONT DS    C                   CONTINUE COLUMN
         DS    54C
CARDEND  DS    C                   END COLUMN
CARDIND  DS    C                   CONTINUATION INDICATOR FIELD
CARDSEQ  DS    CL8                 IDENTIFICATION-SEQUENCE FIELD
         EJECT
***********************************************************************
*              MAIN ROUTINE
***********************************************************************
EXCOPY   CSECT
*----------------------------------------------------------------------
*              INTIALIZATION
*----------------------------------------------------------------------
         USING EXCOPY,R15
         SAVE  (14,12)             SAVE REGISTERS
         MODID ,                   IDENTIFICATION
         DROP  R15                 EXCOPY
         LR    R12,R15             SET BASE REGISTER
         USING EXCOPY,R12
         L     R2,0(R1)            POINT TO PARM FIELD
         LA    R1,SAVEAREA         POINT TO SAVE AREA
         ST    R13,4(R1)           CHAIN SAVE AREAS
         ST    R1,8(R13)           ...
         LR    R13,R1              SET BASE FOR SAVE AREA
*----------------------------------------------------------------------
*              VALIDATE SYSUT2
*----------------------------------------------------------------------
         RDJFCB SYSUT2             READ OUTPUT JFCB
         LTR   R15,R15             ERROR?
         BNZ   ERRDJFCB            YES, BRANCH
         OBTAIN CAMLST             OBTAIN SYSUT2 DSCB
         LTR   R15,R15             ERROR?
         BNZ   EROBTAIN            YES, BRANCH
         TM    DS1DSORG,DS1DSGPS   DSORG=PS?
         BO    RECFM               YES, BRANCH
         TM    DS1DSORG,DS1DSGPO   DSORG=PO?
         BZ    ERDSORG             NO, BRANCH
         TM    JFCBIND1,JFCPDS     IS PDS MEMBER SPECIFIED?
         BZ    ERDSORG             YES, BRANCH
RECFM    EQU   *
         TM    DS1RECFM,DS1RECFU   RECFM=U?
         BO    ERDCB               YES, BRANCH
         TM    DS1RECFM,DS1RECFF   RECFM=F
         BZ    ERDCB               NO, BRANCH
         CLC   DS1LRECL,=H'80'     LRECL=80?
         BNE   ERDCB               NO, BRANCH
*----------------------------------------------------------------------
         OPEN  (SYSLIB,INPUT,SYSUT1,INPUT,SYSUT2,OUTPUT)  OPEN DCB'S
*----------------------------------------------------------------------
*              PROCESS PARM FIELD
*----------------------------------------------------------------------
         LH    R3,0(R2)            GET LENGTH OF PARM FIELD
         LTR   R3,R3               PARM SPECIFIED?
         BZ    ERPARM              NO, ERROR
         C     R3,=F'8'            TOO LONG?
         BH    ERPARM              YES, BRANCH
         BCTR  R3,0                SUBTRACT ONE
         EX    R3,MVCPARM          MOVE SOURCE MEMBER NAME
*----------------------------------------------------------------------
*              PROCESS
*----------------------------------------------------------------------
         LA    R15,INPUT           POINT TO INPUT ROUTINE
         CALL  (15),(SOURCE,SYSUT1)  CALL INPUT ROUTINE
         CLOSE (SYSLIB,,SYSUT1,,SYSUT2,)   CLOSE DCB'S
         FREEPOOL SYSUT2           FREE OUTPUT BUFFER POOL
         L     R15,RETCODE         GET RETURN CODE
RETURN   EQU   *
         L     R13,4(R13)          RESTORE SAVE AREA POINTER
         RETURN (14,12),RC=(15)    RETURN
*----------------------------------------------------------------------
*              SYSUT2 ERRORS
*----------------------------------------------------------------------
ERRDJFCB EQU   *
         WTO   'SYSUT2 NOT ALLOCATED',ROUTCDE=11
         LA    R15,16              SET RETURN CODE=16
         B     RETURN              RETURN
EROBTAIN EQU   *
         WTO   'SYSUT2 OBTAIN FAILED',ROUTCDE=11
         LA    R15,16              SET RETURN CODE=16
         B     RETURN              RETURN
ERDSORG  EQU   *
         WTO   'SYSUT2 MUST BE SEQUENTIAL OR A PDS MEMBER',ROUTCDE=11
         LA    R15,16              SET RETURN CODE=16
         B     RETURN              RETURN
ERDCB    EQU   *
         WTO   'SYSUT2 MUST BE RECFM=F×FB, LRECL=80',ROUTCDE=11
         LA    R15,16              SET RETURN CODE=16
         B     RETURN              RETURN
*----------------------------------------------------------------------
*              PARM FIELD ERROR
*----------------------------------------------------------------------
ERPARM   EQU   *
         PUT   SYSUT2,MSGPARM
         LA    R15,4               SET RETURN CODE=4
         B     RETURN              RETURN
*----------------------------------------------------------------------
MVCPARM  MVC   SOURCE(0),2(R2)     EXECUTED
         DROP  R12                 EXCOPY
         EJECT
***********************************************************************
*              RECURSIVE INPUT ROUTINE
***********************************************************************
INPUT    EQU   *
         SAVE  (14,12)             SAVE REGISTERS
         LR    R12,R15             SET BASE REGISTER
         USING INPUT,R12
*----------------------------------------------------------------------
*              OBTAIN PARAMETERS
*----------------------------------------------------------------------
         L     R11,0(R1)           MEMBER NAME
         USING MEMBER,R11
         L     R10,4(R1)           OPENED INPUT DCB
         USING IHADCB,R10
*----------------------------------------------------------------------
*              INITIALIZE
*----------------------------------------------------------------------
         LH    R1,DCBBLKSI         GET BLKSIZE
         LA    R0,WORKSIZE(R1)     GET SIZE OF DSECT
         GETMAIN R,LV=(0)          GET STORAGE FOR DSECT
         LR    R6,R1               GETMAIN ADDRESS
         LA    R7,WORKSIZE         GETMAIN LENGTH
         SR    R9,R9               SET PAD TO ZERO
         MVCL  R6,R8               CLEAR GETMAINED AREA
         ST    R13,4(R1)           CHAIN SAVE AREAS
         ST    R1,8(R13)           ...
         LR    R13,R1              SET BASE FOR DSECT
         USING WORK,R13
*----------------------------------------------------------------------
*              PROCESS INPUT
*----------------------------------------------------------------------
         SR    R2,R2               R2 = 0 FOR TRT INSTRUCTION
         LA    R8,80               GET LRECL FOR BXLE
         FIND  IHADCB,MEMBER,D     FIND MEMBER
         LTR   R15,R15             ERROR?
         BNZ   FINDERR             YES, BRANCH
READ     EQU   *
         READ  DECB,SF,IHADCB,BUFFER,MF=E  READ A BLOCK
         CHECK DECB                WAIT FOR READ
         LA    R6,BUFFER           POINT TO FIRST RECORD
         USING CARDSTRT,R6
         LH    R9,DCBBLKSI         GET BLOCK SIZE
         L     R1,DECB+16          POINT TO IOB
         SH    R9,14(R1)           SUBTRACT RESIDUAL COUNT
         LA    R9,CARDSTRT(R9)     POINT TO END OF BLOCK
         SR    R9,R8               POINT TO LAST LOGICAL RECORD
*
*              CHECK FOR COPY STATEMENT
*
NEXT     EQU   *
         TM    FLAG,FLAGCONT       WAS CONTINUATION EXPECTED?
         BO    CONTCHK             YES, DO NOT PROCESS
         CLI   CARDBEGN,C' '       IS BEGIN COLUMN BLANK?
         BNE   CONTCHK             NO, DO NOT PROCESS
         TRT   CARDBEGN+1(L'CARDSTMT-1-L'COPY),OPERBEGN FIND OPERATOR
         BZ    CONTCHK             NO OPERATOR, DO NOT PROCESS
         B     *(R2)               BRANCH ON TRT FUNCTION CODE INDEX
         B     ERROR               ILLEGAL CHARACTER, ERROR
         CLC   COPY,0(R1)          IS IT A COPY STATEMENT?
         BNE   CONTCHK             NO, DO NOT PROCESS
         LA    R1,L'COPY(R1)       POINT PAST COPY OPERATOR
         LA    R7,CARDEND          POINT TO END COLUMN
         SR    R7,R1               COMPUTE REMAINING LENGTH
         EX    R7,TRTBEGIN         SEARCH FOR OPERAND
         BZ    ERROR               NO OPERAND, ERROR
         B     *(R2)               BRANCH ON TRT FUNCTION CODE INDEX
         B     ERROR               ILLEGAL CHARACTER, ERROR
         LR    R3,R1               SAVE POINTER VALUE
         LA    R7,CARDEND          POINT TO END COLUMN
         LA    R1,1(R1)            POINT PAST FIRST CHARACTER OF NAME
         SR    R7,R1               COMPUTE REMAINING LENGTH
         BM    ENDOPER             OPERAND ENDS AT END COLUMN
         EX    R7,TRTEND           SEARCH FOR END OF OPERAND
         BZ    ENDOPER             OPERAND ENDS AT END COLUMN
         B     *(R2)               BRANCH ON TRT FUNCTION CODE INDEX
         B     ERROR               ILLEGAL CHARACTER, ERROR
*
*              PROCESS COPY STATEMENT
*
         LR    R4,R1               POINT PAST END OF OPERAND
         SR    R4,R3               GET LENGTH OF OPERAND
         BCTR  R4,0                LENGTH - 1
ENDOPER  EQU   *
         CL    R4,=A(L'OPER-1)     IS OPERAND TOO LONG?
         BH    ERROR               YES, ERROR
         MVC   OPER,=CL8' '
         EX    R4,MVCOPER          COPY OPER
         MVI   CARD,C'*'           CHANGE COPY STATEMENT TO A COMMENT
         PUT   SYSUT2,CARD         COPY RECORD TO SYSUT2
         MVC   MSGNAME,OPER        GET COPY MEMBER NAME FOR MESSAGE
         PUT   SYSUT2,MSGCOPY      PUT EYE-CATCHER MESSAGE
         NOTE  IHADCB              NOTE CURRENT BLOCK
         ST    R1,BLOCK            ...
         LA    R15,INPUT           INPUT ENTRY POINT
         CALL  (15),(OPER,SYSLIB),MF=(E,CALL)  CALL INPUT RECURSIVELY
         MVI   BLOCK+3,1           SET CURRENT BLOCK + 1
         POINT IHADCB,BLOCK        POINT TO NEXT BLOCK
         MVC   MSGNAME,OPER        GET COPY MEMBER NAME FOR MESSAGE
         PUT   SYSUT2,MSGCOPY      PUT EYE-CATCHER MESSAGE
         B     ENDLOOP             LOOP FOR NEXT CARD
*
*              ERROR IN SOURCE CODE
*
ERROR    EQU   *
         MVC   RETCODE,=F'4'       SET RETURN CODE
         PUT   SYSUT2,MSGERCPY     ERROR MESSAGE - BAD COPY STATEMENT
CONTCHK  EQU   *
         CLI   CARDIND,C' '        CONTINUATION SPECIFIED?
         BE    CONTOFF             NO, BRANCH
         OI    FLAG,FLAGCONT       SET CONTINUATION EXPECTED
         B     PUT                 LOOP FOR NEXT CARD
*
*              RESET CONTINUATION
*
CONTOFF  EQU   *
         NI    FLAG,X'FF'-FLAGCONT SET NO CONTINUATION
         B     PUT                 LOOP FOR NEXT CARD
*----------------------------------------------------------------------
*              COPY RECORD TO SYSUT2
*----------------------------------------------------------------------
PUT      EQU   *
         PUT   SYSUT2,CARD
*----------------------------------------------------------------------
*              END OF INPUT LOOPS
*----------------------------------------------------------------------
ENDLOOP  EQU   *
         BXLE  R6,R8,NEXT          LOOP FOR NEXT LOGICAL RECORD
         B     READ                LOOP FOR NEXT BLOCK
         DROP  R6                  CARDSTRT
*----------------------------------------------------------------------
*              END OF FILE ON INPUT
*----------------------------------------------------------------------
EOD      EQU   *                   END OF DATA
         LH    R1,DCBBLKSI         GET BLKSIZE
         LA    R0,WORKSIZE(R1)     GET SIZE OF DSECT
         LR    R1,R13              POINT TO DSECT STORAGE
         L     R13,4(R13)
         FREEMAIN R,LV=(0),A=(1)   FREE DSECT STORAGE
         RETURN (14,12),RC=0       RETURN
*----------------------------------------------------------------------
*              ERROR IN READ
*----------------------------------------------------------------------
SYNAD    EQU   *
         MVC   RETCODE,=F'4'       SET RETURN CODE
         SYNADAF ACSMETH=BPAM      GET ERROR MESSAGE
         LA    R0,48(R1)
         PUT   SYSUT2,(0)          PRINT MESSAGE
         SYNADRLS                  RELEASE MESSAGE BUFFER
         B     EOD                 RETURN
*----------------------------------------------------------------------
*              ERROR IN FIND
*----------------------------------------------------------------------
FINDERR  EQU   *
         MVC   RETCODE,=F'4'       SET RETURN CODE
         C     R15,=F'4'           CHECK FIND RETURN CODE
         BNE   ERRFIND
         PUT   SYSUT2,MSGERRD      MEMBER NOT FOUND
         B     EOD                 RETURN
ERRFIND  EQU   *
         PUT   SYSUT2,MSGFIND      OTHER ERROR
         B     EOD
*----------------------------------------------------------------------
*              EXECUTED INSTRUCTIONS
*----------------------------------------------------------------------
MVCOPER  MVC   OPER(0),0(R3)       EXECUTED
TRTBEGIN TRT   0(0,R1),OPERBEGN    EXECUTED
TRTEND   TRT   0(0,R1),OPEREND     EXECUTED
*
         DROP  R13                 WORK
         DROP  R12                 INPUT
         DROP  R11                 MEMBER
         DROP  R10                 IHADCB
         EJECT
***********************************************************************
*              DATA
***********************************************************************
MSGPARM  DC    CL80'*####### ERROR IN PARM FIELD ########'
MSGERCPY DC    CL80'*####### ERROR IN COPY STATEMENT ########'
MSGERRD  DC    CL80'*####### MEMBER NOT FOUND ########'
MSGFIND  DC    CL80'*####### ERROR IN FIND ########'
MSGCOPY  DC    CL35'*################################# '
MSGNAME  DC    CL8' '
         DC    CL37' ####################################'
COPY     DC    C'COPY '            COPY OPERATOR
FIELD    EQU   0                   TRT - SKIP
OTHER    EQU   4                   TRT - NON-ALPHANUMERIC
BLANK    EQU   8                   TRT - BLANK
ALPHA    EQU   8                   TRT - ALPHABETIC/NATIONAL
NUMBR    EQU   8                   TRT - NUMERIC
OPERBEGN DS    0CL256              TRT TABLE FOR ALPHABETIC/NATIONAL
         DC    64AL1(OTHER)
         DC      AL1(FIELD) ' '    BLANK
         DC    26AL1(OTHER)
         DC      AL1(ALPHA) $      NATIONAL
         DC    31AL1(OTHER)
         DC     2AL1(ALPHA) #@     NATIONAL
         DC    68AL1(OTHER)
         DC     9AL1(ALPHA) A-I    ALPHABETIC
         DC     7AL1(OTHER)
         DC     9AL1(ALPHA) J-R    ALPHABETIC
         DC     8AL1(OTHER)
         DC     8AL1(ALPHA) S-Z    ALPHABETIC
         DC     6AL1(OTHER)
         DC    10AL1(OTHER) 0-9    NUMERIC
         DC     6AL1(OTHER)
OPEREND  DS    0CL256              TRT TABLE FOR BLANK
         DC    64AL1(OTHER)
         DC      AL1(BLANK) ' '    BLANK
         DC    26AL1(OTHER)
         DC      AL1(FIELD) $      NATIONAL
         DC    31AL1(OTHER)
         DC     2AL1(FIELD) #@     NATIONAL
         DC    68AL1(OTHER)
         DC     9AL1(FIELD) A-I    ALPHABETIC
         DC     7AL1(OTHER)
         DC     9AL1(FIELD) J-R    ALPHABETIC
         DC     8AL1(OTHER)
         DC     8AL1(FIELD) S-Z    ALPHABETIC
         DC     6AL1(OTHER)
         DC    10AL1(FIELD) 0-9    NUMERIC
         DC     6AL1(OTHER)
         EJECT
SAVEAREA DC    18F'0'              SAVE AREA
RETCODE  DC    F'0'                RETURN CODE
SOURCE   DC    CL8' '              SOURCE MEMBER NAME
         EJECT
SYSLIB   DCB   DDNAME=SYSLIB,      COPY/MACRO LIBRARY DCB              *
               DSORG=PO,                                               *
               EODAD=EOD,                                              *
               LRECL=80,                                               *
               MACRF=R,                                                *
               RECFM=FB,                                               *
               SYNAD=SYNAD
         EJECT
SYSUT1   DCB   DDNAME=SYSUT1,      SOURCE MODULE DCB                   *
               DSORG=PO,                                               *
               EODAD=EOD,                                              *
               LRECL=80,                                               *
               MACRF=R,                                                *
               RECFM=FB,                                               *
               SYNAD=SYNAD
         EJECT
SYSUT2   DCB   DDNAME=SYSUT2,      OUTPUT DCB                          *
               DSORG=PS,                                               *
               EXLST=EXLST,                                            *
               LRECL=80,                                               *
               MACRF=PM,                                               *
               RECFM=FB
         EJECT
EXLST    DC    X'87',AL3(INFMJFCB) JFCB EXIT LIST
         IEFJFCBN LIST=YES         JFCB
         EJECT
CAMLST   CAMLST SEARCH,JFCBDSNM,JFCBVOLS,DS1FMTID  OBTAIN PARM LIST
         IECSDSL1 1
         DS    XL(140-DS1END+DS1FMTID)  PAD TO 140 BYTES
         EJECT
         END   EXCOPY
