VSCAN    CSECT
         PRINT NOGEN
         USING VSCAN,R12
         STM   R14,R12,12(R13)
         LR    R12,R15
         LA    R3,SAVE
         ST    R3,8(0,R13)
         ST    R13,SAVE+4
         LA    R13,SAVE
PARML    DS    0H
         LR    R9,R1                      SAVE PTR TO TSO CTL BLOCK
         L     R1,8(R1)                   ADDR OF TSO USERID
*---------------------------------------------------------------------*
*                   BUILD PARSE PARAMETER LIST                        *
*---------------------------------------------------------------------*
PARSE    DS    0H
         USING CPPL,R9                    ADDRESSIBILITY TO CPPL
         LA    R1,PARSELST                PTR TO PARSE PARM LIST
         USING PPL,R1                     ADDRESSIBILITY TO PPL
         L     R2,CPPLUPT                 PTR TO USER PROFILE TABLE
         L     R3,CPPLECT                 PTR TO ENVIRONMENT CTL TABLE
         SR    R4,R4                      CLEAR
         ST    R4,ECB                     PTR TO EVENT CTL BLOCK - ZERO
         LA    R4,ECB
         STM   R2,R4,PARSELST
         MVC   PPLPCL,ADDRPCL             PTR TO PARAMETER CTL LIST
         LA    R3,ANSADDR
         ST    R3,PPLANS                  PTR TO PDE RETURNED BY PARSE
         MVC   PPLCBUF,CPPLCBUF           PTR TO COMMAND BUFFER
         SR    R3,R3                      CLEAR
         ST    R3,PPLUWA                  NO USER WORK AREA USED
         DROP  R9
*---------------------------------------------------------------------*
*                   LINK TO PARSE ROUTINE                             *
*---------------------------------------------------------------------*
         LINK  EP=IKJPARS
         LTR   R15,R15                    CHECK RETURN CODE ZERO
         BZ    PARSEOK                    YES
         BAL   R10,FREE                   REL PARSE ROUTINE WORK AREA
         B     PARSERR                    PARSE ERROR ROUTINE
*---------------------------------------------------------------------*
*                   CHECK PARAMETERS RETURNED BY PARSE ROUTINE        *
*---------------------------------------------------------------------*
PARSEOK  DS    0H
         L     R9,ANSADDR                 ADDR OF PDE RETURNED BY PARSE
         USING PDL,R9                     ADDRESSIBILITY TO PDL
         LA    R5,VARNAM                  PTR TO VAR. NAME ADDR IN PDL
CHKINDX  DS    0H
         L     R6,0(R5)                   LOAD ADDR OF VARABLE NAME
         LH    R4,4(R5)                   LENGTH OF NAME
         ST    R4,VARLEN                  SETUP FOR VSCAN VAR CALL
CONTINUE DS    0H
         S     R4,F1                      REDUCE LENGTH BY 1
         LR    R5,R6                      LOAD ADDR OF VARABLE NAME
         EX    R4,MOVEVAR                 MOVE NAME AS SPECIFIED TO
*                                         VARABLE
**************************
         L     R15,16                     POINT TO CVT
         L     R15,X'9C'(,R15)            POINT TO TSVT
         L     R15,TSVTVACC-TSVT(,R15) POINT TO MODULE IKJCT411
         CALL  (15),(ECODE,                                            X
               VARPNTR,                                                X
               VARLEN,                                                 X
               VALPNTR,                                                X
               VALLEN,                                                 X
               TOKEN),VL
         ST    R15,ERROCD
         CLC   ERROCD,=X'00000028'       ARE WE UNDER TEST
         BE    INTEST
         LTR   R15,R15                    DID WE HAVE FUN ?
         BNZ   RET0                       IF NOT THEN RET CODE 0
         B     CHKSTR
INTEST   LA    R7,VALUE                   IN TEST SO CHEAT
         ST    R7,VALPNTR
         L     R7,=X'0000000E'
         ST    R7,VALLEN
CHKSTR   L     R7,VALPNTR                 POINT TO THE VALUE OF THE
         L     R10,VALLEN                 KEEP LENGTH OF VALUE
         LA    R5,CHRSTR                  POINT TO SEARCH STRING
         LH    R4,4(R5)                   LENGTH OF STRING
         ST    R4,STRLEN                  SAVE OFF
         LTR   R4,R4                      WAS THE OPERAND SPECIFIED
         BZ    RET0                       IF NOT RET CODE 0
         LR    R6,R7                      SAVE ADDRESS OF VARABLE STR
         L     R8,0(R5)                   SAVE ADDRESS OF VARABLE STR
CHKST    DS    0H
         LH    R4,START                   LOAD LENGTH OF START OPERAND
         LTR   R4,R4                      WAS THE OPERAND SPECIFIED
         BZ    NOADD                      IF 0 THEN DON'T ADD
         L     R5,SCOLN
         LH    R4,SCOLN+4                 LOAD LENGTH OF START OPERAND
         S     R4,F1                      ADJUST FOR EX
         EX    R4,PACKIT                  PACKIT
         CVB   R2,PKWRK
         SR    R1,R1                      ZERRO R1
         CR    R2,R1                      CHECK FOR ZERO OR POS
         BNH   NOADD
         AR    R7,R2                      ADD OFFSET TO START
NOADD    DS    0H
         LR    R1,R7                      LOAD ADDRESS OF START
CHKEND   DS    0H
         LH    R4,END                     LOAD LENGTH OF START OPERAND
         LTR   R4,R4                      WAS THE OPERAND SPECIFIED
         BZ    NOUSE                      IF NOT RET CODE 0
         L     R5,ECOLN
         LH    R4,ECOLN+4                 LOAD LENGTH OF START OPERAND
         S     R4,F1                      ADJUST FOR EX
         EX    R4,PACKIT                  PACKIT
         CVB   R2,PKWRK
         CR    R2,R10                     CHECK FOR FOR HIGH OR SAME
         BH    NOUSE                      IF HIGH THEN DONT USE
         LR    R10,R2                     IF SAME OR LOW MOVE OVER
NOUSE    DS    0H
         LR    R2,R10                     THEN MOVE BACK
         L     R4,STRLEN
         S     R4,F1                      SUB FOR EXECUTE
CHKBAK   DS    0H                         CHECK FOR FWD OR BACK SEARCH
         TM    WAY+1,X'02'                ARE WE GOING BACKWARDS
         BO    DOBACK                     YES THEN GO DO FROM THE REAR
         LR    R5,R1                      POINT TO STARTING ADDRESS
         LR    R11,R1                     SAVE OFF R1
         AR    R5,R2                      R5 = END SEARCH ADDRESS
FWDLOOP  CR    R1,R5                      ARE WE DONE ALREADY
         BH    RET0                       YES SO RET 0 (NO FINDIE)
         EX    R4,COMPINST                NO SO DO THE COMPARE
         BE    GOTIT                      DID WE FIND IT
         A     R1,F1                      BUMPIT
         B     FWDLOOP                    LOOP
******   THE FOLLOW ARE IN USE
*        R1 = STARTING ADDRESS OF SEARCH
*        R2 = LENGTH OF SEARCH
*        R4 = LENGTH OF SEARCH STRING
*        R8 = STARTING ADDRESS OF VARABLE STRING
**************************
DOBACK   DS    0H
         LR    R5,R6                      POINT TO STARTING ADDRESS
         AR    R5,R2                      R5 = END SEARCH ADDRESS
COMPBAK  CR    R5,R1 ARE WE DONE
         BL    RET0                       YES SO RET 0 (NO FIND)
         EX    R4,COMPBACK                NO SO DO THE COMPARE
         BE    GOTITB                     DID WE FIND IT
         S     R5,F1                      BUMPIT
         B     COMPBAK                    LOOP BACK
GOTIT    DS    0H
         SR    R1,R6                      SUB IT VAR ST FROM FOUND
         LR    R11,R1                     COL NUMBER
         LA    R11,1(R11)                 BUMP FOR ALIGNMENT
         B     EOJ                        WE ARE DONE
GOTITB   SR    R5,R6                      SUBTRACT VAR ST FROM FOUND
         LR    R11,R5                     COL NUMBER
         LA    R11,1(R11)                 BUMP FOR ALIGNMENT
         B     EOJ                        WE ARE DONE
*---------------------------------------------------------------------*
*                   END OF JOB ROUTINE                                *
*---------------------------------------------------------------------*
RET0     DS    0H
         SR    R11,R11                    ZERO R11
         B     EOJ
*---------------------------------------------------------------------*
EOJ      DS    0H
         BAL   R10,FREE                   RELEASE PARSE ROUTINE WORK
*                                         AREA
RET      DS    0H
         LR    R15,R11                    SET RETURN CODE
         L     R13,SAVE+4
         RETURN (14,12),RC=(15)
         EJECT
*---------------------------------------------------------------------*
*                   ERROR ROUTINES                                    *
*---------------------------------------------------------------------*
PARSERR  DS    0H
         LA    R11,4                     SET RETURN CODE TO 4
         B     RET
*---------------------------------------------------------------------*
*                   PERFORMED ROUTINES                                *
*---------------------------------------------------------------------*
FREE     DS    0H
         IKJRLSA ANSADDR                  RELEASE PARSE ROUTINE WORK
*                                         AREA
         BR    R10
*---------------------------------------------------------------------*
*                   EXECUTED INSTRUCTIONS                             *
*---------------------------------------------------------------------*
MOVEVAR  MVC   VARABLE(0),0(R6)
COMPINST CLC   0(0,R1),0(R8)
COMPBACK CLC   0(0,R5),0(R8)
PACKIT   PACK  PKWRK,0(0,R5)
         EJECT
*****    PROGRAM CONSTANTS
SAVE     DS    18F
INDXADDR DC    X'FF000000'
ENDLIST  DC    X'FF000000'
ISPLADDR DS    F
LOCIADDR DS    F
SAVEADDR DS    F
RETCODE  DS    F
SRCHLNTH DC    F'0'
ANSADDR  DS    A
PARSELST DS    7A
ADDRPCL  DC    A(PCLMAIN)
ECB      DS    F
F0       DC    F'0'
F1       DC    F'1'
F4       DC    F'4'
F5       DC    F'5'
F6       DC    F'6'
F7       DC    F'7'
F8       DC    F'8'
F11      DC    F'11'
F12      DC    F'12'
F16      DC    F'16'
F20      DC    F'20'
F44      DC    F'44'
F4096    DC    F'4096'
BLANK    EQU   C' '
BLANKS   DC    C'        '
         EJECT
*****    PROGRAM VARIABLES
VARABLE  DC    CL8' '
VARPNTR  DC    A(VARABLE)
VARLEN   DC    F'0'
STRLEN   DC    F'0'
VALLEN   DC    F'0'
VALPNTR  DS    A
VALUE    DC    CL14'THIS IS A TEST'
TOKEN    DC    F'0'
ECODE    DC    A(TSVERETR)
DSNAME   DC    CL44' '
VOLUME   DC    CL6' '
MEMBER   DC    CL8' '
LASTACT  DC    CL11' '
USER     DC    C'      .'
ERROCD   DC    F'0'
SRCHNAME DS    0CL44
         DC    CL44' '
         DS    0D
PKWRK    DC    PL8'00'
         EJECT
PCLMAIN  IKJPARM  DSECT=PDL
VARNAM   IKJPOSIT USERID,DEFAULT='WLINE'
CHRSTR   IKJPOSIT QSTRING
START    IKJKEYWD
         IKJNAME  'START',SUBFLD=SCSUB,                                +
               ALIAS=('S','ST','STA','STAR')
END      IKJKEYWD
         IKJNAME  'END',SUBFLD=ECOL,                                   +
               ALIAS=('E','EN','END')
WAY      IKJKEYWD DEFAULT='FWD'
         IKJNAME  'FWD'
         IKJNAME  'BACK'
SCSUB    IKJSUBF
SCOLN    IKJIDENT 'STARTING COLL',ASIS,MAXLNTH=3,                      +
               FIRST=NUMERIC,OTHER=NUMERIC,DEFAULT='0'
ECOL     IKJSUBF
ECOLN    IKJIDENT 'ENDING COLL',ASIS,MAXLNTH=3,                        +
               FIRST=NUMERIC,OTHER=NUMERIC
         IKJENDP
         EJECT
         IKJTSVT
         EJECT
         IKJCPPL
         EJECT
         IKJPPL
         EJECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
