         TITLE 'VPS COMMAND INTERFACE DRIVER MODULE - VERSION 1.1'
*-------------------------------------------------------------------*
* NAME:  VPSTBL                                                     *
*                                                                   *
* FUNCTION:    VPSTBL IS DESIGNED TO SIMPLIFY THE INTERFACE FOR     *
*              THE OPERATOR TO THE LEVI, RAY AND SHOUP, INC.        *
*              SUPPLIED TSO COMMAND PROCESSOR FOR CONTROLLING       *
*              VPS PRINTER OPERATIONS.                              *
*                                                                   *
*              SINCE THERE ARE MORE THAN ONE VPS STARTED TASK       *
*              THE OPERATOR NEEDS TO KNOW WHICH STARTED TASK        *
*              OWNS A PARTICULAR PRINTER IN ORDER TO DO INQUIRIES   *
*              ETC. ABOUT IT.   THIS DIALOG WILL SIMPLIFY THIS      *
*              BY NOT REQUIRING THE OPERATOR TO KNOW THIS AND WIL   *
*              DO IT FOR THEM.                                      *
*                                                                   *
*                                                                   *
* BASIC LOGIC:                                                      *
*              THIS MODULE WILL OPEN AND READ THE VPS START LIST    *
*              MEMBERS USING DD'S LIST1, LIST2 AND LIST3.           *
*                                                                   *
*              IT WILL BUILD AN ISPF TABLE (VPSTABLE) CONTAINING    *
*              AN ENTRY FOR EACH TERMINAL IN THE VPS START LIST     *
*              AND NOTING THE STARTED TASK WHICH OWNS IT BASED      *
*              UPON WHICH START LIST IT CAME FROM.                  *
*                                                                   *
*              NEXT PANEL 'VPSCMD1' IS DISPLAYED OFFERING THE       *
*              USER TWO OPTIONS:                                    *
*                                                                   *
*                               1 - DISPLAY THE TABLE FOR SELECTION *
*                               2 - SELECT A SPECIFIC TERMINAL      *
*                                                                   *
*                                                                   *
*              OPTION 1 PROCESSING:                                 *
*                                                                   *
*              A. ISSUE TBDISPL WITH PANEL 'VPSCMDT1'               *
*              B. IF COMMAND LINE CONTAINS SOMETHING CHECK IT       *
*                 FOR L=TERMINAL OR S=TERMINAL                      *
*                 1. IF L=TERMINAL THEN LOCATE THE TERMINAL IN      *
*                    THE TABLE AND POSITION THE TABLE DISPLAY       *
*                    AT THAT LINE.                                  *
*                 2. IF S=TERMINAL THEN LOCATE THE TERMINAL IN      *
*                    THE TABLE AND GO INVOKE THE APPROPRIATE        *
*                    VP41CTLX PROGRAM PASSING THE TERMINAL ID       *
*                    AS THE PARM.                                   *
*              C. IF THE COMMAND LINE DOES NOT CONTAIN ANYTHING     *
*                 THEN CHECK TO DETERMINE IF ANY PRINTER HAS BEEN   *
*                 SELECTED.  IF SO THEN GO INVOKE THE APPROPRIATE   *
*                 VP41CTLX PROGRAM PASSING THE TERMINAL ID AS THE   *
*                 PARM.                                             *
*                                                                   *
*              OPTION 2 PROCESSING:                                 *
*                                                                   *
*              A. VERIFY THAT THE SPECIFIED PRINTER IS IN THE       *
*                 TABLE AND THEN GO INVOKE THE APPROPRIATE          *
*                 VP41CTLX PROGRAM PASSING THE TERMINAL NAME        *
*                 AS THE PARM.                                      *
*                                                                   *
*                                                                   *
* REGISTER CONVENTIONS:                                             *
*                                                                   *
*              R9  - BALR FOR DATE/TIME ROUTINE                     *
*              R11 - TABLE DISPLAY RETURN CODE                      *
*              R12 - BASE REGISTER                                  *
*              R13 - SAVE AREA CHAINING                             *
*              R14 - BALR REGISTER                                  *
*              R15 - BALR REGISTER                                  *
*                                                                   *
*                                                                   *
* DEPENDENCIES:                                                     *
*              1. THE VPS START LISTS MUST BE ALLOCATED BEFORE      *
*                 THIS PROGRAM IS CALLED.                           *
*                 A. LIST1 MUST BE ALLOCATED TO THE START LIST      *
*                    OWNED BY THE VPS1 STARTED TASK.                *
*                 B. LIST2 MUST BE ALLOCATED TO THE START LIST      *
*                    OWNED BY THE VPS2 STARTED TASK.                *
*                 C. LIST3 MUST BE ALLOCATED TO THE START LIST      *
*                    OWNED BY THE VPS3 STARTED TASK.                *
*              2. THE VP41CTL MODULE MUST BE UPDATED TO ACCEPT      *
*                 A PARM CONTAINING THE TERMINAL ID TO BE           *
*                 PROCESSED INITIALLY.                              *
*           ---AND---                                               *
*              3. THE VP41CTL MODULE MUST BE MODIFIED AND RENAMED   *
*                 ONCE FOR EACH VPS STARTED TASK TO CONTAIN THE     *
*                 CORRECT APPLID.                                   *
*                 WHERE VP41CTL1 IS FOR ADDRESS SPACE 1             *
*                 WHERE VP41CTL2 IS FOR ADDRESS SPACE 2             *
*                 WHERE VP41CTL3 IS FOR ADDRESS SPACE 3             *
*              4. THE ISPF PROGRAM SHOWSPF MUST BE AVAILABLE AS IT  *
*                 IS INVOKED TO ESTABLISH THE ISPF VARIABLE CENTER  *
*                 WHICH IDENTIFIES WHICH CENTER THE DIALOG IS       *
*                 EXECUTING ON.                                     *
*              5. ISPF MESSAGE ROCM010 MUST BE AVAILABLE WITH ISPF  *
*                 VARIABLES SHORT AND LONG.                         *
*              6. THE ISPF ASSEMBLER MACROS FROM THE GUIDE ISPF MODS*
*                 TAPE MUST BE AVAILABLE AT ASSEMBLY TIME.          *
*                                                                   *
*                                                                   *
* SAMPLE INVOKATION:                                                *
*                                                                   *
*              PROC 0                                               *
*              CONTROL NOMSG                                        *
*              FREE F(LIST1,LIST2,LIST3)                            *
*              CONTROL MSG                                          *
*              ALLOC F(LIST1) DS('SYS1.VPSLIB(VPSACT01)') SHR       *
*              ALLOC F(LIST2) DS('SYS1.VPSLIB(VPSACT01)') SHR       *
*              ALLOC F(LIST3) DS('SYS1.VPSLIB(VPSACT01)') SHR       *
*              ISPEXEC SELECT PGM(VPSTBL)                           *
*                                                                   *
* MACROS USED:                                                      *
*              PRIVATE MACROS                                       *
*              $EPILOG  $PROLOG  $REGS    $STCK     BITSW           *
*              DISPLAY  IFON     ISPF     SELECT    SETMSG          *
*              SETOF    SETON    TBADD    TBCREATE  TBDISPL         *
*              TBEND    TBGET    TBPUT    TBSCAN    TBSORT          *
*              TBTOP    TESTOPEN VDEFINE                            *
*                                                                   *
*              SYSTEM MACROS                                        *
*              CALL     CLOSE    DCB      DELETE    FREEMAIN        *
*              GET      GETMAIN  IHBINNRA IHBOPLST  IHB01           *
*              LOAD     OPEN                                        *
*                                                                   *
* RETURN CODES: 0 - NORMAL                                          *
*               4 - LIST1 DD IS MISSING                             *
*               8 - TABLE CREATE ERROR                              *
*                                                                   *
*-------------------------------------------------------------------*
* AUTHOR:      LIONEL DYCK                                          *
*              ROCKWELL INTERNATIONAL                               *
*              PO BOX 2515                                          *
*              2201 SEAL BEACH BLVD.                                *
*              SEAL BEACH, CALIF  90740                             *
*              MAIL CODE 110-SH28                                   *
*              PHONE (213) 594-1125                                 *
*              COMNET 374-1125                                      *
*-------------------------------------------------------------------*
* CHANGES:                                                          *
*        11/04/85 - CHANGE @P TO TSOEXEC....                        *
*                                                                   *
*-------------------------------------------------------------------*
         EJECT
*
**       ESTABLISH BASE REGISTER, SAVE AREA AND REGISTER EQUATES
*
VPSTBL   $PROLOG R12
         EJECT
*
**       LOAD ISPLINK AND SAVE THE ADDRESS AT LABEL ISPLINK
*
         ISPF  LOAD
         EJECT
*
**       CREATE THE ISPF TABLE
*
CREATE   DS    0H
         TBCREATE TBLN,NAMES=TBLNAMES,WRITE='NOWRITE'
         LTR   R15,R15          CREATE OK
         BZ    START            YES - GO DO OUR THING
         TBEND TBLN             NO - TRY TO CLOSE IT
         LTR   R15,R15          CLOSE OF
         BZ    CREATE           YES - IT MUST HAVE ALREADY BEEN OPEN
         B     EXIT8            NO - EXIT AND TELL SOMEONE
         EJECT
START    DS    0H
*
**       ESTABLISH ISPF VARIABLE CONTAINING THE EXECUTING CENTER
*
         SELECT ,'PGM(SHOWSPF) PARM(CENTER,CENTER)'
         EJECT
*
**       DEFINE THE ISPF VARIABLES WE WILL USE
*
         VDEFINE '(NODE,STC,VSEL,VPSNODE)',DATA,CHAR,8,'(COPY)'
         EJECT
         VDEFINE '(ACTION)',ACTION,CHAR,40
         EJECT
         VDEFINE '(ZCMD)',ZCMD,CHAR,40,'(COPY)'
         EJECT
         VDEFINE '(ZENVIR)',ZENVIR,CHAR,40,'(COPY)'
         EJECT
         VDEFINE '(SHORT)',SHORT,CHAR,20
         EJECT
         VDEFINE '(LONG)',LONG,CHAR,70
         EJECT
*
**       OPEN THE VPS START LIST FILES 1 THRU 3
*
         OPEN  (LIST1,,LIST2,,LIST3)
         SPACE 2
         TESTOPEN LIST1,EXIT4   LIST1 OPEN ???
         SPACE 2
         MVC   STC,=CL8'VPS1'   INITIALIZE STC
RD1      GET   LIST1            READ LIST1
         MVC   NODE,1(R1)       SET NODE INTO TABLE
         TBADD TBLN             AND ADD IT
         B     RD1              KEEP READING
EOFL1    DS    0H
         CLOSE (LIST1,FREE)     CLOSE AND FREE LIST1
         EJECT
         TESTOPEN LIST2,START2  LIST2 OPEN ??
         MVC   STC,=CL8'VPS2'   SET STC FOR VPS2
RD2      GET   LIST2            READ LIST2
         MVC   NODE,1(R1)       SET NODE INTO TABLE
         TBADD TBLN             AND ADD IT
         B     RD2              KEEP READING LIST2
EOFL2    DS    0H
         CLOSE (LIST2,FREE)     CLOSE AND FREE LIST2
         EJECT
         TESTOPEN LIST3,START2  LIST3 OPEN ??
         MVC   STC,=CL8'VPS3'   SET STC FOR VPS3
RD3      GET   LIST3            READ LIST3
         MVC   NODE,1(R1)       SET NODE IN TABLE
         TBADD TBLN             AND ADD IT
         B     RD3              KEEP READING LIST3
EOFL3    DS    0H
         CLOSE (LIST3,FREE)     CLOSE AND FREE LIST3
         EJECT
START2   DS    0H
*
**       CHECK IF VERSION 2 OR BEYOND
*
         CLI   ZENVIR,C' '      IF ZENVIR BLANK THEN VERSION 1 OR LESS
         BE    NOTV2            YES - SKIP TBSORT
         SPACE 1
*
**       ISSUE TBSORT TO SORT TABLE BY TERMINAL NODE NAME
*
         TBSORT TBLN,FIELDS='(NODE C,A)'
         SPACE 2
NOTV2    DS    0H
*
**       RESET TABLE POINTER TO THE TOP
*
         TBTOP TBLN             POINT AT TOP OF TABLE
         EJECT
DISP     DS    0H
*
**       DISPLAY THE PRIMARY SELECTION PANEL
*
         SETOF OPT1             TURN OFF OPTION 1 SWITCH
         MVC   ZCMD,BLANKS      CLEAR ZCMD
         SPACE 2
         DISPLAY PANEL='VPSCMD1'  DISPLAY THE OPTIONS PANEL
         LTR   R15,R15          RETURN CODE 0
         BNZ   EXIT             NO - MUST BE END/RETURN
         EJECT
         CLI   ZCMD,C'1'        OPTION 1 ?
         BNE   PROCOPT2         NO - GO PROCESS OPTION 2
         SPACE 2
         SETON OPT1             SET OPTION 1 SWITCH
         SPACE 2
         SR    R11,R11          ZERO REGISTER 11
DISP1    DS    0H
         MVC   VSEL,BLANKS      CLEAR SELECTION VARIABLE
         MVC   ZCMD,BLANKS      CLEAR ZCMD TO BLANKS
         LTR   R11,R11          TEST R11
         BZ    DISP1T           IF ZERO THE DISPLAY WITH PANEL NAME
         TBDISPL TBLN           ELSE TBDISPL WITHOUT PANEL
         B     DISP1RC          GO CHECK RETURN CODE FROM TBDISPL
DISP1T   DS    0H
         TBDISPL TBLN,PANEL='VPSCMDT1'
DISP1RC  DS    0H
         CH    R15,=H'04'       RETURN GREATER THAN 4
         BH    DISP             YES - GOTO OPTION DISPLAY
         LR    R11,R15          SAVE RETURN CODE
         SPACE 2
         CLC   ZCMD,BLANKS      TEST ZCMD FOR COMMAND
         BE    CKVSEL           NONE - GO CHECK FOR SELECTION
         OC    ZCMD,BLANKS      INSURE UPPER CASE COMMAND
         CLC   =C'S=',ZCMD      SELECT SPECIFIC PRINTER ?
         BE    DOSCAN           YES - GO DO TABLE SCAN
         CLC   =C'L=',ZCMD      LOCATE PRINTER IN TABLE ?
         BNE   BADZCMD          NO - MUST BE INVALID COMMAND
         EJECT
DOSCAN   DS    0H
         MVC   NODE,ZCMD+2      MOVE NODE NAME FOR TBSCAN
         SPACE 2
DOSCAN2  DS    0H
         TBTOP TBLN             SET TABLE AT THE TOP
         SPACE 2
         TBSCAN TBLN,ARGLIST='(NODE)' AND SEE IF PRINTER IN TABLE
         LTR   R15,R15          TEST IF IT IS
         BNZ   NGSCAN           NO - TELL SOMEONE
         CLI   ZCMD,C'L'        IS IT LOCATE OPTION
         BE    DISP1            YES - GO DISPLAY TABLE ON SCREEN
         TBGET TBLN             NO - GET TABLE VALUES
         B     DOITNOW          AND GO DO OUR THING.
         EJECT
BADZCMD  DS    0H
*
**       SET UP MESSAGE FOR INVALID COMMAND OPTION
*
         MVC   SHORT,=CL20'INVALID OPTION'
         MVC   LONG(40),ZCMD
         MVC   LONG+41(20),=CL20'IS AN INVALID OPTION'
         SPACE 1
         SETMSG MSG='ROCM010'
         SPACE 1
         MVC   SHORT,BLANKS
         MVC   LONG,BLANKS
         IFON  OPT1,DISP1       IF OPTION 1 THEN GOTO TO TBDISPL
         B     DISP             ELSE GO DISPLAY OPTION PANEL
         EJECT
NGSCAN   DS    0H
         MVC   SHORT,=CL20'NOT FOUND'
         MVC   LONG(8),NODE
         MVC   LONG+10(20),=CL20'NOT FOUND IN TABLE'
         SPACE 1
         SETMSG MSG='ROCM010'
         SPACE 1
         MVC   SHORT,BLANKS
         MVC   LONG,BLANKS
         IFON  OPT1,DISP1       IF OPTION 1 THEN GOTO TO TBDISPL
         B     DISP             ELSE GO DISPLAY OPTION PANEL
         EJECT
CKVSEL   DS    0H
*
**       CHECK TO SEE IF A SPECIFIC PRINTER WAS SELECTED
*
         CLC   VSEL,BLANKS      PRINTER SELECTED ??
         BE    DISP1            NO = BACK TO TBDISPL
         B     DOITNOW          OK - GO DO IT
*
**       ONE OF THE NODE'S WAS SELECTED
*
         EJECT
DOITNOW  DS    0H
*
**       INVOKE THE VPS FULL-SCREEN COMMAND INTERFACE
*
         MVC   CMDNODE,NODE     SET NODE INTO VP41CTLX CALL
         MVC   CMDOPT(1),STC+3  MOVE STC CHARACTER TO X OF VP41CTLX
         SPACE 1
         SELECT 80,COMMAND      AND ISSUE THE CALL COMMAND
         SPACE 2
         BAL   R9,STCK          GO GET DATE/TIME
         MVC   ACTION(8),=C'SELECTED'
         MVC   ACTION+10(8),DATE
         MVC   ACTION+20(8),TIME
         SPACE 2
         TBPUT TBLN             UPDATE THE TABLE TO REFLECT THE ACTION
         SPACE 2
         IFON  OPT1,DISP1       IF UNDER OPTION 1 THEN GO TO TBDISPL
         B     DISP             ELSE BACK TO DISPLAY OPTION PANEL
         EJECT
PROCOPT2 DS    0H
*
**       PROCESSING OPTION 2
*
         MVC   ZCMD,BLANKS      BLANK ZCMD
         MVC   ZCMD(2),=C'S='   SET UP AS IF S=NODE
         MVC   ZCMD+2(8),VPSNODE
         MVC   NODE(8),VPSNODE
         B     DOSCAN2          AND GO SEE IF IN TABLE AND THEN DO IT
         EJECT
*
**       VARIOUS EXIT POINTS
*
EXIT     DS    0H               NORMAL EXIT
         TBEND TBLN
         MVC   SHORT,=CL20'FUNCTION ENDED'
         MVC   LONG(L'MSGEXIT0),MSGEXIT0
         SETMSG MSG='ROCM010'
         ISPF  DELETE
         $EPILOG 0
         EJECT
EXIT4    DS    0H               EXIT RETURN CODE 4
         TBEND TBLN
         MVC   SHORT,=CL20'ALLOC ERROR'
         MVC   LONG(L'MSGEXIT4),MSGEXIT4
         SETMSG MSG='ROCM010'
         ISPF  DELETE
         $EPILOG 4
         EJECT
EXIT8    DS    0H               EXIT RETURN CODE 8
         TBEND TBLN
         MVC   SHORT,=CL20'TABLE ERROR'
         MVC   LONG(L'MSGEXIT8),MSGEXIT8
         SETMSG MSG='ROCM010'
         ISPF  DELETE
         $EPILOG 8
         EJECT
*
**       GET DATE AND TIME
*
STCK     $STCK
         BR    R9               RETURN TO CALLER
         EJECT
*
**       LITERAL POOL
*
         LTORG
         EJECT
         BITSW OPT1
         SPACE 2
MSGEXIT0 DC    C'VPS COMMAND PROCESSING HAS ENDED SUCCESSFULLY'
MSGEXIT4 DC    C'VPS START LIST FOR VPS1 NOT AVAILABLE - CONTACT SYSTEMX
               S PROGRAMMING'
MSGEXIT8 DC    C'ISPF TABLE CREATE ERROR - CONTACT SYSTEMS PROGRAMMING'
         SPACE 2
TBLN     DC    CL8'VPSTABLE'
TBLNAMES DC    C'(NODE,STC,ACTION)'
*
DATA     DS    0H
NODE     DC    CL8' '
STC      DC    CL8' '
VSEL     DC    CL8' '
VPSNODE  DC    CL8' '
ACTION   DC    CL40' '
ZENVIR   DC    CL40' '
ZCMD     DC    CL40' '
SHORT    DC    CL20' '
LONG     DC    CL70' '
         SPACE 2
COMMAND  DC    CL80' '
         ORG   COMMAND
         DC    C'CMD(TSOEXEC CALL ''AVPS.LOAD(VP41CTL'
CMDOPT   DC    C' '
         DC    C')'''
         DC    C' '
         DC    C''''
CMDNODE  DC    CL8' '
         DC    C''')'
         ORG   ,
         SPACE 2
VLEN     DS    D
COPYDATA DS    0H
COPYV1   DS    CL40
COPYV2   DS    CL8
         SPACE 2
BLANKS   DC    CL80' '
         EJECT
         ISPF  PARMS
         EJECT
         PRINT NOGEN
LIST1    DCB   DSORG=PS,MACRF=GL,DDNAME=LIST1,EODAD=EOFL1
         SPACE 2
LIST2    DCB   DSORG=PS,MACRF=GL,DDNAME=LIST2,EODAD=EOFL2
         SPACE 2
LIST3    DCB   DSORG=PS,MACRF=GL,DDNAME=LIST3,EODAD=EOFL3
         SPACE 2
         END
