  TITLE  'SECURE - ACF2/RI TSO TERMINAL SECURE PROGRAM'
         SPACE 5
**********************************************************************
*                                                                    *
* SECURE -                                                           *
*     THIS PROGRAM ALLOWS A USER TO LEAVE HIS TERMINAL IN A SECURED  *
*  STATE WITHOUT LOGGING OFF.                                        *
*     1. THE ACF2 RULE/DIRECTORY CHAIN FOR THIS ADDRESS SPACE IS     *
*        DEQUED.                                                     *
*     2. THE TERMINAL IS CLEARED (IF 327X).                          *
*     3. THE USER IS PROMPTED FOR HIS PASSWORD.                      *
*     4. AN SVCA PARMLIST IS CREATED FOR A LOGONID/PASSWORD          *
*         VALIDATION CALL.                                           *
*     5. RSECURE IS CALLED TO PERFORM THE SVC CALL.                  *
*     6. IF THE PASSWORD IS CORRECT CONTROL IS RETURNED TO THE TMP.  *
*     7. IF THE PASSWORD IS WRONG AND THE MAXTRY COUNT HAS NOT BEEN  *
*        REACHED, THE USER IS REPROMPTED FOR HIS PASSWORD (ITEM 2).  *
*     8. IF THE PASSWORD IS WRONG AND THE MAXTRY COUNT HAS BEEN      *
*        REACHED, THE SESSION IS CANCELLED.                          *
*                                                                    *
*     WRITTEN: 04-16-84   R.A.SUNDELL                                *
*     UPDATE:  04-16-84   R.A.SUNDELL                                *
*                                                                    *
*   UPDATE HISTORY:                                                  *
*   04-16-84 - SECURE WAS RE-WRITTEN TO PREFORM ALL TASKS BUT THE    *
*              SVC CALL.                                             *
*                                                                    *
**********************************************************************
         EJECT
**********************************************************************
*                                                                    *
*   R E G I S T E R   D E F I N I T I O N S                          *
*                                                                    *
**********************************************************************
*
**********************************************************************
*                REGISTER USAGE                                      *
*   R0         SYSTEM                                                *
*   R1         SYSTEM                                                *
*   R2         CPPL                                                  *
*   R3         ACCVT                                                 *
*   R4         ACVALD                                                *
*   R5         ACUCB                                                 *
*   R6         MAX TRY COUNT (ACCPSWC)                               *
*   R7         TERMINAL TYPE                                         *
*   R8         LSD ADDRESS (FOR STACK)                               *
*   R9         UPT ADDRESS (FOR STACK)                               *
*   R10        ECT ADDRESS (FOR STACK)                               *
*   R11        RETURN CODE SAVE REGISTER                             *
*   R12        PRIMARY BASE REGISTER                                 *
*   R13        SAVE AREA + WORK AREA                                 *
*   R14        SYSTEM ROUTINE RETURN ADDRESS                         *
*   R15        BRANCH ADDRESS/RETURN CODE                            *
**********************************************************************
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         EJECT
**********************************************************************
*                                                                    *
*        H O U S E   K E E P I N G   A R E A                         *
*                                                                    *
**********************************************************************
*
SECURE   CSECT
         USING SECURE,12              ADDRESSABLITY OF CSECT
         USING WORK,R13               ADDRESSABLITY OF WORKING STORAGE
         USING CPPL,R2                CPPL ADDRESSABLITY
         USING ACCVT,R3               ACCVT ADDRESSABLITY
         USING ACUCB,R5               ACF2 USER CONTROL BLOCK
         SAVE  (14,12),,*             SAVE CALLERS REGISTERS
         LR    R12,R15                GET ENTRY POINT ADDRESS
         LR    R2,R1                  SAVE CPPL
         B     GETSTOR                BRANCH TO GETMAIN
         DC    CL8'SECURE  '          MODULE NAME
         DC    CL8'&SYSDATE'          DATE ASSEMBLED
         DC    CL5'&SYSTIME'          TIME ASSEMBLED
GETSTOR  CNOP  0,4                    ALIGNMENT
         GETMAIN RU,LV=WORKLEN        GET WORKING STORAGE
         ST    R1,8(,R13)             CHAIN
         ST    R13,4(R1)                    WORK
         LR    R13,R1                           AREAS
         L     R1,4(0,R13)            RESTORE REG 0 AND 1
         LM    R0,R1,20(R1)                 FROM CALLERS SAVE AREA
**** DISABLE ALL ATTENTION INTERRUPTS
         STAX  DEFER=YES
         B     GETACF2                BRANCH TO START
         EJECT
**********************************************************************
*                                                                    *
*    P R O G R A M  R E T U R N  A R E A                             *
*                 R E T U R N  C O D E  I N  R E G  1 5              *
*                                                                    *
**********************************************************************
RETURN   DS    0H
         STAX  DEFER=NO                ALLOW INTERRUPTS
         SR    R11,R11                 CLEAR REGISTER 11
         LR    R11,R15                 TEMPORARY STORE OF RC
         L     R13,4(,R13)             GET OLD SAVE AREA ADDRESS
         L     R1,8(,R13)              GET WORK AREA ADDRESS
         FREEMAIN RU,LV=WORKLEN,A=(1)  FREE STORAGE
         SR    R15,R15                 CLEAR REGISTER 15
         LR    R15,R11                 GET RETURN CODE
         RETURN (14,12),RC=(15)        RETURN TO CALLER
         EJECT
********************************************************************
*                                                                  *
*     ISSUE THE ACF2 MACROS TO GET THE APPROPRITE ACF2 CONTROL     *
*     BLOCKS.                                                      *
*                                                                  *
********************************************************************
*
GETACF2  EQU   *
         LA    R9,2323
         ACFINCVT 3,NONE=BADPASS,TYPE=INLINE,DISPL=SSCVT
         ACFGUCB 5,NONE=BADPASS,INLINE=YES,SYS=AOS2
         SR    R6,R6                   CLEAR R6
         IC    R6,ACCPSWC              MAXTRY COUNT
         EJECT
********************************************************************
*                                                                  *
*     DEQUE THE RULE/DIRECTORY CHAIN FROM USES ADDRESS SPACE       *
*                                                                  *
********************************************************************
*
         XC    ACTRM(ACTLEN),ACTRM     CLEAR PARM BLOCK
         MVI   ACTFCN,X'05'            INDICATE DEQUE
         MVI   ACTSFCN,ACTSRCHN        SET RECHAIN OPTION
         LA    R1,MESSAGE              MESSAGE AREA
         ST    R1,ACTMSG               STORE IN PARMLIST
         ACFSVC ACTRM,TYPE=A,NONE=CKTERM,CVT=HAVE
         LTR   R15,R15                 CHECK RETURN CODE
         BZ    CKTERM                  CHECK TERMINAL TYPE
         LA    R1,MESSAGE              ADDRESS OF MESSAGE
         SR    R0,R0                   CLEAR LENGTH REGISTER
         LH    R0,0(R1)                LENGTH OF MESSAGE
         LA    R1,4(R1)                ADDRESS OF TEXT
         TPUT  (1),(0)                 WRITE MESSAGE TO TERMINAL
         EJECT
********************************************************************
*                                                                  *
*     DETERMINE THE TERMINAL TYPE AND ISSUE THE CORRECT PROMPT     *
*                                                                  *
********************************************************************
*
CKTERM   EQU   *
*        DETERMINE TERMINAL TYPE BY ISSUING THE
*        THE GTSIZE SVC. THE TERMINAL IS A 327X
*        DISPLAY DEVICE IF A SCREEN SIZE IS RETURNED.
*        IF THE LINESIZE IS 120 BYTES IT IS ASSUMED
*        THAT THE TERMINAL IS A 2741.
*
         GTSIZE
         LTR   R15,R15                 DID WE GET A RESULT ?
         BC    7,RET16                 NO ... UNKNOWN DEVICE
         LTR   R0,R0                   IS IT A 3270 DISPLAY ?
         BC    7,C3270                 YES ... SET AS 327* ...
         LA    R15,120                 GET 2741 DEFAULT LINESIZE
         CR    R1,R15              IS IT A 2741 TYPE?
         BC    8,RET4                  YES ... USE 2741 X-OUT
         B     RET8                    NO ... MUST BE TWX TYPE
*
*        RET12 CANNOT BE DETERMINED WITHOUT ACCESS TO THE
*        TSB.  IT IS ONLY USED TO SET ASCII DISPLAY TYPE
*        AND WILL RESULT IN A TWX TYPE DEVICE WITH AN
*        ADDITIONAL SCREEN CLEAR STRING BEING XMITTED.
*
C3270    LA    R15,12                  CHECK IF 2260 DISPLAY ?
         CR    R0,R15                  CHECK SCREEN SIZE
         BC    2,RET0                  NO ... 327* TERMINAL
         LA    R15,40                  CHECK FOR 3277-1
         CR    R1,R15                  LINE LENGTH 40 ?
         BC    7,RET16                 NO ... ASSUME 2260
RET0     XR    R7,R7                   SET TO 327X DISPLAY
         B     PROMPT                  RETURN TO MAINLINE
RET4     LA    R7,4                    SET TO 2741 X-OUT
         B     PROMPT                  RETURN TO MAINLINE
RET8     LA    R7,8                    SET TO TWX X-OUT
         B     PROMPT                  RETURN TO MAINLINE
RET12    LA    R7,12                   ASCII CRT SCREEN CLEAR
         B     PROMPT                  RETURN TO MAINLINE
RET16    LA    R7,16                   UNKNOWN/2260 - USE TPUT
PROMPT   B     BRANCH1(R7)             BRANCH ACCORDING TO RETURN CDE
BRANCH1  B     PROMPT1                 RC=0  3270 PROMPT
         B     PROMPT2                 RC=4  2741 PROMPT
         B     PROMPT3                 RC=8  TWX PROMPT
         B     PROMPT3                 RC=12 ASCII PROMPT
         B     PROMPT4                 RC=16 UNDETERMINED PROMPT
         EJECT
********************************************************************
*                                                                  *
*     3270 TYPE PROMPT MESSAGE                                     *
*                                                                  *
********************************************************************
*
PROMPT1  EQU   *
         XC    STRING(LSTRNG),STRING   CLEAR BUFFER
         MVC   STRING(LSTRNG),STRING1  MOVE IN 3270 PROMPT
         MVC   USERID(8),ACULID        MOVE IN USERID
         TPUT  STRING,LSTRNG,FULLSCR,WAIT ISSUE PROMPT MESSAGE
         B     GETPASS                 GET PASWORD
         EJECT
********************************************************************
*                                                                  *
*     2741 TYPE PROMPT MESSAGE                                     *
*                                                                  *
********************************************************************
*
PROMPT2  EQU   *
         XC    STRINGXA(LSTRNGXA),STRINGXA   CLEAR BUFFER
         MVC   STRINGXA(LSTRNGXA),STRINGX    MOVE IN PROMPT MSG
         MVC   USERID(8),ACULID              MOVE IN USERID
         TPUT  STRINGXA,LSTRNGXA,EDIT,WAIT,HOLD  ISSUE PROMPT
         TPUT  STRING2,LSTRNG2,ASIS,WAIT,HOLD  2741 XOUT STRING
         B     GETPASS                 GET PASWORD
         EJECT
********************************************************************
*                                                                  *
*     TWX TYPE PROMPT MESSAGE/ ASCII TYPE PROMPT MESSAGE           *
*                                                                  *
********************************************************************
*
PROMPT3  EQU   *
         XC    STRINGXA(LSTRNGXA),STRINGXA   CLEAR BUFFER
         MVC   STRINGXA(LSTRNGXA),STRINGX    MOVE IN PROMPT MSG
         MVC   USERID(8),ACULID              MOVE IN USERID
         TPUT  STRINGXA,LSTRNGXA,EDIT,WAIT,HOLD  ISSUE PROMPT
         TPUT  STRING3,LSTRNG3,ASIS,WAIT,HOLD  TWX XOUT STRING
         B     GETPASS                 GET PASWORD
         EJECT
********************************************************************
*                                                                  *
*     UNKNOWN TYPE PROMPT MESSAGE                                  *
*                                                                  *
********************************************************************
*
PROMPT4  EQU   *
         XC    STRINGXA(LSTRNGXA),STRINGXA   CLEAR BUFFER
         MVC   STRINGXA(LSTRNGXA),STRINGX    MOVE IN PROMPT MSG
         MVC   USERID(8),ACULID              MOVE IN USERID
         TPUT  STRINGXA,LSTRNGXA,EDIT,WAIT,HOLD  ISSUE PROMPT
         B     GETPASS                   GET PASSWORD
         EJECT
********************************************************************
*                                                                  *
*     GET PASSWORD FROM USER                                       *
*                                                                  *
********************************************************************
*
GETPASS  EQU   *
         XC    PASSWORD(8),PASSWORD    CLEAR BUFFER
         LA    R1,PASSWORD             TGET BUFFER
         ICM   R1,8,=X'80'             INDICATE TGET/WAIT
         LA    R0,8                    BUFFER LENGTH
         TGET  (1),(0),R               GET PASSWORD
         OC    PASSWORD(8),BLANKS      SET TO UPPERCASE
         CLC   PASSWORD(8),BLANKS      WAS A BLANK LINE ENTERED
         BE    PROMPT                  YES, REDISPLAY
         EJECT
********************************************************************
*                                                                  *
*     SET ACF2 PARMETER (ACVALD) LIST FOR SVC CALL                 *
*                                                                  *
********************************************************************
*
SETPARM  EQU   *
         XC    ACVALD(ACVLEN),ACVALD   CLEAR PARM BLOCK
         MVI   ACVFCN,X'01'            INDICATE REQUEST TYPE
         MVI   ACVSFCN,ACVSVALD        VALIDATE LOGONID/PASSWORD
         MVI   ACVCNTL,ACVCNACT        DONOT UPDATE VIO COUNT
         LA    R1,MESSAGE              MESSAGE AREA
         ST    R1,ACVMSG               STORE IN PARM BLOCK
         MVC   ACVLID(8),ACULID        STORE LOGONID IN PARM BLOCK
         MVC   ACVPSWD(8),PASSWORD     STORE PASSWORD IN PARM BLOCK
         MVC   ACVJOBV(8),ACULID       LOGONID IS JOB NAME
         MVC   ACVAPROG(8),AUTHPROG    PROGRAM THAT GENERATED REQUEST
         LA    R1,LOGREC               ADDRESS OF LOGONID FIELD
         ST    R1,ACVRECB              STORE IN PARM BLOCK
         LA    R1,1024                 LENGTH OF LOGONID RECORD
         ST    R1,ACVRECL              STORE IN PARM BLOCK
         EJECT
********************************************************************
*                                                                  *
*     CALL RSECURE TO DO VALIDATION                                *
*                                                                  *
********************************************************************
*
RSECURE  EQU   *
         LA    R4,ACVALD               ADDRESS OF PARM BLOCK
         LINK  EP=RSECURE              LINK TO RSECURE
         LTR   R15,R15                 TEST RETURN CODE
         BZ    RETURN                  GOOD LOGONID/PASSWORD
         SPACE 1
         LA    R11,20                  NOACF2 RETURN CODE
         CR    R11,R15                 IS IT RC=20
         BE    BADPASS                 YES, CANCEL NOW
         LA    R1,MESSAGE              ADDRESS OF MESSAGE
         SR    R0,R0                   CLEAR LENGTH REGISTER
         LH    R0,0(R1)                LENGTH OF MESSAGE
         LA    R1,4(R1)                MESSAGE TEXT
         TPUT  (1),(0)                 DISPLAY MESSAGE TO USER
*** WAIT TWO SECONDS BEFORE CLEARING SCREEN
         STIMER WAIT,BINTVL=THREESEC   WAIT THREE SECONDS
         BCT   R6,PROMPT               REPROMPT FOR PASSWORD
         EJECT
********************************************************************
*                                                                  *
*     CANCEL SESSION WITH A SYSTEM 913 ABEND                       *
*                                                                  *
********************************************************************
*
BADPASS  EQU   *
*  BUILD STACK TO LOAD LOGON COMMAND TO FORCE LOGOFF
         GETMAIN R,LV=LSDLEN,SP=78     GET MAIN LSD STORAGE
         LR    R8,R1                   SAVE LSD ADDRESS
         USING LSD,R8                  ADDRESSABILITY
         XC    LSD(LSDLEN),LSD         CLEAR CONTROL BLOCK
         XC    STPBAREA(L'STPBAREA),STPBAREA CLEAR PARM LIST
         XC    IOPLAREA(L'IOPLAREA),IOPLAREA CLEAR PARM LIST
         MVC   COMMAND,CMD             MOVE IN LOGON COMMAND
         LA    R1,COMMAND              ADDRESS OF IN-STORAGE LIST
         LA    R0,L'CMD                LENGTH OF COMMAND
         ST    R1,LSDADATA             STORE ADDRESS IN PARM BLOCK
         STH   R0,LSDRCLEN             LENGTH OF LIST RECORD
         STH   R0,LSDTOTLN             TOTAL LENGTH OF LIST
         ST    R1,LSDANEXT             FORCE LOGON TO BE NEXT CMD
         L     R9,CPPLUPT              GET UPT ADDRESS
         L     R10,CPPLECT             GET ECT ADDRESS
         STACK PARM=STPBAREA,     DELETE ALL STACKED ENTRIES           X
               UPT=(R9),                                               X
               ECT=(R10),                                              X
               ECB=ECB,                                                X
               STORAGE=LSD,       ADD LOGON COMMAND                    X
               MF=(E,IOPLAREA)
         CLC   ACUTCMD(6),=C'SECURE'   WAS SECURE LAST COMMAND?
         BNE   ABND913                 NO, MUST BE UNDER ISPF
         STAX  DEFER=NO                NORMAL TMP/MUST CLEAR INTERRUPT
ABND913  EQU   *
         ESTAE 0                       CANCEL ANY ESTAE
         ABEND 2323,,STEP,SYSTEM       ABEND SYSTEM 913
         B     BADPASS
         EJECT
********************************************************************
*                                                                  *
*            CONSTANTS                                             *
*                                                                  *
********************************************************************
*
         DS    0D              SET ON BOUNDARY
THREESEC DC    F'300'          THREE SECONDS FOR STIMER
AUTHPROG DC    CL8'RSECURE '   PROGRAM TO ISSUE SVCA
CMD      DC    CL8'LOGON   '   COMMAND FOR STACK
BLANKS   DC    CL8'        '   BLANKS TO CONVERT PASSWORD
STRING1  DC    X'27'              ESC
         DC    X'F5'              ERASE WRITE
         DC    X'F3'              WCC
         DC    X'114040'               SBA
         DC    X'3C404000'             RA
         DC    X'1D'                   SF
         DC    X'E8'                   AB
STRINGX  DC    C'ACFRI010 ACF2, '
         DC    CL7' '                  USERID
         DC    C' CONFIRM PASSWORD - '
         DC    X'1D'                   SF
         DC    X'4C'                   AB
         DC    XL8'00'                 PASSWORD
         DC    X'1D'                   SF
         DC    X'E8'                   AB
         DC    X'114040'               SBA
         DC    X'05'                   PT
         DC    X'13'                   IC
STRING2  DC    8C'X'                   2741 XOUT STRING
         DC    8X'16'              BACKSPACE
         DC    8C'N'
         DC    8X'16'              BACKSPACE
         DC    8C'Z'
         DC    8X'16'              BACKSPACE
         DC    8C'M'
         DC    8X'16'              BACKSPACE
BYPASS   DC    X'24'              BYPASS
LSTRNG2  EQU   *-STRING2
STRING3  DC    8C'X'                   TWX  XOUT STRING
         DC    X'0D'              CARRIAGE RETURN
         DC    X'17171717'        IDLE
         DC    8C'H'
         DC    X'0D'              CARRIAGE RETURN
         DC    X'17171717'        IDLE
         DC    8C'I'
         DC    X'0D'              CARRIAGE RETURN
         DC    X'17171717'        IDLE
         DC    8C'O'
         DC    X'0D'              CARRIAGE RETURN
         DC    X'17171717'        IDLE
LSTRNG3  EQU   *-STRING3
         LTORG
         EJECT
********************************************************************
*                                                                  *
*          DUMMY  SECTIONS  USED  IN  THIS  PROGRAM                *
*                                                                  *
********************************************************************
*
*  SAVE AND WORK AREA DSECT    LINKED TO REG 13
WORK     DSECT
SAVEAREA DS    9D              REGISTER SAVE
ECB      DS    A               AREA FOR ECB
IOPLAREA DS    4A              IOPL FOR STACK
STPBAREA DS    20A             STPB FOR STACK
LOGREC   DS    CL1024          LOGONID RECORD SPACE
MESSAGE  DS    CL128           ACF2 SVC MESSAGE RETURN AREA
PASSWORD DS    CL8             PASSWORD FOR VALIDATION
STRING   DS    X'27'              ESC
         DS    X'F5'              ERASE WRITE
         DS    X'F3'              WCC
         DS    X'114040'               SBA
         DS    X'3C404000'             RA
         DS    X'1D'                   SF
         DS    X'E8'                   AB
STRINGXA DS    C'ACFRI010 ACF2, '
USERID   DS    CL7' '                  USERID
         DS    C' CONFIRM PASSWORD - '
LSTRNGXA EQU   *-STRINGXA
         DS    X'1D'                   SF
         DS    X'4C'                   AB
         DS    XL8'00'                 PASSWORD
         DS    X'1D'                   SF
         DS    X'E8'                   AB
         DS    X'114040'               SBA
         DS    X'05'                   PT
         DS    X'13'                   IC
LSTRNG   EQU   *-STRING
         ACVALD DSECT=NO
         ACTRM  DSECT=NO
ACTLEN   EQU   *-ACTRM         LENGTH OF ACTRM
WORKLEN  EQU   *-WORK          LENGTH OF WORK AREA
         SPACE 5
** ACF2 CVT
         ACCVT
         SPACE 5
** ACF2 USER CONTROL BLOCK
         ACUCB
         SPACE 5
** ACF2 ADDRESS SPACE VECTOR TABLE
         ACFASVT
         SPACE 5
** PREFIXED STORAGE AREA
         IHAPSA
         SPACE 5
** ADDRESS SPACE CONTROL BLOCK
         IHAASCB
         SPACE 5
** COMMAND PROCESSOR PARAMETER LIST
         IKJCPPL
         SPACE 5
** LIST SOURCE DISCRIPTOR
         IKJLSD
         DS    0D
COMMAND  DS    CL8'LOGON   '           STACK COMMAND
         DS    0D
LSDLEN   EQU   *-LSD                   LENGTH OF SP78 GETMAIN
         SPACE 5
         END   SECURE
