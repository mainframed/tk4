VSAMBR   CSECT
VSAMBR   AMODE 31
         SAVE  (14,12)
         BALR  12,0
         USING  *,12
         ST    13,SAVE1+4
         LA    15,SAVE1
         ST    15,8(13)
         LR    13,15
         ST    12,DDATA
VDEFGET  EQU   *
         CALL  ISPLINK,(VDEF,DSNDDNV,DSNDDNL,FORMATL,LENL,LIST),VL
         CALL  ISPLINK,(VGET,DSNDDNV),VL
         MODCB ACB=ACB1,DDNAME=(*,DDNAME)
OPEN     EQU   *
         OPEN  ACB1
         LTR   15,15
         BZ    SHOWCB
         SHOWCB ACB=ACB1,AREA=ERROR,LENGTH=4,FIELDS=ERROR
         LA    3,116
         C     3,ERROR
         BE    VERIFY
         LA    3,160
         C     3,ERROR
         BE    EMPTY
         B     STMSGOPN
VERIFY   EQU   *
         VERIFY RPL=RPLVER,ACTION=REFRESH
         LA    3,1
         X     3,OPNAGAIN
         ST    3,OPNAGAIN
         BNZ   CLOSE
STMSGOPN EQU   *
         CALL  ISPLINK,(SETMSG,MSGOPN,COND),VL
         B     CLOSE
SHOWCB   EQU   *
         SHOWCB ACB=ACB1,AREA=NLOGR,LENGTH=4,FIELDS=NLOGR
         L     3,NLOGR
         LTR   3,3
         BNZ   CALLBRIF
EMPTY    EQU   *
         CALL  ISPLINK,(SETMSG,MSGEMPTY,COND),VL
         B     CLOSE
CALLBRIF EQU   *
         MODCB RPL=RETRVE,ARG=LOWRBA,OPTCD=(ADR,DIR)
         POINT RPL=RETRVE
         MODCB RPL=RETRVE,OPTCD=(SEQ,FWD)
         CALL  ISPLINK,(BRIF,DSNAME,RECFM,RECL,RADDR,,DDATA),VL
CLOSE    EQU   *
         CLOSE ACB1
         L     3,OPNAGAIN
         LTR   3,3
         BNZ   OPEN
RTRN     EQU   *
         L     13,SAVE1+4
         RETURN (14,12),RC=0
*
***      READ ROUTINE
*
READRTN  EQU   *
         SAVE  (14,12)
         LM    4,7,0(1)
         L     12,0(7)
         ST    13,RSAVE+4
         LA    15,RSAVE
         ST    15,8(13)
         LR    13,15
         L     3,FIRSTENT         FIRST ENTRY ?
         LTR   3,3
         BNZ   NOTFIRST
         LA    3,1
         ST    3,FIRSTFLG
         ST    3,FIRSTENT
NOTFIRST EQU   *
         LA    8,AREA1
         ST    8,0(4)
         ST    6,@RRNO
         L     6,0(6)
         L     11,LASTRRNO
         CR    6,11
         BH    GET1
POINT    EQU   *
         MODCB RPL=RETRVE,ARG=LOWRBA,OPTCD=(ADR,DIR)
         POINT RPL=RETRVE
         MODCB RPL=RETRVE,OPTCD=(SEQ,FWD)
         LA    11,0               SET COUNTER=0
GET1     GET   RPL=RETRVE
         SHOWCB RPL=RETRVE,AREA=ALENGTH,LENGTH=4,FIELDS=(RECLEN)
         L     3,ALENGTH
         ST    3,0(5)
         LA    11,1(11)
         CR    11,6
         BNE   GET1
GOBACK   ST    6,LASTRRNO
         LA    10,0
         B     TOBRIF
EODAD1   EQU   *
         L     3,FIRSTFLG
         LTR   3,3
         BZ    SETRC8
         CALL  ISPLINK,(SETMSG,MSGEMPTY,COND),VL
SETRC8   EQU   *
         ST    11,LASTRRNO
         L     6,@RRNO
         ST    11,0(6)
         LA    10,8
         B     TOBRIF
TOBRIF   EQU   *
         LA    3,0
         ST    3,FIRSTFLG
         L     13,RSAVE+4
         L     14,12(13)
         LR    15,10
         LM    0,12,20(13)
         BR    14
         EJECT
*
**
***      VSAM CONTROL BLOCKS
**
*
ACB1     ACB   EXLST=EXLST1,MACRF=(ADR,SEQ,IN)
EXLST1   EXLST EODAD=(EODAD1,A)
RETRVE   RPL   ACB=ACB1,AREA=AREA1,AREALEN=4096,OPTCD=SEQ
RPLVER   RPL   ACB=ACB1,AREA=AREA1,AREALEN=4096,OPTCD=CNV
         EJECT
*
**       WORK AREAS AND CONSTANTS
*
         LTORG
SAVE1    DC    18F'0'
RSAVE    DC    18F'0'
*
VDEF     DC    CL8'VDEFINE'
VGET     DC    CL8'VGET'
DSNDDNV  DC    CL15'(DSVSAM DDVSAM)'
DSNDDNL  DS    0CL52
DSNAME   DC    CL44' '
DDNAME   DC    CL8' '
FORMATL  DS    0CL16
         DC    CL8'CHAR'
         DC    CL8'CHAR'
LENL     DS    0F
DSLEN    DC    F'44'
DDLEN    DC    F'8'
LIST     DC    CL8'LIST'
*
SETMSG   DC    CL8'SETMSG'
MSGOPN   DC    CL8'VSAM005'
MSGEMPTY DC    CL8'VSAM004'
COND     DC    CL8'COND'
*
BRIF     DC    CL8'BRIF'
RECFM    DC    CL2'V '
RECL     DC    F'32760'
RADDR    DC    AL4(READRTN)
DDATA    DC    F'0'
*
ALENGTH  DC    F'0'
RRNO     DC    F'0'
@RRNO    DC    F'0'
LASTRRNO DC    F'0'
LOWRBA   DC    F'0'
NLOGR    DC    F'0'
ERROR    DC    F'0'
OPNAGAIN DC    F'0'
FIRSTENT DC    F'0'
FIRSTFLG DC    F'0'
AREA1    DC    8192F'0'
         END   ,
