         MACRO                                            *LBD 11/84*
         VDS   &ID,&LEN                                   *LBD 11/84*
&ID      DC    C'(&ID)'                ISPF VAR NAME      *LBD 11/84*
V&ID     DC    CL&LEN' '               ISPF VAR DATA      *LBD 11/84*
L&ID     DC    A(L'V&ID)               ISPF VAR LEN       *LBD 11/84*
         MEND                                             *LBD 11/84*
         SPACE 2                                          *LBD 11/84*
         MACRO                                            *LBD 11/84*
&L       VDEF  &ID                                        *LBD 11/84*
         L     R15,ISPLINK             -> ISPLINK EPA     *LBD 11/84*
         CALL  (15),(VDEFINE,&ID,V&ID,CHAR,L&ID),VL       *LBD 11/84*
         EJECT                                            *LBD 11/84*
         MEND                                             *LBD 11/84*
ISPFLIST TITLE 'ISPF/PDF FLIST TABLE BUILD APPLICATION'
*---------------------------------------------------------------------*
*  ISPFLIST                                                           *
*                                                                     *
*  FUNCTION:  THIS PROGRAM IS AN ISPF APPLICATION WHICH WILL          *
*             BUILD AN ISPF TABLE OF THE NAME FLIST.                  *
*                                                                     *
*             THE DATASETS DISPLAYED IN THE TABLE MAY BE SELECTED     *
*             FOR ANY NUMBER OF PROCESSING OPTIONS.                   *
*                                                                     *
*  ENTRY OPTIONS:                                                     *
*        A                             ARCHIVE D/S ONLY               *
*        B                             ALL ONLINE AND MIG D/S         *
*        H                             HSM BCDS D/S ONLY              *
*        M                             MIGRATED D/S ONLY              *
*        O                             ONLINE D/S ONLY                *
*        V                             VTOC OPTION                    *
*                                                                     *
*        BS                            ALL ONLINE/MIG AND VTOC INFO   *
*        OS                            ALL ONLINE AND VTOC INFO       *
*                                                                     *
*                                                                     *
*  PRIMARY COMMANDS:                                                  *
*        ALLDA                         REBUILD TABLE WITH ALL D/S     *
*        ALLOC                         ALLOC A NEW DATASET            *
*        ARCHIVE                       REBUILD TABLE WITH ARCHIVE D/S *
*        BCDS                          REBUILD TABLE WITH BCDS D/S    *
*        CONFIRM        (DEFAULT)      CONFIRM DELETE REQUEST         *
*        INDEX=                        REBUILD TABLE USING NEW INDEX  *
*        FIND=                         POSITION CURSOR AT D/S         *
*        F=                            POSITION CURSOR AT D/S         *
*        L=                            REBUILD TABLE USING NEW INDEX  *
*        MIG                           REBUILD TABLE WITH MIG D/S     *
*        NOCONFIRM                     NO CONFIRM DELETE REQUEST      *
*        NOMIG                         REBUILD TABLE WITH ONLINE D/S  *
*        NOWAIT         (DEFAULT)      HSM COMMAND NOWAIT OPTION      *
*        REFRESH                       REBUILD TABLE FOR DISPLAY      *
*        SECURE                        TSO SECURE TERMINAL            *
*        BDTALL                        USE MVS/BDT TO      *LBD 05/85*
*                                      BDT ALL DATASETS.   *LBD 05/85*
*        WAIT                          HSM COMMAND WAIT OPTION        *
*                                                                     *
*  DATASET PROCESSING OPTIONS:                                        *
*        B                             BROWSE DATASET                 *
*        BDT   (ALIAS T)               TRANSMIT WITH MVS/BDT          *
*        C                             COMPRESS DATASET               *
*        CAT                           CATALOG DATASET    *LBD 11/84*
*        COPY                          COPY DATASET         *LBD 12/83*
*        D                             DEL  (DELETE/HDELETE/HBDELETE) *
*        DN                            SAME AS D WITH NOCONFIRM       *
*        E                             EDIT DATASET                   *
*        EMPTY                         EMPTY DATASET                  *
*        EXPAND                        EXPAND PDS          *LBD 02/84*
*        HB                            HSM BACKUP  (HBACKDS)          *
*        HM                            HSM MIGRATE (HMIG)             *
*        I                             DATA SET STATS     *LBD 11/84*
*        P                             PRINT DATASET (GENPRINT PANEL) *
*        PDS                           PDS ISPF DIALOG      *LBD 06/85*
*        PRINT                         PRINT DATASET (GENPRINT PANEL) *
*        R                             HSM RECOVER (HRECALL/HRECOVER) *
*        RELEASE   (REL)               RELEASE UNUSED SPACE *LBD 06/85*
*        RENAME                        RENAME                         *
*        STAT                          DATA SET STATISTICS  *LBD 12/83*
*        T      (ALIAS BDT)            TRANSMIT WITH MVS/BDT          *
*        U                             UNCATALOG DATASET              *
*        X                             REMOVE DATASET FROM TABLE      *
*        =                             REPEAT LAST COMMAND *LBD 03/85*
*                                                          *LBD 02/84*
*        ANYTHING ELSE IS ASSUMED TO BE A COMMAND          *LBD 02/84*
*        AND IS EXECUTED VIA A SELECT AS XXX DSN(MEM)      *LBD 02/84*
*                                                                     *
*                                                                     *
* THE MEMBER NAME MAY BE PUT IN THE LAST ACTION FIELD AND   *LBD 12/83*
* WILL BE USED FOR THE FOLLOWING SELECT OPTIONS:            *LBD 12/83*
*                                                           *LBD 12/83*
*        BROWSE                                             *LBD 12/83*
*        EDIT                                               *LBD 12/83*
*        PRINT                                              *LBD 12/83*
*        BDTALL                                             *LBD 05/85*
*        ANY 'UNKNOWN' COMMAND                              *LBD 02/84*
*                                                                     *
*                                                                     *
*                                                                     *
*  EXTERNAL REFERENCES:                                               *
*             MODULES:  ISPLINK CVAFSUB LOCINDEX                      *
*                                                                     *
*  MACROS USED BY SPECIFICATION AND BY INTERNAL USAGE:                *
*                                                                     *
*              $EPILOG  $PROLOG  $REGS    ALLOC    DYNSPACE FREE      *
*              RCPBTU   RCPDDCB  RCPDDN   RCPDDNRT RCPDINC            *
*              RCPDISP  RCPDSN   RCPDUMMY RCPFDDN  RCPNTU             *
*              RCPSPACE RCPSR2   RCPSUBL  RCPTYPE  RCPUNIT            *
*              RCPVCHAR CALL     CLOSE    DCB      DYNALLOC           *
*              FREEMAIN GET      GETMAIN  IEFZB4D0 IEFZB4D2           *
*              IHBINNRA IHBOPLST IHB01    OPEN                        *
*                                                                     *
*                                                                     *
*---------------------------------------------------------------------*
*  AUTHOR:    LIONEL DYCK                                             *
*             ROCKWELL INTERNATIONAL                                  *
*             2201 SEAL BEACH BLVD.                                   *
*             P.O. BOX 2515                                           *
*             SEAL BEACH, CALIFORNIA 90740                            *
*             MAIL CODE 110-SH28                                      *
*             PHONE (213) 594-1125                                    *
*---------------------------------------------------------------------*
*  CHANGE HISTORY:                                                    *
*                                                                     *
*        CORRECT TBDELETE PROBLEM                           *LBD 12/83*
*        ADDED MEMBER SUPPORT FOR BROWSE,EDIT,PRINT,TRANSFER*LBD 12/83*
*        ADDED COPY SELECT OPTION                           *LBD 12/83*
*        GENERAL CLEANUP FOR CLEANER DISPLAY                *LBD 02/84*
*        ALLOW VSAM DATA AND INDEX ENTRIES INTO TABLE       *LBD 03/84*
*        ADDED ALLOC OPTION                                 *LBD 04/84*
*        CORRECTED VOLSER FOR RENAME AND ALLOC              *LBD 04/84*
*        BLANK CLACT FIELD IN BCDS TABLE BUILD              *LBD 04/84*
*        ADDED CURRENT STATUS FLAG FOR ARCH,HSM AND NORM    *LBD 04/84*
*              THIS FLAG IS USED TO VERIFY CURRENT OPTION   *LBD 04/84*
*              IS VALID FOR SELECTED DATASET.               *LBD 04/84*
*        ADDED LOCATE PRIOR TO EACH DATASET SELECTION TO  *LBD 10/84*
*              VALIDATE VOLSER.                           *LBD 10/84*
*        ADDED VTOC DISPLAY OPTION                        *LBD 11/84*
*        ADDED I ALIAS FOR STAT OPTION                    *LBD 11/84*
*        ADDED CAT OPTION                                 *LBD 11/84*
*                                                                     *
*        ADDED SORT OF TABLE IF ISPF VERSION 2.            *LBD 05/85**
*              VALID SORT FIELDS ARE:                      *LBD 05/85**
*              DSN  -  DATA SET  NAME                      *LBD 05/85**
*              NAME -  DATA SET  NAME                      *LBD 05/85**
*              VOL  -  VOLSER                              *LBD 05/85**
*              USED -  USED SPACE IN TRKS                  *LBD 05/85**
*              SIZE -  SPACE IN TRKS                       *LBD 05/85**
*              DSORG - DATASET  ORGANIZATION               *LBD 05/85**
*              EXTENTS - NUMBER OF EXTENTS                 *LBD 05/85**
*              CDATE - CREATION DATE                       *LBD 05/85**
*              RDATE - LAST REF DATE                       *LBD 05/85**
*                                                          *LBD 05/85*
*        CHANGED T TO BE AN ALIAS OF BDT.                  *LBD 05/85*
*        CHANGED TRANSFER COMMAND TO BDTALL.               *LBD 05/85*
*                                                           *LBD 06/85*
*        ADDED VOLSER TO BROWSE AND EDIT CALL PARAMETERS.   *LBD 06/85*
*        ADDED PDS AS A SELECTION OPTION.                   *LBD 06/85*
*        ADDED RELEASE COMMAND CAPABILITY.                  *LBD 06/85*
*---------------------------------------------------------------------*
         EJECT
ISPFLIST $PROLOG R9,R10,R11,R12
         EJECT
         ALLOC DUMMY,DDNRET=DUMDDN     ALLOC DUMMY DDN FOR TABLE NAME
         SPACE 1
         MVC   TABLENAM,DUMDDN+2       RESET TABLE NAME
         MVC   DYNDDN,DUMDDN+2         SET DDNAME FOR FILES
         MVC   MODELDCB+40(8),DYNDDN   SET DDNAME FOR FILES
         MVC   HLISTDD,DYNDDN          FIX HLIST DDNAME
         FREE  DDN=OURDDN              NOW FREE THE DDNAME
         SPACE 2
         OI    FLAG1,FLCONF            INITIALIZE CONFIRM FLAG
         EJECT
CREATE   DS    0H
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(VDEFINE,ZPREFIX,VZPREFIX,CHAR,LZPREFIX),VL
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(VGET,ZPREFIX),VL
         EJECT
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(VDEFINE,DEBUG,VDEBUG,CHAR,LDEBUG),VL
         EJECT
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(VGET,DEBUG),VL
         EJECT
         CLI   VDEBUG,C'D'             DEBUG ON ?
         BE    NOCNTROL                YES - SKIP CONTROL
         SPACE 2
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(CONTROL,ERRORS,RETURN),VL
         EJECT
NOCNTROL DS    0H
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(VDEFINE,FLROWS,VFLROWS,CHAR,LFLROWS),VL
         EJECT
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(VDEFINE,FPDS,VFPDS,CHAR,LFPDS),VL
         EJECT
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(VDEFINE,NCLDSN,VNCLDSN,CHAR,LNCLDSN),VL
         EJECT
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(VDEFINE,IDSN,VIDSN,CHAR,LIDSN),VL
         EJECT
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(VDEFINE,EDSN,VEDSN,CHAR,LEDSN),VL
         EJECT
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(VDEFINE,DSN1,VDSN1,CHAR,LDSN1),VL
         EJECT
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(VDEFINE,DSLIST,VDSLIST,CHAR,LDSLIST),VL
         EJECT
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(VDEFINE,CLDSN,VCLDSN,CHAR,LCLDSN),VL
         EJECT
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(VDEFINE,CLVOL,VCLVOL,CHAR,LCLVOL),VL
         EJECT
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(VDEFINE,CLACT,VCLACT,CHAR,LCLACT),VL
         EJECT
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(VDEFINE,SELO,VSELO,CHAR,LSELO),VL
         EJECT
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(VDEFINE,FOPT,VFOPT,CHAR,LFOPT),VL
         EJECT
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(VDEFINE,FVOL,VFVOL,CHAR,LFVOL),VL
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(VGET,FVOL),VL
         EJECT
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(VDEFINE,FUNIT,VFUNIT,CHAR,LFUNIT),VL
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(VGET,FUNIT),VL
         OC    VFUNIT,BLANKS           UPPER CASE IT      *LBD 11/84*
         CLC   VFUNIT,BLANKS           ANYTHING ??        *LBD 11/84*
         BNE   HUNIT                   YES                *LBD 11/84*
         MVC   VFUNIT,=CL8'SYSALLDA'   NO - SET IT        *LBD 11/84*
HUNIT    DS    0H                                         *LBD 11/84*
         EJECT
         VDEF  CLDSORG                                    *LBD 11/84*
         VDEF  CLRECFM                                    *LBD 11/84*
         VDEF  CLLRECL                                    *LBD 11/84*
         VDEF  CLBLK                                      *LBD 11/84*
         VDEF  CLTRK                                      *LBD 11/84*
         VDEF  CLTRKU                                     *LBD 11/84*
         VDEF  CLCDATE                                    *LBD 11/84*
         VDEF  CLRDATE                                    *LBD 11/84*
         VDEF  CLEXT                                      *LBD 11/84*
         VDEF  FLTRKA                                     *LBD 11/84*
         VDEF  FLTRKU                                     *LBD 11/84*
         VDEF  ZENVIR                                      *LBD 05/85*
         L     R15,ISPLINK             -> ISPLINK EPA      *LBD 05/85*
         CALL  (15),(VGET,ZENVIR),VL                       *LBD 05/85*
*                                                          *LBD 05/85*
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(VGET,DSLIST),VL
*                                                          *LBD 05/85*
FIXPREFX DS    0H                                           *LBD 11/83*
         MVC   PREFIX,BLANKS                                *LBD 11/83*
         LA    R1,PREFIX                                    *LBD 11/83*
         LA    R2,VDSLIST                                   *LBD 11/83*
         MVC   DSNAME,BLANKS                                *LBD 04/84*
MDSLIST  MVC   0(1,R1),0(R2)                                *LBD 11/83*
         LA    R1,1(R1)                                     *LBD 11/83*
         LA    R2,1(R2)                                     *LBD 11/83*
         CLI   0(R2),C'.'              END OF PREFIX ?      *LBD 11/83*
         BE    EDSLIST                 YES                  *LBD 11/83*
         CLI   0(R2),C' '              END OF PREFIX ?      *LBD 11/83*
         BE    EDSLIST                 YES                  *LBD 11/83*
         B     MDSLIST                 NO - KEEP MOVING     *LBD 11/83*
EDSLIST  DS    0H                                           *LBD 11/83*
         TM    FLAG1,PASS1             1ST PASS             *LBD 11/83*
         BO    CREATE2                 NO - SKIP VGET       *LBD 11/83*
         EJECT
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(VGET,FOPT),VL
         OI    FLAG1,PASS1             SET PASS 1 FLAG ON   *LBD 11/83*
         EJECT
CREATE2  DS    0H                      REFRESH CREATE
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(TBCREATE,TABLENAM,,NAMES,NOWRITE,REPLACE),VL
         CH    R15,=H'04'
         BNH   TBCOK
         LR    R2,R15
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(SETMSG,MSG04),VL
         B     EXIT
         EJECT
TBCOK    DS    0H
         MVC   VCLACT,BLANKS           INIT AS BLANK        *LBD 04/84*
         MVC   VCLTRKU,BLANKS                             *LBD 11/84*
         MVC   VCLEXT,BLANKS                              *LBD 11/84*
         MVC   VCLACT,BLANKS                              *LBD 11/84*
         MVC   VCLRDATE,BLANKS                            *LBD 11/84*
         MVC   VCLCDATE,BLANKS                            *LBD 11/84*
         MVC   VCLTRK,BLANKS                              *LBD 11/84*
         MVC   VCLRECFM,BLANKS                            *LBD 11/84*
         MVC   VCLBLK,BLANKS                              *LBD 11/84*
         MVC   VCLLRECL,BLANKS                            *LBD 11/84*
         MVC   VCLDSORG,BLANKS                            *LBD 11/84*
         MVC   TABPANEL,DEFPANEL       SET TBDISPL NAME   *LBD 11/84*
         SETOF VTOCI                                      *LBD 11/84*
         ZAP   FLRCNT,=P'00'           RESET ROW COUNTER
         CLC   VFOPT,=C'BS'            ONLINE AND MIG AND VTOC ?
         BE    LISTCS                  YES - GOTO LISTC
         CLI   VFOPT,C'B'              ONLINE AND MIG ?
         BE    LISTC                   YES - GOTO LISTC
         CLI   VFOPT,C'M'              MIGRATED D/S ONLY ?
         BE    LISTC                   YES - GOTO LISTC
         CLC   VFOPT,=C'OS'            ONLINE ONLY AND VTOC ?
         BE    LISTCS                  YES - GOTO LISTC
         CLI   VFOPT,C'O'              ONLINE ONLY ?
         BE    LISTC                   YES - GOTO LISTC
         CLI   VFOPT,C'V'              VTOC OPTION ?      *LBD 11/84*
         BE    DOVTOC                  YES                *LBD 11/84*
         CLI   VFOPT,C'A'              ARCHIVE DATASET ?
         BE    ARCH                    YES - GO DO ARCHIVE
         CLI   VFOPT,C'H'              HSM BCDS DATASETS ?
         BE    DOHLIST                 YES - GO DO HLIST
         LA    R2,99
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(SETMSG,MSG16),VL
         B     EXIT                     NOW LEAVE          *LBD 08/85*
         EJECT
LISTCS   DS    0H
         SETON VTOCI                                      *LBD 11/84*
         MVC   TABPANEL,VTOCPANL       RESET PANEL NAME   *LBD 11/84*
LISTC    DS    0H
         SETON FLNORM,LOCFLG                                *LBD 04/84*
         SETOF FLHSM,FLARCH                                 *LBD 04/84*
         MVC   INDEX,BLANKS             RESET INDEX        *LBD 08/85*
         MVC   INDEX(44),VDSLIST
         MVC   VCLDSN,BLANKS                               *LBD 08/85*
         MVC   VCLVOL,BLANKS                               *LBD 08/85*
         LOAD  EP=LOCINDEX                                 *LBD 08/85*
         ST    R0,LOCADDR                                  *LBD 08/85*
         GETMAIN R,LV=4096                                 *LBD 08/85*
         ST    R1,LOCDATA               INTO PARM LIST     *LBD 08/85*
         ST    R1,LOCDATAS              SAVE IT            *LBD 08/85*
         LR    R0,R1              -> O/P ADDR              *LBD 11/85*
         L     R1,=A(4096)        LOAD LEN                 *LBD 11/85*
         SR    R14,R14            ZERO I/P ADDR            *LBD 11/85*
         SR    R15,R14            SET TO NULL FOR FILL VALUELBD 11/85*
         MVCL  R0,R14             AND SET TO NULLS         *LBD 11/85*
         OI    LOCRC,X'80'              SET VL SWITCH      *LBD 08/85*
         XC    RC,RC              CLEAR RETURN WORD        *LBD 11/85*
LOCIT    DS    0H                                          *LBD 08/85*
         LA    R1,LOCPARMS                                 *LBD 08/85*
         L     R15,LOCADDR              -> LOCINDEX        *LBD 08/85*
         BALR  R14,R15                                     *LBD 08/85*
         CH    R15,=H'16'               BAD RC ?           *LBD 08/85*
         BL    ADDIT                    NO - OK            *LBD 08/85*
         B     LOCEND                   YES - END OF SCAN  *LBD 08/85*
         EJECT
ARCH     DS    0H
         SETOF FLHSM,FLNORM,LOCFLG                          *LBD 10/85*
         SETON FLARCH                                       *LBD 04/84*
         MVC   ARCHMEMN,PREFIX
         ALLOC DDN=OURDDN,DSN=ARCHDSN,DISP=SHR,MEMBER=ARCHMEM,        XX
               ERROR=S99FAIL                              *LBD 11/84*
         B     OPENFLIN
         EJECT
READ     DS    0H                                          *LBD 08/85*
         IFON  FLARCH,DOARCH            ARCHIVE ?          *LBD 08/85*
         IFON  LOCFLG,LOCIT             NORM - USE LOCINDEX*LBD 08/85*
         B     RHLIST                   ELSE READ HLIST    *LBD 08/85*
         SPACE 2                                           *LBD 08/85*
LOCVT    DS    0H                                          *LBD 08/85*
         L     R15,ISPLINK                                 *LBD 08/85*
         CALL  (15),(TBTOP,TABLENAM),VL                    *LBD 08/85*
         SPACE 2                                           *LBD 08/85*
LOCV     DS    0H                                          *LBD 08/85*
         CLC   =C'MIGRAT',VCLVOL  MIGRATED ?               *LBD 02/86*
         BE    LOCSADD            YES                      *LBD 02/86*
         MVC   VTOCP1V,VCLVOL                             *LBD 11/84*
         MVC   VTOCP1D,VCLDSN                             *LBD 11/84*
         MVI   VTOCOPT,X'04'           SET OPTION         *LBD 11/84*
         L     R15,=V(CVAFSUB)                            *LBD 11/84*
         LA    R1,VTOCPARM                                *LBD 11/84*
         BALR  R14,R15                                    *LBD 11/84*
         LTR   R15,R15                                    *LBD 11/84*
         BZ    VADDIT                                     *LBD 11/84*
         MVC   VCLACT,=CL10'*ERROR*'                      *LBD 11/84*
LOCSADD  DS    0H                                          *LBD 08/85*
         L     R15,ISPLINK              -> ISPLINK EPA     *LBD 08/85*
         CALL  (15),(TBPUT,TABLENAM),VL                    *LBD 08/85*
         L     R15,ISPLINK              -> ISPLINK EPA     *LBD 08/85*
         CALL  (15),(TBSKIP,TABLENAM),VL                   *LBD 08/85*
         LTR   R15,R15                                     *LBD 08/85*
         BZ    LOCV                     OK                 *LBD 08/85*
         B     EOFX                                        *LBD 08/85*
ADDIT    EQU   *                   ADD ENTRY TO TABLE
         CLI   VFOPT,C'B'
         BE    DOADD
         CLI   VFOPT,C'M'          MIGRATED D/S ONLY ?
         BE    DOMIG               YES
         CLI   VFOPT,C'O'          ONLINE D/S ONLY ?
         BE    DOON                YES
         B     DOADD
DOMIG    DS    0H
         CLC   VCLVOL(6),=C'MIGRAT'  MIGRATED D/S ?
         BE    DOADD               YES - ADD IT
         B     READ                NO  - SKIP IT
DOON     DS    0H
         CLC   VCLVOL(6),=C'MIGRAT'   MIGRATED D/S
         BE    READ                YES - SKIP IT
         EJECT                                            *LBD 11/84*
DOADD    DS    0H
         CLC   VCLVOL(6),=C'MIGRAT'    MIGRATED ?         *LBD 11/84*
         BE    DOADDX                  YES - SKIP VTOC    *LBD 11/84*
DOADDX   DS    0H                                         *LBD 11/84*
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(TBADD,TABLENAM),VL
         AP    FLRCNT,=P'01'           UPDATE ROW COUNTER BY 1
         MVC   VCLACT,BLANKS           INIT AS BLANK        *LBD 04/84*
         MVC   VCLTRKU,BLANKS                             *LBD 11/84*
         MVC   VCLEXT,BLANKS                              *LBD 11/84*
         MVC   VCLACT,BLANKS                              *LBD 11/84*
         MVC   VCLRDATE,BLANKS                            *LBD 11/84*
         MVC   VCLCDATE,BLANKS                            *LBD 11/84*
         MVC   VCLTRK,BLANKS                              *LBD 11/84*
         MVC   VCLRECFM,BLANKS                            *LBD 11/84*
         MVC   VCLBLK,BLANKS                              *LBD 11/84*
         MVC   VCLLRECL,BLANKS                            *LBD 11/84*
         MVC   VCLDSORG,BLANKS                            *LBD 11/84*
         CLI   VFOPT,C'H'              HSM LIST OPTION ?
         BE    RHLIST                  YES - GO READ HLIST OUTPUT
         B     READ                    ELSE GOTO NORMAL READ
         EJECT                                            *LBD 11/84*
DOVTOC   DS    0H                                         *LBD 11/84*
         MVC   TABPANEL,VTOCPANL       RESET PANEL NAME   *LBD 11/84*
         IFOFF VTOCF,DOVTOCAL                             *LBD 11/84*
         MVI   VTOCOPT,X'03'           TERM OPTION        *LBD 11/84*
         L     R15,=V(CVAFSUB)                            *LBD 11/84*
         LA    R1,VTOCPARM                                *LBD 11/84*
         BALR  R14,R15                 CLOSE IT OUT       *LBD 11/84*
         SPACE 2                                          *LBD 11/84*
DOVTOCAL DS    0H                                         *LBD 11/84*
         SETON VTOCF                                      *LBD 11/84*
         LA    R2,DOVTOCM                                 *LBD 11/84*
         ALLOC DDNRET=VTOCDDN,VOL=VOLSER,DISP=SHR,        *LBD 11/84*  X
               UNIT=UNIT                                  *LBD 11/84*  X
               ERROR=S99FAIL                              *LBD 11/84*
         B     DOVTOCA                                    *LBD 11/84*
DOVTOCM  DS    0H                                         *LBD 11/84*
         LA    R2,99
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(SETMSG,MSG20),VL
         B     EXIT
DOVTOCA  DS    0H                                         *LBD 11/84*
         SETOF FLARCH,FLHSM                               *LBD 11/84*
         SETON FLNORM                                     *LBD 11/84*
         MVC   VTOCDD,VTOCDDN+2        SET UP DDNAME      *LBD 11/84*
         MVI   VTOCOPT,X'01'           SET INITIAL OPT    *LBD 11/84*
         MVC   VTOCIX,VDSLIST          SET INDEX          *LBD 11/84*
         LA    R1,VTOCPARM             -> PARM            *LBD 11/84*
         L     R15,=V(CVAFSUB)         -> SUB ROUTINE     *LBD 11/84*
         BALR  R14,R15                 GO TO IT           *LBD 11/84*
         LTR   R15,R15                 OK                 *LBD 11/84*
         BZ    VADDIT                  YES                *LBD 11/84*
         CH    R15,=H'04'              CODE 4             *LBD 11/84*
         BE    EOFX                                       *LBD 11/84*
         B     VTOCERR                                    *LBD 11/84*
DOVTOCB  DS    0H                                         *LBD 11/84*
         MVI   VTOCOPT,X'02'           SET PASS 2         *LBD 11/84*
         LA    R1,VTOCPARM             -> PARM            *LBD 11/84*
         L     R15,=V(CVAFSUB)         -> SUB ROUTINE     *LBD 11/84*
         BALR  R14,R15                 GO TO IT           *LBD 11/84*
         LTR   R15,R15                 OK                 *LBD 11/84*
         BZ    VADDIT                  YES                *LBD 11/84*
         CH    R15,=H'04'              CODE 4             *LBD 11/84*
         BE    EOFX                                       *LBD 11/84*
         B     VTOCERR                                    *LBD 11/84*
VADDIT   DS    0H                                         *LBD 11/84*
         L     R1,VTOCRADR                                *LBD 11/84*
         L     R2,0(R1)                                   *LBD 11/84*
         IFON  VTOCI,VADDITX           SKIP DSN/VOL       *LBD 11/84*
         MVC   VCLDSN,0(R2)            MOVE DSNAME        *LBD 11/84*
         L     R2,4(R1)                                   *LBD 11/84*
         MVC   VCLVOL(6),0(R2)         MOVE VOLSER        *LBD 11/84*
VADDITX  DS    0H                                         *LBD 11/84*
         L     R2,8(R1)                                   *LBD 11/84*
         MVC   VCLDSORG(8),0(R2)       MOVE DSORG         *LBD 11/84*
         L     R2,12(R1)                                  *LBD 11/84*
         MVC   VCLLRECL,1(R2)          MOVE LRECL         *LBD 11/84*
         L     R2,16(R1)                                  *LBD 11/84*
         MVC   VCLBLK,1(R2)            MOVE BLKSIZE       *LBD 11/84*
         L     R2,20(R1)                                  *LBD 11/84*
         MVC   VCLRECFM,0(R2)          MOVE RECFM         *LBD 11/84*
         L     R2,24(R1)                                  *LBD 11/84*
         MVC   VCLTRK,1(R2)            MOVE TRACKS ALLOC  *LBD 11/84*
         OC    1(5,R2),=5C'0'          MAKE NUMERIC       *LBD 11/84*
         PACK  PWORK,1(5,R2)           PACK IT            *LBD 11/84*
         AP    TRKA,PWORK              AND ADD IT         *LBD 11/84*
         L     R2,28(R1)                                  *LBD 11/84*
         MVC   VCLCDATE,0(R2)          MOVE CREATE DATE   *LBD 11/84*
         L     R2,32(R1)                                  *LBD 11/84*
         MVC   VCLRDATE,0(R2)          MOVE REF DATE      *LBD 11/84*
         L     R2,36(R1)                                  *LBD 11/84*
         MVC   VCLEXT,2(R2)            MOVE EXTENTS       *LBD 11/84*
         L     R2,40(R1)                                  *LBD 11/84*
         MVC   VCLTRKU,1(R2)           MOVE TRACKS USED   *LBD 11/84*
         OC    1(5,R2),=5C'0'          MAKE NUMERIC       *LBD 11/84*
         PACK  PWORK,1(5,R2)           PACK IT            *LBD 11/84*
         AP    TRKU,PWORK              AND ADD IT         *LBD 11/84*
         IFON  VTOCI,LOCSADD                              *LBD 11/84*
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(TBADD,TABLENAM),VL
         AP    FLRCNT,=P'01'           UPDATE ROW COUNTER BY 1
*        REINIT VALUES TO BLANK                           *LBD 11/84*
         MVC   VCLTRKU,BLANKS                             *LBD 11/84*
         MVC   VCLEXT,BLANKS                              *LBD 11/84*
         MVC   VCLACT,BLANKS                              *LBD 11/84*
         MVC   VCLRDATE,BLANKS                            *LBD 11/84*
         MVC   VCLCDATE,BLANKS                            *LBD 11/84*
         MVC   VCLTRK,BLANKS                              *LBD 11/84*
         MVC   VCLRECFM,BLANKS                            *LBD 11/84*
         MVC   VCLBLK,BLANKS                              *LBD 11/84*
         MVC   VCLLRECL,BLANKS                            *LBD 11/84*
         MVC   VCLDSORG,BLANKS                            *LBD 11/84*
         B     DOVTOCB                                    *LBD 11/84*
VTOCERR  DS    0H                                         *LBD 11/84*
         LA    R2,99
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(SETMSG,MSG21),VL
         B     EXIT
         EJECT                                            *LBD 11/84*
DOARCH   DS    0H
         GET   FLISTIN
         CLI   0(R1),X'00'         FIRST ARCHIVE RECORD ?
         BE    DOARCH              YES - SKIP IT
         MVC   VCLDSN,0(R1)        SET DSN
         MVC   VCLVOL(8),=CL8'ARCHIVE' SET VOL AS ARCHIVE
         MVC   VCLACT,BLANKS           INIT AS BLANK        *LBD 04/84*
         MVC   VCLACT(6),44(R1)    SET CLACT AS ARCHIVE DATE
         B     DOADD
         EJECT                                            *LBD 11/84*
DOHLIST  EQU   *
         SETOF FLNORM,FLARCH,LOCFLG                         *LBD 10/85*
         SETON FLHSM                                        *LBD 04/84*
DOHLISTC MVC   CMDBUFL,=A(HLISTCBL)    SET BUFFER LENGTH
         LA    R2,HLISTB               -> HLIST CMD BUFFER
         L     R1,CMDBUFL              LOAD LEN OF BUFFER
         BCTR  R1,R0                   REDUCE LEN BY 1
         MVC   HLISTLVL,VDSLIST
         EX    R1,MVCBUF               MOVE TO BUFFER
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(SELECT,CMDBUFL,CMDBUF),VL
         MVC   HLISTDSN(8),VZPREFIX
         LA    R1,HLISTDSN+7
HL       CLI   0(R1),C' '
         BNE   MVCHDSN
         BCT   R1,HL
MVCHDSN  LA    R1,1(R1)
         MVI   0(R1),C'.'
         MVC   1(8,R1),DYNDDN
         ALLOC DSN=HLSTDSN,DDN=OURDDN,DISP=(SHR,DELETE)
OPENFLIN DS    0H
         MVC   FLISTIN+40(8),DYNDDN    UPDATE DDNAME
         OPEN  (FLISTIN)
         CLI   VFOPT,C'A'                                  *LBD 08/85*
         BE    DOARCH                                      *LBD 08/85*
RHLIST   DS    0H                      READ HLIST OUTPUT
         GET   FLISTIN
         CLC   =C'DSNAME =',1(R1)
         BE    DSN2                HAVE DSN
         B     RHLIST
DSN2     MVC   VCLDSN,10(R1)        MOVE DSN TO CLDSN
         GET   FLISTIN
         GET   FLISTIN
         GET   FLISTIN
         GET   FLISTIN
         GET   FLISTIN
         MVC   VCLVOL(8),67(R1)     MOVE DATE TO CLVOL
         MVC   VCLACT,BLANKS                                *LBD 04/84*
         B     DOADD
EOF      CLOSE (FLISTIN,FREE)
         B     EOFX                                         *LBD 10/85*
LOCEND   DS    0H                                          *LBD 08/85*
         DELETE EP=LOCINDEX                                *LBD 08/85*
         L     R1,LOCDATAS                                 *LBD 08/85*
         FREEMAIN R,LV=4096,A=(1)                          *LBD 08/85*
         SETOF LOCFLG                                      *LBD 08/85*
         CLI   VFOPT+1,C'S'             SPACE REQUESTED    *LBD 08/85*
         BE    LOCVT                    YES                *LBD 08/85*
         SPACE 1                                           *LBD 08/85*
EOFX     DS    0H                                         *LBD 11/84*
         MVC   FLISTIN(FLISTINL),MODELDCB   RESET DCB
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(TBTOP,TABLENAM),VL
*                                                          *LBD 05/85*
         CLI   VZENVIR,C' '     ISPF V2 ?                  *LBD 05/85*
         BE    NOSORT           NO - SKIP SORT             *LBD 05/85*
         L     R15,ISPLINK      -> ISPLINK EPA             *LBD 05/85*
         TBSORT TABLENAM,FIELDS='(CLDSN C,A)'              *LBD 05/85*
NOSORT   DS    0H                                          *LBD 05/85*
*                                                          *LBD 05/85*
         UNPK  VFLROWS,FLRCNT
         OI    VFLROWS+3,X'F0'
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(VREPLACE,FLROWS,LFLROWS,VFLROWS),VL
         SPACE 2                                          *LBD 11/84*
         IFON  VTOCI,VTOCSUM                              *LBD 11/84*
         SPACE 2                                                  *LBD*
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(SETMSG,MSG13),VL
         EJECT
VTOCSUM  DS    0H                                         *LBD 11/84*
         MVC   VFLTRKA,=X'4020202020202021'
         MVC   VFLTRKU,=X'4020202020202021'
         ED    VFLTRKA,TRKA                               *LBD 11/84*
         ED    VFLTRKU,TRKU                               *LBD 11/84*
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(VREPLACE,FLTRKA,LFLTRKA,VFLTRKA),VL
         SPACE 2                                          *LBD 11/84*
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(VREPLACE,FLTRKU,LFLTRKU,VFLTRKU),VL
         SPACE 2                                                  *LBD*
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(SETMSG,MSG22),VL
         EJECT
DISPLAYC DS    0H
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(TBDISPL,TABLENAM,TABPANEL,,CRP),VL
         LTR   R15,R15                 CHECK FOR ZERO RETURN CODE
         BZ    DOIT0                   GO DO SOMETHING
         CH    R15,=H'04'
         BE    DOIT4                   GO DO SOMETHING
         B     EXITOK                  END/RETURN ASSUMED
         EJECT
DISPLAYP DS    0H
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(TBDISPL,TABLENAM,TABPANEL),VL
         LTR   R15,R15                 CHECK FOR ZERO RETURN CODE
         BZ    DOIT0                   GO DO SOMETHING
         CH    R15,=H'04'
         BE    DOIT4                   GO DO SOMETHING
         B     EXITOK                  END/RETURN ASSUMED
         EJECT
DISPLAYN DS    0H
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(TBDISPL,TABLENAM),VL
         LTR   R15,R15                 CHECK FOR ZERO RETURN CODE
         BZ    DOIT0                   GO DO SOMETHING
         CH    R15,=H'04'
         BE    DOIT4                   GO DO SOMETHING
         B     EXITOK                  END/RETURN ASSUMED
         EJECT
DOIT4    DS    0H
         OI    FLAG1,CODE4             SET TBDISPL CODE 4 ON
         B     DOIT2IT
DOIT0    DS    0H
         TM    FLAG1,CODE4                                  *LBD 11/83*
         BZ    DOIT                                         *LBD 11/83*
         NI    FLAG1,255-CODE4         TURNOFF TBDISPL CODE 4
         B     DOIT2IT                                      *LBD 11/83*
DOIT     DS    0H
         NI    FLAG1,255-CODE4         TURNOFF TBDISPL CODE 4
DOIT2IT  DS    0H                                           *LBD 11/83*
         XC    VCRP,VCRP                                    *LBD 02/84*
         MVC   CMDBUF,BLANKS           BLANK OUT CMDBUF
         MVC   LZCMD,=A(L'VZCMD)       RESET LENGTH FOR VCOPY
         MVC   VZCMD,BLANKS            RESET VALUE
         SPACE 1
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(VCOPY,ZCMD,LZCMD,VZCMD,MOVE),VL
         SPACE 2
         CLI   VZCMD,C' '              BLANK COMMAND
         BE    DOSEL                   YES - GO CHECK SELECT
         CLC   =C'CONFIRM',VZCMD
         BE    CONFIRM                 SET CONFIRM ON
         CLC   =C'NOCONFIRM',VZCMD
         BE    NCONFIRM                SET CONFIRM OFF
         CLC   =C'REFRESH',VZCMD
         BE    REFRESH                 GO REFRESH DISPLAY
         CLC   =C'SECURE',VZCMD
         BE    SECURE
         CLC   =C'ALLOC',VZCMD                              *LBD 04/84*
         BE    ALLOC                                        *LBD 04/84*
         CLC   =C'NOMIG',VZCMD
         BE    NOMIG                   GO SET NOMIG
         CLC   =C'MIG',VZCMD
         BE    MIG                     GO SET MIG
         CLC   =C'ALLDA',VZCMD
         BE    ALLDA                   GO SET ALLDA
         CLC   =C'WAIT',VZCMD
         BE    DOWAIT                  SET HSM WAIT
         CLC   =C'NOWAIT',VZCMD
         BE    NHSMWAIT                SET NO HSMWAIT
         CLC   =C'BCDS',VZCMD
         BE    SETBCDS                 GO SET BCDS OPTION
         CLC   =C'ARCHIVE',VZCMD
         BE    ARCHIVE                 GO SET ARCHIVE OPTION
         CLC   =C'BDTALL',VZCMD                            *LBD 05/85*
         BE    ALLBDT                  BDT ALL DATASETS
         CLC   =C'INDEX=',VZCMD
         BE    NEWINDEX                GO DO REFRESH W/NEW INDEX
         CLC   =C'L=',VZCMD
         BE    NEWL                    GO DO REFRESH W/NEW INDEX
         CLC   =C'F=',VZCMD
         BE    FIND                    GO FIND MATCHING DATASETS
         CLC   =C'FIND=',VZCMD
         BE    FINDX                   GO FIND MATCHING DATASETS
*                                                          *LBD 05/85*
         CLC   =C'SORT ',VZCMD         SORT COMMAND        *LBD 05/85*
         BE    SORTX                   YES                 *LBD 05/85*
*                                                          *LBD 05/85*
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(SETMSG,MSG03),VL
         B     RDISPLAY
RDISPLAY DS    0H
         MVC   VZCMD,BLANKS
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(VREPLACE,ZCMD,LZCMD,VZCMD),VL
         B     DISPLAYN                GO DISPLAY
         EJECT
SORTX    DS    0H               SORT BY FIELD              *LBD 05/85*
         CLI   VZENVIR,C' '     ISPF V 2                   *LBD 05/85*
         BE    SORTNFX          NO - SORT NO ALLOWED       *LBD 05/85*
*                                                          *LBD 05/85*
         LA    R1,TBLSORT       -> VALID SORT FIELD NAMES  *LBD 05/85*
SORTLP   DS    0H                                          *LBD 05/85*
         CLC   0(8,R1),VZCMD+5  SORT FIELD 1 CHAR PAST SORT*LBD 05/85*
         BE    DOSORT           FOUND - DO IT              *LBD 05/85*
         LA    R1,17(R1)        INDEX INTO TABLE           *LBD 05/85*
         CLI   0(R1),X'FF'      END OF TABLE ?             *LBD 05/85*
         BE    SORTNF           YES - SKIP IT              *LBD 05/85*
         B     SORTLP           KEEP LOOKING               *LBD 05/85*
DOSORT   DS    0H                                          *LBD 05/85*
         MVC   SORTFLD(8),8(R1) MOVE SORT FIELD            *LBD 05/85*
         MVC   SORTAD(1),16(R1) SET ASCENDING/DESCENDING    *LBD 06/85*
         TBSORT TABLENAM,FIELDS=SORTFLDS                   *LBD 05/85*
         B     DISPLAYP         GO DISPLAY SORTED TABLE    *LBD 05/85*
SORTNF   DS    0H                                          *LBD 05/85*
         L     R15,ISPLINK             -> ISPLINK EPA      *LBD 05/85*
         CALL  (15),(SETMSG,MSG24),VL                      *LBD 05/85*
         B     DISPLAYP         GO DISPLAY SORTED TABLE    *LBD 05/85*
SORTNFX  DS    0H                                          *LBD 05/85*
         L     R15,ISPLINK             -> ISPLINK EPA      *LBD 05/85*
         CALL  (15),(SETMSG,MSG23),VL                      *LBD 05/85*
         B     DISPLAYP         GO DISPLAY SORTED TABLE    *LBD 05/85*
         EJECT
FIND     DS    0H
         LA    R4,VZCMD+2              -> DSN
         LH    R3,LZCMD                LOAD LEN
         SH    R3,=H'03'               AND REDUCE LEN FOR FINDMVC
         B     FINDDS                  GO FIND DATASET
         SPACE 2
FINDX    DS    0H
         LA    R4,VZCMD+5              -> DSN
         LH    R3,LZCMD                LOAD LEN
         SH    R3,=H'06'               AND REDUCE LEN FOR FINDMVC
         B     FINDDS                  GO FIND DATASET
         SPACE 2
NEWINDEX DS    0H
         LA    R2,VZCMD+6              -> NEW INDEX
         B     NDSLIST
NEWL     DS    0H
         LA    R2,VZCMD+2              -> NEW INDEX
NDSLIST  DS    0H
         MVC   VDSLIST,BLANKS
         MVC   VDSLIST,0(R2)
         B     FIXPREFX                GO RECREATE TABLE W/NEW INDEX
         SPACE 2
ALLBDT   DS    0H
         B     BDTALLDS                GO BDT ALL DATASETS
         SPACE 2
ARCHIVE  DS    0H
         MVI   VFOPT,C'A'              SET ARCHIVE OPTION
         SETOF FLNORM,FLHSM                                 *LBD 04/84*
         SETON FLARCH                                       *LBD 04/84*
         B     CREATE2                 AND GO RECREATE TABLE
         SPACE 2
SETBCDS  DS    0H
         MVI   VFOPT,C'H'              SET HSM BCDS OPTION
         SETOF FLNORM,FLARCH                                *LBD 04/84*
         SETON FLHSM                                        *LBD 04/84*
         B     CREATE2                 AND GO RECREATE TABLE
         SPACE 2
NHSMWAIT DS    0H
         MVC   HSMWAIT(6),=CL6'NOWAIT'
         B     RDISPLAY
         SPACE 2
DOWAIT   DS    0H
         MVC   HSMWAIT(6),=CL6'WAIT'
         B     RDISPLAY
         SPACE 2
ALLDA    DS    0H
         MVI   VFOPT,C'B'              ONLINE AND MIGRATE
         SETOF FLARCH,FLHSM,VTOCF                           *LBD 04/84*
         SETON FLNORM                                       *LBD 04/84*
         B     CREATE2                 AND RECREATE TABLE
         SPACE 2
NOMIG    DS    0H
         MVI   VFOPT,C'O'              ONLINE ONLY
         SETOF FLARCH,FLHSM,VTOCF                           *LBD 04/84*
         SETON FLNORM                                       *LBD 04/84*
         B     CREATE2                 AND RECREATE TABLE
         SPACE 2
MIG      DS    0H
         MVI   VFOPT,C'M'              MIGRATE ONLY
         SETOF FLARCH,FLHSM,VTOCF                           *LBD 04/84*
         SETON FLNORM                                       *LBD 04/84*
         B     CREATE2                 AND RECREATE TABLE
         SPACE 2
SECURE   DS    0H
         MVC   CMDBUFL,=A(SECUREBL)    SET BUFFER LENGTH
         LA    R2,SECUREB              -> SECURE CMD BUFFER
         L     R1,CMDBUFL              LOAD LEN OF BUFFER
         BCTR  R1,R0                   REDUCE LEN BY 1
         EX    R1,MVCBUF               MOVE TO BUFFER
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(SELECT,CMDBUFL,CMDBUF),VL
         B     RDISPLAY
         SPACE 2
REFRESH  DS    0H
         B     CREATE2                 GO RECREATE THE TABLE
         SPACE 2
CONFIRM  DS    0H
         OI    FLAG1,FLCONF            TURN ON CONFIRM FLAG
         B     RDISPLAY
         SPACE 2
NCONFIRM DS    0H
         NI    FLAG1,255-FLCONF        TURN OFF CONFIRM FLAG
         B     RDISPLAY                GO TO REDISPLAY
         EJECT
BDTALLDS DS    0H                      BDT ALL DATASETS
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(TBTOP,TABLENAM),VL
         OI    FLAG1,MASSBDT
         B     BDTSKIP1
BDTALL   DS    0H
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(TBPUT,TABLENAM),VL
BDTSKIP1 DS    0H
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(TBSKIP,TABLENAM),VL
         LTR   R15,R15
         BNZ   BDTALLDN
         BAL   R14,FIXDSN
         B     MVSBDT                                      *LBD 05/85*
BDTALLDN DS    0H
         NI    FLAG1,255-MASSBDT
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(TBTOP,TABLENAM),VL
         B     DISPLAYP
         EJECT
FINDDS   DS    0H                      SEARCH FOR DATASET
         MVC   VCLDSN,BLANKS           BLANK OUT VCLDSN
         MVC   VCLDSN(8),PREFIX        MOVE DSN PREFIX
         LA    R1,VCLDSN
FINDDSP  DS    0H
         CLI   0(R1),C' '              END OF PREFIX ?
         BE    FINDMVI                 YES - MOVE . AND VZCMD
         LA    R1,1(R1)                INCR
         B     FINDDSP                 AND KEEP LOOKING
FINDMVI  DS    0H
         MVI   0(R1),C'.'
         LA    R1,1(R1)
         EX    R3,FINDMVC1             EXECUTE MOVE OF DSN
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(TBSARG,TABLENAM,CLDSN),VL
         EJECT                                                    *LBD*
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(TBSCAN,TABLENAM,CLDSN),VL
         LTR   R15,R15
         BZ    FINDCRP
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(SETMSG,MSG12),VL
         MVC   VSELO,BLANKS
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(VREPLACE,SELO,LSELO,VSELO),VL
         B     DISPLAYP
         EJECT                                              *LBD 02/84*
FINDCRP DS     0H
         L     R15,ISPLINK                                  *LBD 02/84*
         CALL  (15),(TBQUERY,TABLENAM,,,,,,TBQCRP),VL       *LBD 02/84*
         L     R15,ISPLINK                                  *LBD 02/84*
         CALL  (15),(VCOPY,CRP,LCRP,VCRP,MOVE),VL           *LBD 02/84*
         EJECT                                                    *LBD*
         MVC   VSELO,BLANKS
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(VREPLACE,SELO,LSELO,VSELO),VL
         EJECT                                                    *LBD*
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(SETMSG,MSG14),VL     DATASET FOUND MSG
         B     DISPLAYC
FINDMVC1 MVC   0(0,R1),0(R4)           MOVE DSN FOR TBSARG AND TBSCAN
         EJECT
DOSEL    DS    0H
         OC    VSELO,BLANKS            MAKE RESPONSE UPPER CASE
         CLC   VSELO,BLANKS            BLANK RESPONSE ?     *LBD 11/83*
         BE    SELOK                   YES                  *LBD 11/83*
         CLC   =C'= ',VSELO            REPEAT COMMAND       *LBD 03/85*
         BNE   DOSELNR                 NO                   *LBD 03/85*
         MVC   VSELO,SAVESEL           YES - RESET IT       *LBD 03/85*
DOSELNR  DS    0H                                           *LBD 03/85*
         CLC   =C'X ',VSELO            TBDELETE ENTRY FROM TABLE
         BE    X                       YES GO TBDELETE
         SPACE 1                                          *LBD 11/84*
         CLC   =C'CAT ',VSELO          CATALOG REQUEST    *LBD 11/84*
         BE    NOLOC                   YES - SKIP LOCATE  *LBD 11/84*
         SPACE 1                                          *LBD 11/84*
         IFON  VTOCF,NOLOC      SKIP IF VTOC OPTION       *LBD 07/85*
         IFOFF FLNORM,NOLOC            SKIP IF NOT NORMAL *LBD 11/84*
         MVC   DSNAME,VCLDSN           SET DSN FOR LOCATE *LBD 10/84*
         LOCATE CAMLST                 DO LOCATE          *LBD 10/84*
         LTR   R15,R15                 CATALOGED ?        *LBD 10/84*
         BNZ   NOCAT                   NO - TELL USER     *LBD 10/84*
         MVC   VCLVOL(6),LOCAREA+6     RESET VOLSER       *LBD 10/84*
*                                                         *LBD 10/84*
NOLOC    DS    0H                                         *LBD 11/84*
         BAL   R14,FIXDSN              GO FIXUP CMDDSN
         SPACE 2
*        VALIDATE SELECT OPTION
         SPACE 1
         L     R15,ISPLINK             -> ISPLINK EPA       *LBD 02/84*
         CALL  (15),(CONTROL,DISPLAY,SAVE),VL               *LBD 02/84*
         SPACE 1
         CLC   =C'S ',VSELO                                 *LBD 06/85*
         BE    SEL                                          *LBD 06/85*
         SPACE 1                                            *LBD 06/85*
         CLC   =C'B ',VSELO            BROWSE
         BE    BRO                     YES - GO BROWSE THE DATASET
         SPACE 1
         CLC   =C'BDT ',VSELO          MVS/BDT            *LBD 11/84*
         BE    MVSBDT                  YES - GO SEND IT   *LBD 11/84*
         SPACE 1
         CLC   =C'C ',VSELO            COMPRESS
         BE    COMPRESS                YES - GO COMPRESS THE DATASET
         SPACE 1                                          *LBD 11/84*
         CLC   =C'CAT ',VSELO          CATALOG ?          *LBD 11/84*
         BE    CAT                     YES                *LBD 11/84*
         SPACE 1
         CLC   =C'COPY ',VSELO         COPY DATASET ?
         BE    DOCOPY                  YES - GO COPY IT
         SPACE 1
         CLC   =C'D ',VSELO            DELETE DATASET
         BE    DELETE                  YES - GO DELETE THE DATASET
         SPACE 1
         CLC   =C'DN ',VSELO           DELETE NOCONFIRM DATASET
         BE    DODEL                   YES - GO DELETE THE DATASET
         SPACE 1
         CLC   =C'E ',VSELO            EDIT
         BE    ED                      YES - GO EDIT THE DATASET
         SPACE 1
         CLC   =C'EMPTY ',VSELO        EMPTY THE DATASET
         BE    EMPTY                   YES - GO EMPTY IT
         SPACE 1                                           *LBD 02/84*
         CLC   =C'EXPAND',VSELO        EXPAND PDS          *LBD 02/84*
         BE    EXPAND                  YES                 *LBD 02/84*
         SPACE 1
         CLC   =C'HM ',VSELO           HMIG THE DATASET
         BE    HMIG                    YES - GO HMIG IT
         SPACE 1
         CLC   =C'HB ',VSELO           HBACKDS THE DATASET
         BE    HBACK                   YES - GO HBACKDS
         SPACE 1
         CLC   =C'PRINT ',VSELO        PRINT
         BE    PRINT                   YES - GO GENPRINT THE DATASET
         SPACE 1
         CLC   =C'P ',VSELO            PRINT
         BE    PRINT                   YES - GO GENPRINT THE DATASET
         SPACE 1
         CLC   =C'PDS ',VSELO          PDS DIALOG           *LBD 06/85*
         BE    PDS                                          *LBD 06/85*
         SPACE 1
         CLC   =C'R ',VSELO            RECOVER MIG/BACKUP DATASET
         BE    RECOVER                 YES - GO HRECALL/HRECOVER
         SPACE 1
         CLC   =C'REL ',VSELO          RELEASE UNUSED SPACE *LBD 06/85*
         BE    RELEASE          YES                         *LBD 06/85*
         SPACE 1
         CLC   =C'RELEASE',VSELO       RELEASE UNUSED SPACE *LBD 06/85*
         BE    RELEASE          YES                         *LBD 06/85*
         SPACE 1
         CLC   =C'RENAME ',VSELO       RENAME DATASET
         BE    RENAME                  YES - GO RENAME IT
         SPACE 1
         CLC   =C'I  ',VSELO           DATA SET STATS     *LBD 11/84*
         BE    DOSTAT                                     *LBD 11/84*
         SPACE 1
         CLC   =C'STAT ',VSELO         DATA SET STATISTICS  *LBD 12/83*
         BE    DOSTAT                  YES                  *LBD 12/83*
         SPACE 1                                            *LBD 12/83*
         CLC   =C'T ',VSELO            MVS/BDT             *LBD 05/85*
         BE    MVSBDT                  YES - GO SEND IT    *LBD 05/85*
         SPACE 1
         CLC   =C'U ',VSELO            UNCATALOG DATASET
         BE    UNCAT                   YES - GO DELETE NOSCR
         SPACE 1
         EJECT
*        ASSUME USER COMMAND OR CLIST                      *LBD 02/84*
         MVI   VCLACT,C'*'                                 *LBD 02/84*
         MVC   VCLACT+1(9),VSELO                           *LBD 02/84*
         MVC   CMDBUF(4),=C'CMD(' INIT CMD BUFFER          *LBD 02/84*
         MVC   CMDBUF+4(9),VSELO  MOVE CMD TO BUFFER       *LBD 02/84*
         MVC   CMDBUF+14(56),CMDDSNM   AND DSN             *LBD 02/84*
         MVI   CMDBUF+72,C')'                              *LBD 02/84*
         MVC   CMDBUFL,=A(74)     LEN OF CMD               *LBD 02/84*
         AP    FPDSCNT,=P'01'                              *LBD 02/84*
         L     R15,ISPLINK        -> ISPLINK EPA           *LBD 02/84*
         CALL  (15),(SELECT,CMDBUFL,CMDBUF),VL             *LBD 02/84*
         LTR   R15,R15                                     *LBD 02/84*
         BZ    SELOK                                       *LBD 02/84*
         CH    R15,=H'20'         SEVERE ERROR ?           *LBD 02/84*
         BNE   SELOK              ASSUME OK                *LBD 02/84*
         EJECT                                              *LBD 04/84*
*        ASSUME ERROR IN FINDING CMD OR PROGRAM            *LBD 02/84*
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(SETMSG,MSG00),VL
         MVC   VSELO,BLANKS
         L     R15,ISPLINK             -> ISPLINK EPA       *LBD 02/84*
         CALL  (15),(CONTROL,DISPLAY,RESTORE),VL            *LBD 02/84*
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(VREPLACE,SELO,LSELO,VSELO),VL
         B     DISPLAYN                GO REDISPLAY TABLE
         EJECT
NOCAT    DS    0H                                         *LBD 10/84*
         L     R15,ISPLINK                                *LBD 10/84*
         CALL  (15),(SETMSG,MSG19),VL                     *LBD 10/84*
         MVC   VSELO,BLANKS                               *LBD 10/84*
         MVC   VCLACT,=CL10'*UNKNOWN*'                    *LBD 10/84*
         L     R15,ISPLINK             -> ISPLINK EPA     *LBD 10/84*
         CALL  (15),(CONTROL,DISPLAY,RESTORE),VL          *LBD 10/84*
         L     R15,ISPLINK             -> ISPLINK EPA     *LBD 10/84*
         CALL  (15),(VREPLACE,SELO,LSELO,VSELO),VL        *LBD 10/84*
         B     DISPLAYN                GO REDISPLAY TABLE *LBD 10/84*
         EJECT                                            *LBD 10/84*
CMDERR   DS    0H                 ERROR IN FINDING COMMAND  *LBD 04/84*
         L     R15,ISPLINK             -> ISPLINK EPA       *LBD 04/84*
         CALL  (15),(SETMSG,MSG18),VL                       *LBD 04/84*
CMDERR2  DS    0H                                          *LBD 02/86*
         MVC   VSELO,BLANKS                                 *LBD 04/84*
         L     R15,ISPLINK             -> ISPLINK EPA       *LBD 04/84*
         CALL  (15),(CONTROL,DISPLAY,RESTORE),VL            *LBD 04/84*
         L     R15,ISPLINK             -> ISPLINK EPA       *LBD 04/84*
         CALL  (15),(VREPLACE,SELO,LSELO,VSELO),VL          *LBD 04/84*
         B     DISPLAYN                GO REDISPLAY TABLE   *LBD 04/84*
         EJECT                                              *LBD 04/84*
CMDERRH  DS    0H                 ERROR IN FINDING COMMAND  *LBD 04/84*
         L     R15,ISPLINK             -> ISPLINK EPA       *LBD 04/84*
         CALL  (15),(SETMSG,MSG26),VL                       *LBD 04/84*
         B     CMDERR2                                     *LBD 02/86*
         EJECT                                              *LBD 04/84*
SELOK    DS    0H                      SELECTION OPTION OK
         MVC   SAVESEL,VSELO           SAVE SEL COMMAND     *LBD 03/85*
         MVC   VSELO,BLANKS
         L     R15,ISPLINK             -> ISPLINK EPA       *LBD 02/84*
         CALL  (15),(CONTROL,DISPLAY,RESTORE),VL            *LBD 02/84*
         TM    FLAG1,XED                                    *LBD 12/83*
         BZ    NOX                                          *LBD 12/83*
         NI    FLAG1,255-XED           TURN OFF FLAG        *LBD 12/83*
         B     CKCODE                  AND CK CODE          *LBD 12/83*
NOX      DS    0H                                           *LBD 12/83*
         EJECT                                                    *LBD*
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(TBPUT,TABLENAM),VL
CKCODE   DS    0H                                           *LBD 12/83*
         IFON  SELFLG,SEL                                   *LBD 06/85*
         TM    FLAG1,CODE4             TBDISPL CODE 4
         BO    DISPLAYN                KEEP ON WITH TBDISPL
         CLC   VCRP,=D'0'              NULL CRP             *LBD 02/84*
         BNE   DISPLAYC                NO - DISPLAY W/CRP   *LBD 02/84*
         B     DISPLAYN                NORMAL DISPLAY
         EJECT
BRO      DS    0H
         IFOFF FLNORM,CMDERR                                *LBD 04/84*
         CLC   VCLVOL(6),=C'MIGRAT' MIGRATED ?             *LBD 02/86*
         BE    CMDERRH            YES - CAN'T DO IT        *LBD 02/86*
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(CONTROL,DISPLAY,SAVE),VL
         EJECT                                                    *LBD*
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(BROWSE,CMDDSNM,VCLVOL),VL              *LBD 06/85*
         LR    R2,R15
         AP    FPDSCNT,=P'01'
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(CONTROL,DISPLAY,RESTORE),VL
         LTR   R2,R2
         BNZ   DSERROR                 BROWSE NO GOOD
         MVC   VCLACT,=CL10'*BROWSE*'
         B     SELOK
         EJECT
CAT      DS    0H                                         *LBD 11/84*
         IFOFF VTOCF,CMDERR                               *LBD 11/84*
         AP    FPDSCNT,=P'01'                             *LBD 11/84*
         L     R15,ISPLINK                                *LBD 11/84*
         CALL  (15),(VPUT,CLDSNS),VL                      *LBD 11/84*
         SPACE 2                                          *LBD 11/84*
         MVC   CMDBUF(15),=CL15'PANEL(FLCAT)'             *LBD 11/84*
         LA    R2,15                                      *LBD 11/84*
         ST    R2,CMDBUFL                                 *LBD 11/84*
         L     R15,ISPLINK                                *LBD 11/84*
         CALL  (15),(SELECT,CMDBUFL,CMDBUF),VL            *LBD 11/84*
         MVC   VCLACT,=CL10'*CATALOG*'                    *LBD 11/84*
         B     SELOK                                      *LBD 11/84*
         EJECT                                            *LBD 12/84*
MVSBDT   DS    0H                 SEND A SINGLE DATASET   *LBD 12/84*
         IFOFF FLNORM,CMDERR      MUST BE ONLINE OR MIG   *LBD 12/84*
         CLC   VCLVOL(6),=C'MIGRAT' MIGRATED ?             *LBD 02/86*
         BE    CMDERRH            YES - CAN'T DO IT        *LBD 02/86*
         AP    FPDSCNT,=P'01'     UP COUNT                *LBD 12/84*
         MVC   CMDBUF(11),=C'CMD(%FLBDT '                 *LBD 12/84*
         MVC   CMDBUF+12(46),CMDDSN                       *LBD 12/84*
         MVC   CMDBUFL,=A(58)     MOVE LEN FOR COMMAND    *LBD 12/84*
         L     R15,ISPLINK        -> ISPLINK EPA          *LBD 12/84*
         CALL  (15),(SELECT,CMDBUFL,CMDBUF),VL            *LBD 12/84*
         MVC   VCLACT,=CL10'*BDT*'                        *LBD 12/84*
         TM    FLAG1,MASSBDT                               *LBD 05/85*
         BO    BDTALL                                      *LBD 05/85*
         B     SELOK                                      *LBD 12/84*
         EJECT
COMPRESS DS    0H
         IFOFF FLNORM,CMDERR                                *LBD 04/84*
         CLC   VCLVOL(6),=C'MIGRAT' MIGRATED ?             *LBD 02/86*
         BE    CMDERRH            YES - CAN'T DO IT        *LBD 02/86*
         MVC   VCLACT,=CL10'*COMPRESS*'
         AP    FPDSCNT,=P'01'
         MVC   CMDBUF(17),=CL17'CMD($C COMPRESS '
         MVC   CMDBUF+19(46),CMDDSN    MOVE DSN
         LA    R1,CMDBUF+19
         AR    R2,R1
         MVC   0(8,R2),=C'PRINT(*)'
         LA    R1,CMDBUF
         LA    R2,8(R2)
         MVI   2(R2),C')'
         LA    R2,2(R2)
         SR    R2,R1
         ST    R2,CMDBUFL
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(SELECT,CMDBUFL,CMDBUF),VL
         B     SELOK
         EJECT
SEL      DS    0H                                           *LBD 06/85*
         SETON SELFLG                                       *LBD 06/85*
         L     R15,ISPLINK                                  *LBD 06/85*
         CALL  (15),(DISPLAY,SELPANL),VL                    *LBD 06/85*
         LTR   R15,R15                                      *LBD 06/85*
         BZ    DOSEL                                        *LBD 06/85*
         SETOF SELFLG                                       *LBD 06/85*
         SR    R15,R15          RESET RETURN                *LBD 06/85*
         B     SELOK                                        *LBD 06/85*
         EJECT                                              *LBD 06/85*
DOCOPY   DS    0H                                           *LBD 12/83*
         IFOFF FLNORM,CMDERR                                *LBD 04/84*
         CLC   VCLVOL(6),=C'MIGRAT' MIGRATED ?             *LBD 02/86*
         BE    CMDERRH            YES - CAN'T DO IT        *LBD 02/86*
         MVC   VIDSN,CMDDSNM                                *LBD 12/83*
         L     R15,ISPLINK                                  *LBD 12/83*
         CALL  (15),(VPUT,IDSN),VL                          *LBD 12/83*
         MVC   CMDBUF(L'COPYSEL),COPYSEL                    *LBD 12/83*
         MVC   CMDBUFL,=A(L'COPYSEL)                        *LBD 12/83*
         L     R15,ISPLINK             -> ISPLINK EPA       *LBD 12/83*
         CALL  (15),(SELECT,CMDBUFL,CMDBUF),VL              *LBD 12/83*
         MVC   VCLACT,=CL10'*COPIED*'                       *LBD 12/83*
         B     SELOK                                        *LBD 12/83*
         EJECT                                              *LBD 12/83*
DELETE   DS    0H
         IFON  FLARCH,DODARCH                               *LBD 04/84*
         TM    FLAG1,FLCONF
         BZ    DODEL
         EJECT                                                    *LBD*
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(DISPLAY,PANDEL),VL
         LTR   R15,R15
         BNZ   SELOK                   NO DELETE
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(VCOPY,FDOPT,LFDOPT,VFDOPT,MOVE),VL
         CLI   VFDOPT,C'Y'
         BE    DODEL
         B     SELOK                   NO DELETE
         EJECT
DODEL    DS    0H
         IFON  FLHSM,DOHBDEL                                *LBD 04/84*
         IFON  FLARCH,DOHBDEL                             *LBD 11/84*
         CLC   VCLVOL(6),=C'MIGRAT'
         BE    DOHDEL                  GO DO HDEL
         MVC   CMDBUF(10),=C'CMD(DELETE'
         LA    R1,CMDBUF+12
         MVC   0(46,R1),CMDDSN
         AR    R2,R1
         MVI   2(R2),C')'
         LA    R2,2(R2)
         LA    R1,CMDBUF
         SR    R2,R1
         ST    R2,CMDBUFL              SAVE LEN
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(SELECT,CMDBUFL,CMDBUF),VL
         LTR   R15,R15                                      *LBD 09/85*
         BNZ   NOGOOD                                       *LBD 09/85*
         MVC   VCLACT,=CL10'*DELETE*'
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(LOG,MSG07),VL     DATASET DELETED MSG
         AP    FPDSCNT,=P'01'
         B     SELOK
         EJECT
DODARCH  DS    0H
         MVC   VCLACT,=CL10'**NO DEL**'
         AP    FPDSCNT,=P'01'
         B     SELOK
         EJECT
DOHBDEL  DS    0H                      DO HSM DELETE
         MVC   CMDBUF(12),=C'CMD(HBDELETE'
         LA    R1,CMDBUF+14
         MVC   0(46,R1),CMDDSN
         AR    R2,R1
         MVI   2(R2),C')'
         LA    R2,2(R2)
         LA    R1,CMDBUF
         SR    R2,R1
         ST    R2,CMDBUFL              SAVE LEN
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(SELECT,CMDBUFL,CMDBUF),VL
         MVC   VCLACT,=CL10'*HBDELETE*'
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(LOG,MSG08),VL     DATASET HBDELETED MSG
         AP    FPDSCNT,=P'01'
         B     SELOK
         EJECT
DOHDEL   DS    0H                      DO HSM DELETE
         MVC   CMDBUF(11),=C'CMD(HDELETE'
         LA    R1,CMDBUF+13
         MVC   0(46,R1),CMDDSN
         AR    R2,R1
         MVI   2(R2),C')'
         LA    R2,2(R2)
         LA    R1,CMDBUF
         SR    R2,R1
         ST    R2,CMDBUFL              SAVE LEN
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(SELECT,CMDBUFL,CMDBUF),VL
         MVC   VCLACT,=CL10'*HDELETE*'
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(LOG,MSG06),VL     DATASET HDELETED MSG
         AP    FPDSCNT,=P'01'
         B     SELOK
         EJECT
DSERROR  DS    0H
         IFOFF FLNORM,CMDERR                                *LBD 04/84*
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(SETMSG,MSG15),VL
         MVC   VCLACT,=CL10'**ERROR**'
         AP    FPDSCNT,=P'01'
         B     SELOK
         EJECT
ED       DS    0H
         IFOFF FLNORM,CMDERR                                *LBD 04/84*
         CLC   VCLVOL(6),=C'MIGRAT' MIGRATED ?             *LBD 02/86*
         BE    CMDERRH            YES - CAN'T DO IT        *LBD 02/86*
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(CONTROL,DISPLAY,SAVE),VL
         EJECT                                                    *LBD*
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(EDIT,CMDDSNM,VCLVOL),VL                *LBD 06/85*
         LR    R2,R15
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(CONTROL,DISPLAY,RESTORE),VL
         CH    R2,=H'04'
         BH    DSERROR                 EDIT NO GOOD
         MVC   VCLACT,=CL10'*EDIT*'
         AP    FPDSCNT,=P'01'
         B     SELOK
         EJECT
EMPTY    DS    0H
         IFOFF FLNORM,CMDERR                                *LBD 04/84*
         CLC   VCLVOL(6),=C'MIGRAT' MIGRATED ?             *LBD 02/86*
         BE    CMDERRH            YES - CAN'T DO IT        *LBD 02/86*
         MVC   VEDSN,CMDDSN            UPDATE EDSN FOR EMPTY PANEL
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(VPUT,EDSN),VL
         MVC   CMDBUF(20),=CL20'PANEL(EMPTY)'
         MVC   CMDBUFL,=A(20)
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(SELECT,CMDBUFL,CMDBUF),VL
         MVC   VCLACT,=CL10'*EMPTY*'
         AP    FPDSCNT,=P'01'
         B     SELOK
         EJECT
EXPAND   DS    0H
         IFOFF FLNORM,CMDERR                                *LBD 04/84*
         CLC   VCLVOL(6),=C'MIGRAT' MIGRATED ?             *LBD 02/86*
         BE    CMDERRH            YES - CAN'T DO IT        *LBD 02/86*
         MVC   VEDSN,CMDDSN            UPDATE EDSN FOR EMPTY PANEL
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(VPUT,EDSN),VL
         MVC   CMDBUF(20),=CL20'PANEL(EXPDIR)'
         MVC   CMDBUFL,=A(20)
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(SELECT,CMDBUFL,CMDBUF),VL
         MVC   VCLACT,=CL10'*EXPAND*'
         AP    FPDSCNT,=P'01'
         B     SELOK
         EJECT
HBACK    DS    0H
         IFON  FLARCH,CMDERR                                *LBD 04/84*
         MVC   CMDBUF(12),=CL12'CMD(HBACKDS '
         MVC   CMDBUF+12(46),CMDDSN
         LA    R1,CMDBUF+12
         AR    R1,R2
         LA    R1,1(R1)
         MVC   0(6,R1),HSMWAIT
         MVI   6(R1),C')'
         LA    R1,7(R1)
         LA    R2,CMDBUF
         SR    R1,R2
         ST    R1,CMDBUFL
         MVC   VCLACT,=CL10'*HBACKDS*'
         AP    FPDSCNT,=P'01'
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(SELECT,CMDBUFL,CMDBUF),VL
         B     SELOK
         EJECT
HMIG     DS    0H
         IFOFF FLNORM,CMDERR                                *LBD 04/84*
         CLC   VCLVOL(6),=C'MIGRAT' MIGRATED ?             *LBD 02/86*
         BE    CMDERRH            YES - CAN'T DO IT        *LBD 02/86*
         MVC   CMDBUF(12),=CL12'CMD(HMIG '
         MVC   CMDBUF+12(46),CMDDSN
         LA    R1,CMDBUF+12
         AR    R1,R2
         LA    R1,1(R1)
         MVC   0(6,R1),HSMWAIT
         MVI   6(R1),C')'
         LA    R1,7(R1)
         LA    R2,CMDBUF
         SR    R1,R2
         ST    R1,CMDBUFL
         MVC   VCLACT,=CL10'*HMIG*'
         AP    FPDSCNT,=P'01'
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(SELECT,CMDBUFL,CMDBUF),VL
         B     SELOK
         EJECT
PDS      DS    0H                                           *LBD 06/85*
         IFOFF FLNORM,CMDERR    MUST BE ONLINE OR MIG       *LBD 06/85*
         CLC   VCLVOL(6),=C'MIGRAT' MIGRATED ?             *LBD 02/86*
         BE    CMDERRH            YES - CAN'T DO IT        *LBD 02/86*
         AP    FPDSCNT,=P'01'   ADD D/S ACCESS COUNT        *LBD 06/85*
         MVC   CMDBUF(18),=CL18'PGM(PDS) PARM(PDS '         *LBD 06/85*
         MVC   CMDBUF+19(46),CMDDSN                         *LBD 06/85*
         MVC   CMDBUF+66(4),=C'VOL('                        *LBD 06/85*
         MVC   CMDBUF+70(6),VCLVOL                        *LBD 07/85*
         MVI   CMDBUF+76,C')'                             *LBD 07/85*
         MVC   CMDBUF+78(8),=CL8'ISPMODE)'                  *LBD 06/85*
         MVC   CMDBUFL,=A(94)   SET LEN                     *LBD 06/85*
         L     R15,ISPLINK      -> ISPLINK                  *LBD 06/85*
         CALL  (15),(SELECT,CMDBUFL,CMDBUF),VL              *LBD 06/85*
         MVC   VCLACT,=CL10'*PDS*'                          *LBD 06/85*
         B     SELOK                                        *LBD 06/85*
         EJECT                                              *LBD 06/85*
PRINT    DS    0H
         IFOFF FLNORM,CMDERR                                *LBD 04/84*
         CLC   VCLVOL(6),=C'MIGRAT' MIGRATED ?             *LBD 02/86*
         BE    CMDERRH            YES - CAN'T DO IT        *LBD 02/86*
         MVC   VCLACT,=CL10'*PRINT*'
         AP    FPDSCNT,=P'01'
         MVC   CMDBUF(22),=CL22'CMD(%GENPRINT NOBRO '
         LA    R1,CMDBUF+23
         MVC   0(4,R1),=C'DSN('
         LA    R1,4(R1)
         MVC   0(2,R1),=X'7D7D'        TWO QUOTES FOR CLIST
         LA    R1,2(R1)
         MVC   0(56,R1),CMDDSNM
         SH    R3,=H'02'               REDUCE BY 2          *LBD 12/83*
         AR    R1,R3
         MVC   0(2,R1),=X'7D7D'        TWO QUOTES FOR CLIST
         LA    R1,2(R1)
         MVC   0(3,R1),=C') )'
         LA    R1,4(R1)
         LA    R2,CMDBUF
         SR    R1,R2
         ST    R1,CMDBUFL
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(SELECT,CMDBUFL,CMDBUF),VL
         EJECT                                                    *LBD*
         B     SELOK
         EJECT
RECOVER  DS    0H
         IFON  FLNORM,RRECAL           NORMAL RECALL        *LBD 04/84*
         IFON  FLARCH,RRECOV                                *LBD 04/84*
         IFON  FLHSM,RRECOV                                 *LBD 04/84*
         B     CMDERR                                       *LBD 04/84*
RRECOV   DS    0H                                           *LBD 04/84*
         MVC   CMDBUF(13),=CL13'CMD(%FLHREC '
         LA    R1,CMDBUF+15                                 *LBD 04/84*
         SETON HRECOV                  SET HRECOVER FLAG    *LBD 04/84*
         B     RECDSN                  DO RECOVERY
RRECAL   DS    0H                                           *LBD 04/84*
         MVC   CMDBUF(13),=CL13'CMD(HRECALL'
         LA    R1,CMDBUF+15                                 *LBD 04/84*
         CLC   VCLVOL(6),=C'MIGRAT'
         BE    RECDSN
         B     CMDERR                  OPTION ERROR         *LBD 04/84*
RECDSN   DS    0H
         MVC   0(46,R1),CMDDSN
         AR    R1,R2
         LA    R1,1(R1)
         MVC   0(6,R1),HSMWAIT
         MVI   6(R1),C')'
         LA    R1,7(R1)
         LA    R2,CMDBUF
         SR    R1,R2
         ST    R1,CMDBUFL
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(SELECT,CMDBUFL,CMDBUF),VL
         MVC   VCLACT,=CL10'*RECOVER*'
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(LOG,MSG11),VL
         AP    FPDSCNT,=P'01'
         B     SELOK
         EJECT
ALLOC    DS    0H                                           *LBD 04/84*
         MVC   VZCMD,BLANKS                                 *LBD 04/84*
         L     R15,ISPLINK             -> ISPLINK EPA       *LBD 04/84*
         CALL  (15),(CONTROL,DISPLAY,SAVE),VL               *LBD 04/84*
         L     R15,ISPLINK                                  *LBD 04/84*
         CALL  (15),(SELECT,ALLCMDL,ALLCMD),VL              *LBD 04/84*
         LR    R2,R15                                       *LBD 04/84*
         MVC   LIDSN,=A(L'VIDSN)       RESET LENGTH         *LBD 04/84*
         L     R15,ISPLINK                                  *LBD 04/84*
         CALL  (15),(VGET,IDSN,SHARED),VL                   *LBD 04/84*
         L     R15,ISPLINK             -> ISPLINK EPA       *LBD 04/84*
         CALL  (15),(CONTROL,DISPLAY,RESTORE),VL            *LBD 04/84*
         LTR   R2,R2                                        *LBD 04/84*
         BNZ   RDISPLAY           NO GOOD - REDISPLAY       *LBD 04/84*
         L     R15,ISPLINK             -> ISPLINK EPA       *LBD 04/84*
         CALL  (15),(TBTOP,TABLENAM),VL                     *LBD 04/84*
         L     R15,ISPLINK                                  *LBD 04/84*
         CALL  (15),(TBSKIP,TABLENAM),VL                    *LBD 04/84*
         MVC   DSNAME,VIDSN                                 *LBD 04/84*
         LOCATE CAMLST                                      *LBD 04/84*
         MVC   HOLDVOL,LOCAREA+6                            *LBD 04/84*
ABKL     DS    0H                                           *LBD 04/84*
         CLC   VCLDSN,VIDSN            FIND WHERE TO PUT    *LBD 04/84*
         BH    ADDBK                   BACK IN TABLE        *LBD 04/84*
         L     R15,ISPLINK                                  *LBD 04/84*
         CALL  (15),(TBSKIP,TABLENAM),VL                    *LBD 04/84*
         LTR   R15,R15                                      *LBD 04/84*
         BZ    ABKL                    KEEP LOOKING         *LBD 04/84*
         CH    R15,=H'08'              END OF TABLE         *LBD 04/84*
         BNE   ADDBK                   ERROR - TRY ANY WAY  *LBD 04/84*
         L     R15,ISPLINK             -> ISPLINK           *LBD 04/84*
         CALL  (15),(TBBOTTOM,TABLENAM),VL                  *LBD 04/84*
         B     ADDBKS                                       *LBD 04/84*
         SPACE 2                                            *LBD 04/84*
ADDBK    DS    0H                                           *LBD 04/84*
         L     R15,ISPLINK                                  *LBD 04/84*
         CALL  (15),(TBSKIP,TABLENAM,SN),VL                 *LBD 04/84*
ADDBKS   DS    0H                 BYPASSED SKIP             *LBD 04/84*
         MVC   VCLDSN,VIDSN            UPDATE DSN           *LBD 04/84*
         MVC   VCLVOL(6),HOLDVOL       UPDATE VOLSER        *LBD 04/84*
         MVC   VCLACT,=CL10'*ALLOCATE*'                     *LBD 04/84*
         L     R15,ISPLINK                                  *LBD 04/84*
         CALL  (15),(TBADD,TABLENAM),VL                     *LBD 04/84*
*        NOW GO BACK 1 LINE FOR THE DISPLAY                 *LBD 04/84*
         L     R15,ISPLINK                                  *LBD 04/84*
         CALL  (15),(TBSKIP,TABLENAM,SN),VL                 *LBD 04/84*
*        NOW SET THE CRP FOR THE DISPLAY                    *LBD 04/84*
         L     R15,ISPLINK                                  *LBD 04/84*
         CALL  (15),(TBQUERY,TABLENAM,,,,,,TBQCRP),VL       *LBD 04/84*
         L     R15,ISPLINK                                  *LBD 04/84*
         CALL  (15),(VCOPY,CRP,LCRP,VCRP,MOVE),VL           *LBD 04/84*
         L     R15,ISPLINK             -> ISPLINK EPA       *LBD 04/84*
         CALL  (15),(SETMSG,MSG17),VL     DATASET FOUND MSG *LBD 04/84*
         B     DISPLAYC                RETURN               *LBD 04/84*
         EJECT
RELEASE  DS    0H                                           *LBD 06/85*
         IFOFF FLNORM,CMDERR    MUST BE ONLINE OR MIG       *LBD 06/85*
         CLC   VCLVOL(6),=C'MIGRAT' MIGRATED ?             *LBD 02/86*
         BE    CMDERRH            YES - CAN'T DO IT        *LBD 02/86*
         AP    FPDSCNT,=P'01'   ADD D/S ACCESS COUNT        *LBD 06/85*
         MVC   CMDBUF(L'RELPANEL),RELPANEL                  *LBD 06/85*
         MVC   CMDBUFL,=A(L'RELPANEL)                       *LBD 06/85*
         L     R15,ISPLINK                                  *LBD 06/85*
         CALL  (15),(VPUT,CLDSNS),VL                        *LBD 06/85*
         SPACE 1                                            *LBD 06/85*
         L     R15,ISPLINK      -> ISPLINK                  *LBD 06/85*
         CALL  (15),(SELECT,CMDBUFL,CMDBUF),VL              *LBD 06/85*
         MVC   VCLACT,=CL10'*RELEASE*'                      *LBD 06/85*
         B     SELOK                                        *LBD 06/85*
         EJECT                                              *LBD 06/85*
RENAME   DS    0H
         IFOFF FLNORM,CMDERR                                *LBD 04/84*
         CLC   VCLVOL(6),=C'MIGRAT' MIGRATED ?             *LBD 02/86*
         BE    CMDERRH            YES - CAN'T DO IT        *LBD 02/86*
         MVC   VNCLDSN,CMDDSN          UPDATE NCLDSN FOR RENAME
         MVC   HOLDVOL,VCLVOL          SAVE CURRENT VOLSER  *LBD 04/84*
         MVC   LNCLDSN,=A(L'VNCLDSN)   RESET LENGTH OF NCLDSN
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(VPUT,NCLDSN),VL
         EJECT                                                    *LBD*
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(DISPLAY,PANREN),VL
         LTR   R15,R15
         BNZ   SELOK                   NO RENAME
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(VCOPY,NCLDSN,LNCLDSN,VNCLDSN,MOVE),VL
         AP    FPDSCNT,=P'01'
         MVC   CMDBUF(11),=C'CMD(RENAME '
         MVC   CMDBUF+12(46),CMDDSN
         LA    R1,CMDBUF+12
         AR    R1,R2                   -> END OF ORIG DSN
         OC    VNCLDSN,BLANKS          INSURE UPPER CASE NEW DSN
         MVC   0(46,R1),VNCLDSN
         L     R2,LNCLDSN
         AR    R1,R2                   -> END OF NEW DSN
         LA    R1,1(R1)                PLUS 1
         MVI   0(R1),C')'              MOVE IN END PAREN
         LA    R2,CMDBUF               -> START OF CMDBUF
         SR    R1,R2                   SUB FROM END OF BUFFER
         ST    R1,CMDBUFL              AND SAVE LENGTH
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(SELECT,CMDBUFL,CMDBUF),VL
         LTR   R15,R15                  SUCCESSFUL          *LBD 09/85*
         BNZ   NOGOOD                   NO                  *LBD 09/85*
         L     R15,ISPLINK             -> ISPLINK EPA       *LBD 02/84*
         CALL  (15),(TBDELETE,TABLENAM),VL                  *LBD 02/84*
         L     R15,ISPLINK             -> ISPLINK EPA       *LBD 02/84*
         CALL  (15),(TBTOP,TABLENAM),VL                     *LBD 02/84*
         L     R15,ISPLINK                                  *LBD 02/84*
         CALL  (15),(TBSKIP,TABLENAM),VL                    *LBD 02/84*
         MVC   CMDDSN,BLANKS                                *LBD 02/84*
         LA    R1,CMDDSN                                    *LBD 02/84*
         LA    R2,44                                        *LBD 02/84*
         LA    R3,VNCLDSN+1            SKIP 1ST QUOTE       *LBD 02/84*
DROPQ    CLI   0(R3),X'7D'             FIND LAST QUOTE      *LBD 02/84*
         BE    ADDBACKL                HAVE IT              *LBD 02/84*
         MVC   0(1,R1),0(R3)           ELSE MOVE CHARACTER  *LBD 02/84*
         LA    R3,1(R3)                INCR INPUT           *LBD 02/84*
         LA    R1,1(R1)                INCR OUTPUT          *LBD 02/84*
         BCT   R2,DROPQ                KEEP LOOKING         *LBD 02/84*
ADDBACKL DS    0H                                           *LBD 02/84*
         CLC   VCLDSN,CMDDSN           FIND WHERE TO PUT    *LBD 02/84*
         BH    ADDBACK                 BACK IN TABLE        *LBD 02/84*
         L     R15,ISPLINK                                  *LBD 02/84*
         CALL  (15),(TBSKIP,TABLENAM),VL                    *LBD 02/84*
         LTR   R15,R15                                      *LBD 02/84*
         BZ    ADDBACKL                KEEP LOOKING         *LBD 02/84*
         CH    R15,=H'08'              END OF TABLE         *LBD 02/84*
         BNE   ADDBACK                 ERROR - TRY ANY WAY  *LBD 02/84*
         L     R15,ISPLINK             -> ISPLINK           *LBD 02/84*
         CALL  (15),(TBBOTTOM,TABLENAM),VL                  *LBD 02/84*
         B     ADDBACKS                                     *LBD 02/84*
         SPACE 2                                            *LBD 02/84*
ADDBACK  DS    0H                                           *LBD 02/84*
         L     R15,ISPLINK                                  *LBD 02/84*
         CALL  (15),(TBSKIP,TABLENAM,SN),VL                 *LBD 02/84*
ADDBACKS DS    0H                 BYPASSED SKIP             *LBD 02/84*
         MVC   VCLDSN,CMDDSN           UPDATE DSN           *LBD 02/84*
         MVC   VCLVOL(6),HOLDVOL       REPLACE VOLSER       *LBD 04/84*
         MVC   VCLACT,=CL10'*RENAMED*'                      *LBD 02/84*
         L     R15,ISPLINK                                  *LBD 02/84*
         CALL  (15),(TBADD,TABLENAM),VL                     *LBD 02/84*
*        NOW GO BACK 1 LINE FOR THE DISPLAY                 *LBD 02/84*
         L     R15,ISPLINK                                  *LBD 02/84*
         CALL  (15),(TBSKIP,TABLENAM,SN),VL                 *LBD 02/84*
*        NOW SET THE CRP FOR THE DISPLAY                    *LBD 02/84*
         L     R15,ISPLINK                                  *LBD 02/84*
         CALL  (15),(TBQUERY,TABLENAM,,,,,,TBQCRP),VL       *LBD 02/84*
         L     R15,ISPLINK                                  *LBD 02/84*
         CALL  (15),(VCOPY,CRP,LCRP,VCRP,MOVE),VL           *LBD 02/84*
         B     SELOK                                        *LBD 02/84*
         EJECT                                              *LBD 12/83*
DOSTAT   DS    0H                                           *LBD 12/83*
         IFOFF FLNORM,CMDERR                                *LBD 04/84*
         CLC   VCLVOL(6),=C'MIGRAT' MIGRATED ?             *LBD 02/86*
         BE    CMDERRH            YES - CAN'T DO IT        *LBD 02/86*
         MVC   VCLACT,=CL10'*STAT*'                         *LBD 12/83*
         AP    FPDSCNT,=P'01'                               *LBD 12/83*
         MVC   CMDBUF(12),=C'CMD(%DSNINFO'                  *LBD 12/83*
         MVC   CMDBUF+14(46),CMDDSN                         *LBD 12/83*
         LA    R1,CMDBUF+14                                 *LBD 12/83*
         AR    R2,R1                                        *LBD 12/83*
         MVI   2(R2),C')'                                   *LBD 12/83*
         LA    R1,CMDBUF                                    *LBD 12/83*
         SR    R2,R1                                        *LBD 12/83*
         LA    R2,2(R2)                                     *LBD 12/83*
         ST    R2,CMDBUFL                                   *LBD 12/83*
         L     R15,ISPLINK             -> ISPLINK EPA       *LBD 12/83*
         CALL  (15),(SELECT,CMDBUFL,CMDBUF),VL              *LBD 12/83*
         B     SELOK                                        *LBD 12/83*
         EJECT
UNCAT    DS    0H
         IFOFF FLNORM,CMDERR                                *LBD 04/84*
         MVC   VCLACT,=CL10'*UNCAT*'
         AP    FPDSCNT,=P'01'
         MVC   CMDBUF(10),=C'CMD(DELETE'
         MVC   CMDBUF+12(46),CMDDSN
         LA    R1,CMDBUF+12
         AR    R1,R2
         MVC   1(5,R1),=CL5'NOSCR'
         LA    R1,6(R1)
         MVI   2(R1),C')'
         LA    R1,2(R1)
         LA    R2,CMDBUF
         SR    R1,R2
         ST    R1,CMDBUFL
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(SELECT,CMDBUFL,CMDBUF),VL
         LTR   R15,R15                                      *LBD 09/85*
         BNZ   NOGOOD                                       *LBD 09/85*
         B     SELOK
         EJECT
X        DS    0H
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(TBDELETE,TABLENAM),VL
         OI    FLAG1,XED                                    *LBD 12/83*
         B     SELOK
         EJECT
EXITOK   DS     0H
         LA    R2,0                    SET ZERO RETURN CODE
         SPACE 2
EXIT     DS    0H
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(TBEND,TABLENAM),VL
         CLI   VDEBUG,C'D'             DEBUG ON ?
         BE    NXCNTROL                YES - SKIP CONTROL
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(CONTROL,ERRORS,CANCEL),VL
NXCNTROL DS    0H
         UNPK  VFPDS,FPDSCNT
         OI    VFPDS+3,X'F0'
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(VREPLACE,FPDS,LFPDS,VFPDS),VL
         LTR   R2,R2
         BNZ   EPILOG
         L     R15,ISPLINK             -> ISPLINK EPA             *LBD*
         CALL  (15),(SETMSG,MSG05),VL
         B     EPILOG
NOGOOD   DS    0H                                           *LBD 09/85*
         L     R15,ISPLINK             -> ISPLINK EPA       *LBD 09/85*
         CALL  (15),(SETMSG,MSG05),VL                       *LBD 09/85*
         MVC   VCLACT,=CL10' '                              *LBD 09/85*
         B     SELOK                                        *LBD 09/85*
EPILOG   DS    0H
         L     R15,ISPLINK             -> ISPLINK EPA       *LBD 09/85*
         CALL  (15),(VRESET),VL                             *LBD 09/85*
         LR    R15,R2                                             *LBD*
         $EPILOG ,                     EXIT ISPFLIST
         EJECT
S99FAIL  DS    0H                                         *LBD 11/84*
         S99FAIL
         BR    R2                                         *LBD 11/84*
         EJECT
FIXDSN   DS    0H
         MVC   CMDDSN,BLANKS
         MVC   CMDDSNM,BLANKS                               *LBD 12/83*
         LA    R2,CMDDSN               -> START OF CMD DSN  *LBD 12/83*
         LA    R1,VCLDSN               -> START OF DSN      *LBD 12/83*
         LA    R3,CMDDSNM              -> START OF DSN      *LBD 12/83*
         MVI   0(R2),X'7D'             STARTING QUOTE       *LBD 12/83*
         LA    R2,1(R2)                +1                   *LBD 12/83*
         MVI   0(R3),X'7D'             STARTING QUOTE       *LBD 12/83*
         LA    R3,1(R3)                +1                   *LBD 12/83*
FDSNLP   DS    0H                                           *LBD 12/83*
         CLI   0(R1),C' '              END OF DSN           *LBD 12/83*
         BE    EDSNLP                  YES                  *LBD 12/83*
         MVC   0(1,R2),0(R1)           NO - MOVE DSN        *LBD 12/83*
         MVC   0(1,R3),0(R1)           MOVE AGAIN           *LBD 12/83*
         LA    R1,1(R1)                -> NEXT CHAR         *LBD 12/83*
         LA    R2,1(R2)                -> NEXT CHAR         *LBD 12/83*
         LA    R3,1(R3)                -> NEXT CHAR         *LBD 12/83*
         B     FDSNLP                  KEEP LOOPING         *LBD 12/83*
EDSNLP   DS    0H                      END OF DSN           *LBD 12/83*
         OC    VCLACT,BLANKS           MAKE UPPER CASE      *LBD 12/83*
         CLI   VCLACT,C'A'                                  *LBD 12/83*
         BL    NDSNM                                        *LBD 12/83*
         MVI   0(R3),C'('                                   *LBD 12/83*
         LA    R3,1(R3)                                     *LBD 12/83*
         LA    R1,VCLACT               -> MEM               *LBD 12/83*
DSNMLP   DS    0H                                           *LBD 12/83*
         CLI   0(R1),C' '              END OF MEM           *LBD 12/83*
         BE    EDSNMLP                 YES                  *LBD 12/83*
         MVC   0(1,R3),0(R1)                                *LBD 12/83*
         LA    R1,1(R1)                                     *LBD 12/83*
         LA    R3,1(R3)                                     *LBD 12/83*
         B     DSNMLP                                       *LBD 12/83*
EDSNMLP  DS    0H                                           *LBD 12/83*
         MVI   0(R3),C')'                                   *LBD 12/83*
         LA    R3,1(R3)                                     *LBD 12/83*
NDSNM    DS    0H                                           *LBD 12/83*
         MVI   0(R3),X'7D'             END QUOTE            *LBD 12/83*
         MVI   0(R2),X'7D'             END QUOTE            *LBD 12/83*
         LA    R2,3(R2)                -> END OF DSN+2      *LBD 12/83*
         LA    R3,3(R3)                -> END OF DSN+2      *LBD 12/83*
         LA    R1,CMDDSN               -> START OF DSN
         SR    R2,R1                   GET OFFSET TO END OF DSN+2
         LA    R1,CMDDSNM              -> START OF DSN      *LBD 12/83*
         SR    R3,R1                   OFFSET TO END OF DSN *LBD 12/83*
         BR    R14                     RETURN
         EJECT
*----------------------------------------------------------------------
ISPLINK  DC    V(ISPLINK)              EPA OF ISPLINK             *LBD*
*----------------------------------------------------------------------
FLAG1    DC    X'00'                   FLAG BYTE ONE
FLCONF   EQU   X'80'                   CONFIRM FLAG
MASSBDT  EQU   X'40'                   BDT ALL DATASETS
CODE4    EQU   X'20'                   TBDISPL CODE 4
PASS1    EQU   X'10'                   PASS 1 COMPLETE IF ON*LBD 11/83*
XED      EQU   X'08'                   ROW JUSTED X'D       *LBD 12/83*
*----------------------------------------------------------------------
*        VTOC  SUBROUTINE PARM                                        *
*----------------------------------------------------------------------
         DS    0F                                         *LBD 11/84*
VOLSER   DC    A(VFVOL),Y(6)                              *LBD 11/84*
         DS    0F                                         *LBD 11/84*
UNIT     DC    A(VFUNIT),Y(8)                             *LBD 11/84*
         SPACE 1                                          *LBD 11/84*
         SPACE 2                                          *LBD 11/84*
VTOCPARM DC    A(VTOCPRM)                                 *LBD 11/84*
VTOCPRM  DS    0X                                         *LBD 11/84*
VTOCOPT  DC    X'01'                   PROC OPTION        *LBD 11/84*
         ORG   VTOCOPT                                    *LBD 11/84*
VTOCRADR DC    AL4(0)                                     *LBD 11/84*
         ORG   VTOCOPT+1                                  *LBD 11/84*
VTOCDD   DC    CL8' '                  DDNAME             *LBD 11/84*
VTOCIX   DC    CL44' '                 INDEX              *LBD 11/84*
         ORG   VTOCOPT+1                                  *LBD 11/84*
VTOCP1V  DC    CL6' '                  VOLSER             *LBD 11/84*
VTOCP1D  DC    CL44' '                 DSNAME             *LBD 11/84*
         DC    CL10' '                 BUFFER PAD         *LBD 11/84*
*----------------------------------------------------------------------
         BITSW FLARCH,FLHSM,FLNORM,HRECOV,VTOCF,VTOCI       *LBD 04/84*
         BITSW SELFLG,LOCFLG                                *LBD 06/85*
*----------------------------------------------------------------------
LOCADDR  DC    A(0)                    ADDR OF LOCINDEX    *LBD 08/85*
FPDSCNT  DC    PL4'0'                  COUNT OF PROCESSED DATASETS
FLRCNT   DC    PL4'0'                  COUNT OF ROWS ADDED TO TABLE
OURDDN   DC    A(DYNDDN),Y(8)
DYNDDN   DC    CL8' '                  DYNAMICALLY RETURNED DDNAME
MSGID    DC    CL8' '                  MESSAGE ID FOR LOG FUNCTION
TBQCRP   DC    CL8'CRP'                CRP NAME FOR TBQUERY *LBD 02/84*
PWORK    DC    PL4'0'                                     *LBD 11/84*
TRKA     DC    PL4'0'                                     *LBD 11/84*
TRKU     DC    PL4'0'                                     *LBD 11/84*
*----------------------------------------------------------------------
TABLENAM DC    CL8'FLIST'
TABPANEL DC    CL8'$FLIST'             NAME OF TABLE DISPLAY PANEL
DEFPANEL DC    CL8'$FLIST'             NAME OF TABLE DISPLAY PANEL
VTOCPANL DC    CL8'$FLISTV'            NAME OF VTOC TBDISPL PANEL
CHAR     DC    C'CHAR'
FIXED    DC    C'FIXED'
PANDEL   DC    CL8'FLISTDL'            NAME OF DELETE PROMPT PANEL
SELPANL  DC    CL8'FLISTSEL'           FLIST SELECT PANEL   *LBD 06/85*
PANREN   DC    CL8'FLISTR'             NAME OF RENAME PROMPT PANEL
TBQUERY  DC    C'TBQUERY'                                   *LBD 02/84*
TBBOTTOM DC    C'TBBOTTOM'                                  *LBD 02/84*
TBADD    DC    C'TBADD'
TBPUT    DC    C'TBPUT'
TBEND    DC    C'TBEND'
TBDISPL  DC    C'TBDISPL'
TBDELETE DC    C'TBDELETE'
NOWRITE  DC    C'NOWRITE'
REPLACE  DC    C'REPLACE'
TBCREATE DC    C'TBCREATE'
TBTOP    DC    C'TBTOP'
TBSKIP   DC    C'TBSKIP'
TBSARG   DC    C'TBSARG'
TBSCAN   DC    C'TBSCAN'
VDEFINE  DC    C'VDEFINE'
VCOPY    DC    C'VCOPY'
VPUT     DC    C'VPUT'
VRESET   DC    CL8'VRESET'
MOVE     DC    C'MOVE'
VREPLACE DC    C'VREPLACE'
VGET     DC    C'VGET'
LOG      DC    C'LOG'
SETMSG   DC    C'SETMSG'
SELECT   DC    C'SELECT'
CONTROL  DC    C'CONTROL'
ERRORS   DC    C'ERRORS'
RETURN   DC    C'RETURN'
CANCEL   DC    C'CANCEL'
DISPLAY  DC    C'DISPLAY'
SAVE     DC    C'SAVE'
RESTORE  DC    C'RESTORE'
SHARED   DC    C'SHARED'                                    *LBD 04/84*
EDIT     DC    C'EDIT'
BROWSE   DC    C'BROWSE'
SN       DC    A(-1)                   SKIP -1 ROWS         *LBD 02/84*
*----------------------------------------------------------------------
*        MESSAGE ID'S IN ISPMLIB
*----------------------------------------------------------------------
MSG00    DC    CL8'FLSTM000'           INVALID SELECT OPTION
MSG01    DC    CL8'FLSTM001'           UNABLE TO ALLOC FLISTIN
MSG02    DC    CL8'FLSTM002'           UNABLE TO ALLOC ARCH D/S
MSG03    DC    CL8'FLSTM003'           INVALID ISPFLIST COMMAND
MSG04    DC    CL8'FLSTM004'           TBCREATE FAILED
MSG05    DC    CL8'FLSTM005'           FPDS DATASETS PROCESSED
MSG06    DC    CL8'FLSTM006'           DATASET CLDSN HSM DELETED
MSG07    DC    CL8'FLSTM007'           DATASET CLDSN DELETED
MSG08    DC    CL8'FLSTM008'           DATASET CLDSN HBDELETED
MSG09    DC    CL8'FLSTM009'           DATASET CLDSN RENAMED TO NCLDSN
*----------------------------------------------------------------------
MSG10    DC    CL8'FLSTM010'           DATASET CLDSN RECALLED
MSG11    DC    CL8'FLSTM011'           DATASET CLDSN RECOVERED
MSG12    DC    CL8'FLSTM012'           DATASET CLDSN NOT FOUND
MSG13    DC    CL8'FLSTM013'           FLROWS DATASETS FOUND
MSG14    DC    CL8'FLSTM014'           CLDSN DATASET FOUND
MSG15    DC    CL8'FLSTM015'           DATASET CLDSN EMPTY
MSG16    DC    CL8'FLSTM016'           FOPT IS INVALID
MSG17    DC    CL8'FLSTM017'           DATASET ALLOCATED
MSG18    DC    CL8'FLSTM018'           SELECT OPTION NOT VALID W/MODE
MSG19    DC    CL8'FLSTM019'           DATASET IS NO LONGER CATALOGED
*----------------------------------------------------------------------
MSG20    DC    CL8'FLSTM020'           VOLSER NOT AVAILABLE
MSG21    DC    CL8'FLSTM021'           VTOC ERRORS
MSG22    DC    CL8'FLSTM022'           D/S AND TRK SUMM   *LBD 11/84*
MSG23    DC    CL8'FLSTM023'           SORT INVALID        *LBD 05/85*
MSG24    DC    CL8'FLSTM024'           INVALID SORT NAME   *LBD 05/85*
MSG25    DC    CL8'FLSTM025'           COMMAND EXEC ERROR  *LBD 09/85*
MSG26    DC    CL8'FLSTM026'           D/S MIGRATED CAN'T DO IT
*----------------------------------------------------------------------
SORTFLDS DC    C'('                                        *LBD 05/85*
SORTFLD  DC    CL8' ',C' C,'                               *LBD 05/85*
SORTAD   DC    C'A)'                                       *LBD 05/85*
*                                                          *LBD 05/85*
TBLSORT  DS    0H  SORT FIELD NAMES  AND SORT A/D          *LBD 06/85*
         DC    CL8'DSN',CL8'CLDSN',C'A'                    *LBD 05/85*
         DC    CL8'NAME',CL8'CLDSN',C'A'                   *LBD 05/85*
         DC    CL8'VOL',CL8'CLVOL',C'A'                    *LBD 05/85*
         DC    CL8'USED',CL8'CLTRKU',C'D'                  *LBD 05/85*
         DC    CL8'SIZE',CL8'CLTRK',C'D'                   *LBD 05/85*
         DC    CL8'DSORG',CL8'CLDSORG',C'A'                *LBD 05/85*
         DC    CL8'EXTENTS',CL8'CLEXT',C'D'                *LBD 05/85*
         DC    CL8'CDATE',CL8'CLCDATE',C'A'                *LBD 05/85*
         DC    CL8'RDATE',CL8'CLRDATE',C'A'                *LBD 05/85*
         DC    8X'FF'           END OF TABLE               *LBD 05/85*
*----------------------------------------------------------------------
NAMES    DC    C'(CLDSN,CLVOL,CLACT,'
         DC    C'CLCDATE,CLRDATE,CLEXT,'                  *LBD 11/84*
         DC    C'CLDSORG,CLRECFM,CLLRECL,CLBLK,CLTRK,'    *LBD 11/84*
         DC    C'CLTRKU)'                                 *LBD 11/84*
*----------------------------------------------------------------------
         VDS   CLDSORG,8                                  *LBD 11/84*
         VDS   CLLRECL,5                                  *LBD 11/84*
         VDS   CLRECFM,3                                  *LBD 11/84*
         VDS   CLBLK,5                                    *LBD 11/84*
         VDS   CLTRK,5                                    *LBD 11/84*
         VDS   CLTRKU,5                                   *LBD 11/84*
         VDS   CLCDATE,6                                  *LBD 11/84*
         VDS   CLRDATE,6                                  *LBD 11/84*
         VDS   CLEXT,2                 EXTENTS            *LBD 11/84*
         VDS   FUNIT,8                 UNIT               *LBD 11/84*
*----------------------------------------------------------------------
         VDS   FLTRKA,8                TOTAL TRACK ALLOC  *LBD 11/84*
         VDS   FLTRKU,8                TOTAL TRACK USED   *LBD 11/84*
*----------------------------------------------------------------------
         VDS   ZENVIR,40        ISPF VERSION/LEVEL         *LBD 05/85*
*----------------------------------------------------------------------
DSLIST   DC    C'(DSLIST)'
CLDSN    DC    C'(CLDSN)'
CLVOL    DC    C'(CLVOL)'
CLACT    DC    C'(CLACT)'
FOPT     DC    C'(FOPT)'
ZCMD     DC    C'(ZCMD)'
DEBUG    DC    C'(DEBUG)'
FVOL     DC    C'(FVOL)'                                  *LBD 11/84*
ZPREFIX  DC    C'(ZPREFIX)'
SELO     DC    C'(SELO)'
DSN1     DC    C'(DSN1)'
EDSN     DC    C'(EDSN)'
NCLDSN   DC    C'(NCLDSN)'
IDSN     DC    C'(IDSN)'                                    *LBD 12/83*
FDOPT    DC    C'(FDOPT)'
FLROWS   DC    C'(FLROWS)'
FPDS     DC    C'(FPDS)'
CRP      DC    C'(CRP)'                                     *LBD 02/84*
CLDSNS   DC    C'(CLDSN,CLVOL)'                           *LBD 11/84*
*----------------------------------------------------------------------
VDSLIST  DC    CL44' '
VCLDSN   DC    CL44' '
VCLVOL   DC    CL8' '
VCLACT   DC    CL10' '
VZCMD    DC    CL40' '
VDEBUG   DC    CL8' '
VFVOL    DC    CL6' '                                     *LBD 11/84*
VZPREFIX DC    CL8' '
VSELO    DC    CL9' '
VDSN1    DC    CL56' '
VEDSN    DC    CL46' '
VNCLDSN  DC    CL46' '
VIDSN    DC    CL56' '                                      *LBD 12/83*
VCRP     DC    D'0'                                         *LBD 02/84*
VFDOPT   DC    CL4' '
VFPDS    DC    CL4' '
VFLROWS  DC    CL4' '
VFOPT    DC    CL2' '
*----------------------------------------------------------------------
LCRP     DC    A(L'VCRP)                                    *LBD 02/84*
LDSLIST  DC    A(L'VDSLIST)
LCLDSN   DC    A(L'VCLDSN)
LCLVOL   DC    A(L'VCLVOL)
LCLACT   DC    A(L'VCLACT)
LFOPT    DC    A(L'VFOPT)
LZCMD    DC    A(L'VZCMD)
LDEBUG   DC    A(L'VDEBUG)
LFVOL    DC    A(L'VFVOL)                                 *LBD 11/84*
LZPREFIX DC    A(L'VZPREFIX)
LSELO    DC    A(L'VSELO)
LDSN1    DC    A(L'VDSN1)
LEDSN    DC    A(L'VEDSN)
LNCLDSN  DC    A(L'VNCLDSN)
LIDSN    DC    A(L'VIDSN)                                   *LBD 12/83*
LFDOPT   DC    A(L'VFDOPT)
LFPDS    DC    A(L'VFPDS)
LFLROWS  DC    A(L'VFLROWS)
*----------------------------------------------------------------------
*        SECURE COMMAND BUFFER
*----------------------------------------------------------------------
SECUREB  DC    C'CMD(SECURE) '
SECUREBL EQU   *-SECUREB               LEN OF SECURE CMD BUFFER
*----------------------------------------------------------------------
*        HLIST  COMMAND BUFFER
*----------------------------------------------------------------------
HLISTB   DC    C'CMD(HLIST  ODS('
HLISTDD  DC    CL8' '
         DC    C') BCDS LEVEL('
HLISTLVL DC    CL20' ',C')'
HLISTCBL EQU   *-HLISTB                LEN OF HLIST CMD BUFFER
HLSTDSN  DC    A(HLISTDSN),Y(44)
HLISTDSN DC    CL44' '
*----------------------------------------------------------------------
*        ALLOC COMMAND BUFFER                               *LBD 04/84*
*----------------------------------------------------------------------
ALLCMDL  DC    A(L'ALLCMD)                                  *LBD 04/84*
ALLCMD   DC    C'PANEL(FLISTAL)'                            *LBD 04/84*
*----------------------------------------------------------------------
*        LOCINDEX PARM LIST
*----------------------------------------------------------------------
LOCPARMS DC    A(INDEX)
         DC    A(VCLDSN,VCLVOL)
LOCDATA  DC    A(0)                     GETMAINED 4K       *LBD 08/85*
LOCRC    DC    A(RC)                                       *LBD 11/85*
RC       DC    F'0'                                        *LBD 11/85*
         ORG   *-4
         DC    X'80'
LOCDATAS DC    A(0)                     FOR FREEMAIN ADDR  *LBD 08/85*
*----------------------------------------------------------------------
CMDBUFL  DC    A(0)                    LEN OF SELECT COMMAND BUFFER
CMDBUF   DC    CL255' '                COMMAND BUFFER
MVCBUF   MVC   CMDBUF(0),0(R2)         EXECUTED MOVE
*----------------------------------------------------------------------
CMDDSN   DC    CL46' '
CMDDSNM  DC    CL56' '                                      *LBD 12/83*
         ORG   CMDDSNM                                     *LBD 08/85*
INDEX    DC    CL44' '                  INDEX FOR LOCINDEX *LBD 08/85*
         ORG   ,                                           *LBD 08/85*
*----------------------------------------------------------------------
COPYSEL  DC    C'PANEL(COPY)'                               *LBD 12/83*
RELPANEL DC    C'PANEL(FLREL)'                              *LBD 06/85*
*----------------------------------------------------------------------
ARCHDSN  DC    A(ARCHDSNV),AL2(ARCHDSNL)
ARCHDSNV DC    C'#A1500.ARCHIVE.DATA'
ARCHDSNL EQU   *-ARCHDSNV
ARCHMEM  DC    A(ARCHMEMN),AL2(8)
ARCHMEMN DC    CL8' '
*----------------------------------------------------------------------
BLANKS   DC    CL255' '
PREFIX   DC    CL8' '                                       *LBD 11/83*
SAVESEL  DC    CL9' '              SAVE FOR COMMAND REPEAR  *LBD 03/85*
HSMWAIT  DC    CL6' '
HOLDVOL  DC    CL6' '             HOLDING AREA FOR VOLSER   *LBD 04/84*
         SPACE 2                                            *LBD 04/84*
CAMLST   CAMLST NAME,DSNAME,,LOCAREA                        *LBD 04/84*
DSNAME   DC    CL44' '                                      *LBD 04/84*
LOCAREA  DS    0D                                           *LBD 04/84*
         DC    265C' '                                      *LBD 04/84*
         EJECT
FLISTIN  DCB   DSORG=PS,MACRF=GL,DDNAME=FLISTIN,EODAD=EOF
FLISTINL EQU   *-FLISTIN               LENGTH OF THIS DCB
         EJECT
MODELDCB DCB   DSORG=PS,MACRF=GL,DDNAME=FLISTIN,EODAD=EOF
         EJECT
         LTORG
         EJECT
         DYNSPACE
         EJECT
         IEFZB4D0
         EJECT
         IEFZB4D2
         END
         TITLE 'CVAF SUB-ROUTINE'                         *LBD 11/84*
CVAFSUB  $PROLOG R12
         EJECT
         L     1,0(R1)                 * LOAD ADDR OF PARM
         CLI   0(R1),X'01'             INITIAL OPTION ?
         BE    INIT                    YES
         CLI   0(R1),X'02'             CONTINUE
         BE    CONT                    YES
         CLI   0(R1),X'03'             TERMINATE OPTION ?
         BE    TERM                    YES
         CLI   0(R1),X'04'             SPECIFIC DSN ?     *LBD 11/84*
         BE    ONEDS                   YES                *LBD 11/84*
         $EPILOG 98                    UNKNOWN OPTION
CONT     DS    0H
         L     R5,DEBADDR
         LR    R10,R1                  LOAD RET ADDR
         B     READ                    CONTINUE READING
TERM     DS    0H
         B     EOF                     INSURE FILES CLOSED
ONEDS    DS    0H                                         *LBD 11/84*
         SETON DS1                     SET FLAG FOR 1 DSN *LBD 11/84*
         MVC   F3BUFFER(44),7(R1)      MOVE DSN           *LBD 11/84*
         MVC   OVOL,1(R1)              MOVE VOLSER        *LBD 11/84*
         LR    R10,R1                  LOAD RET ADDR      *LBD 11/84*
         OBTAIN CAMLST1                                   *LBD 11/84*
         LTR   R15,R15                 FORMAT 4 OK        *LBD 11/84*
         BNZ   EOFDSE                  ERROR              *LBD 11/84*
         LA    R1,BUFFER                                  *LBD 11/84*
         USING IECSDSL4,R1
         MVC   TRKCYL(2),DS4DEVCT+2    SAVE TRKS/CYL      *LBD 11/84*
         DROP  R1
         OBTAIN CAMLST2                                   *LBD 11/84*
         LTR   R15,R15                                    *LBD 11/84*
         BNZ   EOFDSE                  DSN NOT FOUND      *LBD 11/84*
         LA    R9,BUFFER-44            -> DATA            *LBD 11/84*
         B     NOCLVL                  GO FOR IT          *LBD 11/84*
INIT     DS    0H
         LR    R10,R1                  LOAD RET ADDR
         LA    R1,1(R1)                SKIP OPTION
         LA    R2,VTOCDCB
         USING IHADCB,R2
         MVC   DCBDDNAM,=CL8' '        CLEAR DDNAME
         MVC   DCBDDNAM(8),0(R1)       MOVE DDNAME
         LA    R1,8(R1)                PAST DDNAME
         CLI   0(R1),C' '              ANY INDEX ?        *LBD 11/84*
         BE    FIXJFCB                 NO                 *LBD 11/84*
         LA    R2,LEVEL                   YES             *LBD 11/84*
MVLVLC   DS    0H                                         *LBD 11/84*
         MVC   0(1,R2),0(R1)                              *LBD 11/84*
         LA    R2,1(R2)                                   *LBD 11/84*
         LA    R1,1(R1)                                   *LBD 11/84*
         CLI   0(R1),C' '                                 *LBD 11/84*
         BE    STLENLVL                                   *LBD 11/84*
         B     MVLVLC                                     *LBD 11/84*
STLENLVL DS    0H                                         *LBD 11/84*
         LA    R1,LEVEL                                   *LBD 11/84*
         SR    R2,R1                                      *LBD 11/84*
         BCTR  R2,R0                   LESS 1             *LBD 11/84*
         STH   R2,LENLVL                                  *LBD 11/84*
         SETON LVLFLAG                 SET FLAG ON
         EJECT
FIXJFCB  DS    0H
         RDJFCB VTOCDCB
         OI    JFCBTSDM,JFCNWRIT       TURN WRITE BACK FLAG ON
         MVC   JFCBDSNM,DSN4           SET FOR VTOC
         MVC   OVOL,JFCBVOLS           SET VOLSER
         XC    BFLHFL,BFLHFL
         OI    BFLHFL,BFLHDSCB         READ DSCB W/BUFFER
         MVI   BFLHNOE,1               SET FOR 1 ENTRY
         LA    R1,BUFFER
         ST    R1,BFLEBUF              SAVE ADDR
         LA    R1,140
         STC   R1,BFLELTH              SAVE LENGTH
         OI    BFLEFL,BFLECHR
         EJECT
OPENV    OPEN  VTOCDCB,TYPE=J
         LA    R2,VTOCDCB
         USING IHADCB,R2
         L     R5,DCBDEBAD               -> DEB
         ST    R5,DEBADDR                                 *LBD 11/84*
         DROP  R2
         USING DEBBASIC,R5
         ICM   R4,7,DEBSUCBB           -> UCB
         DROP  R5
         CVAFTST UCB=(R4)
         CH    R15,=H'08'              HAS IX VTOC
         BNE   NOIX                    NO
         SETON IX
         LA    R1,96
         STC   R1,BFLELTH              SAVE LENGTH
         IFOFF LVLFLAG,READIX
         MVC   RETDSN,LEVEL            SET INITIAL SEARCH ARG
         B     READIX
         EJECT
NOIX     DS    0H                                         *LBD 12/84*
         MVC   F3BUFFER(44),7(R1)      MOVE DSN           *LBD 12/84*
         OBTAIN CAMLST1                                   *LBD 12/84*
         LA    R1,BUFFER                                  *LBD 12/84*
         USING IECSDSL4,R1                                *LBD 12/84*
         MVC   TRKCYL(2),DS4DEVCT+2    SAVE TRKS/CYL      *LBD 12/84*
         MVC   BUFFER(44),DSN4         SET INITIAL DSN    *LBD 11/84*
         B     READNIX                                    *LBD 12/84*
         DROP  R1
READ     DS    0H
         IFOFF IX,READNIX
READIX   DS    0H                                         *LBD 11/84*
         IFON  FIRST,READIXD                              *LBD 11/84*
         MVC   BUFFER(44),DSN4         SET INITIAL DSN    *LBD 11/84*
         CVAFDIR ACCESS=READ,DEB=(R5),DSN=BUFFER,BUFLIST=BUFLIST
         SETON FIRST                                      *LBD 11/84*
         L     R1,BFLEBUF              -> BUFFER
         USING IECSDSL4,R1
         MVC   LASTDSCB,DS4HPCHR       SAVE HIGHEST DSCB
         MVC   TRKCYL(2),DS4DEVCT+2    SAVE TRKS/CYL      *LBD 11/84*
         DROP  R1
         B     READ
         SPACE 2                                          *LBD 11/84*
READIXD  CVAFSEQ ACCESS=GT,BUFLIST=BUFLIST,DEB=(R5),                   X
               DSN=RETDSN
         B     DOIT
READNIX  CVAFSEQ ACCESS=GT,BUFLIST=BUFLIST,DEB=(R5)
         EJECT
DOIT     DS    0H
         USING CVPL,R1
         CLI   CVSTAT,0                ANY STATUS
         BE    CKSTAT
         CLI   CVSTAT,STAT032          END OF DATA
         BE    EOF                     YES - ALL OK
         SR    R11,R11
         IC    R11,CVSTAT
         B     EOFE
         DROP  R1
CKSTAT   DS    0H
         LTR   R15,R15
         BZ    READOK
         C     R15,=F'04'
         BE    EOF
         EJECT
READOK   EQU   *
         IFON  IX,DOIXDSN
         CLC   LASTDSCB,BFLEARG        LAST DSCB ?
         BE    EOF                     YES
         L     R9,BFLEBUF              -> BUFFER
         USING IECSDSL1,R9
         CLI   DS1FMTID,C'1'           FORMAT 1 DSCB ?
         BNE   READ                    NO
         MVC   RETDSN,DS1DSNAM         MOVE DSNAME        *LBD 11/84*
         DROP  R9
         L     R9,BFLEBUF              -> BUFFER
         B     CKDSORG
         EJECT
DOIXDSN  DS    0H
         L     R9,BFLEBUF              -> BUFFER
         S     R9,=F'44'               LESS DSN LEN
         USING IECSDSL1,R9
CKDSORG  DS    0H
         IFOFF LVLFLAG,NOCLVL
         LH    R4,LENLVL
         LTR   R4,R4                                      *LBD 11/84*
         BZ    NOCLVL                                     *LBD 11/84*
         EX    R4,LVLCLC               SAME LEVEL ?
         BNE   READ                    NO - SKIP IT
NOCLVL   DS    0H                                         *LBD 11/84*
         LA    R4,VSAM
         TM    DS1DSORG+1,X'08'        VSAM
         BO    MVDSORG
         LA    R4,ISAM
         TM    DS1DSORG,DS1DSGIS       ISAM
         BO    MVDSORG
         LA    R4,PS
         TM    DS1DSORG,DS1DSGPS       PS
         BO    MVDSORG
         LA    R4,DA
         TM    DS1DSORG,DS1DSGDA       DA
         BO    MVDSORG
         LA    R4,PO
         TM    DS1DSORG,DS1DSGPO       PO
         BO    MVDSORG
         LA    R4,UNK
MVDSORG  MVC   DSORG,0(R4)
         EJECT                                            *LBD 11/84*
         LH    R4,DS1BLKL              BLKSIZE            *LBD 11/84*
         CVD   R4,DWK                                     *LBD 11/84*
         MVC   BLKSIZE(6),=X'402020202021'                *LBD 11/84*
         ED    BLKSIZE(6),DWK+5                           *LBD 11/84*
         LH    R4,DS1LRECL             LRECL              *LBD 11/84*
         CVD   R4,DWK                                     *LBD 11/84*
         MVC   LRECL(6),=X'402020202021'                  *LBD 11/84*
         ED    LRECL(6),DWK+5                             *LBD 11/84*
         MVC   CDATE(6),=X'20214B202020'                  *LBD 11/84*
         MVC   RDATE(6),=X'20214B202020'                  *LBD 11/84*
         XR    R4,R4
         IC    R4,DS1CREDT
         CVD   R4,DWK
         ICM   R3,B'0011',DWK+L'DWK-2
         ICM   R4,B'0011',DS1CREDT+1
         CVD   R4,DWK
         SRL   R3,4
         STC   R3,DWK+5
         ED    CDATE,DWK+5
         SPACE 1
         XR    R4,R4
         IC    R4,DS1REFD
         CVD   R4,DWK
         ICM   R3,B'0011',DWK+L'DWK-2
         ICM   R4,B'0011',DS1REFD+1
         CVD   R4,DWK
         SRL   R3,4
         STC   R3,DWK+5
         ED    RDATE,DWK+5
         CLC   RDATE+3(3),=C'000'      ANY DATE HERE      *LBD 11/84*
         BNE   RDATEOK                                    *LBD 11/84*
         MVC   RDATE(6),=C'**.****'                       *LBD 11/84*
RDATEOK  DS    0H                                         *LBD 11/84*
         SPACE 1
         SR    R8,R8                                      *LBD 11/84*
         IC    R8,DS1NOEPV             # OF EXTENTS       *LBD 11/84*
         CVD   R8,DWK                                     *LBD 11/84*
         MVC   EXT(4),=X'40202021'                        *LBD 11/84*
         ED    EXT(4),DWK+6                               *LBD 11/84*
         EJECT                                            *LBD 11/84*
****     DETERMINE RECORD FORMAT                          *LBD 11/84*
         MVC   RECFM,=CL3' '           RESET RECFM        *LBD 11/84*
         LA    R4,RECFM                                   *LBD 11/84*
         TM    DS1RECFM,DCBRECU        UNDEF              *LBD 11/84*
         BNO   NOU                                        *LBD 11/84*
         MVI   0(R4),C'U'                                 *LBD 11/84*
         LA    R4,1(R4)                                   *LBD 11/84*
         B     CKB                                        *LBD 11/84*
NOU      TM    DS1RECFM,DCBRECV        VARIABLE           *LBD 11/84*
         BZ    NOV                                        *LBD 11/84*
         MVI   0(R4),C'V'                                 *LBD 11/84*
         LA    R4,1(R4)                                   *LBD 11/84*
         B     CKB                                        *LBD 11/84*
NOV      TM    DS1RECFM,DCBRECF        FIXED              *LBD 11/84*
         BZ    NOF                                        *LBD 11/84*
         MVI   0(R4),C'F'                                 *LBD 11/84*
         LA    R4,1(R4)                                   *LBD 11/84*
         B     CKB                                        *LBD 11/84*
NOF      MVI   0(R4),C'?'                                 *LBD 11/84*
         LA    R4,1(R4)                                   *LBD 11/84*
CKB      DS    0H                      CHECK BLOCKING     *LBD 11/84*
         TM    DS1RECFM,DCBRECBR                          *LBD 11/84*
         BZ    NOB                                        *LBD 11/84*
         MVI   0(R4),C'B'                                 *LBD 11/84*
         LA    R4,1(R4)                                   *LBD 11/84*
NOB      DS    0H                                         *LBD 11/84*
         TM    DS1RECFM,DCBRECSB       SPANNED ?          *LBD 11/84*
         BZ    NOS                                        *LBD 11/84*
         MVI   0(R4),C'S'                                 *LBD 11/84*
         LA    R4,1(R4)                                   *LBD 11/84*
NOS      DS    0H                                         *LBD 11/84*
         TM    DS1RECFM,DCBRECCA       ASA CC             *LBD 11/84*
         BZ    NOA                                        *LBD 11/84*
         MVI   0(R4),C'A'                                 *LBD 11/84*
         B     OKREC                                      *LBD 11/84*
NOA      TM    DS1RECFM,DCBRECCM       MACH CC            *LBD 11/84*
         BZ    OKREC                                      *LBD 11/84*
         MVI   0(R4),C'M'                                 *LBD 11/84*
OKREC    DS    0H                                         *LBD 11/84*
         EJECT                                            *LBD 11/84*
*        DETERMINE TRACKS USED                            *LBD 11/84*
         CLC   DS1EXT1,=10X'00'   NULL DATASET            *LBD 12/84*
         BE    NULLDS             YES                     *LBD 12/84*
         XC    EXTENTW(EXTENTWL),EXTENTW CLEAR ALL EXTS   *LBD 11/84*
         MVC   EXTENT1A,DS1EXT1                           *LBD 11/84*
         CLC   DS1PTRDS,=XL5'0'        ANY FMT 3 ?        *LBD 11/84*
         BE    DOF3A                   NO - SKIP OBTAIN   *LBD 11/84*
         MVC   VTOCADDR,DS1PTRDS       GET -> FMT 3       *LBD 11/84*
         OBTAIN CAMLIST                GET IT             *LBD 11/84*
         LTR   R15,R15                 OK ?               *LBD 11/84*
         BE    DOF3                    YES                *LBD 11/84*
         MVC   TRACKSU+1(5),=C'ERROR'                     *LBD 11/84*
         B     RETURN                                     *LBD 11/84*
DOF3     DS    0H                                         *LBD 11/84*
         LA    R7,F3BUFFER                                *LBD 11/84*
         USING IECSDSL3,R7                                *LBD 11/84*
         MVC   EXTENT3A,DS3EXTNT                          *LBD 11/84*
         MVC   EXTENT3B,DS3ADEXT                          *LBD 11/84*
         DROP  R7                                         *LBD 11/84*
DOF3A    DS    0H                                         *LBD 11/84*
         LA    R7,EXTENTW
EXTENTS  EQU   *
         USING EXTENT,R7
         CLI   EXTTYPE,0
         BNH   EXTLOOP
         LH    R1,EXTLOCC
         MH    R1,TRKCYL
         AH    R1,EXTLOHH
         LH    R0,EXTHICC
         MH    R0,TRKCYL
         AH    R0,EXTHIHH
         BCTR  R1,0
         SR    R0,R1
         AH    R0,TRKS
         STH   R0,TRKS
         SPACE 1
EXTLOOP  LA    R7,EXTNEXT
         BCT   R8,EXTENTS
         SPACE 1
EXTCVRT  EQU   *
         ICM   R8,B'11',DS1LSTAR
         CLI   DS1LSTAR+2,0                                       82089
         BNH   LSTAR0
         LA    R8,1(R8)
LSTAR0   DS    0H                                         *LBD 11/84*
         STH   R8,TRKSU                                   *LBD 11/84*
         EJECT                                            *LBD 11/84*
FMTSIZE  DS    0H                                         *LBD 11/84*
         LH    R3,TRKS                 GET TRACK COUNT    *LBD 11/84*
         XC    TRKS,TRKS               CLEAR IT           *LBD 11/84*
         CVD   R3,DWK                  CONVERT ALLOC TRKS *LBD 11/84*
         MVC   TRACKS(6),=X'402020202021' EDIT MASK       *LBD 11/84*
         ED    TRACKS(6),DWK+5         EDIT IT            *LBD 11/84*
         LH    R3,TRKSU                GET TRACK COUNT    *LBD 11/84*
         XC    TRKSU,TRKSU             CLEAR IT           *LBD 11/84*
         CVD   R3,DWK                  CONVERT ALLOC TRKS *LBD 11/84*
         MVC   TRACKSU(6),=X'402020202021'                *LBD 11/84*
         ED    TRACKSU(6),DWK+5        EDIT IT            *LBD 11/84*
         B     RETURN                                     *LBD 12/84*
         SPACE 2                                          *LBD 12/84*
NULLDS   DS    0H                                         *LBD 12/84*
         MVC   TRACKSU(6),=CL6'0'                         *LBD 12/84*
         MVC   TRACKS(6),=CL6'0'                          *LBD 12/84*
         EJECT                                            *LBD 11/84*
RETURN   DS    0H
         LA    R1,RETPARM
         ST    R1,0(R10)               SAVE RET ADDR
         $EPILOG 0
         EJECT
EOFDSE   $EPILOG 8                     OBTAIN ERROR       *LBD 11/84*
         SPACE 1                                          *LBD 11/84*
EOF      CLOSE (VTOCDCB,FREE)
         SETOF FIRST                                      *LBD 11/84*
         $EPILOG 4
EOFE     CLOSE (VTOCDCB,FREE)
         SETOF FIRST                                      *LBD 11/84*
         LR    R15,R11
         $EPILOG
         LTORG
         BITSW IX,LVLFLAG,FIRST,DS1
DWK      DC    D'0'                    WORK AREA          *LBD 11/84*
ISAM     DC    CL8'ISAM'
PS       DC    CL8'PS'
DA       DC    CL8'DA'
PO       DC    CL8'PO'
VSAM     DC    CL8'VSAM'
UNK      DC    CL8'UNKNOWN'
LVLCLC   CLC   LEVEL(0),RETDSN         ** EXECUTED **
DEBADDR  DC    A(0)                                       *LBD 11/84*
TRKCYL   DC    H'0'                    TRKS/CYL FROM FMT4 *LBD 11/84*
TRKS     DC    H'0'                                       *LBD 11/84*
TRKSU    DC    H'0'                                       *LBD 11/84*
LENLVL   DC    H'0'
LEVEL    DC    CL44' '
EXTCOUNT DC    X'00'                                      *LBD 11/84*
LASTDSCB DC    XL5'00'
         DS    0F
EXLST    DC    X'09000000'
         DC    X'87',AL3(JFCBDSNM)
         EJECT
         IEFJFCBN LIST=YES
         EJECT
VTOCDCB  DCB   DSORG=DA,DDNAME=CVAFVTOC,EXLST=EXLST,MACRF=E
         EJECT
CAMLIST  CAMLST SEEK,VTOCADDR,OVOL,F3BUFFER
CAMLST1  CAMLST SEARCH,DSN4,OVOL,BUFFER                   *LBD 11/84*
CAMLST2  CAMLST SEARCH,F3BUFFER,OVOL,BUFFER               *LBD 11/84*
DSN4     DC    44X'04'                 FORMAT4 DSCB       *LBD 11/84*
VTOCADDR DC    XL5'0'                                     *LBD 11/84*
F3BUFFER DC    CL140' '                                   *LBD 11/84*
EXTENTW  DS    0H                                         *LBD 11/84*
EXTENT1A DC    XL30'0'                                    *LBD 11/84*
EXTENT3A DC    XL40'0'                                    *LBD 11/84*
EXTENT3B DC    XL90'0'                                    *LBD 11/84*
EXTENTWL EQU   *-EXTENTW                                  *LBD 11/84*
         SPACE 2                                          *LBD 11/84*
BUFLIST  ICVAFBFL DSECT=NO
BUFFER   DC    CL140'  '               ACTUAL DATA
RETDSN   DC    CL44'  '                ACTUAL DSN
OVOL     DC    CL6' '                  VOLSER
DSORG    DC    CL8' '                  DSORG
LRECL    DC    CL6' '                  LRECL              *LBD 11/84*
BLKSIZE  DC    CL6' '                  BLKSIZE            *LBD 11/84*
RECFM    DC    CL3' '                  RECFM              *LBD 11/84*
TRACKS   DC    CL6' '                  TRACKS ALLOC       *LBD 11/84*
CDATE    DC    CL6' '                  CREATE DATE        *LBD 11/84*
RDATE    DC    CL6' '                  REFERENCE DATE     *LBD 11/84*
EXT      DC    CL4' '                  # EXTENTS          *LBD 11/84*
TRACKSU  DC    CL6' '                  TRACKS USED        *LBD 11/84*
RETPARM  DC    A(RETDSN,OVOL,DSORG)
         DC    A(LRECL,BLKSIZE,RECFM,TRACKS)              *LBD 11/84*
         DC    A(CDATE,RDATE,EXT,TRACKSU)                 *LBD 11/84*
         EJECT
         DSECT
         IECSDSL1 (1)
         EJECT
         DSECT
         IECSDSL1 (3)
         EJECT
         DSECT
         IECSDSL1 (4)
         EJECT
CVPL     ICVAFPL DSECT=YES
         EJECT
         DCBD  DSORG=DA
         EJECT
         IEZDEB
         EJECT                                            *LBD 11/84*
EXTENT   DSECT
EXTTYPE  DS    BL1
EXTSEQ   DS    XL1
EXTLOCC  DS    HL2
EXTLOHH  DS    HL2
EXTHICC  DS    HL2
EXTHIHH  DS    HL2
EXTNEXT  EQU   *
         END
