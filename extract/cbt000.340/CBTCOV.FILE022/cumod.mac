         TITLE 'SMP DELTA DECK GENERATOR PROGRAM 02-28-86'
*---------------------------------------------------------------------*
*        MODULE: CUMOD                                                *
*---------------------------------------------------------------------*
*        FUNCTION:                                                    *
*              THIS PROGRAM WILL GENERATE AN IEBUPDTE DECK WITH SMP   *
*              CONTROL CARDS (OPTIONAL) BY COMPARING 2 SOURCE DECKS.  *
*              ONLY THE REPORT IS PRODUCED IF SMP=N IS SPECIFIED.     *
*---------------------------------------------------------------------*
*        FLOW:                                                        *
*              1) ACQUIRE PARM FROM ISPF VARIABLES                    *
*              2) INVOKE SMPDATA TO GET CDS INFORMATION.              *
*              3) READ NEWSRC FILE AND COMPARE WITH OLDSRC.           *
*              4) ALL NEW RECORDS GENERATE A RECORD IN DELTA CARD.    *
*              5) ALL MISSING RECORDS GENERATE A MESSAGE IN THE       *
*                 REPORT AND WILL     GENERATE A DELTA DECK CARD.     *
*              6) A CHECK IS MADE FOR AT LEAST 1 VALID PROLOG         *
*                 DOCUMENTATION RECORD WHICH IS IDENTIFIED BY         *
*                 EITHER *@ IN COLS 1-2 OR .*@ IN COLS 1-3 FOR        *
*                 MACROS.                                             *
*              7) ALL RECORDS PUT INTO THE DELTA DECK WILL SHOW       *
*                 ON THE REPORT WITH --- IN THE MESSAGE INSTEAD       *
*                 OF ***.                                             *
*                                                                     *
*  NOTE: ALL USERMOD UMID'S ARE DROPPED UNLESS EXPRESSLY CODED ON     *
*        THE ISPF PANEL VARIABLE PREREQ  !!!                          *
*---------------------------------------------------------------------*
*        RECORDS WITH A BLANK SEQUENCE NUMBER WILL APPEAR ON THE      *
*        OUTPUT REPORT WITH ### IN THE MESSAGE                        *
*---------------------------------------------------------------------*
*        JCL: NOT APPLICABLE - ISPF INVOKATION ONLY                   *
*---------------------------------------------------------------------*
*    TSO ISPF INVOKATION:                                             *
*                                                                     *
*              ALLOC F(REPORT) DS(*)                                  *
*              ALLOC F(DELTA) DS(OUTPUT FILE FOR DELTA DECK)          *
*              ALLOC F(OLDSRC)  DS(ORIGINAL SOURCE/MACRO)             *
*              ALLOC F(NEWSRC)  DS(NEW/UPDATED SOURCE/MACRO)          *
*              ALLOC F(SMPCDS)  DS(SMP CDS)                           *
*              ISPEXEC SELECT PGM(CUMOD)                              *
*---------------------------------------------------------------------*
*   SPF PARAMETERS:                                                   *
*                                                                     *
*          *   MEMBER   ELEMENT NAME (I.E. MACRO NAME OR SRC NAME)    *
*                                                                     *
*          *   MODID    SMP USERMOD ID (I.E. TT00011)                 *
*                                                                     *
*              PREREQ   PRE REQUISITES PTF                            *
*                                                                     *
*              FMID     SMP FMID                                      *
*                                                                     *
*              SYSLIBS  SMP SOURCE SYSLIB                             *
*                                                                     *
*              DISTLIBS SMP SOURCE DLIB                               *
*                                                                     *
*              SYSLIBM  SMP MACRO  SYSLIB                             *
*                                                                     *
*              DISTLIBM SMP MACRO  DLIB                               *
*                                                                     *
*              NEW      NEW MODULE OR MACRO (NOT IN SMPCDS YET)       *
*                                                                     *
*              MERGE    MERGE MULTIPLE ELEMENTS            *LBD 02/84**
*                                                                     *
*              COREQ    CO-REQUISITES PTF                             *
*                                                                     *
*              SUP      SUP PTF 1 ONLY                                *
*                                                                     *
*              SRCMAC   SRC OR MAC  (DEF.= SRC)                       *
*                                                                     *
*              COMMENT  DESCRIPTION OF MODIFICATION                   *
*                                                                     *
*              DELFULL  COMPLETE DELTA OR JUST FOR MODID              *
*                       (SMP = Y ONLY)                                *
*                                                                     *
*              SMP      Y - GENERATE SMP CONTROL CARDS (DEFAULT)      *
*                       N - NO DECK - REPORT ONLY                     *
*                                                                     *
*              ADEL     Y - ALLOW RECORDS TO BE DELETED               *
*                       N - DO NOT ALLOW DELETED RECORDS (NO COMMENT  *
*                           (DEFAULT=N)                   FOR DELETE  *
*                           EXCEPT FOR USERMOD RECORDS ×  IS GENERATED*
*                                                                     *
*        UM1-UMG ASSEMBLY MODULE NAMES FOR MACRO UPDATE               *
*                                                                     *
*                                                                     *
* CHANGES:                                                        *LBD*
*        11/09/83  CHANGED LINK TO ATTACH FOR SMPDATA SUBTASK     *LBD*
*        02/23/84  CHANGED MERGE TO ALLOW FOR A DELTA       *LBD 02/84*
*        05/23/85  CHANGED TO CHECK FOR MERGE WITH DIFF FMID*LBD 05/85*
*        12/13/85  CHANGED TO SUPPORT CSIZONE (SMP/E)      *LBD 12/85*
*        02/28/86  CORRECTION TO MERGE OPTION              *LBD 02/86*
*                                                                     *
*        * = REQUIRED                                                 *
*---------------------------------------------------------------------*
         EJECT
*        UNIQUE MACROS FOR CUMOD
         SPACE 1
         MACRO
&L       $VGETA &ID
&L       $VGET &ID
         CLI   0(R1),C' '          ANY ASSEM NAMES ?
         BE    NOASSEME            NO
         MVC   ASSNAMES,0(R1)
         PUT   DELTA,ASSEM
         MEND
         SPACE 2
         MACRO
&L       $VGETB &ID
&L       $VGET &ID
         CLI   0(R1),C' '          ANY ASSEM NAMES ?
         BE    NASSEME             NO
         MVC   ASSNAMES,0(R1)
         PUT   DELTA,ASSEM
         MEND
         EJECT
CUMOD    $PROLOG R10,R11,R12
         $VGET ADEL                     -> DEL
         CLI   0(R1),C'Y'               ALLOW DELETE
         BE    CKSMP
         CLI   0(R1),C'N'               DIS-ALLOW DELETE
         BE    SETDELF
         B     CKSMP
SETDELF  SETON DEL                      ALLOW DELETES
         SPACE
CKSMP    $VGET SMP                      -> SMP
         CLI   0(R1),C'Y'               CREATE SMP (DEFAULT)
         BE    SETSMPF
         CLI   0(R1),C'N'               NO SMP CREATION
         BE    CKTYPE
SETSMPF  SETON SMP
         EJECT
CKTYPE   $VGET SRCMAC                   -> TYPE=
         MVC   SMPTYPE,0(R1)
         EJECT                                             *LBD 12/85*
         $VGET CSIZONE            GET SMPE CSI ZONE        *LBD 12/85*
         MVC   CSIZONE,0(R1)      SAVE IT                  *LBD 12/85*
         MVC   CDSCSIM(3),=CL3'CSI'                        *LBD 12/85*
         EJECT
         $VGET FMID                     -> FMID=
         MVC   SMPFMID,0(R1)
         EJECT
         $VGET NEW              -> NEW=Y OR ANYTHING FOR NO
         CLI   0(R1),C'Y'
         BNE   CKPRE
         SETON NEW
         MVC   SMPTU(3),BLANKS    CLEAR UPDATE FLAG         *LBD 02/84*
         EJECT
CKPRE    $VGET PREREQ           -> PRE=PRE REQ PTF
         MVC   PREPTF,0(R1)             MAX 40 CHARS (5 SYSMOD ID'S)
         EJECT
         CLC   =C'MAC',SMPTYPE
         BE    GMACSYSL
         $VGET SYSLIBS          -> SYSLIB=SYSLIB
         MVC   SYSLIB$,0(R1)
         B     GDLIB
GMACSYSL $VGET SYSLIBM
         MVC   SYSLIB$,0(R1)
         EJECT
GDLIB    DS    0H
         CLC   =C'MAC',SMPTYPE
         BE    GMACDLIB
         $VGET DISTLIBS         -> DISTLIB=DISTLIB
         MVC   DISTLIB$,0(R1)
         B     GCOREQ
GMACDLIB $VGET DISTLIBM
         MVC   DISTLIB$,0(R1)
         EJECT
GCOREQ   $VGET COREQ            -> REQ=REQ PTF
         MVC   REQPTF,0(R1)             MAX 5 SYSMOD ID'S
         EJECT
         $VGET SUP                 GET SUP SYSMOD ID
         MVC   SUP,0(R1)           AND SAVE IT
         EJECT
         $VGET MEMBER           -> MEMBER=NAME
         MVC   NAME,0(R1)
         EJECT
         $VGET MODID            -> MOD ID
         MVC   MOD#,0(R1)
         EJECT
         $VGET COMMENT          -> DESCRIPTION
         MVC   COMMENT,0(R1)
         EJECT
         $VGET MERGE
         CLI   0(R1),C'Y'          MERGE REQUESTED
         BNE   CKDEL
         SETON MERGE
         EJECT
CKDEL    $VGET DELFULL
         CLI   0(R1),C'F'               FULL DELTA DECK ?
         BE    SETFULL
         B     ENDVGET                  LEAVE OFF - MODID ONLY
SETFULL  SETON DELFULL
         SPACE 2
ENDVGET  EQU   *                        END OF VGET'S OF ISPF VARIABLES
         EJECT
START    EQU   *
*-------------  INVOKE SMPDATA FOR CDS INFORMATION ----------------
         EJECT                                              *LBD 05/85*
OPEND    DS    0H
         IFOFF MERGE,NOM1                                   *LBD 05/85*
         OPEN  (DELTAIN)                                    *LBD 05/85*
RM1      GET   DELTAIN                                      *LBD 05/85*
         CLC   =C'FMID(',12(R1)                             *LBD 05/85*
         BNE   RM1                                          *LBD 05/85*
         MVC   SFMID(7),17(R1)                              *LBD 05/85*
         CLOSE (DELTAIN,REREAD)                             *LBD 05/85*
NOM1     DS    0H                                           *LBD 05/85*
         EJECT                                              *LBD 02/84*
MNAME    DS    0H                                           *LBD 05/85*
         MVC   SMPELEM,NAME
         MVC   SMPMODID,MOD#
         MVC   FUNCTION(3),SMPTYPE
         MVC   MEMBER,NAME
         IFOFF SMP,OPENIT               NO SMP FLAG
*        IFON  NEW,DOPRE$               NEW - SKIP SMPDATA  *LBD 02/84*
         IFON  NEW,PROCESS                                  *LBD 04/86*
         CLI   CSIZONE,C' '       ANY CSI ZONE ?           *LBD 12/85*
         BNE   CALLIT                                      *LBD 12/85*
         OI    WORDS+8,X'80'      SET LAST PARM SWITCH     *LBD 12/85*
CALLIT   DS    0H                                          *LBD 12/85*
         L     R1,PARMPTR
         XC    ECB,ECB                                            *LBD*
         ATTACH EP=SMPDATA,ECB=ECB,SZERO=NO,PURGE=NONE            *LBD*
         ST    R1,ATTADDR                                         *LBD*
         WAIT  ECB=ECB                                            *LBD*
         DETACH ATTADDR                                           *LBD*
         ICM   R15,7,ECB+1                                        *LBD*
         LTR   R15,R15
         BZ    PROCESS
         IFON  NEW,PROCESS                                  *LBD 02/84*
         TPUT  INVALIDM,INVALIDL
         SETON NEW
         MVC   SMPTU(3),BLANKS    CLEAR UPDATE FLAG         *LBD 02/84*
         SPACE 1                                            *LBD 05/85*
PROCESS  DS    0H
         IFOFF MERGE,NOM2                                   *LBD 05/85*
         L     R5,DADDR
         LA    R6,80
         LR    R7,R5
         A     R7,DATALEN
         SR    R7,R6
MLP1     EQU   *
         CLI   0(R5),X'00'
         BE    NOM2
         CLC   =C'FMID',0(R5)
         BE    CHKMFMID
         BXLE  R5,R6,MLP1
         B     NOM2                                         *LBD 05/85*
CHKMFMID DS    0H                                           *LBD 05/85*
         CLC   SFMID,10(R5)     SAME FMID FOR MERGE         *LBD 05/85*
         BE    NOM2             YES - ALL IS OK             *LBD 05/85*
         MVC   XFMID,10(R5)                                 *LBD 05/85*
         $VPUT SFMID,SFMID                                  *LBD 05/85*
         $VPUT XFMID,XFMID                                  *LBD 05/85*
         $EPILOG 4                                          *LBD 05/85*
         SPACE 2                                            *LBD 05/85*
NOM2     DS    0H                                           *LBD 05/85*
         OPEN  (DELTA,OUTPUT,NEWSRC,,REPORT,OUTPUT)
         IFOFF MERGE,PROCSMP
         OPEN  (DELTAIN)
RDEL     GET   DELTAIN
         LR    R5,R1
         CLC   =C'++VER',0(R5)                              *LBD 02/84*
         BE    DVER                                         *LBD 02/84*
         PUT   DELTA,0(R5)
         B     RDEL
DSUP     DS    0H                                           *LBD 02/84*
         SETOF REQF               SET OF REQ FLAG           *LBD 02/84*
         LA    R2,SUPTBL                                    *LBD 02/84*
         CLI   9(R1),C' '         ANY SUP OR JUST FIRST CARD*LBD 02/84*
         BE    SSUPF                                        *LBD 02/84*
         MVC   0(7,R2),9(R1)      MOVE 1ST SUP              *LBD 02/84*
         LA    R2,7(R2)           -> NEXT SLOT              *LBD 02/84*
SSUPF    SETON SUPF               SET SUP FLAG              *LBD 02/84*
         B     DVGET                                        *LBD 02/84*
DSUPIT   DS    0H                                           *LBD 02/84*
         CLI   9(R1),C' '         ANY SUP HERE              *LBD 02/84*
         BE    DVGET              NO - SKIP SAVE            *LBD 02/84*
         MVC   0(7,R2),9(R1)      MOVE 1ST SUP              *LBD 02/84*
         LA    R2,7(R2)           -> NEXT SLOT              *LBD 02/84*
         CLI   0(R2),X'FF'        END OF TABLE              *LBD 02/84*
         BE    ESUPTB             YES                       *LBD 02/84*
         B     DVGET                                        *LBD 02/84*
ESUPTB   TPT   ESUPMSG                                      *LBD 02/84*
         SETOF SUPF                                         *LBD 02/84*
         B     DVGET                                        *LBD 02/84*
DREQ     DS    0H                                           *LBD 02/84*
         SETOF SUPF               SET OF SUP FLAG           *LBD 02/84*
         LA    R2,REQTBL                                    *LBD 02/84*
         CLI   9(R1),C' '         ANY REQ HERE ?            *LBD 02/84*
         BE    REQLPE             NO - SKIP THIS RECORD     *LBD 02/84*
         MVC   0(7,R2),9(R1)      SAVE 1ST REQ              *LBD 02/84*
         LA    R2,8(R2)           -> NEXT SLOT              *LBD 02/84*
DREQLP   LA    R1,17(R1)          -> NEXT REQ ?             *LBD 02/84*
         LA    R3,64(R1)          -> END OF CARD ?          *LBD 02/84*
REQLP    DS    0H                                           *LBD 02/84*
         CLI   0(R1),C'/'         END OF CO'S               *LBD 02/84*
         BE    REQLPE             YES                       *LBD 02/84*
         CLI   0(R1),C')'         END OF CO'S               *LBD 02/84*
         BE    REQLPE             YES                       *LBD 02/84*
         CLI   0(R1),C'A'                                   *LBD 02/84*
         BNL   SAVEREQ                                      *LBD 02/84*
         LA    R1,1(R1)                                     *LBD 02/84*
         CR    R1,R3                                        *LBD 02/84*
         BNL   REQLPE                                       *LBD 02/84*
         B     REQLP                                        *LBD 02/84*
SAVEREQ  MVC   0(7,R2),0(R1)                                *LBD 02/84*
         LA    R2,8(R2)           -> NEXT SLOT              *LBD 02/84*
         LA    R1,8(R1)           -> NEXT REQ               *LBD 02/84*
         B     REQLP              KEEP DOING IT             *LBD 02/84*
REQLPE   SETON REQF               SET REQ FLAG              *LBD 02/84*
         B     DVGET                                        *LBD 02/84*
DREQIT   DS    0H                                           *LBD 02/84*
         CLI   9(R1),C' '         ANY REQ HERE ?            *LBD 02/84*
         BE    DREQLP             NO - SKIP IT              *LBD 02/84*
         MVC   0(7,R2),9(R1)      MOVE REQ                  *LBD 02/84*
         LA    R2,8(R2)           -> NEXT SLOT              *LBD 02/84*
         CLI   0(R2),X'FF'        END OF TABLE              *LBD 02/84*
         BE    EREQTB             YES                       *LBD 02/84*
         B     DREQLP             KEEP LOOPING              *LBD 02/84*
EREQTB   TPT   EREQMSG                                      *LBD 02/84*
         SETOF REQF                                         *LBD 02/84*
         B     DVGET                                        *LBD 02/84*
         SPACE 2                                            *LBD 02/84*
DVER     DS    0H                                           *LBD 02/84*
         SETON LOST               FLAG AS HAVING SMP DATA   *LBD 02/84*
         PUT   DELTA,0(R5)        PUT VER CARD              *LBD 02/84*
         GET   DELTAIN                                      *LBD 02/84*
         LR    R5,R1                                        *LBD 02/84*
         CLC   =C'END OF',11(R5)  NO PRE IF END FOUND       *LBD 02/84*
         BE    EOFPRE             GO TO END OF ++VER        *LBD 02/84*
         CLC   =C'PRE(',12(R5)    PRE ?                     *LBD 02/84*
         BNE   DVER               NO                        *LBD 02/84*
         LA    R2,PRETBL          -> PRETBL                 *LBD 02/84*
         CLI   16(R5),C' '        ANY PRE HERE              *LBD 02/84*
         BE    NOP1               NO                        *LBD 02/84*
         LA    R5,16(R5)                                    *LBD 02/84*
SPRE1    MVC   0(7,R2),0(R5)      YES - SAVE IT             *LBD 02/84*
         LA    R2,8(R2)           -> NEXT SLOT              *LBD 02/84*
         LA    R5,8(R5)           -> NEXT PRE               *LBD 02/84*
         CLI   0(R5),C' '         ANY ?                     *LBD 02/84*
         BNE   SPRE1              YES - SAVE IT             *LBD 02/84*
         LA    R5,2(R5)           SMP/E CHECK              *LBD 02/86*
         CLI   0(R5),C' '         ANY HERE ?               *LBD 02/86*
         BNE   SPRE1              YES                      *LBD 02/86*
NOP1     DS    0H                                           *LBD 02/84*
         SPACE 2                                            *LBD 02/84*
DVGET    GET   DELTAIN                                      *LBD 02/84*
         CLC   =C'SUP',5(R1)                                *LBD 02/84*
         BE    DSUP                                         *LBD 02/84*
         CLC   =C'REQ',5(R1)                                *LBD 02/84*
         BE    DREQ                                         *LBD 02/84*
         CLC   =C'END OF',11(R1)  END OF ++VER              *LBD 02/84*
         BE    EOFPRE             YES                       *LBD 02/84*
         CLC   =C'END OF',44(R1)  END OF PRE-PTFS           *LBD 02/84*
         BE    DVGET              YES - IGNORE              *LBD 02/84*
         IFON  SUPF,DSUPIT                                  *LBD 02/84*
         IFON  REQF,DREQIT                                  *LBD 02/84*
         LA    R3,64(R1)                                    *LBD 02/84*
BPRET    DS    0H                                           *LBD 02/84*
         CLI   0(R1),C' '                                   *LBD 02/84*
         BNE   SAVEPRE                                      *LBD 02/84*
         LA    R1,1(R1)                                     *LBD 02/84*
BPRETT   CR    R1,R3                                        *LBD 02/84*
         BH    DVGET                                        *LBD 02/84*
         B     BPRET                                        *LBD 02/84*
SAVEPRE  MVC   0(7,R2),0(R1)                                *LBD 02/84*
         LA    R2,8(R2)                -> NEXT SLOT         *LBD 02/84*
         CLI   0(R2),X'FF'             END OF PRETBL        *LBD 02/84*
         BE    ENDOFPRE                                     *LBD 02/84*
         LA    R1,8(R1)                -> NEXT PTF ?        *LBD 02/84*
         B     BPRETT                                       *LBD 02/84*
ENDOFPRE TPT   EPREMSG                                      *LBD 02/84*
EOFPRE   DS    0H                                           *LBD 02/84*
         EJECT                                              *LBD 05/85*
         IFON  NEW,DOPRE$                                   *LBD 05/85*
PROCSMP  DS    0H
         L     R5,DADDR
         LA    R6,80
         LR    R7,R5
         A     R7,DATALEN
         SR    R7,R6
SMPLP    EQU   *
         CLI   0(R5),X'00'
         BE    EOF$
         CLC   =C'FMID',0(R5)
         BE    DOFMID$
         CLC   =C'RMID',0(R5)
         BE    DORMID
         CLC   =C'UMID',0(R5)
         BE    DOUMID
         CLC   =C'SYSLIB',0(R5)
         BE    DOSLIB
         CLC   =C'DISTLIB',0(R5)
         BE    DODLIB
SMPINCR  BXLE  R5,R6,SMPLP
         ABEND 11
DODLIB   MVC   DISTLIB,10(R5)
         B     SMPINCR
DOSLIB   MVC   SYSLIB,10(R5)
         B     SMPINCR
DOFMID$  MVC   SMPFMID,10(R5)           MOVE FMID TO ++VER
         SETON LOST                     LOST = HAVE SMP INFO
         IFON  MERGE,DOPRE$             SKIP IF MERGE       *LBD 02/84*
         PUT   DELTA,USERMOD
         PUT   DELTA,UMODC
         PUT   DELTA,VER1
         BE    CKPREPTF
NOP2     DS    0H                                           *LBD 02/84*
CKPREPTF IFON  MERGE,DOPRE$             MERGE THEN DO IT
         CLI   PREPTF,C' '              ANY PRE SPECIFIED
         BNE   DOPRE$
         B     SMPINCR
DOPRE$   DS    0H
         TM    DELTA+48,X'10'   OPEN ???                   *LBD 05/85*
         BO    DOPRE$$          YES                        *LBD 05/85*
         OPEN  (DELTA,OUTPUT,NEWSRC,,REPORT,OUTPUT)        *LBD 05/85*
DOPRE$$  DS    0H                                          *LBD 05/85*
         IFOFF MERGE,DOPRE$A                                *LBD 02/84*
         TM    DELTAIN+48,X'10' OPEN ??                    *LBD 05/85*
         BO    DOPRE$$$                                    *LBD 05/85*
         OPEN  (DELTAIN)                                   *LBD 05/85*
DOPRE$$$ DS    0H                                          *LBD 05/85*
         LA    R2,PRETBL          -> PRETBL                 *LBD 02/84*
         MVC   PRE2,BLANKS                                  *LBD 02/84*
PRELP    DS    0H                                           *LBD 02/84*
         CLI   PREPTF,C' '                                  *LBD 02/84*
         BE    PRELP2                                       *LBD 02/84*
         MVC   PRE2,PREPTF                                  *LBD 02/84*
         MVC   PREPTF,BLANKS                                *LBD 02/84*
         IFON  $PRE1,PV2                                   *LBD 03/86*
         SETON $PRE1                                        *LBD 02/84*
         PUT   DELTA,VERP1                                  *LBD 02/84*
PV2      PUT   DELTA,VERP2                                  *LBD 02/84*
         MVC   PRE2,BLANKS                                  *LBD 02/84*
PRELP2   CLC   0(40,R2),BLANKS    EMPTY MEMBER ?            *LBD 02/84*
         BE    PRELPUP            YES                       *LBD 02/84*
         CLI   0(R2),X'FF'             REAL END OF TABLE ?  *LBD 02/84*
         BE    PRELP2P                 YES                  *LBD 02/84*
         MVC   PRE2(40),0(R2)                               *LBD 02/84*
         IFON  $PRE1,PV2B                                  *LBD 03/86*
         SETON $PRE1                                        *LBD 02/84*
         PUT   DELTA,VERP1                                  *LBD 02/84*
PV2B     PUT   DELTA,VERP2                                  *LBD 02/84*
         MVC   PRE2,BLANKS                                  *LBD 02/84*
PRELPUP  DS    0H                                           *LBD 02/84*
         LA    R2,40(R2)          -> NEXT PTF               *LBD 02/84*
         B     PRELP2                                       *LBD 02/84*
PRELP2P  DS    0H                                           *LBD 02/84*
         IFON  NEW,EOF$                                     *LBD 02/84*
         B     SMPINCR                                      *LBD 02/84*
DOPRE$A  DS    0H                                           *LBD 02/84*
         IFON  NEW,EOF$                                     *LBD 02/84*
         CLI   PREPTF,C' '        ANY PTF                  *LBD 02/86*
         BE    SMPINCR            NO - SKIP PRE            *LBD 02/86*
         MVC   PRE1(40),PREPTF                              *LBD 02/84*
         PUT   DELTA,VERP1
         SETON $PRE1
         B     SMPINCR
DORMID   EQU   *
         CLC   SMPFMID,10(R5)           FMID = RMID ?
         BE    SMPINCR                  YES - IGNORE IT
         IFON  $PRE1,UMIDLP
         MVC   PRE1,10(R5)
         PUT   DELTA,VERP1
         SETON $PRE1
         B     SMPINCR
DOUMID   EQU   *
         LA    R1,10(R5)
         LA    R2,4
CLEANUM  EQU   *
         CLI   0(R1),C'K'
         BL    CLNLP
         CLI   0(R1),C'T'
         BH    CLNLP
         MVC   0(7,R1),BLANKS
CLNLP    LA    R1,10(R1)
         BCT   R2,CLEANUM
         CLC   10(50,R5),BLANKS
         BE    SMPINCR
         SPACE
         IFON  $PRE1,UMIDLP
         MVC   PRE1,10(R5)
         PUT   DELTA,VERP1
         SETON $PRE1
         B     SMPINCR
UMIDLP   MVC   PRE2,10(R5)
         PUT   DELTA,VERP2
         B     SMPINCR
EOF$     EQU   *
         IFON  MERGE,EOFM                                   *LBD 02/84*
         IFOFF LOST,CLOSE$
EOFM     DS    0H                                           *LBD 02/84*
         SETOF LOST                                         *LBD 02/84*
         IFON  $PRE1,PUV
         MVI   VERPEP,C' '              ERASE PAREN AS NOT NEEDED
         CLI   PRE1,C' '
         BE    PLCC
PUV      PUT   DELTA,VERPE
PLCC     DS    0H
         IFON  MERGE,MSK2                                   *LBD 02/84*
         CLI   REQPTF,C' '
         BE    CKSUP1
         PUT   DELTA,SMPREQ
         B     CKSUP1                                       *LBD 02/84*
MSK2     DS    0H                                           *LBD 02/84*
         MVI   REQPTF+40,C' '                               *LBD 02/84*
         CLI   REQPTF,C' '        ANY REQ'S                 *LBD 02/84*
         BE    NOREQS             NO                        *LBD 02/84*
         PUT   DELTA,SMPREQ       PUT IT                    *LBD 02/84*
         MVC   REQPTF,BLANKS      CLEAR IT                  *LBD 02/84*
         MVC   SMPREQ+5(4),BLANKS                           *LBD 02/84*
         B     REQLPA                                       *LBD 02/84*
NOREQS   DS    0H                                           *LBD 02/84*
         CLI   REQTBL,C' '        ANY REQ'S                 *LBD 02/84*
         BE    CKSUP1             NO                        *LBD 02/84*
REQLPA   LA    R2,REQTBL                                    *LBD 02/84*
REQLPD   DS    0H                                           *LBD 02/84*
         CLC   0(40,R2),BLANKS    END ?                     *LBD 02/84*
         BE    PREQUP             YES                       *LBD 02/84*
         MVC   REQPTF(40),0(R2)                             *LBD 02/84*
         PUT   DELTA,SMPREQ       AND PUT IT                *LBD 02/84*
         MVC   SMPREQ+5(4),BLANKS                           *LBD 02/84*
         MVC   REQPTF(7),BLANKS   AND BLANK IT              *LBD 02/84*
PREQUP   LA    R2,40(R2)          -> NEXT REQ               *LBD 02/84*
         CLI   0(R2),X'FF'        END                       *LBD 02/84*
         BE    PREQ               YES                       *LBD 02/84*
         B     REQLPD             NO - KEEP PUTTING THEM    *LBD 02/84*
PREQ     MVI   REQPTF+40,C')'     END IT                    *LBD 02/84*
         PUT   DELTA,SMPREQ       PUT IT                    *LBD 02/84*
         MVC   REQPTF,BLANKS                                *LBD 02/84*
CKSUP1   DS    0H                                           *LBD 02/84*
         IFON  MERGE,MSK3                                   *LBD 02/84*
         CLI   SUP,C' '
         BE    PUTLASTC
         PUT   DELTA,SMPSUP
         MVC   SUP,BLANKS                                   *LBD 02/84*
         B     PUTLASTC                                     *LBD 02/84*
MSK3     DS    0H                                           *LBD 02/84*
         MVI   SUP+7,C' '         CLEAR )                   *LBD 02/84*
         CLI   SUP,C' '                                     *LBD 02/84*
         BNE   PSUP1              YES                       *LBD 02/84*
         CLC   SUPTBL(20),BLANKS  ANY SUP'S                 *LBD 02/84*
         BE    NOSUP                                        *LBD 02/84*
         LA    R2,SUPTBL                                    *LBD 02/84*
         MVC   SUP,0(R2)                                    *LBD 02/84*
         PUT   DELTA,SMPSUP                                 *LBD 02/84*
         MVC   SMPSUP+5(4),BLANKS                           *LBD 02/84*
         MVC   SUP,BLANKS                                   *LBD 02/84*
         LA    R2,7(R2)           -> NEXT SUP               *LBD 02/84*
         B     SUPLP              AND GO TO START OF LOOP   *LBD 02/84*
NOSUPS   CLI   SUP,C' '                                     *LBD 02/84*
         BE    NOSUP                                        *LBD 02/84*
PSUP1    DS    0H                                           *LBD 02/84*
         CLI   SUP,C' '                                     *LBD 02/84*
         BE    SUPLPA                                       *LBD 02/84*
         PUT   DELTA,SMPSUP       PUT IT                    *LBD 02/84*
         MVC   SMPSUP+5(4),BLANKS                           *LBD 02/84*
         MVC   SUP,BLANKS         CLEAR IT                  *LBD 02/84*
SUPLPA   LA    R2,SUPTBL                                    *LBD 02/84*
SUPLP    DS    0H                                           *LBD 02/84*
         CLI   0(R2),C' '         NULL ENTRY ?              *LBD 02/84*
         BE    PSUPUP             YES                       *LBD 02/84*
         MVC   SUP,0(R2)                                    *LBD 02/84*
         PUT   DELTA,SMPSUP       AND PUT IT                *LBD 02/84*
         MVC   SMPSUP+5(4),BLANKS                           *LBD 02/84*
         MVC   SUP,BLANKS         AND BLANK IT              *LBD 02/84*
PSUPUP   LA    R2,7(R2)           -> NEXT REQ               *LBD 02/84*
         CLI   0(R2),X'FF'        END                       *LBD 02/84*
         BE    PSUP               YES                       *LBD 02/84*
         B     SUPLP              NO - KEEP PUTTING THEM    *LBD 02/84*
PSUP     MVI   SUP+7,C')'         END IT                    *LBD 02/84*
         PUT   DELTA,SMPSUP       PUT IT                    *LBD 02/84*
NOSUP    MVC   SUP,BLANKS         AND BLANK IT              *LBD 02/84*
PUTLASTC DS    0H
         PUT   DELTA,LASTCC                                     *LBD*
         IFOFF MERGE,NSK4                                   *LBD 02/84*
         BAL   R2,GDLP                                      *LBD 02/84*
NSK4     DS    0H                                           *LBD 02/84*
CLOSE$   SETOF LOST
         B     OPENIT
GDLP     GET   DELTAIN                                      *LBD 02/84*
         LR    R5,R1                                        *LBD 02/84*
         PUT   DELTA,0(R5)                                  *LBD 02/84*
         B     GDLP                                         *LBD 02/84*
EODDEL   CLOSE DELTAIN                                      *LBD 02/84*
         BR    R2                                           *LBD 02/84*
OUTERR   S99FAIL
         ABEND 100
LOGERR   S99FAIL
         ABEND 200
CNTLERR  S99FAIL
         ABEND 300
         EJECT
OPENIT   DS    0H
         IFON  NEW,NEWSMP
         OPEN  (OLDSRC)
         B     PUPDTE                                       *LBD 02/84*
NEWSMP   EQU   *
         IFOFF SMP,DOPUT
         IFON  MERGE,CKNEWU
         PUT   DELTA,USERMOD
         PUT   DELTA,UMODC
         PUT   DELTA,VER1
         CLI   PREPTF,C' '
         BE    $CKREQ
         MVC   PRE1,PREPTF
         PUT   DELTA,VERP1
         SETON $PRE1
$CKREQ   EQU   *
         CLI   PRE1,C' '
         BNE   $PVPE
         MVI   VERPEP,C' '              ERASE PAREN AS NOT NEEDED
         CLI   PRE1,C' '                                        *LBD*
         BE    NOPPE                                            *LBD*
$PVPE    PUT   DELTA,VERPE
NOPPE    CLI   REQPTF,C' '
         BE    CKSUP
         PUT   DELTA,SMPREQ
CKSUP    CLI   SUP,C' '
         BE    $PULASTC
         PUT   DELTA,SMPSUP
$PULASTC PUT   DELTA,LASTCC                                     *LBD*
CKNEWU   IFOFF NEW,PUPDTE
         CLC   =C'SRC ',SMPTYPE
         BNE   PUPDTE
         OPEN  SMPJCLIN
         PUT   DELTA,JCLIN
RJCLIN   GET  SMPJCLIN
         LR    R5,R1
         PUT   DELTA,0(R5)
         B     RJCLIN
EJCLIN   CLOSE SMPJCLIN
PUPDTE   DS    0H
         PUT   DELTA,UPDTE
         CLC   =C'MAC',SMPTYPE
         BNE   NASSEM
         $VGET UM1
         CLI   0(R1),C' '          ANY ASSEM NAMES ?
         BE    NASSEM              NO
         MVC   ASSNAMES,0(R1)
         PUT   DELTA,ASSEMCC
         PUT   DELTA,ASSEM
         $VGETB UM2
         $VGETB UM3
         $VGETB UM4
         $VGETB UM5
         $VGETB UM6
         $VGETB UM7
         $VGETB UM8
         $VGETB UM9
         $VGETB UMA
         $VGETB UMB
         $VGETB UMC
         $VGETB UMD
         $VGETB UME
         $VGETB UMF
         $VGETB UMG
NASSEME  PUT   DELTA,ASSEMCCE
NASSEM   EQU   *
         MVC   DISTLIB,DISTLIB$
         MVC   SYSLIB,SYSLIB$
         PUT   DELTA,UPDTES
         PUT   DELTA,UPDTED
         PUT   DELTA,UPDTEE
         IFOFF NEW,DOPUT          PUT IEBUP CC IF NOT NEW   *LBD 02/84*
         B     NODOPUT            ELSE SKIP IT              *LBD 02/84*
DOPUT    PUT   DELTA,CHANGE
NODOPUT  MVC   HELEM,NAME
         MVC   HMODID,MOD#
         MVC   DELRCDMD,MOD#
         PUT   REPORT,HEADER
         B     READ2
CLC      EQU   *
         SETOF RNEW                * TURN FLAG OFF
         CLC   72(8,R3),72(R4)
         BE    CKDATA
         BL    NEWREC
         BH    LOSTREC
         ABEND 1                NEVER SHOULD GET HERE
CKDATA   EQU   *
         CLC   0(72,R3),0(R4)   DATA IDENTICAL
         BE    READ2
         CLI   64(R4),C'K'        USERMOD ID ?
         BL    SOR
         CLI   64(R4),C'T'         VALID USERMOD ID ?
         BL    MVCRX               OK TO REPLACE
SOR      SETON REPLACE
         IFOFF DEL,MVCRX
         SETON LOST
MVCRX    MVC   RCD+1(80),0(R3)
         MVC   MSG,INVMSG
         CLC   64(7,R3),MOD#
         BE    PRCD
         MVC   MSG,BADREPID
PRCD     EQU   *
         CLC   0(2,R3),=C'*@'           ANY PROLOG DOC ?
         BE    SETP1                    YES
         CLC   0(2,R3),=C'.*@'          ANY PROLOG DOC ?
         BNE   DP                       NO
SETP1    SETON PROLOG                   YES
DP       DS    0H
         IFON  DELFULL,DPP
         CLC   64(7,R3),MOD#       OUR MODID
         BNE   DPB
DPP      EQU   *
         IFOFF DEL,DPPP
         IFON  REPLACE,DPB
DPPP     PUT   DELTA,0(R3)              PUT INTO DELTA DECK
         MVC   MSG(3),=3C'-'     FLAG AS PUT INTO DELTA DECK
DPB      MVC   ORCD+1(80),0(R4)
         SETOF REPLACE
         MVC   OMSG,ORGMSG
         PUT   REPORT,BLANKS
         PUT   REPORT,ORCD
         PUT   REPORT,RCD       TELL SOMEONE
READ2    GET   NEWSRC
         LR    R3,R1
         SETON RNEW                * WE HAVE READ A NEW RECORD
         CLC   78(2,R3),BLANKS            VALID SEQ NUMBER ?
         BE    BADSEQ
         SETOF PD
         IFON  NEW,NEWREC
         GET   OLDSRC
         LR    R4,R1
         B     CLC
NEWREC   EQU   *
         CLC   0(2,R3),=C'.*@'          ANY PROLOG DOC ?
         BE    SETP2                    YES
         CLC   0(2,R3),=C'*@'           ANY PROLOG DOC ?
         BNE   DNMVC                    NO
SETP2    SETON PROLOG                   YES
DNMVC    MVC   RCD+1(80),0(R3)
         MVC   MSG,NEWMSG
         IFON  DELFULL,PD1
         CLC   64(7,R3),MOD#
         BNE   BPD1
PD1      PUT   DELTA,0(R3)
         SETON PD
         MVC   MSG(3),=3C'-'      FLAG AS BEING PUT IN DELTA DECK
         CLC   64(7,R3),MOD#
         BE    PUTNEWR
BPD1     MVC   RCD+1(80),0(R3)
         MVC   MSG,BADID
         IFOFF PD,PUTNEWR
         MVC   MSG(3),=3C'-'
PUTNEWR  PUT   REPORT,RCD
         SETOF PD
GETMOD   GET   NEWSRC
         LR    R3,R1
         SETON RNEW                * WE HAVE READ A NEW RECORD
         IFON  NEW,NEWREC
         B     CLC
BADSEQ   MVC   RCD+1(80),0(R3)
         MVC   MSG,BADSEQMG
         PUT   REPORT,RCD
         SETON BLKSEQ
         B     READ2
LOSTREC  EQU   *
         SETON LOST
         MVC   RCD+1(80),0(R4)
         MVC   MSG,LOSTMSG
         PUT   REPORT,RCD
         MVC   DELRCD#(8),72(R4)        MOVE SEQ #
         IFON  DEL,NODRCD
         PUT   DELTA,DELRCD             GENERATE DELETE RCD
         MVC   RCD+1(80),DELRCD
         MVC   MSG,INVMSG
         MVC   MSG(3),=3C'-'      FLAG AS BEING PUT IN DELTA DECK
         PUT   REPORT,RCD
NODRCD   EQU   *                        NO DELETE RCD GENERATED
         GET   OLDSRC
         LR    R4,R1
         B     CLC
EOF      EQU   *
         IFON  NEW,DOCLOSE
         SETON BEOFM
         IFON  BEOFO,CLOSE
GEOFOLP  GET   OLDSRC
         MVC   RCD+1(80),0(R1)
         SETON LOST
         MVC   MSG,LOSTMSG
         PUT   REPORT,RCD
         B     GEOFOLP
EOFO     EQU   *
         IFOFF RNEW,EOFO2
         SETON BEOFO
         B     EOFOX
EOFO2    EQU   *
         SETON BEOFO
         IFON  BEOFM,CLOSE
         MVC   MSG,NEWMSG
GEOFMLP  GET   NEWSRC
         LR    R3,R1
EOFOX    IFON  DELFULL,DP2
         CLC   64(7,R3),MOD#
         BNE   GEONG
DP2      PUT   DELTA,0(R3)
         MVC   MSG,NEWMSG
         MVC   MSG(3),=3C'-'
         MVC   RCD+1(80),0(R3)
         PUT   REPORT,RCD
         B     GEOFMLP
GEONG    DS    0H
         MVC   MSG,BADID
         MVC   RCD+1(80),0(R3)
         PUT   REPORT,RCD
         B     GEOFMLP
CLOSE    EQU   *
         IFOFF BLKSEQ,CKPRO
         PUT   REPORT,BLKSEQL
         TPUT  BLKSEQL+1,72
CKPRO    IFON  PROLOG,CKLST
         PUT   REPORT,PROLL
         TPUT  PROLL+1,72
CKLST    IFOFF LOST,DOCLOSE
         IFOFF DEL,DOCLOSE
         PUT   REPORT,LOSTL
         TPUT  LOSTL+1,72
DOCLOSE  CLOSE (OLDSRC,FREE,NEWSRC,FREE,DELTA,FREE,REPORT,FREE)
EPILOG   EQU   *
         $EPILOG 0
         EJECT
         BITSW $PRE1,SMP,LOST,BEOFM,BEOFO,DEL,PROLOG,NEW
         BITSW DELFULL,REPLACE,MERGE,PD,BLKSEQ,RNEW,REQF,SUPF
         BITSW SMPE,HPRE                                   *LBD 12/85*
         EJECT
         VGETSUB
         EJECT
         VPUTSUB
         EJECT
         LTORG
         EJECT
ECB      DS    F                                                  *LBD*
ATTADDR  DS    F                                                  *LBD*
PREPTF   DC    CL40' '
SYSLIB$  DC    CL8' '
DISTLIB$ DC    CL8' '
SFMID    DC    CL7' '           SAVE AREA FOR MERGE FMID    *LBD 05/85*
XFMID    DC    CL7' '           SAVE AREA FOR SMP FMID      *LBD 05/85*
SMPREQ   DC    CL80' '
         ORG   SMPREQ+5
         DC    C'REQ('
REQPTF   DC    CL40' ',C') /* CO-REQ SYSMOD */'
         ORG
SMPSUP   DC    CL80' '
         ORG   SMPSUP+5
         DC    C'SUP('
SUP      DC    CL7' ',C')  /* SUP  SYSMOD */  '
         ORG
         EJECT
CHANGE   DC    C'./ CHANGE NAME='
NAME     DC    CL8' '
         DC    CL60' '
MOD#     DC    CL8' '
         SPACE
LOSTL    DC    CL121'0  ***   WARNING ORIGINAL RECORDS WERE DELETED OR X
               REPLACED ***'
PROLL    DC    CL121'0  ***   WARNING NO PROLOG FOUND  !!!!!!!!!!!!!  '
         SPACE
BLKSEQL  DC    CL121'0  ###   WARNING BLANK SEQUENCE NUMBERS FOUND ###'
         SPACE
HEADER   DC    CL121'1 '
         ORG   HEADER+10
         DC    C'SMP DELTA DECK GENERATOR   ELEMENT: '
HELEM    DC    CL8' '
         DC    CL4' ',C'USERMOD ID: '
HMODID   DC    CL8' '
         ORG
BLANKS   DC    CL121' '
         SPACE
RCD      DC    CL121' '
         ORG   RCD+85
MSG      DC    CL35' '
         ORG
ORCD     DC    CL121' '
         ORG   ORCD+85
OMSG     DC    CL35' '
         ORG
DELRCD   DC    CL72'*'
DELRCD#  DC    CL8' '
         ORG   DELRCD+30
         DC    C'THIS CARD DELETED BY MOD '
         ORG   DELRCD+63
         DC    C'@'
DELRCDMD DC    CL8' '
         ORG
         SPACE 2
EPREMSG  DC    C'** TOO MANY PRE-REQS  **'                  *LBD 02/84*
ESUPMSG  DC    C'** TOO MANY SUPS      **'                  *LBD 02/84*
EREQMSG  DC    C'** TOO MANY CO-REQS   **'                  *LBD 02/84*
         SPACE 2                                            *LBD 02/84*
INVALIDM DC    C'** ELEMENT SPECIFIED NOT FOUND IN '
CDSCSIM  DC    C'CDS  -  PROCESSING '
         DC    C'CONTINUES **'
INVALIDL EQU   *-INVALIDM
         SPACE 4
LOSTMSG  DC    CL35'***  NOT IN NEW CODE         ***'
NEWMSG   DC    CL35'***   NEW RECORD             ***'
BADID    DC    CL35'*** NEW RECORD  W/INVALID ID ***'
BADREPID DC    CL35'*** REPLACEMENT W/INVALID ID ***'
BADSEQMG DC    CL35'### BLANK SEQUENCE NUMBER    ###'
INVMSG   DC    CL35'*** REPLACES ORIG CARD       ***'
ORGMSG   DC    CL35'***   ORIGINAL CARD          ***'
USERMOD  DC    CL80' '
         ORG   USERMOD
         DC    C'++USERMOD('
SMPMODID DC    CL7' ',C')  /*  ROCKWELL INTERNATIONAL USERMOD */  '
         ORG
UMODC    DC    CL80'   /*'
         ORG   UMODC+10
COMMENT  DC    CL50' '
         DC    C' */.'
         ORG
VER1     DC    CL80' '
         ORG   VER1
         DC    C'++VER(Z038) FMID('
SMPFMID  DC    CL7' ',C')'
         ORG
VERP1    DC    CL80' '
         ORG   VERP1
         DC    C'            PRE('
PRE1     DC    CL40' '
         ORG
VERP2    DC    CL80' '
         ORG   VERP2
         DC    C'                '
PRE2     DC    CL40' '
         ORG
VERPE    DC    CL80' '
         ORG   VERPE+30
VERPEP   DC    C')'                     ENDING PAREN
         DC    C'         /*  END OF PREREQS  */    '
         ORG
LASTCC   DC    CL80'        /* END OF ++VER */  .'              *LBD*
ASSEMCC  DC    CL80'  ASSEM(      /* START OF ASSEMBLE NAMES */'
ASSEMCCE DC    CL80'    )         /* END OF ASSEMBLE NAMES   */ '
ASSEM    DC    CL80' '
         ORG   ASSEM+1
ASSNAMES DC    CL73' '
         ORG
JCLIN    DC    CL80'++JCLIN.'
UPDTE    DC    CL80' '
         ORG   UPDTE
         DC    C'++'
SMPTYPE  DC    CL3'SRC'
SMPTU    DC    C'UPD ('
SMPELEM  DC    CL8' ',C') '
         ORG
UPDTEE   DC    CL80'    /* UPDATE FOLLOWS */ .'
UPDTES   DC    CL80' '
         ORG   UPDTES
         DC    C'   SYSLIB('
SYSLIB   DC    CL8' ',C')'
         ORG
UPDTED   DC    CL80' '
         ORG   UPDTED
         DC    C'  DISTLIB('
DISTLIB  DC    CL8' ',C')'
         ORG
         DS    0F
PARMPTR  DC    A(WORDS)
WORDS    DC    A(FUNCTION,MEMBER,DATALEN)
         DC    A(CSIZONE)                                  *LBD 12/85*
CSIZONE  DC    CL8' '                                      *LBD 12/85*
FUNCTION DC    CL8' '
MEMBER   DC    CL8' '
DATALEN  DC    A(400*80)
DADDR    DC    A(DATA)
         SPACE 2
OLDSRC   DCB   DSORG=PS,MACRF=GL,DDNAME=OLDSRC,EODAD=EOFO
NEWSRC   DCB   DSORG=PS,MACRF=GL,DDNAME=NEWSRC,EODAD=EOF
DELTA    DCB   DSORG=PS,MACRF=PM,DDNAME=DELTA,RECFM=FB,LRECL=80
DELTAIN  DCB   DSORG=PS,MACRF=GL,DDNAME=DELTA,EODAD=EODDEL
REPORT   DCB   DSORG=PS,MACRF=PM,DDNAME=REPORT,LRECL=121,RECFM=FBA,    *
               BLKSIZE=6171
SMPJCLIN DCB   DSORG=PS,MACRF=GL,DDNAME=SMPJCLIN,EODAD=EJCLIN
         SPACE 2
PRETBL   DC    100CL8' '                                    *LBD 02/84*
         DC    X'FF'                                        *LBD 02/84*
SUPTBL   DC    20CL7' '                                     *LBD 02/84*
         DC    X'FF'                                        *LBD 02/84*
REQTBL   DC    20CL8' '                                     *LBD 02/84*
         DC    X'FF'                                        *LBD 02/84*
DATA     DC    400XL80'00'
         END
