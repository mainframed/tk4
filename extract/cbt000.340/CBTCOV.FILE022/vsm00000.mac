VSM00000 CSECT
         COPY VSMMACS                                          *LBD*
         SPACE
***********************************************************************
*                                                                     *
*    SYSTEM -           VIRTUAL STORAGE MONITOR                       *
*                                                                     *
*    VERSION -          1.1                                           *
*                                                                     *
*    MODNAME -          VSM                                           *
*                                                                     *
*    DESCRIPTIVE NAME - VIRTUAL STORAGE MONITOR CONTROL MODULE        *
*                                                                     *
*    AUTHOR -           R.P. SHANNON                                  *
*                       HALLMARK CARDS                                *
*                       ENFIELD DISTRIBUTION CENTER                   *
*                                                                     *
*    DATE -             9/1/82                                        *
*                                                                     *
*    FUNCTION -         THIS IS THE CONTROL MODULE FOR THE VIRTUAL    *
*                       STORAGE MONITOR. IT PRODUCES THE PRIMARY      *
*                       MENU AND SERVICES REQUESTS BY BRANCHING TO    *
*                       THE APPROPRIATE MODULES.                      *
*                                                                     *
*    ATTRIBUTES -       REUS                                          *
*                                                                     *
*    REGS AT ENTRY-     R14  - RETURN ADDRESS                         *
*                       R15  - EPA                                    *
*                                                                     *
*    REG USAGE     -    R0   - WORK REG                               *
*                       R1   - POINTER TO INTER MODULE LINKAGE        *
*                       R10  - LINKAGE AREA POINTER                   *
*                       R11  - BASE REG                               *
*                       R13  - SAVE AREA                              *
*                       R14  - RETURN ADDR                            *
*                       R15  - ADDR OF CALLED MODULES                 *
*                                                                     *
*    REGS AT EXIT -     R14  - RETURN ADDRESS                         *
*                       R15  - RETURN CODE                            *
*                                                                     *
*    LABELS             SOME OF THE FIELD USAGE IN THIS MODULE CAN    *
*                       BE DETERMINED BY THE FIRST CHARACTER OF THE   *
*                       FIELD. THE KEYS ARE:                          *
*                            @ - FIELD IS IN INTER-MODULE LINKAGE     *
*                                AREA                                 *
*                            # - FIELD IS PART OF THE OUTPUT SCREEN   *
*                            $ - DSECT                                *
*                                                                     *
*    MACROS -           STFSMODE   => VTAM TERMINAL CONTROL           *
*                       HMAP       => SCREEN BUILDER                  *
*                       $LNKSECT   => LINKAGE AREA DSECT              *
*                                                                     *
*    MODS -                                                           *
*          VERSION 1.0  - BASE                                        *
*                                                                     *
*          VERSION 1.1  - 1. REMOVED AUTOMATIC UPSHIFT OF KEYBOARD    *
*                         FOR TERMINALS WITH NUM OPTION               *
*                                                                     *
***********************************************************************
         EJECT
R0       EQU    0
R1       EQU    1
R2       EQU    2
R3       EQU    3
R4       EQU    4
R5       EQU    5
R6       EQU    6
R7       EQU    7
R8       EQU    8
R9       EQU    9
R10      EQU   10
R11      EQU   11
R12      EQU   12                       BASE REGISTER
R13      EQU   13                       SAVEAREA POINTER
R14      EQU   14                       LINKAGE REGISTER
R15      EQU   15                       RETURN CODES
         SPACE
*        PRINT NOGEN
         SPACE
         SAVE  (14,12),,VSM00000+&SYSDATE&SYSTIME   SAVE CALLER'S REGS
         LR    R11,R15                  LOAD BASE REG
         USING VSM00000,R11             CSECT ADDRESSABILITY
         LA    R2,SAVEAREA              CREATE SAVEAREA CHAIN
         ST    R2,8(R13)                FORWARD CHAIN POINTER
         ST    R13,SAVEAREA+4           BACKWARD CHAIN POINTER
         LR    R13,R2                   POINT TO MY SAVEAREA
         SPACE
         STFSMODE INITIAL=YES           PREPARE FOR VTAM TERMINAL I/O
         SPACE
P000100  DS    0H
         LA    R10,LINKAGE              POINT TO LINKAGE SECTION
         LA    R10,0(R10)               CLEAR HIGH ORDER BYTE
         USING $LNKSECT,R10             LINKAGE DSECT ADDRESSABILITY
         SPACE
         L     R3,16                    CVT POINTER
         LA    R2,256(0,0)              BACKUP TO
         SR    R3,R2                    CVT PREFIX
         USING CVTFIX,R3                CVT DSECT ADDRESSABILITY
         L     R2,CVTGDA                DETERMINE GDA ADDRESS
         LA    R2,0(R2)                 CLEAR HIGH ORDER BYTE
         ST    R2,@GDA                  STORE GDA ADDRESS
         MVC   @MAXCORE,CVTMZ00         DETERMINE MAX MEMORY ADDRESS
         MVC   @NUCHIGH,CVTNUCB         DETERMINE HIGHEST NUC ADDR
         MVC   @CSALOW,CVTSHRVM         DETERMINE BEGIN CSA ADDR
         MVC   @VRLINE,CVTREAL          DETERMINE V=R LINE
         L     R2,CVTSMCA               POINT TO SMF WORK AREA
         LA    R2,0(R2)                 CLEAR HIGH ORDER BYTE
         LTR   R2,R2                    SMF IN USE (ADDR ^ 0) ?
         BZ    P000200                  BIF NO
         MVC   #CPUID,16(R2)            MOVE CPU ID TO SCREEN
         MVC   CPUMDL,CVTMDL            DETERMINE CPU MODEL
         DROP  R3                       DROP CVT DSECT ADDRESSABILITY
         SPACE
P000200  DS    0H
         UNPK  TENBYTE,CPUMDL           UNPACK CPU MODEL
         TR    TENBYTE+1(4),TRTABLE     TRANSLATE
         MVC   CPUMDL,TENBYTE+3         MOVE BACK
         MVC   #CPUMDL,CPUMDL           MOVE CPU MODEL TO SCREEN
         MVC   @IOMOD,VSM99000          MOVE I/O MOD ADDR TO LINKAGE
         MVI   @BADCMND,C' '            MOVE BLANK TO BAD COMMAND IND
         SPACE
P000300  DS    0H
         SR    R0,R0                    CLEAR R0
         LA    R0,#SCREEN               LOAD SCREEN ADDRESS
         ST    R0,@PUTAREA              SAVE ADDR IN LINKAGE SECTION
         LA    R0,#SCRNLEN              LOAD SCREEN LENGTH
         ST    R0,@PUTLEN               STORE IN LINKAGE SECTION
         LR    R1,R10                   POINT TO LINKAGE
         L     R15,VSM99000             LOAD ADDR OF I/O MODULE
         BALR  R14,R15                  GO DO TERMINAL I/O
         SPACE
P000400  DS    0H                       WHAT TO DO ?
         CLI   @RSPONSE,C'1'            MAP VIRTUAL STORAGE ?
         BE    P000500                  BIF YES
         CLI   @RSPONSE,C'2'            SHOW SUBPOOL UTILIZATION ?
         BE    P000600                  BIF YES
         CLI   @RSPONSE,C'3'            SHOW CSA BY PROTECT KEY ?
         BE    P000700                  BIF YES
         CLI   @RSPONSE,C'H'            SHOW HELP MENU
         BE    P000810                  BIF YES
         CLI   @RSPONSE,C'M'            SHOW THE PRIMARY MENU ?
         BE    P000300                  BIF YES
         CLI   @RSPONSE,C'R'            REFRESH SCREEN ?
         BE    P000400                  BIF YES (DUMB BUT DOIT)
         CLI   @RSPONSE,C'Z'            TERMINATE VSM?
         BE    P999999                  BIF YES
         B     P000800                  ELSE BAD COMMAND
         SPACE
P000500  DS    0H
         L     R15,VSM00100             LOAD ADDR OF VIRT STOR MAPPER
         BALR  R14,R15                  GO MAP VIRTUAL STORAGE
         B     P000400                  READ RESPONSE
         SPACE
P000600  DS    0H
         L     R15,VSM00200             LOAD ADDR OF SUBPOOL MONITOR
         BALR  R14,R15                  GO MONITOR SUBPOOLS
         B     P000400                  READ RESPONSE
         SPACE
P000700  DS    0H
         L     R15,VSM00300             LOAD ADDR OF PROTECT KEY CP
         BALR  R14,R15                  GO MONITOR PROTECT KEYS
         B     P000400                  READ RESPONSE
         SPACE
P000800  DS    0H
         MVI   @BADCMND,C'1'            INDICATE INVALID COMMAND
         SPACE
P000810  DS    0H
         L     R15,VSMHELP              LOAD ADDR OF HELP SCREEN
         BALR  R14,R15                  GO HELP OUT
         B     P000400                  READ RESPONSE
         SPACE
P999999  STFSMODE OFF                   INDICATE NO MORE FULLSCREEN
         TCLEARQ INPUT                  CLEANUP
         SPACE
         L     R13,SAVEAREA+4           PREPARE TO BOOGIE
         RETURN (14,12)                 B O O G I E
         EJECT
SAVEAREA DC    18F'0'                   MY SAVEAREA
VSM99000 DC    V(VSM99000)              TERMINAL I/O MODULE
VSM00100 DC    V(VSM00100)              VIRTUAL STORAGE MAPPER
VSM00200 DC    V(VSM00200)              SUBPOOL MONITOR
VSM00300 DC    V(VSM00300)              PROTECT KEY MONITOR
VSMHELP  DC    V(VSMHELP)               HELP SCREEN
TRTABLE  DS    0CL256
         DC    CL240' '
         DC    X'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'
TENBYTE  DS    XL10
CPUMDL   DS    F
LINKAGE  DS    CL80
#SCREEN  DS    0CL100
         DC    X'C31140403C404000'
         HMAP  R=1,C=1,A=(ASKIP,BRT)
         DC    C'SELECT OPTION =>'
         HMAP  R=1,C=18,A=(UNPROT,FSET,IC)
         DS    XL1
         HMAP  R=1,C=64,A=(ASKIP,NORM)
         DC    C'CPU ID = '
         HMAP  R=1,C=73,A=(ASKIP,NORM)
#CPUID   DS    CL4
         HMAP  R=2,C=64,A=(ASKIP,NORM)
         DC    C'CPU MODEL = '
         HMAP  R=2,C=76,A=(ASKIP,NORM)
#CPUMDL  DS    CL4
         HMAP  R=6,C=27,A=(ASKIP,BRT)                 CBT-AXC
*        HMAP  R=6,C=33,A=(ASKIP,BRT)                 CBT-AXC
         DC    C' ROCKWELL INTERNATIONAL'             RI-LBD
*        DC    C'HALLMARK CARDS'                      CBT-AXC
         HMAP  R=7,C=28,A=(ASKIP,BRT)
         DC    C'VIRTUAL STORAGE MONITOR'
         HMAP  R=10,C=23,A=(ASKIP,BRT)
         DC    C'1  '
         HMAP  R=10,C=26,A=(ASKIP,NORM)
         DC    C'MAP VIRTUAL STORAGE'
         HMAP  R=11,C=23,A=(ASKIP,BRT)
         DC    C'2  '
         HMAP  R=11,C=26,A=(ASKIP,NORM)
         DC    C'DISPLAY CSA/SQA SUBPOOL UTILIZATION'
         HMAP  R=12,C=23,A=(ASKIP,BRT)
         DC    C'3  '
         HMAP  R=12,C=26,A=(ASKIP,NORM)
         DC    C'DISPLAY CSA UTILIZATION BY PROTECT KEY'
         HMAP  R=13,C=23,A=(ASKIP,BRT)
         DC    C'4  '
         HMAP  R=13,C=26,A=(ASKIP,NORM)
         DC    C'HELP MENU'
#SCRNLEN EQU   *-#SCREEN
         CVT   DSECT=YES,PREFIX=YES
         $GDA
         $LNKSECT
         LTORG
         END
