*        TITLE 'DIALOG SERVICES LSPACE'
***********************************************************************
*                                                                     *
*        MIKE  SHAW                                                   *
*        MORINO ASSOCIATES                                            *
*        LAST MODIFIED 8504                                           *
*                                                                     *
***********************************************************************
*        MODULE NAME - LSPACED                                        *
*                      QUICK DASD VOLUME SPACE LISTER                 *
*                                                                     *
*        FUNCTION -                                                   *
*           THIS MODULE DISPLAYS FREE SPACE INFORMATION ON A          *
*           DASD VOLUME SPECIFIED BY THE USER. (SIMILAR TO            *
*           SPF 3.7 VTOC, BUT MUCH FASTER).                           *
*                                                                     *
*        PANEL AND INPUTS/OUTPUTS DESCRIPTION:                        *
*                                                                     *
*        INITIAL PANEL (LSPDP1) LOOKS LIKE THIS:                      *
*                                                                     *
*        *----------------------------------------------*             *
*        ×  ---------------- LSPACE ------------------  ×             *
*        ×                                              ×             *
*        ×  VOLSER ===> _______                         ×             *
*        ×                                              ×             *
*        ×                                              ×             *
*        ×                                              ×             *
*        ×                                              ×             *
*        *----------------------------------------------*             *
*                                                                     *
*        USER TYPES A FULL DASD VOLSER OR A GENERIC VOLSER            *
*        IN THE 'VOLSER' FIELD ABOVE - GENERIC IS 1-5 CHARACTERS      *
*        WITH A TRAILING ASTERISK, (E.G., TSO9* OR STOR*)             *
*                                                                     *
*                                                                     *
*        ACTUAL DATA PANEL (LSPDP2) LOOKS (SOMETHING) LIKE THIS:      *
*                                                                     *
*        *-------------------------------------------------------*    *
*        ×  ---------------------- LSPACE ---------------------- ×    *
*        ×  COMMAND ===> ____                                    ×    *
*        ×                                                       ×    *
*        ×  VOLSER ADR TYPE FREE FREE FREE (LARGEST XTNT) MOUNT  ×    *
*        ×                  CYLS TRKS XNTS  CYLS    TRKS  ATTRIB ×    *
*        ×                                                       ×    *
*        ×  PUB024 2A3 3380  89  1707  54    68     1023  PUBLIC ×    *
*        ×                                                       ×    *
*        *-------------------------------------------------------*    *
*                                                                     *
*        FOR A GENERIC SEARCH, THE DATA LINE IS REPEATED FOR EACH     *
*        VOLSER THAT MATCHES THE SEARCH ARGUMENT. ISPF TABLE          *
*        CREATE/DISPLAY/DELETE SERVICES ARE USED. THE NUMBER          *
*        OF VOLUMES FOUND IS THE NUMBER OF LINES IN THE TABLE.        *
*        THE USER CAN SCROLL UP & DOWN TO REVIEW THE DISPLAY.         *
*        THIS FUNCTION CAN BE EASILY HOOKED INTO THE ISRUTIL PANEL    *
*        AS AN OPTION.                                                *
*                                                                     *
*          EXAMPLE: (FOR OPTION 3.L):                                 *
*                                                                     *
*                L,'PGM(LSPACED)'                                     *
*                                                                     *
*           THIS PROGRAM CALLS THE MVS UCB SEARCH ROUTINE TO GET      *
*           APPLICABLE DASD UCB ADDRESSES, THEN USES THE UCB          *
*           ADDRESS TO ISSUE THE LSPACE SVC. (SVC 78).                *
*           THIS SVC IS DOCUMENTED IN SY26-3828, OS/VS2 DADSM         *
*           LOGIC. THIS SVC ISSUES A RESERVE AGAINST THE              *
*           VOLUME BEING CHECKED, BUT IT IS A SHORT TERM RESERVE      *
*           AND IS QUICK. AFTER THE SVC EXECUTES,                     *
*           ITS RESULTS ARE 'MASSAGED' TO DISPLAY THE SAME INFO       *
*           FREE SPACE INFO AS SPF 3.7 OR ISPF V2 OPTION 3.4.         *
*           THE 'FREE TRACKS' FORMULA IS:                             *
*                                                                     *
*           FREE TRKS=FREE TRKS+(FREE CYL * TRKSPERCYL)               *
*                                                                     *
*        RESTRICTIONS -                                               *
*           DEVICE TYPE SENSITIVE, SUPPORTS 3330-1,3330-11,2305-2,    *
*                                           3350,3380                 *
*                                                                     *
*        MODULE DESCRIPTION -                                         *
*           TYPE -  SPF DIALOG SERVICE                                *
*           LANGUAGE -  ASSEMBLER                                     *
*           ATTRIBUTES -  NOT REENTRANT, NOT AUTHORIZED               *
*                                                                     *
*        ENTRY POINTS - LSPACED (ONLY ENTRY POINT)                    *
*                                                                     *
*        LINKAGE - CALLED BY SPF                                      *
*                                                                     *
*        INPUT - VOLSER AS ENTERED ON ENTRY PANEL                     *
*                                                                     *
*        OUTPUT - SPACE INFO AS DISPLAYED ON OUTPUT PANEL             *
*                                                                     *
*        EXIT - NORMAL RETURN LINKAGE                                 *
*                                                                     *
*        RETURN CODE - ZERO                                           *
*                                                                     *
*        EXTERNAL REFERENCES -                                        *
*                                                                     *
*           ROUTINES - ISPLINK MODULE                                 *
*                                                                     *
*           DATA AREAS - SPF DIALOG VARIABLES                         *
*                                                                     *
*           PANEL MEMBERS-  LSPDP1 (ENTRY PANEL)                      *
*                           LSPDP2 (OUTPUT PANEL)                     *
*                           LSPDP3 (TUTORIAL PANEL)                   *
*           MESSAGE MEMBER- LSPM00                                    *
*                                                                     *
*        TABLES = NONE                                                *
*                                                                     *
*        MACROS = SAVE, CALL, RETURN, IEFUCBOB, CVT, CVAFTST, LOAD,   *
*                 DELETE                                              *
*                                                                     *
*        MODIFICATION LOG -                                           *
*                                                                     *
*        12/11/81  MIKE YAFFE - WROTE INITIAL MODULE                  *
*                                                                     *
*        02/27/82  MIKE YAFFE - MOD TO DETERMINE IF VTOC IS           *
*                  INDEXED OR UNINDEXED                               *
*                                                                     *
*        11/28/83  MIKE SHAW - ADDED 3380 SUPPORT                     *
*                                                                     *
*        10/01/84  MIKE SHAW - CHANGED UCB LOOKUP FOR XA              *
*                                                                     *
*        10/12/84  MIKE SHAW - ALTERED OUTPUT FORMAT TO USE           *
*                  TABLE SERVICES AND A GENERIC LOOKUP FOR            *
*                  MULTIPLE VOLUMES, OR JUST ONE                      *
*                  IF LSPACE SVC PASSES BACK A NON-ZERO RETURN CODE,  *
*                  IT IS DISPLAYED ON TABLE ROW WITH VOLSER AND       *
*                  PROCESSING CONTINUES.                              *
*                                                                     *
*        04/01/85  BOB ZIMMERMAN OF CNA INSURANCE                     *
*                  UNDER VERSION 2 OF ISPF, THIS WILL NOW ALLOW       *
*                  THE USER TO SORT THE DISPLAY                       *
*                                                                     *
***********************************************************************
         EJECT
LSPACED  CSECT
         ISPF  SET,LEVEL=1
         SPACE 1
R0       EQU   0               LINKAGE REGISTER
R1       EQU   1               LINKAGE REGISTER
R2       EQU   2               ADDR OF CVT
R3       EQU   3               ADDR OF UCB LOOKUP TABLE
R4       EQU   4               ADDR OF CURRENT UCB
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10              BRANCHING REGISTER
R11      EQU   11              ADDR OF ISPLINK
R12      EQU   12              BASE REGISTER
R13      EQU   13              ADDRESS OF SAVEAREA
R14      EQU   14              LINKAGE REGISTER
R15      EQU   15              LINKAGE REGISTER
         SPACE 1
         USING LSPACED,R12     ESTABLISH ADDRESSABILITY TO BASE REG
         SPACE 3
***********************************************************************
*        LINKAGE ENTRY SEQUENCE
***********************************************************************
         SPACE 1
         SAVE  (14,12),,DIALOG_SERVICES_LSPACE_&SYSDATE_&SYSTIME
         LR    R12,R15         GET ENTRY ADDRESS
         LA    R2,SAVEAREA     GET ADDR OF S.A.
         ST    R2,8(R0,R13)    ESTABLISH BACK CHAIN
         ST    R13,SAVEAREA+4  ESTABLISH FORWARD CHAIN
         LR    R13,R2          LOAD THIS PROGS SAVE AREA ADDRESS
         SPACE 3
***********************************************************************
*        INITIALIZATION ROUTINE
***********************************************************************
         SPACE 1
         LOAD  EP=ISPLINK         LOAD DIALOG INTERFACE ROUTINE
         SPACE 1
         LR    R9,R0              SAVE EP AND
         ST    R9,ISPLINK               SAVE ISPLINK ADDRESS
         VCOPY '(ZENVIR)',4,ZENVIR,LOCATE
         SPACE
         ST    15,ZENVIR
         LR    R15,R9             ASSUME LOAD WORKED
         CALL  (15),(VDEFINE,EXTVL3,INTVL3,CHAR,LENG3),VL
         LR    R15,R9             GET ISPLINK ADDRESS
         CALL  (15),(VDEFINE,EXTVL5,INTVL5,CHAR,LENG5),VL
         LR    R15,R9             GET ISPLINK ADDRESS
         CALL  (15),(VDEFINE,EXTVL6,INTVL6,CHAR,LENG6),VL
         LR    R15,R9             GET ISPLINK ADDRESS
         CALL  (15),(VDEFINE,EXTVL7,INTVL7,CHAR,LENG7),VL
         LR    R15,R9             GET ISPLINK ADDRESS
         CALL  (15),(VDEFINE,EXTVL9,INTVL9,CHAR,LENG9),VL
         SPACE 3
         ISPF  SUPPRESS,LIST=(VDEFINE,CHAR)
         VDEFINE '(ZCMD)',ZCMD,CHAR,80
         SPACE 3
         VDEFINE '(VOLS)',$VOLS,FIXED,4
         SPACE 3
***********************************************************************
*        MAINLINE ROUTINE
***********************************************************************
         SPACE 1
MAIN     DS    0H
         LR    R15,R9
         CALL  (15),(DISPLAY,PANEL1),VL
*
MAIN1    DS    0H
         CH    R15,ENDKEY            WAS END OR RETURN PRESSED
         BE    EOJ                   YES- GO TO END OF JOB
         SPACE 2
ENTRMASH DS    0H
         CLI   $VOLSER,C'*'          ASTERISK AS 1ST CHAR NOT ALLOWED
         BE    ENDOFTAB              QUIT IF FOUND
         LA    R2,5                  SET UP FOR BCT
         LA    R3,$VOLSER+1          SCAN STARTING ADDRESS
SCANVOL  CLI   0(R3),C'*'            IS THIS A GENERIC REQUEST?
         BE    SETLEN                GO SET LENGTH IF IT IS
         LA    R3,1(R3)              CHECK NEXT CHARACTER
         BCT   R2,SCANVOL            SCAN ENTIRE VOLSER
         SPACE 1
         LA    R3,5                  SET FULL LENGTH FOR EXECUTE
         B     TABC                  AND GO CHECK OUT UCBS
         SPACE 1
SETLEN   DS    0H
         LA    R2,$VOLSER            SUBTRACT VOLSER
         SR    R3,R2                 STARTING ADDRESS FROM ENDING
         BCTR  R3,0                  DECREMENT FOR EXECUTE
         SPACE 1
TABC     DS    0H
         LR    R15,R9
         CALL  (15),(TBCREATE,LSPACTAB,SKIPPARM,                       X
               TABLINE,NOWRITE,REPLACE),VL
         SPACE 1
         MVI   TBCRDONE,X'FF'        INDICATE TBCREATE DONE
         L     R2,CVTPTR             LOAD R2 WITH CVT ADDRESS
         USING CVT,R2                ESTABLISH ADDRESSABILITY TO CVT
         SPACE 1
         XC    VOLS,VOLS             ZERO OUT VOLUME COUNT
         XC    WORKA,WORKA           ZERO OUT UCB LOOKUP WORK AREA
LOOP     L     R15,CVTUCBSC          LOAD R3 WITH UCB LOOKUP RTN ADR XA
         USING UCB,R4                ESTABLISH ADDRESSABILITY TO UCB
         SPACE 1
         DS    0H
         CALL  (15),(WORKA,DEV,UCBA),VL GO GET A UCB               XA
         LTR   R15,R15               DONE YET?                     XA
         BNZ   ENDOFTAB              IF NOT ZERO, WE'RE DONE       XA
         L     R4,UCBA               GET A(UCB)
         TM    UCBSTAT,UCBONLI       IS DASD ONLINE ?
         BNO   FINDNEXT              NO-  GET NEXT UCB
         TM    UCBSTAT,UCBCHGS       IS DASD GOING OFFLINE ?
         BO    FINDNEXT              YES- GET NEXT UCB
         EX    R3,COMPVOL            IS THIS THE VOLSER WE WANT ?
         BE    PROCESS               YES- GO DO IT
*
FINDNEXT DS    0H
         B     LOOP                  TRY AGAIN
COMPVOL  CLC   UCBVOLI(0),$VOLSER    * EXECUTED CLC *
         DROP  R2                                                  XA
*
PROCESS  DS    0H
         LR    R0,R4                 POINT R0 TO UCB NEEDED
         LA    R1,SVC78MSG           POINT R1 TO MSG AREA
         SVC   78                    GET THE GOODIES - CHECK RC LATER
         SPACE 1
         MVC   $UAD,UCBNAME          MOVE TO DIALOG VARIABLE
         MVC   UVOL,UCBVOLI          SAVE ACTUAL VOLSER
         L     R14,VOLS              INCREMENT
         LA    R14,1(,R14)           VOLUME HIT
         ST    R14,VOLS              COUNT
         PACK  NUMCYLH,NUMCYL        PACK TO STORAGE AREA
         PACK  NUMTRKH,NUMTRK        PACK TO STORAGE AREA
         PACK  NUMXTNTH,NUMXTNT      PACK TO STORAGE AREA
         PACK  LRGCYLH,LRGCYL        PACK TO STORAGE AREA
         PACK  LRGTRKH,LRGTRK        PACK TO STORAGE AREA
         SPACE 1
GETMNT1  DS    0H
         TM    UCBSTAB,UCBBPRV       IS DEVICE PRIVATE
         BNO   GETMNT2               NO- TRY PUBLIC
         MVC   $UMOUNT,=C'PRIVATE'   YES- MOVE DESCRIPTION
         B     GETUTYP
*
GETMNT2  DS    0H
         TM    UCBSTAB,UCBBPUB       IS DEVICE PUBLIC
         BNO   GETMNT3               NO- TRY STORAGE
         MVC   $UMOUNT,=C'PUBLIC '   YES- MOVE DESCRIPTION
         B     GETUTYP
*
GETMNT3  DS    0H
         TM    UCBSTAB,UCBBSTR       IS DEVICE STORAGE
         BNO   GETMNT4               NO- WHO KNOWS?
         MVC   $UMOUNT,=C'STORAGE'   YES- MOVE DESCRIPTION
         B     GETUTYP               CONTINUE
         SPACE 1
GETMNT4  DS    0H
         MVC   $UMOUNT,=C'???????'   UNKNOWN MOUNT ATTRIBUTE
         SPACE 1
GETUTYP  DS    0H
         TM    UCBUNTYP,U3380        IS DEVICE A 3350
         BNO   TST3350A              NO- TRY ANOTHER
         MVC   $UTYP,=C'3380   '     YES- MOVE DESCRIPTION
         LTR   R15,R15               WAS LSPACE RC = 0?
         BNZ   FORCERR               NO SPACE INFO IF SO
         B     COMP3380              GOTO TRACK CALCULATION RTN
*
TST3350A DS    0H
         TM    UCBUNTYP,U3350        IS DEVICE A 3350
         BNO   TST3330A              NO- TRY ANOTHER
         MVC   $UTYP,=C'3350   '     YES- MOVE DESCRIPTION
         LTR   R15,R15               WAS LSPACE RC = 0?
         BNZ   FORCERR               NO SPACE INFO IF SO
         B     COMP3350              GOTO TRACK CALCULATION RTN
*
TST3330A DS    0H
         TM    UCBUNTYP,U3330#11     IS DEVICE A 3330-11
         BNO   TST3330B              NO- TRY ANOTHER
         MVC   $UTYP,=C'3330-11'     YES- MOVE DESCRIPTION
         LTR   R15,R15               WAS LSPACE RC = 0?
         BNZ   FORCERR               NO SPACE INFO IF SO
         B     COMP3330              GOTO TRACK CALCULATION RTN
*
TST3330B DS    0H
         TM    UCBUNTYP,U3330#1      IS DEVICE A 3330-1
         BNO   TST2305               NO- TRY ANOTHER
         MVC   $UTYP,=C'3330-1 '     YES- MOVE DESCRIPTION
         LTR   R15,R15               WAS LSPACE RC = 0?
         BNZ   FORCERR               NO SPACE INFO IF SO
         B     COMP3330              GOTO TRACK CALCULATION RTN
*
TST2305  DS    0H
         TM    UCBUNTYP,U2305#2      IS DEVICE A 2305-2
         BNO   WHATUTYP              NO- TRY ANOTHER
         MVC   $UTYP,=C'2305-2 '     YES- MOVE DESCRIPTION
         LTR   R15,R15               WAS LSPACE RC = 0?
         BNZ   FORCERR               NO SPACE INFO IF SO
         B     COMP2305              GOTO TRACK CALCULATION RTN
*
WHATUTYP DS    0H
         MVC   $UTYP,=C'???????'     WHO KNOWS?
         B     TBADDROW              GO DISPLAY WHAT WE'VE GOT
         SPACE 1
COMP3380 DS    0H
         CLC   NUMCYL,=C'0000'       ARE THE NO OF FREE CYLINDERS 0 ?
         BE    CHK80LC               YES- TRY LARGEST CYLINDER CALC
         PACK  TEMPWK5,NUMCYL        PACK NUMBER OF FREE CYLINDERS
         MP    TEMPWK5,=P'15'        MULTIPLY BY TRK/CYL FOR 3380
         AP    NUMTRKH,TEMPWK5+2(3)  ADD IT TO NUMBER OF FREE TRACKS
*
CHK80LC  DS    0H
         CLC   LRGCYL,=C'0000'       IS THE LARGEST FREE GROUP 0 ?
         BE    GOTUTYP               YES- THATS ALL, GET OUT
         PACK  TEMPWK5,LRGCYL        PACK LARGEST FREE GROUP
         MP    TEMPWK5,=P'15'        MULTIPLY BY TRK/CYL FOR 3380
         AP    LRGTRKH,TEMPWK5+2(3)  ADD IT TO NUMBER OF FREE TRACKS
         B     GOTUTYP               THATS ALL, GET OUT
*
COMP3350 DS    0H
         CLC   NUMCYL,=C'0000'       ARE THE NO OF FREE CYLINDERS 0 ?
         BE    CHK50LC               YES- TRY LARGEST CYLINDER CALC
         PACK  TEMPWK5,NUMCYL        PACK NUMBER OF FREE CYLINDERS
         MP    TEMPWK5,=P'30'        MULTIPLY BY TRK/CYL FOR 3350
         AP    NUMTRKH,TEMPWK5+2(3)  ADD IT TO NUMBER OF FREE TRACKS
*
CHK50LC  DS    0H
         CLC   LRGCYL,=C'0000'       IS THE LARGEST FREE GROUP 0 ?
         BE    GOTUTYP               YES- THATS ALL, GET OUT
         PACK  TEMPWK5,LRGCYL        PACK LARGEST FREE GROUP
         MP    TEMPWK5,=P'30'        MULTIPLY BY TRK/CYL FOR 3350
         AP    LRGTRKH,TEMPWK5+2(3)  ADD IT TO NUMBER OF FREE TRACKS
         B     GOTUTYP               THATS ALL, GET OUT
*
COMP3330 DS    0H
         CLC   NUMCYL,=C'0000'       ARE THE NO OF FREE CYLINDERS 0 ?
         BE    CHK30LC               YES- TRY LARGEST CYLINDER CALC
         PACK  TEMPWK5,NUMCYL        PACK NUMBER OF FREE CYLINDERS
         MP    TEMPWK5,=P'19'        MULTIPLY BY TRK/CYL FOR 3330
         AP    NUMTRKH,TEMPWK5+2(3)  ADD IT TO NUMBER OF FREE TRACKS
*
CHK30LC  DS    0H
         CLC   LRGCYL,=C'0000'       IS THE LARGEST FREE GROUP 0 ?
         BE    GOTUTYP               YES- THATS ALL, GET OUT
         PACK  TEMPWK5,LRGCYL        PACK LARGEST FREE GROUP
         MP    TEMPWK5,=P'19'        MULTIPLY BY TRK/CYL FOR 3330
         AP    LRGTRKH,TEMPWK5+2(3)  ADD IT TO NUMBER OF FREE TRACKS
         B     GOTUTYP               THATS ALL, GET OUT
*
COMP2305 DS    0H
         CLC   NUMCYL,=C'0000'       ARE THE NO OF FREE CYLINDERS 0 ?
         BE    CHK05LC               YES- TRY LARGEST CYLINDER CALC
         PACK  TEMPWK5,NUMCYL        PACK NUMBER OF FREE CYLINDERS
         MP    TEMPWK5,=P'8'         MULTIPLY BY TRK/CYL FOR 2305-2
         AP    NUMTRKH,TEMPWK5+2(3)  ADD IT TO NUMBER OF FREE TRACKS
*
CHK05LC  DS    0H
         CLC   LRGCYL,=C'0000'       IS THE LARGEST FREE GROUP 0 ?
         BE    GOTUTYP               YES- THATS ALL, GET OUT
         PACK  TEMPWK5,LRGCYL        PACK LARGEST FREE GROUP
         MP    TEMPWK5,=P'8'         MULTIPLY BY TRK/CYL FOR 2305-2
         AP    LRGTRKH,TEMPWK5+2(3)  ADD IT TO NUMBER OF FREE TRACKS
         NOP   GOTUTYP               THATS ALL, GET OUT
*
GOTUTYP  DS    0H
         MVC   HOLD6BYT,MASK         MOVE IN EDIT MASK
         ED    HOLD6BYT,NUMCYLH+2    EDIT THE DATA
         MVC   $NUMCYL,HOLD6BYT+1    MOVE TO DIALOG VARIABLE
         MVC   HOLD6BYT,MASK         MOVE IN EDIT MASK
         ED    HOLD6BYT,NUMTRKH      EDIT THE DATA
         MVC   $NUMTRK,HOLD6BYT+1    MOVE TO DIALOG VARIABLE
         MVC   HOLD6BYT,MASK         MOVE IN EDIT MASK
         ED    HOLD6BYT,NUMXTNTH     EDIT THE DATA
         MVC   $NUMXTNT,HOLD6BYT+1   MOVE TO DIALOG VARIABLE
         MVC   HOLD6BYT,MASK         MOVE IN EDIT MASK
         ED    HOLD6BYT,LRGCYLH+2    EDIT THE DATA
         MVC   $LRGCYL,HOLD6BYT+1    MOVE TO DIALOG VARIABLE
         MVC   HOLD6BYT,MASK         MOVE IN EDIT MASK
         ED    HOLD6BYT,LRGTRKH      EDIT THE DATA
         MVC   $LRGTRK,HOLD6BYT+1    MOVE TO DIALOG VARIABLE
         SPACE 1
         CVAFTST UCB=(4)             ISSUE CVAF MACRO
         CH    R15,=X'0008'          IS VTOC INDEXED
         BNE   NOINDX                NO- ANY OTHER RC ASSUME UNINDEXED
         MVC   $VTOC,INDXED          MOVE IN INDEXED LITERAL
         B     *+10                  GO ON TO ADD TABEL ROW
NOINDX   DS    0H
         MVC   $VTOC,UNINDXED        MOVE IN UNINDEXED LITERAL
         B     TBADDROW              CONTINUE
         SPACE 1
FORCERR  DS    0H                    ERROR IN LSPACE OR UNKNOWN TYPE
         CVD   R15,SVC78RTN          CONVERT THE RETURN CODE
         UNPK  $RETCODE(7),SVC78RTN+4(4) UNPACK IT
         MVC   $RETCODE,$RETCODE+1   SHIFT OVER BY ONE
         OI    $RETCODE+5,X'F0'      SET ZONE FOR DISPLAY
         MVC   $NUMCYL,=C'*****'     EYECATCHER
         MVC   $NUMTRK,=C'====>'     EYECATCHER
         MVC   $NUMXTNT,=C'ERROR'    INDICATE
         MVC   $LRGCYL,=C'RC=  '     AN
         MVC   $LRGCYL+3(2),$RETCODE+4 ERROR
         MVC   $LRGTRK,=C'FROM '     OCCURRED
         MVC   $UMOUNT,=C'LSPACE  '  LSPACE RC NOT EQUAL TO ZERO
TBADDROW DS    0H
         LR    R15,R9             GET ISPLINK ADDRESS
         CALL  (15),(TBADD,LSPACTAB),VL ADD A ROW TO TABLE
         SPACE 1
         B     LOOP
*
ENDOFTAB DS    0H
         OC    VOLS,VOLS             ANY FOUND?
         BZ    NOTFND                ISSUE MESSAGE IF NOT
         SPACE 1
         L     R0,VOLS            GET VOLUME COUNT
         CVD   R0,SVC78RTN        CONVERT TO DECIMAL
*        MVC   $VOLS,MASK           MOVE IN EDIT MASK
*        ED    $VOLS,SVC78RTN+5     EDIT VOLUME COUNT IN
         MVC   $VOLS,VOLS           MOVE IN EDIT MASK
         SPACE 1
         LR    R15,R9             GET A(ISPLINK)
         CALL  (15),(TBTOP,LSPACTAB),VL BACK TO TOP ROW
         SPACE 1
TABLEDIS DS    0H
         CLI   FTIME,X'FF'
         BE    CONT1
         MVI   FTIME,X'FF'
         TBSORT LSPACTAB,FIELDS='(UVOL,C,A)'
         SPACE
CONT1    LR    R15,R9             GET A(ISPLINK)
         CALL  (15),(TBDISPL,LSPACTAB,LSPACTAB),VL
         SPACE 1
         CH    R15,=H'8'             WAS END OR RETURN PRESSED
         BH    EOJ                   YES- DISPLAY VOLSER SELECTION
         LTR   15,15                    WAS PF3 HIT
         BNZ   MAIN                     YES
         CLC   ZENVIR,=F'0'             ISPF VERSION 2?
         BNE   MAIN                     IF NOT GET OUT
         CLC   ZCMD(8),=CL8'VOLUME'
         BNE   NOTVOL
         TBSORT LSPACTAB,FIELDS='(UVOL,C,A)'
         SPACE
         B     TABLEDIS
NOTVOL   DS    0H
         CLC   ZCMD(8),=CL8'FREE'
         BNE   NOTFREE
         TBSORT LSPACTAB,FIELDS='(NCYL,N,D,NTRK,N,D)'
         SPACE
         B     TABLEDIS
NOTFREE  DS    0H
         CLC   ZCMD(8),=CL8'LARGEST'
         BNE   NOTLARG
         TBSORT LSPACTAB,FIELDS='(LCYL,N,D,LTRK,N,D)'
         SPACE
NOTLARG  B     TABLEDIS
         SPACE
NOTFND   LR    R15,R9             GET ISPLINK ADDRESS
         CALL  (15),(DISPLAY,SKIPPARM,MESSAGE1),VL
         B     MAIN1
*
         SPACE 3
***********************************************************************
*        LINKAGE EXIT SEQUENCE
***********************************************************************
         SPACE 1
EOJ      DS    0H
         CLI   TBCRDONE,X'FF'     WAS TBCREATE DONE?
         BNE   NOCLOSE            DON'T CLOSE IT IF SO
         LR    R15,R9             GET ISPLINK ADDRESS
         CALL  (15),(TBEND,LSPACTAB),VL DELETE TABLE
         SPACE
NOCLOSE  DS    0H
         VRESET ,
         SPACE
         DELETE EP=ISPLINK        REDUCE ISPLINK USE COUNT
         SPACE
         L     R13,SAVEAREA+4
         RETURN (14,12),RC=0
         SPACE 3
***********************************************************************
*        CONSTANTS AND OTHER GARBAGE
***********************************************************************
         SPACE 1
SAVEAREA DC    18F'-1'         LINKAGE SAVEAREA
SVC78RTN DS    D               SVC78 RETURN CODE WORK AREA
VOLS     DC    F'0'
ZENVIR   DS    A
ZCMD     DS    CL80
         ISPF  PARMS           SPF PARMS AREA
         SPACE
FTIME    DS    C
NUMCYLH  DS    CL5             HOLD AREA TO PACK INTO
NUMTRKH  DS    CL3             HOLD AREA TO PACK INTO
NUMXTNTH DS    CL3             HOLD AREA TO PACK INTO
LRGCYLH  DS    CL5             HOLD AREA TO PACK INTO
LRGTRKH  DS    CL3             HOLD AREA TO PACK INTO
TEMPWK5  DS    CL5             HOLD AREA TO PACK INTO
HOLD6BYT DS    CL6             HOLD AREA TO UNPACK INTO
MASK     DC    X'402020202120' EDIT MASK
         SPACE 1
WORKA    DC    100X'00'        UCBLOOKUP WORK AREA                 XA
DEV      DC    X'20'           DASD DEVICE CLASS BYTE              XA
UCBA     DC    A(0)            RETURNED UCB ADDRESS                XA
         SPACE 1
ENTERKEY DC    H'0000'         ENTER KEY RETURN CODE
ENDKEY   DC    H'0008'         END OR RETURN KEY RETURN CODE
U3330#1  EQU   X'09'           MASK FOR UNIT 3330-1
U3330#11 EQU   X'0D'           MASK FOR UNIT 3330-11
U3350    EQU   X'0B'           MASK FOR UNIT 3350
U3380    EQU   X'0E'           MASK FOR UNIT 3380
U2305#2  EQU   X'07'           MASK FOR UNIT 2305-2 (OR STC 4305)
INDXED   DC    CL9'YES      '  VTOC TYPE LITERAL
UNINDXED DC    CL9'NO       '  VTOC TYPE LITERAL
         SPACE 1
DISPLAY  DC    CL8'DISPLAY'
VDEFINE  DC    CL8'VDEFINE'
TBADD    DC    CL8'TBADD'
TBTOP    DC    CL8'TBTOP'
TBEND    DC    CL8'TBEND'
TBDISPL  DC    CL8'TBDISPL'
TBCREATE DC    CL8'TBCREATE'
LSPACTAB DC    CL8'LSPDP2'
NOWRITE  DC    CL8'NOWRITE'
REPLACE  DC    CL8'REPLACE'
         SPACE 1
CHAR     DC    CL8'CHAR'
PANEL1   DC    CL8'LSPDP1'     MEMBER NAME IN PANEL LIB
MESSAGE1 DC    CL8'LSPM001'    MEMBER NAME IN PANEL LIB IS LSPM00
MESSAGE2 DC    CL8'LSPM002'    MEMBER NAME IN PANEL LIB IS LSPM00
SKIPPARM DC    C' '
TBCRDONE DC    X'00'              SWITCH TO INDICATE TBCREATE DONE
LENG3    DC    F'3'
LENG5    DC    F'5'
LENG6    DC    F'6'
LENG7    DC    F'7'
LENG9    DC    F'9'
EXTVL3   DC    C'(UAD)'
EXTVL5   DC    C'(NCYL NTRK NXT LCYL LTRK)'
EXTVL6   DC    C'(VOL RETCODE UVOL VOLS)'
EXTVL7   DC    C'(UTYP UMNT)'
EXTVL9   DC    C'(IX)'
TABLINE  DC    C'(UVOL UAD UTYP NCYL NTRK NXT LCYL LTRK UMNT)'
*
INTVL6   DS    0H
$VOLSER  DS    CL6             VOLUME SERIAL (INPUT)
$RETCODE DS    CL6             SVC78 RETURN CODE (FOR DISPLAY)
UVOL     DS    CL6             VOLUME SERIAL (OUTPUT)
$VOLS    DS    CL6                VOLUME HIT COUNT
         DS    C               FILLER FOR UNPACK -> IF YOU HAVE TO ADD
*                              ANOTHER LENGTH 6 VARIABLE, BE CAREFUL AS
*                              YOU MUST CHANGE UNPACK LOGIC BECAUSE OF
*                              THIS FILLER FIELD. (IT WILL HAVE TO GO)
*
INTVL3   DS    0H
$UAD     DS    CL3             UNIT ADDRESS
*
INTVL7   DS    0H
$UTYP    DS    CL7             UNIT TYPE
$UMOUNT  DS    CL7             MOUNT STATUS
*
INTVL5   DS    0H
$NUMCYL  DC    C'00000'        NUMBER OF FREE CYLINDERS
$NUMTRK  DC    C'00000'        NUMBER OF FREE TRACKS
$NUMXTNT DC    C'00000'        NUMBER OF FREE EXTENTS
$LRGCYL  DC    C'00000'        LARGEST EXTENT OF FREE CYLINDERS
$LRGTRK  DC    C'00000'        LARGEST EXTENT OF FREE TRACKS
*
INTVL9   DS    0H
$VTOC    DS    CL9             VTOC TYPE INDICATOR
*
SVC78MSG DS    0CL30
         DS    CL6
NUMCYL   DS    CL4             NUMBER OF FREE CYLINDERS
         DS    C
NUMTRK   DS    CL4             NUMBER OF FREE TRACKS
         DS    C
NUMXTNT  DS    CL4             NUMBER OF FREE EXTENTS
         DS    C
LRGCYL   DS    CL4             LARGEST EXTENT OF FREE CYLINDERS
         DS    C
LRGTRK   DS    CL4             LARGEST EXTENT OF FREE TRACKS
         SPACE 3
CVT      DSECT
         CVT   DSECT=YES
UCB      DSECT
         IEFUCBOB
         END
