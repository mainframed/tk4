* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
* INTERFACE TO TPUT/TGET SVC FOR PL/1 PROGRAMS                        *
*   A WXTRN FOR THE SYMBOL PLIBASE IS USED TO CONTROL THE METHOD OF
*     ACCESS TO VARYING CHARACTER STRING VARIABLES. IF THE EXTERNAL
*     REFERENCE WAS RESOLVED BY THE LINKAGE EDITOR, ITS VALUE WILL
*     NON-ZERO. USING THIS TECHNIQUE ENABLES THE SUBROUTINE TO FUNCTION
*     PROPERLY WITH CODE GENERATED BY EITHER THE F-LEVEL OR
*     OPTIMIZING/CHECKOUT COMPILER.
*
*                                                                     *
* THIS MODULE HAS THREE ENTRY POINTS:                                 *
*                                                                     *
*   TGET - OBTAINS A MESSAGE FROM THE TERMINAL.                       *
*     INVOCATION: CALL TGET(VSTR,RC);                                 *
*       WHERE  VSTR IS A VARYING CHARACTER STRING USED TO RECEIVE THE *
*                   INPUT MESSAGE.                                    *
*       AND    RC   IS A HALFWORD BINARY VARIABLE. IT WILL CONTAIN THE*
*                   TGET RETURN CODE.                                 *
*     ENTRY DECLARATION:                                              *
*       DCL TGET ENTRY(CHAR(X) VAR,FIXED BIN(15));                    *
*     THE MAXIMUM LENGTH OF VSTR IS USED AS THE TGET BUFFER LENGTH;   *
*       AFTER THE EXECUTION OF TGET, LENGTH(VSTR)=NUMBER OF CHARACTERS*
*       READ.
*                                                                     *
*   TPUT - WRITES A MESSAGE TO THE TERMINAL.                          *
*     INVOCATION: CALL TPUT(VSTR,RC);                                 *
*       WHERE  VSTR IS A VARYING CHARACTER STRING CONTAINING THE MSG; *
*       AND    RC   IS A FIXED BIN(15) VARIABLE, TO RECEIVE THE TPUT  *
*                   RETURN CODE.
*     ENTRY DECLARATION:                                              *
*       DCL TPUT ENTRY(CHAR(X) VAR,FIXED BIN(15));                    *
*     THE CURRENT LENGTH OF VSTR IS USED AS THE TPUT BUFFER LENGTH.   *
*                                                                     *
*   TPUTID - WRITES A MESSAGE TO A TERMINAL IDENTIFIED BY A TJID.     *
*     INVOCATION: CALL TPUTID(VSTR,TJID,RC);                          *
*       WHERE  VSTR IS A VARYING CHARACTER STRING CONTAINING THE MSG; *
*              TJID IS A HALFWORD BINARY VARIABLE CONTAINING THE TJID *
*                   OF THE RECEIVING TERMINAL,                        *
*       AND    RC   IS A HALFWORD BINARY VARIABLE, TO RECEIVE THE TPUT*
*                   RETURN CODE.                                      *
*     ENTRY DECLARATION:                                              *
*       DCL TPUTID ENTRY(CHAR(X) VAR,FIXED BIN(15),FIXED BIN(15));    *
*     THE CURRENT LENGTH OF VSTR IS USED AS THE TPUT BUFFER LENGTH.   *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
*
PLITPTG  CSECT
         ENTRY TGET,TPUT,TPUTID
         WXTRN PLISTART
*
* REGISTER EQUATES
*
R0       EQU   0
R1       EQU   1
R13      EQU   13
R15      EQU   15
RBSE     EQU   10
RPARM    EQU   9
RSDV     EQU   8
RW1      EQU   11
RW2      EQU   6
RW3      EQU   7
*
*TGET ENTRY POINT
TGET     SAVE  (14,12),,*
         LR    RBSE,R15
         USING TGET,RBSE
         ST    R13,SA+4
         LR    RW1,R13
         LA    R13,SA
         ST    R13,8(RW1)
*
         LR    RPARM,R1
         L     RSDV,0(RPARM)
         USING DSDV,RSDV
         SR    R0,R0
         LH    R0,SDVMSL
         IC    RW2,=X'80' FLAGS-TGET, WAIT, EDIT
         L     RW3,SDVADDR    ADDR OF STRING (OR LENGTH FIELD)
         L     RW1,CMPSW     COMPILER SWITCH
         LTR   RW1,RW1
         BZ    TG1A          BR IF F-LEVEL COMPILER
         LA    RW3,2(RW3)    POINT TO DATA, NOT LENGTH FIELD
TG1A     SLL   RW3,8          DROP HIGH ORDER BYTE
         SLDL  RW2,24         FLAGS AND ADDR INTO ONE REG
         LR    R1,RW2
         TGET  (1),(0),R
         L     RW1,CMPSW     COMPILER SWITCH
         LTR   RW1,RW1
         BZ    TG1B          BR IF F-LEVEL
         STH   R1,HWHLD      SAVE TO ALIGNED
         L     RW3,SDVADDR   FETCH STRING ADDR
         MVC   0(2,RW3),HWHLD LENGTH TO STRING PREFIX
         B     TG1C
TG1B     STH   R1,SDVCSL      SET CURRENT STRING LENGTH IN SDV
TG1C     L     RW1,4(RPARM)
         STH   R15,0(RW1)     SET RETURN CODE
         B     RET
*
* TPUT ENTRY POINT
*
TPUT     SAVE  (14,12),,*
         LR    RBSE,R15
         USING TPUT,RBSE
         ST    R13,SA+4
         LR    RW1,R13
         LA    R13,SA
         ST    R13,8(RW1)
*
         LR    RPARM,R1
         L     RSDV,0(RPARM)
         USING DSDV,RSDV
         SR    R0,R0
         L     RW1,CMPSW     COMPILER SWITCH
         LTR   RW1,RW1
         BZ    TP1A          BR IF F-LEVEL
         L     RW3,SDVADDR   STRING ADDR
         MVC   HWHLD,0(RW3)  STRING LENGTH TO ALIGNED
         LH    R0,HWHLD      SET CURRENT LENGTH FOR TPUT
         IC    RW2,=X'00' FLAGS-TPUT,WAIT,NOHOLD,NOBREAK,EDIT
         L     RW3,SDVADDR    ADDR OF STRING
         LA    RW3,2(RW3)     POINT TO DATA
         B     TP1B
TP1A     LH    R0,SDVCSL      BUFFER SIZE=CURRENT STRING LENGTH
         IC    RW2,=X'00'  FLAGS-TPUT,WAIT,NOHOLD,NOBREAK,EDIT
         L     RW3,SDVADDR
TP1B     SLL   RW3,8      COMMON SETUP FOR TPUT
         SLDL  RW2,24
         LR    R1,RW2
         TPUT  (1),(0),R
         L     RW1,4(RPARM)
         STH   R15,0(RW1)     SET RETURN CODE
         B     RET
*
* TPUTID ENTRY POINT
*
TPUTID   SAVE  (14,12),,*
         LR    RBSE,R15
         USING TPUTID,RBSE
         ST    R13,SA+4
         LR    RW1,R13
         LA    R13,SA
         ST    R13,8(RW1)
*
         LR    RPARM,R1
         L     RSDV,0(RPARM)
         L     RW1,4(RPARM)
         LH    RW2,0(RW1)
         L     RW3,CMPSW   COMPILER SWITCH
         LTR   RW1,RW1
         BZ    TPI1A       BR IF F-LEVEL
         L     RW3,SDVADDR
         MVC   HWHLD,0(RW3)  CURRENT STRING LENGTH TO ALIGNED
         LH    RW3,HWHLD     FETCH CSL
         SLL   RW3,16
         SLDL  RW2,16
         LR    R0,RW2
         IC    RW2,=X'00' FLAGS-TPUT,WAIT,NOHOLD,NOBREAK,EDIT
         L     RW3,SDVADDR
         LA    RW3,2(RW3)   POINT TO DATA PORTION
         B     TPI1B
TPI1A    LH    RW3,SDVCSL     FETCH CURRENT STRING LENGTH
         SLL   RW3,16
         SLDL  RW2,16
         LR    R0,RW2
         IC    RW2,=X'00' FLAGS-TPUT,WAIT,NOHOLD,NOBREAK,EDIT
         L     RW3,SDVADDR
TPI1B    SLL   RW3,8
         SLDL  RW2,24
         LR    R1,RW2
         TPUT  (1),(0),R
         L     RW1,8(RPARM)
         STH   R15,0(RW1)
*
RET      L     R13,4(R13)
         RETURN (2,12)
*
* DSECTS
*
DPARM    DSECT
PL1      DS    F
PL2      DS    F
PL3      DS    F
*
DSDV     DSECT
SDVADDR  DS    F
SDVMSL   DS    H
SDVCSL    DS    H
*
PLITPTG  CSECT
SA       DS    18F
CMPSW    DC    A(PLISTART)    FOR POSSIBLE LINKAGE EDITOR RESOLUTION
HWHLD    DS    H
*
         END
