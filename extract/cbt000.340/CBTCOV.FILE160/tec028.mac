MESS     TITLE 'MESSAGE SENDING PROGRAM'
         MACRO
&NAME    @TPUT &TEXT,&ADDR
         LCLC  &L,&X
&L       SETC  'L'''
&X       SETC  '&SYSNDX'
&NAME    LA    R1,TEXT&X           BUFFER ADDRESS
         LA    R0,&L.TEXT&X        BUFFER LENGTH
         SVC   93                  ISSUE TPUT SVC
         B     &ADDR               BRANCH OUT
TEXT&X   DC    C&TEXT
         MEND
MESS     CSECT
         REGISTER
         STM   R14,R12,12(R13)     SAVE REGISTERS
         B     16(R15)             BRANCH AROUND ID
         DC    CL8'MESS'           IDENTIFIER
         LR    R12,R15             ENTRY ADDR
         USING MESS,R12
         GETMAIN R,LV=STORLEN      THIS PROGRAM IS RE-ENTERABLE
         ST    R13,4(R1)           SAVE OLD SAVE AREA ADDR
         ST    R1,8(R13)           SAVE NEW SAVE AREA ADDR
         LR    R13,R1              KEEP TRACK OF NEW AREA
         USING STORAGE,R13
*
RT       EQU   R11
*
*   GET A LINE OF INPUT
*
         XR    RT,RT
         LA    R1,LINE
         SVC   217
         CLI   LINE+23,C'X'
         BE    OKAY
         DC    H'0'
OKAY     LA    R2,5
         MVC   0(121,R1),BLANK1
         LA    R1,121(R1)
         BCT   R2,*-10
PROMPT   LA    R1,=C'OK'           BUFFER ADDR
         LA    R0,2                BUFFER LENGTH
         SVC   93                  ISSUE TPUT SVC FOR 'OK'
NOPROMPT LTR   R15,R15             TPUT OK?
         BNZ   STOP                NO:STOP
         MVC   INPUT(121),BLANK1
         LA    R1,INPUT            YES:BUFFER ADDR
         O     R1,=X'81000000'     FLAGS FOR TGET ASIS
         LA    R0,126              BUFFER LENGTH
*                                  MAX LENGTH FOR WTO IS 124
*                                  WE TAKE 2 MORE
         SVC   93                  ISSUE TGET SVC
         B     *+4(R15)            BRANCH ON RETURN CODE FROM TGET
         B     GETOK                0 OK
         B     TGETERR              4 NOWAIT & NO BUFFER
         B     STOP                 8 ATTN
         B     TOOLONG             12 INPUT TOO LONG
         B     TGETERR             16 NG PARMS
         B     STOP                20 CAN'T FIND HIM
*
*   DETERMINE WHAT TO DO WITH IT
GETOK    LA    R10,PROMPT
         CLC   INPUT(2),=C'/*'     END OF INPUT?
         BE    STOP                YES:STOP
         CLC   INPUT(2),=C'##'     HEXADECIMAL INPUT?
         BE    HEX                 YES:PACK IT
         CLC   INPUT(2),=C'@@'     WRITE TO OPERATOR?
         BE    OPER                YES:DO IT
         CLC   INPUT(2),=C'#L'     SHOW USERS ?
         BE    USERS               YES
         CLC   INPUT(2),=X'7B93'
         BE    USERS
         CLI   INPUT,C'$'
         BC    8,READ
         LA    R14,INPUT           POINT TO BUFFER
         LA    R15,X'01'           ASIS FLAGS
         CLI   INPUT,C'0'          1ST CHAR NUMERIC?
         BL    PUT                 NO:PRINT IT
         CLI   INPUT+1,C'0'        2ND CHAR NUMERIC?
         BL    PUT                 NO:PRINT IT
*
*   PACK TJID
*
         PACK  DWORK,INPUT(2)      PACK TJID
         CVB   RT,DWORK            TJID IN REGISTER
         SLL   RT,16               TJID IN HI-ORDER HALF
         LA    R14,INPUT+2         POINT TO TEXT
         SH    R1,=H'2'            LENGTH-2
*
*   SEND THE TEXT TO A TERMINAL
*
PUT      LA    R2,0(R1,R14)        BUFFER END ADDR
         MVI   0(R2),X'15'         HEX NL (RETURN CARRIAGE)
         LA    R0,1(R1)            LENGTH IN R0
         OR    R0,RT               OR IN TJID
         LA    R1,0(R14)           BUFFER ADDR IN R1
         SLL   R15,24              BUMP FLAGS UP
         OR    R1,R15              OR IN FLAGS
         SVC   93                  ISSUE TPUT SVC
         MVC   LINE(121),BLANK1
         B     *+4(R15)            BRANCH ON RETURN CODE FROM TPUT
         BR    R10
         BCR   0,0
         B     TPUTERR              4 NOWAIT & NO BUFFER
         B     STOP                 8 ATTN
         B     NOCOM               12 NOINTERCOM
         B     TPUTERR             16 NG PARMS
         B     NOFIND              20 CAN'T FIND HIM
*
*   PACK THE DATA FROM HEXADECIMAL
*
HEX      TR    INPUT+2(118),TTBLE  TRANSLATE TO FX FORMAT
         LA    R14,PDATA           PACK ADDR
         LA    R15,7               PACK INCREMENT
         LA    R3,INPUT-12         LOOP INDEX
         LA    R4,14               LOOP INCREMENT
         LA    R5,INPUT-1(R1)      LOOP COMPARATOR
PACKLOOP BXH   R3,R4,PACKEND
         PACK  0(8,R14),0(15,R3)   PACK INPUT
         AR    R14,R15             BUMP PACK POINTER
         B     PACKLOOP            LOOP
PACKEND  SH    R1,=H'2'            LENGTH-2
         SRA   R1,1                LENGTH/2
         LA    R14,PDATA           POINT TO BUFFER
         LA    R15,X'02'           FLAGS FOR TPUT,CONTROL
         B     PUT
*
*   ROUTINES FOR NON-ZERO RETURN CODES FROM TPUT/TGET
*
NOCOM    @TPUT 'USER IS NOT ACCEPTING MESSAGES',NOPROMPT
NOFIND   @TPUT 'USER IS NOT LOGGED ON',NOPROMPT
TPUTERR  MVC   INPUT(4),=C'TPUT'   TPUT ERROR
         B     ERRCODE             PRINT ERROR CODE
TOOLONG  TCLEARQ
         @TPUT 'MESSAGE TOO LONG, REENTER INPUT -',NOPROMPT
TGETERR  MVC   INPUT(4),=C'TGET'   TGET ERROR
         B     ERRCODE             PRINT ERROR CODE
*
*   MESSAGE GOES TO OPERATOR
*
         MVC   INPUT+2(70),LINE
OPER     SH    R1,=H'3'            LENGTH-3
         LA    R2,5(R1)            LENGTH FOR WTO
         STH   R2,PDATA            SAVE LENGTH FOR WTO
         MVC   PDATA+2(2),=H'0'    MCS FLAGS
         EX    R1,WTOMVC           BUMP TEXT BACK
         WTO   MF=(E,PDATA)        WRITE TO OPERATOR
         MVI   INPUT+1,C'@'
         MVC   LINE(121),BLANK1
         BR    R10
WTOMVC   MVC   PDATA+4(0),INPUT+2  (EXECUTED)
*
*   UNIDENTIFIABLE RETURN CODE FROM TPUT/TGET - PRINT THE NUMBER
*
ERRCODE  MVC   INPUT+4(12),ECMESS
         STC   R15,DWORK           STORE RETURN CODE
         UNPK  INPUT+16(3),DWORK(2)
         TR    INPUT+16(2),TTBLE   FIX A,B,C,D,E,F
         LA    R1,INPUT            BUFFER ADDR
         LA    R0,18               BUFFER ADDR
         SVC   93                  ISSUE TPUT SVC
         B     NOPROMPT
ECMESS   DC    C' ERROR CODE '
*
*   FINISHED
*
STOP     LR    R1,R13              FREEMAIN ADDR
         L     R13,4(R13)          OLD SAVE AREA ADDR
         LA    R0,STORLEN          FREEMAIN LENGTH
         SVC   10                  ISSUE FREEMAIN SVC
         LM    R14,R12,12(R13)     RESTORE REGISTERS
         SLR   R15,R15             RETURN CODE=0
         BR    R14                 RETURN
*
TTBLE    DC    XL135'FAFBFCFDFEFF',XL64'FAFBFCFDFEFF',XL41'00',CL16'012X
               3456789ABCDEF'
         EJECT
READ     LA    R3,INPUT+2
         BCTR  R1,R0
         BCTR  R1,R0
         LA    R15,INPUT+2(R1)
         MVI   0(R15),C' '
         BCTR  R1,R0
         MH    R1,=H'7'
         ST    R1,DWORK
         OC    INPUT+2(11),BLANK1
CONTROLS CLI   0(R3),C'X'
         BE    PROMPT               IGNORE REMAINDER OF CARD
         LA    R4,10              R4 IS THE COUNTER FOR 17 CHARACTERS
         LA    R5,13
         CLI   0(R3),C'1'
         BE    PAGEIT
         CLI   0(R3),C'0'         SHOULD WE LEAVE 7 BLANK LINES?
         BNE   PROCESS            OR SIMPLY PRINT IT?
         LA    R5,6               COUNTER FOR LINES PRINTED
PAGEIT   MVC   LINE+242(11),INPUT+2
         BAL   R10,PRINT          SKIP 7 LINES
         BCT   R5,PRINT
         MVC   INPUT+2(11),LINE+242
         MVC   LINE+242(11),BLANK1
         SPACE 2
PROCESS  LA    R9,LINE-6
SEARCH   L     R5,CHARWORD        VALUE OF CHARWORD LOADED INTO R5
         LA    R9,7(R9)           PRINT POSITION FOR NEXT LARGE-SIZE
         CLI   1(R3),X'40'
         BE    BLANK
         LA    R6,CHARTBL
         CLC   0(1,R6),1(R3)      COMPARE CHARACTER IN CHARTBL TO CHAR
         BE    *+16               BRANCH IF CHARACTER IS FOUND
         LA    R6,1(R6)           MOVE TO NEXT CHARACTER IN CHARTBL
         BCT   R5,*-14            BRANCH TO 'CLC' FOR NEXT COMPARISION
         B     ERROR              CHARCTER WAS NEVER FOUND
         SPACE 3
         LA    R6,CHARWORD+4      POINTS TO POSITION OF 'A' IN CHARWORD
         L     R8,CHARWORD        LOAD VALUE OF CHARWORD
         SR    R8,R5              ESTABLISH THE RELATIVE POSITION IN
         SLL   R8,2               ESTABLISH INDEX REGISTER
*        R8 + R6 POINTS TO THE CORRECT ADDRESS IN CHARWORD
         L     R7,0(R8,R6)        LOAD BIT STRING INTO R7
         LA    R5,5               BIT PATTERN IS FIVE DEEP
         LR    R6,R9              CURRENT POSITION IN PRINT LINE
AGAIN    LA    R8,5               CHARACTER PATTERN IS 5 WIDE
         LTR   R7,R7              IS THE BIT '1' OR '0' ?
         BNM   *+8                BRANCH TO 'SLL' IF BIT IS ZERO
         MVI   0(R6),C'@'         IF THE BIT IS ONE, PUT IN AN @
         SLL   R7,1               MOVE UP NEXT BIT
         LA    R6,1(R6)           MOVE TO NEXT POSITION IN PRINT LINE
         BCT   R8,*-18            BRANCH TO 'LTR' AND CHECK NEXT BIT
         LA    R6,116(R6)         LOAD THE PROPER ADDRESS OF NEXT PRINT
         BCT   R5,AGAIN
BLANK    LA    R3,1(R3)           POSITION OF NEXT CHARACTER ON DATA
         BCT   R4,SEARCH          SEARCH FOR NEXT CHARACTER
         LA    R3,3(R3)           A(NEXT CONTROL CHARACTER)
         SPACE 3
*                                 NOW PRINT ALL 5 LINE BUFFERS
NOW      LA    R5,4
         LA    R6,LINE
         BAL   R10,PRINT          1ST ROW OF *'S
         LA    R6,121(R6)         ADDRESS OF NEXT PRINT LINE
         MVC   LINE(121),0(R6)
         MVC   0(121,R6),BLANK1
         BCT   R5,PRINT
         BAL   R10,PRINT
         LA    R10,PROMPT
         SPACE 3
PRINT    LA    R14,LINE
         L     R1,DWORK
         XR    R15,R15
         CLI   INPUT+1,C'@'
         BC    8,OPER-6
         BC    7,PUT
         SPACE 2
ERROR    LA    R1,E1
         LA    R0,L'E1
         TPUT  (1),(0),R
         BC    15,PROMPT
         EJECT
BLANK1   DC    CL121' '
E1       DC    C'**** INVALID CHARACTER ININPUT ***'
         SPACE 2
*              CHARACTER CONFIGURATION WORDS
*
CHARWORD DC    F'47'              # OF POSSIBLE CHARACTERS
         DC    X'747F1880'        'A'
         DC    X'F47D1F00'        'B'
         DC    X'7C210780'        'C'
         DC    X'F4631F00'        'D'
         DC    X'FC3F0F80'        'E'
         DC    X'FC3F0800'        'F'
         DC    X'7C2F1700'        'G'
         DC    X'8C7F1880'        'H'
         DC    X'F9084F80'        'I'
         DC    X'08431700'        'J'
         DC    X'8CB92880'        'K'
         DC    X'84210F80'        'L'
         DC    X'8EEB1880'        'M'
         DC    X'8E6B3880'        'N'
         DC    X'74631700'        'O'
         DC    X'F47D0800'        'P'
         DC    X'746B3780'        'Q'
         DC    X'F47D2880'        'R'
         DC    X'7C1C1F00'        'S'
         DC    X'F9084200'        'T'
         DC    X'8C631700'        'U'
         DC    X'8C62A200'        'V'
         DC    X'8C6B5F80'        'W'
         DC    X'8A88A880'        'X'
         DC    X'8A884200'        'Y'
         DC    X'F8888F80'        'Z'
         DC    X'7CEB9F00'        '0'
         DC    X'61084F80'        '1'
         DC    X'74444F80'        '2'
         DC    X'F04C1F00'        '3'
         DC    X'94BE2100'        '4'
         DC    X'FC3C1F00'        '5'
         DC    X'E43F1F80'        '6'
         DC    X'F8888800'        '7'
         DC    X'FC5D1F80'        '8'
         DC    X'7C5E1080'        '9'
         DC    X'213E4200'        '+'
         DC    X'003E0000'        '-'
         DC    X'07C1F000'        '='
         DC    X'0000C600'        '.'
         DC    X'0000C200'        ','
         DC    X'6300C600'        ':'
         DC    X'6300C200'        ';'
         DC    X'08888800'        '/'
         DC    X'63180600'    '!'
         DC    X'41044400'    '>'
         DC    X'11104100'    '<'
         SPACE 1
CHARTBL  DC    C'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789+-=.,:;/!><'
         LTORG
         SPACE 3
STORAGE  DSECT
SAVEAREA DS    9D
DWORK    DS    D
PDATA    DS    XL8
INPUT    DS    CL130
LINE     DS    6CL121
STORLEN  EQU   *-STORAGE
MESS     CSECT
USERS    STM  14,12,SAVE1
         BALR  11,0
         B     #SHOWL
SAVE1    DS    9D
#SHOWL   DS    0H
         LA    R0,L'SHOWLTM        HEADING LENGTH
         LA    R1,SHOWLTM          HEADING ADDR
         TPUT  (1),(0),R           PRINT IT
         L     R2,16               CVT ADDR
         L     R3,0(,R2)           TCB LIST ADDR
         L     R3,4(,R3)           CURRENT TCB ADDR
         L     R3,180(,R3)         JSCB ADDR
         LH    R3,268(,R3)         THIS USER'S TJID
         L     R9,228(,R2)         TSCVT ADDR
         LH    R10,26(,R9)         TJB ENTRY LENGTH    <---
         L     R9,0(,R9)           TJB TABLE ADDR      <---
         L     R2,200(,R2)         2ND-ARY CVT ADDR
         L     R2,20(,R2)          MAJOR QCB CHAIN START
QCBLP    CLC   12(8,R2),=C'SYSIKJUA'  IS THIS THE RIGHT MAJOR QCB?
         BE    GOTQCB              YES:GET MINOR QCB
         CLC   12(8,R2),=C'TSOUSERS'  NO:GUESS AGAIN
         BE    GOTQCB              GOT IT ON THE 2ND TRY
         L     R2,0(,R2)           NEXT QCB ADDR
         LTR   R2,R2               END OF CHAIN?
         BC    7,QCBLP
EXIT     LM    R14,R12,SAVE1
         B     PROMPT
GOTQCB   L     R2,8(,R2)           MINOR QCB
         LTR   R2,R2               ALL DONE?
         BZ    EXIT                YES:BYE
         SLR   R15,R15             CLEAR FOR INSERT
         IC    R15,12(,R2)         USERID LENGTH
         BCTR  R15,0               LENGTH-1
         LA    R0,6                K
         CR    R15,R0              LENGTH LONG?
         BNH   MVUID               NO:MOVE IT
MVUID    EX    R15,QMNMVC          USERID IN BUFFER
         L     R14,0(,R2)          QEL ADDR
         SLR   R1,R1               CLEAR FOR INSERT
         ICM   R1,1,12(R14)        2ND HALF OF TJID = 0?
         BNZ   TJIDNE0             NO:USE IT
         L     R1,8(,R14)          TCB ADDR
         L     R1,180(,R1)         JSCB ADDR
         LH    R1,268(,R1)         TJID
         CR    R1,R3               THIS USER?
         BNE   TJIDNE0             NO:CONTINUE
         LA    R15,2(,R15)         ADD 2 TO LENGTH
         LA    R14,CMDBUF+9(R15)   BUFFER END ADDR
         MVC   0(2,R14),=C' *'     MARK THIS USER
TJIDNE0  CVD   R1,WORK             DECIMAL TJID
         SLR   R0,R0               CLEAR FOR MULTIPLY
         MR    R0,R10              TJID * TJB LENGTH = TJB OFFSET
         AR    R1,R9               TJB OFFSET + TJB START = THIS TJB
         UNPK  CMDBUF-1(5),46(3,R1)  UNPACK TCAM LINE #
         TR    CMDBUF(3),TABLE-240  MAKE IT PRINTABLE
         MVC   CMDBUF+3(5),TJIDMASK  MASK FOR EDIT
         ED    CMDBUF+4(4),WORK+6  UNPACK TJID
         MVC   CMDBUF+8(2),=C'  '  BLANKS BETWEEN TJID & USERID
         LA    R1,CMDBUF           BUFFER ADDR
         LA    R0,11(,R15)         BUFFER LENGTH
         TPUT  (1),(0),R           PRINT IT
         B     GOTQCB              LOOP THROUGH MINOR QCBS
WORK     DC    D'0'
QMNMVC   MVC   CMDBUF+10(0),14(R2)  (EXECUTED)
SHOWLTM  DC    C'LINE TJID USERID'
TJIDMASK DC    X'4040202120'
TABLE    DC    C'0123456789ABCDEF'
CMDBUF   DC    CL80' '
         END   MESS
