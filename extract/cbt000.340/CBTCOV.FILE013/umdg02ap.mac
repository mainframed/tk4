          /***********************************************************/
          /*                                                         */
          /*   VERSION           : 001                               */
          /*   MODIFIKATION      : 000                               */
          /*   ERSTELLUNGS DATUM : 15.04.76                          */
          /*   LETZTE AENDERUNG  : 15.04.76                          */
          /*                                                         */
          /*   AUFTRAGGEBER   : MDV                                  */
          /*   ENTWURF        : G.HESSE                              */
          /*   PROGRAMMIERUNG : G.HESSE                              */
          /*   TEL.NR.        : 3456                                 */
          /*                                                         */
          /*        SOURCE PROGRAM LIBRARY UPDATE                    */
          /*                                                         */
          /***********************************************************/
 SPLU:
          PROC OPTIONS (MAIN);
-         DCL DATE BUILTIN;
-         DCL  TIME      BUILTIN;
-         DCL ONCODE BUILTIN;
-         DCL MERK BIN FIXED INIT (0) STATIC;
-         DCL MERKT BIN FIXED INIT (0) STATIC;
-         DCL  INB1      BIN FIXED;
-         DCL  INB2      BIN FIXED;
-         DCL  INB3      BIN FIXED;
-         DCL  ICOPY     BIN FIXED;
-         DCL  NUM       CHAR (10) INIT ('1234567890') STATIC;
-         DCL  ALPH      CHAR (26) INIT ('ABCDEFGHIJKLMNOPQRSTUVWXYZ')
                                        STATIC;
-         DCL FM DEC FIXED (1) INIT (0) STATIC; /* ERROR COUNTER */
-         DCL  PRMERK    BIN FIXED; /* FEHL.MERKER PREPROC */
-         DCL  COND BIN FIXED (31);  /* FUER PLIRETC */
-         DCL  FUNCUP  CHAR (5);        /* FUER IEBUPDTE */
-         DCL  CANCEL    CHAR (6);
-         DCL  MBRTEST   CHAR (10);  /* MEMBER ZUM TESTEN             */
-         DCL  MBRPRDU   CHAR (10);  /* MEMBER ZUR PRODUKTION         */
-         DCL  MBRUEB    CHAR (10);  /* MEMBER DER BENUTZT WERDEN SOLL*/
-         DCL  MBRLTEST  CHAR (10);
-         DCL  SAVEB     CHAR (1); /* KZ DAS PGM PRDU LAEUFT */
-         DCL PDATE  CHAR (8);            /* DATUM */
-         DCL PPAGE  PIC'999' INIT (000) STATIC; /* SEITE */
-         DCL  ARZAHL    PIC'99999';
-         DCL XPGMN  CHAR (8);            /* PGMNA */
-         DCL XREV   CHAR (8);            /* LEBEN */
-         DCL XVER   CHAR (3);            /* VERSI */
-         DCL XLAG   CHAR (4);            /* SPRAC */
-         DCL PARM    CHAR (6);
-         DCL RUEPARM CHAR (6);
-         DCL HCOMP CHAR (8);           /* HILFSGROESSE COMPILE*/
-         DCL TES     DEC FIXED (1) INIT (0) STATIC;
-         DCL  WORKLOG   CHAR (103);  /*  LOGSATZ  */
-         DCL WORK CHAR (80);      /*   INPUT CARD                   */
-         DCL WORK1  CHAR (80);  /*  FUER SYSIN       */
-         DCL WORK2  CHAR (80);  /*  FUER SYSIN       */
-         DCL WORK3  CHAR (88);  /*  FUER DATEI KORR  */
-         DCL WORK4  CHAR (88);  /*  FUER DATEI KORR  */
-         DCL WORK5  CHAR (88);  /*  FUER DATEI KORR  */
-         DCL WORK6 CHAR (80);  /*  FUER DATEI TEMP            */
-         DCL WORK7 CHAR (80);
          DCL WORK8 CHAR (88);    /* I/O-BEREICH FUER TAP1 */
-         DCL WORK9 CHAR (80);  /* FUER RENAME */
-         DCL  NULLCA    CHAR (160);  /* FUER DATEI CATA */
-         DCL  NULLCAU   CHAR (160);  /* FUER DATEI CATA */
-         DCL SKZ BIN FIXED (15) INIT (0) STATIC;
-         DCL LO  CHAR (8) INIT ('$$ LOAD;') STATIC;
-         DCL CO  CHAR (10)INIT ('$$ COMPILE') STATIC;
-         DCL NN  CHAR (13)INIT ('$$ NEW NUMBER') STATIC;
-         DCL DK  CHAR (16)INIT ('$$ DISK TO CARD;');
-         DCL AR  CHAR (9) INIT ('$$ ARCHIV') STATIC;
          DCL DL  CHAR (9) INIT ('$$ DELETE') STATIC;
          DCL DR  CHAR (9) INIT ('$$ DRUCK ') STATIC;
-         DCL LI  CHAR (8) INIT ('$$ LIST;') STATIC;
-         DCL KO  CHAR (8) INIT ('$$ CORR;') STATIC;
-         DCL  REN       CHAR (9) INIT ('$$ RENAME') STATIC;
-         DCL COP CHAR (7) INIT ('$$ COPY') STATIC;
-         DCL  DOB  CHAR (1) INIT ('B') STATIC;
-         DCL DOD CHAR (1) INIT ('D');  /* DO WHILE DLET VERARB */
-         DCL DOT CHAR (1) INIT ('L') STATIC;
-         DCL DOW CHAR (1) INIT ('Z');  /*  DOWHILE                  */
-         DCL DOAK CHAR (8);      /* DO WHILE FUER KORR -> TAP1 */
-         DCL DOAR CHAR (1) INIT ('$') STATIC; /* FUER ARCHIV */
-         DCL DOC CHAR (1) INIT ('C');  /* DO WHILE DATEI CATA */
-         DCL DOK CHAR (1) INIT ('K');  /* DO WHILE DATEI KORR */
-         DCL DO3 CHAR (1) INIT ('$');  /* DO WHILE KORR VERAB */
-         DCL DO13 CHAR (8);
-         DCL DO31 CHAR (1) INIT ('N') STATIC;
-         DCL DO7 CHAR (8);             /* DO WHILE LISTVERARB */
-         DCL DO9 CHAR (8);             /* DO WHILE COMPILE    */
-         DCL DO11 CHAR (1) INIT ('$'); /* DO WHILE LOAD VERARB*/
-         DCL DO17 CHAR (8);            /* DO WHILE DISK TO KAR*/
-         DCL DOH CHAR (1) INIT (' ') STATIC;  /* HILFSGROESSE */
-         DCL HSCHL CHAR (8);
-         DCL  STOPALL   CHAR (1);
-         DCL  STOPUPD   CHAR (1);
-         DCL GSCHL CHAR (16);
-         DCL SCHL PIC'(8)9';
-         DCL  SPRME     CHAR (3);
-         DCL  DCARD     CHAR (1)  INIT ('*') STATIC;
-         DCL ZAHL PIC'99999999' INIT ('00000000') STATIC;
-         DCL  KORR FILE RECORD KEYED ENV (INDEXED,
                                           INDEXAREA(13000),
                                           ADDBUFF);
-         DCL CATA FILE RECORD KEYED ENV (INDEXED);
-         DCL TEMP FILE RECORD SEQL;
-         DCL PUNCH FILE OUTPUT;
-         DCL TAPE FILE RECORD;
-         DCL TAP1 FILE RECORD;
-         DCL HILF FILE RECORD SEQL;
-         DCL  LOG  FILE RECORD SEQL;
-         DCL  SAVETY FILE RECORD SEQL;
-         DCL DRU   FILE RECORD SEQL OUTPUT;
-         DCL  PREPROC   EXTERNAL ENTRY;
          DCL UPDRUCK    EXTERNAL ENTRY;
-         /***********************************************************/
          /*                                                         */
          /*   ON ENDFILE BEDINGUNG SYSIN                            */
          /*                                                         */
          /***********************************************************/
0         ON ENDFILE (SYSIN) BEGIN;
                             PUT FILE (SYSPRINT) SKIP (3) EDIT
                             ('*****  ENDE PROGRAMM  *****')
                             (X(30),A);
                             DOW = ' ';
                             CLOSE FILE (LOG);
                             END;
-         /***********************************************************/
          /*                                                         */
          /*   ON ENDPAGE BEDINGUNG FUER SYSPRINT                    */
          /*                                                         */
          /***********************************************************/
0         ON ENDPAGE (SYSPRINT) BEGIN;
                                CALL UEBA;
                                END;
1         /***********************************************************/
          /*                                                         */
          /*             S T E U E R T E I L                         */
          /*                                                         */
          /***********************************************************/
 BEGINN:
          DISPLAY ('*');
          DISPLAY ('*');
          DISPLAY ('*');
          DISPLAY ('*  WENN DAS PGM BEENDET WERDEN MUSS BITTE ENDUPD'××
                  ' EINGEBEN  *') REPLY (CANCEL) EVENT (ICAN);
          DISPLAY ('*');
          DISPLAY ('*');
          DISPLAY ('*');
          OPEN FILE (SYSPRINT) STREAM LINESIZE(132);
          OPEN FILE (LOG) SEQL OUTPUT;
          GET EDIT (WORK) (A(80));
          WORKLOG = WORK ×× SUBSTR (WORK,4,8) ×× DATE ×× TIME;
          IF DOW ^= ' ' THEN WRITE FILE (LOG) FROM (WORKLOG);
          DO WHILE (DOW = 'Z');
          SKZ = SKZ + 1;
          IF CANCEL ^= ' ' THEN DO;
                           IF CANCEL = 'ENDUPD' THEN DO;
                                                CALL ENDUPD;
                                                END;
                             ELSE DO;
                             CALL DISP;
                             END;
                           END;
          ELSE DO; /* BEGIN BLOCK 1 */
-         IF SUBSTR (WORK,1,3)='$$$' THEN DO;
                                     /* BLOCK 1 */
                                     FM = 1;
                                     CALL UEBAUF;
                                     CALL BLK1A1;
                                     IF MERK = 1 THEN DO;
                                                 MERK = 0;
                                                 CALL UEBAUF;
                                                 END;
                                     IF MERK ^= 2 THEN CALL BLK1A2;
                                                  ELSE DOW = '';
                                     END;
-           ELSE DO;  /* BEGIN BLOCK 2 */
0             IF SUBSTR(WORK,1,8)= KO THEN DO;
                                      /* BLOCK 3 */
                                      IF SPRME ^= 'COB' THEN
                                                        CALL BLK3;
                                                        ELSE
                                                        CALL BLK3C;
                                      END;
-               ELSE DO; /* BEGIN BLOCK 4 */
0                 IF SUBSTR(WORK,1,8)=DL THEN DO;
                                         /* BLOCK 5 */
                                         IF SPRME ^= 'COB' THEN
                                                           CALL BLK5;
                                                           ELSE
                                                           CALL BLK5C;
                                         END;
-                 ELSE DO; /* BEGIN BLOCK 6 */
0                   IF SUBSTR(WORK,1,8)=LI THEN DO;
                                           /* BLOCK 7 */
                                           IF SPRME ^= 'COB' THEN
                                                             CALL BLK7;
                                                             ELSE
                                                             CALL BLK7C;
                                           END;
-                   ELSE DO; /* BEGIN BLOCK 8 */
0                     IF SUBSTR(WORK,1,10)=CO THEN DO;
                                              /* BLOCK 9 */
                                              IF SPRME ^= 'COB' THEN
                                                          CALL BLK9;
                                                          ELSE
                                                          CALL BLK9C;
                                              END;
-                     ELSE DO; /* BEGIN BLOCK 10 */
0                       IF SUBSTR(WORK,1,8)=LO THEN DO;
                                               /* BLOCK 11 */
                                               IF SPRME ^= 'COB'
                                                 THEN DO;
                                                 IF SUBSTR(WORK,10,4) =
                                                 'TAPE' THEN CALL LOTA;
                                                        ELSE CALL BLK11;
                                                 END;
                                               ELSE DO;
                                               CALL BLK11C;
                                               END;
                                               END;
-                       ELSE DO; /* BEGIN BLOCK 12 */
0                         IF SUBSTR(WORK,1,13)=NN THEN DO;
                                                  /* BLOCK 13 */
                                                 IF SPRME ^= 'COB'
                                                   THEN CALL BLK13;
                                                   ELSE CALL BLK13C;
                                                  END;
-                         ELSE DO; /* BEGIN BLOCK 14 */
                            IF SUBSTR (WORK,1,7)=COP THEN DO;
                                                     /* BLOCK 15 */
                                                     CALL BLK15;
                                                     END;
-                           ELSE DO; /* BEGIN BLOCK 16 */
0                             IF SUBSTR(WORK,1,16)=DK THEN DO;
                                                      /* BLOCK 17 */
                                                      IF SPRME^='COB'
                                                        THEN CALL BLK17;
                                                       ELSE CALL BLK17C;
                                                      END;
-                             ELSE DO; /* BEGIN BLOCK 18 */
0                               IF SUBSTR(WORK,1,9)=AR THEN DO;
                                                       /* BLOCK 19 */
                                                       CALL BLK19;
                                                       END;
                                ELSE DO; /* BEGIN BLOCK 20 */
                                IF SUBSTR(WORK,1,9)=REN THEN DO;
                                                        CALL BLK21;
                                                        END;
                                  ELSE DO; /* BEGIN BLOCK 21 */
-                                 IF SUBSTR(WORK,1,7)='$$ LINK' THEN DO;
                                                       /* BLOCK 22 */
                                                       CALL LINK;
                                                                END;
                                    ELSE DO; /* BEGIN BLOCK 23 */
                                    IF SUBSTR (WORK,1,8) = '$$ CARD;'
                                              THEN CALL CARD;
                                      ELSE DO; /* BEGIN BLOCK 25 */
                                      IF SUBSTR(WORK,1,10)='$$ CHANGE;'
                                                THEN CALL CHANGE;
                                        ELSE DO;       /* BEG. DRUCK */
                                        IF SUBSTR (WORK,1,9) = DR THEN
                                                                 DO;
                                          WORK3 = SUBSTR (NULLCA,1,72)
                                                  ×× GSCHL;
                                          CALL UPDRUCK (WORK3,
                                                        WORK,
                                                        PRMERK);
                                          IF PRMERK ^= 0 THEN DO;
                                             CALL DRUFE;
                                             CALL BLKF;
                                             OPEN FILE (DRU);
                                             CLOSE FILE (DRU);
                                             END;
                                          END;
                                      ELSE CALL BLKF;
                                        END;      /* ENDE DRUCK  */
                                      END; /* END BLOCK 25 */
                                    END; /* END BLOCK 23 */
                                  END; /* END BLOCK 21 */
0                               END; /* END BLOCK 20 */
0                             END; /* END BLOCK 18 */
0                           END; /* END BLOCK 16 */
0                         END; /* END BLOCK 14 */
0                       END; /* END BLOCK 12 */
0                     END; /* END BLOCK 10 */
0                   END; /* END BLOCK 8 */
0                 END; /* END BLOCK 6 */
0               END; /* END BLOCK 4 */
0           END; /* END BLOCK 2 */
-         END; /* END BLOCK 1 */
0         END; /* DO WHILE 3 */
1         /***********************************************************/
          /*                                                         */
          /*   UNTERPROGRAMM UEBERSCHRIFT DRUCKEN                    */
          /*                                                         */
          /***********************************************************/
-UEBA:
          PROC;
          PPAGE = PPAGE + 1;
          PUT FILE (SYSPRINT) PAGE;
          PUT FILE (SYSPRINT) SKIP (3) EDIT ('  SOURCE PROGRAM LIBRAR'××
                                             'Y','DATE  ',PDATE,'PAGE  '
                                             ,PPAGE)
                                            (A,X(80),A,A,X(3),A,A);
          PUT FILE (SYSPRINT) SKIP (4) EDIT
          ('PROGRAMNAME :',XPGMN,'LAST REVISION :',XREV,'VERSION :',
            XVER,'LANGUAGE :',XLAG)
          (A,A,X(8),A,A,X(6),A,A,X(6),A,A);
          END UEBA;
          /*****       ENDE PROGRAMM UEB                         *****/
1         /***********************************************************/
          /*                                                         */
          /*             UNTERPROGRAMM UEBD UEBERSCHRIFT DELET       */
          /*                                                         */
          /***********************************************************/
-UEBD:
          PROC;
          CALL UEBA;
          PUT FILE (SYSPRINT) SKIP (3) EDIT
          ('DELETE LISTING') (X(41),A);
          PUT FILE (SYSPRINT) SKIP EDIT
          ('================') (X(40),A);
          PUT FILE (SYSPRINT) SKIP;
          END UEBD;
          /*****              END UNTERPROGRAMM UEBD             *****/
1         /***********************************************************/
          /*                                                         */
          /*        UNTERPROGRAMM UEBK UEBERSCHRIFT KORREKTUR        */
          /*                                                         */
          /***********************************************************/
-UEBK:
          PROC;
          CALL UEBA;
          PUT FILE (SYSPRINT) SKIP (3) EDIT
          ('CORRECTION LISTING') (X(57),A);
          PUT FILE (SYSPRINT) SKIP EDIT
          ('====================') (X(56),A);
          PUT FILE (SYSPRINT) SKIP (4) EDIT ('NEW STATEMENT','OLD' ××
                                            ' STATEMENT') (X(29),A,
                                                           X(57),A);
          PUT FILE (SYSPRINT) SKIP (3);
          END UEBK;
          /*****         ENDE UNTERPROGRAMM UEBK                 *****/
1         /***********************************************************/
          /*                                                         */
          /*   UNTERPROGRAMM UEBAUF UEBERSCHRIFT AUFBEREITEN         */
          /*                                                         */
          /***********************************************************/
-UEBAUF:
          PROC;
          NULLCAU = '';
          OPEN FILE (CATA) DIRECT UPDATE;
-         ON KEY (CATA) BEGIN;
                        IF ONCODE = 51 THEN DO;
                                       MERK = 1;
                                       END;
                          ELSE DO;
                          PUT SKIP EDIT ('*** ',ONCODE,' ***')
                                        (A,F(5),A);
                          PUT DATA;
                          END;
                        END;
          HSCHL = SUBSTR (WORK,4,8);
          GSCHL = '00000000' ×× HSCHL;
          READ FILE (CATA) INTO (NULLCAU) KEY (GSCHL);
          IF SUBSTR (NULLCAU,4,8) = '        ' THEN DO;
                                               MERK = 1;
                                               CLOSE FILE (CATA);
                                               RETURN;
                                               END;
          XPGMN = SUBSTR (NULLCAU,4,8);
          XLAG  = SUBSTR (NULLCAU,69,4);
          XVER  = SUBSTR (NULLCAU,65,3);
          IF MERK = 0 THEN DO;
                      TES = 1;
                      PARM = ' ' ×× SUBSTR (NULLCAU,73,5);
                      CALL DATUMAS (PARM,RUEPARM,TES);
                      XREV = SUBSTR (RUEPARM,1,2) ×× '/' ××
                             SUBSTR (RUEPARM,3,2) ×× '/' ××
                             SUBSTR (RUEPARM,5,2);
                      PDATE = SUBSTR (DATE,5,2) ×× '/' ××
                              SUBSTR (DATE,3,2) ×× '/' ××
                              SUBSTR (DATE,1,2);
                      END;
          CLOSE FILE (CATA);
          END UEBAUF;
          /*****         ENDE UNTERPROGRAMM UEBAUF               *****/
1         /***********************************************************/
          /*                                                         */
          /*   UNTERPROGRAMM UEBL UEBERSCHRIFT FUER LIST ALL DRUCKEN */
          /*                                                         */
          /***********************************************************/
-UEBL:
          PROC;
          CALL UEBA;
          PUT FILE (SYSPRINT) SKIP (4) EDIT ('SOURCE LISTING')
                                            (X(29),A);
          PUT FILE (SYSPRINT) SKIP EDIT ('================')
                                        (X(28),A);
          PUT FILE (SYSPRINT) SKIP (2);
          END UEBL;
          /*****         ENDE UNTERPROGRAMM UEBL                 *****/
1         /***********************************************************/
          /*                                                         */
          /*             UNTERPROGRAMM UEBL FUER LOAD                */
          /*                                                         */
          /***********************************************************/
-UEBLA:
          PROC;
          CALL UEBA;
          PUT FILE (SYSPRINT) SKIP (3) EDIT
          ('DAS OBIGE PROGRAMM WURDE GELADEN')
          (X(50),A);
          PUT FILE (SYSPRINT) SKIP EDIT
          ('==================================')
          (X(49),A);
          END UEBLA;
          /*****             END UNTERPROGRAMM UEBLA             *****/
1         /***********************************************************/
          /*                                                         */
          /*             UNTERPROGRAMM BLKNN NEW NUMBER              */
          /***********************************************************/
          /*                                                         */
-BLKNN:
          PROC;
          CALL UEBA;
          PUT FILE (SYSPRINT) SKIP (4) EDIT
          ('DAS OBIGE PROGRAMM WURDE NEU NUMERIERT') (X(47),A);
          PUT FILE (SYSPRINT) SKIP EDIT
          ('========================================') (X(46),A);
          END BLKNN;
          /*****             ENDE UNTERPROGRAMM BLKNN            *****/
1         /***********************************************************/
          /*                                                         */
          /*             UP UEBCHNG UEBERSCHRIFT CHANGE              */
          /*                                                         */
          /***********************************************************/
-UEBCHNG:
          PROC;
          CALL UEBA;
          PUT FILE (SYSPRINT) SKIP (3) EDIT
          ('CHANGE LISTING') (X(35),A);
          PUT FILE (SYSPRINT) SKIP EDIT
          ('================') (X(34),A);
          PUT FILE (SYSPRINT) SKIP (3);
          END UEBCHNG;
          /*****              END UP UEBCHNG                     *****/
1         /***********************************************************/
          /*                                                         */
          /*        UNTERPROGRAMM BLK1A1  DATEI CATA                 */
          /*                                                         */
          /***********************************************************/
-BLK1A1:
          PROC;
          STOPALL = '';
          STOPUPD = '';
          MBRUEB = '';
          OPEN FILE (SAVETY) SEQL INPUT;
          READ FILE (SAVETY) INTO (MBRUEB);
          CLOSE FILE (SAVETY);
          NULLCA = '';
          HSCHL = SUBSTR (WORK,4,8);
          GSCHL = '00000000' ×× HSCHL;
          SPRME = SUBSTR (WORK,69,3);
          IF SPRME = 'PLI' THEN DO; /* DO 1 */
                           IF SUBSTR (WORK,72,1) = 'X' THEN COND = 991;
                                                       ELSE COND = 992;
                           END; /* END DO 1 */
            ELSE DO; /* ELSE 1 */
            IF SPRME = 'FOR' THEN COND= 995;
              ELSE DO; /* ELSE 2 */
              IF SPRME = 'COB' THEN COND= 993;
                ELSE DO; /* ELSE 3 */
                IF SPRME = 'ASM' THEN COND = 994;
                                 ELSE DO; /* ELSE 4 */
                                 CALL BLKF;
                                 RETURN;
                                 END; /* END ELSE 4 */
                END; /* END ELSE 3 */
             END; /* END ELSE 2 */
            END; /* END ELSE 1 */
-         ON KEY (CATA) BEGIN;
                        IF ONCODE = 51 THEN DO;
                                       DOC = ' ';
                                       END;
                        END;
-         OPEN FILE (CATA) DIRECT UPDATE;
          READ FILE (CATA) INTO (NULLCA) KEY (GSCHL);
          STOPALL = SUBSTR (NULLCA,91,1);
          STOPUPD = SUBSTR (NULLCA,92,1);
          IF STOPALL ^= ' ' THEN DO;
                            CALL UEBA;
                            PUT FILE (SYSPRINT) SKIP (4) EDIT
                            ('***** DIESES PROGRAMM IST ALS GESPERRT '××
                             'GEKENNZEICHNET *****') (X(30),A);
                            PUT FILE (SYSPRINT) SKIP (3) EDIT
                            ('***** DAS PROGRAMM WURDE ABGEBROCHEN '××
                             '*****') (X(43),A);
                            DOW = ' ';
                            CLOSE FILE (CATA);
                            MERK = 2;
                            RETURN;
                            END;
          TES = 0;
          PARM = SUBSTR (DATE,5,2) ××
                 SUBSTR (DATE,3,2) ××
                 SUBSTR (DATE,1,2);
          CALL DATUMAS (PARM,RUEPARM,TES);
          IF DOC ^= ' ' THEN DO;
                       IF SUBSTR (NULLCA,125,5) ^= ' ' THEN DO;
                                                       /* PGR VON BAN*/
                                                       CALL BAN;
                                                       RETURN;
                                                       END;
                       SUBSTR (NULLCA,1,72) = SUBSTR (WORK,1,72);
                       SUBSTR (NULLCA,73,5) = SUBSTR (RUEPARM,2,5);
                       MBRTEST = SUBSTR (NULLCA,94,10);
                       MBRPRDU = SUBSTR (NULLCA,104,10);
                       SAVEB = SUBSTR (NULLCA,124,1);
                       MBRLTEST = SUBSTR (NULLCA,114,10);
                       SUBSTR (NULLCA,130,3) = SUBSTR (WORK,74,3);
                       SUBSTR (NULLCA,133,2) = SUBSTR (WORK,78,3);
                       REWRITE FILE (CATA) FROM (NULLCA) KEY (GSCHL);
                       END;
                         ELSE DO;
                       DOW = ' ';
                       PUT FILE (SYSPRINT) SKIP (4) EDIT
                       ('*****  FUER DIESES PROGRAMM FEHLT DER EIN'××
                        'TRAG DER MEMBERNAMEN.  *****') (X(35),A);
                       PUT FILE (SYSPRINT) SKIP EDIT
                       ('*****  LASSEN SIE VON DER ZUSTAENDIGEN ' ××
                        'STELLE NAMEN EINTRAGEN   *****') (X(35),A);
                       PUT FILE (SYSPRINT) SKIP (3) EDIT
                       ('*****  DAS PROGRAMM WURDE ABGEBROCHEN  *****')
                       (X(43),A);
                       MERK = 2;
                       RETURN;
                         END;
          CLOSE FILE (CATA);
          DOC = 'C';
          END BLK1A1;
          /*****         ENDE UNTERPROGRAMM BLK1A1               *****/
1         /***********************************************************/
          /*                                                         */
          /*        UNTERPROGRAMM BLK1A2  DATEI KORR                 */
          /*                                                         */
          /***********************************************************/
-BLK1A2:
          PROC;
          HSCHL = SUBSTR (WORK,4,8);
          GSCHL = HSCHL ×× '00000000';
-         ON KEY (KORR) BEGIN;
                        IF ONCODE = 51 THEN DO;
                                       DOK = ' ';
                                       END;
                        END;
-         OPEN FILE (KORR) DIRECT UPDATE;
          DO WHILE (DOK = 'K');
          DOK = 'G';
          READ FILE (KORR) INTO (WORK3) KEY (GSCHL);
          END;
-         IF DOK = ' ' THEN DO;
                       WORK3 = SUBSTR (WORK,1,72) ×× GSCHL;
                       WRITE FILE (KORR) FROM (WORK3) KEYFROM (GSCHL);
                       END;
          GET EDIT (WORK) (A(80));   /**  ** KARTE EINLESEN   **/
          WORKLOG = WORK ×× HSCHL ×× DATE ×× TIME;
          IF DOW ^= ' ' THEN WRITE FILE (LOG) FROM (WORKLOG);
          CLOSE FILE (KORR);
          DOK = 'K';
          END BLK1A2;
          /*****         ENDE UNTERPROGRAMM BLK1A2               *****/
1         /***********************************************************/
          /*                                                         */
          /*        UNTERPROGRAMM BLK1A2C DATEI KORR                 */
          /*                                                         */
          /***********************************************************/
-BLK1A2C:
          PROC;
          HSCHL = SUBSTR (WORK,4,8);
          GSCHL = HSCHL ×× '00000000';
-         ON KEY (KORR) BEGIN;
                        IF ONCODE = 51 THEN DO;
                                       DOK = ' ';
                                       END;
                        END;
-         OPEN FILE (KORR) DIRECT UPDATE;
          DO WHILE (DOK = 'K');
          DOK = 'G';
          READ FILE (KORR) INTO (WORK3) KEY (GSCHL);
          END;
-         IF DOK = ' ' THEN DO;
                       WORK3 = SUBSTR (WORK,1,72) ×× GSCHL;
                       WRITE FILE (KORR) FROM (WORK3) KEYFROM (GSCHL);
                       END;
          CLOSE FILE (KORR);
          END BLK1A2C;
          /*****         ENDE UNTERPROGRAMM BLK1A2C              *****/
1         /***********************************************************/
          /*                                                         */
          /*             UP DISP DISPLAY AUSGEGEBEN                  */
          /*                                                         */
          /***********************************************************/
-DISP:
          PROC;
          WAIT (ICAN);
          DISPLAY ('*');
          DISPLAY ('*');
          DISPLAY ('*  WENN DAS PGM BEENDET WERDEN MUSS BITTE ENDUPD'××
                   ' EINGEBEN  *') REPLY (CANCEL) EVENT (ICAN);
          DISPLAY ('*');
          DISPLAY ('*');
          DISPLAY ('*');
          CANCEL = '';
          END DISP;
          /*****              END UP DISP                        *****/
1         /***********************************************************/
          /*                                                         */
          /*             UP SAVE1 PRUEFUNG OB LINK ERLAUBT           */
          /*                                                         */
          /***********************************************************/
-SAVE1:
          PROC;
          PUT FILE (SYSPRINT) SKIP (4) EDIT
          ('*****  SIE WOLLEN LINKEN UND HABEN EINEN FALSCHEN ' ××
           'MEBERNAMEN ANGEGEBEN.','*****') (X(20),A,X(13),A);
          PUT FILE (SYSPRINT) SKIP     EDIT
          ('***** ENTWEDER WAR DER MEMBER FUER TESTLAEUFE ODER DER' ××
           ' MEMBER FUER PRODUKTION FALSCH','*****') (X(20),A,A);
          PUT FILE (SYSPRINT) SKIP     EDIT
          ('***** ODER FUER DIESEN LAUF NICHT GUELTIG','*****')
          (X(20),A,X(43),A);
          PUT FILE (SYSPRINT) SKIP (3) EDIT
          ('***** DAS PROGRAMM WURDE ABGEBROCHEN ','*****')
          (X(33),A,X(01),A);
          END SAVE1;
          /*****              END UP SAVE1                       *****/
1         /***********************************************************/
          /*                                                         */
          /*             UP SAVE PRUEFUNG OB COMPILE ERLAUBT         */
          /*                                                         */
          /***********************************************************/
-SAVE:
          PROC;
          PUT FILE (SYSPRINT) SKIP (4) EDIT
          ('*****   SIE WOLLEN EIN PROGRAMM COMPILIEREN UND IN EINE' ××
           ' DER FOLGENDEN BIBLIOTHEKEN STELLEN :      *****')(X(11),A);
          PUT FILE (SYSPRINT) SKIP (2) EDIT
          ('MDV.LINKLIB    *****') (X(94),A);
          PUT FILE (SYSPRINT) SKIP (2) EDIT
          ('MDV.OBJLIB     *****') (X(94),A);
          PUT FILE (SYSPRINT) SKIP (2) EDIT
          ('IMSVS.PGMLIB   *****') (X(94),A);
          PUT FILE (SYSPRINT) SKIP (2) EDIT
          ('IMSVS.FMTOBJ   *****') (X(94),A);
          PUT FILE(SYSPRINT) SKIP (2) EDIT
          ('*****   SIE HABEN FUER DIESEN LAUF EINEN FALSCHEN MEMBER'××
          'NAMEN ANGEGEBEN.WENDEN SIE SICH AN DIE    *****')(X(11),A);
          PUT FILE (SYSPRINT) SKIP (2) EDIT
          ('*****   ZUSTAENDIGE STELLE','*****') (X(11),A,X(72),A);
          PUT FILE (SYSPRINT) SKIP (2) EDIT
          ('*****   ES WURDE NUR COMPILE AUSGEFUEHRT','*****')
          (X(33),A,X(02),A);
          END SAVE;
          /*****              END  UP SAVE                       *****/
1         /***********************************************************/
          /*                                                         */
          /*          UP SAVE2 FEHLER BEI REPRO                      */
          /*                                                         */
          /***********************************************************/
-SAVE2:
          PROC;
          PUT FILE (SYSPRINT) SKIP (4) EDIT
          ('*****  SIE WOLLEN EIN FORMAT IN DIE PRODUKTIONS-BIBLIOTHE'××
           'K STELLEN UND HABEN DAZU KEINE ER-      *****') (X(12),A);
          PUT FILE (SYSPRINT) SKIP (2) EDIT
          ('*****  LAUBTNIS.WENDEN SIE SICH BITTE AN DIE ZUSTAENDIGE'××
           ' STELLE.','*****') (X(12),A,X(33),A);
          PUT FILE (SYSPRINT) SKIP (2) EDIT
          ('*****  DAS PROGRAMM WURDE ABGEBROCHEN.','*****')
          (X(33),A,X(02),A);
          END SAVE2;
          /*****              END UP SAVE2                       *****/
1         /***********************************************************/
          /*                                                         */
          /*             UP SAVE3 FEHLER BEI REPRO                   */
          /*                                                         */
          /***********************************************************/
-SAVE3:
          PROC;
          PUT FILE (SYSPRINT) SKIP (4) EDIT
          ('*****  SIE WOLLEN EIN FORMAT IN DIE PRODUKTIONS-BIBLIOTHE'××
          'K STELLEN UND HABEN EINEN FALSCHEN      *****') (X(12),A);
          PUT FILE (SYSPRINT) SKIP (2) EDIT
          ('*****  MEMBER ANGEGEBEN WENDEN SIE SICH BITTE AN DIE' ××
          ' ZUSTAENDIGE STELLE.','*****') (X(12),A,X(25),A);
          PUT FILE (SYSPRINT) SKIP (2) EDIT
          ('*****  DAS PROGRAMM WURDE ABGEBROCHEN.','*****')
          (X(33),A,X(02),A);
          END SAVE3;
          /*****              END UP SAVE3                       *****/
1         /***********************************************************/
          /*                                                         */
          /*             UP BLK3 VERARBEITUNG CORR                   */
          /*                                                         */
          /***********************************************************/
-BLK3:
          PROC;
          IF FM = 0 THEN DO;
                         PUT FILE (SYSPRINT) SKIP (4) EDIT
                         ('***** ERSTE KARTE WAR KEINE GUELTIGE' ××
                          ' VORLAUFKARTE *****') (X(30),A);
                         PUT FILE (SYSPRINT) SKIP (2) EDIT
                         ('***** DAS PROGRAMM WURDE ABGEBROCHEN ' ××
                          '*****') (X(37),A);
                         DOW = ' ';
                         RETURN;
                         END;
          IF STOPUPD ^= ' ' THEN DO;
                            CALL FEHLSTO;
                            RETURN;
                            END;
          OPEN FILE (KORR) DIRECT UPDATE;
          ON ENDPAGE (SYSPRINT) BEGIN;
                               CALL UEBK;
                               END;
          CALL UEBK;
-         GET EDIT (WORK1) (A(80));
          WORKLOG = WORK1 ×× HSCHL ×× DATE ×× TIME;
          IF DOW ^= ' ' THEN WRITE FILE (LOG) FROM (WORKLOG);
          DO3 = SUBSTR (WORK1,1,1);
          IF DO3 ^= '$' THEN DO; /* DO 1 */
          GSCHL = HSCHL ×× SUBSTR (WORK1,73,8);
-         DO WHILE (DO3 ^= '$');
          ON KEY (KORR) BEGIN;
                        IF ONCODE = 51 THEN DO;
                                             DO3 = '.';
                                             END;
                        END;
          IF VERIFY (SUBSTR(WORK1,73,8),'1234567890')^=0 THEN DO;
                                                      PUT FILE(SYSPRINT)
                                                      SKIP EDIT(WORK1,
                                                      '   FEHLER IN '××
                                                      'SOURCE-NUMMER')
                                                      (A);
                                                      END;
          ELSE DO;
          READ FILE (KORR) INTO (WORK4) KEY (GSCHL);
          IF DO3 = '.'   THEN DO;
                         PUT FILE (SYSPRINT) SKIP EDIT (WORK1) (A);
                         WORK3 = SUBSTR(WORK1,1,72) ×× GSCHL;
                         WRITE FILE (KORR) FROM (WORK3) KEYFROM(GSCHL);
                         END;
                         ELSE DO;
                         PUT FILE (SYSPRINT) SKIP EDIT (SUBSTR(WORK1,1,
                                             80) ××
                                               ' '××SUBSTR (WORK4,1,51))
                                             (A);
                         WORK3 = SUBSTR (WORK1,1,72) ×× GSCHL;
                         REWRITE FILE (KORR) FROM (WORK3) KEY (GSCHL);
                         END;
          IF CANCEL ^= ' ' THEN DO;
                           IF CANCEL = 'ENDUPD' THEN DO;
                                                CALL ENDUPD;
                                                RETURN;
                                                END;
                             ELSE DO;
                             CALL DISP;
                             END;
                           END;
          END;
          GET EDIT (WORK1) (A(80));
          WORKLOG = WORK1 ×× HSCHL ×× DATE ×× TIME;
          IF DOW ^= ' ' THEN WRITE FILE (LOG) FROM (WORKLOG);
          GSCHL = HSCHL ×× SUBSTR (WORK1,73,8);
          IF DOW = ' ' THEN DO;
                       CLOSE FILE (KORR);
                       RETURN;
                       END;
          WORK = WORK1;
          DO3 = SUBSTR (WORK,1,1);
          END;
          END; /* END DO 1 */
          ELSE WORK = WORK1;
          CLOSE FILE (KORR);
          END BLK3;
          /*****         ENDE UNTERPROGRAMM BLK3                 *****/
1         /***********************************************************/
          /*                                                         */
          /*             UNTERPROGRAMM BLK5 DELETE                   */
          /*                                                         */
          /***********************************************************/
-BLK5:
          PROC;
          IF FM = 0 THEN DO;
                         PUT FILE (SYSPRINT) SKIP (4) EDIT
                         ('***** ERSTE KARTE WAR KEINE GUELTIGE' ××
                          ' VORLAUFKARTE *****') (X(30),A);
                         PUT FILE (SYSPRINT) SKIP (2) EDIT
                         ('***** DAS PROGRAMM WURDE ABGEBROCHEN ' ××
                          '*****') (X(37),A);
                         DOW = ' ';
                         RETURN;
                         END;
          IF STOPUPD ^= ' ' THEN DO;
                            CALL FEHLSTO;
                            RETURN;
                            END;
-         ON ENDPAGE (SYSPRINT) BEGIN;
                                CALL UEBD;
                                END;
-         ON KEY (KORR) BEGIN;
                        IF ONCODE = 51 THEN DO;
                                       DOD = 'N';
                                       PUT FILE (SYSPRINT) SKIP (3)
                                       EDIT ('DAS STATEMENT MIT DER' ××
                                       ' NUMMER ',SUBSTR(WORK,11,8),
                                       ' GIBT ES NICHT') (X(32),A,A,A);
                                       PUT FILE (SYSPRINT) SKIP EDIT
                                       ('==========================='××
                                        '==========================')
                                       (X(31),A);
                                       END;
                        END;
-         ON ENDFILE (KORR) BEGIN;
                            DOD = 'E';
                            END;
          IF VERIFY (SUBSTR(WORK,11,8),'1234567890') ^= 0 THEN DO;
                                                          CALL BLKF;
                                                          RETURN;
                                                          END;
          IF VERIFY (SUBSTR(WORK,20,8),'1234567890') ^= 0 THEN DO;
                                                          CALL BLKF;
                                                          RETURN;
                                                          END;
          OPEN FILE (KORR) SEQL UPDATE;
          CALL UEBD;
          GSCHL = HSCHL ×× SUBSTR (WORK,11,8);
          READ FILE (KORR) INTO (WORK5) KEY (GSCHL);
-         DO WHILE (DOD = 'D');
          PUT FILE (SYSPRINT) SKIP (2) EDIT (SUBSTR (WORK5,1,72) ××
                                             SUBSTR (WORK5,81,8) ××
                                             '   DLET') (X(10),A);
          DELETE FILE (KORR);
          IF CANCEL ^= ' ' THEN DO;
                           IF CANCEL = 'ENDUPD' THEN DO;
                                                CALL ENDUPD;
                                                RETURN;
                                                END;
                             ELSE DO;
                             CALL DISP;
                             END;
                           END;
          READ FILE (KORR) INTO (WORK5);
-         IF DOD = 'E' THEN DO;
                       CLOSE FILE (KORR);
                       GET EDIT (WORK) (A(80));
          WORKLOG = WORK ×× HSCHL ×× DATE ×× TIME;
          IF DOW ^= ' ' THEN WRITE FILE (LOG) FROM (WORKLOG);
                       RETURN;
                       END;
          IF SUBSTR (WORK5,81,8) = SUBSTR (WORK,20,8) THEN DO;
                                                      DELETE FILE(KORR);
                                                     PUT FILE(SYSPRINT)
                                                     SKIP(2) EDIT(SUBSTR
                                                     (WORK5,1,72) ××
                                                     SUBSTR(WORK5,81,8)
                                                     ×× '   DLET')
                                                     (X(10),A);
                                                     DOD = 'N';
                                                      END;
          IF SUBSTR (WORK5,81,8) > SUBSTR (WORK,20,8) THEN DO;
                                                     DOD = 'N';
                                                      END;
          IF SUBSTR (WORK5,81,8) = '00000000' THEN DO;
                                                     DOD = 'N';
                                              END;
          END;
          CLOSE FILE (KORR);
          DOD = 'D';
          GET EDIT (WORK) (A(80));
          WORKLOG = WORK ×× HSCHL ×× DATE ×× TIME;
          IF DOW ^= ' ' THEN WRITE FILE (LOG) FROM (WORKLOG);
-         END BLK5;
          /*****             END UNTERPROGRAMM BLK5              *****/
1         /***********************************************************/
          /*                                                         */
          /*   UNTERPROGRAMM BLK7 AUFLISTEN ALLER STATEMENT          */
          /*                                                         */
          /***********************************************************/
-BLK7:
          PROC;
          IF FM = 0 THEN DO;
                         PUT FILE (SYSPRINT) SKIP (4) EDIT
                         ('***** ERSTE KARTE WAR KEINE GUELTIGE' ××
                          ' VORLAUFKARTE *****') (X(30),A);
                         PUT FILE (SYSPRINT) SKIP (2) EDIT
                         ('***** DAS PROGRAMM WURDE ABGEBROCHEN ' ××
                          '*****') (X(37),A);
                         DOW = ' ';
                         RETURN;
                         END;
          OPEN FILE (KORR) SEQL INPUT;
          ON ENDPAGE (SYSPRINT) BEGIN;
                                CALL UEBL;
                                END;
-         ON ENDFILE (KORR) BEGIN;
                            SUBSTR (WORK3,73,8) = '********';
                            END;
-         CALL UEBL;
          GSCHL = HSCHL ×× '00000000';
          READ FILE (KORR) INTO (WORK3) KEY (GSCHL);
          DO7 = HSCHL;
          READ FILE (KORR) INTO (WORK3);
          DO WHILE (DO7 = SUBSTR (WORK3,73,8));
          IF SUBSTR (WORK3,1,1) = '0' THEN DO;
                                      I = 2;
                                      END;
                                      ELSE DO;
                                      IF SUBSTR (WORK3,1,1) = '-' THEN
                                                                  DO;
                                                                  I=3;
                                                                  END;
                                        ELSE DO;
                                        IF SUBSTR(WORK3,1,1)='1' THEN
                                                                 DO;
                                                  CALL UEBL;
                                                  I = 1;
                                                  END;
                                          ELSE DO;
                                               I = 1;
                                               END;
                                             END;
                                           END;
          PUT FILE (SYSPRINT) SKIP (I) EDIT (SUBSTR (WORK3,1,72) ××
                                             SUBSTR (WORK3,81,8))
                                            (A);
          IF CANCEL ^= ' ' THEN DO;
                           IF CANCEL = 'ENDUPD' THEN DO;
                                                CALL ENDUPD;
                                                RETURN;
                                                END;
                             ELSE DO;
                             CALL DISP;
                             END;
                           END;
          READ FILE (KORR) INTO (WORK3);
          END;
          CLOSE FILE (KORR);
          GET EDIT (WORK) (A(80));
          WORKLOG = WORK ×× HSCHL ×× DATE ×× TIME;
          IF DOW ^= ' ' THEN WRITE FILE (LOG) FROM (WORKLOG);
          WORK1 = WORK;
          END BLK7;
          /*****         ENDE UNTERPROGRAMM BLK7                 *****/
1         /***********************************************************/
          /*                                                         */
          /*   UNTERPROGRAMM BLK9 VERBREITUNG COMPILE                */
          /*                                                         */
          /***********************************************************/
-BLK9:
          PROC;
          MERK = 0;
          IF FM = 0 THEN DO;
                         PUT FILE (SYSPRINT) SKIP (4) EDIT
                         ('***** ERSTE KARTE WAR KEINE GUELTIGE' ××
                          ' VORLAUFKARTE *****') (X(30),A);
                         PUT FILE (SYSPRINT) SKIP (2) EDIT
                         ('***** DAS PROGRAMM WURDE ABGEBROCHEN ' ××
                          '*****') (X(37),A);
                         DOW = ' ';
                         RETURN;
                         END;
          IF SUBSTR (WORK,26,2) = 'GO' THEN COND = COND -890;
            ELSE DO; /* ELSE 1.2 */
            IF SUBSTR (WORK,26,3) = '   ' THEN COND = COND - 990;
          ELSE DO; /* ELSE 1.3 */
          IF SUBSTR (WORK,26,3) ^= '   ' THEN DO; /* DO 1 */
                                         IF SAVEB = 'J' THEN DO; /*DO2*/
                                           IF MBRUEB ^= MBRTEST THEN DO;
                                                            CALL SAVE;
                                                            COND =
                                                            COND - 990;
                                                            MERK = 1;
                                                                END;
                                             ELSE MBRPRDU = '';
                                           END; /* END DO 2 */
                                           ELSE DO; /* ELSE 1.1 */
                                           IF MBRUEB ^= MBRPRDU THEN DO;
                                                            CALL SAVE;
                                                            COND =
                                                            COND - 990;
                                                            MERK = 1;
                                                                END;
                                           END; /* END ELSE 1.1 */
                                         END; /* END DO 1 */
          IF MERK ^= 1 THEN DO; /* DO 3 */
          IF MBRUEB = MBRPRDU THEN COND = COND + 200;
          IF SUBSTR (WORK,26,3) = 'MDV' ×
             SUBSTR (WORK,26,3) = 'OBJ' ×
             SUBSTR (WORK,26,3) = 'IMS' ×
             SUBSTR (WORK,26,3) = 'FMT' THEN DO;
                                        END;
            ELSE COND = COND - 200;
          IF SUBSTR (WORK,26,3) = 'MDV' THEN COND = COND - 960;
            ELSE DO; /* ELSE 1 */
            IF SUBSTR (WORK,26,3) = 'OBJ' THEN COND = COND - 980;
              ELSE DO; /* ELSE 2 */
              IF SUBSTR (WORK,26,3) = 'IMS' THEN COND = COND - 970;
                ELSE DO; /* ELSE 3 */
                IF SUBSTR (WORK,26,3) = 'FMT' THEN COND = COND - 930;
                                              ELSE COND = COND - 990;
                END; /* END ELSE 3 */
              END; /* END ELSE 2 */
            END; /* END ELSE 1 */
                       END; /* END DO 3 */
          END; /* END ELSE 1.3 */
            END; /* END ELSE 1.2 */
          CALL PLIRETC (COND);
          OPEN FILE (TEMP) SEQL OUTPUT;
          OPEN FILE (KORR) SEQL INPUT;
          GSCHL = SUBSTR (WORK,17,8) ×× '00000000';
          READ FILE (KORR) INTO (WORK3) KEY (GSCHL);
          READ FILE (KORR) INTO (WORK3);
          HCOMP,DO9 = GSCHL;
          DO WHILE (DO9 = HCOMP);
          WORK6 = SUBSTR (WORK3,1,72) ××
                  SUBSTR (WORK3,81,8);
          IF INDEX (WORK6,'##') = 0 THEN WRITE FILE (TEMP) FROM (WORK6);
                                    ELSE DO;
                                    IF INDEX (WORK6,'''##') ^= 0
                                    THEN WRITE FILE (TEMP) FROM (WORK6);
                                    ELSE DO;
                                    CALL PREPROC (WORK6,PRMERK);
                                    IF PRMERK ^= 0 THEN DO;
                                                   CLOSE FILE (KORR);
                                                   CLOSE FILE (TEMP);
                                                   HSCHL = SUBSTR
                                                           (WORK,17,8);
                                                   PUT FILE (SYSPRINT)
                                                   PAGE;
                                                   PUT FILE (SYSPRINT)
                                                   SKIP (4) EDIT
                                                   ('***** FEHLER BEI '
                                                   ×× '##-GENERATOR ' ××
                                                   'URSACHE : ',PRMERK,
                                                   ' *****') (X(30),A,
                                                   P'ZZZ9',A);
                                                   PUT FILE (SYSPRINT)
                                                   SKIP(2) EDIT ('*****'
                                                   ×× ' ES WURDE NUR '
                                                   ×× '  L I S T  ' ××
                                                   ' AUSGEFUEHRT *****')
                                                   (X(30),A);
                                                   CALL BLK7;
                                                   CALL PLIRETC (0);
                                                   RETURN;
                                                   END;
                                    END;
                                    END;
          READ FILE (KORR) INTO (WORK3);
          DO9 = SUBSTR (WORK3,73,8);
          END;
          CLOSE FILE (TEMP);
          CLOSE FILE (KORR);
          IF SAVEB ^= 'J' &
             MBRUEB = MBRPRDU  THEN DO; /* DO 4 */
                               NULLCA = '';
                               GSCHL = '00000000' ×× HSCHL;
                               OPEN FILE (CATA) DIRECT UPDATE;
                               READ FILE (CATA) INTO(NULLCA)KEY(GSCHL);
                               SUBSTR (NULLCA,124,1) = 'J';
                               REWRITE FILE(CATA)FROM(NULLCA)KEY(GSCHL);
                               CLOSE FILE (CATA);
                               END; /* END DO 4 */
          GET EDIT (WORK) (A(80));
          WORKLOG = WORK ×× HSCHL ×× DATE ×× TIME;
          IF DOW ^= ' ' THEN WRITE FILE (LOG) FROM (WORKLOG);
          END BLK9;
          /*****         ENDE UNTERPROGRAMM BLK9                 *****/
1         /***********************************************************/
          /*                                                         */
          /*   UNTERPROGRAMM BLK11 VERARBEITUNG LOAD                 */
          /*                                                         */
          /***********************************************************/
-BLK11:
          PROC;
          IF FM = 0 THEN DO;
                         PUT FILE (SYSPRINT) SKIP (4) EDIT
                         ('***** ERSTE KARTE WAR KEINE GUELTIGE' ××
                          ' VORLAUFKARTE *****') (X(30),A);
                         PUT FILE (SYSPRINT) SKIP (2) EDIT
                         ('***** DAS PROGRAMM WURDE ABGEBROCHEN ' ××
                          '*****') (X(37),A);
                         DOW = ' ';
                         RETURN;
                         END;
          IF STOPUPD ^= ' ' THEN DO;
                            CALL FEHLSTO;
                            RETURN;
                            END;
          ON KEY (KORR) BEGIN;
                        IF ONCODE = 52 THEN DO;
                                      CALL UEBA;
                                       DOH = 'E';
                                       PUT FILE (SYSPRINT) SKIP (4)
                                       EDIT
                                       ('*****  DATEI ',HSCHL,' SCHON'
                                        ××' GELADEN  *****')
                                       (X(10),A,A,A);
                                       END;
                                       ELSE DO;
                                       PUT LIST (ONCODE);
                                       CLOSE FILE (KORR);
                                       SIGNAL ERROR;
                                       END;
                       END;
          OPEN FILE (KORR) DIRECT UPDATE;
          IF SUBSTR (WORK,10,4) = 'BNR=' THEN ZAHL = SUBSTR (WORK,14,8);
                                         ELSE ZAHL = 0;
         GET EDIT  (WORK1) (A(80));
          WORKLOG = WORK1 ×× HSCHL ×× DATE ×× TIME;
          IF DOW ^= ' ' THEN WRITE FILE (LOG) FROM (WORKLOG);
          IF DOW = ' ' THEN DO;
                       CLOSE FILE (KORR);
                       RETURN;
                       END;
          DO WHILE (DO11 ^= SUBSTR (WORK1,1,1));
          ZAHL = ZAHL + 100;
          WORK3 = SUBSTR (WORK1,1,72) ××
                  HSCHL ×× ZAHL;
          GSCHL = HSCHL ×× ZAHL;
          WRITE FILE (KORR) FROM (WORK3) KEYFROM (GSCHL);
          IF DOH = 'E' THEN DO;
                                       CLOSE FILE (KORR);
                       DO WHILE (DO11 ^= SUBSTR (WORK1,1,1));
                       GET EDIT (WORK1) (A(80));
                       IF DOW = ' ' THEN RETURN;
                       WORK = WORK1;
                       END;
                       RETURN;
                       END;
          IF CANCEL ^= ' ' THEN DO;
                           IF CANCEL = 'ENDUPD' THEN DO;
                                                CALL ENDUPD;
                                                RETURN;
                                                END;
                             ELSE DO;
                             CALL DISP;
                             END;
                           END;
          GET EDIT (WORK1) (A(80));
          WORKLOG = WORK1 ×× HSCHL ×× DATE ×× TIME;
          IF DOW ^= ' ' THEN WRITE FILE (LOG) FROM (WORKLOG);
          IF DOW = ' ' THEN DO;
                       CLOSE FILE (KORR);
                       CALL UEBLA;
                       RETURN;
                       END;
          WORK = WORK1;
          END;
         CLOSE FILE (KORR);
          CALL UEBLA;
          END BLK11;
          /*****         ENDE UNTERPROGRAMM BLK11                *****/
1         /***********************************************************/
          /*                                                         */
          /*             UNTERPROGRAMM BLK13 NEW NUMBER              */
          /*                                                         */
          /***********************************************************/
-BLK13:
          PROC;
          ON ENDFILE (KORR) BEGIN;
                            DO13 = '********';
                            END;
          IF FM = 0 THEN DO;
                         PUT FILE (SYSPRINT) SKIP (4) EDIT
                         ('***** ERSTE KARTE WAR KEINE GUELTIGE' ××
                          ' VORLAUFKARTE *****') (X(30),A);
                         PUT FILE (SYSPRINT) SKIP (2) EDIT
                         ('***** DAS PROGRAMM WURDE ABGEBROCHEN ' ××
                          '*****') (X(37),A);
                         DOW = ' ';
                         RETURN;
                         END;
          OPEN FILE (KORR) SEQL UPDATE;
          OPEN FILE (TEMP) SEQL OUTPUT;
          GSCHL = HSCHL ×× '00000000';
          READ FILE (KORR) INTO (WORK5) KEY (GSCHL);
          DO13 = HSCHL;
-         DO WHILE (DO13 = SUBSTR (WORK5,73,8));
          WORK6 = WORK5;
          WRITE FILE (TEMP) FROM (WORK6);
          DELETE FILE (KORR);
          READ FILE (KORR) INTO (WORK5);
          END;
          CLOSE FILE (KORR);
          CLOSE FILE (TEMP);
          OPEN FILE (KORR) DIRECT UPDATE;
          OPEN FILE (TEMP) SEQL INPUT;
          ON ENDFILE (TEMP) BEGIN;
                            DO13 = '********';
                            END;
          ZAHL = 0;
          READ FILE (TEMP) INTO (WORK6);
          DO WHILE (DO13 = SUBSTR (WORK6,73,8));
          GSCHL = HSCHL ×× ZAHL;
          WORK5 = WORK6 ×× ZAHL;
          WRITE FILE (KORR) FROM (WORK5) KEYFROM (GSCHL);
          ZAHL = ZAHL + 100;
          READ FILE (TEMP) INTO (WORK6);
          END;
          CLOSE FILE (TEMP);
          CLOSE FILE (KORR);
          CALL BLKNN;
          GET EDIT (WORK) (A(80));
          WORKLOG = WORK ×× HSCHL ×× DATE ×× TIME;
          IF DOW ^= ' ' THEN WRITE FILE (LOG) FROM (WORKLOG);
          END BLK13;
          /*****             END UNTERPROGRAMM BLK13             *****/
1         /***********************************************************/
          /*                                                         */
          /*   UNTERPROGRAMM BLK17 VERARBEITUNG DISK TO CARD         */
          /*                                                         */
          /***********************************************************/
-BLK17:
          PROC;
          IF FM = 0 THEN DO;
                         PUT FILE (SYSPRINT) SKIP (4) EDIT
                         ('***** ERSTE KARTE WAR KEINE GUELTIGE' ××
                          ' VORLAUFKARTE *****') (X(30),A);
                         PUT FILE (SYSPRINT) SKIP (2) EDIT
                         ('***** DAS PROGRAMM WURDE ABGEBROCHEN ' ××
                          '*****') (X(37),A);
                         DOW = ' ';
                         RETURN;
                         END;
-         ON ENDFILE (KORR) BEGIN;
                            DO17 = '';
                            END;
          OPEN FILE (KORR) SEQL INPUT;
          IF SUBSTR (WORK,18,5) = 'STMN=' THEN DO; /* DO 1 */
                                          GSCHL = HSCHL ××
                                                  SUBSTR (WORK,23,8);
                                          DO17 = HSCHL;
                                          READ FILE (KORR) INTO (WORK3)
                                                           KEY (GSCHL);
                                          DO WHILE (DO17 = HSCHL);
                                          PUT FILE (PUNCH) EDIT
                                          (SUBSTR (WORK3,1,72) ××
                                           SUBSTR (WORK3,81,8))(A(80));
                                          READ FILE (KORR) INTO (WORK3);
                                          IF SUBSTR (WORK3,81,8) >
                                             SUBSTR (WORK,32,8) THEN DO;
                                                                DO17='';
                                                                END;
                                          IF SUBSTR (WORK3,81,8) =
                                             '00000000' THEN DO17='';
                                          END;
                                          END; /* END DO 1 */
          ELSE DO; /* ELSE 1 */
          GSCHL = HSCHL ×× '00000000';
          DO17 = HSCHL;
          READ FILE (KORR) INTO (WORK3) KEY (GSCHL);
          DO WHILE (DO17 = HSCHL);
          PUT FILE (PUNCH) EDIT (SUBSTR (WORK3,1,72) ××
                                 SUBSTR (WORK3,81,8)) (A(80));
          IF CANCEL ^= ' ' THEN DO;
                           IF CANCEL = 'ENDUPD' THEN DO;
                                                CALL ENDUPD;
                                                RETURN;
                                                END;
                             ELSE DO;
                             CALL DISP;
                             END;
                           END;
          READ FILE (KORR) INTO (WORK3);
          DO17 = SUBSTR (WORK3,73,8);
          END;
          END; /* END ELSE 1 */
          CLOSE FILE (KORR);
          GET EDIT (WORK) (A(80));
          WORKLOG = WORK ×× HSCHL ×× DATE ×× TIME;
          IF DOW ^= ' ' THEN WRITE FILE (LOG) FROM (WORKLOG);
          END BLK17;
          /*****         ENDE UNTERPROGRAMM BLK17                *****/
1         /***********************************************************/
          /*                                                         */
          /*             UNTERPROGRAMM BLK19 ARCHIV                  */
          /*                                                         */
          /***********************************************************/
-BLK19:
          PROC;
          IF FM = 0 THEN DO;
                         PUT FILE (SYSPRINT) SKIP (4) EDIT
                         ('***** ERSTE KARTE WAR KEINE GUELTIGE' ××
                          ' VORLAUFKARTE *****') (X(30),A);
                         PUT FILE (SYSPRINT) SKIP (2) EDIT
                         ('***** DAS PROGRAMM WURDE ABGEBROCHEN ' ××
                         '*****') (X(37),A);
                         DOW = ' ';
                         RETURN;
                         END;
          IF STOPUPD ^= ' ' THEN DO;
                            CALL FEHLSTO;
                            RETURN;
                            END;
-         ON KEY (CATA) BEGIN;
                        IF ONCODE = 51 THEN DOAR = ' ';
                        END;
-         ON ENDFILE (KORR) BEGIN;
                            DOAK = '********';
                            END;
          ARZAHL = 0;
          GET EDIT (WORK1) (A(80));
          WORKLOG = WORK1 ×× HSCHL ×× DATE ×× TIME;
          IF DOW ^= ' ' THEN WRITE FILE (LOG) FROM (WORKLOG);
          IF DOW = ' ' THEN DO;
                       PUT FILE (SYSPRINT) SKIP (4) EDIT
                       ('***** ES FEHLT DIE KARTE WORAUF ARCHIVIERT'××
                        ' WERDEN SOLL *****') (X(36),A);
                       PUT FILE (SYSPRINT) SKIP (2) EDIT
                       ('***** DAS PROGRAMM WURDE ABGEBROCHEN ' ××
                        '*****') (X(45),A);
                       RETURN;
                       END;
          IF SUBSTR (WORK1,1,3) ^= '88 ' ×
             SUBSTR (WORK1,10,1)^= ';' THEN DO;
                                        PUT FILE (SYSPRINT) SKIP (4)
                                        EDIT ('***** ANGABEN UEBER '××
                                             'ARCHIVTRAEGER FALSCH '××
                                             '*****') (X(43),A);
                                        PUT FILE (SYSPRINT) SKIP (2)
                                        EDIT ('***** DAS PROGRAMM ' ××
                                             'WURDE ABGEBROCHEN *****')
                                             (X(45),A);
                                        DOW = ' ';
                                        RETURN;
                                        END;
          OPEN FILE (CATA) DIRECT UPDATE;
          NULLCA = '';
          GSCHL = '00000000' ×× HSCHL;
          READ FILE (CATA) INTO (NULLCA) KEY (GSCHL);
          IF DOAR = ' ' THEN DO;
                        PUT FILE (SYSPRINT) SKIP (4) EDIT
                        ('***** ES SOLL EIN PROGRAMM ARCHIVIERT WERD' ××
                         'EN DAS ES NICHT GIBT *****') (X(32),A);
                        PUT FILE (SYSPRINT) SKIP (2) EDIT
                        ('***** DAS PROGRAMM WURDE ABGEBROCHEN *****')
                        (X(45),A);
                        DOW = ' ';
                        CLOSE FILE (CATA);
                        RETURN;
                        END;
          SUBSTR (NULLCA,78,3) = SUBSTR (WORK1,7,3);
          REWRITE FILE (CATA) FROM (NULLCA) KEY (GSCHL);
          CLOSE FILE (CATA);
          GET EDIT (WORK2) (A(80));
          WORKLOG = WORK2 ×× HSCHL ×× DATE ×× TIME;
          IF DOW ^= ' ' THEN WRITE FILE (LOG) FROM (WORKLOG);
          FUNCUP = SUBSTR (WORK2,3,5);
          OPEN FILE (KORR) SEQL INPUT;
          OPEN FILE (TEMP) SEQL OUTPUT;
          WORK6 = './'××FUNCUP××' NAME='××HSCHL××',LIST=ALL';
          WRITE FILE (TEMP) FROM (WORK6);
          WORK6 = './ NUMBER NEW1=100,INCR=100';
          WRITE FILE (TEMP) FROM (WORK6);
          GSCHL = HSCHL ×× '00000000';
          READ FILE (KORR) INTO (WORK3) KEY (GSCHL);
          WORK6 = SUBSTR (WORK3,1,72) ×× SUBSTR (WORK3,81,8);
          WRITE FILE (TEMP) FROM (WORK6);
          ARZAHL = ARZAHL + 1;
          WORK6 = '$$ LOAD;';
          WRITE FILE (TEMP) FROM (WORK6);
          READ FILE (KORR) INTO (WORK3);
          DOAK = HSCHL;
          DO WHILE (DOAK = SUBSTR (WORK3,73,8));
          WORK6 = SUBSTR (WORK3,1,72) ××
                  SUBSTR (WORK3,81,8);
          WRITE FILE (TEMP) FROM (WORK6);
          ARZAHL = ARZAHL + 1;
          READ FILE (KORR) INTO (WORK3);
          END;
          WORK6 = './ ENDUP';
          WRITE FILE (TEMP) FROM (WORK6);
          CLOSE FILE (KORR);
          CLOSE FILE (TEMP);
          IF SUBSTR (WORK1,7,3) = 'MDV' THEN COND = 51;
            ELSE DO;
            IF SUBSTR (WORK1,7,3) = 'IMS' THEN COND = 52;
                                          ELSE COND = 53;
            END;
          CALL PLIRETC (COND);
          CALL UEBA;
          PUT FILE (SYSPRINT) SKIP (4) EDIT
          ('***** DAS OBIGE PROGRAMM WURDE AUF ',SUBSTR (WORK1,4,6),
           ' ARCHIVIERT *****') (X(28),A,A,A);
          DOW = ' ';
          OPEN FILE (CATA) DIRECT UPDATE;
          NULLCA = '';
          GSCHL = '00000000' ×× HSCHL;
          READ FILE (CATA) INTO (NULLCA) KEY (GSCHL);
          SUBSTR (NULLCA,125,5) = ARZAHL;
          REWRITE FILE (CATA) FROM (NULLCA) KEY (GSCHL);
          CLOSE FILE (CATA);
          END BLK19;
          /*****         END UNTERPROGRAMM BLK19                 *****/
1         /***********************************************************/
          /*                                                         */
          /*             UNTERPROGRAMM BLKF FEHLERAUSGABE            */
          /*                                                         */
          /***********************************************************/
-BLKF:
          PROC;
          PUT FILE (SYSPRINT) SKIP (4) EDIT
          ('*****  FEHLER IN ',SKZ,'. STEUERKARTE  *****')
          (X(46),A,F(3),A);
          PUT FILE (SYSPRINT) SKIP (2) EDIT
          ('***** DAS PROGRAMM WURDE ABGEBROCHEN *****')
          (X(45),A);
          DOW = ' ';
          END BLKF;
          /*****             END UNTERPROGRAMM BLKF              *****/
1         /***********************************************************/
          /*                                                         */
          /*             UNTERPROGRAMM LOTA LOAD TAPE                */
          /*                                                         */
          /***********************************************************/
-LOTA:
          PROC;
          IF FM = 0 THEN DO;
                         PUT FILE (SYSPRINT) SKIP (4) EDIT
                         ('***** ERSTE KARTE WAR KEINE GUELTIGE' ××
                          ' VORLAUFKARTE *****') (X(30),A);
                         PUT FILE (SYSPRINT) SKIP (2) EDIT
                         ('***** DAS PROGRAMM WURDE ABGEBROCHEN ' ××
                          '*****') (X(37),A);
                         DOW = ' ';
                         RETURN;
                         END;
          IF STOPUPD ^= ' ' THEN DO;
                            CALL FEHLSTO;
                            RETURN;
                            END;
         ON KEY (KORR) BEGIN;
                        IF ONCODE = 52 THEN DO;
                                       DOH = 'E';
                                       PUT FILE (SYSPRINT) SKIP (4)
                                       EDIT
                                       ('*****  DATEI ',HSCHL,' SCHON'
                                        ××' GELADEN  *****')
                                       (X(10),A,A,A);
                                       END;
                        END;
-         ON ENDFILE (TAPE) BEGIN;
                            DOT = 'E';
                            END;
          OPEN FILE (KORR) DIRECT UPDATE;
          OPEN FILE (TAPE) SEQL INPUT;
          IF SUBSTR (WORK,15,4) = 'ABN=' THEN ZAHL = SUBSTR (WORK,19,8);
                                         ELSE ZAHL = 0;
          MERKT = 1;
          READ FILE (TAPE) INTO (WORK7);
          DO WHILE (DOT = 'L');
         ZAHL = ZAHL + 100;
          WORK3 = SUBSTR (WORK7,1,72) ××
                  HSCHL ×× ZAHL;
          GSCHL = HSCHL ×× ZAHL;
          WRITE FILE (KORR) FROM (WORK3) KEYFROM (GSCHL);
          IF DOH = 'E' THEN DO;
                                       CLOSE FILE (KORR);
                                       CLOSE FILE (TAPE);
                       GET EDIT (WORK) (A(80));
          WORKLOG = WORK ×× HSCHL ×× DATE ×× TIME;
          IF DOW ^= ' ' THEN WRITE FILE (LOG) FROM (WORKLOG);
                       RETURN;
                       END;
          IF CANCEL ^= ' ' THEN DO;
                           IF CANCEL = 'ENDUPD' THEN DO;
                                                CALL ENDUPD;
                                                CLOSE FILE (TAPE);
                                                RETURN;
                                                END;
                             ELSE DO;
                             CALL DISP;
                             END;
                           END;
          READ FILE (TAPE) INTO (WORK7);
          END;
          GET EDIT (WORK) (A(80));
          WORKLOG = WORK ×× HSCHL ×× DATE ×× TIME;
          IF DOW ^= ' ' THEN WRITE FILE (LOG) FROM (WORKLOG);
          CLOSE FILE (KORR);
          CLOSE FILE (TAPE);
          CALL UEBLA;
          END LOTA;
          /*****             END UNTERPROGRAMM LOTA                  */
1         /*******$$**************************************************/
          /*                                                         */
          /*             UP BLKGUE STEUERKARTE PRUEFEN               */
          /*                                                         */
          /*******$$**************************************************/
-BLKGUE:
          PROC;
          IF SUBSTR (WORK,12,1) = ',' &
             SUBSTR (WORK,33,1) = ',' &
             SUBSTR (WORK,64,1) = ',' &
             SUBSTR (WORK,68,1) = ',' THEN DO;
                /*  HESSE          */ IF SUBSTR (WORK,4,3) = 'HES' ×
                                         SUBSTR (WORK,4,2) = 'GH'  ×
                /*  WEGENER           */ SUBSTR (WORK,4,3) = 'WEG' ×
                /*  BISCHOFF          */ SUBSTR (WORK,4,3) = 'BIS' ×
                /*  AHLBORN           */ SUBSTR (WORK,4,3) = 'AHL' ×
                /*  BAUMGART          */ SUBSTR (WORK,4,3) = 'BAU' ×
                /*  BRAUN             */ SUBSTR (WORK,4,3) = 'BRA' ×
                /*  HAUTHAL           */ SUBSTR (WORK,4,3) = 'HAU' ×
                /*  KELLNER           */ SUBSTR (WORK,4,3) = 'KEL' ×
                /*  KERSCHER          */ SUBSTR (WORK,4,3) = 'KER' ×
                /*  KREUER            */ SUBSTR (WORK,4,3) = 'KRE' ×
                /*  STEINER           */ SUBSTR (WORK,4,3) = 'IST' ×
                /*  WERNER            */ SUBSTR (WORK,4,3) = 'WER' ×
                /*  SCHARNBERG        */ SUBSTR (WORK,4,3) = 'BSC' ×
                /*  SCHLOENDORF       */ SUBSTR (WORK,4,3) = 'SCH' ×
                /*  BEKMANN           */ SUBSTR (WORK,4,3) = 'BEC' ×
                                         SUBSTR (WORK,4,2) = 'BE'  ×
                /*  HENSELER          */ SUBSTR (WORK,4,3) = 'HEN' ×
                /*  EHLERS            */ SUBSTR (WORK,4,3) = 'EHL' ×
                                         SUBSTR (WORK,4,2) = 'EH'  ×
                /*  GEYER             */ SUBSTR (WORK,4,3) = 'GEY' ×
                                         SUBSTR (WORK,4,2) = 'GY'  ×
                /*  HAASE             */ SUBSTR (WORK,4,3) = 'HAA' ×
                /*  BRAUNS            */ SUBSTR (WORK,4,3) = 'BRS' ×
                /*  BUNNE             */ SUBSTR (WORK,4,3) = 'BUB' ×
                /*  DZIMALLE          */ SUBSTR (WORK,4,3) = 'DZW' ×
                /*  FEULNER           */ SUBSTR (WORK,4,3) = 'FEH' ×
                                         SUBSTR (WORK,4,2) = 'FE'  ×
                /*  KELLER            */ SUBSTR (WORK,4,3) = 'KJM' ×
                /*  KROEGER-BLOCK     */ SUBSTR (WORK,4,3) = 'KBA' ×
                                         SUBSTR (WORK,4,2) = 'KB'  ×
               /*  TRENKEL            */ SUBSTR (WORK,4,3) = 'JTR' ×
                                         SUBSTR (WORK,4,2) = 'TR'  ×
               /*  HEIDELBERG         */ SUBSTR (WORK,4,3) = 'HEI' ×
                /*  KUEHN             */ SUBSTR (WORK,4,3) = 'HKH' ×
                                         SUBSTR (WORK,4,2) = 'HK'  ×
                /*  LANGE             */ SUBSTR (WORK,4,3) = 'LAH' ×
                /*  MAMPELL           */ SUBSTR (WORK,4,3) = 'MAM' ×
                                         SUBSTR (WORK,4,2) = 'MA'  ×
                /*  PELENY            */ SUBSTR (WORK,4,3) = 'PEG' ×
                /*  PFEUFFER          */ SUBSTR (WORK,4,3) = 'PFB' ×
                                         SUBSTR (WORK,4,2) = 'PF'  ×
                /*  BENECKE           */ SUBSTR (WORK,4,3) = 'BEW' ×
                /*  ROSENDAHL         */ SUBSTR (WORK,4,2) = 'RS'  ×
                /*  KLOSTERMANN       */ SUBSTR (WORK,4,3) = 'KLM' ×
                /*  ARNHARDT          */ SUBSTR (WORK,4,2) = 'AR'  ×
                /*  GOEBEL            */ SUBSTR (WORK,4,3) = 'GBL' ×
                /*  KAHLE             */ SUBSTR (WORK,4,3) = 'KAH' ×
                /*  DIETTERLE         */ SUBSTR (WORK,4,2) = 'HD'  ×
                /*  PIETRZYK          */ SUBSTR (WORK,4,3) = 'PIP' ×
                                         SUBSTR (WORK,4,2) = 'PI'  ×
                /*  POELK             */ SUBSTR (WORK,4,3) = 'POE' THEN
                                                              RETURN;
                                                           ELSE DO;
                                                           DOW = '';
                                                           WORK = '';
                             END;
                                      END;
                                      ELSE DO;
                                      DOW = ' ';
                                      WORK= '';
                                      END;
          END BLKGUE;
          /*****             END UNTERPROGRAMM BLKGUE            *****/
1         /***********************************************************/
          /*                                                         */
          /*             UNTERPROGRAMM BLK15 COPY PGM                */
          /*                                                         */
          /***********************************************************/
-BLK15:
          PROC;
          IF FM = 0 THEN DO;
                    PUT FILE (SYSPRINT) SKIP (4) EDIT
                    ('***** ERSTE KARTE WAR KEINE GUELTIGE VOR' ××
                     'LAUFKARTE *****') (X(30),A);
                    PUT FILE (SYSPRINT) SKIP (2) EDIT
                    ('***** DAS PROGRAMM WURDE ABGEBROCHEN *****')
                    (X(37),A);
                    DOW = ' ';
                    RETURN;
                    END;
          IF STOPUPD ^= ' ' THEN DO;
                            CALL FEHLSTO;
                            RETURN;
                            END;
          ON KEY (KORR) BEGIN;
                        IF ONCODE = 52 THEN DO;
                                       READ FILE (KORR) INTO (WORK4)
                                       KEY (GSCHL);
                                       WORK4 = WORK5;
                                       REWRITE FILE (KORR) FROM (WORK4)
                                       KEY (GSCHL);
                                       END;
                        END;
          WORK9 = WORK;
          INB1 = 9;
          INB2 = 12;
          INB3 = 18;
          DO ICOPY = 1 TO 2;
          IF VERIFY (SUBSTR(WORK9,INB1,2),ALPH)^= 0 THEN DO;
                                                    CALL ERCOPY;
                                                    RETURN;
                                                    END;
          INB1 = 36;
          END;
          DO ICOPY = 1 TO 2;
          IF VERIFY (SUBSTR(WORK9,INB2,2),NUM) ^= 0 THEN DO;
                                                    CALL ERCOPY;
                                                    RETURN;
                                                    END;
          INB2 = 39;
          END;
          DO ICOPY = 1 TO 4;
          IF VERIFY (SUBSTR(WORK9,INB3,8),NUM) ^= 0 THEN DO;
                                                    CALL ERCOPY;
                                                    RETURN;
                                                    END;
          INB3 = INB3 + 9;
          IF INB3 > 27 &
             INB3 < 37 THEN INB3 = 45;
          END;
          GET EDIT (WORK) (A(80));
          WORKLOG = WORK ×× HSCHL ×× DATE ×× TIME;
          IF DOW ^= ' ' THEN WRITE FILE (LOG) FROM (WORKLOG);
          CALL BLKGUE;
          IF DOW = ' ' THEN DO;
                       CALL BLKF;
                       RETURN;
                       END;
          CALL BLK1A1;
          CALL BLK1A2C;
          OPEN FILE (KORR) SEQL UPDATE;
          OPEN FILE (TEMP) SEQL OUTPUT;
          GSCHL = SUBSTR (WORK9,9,8) ×× SUBSTR (WORK9,18,8);
          READ FILE (KORR) INTO (WORK5) KEY (GSCHL);
          DO13 = SUBSTR (WORK9,27,8);
          DO WHILE (SUBSTR (WORK5,81,8) ^> DO13 &
                    SUBSTR (WORK5,81,8) ^= '00000000');
          WORK6 = WORK5;
          WRITE FILE (TEMP) FROM (WORK6);
          READ FILE (KORR) INTO (WORK5);
          END;
          CLOSE FILE (KORR);
          CLOSE FILE (TEMP);
          OPEN  FILE (KORR) DIRECT UPDATE;
-         ON ENDFILE (TEMP) BEGIN;
                            DO13 = '********';
                            END;
          READ FILE (TEMP) INTO (WORK6);
          GSCHL = HSCHL ×× SUBSTR (WORK9,45,8);
          WORK5 = SUBSTR (WORK6,1,72) ×× GSCHL;
          WRITE FILE (KORR) FROM (WORK5) KEYFROM (GSCHL);
          ZAHL = SUBSTR (WORK9,45,8);
          DO13 = 'GGGGGGGG';
          READ FILE (TEMP) INTO (WORK6);
          ZAHL = ZAHL + SUBSTR (WORK9,54,8);
          DO WHILE (DO13 = 'GGGGGGGG');
          GSCHL = HSCHL ×× ZAHL;
          WORK5 = SUBSTR (WORK6,1,72) ×× GSCHL;
          WRITE FILE (KORR) FROM (WORK5) KEYFROM (GSCHL);
          IF CANCEL ^= ' ' THEN DO;
                           IF CANCEL = 'ENDUPD' THEN DO;
                                                CALL ENDUPD;
                                                RETURN;
                                                END;
                             ELSE DO;
                             CALL DISP;
                             END;
                           END;
          ZAHL = ZAHL + SUBSTR (WORK9,54,8);
          READ FILE (TEMP) INTO (WORK6);
          END;
          CLOSE FILE (KORR);
          CLOSE FILE (TEMP);
          CALL BLKCY;
          GET EDIT (WORK) (A(80));
          WORKLOG = WORK ×× HSCHL ×× DATE ×× TIME;
          IF DOW ^= ' ' THEN WRITE FILE (LOG) FROM (WORKLOG);
          END BLK15;
          /*****              END UNTERPROGRAMM BLK15            *****/
1         /***********************************************************/
          /*                                                         */
          /*        UP CARD VERARBEITUNG UEBER LOCHKARTE             */
          /*                                                         */
          /***********************************************************/
-CARD:
          PROC;
          MERK = 0;
          IF FM = 0 THEN DO;
                    CALL ERROR;
                    RETURN;
                    END;
          OPEN FILE (TEMP) SEQL OUTPUT;
          GET EDIT (WORK6) (A(80));
          IF DOW = ' ' THEN DO;
                       /* FEHLER */
                       END;
          IF SUBSTR (WORK6,1,2) = '$$' THEN DO;
                                       /* FEHLER */
                                       END;
          DO WHILE (DCARD = '*'); /* BEGIN DO WHILE */
          IF INDEX (WORK6,'##') = 0 THEN WRITE FILE (TEMP) FROM (WORK6);
                                    ELSE DO;
                                    IF INDEX (WORK6,'''##') ^= 0
                                    THEN WRITE FILE (TEMP) FROM (WORK6);
                                    ELSE CALL PREPROC (WORK6);
                                    END;
          GET EDIT (WORK6) (A(80));
          IF DOW = ' ' THEN DO;
                       /* FEHLER */
                       END;
          IF SUBSTR (WORK6,1,10)= '$$ COMPILE' THEN DO;
                                               CLOSE FILE (TEMP);
                                               WORK = WORK6;
                                               CALL BLKCOMP;
                                               DOW = '';
                                               RETURN;
                                               END;
          END; /* END DO WHILE */
          END CARD;
          /*****              END UP CARD                        *****/
1         /***********************************************************/
         /*                                                          */
          /*        UP BLKCOMP COMPILE WENN VERARBEITUNG UEBER LK    */
         /*                                                          */
          /***********************************************************/
-BLKCOMP:
          PROC;
          IF SUBSTR (WORK,26,2) = 'GO' THEN COND = COND -890;
            ELSE DO; /* ELSE 1 */
            IF SUBSTR (WORK,26,3) = '   ' THEN COND = COND - 990;
              ELSE DO; /* ELSE 2 */
              IF MBRUEB ^= MBRTEST THEN DO; /* DO 1 */
                                   CALL SAVE;
                                   COND = COND - 990;
                                   MERK = 1;
                                   END; /* END DO 1 */
                ELSE DO; /* ELSE 3 */
                IF SUBSTR (WORK,26,3) = 'MDV' THEN COND = COND - 960;
                  ELSE DO; /* ELSE 4 */
                  IF SUBSTR (WORK,26,3) = 'OBJ' THEN COND = COND - 980;
                    ELSE DO; /* ELSE 5 */
                    IF SUBSTR (WORK,26,3) = 'IMS' THEN COND=COND-970;
                      ELSE DO; /* ELSE 6 */
                      IF SUBSTR (WORK,26,3) = 'FMT' THEN COND =61;
                                                    ELSE COND=COND-990;
                      END; /* END ELSE 6 */
                    END; /* END ELSE 5 */
                  END; /* END ELSE 4 */
                END; /* END ELSE 3 */
              END; /* END ELSE 2 */
            END; /* END ELSE 1 */
          CALL PLIRETC (COND);
          WORK = '';
          WORK6= '';
          END BLKCOMP;
          /*****         END UP BLKCOMP                          *****/
1         /***********************************************************/
          /*                                                         */
          /*             UNTERPROGRAMM BLK21 RENAME                  */
          /*                                                         */
          /***********************************************************/
-BLK21:
          PROC;
          IF FM = 0 THEN DO;
                    CALL ERROR;
                    RETURN;
                    END;
          IF STOPUPD ^= ' ' THEN DO;
                            CALL FEHLSTO;
                            RETURN;
                            END;
-         ON ENDFILE (KORR) BEGIN;
                            DOK = ' ';
                            END;
          NULLCA = '';
          HSCHL = SUBSTR (WORK,20,8);   GSCHL = '00000000' ×× HSCHL;
-         ON KEY (CATA) BEGIN;
                        IF ONCODE = 51 THEN DO;
                                       DOC = ' ';
                                       PUT FILE (SYSPRINT) SKIP (4)
                                       EDIT ('***** ES KONNTE KEIN ' ××
                                       'RENAME ERFOLGEN *****') (X(45),
                                       A);
                                       END;
                        END;
          OPEN FILE (CATA) DIRECT UPDATE;
          READ FILE (CATA) INTO (NULLCA) KEY (GSCHL);
          IF DOC = ' ' THEN DO;
                        CLOSE FILE (CATA);
                        DOC = 'C';
                        RETURN;
                        END;
          DELETE FILE (CATA) KEY (GSCHL);
          TES = 0;
          PARM = SUBSTR (DATE,5,2) ××
                 SUBSTR (DATE,3,2) ××
                 SUBSTR (DATE,1,2);
          CALL DATUMAS (PARM,RUEPARM,TES);
          HSCHL = SUBSTR (WORK,38,8);
          GSCHL = '00000000' ×× HSCHL;
          SUBSTR (NULLCA,73,5) = SUBSTR (RUEPARM,2,5);
          SUBSTR (NULLCA,145,16) = GSCHL;
          SUBSTR (NULLCA,4,8) = HSCHL;
          WRITE FILE (CATA) FROM (NULLCA) KEYFROM (GSCHL);
          CLOSE FILE (CATA);
-         ON KEY (KORR) BEGIN;
                        IF ONCODE = 51 THEN DO;
                                       DOK = ' ';
                                       END;
                        END;
          HSCHL = SUBSTR (WORK,20,8);
          GSCHL = HSCHL ×× '00000000';
          DO9 = GSCHL;
          OPEN FILE (KORR) SEQL UPDATE;
          OPEN FILE (TEMP) SEQL OUTPUT;
          READ FILE (KORR) INTO (WORK3) KEY (GSCHL);
          IF DOK = ' ' THEN DO;
                       CLOSE FILE (KORR);
                       CLOSE FILE (TEMP);
                       PUT FILE (SYSPRINT) SKIP (4) EDIT
                       ('***** ES KONNTE KEIN RENAME ERFOLGEN *****')
                       (X(45),A);
                       END;
          ELSE DO; /* ELSE 1 */
-         DO WHILE (DO9 = SUBSTR (WORK3,73,8));
          WORK6 = SUBSTR (WORK3,1,72) ××
                  SUBSTR (WORK3,81,8);
          DELETE FILE (KORR);
          WRITE FILE (TEMP) FROM (WORK6);
          READ FILE (KORR) INTO (WORK3);
          END;
          CLOSE FILE (KORR);
          CLOSE FILE (TEMP);
          OPEN FILE (KORR) DIRECT UPDATE;
          OPEN FILE (TEMP) SEQL INPUT;
-         ON ENDFILE (TEMP) BEGIN;
                            DO13 = '********';
                            END;
          DO13 = 'GGGGGGGG';
          READ FILE (TEMP) INTO (WORK6);
          HSCHL = SUBSTR (WORK,38,8);
          DO WHILE (DO13 = 'GGGGGGGG');
          GSCHL = HSCHL ×× SUBSTR (WORK6,73,8);
          WORK5 = SUBSTR (WORK6,1,72) ×× GSCHL;
          WRITE FILE (KORR) FROM (WORK5) KEYFROM (GSCHL);
          READ  FILE (TEMP) INTO (WORK6);
          END;
          CLOSE FILE (KORR);
          CLOSE FILE (TEMP);
          CALL BLKRE;
          END; /* END ELSE 1 */
          GET EDIT (WORK) (A(80));
          WORKLOG = WORK ×× HSCHL ×× DATE ×× TIME;
          IF DOW ^= ' ' THEN WRITE FILE (LOG) FROM (WORKLOG);
          END BLK21;
          /*****              END UNTERPROGRAMM BLK21            *****/
1         /***********************************************************/
          /*                                                         */
          /*             UP LINK STEUERUNG FUER LINKLAEUFE           */
          /*                                                         */
          /***********************************************************/
-LINK:
          PROC;
          IF SAVEB = 'J'             THEN DO; /* DO 1 */
                                     IF MBRUEB ^= MBRLTEST THEN DO;/*2*/
                                                           CALL SAVE1;
                                                           DOW = ' ';
                                                           COND = 0;
                                                           CALL PLIRETC
                                                           (COND);
                                                           RETURN;
                                                           END; /* 2 */
                                     IF SUBSTR (WORK,9,3) = 'IMS'
                                                          THEN DO; /*3*/
                                                          COND=COND-920;
                                                          END; /* 3 */
                                       ELSE COND = 81;
                                     CALL PLIRETC (COND);
                                     END; /* END DO 1 */
            ELSE DO; /* ELSE 1 */
          COND = COND + 200;
          IF MBRUEB ^= MBRPRDU  THEN DO; /* DO 4 */
                                 CALL SAVE1;
                                 DOW = ' ';
                                 COND = 0;
                                 CALL PLIRETC (COND);
                                 RETURN;
                                 END; /* END DO 4 */
              ELSE DO; /* ELSE 2 */
              IF SUBSTR (WORK,9,3) = 'IMS' THEN DO; /* DO 5 */
                                           COND = COND - 920;
                                           END; /* END DO 5 */
                ELSE COND = 281;
              CALL PLIRETC (COND);
              OPEN FILE (CATA) DIRECT UPDATE;
              NULLCA = '';
              GSCHL = '00000000' ×× HSCHL;
              READ FILE (CATA) INTO (NULLCA) KEY (GSCHL);
              SUBSTR (NULLCA,124,1) = 'J';
              REWRITE FILE (CATA) FROM (NULLCA) KEY (GSCHL);
              CLOSE FILE (CATA);
              END; /* END ELSE 2 */
            END; /* END ELSE 1 */
          DOW= '';
          END LINK;
          /*****              END UP LINK                        *****/
1         /***********************************************************/
          /*                                                         */
          /*             UNTERPROGRAMM BAN PGM AUS ARCHIV            */
          /*                                                         */
          /***********************************************************/
-BAN:
          PROC;
          PUT FILE (SYSPRINT) SKIP (4) EDIT
          ('***** SIE WOLLEN EIN PROGRAMM AUS DEM ARCHIV LESEN.DIESES'××
           ' IST NICHT ERLAUBT',
           ' IST NICHT ERLAUBT  *****') (X(25),A);
          PUT FILE (SYSPRINT) SKIP (2) EDIT
          ('***** WENDEN SIE SICH BITTE AN DIE ZUSTAENDIGE STELLE.',
          '*****') (X(25),A,X(23),A);
          PUT FILE (SYSPRINT) SKIP (3) EDIT
          ('***** DAS PROGRAMM WURDE ABGEBROCHEN *****') (X(40),A);
          DOW = ' ';
          END BAN;
          /*****              END UNTERPROGRAMM BAN              *****/
1         /************************************************************
          /*                                                         */
          /*             UNTERPROGRAMM FEHLSTO                       */
          /*                                                         */
          /***********************************************************/
-FEHLSTO:
          PROC;
          CALL UEBA;
          PUT FILE (SYSPRINT) SKIP (4) EDIT
          ('***** DIESES PROGRAMM DARF NUR GELESEN WERDEN *****')
          (X(40),A);
          PUT FILE (SYSPRINT) SKIP (3) EDIT
          ('***** DAS PROGRAMM WURDE ABGEBROCHEN *****') (X(43),A);
          DOW = ' ';
          END FEHLSTO;
          /*****              END UP FEHLSTO                     *****/
1         /***********************************************************/
          /*                                                         */
          /*             UNTERPROGRAMM BLKCY COPY                    */
          /*                                                         */
          /***********************************************************/
-BLKCY:
          PROC;
          CALL UEBAUF;
          CALL UEBA;
          PUT FILE (SYSPRINT) SKIP (4) EDIT
          ('IN DAS OBIGE PROGRAMM WURDEN AUS DEM PROGRAMM ',
           SUBSTR (WORK9,9,8),' KARTEN COPIERT') (X(31),A,A,A);
          PUT FILE (SYSPRINT) SKIP EDIT
          ('==========================================================',
           '===========') (X(31),A,A);
          END BLKCY;
          /*****              END INTERPROGRAM BLKCY             *****/
1         /***********************************************************/
          /*                                                         */
          /*             UP ERCOPY FUER FEHLER IN COPY KARTE         */
          /*                                                         */
          /***********************************************************/
-ERCOPY:
          PROC;
          PUT FILE (SYSPRINT) SKIP (4) EDIT
          ('*****  FEHLER IN COPY-KARTE  *****') (X(47),A);
          PUT FILE (SYSPRINT) SKIP (2) EDIT
          ('*****  DAS PROGRAMM WURDE ABGEROCHEN  *****') (X(43),A);
          DOW = ' ';
          END ERCOPY;
          /*****              END UP ERCOPY                      *****/
1        /************************************************************/
         /*                                                          */
         /*         UNTERPROGRAMM FEHLER DRUCKEN HANDBUCH            */
         /*                                                          */
         /*************************************************************/
-DRUFE:
         PROC;
         PUT FILE (SYSPRINT) SKIP (4) EDIT
         ('***** FEHLER BEI DRUCKEN HANDBUCH      *****')
         (X(46),A);
         PUT FILE (SYSPRINT) SKIP (2) EDIT
         ('*****       FEHLERURSACHE :',PRMERK,'*****')
         (X(46),A,X(1),F(3),X(8),A);
         END;
1         /***********************************************************/
          /*                                                         */
          /*             UNTERPROGRAMM ERROR                         */
          /*                                                         */
          /***********************************************************/
-ERROR:
          PROC;
          PUT FILE (SYSPRINT) SKIP (4) EDIT
          ('***** ERSTE KARTE WAR KEINE GUELTIGE VORLAUFKARTE *****')
          (X(30),A);
          PUT FILE (SYSPRINT) SKIP (2) EDIT
          ('***** DAS PROGRAMM WURDE ABGEBROCHEN *****') (X(33),A);
          DOW = ' ';
          END ERROR;
          /*****              END UNTERPROGRAMM ERROR            *****/
1         /***********************************************************/
          /*                                                         */
          /*             UP BLKRE UEBERSCHRIFT RENAME                */
          /*                                                         */
          /***********************************************************/
-BLKRE:
          PROC;
          SUBSTR (WORK,4,8) = SUBSTR (WORK,38,8);
          CALL UEBAUF;
          CALL UEBA;
          PUT FILE (SYSPRINT) SKIP (4) EDIT
          ('***** DAS OBIGE PROGRAMM WURDE DURCH EIN RENAME AUS DEM ',
           'PROGRAMM ',SUBSTR (WORK,20,8),' ERZEUGT *****')
          (X(20),A,A,A,A);
          END BLKRE;
          /*****              END UP BLKRE                       *****/
1         /***********************************************************/
          /*                                                         */
          /*                  UP ENDURD ANSTELLE VON CANCEL          */
          /*                                                         */
          /***********************************************************/
-ENDUPD:
          PROC;
          PUT FILE (SYSPRINT) SKIP (4) EDIT
          ('*****  DAS PROGRAMM WURDE DURCH OPERATOR ABGEBROCHEN  ' ××
           '*****') (X(35),A);
          PUT FILE (SYSPRINT) DATA (WORK,
                                    WORK1,
                                    WORK2,
                                    WORK3,
                                    WORK4,
                                    WORK5,
                                    WORK6,
                                    WORK7,
                                    WORK8,
                                    WORK9,
                                    NULLCA,
                                    NULLCAU,
                                    HSCHL,
                                    GSCHL,
                                    SCHL);
          PUT FILE (SYSPRINT) SKIP (2) EDIT
          ('*****  ENDE PROGRAMM  *****') (X(52),A);
          CLOSE FILE (KORR);
          CLOSE FILE (CATA);
          CLOSE FILE (TEMP);
          CLOSE FILE (LOG);
          DOW = ' ';
          COND = 0;
          CALL PLIRETC (COND);
          END ENDUPD;
          /*****              END UP ENDUPD                      *****/
1         /***********************************************************/
          /*                                                         */
          /*             UP BLK3C CORR COB                            /
          /*                                                         */
          /***********************************************************/
-BLK3C:
          PROC;
          IF FM = 0 THEN DO; /* DO 1 */
                    CALL FORLFE;
                    RETURN;
                    END; /* END DO 1 */
          IF STOPUPD ^= ' ' THEN DO;
                            CALL FEHLSTO;
                            RETURN;
                            END;
          OPEN FILE (KORR) DIRECT UPDATE;
          ON ENDPAGE (SYSPRINT) BEGIN;
                                CALL UEBK;
                                END;
          CALL UEBK;
          GET EDIT (WORK1) (A(80));
          WORKLOG = WORK1 ×× HSCHL ×× DATE ×× TIME;
          IF DOW ^= ' ' THEN WRITE FILE (LOG) FROM (WORKLOG);
          DO3 = SUBSTR (WORK1,1,1);
          GSCHL = HSCHL ×× '00' ×× SUBSTR (WORK1,1,6);
          DO WHILE (DO3 ^= '$'); /* DO 2 */
          ON KEY (KORR) BEGIN;
                        IF ONCODE = 51 THEN DO; /* DO 3 */
                                       DO3 = '.';
                                       END; /* END DO 3 */
                        END;
          IF VERIFY (SUBSTR(WORK1,1,6),'1234567890') ^= 0 THEN DO;
                                                    PUT FILE(SYSPRINT)
                                                    SKIP EDIT(WORK1,
                                                    '   FEHLER IN ' ××
                                                    'SOURCE-NUMMER')
                                                    (A);
                                                    END;
          ELSE DO;
          READ FILE (KORR) INTO (WORK4) KEY (GSCHL);
          IF DO3 = '.' THEN DO; /* DO 4 */
                       PUT FILE (SYSPRINT) SKIP EDIT (WORK1) (A);
                       WORK3 = SUBSTR (WORK1,7,72) ×× GSCHL;
                       WRITE FILE (KORR) FROM (WORK3) KEYFROM (GSCHL);
                       END; /* END DO 4 */
                       ELSE DO; /* ELSE 1 */
                       PUT FILE (SYSPRINT) SKIP EDIT (
                       SUBSTR (WORK1,1,80) ×× ' ' ××
                       SUBSTR (WORK4,83,6) ×× SUBSTR (WORK4,1,45))
                       (A);
                       WORK3 = SUBSTR (WORK1,7,72) ×× GSCHL;
                       REWRITE FILE (KORR) FROM (WORK3) KEY (GSCHL);
                       END; /* END ELSE 1 */
          END;
          IF CANCEL ^= ' ' THEN DO;
                           IF CANCEL = 'ENDUPD' THEN DO;
                                                CALL ENDUPD;
                                                RETURN;
                                                END;
                             ELSE DO;
                             CALL DISP;
                             END;
                           END;
          GET EDIT (WORK1) (A(80));
          WORKLOG = WORK1 ×× HSCHL ×× DATE ×× TIME;
          IF DOW ^= ' ' THEN WRITE FILE (LOG) FROM (WORKLOG);
          GSCHL = HSCHL ×× '00' ×× SUBSTR (WORK1,1,6);
          IF DOW = ' ' THEN DO;
                       CLOSE FILE (KORR);
                       RETURN;
                       END;
          WORK = WORK1;
          DO3 = SUBSTR (WORK,1,1);
          END; /* END DO 2 */
          CLOSE FILE (KORR);
          END BLK3C;
          /*****              END UP BLK3C                       *****/
1         /***********************************************************/
          /*                                                         */
          /*             UP BLK5C DELETE FUER COB                    */
          /*                                                         */
          /***********************************************************/
-BLK5C:
          PROC;
          IF FM = 0 THEN DO; /* DO 1 */
                    CALL FORLFE;
                    RETURN;
                    END; /* END DO 1 */
          IF STOPUPD ^= ' ' THEN DO;
                            CALL FEHLSTO;
                            RETURN;
                            END;
-         ON ENDPAGE (SYSPRINT) BEGIN;
                                CALL UEBD;
                                END;
-         ON ENDFILE (KORR) BEGIN;
                            DOD = 'E';
                            END;
-         ON KEY (KORR) BEGIN;
                        IF ONCODE = 51 THEN DO; /* DO 2 */
                                       DOD = 'N';
                                       PUT FILE (SYSPRINT) SKIP (3)
                                       EDIT ('DAS STATEMENT MIT DER '××
                                       'NUMMER ',SUBSTR(WORK,11,6),
                                       ' GIBT ES NICHT') (X(32),A);
                                       END; /* END DO 2 */
                        END;
-         OPEN FILE (KORR) SEQL UPDATE;
          CALL UEBD;
          GSCHL = HSCHL ×× '00' ×× SUBSTR (WORK,11,6);
          READ FILE (KORR) INTO (WORK5) KEY (GSCHL);
0         DO WHILE (DOD = 'D'); /* DO 3 */
          PUT FILE (SYSPRINT) SKIP (2) EDIT (
          SUBSTR (WORK5,83,6) ×× SUBSTR (WORK5,1,72) ×× '  ' ××'   DLET'
          ) (X(10),A);
          DELETE FILE (KORR);
          IF CANCEL ^= ' ' THEN DO;
                           IF CANCEL = 'ENDUPD' THEN DO;
                                                CALL ENDUPD;
                                                RETURN;
                                                END;
                             ELSE DO;
                             CALL DISP;
                             END;
                           END;
          READ FILE (KORR) INTO (WORK5);
          IF DOD = 'E' THEN DO; /* DO 4 */
                       CLOSE FILE (KORR);
                       GET EDIT (WORK) (A(80));
          WORKLOG = WORK ×× HSCHL ×× DATE ×× TIME;
          IF DOW ^= ' ' THEN WRITE FILE (LOG) FROM (WORKLOG);
                       RETURN;
                       END; /* END DO 4 */
          IF SUBSTR (WORK5,83,6) = SUBSTR (WORK,18,6) THEN DO; /* DO 5*/
                                                      DELETE FILE (KORR)
                                                      ;
                                                      PUT FILE(SYSPRINT)
                                                      SKIP (2) EDIT
                                                      (SUBSTR(WORK5,83,6
                                                      )××SUBSTR(WORK5,1,
                                                      72)××'  '××
                                                      '   DLET')
                                                      (X(10),A);
                                                      DOD = 'N';
                                                      END; /* END DO 5*/
          IF SUBSTR (WORK5,83,6) > SUBSTR (WORK,18,6) THEN DO; /* DO 6*/
                                                      DOD = 'N';
                                                      END; /* END DO 6*/
-         IF SUBSTR (WORK5,81,8) = '00000000' THEN DO; /* DO 7 */
                                                      DOD = 'N';
                                              END; /* END DO 7 */
          END; /* END DO 3 */
          CLOSE FILE (KORR);
          GET EDIT (WORK) (A(80));
          WORKLOG = WORK ×× HSCHL ×× DATE ×× TIME;
          IF DOW ^= ' ' THEN WRITE FILE (LOG) FROM (WORKLOG);
          END BLK5C;
          /*****              END UP BLK5C                       *****/
1         /***********************************************************/
          /*                                                         */
          /*             UP BLK7C LIST ALL FUER COB                  */
          /*                                                         */
          /***********************************************************/
-BLK7C:
          PROC;
          IF FM = 0 THEN DO; /* DO 1 */
                    CALL FORLFE;
                    RETURN;
                    END; /* END DO 1 */
          OPEN FILE (KORR) SEQL INPUT;
          ON ENDPAGE (SYSPRINT) BEGIN;
                                CALL UEBL;
                                END;
          ON ENDFILE (KORR) BEGIN;
                            SUBSTR (WORK3,73,8) = '********';
                            END;
          CALL UEBL;
          GSCHL = HSCHL ×× '00000000';
          READ FILE (KORR) INTO (WORK3) KEY (GSCHL);
          DO7 = HSCHL;
          READ FILE (KORR) INTO (WORK3);
          DO WHILE (DO7 = SUBSTR (WORK3,73,8)); /* DO 2 */
          IF SUBSTR (WORK3,6,5) = 'SKIP1' THEN DO; /* DO 3 */
                                          I = 1;
                                          END; /* END DO 3 */
            ELSE DO; /* ELSE 1 */
            IF SUBSTR (WORK3,6,5) = 'SKIP2' THEN DO; /* DO 4 */
                                            I = 2;
                                            END; /* END DO 4 */
              ELSE DO; /* ELSE 2 */
              IF SUBSTR (WORK3,6,5) = 'SKIP3' THEN DO; /* DO 5 */
                                              I = 3;
                                              END; /* END DO 5 */
                ELSE DO; /* ELSE 3 */
                IF SUBSTR (WORK3,6,5) = 'EJECT' THEN DO; /* DO 6*/
                                                CALL UEBL;
                                                I = 1;
                                                END; /* END DO 6 */
                  ELSE DO; /* ELSE 4 */
                  I = 1;
                  END; /* END ELSE 4 */
                END; /* END ELSE 3 */
              END; /* END ELSE 2 */
            END; /* END ELSE 1 */
          PUT FILE (SYSPRINT) SKIP (I) EDIT
          (SUBSTR (WORK3,83,6) ×× SUBSTR (WORK3,1,72) ×× '  ') (A);
          IF CANCEL ^= ' ' THEN DO;
                           IF CANCEL = 'ENDUPD' THEN DO;
                                                CALL ENDUPD;
                                                RETURN;
                                                END;
                             ELSE DO;
                             CALL DISP;
                             END;
                           END;
          READ FILE (KORR) INTO (WORK3);
          END; /* END DO 2 */
          CLOSE FILE (KORR);
          GET EDIT (WORK) (A(80));
          WORKLOG = WORK ×× HSCHL ×× DATE ×× TIME;
          IF DOW ^= ' ' THEN WRITE FILE (LOG) FROM (WORKLOG);
          WORK1 = WORK;
          END BLK7C;
          /*****              END UP BLK7C                       *****/
1         /***********************************************************/
          /*                                                         */
          /*             UP BLK9C COMPILE FUER COB                   */
          /*                                                         */
          /***********************************************************/
-BLK9C:
          PROC;
          IF FM = 0 THEN DO; /* DO 1 */
                    CALL FORLFE;
                    RETURN;
                    END; /* END DO 1 */
          IF SUBSTR (WORK,26,2) = 'GO' THEN COND = COND -890;
            ELSE DO; /* ELSE 1.2 */
            IF SUBSTR (WORK,26,3) = '   ' THEN COND = COND - 990;
          ELSE DO; /* ELSE 1.3 */
          IF SUBSTR (WORK,26,3) ^= '   ' THEN DO; /* DO 1 */
                                         IF SAVEB = 'J' THEN DO; /*DO2*/
                                           IF MBRUEB ^= MBRTEST THEN DO;
                                                            CALL SAVE;
                                                            COND =
                                                            COND - 990;
                                                            MERK = 1;
                                                                END;
                                           END; /* END DO 2 */
                                           ELSE DO; /* ELSE 1.1 */
                                           IF MBRUEB ^= MBRPRDU THEN DO;
                                                            CALL SAVE;
                                                            COND =
                                                            COND - 990;
                                                            MERK = 1;
                                                                END;
                                           END; /* END ELSE 1.1 */
                                         END; /* END DO 1 */
          IF MERK ^= 1 THEN DO; /* DO 3 */
          IF SUBSTR (WORK,26,3) = 'MDV' THEN COND = COND - 960;
            ELSE DO; /* ELSE 1 */
            IF SUBSTR (WORK,26,3) = 'OBJ' THEN COND = COND - 980;
              ELSE DO; /* ELSE 2 */
              IF SUBSTR (WORK,26,3) = 'IMS' THEN COND = COND - 970;
                ELSE DO; /* ELSE 3 */
                IF SUBSTR (WORK,26,3) = 'FMT' THEN COND = 61;
                                              ELSE COND = COND - 990;
                END; /* END ELSE 3 */
              END; /* END ELSE 2 */
            END; /* END ELSE 1 */
                       END; /* END DO 3 */
          END; /* END ELSE 1.3 */
            END; /* END ELSE 1.2 */
          CALL PLIRETC (COND);
          OPEN FILE (TEMP) SEQL OUTPUT;
          OPEN FILE (KORR) SEQL INPUT;
          GSCHL = SUBSTR (WORK,17,8) ×× '00000000';
          READ FILE (KORR) INTO (WORK3) KEY (GSCHL);
          READ FILE (KORR) INTO (WORK3);
          HCOMP,DO9 = GSCHL;
          DO WHILE (DO9 = HCOMP); /* DO 2 */
          WORK6 = SUBSTR (WORK3,83,6) ××
                  SUBSTR (WORK3,1,72) ××
                  '  ';
          WRITE FILE (TEMP) FROM (WORK6);
          READ FILE (KORR) INTO (WORK3);
          DO9 = SUBSTR (WORK3,73,8);
          END; /* END DO 2 */
          CLOSE FILE (TEMP);
          CLOSE FILE (KORR);
          GET EDIT (WORK) (A(80));
          WORKLOG = WORK ×× HSCHL ×× DATE ×× TIME;
          IF DOW ^= ' ' THEN WRITE FILE (LOG) FROM (WORKLOG);
          END BLK9C;
          /*****              END UP BLK9C                       *****/
1         /***********************************************************/
          /*                                                         */
          /*             UP BLK11C LOAD COB                          */
          /*                                                         */
          /***********************************************************/
-BLK11C:
          PROC;
          IF FM = 0 THEN DO; /* DO 1 */
                    CALL FORLFE;
                    RETURN;
                    END; /* END DO 1 */
          IF STOPUPD ^= ' ' THEN DO;
                            CALL FEHLSTO;
                            RETURN;
                            END;
          ON CONVERSION BEGIN;
                        ONCHAR () = '0';
                        END;
          ON KEY (KORR) BEGIN;
                        IF ONCODE = 52 THEN DO; /* DO 2 */
                                       CALL UEBA;
                                       DOH = 'E';
                                       PUT FILE (SYSPRINT) SKIP (4)
                                       EDIT
                                       ('***** DATEI ',HSCHL,' SCHON' ××
                                        ' GELADEN *****')
                                       (X(10),A,A,A);
                                       END; /* END DO 2 */
                        ELSE DO; /* ELSE 1 */
                        IF ONCODE = 53 THEN DO; /* DO 2A */
                                       CALL UEBA;
                                       DOH = 'E';
                                       PUT FILE (SYSPRINT) SKIP (4) EDIT
                                       ('***** SCHL ',GSCHL,' FALSCH' ××
                                        ' *****') (X(10),A,A,A);
                                       END; /* END DO 2A */
                        ELSE DO; /* ELSE 2 */
                             CLOSE FILE (KORR);
                             PUT LIST (ONCODE);
                             SIGNAL ERROR;
                             END; /* END ELSE 2 */
                        END; /* END ELSE 1 */
                        END;
          OPEN FILE (KORR) DIRECT UPDATE;
          GET EDIT (WORK1) (A(80));
          WORKLOG = WORK1 ×× HSCHL ×× DATE ×× TIME;
          IF DOW ^= ' ' THEN WRITE FILE (LOG) FROM (WORKLOG);
          IF DOW = ' ' THEN DO; /* DO 3 */
                       CLOSE FILE (KORR);
                       RETURN;
                       END; /* END DO 3 */
          DO WHILE (DO11 ^= SUBSTR (WORK1,1,1)); /* DO 4 */
          ZAHL = '00' ×× SUBSTR (WORK1,1,6);
          WORK3 = SUBSTR (WORK1,7,72) ×× HSCHL ×× ZAHL;
          GSCHL = HSCHL ×× ZAHL;
          WRITE FILE (KORR) FROM (WORK3) KEYFROM (GSCHL);
          IF DOH = 'E' THEN DO; /* DO 5 */
                       CLOSE FILE (KORR);
                       DO WHILE (DO11 ^= SUBSTR (WORK1,1,1)); /* DO 6 */
                       GET EDIT (WORK1) (A(80));
                       IF DOW = ' ' THEN RETURN;
                       WORK = WORK1;
                       END; /* END DO 6 */
                       RETURN;
                       END; /* END DO 5 */
          IF CANCEL ^= ' ' THEN DO;
                           IF CANCEL = 'ENDUPD' THEN DO;
                                                CALL ENDUPD;
                                                RETURN;
                                                END;
                             ELSE DO;
                             CALL DISP;
                             END;
                           END;
          GET EDIT (WORK1) (A(80));
          WORKLOG = WORK1 ×× HSCHL ×× DATE ×× TIME;
          IF DOW ^= ' ' THEN WRITE FILE (LOG) FROM (WORKLOG);
          IF DOW = ' ' THEN DO; /* DO 7 */
                       CLOSE FILE (KORR);
                       CALL UEBLA;
                       RETURN;
                       END; /* END DO 7 */
          WORK = WORK1;
          END; /* END DO 4 */
          CLOSE FILE (KORR);
          CALL UEBLA;
          END BLK11C;
          /*****              END UP BLK11C                      *****/
1         /***********************************************************/
          /*                                                         */
          /*             UP BLK13C NEW NUMBER FUER COB               */
          /*                                                         */
          /***********************************************************/
-BLK13C:
          PROC;
          IF FM = 0 THEN DO; /* DO 1 */
                    CALL FORLFE;
                    RETURN;
                    END; /* END DO 1 */
-         ON ENDFILE (KORR) BEGIN;
                            DO13 = '********';
                            END;
-         OPEN FILE (KORR) SEQL UPDATE;
          OPEN FILE (TEMP) SEQL OUTPUT;
          GSCHL = HSCHL ×× '00000000';
          READ FILE (KORR) INTO (WORK5) KEY (GSCHL);
          DO13 = HSCHL;
-         DO WHILE (DO13 = SUBSTR (WORK5,73,8)); /* DO 2 */
          WORK6 = WORK5;
          WRITE FILE (TEMP) FROM (WORK6);
          DELETE FILE (KORR);
          READ FILE (KORR) INTO(WORK5);
          END; /* END DO 2 */
-         CLOSE FILE (KORR);
          CLOSE FILE (TEMP);
          OPEN FILE (KORR) DIRECT UPDATE;
          OPEN FILE (TEMP) SEQL   INPUT;
-         ON ENDFILE (TEMP) BEGIN;
                            DO13 = '********';
                            END;
-         ZAHL = 0;
          READ FILE (TEMP) INTO (WORK6);
          DO WHILE (DO13 = SUBSTR (WORK6,73,8)); /* DO 3 */
          GSCHL = HSCHL ×× ZAHL;
          WORK5 = WORK6 ×× ZAHL;
          WRITE FILE (KORR) FROM (WORK5) KEYFROM (GSCHL);
          ZAHL = ZAHL + 10;
          READ FILE (TEMP) INTO (WORK6);
          END; /* END DO 3 */
-         CLOSE FILE (TEMP);
          CLOSE FILE (KORR);
          CALL BLKNN;
          GET EDIT (WORK) (A(80));
          WORKLOG = WORK ×× HSCHL ×× DATE ×× TIME;
          IF DOW ^= ' ' THEN WRITE FILE (LOG) FROM (WORKLOG);
          END BLK13C;
          /*****              END UP BLK13C                      *****/
1         /***********************************************************/
          /*                                                         */
          /*             UP BLK17C DISK TO CARD FUER COB             */
          /*                                                         */
          /***********************************************************/
-BLK17C:
          PROC;
          IF FM = 0 THEN DO; /* DO 1 */
                    CALL FORLFE;
                    RETURN;
                    END; /* END DO 1 */
          ON ENDFILE (KORR) BEGIN;
                            DO17 = '';
                            END;
          OPEN FILE (KORR) SEQL INPUT;
          IF SUBSTR (WORK,18,5) = 'STMN=' THEN DO; /* DO 2 */
                                          GSCHL = HSCHL ×× '00' ××
                                                  SUBSTR (WORK,25,6);
                                          DO17 = HSCHL;
                                          READ FILE (KORR) INTO (WORK3)
                                                           KEY (GSCHL);
                                          DO WHILE (DO17 = HSCHL);
                                          PUT FILE (PUNCH) EDIT
                                          (SUBSTR(WORK3,83,6) ××
                                           SUBSTR(WORK3,1,72) ××'  ')
                                          (A(80));
                                          READ FILE (KORR) INTO (WORK3);
                                          IF SUBSTR(WORK3,83,6) >
                                             SUBSTR(WORK,34,6) THEN DO;
                                                               DO17 ='';
                                                               END;
                                          IF SUBSTR (WORK3,83,6) =
                                             '000000' THEN DO17 = '';
                                          END; END; /* END DO 2 */
            ELSE DO; /* ELSE 1 */
            GSCHL= HSCHL ×× '00000000';
            DO17 = HSCHL;
            READ FILE (KORR) INTO (WORK3) KEY (GSCHL);
            DO WHILE (DO17 = HSCHL); /* DO 3 */
            PUT FILE (PUNCH) EDIT(SUBSTR(WORK3,83,6) ××
                                  SUBSTR(WORK3,1,72) ××'  ') (A(80));
          IF CANCEL ^= ' ' THEN DO;
                           IF CANCEL = 'ENDUPD' THEN DO;
                                                CALL ENDUPD;
                                                RETURN;
                                                END;
                             ELSE DO;
                             CALL DISP;
                             END;
                           END;
            READ FILE (KORR) INTO (WORK3);
            DO17 = SUBSTR (WORK3,73,8);
            END; /* END DO 3 */
            END; /* END ELSE 1 */
            CLOSE FILE (KORR);
            GET EDIT (WORK) (A(80));
          WORKLOG = WORK ×× HSCHL ×× DATE ×× TIME;
          IF DOW ^= ' ' THEN WRITE FILE (LOG) FROM (WORKLOG);
            END BLK17C;
            /*****            END UP BLK17C                      *****/
1         /***********************************************************/
          /*                                                         */
          /*             UP FORLFE FALSCHE STEUERKARTE               */
          /*                                                         */
          /***********************************************************/
-FORLFE:
          PROC;
          PUT FILE (SYSPRINT) SKIP (4) EDIT
          ('***** ERSTE KARTE WAR KEINE GUELTIGE VORLAUFKARTE *****')
          (X(30),A);
          PUT FILE (SYSPRINT) SKIP (2) EDIT
          ('***** DAS PROGRAMM WURDE ABGEBROCHEN *****')
          (X(37),A);
          DOW = ' ';
          END FORLFE;
          /*****              END UP FORLFE                      *****/
1         /***********************************************************/
          /*                                                         */
          /*             UP CHANGE FUER DATEI KORR                   */
          /*                                                         */
          /***********************************************************/
-CHANGE:
          PROC;
          /*        SATZAUFBAU                                       */
          /*   SPALTE    INHALT                                      */
          /*                                                         */
          /*   1 - 8     AB NUMMER                                   */
          /*     9       KOMMA                                       */
          /*   10-17     BIS NUMMER                                  */
          /*    16       BLANK                                       */
          /*   19-80     ZEICHEN DIE ERSETZT                         */
          /*             WERDEN SOLLEN IN HOCH-                      */
          /*             KOMMA.ERSTE ZEICHENKETTE                    */
          /*             IST DER SUCHBEGRIFF ZWEITE                  */
          /*             ZEICHENKETTE WIRD EINGE-                    */
          /*             SETZT.                                      */
-         DCL  DOCHNG    CHAR (1);
-         DCL  DOCHNG1   CHAR (1);
-         DCL  TEXTOUT   CHAR (43);
-         IF FM = 0 THEN DO;
                    CALL ERROR;
                    RETURN;
                    END;
          ON ENDPAGE (SYSPRINT) BEGIN;
                                CALL UEBCHNG;
                                END;
          OPEN FILE (KORR) SEQL UPDATE;
          CALL UEBCHNG;
          GET EDIT (WORK1) (A(80));
          WORKLOG = WORK1 ×× HSCHL ×× DATE ×× TIME;
          IF DOW ^= ' ' THEN WRITE FILE (LOG) FROM (WORKLOG);
          DOCHNG1 = '*';
          DOCHNG = SUBSTR (WORK1,1,1);
          IF DOCHNG ^= '$' THEN DO; /* DO 1 */
                           GSCHL = HSCHL ×× SUBSTR (WORK1,1,8);
                           DO WHILE (DOCHNG ^= '$'); /* DO WHILE 1 */
                           READ FILE (KORR) INTO (WORK4) KEY (GSCHL);
                           DO WHILE (DOCHNG1 = '*'); /* DO WHILE 2 */
          PUT FILE (SYSPRINT) SKIP (2) EDIT
          (SUBSTR (WORK4,1,72) ×× SUBSTR (WORK4,81,8) ×× '   OLD') (A);
                           IF SUBSTR (WORK1,18,1) = ',' THEN DO;
                                                        TEXTOUT = '';
                                                        CALL CHNSUF;
                                                        END;
                             ELSE DO;
                             TEXTOUT = '';
                             CALL CHNSU (WORK4,TEXTOUT);
                             END;
                           REWRITE FILE (KORR) FROM (WORK4);
          PUT FILE (SYSPRINT) SKIP (1) EDIT
          (SUBSTR (WORK4,1,72) ×× SUBSTR (WORK4,81,8) ×× '   NEW' ××
          TEXTOUT) (A);
                             READ FILE (KORR) INTO (WORK4);
                             IF SUBSTR (WORK4,81,8) >
                                SUBSTR (WORK1,10,8) THEN DOCHNG1 = '';
                             ELSE DO;
                             IF SUBSTR (WORK4,81,8) = '00000000'
                                                  THEN DOCHNG1 = '';
                             END;
                           END; /* END DO WHILE 2 */
                           GET EDIT (WORK1) (A(80));
          WORKLOG = WORK1 ×× HSCHL ×× DATE ×× TIME;
          IF DOW ^= ' ' THEN DO;      WRITE FILE (LOG) FROM (WORKLOG);
                           DOCHNG = SUBSTR (WORK1,1,1);
                           DOCHNG1 = '*';
                           GSCHL = HSCHL ×× SUBSTR (WORK1,1,8);
                                         END;
                           ELSE RETURN;
                           END; /* END DO WHILE 1 */
                           END; /* END DO 1 */
          WORK = WORK1;
          CLOSE FILE (KORR);
          END CHANGE;
          /*****              END UP CHANGE                      *****/
1         /***********************************************************/
          /*                                                         */
          /*             UP CHNSU KETTE SUCHEN & ERSETZEN            */
          /*                                                         */
          /***********************************************************/
-CHNSU:
          PROC (WORK4,TEXT);
-         DCL  FSP  BIN FIXED (15); /* ZAEHLER FREIPLATZ */
-         DCL  H1   BIN FIXED (15); /* 1. TRENNZEICHEN */
-         DCL  H2   BIN FIXED (15); /* 2. TRENNZEICHEN */
-         DCL  H3   BIN FIXED (15); /* 3. TRENNZEICHEN */
-         DCL  H4   BIN FIXED (15); /* 4. TRENNZEICHEN */
-         DCL  HZ   BIT (8)   INIT ('01001010'B) STATIC;
-         DCL  PFS  POINTER;
-         DCL  HZC  CHAR (1) BASED (PFS);
-         DCL  R1A  BIN FIXED; /* BEGINN KETTE IN WORK4 */
-         DCL  VER1 BIN FIXED; /* SUCHARGUMENT +1 */
-         DCL  VER2 BIN FIXED; /* REPLACEARGUMENT + 1 */
-         DCL  TEXT CHAR (43); /* WARNUNG */
-         DCL  VERAN     BIN FIXED; /* ANZAHL DER VERSCHIEBESTELLEN */
-         DCL  R1E  BIN FIXED; /* ENDE DER KETTE IN WORK4 */
-         DCL  WORK4     CHAR (88);
-         DCL  I    BIN FIXED;
-         DCL  PFSP      POINTER;
-         DCL  TAB (72)  CHAR (1) BASED (PFSP);
-         PFSP = ADDR (WORK4);
          PFS = ADDR (HZ);
-         /*****         FREIPLATZ ERMITTELN                     *****/
          DO I=72 TO 1 BY -1;
          IF TAB (I) ^= ' ' THEN DO;
                            FSP = 72 - I;
                            I = 0;
                            END;
          END;
-         /*****         TRENNZEICHEN SUCHEN                     *****/
          H1 = INDEX (WORK1,HZC);
          H2 = INDEX (SUBSTR (WORK1,H1+1,72-H1),HZC) + H1;
          H3 = INDEX (SUBSTR (WORK1,H2+1,72-H2),HZC) + H2;
          H4 = INDEX (SUBSTR (WORK1,H3+1,72-H3),HZC) + H3;
-         /*****         ERMITTELN OB VERSCHOBEN WERDEN MUSS     *****/
          IF (H2 - H1) = (H4 - H3) THEN DO; /* NICHT VERSCHIEBEN */
                                   R1A = INDEX (WORK4,
                                                SUBSTR (WORK1,H1+1,
                                                        H2-H1-1));
                              IF R1A = 0 THEN DO;
                                         TEXT = '  CHANGE NICHT AUS' ××
                                         'GEFUEHRT,DA OP NICHT DA';
                                         RETURN;
                                         END;
                                   SUBSTR (WORK4,R1A,H2-H1-1) =
                                   SUBSTR (WORK1,H3+1,H4-H3-1);
                                   END; /* NICHT VERSCHIEBEN */
-           ELSE DO; /* VERSCHIEBEN NOETIG */
            VER1 = H2 - H1;
            VER2 = H4 - H3;
            IF VER2 > VER1 THEN DO; /* RECHTS VERSCHIEBEN */
                           IF (VER2 - VER1) > FSP THEN DO; /* VER ^MOE*/
                                                  TEXT = '  CHANGE '××
                                                  'NICHT AUSGEFUEHRT,'××
                                                  ' DA STMT ZU LANG';
                                                  RETURN;
                                                  END; /* VER ^ MOE */
                           VERAN = VER2 - VER1;
                           R1A = INDEX(WORK4,SUBSTR(WORK1,H1+1,VER1-1));
                           IF R1A = 0 THEN DO;
                                      TEXT = '  CHANGE NICHT AUSGE' ××
                                      'FUEHRT,DA OP NICHT DA';
                                      RETURN;
                                      END;
                           R1E = R1A +(VER1-1);
                           SUBSTR (WORK4,R1E+VERAN,(73-R1E-VERAN)) =
                           SUBSTR (WORK4,R1E,(73-R1E-VERAN));
                           SUBSTR (WORK4,R1A,VER2-1) =
                           SUBSTR (WORK1,H3+1,VER2-1);
                           END; /* RECHTS VERSCHIEBEN */
-             ELSE DO; /* LINKS VERSCHIEBEN */
              VERAN = VER1 - VER2;
              R1A = INDEX (WORK4,SUBSTR(WORK1,H1+1,VER1-1));
              IF R1A = 0 THEN DO;
                         TEXT = '  CHANGE NICHT AUSGEFUEHRT,DA OP' ××
                                'NICHT DA';
                         RETURN;
                         END;
              R1E = R1A + (VER1 - 1);
              SUBSTR (WORK4,R1E-VERAN,(73-R1E)) =
              SUBSTR (WORK4,R1E,(73-R1E));
              SUBSTR (WORK4,R1A,VER2-1) =
              SUBSTR (WORK1,H3+1,VER2-1);
          DO KBL = 72 TO (73-VERAN) BY -1;
          SUBSTR (WORK4,KBL,1) = ' ';        /* BLANK'S NACHZIEHEN */
          END;
              END; /* LINKS VERSCHIEBUNG */
            END; /* VERSCHIEBEN NOETIG */
          END CHNSU;
          /*****              END UP CHNSU                       *****/
1         /***********************************************************/
          /*                                                         */
          /*             UP CHNSUF AN BEKANNTE STELLE REPL           */
          /*                                                         */
          /***********************************************************/
-CHNSUF:
          PROC;
-         DCL  H1   BIN FIXED;
-         DCL  H2   BIN FIXED;
-         DCL  HB   BIT (8) INIT ('01001010'B) STATIC;
-         DCL  P1   POINTER;
-         DCL  HC   CHAR (1) BASED (P1);
-         DCL  R1A  PIC'99';
          P1 = ADDR (HB);
-         H1 = INDEX (WORK1,HC);
          H2 = INDEX (SUBSTR(WORK1,H1+1,72-H1),HC) + H1;
          R1A = SUBSTR (WORK1,19,2);
          SUBSTR (WORK4,R1A,(H2-H1-1)) =
          SUBSTR (WORK1,H1+1,(H2-H1-1));
          END CHNSUF;
          /*****              END UP CHNSUE                      *****/
          %INCLUDE DATECON;
-         END SPLU;
