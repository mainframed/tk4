./       ADD   NAME=UGEZ01AS
         TITLE  'DASD AND CHANNEL REPORT FROM RMF-DATA'
*
*        JCL FOR EXECUTING THE JOB
*
*  //STEP  EXEC  PGM=????????,
*  //      PARM='D(YYDDD:YYDDD,YYDDD:YYDDD),T(HHMM:HHMM,HHMM:HHMM)'
*  //*     SEE THE PROGRAM-TEXT BELOW
*  //SMFIN  DD DSN=........   SMF-DATA-SET WITH RMF-RECORDS
*  //REPORT DD SYSOUT=*
*
*
*
XXXXX    BEGIN BASE=(12,10,9)
         EJECT
***********************************************************
* FORMAT OF CONTROL BLOCKS USED FOR DEVICE RECORDS...     *
* TO FIND RECORD FOR ADDRESS XYZ...                       *
* CHTAB  +--+-----+                                       *
*   16   ×  ×     ×     CU TABLE                          *
*   FW   ×80×ADDR ×--> +--+-----+                         *
*        ×  ×     ×  16×  ×     ×     ST TABLE            *
*        +--+-----+  FW×80×ADDR ×--->+--+-----+-------+   *
*                      ×  ×     ×    ×  ×     ×STRING ×   *
*                      +--+-----+    ×80×ADDR × TOTALS×   *
*                                    +--+-----+-------+   *
*                                           ×             *
*             ------------------------------+             *
*             ×                                           *
*        +--+-----+                                       *
* DEVICE ×  ×     ×                                       *
* TABLE  ×80×ADDR ×----->DEVICE RECORD                    *
* 8 FW   ×  ×     ×                                       *
*        +--+-----+                                       *
*                                                         *
*                                                         *
*  I.E.   X*4 INTO CHTAB --> CU TAB                       *
*         Y*4 INTO CU TAB--> STRING TAB                   *
*         IF Z<8 THEN STTAB+0--> DEV TAB                  *
*         IF Z> OR =8  THEN STTAB+4--> DEV TAB            *
*         (Z-8) OR Z *4 INTO DEV TAB--> DEVICE RECORD     *
***********************************************************
          EJECT
*********************************************
* GET PARAMETER INFORMATION ...             *
* SYNTAX <==> D(YYDDD:YYDDD,YYDDD:YYDDD,..) *
*             T(HHMM:HHMM,HHMM:HHMM,...)    *
* MAXIMUM OF 16 DATE OR TIME RANGES         *
* DATE AND TIME RANGES STORED IN TABLES     *
*  DATETAB ANF TIMETAB.                     *
* DEFAULTS TO ALL RECORDS READ.             *
*********************************************
         SPACE 2
         L     R1,0(R1)            R1->PARA INFO
         CLC   0(2,R1),=H'0'       IS THERE ANY?
         BE    GETMAIN             NO..CARRY ON
         LH    R2,0(R1)            R2=LENGTH OFF PARM
         LR    R3,R2               SO DOES R3
         BCTR  R3,0                CORRECT FO EXECUTE
         LA    R1,2(R1)            R1->START OF PARM INFO
         EX    R3,SAVEPARM         SAVE PARAMETER INFO
         LA    R2,0(R1,R2)         R2->END OF PARM INFO
         SPACE
DATECK   CLC   0(2,R1),=C'D('      DATE KEYWORD?
         BE    DATE                YES..PROCESS
TIMECK   CLC   0(2,R1),=C'T('      TIME KEYWORD?
         BE    TIME                YES..PROCESS
SYNERR   LA    R3,ERRMSG1          NO..SYNTAX ERROR
         B     ERRMSG              MESSAGE AND EXIT
         SPACE
DATE     LA    R1,2(R1)            R1->START DATE
         LA    R4,DATETAB          R4->DATE TABLE
DATEU    BAL   R11,DATEUPD         GO SET DATE
DATEERR  LA    R3,ERRMSG2          +0 ERROR IN SYNTAX
         B     ERRMSG              MESSAGE AND EXIT
         LA    R1,11(R1)           +8 NEXT PAIR..UPDATE POINTER
         CLI   0(R1),C')'          END OF KEYWORD?
         BE    DATEEND             YES..BRANCH
         CLI   0(R1),C','          NO..ANOTHER
         BNE   DATEERR             NO..SYNTAX ERROR
         LA    R1,1(R1)            R1->DATE
         LA    R4,8(R4)            R4->NEXT TABLE ENTRY
         B     DATEU               DO NEXT
         SPACE
DATEEND  LA    R1,1(R1)            NEXT KEYWORD OR END
         OI    8(R4),X'80'         SHOW END OF DATE TABLE
         CR    R1,R2               END OF PARA INFO?
         BNL   GETMAIN             YES EXIT
         CLI   0(R1),C','          DELIM FOR NEXT KEYWORD?
         BNE   SYNERR              NO..SYNTAX ERROR
         LA    R1,1(R1)            POINT TO NEXT KEYWORD
         B     TIMECK              GO CHECK FOR TIME
         SPACE 3
TIME     LA    R1,2(R1)            R1->START DATE
         LA    R4,TIMETAB          R4->TIME TABLE
TIMEU    BAL   R11,TIMEUPD         UPDATE TIME TABLE
TIMEERR  LA    R3,ERRMSG3          +0 ERROR RET
         B     ERRMSG              MESSAGE AND EXIT
         LA    R1,9(R1)            +8 NEXT PAIR
         CLI   0(R1),C')'          END OF KEYWORD?
         BE    TIMEEND             YES EXIT
         CLI   0(R1),C','          ANOTHER TIME RANGE?
         BNE   TIMEERR             NO..SYNTAX ERROR
         LA    R1,1(R1)            R1->NEXT TIME RANGE
         LA    R4,8(R4)            R4->NEXT TABLE ENTRY
         B     TIMEU               PROCESS
TIMEEND  LA    R1,1(R1)            NEXT KEYWORD OR END
         OI    8(R4),X'80'         SHOW END OF TIME TABLE
         CR    R1,R2               END OF PARA INFO
         BNL   GETMAIN             YES EXIT
         CLI   0(R1),C','          DELIM FOR NEXT KEYWORD?
         BNE   SYNERR              NO..SYNTAX ERROR
         LA    R1,1(R1)            R1->NEXT KEYWORD
         B     DATECK              CHECK FOR DATE KEYWORD
         SPACE
DATEUPD  CLI   5(R1),C':'          CORRECT DELIM?
         BNER  R11                 NO RETURN
         OC    0(5,R1),=X'F0F0F0F0F0' ENSURE NUMERIC
         OC    6(5,R1),=X'F0F0F0F0F0'
         PACK  0(4,R4),0(5,R1)     CONVERT TO
         PACK  4(4,R4),6(5,R1)                CORRECT FORMAT
         B     8(R11)              RETURN
         SPACE
TIMEUPD  CLI   4(R1),C':'          CORRECT DELIM?
         BNER  R11                 NO RETURN
         OC    0(4,R1),=X'F0F0F0F0' ENSURE NUMERIC
         OC    5(4,R1),=X'F0F0F0F0'
         MVC   TIMEA(4),0(R1)       CONVERT TO
         PACK  0(4,R4),TIMEA(6)                CORRECT FORMAT
         MVC   TIMEA(4),5(R1)
         PACK  4(4,R4),TIMEA(6)
         B     8(R11)              RETURN
         SPACE 2
ERRMSG   OPEN  (PRINT,OUTPUT)    SYNTAX ERROR IN PARA INFO
         PUT   PRINT,PARAMSG     WRITE OUT PARA INFO
         MVC   DESCOUT(40),0(R3) MOVE IN MESSAGE
         PUT   PRINT,DESCOUT     WRITE OUT ERROR MESSAGE
         CLOSE PRINT             CLOSE
         RETU  RC=4              EXIT
         SPACE 2
         EJECT
********************************************
* ALL PARAMETER INFO READ..MAIN PROCESSING *
* 1) GET STORAGE FOR RECORD ACCUM AREAS    *
* 2) GET SMF RECORD TYPE74..DASD           *
*                   TYPE73..CHANNEL        *
* 3) UPDATE COUNTERS FOR RELEVENT TYPES    *
* 4) AT EOF PRODUCE RUN STATISTICS         *
********************************************
         SPACE 2
GETMAIN  L     R0,WALNGTH           R0=AREA SIZE FOR GETMAIN
         GETMAIN R,LV=(0)           GET STORAGE
         ST    R1,WADDR             SAVE ADDRESS FOR FREEMAIN
         ST    R1,NEXTFREE          STORE ADDRESS FOR WORK
         SPACE 2
         OPEN  (SMFIN,INPUT)        OPEN SMF FILE
         SPACE
IOSMF    BAL   R11,GETSMF           GO GET SMF RECORD
         B     PTYPE73              +0 TYPE 73 CHANNEL RECORD
         SPACE
****************************
* TYPE74 DASD RECORD....   *
****************************
         SPACE
         LR    R2,R1                +4 TYPE 74 DASD RECORD
         BAL   R11,CONVINT          CONVERT INTERVAL TO SECS
         SPACE
         L     R3,INTVAL74          R3=INTERVAL SO FAR
         A     R3,0(R1)             UPDATE
         ST    R3,INTVAL74          AND STORE BACK
         SPACE
         LH    R4,54(R2)           R1=# OF DEVICE SECTIONS
         LH    R7,56(R2)            R7=LENGTH OF SECTION
         LA    R8,64(R2)            R8->1ST DEVICE ENTRY
         SPACE
TABUP    BAL   R11,FINDENT          FIND TABLE FOR DEVICE
         SPACE
         BAL   R11,UPDTAB           GO UPDATE TABLE
         SPACE
         LA    R8,0(R8,R7)          NEXT DEVICE ENTRY
         BCT   R4,TABUP            PROCESS NEXT ENTRY
         B     IOSMF                GET NEXT RECORD
         EJECT
****************************
* TYPE73 CHANNEL RECORD..  *
****************************
         SPACE
PTYPE73  LR    R2,R1              R2->RECORD
         SPACE
         BAL   R11,CONVINT        CONVERT INTERVAL TO SECONDS
         SPACE
         L     R3,INTVAL73        R3=INTERVAL SO FAR
         A     R3,0(R1)           UPDATE
         ST    R3,INTVAL73        STORE BACK
         SPACE
         LA    R8,80(R2)          1ST PHYSICAL CHANNEL SECTION
         LH    R7,56(R2)          LENGTH
         LH    R14,54(R2)         # OF SECTIONS
         SPACE
TUPD731  BAL   R11,UPD731         UPDATE PHYSICAL
         SPACE
         LA    R8,0(R7,R8)        NEXT ENTRY
         BCT   R14,TUPD731        DO NEXT
         SPACE
         LH    R7,60(R2)          LENGTH OF LOGICAL CHAN SECTION
         LH    R14,58(R2)         # OF SECTIONS
         SPACE
TUPD732  BAL   R11,UPD732         UPDATE LOGICAL CHANNEL SECTION
         SPACE
         LA    R8,0(R7,R8)        UPDATE TO NEXT ENTRY
         BCT   R14,TUPD732        DO NEXT
         B     IOSMF              GET NEXT RECORD
         EJECT
******************************************
* END OF SMF FILE.... CLOSE FILE..SEE IF *
* ANY RECORDS FOUND..YES PRODUCE REPORT. *
******************************************
         SPACE
EOSMF    CLOSE SMFIN            CLOSE SMF FILE
         LA    R3,ERRMSG4       ASSUME NO RECORD FOUND
         TM    SW,X'01'         ANY RECORDS FOUND?
         BNO   ERRMSG           NO BRANCH
         SPACE 2
*************************************************
* NOW HAVE ALL DEVICE TOTALS FROM RMF RECORDS   *
* IN AREA'S POINTED TO BY CHTAB.PRODUCE REPORTS *
*************************************************
         SPACE
*************************************************
* PRODUCE RUN STATISTICS .....                  *
*************************************************
         SPACE
         OPEN  (PRINT,OUTPUT)      OPEN OUTPUT FILE
         LA    R1,PARAMSG
         BAL   R11,OUTPUT          PARAMETER INFO
         MVC   OTOTREC,RECPAT      EDIT TOTAL
         ED    OTOTREC,TOTCNT+1               NUMBER OF RECORDS
         LA    R1,RCOUNT
         BAL   R11,OUTPUT          # OF RECORDS READ
         MVC   TREC73,RECPAT     EDIT RECORDS
         ED    TREC73,TOTCNT73+1             USED
         LA    R1,RCOUNT73
         BAL   R11,OUTPUT          # OF RECORDS IN TIME RANGE
         MVC   TREC74,RECPAT     EDIT RECORDS
         ED    TREC74,TOTCNT74+1             USED
         LA    R1,RCOUNT74
         BAL   R11,OUTPUT          # OF RECORDS IN TIME RANGE
         MVC   AREC73,RECPAT     EDIT RECORDS
         ED    AREC73,RECCNT73+1             USED
         LA    R1,ACOUNT73
         BAL   R11,OUTPUT          # OF RECORDS IN TIME RANGE
         MVC   AREC74,RECPAT     EDIT RECORDS
         ED    AREC74,RECCNT74+1             USED
         LA    R1,ACOUNT74
         BAL   R11,OUTPUT          # OF RECORDS IN TIME RANGE
         XR    R2,R2               CLEAR FOR DIVIDE
         L     R3,INTVAL73         R3=TIME IN SECS
         D     R2,F60              R2=SECONDS
         STH   R2,SHW              CONVERT
         XR    R2,R2               CLEAR
         D     R2,F60              R2=MINS,R3=HOURS
         MH    R2,H100             MINS*100
         MH    R3,H10000           HOURS*10000
         AR    R3,R2               R3=0HHMM00F IN HEX
         AH    R3,SHW              R3=0HHMMSSF IN HEX
         CVD   R3,DW               DW=0HHMMSSF
         MVC   INTOUT73,INTPAT     EDIT INTERVAL
         ED    INTOUT73,DW+4                    LENGTH
         LA    R1,INTINF73
         BAL   R11,OUTPUT          WRITE OUT INTERVAL LENGTH
         XR    R2,R2               CLEAR FOR DIVIDE
         L     R3,INTVAL74         R3=TIME IN SECS
         D     R2,F60              R2=SECONDS
         STH   R2,SHW              CONVERT
         XR    R2,R2               CLEAR
         D     R2,F60              R2=MINS,R3=HOURS
         MH    R2,H100             MINS*100
         MH    R3,H10000           HOURS*10000
         AR    R3,R2               R3=0HHMM00F IN HEX
         AH    R3,SHW              R3=0HHMMSSF IN HEX
         CVD   R3,DW               DW=0HHMMSSF
         MVC   INTOUT74,INTPAT     EDIT INTERVAL
         ED    INTOUT74,DW+4                    LENGTH
         LA    R1,INTINF74
         BAL   R11,OUTPUT          WRITE OUT INTERVAL LENGTH
         LA    R1,SYSTEM
         BAL   R11,OUTPUT          WRITE OUT SYSID
         UNPK  WORK(5),LOWDATE+1(3)
         MVC   DATEINFS+DATOFF(5),WORK
         UNPK  WORK(7),LOWTIME(4)
         MVC   DATEINFS+TIMOFF(6),WORK+1
         LA    R1,DATEINFS
         BAL   R11,OUTPUT
         UNPK  WORK(5),HIGHDATE+1(3)
         MVC   DATEINFE+DATOFF(5),WORK
         UNPK  WORK(7),HIGHTIME(4)
         MVC   DATEINFE+TIMOFF(6),WORK+1
         LA    R1,DATEINFE
         BAL   R11,OUTPUT
         LA    R3,DESCRNU          R3=NUM LINES FOR DESCRIPTION
         LA    R4,DESCR001         R4->1ST
DESCLOOP MVC   DESCOUT(80),0(R4)   MOVE IN MESSAGE
         PUT   PRINT,DESCOUT       WRITE LINE
         LA    R4,80(R4)           UPDATE POINTER
         BCT   R3,DESCLOOP         DO NEXT
         EJECT
***********************************
* PRODUCE REPORT FOR DEVICES....  *
***********************************
         SPACE
         XC    SWP,SWP            CLEAR SWITCH
         PUT   PRINT,STHEAD       WRITE HEADER
         PUT   PRINT,STHEADUN     WRITE HEADER
         LA    R4,OUTLINE         R4->OUTPUT LINE
         ST    R4,NSAVE4
         LA    R7,8
REPORT   BAL   R11,GETDEV         GET A DEVICE RECORD
         B     CHANREP            +0<=> END OF DEVICE ENTRIES
         TM    SWP,NSTRING        DATA PRESENT?
         BO    PUPD02
         SPACE
         BAL   R11,PROCESS        PROCESS DEVICE ENTRY
PUPD02   LA    R4,133(R4)         UPDATE OUTPUT ADDRESS
         NI    SWP,255-NSTRING    RESET SWITCH
         BCT   R7,REPORT          DO NEXT
         SPACE
         TM    SWP,NMSS           MSS STRING ?
         BNO   PNOTMSS            NO BRANCH
         NI    SWP,255-NMSS       RESET SWITCH
PIGNORE  L     R4,NSAVE4          RESTORE R4
         LA    R7,8
         SPACE
PBLKLOOP MVC   2(57,R4),BLANK     CLEAR LINE
         LA    R4,133(R4)         UPDATE POINTER
         BCT   R7,PBLKLOOP
         LA    R7,8               RESET R7
         L     R4,NSAVE4          RESTORE R4
         B     REPORT
         SPACE
PNOTMSS  L     R7,GDEVR6          R7->STRING TABLE
         CLC   4(4,R7),F0         ZERO BUSY TOTAL?
         BE    PIGNORE            YES RESET POINTERS
         TM    SWP,NOFFSET        1ST STRING ON PAGE
         BO    PRPRINT            YES BRANCH
         L     R7,GDEVR6          STRING POINTER
         L     R7,4(R7)           GET BUSY %
         ST    R7,STBUSY1         SAVE
         OI    SWP,NOFFSET
         LA    R4,OUTLINE+64      CORRECT POINTER
         ST    R4,NSAVE4
         LA    R7,8
         B     REPORT
PRPRINT  CP    PCNT,P4            4 SECTIONS?
         BL    PRPRIN             NO..BRANCH
         MVC   PCNT,P0            RESET
         PUT   PRINT,HEAD1        WRITE END LINE
         PUT   PRINT,STHEAD       WRITE HEADER
         PUT   PRINT,STHEADUN     WRITE HEADER
PRPRIN   PUT   PRINT,HEAD1        PUT INIT HEADER
         AP    PCNT,P1            UPDATE COUNT
         TM    SWP,NLAST          LAST TIME?
         BNO   PRPR01             NO BRANCH
         MVC   HEAD1+PRPADOFF(68),PRPAD
         MVC   HEAD2+PRPADOFF(68),PRPAD
         MVC   HEAD3+PRPADOFF(68),PRPAD
         L     R1,STBUSY1         GET COUNT
PRPR04   BAL   R11,CHAR           SET RETURN ADDRESS
         BCTR  R1,0               CORRECT POINTER
         MVC   HEAD2BS1,0(R1)    BRANCH TO CHAR ROUTINE
         B     PRPR02
PRPR01   L     R1,STBUSY1         GET BUSY %
         BAL   R11,CHAR           CONVERT
         BCTR  R1,0               CORRECT POINTER
         MVC   HEAD2BS1,0(R1)     SET IN OUTPUT
         L     R1,GDEVR6          R1->STRING
         L     R1,4(R1)           R1=BUSY
         BAL   R11,CHAR           CONVERT
         BCTR  R1,0               CORRECT POINTER
         MVC   HEAD2BS2,0(R1)     SET IN OUTPUT
PRPR02   PUT   PRINT,HEAD2        SET
         PUT   PRINT,HEAD1           HEADERS
         PUT   PRINT,HEAD3
         LA    R5,8               COUNTER
         LA    R4,OUTLINE
PRPRLOOP TM    SWP,NLAST
         BNO   PRPRPUT
         MVI   132(R4),C' '
PRPRPUT  PUT   PRINT,0(R4)        WRITE LINE
         MVC   0(133,R4),BLANK1   RESET LINE
         LA    R4,133(R4)         UPDATE POINTER
         BCT   R5,PRPRLOOP        DO NEXT
         TM    SWP,NLAST          END?
         BO    DASDEXIT           YES..EXIT
         LA    R7,8
         NI    SWP,255-(NOFFSET+NDATAPR)  RESET SWITCH
         LA    R4,OUTLINE         RESET OUTPUT POINTER
         ST    R4,NSAVE4
         B     REPORT             DO NEXT
         SPACE
CHANREP  TM    SWP,NOFFSET        ANY DATA TO PRINT?
         BNO   DASDEXIT           NO EXIT
         OI    SWP,NLAST          SHOW LAST
         B     PRPRINT
DASDEXIT PUT   PRINT,HEAD1        PUT LAST LINE
         EJECT
***********************************
* PRODUCE PHYSICAL CHANNEL REPORT *
***********************************
         SPACE
PCHANREP PUT   PRINT,CHHEAD1      PUT OUT
         PUT   PRINT,CHHEAD2              CHANNEL
         PUT   PRINT,STHEAD3                     HEADERS
         SPACE
         LA    R5,16              R5=LOOP COUNTER
         LA    R3,CHOUT+8         R3->OUTPUT AREA
         XC    SWP,SWP            CLEAR SWITCH
         MVI   CHOUT+3,C'0'       SET CPU0
         LA    R4,PCHANTAB        R4->CHANNEL TABLE
         SPACE
CHPRINTN LA    R1,EX              ASSUME NO DATA
         LA    R2,13(R4)          R2->NUMBER OF SAMPLES
         CLC   0(4,R2),F0         ANY?
         BE    UPXX               NO BRANCH
         LA    R1,5(R4)           R1->BUSY COUNT
         BAL   R11,PERCENT        GET % BUSY
         ST    R1,17(R4)          SAVE BUSY COUNT
         BAL   R11,CHAR           CONVERT TO CHAR
UPXX     MVC   0(5,R3),0(R1)      MOVE INTO OUTPUT LINE
         SPACE
         LA    R3,8(R3)           UPDATE OUTPUT ADDRESS
         LA    R4,ENTLEN(R4)      UPDATE TABLE ADDRESS
         BCT   R5,CHPRINTN        DO NEXT CHANNEL
         PUT   PRINT,CHOUT        PRINT DATA FOR CHANNEL
         SPACE
         TM    SWP,X'01'          CPU0
         BO    STRNGREP           NO...EXIT
         OI    SWP,X'01'         SET FOR CPU1
         MVI   CHOUT+3,C'1'       SET CPUID
         LA    R5,16              LOOP COUNTER
         LA    R3,CHOUT+8         OUTPUT ADDRESS
         B     CHPRINTN           DO NEXT
         EJECT
******************************************
* PRODUCE REPORT FOR HEAD OF STRING BUSY *
******************************************
         SPACE
STRNGREP PUT   PRINT,STHEAD1
         PUT   PRINT,STHEAD2
         PUT   PRINT,STHEAD3
         LA    R2,STRADDRS         R2->STRIN TABLE POINTERS
         LR    R3,R2               SO DOES R3
         XR    R4,R4               CLEAR R4
STLOOP01 CLC   0(1,R3),0(R2)       SAME LOGICAL CHANNEL
         BNE   STREND01            NO..EXIT
         L     R5,0(R3)            R5->STRING TABLE
         A     R4,4(R5)            UPDATE COUNT
         LA    R3,8(R3)            UPDATE STRING POINTER
         B     STLOOP01            DO NEXT
         SPACE
STREND01 LA    R6,LCHANTAB          R6->LOGICAL CHANNEL TABLE
         XR    R7,R7                CLEAR R7
         IC    R7,0(R2)             R7=LOGICAL CHANNEL
         MH    R7,=AL2(CTABLEN)     R7=OFFSET INTO TABLE
         AR    R7,R6                R7->ENTRY
         LR    R6,R7                SO DOES R6
         LA    R8,4                 R8=LOOP COUNTER
STLOOP02 CLC   0(4,R6),F0           END OF ENTRIES?
         BE    STREND02             YES..EXIT
         L     R1,0(R6)             R1->CHANNEL TABLE
         L     R1,17(R1)            R1=BUSY %
         A     R1,16(R7)            UPDATE TOTAL
         ST    R1,16(R7)            STORE BACK
         LA    R6,4(R6)             UPDATE POINTER
         BCT   R8,STLOOP02          DO NEXT
         SPACE
STREND02 ST    R4,STDEVBSY          SAVE DEV BUSY TOTAL
         LR    R5,R2                SAVE R2
         LA    R2,STDEVBSY          R2->TOTAL DEV
         LA    R1,16(R7)            R1->TOTAL CHAN
         BAL   R11,PERCENT          CONVERT TO %
         ST    R1,16(R7)            SAVE FACTOR
         LA    R4,16(R7)            R4->FACTOR
         SPACE
STLOOP03 L     R1,0(R5)             R1->STRING TABLE
         XR    R6,R6                CLEAR R6
         L     R7,4(R1)             R7=STRING BUSY
         M     R6,0(R4)             GET % BUSY * 10000
         D     R6,F10000            CORRECT TO % BUSY
         ST    R7,4(R5)             STORE IN STRING TABLE
         LA    R5,8(R5)             UPDATE
         CR    R5,R3                END OF LOGICAL CHANNEL?
         BL    STLOOP03             NO..DO NEXT
         LR    R2,R3                RESET POINTER
         XR    R4,R4                CLEAR COUNTER
         CLC   0(4,R2),F0           END OFF STRINGS
         BNE   STLOOP01             YES EXIT
         SPACE
********************************************
* STRADDRS TABLE HAS HEAD OF STRING BUSY % *
* AT OFFSET 4 AND LOGICAL CHANNEL NUM + 0  *
* PRODUCE REPORT..                         *
********************************************
         SPACE
         LA    R4,STOUT+8          R4->OUTPUT ADDRESS
         LA    R5,STRADDRS         R2->STRING TABLE
         NI    SWP,255-STDATAP     RESET SWITCH
         LR    R3,R5               SO DOES R3
STLOOP04 CLC   0(1,R3),0(R5)        SAME LOGICAL CHANNEL?
         BNE   STREND04            NO..EXIT
         L     R14,0(R3)           R13->STRING TABLE
         TM    0(R14),X'40'        MSS DEVICE?
         BO    STREND05            YES..IGNORE
         CLC   4(4,R14),F0         COUNT ZERO
         BE    STREND05
         L     R1,4(R3)
         BAL   R11,CHAR            CONVERT
         MVC   0(5,R4),0(R1)       SET IN OUTPUT
         OI    SWP,STDATAP         SHOW DATA
         LA    R4,8(R4)            DITTO
STREND05 LA    R3,8(R3)            UPDATE POINTER
         B     STLOOP04            DO NEXT
         SPACE
STREND04 TM    SWP,STDATAP         DATA TO PRINT?
         BNO   STREND06            NO BRANCH
         XR    R1,R1               CLEAR R1
         IC    R1,0(R5)            GET LOGICAL CHANNEL
         LA    R14,CHARTAB
         AR    R14,R1               R14->LOGICAL CHANNEL
         MVC   STOUT+3(1),0(R14)    SET IN OUTPUT
         PUT   PRINT,STOUT          WRITE OUT LINE
         SPACE
STREND06 LR    R5,R3                UPDATE POINTER
         NI    SWP,255-STDATAP      RESET SWITCH
         LA    R4,STOUT+8           DITTO
         MVC   STOUT,STDUMMY        RESET OUTLINE
         CLC   0(4,R3),F0           END OF TABLE?
         BNE   STLOOP04             NO..DO NEXT
         EJECT
*************************************
* PRODUCE REPORT OF LOGICAL CHANNEL *
* TO PHYSICAL CHANNEL..             *
*************************************
         SPACE
LCREP    PUT   PRINT,LCHEAD          PRINT
         PUT   PRINT,LCHEAD1               HEADERS
         PUT   PRINT,LCHEAD2
         LA    R2,LCHANTAB           R2->LOGICAL CHAN TABLE
         LR    R6,R2                 SO DOES R6
         LA    R3,16                 R3=LOOP COUNTER
         LA    R4,CHARTAB            R4->CONV TABLE
         LA    R8,4                  R8=LOOP COUNTER
         SPACE
LC001    CLC   0(4,R6),F0
         BE    LC002
         OI    CPU1SW,X'80'
         TM    0(R6),X'10'   CPU 1
         BNO   LC003
         L     R5,CPU1AD
         LA    R1,6(R5)
         ST    R1,CPU1AD
         NI    0(R6),X'0F'
         B     LC006
LC003    L     R5,CPU0AD
         LA    R1,6(R5)
         ST    R1,CPU0AD
LC006    XR    R1,R1
         IC    R1,0(R6)      R6=PC
         AR    R1,R4
         MVC   0(1,R5),0(R1) SET PC
         LA    R6,4(R6)
         BCT   R8,LC001
LC002    TM    CPU1SW,X'80'
         BNO   LC005
         LA    R1,16
         SR    R1,R3
         AR    R1,R4
         MVC   LCXOUT+3(1),0(R1)
         PUT   PRINT,LCXOUT
         MVC   LCXOUT,BLANK
         LA    R1,LCXOUT+14
         ST    R1,CPU0AD
         LA    R1,16(R1)
         ST    R1,CPU1AD
LC005    XC    CPU1SW,CPU1SW
         LA    R8,4
         LA    R2,CTABLEN(R2)
         LR    R6,R2
         BCT   R3,LC001
         SPACE 2
****************************************
* ALL REPORTS PRODUCED .. FREE STORAGE *
* AND RETURN...                        *
****************************************
         SPACE
         CLOSE PRINT               CLOSE OUTPUT FILE
         L     R1,WADDR            R1->GETMAIN AREA
         L     R0,WALNGTH          R0=LENGTH
         FREEMAIN R,LV=(0),A=(1)   FREE STORAGE
         RETU  RC=0                EXIT
         EJECT
*************************************
* S U B R O U T I N E S    U S E D  *
*************************************
         SPACE 2
*********************************************
* ROUTINE TO UPDATE LOGICAL CHANNEL SECTION *
*********************************************
         SPACE
UPD732   LA    R1,LCHANTAB          R1->LOGICAL CHAN TABLE
         LH    R3,0(R8)             R3=LOGICAL CHAN ID
         MH    R3,=AL2(CTABLEN)     GET OFFSET INTO TABLE
         AR    R1,R3                R1->ENTRY
         SPACE
         LH    R4,2(R8)             R4=MAP OF CHANNELS
         LA    R5,PCHANTAB          R5->PHYSICAL CHAN TABLE
         LA    R15,16               LOOP COUNTER
         XC    LSW,LSW              CLEAR SWITCH
         SPACE
LCHPCH   STC   R4,CWA               STORE MAP OF CHANNELS
         TM    CWA,X'01'            SEE IF SET
         BO    SETPCHAN             YES SET PHYSICAL CHANNEL
         SPACE
UPDATEL  SRL   R4,1                 RESET MASK
         BCT   R15,LCHPCH           TEST NEXT
         B     NXTID                GO SET FOR CPU1
         SPACE
SETPCHAN LR    R6,R15               R6=CHANNEL NUM + 1
         BCTR  R6,0                 CORRECT
         STC   R6,0(R1)             STORE CHANNEL NUMBER
         OC    0(1,R1),LSW          SET CPUID
         MH    R6,=AL2(ENTLEN)      GET OFFSET INTO CHANNEL TAB
         LA    R6,0(R6,R5)          R6->PHYSICAL CHANNEL ENTRY
         STCM  R6,7,1(R1)           STORE IN TABLE
         LA    R1,4(R1)             UPDATE TABLE POINTER
         B     UPDATEL              TEST NEXT
         SPACE
NXTID    TM    LSW,X'10'            CPU1 DONE?
         BOR   R11                  YES..EXIT
         SPACE
         OI    LSW,X'10'            SET FOR CPU1
         LA    R15,16               SET LOOP COUNTER
         LA    R5,PCHANTAB+CPUID    SET PHYSICAL CHANNEL ADDRESS
         LH    R4,4(R8)             GET CHANNEL MASK
         B     LCHPCH               GO PROCESS
         SPACE
**************************************
*  FORMAT OF LOGICAL CHANNEL TAB     *
*  16 ENTRIES...                     *
*  EACH ENTRY 4 FW'S..               *
*  0-3 BITS.. CPUID                  *
*  4-7 BITS.. CHANNEL ID             *
*  1-3 BYTES.. ADDRESS OF CHAN ENTRY *
**************************************
         SPACE
LSW      DS    CL1                  SWITCH
CWA      DS    CL1                  WORK AREA
LCHANTAB DC    16XL20'00'           LOGICAL CHANNEL TABLE
CTABLEN  EQU   (*-LCHANTAB)/16      LENGTH OF EACH ENTRY
         EJECT
**********************************************
* ROUTINE TO UPDATE PHYSICAL CHANNEL SECTION *
**********************************************
         SPACE
UPD731   TM    3(R8),X'0E'   VALID DATA?
*        BZ    ENTRYOK
*        BR    R11
ENTRYOK  XR    R1,R1               CLEAR R1 FOR WORK
         IC    R1,2(R8)            R1=CHANNEL NUMBER
         MH    R1,=AL2(ENTLEN)     R1=OFFSET
         LH    R15,0(R8) CPUID     R15=CPUID
         MH    R15,=AL2(CPUID)     CORRECT OFFSET
         AR    R1,R15              R1=OFFSET TO ENTRY
         LA    R15,PCHANTAB        R15->CHANNEL TABLE
         AR    R1,R15              R1->ENTRY
         SPACE
         MVC   0(1,R1),3(R8)       SET CHANNEL INDICATORS
         SPACE
         LA    R5,4(R8)            UPDATE R5->CHANNEL DATA
         LA    R1,1(R1)            R1->TABLE ADDRESS
         LA    R3,3                R3=LOOP COUNTER
         SPACE
CENT73   L     R4,0(R1)            GET OLD COUNT
         A     R4,0(R5)            UPDATE
         ST    R4,0(R1)            STORE BACK
         LA    R5,4(R5)            UPDATE ADDRESS
         LA    R1,4(R1)            DITTO
         BCT   R3,CENT73           DO NEXT
         L     R4,0(R1)            R4=SAMPLE COUNT
         A     R4,36(R2)           UPDATE
         ST    R4,0(R1)            STORE BACK
         BR    R11                 RETURN
         SPACE
********************************************************
* 32 CHANNEL ENTRIES CPU0 CHAN1-F                      *
*                    CPU1 CHAN1-F                      *
* ENTRY MAPPING...                                     *
*   CHANIND  DC   XL1     CHANNEL INDICATOR            *
*            EQU  X'20'   BLK MULTI                    *
*            EQU  X'10'   BYTE MULTI                   *
*            EQU  X'08'   PARTIAL RECORD               *
*            EQU  X'04'   INVALID CHAN ID              *
*            EQU  X'02'   CHAN VARIED DURING INT       *
*            EQU  X'01'   CHAN CURRENTLY ONLINE        *
*   CHANSIO  DC   CL4     # SUCC SIO INSTRUCTIONS      *
*   CHANBUM  DC   CL4     # CHAN IN BURST MODE         *
*   CHANWAI  DC   CL4     # CHAN BUSY..CPU WAIT        *
*   CHANSAP  DC   CL4     # SAMPLES TAKEN              *
*   CHANBUS  DC   CL4     % CHAN BUSY * 100            *
********************************************************
         SPACE
PCHANTAB DC    32XL21'00'
ENTLEN   EQU   (*-PCHANTAB)/32     LENGTH OF EACH ENTRY
CPUID    EQU   (*-PCHANTAB)/2      OFFSET TO CPU1 SECTION
         EJECT
*****************************************
* ROUTINE TO UPDATE DEVICE TABLE...     *
* INPUT:R8->DEVICE ENTRY SMF RECORD..   *
*       R1->DEVICE ENTRY TABLE..        *
*****************************************
         SPACE
UPDTAB   TM    3(R8),X'02'      DATA VALID?
         BOR   R11              NO RETURN
         TM    3(R8),X'01'      DATA VALID?
         BNOR  R11              NO RETURN
         L     R0,88(R1)        R0= #SAMPLES
         A     R0,36(R2)        UPDATE COUNT
         ST    R0,88(R1)        STORE BACK
         LA    R14,19           R14=NUM OF FIELDS
         LA    R15,12(R1)       R15->TABLE
         LA    R5,16(R8)        R5->DEV ENTRY
XENT     L     R0,0(R15)        R0=COUNT
         A     R0,0(R5)         UPDATE COUNT
         ST    R0,0(R15)        STORE BACK
         LA    R15,4(R15)       UPDATE
         LA    R5,4(R5)                POINTERS
         BCT   R14,XENT         DO NEXT
         BR    R11              RETURN
         EJECT
         EJECT
****************************************************
* CONVERT INTERVAL LENGTH FROM MMSSTTTF TO SECONDS.*
* INPUT R2->SMF RECORD..OUTPUT R1->SECONDS..       *
****************************************************
         SPACE
CONVINT  XR    R0,R0                CLEAR R0 FOR WORK
         IC    R0,28(R2)            MINS IN FORM 00MM
         SLL   R0,4                 MINS IN FORM 0MM0
         O     R0,=F'15'            MINS IN FORM 0MMF
         ST    R0,DW+4              STORE IN WORK AREA
         CVB   R0,DW                MINS IN BINARY
         MH    R0,H60               R0=#SECS
         ST    R0,SECS              SAVE
         XR    R0,R0                CLEAR AGAIN
         IC    R0,29(R2)            SECS IN FORM 00SS
         SLL   R0,4                 SECS IN FORM 0SS0
         O     R0,=F'15'            SECS IN FORM 0SSF
         ST    R0,DW+4              STOE IN WORK AREA
         CVB   R0,DW                R0=#SECS
         A     R0,SECS              R0=TOTAL SECS
         ST    R0,SECS              SAVE
         LA    R1,SECS              R1->SECONDS
         BR    R11                  RETURN
         SPACE
DW       DC    D'0'                 WORK AREA
H60      DC    H'60'                CONV TO DECS
SECS     DS    F                    RETURN AREA
         EJECT
***********************************************
* ROUTINE TO GET A SMF RECORD..               *
* UPDATES COUNTERS FOR TOTAL AND USED RECORDS *
* CHECKS FOR RECORDS IN TIME AND DATE RANGES  *
* RETURN R11 WITH R1->RECORD                  *
***********************************************
         SPACE
GETSMF   LA    R5,RECCNT73          R5 R6 POINT TO
         LA    R6,TOTCNT73                         COUNTER TABLES
         GET   SMFIN                GET SMF RECORD
         LA    R4,8                 ASSUME TYPE 74
         CLI   5(R1),X'4A'          TYPE 74 ?
         BE    UP74                 YES..PROCESS
         CLI   5(R1),X'49'          TYPE 73 ?
         BNE   GETSMF               NO..GET NEXT
         XR    R4,R4                SET TYPE 73
         B     UP73
UP74     TM    35(R1),X'20'         DASD RECORD?
         BNO   GETSMF               NO GET NEXT
UP73     AP    TOTCNT,ONE           UPDATE COUNT
         LA    R6,0(R4,R6)
         AP    0(8,R6),ONE
         LA    R2,DATETAB           DATE AND
         LA    R3,TIMETAB                    TIME TABLES
         SPACE
GETCK    CLC   0(4,R2),24(R1)       DATE TO HIGH?
         BH    GETN1                YES..TRY NEXT RANGE
         CLC   4(4,R2),24(R1)       DATE TO LOW?
         BL    GETN1                YES..TRY NEXT RANGE
GETCKT   CLC   0(4,R3),20(R1)       TIME TO HIGH?
         BH    GETN2                YES..TRY NEXT RANGE
         CLC   4(4,R3),20(R1)       TIME TO LOW?
         BL    GETN2                YES..TRY NEXT RANGE
         SPACE
         OI    SW,X'01'             SHOW RECORD FOUND
         MVC   SYSID,14(R1)         GET SYSTEM ID
         MVC   DASDSYID,SYSID       SET FOR HEADER
         LA    R5,0(R4,R5)          UPDATE FILTER'D COUNT
         AP    0(8,R5),ONE
         SRL   R4,1
         LA    R11,0(R4,R11)
         CLC   24(4,R1),LOWDATE
         BL    SETLOW
         BE    TESTTIML
TESTDH   CLC   24(4,R1),HIGHDATE
         BL    SMFEXIT
         BE    TESTTIMH
SETHIGH  MVC   HIGHDATE,24(R1)
         MVC   HIGHTIME,20(R1)
SMFEXIT  BR    R11                  RETURN
TESTTIML CLC   20(4,R1),LOWTIME
         BNL   TESTDH
SETLOW   MVC   LOWDATE,24(R1)
         MVC   LOWTIME,20(R1)
         B     SMFEXIT
TESTTIMH CLC   20(4,R1),HIGHTIME
         BL    SMFEXIT
         B     SETHIGH
         SPACE
GETN1    TM    8(R2),X'80'          LAST RANGE?
         BO    GETSMF               YES..GET NEXT SMF RECORD
         LA    R2,8(R2)             NO..UPDATE TO NEXT DATE RANGE
         B     GETCK                GO AND CHECK
GETN2    TM    8(R3),X'80'          LAST RANGE?
         BO    GETSMF               YES..GET NEXT SMF RECORD
         LA    R3,8(R3)             NO..UPDATE TO NEXT TIME RANGE
         B     GETCKT               GO AND CHECK
         SPACE
SW       DC    X'00'                RECORD FOUND SWITCH
TOTCNT   DC    PL8'0'               COUNTER FOR RECORDS READ
RECCNT73 DC    PL8'0'               TYPE73 USED
RECCNT74 DC    PL8'0'               TYPE74 USED
TOTCNT73 DC    PL8'0'               TYPE73 READ
TOTCNT74 DC    PL8'0'               TYPE74 READ
ONE      DC    PL1'1'               DECIMAL ONE
HIGHDATE DC    X'0000000F'
HIGHTIME DC    X'0000000F'
LOWDATE  DC    X'0099366F'
LOWTIME  DC    X'79999999'
         EJECT
************************************************
*  ROUTINE TO UPDATE TO NEXT DEVICE ENTRY.     *
*  ENTRY GETDEV...GET DEVICE ENTRY AND THEN ON *
*                 NEXT CALL GET NEXT ENTRY     *
*  ENTRY GETDEVI..GET 1ST DEVICE ENTRY..INIT   *
*  OUTPUT..R5->DEVICE ENTRY                    *
************************************************
         SPACE
GETDEVI  XC    GDEVSW,GDEVSW   RESET SWITCH
GETDEV   TM    GDEVSW,X'01'    INIT ENTRY?
         BO    GDEVUPDE        NO..BRANCH
         STM   R6,R8,GDEVSAVE  SAVE REGS
         LA    R8,CHTAB        INIT ENTRY..R8->CHANNEL TABLE
         OI    GDEVSW,X'01'    SET SWITCH
GDEVCHAN TM    0(R8),X'80'     HAS CHANNEL DATA?
         BNO   GDEVUPCH        NO..UPDATE TO NEXT
         L     R7,0(R8)        R7->UNIT TABLE
GDEVCU   TM    0(R7),X'80'     HAS UNIT DATA?
         BNO   GDEVUPCU        NO..UPDATE TO NEXT
         L     R6,0(R7)        R6->STRING TABLE
GDEVDEV  TM    0(R6),X'80'     HAS STRING DATA?
         BNO   GDEVDEVP        NO UPDATE
         L     R1,STRPOIN        LOAD NEXT STRING POINTER
         ST    R6,0(R1)          STORE ADDRESS
         ST    R1,GDEVSAV1
         LA    R1,8(R1)          UPDATE POINTER
         ST    R1,STRPOIN        STORE BACK
         L     R5,0(R6)        R5->DEVICE DATA
GDEVDEV1 TM    0(R5),X'80'     HAS DEVICE DATA
         BNO   GDEVXXXX        NO UPDATE
GDEVRET  STM   R5,R8,SAVE678   SAVE REGISTERS
         L     R5,0(R5)        R5->DEVICE ENTRY
         TM    SWP,NSTRING
         BO    GNOSTR
         L     R1,GDEVSAV1
         MVC   0(1,R1),11(R5)  SET LOGICAL CHANNEL
GNOSTR   LM    R6,R8,GDEVSAVE  RESTORE REGISTERS
         B     4(R11)          RETURN
GDEVXXXX OI    SWP,NSTRING
         B     GDEVRET
         SPACE 2
GDEVUPDE STM   R6,R8,GDEVSAVE  SAVE REGISTERS
         LM    R5,R8,SAVE678   RESTORE REGISTERS
GDEVDEVX LA    R5,4(R5)        UPDATE TO NEXT DEVICE
         TM    0(R5),X'01'     END?
         BNO   GDEVDEV1        NO..GO TEST
GDEVDEVP LA    R6,8(R6)        UPDATE TO NEXT STRING
         TM    0(R6),X'01'     END?
         BNO   GDEVDEV         NO..GO TEST
GDEVUPCU LA    R7,4(R7)        UPDATE TO NEXT UNIT
         TM    0(R7),X'01'     END?
         BNO   GDEVCU          NO..GO TEST
GDEVUPCH LA    R8,4(R8)        UPDATE TO NEXT CHANNEL
         TM    0(R8),X'01'     END?
         BNO   GDEVCHAN        NO..GO TEST
         XC    GDEVSW,GDEVSW   RESET SWITCH
         LM    R6,R8,GDEVSAVE  RESTORE REGISTERS
         B     0(R11)          END OF TABLE RETURN +0
SAVE678  DS    0F              SAVE AREA
GDEVR5   DS    F               CURRENT DEV     0-7
GDEVR6   DS    F               CURRENT STRING  0-7 OR 8-F
GDEVR7   DS    F               CURRENT CU      0-16
GDEVR8   DS    F               CURRENT CHANNEL 0-16
GDEVSAVE DS    3F              SAVE AREA
GDEVSAV1 DS    F
GDEVSW   DC    X'00'           SWITCH
         EJECT
******************************************
* ROUTINE TO FIND ADDRESS ENTRY TABLE... *
* INPUT:R8->DEVICE ADDRESS...            *
* OUTPUT:R1->TABLE ENTRY...              *
******************************************
         SPACE
FINDENT  STM   R3,R6,FNSAVE      SAVE REGISTERS
         LH    R3,0(R8)          R3=ADDR IN FORM HHHF × FIND IF POINTER
         LA    R4,CHTAB          R4->CHAN TABLE       × IN CHAN TAB IF
         LR    R5,R3             R5=ADDR IN FORM HHHF × NOT SET UP CU
         N     R5,=X'0000F000'   R5=CHANNEL           × TABLE.
         SRL   R5,10             R5=CHAN*4            × ON EXIT..
         LA    R5,0(R5,R4)       R5->ENTRY            × R5->POINTER TO
         TM    0(R5),X'80'       ENTRY FOUND?         × CU TABLE
         BO    CHNX              YES OK               ×
         L     R6,NEXTFREE       R6->NEXT FREE AREA   ×
         STCM  R6,7,1(R5)        SET ADDRESS          ×
         MVC   0(CUBLN,R6),CUTAB MOVE IN TABLE        ×
         OI    0(R5),X'80'       SET ENTRY FOUND      ×
         LA    R6,CUBLN(R6)      UPDATE FREE POINTER  ×
         ST    R6,NEXTFREE       STORE BACK           ×
         SPACE
CHNX     L     R4,0(R5)          POINTER TO NEXT TABLE× FIND IF POINTER
         LR    R5,R3             R5=ADDR IN FORM HHHF × IN CU TABLE TO
         N     R5,=X'00000F00'   R5=CU                × STRING TABLE IS
         SRL   R5,6              R5=CU*4              × SET UP.IF NOT
         LA    R5,0(R5,R4)       R5->NEXT ENTRY       × SET UP STRING
         TM    0(R5),X'80'       ENTRY FOUND?         × TABLE.
         BO    CUX               YES OK               × ON EXIT..
         L     R6,NEXTFREE       R6->NEXT FREE AREA   × R5->POINTER TO
         STCM  R6,7,1(R5)        SET ADDRESS          × STRING TABLE
         MVC   0(STLEN,R6),STTAB MOVE IN TABLE        ×
         OI    0(R5),X'80'       SHOW ENTRY FOUND     ×
         LA    R6,STLEN(R6)      UPDATE FREE POINTER  ×
         ST    R6,NEXTFREE       STORE BACK           ×
         SPACE
CUX      L     R4,0(R5)          POINTER TO NEXT TABLE
         XR    R5,R5             CLEAR R5
         TM    1(R8),X'80'       DEV 0-7 OR 8-F ?
         BNO   STR001            1ST BRANCH
         LA    R5,8(R5)          UPDATE OFFSET
STR001   LA    R5,0(R5,R4)       R5->STRING ADDRESS ENTRY
         TM    0(R5),X'80'       ENTRY THERE?
         BO    DEVXX             YES BRANCH
         L     R6,NEXTFREE       R6->NEXT FREE AREA
         STCM  R6,7,1(R5)        SET ADDRESS
         MVC   0(DVLEN,R6),DVTAB SET DEV TABLE
         OI    0(R5),X'80'       SHOW ENTRY FOUND
         LA    R6,DVLEN(R6)      UPDATE FREE POINTER
         ST    R6,NEXTFREE       STORE BACK
         SPACE
DEVXX    L     R4,0(R5)          R4->DEVICE TABLE
         TM    5(R8),X'08'       MSS DEVICE?
         BNO   DEVNOMSS          NO BRANCH
         OI    0(R5),X'40'       SHOW MSS STRING
DEVNOMSS LR    R5,R3             R5=ADDR IN FORM HHHF
         N     R5,=X'000000F0'   R5=DISK
         SRL   R5,2              R5=DISK*4
         TM    1(R8),X'80'       IN RANGE 0-7 OR 8-F
         BNO   DEV001            BRANCH IF IN RANGE 0-7
         SL    R5,=F'32'         CORRECT OFFSET
DEV001   LA    R5,0(R5,R4)       R5->NEXT ENTRY
         TM    0(R5),X'80'       ENTRY FOUND
         BO    DEVX              YES OK
         L     R6,NEXTFREE       R6->NEXT FREE AREA
         STCM  R6,7,1(R5)        SET ADDRESS
         MVC   0(DEVLN,R6),DEV   MOVE IN TABLE
         OI    0(R5),X'80'       SHOW ENTRY FOUND
         SPACE
         MVC   0(12,R6),4(R8)    SET VOLSER,LOG CHAN AND DEVTYPE
         MVC   92(2,R6),0(R8)    SET ADDRESS
         LA    R6,DEVLN(R6)      UPDATE FREE POINTER
         ST    R6,NEXTFREE       STORE BACK
         SPACE
DEVX     L     R1,0(R5)          R1->DEV ENTRY
         LM    R3,R6,FNSAVE      RESTORE REGS
         BR    R11               RETURN
         SPACE
FNSAVE   DS    4F                  SAVE AREA
CHTAB    DC    16F'0',X'01',AL3(0) CHANNEL TABLE POINTER
TAB      DC    16F'0',X'01',AL3(0) TABLES
TABLN    EQU   *-TAB               LENGTH OF POINTER TABLE
CUTAB    DC    16F'0',X'01',AL3(0) CU TABLE
CUBLN    EQU   *-CUTAB             LENGTH OF CU TABLE
STTAB    DC     4F'0',X'01',AL3(0) STRING TABLE
STLEN    EQU   *-STTAB             LENGTH OF STRING TABLE
DVTAB    DC     8F'0',X'01',AL3(0) DEV TABLE
DVLEN    EQU   *-STTAB             LENGTH OF DEV TABLE
DEV      DC    94X'00'             DEVICE ENTRY TABLE
DEVLN    EQU   *-DEV               LENGTH OF DEVICE TABLE
STRPOIN  DC    A(STRADDRS)         ADDRESS OF STRING POINTERS
STRADDRS DC    100F'0'             MAX 100 STRINGS
         EJECT
*****************************************************
*  CODE TO PROCESS DEVICE ENTRY...... R5->DEVICE ENT*
*****************************************************
*  FORMAT OF DEVICE ENTRY:                          *
* OFFSET  LENGTH   DESCRIPTION                      *
*  +0  0   4       DEVICE TYPE                      *
*  +4  4   6       VOLUME SERIAL NUMBER             *
*  +A  10  2       LOGICAL CHANNEL                  *
*  +C  12  4       # REQUEST ON DEVICE              *
*  +10 16  4       # DEVICE BUSY                    *
*  +14 20  4       # REQUESTS ENQUEUED DEVICE       *
*  +18 24  4       # MULT EXP DEVICE BUSY           *
*  +1C 28  4       # DEVICE NOT READY               *
*  +20 32  4       # DEVICE NOT ALLOCATED           *
*  +24 36  4       # C.U. BUSY                      *
*  +28 40  4       # REQUESTS Q'D DEV BUSY C.U. NOT *
*  +2C 44  4       # DATA SETS OPEN                 *
*  +30 48  4       # Q LENGTH 0                     *
*  +34 52  4       # Q LENGTH 1                     *
*  +38 56  4       # Q LENGTH 2                     *
*  +3C 60  4       # Q LENGTH 3                     *
*  +40 64  4       # Q LENGTH > OR = 4              *
*  +44 68  4       # DEVICE RESERVED                *
*  +48 72  4       # MOUNT PENDING                  *
*  +4C 76  4       # RESERVE BY ANOTHER PROCESSOR   *
*  +50 80  4       # QUEUED AND DEVICE BUSY         *
*  +54 84  4       # QUEUED AND PATH BUSY           *
*  +58 88  4       # SAMPLES                        *
*  +5C 92  2       DISK ADDRESS HHHF                *
*****************************************************
         EJECT
*************************************
* ROUTINE TO PROCESS A DEVICE ENTRY *
* INPUT R5->DEVICE RECORD           *
*       R4->OUTPUT AREA             *
* OUTPUT UPDATED OUTPUT AREA        *
*************************************
         USING DASDREC,R5
         USING DASDOUT,R4
PROCESS  ST    R11,RETADDR        SAVE RETURN ADDRESS
         STM   R2,R3,SAVE23       SAVE WORK REGS
         TM    DASDTYPE+1,X'08'   MSS DEVICE?
         BNO   PRNOTMSS           NO..BRANCH
         OI    SWP,NMSS           SHOW MSS DEV
         SPACE
PRNOTMSS OI    SWP,NDATAPR        SHOW DATA TO PRINT
         MVC   HIGH,=CL5' '       RESET HIGHLIGHT LINE
         MVC   VOLSER,DASDVOLS    SET VOLSER
         LA    R1,DASDADDR        R1->DEVICE ADDRESS
         BAL   R11,CUACONV        CONVERT TO EBCDIC
         MVC   UNIT,0(R1)         SET ADDRESS IN OUTPUT
         LA    R15,CHARTAB        R15->CONVERT TABLE
         AH    R15,DASDLCH        R15->EBCDIC LOGICAL CHANNEL NUM
         MVC   LCHAN,0(R15)       SET IN OUTPUT
         LA    R1,AST             ASSUME NO BUSY COUNT
         CLC   DASDBUSY,F0        ANY BUSY COUNT?
         BE    PBUS               NO..BRANCH
         L     R1,INTVAL74        R1=INTERVAL LENGTH
         MH    R1,=H'10'          INT*10
         L     R3,DASDBUSY        R3=BUSY COUNT
         XR    R2,R2              CLEAR R2
         MH    R3,H100            R3=BUSY*100
         D     R2,DASDSAMP        R3=% DEVICE BUSY
         XR    R2,R2              CLEAR R2
         MR    R2,R1              R3=%BUSY*INTL=TIME BUSY
         D     R2,DASDREQ         R3=TIME BUSY/#REQ=I/O SER TIME
         MH    R3,H100            CORRECT TO MILLI SECS
         LR    R1,R3              R1=SERVICE TIME
         CH    R1,H5000           GREATER THAN 50 MILLI SECS?
         BL    SERVNOH            NO..BRANCH
         MVC   HIGH,HIGHLITE      HIGHLITE DEVICE
SERVNOH  BAL   R11,CHAR           CONVERT TO EBCDIC
         BCTR  R1,0               CORRECT POINTER
PBUS     MVC   PIO,0(R1)          SET IN OUTPUT LINE
         LA    R1,DASDBUSY        R1=BUSY COUNT
         LA    R2,DASDNALL        R2=ALLOCATED COUNT
         BAL   R11,PERCENT        %BUSY WHILE ALLOCATED
         CH    R1,H1500           GREATER THAN 15%?
         BL    NOHIGH             NO..DONT HIGHLIGHT
         MVC   HIGH,HIGHLITE      HIGHLIGHT LINE
NOHIGH   BAL   R11,CHAR           CONVERT TO EBCDIC
         MVC   BUSY,0(R1)         SET IN OUTPUT LINE
         L     R1,DASDQ0          R1=QUEUE LEN 0 COUNT
         A     R1,DASDNALL        R1=QL+ALLOC COUNT
         S     R1,DASDSAMP        R1=COUNT QL 0 WHEN ALLOCATED
         BNM   STORE              +VE THEN BRANCH
         LA    R1,AST             SET AST IF NOT
         B     SETDQ              BRANCH AROUND
STORE    ST    R1,QLENW           STORE COUNT
         LA    R1,QLENW           R1->COUNT
         LA    R2,DASDNALL        R2->ALLOCATED COUNT
         BAL   R11,PERCENT        Q LENGTH WHEN ALLOCATED
         LTR   R1,R1              IS IT ZERO?
         BZ    P2                 YES..BRANCH AROUND
         L     R2,F10000          R2=10000
         SR    R2,R1              R2=% DEVICE QUEUED
         LR    R1,R2              SO DOES R1
         CH    R1,H500            GREATER THAN 5%
         BL    P2                 NO..DONT HIGHLIGHT
         MVC   HIGH,HIGHLITE      YES..HIGHLIGHT LINE
P2       BAL   R11,CHAR           CONVERT TO EBCDIC
SETDQ    MVC   DQUE,0(R1)         SET IN OUTPUT LINE
         LA    R1,DASDBUSY        R1=BUSY COUNT
         LA    R2,DASDSAMP        R2=SAMPLE COUNT
         BAL   R11,PERCENT        % DEVICE BUSY
         L     R11,GDEVR6         POINTER TO STRING
         L     R2,4(R11)          GET BUSY COUNT
         AR    R2,R1              UPDATE COUNT
         ST    R2,4(R11)          STORE BACK
         BAL   R11,CHAR           CONVERT TO EBCDIC
         MVC   ABUSY,0(R1)        SET IN OUTPUT LINE
         LA    R1,DASDREQ         # SIO
         LA    R2,INTVAL74        INTERVAL LENGTH
         BAL   R11,PERCENT
         XR    R0,R0
         D     R0,=F'100'
         BAL   R11,CHAR
         MVC   SIORATE,0(R1)      SET SIO RATE
RETPR    L     R11,RETADDR        RESTORE RETURN ADDRESS
         LM    R2,R3,SAVE23       RESTORE REGISTERS
         BR    R11                RETURN
         DROP  R5                 KILL ADDRESSABILITY
         DROP  R4                 KILL ADDRESSABILITY
RETADDR  DS    F                  SAVE AREA RETURN ADDRESS
SAVE23   DS    2F                 SAVE AREA REG2 REG3
HIGHLITE DC    C'<===='           HIGHLIGTH STRING
         EJECT
*************************
* ROUTINE TO CALC %*100 *
* INPUT: R1->X R2->Y    *
* OUTPUT: R1=X*10000/Y  *
*************************
         SPACE
PERCENT  XR    R0,R0               CLEAR R0
         CLC   0(4,R2),F0          IS DIVISOR ZERO
         BNE   PEROK               NO..BRANCH
         XR    R1,R1               SET R1=0
         BR    R11                 RETURN
PEROK    L     R1,0(R1)            R1=X
         M     R0,F10000           R1=X*10000
         D     R0,0(R2)            R1=X*10000/Y
         BR    R11                 RETURN
F10000   DC    F'10000'
         SPACE 3
**************************************
* ROUTINE TO CONVERT %*100 TO XX.XX% *
* INPUT: R1=%*100 HEX ..             *
* OUTPUT: R1-> XX.XX CHAR            *
**************************************
         SPACE
CHAR     CVD   R1,CDW              CONVERT TO DEC
         MVC   CAREA,PAT           SET PATTERN
         ED    CAREA,CDW+5         EDIT %
         LA    R1,CAREA+2          R1->AREA
         BR    R11                 RETURN
CDW      DS    D                   WORK AREA
PAT      DC    X'402020214B2020'   PATTERN
CAREA    DS    CL7                 RETURN AREA
         SPACE 3
********************************
* CONVERT CUA FROM HHHF TO HHH *
* INPUT R1->HHHF OUT R1->HHH   *
********************************
         SPACE
CUACONV  LH    R14,0(R1)           R14=0000CUAF
         N     R14,=X'0000F000'    R14=0000C000
         SRL   R14,12              R14=0000000C
         LA    R15,CHARTAB         CHAR TAB
         AR    R14,R15             OFFSET
         MVC   CUAOUT(1),0(R14)    SET CHAR
         LH    R14,0(R1)           R14=0000CUAF
         N     R14,=X'00000F00'    R14=00000U00
         SRL   R14,8               R14=0000000U
         AR    R14,R15             CHAR TAB
         MVC   CUAOUT+1(1),0(R14)  SET CHAR
         LH    R14,0(R1)           R14=0000CUAF
         N     R14,=X'000000F0'    R14=000000A0
         SRL   R14,4               R14=0000000A
         AR    R14,R15             CHAR TAB
         MVC   CUAOUT+2(1),0(R14)  SET CHAR
         LA    R1,CUAOUT           R1->CUA
         BR    R11                 RETURN
CUAOUT   DS    CL3                 OUTPUT AREA
CHARTAB  DC    C'0123456789ABCDEF' TRANSLATE TABLE
         EJECT
OUTPUT   MVC   OUTXX(80),0(R1)
         PUT   PRINT,OUTXX
         BR    R11
OUTXX    DC    CL133' '
***********************
*  CONSTANTS ETC USED *
***********************
         LTORG
         SPACE
WADDR    DS    F
WALNGTH  DC    X'00016000'
NEXTFREE DS    F
INTVAL73 DC    F'0'
INTVAL74 DC    F'0'
STDEVBSY DS    F                  SAVE FOR DEV TOTAL BUSY
STBUSY1  DS    F                  SAVE FOR 1ST STRING BUSY
PCNT     DC    PL1'0'
P0       DC    PL1'0'
P1       DC    PL1'1'
P4       DC    PL1'4'
F60      DC    F'60'
H100     DC    H'100'
H10000   DC    H'10000'
H5000    DC    H'5000'
H1500    DC    H'1500'     VARIOUS CONTANTS
H500     DC    H'500'
F0       DC    F'0'
TIMEA    DC    C'000000'
SWP      DC    X'00'       SWITCH FOR DEVICE REPORTS
NSTRING  EQU   X'01'       NEW STRING
NOFFSET  EQU   X'02'       RIGHT HALF OF PAGE
NDATAPR  EQU   X'04'       NO DATA TO PRINT
NLAST    EQU   X'08'       LAST STRING
NMSS     EQU   X'10'       MSS DEVICE
STDATAP  EQU   X'20'       DATA TO PRINT STRING
NSAVE4   DS    F
QLENW    DS    F
         DS    0D
DATETAB  DC    X'0000000F0099365F',16D'0'    DATE AND
TIMETAB  DC    X'0000000F0240000F',16D'0'             TIME TABLES
         SPACE
ERRMSG1  DC     CL40'0   PARAMETER INPUT SYNTAX ERROR'
ERRMSG2  DC     CL40'0   SYNTAX ERROR IN DATE PARAMETER'
ERRMSG3  DC     CL40'0   SYNTAX ERROR IN TIME PARAMETER'
ERRMSG4  DC     CL40'0   NO SMF RECORDS FOUND '
SAVEPARM MVC   PARAMSG+28(0),0(R1)  **** EXECUTE ONLY ****
PARAMSG  DC    CL81'1   PARAMETER INFORMATION:   NONE'
         SPACE
RCOUNT   DC    CL81'0  TOTAL RECORDS READ : '
RCOUNT73 DC    CL81'0  TOTAL TYPE 73 RECORDS READ : '
RCOUNT74 DC    CL81'0  TOTAL TYPE 74 RECORDS READ : '
ACOUNT73 DC    CL81'0  TOTAL TYPE 73 RECORDS USED : '
ACOUNT74 DC    CL81'0  TOTAL TYPE 74 RECORDS USED : '
SYSTEM   DC    CL81'0  SYSTEM IDENTIFIER : '
DATEINFE DC    CL81'0  LAST RECORD READ  : YYDDD HHMMSS'
DATEINFS DC    CL81'0  FIRST RECORD READ : YYDDD HHMMSS'
DATOFF   EQU   23
TIMOFF   EQU   29
SYSID    EQU   SYSTEM+23,4
OTOTREC  EQU   RCOUNT+24,14
TREC73   EQU   RCOUNT73+32,14
TREC74   EQU   RCOUNT74+32,14
AREC73   EQU   ACOUNT73+32,14
AREC74   EQU   ACOUNT74+32,14
RECPAT   DC    X'4020202020202020202020202020'
SHW      DS    H
WORK     DS    CL8
CPU1SW   DC    X'00'
LCXOUT   DC    CL133'  '
CPU0AD   DC    A(LCXOUT+14)
CPU1AD   DC    A(LCXOUT+30)
DESCOUT  DC    CL133' '
DESCR001 DC     CL80'-   DESCRIPTION OF FIELDS IN DASD STRING REPORTS '
DESCR002 DC     CL80'+   ____________________________________________ '
DESCR003 DC     CL80'0   FIELD___DESCRIPTION___________________________X
               ___THRESHOLD___'
DESCR004 DC     CL80'    TBSY%   DEVICE BUSY PERCENT WHILE ALLOCATED   X
                     15%     '
DESCR005 DC     CL80'    QUED%   PERCENT OF TIME DEVICE HAD A QUEUE    X
                      5%     '
DESCR006 DC     CL80'    ABSY%   DEVICE BUSY PERCENT OVER TOTAL INTERVAX
               L     15%     '
DESCR007 DC     CL80'     I/O    I/O SERVICE TIME IN MILLI SECONDS     X
                     50MS    '
DESCR008 DC     CL80'    SIOR    ACTIVITY RATE IN SIO/SECOND           X
                      7      '
DESCR009 DC     CL80'0   IF ANY THRESHOLD VALUES ARE EXCEEDED THEN THE X
               DEVICE IS MARKED WITH <===='
DESCRNU  EQU   (*-DESCR001)/80    NO OF LINES
BLANK    DC    CL133' '
LCHEAD   DC    CL133'-      LOGICAL CHANNEL TO PHYSICAL CHANNEL '
LCHEAD1  DC    CL133'0 LCH         CPU0/CHID       CPU1/CHID    '
LCHEAD2  DC    CL133'  ...         .........       .........    '
CHHEAD1  DC    CL133'1      CHANNEL BUSY REPORT '
CHHEAD2  DC CL133'0 CPU   CHAN0   CHAN1   CHAN2   CHAN3   CHAN4   CHAN5X
                  CHAN6   CHAN7   CHAN8   CHAN9   CHANA   CHANB   CHANCX
                  CHAND   CHANE   CHANF'
CHOUT    DC    CL133'0'
STHEAD1  DC    CL133'-      HEAD OF STRING BUSY REPORT '
STHEAD2  DC CL133'0 LCH   STRG0   STRG1   STRG2   STRG3   STRG4   STRG5X
                  STRG6   STRG7   STRG8   STRG9   STRGA   STRGB   STRGCX
                  STRGD   STRGE   STRGF'
STHEAD3  DC CL133'  ...   .....   .....   .....   .....   .....   .....X
                  .....   .....   .....   .....   .....   .....   .....X
                  .....   .....   .....'
STDUMMY  DC CL133'0 ...     X       X       X       X       X       X  X
                    X       X       X       X       X       X       X  X
                    X       X       X  '
STOUT    DC CL133'0 ...     X       X       X       X       X       X  X
                    X       X       X       X       X       X       X  X
                    X       X       X  '
EX       DC    C'  X  '
AST      DC    C'   .00'
INTINF73 DC    CL81'0  INTERVAL LENGTH TYPE 73 : '
INTOUT73 EQU   INTINF73+29,10
INTPAT   DC    X'402021204B20204B2020'
INTINF74 DC    CL81'0  INTERVAL LENGTH TYPE 74 : '
INTOUT74 EQU   INTINF74+29,10
         SPACE 3
HEAD1    DC    C' ×----------------------------------------------------X
               -----------+'
         DC      C'----------------------------------------------------X
               --------------×'
HEAD2    DC    C' ×    DEVICE TOTAL BUSY <===> XX.XX%                  X
                          ×'
         DC      C'    DEVICE TOTAL BUSY <===> XX.XX%                  X
                             ×'
PRPAD    DC    CL68'× '
PRPADOFF EQU   65
HEAD2BS1 EQU   HEAD2+30,6
HEAD2BS2 EQU   HEAD2+94,6
HEAD3    DC    C' ×ADR-VOLSER-LCH--TBSY%--QUED%--ABSY%----I/O---SIOR---X
               -----------+'
         DC      C'ADR-VOLSER-LCH--TBSY%--QUED%--ABSY%----I/O---SIOR---X
               --------------×'
OUTLINE  DC   8C' ×                                                    X
                          ×                                            X
                                     ×'
BLANK1   DC    C' ×                                                    X
                          ×                                            X
                                     ×'
STHEAD   DC    CL133'1          SYSTEM <===> XXXX                R E P X
               O R T   O N   D A S D   S T R I N G S'
DASDSYID EQU   STHEAD+24,4
STHEADUN DC    CL133'+          _________________                ______X
               _____________________________________ '
PRINT    DCB   DDNAME=REPORT,DSORG=PS,MACRF=(PM),RECFM=FBA,            X
               LRECL=133,BLKSIZE=1330
SMFIN    DCB   DDNAME=SMFIN,DSORG=PS,MACRF=(GL),EODAD=EOSMF
*              RECFM=VBS,BFTEK=A,LRECL=32767,BLKSIZE=19000
         LTORG
         EJECT
**********************************
*  DSECT TO MAP DASD RECORD ...  *
**********************************
         SPACE
DASDREC  DSECT
DASDTYPE DS    CL4           DEVICE TYPE
DASDVOLS DS    CL6           VOLUME SERIAL
DASDLCH  DS    CL2           LOGICAL CHANNEL
DASDREQ  DS    F             # REQESTS TO DEVICE
DASDBUSY DS    F             # DEVICE BUSY
DASDENQ  DS    F             # ENQUEUES ON DEVICE
DASDMULT DS    F             # MULT EXPOSURE DEV BUSY
DASDNRED DS    F             # DEVICE NOT READY
DASDNALL DS    F             # DEVIVE NOT ALLOCATED
DASDCUBU DS    F             # CONTROL UNIT BUSY
DASDRQCN DS    F             # REQ Q'D DEV BUSY C.U. NOT BUSY
DASDDSOP DS    F             # DATA SETS OPEN
DASDQ0   DS    F             # QUEUE LENGTH 0
DASDQ1   DS    F             # QUEUE LENGTH 1
DASDQ2   DS    F             # QUEUE LENGTH 2
DASDQ3   DS    F             # QUEUE LENGTH 3
DASDQ4   DS    F             # QUEUE LENGTH 4 OR MORE
DASDRESV DS    F             # DEVICE RESERVED
DASDMNTP DS    F             # MOUNT PENDING
DASDRESP DS    F             # RESERVED BY OTHER PROCESSOR
DASDQDB  DS    F             # QUEUED AND DEVICE BUSY
DASDQPB  DS    F             # QUEUED AND PATH BUSY
DASDSAMP DS    F             # SAMPLES TAKEN
DASDADDR DS    F             DEVICE ADDRESS HHHF
         SPACE 3
*************************
* OUTPUT RECORD MAPPING *
*************************
         SPACE
DASDOUT  DSECT
         DS  CL2
UNIT     DS  CL3             UNIT ADDR
         DS  CL1
VOLSER   DS  CL6             VOLSER
         DS  CL2
LCHAN    DS  CL1             LOGICAL CHANNEL
         DS  CL3
BUSY     DS  CL5             % BUSY
         DS  CL2
DQUE     DS  CL5             % QUEUED
         DS  CL2
ABUSY    DS  CL5             % AVERAGE BUSY
         DS  CL2
PIO      DS  CL6             I/O SERVICE TIME
         DS  CL2
SIORATE  DS  CL5             HIGHLIGHT
         DS  CL2
HIGH     DS  CL5
         DS  CL7
DASDOLEN EQU *-DASDOUT
         END
./       ENDUP
