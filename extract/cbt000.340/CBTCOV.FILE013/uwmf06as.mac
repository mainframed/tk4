         TITLE 'SA992700 PUNCH-CTL-DATASET-WRITER'
*              ZUR BEHANDLUNG DES PUNCH-WRITERS
*              1. START UND ENDE
*              S PUNCH
*              F 013,PAUSE=DATASET     P 013
*              DER BEFEHL C 013 IST UNWIRKSAM.
*              2. KOMMUNIKATION MIT DEM WRITER FUER DIE VORLAUFKARTE
*              NACHDEM SIE AUF DIE CHANGE-MELDUNG DES PUNCH R XX,
*              EINGEGEBEN HABEN,WERDEN DIE VORLAUFKARTEN GESTANZT.TRITT
*              DABEI EIN NICHT-KORRIGIERBARER FEHLER AUF,SO GEHT DER
*              PUNCH INS ENDE,OHNE DIE DATEI ZU LOESCHEN.
*              3. KOMMUNIKATION MIT DEM WRITER FUER DIE STANZDATEI
*              DIE KOMMUNIKATION MIT DEM PUNCH WIRD EINGELEITET:
*              A) BEI UNKORRIGIERBAREN AUSGABEFEHLERN
*              B) WENN SIE
*                                  1. STOP
*                                  2. DAUERFEHLER
*                                  3. START
*              DRUECKEN.
*              DANN ERHALTEN SIE DEN DRUCKINHALT DER LETZTEN 3 KARTEN
*              AUF DER KONSOLE UND DIE MOEGLICHKEIT, BEI EINER DER
*              LETZTEN 3 KARTEN WIEDERAUFZUSETZEN.
*              WEITERE ANTWORTEN:
*              C = CANCEL, DIE STANZDATEI WIRD GELOESCHT
*              W = RESTART, DIE STANZDATEI WIRD AM ANFANG WIEDER AUFGESE
*              NACH W ERHALTEN SIE DIE ZUSATZFRAGE,OB SIE
*              SAETZE UEBERSPRINGEN WOLLEN.WENN JA,GEBEN SIE
*              DIE 5STELLIGE ANZAHL EIN,WENN NEIN R XX,.
*              SYSOUT-KLASSEN
*              STANZAUSGABE
*              ES SOLLTE GRUNDSAETZLICH IM COBOL-PROGRAMM DAS FORMAT 'WR
*              AFTER' FUER STANZAUSGABEN BENUTZT WERDEN.
*              DIE SATZLAENGE IST DEMENTSPRECHEND 81 BYTES
*              (1 BYTE = ASA-STEUERZEICHEN)
*              A) NUR STANZEN - KEINE DRUCKAUSGABE
*              //DDNAME    DD  SYSOUT=(S,USEPCH,FORM),
*              //              DCB=(RECFM=FB,LRECL=80,...)
*              //  ODER DCB=(RECFM=FBA,LRECL=81,...)
*              B) STANZEN UND UEBERSETZEN
*              //DDNAME    DD  SYSOUT=S,
*                              DCB WIE OBEN
*              AUF DRUCKZEILE 1 WERDEN DIE ERSTEN 64 STANZSPALTEN,AUF
*              DRUCKZEILE 2 DIE LETZTEN 16 STANZSPALTEN RECHTSBUENDIG UE
*              WIRD EINE BESTIMMTE FORMNUMMER (Z.B.2502) BENOETIGT,KANN
*              //DDNAME DD SYSOUT=(S,,2502)...
*              ANGEFORDERT WERDEN.
*              C) INTERPRETIEREN
*              //DDNAME DD SYSOUT=(S,USEPCH,FORM),
*                          DCB WIE OBEN
*              AUS DEM EINGEBESATZ WIRD UNTER KONTROLLE EINER SCHABLONE
*              (=FORM) DIE STANZ-UND DRUCKAUSGABE AUFBEREITET.
*              (SIEHE ANLAGE 1).
*              D) STANZEN UND BESCHRIFTEN
*              //DDNAME DD SYSOUT=(S,USEPCH,FORM),
*              //          DCB=(RECFM=FB,LRECL=208,...)
*              //  ODER    DCB=(RECFM=FBA,LRECL=209,...)
*              IM EINGABESATZ WIRD IN DEN ERSTEN 80(81) STELLEN DIE
*              STANZAUSGABE,DAHINTER DIE DRUCKAUSGBE FUER ZEILE 1 (64
*              STELLEN),SCHLIESSLICH DIE DRUCKAUSGABE FUER ZEILE 2 (64
*              STELLEN) GESPEICHERT.AUS DEM 208- (209-) STELLIGEN
*              SATZ ENTSTEHT ALSO EINE AUSGABEKARTE, 'FORM' HAT IN DIESE
*              FALL DIESELBE FUNKTION WIE BEI PUNKT B.
*              ZUR FUNKTION 'INTERPRETIEREN'
*              PRINZIP
*              AUF VIER KARTEN BESCHREIBEN SIE:
*                  . DIE FELDEINTEILUNG DES SYSOUT-SATZES
*                  . DIE FELDER, DIE AUF DRUCKZEILE 1 ANGEDRUCKT WERDEN
*              . DIE FELDER, DIE AUF DRUCKZEILE 2 ANGEDRUCKT WERDEN SOLL
*              . DIE FELDER, DIE GESTANZT WERDEN SOLLEN.
*              ZUSAETZLICH KOENNEN SIE SOWOHL BEI DER STANZ-ALS AUCH
*              BEI DER DRUCKAUSGABE KONSTANTEN EINSTEUERN.
*              DIESE 4 KARTEN NENNEN WIR EINE AUSGABEBESCHREIBUNG.
*              SIE KOENNEN NUN ANGEBEN,DASS DIESE AUSGABEBESCHREIBUNG
*              FUER ALLE SYSOUT-SAETZE GILT ODER ABER AUCH NUR FUER EINE
*              BESTIMMTE KARTENART.
*              WENN SIE ALSO IN IHRER SYSOUT-DATEI 3 KARTENARTEN HABEN,
*              DIE SIE VERSCHIEDENARTIG STANZEN/DRUCKEN WOLLEN,MUESSEN
*              SIE 3 AUSGABEBESCHREIBUNGEN ERSTELLEN.
*              DIESE AUSGABEBESCHREIBUNGEN WERDEN ALS EIN MEMBER AUF
*              EINER UNTERGLIEDERTEN DATEI GESPEICHERT.DER MEBERNAME
*              IST IN DEN ERSTEN VIER STELLEN 'FORM',DAHINTER WIRD
*              LUECKENLOS DIE FORMNUMMER ANGEHAENGT.
*              BEISPIEL:   SYSOUT=(S,USEPCH,9601)
*                          MEMBERNAME= FORM9601.
*              DER USEPCH-WRITER HOLT SICH WIEDER DIE AUSGABEBESCHREI-
*              BUNGEN UND GIBT IHRE SYSOUT-DATEI ENTSPRECHEND AUS.
*              AUSGABEBESCHREIBUNG
*              1.KARTE:    SATZBESCHREIBUNG - BESCHREIBT DIE FELDER
*                          DES 80STELLIGEN SYSOUT-SATZES.JEDES FELD WIRD
*              DURCH EINE FOLGE GLEICHARTIGER ZEICHEN UNGLEICH
*              BLANK DARGESTELLT:
*                          BEISPIEL:   AAAA  BB  CC  +++
*                                      FELDA  FELDB  FELDC  FELD+
*                          NICHT VERWENDETE BEREICHE BLEIBEN LEER.
*              2. KARTE:   DRUCKZEILE 1 - BESCHREIBT DIE FELDER DER
*                          64STELLIGEN DRUCKZEILE 1.
*                          IN DEN ERSTEN 64 STELLEN WERDEN DIE ZU DRUCKE
*                          DEN FELDER DURCH DIE DER SATZBESCHREIBUNG ENT
*              SPRECHENDEN ZEICHENKETTEN DARGESTELLT.JEDE
*              GLEICHE ZEICHENKETTE WIRD DURCH DIE DATEN DES
*              SYSOUT-SATZES ERSETZT.
*              KARTENAUSWAHL
*              DIE GESAMTE AUSGABEBESCHREIBUNG KAN EINER BESTIMMTEN KA
*              ZUGEORDNET WERDEN,INDEM MAN AB SPALTE 66 ANGIBT:
*                                  KA=XXX,'YYYY...'
*              XXX:        ANFANGSSPALTE DER KA, 1-2 STELLEN
*              YYYY:       INHALT DER KA, 1-7 STELLEN
*              BEISPIEL:   KA=78,'281'
*              3. KARTE:   DRUCKZEILE 2 - BESCHREIBT DIE FELDER DER
*                          64STELLIGEN DRUCKZEILE 2.
*                          FUER DIE ERSTEN 64 STELLEN GILT DASSELBE WIE
*                          DRUCKZEILE 1. SPALTE 65 - 80 MUSS BLANK SEIN.
*                          WENN DIE 2. DRUCKZEILE NICHT BENUTZT WERDEN
*                          SOLL,SO MUSS DIE HIER BESCHRIEBENE 3. KARTE
*                          DER AUSGABEBESCHREIBUNG ALS LEERKARTE VORHAND
*              KONSTANTEN
*              ALLE ZEICHEN, DIE NICHT EINER ZEICHENKETTE DES SYSOUT-
*              SATZES ENTSPRECHEN,WERDEN UNVERAENDERT AUSGEGEBEN.
*              4. KARTE:   STANZAUSGABE - BESCHREIBT DIE FELDER DER 80ST
*                          LIGEN STANZAUSGABE.
*                          IN DIESER KARTE WERDEN ENTSPRECHEND DEM VERFA
*                          ZUR DRUCKAUSGABE DIE STANZINFORMATIONEN DARGE
*                          AUSNAHME: STEHT IN DER STANZAUSGABEKARTE IN
*                                    SPALTE 1-5 'PUNCH',SO WIRD DER
*                                    SYSOUT-SATZ IDENTISCH GESTANZT.
*              BEMERKUNGSKARTEN
*              JEDE KARTE MIT '*' IN SPALTE 1 WIRD ALS BEMERKUNGSKARTE
*              IGNORIERT.
*              BEISPIEL:
*              * KA 201  INVENTURKARTEN A
*              AAAAAABBB  CCC                  TTT
*                ARTIKELNUMMER: AAAA          KA=78,'201'
*              ANZAHL: BBB  PREIS: CCC
*              AAAAAABBB  CCCC                 TTT
*              *  KA202 INVENTURKARTEN B
*                 AAAA BBBCCCCCCC              TTT
*              AAAA STUECK KARTENART TTT
*                CCCCCCC  BBB
*                 AAAA  BBBCCCCCCC             TTT
*              VORZEICHEN UND VORZEICHENSTELLEN
*              VORZEICHENSTELLEN WERDEN IN DER SATZBESCHREIBUNG ALS ZIFF
*              DARGESTELLT:
*                          BEISPIEL: AAAAAA9
*              ES HANDELT SICH ALSO DABEI UM EIN EINSTELLIGES FELD.
*              BEI UEBERTRAGUNGEN DIESES FELDES WIRD DIE ZONE GELOESCHT.
*              VORZEICHEN
*              DIE ZEICHEN '>' UND '<' WERDEN IN DER DRUCK-UND
*              STANZAUSGABE DURCH EIN VORZEICHEN ERSETZT.
*              DABEI GOLT:
*                  '>' WIRD ERSETZT DURCH DAS VORZEICHEN DER
*                      NAECHSTEN VORZEICHENSTELLE.
*                  '<' WIRD ERSETZT DURCH DAS VORZEICHEN DER
*                      LETZTEN VORZEICHENSTELLE.
*                      BEISPIEL: >AAAAAA9<
*              FUEHRENDE NULLEN
*              LOESCHEN FUEHRENDER NULLEN WIRD ERREICHT,INDEM MAN UNMITT
*              BAR VOR DIE ZEICHENKETTE EIN '*'-ZEICHEN STELLT.
*              DANN WERDEN FUEHRENDE NULLEN MIT AUSNAHME DER LETZTEN STE
*              DURCH BLANK ERSETZT.
*              DAS '*'-ZEICHEN WIRD GLEICHFALLS DURCH BLANK ERSETZT.
*              BEISPIEL: $AAAAA
*              DIE ZEICHENKETTE DARF JEDOCH NICHT AUS ZIFFERN BESTEHEN,D
*              SONST DIE ZONE GELOESCHT UND DIE NULLENUNTERDRUECKUNG DAD
*              WIEDER AUFGEBAUT WIRD.
*              ANWENDUNG
*              DIE AUSGABEBESCHREIBUNG MUSS ALS MEMBER AUF DIE DATEI
*              WMF1.PUNCHCTL AUFGENOMMEN WERDEN.
*              ./ADD LIST=ALL, NAME=FORMXXXX
*              DAHINTER ALLE AUSGABEBESCHREIBUNGEN DES MEMBERS.
*              IN EINEM MEMBER SOLLEN SICH NUR AUSGABEBESCHREIBUNGEN MIT
*              DER KA AN DERSELBEN STELLE BEFINDEN.
USEPCH   CSECT
SA992700 CSECT
         INIT  2,REGS
         ST    R1,ADRPARM
         MVC   ADRODCB,4(R1)
         MVC   ADRIDCB,8(R1)
         L     R10,16(,R1)
         MVC   FORM,8(R10)
         MVC   ADRMTIOT,108(R1)
         L     R10,ADRODCB
         L     R10,44(,R10)
         L     R10,0(,R10)
         ST    R10,ADRMTCB
         L     R10,136(,R10)
         ST    R10,ADRSTCB
         MVC   ADRODEB,8(R10)
         MVC   ADRSTIOT,12(R10)
         L     R9,ADRMTIOT
         MVC   MYTIOT(256),0(R9)
         LA    R9,MYTIOT
         LA    R9,MYTIOT+24
         MVI   CTL,C'0'
SEEKEND  EQU   *
         XR    R8,R8
         IC    R8,0(,R9)
         LTR   R8,R8
         BZ    ENDTIOT
         CLC   4(8,R9),=CL8'IEFTRNS'
         BNE   *+8
         MVI   CTL,C'1'
         AR    R9,R8
         B     SEEKEND
ENDTIOT  EQU   *
         CLI   CTL,C'1'
         BNE   RETURN
         L     R8,ADRSTIOT
         LA    R8,24(,R8)
         XR    R7,R7
         IC    R7,0(,R8)
         AR    R8,R7
         MVC   0(32,R9),0(R8)
         L     R10,ADRSTCB
         XC    8(4,R10),8(R10)
         MVC   12(4,R10),=A(MYTIOT)
         L     R10,ADRIDCB
         OPEN  ((R10))
         RDJFCB (IEFRDER,OUTPUT,IEFTRNS,OUTPUT)
         OI    JFCB1+52,X'08'
         OI    JFCB2+52,X'08'
         MVI   JFCB1+68,X'30'
         MVI   JFCB2+68,X'36'
         OPEN  (IEFRDER,OUTPUT,IEFTRNS,OUTPUT),TYPE=J
         RDJFCB (IEFPDSI)
         MVC   JFCB+48(4),FORM
         OI    JFCB+86,X'01'
         OPEN  (IEFPDSI),TYPE=J
         XR    R0,R0
         LA    R1,PARMAREA
         LINK  EP=SA992640
         L     R10,ADRIDCB
         CLOSE ((R10))
         FREEPOOL (R10)
         CLOSE (IEFRDER,,IEFTRNS,)
         CLOSE (IEFPDSI)
         FREEPOOL IEFRDER
         FREEPOOL IEFTRNS
         FREEPOOL IEFPDSI
         L     R10,ADRSTCB
         MVC   8(4,R10),ADRODEB
         MVC   12(4,R10),ADRSTIOT
RETURN   EQU   *
         L     R13,4(,R13)
         RETURN (14,12),RC=0
PARMAREA DS    0D
ADRIDCB  DC    A(0)
ADRPDCB  DC    A(IEFRDER)
ADRTDCB  DC    A(IEFTRNS)
ADRMEM   DC    A(JFCB+44)
ADRFDCB  DC    A(IEFPDSI)
ADRPARM  DC    A(0)
ADRODCB  DC    A(0)
FORM     DC    CL4' '
ADRMTCB  DC    A(0)
ADRSTCB  DC    A(0)
ADRMTIOT DC    A(0)
ADRSTIOT DC    A(0)
ADRODEB  DC    A(0)
         DS    0F
EXLIST   DC    X'87'
         DC    AL3(JFCB)
EXLST1   DC    X'87',AL3(JFCB1)
EXLST2   DC    X'87',AL3(JFCB2)
JFCB     DC    CL256' '
JFCB1    DC    CL256' '
JFCB2    DC    CL256' '
CTL      DS    C
IEFRDER  DCB   DDNAME=IEFRDER,DSORG=PS,MACRF=PM,FUNC=PW,BUFNO=1,       *
               EXLST=EXLST1
IEFTRNS  DCB   DDNAME=IEFTRNS,DSORG=PS,MACRF=PM,FUNC=PWXT,BUFNO=1,     *
               EXLST=EXLST2
IEFPDSI  DCB   DDNAME=IEFPDSI,DSORG=PS,MACRF=GL,EXLST=EXLIST
         DS 0D
MYTIOT   DS    CL320
         LTORG
         END
SA992640 CSECT
         SAVE  (14,12),,*
         LR    R6,R13
         LR    R3,R0
         LR    R4,R1
         LR    R12,R15
         USING SA992640,R12
         GETMAIN R,LV=1120
         LR    R13,R1
         USING AREA,R13
         MVI   KZ,X'00'
         ST    R6,SAVE+4
         ST    R13,8(,R6)
A00      EQU   *
         XC    CTLCHAIN,CTLCHAIN
         L     R7,16(,R4)
         LTR   R7,R7
         BZ    B00
         XC    33(3,R7),33(R7)
         XC    37(3,R7),37(R7)
         OC    32(4,R7),=A(A30)
         TM    X'30'(R7),X'10'
         BZ    F10
         LA    R6,CTLCHAIN
A10      EQU   *
         LA    R8,4
         GETMAIN R,LV=328
         ST    R1,0(,R6)
         LR    R6,R1
         XC    0(4,R6),0(R6)
         LA    R9,4(,R6)
A20      EQU   *
         GET   0(,R7)
         CLI   0(R1),C'*'
         BE    A20
         MVC   0(80,R9),0(R1)
         LA    R9,80(,R9)
         BCT   R8,A20
         B     A10
A30      EQU   *
         CH    R8,=H'4'
         BNE   F00
B00      EQU   *
         LM    R6,R9,0(R4)
         TM    X'30'(R7),X'10'
         BZ    F40
         TM    X'30'(R8),X'10'
         BZ    F40
         XC    33(3,R6),33(R6)
         OC    32(4,R6),=A(E00)
         XC    57(3,R7),57(R7)
         OC    56(4,R7),=A(D80)
         XC    57(3,R8),57(R8)
         OC    56(4,R8),=A(D80)
B10      EQU   *
         LM    R6,R9,0(R4)
         GET   0(,R6)
         CLC   82(2,R6),=H'208'
         BL    B30
         TM    36(R6),X'06'
         BZ    B20
         MVC   ABER,0(R1)
         TM    36(R6),X'04'
         BZ    D00
         MVI   ABERMCC,X'01'
         CLI   0(R1),C'V'
         BE    D00
         MVI   ABERMCC,X'41'
         B     D00
B20      EQU   *
         MVC   ABER+1(208),0(R1)
         MVI   ABERMCC,X'01'
         B     D00
B30      EQU   *
         LTR   R9,R9
         BZ    F50
         MVI   ABERMCC,X'01'
         TM    36(R6),X'06'
         BZ    B40
         MVC   ABERMCC,0(R1)
         LA    R1,1(,R1)
         TM    36(R6),X'04'
         BZ    B40
         CLI   ABERMCC,C'V'
         MVI   ABERMCC,X'01'
         BE    B40
         MVI   ABERMCC,X'41'
B40      EQU   *
         L     R2,CTLCHAIN
         LTR   R2,R2
         BZ    F50
B50      EQU   *
         CLC   0(4,R2),=F'0'
         BE    F20
         CLC   4+80+65(3,R2),=CL3' '
         BE    C00
         CLC   4+80+65(3,R2),=CL3'KA='
         BNE   F30
         LA    R10,4+80+65+3(R2)
         LA    R11,0
B60      EQU   *
         CLI   0(R10),C','
         BE    B70
         TM    0(R10),X'F0'
         BNO   F30
         LA    R11,1(,R11)
         LA    R10,1(,R10)
         B     B60
B70      EQU   *
         LTR   R11,R11
         BZ    F30
         BCTR  R11,0
         EX    R11,*+8
         B     *+10
         PACK  DW,4+80+65+3(0,R2)
         SP    DW,=P'1'
         CVB   R11,DW
         AR    R11,R1
         LA    R10,1(,R10)
         CLI   0(R10),C''''
         BNE   F30
         LA    R10,1(,R10)
B80      EQU   *
         CLI   0(R10),C''''
         BE    C00
         CLC   0(1,R10),0(R11)
         BE    B90
         L     R2,0(,R2)
         B     B50
B90      EQU   *
         LA    R10,1(,R10)
         LA    R11,1(,R11)
         B     B80
C00      EQU   *
         MVI   SIGN,C' '
         LA    R15,DSIGN
         ST    R15,ADSIGN
         MVI   CTL,X'00'
         MVC   ABER1,4+240(R2)
         MVC   ABER2,4+80(R2)
         MVC   ABER3,4+160(R2)
         LA    R5,ABER1
         LA    R6,208
         CLC   ABER1(5),=C'PUNCH'
         BNE   C10
         MVC   ABER1,0(R1)
         LA    R5,80(,R5)
         SH    R6,=H'80'
C10      EQU   *
         CLI   0(R5),C' '
         BNE   C20
         LA    R5,1(,R5)
         BCT   R6,C10
         B     D00
C20      EQU   *
         LR    R7,R5
         LA    R8,0
C30      EQU   *
         CLC   0(1,R5),0(R7)
         BNE   C40
         LA    R5,1(,R5)
         LA    R8,1(,R8)
         BCT   R6,C30
C40      EQU   *
         CH    R8,=H'1'
         BNE   C43
         CLI   0(R7),C'<'
         BNE   C41
         MVC   0(1,R7),SIGN
         B     C55
C41      EQU   *
         CLI   0(R7),C'>'
         BNE   C42
         ST    R7,ADSIGN
         B     C55
C42      EQU   *
         CLI   0(R7),C'$'
         BNE   C43
         MVI   0(R7),C' '
         OI    CTL,X'80'
         B     C55
C43      EQU   *
         NI    CTL,X'BF'
         TM    0(R7),X'F0'
         BNO   C44
         OI    CTL,X'40'
C44      EQU   *
         LA    R9,4(,R2)
         LA    R10,80
         LA    R11,0(,R1)
         BCTR  R8,0
C50      EQU   *
         EX    R8,*+8
         B     *+10
         CLC   0(0,R7),0(R9)
         BE    C60
         LA    R9,1(,R9)
         LA    R11,1(,R11)
         BCT   R10,C50
C55      EQU   *
         LTR   R6,R6
         BZ    D00
         B     C10
C60      EQU   *
         LA    R9,1(R8,R9)
         SR    R10,R8
         BCTR  R10,0
         LTR   R10,R10
         BM    C55
         BZ    C80
         CLC   0(1,R7),0(R9)
         BNE   C80
         LA    R11,1(R8,R11)
C70      EQU   *
         CLC   0(1,R9),0(R7)
         BNE   C55
         LA    R9,1(,R9)
         LA    R11,1(,R11)
         BCT   R10,C70
         B     C55
C80      EQU   *
         EX    R8,*+8
         B     *+10
         MVC   0(0,R7),0(R11)
         TM    CTL,X'80'
         BZ    C82
         LTR   R8,R8
         BZ    C82
         LR    R9,R7
         LR    R10,R8
C81      EQU   *
         CLI   0(R9),C'0'
         BNE   C82
         MVI   0(R9),C' '
         LA    R9,1(,R9)
         BCT   R8,C81
C82      EQU   *
         TM    CTL,X'40'
         BZ    C84
         LR    R9,R5
         BCTR  R9,0
         MVI   SIGN,C' '
         TM    0(R9),X'F0'
         BO    C83
         MVI   SIGN,C'+'
         TM    0(R9),X'10'
         BZ    C83
         MVI   SIGN,C'-'
C83      EQU   *
         L     R9,ADSIGN
         MVC   0(1,R9),SIGN
         EX    R8,*+8
         B     *+10
         OC    0(0,R7),=80C'0'
C84      EQU   *
         MVI   CTL,X'00'
         LA    R9,DSIGN
         ST    R9,ADSIGN
         B     C55
D00      EQU   *
         LA    R11,0
         LM    R6,R9,0(R4)
         LTR   R3,R3
         BNZ   D10
         PUT   0(,R7),ABERMCC
         LTR   R11,R11
         BNZ   D90
D10      EQU   *
         PUT   0(,R8),ABER2
         LTR   R11,R11
         BNZ   D90
         PUT   0(,R8),ABER3
         LTR   R11,R11
         BNZ   D90
         MVC   ABERB,ABERA
         MVC   ABERA,ABER
         B     B10
D80      EQU   *
         LA    R11,4
         CLOSE ((R7),,(R8),)
         FREEPOOL (R7)
         FREEPOOL (R8)
         RDJFCB ((R7),OUTPUT,(R8),OUTPUT)
         L     R11,36(,R7)
         L     R11,0(,R11)
         OI    52(R11),X'08'
         MVI   68(R11),X'30'
         L     R11,36(,R8)
         L     R11,0(,R11)
         OI    52(R11),X'08'
         MVI   68(R11),X'36'
         LA    R11,0
         OPEN  ((R7),OUTPUT,(R8),OUTPUT),TYPE=J
D90      EQU   *
         NI    KZ,X'7F'
D100     EQU   *
         WTO   MF=(E,SYNWTO1)
         WTO   MF=(E,SYNWTO2)
         MVC   WTOBER,SYNWTO5
         MVC   WTOBER+4(64),ABERB+81
         WTO   MF=(E,WTOBER)
         MVC   WTOBER+4(64),ABERB+81+64
         WTO   MF=(E,WTOBER)
         WTO   MF=(E,SYNWTO3)
         MVC   WTOBER+4(64),ABERA+81
         WTO   MF=(E,WTOBER)
         MVC   WTOBER+4(64),ABERA+81+64
         WTO   MF=(E,WTOBER)
         WTO   MF=(E,SYNWTO4)
         MVC   WTOBER+4(64),ABER+81
         WTO   MF=(E,WTOBER)
         MVC   WTOBER+4(64),ABER+81+64
         WTO   MF=(E,WTOBER)
         WTO   MF=(E,SYNWTO6)
         WTO   MF=(E,SYNWTO7)
         WTO   MF=(E,SYNWTO8)
         MVC   WTOBER,SYNWTOR
D110     EQU   *
         XC    WTOECB,WTOECB
         MVI   ANSWER,C' '
         WTOR  ,ANSWER,1,WTOECB,MF=(E,WTOBER)
         WAIT  ECB=WTOECB
         CLI   ANSWER,C' '
         BE    D100
         CLI   ANSWER,C'2'
         BE    D120
         CLI   ANSWER,C'1'
         BE    D130
         CLI   ANSWER,C'0'
         BE    D00
         CLI   ANSWER,C'C'
         BE    E00
         CLI   ANSWER,C'I'
         BE    B10
         CLI   ANSWER,C'W'
         BNE   D110
D113     EQU   *
         LM    R6,R9,0(R4)
         CLOSE ((R6))
         OPEN  ((R6))
         WTO   MF=(E,SYNWTO9)
         MVC   WTOBER,SYNWTOR
D115     EQU   *
         XC    WTOECB,WTOECB
         MVC   NUMBER,=C'00000'
         WTOR  ,NUMBER,5,WTOECB,MF=(E,WTOBER)
         WAIT  ECB=WTOECB
         MVC   TNUMBER,=C'00000'
         MVN   TNUMBER,NUMBER
         CLC   TNUMBER,NUMBER
         BNE   D115
         CLC   NUMBER,=C'00000'
         BE    B00
         PACK  NUMBER,NUMBER
         XC    33(3,R6),33(R6)
         OC    32(4,R6),=A(D118)
D117     EQU   *
         GET   0(,R6)
         SP    NUMBER,=P'1'
         BZ    B00
         B     D117
D118     EQU   *
         WTO   MF=(E,SYNWTO10)
         B     D113
D120     EQU   *
         PUT   0(R7),ABERB
         TM    KZ,X'80'
         BO    D90
         PUT   0(,R8),ABERB+81
         TM    KZ,X'80'
         BO    D90
         PUT   0(,R8),ABERB+81+64
         TM    KZ,X'80'
         BO    D90
D130     EQU   *
         PUT   0(,R7),ABERA
         TM    KZ,X'80'
         BO    D90
         PUT   0(,R8),ABERA+81
         TM    KZ,X'80'
         BO    D90
         PUT   0(,R8),ABERA+81+64
         TM    KZ,X'80'
         BO    D90
         B     D00
E00      EQU   *
         LTR   R3,R3
         BNZ   E15
         LA    R10,3
E10      EQU   *
         MVI   ABERMCC,X'01'
         MVI   ABER1,C' '
         MVC   ABER1+1(79),ABER1
         PUT   0(,R7),ABERMCC
         TM    KZ,X'80'
         BO    D90
         BCT   R10,E10
E15      EQU   *
         L     R10,CTLCHAIN
E20      EQU   *
         LTR   R10,R10
         BZ    E30
         LR    R1,R10
         L     R9,0(,R10)
         FREEMAIN R,LV=328,A=(1)
         LR    R10,R9
         B     E20
E30      EQU   *
         LR    R1,R13
         L     R13,4(,R13)
         FREEMAIN R,LV=1120,A=(1)
         RETURN (14,12),RC=0
F00      EQU   *
         WTO   MF=(E,ERRWTO1)
         B     F100
F10      EQU   *
         WTO   MF=(E,ERRWTO2)
         B     F100
F20      EQU   *
         WTO   MF=(E,ERRWTO3)
         B     F100
F30      EQU   *
         WTO   MF=(E,ERRWTO4)
         B     F100
F40      EQU   *
         WTO   MF=(E,ERRWTO6)
         B     F100
F50      EQU   *
         WTO   MF=(E,ERRWTO5)
         B     F100
F100     EQU   *
         L     R10,CTLCHAIN
F110     EQU   *
         LTR   R10,R10
         BZ    F120
         LR    R1,R10
         L     R9,0(,R10)
         FREEMAIN R,LV=328,A=(1)
         LR    R10,R9
         B     F110
F120     EQU   *
         LR    R1,R13
         L     R13,4(,R13)
         FREEMAIN R,LV=1120,A=(1)
         RETURN (14,12),RC=4
SYNWTO1  WTO   'PUNCH - STANZ/DRUCKFEHLER <<<<<<',MF=L
SYNWTO2  WTO   'INHALT DER VORLETZTEN KARTE  NR. 2 WAR :',MF=L
SYNWTO3  WTO   'INHALT DER LETZTEN    KARTE  NR. 1 WAR :',MF=L
SYNWTO4  WTO   'INHALT DER FEHLER --- KARTE  NR. 0 WAR :',MF=L
SYNWTO5  WTO   'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX*
               XXXXXXXXX',MF=L
SYNWTO6  WTO   'ENTER  2,1 ODER 0  FUER NAECHSTE STANZKARTE',MF=L
SYNWTO7  WTO   'ENTER BLANK FUER WIEDERHOLUNG DER INHALTE',MF=L
SYNWTO8  WTO   'ENTER C FUER CANCEL, W FUER RESTART STANZDATEI',MF=L
SYNWTO9  WTO   'ENTER XXXXX FUER SKIP-KARTEN ODER EOB FUER ANFANG',MF=L
SYNWTO10 WTO   'FEHLER - DATEIENDE BEI SKIP - NEUER VERSUCH',MF=L
SYNWTOR  WTOR  'PUNCH - AWAITING REPLY',MF=L
ERRWTO1  WTO   'PUNCH - AUSGABEBESCHREIBUNG KARTENANZAHL FALSCH',MF=L
ERRWTO2  WTO   'PUNCH - AUSGABEBESCHREIBUNG FEHLT',MF=L
ERRWTO3  WTO   'PUNCH - AUSGABEBESCHREIBUNG KA NICHT GEFUNDEN,',MF=L
ERRWTO4  WTO   'PUNCH - AUSGABEBESCHREIBUNG INHALT FALSCH',MF=L
ERRWTO5  WTO   'PUNCH - AUSGABEBESCHREIBUNG ',MF=L
ERRWTO6  WTO   'PUNCH - AUSGABEDATEI NICHT OFFEN',MF=L
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
AREA     DSECT
SAVE     DS    18F
CTLCHAIN DS    A
ABER     DS    0CL209
ABERMCC  DS    C
ABER1    DS    CL80
ABER2    DS    CL64
ABER3    DS    CL64
ABERA    DS    CL209
ABERB    DS    CL209
         DS    0F
WTOBER   DS    CL200
WTOECB   DS    F
ANSWER   DS    C
DW       DS    D
SIGN     DS    C
DSIGN    DS    C
CTL      DS    X
ADSIGN   DS    A
NUMBER   DS    CL5
TNUMBER  DS    CL5
KZ       DS    X
         END
