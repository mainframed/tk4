TCAMCHK  CSECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         STM   R14,R12,12(R13)
         BALR  R12,0
         USING *,R12
         ST    R13,SAVE+4
         LA    R13,SAVE
         L     R1,0(R1)                A(PARM)
         LH    R3,0(R1)                LENGTH OF PARM
         CLI   2(R1),C'L'              LOG ONLY
         BE    #LOG
         NI    #B00+1,X'0F'             SET WTO OFF
#LOG     EQU   *
         SH    R3,KH009                - 9 (LOOP-COUNTER, INTV., FLAG)
         EX    R3,#MVC
         MVC   INTV+4(2),8(R1)
         PACK  FELD(8),3(5,R1)         LOOP COUNTER
         CVB   R10,FELD                LOOP COUNTER
         EXTRACT ANSWER,FIELDS=COMM
         L     R9,ANSWER
         LA    R9,4(R9)
         QEDIT ORIGIN=(R9)
         QEDIT ORIGIN=(R9),CIBCTR=1
         OPEN  (PRINT,(OUTPUT))
         BAL   R8,#HEAD                WRITE LIST-HEADER
#START   EQU   *
         BAL   R8,#AVTSNAP             LIST AVT-FIELDS
         STIMER WAIT,DINTVL=INTV
         L     R9,ANSWER
         L     R9,4(R9)
         CLI   4(R9),X'40'             IS STOP COMMAND GIVER
         BE    #END
         BCT   R10,#START
#END     EQU   *
         L     R2,LOOP
         LTR   R2,R2
         BZ    #X00
         LH    R2,LOW
         CVD   R2,KD000
         UNPK  WTO2+13(5),KD000+5(3)
         OI    WTO2+17,X'F0'
         LH    R2,HIGH
         CVD   R2,KD000
         UNPK  WTO2+25(5),KD000+5(3)
         OI    WTO2+29,X'F0'
         XR    R2,R2
         L     R3,TOTAL
         D     R2,LOOP
         CVD   R3,KD000
         UNPK  WTO2+40(5),KD000+5(3)
         OI    WTO2+44,X'F0'
         WTO   MF=(E,WTO2)
         PUT   PRINT,AREA              PRINT LAST LINE
         MVI   AREA,X'F0'
         MVI   AREA+1,C' '
         MVC   AREA+2(131),AREA+1
         MVC   AREA+1(49),WTO2+4
         PUT   PRINT,AREA
         SPACE 2
#X00     EQU   *
         CLOSE PRINT
         L     R13,SAVE+4
         LM    R14,R12,12(R13)
         XR    R15,R15
         BR    R14
         EJECT
#AVTSNAP EQU   *                       SNAP AVT-FIELDS
         L     R5,CVTADR               CVT ADDRESS
         L     R5,CVTMSER(R5)          MSTR SCHDLR RES. DATA AREA
         L     R5,BACHN(R5)            COMMAND SCHEDULING CHAIN
#A00     EQU   *
         LTR   R5,R5                   LAST CSCB
         BZ    #Z00                    YES, JOB NOT FOUND  ** ERROR **
         CLC   SAVEJOB,CHKEY(R5)       COMPARE JOBNAME
         BE    #A10
         L     R5,0(R5)                NEXT CSCB
         B     #A00
#A10     EQU   *
         LH    R6,CHASID(R5)           SAVE ASID
         L     R5,CVTADR               CVT ADDRESS
         L     R5,CVTASVT(R5)          ADDRESS-SPACE-VECTOR TABLE
         L     R5,ASVTENTY(R5)         FIRST AVAILBLE ASID
#A20     EQU   *
         LTR   R5,R5         LAST ASCB ACTIVE
         BZ    #Z10                    YES, ASCB NOT FOUND ** ERROR **
         CH    R6,ASCBASID(R5)         COMPARE CSCB ASID
         BE    #A30                    OK
         L     R5,ASCBFWDP(R5)         CHECK NEXT ASCB
         B     #A20
#A30     EQU   *
         L     R5,ASCBSTOR(R5)         REAL ADDR OF SEGMENT TABLE
         L     R2,CVTADR               CVT-ADDRESS
         L     R2,CVTAQAVT(R2)         FIRST WORD OF TCAM DISPATCHER
         LTR   R2,R2                   IS TCAM ACTIVE
         BZ    #Z20                    NO, ** ERROR **
         L     R2,0(R2)                VIRT. ADDR OF
*                                      TCAM ADDR. VECTOR TABLE
*
*        FOR ADDRESSING THE REAL SEGMENT TABLE
*        FROM AN ANOTHER ASCB USE :
*
*                                      SUPERVISOR STATE,
*                                      PROTECTKEY = ZERO AND
*                                      TRANSLATIONMODE BIT IN
*                                      CURRENT PSW = OFF
*
         LA    R2,1032(R2)             R2 POINTED AVTKEYLE
         LR    R6,R2                   TEST, IF AVT + X'408' - X'430'
*                                      CROSS PAGE- BOUNDARY
         SLL   R6,20                   SHIFT OUT HIGH ORDER BYTE,
*                                      SEGMENT ADDR + PAGE
         SRL   R6,20                   SHIFT BACK
         CH    R6,CHKBOUND             AND TEST
         BH    #Z40                    BRANCH  ** ERROR **
         LR    R3,R2
         SLL   R3,8                    CLEAR HIGH ORDER BYTE
         SRL   R3,24                   SHIFT OUT PAGE + DISPL.
         SLL   R3,2                    SEGMENT * 4
         LR    R4,R2
         SLL   R4,16                   CLEAR HIGH ORDER BYTE + SEGMENT
         SRL   R4,28                   SHIFT OUT DISPL.
         SLL   R4,1                    PAGE * 2
         MODESET KEY=ZERO,MODE=SUP
         STNSM SAVEMSK1,B'11111011'
         MVC   #STOSM+1(1),SAVEMSK1    RESTORE OLD MASK
         XR    R15,R15                 CLEAR RETURN-CODE REGISTER
         AR    R5,R3                   FETCH SEGMENT-TABLE
         TM    3(R5),X'01'             SEGMENT INVALID
         BZ    #A40                    NO
         LA    R15,4                   SET RETURN CODE
         B     #A60
#A40     EQU   *
         L     R5,0(R5)                REAL ADDR. PAGE TABLE ORIGIN
         AR    R5,R4                   FETCH PAGE TABLE ENTRY
         TM    1(R5),X'01'             IS THIS PAGE ASSIGNED BY GETMAIN
         BNZ   #A50                    YES, OK
         LA    R15,8
         B     #A60
#A50     EQU   *
         LH    R5,0(R5)                REAL ADDR FROM THIS PAGE
         SRL   R5,4                    SHIFT OUT LOWORDER 4 FLAG-BITS
         SLL   R5,12                   BUILD REAL ADDRESS
         AR    R5,R6                   NOW WE HAVE THE CORRECT REAL-
*                                      ADDRESS FROM TCAM AVT + X'408'
         MVC   FREEBUF,AVTAVFCT(R5)     NUMBER -F FREE BUFFERS
#A60     EQU   *
#STOSM   EQU   *
         STOSM SAVEMSK2,X'00'
         MODESET MODE=PROB,KEY=NZERO
         LTR   R15,R15
         BNZ   #Z30
         EJECT
         CP    LINECNT,=PL2'19'
         BH    #B20
#A65     EQU   *
         AP    LINECNT,=PL2'1'
         LH    R4,FREEBUF              C-NVERT FREE-BUF-C-UNTER
         L     R5,LOOP
         LA    R5,1(R5)
         ST    R5,LOOP
         L     R5,TOTAL
         AR    R5,R4
         ST    R5,TOTAL
         CH    R4,LOW
         BNL   #A70
         STH   R4,LOW                  STORE LOW BUFFER COUNT
#A70     EQU   *
         CH    R4,HIGH
         BNH   #A80
         STH   R4,HIGH                 STORE HIGH BUFFER COUNT
#A80     EQU   *
         CVD   R4,KD000
         MVC   0(6,R7),MASK
         ED    0(6,R7),KD000+5
#B00     EQU   *
         B     #B10
         MVC   WTO1+21(4),2(R7)        DISPLAY FREE-BUFFER-C-UNT
         WTO   MF=(E,WTO1)
#B10     EQU   *
         LA    R7,6(R7)                SET ADDR. NEXT SNAP
         BR    R8
         SPACE 2
#B20     EQU   *
         PUT   PRINT,AREA              PRINT A LINE
         MVI   AREA,C' '
         MVC   AREA+1(132),AREA
         TIME
         ST    R0,ANS
         UNPK  AREA+1(8),ANS
         OI    AREA+8,X'F0'
         LA    R7,AREA+9
         ZAP   LINECNT,=PL2'0'
         B     #A65
         SPACE 2
#HEAD    EQU   *
         L     R2,16                   CVT-ADR
         L     R2,196(R2)              SMCA-ADR
         MVC   HEAD02+8(1),19(R2)      MODELL-NUMBER
         TIME
         ST    R1,ANS
         UNPK  HEAD03+6(8),ANS         YEAR + DAY
         OI    HEAD03+13,X'F0'
         ST    R0,ANS
         UNPK  HEAD04+6(8),ANS         TIME
         OI    HEAD04+13,X'F0'
         PUT   PRINT,HEAD01
         MVI   AREA,X'F0'
         BR    R8
         EJECT
#Z00     EQU   *
         WTO   '*** JOBNAME NOT FOUND ***'
         B     #END
#Z10     EQU   *
         WTO   '*** ASCB NOT FOUND ***'
         B     #END
#Z20     EQU   *
         WTO   '*** TCAM NOT ACTIVE ***'
         B     #END
         SPACE 2
#Z30     EQU   *
         WTO   '*** SEGMENT- OR PAGE FRAME TABLE NOT AVAILBLE ***'
         B     #END
         SPACE 2
#Z40     EQU   *
         WTO   '*** TCAM AVT CROSS PAGE-BOUNDARY ***'
         B     #END
         EJECT
SAVE     DC    18F'-1'
SAVEMSK1 DC    X'00'
SAVEMSK2 DC    X'00'
         DS    0D
FELD     DC    D'0'
INTV     DC    C'00000500'
KD000    DC    D'0'
FREEBUF  DC    H'0'
LINECNT  DC    PL2'21'
MASK     DC    X'402020202120'
KH009    DC    H'9'
CHKBOUND DC    X'0FD8'
ANSWER   DC    F'0'
LOOP     DC    F'0'
TOTAL    DC    F'0'
LOW      DC    H'32767'
HIGH     DC    H'0'
#MVC     MVC   SAVEJOB(1),10(R1)
PRINT    DCB   DDNAME=PRINT,DSORG=PS,MACRF=(PM)
HEAD01   DC    C'1LIST TCAM AVT FIELD/FREE BUFFER COUNTER  JOBNAME: '
SAVEJOB  DC    CL8' '
         DC    CL3' '
HEAD02   DC    CL10'SYSTEM:  '
HEAD03   DC    CL15'DATE:    '
HEAD04   DC    CL16'TIME:    '
         DC    CL20' '
ANS      DC    F'0'
WTO1     WTO   '** FREE BUFFER :      **',ROUTCDE=12,MF=L
WTO2     WTO   '*** LOW:       HIGH:       AVERAGE:       ***',        C
               ROUTCDE=12,MF=L
AREA     DC    CL133' '
         SPACE 3
CVTADR   EQU   X'10'
CVTMSER  EQU   X'94'
CVTAQAVT EQU   X'F0'
BACHN    EQU   X'00'
CHKEY    EQU   X'08'
CHASID   EQU   X'1E'
CVTASVT  EQU   X'22C'
ASVTENTY EQU   X'210'
ASCBASID EQU   X'24'
ASCBFWDP EQU   X'04'
ASCBSTOR EQU   X'2C'
AVTAVFCT EQU   X'08'
         END
