./       ADD   LIST=ALL,NAME=ORWG01AS
ALTR     CSECT
         REG
         XSAVE R12,,ALTR,WORKL
         USING WORK,R13
         LR    R14,R1
         USING PARMAREA,R14
         ST    R14,SAVE14
         MVI   MVS,X'00'
         L     R2,16
         TM    116(R2),X'01'
         BZ    *+8
         MVI   MVS,X'FF'
         LA    R2,TEXT
         XC    ECB,ECB
         LA    R11,ZWI
AGAIN    EQU   *
         LR    R5,R2
         LA    R5,4(R5)
         LA    R4,0
NEXTCHAR EQU   *
         LA    R5,1(R5)
         CLI   0(R5),C','
         BE    PAREND
         LA    R4,1(R4)
         B     NEXTCHAR
PAREND   EQU   *
         LR    R6,R4
         SRL   R6,1
         SLL   R6,1
         CR    R6,R4
         BE    NOER
         MVC   ZWI,5(R2)
         MVI   5(R2),X'F0'
         MVC   6(80,R2),ZWI
         B     AGAIN
ERROR    EQU   *
         MVC   WTO(LENOFER),ER
         L     R0,REG4
         WTO   MF=(E,WTO)
RETURN   EQU   *
         XRETURN ,R
NOER     EQU   *
         LA    R6,4(R2)
         CH    R4,=H'16'
         BH    ERROR
         CH    R4,=H'0'
         BNH   ERROR
         LR    R7,R4
CONTNI   EQU   *
         LA    R6,1(R6)
         NI    0(R6),X'3F'
         BCT   R7,CONTNI
GOON     EQU   *
         LA    R6,5(R2)
         BCTR  R4,0
         EX    R4,TREX
         EX    R4,TRTEX
         BNZ   ERROR
         LA    R4,1(R4)
         LA    R7,4
         SLL   R7,4
         OR    R7,R4
         EX    R7,PCKEX
         LA    R8,1
         L     R10,16
         L     R10,164(R10)   R10 = HIGHEST STORAGE-ADDRESS
         LR    R9,R8
         SLL   R9,2
         SR    R10,R9
         LA    R10,1(R10)
         C     R10,0(R11)
         BNH   ERROR
         LA    R5,33
         LA    R7,0
         LA    R6,5(R4,R2)
ZAPLOOP  EQU   *
         LA    R6,1(R6)
         CLI   0(R6),X'40'
         BE    WEITER
         CLI   0(R6),C','
         BE    WEITER
         NI    0(R6),X'3F'
         LA    R7,1(R7)
         BCT   R5,ZAPLOOP
WEITER   EQU   *
         LTR   R7,R7
         BZ    ERROR
         CLI   0(R6),C','
         BNE   ERROR
         CLI   1(R6),C','
         BE    NOCPUID
         LA    R6,1(R6)
         CLI   0(R6),C'A'
         BE    SETRPLY
         CLI   0(R6),C'B'
         BNE   NOCPUID
SETRPLY  EQU   *
         MVC   REPLY,0(R6)
         MVI   ECB,X'FF'
NOCPUID  EQU   *
         CLI   1(R6),C','
         BNE   ERROR
         CLI   2(R6),X'40'
         BE    ERROR
         CLI   2(R6),C','
         BE    ERROR
         LA    R5,1(,R6)
         CLI   1(R5),C'/'
         BE    ERROR
         LA    R15,19
TESTNAME EQU   *
         LA    R5,1(,R5)
         CLI   0(R5),X'40'
         BE    ERROR
         CLI   0(R5),C'/'
         BE    NAMEEND
         BCT   R15,TESTNAME
         B     ERROR
NAMEEND  EQU   *
         CLI   1(R5),X'40'
         BE    ERROR
         MVC   NAME,2(R6)
         BCTR  R7,0
         LA    R6,6(R4,R2)
         TR    0(16,R6),TRTAB
         EX    R7,TRTEX
         BNZ   ERROR
         PACK  5(5,R11),0(9,R6)
         PACK  9(5,R11),8(9,R6)
         PACK  13(5,R11),16(9,R6)
         PACK  17(5,R11),24(9,R6)
         L     R5,16
         TM    116(R5),X'14'
         BNO   NOMP
         CLI   ECB,X'FF'
         BE    CPUIDOK
         SR    R15,R15
         CLI   687(R15),X'00'
         BNE   NOMP
         CLC   0(4,R11),=F'4095'
         BH    NOMP
         MVC   WTO(LENOFASK),ASK
WTOR     EQU   *
         XC    ECB,ECB
         LA    1,WTO
         LA    0,REPLY
         ST    0,0(1,0)
         MVI   0(1),1
         LA    14,ECB
         ST    14,4(1,0)
         L     R14,SAVE14
         L     R0,REG4
         SVC   35
         WAIT  ECB=ECB
         OI    REPLY,X'40'
         CLI   REPLY,C'A'
         BE    CPUIDOK
         CLI   REPLY,C'B'
         BNE   WTOR
CPUIDOK  EQU   *
         SR    R15,R15
         CLC   REPLY,696(R15)
         BE    NOMP
         L     R3,0(R11)
         A     R3,688(R15)
         ST    R3,0(R11)
NOMP     EQU   *
         UNPK  ADDR(7),1(4,R11)
         L     R4,0(R11)
         SRL   R7,1
         MVC   WTO(LENOFOLD),OLD
         UNPK  WTO+29(9),0(5,R4)
         UNPK  WTO+37(9),4(5,R4)
         UNPK  WTO+45(9),08(5,R4)
         UNPK  WTO+53(9),12(5,R4)
         MVI   WTO+61,X'40'
         MVC   OLDCONT,WTO+29
         TR    WTO+29(32),CCTAB-240
         L     R0,REG4
         WTO   MF=(E,WTO)
         TIME  BIN
         STM   R0,R1,WTO
         MVC   TIME(8),WTO
         LA    R15,SMFLEN
         STH   R15,SMFRDW
         XC    SMFRDW+2(4),SMFRDW+2
         CLI   MVS,X'FF'
         BNE   *+8
         OI    SMFRTYPE,2
         MVI   SMFRTYPE+1,130
         MVC   USERTYPE,=CL8'ALTR'
         L     R15,16
         L     R15,196(R15)
         MVC   SID(4),16(R15)
         L     R15,16
         L     R15,0(,R15)
         L     R15,4(,R15)
         L     R15,12(,R15)
         MVC   JOBNME(24),0(R15)
         MVC   VOLSER,=CL6' '
         XC    IND,IND
         OI    IND,X'80'
         MVI   LIB,X'40'
         MVC   LIB+1(59),LIB
         LA    R15,1
         STH   R15,NBRFLDS
         CLI   MVS,X'FF'
         BNE   GOON1
         MODESET KEY=ZERO
GOON1    EQU   *
         EX    R7,MVCEX
         CLI   MVS,X'FF'
         BNE   GOON2
         MODESET KEY=NZERO
GOON2    EQU   *
         UNPK  NEWCONT+00(9),00(5,R4)
         UNPK  NEWCONT+08(9),04(5,R4)
         UNPK  NEWCONT+16(9),08(5,R4)
         UNPK  NEWCONT+24(9),12(5,R4)
         TR    ADDR(70),CCTAB-240
         LA    R1,SMFRDW
         SVC   83
         LTR   R15,R15
         BZ    RETURN
         MVC   WTO(LENOFSMF),SMFER
         L     R0,REG4
         WTO   MF=(E,WTO)
         B     RETURN
TREX     TR    0(1,R6),TRTAB
TRTEX    TRT   0(0,R6),ZEROES
PCKEX    PACK  0(0,R11),0(0,R6)
MVCEX    MVC   0(0,R4),5(R11)
ER       WTO   'XALTR01 ERROR IN PARAMETER',MCSFLAG=(REG0),MF=L
LENOFER  EQU   *-ER
ASK      WTOR  'XALTR02 REPLY CPU-ID (''A'' OR ''B'').',               *
               MCSFLAG=(REG0),MF=L
LENOFASK EQU   *-ASK
OLD      WTO   'XALTR03 OLD CONTENTS WAS                               *
                  ',MF=L,MCSFLAG=(REG0)
LENOFOLD EQU   *-OLD
SMFER    WTO   'XALTR04 ERROR WHILE WRITING SMF-RECORD',MF=L,          *
               MCSFLAG=REG0
LENOFSMF EQU   *-SMFER
TRTAB    DS    0CL64
         DC    X'FF0A0B0C0D0E0F'
         DC    41XL1'FF'
         DC    X'00010203040506070809'
         DC    6XL1'FF'
         DC    0F'0'
ZEROES   DC    16XL1'0'
TABLE    DC    0F'0'
         DC    C'................'
         DC    C'................'
         DC    C'................'
         DC    C'................'
         DC    C'................'
         DC    C'................'
         DC    C'................'
         DC    C'................'
         DC    C'................'
         DC    C'................'
         DC    C'................'
         DC    C'................'
         DC    C'.ABCDEFGHI......'
         DC    C'.JKLMNOPQR......'
         DC    C'..STUVWXYZ......'
         DC    C'0123456789......'
CCTAB    DC    C'0123456789ABCDEF'
WORK     DSECT
SVA      DS    18F
WTO      DS    CL80
ZWI      DS    CL80
ECB      DS    F
REPLY    DS    X
SAVE14   DS    F
MVS      DS    C
*
****  SYSTEM ALTERATION RECORD
*
SMFREC   DS    0F
SMFRDW   DS    F
SMFRTYPE DS    XL2
TIME     DS    CL4
DATE     DS    CL4
SID      DS    CL4
USERTYPE DS    CL8
JOBNME   DS    CL8
STEPNME  DS    CL8
PRGNME   DS    CL8
NAME     DS    CL20
*
*   IND CAN HAVE THE FOLLOWING VALUES:
*
*      X'80'  --  ONLINE ALTERATION (X ALTR)
*      X'40'  --  IMASPZAP
*      X'20'  --  LKED
*      X'10'  --  IEBCOPY
*      X'08'  --  ZAP CCHHR
*      X'04'  --  NEW/REPL
*
IND      DS    XL2
VOLSER   DS    CL6
LIB      DS    CL44
MODACC   DS    CL8
CSECT    DS    CL8
NBRFLDS  DS    H
ADDR     DS    CL6
OLDCONT  DS    CL32
NEWCONT  DS    CL32
ALIAS    EQU   ADDR
CCHHR    EQU   ADDR
SMFLEN   EQU   *-SMFRDW
UNPKFILL DS    CL1
WORKL    EQU   *-WORK
         XPARM
         END   ALTR
./       ADD   LIST=ALL,NAME=ORWG01BM
         MACRO
         REG
*
*        REGISTER EQUATES
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
RA       EQU   R10
R11      EQU   11
RB       EQU   R11
R12      EQU   12
RC       EQU   R12
R13      EQU   13
RD       EQU   R13
R14      EQU   14
RE       EQU   R14
R15      EQU   15
RF       EQU   R15
         SPACE 2
         MEND
./       ADD   LIST=ALL,NAME=ORWG01CM
         MACRO
&SYM     XSAVE &BASE,&AREA,&ID,&LEN
.*
.*                 EXTENDED SAVE MACRO
.*                 ASSUMES ENTRYPOINT ADDRESS IN REGISTER 15
.*                 SAVES REGISTERS 14 THROUGH 12
.*                 LOADS BASE REGISTER AND CHAINES SAVEAREAS
.*                 MAY PRODUCE REENTRANT CODE
.*
         LCLA  &OFFSET,&BASEOFF,&LLID,&DISPL
         LCLA  &NREG,&REGIX
         LCLC  &NM,&REG,&BL
         LCLC  &PREV
&OFFSET  SETA  4
&NM      SETC  '&SYM'
&REG     SETC  '15'
&BL      SETC  ''
         AIF   (T'&ID EQ 'O').NOID
&LLID    SETA  K'&ID
         AIF   (&LLID NE &LLID/2*2).OVBL
&BL      SETC  ' '
&LLID    SETA  &LLID+1   BLANK
.OVBL    ANOP
&LLID    SETA  &LLID+8   DATE
&DISPL   SETA  4+1+&LLID   B,X,(DATE,ID)
&NM      B     &DISPL.(0,15)
         DC    AL1(&LLID)
         DC    C'&ID&BL'
         DC    CL8'&SYSDATE'
&OFFSET  SETA  4+4+1+&LLID   B,STM,X,(DATE,ID)
&NM      SETC  ''
.NOID    ANOP
&NM      STM   14,12,12(13)            SAVE REGS
         AIF   (T'&BASE EQ 'O').NOBASE
         AIF   ('&BASE'(1,1) NE '(').LOAD
&REGIX   SETA  1
&NREG    SETA  N'&BASE
&REG     SETC  '&BASE(&REGIX)'
         LR    &REG,15
&OFFSET  SETA  &OFFSET+2
.LOOP    ANOP
         USING *-&OFFSET+&BASEOFF,&REG
&REGIX   SETA  &REGIX+1
         AIF   ('&REGIX' GT '&NREG').SETUSE
&PREV    SETC  '&REG'
&REG     SETC  '&BASE(&REGIX)'
         LA    &REG,X'FFF'
         LA    &REG,1(&REG,&PREV)
&OFFSET  SETA  &OFFSET+8
&BASEOFF SETA  &BASEOFF+4096
         AGO   .LOOP
.LOAD    LR    &BASE,15                LOAD BASE REG
&OFFSET  SETA  &OFFSET+2
&REG     SETC  '&BASE'
.NOBASE  ANOP
         USING *-&OFFSET,&REG
.SETUSE  ANOP
         AIF   (T'&AREA NE 'O').NORENT
         AIF   (T'&LEN NE 'O').NOTZERO
         LA    0,72                    GET LENGTH
         AGO   .COMP
.NOTZERO ANOP
         LA    0,&LEN                  GET LENGTH
.COMP    ANOP
         LA    1,1                     PREPARE FOR SP 1
         SLL   1,24                    SP 1 IN HIGH ORDER BYTE
         OR    0,1                     INSERT SP 1
         GETMAIN   R,LV=(0)            GET CORE
         XC    0(3*4,1),0(1)           ZERO CHAIN ADDRESSES
         AIF   (T'&LEN NE 'O').GET
         LA    0,72                    GET LENGTH
         AGO   .NOSTH
.GET     ANOP
         LA    0,&LEN                  GET LENGTH
.NOSTH   ANOP
         STH   0,2(1)                  STORE LENGTH
         AGO   .COM
.NORENT  LA    1,&AREA                 GET SA ADDR
.COM     ST    1,8(0,13)               SA DOWN CHAIN
         ST    13,4(0,1)               SA UP CHAIN
         LR    13,1                    LOAD SA REG
         L     1,4(0,13)               GET HIGH SA
         LM    0,1,20(1)               RESTORE REGS 0 AND 1
         AIF   (T'&AREA NE 'O').TEST
         MEXIT
.TEST    AIF   (T'&AREA EQ 'U').DEFINE
         MEXIT
.DEFINE  B     &AREA+72                BRANCH AROUND SAVEAREA
&AREA    DC    18F'0'                  SAVEAREA
         MEND
./       ADD   LIST=ALL,NAME=ORWG01DM
         MACRO
&SYM     XRETURN &RC,&MODE
.*
.*                 EXTENDED RETURN MACRO
.*                 RESTORES REGISTERS
.*                 MAY PROVIDE RETURNCODE
.*
         LCLA  &C
         LCLB  &NC,&CF
         LCLC  &R,&NM
         AIF   (T'&MODE EQ 'O' OR '&MODE' EQ 'R').CONT
         MNOTE 8,'UNKNOWN OPERAND'
         MEXIT
.CONT    ANOP
&NM      SETC  '&SYM'
         AIF   (T'&RC NE 'O').CODE
&NC      SETB  (1)
         AGO   .NOCODE
.CODE    ANOP
&R       SETC  '15'
         AIF   ('&RC'(1,1) EQ '(').REG
         AIF   (T'&RC EQ 'N').FIX
&NM      L     15,&RC                  LOAD CODE
&NM      SETC  ''
         AGO   .NOCODE
.FIX     ANOP
&CF      SETB  (1)
         AGO   .NOCODE
.REG     ANOP
&R       SETC  '&RC'(2,K'&RC-2)
.NOCODE  ANOP
&NM      L     13,4(0,13)              GET HIGH SA ADDR
         AIF   (&NC OR &CF).NOSTORE
         ST    &R,16(0,13)             STORE CODE
.NOSTORE AIF   (T'&MODE EQ 'O').NORENT
         L     1,8(0,13)               GET LOW SA ADDR
         LH    0,2(1)                  GET LENGTH
         LA    15,1                    PREPARE FOR SP 1
         SLL   15,24                   SP IN HIGH ORDER BYTE
         OR    0,15                    INSERT SP 1
         FREEMAIN  R,LV=(0),A=(1)      FREE CORE
.NORENT  LM    14,12,12(13)            RESTORE REGS
         AIF   (NOT &CF).EXIT
         LA    15,&RC                  LOAD CODE
&C       SETA  &RC
         AIF   (&C/4*4 EQ &C).EXIT
         MNOTE 0,'UNUSUAL CODE'
.EXIT    MVI   12(13),X'FF'            FORTRAN REQUIREMENT
         SPM   14                      RESTORE PGM MASK AND CC
         BR    14
         MEND
./       ADD   LIST=ALL,NAME=ORWG01EM
         MACRO
         XPARM
PARMAREA DSECT
REG4     DS    F
TEXT     DS    CL124
PRMLEN   EQU   *-PARMAREA
         MEND
         MACRO
&NAME    MBASIS &RA,&RE,&RC=,&TYPE=N,&MAXMUP=
         GBLB  &MTRB000            MUPTRACE ACTIVE
         GBLB  &MTRB004(2)         MUPTRACE MBASIS
         GBLA  &MBSA001            MBASIS COUNT
         GBLA  &MBSA002            MBASIS MAXMUP
         GBLB  &MBSB001            MBASIS PRESENT
         GBLB  &MBSB002            MBASIS RC=(R15)
         GBLB  &MBSB003            MBASIS TYPE=R
         GBLC  &MBSC001(30)        MBASIS &SYSECT
         GBLC  &MBSC002(30)        MBASIS &SYSNDX
         LCLA  &M
         LCLC  &T
&MBSA001 SETA  &MBSA001+1
         AIF   (&MBSA001 GT 30).E1
         AIF   (N'&SYSLIST LE 2).L0
         MNOTE 4,'MORE THAN TWO POSITIONAL OPERANDS. ONLY FIRST TWO USE*
               D'
.L0      ANOP
         AIF   ('&TYPE' EQ 'N').M3
         AIF   (T'&MAXMUP NE 'O').M0
         MNOTE 4,'MAXMUP MISSING. 20 ASSUMED'
&MBSA002 SETA  20
         AGO   .M3
.M0      AIF   (T'&MAXMUP EQ 'N').M2
.M1      MNOTE 8,'MAXMUP INVALID. 20 ASSUMED'
&MBSA002 SETA  20
         AGO   .M3
.M2      ANOP
&M       SETA  &MAXMUP
         AIF   (&M LE 0 OR &M GT 500).M1
&MBSA002 SETA  &MAXMUP
.M3      ANOP
         AIF   (&MBSB003).L4
         AIF   ('&TYPE' EQ 'R').L2
&T       SETC  '&TYPE'
         AIF   ('&TYPE' EQ 'N' OR '&TYPE' EQ 'S' OR '&TYPE' EQ 'T').L1
         MNOTE 8,'TYPE INVALID. N ASSUMED'
&T       SETC  'N'
.L1      ANOP
&NAME    MBASISN &RA,&RE,RC=&RC,TYPE=&T
         MEXIT
.L2      ANOP
         AIF   (NOT &MBSB001).L3
         MNOTE 8,'PRIOR MBASIS WAS NOT TYPE=R'
.L3      ANOP
&MBSB002 SETB  1
&MBSB003 SETB  1
         AIF   (NOT &MTRB000).L4
         MNOTE 8,'*** TRACE WURDE SPEZIFIZIERT FUER REENTRANT CODE ***'
         MNOTE 8,'*** TRACE-ROUTINE IST NICHT REENTRANT ***'
.L4      ANOP
&NAME    MBASISR &RA,&RE,RC=(R15),TYPE=R
         MEXIT
.E1      MNOTE 12,'MORE THAN 30 MBASIS. MACRO GENERATION TERMINATED'
         MEND
./       ADD   LIST=ALL,NAME=ORWG01FA
MEMBER NAME  ALTR
%%HISTORY.
AUTHOR(S).    N.N.
INSTALLATION. BASF AG
              6700 LUDWIGSHAFEN
              RECHENZENTRUM.
DATE-WRITTEN. 00/00/00.
LAST UPDATE.  03/04/75.
REMARKS.
    AUTHORISATION CODE MUST BE 1.
    MODULE CONVERTED TO OS/VS2 (MVS) BY
    BAYER AG, 5090 LEVERKUSEN, FR-RECHENZENTRUM.
    ********* MODIFIKATION 01  ****************
    *** RWG, 7000 STUTTGART, GENO-HAUS  *******
    *******************************************
%%SYNTAX.
F X,ALTR,<CORE-LOCATION>,<NEW-CONTENTS>,,<NAME1/NAME2/TEXT>
....<CORE-LOCATION>:  VIRTUAL ADDRESS IN THE
                      ADDRESS-SPACE OF XCNTRLVS
....<NEW-CONTENTS>:   HEXADECIMAL LITERAL,
                      LENGTH IS 1 - 8 BYTES
....<NAME1/NAME2/TEXT>  USER-IDENTIFIKATION
  -- NAME1            NAME DES VERANTWORTLICHEN
  -- NAME2            NAME DES EINGEBENDEN
  -- TEXT               BEMERKUNGEN DAZU
....SAMPLE:           F X,ALTR,279,FF,,BU/BU/XCMDALTR
%%FUNCTION.
THE COMMAND 'ALTR' CHANGES THE SPECIFIED
VIRTUAL AREA AND REPORTS THE CHANGE VIA
USER-RECORDS INTO SYS1.MANX/Y.
CHANGES IN THE LPA ARE INEFFECTIVE BECAUSE
LPA-PAGES ARE NEVER PAGED OUT.
%%
/*
