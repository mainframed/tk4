./ ADD  NAME=$FOR
         MACRO
         $FOR  &IX=,&TO=,&STEP=1
.*************** DEFINITIONEN *******************
.* MACLVL=001,MACDATE=09-06-1981,MACAUTHOR=JUERGEN THEWES
.*                              STRUKTURENSTACK
         GBLA  &ST1(30)         ST1(X)  = STRUKTURNUMMER
         GBLA  &ST2(30)         ST2(X)  = STRUKTURART
         GBLA  &ST3(30)         ST3(X)  = KONSEKUTIVPOINTER
         GBLA  &PT              POINTER FUER STACK
         GBLA  &CT              LFD. STRUKTURNUMMER
         GBLA  &PTS             POINTER FUER $FOR-SAVE
         GBLA  &MXS             MAXIMALE SAVE-LAENGE
         GBLA  &HELP            HILFSFELD
         AIF   ('&IX' EQ '').ERR0
         AIF   ('&TO' EQ '').ERR0
         AIF   ('&STEP' EQ '').ERR0
         AIF   (&PT EQ 30).ERR1
         AIF   (&CT EQ 999).ERR2
&CT      SETA  &CT+1
&PT      SETA  &PT+1
&ST1(&PT) SETA &CT
&ST2(&PT) SETA 1               FOR-TYPE
         AIF   (&PTS EQ 0).A200
         AIF   (&PTS LE &MXS).A100
&MXS     SETA  &PTS
.A100    ANOP
&PTS     SETA  &PTS-12
         STM   $FORR1,$FORR3,$FORSAVE+&PTS  SAVE REGISTERS
&PTS     SETA  &PTS+12
.A200    ANOP
&PTS     SETA  &PTS+12
         LA    $FORR1,&IX       ANFANGSADRESSE
         LA    $FORR2,&STEP     SCHRITTWEITE
         LA    $FORR3,&TO       ENDADRESSE
$FOR&CT  EQU   *
         MEXIT
.ERR0    ANOP
         MNOTE 8,'***SMG002 - EIN PARAMETER IST LEER ODER FEHLT'
         MEXIT
.ERR1    ANOP
         MNOTE 8,'***SMG003 - STACKPOINTER - UEBERLAUF'
         MEXIT
.ERR2    ANOP
         MNOTE 8,'***SMG004 - STRUKTURENMAXIMUM ERREICHT'
         MEXIT
         MEND
./ ADD  NAME=$ENDPROG
         MACRO
         $ENDPROG
.*************** DEFINITIONEN *******************
.* MACLVL=001,MACDATE=09-06-1981,MACAUTHOR=JUERGEN THEWES
.*                              STRUKTURENSTACK
         GBLA  &PT              POINTER FUER STACK
         GBLA  &MXS
         AIF   (&PT NE 0).ERR
* SAVEAREA
SAVEAREA DS    18F
         AIF   (&MXS EQ 0).END
* RESERVIERTER BEREICH FUER FOR-SCHLEIFEN-STACK
         DS    0F
$FORSAVE DS    CL&MXS
.END     ANOP
* ENDE
         END
         MEXIT
.ERR     ANOP
         MNOTE 8,'***SMG011 - NICHT BEENDETE STRUKTUREN VORHANDEN'
         AGO  .END
         MEND
./ ADD  NAME=$ENDPROC
         MACRO
         $ENDPROC
         GBLC   &PRNAME
.* MACLVL=001,MACDATE=09-06-1981,MACAUTHOR=JUERGEN THEWES
         AIF  ('&PRNAME' EQ '').ERR0
         L     14,&PRNAME.-4
         BR    14
&PRNAME  SETC  ''
         MEXIT
.ERR0    ANOP
         MNOTE 8,'***SMG015 - KEINE ZU BEENDENDE PROC GEFUNDEN'
         MEXIT
         MEND
./ ADD  NAME=$END
         MACRO
         $END
.*************** DEFINITIONEN *******************
.* MACLVL=001,MACDATE=09-06-1981,MACAUTHOR=JUERGEN THEWES
.*                              STRUKTURENSTACK
         GBLA  &ST1(30)         ST1(X)  = STRUKTURNUMMER
         GBLA  &ST2(30)         ST2(X)  = STRUKTURART
         GBLA  &ST3(30)         ST3(X)  = KONSEKUTIVPOINTER
         GBLA  &PT              POINTER FUER STACK
         GBLA  &CT              LFD. STRUKTURNUMMER
         GBLA  &PTS             POINTER FUER $FOR-SAVE
         GBLA  &MXS             MAXIMALE SAVE-LAENGE
         GBLA  &HELP            HILFSFELD
         GBLB  &PROG            $PROGRAM MACRO USED
         LCLA  &X
         AIF   (&PT EQ 0).ERR1
&X       SETA  &ST1(&PT)
         AIF   (&ST2(&PT) NE 1).END20
.* ENDE EINER FOR SCHLEIFE
         BXLE  $FORR1,$FORR3,$FOR&X
$END&X   EQU   *
&PTS     SETA  &PTS-12
         AIF   (&PTS EQ 0).END11
&PTS     SETA  &PTS-12
         LM    $FORR1,$FORR3,$FORSAVE+&PTS
&PTS     SETA  &PTS+12
.END11   ANOP
         AGO   .ENDE
.END20   ANOP
         AIF   (&ST2(&PT) NE 2).END30
.*  ENDE EINER IF-THEN-ELSE STRUKTUR
         AIF   (&ST3(&PT) NE 3).ERR2
$END&X   EQU   *
         AGO   .ENDE
.END30   ANOP
.*  ENDE EINER WHILE SCHLEIFE
         AIF   (&ST2(&PT) NE 3).END40
         B     $WHIL&X
$END&X   EQU   *
         AGO   .ENDE
.END40   ANOP
         AIF   (&ST2(&PT) NE 4).END50
.*  ENDE EINER REPEAT SCHLEIFE
$END&X   EQU   *
         AGO   .ENDE
.END50   ANOP
.* ENDE EINER CASE-OF-STRUKTUR
$END&X   EQU   *
         AGO   .ENDE
.ENDE    ANOP
&ST3(&PT) SETA 0
&PT      SETA  &PT-1
         MEXIT
.ERR1    ANOP
         MNOTE 8,'***SMG008 - KEINE ZU BEENDENDE STRUKTUR VORHANDEN'
         MEXIT
.ERR2    ANOP
         MNOTE 8,'***SMG009 - IF-THEN-ELSE KONSTRUKTION UNVOLLSTAENDIG'
         MEXIT
         MEND
./ ADD  NAME=$ELSE
         MACRO
         $ELSE  &SF
.*************** DEFINITIONEN *******************
.* MACLVL=001,MACDATE=09-06-1981,MACAUTHOR=JUERGEN THEWES
.*                              STRUKTURENSTACK
         GBLA  &ST1(30)         ST1(X)  = STRUKTURNUMMER
         GBLA  &ST2(30)         ST2(X)  = STRUKTURART
         GBLA  &ST3(30)         ST3(X)  = KONSEKUTIVPOINTER
         GBLA  &PT              POINTER FUER STACK
         LCLA  &X
         AIF   (&ST2(&PT) NE 2).ERR0
         AIF   (&ST3(&PT) NE 2).ERR1
&ST3(&PT) SETA 3               THEN
&X       SETA  &ST1(&PT)
         AIF   ('&SF' EQ 'EMPTY').A100
         B     $END&X
.A100    ANOP
$ELSE&X  EQU   *
         MEXIT
.ERR0    ANOP
         MNOTE 8,'***SMG006 - KEINE IF-THEN-ELSE STRUKTUR'
         MEXIT
.ERR1    ANOP
         MNOTE 8,'***SMG008 - KEIN ELSE ERWARTET'
         MEXIT
         MEND
./ ADD  NAME=$DO
         MACRO
         $DO
.*************** DEFINITIONEN *******************
.* MACLVL=001,MACDATE=09-06-1981,MACAUTHOR=JUERGEN THEWES
.*                              STRUKTURENSTACK
         GBLA  &ST1(30)         ST1(X)  = STRUKTURNUMMER
         GBLA  &ST2(30)         ST2(X)  = STRUKTURART
         GBLA  &ST3(30)         ST3(X)  = KONSEKUTIVPOINTER
         GBLA  &PT              POINTER FUER STACK
         LCLA  &X
         AIF   (&ST2(&PT) NE 3).ERR0
&X       SETA  &ST1(&PT)
$DO&X    EQU   *
         MEXIT
.ERR0    ANOP
         MNOTE 8,'***SMG006 - KEINE WHILE SCHLEIFE'
         MEXIT
         MEND
./ ADD  NAME=$CASERC
         MACRO
         $CASERC
.*************** DEFINITIONEN *******************
.* MACLVL=001,MACDATE=09-06-1981,MACAUTHOR=JUERGEN THEWES
.*                              STRUKTURENSTACK
         GBLA  &ST1(30)         ST1(X)  = STRUKTURNUMMER
         GBLA  &ST2(30)         ST2(X)  = STRUKTURART
         GBLA  &ST3(30)         ST3(X)  = KONSEKUTIVPOINTER
         GBLA  &PT              POINTER FUER STACK
         GBLA  &CT              LFD. STRUKTURNUMMER
         LCLC  &R
         LCLA  &C
&R       SETC  'E'
         AIF   ('&SYSLIST(1)' EQ '').ERR0
         AIF   (&PT EQ 30).ERR1
         AIF   (&CT EQ 999).ERR2
&CT      SETA  &CT+1
&PT      SETA  &PT+1
&ST1(&PT) SETA &CT
&ST2(&PT) SETA 6               CASE-TYPE
&ST3(&PT) SETA 0
         L     15,$CASE&PT(15)
         BR    15
$CASE&PT EQU   *
.SK      ANOP
&C       SETA   &C+1
         AIF   ('&SYSLIST(1,&C)' EQ '').ENDE
         DC    A($OF&CT.&C)
         AGO   .SK
.ENDE    ANOP
         .MEXIT
.ERR0    ANOP
         MNOTE 8,'***SMG002 - EIN PARAMETER IST LEER ODER FEHLT'
         MEXIT
.ERR1    ANOP
         MNOTE 8,'***SMG003 - STACKPOINTER - UEBERLAUF'
         MEXIT
.ERR2    ANOP
         MNOTE 8,'***SMG004 - STRUKTURENMAXIMUM ERREICHT'
         MEXIT
         MEND
./ ADD  NAME=$CASE
         MACRO
         $CASE
.*************** DEFINITIONEN *******************
.* MACLVL=001,MACDATE=09-06-1981,MACAUTHOR=JUERGEN THEWES
.*                              STRUKTURENSTACK
         GBLA  &ST1(30)         ST1(X)  = STRUKTURNUMMER
         GBLA  &ST2(30)         ST2(X)  = STRUKTURART
         GBLA  &ST3(30)         ST3(X)  = KONSEKUTIVPOINTER
         GBLA  &PT              POINTER FUER STACK
         GBLA  &CT              LFD. STRUKTURNUMMER
         LCLC  &R
         LCLA  &C
&R       SETC  'E'
         AIF   ('&SYSLIST(1)' EQ '').ERR0
         AIF   ('&SYSLIST(2)' EQ '').ERR0
         AIF   (&PT EQ 30).ERR1
         AIF   (&CT EQ 999).ERR2
&CT      SETA  &CT+1
&PT      SETA  &PT+1
&ST1(&PT) SETA &CT
&ST2(&PT) SETA 6               CASE-TYPE
&ST3(&PT) SETA 0
         AIF   ('&SYSLIST(1,2)' NE 'TM').SK
&R       SETC  'O'
.SK      ANOP
&C       SETA   &C+1
         AIF   ('&SYSLIST(2,&C)' EQ '').ENDE
         AIF  ('&SYSLIST(1,2)' EQ 'CLC').GEN01
         &SYSLIST(1,2) &SYSLIST(1,1).,&SYSLIST(2,&C)
         AGO   .BR
.GEN01   &SYSLIST(1,2) &SYSLIST(2,&C).,&SYSLIST(1,1)
.BR      B&R   $OF&CT.&C
         AGO   .SK
.ENDE    ANOP
         B     $ERR&CT            *ERRORCASE
         MEXIT
.ERR0    ANOP
         MNOTE 8,'***SMG002 - EIN PARAMETER IST LEER ODER FEHLT'
         MEXIT
.ERR1    ANOP
         MNOTE 8,'***SMG003 - STACKPOINTER - UEBERLAUF'
         MEXIT
.ERR2    ANOP
         MNOTE 8,'***SMG004 - STRUKTURENMAXIMUM ERREICHT'
         MEXIT
         MEND
./ ADD  NAME=$WHILE
         MACRO
         $WHILE
.*************** DEFINITIONEN *******************
.* MACLVL=001,MACDATE=09-06-1981,MACAUTHOR=JUERGEN THEWES
.*                              STRUKTURENSTACK
         GBLA  &ST1(30)         ST1(X)  = STRUKTURNUMMER
         GBLA  &ST2(30)         ST2(X)  = STRUKTURART
         GBLA  &ST3(30)         ST3(X)  = KONSEKUTIVPOINTER
         GBLA  &PT              POINTER FUER STACK
         GBLA  &CT              LFD. STRUKTURNUMMER
         GBLA  &PTS             POINTER FUER $FOR-SAVE
         GBLA  &MXS             MAXIMALE SAVE-LAENGE
         GBLA  &HELP            HILFSFELD
         GBLC  &CASE(30)        CASE OF STRUKTUR
         GBLB  &PROG            $PROGRAM MACRO USED
         AIF   ('&SYSLIST(1)' EQ '').ERR0
         AIF   (&PT EQ 30).ERR1
         AIF   (&CT EQ 999).ERR2
&CT      SETA  &CT+1
&PT      SETA  &PT+1
&ST1(&PT) SETA &CT
&ST2(&PT) SETA 3               WHILE-TYPE
         LCLA  &C1,&C2
         LCLC  &CC,&CD
&C1      SETA  1
&C2      SETA  2
$WHIL&CT EQU   *
.BEGIN   ANOP
         AIF   ('&SYSLIST(&C1,4)' EQ '').ERR10
         AIF   ('&SYSLIST(&C1,4)' EQ 'TM').TM00
         AIF   ('&SYSLIST(&C1,4)' EQ 'LTR').LTR00
         AIF   ('&SYSLIST(&C1,2)' EQ 'EQ').EQ00
         AIF   ('&SYSLIST(&C1,2)' EQ 'NE').NE00
         AIF   ('&SYSLIST(&C1,2)' EQ 'GT').GT00
         AIF   ('&SYSLIST(&C1,2)' EQ 'LT').LT00
         AIF   ('&SYSLIST(&C1,2)' EQ 'GE').GE00
         AIF   ('&SYSLIST(&C1,2)' EQ 'LE').LE00
         AGO   .ERR11
.EQ00    ANOP
&CC      SETC  'E'
&CD      SETC  ''
         AGO   .CONN
.NE00    ANOP
&CC      SETC  'E'
&CD      SETC  'N'
         AGO   .CONN
.GT00    ANOP
&CC      SETC  'H'
&CD      SETC  ''
         AGO   .CONN
.LT00    ANOP
&CC      SETC  'L'
&CD      SETC  ''
         AGO   .CONN
.LE00    ANOP
&CC      SETC  'H'
&CD      SETC  'N'
         AGO   .CONN
.GE00    ANOP
&CC      SETC  'L'
&CD      SETC  'N'
         AGO   .CONN
.ON00    ANOP
&CC      SETC  'O'
&CD      SETC  ''
         AGO   .CONN
.NO00    ANOP
&CC      SETC  'O'
&CD      SETC  'N'
         AGO   .CONN
.ZE00    ANOP
&CC      SETC  'Z'
&CD      SETC  ''
         AGO   .CONN
.NZ00    ANOP
&CC      SETC  'Z'
&CD      SETC  'N'
         AGO   .CONN
.CONN    ANOP
         AIF   ('&SYSLIST(&C2)' EQ 'AND').AND00
         AIF   ('&SYSLIST(&C2)' EQ 'OR').OR00
         AIF   ('&SYSLIST(&C2)' EQ '').AND00
         AGO   .ERR11
.AND00   ANOP
         AIF   ('&CD' EQ '').AND01
&CD      SETC  ''
         AGO   .AND02
.AND01   ANOP
&CD      SETC  'N'
.AND02   ANOP
         &SYSLIST(&C1,4) &SYSLIST(&C1,1),&SYSLIST(&C1,3)
         B&CD.&CC $END&CT
         AGO   .CHECK
.OR00    ANOP
         &SYSLIST(&C1,4) &SYSLIST(&C1,1),&SYSLIST(&C1,3)
         B&CD.&CC $DO&CT
.CHECK   ANOP
         AIF   ('&SYSLIST(&C2)' EQ '').END
&C1      SETA  &C1+2
&C2      SETA  &C2+2
         AGO   .BEGIN
.END     MEXIT
.TM00    ANOP
         AIF   ('&SYSLIST(&C1,2)' EQ 'ONE').ON00
         AIF   ('&SYSLIST(&C1,2)' EQ 'NOTONE').NO00
.LTR00   ANOP
         AIF   ('&SYSLIST(&C1,2)' EQ 'ZERO').ZE00
         AIF   ('&SYSLIST(&C1,2)' EQ 'NOTZERO').NZ00
         AGO   .ERR11
.ERR10   ANOP
         MNOTE 8,'***SMG004 - VERGLEICHSOPERATION FEHLT'
         MEXIT
.ERR11   ANOP
         MNOTE 8,'***SMG005 - FALSCHE BEDINGUNGSSYNTAX'
         MEXIT
         MEXIT
.ERR0    ANOP
         MNOTE 8,'***SMG002 - EIN PARAMETER IST LEER ODER FEHLT'
         MEXIT
.ERR1    ANOP
         MNOTE 8,'***SMG003 - STACKPOINTER - UEBERLAUF'
         MEXIT
.ERR2    ANOP
         MNOTE 8,'***SMG004 - STRUKTURENMAXIMUM ERREICHT'
         MEXIT
         MEND
./ ADD  NAME=$UNTIL
         MACRO
         $UNTIL
.*************** DEFINITIONEN *******************
.* MACLVL=001,MACDATE=09-06-1981,MACAUTHOR=JUERGEN THEWES
.*                              STRUKTURENSTACK
         GBLA  &ST1(30)         ST1(X)  = STRUKTURNUMMER
         GBLA  &ST2(30)         ST2(X)  = STRUKTURART
         GBLA  &ST3(30)         ST3(X)  = KONSEKUTIVPOINTER
         GBLA  &PT              POINTER FUER STACK
         LCLA  &X
         LCLC  &FLAG
         AIF   (&ST2(&PT) NE 4).ERR1
&X       SETA  &ST1(&PT)
         LCLA  &C1,&C2
         LCLC  &CC,&CD
&C1      SETA  1
&C2      SETA  2
$UNTL&X  EQU   *
.BEGIN   ANOP
         AIF   ('&SYSLIST(&C1,1)' EQ 'EOF').EOF
         AIF   ('&SYSLIST(&C1,4)' EQ '').ERR10
         AIF   ('&SYSLIST(&C1,4)' EQ 'TM').TM00
         AIF   ('&SYSLIST(&C1,4)' EQ 'LTR').LTR00
         AIF   ('&SYSLIST(&C1,2)' EQ 'EQ').EQ00
         AIF   ('&SYSLIST(&C1,2)' EQ 'NE').NE00
         AIF   ('&SYSLIST(&C1,2)' EQ 'GT').GT00
         AIF   ('&SYSLIST(&C1,2)' EQ 'LT').LT00
         AIF   ('&SYSLIST(&C1,2)' EQ 'GE').GE00
         AIF   ('&SYSLIST(&C1,2)' EQ 'LE').LE00
         AGO   .ERR11
.EOF     ANOP
&FLAG    SETC   '&SYSLIST(&C1,2)'
         AGO   .CHECK
.EQ00    ANOP
&CC      SETC  'E'
&CD      SETC  ''
         AGO   .CONN
.NE00    ANOP
&CC      SETC  'E'
&CD      SETC  'N'
         AGO   .CONN
.GT00    ANOP
&CC      SETC  'H'
&CD      SETC  ''
         AGO   .CONN
.LT00    ANOP
&CC      SETC  'L'
&CD      SETC  ''
         AGO   .CONN
.LE00    ANOP
&CC      SETC  'H'
&CD      SETC  'N'
         AGO   .CONN
.GE00    ANOP
&CC      SETC  'L'
&CD      SETC  'N'
         AGO   .CONN
.ON00    ANOP
&CC      SETC  'O'
&CD      SETC  ''
         AGO   .CONN
.NO00    ANOP
&CC      SETC  'O'
&CD      SETC  'N'
         AGO   .CONN
.ZE00    ANOP
&CC      SETC  'Z'
&CD      SETC  ''
         AGO   .CONN
.NZ00    ANOP
&CC      SETC  'Z'
&CD      SETC  'N'
         AGO   .CONN
.CONN    ANOP
         AIF   ('&SYSLIST(&C2)' EQ 'AND').AND00
         AIF   ('&SYSLIST(&C2)' EQ 'OR').OR00
         AIF   ('&SYSLIST(&C2)' EQ '').AND00
         AGO   .ERR11
.AND00   ANOP
         AIF   ('&CD' EQ '').AND01
&CD      SETC  ''
         AGO   .AND02
.AND01   ANOP
&CD      SETC  'N'
.AND02   ANOP
         &SYSLIST(&C1,4) &SYSLIST(&C1,1),&SYSLIST(&C1,3)
         B&CD.&CC $REP&X
         AGO   .CHECK
.OR00    ANOP
         &SYSLIST(&C1,4) &SYSLIST(&C1,1),&SYSLIST(&C1,3)
         B&CD.&CC $END&X
.CHECK   ANOP
         AIF   ('&SYSLIST(&C2)' EQ '').END
&C1      SETA  &C1+2
&C2      SETA  &C2+2
         AGO   .BEGIN
.END     ANOP
         AIF   ('&FLAG' EQ '').EX
         AIF   (N'&SYSLIST NE 1).EX1
         B     $REP&X
.EX1     ANOP
&FLAG    EQU   *
.EX      MEXIT
.TM00    ANOP
         AIF   ('&SYSLIST(&C1,2)' EQ 'ONE').ON00
         AIF   ('&SYSLIST(&C1,2)' EQ 'NOTONE').NO00
.LTR00   ANOP
         AIF   ('&SYSLIST(&C1,2)' EQ 'ZERO').ZE00
         AIF   ('&SYSLIST(&C1,2)' EQ 'NOTZERO').NZ00
         AGO   .ERR11
.ERR1    ANOP
         MNOTE 8,'***SMG010 - KEINE REPEAT SCHLEIFE'
         MEXIT
.ERR10   ANOP
         MNOTE 8,'***SMG004 - VERGLEICHSOPERATION FEHLT'
         MEXIT
.ERR11   ANOP
         MNOTE 8,'***SMG005 - FALSCHE BEDINGUNGSSYNTAX'
         MEXIT
         MEND
./ ADD  NAME=$THEN
         MACRO
         $THEN
.*************** DEFINITIONEN *******************
.* MACLVL=001,MACDATE=09-06-1981,MACAUTHOR=JUERGEN THEWES
.*                              STRUKTURENSTACK
         GBLA  &ST1(30)         ST1(X)  = STRUKTURNUMMER
         GBLA  &ST2(30)         ST2(X)  = STRUKTURART
         GBLA  &ST3(30)         ST3(X)  = KONSEKUTIVPOINTER
         GBLA  &PT              POINTER FUER STACK
         LCLA  &X
         AIF   (&ST2(&PT) NE 2).ERR0
         AIF   (&ST3(&PT) NE 1).ERR1
&ST3(&PT) SETA 2               THEN
&X       SETA  &ST1(&PT)
$THEN&X  EQU   *
         MEXIT
.ERR0    ANOP
         MNOTE 8,'***SMG006 - KEINE IF-THEN-ELSE STRUKTUR'
         MEXIT
.ERR1    ANOP
         MNOTE 8,'***SMG007 - KEIN THEN ERWARTET'
         MEXIT
         MEND
./ ADD  NAME=$SUBROUT
         MACRO
         $SUBROUT  &NAME
         AIF  ('&NAME' EQ '').ERR0
.* MACLVL=001,MACDATE=09-06-1981,MACAUTHOR=JUERGEN THEWES
         BAL   14,&NAME
         MEXIT
.ERR0    ANOP
         MNOTE 8,'***SMG016 - PROCEDURE NAME FEHLT'
         MEXIT
         MEND
./ ADD  NAME=$REPEAT
         MACRO
         $REPEAT
.*************** DEFINITIONEN *******************
.* MACLVL=001,MACDATE=09-06-1981,MACAUTHOR=JUERGEN THEWES
.*                              STRUKTURENSTACK
         GBLA  &ST1(30)         ST1(X)  = STRUKTURNUMMER
         GBLA  &ST2(30)         ST2(X)  = STRUKTURART
         GBLA  &ST3(30)         ST3(X)  = KONSEKUTIVPOINTER
         GBLA  &PT              POINTER FUER STACK
         GBLA  &CT              LFD. STRUKTURNUMMER
         AIF   (&PT EQ 30).ERR1
         AIF   (&CT EQ 999).ERR2
&CT      SETA  &CT+1
&PT      SETA  &PT+1
&ST1(&PT) SETA &CT
&ST2(&PT) SETA 4               REPEAT-TYPE
$REP&CT  EQU   *
         MEXIT
.ERR1    ANOP
         MNOTE 8,'***SMG003 - STACKPOINTER - UEBERLAUF'
         MEXIT
.ERR2    ANOP
         MNOTE 8,'***SMG004 - STRUKTURENMAXIMUM ERREICHT'
         MEXIT
         MEND
./ ADD  NAME=$PROGRAM
         MACRO
         $PROGRAM &NAME
.*************** DEFINITIONEN *******************
.* MACLVL=001,MACDATE=09-06-1981,MACAUTHOR=JUERGEN THEWES
.*                              STRUKTURENSTACK
         GBLB  &PROG            $PROGRAM MACRO USED
         AIF   (&PROG).ERR1
&PROG    SETB  1
&NAME    CSECT
         SPACE
*******EQUATES
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
*
INDEX    EQU   7
$FORR1   EQU   7
$FORR2   EQU   8
$FORR3   EQU   9
         MEXIT
.ERR1    ANOP
         MNOTE 8,'***SMG001 - MEHRFACHBENUTZUNG DES $PROGRAM-MACROS'
         MEXIT
         MEND
./ ADD  NAME=$PROC
         MACRO
         $PROC  &NAME
         GBLC  &PRNAME
.* MACLVL=001,MACDATE=09-06-1981,MACAUTHOR=JUERGEN THEWES
         AIF   ('&NAME' EQ '').ERR0
         AIF  ('&PRNAME' NE '').ERR1
&PRNAME  SETC  '&NAME'
         DS    F
&NAME    EQU   *
         ST    14,&NAME.-4
         MEXIT
.ERR0    ANOP
         MNOTE 8,'***SMG013 - PROCNAME FEHLT'
         MEXIT
.ERR1    ANOP
         MNOTE 8,'***SMG014 - PROC IN EINER PROC IST NICHT MOEGLICH'
         MEXIT
         MEND
./ ADD  NAME=$OF
         MACRO
         $OF  &P
.*************** DEFINITIONEN *******************
.* MACLVL=001,MACDATE=09-06-1981,MACAUTHOR=JUERGEN THEWES
.*                              STRUKTURENSTACK
         GBLA  &ST1(30)         ST1(X)  = STRUKTURNUMMER
         GBLA  &ST2(30)         ST2(X)  = STRUKTURART
         GBLA  &ST3(30)         ST3(X)  = KONSEKUTIVPOINTER
         GBLA  &PT              POINTER FUER STACK
         LCLC  &X
         LCLA  &Y
         AIF   (&ST2(&PT) NE 6).ERR0
         AIF   ('&P' EQ 'OTHERS').OTH
&ST3(&PT) SETA &ST3(&PT)+1
&X       SETC  '&ST1(&PT).&ST3(&PT)'
         AIF   (&ST3(&PT) EQ 1).SY
         B     $END&ST1(&PT)
.SY      ANOP
$OF&X    EQU   *
         MEXIT
.OTH     ANOP
         B     $END&ST1(&PT)
&Y       SETA  &ST1(&PT)
$ERR&Y   EQU   *
         MEXIT
.ERR0    ANOP
         MNOTE 8,'***SMG012 - KEINE CASE-OF STRUKTUR'
         MEXIT
         MEND
./ ADD  NAME=$IF
         MACRO
         $IF
.*************** DEFINITIONEN *******************
.* MACLVL=001,MACDATE=09-06-1981,MACAUTHOR=JUERGEN THEWES
.*                              STRUKTURENSTACK
         GBLA  &ST1(30)         ST1(X)  = STRUKTURNUMMER
         GBLA  &ST2(30)         ST2(X)  = STRUKTURART
         GBLA  &ST3(30)         ST3(X)  = KONSEKUTIVPOINTER
         GBLA  &PT              POINTER FUER STACK
         GBLA  &CT              LFD. STRUKTURNUMMER
         AIF   ('&SYSLIST(1)' EQ '').ERR0
         AIF   (&PT EQ 30).ERR1
         AIF   (&CT EQ 999).ERR2
&CT      SETA  &CT+1
&PT      SETA  &PT+1
&ST1(&PT) SETA &CT
&ST2(&PT) SETA 2               IF-TYPE
&ST3(&PT) SETA 1               IF
         LCLA  &C1,&C2
         LCLC  &CC,&CD
&C1      SETA  1
&C2      SETA  2
.BEGIN   ANOP
         AIF   ('&SYSLIST(&C1,4)' EQ '').ERR10
         AIF   ('&SYSLIST(&C1,4)' EQ 'TM').TM00
         AIF   ('&SYSLIST(&C1,4)' EQ 'LTR').LTR00
         AIF   ('&SYSLIST(&C1,2)' EQ 'EQ').EQ00
         AIF   ('&SYSLIST(&C1,2)' EQ 'NE').NE00
         AIF   ('&SYSLIST(&C1,2)' EQ 'GT').GT00
         AIF   ('&SYSLIST(&C1,2)' EQ 'LT').LT00
         AIF   ('&SYSLIST(&C1,2)' EQ 'GE').GE00
         AIF   ('&SYSLIST(&C1,2)' EQ 'LE').LE00
         AGO   .ERR11
.EQ00    ANOP
&CC      SETC  'E'
&CD      SETC  ''
         AGO   .CONN
.NE00    ANOP
&CC      SETC  'E'
&CD      SETC  'N'
         AGO   .CONN
.GT00    ANOP
&CC      SETC  'H'
&CD      SETC  ''
         AGO   .CONN
.LT00    ANOP
&CC      SETC  'L'
&CD      SETC  ''
         AGO   .CONN
.LE00    ANOP
&CC      SETC  'H'
&CD      SETC  'N'
         AGO   .CONN
.GE00    ANOP
&CC      SETC  'L'
&CD      SETC  'N'
         AGO   .CONN
.ON00    ANOP
&CC      SETC  'O'
&CD      SETC  ''
         AGO   .CONN
.NO00    ANOP
&CC      SETC  'O'
&CD      SETC  'N'
         AGO   .CONN
.ZE00    ANOP
&CC      SETC  'Z'
&CD      SETC  ''
         AGO   .CONN
.NZ00    ANOP
&CC      SETC  'Z'
&CD      SETC  'N'
         AGO   .CONN
.CONN    ANOP
         AIF   ('&SYSLIST(&C2)' EQ 'AND').AND00
         AIF   ('&SYSLIST(&C2)' EQ 'OR').OR00
         AIF   ('&SYSLIST(&C2)' EQ '').AND00
         AGO   .ERR11
.AND00   ANOP
         AIF   ('&CD' EQ '').AND01
&CD      SETC  ''
         AGO   .AND02
.AND01   ANOP
&CD      SETC  'N'
.AND02   ANOP
         &SYSLIST(&C1,4) &SYSLIST(&C1,1),&SYSLIST(&C1,3)
         B&CD.&CC $ELSE&CT
         AGO   .CHECK
.OR00    ANOP
         &SYSLIST(&C1,4) &SYSLIST(&C1,1),&SYSLIST(&C1,3)
         B&CD.&CC $THEN&CT
.CHECK   ANOP
         AIF   ('&SYSLIST(&C2)' EQ '').END
&C1      SETA  &C1+2
&C2      SETA  &C2+2
         AGO   .BEGIN
.END     MEXIT
.TM00    ANOP
         AIF   ('&SYSLIST(&C1,2)' EQ 'ONE').ON00
         AIF   ('&SYSLIST(&C1,2)' EQ 'NOTONE').NO00
.LTR00   ANOP
         AIF   ('&SYSLIST(&C1,2)' EQ 'ZERO').ZE00
         AIF   ('&SYSLIST(&C1,2)' EQ 'NOTZERO').NZ00
         AGO   .ERR11
.ERR10   ANOP
         MNOTE 8,'***SMG004 - VERGLEICHSOPERATION FEHLT'
         MEXIT
.ERR11   ANOP
         MNOTE 8,'***SMG005 - FALSCHE BEDINGUNGSSYNTAX'
         MEXIT
         MEXIT
.ERR0    ANOP
         MNOTE 8,'***SMG002 - EIN PARAMETER IST LEER ODER FEHLT'
         MEXIT
.ERR1    ANOP
         MNOTE 8,'***SMG003 - STACKPOINTER - UEBERLAUF'
         MEXIT
.ERR2    ANOP
         MNOTE 8,'***SMG004 - STRUKTURENMAXIMUM ERREICHT'
         MEXIT
         MEND
./ ADD  NAME=JOB003
         MACRO
         JOB003
.* IEFUJV: MACRO  JOB003,  NACHLADEANFORDERUNG
.* MACLVL=001,MACDATE=09-06-1981,MACAUTHOR=JUERGEN THEWES
*
*        LADEN NEUE TABELLE
*
 LA   WORKREG2,0               : LOESCHEN REGISTER 2
 IC   WORKREG2,CVTUSER         : LADEN ALTER TABELLENINDEX
 LA   WORKREG2,1(WORKREG2)     : ERHOEHEN UM 1
 IC   WORKREG4,ALPHATAB(WORKREG2)  : LADEN KENNBUCHSTABE
 MVC  UJVEPNAM,=C'IEFUJVT'     : ENTRY POINT NAME
 STC  WORKREG4,UJVEPNAM+7
 LOAD EPLOC=UJVEPNAM,ERRET=LOADERR
 SPACE
*
*        TABELLE NICHT VORHANDEN
*
 $IF  (R15,NOTZERO,R15,LTR)
   $THEN
LOADERR  EQU   *
      MVC  0(8,JCLSADDR),UJVEPNAM        : MOVE EPLOC
      MVC  8(64,JCLSADDR),=CL64' NICHT GEFUNDEN   '
      BREAK  ID=99,'*** RELOAD ERROR ***'
   $ELSE
      MVC  0(8,JCLSADDR),UJVEPNAM        : MOVE EPLOC
      MVC  8(64,JCLSADDR),=CL64' GELADEN  '
 $END
 SPACE
*
*        UPDATE CVTUSER
*
 LA   WORKREG3,0
 IC   WORKREG3,UJV2TIND
 ST   MODADDR,UJV2TADR
 STC  WORKREG2,UJV2TIND
 MODESET  KEY=ZERO
 STC  WORKREG2,CVTUSER
 MODESET  KEY=NZERO
 SPACE
*
*        LOESCHEN ALTE TABELLE
*
 IC   WORKREG3,ALPHATAB(WORKREG3)  : LADEN KENNBUCHSTABE
 STC  WORKREG3,UJVEPNAM+7
 DELETE EPLOC=UJVEPNAM
 SPACE
 BREAK  ID=98,'*** RELOAD OK ***'
         MEND
./ ADD  NAME=JOB002
         MACRO
         JOB002
.* IEFUJV: MACRO  JOB002,  NACHLADEN TABELLE
.* MACLVL=001,MACDATE=09-06-1981,MACAUTHOR=JUERGEN THEWES
*
*        LADEN NEUE TABELLE
*
 MVI  72(JCLSADDR),C'N'        : TABELLE NACHGELADEN
 LA   WORKREG2,0               : LOESCHEN REGISTER 2
 IC   WORKREG2,CVTUSER         : LADEN NEUER TABELLENINDEX
 IC   WORKREG4,ALPHATAB(WORKREG2)  : LADEN KENNBUCHSTABE
 MVC  UJVEPNAM,=C'IEFUJVT'     : ENTRY POINT NAME
 STC  WORKREG4,UJVEPNAM+7
 LOAD EPLOC=UJVEPNAM
 SPACE
*
*        LOESCHEN ALTE TABELLE
*
 LA   WORKREG3,0               : LOESCHEN REGISTER 3
 IC   WORKREG3,UJV2TIND        : ALTER TABELLENINDEX
 ST   MODADDR,UJV2TADR
 IC   WORKREG3,ALPHATAB(WORKREG3)  : LADEN KENNBUCHSTABE
 STC  WORKREG3,UJVEPNAM+7
 DELETE EPLOC=UJVEPNAM
 SPACE
*
*        SETZEN NEUE KENNUNG
*
 STC  WORKREG2,UJV2TIND
         MEND
./ ADD  NAME=JOB001
         MACRO
         JOB001
.* IEFUJV: MACRO  JOB001,  ANFORDERN SAVEAREA
.* MACLVL=001,MACDATE=09-06-1981,MACAUTHOR=JUERGEN THEWES
*
*        ANFORDERN DER SAVEAREA
*
 MVI  72(JCLSADDR),C'G'     : GETMAIN
 ST   PARMAREA,UJVWPTW2        SAVE PARMADDR
 GETMAIN R,LV=UJV2DLEN,SP=231   ANFORDERN SAVEAREA
 ST   AREAADDR,UJVWPTW2
 MVI  UJVWERRS,0               : LOESCHEN FEHLERSCHALTER
 ST   SAVEAREA,4(AREAADDR)
 ST   AREAADDR,8(SAVEAREA)
 LR   SAVEAREA,AREAADDR
*
*        LADEN TABELLE
*
 LA   WORKREG2,0               : LOESCHEN REGISTER 2
 IC   WORKREG2,CVTUSER         : LADEN NEUER TABELLENINDEX
 IC   WORKREG4,ALPHATAB(WORKREG2)  : LADEN KENNBUCHSTABE
 MVC  UJVEPNAM,=C'IEFUJVT'     : ENTRY POINT NAME
 STC  WORKREG4,UJVEPNAM+7
 LOAD EPLOC=UJVEPNAM
 ST   MODADDR,UJV2TADR
 STC  WORKREG2,UJV2TIND
         MEND
./ ADD  NAME=JOB000
         MACRO
         JOB000
.* IEFUJV: MACRO  JOB000,  PRUEFUNG DER JOBKARTE
.* MACLVL=001,MACDATE=09-06-1981,MACAUTHOR=JUERGEN THEWES
*
*        DURCHSUCHEN DER JOBKARTE
*
 $IF  (2(JCLSADDR),NE,C' ',CLI)
   $THEN             ERSTER DURCHLAUF
     L    CVTBASE,16
     $IF  (UJV2TIND,NE,CVTUSER,CLC)
       $THEN
         JOB002
       $ELSE EMPTY
     $END
     $IF (KEYJOBN,EQ,2(JCLSADDR),CLC)
       $THEN
         $IF (KEYRELD,EQ,15(JCLSADDR),CLC)
           $THEN
             JOB003
            $ELSE EMPTY
         $END
         $IF  (KEYINFO,EQ,15(JCLSADDR),CLC)
           $THEN
             JOB004
           $ELSE EMPTY
         $END
         OI   UJVWERRS,X'80'
         BREAK  ID=90,'*KILROY WAS HERE*',RC=OK
       $ELSE EMPTY
     $END
     JOB101      ACCOUNTNUMMER FINDEN
     JOB111
     JOB112
   $ELSE EMPTY
 $END
 JOB120
         MEND
./ ADD  NAME=EXEC000
         MACRO
         EXEC000
.* IEFUJV: MACRO  EXEC000,  PRUEFUNG DER EXECKARTE
.* MACLVL=001,MACDATE=09-06-1981,MACAUTHOR=JUERGEN THEWES
*
*        DURCHSUCHEN DER EXECKARTE
*
 L   SEGBASE,UJV2EADR          : LADEN ADRESSE ACCT-ENTRY
 LA   WORKREG1,2(JCLSADDR)     : ANFANG DER SUCHE
 LA   WORKREG2,65(JCLSADDR)    : ENDE DER SUCHE
 $REPEAT
   $CASE  (0(WORKREG1),CLC),(PGM,PERFORM,DPRTY)
     $OF  PGM
       LA  WORKREG1,L'PGM(WORKREG1)
       $IF  (UJVTASWI,NOTONE,UJVTASPG,TM)
         $THEN
           L   WORKREG4,UJV2TADR        : LADEN TABELLENADRESSE
           L   WORKREG4,4(WORKREG4)     : LADEN PROGRAMMADRESSE
           IC  WORKREG3,8(WORKREG4)
           $WHILE  (0(WORKREG4),NE,X'FF',CLI)
             $DO
             $IF  (WORKREG3,EQ,EXCLC2,EX)
               $THEN
                 BREAK  ID=08,'PROGRAMMNAME IST RESERVIERT'
               $ELSE EMPTY
             $END
             LA  WORKREG4,9(WORKREG4)
             IC  WORKREG3,8(WORKREG4)
           $END
         $ELSE EMPTY
       $END
     $OF  PERFORM
       LA  WORKREG1,L'PERFORM(WORKREG1)
       $IF  (UJVTASWI,NOTONE,UJVTASPF,TM)
         $THEN
           BREAK  ID=06,'PERFORM ANGABE NICHT ERLAUBT'
         $ELSE  EMPTY
       $END
     $OF  DPRTY
        LA  WORKREG1,L'DPRTY+1(WORKREG1)
        LR  WORKREG3,WORKREG1
        CVPRTY  WORKREG3,WORKREG4,UJV2AREA
        $IF  (1(WORKREG1),NE,C',',CLI)
          $THEN
            LA  WORKREG1,1(WORKREG1)
          $ELSE EMPTY
        $END
        LA  WORKREG1,2(WORKREG1)
        LR  R0,WORKREG4
        LR  WORKREG3,WORKREG1
        CVPRTY  WORKREG3,WORKREG4,UJV2AREA
        MH  R0,=H'16'
        ALR WORKREG4,R0
        STC WORKREG4,UJV2AREA
        $IF  (UJVTADPL,LT,UJV2AREA,CLC)
          $THEN
            BREAK  ID=09,'DPRTY LIMIT UEBERSCHRITTEN'
          $ELSE  EMPTY
        $END
      $OF  OTHERS
    $END
 LA   WORKREG1,1(WORKREG1)
 $UNTIL  (WORKREG1,GE,WORKREG2,CR)
 $END
         MEND
./ ADD  NAME=DD000
         MACRO
         DD000
.* IEFUJV: MACRO  DD000,  PRUEFUNG DER DD-KARTE
.* MACLVL=001,MACDATE=09-06-1981,MACAUTHOR=JUERGEN THEWES
*
*        DURCHSUCHEN DER DD-KARTE
*
 L   SEGBASE,UJV2EADR          : LADEN ADRESSE ACCT-ENTRY
 $IF  (UJVTASWI,NOTONE,UJVTASDD,TM)
   $THEN
     L   WORKREG4,UJV2TADR        : LADEN TABELLENADRESSE
     L   WORKREG4,8(WORKREG4)     : LADEN PROGRAMMADRESSE
     IC  WORKREG3,8(WORKREG4)
     $WHILE  (0(WORKREG4),NE,X'FF',CLI)
       $DO
       $IF  (WORKREG3,EQ,EXCLC3,EX)
         $THEN
           BREAK  ID=10,'DD-NAME IST RESERVIERT'
         $ELSE EMPTY
       $END
       LA   WORKREG4,9(WORKREG4)
       IC   WORKREG3,8(WORKREG4)
     $END
   $ELSE  EMPTY
 $END
         MEND
./ ADD  NAME=CVPRTY
         MACRO
         CVPRTY  &R1,&R2,&AREA
.* IEFUJV: MACRO  CVPRTY,  UMWANDLUNG PRTY,DPRTY
.* MACLVL=001,MACDATE=09-06-1981,MACAUTHOR=JUERGEN THEWES
 MVC  &AREA,0(&R1)             : WORKAREA
 NI   &AREA,X'0F'              : LOESCHEN BITS 4-7
 LA   &R2,0
 IC   &R2,&AREA                : LADEN ZAHL
 $IF  (&AREA+1,ONE,X'F0',TM)   : NUMERISCH
   $THEN
     LR  &R1,&R2
     MH  &R1,=H'10'            : *10
     NI  &AREA+1,X'0F'         : DTO.
     IC  &R2,&AREA+1
     ALR &R2,&R1               : ADDIEREN
   $ELSE EMPTY
 $END
         MEND
./ ADD  NAME=BREAK
         MACRO
         BREAK   &ID=00,&MSG,&RC=CANCEL,&RELOAD=YES
.* IEFUJV: MACRO  BREAK,   RETURN IMMEDIATELY
.* MACLVL=001,MACDATE=09-06-1981,MACAUTHOR=JUERGEN THEWES
         AIF   ('&MSG' EQ '').NOWTO
*
*        AUSGEBEN  NACHRICHT
*
         WTO  'IEFUJV&ID - '&MSG.'',                                   X
               ROUTCDE=11
         OI    UJVWERRS,X'80'        FEHLERSCHALTER SETZEN
.NOWTO   ANOP
*
*        RESTORE DER REGISTER, RUECKSPRUNG
*
         AIF  ('&RELOAD' EQ 'NO').NOREL
         L     SAVEAREA,4(SAVEAREA)
.NOREL   ANOP
         LM    R14,R12,12(R13)
         LA    R15,&RC              : ABBRUCH
         BR    R14                  : RUECKSPRUNG
         MEND
./ ADD  NAME=ASMTABLE
//Z1112ASM JOB (90110210,70010000),THEWES,MSGLEVEL=1,MSGCLASS=3,
//      CLASS=U
//*********************************************************************
//*           UNWANDELN  IEFUJV-TABELLE                               *
//*********************************************************************
//WANDEL EXEC ASMFCL,PARM.LKED='LIST,XREF,RENT'
//ASM.SYSIN DD *
 PRINT NOGEN
 UJVDEF  IEFUJVTB
 UJVACCT 9411066000210,OCLASS=PROD,CLASS=0 MUSTER
 UJVACCT 9311065000210,OCLASS=PROD,CLASS=0 WWV
 UJVACCT 9211064000210,OCLASS=PROD,CLASS=0 DFC
 UJVACCT 9100070280205,OCLASS=TEST,CLASS=1 RZ-BERICHTSWESEN
 UJVACCT 9100070270205,OCLASS=TEST,CLASS=1 JCL-GENERATOR
 UJVACCT 9100070250205,OCLASS=TEST,CLASS=1 RZ-VERWALTUNG
 UJVACCT 9011021060010,PTLIM=13,DPLIM=250,OCLASS=PROD,CLASS=0,         X
               RESDD=YES,RESPGM=YES SYSTEMPROGR., EXITS USW
 UJVACCT 9011021040010,PTLIM=13,DPLIM=250,OCLASS=PROD,CLASS=0,         X
               RESDD=YES,RESPGM=YES KUNDENBETR. OHNE BERECHN.
 UJVACCT 9011021030010,PTLIM=13,DPLIM=250,OCLASS=PROD,CLASS=0,         X
               RESDD=YES,RESPGM=YES KUNDENBETR. SERVODATA
 UJVACCT 9011021020010,OCLASS=PROD,CLASS=0 SYSTEMLITERATUR
 UJVACCT 9011021010010,PTLIM=13,DPLIM=250,OCLASS=PROD,CLASS=0,         X
               RESDD=YES,RESPGM=YES MITARBEITERUNTERST.
 UJVACCT 7811057380170,PTLIM=13,OCLASS=PROD,CLASS=0 BVR PROGNOSE
 UJVACCT 7811057100170,PTLIM=13,OCLASS=PROD,CLASS=0 GBI ZENTR.PROD.
 UJVACCT 7811017000185,PTLIM=13,OCLASS=PROD,CLASS=0 BVR STATISTIK
* RESERVIERTE DDNAMEN
 UJVDDNAM  JOBCAT,STEPCAT
* RESERVIERTE PROGRAMMNAMEN
 UJVPROG HMASPZAP,IMASPZAP,AMASPZAP,SYS007SZ
* KLASSENGRUPPENTABELLE
 UJVCLASS 56789ABCDEFGHIJKLMNOPQRSTUVWXYZ,IJKLMNFGHO,02U
 END
//LKED.SYSLMOD DD DSN=BIK.SVCLIB,DISP=SHR
//LKED.SYSIN DD *
 SETCODE AC(1)
 SETSSI 1112XXXX
 NAME IEFUJVT(R)
/*
//COPY1   EXEC PGM=IEBCOPY,COND=(0,NE)
//SYSPRINT DD  SYSOUT=*
//SYSUT3   DD  UNIT=SYSDA,SPACE=(CYL,(5,5))
//SYSUT4   DD  UNIT=SYSDA,SPACE=(CYL,(5,5))
* BIK.UJVTAB IST MIT SYS1.LINKLIB VERKETTET
//OUT      DD  DSN=BIK.UJVTAB,DISP=SHR
//IN       DD  DSN=BIK.SVCLIB,DISP=SHR
//SYSIN    DD  *
 COPY  I=((IN,R)),O=OUT
 S M=((IEFUJVT,IEFUJVTA,R))
/*
//COPY2   EXEC PGM=IEBCOPY,COND=(0,NE)
//SYSPRINT DD  SYSOUT=*
//SYSUT3   DD  UNIT=SYSDA,SPACE=(CYL,(5,5))
//SYSUT4   DD  UNIT=SYSDA,SPACE=(CYL,(5,5))
//OUT      DD  DSN=BIK.UJVTAB,DISP=SHR
//IN       DD  DSN=BIK.SVCLIB,DISP=SHR
//SYSIN    DD  *
 COPY  I=((IN,R)),O=OUT
 S M=((IEFUJVT,IEFUJVT?,R))
/*
./ ADD  NAME=ASMEXIT
//Z1112UJV JOB (90110210,00010000,007),'SYSPROG-THEWES',CLASS=U,
//   MSGCLASS=3,MSGLEVEL=1
//ASSEM   EXEC ASMFCL,
//        PARM.LKED='LIST,XREF,MAP,LET,RENT,AC=1'
//ASM.SYSLIB DD DSN=SYS1.AMODGEN,DISP=SHR
//           DD DSN=SYS1.MACLIB,DISP=SHR
//           DD DSN=BIK.UJVGEN,DISP=SHR
//ASM.SYSIN DD *
****
*
*     GENERIERUNGSMACRO UJVGEN :
*     --------------------------
*
*     JOBNAME....: AKTIONSJOBNAME (INFO,NACHLADEN UND BYPASS CHECK)
*     INFO.......: AKTIONSACCOUNTNUMMER FUER INFOFUNKTION
*     RELOAD.....: AKTIONSACCOUNTNUMMER FUER NACHLADEFUNKTION
*     PRINT......: LOGIC(KEINE MAC-AUFLOESUNG) OR ASSEMBLY
*
****
   UJVGEN      JOBNAME=BKSMFAKT,INFO=9011089600005001,                 X
               RELOAD=9011086900005002,PRINT=ASSEMBLY
         END
//LKED.SYSLMOD DD DSN=SYS1.LPALIB(IEFUJV),DISP=SHR
//LKED.SYSIN DD *
 SETSSI 11121207
/*
./ ADD  NAME=UJVACCT
         MACRO
         UJVACCT   &ACCTNO,&CLASS=0,&DPLIM=0,&PTLIM=6,&EXPDT=99999,    X
               &RESDD=NO,&RESPGM=NO,&OCLASS=TEST,&PERFORM=NO,          X
               &DSECT=NO
.* MACLVL=001,MACDATE=09-06-1981,MACAUTHOR=JUERGEN THEWES
         GBLA  &ACCTTBL
&ACCTTBL SETA  1
         AIF   ('&DSECT' EQ 'YES').DSECT
         GBLB      &EQUT
         LCLB      &B(8)
         LCLA      &V
&V       SETA  &SYSNDX
.*    DIESES MACRO GENERIERT DIE ACCOUNTNUMMERNTABELLENEINTRAGUNGEN
         AIF    (&EQUT).BEGIN
UJVACCT  EQU    *
&EQUT    SETB   1
.BEGIN   ANOP
         AIF   ('&ACCTNO' EQ '').ERR0
         AIF (&PTLIM GT 15).ERR1
         AIF (&CLASS GT 15).ERR5
         AIF ('&ACCTNO' GT '9999999999999999').ERR4
         AIF (&DPLIM GT 255).ERR2
         AIF (&EXPDT GT 99999).ERR3
&B(1)    SETB   ('&RESDD' EQ 'YES')
&B(2)    SETB   ('&OCLASS' EQ 'PROD')
&B(3)    SETB   ('&PERFORM' EQ 'YES')
&B(4)    SETB   ('&RESPGM' EQ 'YES')
.* TABELLENENTRY
$&V      DC    C'&ACCTNO.'               ACCOUNTNUMMER
         ORG   $&V.+16
         DC    AL1(L'$&V.-1)             SIGN. LAENGE
         DC    AL1(&CLASS.*4)            PTR ZUR KLASSENTABELLE
         DC    AL1(&DPLIM.)              DPRTY LIMIT
         DC    AL1(&PTLIM.)              PRTY LIMIT
         DC    PL3'&EXPDT.'              EXPDT
         DC    B'0000&B(4).&B(3).&B(2).&B(1).'  OPTIONS
         MEXIT
.DSECT   ANOP
UJVTACCT DSECT
UJVTAANR DS    CL16               ACCOUNTNUMMER
UJVTAANL DS    C                  SIGNIFIKANTE LAENGE
UJVTACLP DS    C                  PTR ZUR KLASSENTABELLE
UJVTADPL DS    C                  DPRTY LIMIT
UJVTAPTL DS    C                  PRTY LIMIT
UJVTAEXP DS    CL3                EXPDT
UJVTASWI DS    C                  OPTIONS
UJVTASDD EQU   1                  RESERVIERTE DD NAMEN
UJVTASOU EQU   2                  OUTPUT CLASS AUSNAHME
UJVTASPF EQU   4                  PERFORM ANGABE
UJVTASPG EQU   8                  RESERVIERTE PROGRAMMNAMEN
UJVTALEN EQU   *-UJVTAANR
         MEXIT
.ERR0    ANOP
         MNOTE  8,'*** ACCOUNTNUMMER IST LEER'
         MEXIT
.ERR1    ANOP
         MNOTE  8,'*** PTLIM GROESSER ALS 15'
         MEXIT
.ERR2    ANOP
         MNOTE  8,'*** DPLIM GROESSER ALS 255'
         MEXIT
.ERR3    ANOP
         MNOTE  8,'*** EXPDT UNGUELTIG'
         MEXIT
.ERR4    ANOP
         MNOTE  8,'*** ACCOUNTNUMMER ZU LANG'
         MEXIT
.ERR5    ANOP
         MNOTE  8,'*** CLASS GROESSER 15'
         MEXIT
         END
./ ADD  NAME=UJVCLASS
         MACRO
         UJVCLASS
         GBLA  &ACCTTBL
.* MACLVL=001,MACDATE=09-06-1981,MACAUTHOR=JUERGEN THEWES
         AIF   (&ACCTTBL NE 1).OK
&ACCTTBL SETA  2
         DC    X'FF'       ENDE DER TABELLE
.OK      ANOP
.*  DIESES MACRO GENERERIERT DIE KLASSENTABELLEN
UJVCLASS DC    A(CLS00)
         DC    A(CLS01)
         DC    A(CLS02)
         DC    A(CLS03)
         DC    A(CLS04)
         DC    A(CLS05)
         DC    A(CLS06)
         DC    A(CLS07)
         DC    A(CLS08)
         DC    A(CLS09)
         DC    A(CLS10)
         DC    A(CLS11)
         DC    A(CLS12)
         DC    A(CLS13)
         DC    A(CLS14)
         DC    A(CLS15)
CLS00    DC    C'&SYSLIST(1).*'
CLS01    DC    C'&SYSLIST(2).*'
CLS02    DC    C'&SYSLIST(3).*'
CLS03    DC    C'&SYSLIST(4).*'
CLS04    DC    C'&SYSLIST(5).*'
CLS05    DC    C'&SYSLIST(6).*'
CLS06    DC    C'&SYSLIST(7).*'
CLS07    DC    C'&SYSLIST(8).*'
CLS08    DC    C'&SYSLIST(9).*'
CLS09    DC    C'&SYSLIST(10).*'
CLS10    DC    C'&SYSLIST(11).*'
CLS11    DC    C'&SYSLIST(12).*'
CLS12    DC    C'&SYSLIST(13).*'
CLS13    DC    C'&SYSLIST(14).*'
CLS14    DC    C'&SYSLIST(15).*'
CLS15    DC    C'&SYSLIST(16).*'
         MEND
./ ADD  NAME=UJVDDNAM
         MACRO
         UJVDDNAM
         LCLA  &C
.* MACLVL=001,MACDATE=09-06-1981,MACAUTHOR=JUERGEN THEWES
         GBLA  &ACCTTBL
         AIF   (&ACCTTBL NE 1).OK
&ACCTTBL SETA  2
         DC    X'FF'       ENDE DER TABELLE
.OK      ANOP
.* DIESES MACRO DEFINIERT DIE RESERVIERTEN DDNAMEN
.* FUER DEN EXIT IEFUJV
UJVDDNAM EQU   *          * DDNAMEN TABELLE
.BEGIN   ANOP
&C       SETA  &C+1
         AIF   ('&SYSLIST(&C)' EQ '').END
$DD&C    DC   C'&SYSLIST(&C).'
         ORG   $DD&C.+8
         DC    AL1(L'$DD&C.-1)
         AGO  .BEGIN
.END     DC   8X'FF'         * TABELLENENDE
         MEXIT
         MEND
./ ADD  NAME=UJVDEF
         MACRO
         UJVDEF   &NAME
.* DIESES MACRO DEFINIERT DEN TABELLENKOPF FUER DEN EXIT IEFUJV
.* MACLVL=001,MACDATE=09-06-1981,MACAUTHOR=JUERGEN THEWES
         AIF  ('&NAME' NE 'IEFUJVTB').ERR01
&NAME    CSECT
*  ADRESSKONSTANTEN
         DC   A(UJVACCT)     * ANFANG ACCOUNTNUMMERTABELLE
         DC   A(UJVPROG)     * ANFANG TABELLE RESERVIERTE PGM-NAMEN
         DC   A(UJVDDNAM)    * ANFANG TABELLE RESERVIERTE DD-NAMEN
         DC   A(UJVCLASS)    * ANFANG KLASSENTABELLE
         MEXIT
.ERR01   ANOP
         MNOTE  8,'UJVDEF - TABELLENNAME FALSCH'
         END
./ ADD  NAME=UJVGEN
         MACRO
&LBL     UJVGEN  &JOBNAME=,&RELOAD=,&INFO=,&PRINT=NO
         LCLC  &PRINT1,&PRINT2
.* MACLVL=001,MACDATE=09-06-1981,MACAUTHOR=JUERGEN THEWES
&PRINT1  SETC  'GEN'
&PRINT2  SETC  'ON'
         AIF   ('&PRINT' EQ 'ASSEMBLY').LBL2
&PRINT1  SETC  'NOGEN'
         AIF  ('&PRINT' EQ 'LOGIC').LBL2
&PRINT2  SETC  'OFF'
.LBL2    ANOP
         PRINT &PRINT2,&PRINT1
         TITLE 'IEFUJV - HAUPTSTEUERMODUL'
         SPACE 3
******************************************************************
*                                                                *
*      SMF-EXIT  IEFUJV      (JOB VALIDATION EXIT)               *
*      -------------------------------------------               *
*                                                                *
*      MODULE LEVEL...:  001.01                                  *
*      LEVEL DATE.....:  09-06-1981                              *
*      AUTHOR.........:  JUERGEN THEWES                          *
*                                                                *
*      INSTALLATION...:  BIK GMBH, FRIEDR.-EBERT-ANLAGE 2-14     *
*                                  6000 FRANKFURT/MAIN           *
*                                                                *
******************************************************************
         EJECT
*
*        INITIALISIERUNG
*
 UJVREGEQ
 UJVINIT
*
*        VERARBEITUNG
*
 $IF  (UJVWERRS,NOTONE,X'80',TM)
   $THEN
     $CASE  (0(JCLTADDR),CLI),(JOBCARD,EXECCARD,DDCARD)
         TITLE ' IEFUJV ,  VERARBEITEN DER JOBKARTE'
       $OF  JOBCARD
         JOB000
         TITLE ' IEFUJV ,  VERARBEITEN DER EXECKARTE'
       $OF  EXECCARD
         EXEC000
         TITLE ' IEFUJV ,  VERARBEITEN DER DD-KARTE'
       $OF  DDCARD
         DD000
         EJECT
       $OF  OTHERS
     $END
   $ELSE
         MVC  72(8,JCLSADDR),=C'**BYPC**'
 $END
*
*        NORMALES ENDE
*
 L    SAVEAREA,4(SAVEAREA)
 LM   R14,R12,12(SAVEAREA)
 LA   RETCODE,OK
 BR   RETADDR
         TITLE 'IEFUJV - KONSTANTEN'
PERFORM  DC    C'PERFORM='
MSGCLASS DC    C'MSGCLASS='
PGM      DC    C'PGM='
PRTY     DC    C'PRTY='
DPRTY    DC    C'DPRTY='
ALPHATAB DC    C'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
KEYJOBN  DC    C'&JOBNAME'
KEYRELD  DC    C'&RELOAD'
KEYINFO  DC    C'&INFO'
IEFINFO  DC    CL78'IEFUJVTX IST MOMENTAN AKTIV'
JOBCARD  EQU   1
EXECCARD EQU   2
DDCARD   EQU   4
COMPLETE EQU   16
EXCLC1   CLC   UJVTAANR(0),UJV2ACCT      : ACCOUNTNUMMER
EXCLC2   CLC   0(0,WORKREG4),0(WORKREG1) : PGM NAME
EXCLC3   CLC   0(0,WORKREG4),2(JCLSADDR) : DD NAME
         LTORG
         TITLE 'DUMMY - SECTIONS'
         UJVWORK
         UJVWORK2
         UJVACCT DSECT=YES
         CVT     DSECT=YES,LIST=YES
         MEND
./ ADD  NAME=UJVINIT
         MACRO
         UJVINIT
.* IEFUJV: MACRO  UJVINIT,   INITIIERUNG DES EXITS
.* MACLVL=001,MACDATE=09-06-1981,MACAUTHOR=JUERGEN THEWES
 $PROGRAM IEFUJV
*
*        DEFINITION DER USING-ANWEISUNGEN
*
 USING IEFUJV,BASEREG    ADRESSIERUNG DES EXITS
 USING UJVWORK2,WRK2ADDR ADRESSIERUNG DER WORKAREA2 (LSQA)
 USING UJVTACCT,SEGBASE  ADRESSIERUNG DER ACCT-TABELLE
 USING UJVWORK,CEPAADDR  ADRESSIERUNG DER CEPA
 USING CVT,CVTBASE       ADRESSIERUNG DER CVT
*
*        SICHERN DER REGISTER, EINRICHTEN DER BASISADRESSE
*
 SAVE  (14,12)         SICHERN REGISTER
 LR    BASEREG,R15     BASISADRESSE UMLADEN
 LM    CEPAADDR,JCLTADDR,0(PARMAREA)
 $IF  (UJVWSWIT,ONE,UJVWSTSO,TM)
  $THEN
     BREAK  RC=OK,RELOAD=NO
  $ELSE EMPTY
 $END
 $IF  (0(JCLTADDR),GE,COMPLETE,CLI)
  $THEN
     NI  UJVWERRS,X'7F'
     BREAK  RC=OK,RELOAD=NO
  $ELSE EMPTY
 $END
 L     WORKREG1,UJVWPTW2
 $IF  (WORKREG1,ZERO,WORKREG1,LTR)
   $THEN
     JOB001
   $ELSE
*
*        SAVE AREA CHAINING
*
 ST   WORKREG1,8(SAVEAREA)
 ST   SAVEAREA,4(WORKREG1)
 LR   SAVEAREA,WORKREG1
 $END
         MEND
./ ADD  NAME=UJVPROG
         MACRO
         UJVPROG
         LCLA  &C
.* MACLVL=001,MACDATE=09-06-1981,MACAUTHOR=JUERGEN THEWES
         GBLA  &ACCTTBL
         AIF   (&ACCTTBL NE 1).OK
&ACCTTBL SETA  2
         DC    X'FF'       ENDE DER TABELLE
.OK      ANOP
.* DIESES MACRO DEFINIERT DIE RESERVIERTEN PROGRAMMNAMEN
.* FUER DEN EXIT IEFUJV
UJVPROG  EQU   *          * PROGRAMM TABELLE
.BEGIN   ANOP
&C       SETA  &C+1
         AIF   ('&SYSLIST(&C)' EQ '').END
$PG&C    DC   C'&SYSLIST(&C).'
         ORG   $PG&C.+8
         DC    AL1(L'$PG&C.-1)
         AGO  .BEGIN
.END     DC   8X'FF'         * TABELLENENDE
         MEXIT
         MEND
./ ADD  NAME=UJVREGEQ
         MACRO
         UJVREGEQ
.* IEFUJV: MACRO  UJVREGEQ,  REGISTER EQUATES
.* MACLVL=001,MACDATE=09-06-1981,MACAUTHOR=JUERGEN THEWES
MODADDR  EQU   0               @ DER AREA BEI LOAD
AREAADDR EQU   1               @ DER AREA BEI GETMAIN
PARMAREA EQU   1               @ DER PARAMETERLISTE
CEPAADDR EQU   2               @ DER COMMON EXIT PARAMETER AREA
JCLSADDR EQU   3               @ DER AKTUELLEN JCL STATEMENT KARTE
JCLTADDR EQU   4               @ DES JCL STATEMENT TYP INDIKATORS
CVTBASE  EQU   5               @ DER CVT
WRK2ADDR EQU   13              @ DER WORKAREA IN DER SQA
BASEREGT EQU   6               @ DER PARAMETERTABELLE
SEGBASE  EQU   7               @ DES SEGMENTS IN DER TABELLE
BASEREG  EQU   8               BASISREGISTER
WORKREG1 EQU   9               WORKREGISTER
WORKREG2 EQU   10              WORKREGISTER
WORKREG3 EQU   11              WORKREGISTER
WORKREG4 EQU   12              WORKREGISTER
SAVEAREA EQU   13              @ DER SAVEAREA
RETADDR  EQU   14              RETURN @
RETCODE  EQU   15              RETURNCODE REGISTER
OK       EQU   0               RETURNCODE 0
CANCEL   EQU   4               RETURNCODE 4
         MEND
./ ADD  NAME=UJVWORK
         MACRO
         UJVWORK
.* IEFUJV: MACRO  UJVWORK,  DSECT FUER PARAMETER AREA
.* MACLVL=001,MACDATE=09-06-1981,MACAUTHOR=JUERGEN THEWES
UJVWORK  DSECT
UJVWJOBN DS    CL8             JOBNAME
         DS    CL4             NICHT BENUTZT
UJVWDATE DS    CL4             DATUM
         DS    CL4             NICHT BENUTZT
UJVEPNAM DS    CL8             ENTRY POINT NAME
UJVWSTEP DS    C               STEP NUMMER
UJVWSWIT DS    CL2             SCHALTER
UJVWSTSO EQU   X'01'           BIT 7 : TSO LOGON
UJVWJCLS DS    C               JOB KLASSE
UJVWERRS DS    0C              FEHLERSCHALTER
UJVWPTW2 DS    CL4             POINTER AUF 80 BYTE WORKAREA IN SQA
         MEND
./ ADD  NAME=UJVWORK2
         MACRO
         UJVWORK2
.* IEFUJV: MACRO  UJVWORK2,  DSECT FUER WORKAREA IN CSA
UJVWORK2 DSECT
UJV2SAVE DS    18F             SAVEAREA
UJV2TIND DS    0C              TABELLENINDIKATOR
UJV2TADR DS    F               TABELLENADRESSE
UJV2EADR DS    F               ACCT-ENTRY-ADRESSE
         ORG   UJV2SAVE+12     REDEFINITION
UJV2ACCT DS    CL16            ACCTNO WORKAREA
UJV2AREA DS    CL2             CONVERT WORK AREA
         ORG   UJV2EADR+4
UJV2DLEN EQU   *-UJV2SAVE      LAENGE
         MEND
./ ADD  NAME=JOB120
         MACRO
         JOB120
.* IEFUJV: MACRO  JOB120,  PRUEFUNG DER ANGABEN
.* MACLVL=001,MACDATE=09-06-1981,MACAUTHOR=JUERGEN THEWES
*
*        DURCHSUCHEN DER JOBKARTE
*
 L   SEGBASE,UJV2EADR          : LADEN ADRESSE ACCT-ENTRY
 LA   WORKREG1,2(JCLSADDR)     : ANFANG DER SUCHE
 LA   WORKREG2,65(JCLSADDR)    : ENDE DER SUCHE
 $REPEAT
   $CASE  (0(WORKREG1),CLC),(MSGCLASS,PERFORM,PRTY)
     $OF  MSGCLASS
       LA  WORKREG1,L'MSGCLASS(WORKREG1)
       $IF  (UJVTASWI,NOTONE,UJVTASOU,TM)
         $THEN
           $IF  (0(WORKREG1),NE,C'9',CLI),AND,(0(WORKREG1),NE,C'3',CLI)
             $THEN
               BREAK  ID=03,'FALSCHE MSGCLASS'
             $ELSE  EMPTY
           $END
         $ELSE  EMPTY
       $END
     $OF  PERFORM
       LA  WORKREG1,L'PERFORM(WORKREG1)
       $IF  (UJVTASWI,NOTONE,UJVTASPF,TM)
         $THEN
           BREAK  ID=06,'PERFORM ANGABE NICHT ERLAUBT'
         $ELSE  EMPTY
       $END
     $OF  PRTY
        LA  WORKREG1,L'PRTY(WORKREG1)
        LR  WORKREG3,WORKREG1
        CVPRTY  WORKREG3,WORKREG4,UJV2AREA
        STC WORKREG4,UJV2AREA
        $IF  (UJVTAPTL,LT,UJV2AREA,CLC)
          $THEN
            BREAK  ID=07,'PRTY LIMIT UEBERSCHRITTEN'
          $ELSE  EMPTY
        $END
      $OF  OTHERS
    $END
 LA   WORKREG1,1(WORKREG1)
 $UNTIL  (WORKREG1,GE,WORKREG2,CR)
 $END
         MEND
./ ADD  NAME=JOB112
         MACRO
         JOB112
.* IEFUJV: MACRO  JOB112,  KLASSENTEST
.* MACLVL=001,MACDATE=09-06-1981,MACAUTHOR=JUERGEN THEWES
 L    SEGBASE,UJV2EADR         : ADRESSE DES ENTRYS
 LA   WORKREG1,0
 IC   WORKREG1,UJVTACLP        : KLASSENART
 L    SEGBASE,UJV2TADR         : TABELLENADRESSE
 L    SEGBASE,12(SEGBASE)       : KLASSENTABELLE
 L    WORKREG1,0(SEGBASE,WORKREG1)  : KLASSENLISTE
 $WHILE  (UJVWJCLS,NE,0(WORKREG1),CLC),AND,(0(WORKREG1),NE,C'*',CLI)
 $DO
   LA   WORKREG1,1(WORKREG1)    : NAECHSTES ENTRY
 $END
 SPACE
 $IF  (0(WORKREG1),EQ,C'*',CLI)   : NICHT GEFUNDEN
   $THEN
     BREAK  ID=02,'KLASSE NICHT ERLAUBT'
   $ELSE  EMPTY
 $END
         MEND
./ ADD  NAME=JOB111
         MACRO
         JOB111
.* IEFUJV: MACRO  JOB111,  TEST JOBNAME AUF TESTJOB
.* MACLVL=001,MACDATE=09-06-1981,MACAUTHOR=JUERGEN THEWES
 L    SEGBASE,UJV2EADR         : ADRESSE DES ACCTNO-ENTRYS
 $IF  (UJV2ACCT+3,EQ,C'0',CLI)
   $THEN
     $IF  (UJVWJOBN,NE,C'Z',CLI),OR,                                   X
               (UJVWJOBN+1,NOTONE,X'F0',TM),OR,                        X
               (UJVWJOBN+2,NOTONE,X'F0',TM),OR,                        X
               (UJVWJOBN+3,NOTONE,X'F0',TM),OR,                        X
               (UJVWJOBN+4,NOTONE,X'F0',TM)
       $THEN
         BREAK  ID=04,'KEIN TESTJOBNAME'
       $ELSE  EMPTY
     $END
   $ELSE  EMPTY
 $END
         MEND
./ ADD  NAME=JOB101
         MACRO
         JOB101
.* IEFUJV: MACRO  JOB101,  FINDEN ACCOUNTNUMMER
.* MACLVL=001,MACDATE=09-06-1981,MACAUTHOR=JUERGEN THEWES
*
*        AUFFINDEN DER ACCOUNTUNUMMER AUF DER JOBKARTE
*
  LA   WORKREG1,2(JCLSADDR)     ANFANG DER SUCHE
  LA   WORKREG2,20(JCLSADDR)    ENDE DER SUCHE
 $REPEAT
   LA    WORKREG1,1(WORKREG1)
 $UNTIL  (=CL5' JOB',EQ,0(WORKREG1),CLC),OR,(WORKREG1,EQ,WORKREG2,CR)
 $END
 SPACE
*
*        EXTRAHIEREN DER ACCOUNTNUMMER
*
 LA   WORKREG1,4(WORKREG1)
 $IF  (0(WORKREG1),EQ,C'(',CLI)
   $THEN
     LA    WORKREG1,1(WORKREG1)
   $ELSE EMPTY
 $END
 MVC  UJV2ACCT(8),0(WORKREG1)
 $IF  (8(WORKREG1),EQ,C',',CLI)
   $THEN
     LA  WORKREG1,1(WORKREG1)
   $ELSE EMPTY
 $END
 MVC  UJV2ACCT+8(8),8(WORKREG1)
 SPACE
*
*        SUCHEN DER ACCOUNTNUMMER IN DER ACCOUNTNUMMERNTABELLE
*
 L    SEGBASE,UJV2TADR       : LADEN DER TABELLENADRESSE
 L    SEGBASE,0(SEGBASE)     : LADEN DER ENTRY-ADRESSE
 IC   WORKREG2,UJVTAANL      : LADEN DER ERSTEN ENTRY-LAENGE
 $WHILE  (WORKREG2,NE,EXCLC1,EX),AND,(UJVTAANR,NE,X'FF',CLI)
 $DO
   LA    SEGBASE,UJVTALEN(SEGBASE)  : NAECHSTES ENTRY
   IC    WORKREG2,UJVTAANL          : LAENGE DES NAECHSTEN ENTRYS
 $END
 SPACE
 $IF  (UJVTAANR,EQ,X'FF',CLI)     : ENTRY NICHT GEFUNDEN
   $THEN
     BREAK  ID=01,'ACCOUNTNUMMER NICHT GEFUNDEN'
   $ELSE  EMPTY
 $END
*
*        PRUEFEN, OB EXPDT ERREICHT
*
 $IF  (UJVTAEXP,LT,UJVWDATE+1,CLC)
   $THEN
     BREAK   ID=05,'GUELTIGKEIT DER ACCT-NUMMER ABGELAUFEN'
   $ELSE EMPTY
 $END
*
*        SICHERN DER ENTRY ADRESSE
*
 ST    SEGBASE,UJV2EADR
         MEND
./ ADD  NAME=JOB004
         MACRO
         JOB004
.* IEFUJV: MACRO  JOB004,  TABELLENINFO
.* MACLVL=001,MACDATE=09-06-1981,MACAUTHOR=JUERGEN THEWES
*
*        LADEN INDEX
*
 LA   WORKREG2,0               : LOESCHEN REGISTER 2
 IC   WORKREG2,CVTUSER         : LADEN ALTER TABELLENINDEX
 IC   WORKREG4,ALPHATAB(WORKREG2)  : LADEN KENNBUCHSTABE
 MVC  2(78,JCLSADDR),IEFINFO   : EINSETZEN TEXT
 STC  WORKREG4,9(JCLSADDR)
 BREAK  ID=97,'*** INFO ***'
         MEND
