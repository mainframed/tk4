*
* PROGRAM INITIALISATION STEP
*
         PRINT NOGEN
SYSTIMSG LPCID TITLE='MESSAGE HANDLER INSERT ROUTINE'
         LCNVE SYSTIMSG,12
         INIT  10,(IMSGCSCT,IMSGCSLE)       GET PROGRAM WORK AREA
         USING IMSGCSCT,10                  GET ARRESSIBILITY
         ST    1,SAVEPARM                   SAVE ADDRESS OF PARM LIST
         EJECT
*
* GENERAL PROGRAM LOGIC
*
         L     7,4(1)                       GET ADDRESS OF MESSAGE AREA
         MVC   MSGWORK(120),0(7)            SAVE MESSAGE IN WORK AREA
         MVI   0(7),C' '                    CLEAR MESSAGE AREA
         MVC   1(119,7),0(7)
         ICM   8,8,4(1)                     GET MESSAGE LENGTH IN REG8
         SRL   8,24                         CLEAR HIGH ORDER
         LA    9,MSGWORK                    GET INPUT MESSAGE ADDRESS
         STM   7,9,LRSAREA1                 SAVE INPUT/OUTPUT ADDRESSES
LOOP     LM    7,9,LRSAREA1                 LOAD INPUT/OUTPUT ADDRESSES
         BAL   14,GAOLP                     GET ADDR. LEFT PARENTHESIS
         TM    ACTFLAGS,ACTFEOP             Q. NO MORE PARMS IN MESSAGE
         BO    FRMSG                        A. YES- MOVE REST OF MSG
         BAL   14,GAORP                     GET ADDR. RIGTH PARENTHESIS
         BAL   14,ISRTPRM                   INSERT REQUESTED PARM
         B     LOOP                         MAKE LOOP FOR NEXT PARM
FRMSG    LTR   2,8                          GET REST LEN AND TEST
         BZ    EXIT                         ON ZERO GOTO EXIT
         ST    2,ISLEN                      SAVE REST LEN
         BAL   14,MSGTRUNC                  TEST LINE OVERFLOW
         TM    ACTFLAGS,ACTFMTC             Q. MSG-AREA OVERFLOW
         BO    EXIT                         A. YES- REST MSG TRUNCATED
         LR    8,2                          RELOAD REST LEN
         SH    8,=H'1'                      MINUS ONE FOR EXECUTE
         BNP   EXIT                         LESS THAN 0 = NO MORE MSG
         EX    8,RESTMVC                    MOVE REST OF MSG TO MSGAREA
EXIT     LH    11,RETURN                    GET PROGRAM RETURN CODE
         LA    0,IMSGCSLE                   GET TOTAL LENGTH OF CSECT
         FREEMAIN R,LV=(0),A=(10)           DROP PROGRAM WORK AREA
         LEXIT RC=(11)                      RETURN TO THE CALLER
         SPACE
MSGERR   MVC   RETURN,=XL2'0008'            SET PROGRAM RETURN CODE
         B     EXIT
         EJECT
*
* GET ADDRESS OF LEFT PARENTHESIS IN MESSAGE AND CHECK SYNTAX
*
GAOLP    STM   14,13,GRSAREA1
         XC    TRTABVA(256),TRTABVA         CLEAR VARIABLE TRT-TABLE
         MVI   TRTABVA+C'<',C'<'            SET UP LEFT PARENTHESIS
         OI    ACTFLAGS,ACTFEOP             NO MORE PARM PARAMETER
         NI    ACTFLAGS,255-ACTFLPF         TURN OFF ACTION FLAG
         LTR   3,8                          SAVE TOTAL MESSAGE LENGTH
         BZ    GLPEND                       ZERO- END OF MESSAGE
         BCTR  3,0                          MINUS ONE FOR TRT EXECUTION
         EX    3,TRT01                      FIND OUT LEFT PARENTHESIS
         BZ    GLPEND                       ZERO- END OF MESSAGE
         NI    ACTFLAGS,255-ACTFEOP         TURN OFF RACTION FLAG
         ST    1,LPADDR                     ADDR. OF LEFT PARENTHESIS
         SR    1,9                          LENGTH OF INTERVENING DATA
         CH    1,=H'117'                    Q. LEFT '<' IN COLUMN 118
         BH    MSGERR                       A. YES- MESSAGE IN ERROR
         STH   1,LOID                       LENGTH OF INTERVENING DATA
         LR    3,8                          GET REMAINING MSG LENGTH
         SR    3,1                          GET LEN OF REMAINING DATA
         STH   3,LORD                       AND SAVE IT
         OI    ACTFLAGS,ACTFLPF             LEFT PARENTHESIS FOUND
GLPEND   LM    14,13,GRSAREA1
         BR    14                           RETURN TO THE CALLER
         EJECT
*
* GET ADDRESS OF RIGTH PARENTHESIS IN MESSAGE AND CHECK SYNTAX
*
GAORP    STM   14,13,GRSAREA1
         XC    TRTABVA(256),TRTABVA         CLEAR VARIABLE TRT-TABLE
         MVI   TRTABVA+C'>',C'>'            SET UP RIGTH PARENTHESIS
         LH    3,LORD                       GET LEN OF REMAINING DATA
         BCTR  3,0                          MINUS 1 FOR TRT EXECUTION
         L     9,LPADDR                     ADDR. OF LEFT PARENTHESIS
         LA    9,1(9)                       POINT START OF PARM NUMBER
         EX    3,TRT01                      FIND OUT RIGTH PARENTHESIS
         BZ    MSGERR                       NOT FOUND- MESSAGE IN ERROR
         ST    1,RPADDR                     ADDR. OF RIGTH PARENTHESIS
         TM    ACTFLAGS,ACTFLPF             Q. LEFT PARENTHESIS IN DATA
         BNO   MSGERR                       A. NO- MESSAGE IN ERROR
         SR    1,9                          LENGTH OF INSERT COMMAND
         CH    1,=H'2'                      Q. INSERT-CMD LEN < 2
         BL    MSGERR                       A. YES- MESSAGE IN ERROR
         TRT   0(4,9),TRTABNN               LOOK FOR NON NUMERIC
         BZ    MSGERR                       NON NUMERIC- MSG IN ERROR
         STC   2,PTYPE                      SAVE PARAMETER TYPE
         SR    1,9                          GET LENGTH OF PARM NUMBER
         STH   1,MPNLEN                     AND SAVE IT
GRPEND   LM    14,13,GRSAREA1
         BR    14                           RETURN TO THE CALLER
         EJECT
*
* MOVE INTERVENING DATA, CHECK AND INSERT REQUESTED PARM INTO THE MSG
*
ISRTPRM  STM   14,13,GRSAREA1
         LH    3,LOID                       LENGTH OF INTERVENING DATA
         STH   3,ISLEN                      AND SAVE IT
         BAL   14,MSGTRUNC                  CHECK MSG OVERFLOW
         TM    ACTFLAGS,ACTFMTC             Q. MSG-AREA OVERFLOW
         BO    ISRTPRME                     A. YES- END OF SUBROUTINE
         BCTR  3,0                          MINUS ONE FOR TRT EXECUTION
         EX    3,MOVEID                     MOVE INTERVENING DATA
         LA    7,1(3,7)                     POINT TO NEW OUTPUT ADDRESS
         BAL   14,CHKITYP                   CHECK TYP AND INSERT PARM
         LM    7,9,LRSAREA1                 LOAD INPUT/OUTPUT ADDRESSES
         L     2,RPADDR                     ADDR. OF RIGTH PARENTHESIS
         LR    3,9                          SAVE INPUT MSG PIONTER
         LA    9,1(2)                       POINT TO NEW OUTPUT AREA
         LR    2,9                          AND SAVE IT
         SR    2,3                          GET REST LEN OF INPUT MSG
         SR    8,2                          SUB FROM TOTA INPUT LEN
         STM   7,9,LRSAREA1                 SAVE INPUT/OUTPUT ADDRESSES
ISRTPRME LM    14,13,GRSAREA1
         BR    14                           RETURN TO THE CALLER
         EJECT
*
* CLEAR VARIBLE TRT-TABLE AND FIND OUT THE REQUESTED INSERT TYP
*
CHKITYP  STM   14,13,GRSAREA2
         XC    TRTABVA(256),TRTABVA         CLEAR VARIABLE TRTTAB
         LA    14,CHKITYPE                  END ADDRESS OF SUBROUTINE
         CLI   PTYPE,C'C'                   Q. INSERT TYPE IS C
         BE    ITYPC                        A. YES- GET ISERT ROUTINE
         CLI   PTYPE,C'D'                   Q. INSERT TYPE IS D
         BE    ITYPD                        A. YES- GET ISERT ROUTINE
         CLI   PTYPE,C'W'                   Q. INSERT TYPE IS W
         BE    ITYPW                        A. YES- GET ISERT ROUTINE
         CLI   PTYPE,C'X'                   Q. INSERT TYPE IS X
         BE    ITYPX                        A. YES- GET ISERT ROUTINE
         MVC   RETURN,=XL2'0008'            SET PROGRAM RETURN CODE
         OI    ACTFLAGS,ACTFMTC             MESSAGE LINE TRUNCATED
CHKITYPE LM    14,13,GRSAREA2
         BR    14                           RETURN TO THE CALLER
         EJECT
*
* TYPE C - INDICATES THAT THE PARAMETER CONSISTS OF A SPECIFIC
* NUMBER OF CHARACTERS. THE HIGH ORDER BYTE OF THE PARM CONTAINS THE
* LENGTH OF THE PARAMETER TO BE INSERTED INTO THE MESSAGE, THE LOW
* ORDER THREE BYTES ONTAIN THE ADDRESS.
*
ITYPC    STM   14,13,GRSAREA3
         BAL   14,GMPADDR                   GET MESSAGE PARM ADDRESS
         BAL   14,MSGTRUNC                  CHECK MESSAGE TRUNCATION
         TM    ACTFLAGS,ACTFMTC             Q. MESSAGE TRUNCATED
         BO    ITYPCE                       A. YES- END OF SUBROUTINE
         L     4,CPADDR                     GET ADDRESS OF CALLERS PARM
         LH    3,ISLEN                      GET LENGTH OF CALLERS PARM
         CH    3,=H'120'                    Q. REQ. PARM LENGTH > 120
         BH    MSGERR                       A. YES- INVALID REQUEST
         SH    3,=H'1'                      MINUS ONE FOR EXECUTE CMD
         BM    ITYPCE                       MINUS- REQ PARM LEN <= 0
         EX    3,TYPCMVC                    MOVE DATA INTO MSG-AREA
         LA    7,1(3,7)                     POINT TO NEW OUTPUT ADDRESS
ITYPCE   STM   7,9,LRSAREA1                 SAVE INPUT/OUTPUT ADDRESSES
         LM    14,13,GRSAREA3               14 POINTED TO THE END
         BR    14                           RETURN TO THE CALLER
         SPACE 2
*
* TYPE D - INDICATES THAT THE PARAMETER CONSISTS OF A DELIMITED
* PHRASE, SENTENCE OR PARAGRAFH. THE FIRST CHARACTER OF THE TEXT
* IS A DELIMITER, AND THE NEXT OCCURENCE OF THE SAME DELIMITER
* ENDS THE TEXT. THE DELIMITERS ARE NOT OUTPUT. THE HIGH ORDER BYTE OF
* THE PARM CONTAINS THE MAXIMUM LENGTH OF PARAMETER TO BE INSERTED INTO
* THE MESSAGE, THE LOW ORDER THREE BYTES CONTAIN THE ADDRESS.
*
ITYPD    STM   14,13,GRSAREA3
         BAL   14,GMPADDR                   GET MESSAGE PARM ADDRESS
         L     4,CPADDR                     GET ADDRESS OF CALLERS PARM
         ICM   2,8,0(4)                     GET FIRST CHARACTER OF PARM
         EJECT
         SRL   2,24                         CLEAR 3 HIGH ORDER BYTES
         LA    1,TRTABVA(2)                 GET DISPLACEMENT IN TRTTAB
         STC   2,0(1)                       SAVE FIRST CHAR. IN TRTTAB
         LH    3,ISLEN                      MAX REQ LEN OF PARM
         CH    3,=H'120'                    Q. REQ. PARM LENGTH > 120
         BH    MSGERR                       A. YES- INVALID REQUEST
         SH    3,=H'2'                      SUB TWO FOR TWO DELIMITERS
         BM    ITYPDE                       MINUS- REQ PARM LEN <= 1
         STH   3,ISLEN                      AND SAVE IT
         EX    3,TYPDTRT                    FIND NEXT CHARACTER
         BZ    TYPDGCHK                     NOT FOUND- CHECK TRUNCATION
         SR    1,4                          GET LENGTH OF CALLERS PARM
         LA    1,0(1)                       CLEAR HIGH ORDER
         SH    1,=H'1'                      MINUS ONE FOR DELIMITER
         CR    1,3                          Q. LENGTH > MAX. LENGTH
         BH    TYPDGCHK                     A. YES- CHECK TRUNCATION
         STH   1,ISLEN                      SAVE CALLERS PARM LENGTH
TYPDGCHK BAL   14,MSGTRUNC                  CHECK MESSAGE TRUNCATION
         TM    ACTFLAGS,ACTFMTC             Q. MSG-AREA OVERFLOW
         BO    ITYPDE                       A. YES- END OF SUBROUTINE
         LH    2,ISLEN                      GET ALLOWED PARM LENGTH
         BCTR  2,0                          MINUS ONE FOR EXECUTE CMD
         EX    2,TYPDMVC                    MOVE PARM INTO THE MESSAGE
         LA    7,1(2,7)                     POINT TO NEW OUTPUT ADDRESS
         STM   7,9,LRSAREA1                 SAVE INPUT/OUTPUT ADDRESSES
ITYPDE   LM    14,13,GRSAREA3
         BR    14                           RETURN TO THE CALLER
         EJECT
*
* TYPE W - INDICATES THAT THE PARAMETER CONSISTS OF A SINGLE WORD.
* THAT IS, THE DATA IS TERMINATED BY THE FIRST BLANK. THE HIGH ORDER
* BYTE OF PARM CONTAINS THE MAXIMUM LENGTH OF PARAMETER TO BE INSERTED
* INTO THE MESSAGE, THE LOW ORDER THREE BYTES CONTAIN THE ADDRESS.
*
ITYPW    STM   14,13,GRSAREA3
         BAL   14,GMPADDR                   GET MESSAGE PARM ADDRESS
         L     4,CPADDR                     GET ADDRESS OF CALLERS PARM
         MVI   TRTABVA+C' ',C' '            SET UP BLANK FOR DELIMITER
         LH    3,ISLEN                      MAX LENGTH OF CALLERS PARM
         CH    3,=H'120'                    Q. REQ. PARM LENGTH > 120
         BH    MSGERR                       A. YES- INVALID REQUEST
         SH    3,=H'1'                      MINUS ONE FOR EXECUTE CMD
         BM    ITYPWE                       MINUS- REQ PARM LEN <= 0
         EX    3,TYPWTRT                    FIND FIRST BLANK IN MSG
         BZ    TYPWGCHK                     NOT FOUND- CHECK TRUNCATION
         SR    1,4                          GET LENGTH OF CALLERS PARM
         BNP   MSGERR                       MINUS- FIRST CHAR IS BALNK
         LA    1,0(1)                       CLEAR HIGH ORDER
         CR    1,3                          Q. LENGTH > MAX. LENGTH
         BH    TYPWGCHK                     A. YES- CHECK TRUNCATION
         STH   1,ISLEN                      SAVE CALLERS PARM LENGTH
TYPWGCHK BAL   14,MSGTRUNC                  CHECK MSG OVERFLOW
         TM    ACTFLAGS,ACTFMTC             Q. MSG-AREA OVERFLOW
         BO    ITYPWE                       A. YES- END OF SUBROUTINE
         LH    2,ISLEN                      GET ALLOWED PARM LENGTH
         BCTR  2,0                          MINUS ONE FOR EXECUTE CMD
         EX    2,TYPWMVC                    MOVE PARM INTO THE MESSAGE
         LA    7,0(2,7)                     POINT TO NEW OUTPUT ADDRESS
ITYPWNI  LA    7,1(7)
         STM   7,9,LRSAREA1                 SAVE INPUT/OUTPUT ADDRESSES
ITYPWE   LM    14,13,GRSAREA3
         BR    14                           RETURN TO THE CALLER
         EJECT
*
* TYPE X - INDICATES THAT THE PARAMETER IS TO BE INSERTED INTO THE
* MESSAGE IN HEXADECIMAL REPRESENTATION, USING TWO CHARACTERS OF
* OUTPUT TO REPRESENT EACH INPUT BYTE. THE  HIGH ORDER BYTE OF THE PARM
* CONTAINS THE LENGTH OF THE HEXADECIMAL INPUT STRING, THE LOW ORDER
* THREE BYTES CONTAIN THE ADDRESS.
*
ITYPX    STM   14,13,GRSAREA3
         BAL   14,GMPADDR                   GET MESSAGE PARM ADDRESS
         LH    2,ISLEN                      GET LENGTH OF CALLERS PARM
         SLA   2,1                          COMPUTE OUTPUT LEN
         BZ    ITYPXE                       ZERO- REQ PRAM LEN = 0
         CH    2,=H'120'                    Q. REQ. PARM LENGTH > 120
         BH    MSGERR                       A. YES- INVALID REQUEST
         STH   2,ISLEN                      SAVE CALLERS PARM LENGTH
         BAL   14,MSGTRUNC                  CHECK MSG OVERFLOW
         TM    ACTFLAGS,ACTFMTC             Q. MSG-AREA OVERFLOW
         BO    ITYPXE                       A. YES- END OF SUBROUTINE
         LH    2,ISLEN                      GET ALLOWED PARM LENGTH
         SRA   2,1                          COMPUTE INPUT LEN
         L     4,CPADDR                     GET ADDRESS OF CALLERS PARM
         XCONV (4),(7),(2),MF=(E,APARMS)
         SLA   2,1                          TIMES TWO FOR OUTPUT LEN
         LA    7,0(2,7)                     POINT TO NEW OUTPUT ADDRESS
         STM   7,9,LRSAREA1                 SAVE INPUT/OUTPUT ADDRESSES
ITYPXE   LM    14,13,GRSAREA3
         BR    14                           RETURN TO THE CALLER
         EJECT
*
* CKECK LINE OVERFLOW AND SET REFERENCE BIT
*
MSGTRUNC STM   14,13,GRSAREA4
         LH    3,LENCNT                     NO. OF BYTES IN MSGAREA
         LA    4,L'MSGWORK                  TOTAL LENGTH OF MSGAREA
         SR    4,3                          REST LEN FROM MSGAREA
         BZ    TRCEND                       BY ZERO- LINE TRUNCATED
         LH    2,ISLEN                      GET CALLERS PARM LENGTH
         CR    4,2                          COMP REST LEN WITH MVC LEN
         BL    TRCMVC                       BY LOW- LINE TRUNCATED
         AR    3,2                          NEW NO. OF BYTES IN MSGAREA
         STH   3,LENCNT                     AND SAVE IT
CHKLOFLE LM    14,13,GRSAREA4
         BR    14                           RETURN TO THE CALLER
         SPACE
TRCMVC   STH   4,ISLEN                      SAVE ALLOWED PARM LENGTH
         AR    3,4                          NEW NO. OF BYTES IN MSGAREA
         STH   3,LENCNT                     AND SAVE IT
         MVC   RETURN,=XL2'0004'            SET PROGRAM RETURN CODE
         B     CHKLOFLE                     END OF SUBROUTINE
         SPACE
TRCEND   MVC   RETURN,=XL2'0004'            SET PROGRAM RETURN CODE
         OI    ACTFLAGS,ACTFMTC             MESSAGE LINE TRUCATED
         B     CHKLOFLE                     END OF SUBROUTINE
         EJECT
*
* GET RQUESTED MESSAGE PARM ADDRESS
*
GMPADDR  STM   14,13,GRSAREA4
         L     1,SAVEPARM                   GET ADDRESS OF PARM LIST
         L     3,0(1)                       GET ADDRESS OF FIRST PARM
         LH    1,MPNLEN                     GET LENGTH OF PARM NUMBER
         L     2,LPADDR                     ADDR. OF LEFT PARENTHESIS
         BCTR  1,0                          MINUS 1 FOR EXECUTE
         EX    1,PACKNM                     PACK MESSAGE PARM NUMBER
         CVB   1,DW                         MAKE BINARY
PRMLOOP  BCT   1,FINDVL                     COUNT AND SEEK
         L     2,0(3)                       GET ADDR. OF CALLERS PARM
         ST    2,CPADDR                     AND SAVE IT
         IC    2,0(3)                       GET CALLERS PARM LENGTH
         SLL   2,25                         SHIFT OUT THE VL BIT
         SRL   2,25                         CLEAR THE HIGH ORDER BYTES
         CH    2,=H'120'                    Q. MAX. INSERT LEN > 120
         BH    MSGERR                       A. YES- MESSAGE IN ERROR
         STH   2,ISLEN                      AND SAVE IT
         LM    14,13,GRSAREA4
         BR    14                           RETURN TO THE CALLER
         SPACE
FINDVL   TM    0(3),X'80'                   Q. END OF LIST
         BO    MSGERR                       A. YES- MSG PARM NOT FOUND
         LA    3,4(3)                       POINT TO NEXT PARM
         B     PRMLOOP                      MAKE LOOP FOR NEXT PARM
         EJECT
*
* EXECUTE COMMANDS
*
RESTMVC  MVC   0(0,7),0(9)                  MOVE THE REST OF MESSAGE
         SPACE
TRT01    TRT   0(0,9),TRTABVA               FIND OUT LEFT PARENTHESIS
         SPACE
MOVEID   MVC   0(0,7),0(9)                  MOVE DATA INTO MESSAGE AREA
         SPACE
TYPCMVC  MVC   0(0,7),0(4)                  MOVE IN CARACTER FORMAT
         SPACE
TYPDTRT  TRT   1(0,4),TRTABVA               FIND NEXT CHARACTER
TYPDMVC  MVC   0(0,7),1(4)                  MOVE PARM INTO THE MESSAGE
         SPACE
TYPWTRT  TRT   0(0,4),TRTABVA               FIND NEXT CHARACTER
TYPWMVC  MVC   0(0,7),0(4)                  MOVE PARM INTO THE MESSAGE
         SPACE
PACKNM   PACK  DW,1(1,2)                    PACK MESSAGE PARM NUMBER
         EJECT
*
* DEFINITIONEN
*
TRTABNN  DC    256AL1(*-TRTABNN)
         ORG   TRTABNN+C'0'
         DC    10X'00'
         ORG
         SPACE 2
*
* DEFINITIONEN / LITERALS
*
         LTORG
         EJECT
*
* DEFINITIONEN / PROGRAM CSECT
*
IMSGCSCT CSECT
GRSAREA1 DS    16A                          REGS. STORAGE FOR 1. LEVEL
GRSAREA2 DS    16A                          REGS. STOARGE FOR 2. LEVEL
GRSAREA3 DS    16A                          REGS. STORAGE FOR 3. LEVEL
GRSAREA4 DS    16A                          REGS. STORAGE FOR 4. LEVEL
APARMS   DS    16A                          PARM LIST FOR SUBROUTINE
LRSAREA1 DS    3A                           LOCAL REGISTER STORAGE
CPADDR   DS    A                            ADDR. OF CALLERS PARM
LPADDR   DS    A                            ADDR. OF LEFT PARENTHESIS
RPADDR   DS    A                            ADDR. OF RIGTH PARENTHESIS
SAVEPARM DS    A                            ADDR. OF PARAMETER LIST
ISLEN    DS    H                            LENGTH OF CALLERS PARM
LOID     DS    H                            LENGTH OF INTERVENING DATA
LORD     DS    H                            LENGTH OF REMAINING DATA
LENCNT   DS    H                            MOVE LENGTH COUNTER
MPNLEN   DS    H                            LENGTH OF MSG PARM NUMBER
RETURN   DS    H                            PROGRAM RETURN CODE
DW       DS    D                            WORK AREA
PTYPE    DS    CL1                          MESSAGE PARM TYPE
TRTABVA  DC    256X'00'                     VARIABLE TRT TABLE
MSGWORK  DC    CL120' '                     MESSAGE WORK AREA
         EJECT
*
* DEFINITIONEN
*
ACTFLAGS DC    B'00000000'
ACTFMTC  EQU   B'00000001'                  MESSAGE TRUNCATED
ACTFLPF  EQU   B'00000010'                  LEFT PARENTHESIS FOUND
ACTFEOP  EQU   B'00000100'                  END OF PARMS
         SPACE 2
IMSGCSLE EQU   *-IMSGCSCT
SYSTIMSG CSECT
         END
