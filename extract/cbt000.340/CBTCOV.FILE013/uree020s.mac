         TITLE 'PROGRAMM  VTOCSEQ ===> LISTVTOC IN AUFSTEIGENDER ADRESS*
               FOLGE'
*$
*$.      +1
*$       AENDERUNGSSTAND
*$
*$       ERSTELLUNGSDATUM:   09.09.81       VERSION 1.0
*$       GEAENDERT:          21.11.81       VERSION 2.0
*$                           ERWEITERUNG ZUR VERARBEITUNG VON
*$                           INDIZIERTEN VTOC (DF/DS)
*$02     GEAENDERT:          29.12.81       VERSION 2.1
*$02                         AUSGABE DES BENUTZEN PLATZES EINER DATEI
*$03     GEAENDERT:          12.02.82       VERSION 2.2
*$03                         ZUSAETZLICHE AUSGABE NACH DSN SORTIERT
*$04     GEAENDERT:          05.03.82       VERSION 2.3
*$04                         F0-DSCB - VERARBEITUNG UMGESTELLT
*$05     GEAENDERT:          13.08.82       VERSION 3.0
*$05                         ZUSAETZLICHE PARAMETER MOEGLICHKEITEN
*$06     GEAENDERT:          27.08.82       VERSION 3.1
*$06                         ZUSAETZLICHE PARAMETER MOEGLICHKEITEN
*$07     GEAENDERT:          28.01.83       VERSION 3.2
*$07                         DATUM/ZEIT IN TITELZEILE NEU BEI JEDER PL.
*$08     GEAENDERT:          04.04.83       VERSION 4.0
*$08                         TITELZEILEN + PERFORMANCE AENDERUNGEN
*$09     GEAENDERT:          07.07.83       VERSION 4.1
*$09                         DRUCK DESIGN GEAENDERT (DSN NICHT FUER SEC
*$09                         EXTENTS IN LISTE2
*$09     GEAENDERT:          29.07.83       VERSION 4.2
*$09                         AUSGABE 'DATE LAST MODIFIED'
*$09     GEAENDERT:          09.01.84       VERSION 4.3
*$09                         AUSGABE 'RACF PROTECTION'
*$09     GEAENDERT:          28.12.84       VERSION 4.4
*$09                         AENDERUNG UCB SCAN ROUTINE
*$
*$       VERANTWORTLICH:     R. MEYER / SYSTEMPROGRAMMIERUNG
*$
*$.      +1
*$       AUFGABE DES PROGRAMMS
*$
*$       DIESES PROGRAMM ERSTELLT EINE LISTE ALLER DATEIEN
*$       EINER AUSGEWAEHLTEN MAGNETPLATTE IN BELEGUNGSFOLGE.
*$
*$.      +1
*$       EIN-/AUSGABE
*$
*$       UBER DEN PARM-PARAMETER DER EXEC ANWEISUNG KOENNEN
*$       - BIS ZU ACHT VOLUME-ANGABEN, DURCH KOMMATA GETRENNT, EINGE-
*$         GEBEN WERDEN;
*$       - ALL      ===> ALLE ONLINE VOLUMES.
*$08     - ALL,UNIT ===> ALLE ONLINE VOLUMES MIT BESTIMMTEN UNIT TYPE
*$08                     (Z.B.  ALL,3350)
*$
*$       DIE AUSGABELISTE WIRD UEBER DIE DD-ANWEISUNG SYSPRINT
*$       AUSGEGEBEN. IN DER LISTE ERSCHEINEN FUER JEDE DATEI
*$       FOLGENDE INFORMATIONEN AUS DER VTOC:
*$       - STARTADRESSE (CCHH)
*$       - ENDADRESSE   (CCHH)
*$       - DATEINAME
*$       - Y ==> FUER RACF GESCHUETZTE DATEIEN
*$       - ERSTELLUNGSDATUM
*$       - VERFALLDATUM
*$       - EXTENT - NUMMER
*$       - GESAMTANZAHL DER EXTENTS FUER DIE DATEI
*$02     - BENUTZTER PLATZ IN PROZENT
*$       - DATEIORGANISATION
*$       - SATZFORMAT
*$       - SATZLAENGE
*$       - BLOCKLAENGE
*$06     - ANZAHL TRACKS FUER DIESEN EXTENT
*$
*$       IN DEN TITELZEILEN WIRD NEBEN DEM DATUM UND DER UHRZEIT
*$       DIE VOLUME-BEZEICHNUNG (VOLSER) UND DIE ADRESSE DER
*$       EINHEIT ANGEGEBEN.
*$
*$06     ZUSAETZLICH KOENNEN LISTEN IN ANDERER SORTIERFOLGE ERZEUGT
*$06     WERDEN.
*$06     -   SYSOUT   ===> LISTE DER EXTENTS IN DSNAMEN - FOLGE
*$06     -   SYSOUT2  ===> LISTE DER DATASETS NACH ANZAHL TRACKS
*$
*$       WELCHE LISTE SIE ERHALTEN WOLLEN, KOENNEN SIE UEBER
*$       DIE JCL-ANWEISUNGEN STEUERN. SIE GEBEN NUR DIE DD-
*$       ANWEISUNG FUER DIE LISTE EIN, DIE SIE ERHALTEN WOLLEN.
*$
*$.      +1
*$       BEMERKUNGEN ZUR INSTALLATION
*$
*$       DAS PROGRAMM MUSS MIT AC=1 IN EINE APF-AUTHORISIERTE
*$       BIBLIOTHEK GELINKT WERDEN (CVAF-MACROS).
*$
*$.      +1
*$       AUFGERUFENE UNTERROUTINEN
*$
*$       DATECHNG ===> DATUMSERMITTLUNG
*$       CA-SORT  ===> INTERNER SORT
         EJECT
***********************************************************************
*                                                                     *
*   ANFANG    EROEFFNUNG VON ASSEMBLER-PROGRAMMEN                     *
*             LETZTE AENDERUNG :  12.03.80                            *
*                                                                     *
***********************************************************************
         MACRO
&NAME    ANFANG &V,&CD=C,&LC=0,&BR=1,&EP=,&L=0
         MNOTE  *,'        ***   VERSION VOM 12.03.80   ***'
.*
.* V   WIRD *V* ANGEGEBEN UND IST *BR>=1*, ERFOLGT DIE ADRESSIERUNG DER
.*     ERSTEN INSTRUKTION SCHON UEBER DAS BASISREG. 3, SONST UEBER R15.
.*     WIRD *R* ANGEGEBEN, WERDEN BIS ZUR DEFINITION DER SAVEAREA R15,
.*     VON DORT AB R13 UND NACH DESSEN ERSCHOEPFUNG MIT DEM PARAMETER
.*     *BR= * EVTL. AUSSERDEM VERLANGTE REGISTER ALS BASISREGISTER
.*     VERWENDET.
.*     WIRD *O* ANGEGEBEN ODER WIRD DER PARAMETER AUSGELASSEN UND IST
.*     *BR>=1*, WERDEN BIS ZUR BEENDIGUNG DES SAVEAREA HANDLINGS R15,
.*     VON DORT AB R3 UND SPAETER MIT DEM PARAMETER *BR= * EVENTUELL
.*     AUSSERDEM VERLANGTE REGISTER ALS BASISREGISTER VERWENDET. IST
.*     *BR=0*, WIRD DURCHGEHEND R15 ALS BASISREGISTER VERWENDET.
.*     DER PARAMETER *O* BEWIRKT AUSSERDEM, DASS FEHLER IN EINER ASS.-
.*     UNTERROUTINE EINES PL/I-OPT. HAUPTPROGRAMMS VOM PL/I-ERRORHAND-
.*     LER BEHANDELT UND FEHLERMELDUNGEN, DIE DIE FEHLERQUELLE IDENTI-
.*     FIZIEREN, AUSGEGEBEN WERDEN.
.* CD= STANDARDWERT IST *C* WIE *CSECT*
.*     ZULAESSIG IST AUCH *S* WIE *START*
.* LC= STANDARDWERT IST *0*, SETZT DEN ZUORDNUNGZAEHLER (AUF 0).
.*     SOWIE *NO*, WENN WEDER CSECT NOCH START ERSCHEINEN SOLL
.*     NUR ZULAESSIG IN VERBINDUNG MIT *START*, SIEHE CD=
.* BR= STANDARDWERT IST *1*, GIBT DIE ANZAHL DER BASISREGISTER AN.
.*     ZULAESSIG SIND *0*,*1*,*2* ODER *3*. ES WERDEN DANN ENTWEDER
.*     KEINE ODER IN DER REIHENFOLGE R3,R4,R5 DIE ANGEGEBENE ANZAHL AN
.*     BASISREGISTERN GENERIERT.ZULAESSIG SIND AUCH DIE FORMEN
.*     BR=(X)  BR=(X,Y)  BR=(X,Y,Z)
.*     WOBEI X,Y,Z JEWEILS FUER DIE REGISTER STEHEN, DIE ALS BASIS-
.*     REGISTER DIENEN SOLLEN, Z.B.  BR=(R5,R6)
.* EP= NAME DES EINGANGSPUNKTES. ANGABE EMPFEHLENSWERT, WENN OBERPRO-
.*     GRAMM IN PL/1 GESCHRIEBEN
.* L=  LETZTES ZEICHEN DES LABELS, DER DEN BEGINN DER BASISREGISTER-
.*     ZUORDNUNG KENNZEICHNET (=BASIS&L, WENN &L ^= 0).
.*
.* GLOBALE VARIABLE ZUM TEST GEGEN DOPPELDEFINITIONEN DER REGISTER
         GBLB  &GLBIT  BETROFFEN SIND DIE EQU'S
         GBLA  &GLBR
         LCLA  &SETBR  ZUM TESTEN FUER BR=
         LCLA  &SL,&OFS
         LCLC  &MM,&NN,&BR1,&BR2,&BR3
.*
         AIF   (T'&NAME NE 'O').M005
         MNOTE 12,'UNBENANNTE CONTROL-SECTION'
         AGO   .M130
.M005    ANOP
&NN      SETC  '&NAME'
         AIF   ('&EP' NE '&NAME').M010
         AIF   ('&V' NE 'O').M010
         AIF   (K'&NAME EQ 8).M007
&MM      SETC  '1'
         AGO   .M010
.M007    ANOP
&NN      SETC  '&NAME'(1,7)
&MM      SETC  '$'
.M010    ANOP
         AIF   ('&CD' EQ 'C').M020
         AIF   ('&CD' EQ 'S').M030
         AIF   ('&CD' EQ 'NO').M040
         MNOTE 4,'CD= IST UNGUELTIG'
.M020    ANOP
&NN&MM   CSECT
         AGO   .M042
.M030    ANOP
&NN&MM   START &LC
         AGO   .M042
.M040    ANOP
&NN&MM   DS    0F
.M042    ANOP
         AIF   ('&BR'(1,1) EQ '(').M043
&SETBR   SETA  &BR
&BR1     SETC  'R3'
&BR2     SETC  'R4'
&BR3     SETC  'R5'
         AGO   .M044
.M043    ANOP
&SETBR   SETA N'&BR
&BR1     SETC  '&BR(1)'
         AIF   (&SETBR LT 2).M044
&BR2     SETC  '&BR(2)'
         AIF   (&SETBR LT 3).M044
&BR3     SETC  '&BR(3)'
.M044    ANOP
         AIF   (&GLBIT).M045
*
*
R0       EQU   0 PARAMETER-REGISTER
R1       EQU   1 PARAMETER-REGISTER
R2       EQU   2 ARBEITSREGISTER
R3       EQU   3 ARBEITSREGISTER
R4       EQU   4 ARBEITSREGISTER
R5       EQU   5 ARBEITSREGISTER
R6       EQU   6 ARBEITSREGISTER
R7       EQU   7 ARBEITSREGISTER
R8       EQU   8 ARBEITSREGISTER
R9       EQU   9 ARBEITSREGISTER
R10      EQU   10 LINK-REGISTER
R11      EQU   11 3. BASISREGISTER
R12      EQU   12 2. BASISREGISTER
R13      EQU   13 1. BASISREGISTER
R14      EQU   14 RUECKKEHR-REGISTER
R15      EQU   15 VERZWEIG-REGISTER
*
*
         MNOTE *,'SYMBOLISCHE REGISTER GENERIERT'
*
*
.M045    AIF   ('&V' EQ 'V').M200
         AIF   ('&V' EQ 'R').M050
         AIF   ('&V' EQ 'O').M055
         AIF   (T'&V EQ 'O').M050
         MNOTE 4,'UNGUELTIGER POSITIONSPARAMETER'
.M050    ANOP
         USING *,R15
.M055    ANOP
&SL      SETA  K'&EP
         AIF   (T'&EP EQ 'O').M100
         AIF   ('&V' NE 'O').M080
         ENTRY &EP
         AIF   (&SL/2 NE (&SL+1)/2).M077
         DC    C' &EP'
         AGO   .M078
.M075    ANOP
         B     *+7+8+5+2*((&SL-1)/2)
         DC    AL1(&SL)
.M077    ANOP
         DC    C'&EP'
.M078    ANOP
         AIF   ('&V' NE 'O').M090
         DC    AL1(&SL)
         CNOP  0,4
         USING *,R15
&EP      EQU   *
         AGO   .M095
.M080    ANOP
         AIF   ('&EP' EQ '&NAME').M075
         ENTRY &EP
&EP      DS    0H
         AGO   .M075
.M090    ANOP
         DC    C'&SYSDATE'
         DC    C'&SYSTIME'
.M095    ANOP
*
*
         MNOTE *,'ENTRY - EINGANGSPUNKT GENERIERT'
*
*
.M100    ANOP
         AIF   ('&V' NE 'O').M104
         STM   R14,R12,12(R13) .  SAVE REGISTERS
         B     *+12               BRANCH AROUND CONSTANT
         DC    A(88)              LENGTH OF DSA
         DC    A(0)
         L     R0,*-8
         LR    R4,R1 .            SAVE ANY PARAMETERLIST-ADDR.
         L     R1,76(0,R13) .     ADDR. OF NEXT AVAILABLE BYTE IN STOR.
         ALR   R0,R1
         CL    R0,12(0,R12) .     COMP. WITH LAST AVAIL. BYTE IN STOR.
         BNH   *+10
         L     R15,116(0,R12) .   PL/I STORAGE OVERFLOW ROUTINE
         BALR  R14,R15 .          ATTEMPT TO OBTAIN MORE STORAGE
         ST    R0,76(0,R1) .      ADDR. OF NEXT AVAIL. BYTE IN STOR.
         ST    R13,4(0,R1)
         ST    R1,8(0,R13)
         MVC   72(4,R1),72(R13) . COPY ADDR. OF LIBRARY WORKSPACE
         LR    R13,R1
         MVI   0(R13),X'80'
         MVI   86(R13),X'91'
         MVI   87(R13),X'C0'
         LR    R1,R4
*
*
*        ENDE DES SAVEAREA-HANDLINGS
*
*
         AGO   .M200
.M104    ANOP
         CNOP  2,4
         STM   R14,R12,12(R13) .  SAVE REGISTERS
         ST    R13,*+14
         LR    R11,R13
         BAL   R13,*+19*4
         AIF   ('&V' NE 'R').M105
         USING *,R13
.M105    ANOP
ANFA&SYSNDX DS 0F   WORT 0 NUR VON PL1 VERWENDET
         DC    X'0080'
         DC    AL2(72)
         DC    F'0' WORT 1 A(SAVEAREA IM RUFENDEN PROGRAMM)
         DC    F'0' WORT 2 A(SAVEAREA IM GERUFENEN PROGRAMM)
         DC    F'0' WORT 3 R14
         DC    F'0' WORT 4 R15
         DC    F'0' WORT 5 R0        ** BEI         R14
         DC    F'0' WORT 6 R1        ** ZUGRIFFS-   R15
         DC    F'0' WORT 7 R2        ** ROUTINEN    R0
         DC    F'0' WORT 8 R3 BASIS1 ** WERDEN      R1
         DC    F'0' WORT 9 R4 BASIS2 ** HIER        R2
         DC    F'0' WORT10 R5 BASIS3 ** FOLGENDE    R3
         DC    F'0' WORT11 R6        ** REGISTER    R4
         DC    F'0' WORT12 R7        ** VON DER     R5
         DC    F'0' WORT13 R8        ** ZUGRIFFS-   R6
         DC    F'0' WORT14 R9        ** ROUTINE     R7
         DC    F'0' WORT15 R10       ** GESPEICHERT R8
         DC    F'0' WORT16 R11
         DC    F'0' WORT17 R12
*
         ST    R13,8(0,R11)
*
*
*        ENDE DES SAVEAREA-HANDLINGS
*
*
         AIF   ('&V' NE 'V').M200
         AGO   .M120
.M110    ANOP
.M120    AIF   (&GLBR GT &SETBR).M130
&GLBR    SETA  &SETBR
         AIF   ('&V' EQ 'V').M130
         DROP  R15
.M130    ANOP
&GLBIT   SETB  1
*
*
*        ENDE DES VORSPANNS
*
*
         MEXIT
.M200    AIF   (&SETBR NE 0).M220
         MNOTE *,'KEINE BASISREGISTER GENERIERT'
         AIF   ('&V' EQ 'V').M050
         AGO   .M110
.M220    AIF   ('&V' EQ 'R').M250
         BALR  &BR1,0
         AIF   ('&L' EQ '0').M222
BASIS&L  EQU   *
.M222    USING *+&OFS,&BR1
         AIF   (&GLBR GT 0).M225
.M225    AIF   (&SETBR GE 2).M240
.M230    AIF   ('&V' EQ 'V').M055
         AGO   .M110
.M240    LA    &BR2,4095(,&BR1)
         USING *+&OFS+4091,&BR2
         AIF   (&GLBR GT 1).M245
.M245    AIF   (&SETBR EQ 2).M230
         LA    &BR3,4095(,&BR2)
         USING *+&OFS+2*4091,&BR3
         AIF   (&GLBR GT 2).M230
         AGO   .M230
.M250    LA    &BR1,4095(,R13)
&OFS     SETA  4095-80
         AGO   .M222
         MEND
         EJECT
***********************************************************************
*                                                                     *
*   ENDE      ABSCHLUSS VON ASSEMBLER-PROGRAMMEN                      *
*             LETZTE AENDERUNG :  12.03.80                            *
*                                                                     *
***********************************************************************
         MACRO
&NAME    ENDE &L,&R1,&RC=
         MNOTE  *,'      ***   VERSION VOM 12.03.80   *** '
*
         LCLC  &ENDEC1,&ENDEC2
         AIF   (T'&RC EQ 'O').S040
         AIF   ('&RC'(1,1) EQ '(').S010 REG.NOTATION
         AIF   ('&RC'(1,1) LT '0').S020
&NAME    LA    R15,&RC            RETURNCODE LADEN
         AGO   .S030
.S010    ANOP
&NAME    LA    R15,0(,&RC(1))     RETURNCODE LADEN
         AGO   .S030
.S020    ANOP
&NAME    L     R15,&RC            RETURNCODE LADEN
.S030    L     R13,4(,R13)        A(SAVEAREA IM RUFENDEN PROGRAMM)
&ENDEC1  SETC  'R0'
&ENDEC2  SETC  '20'
         AGO   .S050
.S040    ANOP
&NAME    L     R13,4(,R13)        A(SAVEAREA IM RUFENDEN PROGRAMM)
.S050    AIF   (T'&R1 EQ 'O').S060
         AIF   ('&R1' NE 'R1').S900
&ENDEC1  SETC  'R2'
&ENDEC2  SETC  '28'
.S060    AIF   (T'&R1 EQ 'O' AND T'&RC EQ 'O').S070
         L     R14,12(,R13)       ALTE REG.STAENDE WIEDERHERSTELLEN
         LM    &ENDEC1,R12,&ENDEC2.(R13)
         AGO   .S080
.S070    LM    R14,R12,12(R13)    ALTE REG.STAENDE WIEDERHERSTELLEN
.S080    BR    R14                RETURN
         AIF   (T'&L EQ 'O').S090
         AIF   ('&L' NE 'L').S910
         AGO   .S920
.S090    MEXIT
.S900    IHBERMAC 37,,&R1         INVALID OPERAND
         MEXIT
.S910    AIF   (K'&L GT 1).S090
         IHBERMAC 183,&L,L
.S920    LTORG
         MEND
         EJECT
VTOCSEQ  ANFANG R,BR=(R12,R10)
         SPACE 5
*        SCHALTERBENUTZUNG IM FELD SWITCH1
*
*        01    ===> OPEN SYSPRINT DURCHGEFUEHRT
*        02    ===> OPEN SYSOUT DURCHGEFUEHRT
*        04    ===> ALLE ONLINE VOLUMES
*        08    ===> OPEN SYSOUT2 DURCHGEFUEHRT
*        10    ===> FORMAT5-DSCB VERARBEITET
*        20    ===> INDIZIERTE VTOC VERARBEITEN
*        40    ===> FORMAT3-DSCB 1. TEIL DER EXTENTS VERARBEITET
*        80    ===> FORMAT5-DSCB 1. TEIL DER EXTENTS VERARBEITET
*
*        SCHALTERBENUTZUNG IM FELD SWITCH2
*
*        01    ===> LISTE 1 (SYSPRINT) ANGEFORDERT
*        02    ===> LISTE 2 (SYSOUT) ANGEFORDERT
*        04    ===> LISTE 3 (SYSOUT2) ANGEFORDERT
*        08    ===> PARM=ALL,UNIT ANGEGEBEN
         EJECT
*        ******************************
*        *  PARAMETER VERARBEITUNG    *
*        ******************************
         SPACE 2
RL       EQU   R11                     EQUATE LINK - REGISTER
RP       EQU   R2                      EQUATE PARAMETER - REGISTER
         SPACE 2
         L     R2,0(R1)
         LH    R3,0(R2)                LAENGE  PARAMETER - BEREICH
         LTR   R3,R3                   PARM LAENGE = NULL ?
         BZ    NOPARM                  JA ==> ENDE
         SPACE
         BCTR  R3,0                    CORRECT LENGTH FOR OC
         EX    R3,CAPSON               CONVERT
         B     *+10                    BRANCH AROUND EX-INSTR.
CAPSON   OC    2(0,R2),BLANKS          CONVERT TO CAPITAL LETTERS
         SPACE
         LH    R3,0(R2)                LAENGE  PARAMETER - BEREICH
         C     R3,=F'3'                LAENGE = 3 ?
         BH    *+18                    GROESSER ==> WEITER
         CLC   2(3,R2),=C'ALL'         PARAMETER = ALL
         BNE   NOPARM
         MVI   SWITCH1,X'04'           SCHALTER SETZEN
         SPACE
         CLC   2(4,R2),=C'ALL,'        UNIT ANGEGEBEN
         BNE   PARM010                 NO ==> NORMAL WEITER
         MVI   SWITCH1,X'04'           SCHALTER SETZEN
         LA    R4,UTYPETAB             ADDRESSE UNITTYPE TABELLE
         LR    R5,R3                   LAENGE DES PARMWERTES
         S     R5,=F'5'                NUR LAENGE DER UNIT-ANGABE
ULOOP01  DS    0H
         CLC   0(2,R4),=X'FFFF'        ENDE DER TABELLE
         BE    NOPARM                  JA ==> ABEND
         EX    R5,COMPUNIT             UNIT ANGABE VERGLEICHEN
         BE    ULOOP99                 UNIT GEFUNDEN
         LA    R4,12(R4)               NICHT GEFUNDEN => NAECHSTES FELD
         B     ULOOP01
         SPACE
ULOOP99  DS    0H
         MVC   UNIT,0(R4)              UNITTYPE UEBERTRAGEN
         OI    SWITCH2,X'08'           SCHALTER SETZEN
         B     PARM010                 UND WEITER
         SPACE
COMPUNIT CLC   6(0,R2),4(R4)           UNITTYPE VERGLEICHEN
         SPACE
PARM010  DS    0H
         BCTR  R3,0
         LA    R2,2(R2)                ADRESSE PARAMETER - BEREICH
         SPACE 2
         EX    R3,PARMSAVE
         LA    R2,PARMAREA             ADRESSE PARAMETER-AREA LADEN
         USING PARM,R2                 DSECT ADRESSIEREN
         SPACE 2
         B     PARMOK                  VOLUME AUSWAEHLEN
         SPACE
PARMSAVE EQU   *
         MVC   PARMAREA(0),0(R2)       PARAMETER UEBERTRAGEN
         SPACE
NOPARM   EQU   *
         WTO   'KEINE GUELTIGE PARAMETER-ANGABE ===> ABBRUCH'
         LA    R15,8
         ENDE  RC=(R15)
         EJECT
         SPACE 2
PARMOK   EQU   *
         SPACE
         MVC   OUTLINE,BLANKS          AUSGABEZEILE LOESCHEN
         SPACE
*        ******************************
*        *    DD - STAEMENT ANALYSE   *
*        *  UND ALLOC SORTWK BEREICHE *
*        ******************************
         SPACE 2
LISTE1   DS    0H
         DEVTYPE $SYSPRNT,DEVAREA
         LTR   R15,R15                 SYSPRINT DD-STATEMENT PRESENT ?
         BNZ   LISTE2                   NO ==> DON'T SET SWITCH
         OI    SWITCH2,X'01'
         SPACE
         LA    R1,DYNCBPT2             ADRESSE CB-CHAIN LADEN
         DYNALLOC
         LTR   R15,R15                 DYNALLOC OK ?
         BNZ   DYNERROR                NEIN ==> FEHLERMELDUNG
         SPACE
LISTE2   DS    0H
         DEVTYPE $SYSOUT,DEVAREA
         LTR   R15,R15                 SYSOUT DD-STATEMENT PRESENT ?
         BNZ   LISTE3                   NO ==> DON'T SET SWITCH
         OI    SWITCH2,X'02'
         LA    R1,DYNCBPT3             ADRESSE CB-CHAIN LADEN
         DYNALLOC
         LTR   R15,R15                 DYNALLOC OK ?
         BNZ   DYNERROR                NEIN ==> FEHLERMELDUNG
         SPACE
LISTE3   DS    0H
         DEVTYPE $SYSOUT2,DEVAREA
         LTR   R15,R15                 SYSOUT2 DD-STATEMENT PRESENT ?
         BNZ   LISTEX                   NO ==> DON'T SET SWITCH
         OI    SWITCH2,X'04'
         LA    R1,DYNCBPT4             ADRESSE CB-CHAIN LADEN
         DYNALLOC
         LTR   R15,R15                 DYNALLOC OK ?
         BNZ   DYNERROR                NEIN ==> FEHLERMELDUNG
         SPACE
LISTEX   DS    0H
         EJECT
*        ******************************
*        *    VOL-TAB AUFBAUEN        *
*        ******************************
         SPACE 2
FILLVTAB EQU   *
         LA    R5,VOLTABLE             ADRESSE VOL-TABELLE
         TM    SWITCH1,X'04'           ALLE VOLUMES ?
         BO    ALLVOLS                 JA ==> DO IT
FILL01   EQU   *
         MVC   0(6,R5),0(R2)           MOVE VOLUME
         LA    R2,7(R2)                NAECHSTER PARAMETER
         CLI   0(R2),X'FF'             ENDE DER PARAMETER
         BE    ENDFILL                 JA ==> ZUM ENDE
         LA    R5,6(R5)                NAECHSTES TABELLEN-ELEMENT
         B     FILL01
         SPACE 2
ALLVOLS  EQU   *
         L     R4,CVTPTR               ADRESSE CVT
         USING CVTMAP,R4               ADRESSIERUNG CVT
         USING UCBOB,R6                ADRESSIERUNG UCB
         XC    UCBWORKA,UCBWORKA       WORK BEREICH LOESCHEN
         LA    R1,UCBWORKA
         ST    R1,UCBPWORK             A(WORK BEREICH)
         MVI   UCBDEVCL,UCB3DACC       NUR DASD DEVICES
         LA    R1,UCBDEVCL
         ST    R1,UCBPDEVT             A(DEVICE CLASS)
         LA    R1,UCBADDR
         ST    R1,UCBPUCBA             A(UCB ADDRESSE)
         OI    UCBPUCBA,X'80'          LETZTER EINTRAG
         LA    R1,UCBPARML             POINTER SETZEN
         XR    R6,R6                   REGISTER 6 LOESCHEN
         SPACE
         LA    R8,99                    LOOP - ZAEHLER SETZEN
NUCB     EQU   *
         L     R15,CVTUCBSC            ADRESSE UCB SCAN ROUTINE
         BALR  R14,R15                 BRANCH INTO IT
         SPACE
         LTR   R15,R15                 UCB ZURUECKGEGEBEN ?
         BNZ   ENDFILL                 NO ==> ENDE
         SPACE
         L     R6,UCBADDR              UCB-ADRESSE LADEN
         TM    UCBSTAT,UCBONLI          DASD ONLINE ?
         BNO   NUCB                     NO ==> NEXT UCB
         LA    R5,VOLTABLE              ADRESSE VOLUME TABELLE
CHCKVOL  EQU   *
         CLC   0(2,R5),=X'FFFF'         TABELLEN-ENDE ?
         BE    NOPROCD                  JA ==> NOCH NICHT VERARBEITET
         CLC   0(6,R5),28(R6)           TAB - UCB GLEICH ?
         BE    NUCB                     JA ==> SCHON VERARBEITET
         LA    R5,6(R5)                 NEIN ==> NAECHSTES TAB-ELEMENT
         B     CHCKVOL
         SPACE
NOPROCD  EQU   *
         TM    SWITCH2,X'08'            UNIT SPEZIFIZIERT ?
         BNO   *+14                     NO ==> USE THIS VOLSER
         CLC   18(2,R6),UNIT            DIESE UNIT ANGEFORDERT ?
         BNE   NUCB                     NEIN ==> DROP IT
         MVC   0(6,R5),28(R6)           VOLUME IN TABELLE SPEICHERN
         BCT   R8,NUCB
         WTO   'TABELLEN - UEBERLAUF ==> PROGRAMM-ENDE'
         SPACE
ENDFILL  EQU   *
         LA    R2,VOLTABLE             PARAMETER REGISTER LADEN
         DROP  R4
         DROP  R6
         EJECT
*        ******************************
*        *    PROGRAMM - STEUERUNG    *
*        ******************************
         SPACE 2
NEXTVOL  EQU   *
         MVC   LASTF1,BLANKS           LAST F1 - POINTER LOESCHEN
         MVI   SWITCH1,X'00'           SCHALTBITS LOESCHEN
         ZAP   PGECNT1,=P'0'           ZAEHLER INITIALISIEREN
         ZAP   LNECNT1,=P'99'
         ZAP   PGECNT2,=P'0'
         ZAP   LNECNT2,=P'99'
         ZAP   PGECNT3,=P'0'
         ZAP   LNECNT3,=P'99'
         SPACE
         BAL   RL,GETUCB               VTOC VERARBEITEN
         SPACE
         LA    R2,6(R2)                NAECHSTES FELD ADRESSIEREN
         CLI   0(R2),X'FF'             ENDE DES PARM-BEREICHES ?
         BNE   NEXTVOL                 NEIN ===> VERARBEITEN
         SPACE
ENDPARM  EQU   *
         B     PROGENDE                ===> PROGRAMMENDE
         EJECT
*        ******************************
*        *    VTOC - ADRESSIERUNG     *
*        ******************************
         SPACE 2
GETUCB   EQU   *
         SPACE
         ST    RL,SAVEPRM              LINK-REG. SICHERN
         SPACE
         L     R4,CVTPTR               ADRESSE CVT
         USING CVTMAP,R4               ADRESSIERUNG CVT
         USING UCBOB,R6                ADRESSIERUNG UCB
         XC    UCBWORKA,UCBWORKA       WORK BEREICH LOESCHEN
         LA    R1,UCBWORKA
         ST    R1,UCBPWORK             A(WORK BEREICH)
         MVI   UCBDEVCL,UCB3DACC       NUR DASD DEVICES
         LA    R1,UCBDEVCL
         ST    R1,UCBPDEVT             A(DEVICE CLASS)
         LA    R1,UCBADDR
         ST    R1,UCBPUCBA             A(UCB ADDRESSE)
         OI    UCBPUCBA,X'80'          LETZTER EINTRAG
         LA    R1,UCBPARML             POINTER SETZEN
         XR    R6,R6                   REGISTER 6 LOESCHEN
         SPACE
NEXTUCB  EQU   *
         L     R15,CVTUCBSC            ADRESSE UCB SCAN ROUTINE
         BALR  R14,R15                 BRANCH INTO IT
         SPACE
         LTR   R15,R15                 UCB ZURUECKGEGEBEN ?
         BNZ   VOLNTFND                NO ==> ENDE
         SPACE
         L     R6,UCBADDR              UCB-ADRESSE LADEN
         CLC   0(6,R2),28(R6)          VOLUME GEWUENSCHT ?
         BNE   NEXTUCB
         TM    UCBSTAT,UCBONLI          DASD ONLINE ?
         BNO   NEXTUCB
         B     DYNALLOC                VTOC LESEN
         SPACE 2
VOLNTFND EQU   *
         WTO   'VOLUME NICHT GEFUNDEN'
*        ABEND 333,DUMP       ***** TEST *****
         L     RL,SAVEPRM              TRY NEXT PARAMETER
         BR    RL
         DROP  R4
         EJECT
*        ******************************
*        *   ALLOCATE UNIT            *
*        ******************************
         SPACE 2
DYNALLOC EQU   *
         SPACE
         MVI   DYNTYPE,X'02'           UNALLOCATION
         MVI   DYNTXFLG,X'80'          TXPTR-ENDE
         LA    R1,DYNCBPTR             ADRESSE CB-CHAIN LADEN
         SPACE
         DYNALLOC
         SPACE
         MVI   DYNTYPE,X'01'           ALLOCATION
         MVI   DYNTXFLG,X'00'
         MVC   DYNALVOL,0(R2)          VOLUME UEBERTRAGEN
         LA    R1,DYNCBPTR             ADRESSE CB-CHAIN LADEN
         SPACE
         DYNALLOC
         SPACE
         LTR   R15,R15                 DYNALLOC OK ?
         BNZ   DYNERROR                NEIN ==> FEHLERMELDUNG
         EJECT
*        ******************************
*        *   OPEN SORT ENVIRONMENT    *
*        ******************************
         SPACE 2
SORT0001 DS    0H
         TM    SWITCH2,X'01'          LISTE 1 ?
         BNO   SORT0002               NO ==> SKIP OPEN
         CALL  SRTOPEN,(SORTTAB1)
         SPACE
SORT0002 DS    0H
         TM    SWITCH2,X'02'          LISTE 2 ?
         BNO   SORT0003               NO ==> SKIP OPEN
         CALL  SRTOPEN,(SORTTAB2)
         SPACE
SORT0003 DS    0H
         TM    SWITCH2,X'04'          LISTE 3 ?
         BNO   SORT9999               NO ==> SKIP OPEN
         CALL  SRTOPEN,(SORTTAB3)
         SPACE
SORT9999 DS    0H
         EJECT
*        ******************************
*        *    CHECK OB INDEXED VTOC   *
*        ******************************
         SPACE 2
         CVAFTST UCB=(R6)
         SPACE
         LTR   R15,R15                 RC = 0 ?
         BZ    NONIDXED                JA ==> KEIN INDEX
         C     R15,=F'4'               RC = 4 ?
         BE    NONIDXED                JA ==> KEIN INDEX
         SPACE
         OI    SWITCH1,X'20'           SCHALTBIT EIN
         ST    R6,UCBADDR              UCB-ADRESSE SICHERN
NONIDXED EQU   *
         EJECT
*        ******************************
*        *    NAECHSTEN DSCB LESEN    *
*        ******************************
         SPACE 2
GETVTOC  EQU   *
         SPACE
         LA    R0,16                   FUNKTION LADEN
         SPACE
         LINK  EP=DATECHNG
         ST    R1,FW                   ERGEBNIS SICHERN
         MVC   TITDATUM,DATEMASK
         ED    TITDATUM,FW             IN TITELZEILE EDITIEREN
         SPACE
         TIME
         SRL   R0,4                    1/100SEK. WEG
         ST    R0,FW                   ERGEBNIS SICHERN
         OI    FW+3,X'0C'              VORZEICHEN EINSETZEN
         MVC   TITZEIT,TIMEMASK
         ED    TITZEIT,FW              IN TITELZEILE EDITIEREN
         SPACE
         MVC   TITUNIT,UCBNAME        UNIT-ADR IN TITELZEILE
         MVC   TITVOL,0(R2)           VOLUME IN TITELZEILE
         SPACE
         LA    R3,UTYPETAB            ADDRESS OF UNITTYPE TABLE
UTYPE01  DS    0H
         CLI   0(R3),X'FF'            END OF TABLE
         BE    UTYPE99                YES => ISSUE MESSAGE
         CLC   0(2,R3),UCBTBYT3       COMPARE DEVICE CODE
         BE    *+12
         LA    R3,12(R3)              NOT EQUAL ==> NEXT ELEMENT
         B     UTYPE01                AND COMPARE AGAIN
         SPACE
         MVC   TITUTYPE,4(R3)         MOVE TYPE TO HEADER LINE
         MVC   MAXTRKS+2(2),2(R3)     SAVE TRKS/CYL
         MVC   VOL,0(R2)              VOLUME IN OBTAIN-PARM
*
*        UMRECHNUNG TTR0 ==> CCHHR
*
         XR    R4,R4                   R4 LOESCHEN
         LH    R5,UCBVTOC              TT-PORTION LADEN
         D     R4,MAXTRKS              DURCH TRKS/CYL TEILEN
         STH   R5,CC                   CYL-NO SPEICHERN
         STH   R4,HH                   TRK-NO SPEICHERN
         MVC   R,UCBVTOC+2             RECORD SPEICHERN
         SPACE
         TM    SWITCH1,X'20'           INDEXED VTOC
         BNO   *+12                    NO ==> GO ON
         BAL   RL,INDXVTOC             YES ==> USE CVAF
         B     ENDVTOC                 END OF VTOC
         SPACE
         DROP  R6
         SPACE 3
NEXTDSCB EQU   *
         CLC   LASTF1,=C'     '        F4-DSCB VERARBEITET ?
         BE    *+14                    NEIN ==> DO IT
         CLC   CCHHR,LASTF1            LETZTER F1DSCB VERARBEITET ?
         BH    ENDVTOC                 JA ==> VTOC-ENDE
         SPACE
         MVC   SAVEPTR,CCHHR           POINTER SICHERN
         SPACE
         OBTAIN READNEXT
         SPACE
         LTR   R15,R15                 OBTAIN OK ?
         BNZ   OBTERROR                NEIN ==> FEHLERMELDUNG
         SPACE 2
         CLI   DSCBAREA+44,X'00'       F0-DSCB ?
         BE    NEXTPTR
         SPACE 2
         CLI   DSCBAREA+44,X'F4'       F4-DSCB ?
         BNE   *+8
         BAL   RL,F4DSCB
         TM    SWITCH1,X'10'           F5-DSCB SCHON VERARBEITET ?
         BO    *+16                    JA ==> SKIP IT
         CLI   DSCBAREA+44,X'F5'       F5-DSCB ?
         BNE   *+8
         BAL   RL,F5DSCB
         CLI   DSCBAREA+44,X'F1'       F1-DSCB ?
         BNE   *+8
         BAL   RL,F1DSCB
         SPACE 2
         MVC   CCHHR,SAVEPTR           POINTER ZURUECKLADEN
         SPACE
NEXTPTR  EQU   *
         XC    FW,FW                   FULLWORD LOESCHEN
         MVC   FW+3(1),R               RECORDNUMMER LADEN
         L     R7,FW                   IN R7 BRINGEN
         A     R7,=F'1'                1 ADDIEREN
         ST    R7,FW                   ZURUECKLADEN
         MVC   R,FW+3
         C     R7,MAXDSCBS             MAX DSCB-ANZAHL UEBERSCHRITTEN
         BNH   NEXTDSCB                NEIN ==> LESEN
         SPACE
         MVC   R,=X'01'                RECORDNUMMER = NULL
         XC    FW,FW                   FULLWORD LOESCHEN
         MVC   FW+2(2),HH              SPURNUMMER LADEN
         L     R7,FW                   IN R7 BRINGEN
         A     R7,=F'1'                1 ADDIEREN
         ST    R7,FW                   ZURUECKLADEN
         MVC   HH,FW+2
         C     R7,MAXTRKS              MAX SPUR-ANZAHL UEBERSCHRITTEN
         BNE   NEXTDSCB                NEIN ==> LESEN
         SPACE
         MVC   HH,=X'0000'             SPURNUMMER = NULL
         XC    FW,FW                   FULLWORD LOESCHEN
         MVC   FW+2(2),CC              CYL-NUMMER LADEN
         L     R7,FW                   IN R7 BRINGEN
         A     R7,=F'1'                1 ADDIEREN
         ST    R7,FW                   ZURUECKLADEN
         MVC   CC,FW+2
         B     NEXTDSCB                NAECHSTEN DSCB HOLEN
         SPACE
ENDVTOC  EQU   *
         BAL   RL,PRINT                ERGEBNISSE DRUCKEN
         SPACE
         L     RL,SAVEPRM              RETURN-ADRESSE LADEN
         BR    RL                      ZURUECK IN PARMVER
         EJECT
*        ******************************
*        *    PROGRAMM - ENDE         *
*        ******************************
         SPACE 2
PROGENDE EQU   *
         CLOSE SYSPRINT
         CLOSE SYSOUT
         CLOSE SYSOUT2
         SPACE
         XR    R15,R15
         ENDE  RC=(R15)
         EJECT
*        ******************************
*        *    FEHLER - ROUTINEN       *
*        ******************************
         SPACE 2
OBTERROR EQU   *
         WTO   'FEHLER BEI OBTAIN'
         ABEND 111,DUMP
         SPACE 2
DYNERROR EQU   *
         WTO   'FEHLER BEI DYNALLOC'
         ABEND 222,DUMP
         SPACE 2
CVAFERR  EQU   *
         WTO   'FEHLER BEI ZUGRIFF AUF INDIZIERTE VTOC'
         ABEND 333,DUMP
         SPACE 2
UTYPE99  EQU   *
         WTO   'UNGUELTIGER DEVICE TYPE'
         ABEND 444,DUMP
         EJECT
*        ******************************
*        * VERARBEITUNG FORMAT-1-DSCB *
*        ******************************
         SPACE 2
F1DSCB   EQU   *
         ST    RL,SAVEF1               LINK-REGISTER SICHERN
         XC    VTOCSATZ,VTOCSATZ       AUSGABEBEREICH LOESCHEN
         LA    R9,DSCBAREA             ADRESSE DSCB LADEN
         USING IECSDSL1,R9             BASISREG. EINRICHTEN
         SPACE
         MVC   DSN,DS1DSNAM            DSNAME
         MVC   VOLSER,DS1DSSN          VOLSER
         SPACE
         XC    LTRK,LTRK
         MVC   LTRK+2(3),DS1LSTAR      LETZTER USED TRACK
         SPACE
         XC    FW,FW
         MVC   FW+3(1),DS1NOEPV        ANZAHL EXTENTS
         L     R7,FW
         ST    R7,EXTANZB              SAVE EXTENT ANZAHL
         CVD   R7,DW
         UNPK  EXTANZ,DW
         OI    EXTANZ+1,X'F0'
         SPACE
         XC    FW,FW
         MVC   FW+2(2),DS1BLKL         BLKSIZE
         L     R7,FW
         CVD   R7,DW
         ZAP   ZPL3,DW
         MVC   BLKSIZE,MASKEC6
         ED    BLKSIZE,ZPL3
         SPACE
         XC    FW,FW
         MVC   FW+2(2),DS1LRECL        LRECL
         L     R7,FW
         CVD   R7,DW
         ZAP   ZPL3,DW
         MVC   LRECL,MASKEC6
         ED    LRECL,ZPL3
         SPACE
         LA    R7,RECFMTAB             ADRESSE RECFM-TABELLE
RECFMLOP EQU   *
         CLC   0(2,R7),=X'FFFF'        TABELLENENDE ?
         BE    NORECFM                 JA ==> KEIN RECFM
         CLC   DS1RECFM,0(R7)          RECFM VERGLEICHEN
         BE    RECFMOK                 GEFUNDEN ==> WEITER
         LA    R7,4(R7)                NAECHSTES TAB-ELEMENT
         B     RECFMLOP
RECFMOK  EQU   *
         MVC   RECFM,1(R7)             RECFM UEBERTRAGEN
NORECFM  EQU   *
         SPACE
         LA    R7,DSORGTAB             ADRESSE DSORG-TABELLE
DSORGLOP EQU   *
         CLC   0(2,R7),=X'FFFF'        TABELLENENDE ?
         BE    NODSORG                 JA ==> KEINE DSORG
         CLC   DS1DSORG,0(R7)          DSORG VERGLEICHEN
         BE    DSORGOK                 GEFUNDEN ==> WEITER
         LA    R7,4(R7)                NAECHSTES TAB-ELEMENT
         B     DSORGLOP
DSORGOK  EQU   *
         MVC   DSORG,2(R7)             DSORG UEBERTRAGEN
NODSORG  EQU   *
         SPACE
         TM    DS1DSIND,X'40'          IS DSN RACF PROTECTED ?
         BNO   *+8                     NO ==> SKIP INDICATION
         MVI   RACFBIT,C'Y'            YES ==> INDICATE IT
         SPACE
         LA    R8,DS1CREDT             ADRESSE CREATION DATE
         BAL   RL,DATECONV             UMWANDELN
         MVC   CREDT,DATE              UND UEBERTRAGEN
         SPACE
         LA    R8,DS1EXPDT             ADRESSE EXPIRATION DATE
         BAL   RL,DATECONV             UMWANDELN
         MVC   EXPDT,DATE              UND UEBERTRAGEN
         SPACE
         LA    R8,DS1REFD              ADRESSE DATE LAST USED
         BAL   RL,DATECONV             UMWANDELN
         MVC   LUSED,DATE              UND UEBERTRAGEN
         SPACE
***********************************************************************
*   IF YOU DO NOT HAVE DMS OR OTHER DASD MANAGEMENT SYSTEMS WITH      *
*   THE LAST MODIFIED DATE IN THE VOLSER FIELD YOU CAN LEAVE OUT      *
*   THE NEXT PART OF INSTRUCTIONS.                                    *
***********************************************************************
         CLI   DS1SYSCD+8,C' '         NAME OF MODIFYING JOB PRESENT ?
         BE    F1CALC0                 NO ==> SKIP CONVERTION
         CLC   DS1DSSN,0(R2)           VOLSER PRESENT ?
         BE    F1CALC0                 YES ==> SKIP CONVERTION
         CLI   DS1DSSN+3,C'A'          DATE PRESENT ?
         BH    F1CALC0                 YES ==> SKIP CONVERTION
         LA    R8,DS1DSSN+3            ADRESSE DATE LAST MODIFIED
         BAL   RL,DATECONV             UMWANDELN
         MVC   LMOD,DATE               UND UEBERTRAGEN
         B     *+10
F1CALC0  EQU   *
         MVC   LMOD,BLANKS             INSERT BLANKS
***********************************************************************
*        END OF LAST MODIFIED ROUTINE                                 *
***********************************************************************
         SPACE
         LA    R5,3                    LOOP-COUNTER
         LA    R8,DS1EXT1              ADRESSE 1. EXT-DESC.
F1CALC   EQU   *
         BAL   RL,STORCALC             EXTENT-BERECHNUNG
         SPACE
         BAL   RL,SORTFILL             UEBERGABE AN SORT
         SPACE
         LA    R8,10(R8)               NAECHSTES FELD
         CLC   0(2,R8),=X'0000'        WEITERE EXTENTS ?
         BE    F1ENDE                  ZUM ENDE
         BCT   R5,F1CALC
         SPACE
         CLC   DS1PTRDS,=X'0000000000' WEITERE DSCBS ?
         BE    F1ENDE                  ZUM ENDE
         MVC   CCHHR,DS1PTRDS          POINTER LADEN
         OBTAIN READNEXT
         LTR   R15,R15                 OBTAIN OK ?
         BNZ   OBTERROR                NEIN ==> FEHLERMELDUNG
         SPACE
         CLI   DSCBAREA+44,C'2'        F2-DSCB ?
         BNE   *+8                     NEIN ==> WEITER
         BAL   RL,F2DSCB               JA ==> VERARBEITEN
         CLI   DSCBAREA+44,C'3'        F3-DSCB ?
         BNE   *+8                     NEIN ==> WEITER
         BAL   RL,F3DSCB               JA ==> VERARBEITEN
         SPACE
F1ENDE   EQU   *
         SPACE
         XR    R6,R6                   CLEAR R6
         ZAP   DW,ZUSED
         CVB   R7,DW                   PROZENT USED TO BINARY
         LTR   R7,R7                   USED = 0 ?
         BZ    F1ENDE2                 YES ==> DO NOTHING
         L     R8,EXTANZB              LOAD EXTENT ANZAHL
         DR    R6,R8
         SLL   R6,1                    REST MAL 2
         CR    R6,R8                   COMPARE MIT EXTANZ
         BL    *+8                     LOW ==> KEIN AUFRUNDEN
         A     R7,=F'1'                HIGH ==> AUFRUNDEN
F1ENDE2  EQU   *
         CVD   R7,DW                   CONVERT TO DECIMAL
         ZAP   ZPL2,DW
         MVC   USED,MASKEC4
         ED    USED,ZPL2
         SPACE
         MVC   ANZTRK,MASKEC6
         ED    ANZTRK,ZTRKANZ
         SPACE
         MVC   EXNUMMER,BLANKS         EXTENT NUMMER BLANK
         SPACE
         TM    SWITCH2,X'04'           LISTE 3 ANGEFORDERT ?
         BNO   F1ENDE3                 NEIN ==> KEIN SORT
         CALL  SRTFILL,(SORTTAB3,VTOCSATZ)
         SPACE
F1ENDE3  DS    0H
         ZAP   ZTRKANZ,=P'0'           ZAEHLER AUF NULL
         ZAP   ZUSED,=P'0'             Z-FELD AUF NULL
         DROP  R9
         L     RL,SAVEF1               RETURN-ADRESSE LADEN
         BR    RL                      ZURUECK
         EJECT
*        ******************************
*        * VERARBEITUNG FORMAT-2-DSCB *
*        ******************************
         SPACE 2
F2DSCB   EQU   *
         ST    RL,SAVEF2               LINK-REGISTER SICHERN
         LA    R9,DSCBAREA             ADRESSE DSCBAREA
         USING IECSDSL2,R9             R9 = BASISREGISTER DSCB
         SPACE
         CLC   DS2PTRDS,=X'0000000000' F3-DSCB VORHANDEN ?
         BE    F2ENDE                  ZUM ENDE
         MVC   CCHHR,DS2PTRDS          JA ==> POINTER LADEN
         SPACE
         OBTAIN READNEXT
         LTR   R15,R15                 OBTAIN OK ?
         BNZ   OBTERROR                NEIN ==> FEHLERMELDUNG
         SPACE
F2ENDE   EQU   *
         DROP  R9
         L     RL,SAVEF2               RETURN-ADRESSE LADEN
         BR    RL                      ZURUECK
         EJECT
*        ******************************
*        * VERARBEITUNG FORMAT-3-DSCB *
*        ******************************
         SPACE 2
F3DSCB   EQU   *
         ST    RL,SAVEF3               LINK-REGISTER SICHERN
         LA    R9,DSCBAREA             ADRESSE DSCBAREA
         USING IECSDSL3,R9             R9 = BASISREGISTER DSCB
         NI    SWITCH1,X'BF'           BIT 2 AUSSCHALTEN
         SPACE
         LA    R8,DS3EXTNT             ADRESSE EXTENT-BESCHREIBUNG
         LA    R5,4                    ANZAHL EXTENTS (1.TEIL)
         SPACE
F3CALC   EQU   *
         BAL   RL,STORCALC             BERECHNUNG DES BEREICHES
         SPACE
         BAL   RL,SORTFILL             UEBERGABE AN SORT
         SPACE
         LA    R8,10(R8)                NAECHSTER EXTENT
         CLC   0(2,R8),=X'0000'         LAST EXTENT ?
         BE    F3ENDE                   JA ==> ZUM ENDE
         BCT   R5,F3CALC                NEIN ==> VERARBEITEN
         SPACE
         TM    SWITCH1,X'40'            SCHALTBIT AN ?
         BO    F3ENDE                   JA ==> ENDE
         LA    R8,DS3ADEXT              ADRESSE EXTENTS (2.TEIL)
         LA    R5,9                     ANZAHL EXTENTS (2.TEIL)
         OI    SWITCH1,X'40'            SCHALTBIT AN
         B     F3CALC
         SPACE
F3ENDE   EQU   *
         DROP  R9
         L     RL,SAVEF3               RETURN-ADRESSE LADEN
         BR    RL                      ZURUECK
         EJECT
*        ******************************
*        * VERARBEITUNG FORMAT-4-DSCB *
*        ******************************
         SPACE 2
F4DSCB   EQU   *
         ST    RL,SAVEF4               LINK-REGISTER SICHERN
         LA    R9,DSCBAREA+44          ADRESSE DSCB LADEN
         USING IECSDSL4,R9             R9 = BASISREGISTER
         SPACE
         XC    VTOCSATZ,VTOCSATZ
         TM    SWITCH1,X'20'           INDEXED VTOC ?
         BNO   *+14                    NO ==> JUMP OVER MVC
         MVC   DSN,=CL44' ++++   V T O C (INDEXED)   ++++'
         B     *+10
         MVC   DSN,=CL44' ++++   V T O C   ++++'
         MVC   VOLSER,0(R2)            VOLSER
         SPACE
         LA    R8,DS4VTOCE             ADRESSE EXTENT-BESCHREIBUNG
         BAL   RL,STORCALC             BERECHNUNG DES BEREICHES
         XC    EXNUMMER,EXNUMMER
         SPACE
         BAL   RL,SORTFILL             UEBERGABE AN SORT
         TM    SWITCH2,X'04'           LISTE 3 ANGEFORDERT ?
         BNO   F4ENDE                  NEIN ==> KEIN SORT
         CALL  SRTFILL,(SORTTAB3,VTOCSATZ)
         SPACE
F4ENDE   DS    0H
         ZAP   ZTRKANZ,=P'0'           ZAEHLER AUF NULL
         MVC   LASTF1,DS4HPCHR         LAST F1-DSCB
         MVC   NODSCBTR,DS4DEVDT       ANZAHL DSCBS/TRACK
         SPACE
         DROP  R9
         L     RL,SAVEF4               LINK-REGISTER LADEN
         BR    RL                      RETURN TO CALLING ROUTINE
         EJECT
*        ******************************
*        * VERARBEITUNG FORMAT-5-DSCB *
*        ******************************
         SPACE 2
F5DSCB   EQU   *
         ST    RL,SAVEF5               LINK-REGISTER SICHERN
         SPACE
         LA    R9,DSCBAREA             DSCB ADRESSIEREN
         USING IECSDSL5,R9             DSECT ADRESSIEREN
         SPACE
         NI    SWITCH1,X'7F'           1. SCHALTBIT AUS
         XC    VTOCSATZ,VTOCSATZ
         MVC   DSN,=CL44' ****   FREESPACE   ****'
         MVC   VOLSER,0(R2)            VOLSER
         SPACE
STRTF5   EQU   *
         OI    SWITCH1,X'10'           SCHALTBIT AN
         LA    R8,DS5AVEXT             ADRESSE EXTENT-BESCHREIBUNG
         LA    R4,8                    ANZAHL EXTENTS (1.TEIL)
         SPACE
CALCSTOR EQU   *
         BAL   RL,STORAREA             BERECHNUNG DES BEREICHES
         SPACE
         BAL   RL,SORTFILL             UEBERGABE AN SORT
         SPACE
         LA    R8,5(R8)                 NAECHSTER EXTENT
         CLC   0(5,R8),=X'0000000000'   LAST EXTENT ?
         BE    F5ENDE                   JA ==> ZUM ENDE
         BCT   R4,CALCSTOR              NEIN ==> VERARBEITEN
         SPACE
         TM    SWITCH1,X'80'            SCHALTBIT AN ?
         BO    NEXTF5                   JA ==> NEXT F5-DSCB
         LA    R8,DS5MAVET              ADRESSE FREE SPACES (2.TEIL)
         LA    R4,18                    ANZAHL EXTENTS (2.TEIL)
         OI    SWITCH1,X'80'            SCHALTBIT AN
         B     CALCSTOR
         SPACE
NEXTF5   EQU   *
         NI    SWITCH1,X'7F'           1. SCHALTBIT AUS
         MVC   CCHHR,DS5PTRDS           ADRESSE NAECHSTEN F5-DSCB
         OBTAIN READNEXT
         LTR   R15,R15                  OBTAIN OK ?
         BNZ   OBTERROR                 NEIN ==> FEHLERMELDUNG
         SPACE
         B     STRTF5                   F5-DSCB VERARBEITEN
         SPACE
F5ENDE   EQU   *
         TM    SWITCH1,X'20'           INDIZIERTE VTOC ?
         BO    F5ENDE3                 NEIN ==> UEBERSPRINGEN
         MVC   ANZTRK,MASKEC6
         ED    ANZTRK,ZTRKANZ
         MVC   EXNUMMER,BLANKS         EXTENT NUMMER BLANK
         TM    SWITCH2,X'04'           LISTE 3 ANGEFORDERT ?
         BNO   F5ENDE2                 NEIN ==> KEIN SORT
         CALL  SRTFILL,(SORTTAB3,VTOCSATZ)
F5ENDE2  EQU   *
         ZAP   ZTRKANZ,=P'0'           ZAEHLER AUF NULL
         SPACE
F5ENDE3  EQU   *
         L     RL,SAVEF5               RETURN-ADRESSE LADEN
         BR    RL
         DROP  R9
         EJECT
*        ******************************
*        *    DRUCK VTOC - LISTE 1    *
*        *     - BELEGUNGSFOLGE -     *
*        ******************************
         SPACE 2
PRINT    EQU   *
         ST    RL,SAVEPRT              LINK-REGISTER SICHERN
         SPACE
         TM    SWITCH2,X'01'           LISTE 1 ANGEFORDERT ?
         BNO   NOSORT01                NEIN ==> KEIN SORT
         OPEN  (SYSPRINT,OUTPUT)
         OI    SWITCH1,X'01'           OPEN INDIKATOR SETZEN
         SPACE
GETSORT1 EQU   *
         CALL  SRTGETR,(SORTTAB1,VTOCSATZ)
         CLC   EOF1,=C'99'             END OF FILE ?
         BE    SORTEOF1                JA ==> ENDE
         SPACE
MOVEDAT1 EQU   *
         MVC   OUTDSN,DSN
         MVC   OUTCREDT,CREDT
         MVC   OUTEXPDT,EXPDT
         MVC   OUTLUSED,LUSED
         MVC   OUTLMOD,LMOD
         MVC   OUTEXTAN,EXTANZ
         MVC   OUTEXTNO,EXNUMMER
         MVC   OUTUSED,USED+1
         MVC   OUTRACF,RACFBIT
         MVC   OUTDSORG,DSORG
         MVC   OUTRECFM,RECFM
         MVC   OUTLRECL,LRECL+1
         MVC   OUTBLKS,BLKSIZE+1
         MVC   OUTTRKS,ANZTRK+1
         SPACE
         XR    R6,R6
         PACK  DW,LOWTRK               LOW-TRACK PACKEN
         CVB   R7,DW                   IN BINAERFORM
         D     R6,MAXTRKS              DURCH TRK/CYL TEILEN
         CVD   R7,DW                   CYL
         UNPK  ZCC,DW
         OI    ZCC+2,X'F0'
         CVD   R6,DW                   TRK
         UNPK  ZHH,DW
         OI    ZHH+1,X'F0'
         MVC   OUTCCHH1,ZCCHH          START - ADRESSE
         SPACE
         XR    R6,R6
         PACK  DW,HIGHTRK              HIGH-TRACK PACKEN
         CVB   R7,DW                   IN BINAERFORM
         D     R6,MAXTRKS              DURCH TRK/CYL TEILEN
         CVD   R7,DW                   CYL
         UNPK  ZCC,DW
         OI    ZCC+2,X'F0'
         CVD   R6,DW                   TRK
         UNPK  ZHH,DW
         OI    ZHH+1,X'F0'
         MVC   OUTCCHH2,ZCCHH          END - ADRESSE
         SPACE
         CP    LNECNT1,=P'55'          SEITE VOLL ?
         BNH   *+8                     NEIN ==> WEITER
         BAL   RL,TITEL1               SONST TITELZEILE
         SPACE
         PUT   SYSPRINT,OUTLINE
         SPACE
         MVC   OUTLINE,BLANKS          AUSGABEZEILE LOESCHEN
         AP    LNECNT1,=P'1'           ZEILENZAEHLER ERHOEHEN
         B     GETSORT1                NAECHSTEN SATZ
         SPACE
SORTEOF1 EQU   *
         CALL  SRTCLSE,(SORTTAB1)
         SPACE
NOSORT01 DS    0H
         TM    SWITCH2,X'02'           LISTE 2 ANGEFORDERT ?
         BNO   NOSORT02                NEIN ==> KEIN SORT
         OPEN  (SYSOUT,OUTPUT)
         OI    SWITCH1,X'02'           OPEN INDIKATOR SETZEN
         EJECT
*        ******************************
*        *    DRUCK VTOC - LISTE 2    *
*        *     -  DSNAMENFOLGE  -     *
*        ******************************
         SPACE 2
GETSORT2 EQU   *
         CALL  SRTGETR,(SORTTAB2,VTOCSATZ)
         CLC   EOF2,=C'99'              END OF FILE ?
         BE    SORTEOF2                JA ==> ENDE
         SPACE
MOVEDAT2 EQU   *
         CLC   SAVEDSN,DSN             EQUAL DSN ?
         BE    *+16                    YES ==> DON'T MOVE IT TO LINE
         MVC   SAVEDSN,DSN             NO ==> MOVE IT INTO SAVE AREA
         MVC   OUTDSN,DSN
         MVC   OUTCREDT,CREDT
         MVC   OUTEXPDT,EXPDT
         MVC   OUTLUSED,LUSED
         MVC   OUTLMOD,LMOD
         MVC   OUTEXTAN,EXTANZ
         MVC   OUTEXTNO,EXNUMMER
         MVC   OUTUSED,USED+1
         MVC   OUTRACF,RACFBIT
         MVC   OUTDSORG,DSORG
         MVC   OUTRECFM,RECFM
         MVC   OUTLRECL,LRECL+1
         MVC   OUTBLKS,BLKSIZE+1
         MVC   OUTTRKS,ANZTRK+1
         SPACE
         XR    R6,R6
         PACK  DW,LOWTRK               LOW-TRACK PACKEN
         CVB   R7,DW                   IN BINAERFORM
         D     R6,MAXTRKS              DURCH TRK/CYL TEILEN
         CVD   R7,DW                   CYL
         UNPK  ZCC,DW
         OI    ZCC+2,X'F0'
         CVD   R6,DW                   TRK
         UNPK  ZHH,DW
         OI    ZHH+1,X'F0'
         MVC   OUTCCHH1,ZCCHH          START - ADRESSE
         SPACE
         XR    R6,R6
         PACK  DW,HIGHTRK              HIGH-TRACK PACKEN
         CVB   R7,DW                   IN BINAERFORM
         D     R6,MAXTRKS              DURCH TRK/CYL TEILEN
         CVD   R7,DW                   CYL
         UNPK  ZCC,DW
         OI    ZCC+2,X'F0'
         CVD   R6,DW                   TRK
         UNPK  ZHH,DW
         OI    ZHH+1,X'F0'
         MVC   OUTCCHH2,ZCCHH          END - ADRESSE
         SPACE
         CP    LNECNT2,=P'55'          SEITE VOLL ?
         BNH   *+8                     NEIN ==> WEITER
         BAL   RL,TITEL2               SONST TITELZEILE
         SPACE
         PUT   SYSOUT,OUTLINE
         SPACE
         MVC   OUTLINE,BLANKS          AUSGABEZEILE LOESCHEN
         AP    LNECNT2,=P'1'           ZEILENZAEHLER ERHOEHEN
         B     GETSORT2                NAECHSTEN SATZ
         SPACE
SORTEOF2 EQU   *
         CALL  SRTCLSE,(SORTTAB2)
         SPACE
NOSORT02 DS    0H
         TM    SWITCH2,X'04'           LISTE 2 ANGEFORDERT ?
         BNO   NOSORT03                NEIN ==> KEIN SORT
         OPEN  (SYSOUT2,OUTPUT)
         OI    SWITCH1,X'08'           OPEN INDIKATOR SETZEN
         EJECT
*        ******************************
*        *    DRUCK VTOC - LISTE 3    *
*        *     - GROESSENFOLGE  -     *
*        ******************************
         SPACE 2
GETSORT3 EQU   *
         CALL  SRTGETR,(SORTTAB3,VTOCSATZ)
         CLC   EOF3,=C'99'              END OF FILE ?
         BE    SORTEOF3                JA ==> ENDE
         SPACE
MOVEDAT3 EQU   *
         MVC   OUTDSN,DSN
         MVC   OUTCREDT,CREDT
         MVC   OUTEXPDT,EXPDT
         MVC   OUTLUSED,LUSED
         MVC   OUTLMOD,LMOD
         MVC   OUTEXTAN,EXTANZ
         MVC   OUTUSED,USED+1
         MVC   OUTRACF,RACFBIT
         MVC   OUTDSORG,DSORG
         MVC   OUTRECFM,RECFM
         MVC   OUTLRECL,LRECL+1
         MVC   OUTBLKS,BLKSIZE+1
         MVC   OUTTRKS,ANZTRK+1
         SPACE
         CP    LNECNT3,=P'55'          SEITE VOLL ?
         BNH   *+8                     NEIN ==> WEITER
         BAL   RL,TITEL3               SONST TITELZEILE
         SPACE
         PUT   SYSOUT2,OUTLINE
         SPACE
         MVC   OUTLINE,BLANKS          AUSGABEZEILE LOESCHEN
         AP    LNECNT3,=P'1'           ZEILENZAEHLER ERHOEHEN
         B     GETSORT3                NAECHSTEN SATZ
         SPACE
SORTEOF3 EQU   *
         CALL  SRTCLSE,(SORTTAB3)
         SPACE
NOSORT03 DS    0H
         L     RL,SAVEPRT              RETURN-ADRESSE LADEN
         BR    RL                      RETURN TO CALLING ROUTINE
         EJECT
*        ******************************
*        * VERARBEITUNG  FREE EXTENTS *
*        *  FUER INDIZIERTE VTOC      *
*        ******************************
         SPACE 2
INDXVTOC EQU   *
         ST    RL,SAVEIV               RETURN-ADRESSE SICHERN
         SPACE
         OBTAIN READNEXT
         SPACE
         LTR   R15,R15                 OBTAIN OK ?
         BNZ   OBTERROR                NEIN ==> FEHLERMELDUNG
         SPACE 2
         CLI   DSCBAREA+44,X'F4'       IS IT F4 - DSCB
         BNE   NOF4DSCB                NO ==> SOMETHING IS WRONG
         SPACE
         BAL   RL,F4DSCB               PROCESS F4-DSCB
         SPACE 2
         L     R6,UCBADDR              UCB-ADRESSE IN R6
         MVC   EXTENTS(5),=X'0000000000' STARTPOS. LADEN
         MVI   EXTNUM,X'FF'            MAX. 255 FREE EXTENTS
         SPACE
         CVAFDSM MF=(E,CVPL),BRANCH=YES,UCB=(R6),MAP=VOLUME,           *
               EXTENTS=EXTENTAB,COUNT=NO,ACCESS=MAPDATA
         SPACE
         C     R15,=F'4'               CVAF OK ?
         BH    CVAFERR                 NEIN ==> ABEND
         SPACE
         NI    SWITCH1,X'7F'           1. SCHALTBIT AUS
         XC    VTOCSATZ,VTOCSATZ
         MVC   DSN,=CL44' ****   FREESPACE   ****'
         MVC   VOLSER,0(R2)            VOLSER
         OI    SWITCH1,X'10'           SCHALTBIT AN
         LA    R8,EXTENTS              ADRESSE EXTENT-BESCHREIBUNG
         XC    FW,FW                   VOLLWORT LOESCHEN
         MVC   FW+3(1),EXTNUM          EXTENT-ANZAHL IN VOLLWORT
         L     R4,FW                   ANZAHL EXTENTS IN R4 LADEN
         SPACE
CALCEXT  EQU   *
         BAL   RL,STORAREA             BERECHNUNG DES BEREICHES
         SPACE
         BAL   RL,SORTFILL             UEBERGABE AN SORT
         SPACE
         MVC   0(5,R8),=X'FFFFFFFFFF'
         LA    R8,5(R8)                 NAECHSTER EXTENT
         CLC   0(5,R8),=X'0000000000'   END OF EXTENTS ?
         BE    INDXENDE                 JA ===> GO TO ENDE
         BCT   R4,CALCEXT               NEIN ==> VERARBEITEN
         SPACE
INDXENDE EQU   *
         MVC   ANZTRK,MASKEC6
         ED    ANZTRK,ZTRKANZ          GESAMTANZAHL TRACKS
         MVC   EXNUMMER,BLANKS         EXTENT NUMMER BLANK
         TM    SWITCH2,X'04'           LISTE 3 ANGEFORDERT ?
         BNO   IDXEND01                NEIN ==> KEIN SORT
         CALL  SRTFILL,(SORTTAB3,VTOCSATZ)
IDXEND01 DS    0H
         ZAP   ZTRKANZ,=P'0'           ZAEHLER AUF NULL
         SPACE
         XC    BUFLIST(BFLHLN+BFLELN),BUFLIST   CLEAR BUFFER LIST
         OI    BFLHFL,BFLHDSCB         INDICATE DSCB READ
         MVI   BFLHNOE,1               ONE ENTRY
         LA    R4,CVAFDSCB+44          LOAD ADDRESS OF DSCB BUFFER
         ST    R4,BFLEBUF              STORE IT INTO BUFFER LIST
         MVI   BFLELTH,DSCBLTH         MOVE LENGTH OF BUFFER
         XC    CVAFDSCB(44),CVAFDSCB   SET DSN TO X'00'
         L     R6,UCBADDR              UCB-ADRESSE IN R6
         SPACE
         CVAFSEQ UCB=(R6),                                             *
               ACCESS=GTEQ,                                            *
               DSN=CVAFDSCB,                                           *
               BUFLIST=BUFLIST,                                        *
               IXRCDS=KEEP,                                            *
               MF=(E,CVPL)
         LTR   R15,R15                 CVAF OK ?
         BZ    IDX01                   YES ==> PROCESS THE RECORD
         C     R15,=F'4'               RC > 4 ?
         BH    CVAFERR                 YES ==> ABEND
         CLI   CVSTAT,X'20'            END OF FILE ?
         BE    IDXEND99                YES ==> RETURN
         B     CVAFERR                 NO ==> ABEND
         SPACE
READNXT  DS    0H
         L     R6,UCBADDR              UCB-ADRESSE IN R6
         CVAFSEQ UCB=(R6),                                             *
               ACCESS=GT,                                              *
               DSN=CVAFDSCB,                                           *
               BUFLIST=BUFLIST,                                        *
               IXRCDS=KEEP,                                            *
               MF=(E,CVPL)
         LTR   R15,R15                 CVAF OK ?
         BZ    IDX01                   YES ==> PROCESS THE RECORD
         C     R15,=F'4'               RC > 4 ?
         BH    CVAFERR                 YES ==> ABEND
         CLI   CVSTAT,X'20'            END OF FILE ?
         BE    IDXEND99                YES ==> RETURN
         B     CVAFERR                 NO ==> ABEND
         SPACE
IDX01    DS    0H
         CLI   CVAFDSCB+44,X'F1'       FORMAT-1 DSCB ?
         BNE   *+14                    NO ==> SKIP
         MVC   DSCBAREA,CVAFDSCB       COPY DSCB
         BAL   RL,F1DSCB               PROCESS F1-DSCB
         B     READNXT                 READ NEXT DSCB
         SPACE
NOF4DSCB DS    0H
         WTO   'ERSTER DSCB NICHT F4 DSCB'
         SPACE
IDXEND99 DS    0H
         CVAFDIR ACCESS=RLSE,                                          *
               BUFLIST=0,                                              *
               IXRCDS=NOKEEP,                                          *
               MF=(E,CVPL)
         L     RL,SAVEIV               RETURN-ADRESSE LADEN
         BR    RL                      RETURN
         EJECT
*        ******************************
*        * RECHENROUTINE FREE EXTENTS *
*        * R8 = EXT-ADR. IN F5-DSCB   *
*        ******************************
         SPACE 2
         DS    F
SORTFILL EQU   *
         ST    RL,*-4
         SPACE
SORT01   DS    0H
         TM    SWITCH2,X'01'           LISTE 1 ANGEFORDERT ?
         BNO   SORT02                  NEIN ==> KEIN SORT
         CALL  SRTFILL,(SORTTAB1,VTOCSATZ)
         SPACE
SORT02   DS    0H
         TM    SWITCH2,X'02'           LISTE 2 ANGEFORDERT ?
         BNO   SORTENDE                NEIN ==> KEIN SORT
         CALL  SRTFILL,(SORTTAB2,VTOCSATZ)
         SPACE
SORTENDE DS    0H
         L     RL,SORTFILL-4
         BR    RL
         EJECT
*        ******************************
*        * RECHENROUTINE FREE EXTENTS *
*        * R8 = EXT-ADR. IN F5-DSCB   *
*        ******************************
         SPACE 2
         DS    F
STORAREA EQU   *
         ST    RL,*-4
         SPACE
         LH    R5,0(R8)                START ADRESSE
         CVD   R5,DW
         UNPK  LOWTRK,DW
         OI    LOWTRK+4,X'F0'          IN CHAR DARSTELLUNG
         SPACE
         LH    R7,2(R8)                ANZAHL CYLINDER
         XR    R6,R6                   REG. 6 LOESCHEN
         M     R6,MAXTRKS              MAL ANZAHL TRKS/CYL
         XC    FW,FW                   VOLLWORT LOESCHEN
         MVC   FW+3(1),4(R8)           ANZAHL TRACKS
         A     R7,FW                   ADDIEREN
         SPACE
         CVD   R7,DW                   WERT IN DOPPELWORT
         ZAP   ZPL3,DW
         MVC   ANZTRK,MASKEC6
         ED    ANZTRK,ZPL3             ENTPACKEN
         AP    ZTRKANZ,DW              AUF ZAEHLER ADDIEREN
         SPACE
         S     R7,=F'1'                MINUS 1 WEGEN START BEI 0
         AR    R5,R7                   AUF START ADDIEREN
         CVD   R5,DW
         UNPK  HIGHTRK,DW
         OI    HIGHTRK+4,X'F0'         END-ADRESSE IN CHAR
         SPACE
         L     RL,STORAREA-4
         BR    RL
         EJECT
*        *******************************
*        * EXTENT BERECHNUNG F1-DSCBS  *
*        * R8 = EXT-ADRESSE            *
*        *******************************
         SPACE 2
         DS    F                       SICHERUNGSBEREICH
STORCALC EQU   *
         ST    RL,*-4                  LINK-REGISTER SICHERN
         USING EXTDESC,R8              BASISREGISTER EINRICHTEN
         SPACE
         XC    FW,FW                   FULLWORD LOESCHEN
         MVC   FW+3,EXTNO
         L     R7,FW
         CVD   R7,DW
         UNPK  EXNUMMER,DW
         OI    EXNUMMER+1,X'F0'        EXTENT-NUMMER
         SPACE
         LH    R7,EXTLCC
         XR    R6,R6
         M     R6,MAXTRKS
         AH    R7,EXTLHH
         CVD   R7,DW
         UNPK  LOWTRK,DW
         OI    LOWTRK+4,X'F0'
         ST    R7,FW
         SPACE
         LH    R7,EXTHCC
         XR    R6,R6
         M     R6,MAXTRKS
         AH    R7,EXTHHH
         CVD   R7,DW
         UNPK  HIGHTRK,DW
         OI    HIGHTRK+4,X'F0'
         SPACE
         S     R7,FW                   GET NUMBER OF TRACKS
         A     R7,=F'1'                       FOR THIS EXTENT
         SPACE
         CVD   R7,DW                   WERT IN DOPPELWORT
         ZAP   ZPL3,DW
         MVC   ANZTRK,MASKEC6
         ED    ANZTRK,ZPL3             ENTPACKEN
         AP    ZTRKANZ,DW              AUF ZAEHLER ADDIEREN
         SPACE
         ST    R7,ANZTRKS
         BAL   RL,PROZENT              PROZENT USED TRACKS ERRECHNEN
         SPACE
         L     RL,STORCALC-4           RETURN-ADRESSE LADEN
         BR    RL                      ZURUECK
         EJECT
*        ******************************
*        *   DATUMS - UMWANDLUNG      *
*        ******************************
         SPACE 2
         DS    F
DATECONV EQU   *
         ST    RL,*-4
         SPACE
         XC    FW,FW                    FULLWORD LOESCHEN
         MVC   FW+3(1),0(R8)            JAHR(HEX) UEBETRAGEN
         L     R7,FW                    IN R7 LADEN
         CVD   R7,DW                    IN DEZIMALFORM
         UNPK  JAHR,DW                     UMWANDELN
         OI    JAHR+1,X'F0'
         SPACE
         XC    FW,FW                    FULLWORD LOESCHEN
         MVC   FW+2(2),1(R8)            TAG(HEX) UEBETRAGEN
         L     R7,FW                    IN R7 LADEN
         CVD   R7,DW                    IN DEZIMALFORM
         UNPK  TAG,DW                     UMWANDELN
         OI    TAG+2,X'F0'
         SPACE
         L     RL,DATECONV-4            RETURN-ADRESSE LADEN
         BR    RL                       ZURUECK
         EJECT
*        ******************************
*        *   PROZENT USED TRACKS      *
*        ******************************
         SPACE 2
         DS    F
PROZENT  EQU   *
         ST    RL,*-4                   LINK-REGISTER SICHERN
         SPACE
         CLC   HIGHUSED,ANZTRKS
         BL    *+20
         MVC   USED,=C' 100'
         AP    ZUSED,=P'100'
         B     CALCUSED
         SPACE
         XR    R6,R6                          CLEAR R6
         L     R7,HIGHUSED                    LAST USED TRACK
         CLI   HIGHBLK,X'00'                  HIGH BLOCK = NULL ?
         BE    *+8                            JA ==> KEINE AUFRUNDUNG
         A     R7,=F'1'                       ADD ONE FOUR LAST BLKS
         M     R6,=F'100'                     MIT 100 MULTIPLIZIEREN
         D     R6,ANZTRKS                     DIVIDIERT DURCH GES.TRKS
         SPACE
         SLL   R6,1                           REST MAL 2
         C     R6,ANZTRKS                     MIT GES.TRKS VERGLEICHEN
         BL    *+8                            KEIN AUFRUNDEN
         A     R7,=F'1'                       AUFRUNDEN
         SPACE
         CVD   R7,DW
         AP    ZUSED,DW
         ZAP   ZPL2,DW
         MVC   USED,MASKEC4
         ED    USED,ZPL2
         SPACE
CALCUSED EQU   *
         L     R7,HIGHUSED                    ANZAHL TRACKS LADEN
         S     R7,ANZTRKS                     TRACK-ANZ SUBTRAHIEREN
         C     R7,=F'0'                       WERT < NULL ?
         BNL   *+8                            NEIN ==> WEITER
         LA    R7,0                           JA ==> AUF NULL SETZEN
         ST    R7,HIGHUSED                    REST ZURUECK SCHREIBEN
         CLC   HIGHUSED,=F'0'                 REST = NULL ?
         BNE   *+8                            NEIN ==> KEINE MODIF.
         MVI   HIGHBLK,X'00'                  HIGH BLK AUF NULL
         SPACE
         L     RL,PROZENT-4
         BR    RL                             RETURN
         EJECT
*        ******************************
*        *   DRUCKROUTINE  TITEL 1    *
*        ******************************
         SPACE 2
         DS    F
TITEL1   EQU   *
         ST    RL,*-4                   LINK-REGISTER SICHERN
         SPACE
         AP    PGECNT1,=P'1'            SEITENZAEHLER ERHOEHEN
         MVC   TITPAGE,MASKEC4         MOVE MASK
         ED    TITPAGE,PGECNT1         EDIT PAGE COUNT
         SPACE
         PUT   SYSPRINT,TITLINE
         PUT   SYSPRINT,STRLINE
         PUT   SYSPRINT,DCLLINE1
         PUT   SYSPRINT,DCLLINE2
         PUT   SYSPRINT,BLANKS
         SPACE
         ZAP   LNECNT1,=P'5'            ZEILENZAEHLER INITIALISIEREN
         SPACE
         L     RL,TITEL1-4              RETURN-ADRESSE LADEN
         BR    RL                       RETURN TO CALLING ROUTINE
         EJECT
*        ******************************
*        *   DRUCKROUTINE  TITEL 2    *
*        ******************************
         SPACE 2
         DS    F
TITEL2   EQU   *
         ST    RL,*-4                   LINK-REGISTER SICHERN
         SPACE
         AP    PGECNT2,=P'1'            SEITENZAEHLER ERHOEHEN
         MVC   TITPAGE,MASKEC4         MOVE MASK
         ED    TITPAGE,PGECNT2         EDIT PAGE COUNT
         SPACE
         PUT   SYSOUT,TITLINE
         PUT   SYSOUT,STRLINE
         PUT   SYSOUT,DCLLINE1
         PUT   SYSOUT,DCLLINE2
         PUT   SYSOUT,BLANKS
         SPACE
         ZAP   LNECNT2,=P'5'            ZEILENZAEHLER INITIALISIEREN
         MVC   OUTDSN,DSN               INSERT DSN EVEN IF SEC EXTENT
         SPACE
         L     RL,TITEL2-4              RETURN-ADRESSE LADEN
         BR    RL                       RETURN TO CALLING ROUTINE
         EJECT
*        ******************************
*        *   DRUCKROUTINE  TITEL 3    *
*        ******************************
         SPACE 2
         DS    F
TITEL3   EQU   *
         ST    RL,*-4                   LINK-REGISTER SICHERN
         SPACE
         AP    PGECNT3,=P'1'            SEITENZAEHLER ERHOEHEN
         MVC   TITPAGE,MASKEC4         MOVE MASK
         ED    TITPAGE,PGECNT3         EDIT PAGE COUNT
         SPACE
         PUT   SYSOUT2,TITLINE
         PUT   SYSOUT2,STRLINE
         PUT   SYSOUT2,DCLLINE3
         PUT   SYSOUT2,DCLLINE4
         PUT   SYSOUT2,BLANKS
         SPACE
         ZAP   LNECNT3,=P'5'            ZEILENZAEHLER INITIALISIEREN
         SPACE
         L     RL,TITEL3-4              RETURN-ADRESSE LADEN
         BR    RL                       RETURN TO CALLING ROUTINE
         EJECT
*        ******************************
*        *   CVAF - MACRO AREA        *
*        ******************************
         SPACE 2
CVPL     CVAFDSM BRANCH=(YES,PGM),MF=L
         SPACE
         ORG   CVPL
CVPLMAP  ICVAFPL DSECT=NO
         SPACE 2
BUFLIST  ICVAFBFL DSECT=NO
CVAFDSCB DS    CL140
DSCBLTH  EQU   96                      LENGTH OF DSCB WITHOUT DSN FIELD
         EJECT
*        ******************************
*        *   DATA CONTROL BLOCK       *
*        ******************************
         SPACE 2
SYSPRINT DCB   DSORG=PS,RECFM=FBA,LRECL=133,MACRF=PM,DDNAME=SYSPRINT
         SPACE 2
SYSOUT   DCB   DSORG=PS,RECFM=FBA,LRECL=133,MACRF=PM,DDNAME=SYSOUT
         SPACE 2
SYSOUT2  DCB   DSORG=PS,RECFM=FBA,LRECL=133,MACRF=PM,DDNAME=SYSOUT2
         EJECT
*        ******************************
*        *    LITERAL - POOL          *
*        ******************************
         SPACE 2
         LTORG
         EJECT
*        ******************************
*        * DATEN - BEREICHE / ALLGEM. *
*        ******************************
         SPACE 2
DW       DS    D
FW       DS    F
SAVEF5   DS    F
SAVEF4   DS    F
SAVEF3   DS    F
SAVEF2   DS    F
SAVEF1   DS    F
SAVEIV   DS    F
SAVEPRM  DS    F
SAVEPRT  DS    F
ANZTRKS  DS    F
MAXTRKS  DC    F'0'
HW       DS    H
         SPACE
$SYSPRNT DC    CL8'SYSPRINT'
$SYSOUT  DC    CL8'SYSOUT  '
$SYSOUT2 DC    CL8'SYSOUT2 '
DEVAREA  DC    CL8'        '
         SPACE
MAXDSCBS DS    0F
         DC    X'000000'
NODSCBTR DS    XL1
         SPACE
LTRK     DS    0CL5
HIGHUSED DC    F'0'
EXTANZB  DC    F'0'
HIGHBLK  DS    C
         SPACE
LNECNT1  DC    PL2'60'
PGECNT1  DC    PL2'0'
LNECNT2  DC    PL2'60'
PGECNT2  DC    PL2'0'
LNECNT3  DC    PL2'60'
PGECNT3  DC    PL2'0'
         SPACE
ZTRKANZ  DC    PL3'0'
ZUSED    DC    PL3'0'
ZPL2     DC    PL2'0'
ZPL3     DC    PL3'0'
         SPACE
MASKEC4  DC    XL4'40202120'
MASKEC6  DC    XL6'402020202120'
DATEMASK DC    X'402120204B20204B2020'
TIMEMASK DC    X'402120204B20204B2020'
         SPACE
LASTF1   DC    CL5'     '
SAVEPTR  DS    CL5
DATE     DS    0CL5
JAHR     DS    CL2
TAG      DS    CL3
         SPACE
UNIT     DC    X'0000'
         SPACE
ZCCHH    DS    0CL6
ZCC      DS    CL3
         DC    C'/'
ZHH      DS    CL2
         SPACE
SWITCH1  DC    X'00'
SWITCH2  DC    X'00'
         SPACE
PARMAREA DC    120X'FF'
SAVEDSN  DC    CL44' '
         SPACE
VTOCSATZ DS    0CL112
LOWTRK   DS    CL5
HIGHTRK  DS    CL5
ANZTRK   DS    CL6
VOLSER   DS    CL6
DSN      DS    CL44
RACFBIT  DS    CL1
CREDT    DS    CL5
EXPDT    DS    CL5
LUSED    DS    CL5
LMOD     DS    CL5
EXTANZ   DS    CL2
EXNUMMER DS    CL2
USED     DS    CL4
DSORG    DS    CL2
RECFM    DS    CL3
BLKSIZE  DS    CL6
LRECL    DS    CL6
         EJECT
*        ******************************
*        * DATEN - BEREICHE / UCBSCAN *
*        ******************************
         SPACE 2
UCBPARML DS    3F
         ORG   UCBPARML
UCBPWORK DS    F
UCBPDEVT DS    F
UCBPUCBA DS    F
         SPACE
UCBWORKA DS    CL100
UCBDEVCL DS    CL1
UCBADDR  DS    F
         EJECT
*        ******************************
*        * DATEN - BEREICHE / OUTPUT  *
*        ******************************
         SPACE 2
OUTLINE  DS    0CL133
         DS    C
OUTCCHH1 DS    CL6
         DS    C
OUTCCHH2 DS    CL6
         DS    CL3
OUTDSN   DS    CL44
         DS    CL1
OUTRACF  DS    CL1
         DS    CL1
OUTCREDT DS    CL5
         DS    CL1
OUTEXPDT DS    CL5
         DS    CL1
OUTLUSED DS    CL5
         DS    CL1
OUTLMOD  DS    CL5
         DS    CL2
OUTEXTNO DS    CL2
         DS    CL1
OUTEXTAN DS    CL2
         DS    CL3
OUTUSED  DS    CL3
         DS    CL3
OUTDSORG DS    CL2
         DS    CL4
OUTRECFM DS    CL3
         DS    CL2
OUTLRECL DS    CL5
         DS    CL2
OUTBLKS  DS    CL5
         DS    CL2
OUTTRKS  DS    CL5
         SPACE
BLANKS   DC    133C' '
         SPACE
STRLINE  DS    0CL133
         DC    C' '
         DC    132C'_'
         EJECT
*        ******************************
*        * DATEN - BEREICHE / TITEL   *
*        ******************************
         SPACE 2
TITLINE  DS    0CL133
         DC    C'1 VTOCSEQ 4.4     UNIT= '
TITUTYPE DS    CL8
         DC    C'  ADRESSE= '
TITUNIT  DS    CL3
         DC    C'      VOLUME= '
TITVOL   DS    CL6
         DC    C'       DATUM:'
TITDATUM DC    CL10' '
         DC    C'   ZEIT:'
TITZEIT  DC    CL10' '
         DC    C'         SEITE: '
TITPAGE  DS    CL5
         DC    C'     '
         SPACE
DCLLINE1 DS    0CL133
         DC    C'0ADRESSE(CCHH)                                        *
                                     LAST  LAST    EXT   USED          *
                                      '
         SPACE
DCLLINE2 DS    0CL133
         DC    C'   VON    BIS               DATA - SET - NAME         *
                       S CREDT EXPDT USED  MODIF  #/MAX    %   DSORG RE*
               CFM LRECL  BLKSZ   TRKS'
         SPACE
DCLLINE3 DS    0CL133
         DC    C'0                                                     *
                                     LAST  LAST    EXT   USED          *
                              ANZ '
         SPACE
DCLLINE4 DS    0CL133
         DC    C'                            DATA - SET - NAME         *
                       S CREDT EXPDT USED  MODIF  #/MAX    %   DSORG RE*
               CFM LRECL  BLKSZ   TRKS'
         SPACE
         EJECT
*        ******************************
*        *        TABELLEN            *
*        ******************************
         SPACE 2
UTYPETAB DS    0F
         DC    X'2006',H'00',CL8'2305-1  '
         DC    X'2007',H'00',CL8'2305-2  '
         DC    X'2008',H'00',CL8'2314    '
         DC    X'2009',H'19',CL8'3330-1  '
         DC    X'200A',H'12',CL8'3340    '
         DC    X'200B',H'30',CL8'3350    '
         DC    X'200C',H'12',CL8'3375    '
         DC    X'200D',H'19',CL8'3330-11 '
         DC    X'200E',H'15',CL8'3380    '
         DC    X'FFFF'
         SPACE 2
RECFMTAB DS    0F
         DC    X'80',C'F  '
         DC    X'84',C'FA '
         DC    X'82',C'FM '
         DC    X'88',C'FS '
         DC    X'90',C'FB '
         DC    X'94',C'FBA'
         DC    X'92',C'FBM'
         DC    X'98',C'FBS'
         DC    X'C0',C'U  '
         DC    X'40',C'V  '
         DC    X'44',C'VA '
         DC    X'42',C'VM '
         DC    X'48',C'VS '
         DC    X'50',C'VB '
         DC    X'54',C'VBA'
         DC    X'52',C'VBM'
         DC    X'58',C'VBS'
         DC    X'FFFFFFFF'
         SPACE
DSORGTAB DS    0F
         DC    X'2000',C'DA'
         DC    X'8000',C'IS'
         DC    X'0200',C'PO'
         DC    X'4000',C'PS'
         DC    X'0100',C'UM'
         DC    X'0000',C'UN'
         DC    X'0008',C'VS'
         DC    X'FFFFFFFF'
         SPACE
SORTTAB1 DS    0F
         DC    CL8'SORTWK01'
         DC    F'10000'
         DC    H'112'
EOF1     DS    CL2
         DC    C'(1,10,C,A)'
         SPACE
SORTTAB2 DS    0F
         DC    CL8'SORTWK02'
         DC    F'10000'
         DC    H'112'
EOF2     DS    CL2
         DC    C'(23,44,C,A,90,2,C,A,11,6,C,D)'
         SPACE
SORTTAB3 DS    0F
         DC    CL8'SORTWK03'
         DC    F'10000'
         DC    H'112'
EOF3     DS    CL2
         DC    C'(11,6,C,D,23,44,C,A)'
         SPACE
EXTENTAB DS    0F
EXTNUM   DC    AL1(255)
EXTENTS  DC    256XL5'FFFFFFFFFF'
         EJECT
*        ******************************
*        *    CONTROL - BLOECKE       *
*        ******************************
         SPACE 2
READNEXT CAMLST SEEK,CCHHR,VOL,DSCBAREA
         SPACE
DSCBAREA DS    CL140
CCHHR    DS    0XL5
CC       DS    XL2
HH       DS    XL2
R        DS    XL1
VOL      DS    CL6
         SPACE
DYNCBPTR DS    0F
         DC    X'80'
         DC    AL3(DYNCB01)        DYNALLOC - CB
         SPACE
DYNCB01  DS    0F
         DC    X'14'               LENGTH OF CONTROL BLOCK
DYNTYPE  DC    X'01'               ALLOCATION
         DS    3H
         DC    A(DYNTXPTR)         POINTER TO TEXT-UNITS
         DS    2F
         SPACE
DYNTXPTR DS    0F
DYNTXFLG DC    X'00'
         DC    AL3(DYNDDN01)
         DC    A(DYNDISP)
         DC    A(DYNVOL)
         DC    X'80'
         DC    AL3(DYNUNIT)
         SPACE
DYNCBPT2 DS    0F
         DC    X'80'
         DC    AL3(DYNCB02)        DYNALLOC - CB
         SPACE
DYNCB02  DS    0F
         DC    X'14'               LENGTH OF CONTROL BLOCK
DYNTYPE2 DC    X'01'               ALLOCATION
         DS    3H
         DC    A(DYNTXPT2)         POINTER TO TEXT-UNITS
         DS    2F
         SPACE
DYNTXPT2 DS    0F
DYNTXFL2 DC    X'00'
         DC    AL3(DYNDDN02)
         DC    A(DYNDISPN)
         DC    A(DYNDISPD)
         DC    A(DYNSPACE)
         DC    A(DYNPRIME)
         DC    X'80'
         DC    AL3(DYNUNIT)
         SPACE
DYNCBPT3 DS    0F
         DC    X'80'
         DC    AL3(DYNCB03)        DYNALLOC - CB
         SPACE
DYNCB03  DS    0F
         DC    X'14'               LENGTH OF CONTROL BLOCK
DYNTYPE3 DC    X'01'               ALLOCATION
         DS    3H
         DC    A(DYNTXPT3)         POINTER TO TEXT-UNITS
         DS    2F
         SPACE
DYNTXPT3 DS    0F
DYNTXFL3 DC    X'00'
         DC    AL3(DYNDDN03)
         DC    A(DYNDISPN)
         DC    A(DYNDISPD)
         DC    A(DYNSPACE)
         DC    A(DYNPRIME)
         DC    X'80'
         DC    AL3(DYNUNIT)
         SPACE
DYNCBPT4 DS    0F
         DC    X'80'
         DC    AL3(DYNCB04)        DYNALLOC - CB
         SPACE
DYNCB04  DS    0F
         DC    X'14'               LENGTH OF CONTROL BLOCK
DYNTYPE4 DC    X'01'               ALLOCATION
         DS    3H
         DC    A(DYNTXPT4)         POINTER TO TEXT-UNITS
         DS    2F
         SPACE
DYNTXPT4 DS    0F
DYNTXFL4 DC    X'00'
         DC    AL3(DYNDDN04)
         DC    A(DYNDISPN)
         DC    A(DYNDISPD)
         DC    A(DYNSPACE)
         DC    A(DYNPRIME)
         DC    X'80'
         DC    AL3(DYNUNIT)
         SPACE
DYNDDN01 DC    X'000100010008'
         DC    C'DISK    '
         SPACE
DYNDDN02 DC    X'000100010008'
         DC    C'SORTWK01'
         SPACE
DYNDDN03 DC    X'000100010008'
         DC    C'SORTWK02'
         SPACE
DYNDDN04 DC    X'000100010008'
         DC    C'SORTWK03'
         SPACE
DYNUNIT  DC    X'001500010005'
         DC    C'SYSDA'
         SPACE
DYNVOL   DC    X'001000010006'
DYNALVOL DC    C'      '
         SPACE
DYNDISP  DC    X'00040001000101'
         SPACE
DYNDISPN DC    X'00040001000104'
         SPACE
DYNDISPD DC    X'00050001000104'
         SPACE
DYNSPACE DC    X'00070000'                     TRACK - ALLOCATION
         SPACE
DYNPRIME DC    X'000A00010003000384'           900 TRK PRIMAER
         EJECT
VOLTABLE DC    100XL6'FFFFFFFFFFFF'
         EJECT
EXTDSECT DSECT
EXTDESC  DS    0CL10
EXTTYPE  DS    C
EXTNO    DS    C
EXTSTART DS    0CL4
EXTLCC   DS    CL2
EXTLHH   DS    CL2
EXTENDE  DS    0CL4
EXTHCC   DS    CL2
EXTHHH   DS    CL2
         EJECT
PARM     DSECT
VOL1     DS    CL6
         DS    C
VOL2     DS    CL6
         DS    C
VOL3     DS    CL6
         DS    C
VOL4     DS    CL6
         DS    C
VOL5     DS    CL6
         DS    C
VOL6     DS    CL6
         DS    C
VOL7     DS    CL6
         DS    C
VOL8     DS    CL6
         EJECT
         PRINT NOGEN
         IEFUCBOB PREFIX=YES
         SPACE 3
         CVT   DSECT=YES
         SPACE 3
         IECSDSL1 (1,2,3,4,5)
         SPACE 4
         END
