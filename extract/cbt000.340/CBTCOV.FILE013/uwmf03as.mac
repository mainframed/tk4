         TITLE 'LESEN DER LETZTEN GENERATIONSGRUPPE'
* AUTHOR       KNITTELFELDER
         SPACE 2
***********************************************************************
*                                                                     *
*                   LESEN DER LETZTEN GENERATIONSGRUPPE               *
*                                                                     *
*              UNTERPROGRAMM, DAS VOM COBOL-HAUPTPROGRAMM AUFGERUFEN  *
*              WERDEN KANN, UM DIE LETZTE GENERATION EINES            *
*              DATENBESTANDES ZU VERARBEITEN.                         *
*                                                                     *
*              AUFRUF VOR 'OPEN' DURCH                                *
*              CALL  'SA990620' USING FDNAME, NG0590.                 *
*              DSNAME - GENERATIONSINDEX MIT (0)                      *
*                                                                     *
*              FALLS DER DATENBESTAND UMKATALOGISIERT WERDEN          *
*              SOLLTE, SIND FOLGENDE ANGABEN NOTWENDIG                *
*                                                                     *
*              //INDEX1  DD  *                                        *
*              UND EINE PARAMETERKARTE, DIE DEN NEUEN INDEX           *
*              ENTHAELT (Z.B. INDEX=S)                                *
*                                                                     *
*              EIN PLATTENBEREICH MIT DD-NAME = INDEX2                *
*                                                                     *
***********************************************************************
         SPACE 2
* DATE         JUNI 1972
*              UNTERPROGRAMM SA990620
*              -STELLE DIE AELTESTE GENERATION EINER GDG ZUR VERFUEGUNG-
*              1.ALLGEMEINES
*              DAS BETRIEBSSYSTEM STELLT AUFGRUND DER RELATIVEN GENERATI
*              (Z.B.'(O)','(-1)'USW.) DIE ENTSPRECHENDE GENERATION ZUR V
*              FUEGUNG.
*              SCHWANKT DIE ANZAHL GENERATIONEN EINER GDG UND WILL MAN I
*              DIE AELTESTE VON DENEN,DIE SICH GERADE IM GDG BEFINDET,SO
*              GIBT DIE JCL KEINE MOEGLICHKEIT EINER ANGABE DAFUER.
*              IN DIESEM FALL SOLLTE DAS UPRO SA990620 ANWENDUNG FINDEN.
*              2.ANWENDUNG IN COBOL-PROGRAMMEN
*              IN COBOL-PROGRAMMEN DARF FUER DIE DATEI,BEI DER DIE AELTE
*              GENERATION VERARBEITET WERDEN SOLL KEIN 'OPEN' ERFOLGEN.
*              ANSTELLE DES 'OPEN' IST DAS UPRO 'SA990620' AUFZURUFEN.
*              IN SPL-PROGRAMMEN IST DAS UPRO 'SA990620' IN DER VORROUTI
*              AUFZURUFEN.DER ENTSPRECHENDE OPEN-SCHALTER WIRD VOM UPRO
*              AUF '1' GESETZT,SO DASS DAS NACHFOLGENDE 'OPEN' IM SPL-PR
*              UMGANGEN WIRD.
*              AUFRUF DES UPRO 'SA990620':
*                              CALL 'SA990620'USING FD-NAME,SCHALTER.
*              FD-NAME  -  DER FD-NAME DER ENTSPRECHENDEN DATEI
*              SCHALTER  -  EIN EINSTELLIGER SCHALTER DER DURCH DAS
*                          UPRO AUF '1' GESETZT WIRD.
*                          BEI SPL-PROGRAMMEN MUSS ES DER ZUR DATEI
*                          GEHOERENDE OPEN-SCHALTER SEIN (Z.B.'NG0590').
*              3.ERFORDERLICHE STEUERKARTEN
*              FILE-BESCHREIBUNG FUER DIE AELSTESTE GENERATION:
*              //DDNAME    DD  DSN=R.FB......(0),DISP=(OLD,KEEP,KEEP)
*              //          UNIT=(,,DEFER)
*                              (0) IST AUF JEDEN FALL ERFORDERLICH
*              //*         HIER WIRD DIE AELTESTE GENERATION
*                          VERARBEITET                                **
*              DA IN DER REGEL DIE VERARBEITETE GENERATION AUS DEM KATAL
*              FERNT WERDEN MUSS,SIND FOLGENDE STEUERKARTEN ZUSAETZLICH
*              FORDERLICH.
*              //INDEX2    DD  DSN=R.FZ........,
*              //              DISP=(NEW,CATLG,DELETE),
*              //              UNIT=DISK,
*              //              SPACE=(TRK,(1,1))
*              //INDEX1    DD  *
*              INDEX=S
*              HINTER DEN STEP,DER DIE AELTESTE GENERATION ANZIEHT,IST Z
*              UMKATALOGISIEREN EIN 'REPLX'-STEP ANZUFUEGEN (SIEHE BESCH
*              VON REPLX).
*              //SA990640  EXEC    PGM=SA990640
*              //SYSPRINT  DD      SYSOUT=A
*              //SYSIN     DD      DSN=R.FZ......,
*                                  DISP=(OLD,DELETE,KEEP)
*                          ALS 'DSNAME' IST DER FILE-NAME VON INDEX2
*                          EINZUSETZEN.
*              NACH DIESEM STEP IST DIE AELTESTE GENERATION NICHT MEHR I
*              CATALOG,SONDERN IM 'S'-CATALOG ENTHALTEN.
         EJECT
SA990620 CSECT
         INIT 1,REGS
BEG      EQU   *                       LADEN DCB-ADDR. NACH R4
         ST    R1,REG1
         LR    R4,R1
         L     R3,4(R4)
         L     R4,0(R4)
         MVC   37(3,R4),KONST
         RDJFCB ((R4),INPUT)
         MVC   GNSET(44),JFCB
         LA    R7,GNSET
         LA    R8,38
SUCHP    CLI   0(R7),C'G'              SUCHEN ABSOL. GEN. NUM. (G + V)
         BE    VERGL
         LA    R7,1(,R7)
         BCT   R8,SUCHP
         B     FEHLER
VERGL    EQU   *
         CLI   5(R7),C'V'
         BE    VERGL1
         LA    R7,1(,R7)
         B     SUCHP
FEHLER   EQU   *
         WTO   'GENERATIONSNUMMER (0) FEHLT',ROUTCDE=11
         ABEND 279
VERGL1   EQU   *                       VERGLEICH REL. GEN. NUM. = 0
         CLI   JFCB+45,C'0'
         BE    SETSH
         B     UEND
UBERTR   EQU   *
         MVC   JFCB(44),DSGN
         PACK  NUM(2),2(2,R7)
         AP    NUM,=P'1'               VERMINDERN REL. GEN. NUM. UM 1
         UNPK  2(2,R7),NUM(2)
         MVZ   3(1,R7),2(R7)
         MVC   DSGN,GNSET
         MVI   SH,C'0'
         MVC   JFCB+117(1),LOCAREA+1
         CLC   LOCAREA(2),=H'5'
         BH    ABBRUCH
         LA    R6,LOCAREA
         LA    R5,JFCB
MOV1     MVC   118(6,R5),6(R6)         UEBERTRAG VOL. NUM. NACH JFCB
         LA    R6,12(,R6)
         LA    R5,6(,R5)
         CLC   LOCAREA(2),VNUM
         BE    LESEN
         LH    R9,VNUM
         LA    R9,1(,R9)
         STH   R9,VNUM
         B     MOV1
SETSH    EQU   *                       SETZEN REL. GEN. NUM.
         BCTR  R7,0
         MVC   0(5,R7),=C'(-01)'
         MVC   5(4,R7),=CL4' '
         MVC   DSGN,GNSET
         MVI   SH,C'1'
LESEN    LOCATE INDAB                  LESEN KATALOG (REL. GEN. NUM.)
         LTR   R15,R15
         BZ    UBERTR                  LOCATE - FEHLERPRUEFUNG
         CLI   SH,C'1'
         BNE   WEITER
         CH    R15,=H'4'
         BE    MELD1
         CH    R15,=H'8'
         BE    WEITER
         CH    R15,=H'12'
         BNL   MELD3
         ABEND 275,DUMP
MELD1    EQU   *
         WTO   'CATALOG NICHT VORHANDEN',ROUTCDE=11
         ABEND 276
MELD2    WTO   'NICHT IM CATALOG GEFUNDEN',ROUTCDE=11
         ABEND 277
MELD3    WTO   'CATALOG-ERROR BZW DSNAME FALSCH',ROUTCDE=11
         ABEND 278
ABBRUCH  EQU   *
         WTO   'ANZAHL VOL.NUM. GROESSER 5',ROUTCDE=11
         ABEND 291
WEITER   EQU   *                       VERAENDERN JFCB
         OI    JFCB+76,X'80'
         EXTRACT ADDRTIOT,FIELDS=TIOT            LESEN TIOT
NEXT     XR    R11,R11
         L     R10,ADDRTIOT
         LA    R10,24(R10)
NEXTDD   CLC   NAM1,4(R10)        SUCHEN DD-NAMEN INDEX1, INDEX2
         BE    GEF
         IC    R11,0(R10)
         LA    R10,0(R10,R11)
         CLC   0(4,R10),=F'0'
         BNE   NEXTDD
         CLI   SH1,C'1'
         BE    S20
         MVI   SH2,C'1'
MOVS     MVI   SH1,C'1'
         MVC   NAM1,NAM2
         B     NEXT
UEND     EQU   *
         L     R4,REG1
         L     R4,0(R4)
         MVI   50(R4),X'48'
         OPEN  ((R4),(INPUT)),TYPE=J
         MVI   0(R3),X'F1'
         L     R13,SAVEAREA+4
         RETURN (14,12),RC=0
S20      CLI   SH2,C'1'
         BE    UEND               KEINEN DD-NAMEN GEFUNDEN - RETURN
WTO1     WTO   '1 DD-STATEMENT FEHLT',ROUTCDE=11
         ABEND 200
GEF      EQU   *
         CLI   SH1,C'1'
         BE    S10
         B     MOVS
S10      EQU   *                  NUR 1 DD-NAME GEFUNDEN - ABEND
         CLI   SH2,C'1'
         BE    WTO1
         B     ROUT
ROUT     EQU   *
         OPEN  (INDEX1,(INPUT))
         GET   INDEX1,EBER             LESEN PARAMETERKARTE
         LA    R7,EBER
         LA    R8,80
IND1     CLI   0(R7),C'='              SUCHEN INDEX-ANGABE
         BE    UEBTRAG
         LA    R7,1(,R7)
         BCT   R8,IND1
         WTO   'INDEX-ANGABE FEHLT',ROUTCDE=11
         ABEND 210
UEBTRAG  EQU   *                       BEREITST. ANGABEN F. UMCATLG.
         LA    R4,JFCB
         LA    R5,ABER
SEND     CLI   0(R4),C' '
         BE    MOVK                    UEBERTRAG DSNAME-OLD
         MVC   15(1,R5),0(R4)
         LA    R4,1(,R4)
         LA    R5,1(,R5)
         B     SEND
MOVK     EQU   *
         MVC   ABER(15),KONSTR
         MVC   15(18,R5),KONSTUN
         LA    R6,ZWIFE
P00      EQU   *                       UEBERTRAG INDEX-ANGABE
         LA    R7,1(,R7)
         CLI   0(R7),C' '
         BE    P10
         MVC   0(1,R6),0(R7)
         LA    R6,1(,R6)
         B     P00
P10      EQU   *
         LA    R4,JFCB
P30      CLI   0(R4),C'.'
         BE    P20
         LA    R4,1(,R4)
         B     P30                     UEBERTRAG NEWNAME
P20      EQU   *
         MVC   0(1,R6),0(R4)
         LA    R4,1(,R4)
         CLI   0(R4),C' '
         BE    P40
         LA    R6,1(,R6)
         B     P20
P40      EQU   *
         OPEN  (INDEX2,(OUTPUT))
         MVC   33(24,R5),ZWIFE
         PUT   INDEX2,ABER
         CLOSE (INDEX2)
         CLOSE (INDEX1)
         B     UEND
* DEFINITIONEN
INDAB    CAMLST NAME,DSGN,,LOCAREA
DSGN     DC    CL44' '
LOCAREA  DS    0D
         DS    265C
         DS    0F
JLIST    EQU   *
         DC    X'87'
         DC    AL3(JFCB)
JFCB     DS    CL176
NUM      DS    CL2
VNUM     DC    H'1'
SH       DS    CL1
GNSET    DC    CL44' '
KONST    DC    AL3(JLIST)
ADDRTIOT DC    F'0'
NAM1     DC    C'INDEX1'
NAM2     DC    C'INDEX2'
SH1      DC    C'0'
SH2      DC    C'0'
ABER     DC    CL80' '
KONSTR   DC    C' REPLX DSNAME=('
KONSTUN  DC    C',UNCATLG),NEWNAME='
EBER     DC    CL80' '
ZWIFE    DC    CL24' '
REG1     DC    F'0'
INDEX2   DCB   DDNAME=INDEX2,DSORG=PS,MACRF=(PM),RECFM=F,              *
               LRECL=80,BLKSIZE=80
INDEX1   DCB   DDNAME=INDEX1,DSORG=PS,MACRF=(GM)
         END
