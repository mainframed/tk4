*******  PROBA MEMBER=YY058A01 CODE=AD02 AUTH=M.SCHADE
*******  PROBA  STAND 24.06.80(13.06) LAN=ASM
         TITLE 'YY058A - DATA SECURITY ERASE FOR MAGNETIC TAPES'
***********************************************************************
*
* DOKUMENTATIONSANFANG
*
* PGM-NAME:................ YY058A
*    -TYP:................. UNTERPROGRAMM
*    -ATTRIBUT:............ SERIELL WIEDERVERWENDBAR
*
* KURZBEZEICHNUNG:......... LOESCHEN VON MAGNETBAENDERN ZUM DATENSCHUTZ
*
* ERSTELLER:............... M.SCHADE
*                           ABTLG: SSW - MS        DATUM: 09/76
*
* SPRACHE:................. /370 ASSEMBLER
* HAUPTSPEICHER:........... 2 KBYTES
* REFERENZEN:.............. KEINE
*
*
* PGM-BESCHREIBUNG:
*
*     DAS PROGRAMM YY058A DIENT ZUM TEILWEISEN ODER TOTALEN
*     LOESCHEN VON MAGNETBAENDERN.
*     DIE BAENDER WERDEN MIT DEM KANALBEFEHL DSE (DATA SECURITY ERASE)
*     GELOESCHT. DIESER BEFEHL HAT, GEGENUEBER DEM VERFAHREN EIN MAG=
*     NETBAND MIT LEERBLOECKEN ZU UEBERSCHREIBEN, DEN GROSSEN VORTEIL,
*     DASS KANAL, STEUEREINHEIT UND CPU WAEHREND DES LOESCHVORGANGES
*     NICHT BELASTET WERDEN.
*
*
* ANWENDUNGSTECHNIK:
*
*     IN ASSEMBLER:
*
*            CLOSE >DCB FUER 'DDNAME'<
*            :
*            CALL YY058A,(FELDNAME)
*            :
*       MIT: FELDNAME DC CL8'DDNAME'
*
*     IN COBOL:
*
*            CLOSE >FD FUER 'DDNAME'<
*            :
*            CALL 'YY058A' USING FELDNAME.
*            :
*       MIT: FELDNAME PIC X(8) VALUE 'DDNAME'
*
*     IN FORTRAN:
*
*            END FILE ##    (MIT ## = DATASET REFERENCE NUMBER)
*            :
*            CALL YY058A('FT##F001')
*
*
         EJECT
*
*        ODER:
*            REAL*8 FELDNM/8HFT##F001/
*            :
*            END FILE ##    (MIT ## = DATASET REFERENCE NUMBER)
*            :
*            CALL YY058A(FELDNM)
*
*
*        DAS BAND, AUF DEM SICH DIE MIT 'DDNAME' DEFINIERTE DATEI BE=
*        FINDET, WIRD VOM ENDE DER DATEI BIS ZUM BANDENDE GELOESCHT
*        (Z. B. ALS   DATENSCHUTZ BEI BAENDERN FUER EXTERNE BENUTZER).
*        DIE AKTION WIRD IN JOB-PROTOKOLL QUITTIERT:
*
*            YY058A - TAPE VVVVVV SUCCESSFULLY ERASED.
*
*        DAS PROGRAMM YY058A LIEFERT IN DIESEM FALL EINEN RETURN-CODE
*        VON 0.
*
*
* FEHLERBEHANDLUNG:
*
*     FOLGENDE USER-ABEND-CODES KOENNEN AUFTRETEN:
*       USER = 1000  IN VERBINDUNG MIT FOLGENDER NACHRICHT:
*
*         YY058A  -  UNRECOVERABLE I/O-ERROR, USER ABEND CODE = 1000.
*
*     ALS HINWEIS FUER MOEGLICHE FEHLER KOENNEN FOLGENDE RETURN CODES
*     AUFTRETEN:
*         RC = 4: ES WURDE KEIN 'DDNAME' DD-STATEMENT GEFUNDEN.
*         RC = 8: 'DDNAME' SPEZIFIZIERT KEINE BANDDATEI.
*         RC =12: FUER DAS SPEZIFIZIERTE BAND IST NOCH EINE DATEI
*                 EROEFFNET.
*
         EJECT
*
* ANWENDUNGSHINWEISE:
*
*     DAS PROGRAMM YY058A ARBEITET NICHT MIT MAGNETBANDEINHEITEN
*     DER SERIE 2400.
*     ZUR PROTOKOLLIERUNG DER AUFRUFE DES PROGRAMMES YY058A WIRD BEIM
*     ERSTEN AUFRUF FOLGENDE NACHRICHT AUSGEGEBEN:
*
*             YY058A - DSE CALLED FROM 'PGMNAME' IN JOB 'JOBNAME
*
*     DAS ERFOLGREICHE LOESCHEN EINES BANDES WIRD DURCH DIE NACHRICHT
*             YY058A - TAPE VVVVVV SUCCESSFULLY ERASED
*             YY058A - TAPE VVVVVV SUCCESSFULLY ERASED
*
*     IM JOBPROTOKOLL AUSGEWIESEN.
*
*
* DOKUMENTATIONSENDE
*
***********************************************************************
         EJECT
*
*------------------------- REGISTER USAGE -----------------------------
*
R0       EQU   0                  LINKAGE REGISTER
R1       EQU   1                  LINKAGE REGISTER
R2       EQU   2                  WORK
R3       EQU   3                  WORK
R4       EQU   4                  WORK
R5       EQU   5                  WORK
R6       EQU   6                  WORK
R7       EQU   7                  WORK
R8       EQU   8                  WORK
R9       EQU   9                  WORK
R10      EQU   10                 WORK
R11      EQU   11                 WORK
R12      EQU   12                 WORK
R13      EQU   13                 BASE REGISTER
R14      EQU   14                 RETURN REG. FOR EXTERNAL BRANCHES
R15      EQU   15                 EP REGISTER
*
F0       EQU   0                  FLOATING POINT REG 0
F2       EQU   2                  FLOATING POINT REG 2
F4       EQU   4                  FLOATING POINT REG 4
F6       EQU   6                  FLOATING POINT REG 6
*
*------------------------- GENERAL EQUATES ----------------------------
*
MINUS    EQU   C'-'
PLUS     EQU   C'+'
POINT    EQU   C'.'
ZERO     EQU   X'00'
ONE      EQU   X'01'
FOUR     EQU   X'04'
EIGHT    EQU   X'08'
TWELVE   EQU   X'0C'
BRANCH   EQU   X'F0'
NOP      EQU   X'00'
OPENOK   EQU   X'10'
E        EQU   C'E'
G        EQU   C'G'
*
***********************************************************************
*
         EJECT
*
YY058A   CSECT
         USING *,R15              TEMPORARY BASE REGISTER
         SAVE  (14,12),T,YY058A.D.&SYSDATE.T&SYSTIME.V01
         LR    R12,R13            TEMPORARY SAVE OF R13
         L     R13,BASEREG        ESTABLISH ADDRESSAB. OF THIS CSECT
         B     STOREREG           BRANCH AROUND SAVEAREA
SAVEAREA DS    0F                 SAVEAREA. FULLWORD ALIGNMENT
         DROP  R15                R15 NO LONGER USED FOR BASE
         USING *,13               R13 BASE REGISTER
         DC    18F'0'             SAVEAREA
BASEREG  DC    A(SAVEAREA)        ADDR. OF OWN SAVEAREA
STOREREG DS    0H
         ST    R13,8(R12)         STORE ADDR. OF OWN SAVEA. INTO HIGHER
         ST    R12,SAVEAREA+4     STORE ADDR. OF HIGHER SAVEA INTO OWN
         B     START
*
RETURN   DS    0H
         SR    R15,R15
RETURNRC DS    0H
         L     R13,SAVEAREA+4
         RETURN (14,12),T,RC=(15)
*
         EJECT
*
START    DS    0H
         L     R11,0(R1)          LOAD POINTER TO DDNAME
*
         L     R2,16              LOAD CVT-POINTER
         L     R2,0(R2)           TCB POINTER
         L     R2,4(R2)           CURRENT TCB
         L     R3,180(R2)         JSCB ADDR.
         L     R3,260(R3)         ADDR. OF JCT-16
         L     R2,12(R2)          TIOT POINTER
*
A001     NOP   A004               FIRST TIME SWITCH
         MVI   A001+1,BRANCH      SET SWITCH
         CLC   16(8,R2),=CL8' '   TEST FOR STEPNAME
         BE    A002
         MVC   STEPNAME(8),16(R2) COPY STEPNAME
         B     A003
A002     DS    0H
         MVC   STEPNAME(8),8(R2)  COPY STEPNAME
A003     DS    0H
         LA    R3,0(R3)           CLEAR HIGH ORDER BYTE
         ICM   R3,7,16+32(R3)     LOAD POINTER TO FIRST SCT FROM JCT
L001     CLC   16+52(8,R3),STEPNAME COMPARE STEPNAMES
         BE    SCTFOUND
         ICM   R3,7,16+20(R3)     LOAD POINTER TO NEXT SCT
         LTR   R3,R3              TEST IF POINTER AVAILABLE
         BZ    NOSCT
         B     L001
*
SCTFOUND DS    0H
         MVC   WTP1+37(8),16+108(R3) MOVE PGM-NAME INTO MESSAGE
NOSCT    MVC   WTP1+53(8),0(R2)   MOVE JOB-NAME INTO MESSAGE
WTP1     WTO   'YY058A - DSE CALLED FROM PGM *UNKNOWN IN JOB JJJJJJJJ',*
               ROUTCDE=(3,11)
*
A004     DS    0H
         LA    R2,24(R2)          ADDRESS OF FIRST DD-ENTRY
*
SCAN     DS    0H
         SR    R3,R3              CLEAR R3
         IC    R3,0(R2)           INSERT LENGTH OF DD-ENTRY
         CLC   4(8,R2),0(R11)     TEST FOR DDNAME
         BE    DDFOUND            BRANCH IF EQUAL
GOONSCAN LA    R2,0(R3,R2)        INCREASE POINTER TO NEXT ENTRY
         L     R3,0(R2)           LOAD FIRST WORD
         LTR   R3,R3              TEST FOR END OF TIOT
         BNZ   SCAN               BRANCH TO TEST NEXT ENTRY
         LA    R15,FOUR           SET RETURN CODE
         B     RETURNRC --- GO BACK --
         EJECT
*
DDFOUND  DS    0H
         ST    R2,ADDENTRY        SAVE POINTER TO CURRENT DD-ENTRY
         SR    R1,R1              CLEAR REG 1
         ICM   R1,3,18(R2)        LOAD POINTER TO UCB
         CLI   18(R1),X'80'       TEST FOR MAGNETIC TAPE DEVICE
         BE    B001
         LA    R15,EIGHT          SET RETURN CODE
         B     RETURNRC
*
B001     DS    0H
         TM    35(R1),B'01111111' TEST IF ANY DCB IS OPEN FOR THIS VOL
         BZ    B002
         LA    R15,TWELVE        LOAD RETURN CODE
         B     RETURNRC
*
B002     DS    0H
         MVC   OUTPUT+40(8),4(R2) MOVE DDNAME FROM DD-ENTRY INTO DCB
         RDJFCB OUTPUT
*
         LH    R1,JFCBFLSQ       LOAD FILE SEQUENCE NUMBER
         LA    R1,1(R1)          INCREASE IT BY ONE
         STH   R1,JFCBFLSQ       STORE NEW NUMBER
         MVC   JFCBDSNM(17),=CL17'DSE'
         OI    JFCBIND2,B'11000000' INDICATE NEW DATASET
         OI    JFCBTSDM,JFCNWRIT DON'T WRITE BACK JFCB DURING OPEN PR.
*
OPEN     DS    0H
         OPEN  (OUTPUT,(OUTPUT)),TYPE=J
         TM    OUTPUT+48,OPENOK  TEST FOR CORRECT OPEN
         BO    *+8               BRANCH IF NOT
         BAL   R0,E2             BRANCH IF NOT
         OI    OUTPUT+44,B'00001100' DON'T USE I/O SUPERV.ERROR ROUTINE
*
         EJECT
*
EXCP1    DS    0H
         MVC   OUTPUT+28(4),IOBAD1
         MVI   TPECB1,ZERO        CLEAR ECB
         EXCP  TPIOB1
*
         WAIT  ECB=TPECB1
*
         TM    TPECB1,X'7F'
         BO    EXCP2
         B     E1
*
POSTED   DS    0H
         L     1,INTVL
         C     1,=F'200'
         BH    P1
         LA    1,400
P1       DS    0H
         S     1,=F'200'
         ST    1,INTVL
         STIMER WAIT,BINTVL=INTVL
*
EXCP2    DS    0H
         MVC   OUTPUT+28(4),IOBAD2
         MVI   TPECB2,ZERO        CLEAR ECB
         EXCP  TPIOB2
         WAIT  ECB=TPECB2
         TM    TPECB2,X'7F'
         BNO   POSTED
*
         MVC   INTVL(4),BASINTVL  UPDATE INTERVAL
         L     R2,ADDENTRY        RESTORE POINTER
         SR    R1,R1              CLEAR REG 1
         ICM   R1,3,18(R2)        LOAD POINTER TO UCB
         MVC   WTP2+22(6),28(R1)  MOVE VOLSER NUMBER INTO WTP
CLOSE    CLOSE (OUTPUT,REWIND)
*
         EJECT
*
WTP2     WTO   'YY058A - TAPE VVVVVV SUCCESSFULLY ERASED ',            *
               ROUTCDE=11
*
         L     R2,ADDENTRY        RESTORE R2
         B     RETURN
*
*
*--------
         EJECT
*
E1       DS    0H                 OPEN ERROR OUTPUT DATASET SYSUT2
         WTO   'YY058A  -  UNRECOVERABLE I/O ERROR, USER ABEND CODE = 1*
               000.',ROUTCDE=(3,11)
         LA    R1,1000            SET ABEND CODE
         B     ABEND
*
E2       DS    0H                 ERROR ON OUTPUT DATASET
         LA    R1,2000
         B     ABEND
*
ABEND    DS    0H                 SCHEDULE ABEND
         ABEND (R1),DUMP
*
*---------
*
         EJECT
*          *** DEFINITONS OF CONSTANTS AND VARIABLES ***
         DS    0D
         DC    CL8'DCB'
OUTPUT   DCB   DDNAME=ERASE,MACRF=(E),DSORG=PS,EXLST=EXLST,IMSK=0
*
         EJECT
         DS    0D
         DC    CL8'COUNT'
COUNT    DC    F'0'
*
         DS    0D
         DC    CL8'IOB1'
TPIOB1   DC    X'42000000'
         DC    A(TPECB1)
         DC    2F'0'
         DC    A(TPCCW1)
         DC    A(OUTPUT)
         DC    4F'0'
TPECB1   DC    F'0'
*
         DS    0D
         DC    CL8'IOB2'
TPIOB2   DC    X'42000000'
         DC    A(TPECB2)
         DC    2F'0'
         DC    A(TPCCW2)
         DC    A(OUTPUT)
         DC    4F'0'
TPECB2   DC    F'0'
*
WTORECB  DC    F'0'
ADDENTRY DC    F'0'
IOBAD1   DC    A(TPIOB1)
IOBAD2   DC    A(TPIOB2)
BASINTVL DC    F'3000'
INTVL    DC    F'3000'
*
         DS    0D
         DC    CL8'CCW1'
TPCCW1   CCW   X'17',ZERO,X'60',ONE ERASE GAP
         CCW   X'97',ZERO,X'20',ONE DATA SECURITY ERASE
*
         DC    CL8'CCW2'
TPCCW2   CCW   X'17',ZERO,X'20',ONE ERASE GAP
*
*
STEPNAME DC    CL8' '
         EJECT
EXLST    DC    X'87',AL3(JFCB)
JFCB     DS    0D
         IEFJFCBN
*
         LTORG
*
         END
