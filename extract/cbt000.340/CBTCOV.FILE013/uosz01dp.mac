./  ADD        NAME=UXXX01DP
MD3005   CPU-AUSWERTUNG
 AUSWERT: PROC(PARAM) OPTIONS(MAIN);
 /*  INPUT:
           A..... START DATUM  YYDDD
           B.....       ZEIT  SEK X 100
           C..... END DATUM  YYDDD
           D.....     ZEIT  SEK X 100
           E..... CPU-ZEIT  SEK X 100
           F..... DEV.ALLOC.TIME  SEK X 100
           G..... PROGR.LOAD TIME  SEK X 100
     HILFSGROESSEN:
           M..... REL.STARTSEIT IN MIN.
           R..... TOTALZEIT IN SEK X 100
           S..... REL.ENDZEIT IN MIN
           LEN... LAENGE DER DEVICE-ENTRIES
           DEV... ZAHL DER DEVICE-ENTRIES
           VTAB(6). HILFSTAB ZUR ERMITTLUNG DER BELEGTEN BANDSTATIONEN
     WERTE:
           JOB(1)...CPU / TOTALZEIT
           JOB(2)...HAUPTSPEICHER
           JOB(3)...BANDSTATIONEN
           JOB(4)...INDIKATOR MP=1,TSO=100                         */
 /* DIE  VORLAUFKARTE :
              ***  YYDDDTZZZZZF1111F2222F3F4KKKKSM  ***
     YYDDD... LAUFNUMMER DES TAGES BEI DEM DIE UNTERSUCHUNG STARTEN SOLL
     T....... ZAHL DER TAGE UEBER DIE SICH DIE UNTERSUCHUNG ERSTRECKEN
              SOLL MAXIMAL 7 TAGE MOEGLICH.
     ZZZZZ... KLASSENBILDUNG BEI DER AUSWERTUNG Z.B.:00010  MINUTEN
                                                     00060  1 STUNDE
                                                     00480  8 STUNDEN
                                                     01440  1 TAG
                                                     10080  1 WOCHE
     F1111... FAKTOR(1) ZUR BILDUNG DER CPU-VERTEILUNG = 0.0033
     F2222... FAKTOR(2) ZUR BILDUNG DER HSP-VERTEILUNG = 0.0125
     F3...... FAKTOR(3) ZUR BILDUNG DER BAND-VERTEILUNG = 01
     F4...... FAKTOR(4) ZUR BILDUNG DER MU-VERTEILUNG = 01
     KKKK.... HAUPTSPEICHERBEDARF F. TSO
     S....... SCHALTER FUER AUSWERTUNG:  B... BATCH
                                         T... TSO
     M....... SCHALTER FUER MODUS: A... ABSOLUT
                                   R... RELATIV
        DIE SYMBOLE IM PROGRAMM : PD,PT,PZ,PF1-4,PS                */
    DCL  PARAM CHAR(100) VARYING,
       PD DEC FIXED(7),
       PT DEC FIXED(3),
       PZ DEC FIXED(7),
       PF1 DEC FIXED(7,4),
       PF2 DEC FIXED(7,4),
       PF3 DEC FIXED(5),
       PF4 DEC FIXED(5),
       PK DEC FIXED(5),
       PS CHAR(1),
       PM CHAR(1);
 /* DIE  DATENBESTAENDE  */
   DCL  SMFBD FILE RECORD INPUT ;
   DCL  LISTE FILE STREAM PRINT;
 /* DIE FUNKTIONEN   */
  DCL (DATE,TIME,MOD,FLOOR,ADDR,SUBSTR,CEIL) BUILTIN;
 /* DER SATZBAU  */
    DCL 1 EINGAB BASED(P),
          2 RESERV BIT(8),
          2 SATZ BIT(8), /*  SATZTYP  4,34              */
          2 D2   BIT(32),       /*  STEP-END  TIME  SEK X 100  */
          2 D6   DEC FIXED(7),  /*   . . .    DATE  YYDDD      */
          2 D10  CHAR(12),
          2 D22  BIT(32),       /*  LOGON TIME                 */
          2 D26  DEC FIXED(7),  /*        DATE                 */
          2 D30  CHAR(9),
          2 D39  BIT(32),       /*  STEP-START TIME            */
          2 D43  DEC FIXED(7),  /*  . . .      DATE            */
          2 D47  CHAR(7),
          2 D54  CHAR(6),
          2 D60  CHAR(10),
          2 D70  BIT(16),       /*  REGION SIZE  K             */
          2 D72 CHAR(14),
          2 D86 BIT(32),     /*  DEV.ALLOC.TIME  */
          2 D90 BIT(32),      /*  PROG.LOAD.TIME  */
          2 D94 CHAR(1),
          2 D95 BIT(24),      /* CPU UNDER SRB */
          2 D98 CHAR(4),
          2 D102 CHAR(1);       /*  DEVICE RNTRIES             */
 /*  DIE  VARIABLEN   */
    DCL FELDX CHAR(6400);
    DCL  HELP(3250)  CHAR(1)  BASED(P);
    DCL  HCPU  BIT(24) BASED(P1);    /*  CPU UNDER TCB */
    DCL  HLEN BIT(16) BASED(P3);
    DCL  HCUU BIT(32) BASED(P2);
    DCL  (LEN,DEV) BIN FIXED(31);
    DCL (W1,W2) BIN FLOAT(53);
    DCL (P,P1,P2,P3)  POINTER;
   DCL  TAB(10080,4) BIN FLOAT  STATIC,
        JOB(4) FLOAT,
        VERT(0:6,4) BIN FLOAT,
        DU(4) BIN FLOAT,
        FAKTOR(4) BIN FLOAT,
        (A,B,C,D,E,F,SUMME,ZEIT,WERT,TAGNR,STUND,MINUT) BIN FLOAT,
        (I,K,J,L,L1,L2,L3,L4,L5,Z,ZQ,M,MQ,R,S,KLASSE) BIN FIXED(31),
        (FEHLPROT,FEHLDATE) BIN FIXED(31),
        ZEIL DEC FIXED (3) INIT(99),
        BLAZ DEC FIXED(5) INIT (0),
        DATUM CHAR(6),
          JAR  CHAR(2) DEF DATUM POS(1),
          MON  CHAR(2) DEF DATUM POS(3),
          TAG  CHAR(2) DEF DATUM POS(5),
        UHRZEIT CHAR(9),
          STU CHAR(2) DEF UHRZEIT POS(1),
          MIN CHAR(2) DEF UHRZEIT POS(3),
          SEK CHAR(2) DEF UHRZEIT POS(5),
         SUPR BIT(1),
        ANF BIT(1);
    DCL (G,MS) BIN FIXED(31);
     DCL (STRING,BIKET) BIT(32);
 /* DER  VORLAUF  */
   ON ENDFILE(SMFBD) GOTO DRUCK;
     ON TRANSMIT(SMFBD);
   ON ERROR CALL PLIDUMP('T,F,S,H,B');
   ON ENDPAGE(LISTE);
   OPEN FILE(SMFBD) INPUT;
   GET STRING(PARAM) EDIT(PD,PT,PZ,PF1,PF2,PF3,PF4,PK,PS,PM)
             (F(5),F(1),F(5),F(5,4),F(5,4),F(2),F(2),F(4),A(1),A(1));
       SUPR = '0'B;
   FEHLPROT=0;FEHLDATE=0;
   ANF='1'B;  TAB=0;  VERT=0;  JOB=0;  DU=0;  FAKTOR=0;  A=0;
   B=0;  C=0;  D=0;  E=0;  F=0;  SUMME=0;  ZEIT=0;  WERT=0;
   TAGNR=0;  STUND=0;  MINUT=0;  I=0; K=0;  J=0;  L=0;  L1=0;
   L2=0;  L3=0;  L4=0;  L5=0;  Z=0;  M=0;  R=0;  S=0;  KLASSE=0;
   DATUM=DATE;
   UHRZEIT=TIME;
    Z=PZ;
     FAKTOR(1) = PF1;
     FAKTOR(2) = PF2;
     FAKTOR(3) = PF3;
     FAKTOR(4) = PF4;
 /*  DAS EINLESEN  DER SMF - SAETZE   */
  LESE: READ FILE(SMFBD) INTO(FELDX);
        P = ADDR(FELDX);
        IF SATZ = 4 & PS = 'B' THEN GOTO ANF4;
        IF SATZ = 34 THEN GOTO ANF34;
        GOTO LESE;
  ANF4: A = D43;
       F = D86;
     G = D90;
        W1 = D39;
        GOTO ZEITFLTR;
  ANF34: IF D54^='IKJEFT' THEN GOTO LESE; /* FILTER PCF RECORDS */
         A = D26;
         W1 = D22;
  ZEITFLTR: B = W1;
        C = D6;
        W1 = D2;
        D = W1;
        IF A < PD-990 THEN DO;           /* WENN OPER FALSCHES JAHR*/
                           FEHLDATE=FEHLDATE+1;
                           GOTO LESE;
                           END;
        IF A < PD × C > (PD+PT-1) THEN DO;         /*NUR F.W7610*/
                           FEHLDATE=FEHLDATE+1;
                           GOTO LESE;
                           END;
        IF C < PD × A > (PD+PT-1) THEN DO;
                           FEHLDATE=FEHLDATE+1;
                           GOTO LESE;
                           END;
        W1 = (A-PD)*1440 + B/6000;
     IF SATZ=4 THEN DO;
         IF F < B THEN F = 1440*60*100 + F;
         W1 = (A-PD)*1440 + F/6000;
         IF W1 > 0 THEN MQ = CEIL(W1);
                   ELSE MQ = 0;
     IF G< B THEN G=1440*60*100 + G;
     W1=(A-PD)*1440 + G/6000;
     IF W1 > 0 THEN MS = CEIL(W1);
               ELSE MS = 0;
                    END;
        IF W1 > 0 THEN M = CEIL(W1);
                  ELSE M = 0;
        W2 = (C-PD)*1440 + D/6000 - 1;
        IF W2 > 1440*7 THEN S = 1440*7;
                       ELSE S = FLOOR(W2);
        R = (C-A)*1440*60*100 + D - B;
        IF R < 6000 THEN GOTO LESE;
        P3 = ADDR(HELP(103));
        LEN = HLEN;
        P1 = ADDR(HELP(104+LEN));
        E = HCPU;               /* CPU UNDER TCB  */
    /*  E = E + D95;    */      /* CPU UNDER SRB WIRD NICHT VERR.*/
        IF E = 0 THEN GOTO LESE;
        JOB(1) = E/R;
        IF SATZ = 34 & PS = 'B' THEN DO;
                                     JOB(2) = 0;
                                     JOB(3) = 0;
                                     JOB(4) = 100;
                                     END;
                                ELSE DO;
                                     JOB(2) = D70;
                                     JOB(4) = 1;
                                     END;
        JOB(3) = 0;
        IF SATZ= 4 & PS = 'B' THEN;
                              ELSE GOTO WEITER;
        DEV = (LEN - 2)/8;
      BIKET,STRING=(32)'0'B;
        DO I = 1 TO DEV;
        P2 = ADDR(HELP(105+(I-1)*8));
        IF SUBSTR(HCUU,1,16) = '1000000000000011'B THEN DO;
                                               J=SUBSTR(HCUU,29,4);
               SUBSTR(BIKET,(32-J),1) = '1'B;
                                               END;
        END;
 WEITER: DO I=M+1 TO S;
         TAB(I,1) = TAB(I,1) + JOB(1);
         IF JOB(4) > 1 & TAB(I,4) > 99 THEN;
                                       ELSE TAB(I,4) = TAB(I,4)+JOB(4);
         END;
     DO I=MQ+1 TO S WHILE (SATZ=4);
        IF I > 10080 THEN DO;
                           FEHLPROT=FEHLPROT+1;
                           GOTO LESE;
                          END;
     J = TAB(I,3);
     SUBSTR(STRING,2,31)=J;
     J=STRING × BIKET;
     TAB(I,3) = J;
     END;
     DO I = MS+1 TO S;
        IF I > 10080 THEN DO;
                           FEHLPROT=FEHLPROT+1;
                           GOTO LESE;
                          END;
         TAB(I,2) = TAB(I,2) + JOB(2);
     END;
     JOB(1) = 0;
     JOB(2) = 0;
     JOB(3) = 0;
     JOB(4) = 0;
         GOTO LESE;
 /* UPROG  TITEL   */
 TITEL: PROC;
     BLAZ = BLAZ + 1; ZEIL = 3;
     PUT FILE(LISTE) EDIT('0203/05/000',TAG,'/',MON,'/',JAR,STU,'.',
                         MIN,'.',SEK,'BLATT',BLAZ)(PAGE,A,X(90),(5)A,
                         X(2),(5)A,X(2),A,F(6));
     PUT FILE(LISTE) EDIT('AUSLAST')(SKIP,A);
     PUT FILE(LISTE) EDIT('MASCHINEN - AUSLASTUNG')(SKIP,X(55),A);
     IF ANF THEN DO;
                 ANF = '0'B;
                 PUT FILE(LISTE) EDIT('DIE PARAMETER:  D =',PD,
                 'TAGESNUMMER')(SKIP,A,X(1),F(5),X(2),A);
                 PUT FILE(LISTE) EDIT('T =',PT,'ZAHL DER TAGE')
                 (SKIP,X(16),A,X(4),F(2),X(2),A);
                 PUT FILE(LISTE) EDIT('Z =',PZ,'MINUTEN PRO KLASSE')
                 (SKIP,X(16),A,F(6),X(2),A);
                 PUT FILE(LISTE) EDIT('F1=',PF1,'FAKTOR1 CPU')
                 (SKIP,X(16),A,X(5),F(6,4),X(2),A);
                 PUT FILE(LISTE) EDIT('F2=',PF2,'FAKTOR2 HSP')
                 (SKIP,X(16),A,X(5),F(6,4),X(2),A);
                 PUT FILE(LISTE) EDIT('F3=',PF3,'FAKTOR3 BAND')
                 (SKIP,X(16),A,X(3),F(3),X(2),A);
                 PUT FILE(LISTE) EDIT('F4=',PF4,'FAKTOR4 MULTIPROGR.')
                 (SKIP,X(16),A,X(3),F(3),X(2),A);
                 PUT FILE(LISTE) EDIT('K =',PK,'HSP.F.TSO')
                          (SKIP,X(16),A(3),X(1),F(5),X(2),A(9));
                 PUT FILE(LISTE) EDIT('S =',PS,'SCHALTER F.AUSWERT.TSO')
                 (SKIP,X(16),A,X(5),A,X(2),A);
                 ZEIL = ZEIL + 8;
                 END;
     PUT FILE(LISTE) EDIT('TAG  ZEIT','CPU','HAUPTSPEICHER',
                          'BANDEINHEITEN','MULTIPROGRAMMING',
                          'DURCHSCHNITTE')
                         (SKIP(2),X(2),A,X(11),A,X(15),A,X(10),A,X(9),
                          A,X(15),A);
     PUT FILE(LISTE) EDIT('0  1  2  3  4  5  6',
                          '0  1  2  3  4  5  6',
                          '0  1  2  3  4  5  6',
                          '0  1  2  3  4  5  6','CPU   HSP  BAND   MU')
                         (SKIP(2),X(14),A,X(4),A,X(4),A,X(4),A,X(9),A);
     ZEIL = ZEIL + 4;
     RETURN;
     END;
 /*  DIE  AUSWERTUNG   */
  DRUCK: CLOSE FILE(SMFBD);
         OPEN FILE(LISTE);
         DO I=1 TO 1440*7;
     JOB(3) = 0;
     J = TAB(I,3);
     SUBSTR(BIKET,2,31) = J;
     DO K = 1 TO 6;
     IF SUBSTR(BIKET,(33-K),1) THEN JOB(3) = JOB(3) + 1;
     END;
     TAB(I,3) = JOB(3);
         IF TAB(I,4) > 99 THEN DO;
                               TAB(I,2) = TAB(I,2) + PK;
                               TAB(I,4) = TAB(I,4) - 99;
                               END;
         END;
  DO I = 1 TO 10080 / Z;
    DU = 0;
    VERT = 0;
    DO K = 1 TO 4;
    SUMME = 0;
    ZQ = Z;
      DO J = 1 TO Z;
          WERT = TAB(Z*(I-1)+J,K);
          KLASSE = FLOOR(FAKTOR(K) * WERT);
          IF KLASSE > 6 THEN KLASSE = 6;
          VERT(KLASSE,K) = VERT(KLASSE,K) + 1/Z;
          SUMME = SUMME + WERT;
          IF TAB(Z*(I-1)+J,4) > 0 THEN;
                                  ELSE ZQ = ZQ - 1;
      END;
    IF ZQ < 1 THEN ZQ = 1;
    IF PM = 'A' THEN DU(K) = SUMME / Z;
                ELSE DU(K) = SUMME / ZQ;
    END;
    IF ZEIL > 66 THEN CALL TITEL;
     IF (DU(1)+DU(2)+DU(3)+DU(4)) = 0 THEN DO;
       IF SUPR THEN;
               ELSE DO;
                    SUPR='1'B;
                    PUT FILE(LISTE) EDIT((20)'*')(SKIP(2),A(20));
                    ZEIL = ZEIL + 2;
                    END;
                  END;
             ELSE DO;
                  SUPR = '0'B;
    VERT = VERT * 100;
    TAGNR = PD + FLOOR((I-1)*Z/1440);
    ZEIT = MOD((I-1)*Z,1440);
    STUND = FLOOR(ZEIT/60);
    MINUT = MOD(ZEIT,60);
    PUT FILE(LISTE) EDIT(TAGNR,STUND,'.',MINUT,
                        (VERT(L1-1,1) DO L1=1 TO 7),
                        (VERT(L2-1,2) DO L2=1 TO 7),
                        (VERT(L3-1,3) DO L3=1 TO 7),
                        (VERT(L4-1,4) DO L4=1 TO 7),
                        (DU(L5) DO L5=1 TO 4))(SKIP(2),P'99999',X(1),
                        P'99',A(1),P'99',X(2),(7)P'ZZ9',X(2),(7)P'ZZ9',
                        X(2),(7)P'ZZ9',X(2),(7)P'ZZ9',X(4),P'ZZ9V.999',
                        X(2),P'ZZZ9',X(2),P'Z9V.9',X(2),P'Z9V.9');
    ZEIL = ZEIL + 2;
                  END;
    END;
    PUT DATA(FEHLDATE);  /* SAETZE MIT FEHLERHAFTEN DATUM */
    PUT DATA(FEHLPROT); /* TABELLE - PROTECTION EXEPTION */
   END AUSWERT;
