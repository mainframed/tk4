*--------------------------------------------------------------------*
*        SETZEN VON TIME PARAMETERN BEI BESTIMMTEN JOB KLASSEN.      *
*        PRUEFEN VON KOSTENTRAEGER UND ANWEISUNGSNUMMERPAERCHEN.     *
*        NUMMERN STEHEN IN EINER DA-DATEI.                           *
*        DATEI IN DER INITIATOR UND JES2 PROZEDUR ALLOCATEN.         *
*        ACHTUNG .                                                   *
*        FRAGEN AN HERRN R.GOLLAN , KRUPP GEMEINSCHAFTSBETRIEBE      *
*        DATENVERARBEITUND , 4300 ESSEN 1 , ALTENDORFERSTR. 100      *
*        TEL.: 0201 - 188 2997                                       *
*--------------------------------------------------------------------*
         TITLE ' SET JOB TIME PARM, CHECK KOST AND ANW NR'
IEFUJV   CSECT
         REGS
         SAVE  (14,12),,IEFUJV&SYSDATE.&SYSTIME.
         BALR  R11,0               SET UP
         USING *,R11               BASE
         B     BEGIN               BYPASS EMERGENCY EXIT
         SR    R15,R15             ENTRY BY SUPERZAP
         BR    R14                 EMERGENCY RETURN
BEGIN    DS    0H
         LM    R2,R4,0(R1)         GET PARAMETER ADDRESSES
         USING JMR,R2              ESTABLISH ADDRESSABILITY
         USING JCLCARD,R3          ESTABLISH ADDRESSABILITY
         USING JCLSTMT,R4          ESTABLISH ADDRESSABILITY
         TM    JMROPT,JMRTSO       IF THIS A FOREGROUND JOB
         BO    OKEXIT              THEN BYPASS PROCESS
         CLI   JMRUSRID,C' '       IF THIS NOT THE FIRST ENTRY
         BNE   START               THEN BYPASS GETMAIN
         L     R5,WORKL            PUT LENGTH OF WORKAREA IN R5
         ICM   R5,8,SUBPOOL        PUT NUMBER OF SUBPOOL  IN R5
         GETMAIN R,LV=(5)          GET DYNAMIC STORAGE
         ST    R1,JMRUSRID         SAVE ADDRESS OF STORAGE
         LR    R9,R1               LOAD BASE FOR WORKAREA
         USING WORKAREA,R9         ESTABLISH ADDRESSABILITY
         XC    FLAGS,FLAGS         CLEAR FLAGS
         XC    PACOUNT,PACOUNT     CLEAR COUNT OF SYMBOLIC ACCOUNT PARM
         OI    EXFLAG,FIRST        FLAG FIRST ENTRY
START    DS    0H
         L     R9,JMRUSRID         GET ADDRESS OF WORKAREA
         TM    JCLSTMT,JOBSTMT     IF THIS A JOB STATEMENT
         BO    JOBCARD             THEN GO TO JOB PROCESS
         TM    JCLSTMT,EXECSTMT    IF THIS AN EXEC STATEMENT
         BO    EXECARD             THEN GO TO EXEC PROCESS
         TM    JCLSTMT,PROCSTMT    IF THIS A PROC STATEMENT
         BO    PROCARD             THEN GO TO PROC PROCESS
         TM    JCLSTMT,EOFSTMT     IF THIS END OF JOB
         BO    EOFJCL              THEN GOTO FINAL PROCESS
         B     OKEXIT              ELSE BYPASS PROCESS
         EJECT
JOBCARD  DS    0H
         BAL   R12,JOBACCT         TEST FOR JOB ANKO
         LTR   R15,R15             IF ANKO INVALID
         BNZ   NOKEXIT             THEN GO TO ERROR EXIT
         BAL   R12,JOBTIME         INSERT TIME PARAMETER
         B     OKEXIT              GO TO NORMAL EXIT
EXECARD  DS    0H
         BAL   R12,EXECACCT        TEST FOR EXEC ANKO
         LTR   R15,R15             IF ANKO INVALID
         BNZ   NOKEXIT             THEN GO TO ERROR EXIT
         B     OKEXIT              ELSE GO TO NORMAL RETURN
PROCARD  DS    0H
         BAL   R12,PROCACCT        TEST FOR PROC ANKO
         LTR   R15,R15             IF ANKO INVALID
         BNZ   NOKEXIT             THEN GO TO ERROR EXIT
         B     OKEXIT              ELSE GO TO NORMAL RETURN
EOFJCL   DS    0H
         BAL   R12,ENDACCT         TEST FOR FINAL ANKO
         LTR   R15,R15             IF INVALID ANKO
         BNZ   NOKEXIT             THEN GO TO ERROR EXIT
         BAL   R12,RELAREA         RELEASE DYNAMIC STORAGE
         B     OKEXIT              GO TO NORMAL EXIT
         EJECT
NOKEXIT  DS    0H
         LA    R2,4                SET CANCEL RETURN CODE
         B     EXIT                GO BACK
OKEXIT   DS    0H
         SR    R2,R2               SET GOOD RETURN CODE
EXIT     DS    0H
         ST    R2,16(R13)          PUT RETURN CODE IN SSA R15
         LM    R14,R12,12(R13)     STORE BACK
         BR    R14                 RETURN
         EJECT
******************************************************************
*                                                                *
*         INSERT TIME PARAMETER                                  *
*                                                                *
******************************************************************
JOBTIME  DS    0H
         BAL   R14,FINDOPT         FIND OPERATOR
         DC    X'04',CL7'JOB'
         LTR   R15,R15             IF THIS CARD THE FIRST
         BNZ   JTEXIT              THEN GO TO NORMAL RETURN
         LA    R1,JCLCARD+2        GET ADDRESS THIRD CARD COLUMN
         BAL   R14,FINDOPD         FIND OPERAND
         DC    X'07',CL7',CLASS='
         LTR   R15,R15             IF CLASS OPERAND FOUND
         BNZ   JT01                THEN GO TO TEST FOR CLASS VALUE
         B     JTEXIT              ELSE GO TO NORMAL EXIT
JT01     DS    0H
         L     R5,OPDADDR          GET OPERAND ADDRESS
         LA    R5,7(R5)            GET ADDRESS OF OPERAND VALUE
         LM    R6,R8,TABBOUND      SET FOR BXLE
JT02     DS    0H
         CLC   0(1,R5),0(R8)       IF SPECIAL JOB CLASS FOUND
         BE    JT03                THEN GO TO INSERT TIME
         BXLE  R8,R6,JT02          IF END OF TIME VALUE TABLE
         B     JTEXIT              THEN GO TO NORMAL EXIT
JT03     DS    0H
         LA    R5,1(R5)            ADJUST ADDRESS OF OPERAND VALUE
         CLI   0(R5),C' '          IF 'CLASS=' THE LAST OPERAND
         BE    JT05                THEN BYPASS ADJUSTMENT OF OPERANDS
         LA    R6,JCLCARD+70       GET ADDRESS OF LAST POSSIBLE COLUMN
         LA    R7,JCLCARD+57       GET ADDRESS OF LAST POSSIBLE OPERAND
JT04     DS    0H
         MVC   0(1,R6),0(R7)       MOVE BYTE BY BYTE
         CR    R5,R7               IF ADJUSTMENT DONE
         BE    JT05                THEN GO TO INSERT TIME
         BCTR  R6,0                SET NEW ADRRESS FOR MVC
         BCT   R7,JT04             SET NEW ADDR FOR MVC AND MOVE AGAIN
JT05     DS    0H
         MVC   0(13,R5),=C',TIME=(99,99)' INSERT TIME PARM
         MVC   7(5,R5),1(R8)       INSERT TIME VALUE
         B     JTEXIT              GO TO NORMAL EXIT
JTEXIT   DS    0H
         BR    R12                 RETURN
         EJECT
******************************************************************
*                                                                *
*         TEST FOR AN/KO IN JOB CARD                             *
*                                                                *
******************************************************************
JOBACCT  DS    0H
         CLI   JMRJOBN,C'P'        IF NOT SPECIAL JOB
         BNE   JA01                THEN GO TO TEST
         CLI   JMRJOBN+1,C'0'      IF SPECIAL JOB
         BNL   JAOKEXIT            THEN BYPASS TEST
JA01     DS    0H
         BAL   R14,FINDOPT         FIND OPERATOR
         DC    X'04',CL7'JOB'
         LTR   R15,R15             IF CONTINUATION CARD
         BZ    JAOKEXIT            THEN GO TO NORMAL EXIT
         L     R1,OPTADDR          GET ADDRESS OF OPERATOR
         LA    R1,3(R1)            SET ADDRESS FOR FINDOPD
         BAL   R14,FINDOPD         FIND OPERAND
         DC    X'02',CL7' ('
         LTR   R15,R15             IF OPERAND NOT FOUND
         BZ    JAER02              THEN GO TO ERROR MESSAGE
         L     R1,OPDADDR          ELSE GET ADDRESS OF OPERAND
         CLI   39(R1),C')'         IF JOBCARD WITHOUT ANKO
         BE    JAOKEXIT            THEN GOTO NORMAL EXIT
         LA    R8,40(R1)           GET ADDRESS OF ANKO
         BAL   R10,TESTAK          TEST FOR VALID ANKO
         LTR   R15,R15             IF ANKO INVALID
         BNZ   JAER01              THEN GOTO ERROR MESSAGE
         OI    JBFLAG,ANKO         ELSE FLAG VALID JOB ANKO
         B     JAOKEXIT            GO TO NORMAL EXIT
JAER01   DS    0H
         MVC   JCLCARD+30(25),=CL25'***** AN/KO UNGUELTIG'
         B     JAEREXIT            GO TO ERROR EXIT
JAER02   DS    0H
         MVC   JCLCARD+18(37),=CL37'** ACCOUNT PARM UNGUELTIG'
         B     JAEREXIT            GO TO ERROR EXIT
JAOKEXIT DS    0H
         SR    R6,R6               SET RETURN CODE TO 0
         B     JAEXIT              GO TO RETURN
JAEREXIT DS    0H
         WTO   'UJV001I  ********** JOB AN/KO FALSCH **********'
         LA    R6,4                INDICATE CANCEL
JAEXIT   DS    0H
         LR    R15,R6              PUT RETURNCODE IN R15
         BR    R12                 RETURN
         EJECT
******************************************************************
*                                                                *
*         TEST FOR AN/KO IN EXEC CARD                            *
*                                                                *
******************************************************************
EXECACCT DS    0H
         CLI   JMRJOBN,C'P'        IF NOT SPECIAL JOB
         BNE   EA01                THEN GO TO TEST
         CLI   JMRJOBN+1,C'0'      IF SPECIAL JOB
         BNL   EAOKEXIT            THEN BYPASS TEST
EA01     DS    0H
         BAL   R14,FINDOPT         FIND OPERATOR
         DC    X'05',CL7'EXEC'
         LTR   R15,R15             IF CONT CARD
         BZ    EA03                THEN PROCESS IT
         NI    FSFLAG,255-APOSTRO  ALTER APOSTROPH SWITCH
         NI    FPFLAG,255-APOSTRO  ALTER APOSTROPH SWITCH
         BAL   R14,INITTEST        TEST FOR ANKO OF LAST STEP
         LTR   R15,R15             IF ANKO INVALID
         BNZ   EAEREXIT            THEN GOTO ERROR EXIT
         L     R1,OPTADDR          GET ADDRESS OF OPERATOR
         LA    R1,4(R1)            GET ADDR OF FIRST POSSIBLE OPERAND
         BAL   R14,FINDOPD         FIND OPERAND
         DC    X'05',CL7' PGM='
         LTR   R15,R15             IF 'EXEC PROC'
         BZ    EA02                THEN GO TO FLAG IT
         OI    EXFLAG,PGM          ELSE FLAG 'EXEC PGM'
         B     EA04                GO TO FIND 'ACCT'
EA02     DS    0H
         OI    EXFLAG,PROC         FLAG 'EXEC PROC'
         B     EA08                GO TO FIND SYMBOLIC ACCOUNT PARM
EA03     DS    0H
         TM    EXFLAG,PGM          IF 'EXEC PGM'
         BO    EA04                THEN GO TO FIND 'ACCT'
         B     EA08                ELSE GO TO FIND SYMB ACCT PARM
EA04     DS    0H
         L     R1,OPTADDR          GET ADDRESS OF OPERATOR
         LTR   R1,R1               IF CONT CARD
         BZ    EA041               THEN BYPASS ADJUSTMENT
         LA    R1,4(R1)            ADJUST FOR FINDOPD
         B     EA042               GO TO FINDOPD
EA041    DS    0H
         LA    R1,JCLCARD+2        GET ADDRESS OF COLUMN 3
EA042    DS    0H
         BAL   R14,FINDOPD         FIND OPERAND
         DC    X'06',CL7',ACCT='
         LTR   R15,R15             IF KEYWORD FOUND
         BNZ   EA05                THEN GO TO TEST FOR VALUE
         B     EAOKEXIT            ELSE GO TO NORMAL EXIT
EA05     DS    0H
         L     R1,OPDADDR          GET ADDRESS OF KEYWORD
         CLI   6(R1),C'('          IF FORMAT NOT SYMBOLIC
         BE    EA06                THEN GO TO TEST FOR ANKO
         CLC   6(2,R1),=C'&&A'     IF SYMBOLIC FORMAT
         BE    EA051               THEN GO TO TEST FOR IT
         CLC   6(5,R1),=C'99999'   IF DUMMY ANKO
         BE    EAOKEXIT            THEN GO TO NORMAL EXIT
         B     EAER03              ELSE GO TO ERROR MESSAGE
EA051    DS    0H
         BAL   R14,TESTSYMB        TEST FOR SYMBOLIC VALUE
         LTR   R15,R15             IF INVALID VALUE
         BNZ   EAER03              THEN GO TO ERROR MESSAGE
         OI    EXFLAG,SANKO        ELSE FLAG SYMBOLIC ACCT PARM
         B     EAOKEXIT            GO TO NORMAL EXIT
EA06     DS    0H
         LA    R8,7(R1)            GET ADDRESS OF ANKO
         BAL   R10,TESTAK          TEST FOR ANKO
         LTR   R15,R15             IF INVALID ANKO
         BNZ   EAER01              THEN GO TO ERROR MESSAGE
EA07     DS    0H
         OI    EXFLAG,ANKO         FLAG EXEC ANKO
         B     EAOKEXIT            GO TO NORMAL EXIT
EA08     DS    0H
         L     R1,OPTADDR          GET ADDRESS OF OPERATOR
         LTR   R1,R1               IF CONT CARD
         BZ    EA081               THEN BYPASS ADJUSTMENT
         LA    R1,4(R1)            ADJUST FOR FINDSYMB
         B     EA082               GO TO FINDSYMB
EA081    DS    0H
         LA    R1,JCLCARD+2        GET ADDRESS OF COLUMN 3
EA082    DS    0H
         BAL   R14,FINDSYMB        FIND SYMBOLIC VALUE
         B     *+4(R15)            BRANCH DEPENDING ON RETURN CODE
         B     EA09                 0 GO TO FIND '.ACCT'
         B     EA083                4 GO TO TEST FOR ANKO
         B     EAER03               8 GO TO ERROR MESSAGE
         B     EAER03              12 GO TO ERROR MESSAGE
EA083    DS    0H
         L     R8,SYMADDR          GET ADDR OF ANKO IN SYMB ACCT PARM
         BAL   R10,TESTAK          TEST FOR ANKO
         LTR   R15,R15             IF ANKO INVALID
         BNZ   EAER01              THEN GO TO ERROR MESSAGE
         L     R1,SYMADDR          PREPARE R1 FOR NEXT FINDSYMB
         BCTR  R1,0                *
         BCTR  R1,0                *
         B     EA082               GO TO FINDSYMB
EA09     DS    0H
         L     R1,OPTADDR          GET ADDRESS OF OPERATOR
         LTR   R1,R1               IF CONT CARD
         BZ    EA091               THEN BYPASS ADJUSTMENT
         LA    R1,4(R1)            ADJUST FOR FINDOPD
         B     EA092               GO TO FINDOPD
EA091    DS    0H
         LA    R1,JCLCARD+2        GET ADDRESS COLUMN 3
EA092    DS    0H
         BAL   R14,FINDOPD         FIND OPERAND
         DC    X'06',CL7'.ACCT='
         LTR   R15,R15             IF NOT '.ACCT'
         BZ    EAOKEXIT            THEN GO TO NORMAL EXIT
         L     R1,OPDADDR          GET ADDRESS OF OPERAND
         CLI   6(R1),C'('          IF INVALID FORMAT
         BNE   EAER03              THEN GOTO ERROR MESSAGE
         LA    R8,7(R1)            GET ADDRESS OF ANKO
         BAL   R10,TESTAK          TEST FOR ANKO
         LTR   R15,R15             IF INVALID ANKO
         BNZ   EAER01              THEN GO TO ERROR MESSAGE
         L     R1,PACOUNT          GET COUNT OF '.ACCT' PARMS
         LA    R1,1(R1)            COUNT UP
         ST    R1,PACOUNT          STORE BACK
         L     R1,OPDADDR          PREPARE R1 FOR NEXT FINDOPD
         LA    R1,18(R1)           *
         B     EA092               *
EAER01   DS    0H
EAER03   DS    0H
         MVC   JCLCARD+(80-L'MSG01)(L'MSG01),MSG01
         B     EAEREXIT            GO TO ERROR EXIT
EAOKEXIT DS    0H
         SR    R15,R15             SET RETURN CODE TO 0
         B     EAEXIT              GO TO RETURN
EAEREXIT DS    0H
         WTO   'UJV002I  *********** EXEC AN/KO FALSCH **********'
         LA    R15,4               FLAG CANCEL
EAEXIT   DS    0H
         BR    R12                 RETURN
         EJECT
******************************************************************
*                                                                *
*         TEST FOR AN/KO IN PROC CARD                            *
*                                                                *
******************************************************************
PROCACCT DS    0H
         CLI   JMRJOBN,C'P'        IF NOT SPECIAL JOB
         BNE   PA00                THEN GO TO TEST
         CLI   JMRJOBN+1,C'0'      IF SPECIAL JOB
         BNL   PAOKEXIT            THEN BYPASS TEST
PA00     DS    0H
         BAL   R14,FINDOPT         FIND OPERATOR
         DC    X'05',CL7'PROC'
         LTR   R15,R15             IF CONT CARD
         BZ    PA01                THEN BYPASS SWITCH
         NI    FSFLAG,255-APOSTRO  ALTER APOSTROPH FLAG
         NI    FPFLAG,255-APOSTRO  *
         L     R1,OPTADDR          GET ADDRESS OF OPERATOR
         LA    R1,5(R1)            ADJUST FOR FINDOPD
         B     PA02                GO TO FINOPD
PA01     DS    0H
         LA    R1,JCLCARD+2        GET ADDRESS OF COLUMN 3
PA02     DS    0H
         BAL   R14,FINDSYMB        FIND SYMBOLIC ACCT PARM
         B     *+4(R15)            BRANCH DEPENDING ON R15
         B     PAOKEXIT            GO TO NORMAL EXIT
         B     PA021               GO TO TEST FOR ANKO
         B     PAER02              GO TO ERROR MESSAGE
         B     PA022               GO TO FIND NEXT SYMBOLIC ACCT PARM
PA021    DS    0H
         L     R8,SYMADDR          GET ADDRESS OF ANKO
         BAL   R10,TESTAK          TEST FOR ANKO
         LTR   R15,R15             IF INVALID ANKO
         BNZ   PAER01              THEN GO TO ERROR MESSAGE
PA022    DS    0H
         L     R1,SYMADDR          PREPARE R1 FOR NEXT FINDSYMB
         LA    R1,11(R1)           *
         B     PA02                GO TO FINDSYMB
PAER01   DS    0H
PAER02   DS    0H
         MVC   JCLCARD+(80-L'MSG01)(L'MSG01),MSG01
         B     PAEREXIT            GO TO ERROR EXIT
PAOKEXIT DS    0H
         SR    R15,R15             SET RETURN CODE TO 0
         B     PAEXIT              GO TO RETURN
PAEREXIT DS    0H
         WTO   'UJV003I  *********** PROC AN/KO FALSCH **********'
         LA    R15,4               FLAG CANCEL
PAEXIT   DS    0H
         BR    R12                 RETURN
******************************************************************
*                                                                *
*         FINAL ANKO TEST                                        *
*                                                                *
******************************************************************
ENDACCT  DS    0H
         CLI   JMRJOBN,C'P'        IF NOT SPECIAL JOB
         BNE   EC00                THEN GO TO TEST
         CLI   JMRJOBN+1,C'0'      IF SPECIAL JOB
         BNL   ECOKEXIT            THEN BYPASS TEST
EC00     DS    0H
         BAL   R14,INITTEST        TEST FOR ANKO IN LAST STEP
         LTR   R15,R15             IF INVALID ANKO
         BNZ   ECEREXIT            THEN GO TO ERROR EXIT
ECOKEXIT DS    0H
         SR    R15,R15             SET REURN CODE TO 0
         B     ECEXIT              GO TO RETURN
ECEREXIT DS    0H
         WTO   'UJV004I  ***** AN/KO FALSCH IM LETZTEN STEP *****'
         LA    R15,4               FLAG CANCEL
ECEXIT   DS    0H
         BR    R12                 RETURN
         EJECT
******************************************************************
*                                                                *
*         RELEASE DYNAMIC STORAGE                                *
*                                                                *
******************************************************************
RELAREA  DS    0H
         L     R9,JMRUSRID         GET ADDR OF STORAGE OF WORKAREA
         LTR   R9,R9               IF NO STORAGE
         BZ    RAEXIT              THEN BYPASS FREEMAIN
         L     R5,WORKL            GET LENGTH OF WORKAREA
         ICM   R5,8,SUBPOOL        GET SUBPOL NO
         FREEMAIN R,LV=(R5),A=(R9) RELEASE DYNAMIC STORAGE
         SR    R9,R9               CLEAR STRORAGE POINTER
         ST    R9,JMRUSRID         CLEAR WORKAREA POINTER
RAEXIT   DS    0H
         BR    R12                 RETURN
         EJECT
******************************************************************
*        FIND JCL OPERATOR                                       *
******************************************************************
FINDOPT  DS    0H
         IC    R5,0(R14)
         BCTR  R5,0
         LA    R8,JCLCARD+2
         LA    R6,1
         LA    R7,JCLCARD+71
FO01     DS    0H
         CLI   0(R8),C' '
         BE    FO011
         BXLE  R8,R6,FO01
         B     FO03
FO011    DS    0H
         EX    R5,FOCLC
         BE    FO02
         BXLE  R8,R6,FO011
         B     FO03
FO02     DS    0H
         ST    R8,OPTADDR
         LA    R15,1
         B     FOEXIT
FO03     DS    0H
         SR    R15,R15
         ST    R15,OPTADDR
FOEXIT   DS    0H
         B     8(R14)
FOCLC    CLC   0(*-*,R8),1(R14)
         EJECT
******************************************************************
*        FIND JCL OPERAND                                        *
******************************************************************
FINDOPD  DS    0H
         LR    R8,R1
         LA    R7,JCLCARD+71
         CR    R8,R7
         BH    FP05
         LA    R6,1
         IC    R5,0(R14)
         BCTR  R5,0
FP01     DS    0H
         CLI   0(R8),C' '
         BNE   FP011
         BXLE  R8,R6,FP01
         B     FP05
FP011    DS    0H
         CLI   1(R14),C'.'
         BE    FP012
         BCTR  R5,0
         EX    R5,FPCLC1
         BE    FP03
         LA    R5,1(R5)
FP012    DS    0H
         CLI   0(R8),C''''
         BE    FP02
         TM    FPFLAG,APOSTRO
         BO    FP013
         CLI   0(R8),C' '
         BE    FP05
         EX    R5,FPCLC
         BE    FP04
FP013    DS    0H
         BXLE  R8,R6,FP012
         B     FP05
FP02     DS    0H
         XI    FPFLAG,APOSTRO
         B     FP013
FP03     DS    0H
         CLI   1(R14),C','
         BNE   FP04
         BCTR  R8,0
FP04     DS    0H
         LA    R15,4
         B     FPEXIT
FP05     DS    0H
         SR    R15,R15
         SR    R8,R8
FPEXIT   DS    0H
         ST    R8,OPDADDR
         B     8(R14)
FPCLC    CLC   0(*-*,R8),1(R14)
FPCLC1   CLC   0(*-*,R8),2(R14)
         EJECT
******************************************************************
*        FIND SYMBOLIC JCL PARAMETER                             *
******************************************************************
FINDSYMB DS    0H
         LR    R8,R1
         LA    R7,JCLCARD+54
         CR    R8,R7
         BH    FS09
         LA    R6,1
FS01     DS    0H
         CLI   0(R8),C' '
         BNE   FS02
         CLC   0(2,R8),=C' A'
         BE    FS05
         BXLE  R8,R6,FS01
         B     FS09
FS011    DS    0H
         LA    R6,1
FS02     DS    0H
         CLI   0(R8),C''''
         BE    FS04
         TM    FSFLAG,APOSTRO
         BO    FS03
         CLI   0(R8),C' '
         BE    FS09
         CLC   0(2,R8),=C',A'
         BE    FS05
FS03     DS    0H
         BXLE  R8,R6,FS02
         B     FS09
FS04     DS    0H
         XI    FSFLAG,APOSTRO
         B     FS03
FS05     DS    0H
         LA    R5,SYMNAME
         LA    R8,2(R8)
         SR    R6,R6
FS06     DS    0H
         CLI   0(R5),X'FF'
         BE    FS011
         IC    R6,2(R5)
         BCTR  R6,0
         EX    R6,FSCLC
         BE    FS07
         LA    R5,4(R6,R5)
         B     FS06
FS07     DS    0H
         LA    R8,1(R6,R8)
         CLI   0(R8),C'='
         BNE   FS011
         CLC   1(5,R8),=C'99999'
         BE    FS071
         CLC   1(2,R8),=C'''('
         BNE   FS08
         OC    SNFLAG,0(R5)
         LA    R1,3(R8)
         LA    R15,4
         B     FSEXIT
FS071    DS    0H
         LA    R15,12
         B     FSEXIT
FS08     DS    0H
         LA    R15,8
         B     FSEXIT
FS09     DS    0H
         SR    R15,R15
         SR    R1,R1
FSEXIT   DS    0H
         ST    R1,SYMADDR
         BR    R14
FSCLC    CLC   0(*-*,R8),3(R5)
         EJECT
******************************************************************
*        TEST SYMBOLIC ACCOUNT PARAMETER                         *
******************************************************************
TESTSYMB DS    0H
         LA    R8,8(R1)
         LA    R7,JCLCARD+71
         CR    R8,R7
         BH    TS041
         LA    R5,SYMNAME
         SR    R6,R6
TS01     DS    0H
         CLI   0(R5),X'FF'
         BE    TS03
         IC    R6,2(R5)
         BCTR  R6,0
         EX    R6,TSCLC
         BE    TS02
         LA    R5,4(R6,R5)
         B     TS01
TS02     DS    0H
         LA    R8,1(R6,R8)
         CLI   0(R8),C' '
         BE    TS04
         CLI   0(R8),C','
         BE    TS04
TS03     DS    0H
         LA    R15,4
         B     TSEXIT
TS04     DS    0H
         TM    JBFLAG,ANKO
         BO    TS041
         TM    EXFLAG,PROC
         BNO   TS041
         MVC   TEMPFL,SNFLAG
         NC    TEMPFL,0(R5)
         BZ    TS03
TS041    DS    0H
         SR    R15,R15
         SR    R1,R1
TSEXIT   DS    0H
         ST    R1,SYMADDR
         BR    R14
TSCLC    CLC   0(*-*,R8),3(R5)
         EJECT
******************************************************************
*        INIT FLAGS AND TEST FOR JOB/STEP ANKO                   *
******************************************************************
INITTEST DS    0H
         TM    EXFLAG,FIRST
         BNO   IT01
         NI    EXFLAG,255-FIRST
         B     ITOKEXIT
IT01     DS    0H
         TM    JCLSTMT,EOFSTMT
         BO    IT02
         TM    EXFLAG,PGM
         BNO   ITOKEXIT
IT02     DS    0H
         TM    EXFLAG,PROC
         BO    IT03
         TM    EXFLAG,ANKO
         BO    IT04
         TM    JBFLAG,ANKO
         BNO   ITER01
IT021    DS    0H
         CLI   JCLCARD,C'/'
         BNE   IT05
         XC    PACOUNT,PACOUNT
         XC    SNFLAG,SNFLAG
         NI    EXFLAG,255-(PROC+PGM)
         B     ITOKEXIT
IT03     DS    0H
         TM    EXFLAG,ANKO
         BO    IT04
         TM    EXFLAG,SANKO
         BO    IT041
         TM    JBFLAG,ANKO
         BO    IT021
         ICM   R15,15,PACOUNT
         BZ    ITER01
         BM    ITER01
         BCTR  R15,0
         ST    R15,PACOUNT
         B     IT021
IT04     DS    0H
         NI    EXFLAG,255-ANKO
         B     IT021
IT041    DS    0H
         NI    EXFLAG,255-SANKO
         B     IT021
IT05     DS    0H
         NI    EXFLAG,255-PGM
         B     ITOKEXIT
ITER01   DS    0H
         MVC   JCLCARD+(80-L'MSG02)(L'MSG02),MSG02
         B     ITEREXIT
ITEREXIT DS    0H
         LA    R15,4
         B     ITEXIT
ITOKEXIT DS    0H
         SR    R15,R15
ITEXIT   DS    0H
         BR    R14
         EJECT
*******************************************************************
*         TEST FOR A MATCH                                        *
*******************************************************************
TESTAK   DS    0H
         ST    R2,SAVE2            SAVE REGISTER
         ST    R4,SAVE4            SAVE REGISTER
         LA    R14,SSA             GET ADDR OF SSA
         ST    R13,4(R14)          SAVE BACKWARD POINTER
         ST    R14,8(R13)          SAVE FORWARD POINTER
         LR    R13,R14             SET ADDR OF SSA IN R13
         EJECT
         LA    R7,JCLCARD+71
         CR    R8,R7
         BH    NOTNUM
         CLI   5(R8),C','
         BNE   NOTNUM
         CLI   11(R8),C')'
         BNE   NOTNUM
         ST    R8,ANUMMER
         LA    R8,6(R8)
         ST    R8,KTRAEGER
         L     R8,KTRAEGER         GET ADDR OF KOSTENTRAEGER
         LA    R6,1                SET FOR BXLE
         LA    R7,4(R8)            SET FOR BXLE
TKLOOP   DS    0H
         CLI   0(R8),C'0'          TEST FOR NUMERIC
         BL    NOTNUM              *
         CLI   0(R8),C'9'          *
         BH    NOTNUM              *
         BXLE  R8,R6,TKLOOP        *
         L     R8,KTRAEGER         GET ADDR OF KOSTENTRAEGER
         PACK  KTRNRPK,0(5,R8)     MAKE IT DECIMAL
         L     R8,ANUMMER          GET ADDR OF ANWWEISUNGSNUMMER
         LA    R6,1                SET FOR BXLE
         LA    R7,4(R8)            SET FOR BXLE
TALOOP   DS    0H
         CLI   0(R8),C'0'          TEST FOR NUMERIC
         BL    NOTNUM              *
         CLI   0(R8),C'9'          *
         BH    NOTNUM              *
         BXLE  R8,R6,TALOOP        *
         L     R8,ANUMMER          GET ADDR OF ANWWEISUNGSNUMMER
         PACK  BINANW,0(5,R8)
         SR    R4,R4
         CVB   R5,BINANW
         LA    R2,DIV
         DR    R4,R2
         ST    R5,ANWBIN
         EJECT
         MVC   DCBDYNA,DCBKONST
         LA    R2,DCBDYNA
         LA    R5,SATZ
         LA    R6,ANWBIN+1
         MVI   OPACT,128            SET OPTION BYTE
         OPEN  ((R2),(INPUT)),MF=(E,OPACT)
         READ  DECB,DI,(R2),(R5),'S',0,(R6),MF=E
         CHECK DECB
         EJECT
         MH    R4,=H'3'
         LA    R5,SATZ(R4)
         CP    0(3,R5),KTRNRPK
         BNE   FEHLER
         SR    R6,R6
         B     TCLOSE
NOTNUM   EQU   *
         LA    R6,4
         B     TEXIT
FEHLER   LA    R6,4
         B     TCLOSE
TCLOSE   DS    0H
         MVI   CLACT,128            SET OPTION BYTE
         CLOSE ((R2)),MF=(E,CLACT)
         B     TEXIT
         EJECT
TEXIT    DS    0H
         L     R2,SAVE2
         L     R4,SAVE4
         L     R13,4(R13)
         LR    R15,R6
         BR    R10
         EJECT
TABBOUND DC    F'6'
         DC    A(TABLEND)
         DC    A(TABLE)
TABLE    DC    C'900,22'           CLASS 9   20 SEC + 10%
         DC    C'E01,06'           CLASS E   60 SEC + 10%
         DC    C'F02,12'           CLASS F  120 SEC + 10%
         DC    C'G05,30'           CLASS G  300 SEC + 10%
TABLEND  EQU   *-6
MSG01    DC    C'***   AN/KO FEHLER  ***'
MSG02    DC    C'***   AN/KO FEHLER IM VORSTEP  ***'
SYMNAME  DS    0C
         DC    X'8000',X'04',C'LIBR'
         DC    X'4000',X'03',C'NPG'
         DC    X'2000',X'01',C'C'
         DC    X'1000',X'01',C'L'
         DC    X'0800',X'01',C'G'
         DC    X'0400',X'01',C'S'
         DC    39X'FF'
SUBPOOL  DC    X'F1'               SUBPOOL NO 241
DIV      EQU   1000
DCBKONST DCB   DDNAME=SYSACCT,DSORG=DA,MACRF=RIC
WORKL    DC    A(WORKEND-WORKAREA)
NOTFALL  DC    C' '
ZAPPEL   DC    40X'00'
         LTORG
         EJECT
JCLCARD  DSECT
         DS    CL80
JCLSTMT  DSECT
         DS    X
JOBSTMT  EQU   1
EXECSTMT EQU   2
DDSTMT   EQU   4
PROCSTMT EQU   8
EOFSTMT  EQU   16
JMR      DSECT
JMRJOBN  DS    CL8
JMRTIME  DS    F
JMRDATE  DS    XL4
JMRSYSID DS    CL4
JMRUSRID DS    CL8
JMRSTPNO DS    X
JMROPT   DS    X
JMRTSO   EQU   X'01'
JMRFLG   DS    X
         DS    X
JMRUSCOM DS    XL4
         EJECT
WORKAREA DSECT
BINANW   DS    D
ANWBIN   DS    F
SAVE2    DS    F
SAVE4    DS    F
OPTADDR  DS    F
SYMADDR  DS    F
OPDADDR  DS    F
SSA      DS    18F
KTRAEGER DS    F
ANUMMER  DS    F
PACOUNT  DS    F
DCBDYNA  DS    CL104
KTRNRPK  DS    PL3
SEEKCHAR DS    CL1
***********************************
FLAGS    DS    0XL6
JBFLAG   DS    XL1
ANKO     EQU   X'80'
EXFLAG   DS    XL1
PGM      EQU   X'40'
PROC     EQU   X'20'
SANKO    EQU   X'10'
FIRST    EQU   X'04'
FPFLAG   DS    X
FSFLAG   DS    X
APOSTRO  EQU   X'80'
SNFLAG   DS    XL2
TEMPFL   DS    XL2
***********************************
SATZ     DS    CL3000
OPACT    OPEN  (DCBDYNA,(INPUT)),MF=L
         READ  DECB,DI,DCBDYNA,SATZ,'S',0,ANWBIN+1,MF=L
CLACT    CLOSE (DCBDYNA),MF=L
WORKEND  EQU   *
         END
