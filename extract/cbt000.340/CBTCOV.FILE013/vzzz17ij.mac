PROC 0
CONTROL END(ENDO)
/**********************************************************************/
/*     H     H   EEEEEEE    AAAAA    DDDDDD    EEEEEEE   RRRRRR       */
/*     H     H   E         A     A   D     D   E         R     R      */
/*     HHHHHHH   EEEEEEE   AAAAAAA   D     D   EEEEEEE   RRRRRR       */
/*     H     H   E         A     A   D     D   E         R   R        */
/*     H     H   EEEEEEE   A     A   DDDDDD    EEEEEEE   R     R      */
/**********************************************************************/
/*  CLIST NAME: VTAM32            REL/DATE: 2.1/08.15.79              */
/*                                                                    */
/*  DOC: THIS IS THE FUNCTION 2 CLIST FOR VTAM 3 ACF/VTAM THAT        */
/*       IS CALLED BY VTAMDIAG CLIST. IT LISTS THE BUFFER POOL        */
/*       POINTERS FROM THE BUFFER POOL DIRECTORY TABLE AND THEN       */
/*       GIVES THE USER THE OPTION TO ANALYSIS THE RPH'S IN THE       */
/*       LP BUFFERS AND/OR THE LP BUFFER EXTENSIONS.                  */
/*  SYMBOLS EQUATED: LPPXB# LPSTART LPEND ATCVT VTAMASCB              */
/*                   BPDTY BPCB                                       */
/*  SYMBOLS FOUND: NONE                                               */
/*  RETURN: TO VTAMDIAG                                               */
/*  DEPENDENCIES: 1) THIS CLISTS REQUIRES THAT TSO COMMAND            */
/*                   CLEAR BE INSTALLED IN YOUR ENVIRONMENT.        */
/*                2) ALSO NEED A HEX CONVERTER, OURS IS A             */
/*                   CLIST CALLED HEX.                                */
/*  USE: ONCE THE USER STARTS EXECUTION OF THIS CLISTS, VTAM'S        */
/*       ASID WILL BE DISPLAYED FOLLOWED BY A LISTING OF THE          */
/*       BUFFER POOL POINTERS FROM THE BUFFER POOL DIRECTORY.         */
/*       NEXT COMES A MENU TO ALLOW EXIT OR ANALYSIS OF THE           */
/*       RPH'S IN THE LP POOL AND/OR IT'S EXTENSIONS. RETURN IS       */
/*       NORMALLY TO VTAMDIAG'S MENU PAGE UNLESS FUNC32 WAS           */
/*       CALLED WITHOUT USE OF VTAMDIAG.                              */
/*SJM******************************************************************/
EQU ATCVT 408.%
EQU VTAMASCB ATCVT+774%
EVAL VTAMASCB+24 L(2)
SET &VTAMASID = &LASTCC
SETD ASID(&VTAMASID)
SETD DISP(REMARK NOMACH NOSYM NOREQ NOSTOR) ASID(&VTAMASID)
SET &NO = 1
SET &NUM= 0
SET &EXTNO = 1
SET &EXTENTFL = 0
SET &P = .
EQU BPDTY ATCVT+134%
EQU BPCB BPDTY+F8%              /* PTR TO LP BPCB       */
EQU LPSTART BPCB+10%            /* START OF LPBUF */
EQU LPEND BPCB+14%              /* END OF LPBUF       */
EQU END BPCB+14% ASID(&VTAMASID)
EQU RPH&NUM LPSTART ASID(&VTAMASID)
CLEAR
NOTE '********************************************************'
NOTE '*    VTAM ASID IS &VTAMASID (DECIMAL)                   '
NOTE '********************************************************'
L BPDTY+C0 L(192) REMARK('BUFFER POOL POINTERS FROM BPDTY +C0')
EVAL BPCB+7D L(3)
IF &LASTCC = 0 THEN +
   DO
      SET &NO = 0
      NOTE ' LP BUFFER HAS NO EXTENSIONS ' SPACE(2)
      GOTO START
   ENDO
EVAL BPCB+BC
SET &BPCBEXLN = &LASTCC
EQU LPPXB&NO BPCB+7C% L(&BPCBEXLN) ASID(&VTAMASID)
CLEAR
NOTE '*************************************************************' -
PAGE
NOTE '*     THE FOLLOWING ARE A LIST OF LP POOL EXTENSION BLOCK    '
NOTE '*         ADDRESSES AND HAVE BEEN EQUATED AS LPPXB#        '
NOTE '*  THE LENGTH ATTRIBUTE IS THE LENGTH OF THE EXTENSION POOL  '
NOTE '*************************************************************'
PXBLOOP: +
EVAL LPPXB&STR(&NO)+5 L(3)
IF &LASTCC NE 0 THEN +
   DO
      EQU LPPXB&EVAL(&NO+1) LPPXB&STR(&NO)+4% L(&BPCBEXLN)
      SET &NO = &NO+1
      GOTO PXBLOOP
   ENDO
LSYM LPPXB1:LPPXB999
NOTE ' THAT IS ALL OF THE LP BUFFER EXTENSIONS ' SPACE
START: +
WRITENR  DEPRESS ENTER WHEN READY TO CONTINUE
READ
START1: +
CLEAR
WRITE ******************************************************************
WRITE *  SELECT ONE OF THE FOLLOWING OPTIONS KEEPING IN MIND THAT      *
WRITE *  A FAIR AMOUNT OF OUTPUT COULD BE GENERATED.                   *
WRITE *                                                                *
WRITE *  LIST RPH FROM LP BUFFER ONLY -------------------> OPTION:  1  *
WRITE *  LIST RPH FROM LP BUFFER ONLY TO IPCSPRNT -------> OPTION:  2  *
WRITE *  LIST RPH FROM LP BUFFER EXTENSION ONLY ---------> OPTION:  3  *
WRITE *  LIST RPH FROM LP EXTENSION ONLY TO IPCSPRNT ----> OPTION:  4  *
WRITE *  LIST RPH FROM BOTH BUFFER AND EXTENSION --------> OPTION:  5  *
WRITE *  LIST RPH FROM BOTH BUFFER + EXT TO IPCSPRNT ----> OPTION:  6  *
WRITE *  EXIT WITH EQUATES FOR LPSTART, LPEND, + PXB'S---> OPTION:  0  *
WRITE *                                                                *
WRITE *    NOTE; OPTIONS 2, 4, AND 6 WILL CHANGE SETDEF TO PRINT       *
WRITE *                                                                *
WRITE ******************************************************************
WRITENR  OPTION:
READ &ANS
SET &OPTION = &ANS
IF &DATATYPE(&ANS) NE NUM THEN GOTO START1
IF &OPTION > 6 THEN GOTO START1
CLEAR
NOTE 'OPTION &OPTION WAS SELECTED' PAGE
IF &OPTION = 0 THEN GOTO FUNC2END
IF &OPTION = 2 × &OPTION = 4 × &OPTION = 6 THEN SETDEF NOTERM PRINT
IF &OPTION = 3 × &OPTION = 4 THEN GOTO OPTION3
NOTE '********************************************************' SPACE
NOTE '********  START OF RPH ANALYSIS FOR LP BUFFER  *********'
NOTE '********************************************************'
L LPSTART REMARK('START ADDRESS OF LP BUFFER POOL')
LOOP: +
IF &OPTION = 2 × &OPTION = 4 × &OPTION = 6 THEN +
WRITENR WORKING
CONTROL NOMSG
F X'016C' ADDR(RPH&NUM+4:END-1) NOVERIFY BDY(4) NOBREAK /* FIND NEXT RPH
SET &FINDCC = &LASTCC
CONTROL MSG
IF &FINDCC NE 0 THEN +
   DO
      IF &EXTENTFL = 1 THEN GOTO OPTION3A
      IF &OPTION = 1 × &OPTION = 2 THEN GOTO FUNC2END
      NOTE PAGE
      GOTO OPTION3
   ENDO
   SET &NUM=&NUM+1
EQU RPH&NUM X  ASID(&VTAMASID)
/************ START  CODE TO CHECK LOCKS  ***********************/
EVAL RPH&NUM L(2)               /* GET RPH ID */
SET &RPHID = &LASTCC            /* SHOULD BE 016C */
EVAL RPH&NUM-2C                 /* POINT TO LOCK STAT WORD */
SET &LOCKSTAT = &LASTCC         /* GET STAT */
IF &LOCKSTAT>0 && &LOCKSTAT <= 256 && &RPHID = 364 THEN DO
   NOTE 'LOCK(S) HELD.   ADDR LOCK WORD FOLLOWS. USE TO CALC RPH ADDR.'
   L RPH&NUM-2C LE(4)
   /* BREAKDOWN LOCK WORD */
   COMPARE VALUE(X'FF') WITH(ADDRESS(RPH&NUM-29)) MASK(X'01') LENGTH(1)
   IF &LASTCC = 0 THEN +
       NOTE' LEVEL 1 VDLOCK HELD.                        11111111 '
   COMPARE VALUE(X'FF') WITH(ADDRESS(RPH&NUM-29)) MASK(X'02') LENGTH(1)
   IF &LASTCC = 0 THEN +
       NOTE' LEVEL 2 VOCLOCK HELD.                       22222222 '
   COMPARE VALUE(X'FF') WITH(ADDRESS(RPH&NUM-29)) MASK(X'04') LENGTH(1)
   IF &LASTCC = 0 THEN +
       NOTE' LEVEL 3 RDTLOCK HELD.                       33333333 '
   COMPARE VALUE(X'FF') WITH(ADDRESS(RPH&NUM-29)) MASK(X'08') LENGTH(1)
   IF &LASTCC = 0 THEN +
       NOTE' LEVEL 4 OCLOCK OR FMCBLOCK HELD.            44444444 '
   COMPARE VALUE(X'FF') WITH(ADDRESS(RPH&NUM-29)) MASK(X'10') LENGTH(1)
   IF &LASTCC = 0 THEN +
       NOTE' LEVEL 5 DEBLOCK OR DNCBLOCK HELD.           55555555 '
   COMPARE VALUE(X'FF') WITH(ADDRESS(RPH&NUM-29)) MASK(X'20') LENGTH(1)
   IF &LASTCC = 0 THEN +
       NOTE ' LEVEL 6 SNTLOCK HELD.'                     66666666 '
   COMPARE VALUE(X'FF') WITH(ADDRESS(RPH&NUM-29)) MASK(X'40') LENGTH(1)
   IF &LASTCC = 0 THEN +
       NOTE' LEVEL 7 DAFLOCK HELD.                       77777777 '
   COMPARE VALUE(X'FF') WITH(ADDRESS(RPH&NUM-29)) MASK(X'80') LENGTH(1)
   IF &LASTCC = 0 THEN +
       NOTE' LEVEL 8 DVTLOCK OR CTLLOCK OR CKPLOCK HELD. 88888888 '
   ENDO
/************ END   NEW CODE TO CHECK LOCKS  ***********************/
L RPH&NUM L(32) REMARK('RPH&NUM  ... RELATED CRA IS AT -34')
EQU MAJORCB&NUM RPH&NUM+14% ASID(&VTAMASID)
EVAL RPH&NUM+15 L(3)
IF &LASTCC = 0 THEN +
NOTE 'THERE IS NO MAJOR CONTROL BLOCK FOR THIS RPH'
ELSE +
L MAJORCB&NUM LEN(4) ASID(&VTAMASID) REMARK('MAJOR CB &NUM')
EQU ELEM&NUM RPH&NUM+18% ASID(&VTAMASID)
EVAL RPH&NUM+19 L(3)
IF &LASTCC = 0 THEN +
NOTE 'THERE IS NO RPH ELEMENT'
ELSE +
L ELEM&NUM LEN(4) ASID(&VTAMASID) REMARK('RPH&NUM ELEMENT')
GOTO LOOP

OPTION3: +
GLOBAL HEXVALUE
NOTE '********************************************************' SAPCE
NOTE '*  START OF RPH ANALYSIS FOR LP BUFFER EXTENSION # &EXTNO '
NOTE '********************************************************'
IF &NO = 0 THEN +
   DO
      NOTE ' LP BUFFER HAS NO EXTENSIONS ' SPACE(2)
      GOTO FUNC2END
   ENDO
SET &EXTENTFL = 1

EQU RPH&NUM LPPXB&EXTNO+C% ASID(&VTAMASID)
EVAL LPPXB&EXTNO+D L(3)
SET &TEMPRPH = &LASTCC
SET &DECIMAL = &BPCBEXLN+&TEMPRPH
%HEX &DECIMAL
EQU END &HEXVALUE&P ASID(&VTAMASID)
L LPPXB&EXTNO+C -
   REMARK('START ADDRESS OF LP BUFFER POOL EXTENSION # &EXTNO') L(4)
GOTO LOOP

OPTION3A: +
IF &EXTNO = &NO THEN GOTO FUNC2END
SET &EXTNO = &EXTNO+1
GOTO OPTION3

FUNC2END: NOTE '*********** VTAM32 COMPLETED ************' SPACE
SETDEF DISPLAY(REMARK MACHINE SYMBOL REQUEST STORAGE)
DROPSYM END
DROPSYM RPH0
WRITE VTAM32 COMPLETED
