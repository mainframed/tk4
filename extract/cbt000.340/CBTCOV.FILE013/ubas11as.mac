         TITLE 'JES2 $LF COMMAND PROCESSOR'
***********************************************************************
*                                                                     *
*        ENVIRONMENT   MVS SP 1.3.3  LEVEL 8310                       *
*                      JES2 FOR SP 1.3.3                              *
*                                                                     *
*        THIS JES2 EXIT PROGRAM IS DESIGNED PROCESS THE $LF COMMAND   *
*        WHEN ENTERED.  THIS COMMAND IS IMPLEMENTED AS A TYPE 5       *
*        EXIT TO JES2, AND AS SUCH MUST INTERCEPT ONLY THE $LF        *
*        COMMAND WHEN ENCOUNTERED.                                    *
*                                                                     *
*                                                                     *
*        THE $LF COMMAND HAS THE FOLLOWING SYNTAX:                    *
*                                                                     *
*        $L F,J=JN-NN,R=DEST1-DEST2,Q=CLASSES,L/S                     *
*                                                                     *
*        WHERE:                                                       *
*                                                                     *
*        J=JN-NN       - LIST FORMS FOR THE SPECIFIED JOB(S)          *
*                        DEFAULTS TO ALL JOBS                         *
*        R=DEST1-DEST2 - LIST FORMS FOR THE SPECIFIED DESTINATION(S)  *
*                        DEFAULTS TO DESTINATION OF REQUESTOR         *
*        Q=CLASSES       LIST FORMS FOR THE SPECIFIED SYSOUT QUEUE(S) *
*                        UP TO 8 SYSOUT CLASSES MAY BE REQUESTED.     *
*                        DEFAULTS TO ALL SYSOUT CLASSES.              *
*        L/S             USE THE LONG OR SHORT COMMAND RESPONSE       *
*                        DEFAULTS TO SHORT 1 LINE RESPONSE.           *
*                                                                     *
*                                                                     *
*        WRITTEN BY:                                                  *
*                        JOHN V. HOOPER                               *
*                        NORTHWESTERN BANK                            *
*                        P.O. BOX 310                                 *
*                        NORTH WILKESBORO, N.C. 28674                 *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*        THE FOLLOWING RESPONSES WILL BE MADE BY THIS EXIT:           *
*                                                                     *
*        1)  THE HASP900 MESSAGE WILL BE ISSUED FOR EACH OUTPUT       *
*            GROUP WHICH MATCHES THE SELECTION CRITERIA.              *
*                                                                     *
*        $HASP900 JJJJJJJJ JOBNNNN RRRRRRRR Q=X F=FFFF NNNNNNNNN      *
*        $HASP900                  C=CCCC T=TTTT O=OOOO B=B HHHH      *
*                                                                     *
*            A)  JJJJJJJJ   - JOBNAME                                 *
*            B)  JOBNNNN    - JOB NUMBER                              *
*            C)  RRRRRRRR   - ROUTING (DESTINATION)                   *
*            D)  X          - SYSOUT QUEUE                            *
*            E)  FFFF       - SYSOUT FORM                             *
*            F)  NNNNNNNNNN - TOTAL NUMBER OF PRINT LINES FOR GROUP   *
*            G)  CCCC       - SYSOUT FCB                              *
*            H)  TTTT       - SYSOUT UCS                              *
*            I)  OOOO       - SYSOUT OVERLAY                          *
*            J)  B          - 3800 BURST INDICATOR (Y/N)              *
*            K)  HHHH       - HOLD INDICATOR (HOLD/    )              *
*                                                                     *
*                                                                     *
*        2)  THE HASP919 MESSAGE WILL BE ISSUED WHEN NO OUTPUT        *
*            GROUP MATCHES THE SELECTION CRITERIA.                    *
*                                                                     *
*        $HASP919 NO OUTPUT QUEUED                                    *
*                                                                     *
*                                                                     *
*        3)  THE HASP950 MESSAGE WILL BE ISSUED WHEN AN INVALID       *
*            OPERAND KEYWORD OR VALUE IS DETECTED.                    *
*                                                                     *
*        $HASP950 ......... INVALID OPERAND                           *
*                                                                     *
***********************************************************************
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*              M A C R O S   U S E D   I N   J E S E X I T 1          *
*                                                                     *
*        01)  $BUFFER      SYS1.HASPSRC                               *
*        02)  $CAT         SYS1.HASPSRC                               *
*        03)  $CMB         SYS1.HASPSRC                               *
*        04)  $COMWORK     SYS1.HASPSRC                               *
*        05)  $CWTO        SYS1.HASPSRC                               *
*        06)  $DEST        SYS1.HASPSRC                               *
*        07)  $ENTRY       SYS1.HASPSRC                               *
*        08)  $GETBUF      SYS1.HASPSRC                               *
*        09)  $FREEBUF     SYS1.HASPSRC                               *
*        10)  $HASPEQU     SYS1.HASPSRC                               *
*        11)  $HASPGBL     SYS1.HASPSRC                               *
*        12)  $HCT         SYS1.HASPSRC                               *
*        13)  $JCT         SYS1.HASPSRC                               *
*        14)  $JOE         SYS1.HASPSRC                               *
*        15)  $JOT         SYS1.HASPSRC                               *
*        16)  $JQE         SYS1.HASPSRC                               *
*        17)  $MIT         SYS1.HASPSRC                               *
*        18)  $MODEND      SYS1.HASPSRC                               *
*        19)  $MODULE      SYS1.HASPSRC                               *
*        20)  $PCE         SYS1.HASPSRC                               *
*        21)  $RAT         SYS1.HASPSRC                               *
*        22)  $RETURN      SYS1.HASPSRC                               *
*        23)  $SAVE        SYS1.HASPSRC                               *
*        24)  $STORE       SYS1.HASPSRC                               *
*        25)  IAZRESPA     SYS1.AMODGEN                               *
*                                                                     *
*                                                                     *
*              L I N K A G E    E D I T O R    I N F O                *
*                                                                     *
*        SIZE:       3K                                               *
*        ATTRIBUTES: REENTRANT, REUSEABLE, REFRESHABLE                *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
         PRINT OFF,NOGEN
         COPY  $HASPGBL
JES$LF   $MODULE SYSP=(GEN,GEN,DATA,GEN,GEN),                          X
               ENVIRON=JES2,                                           X
               TITLE='JES2 $LF COMMAND PROCESSOR',                     X
               $HASPEQU,           GENERATE HASP EQUATES               X
               RESPA,              GENERATE MVS  RESPA DSECT           X
               $PCE,               GENERATE HASP PCE DSECT             X
               $JQE,               GENERATE HASP JQE DSECT             X
               $BUFFER,            GENERATE HASP BUFFER DSECT          X
               $JCT,               GENERATE HASP JCT DSECT             X
               $CAT,               GENERATE HASP CAT DSECT             X
               $HCT,               GENERATE HASP HCT DSECT             X
               $JOE,               GENERATE HASP JOE DSECT             X
               $COMWORK,           GENERATE HASP COMWORK DSECT         X
               $MIT,               GENERATE HASP MIT DSECT             X
               $RAT,               GENERATE HASP RAT DSECT             X
               $JOT,               GENERATE HASP JOT DSECT             X
               $CMB                GENERATE HASP CMB DSECT
         TITLE 'JES2 $LF COMMAND PROCESSOR'
***********************************************************************
*                                                                     *
*        EXIT MAIN ENTRY POINT                                        *
*                                                                     *
***********************************************************************
         PRINT  ON,GEN,NODATA
$LF      $ENTRY BASE=R12
         SPACE 1
         $SAVE                     SAVE CALLER'S REGISTERS
         LR    R12,R15             LOAD BASE REGISTER
         EJECT
***********************************************************************
*                                                                     *
*        REGISTER CONTENTS ON ENTRY TO THIS EXIT ROUTINE:             *
*                                                                     *
*        R5       - ADDRESS OF THE CURRENT OPERAND                    *
*        R6       - INCREMENT VALUE OF 4                              *
*        R7       - ADDRESS OF THE LAST OPERAND                       *
*        R11      - ADDRESS OF THE HCT                                *
*        R13      - ADDRESS OF THE HASPCOMM PCE                       *
*        R14      - RETURN ADDRESS                                    *
*        R15      - ENTRY ADDRESS                                     *
*                                                                     *
***********************************************************************
         SPACE 3
***********************************************************************
*                                                                     *
*        SEE IF THIS IS A $LF COMMAND                                 *
*                                                                     *
***********************************************************************
         CLC   COMVERB(2),=C'LF'   ISF IF THIS IS THE $LF COMMAND
         BNE   EXIT0               NO, BRANCH TO COMMAND OK EXIT
         EJECT
***********************************************************************
*                                                                     *
*        $L F,J=JN-NN,R=DEST1-DEST2,Q=CLASS,L/S                       *
*            (IF L/S (LONG OR SHORT FORM) IS NOT SPECIFIED, THE       *
*            SHORT FORM WILL BE USED)                                 *
*                                                                     *
***********************************************************************
         SPACE 1
***********************************************************************
*                                                                     *
*        GET A JES2 BUFFER FOR REENTRANCY AND                         *
*        CLEAR THE COMMAND WORK AREA                                  *
*                                                                     *
***********************************************************************
         SPACE 1
         LA    R0,WORKLEN
         GETMAIN RU,LV=(R0)
         LR    R8,R1               SAVE WORK AREA ADDRESS
         USING $LFWORK,R8          SET ADDRESSABILITY TO WORK AREA
         XC    $LFWORK(WORKLEN),$LFWORK CLEAR WORK AREA
         SPACE 3
***********************************************************************
*                                                                     *
*        GET THE DEFAULT ROUTE CODE FOR $LF                           *
*                                                                     *
***********************************************************************
GETROUT  L     R1,COMJROUT         LOAD COMMAND ROUTE CODE
         TM    COMFLAG,CMBFLAGW    IS THIS A RJE
         BNO   GETROUTE            NO, BRANCH
         CLM   R1,B'1100',$OWNNODE IS THIS OUR NODE AND RJE
         BNE   GETROUTE            NO, BRANCH
         LH    R1,COMJRMT          LOAD THE REMOTE NUMBER
         BCTR  R1,0                MAKE NUMBER RELATIVE TO ZERO
         MH    R1,=Y(RATTLE)       MULTIPLY BY RAT LENGTH FOR OFFSET
         AL    R1,$RATABLE         POINT TO RAT ENTRY FOR THIS RJE
         L     R1,RATROUTE-RATDSECT(,R1) PICK UP PROPER ROUTINE
GETROUTE ST    R1,LOWROUT          SET DEFAULT LOW ROUTE CODE
         ST    R1,HIGHROUT         AND HIGH ROUTE CODE
***********************************************************************
*                                                                     *
*        GET THE DEFAULT JOB RANGE FOR $LF                            *
*                                                                     *
***********************************************************************
GETJRNG  SLR   R1,R1               SET DEFAULT LOW JOB NUMBER
         STH   R1,LOWJOB           SAVE LOW JOB NUMBER
         LH    R1,$NUMJBNO         SET DEFAULT HIGH JOB NUMBER
         STH   R1,HIGHJOB          SAVE HIGH JOB NUMBER
         MVI   JTYPE,C'*'          SET TO DISPLAY ALL JOB TYPES
***********************************************************************
*                                                                     *
*        SET THE DEFAULT JOB OUTPUT CLASS AND CMD FORMAT              *
*                                                                     *
***********************************************************************
         MVI   OUTCLASS,C'*'       SET TO ALL CLASSES
         MVI   FORMAT,C'S'         SET TO SHORT FORM OF COMMAND
         MVI   MISCSW,X'00'        ZERO THE MISCELLANEOUS SWITCHES
         MVI   BASSUM,C'N'
         EJECT
***********************************************************************
*                                                                     *
*        EXAMINE THE COMMAND OPERANDS                                 *
*                                                                     *
***********************************************************************
CLFNSPEC BXH   R5,R6,CLFOK         IF NO MORE EXIT
         L     R1,0(,R5)           POINT TO OPERAND
         CLC   0(2,R1),=C'J='      JOB(S) SELECTION?
         BE    CLFJ                YES, BRANCH
         CLC   0(2,R1),=C'R='      RJE(S) SELECTION?
         BE    CLFR                YES, BRANCH
         CLC   0(2,R1),=C'Q='      SYSOUT CLASS SELECTION?
         BE    CLFQ                YES, BRANCH
         CLC   0(2,R1),=C'L '      LONG FORM OF COMMAND DESIRED?
         BE    CLFORM              YES, BRANCH
         CLC   0(2,R1),=C'L,'      LONG FORM OF COMMAND DESIRED?
         BE    CLFORM              YES, BRANCH
         CLC   0(2,R1),=C'S '      SHORT FORM OF COMMAND DESIRED?
         BE    CLFORM              YES, BRANCH
         CLC   0(2,R1),=C'S,'      SHORT FORM OF COMMAND DESIRED?
         BE    CLFORM              YES, BRANCH
         CLC   0(4,R1),=C'SUM,'
         BE    SETSUM
         CLC   0(4,R1),=C'SUM '
         BNE   BADOPRND
SETSUM   EQU   *
         MVI   BASSUM,C'Y'
         B     CLFNSPEC
         EJECT
***********************************************************************
*                                                                     *
*        PROCESS THE JOB (J) RANGE SUBPARAMETER                       *
*                                                                     *
***********************************************************************
         SPACE 1
CLFJ     DS    0H
         L     R1,0(R5)            POINT TO OPERAND
         SLR   R15,R15             SET LENGTH TO ZERO
         LA    R1,3(R1)            INDEX PAST 'J=J' ETC
         LR    R14,R1              SAVE START OF OPERAND
         MVI   LOWJOB,X'FF'        SET START OF PROCESSING INDICATOR
CLFJ1    CLI   0(R1),C'-'          END OF FIRST OPERAND
         BE    CLFJ2               YES, BRANCH
         CLI   0(R1),C','          END OF ALL OPERANDS
         BE    CLFJ2               YES, BRANCH
         CLI   0(R1),C' '          END OF ALL OPERANDS
         BE    CLFJ2               YES, BRANCH
         CLI   0(R1),C'0'          NUMERIC OPERAND
         BL    BADOPRND            NO, ERROR
         CLI   0(R1),C'9'          NUMERIC OPERAND
         BH    BADOPRND            NO, ERROR
         LA    R1,1(,R1)           INCREMENT TO NEXT CHAR JOB NUMBER
         LA    R15,1(,R15)         ADD 1 TO OPERAND LENGTH
         B     CLFJ1               LOOP UNTIL DONE
CLFJ2    LTR   R15,R15             TEST LENGTH
         BZ    BADOPRND            ZERO, ERROR
         BCTR  R15,0               MAKE MACHINE LENGTH
         EX    R15,PACKJOB         PACK JOB NUMBER
         CVB   R15,$DOUBLE         CONVERT TO BINARY
         C     R15,=F'20000'       SEE IF NUMBER TOO LARGE
         BH    BADOPRND            YES, ERROR
         CLI   0(R1),C'-'          LOW JOB OF RANGE
         BE    CLFJ3               YES, BRANCH
         STH   R15,HIGHJOB         SAVE HIGH JOB NUMBER
         CLI   LOWJOB,X'FF'        IS THIS THE FIRST JOB NUMBER
         BNE   CLFJ4               NO, ALL DONE WITH NUMBER, BRANCH
         STH   R15,LOWJOB          SAVE LOW JOB NUMBER
         B     CLFJ4               ALL DONE WITH NUMBER, BRANCH
CLFJ3    CLI   LOWJOB,X'FF'        HAS LOW JOB NUMBER ALREADY BEEN PROC
         BNE   BADOPRND            YES, ERROR
         STH   R15,LOWJOB          SAVE LOW JOB NUMBER
         LA    R1,1(,R1)           INCREMENT PAST '-'
         LR    R14,R1              SAVE START OF OPERAND
         SLR   R15,R15             RESET LENGTH TO ZERO
         B     CLFJ1               LOOP FOR NEXT NUMBER OF RANGE
PACKJOB  PACK  $DOUBLE,0(0,R14)    PACK JOB NUMBER
         SPACE 1
CLFJ4    L     R15,0(,R5)          POINT TO OPERAND
         MVC   JTYPE,2(R15)        SET JOB TYPE
         CLI   2(R15),C'J'         JOB?
         BE    CLFNSPEC            YES, GET NEXT SPECIFICATION
         CLI   2(R15),C'S'         STC?
         BE    CLFNSPEC            YES, GET NEXT SPECIFICATION
         CLI   2(R15),C'T'         TSU?
         BNE   BADOPRND            NO, ERROR
         B     CLFNSPEC            GET NEXT SPECIFICATION
         EJECT
***********************************************************************
*                                                                     *
*        PROCESS THE ROUTE CODE (R) SUBPARAMETER                      *
*                                                                     *
*                                                                     *
*                                                                     *
*    RANGES ALLOWED  -    ONLY ASCENDING RANGES ARE PERMITTED         *
*    --------------                                                   *
*    NNNNNRNNNN (-RMMMM)                                              *
*    NNNN.RNNNN (-RMMMM)                                              *
*    NAME.RNNNN (-RMMMM)                                              *
*                      -  RANGE OF REMOTES AT A GIVEN NODE            *
*                        (NAME IS 8-BYTE EBCDIC FROM A DESTID CARD    *
*    NNNNN(-NMMMM)     -  RANGE OF ALL REMOTES/UNITS AT GIVEN NODE    *
*    UNNNN(-UMMMM)     -  RANGE OF UNITS AT THE LOCAL NODE ONLY       *
*    RNNNN(-RMMMM)     -  RANGE OF REMOTES AT THE LOCAL NODE ONLY     *
*    NAME1(-NAME2)     -  AS ANY ONE OF THE ABOVE, BUT NO OTHERS      *
*    LOCAL             -  ALL SPECIAL LOCAL                           *
*                                                                     *
***********************************************************************
         SPACE 1
CLFR     L     R3,0(,R5)           POINT TO OPERAND
         LA    R3,2(,R3)           INCREMENT PAST 'R='
         SLR   R1,R1               SET ZERO LENGTH
         LR    R4,R3               SAVE START OF OPERAND
         MVC   DEST1P1,=CL10' '    BLANK DEST1 PART1
         MVC   DEST1P2,=CL10' '    BLANK DEST1 PART2
         MVC   DEST2P1,=CL10' '    BLANK DEST2 PART1
CLFRLOOP CLI   0(R4),C'-'          END OF FIRST OPERAND
         BE    CLFR2               YES, BRANCH
         CLI   0(R4),C','          END OF LAST OPERAND
         BE    CLFR2               YES, BRANCH
         CLI   0(R4),C' '          END OF LAST OPERAND
         BE    CLFR2               YES, BRANCH
         CLI   0(R4),C'.'          TWO PART DESTINATION
         BE    CLFR1               YES, BRANCH
         LA    R4,1(,R4)           INCREMENT TO NEXT CHAR OF DEST
         LA    R1,1(,R1)           ADD 1 TO LENGTH
         B     CLFRLOOP            LOOP UNTIL DONE
CLFR1    OI    MISCSW,TWOPART      SET TWO PART DEST INDICATION
         CLI   DEST1P1,C' '        HAS FIRST ALREADY BEEN SPECIFIED
         BNE   BADOPRND            YES, ERROR
         B     CLFR2               GO PROCESS DEST FIELD
CLFR2    LTR   R1,R1               CHECK LENGTH OF DEST
         BZ    BADOPRND            ZERO, ERROR
         CH    R1,=H'10'           CHECK LENGTH OF DEST
         BH    BADOPRND            GREATER THAN 10, ERROR
         BCTR  R1,0                MAKE MACHINE LENGTH
         CLI   DEST1P1,C' '        HAS PART1 ALREADY BEEN SPECIFIED
         BNE   CLFR3               YES, BRANCH
         EX    R1,MDEST1P1         MOVE DEST1 PART1
         B     CLFR5               GET OUT
CLFR3    TM    MISCSW,TWOPART      SEE IF TWO PART DEST INDICATION
         BZ    CLFR4               NO, BRANCH
         CLI   DEST1P2,C' '        SEE IF PART2 ALREADY BEEN SPECIFIED
         BNE   CLFR4               YES, THIS IS THE SECOND DEST
         EX    R1,MDEST1P2         MOVE DEST1 PART2
         B     CLFR5               GET OUT
CLFR4    CLI   DEST2P1,C' '        SEE IF DEST2 ALREADY BEEN SPECIFIED
         BNE   BADOPRND            YES, ERROR
         EX    R1,MDEST2P1         MOVE DEST2 PART1
         B     CLFR5               GET OUT
MDEST1P1 MVC   DEST1P1(0),0(R3)    MOVE DEST1 PART1
MDEST1P2 MVC   DEST1P2(0),0(R3)    MOVE DEST1 PART2
MDEST2P1 MVC   DEST2P1(0),0(R3)    MOVE DEST2 PART1
CLFR5    CLI   0(R4),C'-'          SEE IF DESTINATION RANGE SPECIFIED
         BE    CLFR6               YES, BRANCH
         CLI   0(R4),C'.'          SEE IF TWO PART DEST SPECIFIED
         BE    CLFR6               YES, BRANCH
         B     CLFR10              GO CONVERT DEST TO ROUTE CODES
CLFR6    LA    R4,1(,R4)           INCREMENT PAST '-' OR '.'
         LR    R3,R4               SAVE START ADDRESS
         SLR   R1,R1               RESET LENGTH TO ZERO
         B     CLFRLOOP            LOOP FOR NEXT DESTINATION
CLFR10   DS    0H
         MVC   COMDWORK(2),COMJNOD SET DEFAULT NODE
         $DEST DEST1P1,COMDWORK,LEN=10 CONVERT DEST1 PART1
         BZ    BADOPRND            BAD DEST, ERROR
         ST    R1,LOWROUT          SAVE ROUTE CODE
         CLI   DEST1P2,C' '        CHECK IF TWO PART DEST
         BE    CLFR12              NO, BRANCH
CLFR11   CLM   R1,B'0011',$ZEROES  SEE IF NODAL DESTINATION ONLY
         BNE   BADOPRND            NO, ERROR
         CLM   R1,B'1100',$ZEROES  SEE IF NODE NUMBER SET
         BE    BADOPRND            NO, ERROR
         ST    R1,COMDWORK         SET DEFAULT NODE FOR SECOND PART
         $DEST DEST1P2,COMDWORK,LEN=10 CONVERT DEST1 PART1
         BZ    BADOPRND            BAD DEST, ERROR
         ST    R1,LOWROUT          SAVE ROUTE CODE
         CLM   R1,B'1100',COMDWORK MAKE SURE NODE DEFAULTED
         BNE   BADOPRND            NO, ERROR
CLFR12   MVC   HIGHROUT,LOWROUT    SET DEST RANGE TO EQUAL VALUES
         CLI   DEST2P1,C' '        WAS DEST RANGE SPECIFIED
         BE    CLFR13              NO, BRANCH
         $DEST DEST2P1,COMDWORK,LEN=10 CONVERT DEST2 PART1
         BZ    BADOPRND            BAD DEST, ERROR
         ST    R1,HIGHROUT         SAVE ROUTE CODE
CLFR13   CLC   HIGHROUT,LOWROUT    CHECK FOR ASCENDING RANGE
         BL    BADOPRND            NO, ERROR
         B     CLFNSPEC            LOOP TO NEXT SPECIFICATION
         EJECT
***********************************************************************
*                                                                     *
*        PROCESS THE SYSOUT CLASS (Q) SUBPARAMETER                    *
*                                                                     *
***********************************************************************
         SPACE 1
CLFQ     L     R1,0(,R5)           POINT TO OPERAND
         LA    R1,2(,R1)           INCREMENT PAST 'Q='
         LR    R14,R1              SAVE CLASS STRING ADDRESS
         SLR   R15,R15             SET LENGTH TO ZERO
CLFQ1    CLI   0(R1),C' '          END OF CLASS STRING
         BE    CLFQ2               YES, BRANCH
         CLI   0(R1),C','          END OF CLASS STRING
         BE    CLFQ2               YES, BRANCH
         LA    R1,1(,R1)           INCREMENT TO NEXT CHAR OF CLASS
         LA    R15,1(,R15)         ADD 1 TO LENGTH
         B     CLFQ1               LOOP
CLFQ2    STC   R15,NUMCLASS        SAVE LENGTH
         LTR   R15,R15             TEST LENGTH
         BZ    BADOPRND            ZERO, ERROR
         CH    R15,=H'8'           SEE IF GT 8
         BH    BADOPRND            GREATER THAN 8, ERROR
         BCTR  R15,0               MAKE MACHINE LENGTH
         EX    R15,MOVECLAS        SAVE CLASS STRING
         EX    R15,TRTCLASS        TEST CLASSES
         BNZ   BADOPRND            NOT VALID, ERROR
         B     CLFNSPEC            GET NEXT SPECIFICATION
MOVECLAS MVC   OUTCLASS(0),0(R14)  MOVE SYSOUT CLASSES TO SAVE
TRTCLASS TRT   OUTCLASS(0),CLASSTBL TEST SYSOUT CLASSES
CLASSTBL DC    256X'01'            VALID SYSOUT CLASSES
         ORG   CLASSTBL+C'A'
         DC    9X'00'              CLASS A-I
         ORG   CLASSTBL+C'J'
         DC    9X'00'              CLASS J-R
         ORG   CLASSTBL+C'S'
         DC    8X'00'              CLASS S-Z
         ORG   CLASSTBL+C'0'
         DC    10X'00'             CLASS 0-9
         ORG
         EJECT
***********************************************************************
*                                                                     *
*        PROCESS THE COMMAND FORMAT (S/L) SUBPARAMETER                *
*                                                                     *
***********************************************************************
         SPACE 1
CLFORM   L     R15,0(,R5)          POINT TO OPERAND
         MVC   FORMAT,3(R15)       SAVE COMMAND FORMAT
         B     CLFNSPEC            GET NEXT SPECIFICATION
         EJECT
***********************************************************************
*                                                                     *
*        GET CHARACTERISTICS JOE AND PREPARE TO SCAN                  *
*                                                                     *
***********************************************************************
         SPACE 1
CLFOK    L     R7,$JOTABLE         GET ADDRESS OF JOT
         USING JOTDSECT,R7         SET ADDRESSABILITY TO JOT
         LA    R4,JOTCHRQ-(JOENEXT-JOEDSECT) QUEUE HEAD
         USING JOEDSECT,R4         SET ADDRESSABILITY TO JOE
         ST    R4,JOEADDR          SAVE STARTING POINT
         MVC   MESSAGE(90),INITRESP INITIALIZE RESPONSE BUFFER
         SPACE 1
CHARJOES EQU   *
         L     R4,JOEADDR          GET PREV CHARACTERISTICS JOE ADDR
         L     R4,JOENEXT          POINT TO NEXT CHARACTERISTICS JOE
         N     R4,$ZEROFFF         IS THIS THE END OF THE JOE CHAIN
         BZ    ENDJOES             YES, EXIT
         ALR   R4,R7               CALCULATE ACTUAL JOE ADDRESS
         ST    R4,JOEADDR          SAVE NEW CHARACTERISTICS JOE ADDR
         MVC   ZWIFORM,JOEFORM
         MVC   OFORM,JOEFORM       MOVE FORM TO MESSAGE
         MVC   OFCB,JOEFCB         MOVE FCB  TO MESSAGE
         MVC   OUCS,JOEUCS         MOVE UCS  TO MESSAGE
         MVC   OOVLY,JOEFLASH      MOVE OVLY TO MESSAGE
         EJECT
***********************************************************************
*                                                                     *
*        SCAN WORK JOES AND JQES FOR MATCH ON DEST AND/OR JOB         *
*                                                                     *
***********************************************************************
         SPACE 1
         LA    R4,JOEWKPTR         GET START OF QUEUE
         SL    R4,=A(JOECHNXT-JOEDSECT) BACKUP FOR START OF LOOP
WORKJOES L     R4,JOECHNXT         GET OFFSET OF NEXT WORK JOE
         N     R4,$ZEROFFF         IS THIS THE END OF THE WORK JOES
         BZ    CHARJOES            YES, BRANCH
         ALR   R4,R7               COMPUTE WORK JOE ADDRESS
***********************************************************************
*        CHECK THE DESTINATION FOR OUR VALUES                         *
***********************************************************************
         CLC   JOEROUT,LOWROUT     SEE IF LT OUR LOWER ROUTE CODE
         BL    WORKJOES            NO, BRANCH
         CLC   JOEROUT,HIGHROUT    SEE IF GT OUR HIGHER ROUTE CODE
         BH    WORKJOES            YES, BRANCH
***********************************************************************
*        CHECK THE SYSOUT CLASS FOR OUR VALUE                         *
***********************************************************************
CKCLASS  CLI   OUTCLASS,C'*'       DO WE WANT ALL SYSOUT CLASSES?
         BE    GOODCLAS            YES, BRANCH
         SLR   R1,R1               CLEAR REG FOR IC
         IC    R1,NUMCLASS         LOAD NUMBER OF OUTPUT CLASSES
         LA    R15,OUTCLASS        LOAD ADDRESS OF CLASS TABLE
CKCLASS1 CLC   JOECURCL,0(R15)     IS THIS THE CORRECT SYSOUT CLASS
         BE    GOODCLAS            YES, BRANCH
         LA    R15,1(,R15)         INCREMENT TO NEXT CLASS ENTRY
         BCT   R1,CKCLASS1         LOOP
         B     WORKJOES            CLASS MISMATCH, BYPASS THIS JOE
         SPACE 1
GOODCLAS L     R3,JOEJQE           GET JQE OFFSET
         N     R3,$ZEROFFF         CLEAR THE HI-ORDER BYTE
         AL    R3,$JOBQPTR         CONVERT THE OFFSET TO ADDRESS
         USING JQE,R3              SET ADDRESSABILITY TO JQE
***********************************************************************
*        CHECK THE JOB NUMBER FOR OUR VALUES                          *
***********************************************************************
         CLI   JTYPE,C'*'          WANT ALL JOBS?
         BE    GOODJOB             YES, BRANCH
CKBATCH  CLI   JTYPE,C'J'          WANT BATCH JOBS?
         BNE   CKSTC               NO, BRANCH
         TM    JQEFLAG3,QUEJOB     IS THIS A BATCH JOB
         BZ    GOODTYPE            YES, BRANCH
         B     WORKJOES            NO, IGNORE THIS JOE
CKSTC    CLI   JTYPE,C'S'          WANT STARTED TASKS?
         BNE   CKTSU               NO, BRANCH
         TM    JQEFLAG3,QUESTC     IS THIS A STARTED TASK
         BO    GOODTYPE            YES, BRANCH
         B     WORKJOES            NO, IGNORE THIS JOE
CKTSU    CLI   JTYPE,C'T'          WANT TSO USERS?
         BNE   WORKJOES            NO, UNKNOWN REQUEST, GET OUT
         TM    JQEFLAG3,QUETSU     IS THIS A TSO USER
         BNO   WORKJOES            NO, IGNORE THIS JOE
GOODTYPE CLC   JQEJOBNO,LOWJOB     SEE IF LT OUR LOWER JOB NUMBER
         BL    WORKJOES            NO, IGNORE THIS JOE
         CLC   JQEJOBNO,HIGHJOB    SEE IF GT OUR HIGHER JOB NUMBER
         BH    WORKJOES            YES, IGNORE THIS JOE
GOODJOB  EQU   *
         CLI   BASSUM,C'Y'
         BNE   NOSUM3
         CLC   LSTCLASS,JOECURCL
         BNE   BASBAL
         CLC   LSTFORM,ZWIFORM
         BE    SUMADD
BASBAL   BAL   R14,SUMOUT
         MVC   BASCLASS,JOECURCL
         MVC   BASFORM,ZWIFORM
         MVC   LSTCLASS,JOECURCL
         MVC   LSTFORM,ZWIFORM
SUMADD   EQU   *
         L     R1,BASJOBNO
         LA    R1,1(R1)
         ST    R1,BASJOBNO
         L     R1,BASLINES
         A     R1,JOERECCT
         ST    R1,BASLINES
         B     WORKJOES
NOSUM3   EQU   *
         MVC   OJOBNM,JQEJNAME     MOVE JOBNAME TO MESSAGE
         LH    R0,JQEJOBNO         LOAD JOB NUMBER
         CVD   R0,$DOUBLE          CONVERT JOB NUMBER TO PACKED
         MVC   OJOBNO+2(6),=X'402020202120' SET EDIT MASK
         ED    OJOBNO+2(6),$DOUBLE+5  UNPACK JOB NUMBER TO MESSAGE
         MVC   OJOBNO+1(3),=C'JOB' ASSUME BATCH JOB
         TM    JQEFLAG3,QUEJOB     IS THIS A BATCH JOB
         BZ    GOODJNO             YES, BRANCH
         MVC   OJOBNO+1(3),=C'STC' ASSUME STARTED TASK
         TM    JQEFLAG3,QUESTC     IS THIS A STARTED TASK
         BO    GOODJNO             YES, BRANCH
         MVC   OJOBNO+1(3),=C'TSU' ASSUME TSO LOGON
         TM    JQEFLAG3,QUETSU     IS THIS A TSO LOGON
         BO    GOODJNO             YES, BRANCH
         MVC   OJOBNO+1(3),=C'XMT' ASSUME TRANSMITTER
GOODJNO  DS    0H
***********************************************************************
*        SET THE BUSY INDICATOR IN THE MESSAGE                        *
***********************************************************************
         MVI   OBUSYIND,C' '       BLANK THE BUSY INDICATOR
         TM    JOEFLAG,$JOEBUSY    SEE IF BEING PRINTED/PUNCHED
         BZ    NOTBUSY             NO, BRANCH
         MVI   OBUSYIND,C'*'       SET THE BUSY INDICATOR
NOTBUSY  DS    0H
***********************************************************************
*        MOVE THE SYSOUT CLASS TO THE MESSAGE                         *
***********************************************************************
         MVC   OCLASS,JOECURCL     MOVE SYSOUT CLASS TO MESSAGE
***********************************************************************
*        SET THE HOLD INDICATOR IN THE MESSAGE                        *
***********************************************************************
         MVC   OHOLDIND,=C'    '   RESET HOLD INDICATOR
         TM    JQEFLAGS,QUEHOLDA+QUEHOLD1 IS THIS JOB HELD
         BZ    HOLDSET             NO, BRANCH
         MVC   OHOLDIND,=C'HOLD'   SET HOLD INDICATOR
         B     NSELSET             NO, BRANCH
HOLDSET  DS    0H
***********************************************************************
*        SET THE NON-SELECTABLE INDICATOR IN THE MESSAGE              *
***********************************************************************
         TM    JOEFLAG2,$JOESLEC   IS THIS JOE SELECTABLE
         BZ    NSELSET             YES, BRANCH
         MVC   OHOLDIND,=C'NSEL'   SET NON-SELECTABLE INDICATOR
NSELSET  DS    0H
***********************************************************************
*        SET THE DESTINATION VALUE IN THE MESSAGE                     *
***********************************************************************
CNVDEST  LA    R1,COMEWORK         POINT TO OUTPUT AREA
         MVC   0(12,R1),=CL12' R'  ASSUME ' RXXXX      '
         SLR   R0,R0               CLEAR REG FOR ICM
         CLC   $OWNNODE,JOEROUT    IS THIS OUR NODE
         BE    CNVDEST1            YES, NO NODE NUMBERS
         MVI   1(R1),C'N'          ASSUME NODE SPECIFICATION
         ICM   R0,B'0011',JOEROUT  LOAD NODE NUMBER
         BNZ   CNVDEST2            NODE NUMBER NOT ZERO, CONVERT IT
         MVI   1(R1),C'U'          ELSE MUST BE SPECIAL UNIT
CNVDEST1 ICM   R0,B'0011',JOEROUT+2 LOAD REMOTE NUMBER
         BNZ   CNVDEST2            REMOTE NUMBER NOT ZERO, CONVERT IT
         MVC   1(5,R1),=C'LOCAL'   ZERO, SET TO LOCAL
         B     CNVDEST6            AND GET OUT
         SPACE 1
CNVDEST2 CVD   R0,$DOUBLE          CONVERT NODE/RMT NUMBER TO PACKED
         UNPK  2(5,R1),$DOUBLE     UNPACK NODE/RMT NUMBER
         OI    6(R1),X'F0'         MAKE NODE/RMT NUMBER PRINTABLE
CNVDEST3 CLI   2(R1),C'0'          IS HIGH BYTE ZERO
         BNE   CNVDEST4            NO, GO SEE IF DONE
         MVC   2(5,R1),3(R1)       SHIFT OFF HIGH ORDER ZERO BYTE
         B     CNVDEST3            LOOP UNTIL LEADING ZEROS GONE
CNVDEST4 CLI   1(R1),C'N'          SEE IF NODE SPECIFIED
         BNE   CNVDEST6            NO, DONE
         ICM   R0,B'0011',JOEROUT+2 LOAD REMOTE NUMBER
         BZ    CNVDEST6            ZERO, EXIT
CNVDEST5 LA    R1,1(,R1)           INCREMENT TO NEXT CHARACTER
         CLI   1(R1),C' '          END OF NODE NUMBER?
         BNE   CNVDEST5            NO, CONTINUE
         MVI   1(R1),C'R'          SETUP FOR REMOTE NUMBER
         B     CNVDEST2            GO CONVERT REMOTE NUMBER
         SPACE 1
CNVDEST6 MVC   ODEST,COMEWORK      MOVE CONVERTED DEST TO MESSAGE
         EJECT
***********************************************************************
*        SET THE OUTPUT LINE COUNT IN THE MESSAGE                     *
***********************************************************************
         L     R1,JOERECCT         LOAD THE SYSOUT RECORD COUNT
         CVD   R1,$DOUBLE          CONVERT TO PACKED
         MVC   OQTY,=X'40202020202020202120' SET EDIT MASK
         ED    OQTY,$DOUBLE+3      EDIT SYSOUT RECORD COUNT TO MESSAGE
***********************************************************************
*                                                                     *
*        WRITE THE MESSAGE FOR THIS JOE                               *
*                                                                     *
***********************************************************************
         LA    R0,46               WRITE FIRST MESSAGE
         LA    R1,MSG1             LOAD ADDRESS OF MESSAGE
         $CWTO L=(R0),MSG=(R1),MSGID=900  DISPLAY MESSAGE
         CLI   FORMAT,C'S'         IS THIS THE SHORT FORM
         BE    SETFND              YES, BRANCH
         LA    R0,46               SET TO LONG FORM LENGTH
         LA    R1,MSG2             LOAD ADDRESS OF MESSAGE
         $CWTO L=(R0),MSG=(R1),MSGID=900  DISPLAY MESSAGE
SETFND   OI    MISCSW,MATCH        TURN ON MATCH FOUND SWITCH
         B     WORKJOES            GO GET ANOTHER WORK JOE
SUMOUT   EQU   *
         ST    R14,BASSAVE
         CLI   BASSUM,C'Y'
         BNER  R14
         L     R1,BASJOBNO
         LTR   R1,R1
         BZR   R14
         MVC   MESSAGE(60),SUMMSG
         MVC   SCLASS,BASCLASS
         MVC   SFORM,BASFORM
         L     R1,BASLINES
         CVD   R1,$DOUBLE
         MVC   SLINENO,=X'40202020202020202120'
         ED    SLINENO,$DOUBLE+3
         L     R1,BASJOBNO
         CVD   R1,$DOUBLE
         UNPK  SJOBNO(3),$DOUBLE
         OI    SJOBNO+2,X'F0'
         LA    R0,60
         LA    R1,MSG1
         $CWTO L=(R0),MSG=(R1),MSGID=901
         OI    MISCSW,MATCH
         XC    BASJOBNO(4),BASJOBNO
         XC    BASLINES(4),BASLINES
         L     R14,BASSAVE
         BR    R14
         EJECT
***********************************************************************
*                                                                     *
*        END OF ALL JOES.  IF NO MESSAGES WERE ISSUED, ISSUE          *
*        A MESSAGE THAT NO OUTPUT WAS QUEUED.                         *
*                                                                     *
***********************************************************************
ENDJOES  EQU   *
         L     R1,BASJOBNO
         LTR   R1,R1
         BZ    NOSUM9
         BAL   R14,SUMOUT
NOSUM9   TM    MISCSW,MATCH        WAS A MATCH FOUND
         BZ    NOUTPUT             NO, BRANCH
         B     EXIT8               GET OUT
NOUTPUT  $CWTO MSG='NO OUTPUT QUEUED',MSGID=919  ISSUE MESSAGE
         B     EXIT8               GET OUT
         SPACE 1
***********************************************************************
*                                                                     *
*        INVALID $LF OPERAND                                          *
*                                                                     *
***********************************************************************
         SPACE 1
BADOPRND L     R1,0(0,R5)          POINT TO INVALID OPERAND
         MVC   COMMAND(9),0(R1)    MOVE 9 CHARACTERS OF OPERAND TO MSG
         MVC   COMMAND+9(16),=C' INVALID OPERAND' SET ERROR MSG
         LA    R0,25               SET MESSAGE LENGTH
         $CWTO L=(R0),MSGID=950    WRITE ERROR MESSAGE
         B     EXIT8               GET OUT
         EJECT
***********************************************************************
*                                                                     *
*                    E X I T     R O U T I N E S                      *
*                                                                     *
*        RC = 00 - CONTINUE USING ANY ADDITIONAL EXITS                *
*        RC = 04 - CONTINUE WITHOUT USING ANY ADDITIONAL EXITS        *
*        RC = 08 - TERMINATE WITHOUT ANY MESSAGE                      *
*        RC = 12 - TERMINATE ISSUING THE "OK" MESSAGE                 *
*        RC = 16 - TERMINATE USING A USER SUPPLIED MESSAGE            *
*                                                                     *
***********************************************************************
EXIT0    DS    0H
         LA    R15,0               SET RETURN CODE TO 0
         $RETURN RC=(R15)          RETURN TO JES2
EXIT8    DS    0H
         LA    R0,WORKLEN          FREE THE WORK AREA
         FREEMAIN RU,LV=(R0),A=(R8)
         LA    R15,8               SET RETURN CODE TO 8
         $RETURN RC=(R15)          RETURN TO JES2
         EJECT
INITRESP DS    0CL92
         DC    CL46'JJJJJJJJ JOBNNNN RRRRRRRR Q=X F=FFFF NNNNNNNNN'
         DC    CL46'                 C=CCCC T=TTTT O=OOOO HHHH    '
SUMMSG   DC    CL60'Q=X F=FFFF JOBS=NNN LINES=123456789'
         LTORG
         EJECT
         $MODEND
         EJECT
***********************************************************************
*                                                                     *
*        PROGRAM WORK AREAS                                           *
*                                                                     *
***********************************************************************
         SPACE 3
$LFWORK  DSECT                     COMMAND WORK AREA
JOEADDR  DS    F                   REGISTER SAVE AREA
JTYPE    DS    C                   JOB TYPE (* OR JQEFLAG VALUE)
FORMAT   DS    C                   DISPLAY FORMAT (S / L)
MISCSW   DS    X                   MISCELLANEOUS SWITCHES
TWOPART  EQU   X'80'               TWO PART DESTINATION SPECIFIED
MATCH    EQU   X'40'               MATCH FOR OUTPUT FOUND
NUMCLASS DS    X                   NUMBER OF OUTPUT CLASSES FOLLOWING
OUTCLASS DS    CL8                 JOB OUTPUT CLASS / *
LOWJOB   DS    H                   LOW JOB NUMBER FOR SEARCH
HIGHJOB  DS    H                   HIGH JOB NUMBER FOR SEARCH
LOWROUT  DS    F                   LOW ROUTE CODE FOR SEARCH
HIGHROUT DS    F                   HIGH ROUTE CODE FOR SEARCH
BASSUM   DS    C                   INDICATOR FOR SUM-FORMAT
BASJOBNO DS    F                   NO OF JOBS IN CLASS
BASLINES DS    F                   NO OF LINES IN LINE
BASSAVE  DS    F                   SAVE FOR REG14 IN SUMOUT
BASCLASS DS    C                   CURRENT CLASS
BASFORM  DS    CL4                 CURRENT FORM
LSTFORM  DS    CL4                 LAST FORM
LSTCLASS DS    C                   LAST CLASS
ZWIFORM  DS    CL4                 TEMP. FORM NO.
DEST1P1  DS    CL10                BEGINNING DEST PART 1
DEST1P2  DS    CL10                BEGINNING DEST PART 2
DEST2P1  DS    CL10                ENDING DEST PART 1
MESSAGE  DS    CL100               MESSAGE WORK AREA
WORKLEN  EQU   *-$LFWORK           LENGTH OF WORK AREA
*
MSG1     EQU   MESSAGE             FIRST MESSAGE
OJOBNM   EQU   MESSAGE,8           OUTPUT JOBNAME
OBUSYIND EQU   MESSAGE+8,1         OUTPUT BUSY (PRINTING/PUNCHING)
OJOBNO   EQU   MESSAGE+8,8         OUTPUT JOB NUMBER
ODEST    EQU   MESSAGE+16,10       OUTPUT DESTINATION
OCLASS   EQU   MESSAGE+28,1        OUTPUT CLASS
OFORM    EQU   MESSAGE+32,4        OUTPUT FORM
OQTY     EQU   MESSAGE+36,10       OUTPUT NUMBER OF LINES/CARDS
MSG2     EQU   MESSAGE+46          FIRST MESSAGE
OFCB     EQU   MESSAGE+65,4        OUTPUT FCB
OUCS     EQU   MESSAGE+72,4        OUTPUT UCS
OOVLY    EQU   MESSAGE+79,4        OUTPUT OVERLAY
OHOLDIND EQU   MESSAGE+84,4        OUTPUT HOLD INDICATOR
SMSG     EQU   MESSAGE
SCLASS   EQU   MESSAGE+2,1
SFORM    EQU   MESSAGE+6,4
SJOBNO   EQU   MESSAGE+16,3
SLINENO  EQU   MESSAGE+26,10
         END
