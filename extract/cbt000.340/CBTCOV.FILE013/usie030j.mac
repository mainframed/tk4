****************************************************************
*  NOTE: CHANGE ALL '$$' TO './' AND THEN SUBMIT THE JOB. ==#  *
**********************************************************  #  *
//   EXEC PGM=IEBUPDTE,PARM=NEW                             #
//SYSPRINT  DD SYSOUT=A                                     #
//SYSUT2    DD DSN=SYS1.CMDPROC,DISP=SHR                    #
//SYSIN     DD *                                            #
$$  ADD LIST=ALL,NAME=PDS                <==================#
PROC  1 LIBRARY TRACE(NO)
/*********************************************************************/
/*                                                                   */
/*    CLIST PDS WRITTEN BY SIEMENS AG, MUENCHEN, DEPT DV VGR TPU1    */
/*                                                                   */
/*    THESE UPDATES ARE TO EITHER THE SYS1.CMDPROC  OR TO THE        */
/*     USERS OWN CLIST DATASET AND CONTAIN THE PRIMARY CLIST 'PDS'   */
/*     AND ALL SECONDARY CLISTS USED BY PDS.                         */
/*                                                                   */
/*     FOR EXPLANATION OF PDS WE RECOMMEND LOADING BOTH THE CLIST    */
/*      MEMBERS AND THE HELP MEMBERS AND THEN ISSUING THE COMMAND    */
/*           'HELP PDS'                                              */
/*      THEN 'PDS ''LIBRARY NAME'' '  FOLLOWED BY 'HELP'             */
/*                                                                   */
/*    EXTERNAL INTERFACES: PROGRAM TPUCLEAR, STANDARD UTILITIES,     */
/*                         AND TSO DATA SET UTILITIES.               */
/*                                                                   */
/*********************************************************************/
        GLOBAL &LIB &TYPE &LIBX
        CONTROL PROMPT MAIN
        IF &TRACE = LIST THEN CONTROL LIST
        IF &TRACE = SYMLIST THEN CONTROL SYMLIST
        IF &TRACE = CONLIST THEN CONTROL CONLIST
        PDSPDS  &LIBRARY
REPEAT: DO
          ATTN EXIT
          WRITENR PDS
          READ    /* INTO &SYSDVAL */
          ATTN GOTO REPEAT
          READDVAL CMND OP1 OP2
          SET     CMND = &STR(&CMND   )
          IF &SUBSTR(1:1,&CMND) = &STR( ) THEN +
            TPUCLEAR
          ELSE IF &SUBSTR(1:1,&CMND) = A    THEN +
            PDSALI  &OP1 &OP2
          ELSE IF &SUBSTR(1:3,&CMND) = COM  OR +
                  &SUBSTR(1:3,&CMND) = CON  THEN +
            PDSCOM
          ELSE IF &SUBSTR(1:2,&CMND) = CO   THEN +
            PDSCOP  (&OP2) &OP1
          ELSE IF &SUBSTR(1:3,&CMND) = DCB  THEN +
            PDSDCB
          ELSE IF &SUBSTR(1:3,&CMND) = DEL  THEN +
            PDSDEL  &OP1
          ELSE IF &SUBSTR(1:1,&CMND) = D    THEN +
            PDSDIS  &OP1
          ELSE IF &SUBSTR(1:3,&CMND) = END  THEN EXIT
          ELSE IF &SUBSTR(1:1,&CMND) = E    THEN DO
            IF &STR(&OP2) ^= &STR() THEN  SET  TYPE = &OP2
            PDSEDI  &OP1 &TYPE
          END
          ELSE IF &SUBSTR(1:1,&CMND) = H    THEN +
            PDSHELP (&OP1) (&OP2)
          ELSE IF &SUBSTR(1:1,&CMND) = L    THEN +
            PDSLIS
          ELSE IF &SUBSTR(1:2,&CMND) = MO   THEN +
            PDSMOV  (&OP2) &OP1
          ELSE IF &SUBSTR(1:3,&CMND) = PDS  THEN DO
            IF &SUBSTR(5,&SYSDVAL) = ' THEN +
              PDSPDS  '&OP1'
            ELSE +
              PDSPDS  &OP1
          END
          ELSE IF &SUBSTR(1:1,&CMND) = P    THEN +
            PDSPRI  &OP1 TRACE(&TRACE)
          ELSE IF &SUBSTR(1:1,&CMND) = R    THEN +
            PDSREN  &OP1 &OP2
          ELSE IF &SUBSTR(1:3,&CMND) = SCR  THEN +
            PDSDEL  &OP1
          ELSE IF &SUBSTR(1:3,&CMND) = SPF  THEN +
            SPF
          ELSE IF &SUBSTR(1:3,&CMND) = TSO  THEN +
            TERMIN  END
          ELSE +
            WRITE INVALID COMMAND
          GOTO    REPEAT
        END
$$  ADD LIST=ALL,NAME=PDSALI
PROC  2 OLDNAME ALIAS
        GLOBAL &LIB
        RENAME '&LIB(&OLDNAME)' '&LIB(&ALIAS)' ALIAS
$$  ADD LIST=ALL,NAME=PDSCOM
PROC  0
        GLOBAL &LIB
        COMPRESS '&LIB'
$$  ADD LIST=ALL,NAME=PDSCOP
PROC  2 LIBRARY MEMBER
        GLOBAL &LIB &TYPE &LIBX
        CONTROL NOFLUSH
        IF  &STR(&LIBRARY) ^= &STR(()) AND +
          '&SUBSTR(1,&LIBRARY)' = '(' THEN +
          SET  LIBX = &SUBSTR(2:&LENGTH(&STR(&LIBRARY))-1,&LIBRARY)
AGAIN:  IF  &STR(&LIBX) = &STR() THEN DO
PROMPT:   WRITE SPECIFY TO OR FROM LIBRARY
          READ    LIBX
          GOTO    AGAIN
        END
        IF  &SUBSTR(1:2,&LIBX) = TO THEN DO
          SET  FROMTO = TO
          SET  LIBX = &SUBSTR(4:&LENGTH(&LIBX)-1,&LIBX)
        END
        ELSE  DO
          IF  &SUBSTR(1:4,&LIBX) = FROM THEN DO
            SET  FROMTO = FROM
            SET  LIBX = &SUBSTR(6:&LENGTH(&LIBX)-1,&LIBX)
          END
          ELSE    GOTO PROMPT
        END
        IF  &SUBSTR(1,&LIBX) = ' THEN +
          SET  LIB2 = &SUBSTR(2:&LENGTH(&LIBX)-1,&LIBX)
        ELSE  SET  LIB2 = &STR(&SYSPREF..&LIBX)
        IF   &FROMTO = TO   THEN   SET  LIB1 = &LIB
        ELSE  DO
          SET  LIB1 = &LIB2
          SET  LIB2 = &LIB
        END
        SET  LIBX = &STR(&FROMTO(&LIBX))
        COPY    '&LIB1(&MEMBER)' '&LIB2(&MEMBER)'
$$  ADD LIST=ALL,NAME=PDSDCB
PROC  0
        GLOBAL &LIB
        LISTDS '&LIB'
$$  ADD LIST=ALL,NAME=PDSDEL
PROC  1 MEMBER
        GLOBAL &LIB
        DELETE '&LIB(&MEMBER)'
$$  ADD LIST=ALL,NAME=PDSDIS
PROC  1 MEMBER
        GLOBAL &LIB
        LIST   '&LIB(&MEMBER)'
$$  ADD LIST=ALL,NAME=PDSEDI
PROC  2 MEMBER TYPE
        GLOBAL &LIB
        CONTROL NOFLUSH PROMPT
        EDIT   '&LIB(&MEMBER)' &TYPE
        TERMIN END
        END
$$  ADD LIST=ALL,NAME=PDSHELP
PROC  2 COMMAND OPTION
        CONTROL NOFLUSH
        IF   &COMMAND = () THEN DO
          TPUCLEAR
          HELP  PDSCMNDS F
        END
        ELSE DO
          SET  COMMAND = &SUBSTR(2:&LENGTH(&STR(&COMMAND))-1,&COMMAND)
          IF   &OPTION = () THEN  SET  OPTION =
          ELSE SET  OPTION = &SUBSTR(2:&LENGTH(&STR(&OPTION))-1,&OPTION)
          SET  COMMAND = &SUBSTR(1:3,&STR(&COMMAND   ))
          TPUCLEAR
          HELP PDS&COMMAND &OPTION
          IF   &LASTCC > 0 THEN DO
            SET  COMMAND = &SUBSTR(1:2,&STR(&COMMAND   ))
            TPUCLEAR
            HELP PDS&COMMAND &OPTION
            IF   &LASTCC > 0 THEN DO
              SET  COMMAND = &SUBSTR(1:1,&STR(&COMMAND   ))
              TPUCLEAR
              HELP PDS&COMMAND &OPTION
            END
          END
        END
$$  ADD LIST=ALL,NAME=PDSLIS
PROC  0
        GLOBAL &LIB
        LISTDS '&LIB' MEMBERS
$$  ADD LIST=ALL,NAME=PDSMOV
PROC  2 LIBRARY MEMBER
        GLOBAL &LIB &TYPE &LIBX
        CONTROL NOFLUSH
        IF  &STR(&LIBRARY) ^= &STR(()) AND +
          '&SUBSTR(1,&LIBRARY)' = '(' THEN +
          SET  LIBX = &SUBSTR(2:&LENGTH(&STR(&LIBRARY))-1,&LIBRARY)
AGAIN:  IF  &STR(&LIBX) = &STR() THEN DO
PROMPT:   WRITE SPECIFY TO OR FROM LIBRARY
          READ    LIBX
          GOTO    AGAIN
        END
        IF  &SUBSTR(1:2,&LIBX) = TO THEN DO
          SET  FROMTO = TO
          SET  LIBX = &SUBSTR(4:&LENGTH(&LIBX)-1,&LIBX)
        END
        ELSE  DO
          IF  &SUBSTR(1:4,&LIBX) = FROM THEN DO
            SET  FROMTO = FROM
            SET  LIBX = &SUBSTR(6:&LENGTH(&LIBX)-1,&LIBX)
          END
          ELSE    GOTO PROMPT
        END
        IF  &SUBSTR(1,&LIBX) = ' THEN +
          SET  LIB2 = &SUBSTR(2:&LENGTH(&LIBX)-1,&LIBX)
        ELSE  SET  LIB2 = &STR(&SYSPREF..&LIBX)
        IF   &FROMTO = TO   THEN   SET  LIB1 = &LIB
        ELSE  DO
          SET  LIB1 = &LIB2
          SET  LIB2 = &LIB
        END
        SET  LIBX = &STR(&FROMTO(&LIBX))
        COPY    '&LIB1(&MEMBER)' '&LIB2(&MEMBER)'
        IF      &LASTCC = 0 THEN DELETE '&LIB1(&MEMBER)'
$$  ADD LIST=ALL,NAME=PDSPRI
PROC  1 MEMBER TRACE()
        GLOBAL &LIB
        CONTROL NOFLUSH
        IF &TRACE = LIST THEN CONTROL LIST
        IF &TRACE = SYMLIST THEN CONTROL SYMLIST
        IF &TRACE = CONLIST THEN CONTROL CONLIST
        IF  &STR(&MEMBER) ^= &STR(*)  THEN +
          LIST '&LIB(&MEMBER)' SYSPRINT(A)
        ELSE DO
          CONTROL NOMSG
          FREE  FI(@PDS SYSPRINT SYSUT1 SYSUT2 SYSIN)
          DELETE @PDS
          CONTROL MSG
          ALLOC FI(@PDS) DA('OLDWORK') VOL(WORK01) UNIT(DISK) SHR
          ALLOC FI(SYSPRINT) DUMMY
          ALLOC FI(SYSUT1) UNIT(SYSDA) SPACE(3) CYL
          ALLOC DA('&LIB') SHR
          ALLOC FI(SYSIN) NEW
          OPENFILE SYSIN OUTPUT
          SET &SYSIN = &STR( COPY PDS=&LIB,TO=DISK=WORK01,)+
                       &STR(RENAME=&SYSPREF..@PDS)
          PUTFILE SYSIN
          CLOSFILE SYSIN
          CALL 'SYS1.LINKLIB(IEHMOVE)'
          SET MOVECC = &LASTCC
          FREE  FI(@PDS SYSUT1)
          ALLOC FI(SYSUT1) DA(@PDS) SHR DELETE VOL(WORK01) UNIT(DISK)
          IF  &MOVECC = 0 THEN DO
            ALLOC FI(SYSUT2) SYSOUT(A)
            OPENFILE SYSIN OUTPUT
            SET &SYSIN = &STR( PRINT TYPORG=PO,MAXFLDS=1)
            PUTFILE SYSIN
            SET &SYSIN = &STR( RECORD FIELD=(80))
            PUTFILE SYSIN
            CLOSFILE SYSIN
            CALL 'SYS1.LINKLIB(IEBPTPCH)'
          END
          ELSE WRITE *** MOVE ERROR: RC=&MOVECC ***
          CONTROL NOMSG
          FREE FI(SYSIN SYSUT1 SYSUT2 SYSPRINT)
          CONTROL MSG
          ALLOC FI(SYSIN)    DA(*)
          ALLOC FI(SYSPRINT) DA(*)
          IF &MOVECC = 0 THEN WRITE *** PDS PRINTED ***
        END
$$  ADD LIST=ALL,NAME=PDSREN
PROC  2 OLDNAME NEWNAME
        GLOBAL &LIB
        RENAME '&LIB(&OLDNAME)' '&LIB(&NEWNAME)'
