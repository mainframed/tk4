&ACCTNG=NO
&AUTORDR=YES                 YES
&BSCCPU=YES
&BSC2770=YES
&BSC2780=YES
&BSC3780=YES
&BSHPRES=YES
&BSHPRSU=YES                 YES
&BSHTAB=YES                  YES
$BSPACE=5F                   5F
&BSVBOPT=NO                  NO
&BUFHICH=1                   1
&BUFSIZE=2040                688
$CKPTIME=60                  60
&CLS(1)=L                    A
&CLS(2)=M                    BA
&CLS(3)=1                    CBA
&CLS(4)=DC                   DCBA
&CLS(5)=BDC                  EDCBA
&CLS(6)=ABDC                 FEDCBA
&CLS(7)=7                    GFEDCBA
&CLS(8)=8                    HGFEDCBA
&CONAUTH=77777777            77777777
&DEBUG=NO                    NO
$DELAYCT=100                 256
&DMPTAPE=000                 000
$ESTIME=20                   2
$ESTLNCT=10                  2
$ESTPUN=2                    100        MOD 1000X
&FCBV=NO                     NO
&INITSVC=255                 255
&JITSIZE=24                  0
$LINECT=0                    61
LINE01=03010                 ***01    DEPOT MANNHEIM
LINE02=03111                          ZWEIBRUECKEN
LINE03=03211                          FLEURY
LINE04=03311                          ARC-LES-GRAY
LINE05=03411                          BUSS.SYST. STEUBENSTR.
&LOGOPT=YES                  YES
&MAXCLAS=8                   8
&MAXJOBS=100                 100
&MAXPART=8                   &MAXXEQS
&MAXXEQS=6                   3
&MINBUF=50
&MLBFSIZ=400                 400
&MONINTV=5                   5
&NOPRCCW=15                  15
&NOPUCCW=10                  10
&NUMBUF=5                    15
&NUMCONS=0                   0
&NUMDA=1                     2         3330
&NUMDDT=132                  20
&NUMINRS=4                   0
&NUMLNES=5                   0
&NUMOACE=2                   1
&NUMPRTS=2                   2
&NUMPUNS=1                   1
&NUMRDRS=1                   1
&NUMRJE=5                    &NUMLNES
&NUMTGV=1000                 400
&NUMTPBF=15                  &NUMLNES
&NUMTPES=1                   1
&NUMTPPR=5                   &NUMLNES
&NUMTPPU=5                   &NUMLNES
&NUMTPRD=5                   &NUMLNES
&NUMWTOQ=15                  15
&OLAYLEV=15                  15
&OREPSIZ=0                   0
&OSC(1)=L                    A
&OSC(2)=M                    B
&OSC(3)=C                    C
&OSC(4)=D                    D
&OSC(5)=E                    E
&OSC(6)=F                    F
&OSC(7)=G                    G
&OSC(8)=A                    H
&OSINOPT=NO                  NO
&OUTPOPT=2                   0
$OUTXS=5000                  2000
&PID(1)=1                    1
&PID(2)=2                    2
&PID(3)=3                    3
&PID(4)=4                    4
&PID(5)=5                    5
&PID(6)=6                    6
&PID(7)=7                    7
&PID(8)=8                    8
&PID(9)=9                    9
$PRICONA=01F                 01F
$PRIDCT=70                   61
&PRILOW=0                    5
&PRIHIGH=0                   10
&PRIRATE=0                   0
$PRTBOPT=2                   2
&PRTRANS=NO                  YES
&PRTUCS=QN                   0
$PUNBOPT=1                   1
&RDR=30E                     0FC
&RDRPART=S                   S
$REPRDR=00C                  00C
$REPWTR=00E                  00E
&RESCORE=1                   0
&RJOBOPT=NO                  NO
RMT01=0101010215203#
RMT02=02020202153243
RMT03=03030302153241
RMT04=04040402154137
RMT05=0505000215313@
$RPRBOPT=1                   1
&RPRI(1)=9                   9
&RPRI(2)=8                   8
&RPRI(3)=7                   7
&RPRI(4)=6                   6
&RPRI(5)=5                   5
&RPRI(6)=2                   4
&RPRI(7)=2                   3
&RPRI(8)=2                   2
&RPRI(9)=2                   1
&RPRT(1)=1                   2
&RPRT(2)=3                   5
&RPRT(3)=5                   15
&RPRT(4)=20                  X'FFFFFF'/60
&RPRT(5)=60
&RPRT(6)=X'FFFFFF'/60
&RPRT(7)=X'FFFFFF'/60
&RPRT(8)=X'FFFFFF'/60
&RPRT(9)=X'FFFFFF'/60
&RPS=YES                     NO
$RPUBOPT=1                   1
&RQENUM=10                   5
&SIZ2260=0                   0
&SPD2260=50                  50
&SPOLMSG=150                 10*&NUMRJE
&SPOOL=SPOOL                 SPOOL
&STRCPU=NO                   NO
&STR1978=NO                  NO
&TIMEOPT=2                   4
$TIMEXS=1                    1
&TPBFSIZ=516                 400
$TPIDCT=6                    6
&TRACE=0                     0
&USASCII=NO                  NO
$WAITIME=2                   1
&WCLSREQ=********            ********
&WTLOPT=NO                   NO
&WTR=3B0                     0FE
&WTRCLAS=HA                  HA
&WTRPART=*                   *
&XBATCHC=123
&XBATCHN=$FM01               $$$$$
&XLIN(1)=100                 2000
&XLIN(2)=250                 5000
&XLIN(3)=1000                15000
&XLIN(4)=2500                X'FFFFFF'
&XLIN(5)=10000
&XLIN(6)=X'FFFFFF'
&XLIN(7)=X'FFFFFF'
&XLIN(8)=X'FFFFFF'
&XLIN(9)=X'FFFFFF'
&XPRI(1)=13                  9
&XPRI(2)=12                  8
&XPRI(3)=10                  7
&XPRI(4)=8                   6
&XPRI(5)=6                   5
&XPRI(6)=4                   4
&XPRI(7)=3                   3
&XPRI(8)=2                   2
&XPRI(9)=1                   1
&XZMFTH=E2                   FF
&XZMFTL=00                   00
&XZMULT=YES                  YES
&XZPRTY=0-1                  7
$$1=A                        A
$$2=A                        A
$$3=A                        A
$$4=A                        A
$$5=A                        A
$$6=A                        A
$$7=A                        A
$$8=A                        A
$$9=A                        A
$$0=A                        A
$$A=A                        A
$$B=1                        B
$$C=1                        A
$$D=1                        A
$$E=1                        A
$$F=1                        A
$$G=A                        A
$$H=A                        A
$$I=A                        A
$$J=A                        1
$$K=1                        2
$$L=A                        2
$$M=A                        2
$$N=A                        2
$$O=A                        2
$$P=2                        2
$$Q=2                        2
$$R=B                        2
$$S=A                        2
$$T=A                        2
$$U=A                        2
$$V=A                        2
$$W=A                        2
$$X=A                        2
$$Y=*                        2
$$Z=A                        2
UPDATE
./       CHNGE $HASPGEN,03,1,0
&OLAYSIZ SETA  1300                                               JD-08
./      CHANGE NAME=HASPCOMM                                    DPA6580
         MVI   COMPNTER,C' '       INSURE SCAN STOPS            DPA6580
         LA    R1,COMPNTER         FAKE END OF SCAN             DPA6580
./      CHANGE NAME=HASPCON                                     DPA9164
         $POST PCEEWF+$EWBCMB,CMB  ACTIVATE IF WAITING ON INPUT DPA7523
         L     R5,RBLINK-RBDSECT(0,R9)  POINT TO CALLER RB      DPA7532
         TM    RBOPSW+1-RBDSECT(R5),X'F0'  TEST FOR KEY ZERO    DPA7532
         MVZ   WTESTWD+3(1),RBOPSW+1-RBDSECT(R5) SET COMPARE WD DPA7532
WABORT   DS    0H                                               DPA7532
./      DELETE SEQ1=W0840000,SEQ2=W0844000                      DPA7532
         SVC   13                  ABEND USER                   DPA7532
         CLI   1(R4),C' '          CHECK FOR BLANK START        DPA7548
         BCR   E,R14               GIVE TO OS IF YES            DPA7548
         CR    R5,R4               CHECK FOR NULL COMMAND       DPA7548
         BNH   WMEXIT              EXIT IF YES                  DPA7548
         CLI   1(R4),C' '          CHECK FOR SHIFT BLANK FIRST  DPA7548
         BNE   WBS                 IF NOT CONTINUE              DPA7548
         MVI   1(R4),$BSPACE       SET TO SHIFT ANOTHER OUT     DPA7548
./      DELETE SEQ1=W3850000,SEQ2=W3860000                      DPA7548
RQEXA    EQU   6                   STATUS FLAGS                 DPA9164
./      DELETE SEQ1=W4121700,SEQ2=W4121700                      DPA7536
         L     R6,WRPYQ            POINT TO HEAD OF REPLY Q     DPA7536
         L     R6,0(0,R6)          POINT TO FIRST ELEMENT       DPA7536
         TM    RQEXA(R6),X'10'     CHECK CANCELLED              DPA9164
         BCR   O,R14               EXIT IF YES                  DPA9164
WRPYQ    DC    A(*-*)              POINTER TO UCMRPYQ           DPA7536
./      CHANGE NAME=HASPINIT                                    DPA7536
         LA    R1,NGUCBTYP-1(WE)   POINT TO THE DEVICE TYPE.    DPA6600
         TM    0(R1),6             IS IT EITHER 2305...         DPA6600
         BNO   NGRPS30             BRANCH IF NOT.               DPA6600
         GETMAIN R,SP=251,LV=128   GET SPACE FOR 8 CH PROGS.    DPA6600
         ST    R1,8(,WC)           SET ADDRESS IN EXT'S TIC.    DPA6600
         LA    R0,8                FOR EACH CHANNEL PROGRAM --- DPA6600
NGRPS3L  LA    WA,5(,R1)           SET SECTOR-NUMBER ADDRESS    DPA6600
         ST    WA,0(,R1)           IN SET-SECTOR CCW.           DPA6600
         MVI   0(R1),X'23'         SET SET-SECTOR OPCODE.       DPA6600
         MVC   4(5,R1),=X'6000000108'  SET CC+SLI, CT=1, TIC.   DPA6600
         ST    WD,12(,R1)          SET TABLE ADR IN THE TIC.    DPA6600
         LA    R1,16(,R1)          POINT TO NEXT CHAN PROG      DPA6600
         BCT   R0,NGRPS3L          AND LOOP.                    DPA6600
NGRPS30  LA    WC,16(,WC)          POINT TO NEXT SET-SECTOR     DPA6600
         LA    WD,24(WA,WC)        ADDRESS OF UCMRPYQ           DPA7536
         ST    WD,16(,WB)          SET UP CON DATA              DPA7536
./       CHNGE HASPNUC,03,1,0                                   DPA7537
         OC    QUECHAIN(4,WB),QUECHAIN(WB)   WAS QUEUE EMPTY    DPA7537
         BNZ   QFOUND3             BRANCH IF NOT                DPA7537
         $POST $HASPECF,JOB        INDICATE AVAILABLE JQE       DPA7537
QFOUND3  NULL                      *                            DPA7537
OEXERR   NULL                                                   DPA6586
         CLI   8(R11),X'08'        IS EXTENT SET FOR 2305...    DPA6600
         BE    ESIORPS2            BRANCH IF NOT.               DPA6600
         LA    R10,7               ELSE EXTRACT                 DPA6600
         NR    R10,R6              EXPOSURE NUMBER,             DPA6600
         SLL   R10,4               MULTIPLY BY 16,              DPA6600
         L     R11,8(,R11)         AND POINT TO SET-SECTOR      DPA6600
         AR    R11,R10             CH PROG FOR THE EXPOSURE.    DPA6600
ESIORPS2 DS    0H                                               DPA6600
         CLI   BUFECBCC,X'7F'      WAS READ SUCCESSFUL          DPA6586
         BE    *+10                BRANCH IF YES                DPA6586
         BAL   WA,OEXERR           GO START A QUEUED REQUEST    DPA6586
         BR    R15                 RETURN TO $ASYNC             DPA6586
./      CHANGE NAME=HASPOBLD                                    DPA6580
         CLI   SYMNA+2(WA),0       IS THIS END OF SYMBOL TABLE  DPA6580
./       CHNGE HASPPRPU,03,1,0                                  DPA9178
         XC    JCTPRC+6(8),JCTPRC+6  CLEAR LINE/PAGE COUNTS     DPA9178
         L     R1,PDCT             GET ADDRESS OF PRINT DCT     DPA6580
         NI    DCTFORMS+3-DCTDSECT(R1),255-DCTOPACT    RESET    DPA6580
./      DELETE SEQ1=P1638500,SEQ2=P1639500                      DPA6580
PRDELCOM L     PL,PDCT             GET ADDRESS OF PRINT DCT     DPA6580
         TM    DCTFORMS+3-DCTDSECT(PL),DCTOPACT TEST FOR PAUSE  DPA6580
         BO    PRUCSLOD            BRANCH IF FORMS MOUNT        DPA6580
         BAL   PL,PRCOMENT         WRITE TERMINAL MESSAGE       DPA6580
         OC    6(2,PW),6(PW)       TEST BYTE COUNT              DPA6580
         CLC   IOBCSW(3),IOBSTART+1  COMPARE CSW WITH 1ST CCW   DPA6599
         BNH   PURETRY             BRANCH IF INVALID CSW        DPA6599
./      CHANGE NAME=HASPRDR                                     DPA7567
         TM    RIDFLAGS,RIDPOST    IS USER WAITING              DPA7567
         BO    *+8                 IF YES, DON'T HOLD DCT       DPA7567
./      CHANGE NAME=HASPRTAM                                    DPA9904
.HTABA1  ANOP                                                   DPA7527
./      DELETE SEQ1=M0489000,SEQ2=M0489000                      DPA7527
         BM    MBHGIREC            BR IF LGTH IS ZERO OR LESS   DPA9904
MBHGIREC C     WA,=F'-1'           WAS BAD IGS DATA ENCOUNTERED DPA9904
         BL    *+6                 IF YES, AVOID DEBLOCK LOOP   DPA9904
         OC    IOBCCW4(16),MWENQCCW    SET UP NEXT TWO CCW'S    DPA9215
         ST    R1,IOBCCW6          SET ADDRESS OF READ CCW      DPA9215
         OC    IOBCCW6,MWRSPCCW+16 SET UP LAST CCW              DPA9215
         LA    R1,TPBUFST-2        COMPUTE                      DPA9215
         AH    R1,6(,WA)            ADDRESS OF                  DPA9215
         SH    R1,IOBCSW+5           LAST TWO BYTES             DPA9215
         MVC   LCBRCB,0(R1)        SAVE LAST TWO BYTES          DPA9215
         AIF   (&NBC).NBCPUJ1                                   DPA9215
         CLC   MSOHENQ,LCBRCB      TEST RESPONSE                DPA9215
         BE    MBSCPUST            BRANCH IF SOH-ENQ SEQUENCE   DPA9215
.NBCPUJ1 AIF   (&NBH).NBHDWJ1                                   DPA9215
         CLC   MBSCENQ,LCBRCB+1    TEST RESPONSE                DPA9215
.NBHDWJ1 CLC   MBSCNAK,LCBRCB+1    TEST RESPONSE FOR NAK        DPA9215
./      DELETE SEQ1=M5134000,SEQ2=M5138000                      DPA9215
         B     MRETRYL             OTHERWISE LOG AND RETRY      DPA9215
         CLI   MCOMMAND,MREADCMD   TEST COMMAND TYPE            DPA9215
         CLC   MBSCEOT,LCBRCB+1    TEST FOR PREVIOUS EOT        DPA9215
         BE    MWRENQ              BRANCH IF YES                DPA9215
         CLC   MBSCEOT,LCBRCB+1    TEST FOR PREVIOUS EOT        DPA9215
         BE    MRDTEST             BRANCH IF YES                DPA9215
         MVC   LCBRCB+1(1),MBSCEOT INDICATE EOT RECEIVED        DPA9215
MRDTEST  CLI   MCOMMAND,MRREQCMD   TEST COMMAND TYPE            DPA9215
./       CHNGE HASPWTR,03,1,0                                   DPA7558
         XC    REC+33(3),REC+33    ZERO NO-WORK CHAIN           DPA7558
./       CHNGE HASPXEQ,03,1,0                                   DPA8367
         XC    XPCEJOBN,XPCEJOBN   CLEAR PCE JOB NAME           DPA8367
XJCLDDTT LA    R0,X'2C'            R0 = 'FCB' KEY VALUE.        DPA8330
         BAL   LINK,XINTSCAN       LOCATE 'FCB' KEY IN TEXT.    DPA8330
         BZ    XJCLDDNC            BRANCH IF NOT FOUND.         DPA8330
         LR    WA,R1               WA = ADDR OF 'FCB' KEY.      DPA8330
         BAL   LINK,XFINDKEY       LOCATE NEXT KEY IN TEXT.     DPA8330
         SR    R1,WA               R1 = LENGTH OF 'FCB' PARM.   DPA8330
         EX    R1,XJCLJBMH         MOVE 'FCB' PARM TO OUTPUT.   DPA8330
         AR    WC,R1               POINT TO NEXT OUTPUT SLOT.   DPA8330
XJCLDDNC TM    XSTATUS+3,XJSDCBBT  TEST FOR 'DCB' ENTRIES.      DPA8330
./      CHANGE NAME=HRTPSYS3                                    DPA6581
         $CLI  *-1,0               SET CONDITION CODE EQUAL,    DPA6581
./      DELETE SEQ1=G2924000,SEQ2=G2924000                      DPA6581
./      DELETE SEQ1=G2968000,SEQ2=G2970000                      DPA6581
         $TIO  5,0,2,$COMRETA      NON-PROCESS-EXIT IF BUSY.    DPA6581
         $JNE  GSIO2               LOG MESSAGE UNLESS READY.    DPA6581
         $TBN  (HCSNS,HCR),X'40'   IF READY, CHECK LAST CARD.   DPA6581
         $JF   GSNSRT              RETURN IF NOT-LAST-CARD.     DPA6581
         $MVI  GSIO1+1,X'50'       LAST CARD - SET FEED-ONLY    DPA6581
         $B    GSIO+3              AND RUN OUT LAST CARD.       DPA6581
GSIO2    EQU   *                                                DPA6581
         $L    R1,(FBCLNG,FBR)     GET COUNT TO COMPRESS.       DPA6581
         $ST   R1,COEND            SAVE TO END TRUNC.           DPA6581
         $A    R1,(FBAREA,FBR)     POINT TO LO-ORD+1 BYTE.      DPA6581
         $JNE  CONOTADJ            IF NOT, END OF TRUNCATION.   DPA6581
         $ALC  COEND,MONE,2        REDUCE TRUNCATION CTR BY 1.  DPA6581
         $BNZ  COTRUNC             LOOP UNLESS COL 1 BLANK.     DPA6581
./      DELETE SEQ1=G6890000,SEQ2=G6890000                      DPA6581
./      DELETE SEQ1=G6894000,SEQ2=G6894000                      DPA6581
./  CHANGE NAME=HASPINIT,SEQFLD=747,NEW=PS
         MVC   $VERSION,NVERSION                                  JD-03
         DS    0F                                                 JD-03
NVERSION DC    C'V&VERSION',V($POINTER)                           JD-03
         BNO   NGW041B                                            JD-06
         OI    QUEFLAGS(R2),QUEHOLD1   HOLD JOB WHICH WAS EXEC    JD-06
         B     NGW042                  GO WRITE MESSAGE           JD-06
NGW041B  EQU   *                                                  JD-06
*                                                                 JD-03
*                                                                 JD-03
./ CHANGE NAME=HASPRDR,SEQFLD=747,NEW=PS
PDDBPNCH EQU   X'04'               PUNCH TYPE PDDB                JD-21
PDDBNULL EQU   X'40'               NULL TYPE PDDB                 JD-21
PDDBPRNT EQU   X'02'               PRINT PDDB TYPE                JD-21
         CLC   RPROCODE,2(RPI)     TEST FOR REPRO CARD            JD-21
         BE    RPROCARD            BRANCH IF REPRO CARD           JD-21
         NI    16(RPI),X'FB'      15=11, 14=10                    JD-04
*    PRIORITY 15 AND 14 NOT ALLOWED WITH PRIORITY-CARD            JD-04
*                                  AND REPRO CARD INITIALIZATION  JD-21
         SPACE 2                                                  JD-21
RPROCARD EQU   *                                                  JD-21
         LA    RL2,8(RPI)          SAVE ROUTE TEMPORARILY         JD-21
         B     RPROUTE             ENTER COMMON ROUTE LOGIC       JD-21
         CLC   RPROCODE,2(RPI)     REPRO CARD?                    JD-21
         BNE   *+4+4               BRANCH IF NOT                  JD-21
         LA    RL2,RPROPROC        YES, POINT TO REPRO RTN        JD-21
         CLI   3(RPI),X'84'                                       JD-00
         BNE   *+12                                               JD-00
         MVI   RJCTPRIO,X'FF'                                     JD-00
         MVI   3(RPI),X'C4'                                       JD-00
         CLC   0(7,RPI),REPROSLA   REPRO JOB?                     JD-21
         BE    RPROINIT            YES, GO TO RELAY INIT          JD-21
*   (34,940,4,1007,FD36SOFT,T0),'12313000000DACH'    JOB-EXAMPLE  JD-05
*   L--PROGRAMMERS NAME--JOBSNAMEACCTROOM            JCT-FIELDS   JD-05
*   8DACH    34FD36SOFTT         10079404             JCT MODIF.  JD-05
         STH   R1,RJCTPNAM+8    J-DEERE UNIT-CODE                 JD-05
         BAL   RL1,RSCANA                                         JD-05
         B     RBADJOBC                                           JD-05
         STC   R1,RJCTROOM+3       GROUP-CODE                     JD-05
         BAL   RL1,RSCANA          SEQUENCE-NR                    JD-05
         B     RBADJOBC                                           JD-05
         ST    R1,RJCTACTN                                        JD-05
         LTR   R1,R1  NOP-INSTRUKTION                             JD-05
         MVC   RJCTPNAM+10(8),7(RW)                               JD-05
SKIPACC5 BXH   RW,R14,RBADJOBC                                    JD-05
         CLI   6(RW),C')'                                         JD-05
         BE    RBADJOBC                                           JD-05
         CLI   6(RW),C','                                         JD-05
         BNE   SKIPACC5                                           JD-05
         BAL   RL1,RSCANA                                         JD-05
         B     RBADJOBC                                           JD-05
         STH   R1,RJCTPNAM+18       ACCT 6   T0/P0                JD-05
         MVI   RJCTPNAM+19,X'40'                                  JD-05
         LA    RW,11(RW)                                          JD-05
         LA    RW,8                JD-PROGRNAME-LENGHT            JD-05
         LA    RL1,RCLSTAB           LOAD ADDRESS OF CLASSTABLE  JD-18
RCLSTST  CLC   7(1,RW),0(RL1)        COMPARE JOBCLASS            JD-18
         BE    RCLSFND               BRANCH IF FOUND             JD-18
         LA    RL1,6(RL1)            LOAD NEXT TABLE-ENTRY       JD-18
         CLI   0(RL1),X'FE'          END OF TABLE                JD-18
         BE    RILLJOBC              BRANCH IF YES               JD-18
         B     RCLSTST               TEST ENTRY                  JD-18
RCLSFND  MVC   RQUETYPE(1),1(RL1)    SET NEW CLASS IN RQUE       JD-18
         MVC   7(1,RW),1(RL1)        SET NEW CLASS IN JOBCARD    JD-18
         CLC   RJCTETIM(4),RESTIME    TEST IF STANDARD-ESTIME    JD-18
         BNE   *+10                   BRANCH IF NOT,ELSE WE      JD-18
         MVC   RJCTETIM+2(2),4(RL1)     USE CLASS-ESTIME         JD-18
         CLC   RJCTETIM+2(2),2(RL1)  COMPARE ESTIME WITH ALLOWD  JD-18
         BNH   RNOMAXET              BRANCH IF NOT HIGH          JD-18
         MVC   RJCTETIM+2(2),2(RL1)  SET MAXIMUM FOR THIS CLASS  JD-18
RNOMAXET NULL                                                    JD-18
RPROINIT DS    0H                                                 JD-21
         MVC   RJCTESTP(2),=C'90'  SET                            JD-21
         MVC   RJCTACTN(8),=C'REPR9400'                           JD-21
         MVC   RJCTPNAM(8),49(RPI)  COLUMN 50 CONT PROGRNAME     JD-21
         MVC   RJCTPNAM+10(8),39(RPI)   ABLAUFNUMBER    NAME     JD-21
         MVI   RJCTPNAL,X'08'                                     JD-21
         CLI   79(RPI),C'H'        REPRO JOB TO BE HELD?          JD-21
         BNE   *+4+4               BRANCH IF NOT                  JD-21
         OI    RQUEFLAG,QUEHOLD1   SET HOLD BIT                   JD-21
         MVC   RQUEFORM(2),=X'234B' FORCE STANDARD FORMS          JD-21
         B     RJNOCLAS            END OF REPRO INITIALIZATION    JD-21
REPROSLA DC    C'/*'               REPRO /*                       JD-21
RPROCODE DC    C'REPRO'            HASP REPRO CARD CODE WORD      JD-21
RCLSTAB  NULL                                                    JD-18
         DC    C'AA',X'FFFF',X'001E'  CLASS    MAXTIME DEFTIME   JD-18
         DC    C'BB',X'FFFF',X'0019'                             JD-18
         DC    C'CC',X'FFFF',X'0014'                             JD-18
         DC    C'DD',X'0004',X'0004'                             JD-18
         DC    C'11',X'FFFF',X'FFFF'                             JD-18
         DC    C'LL',X'FFFF',X'0014'                             JD-18
         DC    C'MM',X'FFFF',X'0258'                             JD-18
         DC    C'77',X'000A',X'000A'                             JD-18
         DC    C'88',X'000A',X'000A'                             JD-18
         DC    X'FE'                                             JD-18
         STC   LINK,RJCTPNAM+19                                   JD-11
         OI    RJCTPNAM+19,X'F0'                                  JD-11
         CLC   0(7,RPI),REPROSLA   REPRO JOB?                     JD-21
         BE    RJOBQUE             YES, QUE THE JOB               JD-21
         L     R1,RJCTESTP         CONVERT                       JD-37
         M     R0,RJB1000           PUNCH COUNT ESTIMATES        JD-37
         ST    R1,RJCTESTP            TO THOUSANDS OF CARDS      JD-37
         MVC   RQUEFORM(2),=X'234B'  ASSUME STANDARD FORMS        JD-25
         MVC   RQUEFORM(2),=X'234B'                               JD-25
         CLI   RQUECLAS,$PRINT     REPRO JOB? (QUEUEING TO PRINT) JD-21
         BE    RPUTEST             YES, /* NOT DELIMITER          JD-21
         CLI   RQUECLAS,$PUNCH     REPRO JOB? (QUEUEING TO PUNCH) JD-21
         BE    RPUTEST             YES, /* NOT DELIMITER          JD-21
         MVI   RQUECLAS,0          NEGATE ANY REPRO ACTIVITY      JD-21
         MVC   RQUECLAS(2),STDCODE                                JD-21
STDCODE  DC    X'234B'                                            JD-21
         SPACE 7                                                  JD-21
RPROPROC DS    0H                                                 JD-21
         LR    RW,RPI              POINT TO /*REPRO CARD          JD-21
         $LINK HASPRJCS            INITIALIZE PSEUDO JOB          JD-21
         L     R1,RJOB             GET ADDR OF JQE                JD-21
         MVC   QUEPRTRT(1,R1),8(RPI) SET REMOTE NUMBER FOR PRINT  JD-21
         MVC   QUEPUNRT(1,R1),8(RPI) SET REMOTE-NR FOR PUNCH      JD-21
         MVI   RQUECLAS,$PRINT     QUE REPRO JOB TO PRINT         JD-21
         CLC   9(5,RPI),=C'PUNCH'  JOB REALLY FOR PUNCH           JD-21
         BNE   *+4+4               NO, SKIP AROUND                JD-21
         MVI   RQUECLAS,$PUNCH     YES, QUE JOB TO PUNCH          JD-21
         OI    RDRSW,RJCLSW        USE JCL TRACK FOR WHOLE JOB    JD-21
         MVI   RQUEPRI,X'FF'       MARK REPRO JOB AND MAX PRTY    JD-21
REPROGET EQU   *                   REPRO GET/PUT ROUTINE          JD-21
         BAL   RL1,RGET            GET NEXT CARD                  JD-21
         B     RDREND              CLOSE OUT IF EOF               JD-21
         MVI   RCARDID,X'09'       SET PRINT CHRG CONTROL         JD-21
         BAL   RL1,RPUT            WRITE THE CARD                 JD-21
         B     REPROGET            LOOP BACK                      JD-21
         CLI   RQUECLAS,$PRINT     REPRO PRINT JOB?               JD-21
         BE    RNODLMSG            IF SO, DONT ADD DELETE MSG     JD-21
         CLI   RQUECLAS,$PUNCH     REPRO PUNCH JOB?               JD-21
         BE    RNODLMSG            IF SO, DONT ADD DELETE MSG     JD-21
RNODLMSG DS    0H                                                 JD-21
         CLI   RQUECLAS,$PRINT     REPRO PRINT JOB?               JD-21
         BNE   RNOTPRNT            BRANCH IF NOT                  JD-21
         MVI   JCTPDDB,PDDBNULL    MAKE FIRST PDDB NULL           JD-21
         MVI   JCTPDDB+5,PDDBPRNT  SET PRINT TYPE PDDB            JD-21
         MVC   JCTPDDB+6(4),RJCTRDRT MOVE JCL TRACK TO PDDB       JD-21
RNOTPRNT DS    0H                                                 JD-21
         CLI   RQUECLAS,$PUNCH     REPRO PUNCH JOB?               JD-21
         BNE   RNOTPNCH            BRANCH IF NOT                  JD-21
         MVI   JCTPDDB,PDDBNULL    MAKE FIRST PDDB NULL           JD-21
         MVI   JCTPDDB+5,PDDBPNCH  SET PUNCH TYPE PDDB            JD-21
         MVC   JCTPDDB+6(4),RJCTRDRT MOVE JCL TRACK TO PDDB       JD-21
RNOTPNCH MVI   JCTPDDB+10,0        MARK END OF PDDB'S             JD-21
./ CHANGE NAME=HASPMISC,SEQFLD=747,NEW=PS
* * * *  SMF RECORD HEADER DSECT * * * * *                        JD-20
SMFDSECT DSECT                                                    JD-20
SMFRECID DS    0CL18                                              JD-20
         DS    CL4      REC-DESCR.-WORD                           JD-20
         DS    CL1      BIN ZERO                                  JD-20
         DS    CL1      RECORD-TYPE  X'FF'                        JD-20
         DS    CL8      TIME AND DATE                             JD-20
         DS    CL4      SYSTEM-ID AND MODEL                       JD-20
HASPMISC CSECT                                                    JD-20
         DROP  JCT                                                JD-20
         USING BUFDSECT,JCT                                       JD-20
         LA    WA,IOBCCW2+2          SMFHEADER                    JD-20
         USING SMFDSECT,WA                                        JD-20
         MVC   SMFSAVE,SMFRECID      SAVE ANY VALUE               JD-20
         TIME  BIN                   GET TIME AND DATE            JD-20
         STM   R0,R1,SMFTIME         MOVE TIME AND DATE IN HEADER JD-20
         MVC   SMFRECID,SMFWK        MOVE HEADER IN FRONT OF JCT  JD-20
         SMFWTM (WA)                 WRITE SMF                    JD-20
         MVC   IOBCCW2+2(18),SMFSAVE   RESTORE OLD VALUE IN BUFF. JD-20
         DROP  JCT,WA                                             JD-20
         USING JCTDSECT,JCT                                       JD-20
SMFSAVE  DS    CL18             SAVEAREA OF SMF-HEADER            JD-20
         CNOP  2,4                                                JD-20
SMFWK    DS    0CL18            WORKAREA FOR SMFHEADER            JD-20
         DC    X'008E000000FF'                                    JD-20
SMFTIME  DC    2F'0'                                              JD-20
         DC    C'0050'                                            JD-20
         BC    0,DRNO  CHANGE TO BRANCH IF D R WANTED             JD-14
         LH    WB,DRTIME       LOAD COUNTER DR                    JD-14
         LA    WB,1(WB)        INCREASE COUNTER                   JD-14
         STH   WB,DRTIME       SAVE COUNTER                       JD-14
         CH    WB,DRINTERV     COMPARE COUNTER WITH CONSTANT      JD-14
         BL    DRNO            IF LOW  NO D R                     JD-14
         SR    R0,R0           CLEAR FOR SVC                      JD-14
         STH   R0,DRTIME       ZERO COUNTER                       JD-14
         LA    R1,$JDDRREQ     ISSUE D R                          JD-14
         SVC   34                                                 JD-14
DRNO     EQU   *                                                  JD-14
         LH    WB,DTTIME                                          JD-15
         LA    WB,1(WB)                                           JD-15
         STH   WB,DTTIME                                          JD-15
         CH    WB,DTINTERV                                        JD-15
         BL    DTNO                                               JD-15
         SR    R0,R0                                              JD-15
         STH   R0,DTTIME                                          JD-15
         LA    R1,$JDDTREQ                                        JD-15
         SVC   34                                                 JD-15
DTNO     EQU   *                                                  JD-15
$JDDRREQ DC    0F'0',AL2(7,0),CL10'D R'                           JD-14
$JDDTREQ DC    0F'0',AL2(7,0),CL10'D T'                           JD-14
DRTIME   DC    H'23'                                              JD-14
DRINTERV DC    H'24'          2 MIN  D R                          JD-14
DTTIME   DC    H'59'                                              JD-15
DTINTERV DC    H'60'          5 MIN  D T                          JD-15
./ CHANGE NAME=HASPCOMM,SEQFLD=747,NEW=PS
         $COMTAB  FJ,HASPCJB2                                  JD-24
         $COMTAB L,HASPCDV1,REJECT=COMD  LOG LINE                 JD-35
         B     CDQENDS      FORCE OPERATOR-INTELLIGENCE           JD-23
         BE    CDFPRT1                                     JD-25
         TM    QUETYPE(R1),X'84'                           JD-25
         BNO   CDFNXT                                      JD-25
CDFPRT1  EQU   *                                           JD-25
         BAL   LINK,$QJITLOC         LOCATE JIT IN R0             JD-25
         LR    R9,R0               PUT JIT ADDRESS IN R9          JD-25
         LA    LINK,20(R9)           SET END OF JIT ADDRESS       JD-25
         LA    R9,8(R9)              1ST 10 BYTES ARE RESERVED    JD-25
         CLI   QUEFORMS(R1),X'FF'    CHECK FOR SPECIAL FORMS      JD-25
         BE    CDFNXT1               NO, GO LOOK AT JIT           JD-25
         LH    WA,QUEFORMS(0,R1)     PICK UP QUEFORMS             JD-25
CDFCOMPR N     WA,CDFMASK            CLEAN IT UP                  JD-25
         CR    WA,WD                 TEST AGAINST LAST REPORTED   JD-25
         BNH   CDFNXT1               IF NOT ABOVE, TRY JIT        JD-25
         CR    WA,WB                 TEST AGAINST CURRENT LOW     JD-25
         BH    CDFNXT1               IF HIGH, GO TO NEXT FORM     JD-25
         BE    CDFCNT1               IF EQUAL, COUNT IT           JD-25
         SR    WC,WC                 RESET COUNT                  JD-25
         LR    WB,WA                 SET NEW CURRENT FORMS        JD-25
CDFCNT1  BCTR  WC,0                  COUNT BUT NO LOOP            JD-25
CDFNXT1  LA    R9,2(R9)              MOVE TO NEW FORMS            JD-25
         CLI   0(R9),X'EE'           END OF FORMS IN JIT?         JD-25
         BE    CDFNXT                YES, GO TO NEXT JOBQUE ENTRY JD-25
         CR    R9,LINK               TEST IF END OF JIT?          JD-25
         BNL   CDFNXT                YES, GO TO NEXT JOBQUE ENTRY JD-25
         CLI   0(R9),X'FF'           CHECK IF SPECIAL FORMS?      JD-25
         BE    CDFNXT1               NO, MOVE TO NEXT ENTRY       JD-25
         LH    WA,0(R9)              PICK UP JIT FORMS            JD-25
         B     CDFCOMPR              GO CHECK NEXT FORM           JD-25
HASPCJB2 $COMGRUP AJ,CJ,DJ,FJ,HJ,PJ,DELAY=YES,PRTY=0              JD-24
***************************************************************** JD-24
*                                                               * JD-24
*        $F JOB LIST -- DISPLAY PRINTFORMS OUT OF QUEUE AND JIT * JD-24
*                                                               * JD-24
*               COMMAND OPERATES ONLY JOBS IN PRINTQ NOT BUSY   * JD-24
*                                                               * JD-24
***************************************************************** JD-24
CFJ      MVI   COMMAND+7,C' '            BLANK TO                 JD-24
         MVC   COMMAND+8(45),COMMAND+7        COMMANDAREA         JD-24
         BAL   LINK,$QJITLOC                  LOCATE JIT          JD-24
         LR    R15,R0                         LOAD JIT-ADDRESS    JD-24
         MVC   CFJ1010+1(8),JITJNAME(R15) MOVE JOBNAME TO ERRMESS JD-24
         CLI   QUETYPE(R1),$PRINT        IS JOB IN PRINT-QUEUE    JD-24
         BE    CFJ0020                   YES                      JD-24
         $CRET MSG=CFJ1010,L=29          NO, RETURN WITH MESSAGE  JD-24
CFJ0020  MVC   COMMAND+8(8),JITJNAME(R15)  JOBNAME INSERT         JD-24
         CLC   QUEFORMS(2,R1),CFJ1012    QUEUED FOR STD.          JD-24
         BNE   CFJ0030                   NO                       JD-24
         MVC   COMMAND+23(4),CFJ1011     YES,MOVE STD.-TEXT       JD-24
         B     CFJ0040                   GO TO JIT-ANALYZE        JD-24
CFJ0030  UNPK  COMMAND+23(5),QUEFORMS(3,R1) MOVE QUEFORM          JD-24
         MVI   COMMAND+27,X'40'                                   JD-24
CFJ0040  LA    R1,10(R15)         JIT-FORM IN R1                  JD-24
         LA    R0,20(R15)          END-OF JIT-FORMS IN R0         JD-24
         LA    R15,COMMAND+29     START OF DISPLAY-LINE OF JIT    JD-24
CFJ0050  CLI   0(R1),X'EE'        NO MORE FORMS?                  JD-24
         BE    CFJ0090            YES                             JD-24
         CR    R1,R0              END OF JIT?                     JD-24
         BNL   CFJ0090            YES                             JD-24
         CLC   0(2,R1),CFJ1012    STD.-CODE IN JIT?               JD-24
         BNE   CFJ0070             NO, USE PACKED-FORM            JD-24
         MVC   0(4,R15),CFJ1011    YES,MOVE STD. -TEXT            JD-24
CFJ0060  LA    R1,2(R1)           INCREASE JIT-ADDRESS            JD-24
         LA    R15,5(R15)         INCREASE LINE-ADDRESS           JD-24
         B     CFJ0050            TEST IF END-OF-JIT              JD-24
CFJ0070  UNPK  0(5,R15),0(3,R1)   PACKED JIT-FORM TO LINE         JD-24
         MVI   4(R15),X'40'                                       JD-24
         B     CFJ0060            TEST IF END-OF-JIT              JD-24
CFJ0090  LR    R1,R0   LOAD END OF FORMS IN JIT                  JD-24
         L     R1,0(R1)     LOAD BINARY NUMBER OF LINES          JD-24
         CVD   R1,CFJ1014    CHANGE TO DECIMAL-FORMAT            JD-24
         UNPK  1(7,R15),CFJ1014+4(4)                             JD-24
         MVC   6(9,R15),CFJ1013   SET LAST POSITIONS TO ZERO     JD-24
         LA    R0,15(R15)    LOAD END OF DISPLAY-LINE            JD-24
         LA    R15,COMMAND                                        JD-24
         SR    R0,R15                                             JD-24
         LA    WA,CFJ0100                                         JD-24
         B     COWTO(0,BASE2)                                     JD-24
CFJ0100  B     CAJNEXT                                            JD-24
CFJ1013  DC    C'00 LINES  '                                     JD-24
CFJ1014  DC    D'0'                                              JD-24
CFJ1012  DC    X'234B'                                            JD-24
CFJ1011  DC    C'STD.'                                            JD-24
CFJ1010  DC    C' JOBNAMEX NOT IN PRINT-QUEUE '                   JD-24
HASPCDV1 $COMGRUP B,C,E,F,I,L,N,P,DELAY=YES,PRTY=0 DEVICE COMMAND JD-35
         EJECT                                                    JD-35
* * * * * * * * * * * * * * * * * * * * * * * * * * * *           JD-35
*                                                                 JD-35
*        $L DEV,ON OR $L DEV,OFF    LOG ACTIVITY ON LINE          JD-35
*                                                                 JD-35
* * * * * * * * * * * * * * * * * * * * * * * * * * * *           JD-35
CL       CLI   DCTDEVTP,DCTLNE       TEST IF LINE DCT             JD-35
         BNE   CBXINVO             NO, INVALID COMMAND            JD-35
         BXH   WD,WE,CLOFF        MOVE OVER TO PARAMETER          JD-35
         L     R15,0(0,WD)         PICK UP PARAMETER              JD-35
         CLC   0(2,R15),CLON      CHECK IF PARAMETER IS 'ON'      JD-35
         BNE   CLOFF              NO, TURN OFF                    JD-35
         OI    DCTPSTAT,DCTLOGAL   TURN ON LOG                    JD-35
         B     CBXRET             GO SAY O K                      JD-35
CLOFF    NI    DCTPSTAT,255-DCTLOGAL    TURN OFF LOG              JD-35
         B     CBXRET             GO SAY O K                      JD-35
CLON     DC    CL2'ON'            CONSTANT FOR LOG ON             JD-35
         CLI   COMOPRND+1,C'6'                                    JD-17
         BH    CDISING            INIT   7,8  FREE DEFINABLE      JD-17
         BE    CTI6               INIT 6,3    DAY/NIGHT           JD-17
         CLI   COMOPRND+1,C'3'                                    JD-17
         BL    CDISING            INIT 1,2    FREE DEFINABLE      JD-17
         BH    CDIINVO            INIT 4,5    NOT CHANGEABLE      JD-17
CTI3     LA    WC,INIT3DEF                                        JD-17
         B     CTITAG                                             JD-17
CTI6     LA    WC,INIT6DEF                                        JD-17
CTITAG   CLI   1(WA),C'T'                                         JD-17
         BNE   CTINACHT                                           JD-17
         LR    WA,WC                                              JD-17
         LA    WC,12                                              JD-17
         B     CDISING                                            JD-17
CTINACHT CLI   1(WA),C'N'                                         JD-17
         BNE   CDIINVO                                            JD-17
         LA    WA,9(WC)                             JD-17
         LA    WC,12                                              JD-17
INIT3DEF DC    CL18'31       NDC      '                           JD-17
INIT6DEF DC    CL18'6ABDC    NABD     '                           JD-17
*        $D U,DEV DISPLAY ONLY THIS DEVICE                        JD-32
CDU      BXH   WD,WE,CDUALL      ALL DEVICES IF NO SECOND OPERAND JD-32
         B     CDUONE            ELSE DISPLAY ONLY THE ONE        JD-32
CDUALL   L     R1,$DCTPOOL                                        JD-32
CDUONE   $CFDCTL POINTER=(WD)    FIND DCT FOR THE ONE UNIT        JD-32
         LTR   R1,R1             TEST IF FOUND                    JD-32
         BZ    CDRMNERR           ISSUE NOT FOUND                 JD-32
         $CFDCTD SYMBOL=CDLDCTD  DISPLAY DCT STATUS               JD-32
         B     CDLRET              AND NORMAL RETURN              JD-32
./ CHANGE NAME=HASPPRPU,SEQFLD=747,NEW=PS
         LA    PC1,JCTACCT                                        JD-01
         MVI   40(PC1),C' '                                       JD-01
         MVI   49(PC1),C' '                                       JD-01
         MVC   41(8,PC1),JCTJNAME                                 JD-01
         MVC   79(1,PC1),JCTPNAME+19  REMOTE-NR IN COL 80        JD-01
PBKSPCON DC    F'5'         BACKSPACE                             JD-28
         BO    *+12     BYPASS FORMS MOUNT IF YES                 V03.K
         TM    JCTFLAGS,JCTDSRT  TEST FOR DATASETROUTING          V03.K
         BO    *+8    BYPASS MESSAGE IF YES                       V03.K
         BZ    PFORMSRT            BRANCH IF PRINT                JD-25
PFORMSRT BAL   LINK,$QJITLOC       LOCATE JIT IN R0               JD-25
         PACK  PSTDMASK(3),JCTFORMS(5)  MOVE JOBFORMS TO WORKFIELDJD-25
         LR    R9,R0               PUT JIT ADDRESS IN R9          JD-25
         LA    LINK,20(R9)         GET ADDRESS OF END OF JIT      JD-25
         LA    R9,10(R9)           1ST 10 BYTES ARE RESERVED      JD-25
         MVC   0(10,R9),PJITMASK             CLEAR JIT            JD-25
         ST    R9,PFORMWRK         SAVE ADDRESS OF FORMS AREA     JD-25
         LR    PC1,R9              PUT IT INTO PC1 ALSO           JD-25
         LA    PW,JCTPDDB          GET START OF PDDBS             JD-25
PFORMGO  CLI   0(PW),0             LAST PDDB?                     JD-25
         BE    PFORMDNE            YES, PROCESS AND LEAVE         JD-25
         TM    0(PW),PDDBPRNT+PDDBLOG TEST IF PRINT OR LOG        JD-25
         BZ    PFORMNXT            NO, GO TRY NEXT ONE            JD-25
         TM    0(PW),PDDBFORM      FORMS DATA SET?                JD-25
         BZ    PFORMSTD            NO, GO TEST USING STD FORMS    JD-25
         PACK  PCCWORK(3),5(5,PW)  PUT FORMS IN WORK              JD-25
PFORMTST CLC   QUEFORMS(2,R1),PCCWORK TEST IF QUEFORMS            JD-25
         BE    PFORMNXT              YES, GO ON TO NEXT           JD-25
PFORMCHK CR    R9,PC1                TEST IF AT END               JD-25
         BE    PFORMPUT              YES, PUT THIS FORM IN JIT    JD-25
         CLC   0(2,PC1),PCCWORK      FORMS ALREADY IN JIT?        JD-25
         BE    PFORMNXT              YES, GO ON TO NEXT PDDB      JD-25
         LA    PC1,2(PC1)            MOVE OVER ONE FORM NUMBER    JD-25
         B     PFORMCHK              GO TRY NEXT SPOT             JD-25
PFORMPUT MVC   0(2,R9),PCCWORK       PUT IN NEW FORM NUMBER       JD-25
         LA    R9,2(R9)              MOVE OVER TO NEW SPOT        JD-25
         CR    R9,LINK               AT END OF JIT?               JD-25
         BNL   PFORMDNE              YES, PUT NO MORE IN JIT      JD-25
PFORMNXT L     PC1,PFORMWRK          RESTORE POINTER IF DESTROYED JD-25
         TM    0(PW),PDDBFORM        TEST IF FORMS SPECIFIED      JD-25
         LA    PW,5(PW)              MOVE AT LEAST 5 OVER         JD-25
         BZ    PFORMGO               GO PROCESS IF NO SPC FORMS   JD-25
         LA    PW,8(PW)              MOVE 8 MORE FOR SPEC FORMS   JD-25
         B     PFORMGO               GO PROCESS NEXT PDDB         JD-25
PFORMSTD MVC   PCCWORK(2),PSTDMASK   PUT SDT FORMS IN PCCWORK     JD-25
         B     PFORMTST              GO TEST JIT ENTRIES          JD-25
PFORMDNE LA    PW,$PRINT             PUT IN PRINT QUEUE           JD-25
         B     PREQUEUE              AND CONTINUE                 JD-25
PJITMASK DC    10X'EE'             MASK FOR JIT                   JD-25
PSTDMASK DC    X'234B00'     FIELD MAY CONTAIN JOBFORM IF NOT STD JD-25
PFORMWRK DS    F                     SAVE AREA                    JD-25
         L     PNP,PDCT           LOAD ADDRESS OF PRINT-DCT       JD-29
         USING DCTDSECT,PNP       ESTABLISH DCT-ADDRESSAILITY     JD-29
         MVC   JCTACCT+122(10),PRFORMCO  ASSUME FORM EQUAL STD.   JD-29
         CLI   DCTFORMS+1,X'4B'   TEST IF REALLY STANDARD-FORMS   JD-29
         BE    *+10               BRANCH IF YES                   JD-29
         UNPK  JCTACCT+127(5),DCTFORMS(3)  INSERT DCTFORM IN LINE JD-29
         MVI   JCTACCT+131,X'40'                           JD-29
         DROP  PNP                DROP BASE-REGISTER FOR DCT      JD-29
./ DELETE  SEQ1=2220000,SEQ2=2228000
         MVI   JCTACCT,C'.'                                       JD-07
         MVC   JCTACCT+1(121),JCTACCT                             JD-07
         MVC   JCTACCT+3(10),JCTPNAME+18                          JD-07
         MVI   JCTACCT+4,X'40'                                    JD-07
./ DELETE  SEQ1=2244000,SEQ2=2264000
         MVC   JCTACCT+65(31),PRACCC    KONST                     JD-07
         MVC   JCTACCT+70(2),JCTPNAME+8   UNIT                    JD-07
./ DELETE  SEQ1=2316000,SEQ2=2330000
         MVC   JCTACCT+73(3),JCTROOMN    DEP                      JD-07
         MVC   JCTACCT+77(1),JCTROOMN+3   GROUP                   JD-07
         MVC   JCTACCT+79(4),JCTACCTN    SEQ                      JD-07
         MVC   JCTACCT+84(8),JCTPNAME+10  ABLAUF                  JD-07
         MVC   JCTACCT+93(2),JCTPNAME+18  T OR P                  JD-07
         MVC   JCTACCT+96(8),JCTPNAME    NAME                     JD-07
         CLI   JCTPNAME+18,C'T'                                   JD-07
         BNE   PRIDOUT                                            JD-07
         MVC   JCTACCT(4),TESTCON                                 JD-07
         CLI   JCTPNAME+19,C'1'     SEPARATOR NOT REMOTE 1        JD-27
         BE    PRNOID                                             JD-27
PRFORMCO DC    C'FORM STD. '                                      JD-29
TESTCON  DC    C'TEST'                                            JD-07
PRACCC   DC    C'ACCT   ,   , ,    ,        ,  ,'                 JD-07
PTIMASK  DC    X'21204B20204B202040404040212040404040402120' TIMEMASK
./ CHANGE NAME=HASPNUC,SEQFLD=747,NEW=PS
         ENTRY $POINTER                                           JD-03
         EXTRN $PITABLE,$JOBQUE                                   JD-03
$POINTER DC    A($PITABLE)                                        JD-03
         DC    A($JQENT)                                          JD-03
         DC    A($PCEORG)                                         JD-03
         DC    A(0)                                               JD-03
         DC    A($JITABLE)                                        JD-03
         DC    A($JOBQUE)                                         JD-03
         DC    A(&JITSIZE)                                        JD-03
         DC    A($ALSTATB)                                        JD-03
.QPURGE2 MVI   QUEFORMS(WB),X'23'     FORCE STANDARD  PRINT/PUNCH JD-25
         MVI   QUEFORMS+1(WB),X'4B'        FORMS FOR PURGE-JOB    JD-25
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   JD-25
* THIS ROUTINE WILL LOOK IN THE JIT TO SEE IF THE SPECIFIED PRT   JD-25
* FORMS ARE REALLY CONTAINED IN THE JOB. THE JIT IS FILLED WITH   JD-25
* THE FORMS FOR THE JOB BY THE END OF EXEC ROUTINE AND THE PRINT  JD-25
* PROCESSOR.                                                      JD-25
         TM    PCER1+2,8           TEST FOR PRINT REQUEST         JD-25
         BZ    QTEST2GO            NO, SKIP CHECK OF JIT.         JD-25
         STM   R0,WB,QSAVE         SAVE REGS                      JD-25
         ST    LINK,QSAVLINK       SAVE RETURN                    JD-25
         BAL   LINK,QJITLOC        LOCATE THE JIT ENTRY           JD-25
         L     LINK,QSAVLINK       RESTORE RETURN                 JD-25
         LR    R9,R0              PUT JIT ADDRESS IN R9           JD-25
         LA    WA,20(R9)           POINT WA TO END OF JIT         JD-25
         LA    R9,10(R9)           SKIP 1ST 10 BYTES - RESERVED   JD-25
QTEST2A  CR    R9,WA              TEST IF AT END OF JIT?          JD-25
         BNL   QTEST2ED            YES, NO MATCH IN JIT           JD-25
         CLI   0(R9),X'EE'         CHECK IF NULL ENTRY            JD-25
         BE    QTEST2ED            YES, NO MATCH IN JIT           JD-25
         CLC   0(2,R9),PCER0+2     TEST IF SPECIFIED FORMS        JD-25
         BE    QTEST2B             YES, PROCESS FORMS             JD-25
         LA    R9,2(R9)            MOVE TO NEXT FORM IN JIT       JD-25
         B     QTEST2A             GO TRY NEXT FORM               JD-25
QTEST2B  MVC   QSAVLINK(2),QUEFORMS(R1)  SAVE FORMS               JD-25
         MVC   QUEFORMS(2,R1),0(R9) MOVE FORMS TO QUEFORMS        JD-25
         MVC   0(2,R9),QSAVLINK       MOVE SAVED TO JIT           JD-25
QTEST2ED LM    R0,WB,QSAVE         RESTORE REGISTERS              JD-25
         CLC   QUEFORMS(2,R1),PCER0+2 COMPARE FORMS AGAIN         JD-25
         BCR   E,WA                RETURN IF EQUAL                JD-25
QTEST2GO EQU   *                                                  JD-25
QSAVE    DS    4F                                                 JD-25
QSAVLINK DS    F                                                  JD-25
./ CHANGE NAME=HASPCON,SEQFLD=747,NEW=PS
         DC    CL8'IEF236I',A(WIGNORE)                            JD-02
         DC    CL8'IEF237I',A(WIGNORE)                            JD-02
         DC    CL8'IEF403I ',A(WIGNORE)    JOB STARTED            JD-02
         DC    CL8'IEF404I ',A(WIGNORE)    JOB ENDED              JD-02
         DC    CL8'IEE111I ',A(WIGNORE)    NO OUTSTANDING REPLY   JD-02
         DC    CL8'XXXXXXXX',A(WIGNORE)    RESERVED               JD-02
WIGNORE  BR    R14                                                JD-02
         MVC   WTOMSG(2),CMBMSG                                   JD-30
         SH    WA,=H'9'                                           JD-30
         MVC   WTOMSG+2(*-*),CMBMSG+10                            JD-30
./ CHANGE NAME=HASPXEQ,SEQFLD=747,NEW=PS
PDDBROUT EQU   X'01'                 DATA SET ROUTING TYPE        JD-25
PDDBPRNT EQU   X'02'                 PRINTER TYPE                 JD-25
PDDBPNCH EQU   X'04'                 PUNCH TYPE                   JD-25
PDDBLOG  EQU   X'10'                 LOG TYPE                     JD-25
PDDBNULL EQU   X'40'                 NULL TYPE                    JD-25
PDDBFORM EQU   X'80'                 SPECIAL FORMS TYPE           JD-25
         MVC   XALJNAME+1,JCTJNAME  MOVE IN JOB NAME              JD-26
         STM   R1,R15,XSAVREGS       SAVE REGISTERS EXCEPT R0     JD-26
         LA    R1,2                  ASK FOR PACKED DECIMAL TIME  JD-26
         L     R3,$CVTPTR            CVT ADDRESS FOR TIMER        JD-26
         L     R6,$TIMENT            TIMER'S ADDRESS              JD-26
         BALR  R14,R6                GET THE TIME                 JD-26
         USING *,R14                                              JD-26
         LM    R1,R15,XSAVREGS       RESTORE REGISTERS            JD-26
         DROP  R14                                                JD-26
         ST    R0,XSAVREGS           STORE PACKED TIME            JD-26
         MVC   XALTIME(10),=X'4021204B20204B202040' EDIT PATTERN  JD-26
         ED    XALTIME(10),XSAVREGS  EDIT IN TIME                 JD-26
         $WTO  XALMES,L'XALMES+L'XALJNAME+L'XALTIME,   EOJ        JD-26C
               ROUTE=$LOG+$MAIN+$TAPE,CLASS=$NORMAL,PRI=$HI,      JD-26C
               JOB=YES                                            JD-26
         L     R1,XPCEJOB         GET JOBQUE ENTRY                JD-26
         CLI   QUEPRTRT(R1),1     CHECK IF FROM RMT1              JD-26
         BE    XRCON1             YES, SKIP SENDING MESSAGE       JD-26
         SR    LINK,LINK          CLEAR FOR WORK REG              JD-26
         IC    LINK,QUEPRTRT(R1)    PICK UP PRINT ROUTE           JD-26
         LTR   LINK,LINK          TEST IF ROUTED LOCAL            JD-26
         BZ    XRCON1             YES, DO NOT SEND MESSAGE        JD-26
         SLL   LINK,8             SHIFT THE REMOTE NUMBER         JD-26
         LA    R0,L'XALJNAME+L'XALMES+L'XALTIME(,LINK) GET LENGTH JD-26
         $WTO  XALMES,(R0),ROUTE=$REMOTE,WAIT=NO                  JD-26
XRCON1   EQU   *                                                  JD-26
XALJNAME DC    CL9' '                                             JD-26
XALTIME  DC    CL10' '               TIME STAMP                   JD-26
XSAVREGS DC    15F'0'       SAVE AREA FOR REGISTERS               JD-26
XCLASTBL DS    0F                                                JD-36
CLASSAA  DC    C'A'          SHARED-CLASS A                      JD-36
         DC    AL1(CLASSAE+1-CLASSAA)  LENGHT OF TABLE           JD-36
         DC    AL1(4),AL1(6),AL1(0)       A                      JD-36
         DC    C'012345'                  A-REMOTES              JD-36
CLASSAE  DC    X'FF'                                             JD-36
CLASSBA  DC    C'B'          SHARED-CLASS B                      JD-36
         DC    AL1(CLASSBE+1-CLASSBA)  LENGHT OF TABLE           JD-36
         DC    AL1(4),AL1(6),AL1(0)       B                      JD-36
         DC    C'012345'                  B-REMOTES              JD-36
CLASSBE  DC    X'FF'                                             JD-36
CLASSCA  DC    C'C'          SHARED-CLASS C                      JD-36
         DC    AL1(CLASSCE+1-CLASSCA)  LENGHT OF TABLE           JD-36
         DC    AL1(4),AL1(7),AL1(0)       C                      JD-36
         DC    C'5012534'                 C-REMOTES              JD-36
CLASSCE  DC    X'FF'                                             JD-36
CLASSDA  DC    C'D'          SHARED-CLASS D                      JD-36
         DC    AL1(CLASSDE+1-CLASSDA)  LENGHT OF TABLE           JD-36
         DC    AL1(4),AL1(6),AL1(0)       D                      JD-36
         DC    C'543210'                  D-REMOTES              JD-36
CLASSDE  DC    X'FF'                                             JD-36
CLASS1A  DC    C'*'   SHARED CLASS RESERVED FOR CLASS 1          JD-36
         DC    AL1(CLASS1E+1-CLASS1A)  LENGHT OF TABLE           JD-36
         DC    AL1(4),AL1(3),AL1(0)       1                      JD-36
         DC    C'130130'                  1-REMOTES              JD-36
CLASS1E  DC    X'FF'                                             JD-36
         DC    X'FFFFFFFF'                                       JD-36
XSAVRSHR DS    4F                                                JD-36
XGETJOB2 NULL                                                    JD-36
         LA    R15,XCLASTBL     LOAD START OF SHR-TABLE          JD-36
         STC   R1,XCLASTST+1    INSERT CLASS IN COMPARE          JD-36
         OI    XCLASTST+1,X'80'                                  JD-36
XCLASTST CLI   0(R15),X'00'     TABLE FOR THIS CLASS?            JD-36
         BE    XCLASFD1         CLASS IS SHARED                  JD-36
         SR    R14,R14                                           JD-36
         IC    R14,1(R15)       INSERT LENGHT OF TABLE           JD-36
         ALR   R15,R14          ADDRESS OF NEXT SHRCLASSTABLE    JD-36
         CLI   0(R15),X'FF'     LAST SHR-CLASS TESTED            JD-36
         BNE   XCLASTST         BRANCH IF NOT                    JD-36
         B     XNOSHRCL         NO SHR-CLASS, CONT NORMAL QGET   JD-36
         SPACE
XSHRNOJ  LR    R1,R5            RELOAD REGISTER 1                JD-36
         SR    R14,R14                                           JD-36
         IC    R14,4(R4)        LOAD CURRENT CYCLE-COUNTER       JD-36
         LA    R14,1(R14)       INCREASE BY 1                    JD-36
         STC   R14,4(R4)        SAVE COUNTER                     JD-36
         CLC   4(1,R4),3(R4)    COMPARE COUNTER IF MINIMUM       JD-36
         BNH   XCLASFD2         BRANCH IF NOT REACHED            JD-36
         LM    R2,R5,XSAVRSHR   RELOAD WORKREGISTER              JD-36
         B     XGETJOB          CONT NORMAL, NO JOB FOR SHRCLASS JD-36
XCLASFD1 STM   R2,R5,XSAVRSHR   SAVE WORKREGISTER                JD-36
         LR    R5,R1            SAVE REGISTER 1                  JD-36
         LR    R4,R15           SAVE CLASSTABLE                  JD-36
         MVI   4(R4),X'00'    SET TEMPORARY TESTCOUNT TO ZERO    JD-36
*                                                                JD-36
XCLASFD2 SR    R14,R14                                           JD-36
         IC    R14,2(R4)        LOAD LAST TESTED ENTRY           JD-36
         LA    R14,1(R14)       INCREASE BY ONE                  JD-36
         STC   R14,2(R4)        SAVE IT                          JD-36
         ALR   R14,R4           LOAD ADDRESS OF REMOTENR         JD-36
         CLI   0(R14),X'FF'     LAST IN TABLE                    JD-36
         BNE   XQGETSHR         BRANCH IF NOT                    JD-36
         MVI   2(R4),X'04'      RESET TO FIRST ENTRY - 1         JD-36
         B     XCLASFD2         CONTINUE SEARCH AT TABLESTART    JD-36
*                                                                JD-36
XQGETSHR SR    R0,R0                                             JD-36
         IC    R0,0(R14)        LOAD REMOTE-NR                   JD-36
         SLL   R0,28            SHIFT IT TO                      JD-36
         SRL   R0,4                PRINT-ROUTE-CODE              JD-36
         O     R1,XSCMASK       SET PRINT-ROUTE-TEST-BIT ON      JD-36
         $QGET (R1),XSHRNOJ,OLAY=YES                             JD-36
         LM    R2,R5,XSAVRSHR   RELOAD WORKREGISTER              JD-36
         B     XGJCONT          AND CONTINUE NORMAL              JD-36
XNOSHRCL $QGET (R1),XGETJOB,OLAY=YES                             JD-36
XGJCONT  NULL                                                    JD-36
XSCMASK  DS    0F                                                JD-36
         DC    X'00000800'                                       JD-36
         MVC   XONMES1+1(2),PITPATID(WD)   SET PARTITION ID       JD-26
         MVC   XONMES1+11(1),QUETYPE(R1)    SET CLASS             JD-26
         STM   R1,R15,XSAVREG2       SAVE R1 TO R15               JD-26
         LA    R1,2                  ASK FOR PACKED DECIMAL       JD-26
         L     R3,$CVTPTR            CVT ADDRESS FOR TIMER        JD-26
         L     R6,$TIMENT            TIMER'S ADDRESS              JD-26
         BALR  R14,R6                GET THE TIME                 JD-26
         USING *,R14                                              JD-26
         LM    R1,R15,XSAVREG2       RESTORE                      JD-26
         DROP  R14                                                JD-26
         ST    R0,XSAVREG2           STORE PACKED TIME            JD-26
         MVC   XONMES1+17(10),=X'4021204B20204B202040'            JD-26
         ED    XONMES1+17(10),XSAVREG2         EDIT  IN  TIME     JD-26
         MVI   XONMES1+17,C'='                                    JD-26
               ROUTE=$LOG+$MAIN+$TAPE,CLASS=$NORMAL,PRI=$HI,      JD-26C
               JOB=YES                                            JD-26
XONMES   DC    C'-- JCTJNAME -- START EXEC - '                    JD-26
XONMES1  DC    C'P  - CLASS=B TIME=XX.XX.XX '                     JD-26
XSAVREG2 DC    15F'0'                                             JD-26
         L     R1,XPCEJOB         GET JOBQUE ENTRY ADD IN R1      JD-26
         CLI   QUEPRTRT(R1),1     TEST IF FOR RMT1                JD-26
         BE    XRCON2               YES, DO NOT SEND IT           JD-26
         SR    LINK,LINK          CLEAR LINK TO USE               JD-26
         IC    LINK,QUEPRTRT(R1)   PICK UP PRINT ROUTING          JD-26
         LTR   LINK,LINK           PRINT ROUTED LOCAL?            JD-26
         BZ    XRCON2             ROUTED LOCAL THEN DO NOT SEND   JD-26
         SLL   LINK,8              SHIFT ROUTING OVER             JD-26
         LA    R0,L'XONMES+L'XONMES1(,LINK) GET LENGTH            JD-26
         $WTO  XONMES,(R0),ROUTE=$REMOTE,WAIT=NO                  JD-26
XRCON2   EQU   *                                                  JD-26
XBACHJCL DS    0CL58                                              JD-31
         DC    X'5000',C'//&XBATCHN.XXX JOB '                     JD-31
         DC    C'(47,670,8,492A,FM01A001,P0),MSGLEVEL=1   '       JD-31
*    ***********
*    ***********
*    ***********
XFPRMSRT LR    R1,WB                 PUT JOBQUE IN R1             JD-25
         BAL   LINK,$QJITLOC         LOCATE JIT IN R0             JD-25
         LR    R9,R0                PUT JIT ADDRESS IN R9         JD-25
         LA    LINK,20(R9)           GET ADDRESS OF END OF JIT    JD-25
         LA    R9,10(R9)             1ST 10 BYTES ARE RESERVED    JD-25
         MVC   0(10,R9),XJITMASK           CLEAR JIT              JD-25
         ST    R9,XFORMWRK           SAVE ADDRESS OF FORMS AREA   JD-25
         MVC   0(4,LINK),JCTLINES    MOVE LINES GENERATED TO JIT JD-24
         LR    R1,R9                 PUT IT INTO R1 ALSO          JD-25
         LA    WA,JCTPDDB         GET START OF PDDBS              JD-25
XFORMGO  CLI   0(WA),0               LAST PDDB?                   JD-25
         BE    XFORMDNE              YES, FINISH AND LEAVE        JD-25
         TM    0(WA),PDDBPRNT+PDDBLOG TEST IF PRINT OF LOG        JD-25
         BZ    XFORMNXT              NO, GO ON TO PDDB            JD-25
         OI    0(WA),PDDBROUT        MAKE IT A ROUTED DATA SET    JD-25
         TM    0(WA),PDDBFORM        FORMS DATA SET?              JD-25
         BZ    XFORMSTD              NO, GO TEST USING STD.       JD-25
         PACK  XPACKWRK(3),5(5,WA)   PACK FORMS INTO WORK         JD-25
         CLC   XPACKWRK(2),XNULFORM   TEST IF FORM 0000 IN PDDB   JD-25
         BNE   XFORMTST               BRANCH IF REGULAR FORMS     JD-25
         MVC   5(4,WA),JCTFORMS       MOVE JOBFORMS TO PDDB       JD-25
         B     XFORMSTD               AND TAKE IT AS JOBSTANDARD  JD-25
XFORMTST CLC   QUEFORMS(2,WB),XPACKWRK TEST IF QUEFORMS           JD-25
         BE    XFORMNXT              YES, GO ON TO NEXT PDDB      JD-25
XFORMCHK CR    R9,R1                 TEST IF AT END               JD-25
         BE    XFORMPUT              YES, PUT THIS FORM IN JCT    JD-25
         CLC   0(2,R1),XPACKWRK      FORMS ALREADY IN JIT?        JD-25
         BE    XFORMNXT              YES, GO ON TO NEXT PDDB      JD-25
         LA    R1,2(R1)              MOVE OVER ONE FORM IN JIT    JD-25
         B     XFORMCHK              GO TRY NEXT SPOT             JD-25
XFORMPUT MVC   0(2,R9),XPACKWRK      PUT IN NEW FORM NUMBER       JD-25
         LA    R9,2(R9)              MOVE OVER TO NEW SPOT        JD-25
         CR    R9,LINK               AT END OF JIT?               JD-25
XFORMNXT L     R1,XFORMWRK           RESTORE POINTER IF DESTROYED JD-25
         TM    0(WA),PDDBFORM        TEST IF FORMS SPECIFIED      JD-25
         LA    WA,5(WA)              MOVE AT LEAST 5 OVER         JD-25
         BZ    XFORMGO               GO PROCESS IF NO FORMS       JD-25
         LA    WA,8(WA)              MOVE 8 MORE FOR SPEC FORMS   JD-25
         B     XFORMGO               GO PROCESS NEXT PDDB         JD-25
XFORMSTD MVC   XPACKWRK(2),QUEFORMS(WB) MAKE IT JOB-STD-FORMS     JD-25
         B     XFORMTST              GO TEST JIT                  JD-25
XFORMDNE OI    JCTFLAGS,JCTDSRT      MAKE DAT SET ROUTE ONLY      JD-25
         L     R1,XPCEDCT           RELOAD  ADDRESS OF DCT        JD-25
*   ***********SCHEISS-UPDATE
*   ***********SCHEISS-UPDATE
XPACKWRK DS    CL3                   WORK AREA                    JD-25
XJITMASK DC    10X'EE'           JIT EMPTY-MASK                   JD-25
XNULFORM DC    X'0000'        NULL   FORMS CODE                   JD-25
XFORMWRK DS    F                     SAVE AREA                    JD-25
