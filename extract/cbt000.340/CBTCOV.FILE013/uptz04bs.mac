**********************************************************************
*  ASSEMBLER-ROUTINE  M O D I F Y                                    *
*  DIE ROUTINE ERMOEGLICHT ES, DIE ENTGEGENNAHME BZW. ABWEISUNG      *
*  VON 'MODIFY'-OPERATOR-COMMANDS ZU STEUERN.                        *
*  DIE ROUTINE ERWARTET VOM AUFRUFENDEN (PL1-)PROGRAMM FOLGENDE      *
*  PARAMETER (IM AUFRUFENDEN PROGRAMM VEREINBARTE FELDER) :          *
*     1. PARAMETER ENTHAELT EINEN FUNKTIONS-CODE                     *
*        ER KANN ALS DIREKTWERT UEBERGEBEN WERDEN                    *
*        FUNKTIONS-CODES :                                           *
*      'MODIFY' MUSS DER ERSTE AUFRUF SEIN.	 DABEI WIRD DIE          *
*               ADRESSE DES COMM-ECB'S UND DES CIB GEHOLT, EIN EVTL. *
*               VORHANDENER START-COMMAND-CIB FREIGEGEBEN UND        *
*               DER CIB-COUNTER AUF '1' GESETZT. DANACH KOENNEN      *
*               VON DER KONSOLE AUS 'MODIFY'-COMMANDS EINGEGEBEN     *
*               WERDEN.                                              *
*               DIESER FUNKTIONS-CODE KANN AUCH VERWENDET WERDEN     *
*               NACHDEM DIE FUNKTION 'NOMOD' AUFGERUFEN WURDE. IN    *
*               DIESEM FALL KOENNEN VON DIESEM ZEITPUNKT AN WIEDER   *
*               'MODIFY'-COMMANDS VON DER KONSOLE AUS EINGEGEBEN     *
*               WERDEN.
*               RC '0' : O.K.                                        *
*               RC '5' : KEIN ENTSPRECHENDER CSCB GEFUNDEN           *
*               RC '6' : FREE-CIB NICHT ERFOLGREICH                  *
*               RC '7' : FREIZUGEBENDEER CIB KEIN 'START-CIB'        *
*               RC '8' : UPDATE CIB-COUNTER NICHT ERFOLGREICH        *
*        'TEST' PRUEFT, OB EIN 'MODIFY'-COMMAND EINGEGEBEN WURDE.    *
*               WENN JA, SO WERDEN DIE UEBER DIE OPERATOR-KONSOLE    *
*               EINGEGEBENEN WERTE IM ZWEITEN PARAMETER AN DAS       *
*               RUFENDE PROGRAMM ZURUECKGEGEBEN.                     *
*               DER CIB WIRD DABEI FREIGEGEBEN. ES KOENNEN ALSO      *
*               DANACH WEITERE 'F'-COMMANDS EINGEGEBEN WERDEN.       *
*               RC '0' : MODIFY WURDE EINGEGEBEN                     *
*               RC '4' : KEIN MODIFY EINGEGEBEN                      *
*               RC '6' : FREE CIB NICHT ERFOLGREICH                  *
*        'NOMOD' BEENDET DIE MOEGLICHKEIT, 'MODIFY'-COMMANDS         *
*               EINZUGEBEN, INDEM DER CIB-COUNTER AUF 0 GESETZT WIRD.*
*               RC '0' : O.K.                                        *
*               RC '8' : UPDATE CIB-COUNTER NICHT ERFOLGREICH        *
*                                                                    *
*          BEI ANDEREN ALS DEN O.A. FUNKTIONEN WIRD RC ='9'          *
*          ZURUECKGEGEBEN.
*                                                                    *
*     2. PARAMETER ENTHAELT DIE ADRESSE DER USER-AREA                *
*        IN DIESEM FELD WIRD DER O.A. RETURN-CODE (1 BYTE) ZURUECK-  *
*        GEGEBEN. BEI DER FUNKTION 'TEST' WIRD DER DURCH DEN MODIFY- *
*        COMMAND EINGEGEBENE WERT IN DIESER USER-AREA IM ANSCHLUSS   *
*        AN DEN RETURN-CODE ZURUECKGEGEBEN.                          *
*        DER USER HAT DARAUF ZU ACHTEN, DASS DIESE AREA GROSS GENUG  *
*        IST, DEN KONSOL-INPUT AUFZUNEHMEN.                          *
**********************************************************************
         PRINT GEN
MODIFY      CSECT
* ------------------------------------------------------------
FUNKTION DSECT                       1. PARAMETER = FUNKTION
FUNK     DS    CL1
* ------------------------------------------------------------
AREA     DSECT                       2. PARAMETER = USER-AREA
RETCODE  DS    CL1                      RETURN-CODE
INPUT    DS    CL1                      KONSOL-EINGABE
* ------------------------------------------------------------
CIB      DSECT                       COMMAND INPUT BLOCK
         DS    CL4
VERBCODE DS    CL1
CSTART   EQU   X'04'                 START-COMMAND-CIB
CMODIFY  EQU   X'44'                 MODIFY-COMMAND-CIB
CSTOP    EQU   X'40'                 STOP-COMMAND-CIB
CMOUNT   EQU   X'0C'                 MOUNT-COMMAND-CIB
         DS    CL9
LENGTH   DS    CL2                   BINAERE LAENGE
DATA     DS    CL1                   DATEN
* ------------------------------------------------------------
R1       EQU   1   ENTHAELT PARAMETERLISTE DES RUFENDEN PROGRAMMS
R2       EQU   2   RECHENREGISTER
R3       EQU   3   BASIS FUER FUNKTION
R4       EQU   4   BASIS FUER AREA
R5       EQU   5   BASIS FUER CIB / A(CIBADR) / A(CIBDUM) / A(CIBPTR)
R12      EQU   12  BASISREGISTER
R13      EQU   13
R14      EQU   14
R15      EQU   15
* ------------------------------------------------------------
MODIFY     CSECT
         B     12(R15)
         DC    CL8'MODIFY'
* ADRESSIERBARKEIT HERSTELLEN UND LINKAGE *********
         STM   R14,R12,12(R13)
         LR    R12,R15
         USING *-18,R12
         LA    14,SAVEA
         ST    13,4(14)
         ST    14,8(13)
         LR    13,14
*
         L     R3,0(0,R1)         1. PARAMETER = A(FUNKTION)
         L     R4,4(0,R1)         2. PARAMETER = A(USER-AREA)
*
         USING FUNKTION,R3
         USING AREA,R4
         USING CIB,R5
*
***********************************************************************
*
         CLC   FUNK(4),=C'TEST'   GEWUENSCHTE FUNKTION
         BE    TEST
         CLC   FUNK(6),=C'MODIFY'
         BE    INIT
         CLC   FUNK(5),=C'NOMOD'
         BE    CIBCTR0
         B     RC9                 UNGUELTIGE FUNKTION
*
**********************************************************************
* INIT
**********************************************************************
INIT     NOP   CIBCTR1                   INIT WIRD NUR BEIM ERSTEN MAL
*                                                      DURCHLAUFEN
**********************************************************************
*    ADRESSE DES COMM-ECB UND DES CIB HOLEN
**********************************************************************
         EXTRACT ANSWADR,FIELDS=COMM    ADR. DER COMM.-AREA
         L     R2,ANSWADR               ADR. DES POINTERS
         MVC   ECBADR,0(R2)             ADR. DES ECB IM 1. WORT
         MVC   CIBADR,4(R2)             ADR. DES CIB IM 2. WORT
**********************************************************************
*    BEREITSTELLEN DER ADRESSE DES CIB-POINTERS (IM CSCB)
*    DIESE ADRESSE (CIBDUM) WIRD IM QEDIT-MACRO ANGEGEBEN.
*    DAMIT KANN DER CODING-FEHLER IM SVC34 UMGANGEN WERDEN
**********************************************************************
         SR    R5,R5                                   DURCHLAUFEN
         L     R5,16(0,5)                LADEN A(CVT)      16=X'10'
         L     R5,148(0,5)               LADEN A(MSRDA)    148=X'94'
         L     R5,0(0,5)                 LADEN A(CSCB)
*              RICHTIGEN CSCB (COMMAND-SCHEDULING-CONTROLL-BLOCK)
*              FINDEN UND ADRESSE DES CIB-POINTERS RETTEN
TESTCSCB LTR   R5,R5                     A(CSCB) = 0 ?
         BZ    RC5                       KEIN CSCB GEFUNDEN  - RC ='5'
         CLC   40(4,R5),ECBADR           RICHTIGER CSCB ?
         BE    STCIBDUM                  WENN JA, ADRESSE LADEN
         L     R5,0(0,5)                 LADEN A(NEXT CSCB)
         B     TESTCSCB                  REPEAT
STCIBDUM LA    R5,44(R5)                 LADEN A(CIBPTR)  44=X'2C'
         ST    R5,CIBDUM                 STORE A(CIBPTR) NACH CIBDUM
**********************************************************************
*   FREE CIB   (EVTL.VORHANDENEN START-CIB FREIGEBEN)                *
**********************************************************************
         L     R5,CIBADR                LADEN A(CIB)
         LTR   R5,R5                    CIBADR = 0
         BZ    NOCONS                   NOCH KEIN CIB VORHANDEN
         TM    VERBCODE,CSTART          START-COMMAND-CIB ?
         BNO   RC7           RC = '7'   ES DARF NUR EIN START-COMMAND-
*                                       CIB FREIGEGEBEN WERDEN
         L     R5,CIBDUM                LADEN A(CIBPTR)
*        -     ---------      GELADEN WIRD EINE ADRESSE, DIE IM SVC34
*                             FAELSCHLICHERWEISE BENOETIGT WIRD
         QEDIT ORIGIN=(R5)              START-COMMAND-CIB FREIGEBEN
         LTR   R15,R15
         BNZ   RC6                      RC = '6'
NOCONS   EQU   *
         MVI   INIT+1,X'F0'             SCHALTER SETZEN, DAMIT DER
*                                       CODE VON INIT BIS HIER NUR BEIM
*                                       ERSTEN MAL DURCHLAUFEN WIRD
**********************************************************************
* MODIFY                                                             *
**********************************************************************
CIBCTR1  L     R5,CIBDUM                LADEN A(CIBPTR)
*        -     ---------      GELADEN WIRD EINE ADRESSE, DIE IM SVC34
*                             FAELSCHLICHERWEISE BENOETIGT WIRD
         QEDIT ORIGIN=(R5),CIBCTR=1     CIB-ZAEHLER HOCHSETZEN
         LTR   R15,R15                  ES KANN NUR JEWEILS 1 MODIFY-
*                                       COMMAND VOR 'FREE CIB'
         BNZ   RC8           RC = '8'   EINGEGEBEN WERDEN
*              ECB- ADRESSE MUSS NEU GEHOLT WERDEN
         EXTRACT ANSWADR,FIELDS=COMM    ADR. DER COMM.-AREA
         L     R2,ANSWADR               ADR. DES POINTERS
         MVC   ECBADR,0(R2)             ADR. DES ECB IM 1. WORT
*
         B     RC0
**********************************************************************
*                                                                    *
**********************************************************************
*   TEST                                                             *
**********************************************************************
TEST     L     R2,ECBADR                LADEN ADR. ECB
         TM    0(R2),X'40'              COMM-ECB POSTED ?
         BNO   RC4                      MODIFY WURDE NICHT EINGEGEBEN
         WAIT  ECB=(R2)                 WAIT COMM-ECB
*              DA DER CIB ERST DURCH DEN MODIFY-COMMAND AUFGEBAUT
*              WIRD, MUSS DIE CIB- ADRESSE (ERNEUT) GEHOLT WERDEN
         EXTRACT ANSWADR,FIELDS=COMM    ADR. DER COMM.-AREA
         L     R2,ANSWADR               ADR. DES POINTERS
         MVC   CIBADR,4(R2)             ADR. DES CIB IM 2. WORT
         L     R5,CIBADR                LADEN CIB-ADRESSE
         CLI   VERBCODE,X'44'           MODIFY-COMMAND?
         BNE   RC4                      NEIN
         L     R5,CIBADR                LADEN CIB-ADRESSE
         LH    R2,LENGTH                LAENGE DER DATEN
         BCTR  R2,0
         EX    R2,EXMOVE                DATEN UEBERTRAGEN
*              DER CIB FREIGEGEBEN WERDEN. DANACH KANN ERNEUT EIN
*              MODIFY-COMMAND GEGEBEN WERDEN
         L     R5,CIBDUM                LADEN A(CIBPTR)
         QEDIT ORIGIN=(R5)              CIB FREIGEBEN UND
         LTR   R15,R15                  CLEAR COMM-ECB
         BNZ   RC6                      RC = '6'
*
         B     RC0                      RC = '0'
*
**********************************************************************
* NOMOD                                                             *
**********************************************************************
CIBCTR0  L     R5,CIBDUM                LADEN A(CIBPTR)
         QEDIT ORIGIN=(R5),CIBCTR=0     CIB-ZAEHLER AUF 0 SETZEN
         LTR   R15,R15
         BNZ   RC8                      RC = '8'
         B     RC0                      RC = '0'
*
**********************************************************************
*   RETURN-CODES                                                     *
**********************************************************************
RC0      MVI   RETCODE,C'0'   O.K
         B     ENDE
RC4      MVI   RETCODE,C'4'   KEIN MODIFY EINGEGEBEN
         B     ENDE
RC5      MVI   RETCODE,C'5'   KEIN CSCB GEFUNDEN
         B     ENDE
RC6      MVI   RETCODE,C'6'   FREE CIB NICHT ERFOLGREICH
         B     ENDE
RC7      MVI   RETCODE,C'7'   FREIZUGEBENDER CIB KEIN START-CIB
         B     ENDE
RC8      MVI   RETCODE,C'8'   UPDATE CIB-COUNTER NICHT ERFOLGREICH
         B     ENDE
RC9      MVI   RETCODE,C'9'   UNGUELTIGE FUNKTION
         B     ENDE
***********************************************************************
*  RUECKSPRUNG INS RUFENDE PROGRAMM    ****************************
ENDE        DS     0H
            L      R13,4(R13)
            RETURN (14,12),RC=0
*
*  KONSTANTEN UND DEFINITIONEN ************************************
            DS   0F
SAVEA       DC   18F'0'
*
ANSWADR  DS    F                        ADR. POINTER COMM.-AREA
ECBADR   DS    F                        ECB-ADRESSE
CIBADR   DS    F                        CIB-ADRESSE
CIBDUM   DS    F                        ADR. D. CIB-POINTERS IM CSCB
*
EXMOVE   MVC   INPUT(0),DATA
*
            LTORG
            END
