         TITLE '***** INITIALISIERUNG DES SPIE *****'
HEWSPIE  CSECT
         B     32(15)                  BRANCH UM ID
*.X.X.X.X.X.X.X.X.X.X.X.X LOADMODULE ID 28 BYTES .X.X.X.X.X.X.X.X.X.X.X
         DC    CL4'HEW '               FILLER
         DC    CL8'HEWSPIE' .           CSECT NAME
         DC    CL16'D03/07/77 T10.17'      DATUM UND ZEIT DER ASS.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
*                                                                     *
* SICHERSTELLEN DER REGISTER-INHALTE UND LADEN DER BASIS-GRUNDADRESSE.*
*                                                                     *
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
         DS    0D
         DS    0H
         STM   14,12,12(13)                      SAVE REGISTERS
         BALR  12,0
         USING *,12
         DS    0H
         MVC   8(4,13),*+18
         ST    13,*+20
         LA    13,*+12
         B     *+80
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
*                                                                     *
* SAVE-ADRESSKONSTANTE.                                               *
*                                                                     *
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
         DC    A(*+4)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
*                                                                     *
* SAVE-BEREICH.                                                       *
*                                                                     *
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
         DC    18F'0'
**********************  GENERELLE REGISTER EQUS ***********************
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
          EJECT
********
*** HOECHSTE UND NIEDRIGSTE MASCHINENADRESSE SPEICHERN
********
         LA    R2,16          POINTER AUF CVT
         L     R2,0(R2)       CVT-ADR
         LA    R2,128(R2)     CVTNUCB-ADR
         L     R3,0(R2)       INHALT LADEN
         ST    R3,LOWADR      =LOWEST ADDRESS NOT IN NUCLEUS.
         LA    R2,36(R2)      CVTMZ00-ADR
         L     R3,0(R2)       INHALT LADEN
         ST    R3,HIGHADR     =HIGHEST MACHINE-ADDRESS.
********
*** PARAMETER-ADRESSEN PRUEFEN UND SPEICHERN
********
         NI    SPIEMERK,LOESCH         LOESCHEN
         XC    PARAM1,PARAM1          "
         XC    PARAM2,PARAM2          "
*** PRUEFEN, OB ADR DER PARAM-LIST INNERHALB LOW UND HIGH
         MVI   VLMERK,C' '             LOESCHEN
         LA    R1,0(R1)                CLAER
         ST    R1,ADRPRUEF             ADR PARAMLISTE
         BAL   R14,UADR                PRUEFEN
         TM    ADRPRUEF,NOPARM         GUELTIG?
         BO    P010                    WENN NEIN
*** PRUEFEN OB ADR 1.PARAM GUELTIG, UND OB NUR EIN PARAM.
         L     R4,0(R1)       1.PARAM-ADR
         ST    R4,ADRPRUEF    IN PRUEFFELD
         BAL   R14,UADR       PRUEFEN
         TM    ADRPRUEF,NOPARM     GUELTIGE ADRESSE?
         BO    P010           WENN NEIN
         ST    R4,PARAM1      1.PARAM-ADR SPEICHERN
         OI    SPIEMERK,SET1  MERKER SETZEN
         CLI   VLMERK,C'L'             LETZTER?
         BE    P010                    WENN JA
*** ADRESSE DES 2.PARAM EBENSO PRUEFEN.
         LA    R1,4(R1)       NAECHSTE PARAM-ADR-ADR
         L     R4,0(R1)       NAECHSTE PARAM-ADR
         ST    R4,ADRPRUEF    IN PRUEFFELD
         BAL   R14,UADR       PRUEFEN
         TM    ADRPRUEF,NOPARM    G GUELTIGE ADRESSE?
         BO    P010           WENN NEIN
         ST    R4,PARAM2      2.PARAM-ADR SPEICHERN
         OI    SPIEMERK,SET2  MERKER SETZEN
         CLI   0(R4),DRUCK    SOLL GEDRUCKY WERDEN?
         BNE   P005           WENN NEIN
         OI    SPIEMERK,DRUMERK    MERKER 'DRUCKEN' AN
         EJECT
P005     EQU   *
********
*** SPIE AUFSETZEN. INTERRUPT-TYPEN 3 BIS 13 SOLLEN
***                 ABGEFANGEN WERDEN.
********
P010     EQU   *
         L     R5,ADSPIEEX    EXIT-ADRESSE
         SPIE  (R5),((3,13))
         SPACE 1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
*
* WIEDERHERSTELLEN DER REGISTERINHALTE UND RUECKVERZWEIGEN.
*
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
         L     13,4(13)
         LM    0,12,20(13)
         L     15,16(13)
         XR    15,15 .      RUECKKEHR-CODE IN REGISTER 15 = 0
         L     14,12(13)
         BR    14
         EJECT
********
*** UNTERPROGRAMM ZUM PRUEFEN DER ADRESSEN AUF GUELTIGKEIT
*** BEI UNGUELTIGKEIT KOMMT DAS 1.BYTE VON ADRPRUEF MIT X'FF' ZURUECK.
********
UADR     EQU   *
         TM    ADRPRUEF,ADCHECK1   1.BYTE GUELTIG?
         BZ    P020           WENN JA
         TM    ADRPRUEF,ADCHECK2  1.BYTE GUELTIG?
         BNZ   P022                    WENN NEIN
         MVI   VLMERK,C'L'             MERKEN LETZTER
P020     EQU   *    GUELTIGE ADRESSE
         MVI   ADRPRUEF,X'00'          LINKES BYTE FUER C LOESCHEN
         L     R2,LOWADR
         L     R3,HIGHADR
         C     R2,ADRPRUEF
         BH    P022           UNGUELTIG
         C     R3,ADRPRUEF
         BL    P022           UNGUELTIG
         B     P025           EXIT
P022     EQU   *    UNGUELTIGE ADRESSE
         OI    ADRPRUEF,NOPARM     1.BYTE AUF X'FF'
P025     EQU   *    EXIT
         BR    R14            RETURN
         EJECT
*** SPEICHER UND MERKER
         SPACE 1
SPIEMERK DC    X'00'
VLMERK   DC    C' '
 SPACE 1
LOWADR   DC    F'0'
HIGHADR  DC    F'0'
ADRPRUEF DC    F'0'
ADSPIEEX DC    A(SPIEEX)
PARMLIST DS    0CL16
         DC    A(SPIEMERK)
PARAM1   DC    F'0'
PARAM2   DC    F'0'
  SPACE 1
***EQU'S
   SPACE 1
LOESCH   EQU   X'F0'
ADCHECK1 EQU   X'FF'
ADCHECK2 EQU   X'7F'
NOPARM   EQU   X'FF'
SET1     EQU   X'01'
SET2     EQU   X'02'
DRUMERK  EQU   X'08'
DRUCK    EQU   C'J'
         TITLE '***** SPIE-EXIT FUER INTERRUPT-TYPEN 3 BIS 13 *****'
SPIEEX   CSECT
********
*** REGISTERINHALTE SICHERN
********
         USING *,R15
         L     R2,ADINTREG   ADR REGISTERBEREICH
         STM   R0,R15,0(R2)  REGS SPEICHERN
         L     R2,ADRETURN   ADR RETURN
         ST    R14,0(R2)     RETURN-REG SPEICHERN
         B     P101
ADINTREG DC    A(INTREG)
ADRETURN DC    A(RETURN)
         DROP  R15
P101     EQU   *
         BALR  R12,0
         USING *,R12
         LA    R13,SAVE      ADR SAVE AREA
         ST    R1,PIEADR     PIE-ADR RETTEN
*** SPIE CANCELN, UM REKURSION ZU UNTERBINDEN.
*** REGISTERSTAENDE 'ZUM ZEITPUNKT DES INTERRUPT' IN
*** INTREG WIEDERHERSTELLEN.
*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
* DAS CANCEL-SPIE WURDE AUSGEBAUT, DA IN UNSEREM RELEASE
* BEIM WIEDERAUFSETZEN MIT DER EXECUTE-FORM
* DER SUPERVISOR MIT 0C4 AUF ADRESSE 4 ABBUDDELTE.
* NACH AUSSAGE UNSERES SOFTWARE-TA WIRD DIE RECURSION
* VOM SUPERVISOR SELBER ABGEFANGEN.
*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
*        SPIE
*        ST    R1,PICAADR    PICA ADR RETTEN
*        L     R1,PIEADR     PIE ADR LADEN
         LM    R14,R2,12(R1) REGS 14-2 AUS PIE
         STM   R0,R2,IR0     REGS 0-2 IN INTREG UEBERSCHREIBEN
         STM   R14,R15,IR14  REGS 14-15 IN INTREG UEBERSCHREIBEN
         EJECT
********
*** AUSGABE 1.WTO UND OPEN DDSPIE BEI 1.FEHLER
********
         L     PARAMREG,PARAMETR  A(INTERNE PARAM-LISTE)
         L     MERKREG,0(PARAMREG)  A(INTERNER MERKER)
W102     NOP   P110          UMGEHUNG 1.WTO
         EXTRACT EXTIOT,FIELDS=TIOT
         L     R3,EXTIOT     TIOT-ADR
         USING TIOT,R3       DSECT AUF TIOT
         MVC   WTOJ(8),JOB   TIOT-FELDER NACH WTO1
         MVC   WTOJS(8),JOBSTEP        "
         MVC   WTOPJS(8),PJOBSTEP      "
WTO1     WTO   'SPIEFEHLER IN JJJJJJJJ  SSSSSSSS  PPPPPPPP',           ,
               ROUTCDE=(2,11)
         OPEN  (DDSPIE,(OUTPUT))
         TM    DDSPIE+48,OPENTEST OK?
         BO    P105          WENN JA
         WTO   'DDKARTE -DDSPIE- FEHLT',ROUTCDE=11
         ZAP   MAXTEST,P10   AUSGABETEST AUF 10
         B     P106
P105     EQU   *
         OI    0(MERKREG),OPENTEST   BIT FUER DRUCKAUSGABE SETZEN
P106     EQU   *
         OI    W102+1,UMGEHUNG    UMGEHUNG SCHALTEN
         EJECT
*** VORHANDENSEIN DER ANWENDER-PARAMETER TESTEN.
*** FUER NICHT-VORHANDENE PARAMETER WERDEN EIGENE ERSATZ-PARAMETER
*** EINGEFUEHRT, UM IMMER GLEICHE BEDINGUNGEN ZU HABEN.
P110     EQU   *
         TM    0(MERKREG),TEST1  1.ANWENDER-PARAM DA?
         BZ    P115          WENN NEIN
         TM    0(MERKREG),TEST2  2.ANWENDER-PARAM DA?
         BZ    P116          WENN NEIN
         TM    0(MERKREG),TESTDRU      SOLL GEDRUCKT WERDEN?
         BZ    P200                    WENN NEIN
         B     P117
*** BEI FEHLEN DES ERSTEN UND/ODER ZWEITEN PARAMETERS
*** WERDEN EIGENE FELDER EINGESETZT.
P115     EQU   *
         LA    R3,ERSKF      ADR ERSATZKONTROLLFELD
         ST    R3,4(PARAMREG)    ALS ERSTEN PARAMETER EINSETZEN
P116     EQU   *
         LA    R3,ERSMERK    ADR ERSATZMERKER
         ST    R3,8(PARAMREG)     ALS ZWEITEN PARAMETER EINSETZEN
         OI    0(MERKREG),TESTDRU
P117     EQU   *
         L     R2,8(PARAMREG)     ADR 2.PARAM
         OI    1(R2),SETSPIE      INTERRUPT ANZEIGEN (2.PARAM)
********
*** INTERRUPTCODE AUSGEBEN
********
         L     R2,PIEADR     PIE ADRESSE
         XR    R3,R3         CLEAR
         IC    R3,7(R2)      INTERRUPTCODE
         SH    R3,H3         R3-3
         MH    R3,H3         R3*3
         LA    R3,INTERTAB(R3)    CODEADRESSE
         MVC   COMPCODE(3),0(R3)  CODE UEBERTRAGEN
         L     R4,8(PARAMREG)     ADRESSE 2.ANWENDER-PARAM LADEN
         MVC   2(3,R4),0(R3)      INTERRUPT-TYP IM 2.PARAM ANZEIGEN
         EJECT
********
*** ABSOLUTE INTERRUPTADRESSE ERMITTELN  R2=PIEADRESSE
********
         L     R3,8(R2)      INSTRUKTIONSADRESSE AUS PIE
         LA    R3,0(R3)      CLEAR
         TM    8(R2),LTEST1  LAENGE TESTEN
         BO    P120          WENN 6BYTE
         TM    8(R2),LTEST2  LAENGE TESTEN
         BO    P121          WENN 4BYTE
         TM    8(R2),X'40'             *LAENGE 2BYTE?
         BO    P122                    *WENN JA
         LA    R4,0                    *DANN LAENGE 0
         B     P123
P120     EQU   *
         LA    R4,6          LAENGE LADEN
         B     P123
P121     EQU   *
         LA    R4,4          LAENGE LADEN
         B     P123
P122     EQU   *
         LA    R4,2                    *LAENGE 2
P123     EQU   *
         ST    R4,LAENGE     LAENGE STOREN
         S     R3,LAENGE     LAENGE SUBTRAHIEREN
         ST    R3,INTERRPT   INTERRUPT SPEICHERN
         EJECT
********
*** FEHLERHAFTES LADEMODUL SUCHEN UND RELATIVEN INTERRUPT ERRECHNEN
*** NACH CALL: R15=CDE,R1=MODULANFANG,R2=MODULLAENGE
********
         MVI   INTMERK,C' '  CLEAR
         CALL  UINTMOD,(INTMERK,INTERRPT)
         CLI   INTMERK,X'FF'           SUCHE POSITIV?
         BNE   P124                    WENN NEIN
         MVC   MODNAME(8),8(R15)  MODULNAME AUS CDE
         ST    R1,MODANF
         ST    R2,MODLNG               LAENGE SPEICHERN
         L     R1,INTERRPT
         S     R1,MODANF     INTERRUPT - MODULANFANG
         ST    R1,RELINTER   RELATIVEN INTERRUPT SPEICHERN
         LA    R2,RELINTER   WOHER
         LA    R3,INTERADR   WOHIN
         LA    R4,4          LAENGE WOHER
         STH   R4,LNGXCONV   NACH LAENGENFELD
         BAL   R14,UHEXA
         LA    R2,DMODLNG              WOHER
         LA    R3,MODLNGTH             WOHIN
         LA    R4,3                    LAENGE WOHER
         STH   R4,LNGXCONV             NACH LANEGENFELD
         BAL   R14,UHEXA
         B     P125
*** INTERRUPT NICHT IN EINEM MODUL DAS IN DER CDE STEHT.
P124     EQU   *
         MVI   MODNAME,BLANK LOESCHEN
         MVC   MODNAME+1(7),MODNAME "
         LA    R2,INTERRPT   WOHER
         LA    R3,INTERADR   WOHIN
         LA    R4,4          LAENGE WOHER
         STH   R4,LNGXCONV   NACH LAENGENFELD
         BAL   R14,UHEXA
         MVI   MODLNGTH,BLANK          LOESCHEN
         MVC   MODLNGTH+1(5),MODLNGTH
         EJECT
********
*** AUSGABE DER FEHLERHAFTEN INSTRUKTION UND
*** 10STELLIGE AUSGABE DES KONTROLLFELDES
********
P125     EQU   *
         MVI   INSTRUKT,BLANK     LOESCHEN
         MVC   INSTRUKT+1(11),INSTRUKT "
         L     R2,INTERRPT   WOHER
         LA    R3,INSTRUKT   WOHIN
         L     R4,LAENGE     LAENGE WOHER
         LTR   R4,R4                   *LAENGE = 0 ?
         BNZ   P127                    *WENN NEIN
         LA    R4,6                    *WENN JA, LAENGE=6 ANNEHMEN
P127     EQU   *
         STH   R4,LNGXCONV   NACH LAENGENFELD
         BAL   R14,UHEXA
         L     R5,4(PARAMREG)     PARAM2-ADR LADEN
         MVC   KONTRFLD(10),0(R5)     KONTROLLFELD UEBERTRAGEN
********
*** AUSGABE DER OPERANDEN
********
         L     R2,PIEADR     PIE ADRESSE
         XR    R3,R3         CLEAR
         IC    R3,7(R2)      INTERRUPTCODE
         CH    R3,H7         CODE < 7?
         BL    P130          WENN JA, DANN SIND KEINE OPERANDEN SCHULD
         LA    R3,4
         C     R3,LAENGE     LAENGE < 4BYTES
         BH    P130          WENN JA, DANN RR-FORMAT ODER AEHNLICH
***** ERRECHNEN DER OPERANDENADRESSEN
         L     R2,INTERRPT   INTERRUPTADRESSE
         LA    R3,INTREG     ADRESSE REGISTERSPEICHWR
         L     R4,LAENGE     BEFEHLSLAENGE
         CALL  UOPERADR
     EJECT
***** ANDRUCKEN DER OPERANDEN, JEWEILS 15-STELLIG IN HEXA
***** R15= ADR 1.OPERAND
***** R1 = ADR 2.OPERAND
         SPACE 1
         B     P131
P130     EQU   *
         XR    R15,R15       CLEAR
         XR    R1,R1         CLEAR
P131     EQU   *
         ST    R1,OPADR2     2.OPER. ADR RETTEN
         MVI   OPERAND1,BLANK     LOESCHEN
         MVC   OPERAND1+1(62),OPERAND1 "
         LTR   R15,R15       NULL?
         BZ    P135          WENN JA
         LR    R2,R15        WOHER
         LA    R3,OPERAND1   WOHIN
         LA    R4,15         LAENGE WOHER
         STH   R4,LNGXCONV   NACH LAENGENFELD
         BAL   R14,UHEXA
P135     EQU   *
         L     R1,OPADR2     ADR 2.OPER. LADEN
         LTR   R1,R1         NULL?
         BZ    P140          WENN JA
         LR    R2,R1         WOHER
         LA    R3,OPERAND2   WOHIN
         LA    R4,15         LAENGE WOHER
         STH   R4,LNGXCONV   NACH LAENGENFELD
         BAL   R14,UHEXA
         EJECT
*** AUSGABE DER INTERRUPT-MELDUNGEN.
         SPACE 1
P140     EQU   *
         TM    0(MERKREG),OPENTEST    DDSPIE DA?
         BZ    P150          WENN NEIN
********
*** AUSGABE UEBER DRUCKER
********
         MVI   DAUSGABE,BLANK     LOESCHEN
         MVC   DAUSGABE+1(131),DAUSGABE "
         MVC   DAUSGABE(124),MESSAGE   TEXT AUS WTO UEBERTRAGEN
         BAL   R14,UPRINT    DRUCKEN
         BAL   R14,UREGDRU   AUFBEREITUNG UND DRUCK DER REGISFER
         L     R2,4(PARAMREG)     WOHER
         LA    R3,DAUSGABE+11     WOHIN
         LA    R4,60         LAENGE WOHER
         STH   R4,LNGXCONV   NACH LAENGENFELD
         BAL   R14,UHEXA     HEXA-UMWANDELN
         BAL   R14,UPRINT    DRUCKEM
         B     P160
********
*** AUSGABE UEBER WTO
********
P150     EQU   *
INTERMES WTO   'A=MMMMMMMM K=KKKKKKKKKK OP=PPPPPPPPPPPP UUUUUUUUUUUUUUU,
               UUUUUUUUUUUUUUU   UUUUUUUUUUUUUUUUUUUUUUUUUUUUUU 0CX*MMM,
               MMMMM*XXXXXX',ROUTCDE=11
         EJECT
********
*** ZAEHLUNG UND MAXIMUMKONTROLLE
********
P160     EQU   *
         AP    ZOUT,P1       ZAEHLEN
         CP    ZOUT,MAXTEST  AUSGABE > MAXIMUM?
         BH    P777          WENN JA, ABEND
********
*** SPIE WIEDER AUFSETZEN, RUECKSPRUNG ZUM SUPERVISOR
********
P199     EQU   *
*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
* WIE AM EINGANG DES EXIT BEREITS BESCHRIEBEN, MUSSTE
* DAS CANCELN DES SPIE AUSGEBAUT WERDEN.
* AUS DEMSELBEN GRUNDE ERUEBRIGT SICH AUCH EIN
* WIEDERAUFSETZEN MIT DER EXECUTE-FORM.
*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
*        L     R5,PICAADR    PICA ADRESSE LADEN
*        SPIE  MF=(E,(5))    EXECUTE-FORM MIT ALTER PICA ADESSE
         L     R14,RETURN    RETURN ADRESSE LADEN
         LM    R0,R13,INTREG REGS 0-13 AUS REGISTERSPEICHER LADEN
         BR    R14           RUECKSPRUNG
         EJECT
*** WENN KEINE DRUCKAUSGABE GEWUENSCHT, INTERRUPT-CODE
*** ALS 0CX IM ZWEITEN PARAMETER ANZEIGEN.
P200     EQU   *
         L     R2,PIEADR
         XR    R3,R3
         IC    R3,7(R2)           CODE EINFUEGEN
         SH    R3,H3
         MH    R3,H3
         LA    R3,INTERTAB(R3)    TABELLENPLATZ
         L     R4,8(PARAMREG)     ADRESSE MERKER
         OI    1(R4),SETSPIE      MERKER IN PARAM1 SETZEN
         MVC   2(3,R4),0(R3)           *CODE UEBERTRAGEN
         B     P199
  SPACE 1
         EJECT
********
*** UEBERTRAGEN UND DRUCKEN DER REGISTER AUS DEM REGISTERSPEICHER
********
UREGDRUS DS    F
UREGDRU  EQU   *
         ST    R14,UREGDRUS  SAVEN
         MVI   DAUSGABE,BLANK     LOESCHEN
         MVC   DAUSGABE+1(131),DAUSGABE   "
         MVC   DAUSGABE+11(3),VORS1    VORSPANN
         LA    R2,IR0        ADRESSE REGISTERSPEICHER R0
         BAL   R6,UBCT       REGS 0-7 UEBERTRAGEN
         BAL   R14,UPRINT    DRUCKEN
         MVC   DAUSGABE+11(4),VORS2    VORSPANN
         LA    R2,IR8        ADRESSE REGISTERSPEICHER R8
         BAL   R6,UBCT       REGS 8-15 UEBERTRAGEN
         BAL   R14,UPRINT    DRUCKEN
         L     R14,UREGDRUS
         BR    R14           RETURN
UBCT     EQU   *   R2=WOHER
         LA    R3,DREGS      WOHIN
         LA    R4,4          LAENGE WOHER
         STH   R4,LNGXCONV   NACH LAENGENFELD
         LA    R5,8          WIE OFT
PBCT     BAL   R14,UHEXA
         LA    R2,4(R2)      'WOHER' MODIFIZIEREN
         LA    R3,10(R3)     'WOHIN' MODIFIZIEREN
         BCT   R5,PBCT       NOCHMAL
         BR    R6            RETURN
  EJECT
********
*** UHEXA - KONVERTIERUNG VON FELDERN IN HEXA
********
UHEXAS   DS    F
UHEXA    EQU   *
         ST    R14,UHEXAS    R14 RETTEN
         LA    R4,LNGXCONV   LAENGENFELD
         CALL  HEWXKONV,((2),(3),(4))
         L     R14,UHEXAS    LADEN
         BR    R14           RETURN
  EJECT
********
*** UPRINT - DRUCKAUSGABE
********
UPRINTS  DS    F
UPRINT   EQU   *
         ST    R14,UPRINTS   SAVEN
         PUT   DDSPIE,DBER
         MVI   VORSCHUB,ZWEI
         L     R14,UPRINTS
         BR    R14           RETURN
  EJECT
********
*** ABEND NACH 10/100 INTERRUPTS
********
P777     EQU   *
         OI    0(MERKREG),X'20'   MERKER SPIEABEND
         ABEND 777,DUMP
         EJECT
********
*** REGISTERSPEICHER FUER REGISTERSTAENDE ZUM ZEITPUNKT DES INTERRUPTS
********
         ENTRY INTREG
INTREG   DC    16F'0'
********
*** HILFS- UND SPEICHERFELDER
********
SAVE     DC    18F'0'
RETURN   DC    F'0'
PIEADR   DC    F'0'
PICAADR  DC    F'0'
INTERRPT DC    F'0'
MODANF   DC    F'0'
MODLNG   DC    F'0'                    MODULLLAENGE
         ORG   MODLNG
         DS    CL1
DMODLNG  DS    CL3
LAENGE   DC    F'0'          SPEICHER BEFEHLSLAENGE
OPADR2   DC    F'0'
LNGXCONV DC    H'0'
PARAMETR DC    A(PARMLIST)
H3       DC    H'3'
H7       DC    H'7'
RELINTER DS    F             SPEICHER FUER RELATIVEN INTERRUPT
EXTIOT   DC    F'0'          FELD FUER EXTRACT
INTMERK  DC    C'I'
P10      DC    P'9'
ERSKF    DC    CL10'@@@FEHLT@@'   ERSATZKONTROLLFELD
ERSMERK  DC    CL7' '
ZOUT     DC    PL2'0'        AUSGABEZAEHLER
MAXTEST  DC    PL2'99'       AUSGABETEST
P1       DC    P'1'
INTERTAB DC    C'0C30C40C50C60C70C80C90CA0CB0CC0CD'
VORS1    DC    C'0-7'        VORSPANN
VORS2    DC    C'8-15'       VORSPANN
DBER     DS    0CL133
VORSCHUB DC    X'11'         ZWEIZEILIGER VORSCHUB
DAUSGABE DS    CL132         AUSGABETEIL
         EJECT
********
*** EQU'S
********
MERKREG  EQU   9
IR0      EQU   INTREG
IR8      EQU   INTREG+32
IR14     EQU   INTREG+56
         SPACE 1
WTOJ     EQU   WTO1+22
WTOJS    EQU   WTO1+32
WTOPJS   EQU   WTO1+42
         SPACE 1
CI       EQU   C'I'
BLANK    EQU   C' '
ZWEI     EQU   X'11'
UMGEHUNG EQU   X'F0'
OPENTEST EQU   X'10'
TEST1    EQU   X'01'
TEST2    EQU   X'02'
TESTDRU  EQU   X'08'
SETSPIE  EQU   X'FF'
SYSTEM   EQU   C'S'
LTEST1   EQU   B'11000000'
LTEST2   EQU   B'10000000'
PARAMREG EQU   10
         SPACE 1
MESSAGE  EQU   INTERMES+8
INTERADR EQU   INTERMES+10
KONTRFLD EQU   INTERMES+21
INSTRUKT EQU   INTERMES+35
OPERAND1 EQU   INTERMES+48
OPERAND2 EQU   INTERMES+81
COMPCODE EQU   INTERMES+112
MODNAME  EQU   INTERMES+116
MODLNGTH EQU   INTERMES+125
DREGS    EQU   DBER+19
         EJECT
DDSPIE   DCB   DDNAME=DDSPIE,DSORG=PS,RECFM=FM,BLKSIZE=133,MACRF=(PM)
*
********
        SPACE 1
TIOT     DSECT               DSECT FUER TIOT
JOB      DS    CL8
JOBSTEP  DS    CL8
PJOBSTEP DS    CL8
    TITLE '***** NAMEN DES INTERRUPTED MODULS SUCHEN *****'
UINTMOD  CSECT
         B     32(15)                  BRANCH UM ID
*.X.X.X.X.X.X.X.X.X.X.X.X LOADMODULE ID 28 BYTES .X.X.X.X.X.X.X.X.X.X.X
         DC    CL4'HEW '               FILLER
         DC    CL8'UINTMOD' .           CSECT NAME
         DC    CL16'D03/07/77 T10.17'      DATUM UND ZEIT DER ASS.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
*                                                                     *
* SICHERSTELLEN DER REGISTER-INHALTE UND LADEN DER BASIS-GRUNDADRESSE.*
*                                                                     *
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
         DS    0D
         DS    0H
         STM   14,12,12(13)                      SAVE REGISTERS
         BALR  12,0
         USING *,12
         DS    0H
         MVC   8(4,13),*+18
         ST    13,*+20
         LA    13,*+12
         B     *+80
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
*                                                                     *
* SAVE-ADRESSKONSTANTE.                                               *
*                                                                     *
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
         DC    A(*+4)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
*                                                                     *
* SAVE-BEREICH.                                                       *
*                                                                     *
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
         DC    18F'0'
         EJECT
         LM    R2,R3,0(R1)             PARAMETER LADEN
         L     R4,16                   CVT
********
*** FADEN AUFNEHMEN
********
         L     R4,0(R4)                TCB-WORDS
         L     R4,4(R4)                TCB
         LR    R5,R4                   UMLADEN
         L     R5,0(R5)                RB-CHAIN
********
*** DURCHSUCHEN DER RB-CHAIN
********
P210     EQU   *
         TM    10(R5),PRBTEST          PRB?
         BNZ   P212                    WENN NEIN
         L     R6,12(R5)               CDE
         LA    R6,0(R6)                CLEAR HIGH ORDER
         LTR   R6,R6                   CDE-ADR = 0 ?
         BZ    P212                    WENN JA,NAECHSTEN RB
         BAL   R14,MVTSUCH
P212     EQU   *
         TM    11(R5),TCBPOINT         POINTET AUF TCB
         BO    P220                    WENN JA
         L     R5,28(R5)               NEXT RB
         B     P210                    WEITER
********
*** DURCHSUCHEN DER LOAD-LIST
********
P220     EQU   *
         L     R5,36(R4)               LLS
P222     EQU   *
         L     R6,4(R5)                CDE
         BAL   R14,MVTSUCH
         L     R5,0(R5)                NEXT LLE
         LTR   R5,R5                   LETZTES?
         BNZ   P222                    NEIN,WEITER
         MVI   0(R2),NEGATIV           MERKER SETZEN
         SR    R1,R1                   LOESCHEN
         SR    R15,R15                 LOESCHEN
         B     BACK
P230     EQU   *
         MVI   0(R2),POSITIV           MERKER SETZEN
         LR    R15,R6                  CDE-ADR
         L     R1,12(R7)               MODULANFANG
         L     R2,8(R7)                MODULLAENGE
         EJECT
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
*
* WIEDERHERSTELLEN DER REGISTERINHALTE UND RUECKVERZWEIGEN.
*
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
BACK     L     13,4(13)
         L     0,20(13)
         LM    3,12,32(13)
         L     14,12(13)
         BR    14
         EJECT
********
***  PRUEFEN, OB INTERRUPT INNERHALB DIESES MODULS
***GEFORDERTE REGISTERSTAENDE:
*** R3= 2.PARAMETER (VERGLEICHSFELD)
*** R6= CDE
*** R14= RUECKSPRUNGADRESSE NACH NEGATIVER SUCHE
********
********
********
MVTSUCH  EQU   *
         L     R7,20(R6)               XL
         L     R8,12(R7)               MODULANFANG
         C     R8,0(R3)                INTERRUPT < MODULANFANG?
         BH    P280                    JA,FALSCHES MODUL
         L     R9,8(R7)                LAENGE
         LA    R9,0(R9)                CLEAR
         AR    R8,R9                   LAENGE+ANFANG=ENDE
         C     R8,0(R3)                INTERRUPT > MODULENDE?
         BL    P280                    JA,FALSCHES MODUL
         B     P230                    MODUL GEFUNDEN
P280     EQU   *
         BR    R14
*** EQU'S
PRBTEST  EQU   X'F0'
TCBPOINT EQU   X'80'
NEGATIV  EQU   X'00'
POSITIV  EQU   X'FF'
   TITLE '***** BERECHNEN VON OPERANDEN-ADRESSEN *****'
UOPERADR CSECT
         B     32(15)                  BRANCH UM ID
*.X.X.X.X.X.X.X.X.X.X.X.X LOADMODULE ID 28 BYTES .X.X.X.X.X.X.X.X.X.X.X
         DC    CL4'HEW '               FILLER
         DC    CL8'UOPERADR' .           CSECT NAME
         DC    CL16'D03/07/77 T10.17'      DATUM UND ZEIT DER ASS.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
*                                                                     *
* SICHERSTELLEN DER REGISTER-INHALTE UND LADEN DER BASIS-GRUNDADRESSE.*
*                                                                     *
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
         DS    0D
         DS    0H
         STM   14,12,12(13)                      SAVE REGISTERS
         BALR  12,0
         USING *,12
         DS    0H
         MVC   8(4,13),*+18
         ST    13,*+20
         LA    13,*+12
         B     *+80
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
*                                                                     *
* SAVE-ADRESSKONSTANTE.                                               *
*                                                                     *
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
         DC    A(*+4)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
*                                                                     *
* SAVE-BEREICH.                                                       *
*                                                                     *
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
         DC    18F'0'
         EJECT
********
*** REGISTERSTAENDE: R2=INTERRUPT,R3=REGISTERSPEICHER,R4=BEFEHLSLAENGE
********
         MVC   INSTRKT,0(R2) INSTRUKTION SPEICHERN
         LA    R5,4
         CR    R4,R5         6BYTE BEFEHL?
         BH    P600          WENN JA
********
*** 4BYTE BEFEHLE
********
         TM    OPCODE,RSTEST RS-FORMAT?
         BO    P490          WENN JA
         TM    INDREG,REGTST1     INDEXREGISTER DA?
         BZ    P410          WENN NEIN
         NI    INDREG,CLEAR1 LINKES HALBBYTE LOESCHEN
         IC    R5,INDREG     REG-NR NACH R5
         SLL   R5,2          MAL  4
         L     R5,0(R5,R3)   INDEXREGISTER NACH R5
         B     P411
P410     EQU   *
         XR    R5,R5         R5 LOESCHEN
P411     EQU   *
***** BASREG + DISPLACEMENT
         LA    R10,BASDISP1
         BAL   R14,UABS      R10 KOMMT MIT DER OPERANDENADRESSE ZURUECK
         LR    R15,R10       UMLADEN
         B     P491
P490     EQU   *
         XR    R15,R15       LOESCHEN
P491     EQU   *
         XR    R1,R1         LOESCHEN
         B     EXIT
********
*** 6BYTE-BEFEHLE
********
P600     EQU   *
***** 1.OPERAND
         LA    R10,BASDISP1
         BAL   R14,UABS      R10 KOMMT MIT OPERANDENADRESSE ZURUECK
         LR    R15,R10       1.OPERAND IN R15
***** 2.OPERAND
         LA    R10,BASDISP2
         BAL   R14,UABS      R10 KOMMT MIT OPERANDENADRESSE ZURUECK
         LR    R1,R10        2.OPERAND IN R1
         SPACE 2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
*
* WIEDERHERSTELLEN DER REGISTERINHALTE UND RUECKVERZWEIGEN.
*
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
EXIT     L     13,4(13)
         L     0,20(13)
         LM    2,12,28(13)
         L     14,12(13)
         BR    14
         EJECT
********
*** ERRECHNEN DER ABSOLUTEN ADRESSE
********
UABSS    DS    2F            SAVEBEREICH
UABS     EQU   *    R10=ADRESSTEILADRESSE, R3=REGISTERSPEICER
         LM    R7,R8,UABSS   REGS SAVEN
         TM    0(R10),REGTST2     BASREG DA?
         BZ    P910          EWNN NEIN
         XR    R7,R7         LOESCHEN
         IC    R7,0(R10)     BASREG NACH R7
         SRL   R7,4          RECHTES HALBBYTE LOESCHEN
         SLL   R7,2          MAL  4
         L     R7,0(R7,R3)   BASISREGISTER NACH R7
         B     P911
P910     EQU   *
         XR    R7,R7         LOESCHEN
P911     EQU   *
         NI    0(R10),CLEAR1 LINKES HALBBYTE LOESCHEN
         LH    R8,0(R10)     DISPLACEMENT LADEN
         AR    R7,R8         BASREG + DISPLACEMENT
         LR    R10,R7        UMLADEN
         STM   R7,R8,UABSS
         BR    R14           RETURN
  EJECT
*** BEREICHE UND EQU'S
INSTRKT  DS    CL6           INSTRUKTIONSSPEICHER
OPCODE   EQU   INSTRKT
INDREG   EQU   INSTRKT+1
BASDISP1 EQU   INSTRKT+2
BASDISP2 EQU   INSTRKT+4
RSTEST   EQU   X'80'
REGTST1  EQU   X'0F'
REGTST2  EQU   X'F0'
CLEAR1   EQU   X'0F'
   TITLE '***** HEXA-KONVERTIEREN VON FELDERN *****'
HEWXKONV CSECT
         B     32(15)                  BRANCH UM ID
*.X.X.X.X.X.X.X.X.X.X.X.X LOADMODULE ID 28 BYTES .X.X.X.X.X.X.X.X.X.X.X
         DC    CL4'HEW '               FILLER
         DC    CL8'HEWXKONV' .           CSECT NAME
         DC    CL16'D03/07/77 T11.50'      DATUM UND ZEIT DER ASS.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
*                                                                     *
* SICHERSTELLEN DER REGISTER-INHALTE UND LADEN DER BASIS-GRUNDADRESSE.*
*                                                                     *
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
         DS    0D
         DS    0H
         STM   14,12,12(13)                      SAVE REGISTERS
         BALR  7,0
         USING *,7
         DS    0H
         MVC   8(4,13),*+18
         ST    13,*+20
         LA    13,*+12
         B     PX010
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
*                                                                     *
* SAVE-ADRESSKONSTANTE.                                               *
*                                                                     *
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
         DC    A(*+4)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
*                                                                     *
* SAVE-BEREICH.                                                       *
*                                                                     *
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
         DC    18F'0'
     EJECT
*
*
*
* ZWECK :  - H E X A -DARSTELLUNG VON BYTES IN COBOL-PROGRAMMEN
*
* ES WERDEN DREI PARAMETER ERWARTET:
*            1. = VON      FELD DAS UEBERSETZT WERDEN SOLL
*            2. = NACH     FELD DAS DIE UEBERSETZUNG IN HEXA AUFNIMMT
*            3. = LAENGE   DES FELDES ALS HALBWORT
*
         DS    CL140
PX010    LM    3,5,0(1)
         LH    5,0(5)
*******************************     HEWHEXA  **************************
         B     HEW0003A
HEWTRTAB DC    CL16'0123456789ABCDEF'
HEWSAVE  DC    4F'0'   SAVEBEREICH FUER REG 13 - 15 UND ENTPACKFELD
HEW0003A STM   13,15,HEWSAVE  REGS SAVEN
         LR    13,5
         LR    14,3
         LR    15,4
HEW0003B UNPK  HEWSAVE+12(3),0(2,14)
         TR    HEWSAVE+12(2),HEWTRTAB-240
         MVC   0(2,15),HEWSAVE+12
         LA    14,1(14)
         LA    15,2(15)
         BCT   13,HEW0003B
         LM    13,15,HEWSAVE  REGS RETOUR
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
*
* WIEDERHERSTELLEN DER REGISTERINHALTE UND RUECKVERZWEIGEN.
*
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
         L     13,4(13)
         LM    0,12,20(13)
         L     15,16(13)
         XR    15,15 .      RUECKKEHR-CODE IN REGISTER 15 = 0
         L     14,12(13)
         BR    14
         END
