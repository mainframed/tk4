         TITLE 'A0112400     CROSS-REFERENCE AUS PROCLIB / PGM - DSN'
         SECTION A0112400,(R3,R6),START
         COPY  REGISTER
         EJECT
PROC     DCB   DSORG=PO,MACRF=(R),LRECL=80,EODAD=NEXTMEM,DDNAME=PROC
         EJECT
DIR      DCB   DSORG=PS,MACRF=(R),LRECL=256,BLKSIZE=256,RECFM=F,       *
               DDNAME=PROC,EODAD=DIREND
         EJECT
AUSGABE  DCB   DSORG=PS,                                               *
               MACRF=(PM),                                             *
               LRECL=135,                                              *
               RECFM=FB,                                               *
               DDNAME=AUSGABE
         EJECT
         READ  DECB,SF,DIR,DIRBL,'S',MF=L        READ DIRECTORY
         SPACE
         READ  PECB,SF,PROC,RECORD,'S',MF=L      READ PROCLIB
         EJECT
START    OPEN  PROC
         OPEN  DIR
         OPEN  (AUSGABE,OUTPUT)
         SPACE
READDIR  READ  DECB,SF,DIR,DIRBL,'S',MF=E
         CHECK DECB
         SPACE
         LH    R5,DIRBL
         SH    R5,=H'2'
         LA    R4,DIRBL+2
ALIAS    TM    11(R4),X'80'       ALIAS NAME ?
         BO    NEXTMEM            JA
         SPACE
         MVC   MEMBER,0(R4)
         CLI   MEMBER,X'FF'       DIRECTORY-BLOCK ENDE ?
         BE    READDIR            JA / NAECHSTEN BLOCK LESEN
         CLI   MEMBER,X'00'       DIRECTORY ENDE ?
         BE    DIREND             JA / ARBEITSENDE
         SPACE
         FIND  PROC,MEMBER,D      MEMBER LESEN
         SPACE
         BAL   R7,RBLOCK          *
READNXT  BAL   R7,GRECORD
         BAL   R7,SCAN
         B     READNXT
         SPACE 2
NEXTMEM  IC    R8,11(R4)          LAENGE DER DIRECTORY-EINTRAGUNG
         N     R8,=A(X'1F')       ERRECHNEN
         SLL   R8,1               *
         SR    R5,R8              *
         SH    R5,=H'12'          DIRECTORY-BLOCK ENDE ?
         BZ    READDIR            JA
         SPACE
         LA    R4,12(R8,R4)       R4 AUF NAECHSTE DIRECTORY-EINTRAGUNG
         B     ALIAS              POSITIONIEREN
         SPACE 3
DIREND   CLOSE PROC
         CLOSE DIR
         CLOSE AUSGABE
         SPACE
         L     R13,4(R13)
         RETURN (14,12),RC=0
         TITLE 'A0112400     UNTERPROGRAMME'
*      MEMBER IN PROCLIB LESEN
RBLOCK   READ  PECB,SF,PROC,BLOCK,'S',MF=E
         CHECK PECB
         LA    R12,BLOCK-80
         BR    R7
         SPACE 3
*      MEMBER SATZWEISE AUS -BLOCK- LESEN
GRECORD  LA    R12,80(R12)
         S     R7,=F'4'
         L     R8,PROC+68         IOB PREFIX
         LH    R1,PROC+62         MAX BLKSIZE
         SH    R1,22(R8)          RESIDUAL COUNT
         LA    R8,BLOCK(R1)
         CR    R12,R8             BLOCKENDE ?
         BC    10,RBLOCK          JA, NEUEN BLOCK LESEN
         SPACE
         MVC   RECORD,0(R12)      SATZ AUS BLOCK NACH -RECORD-
         B     4(R7)
         SPACE 3
*      RECORD SCANNEN UND VERSCH. WERTE SPEICHERN
         DC    F'0'
SCAN     ST    R7,*-4
         LA    R9,RECORD
         LA    R11,RECORD+65
SCAN1    LR    R10,R9
         CLC   0(2,R10),=C'//'    JOB-CONTROL-KARTE ?
         BNE   SCAN201            NEIN
         CLI   2(R10),C'*'
         BE    SCAN201
SCAN2    CLC   0(6,R10),=C' EXEC ' EXEC ODER DD KARTE SUCHEN
         BE    SCAN3              *
         CLC   0(4,R10),=C' DD '  *
         BE    SCAN10             *
         LA    R10,1(R10)         *
         CR    R10,R11            * KARTENENDE ?
         BL    SCAN2              * NEIN
SCAN201  BAL   R7,GRECORD         * NAECHSTE KARTE LESEN
         B     SCAN1              *
         SPACE
SCAN3    LA    R7,2(R9)           LAENGE STEPNAME ERMITTELN
         CLI   0(R7),C' '         STEPNAME VORHANDEN ?
         BNE   SCAN31            NEIN
         MVC   OSTEP,=19C' '      *
         B     SCAN51             *
SCAN31   SR    R14,R14            *
SCAN4    CLI   0(R7),C' '         *
         BE    SCAN5              *
         AH    R14,=H'1'          *
         LA    R7,1(R7)           *
         B     SCAN4              *
SCAN5    MVC   OSTEP,=19C' '      STEPNAME LOESCHEN +
         BCTR  R14,0              UEBERTRAGEN
         EX    R14,MOVE0          *
         SPACE
SCAN51   LA    R10,6(R10)         PROGRAMM-NAME SUCHEN
SCAN6    CLI   0(R10),C' '        *
         BNE   SCAN7              *
         LA    R10,1(R10)         *
         B     SCAN6              *
SCAN7    LA    R7,4(R10)          LAENGE PROGRAMM-NAME ERMITTELN
         SR    R14,R14            *
SCAN8    CLI   0(R7),C','         *
         BE    SCAN9              *
         CLI   0(R7),C' '         *
         BE    SCAN9              *
         AH    R14,=H'1'          *
         LA    R7,1(R7)           *
         B     SCAN8              *
SCAN9    MVC   OPGM(19),=19C' '   PROGRAM-NAME LOESCHEN +
         BCTR  R14,0              UEBERTRAGEN
         EX    R14,MOVE1          *
         BAL   R7,PGMSEEK         PROGRAM BEI ENQ + LOADER SUCHEN
         MVC   OPROC,MEMBER       PROC-NAME UEBERTRAGEN (MEMBER-NAME)
         BAL   R7,GRECORD         NAECHSTEN SATZ LESEN
         B     SCAN1
         SPACE 3
SCAN10   MVC   OBLKSIZE(11),=11C'0'
         LA    R7,2(R9)
         SR    R14,R14            *
         CLI   0(R7),C' '         * DDNAME VORHANDEN ?
         BE    SCAN1025           * NEIN
SCAN101  CLI   0(R7),C' '         *
         BE    SCAN102            *
         AH    R14,=H'1'          *
         LA    R7,1(R7)           *
         B     SCAN101            *
SCAN102  MVC   ODDNAME,=19C' '    DDNAME LOESCHEN +
         BCTR  R14,0              UEBERTRAGEN
         EX    R14,MOVE5          *
SCAN1025 LA    R10,4(R10)         DD-KARTE DURCHSUCHEN NACH OPERANDEN
SCAN103  LA    R7,TAB             AUS TABELLE
SCAN11   MVN   *+7(1),7(R7)       LAENGENSCHLUESSEL AUS TAB
         CLC   0(0,R10),0(R7)
         BE    SCAN17
         CLI   0(R7),255          TAB-ENDE ?
         BE    SCAN12             JA
         LA    R7,12(R7)
         B     SCAN11
SCAN12   LA    R10,1(R10)
         CR    R10,R11            KARTENENDE ?
         BL    SCAN103            NEIN
SCAN121  CLI   0(R10),C' '
         BNE   SCAN13
         BCTR  R10,0
         B     SCAN121
SCAN13   CLI   0(R10),C','        FOLGEKARTE VORHANDEN ?
         BE    SCAN16             JA
         TM    SCHALT,X'80'       DSNAME VORHANDEN ?
         BNO   SCAN15             NEIN, KEIN AUSWERTUNGSSATZ
         CLI   ODSN,C'&&'         TEMPORAY DATASET ?
         BE    SCAN15             JA, KEIN AUSWERTUNGSSATZ
         PUT   AUSGABE,OUT
SCAN15   NI    SCHALT,X'7F'       SCHALTER LOESCHEN
         MVI   ODSN,X'40'
         MVC   ODSN+1(82),ODSN
         MVI   ODEN,X'40'
         BAL   R7,GRECORD         NAECHSTE KARTE LESEN
         B     SCAN1
         SPACE
SCAN16   BAL   R7,GRECORD         NAECHSTE KARTE LESEN
         LA    R10,3(R9)          *
         B     SCAN103            *
         SPACE
SCAN17   L     R15,8(R7)          OPERAND AUS TAB IN KARTE GEFUNDEN
         BR    R15                BRANCH ZUR OPERANDEN-VERARBEITUNG
         SPACE 2
*      DSNAME VERARBEITEN
SCAN20   LA    R10,3(R10)
SCAN21   LA    R10,4(R10)
         LA    R2,ODSN
         OI    SCHALT,X'80'
         BAL   R7,MOVE
         B     SCAN103
         SPACE
*      DSORG VERARBEITEN
SCAN40   LA    R10,6(R10)
         LA    R2,ODSORG
         BAL   R7,MOVE
         B     SCAN103
         SPACE
*      BLKSIZE VERARBEITEN
SCAN50   LA    R10,8(R10)
         LA    R2,OBLKSIZE+5
         BAL   R7,MOVEBK
         B     SCAN103
         SPACE
*      LRECL VERARBEITEN
SCAN60   LA    R10,6(R10)
         LA    R2,OLRECL+4
         BAL   R7,MOVEBK
         B     SCAN103
         SPACE
*      UNIT VERARBEITEN
SCAN70   LA    R10,5(R10)
         LA    R2,OUNIT
         CLI   0(R10),C'('
         BNE   SCAN71
         LA    R10,1(R10)
SCAN71   CLC   0(3,R10),=C'AFF'
         BE    SCAN103
         BAL   R7,MOVE
         B     SCAN103
         SPACE
*      DISP VERARBEITEN
SCAN80   LA    R10,5(R10)
         LA    R2,ODISP
         CLI   0(R10),C'('
         BNE   SCAN81
         LA    R10,1(R10)
         BAL   R7,MOVE
         BCTR  R10,0
         CLI   0(R10),C')'
         BE    SCAN103
         BAL   R7,MOVE
         BCTR  R10,0
         CLI   0(R10),C')'
         BE    SCAN103
SCAN81   BAL   R7,MOVE
         B     SCAN103
         SPACE
*      RECFM VERARBEITEN
SCAN90   LA    R10,6(R10)
         LA    R2,ORECFM
         BAL   R7,MOVE
         B     SCAN103
         SPACE
*      DENSITY VERARBEITEN
SCAN95   MVC   ODEN,4(R10)
         LA    R10,5(R10)
         B     SCAN103
         SPACE 3
*      UEBERTRAGEN PARAMETER AUS DD-KARTE NACH -OUT-
*      (LINKS NACH RECHTS)
MOVE     MVC   0(1,R2),0(R10)
         LA    R2,1(R2)
         LA    R10,1(R10)
         TM    SCHALT,X'80'
         BNO   MOVE01
         CLI   0(R10),C'('
         BE    MOVEEND
MOVE01   CLI   0(R10),C','
         BE    MOVEEND
         CLI   0(R10),C' '
         BE    MOVEEND
         CLI   0(R10),C')'
         BNE   MOVE
MOVEEND  LA    R10,1(R10)
         BR    R7
         SPACE 3
*      UEBERTRAGEN PARAMETER AUS DD-KARTE NACH -OUT-
*      (RECHTS NACH LINKS)
MOVEBK   LA    R10,1(R10)
         CLI   0(R10),C','
         BE    MOVEBK01
         CLI   0(R10),C')'
         BE    MOVEBK01
         CLI   0(R10),C' '
         BNE   MOVEBK
MOVEBK01 BCTR  R10,0
         SR    R14,R14
MOVEBK02 MVC   0(1,R2),0(R10)
         BCTR  R10,0
         BCTR  R2,0
         AH    R14,=H'1'
         CLI   0(R10),C'='
         BNE   MOVEBK02
         LA    R10,0(R14,R10)
         BR    R7
         SPACE 3
*      AUSFUEHRENDES PROGRAMM BEI ENQPGMDD UND LOADER SUCHEN
         DC    2F'0'
PGMSEEK  STM   R7,R8,*-8
         MVC   OPGM1,OPGM
         CLC   OPGM,=C'ENQPGMDD'
         BE    UP10
         CLC   OPGM(6),=C'LOADER'
         BNE   UPEND
         SPACE
         NOTE  PROC               LETZTE READ-ADRESSE SICHERN
         ST    R1,FULL            *
         ST    R12,FULL1          *
UP1      BAL   R7,GRECORD         STEP BIS SYSLIN UEBERLESEN
         CLC   RECORD+2(6),=C'SYSLIN' *
         BNE   UP1                *
         LA    R7,RECORD+10       DSN SUCHEN
UP2      CLC   0(3,R7),=C'DSN'    *
         BE    UP3                *
         LA    R7,1(R7)           *
         CR    R7,R11             * KARTEN-ENDE ?
         BL    UP2                * NEIN
         BAL   R7,GRECORD         * NAECHSTE KARTE LESEN
         LA    R7,RECORD+3        *
         B     UP2                *
         SPACE
UP3      CLC   3(3,R7),=C'AME'
         BNE   UP4
         LA    R7,3(R7)
UP4      LA    R7,4(R7)
UP5      CLI   0(R7),C','         ENDE DES DSN SUCHEN
         BE    UP6                *
         CLI   0(R7),C' '         *
         BE    UP6                *
         LA    R7,1(R7)           *
         B     UP5                *
UP6      BCTR  R7,0               DSN MIT MEMBER-EINTRAGUNG ?
         CLI   0(R7),C')'         *
         BE    UP7                * JA, MEMBER IN KLAMMERN
         SH    R7,=H'7'           OHNE MEMBER DIE LETZTEN 8 STELLEN
         MVC   OPGM1,0(R7)        DES DSN UEBERTRAGEN
         B     UPEND              *
UP7      BCTR  R7,0               LAENGE DES MEMBERNAMENS FESTSTELLEN
         SR    R14,R14            *
UP8      CLI   0(R7),C'('         *
         BE    UP9                *
         AH    R14,=H'1'          *
         BCTR  R7,0               *
         B     UP8                *
UP9      MVC   OPGM1,=19C' '      MEMBERNAME LOESCHEN +
         BCTR  R14,0              UEBERTRAGEN
         EX    R14,MOVE4          *
         POINT PROC,FULL          AUF EHEMALIGEN LESEBLOCK ZURUECK-
         BAL   R7,RBLOCK          POSITIONIEREN
         L     R12,FULL1          *
         B     UPEND              *
         SPACE 3
UP10     LR    R7,R10             PARAMETER BEI ENQPGMDD SUCHEN
UP11     CLC   0(3,R7),=C'PRO'    *
         BE    UP12               *
         LA    R7,1(R7)           *
         CLI   0(R7),C' '         KARTENENDE ?
         BNE   UP11               NEIN
         BCTR  R7,0               FOLGEKARTE VORHANDEN ?
         CLI   0(R7),C','         *
         BE    UP111              * JA
         MVC   OPGM1,=C'IEWL    ' OHNE -PRO- PARAMETER
         B     UPEND
UP111    BAL   R7,GRECORD         FOLGEKARTE LESEN
         LA    R7,RECORD+3        *
         B     UP11               *
UP12     LA    R7,3(R7)           LAENGE PROGRAM-NAME ERMITTELN
         SR    R14,R14            *
         LA    R8,1(R7)
UP13     CLI   0(R8),C','         *
         BE    UP14               *
         CLI   0(R8),C''''        *
         BE    UP14               *
         CLI   0(R8),C')'         *
         BE    UP14               *
         CLI   0(R8),C' '         *
         BE    UP14               *
         AH    R14,=H'1'          *
         LA    R8,1(R8)           *
         B     UP13               *
UP14     MVC   OPGM1,=19C' '      PROGRAM-NAME LOESCHEN +
         BCTR  R14,0              UEBERTRAGEN
         EX    R14,MOVE4          *
         SPACE
UPEND    LM    R7,R8,PGMSEEK-8
         BR    R7
         TITLE 'A0112400     DEFINITIONEN'
RECORD   DC    CL80' '
DIRBL    DC    256X'0'
SCHALT   DC    X'00'
MEMBER   DC    CL8' '
         SPACE
OUT      DS   0CL135
ODSN     DC    CL44' '
ODSORG   DC    CL2' '
ORECFM   DC    CL3' '
OBLKSIZE DC    CL6' '
OLRECL   DC    CL5' '
OUNIT    DC    CL6' '
ODISP    DC    CL17' '
OPROC    DC    CL8' '
OSTEP    DC    CL8' '
OPGM     DC    CL8' '
         DC    CL11' '
OPGM1    DC    CL8' '
ODDNAME  DC    CL8' '
ODEN     DC    CL1' '
         SPACE
FULL     DC    F'0'
FULL1    DC    F'0'
RF1      DC    PL2'0'
MOVE0    MVC   OSTEP(0),2(R9)
MOVE1    MVC   OPGM(0),4(R10)
MOVE4    MVC   OPGM1(0),1(R7)
MOVE5    MVC   ODDNAME(0),2(R9)
BLOCK    DS    3200C
         SPACE 3
*      TABELLE FUER SUCHBEGRIFFE MIT VERZWEIGUNGS-ADRESSE
*      7 ST. SUCHBEGRIFF
*      1 ST. LAENGENSCHLUESSEL
*      4 ST. VERZWEIGUNGSADRESSE
*
         CNOP  0,4
TAB      DC    C'DSNAME 5',A(SCAN20)
         DC    C'DSN    2',A(SCAN21)
         DC    C'DSORG  4',A(SCAN40)
         DC    C'BLKSIZE6',A(SCAN50)
         DC    C'LRECL  4',A(SCAN60)
         DC    C'UNIT   3',A(SCAN70)
         DC    C'DISP   3',A(SCAN80)
         DC    C'RECFM  4',A(SCAN90)
         DC    C'DEN    2',A(SCAN95)
         DC    X'FF'
         SPACE
         LTORG
         END
