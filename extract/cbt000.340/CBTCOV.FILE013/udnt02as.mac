         PRINT NOGEN
CHECK    CSECT                          BASISREGISTER  12,11
         BASER 3
         REG
START    EQU   *
         L     2,0(1)                   ADRESSE PARAMETERLISTE RETTEN
         LA    3,0                      R3 LOESCHEN
         CH    3,0(2)                   PARAMETERLISTE DA ?
         BE    OPEN                     BRANCH WENN KEINE PARAMETER DA
         CLC   2(4,R2),=C'DUMP'
         BNE   STARTM00
         OI    DPSWITCH+1,X'F0'
         B     OPEN
STARTM00 EQU   *
         LH    3,0(2)                   LAENGE NACH R3
         BCTR  3,0                      WEGEN EXECUTE
         LA    4,2(2)                   LAENGENFELD UEBERSPRINGEN
         LA    7,Z03PARM
         LR    8,4
         EX    3,MOVE                   MVC    0(0,7),0(8)
EXE01    EX    3,TRANS                  TRT  0(0,4),TABELLE
         BC    8,ENDPARM                BRANCH WENN PARMLIST-ENDE
         LA    5,1(1)                   R5 AUF NAECHSTEN PARMWERT
         SR    1,4                      LAENGE DES ARGUMENTES BESTIMM.
         SR    3,1                      / RESTLICHE LAENGE DER PARA-
         SH    3,=H'1'                  / METERLISTE IN R3 ERMITTELN
         BCTR  1,0                      WEGEN EXECUTE
EXE02    EX    1,PACKEN                 PACK   DWORT,0(0,4)
         LR    4,5                      R4 MIT ADR NAECHSTER PARMW. LAD
         CVB   6,DWORT                  PARMWERT NACH BINAER KONVERT.
         CH    6,=H'21'                 WIRD REC-TYP > 21 ANGESPROCHEN?
         BH    WTO01                    WENN JA, DANN MELDUNG
         LA    7,PARMWERT               ADR  PARMWERT-TABELLE LADEN
         AR    7,6                      SATZTYP AUS PARM AUF ADR ADD.
         MVI   0(7),X'FF'               FF IN ENTSPR. SATZTYP-FELD
         LTR   3,3                      PARMLIST ABGEARBEITET ?
         BP    EXE01                    BRANCH WENN WEITERE PARAMETER
         B     OPEN                     BEI PARM-ENDE
WTO01    EQU   *
         CVD   6,DWORT                  KONV. SATZTYP
         UNPK  WTO01A+27(8),DWORT       NACH WTO BRINGEN
WTO01A   WTO   'CHECK: SMF-SATZTYP           IST NICHT ERLAUBT ***'
         LTR   3,3                      PARMLISTE ABGEARBEITET ?
         BP    EXE01                    BRANCH WENN NOCH PARAMETER DA
         B     OPEN
ENDPARM  EQU   *
         LR    1,3                      RESTLICHE LAENGE PARM-LISTE
         LA    3,0                      BEDINGUNG 'ENDE-PARMLIST'SETZEN
         B     EXE02
         EJECT
OPEN     EQU   *
         OPEN  CONTROL
GETCTL   GET   CONTROL,CARD
         LA    R1,CARD
         LA    R2,80(R1)
SEARCHCD EQU   *
         CLC   0(8,R1),=C'INTERVAL'
         BE    XINT
         CLC   0(3,R1),=C'CPU'
         BE    XCPU
         CLC   0(4,R1),=C'PAGE'
         BE    XPAGE
         CLC   0(4,R1),=C'EXCP'
         BE    XEXCP
         CLC   0(3,R1),=C'DEV'
         BE    XDEV
         CLC   0(4,R1),=C'TEXT'
         BE    XTEXT
         CLC   0(4,R1),=C'WAIT'
         BE    XWAIT
         CLC   0(4,R1),=C'PT01'
         BE    XPT01
         CLC   0(7,R1),=C'PROZENT'
         BE    XPRO
INCREASE EQU   *
         LA    R1,1(R1)
         CR    R2,R1
         BNH   GETCTL
         B     SEARCHCD
         SPACE 2
XPRO     EQU   *
         CLI   7(R1),C'='
         BNE   INCREASE
         LA    R1,8(R1)
         PACK  C21PROZ,0(5,R1)
         LA    R1,5(R1)
         B     INCREASE
XINT     EQU   *
         CLI   8(R1),C'='
         BNE   SKIP
         LA    R1,9(R1)
         LA    R0,COMINTV
         BAL   R14,UCONVHS
         LA    R1,4(R1)
         B     INCREASE
XCPU     EQU   *
         CLI   3(R1),C'='
         BNE   INCREASE
         LA    R1,5(R1)
         LA    R0,DESCPU
         BAL   R14,UCONVHS
         CLI   4(R1),C','
         BNE   INCREASE
         LA    R1,5(R1)
         LA    R0,DESCPU+4
         BAL   R14,UCONVHS
         LA    R1,4(R1)
         B     INCREASE
XPAGE    EQU   *
         CLI   4(R1),C'='
         BNE   INCREASE
         LA    R1,6(R1)
         LA    R0,DESPAGE
         BAL   R14,UCONVHS
         CLI   4(R1),C','
         BNE   INCREASE
         LA    R1,5(R1)
         LA    R0,DESPAGE+4
         BAL   R14,UCONVHS
         LA    R1,4(R1)
         B     INCREASE
XEXCP    EQU   *
         CLI   4(R1),C'='
         BNE   INCREASE
         LA    R1,6(R1)
         LA    R0,DESEXCP
         BAL   R14,UCONVHS
         CLI   4(R1),C','
         BNE   INCREASE
         LA    R1,5(R1)
         LA    R0,DESEXCP+4
         BAL   R14,UCONVHS
         LA    R1,4(R1)
         B     INCREASE
XWAIT    EQU   *
         CLI   4(R1),C'='
         BNE   INCREASE
         LA    R1,6(R1)
         LA    R0,DESWAIT
         BAL   R14,UCONVHS
         CLI   4(R1),C','
         BNE   INCREASE
         LA    R1,5(R1)
         LA    R0,DESWAIT+4
         BAL   R14,UCONVHS
         LA    R1,4(R1)
         B     INCREASE
XPT01    EQU   *
         CLI   4(R1),C'='
         BNE   INCREASE
         LA    R1,6(R1)
         LA    R0,DESPT01
         BAL   R14,UCONVHS
         CLI   4(R1),C','
         BNE   INCREASE
         LA    R1,5(R1)
         LA    R0,DESPT01+4
         BAL   R14,UCONVHS
         LA    R1,4(R1)
         B     INCREASE
XDEV     EQU   *
         CLC   3(2,R1),=C'=('
         BNE   SKIP
         LA    R1,5(R1)
PACKDEV  EQU   *
         TR    0(3,R1),CHARTAB-X'C1'
         PACK  FWORT,0(4,R1)
         L     R3,FWORT
         SRL   R3,8
         L     R4,DEVPOINT
         CLC   0(2,R4),=X'FFFF'
         BE    SKIP
         STH   R3,0(R4)
         LA    R4,2(R4)
         ST    R4,DEVPOINT
         CLI   3(R1),C','
         BE    DEVNN
         CLI   3(R1),C')'
         BE    INCREASE
DEVNN    EQU   *
         CR    R1,R2
         BH    GETCTL
         LA    R1,4(R1)
         B     PACKDEV
XTEXT    EQU   *
         LA    R1,5(R1)
         LR    R4,R1
SEEKTEXT EQU   *
         CLI   0(R4),C' '
         BE    TEXTEND
         CR    R2,R4
         BNH   TEXTEND
         LA    R4,1(R4)
         B     SEEKTEXT
TEXTEND  EQU   *
         SR    R4,R1
         STH   R4,PLTXTLN
         BCTR  R4,0
         EX    R4,MVCTXT
         AR    R1,R4
         B     SEARCHCD
MVCTXT   MVC   PLTXT(0),0(R1)
SKIP     EQU   *
         WTO   'CONTROL CARD ERROR. NO PLOT OUTPUT'
         OI    DESCPU,X'FF'
         OI    DESPAGE,X'FF'
         OI    DESEXCP,X'FF'
         OI    DESWAIT,X'FF'
         OI    DESPT01,X'FF'
         EJECT
EODCARD  EQU   *
         OPEN  (URBAND,(INPUT),LISTE,(OUTPUT))
GETSMF   EQU   *
         CLI   EODID,C'E'
         BE    EOD
         GET   URBAND,AREA               LESEN SMFSAETZE
         LA    R1,AREA
         ST    1,REG1
         LR    R3,R1
         AP    READZAEL,=P'1'
         TRT   5(1,1),PARMWERT          SATZTYP TESTEN
         BC    6,GETSMF                 WENN FF IN PARMWERT DANN UEBERL
         CLC   5(1,R3),ZSMFTYP
         BE    LEISTE
LAST     EQU   *
         MVI   COMEODID,X'FF'
         IC    R2,ZSMFTYP
         MVC   ZSMFTYP,5(R3)
         B     COMPHIGH
LEISTE   EQU   *
         CLI   EODID,C'E'
         BE    EOD
         L     1,REG1
         XR    2,2
         IC    2,5(1)                   SATZTYP NACH R2 LADEN
COMPHIGH EQU   *
         CH    2,=H'21'
         BH    OTHER
         SLA   2,2                      MIT 4 MULTIPLIZIEREN
         LA    2,4(2)                   4 ADDIEREN DA TYP0 MOEGLICH
         LA    1,4(1)                   SATZLAENGENFELD UEBERSPRINGEN
         ST    1,SATZADR                SATZADRESSE RETTEN
         CP    DATEMAX,6(4,R1)
         BH    COMPTIME
         ZAP   DATEMAX,6(4,R1)
COMPTIME EQU   *
         CLC   TIMEMAX,2(R1)
         BH    SPRING
         MVC   TIMEMAX,2(R1)
SPRING   EQU   *
         B     *(2)                     SPRUNG IN BRANCHLEISTE
         B     TYP00                    ***  BRANCHLEISTE
         B     TYP01                    ***  VERZWEIGUNG AUFGRUND DER
         B     TYP02                    ***  SMF-SATZTYPEN
         B     TYP03                    ***
         B     TYP04                    ***
         B     TYP05                    ***
         B     TYP06                    ***
         B     TYP07                    ***
         B     TYP08                    ***
         B     TYP09                    ***
         B     TYP10                    ***
         B     TYP11                    ***
         B     TYP12                    ***
         B     TYP13                    ***
         B     TYP14                    ***
         B     TYP15                    ***
         B     TYP16                    ***
         B     TYP17                    ***
         B     TYP18                    ***
         B     TYP19                    ***
         B     TYP20                    ***
         B     TYP21                    ***
OTHER    EQU   *
         CLI   EODID,C'E'
         BE    GETSMF
         AP    NUMOTHER,=P'1'
         B     GETSMF
         EJECT
***********************************************************************
TYP01    EQU   *
         NOP NOLOAD01
         OI    TYP01+1,X'F0'
         L     1,REG1
         MVC   DATFIX,10(1)             DATUM UEBERTRAGEN
         MVC   ZEIT,6(1)                TIME UEBERTRAGEN
         MVC   Z01DATEA,MASKDTE
         ED    Z01DATEA,DATFIX+1        DATUM IN DRUCKZEILE
         L     1,ZEIT
         BAL   14,UCONV
         CVD   1,DWORT
         MVC   Z01TIMEA,MASKTME
         ED    Z01TIMEA,DWORT+4
         OPEN  (PLOT01,(OUTPUT),PLOT02,(OUTPUT))
         MVI   COMEODID,X'00'
         LOAD  EP=SMFTYP01
         ST    R0,ATYPXX
NOLOAD01 EQU   *
         L     R15,ATYPXX
         CALL  (15),(COMMON,REG1,LISTE,PLOT01,PLOT02,PLOT03),VL
         TM    COMEODID,X'FF'
         BNO   TYP01M01
         CLOSE (PLOT01,,PLOT02)
         DELETE EP=SMFTYP01
         OPEN  (PLOT01,,PLOT02)
         LOAD  EP=SMFPLOT
         ST    R0,APLOT
         CLI   DESWAIT,X'FF'
         BE    TESTPL2
         MVC   PLOTNORM,C01WAITX
         MVC   PLOTLIM,DESWAIT
         L     R15,APLOT
         LA    R1,PLOT01
         ST    R1,ADCBPLOT
         LA    R1,ADCBPLOT
         BALR  R14,R15
TESTPL2  EQU   *
         CLI   DESPT01,X'FF'
         BE    TYP01END
         MVC   PLOTNORM,C01PAGEX
         MVC   PLOTLIM,DESPT01
         L     R15,APLOT
         LA    R1,PLOT02
         ST    R1,ADCBPLOT
         LA    R1,ADCBPLOT
         BALR  R14,R15
TYP01END EQU   *
         CLOSE (PLOT01,,PLOT02)
         DELETE EP=SMFPLOT
         NI    COMEODID,X'00'
         B     LEISTE
TYP01M01 EQU   *
         L     R9,SATZADR
         CLC   ZEXTIME,18(R9)          COMP EXPIRATION-TIME OF INTERVAL
         BL    TYP01M02
         MVC   ZEXTIME,18(R9)
         B     TYPXXM00
TYP01M02 EQU   *
         MVC   FWORT,18(R9)
         L     R3,FWORT
         S     R3,ZEXTIME              ECHTE INTERVALL DAUER
         A     R3,ANSCHALT             ADD ANSCHALTZEIT
         ST    R3,ANSCHALT             STORE ANSCHALTZEIT
         MVC   ZEXTIME,18(R9)
         B     TYPXXM00
         EJECT
***********************************************************************
TYP04    EQU   *
         NOP   NOLOAD04
         OI    TYP04+1,X'F0'
         OPEN  (PLOT01,(OUTPUT),PLOT02,(OUTPUT),PLOT03,(OUTPUT))
         MVI   COMEODID,X'00'
         LOAD  EP=SMFTYP04
         ST    R0,ATYPXX
NOLOAD04 EQU   *
         L     R15,ATYPXX
         CALL  (15),(COMMON,REG1,LISTE,PLOT01,PLOT02,PLOT03),VL
         TM    COMEODID,X'FF'
         BNO   TYPXXM00
         CLOSE (PLOT01,,PLOT02,,PLOT03)
         DELETE EP=SMFTYP04
         OPEN  (PLOT01,,PLOT02)
         LOAD  EP=SMFPLOT
         ST    R0,APLOT
         CLI   DESPAGE,X'FF'
         BE    TESTPL02
         MVC   PLOTNORM,C04PAGEX
         MVC   PLOTLIM,DESPAGE
         L     R15,APLOT
         LA    R1,PLOT01
         ST    R1,ADCBPLOT
         LA    R1,ADCBPLOT
         BALR  R14,R15
TESTPL02 EQU   *
         CLI   DESCPU,X'FF'
         BE    TESTPL03
         MVC   PLOTNORM,C04CPUMX
         MVC   PLOTLIM,DESCPU
         L     R15,APLOT
         LA    R1,PLOT02
         ST    R1,ADCBPLOT
         LA    R1,ADCBPLOT
         BALR  R14,R15
TESTPL03 EQU   *
         CLI   DESEXCP,X'FF'
         BE    TYP04END
         XC    ECBSORT,ECBSORT
         LA    R1,SORTPARM
         ATTACH EP=SORT,MF=(E,(1)),ECB=ECBSORT
         ST    R1,TCBSORT
         WAIT  ECB=ECBSORT
         DETACH TCBSORT
         OPEN  PLOT03
         MVC   PLOTNORM,C04EXCPX
         MVC   PLOTLIM,DESEXCP
         L     R15,APLOT
         LA    R1,PLOT03
         ST    R1,ADCBPLOT
         LA    R1,ADCBPLOT
         BALR  R14,R15
TYP04END EQU   *
         MVI   COMEODID,X'00'
         B     LEISTE
***********************************************************************
         EJECT
***********************************************************************
TYP07    EQU   *                        DATA LOST            TYP7
         TM    COMEODID,X'FF'
         BZ    TYP07M07
         MVI   COMEODID,X'00'
         B     LEISTE
TYP07M07 EQU   *
         L     9,SATZADR
         MVC   FWORT(2),14(9)           WEGEN ALIGMENT
         LH    2,FWORT                  ANZAHL RECORDS LOST IN REG2
         A     2,SMFLOST                KUMMULIERE RECORDS LOST
         ST    2,SMFLOST
         MVC   Z02TEXT(48),=C'SMFDATA LOST !                           *
                     '                  FOLGEKARTE
         BAL   14,PRINT
         B     TYPXXM00
***********************************************************************
         EJECT
***********************************************************************
TYP21    EQU   *                        ESV
         NOP   NOLOAD21
         OI    TYP21+1,X'F0'
         MVI   COMEODID,X'00'
         LOAD  EP=SMFTYP21
         ST    R0,ATYPXX
NOLOAD21 EQU   *
         L     R15,ATYPXX
         CALL  (15),(COMMON,REG1,LISTE),VL
         TM    COMEODID,X'FF'
         BNO   TYPXXM00
         DELETE EP=SMFTYP21
         MVI   COMEODID,X'00'
         B     LEISTE
TYP00    EQU   *
TYP02    EQU   *                        DUMP HEADER RECORD  TYP2
TYP03    EQU   *                        DUMP TRAILER RECORD TYP3
TYP05    EQU   *                        JOB TERMINATION RECORD TYP5
TYP06    EQU   *                        OUTPUT WRITER RECORD TYP6
TYP08    EQU   *                        I/O - CONFIGURATION  TYP8
TYP09    EQU   *                        VARY  ONLINE         TYP9
TYP10    EQU   *                        ALLOCATION RECOVERY  TYP10
TYP11    EQU   *                        VARY OFFLINE         TYP11
TYP12    EQU   *                        END OF DAY           TYP12
TYP13    EQU   *                        DYNAMIC STORAGE CONFIGURATION
TYP14    EQU   *                        INPUT OR RDBACK ACTIVITY TYP14
TYP15    EQU   *                        OUTPUT,UPDAT ACTIVITY    TYP15
TYP16    EQU   *              DUMMY
TYP17    EQU   *                        SCRATCH DATA SET STATUS  TYP17
TYP18    EQU   *                        RENAME  DATA SET STATUS  TYP18
TYP19    EQU   *                        DIRECT ACCESS VOLUME
TYP20    EQU   *                        JOB  COMMENCEMENT
         TM    COMEODID,X'FF'
         BZ    TYPXXM00
         MVI   COMEODID,X'00'
         B     LEISTE
TYPXXM00 EQU  *
         L     9,SATZADR
         XR    2,2
         IC    2,1(9)
         SLA   2,2                      MULTIPLIZIERE MIT 4
         LA    3,NUM00
         AR    3,2
         AP    0(4,3),=P'1'             KUMMULIERE ZAEHLFELD PRO SATZ
         AP    ARBZAEHL,=P'1'
         B     GETSMF
         EJECT
EODATA   EQU   *
         MVI   EODID,C'E'
         LA    R1,AREA
         LR    R3,R1
         B     LAST
EOD      EQU   *
         MVC   Z01DATEE,MASKDTE
         ED    Z01DATEE,DATEMAX+1
         L     1,TIMEMAX
         BAL   14,UCONV
         CVD   1,DWORT
         MVC   Z01TIMEE,MASKTME
         ED    Z01TIMEE,DWORT+4
         PUT   LISTE,ZEIL01-1
         PUT   LISTE,ZEIL01
         BAL   14,LOESCH
         MVI   ZEIL01+1,C'-'
         MVC   ZEIL01+2(131),ZEIL01+1
         PUT   LISTE,ZEIL01
         CLI   Z03PARM,X'40'
         BE    SKIPZ03
         PUT   LISTE,ZEIL03
SKIPZ03  EQU   *
         BAL   14,LOESCH
         MVC   ZEIL01+9(18),=C'SAETZE  GELESEN:  '
         UNPK  ZEIL01+27(6),READZAEL
         OI    ZEIL01+32,X'F0'
         MVC   ZEIL01+40(21),=C'SAETZE  VERARBEITET: '
         UNPK  ZEIL01+61(6),ARBZAEHL
         OI    ZEIL01+66,X'F0'
         PUT   LISTE,ZEIL01
         BAL   14,LOESCH
*        ANSCHALT-ZEIT
         L     R1,ANSCHALT
         BAL   R14,UCONV
         CVD   R1,DWORT
         MVC   Z04ANSCH,MASKTME
         ED    Z04ANSCH,DWORT+4
*        SYSTEM WAIT-ZEIT
         L     R1,C01WAIT
         BAL   R14,UCONV
         CVD   R1,DWORT
         MVC   Z04WAIT,MASKTME
         ED    Z04WAIT,DWORT+4
*        CPU-ZEIT GESAMT
         L     R1,ANSCHALT
         S     R1,C01WAIT
         LR    R2,R1                   RETTEN FUER PROZENTERMITTLUNG
         BAL   R14,UCONV
         CVD   R1,DWORT
         MVC   Z04CPUTO,MASKTME
         ED    Z04CPUTO,DWORT+4
         MVC   Z04EQ1,=C' ='
*        PROZENT CPU-ZEIT GESAMT VON ANSCHALTZEIT
         MH    R2,=H'100'
         SRDA  R2,32
         D     R2,ANSCHALT
         CVD   R3,DWORT
         MVC   Z04CPUP1,MASKPROZ
         ED    Z04CPUP1,DWORT+6
         MVC   Z04PCTOT,=C' %'
*        CPU-ZEIT SYSTEM
         L     R1,ANSCHALT
         S     R1,C01WAIT
         S     R1,C04CPU
         LR    R2,R1
         BAL   R14,UCONV
         CVD   R1,DWORT
         MVC   Z04CPUSY,MASKTME
         ED    Z04CPUSY,DWORT+4
*        PROZENT CPU-ZEIT SYSTEM
         MH    R2,=H'100'
         SRDA  R2,32
         D     R2,ANSCHALT
         CVD   R3,DWORT
         MVC   Z04CPUP2,MASKPROZ
         ED    Z04CPUP2,DWORT+6
         MVC   Z04PCSYS,=C' %'
*        CPU-ZEIT PROGRAMME
         L     R1,C04CPU
         BAL   R14,UCONV
         CVD   R1,DWORT
         MVC   Z04CPUPG,MASKTME
         ED    Z04CPUPG,DWORT+4
         MVC   Z04EQ3,=C' ='
*        PROZENT CPU-ZEIT PROBLEM PROGRAMME
         L     R2,C04CPU
         MH    R2,=H'100'
         SRDA  R2,32
         D     R2,ANSCHALT
         CVD   R3,DWORT
         MVC   Z04CPUP3,MASKPROZ
         ED    Z04CPUP3,DWORT+6
         MVC   Z04PCPGM,=C' %'
*
         PUT   LISTE,ZEIL05
         PUT   LISTE,ZEIL04
         BAL   R14,LOESCH
         LA    R1,0
         C     R1,SMFLOST
         BZ    NOTLOST
         MVC   ZEIL01+9(24),=C'ANZAHL SMF-SAETZE LOST: '
         CVD   R1,DWORT
         UNPK  ZEIL01+33(6),DWORT+5(3)
         OI    ZEIL01+38,X'F0'
NOTLOST  EQU   *
         PUT   LISTE,ZEIL01
         BAL   14,LOESCH
         MVC   ZEIL01+9(37),=C'ANZAHL UND PROZENT DER SMF-SATZTYPEN:'
         PUT   LISTE,ZEIL01
         BAL   14,LOESCH
         PUT   LISTE,ZEIL01
         MVC   ZEIL01+9(6),=C'TYP  ='
         MVC   ZEIL01+30(8),=C'PROZENT='
         LA    8,NUM00
         SP    COUNTER,COUNTER
SEARCH   CP    0(4,8),=P'0'
         BE    NOPUT
         UNPK  ZEIL01+12(2),COUNTER
         MVC   ZEIL01+15(10),=X'40204B2020204B202021'
         ED    ZEIL01+15(10),0(8)
         OI    ZEIL01+13,X'F0'
         ZAP   DWORT,0(4,R8)
         MP    DWORT,=P'100'
         DP    DWORT,ARBZAEHL
         MVC   ZEIL01+38(4),MASKPROZ
         ED    ZEIL01+38(4),DWORT+2
         PUT   LISTE,ZEIL01
NOPUT    AP    COUNTER,=P'1'
         CP    COUNTER,=P'22'
         BH    ENDE
         LA    8,4(8)
         B     SEARCH
LOESCH   EQU   *
         MVI   ZEIL01+1,X'40'
         MVC   ZEIL01+2(131),ZEIL01+1
         BR    14
ENDE     EQU   *
         CLOSE (URBAND,,LISTE)
         XR    15,15
DPSWITCH NOP   ABEND
         B     END99
ABEND    ABEND 4,DUMP
***********************************************************************
         EJECT
***********************************************************************
*        U P R O S
***********************************************************************
***********************************************************************
*        UPRO U C O N V H S  KONVERTIERT DIE ZEIT IN DER FORM :
*        HHMM   (CHAR STUNDEN/MINUTEN )
*        NACH HUNDERTSTEL SEKUNDEN
*        R1=ADRESSE  DER ZEIT IN DER FORM  HHMM (VOLLWORT)
*        EINGABE: R0=ADRESSE DES ZIELFELDES (VOLLWORT)
*        DAS ERGEBNIS  WIRD DORT ABGESPEICHERT, WO R0 HINZEIGT
***********************************************************************
UCONVHS  EQU   *
*        REG USAGE: R2,3,4,5,6
         STM   2,6,SVUCONV
         XC    DWORT,DWORT
         PACK  DWORT,2(2,R1)
         CVB   R2,DWORT
         MH    R2,=H'6000'
         ST    R2,FWORT
         XC    DWORT,DWORT
         PACK  DWORT,0(2,R1)
         CVB   R2,DWORT
         SRDA  R2,32
         M     R2,=F'360000'
         A     R3,FWORT
         ST    R3,FWORT
         LR    R2,R0
         MVC   0(4,R2),FWORT
         LM    2,6,SVUCONV
         BR    R14
***********************************************************************
         SPACE 3
***********************************************************************
*        UVONV KONVERTIERT HUNDERTSTEL SEKUNDEN NACH STD/MIN/SEK
*        ZUR DRUCKAUFBEREITUNG
*        EINGABE:R1 ENTHAELT DIE ZEIT BINAER IN HUNDERTSTEL SEKUNDEN
*        AUSGABE: R1 BINAER IN DER FORM  0HHMMSS0
***********************************************************************
UCONV    EQU   *
         STM   2,6,SVUCONV
         LR    2,1
         SRDA  2,32
         D     2,=F'100'                HUNDERTSTEL SEK. -----> SEK.
         XR    2,2                      SEK. NACH R3 , LOESCHEN R2
         LA    4,60                     R4=60
         DR    2,4                      SEK:60 =MIN
         LR    6,2                      SEK NACH R6
         XR    2,2                      R2 LOESCHEN
         DR    2,4                      MIN:60 =STD
         MH    2,=H'100'                MIN*100 (STELLEN-AUSRICHTUNG)
         ALR   6,2                      ADD MINUTEN UND SEKUNDEN
         MH    3,=H'10000'              STD*10000 (STELLEN-AUSRICHTUNG)
         ALR   6,3                      ADD STD,MIN,SEK
         LR    1,6
         LM    2,6,SVUCONV
         BR    14
SVUCONV  DC    5F'0'
***********************************************************************
*        UPRO  P R I N T  WIRD BENUTZT, UM FEHLERMELDUNGEN UND
*        WERTE AUSZUDRUCKEN
***********************************************************************
PRINT    EQU   *
         STM   14,6,SAVE9REG
         AP    COUNTER,=P'1'
         CP    COUNTER,=P'60'
         BNH   PUT
         PUT   LISTE,ZEIL01-1                X'8B' SKIP TO CHAN1 IMM
         AP    SEIZAEHL,=P'1'
         OI    Z01SEITE+3,X'F0'
         UNPK  Z01SEITE,SEIZAEHL             SEITENZAHL IN UEBERSCHRIFT
         SP    COUNTER,COUNTER
         PUT   LISTE,ZEIL01                  DRUCKEN UEBERSCHRIFT
PUT      EQU   *
         PUT   LISTE,ZEIL02
         MVI   ZEIL02+1,X'40'
         MVC   ZEIL02+2(131),ZEIL02+1
         LM    14,6,SAVE9REG
         BR    14
***********************************************************************
         EJECT
***********************************************************************
***                    DEFINITIONEN                                 ***
***********************************************************************
*                  FUER EXECUTE
TRANS    TRT   0(0,4),TABELLE
PACKEN   PACK  DWORT,0(0,4)
MOVE     MVC   0(0,7),0(8)               ALLGEMEINER MOVE
***********************************************************************
*                  TABELLEN
***********************************************************************
TABELLE  EQU   *                        TRANSLATE TABELLE
         DC    256X'00'                 TABELLE AUF  X'00' SETZEN
         ORG   TABELLE+C','             TABELLENPLATZ 'KOMMA' EINSTELL.
         DC    C','                     KOMMA DEFINIEREN
         ORG
NUMTAB   DC    256X'00'
         ORG   NUMTAB+X'0A'
         DC    5X'FF'
         ORG   NUMTAB+X'1A'
         DC    5X'FF'
         ORG   NUMTAB+X'2A'
         DC    5X'FF'
         ORG   NUMTAB+X'3A'
         DC    5X'FF'
         ORG   NUMTAB+X'4A'
         DC    5X'FF'
         ORG   NUMTAB+X'5A'
         DC    5X'FF'
         ORG   NUMTAB+X'6A'
         DC    5X'FF'
         ORG   NUMTAB+X'7A'
         DC    5X'FF'
         ORG   NUMTAB+X'8A'
         DC    5X'FF'
         ORG   NUMTAB+X'9A'
         DC    5X'FF'
         ORG   NUMTAB+X'A0'
         DC    96X'FF'
         ORG
***********************************************************************
PARMWERT DC    100X'00'               / IN DIESER TABELLE WERDEN DIE
*                                     / FELDER, DIE DEN SMF-SATZTYPEN
*                                     / AUS DER PARM-ANGABE ENTSPRECHEN
*                                     / AUF X'FF' GESETZT. SATZTYPEN ,
*                                     / DIE HIER MIT 'FF' GEKENNZEICHN.
*                                     / WURDEN, WERDEN BEI DER VERARBEI
*                                     / TUNG IGNORIERT
***********************************************************************
*                  SATZ-ZAEHLER
***********************************************************************
NUM00    DC    PL4'0'
NUM01    DC    PL4'0'
NUM02    DC    PL4'0'
NUM03    DC    PL4'0'
NUM04    DC    PL4'0'
NUM05    DC    PL4'0'
NUM06    DC    PL4'0'
NUM07    DC    PL4'0'
NUM08    DC    PL4'0'
NUM09    DC    PL4'0'
NUM10    DC    PL4'0'
NUM11    DC    PL4'0'
NUM12    DC    PL4'0'
NUM13    DC    PL4'0'
NUM14    DC    PL4'0'
NUM15    DC    PL4'0'
NUM16    DC    PL4'0'
NUM17    DC    PL4'0'
NUM18    DC    PL4'0'
NUM19    DC    PL4'0'
NUM20    DC    PL4'0'
NUM21    DC    PL4'0'
NUMOTHER DC    PL4'0'                   UEBRIGE SATZTYPEN
***********************************************************************
*                  DRUCKZEILE 1
***********************************************************************
         DC    B'10001011'              SKIP  TO  CHAN 1 IMMEDIATELY
ZEIL01   DS    0CL133
         DC    B'00010111'              X'17' SPACE 2 AFTER PRINT
         DC    CL20'     SMF-SAETZE VOM '
Z01DATEA DC  CL7'       '
         DC    CL2' /'
Z01TIMEA DC    CL10' '
         DC    CL5' BIS '
Z01DATEE DS    CL7
         DC    CL2' /'
Z01TIMEE DS    CL10
         DC    CL56' '
         DC    CL7'SEITE: '
Z01SEITE DC    CL4'   1'
         DC    CL2' '
***********************************************************************
*                  DRUCKZEILE 2
***********************************************************************
ZEIL02   DS    0CL133
         DC    B'00001001'              X'09' SPACE 1 AFTER PRINT
Z02TEXT  DC    CL16' '                  FEHLERART
         DC    CL6' '
Z02TDA   DC    CL10' '                  XX.XX.XX  OD. XX.XXX
         DC    CL6' '
Z02TDN   DC    CL10' '                  XX.XX.XX
         DC    CL6' '
Z02TY    DC    CL2' '                   SATZART
         DC    CL4' '
         DC    CL8' '
Z02JOBL  DC    CL8' '
         DC    CL56' '
***********************************************************************
*                  DRUCKZEILE 3
***********************************************************************
ZEIL03   DS    0CL133
         DC    B'00001001'              X'09' SPACE 1 AFTER PRINT
         DC    CL77'DIE FOLGENDEN SMF-SATZTYPEN WURDEN NICHT MIT AUF DA*
               S AUSGABEBAND UEBERNOMMEN:'
Z03PARM  DC    CL55' '
***********************************************************************
*                  DRUCKZEILE 4
***********************************************************************
         ORG   ZEIL01
ZEIL04   DS    0CL133
         DS    CL2
Z04ANSCH DS    CL10
         DS    CL2
Z04WAIT  DS    CL10
         DS    CL7
Z04CPUTO DS    CL10
Z04EQ1   DS    CL2
Z04CPUP1 DS    CL4
Z04PCTOT DS    CL2
         DS    CL10
Z04CPUSY DS    CL10
Z04EQ2   DS    CL2
Z04CPUP2 DS    CL4
Z04PCSYS DS    CL2
         DS    CL13
Z04CPUPG DS    CL10
Z04EQ3   DS    CL2
Z04CPUP3 DS    CL4
Z04PCPGM DS    CL2
         ORG
ZEIL05   DS    0CL133
         DC    X'09'
         DC    C'ANSCHALTZEIT  SYSTEMWAIT  CPU TOTAL (ANSCHALT-WAIT)  '
         DC    C' CPU SYSTEM (CPUTOTAL-CPUPGM)   CPU PGM (ANWENDUNGSPR'
         DC    C'OGRAMME)'
         DC    18C' '
***********************************************************************
*                  SKALARE FELDER
***********************************************************************
DWORT    DC    D'0'                     HILFSFELD (CVD,CVB, ETC. )
FWORT    DC    F'0'
ZEIT     DC    F'0'
ZEXTIME  DC    F'-1'
ANSCHALT DC    F'0'
SATZADR  DC    F'0'                     SATZADR NACH ERFOLGTEM GET
SMFLOST  DC    F'0'
REG1     DC    F'0'
DEVPOINT DC    A(DESDEV)
***********************************************************************
*        ALLGEMEINER INTERKOMMUNIKATONSBEREICH FUER ALLE
*        UNTERPROGRAMME ZWECKS UEBERGABE VON ERRECHNETEN WERTEN ZUR
*        ENDAUSWERTUNG DURCH DAS HAUPTPROGRAMM.
*        DIE IDENTIFIER  C01,C02,C03,C04,......ETC WEISEN DARAUF
*        HIN , IN WELCHEM UNTERPROGRAMM DAS FELD GEFUELLT WURDE.
***********************************************************************
COMMON   DS    0F
COMINTV  DC    F'60000'                 10 MINUTEN DEFAULT INTERVALL
         ORG   *-4
COMEODID DS    CL1                      EOD-STEUERUNG FUER DIE
*                                       EINZELNEN SATZTYPEN
         ORG
C04PAGEX DC    F'0'                     MAXPLOTWERT FUER PAGING
C04CPUMX DC    F'0'                     MAXPLOTWERT FUER CPUZEIT
C04EXCPX DC    F'0'                     MAXPLOTWERT FUER ZUGRIFFE
C01WAITX DC    F'0'                     MAXPLOTWERT FUER WAITZEIT (T01)
C01PAGEX DC    F'0'                     MAXPLOTWERT FUER PAGERATE
C01WAIT  DC    F'0'
C01PAGEI DC    F'0'
C01PAGEO DC    F'0'
C04PAGEI DC    F'0'
C04PAGEO DC    F'0'
C04CPU   DC    F'0'
C04STEPS DC    F'0'
C21TR    DC    F'0'
C21TW    DC    F'0'
C21SIO   DC    F'0'
C21PR    DC    F'0'
C21PW    DC    F'0'
C21NB    DC    F'0'
C21ERG   DC    F'0'
C21PROZ  DC    F'0'
***********************************************************************
*        TABELLE ZUR STEUERUNG DES PLOT-OUTPUTS
***********************************************************************
         DS    0D
ADCBPLOT DC    A(PLOT01)
ADCBPRNT DC    A(LISTE)
PLOTLIM  DC    D'0'
DESDEV   DC    10D'0'
         DC    X'FFFFFFFFFFFFFFFF'
PLOTNORM DC    F'0'
PLTXTLN  DC    H'18'
PLTXT    DC    80C' '
         DS    0D
DESCPU   DC    8X'FF'
DESPAGE  DC    8X'FF'
DESEXCP  DC    8X'FF'
DESWAIT  DC    8X'FF'
DESPT01  DC    8X'FF'
***********************************************************************
*        PARAMETER FUER DYNAMISCH AUFGERUFENEN SORT
***********************************************************************
SORTPARM DS    0D
         DC    X'80',AL3(SORTINFO)
         CNOP  2,4
SORTINFO DC    AL2(SORTCNTL-SORTINFO-2)
         DC    A(SSORT)                 SORT FIELD START
         DC    A(ESORT)                 SORT FIELD END
         DC    A(SREC)                  RECORD FIELD START
         DC    A(EREC)                  RECORD FIELD END
         DC    F'0'                     E15 NOT USED
         DC    F'0'                     E35 NOT USED
         DC    C'SORT'                  ALTERNATE DDNAME
WKCORE   DC    X'00',XL3'9000'          WORKINK STORAGE
         DC    X'FF00',C'AP'
SORTCNTL EQU   *
SSORT    DC    C' SORT FIELDS=(1,6,A,7,4,A,11,4,A),FORMAT=BI,SIZE=E'
SSORT1   DC    C'1000'
ESORT    DC    C' '
SREC     DC    C' RECORD TYPE=F,LENGTH=18'
EREC     DC    C' '
ECBSORT  DC    F'0'
TCBSORT  DC    F'0'
***********************************************************************
*        VOLLWORTE ZUM SPEICHERN DER LOAD-ADRESSEN DER UPROS
APLOT    DC    F'0'
ATYPXX   DC    F'0'
***********************************************************************
ZSMFTYP  DC    X'00'
SAVE9REG DC    9F'0'
READZAEL DC    PL4'0'                   ANZAHL GELESENER SAETZE
ARBZAEHL DC    PL4'0'                   ANZAHL VERARBEITETER SAETZE
SEIZAEHL DC    PL4'1'                   SEITENZAEHLER
DATFIX   DC    PL4'0'
DATEMAX  DC    PL4'0'
TIMEMAX  DC    F'0'
COUNTER  DC    PL2'0'
MASKDTE  DC    X'4021204B202020'
MASKTME  DC    X'402120204B20204B2020'
MASKPROZ DC    X'40202120'
CHARTAB  DC    57C'*'
         ORG   CHARTAB
         DC    X'0A0B0C0D0E0F'
         ORG   CHARTAB-X'C1'+X'F0'
         DC    C'0123456789'
         ORG
***********************************************************************
         EJECT
***********************************************************************
AREA     DS    CL3000
CARD     DS    CL80
EODID    DC    C'A'
***********************************************************************
***********************************************************************
*                  DCBS
CONTROL  DCB   DSORG=PS,MACRF=(GM),EODAD=EODCARD,DDNAME=CONTROL,       *
               RECFM=F,BLKSIZE=80
URBAND   DCB   DSORG=PS,MACRF=GM,DDNAME=INPUT,EODAD=EODATA
LISTE    DCB   DSORG=PS,MACRF=PM,LRECL=133,RECFM=FBM,DDNAME=LISTE
PLOT01   DCB   DSORG=PS,MACRF=(GM,PM),DDNAME=PLOT01,                   *
               RECFM=FB,LRECL=18,BLKSIZE=2016
PLOT02   DCB   DSORG=PS,MACRF=(GM,PM),DDNAME=PLOT02,                   *
               RECFM=FB,LRECL=18,BLKSIZE=2016
PLOT03   DCB   DSORG=PS,MACRF=(GM,PM),DDNAME=PLOT03,                   *
               RECFM=FB,LRECL=18,BLKSIZE=2016
         END   CHECK
