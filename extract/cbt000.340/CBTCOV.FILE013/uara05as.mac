UT235100 TITLE 'OPTIMALE BLOCKGROESSEN - HAUPTPROGRAMM'
         SPACE 3
***********************************************************************
*                                                                     *
* ERSTELLUNGSDATUM: 24.08.77                                          *
*                                                                     *
* AUTOR:            DR.MEDER                                          *
*                   ARAL AG, ABT. CSB                                 *
*                   WITTENER STRASSE                                  *
*                   4630 BOCHUM                                       *
*                   TEL.: 0234/3153360                                *
*                                                                     *
* PROGRAMMFUNKTIONEN:                                                 *
*                                                                     *
*       DAS PROGRAMM UT235100                                         *
*                                                                     *
*       -   KANN ALS BATCH-JOB ODER TSO-COMMAND LAUFEN                *
*                                                                     *
*       -   MITTELT OPTIMALE BLOCK- UND CI-GROESSEN UND MACHT         *
*           SPACE-KALKULATION FUER 3330, 3350 UND 3420.               *
*                                                                     *
*       -   BESITZT EINE HELP-FUNKTION (EINGABE HELP ODER H)          *
*                                                                     *
* ERFORDERLICHE DATEIEN:                                              *
*                                                                     *
*       SYSPRINT    (AUSGABE VON MELDUNGEN , LRECL=80, RECFM=FBA)     *
*       SYSIN       (KARTENEINGABE, LRECL=80, RECFM=FB)               *
*       LISTE       (AUSGABE DER LISTEN , LRECL=80, RECFM=FBA,        *
*                    WIRD UNTER TSO NICHT UNBEDINGT GEBRAUCHT)        *
*                                                                     *
* BESCHREIBUNG DER EINGABE:                                           *
*                                                                     *
*       SIEHE HELP-FUNKTION, EINGABE VON HELP ODER H UEBER SYSIN      *
*                                                                     *
* PROGRAMMSTRUKTUR:                                                   *
*                                                                     *
*       UT235100    HAUPTPROGRAMM                                     *
*       UR235200    EINGABE- UND PRUEFROUTINE                         *
*       UR235300    RECHENROUTINE OS-DASD                             *
*       UR235400    AUSGABEROUTINE OS-DASD                            *
*       UR235500    RECHENROUTINE VSAM                                *
*       UR235600    AUSGABEROUTINE VSAM                               *
*       UR235700    RECHENROUTINE BAND                                *
*       UR235800    AUSGABEROUTINE BAND                               *
*       UR235900    HELP-ROUTINE                                      *
*                                                                     *
*       ALLE UNTERPROGRAMME WERDEN DYNAMISCH GELADEN.                 *
*                                                                     *
***********************************************************************
         EJECT
         MACRO
&NAME    QINIT &BASEREG=13,&CSECT=CSECT,&EQU=(,R),&SAVE=(,SAVEAREA),   *
               &RETURN=(,RETURN)
.*
.*
.*       MACRO  QINIT                   INITIATE AN ASSEMBLER-PROGRAM
.*---------------------------------------------------------------------
.*
.*       THE PURPOSE OF THIS MACRO IS TO GENERATE THE NECESSARY
.*       INSTRUCTIONS FOR A CSECT, REGISTER EQUATES, SAVE-MACRO,
.*       DEFINING AND ESTABLISHING A BASE REGISTER, DEFINING A
.*       SAVEAREA AND CHAINING IT TO THE NEXT HIGHER ONE AND FINALLY
.*       TO GENERATE THE RETURN MACRO INCLUDING RESTORING OF SAVE-
.*       AREA ADDRESSES
.*
.*       ONLY KEYWORD OPERANDS ARE USED BY QINIT
.*
.*       THE SUBLIST-OPERANDS CAN BE CODED AS FOLLOWING:
.*          1. IF BOTH SUBLIST-OPERANDS ARE NEEDED, WRITE THE OPERANDS
.*             ENCLOSED IN PARANTHESES, SEPARATED BY A COMMA
.*          2. IF ONLY THE SECOND SUBLIST-OPERAND IS NEEDED, WRITE
.*             ENCLOSED IN PARANTHESES A COMMA FOLLOWED BY THIS OPERAND
.*             THE FIRST SUBLIST-OPERAND WILL BE OMITTED
.*          3. IF ONLY THE FIRST SUBLIST-OPERAND IS NEEDED, WRITE
.*            A) ONLY THIS OPERAND WITHOUT PARANTHESES, IF THE SECOND
.*               SUBLIST-OPERAND SHOULD BE THE DEFAULT VALUE     OR
.*            B) ENCLOSED IN PARANTHESES THIS OPERAND, FOLLOWED BY A
.*               COMMA, IF THE SECOND SUBLIST-OPERAND SHOULD BE OMITTED
.*
.*       ALL OPERANDS ARE OPTIONAL
.*
.*       IF NO OPERANDS ARE SPEZIFIED, THE DEFAULT VALUES WILL BE
.*       ASSUMED
.*
.*       POSSIBLE OPERANDS:
.*
.*       BASEREG=N       WHERE N IS ANY NUMBER FROM 1 TO 15
.*                       THIS REGISTER IS ESTABLISHED AS A BASE
.*                       REGISTER
.*
.*                       REGISTER 0 IS RECOCNIZED AS AN INVALID VALUE.
.*                       FOR 1,14 AND 15 WARNINGS ARE PRINTED.
.*                       EXCEPT FOR 13 AND 15 THE VALUE IS
.*                       LOADED INTO THE REGISTER BY MEANS OF A
.*                       BALR INSTRUCTION
.*
.*                       FOR 13 THE SAVEAREA ADDRESS IS LOADED
.*                       (IF THE SAVE IS SUPPRESSED (SEE KEYWORD SAVE)
.*                       AND BASEREG=13, THE VALUE IS LOADED BY MEANS
.*                       OF A BALR INSTRUCTION)
.*
.*                       FOR 15 IT IS ASSUMED THAT IT STILL CONTAINS
.*                       THE VALUE OF * (E.G. THE EP-ADDRESS),
.*                       ONLY A USING WILL BE GENERATED
.*
.*                       THE BASE REGISTER IS ALSO EQUATED TO THE
.*                       SYMBOL 'BASEREG'
.*
.*                       IF THIS OPERAND IS OMITTED 13 IS ASSUMED
.*
.*       BASEREG=        IF THE OPERAND IS NULLIFIED NO BASEREGISTER
.*                       WILL BE DEFINED
.*
.*       CSECT=START     A START INSTRUCTION IS USED INSTEAD OF CSECT
.*
.*                       IF OMITTED, A CSECT-INSTRUCTION WILL BE
.*                       GENERATED
.*
.*       CSECT=          IF NULLIFIED NO CSECT INSTRUCTION IS GENERATED
.*
.*       EQU=(ONLY,REG)  IF 'ONLY' IS CODED, ONLY EQUATE STATEMENTS
.*                       WILL BE GENERATED. ALL OTHER OPERANDS ARE BY-
.*                       PASSED
.*
.*                       INSTEAD OF 'REG' ANY VALID NAME FOR REGISTER-
.*                       EQUATES CAN BE CODED
.*
.*                       IF THE EQU-OPERAND IS OMITTED, THE DEFAULT
.*                       VALUE WILL BE ASSUMED (EQU=(,R))
.*
.*       EQU=            IF NULLIFIED, NO EQUATES WILL BE GENERATED
.*
.*       SAVE=(ID,LABEL) INSTEAD OF 'ID' ANY VALID CHARACTERS ALLOWED
.*                       IN THE ID-FIELD OF A SAVE MACRO CAN BE CODED
.*
.*                       IF THE ID-SUBOPERAND IS OMITTED AND A CSECT-
.*                       NAME IS GENERATED, THIS NAME WILL BE SUBSTITU-
.*                       TED
.*
.*                       INSTEAD OF 'LABEL' ANY SYMBOL VALID IN A NAME-
.*                       FIELD CAN BE CODED. THIS SYMBOL WILL APPEAR IN
.*                       THE NAME FIELD OF THE SAVEAREA
.*
.*                       IF 'LABEL' IS OMITTED, NO NAME WILL BE
.*                       GENERATED
.*
.*                       IF INSTEAD OF 'LABEL'  'NO' IS CODED NO SAVE-
.*                       AREA IS GENERATED AND SAVE-AREA-CHAINING IS
.*                       SUPPRESSED
.*
.*       SAVE=           IF NULLIFIED, THE GENERATION OF A SAVE-ROUTINE
.*                       WILL BE SUPPRESSED
.*
.*       RETURN=(RC,LABEL) INSTEAD OF 'RC' ANY VALID OPERAND FOR THE
.*                       RC-PARAMETER OF THE RETURN MACRO INSTRUCTION
.*                       CAN BE CODED. IF 'RC' IS OMITTED, ZERO WILL
.*                       BE ASSUMED
.*
.*                       INSTEAD OF 'LABEL' ANY SYMBOL VALID IN A NAME-
.*                       FIELD CAN BE CODED. THIS SYMBOL WILL APPEAR IN
.*                       THE NAME FIELD OF THE RETURN INSTRUCTION. IF
.*                       'LABEL' IS OMITTED THE NAME 'RETURN' APPEARS
.*                       IN THE NAME FIELD
.*
.*                       IF INSTEAD OF 'RC'  (15) IS CODED REGISTER
.*                       15 IS SUPPOSED TO CONTAIN A RETURN-CODE AND
.*                       WILL NOT BE RESTORED UPON RETURN
.*
.*                       IF THE RETURN-OPERAND IS OMITTED, RC = 0
.*                       WILL BE GENERATED AND THE NAME 'RETURN'
.*                       IS ASSUMED
.*
.*       RETURN=         IF NULLIFIED, NO RETURN STATEMENTS WILL BE
.*                       GENERATED
.*
.*
.*--------------------------------------------------------------------*
.*                                                                    *
.*                                                                    *
         GBLC  &DFTR                    = '' OR 'R' DEPENDINGON EQUATE*
.*                                      MAY BE USED INSIDE ALL MACROS *
.*                                      CONCATENATED WITH REGISTER
.*                                      OPERANDS SO THAT REGISTER     *
.*                                      TRACING IS PROVIDED ALSO INSIDE
.*                                      MACROS.                       *
.*                                                                    *
.*--------------------------------------------------------------------*
.*
         LCLC  &SANAME                  SAVEAREA NAME
         LCLC  &RETURNC                 RETURN-ROUTINE NAME
         LCLC  &BASE                    = 'BASEREG' OR VALUE OF BASE
         LCLC  &R                       = '' OR 'R' DEPENDING ON EQUATE
         LCLC  &BRANCH                  LABEL FOR BRANCH AROUND RETURN
         LCLA  &SAR                     SAVE REGISTER FOR R13
         LCLA  &VAL                     VALUE OF BASE
         LCLB  &BASEB                   BASEREG OPERAND PRESENT
         LCLB  &BASEBSP                 BASEREG IS 13 OR 15
         LCLB  &CSECTB                  CSECT OPERAND PRESENT
         LCLB  &EQUB                    EQU OPERAND PRESENT
         LCLB  &IDB                     ID OPERAND PRESENT
         LCLB  &RETURNB                 RETURN OPERAND PRESENT
         LCLB  &RCB                     RC OPERAND PRESENT
         LCLB  &SAVEB                   SAVE OPERAND PRESENT
         LCLB  &SAVEARB                 SAVEAR OPERAND PRESENT
         LCLB  &NS                      NO SAVE IF ON
.*
.*       VALIDATE OPERANDS AND SET INDICATORS
.*
         AIF   ('&SAVE(2)' NE 'NO').AREA1
         AIF   ('&BASEREG(1)' EQ '13').AREA0
         AGO   .AREA1
.AREA0   ANOP
&BASE    SETC  '15'
&VAL     SETA  15
&NS      SETB  1
.AREA1   ANOP
         AIF   ('&BASEREG' EQ '').VAL10
         AIF   (N'&BASEREG NE 1).VAL5
         AIF   (T'&BASEREG(1) NE 'N').VAL5
         AIF   (&NS).VAL4
&VAL     SETA  &BASEREG(1)
.VAL4    ANOP
         AIF   (&VAL LT 1 OR &VAL GT 15).VAL5
&BASEB   SETB  1
         AIF   (&VAL NE 13 AND &VAL NE 15).VAL10
&BASEBSP SETB  1
         AGO   .VAL10
.VAL5    ANOP
         MNOTE 8,'INVALID BASEREG OPERAND &BASEREG'
.VAL10   ANOP
         AIF   ('&CSECT' EQ '').VAL20
         AIF   (N'&CSECT NE 1).VAL15
         AIF   ('&CSECT' NE 'START' AND '&CSECT' NE 'CSECT').VAL15
&CSECTB  SETB  1                        INDICATE CSECT
         AGO   .VAL20
.VAL15   ANOP
         MNOTE 8,'INVALID CSECT OPERAND &CSECT'
.VAL20   ANOP
         AIF   ('&EQU' EQ '').VAL30
         AIF   (N'&EQU GT 2).VAL25
         AIF   ('&EQU(1)' NE '' AND '&EQU(1)' NE 'ONLY').VAL25
         AIF   (N'&EQU EQ 1 AND '&EQU' EQ 'ONLY').VAL22
         AIF   (N'&EQU EQ 2 AND '&EQU(2)' EQ '').VAL22
&R       SETC  '&EQU(2)'
         AGO   .VAL23
.VAL22   ANOP
&R       SETC  'R'
.VAL23   ANOP
&EQUB    SETB  1                        INDICATE EQUATES
         AIF   ('&EQU(1)' EQ 'ONLY').CSECT15
         AGO   .VAL30
.VAL25   ANOP
         MNOTE 8,'INVALID EQU OPERAND &EQU'
.VAL30   ANOP
         AIF   ('&SAVE' EQ '').VAL80
         AIF   (N'&SAVE GT 2).VAL70
&SAVEB   SETB  1
         AIF   (N'&SAVE NE 2).VAL40
         AIF   (T'&SAVE(2) EQ 'O').VAL60
&SANAME  SETC  '&SAVE(2)'
         AGO   .VAL50
.VAL40   ANOP
&SANAME  SETC  'SAVEAREA'
.VAL50   ANOP
&SAVEARB SETB  1
.VAL60   ANOP
         AIF   (T'&SAVE(1) EQ 'O').VAL80
&IDB     SETB  1
         AGO   .VAL80
.VAL70   ANOP
         MNOTE 8,'INVALID SAVE OPERAND &SAVE'
.VAL80   ANOP
         AIF   ('&RETURN' EQ '').VAL120
         AIF   (N'&RETURN GT 2).VAL110
&RETURNB SETB  1
         AIF   (N'&RETURN NE 2).VAL90
         AIF   (T'&RETURN(2) EQ 'O').VAL90
&RETURNC SETC  '&RETURN(2)'
         AGO   .VAL100
.VAL90   ANOP
&RETURNC SETC  'RETURN'
.VAL100  ANOP
         AIF   (T'&RETURN(1) EQ 'O').VAL120
&RCB     SETB  1
         AGO   .VAL120
.VAL110  ANOP
         MNOTE 8,'INVALID RETURN OPERAND &RETURN'
.VAL120  ANOP
         AIF   (&BASEB+&CSECTB+&EQUB+&RETURNB+&SAVEB NE 0).VAL130
         MNOTE 12,'NO VALID OPERANDS SPECIFIED'
         MEXIT
.VAL130  ANOP
&BASE    SETC  '&VAL'
.*
.* GENERATE CSECT INSTRUCTION
.*
         SPACE 5
         AIF   (NOT &CSECTB).CSECT10   NO CSECT OR START
         AIF   ('&CSECT' EQ 'START').CSECT5
&NAME    CSECT
         AGO   .CSECT15
.CSECT5  ANOP
&NAME    START
         AGO   .CSECT15
.CSECT10 AIF   ('&NAME' EQ '').CSECT90
&NAME    DS    0H
.CSECT15 ANOP
         SPACE 5
.CSECT90 ANOP
.*
.* GENERATE EQUATES
.*
         AIF   (NOT &EQUB).EQU90
&DFTR    SETC  '&EQU(2)'                EQU-PREFIX
*---------------------------------------------------------------------*
*                                                                     *
*        E Q U A T E S                                                *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 3
&R.0     EQU   0
&R.1     EQU   1
&R.2     EQU   2
&R.3     EQU   3
&R.4     EQU   4
&R.5     EQU   5
&R.6     EQU   6
&R.7     EQU   7
&R.8     EQU   8
&R.9     EQU   9
&R.10    EQU   10
&R.11    EQU   11
&R.12    EQU   12
&R.13    EQU   13
&R.14    EQU   14
&R.15    EQU   15
         AIF   ('&EQU(1)' NE 'ONLY').EQU10
         EJECT
         MEXIT
.EQU10   AIF   (NOT &BASEB).EQU80
         SPACE 3
BASEREG  EQU   &R&BASE
&BASE    SETC  'BASEREG'
         AIF   (&VAL NE 1 AND &VAL LT 14).EQU80
***                      CAUTION:       BASE REGISTER SPECIFICATION
***                                     IS NOT CONFORM TO OS-/360
***                                     LINKAGE CONVENTIONS
.EQU80   ANOP
         EJECT
.EQU90   ANOP
.*
.* ESTABLISH BASE AND GENERATE SAVE ROUTINE
.*
         AIF   (NOT (&BASEB OR &SAVEB)).SAVE90
*---------------------------------------------------------------------*
*                                                                     *
         AIF (NOT &BASEB).SAVE05
*        E S T A B L I S H   B A S E                                  *
.SAVE05  AIF   (NOT &SAVEB).SAVE10
         AIF   ('&SAVE(2)' EQ 'NO').NOTXT
*        S A V E   A N D                                              *
*        C H A I N   S A V E   A R E A S                              *
.SAVE10  ANOP
.NOTXT   ANOP
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 3
         AIF   (&SAVEB).SAVE20          SAVE SPECIFIED
         AIF   (&VAL EQ 15).SAVE15
         BALR  &BASE,0                  SET BASE TO VALUE OF *+2
         SPACE 3
.SAVE15  USING *,&BASE                  DEFINE BASE REGISTER
         AGO   .SAVE85
.SAVE20  ANOP
         AIF   (&VAL NE 15).SAVE25
         USING *,&BASE                  INDICATE BASE
         SPACE 3
         AGO   .SAVE30
.SAVE25  ANOP
         AIF   (&VAL NE 13).SAVE30
         USING *,&R.15                  INTERMEDIATE BASE
         SPACE 3
.SAVE30  ANOP
         AIF   (NOT &IDB).SAVE35        NO ID SPECIFIED
         SAVE  (14,12),,&SAVE(1)
         AGO   .SAVE37
.SAVE35  ANOP
         SAVE  (14,12),,&NAME
.SAVE37  ANOP
         AIF   ('&SAVE(2)' NE 'NO').SAVE39
         AIF   (&VAL EQ 15).SAVE85
         BALR  &BASE,0                      BASE *
         USING *,&BASE     .
         AGO   .SAVE85
.SAVE39  ANOP
         AIF   (&BASEBSP OR NOT &BASEB).SAVE40
         SPACE 3
         BALR  &BASE,0                  SET BASE TO VALUE OF *+2
         USING *,&BASE                  INDICATE BASE
         SPACE 3
.SAVE40  ANOP
&SAR     SETA  2
         AIF   (&VAL NE 2).SAVE45       PREVENT DESTROYMENT OF BASE
&SAR     SETA  3
.SAVE45  ANOP
         LR    &R.&SAR,&R.13            SAVE HIGHER SA ADDRESS
         CNOP  0,4
         BAL   &R.13,*+76               BRANCH AROUND SAVEAREA
         SPACE 3
         AIF   (&VAL NE 13).SAVE50
         DROP  &R.15                    DROP INTERMEDIATE BASE
         USING *,&BASE                  CONTAINS SA-ADDR. AND IS BASE
         SPACE 3
.SAVE50  ANOP
&SANAME  DC    18F'0'                   SAVE AREA
         SPACE 3
         ST    &R.13,8(,&R&SAR)         LOGICAL LOWER ADDR IN HIGHER
         AIF   ('&SANAME' NE '').SAVE55
         ST    &R&SAR,4(,&R.13)         AND HIGHER ADDR IN LOWER PGM
         AGO   .SAVE85
.SAVE55  ANOP
         ST    &R&SAR,&SANAME+4         AND HIGHER ADDR IN LOWER PGM
.SAVE85  ANOP
         AIF   (NOT &RETURNB).SAVE90
         SPACE 3
.SAVE90  ANOP
.*
.* GENERATE RETURN ROUTINE
.*
         AIF   (NOT &RETURNB).RETUR90
         AIF   (NOT (&BASEB OR &SAVEB)).RETUR10
&BRANCH  SETC  '#X'.'&SYSNDX'
         B     &BRANCH                  BRANCH AROUND RETURN ROUTINE
         SPACE 5
.RETUR10 ANOP
*---------------------------------------------------------------------*
*                                                                     *
*        R E T U R N   R O U T I N E                                  *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 3
         AIF   ('&SAVE(2)' EQ 'NO').RETUR17
         AIF   (NOT &SAVEB).RETUR17     IF NO SAVE DO NOT RESTORE R13
         AIF   (&SAVEARB).RETUR15
&RETURNC L     &R.13,4(,&R.13)          RESTORE HIGHER SA ADDRESS
         AGO   .RETUR20
.RETUR15 ANOP
&RETURNC L     &R.13,&SANAME+4          RESTORE HIGHER SA ADDRESS
         AGO   .RETUR20
.RETUR17 ANOP
&RETURNC DS    0H
.RETUR20 ANOP
         AIF   (N'&RETURN GT 1).RETUR21
         AIF   ('&RETURN' EQ '(15)').RETUR22
         AGO   .RETUR2A
.RETUR21 ANOP
         AIF   ('&RETURN(1)' EQ '(15)').RETUR22
.RETUR2A ANOP
         AIF   (NOT &RCB).RETUR25
         RETURN (14,12),T,RC=&RETURN(1)
         AGO   .RETUR30
.RETUR22 ANOP
         RETURN (14,12),T,RC=(15)
         AGO   .RETUR30
.RETUR25 ANOP
         RETURN (14,12),T,RC=0
.RETUR30 ANOP
         SPACE 5
         AIF   (NOT (&SAVEB OR &BASEB)).EX
&BRANCH  DS    0H
         AGO   .EX
.RETUR90 AIF   (NOT (&BASEB OR &SAVEB)).EX
         SPACE 5
.EX      ANOP
         MEND
         EJECT
UT235100 QINIT
         SPACE 8
***********************************************************************
*                                                                     *
*        USING REGISTER FUER DCBD UND CODE-TABELLE                    *
*                                                                     *
***********************************************************************
         SPACE 3
         USING IHADCB,R12
         USING TCDEADDR,R11
         EJECT
***********************************************************************
*                                                                     *
*        S05   STEUERLEISTE                                           *
*                                                                     *
***********************************************************************
         SPACE 3
         BAL   R14,A05                 VORROUTINE
         SPACE 3
S05C     EQU   *
         BAL   R14,B05                 EINGABESATZ LESEN
         SPACE 1
         LTR   R15,R15                 END OF FILE ON SYSIN?
         BNZ   S05Z                    JA, SCHLUSS-ROUTINE
         SPACE 3
         BAL   R14,D05                 PRUEFUNG DER EINGABE
         SPACE 3
         BAL   R14,F05                 VERARBEITUNG
         SPACE 3
         B     S05C
         SPACE 3
S05Z     EQU   *
         BAL   R14,Z05                 SCHLIESSEN DATEIEN
         SPACE 1
         B     RETURN
         EJECT
***********************************************************************
*                                                                     *
*        A05   VORROUTINE                                             *
*                                                                     *
***********************************************************************
         SPACE 3
         DC    F'0'
A05      EQU   *
         ST    R14,A05-4
         SPACE 2
         BAL   R14,A0505               LADEN INPUT-ROUTINE
         SPACE 2
         BAL   R14,A0510               OPEN DATEIEN
         SPACE 3
A05Z     EQU   *
         L     R14,A05-4
         BR    R14
         EJECT
***********************************************************************
*                                                                     *
*        A0505 LADEN LESE-UND PRUEFROUTINE                            *
*                                                                     *
***********************************************************************
         SPACE 3
         DC    F'0'
A0505    EQU   *
         ST    R14,A0505-4
         SPACE 2
         LOAD  EPLOC=AINPUTR+4         INPUT- UND PRUEFROUTINE LADEN
         SPACE 2
         ST    R0,AINPUTR              ADRESSE INPUT-ROUTINE SPEICHERN
         SPACE 3
A0505Z   EQU   *
         L     R14,A0505-4
         BR    R14
         EJECT
***********************************************************************
*                                                                     *
*        A0510 SYSPRINT UND LISTE EROEFFNEN                           *
*                                                                     *
***********************************************************************
         SPACE 3
         DC    F'0'
A0510    EQU   *
         ST    R14,A0510-4
         SPACE 2
         OPEN  (SYSPRINT,(OUTPUT),LISTE,(OUTPUT))
         SPACE 1
         LA    R12,SYSPRINT            ADRESSE DCB IN REG 12
         ST    R12,ASYSPRT             ADRESSE SPEICHERN
         TM    DCBOFLGS,X'10'          OPEN ERFOLGREICH?
         BO    A0510C                  JA, WEITER
         SPACE 1
         ABEND 1000
         SPACE 2
A0510C   EQU   *
         LA    R12,LISTE               ADRESSE DCB IN REG 12
         ST    R12,ALISTE              ADRESSE SPEICHERN
         TM    DCBOFLGS,X'10'          OPEN ERFOLGREICH?
         BO    A0510Z                  JA, RETURN
         SPACE 1
         LA    R0,KFEHL1               LISTE NICHT EROEFFNET
         BAL   R14,U05                 FEHLERMELDUNG AUSGEBEN
         MVC   ALISTE,ASYSPRT          SYSPRINT ALS LISTE BENUTZEN
         SPACE 3
A0510Z   EQU   *
         L     R14,A0510-4
         BR    R14
         EJECT
***********************************************************************
*                                                                     *
*        A051005 OPEN-EXIT-ROUTINE SYSPRINT, LISTE                    *
*                                                                     *
***********************************************************************
         SPACE 3
         DC    F'0'
A051005  EQU   *
         ST    R14,A051005-4
         SPACE 2
         LR    R12,R1                  DCB-ADRESSE IN REG 12
         LH    R3,DCBBLKSI             BLOCKSIZE IN REG 3
         LTR   R3,R3                   GLEICH NULL ?
         BNZ   A051005Z                NEIN, RETURN
         SPACE 2
         MVC   DCBBLKSI,DCBLRECL       BLOCKSIZE=LRECL
         SPACE 3
A051005Z EQU   *
         L     R14,A051005-4
         BR    R14
         EJECT
***********************************************************************
*                                                                     *
*        B05   LESE UND PRUEFROUTINE AKTIVIEREN                       *
*                                                                     *
***********************************************************************
         SPACE 3
         DC    F'0'
B05      EQU   *
         ST    R14,B05-4
         SPACE 2
         L     R15,AINPUTR             LADEN ADRESSE INPUT-ROUTINE
         CALL  (15),(PARMLIST,TCODES,ASYSPRT),VL  ROUTINE AUFRUFEN
         SPACE 3
B05Z     EQU   *
         L     R14,B05-4
         BR    R14
         EJECT
***********************************************************************
*                                                                     *
*        D05   LOGISCHE PRUEFUNG DER EINGABE                          *
*                                                                     *
***********************************************************************
         SPACE 3
         DC    F'0'
D05      EQU   *
         ST    R14,D05-4
         SPACE 2
         LA    R11,TCODES              ADRESSE CODE-TABELLE IN R11
         SPACE 1
D05C     EQU   *
         CLC   TCDE,ZCODE              CODE-VERGLEICH
         BNE   D05F                    UNGLEICH, WEITERSUCHEN
         SPACE 1
         MVC   AARECHR,TADDR           A(A(RECHENROUTINE))
         L     R3,TADDR                        UND IN R3
         LA    R3,12(R3)               A(A(OUTPUTROUTINE))
         ST    R3,AAOUTR               ERRECHNEN UND STOREN
         B     D05Z
         SPACE 1
D05F     EQU   *
         LA    R11,L'TCODES(R11)       TABELLEN-ADRESSE ERHOEHEN
         CLC   TCDE,=X'FFFFFFFF'       ENDE DER TABELLE?
         BNE   D05C                    NEIN, WEITERSUCHEN
         SPACE 3
D05Z     EQU   *
         L     R14,D05-4
         BR    R14
         EJECT
***********************************************************************
*                                                                     *
*        F05   VERARBEITUNG                                           *
*                                                                     *
***********************************************************************
         SPACE 3
         DC    F'0'
F05      EQU   *
         ST    R14,F05-4
         SPACE 2
         BAL   R14,F0505               BLOCKUNG ERRECHNEN
         SPACE 1
         LTR   R15,R15                 IN ORDNUNG?
         BNZ   F05Z                    NEIN, KEINE AUSGABE
         SPACE 2
         BAL   R14,F0510               AUSGABE
         SPACE 3
F05Z     EQU   *
         L     R14,F05-4
         BR    R14
         EJECT
***********************************************************************
*                                                                     *
*        F0505 BLOCKUNG ERRECHNEN                                     *
*                                                                     *
***********************************************************************
         SPACE 3
         DC    F'0'
F0505    EQU   *
         ST    R14,F0505-4
         SPACE 2
         L     R3,AARECHR              ADRESSE DER RECHENROUTINE
         L     R15,0(R3)               INS REGISTER 15 LADEN
         LTR   R15,R15                 ADRESSE VORHANDEN?
         BNZ   F0505C                  JA,PROGRAMM AUFRUFEN
         SPACE 1
         LA    R4,4(R3)                ADRESSE EPLOC IN REG 4
         LOAD  EPLOC=(R4)              LADEN RECHENROUTINE
         ST    R0,0(R3)                SPEICHERN ENTRY-POINT-ADRESSE
         LR    R15,R0                  UND UMLADEN IN REG 15
         SPACE 2
F0505C   EQU   *
         CALL  (15),(PARMLIST,TABELLE,ASYSPRT),VL  RUFEN RECHENROUT.
         SPACE 3
F0505Z   EQU   *
         L     R14,F0505-4
         BR    R14
         EJECT
***********************************************************************
*                                                                     *
*        F0510 BLOCKUNG AUSGEBEN                                      *
*                                                                     *
***********************************************************************
         SPACE 3
         DC    F'0'
F0510    EQU   *
         ST    R14,F0510-4
         SPACE 2
         L     R3,AAOUTR               ADRESSE DER OUTPUTROUTINE
         L     R15,0(R3)               INS REGISTER 15 LADEN
         LTR   R15,R15                 ADRESSE VORHANDEN?
         BNZ   F0510C                  JA,PROGRAMM AUFRUFEN
         SPACE 1
         LA    R4,4(R3)                ADRESSE EPLOC IN REG 4
         LOAD  EPLOC=(R4)              LADEN RECHENROUTINE
         ST    R0,0(R3)                SPEICHERN ENTRY-POINT-ADRESSE
         LR    R15,R0                  UND UMLADEN IN REG 15
         SPACE 2
F0510C   EQU   *
         CALL  (15),(PARMLIST,TABELLE,ALISTE),VL  RUFEN OUTPUT-ROUT.
         SPACE 3
F0510Z   EQU   *
         L     R14,F0510-4
         BR    R14
         EJECT
***********************************************************************
*                                                                     *
*        Z05   SCHLUSSROUTINE                                         *
*                                                                     *
***********************************************************************
         SPACE 3
         DC    F'0'
Z05      EQU   *
         ST    R14,Z05-4
         SPACE 2
         CLOSE (SYSPRINT)              SYSPRINT SCHLIESSEN
         SPACE 2
         LA    R12,LISTE               ADRESSE DCB IN REG 12
         TM    DCBOFLGS,X'10'          EROEFFNET?
         BZ    Z05Z                    NEIN, RETURN
         SPACE 1
         CLOSE (LISTE)                 LISTE SCHLIESSEN
         SPACE 3
Z05Z     EQU   *
         L     R14,Z05-4
         BR    R14
         EJECT
***********************************************************************
*                                                                     *
*        U05   AUSGEBEN AUF SYSPRINT                                  *
*                                                                     *
***********************************************************************
         SPACE 3
         DC    F'0'
U05      EQU   *
         ST    R14,U05-4
         SPACE 2
         PUT   SYSPRINT,(0)            AUSGEBEN AUF SYSPRINT
         SPACE 3
U05Z     EQU   *
         L     R14,U05-4
         BR    R14
         EJECT
***********************************************************************
*                                                                     *
*              DEFINITIONEN                                           *
*                                                                     *
***********************************************************************
         SPACE 3
TCODES   DS    0D
         DC    C'OK33',A(TMOD1)        OHNE KEY   3330
         DC    C'OK35',A(TMOD1)        OHNE KEY   3350
         DC    C'MK33',A(TMOD1)        MIT  KEY   3330
         DC    C'MK35',A(TMOD1)        MIT  KEY   3350
         DC    C'TAPE',A(TMOD2)        BAND
         DC    C'VS33',A(TMOD3)        VSAM       3330
         DC    C'VS35',A(TMOD3)        VSAM       3350
         DC    C'VI33',A(TMOD3)        VSAM IMBED 3330
         DC    C'VI35',A(TMOD3)        VSAM IMBED 3350
         DC    X'FFFFFFFF',A(TMOD4)    * PLATZ
         DC    X'FFFFFFFF',A(TMOD4)    * FUER
         DC    X'FFFFFFFF',A(TMOD5)    * WEITERE
         DC    X'FFFFFFFF',A(TMOD5)    * CODES
         DC    X'FFFFFFFF',A(TMOD6)    *
         DC    X'FFFFFFFF',A(TMOD6)    *
         DC    X'FFFFFFFF',A(TMOD7)    *
         DC    X'FFFFFFFF',A(TMOD7)    *
         DC    X'FFFFFFFF'             TABELLEN-ENDE
         SPACE 2
TMOD1    DC    A(0),CL8'UR235300',A(0),CL8'UR235400'   OS-DASD
TMOD2    DC    A(0),CL8'UR235700',A(0),CL8'UR235800'   BAND
TMOD3    DC    A(0),CL8'UR235500',A(0),CL8'UR235600'   VSAM
TMOD4    DC    A(0),CL8'XXXXXXXX',A(0),CL8'XXXXXXXX'
TMOD5    DC    A(0),CL8'XXXXXXXX',A(0),CL8'XXXXXXXX'
TMOD6    DC    A(0),CL8'XXXXXXXX',A(0),CL8'XXXXXXXX'
TMOD7    DC    A(0),CL8'XXXXXXXX',A(0),CL8'XXXXXXXX'
         SPACE 2
AINPUTR  DC    A(0),CL8'UR235200'      EINLESE- UND PRUEFROUTINE
AARECHR  DC    A(0)                    ADRESSE DER RECHENROUTINE-ADDR.
AAOUTR   DC    A(0)                    ADRESSE DER OUTPUTROUT.-ADDR.
ASYSPRT  DC    A(0)                    ADRESSE SYSPRINT-DCB
ALISTE   DC    A(0)                    ADRESSE LISTEN-DCB
         EJECT
KFEHL1   DC    CL80' UT235100 LISTE NICHT EROEFFNET, SYSPRINT WIRD BENU*
               TZT'
         SPACE 2
PARMLIST DS    0F
ZCODE    DC    CL4' '
ZLRECL   DC    H'0'
ZKEYL    DC    H'0'
ZSATZ    DC    F'0'
         SPACE 2
         LTORG
         EJECT
***********************************************************************
*                                                                     *
*        DCBS                                                         *
*                                                                     *
***********************************************************************
         SPACE 3
         PRINT NOGEN
         SPACE 2
SYSPRINT DCB   DDNAME=SYSPRINT,MACRF=(PM),DSORG=PS,EXLST=AEXIT,        *
               LRECL=80,RECFM=FBA
         SPACE 2
LISTE    DCB   DDNAME=LISTE,MACRF=(PM),DSORG=PS,EXLST=AEXIT,           *
               LRECL=80,RECFM=FBA
         SPACE 2
AEXIT    DS    0F
         DC    X'85'
         DC    AL3(A051005)            OPEN-EXIT SYSPRINT, LISTE
         EJECT
***********************************************************************
*                                                                     *
*        TABELLE FUER ERGEBNISSE                                      *
*                                                                     *
***********************************************************************
         SPACE 3
TABELLE  DC    1000F'0'
         EJECT
***********************************************************************
*                                                                     *
*        DUMMY SECTION FUER DCB                                       *
*                                                                     *
***********************************************************************
         SPACE 3
         DCBD  DSORG=PS
         SPACE 8
***********************************************************************
*                                                                     *
*        DSECT FUER CODE-TABELLE                                      *
*                                                                     *
***********************************************************************
         SPACE 3
         DSECT
TCDEADDR DS    0D
TCDE     DS    F
TADDR    DS    F
         END
