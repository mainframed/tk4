*        IKJEFLD IST DIE ERSTE CSECT DES
*        LOGON PREPROMPT-EXITS DAS BEI DER ZENTRALSPARKASSE
*        WIEN FUER VS2.R3 EINGESETZT WIRD
*        ZWECK..
*              WILLKUERLICHES WAEHLEN DER ACCOUNT-NUMMERN
*              UNABHAENGIG VOM UADS-DATASET
*              GUELTIGE DEFAULT-NUMMERN AUS DEM UADS WERDEN
*              ACCEPTIERT
*        ES WIRD EIN NEUER INPUT-BUFFER ERSTELLT UND
*        AN DEN LOGON PROCESSOR ZURUECKGEGEBN
*        VORAUSSETZUNG..
*              PRO USER DARF NUR EINE ACCOUNT-NUMMER IM UADS STEHEN
*
*        ASSEMBLY..
*              DIE EINZELNEN CSECTS WERDEN GETRENNT UMGWANDELT
*              BENOETIGT WIRD EINE DEFINITION ('EFLDDSA'),
*              DIE FUER ALLE GLEICH IST
*        LINK..
*              IKJEFLD IM MODUL 'IKJFLA' (EINIGE AILASES) WIRD
*              ERSETZT.
*              STEUERKARTEN LAUT SYSGEN.
*         VORSICHT..
*              IKJEFA40 WIRD VERWENDET UM UADS ZU LESEN.
*              ES MUSS DER RICHITGE ENTRY-POINT (LT. SYSGEN)
*              RELATIV ZU NULL IN DAS VOLLWORT 'FABST' DER CSECT
*              USERX GEBRACCHT WERDEN.
*
          EJECT
IKJEFLD  CSECT                  LOGON PREPROMPT
         EXTRN USERX,USERPRO,USERACC
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
ON       EQU   X'80'
OFF      EQU   X'7F'
ALL      EQU   X'FF'
NONE     EQU   X'00'
         SPACE 3
*        PREPROMPT  EXIT  VS2  REL 3.0
*
*        SCAN COMAND INPUT-BUFFER FOR 'LOGON' AND PARAMETERS
*
*        CREATE A NEW VALID CIB TO SUPPRESS PROMPTING
*
*        CREATE VALID JCL
*
*        IGNORE SIZE,PERFORM,RECONNECT,NOTICES,MAIL - PARAMETERS
*
*        SET NOPROMPT AND JCL-SWITCHES
*
*
*        EXTRN  USERX,USERPRO,USERACC
*
*        COPY EFLDDSA - SAME MEMBER FOR ALL CSECTS
*
*
         EJECT
         SAVE  (14,12),,*
         BALR  R11,0
         USING *,R11
         USING DSA,R13
         LR    R10,R1           SAVE R1
         GETMAIN R,LV=DSAE-DSA,SP=1
         ST    R1,8(,R13)
         ST    R13,4(,R1)
         LR    R13,R1           NEW SA-ADRESS
*
         L     R14,0(,R10)      A(SWITCHES)
         L     R14,0(,R14)
         TM    0(R14),X'80'     CANCEL, IF USER ENQ FAILED
         BO    CANCEL
*
*
         BAL  R14,UPCREA        CREATE SOME POINTERS
         BAL   R14,UPSCAN
*
*
         XC    ECB,ECB           CREATE PPL
         LA    R2,PARSWK         A(PPL)
         USING PPL,R2
         MVC   PPLPCL,APTAB
         LA    R1,FWPARS
         ST    R1,PPLANS
         LA    R1,DSA            USERWORD
         ST    R1,PPLUWA
         LR    R1,R2             A(PPL)
         LINK  EP=IKJPARS
         LTR   R15,R15
         BNZ   CANCEL
         L     R2,PPLANS        LOAD A(PARSE-RETURN)
         L     R2,0(,R2)        A(PPLANS)
         DROP  R2
         USING IKJPARMD,R2
*
         CLC   ACCT,=AL2(0)
         BNE   *+10
         XC    ACCT2(8),ACCT2
         CLC   PROC,=AL2(0)
         BNE   *+10
         XC    PROC2(8),PROC2
         CALL  USERACC,(ACCT2,(R13)),MF=(E,LCALL)
         LTR   R15,R15          TEST RC
         BNZ   CANCEL
         CALL  USERPRO,(PROC2,(R13)),MF=(E,LCALL)
         LTR   R15,R15
         BNZ   CANCEL
         L     R1,4(,R10)       A(BUFFER-DESC)
         L     R14,0(,R1)
         LA    R2,X'FC'(,R14)   A(BUFFER-ENDE)
         SR    R2,R3
         SH    R2,=H'2'
         MVI   0(R3),C' '
         EX    R2,MVBL          1(1,R3),0(R3)
         LA    R3,1(,R3)
*
         MVC   0(L'USER,R3),USER
         LH    R1,LUSER
         LA    R3,0(R1,R3)
         CLI   PASSWD,X'40'     PASSWORD
         BE    OKUSER
         MVI   0(R3),C'/'
         MVC   1(L'PASSWD,R3),PASSWD
         LA    R3,L'PASSWD(,R3)
*
OKUSER   DS    0H
         LA    R3,2(,R3)
         MVC   0(L'KPROC,R3),KPROC
         MVC   L'KPROC(L'UPROC,R3),UPROC
         LA    R3,L'KPROC+L'UPROC(,R3)
         MVI   0(R3),C')'
*              MOVE INTERMEDIATE BUFFER TO BUFFER
         L     R2,4(,R10)
         L     R14,0(,R2)
         SLR   R3,R14
         STH   R3,6(,R2)          UPDATED ACT. LENGTH
         SH    R14,=H'2'
         XC    0(2,R14),0(R14)
*
*
         SPACE 3
         BAL   R14,UPJCL
*
SETSWS   L     R2,0(,R10)
         L     R2,0(,R2)
         OI    0(R2),X'02'       SET JCL-SWITCH
*
RET      DS    0H                RETURN
         LR    R1,R13
         L     R13,4(,R13)
         FREEMAIN R,LV=DSAE-DSA,SP=1,A=(1)
         RETURN (14,12),RC=0
         SPACE 2
CANCEL   L     R2,0(,R10)        CANCEL
         L     R2,0(,R2)
         OI    0(R2),X'10'       SET DISCONNECT-SWITCH
         B     RET
         EJECT
UPCREA   ST    R14,ZWSCAN       BUILD CB'S FOR IO-ACTIVITIES
         XC    WIOPL(28),WIOPL
         LA    R2,WIOPL         WORK-SPACE
         USING PPL,R2
         L     R1,48(,R10)      A(UPT)
         MVC   PPLUPT,0(R1)
         L     R1,52(,R10)      A(ECT)
         MVC   PPLECT,0(R1)
         LA    R1,ECB           A(ECB)
         ST    R1,PPLECB
         XC    ECB,ECB
         L     R14,4(,R10)        I-BUFFER
         L     R14,0(,R14)
         SH    R14,=H'4'
         ST    R14,PPLCBUF        STORED INTO PARM-LIST
         DROP  R2
         LOAD  EP=IKJPTGT       LOAD EP PUTGET
         ST    R0,APUTGET
         LOAD  EP=IKJPUTL     , LOAD EP PUTLINE
         ST    R0,APUTL
         MVC   PARSWK(28),WIOPL
         L     R14,ZWSCAN
         BR    R14
        EJECT
UPSCAN   ST    R14,ZWSCAN        SCAN THE INPUT-BUFFER FOR
*                                A VALID COMMAND
         LA    R9,PARSWK         COMMON PARAM-AREA
         USING CSPL,R9
         XC    SCANFW,SCANFW
         LA    R1,SCANFW
         ST    R1,CSPLFLG        FLAG-WORD
         XC    SCANDW,SCANDW
         LA    R1,SCANDW         RESPONSE-DOUBLE-WORD
         ST    R1,CSPLOA
         L     R2,CSPLCBUF     A(BUFFER)
         MVC   0(4,R2),=X'01000000'
         LR    R1,R9
         LINK  EP=IKJSCAN
         LTR   R15,R15
         BZ    SCANOK            TEST RC FROM SCAN
*
SCANBAD  L     R15,APUTL         A(PUTL)
         LA    R1,WIOPL
         USING IOPL,R1
         L     R14,IOPLECB       CLEAR ECB
         XC    0(4,R14),0(R14)
         PUTLINE OUTPUT=(OLD1),PARM=LPUTL,MF=(E,(1))
         DROP  R1
         B     CANCEL
*
SCANOK   L     R2,CSPLOA         OUTPUT-AREA
         USING CSOA,R2
         L     R14,CSPLCBUF      A(COMMAND-BUFFER)
         L     R1,CSOACNM        A(COMMAND)
         LH    R15,2(,R15)       OFFSET SET BY IKJSCAN
*
         TM    CSOAFLG,X'40'     NUR 'LOGON' EINGEGEBEN
         BO    SCANOK1
         TM    CSOAFLG,X'80'     TEST SWITCHES
         BZ    SCANBAD
         LH    R15,CSOALNM
SCANADD  LA    R3,0(R1,R15)
         MVI   0(R3),C' '        1 BLANK ANHAENGEN
         LA    R3,1(,R3)
HPSCAN   L     R14,ZWSCAN
         BR    R14
*
SCANOK1  LH    R15,CSOALNM
         B     SCANADD          R3 PTR. AUF ERSTEN PARAM.
         EJECT
*        *     *                 *
UPJCL    ST    R14,ZWJCL
         L     R2,28(,R10)       POINT TO JCL-BUFFER
         LH    R15,4(,R2)        LOAD MAX. LENGTH
         LA    R1,KONJCLE-KONJCL
         STH   R1,6(,R2)         STORE CURRENT LENGTH
         L     R2,0(,R2)
         LR    R14,R2
         LA    R0,KONJCL         KONST.
         ICM   R1,8,=C' '        FILL-CHARACTER
         MVCL  R14,R0
*
         USING DSJCL,R2
         MVC   JOBN,USER
         MVC   JACNUM,IAC
         MVC   JUSER,USER
         MVC   JEXPR,UPROC
*
         L     R14,ZWJCL
         BR    R14
*
*
         EJECT
*        *     *                 *
MVBL     MVC   1(1,R3),0(R3)
APTAB    DC    A(PARMTAB)
OLD1     DC    F'1'
         DC    A(TEXT1)
TEXT1    DC    AL2(L'TEXT1C+4),H'0'
TEXT1C   DC    C' INVALID SCAN PARAMATERS'
KLOGON   DC    C'LOGON'
BLANKX   DC    CL9' '
KPROC    DC    C'PROC('
KONJCL   DC    CL160' '
KONJCLE  EQU   *
         ORG   KONJCL
         DC    C'//',CL8' ',CL2' ',C'JOB  ('
         DC    C'1234,5678',C'),'
         ORG   KONJCL+80
         DC    C'//TSO   EXEC  PROC='
         ORG
         EJECT
PARMTAB  IKJPARM
USID     IKJPOSIT USERID,PROMPT='USERID',VALIDCK=USERX
ACCT     IKJKEYWD
         IKJNAME 'ACCT',SUBFLD=ACCT1
PROC     IKJKEYWD
         IKJNAME 'PROC',SUBFLD=PROC1
SIZE     IKJKEYWD
         IKJNAME 'SIZE',SUBFLD=SIZE1
PERF     IKJKEYWD
         IKJNAME 'PERF',SUBFLD=PERF1
RECONN   IKJKEYWD
         IKJNAME 'RECONNECT'
NOTICES  IKJKEYWD   DEFAULT='NOTICES'
         IKJNAME 'NOTICES'
         IKJNAME 'NONOTICES'
MAIL     IKJKEYWD   DEFAULT='MAIL'
         IKJNAME 'MAIL'
         IKJNAME 'NOMAIL'
ACCT1    IKJSUBF
ACCT2    IKJIDENT 'NUMBER',MAXLNTH=9,FIRST=NUMERIC,OTHER=ANY, **********
               PROMPT='ACCOUNT-NUMBER'
PROC1    IKJSUBF
PROC2    IKJIDENT 'PROCEDURE',MAXLNTH=8,FIRST=ALPHA,OTHER=ANY, *********
               PROMPT='PROCEDURE-NAME'
SIZE1    IKJSUBF
SIZECTL  IKJIDENT 'SIZE',MAXLNTH=4,FIRST=NUMERIC,OTHER=NUMERIC,     ****
               PROMPT='SIZE VALUE',                                    *
               HELP=' AN INTEGER FROM 1 TO 9999'
PERF1    IKJSUBF
PERFVAL  IKJIDENT 'PERFORMANCE-VALUE',                              ****
               MAXLNTH=3,FIRST=NUMERIC,OTHER=NUMERIC, ******************
               PROMPT='PERFORMACE VALUE',                              *
               HELP=' AN INTEGER FROM 1 TO 255'
         IKJENDP
         EJECT
         IKJPGPB
DSA      DSECT
         COPY  EFLDDSA
DSAE     EQU   *
         SPACE 3
         IKJCSPL
         SPACE 3
         IKJCSOA
         SPACE 3
         IKJIOPL
         SPACE 3
         IKJPPL
         SPACE 3
DSJCL    DSECT
         DC    C'//'
JOBN     DC    CL8' ',CL2' ',C'JOB  ('
JACNUM   DC    C'1234,5678',C'),'
JUSER    DC    CL8' '
         ORG   DSJCL+80
         DC    C'//TSO   EXEC  PROC='
JEXPR    DC    CL8' '
         END
USERACC  CSECT                  CHECK VALIDITY OF ACCOUNTNUMBERS
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
ON       EQU   X'80'
OFF      EQU   X'7F'
ALL      EQU   X'FF'
NONE     EQU   X'00'
         SPACE 3
*        TEST ACCOUNT-NUMBERS
*
*        FETCH ACCOUNT-NUMBERS FROM INPUT-BUFFER
*              OR TAKE DEFAULT FROM UADS
*              OR PROMPT FOR VALID ACCOUNT-NUM.
*
*              1234,5678
*
*              TEST ON LABEL 'SMFVAL'
*
         EJECT
         SAVE  (14,12),,*
         LR    R11,R15          BASE REG.
         USING USERACC,R11
         LM    R4,R5,0(R1)      A(PDE,USERWORD)
         USING DSA,R5
         LA    R2,EXDSA
         ST    R2,8(,R13)
         ST    R13,4(,R2)
         LR    R13,R2           SAVE-AREA CHAINING
*
         SLR   R8,R8            COUNTER
         L     R6,ACPASS
         L     R3,RETADR
         L     R2,4(,R6)        COUNT NUMBER OF VALID ACCOUNT-NUMBERS
NEXTOFF  LA    R7,0(R3,R2)      .
         LA    R8,1(,R8)
         ICM   R2,7,1(R7)       NEXT OFFSET-PTR.
         BNZ   NEXTOFF
         CH    R8,=H'1'         NUMBER OF VALID ENTRIES
         BE    ONEACCT
*
*              ONLY ONE CAN BEHANDELED
*
         DC    H'1'
         EJECT
ONEACCT  TM    6(R4),X'80'      ACCT(...) IM LGON-COMMAND
         BO    TYPED
         BAL   R14,ACEOB        R15 ... A(INPUT)
*                               R1  ... L(INPUT)
         LTR   R1,R1
         BNZ   TESTINP
*
         L     R1,8(,R7)        TEST NUMBERS IN UADS
         LA    R1,44(R3,R1)     A(L'ACCT,ACCT)
         LA    R15,1(,R1)       A(ACCT)
         BAL   R14,SMFVAL       TEST SMF-VALIDITY
         B     REENTER
MOVE     MVC   IAC,0(R15)
*
RC0      SLR   R15,R15
         ST    R7,ACNUM          SAVE A(ACCT.CTL-BLOCK)
RC15     L     R13,4(,R13)      RETURN TO PARSE
         RETURN (14,12),RC=(15)
         SPACE 2
TESTINP  DS    0H               L = 9
*
         BAL   R14,SMFVAL       TEST SMF-VALIDITY$X
         B     REENTER
         B     MOVE
         SPACE 2
TYPED    L     R15,0(,R4)       LOAD PTR. TO INPUT
         LH    R1,4(,R4)        LOAD LENGTH
         B     TESTINP
*
SMFVAL   MVI   4(R15),C','        R15 ... A(ACCOUNT)
*
         CLI   8(R15),C'0'      RESERVE
         BNE   0(R14)
         CLI   0(R15),C'0'      1. RESERVED
         BE    0(R14)
         CLI   0(R15),C'2'      1. RESERVED
         BE    0(R14)
         CLI   5(R15),C'1'      TSO
         BNE   0(R14)
         CLI   0(R15),C'8'      DATA
         BE    4(R14)
         CLC   6(2,R15),PG      PGMR-NUMBER NE 0
         BE    0(R14)
         B     4(R14)           RETURN
         SPACE 3
         EJECT
REENTER  DS    0H               WRITE INVAL.MESSAGE AND OBTAIN
         LA    R1,WIOPL         NEW NUMBERS
         USING IOPL,R1
         XC    ECB,ECB
         L     R15,APUTGET
         XC    IOPB(16),IOPB
         PUTGET PARM=IOPB,OUTPUT=(MSGRENT,SINGLE),TERMPUT=(,,HOLD), ****
               TERMGET=(EDIT,WAIT),ENTRY=(15),MF=(E,(1))
         LTR   R15,R15
         BNZ   RC12             CANCEL PARSE, IF RC NE 0
         L     R14,IOPB+12      PTR INPUT
         LH    R15,0(,R14)      LENGTH BUFFER
         CH    R15,=H'13'       LANEGE 9 + 4 F. HEADER
         BE    RENTIN           FALSCHE LAENGE
         BAL   R14,UPFREEM      FREE STORAGE
         B     REENTER          OBTAIN NEW INPUT
*
RENTIN   MVC   IAC,4(R14)
         LR    R1,R15
         LA    R15,IAC
         BAL   R14,SMFVAL       TEST SMF-VALID.
         B     REENTER
         B     RC0              ACCOUNT-NUMBERS ARE OK
         SPACE
UPFREEM  STM   R14,R1,12(R13)   SAVE LINK-REGISTERS
         L     R1,IOPB+12       LOAD A(BUFFER)
         LH    R0,0(,R1)        LOAD LENGTH
         ICM   R0,8,=AL1(1)     INDICATE SUBP.
         FREEMAIN R,LV=(0),A=(1)
         LM    R14,R1,12(R13)
         BR    R14
         SPACE 3
ACEOB    ST    R14,ZWEOB        SAVE RETURN
REISS    LA    R1,WIOPL
         USING IOPL,R1
         L     R2,IOPLECB
         XC    0(4,R2),0(R2)
         L     R15,APUTGET
         XC    IOPB(16),IOPB
         PUTGET PARM=IOPB,OUTPUT=(MSGPG,SINGLE),TERMPUT=(,,HOLD), ******
               TERMGET=(EDIT,WAIT),ENTRY=(15),MF=(E,(1))
         LTR   R15,R15
         BNZ   RC12
         L     R14,IOPB+12      PTR INPUT
         LH    R15,0(,R14)      LENGTH BUFFER
         SH    R15,=H'4'        - L'HEADER
         BZ    INEOB            EOB EINGEGEBEN
         CH    R15,=H'9'
         BE    INLOK            FALSCHE LAENGE
         BAL   R14,UPFREEM      FREE STORAGE
         B     REENTER          INPUTLAENGE NE 0 UND NE 9
INLOK    DS    0H
         MVC   IAC,4(R14)        SAVE INPUT
         BAL   R14,UPFREEM
         LR    R1,R15            LENGTH
         LA    R15,IAC           DATA
HPEOB    L     R14,ZWEOB
         BR    R14
INEOB    SLR  R1,R1              LENGTH ZERO
         BAL   R14,UPFREEM
         B     HPEOB
*
         SPACE 2
RC12     LA    R15,12
         B     RC15
*
*
*
MSGPG    DC    F'1'
         DC    A(MSGPG1)
MSGPG1   DC    AL2(L'MSGPG1A+4),H'0'
MSGPG1A  DC    C' ENTER ACCOUNTNUMBERS OR EOB'
MSGRENT  DC    F'1'
         DC    A(MSGR)
MSGR     DC    AL2(L'MSGR1+4),H'0'
MSGR1    DC    C' INVALID ACCOUNTING.INFO, REENTER -'
HW9      DC    H'9'
BLANKX   DC    CL9' '
*
PG       DC    C'00'
DSA      DSECT
         COPY  EFLDDSA
         IKJIOPL
         END
USERPRO  CSECT                  CHECK VALIDITY OF PROCEDURE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
ON       EQU   X'80'
OFF      EQU   X'7F'
ALL      EQU   X'FF'
NONE     EQU   X'00'
          SPACE 3
*        CHECK VALIDITY OF PROCEDURE
*
*        PROMPT USER IF INVALID
*
         EJECT
         SAVE  (14,12),,*
         LR    R11,R15          BASE REG.
         USING USERPRO,R11
         LM    R4,R5,0(R1)      A(PDE,USERWORD)
         USING DSA,R5
         LA    R2,EXDSA
         ST    R2,8(,R13)
         ST    R13,4(,R2)
         LR    R13,R2           SAVE-AREA CHAINING
*
GO       SLR   R8,R8            COUNTER
         L     R6,ACNUM
         L     R3,RETADR
         L     R2,4(,R6)        COUNT NUMBER OF VALID PROCNAMES
NEXTOFF  LA    R7,0(R3,R2)      .
         LA    R8,1(,R8)
         ICM   R2,7,1(R7)       NEXT OFFSET-PTR.
         BNZ   NEXTOFF
         TM    6(R4),X'80'      PROC IN INPUT-BUFFER+%
         BO    SEEKUP
         CH    R8,=H'1'         NUMBER OF VALID ENTRIES
         BNE   ENTER
*
         L     R1,8(,R7)        UADSRDAT
         LA    R1,4(R3,R1)
         MVC   UPROC,0(R1)      SAVE PROCNAME
RC0      SLR   R15,R15
RC15     L     R13,4(,R13)
         RETURN (14,12),RC=(15)
         SPACE 3
RC4      LA    R15,4
         B     RC15
         EJECT
SEEKUP   L     R6,ACNUM         ACCOUNT-BLOCK
         L     R3,RETADR
         L     R2,4(,R6)        .
         L     R1,0(,R4)        INPUT-PROC
         MVC   UPROC,BLANKX
         SLR   R14,R14
         ICM   R14,3,4(R4)      LENGTH
         BZ    REENTER
         BCTR  R14,0
         EX    R14,MVC1P        UPROC(0),0(R1)
TESTPR   L     R1,8(R3,R2)
         AR    R1,R3            DROPD
         CLC   UPROC,4(R1)
         BE    RC0
*
         L     R2,0(R2,R3)      NEXT OFFSET-BLOCK
         LA    R2,0(,R2)
         LTR   R2,R2
         BNZ   TESTPR
         LA    R2,MSGV1         A(MSG-REENTER)
         EJECT
REENTER  DS    0H               INPUT-PROCEDURE
         MVC   MSGV1,MSGCB      MOVE CB
         LA    R1,MSGPROC
         ST    R1,MSGPPR
         MVC   MSGPROC,M3
         MVC   MSGPRO,UPROC     MOVE DATA
         LA    R1,MSGV2
         ST    R1,MSGV1
         SPACE 2
REENTER1 LA    R1,WIOPL
         XC    ECB,ECB
         L     R15,APUTGET
         XC    IOPB(16),IOPB
         PUTGET  PARM=IOPB,OUTPUT=((R2),MULTLVL),ENTRY=(15),          **
               MF=(E,(1)),TERMGET=(EDIT,WAIT),TERMPUT=(,,HOLD)
PUTGETRC LTR   R15,R15
         BNZ   RC4
*
         MVC   UPROC,BLANKX
         L     R1,IOPB+12         A(INPUT-BUFFER)
         LH    R15,0(,R1)         L(INPUT+4)
         SH    R15,=H'4'
         BNP   REENTER1           EOB NOT ALLOWED
         CH    R15,=H'8'          MAX 8
         BH    REENTER1
         LA    R4,INTPT           BUILD INT. CB
         LA    R14,INTPRO
         ST    R14,INTPT         PTR BEHIND
         OI    INTFLG,X'80'
         STCM  R15,3,INTL         LENGTH
         MVC   INTPRO,BLANKX
         BCTR  R15,0
         EX    R15,OCPRO
         B     SEEKUP
         SPACE 2
         SPACE 3
*
ENTER    LA    R2,MSGINP
         B     REENTER1
         EJECT
*
MVC1P    MVC   UPROC(0),0(R1)
OCPRO    OC INTPRO(1),4(R1)
*
MSGCB    DC    A(MSGRENT1),F'1',A(M1)
MSGRENT1 DC    F'0',F'2',A(M2),A(0)
M1       DC    AL2(L'M1A+4),H'0'
M1A      DC    C' INVALID PROCNAME+'
M2       DC    AL2(L'M2A+4),H'0'
M2A      DC    C' YOU ARE NOT AUTHORIZED TO USE PROC '
M3       DC    AL2(8+4),AL2(L'M2A)
BLANKX   DC    CL8' '
MSGINP   DC    A(MSGIN1),F'1',A(E1)
MSGIN1   DC    F'0',F'1',A(E2)
E1       DC    AL2(L'E1T+4),H'0'
E1T      DC    C' ENTER PROCNAME '
E2       DC    AL2(L'E2T+4),H'0'
E2T      DC    C' ENTER ONE VALID PROCNAME '
DSA      DSECT
         COPY  EFLDDSA
         ORG   UPWORK
INTPT    DS    XL4
INTL     DS    H
INTFLG   DS    XL2
INTPRO   DS    CL8
MSGV1    DS    0XL28
         DS    3F
MSGV2    DS    3F
MSGPPR   DS    XL4
*
MSGPROC  DS    XL4
MSGPRO   DS    CL8
         ORG
         IKJIOPL
         END
USERX    CSECT                  CHECK VALIDITY OF USERID & PASS.
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
ON       EQU   X'80'
OFF      EQU   X'7F'
ALL      EQU   X'FF'
NONE     EQU   X'00'
         SPACE 3
*        PARSE VALIDITY EXIT FOR USERID AND PASSWORD
*
*        READ UADS-DATASET FOR SPECIFIED USERID
*              PROMPT IF USER NOT FOUND
*              PROMPT FOR PASSWORD IF REQU'D.
*              0C1 IF OPEN UNSUCCESSFULL
*
***
*****  TAKE CARE..  THIS ROUTINE USES  IBM-MODULE IKJEFA40
*****               LINKLIST SHOULD BE CHECKED TO FIND ENTRY-POINT
*****               CHANGE FULLWORD 'FABST' USING SPZAP IF
*****               NECESSARY
***
*
         EJECT
         SAVE  (14,12),,*
         LR    R11,R15          BASE REG.
         USING USERX,R11
         LM    R4,R5,0(R1)      A(PDE,USERWORD)
         USING DSA,R5
*
         MVC   PASSWD,BLANKX
         LA    R2,EXDSA
         ST    R2,8(,R13)
         ST    R13,4(,R2)
         LR    R13,R2           SAVE-AREA CHAINING
*
         ICM   R6,15,0(R4)      A(USERID)
         SLR   R7,R7
         ICM   R7,3,4(R4)       L'USERID
*
MOVEUS   BCTR  R7,0
         MVC   USER,BLANKX
         EX    R7,OCUSER        SAVE USERID
         LA    R14,USER+1(R7)   A(LAST) VAL. CHAR
         MVI   0(R14),C'0'
         LR    R3,R14
         LA    R15,USER
         SR    R14,R15
         STH   R14,LUSER        SAVE L(USERID)
         BAL   R14,UPUADS
         B     OKUSER           UADS READ SUCCESSFULLY
         B     UADSNOP          UADS COULD NOT BE OPENED
         B     REISSUE          USER NOT FOUND
*                          RC8  ...... USER NOT FOUND
UADSNOP  DC    H'0'             UADS NOT OPENED
*
*        N O T I F I E     S Y S T E M - P R O G R A M M E R
*
*
*
REISSUE  LA    R1,WIOPL
         USING IOPL,R1          FILL PTR. FOR PUTGET
         XC    ECB,ECB
         L     R15,APUTGET
         XC    IOPB(16),IOPB
         PUTGET PARM=IOPB,OUTPUT=(OLD1),TERMPUT=(,,HOLD),ENTRY=(15), ***
               MF=(E,(1)),TERMGET=(EDIT,WAIT)
         LTR   R15,R15
         BNZ   RC12
*
         L     R6,IOPB+12
         LR    R1,R6            LOAD A(BUFFER)
         LH    R7,0(,R6)        LENGTH
         CH    R7,=H'12'
         BH    REISSUE
         CH    R7,=H'4'
         BNH   REISSUE
         SH    R7,=H'4'
         LA    R6,4(,R6)        R6 ... A(USERID)
         B     MOVEUS           R7 ... L'USERID
*
*
*
*
*
RC12     LA    R15,12
RC15     L     R13,4(,R13)
         RETURN (14,12),RC=(15)
*
RC0      SLR   R15,R15
         B     RC15
         EJECT
UPPASS   DS    0H              RETURN VIA R14
         L     R3,RETADR       ADR. OF ACCOUNT
         L     R6,X'18'(,R3)
         AR    R6,R3           DPOB
*
         TM    14(R4),X'80'    PASSWORD IN INPUT-BUFFER
         BO    PASSIN
         ICM   R7,15,8(R6)     PASSWORD IN UADS
         BNZ   4(R14)          PROMPT FOR PASSWORD
         ST    R6,ACPASS       SAVE CB-ADRESS
         BR    R14             RETURN TO OFFSET 0
*
PASSIN   ICM   R7,15,8(R6)
         BZ    4(R14)
         ALR   R7,R3            ADD BASE
         L     R1,8(,R4)       MOVE INPUT-PASSWORD
         LH    R15,12(,R4)
         BCTR  R15,0
         MVC   PASSWD,BLANKX
         EX    R15,OCPASS
PASSVGL  CLC   PASSWD,4(R7)
         BNE   PASSNEXT
         ST    R6,ACPASS
         BR    R14
*
PASSNEXT ICM   R6,7,1(R6)
         BZ    8(R14)           WRONG PASSWORD
         AR    R6,R3
         ICM   R7,15,8(R6)
         BNZ   PASSVGL
         B     8(R14)
         SPACE 3
OKUSER   MVI   0(R3),C' '        REMOVE ZERO
OKUSR1   BAL   R14,UPPASS
         B     RC0
         B     PENTER
*                                REENTER PASSWORD
PRENT    LA    R1,WIOPL
         USING IOPL,R1
         XC    ECB,ECB
         L     R15,APUTGET
         MVC   MSGVARO,PASRENT   MOVE OLD
         LA    R14,PUTPASS
         ST    R14,MSGV2
         MVC   PUTPASS,=XL4'000C0010'
         XC    IOPB(16),IOPB     CLEAR IO-BLOCK
         PUTGET PARM=IOPB,OUTPUT=(MSGVARO,,PTBYPS),TERMPUT=(,,HOLD), ***
               TERMGET=(EDIT,WAIT),                                  ***
               ENTRY=(15),MF=(E,(1))
*
         B     RENTRC
*
PENTER   DS    0H
         LA    R1,WIOPL        LOAD LIST-FORM
         USING IOPL,R1
         XC    ECB,ECB
         L     R15,APUTGET
         XC    IOPB(16),IOPB
         PUTGET PARM=IOPB,OUTPUT=(OLDP1,,PTBYPS),TERMPUT=(,,HOLD), *****
               ENTRY=(15),MF=(E,(1)),TERMGET=(,)
RENTRC   LTR   R15,R15
         BNZ   RC12
         L     R1,IOPB+12       GET INPUT
         LH    R15,0(,R1)
         CH    R15,=H'4'
         BNH   PENTER
         CH    R15,=H'12'       MAX. 8 CHAR.
         BH    PENTER
         MVC   IPASSWD,BLANKX
         SH    R15,=H'5'        LAENGE-5
         EX    R15,OCPASSP
         LA    R15,1(,R15)
         STH   R15,12(,R4)
         LA    R14,IPASSWD
         ST    R14,8(R4)
         MVI   14(R4),X'80'
         B     OKUSR1
         EJECT
UPUADS   ST    R14,EXDSA         SAVE RETURN-ADRESS
         LA    R2,UPWORK
         MVC   0(LDCB,R2),UADSDCB
         MVC   LCALL(4),LOPEN
         OPEN  ((R2),INPUT),MF=(E,LCALL)
         TM    48(R2),X'10'      TEST OPEN-FLAGS
         L     R14,EXDSA
         BZ    4(R14)
         LOAD  EP=IKJEFA40
         LR    R15,R0
         A     R15,FABST
         XC    LCALL(20),LCALL
         CALL  (15),((R2),USER,0,0,0),MF=(E,LCALL)
         L     R14,EXDSA
         LTR   R15,R15
         BNZ   8(R14)
         MVC   RETADR,LCALL+16
         MVC   LCALL(4),LCLOSE
         CLOSE ((R2)),MF=(E,LCALL)
         L     R14,EXDSA
         BR    R14
         EJECT
LOPEN    OPEN  (0),MF=L
LCLOSE   CLOSE (0),MF=L
PASRENT  DC    F'2'
         DC    A(MSGP2)
         DC    A(0)
*
UADSDCB  DCB   MACRF=R,DDNAME=SYSUADS,DSORG=PO
LDCB     EQU   *-UADSDCB
OLDP1    DC    F'1'
         DC    A(MSGP1)
MSGP1    DC    AL2(L'MSGP1A+4),H'0'
MSGP1A   DC    C' ENTER PASSWORD '
MSGP2    DC    AL2(L'MSGP2A+4),H'0'
MSGP2A   DC    C' WRONG PASSWORD, REENTER - '
         DS    0H
OCPASSP  OC   IPASSWD(1),4(R1)
OCPASS   MVC   PASSWD(1),0(R1)
BLANKX   DC    CL8' '
OCUSER   OC    USER(1),0(R6)
OLD1     DC    F'1'
         DC    A(MUSER)
FABST    DC    X'00001DB0'     VS2 R3.0
*        AMBLIST   LISTLOAD   MEMBER=IKJEFA40
MUSER    DC    AL2(L'MUSE+4),H'0'
MUSE     DC    C' USERID NOT AUTHORIZED TO USE TSO, REENTER - '
DSA      DSECT
         COPY  EFLDDSA
         ORG   UPWORK
PUTPASS  DS    XL4
IPASSWD  DS    CL8
MSGVARO  DS    0XL12
         DS    XL8
MSGV2    DS    XL4
         ORG
         IKJIOPL
         IKJPGPB
         END
