         MACRO
&NAME    $UCBLOOK &DEVTYPE=ALL,&VOLSER=,&STATUS=ONLINE,&MF=S
.**********************************************************************
.*                                                                    *
.*       MACRO  $UCBLOOK (RELEASE 1.1)                                *
.*       =============================                                *
.*                                                                    *
.* RELEASE 1.1.    AN EXECUTE- AND A LIST-FORM HAD BEEN INTRODUCED    *
.*                 IN ADDITION TO THE STANDARD FORM                   *
.*                                                                    *
.*                                                                    *
.*                                                                    *
.* FUNCTION:  CALLS UCBSCAN ROUTINE (IOSVSUCB,PROVIDED BY IBM).       *
.*            $UCBLOOK RETURNS AN UCB-ADDRESS PER CALL. TO SCAN       *
.*            SEVERAL UCB'S YOU MUST INVOKE THE SAME MACRO            *
.*            (OR PAIR OF EXECUTE-/LIST-FORM MACROS) REPEATEDLY.      *
.*            TO SELECT SPECIFIC UCB'S YOU CAN CODE                   *
.*            ONE OR MORE OF THE OPTIONAL PARAMETERS.                 *
.*                                                                    *
.* FORM:      YOU CAN CODE THE MACRO IN THE STANDARD FORM OR          *
.*            IN EXECUTE AND LIST FORM                                *
.*                                                                    *
.* INPUT:     MANDATORY PARAMETER FOR EXECUTE/LIST FORM:     MF       *
.*            OPTIONAL PARAMETERS FOR EXECUTE/STANDARD FORM:          *
.*                           DEVTYPE/VOLSER/STATUS                    *
.*                                                                    *
.* OUTPUT:    UCB-ADDRESS IN REG 1                                    *
.*            DEV-ADDRESS IN REG 0 (CHANNEL-NBR=CHANNEL OF LAST       *
.*                                              STARTED I/O)          *
.*                                                                    *
.* PREREQS:  -CODE THE CVT MAPPING-MACRO:  CVT    DSECT=YES           *
.*           -REG 13 SHOULD POINT TO A 18 FULLWORDS SAVE AREA         *
.*                                                                    *
.* REGISTERS: REG 0,1,14,15 ARE CHANGED BY MACRO PROCESSING           *
.*                                                                    *
.* RETURNCODE:REG 15: 0 UCB FOUND,4 NO MORE UCB'S IN THE SYSTEM       *
.*                                                                    *
.* REMARK:   -IF YOU CODE THE $UCBLOOK MACRO SEVERAL TIMES IN YOUR    *
.*            PROGRAM, THEN EACH MACRO SCANS THE UCB-LIST             *
.*            INDEPENDENTLY OF THE OTHER.                             *
.*           -IF OPTIONAL CHANNELS ARE GENERATED,THEN THE             *
.*            UCB-ADDRESS IS RETURNED ONLY ONCE PER DEVICE.           *
.*                                                                    *
.*                                                                    *
.*                                                                    *
.*                                                                    *
.*--------------------------------------------------------------------*
.*                                                                    *
.* CODING OF MACRO (STANDARD FORM)                                    *
.* ---------------                                                    *
.*                                                                    *
.*          NAME                                                      *
.*      .................................                             *
.*                                                                    *
.*      $UCBLOOK                                                      *
.*                                                                    *
.*      .................................                             *
.*                                                                    *
.*                                                                    *
.*          DEVTYPE=  DASD/D×DISPLAY×COMM×TAPE/T×ALL/A                *
.*         ,VOLSER=   A-TYPE ADDRESS OR REGISTER EG. (2),             *
.*                        ADDRESS OF A FIELD CONTAINING THE VOLSER    *
.*         ,STATUS=   ONLINE/O×ONOFF/OFFON                            *
.*                                                                    *
.*      ---------------------------------                             *
.*                                                                    *
.*      DEVTYPE:                                                      *
.*          DASD OR D:    ONLY DASD UCB'S ARE RETURNED                *
.*          DISPLAY:      ONLY DISPLAY UCB'S ARE RETURNED             *
.*          COMM:         ONLY COMMUNICATION-DEVICE UCB'S             *
.*          TAPE OR T:    ONLY TAPE UCB'S ARE RETURNED                *
.*          ALL OR A :    ALL UCB'S ARE RETURNED (DEFAULT)            *
.*                                                                    *
.*      VOLSER:           THE ADDRESS OF THE UCB CORRESPONDING TO     *
.*                        THE VOLSER IS RETURNED                      *
.*                        DEFAULT: VOLSER IS IGNORED                  *
.*                                                                    *
.*      STATUS:                                                       *
.*          ONLINE OR O:  UCB IS RETURNED ONLY WHEN DEVICE IS ONLINE  *
.*                                                   (DEFAULT)        *
.*          ONOFF OR OFFON: ONLINE BIT IS NOT CHECKED                 *
.*                                                                    *
.*      =================================                             *
.*                                                                    *
.* CODING OF MACRO (EXECUTE FORM)                                    *
.* ---------------                                                    *
.*                                                                    *
.*          NAME                                                      *
.*      .................................                             *
.*                                                                    *
.*      $UCBLOOK                                                      *
.*                                                                    *
.*      .................................                             *
.*                                                                    *
.*                                                                    *
.*          DEVTYPE=  DASD/D×DISPLAY×COMM×TAPE/T×ALL/A                *
.*         ,VOLSER=   A-TYPE ADDRESS OR REGISTER EG. (2),             *
.*                        ADDRESS OF A FIELD CONTAINING THE VOLSER    *
.*         ,STATUS=   ONLINE/O×ONOFF/OFFON                            *
.*     ,MF=(E,LIST ADDR)   A-TYPE ADDRESS OR REGISTER EG.(2)          *
.*      ---------------------------------                             *
.*                                                                    *
.*      DEVTYPE:                                                      *
.*          DASD OR D:    ONLY DASD UCB'S ARE RETURNED                *
.*          DISPLAY:      ONLY DISPLAY UCB'S ARE RETURNED             *
.*          COMM:         ONLY COMMUNICATION-DEVICE UCB'S             *
.*          TAPE OR T:    ONLY TAPE UCB'S ARE RETURNED                *
.*          ALL OR A :    ALL UCB'S ARE RETURNED (DEFAULT)            *
.*                                                                    *
.*      VOLSER:           THE ADDRESS OF THE UCB CORRESPONDING TO     *
.*                        THE VOLSER IS RETURNED                      *
.*                        DEFAULT: VOLSER IS IGNORED                  *
.*                                                                    *
.*      STATUS:                                                       *
.*          ONLINE OR O:  UCB IS RETURNED ONLY WHEN DEVICE IS ONLINE  *
.*                                                   (DEFAULT)        *
.*          ONOFF OR OFFON: ONLINE BIT IS NOT CHECKED                 *
.*                                                                    *
.*      MF:                                                           *
.*          E:            EXECUTE-FORM                                *
.*          LIST ADDR     ADDRESS OF CORRESPONDING MACRO IN LIST-FORM *
.*                                                                    *
.*                                                                    *
.*      =================================                             *
.*                                                                    *
.* CODING OF MACRO (LIST FORM)                                    *
.* ---------------                                                    *
.*                                                                    *
.*          NAME                                                      *
.*      .................................                             *
.*                                                                    *
.*      $UCBLOOK                                                      *
.*                                                                    *
.*      .................................                             *
.*                                                                    *
.*                                                                    *
.*      MF=L                                                          *
.*      ---------------------------------                             *
.*                                                                    *
.*      MF:                                                           *
.*          L:            LIST-FORM                                *
.*                                                                    *
.*      =================================                             *
.*--------------------------------------------------------------------*
.*                                                                    *
.* CODING-EXAMPLES                                                    *
.* ---------------                                                    *
.*                                                                    *
.*      1)      $UCBLOOK             :ON EACH CALL ANOTHER ONLINE     *
.*                                    UCB-ADDRESS IS RETURNED.        *
.*                                    (IF ALL UCB'S OF THE SYSTEM     *
.*                                     ARE SCANNED,THEN RC=4)         *
.*                                                                    *
.*                                                                    *
.*                                                                    *
.*      2)      $UCBLOOK DEVTYPE=D   :ON EACH CALL ANOTHER UCB-ADDR   *
.*                                    OF AN ONLINE DASD DEVICE IS     *
.*                                    RETURNED.                       *
.*                                    (IF ALL DASD UCB'S ARE SCANNED  *
.*                                     THEN RC=4)                     *
.*                                                                    *
.*      3)      $UCBLOOK DEVTYPE=T,STATUS=ONOFF                       *
.*                                   :ON EACH CALL ANOTHER UCB-ADDR   *
.*                                    OF AN ONLINE OR OFFLINE TAPE    *
.*                                    DEVICE IS RETURNED.             *
.*                                    (IF ALL TAPE UCB'S ARE          *
.*                                     SCANNED THEN RC=4)             *
.*                                                                    *
.*      4)      $UCBLOOK DEVTYPE=D,MF=(E,LFORM)                       *
.*              .                                                     *
.*              .                                                     *
.*        LFORM $UCBLOOK MF=L                                         *
.*                                   :ON EACH CALL ANOTHER UCB-ADDR   *
.*                                    OF AN ONLINE DASD DEVICE IS     *
.*                                    RETURNED.                       *
.*                                    (IF ALL DASD UCB'S ARE SCANNED  *
.*                                     THEN RC=4)                     *
.*                                                                    *
.*                                                                    *
.*                                                                    *
.*                                                                    *
.*                                                                    *
.*      CH. BOSSEL,  22.7.83                                          *
.**********************************************************************
.*                                                                    *
.*                                                                    *
.*  DEFINITION OF MACRO-EXPANSION CONTROL VARIABLES                   *
.*                                                                    *
         GBLA  &N                .COUNTER OF MACRO CALLS (E AND S FORM)
         GBLC  &UCBL             .ADDR OF 'INIT OF PARML'-TEST BYTE
         GBLC  &UCBM,&UCB,&UCBS  .LABELS
         LCLC  &MFX1
&UCBM    SETC  '$UCBM'
&UCB     SETC  '$UCBE'
&UCBL    SETC  '$UCBL'
&UCBS    SETC  '$UCBS'
.*$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
.*                                                                    *
&N       SETA  &N+1
.*                                                                    *
.*****************************************                            *
.*  CHECKING FOR MACRO-FUNCTION L AND S *
.*****************************************                            *
.LCHECK  ANOP
         AIF   ('&MF(1)' EQ 'E').LEND
         AIF   ('&MF(1)' EQ 'L').LFORM
         AIF   ('&MF(1)' EQ 'S').SFORML
         MNOTE 12,'MF=L OR MF=E OR MF=S'
         AGO   .MEND
.**********************************************************************
.*      *DEFINITION OF WORK- AND PARAMETERFIELDS FOR "IOSVSUCB"       *
.**********************************************************************
.*                                                                    *
.LFORM   ANOP
&NAME    DS    0D
         AGO   .LIST
.SFORML  ANOP
         B     &UCBS.&N
&UCBL.&N DS    0D
.*                                                                    *
.*      *PARAMETERLIST FOR PROGRAM IOSVSUCB                           *
.*       ----------------------------------                           *
.LIST    ANOP
         DC    F'0'             .ADDRESS OF WORKAREA
         DC    F'0'             .ADDRESS OF DEVTYPE-FIELD
         DC    F'0'             .ADDRESS OF UCB-ADDR-FIELD
.*                                                                    *
.*                                                                    *
.*      *WORKAREA FOR PROGRAM IOSVSUCB                                *
.*      ------------------------------                                *
         DC    F'0'             .FIELD CONTAINING UCBADDR
         DC    XL100'00'        .WORKAREA ON DOUBLEWORD-BDRY
         DC    C'ENDUCBWK'
         DC    X'00'            .FIELD CONTAINING DEVICETYPE
.*                                                                    *
.*      *TESTBYTE FOR PARAMETERLIST INITIALIZATION                    *
.*       -----------------------------------------                    *
         DC    X'00'            .INIT OF PARAMETERLIST (TEST-BYTE)
.*                                                                    *
.**********************************************************************
.*      *END OF DEFINITION OF WORK- AND PARAMETERFIELDS FOR IOSVSUCB  *
.**********************************************************************
.LEND    ANOP
.*                                                                    *
.****************************************                             *
.*  CHECKING FOR MACRO-FUNCTION E AND S *
.****************************************                             *
         AIF   ('&MF(1)' EQ 'L').MEND
         AIF   ('&MF(1)' EQ 'E').EFORM
         AIF   ('&MF(1)' EQ 'S').SFORME
         MNOTE 12,'MF=E OR MF=L OR MF=S'
         AGO   .MEND
.*                                                                    *
.*      *INIT EXECUTE-FORM                                            *
.*                                                                    *
.EFORM   ANOP
&MFX1    SETC  '&MF(2)'
         AIF   ('&MFX1' NE '').EFORM1
         MNOTE 12,'YOU MUST CODE MF=(E,CTRL) CTRL ADDRESS OF LIST FORM'
         AGO   .MEND
.EFORM1  ANOP
         AIF   ('&MFX1'(1,1) EQ '(').ELREG
.*       AIF   ('&MF'(2,1) EQ '(').ELREG
&NAME    LA    1,&MF(2)
         AGO   .CODE
.ELREG   ANOP
&NAME    LA    1,0&MF(2)
         AGO   .CODE
.*                                                                    *
.*      *INIT STANDARD-FORM                                           *
.*                                                                    *
.SFORME  ANOP
&UCBS.&N DS    0H
&NAME    LA    1,&UCBL.&N
.**********************************************************************
.*  GENERATION OF EXECUTABLE CODE                                     *
.**********************************************************************
.*                                                                    *
.*                                                                    *
.*      *INITIALIZATION OF PARAMETER-FIELDS ALREADY PERFORMED&        *
.*                                                                    *
.CODE    ANOP
         TM    125(1),X'FF'
         BO    &UCBM.&N
.*                                                                    *
.*                                                                    *
.* PROCESSING OF PARAMETER  'DEVTYPE'                                 *
.*                                                                    *
         AIF   ('&DEVTYPE' EQ '').PARML
         AIF   (('&DEVTYPE' EQ 'ALL') OR ('&DEVTYPE' EQ 'A')).PARML
         AIF   (('&DEVTYPE' NE 'DASD') AND ('&DEVTYPE' NE 'D')).DISPL
         OI    124(1),B'00100000'
         AGO   .PARML
.DISPL   ANOP
         AIF   ('&DEVTYPE' NE 'DISPLAY').COMM
         OI    124(1),B'00010000'
         AGO   .PARML
.COMM    ANOP
         AIF   ('&DEVTYPE' NE 'COMM').TAPE
         OI    124(1),B'01000000'
         AGO   .PARML
.TAPE    ANOP
         AIF   (('&DEVTYPE' NE 'TAPE') AND ('&DEVTYPE' NE 'T')).DEVERR
         OI    124(1),B'10000000'
         AGO   .PARML
.DEVERR  ANOP
         MNOTE 12,'DEVTYPE=DASD/D × DISPLAY × COMM × TAPE/T × ALL/A'
.*                                                                    *
.*                                                                    *
.* INITIALIZATION OF PARAMETERLIST FOR  "IOSVSUCB"                    *
.*                                                                    *
.PARML   ANOP
         USING CVTMAP,14
         LA    14,16(1)          .ADDRESS OF UCBSCAN WORK AREA
         ST    14,0(1)
         LA    14,124(1)         .ADDRESS OF BYTE CONTAINING DEV CL
         ST    14,4(1)
         LA    14,12(1)          .ADDRESS OF WORD TO RECEIVE UCB ADDR
         ST    14,8(1)
         OI    8(1),B'10000000'  .HIGH-ORDER BIT OF PARMLIST IS  1
         OI    125(1),X'FF'      .PARMLIST-INIT INDICATOR
.*                                                                    *
.*                                                                    *
.* BRANCH TO  "IOSVSUCB"                                              *
.*                                                                    *
&UCBM.&N L     14,CVTPTR
         L     15,CVTUCBSC       .ADDRESS OF SCAN ROUTINE FROM CVT
         BALR  14,15
         LTR   15,15
         BNZ   &UCB.&N
         L     14,12(1)         .LOAD UCB-ADDRESS IN REG 14
.*                                                                    *
.*                                                                    *
.* PROCESSING OF PARAMETER  'VOLSER'                                  *
.*                                                                    *
         AIF   ('&VOLSER' EQ '').STATUS
         AIF   ('&VOLSER'(1,1) NE '(').VOLSERA
         CLC   28(6,14),0(&VOLSER(1))    .REG POINTS TO A VOLSER-FIELD
         BNE   &UCBM.&N
         AGO   .VOLSERE
.VOLSERA ANOP
         CLC   28(6,14),&VOLSER          .IMPLICIT ADDRESS OF VOLSER
         BNE   &UCBM.&N
.VOLSERE ANOP
         MVI   16(1),X'00'
         MVC   17(99,1),16(1)            .SETS WORKAREA TO X'00'
.*                                                                    *
.*                                                                    *
.* PROCESSING OF PARAMETER  'STATUS'                                  *
.*                                                                    *
.STATUS  ANOP
         AIF   ('&STATUS' EQ '').STATUSO
         AIF   (('&STATUS' EQ 'ONOFF') OR ('&STATUS' EQ 'OFFON')).EEND
         AIF   (('&STATUS' NE 'O') AND ('&STATUS' NE 'ONLINE')).STATERR
.STATUSO ANOP
         TM    3(14),B'10000000'     .IS DEVICE ONLINE
         BNO   &UCBM.&N
         AGO   .EEND
.STATERR ANOP
         MNOTE 12,'STATUS=O OR ONLINE OR OFFON OR ONOFF'
.*                                                                    *
.*                                                                    *
.EEND    ANOP
         SR    0,0                .DEV-ADDR IN REG0
         ICM   0,B'0011',4(14)
&UCB.&N  LR    1,14               .LOAD UCB-ADDR IN REG1
.**********************************************************************
.*  END OF GENERATION OF EXECUTABLE CODE                              *
.**********************************************************************
.*                                                                    *
.MEND    ANOP
         MEND
         MACRO
&NAME    ERET  &REG=(14,12),&CT=,&RC=,&SA=72
*
*    ERET        24.01.77
*
.* RC=   RETURN-CODE,
.*       WIE IM RETURN-MACRO ANGEGEBEN WERDEN KANN
.* REG=  REGISTERNOTIERUNG, STANDARDWERT IST (14,12)
.*       WIE IM RETURN-MACRO ANGEGEBEN WERDEN KANN
.* CT=   T,
.*       WIE IM RETURN-MACRO ANGEGEBEN WERDEN KANN
.* SA=   LAENGE DER SAVEAREA, STANDARDWERT IST 72
         LCLC  &TRC  DEFINIERT DEN TYP VON &RC
&TRC     SETC  T'&RC  DAMIT AUF FEHLEN VON RC= GEPRUEFT WERDEN KANN
&NAME    LA    1,0(13)
         L     13,4(1)
         LR    1,2
         AIF   ('&REG' EQ 'NO').M3
         AIF   ('&TRC' EQ 'O').M1
         RETURN &REG,&CT,RC=&RC
         AGO   .M2
.M1      RETURN &REG,&CT
.M2      MNOTE *,'ERET GENERIERT'
         MEXIT
.M3      AIF   ('&TRC' EQ 'O').M4
         RETURN &CT,RC=&RC
         AGO   .M2
.M4      RETURN &CT
         AGO   .M2
         MEND
         MACRO
&NAME    EANF  &V,&CD=C,&LC=0,&BR=1,&SA=72,&EP=,&ID=,&REG=(14,12),     1
               &CT=
*
*   EANF    24.01.77
*
.*
.* V     REG. 15 WIRD ZUM LADEN DER BASISREG. BENUTZT
.* CD=   STANDARDWERT IST -S- WIE -START-
.*       ZULAESSIG AUCH -C- WIE -CSECT-
.* LC=   STANDARDWERT IST -0-, SETZT ZUORDNUNGSZAEHLER AUF 0
.*       NUR ZULAESSIG IN VERBINDUNG MIT -START-, SIEHE CD=
.* BR=   STANDARDWERT IST -1- WIE -EIN BASISREGISTER=BASIS1=R3-
.*       ZULAESSIG IST 0,1,2 ODER 3
.* SA=   STANDARDWERT IST -72-
.*       GIBT DIE LAENGE DER SAVEAREA AN
.* EP=   NAME DES EINGANGSPUNKTES. WENN ANGEGEBEN,SO WIRD
.*       ER MERKMAL DER SAVE-INSTUKTION IN DER MAKROAUFLOESUNG
.* ID=   IDENTIFIKATION, WIE BEIM SAVE-MACRO ANGEGEBEN WERDEN KANN
.* REG=  REGISTERNOTIERUNG, STANDARDWERT IST (14,12)
.*       WIE IM SAVE-MACRO ANGEGEBEN WERDEN KANN
.* CT=   T,
.*       WIE IM SAVE-MACRO ANGEGEBEN WERDEN KANN
.*
.* GLOBALE VARIABLE ZUM TEST GEGEN DOPPELDEFINITION DER REGISTER
         GBLB  &GLBIT   BETROFFEN SIND DIE EQU'S
         GBLA  &GLBR
         LCLA  &SETBR   ZUM TEST FUER BR=
         LCLA  &LECS
         LCLC  &CSET
         LCLA  &ASET
.*
         AIF   (T'&NAME EQ 'O').M1
.M2      AIF   ('&CD' EQ 'S').M3
         AIF   ('&CD' EQ 'C').M4
         MNOTE 4,'CD=  IST UNGUELTIG'
.M3      MNOTE *,'START GENERIERT'
&NAME    START &LC
         AGO   .M5
.M4      MNOTE *,'CSECT GENERIERT'
&NAME    CSECT
.M5      ANOP
         AIF   (&GLBIT).E1
*
*
*
         MNOTE *,'SYMBOLISCHE REGISTER GENERIERT'
*
R15      EQU   15  VERZWEIGREGISTER
R14      EQU   14  RUECKKEHRREGISTER
R13      EQU   13  REGISTER FUER DEN LAUFENDEN SICHERUNGSBEREICH
R12      EQU   12
R11      EQU   11
R10      EQU   10
R9       EQU   9
R8       EQU   8
R7       EQU   7
R6       EQU   6
R5       EQU   5
R4       EQU   4
R3       EQU   3
R2       EQU   2   BEI TRT-EINGABEDATENPRUEFUNG VERWENDET
R1       EQU   1   PARAMETERREGISTER
R0       EQU   0   PARAMETERREGISTER
*
*
.E1      AIF   ('&BR'(1,1) NE '(').E2
         AGO   .M22
.E2 ANOP
&SETBR   SETA  &BR
         AIF   (&GLBIT).M18
.M19     AIF   (&SETBR EQ 0).M6
         AIF   (&SETBR GE 1).M8
.M9      AIF   (&SETBR GE 2).M10
.M12     ANOP
         AIF   (&GLBR GT &SETBR).M22
&GLBR    SETA  &SETBR
.M22     ANOP
**
**
         USING *,R15
MACR&SYSNDX EQU *
&EP      SAVE  &REG,&CT,&ID
         LR    2,1
         AIF   (T'&EP EQ 'O').M13
         AIF   (T'&EP EQ 'SYSECT').M21
         ENTRY &EP
         MNOTE *,'ENTRY-EINGANGSPUNKT GENERIERT'
.M13        CNOP  0,4
            LA    1,*+8
            B     *+4+&SA
            DS    &SA.C
         ST    R13,4(R1)
         LR    R10,R13
         LA    R13,0(R1)
         ST    R13,8(R10)
         LR   1,2
         AIF   (&GLBIT).M17
*
* AUFBAU DER SAVEAREA
*
* WORT 0  NUR VON PL/1 VERWENDET
* WORT 1  A(SAVEAREA IM RUFENDEN PROGRAMM)
* WORT 2  A(SAVEAREA IM GERUFENEN PROGRAMM)
* WORT 3  R14
* WORT 4  R15
* WORT 5  R0         **BEI         R14
* WORT 6  R1         **ZUGRIFFS-   R15
* WORT 7  R2         **ROUTINEN    R0
* WORT 8  R3 BASIS1  **WERDEN      R1
* WORT 9  R4 BASIS2  **HIER        R2
* WORT 10 R5 BASIS3  **FOLGENDE    R3
* WORT 11 R6         **REGISTER    R4
* WORT 12 R7         **VON DER     R5
* WORT 13 R8         **ZUGRIFFS-   R6
* WORT 14 R9         **ROUTINE     R7
* WORT 15 R10        **GESPEICHERT R8
* WORT 16 R11
* WORT 17 R12
*
.M17     ANOP
         AIF   ('&BR'(1,1) NE '(').E5
&SETBR   SETA  N'&BR
         BALR  &BR(1),0
         USING *,&BR(1)
         AIF   (&SETBR EQ 1).M14
         AIF   (&SETBR GT 10).E4
.E3      ANOP
&LECS    SETA  2
&ASET    SETA  1
         LA    &BR(&SETBR),4095
         LA    &BR(&LECS),1(&BR(&ASET),&BR(&SETBR))
         AIF   (&LECS NE &SETBR).E11
 USING *+4096-&SETBR*4,&BR(2)
 AGO .M14
.E11  ANOP
&LECS    SETA  &LECS+1
&ASET    SETA  &ASET+1
         LA    &BR(&LECS),1(&BR(&ASET),&BR(&SETBR))
         AIF   (&LECS NE &SETBR).E12
 USING *+4096-&SETBR*4,&BR(2),&BR(3)
 AGO .M14
.E12  ANOP
&LECS    SETA  &LECS+1
&ASET    SETA  &ASET+1
         LA    &BR(&LECS),1(&BR(&ASET),&BR(&SETBR))
         AIF   (&LECS NE &SETBR).E13
 USING *+4096-&SETBR*4,&BR(2),&BR(3),&BR(4)
 AGO .M14
.E13  ANOP
&LECS    SETA  &LECS+1
&ASET    SETA  &ASET+1
         LA    &BR(&LECS),1(&BR(&ASET),&BR(&SETBR))
         AIF   (&LECS NE &SETBR).E14
 USING *+4096-&SETBR*4,&BR(2),&BR(3),&BR(4),&BR(5)
 AGO .M14
.E14  ANOP
&LECS    SETA  &LECS+1
&ASET    SETA  &ASET+1
         LA    &BR(&LECS),1(&BR(&ASET),&BR(&SETBR))
         AIF   (&LECS NE &SETBR).E15
 USING *+4096-&SETBR*4,&BR(2),&BR(3),&BR(4),&BR(5),&BR(6)
 AGO .M14
.E15  ANOP
&LECS    SETA  &LECS+1
&ASET    SETA  &ASET+1
         LA    &BR(&LECS),1(&BR(&ASET),&BR(&SETBR))
         AIF   (&LECS NE &SETBR).E16
 USING *+4096-&SETBR*4,&BR(2),&BR(3),&BR(4),&BR(5),&BR(6),&BR(7)
 AGO .M14
.E16  ANOP
&LECS    SETA  &LECS+1
&ASET    SETA  &ASET+1
         LA    &BR(&LECS),1(&BR(&ASET),&BR(&SETBR))
         AIF   (&LECS NE &SETBR).E17
 USING *+4096-&SETBR*4,&BR(2),&BR(3),&BR(4),&BR(5),&BR(6),&BR(7),&BR(8)
 AGO .M14
.E17  ANOP
&LECS    SETA  &LECS+1
&ASET    SETA  &ASET+1
         LA    &BR(&LECS),1(&BR(&ASET),&BR(&SETBR))
         AIF   (&LECS NE &SETBR).E18
 USING *+4096-&SETBR*4,&BR(2),&BR(3),&BR(4),&BR(5),&BR(6),&BR(7),&BR(8)*
               ,&BR(9)
 AGO .M14
.E18  ANOP
&LECS    SETA  &LECS+1
&ASET    SETA  &ASET+1
         LA    &BR(&LECS),1(&BR(&ASET),&BR(&SETBR))
         AIF   (&LECS NE &SETBR).E19
 USING *+4096-&SETBR*4,&BR(2),&BR(3),&BR(4),&BR(5),&BR(6),&BR(7),&BR(8)*
               ,&BR(9),&BR(10)
 AGO .M14
.E19  ANOP
         AGO   .M14
.E4      MNOTE 4,'MEHR ALS 10 BASISREGISTER ANGEGEBEN'
         MNOTE *,'10 BASISREGISTER WERDEN GENERIERT'
&SETBR   SETA  10
         AGO   .E3
.E5      AIF   (&SETBR EQ 0).M14
         AIF   ('&V' EQ 'V').M25
         BALR  BASIS1,0
         USING *,BASIS1
.M26     ANOP
         MNOTE *,'BASIS1 BEREITGESTELLT, GELADEN'
.M24     ANOP
         AIF   (&SETBR EQ 1).M14
         AIF   (&SETBR EQ 2).M15
         AIF   ('&V' EQ 'V').M27
         USING *+4096,BASIS2,BASIS3
.M28     ANOP
         LA    BASIS3,4095
         LA    BASIS2,1(BASIS1,BASIS3)
         LA    BASIS3,1(BASIS2,BASIS3)
         MNOTE *,'BASIS2 UND BASIS3 BEREITGESTELLT, GELADEN'
.M14     ANOP
&GLBIT   SETB  1
*
*
*   ENDE DES VORSPANNES
*
*
         MEXIT
.M15     AIF   ('&V' EQ 'V').M29
         USING *+4096,BASIS2
.M30     ANOP
         LA    BASIS2,4095
         LA    BASIS2,1(BASIS1,BASIS2)
         MNOTE *,'BASIS2 BEREITGESTELLT, GELADEN'
         AGO   .M14
.M18     AIF   (&GLBR GE &SETBR).M12
         AIF   (&GLBR EQ 0).M19
         AIF   (&GLBR EQ 1).M9
         AIF   (&GLBR EQ 2).M11
         AGO   .M20
.M1      MNOTE 12,'UNBENANNTE CONTROL-SECTION'
         AGO   .M2
.M6      MNOTE *,'KEINE BASISREGISTER GENERIERT'
         AGO   .M12
.M8      MNOTE *,'BASIS1 GENERIERT'
BASIS1   EQU   3   ** BASISREGISTER 1 **
         AGO   .M9
.M10     MNOTE *,'BASIS2 GENERIERT'
BASIS2   EQU   4   ** BASISREGISTER 2 **
         AIF   (&SETBR GE 3).M11
         AGO   .M12
.M11     MNOTE *,'BASIS3 GENERIERT'
BASIS3   EQU   5   ** BASISREGISTER 3 **
         AIF   (&SETBR EQ 3).M12
.M20     MNOTE 4,'BR=  ZU HOCH'
         AGO   .M12
.M21     MNOTE 4,'EP=  CSECT-NAME'
         AGO   .M13
.M25     USING MACR&SYSNDX,BASIS1
         LR    BASIS1,R15
         AGO   .M26
.M27     USING MACR&SYSNDX+4096,BASIS2,BASIS3
         AGO   .M28
.M29     USING MACR&SYSNDX+4096,BASIS2
         AGO   .M30
         MEND
QX01441  EANF
         B     START                   SURROUND CSECT IDENTIFICATION
*
         DC   CL44'QX01441 V02L00 OCT 7TH, 1976 SCHMIDT IDUNA'
*
START    DS    0H
         LR    R12,R1                  SAVE PARM
         L     R2,0(R1)                FIRST LOCATOR ADDRESS
         L     R2,0(R2)                FIRST PARAMETER ADDRESS
         L     R4,0(R2)                OLD UCB ADDR LIST ADDR
         SPACE 2
         $UCBLOOK DEVTYPE=D
         LTR   R15,R15
         BNZ   END
         LR    R5,R1                   LOAD UCB
         LA    R15,0                   RC=0 UCB PRESENT
         ST    R5,0(R2)                UCB ADDR LIST ADDR TO CALLER
         L     R2,4(R12)               SECOND LOCATOR ADDRESS
         L     R2,0(R2)                SECOND PARAMETER ADDRESS
         MVC   0(256,R2),0(R5)         UCB TO CALLER
         B     RETURN                  RETURN TO CALLER
*
END      EQU   *
         LA    R15,4                   RC=4 END OF UCB TABLE
         XC    0(4,R2),0(R2)           RESET FOR NEXT STARTUP
         L     R2,4(R12)               SECOND LOCATOR ADDRESS
         L     R2,0(R2)                SECOND PARAMETER ADDRESS
         MVC   0(3,R2),ENDIND          INDICATE END OF TABLE
*
RETURN   EQU   *                       RETURN TO CALLER
         ERET  RC=(15)                 LOAD ADDRESS OF OWN SAVEAREA
         DS    0H
ENDCON   DC    X'FFFF'                 SIGNALS END OF UCB ADDR LIST TAB
ENDIND   DC    C'END'                  SIGNALS END OF UCB ADDR LIST TAB
         CVT   DSECT=YES
         END   QX01441
*/* AN FOLGENDEN TAGEN WURDE DAS PROGRAMM GETESTET */
*/* NEUERSTELLUNG   12. OKT 1976            */
