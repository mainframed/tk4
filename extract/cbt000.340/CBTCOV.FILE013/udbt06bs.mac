UCBEDIT  ANFASS R3
         L     R4,0(R1)
         OPEN  (OUT,OUTPUT)
*  UCB-ADRESSEN ERMITTELN
         LA    R1,VEKADDR
**** R1 ENTHAELT ADR.DES FELDES IN DAS DIE UCB-ADR.EINGETRAGEN WERDEN
         L     R15,UCBGET
         BALR  R14,R15
************ ALLE UCB-ADRESSEN IM VEKTOR, JEWEILS EIN HALBWORT
         LH    R5,0(R4)
         LTR   R5,R5
         BZ    NOPARM
         BCTR  R5,0
         EX    R5,CAPITALS         KONSOLEINGABE ZU GROSSBUCHSTABEN
         EX    R5,MOVEPARM         UMWANDELN UND UEBERTRAGEN
         LA    R6,DATA+1(R5)       EIN BLANK HINTER DAS PARMFELD
         MVI   0(R6),C' '          BRINGEN (SONST ABFRAGE AUF X'00')
         OI    PARMSW+1,X'F0'
         NI    ERR1+1,X'0F'        BEI EINGABE UEBER PARMFELD
         NI    ERR2+1,X'0F'        WERDEN WTO'S AUSGEGEBEN
         NI    ERR3+1,X'0F'        (FUER START VON KONSOLE)
         NI    ERR4+1,X'0F'
         NI    ERR5+1,X'0F'
         NI    ERR6+1,X'0F'
         NI    ERR7+1,X'0F'
         NI    ERR8+1,X'0F'
         NI    ERR9+1,X'0F'
         NI    ENDMSG+1,X'0F'
         B     NOOPEN
NOPARM   EQU   *
         OPEN  (IN,)
*
READ     GET   IN,DATA
NOOPEN   PUT   OUT,ZEILE
*
*           PROCESS PARMS
*
         CLC   =C'UNIT=',DATA
         BNE   ERR1
         LA    R4,DATA+5
         LR    R5,R4
LOOP1    CLI   0(R5),C','
         BE    L1
         CLI   0(R5),C' '
         BE    L0
         CLI   0(R5),C'-'
         BE    L1
         LA    R5,1(R5)
         B     LOOP1
L0       CLI   OPCODE,C' '
         BE    ERR9
L1       LR    R6,R5
         SR    R6,R4
         CH    R6,=H'3'
         BNE   ERR2
         MVC   UNIT(3),0(R4)
         CLI   0(R5),C'-'
         BNE   ONEUNIT
         LA    R4,1(R5)
         LR    R5,R4
LOOP2    CLI   0(R5),C','
         BE    L2
         CLI   0(R5),C' '
         BE    L2
         LA    R5,1(R5)
         B     LOOP2
L2       LR    R6,R5
         SR    R6,R4
         CH    R6,=H'3'
         BNE   ERR2
         MVC   FW+1(3),0(R4)
         TRX   (ENDUNIT,FW,2),TABNAME=TRTAB
         OI    MULTIPLE,X'80'      INDIKATOR: UNIT-RANGE ANGEGEBEN
ONEUNIT  CLI   0(R5),C' '
         BE    UCBADR
         CLC   =C'UCB+',1(R5)
         BNE   ERR1
         LA    R4,5(R5)
         LR    R5,R4
         LA    R6,3
LOOP3    CLI   0(R5),C'='
         BE    L3
         LA    R5,1(R5)
         BCT   R6,LOOP3
         B     ERR3
L3       LR    R6,R5
         SR    R6,R4
         CH    R6,=H'2'
         BNE   ERR5
*  OFFSET UMWANDELN, FALLS ZU GROSS --> ERR3
         TR    0(2,R4),TRTAB            C'Y' --> X'FY'
         PACK  0(2,R4),0(2,R4)
         LH    R1,0(R4)
         SRL   R1,4                     VORZEICHEN HINAUSSCHIEBEN
         STH   R1,OFFSET
         CH    R1,=H'48'
         BH    ERR3
*
         CLI   1(R5),C'X'
         BNE   ERR1
         LA    R4,2(R5)
         LR    R5,R4
         LA    R6,18
LOOP4    CLI   0(R5),C' '
         BE    L4
         LA    R5,1(R5)
         BCT   R6,LOOP4    <--- LAENGE BEGRENZT AUF 8 BYTES
         B     ERR6
L4       BCTR  R5,0
         LR    R6,R5
         SR    R6,R4
         ST    R6,LAENGE
         TM    LAENGE+3,X'01'
         BO    ERR4
         SRL   R6,1
         ST    R6,LAENGE
         TRX   (VALUE,(R4),(R6))
*   GUELTIGE OPERATIONSART PRUEFEN
         CLI   0(R5),C'I'     DIREKTWERT ANGEGEBEN?
         BE    MVCOPCDE       JA
         CLI   0(R5),C'O'     LOG. ODER-VERKNUEPFUNG?
         BE    MVCOPCDE       JA
         CLI   0(R5),C'N'     LOG. UND-VERKNUEPFUNG?
         BE    MVCOPCDE       JA
         CLI   0(R5),C'A'     LOG. UND-VERKNUEPFUNG?
         BE    MVCOPCDE       JA
         CLI   0(R5),C'X'     EXCL.-OR-VERKNUEPFUNG?
         BNE   ERR7           NEIN, PARAMETERFEHLER
MVCOPCDE MVC   OPCODE,0(R5)   OPCODE SPEICHERN
*
UCBADR   LA    R8,2     LAENGE EINES EINTRAGES IN VEKTOR
         LA    R6,VEKTWORK     ANFANGSADR. VEKTOR
         L     R9,VEKEND       ENDADR. VEKTOR
         SR    R7,R7           R7 LOESCHEN FUER ICM
LOOP     ICM   R7,3,0(R6)      R6 ADRESSIERT EINE ADR IN VEKTOR
         CLC   13(3,R7),UNIT   ADR R7+13 = UNIT
         BE    UCBFOUND
         BXLE  R6,R8,LOOP         BETEILIGT R6  R8+R9
         MVC   NFOUND+12(3),UNIT
         B     NOWTO
NFOUND   WTO   'UCB     NOT FOUND'
NOWTO    MVC   DATA,ASA
         MVC   DATA+20(17),NFOUND+8
         PUT   OUT,ZEILE
         B     NEXTUNIT
******* R7 ENTHAELT ADR. DES GESUCHTEN UCB
UCBFOUND EQU   *
*
         SR    R8,R8         R8 LOESCHEN FUER ICM
         ICM   R8,3,2(R6)    ADRESSE DES NAECHSTEN UCB IN R8
         S     R8,=F'8'      ECHTER BEGINN IST UCB-8
         LR    R11,R7        ADRESSE DES ZU AENDERNDEN UCB
         AH    R11,OFFSET    PLUS ANGEGEBENES OFFSET
         A     R11,LAENGE    PLUS LAENGE DES ZU AENDERNDEN FELDES
         CR    R11,R8        REICHT AENDERUNG IN DEN NAECHSTEN UCB?
         BH    ERR8          JA, FEHLER
*
         MVC   NEWVAL,VALUE  MOVE VALUE
         LR    R11,R7        LOAD UCB-ADDRESS
         S     R11,=F'8'     LOCKWORD IS UCB-8
         ST    R11,LOCKADDR
         XC    MYECB,MYECB
*
         MODESET KEY=ZERO,MODE=SUP
*
         LA    R8,OBTAIN     START ADDRESS OF AREA TO BE FIXED
         LA    R9,WORK       END ADDRESS   --- " ---
         PGFIX R,A=(R8),EA=(R9),ECB=MYECB
*
         LTR   R15,R15
         BZ    COMPLETE
         WAIT  ECB=MYECB
COMPLETE EQU   *
*
         L     R11,LOCKADDR
OBTAIN   SETLOCK OBTAIN,TYPE=IOSUCB,ADDR=(11),MODE=UNCOND,             *
               REGS=USE,RELATED=(RELEASE,'GIVE UP LOCK')
*
         B     *+4(R15)
         B     LOCKED        RC=0
         B     RC4           RC=4
RC8      B     NOWTO0        RC=8
RC8WTO   WTO   'LOCK WAS NOT OBTAINED, NOTHING CHANGED'
NOWTO0   MVC   DATA,ASA
         MVC   DATA+20(38),RC8WTO+8
         PUT   OUT,ZEILE
         B     PGFREE
RC4      EQU   *             LOCK WAS ALREADY HELD
*
*   NOTE: NOW WE RUN DISABLED AND MUST NOT ISSUE ANY SVC'S ×××
*         PAGE-FIX IS DONE TO PREVENT PAGE-FAULTS (NOT ALLOWED
*         WHILE RUNNING UNDER IOSUCB-LOCK)
*
LOCKED   EQU   *
         AH    R7,OFFSET      ANGEGEBENES OFFSET ADDIEREN
         MVC   OLDVAL,0(R7)
         CLI   OPCODE,C'I'    DIREKTWERT ANGEGEBEN?
         BE    VALOK          JA
         CLI   OPCODE,C'O'    LOG. ODER-VERKNUEPFUNG?
         BNE   EXCLOR         NEIN
         OC    NEWVAL,OLDVAL
         B     VALOK
EXCLOR   CLI   OPCODE,C'X'    EXCL.-OR-VERKNUEPFUNG?
         BNE   AND            NEIN
         XC    NEWVAL,OLDVAL
         B     VALOK
AND      NC    NEWVAL,OLDVAL  LOG. UND-VERKNUEPFUNG
VALOK    EQU   *
         L     R6,LAENGE
         BCTR  R6,0           -1 FUER EXECUTE
         EX    R6,MVCVALUE
*
         L     R11,LOCKADDR
RELEASE  SETLOCK RELEASE,TYPE=IOSUCB,ADDR=(11),REGS=USE,               *
               RELATED=(OBTAIN,'LOCK WAS SET THERE')
*
PGFREE   PGFREE R,A=(R8),EA=(R9)
*
         MODESET KEY=NZERO,MODE=PROB
*
*  OLD- UND NEW-DATA-ZEILE AUFBEREITEN
*
         MVI   ASA,C' '
         MVC   DATA,ASA
         MVC   DATA+20(4),=C'UNIT='
         MVC   DATA+25(3),UNIT
         MVC   DATA+30(13),=C'OLD DATA WAS:'
         L     R7,LAENGE
         TRC   (DATA+45,OLDVAL,(R7))
         PUT   OUT,ZEILE
         MVC   DATA+20(10),DATA+19
         MVC   DATA+30(3),=C'NEW'
         L     R7,LAENGE
         TRC   (DATA+45,NEWVAL,(R7))
         PUT   OUT,ZEILE
         MVI   ASA,C'0'
*
NEXTUNIT EQU   *
         TM    MULTIPLE,X'80'
         BZ    PARMSW
*  UNITADR UM 1 ERHOEHEN UND MIT ENDUNIT VERGLEICHEN
         TRX   (HW,UNITFW,2)
         LH    R4,HW
         LA    R4,1(R4)
         STH   R4,HW
         TRC   (UNITFW,HW,2)
         CH    R4,ENDUNIT
         BNH   UCBADR
RESET    NI    MULTIPLE,X'7F'       RESET INDIKATOR
PARMSW   NOP   ENDE
         B     READ
EOF      CLOSE IN
ENDE     CLOSE OUT
ENDMSG   B     RETURN
         WTO   '*** UCBEDIT TERMINATES ***'
         B     RETURN
*
MOVEPARM MVC   DATA(0),2(R4)
MVCVALUE MVC   0(0,R7),NEWVAL
CAPITALS OC    2(0,R4),DATA
ERR1     B     NOWTO1
WTO1     WTO   'FALSCHES KEYWORT ANGEGEBEN                           '
NOWTO1   MVC   DATA,ASA
         MVC   DATA+20(53),WTO1+8
         PUT   OUT,ZEILE
         B     RESET
ERR2     B     NOWTO2
WTO2     WTO   'UNIT(U) BITTE 3-STELLIG ANGEBEN                      '
NOWTO2   MVC   DATA,ASA
         MVC   DATA+20(53),WTO2+8
         PUT   OUT,ZEILE
         B     RESET
ERR3     B     NOWTO3
WTO3     WTO   'FALSCHES DISPLACEMENT(D) IM UCB ANGEGEBEN            '
NOWTO3   MVC   DATA,ASA
         MVC   DATA+20(53),WTO3+8
         PUT   OUT,ZEILE
         B     RESET
ERR4     B     NOWTO4
WTO4     WTO   'DER WERT(V) MUSS EINE GERADE ZAHL VON HEXZIFFERN SEIN'
NOWTO4   MVC   DATA,ASA
         MVC   DATA+20(53),WTO4+8
         PUT   OUT,ZEILE
         B     RESET
ERR5     B     NOWTO5
WTO5     WTO   'DISPLACEMENT(D) BITTE 2-STELLIG ANGEBEN              '
NOWTO5   MVC   DATA,ASA
         MVC   DATA+20(53),WTO5+8
         PUT   OUT,ZEILE
         B     RESET
ERR6     B     NOWTO6
WTO6     WTO   'DER WERT(V) IST BEGRENZT AUF 16 HEXZIFFERN PLUS TYP  '
NOWTO6   MVC   DATA,ASA
         MVC   DATA+20(53),WTO6+8
         PUT   OUT,ZEILE
         B     RESET
ERR7     B     NOWTO7
WTO7     WTO   'GUELTIGE OPCODES SIND NUR O(OR), A(AND), I(IMMEDIATE)'
NOWTO7   MVC   DATA,ASA
         MVC   DATA+20(53),WTO7+8
         PUT   OUT,ZEILE
         B     RESET
ERR8     B     NOWTO8
WTO8     WTO   'DAS ZU AENDERNDE FELD REICHT IN DEN NAECHSTEN UCB    '
NOWTO8   MVC   DATA,ASA
         MVC   DATA+20(53),WTO8+8
         PUT   OUT,ZEILE
         B     RESET
ERR9     B     NOWTO9
WTO9     WTO   'PARAMETERANGABEN FEHLEN (D,V)                        '
NOWTO9   MVC   DATA,ASA
         MVC   DATA+20(53),WTO9+8
         PUT   OUT,ZEILE
         B     RESET
*
*        DEFINITIONS
*
IN       DCB   DSORG=PS,MACRF=GM,RECFM=FB,DDNAME=SYSIN,LRECL=80,       *
               EODAD=EOF
OUT      DCB   DSORG=PS,MACRF=PM,RECFM=FBA,DDNAME=SYSPRINT,LRECL=80
ZEILE    DS    0CL80
ASA      DC    C' '
DATA     DC    CL80' '
LAENGE   DS    F
VEKADDR  DC    X'80',AL3(VEKTWORK)
VEKEND   DC    X'00',AL3(VEKEWORK)
UCBGET   DC    V(GETUCBS)
UNITFW   DS    0F
         DS    C' '
UNIT     DC    CL3'   '   GESUCHTER UCB
FW       DC    C'    '
ENDUNIT  DS    H
OPCODE   DC    C' '
OFFSET   DS    H
HW       DS    H
MULTIPLE DC    X'00'
OLDVAL   DS    XL16
NEWVAL   DS    XL16
VALUE    DS    XL16
*
MYECB    DS    F
*
LOCKADDR DS    F                IS TO CONTAIN ADDRESS OF LOCKWORD
*                               WHERE LOCK MANAGER STORES PROCESSOR-ID
         LTORG
WORK     DS    0F
VEKTWORK DS    2048H
VEKEWORK EQU   *
         DC    CL8'&SYSTIME',CL8'&SYSDATE',C' GRAMM'
*           MAPPING MACRO, BENOETIGT FUER SETLOCK
         IHAPSA DSECT=YES
         END
