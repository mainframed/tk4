VABD     TITLE 'VABDUMP SVS'
YVABDUMP CSECT
*
* THIS ROUTINE IS CALLED BY CSECT IEAVAD03 OF MODULE IGC0005A VIA LINK
* AUTHOR: W. AMON, MD-ADV
*                  RECHENZENTRUM DER STADT WIEN
*                  A-1010 WIEN DR. KARL LUEGER-RING 10
*
*
** REGISTER CONTENTS UPON ENTRY
*
* R1 CONTAINS ADDRESS OF IEDVAD11 (PUT-ROUTINE)
* R2 CONTAINS ADDRESS OF ABDUMP-WORKAREA (POINTED TO BY SECOND WORD OF
*              ESA OF SNAP-SVRB)
* R5 CONTAINS ADDRESS OF TCB TO BE DUMPED
*
*
**  REGISTER USAGE
*
*   R4     ABDUMP-WORKAREA
*   R3,R5  BAL-REGISTERS
*   R7     IOB
*   R9     DEB
*   R11    DCB
*   R12    BASE
*
*
*
**  EXTERNAL SUBROUTINES USED
*
*   IEAVAD11 - ABDUMP-PUT-ROUTINE
*   IEAPTRV  - TRANSLATE REAL ADDRESS TO VIRTUAL
         SPACE 2
*   M O D I F I C A T I O N S
*
*      761223 AMON
*         ADDRESS VALIDITY CHECK SUBROUTINE UPLRA
*         &SYSDATE AND &SYSTIME IN PAGE-HEADING
*
*      761227 AMON
*         CORRECT IOB-EDITING IF CHAINED SCHEDULING AND
*            DCB + X'1C' DOESN'T CONTAIN VALID IOB-POINTER
*
*      770113 AMON
*         CHANGE SYSTEM MASK IN UPLRA IN CASE OF PAGE-INVALID-CONDITION
*
*      770210 AMON
*         CALL IEAPTRV INSTEAD OF SYSTEM-MASK-MODIFICATION (S0C5)
*
*      770824 AMON
*         CHANGE DISPLACEMENT OF ABDLINEA TO X'2C' (PTF)
*
         SPACE 2
         STM   R14,R12,12(R13)
         BALR  R12,0         LOAD BASE REGISTER
         USING *,R12
         LR    R3,R1         SAVE ADDRESS OF IEAVAD11
         SPACE
         L     R0,R0SVC10    SP#, NUMBER OF BYTES
         GETMAIN R,LV=(0)    GET 128 BYTES FROM SUBPOOL 253 (LSQA)
         ST    R13,4(R1)     HSA
         ST    R1,8(R13)     LSA
         LR    R13,R1        ADDRSS OF SAVE- & WORKAREA
         SPACE 2
         USING DSECT1,R13    ESTABLISH ADDRESSABILITY FOR MY OWN WORKA
         ST    R3,AVAD11     SAVE ADDRESS OF IEAVAD11 (PUT-ROUTINE)
         ST    R2,AABDWORK   SAVE ADDRESS OF ABDUMP-WORKA
         LR    R4,R2         ADDRESS OF ABDUMP-WORKAREA
         USING ABDAREA,R4    ESTABLISH ADDRESSABILITY FOR ABDUMP-WORKA
         SPACE 2
         SR    R0,R0
         STH   R0,LINECNT    CLEAR LINE-COUNT
         MVC   ABDLINEA(L'TITLE1),TITLE1 'DATA MANAGEMENT CONTROL ...'
         BAL   R5,PUT        WRITE LINE
         SPACE 2
         L     R1,ABDTCB     ADDRESS OF TCB TO BE DUMPED
         L     DEBREG,8(R1)  A(DEB-QUEUE)
         SPACE
CHKDEBAD EQU   *
         LA    DEBREG,0(DEBREG) CLEAR HIGH ORDER BYTE
         LTR   DEBREG,DEBREG
         BZ    RETURN        NO OPEN DATA SETS OR END OF DEB-CHAIN
         SPACE
         LR    R0,DEBREG     LOAD DEB-ADDRESS INTO PARAMETER-REGISTER
         BAL   R5,UPLRA      CALL ADDRESS VALIDITY CHECK SUBROUTINE
         B     *+8           ADDRESS VALID
         B     FRMATERR      ADDRESS INVALID
         SPACE
         TM    27(DEBREG),X'03' DCB ON FULLWORD BOUNDARY?
         BNZ   FRMATERR      NO
         SPACE
         L     DCBREG,24(DEBREG) A(DCB)
         LA    R0,0(DCBREG)  LOAD DCB-ADDRESS INTO PARAMETER-REGISTER
         BAL   R5,UPLRA      CALL ADDRESS VALIDITY CHECK SUBROUTINE
         B     *+8           ADDRESS VALID
         B     FRMATERR      ADDRESS INVALID
         SPACE
         TM    47(DCBREG),X'03' INSPECT DEB-ADDRESS IN DCB
         BNZ   DCBOVL        DEB-POINTER INVALID (NOT DIVISIBLE BY 4)
         SPACE
* CHECK IF DCB AND DEB POINT TO EACH OTHER
         L     R1,44(DCBREG) A(DEB)
         LA    R1,0(R1)      CLEAR HIGH ORDER BYTE
         CR    DEBREG,R1
         BNE   DCBOVL        NO - THEY DON'T - DCB MUST BE DESTROYED
         SPACE
         TM    41(DCBREG),X'03' CHECK TIOT-OFFSET
         BNZ   DCBOVL        WRONG - NOT DIVISIBLE BY 4
         SR    R15,R15       CLEAR R15 FOR FOLLOWING IC
         ICM   R15,B'0011',40(DCBREG) INSERT TIOT-OFFSET
         L     R1,ABDTCB     ADDRESS OF TCB TO BE DUMPED
         L     R6,12(R1)     A(TIOT) FROM TCB
         LA    R15,0(R15,R6) NOW R15 CONTAINS ADDRESS OF TIOT-DD-ENTRY
         LR    R0,R15        LOAD ADDRESS OF TIOT-ENTRY INTO PARM-REG
         BAL   R5,UPLRA      CALL ADDRESS VALIDITY CHECK SUBROUTINE
         B     *+8           ADDRESS VALID
         B     INVTIOTE      ADDRESS INVALID
         ST    R15,ATIOTENT  SAVE ADDRESS OF DD-ENTRY
         SPACE
* COMPUTE NUMBER OF UCBS
         SR    R0,R0         CLEAR R0 FOR FOLLOWING IC
         IC    R0,0(R15)     INSERT LENGTH OF DD-ENTRY
         LA    R14,16
         SR    R0,R14
         SRL   R0,2          NUMBER OF UCBS = (ENTRY-LENGTH - 16) / 4
         STC   R0,#UCBS      SAVE NUMBER OF UCBS
         SPACE
* CHECK DDNAME IN TIOT-DD-ENTRY
         CLC   4(8,R15),=CL8'SYSUDUMP'
         BE    NEXTDEB       SUPPRESS FORMATTING
         CLC   4(8,R15),=CL8'SYSABEND'
         BE    NEXTDEB       SUPPRESS FORMATTING
         SPACE
*
* EDIT AND PRINT DATA EXTENT BLOCK
*
         MVI   ABDCC,X'60'   ASA-CC
         MVC   ABDLINE(8),4(R15) MOVE DDNAME FROM TIOT TO LINE
         OC    ABDLINE(8),=CL8' ' FOLD DDNAME TO UPPER CASE
         CLC   ABDLINE(8),=CL8' ' DDNAME BLANK ?
         BNE   DDNNOTBL           NO
         MVC   ABDLINE(L'MSGUDD),MSGUDD 'UNKNOWN DD'
DDNNOTBL EQU   *
         MVC   ABDLINE+13(3),=CL3'DEB'
         LR    R1,DEBREG     LOAD DEB-ADDRESS INTO R1
         LA    R0,4
         SR    R1,R0         NOW R1 POINTS TO DEB-4
         IC    R0,0(R1)      INSERT DEB-LENGTH IN DOUBLEWORDS
         SRL   R0,2          DIVIDE BY 4 TO GET NUMBER OF LINES
         LTR   R6,R0
         BNZ   R6NOT0
         LA    R6,1          DEFAULT NUMBER OF LINES
R6NOT0   EQU   *
         LR    R2,DEBREG     DEB-ADDRESS INTO R2 (DATA ADDRESS)
         BAL   R3,XLATE      DUMP DEB
         BAL   R5,PUT        SPACE
         SPACE 2
*
* EDIT AND PRINT DATA CONTROL BLOCK
*
         MVC   ABDLINE+13(3),=CL3'DCB'
         L     DCBREG,24(DEBREG) A(DCB)
         LA    R2,0(DCBREG)  DATA ADDRESS FOR XLATE
         TM    26(DCBREG),X'80' DSORG = IS ?
         BZ    NOTIS            NO
         LA    R6,8          8 LINES FOR IS-DCB
         B     DCBEDIT
NOTIS    EQU   *
         TM    26(DCBREG),X'20' DSORG = DA?
         BZ    NOTDA            NO
         LA    R6,4          4 LINES FOR DA-DCB
         B     DCBEDIT
NOTDA    EQU   *
         TM    26(DCBREG),X'08' DSORG = CQ (QTAM DA MSG QUEUE) ?
         BZ    NOTX08           NO
         LA    R6,2          2 LINES FOR QTAM DA MSG QUEUE
         B     DCBEDIT
NOTX08   EQU   *
         LA    R6,3          3 LINES
DCBEDIT  EQU   *
         BAL   R3,XLATE      DUMP DCB
         SPACE 2
         TM    27(DCBREG),X'60' DSORG = TX OR TQ ? (TCAM)
         BNZ   EDITIOBS         YES
         SPACE
* PRINT BLOCKSIZE & LRECL
         MVC   ABDLINE+26(14),=CL14'BLKSIZE/LRECL:'
         SR    R0,R0
         ICM   R0,B'0011',62(DCBREG) BLKSIZE
         CVD   R0,DWCONV
         UNPK  ABDLINE+41(5),DWCONV
         OI    ABDLINE+45,X'F0' MASK SIGN BITS
         MVI   ABDLINE+46,C'/'
         SR    R0,R0
         ICM   R0,B'0011',82(DCBREG) LRECL
         CVD   R0,DWCONV
         UNPK  ABDLINE+47(5),DWCONV
         OI    ABDLINE+51,X'F0' MASK SIGN BITS
         SPACE
* PRINT QISAM EXCEPTION CODE
         TM    26(DCBREG),X'80' DSORG = IS ?
         BZ    PUTLRECL         NO
         OC    80(2,DCBREG),80(DCBREG) TEST ISAM EXCEPTION CODES
         BZ    PUTLRECL                NO BITS ON
         MVC   WORKL4,80(DCBREG)
         UNPK  WORKL9,WORKL4(5)
         TR    WORKL9(4),TRTAB1-240
         MVC   ABDLINE+65(20),=CL20'ISAM EXCEPTION CODE:'
         MVC   ABDLINE+86(4),WORKL9
         SPACE
PUTLRECL EQU   *
         BAL   R5,PUT
         EJECT
*
* EDIT AND PRINT IOB(S) AND ICB(S)
*
EDITIOBS EQU   *
         LA    DCBREG,0(DCBREG) CLEAR HIGH ORDER BYTE
         TM    26(DCBREG),X'42' DSORG PO OR PS?
         BZ    EDITUCBS         NO
         TM    42(DCBREG),X'80' MACRF = EXCP ?
         BO    EDITUCBS         YES
         TM    52(DCBREG),X'20' OPTCD = C (CHAINED SCHEDULING) ?
         BZ    FIRSTIOB         NO - NORMAL SCHEDULING
         SPACE
* CHAINED SCHEDULING
         TM    31(DCBREG),X'03' CHECK IOB-POINTER
         BNZ   FIRSTIOB         INVALID - NOT DIVISIBLE BY 4
         L     IOBREG,28(DCBREG) A(IOB)
         LA    R2,0(IOBREG)  DATA ADDRESS FOR XLATE
         LA    IOBREG,8(IOBREG) IOB-PREFIX + 8
         SR    R8,R8         END OF IOB-CHAIN INDICATOR FOR CH.SCHED.
         B     CHKIOBAD      GO AND TEST IOB-ADDRESS FOR VALIDITY
         SPACE
FIRSTIOB DS    0H
FIRSTICB DS    0H
         TM    71(DCBREG),X'03' IOB ON FULLWORD-BOUNDARY ?
         BNZ   INVIOBAD         NO
         L     IOBREG,68(DCBREG) A(IOB) OR A(ICB)
         LA    IOBREG,0(IOBREG) CLEAR HIGH ORDER BYTE
         LTR   IOBREG,IOBREG
         BZ    INVIOBAD      IOB-POINTER ZERO
         LR    R8,IOBREG     A(FIRST IOB) = END OF IOB-CHAIN
NEXTIOB  EQU   *             MVT: X'1AC'
         LR    R2,IOBREG     A(IOB) - DATA ADDRESS FOR XLATE
         SPACE
         TM    52(DCBREG),X'20' OPTCD = C (CHAINED SCHEDULING) ?
         BZ    CHKIOBAD         NO
         SPACE
* CHAINED SCHEDULING
         TM    31(DCBREG),X'03' VALID IOB-ADDRESS AT DCB + X'1C'?
         BNZ   CHKIOBAD         NO - THERE ARE NO ICB'S
         BAL   R5,PUT        SPACE
         MVC   ABDLINE+13(3),=CL3'ICB'
         B     ICBEDIT
         SPACE
CHKIOBAD EQU   *             MVT: X'1C4'
         LA    R0,0(IOBREG)  LOAD IOB-ADDRESS INTO PARAMETER-REGISTER
         BAL   R5,UPLRA      CALL ADDRESS VALIDITY CHECK SUBROUTINE
         B     *+8           ADDRESS VALID
         B     INVIOBAD      ADDRESS INVALID
         L     R14,28(IOBREG) A(DCB)
         LA    R14,0(R14)    CLEAR HIGH ORDER BYTE
         CR    DCBREG,R14
         BNE   INVIOBAD      IOB DOESN'T POINT TO DCB
         BAL   R5,PUT        SPACE
         MVC   ABDLINE+13(3),=CL3'IOB'
         SPACE
IOBEDIT  EQU   *             MVT: X'2E4'
ICBEDIT  EQU   *
         LA    R6,3          3 LINES
         BAL   R3,XLATE      DUMP IOB OR ICB
         SPACE
         TM    3(IOBREG),X'03' ADDRESS OF NEXT IOB VALID ?
         BNZ   INVIOBAD        NO - MUST BE MULTIPLE OF 4
         L     IOBREG,0(IOBREG) A(NEXT IOB)
         LA    IOBREG,0(IOBREG) CLEAR HIGH-ORDER BYTE
         LA    R0,0(IOBREG)  LOAD IOB-ADDRESS INTO PARAMETER-REGISTER
         BAL   R5,UPLRA      CALL ADDRESS VALIDITY CHECK SUBROUTINE
         B     *+8           ADDRESS VALID
         B     INVIOBAD      ADDRESS INVALID
         SPACE
         CR    IOBREG,R8     END OF IOB-CHAIN REACHED ?
         BE    EDITUCBS      YES - NEXT IOB = FIRST IOB
         LTR   R8,R8         CHAINED SCHEDULING ?
         BNZ   NEXTIOB       NO
         B     FIRSTICB      YES - NOW DUMP ICB'S
         SPACE 2
*
* EDIT AND PRINT UNIT CONTROL BLOCK(S)
*
EDITUCBS EQU   *
         SR    R8,R8
         IC    R8,#UCBS      INSERT NUMBER OF UCBS = LOOP COUNT
         LTR   R8,R8
         BZ    NEXTDEB       NO UCBS - SHOULD NOT OCCUR
         L     R10,ATIOTENT  ADDRESS OF TIOT-ENTRY
         LA    R10,16(R10)   NOW R10 POINTS TO FIRST UCB-ENTRY
NEXTUCB  EQU   *
         BAL   R5,PUT        SPACE
         L     R2,0(R10)     A(UCB) = DATA ADDRESS FOR XLATE
         LA    R2,0(R2)      CLEAR HIGH-ORDER BYTE
         LA    R0,0(R2)      LOAD UCB-ADDRESS INTO PARAMETER-RESGISTER
         BAL   R5,UPLRA      CALL ADDRESS VALIDITY CHECK SUBROUTINE
         B     *+8           ADDRESS VALID
         B     INVUCBAD      ADDRESS INVALID
         SPACE
         CLI   2(R2),X'FF'   TEST UCB-INDICATOR
         BNE   INVUCBAD      NO UCB
         MVC   ABDLINE+13(3),=CL3'UCB'
         LA    R6,1          1 LINE
         CLI   18(R2),X'08'  UR-DEVICE ?
         BE    UCBEDIT       YES - ONE LINE IS ENOUGH
         CLI   18(R2),X'40'  COMMUNICATIONS DEVICE ?
         BE    UCBEDIT       YES - ONE LINE IS ENOUGH
         LA    R6,1(R6)      2 LINES
UCBEDIT  EQU   *
         BAL   R3,XLATE      DUMP UCB
         LA    R10,4(R10)    NEXT UCB-ADDRESS FROM DD-ENTRY
         BCT   R8,NEXTUCB
         SPACE 2
NEXTDEB  EQU   *             MVT: X'258'
         TM    7(DEBREG),X'03' ADDRESS OF NEXT DEB VALID ?
         BNZ   FRMATERR       NO - NOT DIVISIBLE BY 4
         L     DEBREG,4(DEBREG) A(NEXT DEB)
         B     CHKDEBAD
         SPACE 2
RETURN   EQU   *
         LR    R1,R13        AREA ADDRESS
         L     R13,4(R1)     HSA
         L     R0,R0SVC10    SP#, NUMBER OF BYTES
         FREEMAIN R,LV=(0),A=(1)
         SPACE
         LM    R14,R12,12(R13)
         BR    R14           RETURN TO IEAVAD03
         EJECT
* DEB DESTROYED OR NOT ADDRESSABLE
FRMATERR EQU   *
         MVC   ABDLINEA(L'MSGFE),MSGFE 'FORMATTING ERROR'
         BAL   R5,PUT        WRITE LINE
         B     RETURN
         SPACE 3
* TIOT-DD-ENTRY NOT ADDRESSABLE
INVTIOTE DS    0H
         MVC   ABDLINEA(L'MSGTIOT),MSGTIOT 'TIOT-ENTRY NOT ADDRESSABLE'
         BAL   R5,PUT        WRITE LINE
         B     RETURN        EXIT
         SPACE 3
* DCB DESTROYED
DCBOVL   EQU   *
         MVC   ABDLINE+26(L'MSGDCBO),MSGDCBO 'DCB WAS OVERLAID'
         MVC   ABDLINE(L'MSGUDD),MSGUDD 'UNKNOWN DD'
         MVI   ABDCC,X'F0'   ASA-CC
         BAL   R5,PUT        WRITE LINE
         B     NEXTDEB
         SPACE 3
INVUCBAD EQU   *
         MVC   ABDLINE+28(L'MSGUCB),MSGUCB 'INVALID UCB-ADDRESS'
         MVI   ABDCC,X'F0'   ASA-CC
         BAL   R5,PUT        WRITE LINE
         B     NEXTDEB
         SPACE 3
INVIOBAD EQU   *
         MVI   ABDCC,X'F0'   ASA-CC
         MVC   ABDLINE+28(L'MSGIOB),MSGIOB 'INVALID IOB-ADDRESS'
         BAL   R5,PUT        WRITE LINE
         B     EDITUCBS
         SPACE 3
* OUTPUT LIMIT REACHED (2001 LINES) - MAYBE LOOP
OUTLIM   EQU   *
         MVC   ABDLINEA(L'MSGLIM),MSGLIM 'OUTPUT-LIMIT REACHED ...'
         BAL   R5,PUT1
         B     RETURN
         EJECT
*
* SUBROUTINE TO TRANSLATE AND PRINT A CONTROL BLOCK
*
XLATE    EQU   *
*
* R1...WORK REGISTER
* R2...DATA ADDRESS
* R3...RETURN-ADDRESS
* R6...NUMBER OF LINES (USED FOR BCT)
* R14..WORK REGISTER
*
         LTR   R6,R6         NR. OF LINES PRESENT ?
         BCR   8,R3          NO - RETURN
         ST    R2,WORKL4
         UNPK  WORKL9,WORKL4(5)
         TR    WORKL9(8),TRTAB1-240
         MVC   ABDLINE+18(6),WORKL9+2  DATA ADDRESS
LAREG14  EQU   *
         LA    R14,DISPLTAB
TESTXFF  EQU   *
         CLI   0(R14),X'FF'  END OF LINE?
         BNE   NOTXFF        NO
         BAL   R5,PUT        WRITE LINE
         B     BCTREG6       GO & TEST FOR LAST LINE
         SPACE
NOTXFF   EQU   *
         LA    R0,0(R2)      LOAD DATA ADDRESS INTO PARAMETER REGISTER
         BAL   R5,UPLRA      CALL ADDRESS VALIDITY CHECK SUBROUTINE
         B     *+8           ADDRESS VALID
         B     XLATEINV      ADDRESS INVALID
         SR    R1,R1         CLEAR R1 FOR FOLLOWING IC
         IC    R1,0(R14)     INSERT DISPLACEMENT
         LA    R1,ABDLINE(R1)
         MVC   WORKL4,0(R2)  4 BYTES OF CONTROL-BLOCK-INFORMATION
         UNPK  WORKL9,WORKL4(5)
         TR    WORKL9(8),TRTAB1-240
         MVC   0(8,R1),WORKL9 MOVE DATA WORD TO LINE
         LA    R14,1(R14)    NEXT ENTRY IN DISPLACEMENT-TABLE
         LA    R2,4(R2)      NEXT DATA WORD
         B     TESTXFF
         SPACE
BCTREG6  EQU   *
         BCT   R6,LAREG14
         BR    R3            RETURN TO CALLER
         SPACE
* CONTROL BLOCK PARTIALLY NOT ADDRESSABLE
XLATEINV DS    0H
         LA    R0,DISPLTAB   GET ADDRESS OF DISPLACEMENT-TABLE
         CR    R0,R14        BEGIN OF NEW LINE?
         BCR   8,R3          YES - RETURN
         BAL   R5,PUT        WRITE LINE
         BR    R3            RETURN TO CALLER
         EJECT
*
* SUBROUTINE TO WRITE A DUMP-LINE VIA CALL IEAVAD11
*
PUT      EQU   *
         LH    R14,LINECNT
         LA    R15,2001      UPPER LIMIT
         CR    R14,R15
         BNL   OUTLIM        OUTPUT-LIMIT REACHED - TERMINATE
         LA    R14,1(R14)
         STH   R14,LINECNT   LINE-COUNT + 1
PUT1     EQU   *
         L     R1,AABDWORK   LOAD PARAM.REGISTER (ADDR OF ABDUMP-WORKA)
         L     R15,AVAD11
         BALR  R14,R15       CALL IEAVAD11
         BR    R5            RETURN TO CALLER
         SPACE 3
*
* ADDRESS-VALIDITY-CHECKING SUBROUTINE
*
UPLRA    DS    0H
*
* R0 ... ADDRESS TO BE CHECKED
* R1 ... WORK-REGISTER
* R5 ... RETURN-ADDRESS
*
*   ATTENTION - THIS ROUTINE CALLS MODULE IEAPTRV TO TRANSLATE
*               THE REAL ADDRESS OF PTE TO VIRTUAL IF CC 2 FROM LRA
*
*      ADDRESS VALID ..... RETURN TO R5 + 0
*      ADDRESS INVALID ... RETURN TO R5 + 4
*
         STM   R14,R1,SAVR   SAVE REGISTERS R14,R15,R0,R1
         LR    R1,R0         LOAD ADDR TO BE CHECKED INTO R1
         LRA   R1,0(R1)      PERFORM EXPLICIT ADDR TRANSLATION
         BC    8,LRAOK       CC = 0 - TRANSLATION AVAILABLE
         BC    5,LRAINV      ST-ENTRY INVALID OR LENGTH VIOLATION
         SPACE
* CC = 2 - PT-ENTRY INVALID (R1 CONTAINS REAL ADDRESS OF PT-ENTRY)
         L     R15,76        GET CVT-POINTER INTO R15
         L     R15,288(R15)  GET ADDRESS OF IEAPTRV (CVTPTRV)
         BALR  R14,R15       TRANSLATE PTE-ADDRESS TO VIRTUAL
         LTR   R15,R15       TRANSLATION OKAY?
         BNZ   LRAINV        NO
         TM    1(R1),X'01'   TEST BIT 15 OF PTE (GETMAIN ISSUED?)
         BO    LRAOK         YES - PAGE IS ASSIGNED, BUT INVALID
         SPACE
LRAINV   DS    0H
         LM    R14,R1,SAVR   RESTORE REGISTERS R14,R15,R0,R1
         B     4(R5)         ADDRESS INVALID
         SPACE
LRAOK    DS    0H
         LM    R14,R1,SAVR   RESTORE REGISTERS R14,R15,R0,R1
         B     0(R5)         ADDRESS VALID
         EJECT
         DS    0F
R0SVC10  DC    X'FD000080'   SUBPOOL = 253 (LSQA)
TITLE1   DC    C'-DATA MANAGEMENT CONTROL BLOCKS     &SYSDATE &SYSTIME'
MSGFE    DC    C'-***** F O R M A T T I N G   E R R O R *****'
MSGTIOT  DC    C'-TIOT-ENTRY NOT ADDRESSABLE'
MSGDCBO  DC    C'DCB WAS OVERLAID'
MSGIOB   DC    C'INVALID IOB-ADDRESS'
MSGUCB   DC    C'INVALID UCB-ADDRESS'
MSGUDD   DC    C'UNKNOWN DD'
MSGLIM   DC    C'-OUTPUT LIMIT REACHED - CALL SYSTEM PROGRAMMER'
TRTAB1   DC    CL16'0123456789ABCDEF'
DISPLTAB DC    XL9'1A232C35414A535CFF'
         SPACE 3
         LTORG
         SPACE 2
IOBREG   EQU   7
DEBREG   EQU   9
DCBREG   EQU   11
         REGISTER
         EJECT
* WORKING STORAGE USED BY VABDUMP
DSECT1   DSECT
SAVE     DS    CL72
WORK     DS    0CL56
DWCONV   DS    D
AABDWORK DS    F             ADDRESS OF ABDUMP WORKAREA
AVAD11   DS    F             A(IEAVAD11)
ATIOTENT DS    F
SAVR     DS    4F            REGISTER-SAVEAREA FOR UPLRA
LINECNT  DS    H
WORKL4   DS    CL4
FILLBYTE DS    CL1
WORKL9   DS    CL9
#UCBS    DS    XL1
         SPACE 3
* ABDUMP-WORKAREA
ABDAREA  DSECT
ABDTCB   DS    F             ADDRESS OF TCB TO BE DUMPED
         DS    CL40          FILLER          **** 770824 AMON
ABDLINEA DS    0CL121
ABDCC    DS    CL1
ABDLINE  DS    CL120
         SPACE 2
         END   YVABDUMP
