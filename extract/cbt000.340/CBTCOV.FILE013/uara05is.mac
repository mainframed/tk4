UR235900 TITLE 'OPTIMALE BLOCKUNG - HELP-PROGRAMM'
         MACRO
&NAME    QINIT &BASEREG=13,&CSECT=CSECT,&EQU=(,R),&SAVE=(,SAVEAREA),   *
               &RETURN=(,RETURN)
.*
.*
.*       MACRO  QINIT                   INITIATE AN ASSEMBLER-PROGRAM
.*---------------------------------------------------------------------
.*
.*       THE PURPOSE OF THIS MACRO IS TO GENERATE THE NECESSARY
.*       INSTRUCTIONS FOR A CSECT, REGISTER EQUATES, SAVE-MACRO,
.*       DEFINING AND ESTABLISHING A BASE REGISTER, DEFINING A
.*       SAVEAREA AND CHAINING IT TO THE NEXT HIGHER ONE AND FINALLY
.*       TO GENERATE THE RETURN MACRO INCLUDING RESTORING OF SAVE-
.*       AREA ADDRESSES
.*
.*       ONLY KEYWORD OPERANDS ARE USED BY QINIT
.*
.*       THE SUBLIST-OPERANDS CAN BE CODED AS FOLLOWING:
.*          1. IF BOTH SUBLIST-OPERANDS ARE NEEDED, WRITE THE OPERANDS
.*             ENCLOSED IN PARANTHESES, SEPARATED BY A COMMA
.*          2. IF ONLY THE SECOND SUBLIST-OPERAND IS NEEDED, WRITE
.*             ENCLOSED IN PARANTHESES A COMMA FOLLOWED BY THIS OPERAND
.*             THE FIRST SUBLIST-OPERAND WILL BE OMITTED
.*          3. IF ONLY THE FIRST SUBLIST-OPERAND IS NEEDED, WRITE
.*            A) ONLY THIS OPERAND WITHOUT PARANTHESES, IF THE SECOND
.*               SUBLIST-OPERAND SHOULD BE THE DEFAULT VALUE     OR
.*            B) ENCLOSED IN PARANTHESES THIS OPERAND, FOLLOWED BY A
.*               COMMA, IF THE SECOND SUBLIST-OPERAND SHOULD BE OMITTED
.*
.*       ALL OPERANDS ARE OPTIONAL
.*
.*       IF NO OPERANDS ARE SPEZIFIED, THE DEFAULT VALUES WILL BE
.*       ASSUMED
.*
.*       POSSIBLE OPERANDS:
.*
.*       BASEREG=N       WHERE N IS ANY NUMBER FROM 1 TO 15
.*                       THIS REGISTER IS ESTABLISHED AS A BASE
.*                       REGISTER
.*
.*                       REGISTER 0 IS RECOCNIZED AS AN INVALID VALUE.
.*                       FOR 1,14 AND 15 WARNINGS ARE PRINTED.
.*                       EXCEPT FOR 13 AND 15 THE VALUE IS
.*                       LOADED INTO THE REGISTER BY MEANS OF A
.*                       BALR INSTRUCTION
.*
.*                       FOR 13 THE SAVEAREA ADDRESS IS LOADED
.*                       (IF THE SAVE IS SUPPRESSED (SEE KEYWORD SAVE)
.*                       AND BASEREG=13, THE VALUE IS LOADED BY MEANS
.*                       OF A BALR INSTRUCTION)
.*
.*                       FOR 15 IT IS ASSUMED THAT IT STILL CONTAINS
.*                       THE VALUE OF * (E.G. THE EP-ADDRESS),
.*                       ONLY A USING WILL BE GENERATED
.*
.*                       THE BASE REGISTER IS ALSO EQUATED TO THE
.*                       SYMBOL 'BASEREG'
.*
.*                       IF THIS OPERAND IS OMITTED 13 IS ASSUMED
.*
.*       BASEREG=        IF THE OPERAND IS NULLIFIED NO BASEREGISTER
.*                       WILL BE DEFINED
.*
.*       CSECT=START     A START INSTRUCTION IS USED INSTEAD OF CSECT
.*
.*                       IF OMITTED, A CSECT-INSTRUCTION WILL BE
.*                       GENERATED
.*
.*       CSECT=          IF NULLIFIED NO CSECT INSTRUCTION IS GENERATED
.*
.*       EQU=(ONLY,REG)  IF 'ONLY' IS CODED, ONLY EQUATE STATEMENTS
.*                       WILL BE GENERATED. ALL OTHER OPERANDS ARE BY-
.*                       PASSED
.*
.*                       INSTEAD OF 'REG' ANY VALID NAME FOR REGISTER-
.*                       EQUATES CAN BE CODED
.*
.*                       IF THE EQU-OPERAND IS OMITTED, THE DEFAULT
.*                       VALUE WILL BE ASSUMED (EQU=(,R))
.*
.*       EQU=            IF NULLIFIED, NO EQUATES WILL BE GENERATED
.*
.*       SAVE=(ID,LABEL) INSTEAD OF 'ID' ANY VALID CHARACTERS ALLOWED
.*                       IN THE ID-FIELD OF A SAVE MACRO CAN BE CODED
.*
.*                       IF THE ID-SUBOPERAND IS OMITTED AND A CSECT-
.*                       NAME IS GENERATED, THIS NAME WILL BE SUBSTITU-
.*                       TED
.*
.*                       INSTEAD OF 'LABEL' ANY SYMBOL VALID IN A NAME-
.*                       FIELD CAN BE CODED. THIS SYMBOL WILL APPEAR IN
.*                       THE NAME FIELD OF THE SAVEAREA
.*
.*                       IF 'LABEL' IS OMITTED, NO NAME WILL BE
.*                       GENERATED
.*
.*                       IF INSTEAD OF 'LABEL'  'NO' IS CODED NO SAVE-
.*                       AREA IS GENERATED AND SAVE-AREA-CHAINING IS
.*                       SUPPRESSED
.*
.*       SAVE=           IF NULLIFIED, THE GENERATION OF A SAVE-ROUTINE
.*                       WILL BE SUPPRESSED
.*
.*       RETURN=(RC,LABEL) INSTEAD OF 'RC' ANY VALID OPERAND FOR THE
.*                       RC-PARAMETER OF THE RETURN MACRO INSTRUCTION
.*                       CAN BE CODED. IF 'RC' IS OMITTED, ZERO WILL
.*                       BE ASSUMED
.*
.*                       INSTEAD OF 'LABEL' ANY SYMBOL VALID IN A NAME-
.*                       FIELD CAN BE CODED. THIS SYMBOL WILL APPEAR IN
.*                       THE NAME FIELD OF THE RETURN INSTRUCTION. IF
.*                       'LABEL' IS OMITTED THE NAME 'RETURN' APPEARS
.*                       IN THE NAME FIELD
.*
.*                       IF INSTEAD OF 'RC'  (15) IS CODED REGISTER
.*                       15 IS SUPPOSED TO CONTAIN A RETURN-CODE AND
.*                       WILL NOT BE RESTORED UPON RETURN
.*
.*                       IF THE RETURN-OPERAND IS OMITTED, RC = 0
.*                       WILL BE GENERATED AND THE NAME 'RETURN'
.*                       IS ASSUMED
.*
.*       RETURN=         IF NULLIFIED, NO RETURN STATEMENTS WILL BE
.*                       GENERATED
.*
.*
.*--------------------------------------------------------------------*
.*                                                                    *
.*                                                                    *
         GBLC  &DFTR                    = '' OR 'R' DEPENDINGON EQUATE*
.*                                      MAY BE USED INSIDE ALL MACROS *
.*                                      CONCATENATED WITH REGISTER
.*                                      OPERANDS SO THAT REGISTER     *
.*                                      TRACING IS PROVIDED ALSO INSIDE
.*                                      MACROS.                       *
.*                                                                    *
.*--------------------------------------------------------------------*
.*
         LCLC  &SANAME                  SAVEAREA NAME
         LCLC  &RETURNC                 RETURN-ROUTINE NAME
         LCLC  &BASE                    = 'BASEREG' OR VALUE OF BASE
         LCLC  &R                       = '' OR 'R' DEPENDING ON EQUATE
         LCLC  &BRANCH                  LABEL FOR BRANCH AROUND RETURN
         LCLA  &SAR                     SAVE REGISTER FOR R13
         LCLA  &VAL                     VALUE OF BASE
         LCLB  &BASEB                   BASEREG OPERAND PRESENT
         LCLB  &BASEBSP                 BASEREG IS 13 OR 15
         LCLB  &CSECTB                  CSECT OPERAND PRESENT
         LCLB  &EQUB                    EQU OPERAND PRESENT
         LCLB  &IDB                     ID OPERAND PRESENT
         LCLB  &RETURNB                 RETURN OPERAND PRESENT
         LCLB  &RCB                     RC OPERAND PRESENT
         LCLB  &SAVEB                   SAVE OPERAND PRESENT
         LCLB  &SAVEARB                 SAVEAR OPERAND PRESENT
         LCLB  &NS                      NO SAVE IF ON
.*
.*       VALIDATE OPERANDS AND SET INDICATORS
.*
         AIF   ('&SAVE(2)' NE 'NO').AREA1
         AIF   ('&BASEREG(1)' EQ '13').AREA0
         AGO   .AREA1
.AREA0   ANOP
&BASE    SETC  '15'
&VAL     SETA  15
&NS      SETB  1
.AREA1   ANOP
         AIF   ('&BASEREG' EQ '').VAL10
         AIF   (N'&BASEREG NE 1).VAL5
         AIF   (T'&BASEREG(1) NE 'N').VAL5
         AIF   (&NS).VAL4
&VAL     SETA  &BASEREG(1)
.VAL4    ANOP
         AIF   (&VAL LT 1 OR &VAL GT 15).VAL5
&BASEB   SETB  1
         AIF   (&VAL NE 13 AND &VAL NE 15).VAL10
&BASEBSP SETB  1
         AGO   .VAL10
.VAL5    ANOP
         MNOTE 8,'INVALID BASEREG OPERAND &BASEREG'
.VAL10   ANOP
         AIF   ('&CSECT' EQ '').VAL20
         AIF   (N'&CSECT NE 1).VAL15
         AIF   ('&CSECT' NE 'START' AND '&CSECT' NE 'CSECT').VAL15
&CSECTB  SETB  1                        INDICATE CSECT
         AGO   .VAL20
.VAL15   ANOP
         MNOTE 8,'INVALID CSECT OPERAND &CSECT'
.VAL20   ANOP
         AIF   ('&EQU' EQ '').VAL30
         AIF   (N'&EQU GT 2).VAL25
         AIF   ('&EQU(1)' NE '' AND '&EQU(1)' NE 'ONLY').VAL25
         AIF   (N'&EQU EQ 1 AND '&EQU' EQ 'ONLY').VAL22
         AIF   (N'&EQU EQ 2 AND '&EQU(2)' EQ '').VAL22
&R       SETC  '&EQU(2)'
         AGO   .VAL23
.VAL22   ANOP
&R       SETC  'R'
.VAL23   ANOP
&EQUB    SETB  1                        INDICATE EQUATES
         AIF   ('&EQU(1)' EQ 'ONLY').CSECT15
         AGO   .VAL30
.VAL25   ANOP
         MNOTE 8,'INVALID EQU OPERAND &EQU'
.VAL30   ANOP
         AIF   ('&SAVE' EQ '').VAL80
         AIF   (N'&SAVE GT 2).VAL70
&SAVEB   SETB  1
         AIF   (N'&SAVE NE 2).VAL40
         AIF   (T'&SAVE(2) EQ 'O').VAL60
&SANAME  SETC  '&SAVE(2)'
         AGO   .VAL50
.VAL40   ANOP
&SANAME  SETC  'SAVEAREA'
.VAL50   ANOP
&SAVEARB SETB  1
.VAL60   ANOP
         AIF   (T'&SAVE(1) EQ 'O').VAL80
&IDB     SETB  1
         AGO   .VAL80
.VAL70   ANOP
         MNOTE 8,'INVALID SAVE OPERAND &SAVE'
.VAL80   ANOP
         AIF   ('&RETURN' EQ '').VAL120
         AIF   (N'&RETURN GT 2).VAL110
&RETURNB SETB  1
         AIF   (N'&RETURN NE 2).VAL90
         AIF   (T'&RETURN(2) EQ 'O').VAL90
&RETURNC SETC  '&RETURN(2)'
         AGO   .VAL100
.VAL90   ANOP
&RETURNC SETC  'RETURN'
.VAL100  ANOP
         AIF   (T'&RETURN(1) EQ 'O').VAL120
&RCB     SETB  1
         AGO   .VAL120
.VAL110  ANOP
         MNOTE 8,'INVALID RETURN OPERAND &RETURN'
.VAL120  ANOP
         AIF   (&BASEB+&CSECTB+&EQUB+&RETURNB+&SAVEB NE 0).VAL130
         MNOTE 12,'NO VALID OPERANDS SPECIFIED'
         MEXIT
.VAL130  ANOP
&BASE    SETC  '&VAL'
.*
.* GENERATE CSECT INSTRUCTION
.*
         SPACE 5
         AIF   (NOT &CSECTB).CSECT10   NO CSECT OR START
         AIF   ('&CSECT' EQ 'START').CSECT5
&NAME    CSECT
         AGO   .CSECT15
.CSECT5  ANOP
&NAME    START
         AGO   .CSECT15
.CSECT10 AIF   ('&NAME' EQ '').CSECT90
&NAME    DS    0H
.CSECT15 ANOP
         SPACE 5
.CSECT90 ANOP
.*
.* GENERATE EQUATES
.*
         AIF   (NOT &EQUB).EQU90
&DFTR    SETC  '&EQU(2)'                EQU-PREFIX
*---------------------------------------------------------------------*
*                                                                     *
*        E Q U A T E S                                                *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 3
&R.0     EQU   0
&R.1     EQU   1
&R.2     EQU   2
&R.3     EQU   3
&R.4     EQU   4
&R.5     EQU   5
&R.6     EQU   6
&R.7     EQU   7
&R.8     EQU   8
&R.9     EQU   9
&R.10    EQU   10
&R.11    EQU   11
&R.12    EQU   12
&R.13    EQU   13
&R.14    EQU   14
&R.15    EQU   15
         AIF   ('&EQU(1)' NE 'ONLY').EQU10
         EJECT
         MEXIT
.EQU10   AIF   (NOT &BASEB).EQU80
         SPACE 3
BASEREG  EQU   &R&BASE
&BASE    SETC  'BASEREG'
         AIF   (&VAL NE 1 AND &VAL LT 14).EQU80
***                      CAUTION:       BASE REGISTER SPECIFICATION
***                                     IS NOT CONFORM TO OS-/360
***                                     LINKAGE CONVENTIONS
.EQU80   ANOP
         EJECT
.EQU90   ANOP
.*
.* ESTABLISH BASE AND GENERATE SAVE ROUTINE
.*
         AIF   (NOT (&BASEB OR &SAVEB)).SAVE90
*---------------------------------------------------------------------*
*                                                                     *
         AIF (NOT &BASEB).SAVE05
*        E S T A B L I S H   B A S E                                  *
.SAVE05  AIF   (NOT &SAVEB).SAVE10
         AIF   ('&SAVE(2)' EQ 'NO').NOTXT
*        S A V E   A N D                                              *
*        C H A I N   S A V E   A R E A S                              *
.SAVE10  ANOP
.NOTXT   ANOP
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 3
         AIF   (&SAVEB).SAVE20          SAVE SPECIFIED
         AIF   (&VAL EQ 15).SAVE15
         BALR  &BASE,0                  SET BASE TO VALUE OF *+2
         SPACE 3
.SAVE15  USING *,&BASE                  DEFINE BASE REGISTER
         AGO   .SAVE85
.SAVE20  ANOP
         AIF   (&VAL NE 15).SAVE25
         USING *,&BASE                  INDICATE BASE
         SPACE 3
         AGO   .SAVE30
.SAVE25  ANOP
         AIF   (&VAL NE 13).SAVE30
         USING *,&R.15                  INTERMEDIATE BASE
         SPACE 3
.SAVE30  ANOP
         AIF   (NOT &IDB).SAVE35        NO ID SPECIFIED
         SAVE  (14,12),,&SAVE(1)
         AGO   .SAVE37
.SAVE35  ANOP
         SAVE  (14,12),,&NAME
.SAVE37  ANOP
         AIF   ('&SAVE(2)' NE 'NO').SAVE39
         AIF   (&VAL EQ 15).SAVE85
         BALR  &BASE,0                      BASE *
         USING *,&BASE     .
         AGO   .SAVE85
.SAVE39  ANOP
         AIF   (&BASEBSP OR NOT &BASEB).SAVE40
         SPACE 3
         BALR  &BASE,0                  SET BASE TO VALUE OF *+2
         USING *,&BASE                  INDICATE BASE
         SPACE 3
.SAVE40  ANOP
&SAR     SETA  2
         AIF   (&VAL NE 2).SAVE45       PREVENT DESTROYMENT OF BASE
&SAR     SETA  3
.SAVE45  ANOP
         LR    &R.&SAR,&R.13            SAVE HIGHER SA ADDRESS
         CNOP  0,4
         BAL   &R.13,*+76               BRANCH AROUND SAVEAREA
         SPACE 3
         AIF   (&VAL NE 13).SAVE50
         DROP  &R.15                    DROP INTERMEDIATE BASE
         USING *,&BASE                  CONTAINS SA-ADDR. AND IS BASE
         SPACE 3
.SAVE50  ANOP
&SANAME  DC    18F'0'                   SAVE AREA
         SPACE 3
         ST    &R.13,8(,&R&SAR)         LOGICAL LOWER ADDR IN HIGHER
         AIF   ('&SANAME' NE '').SAVE55
         ST    &R&SAR,4(,&R.13)         AND HIGHER ADDR IN LOWER PGM
         AGO   .SAVE85
.SAVE55  ANOP
         ST    &R&SAR,&SANAME+4         AND HIGHER ADDR IN LOWER PGM
.SAVE85  ANOP
         AIF   (NOT &RETURNB).SAVE90
         SPACE 3
.SAVE90  ANOP
.*
.* GENERATE RETURN ROUTINE
.*
         AIF   (NOT &RETURNB).RETUR90
         AIF   (NOT (&BASEB OR &SAVEB)).RETUR10
&BRANCH  SETC  '#X'.'&SYSNDX'
         B     &BRANCH                  BRANCH AROUND RETURN ROUTINE
         SPACE 5
.RETUR10 ANOP
*---------------------------------------------------------------------*
*                                                                     *
*        R E T U R N   R O U T I N E                                  *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 3
         AIF   ('&SAVE(2)' EQ 'NO').RETUR17
         AIF   (NOT &SAVEB).RETUR17     IF NO SAVE DO NOT RESTORE R13
         AIF   (&SAVEARB).RETUR15
&RETURNC L     &R.13,4(,&R.13)          RESTORE HIGHER SA ADDRESS
         AGO   .RETUR20
.RETUR15 ANOP
&RETURNC L     &R.13,&SANAME+4          RESTORE HIGHER SA ADDRESS
         AGO   .RETUR20
.RETUR17 ANOP
&RETURNC DS    0H
.RETUR20 ANOP
         AIF   (N'&RETURN GT 1).RETUR21
         AIF   ('&RETURN' EQ '(15)').RETUR22
         AGO   .RETUR2A
.RETUR21 ANOP
         AIF   ('&RETURN(1)' EQ '(15)').RETUR22
.RETUR2A ANOP
         AIF   (NOT &RCB).RETUR25
         RETURN (14,12),T,RC=&RETURN(1)
         AGO   .RETUR30
.RETUR22 ANOP
         RETURN (14,12),T,RC=(15)
         AGO   .RETUR30
.RETUR25 ANOP
         RETURN (14,12),T,RC=0
.RETUR30 ANOP
         SPACE 5
         AIF   (NOT (&SAVEB OR &BASEB)).EX
&BRANCH  DS    0H
         AGO   .EX
.RETUR90 AIF   (NOT (&BASEB OR &SAVEB)).EX
         SPACE 5
.EX      ANOP
         MEND
         EJECT
UR235900 QINIT
         SPACE 8
***********************************************************************
*                                                                     *
*        S05   STEUERLEISTE                                           *
*                                                                     *
***********************************************************************
         SPACE 3
         BAL   R14,A05                 PARAMETER-UEBERNAHME
         SPACE 2
         BAL   R14,F05                 AUSGABE HELP-TEXT
         SPACE 2
         B     RETURN
         EJECT
***********************************************************************
*                                                                     *
*        A05   PARAMETER SICHERN                                      *
*                                                                     *
***********************************************************************
         SPACE 3
         DC    F'0'
A05      EQU   *
         ST    R14,A05-4
         SPACE 2
         L     R12,0(R1)               ADRESSE SYSPRINT IN REG 12
         SPACE 3
A05Z     EQU   *
         L     R14,A05-4
         BR    R14
         EJECT
***********************************************************************
*                                                                     *
*        F05   HELPTEXTE AUSGEBEN                                     *
*                                                                     *
***********************************************************************
         SPACE 3
         DC    F'0'
F05      EQU   *
         ST    R14,F05-4
         SPACE 2
         LA    R11,TEXT                ADRESSE TEXTE IN R11
         SPACE 1
F05C     EQU   *
         CLI   0(R11),X'FF'            ENDE DER TABELLE?
         BE    F05Z                    JA,RETURN
         SPACE 1
         LR    R0,R11                  ADRESSE TEXT IN R0
         BAL   R14,U05                 TEXT AUSGEBEN
         SPACE 1
         LA    R11,L'TEXT(R11)         ADRESSE ERHOEHEN
         B     F05C                    NEUER DURCHLAUF
         SPACE 3
F05Z     EQU   *
         L     R14,F05-4
         BR    R14
         EJECT
***********************************************************************
*                                                                     *
*        U05   AUSGABE AUF SYSPRINT                                   *
*                                                                     *
***********************************************************************
         SPACE 3
         DC    F'0'
U05      EQU   *
         ST    R14,U05-4
         SPACE 2
         PUT   (12),(0)                AUSGABE AUF SYSPRINT
         SPACE 3
U05Z     EQU   *
         L     R14,U05-4
         BR    R14
         EJECT
***********************************************************************
*                                                                     *
*              HELP-TEXTE                                             *
*                                                                     *
***********************************************************************
         SPACE 3
TEXT     DC    CL80'1XBLOCK - UT235100  ERMITTLUNG OPTIMALER BLOCK- UND*
                CI-GROESSEN          '
         DC    CL80'0JOB-CONTROL-KARTEN FUER AUSFUEHRUNG IM BATCH:     *
                                     '
         DC    CL80'      //JOBKARTE JOB .....                         *
                                     '
         DC    CL80'      //STEP    EXEC PGM=UT235100                  *
                                     '
         DC    CL80'      //STEPLIB  DD  DSN=LOADLIB,DISP=SHR          *
                                     '
         DC    CL80'      //SYSPRINT DD  SYSOUT=9 (AUSGABE VON MELDUNGE*
               N, RECFM=FBA,LRECL=80)'
         DC    CL80'      //LISTE    DD  SYSOUT=9 (AUSGABE DER LISTE,  *
                  RECFM=FBA,LRECL=80)'
         DC    CL80'      //SYSIN    DD  *        (KARTENEINGABE)      *
                                     '
         DC    CL80'0BEI AUSFUEHRUNG DES PROGRAMMES AM BILDSCHIRM ALS T*
               SO-COMMAND  XBLOCK    '
         DC    CL80' KANN DIE ALLOCIERUNG DER LISTE UNTERBLEIBEN.      *
                                     '
         DC    CL80'0DIE EINGABE HAT FOLGENDES FORMAT:                 *
                                     '
         DC    CL80'0CODE,SATZLAENGE(,KEYLAENGE)(,SATZANZAHL)          *
                                     '
         DC    CL80'0GUELTIGE CODES SIND:                              *
                                     '
         DC    CL80'      HELP       AUSGABE DES HELP-TEXTES           *
                                     '
         DC    CL80'      OK33       OS-PLATTENDATEI AUF 3330 OHNE KEY *
                                     '
         DC    CL80'                 ERFORDERLICH: SATZLAENGE          *
                                     '
         DC    CL80'                 WAHLWEISE:    SATZANZAHL          *
                                     '
         DC    CL80'      OK35       OS-PLATTENDATEI AUF 3350 OHNE KEY *
                                     '
         DC    CL80'                 PARAMETER WIE BEI OK33            *
                                     '
         DC    CL80'      MK33       OS-PLATTENDATEI AUF 3330 MIT KEY  *
                                     '
         DC    CL80'                 ERFORDERLICH: SATZLAENGE, KEYLAENG*
               E                     '
         DC    CL80'                 WAHLWEISE:    SATZANZAHL          *
                                     '
         DC    CL80'      MK35       OS-PLATTENDATEI AUF 3350 MIT KEY  *
                                     '
         DC    CL80'                 PARAMETER WIE BEI MK33            *
                                     '
         DC    CL80'      TAPE       BANDDATEIEN                       *
                                     '
         DC    CL80'                 ERFORDERLICH: SATZLAENGE          *
                                     '
         DC    CL80'      VS33       VSAM DATEIEN AUF 3330 NOIMBED     *
                                     '
         DC    CL80'                 ERFORDERLICH: SATZLAENGE          *
                                     '
         DC    CL80'                 WAHLWEISE:    SATZANZAHL          *
                                     '
         DC    CL80'      VS35       VSAM DATEIEN AUF 3350 NOIMBED     *
                                     '
         DC    CL80'                 PARAMETER WIE BEI VS33            *
                                     '
         DC    CL80'      VI33       VSAM DATEIEN AUF 3330 IMBED       *
                                     '
         DC    CL80'                 PARAMETER WIE BEI VS33            *
                                     '
         DC    CL80'      VI35       VSAM DATEIEN AUF 3350 IMBED       *
                                     '
         DC    CL80'                 PARAMETER WIE BEI VS33            *
                                     '
         DC    CL80'0AUSGELASSENE PARAMETER MUESSEN DURCH EIN KOMMA VER*
               TRETEN WERDEN.        '
         DC    CL80'0ENDE DER EINGABE AM BILDSCHIRM WIRD DURCH EINGEBEN*
                VON                  '
         DC    CL80'      /*  ODER  END  ERREICHT.                     *
                                     '
         DC    CL80'0BEMERKUNGEN:                                      *
                                     '
         DC    CL80'      BEI VS-DATEIEN WIRD DURCH EIN  ''S''  HINTER *
               DER VIERTEN SPALTE    '
         DC    CL80'      ANGEZEIGT, DASS SPURUEBERSPANNENDE CI''S VORL*
               IEGEN.                '
         DC    CL80'      IN DIESEN FAELLEN MUSS DIE PLATZZUORDNUNG UNB*
               EDINGT IN CYLINDERN   '
         DC    CL80'      ERFOLGEN, DA SONST DIE SPURKAPAZITAET SCHLECH*
               TER GENUTZT UND DAMIT '
         DC    CL80'      DIE ANGEGEBENEN KAPAZITAETSWERTE UNTERSCHRITT*
               EN WERDEN.            '
         DC    CL80'1AUSWAHL DER RICHTIGEN BLOCKUNG FUER PLATTENDATEIEN*
               :                     '
         DC    CL80'0     REIN SEQUENTIELLE DATEIEN SOLLTEN AUF HALBE S*
               PUR (BLOECKE/SPUR = 2)'
         DC    CL80'      GEBLOCKT WERDEN (BEI VSAM MOEGLICHST GROSSEN *
               CI WAEHLEN).          '
         DC    CL80'0     DATEIEN, DIE NUR RANDOM VERARBEITET WERDEN, S*
               OLLTEN EINFACH        '
         DC    CL80'      GEBLOCKT WERDEN (BLKFAKTOR = 1) (BEI VSAM MOE*
               GLICHST KLEINEN CI    '
         DC    CL80'      WAEHLEN.                                     *
                                     '
         DC    CL80'0     BEI DATEIEN MIT GEMISCHTER VERARBEITUNG IST J*
               E NACH RANDOM-ANTEIL  '
         DC    CL80'      EINE MITTLERE BLOCK- BZW CI-GROSSE AUSZUWAEHL*
               EN.                   '
         DC    X'FF'                   ENDE DER TEXT-TABELLE
         END
