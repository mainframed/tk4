**********************************************************************
*                                                                    *
*     THE USE OF THIS PROGRAM IS TO ALLOCATE A EMPTY DATASET         *
*                                                                    *
*     ON A DIRECT ACCESS DEVICE.                                     *
*                                                                    *
*     THIS UTILITY CAN BE USED INSTEAD OF IEFBR14 FOR ALL            *
*                                                                    *
*     SEQUENTIAL AND INDEXSEQUENTIAL DATASETS.                       *
*                                                                    *
*     IF YOU WANT TO EMPTY AN EXISTING DATASET, YOU MUST CODE        *
*                                                                    *
*     PARM=L IN THE EXEC STATEMENT CALLING THIS PROGRAM.             *
*                                                                    *
*     IN THIS CASE A RETURNCODE OF 4 WILL OCCUR, IF ANY              *
*                                                                    *
*     CONDITION IS NOT ACCEPTABLE.                                   *
*                                                                    *
*                                                                    *
**********************************************************************
DPBR14   CSECT                         ALLIANZ-SPEZIFISCHES IEFBR14
         ANFEND
         L     R3,0(R1)                PARAMETERADRESSE
         LH    R4,0(R3)                PARAMETERLAENGE
         LTR   R4,R4                   KEIN PARAMETER VORHANDEN ?
         BZ    A000
         CLI   2(R3),C'L'              L = LEEREN V. BESTEH. DATEIEN
         BNE   A000
         MVI   ALLDISP,C'1'
         MVC   EOFWTO+47(40),EOFTEXT
A000     EQU   *                       AUFBAU DDTAB
         EXTRACT TIOTADDR,FIELDS=(TIOT)
         L     R4,TIOTADDR
         LA    R4,24(0,R4)             ADDR.DES ERSTEN DD-ENTRY
         LA    R5,TABDD
         LA    R6,100                  MAX. 100 TABELLENGLIEDER
         MVI   TABDD,X'FF'
A010     EQU   *
         CLI   0(R4),0                 TIOT-ENDE
         BE    A090
         CLC   4(8,R4),BLANK           CONCATENATED DDNAME
         BE    A020
         CLC   4(8,R4),JOBLIB          JOBLIB-STATEMENT
         BE    A020
         CLC   4(8,R4),STEPLIB         STEPLIB-STATEMENT
         BE    A020
         CLC   4(8,R4),JOBCAT          JOBCAT-STATEMENT
         BE    A020
         CLC   4(8,R4),STEPCAT         STEPCAT-STATEMENT
         BE    A020
         CLC   4(3,R4),SYS             BEGINNT DDNAME MIT SYS
         BNE   A050
         LA    R9,7(,R4)               AUF STELLE NACH SYS
         LA    RA,5
A011     EQU   *
         TM    0(R9),X'F0'             IST STELLE NUMERISCH
         BNO   A050
         LA    R9,1(,R9)
         BCT   RA,A011
         B     A020                    ALLE 5 STELLEN NUMERISCH
A020     EQU   *
         SR    R7,R7
         IC    R7,0(R4)                LAENGE DD-ENTRY
         AR    R4,R7                   R4 AUF NAECHSTES DD-STATEMENT
         B     A010
A050     EQU   *                       DDNAMEN IN PS-DCB UEBERTRAGEN
         MVC   PSDCB+40(8),4(R4)
         DEVTYPE PSDCB+40,DEVICE,DEVTAB,RPS
         CLC   DEVICE(4),SYSINOUT      IST ES SYSIN/SYSOUT
         BE    A020
         TM    DEVICE+2,X'20'          IST ES EINE DA-DEVICE
         BO    A051
         B     A020
A051     EQU   *
         RDJFCB PSDCB
         LTR   RF,RF                   RETURNCODE AUF 0 TESTEN
         BNZ   FEHLJFCB
         TM    JFCB+98,X'80'           DSORG IS
         BO    A060
         TM    JFCB+98,X'02'           DSORG PO
         BO    A065
         CLC   JFCB+160(3),X0          DIRECTORY-SPACE = DSORG PO
         BNE   A065
         TM    JFCB+98,X'20'           DSORG DA
         BO    A070
         TM    JFCB+98,X'40'           DSORG PS
         BO    A055
A055     EQU   *
         MVI   8(R5),X'40'
         B     A080
A060     EQU   *
         MVI   8(R5),X'80'
         B     A080
A065     EQU   *
         MVI   8(R5),X'02'
         B     FEHLORG
A070     EQU   *
         MVI   8(R5),X'20'
         B     FEHLORG
A080     EQU   *
         TM    JFCB+87,X'C0'           DISP=NEW
         BO    A081
         CLI   ALLDISP,C'1'
         BE    A082
         B     FEHLDISP
A081     EQU   *
         CLC   JFCB+102(4),X0          BLKSIZE + LRECL = 0
         BE    FEHLBLK
A082     EQU   *
         MVC   0(8,R5),4(R4)           DDNAMEN NACH TABDD
         LA    R5,14(,R5)              R5 AUF NAECHSTES TABDD-GLIED
         MVI   0(R5),X'FF'             ENDE TABDD
         SR    R7,R7
         IC    R7,0(R4)                LAENGE DD-ENTRY
         AR    R4,R7                   R4 AUF NAECHSTES DD-ENTRY
         BCT   R6,A010
         B     FEHLDD                  FEHLER BEI MEHR ALS 100 ENTRIES
A090     EQU   *
         LA    R5,TABDD                R5 AUF ANFANG TABDD
         CLI   0(R5),X'FF'             ENDE TABDD
         BNE   A100
A099     EQU   *
         L     RF,RCODE
         B     ENDE
         EJECT
A100     EQU   *
         CLI   0(R5),X'FF'             ENDE TABDD
         BNE   A110
         B     A099
A110     EQU   *
         MVC   DDNAME,0(R5)            DDNAME AUS TABDD
         CLI   8(R5),X'40'             IST ES EINE PS-DATEI
         BE    A500
         CLI   8(R5),X'80'             IST ES EINE IS-DATEI
         BE    A600
         CLI   8(R5),X'02'             IST ES EINE PO-DATEI
         BE    A700
         CLI   8(R5),X'20'             IST ES EINE DA-DATEI
         BE    A800
         DC    F'0'                    A*B*E*N*D
         EJECT
A500     EQU   *
         MVC   PSDCB+40(8),DDNAME
         LA    R8,PSDCB
         ST    R8,OPENWORD
         MVC   A550+5(3),OPENWORD+1
         CNOP  0,4
A550     EQU   *
         OPEN  (0,OUTPUT)
         MVC   A590+5(3),OPENWORD+1
         CNOP  0,4
A590     EQU   *
         CLOSE (0)
A599     EQU   *
         FREEPOOL (8)
         B     EOF
         EJECT
A600     EQU   *
         MVC   ISDCB+40(8),DDNAME
         LA    R8,ISDCB
         ST    R8,OPENWORD
         MVC   A650+5(3),OPENWORD+1
         CNOP  0,4
A650     EQU   *
         OPEN  (0,OUTPUT)
         MVC   A690+5(3),OPENWORD+1
         CNOP  0,4
A690     EQU   *
         CLOSE (0)
A699     EQU   *
         FREEPOOL (8)
         B     EOF
         EJECT
A700     EQU   *
         DC    F'0'                    A*B*E*N*D
A800     EQU   *
         DC    F'0'                    A*B*E*N*D
         EJECT
EOF      EQU   *
         MVC   EOFWTO+8(8),DDNAME      DDNAME IN WTO
         CNOP  0,4
EOFWTO   EQU   *
         WTO   '         WURDE ALS LEERE DATEI ANGELEGT                *
                                       ',ROUTCDE=11
         LA    R5,14(,R5)              R5 AUF NAECHSTES TABDD-GLIED
         B     A100
         EJECT
FEHLDD   EQU   *
         MVC   FDDWTO+8(8),PSDCB+40    DDNAME IN WTO
         CNOP  0,4
FDDWTO   EQU   *
         WTO   '         WURDE ALS LETZTES DD-STATEMENT BEARBEITET - WE*
               ITERE DD-STATEMENTS IGNORIERT, DA LIMIT 100',ROUTCDE=11
         MVC   RCODE,RC4
         B     A090
         EJECT
FEHLORG  EQU   *
         MVC   FORGWTO+8(8),PSDCB+40   DDNAME IN WTO
         CNOP  0,4
FORGWTO  EQU   *
         WTO   '         WURDE NICHT MIT EINER EOF-MARKE VERSEHEN, DA D*
               SORG NICHT UNTERSTUETZT',ROUTCDE=11
         MVC   RCODE,RC4
FORGEND  EQU   *
         B     A020
         EJECT
FEHLBLK  EQU   *
         MVC   FBLKWTO+8(8),PSDCB+40   DDNAME IN WTO
         CNOP  0,4
FBLKWTO  EQU   *
         WTO   '         WURDE NICHT MIT EINER EOF-MARKE VERSEHEN, DA L*
               RECL/BLKSIZE = 0       ',ROUTCDE=11
         MVC   RCODE,RC4
FBLKEND  EQU   *
         B     A020
         EJECT
FEHLDISP EQU   *
         MVC   FDISPWTO+8(8),PSDCB+40   DDNAME IN WTO
         CNOP  0,4
FDISPWTO EQU   *
         WTO   '         WURDE VON DPBR14 NICHT BEARBEITET - OS-DISPOSI*
               TION WIRD DURCHGEFUEHRT',ROUTCDE=11
         MVC   RCODE,RC4
FDISPEND EQU   *
         B     A020
         EJECT
F100     EQU   *                       FEHLERROUTINE QSAM
         SYNADAF ACSMETH=QSAM          SYNAD-MAKROROUTINE AUFRUFEN
         MVC   F900WTO+8(78),50(R1)    FEHLERBESCHREIB.NACH WTO
         SYNADRLS                      SYNAD-MAKROROUTINE FREIGEBEN
         B     F900
F200     EQU   *                       FEHLERROUTINE QISAM
         SYNADAF ACSMETH=QISAM         SYNAD-MAKROROUTINE AUFRUFEN
         MVC   F900WTO+8(78),50(R1)    FEHLERBESCHREIB.NACH WTO
         SYNADRLS                      SYNAD-MAKROROUTINE FREIGEBEN
         B     F900
F900     EQU   *
         CNOP  0,4
F900WTO  EQU   *
         WTO   '                                                       *
                                      ',ROUTCDE=11
F900ABND EQU   *
         ABEND 001                     PROGRAMMABBRUCH
         EJECT
FEHLJFCB EQU   *
         ABEND 001,DUMP                PROGRAMMABBRUCH
         EJECT
*              * D C B'S *
PSDCB    DCB   DDNAME=PSDCB,DSORG=PS,MACRF=PM,EXLST=EXITS,             *
               SYNAD=F100
         EJECT
ISDCB    DCB   DDNAME=ISDCB,DSORG=IS,MACRF=PM,EXLST=EXITS,             *
               SYNAD=F200
         EJECT
EXITS    DS    0F
         DC    X'87'
         DC    AL3(JFCB)
JFCB     DC    CL176' '
         DC    C'ENDEJFCB'
TIOTADDR DC    F'0'
DEVICE   DC    6F'0'
SYSINOUT DC    XL4'00000102'
X0       DC    XL4'00000000'
ALLDISP  DC    C'0'
EOFTEXT  DC    CL40', BZW. GELEERT, WENN SIE BEREITS BESTAND'
BLANK    DC    CL8' '
DDNAME   DC    CL8' '
JOBLIB   DC    CL8'JOBLIB'
STEPLIB  DC    CL8'STEPLIB'
JOBCAT   DC    CL8'JOBCAT'
STEPCAT  DC    CL8'STEPCAT'
SYS      DC    CL3'SYS'
RCODE    DC    F'0'
RC4      DC    F'4'
OPENWORD DC    F'0'
TABDD    DS    0CL1400
         DC    1400X'00'
         DC    X'FF'
         END
