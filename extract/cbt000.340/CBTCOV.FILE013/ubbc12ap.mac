 CPU:  PROC OPTIONS(MAIN);
   DCL BEWERT FILE RECORD,
       GUELTIG FILE RECORD ENV(F,RECSIZE(80),BLKSIZE(80)),
       (L1,L2) FILE PRINT;
   DCL 1 S1U12 BASED(P1),  /* WAITSATZ 1 UND 12 */
       2 F1 CHAR(14),
       2 WAITHS BIN FIXED(31) UNAL, /* WAITZEIT IN SEC/100 */
       2 EXPIRHS BIN FIXED(31) UNAL,/* MESSZEIT IN SEC/100 */
       2 PI BIN FIXED(31) UNAL,     /* PAGE-IN DES GANZEN SYSTEMS */
       2 PO BIN FIXED(31) UNAL,     /* PAGE-OUT "    "       "    */
       2 V1 CHAR(4066),
       1 S4 BASED(P1),   /*  STEPSATZ  */
       2 F1 CHAR(1),
       2 RECORD BIT(8),
       2 SZEITHS BIN FIXED(31) UNAL, /* STARTZEIT IN SEC/100 */
       2 SDATUM FIXED(7),        /* STARTDATUM IN 00YYTTT */
       2 F2 CHAR(29),
       2 EZEITHS BIN FIXED(31) UNAL, /* STOPZEIT IN SEC/100 */
       2 EDATUM FIXED(7),            /* STOPDATUM IN 00YYTTT */
       2 F3 CHAR(55),
       2 LE4 BIN FIXED(15) UNAL,     /* LAENGE DES VAR.TEILS +2 */
       2 V4 CHAR(3992),
       1 S34 BASED(P1),   /* TSO-SATZ */
       2 F1 CHAR(2),
       2 LOGON_T BIN FIXED(31) UNAL, /* LOGON-ZEIT IN SEC/100 */
       2 LOGON_D FIXED(7),           /* LOGON-DATUM WIE OBEN  */
       2 F2 CHAR(12),
       2 LOGOFF_T BIN FIXED(31) UNAL,
       2 LOGOFF_D FIXED(7),
       2 F3 CHAR(72),
       2 LE34 BIN FIXED(15) UNAL,
       2 V34 CHAR(3992),
       1 EDATS,
        2 F1 CHAR(2),
        2 EJAHR PIC'99',
        2 ELTAG PIC'999',
      ERD PIC'(7)9' DEF EDATS,
       1 SDATS,
        2 F1 CHAR(2),
        2 SJAHR PIC'99',
        2 SLTAG PIC'999',
      SRD PIC'(7)9' DEF SDATS,
       1 SGUEL,  /* SATZ FUER GUELTIGKEITSBEREICH */
        2 ERSTTAG CHAR(10), /* ERSTER WOCHENTAG DES JAHRES */
        2 VONTAG PIC'99', 2 VONMON PIC'99',2 VONJR PIC'99',
        2 BISTAG PIC'99', 2 BISMON PIC'99',2 BISJR PIC'99',
        2 RESTG CHAR(58);
   DCL (BCPUMIN,TCPUMIN,WAITMIN,BCPUUEB,TCPUUEB,WAITUEB)(1440)
       FIXED(7,3) INIT((1440) 0),
       (BCPUSTD,TCPUSTD,WAITSTD,OVSTD,ELASTD,
       BTSTD,BTOSTD,IKT,IKB,IKO,IKW,IKE)(24)
       FIXED(9,3) INIT((24) 0),
       (BCPUTAG,TCPUTAG,WAITTAG,OVTAG,ELATAG,BTTAG,BTOTAG)(40)
       FIXED(11,3) INIT((40) 0),
       (BCPUMON,TCPUMON,WAITMON,OVMON,ELAMON,BCPUTAGS,TCPUTAGS,
        WAITTAGS,BECPUUEB,TECPUUEB,EWAITUEB) FIXED(11,3) INIT(0);
   DCL (TSUMX,BSUMX,OSUMX,WSUMX,ESUMX) FIXED(13,2) INIT(0);
   DCL MON(12) ,
       (LTZW1,LTZW2,IZEICH,IZEI,IK,IZUPF,ISCHALT,VGLTAG,VGLMON,
        UEBTAG,STAG,SMON,IVTAG,ITAG,IWT,VGLJR,ETAG,EMON,
        FTAG,FMON,FJR,LASTTAG,LASTMON,LASTJR,MINJR,MAXJR)
       BIN FIXED INIT(0),
       (MINLTAG,MAXLTAG) PIC'999' INIT(0),
       (IPLFE,IWAITFE,I4FE,I34FE,ITUPF) BIN FIXED(31) INIT(0),
       (EINHMON,EINHTAG,MAXMON,MAXTAG) FIXED(9,3) INIT(0),
       (BTOMON,UEBCPU,WZEIT1,WZEIT2,TSUMS,BSUMS,WSUMS,ELASUMS,
        EZEITM,SZEITM,STEPZEIT,KOSTMIN,UEBKOSTMIN,UEBZEIT,
        WAITFE,BCPUFE,TCPUFE,JK) FIXED(13,3) INIT(0);
   DCL CPUZEIT FIXED(11,3) INIT(0);
   DCL WOCHTAG(7) CHAR(10),
       MPTAG(40), TAGMON(40) CHAR(2);
   DCL (STEPMON,STEPTAG,STEPTAGUEB) FIXED(13,3) INIT(0);
   DCL (BSTDMIT,TSTDMIT,WSTDMIT,ESTDMIT)(24) FIXED(13,3) INIT((24)0);
   DCL BTOMIT FIXED(13,3) INIT(0), GLEICH CHAR(132) INIT((132)'=');
   DCL (MAX1,STEP,MAXU,MAXO) FIXED(13,3) INIT(0);
   WOCHTAG(1)='MONTAG    ';
   WOCHTAG(2)='DIENSTAG  ';
   WOCHTAG(3)='MITTWOCH  ';
   WOCHTAG(4)='DONNERSTAG';
   WOCHTAG(5)='FREITAG   ';
   WOCHTAG(6)='SAMSTAG   ';
   WOCHTAG(7)='SONNTAG   ';
   MON(1),MON(3),MON(5),MON(7),MON(8),MON(10),MON(12)=31;
   MON(4),MON(6),MON(9),MON(11)=30;
   ON ENDFILE(GUELTIG) BEGIN; PUT SKIP LIST
   ('KEINE KARTE FUER G.BEREICH ODER FUER JAHRESWECHSEL (ERSTTAG)');
   GO TO ENDE; END;
 WOCHE: PROC;
   READ FILE(GUELTIG) INTO(SGUEL);
   /* EINLESEN DES DATUM-GUELTIGKEITSBEREICHES */
   DO I=1 TO 7;
   IF WOCHTAG(I) ^= ERSTTAG THEN GO TO HAS1;
   IWT=I;
   GO TO  EIN;
 HAS1: END;
   PUT SKIP LIST('KEIN GUELTIGER WOCHENTAG ALS ERSTTAG !');
   PUT DATA (WOCHTAG);
   GO TO ENDE;
 EIN: END WOCHE;
   CALL WOCHE;
   IF MOD(VONJR,4) = 0 THEN MON(2)=29;
                       ELSE MON(2)=28;
   IF VONMON=1 THEN GO TO RI1;
   DO I=1 TO (VONMON-1);
   LTZW1=LTZW1+MON(I);
   END;
 RI1: LTZW1=LTZW1+VONTAG; /* LAUFENDER TAG */
   IF MOD(BISJR,4)=0 THEN MON(2)=29;
                     ELSE MON(2)=28;
   IF BISMON=1 THEN GO TO RI2;
   DO I=1 TO (BISMON-1);
   LTZW2=LTZW2+MON(I);
   END;
 RI2: LTZW2=LTZW2+BISTAG;
   ON ERROR CALL PLIDUMP('T,F,S,H,B');
   ON SUBRG BEGIN;
   PUT SKIP LIST('UEBERLAUF EINES INDEX');
   GO TO ENDE;
   END;
   MINJR=999;MAXJR=0;
   MINLTAG=366;MAXLTAG=0;
 /* EINLESEN DES MASSSTABES */
   GET DATA(MAXMON,MAXTAG,EINHMON,EINHTAG);
   IF EINHMON = 0 × EINHTAG = 0 THEN DO;
   PUT SKIP LIST('EINHMON ODER EINHTAG GLEICH 0');
   GO TO ENDE;
   END;
   OPEN FILE(L1) PAGESIZE(70);
   OPEN FILE(L2) PAGESIZE(70);
   OPEN FILE(BEWERT) INPUT;  /* SMF-BAND */
   ON ENDFILE(BEWERT) BEGIN;
   ISCHALT=1;
   IF IZEICH=0 THEN GO TO ENDE;
   CALL RECHNEN;
   GO TO MONAT;
   END;
 LES1: /* SUCHE ERSTEN GUELTIGEN SMF-SATZ */
   READ FILE(BEWERT) SET(P1);
   IF RECORD^=0 & RECORD^=1 & RECORD^=4 & RECORD^=12 & RECORD^=34
   THEN GO TO LES1;
   SRD=SDATUM;
   IF SLTAG + 366*SJAHR > LTZW2 + 366*BISJR
    × SLTAG + 366*SJAHR < LTZW1 + 366*VONJR THEN DO;
   CALL FEHLER;
   GO TO LES1;
   END;
   IZEICH=1; /* GUELTIGER SATZ WURDE GEFUNDEN */
   IF MOD(SJAHR,4)=0 THEN MON(2)=29;
                     ELSE MON(2)=28;
   CALL KALTAG(SLTAG,STAG,SMON);
   CALL ERSTDAT;
   IF RECORD=4 × RECORD=34 THEN DO;
   CPUZEIT=UNSPEC(SUBSTR(V4,LE4,3));
   CPUZEIT=CPUZEIT/6000;  /* CPUZEIT IN MIN */
   END;
   IF RECORD=4 THEN DO;
   ERD=EDATUM;
   BCPUMON=BCPUMON+CPUZEIT;
   END;
   IF RECORD=34 THEN DO;
   ERD=LOGOFF_D;
   TCPUMON=TCPUMON+CPUZEIT;
   END;
   IF RECORD=0 THEN DO;
   ITUPF=ITUPF+1;
   IZEI=1;
   WZEIT1=SZEITHS/6000;
   GO TO LES1;
   END;
   IF RECORD=1 × RECORD=12 THEN DO;
   ITUPF=ITUPF+1;
   IF IZEI=1 THEN DO;
   WZEIT2=EXPIRHS/6000;
   CPUZEIT=WAITHS;
   CPUZEIT=CPUZEIT/6000;
   WAITMON=WAITMON+CPUZEIT;
   END;
   ELSE DO;
   WZEIT1=EXPIRHS/6000;
   IZEI=1;
   GO TO LES1;
   END;
   END;
   VGLTAG,UEBTAG=STAG;
   IVTAG=ITAG;
   VGLMON=SMON;
   VGLJR=SJAHR;
   GO TO F1;
 LES2: /* FOLGESAETZE LESEN */
   READ FILE(BEWERT) SET(P1);
   IF RECORD^=0 & RECORD^=1 & RECORD^=4 & RECORD^=12 & RECORD^=34
   THEN GO TO LES2;
   SRD=SDATUM;
   IF SLTAG + 366*SJAHR > LTZW2 + 366*BISJR
    × SLTAG + 366*SJAHR < LTZW1 + 366*VONJR THEN DO;
   CALL FEHLER;
   GO TO LES2;
   END;
   IF VGLJR ^= SJAHR THEN CALL WOCHE; /* NEUER ERSTTAG BEI J.WECHSEL*/
   IF MOD(SJAHR,4)=0 THEN MON(2)=29;
                     ELSE MON(2)=28;
   CALL KALTAG(SLTAG,STAG,SMON);
   CALL LASTDAT;
   IF VGLTAG ^= STAG THEN DO;
   CALL RECHNEN;
   IF RECORD=1 ×  RECORD=12 THEN GO TO LES2;
   IF RECORD=4 × RECORD=34 THEN WZEIT1=0;
   END;
   IF RECORD=4 × RECORD=34 THEN DO;
   CPUZEIT=UNSPEC(SUBSTR(V4,LE4,3));
   CPUZEIT=CPUZEIT/6000;
   END;
   IF RECORD=4 THEN DO;
   ERD=EDATUM;
   BCPUMON=BCPUMON+CPUZEIT;
   GO TO F1;
   END;
   IF RECORD=34 THEN DO;
   ERD=LOGOFF_D;
   TCPUMON=TCPUMON+CPUZEIT;
   GO TO F1;
   END;
   IF RECORD=0 THEN DO;
   ITUPF=ITUPF+1;
   IZEI=1;
   WZEIT1=SZEITHS/6000;
   GO TO LES2;
   END;
   IF RECORD=1 × RECORD=12 THEN DO;
   ITUPF=ITUPF+1;
   IF IZEI=1 THEN DO;
   WZEIT2=EXPIRHS/6000;
   IF ABS((SZEITHS-EXPIRHS)/6000) > 720 THEN DO;
   WZEIT1=0;
   WZEIT2=SZEITHS/6000;
   END;
   CPUZEIT=WAITHS;
   CPUZEIT=CPUZEIT/6000;
   WAITMON=WAITMON+CPUZEIT;
   END;
   ELSE DO;
   WZEIT1=EXPIRHS/6000; IZEI=1;
   GO TO LES2;
   END;
   END;
 F1:
   IF RECORD=4 × RECORD=34 THEN
   CALL KALTAG(ELTAG,ETAG,EMON);
   CALL ZEITBER;
   IF (RECORD=4 × RECORD=34) & STAG ^= ETAG THEN DO;
   CALL SONDFALL;
   GO TO VOR1;
   END;
   IF EZEITM < SZEITM THEN GO TO LES2;
   STEPZEIT=EZEITM-SZEITM;
 VOR1:
   IF RECORD=4 THEN DO;
   STEPMON=STEPMON+STEPZEIT;
   STEPTAG=STEPTAG+STEPZEIT;
   END;
   IF STEPZEIT=0 THEN DO;
   STEPZEIT=1;
   IF EZEITM < 1439 THEN EZEITM=EZEITM+1;
   ELSE SZEITM=SZEITM-1;
   END;
   IF EZEITM > 1440 THEN EZEITM=1440;
   IF SZEITM=0 THEN DO;
   SZEITM=1;
   STEPZEIT=STEPZEIT-1;
   END;
   IF RECORD=4 THEN BCPUTAGS=BCPUTAGS+CPUZEIT;
   IF RECORD=34 THEN TCPUTAGS=TCPUTAGS+CPUZEIT;
   IF RECORD=1 × RECORD=12 THEN DO;
   IF CPUZEIT > STEPZEIT THEN CPUZEIT=STEPZEIT;
   WAITTAGS=WAITTAGS+CPUZEIT;
   END;
   KOSTMIN=CPUZEIT/(STEPZEIT+1);
   IF RECORD=34 THEN DO;
   DO I=SZEITM TO EZEITM;
   TCPUMIN(I)=TCPUMIN(I) + KOSTMIN;
   END;
   GO TO LES2;
   END;
   IF RECORD= 4 THEN DO;
   DO I=SZEITM TO EZEITM;
   BCPUMIN(I)=BCPUMIN(I) + KOSTMIN;
   END;
   GO TO LES2;
   END;
   IF RECORD=1 × RECORD=12 THEN DO;
   DO I=SZEITM TO EZEITM;
   WAITMIN(I)=WAITMIN(I) + KOSTMIN;
   END;
   GO TO LES2;
   END;
 MONAT:  /* MONATSABRECHNUNG */
   JK=IK;
   CALL KOPF2;  /* MONATSSTATISTIK */
   CALL SCHAU2;
   CALL KOPF3;   /* VERDICHTETE TAGESSTATISTIK */
   CALL SCHAU1;
 ENDE:
   CALL FEHLERL;
   CLOSE FILE(BEWERT);
   CLOSE FILE(L1);
   CLOSE FILE(L2);
 /*   UNTERPROGRAMME   */
 KALTAG: PROC(XLTAG,XTAG,XMON);
   DCL (XTAG,XMON) BIN FIXED, XLTAG PIC'999';
   IZ2=0;
   DO I=1 TO 12;
   IZ1=IZ2;
   IZ2=IZ2+MON(I);
   IF XLTAG <= IZ2 THEN DO;
   XMON=I;
   GO TO DRAU;
   END;
   END;
   PUT SKIP LIST('KALTAG LIEFERT KEIN GUELTIGES DATUM');
   IF IZEICH=1 THEN GO TO LES2;
   GO TO LES1;
 DRAU:
   XTAG=XLTAG-IZ1;
   ITAG=MOD(XLTAG+IWT-1,7);
   IF ITAG=0 THEN ITAG=7;
   END KALTAG;
 ZEITBER: PROC;
   IF RECORD=34 THEN DO;
   SZEITM=LOGON_T/6000;
   EZEITM=LOGOFF_T/6000; RETURN;
   END;
   IF RECORD=4 THEN DO;
   SZEITM=SZEITHS/6000;
   EZEITM=EZEITHS/6000; RETURN;
   END;
   IF RECORD=1 × RECORD = 12 THEN DO;
   SZEITM=WZEIT1;
   EZEITM=WZEIT2;
   WZEIT1=WZEIT2;
   END;
   END ZEITBER;
 ERSTDAT: PROC;
   FTAG=STAG; FMON=SMON; FJR=SJAHR;
   END ERSTDAT;
 LASTDAT: PROC;
   LASTTAG=STAG; LASTMON=SMON; LASTJR=SJAHR;
   END LASTDAT;
 FEHLER:PROC;
   IZUPF=1;
   IF SJAHR < MINJR THEN MINJR=SJAHR;
   IF SJAHR > MAXJR THEN MAXJR=SJAHR;
   IF SLTAG + 366*SJAHR < MINLTAG + 366*MINJR THEN
   MINLTAG=SLTAG;
   IF SLTAG + 366*SJAHR > MAXLTAG + 366*MAXJR THEN
   MAXLTAG=SLTAG;
   IF RECORD=0 THEN DO;
   IPLFE=IPLFE+1; RETURN;
   END;
   IF RECORD=1 × RECORD=12 THEN DO;
   CPUZEIT=WAITHS;
   WAITFE=WAITFE+CPUZEIT/6000;
   IWAITFE=IWAITFE+1; RETURN;
   END;
   IF RECORD=4 × RECORD=34 THEN DO;
   CPUZEIT=UNSPEC(SUBSTR(V4,LE4,3));
   CPUZEIT=CPUZEIT/6000;
   END;
   IF RECORD=4 THEN DO;
   I4FE=I4FE+1;
   BCPUFE=BCPUFE+CPUZEIT; RETURN;
   END;
   IF RECORD=34  THEN DO;
   I34FE=I34FE+1;
   TCPUFE=TCPUFE+CPUZEIT;
   END;
   END FEHLER;
 SONDFALL: PROC;
   UEBZEIT=EZEITM;
   IF UEBZEIT=0 THEN UEBZEIT=1;
   STEPZEIT=1440-SZEITM;
   EZEITM=1440;
   UEBCPU=(CPUZEIT*UEBZEIT)/(STEPZEIT+UEBZEIT);
   CPUZEIT=CPUZEIT-UEBCPU;
   UEBKOSTMIN=UEBCPU/UEBZEIT;
   DO J=1 TO UEBZEIT;
   IF RECORD=1 × RECORD=12 THEN
   WAITUEB(I)=WAITUEB(I)+UEBKOSTMIN;
   IF RECORD=4 THEN
   BCPUUEB(I)=BCPUUEB(I)+UEBKOSTMIN;
   IF RECORD=34 THEN
   TCPUUEB(I)=TCPUUEB(I)+UEBKOSTMIN;
   END;
   IF RECORD=4 × RECORD=34 THEN UEBTAG=STAG+1;
   IF RECORD=4 THEN DO;
   BECPUUEB=BECPUUEB+UEBCPU;
   STEPTAGUEB=STEPTAGUEB+UEBZEIT;
   END;
   IF RECORD=34 THEN TECPUUEB=TECPUUEB+UEBCPU;
   IF RECORD=1 × RECORD=12 THEN EWAITUEB=EWAITUEB+UEBCPU;
   END SONDFALL;
 RECHNEN: PROC;
   IF ITUPF < 2 THEN DO;
   ITUPF=0;
   WAITMON=WAITMON-WAITTAGS;
   TCPUMON=TCPUMON-TCPUTAGS;
   BCPUMON=BCPUMON-BCPUTAGS;
 /* VON MONATSSUMME WIEDER ABGEZOGEN,DA NICHT BERUECKSICHTIGT WIRD,
    WENN NUR 1 WAITSATZ PRO TAG AUFTRITT */
   GO TO SO1;
   END;
   IF (RECORD=1 × RECORD=12) & ISCHALT=0 THEN DO;
   /* WENN SATZ 1 ODER 12 TAGESWECHSEL ERZEUGT UND
      NICHT LETZTER SATZ WAR */
   WZEIT2=EXPIRHS/6000;
   CALL ZEITBER;
   IF EZEITM < SZEITM THEN STEPZEIT=EZEITM+1440-SZEITM;
   ELSE DO;
   STEPZEIT=EZEITM-SZEITM;
   CPUZEIT=WAITHS/6000; IF CPUZEIT > STEPZEIT THEN CPUZEIT=STEPZEIT;
   KOSTMIN=CPUZEIT/(STEPZEIT+1);
   DO I=SZEITM TO EZEITM;
   WAITMIN(I)=WAITMIN(I)+KOSTMIN; END;
   WZEIT1=0;
   GO TO KU1;
   END;
   CPUZEIT=WAITHS/6000;
   IF CPUZEIT > STEPZEIT THEN CPUZEIT=STEPZEIT;
   CALL SONDFALL;
   KOSTMIN=CPUZEIT/(STEPZEIT+1);
   DO I=SZEITM TO 1440;
   WAITMIN(I)=WAITMIN(I)+KOSTMIN;
   END;
   END;
  KU1:TSUMS,BSUMS,WSUMS,ELASUMS=0;
   DO I=1 TO 1440;
   TSUMS=TSUMS+TCPUMIN(I);
   BSUMS=BSUMS+BCPUMIN(I);
   IF TCPUMIN(I)=0 & BCPUMIN(I)=0
   & WAITMIN(I) < 0.5 THEN WAITMIN(I)=0;
   WSUMS=WSUMS+WAITMIN(I);
   IF WAITMIN(I) >0 × TCPUMIN(I) >0 × BCPUMIN(I) >0 THEN
   ELASUMS=ELASUMS+1;
   IF MOD(I,60) ^= 0 THEN GO TO GU1;
   L=I/60;
   TCPUSTD(L)=TSUMS;
   BCPUSTD(L)=BSUMS;
   WAITSTD(L)=WSUMS;
   ELASTD(L)=ELASUMS;
   OVSTD(L)=ELASTD(L)-BCPUSTD(L)-TCPUSTD(L)-WAITSTD(L);
   IF OVSTD(L) < 0 THEN DO;
   WAITSTD(L)=WAITSTD(L)+OVSTD(L);
   OVSTD(L)=0;
   END;
   IF TCPUSTD(L) > 0 THEN DO; TSTDMIT(L)=TSTDMIT(L)+TCPUSTD(L);
   IKT(L)=IKT(L)+1; END;
   IF BCPUSTD(L) > 0 THEN DO; BSTDMIT(L)=BSTDMIT(L)+BCPUSTD(L);
   IKB(L)=IKB(L)+1; END;
   IF WAITSTD(L) > 0 THEN DO; WSTDMIT(L)=WSTDMIT(L)+WAITSTD(L);
   IKW(L)=IKW(L)+1; END;
   IF ELASTD(L) > 0 THEN DO; ESTDMIT(L)=ESTDMIT(L)+ELASTD(L);
   IKE(L)=IKE(L)+1;
   END;
   IF OVSTD(L) > 0 THEN IKO(L)=IKO(L)+1;
   TSUMS,BSUMS,WSUMS,ELASUMS=0;
 GU1: END;
   IK=IK+1;   /* ARBEITSTAG-ZAEHLER */
   IF IK > 40 THEN DO; PUT SKIP LIST
   ('MEHR ALS 40 ARBEITSTAGE NICHT MOEGLICH');
   GO TO ENDE;
   END;
   BCPUTAG(IK)=BCPUTAGS;
   TCPUTAG(IK)=TCPUTAGS;
   WAITTAG(IK)=WAITTAGS;
   DO I=1 TO 24;
   ELATAG(IK)=ELATAG(IK)+ELASTD(I);
   END;
   OVTAG(IK)=ELATAG(IK)-WAITTAG(IK)-BCPUTAG(IK)-TCPUTAG(IK);
   BTTAG(IK)=BCPUTAG(IK)+TCPUTAG(IK);
   BTOTAG(IK)=BTTAG(IK)+OVTAG(IK);
   ELAMON=ELAMON+ ELATAG(IK);
   OVMON=OVMON + OVTAG(IK);
   CALL KOPF1;
   CALL SCHAU1;
 SO1:IF ISCHALT=1 THEN DO; ISCHALT=2; RETURN; END;
   DO I=1 TO 1440;
   TCPUMIN(I)=TCPUUEB(I);
   BCPUMIN(I)=BCPUUEB(I);
   WAITMIN(I)=WAITUEB(I);
   END;
   TCPUUEB,BCPUUEB,WAITUEB=0;
   TCPUTAGS=TECPUUEB;
   BCPUTAGS=BECPUUEB;
   WAITTAGS=EWAITUEB;
   STEPTAG=STEPTAGUEB;
   TECPUUEB,BECPUUEB,EWAITUEB,STEPTAGUEB=0;
 SO:
   IF UEBTAG=STAG × UEBTAG=VGLTAG THEN DO;
   VGLTAG,UEBTAG=STAG;
   IVTAG=ITAG;
   VGLMON=SMON;
   VGLJR=SJAHR;
   RETURN;
   END;
   IF VGLMON ^= SMON THEN DO;
   UEBTAG=STAG;
   GO TO SO;
   END;
   END RECHNEN;
 FEHLERL: PROC;  /* FEHLERPROTOKOLL */
 IF IZUPF=0 THEN DO;
 STAG,SMON,ETAG,EMON,MINJR,MAXJR=0; END;
 ELSE DO;
   CALL KALTAG(MINLTAG,STAG,SMON);
   CALL KALTAG(MAXLTAG,ETAG,EMON);
   END;
   PUT PAGE FILE(L2) EDIT
   ('F E H L E R S T A T I S T I K DER C P U L A S T')(SKIP(3),A);
   PUT FILE(L2) SKIP(2) EDIT
   (' MIN-MAX DATUM   ',STAG,'.',SMON,'.',MINJR,'  BIS  ',
    ETAG,'.',EMON,'.',MAXJR)
   (COL(10),(6)(A,P'99'));
   PUT FILE(L2) SKIP(2) EDIT
   ('RECORD 00','(IPL)',IPLFE,' X GESCHRIEBEN')(R(FORMF1));
   PUT FILE(L2) EDIT
   ('RECORD 01+12','(WAIT)',IWAITFE,' X GESCHRIEBEN    MIT SUMME',
   WAITFE/60,' (STD)',
   'RECORD 04','(CPU-BATCH)',I4FE,' X GESCHRIEBEN    MIT SUMME',
   BCPUFE/60,' (STD)',
   'RECORD 34','(CPU-TSO)',I34FE,' X GESCHRIEBEN    MIT SUMME',
   TCPUFE/60,' (STD)')
   ((3)(SKIP(2),R(FORMF1),R(FORMF2)));
 FORMF1: FORMAT(COL(5),A,COL(20),A,COL(37),P'ZZ.ZZZ.ZZ9',A);
 FORMF2: FORMAT(P'BZZZ9V,99',A);
   END FEHLERL;
 KOPF1: PROC; /* KOPF DER TAGESSTATISTIK */
   DO I=1 TO 24;
   BTSTD(I)=BCPUSTD(I)+TCPUSTD(I);
   BTOSTD(I)=BTSTD(I)+OVSTD(I);
   END;
   TAGMON(IK)=SUBSTR(WOCHTAG(IVTAG),1,2);
   MPTAG(IK)=VGLTAG;
   IF BCPUTAG(IK)=0 THEN BCPUTAG(IK)=1;
 FORMK1: FORMAT(SKIP,COL(5),A,(4)(X(4),P'ZZZ9V,99',A),COL(84),A);
   PUT FILE(L1) PAGE EDIT
   ('T A G E S S T A T I S T I K  DER  C P U L O A D  VOM ',
   WOCHTAG(IVTAG),' DEN ',VGLTAG,'.',VGLMON,'.',VGLJR,
   ' (BATCH + TSO)','B',IK+2)
   (SKIP,COL(10),A,A,(3)(A,P'99'),A,COL(123),A,P'99');
   PUT FILE(L1) SKIP(2) EDIT
   ('SUMME/TAG','SCHNITT','×  SCHNITT: CPU:STEPVERWEILZEIT (BATCH)')
   (COL(30),A,COL(63),A,COL(84),A);
   PUT FILE(L1) SKIP EDIT
   ('ELAPSE  :',ELATAG(IK)/60,' (STD)',ELATAG(IK),' (MIN)',
   ELATAG(IK)/1440,' (STD)',ELATAG(IK)/24,' (MIN)','×',
   '1 :',STEPTAG/BCPUTAG(IK),
   'WAIT    :',WAITTAG(IK)/60,' (STD)',WAITTAG(IK),' (MIN)',
   WAITTAG(IK)/1440,' (STD)',WAITTAG(IK)/24,' (MIN)','×',
   'OVERHEAD:',OVTAG(IK)/60,' (STD)',OVTAG(IK),' (MIN)',
   OVTAG(IK)/1440,' (STD)',OVTAG(IK)/24,' (MIN)','×',
   'SCHNITT: (BATCH+TSO+OVERHEAD)',
   'TSO     :',TCPUTAG(IK)/60,' (STD)',TCPUTAG(IK),' (MIN)',
   TCPUTAG(IK)/1440,' (STD)',TCPUTAG(IK)/24,' (MIN)','×',
   'BATCH   :',BCPUTAG(IK)/60,' (STD)',BCPUTAG(IK),' (MIN)',
   BCPUTAG(IK)/1440,' (STD)',BCPUTAG(IK)/24,' (MIN)','×',
   BTOTAG(IK)/1440,' (STD)',BTOTAG(IK)/24,' (MIN)')
   (R(FORMK1),COL(103),A,P'ZZ9V,99',(2)(R(FORMK1)),
   COL(87),A,(2)(R(FORMK1)),COL(87),(2)(P'(4)Z9V,99',A));
   END KOPF1;
 SCHAU1: PROC;
   PUT FILE(L1) SKIP EDIT(GLEICH)(A);
   PUT FILE(L1) EDIT
   ('=ELAPSE  ',(ELASTD(I) DO I=1 TO 24),'=',
    '=WAIT    ',(WAITSTD(I) DO I=1 TO 24),'=',
    '=OVERHEAD',(OVSTD(I) DO I=1 TO 24),'=',
    '=TSO     ',(TCPUSTD(I) DO I=1 TO 24),'=',
    '=BATCH   ',(BCPUSTD(I) DO I=1 TO 24),'=')
   ((5)(SKIP,A,(24)(P'ZZ9V,9'),COL(132),A));
   PUT SKIP FILE(L1) EDIT
   ('=','(MIN)','=')(A,COL(5),A,COL(132),A);
   MAX1=MAXTAG;
   MAXU=MAX1-0.5*EINHTAG;
   MAXO=MAX1+0.5*EINHTAG;
   DO STEP=MAXTAG TO EINHTAG BY -EINHTAG;
   MERK1=0;
   PUT SKIP FILE(L1) EDIT('=',MAX1,' I')(A,P'ZZ9V,99',A);
   DO I=1 TO 24;
   IF BTOTAG(IK)/24 >= MAXU & BTOTAG(IK)/24 < MAXO THEN DO;
   PUT FILE(L1) EDIT('---')(A); MERK1=1; GO TO DOS1; END;
   PUT FILE(L1) EDIT('   ')(A);
 DOS1:
   IF BCPUSTD(I) >=MAXU THEN DO;
   PUT FILE(L1) EDIT ('**')(A); GO TO DOS2;
   END;
   IF BTSTD(I) >= MAXU THEN DO;
   PUT FILE(L1) EDIT('++')(A); GO TO DOS2;
   END;
   IF BTOSTD(I) >= MAXU THEN DO;
   PUT FILE(L1) EDIT(' O')(A); GO TO DOS2;
   END;
   IF ELASTD(I) >= MAXU THEN
   PUT FILE(L1) EDIT('WW')(A);
   ELSE DO;
   IF MERK1=1 THEN DO; PUT FILE(L1) EDIT('--')(A); GO TO DOS2; END;
   PUT FILE(L1) EDIT('  ')(A);
   END;
 DOS2: END;
   PUT FILE(L1) EDIT('=')(COL(132),A);
   MAX1=MAX1-EINHTAG;
   MAXU=MAX1-0.5*EINHTAG;
   MAXO=MAX1+0.5*EINHTAG;
   END;
   PUT FILE(L1) SKIP EDIT
   ('=','I',('---II' DO I=1 TO 24),'->=')(A,COL(9),A,(24)(A),A);
   IF ISCHALT^=2 THEN GO TO TU1;
   PUT FILE(L1) EDIT
   ('=ASTD(E) ',(IKE(I) DO I=1 TO 24),'=',
    '=ASTD(W) ',(IKW(I) DO I=1 TO 24),'=',
    '=ASTD(O) ',(IKO(I) DO I=1 TO 24),'=',
    '=ASTD(T) ',(IKT(I) DO I=1 TO 24),'=',
    '=ASTD(B) ',(IKB(I) DO I=1 TO 24),'=')
   ((5)(SKIP,A,(24)(P'(4)Z9'),COL(132),A));
 TU1: PUT FILE(L1) SKIP EDIT
   ('=','=','=',(I DO I=1 TO 24),'=','=','=')
   (A,COL(132),A,SKIP,A,COL(10),(24)(P'(4)Z9'),COL(132),A,
   SKIP,A,COL(132),A);
   PUT SKIP FILE(L1) EDIT
   ('= BATCH **  TSO ++  OVERHEAD  O  WAIT WW , SUMME=ELAPSE ,',
    'SCHNITT: (BATCH+TSO+OVERHEAD) ---','TAGESZEIT (STD)','=',GLEICH)
   (A,A,COL(115),A,COL(132),A,SKIP,A);
   END SCHAU1;
 KOPF3: PROC; /* KOPF DER TAGESVERDICHTUNG */
   BTOMIT=0;
   DO I=1 TO 24;
   IF IKB(I) ^= 0 THEN BCPUSTD(I)=BSTDMIT(I)/IKB(I);ELSE BCPUSTD(I)=0;
   BSUMX=BSUMX+BCPUSTD(I);
   IF IKT(I) ^= 0 THEN TCPUSTD(I)=TSTDMIT(I)/IKT(I);ELSE TCPUSTD(I)=0;
   TSUMX=TSUMX+TCPUSTD(I);
   IF IKW(I) ^= 0 THEN WAITSTD(I)=WSTDMIT(I)/IKW(I);ELSE WAITSTD(I)=0;
   WSUMX=WSUMX+WAITSTD(I);
   IF IKE(I) ^= 0 THEN ELASTD(I)=ESTDMIT(I)/IKE(I); ELSE ELASTD(I)=0;
   ESUMX=ESUMX+ELASTD(I);
   OVSTD(I)=ELASTD(I)-BCPUSTD(I)-TCPUSTD(I)-WAITSTD(I);
   OSUMX=OSUMX+OVSTD(I);
   BTSTD(I)=BCPUSTD(I)+TCPUSTD(I);
   BTOSTD(I)=BTSTD(I)+OVSTD(I);
   BTOMIT=BTOMIT+BTOSTD(I);
   END;
   BTOTAG(IK)=BTOMIT;
   BTOMIT=BTOMIT/24;
   PUT FILE(L1) PAGE EDIT
   ('VERDICHTETE  T A G E S S T A T I S T I K  DER  C P U L O A D',
    '  VOM ',FTAG,'.',FMON,'.',FJR,' BIS ',LASTTAG,'.',LASTMON,'.',
   LASTJR,' (BATCH + TSO)','B01')
   (SKIP,COL(5),A,(6)(A,P'99'),A,COL(123),A);
   PUT FILE(L1) SKIP(2) EDIT
   ('MITTLERE SUMME/ATAG','MITTLERE SUMME/STD',
    'SCHNITT: CPU/STEPVERWEILZEIT (BATCH)')
   (COL(25),A,COL(56),A,COL(87),A);
   IF BCPUMON=0 THEN BCPUMON=1;
   PUT FILE(L1) SKIP EDIT
   ('ELAPSE  :',ELAMON/(JK*60),' (STD)',ELAMON/JK,' (MIN)',
   ESUMX/1440,' (STD)',ESUMX/24,' (MIN)','×',
   '1 :',STEPMON/BCPUMON,
    'WAIT    :',WAITMON/(JK*60),' (STD)',WAITMON/JK,' (MIN)',
   WSUMX/1440,' (STD)',WSUMX/24,' (MIN)','×',
    'OVERHEAD:',OVMON/(JK*60),' (STD)',OVMON/JK,' (MIN)',
   OSUMX/1440,' (STD)',OSUMX/24,' (MIN)','×',
    'SCHNITT: (BATCH+TSO+OVERHEAD)',
    'TSO     :',TCPUMON/(JK*60),' (STD)',TCPUMON/JK,' (MIN)',
   TSUMX/1440,' (STD)',TSUMX/24,' (MIN)','×',
    'BATCH   :',BCPUMON/(JK*60),' (STD)',BCPUMON/JK,' (MIN)',
   BSUMX/1440,' (STD)',BSUMX/24,' (MIN)','×',
   BTOMIT/60,' (STD)',BTOMIT,' (MIN)')
   (R(FORMK3),COL(103),A,P'ZZ9V,99',(2)(R(FORMK3)),COL(87),A,
   (2)(R(FORMK3)),COL(87),(2)(P'(4)Z9V,99',A));
 FORMK3: FORMAT(SKIP,COL(5),A,(4)(X(3),P'ZZZZ9V,99',A),COL(84),A);
   END KOPF3;
 KOPF2: PROC;
 /* KOPF DER MONATSSTATISTIK */
   DO I=1 TO IK;
   BTOMON=BTOMON+BTOTAG(I);
   END;
   IF WAITMON ^= ELAMON-BTOMON THEN WAITMON=ELAMON-BTOMON;
   PUT FILE(L1) PAGE EDIT
   ('M O N A T S S T A T I S T I K  DER  C P U L O A D  VOM ',
   FTAG,'.',FMON,'.',FJR,' BIS ',LASTTAG,'.',LASTMON,'.',LASTJR,
   ' (BATCH + TSO)','B02')
   (SKIP,COL(10),(6)(A,P'99'),A,COL(123),A);
   PUT FILE(L1) SKIP(2) EDIT
   ('SUMME/MONAT','SCHNITTSUMME/ATAG','FEHLERPROTOKOLL (AUSSERHALB',
    'SCHNITT: CPU/STEPVERWEILZEIT(BATCH)  ARBEITSTAGE ',
    'DES GUELTIGKEITSBEREICHES)')
   (COL(16),A,COL(29),A,COL(48),A,COL(80),A,SKIP,COL(49),A);
   PUT FILE(L1) EDIT
   ('ELAPSE  :',ELAMON/60,' (STD)',ELAMON/(JK*60),' (STD)','×',
   '1 :',STEPMON/BCPUMON,IK,
   'WAIT    :',WAITMON/60,' (STD)',WAITMON/(JK*60),' (STD)','×',
   'OVERHEAD:',OVMON/60,' (STD)',OVMON/(JK*60),' (STD)','×',
   'SCHNITT: (BATCH +TSO+OVERHEAD)',
   'TSO     :',TCPUMON/60,' (STD)',TCPUMON/(JK*60),' (STD)',
   TCPUFE/60,' (STD)',I34FE,' (R34)','×',
   'BATCH   :',BCPUMON/60,' (STD)',BCPUMON/(JK*60),' (STD)',
   BCPUFE/60,' (STD)',I4FE,' (R04)','×',
   BTOMON/(JK*60),' (STD)')
   (R(FORMK21),COL(77),A,COL(96),A,P'ZZ9V,99',COL(122),P'ZZ9',
   (2)(R(FORMK21),COL(77),A),COL(80),A,
  (2)(R(FORMK21),COL(49),P'(4)Z9V,99',A,P'(4)Z9',A,COL(77),A),COL(90),
   P'ZZZ9V,99',A);
 FORMK21: FORMAT(SKIP,COL(5),A,(2)(P'B(4)Z9V,99',A));
   END KOPF2;
 SCHAU2: PROC;
   PUT FILE(L1) SKIP EDIT(SUBSTR(GLEICH,1,12+4*IK))(A);
   PUT FILE(L1) EDIT
   ('=ELAPSE  ',(ELATAG(I)/60 DO I=1 TO IK),'=',
    '=WAIT    ',(WAITTAG(I)/60 DO I=1 TO IK),'=',
    '=OVERHEAD',(OVTAG(I)/60 DO I=1 TO IK),'=',
    '=TSO     ',(TCPUTAG(I)/60 DO I=1 TO IK),'=',
    '=BATCH   ',(BCPUTAG(I)/60 DO I=1 TO IK),'=')
   ((5)(SKIP,A,(IK)(P'Z9V,9'),COL(12+4*IK),A));
   PUT FILE(L1) SKIP EDIT
   ('=','(STD)','=')(A,COL(5),A,COL(12+4*IK),A);
   MAX1=MAXMON;
   MAXU=MAX1-0.5*EINHMON;
   MAXO=MAX1+0.5*EINHMON;
   DO STEP=MAXMON TO EINHMON BY -EINHMON;
   MERK1=0;
   PUT SKIP FILE(L1) EDIT('=',MAX1,' I')(A,P'ZZ9V,99',A);
   DO I=1 TO IK;
   IF BTOMON/(JK*60) >= MAXU & BTOMON/(JK*60) < MAXO THEN DO;
   PUT FILE(L1) EDIT('--')(A);; MERK1=1; GO TO TOS1; END;
   PUT FILE(L1) EDIT('  ')(A);
 TOS1:
   IF BCPUTAG(I)/60 >= MAXU THEN DO;
   PUT FILE(L1) EDIT('**')(A);GO TO TOS2;
   END;
   IF BTTAG(I)/60 >= MAXU THEN DO;
   PUT FILE(L1) EDIT('++')(A); GO TO TOS2;
   END;
   IF BTOTAG(I)/60 >= MAXU THEN DO;
   PUT FILE(L1) EDIT(' O') (A); GO TO TOS2;
   END;
   IF ELATAG(I)/60 >= MAXU THEN
   PUT FILE(L1) EDIT('WW')(A);
   ELSE DO;
   IF MERK1=1 THEN DO;PUT FILE(L1) EDIT('--')(A);GO TO TOS2; END;
   PUT FILE(L1) EDIT('  ')(A);
   END;
 TOS2: END;
   PUT FILE(L1) EDIT('=')(COL(12+4*IK),A);
   MAX1=MAX1-EINHMON;
   MAXU=MAX1-0.5*EINHMON;
   MAXO=MAX1+0.5*EINHMON;
   END;
   PUT FILE(L1) SKIP EDIT
   ('=','I',('--II' DO I=1 TO IK),'->=')(A,COL(9),A,(IK)(A),A);
   PUT FILE(L1) SKIP EDIT
   ('=DATUM',(MPTAG(I) DO I=1 TO IK),'=')(A,COL(10),(IK)(P'ZZZ9'),
   COL(12+4*IK),A);
   PUT FILE(L1) SKIP EDIT
   ('=',(TAGMON(I) DO I=1 TO IK),'=')
   (A,COL(10),(IK)(X(2),A),COL(12+4*IK),A);
   PUT FILE(L1) SKIP EDIT
   ('= BATCH **  TSO ++  OVERHEAD  O  WAIT WW  ,SUMME=ELAPSE, ',
   'SCHNITT:(BATCH+TSO+OVERHEAD) --','=',
   SUBSTR(GLEICH,1,12+4*IK))
   (A,A,COL(12+4*IK),A,SKIP,A);
   END SCHAU2;
   END CPU;
