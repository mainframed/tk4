1               EDV - HANDBUCH               01.76
-               MVSBLDG                        Z   33   1
-
-
-    DAS PROGRAMM  MVSBLDG  DIENT ZUM ANLEGEN VON GENERATION DATA
     GROUPS (GDG'S) IN OS-KATALOGEN UNTER MVS. AUSSERDEM KOENNEN
     BESTEHENDE GDG'S GELOESCHT ODER GEAENDERT WERDEN, OHNE DASS
     DIE DAZU GEHOERENDEN GENERATIONEN EXTRA ENTKATALOGISIERT WERDEN
     MUESSEN. GEAENDERT WERDEN KANN DIE MAXIMALE ANZAHL DER GENERATIONEN
     INNERHALB EINES GDG-INDEX UND DIE GDG-OPTION.
0    EINE VERGROESSERUNG DER MAXIMALEN ANZAHL HAT KEINEN EINFLUSS AUF
     DIE VORHANDENEN GENERATIONEN. IST BEI VERMINDERUNG DER MAX.
     ANZAHL DIE VORHANDENE ANZAHL DER KATALOGISIERTEN GENERATIONEN
     GROESSER, WERDEN DIE UEBERZAEHLIGEN GENERATIONEN AUTOMATISCH
     ENTKATALOGISIERT.
0    BEIM LOESCHEN EINES GDG-INDEX WERDEN ALLE GENERATIONEN ENTKATA-
     LOGISIERT. AUSSERDEM WERDEN  DER GENERATIONS-INDEX  SOWIE
     ALLE HOEHEREN INDEXSTUFEN -SOFERN SIE LEER SIND- ENTFERNT.
-    MVSBLDG IST EIN ABHAENGIGES MODUL UND KANN SOWOHL VON ASSEMBLER-
     ALS AUCH VON PL1-PROGRAMMEN AUFGERUFEN WERDEN. ES BENUTZT DIE
     ZUGRIFFSMETHODE BDAM. KLASSE-1-AENDERUNGEN SIND NICHT ERFORDERLICH.
-    FUER DEN AUFRUF WERDEN 4 PARAMETER BENOETIGT:
0    PARAMETER 1
        IST EIN 44 BYTES LANGES CHARACTER-FELD, DAS DEN VOLLSTAEN-
        DIGEN GDG-NAMEN ENTHALTEN MUSS. DER NAME
        SELBST DARF JEDOCH NICHT LAENGER ALS 35 STELLEN SEIN.
0    PARAMETER 2
        IST EIN 4 BYTES LANGES CHARACTER-FELD, DAS DIE MAXIMALE
        ANZAHL DER GENERATIONEN ENTHALTEN  MUSS.
        DIE ANZAHL MUSS RECHTSBUENDIG IM FELD STEHEN. FUEHRENDE
        NULLEN KOENNEN WEGGELASSEN WERDEN.
0    PARAMETER 3
        IST EIN 6 BYTES LANGES CHARACTER-FELD, WELCHES DIE GDG-OPTION
        ENTHALTEN MUSS. DIE OPTION MUSS LINKSBUENDIG IM FELD STEHEN.
        FOLGENDE OPTIONS SIND MOEGLICH:
0       BLANK          GDG-OPTION 'NO SCRATCH' UND 'NO EMPTY'
0       SCR            DIE SCRATCH-OPTION IST NUR FUER PLATTEN-DATEIEN
                       MOEGLICH. SIE BEWIRKT EIN AUTOMATISCHES
                       SCRATCHEN EINER ENTKATALOGISIERTEN DATEI.
1               EDV - HANDBUCH                01.76
-               MVSBLDG                         Z   33   2
-
-
-       EMP       EMPTY-OPTION. SIE BEWIRKT BEI UEBERLAUF DES
                  GDG-INDEX EIN ENTKATALOGISIEREN SAEMTLICHER IM
                  INDEX ENTHALTENEN GENERATIONEN.
0       EMPSCR )  SCRATCH- UND EMPTY-OPTION
        SCREMP )
0    PARAMETER 4
        IN DIESEM 8 BYTES GROSSEN CHARACTER-FELD WERDEN DEM BENUTZER
        DIE RETURN-CODES IN HEXADEZIMALEM DUMP-FORMAT ZUR VERFUEGUNG
        GESTELLT.
0       DAS RETURN-FELD HAT FOLGENDEN AUFBAU:
0       BYTE 0       UNBENUTZT.
0            1       RETURN-CODE DER LOG-ROUTINE
                     0  UPDATE LOG-DATEI ERFOLGREICH.
                     1  LOG-DATEI VOLL
                     2  I/O-ERROR LOG-DATEI
0            2 - 5   BDAM-EXCEPTION-CODE BEI I/O-FEHLERN, SONST 0
0            6 - 7   KATALOG-RETURN-CODES
0                    00   BLDG- ODER DELETE-FUNKTION ERFOLGREICH
0                    04   1) GDG-NAME LAENGER ALS 35 STELLEN
                          2) GDG-NAME ENTSPRICHT NICHT DER VORHANDENEN
                             INDEX-STRUKTUR
                          3) SYNTAX-FEHLER IM GDG-NAMEN
0                    08   MAXIMALE ANZAHL DER GENERATIONEN GROESSER
                          ALS 255.
0                    0C   GDG-OPTION FALSCH
0                    10   FEHLER BEI SVC 11 (TIME)
0                    14   KATALOG VOLL. KEINE FREIEN BLOECKE VERFUEGBAR.
0                    18   I/O-ERROR BEIM LESEN DES KATALOGS
0                    1C   I/O-ERROR BEIM UPDATE DES KATALOGS
0                    20   LOGISCHER FEHLER IM KATALOG. VERMUTLICH
                          PROGRAMMFEHLER IM MVSBLDG.
1               EDV - HANDBUCH                01.76
-               MVSBLDG                         Z   33   3
-
-
-    MASSNAHMEN BEI RC UNGLEICH 0
-    LOG-RETURN-CODE UNGLEICH 0 IST FUER DAS UPDATE DES KATALOGS
     UNKRITISCH. ALLE BLDG-FUNKTIONEN WERDEN AUSGEFUEHRT, NUR
     DAS FUEHREN DER LOG-DATEI WIRD UNTERDRUECKT.
0    RC = 1  LOG-DATEI MUSS NEU FORMATISIERT WERDEN.
     RC = 2  I/O-ERROR. BYTES 2 - 5 DES RETURN-FELDES ENTHALTEN
             DEN BDAM-EXCEPTION-CODE IN HEXADEZIMALEM DUMP-FORMAT
             (NUR WENN KATALOG-RC UNGLEICH 18,1C).
             DER BDAM-EXCEPTION-CODE SOLLTE ZU DIAGNOSTIK-ZWECKEN
             MIT AUSGEGEBEN WERDEN.
-    KATALOG-RETURN-CODES UNGLEICH 0
0    RC 04, 08, 0C UND 10 SIND FUER DEN KATALOG UNKRITISCH, DA BEI
             AUFTRETEN DIESER FEHLER NOCH KEIN UPDATE ERFOLGTE.
0    RC 14   KATALOG NOCH UNVERAENDERT. EINE REORGANISATION
             IST NOTWENDIG (SIEHE PROGRAMM MOVECVOL).
0    RC 18   LESEFEHLER. DER KATALOG IST NOCH UNVERAENDERT. WENN DER
             KATALOG PHYSISCH DEFEKT IST, IST EIN RESTORE BZW.
             EIN AKTIVIEREN DER BACKUP-KOPIE ERFORDERLICH.
             BYTES 2 - 5 DES RETURN-FELDES ENTHALTEN DEN BDAM-
             EXCEPTION-CODE IN HEXADEZIMALEM DUMP-FORMAT UND SOLLTEN
             ZU DIAGNOSTIK-ZWECKEN MIT AUSGEGEBEN WERDEN.
0    RC 1C   SCHREIBFEHLER. DER KATALOG IST U.U. TEILWEISE VERAENDERT.
             LOG-DATEI MIT PROGRAMM  LISTLOG  AUSWERTEN. RESTORE IST
             ERFORDERLICH, BZW. EIN AKTIVIEREN DER BACKUP-KOPIE.
             BYTES 2 - 5 DES RETURN-FELDES ENTHALTEN DEN BDAM-
             EXCEPTION-CODE IN HEXADEZIMALEM DUMP-FORMAT UND SOLLTEN
             ZU DIAGNOSTIK-ZWECKEN MIT AUSGEGEBEN WERDEN.
0    RC 20   LOGISCHER FEHLER. KATALOG IST U.U. TEILWEISE VERAENDERT.
             DUMP ERZEUGEN.
             LOG-DATEI MIT DEM PROGRAMM  LISTLOG  AUSWERTEN.
             EIN RESTORE IST ERFORDERLICH, BZW. EIN AKTIVIEREN DER
             BACKUP-KOPIE.
1               EDV - HANDBUCH                01.76
-               MVSBLDG                         Z   33   4
-
-
-    DIE LOG-DATEI.
0    MVSBLDG  SCHREIBT ALLE ZU VERAENDERNDEN KATALOG-BLOECKE
     IN EINE LOG-DATEI, UND ZWAR JEWEILS DEN ALTEN UND DEN NEUEN INHALT
     ZUSAMMEN MIT DER RELATIVEN SPURADRESSE (TTR) DES BLOCKS, DEM
     SCHLUESSEL, EINEM TIMESTAMP SOWIE EINEM 22 BYTES LANGEN KOMMENTAR.
     DIE LOG-DATEI IST BDAM-ORGANISIERT (OHNE SCHLUESSEL) UND KANN
     MIT DEM PROGRAMM LISTLOG FORMATISIERT GEDRUCKT WERDEN.
0    IST DIE LOG-DATEI VOLL (SIEHE RETURN-CODES), KANN SIE MIT
     MVSBLDG  FORMATISIERT WERDEN. EINE FORMATISIERUNG IST AUCH
     NACH NEUANLEGUNG UND BEI PERMANENTEN I/O-FEHLERN NOTWENDIG.
0    ANLEGEN DER LOG-DATEI:
0    //       EXEC PGM=IEFBR14
     //DD1    DD DSN=ANYNAME,UNIT=SYSDA,VOL=SER=SERIAL,
     //          DISP=(,KEEP ODER CATLG),SPACE=(SPACE)
0    SPACE: DER PLATZBEDARF DER LOG-DATEI HAENGT VON DER INTERNEN
            STRUKTUR DES KATALOGS AB. BEI UMFANGREICHEN INDEX-STUFEN
            MUSS ENTSPRECHEND MEHR PLATZ VORHANDEN SEIN, DA BEIM EIN-
            FUEGEN EINES EINTRAGS IN EINEN GROSSEN INDEX U.U. EINE
            GROESSERE VERSCHIEBUNG STATTFINDET.
            ES EMPFIEHLT SICH, DIE LOG-DATEI IN DER GROESSE DES
            KATALOGS ANZULEGEN.
-
-    ANWENDUNG DES PROGRAMMS  MVSBLDG
0    1) ANLEGEN EINER GDG
        PARAMETER 1:  NEUER VOLLSTAENDIGER GDG-NAME
        PARAMETER 2:  MAX. ANZAHL DER GENERATIONEN
        PARAMETER 3:  GEWUENSCHTE GDG-OPTION
0    2) AENDERN EINER BESTEHENDEN GDG
        PARAMETER 1:  NAME DER GDG (MUSS VORHANDEN SEIN)
        PARAMETER 2:  NEUE MAX. ANZAHL DER GENERATIONEN
        PARAMETER 3:  NEUE GDG-OPTION
1               EDV - HANDBUCH                01.76
-               MVSBLDG                         Z   33   5
-
-
-    3)  ENTFERNEN EINER GDG
         PARAMETER 1: NAME DER GDG (MUSS VORHANDEN SEIN)
         PARAMETER 2: 0000 ODER BLANK
         PARAMETER 3: BELIEBIGER INHALT
0    4)  FORMATISIEREN DER LOG-DATEI
         PARAMETER 1: GDGNAME = '*LOGFORM'
         PARAMETER 2 - 3: BELIEBIGER INHALT
-
0    ZUSAETZLICHE JCL-STATEMENTS
0    ES WERDEN ZWEI DD-STATEMENTS BENOETIGT, DIE DIE LOG-DATEI
     UND DEN KATALOG BESCHREIBEN.
0    //CTLG DD DSN=SYSCTLG,UNIT=SYSDA,VOL=SER=SERIAL,DISP=SHR
     //LOG  DD DSN=DSNAME,UNIT=SYSDA,VOL=SER=SERIAL,DISP=OLD
-
0    AUFRUF DES PROGRAMMS
0    AUFRUF DURCH EIN ASSEMBLER-PROGRAMM:
0              CALL  MVSBLDG,(ADR1,ADR2,ADR3,ADR4)
     ADR1      DC    A(PARM1)
     ADR2      DC    A(PARM2)
     ADR3      DC    A(PARM3)
     ADR4      DC    A(PARM4)
     PARM1     DS    CL44      GDG-NAME
     PARM2     DS    CL4       MAX.ANZAHL DER GENERATIONEN
     PARM3     DS    CL6       GDG-OPTION
     PARM4     DS    CL8       RETURN-CODE-FELD
0    AUFRUF DURCH EIN PL/1-PROGRAMM:
0              CALL   MVSBLDG(PARM1,PARM2,PARM3,PARM4) ;
               DCL    PARM1 CHAR(44) STATIC;
               DCL    PARM2 CHAR(4) STATIC;
               DCL    PARM3 CHAR(6) STATIC;
               DCL    PARM4 CHAR(8) STATIC;
1               EDV - HANDBUCH                01.76
-               MVSBLDG                         Z   33   6
-
-
-    HINWEIS: MVSBLDG MUSS MIT 'AC=1' IN EINE AUTORISIERTE
              BIBLIOTHEK GELINKT WERDEN.
-
-    AUFBAU DER LOG-DATEI
0    ORGANISATIONSFORM:   BDAM  OHNE SHLUESSEL
     BLOCKSIZE = 300
0    BYTES  0 -   2   RELATIVE SPUR-ADRESSE (TTR) DES KATALOG-BLOCKS
            3 -   5   STATUS. 'OLD' = ZUSTAND VOR AENDERUNG
                              'NEW' = ZUSTAND NACH AENDERUNG
            6 -  13   SCHLUESSEL.   8X'FF' BEI BELEGTEN BLOECKEN
                                    8X'00' BEI FREIEN BLOECKEN
           14 - 269   KATALOG-BLOCK
          270 - 273   DATUM, DEZIMAL GEPACKT IN DER FORM '00YYDDDS'
                      YY = JAHR, DDD = FABRIKTAG, S = VORZEICHEN
          274 - 277   UHRZEIT DES MVSBLDG-AUFRUFS IN DEZIMAL GEPACKTER
                      FORM OHNE VORZEICHEN 'HHMMSSTH'
                      HH = STUNDEN, MM = MINUTEN, SS = SEK.,
                      TH = HUNDERTSTEL SEK.
          278 - 299   KOMMENTAR
0    AUSSERDEM GIBT ES NOCH EINEN FORMAT-SATZ UND EINEN ENDE-SATZ.
0    DER FORMATSATZ IST DER 1. SATZ IN DER LOG-DATEI UND BESCHREIBT
     DIESE.
0    BYTES  0 -   2   '///' (DREI SCHRAEGSTRICHE)
            3 -   5   'FMT' BEDEUTET FORMAT-SATZ
            6 -   9   RELATIVE BLOCK-ADRESSE DES LETZTEN BLOCKS
           10 -  13   RELATIVE BLOCK-ADRESSE DES 1. FREIEN BLOCKS
           14 - 299   BINAER 0
0    DER ENDE-SATZ WIRD AM ENDE EINES MVSBLDG-AUFRUFS UNMITTELBAR
     VOR DEM RUECKSPRUNG ZUM CALLER GESCHRIEBEN.
0    BYTES  0 -   2   BINAER 0
            3 -   5   'END'
            6 - 277   BINAER 0
          278 - 299   ' BLDG ENDE.RC=CCCCCCCC'. CCCCCCCC = RETURN CODE
1               EDV - HANDBUCH                01.76
-               MVSBLDG                         Z   33   07
-
-
-    KATALOG-STRUKTUR
-    AUFBAU EINES VOLUME CONTROL BLOCKS (VCB)
0    VCB'S WERDEN FUER DATEIEN MIT MEHR ALS 5 VOLUMES ANGELEGT.
     1 VCB FASST 20 VOLUME ENTRIES
0    BYTES   0 -   1  ANZAHL DER VOLUMES
                      BEISPIEL EINE DATEI MIT 61 VOLUMES:
                      1.VCB = 61, 2.VCB = 41, 3.VCB = 21, 4.VCB = 01.
             2 - 241  BIS ZU 20 VOLUME-ENTRIES
                      EIN VOLUME-ENTRY IST 12 BYTES LANG
                      BYTES  0 -  3  DEVICE CODE
                             4 -  9  VOLUME SERIAL NUMBER
                            10 - 11  FILE SEQUENCE NUMBER
           242 - 251  BINAER 0
           252 - 254  RELATIVE SPUR-ADRESSE (TTR) DES NAECHSTEN VCB
                      ODER 3X'00'
           255        X'00'
-    AUFBAU EINES INDEX-BLOCKS
0    BYTES   0 -   1  ANZAHL DER BENUTZTEN BYTES IM BLOCK
             2 - 255  KATALOG-ENTRIES
-    AUFBAU DER VON MVSBLDG BENUTZTEN KATALOG-ENTRIES
-    1) VOLUME INDEX CONTROL ENTRY (VICE)
        DER VICE IST DER 1. EINTRAG IN EINEM VOLUME-INDEX (=HOECHSTER
        INDEX)
0       BYTES 0 -  7   X'0000000000000001'
              8 - 10   RELATIVE SPUR-ADRESSE (TTR) DES LETZTEN BLOCKS
                       IM VOLUME-INDEX
             11        X'05'   ES FOLGEN 5 HALBWORTE
             12 - 14   RELATIVE SPUR-ADRESSE (TTR) DES LETZTEN BLOCKS
                       IN DIESEM KATALOG
             15        X'00'
             16 - 18   RELATIVE SPUR-ADRESSE (TTR) DES 1. FREIEN BLOCKS
             19 - 21   3X'00'
1               EDV - HANDBUCH                01.76
-               MVSBLDG                         Z   33   8
-
-
-    2) INDEX CONTROL ENTRY (ICE)
        DER ICE IST DER 1. EINTRAG INNERHALB EINER INDEX-STUFE MIT
        AUSNAHME DES VOLUME-INDEX
0       BYTES 0 -  7   X'0000000000000001'
              8 - 10   RELATIVE SPUR-ADRESSE (TTR) DES LETZTEN BLOCKS
                       IN DIESEM INDEX
             11        X'03'   ES FOLGEN 3 HALBWORTE
             12 - 14   RELATIVE SPUR-ADRESSE (TTR) DES 1. BLOCKS IN
                       DIESEM INDEX
             15        ALIAS COUNT
             16 - 17   X'0000'
-    3) INDEX POINTER ENTRY (IPE)
        DER IPE ZEIGT ZUM 1.BLOCK EINES INDEX LEVELS
0       BYTES 0 -  7   INDEX-NAME
              8 - 10   RELATIVE SPUR-ADRESSE (TTR) DES 1. INDEX-BLOCKS
             11        X'00'   ES FOLGEN 0 HALBWORTE
-    4) INDEX LINK ENTRY (ILE)
        DER ILE IST DER LETZTE EINTRAG EINES JEDEN INDEX-BLOCKS
0       BYTES 0 -  7   8X'FF'
              8 - 10   RELATIVE SPUR-ADRESSE (TTR) DES NAECHSTEN BLOCKS
                       IN DIESEM INDEX ODER 3X'00'
             11        X'00'   ES FOLGEN 0 HALBWORTE
-    5) GENERATION INDEX POINTER ENTRY (GIPE)
        DER GIPE ZEIGT ZUM 1. BLOCK EINES GENERATION INDEX
0       BYTES 0 -  7   NAME DES GENERATION INDEX
              8 - 10   RELATIVE SPUR-ADRESSE (TTR) DES 1.BLOCKS
                       DES GENERATION INDEX
             11        X'02'   ES FOLGEN 2 HALBWORTE
             12        GDG-OPTION
                       X'00' = NO SCRATCH, NO EMPTY
                       X'01' = EMPTY
                       X'02' = SCRATCH
                       X'03' = EMPTY U. SCRATCH
             13        MAXIMALE ANZAHL DER GENERATIONEN (BINAER)
             14 - 15   ANZAHL DER KATALOGISIERTEN GENERATIONEN (BINAER)
1               EDV - HANDBUCH                01.76
-               MVSBLDG                         Z   33   9
-
-
-    6) DATA SET POINTER ENTRY (DSPE)
        FUER DATEIEN MIT BIS ZU 5 VOLUMES
0       BYTES 0 -  7   DATEI-NAME, NIEDRIGSTER LEVEL
              8 - 10   3X'00'
             11        X'07' - X'1F'   ES FOLGEN 7 - 31 HALBWORTE
             12 - 13   ANZAHL DER VOLUMES (BINAER)
          AB 14        BIS ZU 5 VOLUME-ENTRIES
                       EIN VOLUME-ENTRY IST 12 BYTES LANG.
                       BYTES 0 -  3   DEVICE CODE
                             4 -  9   VOLUME SERIAL NUMBER
                            10 - 11   FILE SEQUENCE NUMBER
-    7) VOLUME CONTROL BLOCK POINTER ENTRY (VCBPE)
        FUER DATEIEN MIT MEHR ALS 5 VOLUMES
0       BYTES 0 -  7   DATEI-NAME, NIEDRIGSTER LEVEL
              8 - 10   RELATIVE SPUR-ADRESSE (TTR) DES 1. VCB DIESER
                       DATEI
             11        X'01'   ES FOLGT EIN HALBWORT
             12 - 13   X'0000'
-
-
     DATENSICHERUNG DES OS-KATALOGS
-    ES IST EMPFEHLENSWERT, VOR DEM BLDG-STEP EINE BACKUP-KOPIE
     DES KATALOGS ZU ERSTELLEN. DIES KANN MIT DEM PROGRAMM  MOVECVOL
     DURCHGEFUEHRT WERDEN.
0    DER KATALOG WIRD MIT DER OPTION 'COPY' UNTER ANDEREM NAMEN
     AUF DAS GLEICHE VOLUME KOPIERT.
     TRITT WAEHREND DES KATALOG-UPDATES EIN ABNORMALES ENDE AUF ODER
     MVSBLDG ENDET MIT RC = 1C ODER 20, KANN DURCH  RENAME DIE
     BACKUP-KOPIE AKTIVIERT WERDEN. VOR DEM RENAME MUSS JEDOCH
     UNBEDINGT MIT SUPERZAP EINE AENDERUNG IM VTOC VORGENOMMEN WERDEN.
     DER OS-CVOL-PROCESSOR ERKENNT DEN NEUEN KATALOGS ANDERNFALLS
     NICHT ALS BESTEHENDEN KATALOG UND FORMATISIERT IHN, WENN
     ER IHN DAS ERSTE MAL BENUTZT.
1               EDV - HANDBUCH                01.76
-               MVSBLDG                         Z   33   10
-
-
-    DER ZAP SIEHT FOLGENDERMASSEN AUS:
0    //       EXEC PGM=AMASPZAP
     //SYSPRINT DD SYSOUT=*
     //SYSLIB DD DSN=FORMAT4.DSCB,UNIT=SYSDA,VOL=SER=SERIAL,DISP=SHR
     CCHHR ADRESSE DES DSCB
     VER 62 ........
     REP 62 0000FF..
-    DAS RENAME KANN AUCH MIT DEM PROGRAMM  VMP VORGENOMMEN WERDEN.
     VMP FUEHRT DIE VTOC-AENDERUNG AUTOMATISCH DURCH (NUR BEI
     RENAME AUF SYSCTLG).
-    ERFORDERLICHE JCL-STATEMENTS:
0    //RENOLD EXEC PGM=IEHPROGM
     //*  RENAME DES ALTEN KATALOGS
     //SYSPRINT DD SYSOUT=*
     //DD1 DD UNIT=DISK,VOL=SER=SERIAL,DISP=OLD
      RENAME DSNAME=SYSCTLG,NEWNAME=SYSCTLG.OLD,VOL=DEVTYPE=SERIAL
     //RENNEW EXEC PGM=VMP,PARM='REN,SERIAL,SYSCTLG.NEW,SYSCTLG'
     //* RENAME DES NEUEN KATALOGS UND VTOC-KORREKTUR
     //SYSUT1 DD UNIT=SYSDA,SPACE=(TRK,(2,1))
     //SYSUT2 DD UNIT=SYSDA,SPACE=(TRK,(2,1))
     //JCLIN DD DUMMY
     //JCLOUT DD SYSOUT=(*,INTRDR)
     //MSG DD SYSOUT=*
     //SYSIN DD DUMMY
-    RUECKFRAGEN AN: HERMANN NOACK
                     C/O IDUNA VERSICHERUNGEN
                         ABT. 97811
                     NEUE RABENSTRASSE 15-19
                     2000 HAMBURG 36
                     TEL. 040/44184-3173
