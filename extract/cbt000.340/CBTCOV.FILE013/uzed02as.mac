         TITLE 'GENERIEREN DER ASS.STMTS. FUER EINEN FCB'
         PRINT NOGEN
FCBGEN   INIT  BASIS=(2,3)
         OPEN  (OUTFILE,(OUTPUT),OUT,(OUTPUT),SYSPRINT,(OUTPUT),SYSIN)
         MVI   LINE,C' '
         MVC   LINE+1(L'LINE-1+L'OCARD),LINE
         MVI   CTLASA,C' '
         MVI   LCTAB1,X'FF'             INIT LINE/CHAN. TABLE
         MVC   LCTAB1+1(51),LCTAB1
         MVC   LCTAB0(4),=X'001F000F'   INIT LINE 1/CHANNEL 0
*
*              READ 1ST CARD AND INIT SCANNING
*
READ1    EQU   *
         GET   SYSIN,ICARD
         AP    CARDCNT,=P'1'
         LA    R5,ICARD                 INIT BEGINN OF SCAN
         LA    R6,1                     INIT INCREMENT
         LA    R7,ICARD+79              INIT END OF SCAN
*
*              LOOK FOR KOMMA OR NONBLANK CHARACTER
*
SUCH1    EQU   *
         CLI   0(R5),C','               IF KOMMA
         BE    INCREM1
         CLI   0(R5),C' '               IF BLANK
         BNE   TESTKEYW                 NO - TEST FOR A KEYWORD
INCREM1  EQU   *
         BXLE  R5,R6,SUCH1              INCREM / TEST IF END
         B     READ2
TESTKEYW EQU   *
         CLC   0(5,R5),=C'NAME='        IF NAME=
         BNE   IFLINE                   NO
*
*              NAME = FCBNAME
*
         LA    R5,5(,R5)                LIFT OVER KEYWORD
         BAL   R12,SUCHEND
         LTR   R8,R8                    TEST LENGTH OF PARM
         BP    IFNGT4                   POS. - GOTO IF NAME LONGER 4
         BM    NOEND1                   NEG. - GOTO NO END FOUND
         MVC   LINE+83(18),=C'NAMENSANGABE FEHLT'
ERROR1   EQU   *
         MVC   LINE(80),ICARD           MOVE CARD TO LINE
         MVI   SWERR,C'E'               INDICATE ERROR
         BAL   R12,PRINT                PRINT MESSAGE
         LA    R5,1(R8,R5)              INCREM. BY LENGTH + 1
INCR1    BXLE  R5,R6,SUCH1              GO ON SEARCHING
         B     READ2
NOEND1   EQU   *
         MVC   LINE+83(25),=C'NAMENSANGABE ZU LANG×KURZ'
         B     ERROR1
IFNGT4   EQU   *
         CH    R8,=H'3'                 IF NAME GT 4 (LENGTH - 1)
         BH    NOEND1
         CLI   FCBNAME2,C' '            IF ALREADY FOUND
         BE    MOVEN                    NO
         MVC   LINE+83(20),=C'NAMENSANGABE DOPPELT'
         B     ERROR1
MOVEN    EQU   *
         STC   R8,MOVENI+1              STORE LENGTH
MOVENI   MVC   FCBNAME2,0(R5)           MOVE 2ND PART OF FCBNAME
LIFT1    EQU   *                        INCREMENT BY LENGTH +1
         LA    R5,1(R8,R5)
         B     INCR1                    GOTO LIFT OVER KOMMA OR BLANC
*
*
IFLINE   EQU   *
         CLC   0(5,R5),=C'LINE='        IF LINE=
         BNE   IFLEFT                   NO
*
*              LINE = NO. OF LINES
*
         LA    R5,5(,R5)                LIFT OVER KEYWORD
         BAL   R12,SUCHEND
         LTR   R8,R8                    TEST LENGTH OF PARM
         BP    IFLGT3                   POS. - GOTO IF NUMBER LONGER 3
         BM    NOEND2                   NEG. - GOTO NO END FOUND
         MVC   LINE+83(16),=C'LINEANGABE FEHLT'
         B     ERROR1
NOEND2   EQU   *
         MVC   LINE+83(23),=C'LINEANGABE ZU LANG×KURZ'
         B     ERROR1
IFLGT3   EQU   *
         CH    R8,=H'2'                 IF (LENGTH-1) GREATER 2
         BH    NOEND2
         BAL   R12,TESTNUM              TEST NUMERIC
         MVC   LINE+83(26),=C'LINEANGABE NICHT NUMERISCH'
         B     ERROR1
*              COMING BACK WITH 10(R12) WHEN OK.
         CP    NOFLINES,=P'0'
         BE    IFLGT180
         MVC   LINE+83(18),=C'LINEANGABE DOPPELT'
         B     ERROR1
IFLGT180 EQU   *
         STC   R8,PACKLINE+1            STORE PARMLENGTH -1
         OI    PACKLINE+1,X'10'         INSERT LENGTH OF NOFLINES -1
PACKLINE PACK  NOFLINES,0(0,R5)         PACK NUMBER OF LINES
         CP    NOFLINES,=P'180'
         BNH   LINEOK
         MVC   LINE+83(21),=C'LINIENANZAHL ZU GROSS'
         B     ERROR1
LINEOK   EQU   *
         B     LIFT1
*
*
IFLEFT   EQU   *
         CLC   0(5,R5),=C'LEFT='        IF KEYWORD LEFT=
         BNE   IFRIGHT
*
*              LEFT= INDEXING LEFT
*
         LA    R5,5(,R5)                LIFT OVER KEYWORD
         MVI   SWLERI,C'L'              SET SWITCH
TESTLR   EQU   *                        TEST LEFT OR RICHT
         BAL   R12,SUCHEND
         LTR   R8,R8
         BNM   IFLRGT2                  POS. - GOTO IF LONGER 2
NOEND3   EQU   *
         MVC   LINE+83(34),=C'ANGABE BEI LEFT/RIGHT ZU LANG×KURZ'
         B     ERROR1
IFLRGT2  EQU   *
         CH    R8,=H'1'
         BH    NOEND3
         BAL   R12,TESTNUM
         MVC   LINE+83(30),=C'LEFT/RIGHT ANGABE NICHT NUMER.'
         B     ERROR1
*              WHEN OK COMING BACK WITH 10(R12)
         CP    LRINDEX,=P'0'
         BE    IFLRGT31
         MVC   LINE+83(25),=C'LEFT/RIGHT ANGABE DOPPELT'
         B     ERROR1
IFLRGT31 EQU   *
         STC   R8,PACKLR+1              STORE LENGTH OF L/R PARM
         OI    PACKLR+1,X'10'           INSERT LENGTH OF LRINDEX
PACKLR   PACK  LRINDEX,0(0,R5)
         CP    LRINDEX,=P'31'
         BNH   LRINDXOK
         MVC   LINE+83(28),=C'LEFT/RIGHT INDEXING ZU GROSS'
         B     ERROR1
LRINDXOK EQU   *
         B     LIFT1
*
*
IFRIGHT  EQU   *
         CLC   0(6,R5),=C'RIGHT='       IF KEYWORD RIGHT=
         BNE   IFDENS
*
*              RIGHT= INDEXING RIGHT
*
         LA    R5,6(,R5)                LIFT OVER KEYWORD
         MVI   SWLERI,C'R'              SET SWITCH
         B     TESTLR                   TEST
*
*
IFDENS   EQU   *
         CLC   0(5,R5),=C'DENS='        IF KEYWORD DENS=
         BNE   UNKNOWN
*
*              DENS= 6 OR 8 LINES PER INCH
*
         LA    R5,5(,R5)                LIFT OVER KEYWORD
         BAL   R12,SUCHEND
         LTR   R8,R8
         BZ    IFDENSDA
         MVC   LINE+83(24),=C'DENS-ANGABE ZU KURZ/LANG'
         LA    R5,1(R8,R5)              LIFT OVER WRONG FIELD
         B     ERROR1
IFDENSDA EQU   *
         CLI   DENSITY,C'0'             IF DENS ALREADY MET
         BE    IFDENS68                 NO
         MVC   LINE+83(19),=C'DENS-ANGABE DOPPELT'
         B     ERROR1
IFDENS68 EQU   *
         CLI   0(R5),C'6'               IF DENSITY = 6
         BE    DENSOK
         CLI   0(R5),C'8'               OR 8
         BE    DENSOK
         MVC   LINE+83(26),=C'DENS-ANGABE WEDER 6 NOCH 8'
         B     ERROR1
DENSOK   EQU   *
         MVC   DENSITY,0(R5)            MOVE DENSITY
         B     LIFT1
*
*              UNKNOWN KEYWORD
*
UNKNOWN  EQU   *
         MVC   LINE+83(25),=C'UNBEKANNTES SCHL<SSELWORT'
IDLE     EQU   *
         CLI   0(R5),C' '               IF BLANK
         BE    SUCH1
         CLI   0(R5),C','               IF KOMMA
         BE    SUCH1                    YES
         BXLE  R5,R6,IDLE
*
*              READ AND INTERPRET THE SECOND CARD
*
READ2    EQU   *
         MVC   SVCARD1,ICARD            SAVE FIRST CARD
         GET   SYSIN,ICARD
         AP    CARDCNT,=P'1'
         LA    R9,LCTAB1                INIT LINE/CHAN. TABLE
         LA    R5,ICARD                 INIT SCAN-POSITION
         LA    R7,ICARD+79              INIT END-POS. (COMPARAND)
INITHILF LA    R8,HILF                  INIT AUXIL. FIELD ADDR
         MVC   HILF,=3C' '              CLEAR AUX. FIELD
         MVC   AID,=3C'0'
SUCH2    EQU   *
         CLI   0(R5),C' '               IF BLANK
         BNE   IFNUM2
BXLE2    EQU   *
         BXLE  R5,R6,SUCH2
         B     TESTMUST
IFNUM2   EQU   *
         CLI   0(R5),C'0'               TEST FOR 0
         BL    IFKOMMA
         CLI   0(R5),C'9'               TEST FOR 9
         BH    IFKOMMA
         C     R8,=A(HILF+2)            IF ALREADY 3 CH. SHIFTED
         BH    SH4                      YES
         MVC   0(1,R8),0(R5)            SHIFT 1 CHAR.
         LA    R8,1(,R8)                INCR. HILFSFELD
BXLE3    EQU   *
         BXLE  R5,R6,IFNUM2             INCR. + TEST IF END
         B     TESTMUST
SH4      EQU   *
         MVC   LINE+83(25),=C'LINE/KANAL ANGABE ZU LANG'
ERROR2   EQU   *
         MVC   LINE(80),ICARD           ERROR-CARD
         MVI   SWERR,C'E'
         BAL   R12,PRINT                PRINT
IDLE2    CLI   0(R5),C' '               LOOK FOR NEXT NONBLANK CHAR.
         BE    SUCH2
         BXLE  R5,R6,IDLE2
         B     TESTMUST
IFKOMMA  EQU   *
         CLI   0(R5),C','               IF KOMMA
         BNE   IFBLANK
         CLC   HILF,=3C' '
         BNE   SHIFTLIN
         MVC   LINE+83(19),=C'LINIEN-ANGABE FEHLT'
         B     ERROR2
SHIFTLIN EQU   *
         BAL   R12,SHIFTLEF
         PACK  0(2,R9),AID              PACK LINE INTO TABLE
         CP    0(2,R9),NOFLINES         IF LINE > NO. OF LINES
         BNH   PACKLINC                 NO
         MVC   LINE+83(30),=C'KANALANG. HINTER LETZTER LINIE'
         B     ERROR2
PACKLINC EQU   *
         MVC   HILF,=3C' '              INIT AUXILIARY
         MVC   AID,=3C'0'                  FIELDS
         LA    R8,HILF                  INIT BEGIN OF AUX. FIELD
         B     BXLE3
IFBLANK  EQU   *
         CLI   0(R5),C' '               IF BLANK
         BE    CHANNEL
         MVC   LINE+83(39),=C'LINE/KANAL ANGABE WEDER NUM. NOCH KOMMA'
         B     ERROR2
CHANNEL  EQU   *
         CLC   HILF,=3C' '              IF CHANNEL GIVEN
         BNE   SHIFTCHA                 NO
         MVC   LINE+83(18),=C'KANAL-ANGABE FEHLT'
         B     ERROR2
SHIFTCHA EQU   *
         BAL   R12,SHIFTLEF
         PACK  2(2,R9),AID              PACK CHANNEL INTO TABLE
         CP    0(2,R9),=P'1'            IF 1ST LINE HAS 1ST CHANNEL
         BE    MOVETAB
         C     R9,=A(LCTABL-4)          IF LINE/CHAN.TABLE END
         BL    INCLCTAB                 NO - INCR. ADDRESS
         MVC   LINE+83(27),=C'ZUVIELE LINIE/KANAL ANGABEN'
         B     ERROR2
INCLCTAB EQU   *
         LA    R9,4(,R9)                INCREM LINE/CHAN TAB ADDR
         B     INITHILF
MOVETAB  EQU   *
         MVC   LCTAB0(4),LCTAB1         MOVE POS 1 TO POS 0 OF L/C TAB
         MVC   LCTAB1(4),=4X'FF'        CLEAR POS 1
         B     INITHILF
*
*              TEST NECESSARY PARAMETERS
*
TESTMUST EQU   *
         CLI   FCBNAME2,C' '
         BNE   IFLINEDA
         MVC   LINE+83(18),=C'NAME DES FCB FEHLT'
         MVC   LINE(80),SVCARD1         ERROR IN FIRST CARD
         MVI   SWERR,C'E'
         BAL   R12,PRINT
IFLINEDA EQU   *
         CP    NOFLINES,=P'0'
         BNE   OBDENSDA
         MVC   LINE+83(19),=C'ANZAHL LINIEN FEHLT'
         MVC   LINE(80),SVCARD1         ERROR IN FIRST CARD
         MVI   SWERR,C'E'
         BAL   R12,PRINT
OBDENSDA EQU   *
         CLI   DENSITY,C' '
         BNE   ENDIN
         MVI   DENSITY,C'6'             DEFAULT 6 LINES PER INCH
ENDIN    EQU   *
         CP    CARDCNT,=P'2'            IF TWO CARDS RECIEVED
         BE    GENERATE                 YES
         MVC   LINE(19),=C'MIND. 1 KARTE FEHLT'
         BAL   R12,PRINT
         MVI   SWERR,C'E'               INDICATE ERROR
*
*              GENERATE THE ASSEMBLER STATEMENTS
*
GENERATE EQU   *
         CLI   SWERR,C'E'               IF AN ERROR OCCURRED
         BE    CLOSE                    YES
         CLI   0(R9),X'FF'              IF L/C-TAB PTR TO EMPTY FIELD
         BNE   TESTLAST
         SH    R9,=H'4'
TESTLAST EQU   *
         CP    NOFLINES,0(2,R9)         IF LAST LINE HAS A CHANNEL
         BE    GENNAME
         ZAP   4(2,R9),NOFLINES         ENTER TOTAL NO. OF LINES AS
         ZAP   6(2,R9),=P'0'            CHANNEL 0 IN TABLE
*
*              NAME - CSECT CARD
*
GENNAME  EQU   *
         MVC   OLABEL,FCBNAME
         MVC   OOPCODE,=C'CSECT'        CSECT CARD WITH NAME
         BAL   R12,PUNCH
         MVC   OOPCODE,=C'DC   '
         MVC   OOPERAND(5),=C'X''00'''   NOT DEFAULT FCB
         MVC   OCOMM(15),=C'NOT DEFAULT FCB'
         BAL   R12,PUNCH
*
*              AL1(LENGTH OF FCB)
*
         CLI   SWLERI,C' '              IF INDEXING
         BE    GENAL1                   NO
         AP    AL1LINEP,=P'1'           TOTAL NO.OF LINES + 1
         MVC   OCOMM+10(16),=C'+ 1 FOR INDEXING'
GENAL1   EQU   *
         AP    AL1LINEP,NOFLINES        ADD NO. OF LINES
         UNPK  AL1LINEC,AL1LINEP        UNPACK
         OI    AL1LINEC+2,X'F0'         MAKE LAST DIGIT PRINTABLE
         MVC   OOPCODE,=C'DC   '        MOVE -DC-
         MVC   OOPERAND(4),=C'AL1('
         MVC   OOPERAND+4(3),AL1LINEC
         MVI   OOPERAND+7,C')'
         MVC   OCOMM-1(4),MASK
         ED    OCOMM-1(4),NOFLINES
         MVC   OCOMM+4(5),=C'LINES'
         BAL   R12,PUNCH
         MVC   OOPCODE(8),=C'DC    X'''
         CLI   SWLERI,C' '              IF INDEXING
         BE    IF8LINES                 NO
*
*              LEFT/RIGHT INDEXING
*
         MVC   OCOMM+14(4),MASK
         ED    OCOMM+14(4),LRINDEX
         CLI   SWLERI,C'R'              IF RIGHT INDEXING
         BE    SHRIGHT                  NO
         MVC   OCOMM(4),=C'LEFT'
         CP    LRINDEX,=P'16'           IF MORE THAN 16 POS.
         BL    LEFTLT16                 NO
         MVI   OOPERAND+2,C'5'          MOVE B'0101' = INDEX LEFT AND
*                                       16 POSITIONS
         SP    LRINDEX,=P'16'           SUBTRACT 16
         B     INDXBYTE
LEFTLT16 EQU   *
         MVI   OOPERAND+2,C'4'          MOVE B'0100' = INDEX LEFT
INDXBYTE EQU   *
         ZAP   DW,LRINDEX               TRANSLATE NO. OF INDEXING
         CVB   R6,DW                    POSITIONS (ONLY 1 -  15)
         LA    R5,INDEXTAB(R6)
         MVC   OOPERAND+3(1),0(R5)
         MVI   OOPERAND+4,C''''
         MVC   OCOMM+6(8),=C'INDEXING'
         MVC   OCOMM+19(9),=C'POSITIONS'
         BAL   R12,PUNCH
         B     IF8LINES
SHRIGHT  EQU   *
         MVC   OCOMM(5),=C'RIGHT'
         CP    LRINDEX,=P'16'           IF MORE THAN 16 POSITIONS
         BL    RIGTLT16                 NO
         MVI   OOPERAND+2,C'9'          MOVE B'1001' = INDEX RIGHT AND
*                                       16 POSITIONS
         SP    LRINDEX,=P'16'           SUBTRACT 16
         B     INDXBYTE
RIGTLT16 EQU   *
         MVI   OOPERAND+2,C'8'          MOVE B'1000' = INDEX RIGHT
         B     INDXBYTE
*
*              LINES PER INCH AND FIRST LINE
*
IF8LINES EQU   *
         MVC   OOPCODE(8),=C'DC    X'''
         MVC   OCOMM(1),DENSITY
         MVC   OCOMM+2(15),=C'LINES PER INCH /'
         CLI   DENSITY,C'6'             IF 6 LINES PER INCH
         BNE   DENS8                    NO
         MVI   OOPERAND+2,C'0'          6 LINES PER INCH
         B     CHLINE1
DENS8    EQU   *
         MVI   OOPERAND+2,C'1'          8 LINES PER INCH
CHLINE1  EQU   *
         CP    LCTAB0+2(2),=P'0'        IF CHAN ON LINE 1 = 0
         BNE   CHL1N0                   NO
         MVC   OCOMM+19(10),=C'NO CHANNEL'
         MVI   OOPERAND+3,C'0'
         B     INITLCTB
CHL1N0   EQU   *
         CP    LCTAB0+2(2),=P'13'       IF CHANNEL GT 12
         BL    CVTCH1
CHGT12   EQU   *
         MVC   LINE+83(23),=C'KANALANGABE GROESSER 12'
ERROR3   EQU   *
         MVI   SWERR,C'E'               ERROR
         MVC   LINE(80),ICARD           MOVE CARD TO OUTPUT
         BAL   R12,PRINT
         B     CLOSE
CVTCH1   EQU   *
         MVC   OCOMM+26(4),MASK
         ED    OCOMM+26(4),LCTAB0+2
         MVC   OCOMM+19(7),=C'CHANNEL'
         ZAP   DW,LCTAB0+2(2)           CONVERT CHANNEL ON LINE 1
         CVB   R6,DW
         STC   R6,OOPERAND+3            MOVE IT
         TR    OOPERAND+3(1),INDEXTAB
INITLCTB EQU   *
         MVI   OOPERAND+4,C''''
         BAL   R12,PUNCH
*
*              LINE WITH CHANNEL - EMPTY LINES  LOOP
*
         LA    R5,LCTAB0
CALCLEER EQU   *
         ZAP   HILFP,4(2,R5)            LINE OF NEXT CHANNEL
         SP    HILFP,0(2,R5)            - LINE OF THIS CHANNEL
         SP    HILFP,=P'1'              - 1 = NO. OF LINES WITHOUT CHAN
         BM    FOLGEF                   NEG. - FOLGEFEHLER
         BZ    IFTABEND                 ZERO - NEXT LINE AGAIN A CHAN.
         MVC   OOPCODE(8),=C'DC    XL'
         UNPK  HILF,HILFP
         OI    HILF+2,X'F0'
         MVC   OOPERAND+2(3),HILF
         MVC   OOPERAND+5(4),=C'''00'''
         MVC   OCOMM+30(4),MASK
         ED    OCOMM+30(4),HILFP
         MVC   OCOMM+35(5),=C'EMPTY'
         BAL   R12,PUNCH
IFTABEND EQU   *
         CLI   8(R5),X'FF'              IF LINE/CHAN TABLE END
         BE    LASTLC                   YES
         MVC   OOPCODE(9),=C'DC    X''0'  NO
         ZAP   DW,6(2,R5)               CONVERT CHANNEL
         CVB   R6,DW
         STC   R6,OOPERAND+3            MOVE CHANNEL
         CLI   OOPERAND+3,X'0C'
         BH    CHGT12                   CHANNEL GREATER 12
         TR    OOPERAND+3(1),INDEXTAB
         MVI   OOPERAND+4,C''''
         MVC   OCOMM(4),=C'LINE'
         MVC   OCOMM+4(4),MASK
         ED    OCOMM+4(4),4(R5)
         MVC   OCOMM+9(9),=C'/ CHANNEL'
         MVC   OCOMM+18(4),MASK
         ED    OCOMM+18(4),6(R5)
         BAL   R12,PUNCH
         LA    R5,4(,R5)
         B     CALCLEER
FOLGEF   EQU   *
         MVC   LINE+83(31),=C'LINIEN-NUMMER NICHT AUFSTEIGEND'
         B     ERROR3
*
*              LAST LINE AND END STATEMENT
*
LASTLC   EQU   *
         MVC   OOPCODE(9),=C'DC    X''1'  LAST LINE INDICATOR
         MVC   OCOMM(11),=C'LAST LINE /'
         CP    6(2,R5),=P'0'
         BE    LNOCH                    LAST NO CHANNEL
         MVC   OCOMM+12(7),=C'CHANNEL'
         MVC   OCOMM+19(4),MASK
         ED    OCOMM+19(4),6(R5)
         B     EDLAST
LNOCH    EQU   *
         MVC   OCOMM+12(10),=C'NO CHANNEL'
EDLAST   EQU   *
         ZAP   DW,6(2,R5)
         CVB   R6,DW
         STC   R6,OOPERAND+3
         CLI   OOPERAND+3,X'0C'
         BH    CHGT12
         TR    OOPERAND+3(1),INDEXTAB
         MVI   OOPERAND+4,C''''
         BAL   R12,PUNCH
         MVC   OOPCODE(3),=C'END'
         MVC   OOPERAND(8),FCBNAME
         BAL   R12,PUNCH
*
*              LINKAGE EDITOR NAME CARD
*
         MVC   OLABEL+1(4),=C'NAME'     PREPARE  NAME FCB2....(R)
         MVC   OLABEL+6,FCBNAME
         MVC   OLABEL+14(3),=C'(R)'
         PUT   OUT,OCARD
CLOSE    EQU   *
         CLOSE (OUTFILE,,OUT,,SYSPRINT,,SYSIN)
         CLI   SWERR,C'E'
         BE    EOJ4
         EOJ
EOJ4     EQU   *
         EOJ   CODE=4
*
*              SUBROUTINES
*
SUCHEND  ST    R5,STOREBEG              SEARCH END OF PARM  BLANK/KOMMA
SUCHL1   EQU   *
         CLI   0(R5),C' '               IF NEXT BLANK
         BE    FOUND1
         CLI   0(R5),C','               OR KOMMA MET
         BE    FOUND1
         BXLE  R5,R6,SUCHL1             INCREM / TEST IF END
         L     R8,=F'-1'                NO END FOUND
         BR    R12
FOUND1   EQU   *
         LR    R8,R5                    END ADDRESS +1
         S     R8,STOREBEG              MINUS START ADDR
         BCTR  R8,R0                    DECR. BY ONE
         L     R5,STOREBEG
         BR    R12                      BRANCH BACK
*
*
PRINT    EQU   *
PRINTF   NOP   PRINTL
         MVI   CTLASA,C'1'
         PUT   SYSPRINT,ZEILE
         MVI   CTLASA,C' '
         OI    PRINTF+1,X'F0'
PRINTL   EQU   *
         PUT   SYSPRINT,ZEILE
         MVI   LINE,C' '
         MVC   LINE+1(L'LINE-1),LINE
         BR    R12
TESTNUM  EQU   *                        TEST NUMERIC
         LA    R9,1(,R8)                     CALC. REAL LENGTH
         ST    R5,STOREBEG
TESTNUM2 EQU   *
         CLI   0(R5),C'0'
         BL    NOTNUM
         CLI   0(R5),C'9'
         BH    NOTNUM
         LA    R5,1(,R5)
         BCT   R9,TESTNUM2
         L     R5,STOREBEG
         B     10(R12)                  BRANCH BACK IF NUMERIC
NOTNUM   EQU   *
         L     R5,STOREBEG
         B     0(R12)                   BRANCH BACK IF OK
SAVSHIFT DS    3F
SHIFTLEF STM   R5,R7,SAVSHIFT
         LA    R5,HILF+2
         LA    R6,AID+2
         LA    R7,3
IFSHIFT  EQU   *
         CLI   0(R5),C' '
         BE    NOSHIFT
         MVC   0(1,R6),0(R5)
         BCTR  R6,R0
NOSHIFT  EQU   *
         BCTR  R5,R0
         BCT   R7,IFSHIFT
         LM    R5,R7,SAVSHIFT
         BR    R12
PUNCH    EQU   *
         PUT   OUTFILE,OCARD
         MVI   OCARD,C' '
         MVC   OCARD+1(79),OCARD
         BR    R12
*
*              DECLARATIONS
*
OUTFILE  DCB   DDNAME=OUTFILE,DSORG=PS,MACRF=(PM)
OUT      DCB   DDNAME=OUT,DSORG=PS,MACRF=(PM)
SYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=(PM),                    *
               RECFM=FBA,BLKSIZE=2660,LRECL=133
SYSIN    DCB   DDNAME=SYSIN,DSORG=PS,MACRF=(GM),EODAD=ENDIN
ZEILE    DS    0CL133
CTLASA   DS    CL1
LINE     DS    CL132
OCARD    DS    0CL80
OLABEL   DS    CL8
         DS    CL1
OOPCODE  DS    CL5
         DS    CL1
OOPERAND DS    CL14
OCOMM    DS    CL51
ICARD    DS    CL80
LCTAB0   DS    2PL2                     LINE/CHAN. TABLE (1ST LINE)
LCTAB1   DS    26PL2                    LINE/CHAN. TABLE (FROM 2ND)
LCTABL   DC    4X'FF'                   END OF TABLE
*        1 ELEM = 2 FIELDS, 1ST = LINE, 2ND = CHANNEL
STOREBEG DS    F
SWERR    DC    CL1' '                   IS E WHEN AN ERROR OCCURRED
FCBNAME  DS    0CL8
FCB2     DC    CL4'FCB2'
FCBNAME2 DC    CL4' '                   SECOND PART OF NAME
NOFLINES DC    PL2'0'                   NO. OF LINES OF FCB
SWLERI   DC    CL1' '                   SW LEFT OR RIGHT, IS L OR R
LRINDEX  DC    PL2'0'                   NO. OF POS. INDEXING LEFT/RIGHT
DENSITY  DC    CL1'0'                   LINES PER INCH, IS 6 OR 8
HILF     DC    CL3' '                   AUXIL. FIELD FOR LINE/CHAN
AID      DC    CL3'0'                      TO SHIFT RIGHT
AL1LINEP DC    PL2'0'                   TOTAL LINES PACKED
AL1LINEC DS    CL3                      DTO. CHARACTERS
INDEXTAB DC    C'0123456789ABCDEF'
DW       DS    D
HILFP    DS    PL2
MASK     DC    X'40202120'
CARDCNT  DC    PL1'0'
SVCARD1  DS    CL80                     SAVE OF FIRST CARD
         LTORG
         END   FCBGEN
