* STAND 05/20/81
***********************************************************************
*                                                                     *
*   PROGRAMM   = UPDATE                                               *
*                                                                     *
*   AUFRUF     = CALL UPDATE,(ERR,ARGLIST)                            *
*        F       ERR     = RETURNCODE = 0 KEIN FEHLER                 *
*                                     = 1 UPDATE NICHT ERLAUBT        *
*                                     = 2 ARGLIST NICHT GANZ BEARBEITET
*                                     = 3 I/O-ERROR                   *
*        A       ARGLIST = ADRESSE DER ARGUMENTENLISTE, DIE VOM       *
*                          DIE ABSTIMMUNG AUFRUFENDEN PROGRAMM        *
*                          UEBERGEBEN WIRD                            *
*                                                                     *
*   ZWECK      = EINFUEGEN DER ABSTIMMSUMMEN ALS NEUE PERIODE IN      *
*                DIE INITIALISIERTEN SAETZE DER ABSTIMMSUMMEN-DATEI   *
*                                                                     *
***********************************************************************
         PRINT NOGEN
UPDATE   CSECT
         AREG
RA       EQU   R11
RS       EQU   R10
         XSAVE R12,SAVE,UPDATE
         LR    R9,R1
         SPACE 1
         USING DATAB,RA
         USING DSTAB,RS
         L     RA,PATAB                 --> ATAB
         L     RS,PSTAB                 --> 1.STAB
         SPACE 1
         L     R3,0(R1)                 --> RETURNCODE
         ST    R3,RETADR
         CALL  CENQAST,(ENQKZ)
         CLI   AUPDTE,SUYES
         BNE   FHL3DRU
         CALL  VSAMIO,(OPEN)
         LTR   R15,R15
         BNZ   FHL3
         B     START                    UPDATE GENERELL ERLAUBT
         SPACE 1
FHL3DRU  EQU   *
         MVI   AUPDTE,SUNO
         MVC   DRUBER2+19(10),=CL10'ERLAUBT :'
         SR    R1,R1
         IC    R1,ACCT        URSACHE
         SLA   R1,5           *32
         A     R1,PTXTUPDT    -->TEXT
         MVC   DRUBER2+29(32),0(R1)
         CALL  DRUFEHL,(ERR,DRUBER2),VL
         MVC   ERR,=F'1'
         B     RETURN1
         SPACE 1
START    EQU   *
         L     R3,PBZEIT               --> BERICHTSZEIT
         B     START10
         CLC   0(15,R3),=CL15' '       --> BERICHTSZEIT
         BNE   START1
START10  EQU   *
         MVC   ZEITZWI(10),DATUM       MASCHINENTAG
         MVC   ZEITZWI+10(5),=CL5' (M)'
         B     START2
START1   EQU   *
         MVC   ZEITZWI,0(R3)           BERICHTSZEIT
START2   EQU   *
         LA    R7,DRUBER1+35            -->1.POS-NR IN DRUBER1
         ST    R7,PDRUBER1
         LA    R7,DRUBER2+35            -->1.POS-NR IN DRUBER2
         ST    R7,PDRUBER2
*  ARGUMENTENADRESSEN BZW. ARGUMENTE ZWISCHENSPEICHERN
         L     R3,RETADR
         XC    0(4,R3),0(R3)            RETURNCODE = 0
         L     R3,4(R9)                 -->AUFRUFARGUMENTENLISTE-ADR.
         L     R3,0(R3)                 -->AUFRUFARGUMENTENLISTE
         MVI   ARGTYP,C'0'
         LTR   R3,R3                    -->ARGLISTE = 0 -->
         BZ    ARGOK                    UPDATE FUER ALLE SUMMEN
         L     R4,0(R3)                 --> ARGTYP (COBOL
         CLI   ASPRACHE,PL1
         BNE   NOPL12
         L     R4,0(R4)                 --> ARGTYP (PL/1)
NOPL12   EQU   *
         MVC   ARGTYP,0(R4)             ARGTYP ZWISCHENSPEICHERN
         OI    ARGTYP,X'F0'             EINHEITLICHES VORZEICHEN
         SPACE 1
ARGOK    EQU   *
         ZAP   ARGZAE,=P'0'
         CLI   ARGTYP,ARGALL
         BE    ALLSUM                   UPDATE VON ALLEN SUMMEN
         LA    R4,4(R3)                 --> ADR.1.ABST.SUM
         ST    R4,REG1P4
         ZAP   ARGANZ,=P'0'             ANZAHL SUMMEN = 0
LOOPV    EQU   *   ANZAHL DER ZU VERGLEICHENDEN SUMMEN FESTSTELLEN
         AP    ARGANZ,=P'1'             ANZAHL + 1
         TM    0(R4),X'80'
         BO    LOOP1                    LETZTE ADRESSE
         LA    R4,4(R4)                 --> NAECHSTE ADRESSE
         B     LOOPV
ALLSUM   EQU   *
         ZAP   ARGANZ,=P'999'           ANZAHL = HIGH VALUE
         SPACE 2
*  SCHLEIFE UEBER ALLE ABSTIMMSUMMEN (STAB)
*
LOOP1    EQU   *
         CLC   SNEXT,=F'-1'
         BE    ENDE                     STAB DURCHSUCHT
         SPACE 1
         CLI   ARGTYP,ARGALL
         BE    ARGFOUND                 UPDATE FUER ALLE ABST.SUMMEN
         L     R3,REG1P4
LOOPARG  EQU   *
         L     R4,0(R3)                 --> SUM.INDEX BEI COBOL-AUFRUF
         CLI   ASPRACHE,PL1
         BNE   NOPL1
         L     R4,0(R4)                 --> SUM.INDEX BEI PL/1-AUFRUF
NOPL1    EQU   *
         CLI   ARGTYP,ARGTAB
         BE    VERTAB
         CLC   SPOS,0(R4)               POSITIONS-NR VERGLEICHEN
         BE    ARGFOUND                 SUMME SOLL VERGL.WERDEN
         BH    LOOPARGE
         BL    LOOP1E1
VERTAB   EQU   *
         CLC   SIX,0(R4)                TABELLEN-INDEX VERGLEICHEN
         BE    ARGFOUND
         BL    LOOP1E1
LOOPARGE EQU   *
         TM    0(R3),X'80'
         BO    ENDE                     LETZTE AUFRUF-EINTRAGUNG
         LA    R3,4(R3)
         ST    R3,REG1P4                --> NAECHSTES ARGUMENT
         B     LOOPARG
*  UPDATE DER ABSTIMMSUMME SOLL DURCHGEFUEHRT WERDEN
ARGFOUND EQU   *
         AP    ARGZAE,=PL1'1'           ZAEHLER DER BEARBEITETEN ARG.
         CLI   SUPDTE,SUYES
         BNE   LOOP1E1                  UPDATE FUER SUMME NICHT ERLAUBT
         CLI   SSUMDA,SAOK
         BE    SUMOK                    ABST.SUM. STEHT IN STAB
         LA    R3,SSUM
         BAL   R2,MVCABST               ABST.SUM --> STAB
         MVI   SSUM,SAOK                SUMME IN STAB
SUMOK    EQU   *
         MVC   ZPOS,SPOS
         MVC   ZAST,AASTC
         LA    R3,ZEITZWI
         LA    R4,SSUM
         CALL  PUTASUM,(ZAST,(R3),(R4))
         SLA   R15,2                    RETURNCODE * 4
         B     *+4(R15)
         B     PUTOK                    OK
         B     FHL1                     ABST.SUM NICHT AUF DATEI
         B     PUTOK                    OK
         B     FHL3                     ASTSUM FEHLT
         B     FHL4                     I/O FEHLER LESEN
         B     FHL4                     I/O FEHLER SCHREIBEN
         B     FHL31                    ASTLOG FEHLT
         SPACE 1
FHL3     EQU   *
         MVI   ADCBSW,DDFEHLT           DD-KARTE ASTSUM FEHLT
         MVI   ACCT,12        ASTSUM FEHLT
         B     FHL3DRU
FHL31    EQU   *
         MVI   ACCT,11        ASTLOG FEHLT
         MVI   AUPDTE,SUNO              UPDATE GENERELL NICHT MOEGLICH
         B     FHL3DRU
         SPACE 1
FHL1     EQU   *
         BAL   R8,CALLDRUN
         B     LOOP1E1
         SPACE 1
FHL4     EQU   *
         BAL   R8,CALLDRUN
         MVC   ERR,=F'3'                I/O-ERROR
         B     LOOP1E1
         SPACE 1
PUTOK    EQU   *
         BAL   R8,CALLDRUJ
LOOP1E1  EQU   *         DIESE STAB-EINTRAGUNG BEARBEITET
         CLI   ARGTYP,ARGALL
         B     LOOP1E
         L     R3,REG1P4                --> LFD.ARGUMENT
         TM    0(R3),X'80'
         BO    ENDE                     LETZTES ARGUMENT BEARBEITET
         LA    R3,4(R3)
         ST    R3,REG1P4                --> NAECHSTES ARGUMENT
LOOP1E   EQU   *
         L     RS,SNEXT
         B     LOOP1
         SPACE 2
*  A B S C H L U S S
*
ENDE     EQU   *
         CLI   DRUBER1+38,C' '
         BE    ENDE1                    DRUBER1 LEER
         LA    R5,PDRUBER1
         LA    R6,DRUBER1
         BAL   R8,CALLDRU2              DRUBER1 DRUCKEN
ENDE1    EQU   *
         CLI   DRUBER2+38,C' '
         BE    ENDE2                    DRUBER2 LEER
         LA    R5,PDRUBER2
         LA    R6,DRUBER2
         BAL   R8,CALLDRU2              DRUBER2 DRUCKEN
ENDE2    EQU   *
         CLI   ARGTYP,ARGALL
         BE    RETURN
         CP    ARGZAE,ARGANZ
         BE    RETURN                   UPDATE FUER ALLE ANGEFORD.
*                                       SUMMEN DURCHGEFUEHRT
         MVC   ERR,=F'16'               ARG.LISTE KONNTE NICHT ABGEARB.
         CALL  DRUFEHL,(ERR),VL         WERDEN
         MVC   ERR,=F'2'
         SPACE 1
RETURN   EQU   *
         CALL  VSAMIO,(CLOSE)
RETURN1  EQU   *
         CALL  CDEQAST
         L     R3,RETADR
         MVC   0(4,R3),ERR              RETURNCODE
         XRETURN
         SPACE 2
CALLDRUJ EQU   *
         MVI   SUPDTE,SUOK             UPDATE DURCHGEFUEHRT
         LA    R6,DRUBER1
         LA    R5,PDRUBER1
         B     CALLDRU1
CALLDRUN EQU   *
         MVI   SUPDTE,SUIMPOS          UPDATE NICHT DURCHGEFUERT
         LA    R6,DRUBER2
         LA    R5,PDRUBER2
CALLDRU1 EQU   *
         L     R7,0(,R5)
         MVI   0(R7),C','
         MVC   2(2,R7),ZPOS             POS-NR --> DRUBER
         MVC   28(8,R6),ZAST
         LA    R7,4(,R7)
         LA    R4,77(,R6)
         CR    R7,R4
         BL    CALLDRU3                 ZEILE NICHT VOLL
CALLDRU2 EQU   *
         MVC   ERR,=F'15'
         CALL  DRUFEHL,(ERR,(R6)),VL
         MVI   35(R6),C' '              ZEILE LOESCHEN
         MVC   36(43,R6),35(R6)
         LA    R7,35(R6)
CALLDRU3 EQU   *
         ST    R7,0(,R5)                --> NAECHSTE POS-NR IN DRUBER
         BR    R8
         SPACE 2
         PRINT GEN
         MVCABST
         SPACE 2
*  D E F I N I T I O N E N
*
REG1P4   DS    A              --> SUMMENINDIZES
RETADR   DS    A              --> RETURNCODE
PDRUBER1 DS    A
PDRUBER2 DS    A
PTXTUPDT DC    V(TXTUPDT)     -->TEXTE
ERR      DS    F
PATAB    DC    V(ATAB)        --> ATAB
ARGZAE   DS    PL3            ANZ.D.BEARBEITETEN SUMMEN
ARGANZ   DS    PL3            ANZ.SUMMEN IN AUFRUFLISTE
ARGTYP   DS    CL1
ARGALL   EQU   C'0'           ALLE SUMMEN VERGLEICHEN
ARGTAB   EQU   C'1'           SUMMEN MIT TABELLEN-INDEX BESCHRIEBEN
ARGPOS   EQU   C'2'           SUMMEN MIT POSITIONS-NR BESCHRIEBEN
DRUBER1  DC    CL80'EINSPEICHERN DURCHGEFUEHRT'
DRUBER2  DC    CL80'EINSPEICHERN NICHT MOEGLICH'
ZAST     DS    CL8                     ) ABSTIMM-
ZPOS     DS    CL2                     ) SUM.NR
OPEN     DC    H'0'
CLOSE    DC    H'12'
ENQKZ    DC    CL1'E'
ZEITZWI  DS    CL15
         MATAB
         MSTAB
         END
