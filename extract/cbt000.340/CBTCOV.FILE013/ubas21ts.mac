* STAND 05/20/81
***********************************************************************
*                                                                     *
*    PROGRAMM  = PUTASUM                                              *
*                                                                     *
*    AUFRUF    = CALL PUTASUM,(ANR,BZT,WERT)                          *
*        CL10    ANR  = ABSTIMMSUMMEN-NR, FUER DIE NEUE PERIODENSUMME *
*                       AN SATZ ANZUFUEGEN IST                        *
*        CL15    BZT  = BERICHTSZEIT                                  *
*        PL10    WERT = ABSTIMMSUMME                                  *
*                RETURNCODE IM REGISTER 15                            *
*                     = 0 OK                                          *
*                     = 1 ABST.SUM.SATZ NICHT AUF DATEI               *
*                     = 3 DD-KARTE FEHLT                              *
*                     = 4 I/O-FEHLER BEIM LESEN                       *
*                     = 5 I/O-FEHLER BEIM SCHREIBEN                   *
*                     = 6 DD-KARTE ASTLOG FEHLT                       *
*    ZWECK     = ABSTIMMSUMME FUER NEUE PERIODE AN EXISTIERENDEM      *
*                ABST.SUM.SATZ ANFUEGEN UND AELTESTE PERIODE ENT=     *
*                FERNEN                                               *
*
*        LOGDATEI  DAS SCHREIBEN IN 'ASTSUM' IST NUR ERLAUBT,
*              WENN DIE DATEI 'ASTLOG' ZUGEORDNET IST.
*              SIE IST EINE ZENTRALE DATEI, IN DIE ALLE
*              VERAENDERUNGEN AUF 'ASTSUM' MIT MOD ANGEHAENGT
*              WERDEN.
*
*              BEFINDET SICH 'ASTSUM' AUF EINEM SHARED DEVICE UND WIRD
*              VON MEHREREN SYSTEMEN AUF SIE ZUGEGRIFFEN,
*              MUSS FUER JEDES SYSTEM EINE EIGENE LOGDATEI
*              ANGELEGT WERDEN.
*              UM EINDEUTIGE NAMEN FUER 'ASTLOG' ZU HABEN,
*              FALLS DIESE EBENFALLS AUF SHARED DEVICE LIEGEN,
*              FUEGT 'PUTASUM' AN DEN DSNAMEN LAUT DDKARTE
*              EINE 2-STELLIGE SYSTEM-ID (AUS SMCA) AN.
*
*              DAS ERWEITERN DES DSNAMES UNTERBLEIBT,
*              WENN IN 'ASWITCH' NICHT 'LOGID' GESETZT.
*              (SETZTEN ASWITCH IN PRUEFUPD)
***********************************************************************
PUTASUM  CSECT
         XSAVE 12,SAVE,PUTASUM
         AREG
         SPACE 2
         USING DATAB,R7
         L     R7,PATAB                --> ATAB
         LR    R11,R1                   AUFRUFLISTE ZWISCHENSPEICHERN
         XC    ERR,ERR
         USING DASATZ,R9
*  IM JFCB VON ASTLOG DISP=SHR DURCH DISP=MOD ERGAENZEN
         RDJFCB (ASTLOG,(OUTPUT))
         NI    JFCB+52,X'F7'           IN JOBQUEUE ZURUECKSCHR.
         OI    JFCB+76,X'80'           MOD-BIT
         TM    KZ,1
         BO    OPNLOG1        NICHT 1. AUFRUF
         MVI   KZ,1
         NI    JFCB+87,X'0F'
         OI    JFCB+87,X'80'  MOD-BIT
**************************************
         TM    ASWITCH,ALOGID
         BZ    OPNLOG         SYSTEM-ID NICHT ANFUEGEN
**************************************
         L     R4,16                    -->CVT
        L     R4,196(R4)                -->SMCA
*  SYSTEM-IDENTIFICATION ALS ERWEITERUNG DES DSNAME VON ASTLOG
*  ANFUEGEN Z.B. SYS1.ASTLOG MASCH 02 --> SYS1.ASTLOG02
         LA    R5,JFCB
         LA    R6,40          MAX LAENGE DSNAME
LPX      EQU   *  ENDE DES ASTLOG DSNAME SUCHEN
         CLI   0(R5),C' '
         BE    LPXE
         LA    R5,1(R5)
         BCT   R6,LPX
LPXE     EQU   *  ENDE DES DSNAME
         MVC   0(2,R5),16(R4)    SYSTEM-ID ANHAENGEN
OPNLOG   EQU   *                .
         B     OPNLOG1
         CALL  CENQAST,(KE)
OPNLOG1  EQU   *
         OPEN  (ASTLOG,(OUTPUT)),TYPE=J  LOGBAND
         TM    ASTLOG+48,X'10'
         BNZ   LOGOK1                  OPENED
         MVC   ERR,=F'6'               DD-KARTE ASTLOG FEHLT -->
         BAL   R10,DEQ                 KEIN UPDATE MOEGLICH
         B     RETURN
LOGOK1   EQU   *
*  OPEN  ASTSUM
         B     DCBOK
         CALL  VSAMIO,(OPEN)
         LTR   R15,R15
         BZ    DCBOK
         ST    R15,ERR
         BAL   R10,CLSLOG               DEQUEUE
         B     RETURN
DCBOK    EQU   *
* SATZ VOM ASTSUM-DATEI LESEN LAUT ABSTIMMSUM-NR.
         L     R3,0(R11)                --> ABST.SUM-NR
         CALL  VSAMIO,(GET,(R3))
         LTR   R15,R15
         BZ    INOK
         SPACE 1
         ST    R15,ERR
         B     FHLIO
         SPACE 2
INOK     EQU   *
* ABST.SUMME IN SATZ EINFUEGEN
         L     R4,4(R11)                --> BERICHTSZEIT
         L     R9,PSATZ       -->I/O AREA
         MVC   LOGSATZ+8(VORLN),LFLAG   VORSPANN
         LH    R3,NPER                  ANZAHL PERIODEN
         BCTR  R3,0
         MH    R3,=H'26'
         LA    R9,0(R3,R9)              --> JUENGSTE PERIODE
         MVI   XFLAG,WIEDER            WIEDERHOLUNGSLAUF
         CLI   AREPEAT,RNO             KEINE WIEDERHOLUNG
         BE    NOWIEDER
         CLI   AREPEAT,RYES            WIEDERHOLUNG
         BE    WIEDERH
*              PRUEFUNG AUF WIEDERHOLUNG
         CLC   BERZT,0(R4)              BERICHTSZEIT-VERGLEICH
         BE    WIEDERH                  GLEICH --> WIEDERHOLUNGSLAUF
NOWIEDER EQU   *
         MVI   XFLAG,NEU               ADD
         L     R9,PSATZ
         LR    R1,R3          RETTEN
         SPACE 1
*  AELTESTE PERIODE UEBERSPEICHERN D.H. SHIFT NACH LINKS
         LA    R2,PERDEF      EMPFANGSFELD
         LA    R4,PEREND      SENDEFELD
         LR    R5,R3          LAENGE
         MVCL  R2,R4
         LA    R9,0(R1,R9)              --> NEUE EINTRAGUNG
WIEDERH  EQU   *
         L     R4,4(R11)
         MVC   BERZT,0(R4)              BERICHTSZEIT --> NEUE EINTR.
         MVC   FLAG,XFLAG
         L     R4,8(R11)                --> ABSTIMMSUMME
         MVC   AWERT,0(R4)              ABST.SUMME --> NEUE EINTR.
         L     R3,0(R11)                --> ABST.SUM.NR
         CALL  VSAMIO,(PUT,(R3))
         SPACE 1
         LTR   R15,R15
         BZ    OUTOK
         ST    R15,ERR
         B     FHLIO
OUTOK    EQU   *
         MVC   LOGSATZ+8+VORLN(PERLN),PERDEF
         LA    R9,LOGSATZ+8
         MVC   LFLAG+1(1),XFLAG        VORGANGSKENNUNG
         MVC   NPER,=H'1'              BEI A  PERIODE = +1
         CLI   XFLAG,NEU
         BE    PUTLOG
         XC    NPER,NPER               BEI W  PERIODE = 0
PUTLOG   EQU   *
         TIME  DEC                     UHRZEIT UND DATUM
         STM   R0,R1,LOGSATZ           (GEPACKT) ANFUEGEN
         OI    LOGSATZ+3,X'0F'
         PUT   ASTLOG,LOGSATZ
FHLIO    EQU   *
         BAL   R10,CLOSE010
RETURN   EQU   *
         L     15,ERR
         XRETURN (R15)
         SPACE 1
CLOSE010 EQU   *
         B     CLSLOG
         CALL  VSAMIO,(CLOSE)
         LTR   R15,R15
         BZ    CLSLOG
         ST    R15,ERR
CLSLOG   EQU   *
         CLOSE (ASTLOG)                LOGBAND
DEQ      EQU   *
         BR    R10
         CALL  CDEQAST
         BR    R10
         SPACE 2
* DEFINITIONEN
PSATZ    DC    V(ASTSATZ)
PATAB    DC    V(ATAB)                 -->ATAB
KE       DC    CL1'E'
ERR      DS    F
KZ       DC    X'00'
MVCPER   MVC   PERDEF(0),PEREND
         DS    0F
XFLAG    DS    CL1
OPEN     DC    H'0'
GET      DC    H'4'
PUT      DC    H'8'
CLOSE    DC    H'12'
         SPACE 1
ASTLOG   DCB   DSORG=PS,MACRF=(PM),DDNAME=ASTLOG,EXLST=EXLST
JFCB     DC    176XL1'FF'       .
EXLST    DS    0F
         DC    X'87'
         DC    AL3(JFCB)
         LTORG
         MATAB
         MASATZ
PUTASUM  CSECT
         DS    0F
LOGSATZ  DS    CL(8+VORLN+PERLN)
         END
