 TITLE '--   I E F S E P R 2   --JOB SEPARATOR ROUTINE FOR MVT/MFT2'
         PRINT NOGEN
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* CHARACTERS, AND INSERTS AN I.D. BLOCK ON THE TOP LINE AFTER THE     *
* JOBNAME.  THE FIRST LINE CONTAINS THE JOBNAME; THE SECOND, THE      *
* ACCOUNT NUMBER; THE THIRD, THE PROGRAMMER NAME, AND THE FOURTH,     *
* THE TIME AND DATE                                                   *
*                                                                     *
*      INPUT  --                                                      *
*                                                                     *
*              AN ADDRESS IN REG1 POINTS TO STD. IEFSEPAR PARMLIST.   *
*              R6 POINTS TO IEFSD078 PARM LIST, WHICH HAS THE         *
*              FIRST SMB POINTER AT +14 INTO THE PARM LIST.           *
*                                                                     *
*      OUTPUT --                                                      *
*                                                                     *
*        JOB SEPARATOR PAGES PRINTED WITH BLOCK CHARACTERS            *
*        WITH JOBNAME, ACCOUNT NUMBER, PROGRAMMER NAME, AND           *
*        TIME/DATE ON EACH PAGE.  IT USES IEFSD195, A SPECIAL         *
*        BLOCK CHARACTER ROUTINE TO FORMAT THE OUTPUT LINES IN        *
*        A FASHION SIMILAR TO IEFSD095, THE IBM-SUPPLIED BLOCK        *
*        CHARACTER ROUTINE.                                           *
*                                                                     *
*      EXITS --                                                       *
*                                                                     *
*        EXIT IS MADE VIA A 'BR 14' BACK TO IEFSD078, THE CALLING     *
*        ROUTINE IN THE SYSOUT WRITER.                                *
*                                                                     *
*      ATTRIBUTES --                                                  *
*                                                                     *
*              REENTRANT.                                             *
*                                                                     *
*      NOTES --                                                       *
*                                                                     *
*        THIS MODULE USES 'IEFSD195', A NON-STANDARD BLOCK CHARACTER  *
*        ROUTINE THAT GENERATES 9X10 CHARACTERS OUT OF '*'S.          *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*      FOLLOWING IS A SAMPLE WRITER PROCEDURE SHOWING HOW THE JOB     *
*      SEPARATOR PROGRAM IS INVOKED.                                  *
*                                                                     *
*        ./     ADD   NAME=WTR2,LIST=ALL                              *
*        //IEFPROC EXEC  PGM=IEFSD080,PARM='PACD,IEFSEPR2'            *
*        //IEFRDER  DD UNIT=1403,DCB=(BUFNO=6,BUFL=133,LRECL=133,     *
*        //  BLKSIZE=133,RECFM=FM)                                    *
*        /*                                                           *
*                                                                     *
*      THIS WOULD PRINT SYSOUT CLASSES 'A', 'C', AND 'D' WITH THE     *
*      JOB SEPARATOR PROGRAM 'IEFSEPR2'.                              *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  SPACE  1
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*      THE USER MUST SPECIFY THE FOLLOWING TWO SYMBOLS AS EXPLAINED   *
*      BELOW --                                                       *
*                                                                     *
*      '&NUMBR' IS A CONSTANT SET TO THE NUMBER OF PAGES OF SEPARATOR *
*      OUTPUT YOU WISH.  (IBM-SUPPLIED ROUTINE GIVES 3, FOR EXAMPLE). *
*                                                                     *
         LCLA  &NUMBR             # OF SEPARATOR PAGES TO PRINT.      *
*                                                                     *
*      '&SKIP'  IS SET TO 'YES' OR 'NO' TO SPECIFY WHETHER OR NOT YOU *
*      WISH THE SEPARATOR PROGRAM TO SUPPRESS OUTPUT FOR SYSTEM TASKS *
*      (SUCH AS 'MOUNT', 'WTR', ETC. )                                *
*        'YES'  MEANS TO SKIP PRINTING SEP. PAGES FOR SYS TASKS       *
*        'NO'   MEANS PRINT SEPARATOR PAGES FOR EVERYTHING.           *
*                                                                     *
         LCLC  &SKIP              SKIP OVER SYSTEM TASK JOBNAMES      *
*                                                                     *
*      THE SET CARDS ARE LOCATED  RIGHT AFTER 'IEFSEPR2 CSECT' CARD   *
*      BELOW.                                                         *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  SPACE 2
*      DSCOR  --  DSECT TO FORMAT MY GETMAIN AREA
*      THE FIRST FIVE WORDS ARE THE PARM LIST FOR SD195.
  SPACE 1
DSCOR    DSECT
DSCHA    DS    F                  ADDRESS OF CHAR STRING INPUT
DSLNA    DS    F                  ADDRESS OF CURRENT LINE #
DSOPA    DS    F                  ADDRESS OF OUTPUT AREA
DSCCA    DS    F                  ADDRESS OF THE # OF CHARS TO CONVERT
DSJWKA   DS    A                  ADDRESS OF CL12 WORK AREA FOR SD195
DSCCT    DS    F                  CHARACTER COUNT WORD
DSLINE   DS    F                  RELATIVE LINE NUMBER
DSRGSV   DS    18F                STD. REG SAVE AREA
DSPTME   DS    CL8                TIME WORK AREA
DSTME    DS    CL12               TIME/DATE BUILD AREA
DSJWK    DS    CL12               WORK AREA FOR SD195
DSWCH    DS    CL1                SWITCH USED BY JOBCARD SCAN
DSCLASS  DS    C                  CLASS OF SYSOUT
DSJOBNM  DS    CL9
DSPGMR   DS    CL12
DSBPARMA DS    4A
DSCNTTST DS    F
NEWS     DS    F
DSEND    EQU   *     END OF TABLE
  SPACE 2
         DCBD  DSORG=PS,DEVD=DA
         REG
    SPACE 2
IEFSEPR2 CSECT
   SPACE 1
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*      USER MAY VARY THE BELOW SYMBOLS AS EXPLAINED ABOVE WHERE THEY  *
*      WERE DEFINED.                                                  *
*                                                                     *
&SKIP    SETC  'YES'              BYPASS PRINTING FOR SYS TASKS       *
*                                                                     *
&NUMBR   SETA  3                  TWO PAGES OF OUTPUT
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  SPACE 1
GO       SAVE  (14,12)            SAVE REGS
         LR    R8,R15             LOAD BASE
         USING GO,R8              MY BASEREG--TELL ASMBLR.
         L    R11,4(R1)           GET SYSOUT DCB ADDRESS
         USING IHADCB,R11         TELL ASMBLR ABOUT DCB ADDR.
   SPACE 1
*      FIRST TEST OUTPUT DCB FOR PUNCH-DESTINATION OUTPUT, THIS
*      PROGRAM DOES NOT HANDLE THAT.
  SPACE 1
         TM    0(R1),X'60'        TEST FOR SYSOUT=PUNCH
         BO    RETURN1            QUIT IF SO.
  SPACE 1
*      TEST PASSED DCB FOR PROPER PARAMETERS
  SPACE 1
         CLC   DCBLRECL,H133      IS LRECL = 133?
         BE    TESTRF             BRANCH IF LRECL O.K.
RETURN1  RETURN (14,12),RC=0      OTHERWISE RETURN; COMMON EXIT.
  SPACE 1
TESTRF   TM    DCBRECFM,X'82'     TEST FOR RECFM=FM OR FBM
         BC    14,RETURN1         RETURN IF DCB NOT O.K.
DCBOK    LR    R4,R1              SAVE INITIAL CONTENTS OF R1.
    SPACE 1
*      SET SYNAD ADDRESS IN PASSED DCB FOR I/O ERR.
  SPACE 1
         LA    R2,SYNADR          GET SYNAD ADDRESS
         ST    R2,DCBSYNAD        SET SYNAD FOR RTN.
  SPACE 1
*      NOW GET CORE FOR WORK AREAS.
  SPACE 1
         LA    R0,DSEND-DSCOR      LOAD GETMAIN SIZE PARM.
         GETMAIN R,LV=(0)         ISSUE SVC
  SPACE 1
         LR    R3,R1              LOAD POINTER REG, THE 'DSCOR' BASE.
         USING DSCOR,R3           MY WORKAREA BASEREG.
         LOAD  EP=NEWS
         ST    R0,NEWS
    SPACE 1
*      NOW SAVE JOBNAME AND SYSOUT CLASS IDENT IN GOTTEN CORE.
    SPACE 1
         L     R2,8(R4)           GET JOBNAME POINTER
         MVC   DSJOBNM+1,0(R2)
         MVI   DSJOBNM,X'40'
         L     R2,12(R4)          GET CLASS I D
         MVC   DSCLASS,0(R2)      SYSOUT CLASS TO GOTTEN CORE
         ST    R13,DSRGSV+4       SAVE REG 13.
         LA    R13,DSRGSV         LOAD ADDR OF S/A IN R13.
   EJECT
*      GET TIME AND DATE AND CONVERT TO 'HH:MM--YYDDD' AND STORE IT
*      IN DSTME.
  SPACE 1
         TIME  DEC
         ST    R0,DSPTME          STORE FOR EDIT.
         MVC   DSTME-1(6),=X'4021207A2020'  THE EDIT PATTERN.
         ED    DSTME-1(6),DSPTME  EDIT TIME TO 'HH:MM'.
         ST    R1,DSPTME          STORE DATE.
         MVC   DATUM(3),DSPTME+1
         UNPK DSTME+7(5),DSPTME+1(3) UNPACK THE DATE.
         MVC   DSTME+5(2),=C'--'  TIME/DATE NOW = 'HH:MM--YYDDD'
  SPACE 1
*      BRANCH TO   C O N V D A T
         SPACE
         CALL  CONVDAT,(DATUM)
         MVC   LITT(9),DATUM
         CLC   LITT(9),=C'DONNERSTA'
         BNE   *+8
         MVI   LITT+9,C'G'
         MVC   LITT+11(2),DATUM+20
         MVI   LITT+13,C'.'
         MVC   LITT+15(9),DATUM+10
         MVC   LITT+26(4),DATUM+23
         SPACE
*      SET UP PARM LIST FOR IEFSD195, THE BLOCK CHAR RTN.
  SPACE 1
*      PARAMETER 1, ADDRESS OF CHARACTERS, IS SET UP LATER IN LOOPS.
  SPACE 1
*      2ND PARM, THE RELATIVE LINE NUMBER POINTER.
  SPACE 1
         LA    R1,DSLINE          2ND PARM, THE REL LINE #
         ST    R1,DSLNA           STORE IN LIST.
  SPACE 1
*      3RD PARAMETER, OUTPUT ADDRESS, IS SET LATER IN 'PPUT' ROUTINE.
  SPACE 1
*      4TH PARAMETER, ADDRESS OF CHARACTER COUNT FIELD.
  SPACE 1
         LA    R1,DSCCT           ADDR OF CHAR CT FIELD
         ST    R1,DSCCA           STORE IN LIST.
  SPACE 1
*      5TH PARAMETER, THE ADDRESS OF A CL12 WORK AREA FOR SD195 USE.
  SPACE 1
         LA    R2,DSJWK           WORKAREA POINTER FOR SD195.
         ST    R2,DSJWKA          STORE THE POINTER.
  SPACE 1
*      PARM LIST FOR MY BLOCK CHARACTER ROUTINE IS NOW SET UP.
*      IT OCCUPIES THE FIRST FIVE WORDS OF THE GOTTEN CORE AREA.
*      REGS CURRENTLY IN USE ARE-
*                            R3 - DSCOR AREA PTR.
*                            R8 - BASEREG
*                            R11- DCB ADDRESS
  SPACE 1
*      CONVLOOP  MAIN PROGRAM LOOP, ENTERED ONCE PER FULL PAGE OF O/P.
   SPACE 1
         LA    R5,&NUMBR .        NUMBER OF JOB SEPARATOR PAGES
CONVLOOP BAL   R9,PUT             GET A QSAM BUFFER.
         MVC   0(2,R1),=X'CB40'
         MVC   2(131,R1),1(R1)
         BAL   R9,PUT
         MVC   0(2,R1),=X'015C'
         MVC   2(131,R1),1(R1)
         BAL   R9,PUT
         MVC   0(2,R1),=X'015C'
         MVC   2(131,R1),1(R1)
         BAL   R9,PUT
  SPACE 1
*      FIRST, FORCE OUT LAST PAGE WITH A SKIP TO CHANNEL 1.
  SPACE 1
         MVC   0(2,R1),=X'8940'   MOVE CC AND BLANK TO BUFFER
         MVC   2(131,R1),1(R1)    PROPAGATE BLANKS
         BAL   R9,PUT             GET BUF
  SPACE 1
         MVC   0(2,R1),=X'1940'   CC=WRITE & SKIP 3.    DATA='-'
         MVC   2(131,R1),1(R1)
         BAL   R9,PUT             GET QSAM BUFFER.
         SPACE 2
*      JOBNAME LOOP - PUT OUT BLOCK W/JOBNAME.
  SPACE 1
         LA    R15,DSJOBNM
         ST    R15,DSBPARMA
         LA    R15,1
         ST    R15,DSCNTTST
         LR    R15,R1
         LA    R15,2(R15)
         ST    R15,DSBPARMA+8
         LA    R15,DSCNTTST
         ST    R15,DSBPARMA+4
         LA    R15,BLINEL
         ST    R15,DSBPARMA+12
         MVC   0(2,R1),=X'0940'
         MVC   2(131,R1),1(R1)
NXTLINE  EQU   *
         L     R15,=V(IEFSD095)
         LA    R1,DSBPARMA
         BALR  R14,R15
         BAL   R9,PUT
         L     R15,DSCNTTST
         CH    R15,=H'12'
         BE    JOBNEXT
         LA    R15,1(R15)
         ST    R15,DSCNTTST
         LR    R15,R1
         LA    R15,2(R15)
         ST    R15,DSBPARMA+8
         MVC   0(2,R1),=X'0940'
         MVC   2(131,R1),1(R1)
         B     NXTLINE
JOBNEXT  EQU   *
         MVC   0(2,R1),=X'1140'
         MVC   2(131,R1),1(R1)
         BAL   R9,PUT
    SPACE 1
*    PUT OUT NEWS
*
         L     R10,NEWS
NEWSNXT  EQU   *
         MVC   0(133,R1),0(R10)
         BAL   R9,PUT
         LA    R10,133(R10)
         CLI   0(R10),X'FF'
         BNE   NEWSNXT
         MVC   0(2,R1),=X'1140'
         MVC   2(131,R1),1(R1)
  SPACE 2
*      ACCT NUMBER LOOP --  PUT OUT ACCT # ON A LINE
  SPACE 1
         LA    R1,DSPGMR
         ST    R1,DSCHA           AND STORE FOR SD195.
         LA    R1,12
         ST    R1,DSCCT
         MVC   DSPGMR(8),=CL8'M50/01'
         OI    DSCHA,X'80'
         MVC   DSPGMR+11(1),DSCLASS
         L     R1,16
         L     R1,196(R1)
         MVC   DSPGMR+1(2),18(R1)
         MVC   DSPGMR+4(2),16(R1)
         BAL   R10,PPUT           LINK TO PUT MOD.
   SPACE 2
*      DATE-TIME LOOP --
  SPACE 1
         LA    R1,DSTME
         ST    R1,DSCHA
         MVI   DSCHA,X'40'        SET TO SKIP FORCING OUT LAST LINES
         LA    R1,12
         ST    R1,DSCCT
         BAL   R10,PPUT
  SPACE 1
         BCT   R5,CONVLOOP        LOOP # OF TIMES  SPECIFIED IN &NUMBR
  SPACE 1
         L     R13,DSRGSV+4        LOAD OLD R13 VALUE
         LA    R0,DSEND-DSCOR     LOAD FREEMAIN SIZE
         LR    R1,R3              LOAD REG FOR FREEMAIN
         FREEMAIN R,LV=(0),A=(1)  FREE GOTTEN CORE
         DELETE EP=NEWS
         B     RETURN1            AND EXIT.
  EJECT
*       PPUT -- ROUTINE TO GENERATE CALLS TO BLOCK CHAR. RTN, IEFSD195.
*      THIS ALTERNATE BLOCK CHARACTER RTN WILL MAKE 9W X 10H CHARS.,
*      RATHER THAN THE IBM-SUPPLIED 12X12 FROM IEFSD095.
  SPACE 1
*      CURRENT REGISTER USAGE --
*        R3 - DSCOR BASE (GOTTEN CORE)
*        R4 -  WORKREG
*        R5 - BCT REG
*        R6 - RELATIVE LINE COUNTER IN PPUT
*        R7 -  WORKREG
*        R8 -  BASEREG
*        R9 -  INTERNAL LINKS TO 'PUT'
*        R10 - INTERNAL LINKS TO 'PPUT'.
*        R11 - DCB ADDRESS
*        R13 - SAVE AREA (IN GOTTEN CORE)
   SPACE 1
PPUT     XR    R6,R6              INIT RELATIVE LINE COUNTER
PPUTLA   LA    R6,1(R6)           STEP COUNTER
         ST    R6,DSLINE          AND STORE FOR SD195.
         BAL   R9,PUT             GET A QSAM BUFFER
         MVC   0(2,R1),=X'0940'   CC=WRITE AND SKIP1
         MVC   2(131,R1),1(R1)    BLANK OUT BUFFER
         LR    R4,R1              SAVE I/O AREA POINTER
         LA    R1,1(R1)           STEP OVER CC IN BUFFER
         ST    R1,DSOPA           STORE FOR SD195.
         LR    R1,R3              LOAD PARAMETER REGISTER FOR SD195.
         L     R15,=V(IEFSD195)   LOAD SUBRTN ADDRESS
         BALR  R14,R15            AND GO.
         LR    R1,R4              GET I/O POINTER BACK
         TM    DSCHA,X'80'        TEST FOR SWITCH
         BZ    SKIPID             SKIP THE ID IF SWCH=OFF
  SPACE 1
*      GENERATE AN I.D. FOR LISTINGS, TO BE IN THE LAST THREE
*      BLOCK CHARACTER POSITIONS ON LINE 1, TO THE RIGHT
*      OF THE JOBNAME.
  SPACE 1
         LR    R7,R6              GET CURRENT COUNT
         MH    R7,H37             MPY BY INDEX
         LA    R4,PRNTID-37       INDEX IS 1 .LT. R6, USE APPROP. PTR.
         AR    R4,R7              ADD BASE TO INDEX
         MVC   77(37,R1),0(R4)    MOVE PRNTID LINE OUT.
   SPACE 1
SKIPID   CH    R6,H10             LAST LINE?
         BL    PPUTLA             NO, ITERATE FOR LINES 1-10.
         MVI   0(R1),X'19'        SET LAST LINE CC=WRITE & SKIP 3.
  SPACE 1
*      THIS TEST  PREVENTS THE EXTRA BLANK LINES AFTER A ROW OF
*      BLOCK CHARACTERS HAS BEEN PRINTED, USED FOR LAST LINE ONLY TO
*      PREVENT GOING TO NEXT PAGE.
  SPACE 1
         TM    DSCHA,X'40'        TEST FOR SPACING SKIP REQUESTED.
         BO    EXIT               BR IF SO
         BAL   R9,PUT             GET BUF
         MVC   0(2,R1),=X'1140'   CC=WRITE AND SKIP 2.
         MVC   2(131,R1),1(R1)    CLEAR BUF
EXIT     BR    R10                BACK TO CALLER
  SPACE 2
*      PUT -- A ROUTINE TO LINK TO THE QSAM PUT/LOCATE MODULE.
  SPACE 1
PUT      LR    R1,R11             DCB ADDRESS TO REG1.
         L     R15,DCBPUT         GET RDWR ADDRESS
         BALR  R14,R15            AND GO.
         BR    R9                 NOW BACK TO USER, NEXTBUF IN R1.
   SPACE 2
*      SYNAD RTN GETS CTL IF I/O ERR. SET RC=8 AND PUNT.
   SPACE 1
SYNADR   LA    15,8               SET PRM I/O ERROR
         BR    14                 AND QUIT.
   EJECT
*      CONSTANTS
         LTORG
  SPACE 2
H10      DC    H'10'
H37      DC    H'37'
H133     DC    H'133'
DATUM    DC    CL27' '
BLINEL   DC    F'9'
   SPACE 2
PRNTID   DC    5CL37' '
LITT     DC    CL37' '
         DC    4CL37' '
 TITLE 'CONVDAT - CONVERTS DATE FROM YYDDDF   TO EG. MONDAY MAY 2 1971'
CONVDAT  CSECT
         B     12(15)
         DC    CL8'CONVDAT'
         SAVE  (14,12)
         LR    2,15
         USING CONVDAT,2
         L     R1,0(R1)
         ST    R1,ADRES
         ST    R13,SAVECONV+4
         LA    R13,SAVECONV
*   DAYNAME ROUTINE:     INPUT R6 GIVES ADDRESS OF 3-BYTES PACKED DATE
*                        YYDDDF
*                        OUTPUT R6 GIVES E.G 'MONDAY SEPTEMBER 21 1970'
DAYNAME  EQU   *
         L     6,ADRES
         OI    2(6),X'0F'
         UNPK  UDATE,0(3,6)
         MVC   3(1,6),2(6)
         MVC   2(1,6),1(6)
         MVC   1(1,6),0(6)
         MVI   0(6),0
         ZAP   MONTHNUM,=P'0'
         L     6,ADRES
         ZAP   CVDW,2(2,6)
         CVB   9,CVDW
         LA    7,7(0,0)
         SR    8,8
         DR    8,7
         LA    9,9(0,0)
         MR    8,8
         LH    7,BASEDAY
         LA    8,BASEDAY+2
DAY#1    EQU   *
         CLC   0(2,6),0(8)
         BE    DAY#2
         LA    8,4(,8)
         BCT   7,DAY#1
         B     DAY#7
DAY#2    EQU   *
         LH    8,2(8)
         LA    7,DAYS
         AR    7,8
         AR    7,9
         MVC   DAYLITT(9),0(7)
DAY#3    EQU   *
         PACK  CVDW,UDATE+2(2)
         CVB   9,CVDW
         N     9,=F'3'
         BNZ   DAY#4
         ZAP   MONTHS+11(2),=P'29'
DAY#4    EQU   *
         LA    9,MONTHS
         LA    7,12(,0)
DAY#5    EQU   *
         AP    MONTHNUM(2),=P'1'
         CP    2(2,6),0(2,9)
         BH    DAY#6
         OI    3(6),X'0F'
         MVC   DAYLITT+18(4),MASK3
         ED    DAYLITT+18(4),2(6)
         MVC   DAYLITT+10(9),2(9)
         MVC   DAYLITT+25(2),UDATE+2
         B     DAY#7
DAY#6    SP    2(2,6),0(2,9)
         LA    9,11(,9)
         BCT   7,DAY#5
DAY#7    EQU   *
         ZAP   MONTHS+11(2),=P'28'
         L     6,ADRES
         MVC   0(L'DAYLITT,6),DAYLITT
* ********************************************
         SPACE 3
*      COMMON EXIT
         SPACE 3
         L     13,SAVECONV+4
         LM    14,12,12(13)
         SR    15,15
         BR    14
         EJECT
*      DEFINITIONS
         SPACE 3
FW       DC    F'0'
MASK3    DC    X'40202020'
DAYLITT  DC    C'                       19  '
UDATE    DC    CL7' '
MONTHNUM DC    PL2'0'
CVDW     DC    D'0'
BASEDAY  DC    H'6'
         DC    X'0070',H'18'
         DC    X'0071',H'27'
         DC    X'0072',H'36'
         DC    X'0073',H'54'
         DC    X'0074',H'0'
         DC    X'0075',H'9'
MONTHS   EQU   *
         DC    PL2'31',CL9' JANUAR  '
         DC    PL2'28',CL9' FEBRUAR '
         DC    PL2'31',CL9'  MAERZ  '
         DC    PL2'30',CL9'  APRIL  '
         DC    PL2'31',CL9'   MAI   '
         DC    PL2'30',CL9'  JUNI   '
         DC    PL2'31',CL9'  JULI   '
         DC    PL2'31',CL9' AUGUST  '
         DC    PL2'30',CL9'SEPTEMBER'
         DC    PL2'31',CL9' OKTOBER '
         DC    PL2'30',CL9'NOVEMBER '
         DC    PL2'31',CL9'DEZEMBER '
DAYS     EQU   *
         DC    C' MONTAG  ',C'DIENSTAG ',C'MITTWOCH '
         DC    C'DONNERSTA',C' FREITAG ',C' SAMSTAG ',C' SONNTAG '
         DC    C' MONTAG  ',C'DIENSTAG ',C'MITTWOCH '
         DC    C'DONNERSTA',C' FREITAG ',C' SAMSTAG ',C' SONNTAG '
DECDTR1  DC    CL8' '
ADRES    DC    F'0'
FW1      DC    F'0'
SAVECONV DC    18F'0'
         LTORG
 TITLE '   I E F S D 1 9 5   -- BLOCK CHARACTER ROUTINE'
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*                I E F S D 1 9 5   -- NEW BLOCK CHARACTER ROUTINE     *
*                                                                     *
* THIS CSECT IS A REPLACEMENT FOR THE IBM-SUPPLIED BLOCK CHARACTER    *
* ROUTINE. THIS MODULE PUTS OUT CHARACTERS THAT ARE 9 WIDE, BY 10 HIGH*
* RATHER THAN THE 12X12 THAT IEFSD095 PUTS OUT.  THIS PERMITS UP TO   *
* TWELVE CHARACTERS PER LINE RATHER THAN 9.  INTER CHARACTER SPACING  *
* REMAINS AT TWO, SO THE CHARACTERS TAKE UP (11*N-2) POSITIONS, WHERE *
* 'N' IS THE NUMBER OF CHARACTERS PER LINE.  THE IEFSD195             *
* CALLING SEQUENCE IS THE SAME, BALR 14,15 , AFTER LOADING REG1 WITH  *
* AN IDENTICAL PARM LIST. SEE SYS PROG GUIDE FOR FORMAT.              *
* NOTE THAT THE LINE # POINTED TO BY THE PARM LIST NOW RUNS FROM 1-10 *
* RATHER THAN 1-12 WITH IEFSD095.                                     *
*      SPECIAL CHARACTERS HAVE BEEN ADDED TO THE ALPHAMERICS THAT THE *
* ROUTINE PRINTS-- ':','-','/',AND '.'.
*                                                                     *
*      INPUT --                                                       *
*                                                                     *
*        REGISTER 1 POINTS TO A 5-WORD PARM LIST                      *
*           1. A(CHARACTER STRING)                                    *
*           2. A(LINE # WORD)                                         *
*           3. A(OUTPUT AREA)                                         *
*           4. A(CHAR COUNT WORD)                                     *
*           5. A(WORK AREA)    CL12
*                                                                     *
*        REGISTER 13 POINTS TO A STD. SAVE AREA.                      *
*                                                                     *
*      OUTPUT --                                                      *
*                                                                     *
*        THE PATTERNS NECESSARY TO PRINT A LINE OF CHARACTERS         *
*        ARE MOVED TO THE OUTPUT AREA.  ONE LINE (FROM 1-10)          *
*        IS PRODUCED PER CALL.  THIS IS A LOWEST LEVEL RTN.           *
*                                                                     *
*      EXITS --                                                       *
*        EXIT IS TO CALLING ROUTINE, IEFSEPR2, VIA BR 14.             *
*                                                                     *
*      ERRORS --                                                      *
*                                                                     *
*        RETURN TO CALLING RTN IF PARAMETERS OUT OF RANGE.  INVALID   *
*        CHARACTERS ARE TRANSLATED TO BLANKS.                         *
*            LINE NUMBER: RANGE 1-10                                  *
*            CHARACTER COUNT: RANGE 1-12 CHARACTERS                   *
*                                                                     *
*      ATTRIBUTES --
*        REENTRANT.                                                   *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
   SPACE 2
         DROP  R3,R8,R11
MYAREA   DSECT
         DS    CL12   PASSED WORK AREA
  SPACE 2
IEFSD195 CSECT
  SPACE 1
         SAVE  (14,12)            SAVE REGS
         BALR  R12,R0
         USING *,R12
         USING DSCOR,R1
         L     R2,DSJWKA          LOAD WORKAREA ADDRESS
         USING MYAREA,R2          PASSED WORK AREA ADDRESS.
         L     R6,DSCHA           GET ADDRESS OF CHARACTERS
         L     R7,DSLNA           GET ADDRESS OF LINE #
         L     R7,0(R7)           GET LINE # IN REG 7.
         CH    R7,H10X            TEST FOR INVALID LINE #.
         BH    RET
         BCTR  R7,R0              SUBTR 1 FOR INTERNAL USE
         L     R8,DSOPA           GET OUTPUT ADDRESS
         LR    R15,R8
         L     R9,DSCCA           GET ADDRESS OF COUNT
         DROP  R1
         L     R9,0(R9)          GET THE COUNT
         CH    R9,H1
         BL    RET                EXIT IF COUNT .LT. 1.
         CH    R9,H12             TEST FOR HIGH COUNT VALUE
         BH    RET                MAX COUNT IS TWELVE.
         LR    R5,R9              COUNT TO R5.
         BCTR  R5,R0              SUBTRACT ONE.
         EX    R5,MOVE            GET THE CHARACTERS IN MY AREA.
         EX    R5,TRANSL          XLATE TO MY INTERNAL CODES.
         LA    R6,MYAREA
  SPACE 1
*      END OF INITIALIZATION.  THE CONVERT LOOP FOLLOWS.
  SPACE 1
CNVLOOP  XR    R4,R4              CLEAR WORKREG
         XR    R5,R5              CLEAR WORKREG.
         IC    R5,0(R6)           GET CHAR'S INTERNAL CODE.
         MH    R5,H10X            MPY BY 10, GIVES INDEX TO 'PXTAB'.
         AR    R5,R7              ADD CURRENT LINE # (0-9) TO INDEX.
         IC    R4,PXTAB(R5)       GET PATTERN # FROM 'PXTAB'.
         MH    R4,H9              GENERATE INDEX TO 'PTAB'.
         LA    R5,PTAB            GET ADDRESS OF PATTERN TABLE
         AR    R5,R4             ADD BASE OF PTAB & INDEX.
         MVC   0(9,R8),0(R5)      MOVE PATTERN TO USER'S AREA.
         LA    R8,11(R8)          STEP THE OUTPUT POINTER.
         LA    R6,1(R6)           STEP THE INPUT  POINTER.
         BCT   R9,CNVLOOP
  SPACE 1
RET      EQU   *
         RETURN (14,12)
  SPACE 1
MOVE     MVC   MYAREA(1),0(R6)    MVC FOR EXECUTE INSN.
TRANSL   TR    MYAREA(1),TRTAB    A TR INSTN FOR EXECUTE.
   SPACE 1
H1       DC    H'1'
H9       DC    H'9'
H10X     DC    H'10'
H12      DC    H'12'
  SPACE 1
*      TRTAB -- A TRANSLATE TABLE TO GET ALL CHARS INTO MY INTERNAL
*               CODE TO USE AS INDEX TO THE PATTERN INDEX TABLE.
  SPACE 1
TRTAB    DC    75X'00'                 ILLEGAL - CHARACTERS TO BLANKS
         DC    X'26'                   PERIOD
         DC    15X'00'
         DC    X'2A'                   DOLLAR
         DC    4X'00'
         DC    X'27'                   DASH
         DC    X'29'                   SLASH
         DC    9X'00'
         DC    X'25'                   COMMA
         DC    14X'00'
         DC    X'28'                   COLON
         DC    X'2B'                   NUMBER
         DC    X'2C'                   AT
         DC    68X'00'
         DC    X'010203040506070809'   A - I
         DC    7X'00'                  ILLEGAL
         DC    X'0A0B0C0D0E0F101112'   J - R
         DC    8X'00'                  ILLEGAL
         DC    X'131415161718191A'     S - Z
         DC    6X'00'                  ILLEGAL
         DC    X'1B1C1D1E1F2021222324' 0 - 9
         DC    6X'00'                  ILLEGAL
         DC    AL2(*-TRTAB)  SHOULD BE = X'0100' (256)
   EJECT
*      PXTAB -- THE PATTERN INDEX TABLE.  THE TRANSLATED CHARACTERS
*      PLUS THE RELATIVE LINE NUMBER IS A INDEX TO THIS TABLE,
*      WHICH THEN PROVIDES THE INDEX TO THE PATTERN TABLE.
  SPACE 1
*                 1 2 3 4 5 6 7 8 910  CORRESPONDS TO LETTER-
PXTAB    DC    X'30303030303030303030' BLANK
         DC    X'0E0F1009090000090909' A
         DC    X'11000909111109090011' B
         DC    X'12000901010101090012' C
         DC    X'11000909090909090011' D
         DC    X'00000101131301010000' E
         DC    X'00000101131301010101' F
         DC    X'12000901011414090012' G
         DC    X'09090909000009090909' H
         DC    X'15150404040404041515' I
         DC    X'08080808080808090012' J
         DC    X'09161718191918171609' K
         DC    X'01010101010101010000' L
         DC    X'34093536222109090909' M
         DC    X'1A091C0D0A0B0C1D091B' N
         DC    X'12000909090909090012' O
         DC    X'11000909001101010101' P
         DC    X'120009090909270C1128' Q
         DC    X'11000909001118171609' R
         DC    X'12000901111E08090012' S
         DC    X'11110404040404040404' T
         DC    X'09090909090909090012' U
         DC    X'090909090909101F0E20' V
         DC    X'09090909090921222324' W
         DC    X'0909101F0E0E1F100909' X
         DC    X'16161625260404040404' Y
         DC    X'00000706050403020000' Z
         DC    X'0F12090909090909120F' 0
         DC    X'29050E05050505052A2A' 1
         DC    X'12000907060504031E00' 2
         DC    X'000016062E2F08090012' 3
         DC    X'2B062C2D1F2500000606' 4
         DC    X'000001111E0808090012' 5
         DC    X'12000901110009090012' 6
         DC    X'00001606050403030303' 7
         DC    X'12000909121209090012' 8
         DC    X'12000909001E08090012' 9
         DC    X'30303030303030310132' , COMMA
         DC    X'30303030303030313131' . PERIOD
         DC    X'30303030121230303030' - DASH
         DC    X'30300E0E30300E0E3030' : COLON
         DC    X'33080706050403020132' / SLASH
*      SLASH ABOVE IS AT RELATIVE +29 (HEX) IN THE TABLE.  THE NEXT
*      SLOT IS +2A IF YOU WANT TO ADD ANY CHARS.  THE '29' OF THE
*      SLASH WILL APPEAR IN ITS PLACE IN THE TRANSLATE TABLE, TRTAB.
         DC    X'05371E381237391E1205' $ DOLLAR
         DC    X'1F1F00001F1F00001F1F' # NUMBER
         DC    X'0F1208083A3B0B0B003C' @ AT
   EJECT
PTAB     DC    C'*********'  THE PATTERN TABLE FROM WHICH EACH LINE
         DC    C'**       '  OF CHARACTERS IS BUILT.  (01)
         DC    C' **      '  02
         DC    C'  **     '  03
         DC    C'   **    '  04
         DC    C'    **   '  05
         DC    C'     **  '  06
         DC    C'      ** '  07
         DC    C'       **'  08
         DC    C'**     **'  09
         DC    C'** **  **'  0A
         DC    C'**  ** **'  0B
         DC    C'**   ****'  0C
         DC    C'****   **'  0D
         DC    C'   ***   '  0E
         DC    C'  *****  '  0F
         DC    C' **   ** '  10
         DC    C'******** '  11
         DC    C' ******* '  12
         DC    C'******   '  13
         DC    C'**   ****'  14
         DC    C' ******  '  15
         DC    C'**    ** '  16
         DC    C'**   **  '  17
         DC    C'**  **   '  18
         DC    C'****     '  19
         DC    C'*      **'  1A
         DC    C'**      *'  1B
         DC    C'***    **'  1C
         DC    C'**    ***'  1D
         DC    C' ********'  1E
         DC    C'  ** **  '  1F
         DC    C'    *    '  20
         DC    C'**  *  **'  21
         DC    C'** *** **'  22
         DC    C' *** *** '  23
         DC    C'  *   *  '  24
         DC    C' **  **  '  25
         DC    C'  ****   '  26
         DC    C'**   * **'  27
         DC    C' ****** *'  28
         DC    C'     *   '  29
         DC    C'  ****** '  2A
         DC    C'      *  '  2B
         DC    C'    ***  '  2C
         DC    C'   ****  '  2D
         DC    C'    **** '  2E
         DC    C'   ******'  2F
         DC    C'         '  30  THIS IS A BLANK
         DC    C'***      '  31
         DC    C'*        '  32
         DC    C'        *'  33
         DC    C'*       *'  34
         DC    C'***   ***'  35
         DC    C'**** ****'  36
*      ANY USER PATTERNS FOLLOW HERE AND WOULD BE IDENTIFIED IN THE
*      PATTERN INDEX TABLE WITH NUMBERS STARTING WITH '37'.
         DC    C'  *******'  37
         DC    C' ** **   '  38
         DC    C'    ** **'  39
         DC    C' ****  **'  3A
         DC    C'****** **'  3B
         DC    C' **** ** '  3C
         END
