 TITLE 'JOBTRACK - SAMPLE COMMUNICATIONS TASK USER EXIT                X
               FOR MESSAGE $HASP373, TESTED DOENCH'
***********************************************************************
*                                                                     *
* MODULE NAME         =  JOBTRACK                                     *
*                                                                     *
* DESCRIPTIVE NAME    =  SAMPLE COMMUNICATIONS TASK USER EXIT         *
*                        FOR MESSAGE '$HASP373 JOBNAME. STARTED'      *
*                        AND MESSAGE '$HASP395 JOBNAME. ENDED'.       *
*                                                                     *
* FUNCTION ($HASP373) =  OBTAIN THE JOB NAME AND JOB ID FROM THE      *
*                        SUBSYSTEM JOBS BLOCK (THIS DATA HAS NOT BEEN *
*                        INSERTED INTO MESSAGE $HASP373 YET)          *
*                        AND INSERT THEM INTO THE JOBSRUN             *
*                        TRACKING TABLE, ISSUE THE MESSAGE.           *
*          ($HASP395) =  OVERRIDE SUPPRESSION IF JOBNAME = MOUNT      *
*                                                                     *
*   OPERATION         =  IF THE JOBSRUN TABLE DOES NOT ALREADY EXIST  *
*                        OBTAIN STORAGE FOR IT.  BUILD THE TABLE IF   *
*                        NECESSARY, WHICH ENTAILS INSERTING THE       *
*                        JOB NAME AND JOB ID IN EACH ENTRY.           *
*                        THE TABLE WILL BE POINTED TO OUT OF THE CVT. *
*                        THE ANCHOR POINTER IS CVTUSER.               *
*                                                                     *
* ENTRY POINT         =  JOBTRACK                                     *
*                                                                     *
*   PURPOSE           =  TO BUILD A TABLE OF ALL JOBS WHICH WERE      *
*                        STARTED IN THE SYSTEM.  THE TABLE WILL       *
*                        CONTAIN JOB NAMES AND JOB ID'S AND WILL      *
*                        RESIDE IN THE EXTENDED COMMON STORAGE AREA.  *
*                        AREA (ECSA).                                 *
*                        THE MAXIMUM NUMER OF ENTRIES IS ONE          *
*                        THOUSAND.  THE TABLE WILL WRAP AROUND WHEN   *
*                        THAT MAXIMUM IS REACHED.                     *
*                                                                     *
*   LINKAGE           =  BALR                                         *
*                                                                     *
*   INPUT DATA        =  REG 1 POINTS TO THE ADDRESS OF THE CTXT      *
*                        REG 13 ADDRESS OF STANDARD SAVE AREA         *
*                        REG15 ENTRY POINT                            *
*                                                                     *
*   REGISTERS SAVED   =  REG0 - REG15                                 *
*                                                                     *
*   REGISTER USAGE    =  REG5  - POINTS TO THE CTXT                   *
*                        REG12 - MODULE BASE REGISTER                 *
*                        REG13 - POINTER TO A STANDARD SAVE AREA      *
*                        REG14 - RETURN POINT                         *
*                                                                     *
*   REGISTERS RESTORED = REG0 - REG15                                 *
*                                                                     *
*   CONTROL BLOCKS    =                                               *
*     NAME     MAPPING MACRO   REASON USED                  USAGE     *
*     ----     -------------   -----------                 -------    *
*     CTXT      IEZVX100        USER EXIT PARAMETER LIST     R,W      *
*     CVT       CVT             GET PTR TO TCB               R        *
*     JSCB      IEZJSCB         GET PTR TO ACTIVE JSCB       R        *
*     PSA       IHAPSA          GET PTR TO ACTIVE TCB        R        *
*     SJB       $SJB            PICK UP THE JOB ID AND NAME  R        *
*     SSIB      IEFJSSIB        GET PTR TO SJB               R        *
*     TCB       IKJTCB          GET PTR TO JSCB              R        *
*                                                                     *
*   KEY = R-READ, W-WRITE, C-CREATE, D-DELETE                         *
*                                                                     *
*   TABLES            =  JOBSRUN JOB TRACKING TABLE                   *
*                                                                     *
*   MACROS            =  GETMAIN,FREEMAIN                             *
*                                                                     *
***********************************************************************
JOBTRACK CSECT
JOBTRACK AMODE 31                      31-BIT ADDRESSING MODE
JOBTRACK RMODE ANY                     31-BIT RESIDENCE
         SPACE 1
***********************************************************************
*                                                                     *
*         REGISTER ASSIGNMENTS                                        *
*                                                                     *
***********************************************************************
REG0     EQU   0
REG1     EQU   1                       ADDRESS OF THE JOBSRUN TABLE
REG2     EQU   2
REG3     EQU   3
REG4     EQU   4
CTXTPTR  EQU   5                       POINTS TO THE CTXT
REG6     EQU   6
REG8     EQU   8
REG9     EQU   9
REG10    EQU   10
REG12    EQU   12                      MODULE BASE REGISTER
REG13    EQU   13
REG14    EQU   14
         SPACE 3
***********************************************************************
*                                                                     *
*        NUMERICAL EQUATES                                            *
*                                                                     *
***********************************************************************
ONE      EQU   1                        GENERAL PURPOSE VARIABLE ONE
ONEK     EQU   1000                     MAXIMUM NUMBER OF ENTRIES
SPINECSA EQU   241                      SUBPOOL WHERE JOBSRUN TABLE    X
                                        WILL RESIDE
         EJECT
***********************************************************************
*                                                                     *
*        STANDARD ENTRY LINKAGE                                       *
*                                                                     *
***********************************************************************
         STM   REG14,REG12,12(REG13)    SAVE CALLER'S REGISTERS
         BALR  REG12,REG0               ESTABLISH MODULE BASE
         USING *,REG12                  REGISTER
         L     CTXTPTR,0(,REG1)         ESTABLISH ADDRESSABILITY
         USING CTXT,CTXTPTR             TO THE CTXT
***********************************************************************
*                                                                     *
*        ESTABLISH ADDRESSABILITY TO THE NECESSARY CONTROL BLOCKS     *
*        FOR RETRIEVAL OF THE JOB NAME AND ITS ID.                    *
*                                                                     *
***********************************************************************
         LA    REG6,0                   ESTABLISH ADDRESSABILITY
         USING PSA,REG6                 TO THE PSA
         L     REG6,PSATOLD             GET THE ADDRESS OF THE         X
                                        ACTIVE TCB
         USING TCB,REG6                 ADDRESSABILITY TO THE TCB
         L     REG6,TCBJSCB             GET THE ADDRESS OF THE JSCB
         USING IEZJSCB,REG6             GET THE ADDRESS OF
         L     REG6,JSCBACT             THE ACTIVE JSCB SO THAT
         L     REG6,JSCBSSIB            ADDRESSABILITY TO THE SSIB CAN X
                                        BE ESTABLISHED
         USING SSIB,REG6                USE THE SSIB TO GET TO THE SJB
         L     REG6,SSIBSUSE            GET THE ADDRESS OF THE SJB
         USING SJBDSECT,REG6            START USING THE SJB
***********************************************************************
*                                                                     *
*        DETERMINE WHICH MESSAGE IS TO BE PROCESSED.                  *
*                                                                     *
***********************************************************************
         SPACE 1
         L     REG2,CTXTTXPJ            ESTABLISH ADDRESSABILITY
         USING CTXTATTR,REG2            TO THE MSG ATTRIBUTES
         LA    REG4,CTXTTMSG            ADDRESS OF TEXT AREA
         USING MSGTEXT,REG4             BASE TEXT MAPPING
         CLC   MSGID,$HASP395           MESSAGE $HASP395?
         BNE   TRACKING
***********************************************************************
*                                                                     *
*        OVERRIDE SUPPRESSION IF JOBNAME = MOUNT                      *
*                                                                     *
***********************************************************************
         CLC   SJBJOBNM,MOUNT           JOBNAME MOUNT ?
         BNE   FINISHED
         OI    CTXTRFB2,CTXTROMS        OVERRIDE SUPPRESSION
***********************************************************************
*                                                                     *
*        CALL A ROUTINE TO BUILD THE JOB TRACKING TABLE               *
*                                                                     *
***********************************************************************
         SPACE 1
TRACKING EQU   *
         BAL   REG14,BLDTABLE           GO BUILD OR UPDATE THE TABLE
         SPACE 1
***********************************************************************
*                                                                     *
*        STANDARD EXIT LINKAGE                                        *
*                                                                     *
***********************************************************************
FINISHED EQU   *
         LM    REG14,REG12,12(REG13)    RESTORE CALLER'S               X
                                        REGISTERS
         BR    REG14                    RETURN TO CALLER
         EJECT
***********************************************************************
*                                                                     *
*    PROCEDURE - BLDTABLE                                             *
*                                                                     *
*    FUNCTION  - BUILDS A TABLE OF JOB ID'S AND JOB NAMES             *
*                                                                     *
*    INPUT     - CVTUSER FIELD OF THE CVT                             *
*                                                                     *
*    OUTPUT    - JOB TRACKING TABLE                                   *
*                                                                     *
***********************************************************************
BLDTABLE EQU   *
         L     REG8,16                 ESTABLISH ADDRESSABILITY
         USING CVTMAP,REG8             TO THE CVT
         L     REG1,CVTUSER            GET ADDRESS OF THE TABLE FROM   X
                                       THE CVT
         LTR   REG1,REG1               DOES THE TABLE EXIST?
         BNZ   TABLEBLT                YES, THEN UPDATE THE TABLE
         SPACE 1
***********************************************************************
*                                                                     *
*   TABLE HAS NOT BEEN BUILT YET, THEREFORE GET STORAGE FOR IT.       *
*                                                                     *
***********************************************************************
         SPACE 1
         L     REG0,STORGAMT
         GETMAIN RU,LV=(0),SP=SPINECSA,LOC=ANY
         ST    REG1,CVTUSER            PUT ADDRESS OF TABLE            X
                                       INTO THE CVT
         DROP  REG8                    DROP ADDRESSABILITY TO THE CVT
***********************************************************************
*                                                                     *
*   CLEAR THE STORAGE OBTAINED BY THE GETMAIN                         *
*                                                                     *
***********************************************************************
         LR    REG2,REG1               GET THE ADDRESS OF THE TABLE    X
                                       IN STORAGE
         L     REG3,STORGAMT           GET THE LENGTH TO BE CLEARED
         LR    REG8,REG1               GET ADDRESS OF STORAGE
         SR    REG9,REG9               CLEAR THE PADDING BYTE
         MVCL  REG2,REG8               CLEAR THE STORAGE
         USING TRAKTABL,REG1           GET ADDRESSABILITY TO THE       X
                                       JOBSRUN TRACKING TABLE
         MVC   TRKACRO,JOBSRUN         INSERT EBCDIC TABLE NAME
         LA    REG8,ENTRYLTH           GET THE SIZE OF AN ENTRY
         ST    REG8,TRKLNGTH           AND STORE IT IN THE TABLE HEADER
         LA    REG8,ONE                SET THE ENTRY COUNT TO ONE
         ST    REG8,TRKNUM             AND STORE IT IN THE HEADER
         LA    REG4,TRKSTART           GET ADDRESS OF FIRST ENTRY
         ST    REG4,TRKENTRY           AND STORE IT INTO THE HEADER
         ST    REG4,TRKCURR            CURRENT ENTRY AT THIS TIME
         LA    REG8,ONEK               STORE THE MAXIMUM ENTRIES
         ST    REG8,TRKMXENT           ALLOWED IN THE TABLE HEADER
         B     FILENTRY                FILL IN A TABLE ENTRY
***********************************************************************
*                                                                     *
*   TABLE HAS BEEN BUILT ALREADY THEREFORE JUST UPDATE IT.            *
*                                                                     *
***********************************************************************
         SPACE 1
TABLEBLT EQU   *
         L     REG3,TRKNUM             GET CURRENT NUMBER OF ENTRIES
         C     REG3,TRKMXENT           EQUAL TO THE MAXIMUM?
         BE    WRAPTABL                YES, THEN WRAP AROUND
         LA    REG3,ONE(REG3)          INCREMENT IT BY ONE
         ST    REG3,TRKNUM             STORE THE NEW VALUE
         L     REG4,TRKCURR            GET ADDRESS OF CURRENT ENTRY
         LA    REG4,ENTRYLTH(REG4)     BUMP BY LENGTH OF AN ENTRY
         ST    REG4,TRKCURR            POINT TO THE NEXT SLOT
         B     FILENTRY                FILL IN A TABLE ENTRY
***********************************************************************
*                                                                     *
*   THE TABLE IS FULL THEREFORE WRAP AROUND                           *
*                                                                     *
***********************************************************************
WRAPTABL EQU   *
         LA    REG4,ONE                RESET THE ENTRY COUNT TO ONE
         ST    REG4,TRKNUM             AND STORE IT IN THE HEADER
         L     REG4,TRKENTRY           GET ADDRESS OF FIRST ENTRY
         ST    REG4,TRKCURR            MAKE IT THE CURRENT
         SPACE 1
***********************************************************************
*                                                                     *
*   FILL IN A TABLE ENTRY WITH THE JOB ID AND THE JOB NAME FROM       *
*   THE SJB                                                           *
*                                                                     *
***********************************************************************
         SPACE 1
FILENTRY EQU   *
         USING TRAKENTY,REG4           CURRENT ENTRY
         MVC   TRKJOBID,SJBJOBID       SAVE THE JOB ID
         MVC   TRKJOBNM,SJBJOBNM       SAVE THE JOB NAME
         DROP  REG1,REG4,REG6          DROP ADDRESSABILITY
         BR    REG14                   RETURN TO CALLER
         EJECT
***********************************************************************
*                                                                     *
*        CHARACTER CONSTANTS                                          *
*                                                                     *
***********************************************************************
         SPACE 1
$HASP395 DC    CL8'$HASP395'            MESSAGE ID $HASP395
JOBSRUN  DC    CL8'JOBSRUN '            TABLE ID
MOUNT    DC    CL8'MOUNT   '            JOBNAME MOUNT
***********************************************************************
*                                                                     *
*        NUMERIC CONSTANTS                                            *
*                                                                     *
***********************************************************************
STORGAMT DC    A(ENTRYLTH*1000+HDRLTH)  AMOUNT OF STORAGE NEEDED FOR   X
                                        ONE THOUSAND TABLE ENTRIES
***********************************************************************
*                                                                     *
*         JOBS RUN TRACKING TABLE                                     *
*                                                                     *
***********************************************************************
TRAKTABL DSECT
TRKACRO  DS    CL8
TRKENTRY DS    A                        ADDRESS OF FIRST ENTRY
TRKCURR  DS    A                        ADDRESS OF CURRENT ENTRY
TRKMXENT DS    F                        MAXIMUM NUMBER OF ENTRIES
TRKNUM   DS    A                        NUMBER OF ENTRIES INSERTED
TRKLNGTH DS    F                        LENGTH OF EACH ENTRY
HDRLTH   EQU   *-TRAKTABL               LENGTH OF THE TABLE HEADER
TRKSTART EQU   *                        BEGINNING OF THE FIRST ENTRY
TRAKENTY DSECT                          TABLE ENTRY
TRKJOBID DS    CL8                      JOB ID
TRKJOBNM DS    CL8                      JOB NAME
ENTRYLTH EQU   *-TRAKENTY               LENGTH OF ONE ENTRY
***********************************************************************
*                                                                     *
*         MAPPING OF THE MESSAGE TEXT                                 *
*                                                                     *
***********************************************************************
MSGTEXT  DSECT
MSGID    DS    CL8                      MESSAGE ID
JOBDATA  DS    CL8                      JOB DATA (ID AND NAME)
         ORG   MSGTEXT
         EJECT
         IEZVX100
         EJECT
         CVT  DSECT=YES
         EJECT
         IHAPSA
         EJECT
         IKJTCB
         EJECT
         IEZJSCB
         EJECT
         IEFJSSIB
         EJECT
         $SJB
         EJECT
         END   JOBTRACK
