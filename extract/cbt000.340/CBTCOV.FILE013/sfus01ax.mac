./ ADD  NAME=$INFO
 ***********************************************************************
 *
 *      RACF Unterstuetzung unter ISPF installiert bei
 *
 *      Fichtel & Sachs AG
 *      Ernst Sachs Str. 62
 *      8720 Schweinfurt
 *
 *      Systemprogr. : Ulrich Rappert  09721/982838
 *
 ***********************************************************************
 *
 *      Bandformat : Iebcopy Unload. Eine File,nl,lrecl=80,blksize=7200
 *
 *      Assemblieren und Linken Sie die beiden Programme
 *      FUSRACF und FSRACF1 in die entsprechenden Libraries
 *      (Beschreibung siehe Programm)
 *
 *      Bitte beachten:
 *         1. Bei F&S sind alle Userid's 4 Stellen lang, so dass
 *            bei Ihrer Installation evtl die entsprechenden Panels
 *            angepasst werden muessen.
 *         2. Das Hauptmenu 'FSA99' ist so konstruiert, dass nur die
 *            Special User alle Moeglichkeiten angezeigt bekommen.
 *
 *      Member:
 *          Name           Kurzbeschreibung
 *
 *          $INFO          Diese Liste
 *          #FSA99         Rename zu FSA99 ---> ISPMLIB
 *          @FSA99         Rename zu FSA99 ---> SYSPROC
 *          @FSS99         Rename zu FSS99 ---> SYSPROC
 *          FSA99          Selection Menu fuer alle Commands.
 *                         Aufruf aus einer Clist oder aus einem
 *                         anderen Selection Menu.
 *          FSA991         Display Panel fuer 'ADDSD'
 *          FSA992         Display Panel fuer 'DELDSD'
 *          FSA993         Display Panel fuer 'PERMIT'
 *          FSA994         Display Panel fuer 'LISTDSD'
 *          FSA995         Display Panel fuer 'ALTDSD'
 *          FSA996         Display Panel fuer 'PASSWORD'
 *          FSRACF1        Assembler Source (siehe Modul)
 *          FSS9910        Display Panel fuer 'RLIST'
 *          FSS9911        Display Panel fuer 'ADDUSER'
 *          FSS9912        Display Panel fuer 'DELUSER'
 *          FSS9913        Display Panel fuer 'ALTUSER'
 *          FSS9914        Display Panel fuer 'LISTUSER'
 *          FSS9915        Display Panel fuer 'ADDGROUP'
 *          FSS9916        Display Panel fuer 'DELGROUP'
 *          FSS9917        Display Panel fuer 'ALTGROUP'
 *          FSS9918        Display Panel fuer 'LISTGROUP'
 *          FSS9919        Display Panel fuer 'CONNECT'
 *          FSS9920        Display Panel fuer 'REMOVE'
 *          FSS9921        Display Panel fuer 'SEARCH'
 *          FSS9921A       Display Panel nach 'SEARCH'
 *          FSS9922        Display Panel fuer 'SETROPTS'
 *          FSS9923        Display Panel fuer alle Commands
 *          FSS997         Display Panel fuer 'RDEFINE'
 *          FSS998         Display Panel fuer 'RDELETE'
 *          FSS999         Display Panel fuer 'RALTER'
 *          FUSRACF        Assembler Source (siehe Modul)
 *          IGC0023E       SVC 235. Falls Sie unter SPF 3.1
 *                         Dateien komprimieren, koennen
 *                         Sie den gleichen SVC nehmen, der
 *                         dort verwendet wird. (ggfs SVC Nummer
 *                         aendern im Modul FSRACF1)
 *
 ***********************************************************************
./ ADD  NAME=#FSA99
FSA991 'ADDSD SUCCESSFUL'
'RACF-DEFINE FOR DATASET &DSN SUCCESSFUL'

FSA992 'DELDSD SUCCESSFUL'
'RACF-DELETE FOR DATASET &DSN SUCCESSFUL'

FSA993 'PERMIT SUCCESSFUL'
'PERMIT OF DSN &DSN SUCCESSFUL'

FSA994 'ALDSD SUCCESSFUL'
'CHANGE FOR DSN &DSN SUCCESSFUL'

FSA995 'CHANGE SUCCESSFUL'
'PASSWORD SUCCESSFUL CHANGED'

FSA996 'CONNECT SUCCESSFUL'
'CONNECT FOR USER/GROUP &USER TO GROUP &GROUP SUCCESSFUL'

FSA997 'ADDUSER SUCCESSFUL'
'USER &USER SUCCESSFUL ADDED TO GROUP &GROUP'

FSA998 'ADDGROUP SUCCESSFUL'
'GROUP &GROUP SUCCESSFUL ADDED'

FSA999 'ALTUSER SUCCESSFUL'
'USER &USER SUCCESSFUL ALTERED'

FSA991A 'ALTGRP SUCCESSFUL'
'GROUP &GROUP SUCCESSFUL ALTERED'

FSA991B 'REMOVE SUCCESSFUL'
'USER &USER REMOVED FROM GROUP &GROUP'

FSA991Z '&CMD SUCCESSFUL'
'PARMS: &P '
./ ADD  NAME=@FSA99
PROC 0
ISPEXEC VGET (DEBUG,PRJ0,LIB0,TYP0,DOPT,ZUSER)
 IF &DEBUG = ON THEN CONTROL FLUSH LIST SYMLIST CONLIST PROMPT
ELSE CONTROL NOFLUSH MSG PROMPT
BEGINN:-
ISPEXEC VGET (DSN,VOL,DOPT)
SET PARML =   /* ZUSAETZLICHES LISTING DER VERAENDERUNG
ISPEXEC DISPLAY PANEL(FSA99&DOPT)
IF &LASTCC = 8 THEN EXIT /* PFK3 OR PFK4 */
IF &H  = 1 THEN SET CMD = AD
IF &H  = 2 THEN SET CMD = DD
IF &H  = 3 THEN SET CMD = PE
IF &H  = 4 THEN SET CMD = LD
IF &H  = 5 THEN SET CMD = ALD
IF &H  = 6 THEN SET CMD = PW
IF &H  ^= THEN DO
  H &CMD
  GOTO BEGINN
END
/* SE ' OPTION  &DOPT CALLED FROM USER',U(X001),LOGON
/* EX 'ISP.PROD.CLIST(FSA99P)' /* PROTOKOLL
/* ISPEXEC VPUT (DSN,VOL) SHARED
FUSRACF &PARM
SET CODE = &LASTCC
IF &PARML ^= THEN FUSRACF &PARML /* LISTE DER AENDERUNG
IF (&CODE = 0 AND &SUBSTR(1:2,&PARM) = PW THEN DO
END
GOTO BEGINN
./ ADD  NAME=@FSS99
PROC 0
ISPEXEC VGET (DEBUG,DOPT)
 IF &DEBUG = ON THEN CONTROL FLUSH LIST SYMLIST CONLIST PROMPT
ELSE CONTROL NOFLUSH MSG PROMPT
SET CLIST1 =
BEGINN:-
ISPEXEC DISPLAY PANEL(FSS99&DOPT)
IF &LASTCC = 8 THEN EXIT /* PFK3 OR PFK4 */
IF &H  =  1 THEN SET CMD = AD
IF &H  =  2 THEN SET CMD = DD
IF &H  =  3 THEN SET CMD = PE
IF &H  =  4 THEN SET CMD = LD
IF &H  =  5 THEN SET CMD = ALD
IF &H  =  6 THEN SET CMD = PW
IF &H  =  7 THEN SET CMD = RDEF
IF &H  =  8 THEN SET CMD = RDEL
IF &H  =  9 THEN SET CMD = RALT
IF &H  = 10 THEN SET CMD = RL
IF &H  = 11 THEN SET CMD = AU
IF &H  = 12 THEN SET CMD = DU
IF &H  = 13 THEN SET CMD = ALU
IF &H  = 14 THEN SET CMD = LU
IF &H  = 15 THEN SET CMD = AG
IF &H  = 16 THEN SET CMD = DG
IF &H  = 17 THEN SET CMD = ALG
IF &H  = 18 THEN SET CMD = LG
IF &H  = 19 THEN SET CMD = CO
IF &H  = 20 THEN SET CMD = RE
IF &H  = 21 THEN SET CMD = SR
IF &H  = 22 THEN SET CMD = SETR
IF &H  ^= THEN DO
  H &CMD
  GOTO BEGINN
END
FUSRACF &PARM
SET CODE = &LASTCC
IF &DOPT = 21 && &CODE = 0 && &CLIST1 ^= THEN DO
  ISPEXEC EDIT DATASET(EXEC.RACF.CLIST)
  IF &LASTCC = 8 THEN EXIT /* PFK3 OR PFK4 */
  ISPEXEC DISPLAY PANEL(FSS9921A)
  IF &LASTCC = 8 THEN EXIT /* PFK3 OR PFK4 */
  IF &ANTWORT = J THEN EXEC EXEC.RACF.CLIST
END
GOTO BEGINN
END
./ ADD  NAME=FSA99
%----------------  R A C F  UTILITY SELECTION MENU  --------------------
%SELECT OPTION ===>_ZCMD                                               +
%
%   1 +ADDSD     -%Racf+definieren einer Datei
%   2 +DELDSD    -%Racf+loeschen einer Datei
%   3 +PERMIT    - Zugriffsberechtigung vergeben/aendern
%   4 +LISTDSD   - Listen der%Racf+Definition von Datei(en)
%   5 +ALTDSD    -%Racf+Definition einer Datei aendern
%   6 +PASSWORD  -%Racf+Password aendern
%
% &R7 +&ROW7     %&R8 +&ROW8     %&R9 +&ROW9     %&R10+&ROW10
% &R11+&ROW11    %&R12+&ROW12    %&R13+&ROW13    %&R14+&ROW14
% &R15+&ROW15    %&R16+&ROW16    %&R17+&ROW17    %&R18+&ROW18
% &R19+&ROW19    %&R20+&ROW20    %&R21+&ROW21    %&R22+&ROW22
%
%                      &R23+&ROW23
%
+ PRESS%END+KEY TO TERMINATE
%
%
)INIT
  IF ( &ZUSER = X001,X002 ) /* spezielle user
    &R7    = '  7'
    &ROW7  = 'RDEFINE'
    &R8    = '  8'
    &ROW8  = 'RDELETE'
    &R9    = '  9'
    &ROW9  = 'RALTER'
    &R10   = ' 10'
    &ROW10 = 'RLIST'
    &R11   = ' 11'
    &ROW11 = 'ADDUSER'
    &R12   = ' 12'
    &ROW12 = 'DELUSER'
    &R13   = ' 13'
    &ROW13 = 'ALTUSER'
    &R14   = ' 14'
    &ROW14 = 'LISTUSER'
    &R15   = ' 15'
    &ROW15 = 'ADDGROUP'
    &R16   = ' 16'
    &ROW16 = 'DELGROUP'
    &R17   = ' 17'
    &ROW17 = 'ALTGROUP'
    &R18   = ' 18'
    &ROW18 = 'LISTGRP'
    &R19   = ' 19'
    &ROW19 = 'CONNECT'
    &R20   = ' 20'
    &ROW20 = 'REMOVE'
    &R21   = ' 21'
    &ROW21 = 'SEARCH'
    &R22   = ' 22'
    &ROW22 = 'SETROPTS'
    &R23   = ' 23'
    &ROW23 = 'Jeder RACF Befehl'
)PROC
  IF ( &ZUSER ^= X001,X002)
    VER (&ZCMD,RANGE,1,6)
  &ZSEL = TRANS( TRUNC (&ZCMD,'.')
                1,'CMD(%FSA99)'
                2,'CMD(%FSA99)'
                3,'CMD(%FSA99)'
                4,'CMD(%FSA99)'
                5,'CMD(%FSA99)'
                6,'CMD(%FSA99)'
                7,'CMD(%FSS99)'
                8,'CMD(%FSS99)'
                9,'CMD(%FSS99)'
               10,'CMD(%FSS99)'
               11,'CMD(%FSS99)'
               12,'CMD(%FSS99)'
               13,'CMD(%FSS99)'
               14,'CMD(%FSS99)'
               15,'CMD(%FSS99)'
               16,'CMD(%FSS99)'
               17,'CMD(%FSS99)'
               18,'CMD(%FSS99)'
               19,'CMD(%FSS99)'
               20,'CMD(%FSS99)'
               21,'CMD(%FSS99)'
               22,'CMD(%FSS99)'
               23,'CMD(%FSS99)'
              ' ',' '
                X,'EXIT'
                *,'?' )
  &DOPT = &ZCMD
  VPUT (DOPT) SHARED
)END
./ ADD  NAME=FSA991
%----------------------  RACF UTILITY : ADDSD  -------------------------
%COMMAND ===>_ZCMD
%
+Datei %===>_DSN
+Volser%===>_VOL   + (OPTIONAL)
%
+Allgemeiner Zugriff:
+       %===>_U+    (N=NONE,R=READ,U=UPDATE,C=CONTROL,A=ALTER)
+
+Nachricht an die Konsole bei Zugriff (A=jeder,F=unberechtigt,S=erfolgre
+       %===>_A+                       N=keine Nachricht)
+
+DATA (Irgendein Text, der mit der Datei verknuepft sein soll)
+       %===>_DAT                                                    +
+
+MODEL (Wenn Sie eine Modell Datei definieren wollen)
+       %===>_M+ (Y/N)
+
%Liste+der RACF Definition ? %===>_L+ (Y/N)
+
+ENTER%H+FOR HELP %===>_H+
+
+ PRESS%END+KEY TO TERMINATE
)INIT
  &H = ' ' &DATA = ' ' &V = ' ' &M = N &PARML = ' '
  IF (&L = ' ') &L = N  &U = R  &A  = F
  IF ( &CODE = 0 ) .MSG = FSA991
  IF (&DSN = ' ' ) &DSN    = '''&PRJ0..&LIB0..&TYP0'''
)PROC
  VER (&U,LIST,'N','R','U','C','A')
  &DUMMY = TRANS (&DSN '*',A) /* wegen sammelprofilen */
  VER (&DUMMY,DSNAME)
  VER (&M,NB,LIST,Y,N)
  VER (&A,NB,LIST,A,F,S,N)
  VER (&L,NB,LIST,Y,N)
  IF (&H = H) &H = 1
  IF (&H = ' ')
    IF (&DAT ^= ' ') &DATA = 'DATA(''&DAT'')'
    IF (&VOL ^= ' ') &V = 'VOL(&VOL) UNIT(DISK)'
    &M = TRANS(&M Y,MODEL N,' ' )
    &AU = 'AUDIT(&A)'
    &PARM = 'AD      &DSN UACC(&U) &DATA &V &M &AU'
    IF (&L = Y) &PARML = 'LD      DA(&DSN) AU'
    VPUT  (DSN VOL )     SHARED
)END
./ ADD  NAME=FSA992
%----------------------  RACF UTILITY : DELDSD  ------------------------
%COMMAND ===>_ZCMD
%
+   Datei %===>_DSN
+   Volser%===>_VOL   + (OPTIONAL)
+
+ENTER%H+FOR HELP:
+       %===>_H+
+
+ PRESS%END+KEY TO TERMINATE
+
)INIT
  &H = ' ' &V = ' '
  IF ( &CODE = 0 )
    .MSG = FSA992
  IF (&DSN = ' ') &DSN    = '''&PRJ0..&LIB0..&TYP0'''
)PROC
  &DUMMY = TRANS (&DSN '*',A) /* wegen sammelprofilen */
  VER (&DUMMY,DSNAME)
  IF (&H = H)
    &H = 2
  IF (&H = ' ')
    IF (&VOL ^= ' ')
      &V = 'VOL(&VOL)'
    &PARM = 'DD      &DSN &V'
    VPUT  (DSN VOL )     SHARED
)END
./ ADD  NAME=FSA993
%----------------------  RACF UTILITY : PERMIT  ------------------------
%COMMAND ===>_ZCMD
%
+Datei %===>_DSN
+Volser%===>_VOL   + (OPTIONAL)
%
%Entweder:+Folgende User/Gruppe(n) sollen Zugriff haben:
+  %===>_I                                   +
+...und zwar:
+  %===>_S+    (N=NONE,R=READ,U=UPDATE,C=CONTROL,A=ALTER,D=DELETE)
+  (%D+bedeutet, dass der User/Gruppe aus der Zugriffsliste entfernt wir
+    nur noch mit dem allgemeinen Zugriff auf eine Resource zugreifen da
+
%Oder:    +Sie kopieren die Zugriffsliste einer anderen Datei:
+   Datei %===>_FR
+   Volser%===>_FV    + (OPTIONAL)
+
%Liste+der RACF Definition ? %===>_L+ (Y/N)
+
+ENTER%H+FOR HELP %===>_H+
+
+ PRESS%END+KEY TO TERMINATE
)INIT
  &H = ' ' &V = ' ' &ACC= ' ' &FVOL = ' ' &FROM = ' ' &ID = ' '
  &PARML = ' '
  IF (&L = ' ') &L = N  &S = R
  IF ( &CODE = 0 ) .MSG = FSA993
  IF (&DSN = ' ' ) &DSN    = '''&PRJ0..&LIB0..&TYP0'''
)PROC
  VER (&S,LIST,'N','R','U','C','A','D') VER (&L,NB,LIST,Y,N)
  &DUMMY = TRANS (&DSN '*',A) /* wegen sammelprofilen */
  VER (&DUMMY,DSNAME)
  &DUMMY = TRANS (&FR '*',A)
  VER (&DUMMY,DSNAME)
  IF (&H = H) &H = 3
  IF (&H = ' ')
    IF (&VOL ^= ' ') &V  = 'VOL(&VOL)'
    IF (&FR ^= ' ')
      &FROM = 'FROM(&FR)'
      IF (&FV ^= ' ')
        &FVOL = 'FVOL(&FV)'
    IF (&FR = ' ')
      VER (&I,NONBLANK)
      &ID = 'ID(&I)'
    IF (&S ^= ' ')
      &ACC  = 'ACC(&S)'
      IF (&S = D)
        &ACC  = DELETE
    &PARM = 'PE      &DSN &V &ACC &FVOL &FROM &ID'
    IF (&L = Y) &PARML = 'LD      DA(&DSN) AU'
    VPUT  (DSN VOL )     SHARED
)END
./ ADD  NAME=FSA994
%----------------------  RACF UTILITY : LISTDSD  -----------------------
%COMMAND ===>_ZCMD
%
+Datei   %===>_DSN
+
+ID      %===>_ID            + Z.B. : &ZUSER
+
+Prefix  %===>_PREF          + Z.B. : &ZB
+
+
+LIST OPTION:
+       %===>_LI+  (ST=STATISTIC,HI=HISTORY,AU=AUTHUSER,AL=ALL)
+
+ENTER%H+FOR HELP:
+       %===>_H+
%
+ PRESS%END+KEY TO TERMINATE
%
%
)INIT
  &H       = ' '
  &ZB      = '&ZUSER..KZ,&ZUSER..KZ.P  ETC.'
  IF (&DSN = ' ' ) &DSN    = '''&PRJ0..&LIB0..&TYP0'''
  IF ( &LI = ' ')
    &LI      = AU
)PROC
  &DUMMY = TRANS (&DSN '*',A) /* wegen sammelprofilen */
  VER (&DUMMY,DSNAME)
  IF (&H = H)
    &H = 4
  IF (&H = ' ')
    &LI = TRUNC (&LI,2)
    VER (&LI,LIST,'AL','AU','ST','HI')
    IF ( &ID = ' ' )
      IF ( &PREF = ' ')
        &PARM = 'LD      DA(&DSN) &LI'
    IF ( &ID ^= ' ')
      &PARM = 'LD      ID(&ID) &LI'
    IF ( &PREF ^= ' ')
      &PARM = 'LD      PREF(&PREF) &LI'
    VPUT  (DSN VOL )     SHARED
)END
./ ADD  NAME=FSA995
%----------------------  RACF UTILITY : ALTDSD  ------------------------
%COMMAND ===>_ZCMD
%
+Datei %===>_DSN
+Volser%===>_VOL   + (OPTIONAL)    DEVTYPE%===>_UN  + (3350,3380)
%
+Allgemeiner Zugriff:
+       %===>_U+    (N=NONE,R=READ,U=UPDATE,C=CONTROL,A=ALTER)
+
+DATA (Irgendein Text, der mit der Datei verknuepft sein soll)
+       %===>_DAT                                                    +
+
+Nachricht an die Konsole bei Zugriff (A=jeder,F=unberechtigt,S=erfolgre
+       %===>_A+                       N=keine Nachricht)
+
%Liste+der RACF Definition ? %===>_L+ (Y/N)
+
+ENTER%H+FOR HELP %===>_H+
+
+ PRESS%END+KEY TO TERMINATE
)INIT
  &H  = ' ' &PARML = ' '
  IF ( &CODE = 0 ) .MSG = FSA994
  IF (&L = ' ') &L = N  &A  = F &U = R
  IF (&DSN = ' ' ) &DSN    = '''&PRJ0..&LIB0..&TYP0'''
  IF (&UN = ' ') &UN = 3350
)PROC
  VER (&U,NB,LIST,'N','R','U','C','A')
  &DUMMY = TRANS (&DSN '*',A) /* wegen sammelprofilen */
  VER (&DUMMY,DSNAME)
  VER (&A,NB,LIST,A,F,S,N)
  VER (&L,NB,LIST,Y,N)
  &AU = 'AUDIT(&A)'
  IF (&DAT ^= ' ') &DATA = 'DATA(''&DAT'')'
  IF (&H = H) &H = 5
  IF (&H = ' ')
    VER(&UN,NB,LIST,'3350','3380')
    IF (&VOL ^= ' ') &V = 'VOL(&VOL) UNIT(&UN)'
    &PARM = 'ALD     &DSN UACC(&U) &DATA &V &AU'
    IF (&L = Y) &PARML = 'LD      DA(&DSN) AU'
    VPUT  (DSN VOL )     SHARED
)END
./ ADD  NAME=FSA996
)ATTR DEFAULT(%+_)
   ^ TYPE(INPUT) INTENS(NON)
)BODY
%----------------------  RACF UTILITY : PASSWORD  ----------------------
%COMMAND ===>_ZCMD
%
+
+USER   %===>_USER+
+
+Geben Sie Ihr%altes+Passwort an:
+       %===>^OLDPW   +
+
+Geben Sie Ihr%neues+Passwort an:
+       %===>^NEWPW   +
+
+
+ENTER%H+FOR HELP:
+       %===>_H+
+
+
+ PRESS%END+KEY TO TERMINATE
)INIT
  &H = ' '  &USER = &ZUSER &MVS = 0
  IF ( &CODE = 0 )
    .MSG = FSA995
  &OLDPW   = ' ' &NEWPW   = ' '
)PROC
  IF (&H = H) &H = 6
  IF (&H = ' ')
    IF (&USER ^= &ZUSER)
      &PARM = 'PW      USER(&USER)'
    IF (&USER = &ZUSER)
      &PARM = 'PW      PASSWORD(&OLDPW,&NEWPW)'
)END
./ ADD  NAME=FSRACF1
FSRACF1  TITLE '-  INVOKE RACF COMMANDS AUTHORIZED'
FSRACF1  CSECT
         SPACE 4
***********************************************************************
*                                                                     *
*  *** FSRACF1 ***                                                    *
*                                                                     *
*  DIESES PROGRAMM GIBT AUTHORISIERUNG DURCH AUFRUFEN DES             *
*  SVC 235, LINKT ZU DEM ENTSPRECHENDEN RACF COMMAND UND              *
*  HEBT ANSCHLIESSEND DIE AUTHORIERUNG WIEDER AUF.                    *
*                                                                     *
*  WICHTIG: DAS PROGRAMM MUSS IN DIE SYS1.LPALIB GELINKT WERDEN,      *
*        (ATTRIBUT RENT) DA DER SVC DIE AUTHORISIERUNG NUR DURCH-     *
*        FUEHRT, WENN ER AUS DER PLPA GERUFEN WURDE.                  *
*        TESTS MIT MLPA SIND DAHER NICHT MOEGLICH.                    *
*                                                                     *
*                                                                     *
***********************************************************************
SVCNR    EQU   235                  SVC (TYPE 3)
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
* PROGRAM                                                             *
*                                                                     *
***********************************************************************
         SPACE
         SAVE  (14,12),,FSRACF1.18.02.82
         LR    R12,R15             PROGRAM ADDRESSABILITY
         USING FSRACF1,R12
         LR    R2,R1               SAVE PARM LIST ADDRESS IN R2
         L     R3,0(R2)            POINTER TO PARAMETER DATA
         LA    R6,LD               ANNAHME LISTDSD
         CLC   4(3,R3),LD          LISTDSD ?
         BE    GETMAIN             OK BRANCH
         LA    R6,AD               ANNAHME ADDSD
         CLC   4(3,R3),AD          ADDSD ?
         BE    GETMAIN             OK BRANCH
         LA    R6,DD               ANNAHME DELDSD
         CLC   4(3,R3),DD          DELDSD ?
         BE    GETMAIN             OK BRANCH
         LA    R6,PE               ANNAHME PERMIT
         CLC   4(3,R3),PE          PERMIT ?
         BE    GETMAIN             OK BRANCH
         LA    R6,PW               ANNAHME PASSWORD
         CLC   4(3,R3),PW          PASSWORD ?
         BE    GETMAIN             OK BRANCH
         LA    R6,ALD              ANNAHME ALTDSD
         CLC   4(3,R3),ALD         ALTDSD ?
         BE    GETMAIN             OK BRANCH
         LA    R6,ALU              ANNAHME ALTUSER
         CLC   4(3,R3),ALU         ALTUSER ?
         BE    GETMAIN             OK BRANCH
         LA    R6,LU               ANNAHME LISTUSER
         CLC   4(3,R3),LU          LISTUSER ?
         BE    GETMAIN             OK BRANCH
         LA    R6,LG               ANNAHME LISTGROUP
         CLC   4(3,R3),LG          LISTGROUP ?
         BE    GETMAIN             OK BRANCH
         LA    R6,AU               ANNAHME ADDUSER
         CLC   4(3,R3),AU          ADDUSER ?
         BE    GETMAIN             OK BRANCH
         LA    R6,CO               ANNAHME CONNECT
         CLC   4(3,R3),CO          CONNECT ?
         BE    GETMAIN             OK BRANCH
         LA    R6,AG               ANNAHME ADDGROUP
         CLC   4(3,R3),AG          ADDGROUP ?
         BE    GETMAIN             OK BRANCH
         LA    R6,DU               ANNAHME DELUSER
         CLC   4(3,R3),DU
         BE    GETMAIN             OK BRANCH
         LA    R6,DG               ANNAHME DELGROUP
         CLC   4(3,R3),DG
         BE    GETMAIN             OK BRANCH
         LA    R6,ALG              ANNAHME ALTGROUP
         CLC   4(3,R3),ALG
         BE    GETMAIN             OK BRANCH
         LA    R6,RDEF             ANNAHME RDEFINE
         CLC   4(4,R3),RDEF
         BE    GETMAIN             OK BRANCH
         LA    R6,RDEL             ANNAHME RDELETE
         CLC   4(4,R3),RDEL
         BE    GETMAIN             OK BRANCH
         LA    R6,RALT             ANNAHME RALTER
         CLC   4(3,R3),RALT
         BE    GETMAIN             OK BRANCH
         LA    R6,RE               ANNAHME REMOVE
         CLC   4(3,R3),RE
         BE    GETMAIN             OK BRANCH
         LA    R6,RL               ANNAHME RLIST
         CLC   4(3,R3),RL
         BE    GETMAIN             OK BRANCH
         LA    R6,SR               ANNAHME SEARCH
         CLC   4(3,R3),SR
         BE    GETMAIN             OK BRANCH
         LA    R6,SETR             ANNAHME SETROPT
         CLC   4(3,R3),SETR
         BE    GETMAIN             OK BRANCH
         LA    R1,1000             ABENDCODE
         ABEND (1)                 NOT FOUND, ABEND
GETMAIN  L     R0,GETMSZE          DYNAMIC AREA SIZE TO R0
         GETMAIN R,LV=(R0)         GETMAIN DYNAMIC AREA
         LR    R11,R1              DYNAMIC AREA ADDRESSABILITY
         USING DFSRACF1,R11
         ST    R13,SAVE+4          SAVE CALLERS SAVEAREA ADR
         ST    R11,8(R13)          SAVE FSRACF1 SAVEAREA ADR TO R13
         LR    R13,R11             ADDR. OWN SA TO REG 13
STAX     STAX  DEFER=YES           DEFER ATTENTION INTERRUPTS
         LA    R3,40               ERROR CODE TO R3
         LTR   R15,R15             CHECK FOR STAX ERROR
         BNZ   RETURN              EXIT,STAX ERROR
         ESTAE ESTAEX              ESTABLISH ESTAE ENVIRONMENT
         LA    R3,44               ERROR CODE TO R3
         LTR   R15,R15             CHECK ESTAE ERROR
         BNZ   STAXOFF             EXIT,ESTAE ERROR
         MVC   DLINK,LINKLIST      LISTFORM DES LINK-MACROS IN DSECT
         LA    R0,1                REQUEST AUTHORIZATION ON
         SVC   SVCNR               SET AUTHORIZATION ON
         LINK  EPLOC=(R6),MF=(E,(R2)),SF=(E,DLINK)
         LR    R3,R15              SAVE RETURN CODE IN R3
         XR    R0,R0               REQUEST AUTHORIZATION OFF
         SVC   SVCNR               SET AUTHORIZATION OFF
         ESTAE 0                   CANCEL ESTAE ENVIRONMENT
STAXOFF  STAX  DEFER=NO            ALLOW ATTENTION INTERRUPTS
RETURN   L     R13,SAVE+4          RESTORE R13
         L     R0,GETMSZE          DYNAMIC AREA SIZE TO R0
         LR    R1,R11              DYNAMIC DATA ADDRESS TO R1
         FREEMAIN R,LV=(0),A=(1)   FREEMAIN DYNAMIC AREA
         LR    R15,R3              RELOAD RETURN CODE
RET      RETURN (14,12),RC=(15)    RETURN TO CALLING PROGRAM
         DROP  R11
         SPACE 3
***********************************************************************
*                                                                     *
* ESTAE EXIT ROUTINE                                                  *
*                                                                     *
***********************************************************************
         SPACE
ESTAEX   DS    0H                  ESTAE ADDRESSABILITY
         USING ESTAEX,R15
         XR    R0,R0               REQUEST AUTHORIZATION OFF
         SVC   SVCNR               SET AUTHORIZATION OFF
         STAX  DEFER=NO            ALLOW ATTENTION INTERRUPTS
         XR    R15,R15             CONTINUE WITH ABEND
         BR    R14                 RETURN TO CALLER
         SPACE 3
***********************************************************************
*                                                                     *
* DEFINITIONS                                                         *
*                                                                     *
***********************************************************************
         SPACE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12                   BASE REGISTER
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE 3
         DS    0F
GETMSZE  DC    AL1(0)              DYNAMIC AREA SIZE
         DC    AL3(ENDDS-DFSRACF1)
LINKLIST LINK  EPLOC=0,SF=L        LIST FORM
AD       DC    CL8'AD'
AG       DC    CL8'AG'
ALD      DC    CL8'ALD'
ALG      DC    CL8'ALG'
ALU      DC    CL8'ALU'
AU       DC    CL8'AU'
CO       DC    CL8'CO'
DD       DC    CL8'DD'
DG       DC    CL8'DG'
DU       DC    CL8'DU'
LD       DC    CL8'LD'
LG       DC    CL8'LG'
LU       DC    CL8'LU'
PE       DC    CL8'PE'
PW       DC    CL8'PW'
RALT     DC    CL8'RALT'
RDEF     DC    CL8'RDEF'
RDEL     DC    CL8'RDEL'
RE       DC    CL8'RE'
RL       DC    CL8'RL'
SETR     DC    CL8'SETR'
SR       DC    CL8'SR'
         SPACE 3
***********************************************************************
*                                                                     *
* DUMMY SECTIONS                                                      *
*                                                                     *
***********************************************************************
         SPACE
DFSRACF1 DSECT                     DYNAMIC AREA
SAVE     DS    18F                 REGISTER SAVE AREA
DLINK    DS    CL8                 KONSTANTE FUER LINK MACRO
ENDDS    DS    D                   END OF AREA
         END
./ ADD  NAME=FSS9910
%----------------------  RACF UTILITY : RLIST  -------------------------
%COMMAND ===>_ZCMD
%
+CLASS-NAME:
+       %===>_CLASS      +                  (DASDVOL,TAPEVOL ETC)
+
+RESOURCE-NAME:
+       %===>_RESOURCE                    + (VOLSER'S)
+
+
+LIST OPTION:
+       %===>_LI+  (ST=STATISTIC,HI=HISTORY,RE=RESOURCE,
+                   AU=AUTHUSER,AL=ALL)
+
+
+ENTER%H+FOR HELP:
+       %===>_H+
+
+
+ PRESS%END+KEY TO TERMINATE
)INIT
  &H       = ' '
  IF (&CLASS = ' ') &CLASS = TAPEVOL &LI = AU
)PROC
  IF (&H = H)  &H = 10
  IF (&H = ' ')
    VER (&LI,LIST,'ST','HI','AU','RE','AL')
    &PARM = 'RL      &CLASS  (&RESOURCE) &LI'
    VPUT (CLASS RESOURCE) SHARED
)END
./ ADD  NAME=FSS9911
%----------------------  RACF UTILITY : ADDUSER  -----------------------
%COMMAND ===>_ZCMD
%
+USERID      %===>_USER    +
+
+NAME        %===>_NAME                           +
+
+DEFAULTGROUP%===>_GROUP  +
+
+Gruppen Berechtigung:
+       %===>_AU+   (JO=JOIN,CO=CONNECT,CR=CREATE,US=USE)
+
+Allgemeiner Zugriff:
+       %===>_U+    (N=NONE,R=READ,U=UPDATE,A=ALTER)
+
+Modell Datei Name (Optional)
+       %===>_MO                                         +
+
+Attribut  %===>_ATTR                     + (REVOKE,ADSP,SPECIAL ETC)
+
+
+ENTER%H+FOR HELP:%===>_H+
+
+ PRESS%END+KEY TO TERMINATE
)INIT
  &H = ' ' &MODEL = ' ' &P1 = ' ' &ATTR = ' '
  IF ( &CODE = 0 ) .MSG = FSA997 &CODE = ' '
  IF (&U = ' ') &U = N &AU = US
)PROC
  IF (&H = H) &H = 11
  IF (&H = ' ')
    VER (&GROUP,NB,NAME)
    VER (&U,NB,LIST,'N','R','U','A')
    VER (&U,NB,LIST,'N','R','U','A')
    VER (&MO,DSNAME)
    IF (&MO ^= ' ') &MODEL = 'MODEL(&MO)'
    IF (&NAME ^= ' ') &NAM = 'NAME(&NAME)'
    &P1 = '(&USER) DFLT(&GROUP) AUTH(&AU) UACC(&U) &NAM &MODEL &ATTR'
    &PARM = 'AU      &P1'
    VPUT  (USER) SHARED
)END
./ ADD  NAME=FSS9912
%----------------------  RACF UTILITY : DELUSER  -----------------------
%COMMAND ===>_ZCMD
%
+
+USERID(S):
+       %===>_USER                           +
+
+
+
+
+ENTER%H+FOR HELP:
+       %===>_H+
+
+
+ PRESS%END+KEY TO TERMINATE
)INIT
  &H       = ' '
)PROC
  IF (&H = H)
    &H = 12
  IF (&H = ' ')
    VER (&USER,NONBLANK)
    &PARM = 'DU      (&USER)'
)END
./ ADD  NAME=FSS9913
%----------------------  RACF UTILITY : ALTUSER  -----------------------
%COMMAND ===>_ZCMD
%
+USERID:   %===>_USER+     ENTER%H+FOR HELP: %===>_H+
+
+PASSWORD: %===>_PW      + NAME: %===>_NAME                           +
+
+AUTHORITY:    %===>_AU+   (JO=JOIN,CO=CONNECT,CR=CREATE,US=USE)
+
+GROUP:        %===>_GR         + um den User in der Gruppe 'GROUP' zu a
+
+DEFAULTGROUP: %===>_DGR        + um die%DEFAULT+Gruppe zu aendern (der
+                                 muss zur neuen Gruppe connected sein)
+UNIVERSAL ACCESS: %===>_U+    (N=NONE,R=READ,U=UPDATE,A=ALTER)
+
+ATTRIBUT: %===>_ATTR          + (REVOKE,ADSP ETC)
+
+CLASS Berechtigung%===>_W+ (Y/N) N=loeschen Zugriff auf die Klasse
+ fuer Klasse:   %===>_CL            +    (DASDVOL,TAPEVOL ETC)
+
+MODEL DATASET:    %===>_MODEL            + (Schreiben Sie 'NOMODEL' um
+                               'MODEL' Datei aus dem User Profile zu lo
+ PRESS%END+KEY TO TERMINATE
)INIT
  &H = ' ' &PASS = ' ' &UACC = ' ' &NAM = ' ' &AUTH = ' ' &MODEL = ' '
  &W = Y &CLA = ' ' &ATTR = ' '
  IF ( &CODE = 0 ) .MSG = FSA999  &CODE = ' '
)PROC
  IF (&H = H)
    &H = 13
  IF (&H = ' ')
    VER (&USER,NONBLANK)
    IF (&U ^= ' ') VER (&U,NB,LIST,'N','R','U','A')
       &UACC = 'UACC(&U)'
    IF (&AU ^= ' ') VER (&AU,NB,LIST,'JO','CO','CR','US')
       &AUTH = 'AUTH(&AU)'
    IF (&NAME ^= ' ') &NAM = 'NAME(&NAME)'
    IF (&PW ^= ' ')   &PASS = 'PASSWORD(&PW)'
    IF (&GR ^= ' ')   &GROUP = 'GROUP(&GR)'
    IF (&DGR ^= ' ')  &DFLT = 'DFLT(&DGR)'
    IF (&W = Y )      &CLAS = CLAUTH
    IF (&W = N )      &CLAS = NOCLAUTH
    IF (&CL ^= ' ')   &CLA  = '&CLAS(&CL)'
    IF (&MODEL ^= ' ')
      VER(&MODEL,DSNAME)
      &MODE = 'MODEL(&MODEL)'
      IF (&MODEL = NOMODEL)
        &MODE = 'NOMODEL'
    &P1 ='ALU     &USER &PASS &AUTH &UACC &NAM &GROUP &DFLT &MODE'
    &PARM='&P1 &CLA &ATTR'
    VPUT  (USER) SHARED
)END
./ ADD  NAME=FSS9914
%----------------------  RACF UTILITY : LISTUSER  ----------------------
%COMMAND ===>_ZCMD
%
+
+USER:
+       %===>_USER+
+
+ENTER%H+FOR HELP:
+       %===>_H+
+
+
+ PRESS%END+KEY TO TERMINATE
)INIT
  &H       = ' '
)PROC
  IF (&H = H)
    &H = 14
  IF (&H = ' ')
    IF (&USER ^= * ) VER (&USER,NAME)
    &PARM = 'LU      &USER'
    VPUT  (USER) SHARED
)END
./ ADD  NAME=FSS9915
%----------------------  RACF UTILITY : ADDGROUP -----------------------
%COMMAND ===>_ZCMD
%
+Gruppe(n):
+       %===>_GROUP                       +
+
+"uebergeordnete" Gruppe
+       %===>_SG          +
+
+Eigner:
+       %===>_OWNER +
+
+MODEL DATASET:    %===>_MODEL            + (optional)
+
+DATA (Irgendein Text, der mit der Gruppe verknuepft sein soll)
+       %===>_DAT                                                    +
+
+
+ENTER%H+FOR HELP:
+       %===>_H+
+
+
+ PRESS%END+KEY TO TERMINATE
)INIT
  &H  = ' '
  IF ( &CODE = 0 ) .MSG = FSA998  &CODE = ' '
  IF (&OWNER = ' ') &OWNER   = &ZUSER &MODE= ' '
)PROC
  IF (&H = H) &H = 15
  IF (&H = ' ')
    IF (&SG ^= ' ') &SUP = 'SUPGROUP(&SG)'
    IF (&OWNER ^= ' ') &OW = 'OWNER(&OWNER)'
    IF (&DAT ^= ' ') &DATA = 'DATA(''&DAT'')'
    IF (&MODEL ^= ' ') VER(&MODEL,DSNAME)
      &MODE = 'MODEL(&MODEL)'
    &PARM = 'AG      (&GROUP) &SUP &OW &DATA &MODE'
    VPUT  (GROUP) SHARED
)END
./ ADD  NAME=FSS9916
%----------------------  RACF UTILITY : DELGROUP  ----------------------
%COMMAND ===>_ZCMD
%
+
+GROUP(S):
+       %===>_GROUP                  +
+
+
+
+
+ENTER%H+FOR HELP:
+       %===>_H+
+
+
+ PRESS%END+KEY TO TERMINATE
)INIT
  &H       = ' '
)PROC
  IF (&H = H)
    &H = 16
  IF (&H = ' ')
    VER (&GROUP,NONBLANK)
    &PARM = 'DG      (&GROUP)'
)END
./ ADD  NAME=FSS9917
%----------------------  RACF UTILITY : ALTGROUP  ----------------------
%COMMAND ===>_ZCMD
%
+GROUP(S):
+       %===>_GROUP                       +
+
+"uebergeordnete" Gruppe:
+       %===>_SG          +
+
+Eigner: %===>_OWNER +
+
+MODEL DATASET: %===>_MODEL            + (Schreiben Sie 'NOMODEL' um die
+                            'MODEL' Datei aus dem Gruppen Profile zu lo
+
+DATA (Irgendein Text, der mit der Gruppe verknuepft sein soll)
+       %===>_DAT                                                    +
+
+ENTER%H+FOR HELP: %===>_H+
+
+ PRESS%END+KEY TO TERMINATE
)INIT
  &H  = ' ' &MODE = ' ' &DATA = ' ' &SUP = ' ' &OW = ' '
  IF (&OWNER = ' ') &OWNER   = &ZUSER
  IF ( &CODE = 0 ) .MSG = FSA991A  &CODE = ' '
)PROC
  IF (&H = H) &H = 17
  IF (&H = ' ')
    IF (&SG ^= ' ') &SUP = 'SUPGROUP(&SG)'
    IF (&OWNER ^= ' ') &OW = 'OWNER(&OWNER)'
    IF (&DAT ^= ' ') &DATA = 'DATA(''&DAT'')'
    IF (&MODEL ^= ' ') VER(&MODEL,DSNAME) &MODE = 'MODEL(&MODEL)'
      IF (&MODEL = NOMODEL)
        &MODE = 'NOMODEL'
    &PARM = 'ALG     &GROUP &SUP &OW &DATA &MODE'
    VPUT (GROUP) SHARED
)END
./ ADD  NAME=FSS9918
%----------------------  RACF UTILITY : LISTGROUP  ---------------------
%COMMAND ===>_ZCMD
%
+
+GROUP:
+       %===>_GROUP                       +
+
+
+ENTER%H+FOR HELP:
+       %===>_H+
+
+
+ PRESS%END+KEY TO TERMINATE
)INIT
  &H       = ' '
)PROC
  IF (&H = H)
    &H = 18
  IF (&H = ' ')
    &PARM = 'LG      (&GROUP)'
    VPUT (GROUP) SHARED
)END
./ ADD  NAME=FSS9919
%----------------------  RACF UTILITY : CONNECT  -----------------------
%COMMAND ===>_ZCMD
%
+Userid(s), die verknuepft werden sollen...
+       %===>_USER                        +
+
+mit der Gruppe...
+       %===>_GROUP                       +
+
+mit allgemeinem Zugriff...
+       %===>_U+    (N=NONE,R=READ,U=UPDATE,A=ALTER)
+
+und mit Berechtigung..
+       %===>_AU+   (JO=JOIN,CO=CONNECT,CR=CREATE,US=USE)
+
+Attribut(e): %===>_ATTR                   + (REVOKE,ADSP ETC)
+
+
+ENTER%H+FOR HELP:
+       %===>_H+
+
+ PRESS%END+KEY TO TERMINATE
)INIT
  &H  = ' ' &ATTR = ' '
  IF (&U = ' ') &U  = N &AU = US
  IF ( &CODE = 0 ) .MSG = FSA996
)PROC
  IF (&H = H) &H = 19
  IF (&H = ' ')
    VER (&USER,NONBLANK)
    VER (&GROUP,NB,NAME)
    VER (&U,NB,LIST,'N','R','U','A')
    VER (&AU,NB,LIST,'JO','CO','CR','US')
    &PARM = 'CO      (&USER) GROUP(&GROUP) AUTH(&AU) UACC(&U) &ATTR'
    VPUT  (USER) SHARED
)END
./ ADD  NAME=FSS9920
%----------------------  RACF UTILITY : REMOVE   -----------------------
%COMMAND ===>_ZCMD
%
+Userid(s), die entfernt werden sollen...
+       %===>_USER                        +
+
+aus der Gruppe....
+       %===>_GROUP                       +
+
+
+ENTER%H+FOR HELP:
+       %===>_H+
+
+ PRESS%END+KEY TO TERMINATE
)INIT
  &H       = ' '
  IF ( &CODE = 0 ) .MSG = FSA991B
)PROC
  IF (&H = H) &H = 20
  IF (&H = ' ')
    VER (&USER,NONBLANK)
    VER (&GROUP,NB,NAME)
    &PARM = 'RE      (&USER) GROUP(&GROUP)'
    VPUT  (USER) SHARED
)END
./ ADD  NAME=FSS9921
%----------------------  RACF UTILITY : SEARCH  ------------------------
%COMMAND ===>_ZCMD
%
+MASK:  %===>_MASK          + (Z.B. SYS1, NOMASK fuer alle Resourcen)
+VOLUME %===>_V     +         (Platte, auf der die Resource liegt)
+
+CLASS: %===>_CLASS    + (DATASET,DASDVOL,TAPEVOL,TERMINAL,USER,GROUP)
+
+CLIST:   Z.B.  STRING1 = ALD, STRING2 = UACC(READ)
+  STRING1%===>_CLIST1
+  STRING2%===>_CLIST2
+
+TYPE:  %===>_TYPE     +   (VSAM,NONVSAM,ALL,MODEL)
+
+AGE: (Die RESOURCE wurde seit%NNN+Tagen nicht mehr angefasst)
+       %===>_NBR+
+
+LIST/NOLIST:                  ENTER%H+FOR HELP:
+       %===>_L+  (Y/N)              %===>_H+
+
+ PRESS%END+KEY TO TERMINATE
)INIT
  &H = ' ' &A = ' ' &CL = ' ' &LI = ' ' &M = ' ' &VOL = ' '
  IF (&CLASS = ' ')
    &CLASS  = DATASET &L  = Y &TYPE = NONVSAM
)PROC
  IF (&H = H)
    &H = 21
  IF (&H = ' ')
    IF (&MASK ^= ' ' )
      &M = 'MASK(&MASK)'
      IF (&MASK = NOMASK )
        &M = NOMASK
    IF (&V ^= ' ' )
      &VOL = 'VOL(&V)'
    IF (&NBR ^= ' ')
      VER (&NBR,NUM)  &A  = 'AGE(&NBR)'
    IF (&CLIST1 ^= ' ')
      &CL = 'CLIST('' FUSRACF &CLIST1      '','' &CLIST2 '')'
    VER (&L,LIST,Y,N)
    &LI = TRANS ( &L Y,LIST N,NOLIST ' ',LIST)
    VER(&CLASS,NONBLANK)
    VER(&TYPE,LIST,VSAM,NONVSAM,ALL,MODEL)
    &PARM = 'SR      &M &VOL CLASS(&CLASS) &A &CL &TYPE &LI'
    VPUT  (CLASS) SHARED
)END
./ ADD  NAME=FSS9921A
%----------------------  RACF UTILITY : SEARCH  ------------------------
%COMMAND ===>_ZCMD
%
+
+
+
+
+
+                       Wollen Sie die eben erzeugte CLIST
+
%                            "&ZUSER..EXEC.RACF.CLIST"
+
+                                ausfuehren??
+
+
+                              (J/N)  %===>_A+
+
)INIT
  &A = N
)PROC
  VER(&A,LIST,J,N)
  &ANTWORT = &A
)END
./ ADD  NAME=FSS9922
%----------------------  RACF UTILITY : SETROPT  -----------------------
%COMMAND ===>_ZCMD
%
+
+Nur die%LIST+Option vorgesehen.
+
+
+
+ENTER%H+FOR HELP:
+       %===>_H+
+
+
+ PRESS%END+KEY TO TERMINATE
)INIT
  &H       = ' '
)PROC
  IF (&H = H)
    &H = 22
  IF (&H = ' ')
    &PARM = 'SETR    LIST'
)END
./ ADD  NAME=FSS9923
%----------------------  ANY RACF COMMAND  -----------------------------
%COMMAND ===>_ZCMD
%
%                    LIST OF ALLOWED RACF-COMMANDS
%
%   1 +AD              %7 +RDEF        %13+ALU          %19+CO
%   2 +DD              %8 +RDEL        %14+LU           %20+RE
%   3 +PE              %9 +RALT        %15+AG           %21+SR
%   4 +LD              %10+RL          %16+DG           %22+SETR
%   5 +ALD             %11+AU          %17+ALG
%   6 +PW              %12+DU          %18+LG
%
+COMMAND :
%    ===>_CMD         +
%
+PARAMETER :
%    ===>_P
+
+ENTER%NUMBER+FOR HELP:
+       %===>_H +
+
+ PRESS%END+KEY TO TERMINATE
)INIT
  &H   = ' '
  IF ( &CODE = 0 ) .MSG = FSA991Z  &CODE = ' '
)PROC
 IF ( &H = ' ')
    VER (&CMD,LIST,AD,DD,PE,LD,ALD,PW,RDEF,RDEL,RALT,
        RE,RL,AU,DU,ALU,LU,AG,DG,ALG,LG,CO,SR,SETR)
    &PARM = '&CMD      &P'
)END
./ ADD  NAME=FSS997
%----------------------  RACF UTILITY : RDEF  --------------------------
%COMMAND ===>_ZCMD
%
+CLASS-NAME:
+       %===>_CLASS      +                  (DASDVOL,TAPEVOL ETC)
+
+RESOURCE-NAME:
+       %===>_RESOURCE                    + (VOLSER'S)
+
+Allgemeiner Zugriff:
+       %===>_U+    (N=NONE,R=READ,U=UPDATE,A=ALTER)
+
+Nachricht an die Konsole bei Zugriff (A=jeder,F=unberechtigt,S=erfolgre
+       %===>_A+                       N=keine Nachricht)
+
+DATA (Irgendein Text, der mit der Resource verbunden sein soll)
+       %===>_DAT                                                    +
+
+ENTER%H+FOR HELP:
+       %===>_H+
+
+
+ PRESS%END+KEY TO TERMINATE
)INIT
  &H     = ' '
  IF (&U = ' ') &U = R &CLASS = TAPEVOL &A = F
)PROC
  IF (&H = H) &H = 7
  IF (&H = ' ')
    VER (&CLASS,NONBLANK)
    VER (&RESOURCE,NONBLANK)
    VER (&U,NB,LIST,'N','R','U','A')
    VER (&A,NB,LIST,'A','F','S','N')
    IF (&DAT ^= ' ')
      &DATA = 'DATA(''&DAT'')'
    &PARM = 'RDEF    &CLASS (&RESOURCE) UACC(&U) AUDIT(&A) &DATA'
    VPUT (CLASS,RESOURCE) SHARED
)END
./ ADD  NAME=FSS998
%----------------------  RACF UTILITY : RDEL  --------------------------
%COMMAND ===>_ZCMD
%
+
+CLASS-NAME:
+       %===>_CLASS      +                  (DASDVOL,TAPEVOL ETC)
+
+RESOURCE-NAME:
+       %===>_RESOURCE                    + (VOLSER'S)
+
+
+
+
+ENTER%H+FOR HELP:
+       %===>_H+
+
+
+ PRESS%END+KEY TO TERMINATE
)INIT
  &H = ' '
  IF ( &CLASS = ' ')
    &CLASS = TAPEVOL
)PROC
  IF (&H = H)
    &H = 8
  IF (&H = ' ')
    VER (&CLASS,NONBLANK)
    VER (&RESOURCE,NONBLANK)
    &PARM = 'RDEL    &CLASS (&RESOURCE)'
    VPUT (CLASS,RESOURCE) SHARED
)END
./ ADD  NAME=FSS999
%----------------------  RACF UTILITY : RALTER  ------------------------
%COMMAND ===>_ZCMD
%
+CLASS-NAME:
+       %===>_CLASS      +                  (DASDVOL,TAPEVOL ETC)
+
+RESOURCE-NAME:
+       %===>_RESOURCE                    + (VOLSER'S)
+
+Allgemeiner Zugriff:
+       %===>_U+    (N=NONE,R=READ,U=UPDATE,A=ALTER)
+
+Nachricht an die Konsole bei Zugriff (A=jeder,F=unberechtigt,S=erfolgre
+       %===>_A+                       N=keine Nachricht)
+
+DATA (Irgendein Text, der mit der Resource verbunden sein soll)
+       %===>_DAT                                                    +
+
+ENTER%H+FOR HELP%===>_H+
+
+
+ PRESS%END+KEY TO TERMINATE
)INIT
  &H     = ' '
  IF (&CLASS = ' ')  &CLASS = TAPEVOL
)PROC
  IF (&H = H) &H = 9
  IF (&H = ' ')
    VER (&CLASS,NONBLANK)
    VER (&RESOURCE,NONBLANK)
    IF ( &U ^=' ' ) VER (&U,NB,LIST,'N','R','U','A')
    IF (&A ^= ' ')
      VER (&A,NB,LIST,'A','F','S','N')
      &AUD = 'AUDIT(&A)'
    IF (&DAT ^= ' ')
      &DATA = 'DATA(''&DAT'')'
    &PARM = 'RALT    &CLASS (&RESOURCE) UACC(&U) &AUD &DATA'
    VPUT  (CLASS,RESOURCE) SHARED
)END
./ ADD  NAME=FUSRACF
FUSRACF  TITLE '-  AUFRUF DES PROGRAMMS FSRACF1 '
FUSRACF  CSECT
         SPACE 4
*-------------------------------------------------------------------*
*       DIESES PROGRAM WIRD AUS EINER CLIST GERUFEN.                *
*       DIE DABEI UEBERGEBENE CPPL WIRD MODIFIZIERT                 *
*       UND WEITERGEREICHT AN DAS PGM FSRACF1, WELCHES              *
*       WIEDERUM RACF COMMAND'S AUFRUFT.                            *
*                                                                   *
*       BEISPIEL :                                                  *
*         EINGABE:                                                  *
*             FUSRACF LD      DATASET(RP.CNTL) ALL    1)            *
*                                                                   *
*          IM CMDBUFFER STEHT DANN                                  *
*             BYTE 1-2 : LAENGE DES GESAMTEN EINGABESTRINGS         *
*             BYTE 3-4 : BEGINN DER PARAMETERLISTE VON ANFANG       *
*                        DES CMDBUFFERS AUS.(HIER ALSO H'8',        *
*                        DA DAS L VON LD AUF STELLE 8 STEHT.)       *
*         VERARBEITUNG :                                            *
*            MODIFIZIERUNG DES CMD BUFFERS                          *
*             BYTE 1-2 : LAENGE DES GESAMTEN EINGABESTRINGS         *
*             BYTE 3-4  : H(16) (1.BUCHSTABE VON 'DATASET')         *
*             LD              DATASET(RP.CNTL) ALL                  *
*                                                                   *
*    1)  ***  DAS PGM ERWARTET GENAU AN DER 16.STELLE DEN           *
*             PARAMETERSTRING DES RACF COMMANDS !!!                 *
*                                                                   *
*-------------------------------------------------------------------*
         SAVE  (14,12),,FUSRACF.01.12.81
         LR    R12,R15             PROGRAM ADDRESSABILITY
         USING FUSRACF,R12
         ST    R13,SAVEAREA+4      SAVE CALLERS SAVEAREA ADR
         LA    R11,SAVEAREA        GET OWN SAVEAREA ADR
         ST    R11,8(R13)          SAVE FUSRACF SAVEAREA ADR TO R13
         LR    R13,R11             ADDR. OWN SA TO REG 13
         LR    R2,R1               SAVE CPPL
         MVC   RACFCPPL+4(12),4(R1) GET PTR FOR UPT, PSCB AND ECT
         MVI   CMDBUF,C' '         CLEAR COMMAND BUFFER
         MVC   CMDBUF+1(255),CMDBUF CLEAR COMMAND BUFFER
         L     R2,0(R2)            GET OLD CMD BUFFER
         LH    R3,0(R2)            GET LENGTH TO MOVE
         EX    R3,EXCMDBUF         UEBERTRAG PARMSTRING
         MVC   CFUSRACF,CRACFCMD
         MVC   CRACFCMD,=CL7' '
         LA    R4,16               BEGINN NONBLANK CHARACTER
         STH   R4,CMDBUF+2             IN CMDBUFFER
*        MVI   BUFFER,C' '         * TEST
*        MVC   BUFFER+1(79),BUFFER * TEST
*        MVC   BUFFER,CMDBUF       * TEST
*        TPUT  BUFFER,80           * TEST
LOADCPPL LA    R1,RACFCPPL         PICK UP CPPL POINTER
LINK     LINK  EP=FSRACF1          INVOKE PROGRAM OR COMMAND
RETURN   L     R13,SAVEAREA+4      RESTORE R13
         RETURN (14,12),RC=(15)    RETURN TO CALLING PROGRAM
***********************************************************************
*                                                                     *
* DEFINITIONS                                                         *
*                                                                     *
***********************************************************************
         SPACE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12                   BASE REGISTER
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE 3
*BUFFER  DC    CL80' '             * TEST
CMDBUF   DS    0D,CL256            COMMAND BUFFER
         ORG   CMDBUF
         DS    A                   LAENGE
CFUSRACF DS    CL7                 STRING (FUSRACF)
         DS    CL1                 BLANK
CRACFCMD DS    CL7                 STRING (ADDSD,DELDSD,PERMIT,LISTDSD)
         ORG
RACFCPPL DC    A(CMDBUF),3A(0)     COMMAND PROCESSOR PARAMETER LIST
EXCMDBUF MVC   CMDBUF(0),0(R2)     UEBERTRAG PARMSTRING
SAVEAREA DS    18F                 REGISTER SAVE AREA
         END
./ ADD  NAME=IGC0023E
IGC00235 TITLE '- AUTHORIZATION ON/OFF SVC'
         SPACE 5
***********************************************************************
*                                                                     *
*        5788-DRG COPYRIGHT IBM DEUTSCHLAND GMBH 1979                 *
*        LICENSED MATERIAL - PROGRAM PROPERTY OF IBM                  *
*        SIEHE IBM COPYRIGHT-RICHTINIEN FORM 30617-4                  *
*                                                                     *
***********************************************************************
         SPACE 5
IGC00235 CSECT                       AUTHORIZATION ON/OFF SVC
         BALR  12,0                  PROGRAM ADDRESSABILITY
         USING *,12
         L     2,28(5)               ADDRESS OF CALLERS RB TO R2
         CLC   21(3,2),361(3)        CHECK RESUME PSW
         BL    RETURN                EXIT, CALLER NOT IN PLPA
         L     2,180(4)              ADDRESS OF JSCB TO R2
         BCT   0,AUTHOFF             R0 ^= 1 REQUESTS AUTH OFF
AUTHON   OI    236(2),X'01'          SET JSCBAUTH BIT
         B     RETURN                EXEC WITH AUTHORIZATION ON
AUTHOFF  NI    236(2),X'FE'          CLEAR JSCBAUTH BIT
RETURN   BR    14
         END   IGC00235
