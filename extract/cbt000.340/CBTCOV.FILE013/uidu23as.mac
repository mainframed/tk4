         TITLE 'DUMP SPOOL SUPPORT PROGRAM'
         MACRO
&NAME    EANF  &V,&CD=C,&LC=0,&BR=1,&SA=72,&EP=,&ID=,&REG=(14,12),     1
               &CT=
.*
.* V     REG. 15 WIRD ZUM LADEN DER BASISREG. BENUTZT
.* CD=   STANDARDWERT IST -S- WIE -START-
.*       ZULAESSIG AUCH -C- WIE -CSECT-
.* LC=   STANDARDWERT IST -0-, SETZT ZUORDNUNGSZAEHLER AUF 0
.*       NUR ZULAESSIG IN VERBINDUNG MIT -START-, SIEHE CD=
.* BR=   STANDARDWERT IST -1- WIE -EIN BASISREGISTER=BASIS1=R3-
.*       ZULAESSIG IST 0,1,2 ODER 3
.* SA=   STANDARDWERT IST -72-
.*       GIBT DIE LAENGE DER SAVEAREA AN
.* EP=   NAME DES EINGANGSPUNKTES. WENN ANGEGEBEN,SO WIRD
.*       ER MERKMAL DER SAVE-INSTUKTION IN DER MAKROAUFLOESUNG
.* ID=   IDENTIFIKATION, WIE BEIM SAVE-MACRO ANGEGEBEN WERDEN KANN
.* REG=  REGISTERNOTIERUNG, STANDARDWERT IST (14,12)
.*       WIE IM SAVE-MACRO ANGEGEBEN WERDEN KANN
.* CT=   T,
.*       WIE IM SAVE-MACRO ANGEGEBEN WERDEN KANN
.*
.* GLOBALE VARIABLE ZUM TEST GEGEN DOPPELDEFINITION DER REGISTER
         GBLB  &GLBIT   BETROFFEN SIND DIE EQU'S
         GBLA  &GLBR
         LCLA  &SETBR   ZUM TEST FUER BR=
         LCLA  &LECS
         LCLC  &CSET
         LCLA  &ASET
.*
         AIF   (T'&NAME EQ 'O').M1
.M2      AIF   ('&CD' EQ 'S').M3
         AIF   ('&CD' EQ 'C').M4
         MNOTE 4,'CD=  IST UNGUELTIG'
.M3      MNOTE *,'START GENERIERT'
&NAME    START &LC
         AGO   .M5
.M4      MNOTE *,'CSECT GENERIERT'
&NAME    CSECT
.M5      ANOP
         AIF   (&GLBIT).E1
*
*
*
         MNOTE *,'SYMBOLISCHE REGISTER GENERIERT'
*
R15      EQU   15  VERZWEIGREGISTER
R14      EQU   14  RUECKKEHRREGISTER
R13      EQU   13  REGISTER FUER DEN LAUFENDEN SICHERUNGSBEREICH
R12      EQU   12
R11      EQU   11
R10      EQU   10
R9       EQU   9
R8       EQU   8
R7       EQU   7
R6       EQU   6
R5       EQU   5
R4       EQU   4
R3       EQU   3
R2       EQU   2   BEI TRT-EINGABEDATENPRUEFUNG VERWENDET
R1       EQU   1   PARAMETERREGISTER
R0       EQU   0   PARAMETERREGISTER
*
*
.E1      AIF   ('&BR'(1,1) NE '(').E2
         AGO   .M22
.E2 ANOP
&SETBR   SETA  &BR
         AIF   (&GLBIT).M18
.M19     AIF   (&SETBR EQ 0).M6
         AIF   (&SETBR GE 1).M8
.M9      AIF   (&SETBR GE 2).M10
.M12     ANOP
         AIF   (&GLBR GT &SETBR).M22
&GLBR    SETA  &SETBR
.M22     ANOP
**
**
         USING *,R15
MACR&SYSNDX EQU *
&EP      SAVE  &REG,&CT,&ID
         LR    2,1
         AIF   (T'&EP EQ 'O').M13
         AIF   (T'&EP EQ 'SYSECT').M21
         ENTRY &EP
         MNOTE *,'ENTRY-EINGANGSPUNKT GENERIERT'
.M13        CNOP  0,4
            LA    1,*+8
            B     *+4+&SA
            DS    &SA.C
         ST    R13,4(R1)
         LR    R10,R13
         LA    R13,0(R1)
         ST    R13,8(R10)
         LR   1,2
         AIF   (&GLBIT).M17
*
* AUFBAU DER SAVEAREA
*
* WORT 0  NUR VON PL/1 VERWENDET
* WORT 1  A(SAVEAREA IM RUFENDEN PROGRAMM)
* WORT 2  A(SAVEAREA IM GERUFENEN PROGRAMM)
* WORT 3  R14
* WORT 4  R15
* WORT 5  R0         **BEI         R14
* WORT 6  R1         **ZUGRIFFS-   R15
* WORT 7  R2         **ROUTINEN    R0
* WORT 8  R3 BASIS1  **WERDEN      R1
* WORT 9  R4 BASIS2  **HIER        R2
* WORT 10 R5 BASIS3  **FOLGENDE    R3
* WORT 11 R6         **REGISTER    R4
* WORT 12 R7         **VON DER     R5
* WORT 13 R8         **ZUGRIFFS-   R6
* WORT 14 R9         **ROUTINE     R7
* WORT 15 R10        **GESPEICHERT R8
* WORT 16 R11
* WORT 17 R12
*
.M17     ANOP
         AIF   ('&BR'(1,1) NE '(').E5
&SETBR   SETA  N'&BR
         BALR  &BR(1),0
         USING *,&BR(1)
         AIF   (&SETBR EQ 1).M14
         AIF   (&SETBR GT 10).E4
.E3      ANOP
&LECS    SETA  2
&ASET    SETA  1
         LA    &BR(&SETBR),4095
         LA    &BR(&LECS),1(&BR(&ASET),&BR(&SETBR))
         AIF   (&LECS NE &SETBR).E11
 USING *+4096-&SETBR*4,&BR(2)
 AGO .M14
.E11  ANOP
&LECS    SETA  &LECS+1
&ASET    SETA  &ASET+1
         LA    &BR(&LECS),1(&BR(&ASET),&BR(&SETBR))
         AIF   (&LECS NE &SETBR).E12
 USING *+4096-&SETBR*4,&BR(2),&BR(3)
 AGO .M14
.E12  ANOP
&LECS    SETA  &LECS+1
&ASET    SETA  &ASET+1
         LA    &BR(&LECS),1(&BR(&ASET),&BR(&SETBR))
         AIF   (&LECS NE &SETBR).E13
 USING *+4096-&SETBR*4,&BR(2),&BR(3),&BR(4)
 AGO .M14
.E13  ANOP
&LECS    SETA  &LECS+1
&ASET    SETA  &ASET+1
         LA    &BR(&LECS),1(&BR(&ASET),&BR(&SETBR))
         AIF   (&LECS NE &SETBR).E14
 USING *+4096-&SETBR*4,&BR(2),&BR(3),&BR(4),&BR(5)
 AGO .M14
.E14  ANOP
&LECS    SETA  &LECS+1
&ASET    SETA  &ASET+1
         LA    &BR(&LECS),1(&BR(&ASET),&BR(&SETBR))
         AIF   (&LECS NE &SETBR).E15
 USING *+4096-&SETBR*4,&BR(2),&BR(3),&BR(4),&BR(5),&BR(6)
 AGO .M14
.E15  ANOP
&LECS    SETA  &LECS+1
&ASET    SETA  &ASET+1
         LA    &BR(&LECS),1(&BR(&ASET),&BR(&SETBR))
         AIF   (&LECS NE &SETBR).E16
 USING *+4096-&SETBR*4,&BR(2),&BR(3),&BR(4),&BR(5),&BR(6),&BR(7)
 AGO .M14
.E16  ANOP
&LECS    SETA  &LECS+1
&ASET    SETA  &ASET+1
         LA    &BR(&LECS),1(&BR(&ASET),&BR(&SETBR))
         AIF   (&LECS NE &SETBR).E17
 USING *+4096-&SETBR*4,&BR(2),&BR(3),&BR(4),&BR(5),&BR(6),&BR(7),&BR(8)
 AGO .M14
.E17  ANOP
&LECS    SETA  &LECS+1
&ASET    SETA  &ASET+1
         LA    &BR(&LECS),1(&BR(&ASET),&BR(&SETBR))
         AIF   (&LECS NE &SETBR).E18
 USING *+4096-&SETBR*4,&BR(2),&BR(3),&BR(4),&BR(5),&BR(6),&BR(7),&BR(8)*
               ,&BR(9)
 AGO .M14
.E18  ANOP
&LECS    SETA  &LECS+1
&ASET    SETA  &ASET+1
         LA    &BR(&LECS),1(&BR(&ASET),&BR(&SETBR))
         AIF   (&LECS NE &SETBR).E19
 USING *+4096-&SETBR*4,&BR(2),&BR(3),&BR(4),&BR(5),&BR(6),&BR(7),&BR(8)*
               ,&BR(9),&BR(10)
 AGO .M14
.E19  ANOP
         AGO   .M14
.E4      MNOTE 4,'MEHR ALS 10 BASISREGISTER ANGEGEBEN'
         MNOTE *,'10 BASISREGISTER WERDEN GENERIERT'
&SETBR   SETA  10
         AGO   .E3
.E5      AIF   (&SETBR EQ 0).M14
         AIF   ('&V' EQ 'V').M25
         BALR  BASIS1,0
         USING *,BASIS1
.M26     ANOP
         MNOTE *,'BASIS1 BEREITGESTELLT, GELADEN'
.M24     ANOP
         AIF   (&SETBR EQ 1).M14
         AIF   (&SETBR EQ 2).M15
         AIF   ('&V' EQ 'V').M27
         USING *+4096,BASIS2,BASIS3
.M28     ANOP
         LA    BASIS3,4095
         LA    BASIS2,1(BASIS1,BASIS3)
         LA    BASIS3,1(BASIS2,BASIS3)
         MNOTE *,'BASIS2 UND BASIS3 BEREITGESTELLT, GELADEN'
.M14     ANOP
&GLBIT   SETB  1
*
*
*   ENDE DES VORSPANNES
*
*
         MEXIT
.M15     AIF   ('&V' EQ 'V').M29
         USING *+4096,BASIS2
.M30     ANOP
         LA    BASIS2,4095
         LA    BASIS2,1(BASIS1,BASIS2)
         MNOTE *,'BASIS2 BEREITGESTELLT, GELADEN'
         AGO   .M14
.M18     AIF   (&GLBR GE &SETBR).M12
         AIF   (&GLBR EQ 0).M19
         AIF   (&GLBR EQ 1).M9
         AIF   (&GLBR EQ 2).M11
         AGO   .M20
.M1      MNOTE 12,'UNBENANNTE CONTROL-SECTION'
         AGO   .M2
.M6      MNOTE *,'KEINE BASISREGISTER GENERIERT'
         AGO   .M12
.M8      MNOTE *,'BASIS1 GENERIERT'
BASIS1   EQU   3   ** BASISREGISTER 1 **
         AGO   .M9
.M10     MNOTE *,'BASIS2 GENERIERT'
BASIS2   EQU   4   ** BASISREGISTER 2 **
         AIF   (&SETBR GE 3).M11
         AGO   .M12
.M11     MNOTE *,'BASIS3 GENERIERT'
BASIS3   EQU   5   ** BASISREGISTER 3 **
         AIF   (&SETBR EQ 3).M12
.M20     MNOTE 4,'BR=  ZU HOCH'
         AGO   .M12
.M21     MNOTE 4,'EP=  CSECT-NAME'
         AGO   .M13
.M25     USING MACR&SYSNDX,BASIS1
         LR    BASIS1,R15
         AGO   .M26
.M27     USING MACR&SYSNDX+4096,BASIS2,BASIS3
         AGO   .M28
.M29     USING MACR&SYSNDX+4096,BASIS2
         AGO   .M30
         MEND
         EJECT
         MACRO
&NAME    ERET  &REG=(14,12),&CT=,&RC=,&SA=72
.* RC=   RETURN-CODE,
.*       WIE IM RETURN-MACRO ANGEGEBEN WERDEN KANN
.* REG=  REGISTERNOTIERUNG, STANDARDWERT IST (14,12)
.*       WIE IM RETURN-MACRO ANGEGEBEN WERDEN KANN
.* CT=   T,
.*       WIE IM RETURN-MACRO ANGEGEBEN WERDEN KANN
.* SA=   LAENGE DER SAVEAREA, STANDARDWERT IST 72
         LCLC  &TRC  DEFINIERT DEN TYP VON &RC
&TRC     SETC  T'&RC  DAMIT AUF FEHLEN VON RC= GEPRUEFT WERDEN KANN
&NAME    LA    1,0(13)
         L     13,4(1)
         LR    1,2
         AIF   ('&REG' EQ 'NO').M3
         AIF   ('&TRC' EQ 'O').M1
         RETURN &REG,&CT,RC=&RC
         AGO   .M2
.M1      RETURN &REG,&CT
.M2      MNOTE *,'ERET GENERIERT'
         MEXIT
.M3      AIF   ('&TRC' EQ 'O').M4
         RETURN &CT,RC=&RC
         AGO   .M2
.M4      RETURN &CT
         AGO   .M2
         MEND
         EJECT
DSPOOL   EANF  BR=2
         B     EYECATCH
         DC    CL16'DSPOOL 210984'
EYECATCH EQU   *
         MVC   VOLCNT,=H'1'             SET DEFAULT VOLUME COUNT
         MVC   VOLMAX,=H'1'             SET DEFAULT MAX VOL COUNT
         MVI   COMMCHAR,C','            SET DEFAULT JES2 COMM CHAR
         MVC   TURETPD,=H'1'            SET DEFAULT RETENTION PERIOD
         L     R1,0(R1)                 PROCESS PARM FIELD
         CLC   0(2,R1),=H'3'            PARAMETER PRESENT ?
         BNE   NA0                      - NO
         MVC   COMMCHAR,2(R1)           PICK UP COMMUNICATION CHARACTER
         PACK  DOPPLW,3(2,R1)           PICK UP MAXIMUM VOLUME COUNT
         CVB   R2,DOPPLW                 AND CONVERT IT
         STH   R2,VOLMAX                  TO BINARY
NA0      EQU   *
         LA    R7,ZPARM                INIT INDEX REG
         ST    R7,ZPRMSAVE              AND SAVE IT
*
*   READ CONTROL TABLE
*
         L     R8,=A(CBERAREA)          CLEAR CONTROL TABLE
         LA    R9,9*276                 *
         ICM   R1,15,=X'40000000'       *
         MVCL  R8,R0                    *
         L     R5,=A(CBERAREA)          ADDRESSABILITY OF CONTROL TABLE
         USING CBER,5                   *
         OPEN  (CTL,UPDAT)             OPEN CTL DATA SET
         MVI   ZDAT,X'FF'              INIT COMPARE DATE
         XC    SWITCH,SWITCH           RESET INDICATORS
NA0A     EQU   *
         MVC   CDECB,READL              COPY DECB TO INPUT AREA
         LA    R2,CDECB                 ADDR OF DECB
         ST    R5,CDECBARE              ADDR OF INPUT/OUTPUT AREA
NA0B     EQU   *
         READ  (2),SF,MF=E           READ CONTROL RECORD
         CHECK (2)                     AND CHECK
         CLC   DUMPER(3),=C'DMP'       DUMPER ENTRY ?
         BNE   NA0B                    IF NOT IGNORE IT
         LA    R5,276(R5)               INCREASE TABLE INDEX
         CLI   CBER,X'FF'               END OF TABLE ?
         BNE   NA0A                     NO, READ NEXT ENTRY
*----END OF CONTROL TABLE----*
         SPACE 3
*
*   GET NUMBER OF VOLUMES AND RETENTION PERIOD
*
NA0C     EQU   *
         XC    WECB,WECB               CLEAR WTOR ECB
         MVC   REPLY,=40C' '           CLEAR REPLY FIELD
         WTOR  'MAX. ANZAHL VOLUMES ?',REPLY,40,WECB,ROUTCDE=1
         WAIT  ECB=WECB                WAIT FOR REPLY
         TRT   REPLY,TBL                LOOK FOR BLANK
         BZ    NA0C                     ERROR IF NONE
         S     R1,=A(REPLY+1)           LENGTH OF REPLY
         BM    NA00                     NULL REPLY. TAKE DEFAULT
         CH    R1,=H'2'                 REPLY TOO LONG ?
         BH    NA0C                     - YES
         EX    R1,PACK1                 PACK VOLUME COUNT
         CVB   R1,DOPPLW                CONVERT TO BINARY
         LTR   R1,R1                    TEST VOLUME COUNT
         BZ    INVVOLC                  ZERO NOT ALLOWED
         CH    R1,VOLMAX                MORE THAN MAXIMUM ?
         BH    NA0C
         STH   R1,VOLCNT                STORE VOLUME COUNT
NA00     EQU   *
         LH    R1,VOLCNT                MOVE VOLUME COUNT
         STC   R1,TUVOLCNT               INTO DYNALLOC TEXT UNIT
         BCTR  R1,0                     DECREASE IT BY ONE
         STH   R1,VOLCNT
NA001    EQU   *
         XC    WECB,WECB               CLEAR WTOR ECB
         MVC   REPLY,=40C' '           CLEAR REPLY FIELD
         WTOR  'SPERRFRIST IN TAGEN ?',REPLY,40,WECB,ROUTCDE=1
         WAIT  ECB=WECB                WAIT FOR REPLY
         TRT   REPLY,TBL                LOOK FOR BLANK
         BZ    NA001                    ERROR IF NONE
         S     R1,=A(REPLY+1)           LENGTH OF REPLY
         BM    NA1                      NULL REPLY. TAKE DEFAULT
         CH    R1,=H'2'                 REPLY TOO LONG ?
         BH    NA001                    - YES
         EX    R1,PACK1                 PACK VOLUME COUNT
         CVB   R1,DOPPLW                CONVERT TO BINARY
         CH    R1,=H'365'               MORE THAN MAXIMUM ?
         BH    NA001                    YES
         STH   R1,TURETPD               STORE RETENTION PERIOD
*
*  LOOK FOR A FREE DUMPER
*
NA1      EQU   *
         L     R5,=A(CBERAREA)          ADDRESSABILITY OF CONTROL TABLE
NA1A     EQU   *
         CLI   STATUS,C' '             IS IT A FREE RECORD ?
         BE    NA11                    YES, USE IT
         CLI   STATUS,C'L'             DUMP ALREADY LOADED ?
         BNE   NA101                   NO, TRY NEXT
         TM    SWITCH,END2             2ND PASS ?
         BO    NA10
         CLC   ZDAT,DDATE              LOOK FOR OLDEST ENTRY
         BL    NA101
         MVC   ZDAT,DDATE              STORE DATE
         B     NA101
NA10     EQU   *
         CLC   ZDAT,DDATE              RE-FIND ENTRY
         BE    NA11
NA101    EQU   *
         LA    R5,276(R5)               INCREASE INDEX OF CONTROL TABLE
         CLI   CBER,X'FF'               END OF TABLE ?
         BE    ENDE                     - YES
         B     NA1A
NA11     EQU   *
         MVI   STATUS,C'D'              MARK ENTRY RESERVED
         MVI   FWRITE,C'W'              SET WRITE INDICATOR
         MVC   DDATE,=C'.....'         INIT DATES
         MVC   LDATE,=C'.....'
         MVC   DTIME,=C'......'
         MVC   LTIME,=C'......'
         MVC   DPARM,=195C' '          CLEAR PARAMETER AREA
         SPACE
*   RESET DUMPER DEFINITION
         SPACE
         MVC   CMDTEXT,=CL48'+TDMP.,DSN=SYS0.DSN'
         MVC   CMDTEXT(1),COMMCHAR
         MVC   CMDTEXT+2(4),DUMPER
         LA    R1,COMMAND               LOAD PARM REG
         XR    R0,R0
         SPACE
         SVC   250                      ISSUE $TDMP. COMMAND
         SPACE
         LA    R0,1
         LNR   R1,R0
         SVC   34                       DELETE COMMAND INPUT BUFFER
         SPACE
*   LOCATE RELATIVE GDG NUMBER
         SPACE
         MVC   DSNL,=CL44'I.SPOOLOFF(+1)'  MOVE IN REL GDG
         LOCATE NAMEL
         B     *+4
         B     NA2                     OK
         B     F4
         B     F8
         B     F12
         B     F16
         B     F20
         B     F24
         B     F28
NA2      EQU   *
         MVC   DSNAME,DSNL             FULLY QUALIFIED DSNAME
         MVI   SVC99RBV,X'01'          SET VERB TO ALLOC
         LA    R1,SVC99TPA             TEXT POINTER LIST
         ST    R1,SVC99RBU
         LA    R1,SVC99RBP             LOAD SVC99 RB PTR
         DYNALLOC                      ALLOC NEW DUMP DATA SET
         LTR   R15,R15
         BNZ   NOALLOC                 ALLOC FAILED
         OPEN  (TAPE,OUTPUT)           OPEN DUMP DATA SET
         LH    R2,VOLCNT                TEST VOLUME COUNT
         LTR   R2,R2                    *
         BZ    NA20                     IF ZERO, TAKE ONE TAPE ONLY
NA2A     EQU   *
         PUT   TAPE,OUTAREA             WRITE DUMMY RECORD
         FEOV  TAPE                     FORCE END OF VOLUME
         BCT   R2,NA2A                  DECREASE AND TEST VOLUME COUNT
NA20     EQU   *
         CLOSE TAPE                    AND CLOSE IT
         MVI   SVC99RB+1,X'02'         SET VERB TO UNALLOC
         LA    R1,SVC99TPU             TEXT POINTER LIST
         ST    R1,SVC99RBU
         LA    R1,SVC99RBP             LOAD SVC99 RB PTR
         DYNALLOC                      DEALLOC DUMP DATA SET
         LTR   R15,R15
         BNZ   NODEALL                 DEALLOC FAILED
         MVC   VOLSER,=6C' '           INT VOL SER
         LOCATE NAMEL                  FIND VOL SER OF NEW DUMP DS
         LTR   R15,R15
         BNZ   NA21
         MVC   VOLSER,LOCAREA+6        MOVE VOL SER TO CONTROL RECORD
NA21     EQU   *
         SPACE
*   SET  DUMPER DEFINITION
         SPACE
         MVC   CMDTEXT,=CL48'+TDMP.,DSN='
         MVC   CMDTEXT(1),COMMCHAR
         MVC   CMDTEXT+2(4),DUMPER
         MVC   CMDTEXT+11(19),DSNAME
         LA    R1,COMMAND               LOAD PARM REG
         XR    R0,R0
         SPACE
         SVC   250                      ISSUE $TDMP. COMMAND
         SPACE
         LA    R0,1
         LNR   R1,R0
         SVC   34                       DELETE COMMAND INPUT BUFFER
         SPACE
*   ISSUE  WTOR
         SPACE
         MVC   PARM(3),=C'DMP'          SET 'DMP' REPLY
         TM    SWITCH,DMPN              REQUEST FOR ADDITIONAL DUMPER ?
         BO    DUMP2                    - YES. BYPASS PARM WTOR
         SPACE
         MVC   WTO1+16(4),DUMPER
         CNOP  0,4
WTO1     WTO   'DUMPER  DMP1  IST BEREIT. BITTE DUMP-PARAMETER EINGEBEN*
               ',ROUTCDE=2,DESC=2
         ST    R1,MSG1                 SAVE MSG ID
         XC    WECB,WECB               CLEAR WTOR ECB
         MVC   PARM,=40C' '            CLEAR PARM FIELD
         WTOR  ' Q=, C=, J=, S=    ODER  NO',PARM,40,WECB,ROUTCDE=1
         WAIT  ECB=WECB                WAIT FOR REPLY
         L     R1,MSG1                 DELETE
         DOM   MSG=(1)                  MESSAGE
WTO10    EQU   *
         CLC   PARM(3),=C'NO '         NO DUMP ?
         BE    OK1                     - YES
         CLC   PARM(3),=C'DMP'         PARALLEL DUMP ?
         BE    PARAL                   - YES
         CLC   PARM(6),=C'S=ALL '       ALL SPECIFIED ?
         BE    WTO11                    - YES
         CLC   PARM(3),=C'ALL '        ALL SPECIFIED ?
         BNE   DUMP1                   - NO
         CLC   PARM(4),=C'ALL '        VALID SPECIFICATION ?
         BNE   FPARM
WTO11    EQU   *
         XC    WECB,WECB               CLEAR WTOR ECB
         MVC   REPLY,=40C' '           CLEAR PARM FIELD
         WTOR  'ENTER ''ALL=YES'' WENN DER GESAMTE SPOOL-SPACE ENTLADEN*
                WERDEN SOLL, SONST ''NO''',REPLY,7,WECB,ROUTCDE=1
         WAIT  ECB=WECB
         CLC   REPLY(8),=CL8'ALL=YES'  CONFIRMED ?
         BNE   NOALL                   NO
         B     DUMP11                  YES
DUMP1    EQU   *
         SPACE
*    ASK FOR CONFIRMATION OF DUMP-PARAMETERS
         SPACE
         WTO   'FOLGENDE DUMP-PARAMETER WURDEN EINGEGEBEN',ROUTCDE=2,  *
               DESC=2
         ST    R1,MSG1                 SAVE MESSAGE ID
         MVC   WTOAREA,PARM            MOVE PARAMETERS TO WTO
         WTO   MF=(E,WTOLIST)          PASS PARM LIST TO OPERATOR
         ST    R1,MSG2                 SAVE MSG ID
         XC    WECB,WECB               CLEAR WTOR ECB
         MVC   REPLY,=40C' '           CLEAR REPLY-FIELD
         WTOR  'ENTER ''DUMP=YES'' WENN DUMP-PARAMETER OK, SONST ''NO''*
               ',REPLY,8,WECB,ROUTCDE=1
         WAIT  ECB=WECB                WAIT FOR REPLY
         OI    MSG2,X'80'              SET MSG LIST TERMINATOR
         DOM   MSGLIST=MSG1            DELETE OPERATOR MESSAGES
         CLC   REPLY(9),=CL9'DUMP=YES' CONFIRMED ?
         BNE   WTO1                    NO. PROMPT FOR DUMP PARMS
DUMP11   EQU   *
         SPACE
*   MOVE DUMP PARAMETERS TO CTL AREA
         SPACE
         CLC   PARM(4),=C'ALL '         CONVERT ALL-REQUEST TO
         BNE   DUMP12                    S=ALL
         MVC   PARM(6),=C'S=ALL '
DUMP12   EQU   *
         LA    R6,ZPARM+195            CALCULATE REMAINING SPACE
         SR    R6,R7                   *
         TRT   PARM(41),TBL            GET LENGTH OF PARM
         BZ    FPARM                   ERROR
         S     R1,=A(PARM)             LENGTH
         CR    R1,R6                   COMPARE WITH REMAINING SPACE
         BNL   FPARM1                  NO SPACE
         BCTR  R1,0                    DECREASE FOR EX
         EX    R1,MOVE1                MOVE PARM
         LA    R7,1(R7,R1)             INCREASE INDEX
         SPACE
         MVC   CMDTEXT,=CL48'+DUMP,'   BUILD $DUMP COMMAND
         MVC   CMDTEXT(1),COMMCHAR
         MVC   CMDTEXT+6(40),PARM
         LA    R1,COMMAND               LOAD PARM REG
         XR    R0,R0
         SPACE
         SVC   250                      ISSUE $DUMP  COMMAND
         SPACE
         LA    R0,1
         LNR   R1,R0
         SVC   34                       DELETE COMMAND INPUT BUFFER
         SPACE
DUMP2    EQU   *
         WTO   'WENN DUMP-PARAMETER INVALID ENTER ''FFF'' (WIEDERHOLUNG*
               )',ROUTCDE=2,DESC=2
         ST    R1,MSG1                 SAVE MSG ID
         XC    WECB,WECB               CLEAR WTOR ECB
         MVC   REPLY,=40C' '            AND REPLY AREA
         WTOR  'WENN DUMP BEENDET (DUMPX  INACTIVE) ENTER ''END'' ODER *
               NEUE DUMP PARAMETER',REPLY,40,WECB,ROUTCDE=1
DUMPS1   EQU   *
         CLC   PARM(3),=C'DMP'         PARALLEL DUMP ?
         BE    DUMPS11                 - YES, START NEW DUMPER
         TM    SWITCH,SDMP             DUMPER ALREADY STARTED ?
         BO    DUMPS2
         SPACE
*   START   DUMPER
         SPACE
DUMPS11  EQU   *
         MVC   CMDTEXT,=CL48'+S'
         MVC   CMDTEXT(1),COMMCHAR
         MVC   CMDTEXT+2(4),DUMPER
         LA    R1,COMMAND               LOAD PARM REG
         XR    R0,R0
         SPACE
         SVC   250                      ISSUE $SDMP. COMMAND
         SPACE
         LA    R0,1
         LNR   R1,R0
         SVC   34                       DELETE COMMAND INPUT BUFFER
         OI    SWITCH,SDMP             DUMPER STARTED
DUMPS2   EQU   *
         SPACE 2
         WAIT  ECB=WECB                WAIT FOR REPLY
         SPACE
         L     R1,MSG1                 DELETE MESSAGE
         DOM   MSG=(1)
         CLC   REPLY(3),=C'END'        'END' MEANS $DUMP DONE
         BE    OK
         CLC   REPLY(3),=C'FFF'        DUMP PARMS INVALID ?
         BE    INVPARM
         MVC   PARM,REPLY              NEXT PARAMETER STRING
         CLC   PARM(3),=C'DMP'          REQUEST FOR ADDITIONAL DUMPER
         BE    PARAL                    YES
         MVI   0(R7),C'/'              SET DELIMITER
         LA    R7,1(R7)                INCREASE INDEX
         ST    R7,ZPRMSAVE              SAVE INDEX
         B     WTO10
INVPARM  EQU   *
         L     R7,ZPRMSAVE             RE-LOAD OLD PARM POSITION
         B     WTO1                    RE-ENTER PARMS
PARAL    EQU   *
         TM    SWITCH,DMPN              FIRST DMP REQUEST ?
         BO    NA0C                     - NO, GET A NEW DUMPER
         OI    SWITCH,DMPN             INDICATE PARALLEL DUMP
         B     DUMPS1
OK       EQU   *
         XR    R15,R15
         L     R5,=A(CBERAREA)          ADDR OF CONTROL TABLE
OK1      EQU   *
         CLI   CBER,X'FF'               END OF TABLE ?
         BE    RETURN
         SPACE
         CLI   FWRITE,C'W'              TEST WRITE INDICATOR
         BNE   OK2                      BYPASS REWRITE
         SPACE
         MVI   STATUS,C'D'             INDICATE DUMP SUCCESFUL
         TIME
         ST    R1,WORD                 DATE
         OI    WORD+3,X'0F'            SIGN
         UNPK  DDATE,WORD              UNPACK DATE
         ST    R0,WORD                 TIME
         UNPK  DTIME(7),WORD
         MVI   DTIME+6,C' '
         MVC   DPARM,ZPARM              MOVE DUMP PARMS TO OUTPUT
         LA    R2,CDECB                 ADDR OF DECB
         ST    R5,CDECBARE              ADDR OF INPUT/OUTPUT AREA
         WRITE (2),SF,MF=E              RE-WRITE CONTROL RECORD
         CHECK (2)                      *
         SPACE
         XR    R0,R0
         MVC   CMDTEXT,=CL48'+P'
         MVC   CMDTEXT(1),COMMCHAR
         MVC   CMDTEXT+2(4),DUMPER
         LA    R1,COMMAND               LOAD PARM REG
         SPACE
         SVC   250                      ISSUE $PDMP. COMMAND
         SPACE
         LA    R0,1
         LNR   R1,R0
         SVC   34                       DELETE COMMAND INPUT BUFFER
OK2      EQU   *
         LA    R5,276(R5)               INCREASE INDEX OF CONTROL TABLE
         B     OK1
RETURN   EQU   *
         CLOSE CTL
         ERET  RC=(15)
         SPACE
*  ERROR HANDLING
         SPACE
F4       ABEND 0004
F8       ABEND 0008
F12      ABEND 0012
F16      ABEND 0016
F20      ABEND 0020
F24      ABEND 0024
F28      ABEND 0028
NOALL    EQU   *
         WTO   ' DUMP,ALL COMMAND REJECTED',ROUTCDE=2,DESC=2
         B     RETURNF
FPARM    EQU   *
         WTO   '''ALL'' PARAMETER FALSCH',ROUTCDE=2,DESC=2
         B     RETURNF
FPARM1   EQU   *
         WTO   'KEIN PLATZ FUER WEITERE PARAMETER IN DIESEM DSPOOL',ROU*
               TCDE=2,DESC=2
         B     DUMP2
RETURNF  EQU   *
         LA    R15,4                   SET RETURN CODE
         L     R5,=A(CBERAREA)          ADDR OF CONTROL TABLE
         B     OK1
         SPACE
NOALLOC  ABEND 0032
NODEALL  ABEND 0036
INVVOLC  ABEND 0040
         SPACE
ENDE     EQU   *
         TM    SWITCH,END2             2ND PASS DONE ?
         BO    ENDE2                   YES,TERMINATE WITH MESSAGE
         OI    SWITCH,END2             NO, INDICATE 2ND PASS
         B     NA1
ENDE2    EQU   *
         TM    SWITCH,SDMP              AT LEAST ONE DUMPER RUNNING ?
         BO    ENDE3                    YES
         WTO   'KEIN DUMPER FREI. BITTE LSPOOL STARTEN',ROUTCDE=2,     *
               DESC=2
         LA    R15,4                   SET RETURN CODE
         B     RETURN
ENDE3    EQU   *
         WTO   'KEINE WEITEREN DUMPER FREI.',ROUTCDE=2,DESC=2
         XC    WECB,WECB               CLEAR WTOR ECB
         MVC   REPLY,=40C' '            AND REPLY AREA
         WTOR  'WENN DUMP BEENDET (DUMPX  INACTIVE) ENTER ''END'' ODER *
               NEUE DUMP PARAMETER',REPLY,40,WECB,ROUTCDE=1
         B     DUMPS2
*
*     D E F I N I T I O N S
*
*
DOPPLW   DS    D                        CONVERSION WORK AREA
ZPRMSAVE DS    F                       PARAMETER POSITION SAVE AREA
VOLCNT   DS    H                        VOLUME COUNT
VOLMAX   DS    H                        VOLUME COUNT
READL    READ  RDECB,SF,CTL,0,'S',MF=L
MOVE1    MVC   0(0,R7),PARM
PACK1    PACK  DOPPLW,REPLY(0)
         SPACE
*   DYNALLOC DEFINITIONS
         SPACE
SVC99RBP DS    0F
         DC    X'80'
         DC    AL3(SVC99RB)
SVC99RB  DS    0F                      SVC99 REQUEST BLOCK
SVC99RBL DC    AL1(20)                 LENGTH
SVC99RBV DS    C                       VERB CODE
SVC99RB1 DC    H'0'                    FLAGS 1
SVC99RBE DS    H                       ERROR CODE
SVC99RBI DS    H                       INFO CODE
SVC99RBU DS    F                       TEXT UNIT POINTER LIST
SVC99RBR DS    F                       RESERVED
SVC99RB2 DC    H'0'                    FLAGS 2
*   ALLOCATION TEXT UNIT POINTER LIST
SVC99TPA DC    A(TUDDN)
         DC    A(TUDSN)
         DC    A(TUSTAT)
         DC    A(TUDISP)
         DC    A(TUUNIT)
         DC    A(TUVOLC)
         DC    A(TURET)
         DC    A(TUBLKSI)
         DC    A(TURECFM)
         DC    X'80'
         DC    AL3(TUDCB)
* DEALLOCATION TEXT UNIT POINTER LIST
SVC99TPU DC    X'80'
         DC    AL3(TUDDN)
TUDDN    DS    0H                      DDNAME
         DC    X'0001',H'1',H'4',C'TAPE'
TUDSN    DS    0H                      DSNAME
         DC    X'0002',H'1',H'44'
DSNL     DS    CL44
TUSTAT   DS    0H                      STATUS
         DC    X'0004',H'1',H'1',X'0400'      = NEW
TUDISP   DS    0H                      DISPOSITION
         DC    X'0005',H'1',H'1',X'0200'           = CATLG
TUUNIT   DS    0H                      UNIT =
         DC    X'0015',H'1',H'5',C'T6250 '    T6250
TUVOLC   DS    0H
         DC    X'0013',H'1',H'1'        VOLUME COUNT
TUVOLCNT DS    C
TURET    DS    0H                      RETPD
         DC    X'0023',H'1',H'2'
TURETPD  DS    H
TUBLKSI  DS    0H                      BLKSIZE
         DC    X'0030',H'1',H'2',AL2(4042)     = 4042
TURECFM  DS    0H                      RECFM =
         DC    X'0049',H'1',H'1',X'C000'       U
TUDCB    DS    0H                      MODDSCB
         DC    X'002C',H'1',H'7',C'MODDSCB '
         SPACE
MSG1     DS    F                       WTO MESSAGE ID
MSG2     DS    F                       WTO MESSAGE ID
         SPACE
WORD     DS    F
WECB     DS    F                       WTOR ECB
         SPACE
NAMEL    CAMLST NAME,DSNL,,LOCAREA
         DS    0D
LOCAREA  DS    265C
         SPACE
REPLY    DS    CL40                    REPLY AREA
         SPACE           1         2         3         4
WTOLIST  WTO   '1234567890123456789012 45678901234567890 ',ROUTCDE=2,  *
               DESC=2,MF=L
WTOEND   EQU   *
         ORG   WTOLIST+4
WTOAREA  DS    CL40
         ORG   WTOEND
         SPACE
PARM     DS    CL40                    DUMP PARAMETERS
         DC    C' '
         SPACE
ZPARM    DS    CL195                    PARAMETER AREA
         SPACE
ZDAT     DS    CL12
SWITCH   DS    C
END2     EQU   X'01'                   EODAD
DMPN     EQU   X'02'                   PARALLEL DUMP
SDMP     EQU   X'04'                   DUMPER STARTED
         SPACE
COMMCHAR DS    C                        JES2 COMMUNICATION CHARACTER
         SPACE
COMMAND  DC    H'52'                    COMMAND PARM LIST
         DC    H'0'
CMDTEXT  DS    CL48                     COMMAND
         SPACE
TBL      DC    64X'00'
         DC    X'40'
         DC    191X'00'
         SPACE
CTL      DCB   DDNAME=CTL,DSORG=PS,MACRF=(R,W),EODAD=NA0C,NCP=9
TAPE     DCB   DDNAME=TAPE,DSORG=PS,MACRF=PM,RECFM=U,BLKSIZE=4042
         SPACE
         LTORG
         SPACE
OUTAREA  DS    4042C                    TAPE OUTPUT AREA
         SPACE
         DS    0F
CBERAREA DS    9CL276                   CONTROL TABLE INPUT/OUTPUT AREA
*                                       MAPPED WITH CBERDS DSECT
         DC    X'FF'                    END OF CONTROL TABLE
         SPACE
*  INPUT AREA
         SPACE
CBERDS   DSECT
CBER     DS    0CL256
DUMPER   DS    CL4      1 - 4          DUMPER ID (DMP1 - DMP9)
BL1      DS    C        5
DSNAME   DS    CL19     6 - 24         OFFLOAD DSNAME
BL2      DS    C       25
VOLSER   DS    CL6     26 - 31         VOLUME SERIAL
BL3      DS    C       32
STATUS   DS    C       33              STATUS
*              BLANK - FREE
*              D     - DUMPED
*              L     - ALREADY LOADED
BL4      DS    C       34
DDATE    DS    CL5     35 - 39         DUMP DATE
BL5      DS    C       40
DTIME    DS    CL6     41 - 46         DUMP TIME
BL6      DS    C       47
LDATE    DS    CL5     48 - 52         LOAD DATE
BL7      DS    C       53
LTIME    DS    CL6     54 - 59         LOAD TIME
BL8      DS    C       60
DPARM    DS    CL195   61 - 255        DUMP PARAMETERS
FWRITE   DS    C                        FORCE REWRITE
         SPACE
*
*   READ WRITE DECB
*
CDECB    DS    0CL20
CDECBECB DS    CL4     ECB
CDECBTYP DS    CL2     TYPE
CDECBLEN DS    CL2     LENGTH
CDECBDCB DS    CL4     DCB ADDRESS
CDECBARE DS    CL4     AREA ADDR
CDECBRPT DS    CL4     RECORD PTR WORD
         END
