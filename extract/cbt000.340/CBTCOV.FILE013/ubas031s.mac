RZ165    CSECT
         SPACE 3
* TEST VERSION FOR RZ165 IS INCLUDED HEREIN.
* TO USE THE TEST VERSION REMOVE THE COMMENT SIGN (*) IN COLUMN 1
* IN EACH CARD WITH AN 'T' IN COLUMN 71.
* FURTHER REMOVE ALL CARDS WITH A 'P' IN COLUMN 71.
* THE TEST VERSION OUTPUTS ALL SMF RECORDS ONTO SYSUT2 (QSAM).
         SPACE 3
         REG
         XSAVE R12,SVA,ISRTSMF1
         USING SVA,R13
         L     R2,0(,R1)
         LR    R1,R2
         LH    R3,0(,R2)               PARM LENGTH
         LA    R2,2(,R2)                POINT TO DATA
         SR    R4,R4
         LA    R5,9
         SPACE
PARMLP   EQU   *
         BCTR  R3,R0                   REDUCE LENGTH OF PARM TEXT
         CLI   1(R2),C','
         BE    PEND
         LA    R2,1(R2)
         LA    R4,1(,R4)
         BCT   R5,PARMLP
         SPACE
WTO      EQU   *
         WTO   'IMSWL02 PARM ERROR',ROUTCDE=11
         ABEND 104
         SPACE 3
MVNAM    MVC   IMSTAB(0),2(R1)
         SPACE 3
PEND     EQU   *
         EX    R4,MVNAM                MOVE NAME TO EPLOC FIELD
         CVB   R1,FAKOLD
         ST    R1,FAK                  CPU FACTOR
         LA    R2,1(,R2)
         STC   R3,0(,R2)               ×
         ST    R2,STR1                 × SET NEW START ADDRESS OF PARM
         OPEN  SYSUT1
*        OPEN  (SYSUT2,(OUTPUT))                                      T
         EJECT
GETL     EQU   *
         GET   SYSUT1
         LR    R3,R1                    RECORD ADDRESS
         CLI   2(R3),X'02'              2ND SEGMENT OF SPANNED RECORD?
         BNE   NGOON                    NO.
         TM    FLAG,SPANNED             1ST SEGMENT OBTAINED?
         BZ    GETL                     NO.IGNORE THIS FRAGMENT
         NI    FLAG,255-SPANNED
         LH    R4,0(R3)                 GET SEGMENT LENGTH
         SH    R4,=H'4'                 REDUCE BY 2ND RDW
         LA    R3,4(R3)                 POSITION FOR EX
         BAL   R6,MOVE
         LA    R3,AREA
         LH    R1,AREA
         LA    R1,0(R4,R1)
         STH   R1,AREA
         B     WORK
         SPACE 2
NGOON    EQU   *
         CLI   2(R3),X'01'              1ST SEGMENT OF SPANNED RECORD?
         BNE   WORK                     NO.
         CLI   4(R3),X'06'              ×RECORDS TYP 06 AND 07
         BE    JOIN                    ×ARE JOINED TOGETHER,
         CLI   4(R3),X'07'             ×ALL OTHER
         BNE   GETL                     ×IGNORED.
         SPACE
JOIN     EQU   *
         OI    FLAG,SPANNED
         MVC   H,0(R3)                  GET LENGTH OF FIRST SEGMENT
         LH    R4,H
         LA    R5,AREA
         BAL   R6,MOVE
         LA    R5,0(R4,R5)              R5: POSITION FOR 2ND SEGMENT
         B     GETL
         SPACE 3
MOVE     EQU   *
         MOVE  (R5),(R4),(R3)
         BR    R6
         EJECT
WORK     EQU   *
         CLI   4(R3),X'07'              ×IF TYP IS NEITHER 07
         BE    REC07                    ×NOR
         CLI   4(R3),X'06'             ×06
         BNE   GETL                     ×IGNORE THE RECORD
         SPACE 1
         AP    TYP06,P1
         MVC   FLAG06,15(R3)           SAVE CHKPT-TYP
         CLI   FLAG06,X'01'            IMS STARTED ?
         BNE   REC06                   NO.
         SPACE 3
* I D - T E S T
         SPACE
         MVO   8(4,R3),16(4,R3)        × CONVERT 'USER SER.' AND
         UNPK  16(4,R3),8(4,R3)        × 'MODEL NO.' TO EBCDID.
         L     R10,STR1
         SR    R4,R4
         IC    R4,0(R10)                PARM LENGTH
         SRL   R4,2                     DIVIDE BY 4
         LA    R11,1(R10)               POINT TO PARM FIELD
IDLOOP   EQU   *
         CLC   0(4,R11),16(R3)          ×IF PARM AND CONTENTS OF TYP 06
         BE    IDGOT                    ×DON'T AGREE, IGNORE THE
         LA    R11,4(R11)               ×RECORD.....
         BCT   R4,IDLOOP                ×ID WILL BE FETCHED
         MVC   ID4,IDIMSM
         MVC   ID5,IDIMSM
         OI    FLAG,ID
         B     IMSAGAIN                ×FROM DEFAULT-FIELD, LATER
         SPACE 2
IDGOT    EQU   *
         OI    FLAG,ID                  INDICATE 'ID PRESENT'
         MVC   ID4,16(R3)               PUT ID TO
         MVC   ID5,16(R3)               SMF RECORD PATTERNS
         SPACE 3
IMSAGAIN EQU   *
* DON'T FORGET FORMER RECORDS, IF CHKPT-TYP '03' IS MISSING.
         TM    FLAG,R06
         BZ    REC06
         OI    FLAG,AGAIN01
         MVI   FLAG06,X'03'            SIMULATE 'IMS STOPPED'
         ST    R3,RECA                 SAVE RECORD ADDRESS
         L     R1,STACHAIN
         LTR   R1,R1
         BNZ   SIM03
         L     R1,COMPRCHN
         LTR   R1,R1
         BNZ   ENDOUT
         MVI   FLAG06,X'01'
         NI    FLAG,255-R06-AGAIN01
         EJECT
REC06    EQU   *
         CLI   15(R3),X'05'
         BE    GETL
         SPACE
RESET    EQU   *
         TM    FLAG,R06                 FIRST TYP 06 OCCURED?
         BO    CHKPTEND                 NO.
         LA    R3,20(R3)                POINT TO DATE
         UNPK  TIMEID(5),1(3,R3)
         OI    TIMEID+4,240
MOVEDT   EQU   *
         MVC   STAMPD4,0(R3)            ×
         MVC   DATEO4,0(R3)             × 04  (F4)
         MVC   STAMPD5,0(R3)                ×
         MVC   DATEO5,0(R3)                 × 05  (F5)
         MVC   DATER,0(R3)                  ×
         TM    FLAG,R06                 FIRST TYP 06?
         BO    SUBT                     NO. TIME/DATE NOT FROM RECORD
         OI    FLAG,R06
         MVC   IMSSTAD,0(R3)
         LA    R3,4(R3)                 POINT TO TIME
         BAL   R9,CONV
         MVC   IMSSTAT,0(R3)
         MVC   DATEN4,IMSSTAD          ×
         MVC   DATEN5,IMSSTAD          × INITIALIZE
         MVC   TIMEN4,IMSSTAT          × END STAMP
         MVC   TIMEN5,IMSSTAT          ×
MOVETIME EQU   *
         MVC   STAMPT4,0(R3)
         MVC   TIMEO4,0(R3)
         MVC   STAMPT5,0(R3)
         MVC   TIMEO5,0(R3)
         MVC   TIMER,0(R3)
         B     GETL
SUBT     EQU   *
         S     R3,=F'4'
         B     MOVETIME
         EJECT
REC07    EQU   *
         AP    TYP07,P1
         USING TRNACCU,R8
         CLI   21(R3),0                BMP REGION STARTED?
         BE    GETL                     YES. IGNORE THE RECORD
         TM    24(R3),X'F0'            ×PLAUSIBILITY TEST
         BZ    OK                      ×FOR CPU-TIME.
         BAL   R9,DUMP
         B     DUMP1
OK       EQU   *
         CLC   13(8,R3),=CL8' '
         BNE   NOBLANK
         MVC   13(8,R3),32(R3)
NOBLANK  EQU   *
         XC    88(4,R3),88(R3)          THIS POSITION WOULD RESULT
*                                       IN TYP FF0B, MUST BE ZERO.
         MVC   44(4,R3),24(R3)          SHIFT CPU-FIELD TO CALL-FIELDS
         LA    R8,STACHAIN
MAINTST  EQU   *
         L     R1,ACCHAIN               GET NEXT ELEMENT POINTER
         LTR   R1,R1
         BNZ   GOTMAIN
         LA    R2,ACLEN                 GET ELEMENT LENGTH
         GETMAIN R,LV=(R2)              GET MAIN STORAGE FOR 1 ELEMENT
         ST    R1,ACCHAIN               SAVE ELEMENT ADDRESS
         LR    R8,R1                    GET NEW BASE FOR DSECT
         XC    TRNACCU(ACLEN),TRNACCU   CLEAR ELEM-AREA
         MVC   ACTRAN,13(R3)            MOVE TR-CD TO ELEM-AREA
         B     ADD
         SPACE
GOTMAIN  EQU   *
         LR    R8,R1                   NEW BASE FOR DSECT
         CLC   ACTRAN,13(R3)            DOES AN ELEM-AREA ALREADY
*                                       EXIST FOR THIS TR-CD?
         BNE   MAINTST                  NO.TRY NEXT ELEM. IN CHAIN,...
*                                       IF ANY.
ADD      EQU   *
         LH    R6,ACNO                  INCREASE
         LA    R6,1(R6)                 NO. OF
         STH   R6,ACNO                  SCHEDULES
         CLC   28(4,R3),=4X'00'        ABEND?
         BE    NOABE                   NO.
         LH    R6,ACABEND
         LA    R6,1(,R6)
         STH   R6,ACABEND
NOABE    EQU   *
         LA    R6,1
         CLI   21(R3),X'FF'             BATCH REGION STOPPED?
         BNE   NORMPRTY                 NO.
         IC    R6,21(R3)                ×PRIORITY X'01'
NORMPRTY EQU   *                        ×IS ASSUMED.
         A     R6,ACPRTY
         ST    R6,ACPRTY
         LA    R9,ACCPU
         LA    R7,ACCOUNT               NO OF ACCUS
         LA    R1,44(R3)                POINT TO CPU-TIME IN RECORD
         SPACE
LOOPAC   EQU   *
         MVC   F,0(R1)                  ×
         L     R6,F                     × ADD PSEUDO-EXCP'S
         A     R6,0(R9)                 ×
         ST    R6,0(R9)                 ×
         LA    R1,4(R1)
         LA    R9,4(R9)
         BCT   R7,LOOPAC
         LA    R8,COMPRCHN             COLLECT DATA FOR TYP 04
         TS    FLAG2                   ALREADY DONE ?
         BZ    MAINTST                 NO.
         XC    FLAG2(L'FLAG2),FLAG2    ERASE CONTROL BYTE
         B     GETL
         EJECT
CHKPTEND EQU   *
*
*
*
         TM    16(R3),X'F0'
         BZ    OK1
         BAL   R9,DUMP
         B     DUMP1
OK1      EQU   *
         MVC   F,16(R3)                 IMS CPU-TIME
         L     R5,F
         OI    FLAG,JOB
         BAL   R9,CONVCPU
         NI    FLAG,255-JOB
         LA    R3,20(R3)                POINT TO DATE
         MVC   DATEN4,0(R3)
         MVC   DATEN5,0(R3)
         LA    R3,4(R3)                 POINT TO TIME
         BAL   R9,CONV
         MVC   TIMEN4,0(R3)
         MVC   TIMEN5,0(R3)
         SPACE 3
CONSTR41 EQU   *
         CLI   FLAG06,1
         BE    GETL
         SR    R10,R10                  STEP COUNT
         SPACE
CONSTR4  EQU   *
         L     R8,STACHAIN
         LTR   R8,R8                    NO MORE ELEMENTS IN CHAIN?
         BZ    OUT5                     NO.OUTPUT THE TYP 05
         SPACE
         MVC   SCHED,ACNO
         MVC   CC,ACABEND
         CLC   CC,=XL2'0'              NO.OF ABNORMAL ENDS = 0 ?
         BNE   USER                    NO.
         OI    CC,X'40'                INDICATE 'NORMAL END' .
USER     EQU   *
         SR    R6,R6
         L     R7,ACPRTY
         LH    R1,ACNO
         DR    R6,R1                    GET AVERAGE PRIORITY
         SLL   R6,1
         C     R6,ACNO                  QUOTIENT TO BE ROUNDED UP?
         BL    NOROUND                  NO.
         LA    R7,1(R7)
NOROUND  EQU   *
         SLL   R7,4                    ×
         STC   R7,PRTY                  ×
         OI    PRTY,X'0B'              ×
         MVC   TRANCODE,ACTRAN          ×
         MVC   TRANCDE1,ACTRAN          ×
         BAL   R9,LOADBLK               × PREPARE TYP 04
         L     R5,ACCPU                 ×
         BAL   R9,CONVCPU               ×
         ST    R5,ACCPU                 ×
         MVC   CPU,ACCPU+1              ×
         SPACE 2
* LOGICAL PSEUDO EXCP'S
         LH    R6,DTUC                  R6: FFFFFF00
         LA    R7,PEXCP
         LA    R5,ACCALLS
         LA    R11,ACCOUNT-1            NO.OF ACCUS MINUS CPU-ACCU
         SPACE
ALLOC    EQU   *
         LA    R6,1(R6)
         L     R2,0(R5)                 NO.OF CALLS
         LTR   R2,R2                    =0 ?
         BZ    GOON                     YES.
         STH   R6,0(R7)                 'FF01'  E.G.
         STH   R6,2(R7)                 'FF01FF01'  NOW
         ST    R2,4(R7)
         LA    R7,8(R7)                 INCREASE RECORD POSITION
         SPACE
GOON     EQU   *
         LA    R5,4(R5)
         BCT   R11,ALLOC
         SPACE
         MVC   STACHAIN,ACCHAIN
         LA    R2,ACLEN
         FREEMAIN R,A=(R8),LV=(R2)
RESTMVC  EQU   *+1
         MVC   0(0,R7),REMAIN
         S     R7,=A(PEXCP)
         LA    R7,2(R7)                 LENGTH OF D'S +2
         STH   R7,LENGTH
         AH    R7,SHLEN
         STH   R7,TYP4
         LA    R10,1(R10)               INCREASE STEP COUNT
         STC   R10,STEPNO
         SPACE 2
* WRITE TO SMF
         LA    R1,TYP4
*        PUT   SYSUT2,TYP4                                            T
         BAL   R9,SMFWRIT                                             P
         TM    FLAG,T05                IMS END ?
         BZ    NORMF4                  NO.
         AP    TYP04,P1
         B     CONSTR4
         SPACE
NORMF4   EQU   *
         AP    TYPF4,P1
         CLC   PEXCP(4),=X'FF01FF01'
         BNE   CONSTR4
         L     R1,PEXCP+4
         A     R1,MSGCNT
         ST    R1,MSGCNT
         B     CONSTR4
         EJECT
OUT5     EQU   *
         STC   R10,STEPS                NO.OF STEPS THIS SCHEDULE
         TM    FLAG,T05
         BZ    NORMF5
         AP    TYP05,P1
         L     R1,IMSTIME              ×
         MVC   F,TIMEN5                ×
         A     R1,F                    >GET ELAPSED
         MVC   F,TIMEO5                >TIME OF IMS
         S     R1,F                    ×
         ST    R1,IMSTIME              ×
         B     PUT
         SPACE
NORMF5   EQU   *
         MVC   JCPU,CPUS+1
         L     R1,CPUS
         A     R1,CPUS1
         ST    R1,CPUS1
         L     R1,CPUSF
         A     R1,CPUSF1
         ST    R1,CPUSF1
         XC    CPUSF(L'CPUSF),CPUSF
         XC    CPUS(L'CPUS),CPUS
         AP    TYPF5,P1
PUT      EQU   *
         LA    R1,TYP5
*        PUT   SYSUT2,TYP5                                            T
         BAL   R9,SMFWRIT                                             P
         XC    STACHAIN,STACHAIN
         SPACE
         TM    FLAG,T05                RECORDS TYP '04' AND '05'       *
                                       ALREADY OUT ?
         BO    TESTON                  YES.
         CLI   FLAG06,3                IMS STOPPED ?
         BNE   NORM                    NO.
         SPACE
ENDOUT   EQU   *
         MVI   TYP4+5,4
         MVI   TYP5+5,5
         MVC   STAMPT4(8),IMSSTAT
         MVC   TIMEO4(8),IMSSTAT
         MVC   STAMPT5(8),IMSSTAT
         MVC   TIMEO5(8),IMSSTAT
         MVC   TIMER(8),IMSSTAT
         MVC   STACHAIN,COMPRCHN
         XC    COMPRCHN(L'COMPRCHN),COMPRCHN
         OI    FLAG,T05
         TM    FLAG,AGAIN01
         BO    SIM03
         B     CONSTR4
         SPACE
NORM     EQU   *
         TM    FLAG,EOF+T05
         BM    ENDOUT
         BO    XRET
         LA    R3,DATEN4
         B     MOVEDT
         SPACE
TESTON   EQU   *
         TM    FLAG,EOF
         BO    XRET
         NI    FLAG,255-T05-R06
         MVI   TYP4+5,X'F4'
         MVI   TYP5+5,X'F5'
         TM    FLAG,AGAIN01
         BZ    GETL
         NI    FLAG,255-AGAIN01
         MVI   FLAG06,1
         L     R3,RECA                 GET RECORD-06 ADDRESS AGAIN.
         B     RESET
         EJECT
CONV     EQU   *
* CONVERT TIME FROM HHMMSSTH TO 1/100 SEC'S. R3->TIME
         ZAP   DC,2(2,R3)
         MP    DC,=P'10'
         MVC   DP+5(1),1(R3)            DP: MIN *1000
         MP    DP,=P'6'                 NOW: MIN *100*60 -> SEC**(-2)
         AP    DC,DP
         ZAP   DP,=P'0'                 CLEAR DP
         MVC   DP+5(1),0(R3)            DP: HOUR *1000
         MP    DP,=P'360'               NOW: HOUR *60*60*100
         AP    DC,DP                    RESULT NOW ALL SEC**(-2)
         ZAP   DP,=P'0'                 CLEAR FOR NEXT CONVERSION
         CVB   R1,DC                    TIME NOW BINARY
         ST    R1,F
         LA    R3,F
         BR    R9
         SPACE 3
CONVCPU  EQU   *
* CONVERT 26 MICROSECOND TIMER UNITS INTO 1/100 SEC CPU-TIME.
         SR    R4,R4
         D     R4,=F'384'
         SLL   R4,1
         C     R4,=F'384'               QUOTIENT TO BE ROUNDED UP?
         BL    STORE                    NO.
         LA    R5,1(R5)
STORE    EQU   *
         TM    FLAG,JOB                JOB(=IMS)-CPU TO BE ADDED?
         BO    STJ                     YES.
         LTR   R5,R5                   CPU-TIME ZERO?
         BP    NZ                      NO.
         LA    R5,1
NZ       EQU   *
         TM    FLAG,T05
         BO    MULT
         L     R1,CPUS
         AR    R1,R5
         ST    R1,CPUS
MULT     EQU   *
         SR    R4,R4
         M     R4,FAK
         D     R4,F10
         TM    FLAG,T05                × DON'T NEED
         BOR   R9                      × ADD FOR AST
         L     R1,CPUSF
         AR     R1,R5
         ST     R1,CPUSF
         BR    R9
         SPACE
STJ      EQU   *
         TM    FLAG,T05                × DON'T NEED
         BOR   R9                      × ADD FOR AST
         L     R1,CPUJ
         AR    R1,R5
         ST    R1,CPUJ
         BR    R9
         SPACE 3
SMFWRIT  EQU   *
         CLC   0(2,R1),=X'0140'        LRECL > 320?
         BNH   WRITE                   NO.
ABEND    EQU   *
         ABEND 111,DUMP
WRITE    EQU   *
         LA    R15,SMFWRIT1
* FOR MVS USE THE FOLLOWING INSTRUCTION INSTEAD OF 'SVC 250':
*        BALR  R14,R15
* THIS MUST BE IN CONJUNCTION WITH MODESET (SEE RTN.: 'SMFWRIT1')
* AND WITH REMOVING THE FOLLOWING CARD:
         SVC   250                     GET SUPERVISOR STATUS
         BR    R9
         SPACE
SMFWRIT1 EQU   *
* FOR MVS INCLUDE THE FOLLOWING TWO 'MODESET'S:
*        MODESET KEY=ZERO,MODE=SUP
         SMFWTM (R1)
*        MODESET KEY=NZERO,MODE=PROB
         BR    R14
         EJECT
DUMP     NOPR  R9                      OPEN AND PRINT HEADER
         OI    DUMP+1,X'F0'            ( ONCE )
         OPEN  (SYSDUMP,(OUTPUT))
         MVC   DMPDATE(5),TIMEID
         PUT   SYSDUMP,HEAD
         BR    R9
         SPACE 2
DUMP1    EQU   *
         LH    R14,0(R3)
         BCTR  R14,R0
         EX    R14,DMPMOVE
         LH    R0,0(,R3)
         LA    R1,TEXT
         L     R15,=V(CONVXE)
         BALR  R14,R15
         PUT   SYSDUMP,LINE
         MVI   TEXT,C' '
         MVC   TEXT+1(131),TEXT
         CLI   TEXT+132,C' '
         BE    GETL
         SPACE
         MVI   TEXT+131,C' '
         PUT   SYSDUMP,TEXT+131
         MVC   TEXT+132(132),TEXT+131
         B     GETL
         SPACE
DMPMOVE  MVC   TEXT(0),0(R3)
         EJECT
HEAD     DS    0CL133
         DC    CL53'1RZ 165 01'
         DC    CL29'FEHLERLISTE IMS - LOGSAETZE ('
DMPDATE  DC    CL43'     )'
         DC    CL8'RZ L 182'
         SPACE
LINE     DC    C'-'
TEXT     DC    CL256' '
         DC    CL10' '
SYSDUMP  DCB   DDNAME=SYSDUMP,MACRF=PM,DSORG=PS,RECFM=FBA,LRECL=133,   *
               BLKSIZE=2660
         EJECT
LOADBLK  EQU   *
* INSERT REGION AND ACCOUNTING NO. INTO TYP 04-RECORD.
         TM    FLAG,LTAB                TRAN-TABLE ALREADY LOADED?
         BO    LOADED                   YES
         OPEN  STEPLIB
         TM    STEPLIB+48,X'10'
         BO    LOAD
         MVC   LOAD+6(2),=XL2'0'
LOAD     LOAD  EPLOC=IMSTAB,DCB=STEPLIB
         LR    R3,R0
         MVC   PARAM(4),4(R3)          ENTRY NO.& LENGTH
         LA    R3,8(,R3)
         ST    R3,STR3
         SPACE 3
         CALL  LFDNRDEF,((R3),PARAM)
         SPACE 3
         OI    FLAG,LTAB
LOADED   EQU   *
         L     R3,STR3
         SPACE 3
         CALL  LFDNR,(PARAM,TRANCODE,ENTNO)
         SPACE 3
         LH    R4,ENTNO
         MVI   MSGCLASS,C' '
         MVI   FLEFT,0
         XC    REGIONR(6),REGIONR
         SR    R5,R5
         SR    R2,R2
         LTR   R4,R4
         BZ    NOACC
         BCTR  R4,R0
         MH    R4,PARAM+2              GET DISPLACEMENT OF TRANTAB ENT.
         LA    R4,0(R4,R3)             POINT TO TRCD-ENTRY
         MVC   REGIONR,8(R4)
         MVC   REGIONO,8(R4)
         MVC   MSGCLASS,10(R4)
         SR    R1,R1
         IC    R1,11(,R4)              NO.OF FIELDS
         LTR   R1,R1
         BZ    NOACC
         LA    R11,12(R4)
         SPACE 2
LOOP     EQU   *
         IC    R5,0(,R11)              LENGTH OF FOLLOWING FIELD
         LA    R11,1(R11,R5)
         LA    R2,1(R2,R5)
         BCT   R1,LOOP
         EX    R2,MOVACC
         SPACE
NOACC    EQU   *
         LA    R2,1(,R2)
         LA    R1,SUFFIX
         LA    R1,0(R2,R1)
         STH   R1,SHLEN
         LA    R2,3(,R2)
         STC   R2,RESTMVC
         STC   R2,REMAIN
         BR    R9
         SPACE 3
MOVACC   MVC   FLEFT(0),11(R4)
         EJECT
DEFAULT  EQU   *
         MVC   ID4,IDIMSM
         MVC   ID5,IDIMSM
         OI    FLAG,ID
*
IDIMSM   DC    CL4'0568'
         EJECT
ENDLOG   EQU   *
         OI    FLAG,EOF
         L     R1,STACHAIN
         LTR   R1,R1
         BNZ   SIM03
         L     R1,COMPRCHN
         LTR   R1,R1
         BZ    XRET
         CLI   FLAG06,3
         BE    ENDOUT
SIM03    EQU   *
         MVI   FLAG06,X'03'              SIMULATE 'IMS STOPPED'
         OI    TIMEN4+2,X'FF'           × INCREASE
         OI    TIMEN5+2,X'FF'           × END TIME
         B     CONSTR41
         SPACE 3
XRET     EQU   *
         SPACE 2
         AP    TYP0607,TYP06
         AP    TYP0607,TYP07
         L     R1,MSGCNT
         CVD   R1,MSGNO
         L     R3,CPUSF1               (CPU*FAK)
         CVD   R3,ACCTCPU
         L     R3,CPUS1
         CVD   R3,MSGCPU
         SR    R4,R4
         L     R5,CPUJ
         CVD   R5,CNTLCPU
         M     R4,F10
         DR    R4,R3
         SLL   R4,1
         CR    R4,R3
         BL    PR
         LA    R5,1(,R5)
PR       EQU   *
         CVD   R5,FAKPROP
         SR    R4,R4
         AP    IMSCPU,CNTLCPU
         AP    IMSCPU,MSGCPU
         CVB   R5,IMSCPU
         M     R4,F10
         DR    R4,R3          NEW FAKTOR
         SLL   R4,1
         CR    R4,R3
         BL    NR1
         LA    R5,1(,R5)
NR1      EQU   *
         CVD   R5,FAKNEW
         CALL  COBAST,(RCODE,TIMEID,TABIMS,TABSMF,MSGNO,TABCPU),VL
         SPACE 2
*        LINK  EP=IMSSTAT,                                             *
               PARAM=(TIMEID,MSGNO,IMSTIME,TABCPU)
         SPACE 2
XRET1    EQU   *
         TM    SYSDUMP,X'10'
         BZ    NOCL
         CLOSE SYSDUMP
NOCL     EQU   *
         CLOSE SYSUT1
*        CLOSE SYSUT2                                                 T
         XRETURN 0
         EJECT
* D E F I N I T I O N S
*
         LTORG
         EJECT
SVA      DC    18F'0'
D        DS    D
DC       DS    D
DP       DC    PL8'0'
STACHAIN DC    F'0'
COMPRCHN DC    F'0'
IMSSTAT  DS    CL4                     IMS START TIME (SAVED)
IMSSTAD  DS    PL4                     IMS START DATE (SAVED)
STR1     DS    F
F        DS    F
DTUC     DC    XL2'FF00'
H        DS    H
FLAG06   DS    CL1
         SPACE 3
FLAG     DC    X'00'
R06      EQU   X'80'
ID       EQU   X'40'
T05      EQU   X'20'
LTAB     EQU   X'10'
*
SPANNED  EQU   8
JOB      EQU   4
AGAIN01  EQU   2
EOF      EQU   1
         SPACE
FLAG2    DC    XL1'00'
         SPACE
IMSTIME  DC    F'0'
         SPACE 3
TABIMS   DS    0CL8
TYP06    DC    PL4'0'
TYP07    DC    PL4'0'
TYP0607  DC    PL4'0'
         SPACE
TABSMF   DS    0CL6
TYP05    DC    PL3'0'
TYP04    DC    PL3'0'
TYPF5    DC    PL3'0'
TYPF4    DC    PL3'0'
         SPACE
TABCPU   DS    0D
CNTLCPU  DC    PL8'0'
MSGCPU   DC    PL8'0'
IMSCPU   DC    PL8'0'
ACCTCPU  DC    PL8'0'
FAKOLD   DC    PL8'50'
FAKNEW   DC    PL8'0'
FAKPROP  DC    PL8'0'
         SPACE 2
MSGCNT   DC    F'0'
MSGNO    DS    D
         SPACE
CPUJ     DC    F'0'
CPUS     DC    F'0'
CPUS1    DC    F'0'
CPUSF    DC    F'0'
CPUSF1   DC    F'0'
         SPACE
RCODE    DC    H'0'
TIMEID   DC    CL15'      (LOG)'
P1       DC    P'1'
         SPACE 2
PARAM    DS    0H
         DS    2H
         DC    H'1'                    NAME START
         DC    H'8'                    NAME END
         DS    9H
ENTNO    DS    H
STR3     DS    F
RECA     DS    F
FAK      DS    F
F10      DC    F'10'
         SPACE
IMSTAB   DC    CL8' '
         EJECT
         DS    0F
* PATTERN OF SMF RECORD TYP F4  (04)
*
TYP4     DS    H              LENGTH
         DC    H'0'           RES.
         DC    XL2'F4'        RES.+TYP
TIMEN4   DS    XL4              END TIME
DATEN4   DS    PL4              END DATE
ID4      DS    CL4            USER SERIAL NO AND MODEL NO
JNAME    DC    CL8'* I M S'
STAMPT4  DS    XL4            TIME          (SAME AS
*                                  STAMP     TIMEO4 AND
STAMPD4  DS    PL4            DATE           DATEO4)
USERDTA  DS    0CL8
         DC    H'0'           NO OF DISKS AND TAPES
         DC    X'00'                   RES.
MSGCLASS DS    CL1
SCHED    DC    H'0'
         DC    XL2'00'                 RES.
STEPNO   DS    XL1
TIMEO4   DS    XL4            START TIME
DATEO4   DS    PL4            START DATE
SYSIN    DC    XL4'0'         NO OF SYSIN CARDS
CC       DC    XL2'4000'      CC
PRTY     DS    XL1
TRANCODE DS    CL8            NORMALLY: PGM-NAME
TRANCDE1 DS    CL8            NORMALLY: STEP-NAME
REGIONR  DS    H
         DC    H'0'
REGIONO  DS    H
         DC    XL6'0'
         DC    XL20'0'        RES.
LENGTH   DS    H
PEXCP    DS    20XL8
*ONE 8-BYTE FIELD FOR EACH LOGICAL EXCP:
***                × 2 × 2 ×  4   ×
***                ×TYP×TYP×NO.OF CALLS
***
REMAIN   DS    AL1            NO.OF BYTES LEFT
CPU      DS    XL3
FLEFT    DC    X'00'          NO.OF FIELDS LEFT
END4     EQU   *-1
SUFFIX   EQU   END4-TYP4-20*8-2
         DS    CL22
         DS    0H
SHLEN    DS    H
         EJECT
         DS    0F
* PATTERN OF SMF RECORD TYP F5  (05)
*
TYP5     DC    AL2(END5-TYP5)
         DC    H'0'           RES.
         DC    XL2'F5'        RES.+TYP
TIMEN5   DS    XL4            ×
DATEN5   DS    PL4            × SAME AS IN TYP 04
ID5      DS    CL4            ×
JNAME5   DC    CL8'* I M S'
STAMPT5  DS    XL4            TIME           (SAME AS
*                                  STAMP      TIMEO5 AND
STAMPD5  DS    PL4            DATE            DATEO5)
DATA     DC    XL8'0'
STEPS    DS    X              NO.OF TRANCODES/INTERVALL
TIMEO5   DS    XL4
DATEO5   DS    PL4
SYSIN5   DC    XL4'0'         NO.OF SYSIN CARDS
CC5      DC    XL2'4000'      COMPLETION CODE
PRTY5    DC    X'00'
TIMER    DS    XL4                          TIME
*                             PSEUDO READER
DATER    DS    PL4                          DATE
EC       DC    X'00'          END CONDITION
SYSOUTCL DC    XL5'0'
FFLAG    DC    X'00'
READEV   DC    X'FFFF'        PSEUDO READER DEV.TYP AND UNIT CLASS
JCLASS   DC    C'Z'
         DC    XL20'0'        RES.
RLEN     DC    AL1(END5-NAME)
NAME     DC    CL20' '
JCPU     DS    AL3
FFOL     DC    X'03'          NO.OF BYTES
         DC    X'04'
         DC    CL4'6950'
         DC    X'03'
         DC    CL3'990'
         DC    X'01'
         DC    C'2'
END5     EQU   *
         EJECT
SYSUT1   DCB   DDNAME=SYSUT1,DSORG=PS,MACRF=GL,EODAD=ENDLOG
         EJECT
*SYSUT2  DCB  DDNAME=SYSUT2,DSORG=PS,MACRF=PM,LRECL=1000,             T*
               BLKSIZE=1004,RECFM=VB
         EJECT
STEPLIB  DCB   DDNAME=TSOSTPLB,DSORG=PO,MACRF=R
         EJECT
AREA     DS    CL2000
TRNACCU  DSECT
ACCHAIN  DS    F              ADDRESS OF NEXT ELEMENT
ACNO     DS    H              NO.OF SCHEDULES
ACABEND  DS    H
ACTRAN   DS    CL8            TRANSACTION CODE
ACPRTY   DS    F              PRIORITY
ACCPU    DS    F              TIMER UNITS
ACCALLS  DS    14F            NO.OF CALLS
ACLEN    EQU   *-TRNACCU
ACCOUNT  EQU   ACLEN/4-5
         END
