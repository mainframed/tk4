         TITLE 'SELECTIVE DISK COPY - PHASE 1-'
         MACRO
&NAME    DEVCONST
         OBTAIN SEARCHL  OBTAIN FORMAT 4 DSCB TO GET DEVICE CONSTANTS
         LTR   R15,R15        OBTAIN SUCCESSFUL ?
         BNZ   FEHLF4         NO
         LA    R7,P3          FORMAT 4 DSCB ADDRESSABILITY
         USING IECSDSL4,7
         MVC   TRKCYL,DS4DEVSZ+2  NUMBER OF TRACKS PER CYLINDER
         MEND
         SPACE
         MACRO
&NAME    SEQNO &AREA,&NUM
         AP    &NUM,=P'10'    INCREASE SEQUENCE NUMBER
         UNPK  &AREA+72(8),&NUM
         OI    &AREA+79,X'F0' CLEAR SIGN
         MEND
         SPACE
         MACRO
&NAME    UNALLOC
         MVI   NS99VERB,S99VRBUN  SET VERB TO UNALLOCATE
         LA    R1,NS99TUPU    ADDR OF TEXT UNIT PARAMETER LIST
         ST    R1,NS99TXTP    STORE IT INTO SVC99 REQUEST BLOCK
         LA    R1,NS99RBPT    ADDR OF SVC 99 REQUEST BLOCK POINTER
         DYNALLOC             UNALLOCATION OF PDS
         LTR   R15,R15        TEST RETURN CODE
         BNZ   DUNERR         UNALLOC NOT SUCCESSFUL
         CLC   NS99INF,=H'0'  TEST FOR INFO CODE
         BE    UALC&SYSNDX    NO INFO CODE
         UNPK  DBER+65(5),NS99INF(3)  CONVERT INFO CODE TO HEX
         TR    DBER+65(4),TTRANS-240
         MVI   DBER+69,C' '
UALC&SYSNDX EQU   *
         MEND
         EJECT
X001440   START
         SAVE  (14,12)        SAVE REGISTERS
         BALR  R3,0           ESTABLISH ADDRESSABILITY
         USING *,3,4,5
NA0      EQU   *
         LM    R4,R5,KBAS
         B     NA1
KBAS     DC    A(NA0+4096,NA0+2*4096)
NA1      EQU   *
         LA    R12,SAVE       LINKAGE CONVENTION
         ST    R12,8(R13)
         ST    R13,4(R12)
         LR    R13,R12
         L     R6,0(R1)       SAVE ADDRESS OF PARM FIELD
         ZAP   SEQNUMBR,=P'0'  CLEAR SEQUENCE NUMBER
         XC    ZZ,ZZ          CLEAR LINE COUNT
         OPEN  (DSNL,OUTPUT,DADS,OUTPUT,ATRLST,OUTPUT)  OPEN DATA SETS
         OPEN  IN
         MVC   PARMFLD,=15C' '  CLEAR PARM FIELD WORK AREA
         LH    R1,0(R6)       LENGTH OF PARM FIELD
         LTR   R1,R1          ZERO TEST
         BZ    NA1K           NO PARM FIELD PRESENT
         CH    R1,=H'15'      LENGTH GREATER THAN 15 ?
         BH    FEHLPRM        - YES, ERROR
         BCTR  R1,0           DECREASE LENGTH FOR EXECUTE
         EX    R1,MOVE4       MOVE PARM FIELD TO WORK AREA
         MVC   VOLSER,VOLSERP VOLUME SERIAL NO
         DEVCONST             GET NUMBER OF TRACKS PER CYLINDER
         MVC   TRKCYLP,TRKCYL  AND SAVE IT
         CLI   PSLASH,C'/'    UNIT NAME SPECIFIED ?
         BE    NA1C           YES
         CLI   PSLASH,C' '
         BE    NA1L           NO
         B     FEHLPRM        INVALID PARM FIELD
NA1C     EQU   *
         CLI   UNITNAMP,C' '  LOOK FOR UNIT NAME
         BE    NA1L           NO UNITNAME FOUND
         MVC   PDSUNTU,UNITNAMP  UNITNAME PARAMETER
         B     NA1M
NA1K     EQU   *
*   NO PARM FIELD SPECIFIED. DEFAULT VOL SER WILL BE '000000'
         SPACE
         MVC   VOLSERP,=6C'0'
         MVC   VOLSER,=6C'0'
         XC    TRKCYLP,TRKCYLP  CLEAR NUMBER OF TRACKS PER CYLINDER
         XC    TRKCYL,TRKCYL
NA1L     EQU   *
*  NO UNITNAME PRESENT. DEFAULT WILL BE 'SYSDA'
         SPACE
         MVC   UNITNAMP,=CL8'SYSDA'
         MVC   PDSUNTU,=CL8'SYSDA'
NA1M     EQU   *
         XC    BLOCKADF,BLOCKADF  ZERO BLOCKADDR OF ATTRIBUTE DATA SET
         XC    RC,RC          ZERO RETURN CODE FIELD
         MVI   SYSINSW,X'01'  INDICATE INIT GET
         GET   IN,EBER        INITIAL GET SYSIN
         MVI   EASA,C'1'      SET ASA
         LA    R2,EASA        AREA ADDRESS
         BAL   R14,UPPRT      LINK TO PRINT ROUTINE
         XI    SYSINSW,X'03'  INDICATE SYSIN PRESENT
NA11     EQU   *
         LOAD  EP=QX01443     LOAD QX01443 MODULE
         ST    R0,PDSSCADR    SAVE ENTRY POINT ADDR
         LOAD  EP=QX01442    READ VTOC MODULE
         ST    R0,RDVTOC      SAVE ENTRY POINT ADDRESS
         MVC   P2,=CL5'VTOC'  INIT QX01442 PARAMETER FIELDS
         MVC   P4,=5C' '
NA2      EQU   *
         MVC   VOLSER,VOLSERP PARM VALUES ARE DEFAULT
         MVC   PDSUNTU,UNITNAMP
         MVC   TRKCYL,TRKCYLP
*
*   LOOK FOR FORMAT 1 DSCB AND SAVE THE DATA SET ATTRIBUTES
*
         TM    SYSINSW,X'02'  SYSIN PRESENT ?
         BZ    NA29           NO. SEQUENTIAL READ VTOC
         TRT   EBER(16),TNOBL  LOOK FOR DSN KEYWORD
         BNZ   NA2A
         B     FEHLIN         NO KEYWORD FOUND
NA200    EQU   *
         GET   IN,EBER        GET NEXT SYSIN STMT
         MVI   EASA,C'0'      SET ASA
         LA    R2,EASA        AREA ADDRESS
         BAL   R14,UPPRT      LINK TO PRINT ROUTINE
         B     NA2
NA2A     EQU   *
         NI    SYSINSW,X'F7'  CLEAR MEMBER BIT
         CLI   0(R1),C'*'     VOLUME STATEMENT ?
         BE    NA2D           YES
         CLC   0(4,R1),=C'DSN='
         BNE   FEHLIN         INVALID DSN STATEMENT
         LA    R8,4(R1)       ADDR OF DSN
         TRT   0(45,R8),TBL   SCAN FOR END OF DSN
         BZ    FEHLIN         INVALID DSN
         MVC   DSN,=44C' '    CLEAR DSN FIELD
         SR    R1,R8          LENGTH OF DSN
         BZ    FEHLIN         ZERO LENGTH NOT ALLOWED
         BCTR  R1,0           DECREASE LENGTH FOR EX
         EX    R1,NA2X        DSNAME TO DSN FIELD
         LA    R8,1(R8,R1)    INCREASE INDEX
         TRT   0(10,R8),TNOBL  LOOK FOR NEXT PARM
         BZ    NA2B           NO MORE PARMS FOUND
         CLC 0(2,R1),=C'M '   MEMBER PARAMETER ?
         BNE   NA2A1          NO
         OI    SYSINSW,X'08'  SET MEMBER INDICATOR
         TRT   2(10,R1),TNOBL  LOOK FOR NEXT PARM
         BZ    NA2B           NO MORE PARMS
NA2A1    EQU   *
         CLC   0(4,R1),=C'VOL='  CHECK KEYWORD
         BNE   NA2B           NO VOL PARM
         MVC   VOLSER,4(R1)   VOL SER
         MVC   EBER(20),0(R1)  SHIFT VOL PARM
         DEVCONST
         CLI   EBER+10,C'/'  UNIT NAME PRESENT ?
         BNE   NA2B           NO
         MVC   PDSUNTU,EBER+11  UNIT NAME
NA2B     EQU   *
         OBTAIN SEARCHDS      OBTAIN FORMAT 1 DSCB
         B     *+4(R15)       TEST RETURN CODE
         B     NA2C           DSCB FOUND
         B     F4NM           VOLUME NOT MOUNTED
         B     FEHLNF         DSCB NOT FOUND
         B     F4IO           I/O ERROR
         B     F4IP           INVALID WORK AREA POINTER
NA2C     EQU   *
         MVC   P3(44),DSN     DSN TO READ VTOC DSCB AREA
         MVC   P3+44(96),DSCBBER DATA PORTION OF F1 DSCB
         B     NA3
NA2D     EQU   *              THIS IS A VOLUME STATEMENT
         OI    SYSINSW,X'04'  INDICATE ENTIRE VOLUME PROC
         TRT   1(10,R1),TNOBL LOOK FOR VOL PARM
         BZ    NA29           NO VOLUME PARAMETER
         CLC   0(4,R1),=C'VOL='  CHECK KEYWORD
         BNE   FEHLPRM        NO VOL PARM
         MVC   VOLSER,4(R1)   NEXT VOLUME TO BE PROCESSED
         MVC   EBER(20),0(R1) SHIFT VOL PARM
         DEVCONST
         CLI   EBER+10,C'/'  UNIT NAME PRESENT ?
         BNE   NA29           NO
         MVC   PDSUNTU,EBER+11  UNIT NAME
         B     NA29
NA2X     MVC   DSN(0),0(R8)
NA29     EQU   *
         L     R15,RDVTOC
         CALL  (15),(PA1,PA2,PA3,PA4),VL  CALL READ VTOC MODULE
         B     *+4(R15)       TEST RETURN CODE
         B     NA3            FORMAT 1 DSCB FOUND
         B     NC1            END OF VTOC
         B     F4NM           READ VTOC NOT SUCCESSFUL
         B     RVFI
         B     F4IO
         B     RVOE
         B     F4IP
NA3      EQU   *
         LA    R7,P3          ADDRESSABILITY FOR FORMAT 1 DSCB
         USING IECSDSL1,7
         MVC   DSN,DS1DSNAM   DSNAME
         MVC   DSORG,DS1DSORG  DSORG
         MVC   RECFM,DS1RECFM  RECORD FORMAT
         MVC   LRECL,DS1LRECL  LOGICAL RECORD LENGTH
         MVC   OPTCD,DS1OPTCD  OPTION CODE
         MVC   BLKL,DS1BLKL   BLOCK SIZE
         MVC   KEYL,DS1KEYL   KEY LENGTH
         MVC   RKP,DS1RKP     RELATIVE KEY POSITION
         MVC   ALLOC,DS1SCALO  FORMAT OF ALLOCATION
         MVC   SECAL,DS1SCALO+1  SECONDARY ALLOCATION
         MVC   EXPDT,DS1EXPDT  EXPIRATION DATE
*
*   DATA SET ORGANISATION TEST
*
         MVC   DBER,DBLANK    CLEAR OUTPUT AREA
         MVC   DBER+4(44),DSN  DSN TO OUTPUT AREA
         TM    DSORG,X'80'    ISAM BIT ON
         BO    ISAM           YES
         TM    DSORG,X'10'    BTAM BIT ON
         BO    BTAM           YES
         TM    DSORG,X'01'    DATASET UNMOVABLE ?
         BO    UNMOV          YES
         TM    DSORG,X'0C'
         BNZ   FEHLDSOR       INVALID DSORG FIELD
         TM    DSORG+1,X'80'  GRAPHICS ?
         BO    GRAPHICS       YES
         TM    DSORG+1,X'64'  TCAM LINE & MESSAGE GROUPS ?
         BNZ   TCAM           YES
         TM    DSORG+1,X'08'  VSAM ?
         BO    VSAM           YES
         TM    DSORG+1,X'13'
         BNZ   FEHLDSOR       INVALID DSORG FIELD
*
*    CALCULATE DATASET EXTENTS
*
         XC    SPACE,SPACE    CLEAR SPACE ACCOUNT FIELD
         LA    R8,DS1EXT1     ADDRESS OF FIRST EXTENT DESCRIPTOR
         LA    R6,3(0)        SET LOOP COUT TO THREE
         BAL   R10,UPEXTNT    LINK TO EXTENT ACCOUNT ROUTINE
         CLC   DS1PTRDS,=5X'00'  ANY FORMAT 3 DSCB?
         BE    NA5            NO
         MVC   DSCBPTR,P2     SAVE ADDR OF CURRENT DSCB
         MVC   P4,=C'ABSTR'   READ FORMAT 3 DSCB
         MVC   P2,DS1PTRDS
         L     R15,RDVTOC
         CALL  (15),(PA1,PA2,PA3,PA4),VL
         LTR   R15,R15        READ VTOC SUCCESSFUL ?
         BNZ   FEHLVTOC       NO
         LA    R7,P3          FORMAT 3 DSCB ADDRESSABILITY
         USING IECSDSL3,7
         CLI   DS3FMTID,X'F3'  TEST FOR CORRECT FORMAT ID
         BNE   FEHLVTOC       INVALID FORMAT 3 DSCB
         LA    R8,DS3EXTNT    ADDRESS OF EXTENT DESCRIPTOR
         LA    R6,4(0)        NUMBER OF EXTENT DESCRIPTORS
         BAL   R10,UPEXTNT    LINK TO EXTENT CALCULATION ROUTINE
         LA    R8,DS3ADEXT    ADDR OF ADDITIONAL EXT DESCRIPTORS
         LA    R6,9(0)        NUMBER OF EXTENT DESCRIPTORS
         BAL   R10,UPEXTNT    LINK TO EXTENT CALCULATION ROUTINE
         MVC   P2,DSCBPTR     RESET QX01442 PARAMETERS
         MVC   P4,=5C' '
NA5      EQU   *
         TM    DSORG,X'02'    PARTITIONED DATASET ?
         BZ    NB1            NO
*
*   READ DIRECTORY OF PARTITIONED DATASET TO GET NUMBER OF
*   DIRECTORY BLOCKS
*
*   INIT TEXT UNITS FOR DYNAMIC ALLOCATION
         MVC   PDSSER,VOLSER  VOL SER
         MVC   PDSDS,DSN      DATASET NAME
         TRT   PDSDS(45),TBL  SCAN FOR BLANK DELIMITER
         BZ    FEHLLOG        NO DELIMITER FOUND.LOGICAL ERROR
         S     R1,=A(PDSDS)   CALCULATE LENGTH OF DSNAME
         STH   R1,PDSDSL      STORE IT INTO TEXT UNIT
         LA    R1,PDSUNTU+8   DELIMITER DEFAULT
         TRT   PDSUNTU(9),TBL  SCAN FOR DELIMITER
         S     R1,=A(PDSUNTU)  CALCULATE LENGTH OF UNIT NAME
         STH   R1,PDSUNTL     STORE IT INTO TEXT UNIT
         MVI   NS99VERB,S99VRBAL  SET ALLOC VERB CODE
         LA    R1,NS99TUPL    ADDR OF TEXT UNIT PARAMETER LIST
         ST    R1,NS99TXTP
         LA    R1,NS99RBPT    ADDR OF SVC 99 REQUEST BLOCK
         DYNALLOC             DYNAMIC ALLOC OF PDS
         LTR   R15,R15        TEST RETURN CODE
         BNZ   DALERR         ALLOC NOT SUCCESFUL
NA6      EQU   *
*
         OPEN  PDSDCB         OPEN PDS
         XR    R8,R8          ZERO BLOCK COUNT
NA7      EQU   *
         GET   PDSDCB,DIRBLK  READ DIRECTORY BLOCK
         LA    R8,1(R8)       INCREASE BLOCK COUNT
         B     NA7            NEXT BLOCK
NA8      EQU   *
         ST    R8,DIR         NUMBER OF DIRECTORY BLOCKS
         CLOSE PDSDCB         CLOSE PDS
         TM    SYSINSW,X'08'  MEMBER BIT ON ?
         BO    NB1            YES. BYPASS UNALLOC
         UNALLOC
NB1      EQU   *
*
*   BUILD ATTRIBUTE DATA SET RECORD
*
*   THE ATTRIBUTES OF THE DATA SETS TO BE COPIED WILL BE PLACED
*   IN ATTRIBUTE DATA SET RECORD IN DYNALLOC TEXT UNIT FORMAT.
*   ALL TEXT UNITS ARE PADDED TO HALFWORD BOUNDARY. EACH TEXT
*   UNIT IS PRECEDED BY A HALFWORD CONTAINING THE LENGTH OF
*   THE FOLLOWING TEXT UNIT + 2.
*
         MVC   TXTAREA,TXTBLANK  CLEAR DADS WORK AREA
         LA    R8,TXTAREA     INIT WORK AREA POINTER
         LA    R7,2(R8)       TEXT UNIT ADDRESSABILITY
         USING S99TUNIT,7
*
*    D D N A M E   TEXT UNIT
*
         MVC   DDNAME,=CL8'SYSUT2'  DEFAULT = IEBGENER OUTPUT
         TM    DSORG,X'02'    PARTITIONED DATA SET ?
         BZ    NB21           NO
         MVC   DDNAME(3),=C'NEW'  BUILD IEBCOPY DDNAME
         L     R1,BLOCKADF    THIS WILL BE DONE BY CONCATENATING 'NEW'
         CVD   R1,DOPPLW      WITH THE CURRENT DADS BLOCKADDR
         OI    DOPPLW+7,X'0F'
         UNPK  DDNAME+3(5),DOPPLW+5(3)
NB21     EQU   *
         LA    R1,DALDDNAM    KEY 'DDNAME'
         STH   R1,S99TUKEY
         LA    R1,1           NUMBER OF LENGTH/PARM COMBINATIONS IS ONE
         STH   R1,S99TUNUM
         TRT   DDNAME(9),TBL  SCAN FOR LENGTH OF DDNAME
         BZ    FEHLLOG        LOGICAL ERROR
         S     R1,=A(DDNAME)  LENGTH
         STH   R1,S99TULNG
         MVC   S99TUPAR(8),DDNAME  DDNAME TO TEXT UNIT PARM FIELD
         LA    R1,1(R1)       SET LENGTH TO NEXT HALFWORD BOUNDARY
         SRL   R1,1(0)
         SLL   R1,1(0)
         LA    R1,8(R1)       LENGTH OF TEXT UNIT + 2
         STH   R1,0(R8)       STORE IT INTO TEXT UNIT PREFIX
         LA    R8,0(R8,R1)    INCREASE TEXT UNIT PTR
         LA    R7,2(R8)
*
*   D S N A M E    TEXT UNIT
*
         LA    R1,DALDSNAM    KEY = DSNAME
         STH   R1,S99TUKEY
         LA    R1,1           NUMBER OF LENGTH/PARM COMBINATIONS IS ONE
         STH   R1,S99TUNUM
         TRT   DSN(45),TBL    SCAN FOR DSN DELIMITER
         BZ    FEHLLOG        LOGICAL ERROR IF NO DELIMITER
         S     R1,=A(DSN)     CALCULATE LENGTH OF DSN
         STH   R1,S99TULNG    STORE IT INTO LENGTH FIELD
         MVC   S99TUPAR(44),DSN  DSNAME TO TEXT UNIT PARM FIELD
         LA    R1,1(R1)       ADJUST LENGTH TO HALFWORD BOUNDARY
         SRL   R1,1(0)
         SLL   R1,1(0)
         LA    R1,8(R1)       LENGTH OF TEXT UNIT + 2
         STH   R1,0(R8)       STORE IT INTO TEXT UNIT PREFIX
         LA    R8,0(R8,R1)    INCREASE TEXT UNIT PTR
         LA    R7,2(R8)
*
*  FORMAT OF SPACE ALLOCATION  TEXT UNIT
*
         TM    ALLOC,X'FF'    TEST ALLOC INDICATOR
         BZ    FEHLSPC        INVALID ALLOC INDICATOR
         TM    ALLOC,X'C0'    CYLINDER ALLOCATION ?
         BO    NB3            YES
         LA    R1,DALTRK      SET TEXT UNIT KEY TO 'TRACK'
         B     NB4
NB3      EQU   *
         LA    R1,DALCYL      SET TEXT UNIT KEY TO 'CYL'
NB4      EQU   *
         STH   R1,S99TUKEY
         XC    S99TUNUM,S99TUNUM  THERE ARE NO LENGTH/PARM COMBINATIONS
         LA    R1,6           LENGTH OF TEXT UNIT + 2
         STH   R1,0(R8)       STORE IT INTO TEXT UNIT PREFIX
         LA    R8,0(R8,R1)    INCREASE TEXT UNIT PTR
         LA    R7,2(R8)
*
*  SPACE ALLOCATION TEXT UNIT
*
         TM    ALLOC,X'C0'    CYLINDER ALLOC ?
         BNO   NB5            NO
         L     R10,SPACE      NUMBER OF ALLOCATED TRACKS
         AH    R10,TRKCYL     INCREASED BY 1 CYLINDER
         BCTR  R10,0          MINUS 1 TRACK
         SRDA  R10,32(0)
         LH    R1,TRKCYL      NUMBER OF TRACKS PER CYL
         DR    R10,R1         DIVIDE NUMBER OF ALL.TRKS BY TRK/CYL
         ST    R11,SPACE      NUMBER ALLOCATED CYLINDERS
NB5      EQU   *
         LA    R1,DALPRIME    KEY = PRIMARY ALLOCATION
         STH   R1,S99TUKEY
         LA    R1,1           NUMBER OF LENGTH/PARM COMBINATIONS IS ONE
         STH   R1,S99TUNUM
         LA    R1,3           LENGTH OF PARM FIELD IS THREE
         STH   R1,S99TULNG
         MVC   S99TUPAR(3),SPACE+1  PARM FIELD = PRIMARY ALLOC
         LA    R1,12          LENGTH OF TEXT UNIT + 2
         STH   R1,0(R8)       STORE IT INTO TEXT UNIT PREFIX
         LA    R8,0(R8,R1)    INCREASE TEXT UNIT PTR
         LA    R7,2(R8)
*
*   SECONDARY ALLOCATION TEXT UNIT
*
         CLC   SECAL,=3X'00'  SECONDARY ALLOC PRESENT ?
         BE    NB6            NO
         LA    R1,DALSECND    KEY = SECONDARY ALLOC
         STH   R1,S99TUKEY
         LA    R1,1           NUMBER OF LENGTH/PARM COMBINATIONS IS ONE
         STH   R1,S99TUNUM
         LA    R1,3           LENGTH OF PARM FIELD IS THREE
         STH   R1,S99TULNG
         MVC   S99TUPAR(3),SECAL  SECONDARY ALLOC
         LA    R1,12          LENGTH OF TEXT UNIT + 2
         STH   R1,0(R8)       STORE IT INTO TEXT UNIT PREFIX
         LA    R8,0(R8,R1)    INCREASE TEXT UNIT PTR
         LA    R7,2(R8)
NB6      EQU   *
*
*   DIRECTORY BLOCK ALLOCATION TEXT UNIT
*
         TM    DSORG,X'02'    PDS DATA SET ?
         BZ    NB7            NO. BYPASS DIRECTORY ALLOC
         LA    R1,DALDIR      KEY = DIRECTORY ALLOCATION
         STH   R1,S99TUKEY
         LA    R1,1           NUMBER OF LENGTH/PARM COMBINATIONS IS ONE
         STH   R1,S99TUNUM
         LA    R1,3           LENGTH OF PARMFIELD IS THREE
         STH   R1,S99TULNG
         MVC   S99TUPAR(3),DIR+1  NUMBER OF DIRECTORY BLKS
         LA    R1,12          LENGTH OF TEXT UNIT + 2
         STH   R1,0(R8)       STORE IT INTO TEXT UNIT PREFIX
         LA    R8,0(R8,R1)    INCREASE TEXT UNIT PTRE
         LA    R7,2(R8)
NB7      EQU   *
*
*   C O N T I G   SPACE ALLOC  TEXT UNIT
*
         TM    ALLOC,X'08'    CONTIG ALLOC ?
         BZ    NB8            NO.
         LA    R1,DALSPFRM    KEY = FORMAT OF ALLOCATED SPACE
         STH   R1,S99TUKEY
         LA    R1,1           NUMBER OF LENGTH/PARM COMBINATIONS IS ONE
         STH   R1,S99TUNUM
         STH   R1,S99TULNG    LENGTH OF PARM FIELD IS ONE
         MVI   S99TUPAR,X'08' THIS MEANS CONTIG ALLOCATION
         LA    R1,10          LENGTH OF TEXT UNIT + 3
         STH   R1,0(R8)       STORE IT INTO TEXT UNIT PREFIX
         LA    R8,0(R8,R1)    INCREASE TEXT UNIT PTR
         LA    R7,2(R8)
NB8      EQU   *
*
*   EXPIRATION DATE TEXT UNIT
*
         CLC   EXPDT,=3X'00'  EXPIRATION DATE PRESENT ?
         BE    NB80           NO
         LA    R1,DALEXPDT    KEY = EXPIRATION DATE
         STH   R1,S99TUKEY
         LA    R1,1           NUMBER OF LENGTH/PARM COMBINATIONS IS ONE
         STH   R1,S99TUNUM
         LA    R1,5           LENGTH OF PARM FIELD IS FIVE
         STH   R1,S99TULNG
         LH    R1,EXPDAT      PICK UP BINARY YEAR OF EXPIRATION
         CVD   R1,DOPPLW      CONVERT IT TO DECIMAL
         OI    DOPPLW+7,X'0F'  CLEAR SIGN
         UNPK  S99TUPAR(2),DOPPLW+6(2)  YEAR OF EXPIRATION
         LH    R1,EXPDAT+2    PICK UP BINARY DAY OF EXPIRATION
         CVD   R1,DOPPLW      CONVERT IT TO DECIMAL
         OI    DOPPLW+7,X'0F'  CLEAR SIGN
         UNPK  S99TUPAR+2(3),DOPPLW+6(2)  DAY OF EXPIRATION
         MVC   EXPDTC,S99TUPAR  SAVE CHAR FORM OF EXPIRATION DATE
         LA    R1,14          LENGTH OF TEXT UNIT + 3
         STH   R1,0(R8)       STORE IT INTO TEXT UNIT PREFIX
         LA    R8,0(R8,R1)    INCREASE TEXT UNIT PTR
         LA    R7,2(R8)
NB80     EQU   *
*****************************************************
*****************************************************
**
**    D C B   A T T R I B U T E S
**
*****************************************************
*****************************************************
*
*   BLOCKSIZE TEXT UNIT
*
         CLC   BLKL,=H'0'     BLOCKSIZE PRESENT ?
         BE    NODCB          NO
         CLC   BLKL,=H'32756'  BLOCKSIZE CORRECT ?
         BH    NODCB          NO
         LA    R1,DALBLKSZ    KEY = BLOCKSIZE SPECIFICATION
         STH   R1,S99TUKEY
         LA    R1,1           NUMBER OF LENGTH/PARM COMBINATIONS IS ONE
         STH   R1,S99TUNUM
         LA    R1,2           LENGTH OF PARM FIELD IS TWO
         STH   R1,S99TULNG
         MVC   S99TUPAR(2),BLKL  BLOCKSIZE
         LA    R1,10          LENGTH OF TEXT UNIT + 2
         STH   R1,0(R8)       STORE IT INTO TEXT UNIT PREFIX
         LA    R8,0(R8,R1)    INCREASE TEXT UNIT PTR
         LA    R7,2(R8)       ADDRESSABILITY OF NEXT TEXT UNIT
*
*   KEY LENGTH   TEXT UNIT
*
         CLI   KEYL,X'00'     KEY LENGTH PRESENT
         BE    NB81           NO
         LA    R1,DALKYLEN    KEY = KEYLEN
         STH   R1,S99TUKEY
         LA    R1,1           NUMBER OF LENGTH/PARM COMBINATIONS
         STH   R1,S99TUNUM      IS ONE
         STH   R1,S99TULNG    LENGTH OF PARM FIELD IS ONE
         MVC   S99TUPAR(1),KEYL KEY LENGTH
         LA    R1,10          LENGTH OF TEXT UNIT + 3
         STH   R1,0(R8)       STORE IT INTO TEXT UNIT PREFIX
         LA    R8,0(R8,R1)    INCREASE TEXT UNIT PTR
         LA    R7,2(R8)       ADDRESSABILITY OF NEXT TEXT UNIT
NB81     EQU   *
*
*   LOGICAL RECORD LENGTH  TEXT UNIT
*
         CLC   LRECL,=X'8000' TEST FOR VALID LRECL FIELD
         BH    NODCB          LRECL INVALID
         LA    R1,DALLRECL    KEY = LRECL SPECIFICATION
         STH   R1,S99TUKEY
         LA    R1,1           NUMBER OF LENGTH/PARM COMBINATIONS IS ONE
         STH   R1,S99TUNUM
         LA    R1,2           LENGTH OF PARM FIELD IS TWO
         STH   R1,S99TULNG
         MVC   S99TUPAR(2),LRECL  LRECL
         LA    R1,10          LENGTH OF TEXT UNIT + 2
         STH   R1,0(R8)       STORE IT INTO TEXT UNIT PREFIX
         LA    R8,0(R8,R1)    INCREASE TEXT UNIT PTR
         LA    R7,2(R8)       ADDRESSABILITY OF NEXT TEXT UNIT
*
*   OPTION CODE  TEXT UNIT
*
         LA    R1,DALOPTCD    KEY = OPTION CODE SPECIFICATION
         STH   R1,S99TUKEY
         LA    R1,1           NUMBER OF LENGTH/PARM COMBINATIONS
         STH   R1,S99TUNUM
         STH   R1,S99TULNG    LENGTH OF PARM FIELD IS ONE
         MVC   S99TUPAR(1),OPTCD  OPTION CODE
         LA    R1,10          LENGTH OF TEXT UNIT + 2
         STH   R1,0(R8)       STORE IT INTO TEXT UNIT PREFIX
         LA    R8,0(R8,R1)    INCREASE TEXT UNIT PTR
         LA    R7,2(R8)       ADDRESSABILITY OF NEXT TEXT UNIT
*
*    DSORG TEXT UNIT
*
         SPACE 2
         TM    DSORG,X'40'    DSORG=PS ?                   PA 20310
         BZ    NDSORG         NO                           PA 20310
         TM    ALLOC,X'C0'    TRACK ALLOC ?                PA 20310
         BO    NDSORG         NO                           PA 20310
         LA    R1,DALDSORG    GET KEY                      PA 20310
         STH   R1,S99TUKEY    INTO TEXT UNIT               PA 20310
         LA    R1,1                                        PA 20310
         STH   R1,S99TUNUM                                 PA 20310
         LA    R1,2           LENGTH                       PA 20310
         STH   R1,S99TULNG    INTO TEXT UNIT               PA 20310
         MVC   S99TUPAR(2),DSORG PUT PARM                  PA 20310
         LA    R1,10          LENGTH OF TEXT UNIT          PA 20310
         STH   R1,0(R8)       BEFORE TEXT UNIT             PA 20310
         LA    R8,0(R8,R1)    NEXT ELEMENT                 PA 20310
         LA    R7,2(R8)       A(NEXT TEXT UNIT)            PA 20310
   SPACE 2
NDSORG   EQU   *                                           PA 20310
*
*    RECORD FORMAT  TEXT UNIT
*
         CLI   RECFM,X'00'    RECORD FORMAT PRESENT ?
         BE    NODCB          NO.
         LA    R1,DALRECFM    KEY = RECORD FORMAT SPECIFICATION
         STH   R1,S99TUKEY
         LA    R1,1           NUMBER OF LENGTH/PARM COMBINATIONS IS ONE
         STH   R1,S99TUNUM
         STH   R1,S99TULNG    LENGTH OF PARM FIELD IS ONE
         MVC   S99TUPAR(1),RECFM  RECORD FORMAT
         LA    R1,10          LENGTH OF TEXT UNIT + 3
         STH   R1,0(R8)       STORE IT INTO TEXT UNIT PREFIX
NB9      EQU   *
         WRITE DADSDECB,SF,DADS,TXTAREA,190   WRITE ATTRIBUTE DATA SET
         CHECK DADSDECB
*
*   INSERT DADS BLOCK ADDR IN DSNL RECORD
*
         MVC   ATRASA(81),=CL81'0-       -'
         CLI   DBER,C'*'      DSN IN ERROR ?
         BE    NB91           YES.
         TRT   DBER+4(45),TBL  SCAN FOR END OF DSNAME
         BZ    FEHLLOG        END NOT FOUND. LOGICAL ERROR
         MVC   1(5,R1),=C'ATTR('  INSERT ATTR KEYWORD
         L     R2,BLOCKADF    CONVERT BLOCKADDR TO DECIMAL
         CVD   R2,DOPPLW
         OI    DOPPLW+7,X'0F'  CLEAR SIGN
         UNPK  6(5,R1),DOPPLW+5(3)
         MVI   11(R1),C')'
         CLC   EBER(4),=C'VOL='  VOL PARM SPECIFIED IN DSN STMT?
         BNE   NB90           NO
         MVI   13(R1),C'-'    SET CONTINUATION CHAR
NB90     EQU   *
         MVC   ATRDATA+2(5),6(R1)
NB91     EQU   *
         L     R8,BLOCKADF    INCREASE BLOCK ADDR
         LA    R8,1(R8)
         ST    R8,BLOCKADF
**************************************
**************************************
*
*  BUILD ATTRIBUTES INFORMATION RECORD
*
**************************************
**************************************
         LA    R2,ATRASA      AREA ADDRESS
         BAL   R14,UPPRT      LINK TO PRINT ROUTINE
         MVC   ATRBER,ATRBLANK  CLEAR ATTRIBUTES WORK AREA
         LA    R7,ATRBER      INIT ATTR INFO POINTER
*
*   D S N A M E
*
         MVC   0(44,R7),DSN   DSNAME
         TRT   0(45,R7),TBL   SCAN FOR END OF DSNAME
         LA    R7,1(R1)       UPDATE ATTR INFO PTR
*
*   S P A C E
*
         MVC   0(6,R7),=C'SPACE('  SPACE KEYWORD
         LA    R7,6(R7)       UPDATE ATTR INFO PTR
         L     R8,SPACE       PICK UP PRIMARY ALLOCATION
         BAL   R10,UPEDIT     LINK TO EDIT ROUTINE
         L     R8,ALLOC       PICK UP SECONDARY ALLOCATION
         LA    R8,0(R8)       CLEAR HIGH ORDER BITS
         LTR   R8,R8          ZERO TEST
         BZ    NC2            NO 2ND ALLOC
         LA    R7,1(R7)       INSERT ONE BLANK
         BAL   R10,UPEDIT     LINK TO EDIT ROUTINE
NC2      EQU   *
         MVI   0(R7),C')'     CLOSING PARENTHESIS
         LA    R7,2(R7)       INSERT ONE BLANK
         ST    R7,ATRADDR     SAVE START ADDR OF NEXT ATTRIBUTE
*
*  FORMAT OF ALLOCATION
*
         TM    ALLOC,X'C0'    TEST ALLOC FLAG BYTE
         BO    NC3            CYLINDER ALLOC
         MVC   0(7,R7),=CL7'TRACKS'  INDICATE TRACK FORMAT
         LA    R7,7(R7)       UPDATE ATTR INFO PTR
         B     NC4
NC3      EQU   *
         MVC   0(4,R7),=CL4'CYL'  INDICATE CYLINDER ALLOCATION
         LA    R7,4(R7)       UPDATE ATTR INFO PTR
NC4      EQU   *
         BAL   R10,UPPUTATR   LINK TO MARGIN ROUTINE
*
*  FORMAT OF REQUESTED SPACE (CONTIG)
*
         TM    ALLOC,X'08'    CONTIG REQUEST ?
         BZ    NC5            NO
         MVC   0(4,R7),=CL4'CTG'  INDICATE CONTIG REQUEST
         LA    R7,4(R7)       UPDATE ATTR INFO PTR
         BAL   R10,UPPUTATR   LINK TO MARGIN ROUTINE
NC5      EQU   *
*
*  DIRECTORY BLOCK ALLOCATION
*
         TM    DSORG,X'02'    PDS ?
         BZ    NC6            NO
         MVC   0(4,R7),=C'DIR('  INDICATE DIRECTORY BLOCK ALLOC
         LA    R7,4(R7)       UPDATE ATTR INFO PTR
         L     R8,DIR         PICK UP NUMBER OF DIRECTORY BLOCKS
         BAL   R10,UPEDIT     LINK TO EDIT ROUTINE
         MVI   0(R7),C')'     CLOSING PARENTHESIS
         LA    R7,2(R7)       INSERT ONE BLANK
         BAL   R10,UPPUTATR   LINK TO MARGIN ROUTINE
NC6      EQU   *
*
*   D C B    A T T R I B U T E S
*
*   RECORD FORMAT
*
         CLC   DBER(3),=3C' '   DCB ATTRIBUTES PRESENT ?
         BNE   ND31           NO
         MVC   0(6,R7),=C'RECFM('  RECFM KEYWORD
         LA    R7,6(R7)       UPDATE ATTR INFO PTR
         TM    RECFM,X'C0'    TEST FOR UNDEFINED
         BO    NC6U           RECFM=U
         TM    RECFM,X'80'    TEST FOR FIXED
         BO    NC6F           RECFM=F
         TM    RECFM,X'40'    TEST FOR VARIABLE
         BO    NC6V           RECFM=V
         MVI   0(R7),C'*'     INDICATES INVALID RECFM
         LA    R7,1(R7)       UPDATE ATTR INFO PTR
         B     ND1
NC6U     EQU   *
*   RECFM=U
         MVI   0(R7),C'U'
         B     NC7
NC6F     EQU   *              RECFM=F
         MVI   0(R7),C'F'
         B     NC7
NC6V     EQU   *              RECFM=V
         MVI   0(R7),C'V'
NC7      EQU   *
         LA    R7,1(R7)       UPDATE ATTR INFO PTR
         TM    RECFM,X'10'    TEST FOR BLOCKED RECORDS
         BZ    NC71           NO BLOCKED RECORDS
         MVC   0(2,R7),=C',B'  INDICATES BLOCKED RECORDS
         LA    R7,2(R7)       UPDATE ATTR INFO PTR
NC71     EQU   *
         TM    RECFM,X'08'    TEST FOR SPANNED / STANDARD RECORDS
         BZ    NC73           NO SPANNED / STANDARD RECORDS
         MVC   0(2,R7),=C',S'  INDICATES SPANNED / STANDARD
         LA    R7,2(R7)       UPDATE ATTR INFO PTR
NC73     EQU   *
         TM    RECFM,X'20'    TEST FOR TRACK OVERFLOW
         BZ    NC74           NO TRACK OVERFLOW
         MVC   0(2,R7),=C',T'  INDICATES TRACK OVERFLOW
         LA    R7,2(R7)       UPDATE ATTR INFO PTR
NC74     EQU   *
         TM    RECFM,X'06'    TEST FOR CONTROL CHAR
         BZ    ND1            NO CONTROL CHARACTER
         MVC   0(2,R7),=C',A'  ASA CONTROL CHAR
         TM    RECFM,X'02'    MACHINE CONTROL CHAR ?
         BZ    NC75           NO. ASA
         MVC   0(2,R7),=C',M'  MACHINE CONTROL CHR
NC75     EQU   *
         LA    R7,2(R7)       UPDATE ATTR INFO PTR
ND1      EQU   *
         MVC   0(2,R7),=C') ' CLOSING PARENTH AND BLANK DELIMITER
         LA    R7,2(R7)       UPDATE ATTR INFO PTR
         BAL   R10,UPPUTATR   LINK TO MARGIN ROUTINE
*
*   L R E C L
*
         CLC   LRECL,=2X'00'  LRECL PRESENT ?
         BE    ND3            NO
         MVC   0(6,R7),=C'LRECL('  LRECL KEYWORD
         LA    R7,6(R7)       UPDATE ATTR INFO PTR
         CLC   LRECL,=X'8000' RECFM=VS,VBS - LRECL > 32756 ?
         BE    ND1X           YES
         LH    R8,LRECL       PICK UP LRECL
         BAL   R10,UPEDIT     LINK TO EDIT ROUTINE
         B     ND2
ND1X     EQU   *  SPANNED RECORDS, LRECL > 32756
         MVI   0(R7),C'X'
ND2      EQU   *
         MVC   0(2,R7),=C') ' CLOSING PARENTHESIS AND BLANK DELIM.
         LA    R7,2(R7)       UPDATE ATTR INFO PTR
         BAL   R10,UPPUTATR   LINK TO MARGIN ROUTINE
*
*   B L K S I Z E
*
ND3      EQU   *
         MVC   0(8,R7),=C'BLKSIZE('  BLKSIZE KEY WORD
         LA    R7,8(R7)       UPDATE ATTR INFO PTR
         LH    R8,BLKL        PICK UP BLOCK SIZE
         BAL   R10,UPEDIT     LINK TO EDIT ROUTINE
         MVC   0(2,R7),=C') '  CLOSING PARENTHESIS AND BLANK DELIM
         LA    R7,2(R7)       UPDATE ATTR INFO PTR
         BAL   R10,UPPUTATR   LINK TO MARGIN ROUTINE
*
*   D S O R G
*
ND31     EQU   *
         MVC   0(6,R7),=C'DSORG('  DSORG KEYWORD
         LA    R7,6(R7)       UPDATE ATTR INFO PTR
         CLC   DSORG,=2X'00'  DSORG PRESENT ?
         BE    ND3X           NO
         TM    DSORG+1,X'FF'  TEST FOR NONACCEPTABLE DSORG
         BNZ   ND3X           NONACCEPTABLE DSORG
         TM    DSORG,X'0C'
         BNZ   ND3X           NONACCEPTABLE DSORG
         XR    R1,R1          PICK UP DSORG BYTE
         IC    R1,DSORG
         SRL   R1,4(0)        DELETE BITS 4 - 7
         LA    R1,DSORGTAB(R1)
         MVC   0(2,R7),0(R1)  DSORG (CHAR FORM)
         LA    R7,2(R7)       UPDATE ATTR INFO PTR
         TM    DSORG,X'01'    TEST UNMOVABLE BIT
         BZ    ND4            DATA SET IS MOVABLE
         MVI   0(R7),C'U'     INDICATES 'UNMOVABLE'
         LA    R7,1(R7)       UPDATE ATTR INFO PTR
         B     ND4
ND3X     EQU   *   NONACCEPTABLE DSORG
         MVI   0(R7),C'*'
         LA    R7,1(R7)       UPDATE ATTR INFO PTR
         MVC   DBER(4),=CL4'NCP'  SET DATA SET STATUS TO NO COPY
ND4      EQU   *
         MVC   0(2,R7),=C') '  CLOSING PARENTHESIS AND BLANK DELIM
         LA    R7,2(R7)       UPDATE ATTR INFO PTR
         BAL   R10,UPPUTATR   LINK TO MARGIN ROUTINE
*
*  E X P D T
*
         CLC   EXPDT,=3X'00'  EXPIRATION DATE PRESENT ?
         BE    ND5            NO
         MVC   0(12,R7),=C'EXPDT(YYDDD)'  EXPDT KEYWORD
         MVC   6(5,R7),EXPDTC  EXPIRATION DATE (CHAR FORM)
         LA    R7,12(R7)      UPDATE ATTR INFO PTR
         BAL   R10,UPPUTATR   LINK TO MARGIN ROUTINEMG
ND5      EQU   *
         CLC   ATRBER(20),=20C' '  ATTR INFO WORKAREA EMPTY ?
         BE    ND6            YES.
*     NOT EMPTY. PRINT LAST LINE
         MVI   ATRASA,C' '    SET ASA
         LA    R2,ATRASA      AREA ADDRESS
         BAL   R14,UPPRT      LINK TO PRINT ROUTINE
ND6      EQU   *
         TM    DSORG,X'20'    DSORG = DA BECOMES STAT NO COPY
         BO    ND60A
         CLC   DSN,=CL44'SYSCTLG'
         BNE   ND6A
ND60A    EQU   *
         CLI   DBER,C'*'
         BE    ND6A
         MVC   DBER(4),=CL4'NCP'
ND6A     EQU   *
         SEQNO DBER,SEQNUMBR           INSERT SEQUENCE NUMBER
         PUT   DSNL,DBER      PRINT DATA SET LIST
         TM    SYSINSW,X'02'  SYSIN PRESENT ?
         BZ    NA2            NO. NEXT DSN FROM VTOC
         CLC   EBER(4),=C'VOL='  VOLUME PARM ?
         BNE   ND61           NO
         CLI   DBER,C'*'      ERROR MESSAGE ?
         BE    ND61           YES
         MVC   DBER,DBLANK    CLEAR DSN OUTPUT AREA
         MVC   DBER+10(8),=C'FROMVOL('  FROM VOL PARM
         MVC   DBER+18(6),EBER+4  VOL SER
         MVI   DBER+24,C')'
         CLI   EBER+10,C'/'      UNIT NAME PRESENT ?
         BNE   ND6B           NO
         MVC   DBER+27(9),=C'FROMUNIT('  FROM UNIT PARM
         MVC   DBER+36(8),EBER+11  UNIT NAME
         LA    R1,DBER+45
         TRT   DBER+36(9),TBL  SCAN FOR DELIMITER
         MVI   0(R1),C')'
ND6B     EQU   *
         SEQNO DBER,SEQNUMBR           INSERT SEQUENCE NUMBER
         PUT   DSNL,DBER      WRITE CONTINUATION STMT
ND61     EQU   *
         TM    SYSINSW,X'04'  ENTIRE VOLUME PROC ?
         BO    NA29           YES
         TM    SYSINSW,X'08'  TEST MEMBER BIT
         BZ    ND61A          NO MEMBER STMTS WILL BE GENERATED
         TM    DSORG,X'02'    DSORG=PO ?
         BZ    ND61A          NO. NO MEMBER STMTS
         MVI   KENNZ,C' '     INIT QX01443 PARMS
ND610B   EQU   *
         L     R15,PDSSCADR   LOAD ENTRY POINT ADDR
         CALL  (15),(AKENNZ,ASTORE,AMEMBER),VL
         CH    R15,=H'4'      END OF DIRECTORY ?
         BE    ND610M         YES
         LTR   R15,R15        RC = 0 ?
         BNZ   FEHLLOG
         MVC   DBER,DBLANK
         MVC   DBER+1(2),=C'M='  BUILD MEMBER STMT
         MVC   DBER+3(8),MEMBER
         SEQNO DBER,SEQNUMBR
         PUT   DSNL,DBER
         B     ND610B
ND610M   EQU   *
         UNALLOC
         NI    SYSINSW,X'F7'  CLEAR MEMBER INDICATOR
         B     NA200
ND61A    EQU   *
         GET   IN,EBER        NEXT SYSIN STATEMENT ?
         TRT   EBER(16),TNOBL SCAN FOR KEYWORD
         BZ    FEHLIN         INVALID STATEMENT
         CLC   0(2,R1),=C'M='  MEMBER STATEMENT ?
         BNE   ND63           NO.
         ST    R1,REG1MEMB    SAVE KEYWORD INDEX
         MVI   EASA,C' '      SET ASA
         LA    R2,EASA        AREA ADDRESS
         BAL   R14,UPPRT      LINK TO PRINT ROUTINE
         L     R1,REG1MEMB    RELOAD KEYWORD INDEX
         TRT   2(9,R1),TBL    SCAN FOR DELIMITER
         BNZ   ND62
         B     FEHLIN         INVALID MEMBER NAME
ND62     EQU   *
         SEQNO DBER,SEQNUMBR           INSERT SEQUENCE NUMBER
         PUT   DSNL,EBER      WRITE MEMBER STATEMENT
         B     ND61        NEXT STATEM
ND63     EQU   *
         MVI   EASA,C'0'      SET ASA
         LA    R2,EASA        AREA ADDRESS
         BAL   R14,UPPRT      LINK TO PRINT ROUTINE
         B     NA2
REG1MEMB DS    F              KEYWORD INDEX SAVE AREA
         EJECT
*
*   END ROUTINES
*
ENDIN    EQU   *
         TM    SYSINSW,X'01'  INIT GET ?
         BZ    ENDE           NO. END
         XC    SYSINSW,SYSINSW  CLEAR SYSIN SWITCH
         B     NA11           NO SYSIN STATEMENTS
NC1      EQU   *
         NI    SYSINSW,X'FB'  CLEAR ENTIRE VOL INDICATOR
         MVC   P2,=CL5'VTOC'  RESET QX01442 PARMS
         MVC   P4,=5C' '
         TM    SYSINSW,X'02'  SYSIN PRESENT ?
         BO    NA200          YES. READ NEXT DSN STMT
ENDE     EQU   *
         MVC   DBER,=CL80'***'
         SEQNO DBER,SEQNUMBR           INSERT SEQUENCE NUMBER
         PUT   DSNL,DBER
         MVC   DBER,=CL80'***'
         SEQNO DBER,SEQNUMBR           INSERT SEQUENCE NUMBER
         PUT   DSNL,DBER
         MVC   DBER,=CL80'*** ------ E N D   O F   D I S C O 1 ------'
         SEQNO DBER,SEQNUMBR           INSERT SEQUENCE NUMBER
         PUT   DSNL,DBER
         MVC   DBER,=CL80'***        RC=XX'
         UNPK  DBER+14(3),RC+3(2)
         TR    DBER+14(2),TTRANS-240
         MVI   DBER+16,C' '
         SEQNO DBER,SEQNUMBR           INSERT SEQUENCE NUMBERMH
         PUT   DSNL,DBER
         CLOSE (DSNL,,DADS)
         OPEN DSNLL
         MVI   DASA,C'1'      SET ASA TO SKIP
ENDEX    EQU   *
         GET   DSNLL,DBER
         LA    R2,DASA        AREA ADDRESS
         BAL   R14,UPPRT      LINK TO PRINT ROUTINE
         MVI   DASA,C'0'      SET SPACE TWO
         B     ENDEX
ENDEZ    EQU   *
         CLOSE (DSNLL,,ATRLST,,IN)
         L     R15,RC         LOAD RETURN CODE
         L     R13,SAVE+4     LOAD ADDR OF CALLER'S SAVE AREA
         RETURN (14,12),RC=(15)
*
*   E D I T   R O U T I N E
*
*   THIS ROUTINE CONVERTS BINARY DATA TO UNPACKED DECIMAL
*   FORMAT. LEADING ZEROS WILL BE SUPPRESSED (EXCEPT THE
*   UNIT POSITION).
*   REGISTER 7 MUST CONTAIN THE OUTPUT LOCATION
*   REGISTER 8 MUST CONTAIN THE BINARY VALUE
*   AFTER CONVERSION REG 7 IS SET TO THE NEXT FREE BYTE
*   IN THE OUTPUT AREA
*
UPEDIT   EQU   *
         ST    R10,REG10EDT   SAVE RETURN REG
         CVD   R8,DOPPLW      CONVERT TO DECIMAL
         UNPK  UNPACK,DOPPLW
         OI    UNPACK+15,X'F0' CLEAR SIGN
         LA    R1,UNPACK+15   SET ZERO DEFAULT
         TRT   UNPACK(15),TNOZERO SCAN FOR SIGNIFICANT DIGIT
         LA    R2,UNPACK+15   CALCULATE LENGTH OF EXPRESSION
         SR    R2,R1
         EX    R2,MOVE1       MOVE EXPRESSION TO OUTPUT AREA
         LA    R7,1(R7,R2)    UPDATE OUTPUT POINTER
         OI    NE0SW+1,X'F0'  TURN ON EDIT SWITCH
         BAL   R10,UPPUTATR   LINK TO MARGIN ROUTINE
         NI    NE0SW+1,X'0F'  RESET EDIT SWITCH
         L     R10,REG10EDT   RELOAD RETURN REG
         BR    R10            RETURN TO CALLER
         EJECT
*
*   M A R G I N    R O U T I N E
*
*   THIS ROUTINE ISSUES A PUT IF THE OUTPUT POINTER
*   EXCEEDS COLUMN 70. UNCOMPLETE ATTRIBUTE PARAMETERS WILL
*   BE REMOVED FROM THE OUTPUT AREA AND MOVED AGAIN TO
*   THE OUTPUT AREA WHEN PUT HAS FINISHED.
*   REG 7 MUST CONTAIN THE ADDRESS OF THE NEXT FREE BYTE OF
*   THE OUTPUT AREA.
*   THE START ADDR OF THE LAST OR CURRENT ATTR PARAMETER
*   MUST BE PLACED IN THE FULLWORD NAMED 'ATRADDR'.
*
UPPUTATR EQU   *
         C     R7,=A(ATRBER+70)  MARGIN EXCEEDED ?
         BNL   NE1            YES.
NE0SW    NOPR  R10            EDIT SWITCH. RETURN IF MARGIN ROUT IS
*                             CALLED BY EDIT ROUTINE
         ST    R7,ATRADDR     SAVE START ADDR OF NEXT ATTRIBUTE
         BR    R10            RETURN TO CALLER
NE1      EQU   *   MARGIN EXCEEDED
         L     R2,ATRADDR     START ADDR OF LAST ATTR
         LR    R1,R7          CALCULATE LENGTH OF LAST ATTR PARM
         SR    R1,R2
         BZ    FEHLLOG        ZERO LENGTH IS LOGICAL ERROR
         C     R7,=A(ATROVL)  OVERFLOW AREA OVERLAID
         BH    NE2            YES
         LA    R7,ATROVL      SET OUTPUT PTR TO OVERFLOW AREA
NE2      EQU   *
         BCTR  R1,0           DECREASE ATTR LENGTH FOR EX
         EX    R1,MOVE2       MOVE ATTRIBUTE PARM TO OVERFLOW AREA
         MVC   0(2,R2),=C'- ' SET CONT CHAR IN OUTPUT AREA
         EX    R1,MOVE3       REPLACE REMOVED ATTR BY BLANKS
         LR    R7,R1          SAVE LENGTH
         ST    R2,REG2MAR     SAVE REG 2
         MVI   ATRASA,C' '    SET ASA
         LA    R2,ATRASA      AREA ADDRESS
         BAL   R14,UPPRT      LINK TO PRINT ROUTINE
         L     R2,REG2MAR     RESTORE REG 2
         MVC   ATRDATA,ATROVL  MOVE OVERFLOW AREA TO OUTPUT AREA
         MVC   ATROVL,ATROVL-1  CLEAR OVERFLOW ARE
         TRT   ATRDATA(50),TNOBL  SCAN FOR START OF ATTR
         BZ    FEHLLOG        NOT FOUND. LOGICAL ERROR
         ST    R1,ATRADDR     SAVE START ADDR
         LA    R7,1(R1,R7)    SET OUTPUT POINTER TO NEXT FREE BYTE
         TM    NE0SW+1,X'F0'  MARGIN ROUT CALLED BY EDIT ROUT
         BO    0(R10)         YES. RETURN
         ST    R7,ATRADDR     ADDR OF NEXT FREE BYTE IS START ADDR
         BR    R10            RETURN TO CALLER
REG2MAR  DS    F              REG 2 SAVE AREA
         EJECT
*
*   EXTENT CALCULATION ROUTINE
*
*   THIS ROUTINE ACCUMULATES THE EXTENTS FROM SUBSEQUENT
*   EXTENT DESCRIPTORS (F1 AND F3 DSCB'S). THE ACCUMULATION
*   FIELD IS NAMED 'SPACE' AND MUST BE SPECIFIED ON
*   FULLWORD BOUNDARY.
*   INPUT: REG 8  ADDR OF THE FIRST OF SEVERAL SUBSEQUENT
*                 EXTENT DESCRIPTORS
*          REG 6  NUMBER OF SUBSEQUENT EXTENT DESCRIPTORS
*   INPUT AND OUTPUT:
*          FULLWORD NAMED 'SPACE'  ACCUMULATED EXTENTS
*
UPEXTNT  EQU   *
         MVC   EXTFLG(10),0(R8)  CURRENT EXTENT DESCRIPTOR
         TM    EXTFLG,X'FF'   TEST FLAGS
         BZ    0(R10)         THERE IS NO EXTENT
         LH    R9,EXTLOW     CYLINDER OF LOWER LIMIT (CC)
         MH    R9,TRKCYL      MULTIPLIED WITH TRACKS PER CYL
         AH    R9,EXTLOW+2  PLUS TRACK OF LOWER LIMIT (HH)
         ST    R9,EXTLOW        = ABSOLUTE TRACK OF LOWER LIMIT
         LH    R9,EXTHI       CYLINDER OF UPPER LIMIT (CC)
         MH    R9,TRKCYL      MULTIPLIED WITH TRACKS PER CYL
         AH    R9,EXTHI+2     PLUS TRACK OF UPPER LIMIT (HH)
         S     R9,EXTLOW      ABSOLUTE TRACK OF UPPER LIMIT
*                             MINUS ABS.TRK OF LOWER LIMIT
*                               = NUMBER OF TRACKS IN THIS EXTENT
         LA    R9,1(R9)       INCREASED BY ONE
         A     R9,SPACE       PLUS ACCUMULATED SPACE
         ST    R9,SPACE
         LA    R8,10(R8)      NEXT EXTENT DESCRIPTOR
         BCT   R6,UPEXTNT     DECREASE AND TEST LOOP COUNT
         BR    R10            RETURN TO CALLER
*
*    P R I N T   R O U T I N E
*
UPPRT    EQU   *
         ST    R14,REG14PRT   SAVE RETURN REG
         LH    R1,ZZ          PICK UP LINE COUNT
         CH    R1,=H'60'      LINE COUNT GREATER THAN / EQUAL TO 60 ?
         BL    UPPRTNO        - NO.
         MVI   0(R2),C'1'     SET SKIP TO CHAN 1
UPPRTNO  EQU   *
         PUT   ATRLST,(2)     PRINT LINE
         CLI   0(R2),C'1'     ASA = 1 ?
         BE    UPPRTSKP       YES
         LH    R1,ZZ          LOAD LINE COUNT
         CLI   0(R2),C'0'     ASA = 0 ?
         BE    UPPRTSP2       YES
         LA    R1,1(R1)       SPACE ONE; INCREASE LINE CNT BY 1
         B     UPPRTX
UPPRTSKP EQU   *
         XR    R1,R1          SKIP TO CHAN 1; CLEAR LINE CNT
         B     UPPRTX
UPPRTSP2 EQU   *
         LA    R1,2(R1)       SPACE TWO; INCREASE LINE CNT BY 2
UPPRTX   EQU   *
         STH   R1,ZZ          STORE UPDATED LINE COUNT
         MVI   0(R2),C' '     CLEAR ASA CONTROL CHAR
         L     R14,REG14PRT   RELOAD RETURN REG
         BR    R14            RETURN TO CALLER
REG14PRT DS    F              RETURN REG SAVE AREA
         EJECT
*
*   E R R O R   R O U T I N E S
*
FEHLPRM  EQU   *
         MVC   DBER,=CL80'*** - INVALID PARAMETER -'
FEHL0    EQU   *
         LA    R8,16          SET RETURN CODE 16
         ST    R8,RC
FEHL1    EQU   *
         SEQNO DBER,SEQNUMBR
         PUT   DSNL,DBER      WRITE MESSAGE
         B     ENDE
*
FEHLIN   EQU   *
         MVC   DBER,=CL80'*** - INVALID CONTROL STMT. -'
         B     FEHL0
         SPACE
FEHLF4   EQU   *
         B     *(R15)
         B     F4NM           VOLUME NOT MOUNTED
         B     F4NF           INVALID FORM ID
         B     F4IO           I/O ERROR
         B     F4IP           INVALID WORK AREA POINTER
F4NM     EQU   *
         MVC   DBER,=CL80'*** - VOLUME 123456 NOT MOUNTED'
         MVC   DBER+13(6),VOLSER
         B     FEHL0
F4NF     EQU   *
         MVC   DBER,=CL80'*** - NO F4 DSCB FOUND ON VOLUME 123456'
         MVC   DBER+39(6),VOLSER
         B     ABEND02
F4IO     EQU   *
         MVC   DBER,=CL80'*** - VTOC I/O ERROR ON VOLUME 123456'
         MVC   DBER+31(6),VOLSER
         B     FEHL0
F4IP     ABEND 0001,DUMP      INVALID WORK AREA POINTER
RVFI     MVC   DBER,=CL80'*** - INVALID FORM ID VOLUME 123456'
         MVC   DBER+29(6),VOLSER
ABEND02  EQU   *
         SEQNO DBER,SEQNUMBR
         PUT   DSNL,DBER      WRITE MESSAGE
         ABEND 0002,DUMP
RVOE     EQU   *
         MVC   DBER,=CL80'*** - DSCB OUT OF EXTENT.VOLUME 123456'
         MVC   DBER+32(6),VOLSER
         B     ABEND02
*
*  DSORG'S WHICH CANNOT BE MOVED OR COPIED
*
ISAM     EQU   *
         MVC   REASON,=CL20'ISAM NO CPY,NO ALLOC'
         B     DSORGF
BTAM     EQU   *
         MVC   REASON,=CL20'BTAM.NO CPY,NO ALLOC'
         B     DSORGF
UNMOV    EQU   *
         MVC   REASON,=CL20'DATA SET UNMOVABLE'
         B     DSORGF
FEHLDSOR EQU   *
         MVC   REASON,=CL20'DSORG UNKNOWN'
         B     DSORGF
GRAPHICS EQU   *
         MVC   REASON,=CL20'GPS.NO CPY,NO ALLOC'
         B     DSORGF
TCAM     EQU   *
         MVC   REASON,=CL20'TCAM.NO CPY,NO ALLOC'
         B     DSORGF
VSAM     EQU   *
         MVC   REASON,=CL20'VSAM.NO CPY,NO ALLOC'
DSORGF   EQU   *
         LA    R8,4           RETURN CODE 4
         C     R8,RC
         BL    DSORGF2        CURRENT RC GREATER THAN 4
         ST    R8,RC
DSORGF2  EQU   *
         MVC   DBER(4),=CL4'***' MEANS NO COPY, NO ALLOC
         TRT   DBER+4(45),TBL SCAN FOR END OF DSN
         BZ    FEHLLOG
         MVC   1(4,R1),=CL4'***'
         MVC   5(20,R1),REASON
         B     ND6
*
*  F3 DSCB ERROR         LOGICAL ERROR
*
FEHLVTOC EQU   *
         MVC   DBER,=CL80'*** - ERROR READING FORMAT 3 DSCB'
         B     ABEND02
FEHLLOG  EQU   *
         MVC   DBER,=CL80'*** - LOGICAL ERROR'
         B     ABEND02
*
*  DYNAMIC ALLOCATION ERRORS
*
DALERR   EQU   *
         MVC   DBER,=CL80'*** - DYN ALLOC ERROR RC=XX ERRCDE=YYYY'
DALER1   EQU   *
         STC   R15,DOPPLW     CONVERT RET CODE TO HEX
         UNPK  DBER+25(3),DOPPLW(2)
         TR    DBER+25(2),TTRANS-240
         MVI   DBER+27,C' '
         UNPK  DBER+35(5),NS99ERR(3)  CONVERT ERROR CODE TO HEX
         TR    DBER+35(4),TTRANS-240
         MVI   DBER+39,C' '
DALER2   EQU   *
         SEQNO DBER,SEQNUMBR
         PUT   DSNL,DBER       WRITE FIRST LINE OF MESSAGE
         MVC   DBER(10),=C'*** - DSN='  2ND LINE
         MVC   DBER+10(44),DSN  DSNAME
         LA    R8,4           RETURN CODE 4
         C     R8,RC
         BL    *+8
         ST    R8,RC
         B     ND6
DUNERR   EQU   *
         MVC   DBER,=CL80'*** - DYN UNALLOC ERR RC=XX ERRCDE=YYYY'
         B     DALER1
*
*   INVALID ALLOCATION FLAGS IN F1DSCB
*
FEHLSPC  EQU   *
         MVC   DBER,=CL80'*** - INVALID ALLOC FLAG BYTE'
         B     DALER2
*
*   SPECIFIED DSNAME NOT FOUND IN VTOC
*
FEHLNF   EQU   *
         MVC   DBER,=CL80'*** - DATA SET NOT FOUND -'
         B     DALER2
*
*   INVALID OR MISSING DCB ATTRIBUTES
*
NODCB    EQU   *
         MVC   DBER(3),=C'NCP'   MEANS NO COPY
         TRT   DBER+4(45),TBL  SCAN FOR END OF DSNAME
         BZ    FEHLLOG        LOGICAL ERROR
         B     NB9
         EJECT
*********************************************
*********************************************
**                                         **
**        D E F I N I T I O N S            **
**                                         **
*********************************************
*********************************************
         SPACE
*
*   SAVE AREA
*
SAVE     DS    18F
*
*
PDSSCADR DS    F              QX01443 ENTRY POINT ADDR
AKENNZ   DC    A(KENNZ)       QX01443 PARAMETER LIST
ASTORE   DC    A(STORE)
AMEMBER  DC    A(MEMBER)
STORE    DS    4F
RDVTOC   DS    F              QX01442 ENTRY POINT
DSCBPTR  DS    CL5            SAVE AREA FOR DSCB CCHHR
PA1      DC    A(VOLSER)      QX01442 PARAMETER LIST
PA2      DC    A(P2)
PA3      DC    A(P3)
PA4      DC    A(P4)
REG10EDT DS    F              RETURN REG SAVE AREA
RC       DS    F              RETURN CODE
BLOCKADF DS    0F             DADS BLOCKADDR  )
         DS    C                               )
BLOCKAD  DS    CL3                             )
VOLSER   DS    CL6            VOL SER TO BE COPIED
DSN      DS    CL44           CURRENT DSNAME
         DC    C' '           DSNAME DELIMITER BLANK
PARMFLD  DS    0CL15          PARM FIELD WORK AREA
VOLSERP  DS    CL6            VOLUME SERIAL NO, PARM VALUE
PSLASH   DS    C              SLASH IF UNITNAME SPECIFIED
UNITNAMP DS    CL8            UNITNAME, PARM VALUE
TRKCYLP  DS    H              TRACKS/CYLINDER OF VOL SER
ZZ       DS    H              LINE COUNT
*
*   DATA SET ATTRIBUTES
*
SPACE    DS    F              PRIMARY ALLOCATION
         DS    0F         )
ALLOC    DS    C          )  FORMAT OF ALLOCATION
SECAL    DS    CL3        )  SECONDARY ALLOCATION
DIR      DS    F              NUMBER OF DIRECTORY BLOCKS
DSORG    DS    CL2            DATA SET ORGANIZATION
RECFM    DS    C              RECORD FORMAT
LRECL    DS    H              LOGICAL RECORD LENGTH
BLKL     DS    H              BLOCK SIZE
KEYL     DS    C              KEY LENGTH
RKP      DS    H              RELATIVE KEY POSITION
OPTCD    DS    C              OPTION CODE
*
*
DSCBBER  DS    CL140          DSCB WORK AREA
SYSINSW  DS    C    SYSIN SWITCH
*   XXXX ....     RESERVED
*   .... 1...     MEMBER INDICATOR
*   .... .1..     ENTIRE VOLUME PROCESSING
*   .... ..1.     SYSIN DD STMT PRESENT
*   .... ...1     INITIAL GET INDICATOR
*
KENNZ    DS    C              QX01443 PARAM 1
MEMBER   DS    CL8            QX01443 PARAM 3
P2       DS    CL5            QX01442 WORK AREA
P3       DS    CL140          DSCB WORK AREA
P4       DS    CL5            READ VTOC WORK AREA
TRKCYL   DS    H              NUMBER OF TRACKS PER CYLINDER
         DS    0F             )
         DS    H              )
EXTFLG   DS    C              )  EXTENT DESCRIPTOR FLAGS
EXTM     DS    C              )  EXTENT DESCRIPTOR  EXTENT COUNT
EXTLOW   DS    CL4         )  EXTENT DESCRIPTOR  LOWER LIMIT  CCHH
EXTHI    DS    CL4            )  EXTENT DESCRIPTOR UPPER LIMIT  CCHH
*
*  DYNAMIC ALLOCATION REQUEST BLOCK
*
         DS    0F             FULLWORD ALIGNMENT
NS99RBPT DC    X'80'          SVC99 RB POINTER
         DC    AL3(NS99RB)
         SPACE
*   SVC99 REQUEST BLOCK
         SPACE
NS99RB   DS    0F
         DC    X'14'          LENGTH OF REQUEST BLOCK IS 20
NS99VERB DS    C              SVC99 VERB CODE
NS99FLG1 DC    H'0'           SVC99 FLAGS 1
NS99ERR  DC    H'0'           SVC99 ERROR CODE
NS99INF  DC    H'0'           SVC99 INFO CODE
NS99TXTP DS    F              SVC99 POINTER TO TEXT POINTER LIST
         DC    F'0'           SVC99 BINARY ZEROS
NS99FLG2 DC    F'0'           SVC99 FLAGS 2
*
*  DYNAMIC ALLOCATION TEXT UNIT POINTERS
*
NS99TUPL DC    A(PDSDDN)      DDNAME
         DC    A(PDSDSN)      DSNAME
         DC    A(PDSST)       STATUS
         DC    A(PDSDSP)      DISPOSITION
         DC    A(PDSVOL)      VOLUME SERIAL
         DC    X'80'          INDICATES LAST ENTRY
         DC    AL3(PDSUNT)    UNIT
*
*  DYNAMIC UNALLOCATION TEXT UNIT POINTER
*
         DS    0F
NS99TUPU DC    X'80'          LAST ENTRY
         DC    AL3(PDSDDN)    DDNAME
*
*   DYNAMIC ALLOCATION  TEXT UNITS
*
PDSDDN   DC    H'1',H'1',H'6',C'PDSDCB'  DDNAME = PDSDCB
         SPACE
PDSDSN   DC    H'2',H'1'      DSNAME
PDSDSL   DS    H              LENGTH OF DSN
PDSDS    DS    CL44           DSN
         DC    C' '           BLANK DELIMITER
         SPACE
PDSST    DC    H'4',H'1',H'1',X'08'  STATUS = SHR
         SPACE
PDSDSP   DC    H'5',H'1',H'1',X'08'  DISPOSITION = KEEP
         SPACE
PDSVOL   DC    H'16',H'1',H'6'   VOL SER
PDSSER   DS    CL6
         SPACE
PDSUNT   DC    H'21',H'1'                UNIT NAME
PDSUNTL  DC    H'5'
PDSUNTU  DC    CL8'SYSDA'     SYSDA IS DEFAULT
*
*
*   OBTAIN PARAMETER LIST
*
SEARCHL  CAMLST SEARCH,F4DSCB,VOLSER,P3
F4DSCB   DC    44X'04'
SEARCHDS CAMLST SEARCH,DSN,VOLSER,DSCBBER
*
*
MOVE1    MVC   0(0,R7),0(R1)
MOVE2    MVC   5(0,R7),0(R2)
MOVE3    MVC   2(0,R2),1(R2)
MOVE4    MVC   PARMFLD(0),2(R6)
*
EASA     DC    C'0'           ASA CONTROL CHAR
EBER     DS    CL80           SYSIN WORK AREA
TXTBLANK DC    C' '           TEXT UNIT AREA BLANK BYTE
TXTAREA  DS    CL190          TEXT UNIT AREA
DASA     EQU   *              ASA CONTROL CHAR
DBLANK   DC    C' '           DSNL AREA BLANK BYTE
DBER     DS    CL80           DSNL OUTPUT AREA
ATRASA   EQU   *              ASA CONTROL CHAR
ATRBLANK DC    C' '           ATTRIBUTE INFO AREA BLANK BYTE
ATRBER   DS    0CL160
ATRDATA  DS    CL80           ATTR INFO OUTPUT AREA
ATROVL   DS    CL80           ATTR INFO OVERFLOW AREA
ATRADDR  DS    F              START ADDR OF LAST OR CURRENT ATTR PARM
DIRBLK   DS    CL256          DIRECTORY BLOCK WORK AREA
         DS    0F             )  FULLWORD BOUNDARY
EXPDAT   DC    X'00'          )
EXPDT    DS    CL3            )  EXPIRATION DATE (BINARY)  YDD
DOPPLW   DS    D              DOUBLE WORD  USED FOR CONVERSIONS
UNPACK   DS    CL16           UNPACK FIELD USED FOR CONVERSIONS
EXPDTC   DS    CL5            EXPIRATION DATE CHAR FORM
DDNAME   DS    CL8            DDNAME WORK AREA
         DC    C' '           DDNAME BLANK DELIMITER
REASON   DS    CL20           MESSAGE WORK AREA
SEQNUMBR DS    CL5            DSNL SEQUENCE NUMBER
*
*    T A B L E S
*
         SPACE
*   TEST TABLE 'BLANK'
         SPACE
TBL      DC    64X'00'
         DC    X'40'
         DC    191X'00'
         SPACE
*   TEST TABLE 'NONBLANK'
         SPACE
TNOBL    DC    64X'FF'
         DC    X'00'
         DC    191X'FF'
         SPACE
*   TEST TABLE 'NONZERO'
         SPACE
TNOZERO  DC    240X'FF'
         DC    X'00'
         DC    15X'FF'
         SPACE
*   HEX TRANSLATE TABLE
         SPACE
TTRANS   DC    X'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'
         SPACE
*   DSORG TABLE
         SPACE
DSORGTAB DC    C'PODAPS'
*
*  D A T A   C O N T R O L   B L O C K S
*
IN       DCB   DDNAME=SYSIN,DSORG=PS,MACRF=GM,EODAD=ENDIN,             *
               RECFM=F,BLKSIZE=80
DSNL     DCB   DDNAME=DSNL,DSORG=PS,MACRF=PM,                          *
               RECFM=F,LRECL=80,BLKSIZE=80
DADS     DCB   BLKSIZE=190,DDNAME=DADS,DSORG=PS,MACRF=WL,RECFM=F
ATRLST   DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=PM,RECFM=FA,             *
               BLKSIZE=81,LRECL=81
PDSDCB   DCB   DDNAME=PDSDCB,MACRF=GM,DSORG=PS,RECFM=F,                *
               BLKSIZE=256,LRECL=256,EODAD=NA8
DSNLL    DCB   DDNAME=DSNL,MACRF=GM,DSORG=PS,EODAD=ENDEZ
*
*   REGISTER DEFINITIONS
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         LTORG
*
*   DSCB DEFINITIONS
*
         IECSDSL1 (1)    FORMAT 1 DSCB
         IECSDSL1 (3)         FORMAT 3 DSCB
         IECSDSL1 (4)         FORMAT 4 DSCB
*
*   DYNAMIC ALLOCATION DEFINITIONS
*
         IEFZB4D0             DYNAMIC ALLOC  DUMMY SECTIONS
         IEFZB4D2             DYNAMIC ALLOC  MNEMONICS
         END   X001440
1/* AN FOLGENDEN TAGEN WURDE DAS PROGRAMM GETESTET */
 /* NEUERSTELLUNG   12. JUL 1976   LEVEL    */
 /* NEUERSTELLUNG   10. AUG 1976            */
 /* NEUERSTELLUNG   13. AUG 1976            */
 /* NEUERSTELLUNG   13. SEP 1976            */
 /* NEUERSTELLUNG   15. SEP 1976            */
 /* NEUERSTELLUNG   20. SEP 1976            */
 /* NEUERSTELLUNG    8. MAR 1977            */
