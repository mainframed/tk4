PROC 0
/**********************************************************************/
/*     H     H   EEEEEEE    AAAAA    DDDDDD    EEEEEEE   RRRRRR       */
/*     H     H   E         A     A   D     D   E         R     R      */
/*     HHHHHHH   EEEEEEE   AAAAAAA   D     D   EEEEEEE   RRRRRR       */
/*     H     H   E         A     A   D     D   E         R   R        */
/*     H     H   EEEEEEE   A     A   DDDDDD    EEEEEEE   R     R      */
/**********************************************************************/
/*  CLIST NAME: VTAM31            REL/DATE:2.1/08.15.79               */
/*                                                                    */
/*  DOC: THIS IS THE FUNCTION 1 CLIST FOR VTAM 3 ACF/VTAM THAT        */
/*       IS CALLED BY VTAMDIAG CLIST. IT DOES AN ANALYSIS ON THE      */
/*       VARIOUS BUFFER POOLS AND LISTS AND EQUATES THE POOL          */
/*       EXTENSION BLOCKS.                                            */
/*  SYMBOLS EQUATED: IOPXB# LPPXB# CRPLPXB# UECBPXB# ETC.             */
/*  SYMBOLS FOUND: NONE                                               */
/*  RETURN: TO VTAMDIAG                                               */
/*  DEPENDENCIES: 1) THIS CLISTS REQUIRES THAT TSO COMMAND            */
/*                   CLEAR BE INSTALLED IN YOUR ENVIRONMENT.        */
/*  USE: ONCE THE USER STARTS EXECUTION OF THIS CLIST, HE WILL        */
/*       BE GIVEN THE OPTION TO RUN AN ANALYSIS ON ALL OF THE         */
/*       BUFFER POOLS OR ON A SPECIFIC ONE. THE ANALYSIS WILL         */
/*       SHOW BUFFER THRESHOLD'S, ALLOCATION DATA, EXPANSION          */
/*       DATA, ETC                                                    */
/*SJM******************************************************************/
FUNC3I1: +
CLEAR
NOTE 'START OF BUFFER ANALYSIS' SPACE PAGE
WRITE ENTER A/ALL S/SPECIFIC BUFF ANALYSIS  E/END
SET &ANS=''
READ &ANS
IF &ANS=&STR(S) THEN DO
P1: WRITE ENTER NUMBER CORRESPONDING TO BUFFER TYPE EG. 1  2  ETC
 WRITE WHERE 1=AP,2=SP,3=SF,4=UECB,5=CRPL,6=LF,7=NP,8=WP,9=LP,10=PP,-
11=IO
 READ &ANS1
 IF &DATATYPE(&ANS1)^=NUM × &ANS1>11 × &ANS1<1 THEN DO
   WRITE INVALID REPLY RE-ENTER
   GOTO P1
   END
 SET &TYPE=&ANS1
 GOTO SETUP
 END
IF &ANS=&STR(E) THEN DO
  GOTO FUNC1END
  END
IF &ANS^=&STR(A) && &ANS^=&STR(S) && &ANS^=&STR(E) THEN DO
  WRITE INVALID REPLY  RE-ENTER
  GOTO FUNC3I1
  END
  SET &TYPE=11
SETUP:  IF &TYPE=11 THEN DO
  EQ BPCB BPDTY+D8%
  EQ FIXFLAG BPDTY+D4  LE(2)
  SET &BTYPE=&STR(I O)
  SET &BUFTYPE=&STR(IO)
  GOTO CALC
  END
  IF &TYPE=10 THEN DO
  EQ BPCB BPDTY+E8%
  EQ FIXFLAG BPDTY+E4   LE(2)
  SET &BTYPE=&STR(P P)
  SET &BUFTYPE=&STR(PP)
  GOTO CALC
  END
  IF &TYPE=09 THEN DO
  EQ BPCB BPDTY+F8%
  EQ FIXFLAG BPDTY+F4  LE(2)
  SET &BTYPE=&STR(L P)
  SET &BUFTYPE=&STR(LP)
  GOTO CALC
  END
  IF &TYPE=08 THEN DO
  EQ BPCB BPDTY+108%
  EQ FIXFLAG BPDTY+104  LE(2)
  SET &BTYPE=&STR(W P)
  SET &BUFTYPE=&STR(WP)
  GOTO CALC
  END
  IF &TYPE=07 THEN DO
  EQ BPCB BPDTY+118%
  EQ FIXFLAG BPDTY+114  LE(2)
  SET &BTYPE=&STR(N P)
  SET &BUFTYPE=&STR(NP)
  GOTO CALC
  END
  IF &TYPE=06 THEN DO
  EQ BPCB BPDTY+128%
  EQ FIXFLAG BPDTY+124  LE(2)
  SET &BTYPE=&STR(L F)
  SET &BUFTYPE=&STR(LF)
  GOTO CALC
  END
  IF &TYPE=05 THEN DO
  EQ BPCB BPDTY+138%
  EQ FIXFLAG BPDTY+134   LE(2)
  SET &BTYPE=&STR(C R P L)
  SET &BUFTYPE=&STR(CRPL)
  GOTO CALC
  END
  IF &TYPE=04 THEN DO
  EQ BPCB BPDTY+148%
  EQ FIXFLAG BPDTY+144   LE(2)
  SET &BTYPE=&STR(U E C B)
  SET &BUFTYPE=&STR(UECB)
  GOTO CALC
  END
  IF &TYPE=03 THEN DO
  EQ BPCB BPDTY+158%
  EQ FIXFLAG BPDTY+154  LE(2)
  SET &BTYPE=&STR(S F)
  SET &BUFTYPE=&STR(SF)
  GOTO CALC
  END
  IF &TYPE=02 THEN DO
  EQ BPCB BPDTY+168%
  EQ FIXFLAG BPDTY+164   LE(2)
  SET &BTYPE=&STR(S P)
  SET &BUFTYPE=&STR(SP)
  GOTO CALC
  END
  IF &TYPE=01 THEN DO
  EQ BPCB BPDTY+178%
  EQ FIXFLAG BPDTY+174    LE(2)
  SET &BTYPE=&STR(A P)
  SET &BUFTYPE=&STR(AP)
  GOTO CALC
  END
ELSE DO
WRITE DEPRESS ENTER WHEN READY TO CONTINUE
READ
  GOTO FUNC3I1
  END
CALC: WRITE
EQU START BPCB+10 REMARK('&BUFTYPE.START....   BUFFER STARTING ADDRESS')
EVAL BPCB+28 LE(2)              /* GET SIZE BUFF */
SET &BUFSIZE=&LASTCC            /* SIZE BUFFS  */
EVAL BPCB+2A LE(2)              /* GET TOTAL NUM BUFFS ALLOCATED */
SET &BUFTNUM=&LASTCC            /* TOTAL BUFFS ALLOCATED */
EVAL BPCB+2C LE(2)              /* GET THRESHOLD BUFFS   */
SET &BUFTHRES=&LASTCC           /* THRESHOLD BUFFS    */
EVAL BPCB+46 LE(2)              /* GET NUM AVAIL BUFFS */
SET &BUFAVAIL=&LASTCC           /* AVAILABLE BUFFS */
EVAL BPCB+40 LE(1)              /* GET BUF SLOWDOWN FLAGS */
SET &BUFSLOW=&LASTCC            /* SLOWDOWN BYTE */
/****************NEW FOR SNA3   8/4/78 *******/
EVAL BPCB+80 LE(2)              /* GET EXPANSION THRESHOLD */
SET &BUFXPAN=&LASTCC
EVAL BPCB+82 LE(2)              /* GET CONTRACTION THRESHOLD */
SET &BUFCONTR=&LASTCC
EVAL BPCB+84 LE(4)              /* GET # TIMES EXPANDED */
SET &BUFNXPAN=&LASTCC
EVAL BPCB+88 LE(4)              /* GET MAX NUM BUFFS */
SET &BUFMBUFF=&LASTCC
EVAL BPCB+8E LE(2)              /* GET XPAN INCREMENT (BUFFS) */
SET &BUFXINCR=&LASTCC
EVAL BPCB+BC LE(4)              /* GET XPAN SIZE (BYTES) */
SET &BUFXLEN=&LASTCC
/***************END SNA3 CODE*********/
/* BEGIN CHECK BUFFER STATUS  FIXED OR PAGEABLE  */
COMPARE VALUE(X'FFFF') WITH(ADDR(FIXFLAG)) MASK(X'0080') LE(2)
IF &LASTCC=0 THEN SET &STATE=&STR(FIXED APPL)
ELSE DO
  COMPARE VALUE(X'FFFF') WITH(ADDR(FIXFLAG)) MASK(X'2000') LE(2)
  IF &LASTCC=0 THEN SET &STATE=&STR(FIXED VTAM)
  ELSE SET &STATE=&STR(PAGEABLE)
  END
NOTE '*********     &BTYPE BUFFER ANALYSIS ************' SPACE
NOTE 'BUFSIZE = &BUFSIZE  ALLOCATED = &BUFTNUM  THRESHOLD = &BUFTHRES -
 AVAILABLE = &BUFAVAIL'
IF &BUFNXPAN>0 × &BUFSLOW>0 THEN DO
NOTE 'EXPANSION THRESHOLD = &BUFXPAN  CONTRACTION THRESHOLD = &BUFCONTR'
NOTE '# OF TIMES XPANDED  = &BUFNXPAN MAX NUM OF BUFFS      = &BUFMBUFF'
NOTE 'XPANSION INCREMENT  = &BUFXINCR XPANSION SIZE (BYTES) = &BUFXLEN '
END
IF &BUFSLOW>0 THEN NOTE '&BTYPE BUFFERS ARE IN  SSLLOOWWDDOOWWNN    -
 SLOWDOWN STATUS  ??????'
IF &BUFTHRES>&BUFAVAIL × &BUFAVAIL<=0 THEN DO/*PAST THE THRESHOLD?? */
  NOTE 'NUMBER OF &BTYPE BUFFS AVAILABLE ARE BELOW THRESHOLD OR ZERO -
   ??????'
  NOTE ' '
  END
  ELSE DO
  SET &PCENT=(&BUFAVAIL*100)/&BUFTNUM
SET &PCENT=100-&PCENT
NOTE 'NUMBER OF &BTYPE BUFFERS AVAILABLE IS   O. K.   % USED = &PCENT  '
  NOTE ' '
  END
/********** CODE ADDED TO LIST BUFFER EXTENSION BLOCKS ***************/
SET &NO = 1
EVAL BPCB+7D L(3)
IF &LASTCC = 0 THEN +
   DO
      NOTE ' &BUFTYPE BUFFER HAS NO EXTENSIONS '
      NOTE SPACE(3)
      GOTO NEXT
   END
EVAL BPCB+BC
SET &BPCBEXLN = &LASTCC
EQU &BUFTYPE.PXB&NO BPCB+7C% L(&BPCBEXLN)
NOTE '*************************************************************'
NOTE '*    THE FOLLOWING ARE A LIST OF &BUFTYPE POOL EXTENSION BLOCK'
NOTE '*        ADDRESSES AND HAVE BEEN EQUATED AS &BUFTYPE.PXB#     '
NOTE '*  THE LENGTH ATTRIBUTE IS THE LENGTH OF THE EXTENSION POOL  '
NOTE '*************************************************************'
PXBLOOP: +
EVAL &BUFTYPE.PXB&STR(&NO)+5 L(3)
IF &LASTCC NE 0 THEN +
   DO
      EQU &BUFTYPE.PXB&EVAL(&NO+1) &BUFTYPE.PXB&STR(&NO)+4% L(&BPCBEXLN)
      SET &NO = &NO+1
      GOTO PXBLOOP
   END
LSYM &BUFTYPE.PXB1:&BUFTYPE.PXB999
NOTE ' THAT IS ALL OF THE &BUFTYPE BUFFER EXTENSIONS ' SPACE
/************ END CODE TO LIST BUFFER EXTENSION BLOCKS ***************/
NEXT: +
SET &TYPE=&TYPE-1
IF &ANS=&STR(S) THEN DO
WRITE DEPRESS ENTER TO CONTINUE
READ
 GOTO FUNC3I1
 END
DROPSYM (BPCB START FIXFLAG)
GOTO SETUP
FUNC1END: NOTE ' VTAM31 COMPLETED.'
