 /* SMF  TAGESLISTE DER TESTARBEITEN (STATUS 1 + 2)
    DAS  PROGRAM VERARBEITET JOBVERRECHNUNGS-SAETZE
    DIE  SORTIERFOLGE MUSS
                         1. AUFG / PROJ. (STELLEN 1 BIS 5 PROGR. NAME)
                         2. JOBNAME
                           SEIN.                                      */
 TAG:
         PROC OPTIONS (MAIN);
         ON ERROR CALL PLIDUMP;
0        DCL   SMF456 FILE RECORD INPUT;
         DCL   PRINT  FILE RECORD OUTPUT;
         DCL DRUCK3 FILE RECORD OUTPUT;
         ON ENDFILE (SMF456) GO TO EOF;
         DCL UPREISJOB FIXED (7) INIT (0);
         DCL UPREISAP FIXED (7) INIT (0);
         DCL UPREISG  FIXED (7) INIT (0);
         DCL UPREISE3 FIXED (7) INIT (0);
         DCL UPREISE4 FIXED (7) INIT (0);
         DCL URUNJOB BIN FIXED (31) INIT (0);
         DCL URUNAP BIN FIXED (31) INIT (0);
         DCL URUNG  BIN FIXED (31) INIT (0);
         DCL URUNE3 BIN FIXED (31) INIT (0);
         DCL URUNE4 BIN FIXED (31) INIT (0);
         DCL UTTROCE3 BIN FIXED (31) INIT (0);
         DCL UTPROCE3 BIN FIXED (31) INIT (0);
         DCL UTPROCE4 BIN FIXED (31) INIT (0);
         DCL UCCPREIS FIXED (7) INIT (0);
         DCL NONNUM ENTRY (,BIN FIXED(31)) RETURNS (BIT(8));
         DCL LAENGE BIN FIXED (31) INIT (4);
         DCL PICAP PIC '9999' DEF EBER.AP POS (2);
         DCL UST PIC '99' STATIC;
         DCL UMIN PIC '99' STATIC;
         DCL CSTATUS CHAR (1) BASED (PSTATUS);
         PSTATUS = ADDR (EBER.STATUS);
         DCL STA BIT (8) STATIC INIT ((8)'0'B);
         DCL FDST CHAR (126) STATIC INIT ('    DIESE ZEICHEN (HEX) WAREN
 BEI VORIGEM SATZ IN 3. STELLE KONTONR EINGEGEBEN. ES WURDE X''F3''
 ANGENOMMEN');
         DCL ZZ3 BIN FIXED (15) STATIC INIT (100);
         DCL SZ BIN FIXED (15) INIT (0);
         DCL STZ CHAR (1) STATIC INIT (' ');
-        DCL   UEBER CHAR (126) STATIC INIT ('1KTO   AU/PR   PROGRAMMIER
 ER   JOBNAME    DATUM    START   CORE   CCODE   RUNTIME  TPROC   CPU/WA
 IT    IDENT. CODE       PREIS');
         DCL 1 DST  STATIC,
              2 VSZ     CHAR (1),
              2 KTO     CHAR (2),
              2 STATUS  CHAR (1),
              2 F1      CHAR (3)    INIT (' '),
              2 AP      CHAR (8),
              2 PROGR   CHAR (16),
              2 JOBNAME CHAR (11),
              2 TAG     PIC  'ZZ.ZZZ',
              2 SSTD    PIC  'ZZZZ9',
              2 SPKT    CHAR (1),
              2 SMIN    PIC  '99',
              2 COREDST PIC  '(7)Z',
              2 F2      CHAR (3)    INIT (' '),
              2 CC (4)  CHAR (1),
              2 GSTD    PIC  'ZZZZZ9',
              2 GPKT    CHAR (1),
              2 GMIN    PIC  '99',
              2 TSTD    PIC  'ZZZZ9',
              2 TPKT    CHAR (1),
              2 TMIN    PIC  '99',
              2 VARBER  CHAR (15),
              2 IDTAG   PIC  'ZZZZZ9',
              2 IDC (8) CHAR (1),
              2 PREIS PIC '(6)Z.ZZZ';
         DCL LDST CHAR  (126) BASED (PDST);
         PDST = ADDR (DST);
-        DCL 1 VARKO    STATIC,
              2 F1      CHAR (3)    INIT (' '),
              2 CPUVH   PIC  'Z99',
              2 F2      CHAR (3)    INIT (' : '),
              2 WAITVH  PIC  'Z99',
              2 F3      CHAR (3)    INIT (' ');
0        DCL CVARKO CHAR (15)     BASED (PVARKO);
         PVARKO = ADDR (VARKO);
-        DCL ZZEIT BIN FIXED (31) STATIC;
         DCL ZZZ (8) BIT (4) BASED (PZZZ);
         PZZZ = ADDR (ZZEIT);
-        DCL 1 SU1 STATIC,                   /* SUMMENSTRUKTUR FUER   */
              2 SUSTD   FIXED (9) INIT (0),  /* SUMMEN EINZELZEILE    */
              2 SUMIN   FIXED (5) INIT (0),
              2 SUGES   FIXED BIN (31) INIT (0),
              2 SUCPU   FIXED BIN (31) INIT (0);
0        DCL 1 SU2 STATIC LIKE SU1;          /* SUMMEN JOBZEILE       */
         DCL 1 SU3 STATIC LIKE SU1;          /* SUMMEN AUFG/PROJ.     */
0        SU2 = SU1;
         SU3 = SU1;
0        DCL ZZ FIXED BIN (15) STATIC INIT (100); /* ZEILENZAEHLER    */
0        DCL ZCORE BIN FIXED (31);          /* ZWISCHEN-VOLL WORT     */
         DCL 1 CZCORE BASED (PZCO),
              2 XYZ  CHAR (1),
              2 ABC CHAR (3);
         PZCO = ADDR (ZCORE);
0        DCL REFE FIXED (15,5);    /* ZWISCHEN RECHENFELD             */
0        DCL 1 SU4 STATIC LIKE SU1;          /* ENDSUMMENSTRUKTUR     */
         SU4 = SU1;                          /* ENDSUMMENSTRUKTUR = 0 */
-        DCL 1 EBER STATIC UNALIGNED, /* EINGABEBEREICH               */
              2 SA      CHAR (5),     /* SATZART                      */
              2 KTO     CHAR (2),     /* KONTO                        */
              2 STATUS  CHAR (1),     /*                              */
              2 RES1    CHAR (6),
              2 JOBNAME CHAR (8),     /*                              */
              2 AP      CHAR (5),     /* AUFGABE / PROJEKT NR         */
              2 PROGR   CHAR (11),    /* PROGRAMMER NAME              */
              2 FE0     CHAR (8),
              2 CPUTIME CHAR (3),
              2 FE1     CHAR (80),
              2 RUNTIME BIN FIXED (31),
              2 CORE    BIN FIXED (15),
              2 FE2     CHAR (44),
              2 PREIS FIXED (15,2),
              2 COC (4) BIT (4),      /* COMPL. CODE                  */
              2 EABEND  CHAR (1),
              2 RUNGES  BIN FIXED (31),
              2 TAG     FIXED (7),
              2 TIME (8) BIT (4),
              2 FE3     CHAR (10);
-        DCL HEXTAB (0:15) CHAR (1) STATIC INIT /* HEXTABELLE         */
         ('0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F
 ');
-        DCL IHEX  BIN FIXED (15) STATIC INIT (0); /* INDEX           */
0        DCL 1 STRHEX BASED (P1),  /* UEBERLAGERUNG VON IHEX          */
              2 FST1  BIT  (12),
              2 HEX   BIT  (4);
0        P1 = ADDR (IHEX);
0        DCL  JOBZ BIN FIXED (15) STATIC INIT (0);  /* ZAEHLER        */
0        DCL  AUFZ BIN FIXED (15) STATIC INIT (0);  /* ZAEHLER        */
-        DCL 1 SVGL,                     /* VERGLEICHSFELDER          */
              2 AP      CHAR (5),        /* VERGLEICHSFELDER          */
              2 JOBNAME CHAR (8);        /* VERGLEICHSFELDER          */
0        DCL VGL CHAR (13) BASED (P2);   /* VERGLEICHSFELDER          */
         P2 = ADDR (SVGL);               /* VERGLEICHSFELDER          */
-        DCL 1 SZVGL LIKE  SVGL;         /* VERGLEICHSFELDER          */
         DCL ZVGL CHAR (13) BASED (P3);  /* VERGLEICHSFELDER          */
         P3 = ADDR (SZVGL);              /* VERGLEICHSFELDER          */
-        DCL AUS  BIT (8) STATIC INIT ((8)'0'B);  /* SCHALTER         */
         DCL ENDE BIT (8) STATIC INIT ((8)'0'B);  /* SCHALTER         */
         DCL GR1  BIT (8) STATIC INIT ((8)'0'B);  /* SCHALTER         */
         DCL GR2  BIT (8) STATIC INIT ((8)'0'B);  /* SCHALTER         */
         DCL ANF  BIT (8) STATIC INIT ((8)'1'B);  /* SCHALTER         */
         DCL EIN  BIT (8) STATIC INIT ((8)'1'B);  /* SCHALTER         */
         DCL   ZTAB  CHAR (10) INIT ('0123456789') ;
-        OPEN  FILE (SMF456),
              FILE (DRUCK3),
               FILE (PRINT);
-LES:    READ  FILE (SMF456) INTO (EBER);
         IF CSTATUS > '4' THEN DO;
 FSTA:                    STA = UNSPEC (EBER.STATUS);
                          CSTATUS = '3';
                          HEX = SUBSTR (STA,1,4);
                          SUBSTR(FDST,2,1) = HEXTAB (IHEX);
                          HEX = SUBSTR (STA,5,4);
                          SUBSTR(FDST,3,1) = HEXTAB (IHEX);
                          STA = EIN;
                          GO TO WEITER;
                          END;
         IF CSTATUS < '1' THEN GO TO FSTA;
 WEITER:
         IF EBER.STATUS >'2'THEN GO TO EINZEL;
         SZ = SZ + 1;
0        IF ANF THEN DO;                 /* WIRD NUR 1 * DURCHLAUFEN  */
                ANF = AUS;
 NSV:           SZVGL = EBER, BY NAME;
                END;
0        SVGL = EBER, BY NAME;           /* VERGLEICHSFELD BESCHICKEN */
         IF VGL = ZVGL THEN GO TO EINZEL; /*VERGLEICH ANF GRUPPENW.   */
0        IF SVGL.AP      = SZVGL.AP      THEN GO TO GRW;
                            ELSE GR2 = EIN;
         GO TO GRW;
-EINZEL: DST = EBER, BY NAME;   /* EINZELVERARBEITUNG                 */
         DO I = 1 TO 4;
         IF COC (I) = '0000'B THEN CC (I) = ' ';
                              ELSE GO TO JWD;
         END;
         GO TO JWD1;
 JWD:
         IF EBER.STATUS > '2' THEN UCCPREIS = UCCPREIS + EBER.PREIS;
-        DO I = 1 TO 4;         /* UMSCHL COMP  CODE IN DRUCKBARE     */
         HEX = COC (I);     /* ZEICHEN                                */
         CC(I)= HEXTAB (IHEX);
         END;
 JWD1:
         DST.TPKT = '.';
         ZZEIT = EBER.RUNGES;
         ZCORE = DIVIDE(ZZEIT,360000,31,0);
         DST.GSTD = ZCORE;
         ZCORE = MOD (ZZEIT,360000);
         ZCORE = ZCORE + 3000;
         ZCORE = DIVIDE (ZCORE,6000,31,0);
         DST.GMIN = ZCORE;
         DST.GPKT = '.';
         ZZZ = EBER.TIME;
         ZCORE = DIVIDE (ZZEIT,360000,31,0);
         DST.SSTD = ZCORE;
         DST.SPKT = '.';
         ZCORE = MOD (ZZEIT,360000);
         ZCORE = ZCORE + 3000;
         ZCORE = DIVIDE(ZCORE,6000,31,0);
         DST.SMIN = ZCORE;
-        ZCORE = EBER.CORE;     /* CORE NACH DRUCKSTRUKTUR            */
         COREDST = ZCORE;
         SU1.SUGES = EBER.RUNTIME; /* UMRECHNEN DER RUNTIME VON       */
         ZCORE = 0;
         ABC = EBER.CPUTIME;
         SU1.SUCPU = ZCORE;        /* HUNDERTSTEL SEKUNDEN  NACH      */
         ZCORE = DIVIDE(SU1.SUGES,360000,31,0); /* SUNDEN UND         */
         SU1.SUSTD = ZCORE;                     /* MINUTEN            */
         ZCORE = MOD(SU1.SUGES,360000);         /*                    */
         ZCORE = ZCORE + 3000;
         ZCORE = DIVIDE(ZCORE,6000,31,0);
         DST.TMIN = ZCORE;     /*                                     */
         DST.TSTD = SU1.SUSTD; /*                                     */
         ZCORE = SU1.SUCPU * 100;               /* ERRECHNEN DES      */
0        IF ZCORE = 0 THEN DO;                  /* ZERODIVIDE VERHIN- */
                      CPUVH = 0; WAITVH = 0; GO TO EV1; /* DERN       */
                      END;
         REFE  = DIVIDE(ZCORE,SU1.SUGES,15,5);  /* % SATZES DER CPU   */
         REFE  = REFE + 0.5;                    /* ZEIT MIT RUNDEN    */
         CPUVH = REFE;                          /*                    */
         WAITVH = 100 - CPUVH;                  /* % WAIT ANTEIL      */
0EV1:    VARBER = CVARKO;  /* LAUFZEIT + CPU / WIT NACH DRUCKSTRUKTUR */
         DST.IDTAG = EBER.TAG;
0        DO I = 1 TO 8;                         /* JOB INIT TIME      */
         HEX  = TIME (I);                       /* IN HEX NACH DRUCK- */
         IDC (I) = HEXTAB (IHEX);               /* STRUCKTUR          */
         END;
         IF EBER.STATUS >'2'THEN GO TO DREI;
         UPREISJOB = UPREISJOB + EBER.PREIS;
         ZZEIT = EBER.RUNGES;
         URUNJOB = URUNJOB + ZZEIT;
-        ZZ = ZZ + 1;           /* ROUTINE FUER STEUERUNG DER         */
0        IF ZZ > 55 THEN DO;    /* UEBERSCHRIFT UND BLATT-VORSCHUB    */
                    ZZ =1;
                    DST.VSZ = '-';
                    WRITE FILE (PRINT) FROM (UEBER);
                    END;
                    ELSE DST.VSZ = STZ;
0        WRITE FILE (PRINT) FROM (DST);
         IF STA THEN DO;
                STA = AUS;
                WRITE FILE (PRINT)  FROM (FDST);
                END;
         STZ = ' ';
         JOBZ = JOBZ + 1;
         AUFZ = AUFZ + 1;
         SU2  = SU2 + SU1;
         SU1 = '';
         GO TO LES;
 DREI:   ZZ3 = ZZ3 + 1;
         IF EBER.STATUS ='3'THEN DO;
         I2 = VERIFY(SUBSTR(EBER.AP,2,4),ZTAB) ;
         IF    I2 ^= 0 THEN;
                                 ELSE GO TO A1;
         UPREISE3 = UPREISE3 + EBER.PREIS;
         ZZEIT = EBER.RUNGES;
         URUNE3 = URUNE3 + ZZEIT;
         ZZEIT = EBER.RUNTIME;
         UTPROCE3 = UTPROCE3 + ZZEIT;
         GO TO A2;
                                 END;
 A1:     UPREISE4 = UPREISE4 + EBER.PREIS;
         ZZEIT = EBER.RUNGES;
         URUNE4 = URUNE4 + ZZEIT;
         ZZEIT = EBER.RUNTIME;
         UTPROCE4 = UTPROCE4 + ZZEIT;
 A2:
         IF ZZ3 > 55 THEN DO;
                     ZZ3 = 1;
                     DST.VSZ = '-';
                     WRITE FILE (DRUCK3) FROM (UEBER);
                     END;
                     ELSE DST.VSZ = ' ';
         WRITE FILE (DRUCK3) FROM (DST);
         IF STA THEN DO;
                STA = AUS;
                WRITE FILE (DRUCK3) FROM (FDST);
                END;
         SU1 = '';
         GO TO LES;
-GRW:    IF JOBZ = 1 THEN GO TO GRWB;  /* GRUPPENWECHSEL PRO JOB      */
        LDST = '';
         DST.JOBNAME='JOBSUMME';
         ZCORE = DIVIDE(SU2.SUGES,360000,31,0); /* AUFBEREITEN DER    */
         DST.TSTD = ZCORE;
         ZCORE = MOD(SU2.SUGES,360000);         /* SIEHE AUCH         */
         ZCORE = ZCORE + 3000;
         ZCORE = DIVIDE(ZCORE,6000,31,0);
         DST.TMIN = ZCORE;     /*                                     */
         DST.TPKT = '.';
         DST.VSZ = ' ';
         ZZEIT = URUNJOB;
         CALL UPRO;
         DST.GSTD = UST;
         DST.GMIN = UMIN;
         DST.GPKT = '.';
         DST.PREIS = UPREISJOB;
         WRITE FILE (PRINT) FROM (DST);
         STZ = '-';
         ZZ = ZZ + 4;
 GRWB:   SU3    = SU3 + SU2;
         UPREISAP = UPREISAP + UPREISJOB;
         UPREISJOB = 0;
         URUNAP = URUNAP + URUNJOB;
         URUNJOB = 0;
         SU2    = '';
         JOBZ = 0;
         IF GR2 THEN;           /* ABFRAGE NACH GRUPPENW. AUFG/PROJ   */
                ELSE GO TO NSV;
         GR2 = AUS;
                                      /* GRUPPENWECHSEL AUFG / PROJ   */
        LDST = '';
         DST.AP = 'SUMME';
         DST.PROGR = 'PROJ/AUFG';
         ZCORE = DIVIDE(SU3.SUGES,360000,31,0);
         DST.TSTD = ZCORE;
         ZCORE = MOD(SU3.SUGES,360000);
         ZCORE = ZCORE + 3000;
         ZCORE = DIVIDE(ZCORE,6000,31,0);
         DST.TMIN = ZCORE;     /*                                     */
         DST.TPKT = '.';
         DST.VSZ = '-';
         ZZEIT = URUNAP;
         CALL UPRO;
         DST.GSTD = UST;
         DST.GMIN = UMIN;
         DST.GPKT = '.';
         DST.PREIS = UPREISAP;
         UPREISG = UPREISG + UPREISAP;
         UPREISAP = 0;
         URUNG = URUNG + URUNAP;
         URUNAP = 0;
         WRITE FILE (PRINT) FROM (DST);
         STZ = '-';
         ZZ = ZZ + 4;
 GRWD:   SU4 = SU4 + SU3;
         SU3 = '';
         AUFZ = 0;
         IF ENDE THEN;          /* ABFRAGE NACH EOF                   */
                 ELSE GO TO NSV;
-       LDST = '';              /* ENDEVERARBEITUNG                   */
         DST.AP = 'SUMME';
         DST.PROGR = 'GESAMT';
         ZCORE = DIVIDE (SU4.SUGES,360000,31,0);
         DST.TSTD = ZCORE;
         ZCORE = MOD(SU4.SUGES,360000);
         ZCORE = ZCORE + 3000;
         ZCORE = DIVIDE(ZCORE,6000,31,0);
         DST.TMIN = ZCORE;     /*                                     */
         DST.TPKT = '.';
         DST.VSZ = '-';
         ZZEIT = URUNG;
         CALL UPRO;
         DST.GSTD = UST;
         DST.GMIN = UMIN;
         DST.GPKT = '.';
         DST.PREIS = UPREISG;
         WRITE FILE (PRINT) FROM (DST);
         GO TO CLOSEN;
-EOF:    ENDE = EIN;
         IF UPREISE3  = 0 & UPREISE4 = 0 THEN;
                                         ELSE DO;
         LDST = '';
         DST.AP = 'SUMME';
         DST.PROGR = 'ECHT MZ';
         DST.VSZ = '0';
         ZZEIT = URUNE3;
         CALL UPRO;
         DST.GSTD = UST;
         DST.GMIN = UMIN;
         DST.GPKT = '.';
         DST.PREIS = UPREISE3;
         ZZEIT = UTPROCE3;
         CALL UPRO;
         DST.TSTD = UST;
         DST.TMIN = UMIN;
         DST.TPKT = '.';
         WRITE FILE (DRUCK3) FROM (DST);
         LDST = '';
         DST.AP = 'SUMME';
         DST.PROGR = 'ECHT SE';
         DST.VSZ = '0';
         ZZEIT = URUNE4;
         CALL UPRO;
         DST.GSTD = UST;
         DST.GMIN = UMIN;
         DST.GPKT = '.';
         DST.PREIS = UPREISE4;
         ZZEIT = UTPROCE4;
         CALL UPRO;
         DST.TSTD = UST;
         DST.TMIN = UMIN;
         DST.TPKT = '.';
         WRITE FILE (DRUCK3) FROM (DST);
         LDST = '';
         DST.AP = 'SUMME';
         DST.PROGR = 'GESAMT';
         ZZEIT = URUNE3 + URUNE4;
         CALL UPRO;
         DST.GSTD = UST;
         DST.GMIN = UMIN;
         DST.GPKT = '.';
         DST.PREIS = UPREISE3 + UPREISE4;
         ZZEIT = UTPROCE3 + UTPROCE4;
         CALL UPRO;
         DST.TSTD = UST;
         DST.TMIN = UMIN;
         DST.TPKT = '.';
         WRITE FILE (DRUCK3) FROM (DST);
         LDST = '';
         DST.AP = 'SUMME';
         DST.PROGR = 'ALLER ABENDS';
         DST.VSZ = '-';
         DST.PREIS = UCCPREIS;
         WRITE FILE (DRUCK3) FROM (DST);
                                        END;
0        IF SZ = 0 THEN DO;
                   PUT SKIP LIST ('KEIN JOBVERR.- SATZ AUF BAND');
                   GO TO CLOSEN;
                   END;
0        GR2 = EIN;
         GO TO GRW;
 UPRO:   PROC;
         ZCORE = DIVIDE(ZZEIT,360000,31,0);
         UST = ZCORE;
         ZCORE = MOD(ZZEIT,360000);
         ZCORE = ZCORE + 3000;
         ZCORE = DIVIDE (ZCORE,6000,31,0);
         UMIN = ZCORE;
         END;
-CLOSEN: CLOSE FILE (PRINT),
              FILE (DRUCK3),
               FILE (SMF456);
         END;
