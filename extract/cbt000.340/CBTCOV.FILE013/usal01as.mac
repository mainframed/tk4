         MACRO
&SYM     XSAVE &BASE,&AREA,&ID,&LEN,&SP=0
.*
.*                 EXTENDED SAVE MACRO
.*                 ASSUMES ENTRYPOINT ADDRESS IN REGISTER 15
.*                 SAVES REGISTERS 14 THROUGH 12
.*                 LOADS BASE REGISTER AND CHAINES SAVEAREAS
.*                 MAY PRODUCE REENTRANT CODE
.*
         LCLA  &OFFSET,&BASEOFF,&LLID,&DISPL,&I
         LCLA  &NREG,&REGIX,&LCH
         LCLC  &NM,&REG,&BL
         LCLC  &PREV,&IT
&OFFSET  SETA  4
&NM      SETC  '&SYM'
&REG     SETC  '15'
&BL      SETC  ''
&IT      SETC  '&ID'
         AIF   (T'&SP EQ 'N').SPFIX
         MNOTE 8,'SUBPOOL NUMBER NOT A SELF-DEFINING TERM'
         MEXIT
.SPFIX   ANOP
         AIF   ('&SP' NE '0' AND T'&AREA NE 'O').SPERR
.NOERR   ANOP
         AIF   (T'&ID EQ 'O').NOID
         AIF   ('&ID' NE '*').SETLL
&I       SETA  8
         AIF   ('&NM' EQ '').SECT
&IT      SETC  '&NM'.'          '
         AGO   .FINDL
.SECT    ANOP
&IT      SETC  '&SYSECT'.'          '
.FINDL   ANOP
         AIF   ('&IT'(&I,1) NE ' ').IDEND
&I       SETA  &I-1
         AIF   (&I NE 0).FINDL
&I       SETA  5
&IT      SETC  'XSAVE'
         AGO   .XID
.IDEND   ANOP
&IT      SETC  '&IT'(1,&I)
.XID     ANOP
&LLID    SETA  &I
         AGO   .ODDEV
.SETLL   ANOP
&LLID    SETA  K'&ID
.ODDEV   ANOP
         AIF   (&LLID NE &LLID/2*2).OVBL1
&BL      SETC  ' '
&LLID    SETA  &LLID+1   BLANK
         AGO   .OVBL2
.OVBL1   ANOP
&BL      SETC  '  '
&LLID    SETA  &LLID+2    2 BLANKS
.OVBL2   ANOP
&LLID    SETA  &LLID+16                 DATE UND TIME
&DISPL   SETA  4+1+&LLID   B,X,(DATE,ID)
&NM      B     &DISPL.(0,15)
         DC    AL1(&LLID)
         AIF   ('&ID' NE '*' AND '&ID' NE '').IDDEF
         DC    C'&IT&BL'     PGM-ID.
         AGO   .SDATE
.IDDEF   ANOP
         DC    C'&ID&BL'     PGM-ID.
.SDATE   ANOP
         DC    CL9'&SYSDATE'
         DC    CL7'&SYSTIME'
*
*              REGISTER - EQUATS
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
*
&OFFSET  SETA  4+4+1+&LLID   B,STM,X,(DATE,ID)
&NM      SETC  ''
.NOID    ANOP
&NM      STM   14,12,12(13)            SAVE REGS
         AIF   (T'&BASE EQ 'O').NOBASE
         AIF   ('&BASE'(1,1) NE '(').LOAD
&REGIX   SETA  1
&NREG    SETA  N'&BASE
&REG     SETC  '&BASE(&REGIX)'
         LR    &REG,15
&OFFSET  SETA  &OFFSET+2
.LOOP    ANOP
         USING *-&OFFSET+&BASEOFF,&REG
&REGIX   SETA  &REGIX+1
         AIF   ('&REGIX' GT '&NREG').SETUSE
&PREV    SETC  '&REG'
&REG     SETC  '&BASE(&REGIX)'
         LA    &REG,X'FFF'
         LA    &REG,1(&REG,&PREV)
&OFFSET  SETA  &OFFSET+8
&BASEOFF SETA  &BASEOFF+4096
         AGO   .LOOP
.LOAD    LR    &BASE,15                LOAD BASE REG
&OFFSET  SETA  &OFFSET+2
&REG     SETC  '&BASE'
.NOBASE  ANOP
         USING *-&OFFSET,&REG
.SETUSE  ANOP
         AIF   (T'&AREA NE 'O').NORENT
         AIF   ('&SP' EQ '0').SEELEN
         BAL   1,*+8         SKIP DEFINITION
         DC    AL1(&SP)      SPECIFIED SUBPOOL NUMBER
         AIF   (T'&LEN NE 'O').SPEC
         DC    AL3(72)       LENGTH FOR 1 SAVE AREA
         AGO   .LOAD0
.SPEC    DC    AL3(&LEN)     SPECIFIED LENGTH INCLUDING SAVE AREA
.LOAD0   L     0,0(,1)       GET R0 READY FOR GETMAIN
         AGO   .COMP
.SEELEN  ANOP
         AIF   (T'&LEN NE 'O').NOTZERO
         LA    0,72                    GET LENGTH
         AGO   .COMP
.NOTZERO ANOP
         LA    0,&LEN                  GET LENGTH
.COMP    ANOP
         GETMAIN   R,LV=(0)
         XC    0(3*4,1),0(1)           ZERO CHAIN ADDRESSES
         AIF   (T'&LEN NE 'O').GET
         LA    0,72                    GET LENGTH
         AGO   .NOSTH
.GET     ANOP
         LA    0,&LEN                  GET LENGTH
.NOSTH   ANOP
         STH   0,2(1)                  STORE LENGTH
         AGO   .COM
.NORENT  LA    1,&AREA                 GET SA ADDR
.COM     ST    1,8(0,13)               SA DOWN CHAIN
         ST    13,4(0,1)               SA UP CHAIN
         LR    13,1                    LOAD SA REG
         L     1,4(0,13)               GET HIGH SA
         LM    0,1,20(1)               RESTORE REGS 0 AND 1
         AIF   (T'&AREA NE 'O').DBL
         MEXIT
.DBL     AIF   (T'&LEN EQ 'O').TEST
         MNOTE 4,'SAVE AREA ID AND LENGTH MUTUALLY EXCLUSIVE, LENGTH IG*
               NORED'
.TEST    AIF   (T'&AREA EQ 'U').DEFINE
         MEXIT
.SPERR   ANOP
         MNOTE 4,'SUBPOOL SPECIFICATION INVALID WITHOUT GETMAIN FUNCTIO*
               N, IGNORED'
         AGO   .NOERR
.DEFINE  B     &AREA+72                BRANCH AROUND SAVEAREA
&AREA    DC    18F'0'                  SAVEAREA
         MEND
         MACRO
&SYM     XRETURN &RC,&MODE,&SP=0
.*
.*                 EXTENDED RETURN MACRO
.*                 RESTORES REGISTERS
.*                 MAY PROVIDE RETURNCODE
.*
         LCLA  &C
         LCLB  &NC,&CF
         LCLC  &R,&NM
         AIF   (T'&MODE EQ 'O' OR '&MODE' EQ 'R').CONT
         MNOTE 8,'UNKNOWN OPERAND'
         MEXIT
.CONT    ANOP
         AIF   (T'&SP EQ 'N').SPFIX
         MNOTE 8,'SUBPOOL NUMBER NOT A SELF-DEFINING TERM'
         MEXIT
.SPFIX   ANOP
         AIF   ('&SP' NE '0' AND '&MODE' NE 'R').SPERR
.NOERR   ANOP
&NM      SETC  '&SYM'
         AIF   (T'&RC NE 'O').CODE
&NC      SETB  (1)
         AGO   .NOCODE
.CODE    ANOP
&R       SETC  '15'
         AIF   ('&RC'(1,1) EQ '(').REG
         AIF   (T'&RC EQ 'N').FIX
&NM      L     15,&RC                  LOAD CODE
&NM      SETC  ''
         AGO   .NOCODE
.FIX     ANOP
&CF      SETB  (1)
         AGO   .NOCODE
.REG     ANOP
&R       SETC  '&RC'(2,K'&RC-2)
.NOCODE  ANOP
&NM      L     13,4(0,13)              GET HIGH SA ADDR
         AIF   (&NC OR &CF).NOSTORE
         ST    &R,16(0,13)             STORE CODE
.NOSTORE AIF   (T'&MODE EQ 'O').NORENT
         L     1,8(0,13)               GET LOW SA ADDR
         LH    0,2(1)                  GET LENGTH
         AIF   ('&SP' EQ '0').FM
         LA    2,&SP         WANTED SUBPOOL NUMBER
         SLL   2,24          INSERT SUBPOOL NUMBER INTO R2 HIGH BYTE
         OR    0,2           R0: SP-NO, LENGTH TO BE FREED
.FM      ANOP
         FREEMAIN  R,LV=(0),A=(1)
.NORENT  LM    14,12,12(13)            RESTORE REGS
         AIF   (NOT &CF).EXIT
         LA    15,&RC                  LOAD CODE
&C       SETA  &RC
         AIF   (&C/4*4 EQ &C).EXIT
         MNOTE 0,'UNUSUAL CODE'
.EXIT    MVI   12(13),X'FF'            FORTRAN REQUIREMENT
         SPM   14                      RESTORE PGM MASK AND CC
         BR    14
         MEXIT
.SPERR   ANOP
         MNOTE 4,'SUBPOOL SPECIFICATION INVALID WITHOUT FREEMAIN FUNCTI*
               ON, IGNORED'
         AGO   .NOERR
         MEND
         TITLE 'VSAM-CATALOG-ANLISTUNG     STAND  VS1 REL 6.0'
***********************************************************************
*                                                                     *
*   MODUL-NAME =  VSAMCAT                                             *
*                                                                     *
*   FUNKTIONEN =  DIESES PROGRAMM LISTET DIE WICHTIGSTEN INFORMAT-    *
*              TIONEN EINES VSAM-CATALOGS IN KOMPRIMIERTER FORM AN.   *
*              D. H. PRO CLUSTER EINE ZEILE                           *
*                                                                     *
*              FOLGENDE PARM-ANGABEN SIND MOEGLICH                    *
*                   PARM=C =  DATEN-CI-GROESSE WIRD ANSTATT EXPIRA-   *
*                             TION DATE ANGELISTET                    *
*                   PARM=V =  DIE ERSTE VOLUME SERIAL NUMBER EINES    *
*                             CLUSTERS WIRD ANSTATT DER OWNER-INFOR-  *
*                             MATION ANGELISTET                       *
*                   PARM=B =  BEINHALTET DIE PARM-ANGABEN C UND V     *
*                                                                     *
*   ERFORDERLICHE JOB CONTROL                                         *
*              //JOBNAME   JOB  XXXXXXXX                              *
*              //STEPN     EXEC PGM=VSAMCAT,PARM=C                    *
*              //STEPCAT   DD   DSN=USERCAT1,DISP=SHR                 *
*              //          DD   DSN=USERCAT2,DISP=SHR                 *
*              //SYSPRINT  DD   SYSOUT=1                              *
*              //MASTER    DD   DSN=MASTCATL,DISP=SHR                 *
*              //UCAT1     DD   DSN=USERCAT1,DISP=SHR                 *
*              //UCAT2     DD   DSN=USERCAT2,DISP=SHR                 *
*              //SYSIN     DD   *                                     *
*              MASTER     MASTERPW                                    *
*              UCAT1      PASSWORD                                    *
*              UCAT2      PASSWORD                                    *
*              /*                                                     *
*                                                                     *
*              BESCHREIBUNG DER SYSIN-EINGABE                         *
*                   SPALTE 1  - 8  =  DDNAME FUER DEN VSAM-CATALOG    *
*                   SPALTE 11 - 18 =  MASTER-PASSWORD FUER DEN VSAM-  *
*                                     CATALOG                         *
*                                     SOLLTE DER VSAM-CATALOG NICHT   *
*                                     DURCH EIN PASSWORD GESCHUETZT   *
*                                     SEIN, SO MUSS IN DER SYSIN-     *
*                                     EINGABE TROTZDEM EIN PASSWORD   *
*                                     EINGEGEBEN WERDEN.              *
*                                                                     *
*              FEHLT DIE SYSIN-DD-KARTE WERDEN ALLE DD-NAMEN (AUSGEN. *
*              SYSPRINT,STEPLIB,STEPCAT,JOBLIB,JOBCAT,SYSABEND UND    *
*              SYSUDUMP) AUS DER TIOT ZUR ANLISTUNG EINES VSAM-CATA-  *
*              LOGS VERWENDET. DAS MASTER-PASSWORD WIRD DANN AUS DER  *
*              KONSTANTE MP UND DEN ERSTEN 6 STELLEN DES DD-NAMENS    *
*              GEBILDET.                                              *
*                                                                     *
*   ERKLAERUNGEN ZUM LISTENBLID                                       *
*   ---------------------------                                       *
*              1. VOR DER SPALTE SO                                   *
*                 * = DER DATA SET IST ZUR ZEIT ALS OUTPUT EROEFFNET  *
*                 N = ZAHL DER INDEX-LEVELS, WENN GROESSER ALS 2      *
*                     (DIE ZAHL UEBERLAGERT DEN EVTL. STERN)          *
*                                                                     *
*              2. SPALTE SO                                           *
*                 S = SPANNED RECORD                                  *
*                 U = AIX MIT UPGRADE (U UEBERLAGERT S)               *
*                                                                     *
*              3. SPALTE KZ                                           *
*                 A = ALTERNATE INDEX                                 *
*                 K = KSDS                                            *
*                 E = ESDS                                            *
*                 R = RRDS                                            *
*                 N = NONVSAM                                         *
*                 U = USER-CATALOG-POINTER                            *
*                 * = VSAM-CATALOG                                    *
*                                                                     *
*              4. DIE RESTLICHEN SPALTEN SIND SELBSTERKLAEREND        *
*                 (S. AUCH   ZEILE   BEI DEN DEFINITIONEN)            *
*                                                                     *
*                                                                     *
*   ACHTUNG MVS-BENUTZER                                              *
*   --------------------                                              *
*              DAS PROGRAMM MUSS SICH AUF EINER AUTHORISIERTEN        *
*              BIBLIOTHEK BEFINDEN UND MIT AC=1 GELINKT SEIN.         *
*              EIN EINTRAG IN DIE  PROGRAM PROPERTIES TABLE           *
*              IST NICHT FORDERLICH.                                  *
*                                                                     *
***********************************************************************
         EJECT
VSAMCAT  CSECT
         XSAVE (3,4,5),SA,VSAMCAT
*
OPEN     DS    0H
         L     R6,0(0,R1)               ADR PARM-BEREICH
         OPEN  (SYSPRINT,(OUTPUT))      LISTEN AUSGABE
         TM    SYSPRINT+48,X'10'        OPEN ERFOLGREICH
         BZ    FWTO                     NEIN, DD-KARTE FEHLT
*
PARM     DS    0H
         LH    R7,0(0,R6)               LAENGE PARM-BEREICH TO R7
         LTR   R7,R7                    PARM-ANGABEN VORHANDEN
         BZ    EXTRACT                  NEIN
         CLI   2(R6),C'C'               CI-SIZE DRUCKEN
         BE    CISIZE                   JA
         CLI   2(R6),C'B'               CI-SIZE + VOL-SER-NR DRUCKEN
         BE    CISIZE                   JA
         CLI   2(R6),C'V'               VOLUME SER NUMBER DRUCKEN
         BNE   EXTRACT                  NEIN
*
VOLUME   DS    0H
         NI    W1+1,X'0F'               WEICHE AUF NOP
         MVC   UEZ2+125(6),=C'VOLUME'
         B     EXTRACT
*
CISIZE   DS    0H
         OI    W2+1,X'F0'
         NI    W3+1,X'0F'
         MVC   UEZ2+117(5),=C'CI-  '
         MVC   UEZ3+117(5),=C'SIZE.'
         CLI   2(R6),C'B'               CI-SIZE + VOL-SER-NR DRUCKEN
         BE    VOLUME                   JA
*
EXTRACT  DS    0H
         EXTRACT TIOT,FIELDS=(TIOT)
         L     R6,TIOT                  ADR TIOT TO R6
         LA    R6,24(0,R6)              JOB- UND STEPNAMEN UEBERGEHEN
*
EXT1     DS    0H
         CLI   0(R6),X'00'              ENDE TIOT ERREICHT
         BE    EXT2                     JA
         CLC   4(8,R6),=C'SYSIN   '     SYSIN-DD-KARTE VORHANDEN
         BE    EXT3                     JA
         SR    R7,R7                    LOESCHEN
         IC    R7,0(0,R6)               LAENGE DD-ENTRY
         AR    R6,R7                    NAECHSTES DD-ENTRY
         B     EXT1                     SUCHE WEITER
*
EXT2     DS    0H                       KEINE SYSIN-DD-KARTE VORHANDEN
         L     R6,TIOT                  ADR TIOT
         LA    R6,24(0,R6)              JOB- UND STEPNAMEN UEBERGEHEN
         B     EXTR1                    DD-NAMEN DIENEN ALS PASSWORDS
*
*        DD-NAMEN- + PASSWORD-EINGABE ERFOLGT UEBER SYSIN
*
EXT3     DS    0H                       SYSIN-DD-KARTE VORHANDEN
         OI    W4+1,X'F0'               BRANCH NACH GETSYSIN
         OPEN  (SYSIN,(INPUT))          KARTEN EINGABE
*
GETSYSIN DS    0H
         GET   SYSIN,ESYSIN
         TRT   EDD(1),TABALPHA          DD-NAMEN  1. ZEICHEN ALPHA
         BNZ   FDD                      NEIN
         TRT   EPW(1),TABALPHA          PASSWORD  1. ZEICHEN ALPHA
         BNZ   FPW                      NEIN
         MVC   CATACB+40(8),EDD         DD-NAMEN TO ACB
         MVC   CATPW+1(8),EPW           PASSWORD
         B     DATE
*
*        DD-NAMEN- + PASSWORD-EINGABE ERFOLGT UEBER TIOT
*        DIE DD-NAMEN DIENEN ALS PASSWORDS
*
EXTR1    DS    0H
         CLI   0(R6),X'00'              ENDE TIOT ERREICHT
         BE    EXTRENDE                 JA
         CLC   4(8,R6),=C'SYSPRINT'
         BE    EXTR2
         CLC   4(8,R6),=C'STEPCAT '
         BE    EXTR2
         CLC   4(8,R6),=C'JOBLIB  '
         BE    EXTR2
         CLC   4(8,R6),=C'JOBCAT  '
         BE    EXTR2
         CLC   4(8,R6),=C'STEPLIB '
         BE    EXTR2
         CLC   4(8,R6),=C'SYSABEND'
         BE    EXTR2
         CLC   4(8,R6),=C'SYSUDUMP'
         BE    EXTR2
         CLI   4(R6),X'40'               CONCATINATION CARD (BEI VS1)
         BE    EXTR2                     YES
         CLI   4(R6),X'7C'               CONCATINATION CARD (BEI MVS)
         BE    EXTR2                     YES
         MVC   CATACB+40(8),4(R6)        DD-NAME TO ACB
         MVC   CPWVOL,4(R6)              DD-NAME = VOL-SER TO PASSWORD
         SR    R7,R7                     R7 LOESCHEN
         IC    R7,0(0,R6)                LAENGE DD-ENTRY TO R7
         AR    R6,R7                     NAECHSTES DD-ENTRY ERRECHNEN
         ST    R6,DDENTRY                ADR NAECHSTES ENTRY SICHERN
         B     DATE
*
EXTR2    DS    0H
         SR    R7,R7                     R7 LOESCHEN
         IC    R7,0(0,R6)                LAENGE DD-ENTRY TO R7
         AR    R6,R7                     NAECHSTES DD-ENTRY
         B     EXTR1                     SUCHE WEITER
*
DATE     DS    0H
         CALL  ZDATE,(U1DATE,U1FABT,U1TIME),VL
*
OPENCAT  DS    0H
         OPEN  (CATACB,(INPUT))
         LTR   R15,R15
         BNZ   FVOPEN
*
         MVC   CATGKEY1,=X'000009'      VOLUME RECORD CI-9
         USING CLUSTER,R12
         USING CLUSTER1,R10
         GET   RPL=CRPLDIR
         LTR   R15,R15
         BNZ   ABEND02
         L     R12,CATRDIR
         CLI   CLENTYPE,C'V'            VOLUME RECORD
         BNE   ABEND03
         MVC   U1VOL,CLENTNAM           VOL-SER TO UEB1
         MVC   CATGKEY1,=X'000002'      CATALOG-CLUSTER-REC CI-2
         GET   RPL=CRPLDIR
         LTR   R15,R15
         BNZ   ABEND04
         L     R12,CATRDIR
         CLI   CLENTYPE,C'C'            CLUSTER-REC
         BNE   ABEND05                  NEIN
         MVC   U1CATN,CLENTNAM          CATALOG-CLUSTER-NAME  TO UEZ1
         ZAP   ZSEITE,=P'0'             SEITEN-ANZAHL LOESCHEN
******** ZAP   ZZEILE,=P'0'             ZEILEN-ZAEHLER LOESCHEN
         BAL   R11,UEBERSCH             UEBERSCHRIFTEN DRUCKEN
*
POINT    DS    0H
         POINT RPL=CRPLSEQ              POINT TO HIGH-KEY RANGES
         LTR   R15,R15
         BNZ   ABEND06
*
GETSEQ   DS    0H
         GET   RPL=CRPLSEQ              READ SEQ AB HIGH-KEY-RANGES
*                                       AT END GO TO   CATENDE
         LTR   R15,R15
         BNZ   ABEND07
         L     R7,CATRSEQ               ADR RECORD TO R7
         MVC   CATGKEY1,44(R7)          MOVE LOW-RANGE-KEY (CI-NO)
*
GETDIR   DS    0H
         GET   RPL=CRPLDIR              READ DIR MIT RBA-ADR
         LTR   R15,R15
         BNZ   ABEND08
         L     R12,CATRDIR
         CLI   CLENTYPE,C'C'            CLUSTER
         BE    CLUAUFB
         CLI   CLENTYPE,C'G'            ALTERNATE INDEX
         BE    AIXAUFB
         CLI   CLENTYPE,C'A'            NONVSAM
         BE    NONVAUFB
         CLI   CLENTYPE,C'U'            USER-CATALOG
         BE    USCATAUF
         B     GETSEQ
*
USCATAUF DS    0H                       USER-CATALOG-RECORD AUFBEREIT.
         MVI   ZKZ,C'U'                 USER-CATALOG-KENNZEICHEN
         MVC   ZDSN,CLENTNAM            USER-CATALOG-NAMEN
         MVC   ZKEYL+1(5),=C'.....'
*
USCATA0  DS    0H
         SR    R14,R14                  R14 LOESCHEN
         IC    R14,CLNOFIXF             LAENGE FIXED LENGTH FIELD
         LA    R14,CLUSTER+5(R14)
         SR    R7,R7                    R7 LOESCHEN
         IC    R7,0(R14)                FUER BCT
         LR    R9,R7                    ANZAHL SET OF FIELD POINTER
         M     R8,=F'5'                 LAENGE DER POINTER ERMITTELN
         LA    R8,1(R14)                ADR CL5BYTPO + LAENGE POINTER =
         LR    R10,R8
         AR    R8,R9                    ADR ERSTES SET OF FIELD
*
USCATA1  DS    0H
         TM    CL5GRPCO,X'40'           FIELD DELETED
         BO    USCATA2                  JA
         CLI   CL5GRPCO,X'03'           VOLUME GROUP CODE
         BNE   USCATA2                  NEIN
         ICM   R9,3,CL5DISPF            DISPLACEMENT
         LA    R9,0(R9,R8)              ADR SET OF FIELD
         MVC   ZKEYL+6(6),6(R9)         VOLUME SER NUMBER
         B     SCHRZEIL
*
USCATA2  DS    0H
         LA    R10,5(R10,0)             R10 UM 5 ERHOEHEN
         BCT   R7,USCATA1
         B     ABEND09
*
NONVAUFB DS    0H                       NONVSAM AUFBEREITEN
         MVI   ZKZ,C'N'                 NONVSAM-KENNZEICHEN
         MVC   ZDSN,CLENTNAM            NONVSAM-NAMEN
         UNPK  ZCREAT,CLDSETCR          CREATION-DATE
         MVC   ZOWNER,CLOWNERI          OWNER
         MVC   ZEXPIR,SCHAB5            SCHABLONE X'402020202120'
         ED    ZEXPIR,CLDSETEX          EXPIRATION-DATE
         MVC   ZKEYL+1(5),=C'.....'
         B     USCATA0
*
AIXAUFB  DS    0H
         MVI   ZKZ,C'A'                 ALTERNATE INDEX
         TM    CLAIXATT,X'80'           UPGRADE BEI AIX
         BNO   CLUAUFB                  NEIN
         MVI   ZSO,C'U'                 JA
         B     CLUAUFB
*
CLUAUFB  DS    0H
         MVC   ZDSN,CLENTNAM            CLUSTER-NAMEN
         MVC   ZOWNER,CLOWNERI          OWNER
         UNPK  ZCREAT,CLDSETCR          CREATION-DATE
*
W2       NOP   CLUAUFB0                 BRANCH WENN CI-SIZE GEWUENSCHT
         MVC   ZEXPIR,SCHAB5            SCHABLONE X'402020202120'
         ED    ZEXPIR,CLDSETEX          EXPIRATION-DATE
*
*        SET OF FIELDS POINTER IM CLUSTER-REC UNTERSUCHEN
*
*
CLUAUFB0 DS    0H
         SR    R14,R14                  R14 LOESCHEN
         IC    R14,CLNOFIXF             LAENGE FIXED LENGTH FIELD
         LA    R14,CLUSTER+5(R14)
         SR    R7,R7                    R7 LOESCHEN
         IC    R7,0(R14)                FUER BCT
         MVI   SCHADAIN,X'00'           SCHALTER ADR DATA/INDEX LOESCH
         LR    R9,R7                    ANZAHL SET OF FIELD POINTER
         M     R8,=F'5'                 LAENGE DER POINTER ERMITTELN
         LA    R8,1(R14)                ADR CL5BYTPO + LAENGE POINTER =
         LR    R10,R8
         AR    R8,R9                    ADR ERSTES SET OF FIELD
*
CLUAUFB1 DS    0H
         TM    CL5GRPCO,X'40'           FIELD DELETED
         BO    CLUAUFB3                 JA
         CLI   CL5GRPCO,X'02'           DATA/INDEX GROUP CODE
         BNE   CLUAUFB3                 NEIN
         SR    R9,R9                    LOESCHE R9
         ICM   R9,3,CL5DISPF            DISPLACEMENT
         LA    R9,0(R9,R8)              ADR SET OF FIELD
         CLI   2(R9),C'D'               DATA
         BE    CLUAUFB2                 JA
         CLI   2(R9),C'I'               INDEX
         BNE   CLUAUFB3                 NEIN
*
         OI    SCHADAIN,X'0F'           SCHALTER INDEX SETZEN
         MVC   ZIND1,3(R9)              INDEX-REC CI-NUMBER
         CLI   SCHADAIN,X'FF'           DATEN- UND INDEX-CI-NO VORHAND
         BNE   CLUAUFB3                 NEIN
         B     CLUAUFB4
*
CLUAUFB2 DS    0H
         OI    SCHADAIN,X'F0'           SCHALTER DATEN SETZEN
         MVC   ZDAT1,3(R9)              DATA-REC CI-NUMBER
         CLI   SCHADAIN,X'FF'           DATEN- UND INDEX-CI-NO VORHAND
         BNE   CLUAUFB3                 NEIN
         B     CLUAUFB4                 JA
*
CLUAUFB3 DS    0H
         LA    R10,5(R10,0)             R10 UM 5 ERHOEHEN
         BCT   R7,CLUAUFB1
*
CLUAUFB4 DS    0H
         TM    SCHADAIN,X'F0'           DATA-REC CI-NUMBER VORHANDEN
         BNO   ABEND10
*
READDATA DS    0H
         MVC   CATGKEY1,ZDAT1           CI-NO TO GENERIC KEY
         GET   RPL=CRPLDIR              READ DIR MIT RBA-ADR DATA-REC
         LTR   R15,R15
         BNZ   ABEND11
         DROP  R12
         DROP  R10
         USING DATAIND,R12
         USING DATAIND1,R10
         L     R12,CATRDIR              ADR DATA-REC
         CLI   DENTYPE,C'D'             DATA-REC
         BNE   ABEND12
*
DATAAUFB DS    0H
         CLC   DENTIDNO,=X'000000'      CATALOG-DATA-REC
         BNE   *+8                      NEIN
         MVI   ZKZ,C'*'                 JA
         MVI   ZSHR,C'4'
         TM    DATTR2,X'C0'             SHR 4
         BO    DOPENIN                  JA
         BZ    DATAAUF1                 SHR 1
         MVI   ZSHR,C'2'
         TM    DATTR2,X'40'             SHR 2
         BO    DOPENIN                  JA
         MVI   ZSHR,C'3'
         B     DOPENIN
*
DATAAUF1 DS    0H
         MVI   ZSHR,C'1'
*
DOPENIN  DS    0H
         TM    DOPENIND,X'80'           OPEN FOR OUTPUT
         BNO   *+8                      NEIN, MOVE BEFEHL UMGEHEN
         MVI   ZSPEZ,C'*'               JA
*
DSPACE   DS    0H
         ICM   R9,7,DPRIMSPA            PRIMARY SPACE
         CVD   R9,DW
         MVC   ZPRI,SCHAB5              SCHABLONE X'402020202120'
         ED    ZPRI,DW+5                5 ZIFFERN AUFBEREITEN
         ICM   R9,7,DSCONSPA            SECONDARY SPACE
         CVD   R9,DW
         MVC   ZSEC,SCHAB5
         ED    ZSEC,DW+5
         MVI   ZSPA,C'C'
         TM    DSPACOPT,DCYL            SPACE-ALLOC IN CYLINDER
         BO    *+8                      JA, MOVE UEBERGEHEN
         MVI   ZSPA,C'T'                NEIN, IN TRK
         ICM   R9,15,DLRECL             AVERAGE-RECORD-LENGTH
         CVD   R9,DW
         MVC   ZAVGLR,SCHAB5
         ED    ZAVGLR,DW+5
         LA    R11,SPANNED
*
DAMDSB0  DS    0H
         SR    R14,R14                  R14 LOESCHEN
         IC    R14,DNOFIXFD
         LA    R14,DATAIND+5(R14)
         SR    R6,R6
         IC    R6,0(R14)                NUMBER OF SET OF FIELD POINTER
         LR    R9,R6
         M     R8,=F'5'                 LAENGE DER SET OF FIELD POINTER
         LA    R8,1(R14)
         LR    R10,R8
         AR    R8,R9                    ADR ERSTES SET OF FIELD
*
DAMDSB   DS    0H
         TM    D5GRPCOD,X'40'           FIELD DELETED
         BO    DAMDSB1                  JA
         CLI   D5GRPCOD,X'01'           01 = AMDSB
         BNE   DAMDSB1
         B     DAMDSB2
*
DAMDSB1  DS    0H
         LA    R10,5(R10,0)             R10 UM 5 ERHOEHEN
         BCT   R6,DAMDSB
         B     ABEND13
*
DAMDSB2  DS    0H
         SR    R9,R9
         ICM   R9,3,D5DISPFL            DISPL VOM BEGINN DER SET OF FLD
         AR    R8,R9
         LR    R12,R8
*
         DROP  R10                      GEBE R10 FREI
         DROP  R12                      GEBE R12 FREI
         USING AMDSB,R12                BENUTZE R12 FUER AMDSB-DSECT
*
         CLI   AMDSBID,X'60'            AMDSB-ID
         BNE   ABEND14                  NEIN
         BR    R11
*
SPANNED  DS    0H
         CLI   ZSO,X'40'                BLANK
         BNE   SPANNED1                 NEIN
         TM    AMDATTR,X'01'            SPANNED RECORD
         BNO   SPANNED1                 NEIN
         MVI   ZSO,C'S'                 JA
*
SPANNED1 DS    0H
         CLI   ZKZ,C'A'                 ALTERNATE INDEX
         BE    KEYPOS                   JA
         CLI   ZKZ,C'*'                 CATALOG-DATA-REC
         BE    KEYPOS1                  JA
*
KSDS     DS    0H
         MVI   ZKZ,C'K'
         TM    AMDATTR,X'80'            KSDS
         BO    KEYPOS1                  JA
         MVI   ZKZ,C'E'
         TM    AMDATTR,X'02'
         BNO   KEYPOS1
         MVI   ZKZ,C'R'
         B     KEYPOS1
*
KEYPOS   DS    0H
         ICM   R9,3,AMDAXRKP            ALTERNATE INDEX RKP IN BASE-CL
         B     KEYPOS2
*
KEYPOS1  DS    0H
         ICM   R9,3,AMDRKP              RKP
*
KEYPOS2  DS    0H
         CVD   R9,DW
         MVC   ZRKP,SCHAB5
         ED    ZRKP,DW+5
*
KEYLEN   DS    0H
         ICM   R9,3,AMDKEYLN
         CVD   R9,DW
         MVC   ZKEYL,SCHAB3
         ED    ZKEYL,DW+6
*
RECTOTAL DS    0H
         ICM   R9,15,AMDNLR
         CVD   R9,DW
         MVC   ZRECTOT,SCHAB9
         ED    ZRECTOT,DW+3
*
MAXLRECL DS    0H
         ICM   R9,15,AMDLRECL
         CVD   R9,DW
         MVC   ZMAXLR,SCHAB5
         ED    ZMAXLR,DW+5
*
SPLITS   DS    0H
         ICM   R9,15,AMDNCAS
         CVD   R9,DW
         MVC   ZSPLITCA,SCHAB5
         ED    ZSPLITCA,DW+5
         ICM   R9,15,AMDNCIS
         CVD   R9,DW
         MVC   ZSPLITCI,SCHAB5
         ED    ZSPLITCI,DW+5
*
FREESPAC DS    0H
         SR    R9,R9
         IC    R9,AMDPCTCA
         CVD   R9,DW
         MVC   ZFRCA,SCHAB3
         ED    ZFRCA,DW+6
         IC    R9,AMDPCTCI
         CVD   R9,DW
         MVC   ZFRCI,SCHAB3
         ED    ZFRCI,DW+6
*
EXTENTS  DS    0H
         SR    R9,R9
         ICM   R9,3,AMDNEXT
         CVD   R9,DW
         MVC   ZEXT,SCHAB5
         ED    ZEXT,DW+6
*
W3       B     EXTENTS1                 NOP WENN CI-SIZE GEWUENSCHT
         SR    R9,R9
         ICM   R9,15,AMDCINV            CI-SIZE
         CVD   R9,DW
         MVC   ZEXPIR,SCHAB5
         ED    ZEXPIR,DW+5
*
EXTENTS1 DS    0H
W1       B     EXTENTS5                 NOP WENN VOL-SER-NUMBER GEWUEN.
         DROP  R12
         USING DATAIND,R12
         USING DATAIND1,R10
         L     R12,CATRDIR              ADR SATZ-ANFANG
         CLC   DENTIDNO,=X'000000'      CATALOG-DATA-REC
         BE    EXTENTS4                 JA
         SR    R14,R14                  R14 LOESCHEN
         IC    R14,DNOFIXFD             LAENGE FIXED LENGTH FIELD
         LA    R14,DATAIND+5(R14)
         SR    R7,R7                    R7 LOESCHEN
         IC    R7,0(R14)                FUER BCT
         LR    R9,R7                    ANZAHL SET OF FIELD POINTER
         M     R8,=F'5'                 LAENGE DER POINTER ERMITTELN
         LA    R8,1(R14)                ADR CL5BYTPO + LAENGE POINTER =
         LR    R10,R8
         AR    R8,R9                    ADR ERSTES SET OF FIELD
*
EXTENTS2 DS    0H
         TM    D5GRPCOD,X'40'           FIELD DELETED
         BO    EXTENTS3                 JA
         TM    D5GRPCOD,X'80'           FIELD IN EXTENSION RECORD
         BO    EXTREC                   JA
         CLI   D5GRPCOD,X'03'           VOLUME GROUP CODE
         BNE   EXTENTS3                 NEIN
         SR    R9,R9                    LOESCHEN
         ICM   R9,3,D5DISPFL            DISPLACEMENT
         LA    R9,0(R9,R8)              ADR SET OF FIELD
         MVC   ZOWNER(6),6(R9)          VOLUME SER NUMBER
         MVC   ZOWNER+6(2),BLANK        LOESCHE DIE LETZTEN 2 BYTES
         B     EXTENTS5
*
EXTREC   DS    0H
         MVC   CATGKEY1,D5BYTE3         CI-NO TO GENERIC KEY
*
READEXT  DS    0H
         GET   RPL=CRPLDIR              READ DIR MIT RBA-ADR EXT.-REC
         LTR   R15,R15
         BNZ   ABEND15
         L     R12,CATRDIR              ADR SATZ
         CLI   DENTYPE,C'E'             EXTENSION RECORD
         BNE   ABEND16                  NEIN
         B     W1
*
EXTENTS3 DS    0H
         LA    R10,5(R10,0)             R10 UM 5 ERHOEHEN
         BCT   R7,EXTENTS2
         B     ABEND17
*
EXTENTS4 DS    0H
         MVC   ZOWNER,BLANK             BLANK
*
EXTENTS5 DS    0H
         TM    SCHADAIN,X'0F'           INDEX-REC VORHANDEN
         BNO   SCHRZEIL                 NEIN, SCHREIBE ZEILE
*
READIND  DS    0H
         MVC   CATGKEY1,ZIND1           CI-NO TO GENERIC KEY
         GET   RPL=CRPLDIR              READ DIR MIT RBA-ADR INDEX-REC
         LTR   R15,R15
         BNZ   ABEND18
         L     R12,CATRDIR
         CLI   DENTYPE,C'I'             INDEX-SATZ
         BNE   ABEND19                  NEIN
*
         DROP  R12
         DROP  R10
         USING AMDSB,R12
*
         BAL   R11,DAMDSB0              SUCHE AMB
         CLI   AMDNIL,X'02'             INDEX-LEVEL GROESSER 2
         BNH   SCHRZEIL                 NEIN
         SR    R6,R6
         IC    R6,AMDNIL+1              INDEX-LEVEL TO R6
         CVD   R6,DW
         UNPK  ZSPEZ,DW+7(1)
         OI    ZSPEZ,X'F0'
         B     SCHRZEIL
*
UEBERSCH DS    0H
         AP    ZSEITE,=P'+1'
         MVC   U1SEITE,SCHABUEB
         ED    U1SEITE,ZSEITE
         PUT   SYSPRINT,UEZ1
         PUT   SYSPRINT,UEZ2
         PUT   SYSPRINT,UEZ3
         MVI   ZSTZ,C'0'                SPACE  2  LINE
         ZAP   ZZEILE,=P'0'             ZEILEN-ZAEHLER LOESCHEN
         BR    R11
*
SCHRZEIL DS    0H
*                                       SPACE  1  LINE
         CP    ZZEILE,=P'59'
         BNH   SCHRZEI1
         BAL   R11,UEBERSCH
*
SCHRZEI1 DS    0H
         AP    ZZEILE,=P'1'
         PUT   SYSPRINT,ZEILE
         MVI   ZEILE,X'40'              BLANK
         MVC   ZEILE+1(132),ZEILE       ZEILE LOESCHEN
         B     GETSEQ
*
CATENDE  DS    0H
         CLOSE (CATACB)
         LTR   R15,R15
         BNZ   ABEND20
*
W4       NOP   GETSYSIN                 BRANCH WENN SYSIN-KARTE VORHAND
         L     R6,DDENTRY
         B     EXTR1
*
SYSINEND DS    0H
         CLOSE (SYSIN)
*
EXTRENDE DS    0H
         CLOSE (SYSPRINT)
         XRETURN 0
*
         EJECT
***********************************************************************
*                                                                     *
*              F E H L E R - R O U T I N E N                          *
*                                                                     *
***********************************************************************
*
FWTO     DS    0H
         WTO   'VCAT01  SYSPRINT-DD-KARTE FEHLT',ROUTCDE=(11),DESC=7
         B     AB1111
*
AB1111   DS    0H
         ABEND 1111
*
FDD      DS    0H
         TRT   EPW(1),TABALPHA          PASSWORD  1. ZEICHEN ALPHA
         BNZ   FDD1                     NEIN
         LA    R2,VCAT02
         B     FSCHREIB
*
FDD1     DS    0H
         LA    R2,VCAT03
         B     FSCHREIB
*
FPW      DS    0H
         LA    R2,VCAT04
         B     FSCHREIB
*
FVOPEN   DS    0H
         MVC   FPACK1,CATACB+49         ACB ERROR FLAGS
         UNPK  FUNPK,FPACK              F-ZONE ERSTELLEN
         TR    FUNPK2,TABHEX-240        TRANSLATE
         MVC   VCAT05+26(2),FUNPK2      ACB ERROR FLAGS
         MVC   VCAT05+42(8),CATACB+40   DD-NAME
         LA    R2,VCAT05
         B     FSCHREI1
*
FSCHREIB DS    0H
         MVI   ZSTZ,C'1'                VORSCHUB AUF KANAL 1
         MVC   ZDSN(80),0(R2)           FEHLER-MELDUNG
         MVC   ZDSN+80(20),ESYSIN       FEHLERHAFTE SYSIN-KARTE
*
FSCHREI1 DS    0H
         PUT   SYSPRINT,ZEILE
         B     W4
*
ABEND01  DS    0H
         LA    R1,1001
         B     ABEND
*
ABEND02  DS    0H
         LA    R1,1002
         B     ABEND
*
ABEND03  DS    0H
         LA    R1,1003
         B     ABEND
*
ABEND04  DS    0H
         LA    R1,1004
         B     ABEND
*
ABEND05  DS    0H
         LA    R1,1005
         B     ABEND
*
ABEND06  DS    0H
         LA    R1,1006
         B     ABEND
*
ABEND07  DS    0H
         LA    R1,1007
         B     ABEND
*
ABEND08  DS    0H
         LA    R1,1008
         B     ABEND
*
ABEND09  DS    0H
         LA    R1,1009
         B     ABEND
*
ABEND10  DS    0H
         LA    R1,1010
         B     ABEND
*
ABEND11  DS    0H
         LA    R1,1011
         B     ABEND
*
ABEND12  DS    0H
         LA    R1,1012
         B     ABEND
*
ABEND13  DS    0H
         LA    R1,1013
         B     ABEND
*
ABEND14  DS    0H
         LA    R1,1014
         B     ABEND
*
ABEND15  DS    0H
         LA    R1,1015
         B     ABEND
*
ABEND16  DS    0H
         LA    R1,1016
         B     ABEND
*
ABEND17  DS    0H
         LA    R1,1017
         B     ABEND
*
ABEND18  DS    0H
         LA    R1,1018
         B     ABEND
*
ABEND19  DS    0H
         LA    R1,1019
         B     ABEND
*
ABEND20  DS    0H
         LA    R1,1020
         B     ABEND
*
ABEND    DS    0H
         ABEND (1),DUMP
*
         EJECT
***********************************************************************
*                                                                     *
*        D E F I N I T I O N E N                                      *
*                                                                     *
***********************************************************************
*
         DS    0D
DW       DC    D'0'           ARBEITS-FELD
*
         DS    0F
TIOT     DC    F'0'           ADR TIOT NACH EXTRACT
DDENTRY  DC    F'0'           ADR NAECHSTES DD-ENTRY AUS TIOT
FW0      DC    F'0'           F'0' FUER VERGLEICHE
FW       DC    F'0'           ARBEITS-FELD
ZSEITE   DC    PL2'+0'        SEITEN-ZAHL
ZZEILE   DC    PL2'+0'        ZEILEN-ZAEHLER
*
SCHAB3   DC    X'40202120'
SCHAB5   DC    X'402020202120'
SCHAB7   DC    X'4020202020202120'
SCHAB9   DC    X'40202020202020202120'
SCHABUEB DC    X'4B202120'
*
FPACK    DS    0CL2
FPACK1   DC    CL1' '
         DC    CL1'0'
*
FUNPK    DS    0CL3
FUNPK2   DC    CL2' '
FUNPK1   DC    CL1' '
*
BLANK    DC    CL8' '                   BLANK KONSTANTE
*
SCHADAIN DC    X'00'                    SCHALTER ADR DATA/INDEX
*
         DS    0F
ZDATA    DS    0CL4
         DC    X'00'
ZDAT1    DC    XL3'00'                  DATA-REC CI-NUMBER
*
ZINDEX   DS    0CL4
         DC    X'00'
ZIND1    DC    XL3'00'                  INDEX-REC CI-NUMBER
*
*
UEZ1     DS    0CL133         1.  UEBERSCHRIFTS-ZEILE
U1STZ    DC    C'1'           VORSCHUB AUF KANAL 1 (ASA-CODE)
         DC    C'VSAM-CATALOG...'
U1CATN   DC    CL35' '        VSAM-CATALOG-NAME
         DC    C' VOLUME...'
U1VOL    DC    CL6' '         VOL-SER
         DC    CL6' '
         DC    C'DATE...'
U1DATE   DC    CL08' '
         DC    C' ('
U1FABT   DC    CL5' '
         DC    C')'
         DC    CL6' '
         DC    C'TIME...'
U1TIME   DC    CL8' '
         DC    CL6' '
         DC    C'SEITE.'
U1SEITE  DC    CL4' '
*
*
UEZ2     DS    0CL133         2.  UEBERSCHRIFTS-ZEILE
U2STZ    DC    C'-'           SPACE  3  LINES (ASA-CODE)
         DC    CL44'D S N A M E '
         DC    C' S K KEY  RKP AVG-  '
         DC    C'MAX-   REC-   SPACE-'
         DC    C'ALLOC.. EXT FREES '
         DC    C'SPLITS- CREAT '
         DC    C'EXPIR S OWNER'
         DC    CL3' '
*
*
UEZ3     DS    0CL133         3.  UEBERSCHRIFTS-ZEILE
U3STZ    DS    C' '           SPACE  1  LINE (ASA-CODE)
         DC    CL45' '
         DC    C'O Z LEN      '
         DC    C'LRECL LRECL  '
         DC    C'TOTAL. ART PRI'
         DC    C'   SEC     '
         DC    C'CI CA  CI  CA  '
         DC    C'DATE  DATE H'
         DC    CL9' '
*
*
ZEILE    DS    0CL133         DATEN-ZEILE    60 PRO SEITE
ZSTZ     DC    C' '           SPACE  1  LINE (ASA-CODE)
ZDSN     DC    CL44' '        CLUSTER-NAME
ZSPEZ    DC    C' '           * = OPEN OUTPUT   N = INDEX-LEV  GR  2
ZSO      DC    C' '           U = UPGRADE       S = SPANNED RECORDS
         DC    C' '
ZKZ      DC    C' '           A-AIX K-KSDS E-ESDS R-RRDS N-NONVSAM
*                             *-CATALOG U-USER-CAT-POINTER
ZKEYL    DC    CL4' '         KEY-LENGTH
         ORG   *-1
ZRKP     DC    CL6' '         RKP, BEI AIX AIX-RKP IN BASE-CLUSTER
ZAVGLR   DC    CL6' '         AVERAGE-LRECL
ZMAXLR   DC    CL6' '         MAXIMUM-LRECL
         ORG   *-2
ZRECTOT  DC    CL10' '        ANZAHL REC IN THE DATA-SET
         DC    C' '
ZSPA     DC    C' '           SPACE-ART   C = CYL   T = TRK
ZPRI     DC    CL6' '         PRIMARY-SPACE
ZSEC     DC    CL6' '         SECONDARY-SPACE
ZEXT     DC    CL4' '         DATA-EXTENTS
         ORG   *-1
ZFRCI    DC    CL4' '         FREE-SPACE-CI  IN PROZENT BEI DEFINE CL
         ORG   *-1
ZFRCA    DC    CL4' '         FREE-SPACE-CA  IN PROZENT BEI DEFINE CL
         ORG   *-2
ZSPLITCI DC    CL6' '         CI-SPLITS
         ORG   *-2
ZSPLITCA DC    CL6' '         CA-SPLITS
         DC    C' '
ZCREAT   DC    CL5' '         CREATION-DATE
ZEXPIR   DC    CL6' '         EXPIRATION-DATE  OR  DAT CI SIZE
         DC    C' '
ZSHR     DC    C' '           SHR OPT FUER DATA-SET
         DC    C' '
ZOWNER   DC    CL8' '         OWNER  OR  ERSTE VOLUME SERIAL NUMBER
*
*
*CAT01   DC    CL80'VCAT01  SYSPRINT-DD-KARTE FEHLT'
VCAT02   DC    CL80'VCAT02  DD-NAME FALSCH, 1. ZEICHEN NICHT ALPHA'
VCAT03   DC    CL80'VCAT03  DD-NAME UND PASSWORD FALSCH, 1. ZEICHEN NIC*
               HT ALPHA'
VCAT04   DC    CL80'VCAT04  PASSWORD FALSCH, 1. ZEICHEN NICHT ALPHA'
VCAT05   DC    CL80'VCAT05  VSAM-OPEN-ERROR X....   DD-NAME = XXXXXXXX'
*
*
ESYSIN   DS    0CL80                    SYSIN INPUT KARTEN
EDD      DC    CL8' '                   DDNAME
         DC    CL2' '
EPW      DC    CL8' '                   PASSWORD
         DC    CL2' '
         DC    CL60' '
*
TABALPHA DS    0CL256
*
*                .0.1.2.3.4.5.6.7.8.9.A.B.C.D.E.F       ERLAUBTE ZEICH.
         DC    X'01010101010101010101010101010101' .0
         DC    X'01010101010101010101010101010101' .1
         DC    X'01010101010101010101010101010101' .2
         DC    X'01010101010101010101010101010101' .3
         DC    X'01010101010101010101010101010101' .4
         DC    X'01010101010101010101010001010101' .5   5B        DOLL.
         DC    X'01010101010101010101010101010101' .6
         DC    X'01010101010101010101010000010101' .7   7B - 7C   N + K
         DC    X'01010101010101010101010101010101' .8
         DC    X'01010101010101010101010101010101' .9
         DC    X'01010101010101010101010101010101' .A
         DC    X'01010101010101010101010101010101' .B
         DC    X'01000000000000000000010101010101' .C   C1 - C9   A - I
         DC    X'01000000000000000000010101010101' .D   D1 - D9   J - R
         DC    X'01010000000000000000010101010101' .E   E2 - E9   S - Z
         DC    X'01010101010101010101010101010101' .F
*
TABHEX   DC    C'0123456789ABCDEF'      HEX-TRANSLATE-TABELLE
*
         EJECT
***********************************************************************
*                                                                     *
*              D A T A   C O N T R O L   B L O C K S                  *
*                                                                     *
***********************************************************************
*
CATACB   ACB   AM=VSAM,EXLST=CATEXLST,DDNAME=SYSRES,                   *
               MACRF=(KEY,ADR,DIR,SEQ,IN),                             *
               PASSWD=CATPW,STRNO=2
*
*
CATPW    DC    AL1(8)              PASSWORD
         DC    C'MP'
CPWVOL   DC    C'SYSRES'
         DC    CL2' '
*
         DS    0F
CDDNAME  DC    A(CPWVOL)           ADR DD-NAME
*
CATEXLST EXLST AM=VSAM,                                                *
               EODAD=(CATENDE,A),LERAD=(LERAD,N),SYNAD=(SYNAD,N)
*
LERAD    DS    0H
         ABEND 3333,DUMP
*
SYNAD    DS    0H
         ABEND 4444,DUMP
*
CRPLSEQ  RPL   AM=VSAM,ACB=CATACB,AREA=CATRSEQ,ARG=CATKEY,KEYLEN=1,    *
               OPTCD=(KEY,SEQ,KGE,GEN,LOC)
*
CRPLDIR  RPL   AM=VSAM,ACB=CATACB,AREA=CATRDIR,ARG=CATGKEY,KEYLEN=4,   *
               OPTCD=(KEY,DIR,KEQ,GEN,LOC)
*
CATKEY   DC    X'40'               GENERIC KEY LENGTH  (HIGH-KEY-RANGE)
*
         DS    0F
*
CATGKEY    DS  0CL4                GENERIC KEY LENGTH (LOW-KEY-RANGE)
         DC    X'00'
CATGKEY1 DC    XL3'00'
*
CATRSEQ  DC    F'0'                RECORD ADR  SEQ
*
         DS    0F
CATRDIR  DC    F'0'                RECORD ADR  DIR
*
CATRBA   DC    F'0'                RBA ADR
*
*
         EJECT
         PRINT NOGEN
*
*
SYSPRINT DCB   DSORG=PS,DDNAME=SYSPRINT,MACRF=PM,RECFM=FBA,            *
               LRECL=133
*
*
SYSIN    DCB   DSORG=PS,DDNAME=SYSIN,MACRF=GM,RECFM=FB,LRECL=80,       *
               EODAD=SYSINEND
*
*
         PRINT GEN
         EJECT
***********************************************************************
*                                                                     *
*        L T O R G - BEREICH                                          *
*                                                                     *
***********************************************************************
*
         LTORG
         EJECT
***********************************************************************
*                                                                     *
*        D S E C T - BEREICH                                          *
*                                                                     *
***********************************************************************
*
*
***********************************************************************
*                                                                     *
*        CLUSTER CATALOG RECORD FORMAT                                *
*                                                                     *
*              VS1 REL 6.0                   STAND  13.12.77          *
*                                                                     *
***********************************************************************
*
CLUSTER  DSECT
         DS    CL1            ZERO
CLENTIDN DS    CL3            CONTROL INTERVAL NUMBER OF THIS RECORD
CLRELIND DS    CL1            RELEASE INDICATOR  0 = NONENH. 1 = ENHANC
CLCRAVOL DS    CL6            CRA VOLUME SERIAL
CLCRAIDN DS    CL3            CRA CONTROL INTERVAL NUMBER
CLCRADEV DS    CL4            CRA DEVICE TYPE
CLCRACRE DS    CL4            CRA CREATION TIME STAMP
CLCRADIT DS    CL4            DATA/INDEX IDENTIFIER TIMESTAMP
         DS    CL18           ZERO
CLENTYPE DS    CL1            RECORD TYPE  C  =  CLUSTER
*                             RECORD TYPE  G  =  ALTERNATE INDEX
*                             RECORD TYPE  R  =  PATH
*                             RECORD TYPE  A  =  NON-VSAM
*                             RECORD TYPE  U  =  USER-CATALOG
*                             RECORD TYPE  E  =  EXTENSION RECORD
CLRECLEN DS    CL2            RECORD LENGTH
CLNOVARF DS    CL1            ALWAYS ZERO
CLNOFIXF DS    CL1            LENGTH OF THE FIXED-LENGTH FIELD
CLENTNAM DS    CL44           NAME OF THE CLUSTER DESCRIBED BY THIS REC
CLOWNERI DS    CL8            OWNER OF THE DATA SET
CLDSETCR DS    CL3            DATA SET CREATION DATE    PACKED  YDD
CLDSETEX DS    CL3            DATA SET EXPIRATION DATE  PACKED  YDD
*
CLAIXATT DS    CL1            X'80'BEI AIX UND UPGRADE
*
CLHOREXT DS    CL5            POINTER TO HORIZONTAL EXTENSION RECORD
CLNOSETF DS    CL1            THE NUMBER OF SET OF FIELD POINTERS
*
CLUSTER1 DSECT
CL5BYTPO DS    0CL5
         DS    CL1            RESERVED
CL5DISPF DS    CL2            DISPLACEMENT FROM THE BEGINNING OF ALL SE
CL5GRPCO DS    CL1            BIT   0 = 1  = FIELD IN EXTENSION REC
*                             BIT   1 = 1  = FIELD DELETED
*                             BITS  2 - 7  = GROUP CODE
CL5SEQNO DS    CL1            SEQ NUMBER OF THE SET OF FIELDS POINTED
*
*
*              GROUP CODES (DATA/INDEX)      -       (VOLUMES)
*                  1  AMDSB                       5  SPACE MAP
*                  2  CLUSTER                     6  DATA SPACE
*                  3  VOLUME   (EXT. MOEGLICH)    8  DIRECTORY ENTRY
*                  4  PASSWORD (EXT. MOEGLICH)       IN DATA SET
*
***********************************************************************
*
*
***********************************************************************
*                                                                     *
*        DATA AND INDEX CATALOG RECORD FORMAT                         *
*                                                                     *
*              VS1 REL 6.0                   STAND  13.12.1977        *
*                                                                     *
***********************************************************************
*
DATAIND  DSECT
         DS    CL1            ZERO
DENTIDNO DS    CL3            CONTROL INTERVAL NUMBER OF THIS RECORD
DRELIND  DS    CL1            RELEASE INDICATOR:
*                             0  NONENHANCED VSAM
*                             1  ENHANCED VSAM
DCRAVOL  DS    CL6            CRA VOLUME SERIAL
DCRAIDNO DS    CL3            CRA CONTROL INTERVAL NUMBER
DCRADEVT DS    CL4            CRA DEVICE TYPE
DCRACRET DS    CL4            CRA CREATION TIME STAMP
DCRADITS DS    CL4            DATA/INDEX IDENTIFIER TIMESTAMP
         DS    CL18           ZEROS
DENTYPE  DS    CL1            RECORD TYPE - D FOR DATA RECORD
*                                         - I FOR INDEX RECORD
DRECLENG DS    CL2            RECORD LENGTH
DNOVARFD DS    CL1            ALWAYS ZERO
DNOFIXFD DS    CL1            LENGTH OF THE FIXED-LENGTH FIELD
DENTNAME DS    CL44           FOR A DATA OR INDEX RECORD, THE DATA SET
*                             NAME
DOWNERID DS    CL8            OWNER OF THE DATA SET
DDSETCRD DS    CL3            DATA SET CREATION DATE    PACKED  YDD
DDSETEXD DS    CL3            DATA SET EXPIRATION DATE  PACKED  YDD
DATTR1   DS    CL1            DATA SET ATTRIBUTES:
*
*
DSPEED   EQU   X'80'          SPEED
DUNIQ    EQU   X'40'          UNIQUE
DREUS    EQU   X'20'          REUSABLE
DERASE   EQU   X'10'          ERASE
DCATRECO EQU   X'08'          THIS CATALOG IS RECOVERABLE
DNOTUPD  EQU   X'04'          INHIBIT UPDATE
DTEMPEXP EQU   X'02'          TEMPORARY EXPORT
*        EQU   X'01'          RESERVED
*
*
DATTR2   DS    CL1            DATA SET SHARING ATTRIBUTES AS FOLLOWS:
*
*
DSHR1    EQU   X'80'          00.. .... SHR 1
DSHR2    EQU   X'40'          01.. .... SHR 2
DSHR3    EQU   X'80'          10.. .... SHR 3
DSHR4    EQU   X'C0'          11.. .... SHR 4
*
*                             DATA SET SHARING ATTRIBUTES ACROSS SYSTEM
*
*        EQU   X'00'          ..00 .... RESERVED
*        EQU   X'10'          ..01 .... RESERVED
DCROSHR3 EQU   X'20'          ..10 .... SHR 3
DCROSHR4 EQU   X'30'          ..11 .... SHR 4
DNOTUSAB EQU   X'01'          .... ...1 COMPONENT IS NOT USABLE
*                             .... XXX. RESERVED
*
*
DOPENIND DS    CL1            OPEN INDICATOR FLAG X'80' OPEN FOR OUTPUT
DBUFSIZE DS    CL4            MINIMUM BUFFER SIZE
DPRIMSPA DS    CL3            PRIMARY SPACE ALLOCATION
DSCONSPA DS    CL3            SECONDARY SPACE ALLOCATION
DSPACOPT DS    CL1            SPACE OPTIONS FLAGS
*
*
DTRK     EQU   X'80'          TRACK REQUEST
DCYL     EQU   X'C0'          CYLINDER REQUEST
*                             ..XX XXXX RESERVED
*
*
DHURBADS DS    CL4            HIGH USED RBA OF THE DATA SET OR INDEX
DHARBADS DS    CL4            HIGH ALLOCATED RBA OF THE DATA SET OR IND
DLRECL   DS    CL4            FOR A DATA RECORD, THE LOGICAL RECORD
*                             SIZE (AVERAGE), IN INDEX REC ALWAYS X'FF'
DUSERINF DS    CL2            USER INFORMATION FOR THE DOS/VS
DEXCPEXI DS    CL8            EXCEPTION EXIT
DHOREXT  DS    CL5            POINTER TO HORIZONTAL EXTENSION RECORD
*                             THIS FIELD CONT. ZERO IF NO EXT. REC
DNOSETFL DS    CL1            THE NUMBER OF SET OF FIELDS POINTERS
*
DATAIND1 DSECT
D5BYTPOI DS    0CL5
D5BYTE3  DS    0CL3
         DS    CL1            RESERVED
D5DISPFL DS    CL2            DISPLACEMENT OF
D5GRPCOD DS    CL1            IF BIT 1 ON = FIELD DELETED
*                             BITS 2 - 7  = GROUP CODE
D5SEQNOF DS    CL1            SEQUENCE NUMBER OF THE SET OF FIELDS POIN
*
*              GROUP CODES (DATA/INDEX)      -       (VOLUMES)
*                  1  AMDSB                       5  SPACE MAP
*                  2  CLUSTER                     6  DATA SPACE
*                  3  VOLUME   (EXT. MOEGLICH)    8  DIRECTORY ENTRY
*                  4  PASSWORD (EXT. MOEGLICH)       IN DATA SET
*
***********************************************************************
*
*
***********************************************************************
*                                                                     *
*        EXTENSION CATALOG RECORD FORMAT                              *
*                                                                     *
*              VS1 REL 6.0                   STAND  13.12.77          *
*                                                                     *
***********************************************************************
*
EXTENS   DSECT
         DS    CL1            ZERO
EXENTIDN DS    CL3            CONTROL INTERVAL NUMBER OF THIS RECORD
EXRELIND DS    CL1            RELEASE INDICATOR  0 = NONENH. 1 = ENHANC
EXCRAVOL DS    CL6            CRA VOLUME SERIAL
EXCRAIDN DS    CL3            CRA CONTROL INTERVAL NUMBER
EXCRADEV DS    CL4            CRA DEVICE TYPE
EXCRACRE DS    CL4            CRA CREATION TIME STAMP
         DS    CL22           ZERO
EXENTYPE DS    CL1            RECORD TYPE  E  =  EXTENSION RECORD
*                             RECORD TYPE  W  =  EXTENSION RECORD
EXRECLEN DS    CL2            RECORD LENGTH
EXNOVARF DS    CL1            ALWAYS ZERO
EXNOFIXF DS    CL1            LENGTH OF THE FIXED-LENGTH FIELD
EXHOREXT DS    CL5            POINTER TO HORIZONTAL EXTENSION RECORD
EXNOSETF DS    CL1            THE NUMBER OF SET OF FIELD POINTERS
*
EXTENS1  DSECT
EX5BYTPO DS    0CL5
         DS    CL1            RESERVED
EX5DISPF DS    CL2            DISPLACEMENT FROM THE BEGINNING OF ALL SE
EX5GRPCO DS    CL1            BIT   0 = 1  = FIELD IN EXTENSION REC
*                             BIT   1 = 1  = FIELD DELETED
*                             BITS  2 - 7  = GROUP CODE
EX5SEQNO DS    CL1            SEQ NUMBER OF THE SET OF FIELDS POINTED
*
*
*              GROUP CODES (DATA/INDEX)      -       (VOLUMES)
*                  1  AMDSB                       5  SPACE MAP
*                  2  CLUSTER                     6  DATA SPACE
*                  3  VOLUME   (EXT. MOEGLICH)    8  DIRECTORY ENTRY
*                  4  PASSWORD (EXT. MOEGLICH)       IN DATA SET
*
***********************************************************************
*
*
***********************************************************************
*                                                                     *
*        AMDSB - ACCESS METHOD DATA SET STATISTICS BLOCK              *
*                                                                     *
*              SET OF FIELDS FORMAT          TYPE GROUP CODE  1       *
*                                                                     *
*              VS1 REL 6.0                   STAND  13.12.1977        *
*                                                                     *
***********************************************************************
*
AMDSB    DSECT
AMDCONTR DS    0CL2           CONTROL INFORMATIONEN
AMDVARFD DS    CL1            COUNT OF THE NUMBER OF VARIABLE-LENGTH FD
AMDVARDL DS    CL1            HEXA DISPL TO THE FIRST VARIABLE-LENGTH F
AMDSBID  DS    CL1            AMDSBID IDENTIFIER, X'60'
AMDATTR  DS    CL1            ATTRIBUTTES OF THE DATA SET:
*
*
AMDDST   EQU   X'80'          KEY-SEQUENCED DATA SET
*              X'00'          ENTRY-SEQUENCED DATA SET
AMDWCK   EQU   X'40'          CHECK EACH RECORD WHEH IT IS WRITTEN
AMDSDT   EQU   X'20'          SEQUENCE SET IS STORED WITH THE DATA AND
*                             IS REPLICATED
AMDREPL  EQU   X'10'          ALL INDEX RECORDS ARE REPLICATED-DUPLICA-
*                             TED AROUND THE TRACK
AMDORDER EQU   X'08'          USE THE VOLUMES IN SAME ORDER AS IN THE
*                             VOLUME LIST
AMDRANGE EQU   X'04'          THE DATA SET IS DIVIDED INTO KEY RANGES
AMDRRDS  EQU   X'02'          RELATIVE RECORD DATA SET
AMDSPAN  EQU   X'01'          THE DATA SET CONTAINS SPANNED RECORDS
*
*
AMDLEN   DS    CL2            LENGTH OF THE AMDSB
AMDNEST  DS    CL2            NUMBER OF INDEX ENTRIES IN THE INDEX SECT
*
         ORG   *-2
AMDAXRKP DS    CL2            RELATIVE KEY POSITION OF THE ALTERN. KEY
*
AMDRKP   DS    CL2            RELATIVE KEY POSITION
AMDKEYLN DS    CL2            KEY LENGTH
AMDPCTCA DS    CL1            PERCENTAGE OF FREE CONTROL INTERVALS IN
*                             THE CONTROL AREA
AMDPCTCI DS    CL1            PERCENTAGE OF FREE BYTES IN THE CONTROL
*                             INTERVAL
AMDCIPCA DS    CL2            NUMBER OF CONTROL INTERVALS IN A CONTROL
*                             AREA
AMDFSCA  DS    CL2            NUMBER OF FREE CONTROL INTERVALS IN A
*                             CONTROL AREA
AMDFSCI  DS    CL4            NUMBER OF FREE BYTES IN A CONTROL INTERVA
AMDCINV  DS    CL4            CONTROL INTERVAL SIZE
AMDLRECL DS    CL4            MAXIMUM RECORD SIZE
AMDHLRBA DS    CL4            RELATIVE BYTE ADDRESS (RBA) OF THE HIGH-
*                             LEVEL INDEX-RECORD
         ORG   *-4
AMDNSLOT DS    CL4            NUMBER OF RECORD SLOTS PER CONTROL INTERV
AMDSSRBA DS    CL4            RELATIVE BYTE ADDRESS (RBA) OF THE FIRST
*                             SEQUENCE-SET RECORD
*
         ORG   *-4
AMDMAXRR DS    CL4            MAXIMUM VALID RELATIVE RECORD NUMBER
*
AMDPARDB DS    CL4            ADDRESS OF THE FIRST ARDB
AMDSTAT  DS    CL56           DATA SET STATISTICS
*
         ORG   *-56
AMDATTR3 DS    CL1            ATTRIBUTES OF THE DATA SET
*
*
AMDUNQ   EQU   X'80'          THE DATA SET HAS:
*                             0  UNIQUE KEYS
*                             1  NONUNIQUE KEYS
AMDFAULT EQU   X'40'          THE DATA SET IS STAGED:
*                             0  AT OPEN TIME, IF REQUIRED
*                             1  BY CYLINDER FAULT
AMDBIND  EQU   X'20'          THE DATA SET IS:
*                             0  NOT BOUND
*                             1  STAGED AND BOUND
AMDWAIT  EQU   X'10'          AFTER DESTAGING IS BEGUN, CONTROL IS RET-
*                             URND TO THE PROGRAM THAT IS CLOSING THE
*                             DATA SET:
*                             0  IMMEDIATELY
*                             1  AFTER DESTAGING IS FINISHED
AMDLM    EQU   X'08'          0  LOAD MODE, OR DATA SET IS NOT LOADED
*                             1  DATA SET IS LOADED
*                             .... .XXX  RESERVED
*
*
         DS    CL7            RESERVED
AMDSTSP  DS    CL8            OSIVS SYSTEM TIMESTAMP
AMDNIL   DS    CL2            NUMBER OF INDEX LEVELS
AMDNEXT  DS    CL2            NUMBER OF EXTENTS IN THE DATA SET
AMDNLR   DS    CL4            NUMBER OF USER-SUPPLIED RECORDS IN THE DS
AMDDELR  DS    CL4            NUMBER OF DELETED RECORDS
AMDIREC  DS    CL4            NUMBER OF INSERTED RECORDS
AMDUPR   DS    CL4            NUMBER OF UPDATED RECORDS
AMDRETR  DS    CL4            NUMBER OF RETRIEVED RECORDS
AMDASPA  DS    CL4            NUMBER OF BYTES OF FREE SPACE IN THE DS
AMDNCIS  DS    CL4            NUMBER OF TIMES A CONTROL INTERVAL WAS
*                             SPLIT
AMDNCAS  DS    CL4            NUMBER OF TIMES A CONTROL AREA WAS SPLIT
AMDEXCP  DS    CL4            NUMBER OF TIMES EXCP WAS ISSUED BY VSAM
*                             I/O ROUTINES
*
***********************************************************************
*
***********************************************************************
*                                                                     *
*        ASSOCIATION  CLUSTER, DATA, INDEX                            *
*                                                                     *
*              SET OF FIELDS FORMAT          TYPE GROUP CODE  2       *
*                                                                     *
*              VS1 REL 6.0                   STAND  13.12.1977        *
*                                                                     *
***********************************************************************
*
T2REC    DSECT
T2CONTR  DS    0CL2           CONTROL INFORMATION
T2VARFD  DS    CL1            COUNT OF THE NUMBER OF VARIABLE-LENGTH FD
T2VARDL  DS    CL1            HEXA DISPL TO THE FIRST VARIABLE-LENGTH F
T2TYPE   DS    CL1            C  =  ASSOCIATED WITH A CLUSTER RECORD
*                             G  =  ASSOCIATED WITH A ALTERNATE INDEX
*                             Y  =  ASSOCIATED WITH A UPGRADE SET
*                             I  =  ASSOCIATED WITH A INDEX RECORD
*                             D  =  ASSOCIATED WITH A DATA RECORD
T2NAME   DS    CL3            CONTROL INTERVAL NUMBER
*
***********************************************************************
*
*
***********************************************************************
*                                                                     *
*        VOLUME INFORMATION                                           *
*                                                                     *
*              SET OF FIELDS FORMAT          TYPE GROUP CODE  3       *
*                                                                     *
*              VS1 REL 6.0                   STAND  13.12.1977        *
*                                                                     *
***********************************************************************
*
T3REC    DSECT
T3CONTR  DS    0CL2           CONTROL INFORMATION
T3VARFD  DS    CL1            COUNT OF THE NUMBER OF VARIABLE
T3VARDL  DS    CL1            HEXA DISPL TO THE FIRST VARIABLE-LENGTH F
T3DEYTYP DS    CL4            DEVICE TYPE
T3VOLSER DS    CL6            VOLUME SERIAL NUMBER
T3FILESE DS    CL2            FILE SEQUENCE NUMBER
T3VOLFLG DS    CL1            VOLUME FLAGS, AS FOLLOWS:
*
*
T3PRIME  EQU   X'80'          PRIME     ERKLAERUNG SIEHE VSAM-PLM
T3CANDID EQU   X'40'          CANDIDATE ERKLAERUNG SIEHE VSAM-PLM
T3OVERFL EQU   X'20'          OVERFLOW  ERKLAERUNG SIEHE VSAM-PLM
*                             ...X XXXX RESERVED
*
*
T3NOEXTN DS    CL1            NUMBER OF EXTENTS ALLOCATED IN THIS SET
T3HKRBA  DS    CL4            RBA OF THE DATA CONTROL INTERVAL WITH THE
*                             HIGH KEY
T3HURBA  DS    CL4            HIGH-USED RBA
T3HARBA  DS    CL4            HIGH-ALLOCATED RBA
T3PHYBLK DS    CL4            BLOCKSIZE
T3NOBLKT DS    CL2            NUMBER OF BLOCKS PER TRACK
T3NOTRKA DS    CL2            NUMBER OF TRACKS PER ALLOCATION UNIT
T3ITYPEX DS    CL1            FLAGS:
*
*
T3IMBED  EQU   X'80'          IN AN INDEX-REC: SEQ-SET IS WITH THE DATA
T3NOTPRE EQU   X'40'          THE EXTENTS ARE NOT PREFORMATTED
*                             ..XX XXXX RESERVED
*
*
T3DSDIRS DS    CL2            DATA SET DIRECTORY SEQ NO IN THE VOL REC
T3LOKEYV DS    0CL2           LOW KEY ON THE VOLUME  (VARIABLE)
T3LOKLEN DS    CL2            LENGTH OF THE FIELD  MAX. 64 BYTES
T3HIKEYV DS    0CL2           HIGH KEY ON THE VOLUME  (VARIABLE)
T3HIKLEN DS    CL2            LENGTH OF THE FIELD  MAX. 64 BYTES
T3EXTENT DS    0CL22
T3EXTLEN DS    CL2            LENGTH OF THE FIELD
T3EXT    DS    CL20           ERKLAERUNG S. VSAM-PLM
*
***********************************************************************
*
*
***********************************************************************
*                                                                     *
*        PASSWORD                                                     *
*                                                                     *
*              SET OF FIELDS FORMAT          TYPE GROUP CODE  4       *
*                                                                     *
*              VS1 REL 6.0                   STAND  13.12.1977        *
*                                                                     *
***********************************************************************
*
T4REC    DSECT
T4CONTR  DS    0CL2           CONTROL INFORMATION
T4VARFD  DS    CL1            COUNT OF THE NUMBER OF VARIABLE-LENGTH FD
T4VARDL  DS    CL1            HEXA DISPL TO THE FIRST VARIABLE-LENGTH F
T4PASSWO DS    0CL32
T4MPW    DS    CL8            MASTER PASSWORD
T4CIPW   DS    CL8            CONTROL INTERVAL PASSWORD
T4UPDATE DS    CL8            UPDATE PASSWORD
T4READ   DS    CL8            READ PASSWORD
T4PASSPR DS    CL8            PASSWORD PROMPTING CODE NAME
T4PASSAT DS    CL2            MAX. NUMBER OF ATTEMPTS ALLOWED FOR T. OP
T4USVRMD DS    CL8            NAME OF USER'S SECURITY-VERIFICATION MOD
T4USERAR DS    0CL256         USER-AUTHORIZATION RECORD  MAX. 256 BYTES
*
***********************************************************************
*
         END
