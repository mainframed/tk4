SYSASM2  TITLE 'SYSASM2, ASHEGE  MOVE THE ASM-LIST TO SYSOUT'
*
***   BESCHREIBUNG
*
*  DIESES PROGRAMM WIRD VOM ASSEMBLER-PROMPTER VIA INPUT-STACK
*  AUFGERUFEN. DER TERMINALBENUTZER WIRD GEFRAGT, IN WELCHE
*  SYSOUT-KLASSE ER DIE ASSEMBLER-LISTE GEBRACHT HABEN WILL.
*
*
*
SYSASM2  CSECT
         PRINT GEN
         GADBEGIN R12,R11,SAVE=RENT
         LR    R7,R1
         USING CPPL,R7
         SPACE
         GETMAIN R,LV=LDEFIN,SP=1
         LR    R2,R1
         LA    R3,LDEFIN
         SR    R5,R5
         MVCL  R2,R4
*
         LR    R8,R1
         USING DEFIN,R8
*
         LA    R1,PARMLIST
         USING DAPL,R1        BUILD DAIR-PARAMETER-BLOCK
         MVC   DAPLUPT,CPPLUPT
         MVC   DAPLECT,CPPLECT
         LA    R2,ECB
         ST    R2,DAPLECB
         MVC   DAPLPSCB,CPPLPSCB
         LA    R10,DAPB
         ST    R10,DAPLDAPB
*
*
         LOAD  EP=IKJDAIR
         ST    R0,ADAIR
*
*
PGM10    DS    0H
         MVC   MSGBUF,=CL60' '
         MVC   MSGBUF(L'MSG1),MSG1
         LA    R1,MSGBUF
         LA    R0,L'MSGBUF
         TPUT  (R1),(R0)      ASK FOR SYSOUT-CLASS
         SPACE
         LA    R0,L'INBUF
         LA    R1,INBUF
         TGET  (R1),(R0)
         OC    INBUF(2),BLANKS
         CLI   INBUF,C'P'
         BE    PGM20
         CLI   INBUF,C'A'
         BE    PGM20
         CLI   INBUF,C'F'
         BE    PGM20
         CLI   INBUF,C' '
         BE    EXIT
         B     PGM10
*
         ABEND (R1)
         SPACE
*
*   ALLOCATE THE INPUT-DATA-SET /DDN=INPSQ1 / DSN=XXX.ASM.ASM
*
PGM20    DS    0H
         LA    R10,DAPB
         USING DAPB08,R10
         XC    DAPB(L'DAPB),DAPB
         MVI   DA08CD+1,X'08'
         MVC   DSN(L'DSN),=CL50' '
         MVC   DSN(7),=C'ASM.ASM'
         MVI   DSNLEN+1,X'07'
         LA    R2,DSNBUF
         ST    R2,DA08PDSN
         MVC   DA08DDN,=C'INPSQ1  '
         MVC   DA08UNIT,BLANKS
         MVC   DA08SER,BLANKS
         MVC   DA08MNM,BLANKS
         MVI   DA08DSP1,DA08OLD
         MVI   DA08DPS2,DA08DEL
         MVI   DA08DPS3,DA08DELE
         MVI   DA08CTL,DA08UID
         LA    R1,PARMLIST
*
         L     R15,ADAIR
         BALR  R14,R15
         LTR   R15,R15
         BZ    PGM30
         LA    R1,300(R15)
         ABEND (R1)
         SPACE
*
*  LOOK FOR ASA OR MACHINE-CHARACTERS
*
PGM30    DS    0H
         MVC   INP,KINP
         MVC   WORK(1),OPENIN
         OPEN  INP,MF=(E,WORK)
         GET   INP
         ST    R1,SF1
         SPACE
* ASA-CHARACTERS ARE HEX F0-F9,40,50,60
         SPACE
         TM    0(R1),X'F0'
         BO    PGM35
         CLI   0(R1),X'40'
         BE    PGM35
         CLI   0(R1),X'50'
         BE    PGM35
         CLI   0(R1),X'60'
         BE    PGM35
         CLI   0(R1),X'00'
         BE    PGM35
*
         MVI   WORKFM,B'10010010'       RECFM IS FBM
         B     PGM40
*
PGM35    MVI   WORKFM,B'10010100'       RECFM IS FBA
PGM40    DS    0H
         CLI   INBUF,C'P'
         BE    PGM50
         CLI   INBUF,C'A'
         BE    PGM50
*
* COMPLETE THE SYSOUT FOR FICH
*
         LA    R4,3993                  SET BLOCKSIZE
         MVI   WORKFM,B'10010000'       RECFM IS FB
         BAL   R14,ALATR                ALLOC ATR.-LIST
         B     PGM52
*
* COMPLETE SYSOUT FOR PRINTING
*
PGM50    DS    0H
         LH    R4,INP+82                GET LRECL
         MH    R4,=H'100'               SET BLOCKSIZE
         BAL   R14,ALATR                ALLOC ATR.-LIST
         SPACE
*
* ALLOCATE THE SYSOUT DATASET / DDN=OUTSQ1
*
PGM52    DS    0H
         LA    R10,DAPB
         XC    DAPB(L'DAPB),DAPB
         USING DAPB30,R10
         MVI   DA30CD+1,X'30'
         MVC   DA30DDN,=C'OUTSQ1  '
         MVC   DA30UNIT,BLANKS
         MVC   DA30SER,BLANKS
         LA    R2,10
         ST    R2,DA30PQTY
         LA    R2,100
         ST    R2,DA30SQTY
         MVC   DA30PGNM,BLANKS
         MVC   DA30FORM,BLANKS
         MVC   DA30OCLS,INBUF
         MVI   DA30CTL,DA30TRKS+DA30ATRL
         MVC   DA30ALN,=C'PRINTACB'
         LA    R1,PARMLIST
*
         L     R15,ADAIR
         BALR  R14,R15
         LTR   R15,R15
         BZ    PGM55
         LA    R1,200(R15)
         ABEND (R1)
         SPACE
PGM55    DS    0H
         L     R2,SF1
         MVC   OUT,KOUT
         MVC   WORK(1),OPENOUT
         OPEN  OUT,MF=(E,WORK)
         SPACE
         PUT   OUT,(R2)                 WRITE FIRST RECORD
*
* MOVE THE REST OF THE ASM-LIST TO SYSOUT
*
PGM60    DS    0H
         GET   INP
         LR    R2,R1
         PUT   OUT,(R2)
         B     PGM60
         SPACE
*
* END OF INPUT
*
PGM65    DS    0H
         MVC   WORK(1),CLOSE
         CLOSE INP,MF=(E,WORK)
         CLOSE OUT,MF=(E,WORK)
         SPACE
*
*   FREE THE DATA-SETS
*
PGM70    DS    0H
         LA    R10,DAPB
         USING DAPB18,R10
         XC    DAPB(L'DAPB),DAPB
         MVI   DA18CD+1,X'18'
         MVC   DA18DDN,=C'INPSQ1  '
         MVC   DA18MNM,BLANKS
         LA    R2,DSNBUF
         ST    R2,DA18PDSN
         MVI   DA18DPS2,DA18DEL
         MVI   DA18CTL,DA18UID
         LA    R1,PARMLIST
*
         L     R15,ADAIR
         BALR  R14,R15
         LTR   R15,R15
         BZ    PGM80
         LA    R1,500(R15)
         ABEND (R1)
         SPACE
*
PGM80    DS    0H
         XC    DAPB(L'DAPB),DAPB
         MVI   DA18CD+1,X'18'
         MVC   DA18DDN,=C'OUTSQ1  '
         MVC   DA18MNM,BLANKS
         MVC   DA18SCLS,INBUF
         MVC   DA18JBNM,BLANKS
         LA    R1,PARMLIST
*
         L     R15,ADAIR
         BALR  R14,R15
         LTR   R15,R15
         BZ    PGM90
         LA    R1,600(R15)
         ABEND (R1)
         SPACE
PGM90    DS    0H
*
*  FREE THE ATTRIBUTE-LIST
*
         XC    DAPB(L'DAPB),DAPB
         USING DAPB34,R10
         MVI   DA34CD+1,X'34'
         MVC   DA34NAME,=C'PRINTACB'
         LA    R3,ACB
         ST    R3,DA34ADDR
         MVI   DA34CTRL,DA34UNCH
         LA    R1,PARMLIST
*
         L     R15,ADAIR
         BALR  R14,R15
         LTR   R15,R15
         BZ    PGM100
         LA    R1,700(R15)
         ABEND (R1)
         SPACE
PGM100   DS    0H
EXIT     DS    0H
*
         LR    R1,R8
         FREEMAIN R,LV=LDEFIN,A=(R1),SP=1
*
         GADEOJ
         SPACE
*
*  ALLOCATE THE ATTR.-LIST
*
ALATR    DS    0H
         ST    R14,ALATRR14
         LA    R10,ACB
         XC    ACB(L'ACB),ACB
         LH    R3,INP+82                GET LRECL FROM INPUT
         STH   R3,40(R10)
         STH   R4,38(R10)     SET BLOCKSIZE
         MVC   36(1,R10),WORKFM  SET RECFM
         LA    R10,DAPB
         XC    DAPB(L'DAPB),DAPB
         USING DAPB34,R10
         MVI   DA34CD+1,X'34'
         MVC   DA34NAME,=C'PRINTACB'
         LA    R3,ACB
         ST    R3,DA34ADDR
         MVI   DA34CTRL,DA34CHN
         LA    R1,PARMLIST
*
         L     R15,ADAIR
         BALR  R14,R15
         LTR   R15,R15
         BZ    ALATR9
         LA    R1,100(R15)
         ABEND (R1)
         SPACE
ALATR9   DS    0H
         L     R14,ALATRR14
         BR    R14
         SPACE
*
*  KONSTANTEN
*
         SPACE
MSG1     DC    CL51'ENTER SYSOUT-CHARACTER FOR THE ASM-LIST OR BLANK'
BLANKS   DC    CL8' '
KINP     DCB   DDNAME=INPSQ1,DSORG=PS,MACRF=GL,EODAD=PGM65
LINP     EQU   *-KINP
KOUT     DCB   DDNAME=OUTSQ1,DSORG=PS,MACRF=PM
LOUT     EQU   *-KOUT
OPENOUT  OPEN  (,OUTPUT),MF=L
OPENIN   OPEN  (,INPUT),MF=L
CLOSE    CLOSE (,),MF=L
         LTORG *
*
*  DEFINITIONEN, ADRESSIERUNG VIA REGISTER 8
*
         SPACE
DEFIN    DSECT
*
PARMLIST DS    7F
ECB      DS    F
IOPL     DS    3A
IOPLIOPB DS    A
DAPB     DS    CL90
ACB      DS    CL50
ADAIR    DS    A
DSNBUF   DS    0CL46
DSNLEN   DS    H
DSN      DS    CL44
WORK     DS    A
OUT      DS    CL(LOUT)
INP      DS    CL(LINP)
WORKFM   DS    CL1
MSGBUF   DS    CL60
INBUF    DS    CL20
ALATRR14 DS    F
SF1      DS    A
*
LDEFIN   EQU   *-DEFIN
         SPACE 3
*
*  DSECTS
*
         IKJCPPL
         SPACE
         IKJDAPL
         SPACE
         IKJDAP08
         SPACE
         IKJDAP18
         SPACE
         IKJDAP30
         SPACE
         IKJDAP34
         SPACE
         IKJPSCB
         SPACE
         END
   PUNCH ' NAME TESTALI(R)'
         END
