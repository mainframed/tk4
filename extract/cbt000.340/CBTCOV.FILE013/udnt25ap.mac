  /*  PLOTT UEBER PARTITION AUSLASTUNG CPU, PAGE, EXCP 'S  */
-PARTACT:

         PROC (PARM) OPTIONS  (MAIN);
         DCL PARM CHAR (100) VAR;
         ON ERROR CALL PLIDUMP ('TFBHS','ERR HAPRO');
         DCL TZA BIN FIXED (31) INIT (0);
         DCL TZ FIXED (3) INIT (0);
         DCL 1 XPARM BASED (P1),
              2 PL BIN FIXED (15),  /* PARM LAENGE */
              2 CW CHAR (15);
         P1 = ADDR (PARM);
         DCL CPLUPRO BIT (8) INIT ((8)'1'B);
         DCL CAPOS   BIT (8) INIT ((8)'1'B);
         DCL MB CHAR (1);
         DCL ZVW BIN FIXED (31);
         DCL PW PIC '(15)9';
         DCL CPW CHAR (15) DEF PW;
         DCL PX BIN FIXED (15) INIT (0);
         DCL 1 STR,
              2 CPU BIN FIXED (31),
              2 PAGE BIN FIXED (31),
              2 EXCP BIN FIXED (31),
              2 MIN BIN FIXED (31),
              2 TAG PIC '99999';
         STR = '';
         DCL VW BIN FIXED (31) INIT (0);
         DCL CVW CHAR (4) BASED (P2);
         P2 = ADDR (VW);
         DCL 1 BVW BASED (P2),
              2 XYZ   BIT (24),
              2 DSR  BIT (4),
              2 PNO  BIT (4);
         DCL STMIN BIN FIXED (31);
         DCL DIF BIN FIXED (31);
         DCL E CHAR (2000) VAR;
         DCL INPUT FILE RECORD INPUT;
         OPEN FILE (INPUT);
         ON ENDFILE (INPUT) GO TO EOF;
          DCL  1     STX,
                 2   UETEXT   CHAR (30),
                 2   MDRZEI   FIXED (1),          /* ANZAHL DER MEHR-*/
                                                  /* FACHDRUCKZEILEN */
                 2   TABMDR (9),                  /* TABELLE UEBER   */
                                                  /* INHALT DER MEHR-*/
                                                  /* FACHDRUCKZEILEN */
                   3 ABKUER CHAR (1),             /* Z.B. C,P,I,O,R  */
                   3 TEXT   CHAR (20),            /* Z.B. CPU,PAGE IN*/
                   3 MAXIMW FIXED (15,1),         /* 100 %           */
                 2   ANZPART  FIXED (3),          /* IN-OUT-DATEIEN  */
                 2   TABPART (99)  CHAR (8);      /* P01 - P99       */
    STX = '';
  DCL DATTAB (9) CHAR (1) INIT('1',
  '2',
  '3',
  '4',
  '5',
  '6',
  '7',
  '8',
  '9');
          DCL  1    ABER,
                 2  KZ     CHAR (1),
              2 JOB CHAR (8),
              2 POINT1 CHAR (1) INIT ('.'),
              2 PGM CHAR (8),
           2 SIZE PIC 'ZZZZ9',
              2 KBYTE CHAR (3) INIT ('K '),
              2 STD PIC '99',
              2 POINT2 CHAR (1) INIT ('.'),
              2 MINUTEN PIC '99',
              2 POINT3 CHAR (1) INIT ('.'),
                 2  DAT    PIC '99999',
                 2  ZAHL   (9) FIXED  (15,1);
          DCL INDAT (9) FILE;
  DCL (D1,D2,D3,D4,D5,D6,D7,D8,D9) FILE;
  INDAT (1) = D1;
  INDAT (2) = D2;
  INDAT (3) = D3;
  INDAT (4) = D4;
  INDAT (5) = D5;
  INDAT (6) = D6;
  INDAT (7) = D7;
  INDAT (8) = D8;
  INDAT (9) = D9;
         DCL 1 ZT (100),
              2 SIZE BIN FIXED (31),
              2 JOB CHAR (8),
              2 PGM CHAR (8);
         DCL 1 X,
              2 CPU BIN FIXED (31),
              2 EXCP BIN FIXED (31),
              2 PAGE BIN FIXED (31);
-        UETEXT = 'ANALYSE PRO TASK';
         MDRZEI = 3;
         ABKUER(2) = 'P';
         ABKUER(1) = 'C';
         ABKUER(3) = 'E';
         TEXT (1) = 'CPU IN SECUNDEN';
         TEXT (3) = 'EXTERNE ZUGRIFFE';
         TEXT (2) = 'PAGES (OUT + IN ) ';
         DCL ES CHAR (80); /* EBER FUER SYSIN  */
         DCL INZ FIXED BIN (31) INIT (0);
         DCL ZIFTAB CHAR (10) INIT ('0123456789');
         DCL 1 STAB (9),
              2 DATUM PIC '99999',
              2 VONSS PIC '99',
              2 VONMM  PIC '99',
              2 BISSS  PIC '99',
              2 BISMM  PIC '99';
         DCL FBIT BIT (8) INIT ((8)'0'B);
         DCL 1 C (9) DEF STAB,
              2 C1 CHAR (5),
              2 C2 CHAR (2),
              2 C3 CHAR (2),
              2 C4 CHAR (2),
              2 C5 CHAR (2);
         DCL EIN BIT (8) INIT ((8)'1'B);
         DCL AUS BIT (8) INIT ((8)'0'B);
         DCL VON (9) BIN FIXED (31);
         DCL BIS (9) BIN FIXED (31);
         DCL SYSIN FILE RECORD INPUT;
         ON ENDFILE (SYSIN) GO TO VLK;
         OPEN FILE (SYSIN);
         STAB = '';
-LSYSIN:
         IF INZ = 0 THEN GO TO RSYSIN;
         ABER.DAT = DATUM (INZ);
  BIS(INZ) = JJ * 525600 + TTT * 1440 + BISSS(INZ) * 60 + BISMM (INZ);
  VON(INZ) = JJ * 525600 + TTT * 1440 + VONSS(INZ) * 60 + VONMM (INZ);
0RSYSIN:
         READ FILE (SYSIN) INTO (ES);
         INZ = INZ + 1;
0        IF INZ > 9 THEN DO;
                    PUT SKIP LIST ('KARTENZAHL > 9; NUR 9 MOEGLICH');
                    GO TO VLK;
                    END;
0        PUT SKIP (3) LIST  (INZ,'. KARTE = ',ES);
-        I = INDEX (ES,'DATUM=');
0        IF I = 0 THEN DO;
                  PUT SKIP LIST ('DATUM=  FEHLT');
                  FBIT = EIN;
                   GO TO X1;
                  END;
         L = VERIFY (SUBSTR(ES,I+6,5),ZIFTAB);
0        IF L ^= 0 THEN DO;
                   PUT SKIP LIST ('GEFORDERTS DATUM NICHT NUMERISCH');
                   FBIT = EIN;
                   END;
                   ELSE C1(INZ) = SUBSTR(ES,I+6,5);
-        /* STARTZEIT  =  VON=  PRUEFEN  */
 X1:
0        I = INDEX(ES,'VON=');
/        IF I = 0 THEN DO;
                  PUT SKIP LIST ('VON=    FEHLT');
                  FBIT = EIN;
                   GO TO X2;
                  END;
0        L = VERIFY(SUBSTR(ES,I+4,4),ZIFTAB);
0        IF L ^= 0 THEN DO;
                   PUT SKIP LIST ('VON= ZEIT NICHT NUMERISCH');
                   FBIT = EIN;
                   END;
                   ELSE DO;
                   C2 (INZ) = SUBSTR(ES,I+4,2);
                   C3 (INZ) = SUBSTR(ES,I+6,2);
                   END;
-        /* ENDEZEIT  =  BIS=  PRUEFEN  */
 X2:
0        I = INDEX(ES,'BIS=');
0        IF I = 0 THEN DO;
                  PUT SKIP LIST ('BIS=    FEHLT');
                  FBIT = EIN;
                   GO TO X3;
                  END;
0        L = VERIFY(SUBSTR(ES,I+4,4),ZIFTAB);
         IF L ^= 0 THEN DO;
                   PUT SKIP LIST ('BIS= ZEIT NICHT NUMERISCH');
                   FBIT = EIN;
                   END;
                   ELSE DO;
                   C4(INZ) = SUBSTR(ES,I+4,2);
                   C5(INZ) = SUBSTR(ES,I+6,2);
                   END;
 X3:
0        IF C2(INZ) ×× C3(INZ) = (4)'0' ×
            C4(INZ) ×× C5(INZ) = (4)'0' THEN GO TO LSYSIN;
0        IF C4(INZ) < C2 (INZ) THEN GO TO FZEIT;
0
         IF C4(INZ) = C2 (INZ) & C5(INZ) < C3(INZ) THEN DO;
0FZEIT:
         PUT SKIP LIST ('VON=  IST GROESSER  BIS=');
         FBIT = EIN;
                                                   END;
         GO TO LSYSIN;
-VLK:
         IF FBIT THEN GO TO FEIERABEND;
         IF INZ = 0 THEN DO; /* KEINE SEL. KARTEN  */
                    IF PL = 0 THEN DO; /* KEINE PARM - ANGABE  */
                              CAPOS = EIN;
                              CPLUPRO = AUS;
                              GO TO WEITER;
                              END;
                    IP = INDEX(PARM,'GTASK');
                    IF IP = 0 THEN CAPOS = AUS;
                              ELSE CAPOS = EIN;
                    IP = INDEX(PARM,'ETASK');
                    IF IP = 0 THEN CPLUPRO = AUS;
                              ELSE CPLUPRO = EIN;
                    GO TO WEITER;
                    END;
-        /* MINDESTENS EINE SEL. KARTE  */
         IF PL = 0 THEN DO; /* KEINE PARMANGEABE  */
                   CAPOS = AUS;
                   CPLUPRO = EIN;
                   GO TO WEITER;
                   END;
0        IP = INDEX(PARM,'GTASK');
         IF IP = 0 THEN CAPOS = AUS;
                   ELSE CAPOS = EIN;
         IP = INDEX(PARM,'ETASK');
         IF IP = 0 THEN CPLUPRO = AUS;
                   ELSE CPLUPRO = EIN;
- WEITER:
         DCL HI (9) FIXED (15) INIT (0);
         DCL PART PIC '99';
         DCL CPART CHAR (2) DEF PART;
         HI = '';
         DCL Z     BIN FIXED (31) INIT (0);
         DCL PZ    BIN FIXED (31) INIT (0);
         DCL UCBS  BIN FIXED (31) INIT (0);
         DCL STELLE BIN FIXED (31) INIT (0);
         DCL KS    BIN FIXED (31) INIT (1);
         DCL PKZ CHAR (1);
         DCL ZFIX FIXED (7);
         DCL CFIX CHAR (4) BASED (PFIX);
         PFIX = ADDR (ZFIX);
         DCL 1 DTAG DEF ABER.DAT,
              2 JJ PIC '99',
              2 TTT PIC '999';
         DCL 1 AZEIT,
              2 MIN BIN FIXED (31),
              2 TAG FIXED (7);
         DCL CTAG CHAR (4) BASED (PAZEIT);
         PAZEIT = ADDR (AZEIT.TAG);
         DCL ETAG FIXED (7);
         DCL CETAG CHAR (4) BASED (PEZEIT);
         PEZEIT = ADDR (ETAG);
1LES:
         READ FILE (INPUT) INTO (E);
         IF UNSPEC(SUBSTR(E,2,1)) ^= '00000100'B THEN GO TO LES;
   /*  UEBERLESEN VON P0.  */
         IF UNSPEC(SUBSTR(E,83,1)) = '00010000'B THEN GO TO LES;
   /*  UEBERLESEN VON 0K.  */
         IF UNSPEC(SUBSTR(E,75,2)) = (16)'0'B THEN GO TO LES;
         IF PZ = 0 THEN DO;
                   PZ = PZ + 1;
                   PKZ = SUBSTR(E,83,1);
                   CTAG = SUBSTR(E,44,4);
         CETAG = SUBSTR(E,7,4);
                   ABER.DAT = AZEIT.TAG;
                   CVW = SUBSTR(E,40,4);
                   VW = VW / 100; /* UMR AUF SECUNDEN */
                   VW = VW + 30; /* RUNDEN AUF MINUTEN */
                   AZEIT.MIN = VW / 60;  /* UMR AUF VOLLE MINUTEN */
         STR.MIN = AZEIT.MIN;
        AZEIT.MIN = AZEIT.MIN - 1;  /* WEGEN 1. ADDITION */
         OPEN FILE (INDAT(PZ)) TITLE ('D' ×× DATTAB(PZ)) RECORD OUTPUT;
                   END;
-        /* STEP ENDE ZEIT  */
         VW = 0;
         CVW = SUBSTR(E,3,4);
         VW = VW / 100;
         VW = VW + 30;
         VW = VW / 60;
         IF VW < STR.MIN THEN VW = VW + 1440;
         KS = VW - STR.MIN;
         IF KS > 1 & Z > 0 THEN DO; KS = 1; Z = Z + 1; GO TO SCHRP1;
                                END;
 W0:
         Z = Z + 1;
         CTAG = SUBSTR(E,44,4);
         CETAG = SUBSTR(E,7,4);
0        IF PKZ ^= SUBSTR(E,83,1) THEN GO TO PARTW;
         ZT(Z).JOB = SUBSTR(E,15,8);
         ZT(Z).PGM = SUBSTR(E,55,8);
- /* BEI MEHR ALS EINEM STEP PRO MINUTE IST Z  > 1  */
         IF Z  > 1 THEN GO TO W1;
         CVW = SUBSTR(E,40,4); /*  STEPANFANGSZEIT */
         VW = VW / 100;
         VW = VW + 30;
         STR.MIN = VW/ 60;
         IF STR.MIN = AZEIT.MIN THEN STR.MIN = STR.MIN + 1;
         AZEIT.MIN = STR.MIN;
        AZEIT.MIN = AZEIT.MIN - 1;  /* WEGEN 1. ADDITION */
-W1:
-     /*  CORE USED  */
         VW = 0;
         SUBSTR(CVW,3,2) = SUBSTR(E,75,2);
         ZT(Z).SIZE = VW;
-        /* EXCPS ADIEREN  */
         SUBSTR(CVW,3,2) = SUBSTR(E,103,2);
         VW = VW - 2;
         UCBS = VW / 8;
         STELLE = 101; /*  103 + 2 + 4 - 8  */
         DO I = 1 TO UCBS;
         STELLE = STELLE + 8;
         CVW = SUBSTR(E,STELLE,4);
         STR.EXCP  = STR.EXCP  + VW;
         END;
-   /*  CPU ADIEREN  */
         STELLE = STELLE + 5;
         VW = 0;
         SUBSTR(CVW,2,3) = SUBSTR(E,STELLE,3);
         STR.CPU = STR.CPU + VW;
-        /*  PAGES ADIEREN  */
         VW = 0;
         SUBSTR(CVW,3,2) = SUBSTR(E,101,2);
         STELLE = VW;
         CVW = SUBSTR(E,STELLE + 1,4);
         STR.PAGE = STR.PAGE + VW;
         STELLE = STELLE + 4;
         CVW = SUBSTR(E,STELLE + 1,4);
         STR.PAGE = STR.PAGE + VW;
-SCHRP:
-        /* STEP ENDE ZEIT  */
         VW = 0;
         CVW = SUBSTR(E,3,4);
         VW = VW / 100;
         VW = VW + 30;
         VW = VW / 60;
         IF VW < STR.MIN THEN VW = VW + 1440;
 SCHRP1:
         KS = VW - STR.MIN;
         IF KS > 1 & Z > 1 THEN KS = 1;
         IF PX = 2 THEN DO;
                   IF KS = 0 THEN KS = 1;
                   GO TO XYZ;
                   END;
         IF KS = 0 THEN GO TO  LES;  /*  <= 1 MIN  */
-    /*  SCHREIBEN PLOTT SAETZE  */
-XYZ:
         X.CPU = STR.CPU / KS;
         X.PAGE = STR.PAGE / KS;
         X.EXCP = STR.EXCP / KS;
         ABER = ZT (1) , BY NAME;
         ABER.KZ = ' ';
         INA = 0;
         DO I = 1 TO KS;
         AZEIT.MIN = AZEIT.MIN + 1;
 XV:
         ABER.STD = AZEIT.MIN / 60;
         ABER.MINUTEN = MOD (AZEIT.MIN,60);
         IF ABER.STD > 23                     THEN DO;
         AZEIT.TAG = ETAG;
                               AZEIT.MIN = AZEIT.MIN - 1440;
                                GO TO XV;
                               END;
         ABER.ZAHL(1) = X.CPU / 100;
         ABER.ZAHL(2) = X.PAGE;
         ABER.ZAHL(3) = X.EXCP;
         DO L = 1 TO MDRZEI;
         IF  MAXIMW (L) < ABER.ZAHL (L) THEN MAXIMW(L) = ABER.ZAHL(L);
         END;
         ABER.DAT = AZEIT.TAG;
         IF INZ = 0 THEN GO TO WABER;
-        /*  SELEKTIONEN LAUT SEL. KARTEN  */
         VW = JJ * 525600 +
         TTT * 1440 +
         ABER.STD * 60 +
         ABER.MINUTEN;
         DO IP = 1 TO INZ;
0        IF VW >= VON(IP) & VW <= BIS (IP) THEN GO TO WABER;
         END;
         GO TO X4;
-WABER:
         INA = INA + 1;
         IF INA > 1 THEN ABER.PGM = '';
         IF TZA ^= PZ THEN DO;
                      TZ = TZ + 1;
                      TZA = PZ;
                      END;
         WRITE FILE (INDAT(PZ)) FROM (ABER);
 X4:
         ABER.ZAHL = 0;
         END;
-    /*  MEHRERE STEPS PRO MINUTE  */
         IF Z > 1 THEN DO;
         MB = 'A';
         Z = Z - 1;
                  DO I = 2 TO Z;
                  ABER = ZT (I) , BY NAME;
         ABER.KZ = 'M';
         IF INZ = 0 THEN GO TO X5;
         DO IP = 1 TO INZ;
0        IF VW >= VON(IP) & VW <= BIS (IP) THEN
         GO TO X5;
         END;
         GO TO X6;
 X5:
         WRITE FILE (INDAT(PZ)) FROM (ABER);
 X6:
                  END;
         GO TO MBM;
         END;
         MB = 'B';
 MBM:
-        Z = 0;
         STR.EXCP = 0;
         STR.PAGE = 0;
         STR.CPU  = 0;
         IF PX > 0  THEN DO;   /*  PARTW.  GEWESEN  */
                    GO TO W2;
                    END;
         IF MB = 'A' THEN GO TO W0;
         GO TO LES;
-/*      PARTITON WECHSEL  */
 PARTW:
         IF Z = 1 THEN GO TO W2;
                  PX = 1;  /*  - 1 ZEICHEN DASS  PARTW WAR  */
                  GO TO SCHRP1;
 W2:
         CLOSE FILE (INDAT(PZ));
         PART = PZ;
         TABPART(PZ) = 'TASK' ×× CPART;
         IF PX = 2 THEN GO TO ENDE;
         PZ = PZ + 1;
                      PKZ = SUBSTR(E,83,1);
                   CTAG = SUBSTR(E,44,4);
         CETAG = SUBSTR(E,7,4);
                   ABER.DAT = AZEIT.TAG;
                   CVW = SUBSTR(E,40,4);
                   VW = VW / 100; /* UMR AUF SECUNDEN */
                   VW = VW + 30; /* RUNDEN AUF MINUTEN */
                   AZEIT.MIN = VW / 60;  /* UMR AUF VOLLE MINUTEN */
        AZEIT.MIN = AZEIT.MIN - 1;  /* WEGEN 1. ADDITION */
         OPEN FILE (INDAT(PZ)) TITLE ('D' ×× DATTAB(PZ)) RECORD OUTPUT;
         PX = 0;
-NS:
-        Z = 0;
         STR.EXCP = 0;
         STR.PAGE = 0;
         STR.CPU  = 0;
         GO TO W0;
-EOF:
                  PX = 2;
         IF Z > 0 THEN DO;
                  GO TO SCHRP;
                  END;
         GO TO W2;
-ENDE:
         ANZPART = PZ;
         CLOSE FILE (INDAT(PZ));
         IF CPLUPRO THEN
         CALL PLUPRO (STX);
         IF CAPOS THEN
         CALL APOS (TZ);
-FEIERABEND:
         END;
