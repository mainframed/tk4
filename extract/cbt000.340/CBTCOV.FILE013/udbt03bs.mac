DIRMOD   ANFASS R3,R4
         L     R5,0(R1)
         LH    R6,0(R5)
         SR    R7,R7
         CLC   =C'DELETE',2(R5)
         BE    STCOUNT
         CLC   =C'RESTORE',2(R5)
         BNE   PARMERR
         OI    SWITCH+1,X'F0'
         CH    R6,=H'7'
         BNH   STCOUNT
         CLC   =C',SKIP=',9(R5)
         BNE   PARMERR
         SH    R6,=H'14'
         BM    PARMERR
         LA    R6,112(R6)              FIRST OPND LENGTH
         EX    R6,PACK
         CVB   R7,DW
STCOUNT  ST    R7,COUNT
*
*        TESTEN AUF PO-ORGANIZATION
*
         RDJFCB DISK
         LTR   R15,R15                 DD STMT MISSING
         BZ    MOVEDSN
         WTO   'PO DD-STATEMENT MISSING',ROUTCDE=11
         B     RETURN
MOVEDSN  MVC   DSNAME,JFCBAREA
         MVC   VOLSER,JFCBAREA+118
         OBTAIN FMT1DSCB
         LTR   R15,R15
         BZ    TESTPO
         WTO   'OBTAIN WAR NICHT ERFOLGREICH',ROUTCDE=11
         B     RETURN
TESTPO   CLC   WORKAREA+38(1),=X'02'   PO DATEI ?
         BE    PO
         WTO   'DIE ANGEGEBENE DATEI IST KEINE PO-DATEI',ROUTCDE=11
         B     RETURN
*
PO       EQU   *
         NI    EOF2+1,X'0F'
         OPEN  (DISK,INPUT)
         TM    DISK+48,X'10'
         BZ    OPENERR
         LA    R10,TTRTAB
         XC    TTRZ,TTRZ
*
         SR    R5,R5                 SET R5 TO ZERO
NEWDEB   L     R11,DISK+44           R11 = DEB PTR
         LA    R8,38(R11)            R4 = PTR 1ST EXTENT (CCHHR)
SETSEEK  AR    R5,R8                 R5 = PTR TO EXTENT TO BE PROCESSED
*** M AND BB SET TO ZERO IN DC STATEMENT DEFINING IOB
         LH    R6,0(R5)              R6 = CYL
         LH    R7,2(R5)              R7 = HEAD
*
REC1     SR    R8,R8                 R8 = R = 0
         B     FRSTREC
NXTREC   LA    R8,1(R8)              INCREMENT RECORD NO.
FRSTREC  STCM  R6,3,IOB+35           CC IN IOB
         STCM  R7,3,IOB+37           HH IN IOB
         STC   R8,IOB+39             R  IN IOB
*
READ0    EQU   *
         EXCP  IOB                   READ RECORD
         WAIT  ECB=ECB               WAIT FOR I/O
*
CHECK    EQU   *
         CLI   ECB,X'7F'             CHECK ECB FOR SUCCESS
         BE    READOK                BR IF SUCCESSFUL
         SPACE 2
         CLI   ECB,X'42'             CHECK ECB FOR END OF EXTENT
         BE    INCEXT                YES, GET NEW EXTENT
         SPACE 2
         CLI   ECB,X'41'             CHECK ECB FOR PERMANENT ERROR
         BNE   ABEND1                BR UNEXPECTED COMPLETION CODE
         SPACE 2
         TM    IOB+12,X'01'          CHECK FOR UNIT EXCEPTION
         BO    CLOSE                 BR ON END OF FILE
         SPACE 2
         TM    IOB+3,X'08'           CHECK FOR NO RECORD FOUND
         BO    NOREC                 BR TO GET NEXT TRK/CYL AND REC 1
         SPACE 2
         B     ABEND2                I/O ERROR
*
INCEXT   EQU   *
         SR    R5,R5                 ZERO R5
         IC    R5,IOB+32             SET CURRENT EXTENT NO.
         LA    R5,1(R5)              ADD ONE TO EXTENT NO.
         STC   R5,IOB+32             PUT NEW EXTENT NO. IN IOB
         SLL   R5,4                  MULT. EXTENT NO. BY 16
         CLC   16(1,R11),IOB+32      ANY MORE EXTENTS IN DEB?
         BH    SETSEEK               YES, GO PROCESS NEXT EXTENT
         B     CLOSE                 NO, BR TO EXIT
*
NOREC    EQU   *
         LA    R7,1(R7)              INCREMENT HEAD
         STCM  R7,3,IOB+37
         CLI   IOB+38,X'13'          CHECK NO HEADS LEFT
         BL    REC1                  GO GET FIRST REC ON NEW TRACK
         LA    R6,1(R6)              INCREMENT CYL
         STCM  R6,3,IOB+35
         SR    R7,R7                 SET HEAD TO ZERO
         STCM  R7,3,IOB+37
         B     REC1                  GO GET FIRST REC ON NEW TRACK
*
*        PROCESS THE DIRECTORY BLOCK
*
READOK   NOP   NXTREC
         CLC   BLOCK+8(8),=XL8'00'
         BE    NXTREC
         LA    R9,BLOCK+18
LOOP     CLC   0(8,R9),=8X'FF'
         BE    ENDOFDIR
         MVC   0(11,R10),0(R9)
         LA    R10,12(R10)
         CLC   BLOCK+8(8),0(R9)    LAST ENTRY?
         BE    NXTREC              YES
         SR    R12,R12
         NI    11(R9),B'00011111'
         IC    R12,11(R9)
         SLA   R12,1
         LA    R9,12(R12,R9)
         B     LOOP
ENDOFDIR EQU   *
         OI    READOK+1,X'F0'      ALL VALID ENTRIES PROCESSED
         B     NXTREC
*
CLOSE    EQU   *
         LR    R5,R10              R10 DESTROYED BY CONVERT-ROUTINE
         L     R1,DISK+44          A(DEB)
         LA    R2,IOBSEEK
         L     R15,X'10'
         L     R15,CVTPRLTV(R15)
         BALR  R14,R15
*
         LTR   R15,R15
         BNZ   CONVERR
         ST    R0,TTRZ
         CLOSE DISK
OPEN     OPEN  (IN,INOUT)          OPEN FILE
*
         TM    IN+48,X'10'         OPEN SUCCESSFUL?
         BZ    OPENERR             NO
         LR    R10,R5              R10 ZURUECKSETZEN
         LA    R13,SAVEAREA        R13 WIEDER RICHTIGSTELLEN (GEAENDERT
*                                  VON CONVERT-ROUTINE)
SWITCH   NOP   RST                 SWITCH FOR RESTORE/DELETE-OPERATION
*
*        DELETE ALL MEMBERS
*
         LA    R5,TTRTAB
LOOPDEL  CR    R5,R10
         BNL   COMPRESS
         STOW  IN,(5),D
         LA    R5,12(R5)
         B     LOOPDEL
*
COMPRESS EQU   *
         CLOSE IN
*
*    ALLOC FILES FOR IEBCOPY DYNAMICALLY AND LINK
*
         LA    R1,REQBPTR          DYNAMIC ALLOCATION
         SVC   99                  OF SYSIN
         LTR   R15,R15             DYNALLOC SUCCESSFUL?
         BNZ   FEHLDYNA            NO
*
         MVC   RBTXTPTR(4),=A(TEXTS2)
         MVI   FEHLDYNA+49,C'2'
         LA    R1,REQBPTR          DYNAMIC ALLOCATION
         SVC   99                  OF SYSPRINT
         LTR   R15,R15             DYNALLOC SUCCESSFUL?
         BNZ   FEHLDYNA            NO
*
         MVC   RBTXTPTR(4),=A(TEXTS3)
         MVI   FEHLDYNA+49,C'3'
         LA    R1,REQBPTR          DYNAMIC ALLOCATION
         SVC   99                  OF SYSUT3
         LTR   R15,R15             DYNALLOC SUCCESSFUL?
         BNZ   FEHLDYNA            NO
*
         MVI   DDNAM3+5,C'4'
         MVI   FEHLDYNA+49,C'4'
         LA    R1,REQBPTR          DYNAMIC ALLOCATION
         SVC   99                  OF SYSUT4
         LTR   R15,R15             DYNALLOC SUCCESSFUL?
         BNZ   FEHLDYNA            NO
*
         OPEN  (SYSIN,OUTPUT)
         PUT   SYSIN,TEXT
         CLOSE SYSIN
*
         LINK  EP=IEBCOPY,PARAM=OPTION,VL=1
         B     RETURN
*
*
*        RESTORE OLD MEMBERS
*
RST      SR    R6,R6               R6 LOESCHEN (COUNTER)
         OI    TTRZ+3,X'01'        AUF NAECHSTEN BLOCK POINTEN:
         POINT IN,TTRZ             TTRZ ZEIGT DANN
         READ  INDECB,SF,MF=E      AUF DEN BLOCK MIT LAENGE=0 UND
         CHECK INDECB              EOF WIRD ANGESPRUNGEN ZUM BEGINN
*                                  DER MEMBER-VERARBEITUNG
         ABEND 1                   DARF NICHT VORKOMMEN
*
READ     READ  INDECB,SF,MF=E      READ A BLOCK
         CHECK INDECB              WAIT FOR COMPLETION
         B     READ                NEXT BLOCK
EOF      EQU   *
         NOTE  IN
         STCM  R1,14,TTRZ
BEGIN    OI    TTRZ+3,X'01'
         POINT IN,TTRZ
         MVC   IN+33(3),ADREOF2
*
READ2    READ  INDECB,SF,MF=E      READ A BLOCK TO CHECK FOR USE
         CHECK INDECB              WAIT FOR COMPLETION
         B     SEEKTTR
*
EOF2     B     EOF3                NUR MEMBER, DIE NACH D. LETZTEN
*              COMPRESS GELOESCHT WURDEN. BEI PARM2=L AUCH DIE MEM-
*              BER VOR DEM LETZTEN COMPRESS
         NOTE  IN
         C     R1,OLDTTRZ          END OF DATASET?
         BNH   RETURN              YES
         ST    R1,OLDTTRZ          NO, PROCEED
         STCM  R1,14,TTRZ
         OI    TTRZ+3,X'01'
         POINT IN,TTRZ
         MVC   ADREOF2(3),ADREOF3
         MVC   IN+33(3),ADREOF2
         B     READ2
*
*   COMPARE TTR WITH TTR'S IN TAB
*
SEEKTTR  EQU   *
         NOTE  IN
         ST    R1,TTRZ
         FIND  IN,TTRZ,C
         LA    R5,TTRTAB
COMPARE  CR    R5,R10
         BNL   NOTFOUND
         CLC   8(3,R5),TTRZ
         BE    FOUND
         LA    R5,12(R5)
         B     COMPARE
*
NOTFOUND EQU   *
         MVC   TTR(3),TTRZ
         MVI   TTR+3,X'00'
         LA    R6,1(R6)
         C     R6,COUNT
         BNH   NEXTNAME
STOW     STOW  IN,MEMNAME,A        STOW NEW MEMBER
         LTR   R15,R15             OK?
         BNZ   STOWERR             NO
*   COMPUTE NEXT MEMBERNAME
NEXTNAME LH    R7,HW
         LA    R7,1(R7)
         CVD   R7,DW
         STH   R7,HW
         OI    DW+7,X'0F'
         UNPK  MEMNAME+4(4),DW+5(3)
FOUND    MVC   IN+33(3),ADREOF
         B     READ
*
EOF3     CLOSE IN
         B     RETURN
*
PACK     PACK  DW(0),15(0,R5)
*
OPENERR  WTO   'OPEN UNSUCCESSFUL',ROUTCDE=11
         B     RETURN
STOWERR  LA    R8,4
         CR    R15,R8
         BE    MSG1
         LA    R8,12
         CR    R15,R8
         BE    MSG2
         WTO   'STOW UNSUCCESSFUL',ROUTCDE=11
         B     RETURN
MSG1     WTO  'STOW UNSUCCESSFUL, NAME ALREADY IN DIRECTORY',ROUTCDE=11
         B     READ
MSG2     WTO   'STOW UNSUCCESSFUL, NO SPACE IN DIRECTORY',ROUTCDE=11
         B     RETURN
PARMERR  WTO   'INVALID PARMFIELD',ROUTCDE=11
         B     RETURN
CONVERR  WTO   'CONVERT ROUTINE FAILED',ROUTCDE=11
         B     RETURN
FEHLDYNA TRC   (FEHLDYNA+64,ERR,2)
         WTO   'ERROR DURING DYNAMIC ALLOCATION FOR FILE 1, REASON CODE*
                XXXX',ROUTCDE=11
         B     RETURN
ABEND1   WTO   'UNEXPECTED COMPLETION CODE FROM EXCP',ROUTCDE=11
         B     RETURN
ABEND2   WTO   'I/O-ERROR READING DIRECTORY OF THE PDS',ROUTCDE=11
         B     RETURN
*
*        DEFINITIONS
*
DISK     DCB   MACRF=E,DDNAME=PO,EODAD=CLOSE,EXLST=LIST
IN       DCB   DSORG=PO,MACRF=R,DDNAME=PO,EODAD=EOF
SYSIN    DCB   DSORG=PS,MACRF=PM,DDNAME=SYSIN,RECFM=F,BLKSIZE=80
*
*
         READ  INDECB,SF,IN,BLOCK,'S',MF=L
*
CVTPRLTV EQU   X'20'
         CNOP  4,8
         DC    C'IOB     '
         DS    0D                       ALIGNMENT
IOB      DC    X'42000000'              FLAGS
         DC    A(ECB)                   PTR TO ECB
         DC    2F'0'                    CSW AREA
IOBCCW   DC    A(CCW1)                  PTR TO CHANNEL PROGRAM
         DC    A(DISK)                  PTR TO DCB
         DC    2F'0'                    FILL
IOBSEEK  EQU   *
M        DC    X'00'                    EXTENT NO.
BB       DC    X'0000'                  BIN ALWAYS ZERO
CC       DC    X'0000'                  CYL
HH       DC    X'0000'                  HEAD
R        DC    X'00'                    RECORD
*
ECB      DC    F'0'
*
         CNOP  2,4                      PARM AND CONTROL
OPTION   DC    H'0'                     STATEMENT FOR IEBCOPY
TEXT     DC    CL80'   COPY INDD=PO,OUTDD=PO,LIST=NO'
*
*           DEFINITIONS FOR DYNAMIC ALLOCATION
*
REQLIST  DS    0F
REQBPTR  DC    X'80'
         DC    AL3(REQBLOK)
REQBLOK  DS    0F
RBLENG   DC    AL1(20)
RBVERB   DC    AL1(1)
RBFLAGS1 DC    H'0'
RBERR    DC    H'0'
ERR      EQU   RBERR
RBINFO   DC    H'0'
RBTXTPTR DC    AL4(TEXTS1)
         DC    F'0'
RBFLAGS2 DC    F'0'
*
TEXTS1   DC    A(TEXT101)
         DC    A(TEXT102)
         DC    A(TEXT104)
         DC    A(TEXT105)
         DC    A(TEXT107)
         DC    A(TEXT10A)
         DC    X'80',AL3(TEXT115)
         DS    0H
TEXT101  DC    XL6'000100010008'
         DC    CL8'SYSIN'              DDNAME
         DS    0H
TEXT102  DC    XL6'000200010008'
         DC    X'50',CL7'CONTROL'     DSNAME
         DS    0H
TEXT104  DC    XL6'000400010001'
         DC    X'04'                   DISP=NEW
         DS    0H
TEXT105  DC    XL6'000500010001'
         DC    X'04'                   DISP=(..,DELETE)
         DS    0H
TEXT107  DC    XL4'00070000'           ALLOC. IN TRACKS
         DS    0H
TEXT10A  DC    XL6'000A00010003'
         DC    X'000001'               1 TRACK
         DS    0H
TEXT115  DC    XL6'001500010005'
         DC    C'SYSDA'                UNIT SPECIFICATION
*
TEXTS2   DC    A(TEXT201)
         DC    X'80',AL3(TEXT224)
         DS    0H
TEXT201  DC    XL6'000100010008'
         DC    CL8'SYSPRINT'           DDNAME
         DS    0H
TEXT224  DC    XL4'00240000'           DUMMY DATASET
*
TEXTS3   DC    A(TEXT301)
         DC    A(TEXT304)
         DC    A(TEXT305)
         DC    A(TEXT308)
         DC    A(TEXT30A)
         DC    X'80',AL3(TEXT315)
         DS    0H
TEXT301  DC    XL6'000100010008'
DDNAM3   DC    CL8'SYSUT3'             DDNAME
         DS    0H
TEXT304  DC    XL6'000400010001'
         DC    X'04'                   DISP=NEW
         DS    0H
TEXT305  DC    XL6'000500010001'
         DC    X'04'                   DISP=(..,DELETE)
         DS    0H
TEXT308  DC    XL4'00080000'           ALLOC. IN CYLS
         DS    0H
TEXT30A  DC    XL6'000A00010003'
         DC    X'00000A'               10 CYLS
         DS    0H
TEXT315  DC    XL6'001500010005'
         DC    C'SYSDA'                UNIT SPECIFICATION
*
         DS    0D
CCW1     DC    X'31',AL3(IOBSEEK+3),X'4000',H'5'  SEARCH ID EQUAL
CCW2     DC    X'08',AL3(CCW1),F'0'               TIC
CCW3     DC    X'1E',AL3(BLOCK),X'2000',AL2(272)  READ C,K&D
*
*
ADREOF   DC    AL3(EOF)
ADREOF2  DC    AL3(EOF2)
ADREOF3  DC    AL3(EOF3)
MEMNAME  DC    CL8'#RST0001',XL4'00',XL62'00'
TTR      EQU   MEMNAME+8
USERDATA EQU   MEMNAME+12
BLDLLIST DC    H'1',H'76',CL8'UJV'
TTRK     DC    XL4'00',XL2'00',XL62'00'
DW       DS    D
COUNT    DS    F
TTRZ     DS    F
OLDTTRZ  DS    F
HW       DC    H'1'
*
FMT1DSCB CAMLST SEARCH,DSNAME,VOLSER,WORKAREA
DSNAME   DC    CL44' '
VOLSER   DC    CL6' '
WORKAREA DC    CL140' '
         DS    0F
LIST     DC    X'07'
         DC    AL3(JFCBAREA)
JFCBAREA DS    CL176
*
         LTORG
*
TTRTAB   DS    300CL12
*
BLOCK    DS    CL32768
         END
