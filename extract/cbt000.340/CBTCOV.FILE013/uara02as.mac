PANTSOEX TITLE ' U T 2 2 1 9 0 0  PANTSOEX'
***********************************************************************
*                                                                     *
*   UT221900:                                                         *
*      EXIT-ROUTINE ZUR MODIFIKATION DER RETRIEVE-, ADD- UND STORE-   *
*      FUNKTION DES PAN COMMAND-PROCESSORS                            *
*                                                                     *
***********************************************************************
*                                                                     *
*   DAS PROGRAMM BESTEHT AUS 2 CSECTS: PANTSOEX UND PANEX2.           *
*   IN PANTSOEX (DER NAME IST DURCH PANVALET VORGESCHRIEBEN) WIRD     *
*   NUR EINE SCHALTERSTELLUNG ABGEFRAGT (SRETURN) UND ENTWEDER        *
*   NACH PANEX2 ODER ZURUECK NACH PANVALET VERZWEIGT.                 *
*   (GRUND: VERMEIDUNG VON UEBERFLUESSIGEN LINKAGE-CONVENTIONS        *
*   IN DEN FAELLEN, WENN DER EXIT NICHT BENOETIGT WIRD.)              *
*   SRETURN WIRD IN PANEX2 GESETZT.                                   *
*   PANEX2 IST DER EIGENTLICHE EXIT. ER FUEHRT FOLGENDE AKTIONEN      *
*   DURCH:                                                            *
*   1. ENQ-DEQ-STEUERUNG FUER DIE COPY-DATEI                          *
*   2. BEI PAN RETRIEVE ...                                           *
*      TRENNEN DER EXPANDIERTEN INCLUDES VON DEN ZU RETRIEVENDEN      *
*      MEMBERN UND UEBERSTELLEN ALS SEPARATE MEMBER IN DIE COPY-DATEI.*
*      DABEI WERDEN DIE DIRECTORY-EINTRAEGE NACH SPF-KONVENTIONEN     *
*      AUFBEREIET.                                                    *
*   3. BEI PAN ADD ... BZW PAN STORE ...                              *
*      ENTFERNEN DER SPECIAL-COMMENT-RECORDS UND UMFORMEN DER         *
*      '*++INCLUDE'-KARTEN IN PANVALET-LESBARE FORM.                  *
*                                                                     *
***********************************************************************
*                                                                     *
*   AUTOR:       DR. SCHWERHOFF             TEL.: 0234 / 315 3364     *
*                ARAL AG, ABT. CSB                                    *
*                WITTENER STR. 45                                     *
*                4630 BOCHUM                                          *
*                                                                     *
***********************************************************************
         EJECT
         MACRO
&NAME    QINIT &BASEREG=13,&CSECT=CSECT,&EQU=(,R),&SAVE=(,SAVEAREA),   *
               &RETURN=(,RETURN)
.*
.*
.*       MACRO  QINIT                   INITIATE AN ASSEMBLER-PROGRAM
.*---------------------------------------------------------------------
.*
.*       THE PURPOSE OF THIS MACRO IS TO GENERATE THE NECESSARY
.*       INSTRUCTIONS FOR A CSECT, REGISTER EQUATES, SAVE-MACRO,
.*       DEFINING AND ESTABLISHING A BASE REGISTER, DEFINING A
.*       SAVEAREA AND CHAINING IT TO THE NEXT HIGHER ONE AND FINALLY
.*       TO GENERATE THE RETURN MACRO INCLUDING RESTORING OF SAVE-
.*       AREA ADDRESSES
.*
.*       ONLY KEYWORD OPERANDS ARE USED BY QINIT
.*
.*       THE SUBLIST-OPERANDS CAN BE CODED AS FOLLOWING:
.*          1. IF BOTH SUBLIST-OPERANDS ARE NEEDED, WRITE THE OPERANDS
.*             ENCLOSED IN PARANTHESES, SEPARATED BY A COMMA
.*          2. IF ONLY THE SECOND SUBLIST-OPERAND IS NEEDED, WRITE
.*             ENCLOSED IN PARANTHESES A COMMA FOLLOWED BY THIS OPERAND
.*             THE FIRST SUBLIST-OPERAND WILL BE OMITTED
.*          3. IF ONLY THE FIRST SUBLIST-OPERAND IS NEEDED, WRITE
.*            A) ONLY THIS OPERAND WITHOUT PARANTHESES, IF THE SECOND
.*               SUBLIST-OPERAND SHOULD BE THE DEFAULT VALUE     OR
.*            B) ENCLOSED IN PARANTHESES THIS OPERAND, FOLLOWED BY A
.*               COMMA, IF THE SECOND SUBLIST-OPERAND SHOULD BE OMITTED
.*
.*       ALL OPERANDS ARE OPTIONAL
.*
.*       IF NO OPERANDS ARE SPEZIFIED, THE DEFAULT VALUES WILL BE
.*       ASSUMED
.*
.*       POSSIBLE OPERANDS:
.*
.*       BASEREG=N       WHERE N IS ANY NUMBER FROM 1 TO 15
.*                       THIS REGISTER IS ESTABLISHED AS A BASE
.*                       REGISTER
.*
.*                       REGISTER 0 IS RECOCNIZED AS AN INVALID VALUE.
.*                       FOR 1,14 AND 15 WARNINGS ARE PRINTED.
.*                       EXCEPT FOR 13 AND 15 THE VALUE IS
.*                       LOADED INTO THE REGISTER BY MEANS OF A
.*                       BALR INSTRUCTION
.*
.*                       FOR 13 THE SAVEAREA ADDRESS IS LOADED
.*                       (IF THE SAVE IS SUPPRESSED (SEE KEYWORD SAVE)
.*                       AND BASEREG=13, THE VALUE IS LOADED BY MEANS
.*                       OF A BALR INSTRUCTION)
.*
.*                       FOR 15 IT IS ASSUMED THAT IT STILL CONTAINS
.*                       THE VALUE OF * (E.G. THE EP-ADDRESS),
.*                       ONLY A USING WILL BE GENERATED
.*
.*                       THE BASE REGISTER IS ALSO EQUATED TO THE
.*                       SYMBOL 'BASEREG'
.*
.*                       IF THIS OPERAND IS OMITTED 13 IS ASSUMED
.*
.*       BASEREG=        IF THE OPERAND IS NULLIFIED NO BASEREGISTER
.*                       WILL BE DEFINED
.*
.*       CSECT=START     A START INSTRUCTION IS USED INSTEAD OF CSECT
.*
.*                       IF OMITTED, A CSECT-INSTRUCTION WILL BE
.*                       GENERATED
.*
.*       CSECT=          IF NULLIFIED NO CSECT INSTRUCTION IS GENERATED
.*
.*       EQU=(ONLY,REG)  IF 'ONLY' IS CODED, ONLY EQUATE STATEMENTS
.*                       WILL BE GENERATED. ALL OTHER OPERANDS ARE BY-
.*                       PASSED
.*
.*                       INSTEAD OF 'REG' ANY VALID NAME FOR REGISTER-
.*                       EQUATES CAN BE CODED
.*
.*                       IF THE EQU-OPERAND IS OMITTED, THE DEFAULT
.*                       VALUE WILL BE ASSUMED (EQU=(,R))
.*
.*       EQU=            IF NULLIFIED, NO EQUATES WILL BE GENERATED
.*
.*       SAVE=(ID,LABEL) INSTEAD OF 'ID' ANY VALID CHARACTERS ALLOWED
.*                       IN THE ID-FIELD OF A SAVE MACRO CAN BE CODED
.*
.*                       IF THE ID-SUBOPERAND IS OMITTED AND A CSECT-
.*                       NAME IS GENERATED, THIS NAME WILL BE SUBSTITU-
.*                       TED
.*
.*                       INSTEAD OF 'LABEL' ANY SYMBOL VALID IN A NAME-
.*                       FIELD CAN BE CODED. THIS SYMBOL WILL APPEAR IN
.*                       THE NAME FIELD OF THE SAVEAREA
.*
.*                       IF 'LABEL' IS OMITTED, NO NAME WILL BE
.*                       GENERATED
.*
.*                       IF INSTEAD OF 'LABEL'  'NO' IS CODED NO SAVE-
.*                       AREA IS GENERATED AND SAVE-AREA-CHAINING IS
.*                       SUPPRESSED
.*
.*       SAVE=           IF NULLIFIED, THE GENERATION OF A SAVE-ROUTINE
.*                       WILL BE SUPPRESSED
.*
.*       RETURN=(RC,LABEL) INSTEAD OF 'RC' ANY VALID OPERAND FOR THE
.*                       RC-PARAMETER OF THE RETURN MACRO INSTRUCTION
.*                       CAN BE CODED. IF 'RC' IS OMITTED, ZERO WILL
.*                       BE ASSUMED
.*
.*                       INSTEAD OF 'LABEL' ANY SYMBOL VALID IN A NAME-
.*                       FIELD CAN BE CODED. THIS SYMBOL WILL APPEAR IN
.*                       THE NAME FIELD OF THE RETURN INSTRUCTION. IF
.*                       'LABEL' IS OMITTED THE NAME 'RETURN' APPEARS
.*                       IN THE NAME FIELD
.*
.*                       IF INSTEAD OF 'RC'  (15) IS CODED REGISTER
.*                       15 IS SUPPOSED TO CONTAIN A RETURN-CODE AND
.*                       WILL NOT BE RESTORED UPON RETURN
.*
.*                       IF THE RETURN-OPERAND IS OMITTED, RC = 0
.*                       WILL BE GENERATED AND THE NAME 'RETURN'
.*                       IS ASSUMED
.*
.*       RETURN=         IF NULLIFIED, NO RETURN STATEMENTS WILL BE
.*                       GENERATED
.*
.*
.*--------------------------------------------------------------------*
.*                                                                    *
.*                                                                    *
         GBLC  &DFTR                    = '' OR 'R' DEPENDINGON EQUATE*
.*                                      MAY BE USED INSIDE ALL MACROS *
.*                                      CONCATENATED WITH REGISTER
.*                                      OPERANDS SO THAT REGISTER     *
.*                                      TRACING IS PROVIDED ALSO INSIDE
.*                                      MACROS.                       *
.*                                                                    *
.*--------------------------------------------------------------------*
.*
         LCLC  &SANAME                  SAVEAREA NAME
         LCLC  &RETURNC                 RETURN-ROUTINE NAME
         LCLC  &BASE                    = 'BASEREG' OR VALUE OF BASE
         LCLC  &R                       = '' OR 'R' DEPENDING ON EQUATE
         LCLC  &BRANCH                  LABEL FOR BRANCH AROUND RETURN
         LCLA  &SAR                     SAVE REGISTER FOR R13
         LCLA  &VAL                     VALUE OF BASE
         LCLB  &BASEB                   BASEREG OPERAND PRESENT
         LCLB  &BASEBSP                 BASEREG IS 13 OR 15
         LCLB  &CSECTB                  CSECT OPERAND PRESENT
         LCLB  &EQUB                    EQU OPERAND PRESENT
         LCLB  &IDB                     ID OPERAND PRESENT
         LCLB  &RETURNB                 RETURN OPERAND PRESENT
         LCLB  &RCB                     RC OPERAND PRESENT
         LCLB  &SAVEB                   SAVE OPERAND PRESENT
         LCLB  &SAVEARB                 SAVEAR OPERAND PRESENT
         LCLB  &NS                      NO SAVE IF ON
.*
.*       VALIDATE OPERANDS AND SET INDICATORS
.*
         AIF   ('&SAVE(2)' NE 'NO').AREA1
         AIF   ('&BASEREG(1)' EQ '13').AREA0
         AGO   .AREA1
.AREA0   ANOP
&BASE    SETC  '15'
&VAL     SETA  15
&NS      SETB  1
.AREA1   ANOP
         AIF   ('&BASEREG' EQ '').VAL10
         AIF   (N'&BASEREG NE 1).VAL5
         AIF   (T'&BASEREG(1) NE 'N').VAL5
         AIF   (&NS).VAL4
&VAL     SETA  &BASEREG(1)
.VAL4    ANOP
         AIF   (&VAL LT 1 OR &VAL GT 15).VAL5
&BASEB   SETB  1
         AIF   (&VAL NE 13 AND &VAL NE 15).VAL10
&BASEBSP SETB  1
         AGO   .VAL10
.VAL5    ANOP
         MNOTE 8,'INVALID BASEREG OPERAND &BASEREG'
.VAL10   ANOP
         AIF   ('&CSECT' EQ '').VAL20
         AIF   (N'&CSECT NE 1).VAL15
         AIF   ('&CSECT' NE 'START' AND '&CSECT' NE 'CSECT').VAL15
&CSECTB  SETB  1                        INDICATE CSECT
         AGO   .VAL20
.VAL15   ANOP
         MNOTE 8,'INVALID CSECT OPERAND &CSECT'
.VAL20   ANOP
         AIF   ('&EQU' EQ '').VAL30
         AIF   (N'&EQU GT 2).VAL25
         AIF   ('&EQU(1)' NE '' AND '&EQU(1)' NE 'ONLY').VAL25
         AIF   (N'&EQU EQ 1 AND '&EQU' EQ 'ONLY').VAL22
         AIF   (N'&EQU EQ 2 AND '&EQU(2)' EQ '').VAL22
&R       SETC  '&EQU(2)'
         AGO   .VAL23
.VAL22   ANOP
&R       SETC  'R'
.VAL23   ANOP
&EQUB    SETB  1                        INDICATE EQUATES
         AIF   ('&EQU(1)' EQ 'ONLY').CSECT15
         AGO   .VAL30
.VAL25   ANOP
         MNOTE 8,'INVALID EQU OPERAND &EQU'
.VAL30   ANOP
         AIF   ('&SAVE' EQ '').VAL80
         AIF   (N'&SAVE GT 2).VAL70
&SAVEB   SETB  1
         AIF   (N'&SAVE NE 2).VAL40
         AIF   (T'&SAVE(2) EQ 'O').VAL60
&SANAME  SETC  '&SAVE(2)'
         AGO   .VAL50
.VAL40   ANOP
&SANAME  SETC  'SAVEAREA'
.VAL50   ANOP
&SAVEARB SETB  1
.VAL60   ANOP
         AIF   (T'&SAVE(1) EQ 'O').VAL80
&IDB     SETB  1
         AGO   .VAL80
.VAL70   ANOP
         MNOTE 8,'INVALID SAVE OPERAND &SAVE'
.VAL80   ANOP
         AIF   ('&RETURN' EQ '').VAL120
         AIF   (N'&RETURN GT 2).VAL110
&RETURNB SETB  1
         AIF   (N'&RETURN NE 2).VAL90
         AIF   (T'&RETURN(2) EQ 'O').VAL90
&RETURNC SETC  '&RETURN(2)'
         AGO   .VAL100
.VAL90   ANOP
&RETURNC SETC  'RETURN'
.VAL100  ANOP
         AIF   (T'&RETURN(1) EQ 'O').VAL120
&RCB     SETB  1
         AGO   .VAL120
.VAL110  ANOP
         MNOTE 8,'INVALID RETURN OPERAND &RETURN'
.VAL120  ANOP
         AIF   (&BASEB+&CSECTB+&EQUB+&RETURNB+&SAVEB NE 0).VAL130
         MNOTE 12,'NO VALID OPERANDS SPECIFIED'
         MEXIT
.VAL130  ANOP
&BASE    SETC  '&VAL'
.*
.* GENERATE CSECT INSTRUCTION
.*
         SPACE 5
         AIF   (NOT &CSECTB).CSECT10   NO CSECT OR START
         AIF   ('&CSECT' EQ 'START').CSECT5
&NAME    CSECT
         AGO   .CSECT15
.CSECT5  ANOP
&NAME    START
         AGO   .CSECT15
.CSECT10 AIF   ('&NAME' EQ '').CSECT90
&NAME    DS    0H
.CSECT15 ANOP
         SPACE 5
.CSECT90 ANOP
.*
.* GENERATE EQUATES
.*
         AIF   (NOT &EQUB).EQU90
&DFTR    SETC  '&EQU(2)'                EQU-PREFIX
*---------------------------------------------------------------------*
*                                                                     *
*        E Q U A T E S                                                *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 3
&R.0     EQU   0
&R.1     EQU   1
&R.2     EQU   2
&R.3     EQU   3
&R.4     EQU   4
&R.5     EQU   5
&R.6     EQU   6
&R.7     EQU   7
&R.8     EQU   8
&R.9     EQU   9
&R.10    EQU   10
&R.11    EQU   11
&R.12    EQU   12
&R.13    EQU   13
&R.14    EQU   14
&R.15    EQU   15
         AIF   ('&EQU(1)' NE 'ONLY').EQU10
         EJECT
         MEXIT
.EQU10   AIF   (NOT &BASEB).EQU80
         SPACE 3
BASEREG  EQU   &R&BASE
&BASE    SETC  'BASEREG'
         AIF   (&VAL NE 1 AND &VAL LT 14).EQU80
***                      CAUTION:       BASE REGISTER SPECIFICATION
***                                     IS NOT CONFORM TO OS-/360
***                                     LINKAGE CONVENTIONS
.EQU80   ANOP
         EJECT
.EQU90   ANOP
.*
.* ESTABLISH BASE AND GENERATE SAVE ROUTINE
.*
         AIF   (NOT (&BASEB OR &SAVEB)).SAVE90
*---------------------------------------------------------------------*
*                                                                     *
         AIF (NOT &BASEB).SAVE05
*        E S T A B L I S H   B A S E                                  *
.SAVE05  AIF   (NOT &SAVEB).SAVE10
         AIF   ('&SAVE(2)' EQ 'NO').NOTXT
*        S A V E   A N D                                              *
*        C H A I N   S A V E   A R E A S                              *
.SAVE10  ANOP
.NOTXT   ANOP
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 3
         AIF   (&SAVEB).SAVE20          SAVE SPECIFIED
         AIF   (&VAL EQ 15).SAVE15
         BALR  &BASE,0                  SET BASE TO VALUE OF *+2
         SPACE 3
.SAVE15  USING *,&BASE                  DEFINE BASE REGISTER
         AGO   .SAVE85
.SAVE20  ANOP
         AIF   (&VAL NE 15).SAVE25
         USING *,&BASE                  INDICATE BASE
         SPACE 3
         AGO   .SAVE30
.SAVE25  ANOP
         AIF   (&VAL NE 13).SAVE30
         USING *,&R.15                  INTERMEDIATE BASE
         SPACE 3
.SAVE30  ANOP
         AIF   (NOT &IDB).SAVE35        NO ID SPECIFIED
         SAVE  (14,12),,&SAVE(1)
         AGO   .SAVE37
.SAVE35  ANOP
         SAVE  (14,12),,&NAME
.SAVE37  ANOP
         AIF   ('&SAVE(2)' NE 'NO').SAVE39
         AIF   (&VAL EQ 15).SAVE85
         BALR  &BASE,0                      BASE *
         USING *,&BASE     .
         AGO   .SAVE85
.SAVE39  ANOP
         AIF   (&BASEBSP OR NOT &BASEB).SAVE40
         SPACE 3
         BALR  &BASE,0                  SET BASE TO VALUE OF *+2
         USING *,&BASE                  INDICATE BASE
         SPACE 3
.SAVE40  ANOP
&SAR     SETA  2
         AIF   (&VAL NE 2).SAVE45       PREVENT DESTROYMENT OF BASE
&SAR     SETA  3
.SAVE45  ANOP
         LR    &R.&SAR,&R.13            SAVE HIGHER SA ADDRESS
         CNOP  0,4
         BAL   &R.13,*+76               BRANCH AROUND SAVEAREA
         SPACE 3
         AIF   (&VAL NE 13).SAVE50
         DROP  &R.15                    DROP INTERMEDIATE BASE
         USING *,&BASE                  CONTAINS SA-ADDR. AND IS BASE
         SPACE 3
.SAVE50  ANOP
&SANAME  DC    18F'0'                   SAVE AREA
         SPACE 3
         ST    &R.13,8(,&R&SAR)         LOGICAL LOWER ADDR IN HIGHER
         AIF   ('&SANAME' NE '').SAVE55
         ST    &R&SAR,4(,&R.13)         AND HIGHER ADDR IN LOWER PGM
         AGO   .SAVE85
.SAVE55  ANOP
         ST    &R&SAR,&SANAME+4         AND HIGHER ADDR IN LOWER PGM
.SAVE85  ANOP
         AIF   (NOT &RETURNB).SAVE90
         SPACE 3
.SAVE90  ANOP
.*
.* GENERATE RETURN ROUTINE
.*
         AIF   (NOT &RETURNB).RETUR90
         AIF   (NOT (&BASEB OR &SAVEB)).RETUR10
&BRANCH  SETC  '#X'.'&SYSNDX'
         B     &BRANCH                  BRANCH AROUND RETURN ROUTINE
         SPACE 5
.RETUR10 ANOP
*---------------------------------------------------------------------*
*                                                                     *
*        R E T U R N   R O U T I N E                                  *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 3
         AIF   ('&SAVE(2)' EQ 'NO').RETUR17
         AIF   (NOT &SAVEB).RETUR17     IF NO SAVE DO NOT RESTORE R13
         AIF   (&SAVEARB).RETUR15
&RETURNC L     &R.13,4(,&R.13)          RESTORE HIGHER SA ADDRESS
         AGO   .RETUR20
.RETUR15 ANOP
&RETURNC L     &R.13,&SANAME+4          RESTORE HIGHER SA ADDRESS
         AGO   .RETUR20
.RETUR17 ANOP
&RETURNC DS    0H
.RETUR20 ANOP
         AIF   (N'&RETURN GT 1).RETUR21
         AIF   ('&RETURN' EQ '(15)').RETUR22
         AGO   .RETUR2A
.RETUR21 ANOP
         AIF   ('&RETURN(1)' EQ '(15)').RETUR22
.RETUR2A ANOP
         AIF   (NOT &RCB).RETUR25
         RETURN (14,12),T,RC=&RETURN(1)
         AGO   .RETUR30
.RETUR22 ANOP
         RETURN (14,12),T,RC=(15)
         AGO   .RETUR30
.RETUR25 ANOP
         RETURN (14,12),T,RC=0
.RETUR30 ANOP
         SPACE 5
         AIF   (NOT (&SAVEB OR &BASEB)).EX
&BRANCH  DS    0H
         AGO   .EX
.RETUR90 AIF   (NOT (&BASEB OR &SAVEB)).EX
         SPACE 5
.EX      ANOP
         MEND
         EJECT
PANTSOEX CSECT
         USING *,15
         CLI   SRETURN,C'E'              RETURN SCHALTER ?
         BER   14                        JA
         L     15,APANEX2
         BR    15
         SPACE 3
APANEX2  DC    A(PANEX2)
SRETURN  DC    C'A'
         SPACE 3
         DROP  15
         EJECT
PANEX2   QINIT
         SPACE 4
         USING IOAREA,R3
         USING CODES,R4
         USING DIRENTRY,R5
         USING IHADCB,R6
         SPACE 3
RBAL     EQU   R14
         SPACE 3
         LM    R3,R5,0(R1)              PARAMETER LADEN
         LA    R6,COPY
         EJECT
***********************************************************************
*                                                                     *
*    H A U P T S T E U E R L E I S T E                                *
*                                                                     *
***********************************************************************
         SPACE 3
S05      EQU   *
         CLI   IOCODE,C'5'              BEFORE WRITE
         BNE   S05A
         BAL   RBAL,E05                 RETRIEVE-ROUTINE
         B     RETURN
         SPACE 3
S05A     EQU   *
         CLI   IOCODE,C'1'              BEFORE READ
         BE    RETURN
         SPACE 3
S05B     EQU   *
         CLI   IOCODE,C'2'              AFTER READ
         BNE   S05C
         BAL   RBAL,E10
         B     RETURN
         SPACE 3
S05C     EQU   *
         CLI   IOCODE,C'6'              USER RETURN
         BNE   S05D
         BAL   RBAL,E15
         B     RETURN
         SPACE 3
S05D     EQU   *
         CLI   IOCODE,X'09'             AT BEGIN
         BNE   S05E
         BAL   RBAL,A05
         B     RETURN
         SPACE 3
S05E     EQU   *
         CLI   IOCODE,C'8'              END OF JOB
         BNE   RETURN
         BAL   RBAL,Z05
         B     RETURN
         EJECT
***********************************************************************
*                                                                     *
*        A05   GROSSBUCHSTABEN IN DEN COMMAND-BUFFER STELLEN          *
*                                                                     *
***********************************************************************
         SPACE 3
         DC    F'0'
A05      EQU   *
         ST    RBAL,A05-4
         SPACE 2
         MVC   ACPLADDR,IOAREA          CPL-ADRESSE SPEICHERN
         SPACE 3
         L     R7,ACPLADDR              ADRESSE DES ERSTEN
         L     R7,0(R7)                  OPERANDEN DES
         LA    R12,4(R7)                  COMMANDS BERRECHNEN
         SPACE 1
         LA    R10,1                    INCREMENT
         LR    R11,R7
         AH    R11,0(R7)                TESTADRESSE
         SPACE 1
A05A     EQU   *
         OI    0(R12),X'40'             GROSSE BUCHSTABEN
         BXLE  R12,R10,A05A
         SPACE 1
A05Z     EQU   *
         L     RBAL,A05-4
         BR    RBAL
         EJECT
***********************************************************************
*                                                                     *
*        E05   B E F O R E   W R I T E                                *
*                                                                     *
***********************************************************************
         SPACE 3
         DC    F'0'
E05      EQU   *
         ST    RBAL,E05-4
         SPACE 2
E05K     NOP   E05L
         RDJFCB (PS)
         MVC   RNAME,JFCBDSNM           DSN -> RNAME
         ENQ   (QNAME,RNAME,,,SYSTEMS),RET=HAVE
         MVI   SENQ,C'E'                SCHALTER ENQ
         SPACE 2
         CLC   DTYPE,=C'COBOL'
         BE    E05J
         CLC   DTYPE,=C'COB72'
         BE    E05J
         L     R10,ASRET                ADRESSE RETURN-SCHALTER
         MVI   0(R10),C'E'              SCHALTER AUF "EXIT AUS"
         B     E05Z
         SPACE 2
E05J     EQU   *
         OI    E05K+1,X'F0'             NOP -> B
         SPACE 3
E05L     EQU   *
         CLI   DINC,C'I'                INCLUDE-AUFLOESUNG ?
         BNE   E05C                     NEIN
         SPACE
         CLC   KINCL,INCL               *INCLUDE++ ?
         BNE   E05G                     NEIN
         XC    STMTS,STMTS              ANZ. INCLUDE-STATEMENTS LOE.
         B     E05F
         SPACE
E05G     EQU   *
         CLI   SINCL,C'A'               SCHON INITIALISIERT ?
         BNE   E05A                     JA
         BAL   RBAL,E0510               INCLUDE O. INCL.KARTE INIT.
E05F     EQU   *
         BAL   RBAL,E0505               *INCLUDE++ VERARBEITEN
         B     E05Z
         SPACE 6
E05A     EQU   *
         CLC   KEINCL,ENDINCL           *END INCLUDE ?
         BNE   E05B                     NEIN
         SPACE 1
E05H     EQU   *
         CLI   SINCL,C'S'               SKIP ?
         BE    E05I                     JA
         SPACE 1
         CLI   SWRITE,C'E'              NOCH ZU SCHREIBEN ?
         BNE   E05D                     NEIN
         SPACE 1
         L     R11,PUFADR
         L     R10,LPUF
         S     R10,PUFADR               RESTCOUNT AUSRECHNEN
         MVC   BLKSIZE,DCBBLKSI
         STH   R10,DCBBLKSI             IN DCB EINSTELLEN
         WRITE D2,SF,COPY,(R11),'S'
         ST    R11,LPUF
         MVI   SWRITE,C'A'
         MVC   DCBBLKSI,BLKSIZE
         CHECK D2
         SPACE 2
E05D     EQU   *
         MVC   PDUSERS-1(L'SPFUD),SPFUD
         TIME  DEC                      CREATION-DATE EINTRAGEN
         ST    R1,PDUSERS+4
         OI    PDUSERS+7,X'0F'
         STCM  R0,B'1100',PDUSERS+12    UHRZEIT
         SPACE 2
         PACK  DOWO,DSTMTS              ANZAHL STATEMENTS
         CVB   R10,DOWO
         STH   R10,PDUSERS+16           IN DIRECTORY EINTRAGEN
         STH   R10,PDUSERS+14
         SPACE 3
         STOW  COPY,PDENTRY,R           DIRECTORY UPDATE
         SPACE 1
         C     R15,=F'8'                FEHLER AUFGETRETEN ?
         BNH   E05I                     NEIN
         SPACE 1
         L     R5,ACPLADDR
         LM    R5,R8,0(R5)              ADRESSEN FUER PUTLINE
         SPACE 1
         LR    R3,R15
         PUTLINE PARM=PUTBLOCK,OUTPUT=(TEXT1,TERM,SINGLE,DATA),        *
               MF=(E,IOPLADR),ECB=ECB,UPT=(R6),ECT=(R8)
         SPACE 2
         ABEND (R3)
         SPACE 4
E05I     EQU   *
         MVI   SOINCL,C'A'              INCLUDE OHNE *INCLUDE++ ENDE
         MVI   SINCL,C'A'               SCHALTER AUS
         MVI   IOCODE,C'F'              SKIP CURRENT CARD
*
* DAS FOLGENDE STATEMENT IST UEBERFLUESSIG, WENN PAN KORREKT LAUEFT.
* ES BEWIRKT, DASS DIE INCLUDE- UND ENDEMESSAGES AUSGEGEBEN WERDEN.
*
         MVI   RET,C'Y'
*
         B     E05Z
         SPACE 6
E05B     EQU   *
         CLI   SINCL,C'E'               SCHALTER EIN ?
         BL    E05C                     NEIN
         BH    E05M                     SKIP
         SPACE 2
         MVI   SWRITE,C'E'              SCHALTER EIN
         L     R10,LPUF                 LAUFENDE PUFFERADRESSE
         MVC   0(L'OUTCARD,R10),OUTCARD
         LA    R10,L'OUTCARD(R10)       PUFFERADRESSE ERHOEHEN
         C     R10,PUFEND               PUFFER VOLL ?
         BNE   E05E
         L     R10,PUFADR
         WRITE D1,SF,COPY,(R10),'S'
         CHECK D1
         MVI   SWRITE,C'A'
         SPACE 1
E05E     EQU   *
         ST    R10,LPUF                 LAUFENDE PUFFERADRESSE SPEICH.
         SPACE 1
E05M     EQU   *
         L     R10,STMTS                ANZ. STATEMENTS INCL.-MEMBER
         BCT   R10,E05N                 UM 1 VERMINDERN
         B     E05H                     INCLUDE-MEMBER ABSCHLIESSEN
         SPACE
E05N     EQU   *
         ST    R10,STMTS                RESTANZAHL SPEICHERN
         MVI   IOCODE,C'F'              SKIP CURRENT CARD
         B     E05Z
         SPACE 4
E05C     EQU   *
         CLC   KINCL,BINCL              ' ++INCLUDE' ?
         BNE   E05Z                     NEIN
         SPACE 2
         MVI   KINCL,C'*'
         SPACE 2
E05Z     EQU   *
         L     RBAL,E05-4
         BR    RBAL
         EJECT
***********************************************************************
*                                                                     *
*        E0505        SCHREIBEN AUF DIE COPY-DATEI VORBEREITEN        *
*                                                                     *
***********************************************************************
         SPACE 3
         DC    F'0'
E0505    EQU   *
         ST    RBAL,E0505-4
         SPACE 2
         MVC   KINCL,STINCL             *++INCLUDE
         MVC   PDENTRY,DNAME            NAME DER COPY-DATEI
         SPACE 2
         PACK  DOWO,DDATEM(2)
         CVB   R11,DOWO
         PACK  DOWO,DDATEM+3(2)
         CVB   R12,DOWO
         PACK  DOWO,DDATEM+6(2)         DATUM IN MASCHINENDATUM UMS.
         CVB   R9,DOWO
         SPACE 1
         BCTR  R11,0
         SLL   R11,2
         A     R12,TAGE(R11)
         STC   R9,TESTC
         TM    TESTC,B'0011'            SCHALTJAHR ?
         BNZ   E0505B
         C     R11,=F'8'
         BNH   E0505B
         LA    R12,1(R12)
E0505B   EQU   *
         MH    R9,=H'1000'
         AR    R9,R12
         CVD   R9,ZDLMT-4
         SPACE 3
         CLI   SGETM,C'E'               OPEN ERFORDERLICH ?
         BE    E0505D                   NEIN
         OPEN  (COPY,(OUTPUT))
E0505D   EQU   *
         BLDL  COPY,PDLIST              DIRECTORY LESEN
         SPACE 2
         LTR   R15,R15                  ENTRY VORHANDEN  ?
         BNZ   E0505A                   NEIN
         SPACE 1
         CLI   PDUSERD-1,X'0F'          LAENGE RICHTIG ?
         BNE   E0505A                   NEIN
         SPACE 1
         CP    P366,PDUSERD+6(L'P366)   DATUM PLAUSIBEL ?
         BL    E0505A
         CP    P366,PDUSERD+10(L'P366)
         BL    E0505A
         SPACE 1
         XC    DOWO,DOWO
         MVC   DOWO+4(4),PDUSERD+8      DATE OF LAST MODIFICATION
         CVB   R10,DOWO
         SPACE 3
         CR    R10,R9                   PAN-VERSION NEUER ALS SPF-VERS
         BL    E0505A                   JA
         SPACE 3
         MVI   SINCL,C'S'               SCHALTER AUF 'SKIP'
         B     E0505Z
         SPACE 5
E0505A   EQU   *                        COPY-DATEI MUSS GESCHRIEBEN W.
         MVI   SINCL,C'E'               SCHALTER SETZEN
         SPACE 2
         CLI   SGETM,C'E'               WEITERE MASSNAHMEN NOTWENDIG?
         BE    E0505Z                   NEIN
         RDJFCB (COPY)
         SPACE 2
         ENQ   (QNAME,JFCBDSNM,,44,SYSTEMS),RET=HAVE
         SPACE 1
         LH    R0,DCBBLKSI              BLOCKSIZE LADEN
         GETMAIN R,LV=(0)               GETMAIN AUSGABEPUFFER COPY
         SPACE 3
         ST    R0,PUFLAEN
         ST    R1,PUFADR
         ST    R1,LPUF
         AR    R1,R0
         ST    R1,PUFEND
         MVI   SWRITE,C'A'
         MVI   SGETM,C'E'
         SPACE 2
E0505Z   EQU   *
         L     RBAL,E0505-4
         BR    RBAL
         EJECT
***********************************************************************
*                                                                     *
*        E0510 INITIALISIERUNG INCLUDE- MEMBER OHNE *INCLUDE++        *
*                                                                     *
***********************************************************************
         SPACE 3
         DC    F'0'
E0510    EQU   *
         ST    RBAL,E0510-4
         SPACE 2
         MVC   SAVECD,OUTCARD           KARTE ZWISCHENSPEICHERN
         MVC   KINCL(L'INCLCD),INCLCD   DURCH *INCLUDE++ KARTE ERSETZEN
         MVC   KNAME(L'DNAME),DNAME     NAMEN EINSETZEN
         MVI   RET,C'Y'                 RUECKKEHR-CODE PANVALET
         MVI   SOINCL,C'E'              SCHALTER "OHNE INCLUDE-KARTE'
         PACK  DOWO,DSTMTS              STATEMENTZAHL PACKEN,
         CVB   R10,DOWO                 KONVERTIEREN
         ST    R10,STMTS                UND SPEICHERN
         SPACE 3
E0510Z   EQU   *
         L     RBAL,E0510-4
         BR    RBAL
         EJECT
***********************************************************************
*                                                                     *
*        E10   A F T E R   R E A D                                    *
*                                                                     *
***********************************************************************
         SPACE 3
         DC    F'0'
E10      EQU   *
         ST    RBAL,E10-4
         SPACE 2
E10E     NOP   E10F
         CLC   DTYPE,=C'COBOL'          COBOL ?
         BE    E10A                     JA
         CLC   DTYPE,=C'COB72'
         BE    E10A
         SPACE 1
         CLC   IKDAT,DATS               SPECIAL COMMENT RECORD ?
         BNE   E10D
         CLC   IKATL,ATLV
         BNE   E10D                     NEIN
         SPACE
         MVI   IOCODE,C'B'              SKIP CARD
         B     E10Z
         SPACE
E10D     EQU   *
         CLI   S1,C'E'                  2. MAL ?
         BE    E10G                     JA
         MVI   S1,C'E'                  1. MAL
         B     E10Z
         SPACE 2
E10G     EQU   *
         L     R10,ASRET
         MVI   0(R10),C'E'              NIMMERWIEDERSEHEN
         B     E10Z
         SPACE 1
E10A     EQU   *
         OI    E10E+1,X'F0'             NOP -> B
         SPACE 2
E10F     EQU   *
         CLC   IKINCL,STINCL            *++INCLUDE ?
         BNE   E10Z                     NEIN
         MVI   IKINCL,C' '              ' ++INCLUDE'
         SPACE 3
E10Z     EQU   *
         L     RBAL,E10-4
         BR    RBAL
         EJECT
***********************************************************************
*                                                                     *
*        E15                                                          *
*                                                                     *
***********************************************************************
         SPACE 3
         DC    F'0'
E15      EQU   *
         ST    RBAL,E15-4
         SPACE 2
         CLI   SOINCL,C'E'              ETWAS ZU TUN ?
         BNE   E15Z                     NEIN
         SPACE 3
         MVC   OUTCARD,SAVECD           1. KARTE COPYDATEI ZURUECK
         BAL   RBAL,E05                 KARTE VERARBEITEN
         SPACE 3
E15Z     EQU   *
         L     RBAL,E15-4
         BR    RBAL
         EJECT
***********************************************************************
*                                                                     *
*        Z05   DEQ AUF OUTPUT-DATEI                                   *
*                                                                     *
***********************************************************************
         SPACE 3
         DC    F'0'
Z05      EQU   *
         ST    RBAL,Z05-4
         SPACE 2
         TM    DCBOFLGS,DCBOFOPN        CLOSE + DEQ ERFORDERLICH ?
         BNO   Z05A                     NEIN
         SPACE 2
         CLOSE COPY
         SPACE 2
         DEQ   (QNAME,JFCBDSNM,44,SYSTEMS),RET=HAVE
         SPACE 2
Z05A     EQU   *
         CLI   SENQ,C'E'                ENQ-SCHALTER EIN ?
         BNE   Z05Z                     NEIN
******** DEQ   (QNAME,RNAME,,SYSTEMS),RET=HAVE
         MVI   SENQ,C'A'
         SPACE 4
Z05Z     EQU   *
         L     RBAL,Z05-4
         BR    RBAL
         EJECT
***********************************************************************
*                                                                     *
*      D E F I N I T I O N E N                                        *
*                                                                     *
***********************************************************************
         SPACE 3
DOWO     DC    D'0'
         SPACE 2
ACPLADDR DC    A(0)
PUFADR   DC    A(0)
LPUF     DC    A(0)
PUFLAEN  DC    A(0)
PUFEND   DC    A(0)
ASRET    DC    A(SRETURN)
         SPACE
STMTS    DC    F'0'
ECB      DC    F'0'
         SPACE 2
TAGE     DC    F'0,31,59,90,120,151,181,212,243,273,304,334'
         SPACE 2
P366     DC    P'366'
BLKSIZE  DC    H'0'
         DS    0F
PDLIST   DC    H'1,74'
PDENTRY  DC    CL8' '
PDTTRKZC DC    XL6'0'
PDUSERS  EQU   PDENTRY+12,60
PDUSERD  DC    XL60'0'
         SPACE 2
         DS    D                        SPF DIRECTORY-DATEN
         ORG   *-5
SPFUD    DS    0XL31
         DC    X'0F'
         DC    X'0100'
         DC    XL18'0'
         DC    CL7'PANRETR'
ZDLMT    EQU   SPFUD+9,4
         SPACE 2
SENQ     DC    C'A'
SINCL    DC    C'A'
SWRITE   DC    C'A'
SGETM    DC    C'A'
S1       DC    C'A'
SOINCL   DC    C'A'
TESTC    DC    X'0'
         SPACE 2
DATS     DC    C'DATA SET'
ATLV     DC    C'AT LEVEL'
         SPACE
SAVECD   DC    CL80' '
INCLCD   DC    CL75'*INCLUDE++'
INCL     EQU   INCLCD,11
BINCL    DC    C' ++INCLUDE '
STINCL   DC    C'*++INCLUDE '
ENDINCL  DC    C'*END INCLUDE++ '
         SPACE 2
QNAME    DC    CL8'SPFDSN'
RNAME    DC    CL44' '
         SPACE 2
PUTBLOCK PUTLINE MF=L
         SPACE 1
IOPLADR  DC    4F'0'
         SPACE 2
TEXT1    DC    Y(TEXT1END-TEXT1)
         DC    H'0'
         DC    C'I/O - ERROR COPY-DATEI. WAHRSCHEINLICH DIRECTORY VOLL'
TEXT1END EQU   *
         SPACE 2
         LTORG
         EJECT
***********************************************************************
*                                                                     *
*        DCB   COPY                                                   *
*                                                                     *
***********************************************************************
         SPACE 3
COPY     DCB   DSORG=PO,MACRF=W,EXLST=EXLST,DDNAME=PANDD4
         SPACE 3
EXLST    DS    0F
         DC    X'87'
         DC    AL3(INFMJFCB)
         EJECT
***********************************************************************
*                                                                     *
*        DCB   PS                                                     *
*                                                                     *
***********************************************************************
         SPACE 3
PS       DCB   DSORG=PS,MACRF=PM,EXLST=EXLST,DDNAME=PANDD2
         EJECT
         IEFJFCBN
         EJECT
***********************************************************************
*                                                                     *
*      D U M M Y - S E C T I O N S                                    *
*                                                                     *
***********************************************************************
         SPACE 3
IOAREA   DSECT
MESSAGE  DS    0CL121
INCARD   DS    0CL80
IKINCL   EQU   INCARD+6,L'INCL
IKDAT    EQU   INCARD+11,8
IKATL    EQU   INCARD+31,8
         DS    C
OUTCARD  DS    CL80
KINCL    EQU   OUTCARD+6,L'INCL
KEINCL   EQU   OUTCARD+6,L'ENDINCL
KNAME    EQU   OUTCARD+6+L'INCL,8
         SPACE 3
CODES    DSECT
IOCODE   DS    C
PROGRAM  DS    C
RET      DS    C
         SPACE 3
DIRENTRY DSECT                     DIR ENTRY RETURNED IN 0-UP FORMAT
DNAME    DS    CL10                NAME LEFT JUSTIFIED
DLEVEL   DS    CL3                 LEVEL NUMBER
DUSER    DS    CL4                 USER CODE
DSECURE  DS    CL1                 SECURITY CODE
DTYPE    DS    CL5                 LANGUAGE TYPE
DSTATUS  DS    0CL3                3 CHAR STATUS
DPRODT   DS    CL1                 P-PROD  T-TEST
DEORDD   DS    CL1                 E-ENABLE  D-DISABLE
DAORDI   DS    CL1                 A-ACTIVE  I-INACTIVE
DDATEM   DS    CL8                 DATE OF LAST MAINTENANCE MM/DD/YY
DDATEA   DS    CL8                 DATE OF LAST ACCESS  MM/DD/YY
DBLOCKS  DS    CL5                 NO. OF BLOCKS
DSTMTS   DS    CL8                 NO. OF STATEMENTS
DLASTACT DS    CL4                 LAST ACTION, 1ST POS. IS * IF PROD.
DBYTES   DS    CL2                 NO. BYTES PER STATMENT
DSUBSET  DS    CL4                 NO. OF SUBSETS(SUPERSETS ONLY)
DNAME2   DS    CL10                NAME RIGHT JUSTIFIED
         DS    CL1                 NOT USED
         DS    CL1                 N=NOFORMAT, T=TSO, ELSE BLANK
DINC     DS    CL1                 I=INCLUDE BEING EXPND (EXIT ONLY)
DVERSION DS    XL2                 VER. #(FOR PROTECTION FILES ONLY)
         EJECT
***********************************************************************
*                                                                     *
*        UNIT-CONTROL-BLOC  (UCB)                                     *
*                                                                     *
***********************************************************************
         DSECT
         IEFUCBOB
         EJECT
***********************************************************************
*                                                                     *
*   RELEASE-ABHAENGIGE EUATES  (MUESSEN IM MVS ENTFERNT WERDEN)       *
*                                                                     *
***********************************************************************
         SPACE 3
UCBVOLI  EQU   SRTEVOLI-UCBOB
         SPACE 2
         PRINT NOGEN
         DCBD  DSORG=PS
         END
