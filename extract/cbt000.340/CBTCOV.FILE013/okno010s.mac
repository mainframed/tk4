P904SAB  TITLE 'ERSTELLEN DELETE/DEFINE NVSAM AUS SMF-ICF-RECORDS'
*
* ACHTUNG DIE DEVICETYPETABELLE(DEVTAB) MUSS EVENTUEL ANGEPASST WERDEN.
*
*
         MACRO
&NAME    DSTART &R1,&R2,&R3,&R4,&R5,&R6,&R7,&R8,&R9,&R10,&R11
         GBLC  &##STRT
         LCLA  &A1,&A2
         LCLB  &B1,&B2
         LCLC  &C1(11),&C2,&C3,&C4,&C5
         LCLC  &DATE,&TIME
         AIF   ('&NAME' NE '').ST040
         MNOTE 16,'PROGRAMM-NAME FEHLT'
&B1      SETB  1
.ST040   AIF   (N'&SYSLIST EQ 0).ST160
         AIF   (N'&SYSLIST NE 1).ST080
         AIF   ('&R1' NE 'NO').ST080
&B2      SETB  1
         AGO   .ST260
.ST080   ANOP
&A1      SETA  &A1+1
         AIF   (&A1 GT N'&SYSLIST).ST240
         AIF   (T'&SYSLIST(&A1) EQ 'O').ST080
         AIF   (T'&SYSLIST(&A1) NE 'N').ST120
         AIF   ('&SYSLIST(&A1)' LT '2').ST120
         AIF   ('&SYSLIST(&A1)' GT '12').ST120
&C1(&A1) SETC  ',R&SYSLIST(&A1)'
&C2      SETC  'R&SYSLIST(&A1)'
         AGO   .ST080
.ST120   MNOTE 16,'''&SYSLIST(&A1)'' IST UNGUELTIGER OPERAND ODER REGIS*
               TERNUMMER'
&B1      SETB  1
         AGO   .ST080
.ST140   MNOTE 255,'MACRO DSTART - GENERIERUNG ABGEBROCHEN'
         MEXIT
.ST160   AIF   (&B1).ST140
&A1      SETA  1
&A2      SETA  12
.ST200   ANOP
&C1(&A1) SETC  ',R&A2'
&A1      SETA  &A1+1
&A2      SETA  &A2-1
         AIF   (&A2 GE 9).ST200
&C2      SETC  'R9'
.ST240   AIF   (&B1).ST140
.ST260   ANOP
&##STRT  SETC  'D'
&C3      SETC  'R13'
&C5      SETC  '&C3'
* KNO-OS-MACRO *DSTART*                20.05.80       UNS
&NAME    CSECT
         USING *,R15                   R15 ENTHAELT EINTRITTSADRESSE
         STM   R14,R12,12(R13)         R14 - R12 SICHERN
         ST    R1,##OSR1               R1  SICHERN
         ST    R13,##OSAVEA+4          R13 SICHERN
         LR    R14,R13                 ADR. DER AUFRUF. SAVEAREA SICH.
         LA    R13,##OSAVEA            R13 ADR. SAVEAREA + 1. BASISREG.
         ST    R13,8(,R14)             ADR. DER NEUEN SAVEAREA SPEICH.
         B     ##OSR1+4
         DC    CL9' &NAME'             PROGRAMMNAME
&DATE    SETC  '&SYSDATE'(4,2).'.'.'&SYSDATE'(1,2).'.'.'&SYSDATE'(7,8)
&TIME    SETC  '&SYSTIME'
         DC    CL9' &DATE'             DATUM DER UMWANDLUNG
         DC    CL8' &TIME'             UHRZEIT DER UMWANDLUNG
##OSAVEA DC    18F'0'                  SAVEAREA
##OSR1   DC    F'0'                    INHALT VON R1 (ADR. PARAM.LISTE)
         DROP  R15                     R15 ALS BASISREG. AUFGEBEN
         USING ##OSAVEA,&C3&C1(1)&C1(2)&C1(3)&C1(4)&C1(5)&C1(6)&C1(7)&C*
               1(8)&C1(9)&C1(10)&C1(11)
         AIF   (&B2).ST400
         LA    &C2,4095                INDEXWERT LADEN
.ST280   ANOP
&A1      SETA  1
.ST320   AIF   ('&C1(&A1)' EQ '').ST360
&C4      SETC  '&C1(&A1)'(2,3)
         LA    &C4,1(&C2,&C5)          WEITERES BASISREGISTER LADEN
.ST360   ANOP
&A1      SETA  &A1+1
&C5      SETC  '&C4'
         AIF   (&A1 LE 11).ST320
.ST400   EQREG
         MEND
*
* REGISTERBENUETZUNG
* R4  ZWEITES BASISREGISTER
* R5  DRITTES BASISREGISTER
* R7  ADRESSE AUSGABEDCB
* R8  WORKREGISTER
* R9  WORKREGISTER
* R10 ADRESSIERUNG GESAMTER SMF-RECORD
* R11 SCHLEIFREGISTER FUER SMFCATALOGRECORD-CELLS
* R12 STEHT HINTER DEM GESAMTEN SMF-RECORD FUER ENDEPRUEFUNG
* R13 ERSTES BASISREGISTER
* R14 WORKREGISTER
* R15 WORKREGISTER
*
P904SAB  DSTART 4,5
         PRINT GEN
         OPEN  (SMF,(INPUT),CONTROL,(INPUT))
         OPEN  (DEFDEL,(OUTPUT),DEFNVSM,(OUTPUT),DELNVSM,(OUTPUT),     *
               DEFGDG,(OUTPUT),DELGDG,(OUTPUT),DRUCKER,(OUTPUT))
         EJECT
* IEBUPDTE-STATEMENTS AUSGEBEN
         MVC   ZTEXT,BLANK
         MVC   ZTEXT(20),=C'./       ADD   NAME='
         MVC   ZTEXT+20(7),=C'DEFDEL '
         PUT   DEFDEL,ZTEXT
         MVC   ZTEXT+20(7),=C'DEFNVSM'
         PUT   DEFNVSM,ZTEXT
         MVC   ZTEXT+20(7),=C'DELNVSM'
         PUT   DELNVSM,ZTEXT
         MVC   ZTEXT+20(7),=C'DEFGDG '
         PUT   DEFGDG,ZTEXT
         MVC   ZTEXT+20(7),=C'DELGDG '
         PUT   DELGDG,ZTEXT
         MVC   ZTEXT,BLANK
         USING SMF61,R10
         USING TYPEN,R11
CREAD    DS    0H
         GET   CONTROL,CBER
         CLC   CBER(08),=C'CATALOG='
         BE    CC10
         CLC   CBER(05),=C'TIME='
         BE    CT10
         CLC   CBER(05),=C'DATE='
         BE    CD10
         MVC   FKZ,=C'06'
         B     FUPRO
         EJECT
* UEBERPRUEFEN CATALOG=
CC10     DS    0H
         CLC   CATNM,BLANK                  CATALOGNAME SCHON VORHANDEN
         BNE   CC10DU                       JA ABEND
         MVC   CATNM,CCATNM
         B     CREAD
CC10DU   MVC   FKZ,=C'07'
         B     FUPRO
         EJECT
* UEBERPRUEFEN TIME=
CT10     DS    0H
         CLC   CTIME,=XL8'0'                TIME SCHON VORHANDEN
         BNE   CT10DU                       JA ABEND
         TRT   CCHH,NUMTAB
         BNZ   CTNINUM
         TRT   CCMM,NUMTAB
         BNZ   CTNINUM
         TRT   CCSS,NUMTAB
         BNZ   CTNINUM
         PACK  CCHH,CCHH
         PACK  CCMM,CCMM
         PACK  CCSS,CCSS
         CP    CCHH,=P'0'
         BL    CTINVAL
         CP    CCHH,=P'23'
         BH    CTINVAL
         CP    CCMM,=P'0'
         BL    CTINVAL
         CP    CCMM,=P'59'
         BH    CTINVAL
         CP    CCSS,=P'0'
         BL    CTINVAL
         CP    CCSS,=P'59'
         BH    CTINVAL
* UMWANDEL UHRZEIT IN HUNDERTSTEL SEKUNDEN
* 1 STUNDE  = 1000000 INDUSTRIEHUNDERTSTELSEKUNDEN
* 1 MINUTE  = 10000   INDUSTRIEHUNDERTSTELSEKUNDEN
* 1 SEKUNDE = 166     INDUSTRIEHUNDERTSTELSEKUNDEN
*
         ZAP   IHH,=P'1000000'
         ZAP   IMM,=P'10000'
         ZAP   ISS,=P'166'
         MP    IHH,CCHH
         MP    IMM,CCMM
         MP    ISS,CCSS
         ZAP   ZTIME,IHH
         AP    ZTIME,IMM
         AP    ZTIME,ISS
         CVB   R14,ZTIME
         ST    R14,CTIME
         B     CREAD
CT10DU   MVC   FKZ,=C'08'
         B     FUPRO
CTNINUM  MVC   FKZ,=C'09'
         B     FUPRO
CTINVAL  MVC   FKZ,=C'10'
         B     FUPRO
         EJECT
* UEBERPRUEFEN DATE=
CD10     DS    0H
         CP    CDATE,=P'0'                  DATE SCHON VORHANDEN
         BNE   CD10DU                       JA ABEND
         TRT   CCDATE,NUMTAB
         BNZ   CDNINUM
         PACK  ZCTTT,CCTTT
         CP    ZCTTT,=P'1'
         BL    CDINVAL
         CP    ZCTTT,=P'366'
         BH    CDINVAL
         PACK  CDATE,CCDATE
         B     CREAD
CD10DU   MVC   FKZ,=C'11'
         B     FUPRO
CDNINUM  MVC   FKZ,=C'12'
         B     FUPRO
CDINVAL  MVC   FKZ,=C'13'
         B     FUPRO
         EJECT
* ENDE CONTROL-EINGABE
CENDE    DS    0H
         CLC   CATNM,BLANK
         BE    CABEND1
         CLC   CTIME,=XL4'00'
         BE    CABEND2
         CP    CDATE,=P'0'
         BE    CABEND3
         B     READ10
CABEND1  MVC   FKZ,=C'14'
         B     FUPRO
CABEND2  MVC   FKZ,=C'15'
         B     FUPRO
CABEND3  MVC   FKZ,=C'16'
         B     FUPRO
         EJECT
DBER     DS    0CL133
DASA     DS    CL1
DTEXT    DS    CL80
         DC    CL52' '
         ORG   DTEXT+30
DCOUNT   DS    CL5
         ORG   DBER+133
*
IHH      DC    PL8'0'
IMM      DC    PL8'0'
ISS      DC    PL8'0'
*
CBER     DS    CL80
         ORG   CBER
         DS    CL8                          CATALOG=
CCATNM   DS    CL44
         ORG   CBER
         DS    CL5                          TIME=
CCTIME   DS    0CL8                         HH:MM:SS
CCHH     DS    CL2                          HH
         DS    CL1                          :
CCMM     DS    CL2                          MM
         DS    CL1                          :
CCSS     DS    CL2                          SS
         ORG   CBER
         DS    CL5                          DATE=
CCDATE   DS    0CL5                         JJTTT
CCJJ     DS    CL2                          JJ
CCTTT    DS    CL3                          TTT
         ORG   CBER+80
*
CATNM    DC    CL44' '                      ZU VERARBEITENDER CAT.NAME
ZCTTT    DS    PL2                          AB TAG     ZWIFELD
ZTIME    DC    D'0'                         AB UHRZEIT ZWIFELD
CTIME    DC    F'0'                         AB UHRZEIT
CDATE    DC    PL4'0'                       AB DATUM
NUMTAB   DC    240X'0F'
         DC    10X'00'
         DC    6X'0F'
READ10   DS    0H
         BAL   R14,CLEARTAB
         BAL   R14,CLEARVOL
         BAL   R14,CLEARDVT
         BAL   R14,CLEARFSQ
READ     DS    0H
         BAL   R14,CLEARTAB
         BAL   R14,CLEARVOL
         BAL   R14,CLEARDVT
         BAL   R14,CLEARFSQ
         MVC   TOTEXT,BLANK
         GET   SMF
         LR    R10,R1
         XC    ZF1,ZF1
         MVC   ZF1+6(2),0(R10)              LAENGE HOLEN
         L     R14,ZF1+4                    IN WORKREG
         LA    R12,0(R14,R10)               IN R12 ENDE DES SATZES
         CLI   SMF61RTY,61     X'3D'        DEFINE
         BE    V61
         CLI   SMF61RTY,65     X'41'        DELETE
         BE    V65
         B     READ
         EJECT
V61      DS    0H
         BAL   R14,AUSWAHL
         LA    R11,SMF61CRC                 ADDRESS CELLS
         LA    R11,2(R11)                   UM LAENGE VERSCHIEBEN
V6110    DS    0H
         CLI   NVTYPE,C'A'                  NONVSAM-CELL
         BNE   V6120                        NO
         LA    R7,DEFNVSM                   R7 AUF AUSGABEDCB
         AP    CDEFNVSM,=P'1'
         MVC   ZTEXT(15),FIRSTLIN
         BAL   R14,FILLTAB
         MVC   ZTEXT(15),DEFINE
         BAL   R14,FILLTAB
         BAL   R14,TYPEAUP
         BNE   V61END
V6120    DS    0H
         CLI   NVTYPE,X'04'                 VOLUME-CELL
         BNE   V6130                        NO
         BAL   R14,TYPE04UP
V6130    DS    0H
         CLI   NVTYPE,X'01'                 OWNER-CELL
         BNE   V6140                        NO
         BAL   R14,TYPE01UP
V6140    DS    0H
         CLI   NVTYPE,C'B'                  GDG-BASE-NAME-CELL
         BNE   V61END                       NO
         MVC   ZTEXT(15),FIRSTLIN
         BAL   R14,FILLTAB
         MVC   ZTEXT(15),DEFINE
         BAL   R14,FILLTAB
         BAL   R14,R11SHIFT                 B-CELL UEBERSPRINGEN
         BAL   R14,TYPE01UP                 EXP.DATE ZWISCHENSPEICHERN
         BAL   R14,R11SHIFT                 OWNER-CELL UEBERSPRINGEN
         CLI   NVTYPE,X'05'                 GAT-CELL ? SICHERHEITSABFR.
         BNE   V6140DU                      DUMP KATASTROPHE
* SUCHEN ZUGEHOERIGE GDG, OWNER UND VOL-CELLS
* DIE AKTUELLEN EINTRAEGE STEHEN HINTEN
* ES MUESSEN SOVIELE (GDG,OWNER,VOL-CELLS) UEBERSPRUNGEN WERDEN,
* WIE IM FELD GATCNT-1 STEHEN
         CLI   GATCNT,X'00'                 GATCNT=0,D.H. DEF GDG
         BNE   V6170                        NEIN
         LA    R7,DEFGDG                    R7 AUF AUSGABEDCB
         AP    CDEFGDG,=P'1'
         MVC   ZTEXT(15),GDG
         BAL   R14,FILLTAB
         MVC   ZTEXT(15),NAME
         MVC   ZTEXT+7(44),SMF61ENM         NAME AUS SMF-TEIL,
         MVC   ZTEXT+70(2),=C')-'           DA IM CRC DER GDGBASENAME
         BAL   R14,FILLTAB                  STEHT
         XC    ZF1,ZF1                      LOESCHEN ZWISCHENFELD
         MVC   ZF1+7(1),GATLIMIT            GDG-LIMIT
         XR    R14,R14
         L     R14,ZF1+4                    IN REGISTER 14
         CVD   R14,ZF1
         MVC   ZTEXT(15),LIMIT
         UNPK  ZTEXT+7(2),ZF1
         OI    ZTEXT+8,240                  VORZEICHEN AUF F
         BAL   R14,FILLTAB
         MVC   ZTEXT(15),NOEMPTY
         TM    GATATTR,GATDELET
         BZ    V6150
         MVC   ZTEXT(15),EMPTY
V6150    DS    0H
         BAL   R14,FILLTAB
         MVC   ZTEXT(15),NOSCRATC
         TM    GATATTR,GATSCRTH
         BZ    V6160
         MVC   ZTEXT(15),=C' SCRATCH   -   '
V6160    DS    0H
         BAL   R14,FILLTAB
         B     V61END
V6170    DS    0H
         AP    CDEFNVSM,=P'1'
         LA    R7,DEFNVSM                   R7 AUF AUSGABEDCB
         MVC   ZTEXT(15),NONVSAM
         BAL   R14,FILLTAB
         MVC   ZTEXT(15),NAME
         MVC   ZTEXT+7(44),SMF61ENM         NAME AUS SMF-TEIL,
         MVC   ZTEXT+70(2),=C')-'           DA IM CRC DER GDGBASENAME
         BAL   R14,FILLTAB                  STEHT
         XC    ZF1,ZF1                      LOESCHEN ZWISCHENFELD
         MVC   ZF1+7(1),GATCNT              CURRENT GDG-NUMBER
         XR    R14,R14
         L     R14,ZF1+4                    IN REGISTER 14
         CVD   R14,GATCOUNT                 ZAEHLER
V6190    DS    0H
         BAL   R14,R11SHIFT                 GAT-CELL UEBERSPRINGEN
         CLI   NVTYPE,C'H'                  GDG-CELL
         BNE   V6190                        NO
         SP    GATCOUNT,=P'1'               GDG-CELLS MITZAEHLEN
         CP    GATCOUNT,=P'0'               AKTUELLE GDG-CELL
         BNE   V6190                        NEIN
         B     V6110                        NUN NORMALE VERARBEITUNG
V6140DU  MVC   FKZ,=C'04'
         B     FUPRO
V61END   DS    0H
         BAL   R14,R11SHIFT
         CR    R11,R12                      ENDE ERREICHT
         BL    V6110                        NEIN
         MVI   AUSGKZ,C'A'
         BAL   R14,AUSGABUP                 JA
         B     READ
         EJECT
V65      DS    0H
         BAL   R14,AUSWAHL
         LA    R11,SMF61CRC                 ADDRESS CELLS
         LA    R11,2(R11)                   UM LAENGE VERSCHIEBEN
V6510    DS    0H
         MVC   ZTEXT(15),FIRSTLIN
         BAL   R14,FILLTAB
         CLI   NVTYPE,C'A'                  NONVSAM-CELL
         BNE   V6520                        NO
         LA    R7,DELNVSM                   R7 AUF AUSGABEDCB
         AP    CDELNVSM,=P'1'
         MVC   ZTEXT(15),DELETE
         BAL   R14,FILLTAB
         MVI   ZTEXT+1,C'('
         MVC   ZTEXT+2(44),SMF65ENM         ENTRYNAME AUS SMFSATZ
         MVC   ZTEXT+70(2),=C')-'
         BAL   R14,FILLTAB
         MVC   ZTEXT(15),NONVSAM
         BAL   R14,FILLTAB
         MVC   ZTEXT(15),NOSCRATC
         BAL   R14,FILLTAB
         MVC   ZTEXT(15),PURGE
         BAL   R14,FILLTAB
         B     V65END
V6520    DS    0H
         CLI   NVTYPE,C'B'                  VOLUME-CELL
         BNE   READ                         NAECHSTER SATZ
         BAL   R14,FILLTAB
         CLC   SMF65ENM,GDGNAME             BEI GLEICH DELETE GDG
         BNE   V6530
* DELETE GDG
         MVC   ZTEXT+2(44),GDGNAME          ENTRYNAME AUS GDG-CELL
         MVC   ZTEXT+70(2),=C')-'
         BAL   R14,FILLTAB
         MVC   ZTEXT(15),GDG
         BAL   R14,FILLTAB
         MVC   ZTEXT(15),FORCE
         BAL   R14,FILLTAB
         MVC   ZTEXT(15),PURGE
         BAL   R14,FILLTAB
         AP    CDELGDG,=P'1'
         LA    R7,DELGDG
         B     V65END
V6530    DS    0H
* DELETE NONVSAM GDG
         MVC   ZTEXT+2(44),SMF65ENM         ENTRYNAME AUS SMFSATZ
         MVC   ZTEXT+70(2),=C')-'
         BAL   R14,FILLTAB
         MVC   ZTEXT(15),NONVSAM
         BAL   R14,FILLTAB
         MVC   ZTEXT(15),NOSCRATC
         BAL   R14,FILLTAB
         MVC   ZTEXT(15),PURGE
         BAL   R14,FILLTAB
         AP    CDELNVSM,=P'1'
         LA    R7,DELNVSM
         B     V65END
V65END   DS    0H
         MVI   AUSGKZ,C'B'
         BAL   R14,AUSGABUP
         B     READ
ENDE     DS    0H
* SUMMEN AUSGEBEN
         MVI   DASA,C'1'
         MVC   DTEXT,BLANK
         MVC   DTEXT(19),=C'P904SAB SUMMENBLATT'
         PUT   DRUCKER,DBER
         MVC   DTEXT,BLANK
         MVI   DASA,C'0'
         MVC   DTEXT(16),=C'DEFINE NONVSAM: '
         UNPK  DCOUNT,CDEFNVSM
         OI    DCOUNT+4,240                 VORZEICHEN AUF F
         PUT   DRUCKER,DBER
         MVC   DTEXT(16),=C'DELETE NONVSAM: '
         UNPK  DCOUNT,CDELNVSM
         OI    DCOUNT+4,240                 VORZEICHEN AUF F
         PUT   DRUCKER,DBER
         MVC   DTEXT(16),=C'DEFINE GDG:     '
         UNPK  DCOUNT,CDEFGDG
         OI    DCOUNT+4,240                 VORZEICHEN AUF F
         PUT   DRUCKER,DBER
         MVC   DTEXT(16),=C'DELETE GDG:     '
         UNPK  DCOUNT,CDELGDG
         OI    DCOUNT+4,240                 VORZEICHEN AUF F
         PUT   DRUCKER,DBER
         CLOSE (SMF,,DEFDEL,,DEFNVSM,,DELNVSM,,DEFGDG,,DELGDG,,CONTROL,*
               ,DRUCKER)
         RETURN (14,12),RC=0
         EJECT
TYPEAUP  ST14
* TYPE A NONVSAM-CELL
         MVC   ZTEXT(15),NONVSAM
         BAL   R14,FILLTAB
         MVC   ZTEXT(15),NAME
         MVC   ZTEXT+7(44),NVNAME
         MVC   ZTEXT+70(2),=C')-'
         BAL   R14,FILLTAB
         L14
         EJECT
AUSWAHL  ST14
* PRUEFEN OB SATZ VERARBEITET WERDEN SOLL
         CLC   SMF61CNM,CATNM               CATALOGNAME
         BNE   AUSWAHLR
         CP    SMF61DTE,CDATE               DATUM
         BL    AUSWAHLR
         BH    AUSWAHLE                     KEINE UHRZEITPRUEFUNG
         MVC   ZMF61TME,SMF61TME            IN ZWIFE WEGEN ALIGNMENT
         L     R14,ZMF61TME                 SMFTIME
         L     R15,CTIME
         CR    R14,R15
         BL    AUSWAHLR
         B     AUSWAHLE
AUSWAHLR DS    0H
         B     READ                         DIREKT UEBERLESEN
AUSWAHLE L14
         EJECT
TYPE01UP ST14
* TYPE 01 OWNER-CELL
         MVC   TOTEXT(15),TO
         UNPK  TOTEXT+4(5),OWNEXPDT         EXP.DATE IN TABELLE
         OI    TOTEXT+8,240                 VORZEICHEN F
         BAL   R14,FILLTAB
TYPE01E  L14
         EJECT
TYPE04UP ST14
* TYPE 04 VOLUME-CELL
         LA    R9,FSQTAB
         LA    R14,VOLTAB
         LA    R15,VOLDEVTY
TYPE0410 DS    0H
         CLC   0(4,R14),HEXFF               TABELLENENDE
         BE    TYPE04DU                     JA, KATASTROPHE
         CLC   0(6,R14),BLANK               TAB.GLIED LEER
         BNE   TYPE0420                     NEIN
         MVC   0(6,R14),VOLSERN             AUS VOLCELL HOLEN
         MVC   0(4,R15),VOLDEVTP            AUS VOLCELL HOLEN
         MVC   0(2,R9),VOLFLSEQ             AUS VOLCELL HOLEN
         B     TYPE04E
TYPE0420 DS    0H
         LA    R14,6(R14)                   NACHSTES TAB.GLIED
         LA    R15,4(R15)                   NACHSTES TAB.GLIED
         LA    R9,2(R9)                     NACHSTES TAB.GLIED
         B     TYPE0410
TYPE04DU MVC   FKZ,=C'03'
         B     FUPRO
TYPE04E  L14
         EJECT
R11SHIFT ST14
* REGISTER 11 UM DIE LAENGE DER JEWEILIGEN CELL ERHOEHEN
         XC    ZF1,ZF1
         MVC   ZF1+6(2),0(R11)              LAENGE HOLEN
         L     R14,ZF1+4                    IN WORKREG
         AR    R11,R14                      R11 ERHOEHEN
         L14
         EJECT
CLEARTAB ST14
* LOESCHEN TEXTTABELLE
         LA    R14,TEXTTAB
CLEART10 DS    0H
         CLC   0(4,R14),HEXFF
         BE    CLEARTE
         MVC   0(80,R14),BLANK
         LA    R14,80(R14)
         B     CLEART10
CLEARTE  L14
         EJECT
         EJECT
CLEARVOL ST14
* LOESCHEN VOLUMETABELLE
         LA    R14,VOLTAB
CLEARV10 DS    0H
         CLC   0(4,R14),HEXFF
         BE    CLEARVE
         MVC   0(6,R14),BLANK
         LA    R14,6(R14)
         B     CLEARV10
CLEARVE  L14
         EJECT
CLEARDVT ST14
* LOESCHEN DEVTYPETABELLE
         LA    R14,VOLDEVTY
CLEARD10 DS    0H
         CLC   0(4,R14),HEXFF
         BE    CLEARDE
         MVC   0(4,R14),BLANK
         LA    R14,4(R14)
         B     CLEARD10
CLEARDE  L14
         EJECT
CLEARFSQ ST14
* LOESCHEN FILESEQTABELLE
         LA    R14,FSQTAB
CLEARF10 DS    0H
         CLC   0(2,R14),HEXFF
         BE    CLEARFE
         MVC   0(2,R14),BLANK
         LA    R14,2(R14)
         B     CLEARF10
CLEARFE  L14
         EJECT
FILLTAB  ST14
* FUELLEN TEXTTABELLE
         LA    R14,TEXTTAB
FILLT10  DS    0H
         CLC   0(4,R14),HEXFF  TABELLE VOLL?
         BE    FILLDU          JA, KATASTROPHE
         CLC   0(4,R14),BLANK  FELD LEER
         BNE   FILLT20
         MVC   0(80,R14),ZTEXT
         MVC   ZTEXT,BLANK
         B     FILLTE
FILLT20  DS    0H
         LA    R14,80(R14)
         B     FILLT10
*
FILLDU   MVC   FKZ,=C'02'
         B     FUPRO
*
FILLTE   L14
         EJECT
AUSGABUP ST14
* AUSGEBEN TEXTTABELLE
         LA    R8,TEXTTAB
AUSG10   DS    0H
         CLC   0(4,R8),HEXFF
         BE    AUSG20
         CLC   0(80,R8),BLANK
         BE    AUSG20
         PUT   (7),(R8)
         PUT   DEFDEL,(R8)
         LA    R8,80(R8)
         B     AUSG10
AUSG20   DS    0H
         CLI   AUSGKZ,C'A'                  BEI DELETE KEINE RESTLICHEN
         BNE   AUSG60                       INFORMATIONEN
         CLC   VOLTAB(6),BLANK              KEINE VOLUMES BEI GDG Z.B.
         BE    AUSG50                       JA
         LA    R8,VOLTAB
         MVC   ZTEXT,BLANK
         MVC   ZTEXT(15),VOLUMES
         PUT   (7),ZTEXT
         PUT   DEFDEL,ZTEXT
         MVC   ZTEXT,BLANK
         LA    R9,ZTEXT
         LA    R9,1(R9)
AUSG30   DS    0H
         CLC   0(4,R8),HEXFF
         BE    AUSG40
         CLC   0(80,R8),BLANK
         BE    AUSG40
         MVC   0(6,R9),0(R8)
         MVI   7(R9),C','
         LA    R9,7(R9)
         LA    R8,6(R8)
         B     AUSG30
AUSG40   DS    0H
         MVC   0(3,R9),=C') -'
         PUT   (7),ZTEXT
         PUT   DEFDEL,ZTEXT
AUSG50   DS    0H
         CLC   VOLDEVTY(4),BLANK            KEINE DEVTYPES VORHANDEN
         BE    AUSG55                       BEI GDGBASE JA
         LA    R8,VOLDEVTY
         MVC   ZTEXT,BLANK
         MVC   ZTEXT(15),DEVT
         PUT   (7),ZTEXT
         PUT   DEFDEL,ZTEXT
         MVC   ZTEXT,BLANK
         LA    R9,ZTEXT
         LA    R9,1(R9)
AUSG51   DS    0H
         CLC   0(4,R8),HEXFF
         BE    AUSG54
         CLC   0(4,R8),BLANK
         BE    AUSG54
* UMSETZEN DEVICETYPE
         LA    R14,DEVTAB
AUSG52   DS    0H
         CLC   0(4,R14),HEXFF
         BE    AUSG5DU                      DEVTYPE UNBEKANNT ABEND
         CLC   0(4,R14),0(R8)
         BE    AUSG53
         LA    R14,8(R14)
         B     AUSG52
AUSG5DU  DS    0H
         MVC   FKZ,=C'05'
         B     FUPRO
AUSG53   DS    0H
         MVC   0(4,R9),4(R14)               DEVTYPE UEBERTRAGEN
         MVI   5(R9),C','
         LA    R9,5(R9)
         LA    R8,4(R8)
         B     AUSG51
AUSG54   DS    0H
         MVC   0(3,R9),=C') -'
         PUT   (7),ZTEXT
         PUT   DEFDEL,ZTEXT
         MVC   ZTEXT,BLANK
AUSG55   DS    0H
         CLC   FSQTAB,BLANK                 KEINE FILESEQ
         BE    AUSG5550                     BEI GDG Z.B.
         CLC   FSQTAB,=X'0000'              FILESEQ 0
         BE    AUSG5550                     BEI PLATTE
         MVC   ZTEXT(09),=C' FSEQN( -'
         PUT   (7),ZTEXT
         PUT   DEFDEL,ZTEXT
         MVC   ZTEXT,BLANK
         LA    R8,FSQTAB
         LA    R9,ZTEXT
         LA    R9,1(R9)
AUSG5530 DS    0H
         CLC   0(2,R8),HEXFF
         BE    AUSG5540
         CLC   0(2,R8),=X'0000'
         BE    AUSG5540
         CLC   0(2,R8),BLANK
         BE    AUSG5540
* UMSETZEN FILESEQ.NR.
         XC    ZF1,ZF1
         MVC   ZF1+6(2),0(R8)
         L     R14,ZF1+4
         CVD   R14,ZF1
         UNPK  0(3,R9),ZF1
         OI    2(R9),240                    VORZEICHEN AUF F
         MVI   3(R9),C','
         LA    R8,2(R8)
         LA    R9,4(R9)
         B     AUSG5530
AUSG5540 DS    0H
         MVC   0(3,R9),=C') -'
         PUT   (7),ZTEXT
         PUT   DEFDEL,ZTEXT
AUSG5550 DS    0H
         CLC   TOTEXT,BLANK                 KEIN TO-TEXT
         BE    AUSG60                       JA
         PUT   (7),TOTEXT                   DRUCKEN TO-TEXT
         PUT   DEFDEL,TOTEXT
AUSG60   DS    0H
         MVC   ZTEXT,BLANK
         MVC   ZTEXT(15),CATALOG
         MVI   ZTEXT+70,C')'
         MVC   ZTEXT+09(44),SMF61CNM         CATALOG-NAME
         PUT   (7),ZTEXT
         PUT   DEFDEL,ZTEXT
         MVC   ZTEXT,BLANK
AUSGABE  L14
         EJECT
* FEHLERTEXT ERMITTELN UND DRUCKEN
FUPRO    DS    0H
         LA    R14,FTAB
         MVC   DTEXT,BLANK
F10      DS    0H
         CLC   0(2,R14),HEXFF
         BE    F20
         CLC   FKZ,0(R14)
         BE    F20
         LA    R14,82(R14)
         B     F10
F20      DS    0H
         MVC   DTEXT,2(R14)
         MVI   DASA,C'0'
         PUT   DRUCKER,DBER
         MVC   DTEXT,BLANK
         ABEND 12
         EJECT
FIRSTLIN DC    CL15' /*          */'
DELETE   DC    CL15' DELETE       -'
DEFINE   DC    CL15' DEFINE       -'
PURGE    DC    CL15' PURGE        -'
FORCE    DC    CL15' FORCE        -'
NOSCRATC DC    CL15' NOSCRATCH    -'
GDG      DC    CL15' GDG          -'
NAME     DC    CL15' (NAME(       -'
LIMIT    DC    CL15' LIMIT(  )    -'
NOEMPTY  DC    CL15' NOEMPTY      -'
EMPTY    DC    CL15' EMPTY        -'
NONVSAM  DC    CL15' NONVSAM      -'
VOLUMES  DC    CL15' VOLUMES(     -'
DEVT     DC    CL15' DEVT(        -'
TO       DC    CL15' TO(     ) )  -'
CATALOG  DC    CL15' CATALOG(      '
TEXTTAB  DS    20CL80
         DC    X'FFFFFFFF'
ZTEXT    DC    CL80' '
BLANK    DC    CL80' '
HEXFF    DC    X'FFFFFFFF'
GATCOUNT DS    D
ZF1      DS    D
ZMF61TME DS    F
VOLTAB   DS    20CL6
         DC    X'FFFFFFFF'
VOLDEVTY DC    20CL4' '
         DC    X'FFFFFFFF'
FSQTAB   DC    20CL2' '
         DC    X'FFFF'
* DEVICETYPE LAUT AMS REFERENCE GC26-4051-0 SEITE 254
DEVTAB   DS    0H
         DC    X'30008001',C'TAPE' 9 TRK TAPE
         DC    X'32008003',C'TAPE' 9 TRK, 6250 BPI TAPE
         DC    X'34008003',C'TAPE' 9 TRK, 1600 BPI TAPE
         DC    X'3050200B',C'3350'
         DC    X'3010200E',C'3380'
         DC    X'FFFFFFFF'
CDEFNVSM DC    PL3'0'
CDELNVSM DC    PL3'0'
CDEFGDG  DC    PL3'0'
CDELGDG  DC    PL3'0'
TOTEXT   DC    CL80' '
CLOSE    DC    C'CLOSE'
SMF      DCB   DDNAME=DD1SMFIN,                                        *
               DSORG=PS,                                               *
               EODAD=ENDE,                                             *
               MACRF=(GL)
*              BLKSIZE=4096,
*              LRECL=32760,
*              RECFM=VBS,
DEFDEL   DCB   DDNAME=DEFDEL,DSORG=PS,MACRF=(PM),RECFM=FB,LRECL=80
DEFNVSM  DCB   DDNAME=DEFNVSM,DSORG=PS,MACRF=(PM),RECFM=FB,LRECL=80
DELNVSM  DCB   DDNAME=DELNVSM,DSORG=PS,MACRF=(PM),RECFM=FB,LRECL=80
DEFGDG   DCB   DDNAME=DEFGDG,DSORG=PS,MACRF=(PM),RECFM=FB,LRECL=80
DELGDG   DCB   DDNAME=DELGDG,DSORG=PS,MACRF=(PM),RECFM=FB,LRECL=80
CONTROL  DCB   DDNAME=CONTROL,                                         *
               DSORG=PS,                                               *
               EODAD=CENDE,                                            *
               MACRF=(GM)
DRUCKER  DCB   DDNAME=DRUCKER,                                         *
               DSORG=PS,                                               *
               LRECL=133,                                              *
               RECFM=FM,                                               *
               MACRF=(PM)
AUSGKZ   DC    CL1' '
FKZ      DC    CL2'   '
FTAB     DS    0H
         DC    C'02',CL80'MEHR ALS 20 TEXTZEILEN VORHANDEN          '
         DC    C'03',CL80'MEHR ALS 20 VOL-CELLS VORHANDEN           '
         DC    C'04',CL80'GDGBASECELL GATCELL KOMMT                 '
         DC    C'05',CL80'UNGUELTIGE DEVICETYPE IN VOL-CELL         '
         DC    C'06',CL80'FEHLER IN CONTROL-STATEMENTS              '
         DC    C'07',CL80'MEHR ALS EIN CATALOG-CONTROL-STATEMENT    '
         DC    C'08',CL80'MEHR ALS EIN TIME-CONTROL-STATEMENT       '
         DC    C'09',CL80'TIME-CONTROL-STATEMENT NICHT NUMERISCH    '
         DC    C'10',CL80'TIME-CONTROL-STATEMENT UHRZEIT FALSCH     '
         DC    C'11',CL80'MEHR ALS EIN DATE-CONTROL-STATEMENT       '
         DC    C'12',CL80'DATE-CONTROL-STATEMENT NICHT NUMERISCH    '
         DC    C'13',CL80'DATE-CONTROL-STATEMENT UHRZEIT FALSCH     '
         DC    C'14',CL80'CATALOG-STATEMENT FEHLT                   '
         DC    C'15',CL80'TIME-STATEMENT FEHLT                      '
         DC    C'16',CL80'DATE-STATEMENT FEHLT                      '
         DC    X'FFFF',CL80'UNBEKANNTES FEHLERKENNZEICHEN           '
TYPEN    DSECT
         EJECT
***********************************************************************
*                                                                     *
*        N O N V S A M   N A M E   C E L L                            *
*                                                                     *
***********************************************************************
NVNC     DS    0CL52                   NONVSAM NAME CELL
NVCELEN  DS    CL2                     LENGTH OF NVNC
NVTYPE   DS    C                       TYPE 'A' FOR NONVSAM
NVRESV   DS    C                       RESERVED
NVOLCNT  DS    CL2                     NO. OF VOLUME CELLS (UP TO 255)
NVKEYLN  DS    C                       LENGTH OF NVSAM KEY
NVNAME   DS    CL44                    NONVSAM NAME
NVPAD    DS    C                       PAD VALUE (BINARY ZERO)
         ORG   TYPEN
         EJECT
***********************************************************************
*                                                                     *
*        G E N E R A T I O N   D A T A   G R O U P   N A M E   C E L L*
*                                                                     *
***********************************************************************
GDGNC    DS    0CL52                   GENERATION DATA GROUP NAME CELL
GDGCELLN DS    CL2                     LENGTH OF GDGNC
GDGTYPE  DS    C                       TYPE 'B' FOR GDG
GDGCMPLN DS    CL2                     LENGTH OF GDG COMPONENT
GDGNOEXT DS    C                       NO. OF EXTENTION RECORDS
GDGKYLEN DS    C                       LENGTH OF GDG KEY
GDGKEY   DS    0CL45                   GDG KEY (NAME + PAD)
GDGNAME  DS    CL44                    GDG NAME
GDGPAD   DS    C                       PAD VALUE (BINARY ZERO)
         ORG   TYPEN
         EJECT
***********************************************************************
*                                                                     *
*        O W N E R S H I P   C E L L                                  *
*                                                                     *
***********************************************************************
OWNERC   DS    0CL18                   OWNERSHIP CELL
OWNCELLN DS    CL2                     LENGTH OF OWNERC
OWNTYPE  DS    C                       TYPE X'01' FOR OWNERSHIP CELL
OWNID    DS    CL8                     OWNER IDENTIFICATION
OWNFLAG  DS    C                       FLAG BYTE
OWNRACF  EQU   X'80'                   RACF PROTECTION
OWNKSDS  EQU   X'40'                   INDEX COMPONENT DATASET
OWNREUS  EQU   X'20'                   REUSEABLE DATASET
OWNERASE EQU   X'10'                   ERASE SPECIFIED
OWNRESV  EQU   X'0C'                   RESERVED
OWNSWAP  EQU   X'02'                   SWAP SPACE
OWNPAGE  EQU   X'01'                   PAGE SPACE
OWNCREDT DS    CL3                     CREATION DATE
OWNEXPDT DS    CL3                     EXPIRATION DATE
         ORG   TYPEN
         EJECT
***********************************************************************
*                                                                     *
*        V O L U M E   C E L L                                        *
*                                                                     *
***********************************************************************
VOLCELL  DS    0CL28                   VOLUME CELL
VOLLEN   DS    CL2                     LENGTH OF VOLUME CELL
VOLTYPE  DS    C                       TYPE X'04' FOR VOLUME CELL
VOLOFSET DS    C                       NOT USED
VOLSERN  DS    CL6                     VOLUME SERIAL NUMBER
VOLDEVTP DS    CL4                     DEVICE TYPE
VOLFLAG1 DS    C                       VOLUME FLAG1
VOLPRIME EQU   X'80'                   PRIME VOLUME ALLOCATED SPACE
VOLCANDI EQU   X'40'                   CANDIDATE VOLUME - NO SPACE
VOLOFLOW EQU   X'20'                   OVERFLOW KEYRANGE ONLY
VOLCONV  EQU   X'10'                   CONVERTED VSAM DATASET VOLUME
VOLNVSAM EQU   X'08'                   NONVSAM VOLUME CELL
VOLKYRNG EQU   X'04'                   KEYRANGE QUALIFIER PRESENT
VOLVPCI  EQU   X'02'                   PRIMARY VVR CI
VOLSSQWD EQU   X'01'                   SEQUENCE SET WITH DATA
VOLFLAG2 DS    C                       RESERVED
VOLVVRBA DS    0CL4                    RELATIVE BYTE ADDRESS OF VVR
VOLDSTTR DS    CL3                     NONVSAM FORMAT 1 DSCB TTR
VOLRSV01 DS    C                       RESERVED
VOLFLSEQ DS    CL2                     NONVSAM FILE SEQ. NUMBER (TAPE)
VOLKRQL  DS    0CL4                    KEYRANGE QUALIFIER (VSAM ONLY)
VOLRSV02 DS    CL4                     RESERVED FOR NONVSAM
VOLLKYLN DS    CL2                     LENGTH OF LOW KEY RANGE KEY
VOLLOWKY DS    0CL64                   1- 64 BYTES LOW KEY
         ORG   VOLCELL
VOLHKYLN DS    CL2                     LENGTH OF HIGH KEY RANGE KEY
VOLHIKY  DS    0CL64                   1 - 64 BYTES HIGH KEY
         ORG   TYPEN
         EJECT
***********************************************************************
*                                                                     *
*        G E N E R A T I O N   A G I N G   T A B L E   C E L L        *
*                                                                     *
***********************************************************************
GATC     DS    0CL6                    GENERATION AGING TABLE CELL
GATCELN  DS    CL2                     LENGTH OF GAT CELL
GATYPE   DS    C                       TYPE X'05' FOR GAT CELL
GATATTR  DS    C                       ATTRIBUTES
GATDELET EQU   X'80'                   0 => OLDEST, 1 => ALL ENTRIES
GATSCRTH EQU   X'40'                   0 => NOSCR, 1 => SCR IF MOUNTED
GATRESV  EQU   X'3F'                   RESERVED
GATLIMIT DS    C                       MAX. GDG ENTRIES IN GDG BASE
GATCNT   DS    C                       CURRENT NO. OF ENTRIES IN GAT
GAT      DS    0CL4                    GAT ENTRY (FOR EVERY CUR. ENTRY)
GATEXTNO DS    C                       EXTENTION RECORD SEQ. NO.
GATGEN   DS    CL2                     GENERATION NUMBER OF GDS
GATWRAP  EQU   X'80'                   NUMBER EXCEEDS 9999
GATVER   DS    C                       VERSION NUMBER OF GDS
SMF61    DSECT
         IFASMFI6 61       DEFINE
SMF65    ORG   SMF61
         IFASMFI6 65       SCRATCH
         END
