./       ADD   LIST=ALL,NAME=ORWG02AS
CANCEL   CSECT
         REG
         XSAVE R12,,CANCEL,WORKL
         USING WORK,R13
         LR    R14,R1
         USING PARMAREA,R14
         L     R2,16
         TM    116(R2),X'01'
         BZ    NOTMVS
         LA    R2,TEXT
         LA    R11,ZWI
         MVI   ASID,X'00'
         MVI   IND1,X'40'
         CLC   7(5,R2),=C'ASID='
         BE    PARASID
         SPACE 1
PARJOBNM EQU   *
         LA    R5,6(,R2)           SCAN JOBNAME
         LA    R7,9
TESTCHAR EQU   *
         LA    R4,0
NEXTCHAR EQU   *
         LA    R5,1(,R5)
         CLI   0(R5),C','
         BE    PAREND
         CLI   0(R5),X'40'
         BE    PARMERR
         LA    R4,1(,R4)
         BCT   R7,NEXTCHAR
         B     PARMERR
         SPACE 1
PARASID  EQU   *
         MVI   ASID,X'FF'
         MVI   IND1,X'80'
         LA    R5,11(,R2)          SCAN ASID
         LA    R7,5
         B     TESTCHAR
         SPACE 1
PAREND   EQU   *
         LTR   R4,R4
         BZ    PARMERR
         CLI   1(R5),C','
         BNE   PARMERR
         CLI   2(R5),X'40'
         BE    PARMERR
         SPACE 1
         LA    R6,1(,R5)
         CLI   1(R6),C'/'
         BE    PARMERR
         LA    R7,19
TESTNAME EQU   *
         LA    R6,1(,R6)
         CLI   0(R6),X'40'
         BE    PARMERR
         CLI   0(R6),C'/'
         BE    NAMEEND
         BCT   R7,TESTNAME
         B     PARMERR
         SPACE 1
NAMEEND  EQU   *
         CLI   1(R6),X'40'
         BE    PARMERR
         MVC   NAME,2(R5)
         BCTR  R4,0
         L     R3,16               CVT PTR
         L     R3,196(,R3)         JMR PTR
         MVC   SID,16(R3)          MOVE SYSTEM ID
         L     R3,16               CVT PTR
         L     R3,0(,R3)           TCB WORD
         L     R3,4(,R3)           CURRENT TCB
         L     R3,12(,R3)          TIOT PTR
         MVC   JOBNME(24),0(R3)
         MVI   SMFRTYPE+1,130
         MVC   USERTYPE,=CL8'CANCEL'
         L     R3,16               CVT PTR
         L     R3,556(,R3)         ASVT PTR
         LA    R3,528(,R3)         ASCB CHAIN
         SR    R6,R6               CLEAR REG 6
         SR    R7,R7               CLEAR REG 7
         CLI   ASID,X'FF'
         BE    CONVASID
         SPACE 1
SCANJOBN EQU   *
         LA    R5,7(,R2)
         MVC   FIELD8,=CL8' '
         EX    R4,MOVENAME
SC01     EQU   *
         ICM   R6,7,1(R3)          ASCB
         BZ    NOTFOUND
         TM    0(R3),X'80'
         BO    SC03                ASID NOT AVAILABLE
         CLC   0(4,R6),=C'ASCB'
         BNE   ABEND001
         ICM   R7,7,173(R6)        JOBNAME FIELD 1
         BNZ   SC02
         ICM   R7,7,177(R6)        JOBNAME FIELD 2
SC02     EQU   *
         CLC   FIELD8,0(R7)        COMP JOBNAMES
         BE    JOBFOUND
SC03     EQU   *
         LA    R3,4(,R3)           NEXT ASCB
         B     SC01
         SPACE 1
MOVENAME MVC   FIELD8(0),0(R5)
         SPACE 1
CONVASID EQU   *
         LA    R7,1(,R4)
         LA    R5,12(,R2)
CN01     EQU   *
         CLI   0(R5),C'0'
         BL    PARMERR
         CLI   0(R5),C'9'
         BH    PARMERR
         LA    R5,1(,R5)
         BCT   R7,CN01
         LA    R5,12(,R2)
         EX    R4,PACKASID
         CVB   R4,CONVERT
         STH   R4,CONVERT
CN02     EQU   *
         ICM   R6,7,1(R3)          ASCB
         BZ    NOTFOUND
         TM    0(R3),X'80'
         BO    CN03                ASID NOT AVAILABLE
         CLC   0(4,R6),=C'ASCB'
         BNE   ABEND001
         CLC   36(2,R6),CONVERT    COMP ASID
         BE    ASIDFND
CN03     EQU   *
         LA    R3,4(,R3)           NEXT ASCB
         B     CN02
         SPACE 1
PACKASID PACK  CONVERT,0(0,R5)
         SPACE 1
JOBFOUND EQU   *
ASIDFND  EQU   *
         LH    R5,36(,R6)          ASID
         CVD   R5,CONVERT
         UNPK  ASIDNO,CONVERT+5(3)
         OI    ASIDNO+3,X'F0'
         ICM   R7,7,173(R6)        JOBNAME FIELD 1
         BNZ   CNC01
         ICM   R7,7,177(R6)        JOBNAME FIELD 2
CNC01    EQU   *
         MVC   JOBNAME,0(R7)       JOBNAME
         MVI   IND2,X'80'
         CH    R5,=H'2'
         BH    CNC02
         CLI   0(R7),C'*'          TEST FOR '*MASTER*' OR '*AUXSTM*'
         BNE   CNC02
         MVI   IND2,X'40'
CNC02    EQU   *
         LA    R15,SMFLEN
         STH   R15,SMFRDW
         STCM  R15,12,SMFRDW+2
         TIME  BIN
         STM   R0,R1,CONVERT
         MVC   TIME(8),CONVERT
         LA    R1,SMFREC
         SVC   83
         LTR   R15,R15
         BZ    SMFOK
         MVC   WTO(LENOFSMF),SMFERRL
         L     R0,REG4
         WTO   MF=(E,WTO)
SMFOK    EQU   *
         TM    IND2,X'40'
         BO    NOCANCEL
         MODESET KEY=ZERO,MODE=SUP
         ST    R14,SAVER14
         LR    R10,R13
         LA    R13,SVA2
         SR    R0,R0
         CALLRTM TYPE=MEMTERM,COMPCOD=422,ASID=(R5)
         LR    R13,R10
         L     R14,SAVER14
         MODESET KEY=NZERO,MODE=PROB
         MVC   WTO(LENCNCOK),CNCOKMSG
         MVC   WTO+40(4),ASIDNO
         MVC   WTO+52(8),JOBNAME
         SPACE 3
ENDWTO   EQU   *
         L     R0,REG4
         WTO   MF=(E,WTO)
         XRETURN ,R
         EJECT
PARMERR  EQU   *
         MVC   WTO(LENPRMER),PARMERRL
         B     ENDWTO
         SPACE 3
NOTFOUND EQU   *
         MVC   WTO(LENNOTFD),NOTFNDL
         CLI   ASID,X'FF'
         BNE   ENDWTO
         MVC   WTO+15(4),=C'ASID'
         B     ENDWTO
         SPACE 3
NOCANCEL EQU   *
         MVC   WTO(LENKILL),KILLMSGL
         B     ENDWTO
         SPACE 3
NOTMVS   EQU   *
         MVC   WTO(LENOTMVS),NOTMVSL
         B     ENDWTO
         SPACE 3
ABEND001 EQU   *
         ABEND 1,DUMP
         EJECT
CNCOKMSG WTO   'XCANCEL00  CANCEL COMPLETE   ASID = XXXX  JOB = XXXXXXX*
               X',MF=L,MCSFLAG=(REG0)
LENCNCOK EQU   *-CNCOKMSG
         SPACE 2
NOTFNDL  WTO   'XCANCEL01   JOB NOT FOUND',MF=L,MCSFLAG=(REG0)
LENNOTFD EQU   *-NOTFNDL
         SPACE 2
PARMERRL WTO   'XCANCEL02  PARAMETER ERROR',MF=L,MCSFLAG=(REG0)
LENPRMER EQU   *-PARMERRL
         SPACE 2
KILLMSGL WTO   'XCANCEL03  ARE YOU KIDDING?',MF=L,MCSFLAG=(REG0)
LENKILL  EQU   *-KILLMSGL
         SPACE 2
SMFERRL  WTO   'XCANCEL04  ERROR WHILE WRITING SMF-RECORD',MF=L,       *
               MCSFLAG=(REG0)
LENOFSMF EQU   *-SMFERRL
         SPACE 2
NOTMVSL  WTO   'XCANCEL05  CANCEL NOT IN MVS ENVIRONMENT',MF=L,        *
               MCSFLAG=(REG0)
LENOTMVS EQU   *-NOTMVSL
         SPACE 2
         LTORG
         EJECT
WORK     DSECT
SVA1     DS    3F
SVA2     DS    18F
SAVER14  DS    F
WTO      DS    CL80
ZWI      DS    CL80
CONVERT  DS    D
FIELD8   DS    CL8
ASID     DS    C
*
*****    SYSTEM CANCEL RECORD
*
SMFREC   DS    0F
SMFRDW   DS    F
SMFRTYPE DS    XL2
TIME     DS    CL4
DATE     DS    CL4
SID      DS    CL4
USERTYPE DS    CL8
JOBNME   DS    CL8
STEPNME  DS    CL8
PRGNME   DS    CL8
NAME     DS    CL20
*
*   IND1 CAN HAVE THE FOLLOWING VALUES
*
*        X'80'  --  CANCEL BY ASID REQUESTED
*        X'40'  --  CANCEL BY JOBNAME REQUESTED
*
IND1     DS    XL1
*
*   IND2 CAN HAVE THE FOLLOWING VALUES
*        X'80'  --  CALLRTM ISSUED
*        X'40'  --  CALLRTM NOT ISSUED
*
IND2     DS    XL1
ASIDNO   DS    CL4
JOBNAME  DS    CL8
SMFLEN   EQU   *-SMFRDW
WORKL    EQU   *-WORK
         SPACE 3
         XPARM
         EJECT
CVT      DSECT
         CVT
         SPACE 3
         END   CANCEL
./       ADD   LIST=ALL,NAME=ORWG02BM
         MACRO
         REG
*
*        REGISTER EQUATES
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
RA       EQU   R10
R11      EQU   11
RB       EQU   R11
R12      EQU   12
RC       EQU   R12
R13      EQU   13
RD       EQU   R13
R14      EQU   14
RE       EQU   R14
R15      EQU   15
RF       EQU   R15
         SPACE 2
         MEND
./       ADD   LIST=ALL,NAME=ORWG02CM
         MACRO
&SYM     XSAVE &BASE,&AREA,&ID,&LEN
.*
.*                 EXTENDED SAVE MACRO
.*                 ASSUMES ENTRYPOINT ADDRESS IN REGISTER 15
.*                 SAVES REGISTERS 14 THROUGH 12
.*                 LOADS BASE REGISTER AND CHAINES SAVEAREAS
.*                 MAY PRODUCE REENTRANT CODE
.*
         LCLA  &OFFSET,&BASEOFF,&LLID,&DISPL
         LCLA  &NREG,&REGIX
         LCLC  &NM,&REG,&BL
         LCLC  &PREV
&OFFSET  SETA  4
&NM      SETC  '&SYM'
&REG     SETC  '15'
&BL      SETC  ''
         AIF   (T'&ID EQ 'O').NOID
&LLID    SETA  K'&ID
         AIF   (&LLID NE &LLID/2*2).OVBL
&BL      SETC  ' '
&LLID    SETA  &LLID+1   BLANK
.OVBL    ANOP
&LLID    SETA  &LLID+8   DATE
&DISPL   SETA  4+1+&LLID   B,X,(DATE,ID)
&NM      B     &DISPL.(0,15)
         DC    AL1(&LLID)
         DC    C'&ID&BL'
         DC    CL8'&SYSDATE'
&OFFSET  SETA  4+4+1+&LLID   B,STM,X,(DATE,ID)
&NM      SETC  ''
.NOID    ANOP
&NM      STM   14,12,12(13)            SAVE REGS
         AIF   (T'&BASE EQ 'O').NOBASE
         AIF   ('&BASE'(1,1) NE '(').LOAD
&REGIX   SETA  1
&NREG    SETA  N'&BASE
&REG     SETC  '&BASE(&REGIX)'
         LR    &REG,15
&OFFSET  SETA  &OFFSET+2
.LOOP    ANOP
         USING *-&OFFSET+&BASEOFF,&REG
&REGIX   SETA  &REGIX+1
         AIF   ('&REGIX' GT '&NREG').SETUSE
&PREV    SETC  '&REG'
&REG     SETC  '&BASE(&REGIX)'
         LA    &REG,X'FFF'
         LA    &REG,1(&REG,&PREV)
&OFFSET  SETA  &OFFSET+8
&BASEOFF SETA  &BASEOFF+4096
         AGO   .LOOP
.LOAD    LR    &BASE,15                LOAD BASE REG
&OFFSET  SETA  &OFFSET+2
&REG     SETC  '&BASE'
.NOBASE  ANOP
         USING *-&OFFSET,&REG
.SETUSE  ANOP
         AIF   (T'&AREA NE 'O').NORENT
         AIF   (T'&LEN NE 'O').NOTZERO
         LA    0,72                    GET LENGTH
         AGO   .COMP
.NOTZERO ANOP
         LA    0,&LEN                  GET LENGTH
.COMP    ANOP
         LA    1,1                     PREPARE FOR SP 1
         SLL   1,24                    SP 1 IN HIGH ORDER BYTE
         OR    0,1                     INSERT SP 1
         GETMAIN   R,LV=(0)            GET CORE
         XC    0(3*4,1),0(1)           ZERO CHAIN ADDRESSES
         AIF   (T'&LEN NE 'O').GET
         LA    0,72                    GET LENGTH
         AGO   .NOSTH
.GET     ANOP
         LA    0,&LEN                  GET LENGTH
.NOSTH   ANOP
         STH   0,2(1)                  STORE LENGTH
         AGO   .COM
.NORENT  LA    1,&AREA                 GET SA ADDR
.COM     ST    1,8(0,13)               SA DOWN CHAIN
         ST    13,4(0,1)               SA UP CHAIN
         LR    13,1                    LOAD SA REG
         L     1,4(0,13)               GET HIGH SA
         LM    0,1,20(1)               RESTORE REGS 0 AND 1
         AIF   (T'&AREA NE 'O').TEST
         MEXIT
.TEST    AIF   (T'&AREA EQ 'U').DEFINE
         MEXIT
.DEFINE  B     &AREA+72                BRANCH AROUND SAVEAREA
&AREA    DC    18F'0'                  SAVEAREA
         MEND
./       ADD   LIST=ALL,NAME=ORWG02DM
         MACRO
&SYM     XRETURN &RC,&MODE
.*
.*                 EXTENDED RETURN MACRO
.*                 RESTORES REGISTERS
.*                 MAY PROVIDE RETURNCODE
.*
         LCLA  &C
         LCLB  &NC,&CF
         LCLC  &R,&NM
         AIF   (T'&MODE EQ 'O' OR '&MODE' EQ 'R').CONT
         MNOTE 8,'UNKNOWN OPERAND'
         MEXIT
.CONT    ANOP
&NM      SETC  '&SYM'
         AIF   (T'&RC NE 'O').CODE
&NC      SETB  (1)
         AGO   .NOCODE
.CODE    ANOP
&R       SETC  '15'
         AIF   ('&RC'(1,1) EQ '(').REG
         AIF   (T'&RC EQ 'N').FIX
&NM      L     15,&RC                  LOAD CODE
&NM      SETC  ''
         AGO   .NOCODE
.FIX     ANOP
&CF      SETB  (1)
         AGO   .NOCODE
.REG     ANOP
&R       SETC  '&RC'(2,K'&RC-2)
.NOCODE  ANOP
&NM      L     13,4(0,13)              GET HIGH SA ADDR
         AIF   (&NC OR &CF).NOSTORE
         ST    &R,16(0,13)             STORE CODE
.NOSTORE AIF   (T'&MODE EQ 'O').NORENT
         L     1,8(0,13)               GET LOW SA ADDR
         LH    0,2(1)                  GET LENGTH
         LA    15,1                    PREPARE FOR SP 1
         SLL   15,24                   SP IN HIGH ORDER BYTE
         OR    0,15                    INSERT SP 1
         FREEMAIN  R,LV=(0),A=(1)      FREE CORE
.NORENT  LM    14,12,12(13)            RESTORE REGS
         AIF   (NOT &CF).EXIT
         LA    15,&RC                  LOAD CODE
&C       SETA  &RC
         AIF   (&C/4*4 EQ &C).EXIT
         MNOTE 0,'UNUSUAL CODE'
.EXIT    MVI   12(13),X'FF'            FORTRAN REQUIREMENT
         SPM   14                      RESTORE PGM MASK AND CC
         BR    14
         MEND
./       ADD   LIST=ALL,NAME=ORWG02EM
         MACRO
         XPARM
PARMAREA DSECT
REG4     DS    F
TEXT     DS    CL124
PRMLEN   EQU   *-PARMAREA
         MEND
         MACRO
&NAME    MBASIS &RA,&RE,&RC=,&TYPE=N,&MAXMUP=
         GBLB  &MTRB000            MUPTRACE ACTIVE
         GBLB  &MTRB004(2)         MUPTRACE MBASIS
         GBLA  &MBSA001            MBASIS COUNT
         GBLA  &MBSA002            MBASIS MAXMUP
         GBLB  &MBSB001            MBASIS PRESENT
         GBLB  &MBSB002            MBASIS RC=(R15)
         GBLB  &MBSB003            MBASIS TYPE=R
         GBLC  &MBSC001(30)        MBASIS &SYSECT
         GBLC  &MBSC002(30)        MBASIS &SYSNDX
         LCLA  &M
         LCLC  &T
&MBSA001 SETA  &MBSA001+1
         AIF   (&MBSA001 GT 30).E1
         AIF   (N'&SYSLIST LE 2).L0
         MNOTE 4,'MORE THAN TWO POSITIONAL OPERANDS. ONLY FIRST TWO USE*
               D'
.L0      ANOP
         AIF   ('&TYPE' EQ 'N').M3
         AIF   (T'&MAXMUP NE 'O').M0
         MNOTE 4,'MAXMUP MISSING. 20 ASSUMED'
&MBSA002 SETA  20
         AGO   .M3
.M0      AIF   (T'&MAXMUP EQ 'N').M2
.M1      MNOTE 8,'MAXMUP INVALID. 20 ASSUMED'
&MBSA002 SETA  20
         AGO   .M3
.M2      ANOP
&M       SETA  &MAXMUP
         AIF   (&M LE 0 OR &M GT 500).M1
&MBSA002 SETA  &MAXMUP
.M3      ANOP
         AIF   (&MBSB003).L4
         AIF   ('&TYPE' EQ 'R').L2
&T       SETC  '&TYPE'
         AIF   ('&TYPE' EQ 'N' OR '&TYPE' EQ 'S' OR '&TYPE' EQ 'T').L1
         MNOTE 8,'TYPE INVALID. N ASSUMED'
&T       SETC  'N'
.L1      ANOP
&NAME    MBASISN &RA,&RE,RC=&RC,TYPE=&T
         MEXIT
.L2      ANOP
         AIF   (NOT &MBSB001).L3
         MNOTE 8,'PRIOR MBASIS WAS NOT TYPE=R'
.L3      ANOP
&MBSB002 SETB  1
&MBSB003 SETB  1
         AIF   (NOT &MTRB000).L4
         MNOTE 8,'*** TRACE WURDE SPEZIFIZIERT FUER REENTRANT CODE ***'
         MNOTE 8,'*** TRACE-ROUTINE IST NICHT REENTRANT ***'
.L4      ANOP
&NAME    MBASISR &RA,&RE,RC=(R15),TYPE=R
         MEXIT
.E1      MNOTE 12,'MORE THAN 30 MBASIS. MACRO GENERATION TERMINATED'
         MEND
./       ADD   LIST=ALL,NAME=ORWG02FA
%%HISTORY.
AUTHOR(S).    K.MEISER IBM SE
INSTALLATION. GEZ
              5000 KOELN-BOCKLEMUEND
              RECHENZENTRUM.
        ****************************************
        ***** MODIFIKATION 01 ******************
        ** RWG, 7000 STUUTGART, GENOHAUS *******
        ****************************************
DATE-WRITTEN. 12/06/75.
LAST UPDATE.  --/--/--.
REMARKS.
    AUTHORISATION CODE MUST BE 1.
    IT IS SUPPPORTED FOR OS/VS2 (MVS) ONLY.
%%SYNTAX.
  F X,CANCEL,<JOBNAME>,,<NAME1/NAME2/TEXT>  OR
  F X,CANCEL,ASID=<NN>,,<NAME1/NAME2/TEXT>
                  <JOBNAME> IS THE 1 TO 8 CHAR
                            JOBNAME OR USERID.
                  <NN>      IS THE D E C I M A L
                            ASID
                  <NAME1>   NAME DES VERANTWORTLICHEN
                  <NAME2>   NAME DES EINGEBENDEN
                  <TEXT>BEMERKUNGEN DAZU
                  CANCEL COMMANDS FOR ASIDS 1 AND 2
                  ARE NOT ACCEPTED.
%%FUNCTION.
THIS PROGRAM CAN BE USED TO TERMINATE
A SPECIFIC MEMORY (EMERGENCY CANCEL)
IN CASE A NORMAL OS OR JES CANCEL
WILL NOT BE EXECUTED.
THE COMPLETE MEMORY (USER JOB AND INIT)
IS TERMINATED.
/*
