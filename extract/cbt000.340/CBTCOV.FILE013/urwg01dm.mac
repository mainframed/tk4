         MACRO
&NAME    MBASISR &RA,&RE,&RC=(R15),&TYPE=R
         GBLB  &MTRB004(2)         MUPTRACE MBASIS
         GBLA  &MBSA001            MBASIS COUNT
         GBLB  &MBSB001            MBASIS PRESENT
         GBLB  &MBSB002            MBASIS RC=(R15)
         GBLB  &MBSB003            MBASIS TYPE=R
         GBLC  &MBSC001(30)        MBASIS &SYSECT
         GBLC  &MBSC002(30)        MBASIS &SYSNDX
         LCLA  &R1,&R2,&V,&W,&CNT,&G
         LCLB  &A,&E,&S
         LCLC  &R(11),&K(11),&N,&X
&G       SETA  &MBSA001
&MBSC001(&G) SETC '&SYSECT'
&MBSC002(&G) SETC '&SYSNDX'
&S       SETB  (&MBSB001)
&X       SETC  '&SYSNDX'
         AIF   ('&RA' EQ '').L4
&A       SETB  1
         AIF   ('&RA'(1,1) EQ 'R').L2
         AIF   (T'&RA NE 'N').E1
         AIF   ('&RA' LT '2' OR '&RA' GT '12').E1
&R1      SETA  &RA
         AGO   .L8
.L2      ANOP
&W       SETA  K'&RA-1
&N       SETC  '&RA'(2,&W)
         AIF   (&W GT 1).L3
         AIF   ('&N' GE '2' AND '&N' LE '9').L6
         AGO   .E1
.L3      AIF   ('&N'(1,1) NE '1').E1
         AIF   ('&N'(2,1) GE '0' AND '&N'(2,1) LE '2').L6
.E1      MNOTE 4,'FIRST OPERAND MUST BE IN RANGE OF ''R2 - R12''. R3 US*
               ED'
.L4      ANOP
&R1      SETA  3
         AGO   .L8
.L6      ANOP
&R1      SETA  &N
.L8      AIF   ('&RE' EQ '').L22
&E       SETB  1
         AIF   (&A).L9
         MNOTE *,'FIRST OPERAND MISSING. R3 USED'
.L9      ANOP
         AIF   ('&RE'(1,1) EQ 'R').L10
         AIF   (T'&RE NE 'N').E2
         AIF   ('&RE' LT '3' OR '&RE' GT '12').E2
&R2      SETA  &RE
         AGO   .L16
.L10     ANOP
&W       SETA  K'&RE-1
&N       SETC  '&RE'(2,&W)
         AIF   (&W GT 1).L11
         AIF   ('&N' GE '3' AND '&N' LE '9').L14
         AGO   .E2
.L11     AIF   ('&N'(1,1) NE '1').E2
         AIF   ('&N'(2,1) GE '0' AND '&N'(2,1) LE '2').L14
.E2      MNOTE 12,'SECOND OPERAND MUST BE IN RANGE OF ''R3 - R12''. R12*
                USED'
.L12     ANOP
&R2      SETA  12
         AGO   .L16
.L14     ANOP
&R2      SETA  &N
.L16     AIF   (&R1 NE &R2).L18
         MNOTE 0,'FIRST AND SECOND OPERAND EQUAL. SECOND IGNORED'
&E       SETB  0
         AGO   .L22
.L18     AIF   (&R1 LT &R2).L20
         MNOTE 12,'SECOND OPERAND MUST BE GREATER THAN FIRST ONE. R12 U*
               SED'
         AGO   .L12
.L20     ANOP
&CNT     SETA  &R2-&R1
.L22     AIF   (&A OR &E).L23
         MNOTE *,'FIRST OPERAND MISSING. R3 USED'
.L23     ANOP
&R(1)    SETC  'R&R1'
&K(1)    SETC  ',R&R1'
         AIF   (NOT &E).L26
&W       SETA  2
.L24     ANOP
&R2      SETA  &R1+&W-1
&R(&W)   SETC  'R&R2'
&K(&W)   SETC  ',R&R2'
&W       SETA  &W+1
         AIF   (&W LE (&CNT+1)).L24
.L26     ANOP
*                                 ESTABLISH NEW BASE REGISTERS
         USING *&K(1)&K(2)&K(3)&K(4)&K(5)&K(6)&K(7)&K(8)&K(9)&K(10)&K(1*
               1)
&W       SETA  K'&SYSECT
         AIF   (&W GT 1).L27
&W       SETA  2
.L27     ANOP
&W       SETA  &W+10+16
&V       SETA  &W+4+1+1
&V       SETA  &V/2
&V       SETA  &V*2
&NAME    B     &V.(0,R15) .       BRANCH AROUND IDENTIFIER
         DC    AL1(&W) .          LENGTH OF IDENTIFIER
         DC    CL&W'RWG-CSECT &SYSECT  &SYSTIME &SYSDATE'
         STM   R14,R12,12(R13) .  SAVE REGS INTO CALLING PROGRAMM
         LA    &R(1),0(0,R15)      LOAD FIRST BASE REGISTER
         LA    R14,96(0,R13) .    LOAD SAVEAREA-ADDR-CALLED-PGM
         ST    R14,8(0,R13) .     STORE ADDR INTO CALLING PGM-SAVEAREA
         ST    R13,4(0,R14) .      STORE SAVEAREA-ADDR-CALLING-PGM HERE
         LA    R13,0(0,R14) .     LOAD ACTUAL SAVEAREA-ADDR INTO REG13
         AIF   (NOT &E).L30
         LA    R14,1 .            USE ONE AS INDEX FOR NEXT BASE REGS
&W       SETA  2
.L28     ANOP
&R1      SETA  &W-1
         LA    &R(&W),4095(R14,&R(&R1))
&W       SETA  &W+1
         AIF   (&W LE (&CNT+1)).L28
.L30     AIF   (&MTRB004(1)).TL1
         B     USER&X              BRANCH TO USER PROGRAMM
         AGO   .TL2
.TL1     B     TRAC&X              BRANCH TO DO TRACE
.TL2     ANOP
         SPACE 2
MRET&X   EQU   * .                ENTRY FOR EXIT TO CALLING PROGRAMM
         AIF   (NOT &MTRB004(1)).TR1
         STM   R14,R0,84(R13)      SAVE USER REGISTER
         L     R15,72(0,R13)       LOAD TRACE-ROUTINE ADDRESS
         ICM   R0,8,80(R13)        SET MACRO-TYPE
         BALR  R14,R15             BRANCH TO TRACE-ROUTINE
         L     R15,88(0,R13)       RESTORE USER RETURN-CODE
.TR1     L     R13,4(0,R13) .     LOAD SAVEAREA-ADR-CALLING-PGM
         L     R14,12(0,R13) .    LOAD RETURN-ADDRESS
*                                 RETURN-CODE WAS PRELOADED INTO REG 15
         LM    R0,R12,20(R13) .   RESTORE REGS FOR CALLING-PGM
         MVI   12(R13),255 .      SET RETURN-INDICATOR
         BR    R14 .              RETURN TO CALLING PROGRAMM
         AIF   (&S).S5
         SPACE 2
*                                      EQUATE REGISTERS TO SYMBOLS
         SPACE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
&MBSB001 SETB  1
.S5      ANOP
         AIF   (NOT &MTRB004(1)).S6
         SPACE 2
TRAC&X   STM   R14,R0,84(R13)      SAVE USER REGISTER
         L     R15,72(0,R13)       LOAD TRACE-ROUTINE ADDRESS
         LA    R0,48(0,&R(1))      LOAD ID-REGISTER WITH DUMMY-SAVEADDR
         ICM   R0,8,79(R13)        SET MACRO-TYPE
         BALR  R14,R15             BRANCH TO TRACE-ROUTINE
         LM    R14,R0,84(R13)      RESTORE USER REGISTER
.S6      ANOP
         SPACE 2
USER&X   DC    0H'0' .            USER PROGRAMM STARTS HERE
         EJECT
         MEND
