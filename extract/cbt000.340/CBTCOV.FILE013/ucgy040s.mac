         MACRO
&L       CDMSAVE &R,&B=12,&P=NOGEN,&REGS=YES,&TYP=CSECT,&SA=NO,&SAL=,  *
               &WK=2
         LCLA  &XX
         LCLC  &ZZ,&PP
&PP      SETC  '&P'
         AIF   ('&PP' EQ 'NONE').BEG
         AIF   ('&PP' EQ 'GEN' OR '&PP' EQ 'NOGEN').NPUSH
         PUSH  PRINT
         AIF   ('&PP' EQ 'PNP').NGEN
         AIF   ('&PP' EQ 'PGP').GEN
         MNOTE 12,'CDMSAVE GOT ILLEGAL P (PRINT) PARAMETER'
         AGO   .X
.GEN     PRINT GEN
         AGO   .BEG
.NGEN    PRINT NOGEN
         AGO   .BEG
.NPUSH   PRINT &PP
.BEG     AIF   ('&TYP' EQ 'CSECT').CSECT
         ENTRY &L
&L       DS    0F
         AGO   .NOREGS
.CSECT   ANOP
&L       CSECT
         AIF   ('&REGS' NE 'YES').NOREGS
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
.NOREGS  USING *,R&B
&XX      SETA  24
         AIF   ('&SA' NE '').NOSA1
&XX      SETA  &XX+72
.NOSA1   ANOP
         B     &XX.(,R15)
         DC    X'13'
         DC    CL8'&L',C'...',C'&SYSDATE'
         AIF   ('&SA' NE '').NOSA2
&SAL     DC    18A(0)
.NOSA2   AIF   ('&R' EQ '').SAVDEF
         SAVE  &R
         AGO   .VBN
.SAVDEF  SAVE  (14,12)
.VBN     AIF   ('&B' EQ '15').NOB
         LR    R&B,R15
.NOB     AIF   ('&SA' EQ 'NO').MEND
&ZZ      SETC  '24(,R15)'
         AIF   ('&SA' EQ '').SALOK
&ZZ      SETC  '&SA'
.SALOK   LA    R&WK,&ZZ
         ST    R13,4(,R&WK)
         ST    R&WK,8(,R13)
         LR    R13,R&WK
.MEND    AIF   ('&P' EQ 'NONE' OR '&P' EQ 'GEN' OR '&P' EQ 'NOGEN').X
         POP   PRINT
.X       MEND
         MACRO
         CDMDSECT &CB
         LCLA  &T,&NCB
         LCLC  &KW
&NCB     SETA  N'&CB
&T       SETA  0
.NEXT    ANOP
&T       SETA  &T+1
         AIF   (&T GT &NCB).MEXIT
&KW      SETC  '&CB(&T)'
         AIF   ('&KW' EQ '$JCT').$JCT
         AIF   ('&KW' EQ '$SJB').$SJB
         AIF   ('&KW' EQ 'ACB').ACB
         AIF   ('&KW' EQ 'ASCB').ASCB
         AIF   ('&KW' EQ 'ASVT').ASVT
         AIF   ('&KW' EQ 'ASXB').ASXB
         AIF   ('&KW' EQ 'CCVT').CCVT
         AIF   ('&KW' EQ 'CIB').CIB
         AIF   ('&KW' EQ 'CEPA').CEPA
         AIF   ('&KW' EQ 'CLST').CLST
         AIF   ('&KW' EQ 'CPPL').CPPL
         AIF   ('&KW' EQ 'CSOA').CSOA
         AIF   ('&KW' EQ 'CSPL').CSPL
         AIF   ('&KW' EQ 'CVT').CVT
         AIF   ('&KW' EQ 'DCB').DCB
         AIF   ('&KW' EQ 'DEB').DEB
         AIF   ('&KW' EQ 'DECB').DECB
         AIF   ('&KW' EQ 'DQE').DQE
         AIF   ('&KW' EQ 'DSCB1').DSCB1
         AIF   ('&KW' EQ 'FQE').FQE
         AIF   ('&KW' EQ 'GDA').GDA
         AIF   ('&KW' EQ 'GEN').GEN
         AIF   ('&KW' EQ 'IOB').IOB
         AIF   ('&KW' EQ 'IOPL').IOPL
         AIF   ('&KW' EQ 'JCT').JCT
         AIF   ('&KW' EQ 'JFCB').JFCB
         AIF   ('&KW' EQ 'JSCB').JSCB
         AIF   ('&KW' EQ 'NOGEN').NOGEN
         AIF   ('&KW' EQ 'OUCB').OUCB
         AIF   ('&KW' EQ 'PGPB').PGPB
         AIF   ('&KW' EQ 'PPL').PPL
         AIF   ('&KW' EQ 'PSA').PSA
         AIF   ('&KW' EQ 'PTPB').PTPB
         AIF   ('&KW' EQ 'PVT').PVT
         AIF   ('&KW' EQ 'RB').RB
         AIF   ('&KW' EQ 'RDCM').RDCM
         AIF   ('&KW' EQ 'RPL').RPL
         AIF   ('&KW' EQ 'SCT').SCT
         AIF   ('&KW' EQ 'SIOT').SIOT
         AIF   ('&KW' EQ 'SMCA').SMCA
         AIF   ('&KW' EQ 'SPQE').SPQE
         AIF   ('&KW' EQ 'SSIB').SSIB
         AIF   ('&KW' EQ 'TCB').TCB
         AIF   ('&KW' EQ 'TDCM').TDCM
         AIF   ('&KW' EQ 'TIOT').TIOT
         AIF   ('&KW' EQ 'TSB').TSB
         AIF   ('&KW' EQ 'UCB').UCB
         AIF   ('&KW' EQ 'UCM').UCM
         MNOTE *,'''&KW'' NOT SUPPORTED.'
         AGO   .NEXT
.$JCT    ANOP
$JCT     DSECT                     JOB CONTROL TABLE DSECT
         DS    XL88                BUFFER CONTROL INFORMATION
JCTSTART EQU   *                   START OF DATA WRITTEN TO SPOOL
JCTID    DS    CL4'JCT'            JCT IDENTIFIER
JCTLENG  DS    AL2(*-*)            LENGTH OF JCT INCLUDING PREFIX    R4
JCTFLAG1 DS    B                   FLAGS 1 ---
JCT1CKPT EQU   X'80'               REWRITE THIS JCT
JCTBURST EQU   X'40'               JOB OUTPUT BURST OPTION
JCTJTFLG DS    BL1                 JOB TERM FLAGS
JCTJBKEY DS    XL4                 JOB IDENTIFIER KEY
JCTSPIOT DS    XL4                 TRACK ADDRESS OF 1ST SPIN IOT
JCTIOT   DS    XL4                 TRACK ADDRESS OF 1ST REGULAR IOT
JCTHQT   DS    XL4                 TRACK ADDRESS OF 1ST HQT
JCTOCTTR DS    XL4                 TRACK ADDRESS OF OCR TABLE
JCTJQE   DS    F                   OFFSET OF HASP JOB QUEUE ENTRY
JCTPDDBK DS    H                   PERIPHERAL DATA SET KEY
JCTPDDBO DS    H                   DATA SET KEY FOR 1ST OUTPUT PDDB
JCTCNVRC DS    F                   RETURN CODE FROM JCL CONVERTER
JCTJLOGC DS    F                   RESUME TRACK FOR LOG DATA SET
JCTMSGSC DS    F                   RESUME TRACK FOR MSG DATA SET
         DS    2X                  RESERVED                         R41
JCTPRTY  DS    CL2                 /*PRIORITY OR JOB CARD 'PRTY='    R4
JCTJSSTP DS    H                   JOB SELECT RESTART STEP (SSRQSTEP)
JCTHQRCT DS    H                   HOLD QUEUE RECORD COUNT
JCTJSFLG DS    B                   JOB SELECT FLAGS (SSRQFLG1)
JCTSMFLG DS    BL1                 SMF FLAGS
JCTPURGE DS    0X                  START OF SMF PURGE RECORD
* KEEP THE FIELDS JCTJOBFL AND JCTJBOPT TOGETHER FOR SMF             R4
JCTJOBFL DS    BL1                 HASP JOB FLAGS
JCTJBOPT DS    BL1                 HASP JOB OPTIONS
* KEEP NEXT 108 BYTES INTACT FOR SMF - JCTJOBID THROUGH JCTNUPAS     R4
JCTJOBID DS    CL8                 HASP ASSIGNED JOB IDENTIFICATION
JCTJNAME DS    CL8                 JOB NAME FROM JOB CARD
JCTPNAME DS    CL20                PROGRAMMER'S NAME FROM JOB CARD
JCTMCLAS DS    C                   MSGCLASS FROM JOB CARD
JCTJCLAS DS    C                   JOB CLASS FROM JOB CARD
JCTIPRIO DS    X                   HASP INITIAL JOB SELECTION PRIORITY
JCTPRIO  DS    X                   HASP EXECUTION SELECTION PRIORITY
JCTIOPRI DS    X                   HASP INITIAL OUTPUT SELECTION PRIO
JCTOPRIO DS    X                   HASP OUTPUT SELECTION PRIORITY
JCTROUTE DS    XL2                 INPUT ROUTE CODE
JCTINDEV DS    CL8                 HASP INPUT DEVICE NAME
JCTACCTN DS    CL4                 JOB ACCOUNTING NUMBER FROM JOB CARD
JCTROOMN DS    CL4                 PROGRAMMER'S ROOM NUMBER
JCTETIME DS    F                   ESTIMATED EXECUTION TIME
JCTESTLN DS    F                   ESTIMATED OUTPUT LINES
JCTESTPU DS    F                   ESTIMATED PUNCHED OUTPUT
JCTFORMS DS    CL4                 JOB OUTPUT FORMS
         DS    X                   RESERVED
JCTCPYCT DS    X                   JOB PRINT COPY COUNT
         DS    X                   RESERVED
JCTLINCT DS    X                   LINES PER PAGE
JCTPROUT DS    XL2                 JOB PRINT ROUTE CODE
JCTPUOUT DS    XL2                 JOB PUNCH ROUTE CODE
JCTPROCN DS    CL8                 PROCEDURE DDNAME
JCTPASS  DS    CL8                 CURRENT PASSWORD                  R4
JCTNUPAS DS    CL8                 NEW PASSWORD                      R4
* KEEP NEXT 48 BYTES INTACT FOR SMF - JCTCNVON THROUGH JCTODTOF      R4
JCTCNVON DS    F                   TIME ON JCL CONVERSION PROCESSOR
JCTCDTON DS    F                   DATE ON JCL CONVERSION PROCESSOR
JCTCNVOF DS    F                   TIME OFF JCL CONVERSION PROCESSOR
JCTCDTOF DS    F                   DATE OFF JCL CONVERSION PROCESSOR
JCTXEQON DS    F                   TIME ON EXECUTION PROCESSOR
JCTXDTON DS    F                   DATE ON EXECUTION PROCESSOR
JCTXEQOF DS    F                   TIME OFF EXECUTION PROCESSOR
JCTXDTOF DS    F                   DATE OFF EXECUTION PROCESSOR
JCTOUTON DS    F                   TIME ON OUTPUT PROCESSOR
JCTODTON DS    F                   DATE ON OUTPUT PROCESSOR
JCTOUTOF DS    F                   TIME OFF OUTPUT PROCESSOR
JCTODTOF DS    F                   DATE OFF OUTPUT PROCESSOR
* KEEP NEXT 28 BYTES INTACT FOR SMF - JCTCARDS THROUGH JCTOTSID      R4
JCTCARDS DS    F                   TOTAL NUMBER OF INPUT CARDS
JCTLINES DS    F                   GENERATED OUTPUT LINES
JCTPUNCH DS    F                   GENERATED PUNCHED OUTPUT
JCTRDSID DS    CL4                 INPUT PROCESSOR SYSTEM ID
JCTCVSID DS    CL4                 CONVERSION PROCESSOR SYSTEM ID
JCTEXSID DS    CL4                 EXECUTION PROCESSOR SYSTEM ID
JCTOTSID DS    CL4                 OUTPUT PROCESSOR SYSTEM ID
JCTESOUT DS    F                   ESTIMATED OUTPUT (LINES+CARDS)
JCTXOUT  DS    F                   GENERATED OUTPUT RECORDS
JCTTSUID DS    CL7                 TIME SHARING USERID FOR NOTIFY
JCTTSUAF DS    BL1                 INPUT QUESYSAF FOR NOTIFY
JCTPSN1  DS    CL8                 STEP NAME FROM EXEC STEP
JCTPSN2  DS    CL8                 STEP NAME OF CALLING STEP
JCTWORK  DS    XL144               144-BYTE WORK AREA
JCTJMRST EQU   *                   START OF JMR AREA                 R4
* KEEP THE FIELDS JCTJMRJN, JCTRDRON, AND JCTRDTON TOGETHER FOR SMF  R4
JCTJMRJN DS    CL8                 JMR JOB NAME
JCTRDRON DS    F                   TIME ON INPUT PROCESSOR
JCTRDTON DS    F                   DATE ON INPUT PROCESSOR
JCTCPUID DS    XL4                 JMR CPU IDENTIFICATION
JCTUSEID DS    CL8                 JMR USER IDENTIFICATION
JCTSTEP  DS    X                   CURRENT STEP NUMBER
JCTINDC  DS    BL1                 JMR SMF OPTIONS
JCTJTCC  DS    0XL2,X              CONDITION CODE                    R4
JCTCLASS DS    X                   JOB CLASS
JCTUCOM  DS    F                   JMR USER COMMUNICATION AREA
JCTUJVP  DS    F                   JMR ADDRESS OF USER EXIT ROUTINE
* KEEP THE FIELDS JCTRDROF AND JCTRDTOF TOGETHER FOR SMF             R4
JCTRDROF DS    F                   TIME OFF INPUT PROCESSOR
JCTRDTOF DS    F                   DATE OFF INPUT PROCESSOR
JCTJOBIN DS    F                   JMR JOB SYSIN COUNT
JCTRDR   DS    XL2                 READER DEVICE TYPE AND CLASS
JCTJMOPT DS    BL1                 JMR SMF OPTIONS
         DS    X                   RESERVED
JCTJMRND DS    0F                  END OF JMR                        R4
JCTJMR   EQU   JCTJMRST,*-JCTJMRST REFERENCE FOR ENTIRE JMR AREA     R4
JCTEND   EQU   *                   END OF JOB CONTROL TABLE
*                             JCTSMFLG
JCTSMFL0 EQU   B'10000000'         RESERVED
JCTSMFL1 EQU   B'01000000'         RESERVED
JCTNOUSO EQU   B'00100000'         DO NOT TAKE IEFUSO SMF EXIT
JCTSMFL3 EQU   B'00010000'         RESERVED
JCTSMFL4 EQU   B'00001000'         RESERVED
JCTNOTY6 EQU   B'00000100'         DO NOT PRODUCE TYPE 6 SMF RECORD
JCTNOUJP EQU   B'00000010'         DO NOT TAKE IEFUJP SMF EXIT
JCTNOT26 EQU   B'00000001'         DO NOT PRODUCE TYPE 26 SMF RECORD
*                             JCTJOBFL
JCTBATCH EQU   B'10000000'         BACKGROUND BATCH JOB
JCTTSUJB EQU   B'01000000'         FOREGROUND TIME SHARING USER
JCTSTCJB EQU   B'00100000'         SYSTEM TASK
JCTNOJNL EQU   B'00010000'         NO JOURNAL OPTION
JCTNOUPT EQU   B'00001000'         NO OUTPUT OPTION
JCTTSCAN EQU   B'00000100'         TYPRUN=SCAN WAS SPECIFIED
JCTTCOPY EQU   B'00000010'         TYPRUN=COPY WAS SPECIFIED
JCTRSTRT EQU   B'00000001'         ALLOW WARM START RE-QUEUE TO XEQ  R4
*                             JCTJBOPT
JCTPRICD EQU   B'10000000'         /*PRIORITY CARD OR                R4
*                                    JOB CARD 'PRTY=' PRESENT        R4
JCTSETUP EQU   B'01000000'         /*SETUP CARD(S) PRESENT
JCTTHOLD EQU   B'00100000'         TYPERUN=HOLD WAS SPECIFIED
JCTNOLOG EQU   B'00010000'         NO JOB LOG OPTION
JCTXBACH EQU   B'00001000'         EXECUTION BATCHING JOB
JCTINRDR EQU   B'00000100'         JOB WAS ENTERED ON INTERNAL READER
JCTRERUN EQU   B'00000010'         JOB WAS RE-RUN
JCTQHELD EQU   B'00000001'         RESERVED FOR CAT AND SMF RECORDS
*                             JCTCNVRC
JCTCOK   EQU   0                   JCL CONVERTED WITHOUT ERROR
JCTCJCL  EQU   4                   JCL ERROR DETECTED BY CONVERTER
JCTCIO   EQU   8                   I/O ERROR DETECTED BY CONVERTER
JCTCDUPL EQU   JCTCJCL             DUPLICATE LOGON EXECUTING
JCTCABND EQU   36                  UNRECOVERABLE ERROR IN CONVERSION
*                             JCTJMOPT
JCTJMRUX EQU   B'00100000'         IF ON, TAKE USER EXITS FOR SMF
*                             JCTJTFLG
JCTJTJF  EQU   B'10000000'         JOB FAILED
JCTJTCF  EQU   B'01000000'         JOB FAILED DUE TO CC
JCTJTABD EQU   B'00100000'         JCTABEND WAS ON
         AGO   .NEXT
.$SJB    $SJB
SJBDSECT DSECT
$SJB     EQU    SJBDSECT
         AGO   .NEXT
.ACB     IFGACB
ACB      EQU   IFGACB
         AGO   .NEXT
.ASCB    IHAASCB
         AGO   .NEXT
.ASVT    IHAASVT
         AGO   .NEXT
.ASXB    IHAASXB
         AGO   .NEXT
.CCVT    CDMCCVT DSECT=YES
         AGO   .NEXT
.CIB     ANOP
CIB      DSECT
         IEZCIB
         AGO   .NEXT
.CEPA    CDMCEPA
         AGO   .NEXT
.CLST    CDMCLST
         AGO   .NEXT
.CPPL    IKJCPPL
         AGO   .NEXT
.CSOA    IKJCSOA
         AGO   .NEXT
.CSPL    IKJCSPL
         AGO   .NEXT
.CVT     CVT   DSECT=YES
         AGO   .NEXT
.DCB     DCBD  DSORG=(PS,PO),DEVD=(DA,TA)
DCB      EQU   IHADCB
         AGO   .NEXT
.DEB     ANOP
         IEZDEB
         AGO   .NEXT
.DECB    ANOP
DECB     DSECT
DECSDECB DS    A                   ECB
DECTYPE  DS    0H                  TYPE OF I/O REQUEST
DECTYPE1 DS    X                   TYPE OF LENGTH OPERAND
DECTYPE2 DS    X                   TYPE OF OPERATION
DECLNGTH DS    H                   LENGTH OF KEY AND DATA
DECDCBAD DS    A                   ADDRESS OF DCB
DECAREA  DS    A                   ADDRESS OF KEY AND DATA
DECIOBPT DS    A                   ADDRESS OF IOB
         AGO   .NEXT
.DQE     ANOP
DQE      DSECT
DQFQEPTR DS    F
DQEPTR   DS    F
DQEHRID  DS    0X
DQEBLKAD DS    F
DQELNTH  DS    F
         AGO   .NEXT
.DSCB1   ANOP
DSCB1    DSECT
         IECSDSL1 1
         AGO   .NEXT
.FQE     ANOP
FQE      DSECT
FQEPTR   DS    0F
FQTYPE   DS    X
         DS    XL3
FQELNTH  DS    F
FQAREA   DS    F
FQERSVD  DS    F
         AGO   .NEXT
.GDA     IHAGDA
         AGO   .NEXT
.GEN     PRINT GEN
         AGO   .NEXT
.IOB     ANOP
         IEZIOB
         AGO   .NEXT
.IOPL    IKJIOPL
         AGO   .NEXT
.JCT     ANOP
JCT      DSECT
         IEFAJCTB
JCTEQREG EQU   JCT+92,2
         AGO   .NEXT
.JFCB    ANOP
JFCB     DSECT
         IEFJFCBN
         AGO   .NEXT
.JSCB    IEZJSCB
JSCB     EQU   IEZJSCB
         AGO   .NEXT
.NOGEN   PRINT NOGEN
         AGO   .NEXT
.OUCB    IRAOUCB
         AGO   .NEXT
.PGPB    IKJPGPB
         AGO   .NEXT
.PPL     IKJPPL
         AGO   .NEXT
.PSA     IHAPSA
         AGO   .NEXT
.PTPB    IKJPTPB
         AGO   .NEXT
.PVT     IHAPVT
         AGO   .NEXT
.RB      IHARB
RB       EQU   RBBASIC
         AGO   .NEXT
.RDCM    ANOP
RDCM     DSECT
         IEECRDCM
         AGO   .NEXT
.RPL     IFGRPL
RPL      EQU   IFGRPL
         AGO   .NEXT
.SCT     ANOP
SCT      DSECT
         IEFASCTB
         AGO   .NEXT
.SIOT    ANOP
SIOT     DSECT
         IEFASIOT
         AGO   .NEXT
.SMCA    IEESMCA
SMCA     EQU   SMCABASE
         AGO   .NEXT
.SPQE    IHASPQE
SPQE     EQU   SPQESECT
         AGO   .NEXT
.SSIB    IEFJSSIB
         AGO   .NEXT
.TCB     IKJTCB
         AGO   .NEXT
.TDCM    ANOP
TDCM     DSECT
         IEECDCM
         AGO   .NEXT
.TIOT    ANOP
TIOT     DSECT
         IEFTIOT1
         AGO   .NEXT
.TSB     IKJTSB
         AGO   .NEXT
.UCB     ANOP
UCB      DSECT
         IEFUCBOB
         AGO   .NEXT
.UCM     ANOP
UCM      DSECT
         IEECUCM
         AGO   .NEXT
.MEXIT   MEND
CSAPRNT  CDMSAVE SA=
*
*  EXEC PARM= INIT
*             INIT,LNCNT=XX
*             LNCNT=XX
*
         PRINT NOGEN
         L     R2,0(,R1)
         OPEN  (CSASCAN,(INPUT),SYSPRINT,(OUTPUT))
*
*        TEST EXEC-PARM
*
         MVI   INITSW,X'00'
         LH    R4,0(R2)
         LTR   R4,R4
         BZ    NOPARM
         CH    R4,=H'13'
         BH    NOPARM
         LA    R2,2(,R2)
         LR    R5,R2
         CLC   =C'INIT',0(R5)
         BNE   NOINIT
         MVI   INITSW,X'FF'
         LA    R5,5(R5)
NOINIT   CH    R4,=H'4'
         BNH   NOPARM
         CLC   =C'LNCNT=',0(R5)
         BNE   NOPARM
         LA    R5,6(,R5)
         LR    R6,R5
         SR    R6,R2               R6 = LENGTH OF LNCNT
         LTR   R6,R6
         BZ    NOPARM
         SR    R4,R6
         LA    R4,111(,R4)
         STC   R4,PACKI+1
PACKI    PACK  DW,0(1,R5)
         CVB   R6,DW
         STH   R6,LNCNT
NOPARM   EQU   *
GETTIT   GET   CSASCAN,TITLE       GET FIRST RECORD = TITLE
         PUT   SYSPRINT,TITLNE     PUT FIRST LINE
         SR    R3,R3               CLEAR REG 3
GETS     GET   CSASCAN,DATA        GET A RECORD
         PUT   SYSPRINT,DATLNE       AND PUT IT TO SYSPRINT
         MVI   ASA2,C' '           SET ASA CNTRL CHAR. TO SKIP 1 LINE
         LA    R3,1(R3)            ADD ONE TO LINE-COUNT
         CH    R3,LNCNT            MAX. LINES/PAGE REACHED ?
         BNH   GETS                NO GET NEXT RECORD
         SR    R3,R3               YES  CLEAR LINE COUNT
         PUT   SYSPRINT,TITLNE     PUT TITLE
         MVI   ASA2,C'0'           SET ASA CNTRL TO SKIP 2 LINES
         B     GETS                GET NEXT RECORD
*
EODAD    CLOSE (CSASCAN,,SYSPRINT) CLOSE ALL FILES
         CLI   INITSW,X'00'        TEST IF INIT SWITCH WAS SET
         BE    ENDOK               NO  ONLY PRINT FUNCTION REQU.
*
*        INIT  CSASCAN-FILE
*
         OPEN  (CSASCA2,(OUTPUT))
         CLOSE (CSASCA2)
ENDOK    L     R13,4(R13)
         RETURN (14,12),RC=0
*
         PRINT NOGEN
*
CSASCAN  DCB   DDNAME=CSASCAN,DSORG=PS,MACRF=GM,EODAD=EODAD
*
CSASCA2  DCB   DDNAME=CSASCAN,DSORG=PS,MACRF=PL
*
SYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=PM,                      *
               LRECL=132,RECFM=FBA,BLKSIZE=1320
*
DW       DC    D'0'
LNCNT    DC    H'58'             DEFAULT LINE COUNT = 60
INITSW   DC    X'00'
*
TITLNE   DS    0CL132
ASA      DC    C'1'
TITLE    DS    CL131
*
DATLNE   DS    0CL132
ASA2     DC    C'0'
DATA     DS    CL131
*
         LTORG
*
         END
