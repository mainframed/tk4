SYSLIBR  TITLE 'SYSLIBR, ASHEGE, MODULE-HAEDER-CHANGE UNTER TSO'
*
*
** BESCHREIBUNG **
*
* MIT DIESEM PROGRAMM KANN DER HEADER EINES SOURCE-MODULS
* VERAENDERT WERDEN. NACH EINGABE DES COMMANDS
*       PCONTR  ODER
*       SCONTR  ODER
*       GCONTR
* WIRD AUTOMATISCH EINE -OPT CARD ERSTELLT. DANACH KOENNEN
* LIBRARIAN-CONTROL-CARDS EINGEGEBEN WERDEN. DIE LETZTE EINGABE
* MUSS EINE -END CARD SEIN.
*
*  R0
*  R1    WORK
*  R2    WORK
*  R3    WORK
*  R4    WORK
*  R5    WORK
*  R6    WORK
*  R7    POINTER TO CPPL
*  R8    BASIS FUER DSECT DEFINITIONEN
*  R9    POINTER TO PDL
*  R10   POINTER TO DAPB
*  R11   BASIS
*  R12   BASIS
*  R13
*  R14   SPRUNG
*  R15   RETURN
*
*
* FOLGENDE VARIABLEN SIND BEIM KOPIEREN DES COMMANDS ZU BEACHTEN:
*
* SOUR = NAME DES LIBRARIAN-DATASETS (SYS1.XXXXXXX).
*                                                E9
*
* DER COMMAND-NAME IN DER PUNCH-KARTE AM ENDE DES PROGRAMMS
* MUSS VERAENDERT WERDEN.
*
*
*
         LCLC  &SOUR
&SOUR    SETC  'SYSSOUR'
         EJECT
SYSLIBR  CSECT GEN
         PRINT GEN
         GADBEGIX R12,R11,SAVE=RENT
         LR    R7,R1                    ADRESSE CPPL
         USING CPPL,R7
         SPACE
         GETMAIN R,LV=LDEFIN,SP=1       DEFINITIONS-BEREICH
         LR    R2,R1
         LA    R3,LDEFIN
         SR    R5,R5
         MVCL  R2,R4                    LOESCHE DEFINITIONS-BEREICH
*
         LR    R8,R1
         USING DEFIN,R8
         LA    R1,PARMLIST
         USING PPL,R1
         MVC   PPLUPT,CPPLUPT
         MVC   PPLECT,CPPLECT
         LA    R2,ECB
         ST    R2,PPLECB
         MVC   PPLCBUF,CPPLCBUF
         LA    R2,ADDRPDL
         ST    R2,PPLANS
         MVC   PPLPCL,APCL
*
         SPACE
         LINK  EP=IKJPARS               PRUEFUNG DER EINGABE
         LTR   R15,R15
         BZ    PARSGOOD
         LA    R1,100(R15)
         ABEND (R1)
*
         SPACE
PARSGOOD DS    0H
         LOAD  EP=IKJSTCK
         ST    R0,ASTACK
*
         L     R9,ADDRPDL
         USING IKJPARMD,R9
*
         LOAD  EP=IKJDAIR
         ST    R0,ADAIR
*
         LA    R1,PARMLIST
         USING DAPL,R1
         MVC   DAPLPSCB,CPPLPSCB
         LA    R10,DAPB
         ST    R10,DAPLDAPB
*
* STORE THE PROGRAMMER-NAME
*
         LH    R2,PPGMR+4
         L     R3,PPGMR
         MVC   PGMR,=CL50' '
         EX    R2,STORPGMR
         B     PGM30
*
STORPGMR MVC   PGMR(0),0(R3)
*
         SPACE
*
* ALLOCATE THE DATASET WITH DD-NAME SYSIN
*
PGM30    DS    0H
         USING DAPB24,R10
         XC    DAPB(L'DAPB),DAPB
         MVI   DA24CD+1,X'08'
         MVC   DSN(7),=C'&&SYSUT2'
         MVI   DSNLEN+1,X'07'
         LA    R2,DSNBUF
         ST    R2,DA24PDSN
         MVC   DA24DDN,=C'SYSIN   '
         MVI   DA24DSP1,DA24NEW
         MVI   DA24DPS2,DA24DEL
         MVI   DA24DPS3,DA24DELE
         MVI   DA24CTL,DA24ABKL
         LA    R2,80
         ST    R2,DA24BLK
         LA    R2,500
         ST    R2,DA24PQTY
         MVC   DA24UNIT,BLANKS
         MVC   DA24SER,BLANKS
         MVC   DA24MNM,BLANKS
*
         LA    R1,PARMLIST
         L     R15,ADAIR
         BALR  R14,R15
         LTR   R15,R15
         BZ    PGM40
         CH    R15,=H'20'
         BNE   PGM35
         MVC   WORKDD,=C'SYSIN   '
         MVI   WORKDISP,X'00'
         MVI   WORKCTL,DA18PERM
         BAL   R14,DEALLOC
         B     PGM30
PGM35    DS    0H
         LA    R1,300(R15)
         ABEND (R1)
         SPACE
*
* OPEN THE DATASET SYSIN AND WRTIE OUT THE -OPT CARD
*
PGM40    DS    0H
         MVC   SYSODCB,CSYSNDCB
         MVC   WORK(1),OPENOUT
         OPEN  SYSODCB,MF=(E,WORK)
PGM50    MVC   CARD,=CL80' '
         MVC   CARD(9),=C'-OPT NOPC'
         PUT   SYSODCB,CARD
*
PGM60    DS    0H                       ASK FOR CONTROL-CARDS
         MVC   MSGBUF(L'MSGBUF),=CL50' '
         MVC   MSGBUF(L'MSG1),MSG1
         LA    R1,MSGBUF
         LA    R0,L'MSGBUF
         TPUT  (R1),(R0)
         SPACE
PGM70    DS    0H
         LA    R1,CARD
         LA    R0,L'CARD
         TGET  (R1),(R0)
         OC    CARD,=CL80' '
         CLC   CARD(4),=C'-END'
         BE    PGM80
         CLI   CARD,C'-'
         BNE   PGM60
         PUT   SYSODCB,CARD
         MVC   CARD,=CL80' '
         B     PGM70
*
PGM80    DS    0H
         PUT   SYSODCB,CARD
         MVC   WORK(1),CLOSE
         CLOSE SYSODCB,MF=(E,WORK)
         MVC   MSGBUF(L'MSGBUF),=CL50' '
         MVC   MSGBUF(L'MSG2),MSG2
         LA    R1,MSGBUF
         LA    R0,L'MSGBUF
         TPUT  (R1),(R0)
         MVC   WORK(1),CLOSE
         CLOSE SYSODCB,MF=(E,WORK)
         SPACE
*
* SCRATCH THE DATASETS
*
         MVC   DSN(L'DSN),=CL50' '
         MVI   DSNLEN+1,X'07'
         MVC   DSN(7),=C'LST.LIB'
         MVI   WORKDISP,DA18DEL
         MVI   WORKCTL,DA18UID
         BAL   R14,DEALDSN
         MVC   DSN(7),=C'IDX.LIB'
         MVI   WORKDISP,DA18DEL
         MVI   WORKCTL,DA18UID
         BAL   R14,DEALDSN
         MVC   DSN(7),=C'PRT.LIB'
         MVI   WORKDISP,DA18DEL
         MVI   WORKCTL,DA18UID
         BAL   R14,DEALDSN
         MVC   DSN(7),=C'ASM.ASM'
         MVI   WORKDISP,DA18DEL
         MVI   WORKCTL,DA18UID
         BAL   R14,DEALDSN
*
         SPACE
*
* ALLOCATE THE MASTER
*
LIB00    DS    0H
         XC    DAPB(L'DAPB),DAPB
         USING DAPB08,R10
         MVI   DA08CD+1,X'08'
         LA    R2,DSNBUF
         ST    R2,DA08PDSN
         MVC   DSN(L'DSN),=CL50' '
         MVC   DSN(L'LIBSOUR+5),=C'SYS1.&SOUR'
         LA    R2,L'LIBSOUR
         LA    R2,5(R2)
         STH   R2,DSNLEN
         MVC   DA08DDN,=C'MASTER  '
         MVC   DA08UNIT,BLANKS
         MVC   DA08SER,BLANKS
         MVC   DA08MNM,BLANKS
         MVI   DA08DSP1,DA08SHR
         MVI   DA08DPS2,DA08KEEP
         MVI   DA08DPS3,DA08KEEP
*
         LA    R1,PARMLIST
         L     R15,ADAIR
         BALR  R14,R15
         LTR   R15,R15
         BZ    LIB10
         LA    R1,400(R15)
         ABEND (R1)
         SPACE
*
* ALLOCATE THE REST OF THE DATASETS
*
LIB10    DS    0H
         USING DAPB08,R10
         XC    DAPB(L'DAPB),DAPB
         MVI   DA08CD+1,X'08'
         MVC   DSN(L'DSN),=CL50' '
         MVC   DSN(7),=C'&&SYSUT1'
         MVI   DSNLEN+1,X'07'
         MVC   DA08DDN,=C'OSJOB   '
         LA    R2,80
         ST    R2,DA08BLK
         MVI   DA08DSP1,DA08NEW
         MVI   DA08DPS2,DA08DEL
         MVI   DA08DPS3,DA08DEL
         MVC   DA08UNIT,=C'SYSDA   '
         MVC   DA08SER,BLANKS
         MVC   DA08MNM,BLANKS
         LA    R2,DSNBUF
         ST    R2,DA08PDSN
*
         LA    R1,PARMLIST
         L     R15,ADAIR
         BALR  R14,R15
         LTR   R15,R15
         BZ    LIB20
         LA    R1,600(R15)
         ABEND (R1)
         SPACE
*
LIB20    DS    0H
         USING DAPB30,R10
         XC    DAPB(L'DAPB),DAPB
         MVI   DA30CD+1,X'30'
         MVC   DA30DDN,=C'SYSPUNCH'
         MVC   DA30UNIT,=C'SYSDA   '
         MVC   DA30SER,BLANKS
         MVC   DA30PGNM,BLANKS
         MVC   DA30FORM,BLANKS
         MVC   DA30OCLS,=C'B '
         LA    R1,PARMLIST
         L     R15,ADAIR
         BALR  R14,R15
         LTR   R15,R15
         BZ    LIB40
         LA    R1,700(R15)
         ABEND (R1)
         SPACE
LIB40    DS    0H
         USING DAPB08,R10
         XC    DAPB(L'DAPB),DAPB
         MVI   DA08CD+1,X'08'
         MVC   DSN(L'DSN),=CL50' '
         MVC   DSN(7),=C'PRT.LIB'
         MVI   DSNLEN+1,X'07'
         LA    R2,DSNBUF
         ST    R2,DA08PDSN
         MVC   DA08DDN,=C'SYSPRINT'
         MVC   DA08UNIT,=C'SYSDA   '
         MVC   DA08SER,BLANKS
         MVC   DA08MNM,BLANKS
         LA    R2,133
         ST    R2,DA08BLK
         LA    R2,80
         ST    R2,DA08PQTY
         MVI   DA08CTL,DA08ABKL+DA08UID
         MVI   DA08DSP1,DA08NEW
         MVI   DA08DPS2,DA08DEL
         MVI   DA08DPS3,DA08DELE
*
         LA    R1,PARMLIST
         L     R15,ADAIR
         BALR  R14,R15
         LTR   R15,R15
         BZ    LIB60
         CH    R15,=H'20'
         BE    LIB50
         LA    R1,800(R15)
         ABEND (R1)
         SPACE
LIB50    DS    0H
         MVC   WORKDD,=C'SYSPRINT'
         MVI   WORKDISP,X'10'
         MVI   WORKCTL,X'10'
         BAL   R14,DEALLOC
         B     LIB40                    ALLOC AGAIN
         SPACE
         SPACE
LIB60    DS    0H
         USING DAPB08,R10
         XC    DAPB(L'DAPB),DAPB
         MVI   DA08CD+1,X'08'
         MVC   DSN(7),=C'LST.LIB'
         LA    R2,DSNBUF
         ST    R2,DA08PDSN
         MVC   DA08UNIT,=C'SYSDA   '
         MVC   DA08SER,BLANKS
         MVC   DA08MNM,BLANKS
         MVC   DA08DDN,=C'LIST    '
         LA    R2,133
         ST    R2,DA08BLK
         MVI   DA08CTL,DA08ABKL+DA08UID
         LA    R2,1000
         ST    R2,DA08PQTY
         ST    R2,DA08SQTY
         MVI   DA08DSP1,DA08NEW
         MVI   DA08DPS2,DA08DEL
         MVI   DA08DPS3,DA08DELE
*
         LA    R1,PARMLIST
         L     R15,ADAIR
         BALR  R14,R15
         LTR   R15,R15
         BZ    LIB72
         CH    R15,=H'20'
         BE    LIB70
*
         LA    R1,900(R15)
         ABEND (R1)
         SPACE
LIB70    DS    0H
         MVC   WORKDD,=C'LIST    '
         MVI   WORKCTL,X'10'
         BAL   R14,DEALLOC
         B     LIB60
         SPACE
*
LIB72    DS    0H
         USING DAPB08,R10
         XC    DAPB(L'DAPB),DAPB
         MVI   DA08CD+1,X'08'
         MVC   DSN(7),=C'IDX.LIB'
         LA    R2,DSNBUF
         ST    R2,DA08PDSN
         MVC   DA08UNIT,=C'SYSDA   '
         MVC   DA08SER,BLANKS
         MVC   DA08MNM,BLANKS
         MVC   DA08DDN,=C'INDEX   '
         LA    R2,133
         ST    R2,DA08BLK
         LA    R2,1000
         ST    R2,DA08PQTY
         ST    R2,DA08SQTY
         MVI   DA08CTL,DA08ABKL+DA08UID
         MVI   DA08DSP1,DA08NEW
         MVI   DA08DPS2,DA08DEL
         MVI   DA08DPS3,DA08DELE
*
         LA    R1,PARMLIST
         L     R15,ADAIR
         BALR  R14,R15
         LTR   R15,R15
         BZ    LIB80
         CH    R15,=H'20'
         BE    LIB75
*
         LA    R1,1100(R15)
         ABEND (R1)
         SPACE
LIB75    DS    0H
         MVC   WORKDD,=C'INDEX   '
         MVI   WORKCTL,X'10'
         BAL   R14,DEALLOC
         B     LIB72
*
         SPACE
*
* OPEN AND CLOSE THE LIST- AND INDEX-DATASETS
*
LIB80    DS    0H
         MVC   DCBLST,LSTDCB2
         MVC   DCBIDX,IDXDCB2
*
         PRINT NOGEN
         MVC   WORK(1),OPENOUT
         OPEN  DCBLST,MF=(E,WORK)
         OPEN  DCBIDX,MF=(E,WORK)
         MVC   WORK(1),CLOSE
         CLOSE DCBLST,MF=(E,WORK)
         CLOSE DCBIDX,MF=(E,WORK)
*
*
* CALL THE LIBRARIAN
*
LIB90    DS    0H
         LA    R2,LIBPARM
         ST    R2,ALIBPARM
         MVI   ALIBPARM,X'80'
         LA    R1,ALIBPARM
*
         LINK  EP=SYSLIBRN,MF=(E,(R1))
*
         ST    R15,LIBRCD
*
* FREE THE DATASETS
*
         MVC   WORKDD,=C'SYSIN   '
         MVI   WORKDISP,DA18DEL
         BAL   R14,DEALLOC
         SPACE
         MVC   WORKDD,=C'SYSPUNCH'
         MVI   WORKDISP,DA18DEL
         BAL   R14,DEALLOC
         SPACE
         MVC   WORKDD,=C'OSJOB   '
         MVI   WORKDISP,DA18DEL
         BAL   R14,DEALLOC
         SPACE
*
* DISPLAY THE RETURN CODE
*
         MVC   MSGBUF(L'MSGBUF),=CL50' '
         MVC   MSGBUF(L'MSG7),MSG7
         MVC   MSGBUF+27(1),LIBRCD+3
         MVO   MSGBUF+26(2),MSGBUF+26(2)
         OC    MSGBUF+26(2),=X'F0F0'
         TM    MSGBUF+27,X'0C'
         BNO   LIB95
         MVI   MSGBUF+27,C'C'
LIB95    DS    0H
         LA    R1,MSGBUF
         LA    R0,L'MSGBUF
         TPUT  (R1),(R0)
         SPACE
*
* PUT ALL THE LIST-OUTPUTS (SYSPRINT,LIST,INDEX)
* TO THE DATASET XXX.ASM.ASM
*
* ALLOCATE THE XXX.ASM.ASM
*
         SPACE
PT10     DS    0H
         USING DAPB08,R10
         XC    DAPB(L'DAPB),DAPB
         MVI   DA08CD+1,X'08'
         MVC   DSN(L'DSN),=CL50' '
         MVC   DSN(7),=C'ASM.ASM'
         MVI   DSNLEN+1,X'07'
         LA    R2,DSNBUF
         ST    R2,DA08PDSN
         MVC   DA08DDN,=C'INPSQ1  '
         MVC   DA08UNIT,=C'SYSDA   '
         MVC   DA08SER,BLANKS
         MVC   DA08MNM,BLANKS
         LA    R2,133
         ST    R2,DA08BLK
         LA    R2,1000
         ST    R2,DA08PQTY
         ST    R2,DA08SQTY
         MVI   DA08CTL,DA08ABKL+DA08UID
         MVI   DA08DSP1,DA08OLD
         MVI   DA08DPS2,DA08DEL
         MVI   DA08DPS3,DA08DELE
*
         LA    R1,PARMLIST
         L     R15,ADAIR
         BALR  R14,R15
         LTR   R15,R15
         BZ    PT20
         CH    R15,=H'20'
         BE    PT15
*
         MVI   DA08DSP1,DA08NEW
         MVI   DA08DPS2,DA08CAT
         LA    R1,PARMLIST
         L     R15,ADAIR
         BALR  R14,R15
         LTR   R15,R15
         BZ    PT20
*
         LA    R1,1200(R15)
         ABEND (R1)
         SPACE
PT15     DS    0H
         MVC   WORKDD,=C'INPSQ1  '
         MVI   WORKCTL,X'10'
         BAL   R14,DEALLOC
         B     PT10
         SPACE
*
* OPEN THE ASM.ASM, PRT.LIB, LST.LIB, IDX.LIB
*
PT20     DS    0H
         MVC   DCBASM,ASMDCB
         MVC   DCBPRT,PRTDCB
         MVC   DCBLST,LSTDCB
         MVC   DCBIDX,IDXDCB
*
         PRINT NOGEN
         MVC   WORK(1),OPENOUT
         OPEN DCBASM,MF=(E,WORK)
         MVC   WORK(1),OPENIN
         OPEN DCBPRT,MF=(E,WORK)
         OPEN DCBLST,MF=(E,WORK)
         OPEN DCBIDX,MF=(E,WORK)
*
         MVI   LINE,X'40'
         MVC   LINE+1(L'LINE-1),LINE
         MVI   LINE,X'8B'               VORSCHUB-CHARACTER
         PUT   DCBASM,LINE
         MVC   LINE,KHEAD
         MVC   LINE+21(20),PGMR
         LA    R2,CPPLPSCB
         L     R2,0(R2)
         MVC   LINEUID,0(R2)            FILL IN USER-ID
         PUT   DCBASM,LINE              WRITE HEAD-LINE
*
PT30     DS    0H
         GET   DCBPRT                   READ SYSPRINT
         LR    R2,R1
         CLI   SWFLINE,X'FF'
         BE    PT40
         MVI   SWFLINE,X'FF'
         MVI   0(R2),X'11'
*
PT40     DS    0H
         PUT   DCBASM,(R2)              WRITE ASM.ASM
         B     PT30
*
PRTEOF   DS    0H                       END OF SYSPRINT,BEGIN OF LIST
         GET   DCBLST
         LR    R2,R1
         PUT   DCBASM,(R2)              WRITE ASM.ASM
         B     PRTEOF
*
LSTEOF   DS    0H                       END OF LIST, BEGIN OF INDEX
         GET   DCBIDX
         LR    R2,R1
         PUT   DCBASM,(R2)              WRITE ASM.ASM
         B     LSTEOF
*
IDXEOF   DS    0H                       END OF INDEX
         MVC   WORK(1),CLOSE
         CLOSE DCBASM,MF=(E,WORK)
         CLOSE DCBPRT,MF=(E,WORK)
         CLOSE DCBLST,MF=(E,WORK)
         CLOSE DCBIDX,MF=(E,WORK)
*
         MVC   WORKDD,=C'SYSPRINT'
         MVI   WORKDISP,DA18DEL
         BAL   R14,DEALLOC
*
         MVC   WORKDD,=C'LIST    '
         MVI   WORKDISP,DA18DEL
         BAL   R14,DEALLOC
*
         MVC   WORKDD,=C'INDEX   '
         MVI   WORKDISP,DA18DEL
         BAL   R14,DEALLOC
*
         MVC   WORKDD,=C'INPSQ1  '
         MVI   WORKDISP,DA18KEEP
         BAL   R14,DEALLOC
*
*  ASK FOR THE LIBRARIAN LIST
*
         MVC   MSGBUF(L'MSGBUF),=CL50' '
         MVC   MSGBUF(L'MSG8),MSG8
         LA    R1,MSGBUF
         LA    R0,L'MSGBUF
         TPUT  (R1),(R0)
         LA    R1,INBUF
         LA    R0,L'INBUF
         TGET  (R1),(R0)
         OC    INBUF(2),BLANKS
         L     R3,CPPLUPT
         L     R4,CPPLECT
         CLC   INBUF(2),=C'OK'
         BE    LIB100                   HE WANTS TO SEE THE LIST
*
* USER WANTS NOT TO SEE THE LIST
*
         GETMAIN R,LV=LLSD2,SP=78
         LR    R5,R1
*
         GETMAIN R,LV=LINLIST2,SP=78
         LR    R6,R1
         MVC   0(16,R5),ANLSD2
         ST    R6,0(R5)
         ST    R6,8(R5)
         MVC   0(LINLIST2,R6),INLIST2
         B     LIB112
*
*
* USER WANTS TO SEE THE LIBRAIAN LIST
*
LIB100   DS    0H
         GETMAIN R,LV=LLSD,SP=78
         LR    R5,R1
         GETMAIN R,LV=LINLIST,SP=78
         LR    R6,R1
         MVC   0(16,R5),ANLSD
         ST    R6,0(R5)
         ST    R6,8(R5)
         MVC   0(LINLIST,R6),INLIST
         LA    R2,CPPLPSCB
         L     R2,0(R2)
         MVC   10(3,R6),0(R2) COMPLETE DSN WITH USER-ID
LIB112   DS    0H
         MVC   STCKPRM,STCKLST
         L     R15,ASTACK
*
         PRINT GEN
         STACK PARM=STCKPRM,UPT=(R3),ECT=(R4),ECB=ECB,                 *
               STORAGE=((R5),PROCN),MF=(E,IOPL),ENTRY=(15)
         LTR   R15,R15
         BZ    LIB110
         LA    R1,1000(R15)
         ABEND (R1)
*
LIB110   DS    0H
         SPACE
         SPACE
EXIT     DS    0H
         GADEOJ
         SPACE 3
*
* DEALLOCATE DD-NAMES, WHICH ARE ALREADY IN USE
*
DEALLOC  DS    0H
         ST    R14,DEALR14
         LA    R10,DAPB
         USING DAPB18,R10
         XC    DAPB(L'DAPB),DAPB
         MVI   DA18CD+1,X'18'
         MVC   DA18DDN,WORKDD
         MVC   DA18DPS2,WORKDISP
         MVC   DA18MNM,BLANKS
         MVC   DA18CTL,WORKCTL
         LA    R1,PARMLIST
         L     R15,ADAIR
         BALR  R14,R15
         LTR   R15,R15
         BZ    DEALLOC9
         LA    R1,3100(R15)
         ABEND (R1)
*
DEALLOC9 MVC   WORKDD,BLANKS
         MVI   WORKDISP,X'00'
         MVI   WORKCTL,X'00'
         L     R14,DEALR14
         BR    R14
*
* DEALLOCATE DS-NAMES
*
DEALDSN  DS    0H
         ST    R14,DLDSNR14
         LA    R10,DAPB
         USING DAPB18,R10
         XC    DAPB(L'DAPB),DAPB
         MVI   DA18CD+1,X'18'
         MVC   DA18DDN,BLANKS
         LA    R2,DSNBUF
         ST    R2,DA18PDSN
         MVC   DA18DPS2,WORKDISP
         MVC   DA18MNM,BLANKS
         MVC   DA18CTL,WORKCTL
         LA    R1,PARMLIST
         L     R15,ADAIR
         BALR  R14,R15
         SPACE
DEALDSN9 DS    0H
         MVI   WORKDISP,X'00'
         MVI   WORKCTL,X'00'
         L     R14,DLDSNR14
         BR    R14
         SPACE 3
*
* MESSAGES
*
MSG1     DC    CL29'ENTER LIBRARIAN-CONTROL-CARDS'
MSG2     DC    CL16'LIBRARIAN BEGINS.'
MSG5     DC    CL31'NO MODULE-NAME IN THE -SEL CARD'
MSG6     DC    CL33'MODULE-NAME IN -SEL CARD TOO LONG'
MSG7     DC    CL25'LIBRARIAN  RETURN CODE IS '
MSG8     DC    CL39'YOU WANT TO LOOK THE LIBRARIAN LIST, OK'
*
KHEAD    DS    0CL133
KVOR     DC    X'19'
         DC    CL10' '
         DC    CL10'LIBRARY   '
         DC    CL91' '
         DC    CL9'PAGE    1'
         DC    CL12' '
*
*
APCL     DC    A(PCL)
*
BLANKS   DC    CL8' '
*
LIBPARM  DC    H'09',C'NRJS,NJTA'
*
* DEFINITIONEN FUER STACK-ROUTINE
*
ANLSD    DS    A
         DC    X'0000'
         DC    AL2(LINLIST)
         DS    A
         DC    F'0'
LLSD     EQU   *-ANLSD
*
INLIST   DC    X'00220000'
         DC    C'EDIT ''XXX.ASM.ASM''  DATA NONUM'
         DC    X'00080000'
         DC    C'LIST'
LINLIST  EQU   *-INLIST
*
ANLSD2   DS    A
         DC    X'0000'
         DC    AL2(LINLIST2)
         DS    A
         DC    F'0'
LLSD2    EQU   *-ANLSD2
*
INLIST2  DC    X'00070000'
         DC    C'ALI'
LINLIST2 EQU   *-INLIST2
*
*
         SPACE 2
         PRINT NOGEN
CSYSNDCB DCB   DSORG=PS,MACRF=(PM),DDNAME=SYSIN,                       *
               RECFM=F,LRECL=80,BLKSIZE=80
*
LSYSNDCB EQU   *-CSYSNDCB
*
ASMDCB   DCB   DSORG=PS,MACRF=(PM),DDNAME=INPSQ1,                      *
               RECFM=FB,LRECL=133,BLKSIZE=2660
*
LASMDCB  EQU   *-ASMDCB
*
*
PRTDCB   DCB   DSORG=PS,MACRF=(GL),DDNAME=SYSPRINT,EODAD=PRTEOF
*
LPRTDCB  EQU   *-PRTDCB
LSTDCB   DCB   DSORG=PS,MACRF=(GL),DDNAME=LIST,EODAD=LSTEOF
*
LLSTDCB  EQU   *-LSTDCB
LSTDCB2  DCB   DSORG=PS,MACRF=(PM),DDNAME=LIST,RECFM=FB,               *
               LRECL=133,BLKSIZE=2660
*
IDXDCB   DCB   DSORG=PS,MACRF=(GL),DDNAME=INDEX,EODAD=IDXEOF
*
LIDXDCB  EQU   *-IDXDCB
IDXDCB2  DCB   DSORG=PS,MACRF=(PM),DDNAME=INDEX,RECFM=FB,              *
               LRECL=133,BLKSIZE=2660
*
         PRINT GEN
OPENOUT   OPEN  (,OUTPUT),MF=L
OPENIN   OPEN (,INPUT),MF=L
CLOSE    CLOSE (,),MF=L
STCKLST  STACK MF=L
*
LIBSOUR  DC    C'&SOUR'
         LTORG *
*
* DEFINITIONEN, ADRESSIERUNG UEBER REGISTER 8
*
         SPACE
DEFIN    DSECT
*
PARMLIST DS    7F
ECB      DS    F
IOPL     DS    3A                       I/O-PARAMETER-LIST
IOPLIOPB DS    A
ADDRPDL  DS    A
DAPB     DS    CL90                     DAIR-PARAMETER-BLOCK
ACB      DS    CL50                     ATTRIBUTE-CONTROL-BLOCK
LIBRCD   DS    F                        LIBRARIAN RETURN-CODE
ADAIR    DS    A                        ENTRY-POINT OF DAIR
ASMSW    DS    CL1                      SWITCH FOR ASSEMBLY
*
         DS    0F
DSNBUF   DS    0CL46                    DS-NAME BUFFER
DSNLEN   DS    H
DSN      DS    CL44
*
ALIBPARM DS    A                        ADR. OF LIB-PARAMETER
STCKPRM  DS    CL8
*
WORK     DS    F
WORKDD   DS    CL8
WORKDISP DS    CL1
WORKCTL  DS    CL1
*
FDSNL    DS    F                        LENGTH OF DS-NAME
FDSNAME  DS    CL8                      INPUT DS-NAME
*
SYSODCB  DS    CL(LSYSNDCB)             DCB FOR SYSIN
DCBASM   DS    CL(LASMDCB)              DCB FOR OUTPUT-LISTING
DCBLST   DS    CL(LLSTDCB)              DCB FOR DDNAME=LIST
DCBIDX   DS    CL(LIDXDCB)              DCB FOR DDNAME=INDEX
DCBPRT   DS    CL(LPRTDCB)              DCB FOR DDNAME=SYSPRINT
LINE     DS    0CL133                   HEAD-LINE
LINEVOR  DS    CL1
         DS    CL10
         DS    CL10
LINENAME DS    CL20
         DS    CL5
LINEUID  DS    CL3
         DS    CL63
LINEPAGE DS    CL9
         DS    CL12
*
CARD     DS    CL80                     OUTPUT TO SYSIN
PGMR     DS    CL20
SWFLINE  DS    CL1                      FIRST-LINE-SWITCH
*
DEALR14  DS    F                        STORE R14 FOR DEALLOCATE DDN
DLDSNR14 DS    F                        STORE R14 FOR DEALLOCATE DSN
*
MSGBUF   DS    CL50                     MESSAGE-BUFFER
INBUF    DS    CL20                     INPUT-ANSWER-BUFFER
*
ASTACK   DS    F                        ENTRY-POINT OF STACK-ROUTINE
*
FMODNAME DS    CL8                      MODULE-NAME
FMODPASS DS    CL4                      MODULE-PASSWORD
         SPACE
LDEFIN   EQU   *-DEFIN
*
* DSECTS
*
         IKJCPPL
         IKJPPL
         IKJDAPL
         IKJDAP04
         IKJDAP08
         IKJDAP18
         IKJDAP24
         IKJDAP30
         IKJPSCB
         SPACE
*
* PARAMETER-CONTROL-LIST FOR PARSE
*
         PRINT NOGEN
DUMMY    CSECT
PCL      IKJPARM
PPGMR    IKJIDENT 'PROGRAMMER-NAME',MAXLNTH=20,FIRST=ALPHA,            *
               OTHER=ALPHANUM,PROMPT='YOUR NAME PLEASE !'
         IKJENDP
         SPACE
         END
  PUNCH ' NAME TESTCNTR(R)'
         END
