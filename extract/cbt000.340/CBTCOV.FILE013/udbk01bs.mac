./ ADD SEQFLD=756,NAME(UDBK01BS)
MAINT    MACROANF BR=3,ID=SAVEMAIN,EP=ENTRY
         WTO   ' F U N K T I O N E N'
         WTO   'D   DISPLAY  CAT. OR VTOC'
         WTO   'R   RENAME DATASET'
         WTO   'S   SCRATCH DATASET'
         WTO   'C   CATALOG DATASET'
         WTO   'U   UNCATAL.DATASET'
         WTO   'V   VERAENDERE CATALOG'
         WTO   'B   BUILD GEN.DAT.GROUP'
         WTO   'L   LOE.GEN.DAT.GROUP'
         WTO   'G   CHANGE CAT.ENTRIES BASED ON VTOC'
         WTO   'F   SCRATCH DATASETS NOT IN CATALOG '
         WTO   'H   CONNECT TWO CVOL S              '
         WTO   'I   DISCONNECT TWO CVOL S           '
         WTO   'A   MOVE ALIAS + DSN TO OTHER CVOL  '
         WTO   'M    MEMBERFUNKTIONEN'
         WTO   'E   ENDE'
A000     EQU   *
         MVI   BUFFER,X'40'
         MVC   BUFFER+1(256),BUFFER    LOESCHE BUFFER
         MVI   CONSOL,C' '
         XC    EWT,EWT
         WTOR  'GIB FUNKTION',CONSOL,1,EWT
         WAIT  ECB=EWT
         OI    CONSOL,X'40'
         CLI   CONSOL,C'D'         DISPLAY FUNCTION
         BE    A100
         CLI   CONSOL,C'F'
         BE    F000                SCRATCH DSN NOT IN CAT.
         CLI   CONSOL,C'A'
         BE    X000                MOVE CAT ENTR. BY ALIAS
         CLI   CONSOL,C'C'
         BE    A500
         CLI   CONSOL,C'U'
         BE    A600
         CLI   CONSOL,C'S'
         BE    A700
         CLI   CONSOL,C'R'
         BE    A800
         CLI   CONSOL,C'B'
         BE    A900
         CLI   CONSOL,C'L'
         BE    A950
         CLI   CONSOL,C'V'
         BE    A960
         CLI   CONSOL,C'E'         END FUNCTION
         BE    E000
         CLI   CONSOL,C'G'
         BE    G000
         CLI   CONSOL,C'M'
         BE    T000
         CLI   CONSOL,C'H'
         BE    H000                    CONNECT TWO CVOLS
         CLI   CONSOL,C'I'
         BE    I000                    DISCONNECT TWO CVOLS
A100     EQU   *                       DISPLAY
         XC    EWT,EWT
         WTOR  'GIB C FUER CATALOG OR V FUER VTOC',CONSOL,1,EWT
         WAIT  ECB=EWT
         OI    CONSOL,X'40'
         CLI   CONSOL,C'C'
         BE    A110
         CLI   CONSOL,C'V'
         BE    A200
         B     A100
A110     EQU   *                       DISPLAY CATALOG
         BAL   R9,R000
         LOCATE CAM1
         BAL   R9,CHECK
         MVC   HALB,BUFFER
         LH    R9,HALB
         LA    R8,BUFFER+2
         MVC   A111+12(44),AREA
A111     WTO   'DSN                                             '
         MVC   A111+12(44),BLANKS
         CLC   BUFFER(2),BLANKS
         BE    A121              NO DSCB BLOCK READ
         LTR   R9,R9              TESTE COUNT
         BC    8,A121        ZERO
         BC    4,A121        MINUS
         CH    R9,=H'20'
         BH    A122        MEHR ALS 20 ENTRIES
A120     EQU   *
         CLI   3(R8),X'01'
         BE    A125
         CLI   3(R8),X'03'
         BE    A125
         MVC   WTOM+8(4),=C'DISK'
         B     A130
A121     LH    R9,=H'1'
         MVC   WTOM+8(8),BLANKS
         MVC   WTOM+8(8),=C'NO ENTRY'
         B     WTOM
A122     WTO   'MEHR ALS 20 ENTRIES'
         LH    R9,=H'20'
         B     A120
A125     MVC   WTOM+8(4),=C'TAPE'
A130     EQU   *
         MVC   WTOM+13(6),4(R8)        MOVE VOL=SER
WTOM     WTO   '           '
         MVC   WTOM+8(8),BLANKS
         LA    R8,12(R8)
         BCT   R9,A120
         B     A000                    UND ENDE
A200     EQU   *                       DISPLAY VTOC
         BAL   R9,R000                 GET DSN
         BAL   R9,R100                 GET VOLUME
         OBTAIN CAM2
         BAL   R9,CHECK                TEST FEHLER
WEI      NOP   T010                    AUSGANG BEI MEMBER
         TM    BUFFER+40,X'C0'
         BO    A201
         TM    BUFFER+40,X'80'
         BO    A202        FIX
         TM    BUFFER+40,X'40'
         BO    A203        VARI
         B     A205
A201     MVI   RECF,C'U'
         B     A205
A202     MVI   RECF,C'F'
         B     A205
A203     MVI   RECF,C'V'
A205     TM    BUFFER+40,X'10'
         BO    A207
         TM    BUFFER+40,X'20'
         BO    A206
A206     MVI   RECF+1,C'T'
         B     A208
A207     MVI   RECF+1,C'B'
A208     TM    BUFFER+40,X'08'
         BO    A209       SPANNED
         TM    BUFFER+40,X'04'
         BO    A209A        ASA
         TM    BUFFER+40,X'02'
         BO    A209B       MASCHINCD.
         B     A209D
A209     MVI   RECF+2,C'S'
         B     A209D
A209A    MVI   RECF+2,C'A'
         B     A209D
A209B    MVI   RECF+2,C'M'
A209D    MVC   A210+34(3),RECF
         MVC   RECF,BLANKS
         MVC   HALB,BUFFER+42
         LH    R8,HALB
         CVD   R8,DOPWO
         OI    DOPWO+7,X'0F'
         UNPK  A210+12(4),DOPWO+5(3)   MOVE BLKSIZE
         MVC   HALB,BUFFER+44
         LH    R8,HALB
         CVD   R8,DOPWO
         OI    DOPWO+7,X'0F'
         UNPK  A210+23(4),DOPWO+5(3)   MOVE RECSIZE
A210     WTO   'BLK XXXX LRECL XXXX RECFM XXX'
         B     A000
A500     EQU   *                       CATALOG INDEX /DATASET
         BAL   R9,R000                 GET DSN
         BAL   R9,R100                 GET VOLUME
         BAL   R9,G900       GET UNIT
         CATALOG CAM3
         BAL   R9,CHECK
         B     A000
A600     EQU   *
         BAL   R9,R000
         CATALOG CAM4
         BAL   R9,CHECK
         B     A000
A700     EQU   *
         BAL   R9,R000                 GET DSN
         BAL   R9,R100                 GET VOL
         BAL   R9,G900                 GET DEVICETYP
A701     EQU   *
         B     A720                    IGNORE GENERELL EXPIRATION DATE
         XC    EWT,EWT   LOESCHE ECB
         WTOR  'IGNORE EXPIR.DATE GIB Y OR N',HALB,1,EWT
         WAIT  ECB=EWT
         OI    HALB,X'40'
         CLI   HALB,C'Y'
         BE    A720
         CLI   HALB,C'N'
         BE    A710
         B     A701
A710     EQU   *
         SR    R0,R0                   SET 0 WEGEN MOUNT
         SCRATCH CAM5
         BAL   R9,CHECK
         B     A000
A720     EQU   *
         SR    R0,R0      LOESCHE WEGEN MOUNT
         SCRATCH CAM10
         BAL   R9,CHECK
A730     NOP   F015                    FOR SRATCH DSN NOT IN CAT
         B     A000
A800     EQU   *
         BAL   R9,R000
         BAL   R9,R100
         BAL   R9,G900                 GET DEVICETYPE
         MVC   BUFFER(44),AREA
         BAL   R9,R000
         SR    R0,R0
         RENAME CAM6
         BAL   R9,CHECK
         B     A000
A900     EQU   *
         BAL   R9,R000        GET DSN
         BAL   R9,R100      GET VOL
         BAL   R9,R300
         INDEX CAM7
         BAL   R9,CHECK
         B     A000
A950     EQU   *        LOESCHE GENERATION DATA GROUP
         BAL   R9,R000     GET DSN
         INDEX CAM8
         BAL   R9,CHECK
         B     A000
A960     EQU   *       VERAENDERE CATALOG
         BAL   R9,R000     GET DSN
         BAL   R9,R100       GET VOL
         BAL   R9,G900
         CATALOG CAM9
         BAL   R9,CHECK
         B      A000
E000     EQU   *
         MACRORTN RC=0
F000     EQU   *                       SCRATCH DSN NOT IN CATALOG
         OI    G010+1,X'F0'            DO A BRANCH
         B     G000                    GET VOLUME AND FORMAT4 DSCB
F010     EQU   *
         NI    G010+1,X'0F'            DO A NOP AGAIN
         OI    G110+1,X'F0'            DO A BRANCH
         OI    A730+1,X'F0'            DO A BRANCH
         OI    VIVEND1+1,X'F0'         DO A BRANCH
F015     B     G100                    GET DSN' S
F020     EQU   *                       SO
         CH    R15,=H'0000'            IT WAS
         BE    G100                    CATALOGUED DATA SET
         AP    ZAE,=P'1'               INCREASE COUNTER
         MVC   XWTO+8(44),AREA         MOVE DSN FOR SCRATCHLIST
         CNOP  0,4                     ALLIGN TO WORDBOUNDARY
XWTO     WTO   '44 BYTES TO REPLACE                          '
         B     A720                    HERE WE WILL SCRATCH
F100     EQU   *                       END FOR SRATCH VOLUME
         NI    G110+1,X'0F'            DO A NOP AGAIN
         NI    A730+1,X'0F'            DO A NOP
         NI    VIVEND1+1,X'0F'         DO A NOP
         UNPK  CWTO+8(7),ZAE           UNPACK COUNTER
         ZAP   ZAE,=P'0'               CLEAR COUNTER
         MVC   CWTO+15(22),=C'  DATASETS SCRATCHED  '
         B     CWTO
G000     EQU   *
         MVC   AREA,DSCB4              MOVE DSNAME
         BAL   R9,R100                 GET SEARCHVOLUME
         MVC   NEWVOL,VOLUME           MAKE IT EQUAL
         MVC   SEARCHV,VOLUME          SAVE SEARCH VOLID
         OBTAIN VIVRDCB4               SEARCH FOR DSCB4 VTOC
         BAL   R9,CHECK1               CHECK COND CODES
         MVC   VIVLAST,DS4HPCHR        GET ADR. OF LAST DSCB1
         MVC   VIVANZ,DS4DEVDT         GET DSBC'S PRO SPUR
         MVC   VIVCCHHR,DS4CCHHR        SAVE ADRESSE VTOC
         BAL   R9,G900                 GET A DEVICE TYPE
G010     NOP   F010                    FOR SRATCH DSN NOT IN CAT.
         BAL   R9,G700                 ASK FOR VOLUME CHANGE FOR RECAT
G100     EQU   *
         BAL   R9,VIVADR               RECHNE NAECHSTE DSCB1 ADRESSE
         OBTAIN VIVRDCB1               AND GET IT
         CLI   DS1FMTID,X'F1'          DO WE HAVE A FORMAT 1 DSCB ?
         BNE   G100                    IF NOT TRY NEXT DSCB
         MVC   AREA,DS1DSNAM           SAVE DSNAME
         CLC   AREA(7),=C'SYSCTLG'
         BE    G100                    DON'T USE THIS DCSB
         BAL   R9,CHECK2               CHECK COND CODE
         BAL   R9,CHECKVS              ASK IF ITS A VSAM DATASET
         LOCATE  CAM1                  TRY TO GET CAT ENTRY
G110     NOP   F020                    FOR SRATCH DSN NOT IN CAT.
         CH    R15,=H'0000'            TEST RET. CODE
         BNE   G100                    NOT IN CATALOG
         MVC   VOLUME,NEWVOL           PUT NEW VOLID IN LIST FOR RECAT
         CATALOG CAM9                  RECATALOG THE DATASET
         MVC   VOLUME,SEARCHV          MAKE VOLID READY FOR DSCBSEARCH
         BAL   R9,CHECK3               CHECK COND.CODE
         AP    ZAE,=P'1'               COUNT CHANGED DATASETS
         B     G100                    AND DO NEXT ENTRY
G700     EQU   *
         XC    EWT,EWT
         WTOR  'RECATALOG NEW VOLUME Y OR N',HALB,1,EWT
         WAIT  ECB=EWT
         OI    HALB,X'40'
         CLI   HALB,C'N'
         BNE   G750                    ALSO VOLUME CHANGE MACHEN
         BR    R9                      BACK TO CALLER BEI NO VOLCHANGE
G750     EQU   *
         ST    R9,DOPWO                SAVE RETURN TO CALLER
         BAL   R9,R100                 GET THE NEW VOLUME
         L     R9,DOPWO                LOAD THE RETURN ADDRESS
         MVC   NEWVOL,VOLUME           SAVE NEWVOLUME
         MVC   VOLUME,SEARCHV          RESTORE THE FIELD
         BR    R9                      BACK TO CALLER
G900     EQU   *                       GET A NEW UNITTYPE
         XC    EWT,EWT                 LOESCHE ECB
         WTOR  'GIB NEUEN DEVICE-TYPE',FELD,8,EWT
         WAIT  ECB=EWT
         OC    FELD(4),=X'40404040'
         CLC   FELD(4),=C'HELP'
         BE    G950                    HELP TO GET DEVICETYPES
         LA    R7,8                    LOAD COUNT FOR BCTR
         LA    R6,FELD                 GET THE ADDRESS
G910     EQU   *
         TM    0(R6),X'F0'             NUMERIC
         BNO   G930                    NO, ALPHA
G920     EQU   *
         LA    R6,1(R6)                + 1
         BCT   R7,G910                 AND LOOP
         PACK  DOPWO(5),FELD(9)        ELIMINATE ZONES
         MVC   UNIT,DOPWO              MOVE TO UNIT FIELD
         BR    R9                      BACK TO CALLER
G930     EQU   *
         TR    0(1,R6),TAB-193         TRANSLATE TO HEX VERSION
         B     G920                    DO NEXR ENTRY
G950     EQU   *                       DEVICE TABLE
         WTO   '30502009 3330  '
         WTO   '3050200D 3330-1'
         WTO   '3050200B 3350  '
         WTO   '34008003 TAPE'
         B     G900                    TRY TO GET NOW A DEVTYPE
H000     EQU   *                       CONNECT TWO CVOLS
         BAL   R9,R800                 GET NEW CVOL ID
         BAL   R9,G900                 GET UNIT TYPE OF NEW CVOL
         BAL   R9,R810                 GET CONNECTOR INDEX
         INDEX CAM14                   CONNECT THEM
         BAL   R9,CHECK                CHECK COND . CODE
         B     A000                    END OF FUNKTION
I000     EQU   *                       DISCONNECT TWO CVOLS
         BAL   R9,R810                 GET INDEX FOR DISCONNECTION
         INDEX CAM15                   DISCONNECT IT
         BAL   R9,CHECK                CHECK COND. CODE
         B     A000                    END OF FUNCTION
CHECK1   EQU   *
         CH    R15,=H'0'
         BNE   CHK100
         BR    R9
CHK100   EQU   *
         WTO   'FEHLER BEI FORMAT 4'
         B     A000
CHECK2   EQU   *
         CH    R15,=H'0'
         BNE   CHK200
         BR    R9
CHK200   EQU   *
         WTO   'FEHLER BEI FORMAT 1 TRY NEXT'
         B     G100
CHECK3   EQU   *
         CH    R15,=H'0'
         BNE   CHK300
         BR    R9
CHK300   EQU   *
         WTO   'FEHLER BEI RECATALOG TRY NEXT DS'
         B     G100                    TRY IT WITH NEXT DATA SET
CHECKVS  EQU   *
         CLC   AREA+9(4),=C'VSAM'      VSAM DATA SET
         BE    G100                    JA, DANN NEXT DATASET
         CLC   AREA(4),=C'VSAM'        IS IT VSAM OLD ?
         BE    G100                    OK, TRY NEXT ONE
         BR    R9
R000     EQU   *                       ROUTINE DSN
         XC    EWT,EWT
         MVC   AREA,BLANKS
         WTOR  'GIB DSN  MAX. 44 STELLEN',AREA,44,EWT
         WAIT  ECB=EWT
         OC    AREA,BLANKS
         BR    R9
R100     EQU   *
         XC    EWT,EWT
         WTOR  'GIB VOLUME 6 BYTES',VOLUME,6,EWT
         WAIT  ECB=EWT
         OC    VOLUME,BLANKS
         BR    R9
CHECK    EQU   *
         CH    R15,=H'0'
         BE    R110
         CVD   R15,DOPWO
         OI    DOPWO+7,X'0F'
         UNPK  CWTO+8(2),DOPWO+6(2)
CWTO     WTO   '    COND  FUNKTION FEHLERHAFT'
         B     A000
R110     BR    R9
******* DER ZWEIG R200 WIRD VORERST NICHT MEHR GEBRAUCHT******
******* STATDESSEN WIRD MIT BAL R9,G900 GEARBEITET************
R200     XC    EWT,EWT
         WTOR  'GIB UNITART, T FUER BAND, D FUER DISK',UNIT,1,EWT
         WAIT  ECB=EWT
         OI    UNIT,X'40'
         CLI   UNIT,C'T'
         BE    R210
         MVC   UNIT,DISK
         B     R220
R210     EQU   *
         MVC   UNIT,TAPE
R220     BR    R9
R300     EQU   *
         XC    EWT,EWT
          WTOR  'GIB ANZ.GEN. 2 BYTES',BUFFER,2,EWT
         WAIT  ECB=EWT
         TM    BUFFER,X'F0'
         BNO   R300
         TM    BUFFER+1,X'F0'
         BNO   R300
         PACK  DOPWO,BUFFER(2)
         CVB   R8,DOPWO
         STH   R8,HALB
         MVC   CAM7+3(1),HALB+1
         BR    R9
R400     EQU   *
         XC    EWT,EWT
         WTOR  'GIB FUNKT. A=ADD,C=CHANGE,D=DELETE,R=RENAME',FUNK,1,EWT
         WAIT  ECB=EWT
         MVC   CONSOL,FUNK
         OI    CONSOL,X'40'
         BR    R9
R500     EQU   *
         XC    EWT,EWT
         WTOR  'GIB MEMB.NAME MAX.8BYTES',NAME2,8,EWT
         WAIT  ECB=EWT
         OC    NAME2,BLANKS
         BR    R9
R600     EQU   *        ROUTINE TO READ A DSN FROM SYSPRINT OUTPUT
         GET   SYSPRINT                 READ A RECORD FROM INPUT
         CLC   1(3,R1),=C'IEH'          DO WE HAVE A IEHLIST MESSAGE
         BE    R600                     DON T USE IT
         CLC   2(7,R1),=C'GENERAL'      ARE THIS GENERAL INFORMATION
         BE    R615                     THEN SPECIAL HANDLING
         CLC   29(4,R1),=C'NODE'       LOOK FOR KEYWORD NODE
         BE    R610                    SO START FUNKTION
R605     B     R600                    NOT NODE SO READ
         CLI   1(R1),X'40'             DO WE HAVE A DSN
         BE    R600
         MVC   AREA,1(R1)              MOVE FULLY QUALIFIED DSN
         MVC   VOLUME,51(R1)           MOVE VOLUME ID
         MVC   FELD,71(R1)             MOVE UNITTYP FOR TRANSLATE
         ST    R9,SAVE9                STROE BALREG
         LA    R7,8                    MOVE COUNT
         LA    R6,FELD                 STARTING ADRESS
         BAL   R9,G910                 DO TRANSLATING
         L     R9,SAVE9                UNIT IS STORED BY ROUTINE
         CLI   PASS,X'02'              DO WE HAVE PASS 2A
         BE    R699                    YES SO IGNORE ALIASCHANGE
         AP    ZAE,=P'1'               COUNT DATASETS
         CLI   INDI,X'40'              IS IT FIRST TIME
         BE    R620                    YES
COMP     CLC   ALIAS,AREA              IS IT STILL THE SAME INDEX
         BNE   R650                    NO SO GO
         B     R699                    INDEX IS STILL THE SAME
R610     EQU   *                       KEYWORD NODE FOUND
         NI    R605+1,X'0F'            DO A NOP
         B     R605                    AND TRY WHAT ELSE
R615     EQU   *
         OI    R605+1,X'F0'            DON T USE GENERAL INFO
         B     R600                    READ AGAIN
R620     EQU   *                       MOVE INDEX TO FIELD ALIAS
         MVI   INDI,X'F0'              INDICATE NOT FIRST TIME
         LA    R7,0                    MOVE ZERO TO COUNT
         MVC   ALIAS,=C'        '      MOVE BLANKS TO FIELD
         LR    R8,R1                   GET STARTING POINT
         LA    R8,1(R8)                POINT TO DSN BEGIN
         LA    R15,ALIAS               GET FIELD STARTING
R625     EQU   *
         CLI   0(R8),C'.'              ARE WE AT END ???
         BE    R630                    YES
         MVC   0(1,R15),0(R8)          MOVE ONE BY ONE
         LA    R7,1(R7)                COUNT NUMBERS
         LA    R8,1(R8)                NEXT BYTE
         LA    R15,1(R15)              NEXT BYTE IN ALIAS FIELD
         B     R625                    & LOOP
R630     EQU   *
         BCTR  R7,0                    MAKE COUNT REAL
         STC   R7,COMP+1               STORE COUNT FOR COMPARE
         STC   R7,MVC+1                STORE COUNT FOR MOVE ALIAS
         B     COMP                    AND COMPARE
R650     EQU   *                       ALIAS HAS CHANGED --
         ST    R1,SAVE1                SAVE START OF RECORD
         ST    R9,SAVE9                SAVE RETURN
         BAL   R9,R700                 UNCAT & RECAT INDEX
         L     R9,SAVE9                RETURNADR.
         L     R1,SAVE1                RETURN START OF RECORD
         MVC   AREA,1(R1)             MOVE FULLY QUALIFIED DSN
         MVC   VOLUME,51(R1)           MOVE VOLUME
         B     R620                    AND GO ON
R699     EQU   *
         BR    R9                      BACK TO MAINROUTINE
R700     EQU   *                       END OF UNCATALOG
         MVI   AREA,X'40'
         MVC   AREA+1(L'AREA-1),AREA     CLEAR IT
MVC      MVC   AREA(8),ALIAS           MOVE INDEX TO CAMLST AREA
         MVC   VOLUME,NEWVOL           MOVE CVOL ID
         MVC   UNIT,UNITCVOL           MOVE CVOL UNITTYP
         INDEX CAM8                    DELETE THE INDEX
         CH    R15,=H'0'               OK
         BNE   R710                    NO
         B     R720                    BACK
         CNOP  0,4                     ALIGNMENT
R710     EQU   *                       UNCATALOG INDEX IS IMPOSSIBLE
         WTO   'INDEX UNCATLG IMPOSSIBLE'
         B     A000                    SHOULD NEVER OCCUR BUT NOW STOP
R720     EQU   *                       RECAT INDEX
         INDEX CAM14
         CH    R15,=H'0'               OK ?
         BNE   R730                    NO
         BR    R9                      BACK TO ROUTINE
R730     EQU   *
         MVC   R710+14(7),=C'CATALOG'      CATALOG INDEX IMPOSSIBLE
         B     R710
R800     EQU   *                       ROUTINE GIB CVOL
         XC    EWT,EWT                 CLEAR ECB
         WTOR  'GIB NEUEN CVOL 6 BYTES',VOLUME,6,EWT
         WAIT  ECB=EWT
         OC    VOLUME,BLANKS
         BR    R9                      BACK TO CALLER
R810     EQU   *                        ROUTINE TO GET CONNECTOR/DISC.
         XC    EWT,EWT                  CLEAR ECB
         MVC   ALIAS,BLANKS             CLEAR ALIAS FIELD
         WTOR  'GIB HIGH LEVEL QUALIFIER',ALIAS,8,EWT
         WAIT  ECB=EWT                  WAIT FOR COMPLETION
         OC    ALIAS,BLANKS             MAKE IT BIG LETTERS
         BR    R9                       BACK TO MAIN ROUTINE
T000     EQU   *
         MVC   NAME1,BLANKS
         MVC   NAME2,BLANKS
         OI    WEI+1,X'F0'
         B     A200                    GET VTOC INFORMATION
T010     NI    WEI+1,X'0F'
         MVC   JFCBADR+1(3),J4+1       STORE AREAADRESSE IN LISTE
         CLC   VOLUME(3),=C'MVS'
         BE    T011
         CLC   VOLUME(3),=C'IMS'
         BE    T070
         B     T080
T011     EQU   *
         RDJFCB DATEI                  READ JFCB
         MVC   JFCB1(44),AREA          MERGE DSN
         MVC   JFCB1+118(6),VOLUME     MERGE VOL
         MVC   JFCB1+100(1),BUFFER+40  MERGE DSORG
         MVC   JFCB1+102(2),BUFFER+42  MERGE BLKSIZE
         MVC   JFCB1+104(2),BUFFER+44  MERGE LRECL
         OI    JFCB1+76,X'80'          SET RETURN JFCB
         OI    JFCB1+52,X'40'          SET INDIKATOR VOL.LIST CHANGED
         OPEN (DATEI,(OUTPUT)),TYPE=J
T015     EQU   *
         BAL   R9,R400                 GIB FUNKTION
         BAL   R9,R500                 GIB MEMB.1
         MVC   NAME1,NAME2
         MVC   NAME2,BLANKS
         CLI   CONSOL,C'C'
         BNE   T020
         BAL   R9,R500                 GIB MEMB.2
T020     EQU   *
         CLI   CONSOL,C'C'
         BE    T030
         CLI   CONSOL,C'D'
         BE    T040
         CLI   CONSOL,C'R'
         BE    T050
         B     T055
T030     STOW  DATEI,NAME1,C
         B     T060
T040     STOW  DATEI,NAME1,D
         B     T060
T050     MVI   NAME1+11,X'00'
         STOW  DATEI,NAME1,R
         B     T060
T055     MVI   NAME1+11,X'00'
         STOW  DATEI,NAME1,A
T060     EQU   *
         BAL   R9,CHECK
         CLOSE  DATEI
         MVC   DATEI+40(6),=C'SYSIN '
         MVI   CONSOL,X'40'
         B     A000
T070     EQU   *
         MVC   DATEI+40(6),=C'SYSIN1'
         B     T011
T080     EQU   *
         MVC   DATEI+40(6),=C'SYSIN2'
         B     T011
ENDE     B     CWTO
VIVADR   EQU   *                       ROUTINE TO DETERMINE NEW DSCB1
         CLI   UNIT+3,X'0B'            DO WE HAVE MOD 3350
         BNE   *+8                     IF NOT BRANCH AROUND
         MVI   VIVTRK,X'1D'            ELSE MOVE NR. TRKS PER CYL - 1
         XR    R15,R15
         CLC   VIVCCHHR,VIVLAST          ENDE VTOC DA ?
         BNL   VIVEND                  JA
         CLC   VIVANZ,VIVCCHHR+4       MAX ANZ. DSCBS PRO SPUR
         BE    VIVADR10                ABGEARBEITED , JA
         IC    R15,VIVCCHHR+4
         LA    R15,1(R15)              BLOCKNR + 1
         STC   R15,VIVCCHHR+4
         BR    R9
VIVADR10 EQU   *
         MVI   VIVCCHHR+4,X'01'        BLOCKNR. AUF 1 ZURUECK
         LH    R15,VIVCCHHR+2          SPURADR. IN R15
         SR    R0,R0
         IC    R0,VIVTRK               NUMMER HOECHSTE SPUR IN R0
         CR    R15,R0                  KANN SPUR NOCH HOEHER WERDEN
         BNL   VIVADR20                NO ALASO CYLINDER
         LA    R15,1(R15)              + 1
         STH   R15,VIVCCHHR+2          AND STORE IT
         BR    R9
VIVADR20 EQU   *
         SR    R15,R15
         STH   R15,VIVCCHHR+2          SPUR AUF 0 ZURUECKSETZEN
         LH    R15,VIVCCHHR            CYL IN R15
         LA    R15,1(R15)              + 1
         STH   R15,VIVCCHHR            AND STORE IT
         BR    R9
VIVEND   EQU   *
         MVI   VIVTRK,X'12'            MOVE NR TKS PER CYL FOR 3330
         OI    ZAE+3,X'0F'             MAKE SIGN POSITUV
         UNPK  CWTO+8(7),ZAE           UNPACK THE COUNTED DATASETS
VIVEND1  NOP   F100                    FOR SRATCH DSN NOT IN CAT
         ZAP   ZAE,=P'0'               CLEAR FOR REUSE
         MVC   CWTO+15(22),=C'  DATASETS CONVERTED    '
         B     CWTO
X000     EQU   *                       MOVE CAT ENTRIES BY INDEX
         BAL   R9,R800                 GIB CVOL NAME
         BAL   R9,G900                 GET UNITTYPE OF CVOL
         MVC   NEWVOL,VOLUME           SAVE CVOL ID
         MVC   UNITCVOL,UNIT           SAVE CVOL UNIT TYP
         LINK  EP=IEHLIST,PARAM=(OPTLIST,DDLIST),VL=1 LINK TO IEHLIST
         CH    R15,=H'4'
         BH    X080                  COND CODE > 4
         MVI   PASS,X'01'              INDICATA PASS 1
         OPEN  SYSPRINT                OPEN IEHLIST OUTPUT
X010     EQU   *
         BAL   R9,R600                 READ A DSN
         CATALOG CAM4                  & UNCATALOG IT
         CH    R15,=H'0'
         BNE   X050                    THIS DIDN'T WORK
         B     X010                    AND LOOP
X020     EQU   *
*    THIS IS PASS TWO FOR CATALOG PRIOR UNCATALOGUED DATASETS
         BAL   R9,R600                 READ A DSN
         CATALOG CAM3                  & CATALOG IT AGAIN
         CH    R15,=H'0'
         BNE   X070                    NOT OK
         B     X020                    OK SO LOOP
X050     EQU   *                       UNCATALOG NOT POSSIBLE
         MVC   FWTO+8(44),AREA         MOVE DSN FOR WTO
         MVC   FWTO+53(9),=C'UNCATALOG'
         BAL   R9,FWTO                 WTO A MESSAGE
         B     X010                    TRY NEXT DATASET
X070     EQU   *                       CATALOG IMPOSSIBLE
         MVC   FWTO+8(44),AREA         MOVE DSN
         MVC   FWTO+53(9),=C'CATALOG  '
         BAL   R9,FWTO                 WTO A MESSAGE
         B     X020                    TRY NEXT DSN
X080     WTO   'IEHLIST COND CODE > 8'
         B     A000
FWTO     WTO   '                                                      '
         BR     R9                     BACK TO ROUTINE
ENDLIST  EQU   *                       END OF INPUT
         CP    ZAE,=P'0'               DID WE HAD DATASETS ?
         BE    ENDFUNKF                NO SO THEN END AND GIVE MESS
         CLI   PASS,X'02'              DO WE HAVE PASS 2
         BE    ENDFUNKF                THEN END THE FUNKTION
         MVI   PASS,X'02'              INDICATE PASS 2
         CLOSE SYSPRINT
         OPEN  SYSPRINT                & REOPEN IT
         BAL   R9,R700                 CHANGE INDEX LAST TIME
         OI    R605+1,X'F0'            MAKE A BRANCH AGAIN
*                                      FOR PASS 2
         MVI   INDI,X'40'              GRUNDSTELLUNG FIRST TIME SWITCH
         B     X020                    DO PASS 2
ENDFUNKF EQU   *
         MVI   PASS,X'00'              GRUNDSTELLUNG
         CLOSE SYSPRINT                CLOSE FILE
         WTO   'CVOL CONNECTORS ARE ESTABLISHED FOR HIGH LEV. INDICES'
         WTO   'FROM OLD TO NEW CVOL'
         WTO   'MCAT ALIAS ENTRIES SHOULD BE CHANGED MANUELL'
         WTO   'TO POINT DIRECTLY TO NEW CVOL'
         WTO   'AFTERWARDS PLEASE DELETE CVOL CONNECTORS FROM OLD CVOL'
         B     VIVEND                  PRINT MESSAGE & COUNT & END
VIVRDCB1 CAMLST SEEK,VIVCCHHR,VOLUME,IECSDSL1
VIVRDCB4 CAMLST SEARCH,AREA,VOLUME,IECSDSL4
CAM1     CAMLST NAME,AREA,,BUFFER
CAM2     CAMLST SEARCH,AREA,VOLUME,BUFFER
CAM3     CAMLST CATBX,AREA,,LIST
CAM4     CAMLST UCATDX,AREA
CAM5     CAMLST SCRATCH,AREA,,LIST
CAM6     CAMLST RENAME,BUFFER,AREA,LIST
CAM7     CAMLST BLDG,AREA,VOLUME,,DELETE,,5
CAM8     CAMLST DLTX,AREA
CAM9     CAMLST RECAT,AREA,,LIST
CAM10    CAMLST SCRATCH,AREA,,LIST,,OVRD
CAM11    CAMLST DLTA,ALIAS                   NOT USED
CAM12    CAMLST BLDA,CATL,,ALIAS             NOT USED
CAM13    CAMLST BLDX,AREA,CAT            NOT USED
CAM14    CAMLST LNKX,ALIAS,,UNIT
CAM15    CAMLST DRPX,ALIAS
         LTORG
VIVTRK   DC    X'12'           IN HEXA MAX.REC.PRO TRK - 1
FELD     DS    CL8                     WORKING AREA FOR TR
         DC    X'F0'                   ONE MORE FOR PACKING
TAB      DC    X'0A0B0C0D0E0F'
DISK     DC    X'30502009'
TAPE     DC    X'34008003'
ZAE      DC    X'0000000F'
NEWVOL   DS    CL6
SEARCHV  DS    CL6
UNITCVOL DS    CL4
DSCB4    DC    44XL1'04'               DSN FOR FORMAT 4 DSCB
         DS    0F
VIVCCHHR DS    CL5
         DS    0F
VIVLAST  DS    CL5
VIVANZ   DS    CL1
EWT      DS    F
CONSOL   DS    CL1
RECF     DC    3X'40'
AREA     DS    CL44
         DS    CL1
BLANKS   DC    45X'40'
         DS    0D
BUFFER   DS    CL265
HALB     DS    H
DOPWO    DS    D
LIST     DC    H'1'
UNIT     DS    CL4
VOLUME   DS    CL6
         DC    H'0'
         CNOP  2,8
NAME1    DS    CL8
NAME2    DS    CL8
         CNOP  0,4
JFCBADR  DC    XL1'87'
         DC    AL3(0)
         DC    6X'11111111'
         DC    8X'11111111'
J4       DC    A(JFCB1)
JFCB1    DC    176X'AA'
FUNK     DS    CL1
         CNOP  2,4                        ALIGN TO HALFWORD
OPTLIST  DC    H'0'
         CNOP  2,4
DDLIST   DC    X'0048'
         DC    32X'00'
         DC    C'INPUT   '
         DC    C'SYSPRINT'
         DC    8X'00'
         DC    C'SYSUT1  '
         DC    C'SYSUT2  '
         DC    C'SYSUT3  '
         DC    C'SYSUT4  '
PASS     DC    X'00'
SAVE1    DS    F
SAVE9    DS    F
ALIAS    DS    CL8                       NOT USED
CATL     DS    CL8
INDI     DC    X'40'
CAT      DS    CL6                       NOT USED
DATEI    DCB   DSORG=PO,MACRF=(R,W),DDNAME=SYSIN,EODAD=ENDE,           *
               EXLST=JFCBADR
SYSPRINT DCB   DSORG=PS,MACRF=GL,LRECL=121,BLKSIZE=121,RECFM=F,        *
               DDNAME=SYSPRINT,EODAD=ENDLIST
         DS    0F
         IECSDSL1 1                    FORMAT 1 DSCB
         DS    0F
         IECSDSL1  4                   FORMAT 4 DSCB
*
DS4CCHHR DS    CL5
         DC    XL39'0'
*
*
*           DIESE BEIDEN DEFINITIONEN WEGEN DER ERHOEHUNG AUF
*           140 BYTES BUFFERGROESSE HINTER IECDSL4 BELASSEN
*           IECDSL1 MUSS AUS DEM GLEICHEN GRUND VOR IECDSL4 LIEGEN
*
         END   MAINT
