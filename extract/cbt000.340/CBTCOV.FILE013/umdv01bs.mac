           ICTL      8,71,12
           PRINT     ON,GEN,DATA
       A01 TITLE     'UNTERPROGRAMM DAYTIME, BEREITSTELLEN DATUM'
       A01001   START
               ENTRY DAYTIME
                DC   CL7'A01001 '
                DC   X'07'
       *
       *   AUTOR: ARNOLDS, THYSSEN ROEHRENWERKE AG, DUESSELDORF.
       *
       *   1. DAS UNTERPROGRAMM STELLT DEM AUFRUFENDEN PROGRAMM DAS
       *      TAGESDATUM UND DIE UHRZEIT IN VERSCHIEDEN AUFBEREITETEN
       *      FORMEN ZUR VERFUEGUNG, DIE DURCH NACHSTEHENDE STRUKTUR
       *      BESCHRIEBEN IST.
       *
       *      01 TAGZEIT.
       *         02 DATUM-IPL     PICTURE 99V999 DISPLAY.
       *         02 MONITOR-DATE  PICTURE 99999  DISPLAY.
       *         02 ZEIT-KETTE.
       *            03 JAHR       PICTURE 99     DISPLAY.
       *            03 MONAT      PICTURE 99     DISPLAY.
       *            03 TAG        PICTURE 99     DISPLAY.
       *            03 STUNDE     PICTURE 99     DISPLAY.
       *            03 MINUTE     PICTURE 99     DISPLAY.
       *            03 SEKUNDE    PICTURE 99     DISPLAY.
       *            03 MILLISEK   PICTURE 999    DISPLAY.
       *         02 ZEIT-GEPACKT  PICTURE 9(15)  COMPUTATIONAL-3.
       *         02 MONAT-ALPHA   PICTURE X(9)   DISPLAY.
       *
       *      DAS FELD 'ZEIT-GEPACKT' ENTHAELT 'ZEIT-KETTE' GEPACKT.
       *      DAS FELD 'MONITOR-DATE' ENTHAELT TTMMJ.
       *          (TT = TAG, MM = MONAT, J = JAHR)
       *
       *   2. IN COBOL-PROGRAMMEN WERDEN DIE ERFORDERLICHEN
       *      DEFINITIONEN IN DER WORKING-STORAGE SECTION DURCH EINE
       *      COPY-EINTRAGUNG AUFGERUFEN:
       *
       *      01 TAGZEIT  COPY 'TAGZEIT'.
       *
       *   3. DAS UNTERPROGRAMM WIRD IN COBOL-PROGRAMMEN WIE FOLGT
       *      AUFGERUFEN:
       *
       *      ENTER LINKAGE. CALL 'DAYTIME' USING TAGZEIT.
       *      ENTER COBOL.
       *
       *   4. IN ANDEREN PROGRAMMIERSPRACHEN SIND ENTSPRECHENDE
       *      DEFINITIONEN UND EIN ENTSPRECHENDER AUFRUF VORZUSEHEN.
       *
           EJECT
       *
       *   H A U P T P R O G R A M M
       *
       DAYTIME  EQU  *
           SAVE      (14,12)
           L         R2,0(R0,R1)   ADR. USING-ARGUMENT -> REG 2
           USING     GEMBER,R2
           BALR      R5,0       BASISREGISTER LADEN
           USING     *,R5
           TIME      ,          DIE TAGESZEIT -> R0, DATUM ->R1
           ST        R0,ZEITR   STORE ZEIT AUS R0
           ST        R1,DATUMR  STORE DATUM AUS R1
           UNPK      DATIPL,DATUMR
           UNPK      STUNDE(9),ZEITPK
           PACK      RECH,JAHRIPL  PACKEN JAHR ZUM DIVIDIEREN
           LA        R3,JAN        ADRESSE MONATSTABELLE
           LH        R4,K28H       TAGE FEBRUAR
           MVC       ZMON,K1P      KONSTANTE 1 NACH ZWI-MONAT
           DP        RECH,K4P      DIVIDIEREN JAHR DURCH 4
           CP        RECH+4(1),K0P PRUEFEN AUF SCHALTJAHR
           BNE       M1            VERZWEIGEN BEI UNGLEICH
           AH        R4,K1H        ADD 1 -> FEBRUAR
       M1  STH       R4,FEB        STORE FEBRUAR
           PACK      DOPPWT,TAGIPL
           CVB       R4,DOPPWT     TAG IM JAHR
           LH        R7,K12H       TABELLEN-INKREMENT
       M2  LH        R8,0(R0,R3)   ANZAHL DER TAGE IM MONAT
           MVC       MALPHA,2(R3)   MONATTEXT -> HAUPTPROGRAMM
           CR        R4,R8         VERGLEICH TAG IM JAHR / ANZAHL TAGE
           BNH       M3            VERZWEIGE BEI A <= B
           AR        R3,R7     ADD +12 -> TABELLENADRESSE
           SR        R4,R8     SUBTRAHIERE ANZAHL DER TAGE DES MONATS
           AP        ZMON,K1P  ADD +1  TO ZWI MONAT
           B         M2
       M3  CVD       R4,DOPPWT
           MVN       DOPPWT+7(1),K0P   LOESCHEN PLUSZONE
           MVN       ZMON+1(1),K0P       LOESCHEN PLUSZONE
           MVC       JAHR,JAHRIPL
           UNPK      MONAT,ZMON
           UNPK      TAG,DOPPWT+6(2)
           MVC       MONDAT+4(1),JAHR+1
           MVC       MONDAT+2(2),MONAT
           MVC       MONDAT(2),TAG
           PACK      ZPACKT,ZKETTE
           LM        14,12,12(13)        RESTORE REGISTER
           MVI       12(13),X'FF'        ZEIGER 'UNTERPROGRAMM FERTIG'
           BR        14                  RETURN
       *
       *   ARBEITSSPEICHER UND KONSTANTE
       *
       DATUMR   DS   1F
       ZEITPK   DS   0CL5
       ZEITR    DS   1F
       K0P      DC   1X'0F'    KONSTANTE 0 MIT BLANK-ZONE
       RECH     DS   1CL5
       K4P      DC   1P'+4'
       K1H      DC   1H'1'     HALBWORT +1
       K12H     DC   1H'12'    HALBWORT +12
       DOPPWT   DS   1D
       ZMON     DC   1P'00'
       K1P      DC   1X'001F'            KONSTANTE 1 MIT BLANKZONE
       K28H     DC   1H'28'
       *
       *   TABELLE DER MONATE UND DER ANZAHL DER TAGE JE MONAT
       *
                 DS  0H
       JAN       DC  H'31',CL10'   JANUAR '
       FEB       DC  H'28',CL10'  FEBRUAR '
       MRZ       DC  H'31',CL10'    MAERZ '
       APR       DC  H'30',CL10'    APRIL '
       MAI       DC  H'31',CL10'      MAI '
       JUN       DC  H'30',CL10'     JUNI '
       JUL       DC  H'31',CL10'     JULI '
       AUG       DC  H'31',CL10'   AUGUST '
       SEP       DC  H'30',CL10'SEPTEMBER '
       OKT       DC  H'31',CL10'  OKTOBER '
       NOV       DC  H'30',CL10' NOVEMBER '
       DEZ       DC  H'31',CL10' DEZEMBER '
       *
       *   DEFINITION DER REGISTER
       *
       R0  EQU 0
       R1  EQU 1
       R2  EQU 2
       R3  EQU 3
       R4  EQU 4
       R5  EQU 5
       R6  EQU 6
       R7  EQU 7
       R8  EQU 8
       R9  EQU 9
       R10 EQU 10
       R11 EQU 11
       R12 EQU 12
       R13 EQU 13
       R14 EQU 14
       R15 EQU 15
       *
       *   DEFINITION DES GEMEINSAMEN BEREICHES (IM HAUPTPROGRAMM)
       *
       GEMBER   DSECT
       DATIPL   DS   0CL5
       JAHRIPL  DS   1CL2
       TAGIPL   DS   1CL3
       MONDAT   DS   1CL5
       ZKETTE   DS   0CL15
       JAHR     DS   1CL2
       MONAT    DS   1CL2
       TAG      DS   1CL2
       STUNDE   DS   1CL2
       MINUTE   DS   1CL2
       SEKUNDE  DS   1CL2
       MILLISEK DS   1CL3
       ZPACKT   DS   1CL8
       MALPHA   DS   1CL9
                END
