./ CHANGE NAME=HASPRDR
*A  SETTING THE HASP-PRIORITY BY THE OS-TIME-PAR. IN THE JOB-C. GLIN 01
*B  LINDE AG MUENCHEN1.8.75 SCHOEFMANN,FR 1.8.75                GLIN 01
*C  R2769000-R2769020,R2856700,M0313000-M0317000,GT099005-..045 GLIN 01
*D  THE  HASP-PRIORITY-PARAMETER(JCTETIME)IS SET BY THE TIME-   GLIN 01
*D  PARAMETER IN THE JOB-CARD(CPU-TIME). - NOT BY THE TIME-     GLIN 01
*D  PARAMETER IN THE JOBPARM-CARD(EXECUTION-TIME).              GLIN 01
         MVI   $JOBINCR,X'0F'      SWITCH FOR TIME-TEST         GLIN 01
         BCTR  R1,0                SET R1 FOR T- OR P-TEST      GLIN 01
         MVC   C$$HST,0(R1)        SAVE TEST- OR PROD.-ID       GLIN 01
         COPY  RDRPRIOM            INCLUDE TIME-ROUTINE         GLIN 01
./ CHANGE NAME=HASPINIT
         DC    AL1(21),AL3(60*1)        PRIORITY  14            GLIN 01
         DC    AL1(19),AL3(60*2)        PRIORITY  13            GLIN 01
         DC    AL1(17),AL3(60*3)        PRIORITY  12            GLIN 01
         DC    AL1(15),AL3(60*4)        PRIORITY  11            GLIN 01
         DC    AL1(13),AL3(60*5)        PRIORITY  10            GLIN 01
         DC    AL1(11),AL3(60*6)        PRIORITY   9            GLIN 01
         DC    AL1(9),AL3(60*7)         PRIORITY   8            GLIN 01
         DC    AL1(7),AL3(60*8)         PRIORITY   7            GLIN 01
         DC    AL1(5),AL3(60*279620)    PRIORITY   6            GLIN 01
./ CHANGE NAME=$RDRWORK
C$$SAVE  DC    F'0'                SAVE - FOR CVB               GLIN 01
C$$MIN   DC    F'0'                MIN -VARIABLE                GLIN 01
C$$HST   DC    C'0'                TEST-VARIABLE                GLIN 01
C$$RW    DC    F'0'                SAVE - RW                    GLIN 01
C$$SEC   DC    F'0'                VAR. FOR SEC.                GLIN 01
$JOBINCR DS    CL1            SWITCH                            GLIN 01
$JCLS$99 DS    CL1            SWITCH                            GLIN 01
$JCLS$$3 DS    CL1            SWITCH                            GLIN 01
./       ADD    NAME=RDRPRIOM,LIST=ALL
./       NUMBER NEW1=100,INCR=100
*A  COPY-DECK TO GLIN 01                                        GLIN 01
RJOBINCR CLI   $JOBINCR,X'0F'      SWITCH FOR TIME-TEST         GLIN 01
         BNE   RJCLS$$1            IS'NT FIRST ENTRY            GLIN 01
         MVI   $JCLS$$3,X'0F'      ERROR - SWITCH               GLIN 01
* 2.11.76CLI   C$$HST,C'T'         TEST FOR "TEST-JOBS"         GLIN 01
* 2.11.76BNE   RJCLS$$2            BRANCH TO NORM. WORK         GLIN 01
         MVC   JCTETIME,C$$F9      DEF. VALUE NINE  TO JCTETIME GLIN 01
         CLC   3(5,RW),C$$TIM      TEST FOR 'TIME='             GLIN 01
         BNE   RJCLS$$1            ADVANCE TO THE NEXT BYTE     GLIN 01
         MVI   $JCLS$99,X'F0'      SWITCH-ON F. TIME-SEC.       GLIN 01
         ST    RW,C$$RW            SAVE BXLE-REGISTER           GLIN 01
         CLI   8(RW),C'('          IF LEFT  PARENTHESIS(SEC??)  GLIN 01
         BE    RJCL$SC             BRANCH TO SEC.               GLIN 01
         SR    R0,R0               CLEAR R0                     GLIN 01
         SR    R1,R1               CLEAR R1                     GLIN 01
RJCLS$MI CLI   8(RW),C','          TEST FOR COMMA               GLIN 01
         BE    RJCLS$ME            IF COMMA - GOTO MIN.         GLIN 01
         CLI   8(RW),C' '          TEST FOR BLANK               GLIN 01
         BE    RJCLS$ME            GOTO MIN.                    GLIN 01
         CLI   8(RW),C'0'          TEST FOR ZERO                GLIN 01
         BL    RBADJOBT            LOWER ZERO - ERROR           GLIN 01
         SLDL  R0,8                SHIFT PARAMETER              GLIN 01
         LTR   R0,R0               TEST FOR ZERO                GLIN 01
         BNZ   RBADJOBT            MORE THEN FOUR CHARACTER     GLIN 01
         IC    R1,8(RW)            GET MIN INTO R1              GLIN 01
         BXLE  RW,R14,RJCLS$MI     ADVANCE TO NEXT BYTE OF MIN. GLIN 01
         B     RBADJOBT            BRANCH TO ERROR-ROUTINE      GLIN 01
RJCLS$ME ST    R1,C$$MIN           STORE R1 INTO C$$MIN         GLIN 01
         B     RJCLS$96            GOTO TIME-SETTING F. MIN.    GLIN 01
RJCL$SC  SR    R0,R0               CLEAR R0                     GLIN 01
         SR    R1,R1               CLEAR R1                     GLIN 01
RJCL$SCK CLI   9(RW),C','          TEST FOR COMMA               GLIN 01
         BE    RJCLSSEC            BRANCH ON EQUAL TO SEC-ROUT. GLIN 01
         CLI   9(RW),C')'          TEST FOR RIGHT PARENTHESIS   GLIN 01
         BE    RJCLSKOE            END - OF - TIME              GLIN 01
         CLI   9(RW),C'0'          TEST FOR ZERO                GLIN 01
         BL    RBADJOBT            LOWER ZERO -  ERROR          GLIN 01
         SLDL  R0,8                SHIFT  PARAMETER             GLIN 01
         LTR   R0,R0               TEST R0 FOR ZERO             GLIN 01
         BNZ   RBADJOBT            LOWER ZERO - ERROR           GLIN 01
         IC    R1,9(RW)            GET MIN. INTO R1             GLIN 01
         BXLE  RW,R14,RJCL$SCK     ADVANCE TO NEXT BYTE OF SEC. GLIN 01
         B     RBADJOBT            BRANCH TO ERROR-ROUTINE      GLIN 01
RJCLSKOE ST    R1,C$$MIN           STORE R1 INTO VAR. C$$MIN    GLIN 01
         B     RJCLS$96            GOTO MIN.-ROUTINE            GLIN 01
RJCLSSEC ST    R1,C$$MIN           STORE R1 INTO VAR. C$$MIN    GLIN 01
         SR    R0,R0               CLEAR R0                     GLIN 01
         SR    R1,R1               CLEAR R1                     GLIN 01
RJCLSSE  CLI   10(RW),C')'         TEST FOR RIGHT PARENTHESIS   GLIN 01
         BE    RJCLSSEN            GET THE TIME-SEC.            GLIN 01
         CLI   10(RW),C'0'         TEST FOR ZERO                GLIN 01
         BL    RBADJOBT            ERROR                        GLIN 01
         SLDL  R0,8                SHIFT PARAMETER              GLIN 01
         LTR   R0,R0               TEST FOR ZERO                GLIN 01
         BNZ   RBADJOBT            NOT EQUAL ZERO - ERROR       GLIN 01
         IC    R1,10(RW)           INSERT SEC. INTO R1          GLIN 01
         BXLE  RW,R14,RJCLSSE      ADVANCE TO NEXT BYTE OF SEC. GLIN 01
         B     RBADJOBT            ERROR                        GLIN 01
RJCLSSEN ST    R1,C$$SEC           STORE R1 INTO VAR. C$$SEC    GLIN 01
         B     RJCLS$89            ONLY SEC.                    GLIN 01
RJCLS$98 MVI   $JCLS$99,X'0F'      SET SWITCH FOR ONLY SEC.     GLIN 01
RJCLS$96 L     R1,C$$MIN           LOAD THE VALUE OF MIN INTO R1GLIN 01
         C     R1,C$$F0            TEST FOR ZERO                GLIN 01
         BE    RJCLS$99            ONLY SEC.                    GLIN 01
         BAL   RL1,REBCDBIN        CONVERT TO BINARY            GLIN 01
         MH    R1,C$$H60           MULTIPLY WITH SIXTY          GLIN 01
         ST    R1,C$$MIN           STORE R1 INTO VAR. C$$MIN    GLIN 01
RJCLS$99 CLI   $JCLS$99,X'0F'      SWITCH FOR SEC.              GLIN 01
         BNE   RJCLS$97            NO SECONDS EXIST             GLIN 01
         A     R1,C$$SEC           ADD R1 WITH SEC.             GLIN 01
RJCLS$97 LA    RW,8                SET RW TO 8 NUMB. OF STEP'S  GLIN 01
         LA    RL1,C$$TAB          LOAD RL1 WITH C$$TAB-ADDR.   GLIN 01
C$$LOOP  CH    R1,0(RL1)           COMP TIME-VALUE - WITH TAB-V.GLIN 01
         BH    C$$LOOP1            IF TIME HIGH THEN NEXT-COMP  GLIN 01
         LA    R1,9                POSSIBLE PRIO-STEP'S INTO R1 GLIN 01
         SR    R1,RW               SUBTRACT R1 WITH TAB-COUNTER GLIN 01
         B     RYCLS$90            SETTING JCTETIME             GLIN 01
C$$LOOP1 AH    RL1,C$$H2           ADD VALUE OF TWO UP TO RL1   GLIN 01
         BCT   RW,C$$LOOP          CONTINUE LOOP                GLIN 01
         LA    R1,8                NOT IN TAB?-SET VALUE EIGHT  GLIN 01
RYCLS$90 ST    R1,JCTETIME         SET JCTETIME                 GLIN 01
         L     RW,C$$RW            SET RW TO ORIGIN-RW          GLIN 01
RJCLS$$2 MVI   $JOBINCR,X'F0'      SET SWITCH FOR NORM. WORK.   GLIN 01
         MVC   C$$MIN,C$$F0        SET VAR. C$$MIN UP TO ZERO   GLIN 01
         MVC   C$$SEC,C$$F0        SET C$$SEC UP TO ZERO        GLIN 01
RJCLS$$3 CLI   RJCLS$$3,X'0F'      SWITCH FOR ERROR-ROUTINE     GLIN 01
         BNE   RILLJOBC            TIME-PARAMETER IN ERROR      GLIN 01
         B     RJCLS$$1            BRANCH TO NORM. WORK.        GLIN 01
RBADJOBT MVI   $JCLS$$3,X'F0'      SWITCH FOR ERROR-ROUTINE     GLIN 01
         B     RYCLS$90+4          SET VAL. OF ORIGIN-POSITION  GLIN 01
RJCLS$89 L     R1,C$$SEC           NUMBER OF SEC. INTO R1       GLIN 01
         C     R1,C$$F0            TEST FOR ZERO                GLIN 01
         BE    RJCLS$96            NO SEC.                      GLIN 01
         BAL   RL1,REBCDBIN        CONVERT TO BINARY            GLIN 01
         ST    R1,C$$SEC           STORE R1 INTO VAR. C$$SEC    GLIN 01
         B     RJCLS$98            SET JCTETIME                 GLIN 01
REBCDBIN LTR   R1,R1               TEST FOR NULL INPUT          GLIN 01
         BZ    4(RL1)              RETURN IF NO EBCDIC TO CONV. GLIN 01
         ST    R1,C$$SAVE          CONVERT R1                   GLIN 01
         PACK  RTEMP,C$$SAVE(4)    TO PACKED DEZIMAL            GLIN 01
         NI    RTEMP+7,X'FC'       CONV. SIGN DIGIT EBCDIC-PLUS GLIN 01
         CVB   R1,RTEMP            AND CONVERT TO BINARY        GLIN 01
         BR    RL1                 MAKE NORMAL RETURN           GLIN 01
C$$TAB   DS    0F                  PRIORITY-TAB                 GLIN 01
         DC    H'1'                STEP - ONE                   GLIN 01
         DC    H'2'                STEP - TWO                   GLIN 01
         DC    H'3'                STEP - THREE                 GLIN 01
         DC    H'5'                STEP - FOUR                  GLIN 01
         DC    H'10'               STEP - FIVE                  GLIN 01
         DC    H'20'               STEP - SIX                   GLIN 01
         DC    H'40'               STEP - SEVEN  - END OF TAB   GLIN 01
C$$H2    DC    H'2'                CONST. - TWO                 GLIN 01
C$$TIM   DC    C'TIME='            TIME - CONST                 GLIN 01
C$$H60   DC    H'60'               CONST. SIXTY                 GLIN 01
C$$F0    DC    F'0'                CONST. - ZERO                GLIN 01
C$$F9    DC    F'9'                CONST. - NINE                GLIN 01
RJCLS$$1 BXLE  RW,R14,RJOBKEY      ADVANCE TO NEXT COLUMN       GLIN 01
