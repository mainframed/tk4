 CORESTA:  PROCEDURE OPTIONS (MAIN);
 /********************************************************************/
 /*                                                                  */
 /*      STATISTISCHE AUSWERTUNG DER KERNSPEICHERBELEGUNG            */
 /*                                                                  */
 /*      BESCHREIBUNG DES PROGRAMMES 'CORELD'                        */
 /*                                                                  */
 /* OBIGES SMF-BAND LIEFERT UEBER RECORD TYPE 4 DATEN ZUR BESTIMMUNG */
 /* DES VON DEN BENUTZERN GEFORDERTEN UND GENUTZTEN KERNSPEICHERS.   */
 /* UEBER SYSIN-KARTE IST EINZUGEBEN:                                */
 /*   1. ERSTER WOCHENTAG DES JAHRES (ERSTTAG)                       */
 /*   2. ORDINATENINTERVALL (EH) UND                                 */
 /*   3. MAXIMALWERT DER ORDINATE (WRT) FUER DIE                     */
 /*     TAGES- UND MONATSSCHAUBILDER.                                */
 /* DER GENUTZTE BZW. GEFORDERTE KERNSPEICHER DER STEPS,DIE AN MINU- */
 /* TENGRENZEN GLEICHZEITIG DIE REGIONS BELEGEN,WIRD IN JEDER MINUTE */
 /* FESTGEHALTEN,UEBER EINE STUNDE AUFSUMMIERT UND MIT 60 DIVIDIERT. */
 /* SO ERHAELT MAN EINE PRO STUNDE DURCHSCHNITTLICHE KERNSPEICHERBE- */
 /* LEGUNG.(IM MONATSSCHAUBILD WIRD UEBER JEDEN ARBEITSTAG AUFSUM-   */
 /* MIERT UND GEMITTELT). NICHTBELEGUNG DES KERNSPEICHERS WIRD BE-   */
 /* RUECKSICHTIGT.                                                   */
 /*                                                                  */
 /* DIE PRO STUNDE (BZW. PRO TAG) MAXIMALE,GEFORDERTE KERNSPEICHER-  */
 /* BELEGUNG WIRD GRAPHISCH MIT 'MK' ANGEGEBEN.SPEICHER,DEN DAS      */
 /* SYSTEM BENUTZT (NUCLEUS,HASP,TSO),WIRD NICHT BERUECKSICHTIGT.    */
 /* UNTERHALB DER X-ACHSE (TAGESZEIT) WIRD DER MULTIPROGRAMMING-     */
 /* FACTOR (MLPF) ANGEZEIGT.D.H. DIE AN MIUTENGRENZEN GLEICHZEITIG   */
 /* GELADENEN JOBSTEPS WERDEN PRO STUNDE IN MINUTENINTERVALLEN AUF-  */
 /* SUMMIERT UND GEMITTELT.GILT 0 < MLPF < 1.5 WIRD MLPF=1 GESETZT,  */
 /* SONST NORMAL GERUNDET.                                           */
 /*                                                                  */
 /********************************************************************/
         DCL BEWERT FILE RECORD,GUELTIG FILE RECORD,
             L1 FILE PRINT,
             L2 FILE PRINT;
         DCL 1 BSATZ,
              2 FREI1    BIT(8),
              2 RECORD   BIT(8),
              2 SZEITHS  BIN FIXED(31,0) UNAL,
              2 SDATUM   DEC FIXED(7),
              2 SI       CHAR(2),
              2 MO       CHAR(2),
              2 JO       CHAR(8),
              2 JT       BIN FIXED(31,0) UNAL,
              2 JD       DEC FIXED(7),
              2 UD       CHAR(8),
              2 SN       BIT(8),
              2 EZEITHS  BIN FIXED(31,0) UNAL,
              2 EDATUM   FIXED(7),
              2 SY       BIN FIXED(31,0) UNAL,
              2 CC(4)    BIT(4),
              2 PY       BIT(8),
              2 PG       CHAR(8),
              2 ST       CHAR(8),
              2 RF       BIN FIXED(15,0) UNAL, /* REGION GEFORDERT */
              2 F2       BIN FIXED(15,0) UNAL,
              2 RG       BIN FIXED(15,0) UNAL,/* REGION GENUTZT */
              2 F3       BIN FIXED(15,0) UNAL,
              2 F4       BIN FIXED(15,0) UNAL,
              2 F5       BIN FIXED(15,0) UNAL,
              2 F6       CHAR(20),
              2 LG       BIN FIXED(15,0) UNAL,
              2 VA CHAR(3992), VX(3992) CHAR(1) DEF VA;
         DCL 1 RDSATZ2,
              2 FR2      CHAR(2),
              2 SJAHR    PIC'99',
              2 SLTAG    PIC'999';
         DCL RD2 PIC'(7)9'  DEF RDSATZ2;
   DCL 1 RDSATZ1,
        2 F1 CHAR(2),
        2 EJAHR PIC'99',
        2 ELTAG PIC'999',
   RD1 PIC'(7)9' DEF RDSATZ1;
   DCL 1 SGUEL, 2 ERSTTAG CHAR(10),
        2 VONTAG PIC'99',2 VONMON PIC'99',2 VONJR PIC'99',
        2 BISTAG PIC'99',2 BISMON PIC'99',2 BISJR PIC'99',
        2 RXX CHAR(58);
         DCL (IZ,ICL,EH,WRT) BIN FIXED(31,0);
         DCL (MON(12),YT(31),VGLTAG,UEBTAG,VGLMON,SMON,
          STAG,VGLJR)      FIXED(2);
         DCL (CMINF(1440),CMING(1440),
          CUEBF(1440),CUEBG(1440),DTAGF,DTAGG,DMONF,DMONG)
                         BIN FIXED (15,0);
         DCL (CPUZHS,CSTUNDEF(24),CSTUNDEG(24),SUMSTF(24),
          SUMSTG(24),CTAGF(31),CTAGG(31),SUMF,SUMG,
          SUMTF,SUMTG,MWF,MWG)          BIN FIXED (31,0);
         DCL (SUF,SUG,ZSUF,ZSUG)  BIN FIXED (31,0);
         DCL WOCHTAG(7)  CHAR(10);
         DCL (WOTA(7),WTAG(31))     CHAR(2);
         DCL VGLJAHR FIXED(4);
         DCL (MP(1440),MPUEB(1440),VDMP(24))  BIN FIXED (15,0);
         DCL (MPSUST,MPSUTG,VDSUM)  FIXED(9,4);
         DCL (MPST(24),MPTAG(31))  FIXED(2);
         DCL XREIHE CHAR(132) INIT((132)'=') STATIC;
         DCL (CMAXF,DMAXF,MAXSTU(24),MAXTAG(31)) BIN FIXED(15,0);
   DCL (FTAG,FMON,FJR,LASTTAG,LASTMON,LASTJR) BIN FIXED INIT(0);
         DCL  MAXDW(24)  BIN FIXED(31,0);
   DCL (LTZW1,LTZW2) BIN FIXED INIT(0),(IND1,IND2,IANF) BIN FIXED(31);
  DCL IRF(24) INIT((24) 0);
         OPEN FILE(L1) PAGESIZE(70);
         OPEN FILE(L2) PAGESIZE(70);
         ON ENDFILE(SYSIN) GO TO ENDE;
   ON ENDFILE(GUELTIG) BEGIN;
   PUT SKIP LIST
   ('KEINE KARTE FUER G.BEREICH ODER FUER JAHRESWECHSEL(ERSTTAG)');
   GO TO ENDE; END;
 FIRST:  GET DATA (WRT,EH);
   IF WRT=0 × EH=0 THEN DO;
   PUT SKIP LIST('FALSCHE EINGABE VON WRT ODER EH (=0)');
   GO TO ENDE;
   END;
 ERSTDAT: PROC;
   FTAG=STAG; FMON=SMON; FJR=SJAHR;
   END ERSTDAT;
 LASTDAT: PROC;
   LASTTAG=STAG; LASTMON=SMON;LASTJR=SJAHR; END  LASTDAT;
         MON(1)=31;
         MON(3)=31;
         MON(4)=30;
         MON(5)=31;
         MON(6)=30;
         MON(7)=31;
         MON(8)=31;
         MON(9)=30;
         MON(10)=31;
         MON(11)=30;
         MON(12)=31;
         WOCHTAG(1)='MONTAG    ';
         WOCHTAG(2)='DIENSTAG  ';
         WOCHTAG(3)='MITTWOCH  ';
         WOCHTAG(4)='DONNERSTAG';
         WOCHTAG(5)='FREITAG   ';
         WOCHTAG(6)='SAMSTAG   ';
         WOCHTAG(7)='SONNTAG   ';
   IZEICH=0;
  WOCHE: PROC;  READ FILE(GUELTIG) INTO(SGUEL);
   DO I=1 TO 7;
   IF WOCHTAG(I)^= ERSTTAG THEN GO TO HAS1;
   IWT=I;
   GO TO HAS2;
 HAS1: END;
   PUT SKIP LIST('KEIN GUELTIGER WOCHENTAG');
   PUT DATA (WOCHTAG); GO TO ENDE;
 HAS2: END WOCHE;
   CALL WOCHE;
   IF MOD(VONJR,4)=0 THEN MON(2)=29;
   ELSE MON(2)=28;
   IF VONMON=1 THEN GO TO RI1;
   DO I=1 TO (VONMON-1);
   LTZW1=LTZW1+MON(I);
   END;
 RI1: LTZW1=LTZW1+VONTAG;
   IF MOD(BISJR,4)=0 THEN MON(2)=29;
               ELSE MON(2)=28;
   IF BISMON=1 THEN GO TO RI2;
   DO I=1 TO (BISMON-1);
   LTZW2=LTZW2+MON(I);
   END;
 RI2: LTZW2=LTZW2+BISTAG;
   ON SUBRG BEGIN;
   PUT SKIP LIST('UEBERLAUF EINES INDEX');
   GO TO ENDE;
   END;
         WOTA(1)='MO';
         WOTA(2)='DI';
         WOTA(3)='MI';
         WOTA(4)='DO';
         WOTA(5)='FR';
         WOTA(6)='SA';
         WOTA(7)='SO';
         DO I=1 TO 1440;
         CMINF(I)=0;
         CMING(I)=0;
         CUEBF(I)=0;
         CUEBG(I)=0;
         MP(I)=0;
         MPUEB(I)=0;
         END;
         DO I=1 TO 24;
         CSTUNDEF(I)=0;
         CSTUNDEG(I)=0;
         SUMSTF(I)=0;
         SUMSTG(I)=0;
         VDMP(I)=0;
         MAXDW(I)=0;
         END;
         DO I=1 TO 31;
         CTAGF(I)=0;
         CTAGG(I)=0;
         END;
         ISCHALT=1;
         K1=0;
         CMAXF=0;
         DMAXF=0;
         ICO=2;
         OPEN FILE(BEWERT) INPUT;
         ON ENDFILE(BEWERT) BEGIN;
   IF IZEICH=0 THEN GO TO ENDE;
   ELSE GO TO LETZTE;
   END;
 LESEN:  READ FILE(BEWERT) INTO(BSATZ);
         IF RECORD ^= 4 THEN GO TO LESEN;
         RD2=SDATUM;
   IF SLTAG+ 366*SJAHR > LTZW2 + 366*BISJR ×
      SLTAG+ 366*SJAHR < LTZW1 + 366*VONJR THEN GO TO LESEN;
   IZEICH=1;
         VGLJAHR=SJAHR+1900;
         IF MOD(VGLJAHR,4) =0. THEN MON(2)=29;
         ELSE MON(2)=28;
         LTAG=SLTAG;
         CALL KALTAG;
         STAG=KTAG;
         VGLTAG=STAG;
         IVTAG=ITAG;
         SMON=IMONAT;
         VGLMON=SMON;
         UEBTAG=STAG;
         VGLJR=SJAHR;
   CALL ERSTDAT;
         GO TO BERECH1;
 LESEN1: READ FILE(BEWERT) INTO(BSATZ);
         IF RECORD ^= 4 THEN GO TO LESEN1;
         RD2=SDATUM;
   IF SLTAG+ 366*SJAHR > LTZW2 + 366*BISJR ×
      SLTAG+ 366*SJAHR < LTZW1 + 366*VONJR THEN  GO TO LESEN1;
   IF VGLJR ^= SJAHR THEN CALL WOCHE;
   IF MOD(SJAHR,4)=0 THEN MON(2)=29;
   ELSE MON(2)=28;
         LTAG=SLTAG;
         CALL KALTAG;
         STAG=KTAG;
         SMON=IMONAT;
   CALL LASTDAT;
         IF VGLTAG ^= STAG THEN GO TO RECHNEN;
 BERECH1: CPUZHS=UNSPEC(SUBSTR(VA,LG,3));
         IF CPUZHS=0 THEN GO TO LESEN1;
         IF EZEITHS < SZEITHS THEN GO TO SONDFAL;
 D0:     IF SZEITHS =0 THEN SZEITHS=1;
         IF MOD(SZEITHS,6000) =0. THEN DO;
         IND1=SZEITHS/6000;
         GO TO D1;
         END;
         IANF=SZEITHS/6000;
         IND1=IANF+1;    /* MINUTENGRENZE DES STEPBEGINNS */
 D1:     IF EZEITHS=0 THEN EZEITHS=1;
         IND2=EZEITHS/6000;      /* MINUTENGRENZE DES STEPENDES */
         IF IND2 < IND1 THEN GO TO LESEN1;
         DO I=IND1 TO IND2;
         CMINF(I)=CMINF(I)+RF;
         CMING(I)=CMING(I)+RG;
         MP(I)=MP(I)+1;
         END;
         GO TO LESEN1;
 SONDFAL: RD1=EDATUM;
   IF ELTAG=SLTAG THEN GO TO LESEN1;
         IUEB=EZEITHS/6000;
         EZEITHS=1440*6000;
         IF IUEB < 1 THEN GO TO D0;
         DO I=1 TO IUEB;
         CUEBF(I)=CUEBF(I)+RF;
         CUEBG(I)=CUEBG(I)+RG;
         MPUEB(I)=MPUEB(I)+1;
         END;
         UEBTAG=STAG+1;
         GO TO D0;
 RECHNEN: SUF=0;
         SUG=0;
         ZSUF=0;
         ZSUG=0;
         MPSUST=0.;
         MPSUTG=0.;
         DO I=1 TO 1440;
         IF CMAXF < CMINF(I) THEN CMAXF=CMINF(I);
         SUF =SUF+CMINF(I);
         SUG =SUG+CMING(I);
         ZSUF=ZSUF+CMINF(I);
         ZSUG=ZSUG+CMING(I);
         MPSUST=MPSUST+MP(I);
         IF MOD(I,60) ^= 0. THEN GO TO GU2;
         L=I/60;
         MAXSTU(L)=CMAXF;
         IF DMAXF < CMAXF THEN DMAXF=CMAXF;
         CSTUNDEF(L)=SUF;
         CSTUNDEG(L)=SUG;
         SUF=0;
         SUG=0;
         MPSUTG=MPSUTG+MPSUST;      /* SUMME FUER TAGESMPF */
         MPSUST=MPSUST/60;
         IF MPSUST > 0. & MPSUST < 1.5 THEN MPST(L)=1;
         ELSE MPST(L)=MPSUST+0.5;       /* RUNDEN */
         MPSUST=0.;
         VDMP(L)=VDMP(L)+MPST(L);           /* FUER VERDICHTUNG */
         MAXDW(L)=MAXDW(L)+CMAXF;
         CMAXF=0;
         IF MOD(I,1440) ^= 0. THEN GO TO GU2;
         K=K1+1;
         CTAGF(K)=ZSUF;
         CTAGG(K)=ZSUG;
         MPSUTG=MPSUTG/1440;
         IF MPSUTG > 0. & MPSUTG < 1.5 THEN MPTAG(K)=1;
         ELSE MPTAG(K)=MPSUTG+0.5;
         YT(K)=VGLTAG;
         WTAG(K)=WOTA(IVTAG);
         MAXTAG(K)=DMAXF;
         DMAXF=0;
 GU2:    END;     /* ENDE DER TAGESBERECHNUNG */
         K1=K;
 /* TAGESTABELLE DER CORELOAD */
         DO I=1 TO 24;
         CSTUNDEF(I)=CSTUNDEF(I)/60;
         CSTUNDEG(I)=CSTUNDEG(I)/60;
   IF CSTUNDEF(I) > 0 THEN
   IRF(I)=IRF(I)+1;
         SUMSTF(I)=SUMSTF(I)+CSTUNDEF(I);
         SUMSTG(I)=SUMSTG(I)+CSTUNDEG(I);
         END;
         PUT FILE(L1) PAGE EDIT
         ('TAGESSTATISTIK DER CORELOAD VOM ',WOCHTAG(IVTAG),' DEN ',
         VGLTAG,'.',VGLMON,'.',VGLJR)
         (SKIP(3),A(32),A(10),A(5),(2)(P'99',A(1)),P'99');
         PUT FILE(L1) SKIP(2) EDIT
         ('MAN BETRACHTET DEN GEFORDERTEN BZW. GENUTZTEN KERNSPEICHER',
         ' AN ALLEN MINUTENINTERVALLEN,','SUMMIERT IHN PRO STUNDE AUF ',
         'UND MITTELT IHN UEBER DIESEM STUNDENINTERVALL !')
         (A(58),A(29),SKIP,A(28),A(48));
         PUT FILE(L1) SKIP(3) EDIT
         ('GEFORDERTER KERNSPEICHER IN KB') (A(30));
         PUT FILE(L1) SKIP(2);
         DO L=1 TO 24;
         PUT FILE(L1) EDIT
         ('× ',L,' UHR ',CSTUNDEF(L),' KB  ×')
         (A(2),P'Z9',A(5),P'B(4)Z9',A(6));
         IF MOD(L,4)=0. THEN PUT FILE(L1) SKIP(2);
         END;
         PUT FILE(L1) SKIP(4) EDIT
         ('GENUTZTER KERNSPEICHER IN KB') (A(30));
         PUT FILE(L1) SKIP(2);
         DO L=1 TO 24;
         PUT FILE(L1) EDIT
         ('× ',L,' UHR ',CSTUNDEG(L),' KB  ×')
         (A(2),P'Z9',A(5),P'B(4)Z9',A(6));
         IF MOD(L,4)=0. THEN PUT FILE(L1) SKIP(2);
         END;
  /* AUSGABE DER TAGESSTATISTIK UEBER DEN DRUCKER MIT ** UND ++ KOL.*/
         SUMF=0;
         SUMG=0;
         DO I=1 TO 24;
         SUMF=SUMF+CSTUNDEF(I);
         SUMG=SUMG+CSTUNDEG(I);
         END;
         DTAGF=SUMF/24;
         DTAGG=SUMG/24;
         ICO=ICO+1;
         PUT FILE(L2) PAGE EDIT ('C',ICO)(SKIP,X(124),A(1),P'99');
         PUT FILE(L2) EDIT
         ('     TAGESSTATISTIK DER CORELOAD VOM ',WOCHTAG(IVTAG),
          ' DEN ',VGLTAG,'.',VGLMON,'.',VGLJR,' (NUR BATCH)')
         (SKIP,A,A,A,(3)(P'99',A));
         PUT FILE(L2) SKIP(2) EDIT
         ('DER GEFORDERTE BZW. GENUTZTE KERNSPEICHER WIRD JEDE ',
          'MINUTE BETRACHTET UND UEBER  DEN STUNDENINTERVALLEN ',
          'GEMITTELT')
         (A(52),A(52),A(9));
         PUT FILE(L2) SKIP(2) EDIT
         ('--- MITTLERER GENUTZTER KERNSPEICHER =',DTAGG,' KB',
          '=== MITTLERER GEFORDERTER KERNSPEICHER =',DTAGF,' KB')
         (A(38),P'BZZZ9',A(3),X(5),A(40),P'BZZZ9',A(3));
         CALL SCHAU1;
         IF ISCHALT=0 THEN GO TO MONAT;
         DO I=1 TO 1440;
         CMINF(I)=CUEBF(I);
         CMING(I)=CUEBG(I);
         CUEBF(I)=0;
         CUEBG(I)=0;
         MP(I)=MPUEB(I);
         MPUEB(I)=0;
         END;
 SO:     IF UEBTAG=VGLTAG × UEBTAG=STAG THEN DO;
         UEBTAG=STAG;
         VGLTAG=STAG;
         IVTAG=ITAG;
         VGLMON=SMON;
         VGLJR=SJAHR;
         GO TO BERECH1;
         END;
         IF VGLMON ^= SMON THEN DO;
         UEBTAG=1;
         VGLMON=SMON;
         GO TO SO;
         END;
 /* DRUCKEN DER UEBERLAUFLISTE ,WENN STAG ^= FOLGETAG */
         PUT FILE(L2) PAGE EDIT
         ('FOLGENDER TAG BESTEHT NUR AUS UEBERLAEUFEN !')(A(50));
         VGLTAG=UEBTAG;
         GO TO RECHNEN;
 LETZTE: ISCHALT=0;
         GO TO RECHNEN;
 /* MONATSSTATISTIK LISTE */
 MONAT: ISCHALT=2;  PUT FILE(L1) PAGE EDIT
         ('MONATSSTATISTIK DER CORELOAD BIS ZUM ',
   ' VOM ',FTAG,'.',FMON,'.',FJR,' BIS ZUM ',
          LASTTAG,'.',LASTMON,'.',LASTJR,' PRO TAGESINTERVALL')
         (SKIP(3),A,A,(6)(P'99',A));
         PUT FILE(L1) SKIP(2) EDIT
         ('MAN BETRACHTET DEN GEFORDERTEN BZW. GENUTZTEN KERNSPEICHER',
          ' AN ALLEN MINUTENINTERVALLEN,','SUMMIERT IHN PRO TAG AUF ',
          'UND MITTELT IHN UEBER DIESEM TAGESINTERVALL !')
         (A(58),A(29),SKIP,A(25),A(45));
         PUT FILE(L1) SKIP(3) EDIT
         ('GEFORDERTER KERNSPEICHER IN KB')(A(30));
         PUT FILE(L1) SKIP(2);
         DO I=1 TO K1;
         CTAGF(I)=CTAGF(I)/1440;
         PUT FILE(L1) EDIT
         ('× ',WTAG(I),' DER ',YT(I),'. ',CTAGF(I),' KB ×')
         (A(2),A(2),A(5),P'Z9',A(2),P'(4)Z9',A(5));
         IF MOD(I,4)=0. THEN PUT FILE(L1) SKIP(2);
         END;
         PUT FILE(L1) SKIP(4) EDIT
         ('GENUTZTER KERNSPEICHER IN KB')(A(30));
         PUT FILE(L1) SKIP(2);
         DO I=1 TO K1;
         CTAGG(I)=CTAGG(I)/1440;
         PUT FILE(L1) EDIT
         ('× ',WTAG(I),' DER ',YT(I),'. ',CTAGG(I),' KB ×')
         (A(2),A(2),A(5),P'Z9',A(2),P'(4)Z9',A(5));
         IF MOD(I,4)=0. THEN PUT FILE(L1) SKIP(2);
         END;
 /* MONATSSTATISTTIK UEBER DEN DRUCKER MIT ** UND ++ KOLONNEN */
         SUMTF=0;
         SUMTG=0;
         DO I=1 TO K1;
         SUMTF=SUMTF+CTAGF(I);
         SUMTG=SUMTG+CTAGG(I);
         END;
         DMONF=SUMTF/K1;
         DMONG=SUMTG/K1;
         PUT FILE(L2) PAGE EDIT ('C02')(SKIP,X(124),A(3));
         PUT FILE(L2) EDIT
         ('MONATSSTATISTIK DER CORELOAD BIS ZUM ',
   ' VOM ',FTAG,'.',FMON,'.',FJR,' BIS ZUM ',
     LASTTAG,'.',LASTMON,'.',LASTJR,' PRO TAGESINTERVALL (NUR BATCH)')
         (SKIP,A,A,(6)(P'99',A));
         PUT FILE(L2) SKIP(2) EDIT
         ('DER GEFORDERTE BZW. GENUTZTE KERNSPEICHER WIRD JEDE ',
         'MINUTE BETRACHTET UND UEBER DEN TAGESINTERVALLEN ',
         'GEMITTELT !')
         (A(52),A(49),A(11));
         PUT FILE(L2) SKIP EDIT
         ('--- MITTLERER GENUTZTER KERNSPEICHER =',DMONG,' KB',
          '=== MITTLERER GEFORDERTER KERNSPEICHER =',DMONF,' KB')
         (A(38),P'BZZZ9',A(3),X(5),A(40),P'BZZZ9',A(3));
         PUT FILE(L2) SKIP(2);
         MAXX=4*K1+12;
         DO I=1 TO MAXX;
         PUT FILE(L2) EDIT ('X')(A(1));
         END;
         PUT FILE(L2) SKIP EDIT
         ('X MK(10)',((MAXTAG(I)+5)/10 DO I=1 TO K1),'X')
         (A,(K1)(P'ZZZ9'),COL(MAXX),A);
         DO I=1 TO K1;
         END;
         IF MAXTAG(I) > WRT THEN MAXTAG(I)=WRT;
         DO I=22 TO (MAXX-1);
         PUT FILE(L2) EDIT (' ')(A(1));
         END;
         PUT FILE(L2) EDIT ('X')(A(1));
         ICL=WRT;       /* MAXIMALER ORDINATENWERT IN KB */
         IZ=WRT-EH*0.5;
 SAB:    PUT FILE(L2) SKIP EDIT
         ('X',ICL,' I')(A(1),P'BZZZ9',A(2));
 /* -=-= WENN DMONF=DMONG */
         IF (DMONF>=IZ & DMONF<(IZ+EH))&(DMONG>=IZ & DMONG<(IZ+EH))
         THEN DO;
         DO I=1 TO K1;
         PUT FILE(L2) EDIT ('-=')(A(2));
         IF MAXTAG(I) >= IZ & MAXTAG(I) < (IZ+EH) THEN DO;
         PUT FILE(L2) EDIT ('MK') (A(2));
         GO TO SR1;
         END;
         IF CTAGG(I)>=IZ THEN DO;
         PUT FILE(L2) EDIT ('**')(A(2));
         GO TO SR1;
         END;
         IF CTAGF(I) >= IZ THEN
         PUT FILE(L2) EDIT ('++') (A(2));
         ELSE PUT FILE (L2) EDIT ('-=')(A(2));
 SR1:    END;
         GO TO SOS;
         END;
 /* === WENN MITTELWERT VON RF */
         IF (DMONF >= IZ & DMONF < (IZ+EH)) THEN DO;
         DO I=1 TO K1;
         PUT FILE(L2) EDIT ('==')(A(2));
         IF MAXTAG(I) >= IZ & MAXTAG(I) < (IZ+EH) THEN DO;
         PUT FILE(L2) EDIT ('MK') (A(2));
         GO TO SR2;
         END;
         IF CTAGG(I) >= IZ THEN DO;
         PUT FILE(L2) EDIT ('**')(A(2));
         GO TO SR2;
         END;
         IF CTAGF(I) >= IZ THEN
         PUT FILE(L2) EDIT ('++')(A(2));
         ELSE PUT FILE(L2) EDIT ('==')(A(2));
 SR2:    END;
         GO TO SOS;
         END;
 /* --- WENN MITTELWERT VON RG */
         IF DMONG >= IZ & DMONG < (IZ+EH) THEN DO;
         DO I=1 TO K1;
         PUT FILE(L2) EDIT ('--')(A(2));
         IF MAXTAG(I) >= IZ & MAXTAG(I) < (IZ+EH) THEN DO;
         PUT FILE(L2) EDIT ('MK') (A(2));
         GO TO SR3;
         END;
         IF CTAGG(I) >= IZ THEN DO;
         PUT FILE(L2) EDIT ('**')(A(2));
         GO TO SR3;
         END;
         IF CTAGF(I) >= IZ THEN
         PUT FILE(L2) EDIT ('++') (A(2));
         ELSE PUT FILE(L2) EDIT ('--')(A(2));
 SR3:    END;
         GO TO SOS;
         END;
 /* NORMALZEILE */
         DO I=1 TO K1;
         PUT FILE(L2) EDIT ('  ') (A(2));
         IF MAXTAG(I) >= IZ & MAXTAG(I) < (IZ+EH) THEN DO;
         PUT FILE(L2) EDIT ('MK') (A(2));
         GO TO SR4;
         END;
         IF CTAGG(I) >= IZ THEN DO;
         PUT FILE(L2) EDIT ('**') (A(2));
         GO TO SR4;
         END;
     IF CTAGF(I) >= IZ THEN DO;
         PUT FILE(L2) EDIT ('++')(A(2));
         GO TO SR4;
         END;
              PUT FILE(L2) EDIT ('  ') (A(2));
 SR4:    END;
 SOS:    PUT FILE(L2) EDIT ('   X')(A(4));
         IZ=IZ-EH;
         ICL=ICL-EH;
         IF ICL > 0 THEN GO TO SAB;
         PUT FILE(L2) SKIP EDIT ('X','I')(A(1),X(6),A(1));
         DO I=1 TO K1;
         PUT FILE(L2) EDIT ('--II')(A(4));
         END;
         PUT FILE(L2) EDIT ('-->X')(A(4));
         PUT FILE(L2) SKIP EDIT ('X MLPF  ') (A(8));
         DO I=1 TO K1;
         PUT FILE(L2) EDIT (MPTAG(I)) (X(2),P'Z9');
         END;
         PUT FILE(L2) EDIT ('   X') (A(4));
         PUT FILE(L2) SKIP EDIT ('X DATUM ')(A(8));
         DO I=1 TO K1;
         PUT FILE(L2) EDIT (YT(I)) (X(2),P'Z9');
         END;
         PUT FILE(L2) EDIT ('   X') (A(4));
         PUT FILE(L2) SKIP EDIT ('X')(A(8));
         DO I=1 TO K1;
         PUT FILE(L2) EDIT (WTAG(I))(X(2),A(2));
         END;
         PUT FILE(L2) EDIT ('   X')(A(4));
         PUT FILE(L2) SKIP EDIT ('X')(A(1));
         DO I=2 TO (MAXX-1);
         PUT FILE(L2) EDIT (' ')(A(1));
         END;
         PUT FILE(L2) EDIT ('X')(A(1));
         PUT FILE(L2) SKIP EDIT
         ('X ** GENUTZTER   KERNSPEICHER IN KB')(A(35));
         DO I=36 TO (MAXX-15);
         PUT FILE(L2) EDIT (' ')(A(1));
         END;
         PUT FILE(L2) EDIT ('ZEIT (TAGE)   X')(A(15));
         PUT FILE(L2) SKIP EDIT
         ('X ++ GEFORDERTER KERNSPEICHER IN KB')(A(35));
         PUT FILE(L2) EDIT
         ('MK MAX.GEFORD. KERNSPEICHER')(X(3),A(27));
         DO I=66 TO (MAXX-1);
         PUT FILE(L2) EDIT (' ')(A(1));
         END;
         PUT FILE(L2) EDIT ('X') (A(1));
         PUT FILE(L2) SKIP;
         DO I=1 TO MAXX;
         PUT FILE(L2) EDIT ('X')(A(1));
         END;
         MWF=0;
         MWG=0;
 /* AUF EINEN TAG KOMPRIMIERTE MONATSSTATISTIK */
         DO I=1 TO 24;
   IF IRF(I) ^= 0 THEN DO;
         MAXDW(I)=MAXDW(I)/IRF(I);
         SUMSTF(I)=SUMSTF(I)/IRF(I);
         SUMSTG(I)=SUMSTG(I)/IRF(I);
         MWF=MWF+SUMSTF(I);
         MWG=MWG+SUMSTG(I);
   END;
         END;
         MWF=MWF/24;
         MWG=MWG/24;
         PUT FILE(L2) PAGE EDIT ('C01')(SKIP,X(124),A(3));
         PUT FILE(L2) EDIT
         ('MONATSSTATISTIK DER CORELOAD VERDICHTET AUF EINEN TAG',
   ' VOM ',FTAG,'.',FMON,'.',FJR,
          ' BIS ZUM ',LASTTAG,'.',LASTMON,'.',LASTJR,
          ' IN STUNDENINTERVALLEN  (NUR BATCH)')
         (SKIP,A,(6)(A,P'99'),A);
         PUT FILE(L2) SKIP(2) EDIT
         ('--- MITTLERER GENUTZTER KERNSPEICHER =',MWG,' KB',
          '=== MITTLERER GEFORDERTER KERNSPEICHER =',MWF,' KB')
         (A(38),P'BZZZ9',A(3),X(5),A(40),P'BZZZ9',A(3));
         DTAGF=MWF;
         DTAGG=MWG;
         DO I=1 TO 24;
         MAXSTU(I)=MAXDW(I);
         CSTUNDEF(I)=SUMSTF(I);
         CSTUNDEG(I)=SUMSTG(I);
   IF IRF(I)>0 THEN VDSUM=VDMP(I)/IRF(I);
   ELSE VDSUM=0;
         IF VDSUM > 0. & VDSUM < 1.5 THEN MPST(I)=1;
         ELSE MPST(I)=VDSUM+0.5;
         END;
         CALL SCHAU1;
         CLOSE FILE(BEWERT);
         GO TO FIRST;
 ENDE:   CLOSE FILE(L1);
         CLOSE FILE(L2);
 /* ERRECHNEN DES KALENDERTAGES UND WOCHENTAGES */
 KALTAG: PROCEDURE;
         IZAE2=0;
         IF LTAG <= 366 THEN GO TO HIER3;
         IF MON(2)=29 THEN LTAG=366;
         ELSE LTAG=365;
 HIER3:  DO I=1 TO 12;
         IZAE1=IZAE2;
         IZAE2=IZAE2+MON(I);
         IMONAT=I;
         IF LTAG <= IZAE2 THEN GO TO DRAU;
         END;
 DRAU:   KTAG=LTAG-IZAE1;
         ITAG=MOD((LTAG+IWT-1),7);
         IF ITAG=0 THEN ITAG=7;
         END KALTAG;
 SCHAU1: PROCEDURE;
         PUT FILE(L2) SKIP EDIT (XREIHE) (A(132));
   PUT FILE(L2)  EDIT
   ('X MK    ',(MAXSTU(I) DO I=1 TO 24),'   X',
    'X ++    ',(CSTUNDEF(I) DO I=1 TO 24),'   X')
   ((2)(SKIP,A,(24)(P'ZZZZ9'),A));
   DO I=1 TO 24;
   IF MAXSTU(I) > WRT THEN MAXSTU(I)=WRT;
   END;
         PUT FILE(L2) SKIP EDIT ('X','CORELOAD (KB)','X')
         (A(1),X(7),A(13),X(110),A(1));
         ICL=WRT;
         IZ=WRT-EH*0.5;
 OB:     PUT FILE(L2) SKIP EDIT
         ('X',ICL,' I')(A(1),P'BZZZ9',A(2));
 /* -=- WENN MITTELWERT VON RF UND RG ZUSAMMENFALLEN */
         IF (DTAGF>=IZ & DTAGF<(IZ+EH))&(DTAGG>=IZ & DTAGG<(IZ+EH))
         THEN DO;
         DO I=1 TO 24;
         PUT FILE(L2) EDIT ('-=-')(A(3));
         IF MAXSTU(I) >= IZ & MAXSTU(I) < (IZ+EH) THEN DO;
         PUT FILE(L2) EDIT ('MK') (A(2));
         GO TO DR1;
         END;
         IF CSTUNDEG(I)>=IZ THEN DO;
         PUT FILE(L2) EDIT ('**')(A(2));
         GO TO DR1;
         END;
         IF CSTUNDEF(I) >= IZ THEN
         PUT FILE(L2) EDIT ('++') (A(2));
         ELSE PUT FILE(L2) EDIT ('=-') (A(2));
 DR1:    END;
         GO TO DOS;
         END;
 /* === WENN MITTELWERT VON RF */
         IF (DTAGF >= IZ & DTAGF < (IZ+EH)) THEN DO;
         DO I=1 TO 24;
         PUT FILE(L2) EDIT ('===') (A(3));
         IF MAXSTU(I) >= IZ & MAXSTU(I) < (IZ+EH) THEN DO;
         PUT FILE(L2) EDIT ('MK') (A(2));
         GO TO DR2;
         END;
         IF CSTUNDEG(I) >= IZ THEN DO;
         PUT FILE(L2) EDIT ('**') (A(2));
         GO TO DR2;
         END;
         IF CSTUNDEF(I) >= IZ THEN
         PUT FILE(L2) EDIT ('++') (A(2));
         ELSE PUT FILE(L2) EDIT ('==') (A(2));
 DR2:    END;
         GO TO DOS;
         END;
 /* --- WENN MITTELWERT VON RG */
         IF (DTAGG >= IZ & DTAGG < (IZ+EH)) THEN DO;
         DO I=1 TO 24;
         PUT FILE(L2) EDIT ('---') (A(3));
         IF MAXSTU(I) >= IZ & MAXSTU(I) < (IZ+EH) THEN DO;
         PUT FILE(L2) EDIT ('MK') (A(2));
         GO TO DR3;
         END;
         IF CSTUNDEG(I) >= IZ THEN DO;
         PUT FILE(L2) EDIT ('**') (A(2));
         GO TO DR3;
         END;
         IF CSTUNDEF(I) >= IZ THEN
         PUT FILE(L2) EDIT ('++') (A(2));
         ELSE PUT FILE(L2) EDIT ('--') (A(2));
 DR3:    END;
         GO TO DOS;
         END;
 /* NORMALZEILE */
         DO I=1 TO 24;
         PUT FILE(L2) EDIT ('   ') (A(3));
         IF MAXSTU(I) >= IZ & MAXSTU(I) < (IZ+EH) THEN DO;
         PUT FILE(L2) EDIT ('MK') (A(2));
         GO TO DR4;
         END;
         IF CSTUNDEG(I) >= IZ THEN DO;
         PUT FILE(L2) EDIT ('**') (A(2));
         GO TO DR4;
         END;
     IF CSTUNDEF(I) >= IZ THEN DO;
         PUT FILE(L2) EDIT ('++') (A(2));
         GO TO DR4;
         END;
              PUT FILE(L2) EDIT ('  ') (A(2));
 DR4:    END;
 DOS:    PUT FILE(L2) EDIT ('   X') (A(4));
         IZ=IZ-EH;
         ICL=ICL-EH;
         IF ICL > 0 THEN GO TO OB;
         PUT FILE(L2) SKIP EDIT ('X','I') (A(1),X(6),A(1));
         DO I=1 TO 24;
         PUT FILE(L2) EDIT ('---II') (A(5));
         END;
         PUT FILE (L2) EDIT ('-->X') (A(4));
   IF ISCHALT=2 THEN DO;
   PUT SKIP FILE(L2) EDIT
   ('X ASTD  ',(IRF(I) DO I=1 TO 24),'   X')
   (A,(24)(P'ZZZZ9'),A);
   END;
         PUT FILE(L2) SKIP EDIT ('X MLPF  ') (A(8));
         DO I=1 TO 24;
         PUT FILE(L2) EDIT (MPST(I)) (X(3),P'Z9');
         END;
         PUT FILE(L2) EDIT ('   X') (A(4));
         PUT FILE(L2) SKIP EDIT ('X','0') (A(1),X(6),A(1));
         DO I=1 TO 24;
         PUT FILE(L2) EDIT (I) (X(3),P'Z9');
         END;
         PUT FILE(L2) EDIT ('   X') (A(4));
         PUT FILE(L2) SKIP EDIT ('X','X') (A(1),X(130),A(1));
         PUT FILE(L2) SKIP EDIT
         ('X ** GENUTZTER   KERNSPEICHER IN KB','TAGESZEIT (STUNDEN)',
          '   X')
         (A(35),X(74),A(19),A(4));
         PUT FILE (L2) SKIP EDIT
         ('X ++ GEFORDERTER KERNSPEICHER IN KB','X')
         (A(35),X(96),A(1));
         PUT FILE(L2) SKIP EDIT
         ('X MK MAX.GEFORD. KERNSPEICHER IN KB','X')
         (A(35),X(96),A(1));
         PUT FILE(L2) SKIP EDIT (XREIHE) (A(132));
         END SCHAU1;
         END CORESTA;
