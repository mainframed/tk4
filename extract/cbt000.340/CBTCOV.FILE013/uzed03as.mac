PDV032   CSECT
         REGEQ
         PRINT NOGEN
         SAVE  (14,12),,*
         BALR  R2,0
         USING *,R2
         MVC   8(4,R13),=A(SAVE)
         ST    R13,SAVE+4
         BAL   R13,BEGIN
SAVE     DC    18F'0'
         LTORG
*
***********************************************************************
*                                                                     *
* KURZBESCHREIBUNG:                                                   *
*                                                                     *
* MIT BELIEBIG VIELEN DD-KARTEN WERDEN IS-FILES DEFINIERT. ZU JEDEM   *
* IS-FILE WIRD DER FORMAT 2 DSCB EDITIERT.                            *
* DER DD-NAME IST FREI, MINDESTENS DSNAME UND DISP M<SSEN ANGEGEBEN   *
* SEIN.                                                               *
* MIT EXTRACT KOMMT MAN INS TIOT. MIT DEM DDNAMEN VOM TIOT WIRD VIA   *
* RDJFCB DER DSNAME + SERIAL GEFUNDEN. OBTAIN MIT DSNAME + SERIAL     *
* BRINGT DEN FMT1 DSCB, WELCHER CCHHR DES N%CHSTEN DSCB ENTH%LT.      *
* OBTAIN MIT CCHHR BRINGT DANN DEN ZU EDITIERENDEN FMT2 DSCB.         *
*                                                                     *
***********************************************************************
         EJECT
*      ************************************************************
*      *                                                          *
*      * -EXTRACT- BRINGT DIE ADRESSE VOM TIOT (1 PRO STEP) NACH  *
*      * 'TIOTAREA'. PRO DD-KARTE IST IM TIOT EIN ENTRY, WELCHES  *
*      *  U.A.DEN DDNAMEN ENTH%LT. DER DDNAME WIRD F<R -RDJFCB-   *
*      * BEN@TIGT.                                                *
*      *                                                          *
*      ************************************************************
         SPACE 1
BEGIN    CALL  UZED10A,(DATUM)
         OPEN  (OUTPUT,(OUTPUT))
         EXTRACT TIOTAREA,'S',FIELDS=TIOT
         L     R3,TIOTAREA              ADR.VOM TIOT INS R3
         LA    R3,24(,R3)               ADR.OF FIRST DD-ENTRY
SEARCHDD XR    R4,R4                    CLEAR REG.
         IC    R4,0(R3)                 INSERT LENGTH OF ENTRY
         LTR   R4,R4
         BZ    RETURN                   ZERO = LAST ENTRY REACHED
         SPACE 1
         MVC   DDNAME,4(R3)             INSERT DDNAME FROM TIOT
         AR    R3,R4                    ADD LENGTH OF THIS ENTRY
*                                         = POINT TO NEXT ENTRY
         CLC   DDNAME,=C'STEPLIB '
         BE    SEARCHDD
         CLC   DDNAME,=C'OUTPUT  '
         BE    SEARCHDD
         CLC   DDNAME,=C'SYSUDUMP'
         BE    SEARCHDD
         CLC   DDNAME,=C'JOBLIB  '
         BE    SEARCHDD
         CLC   DDNAME,=C'JOBCAT  '
         BE    SEARCHDD
         CLC   DDNAME,=C'STEPCAT '
         BE    SEARCHDD
         CLC   DDNAME,=C'SYSABEND'
         BE    SEARCHDD
         CLC   DDNAME(4),=C'SYS0'
         BE    SEARCHDD
*
         SPACE 3
*      ************************************************************
*      *                                                          *
*      * MIT DER RDJFCB-MACRO WIRD DER JOB FILE CONTROL BLOCK     *
*      * (1 PRO DDNAME) INS FELD JFCBAREA GELESEN. IM JFCB STEHEN *
*      * DSNAME UND SERIALNUMMER, WELCHE F<R DIE 1.OBTAIN-MACRO   *
*      * BEN@TIGT WERDEN.                                         *
*      *                                                          *
*      ************************************************************
         MVC   INPUT+40(8),DDNAME  INSERT DDNAME IN DCB
         RDJFCB (INPUT)
         MVC   DSNAME,JFCBAREA     DSNAME FROM JFCB
         MVC   VOLUME,JFCBAREA+118 SERIALNR. FROM JFCB
         SPACE 3
         SPACE 1
*      ***********************************************************
*      *                                                         *
*      * -OBTAIN- BRINGT MIT 'SEARCH' DEN FMT1 DSCB NACH WORKA:  *
*      * BYTE  1- 96  = AB DISPL.44 DATENTEIL VOM FMT1 DSCB      *
*      *     (92- 96) = CCHHR OF NEXT DSCB OR 0                  *
*      *      97-101  = CCHHR OF THIS DSCB                       *
*      *     102-148  = F<R MACRO SELBST.                        *
*      *                                                         *
*      ***********************************************************
         SPACE 1
         OBTAIN LIST2
         LR    R7,R15
         B     BRTAB2(R7)
BRTAB2   B     L001                     RETURNCODE IS 0
         B     ERR1                                   4
         B     ERR2                                   8
         B     ERR3                                  12
         B     ERR4                                  16
         SPACE 1
L001     CLC   WORKA+91(5),=X'0000000000'
         BE    NOFMT2                   NO 2.DSCB = KEIN IS-FILE
         MVC   OPTION,WORKA+41          SAVE OPTION CODE
         MVC   CCHHR,WORKA+91           SAVE CCHHR OF NEXT DSCB
         SPACE 3
*      *************************************************************
*      *                                                           *
*      * -OBTAIN- BRINGT MIT 'SEEK' DEN N%CHSTEN (FMT2 ODER FMT3)  *
*      * DSCB NACH WORKA.                                          *
*      * BYTE 1-140 = GANZER DSCB AB DISPL.0                       *
*      *     (45)   = IDENTIFIER (SOLLTE F2 SEIN)                  *
*      *     141-148= F<R MACRO SELBST.                            *
*      *                                                           *
*      *************************************************************
         SPACE 1
         OBTAIN LIST3
         LR    R7,R15
         B     BRTAB3(R7)
BRTAB3   B     L002
         B     ERR1A
         B     ERR2A
         B     ERR3A
         B     ERR4A
         B     ERR5A
         SPACE 1
L002     CLI   WORKA+44,X'F2'           IS IT A FMT2 DSCB?
         BNE   NOFMT2
         SPACE 3
*      ************************
*      *                      *
*      * BEGINN VERARBEITUNG  *
*      *                      *
*      ************************
         SPACE 1
         CLC   ZZEL,=P'62'              OB SEITENWECHSEL
         BNH   L003
         BAL   R11,SEITE                SEITENWECHSEL-ROUTINE
L003     EQU   *
         MVC   PDSN,DSNAME              DATA SET NAME
         MVC   PPRCTR,SCHAB2
         MVC   FULLW,WORKA+67           ANZ RECORDS IN PRIME AREA (HEX)
         L     R5,FULLW                 UMLADEN INS REGISTER
         CVD   R5,DW                    HEX TO DECIMAL
         ED    PPRCTR,DW+4              EDIT
         ZAP   ZFELD,DW+4(4)            SAVE ANZ.
         MVC   POVRCT,SCHAB3
         MVC   FULLW(2),=X'0000'        STELLE 1/2 AUF 0, WEIL FOLGENDE
*                                       HEX-ZAHL NUR 2 BYTES LANG IST
         MVC   FULLW+2(2),WORKA+128     ANZ RECORDS IN OFLOW AREA (HEX)
         L     R5,FULLW                 UMLADEN INS REG
         CVD   R5,DW                    HEX TO DECIMAL
         ED    POVRCT,DW+5              EDIT
         SPACE 2
         CP    ZFELD,=P'0'              OB KEINE RECDS IN PRIME AREA
         BE    HUNDRT
         CP    DW+5(3),=P'0'            OB KEINE RECDS IN OFLOW AREA
         BE    NULL
         SPACE 2
         AP    ZFELD,DW+5(3)            TOTAL PRIME + OFLOW REC
         ZAP   RFELD,DW+5(3)            ANZ.OVERFLOW RECORDS
         MP    RFELD,=P'100000'         OVERFLOW X 100'000
         DP    RFELD,ZFELD              OFLOW : TOT.PRIME/OFLOW
         AP    RFELD(7),=P'5'           3.KOMMASTELLE RUNDEN
         MVO   RFELD(3),RFELD+4(2)
         OI    RFELD+2,X'0F'            VORZEICHEN EINSETZEN
         B     L004
         SPACE 2
HUNDRT   ZAP   RFELD(3),=P'100'         100% IM OVERFLOW
         B     L004
         SPACE 2
NULL     ZAP   RFELD(3),=P'0'           NICHTS IM OVERFLOW
         SPACE 2
L004     MVC   PPERC,SCHAB4
         ED    PPERC,RFELD              % RECORDS IM OVERFLOW
         MVC   PSIGN,=C';'              = '%'
         SPACE 2
         MVC   FULLW(3),=X'000000'
         MVC   FULLW+3(1),WORKA+52      ANZ.TRK PRO CYL F<R CYLOFL(HEX)
         L     R5,FULLW
         CVD   R5,DW                    HEX TO DECIMAL
         MVC   PCYLOV+1(3),SCHAB3+4
         ED    PCYLOV,DW+6
         SPACE 2
         MVC   FULLW(2),=X'0000'
         MVC   FULLW+2(2),WORKA+126     ANZ.VERBLEIBENDE TRKS IM
*                                       OVERFLOW-BEREICH (HEX)
         L     R5,FULLW
         CVD   R5,DW
         MVC   PRORG2,SCHAB3
         ED    PRORG2,DW+5
         SPACE 2
         MVC   FULLW(2),=X'0000'
         MVC   FULLW+2(2),WORKA+130     ANZ.VOLLE CYLOFL-BEREICHE(HEX)
         L     R5,FULLW
         CVD   R5,DW
         MVC   PRORG1,SCHAB3
         ED    PRORG1,DW+5
         SPACE 2
         MVO   PSTIND(2),WORKA+71(1)    STAT.INIDC.LINKES HALBBYTE
         MVC   PSTIND+1(1),WORKA+71     STATUS INDICATOR RECHT.HALBBYT
         MVZ   PSTIND,=X'F0F0'          VORZEICEHN AUF -F-
         SPACE 2
         MVO   POPTCD(2),OPTION(1)      OPTCD LINKES HALBBYTE
         MVC   POPTCD+1(1),OPTION       OPTCD RECHTES HALBBYTE
         MVZ   POPTCD,=X'F0F0'          VORZEICHEN AUF -F-
         SPACE 2
         BAL   R11,DRUK
         B     SEARCHDD
         SPACE 3
NOFMT2   EQU   *
         MVC   WTO1+8(44),DSNAME
WTO1     WTO   '                                             HAS NO FOR*
               MAT 2 DSCB',ROUTCDE=11
         B     SEARCHDD
         SPACE 2
ERR1     MVC   E1+8(6),VOLUME
E1       WTO   '      : REQUIRED VOLUME WAS NOT MOUNTED',ROUTCDE=11
         B     SEARCHDD
         SPACE 2
ERR2     MVC   E2+8(6),VOLUME
         MVC   E2+48(44),DSNAME
E2       WTO   '      : ON THIS VOLUME NO FMT1 DSCB FOR                *
                                            ',ROUTCDE=11
         B     SEARCHDD
         SPACE 2
ERR3     MVC   E3+8(6),VOLUME
E3       WTO   '      : PERMANENT I/O ERROR',ROUTCDE=11
         ABEND 3,DUMP
         SPACE 2
ERR4     WTO   'INVALID WORKA-POINTER',ROUTCDE=11
         ABEND 1,DUMP
         SPACE 2
ERR1A    MVC   E1A+8(6),VOLUME
E1A      WTO   '      : REQUIRED VOLUME WAS NOT MOUNTED 2',ROUTCDE=11
         B     SEARCHDD
         SPACE 2
ERR2A    MVC   E2A+8(6),VOLUME
E2A      WTO   '      : NO VALID FMT4 DSCB ON VOLUME',ROUTCDE=11
         ABEND 2,DUMP
         SPACE 2
ERR3A    MVC   E3A+8(6),VOLUME
E3A      WTO   '      : PERMANENT I/O ERROR',ROUTCDE=11
         ABEND 4,DUMP
         SPACE 2
ERR4A    WTO   'INVALID WORKA-POINTER',ROUTCDE=11
         ABEND 5,DUMP
         SPACE 2
ERR5A    MVC   FULLW(2),=X'0000'
         MVC   FULLW+2(2),CCHHR
         L     R5,FULLW
         CVD   R5,DW
         MVC   CHREDIT(4),=X'40202020'
         ED    CHREDIT(4),DW+6
         MVI   CHREDIT,C'C'
         MVC   FULLW+2(2),CCHHR+2
         L     R5,FULLW
         CVD   R5,DW
         MVC   CHREDIT+4(4),=X'40202020'
         ED    CHREDIT+4(4),DW+6
         MVI   CHREDIT+4,C'T'
         MVI   FULLW+2,X'00'
         MVC   FULLW+3(1),CCHHR+4
         L     R5,FULLW
         CVD   R5,DW
         MVC   CHREDIT+8(4),=X'40202020'
         ED    CHREDIT+8(4),DW+6
         MVI   CHREDIT+8,C'R'
         MVC   E5A+8(12),CHREDIT
E5A      WTO   '            : NOT WITHIN BOUNDARIES OF VTOC EXTENT',   *
               ROUTCDE=11
         ABEND 6,DUMP
         SPACE 2
SEITE    EQU   *
         MVI   CTL,X'8B'                KANAL 1 DIREKT
         LR    R6,R11                   SAVE BALREG
         BAL   R11,DRUCK
         AP    SZEL,=P'1'
         ZAP   ZZEL,=P'0'
         MVI   CTL,X'19'                SPACE 3 AFTER
         AP    ZZEL,=P'2'
         MVC   OUT(75),=C'SYSTEM INFORMATION:     I S A M - D A T A   S*
                E T S      FORMAT 2 DSCB EDIT'
         MVC   OUT+90(3),=C'VOM'
         MVC   OUT+94(8),DATUM
         MVC   OUT+123(5),=C'SEITE'
         MVC   OUT+129(3),SCHAB3+4
         ED    OUT+128(4),SZEL
         BAL   R11,DRUCK
         MVC   OUT(57),=C'NOTE:  EIN FILE MIT MEHR ALS 5; ALLER RECORDS*
                IM OVERFLOW'
         BAL   R11,DRUK
         MVC   OUT+7(42),=C'SOLLTE IM NORMALFALL REORGANISIERT WERDEN.'
         MVI   CTL,X'11'                SPACE 2 AFTER
         BAL   R11,DRUCK
         MVC   OUT(13),=C'DATA SET NAME'
         MVC   OUT+49(83),=C'PRIME     OFLOW     ; IM     TRK PER CYL  *
               FREE TRKS/   FULL CYLOFL   STATUS  OPTION'
         BAL   R11,DRUK
         MVC   OUT+47(84),=C'RECORDS   RECORDS   OVERFLOW    FOR CYLOFL*
                 INDEP.OFL.      AREAS      INDIC.  CODES'
         MVI   CTL,X'11'
         BAL   R11,DRUCK
         LR    R11,R6                   RESTORE BALREG
         BR    R11
         SPACE 4
DRUK     EQU   *
         MVI   CTL,X'09'                SPACE 1 AFTER
         SPACE 1
DRUCK    PUT   OUTPUT,ZEILE
         AP    ZZEL,=P'1'
         MVI   OUT,X'40'                ZEILE L@SCHEN
         MVC   OUT+1(131),OUT
         BR    R11
         SPACE 4
RETURN   EQU   *
         CLOSE (OUTPUT)
         L     R13,SAVE+4
         XR    R15,R15
         RETURN (14,12),RC=(15)
         EJECT
*        ***************************
*        *                         *
*        * D E F I N I T I O N E N *
*        *                         *
*        ***************************
         SPACE 2
INPUT    DCB   DDNAME=INPUT,                                           *
               DSORG=PS,                                               *
               MACRF=(GL),                                             *
               EODAD=RETURN,                                           *
               EXLST=LIST1
         SPACE 2
OUTPUT   DCB   DDNAME=OUTPUT,                                          *
               DSORG=PS,                                               *
               MACRF=(PM),                                             *
               RECFM=FBM,                                              *
               LRECL=133,                                              *
               BLKSIZE=665
         SPACE 2
LIST1    DC    AL1(128+7),AL3(JFCBAREA)  EXIT-LISTE FUER RDJFCB
         SPACE 2
LIST2    CAMLST SEARCH,DSNAME,VOLUME,WORKA
         SPACE 2
LIST3    CAMLST SEEK,CCHHR,VOLUME,WORKA
         SPACE 2
         DS    0F
JFCBAREA DS    CL176
WORKA    DS    0D
         DS    CL148
         SPACE 2
DDNAME   DS    CL8
DSNAME   DC    CL44' '
VOLUME   DS    CL6
CCHHR    DS    CL5
         SPACE 2
DW       DS    D
FULLW    DS    F
TIOTAREA DC    F'0'
DATUM    DS    CL8
SZEL     DC    PL2'0'
ZZEL     DC    PL2'70'
OPTION   DS    CL1
OFFSET   DS    CL2
ZFELD    DS    CL4
RFELD    DS    CL11
SCHAB1   DC    XL8'402020206B202120'
SCHAB2   DC    XL9'40202020206B202120'
SCHAB3   DC    XL7'4020206B202120'
SCHAB4   DC    XL7'402021206B2020'
CHREDIT  DS    CL12
ZEILE    DS    0CL133
CTL      DS    CL1                 CONTROL CHARACTER
OUT      DS    CL132
*
         ORG   OUT
*
PDSN     DS    CL44                DATA SET NAME
         DS    CL1
PPRCTR   DS    CL9                 PRIME RECORDS
         DS    CL3
POVRCT   DS    CL7                 OVERFLOW RECORDS
         DS    CL1
PPERC    DS    CL7                 PROZENT IM OVERFLOW
PSIGN    DS    CL1
         DS    CL9
PCYLOV   DS    CL4                 TRKS PRO CYL F<R CYLOFL
         DS    CL7
PRORG2   DS    CL7                 FREE TRKS IM INDEPENDENT OVERFLOW
         DS    CL5
PRORG1   DS    CL7                 VOLLE CYLINDER OVERFLOW BEREICHE
         DS    CL8
PSTIND   DS    CL2                 STATUS INDICATOR
         DS    CL6
POPTCD   DS    CL2                 OPTION CODES
         DS    CL2
         LTORG
         END   PDV032
