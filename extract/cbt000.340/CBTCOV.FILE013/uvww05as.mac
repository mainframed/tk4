*******  PROBA MEMBER=YZ058B00 CODE=CD06 AUTH=M.SCHADE
*******  PROBA  STAND 22.02.80(15.23) LAN=ASM
         TITLE 'YZ058B00 - DATA SECURITY ERASE FOR DA-DATASETS'
         AIF   ('&SYSPARM' NE 'TEST').NOTEST
         MACRO
&NAME    WTO   &TEXT,&ROUTCDE=
&NAME    NOP   0
         BAL   1,TXE&SYSNDX
TXT&SYSNDX DC C&TEXT
TXE&SYSNDX ICM 1,8,=X'10'
         LA    0,L'TXT&SYSNDX
         SVC   93 ISSUE TGET/TPUT SVC
         MEND
*
         MACRO
&NAME    WTOR  &TEXT,&R,&L,&E,&ROUTCDE=
&NAME    NOP   0
         NOP   0
         WTO   &TEXT,&ROUTCDE
         LA    0,&L
         LA    1,&R
         ICM   1,8,=X'80'
         SVC   93 ISSUE TGET/TPUT SVC
         POST  &E
         MEND
*
*         MACRO
*&NAME    WAIT  &N,&ECB=
*&NAME    DS    0H
*         MEND
.NOTEST   ANOP
         EJECT
***********************************************************************
*
* DOKUMENTATIONSANFANG
*
* PGM-NAME:................ YZ058B00
*    -TYP:................. HAUPTPROGRAMM
*    -ATTRIBUT:............ SERIELL WIEDERVERWENDBAR
*
* KURZBEZEICHNUNG:......... LOESCHEN VON PLATTENDATEIEN ZUM DATENSCHUTZ
*
* ERSTELLER:............... M.SCHADE
*                           ABTLG: SSW - MS        DATUM: 02/80
*
* SPRACHE:................. /370 ASSEMBLER
* HAUPTSPEICHER:........... 2 KBYTES
* REFERENZEN:.............. KEINE
*
*
* PGM-BESCHREIBUNG:
*
*     DAS PROGRAMM YZ058B00 DIENT ZUM LOESCHEN VON PLATTENDATEIEN.
*     DIE DATEIEN WERDEN SPURWEISE MIT DEM ERASE-TRACK CCW GELOESCHT.
*     LOESCHT.
*
*
* ANWENDUNGSTECHNIK:
*
*        ALS BATCH-PROGRAMM:
*        ERFORDERLICHE DD-STATEMENTS
*        //STEPNAME  EXEC  PGM=YZ058B00,PARM= 'PARM'
*            MIT 'PARM' = EOD WENN DIE DATEI NUR BIS END-OF-DATA
*                         GELOESCHT WERDEN SOLL.
*                         OHNE PARM-ANGABE WIRD DIE GESAMTE DATEI (BIS
*                         ZUM ENDE DES LETZTEN EXTENTS) GELOESCHT.
*        //STEPLIB   DD    DSN=SERVLIB,DISP=SHR
*        //DISK&&&&  DD    DISP=(OLD,DELETE,KEEP),DSN= 'DSNAME'
*        //DISK&&&&    USW.
*            MIT  &&&& = BELIEBIGE ALPHANUMERISCHE ZEICHEN
*        DIE ANZAHL DER DISK&&&&-STATEMENTS IST BELIEBIG.
*
*
* FEHLERBEHANDLUNG:
*
*     FOLGENDE USER-ABEND-CODES KOENNEN AUFTRETEN:
*       USER = 4000  (DATENBESTAND NICHT AUF DA-EINHEIT.)
*       USER = 4001  (FEHLER IM DEVTYPE MACRO.)
*       USER = 4002  (OBTAIN RETURN CODE NICHT 0.)
*       USER = 4003  (I/O-ERROR IM ERASE.)
*     IM FEHLERFALL WIRD EIN SNAPDUMP GEDRUCKT, DER ZUR WEITEREN
*     FEHLERANALYSE - FALLS NOTWENDIG - AN SSW WEITERZULEITEN IST.
*
*
* ANWENDUNGSHINWEISE:
*
*     FUER JEDE GELOESCHTE DATEI WIRD EINE MELDUNG AUSGEGEBEN.
*
* DOKUMENTATIONSENDE
*
***********************************************************************
         EJECT
*                                                                     *
*------------------------- REGISTER USAGE -----------------------------
*
R0       EQU   0                  LINKAGE REGISTER
R1       EQU   1                  LINKAGE REGISTER
R2       EQU   2                  WORK
R3       EQU   3                  WORK
R4       EQU   4                  WORK
R5       EQU   5                  WORK
R6       EQU   6                  WORK
R7       EQU   7                  WORK
R8       EQU   8                  WORK
R9       EQU   9                  WORK
R10      EQU   10                 WORK
R11      EQU   11                 POINTER TO SCD
R12      EQU   12                 2ND BASE REGISTER
R13      EQU   13                 1ST BASE REGISTER
R14      EQU   14                 RETURN REG. FOR BAL AND BALR
R15      EQU   15                 EP REGISTER
*
*------------------------- GENERAL EQUATES ----------------------------
*
BRANCH   EQU   X'F0'
NOP      EQU   X'00'
BH       EQU   X'20'
OPENOK   EQU   X'10'
BLANK    EQU   C' '
PROPERIO EQU   X'7F'
READCKD  EQU   X'1E'
READKD   EQU   X'0E'
READC    EQU   X'12'
SETSECTR EQU   X'23'
READSCTR EQU   X'22'
WRITECKD EQU   X'1D'
WRITEKD  EQU   X'0D'
WRITED   EQU   X'05'
ERASE    EQU   X'11'
SEEK     EQU   X'07'
SEARCHID EQU   X'31'
SEARCHKY EQU   X'29'
TIC      EQU   X'08'
SLI      EQU   X'20'
CC       EQU   X'40'
CD       EQU   X'80'
SKIP     EQU   X'10'
ZERO     EQU   0
ONE      EQU   X'01'
TWO      EQU   X'02'
THREE    EQU   X'03'
FOUR     EQU   X'04'
FIVE     EQU   X'05'
SIX      EQU   X'06'
SEVEN    EQU   X'07'
EIGHT    EQU   X'08'
TEN      EQU   X'0A'
***********************************************************************
*
YZ058B00 CSECT
SNAPON   DS    0H
         USING *,R15              TEMPORARY BASE REGISTER
         SAVE  (14,12),T,YZ058B00.D.&SYSDATE.T&SYSTIME.V00
         LR    R11,R13            TEMPORARY SAVE OF R13
         LM    R12,R13,BASEREGS   ESTABLISH ADDRESSAB. OF THIS CSECT
         B     STOREREG           BRANCH AROUND SAVEAREA
SAVEAREA DS    0F                 SAVEAREA. FULLWORD ALIGNMENT
         DROP  R15                R15 NO LONGER USED FOR BASE
         USING *,R13,R12          R13 AND R12 BASE REGS
         DC    18F'0'             SAVEAREA
BASEREGS DC    A(SAVEAREA+4096,SAVEAREA)
STOREREG DS    0H
         ST    R13,8(R11)         STORE ADDR. OF OWN SAVEA. INTO HIGHER
         ST    R11,SAVEAREA+4     STORE ADDR. OF HIGHER SAVEA INTO OWN
         B     START
*
RETURN   DS    0H
         L     R13,SAVEAREA+4
         RETURN (14,12),T,RC=0
         EJECT
*
START    DS    0H
         L     R2,0(R1)           LOAD PONTER TO PARM ADDRESS
         LA    R2,0(R2)           CLEAR HIGH ORDER BYTE
         LH    R3,0(R2)           LOAD LENGTH
         LTR   R3,R3              TEST IF PARM AVAILABLE
         BZ    START1             BRANCH IF NOT AN USE DEFAULT (=EOX)
         CLC   2(3,R2),=CL3'EOD'  TEST FOR END OF DATASET
         BNE   START1             IGNORE PARM IF NOT
         MVI   EOXSW+1,BH         MODIFY SWITCH TO 'BRANCH IF HIGH'
*
START1   L     R2,16              LOAD CVT-POINTER
         L     R2,0(R2)           TCB POINTER
         L     R2,4(R2)           CURRENT TCB
         L     R2,12(R2)          TIOT POINTER
         LA    R2,24(R2)          ADDRESS OF FIRST DD-ENTRY
         ST    R2,ADDENTRY        SAVE POINTER TO FIRST DD-ENTRY
*
SCAN     DS    0H
         SR    R3,R3              CLEAR R3
         IC    R3,0(R2)           INSERT LENGTH OF DD-ENTRY
         CLC   4(4,R2),=CL4'DISK' TEST FOR DDNAME 'DISK....'
         BE    DDFOUND            BRANCH IF EQUAL
GOONSCAN DS    0H
         L     R2,ADDENTRY        LOAD POINTER TO CURRENT DD-ENTRY
         LA    R2,0(R3,R2)        INCREASE POINTER TO NEXT ENTRY
         ST    R2,ADDENTRY        SAVE POINTER TO CURRENT DD-ENTRY
         L     R3,0(R2)           LOAD FIRST WORD
         LTR   R3,R3              TEST FOR END OF TIOT
         BNZ   SCAN               BRANCH TO TEST NEXT ENTRY
         B     RETURN --- GO BACK --
*
DDFOUND  DS    0H
         SR    R1,R1              CLEAR R1
         ICM   R1,3,18(R2)        LOAD POINTER TO UCB
         TM    18(R1),X'20'       TEST FOR DA DEVICE
         BNO   E001
         MVC   DCB+40(8),4(R2)    MOVE DDNAME INTO DCB
*
DEVTYPE  DEVTYPE DCB+40,DEVTAB,DEVTAB,RPS
         LTR   R15,R15
         BNZ   E002               ERROR IN DEVTYPE MACRO
         L     R1,MAXBLKSI
         LA    R1,8(R1)          INCREASE MAX BLKSIZE BY COUNT-LENGTH
         STH   R1,CCW4+6          AND STORE IT INTO CCW'S COUNT-FIELD
*
         RDJFCB (DCB)
*
OBTAIN   OBTAIN CAMLIST
         LTR   R15,R15
         BNZ   E003               ERROR IN OBTAIN MACRO
         MVC   DS1LSTAR(3),BUFFER-44+98
*
OPEN     OPEN  (DCB,OUTPUT)
         OI    DCB+44,B'00001100' DON'T USE I/O SUPERV.ERROR ROUTINE
         XC    BUFFER(L'BUFFER),BUFFER CLEAR BUFFER
*
GOON     DS    0H
         L     R0,TTRN
         L     R1,DCB+44 LOAD DEB ADDR. FROM OPEN DCB
         LA    R2,MBBCCHHR
         L     R15,16 LOAD CVT POINTER
         L     R15,28(R15) LOAD POINTER TO IECPCNVT
         CNOP  0,4
         BAL   R8,*+24 BRANCH AROUND SAVEAREA
         DC    5F'0'
         STM   R9,R13,0(R8) SAVE REGS, IECPCNVT DOESN'T
         BALR  R14,R15
         LM    R9,R13,0(R8) RESTORE REGS
         LTR   R15,R15
         BNZ   EODAD
*
EXCP     EXCP  IOB
WAIT     WAIT  ECB=ECB
         TM    ECB,PROPERIO TEST FOR SUCCESSFUL COMPLETION
         BNO   E004               I/O-ERROR
*
NEXTTRK  DS    0H
         LH    R1,TT
         LA    R1,1(R1)           INCREMENT TRACKNUMBER
         STH   R1,TT
         CH    R1,DS1LSTAR
EOXSW    NOP   EODAD              SET TO 'BH' IF EOD SPECIFIED IN PARML
         B     GOON
*
EODAD    DS    0H
         XC    DCB+5(5),DCB+5    SET CCHHR TO ZERO
         CLOSE (DCB)
         XC    TTRN,TTRN PROVIDE REUSABILITY
         MVC   OKMSG+45(6),JFCBVOLS
         MVC   OKMSG+58(43),JFCBDSNM
OKMSG    WTO   'YZ058B00 - NORMAL END OF ERASE.  VOL=VVVVVV  DSN=      *
                                                          ',           *
               ROUTCDE=11
         B     GOONSCAN
*
         EJECT
**********
         PRINT NOGEN
E001     DS    0H                 DATASET NOT ON DA-DEVICE
         WTO   'YZ058B - DATASET NOT ON DA-DEVICE.',                   *
               ROUTCDE=11
         LA    R2,4000
         B     ABEND
*
E002     DS    0H                 ERROR IN DEVTYPE MACRO
         WTO   'YZ058B - ERROR IN DEVTYPE-MACRO.',                     *
               ROUTCDE=11
         LA    R2,4001
         B     ABEND
*
E003     DS    0H                 ERROR IN OBTAIN MACRO
         WTO   'YZ058B - OBTAIN RETURN CODE NOT ZERO.',                *
               ROUTCDE=11
         LA    R2,4002
         B     ABEND
*
E004     DS    0H                 I/O-ERROR
         WTO   'YZ058B - I/O-ERROR DURING ERASE.',                     *
               ROUTCDE=11
         LA    R2,4003
         B     ABEND
*
ABEND    DS    0H
         PRINT GEN
         ST    R1,SAVE1
SNAPSTRT DS    0H
         LA    R1,SNAPRBP
SNAPDYNA DYNALLOC
         LTR   R15,R15
         BNZ   SNAPEND
         MVC   SNAPDCB+40(8),SNAPDDNM MOVE DDNAME INTO DCB
SNAPOPEN OPEN  (SNAPDCB,(OUTPUT))
SNAP     SNAP  DCB=SNAPDCB,PDATA=REGS,SDATA=CB,STORAGE=(SNAPON,SNAPOFF)
SNAPCLOS CLOSE (SNAPDCB)
         B     SNAPEND
         EJECT
SNAPDCB  DCB   DDNAME=SYS00000,DSORG=PS,MACRF=(W),LRECL=125,RECFM=VBA, *
               BLKSIZE=1632
         EJECT
         DS    0F
SNAPRBP  DC    X'80',AL3(*+3)
         DC    XL1'14' LENGTH
         DC    XL1'01' VERB CODE
         DC    XL2'0000' FLAGS1
SNAPERR  DC    XL2'0000'
SNAPINFO DC    XL2'0000'
         DC    A(SNAPTUPL) ADDR OF TEXT UNIT PTR. LIST
         DC    F'0' RESERVED
         DC    F'0' FLAGS2
SNAPTUPL DC    A(SNAPTU11),A(SNAPTU12),X'80',AL3(SNAPTU13)
SNAPTU11 DC    XL2'0018' KEY: SYSOUT
         DC    XL2'0000' # ZERO MEANS DEFAULT OUTPUT CLASS
         DC    XL2'0001' PARM LENGTH
         DC    C'E' OUTPUT-CLASS
SNAPTU12 DC    XL2'001C' KEY: UNALLOCATION AT CLOSE
         DC    XL2'0000' #
SNAPTU13 DC    XL2'0055' KEY: RETURN DDNAME
         DC    XL2'0001' #
         DC    XL2'0008' PARM LENGTH
SNAPDDNM DC    CL8' ' RETURNED DDNAME
*
SNAPEND  DS    0H
*
         ABEND (R2)
*
**********
         EJECT
         DC    CL8'DCB'
DCB      DCB   DDNAME=X,MACRF=(E),IMSK=0,IOBAD=IOB,EXLST=EXLST
*
         EJECT
         DS    0D
IOB      DS    0CL32
IOBFLAG1 DC    BL1'11000010'      FLAG BYTE 1
IOBFLAG2 DC    XL1'00000000'      FLAG BYTE 2
IOBSENS0 DC    XL1'00'            FIRST SENSE BYTE
IOBSENS1 DC    XL1'00'            SECOND SENSE BYTE
IOBECBCC DC    XL1'00'            COMPL. CODE FOR AN I/O EVENT
IOBECBPT DC    AL3(ECB)           ADDR. OF ECB TO BE POSTED
IOBFLAG3 DC    XL1'00'            I/O SUPERVISOR ERROR ROUTINE FLAG BYT
*
IOBCSW   DS    0XL7               LOW ORDER 7 BYTE OF THE LAST CSW
CSWCOMAD DC    AL3(0)             COMMAND ADDRESS
CSWSTAT1 DC    XL1'00'            FIRST STATUS BYTE
CSWSTAT2 DC    XL1'00'            SECOND STATUS BYTE
CSWCOUNT DC    H'0'               RESIDUAL COUNT
*
IOBSTOCC DC    XL1'00'            CC AFTER EXEC OF SIO FOR THIS I/O EV.
IOBSTART DC    AL3(CCW1)          ADDR. OF CHANNEL PGM TO BE EXECUTED
IOBRESVD DC    XL1'00'            RESERVED
IOBDCBPT DC    AL3(DCB)           ADDR. OF DCB ASSOCIATED WITH THIS IOB
IOBRESTR DC    XL4'00'            A FIELD OF VARIOUS USES
IOBINCAM DC    XL2'00'            ACCESS METHOD DEPENDENT
IOBERRCT DC    H'0'               USED BY I/O SUPERV. FOR TEMP.ERR.CNT.
         ORG   IOB+32
MBBCCHHR DS    0D
         DC    XL1'00'
BBCCHH   DC    XL2'00'
CCHHR    DC    XL5'00'
*
*
TTRN     DS    0F
TTR      DS    0XL3
TT       DC    XL2'0000'
R        DC    XL1'00'
N        DC    XL1'00'
*
*........
CCW1      CCW    SETSECTR,CCW1+5,CC,ONE
CCW2      CCW    SEARCHID,CCHHR,CC,FIVE
CCW3      CCW    TIC,CCW2,CC,ZERO
CCW4      CCW    ERASE,BUFFER,SLI,0
*
ECB      DC    A(0)
*
SAVE1    DC    F'0'
ADDENTRY DC    A(0)
*
DEVTAB   DS    0F
UCBTYPE  DC    F'0'
MAXBLKSI DC    F'0' MAXIMUM BLKSIZE OF AN UNKEYED BLOCK
WORD2    DC    F'0'
WORD3    DC    F'0'
WORD4    DC    F'0'
RPS      DC    F'0'
*
         DC    D'0'
*
EXLST    DS    0F
         DC    XL1'87'
         DC    AL3(JFCB)
JFCB     DS    0XL176
JFCBDSNM DC    CL44' '
         DC    XL74'00'
JFCBVOLS DC    CL6' '
         DC    XL52'00'
*
         DS    0F
CAMLIST  CAMLST SEARCH,JFCBDSNM,JFCBVOLS,BUFFER
*
         DS    0F
DS1LSTAR DC    XL3'00'
         DC    XL1'00'
*
         LTORG
*
*
         DS    0D
BUFFER   DS    XL140
COUNT    DC    XL8'0'
BUFFER1  DC    XL132'00'  OBTAIN-WORKAREA
SNAPOFF  DS    0H
*
         END
