         TITLE    'HEWLFFNL  FINAL PROCESSOR OF LINKAGE EDITOR'
***********************************************************************
*FUNCTION/OPERATION: THIS MODULE PROVIDES THE FOLLOWING FUNCTIONS-    *
* 1.IF THE PROGRAM IS IN OVERLAY, THE 'NOTE LIST', A LIST OF DISK TTRS*
*   ARE WRITTEN AT THE END OF THE DATA SET AND ITS TTR IS PLACED IN   *
*   THE PDS DIRECTORY. THE TTRS ARE THE DISK ADDRESSES OF EACH SEGMENT*
* 2.THE PDS DIRECTORY IS COMPLETED-THAT IS THE NAME IS PLACED IN THE  *
*   DIRECTORY FROM EITHER THE NAME CARD, THE DEB, OR 'TEMPNAME' IS    *
*   USED. THE MEMBER IS THEN STOWED--EITHER WITH REPLACE OR ADD AS    *
*   SPECIFIED BY THE NAME CARD OR IN THE DEB.                         *
* 3.IF THERE ALIAS NAMES TO BE STOWED, THIS IS ACCOMPLISHED NEXT      *
* 4.IF THE MODULE HAS BEEN DOWNGRADED--THAT IS GONE FROM REENTRANT TO *
*   REUSABLE OR FROM REUSABLE TO NOT REUSABLE OR FROM EXECUTABLE TO   *
*   NOT EXECUTABLE, OR TO NOT REFRESHABLE, THIS IS PRINTED.
* 5.IF ANY IEWXXXS CODE HAD BEEN PRINTED, A DIRECTORY CORRESPONDING TO*
*   THE CODE WILL BE PRINTED TO EXPLAIN IT.                           *
*   IF MAP OR XREF WAS SPECIFIED AND THERE ARE ESDS, THE MAP/XREF     *
*   PROCESSOR IS CALLED TO PRODUCE THE PROPER OUTPUT                  *
* 7.IF THE END OF INPUT WAS NOT ON, PROCESSING  WOULD BE RETURNED FOR *
*   ANOTHER RUN THROUGH THE EDITOR.  IF IT IS END OF INPUT, CONTROL   *
*   WILL BE RETURNED TO THE CALLER AFTER ALL FILES ARE CLOSED.        *
* 8.THIS ROUTINE ALSO CONTAINS THE SYCHRONOUS ERROR EXIT. WHEN ENTERED*
*   VIA IOCS, THE FILE NAME IS PRINTED, ALL FILES CLOSED AND RETURN IS*
*   GIVEN TO THE CALLER  A CONCODE IS PASSED IN REGISTER 15           *
*                                                                     *
*                                                                     *
*                                                                     *
*ENTRY POINTS:                                                        *
*                                                                     *
*    HEWLFFNL--ENTERED FOR NORMAL PROCESSING                          *
*                                              L   15,=V(HEWLFFNL)    *
*                                               BCR  15,15            *
*                                                                     *
*    HEWLCFAB--ENTERED FOR TERMINATING PROCESSING                     *
*                                               L    15,=V(HEWLCFAB)  *
*                                               BCR  15,15            *
*                                                                     *
*    HEWLFSNX--ENTERED FOR SYNCHRONOUS FILE ERROR EXIT                *
*                                               L    15,=V(HEWLCSNX)  *
*                                               BCR  15,15            *
*                                                                     *
*                                                                     *
*INPUT:  PDS DIRECTORY IN THE ALL PURPOSE TABLE (SEE HEWLKAPT)        *
*        TTR NOTE LIST IN THE ALL PURPOSE TABLE (SEE HEWLKAPT)        *
*        DEB -STANDARD FORMAT OF OUTPUT FILE USED TO STOW             *
*        INDICATORS IN THE ALL PURPOSE TABLE                          *
*        ALIAS TABLE--EACH ENTRY IS TEN BYTES IN LENGTH               *
*                     FIRST EIGHT BYTES IS ALIAS NAME                 *
*                     LAST TWO BYTES ARE AN ID OF THE HALF ESD TABLE  *
*                                                                     *
*                                                                     *
*OUTPUT: DISK USED FOR STOW OF DIRECTORY AND WRITING THE NOTE LIST    *
*        (SEE PDS DIRECTORY IN ALL PURPOSE TABLE)                     *
*        PRINTED OUT PUT TO INDICATE MEMBER STOWED                    *
*                                                                     *
*                                                                     *
*                                                                     *
*EXTERNAL ROUTINES: N/A                                               *
*                                                                     *
*                                                                     *
*                                                                     *
*EXITS-NORMAL: AT END OF INPUT, ALL FILES ARE CLOSED, REGISTERS ARE   *
*              RESTORE, CONCODE PLACED IN REGISTER 15 AND A BRANCH    *
*              BACK ON REGISTER 14                                    *
*              AT NAME CARD BUT NOT END OF INPUT RETURN IS GIVEN TO   *
*              LINKEDIT INIILIZER FOR MORE INPUT                      *
*                                                                     *
*EXITS-ERROR:  WHEN EITHER SYCHRONEOUS ERROR EXIT OR TERMINATION ENTRY*
*              (FNALAB), RETURN TO CALLER WITH CONCODE OF 16 IN REG 15*
*              OTHER RETURNS, NOT NORMAL CAN HAVE REGULAR CONCODES OF *
*               12,8, OR 4 IN REGISTER 15.                            *
*                                                                     *
*TABLES/WORK AREAS: PDS DIRECTORY USED TO STOW - FORMAT IN ALL PURPOSE*
*                      TABLE                                          *
*                   TTR NOTE LIST- 4 BYTES PER ENTRY EACH CONTAINING A*
*                      TTR CORRESPONDING TO THE START OF A SEGMENT    *
*                                                                     *
*                                                                     *
*                                                                     *
*ATTRIBUTES: REUSABLE                                                 *
*                                                                     *
*                                                                     *
*NOTES:  THE MODULE CAN BE USED IN LEVEL E AND F  LINKAGE EDITOR      *
*        HOWEVER, DESIGN OF MODULE WAS USING LEVEL E ALL PURPOSE      *
*        TABLE. WHEN USING FOR LEVEL F OFFSETS SHOULD BE CHECKED      *
*                                                                     *
***********************************************************************
HEWLFFNL CSECT
**********************************************************************
*014630-014660,031150,031220-031280                              S01904
*020220-80,031284-356,049020-92,067420-80,068420-40,070620-40,   Y01048
*072120                                                          Y01048
*A064200                                                         A51444
*A063000                                                         A49330
*A023200,A040200,A042500,A072200                                 A52450
*A032004-032020,C032100,A032120,A034820-034840,C034900,A034920  OY00359
*A072280-072292                                                 OY00359
*A030920,A031353,A037320                                         YM5552
*I023220,C028200,C028500,C028800,C029000                OX04280,OY03413
*C033200,D033500-034000,C034200,D060700-061100          OX04280,OY03413
*I065900,I014000,C033900                                OX04280,OY03413
**********************************************************************
         EXTRN HEWLFBTP
         ENTRY HEWLCFNI
         ENTRY HEWLCSNX
         ENTRY HEWLCEOI
         ENTRY HEWLCFAB
         EXTRN HEWLCSDB
         EXTRN HEWLCMDB
         EXTRN HEWLCUDB
         EXTRN HEWLCPDB
         EXTRN HEWLTMDB
         EXTRN HEWLFLDB
         EXTRN ENQNAME
         EXTRN MINOR
         EXTRN JFCBADDR                ADDRESS OF SYSLMOD JFCB
         EXTRN APTXLIST           ADDRESS OF SYSLMOD EXIT LIST  ETERNIT
* REGISTER ASSIGNMENTS IN FINAL PROCESSOR
REG0     EQU   0
R0       EQU   0
R1       EQU   1
REG1     EQU   1
TTRREG   EQU   1
REG2     EQU   2      REGISTER 2
APT      EQU   2         ALL PURPOSE TABLE
PDSDIREG EQU   2         ADDRESS OF PDS DIRECTORY
DCBREG   EQU   3         DCB ADDRESS REGISTER
SYSLIN   EQU   3         REGISTER 3
SYSLMOD  EQU   4         REGISTER 4
DEBNPRES EQU   4         OFFSET IN DEB TO SEE IF NAME PRESENT
NREG     EQU   4
TEMP1    EQU   5
WRTADR   EQU   5
SYSUT1   EQU   5         REGISTER 5
SYSPRINT EQU   6         REGISTER 6
WRTBYTES EQU   6
TEMP2    EQU   6
MSGADD   EQU   6             ADDR OF MESSAGE
MSGLNG   EQU   7             LENGTH OF MESSAGE
TEMP4    EQU   7
DEBREG   EQU   7
SYSLIB   EQU   7
RET1     EQU   8
RETADD   EQU   8             RETURN ADDRESS
TOTLNG   EQU   9             TOTAL MESAGE LENGTH
REG9     EQU   9
PRTREG   EQU   10
TEMP3    EQU   11
DEBXRG   EQU   6                       BPAM EXTEN PTR   OX04280,OY03413
BASE     EQU   12        BASE REGISTER
SAVEREG  EQU   13
PASSREG  EQU   14
RETRN2   EQU   14
ERCODE   EQU   15
GOTOR    EQU   15       GO TO REGISTER
SSIPRES  EQU   X'10'                   PDSE12, SSI PRESENT       S01904
PAGEING  EQU   X'20'                   PDSE12, PAGING            S01904
SCNALOV  EQU   X'4F'     C-BYTE SCATTER-NO ALIAS--SAVE FOR OVERLAY
BKNALNV  EQU   X'2B'     C-BYTE BLOCK-NO ALIAS--NO OVERLAY
SCALOV   EQU   X'D4'     C-BYTE FOR SCATTER, ALIAS, REUS OR RENT
BKALNV   EQU   X'B0'     C-BYTE FOR BLK, ALIAS, REUS, OR RENT
BKALOV   EQU   X'D0'     C-BYTE FOR OVLY, ALIAS, RENT OR REUS
OVLYCBT  EQU   X'4B'     C-BYTE FOR OVERLAY BUT NOT ALIAS
BKNTTR   EQU   X'0B'    C-BYTE BLOCK NO TTR'S IN PDS
NONAME   EQU   X'00'
TNAME    EQU   X'01'
REPLACE  EQU   X'10'     REPLACE MEMBER
NAMECARD EQU   X'C0'    NAME RECEIVED FROM NAME CARD OR PARM LIST
ALBPE    EQU   X'0A'     NUMBER OF BYTES PER ENTRY IN ALIAS TABLE
DEBOFST  EQU   X'2C'     OFFSET IN DCB OF SYSLMOD OF DEB ADDRESS
DEBNEXT  EQU   X'10'     OFFSET IN DEB OF NUMBER OF EXTENTS
DEBESCL  EQU   X'1C'     OFFSET IN DEB OF EXTENTS SCALING FACTOR
DEBSEXT  EQU   X'20'     OFFSET OF START OF EXTENTS IN DEB
DCBIOBAD EQU   X'1C'     OFFSET IN DCB OF IOB ADDRESS
DEBTYSTO EQU   X'08'     OFFSET IN DEB OF STOW TYPE MODIFIER
MODSTO   EQU   X'80'     STOW--ADD INDICATOR
OLDSTO   EQU   X'40'     STOW--REPLACE INDICATOR
NEWSTO   EQU   X'C0'     STOW--ADD INDICATOR
RETRY    EQU   X'02'     RETRY INDICATOR TO STOW(A) AFTER STOW (R)
GOODSTOW EQU   X'FF'     MASK FOR TESTING GOOD STOW
EXISTS   EQU   X'04'     NAME ALREADY EXIST IN PDS DIRECTORY
NOTIN    EQU   X'08'     NAME NOT FOUND IN DIRECTORY
NOSPACE  EQU   X'0C'     NO SPACE LEFT IN PDS DIRECTORY
PERMACC  EQU   X'10'     PERMANENT I/O ERROR WHEN ACCESSING DIRECTORY
ANSCOV   EQU   X'DB'    MASK TO CLEAR PDS BITS FOR OVLY-SCTR NO TXT
SYMCDPRS EQU   X'04'    SYM CARDS PRESENT INDICATOR
REEN     EQU   X'80'     REENTERANT ATTRIBUTE
REUS     EQU   X'40'     REUSABLE ATTRIBUTE
REFR     EQU   X'01'         REFRESHABLE BIT
OVLY     EQU   X'20'     OVERLAY ATTRIBUTE
SCTR     EQU   X'04'     SCATTER ATTRIBUTE
RAR      EQU   X'C0'     REENTERANT AND REUSABLE ATTRIBUTE
XREF     EQU   X'40'     CROSS-REFERENCE TABLE REQUEST BIT
EOI      EQU   X'20'     END OF INPUT
BOTH     EQU   X'03'
LR       EQU   X'03'
SD       EQU   X'00'
XFOMP    EQU   X'60'    MAP AND XREF INDICATORS
DCBCIND2 EQU   X'3D'    OFFSET FOR INDICATORES IN SYSLMOD DCB
DCBRELAD EQU   X'00'
OPENFLAG EQU   X'30'     POSITION OF OPEN FLAGS IN DCB
OPENBIT  EQU   X'10'     BIT INDICATE OPEN DCB
ALIASIND EQU   X'80'
MAXLINEC EQU   55
RESTORE  EQU   X'8B'                   IMMEDIATE SKIP TO CHANNEL 1
TNL2     EQU   X'F4'     OFFSET FOR TEXT NOTE LIST 2
OFF      EQU   X'00'    CLEAR INDICATORS
BMDONE   EQU   X'08'       IND THAT BIT MAP HAS BEEN PROCESSED
BMOFF    EQU   X'F7'       MASK TO TURN OFF BIT MAP DONE IND
CNT1     EQU   45       BYTE COUNT IN HALF-MESSAGE 1           ETERNIT
CNT2     EQU   47       BYTE COUNT IN HALF-MESSAGE 2           ETERNIT
CNT3     EQU   57       BYTE COUNT IN HALF-MESSAGE 3           ETERNIT
CNT4     EQU   X'15'    BYTE COUNT IN HALF-MESSAGE 4
CNT5     EQU   X'11'    BYTE COUNT IN HALF-MESSAGE 5             Y01048
LMSK     EQU   9        LENGTH OF MASK                           Y01048
LEDT     EQU   10       LENGTH OF EDIT                           Y01048
DEDT     EQU   22       DISP INTO MESG START EDIT                Y01048
DCBDDNAM EQU   X'28'    OFFSET IN DCB OF DDNAME
DISPSV1  EQU   X'24'          DISPOSITION AND SEVERITY OF MESG 29
ERMSG1   EQU   29             MESSAGE NUMBER 29
DISPSV2  EQU   X'24'          DISPOSITION AND SEVERITY OF MESSAGE 40
ERMSG2   EQU   40             MSG NUMBER 40
DISPSV3  EQU   X'24'          DISPOSITION AND SEVERITY FOR 39
ERMSG3   EQU   39             MSG NUMBER 39
DISPSV4  EQU   X'21'               DISPOSITION AND SEVERITY FOR 42
ERMSG4   EQU   42                  MESG NUMBER 42
DISPSV5  EQU   X'22'
ERMSG5   EQU   41
DISPSV6  EQU   X'22'
ERMSG6   EQU   50
DISPSV7  EQU   X'23'                    DISPOSITION AND SEVERITY
ERMSG7   EQU   54                       ERROR MESSAGE NUMBER
NOSTRGE  EQU   X'18'                   NOT ENOUGH CORE FOR STOW  S21016
ERMSG71  EQU   X'2447'                 ERROR MSG. FOR STOW COMP. S21016
*                                      CODE OF X'18' (NO CORE)   S21016
SETSSI   EQU   X'10'          INDICATION THAT SSI RECEIVED
FSSI     EQU   X'08'          INDICATOR SSI DONE
OSSI     EQU   X'F7'       CLEAR SSI DONE INDICATION
SETAPF   EQU   X'80'                   APF DONE INDICATOR        YM2054
APFOFF   EQU   X'7F'                   CLEAR APF DONE INDICATOR  YM2054
EPEZ     EQU   X'20'          ENTRY POINT EQ ZERO
SUTTR    EQU   X'100'             TR FOR REPOSITIONING SYSUT1
BTMPF    EQU   X'10F'    OFFSET FOR FINAL PROC ERROR MSGS OF SVER 4
FNM3940  EQU   X'C0'     BITS FOR MSGS 40 AND 39
P2M1     EQU   X'01'          SECOND PASS MSG 1
P2M2     EQU   X'02'          SECOND PASS MSG 2
P2M1CD   EQU   X'201'         CODE FOR ERDIAG  MSG 1
P2M2CD   EQU   X'202'         CODE FOR ERDIAG  MSG 2
ATCK     EQU   X'C2'                    MASK FOR SAVED ATTRIBUTES
BLANK    EQU   C' '          BLANK FOR PRINT
EXEC     EQU   X'02'         EXECUTABLE BIT
TERM     EQU   X'02'                   TERM SWITCH IN NEWSW
ERMSG73  EQU   X'0149'                 ERROR MESSAGE 731         A52450
ERMSG58  EQU   X'013A'                 ERR MSG 58       OX04280,OY03413
R14      EQU   14                      GEN REG 14       OX04280,OY03413
R15      EQU   15                      GEN REG 15       OX04280,OY03413
         USING *+2,BASE
         BALR  BASE,0
         USING APTDSECT,APT   ESTABLISH ADDRESSIBILITY FOR APT
         GETMAIN EU,LV=200,A=LMODJFCB  GETMAIN AN AREA FOR JFCB ETERNIT
         L     R1,XLSTADDR        GET SYSLMOD EXIT LIST ADDR    ETERNIT
         MVC   5(3,R1),LMODJFCB+1 MOVE ADDR INTO EXIT LIST      ETERNIT
         L     SYSLMOD,DCBADRS2   LOAD ADDRESS OF SYSLMOD DCB   ETERNIT
         RDJFCB ((SYSLMOD))       READ SYSLMOD JFCB             ETERNIT
         L     R1,LMODJFCB        R1 = JFCB                     ETERNIT
         MVC   WORKDSN,0(R1)      MOVE DSNAME INTO WORK FIELD   ETERNIT
         MVC   WORKVOL,118(R1)    MOVE VOLSER INTO WORK FIELD   ETERNIT
         LA    R1,WORKDSN         R1 = START OF DSNAME          ETERNIT
         LA    R0,44              R0 = MAX LENGTH OF DSNAME     ETERNIT
SEARCHB  CLI   0(R1),C' '         IS THIS A SPACE /Q            ETERNIT
         BE    MOVEDSN            YES - THEN GET OUT OF LOOP    ETERNIT
         LA    R1,1(R1)           UP POINTER                    ETERNIT
         BCT   R0,SEARCHB         REPEAT TILLE END OF DSNAME    ETERNIT
MOVEDSN  MVC   0(10,R1),ONVOL     MOVE VOLSER TO MESSAGE        ETERNIT
         MVC   MESG1DSN,MESGDSN   SET UP DSNAME IN MESG1        ETERNIT
         MVC   MESG2DSN,MESGDSN   SET UP DSNAME IN MESG2        ETERNIT
         MVC   MESG3DSN,MESGDSN   SET UP DSNAME IN MESG3        ETERNIT
         FREEMAIN E,LV=200,A=LMODJFCB  FREE JFCB                ETERNIT
         BC    15,MODID+6              BRANCH AROUND MODULE IDENT
MODID    DC    C'19MFNL'
         NI    FNLIND,OFF    CLEAR INTERNAL INDICATORS
         NI    APFIND,OFF              CLEAR APF INDICATORS      YM2054
         TM    BITMAP+7,P2M1       IS SECOND PASS MESSAGE 1 ON
         BC    8,FNL1A             NO-BY PASS
         LA    REG0,P2M1CD(REG0)   PUT IN ERROR CODE
         L     GOTOR,ERDIG         LOAD ADDRESS OF ERDIG
         BALR  RETRN2,GOTOR        GOTO ERROR LOG
FNL1A    TM    BITMAP+7,P2M2       IS SECOND PASS MSG 2 BIT ON
         BC    8,FNL2A             NO- BY PASS
         LA    REG0,P2M2CD(REG0)   PUT IN ERROR CODE
         L     GOTOR,ERDIG         LOAD ADDRESS OF ERDIG
         BALR  RETRN2,GOTOR        GO TO LOG
FNL2A    SR    TEMP1,TEMP1             CLEAR REG
         ST    TEMP1,PDSE2         CLEAR TTRC
         CH    TEMP1,ENCDC         IS ESD EMPTY
         BC    8,FNL101A     YES--GO SEE IF ANY SYMS PRESENT
         CH    TEMP1,ENTOC         IS THERE ANY TEXT
         BC    8,FNL102      NO--GO TO CLEAR IND FOR OVLY-SCTR
         TM    PDSE7,OVLY          IS THE LOAD MODULE IN OVERLAY
         BC    1,FNL100            YES-GO TO WRITE NOTE LIST
         TM    PDSE7,SCTR          IS LOAD MODULE IN SCATTER
         BC    1,FNL200            YES-GO TO PLACE IN PROPER 'C' BYTE
         OI    PDSE3,BKNALNV       BLOCK-NO-ALIAS-NO OVERLAY C BYTE
         BC    15,FNL300           GO TO GET NAME FOR MEMBER
FNL200   OI    PDSE3,SCNALOV       MODULE IN DCTR SET C BYTE X'4F'
         BC    15,FNL300           GO TO GET NAME FOR MEMBER
FNL101A  TM    PDSE8,SYMCDPRS      ARE SYM CARD PRESENT
         BC    8,FNLCN                 DONT STOE
FNL102   OI    PDSE3,BKNTTR        NO TTR'S-STOW BECAUSE SOME OUTPUT
         NI    PDSE7,ANSCOV        CLEAR OVERLAY-SCATTER IS ON
         BC    15,FNL300     GO TO GET NAME FOR MEMBER
FNL100   OI    PDSE3,OVLYCBT       MODULE IN OVERLAY
         L     PRTREG,TTRLIST      GET ADR-4 OF NOTE LIST
         LA    PRTREG,4(PRTREG)    UP BY 4 TO GET RIGHT ADRESS
         LH    REG9,CSNO           PUT IN NUMBER OF TTRS
         SLL   REG9,2                   MULTIPLY BY FOUR
         L     DCBREG,DCBADRS2    LOAD ADR OF SYSLMOD
         BAL   RET1,FNLP02A        GO TO WRITE
         NOTE  (DCBREG)
         IC    TTRREG,CSNO+1       INSERT NUMBER OF ENTRIES IN TTR LIST
         ST    TTRREG,PDSE5        STORE TTR INTO PDS ENTRY 5
FNL300   L     TEMP3,ADJFCB            LOAD JFCBADDR INTO REG
         NI    0(TEMP3),X'00'          INIT JFCBADDR HI-ORD BYTE
         L     DCBREG,DCBADRS2         LOAD ADDRESS OF SYSLMOD
         L     DEBREG,DEBOFST(DCBREG)  GET DEB ADDRESS
         SR    TEMP1,TEMP1              CLEAR           OX04280,OY03413
         SR    TEMP2,TEMP2              CLEAR
         IC    TEMP1,DEBNEXT(DEBREG)    LOAD NUMBER OF EXTENTS
         IC    TEMP2,DEBESCL(DEBREG)    LOAD SCALING FACTOR
         SLL   TEMP1,0(TEMP2)           MULTIPLY
         LA    DEBXRG,DEBSEXT(TEMP1,DEBREG)  DEBREG NOW CONTAINS ADR
         TM    APT3,NAMECARD           IS MEM NAME ON NAME CARD
         BNZ   FNL294                  YES--BRANCH
         CLI   DEBNPRES(DEBREG),NONAME MEM NAME IN DEB  OX04280,OY03413
         BNE   FNL404                  YES--BRANCH
         B     FNL101                  NO--GO TO USE TEMPNAME
FNL294   CLI   DEBNPRES(DEBREG),NONAME MEM NAME IN DEB  OX04280,OY03413
         BE    FNLMVC                  NO--BRANCH
         CLC   0(8,DEBXRG),PDSE1       ARE NAMES SAME?  OX04280,OY03413
         BE    FNLMVC                  YES--BRANCH
         OI    0(TEMP3),X'40'          PDS&DEB MEMNAMES CONFLICT
FNLMVC   MVC  MESG1+5(8),PDSE1     ---SET UP PRT IMAGE 1
         MVC  MESG2+5(8),PDSE1     ---SET UP PRT IMAGE 2
         MVC  MESG3+5(8),PDSE1     ---SET UP PRT IMAGE 3
         MVC  MESG4+5(8),PDSE1     ---SET UP PRT IMAGE 4
FNL301   TM    FNLIND,FSSI         HAS SSI BEEN MOVED FOR THIS STOW
         BC    1,FNL301B           YES--BYPASS
         TM    APT2,SETSSI         NO-ARE THERE ANY SSI INDICATORS
         BC    8,FNL301B           NO--BYPASS
         SR    REG1,REG1      CLEAR REG 1
         IC    REG1,PDSE3          INSERT 'C' BYTE
         LA    REG1,2(0,REG1)          ADD 2 (TWO ADDITIONAL HALF WDS)
         STC   REG1,PDSE3          UPDATE C  BYTE
         LA    REG1,4(0,REG1)     INCREMENT BY 4-MORE FOR PDS NAME
         LH    NREG,PSDIND             LOAD IN C-BYTE MASK
         NR    REG1,NREG     CLEAR BYTE COUNT IN C-BYTE
         SLL   REG1,1              DOUBLE
         AR    REG1,REG2           ADD BEGINNING OF PDS DIRECTORY
         AH    REG1,EIGHT          BUMP TO START OF PDS ENTRY    YM5552
         MVC   0(4,REG1),SSI       MOVE 4 BYTES OF SSI
         OI    FNLIND,FSSI         SET SSI PROCESSED
         OI    PDSE12,SSIPRES          TURN ON PDS BIT           S01904
FNL301B  OI    PDSE8,EPEZ          SET EDITOR ASGN EP=0 (BIT=1)
         TM    APT4,PAGEE              PAGING IN EFFECT          S01904
         BZ    FNL301BB                NO                        S01904
         OI    PDSE12,PAGEING          YES, TURN ON PDS BIT      S01904
FNL301BB EQU   *                                                 S01904
         TM    APFIND,SETAPF           IS APF ALREADY DONE?      YM2054
         BO    FNL301BD                IF SO, BYPASS             YM2054
         OI    APFIND,SETAPF           IF NOT, SET THE INDICATOR YM2054
         SR    REG1,REG1           CLEAR REG1                    Y01048
         IC    REG1,PDSE3          INSERT 'C' BYTE               Y01048
         LA    REG1,1(REG1)        ADD 1 HALFWD FOR AUTH CODE    Y01048
         STC   REG1,PDSE3          UPDATE 'C' BYTE               Y01048
         LA    REG1,5(REG1)        INCREMENT FOR PDS NAME + 1    Y01048
         LH    NREG,PSDIND         LOAD IN C-BYTE MASK           Y01048
         NR    REG1,NREG           CLEAR BYTE CT IN C BYTE       Y01048
         SLL   REG1,1              DOUBLE                        Y01048
         TM    APT2,SETSSI         IS SSI PRESENT                Y01048
         BO    FNL301BC            YES, REG1 IS OK               Y01048
         TM    PDSE3,ALIASIND      IS ALIAS SPECIFIED            Y01048
         BO    FNL301BC            YES, REG1 IS OK               Y01048
         BCTR  REG1,0              NO, DECREMENT REG1 BY 1       Y01048
FNL301BC EQU   *                   PROCESS APF INFO              Y01048
         AR    REG1,REG2           ADD TO PDS DIRECTORY START    Y01048
         AH    REG1,EIGHT          BUMP TO START OF PDS ENTRY    YM5552
         MVC   0(LAPF,REG1),PDSAPF MOVE APF INFO TO PDS          Y01048
FNL301BD EQU   *                       BYPASS APF PROCESSING     YM2054
         NC    PDSE11(3),PDSE11    IS ASGN EP EQU ZERO
         BC    8,FNL301A               YES--GO TO STOW
         NI    PDSE8,X'DF'         NO SET BIT OFF (=0)
FNL301A  LA    SAVEREG,SPACES      LOAD REGISTER SAVE AREA
         L     DCBREG,DCBADRS2     LOAD ADDRESS OF SYSLMOD
         TM    APT3,REPLACE        IS MODULE TO BE REPLACED
         BC    1,FNL500            YES--GO TO STOW(R)
         MVC   TTRCSAVE(4),PDSE2   SAVE THE TTRC FIELD FOR SECOND STOW
FNLSTA   EQU   *                                                OY00359
         AH    PDSDIREG,EIGHT      BUMP PAST STARTAPT STRING    OY00359
         STOW  (DCBREG),(PDSDIREG),A STOW WITH ADD              OY00359
         SH    PDSDIREG,EIGHT          POINT TO START OF APT    OY00359
FNL700   STC   ERCODE,STOWBYTE     STORE AWAY STOW RETURN CODE
         TM    PDSE3,ALIASIND      WAS ALIAS SPECIFIED
         BC    1,FNL906
         TM    STOWBYTE,GOODSTOW   WAS THERE ANY INDICATION OF ERROR
         BC    4,FNL600            BRANCH IF SOME ERROR FOUND
         TM    APT3,REPLACE        WAS REPLACE SPECIFIED
         BC    1,FNL800            YES--GO TO PRINT MESSAGE
         L     PRTREG,PRTWD1       LOAD PRINT REGISTER WITH PRINT WORD
         LA    RET1,FNL900    GO TO ALIAS CHECK AFTER PRINT
         BC    15,FNLPRTMG
FNL404   LR    REG9,DEBXRG             POINT TO NAME    OX04280,OY03413
         L     R15,ADRVLDCK            ADR VLD CHK RTN  OX04280,OY03413
         BALR  R14,R15                 GO VALIDATE NAME OX04280,OY03413
         LTR   REG9,REG9               TEST VALID NAME  OX04280,OY03413
         BZ    FNL404A                 BRANCH IF SO     OX04280,OY03413
         LA    RETRN2,FNL101           SET RTRN ON ERR  OX04280,OY03413
         L     GOTOR,ERDIG             PT TO ERR RTN    OX04280,OY03413
         LA    REG0,ERMSG58            SET ERR PARM     OX04280,OY03413
         BR    GOTOR                   EXIT TO ERR LOG  OX04280,OY03413
FNL404A  EQU   *                                        OX04280,OY03413
         MVC   PDSE1(8),0(DEBXRG)      PUT NAME IN PDS  OX04280,OY03413
         TM    DEBTYSTO(DEBREG),OLDSTO TEST IF MOD DISP OX04280,OY03413
         BZ    FNLMVC                  BRANCH IF MOD    OX04280,OY03413
         OI    APT3,REPLACE        INDICATE REPLACE
         B     FNLMVC                  GO PROCESS MBR   OX04280,OY03413
* THIS MOVES TEMPNAME TO PDS DIRECTORY
FNL101B  MVC   PDSE2(4),TTRCSAVE   RESTORE THE TTRC FIELD FROM 1ST STOW
FNL101   MVC   PDSE1(8),TEMPNAME   MOVE TEMPNAME TO PDS DIRECTORY
         OI    FNLIND,TNAME             INDICATE TEMPNAME BEING USED
         BC    15,FNLMVC                GO TO SET UP MESSAGES
* STOW WITH REPLACE
FNL500   EQU   *                                                OY00359
         AH    PDSDIREG,EIGHT         BUMP PAST STARTAPT STRING OY00359
         STOW  (DCBREG),(PDSDIREG),R    STOW WITH REPLACE       OY00359
         SH    PDSDIREG,EIGHT          POINT TO START OF APT    OY00359
         BC    15,FNL700                CHECK STOW
* STOW ERROR--PRINT MESSAGE FOR TYPE ERROR
FNL600   CLI   STOWBYTE,NOSPACE         WAS ERROR NO SPACE IN DIRECTORY
         BC    8,FNL601                 YES--GO PRT ERROR
         CLI   STOWBYTE,PERMACC         WAS ERROR PERMANENT DISK ERROR
         BC    8,FNL602                 YES--GO PRT ERROR
         CLI   STOWBYTE,NOTIN           WAS ERROR NAME NOT IN DIRECTORY
         BC    8,FNL603                 YES--GO FOR PRT AND RETRY
         CLI   STOWBYTE,NOSTRGE        WAS ERR. NOT ENOUGH CORE? S21016
         BE    FNL606                  YES, GO TO PRINT MSG.     S21016
         LA    RETRN2,FNL906B     LOAD RETURN ADR TO CHECK MORE ALIASES
         TM    PDSE3,ALIASIND      WERE ALIASES BEING PROCESSED
         BC    1,FNL604           YES--GO TO ERROR PRINT
         TM    FNLIND,TNAME             HAS TEMPNAME BEEN USED
         BC    1,FNL605                 YES--GO TO PRINT MESSAGE
         LA    RETRN2,FNL101B      RETRY STOW-RESTORE TTRC FIELD -
         LH    REG0,ERCODE4        PUT ERROR CODE IN REG0
         BC    15,FNL6011          GO TO LOG
FNL601   LH    REG0,ERCODE2            PUT IN ERR CODE NO SPACE LEFT
         OI    FNLIND,FNM3940     INDICATE TYPE 4 SEVERITY
         TM    PDSE3,ALIASIND      WAS ALIAS SPECIFIED
         BC    8,FNL6011
         NI    FNLIND,X'3F'       CLEAR IND FOR TYPE 4 SEVERITY
         LH    REG0,ERCODE5        ALIAS-NO SPACE LEFT
         LA    RETRN2,FNLCN       CONTINUE BUT NO MORE STOW OF ALIAL
FNL6011  LR    TTRREG,APT          PUT ADDRESS OF SYMBOL IN REG 1
         AH    TTRREG,EIGHT        BUMP TO START OF PDS ENTRY    YM5552
         L     GOTOR,ERDIG         LOAD ERROR DIAGNOSTIC ADDRESS
         BCR   15,GOTOR       GO TO ERROR DIAGNOSTIC
FNL602   LH    REG0,ERCODE3            PERMANENT DISK ERROR
         OI    FNLIND,FNM3940     INDICATE TYPE 4 SEVERITY
         TM    PDSE3,ALIASIND      WAS ALIAS SPECIFIED
         BC    8,FNL6011
         NI    FNLIND,X'3F'       CLEAR IND FOR TYPE 4 SEVERITY
         LH    REG0,ERCODE6        ALIAS-PERMANENT DISK ERROR
         LA    RETRN2,FNLCN       CONTINUE BUT NO MORE STOW OF ALIAL
         BC    15,FNL6011
* NAME ADDED BY STOW--DID NOT EXIST
FNL603   L     PRTREG,PRTWD3       LOAD MESSAGE CNTL WD
         LA    RET1,FNL900   LOAD ADDRESS OF ALIAS SCAN
         TM    PDSE3,ALIASIND      WAS ALIAS SPECIFIED
         BC    8,FNLPRTMG
         LA    RET1,FNL906B
         BC    15,FNLPRTMG         GO TO PRINT MESSAGE
FNL605   BAL   RETRN2,NOSTOW           GO TO RESET SYSLMOD PTR
         LA    RETRN2,FNLCN            TEMPNAME EXISTS
         NI    FNLIND,X'00'        CLEAR INDICATOR
FNL604   LH    REG0,ERCODE7     LOAD ERROR CODE IN REGISTER 0
         BC    15,FNL6011          GO TO PRT MESSAGE
FNL606   LH    REG0,ERCODE71           PUT IN ERROR CODE FOR     S21016
*                                      NOT ENOUGH CORE FOR STOW  S21016
         OI    FNLIND,FNM3940          INDICATE SEVERITY 4 ERROR S21016
         B     FNL6011                 GO TO LOG AND TERMINATE   S21016
FNL800   L     PRTREG,PRTWD2  LOAD CNTL WD FOR REPLACE MESSAGE
         LA    RET1,FNL900    PUT RETURN AT ALIAS CHECK
         BC    15,FNLPRTMG    GO TO PRINT
* THIS ROUTINE CHECKS AND STOWS ALIASES
FNL900   LH    TEMP1,ENASC         LOAD CURR NUMBER OF ALIAS ENTS
         LTR   TEMP1,TEMP1         CHECK TO SEE IF ANY PRESENT
         BC    8,FNLCN             NONE--GO TO CONTINUE
         MVC   MEMBER(8),PDSE1         SAVE MEMBER NAME          A52450
         OI    PDSE3,X'80'
         MVC   IOCT(3),PDSE11      STORE MAIN ENTRY POINT
         MVC   IOCT+3(2),PDSE16    SAVE MAIN MEMBER ID
         NI    FNLIND,OSSI   CLEAR SSI PROCESSED IND
         NI    APFIND,APFOFF           CLEAR APF DONE INDICATOR  YM2054
         NI    PDSE3,X'00'         CLEAR C BYTE
         TM    PDSE7,SCTR          IS MODULE SCATTER
         BC    1,FNL900B           YES--GO TO INSERT C BYTE
         MVC   PDSE13(3),PDSE11    SAVE MAIN MEMBER EP
         MVC   PDSE14+1(8),PDSE1   SAVE MAIN MEMBER NAME
         TM    PDSE7,OVLY          IS MODULE OVERLAY
         BC    1,FNL900C           YES--GO TO INSERT C BYTE
         OI    PDSE3,BKALNV        SET C BYTE EQU X'31'
         BC    15,FNL900A          GO TO MOVE NAME,EP
FNL900B  OI    PDSE3,SCALOV        SET C BYTE EQU TO X'34'
         MVC   PDSE17(3),PDSE11    MOVE EP TO ALAIS AREA
         MVC   PDSE18(8),PDSE1     MOVE MAIN NAME TO ALAIS AREA
         BC    15,FNL900A          GO TO MOVE NAME,EP
FNL900C  OI    PDSE3,BKALOV        SET C BYTE EQU X'51'
*    SCAN FOR ALIAS NAME IN ALIAS TABLE
FNL900A  L     TEMP2,ALAS          GET ALIAS TABLE ADDRESS
FNL902A  MVC   PDSE1(8),0(TEMP2)   MOVE MEMBER TO PDSE1
         CLC   MEMBER(8),PDSE1         ALIAS AND MEMBER SAME     A52450
         BNE   CONTINUE                NO                        A52450
         LA    R0,ERMSG73              ERROR MSG 731             A52450
         L     GOTOR,ERDIG             ADDR OF LOG               A52450
         ST    PASSREG,SAVE14          SAVE REG 14               A52450
         BALR  PASSREG,GOTOR           GO TO PRINT ERROR MSG     A52450
         L     PASSREG,SAVE14          RESTORE REG 14            A52450
         B     FNL906B                 CHECK FOR MORE ALIASES    A52450
CONTINUE EQU   *                                                 A52450
         SR    TEMP3,TEMP3
         LH    TEMP3,8(TEMP2)      GET ID POINTER
         LTR   TEMP3,TEMP3    ID EQU ZERO
         BC    8,FNL904       YES--GO TO PUT EP FROM MEMBER SAVED
         L     TEMP4,HESD          GET HALF ESD ADDRESS
         SLL   TEMP3,3           MULTIPLY BY 8 THE ID
         AR    TEMP4,TEMP3       ADD OFFSET TO START ADDRESS
         TM    PDSE7,SCTR          IS IT IN SCATTER
         BC    8,FNL907                NO--BYPASS MOVE OF ID
         MVC   PDSE16(2),6(TEMP4)  PUT ID IN SCATTER AREA
FNL907   MVC   PDSE11(3),1(TEMP4)  YES MOVE ADDRESS FOR EP
         BC    15,FNL301           GO TO STOW ALIAS
* NOT SD OR LR -- MUST PUT EP OF MEMBER NAME
FNL904   MVC   PDSE11(3),IOCT      RE-USE SAVE MAIN EP
         TM    PDSE7,SCTR          WAS SCATTER SPECIFIED
         BC    8,FNL301           NO--GO TO STOW ALIAS MEMBER
         MVC   PDSE16(2),IOCT+3    RE-USE SAVED ID
         BC    15,FNL301           GO STOW ALAIS
*  THIS  IS RETURN FROM  STOW OF ALIAS
FNL906   CLI   STOWBYTE,NOTIN  WAS NAME NOT IN DIRECTORY
         BC    8,FNL906A       YES--STOW ADDED IT-OK
         TM    STOWBYTE,GOODSTOW  WAS STOW OK
         BC    4,FNL600           NO--SOME ERROR--GO CHECK TYPE
FNL906A  MVC   MESG4+5(8),PDSE1    MOVE ALIAS NAME TO PRINT MESSAGE
         L     PRTREG,PRTWD4       LOAD CNTL WORD
         BAL   RET1,FNLPRTMG       RETURN TO CHECK MORE ALIASES AFTER
FNL906B  LA    TEMP2,10(TEMP2)     INCREMENT COUNT
         BCT   TEMP1,FNL902A       RETURN TO PROCESS NEXT ENTRY
         BC    15,FNLCN            GO TO CONTINUE
* STOW FINISHED--CONTINUE
* ROUTINE TO PRINT MESSAGES
FNLPRTMG LR    REG9,PRTREG        LOAD REG 9
         SRL   REG9,24       SHIFT OUT ADDRESS
         SLL   REG9,1        DOUBLE FOR BYTE COUNT
FNLPRTAT L     GOTOR,PRNTAD            ADDRESS OF PRINT ROUTINE
         LH    REG1,LINECNT        LOAD LINE COUNT
         BCT   REG1,FNLP02B  REDUCE COUNT BY ONE
         L     DCBREG,HEWLCWBB+20      ADDRESS OF PRINT BUFFER
         MVI   0(DCBREG),RESTORE       RESTORE PAGE
         BALR  RETRN2,GOTOR            TO PRINT ROUTINE
         LA    REG1,MAXLINEC           INITIALIZE LINECNT TO MAX
FNLP02B  STH   REG1,LINECNT        STORE BACK LINE COUNT
         L     DCBREG,HEWLCWBB+20  ADDRESS OF PRINT BUFFER
         BCTR  REG9,0                  DECREMENT COUNT BY 1
         EX    REG9,MOVE               MOVE MESSAGE TO PRINT BUFFER
         BALR  RETRN2,GOTOR
         BCR   15,RET1
MOVE     MVC   0(1,DCBREG),0(PRTREG)   EXECUTED MOVE
FNLP02A  LA    SAVEREG,SPACES     LOAD REG WITH SAVE AREA
         WRITE  PRTDECB,SF,(DCBREG),(PRTREG),(REG9)
         CHECK  PRTDECB
         BCR   15,RET1        RETURN
NOSTOW   EQU   *
* * * THIS ROUTINE RESETS SYSLMOD POINTER IF NO STOW DONE
         STM   RETRN2,REG1,SAVE4       SAVE REGS 14 - 1
         L     DCBREG,DCBADRS2         LOAD ADDR OF SYSLMOD
         L     R0,DCBRELAD(DCBREG)     PICK UP TTR FOR SYSLMOD
         IC    R0,=X'00'               ZERO OUT LAST BYTE OF TTR
         ST    R0,LASTTR               STORE TTR FOR POINT
         LA    R0,LASTTR               PICK UP ADDR OF TTR
         POINT (DCBREG),(R0)           PNT SYSLMOD TO CORRECT TTR
         LM    RETRN2,REG1,SAVE4       RESTORE REGS 14 - 1
         BR    RETRN2                  RETURN
*****THIS ROUTINE WILL PRINT OUT THE CHANGED ATTRIBUTES IF ANY
FNLCN    STM   MSGADD,RETADD,SPACES+8
         SR    PRTREG,PRTREG       USE AS TEMP WORK REG          Y01048
         IC    PRTREG,PDSAPFAC     GET AUTH CODE                 Y01048
         CVD   PRTREG,APFWORK      CONVERT TO PACKED FORMAT      Y01048
         MVC   MESG5A(LMSK),MASK   MOVE MASK TO OUTPUT THEN EDIT Y01048
         ED    MESG5+DEDT(LEDT),APFWORK+3                        Y01048
         L     PRTREG,PRTWD5       POINT TO MESSAGE              Y01048
         BAL   RET1,FNLPRTMG       GO PRINT MESSAGE              Y01048
         LA    RETADD,ENDMSG
         TM    PDSE7,EXEC    IS MODULE EXECUTABLE
         BC    1,TSTRENT     YES
*  GENERATE NOT EXECUTABLE MESSAGE
         LA    MSGADD,NEXEC
         LA    MSGLNG,16     LENGTH
         BC    15,STRTMSG    GENERATE HEADER MEESAGE
SETMSG   TM    PRTSW,X'01'   WAS HEADER MESSAGE GENERATESD
         BC    1,MSG1        YES
*   GENERATE HEADER MESSAGE  YES
STRTMSG  OI    PRTSW,X'01'
         L     PRTREG,HESD
         MVC   0(25,PRTREG),MODATTR    MOVE HEADR TO OUTPUT AREA
         LA    PRTREG,24(PRTREG)
         LA    TOTLNG,25
         BC    15,MSG2
MSG1     OI    PRTSW,X'03'        AND SWITCH ON
MSG2     MVC   1(17,PRTREG),0(MSGADD)
         AR    TOTLNG,MSGLNG ADD MESSAGE LENGTH TOTOTAL
         AR    PRTREG,MSGLNG
         BCR   15,RETADD     TEST NEXT OPTION
TSTRENT  TM    SAVATS,REEN   TEST FOR REENTERABLE OPTION
         BC    8,TSTREUS     NO REENTERABLE OPTION SPECIFIED
         LA    RETADD,TSTREUS
         TM    PDSE7,REEN    WAS REENTERABLE TURNED ON IN DIRECTORY
         BC    1,RENT1       REENTERABLE
*   NOT REENTERABLE MESSAGE
         LA    MSGADD,NRENT
         LA    MSGLNG,17
         BC    15,SETMSG     MOVE MESSAGE FOR OUTPUT
RENT1    LA    MSGADD,NRENT+4
         LA    MSGLNG,13
         BC    15,SETMSG
*   REUSABLE TEST
TSTREUS  TM    SAVATS,REUS   WAS REUSABLE OPTION SPECIFIED
         BC    8,TSTREFR     NO
         LA    RETADD,TSTREFR
         TM    PDSE7,REUS    WAS MODULE MARKED REUSABLE
         BC    1,REUS1       YES
*  MARK NOT REUSABLE
         LA    MSGADD,NREUS
         LA    MSGLNG,14
         BC    15,SETMSG
*        REUSALBE MESSAGE
REUS1    LA    MSGADD,NREUS+4
         LA    MSGLNG,10
         BC    15,SETMSG
TSTREFR  TM    SAVATS+1,REFR WAS REFRESHABLE MESSAGE SPECIFIED
         BC    8,ENDMSG      NO
         LA    RETADD,ENDMSG
         TM    PDSE8,REFR    IS MODULE REFRESHABLE
         BC    1,REFR1       YES
         LA    MSGADD,NREFR  NOT REFRESHABLE MESSAGE
         LA    MSGLNG,17
         BC    15,SETMSG
REFR1    LA    MSGADD,NREFR+4
         LA    MSGLNG,13
         BC    15,SETMSG
*        END OF MESSAGE
ENDMSG   TM    PRTSW,X'01'
         BC    8,FNLCN2
         MVI   0(PRTREG),C'.'          PLACE PERIOD AT END OF MESSAGE
         TM    PRTSW,X'02'             TEST FOR AND NEEDED.
         BC    8,NOAND                 NO
         LA    RETADD,4(PRTREG)
         SR    PRTREG,MSGLNG
         MVC   5(17,PRTREG),0(MSGADD)
         MVC   2(3,PRTREG),NAND
         MVI   0(RETADD),C'.'
         LA    TOTLNG,4(TOTLNG)
NOAND    L     PRTREG,HESD
FNLA05B  BAL   RET1,FNLPRTAT           GO TO PRINT
         NI    PRTSW,X'00'         CLEAR PRINT SWITCH
FNLCN2   LM    MSGADD,RETADD,SPACES+8
         LA    SAVEREG,REGSA      PUT IN ADR. OF REG SAVE AREA
         L     DCBREG,DCBADRS2     LOAD ADDRESS OF SYSLMOD
         TM    DCBCIND2(DCBREG),X'80'     HAS STOW BEEN ISSUED
         BC    8,FNLCN3                NO--GO TO BIT MAP PROCESSOR
         TM    APT0,XREF               IS XREF SPECIFIED
         BC    8,FNLCN3                NO--GO TO BIT MAP PROCESSOR
         TM    NEWSW,X'20'             YES--ARE RLD'S IN CORE
         BC    8,FNLCN3                YES--XREF ALREADY DONE
         L     TEMP3,ADJFCB            LOAD JFCBADDR INTO REG
         TM    0(TEMP3),X'40'          PDS&DEB MEMNAMES CONFLCT?
         BZ    FNLCN2A                 NO--BRANCH
         OI    0(TEMP3),X'80'          INDICATE SYSLMOD OPEN J
* WILL BE REQUIRED IN HEWLFMAP BECAUSE RLD'S FOR XREF ARE ON
* SYSLMOD (NOT IN CORE) AND MEMBER NAME IN PDS DIRECTORY
* CONFLICTS WITH MEMBER NAME IN DEB.
FNLCN2A  L     GOTOR,LCMAPADR          LOAD ADDR OF XREF/MAP SUB
         BALR  RETRN2,GOTOR       GO TO HEWLCMAP
FNLCN3   L     GOTOR,BTMPDIAG          ADDRESS OF BIT MAP PROCESSOR
         OI    APTSWS,BMDONE           INDICATE BIT MAP DONE
         BALR  RETRN2,GOTOR
HEWLCEOI TM    APT3,EOI            IS END OF INPUT INDICATED
         BC    1,FNL150
         LA    R0,FNTTR           LOAD ADR OF TTR
         L     R1,DCBADRS3        LOAD ADR OF SYSUT1 IN REG 1
         TM    OPENFLAG(R1),OPENBIT    IS SYSUT1 OPEN
         BC    8,NOPOINT               NO--DON'T REPOSITION SYSUT1
         POINT (1),(0)   REPOSITION SYSUT1 TO REUSE SPACE
NOPOINT  NI    APTSWS,BMOFF            CLEAR BIT MAP DONE IND
         L     15,INT14AD
         BCR   15,15
FNL150   LA    15,HEWLCFAB
         BCR   15,15
         DROP  12
         USING HEWLCFAB,12
HEWLCFAB LR    BASE,GOTOR
         LA    SAVEREG,REGSA       LOAD REGISTER SAVE AREA ADR
         TM    APTSWS,BMDONE       IS THE BIT MAP DONE IND ON
         BC    1,FNALAB1
         TM    NEWSW,X'08'             IS ABORT NO PRINT SW ON
         BC    1,FNALAB3               YES--DON'T PRINT ANYTHING
         L     GOTOR,BTMPDIAG    LOSD ADR OF BIT MAP PROCESSOR
         BALR  RETRN2,GOTOR
FNALAB1  NI    APTSWS,BMOFF        CLEAR BIT MAP DONE IND
         OI    HEWLCWBB+24,X'02'   SET FLUSH BIT
         L     15,PRNTAD
         BALR  14,15
FNALAB3  L     REG0,FFCADR             ADDRESS OF HIGHEST CORE GOTTEN
         L     REG1,HEWLCRBB+4         ADDRESS OF SYSLIB BUFFER
         C     REG1,HEWLCRBB+8         COMPARE TO OTHER SYSLIB BUFFER
         BC    4,FNALAB2               TAKE THE LOWER ADDRESS
         L     REG1,HEWLCRBB+8
FNALAB2  SR    REG0,REG1               NUMBER OF BYTES TO FREE
         FREEMAIN  R,LV=(0),A=(1)
         LA    SAVEREG,REGSA
         L     SYSLMOD,DCBADRS2
         OI    DCBCIND2(SYSLMOD),MODSTO INDICATE
         LA    1,DCBADRS1         LOAD ADDR. OF DCB ADDRESSES
         TM    NEWSW,TERM         IN TSO MODE?
         BZ    TSO1               NO - BRANCH
         LA    1,DCBADRS0         CLOSE TERM DATA SET
TSO1     CLOSE MF=(E,(1))
         TM    APTSW2,SHRSYSMD         TEST IF SYSLMOD RESERVED  A49330
         BNO   OTHRDEQ                 BRANCH IF NOT             A49330
         DEQ   (ENQNAME,MINOR,44,SYSTEMS) DEQ RESERVED SYSLMOD   A49330
         B     SKIPDEQ2                PROCEED                   A49330
OTHRDEQ  EQU   *                       RESERVE DEQ BYPASS        A49330
         TM    APTSW2,ENQBIT           DISP=OLD ON SYSLMOD?      A37663
         BO    SKIPDEQ2                YES - DON'T DEQUEUE       A37663
         DEQ   (ENQNAME,MINOR,44,SYSTEM)
SKIPDEQ2 EQU   *                                                 A37663
         SR    GOTOR,GOTOR              CLEAR
         IC    GOTOR,HISEV+1       PUT IN SEVERITY
         SLL   GOTOR,2                  MULTIPLY BY FOUR
         LM    SAVEREG,RETRN2,SYSRTN
         LM    REG0,BASE,20(SAVEREG)  RESTORE REGISTERS
         BCR   15,14
         DROP  BASE
         USING HEWLCFNI,BASE
HEWLCFNI LR    BASE,GOTOR         SET UP ADDRESSABILITY
         L     BASE,FNLFAB        SET UP ADDRESSABILITY
         USING HEWLCFAB,BASE
         L     GOTOR,BTMPDIAG          GET ADDR OF DIAGNOSE RTN  A51444
         BALR  RETRN2,GOTOR            GO TO PRINT MESSAGES      A51444
         B     FNALAB1
         DROP  12
         USING HEWLCSNX,BASE
HEWLCSNX LR    BASE,GOTOR               SET UP ADDRESSABILITY
         L     SYSLMOD,DCBADRS2   GET ADR OF SYSLMOD
         TM    OPENFLAG(SYSLMOD),OPENBIT IS OPEN BIT ON
         BC    8,EXCLOSE          NO--GO RIGHT TO CLOSE FILE IN ERROR
         OI    DCBCIND2(SYSLMOD),MODSTO  INDICATE STOW DONE
EXCLOSE  L     GOTOR,FNLFAB
         BR    GOTOR                   GO TO CHECK BIT MAP AND FREE
STOWBYTE DC    X'00'
FNLIND   DC    X'00'
APFIND   DC    X'00'                   APF SUPPORT INDICATORS    YM2054
*        BIT   0             0=APF NOT YET PROCESSED FOR PDS ENTRY
*                            1=APF CODE ALREADY PLACED IN PDS ENTRY
*        BITS  1-7           RESERVED
*                                                                YM2054
         DS    0F
PSDIND   DC    X'001F'                 MASK FOR C-BYTE
INT14AD  DC    V(HEWLENAM)        RETURN ADR TO INITILIZER
LCMAPADR DC    V(HEWLFMAP)    ADCON FOR MAP AND XREF ROUTINE
PRNTAD   DC    V(HEWLEPNT)             ADDRESS OF PRINT ROUTINE
ADRVLDCK DC    V(HEWVLDCK)             ADR VLD CK RTN   OX04280,OY03413
FNLFAB   DC    A(HEWLCFAB)
         DS    0F
FNTTR    DC    X'00000100'
WORKDSN  DS    0CL44              DSNAME WORK FIELD             ETERNIT
MESGDSN  DC    CL54' '            WORK FIELD                    ETERNIT
ONVOL    DC    C' ON '            PREFIX TO VOLSER              ETERNIT
WORKVOL  DC    CL6' '             VOL SER                       ETERNIT
MESG1    DC    X'09'                   SINGLE SPACE CC
         DC    C'****          NOW ADDED TO DATA'
         DC    C' SET '                                         ETERNIT
MESG1DSN DC    CL54' '                                          ETERNIT
MESG2    DC    X'09'                   SINGLE SPACE CC
         DC    C'****          NOW REPLACED IN D'
         DC    C'ATA SET '
MESG2DSN DC    CL54' '                                          ETERNIT
MESG3    DC    X'09'                   SINGLE SPACE CC
         DC    C'****          DOES NOT EXIST BU'
         DC    C'T HAS BEEN ADDED TO DATA SET '                 ETERNIT
MESG3DSN DC    CL54' '                                          ETERNIT
MESG4    DC    X'09'                   SINGLE SPACE CC
         DC    C'****          IS AN ALIAS FOR T'
         DC    C'HIS MEMBER'
MESG5    DC    X'09'               SINGLE SPACE CC               Y01048
         DC    C'AUTHORIZATION CODE IS '                         Y01048
MESG5A   DS    CL9                 ACTUAL CODE GOES HERE         Y01048
         DC    C'. '               END OF MESSAGE                Y01048
         DS    0F
BTMPDIAG DC    A(HEWLFBTP)
PRTWD1   DC    AL1(CNT1)
         DC    AL3(MESG1)          ADDRESS OF  MESSAGE  1
PRTWD2   DC    AL1(CNT2)
         DC    AL3(MESG2)          ADDRESS OF  MESSAGE  2
PRTWD3   DC    AL1(CNT3)
         DC    AL3(MESG3)          ADDRESS OF  MESSAGE  3
PRTWD4   DC    AL1(CNT4)
         DC    AL3(MESG4)          ADDRESS OF MESSAGE  4
PRTWD5   DC    AL1(CNT5)           LENGTH OF MESSAGE             Y01048
         DC    AL3(MESG5)          ADDRESS OF MESSAGE            Y01048
DCBADRS0 DC    A(HEWLTMDB)    ADDRESS OF SYSTEM DCB              S20007
DCBADRS1 DC    A(HEWLCSDB)    ADDRESS OF SYSLIN
DCBADRS2 DC    A(HEWLCMDB)    ADDRESS OF SYSLMOD
DCBADRS3 DC    A(HEWLCUDB)    ADDRESS OF SYSUT1
DCBADRS4 DC    A(HEWLCPDB)    ADDRESS OF SYSPRINT
DCBADRS5 DC    X'80'          END OF LIST FLAG
         DC    AL3(HEWLFLDB)  ADDRESS OF SYSLIB
ERCODE1  DC    AL1(DISPSV1)       DISPOSITION AND SEVERITY
         DC    AL1(ERMSG1)    MESG NUMBER
ERCODE2  DC    AL1(DISPSV2)
         DC    AL1(ERMSG2)
ERCODE3  DC    AL1(DISPSV3)
         DC    AL1(ERMSG3)
ERCODE4  DC    AL1(DISPSV4)        DISPOSITION AND SEVERITY
         DC    AL1(ERMSG4)         MESSAGE NUMBER
ERCODE5  DC    AL1(DISPSV5)
         DC    AL1(ERMSG5)
ERCODE6  DC    AL1(DISPSV6)
         DC    AL1(ERMSG6)
ERCODE7  DC    AL1(DISPSV7)             DISPOSITION AND SEVERITY
         DC    AL1(ERMSG7)              ERROR MESSAGE NUMBER
ERCODE71 DC    AL2(ERMSG71)            DISP.,SEV.&NO. FOR MSG.71 S21016
TEMPNAME DC    CL8'TEMPNAME'
MASK     DC    X'202020202020202120'   EDIT MASK                 Y01048
APFWORK  DS    D                   DOUB WORD WORK AREA           Y01048
TTRCSAVE DC    1F'0'  SAVE AREA FOR THE TTRC FIELD WHEN STOWING
* WITH ADD(PDSE2,3) RESTORED FOR SECOND ATTEMPT WITH TEMPNAME
LASTTR   DS    F                       FOR TTR FOR SYSLMOD
SAVE4    DS    4F                      TO SAVE REGS DURING POINT
MODATTR  DC    X'09'                   SINGLE SPACE CC
         DC    C'**MODULE HAS BEEN MARKED'
NEXEC    DC    C' NOT EXECUTABLE,'
NRENT    DC    C' NOT REENTERABLE,'
NREUS    DC    C' NOT REUSABLE,'
NREFR    DC    C' NOT REFRESHABLE,'
NAND     DC    C'AND'
PRTSW    DC    X'00'
*        BIT 0-5  SPARE
*        BIT 6 X'03'  AND KEYWORD NEEDED.
*        BIT 7 X'01'  HEADER MESSAGE CONSTRUCTED, OUTPUT NEEDED.
LAPF     EQU   2                   LENGTH OF APF INFO            Y01048
LMODJFCB DC    A(0)               SYSLMOD JFCB ADDR             ETERNIT
XLSTADDR DC    V(APTXLIST)        ADDR OF SYSLMOD EXIT LIST     ETERNIT
ADJFCB   DC    A(JFCBADDR)             ADDRESS OF SYSLMOD JFCB
         DS    0F                                                A52450
MEMBER   DC    CL8' '                  MEMBER NAME STOWED        A52450
SAVE14   DC    F'0'                    REG 14 SAVE AREA          A52450
EIGHT    DC    H'8'                    CONSTANT 8 TO USE FOR    OY00359
*                                      BUMPING PAST AND BACK    OY00359
*                                      TO 'STARTAPT' STRING     OY00359
*                                      FOR STOW PARM POSITIONINGOY00359
         HEWAPT
         END
