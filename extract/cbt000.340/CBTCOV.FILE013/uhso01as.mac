*  SPIE ROUTINE
*  AUSGABE
*  PROG.INT.           AUF ADR.         BEI BEFEHL
*  MODULNAME
*  REGISTER
*  OPERAND1            ADR              DATEN
*  OPERAND2            ADR              DATEN
SPT      TITLE 'EXIT - SPIE - ROUTINE / GFD / CORNELIUS'
         ENTRY SPIERT
SPIERT   CSECT
         SPACE 3
ROUTBUF  EQU   1             BASIS ADR. AUSGABE-PUFFER
RBASE    EQU   2             BASIS-ADR PROGRAMM
RDATADDR EQU   3             DATENADR. VON ADRECHN FUER DATOUT
RPIE     EQU   4             BASIS-ADR. FUER PIE
R5       EQU   5
RL       EQU   R5            DATEN-LAENGE
RREGNR   EQU   R5            REGISTER-NUMMER FUER AUSGABE
RINTADDR EQU   6             BASIS-ADR BEFEHL
R7       EQU   7
RILC     EQU   R7            INSTRUCTION-LENGTH-CODE
RX       EQU   R7            ADRESS-RECHEN-REGISTER
RCOUNT   EQU   R7            SCHLEIFEN-ZAEHLER
R8       EQU   8
ROUT     EQU   R8            BASIS-ADR DATEN IN REGOUT/DATOUT
RPUT     EQU   R8            RETURN-ADR PUT
PUT      EQU   9             ENTRY-ADR PUT
CONV     EQU   10            ENTRY-ADR CONV
RCONV    EQU   11            ADR BINAER-DATEN FUER CONV
RLAST    EQU   11            LETZTES REGISTER FUER RESTORE
RLINK    EQU   14            RETURN ADR
R14      EQU   14
RLINK2   EQU   15            RETURN ADR
         EJECT
OUTBUF   DSECT
VORSCHUB DS    0CL1
ZEILE    DS    CL133
         SPACE 3
OUTBUF2  DSECT
ZEILEDAT DS    0CL8
ZEILERNR DS    HL2
         DS    CL1
ZEILEREG DS    CL8
         DS    CL3
         SPACE 5
PIE      DSECT
         DS    CL4           PICA-ADR
OPSW     DS    0CL8          OLD PSW
         DS    CL3
INTCODE  DS    X             BITS 4-7 INTERRUPTION-CODE
ILC      DS    X             BITS 0-1 INSTRUCTION-LENGTH-CODE
INTADDR  DS    AL3           INTERRUPTION-ADDR
REG14    DS    2F            SA REG14,REG15
REG0     DS    3F            SA REG0,REG1,REG2
         SPACE 3
INSTR    DSECT
OP       DS    X             OPERATINSSCHLUESSEL
L        DS    0X   BITS 0-7, 0-3 UND 4-7 LAENGENSCHLUESSEL
X        DS    X             BITS 4-7  INDEX-REGISTER
B        DS    0X            BITS 0-3 BASIS REGISTER
DISP     DS    XL2           DISPLACEMENT
         SPACE 3
         USING SPIERT,RBASE
         USING OUTBUF,ROUTBUF
         USING OUTBUF2,ROUT
         USING PIE,RPIE
         USING INSTR,RINTADDR
         EJECT
SPIERT   CSECT
         LR    RBASE,15
         STM   3,13,REG+12
         LR    RPIE,1
         MVC   REG(12),REG0
         MVC   REG+56(8),REG14
         ST    14,RRETURN
         LA    PUT,PUTPROG
         LA    CONV,CONVPROG
         ST    13,SA+4
         LA    13,SA
OPENSCH  EQU   *+1
         NOP   ZEILE1
         SPACE
OPEN     OPEN  (DCB,(OUTPUT))
         OI    OPENSCH,X'F0'
         SPACE 3
ZEILE0   BALR  RPUT,PUT
         XC    ZEILE,ZEILE
         MVI   VORSCHUB,X'1B'
         SPACE
ZEILE1   DS    0H
         SP    ANZSP,=P'1'
         BM    ABENDE
         B     ZEILE1A
ABENDE   DS    0H
         CLOSE DCB
         ABEND 12,DUMP
ZEILE1A  DS    0H
         BALR  RPUT,PUT
         MVC   ZEILE(39),=C'°* PROGRAM INTERRUPT   CX   AUF ADRESSE'
         MVC   ZEILE+51(10),=C'BEI BEFEHL'
         LA    RCONV,INTCODE
         BALR  RLINK,CONV
         MVC   ZEILE+24(1),HEX+1
         LA    RCONV,INTADDR
         BALR  RLINK,CONV
         MVC   ZEILE+42(6),HEX
         L     RINTADDR,INTADDR-1
         LA    RINTADDR,0(,RINTADDR)
         SR    RILC,RILC
         IC    RILC,ILC
         SRL   RILC,6
         AR    RILC,RILC
         SR    RINTADDR,RILC
         LR    RCONV,RINTADDR
         BALR  RLINK,CONV
         MVC   ZEILE+64(4),HEX
         TM    ILC,X'80'
         BZ    ZEILE2
         MVC   ZEILE+68(4),HEX+4
         TM    ILC,X'40'
         BZ    ZEILE2
         LA    RCONV,4(,RCONV)
         BALR  RLINK,CONV
         MVC   ZEILE+72(4),HEX
         EJECT
ZEILE2   BALR  RPUT,PUT
         XC    ZEILE+3(75),ZEILE+3
         L     RCONV,16
         CLI   116(RCONV),X'10'
         BE    LTSW
         MVI   SMFT,X'01'
LTSW     DS    0H
         L     RCONV,0(,RCONV)
         L     RCONV,4(,RCONV)
         L     RCONV,0(,RCONV)
         MVC   ZEILE+6(4),=C'NAME'
         MVC   ZEILE+33(6),=C'USE/EP'
LOOPUEP  DS    0H
         CLI   SMFT,X'01'
         BE    MFTLOOP
         ST    RCONV,SRCONV
         L     RCONV,12(,RCONV)
         MVC   ZEILE+11(8),8(RCONV)
         LA    RCONV,16(,RCONV)
         BALR  RLINK,CONV
         L     RCONV,SRCONV
         LA    RCONV,12(,RCONV)
         B     LOOPGM
MFTLOOP  DS    0H
         MVC   ZEILE+11(8),0(RCONV)
         LA    RCONV,12(,RCONV)
         BALR  RLINK,CONV
LOOPGM   DS    0H
         MVC   ZEILE+42(6),HEX+2
         LA    RCONV,4(,RCONV)
         BALR  RLINK,CONV
         LA    RCONV,4(,RCONV)
         BALR  RLINK,CONV
         MVC   ZEILE+64(8),HEX
           STM   R11,R12,ZWISAVE
         L     R12,REG+48
         CLC   0(10,R12),=X'90ECD00C18CF47F0C05C'          BAS=1
         BE    MN10
         CLC   0(14,R12),=X'90ECD00C18CF58B0C01047F0C064'  BAS=2
         BE    MN20
         CLC   0(14,R12),=X'90ECD00C18CF98ABC01047F0C068'  BAS=3
         BE    MN24
         MVC   ZEILE+11(9),=C'UNBEKANNT'
         B     A001
MN10     MVC   ZEILE+11(8),10(R12)
         B     A000
MN20     MVC   ZEILE+11(8),20(R12)
         B     A000
MN24     MVC   ZEILE+11(8),24(R12)
A000     LA    RCONV,REG+48
         BALR  RLINK,CONV
         MVC   ZEILE+42(6),HEX+2
A001     DS    0H
         LM    R11,R12,ZWISAVE
         B     ZWISAVE+8
ZWISAVE DC    2F'0'
R11      EQU   11
R12      EQU    12
         BALR  RPUT,PUT
         S     RCONV,=F'12'
         TM    3(RCONV),128
         BO    ENDLOOP
         L     RCONV,20(,RCONV)
         B     LOOPUEP
ENDLOOP  DS    0H
         XC    ZEILE+3(75),ZEILE+3
         SPACE
ZEILE3   BALR  RPUT,PUT
         MVC   ZEILE+3(8),=C'REGISTER'
         LA    RCONV,REG
         LA    RREGNR,X'F0'
         BAL   RLINK2,REGOUT
         SPACE
ZEILE4   BALR  RPUT,PUT
         BAL   RLINK2,REGOUT
         SPACE
ZEILE5   BALR  RPUT,PUT
         XC    ZEILE+3(130),ZEILE+3
         SPACE
ZEILE6   TM    ILC,X'80'
         BZ    ZEILE8
         BALR  RPUT,PUT
         MVC   ZEILE+3(7),=C'OPERAND'
         MVC   ZEILE+17(7),=C'ADRESSE'
         MVC   ZEILE+34(5),=C'DATEN'
         LA    RL,3
         TM    ILC,X'40'
         BZ    ZEILE6A
         MVI   ZEILE+12,C'1'
         IC    RL,L
         TM    OP,X'20'
         BZ    ZEILE6A
         SRL   RL,4
ZEILE6A  BAL   RLINK,ADRRECHN
         TM    OP,X'80'
         BO    ZEILE6B
         IC    RX,X
         N     RX,=F'15'
         BAL   RLINK,INDEXING
ZEILE6B  BAL   RLINK2,DATOUT
         SPACE
ZEILE7   TM    OP,X'C0'
         BM    ZEILE8
         BALR  RPUT,PUT
         MVI   ZEILE+12,C'2'
         IC    RL,L
         TM    OP,X'20'
         BZ    ZEILE7A
         N     RL,=F'15'
ZEILE7A  LA    RINTADDR,2(,RINTADDR)
         BAL   RLINK,ADRRECHN
         BAL   RLINK2,DATOUT
         EJECT
ZEILE8   BALR  RPUT,PUT
         XC    ZEILE,ZEILE
         MVI   VORSCHUB,X'1B'
         SPACE
ZEILE9   BALR  RPUT,PUT
         L     R14,RRETURN
         LM    3,13,REG+12
         RETURN
DUMP     LM    0,15,REG
         DC    X'00'
         EJECT
REGOUT   LA    ROUT,14(ROUTBUF)
         LA    RCOUNT,8
REGLOOP  STH   RREGNR,ZEILERNR
         BALR  RLINK,CONV
         MVC   ZEILEREG,HEX
         LA    RREGNR,1(,RREGNR)
         CH    RREGNR,=H'250'
         BNE   *+8
         AH    RREGNR,HF0F6
         LA    ROUT,14(,ROUT)
         LA    RCONV,4(,RCONV)
         BCT   RCOUNT,REGLOOP
         BR    RLINK2
         SPACE 2
DATOUT   ST    RDATADDR,ZEILE+28
         LA    RCONV,ZEILE+28
         BALR  RLINK,CONV
         MVC   ZEILE+26(6),HEX+2
         LA    RDATADDR,0(,RDATADDR)
         L     RCONV,16
         L     RCONV,164(,RCONV)
         S     RCONV,=F'100'
         CR    RDATADDR,RCONV
         BH    DATEXIT
         CL    RDATADDR,=F'8'
         BL    DATEXIT
         LR    RCONV,RDATADDR
         SH    RCONV,=H'8'
         LA    ROUT,45(ROUTBUF)
         LA    RCOUNT,10
DATLOOP  BALR  RLINK,CONV
         MVC   ZEILEDAT,HEX
         LA    RCONV,4(,RCONV)
         LA    ROUT,8(,ROUT)
         BCT   RCOUNT,DATLOOP
DATMOVE  MVC   ZEILE+41(16),ZEILE+45
         XC    ZEILE+57(2),ZEILE+57
         AR    RL,RL
         LA    RL,2(,RL)
         CH    RL,CON72
         BL    *+8
CON72    EQU   *+2
         LA    RL,72
         STC   RL,DATL
DATL     EQU   *+1
         MVC   ZEILE+59(256),ZEILE+61
         AR    ROUTBUF,RL
         XC    ZEILE+59(2),ZEILE+59
         B     ENDEDAT
DATEXIT  DS    0H
         XC    ZEILE+41(72),ZEILE+41
ENDEDAT  DS    0H
         BR    RLINK2
         EJECT
ADRRECHN SR    RX,RX
         IC    RX,B
         SRL   RX,4
         LH    RDATADDR,DISP
         N     RDATADDR,=F'4095'
INDEXING LTR   RX,RX
         BZ    ADROK
         SLL   RX,2
         L     RX,REG(RX)
         AR    RDATADDR,RX
ADROK    BR    RLINK
         SPACE
CONVPROG UNPK  HEX(9),0(5,RCONV)
         TR    HEX(8),CONVTAB
         BR    RLINK
         SPACE
HEX      EQU   OPEN
CONVTAB  EQU   *-X'F0'
         DC    C'0123456789ABCDEF'
         SPACE 3
PUTPROG  PUT   DCB
         BR    RPUT
         EJECT
SA       DS    18F
REG      DS    16F
RRETURN  DS    F
SMFT     DC    X'00'
SRCONV   DS    F
ANZSP    DC    PL4'10'
HF0F6    DS    0H
         DC    X'F0F6'
         EJECT
DCB      DCB   DSORG=PS,MACRF=PL,DDNAME=FEHLER,RECFM=FM,LRECL=133,     F
               BLKSIZE=133,BUFNO=1,BFTEK=S,EROPT=ACC
         EJECT
         LTORG
         EJECT
         END
