         TITLE 'IEAVADUS -   ABEND/SNAP USER EXIT'
         LCLA  &FLAG2
&FLAG2   SETA  137           CHANGE IF NECESSARY         *** SBV
         MACRO
&NAME    ABMSG &S,&LINKREG=R14,&SVEADDR=MSGRET
         CNOP  2,4                 ALIGN
&NAME    DS    0H
         ST    &LINKREG,&SVEADDR . SAVE RETURN TO CALLER
         L     R15,PENTRY          LOAD MSG ROUTINE ADDRESS
         BALR  R14,R15             GO PRINT
         AIF   ('&S' NE 'S').MEND
         L     R15,PENTRY          LOAD MSG ROUTINE ADDRESS
         BALR  R14,R15             GO PRINT
.MEND    ANOP
         L     &LINKREG,&SVEADDR . LOAD RETURN TO CALLER
         BR    &LINKREG            RETURN TO CALLER
         MEND
         MACRO
         QINIT &ADDR=AROUND
         SPACE 2
         B     &ADDR                    BRANCH AROUND ID'S
         DC    CL8'&SYSECT'             CSECT ID
         DC    C'-'
         DC    CL8'&SYSDATE'            DATE COMPILED
         DC    C'-'
         DC    CL6'&SYSTIME'            TIME COMPILED
&ADDR    EQU   *
         SPACE 2
         MEND
         MACRO
&NAME    SYSDUMP
*        SDUMP HDR='      --> CONTROL REGION ABEND',
*              SDATA=(CSA,NUC,RGN,TRT,SQA,ALLPSA,SUMDUMP),MF=L
&NAME    SDUMP HDR='      --> CONTROL REGION ABEND',                   *
               SDATA=(CSA,NUC,RGN,TRT,SQA,ALLPSA,SUMDUMP),MF=L
         MEND
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*
*
*                           IEAVADUS
*                        --------------
*
*                         VERSION   5.1
*
*                         SEPT.14, 1982
*
*
*
*        FUNCTION -    TO FORMAT DATA MANAGEMENT CONTROL BLOCKS USING
*                      THE SNAP/ABDUMP EXIT PROVIDED BY IBM.  FOR
*                      DOCUMENTATION ON THIS INTERFACE SEE SUPERVISOR
*                      PERFORMANCE # 1 NEWSLETTER  (VS2.03.805).
*                      TNL GN28-2725 UPDATE TO GC28-0627-1  OS/VS
*                      SYSTEM PROGRAMMING LIBRARY -  JOB MANAGEMENT.
*
*
*        OPERATION -   IEAVADUS OPERATES IN AN ESTAE ENVIRONMENT TO
*                      TRAP OUT ERRORS IN FORMATTING CONTROL BLOCKS.
*
*
*                      ABEND CODE CHECKING IS DONE, AND FOR THE CODES
*                      IN THE TABLE, THE CORE PRINT FOLLOWING THE
*                      FORMATTED CONTROL BLOCKS IS SUPPRESSED.
*                      TO BYPASS SUPPRESSION OF THE DUMP FOR A
*                      PARTICULAR STEP, A SPECIAL DD CARD CAN BE ADDED.
*                      THE DD CARD HAS THE FOLLOWING FORMAT -
*
*                            //SBVABEND DD SYSOUT=A             *** SBV
*
*
*
*                      THE FORMAT OF THE OUTPUT OF THIS ROUTINE IS
*                      BEST DOCUMENTED BY TAKING SAMPLE DUMPS AND
*                      SEEING WHAT YOU GET.   GOOD LUCK.
*
*        COMMENTS  -   IF YOU HAVE ANY PROBLEMS WITH VABDUMP PLEASE
*                      CONTACT ARNOLD CASINGHINO AT THE BELOW
*                      ADDRESS. IF YOU HAVE ANY COMMENTS OR SUGGESTIONS
*                      ON HOW TO IMPROVE THE CODE OR ADDITIONAL
*                      ENHANCEMENTS YOU WOULD LIKE TO SEE PLEASE
*                      FORWARD TO THE BELOW ADDRESS
*                      IF YOU MAKE ANY MODIFICATIONS TO THE CODE
*                      WE WOULD VERY MUCH APPREICATE A COPY OF SAME
*
*                      ARNOLD CASINGHINO
*                      CONNECTICUT BANK & TRUST COMPANY
*                      TECHNICAL SUPPORT SECTION
*                      99 FOUNDERS PLAZA
*                      EAST HARTFORD,
*                      CONNECTICUT   06108
*
*                      1-203-244-4657 OR 1-203-244-4470
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*
*    LAST CHANGES WERE MADE AT JUL 20,81 BY
*                KLAUS HEIDEKRUEGER
*                C/O  SWISS BANK CORPORATION
*                CH - 4000   B A S E L
*                ENGELGASSE 12
*                ABT.  AUTOMATION
*                SWITZERLAND
*
*         TEL.  0041 - 61 - 203122
*
*
*               ALL MODIFICATIONS ARE HIGHLIGHTED WITH *** SBV
*
*              1. SUPPRESS DUMP PRINT IF CC MATCHES
*              1.1. MODIFY DUMP BITS IN DUMP AREA TO GET RID OF MESSAGE
*
*              2. LOAD THE IMS EXIT (RENAMED INTO DFS0905B) REL. 1.1.6.
*
*              3. FORMAT AND PRINT RTMWA
*              3.1. FORMAT INTERRUPT ADDRESS
*              3.2. FORMAT THE STORAGE THE INTERRUPT OCCURED
*                   - 320 UNTIL +320 BYTES.
*
*              4. CHANGE OF ESTAE EXIT AND RETRY ROUTINE,
*                 BECAUSE OF ERROR WITH LOADING REGS.WHEN RETRY
*
*
*              5. IF YOU HAVE INSTALLED THE SU 33, THE EQUATE
*                 'ABDFLAG2' IS CHANGED TO THE PROPER VALUE.
*                 IF NOT CHANGE THE &FLAG2 ON BEGINNING OF CODE !!!
*
*
*          ----------  N O T E  ---------
*
*              THE IMS - EXIT ROUTINE (DFS0905B) SHOULD BE
*              STORED INTO SYS1.LPALIB.
*              THAT SAVES YOU A LOT OF TROUBLE !!!!!!
*
* THIS ROUTINE GAINS CONTROL FROM IEAVAD08 !!!
*
*
*              THE MODUL AND THE CSECT HAS TO BE CALLED LIKE THAT
*              IF YOU WANT TO USE SMP TO IMPLEMENT THE EXIT TO YOUR
*              SYSTEM. IF YOU DON'T CHANGE IT TO IGC0905A.
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
IEAVADUS CSECT
         USING *,R15              TEMP. BASE               *** SBV
         QINIT  ADDR=AROUND                                *** SBV
         DROP   R15                                        *** SBV
         SAVE  (14,12)
         LR    R3,R15
         LA    R5,4095(0,R3)       NEXT BASE ADDR
         LA    R5,1(0,R5)
         USING IEAVADUS,R3,R5
         USING ABDPL,R12              BASE FOR DUMP PARM LIST  *** SBV
         LR    R12,R1                 ESTABLISH BASE           *** SBV
         LR    R2,R1               SAVE PARM ADDR
         LA    R0,SIZE             LOAD GETMAIN SUBPOOL AND LENGTH
         LA    R1,241              SUBPOOL
         SLL   R1,24               TO HOB
         OR    R0,R1               SET TO R0
         SPACE 2
         GETMAIN R,LV=(0)
         ST    R13,4(0,R1)
         SPACE 2
         LR    R13,R1              ADDRESS WORK AREA
         USING WORK,R13
         MVI   OSAM,0              CLEAR FLAG                  *** SBV
         L     R4,ADPLTCB          LOAD TCB ADDR   *** SBV
         L     R11,ADPLBUF         PRINT AREA ADDR   *** SBV
         L     R1,ADPLPRNT         LOAD PRINT ROUTINE ADDR
         ST    R1,PENTRY           SAVE PRINT ROUTINE ADDR
         BAL   R10,DUMPCHK
         BAL   R10,HDRPRINT        GO PRINT HEADERS
         EJECT
*--------------------------------------------------------------------*
*       ESTABLISH RECOVERY (REENTRANT)                               *
*--------------------------------------------------------------------*
    SPACE
  SPACE 2
         MVC   SAVE+12(ESTAELEN),ESTAELST  COPY LIST           *** SBV
         LA    R1,SAVE+12                  PASS ADDR           *** SBV
         ESTAE PARAM=(13),MF=(E,(1))      ISSUE ESTAE        *** SBV
        SPACE
   SPACE 5
         XC    ESTAECNT,ESTAECNT
         LA    R1,RETURN           LOAD RETURN ADDR
         STM   R0,R15,ESTAESAV     SAVE RETURN REGS
         SPACE
         L     R6,8(0,R4)          LOAD ADDR 1ST DEB
         LA    R6,0(0,R6)
         LTR   R6,R6               ANY DEBS
         BNZ   DEBCHK              YES
         SPACE 2
         MVC   0(L'NOCBMSG,R11),NOCBMSG   NO DM CTL BLOCKS
         BAL   R14,ABMSG           PRINT LINE
         SPACE 2
         BAL   R14,ABMSG           PRINT LINE
         EJECT
*--------------------------------------------------------------------*
*        INTERFACE TO IMS DUMP EXIT ROUTINE                          *
*--------------------------------------------------------------------*
   SPACE 2
RETURN  EQU   *
     SPACE 2
         SPACE 3
RETURN1  CLI   CCFLAG,X'00'        BYPASS COMPLETION CODE CHECK
         BE    RETURN3             YES, EXIT            *** SBV
         LA    R6,ABENDTAB         ABEND SUPPRESSION TABLE
         L     R4,ADPLTCB              GET CURRENT TCB ADDR    *** SBV
*
         CLC   TCBCMP(3,R4),SC7        IS IT S 0C7 ?            *** SBV
         BNE   RETURN2                 NO                       *** SBV
         L     R10,ASCBOLD             POINTER IN PSA           *** SBV
         L     R1,ASCBJBNI(R10)        POINT TO JOBNAME FIELD   *** SBV
         LTR   R1,R1                   IS IT ZERO ?             *** SBV
         BNZ   RETURN1A                NO                       *** SBV
         L     R1,ASCBJBNS(R10)        POINT TO JOBNAMEFIELD    *** SBV
RETURN1A CLI   0(R1),C'T'              TEST JOBNAME             *** SBV
         BNE   RETURN3                                          *** SBV
         SPACE 3
RETURN2  CLC   0(3,R6),=F'0'       END OF TABLE ENTRIES
         BE    RETURN3             YES, EXIT
         CLC   0(3,R6),TCBCMP(R4)  COMPLETION CODE MATCH        *** SBV
         BE    RETURN4             YES, BYPASS DUMP
         LA    R6,3(0,R6)          NEXT TABLE ENTRY
         B     RETURN2
         EJECT
RETURN3  MVI   CCFLAG,X'00'        ALLOW REST OF DUMP
         LA    R10,GOIMS    LOAD RETURN ADDR. OF PRINT ROUT.   *** SBV
         B     HDRPRINT              PRINT END HEADER          *** SBV
    SPACE 3
*--------------------------------------------------------------------*
*        INTERFACE TO IMS DUMP EXIT ROUTINE                          *
*--------------------------------------------------------------------*
   SPACE 2
GOIMS    EQU   *
         ESTAE 0                   CANCEL RECOVERY              *** SBV
   SPACE 2
         LOAD  EPLOC=IMSEXIT          LOAD IMS EXIT            *** SBV
         LR    R15,R0                 LOAD EP                 *** SBV
         LR    R1,R12                 LOAD PARM LIST          *** SBV
         BALR  R14,R15                LINK TO IMS EXIT        *** SBV
         LR    R10,R15                SAVE RC                 *** SBV
   SPACE 2
        DELETE EPLOC=IMSEXIT         DELETE IMS EXIT         *** SBV
        SPACE
        SPACE 2
***********************************************************************
* * *          DETERMINE ADDRESS SPACE ABENDING.                  * * *
***********************************************************************
         SPACE
         LTR   R10,R10                RC = 0 FROM IMS EXIT ? *** SBV
         BZ    TERMINAT               YES --> BATCH          *** SBV
   SPACE 2
         L      R15,4(R13)             GET HIGHER SA
         L      R15,28(R15)            GET HIS REG 2
         NI   APFSDATA(R15),255-SDATA NO SDATA TO DUMP          *** SBV
         NI   APFPDATA(R15),255-PDATA NO PDATA TO DUMP          *** SBV
         NI   ABDFLAG2(R15),255-FLAG2 NO SUB (EXEPT STATUS)     *** SBV
         LA    R15,4                  4 = CONTROL REGION     *** SBV
         CLR   R10,R15                                       *** SBV
         BH    TERMINAT               NO DUMP                *** SBV
         MVC    DUMP(ESDUMP),SDUMP     MOVE SDUMP CODE
        SPACE 2
         LA    R1,DUMP                                     *** SBV
         LA    R0,40(R1)     A(TITLE IN GTM-AREA)          *** SBV
         ST    R0,12(R1)     STORE IT INTO PARM LIST       *** SBV
         L     R1,12(R1)    GET TITLE                      *** SBV
         L     R14,PSATOLD-PSA(0) GET CURRENT TCB          *** SBV
         L     R14,TCBCMP-1(R14) GET CC                    *** SBV
         MVC   1(4,R1),=C'SNAP'  MOVE JUST IN CASE         *** SBV
         LA    R14,0(R14)     CLEAR HOB                    *** SBV
         LTR   R14,R14        SNAP ?                       *** SBV
         BZ    SYSD1          YES GO AHEAD                 *** SBV
         LR    R15,R14        SAVE CC                      *** SBV
         SRL   R14,12         CLEAR USER CC                *** SBV
         LTR   R14,R14        SYSTEM ?                     *** SBV
         BNZ   SYSD           YES                          *** SBV
         SPACE
         CVD   R15,DOUBLE     CONVERT USER                 *** SBV
         OI    DOUBLE+7,15    SET SIGN TO F                *** SBV
         UNPK  2(5,R1),DOUBLE+5(3) SAVE INTO TITLE         *** SBV
         MVC   1(2,R1),=C'U '                              *** SBV
         B     SYSD1          GET SVC DUMP                 *** SBV
         SPACE 2
SYSD     EQU   *                                           *** SBV
         STCM  R14,3,1(R1)    SAVE SYSTEM CC               *** SBV
         UNPK  DOUBLE(5),1(3,R1) UNPACK                    *** SBV
*        NC    DOUBLE(4),=X'0F'                            *** SBV
         TR    DOUBLE(4),TAB-240 TRANSLATE                 *** SBV
         MVC   3(3,R1),DOUBLE+1 MOVE INTO TITLE            *** SBV
         MVC   1(2,R1),=C'S '                              *** SBV
    SPACE 2
SYSD1    EQU   *                                           *** SBV
        L      R10,PSAAOLD-PSA(0)     GET CURRENT ASCB     *** SBV
        LH     R10,ASCBASID(R10)      AND ASID             *** SBV
        LA     R1,DUMP               LOAD CODE
        XC     SDECB,SDECB            CLEAR ECB
        LA     R0,SDECB               AND LOAD IT
        SPACE
        SDUMP  ASID=(R10),MF=(E,(1)),ECB=(R0)
        SPACE
        WAIT   ECB=SDECB
        SPACE 2
         SPACE 3
         MVC   0(L'SUPPMSG,R11),SUPPMSG
         BAL   R14,ABMSG           PRINT LINE
         SPACE 3
         MVC   0(L'SDUMPMSG,R11),SDUMPMSG                       *** SBV
         BAL   R14,ABMSG           PRINT LINE
         B     TERMINAT            EXIT
         SPACE 3
RETURN4  MVC   0(L'NODMPMSG,R11),NODMPMSG
         BAL   R14,ABMSG           PRINT LINE
         SPACE 2
         MVC   0(L'SUPPMSG,R11),SUPPMSG
         BAL   R14,ABMSG           PRINT LINE
         SPACE 3
         MVC   0(L'EXPLAIN,R11),EXPLAIN
         BAL   R14,ABMSG           PRINT LINE
   SPACE 2
      SPACE 2
         L    R15,4(R13)              GET HIGHER SA             *** SBV
         L    R15,28(R15)             GET HIS REG 2             *** SBV
         NI   APFSDATA(R15),255-SDATA NO SDATA TO DUMP          *** SBV
         NI   APFPDATA(R15),255-PDATA NO PDATA TO DUMP          *** SBV
         NI   ABDFLAG2(R15),255-FLAG2 NO SUB (EXEPT STATUS)     *** SBV
         B    RETURN3                 BRANCH TO IMS EXIT        *** SBV
   SPACE 2
TERMINAT EQU   *                                             *** SBV
         LA    R0,SIZE             LOAD GETMAIN SUBPOOL AND LENGTH
         LA    R1,241              SUBPOOL
         SLL   R1,24               TO HOB
         OR    R0,R1               SET TO R0
         LR    R1,R13
         L     R13,SAVE+4
   SPACE 2
         FREEMAIN R,LV=(0),A=(1)
   SPACE 2
         SR    R15,R15             ALLWAYS ZERO             *** SBV
         RETURN (14,12),RC=(15)
         EJECT
DUMPCHK  SR    R14,R14
         L     R15,12(0,R4)        TIOT ADDR
         LA    R15,24(0,R15)       DD ENTRIES
         MVI   CCFLAG,X'04'        COMPLETION CODE FLAG SET
         SPACE 3
DUMPCHK1 CLC   4(8,R15),=CL8'SBVABEND'  NO DUMP DD ENTRY      *** SBV
         BE    DUMPCHK4            YES, CONTINUE              *** SBV
         SPACE 3
DUMPCHK2 IC    R14,0(0,R15)        DD ENTRY LENGTH
         LTR   R14,R14             TIOT END
         BZ    TESTTSO             YES, SEE IF TSO          *** SBV
         AR    R15,R14             NEXT ENTRY ADDR
         B     DUMPCHK1
         SPACE 3
         SPACE 3
DUMPCHK4 MVI   CCFLAG,X'00'        SET NO COMP CODE CHECK
         BR    R10                 RETURN                      *** SBV
         SPACE 5
TESTTSO  EQU   *                                               *** SBV
         L     R14,ASCBOLD          GET CURRENT ASCB           *** SBV
         L     R14,ASCBCSCB(R14)    GET CSCB                   *** SBV
         CLI   CSCBTSO(R14),TSO     IS IT TSO USER ?           *** SBV
         BNER  R10                   NO RETURN TO MAIN         *** SBV
         SPACE
         LA    R14,ABENDTAB          GET ABEND TABLE           *** SBV
         LA    R1,ABENDTSO            LAST POINTER             *** SBV
SPECTSO  EQU   *                                               *** SBV
         CLC   TCBCMP(3,R4),0(R14)   SAME CC ?                 *** SBV
         BE    RETURN4               YES RETURN TO SVC 51      *** SBV
         LA    R14,L'ABENDTAB(R14)   GET NEXT ELEMENT          *** SBV
         CR    R14,R1                LAST REACHED ?            *** SBV
         BL    SPECTSO               NO TRY AGAIN              *** SBV
         BR    R10                   RETURN                    *** SBV
         EJECT
DEBCHK   TM    24(R6),X'0F'        DEBID VALID
         BO    DEBCHK3             YES
         SPACE 3
DEBCHK1  MVC   0(L'BADEBMSG,R11),BADEBMSG
         BAL   R14,ABMSG           PRINT LINE
         BAL   R14,ABMSG           PRINT LINE
         SPACE 3
DEBCHK2  L     R6,4(0,R6)          NEXT DEB
         NI    OSAM,255-SETOSAM    CLEAR OSAM FLAG             *** SBV
         LA    R6,0(0,R6)
         LTR   R6,R6               ANY MORE DEBS
         BNZ   DEBCHK              NEXT DEB                    *** SBV
  SPACE 3
        L   R4,ADPLTCB                GET CURRENT TCB ADDR.    *** SBV
        ICM  R2,7,TCBCMP(R4)           GET CMP-CODE            *** SBV
        BZ   RETURN                    NO CC = RETURN          *** SBV
  SPACE 3
         MVC   0(L'RTMHDR,R11),RTMHDR        HEADER
         BAL   R14,ABMSG           PRINT LINE
  SPACE 2
         LA    R2,10                      MAX. 10 RMT2WA      *** SBV
         L     R8,TCBRTWA(R4)             GET RTWA            *** SBV
RTMB     LA    R8,0(R8)                   CLEAR HOB           *** SBV
         LTR   R8,R8                      LAST OR ANY ?       *** SBV
         BZ    STORAGE                    FINISH              *** SBV
         ST    R8,FADDR               ADDR TO DUMP           *** SBV
         SR    R1,R1                                         *** SBV
         ICM    R1,7,9(R8)              GET LENGTH             *** SBV
         SRL   R1,2                   # OF FULLWORDS         *** SBV
         ST    R1,FWORDS              MOVE TO PARM           *** SBV
         BAL   R10,FORMAT             FORMAT AND PRINT       *** SBV
         L     R8,NEXTRTWA(R8)        NEXT RTWA              *** SBV
         BCT   R2,RTMB                BR TO MAINLINE         *** SBV
   SPACE  3
STORAGE   EQU    *
         LA    R1,MSGPRNT              ESTAE RETURN ADDR.     *** SBV
         STM   R0,R15,ESTAESAV         SAVE REG. FOR RETRY    *** SBV
         MVC   SAVECC,TCBCMP-1(R4)     SAVE ORIGN CC          *** SBV
         MVC   0(L'NAMEABND,R11),NAMEABND  MOVE NAME OF PGM   *** SBV
         L     R8,FADDR                 GET ADDR. OF RTMWA2   *** SBV
         CLI   RTM2ABNM(R8),0       ANY JOBNAME PRESENT ?      *** SBV
         BE    NMUNK                NO  SET DEFAULT            *** SBV
         MVC   L'NAMEABND(8,R11),RTM2ABNM(R8) MOVE PGM NAME   *** SBV
STORAGE1 EQU   *
  SPACE 3
         BAL   R14,ABMSG           PRINT LINE
         SPACE 2
         ST    R8,SAVERTM              SAVE RTM2 ADDR         *** SBV
         LR    R10,R8                  LOAD RTM2 ADDR          *** SBV
         L     R8,RTM2NXT1(R8)        GET INTERR. ADDR.       *** SBV
         LTR   R8,R8              ANY CC ?                    *** SBV
         BZ    RETURN             NO  RETURN                  *** SBV
         SR    R15,R15                            *** SBV
         IC    R15,RTM2ILC1(R10)       GET INST. LG             *** SBV
         TM    RTM2ICD1(R10),SEG       SEGMENT OR PAGE         *** SBV
         BO    SEGM                    YES -- DONT SUBSTR.     *** SBV
         SR    R8,R15                  GET INTERR. ADDR         *** SBV
SEGM     EQU   *
   SPACE 2
         ST    R8,FADDR           SAVE INTERRUPT ADDR.         *** SBV
         UNPK  L'AABEND(7,R11),FADDR+1(4)                      *** SBV
         MVI   6+L'AABEND(R11),C' '                            *** SBV
         NC    L'AABEND(6,R11),=8X'0F'                         *** SBV
         TR    L'AABEND(6,R11),TAB       TRANS INTERR. ADDR.    *** SBV
         MVC   0(L'AABEND,R11),AABEND     MOVE CONSTANT        *** SBV
    SPACE 2
         BAL   R14,ABMSG           PRINT LINE
    SPACE 2
         CLI   RTM2ICD1(R10),C7        IS IT S 0C7?             *** SBV
         BNE   NO0C7                   NO                       *** SBV
         CLI   0(R8),X'F7'             ZAP ?                    *** SBV
         BL    NO0C77                  MUST BE DIFF.            *** SBV
         SPACE 2
         MVC   0(L'S0C7,R11),S0C7      MOVE CONST.              *** SBV
         BAL   R14,ABMSG           PRINT LINE
         SPACE 2
         MVC   0(L'S0C7OP,R11),S0C7OP  MOVE TITLE               *** SBV
         MVI   1+L'S0C7OP(R11),X'F1'                            *** SBV
         SR    R15,R15                                          *** SBV
         IC    R15,1(R8)               GET LENGTH               *** SBV
         SRL   R15,4                   ELIMIN. 2. LENGTH        *** SBV
         BAL   R14,CONVLG              CONVERT                  *** SBV
         SPACE 2
         BAL   R14,ABMSG1          PRINT LINE
         SPACE 2
         SR    R14,R14                                          *** SBV
         ICM   R14,3,2(R8)             A(1.OP)                  *** SBV
         SRL   R14,12                                           *** SBV
         SLL   R14,2                   * 4 = BYTES              *** SBV
         LA    R0,RTM2ER0(R10)         A(REG0)                  *** SBV
         AR    R14,R0                  A(RX)                    *** SBV
         SR    R0,R0                                            *** SBV
         ICM   R0,3,2(R8)              GET DISPL.               *** SBV
         SLL   R0,20                   ELIM. REG.               *** SBV
         SRL   R0,20                   ONLY DISPL.              *** SBV
         L     R14,0(R14)              LOAD REG A(1.OP)         *** SBV
         AR    R14,R0                                           *** SBV
         ST    R14,FADDR               SAVE FOR FORMAT          *** SBV
         LA    R0,3                    FORMAT 3 WORDS           *** SBV
         ST    R0,FWORDS                                        *** SBV
         ST    R10,SAVERTM             SAVE A(INSTR.)           *** SBV
         BAL   R10,FORMAT              FORMAT                   *** SBV
         SPACE 2
         MVC   0(L'S0C7OP,R11),S0C7OP  MOVE TITLE               *** SBV
         MVI   1+L'S0C7OP(R11),X'F2'                            *** SBV
         SR    R15,R15                                          *** SBV
         IC    R15,1(R8)               GET LENGTH               *** SBV
         SLL   R15,28                  ELIM. 1. LENGTH          *** SBV
         SRL   R15,28                                           *** SBV
         BAL   R14,CONVLG              CONVERT                  *** SBV
         SPACE 2
         BAL   R14,ABMSG           PRINT LINE
         SPACE 2
         SPACE 2
         SR    R14,R14                                          *** SBV
         ICM   R14,3,4(R8)             GET SEC. OP              *** SBV
         L     R10,SAVERTM             GET RMT2                 *** SBV
         SRL   R14,12                  ELIM. DISPL.             *** SBV
         SLL   R14,2                   * 4 BYTES                *** SBV
         LA    R0,RTM2ER0(R10)         A(REGS.)                 *** SBV
         AR    R14,R0                  GET SPEC.REG.            *** SBV
         SR    R0,R0                                            *** SBV
         ICM   R0,3,4(R8)              GET DISPL.               *** SBV
         SLL   R0,20                   ELIM.REG.                *** SBV
         SRL   R0,20                   ONLY DISPL.              *** SBV
         L     R14,0(R14)              GET ADDR.                *** SBV
         AR    R14,R0                  GET 2.OP.                *** SBV
         ST    R14,FADDR               FOR FORMAT               *** SBV
         LA    R0,3                    FORMAT 3 WORDS           *** SBV
         ST    R0,FWORDS                                        *** SBV
         BAL   R10,FORMAT              FORMAT IT                *** SBV
         SPACE 2
NO0C7    EQU   *                                                *** SBV
         MVC   0(L'STORABND,R11),STORABND     STORAGE RANGE   *** SBV
         BAL   R14,ABMSG           PRINT LINE
         SPACE 2
         LA    R10,320                 GET 320 BYTES BEFORE     *** SBV
         SR    R8,R10             A(320 BYTES BEFORE)         *** SBV
         BM    RETURN             OUT OF RANGE                *** SBV
         ST    R8,FADDR           STORE FOR FORMAT            *** SBV
         SRL   R10,1              # FW * 2                    *** SBV
         ST    R10,FWORDS         FOR FORMAT                  *** SBV
         BAL   R10,FORMAT         FORMAT STORAGE RANGE        *** SBV
         B     RETURN             RETURN                      *** SBV
    SPACE 3
MSGPRNT  EQU   *                                              *** SBV
         L     R4,ADPLTCB         GET CURRENT TCB ADDR.       *** SBV
         MVC   TCBCMP-1(4,R4),SAVECC   RESTORE CC             *** SBV
        B     RETURN                                          *** SBV
   SPACE 2
NO0C77   EQU   *                                                *** SBV
         MVI   CCFLAG,0                AS 'SBVABEND' DEF.       *** SBV
         B     NO0C7                                            *** SBV
         SPACE 2
NMUNK    EQU   *                                               *** SBV
         MVC   L'NAMEABND(L'MODUNK,R11),MODUNK    MOVE DEFAULT *** SBV
         B     STORAGE1                                        *** SBV
    EJECT
DEBCHK3  L     R7,24(0,R6)         DCB ADDR
         LA    R7,0(0,R7)
         LTR   R7,R7
         BZ    DEBCHK1             NO DCB ADDR, ERROR MSG
         L     R10,=F'-20'         - 20 FOR CALC.              *** SBV
         AR    R10,R6              A(OSAM)                     *** SBV
         CLC   0(4,R10),COSAM      CONSTANT OSAM ?             *** SBV
         BE    ISOSAM              YES SET BIT                 *** SBV
   SPACE
         CLC   152(L'DFSAOS,R7),DFSAOS  OSAM DCB ?           *** SBV
         BNE   NOOSAM              YES CANT BE OSAM          *** SBV
         L     R10,44(R7)          LOAD OSAM DEB              *** SBV
         LA    R10,0(R10)          CLEAR HOB                  *** SBV
         CLR   R10,R6              SAME DEB ?                 *** SBV
         BE    NOOSAM              YES MUST BE THE SAME       *** SBV
   SPACE
ISOSAM   OI    OSAM,SETOSAM        INDICATE OSAM             *** SBV
         SPACE
NOOSAM   EQU   *
         BAL   R10,ESTAESET        SET UP ESTAE RETURN
         BAL   R10,DDFORM          FORMAT DD INFO
         SPACE
         BAL   R10,ESTAESET        SET UP ESTAE RETURN
         BAL   R10,DEBFORM         FORMAT DEB
         SPACE
         BAL   R10,ESTAESET        SET UP ESTAE RETURN
         BAL   R10,DCBFORM         FORMAT DCB
         SPACE
         BAL   R10,ESTAESET
         BAL   R10,JFCBFORM        GO FORMAT JFCB
         SPACE
         BAL   R10,ESTAESET        SET UP ESTAE RETURN
         BAL   R10,UCBFORM         FORMAT UCB
         SPACE
         BAL   R10,ESTAESET
         BAL   R10,RECFORM         GO FORMAT CURRENT RECORD
         SPACE
         CLI   0(R7),X'A0'         ACB
         BE    DEBCHK4             YES, NO IOB MSG
         TM    26(R7),X'62'        PS, DA, OR PO
         BZ    DEBCHK4             NO, NO IOB MSG
         TM    OSAM,SETOSAM        IS IT OSAM ?                *** SBV
         BO    DEBCHK2             YES DONT FORMAT IOB         *** SBV
   SPACE
         BAL   R10,ESTAESET        SET UP ESTAE RETURN
         BAL   R10,IOBFORM         FORMAT IOB
   SPACE
         BAL   R14,ABMSG           PRINT LINE
         B     DEBCHK2
         SPACE 3
DEBCHK4  MVC   0(L'IOBHDR,R11),IOBHDR
         BAL   R14,ABMSG           PRINT LINE
         MVC   0(L'NOIOBMSG,R11),NOIOBMSG
         BAL   R14,ABMSG           PRINT LINE
         BAL   R14,ABMSG           PRINT LINE
         BAL   R14,ABMSG           PRINT LINE
         B     DEBCHK2             NEXT DEB
         EJECT
DDFORM   LH    R2,40(0,R7)         TIOT OFFSET
         SR    R8,R8               CLEAR UCB ADDR
         MVC   DDMSG,DDMSGX
         MVC   DCBMSG,DCBMSGX
         MVC   EXTMSG,EXTMSGX
         MVC   UNITMSG,UNITMSGX
         MVC   CCHHMSG,CCHHMSGX
         LTR   R2,R2
         BP    DDFORM1             DCB OPEN, CONTINUE
         MVC   0(L'DDNOPMSG,R11),DDNOPMSG
         BAL   R14,ABMSG           PRINT LINE
         B     DDFORM5             GO FORMAT DCB INFO
         SPACE 3
DDFORM1  L     R1,12(0,R4)         TIOT ADDR
         LA    R2,0(R2,R1)         OFFSET INTO TIOT
         MVC   DDNAME(8),4(R2)     DDNAME TO MSG
         MVC   RECLEN(4),=6C'*'
         MVC   LRECL(5),=6C'*'
         MVC   BLKSIZE(5),=6C'*'
         XC    JFCBADDR,JFCBADDR
         MVC   JFCBADDR+1(3),12(R2) SAVE JFCB ADDR
         L     R1,JFCBADDR         LOAD JFCB ADDR
         LTR   R1,R1               ANY JFCB PRESENT
         BZ    DDFORM1A            NO,BYPASS PRINT
         LA    R1,16(0,R1)         POINT TO REAL JFCB START
         ST    R1,JFCBADDR         SAVE ACTUAL ADDR
         MVC   DSNAME(44),0(R1)    MOVE DSNAME TO MSG
         LH    R14,104(0,R1)       LRECL
         CVD   R14,DOUBLE
         UNPK  LRECL(5),DOUBLE+5(3)
         OI    LRECL+4,X'F0'
         LH    R14,102(0,R1)       BLKSIZE
         CVD   R14,DOUBLE
         UNPK  BLKSIZE(5),DOUBLE+5(3)
         OI    BLKSIZE+4,X'F0'
         EJECT
DDFORM1A TM    3(R2),X'02'         SUB-SYS DATASET
         BZ    DDFORM2             NO, CONTINUE
         MVC   DDUNIT,=C'JES'
         MVC   DDVOL,=C'IN/OUT'
         B     DDFORM5             GO FORMAT DCB INFO
         SPACE 3
DDFORM2  TM    3(R2),X'10'         DD DYNAM
         BZ    DDFORM3             NO, CONTINUE
         MVC   DDUNIT,=C'DYN'
         MVC   DDVOL,=CL6'ALLOC'
         B     DDFORM5             GO FORMAT DCB INFO
         EJECT
DDFORM3  CLC   18(2,R2),=X'0000'   DUMMY
         BNE   DDFORM4             NO, CONTINUE
         MVC   DDUNIT,=C'***'
         MVC   DDVOL,=CL6'DUMMY'
         B     DDFORM5             GO FORMAT DCB INFO
         SPACE 3
DDFORM4  MVI   DDUNIT,X'FF'        INDICATE REAL UNIT TO PROCESS
         SPACE 3
DDFORM5  MVC   DSORG,=C'PS'
         TM    26(R7),X'40'        PS
         BO    DDFORM6
         MVC   DSORG,=C'PO'
         TM    26(R7),X'02'        PO
         BO    DDFORM6
         MVC   DSORG,=C'IS'
         TM    26(R7),X'80'        IS
         BO    DDFORM6
         MVC   DSORG,=C'DA'
         TM    26(R7),X'20'        DA
         BO    DDFORM6
         MVC   DSORG,=C'CX'
         TM    26(R7),X'10'        CX
         BO    DDFORM6
         MVC   DSORG,=C'AM'
         TM    26(R7),X'08'        AMB
         BO    DDFORM6
         MVC   DSORG,=C'TX'
         TM    27(R7),X'40'        TX
         BO    DDFORM6
         MVC   DSORG,=C'TQ'
         TM    27(R7),X'20'        TQ
         BO    DDFORM6
         MVC   DSORG,=C'TR'
         TM    27(R7),X'04'        TR
         BO    DDFORM6
         MVC   DSORG,=C'AC'
         TM    27(R7),X'08'        ACB
         BO    DDFORM6
         MVC   DSORG,=C'**'
         EJECT
DDFORM6  CLI   0(R7),X'A0'         ACB
         BE    DDFORMA1            YES, GO PROCESS
         MVI   RECFM,C'*'          SET DEFAULT RECFM
         CLI   0(R7),X'40'         AMB
         BE    DDFORMA3
         TM    36(R7),X'C0'
         BZ    DDFORM7             NO RECFM
         MVI   RECFM,C'U'          UNDEFINED
         BO    DDFORM7
         MVI   RECFM,C'F'          FIXED
         TM    36(R7),X'80'
         BO    DDFORM7
         MVI   RECFM,C'V'          VARIABLE
         SPACE 3
DDFORM7  LA    R1,RECFM+1          POINT TO NEXT BYTE
         TM    36(R7),X'10'        BLOCKED
         BZ    DDFORM8             NO
         LA    R1,RECFM+2
         MVI   RECFM+1,C'B'
         SPACE 3
DDFORM8  MVI   0(R1),C'S'
         TM    36(R7),X'08'        SPANNED
         BO    DDFORM9
         MVI   0(R1),C'A'
         TM    36(R7),X'04'        ASA
         BO    DDFORM9
         MVI   0(R1),C'M'
         TM    36(R7),X'02'        MACHINE
         BO    DDFORM9
         MVI   0(R1),C' '
         EJECT
DDFORM9  TM    26(R7),X'C2'        PS,PO,IS
         BZ    DDFORM9A
         LH    R2,82(0,R7)         LRECL
         CVD   R2,DOUBLE
         UNPK  RECLEN(5),DOUBLE+5(3)
         OI    RECLEN+4,X'F0'
         TM    26(R7),X'40'        PS
         BZ    DDFORM9A
         MVC   EROPT(3),=C'ACC'
         TM    84(R7),X'80'        ACC
         BO    DDFORM9A
         MVC   EROPT(3),=C'SKP'
         TM    84(R7),X'40'        SKP
         BO    DDFORM9A
         MVC   EROPT(3),=C'ABE'
         SPACE 3
DDFORM9A SR    R2,R2
         IC    R2,20(0,R7)         BUFNO
         CVD   R2,DOUBLE
         UNPK  BUFNO(2),DOUBLE+6(2)
         OI    BUFNO+1,X'F0'
         LH    R2,24(0,R7)         BUFL
         CVD   R2,DOUBLE
         UNPK  BUFL(5),DOUBLE+5(3)
         OI    BUFL+4,X'F0'
         SPACE 3
DDFORM10 SR    R1,R1
         IC    R1,16(0,R6)         # OF EXTENTS
         CVD   R1,DOUBLE
         UNPK  EXTENT(2),DOUBLE+6(2)
         OI    EXTENT+1,X'F0'
         SPACE 3
DDFORM11 CLI   42(R7),X'00'        INPUT
         BE    DDFORM12            NO, TRY OUTPUT
         TM    42(R7),X'80'        EXCP
         BO    DDFORM14
         TM    42(R7),X'40'        QSAM,QISAM,TCAM,QTAM
         BO    DDFORM15
         TM    42(R7),X'20'        BSAM,BPAM,BISAM,BDAM,BTAM
         BO    DDFORM16
         EJECT
DDFORM12 CLI   43(R7),X'00'        OUTPUT
         BE    DDFORM13            NO, UNKNOWN
         TM    43(R7),X'40'        QSAM,QISAM,TCAM,QTAM
         BO    DDFORM15
         TM    43(R7),X'20'        BSAM,BPAM,BISAM,BDAM,BTAM
         BO    DDFORM16
         SPACE 3
DDFORM13 MVC   MACRF(5),=C'*UNK*'
         B     DDFORM20
         SPACE 3
DDFORM14 MVC   MACRF(5),COSAM      SET OSAM                   *** SBV
         TM    OSAM,SETOSAM        IS IT OSAM ?               *** SBV
         BO    DDFORM20            YES                        *** SBV
         MVC   MACRF(5),=CL5'EXCP'
         B     DDFORM20
         SPACE 3
DDFORM15 MVC   MACRF(5),=CL5'QSAM'
         TM    26(R7),X'40'        PS
         BO    DDFORM30
         MVC   MACRF(5),=CL5'QISAM'
         TM    26(R7),X'80'        IS
         BO    DDFORM40
         MVC   MACRF(5),=CL5'QTAM'
         TM    26(R7),X'10'        CX
         BO    DDFORM20
         MVC   MACRF(5),=CL5'TCAM'
         TM    27(R7),X'64'        TX,TQ,TR
         BNZ   DDFORM20
         B     DDFORM13
         SPACE 3
DDFORM16 MVC   MACRF(5),=CL5'BSAM'
         TM    26(R7),X'40'        PS
         BO    DDFORM30
         MVC   MACRF(5),=CL5'BPAM'
         TM    26(R7),X'02'        PO
         BO    DDFORM30
         MVC   MACRF(5),=CL5'BISAM'
         TM    26(R7),X'80'        IS
         BO    DDFORM40
         MVC   MACRF(5),=CL5'BDAM'
         TM    26(R7),X'20'        DA
         BO    DDFORM50
         MVC   MACRF(5),=CL5'BTAM'
         TM    26(R7),X'10'        CX
         BO    DDFORM20
         B     DDFORM13
         EJECT
DDFORM20 UNPK  OPTCD(3),52(2,R7)
         NC    OPTCD(2),=8X'0F'
         TR    OPTCD(2),TAB
         MVI   OPTCD+2,C' '
         B     DDFORMMS
         SPACE 3
DDFORM30 LA    R1,PSOPTCD
         B     DDFORM60
         SPACE 3
DDFORM40 LA    R1,ISOPTCD
         B     DDFORM60
         SPACE 3
DDFORM50 LA    R1,DAOPTCD
         B     DDFORM60
         EJECT
DDFORM60 LA    R2,8                MAX NO. OF BITS
         LA    R9,OPTCD            OPTCD OUTPUT AREA
         ST    R1,OPTTAB           SAVE ADDR OF OPTCD TABLE
         MVI   OPTCD,C'0'          DEFAULT OPTCD
         SR    R14,R14
         SR    R15,R15
         IC    R14,52(0,R7)        DCBOPTCD
         SPACE 3
DDFORM61 SRDL  R14,1               SHIFT 1 BIT INTO REG 15
         LTR   R15,R15             WAS BIT ON
         BNZ   DDFORM62            YES, CONTINUE
         BCT   R2,DDFORM61         CHECK NEXT
         B     DDFORMMS
         SPACE 3
DDFORM62 LA    R15,8
         SR    R15,R2
         L     R1,OPTTAB           LOAD ADDR OF OPTCD TABLE
         LA    R1,0(R1,R15)        POINT TO PRINT OPTCD
         MVC   0(1,R9),0(R1)
         LA    R9,1(0,R9)          NEXT OPTCD PRINT POSITION
         SR    R15,R15
         BCT   R2,DDFORM61         CHECK NEXT
         B     DDFORMMS
         EJECT
DDFORM70 SR    R2,R2
         IC    R2,16(0,R6)         # OF EXTENTS
         LTR   R2,R2               ZERO EXTENTS
         BCR   8,R10               YES, EXIT
         LA    R9,32(0,R6)         1ST EXTENT
         TM    26(R7),X'80'        ISAM
         BZ    DDFORM71            NO
         LA    R9,16(0,R9)         1ST ISAM EXTENT
         BCTR  R2,0                ADJUST # OF EXTENTS
         LTR   R2,R2               ZERO EXTENTS
         BCR   8,R10               YES, EXIT
         SPACE 3
DDFORM71 SR    R8,R8
         IC    R8,2(0,R9)          LOAD
         SLL   R8,8                   UCB
         IC    R8,3(0,R9)                ADDR
         MVC   DDUNIT,13(R8)       UNIT ADDR
         MVC   DDVOL(6),=6C'*'
         LA    R1,DEVTAB           DEVICE TABLE ADDR
         MVI   TPSW,X'00'          CLEAR TP SWITCH
         TM    18(R8),X'50'        COMM OR GRAPHICS
         BZ    DDFORM72            NO, CONTINUE
         MVI   TPSW,X'FF'          SET TP SWITCH
         MVC   DDDEVT(8),=CL8'COMM'
         TM    18(R8),X'40'        COMM
         BO    DDFORM74            YES, CONTINUE
         MVC   DDDEVT(8),=CL8'GRAPHICS'
         B     DDFORM74
         SPACE 3
         EJECT
DDFORM72 CLC   0(4,R1),16(R8)      MATCH DEVTYPE
         BE    DDFORM73            YES, CONTINUE
         LA    R1,L'DEVTAB(R1)     NEXT TABLE ENTRY
         CLC   0(4,R1),=F'0'       END OF TABLE
         BNE   DDFORM72            NO, CHECK NEXT
         MVC   DDDEVT(8),=CL8'UNKNOWN'
         B     DDFORM74
         SPACE 3
DDFORM73 MVC   DDDEVT(8),4(R1)
         TM    18(R8),X'A0'        TAPE OR DISK
         BZ    DDFORM74            NO, NO VOLSER
         MVC   DDVOL(6),28(R8)
         SPACE 3
DDFORM74 MVC   0(72,R11),UNITMSG
         TM    18(R8),X'20'        DISK
         BO    DDFORM76
         SPACE 3
DDFORM75 EQU   *
         BAL   R14,ABMSG           PRINT LINE
         LA    R9,4(0,R9)          NEXT NON-DASD EXTENT
         TM    18(R8),X'20'        DASD UCB
         BZ    *+8                 NO
         LA    R9,12(0,R9)         NEXT DASD EXTENT
         BCT   R2,DDFORM71
         BAL   R14,ABMSG           PRINT LINE
         BR    R10
         EJECT
DDFORM76 TM    18(R8),X'20'        DISK
         BZ    DDFORM75            NO, EXIT
         UNPK  CCHH(9),6(5,R9)
         MVI   CCHH+8,C'-'
         NC    CCHH(8),=8X'0F'
         TR    CCHH(8),TAB
         UNPK  CCHH+9(9),10(5,R9)
         MVI   CCHH+17,C' '
         NC    CCHH+9(8),=8X'0F'
         TR    CCHH+9(8),TAB
         LA    R1,19               TRACKS PER CYLINDER
         CLI   19(R8),X'09'        3330                      *** SBV
         BE    DDFORM77                                      *** SBV
         CLI   19(R8),X'0D'        3330-1                    *** SBV
         BE    DDFORM77                                      *** SBV
         LA    R1,30               30 TRKS PER CYL             *** SBV
         CLI   19(R8),X'0B'                   3350 ?           *** SBV
         BE    DDFORM77                       YES              *** SBV
         B     DDFORM75
         SPACE 3
DDFORM77 LH    R14,14(0,R9)        LOAD NUMBER OF TRKS IN EXTENT
         SRDL  R14,32              SHIFT AND CLEAR FOR DIVIDE
         DR    R14,R1              CALCULATE CYLS AND TRKS
         CVD   R15,DOUBLE          CYLS
         UNPK  CYLS(3),DOUBLE+6(2)
         OI    CYLS+2,X'F0'
         CVD   R14,DOUBLE          TRKS
         UNPK  TRKS(2),DOUBLE+6(2)
         OI    TRKS+1,X'F0'
         MVC   72(48,R11),CCHHMSG
         B     DDFORM75
         EJECT
DDFORMMS MVC   0(80,R11),DDMSG
         BAL   R14,ABMSG           PRINT LINE
         MVC   0(88,R11),EXTMSG
         BAL   R14,ABMSG           PRINT LINE
         CLI   TPSW,X'FF'          TP DEVICE
         BE    DDFORMM1            YES, NO DCB MSG
         MVC   0(90,R11),DCBMSG
         BAL   R14,ABMSG           PRINT LINE
         SPACE 3
DDFORMM1 EQU   *
         CLI   DDUNIT,X'FF'        DEB EXTENT FORMAT
         BE    DDFORM70            YES, CONTINUE
         MVC   0(72,R11),UNITMSG
         BAL   R14,ABMSG           PRINT LINE
         BAL   R14,ABMSG           PRINT LINE
         BAL   R14,ABMSG           PRINT LINE
         BR    R10
         EJECT
DDFORMA1 MVI   RECFM,C'J'
         TM    24(R7),X'80'        JES FORMAT
         BO    DDFORMA2
         MVI   RECFM,C'*'
         SPACE 3
DDFORMA2 MVI   RECFM+1,C'A'
         TM    25(R7),X'04'        ASA
         BO    DDFORMA3
         MVI   RECFM+1,C'M'
         TM    25(R7),X'02'        MACHINE
         BO    DDFORMA3
         MVI   RECFM+1,C' '
         SPACE 3
DDFORMA3 MVC   BUFNO(2),=6C'*'
         MVC   BUFNO(2),=6C'*'
         MVC   BUFL(5),=6C'*'
         MVC   OPTCD(4),=6C'*'
         MVC   DDDEVT(4),=6C'*'
         MVC   EROPT(3),=6C'*'
         CLI   RECFM,C'*'          FILLED IN
         BNE   DDFORMA4
         MVI   RECFM,C'V'          VSAM
         EJECT
DDFORMA4 SR    R1,R1
         IC    R1,16(0,R6)         # OF EXTENTS
         CVD   R1,DOUBLE
         UNPK  EXTENT(2),DOUBLE+6(2)
         OI    EXTENT+1,X'F0'
         SPACE 3
DDFORMA5 MVC   MACRF(5),=CL5'VTAM'
         CLI   43(R7),X'60'
         BE    DDFORMMS
         MVC   MACRF(5),=CL5'SBSYS'
         CLI   43(R7),X'41'
         BE    DDFORMMS
         MVC   MACRF(5),=CL5'TCAM'
         CLI   43(R7),X'31'
         BE    DDFORMMS
         MVC   MACRF(5),=CL5'JRCI'
         CLI   43(R7),X'23'
         BE    DDFORMMS
         MVC   MACRF(5),=CL5'JRTAM'
         CLI   43(R7),X'22'
         BE    DDFORMMS
         MVC   MACRF(5),=CL5'JJAM'
         CLI   43(R7),X'21'
         BE    DDFORMMS
         MVC   MACRF(5),=CL5'VSAM'
         CLI   43(R7),X'11'
         BE    DDFORMMS
         MVC   MACRF(5),=CL5'*UNK*'
         B     DDFORMMS
         EJECT
DEBFORM  ST    R6,FADDR
         TM    OSAM,SETOSAM       IS IT OSAM ?               *** SBV
         BNO   NOOSAM1            NO  CONTINUE               *** SBV
         L     R1,44(R7)          LOAD OSAM - DEB            *** SBV
         LA    R0,20              A(OSAMDEB) - 20            *** SBV
         SR    R1,R0              SET ADDR. TO FORMAT        *** SBV
         SRL   R0,2               DEVIDE BY 4 = FW           *** SBV
         ST    R1,FADDR           SET A TO FORMAT            *** SBV
NOOSAM1  EQU   *
   SPACE
         SR    R1,R1
         IC    R1,16(0,R6)         NO. OF EXTENTS
         SLL   R1,2                TIMES 4
         LA    R1,9(0,R1)          ADD BASE DEB LENGTH
         TM    26(R7),X'80'        ISAM
         BZ    *+8                 NO, BYPASS
         LA    R1,4(0,R1)          ADD ISAM SECTION WORDS
         TM    OSAM,SETOSAM        OSAM ?                     *** SBV
         BNO   NOOSAM2             NO                         *** SBV
         AR    R1,R0               SET TOTAL LENGTH TO FORMAT *** SBV
NOOSAM2  EQU   *
         ST    R1,FWORDS           SAVE # OF WORDS
         MVC   0(L'DEBHDR,R11),DEBHDR
         BAL   R14,ABMSG           PRINT LINE
         B     FORMAT
         EJECT
JFCBFORM L     R1,JFCBADDR         LOAD JFCB ADDR
         LTR   R1,R1               ANY JFCB ADDR
         BCR   8,R10               NO, EXIT
         ST    R1,FADDR
         MVC   FWORDS(4),=F'44'
         MVC   0(L'JFCBHDR,R11),JFCBHDR
         BAL   R14,ABMSG           PRINT LINE
         B     FORMAT              GO FORMAT JFCB
         EJECT
DCBFORM  ST    R7,FADDR
         CLI   0(R7),X'A0'         ACB
         BE    ACBFORM             YES, GO PROCESS
         CLI   0(R7),X'40'         AMB
         BE    ACBFORM             YES, GO PROCESS
         LA    R1,26
         TM    26(R7),X'80'        ISAM DCB =26 WORDS
         BO    DCBFORM1
         LA    R1,63
         TM    26(R7),X'20'        BDAM DCB =63 WORDS
         BO    DCBFORM1
         LA    R1,24               NORMAL DCB =24 WORDS
         SPACE 3
DCBFORM1 ST    R1,FWORDS
         MVC   0(L'DCBHDR,R11),DCBHDR
         BAL   R14,ABMSG           PRINT LINE
         B     FORMAT
         EJECT
ACBFORM  ST    R7,FADDR            SAVE ACB ADDR
         SR    R1,R1
         IC    R1,2(0,R7)          LOAD
         SLL   R1,8                   ACB
         IC    R1,3(0,R7)                LENGTH
         SRL   R1,2                DIVIDE BY 4
         ST    R1,FWORDS           # OF WORDS
         MVC   0(L'ACBHDR,R11),ACBHDR
         CLI   0(R7),X'40'         AMB
         BNE   ACBFORM1            NO, ACB
         MVC   0(L'AMBHDR,R11),AMBHDR
         SPACE 3
ACBFORM1 EQU   *
         BAL   R14,ABMSG           PRINT LINE
         B     FORMAT
         EJECT
UCBFORM  ST    R10,UCBSAV10
         MVC   0(L'UCBHDR,R11),UCBHDR
         BAL   R14,ABMSG           PRINT LINE
         XC    FADDR(4),FADDR
         SR    R2,R2
         IC    R2,16(0,R6)         # OF EXTENTS
         LTR   R2,R2               ZERO EXTENTS
         BZ    UCBFORM3            YES, EXIT
         LA    R8,32(0,R6)         1ST EXTENT
         TM    26(R7),X'80'        ISAM
         BZ    UCBFORMA            NO
         LA    R8,16(0,R8)         1ST ISAM EXTENT
         BCTR  R2,0                ADJUST # OF EXTENTS
         LTR   R2,R2               ZERO EXTENTS
         BZ    UCBFORM3            YES, EXIT
         SPACE 3
UCBFORMA SR    R1,R1
         IC    R1,2(0,R8)          LOAD
         SLL   R1,8                   UCB
         IC    R1,3(0,R8)                ADDR
         C     R1,FADDR            UCB ADDR MATCH
         BE    UCBFORM2            YES, BYPASS FORMAT
         ST    R1,FADDR
         LA    R15,12              # OF WORDS
         TM    18(R1),X'A0'        TAPE OR DISK
         BNZ   UCBFORM1
         LA    R15,7               # OF WORDS
         TM    18(R1),X'08'        UNIT RECORD
         BNZ   UCBFORM1
         LA    R15,10              DEFAULT # OF WORDS
         EJECT
UCBFORM1 ST    R15,FWORDS
         BAL   R10,FORMAT
         SPACE 3
UCBFORM2 SR    R1,R1
         IC    R1,2(0,R8)          LOAD
         SLL   R1,8                   UCB
         IC    R1,3(0,R8)                ADDR
         LA    R8,4(0,R8)          NEXT NON-DASD EXTENT
         TM    18(R1),X'20'        DASD UCB
         BZ    *+8                 NO
         LA    R8,12(0,R8)         NEXT DASD EXTENT
         BCT   R2,UCBFORMA         CHECK NEXT
         L     R10,UCBSAV10
         BR    R10
         SPACE 3
UCBFORM3 MVC   0(L'NOUCBMSG,R11),NOUCBMSG
         BAL   R14,ABMSG           PRINT LINE
         BAL   R14,ABMSG           PRINT LINE
         BR    R10
         EJECT
RECFORM  CLC   MACRF(4),=C'QSAM'   QSAM FILE
         BCR   7,R10               NO, EXIT
         LH    R2,82(0,R7)         LRECL
         LTR   R2,R2               LRECL 0
         BCR   8,R10               YES, EXIT
         SRL   R2,2
         LA    R2,2(0,R2)          ADJUST DISPLAY LENGTH
         L     R9,76(0,R7)         LOAD RECORD ADDRESS
         LA    R9,0(0,R9)
         LTR   R9,R9               ZERO ADDRESS
         BCR   8,R10               YES, EXIT
         CH    R9,=H'1'            ADDRESS EQUAL 1
         BCR   8,R10               YES, EXIT
         ST    R2,FWORDS           SAVE # OF WORDS
         ST    R9,FADDR            SAVE DUMP ADDR
         LRA   R14,0(0,R9)         VERIFY RECORD START
         BZ    RECFORM1            ADDRESS O.K.
         SPACE 3
RECFORM0 SH    R9,82(0,R7)         BACK UP 1 RECORD
         LRA   R14,0(0,R9)         VERIFY RECORD START
         BCR   7,R10               EXIT IF BAD
         EJECT
RECFORM1 LA    R15,0(0,R2)         LOAD
         SLL   R15,2                  ADJUSTED RECORD LENGTH
         LA    R14,0(0,R9)         LOAD
         SRL   R14,2                  ADJUSTED
         SLL   R14,2                     RECORD ADDRESS
         LA    R15,0(R14,R15)      POINT TO LAST BYTE
         BCTR  R15,0                  TO BE DISPLAYED
         LRA   R14,0(0,R15)        VERIFY ADDRESS
         BZ    RECFORM2            ADDRESS O.K.
         SH    R15,=H'4'           ADJUST ADDRESS AND LENGTH
         BCTR  R2,0                   BACK 4 BYTES
         LRA   R14,0(0,R15)        VERIFY ADDRESS
         BZ    RECFORM2            ADDRESS O.K.
         SH    R15,=H'4'           ADJUST ADDRESS AND LENGTH
         BCTR  R2,0                   BACK 4 BYTES
         LRA   R14,0(0,R15)        VERIFY ADDRESS
         BNZ   RECFORM3            ADDRESS NO GOOD
         SPACE 3
RECFORM2 ST    R2,FWORDS           # OF WORDS
         ST    R9,FADDR            DUMP ADDR
         MVC   0(L'RECHDR,R11),RECHDR
         BAL   R14,ABMSG           PRINT LINE
         B     FORMAT
         SPACE 3
RECFORM3 L     R2,FWORDS           RELOAD # OF WORDS
         C     R9,FADDR            PREVIOUS RECORD TRIED YET
         BE    RECFORM0            NO, GO TRY IT
         BR    R10                 YES, EXIT
         EJECT
IOBFORM  SR    R2,R2
         IC    R2,20(0,R7)         # OF BUFFERS
         LTR   R2,R2               ANY BUFFERS
         BNZ   *+8                 YES, BYPASS ADJUST
         LA    R2,1                FORCE 1
         MVC   FWORDS(4),=F'14'    # OF WORDS
         L     R1,28(0,R7)         IOB ADDR
         MVI   ICBSW,X'FF'         CHAINED SCHEDULING
         CLI   20(R7),X'05'        BUFNO=5
         BNL   IOBFORM1            VIRT CHAINED SCHED IF 5 OR MORE
         TM    52(R7),X'20'        OPTCD=C
         BO    IOBFORM1
         MVI  ICBSW,X'00'           NORMAL SCHEDULING
         TM    42(R7),X'80'         EXCP                   *** SBV
         BOR    R10                NO IOB PRESENT
         L     R1,68(0,R7)         IOB ADDR
         SPACE 3
IOBFORM1 MVC   0(L'IOBHDR,R11),IOBHDR
         BAL   R14,ABMSG           PRINT LINE
         ST    R1,FADDR
         LA    R1,0(0,R1)
         CH    R1,=H'1'            DUMMY FIELD
         BE    *+10                YES, NO IOB
         LTR   R1,R1               IOB PRESENT
         BNZ   IOBFORM2            YES, CONTINUE
         MVC   0(L'NOIOBMSG,R11),NOIOBMSG
         BAL   R14,ABMSG           PRINT LINE
         BAL   R14,ABMSG           PRINT LINE
         BR    R10
         EJECT
IOBFORM2 ST    R10,IOSAV10         SAVE RETURN ADDR
         BAL   R10,FORMAT          FORMAT BASE IOB
         CLI   ICBSW,X'00'         CHAINED SCHEDULING
         BNE   ICBFORM             YES, GO FORMAT ICBS
         BCT   R2,IOBFORM4         NEXT IOB
         SPACE 3
IOBFORM3 L     R10,IOSAV10         LOAD RETURN ADDR
         BR    R10
         SPACE 3
IOBFORM4 L     R1,FADDR
         L     R1,0(0,R1)          NEXT IOB
         ST    R1,FADDR
         BAL   R10,FORMAT
         BCT   R2,IOBFORM4         GET NEXT
         B     IOBFORM3
         EJECT
ICBFORM  MVC   0(60,R11),ICBHDR
         BAL   R14,ABMSG           PRINT LINE
         L     R1,FADDR            IOB
         L     R1,8(0,R1)          1ST ICB
         ST    R1,FADDR
         LA    R14,10              # OF WORDS
         LA    R15,40(0,R1)        1ST CCW IN ICB
         SPACE 3
ICBFORM1 TM    4(R15),X'C0'        COMMAND OR DATA CHAINING
         BZ    ICBFORM3            NO, GO CHK FOR TIC
         TM    4(R15),X'40'        CMD CHAIN
         BO    ICBFORM2            YES, CONTINUE
         LA    R14,2(0,R14)        ADJUST FOR
         LA    R15,8(0,R15)           DATA CHAINING
         SPACE 3
ICBFORM2 LA    R14,2(0,R14)        ADD 2 WORDS
         LA    R15,8(0,R15)        INCR INTO CCWS
         B     ICBFORM1
         SPACE 3
ICBFORM3 CLI   0(R15),X'08'        TIC
         BE    ICBFORM2
         CLI   0(R15),X'88'        TIC MT
         BE    ICBFORM2
         LA    R14,2(0,R14)
         ST    R14,FWORDS          # OF WORDS
         SPACE 3
ICBFORM4 BAL   R10,FORMAT
         L     R1,FADDR
         L     R1,0(0,R1)          NEXT ICB
         ST    R1,FADDR
         BCT   R2,ICBFORM4
         L     R10,IOSAV10
         BR    R10
         EJECT
FORMAT   ST    R10,FRETURN         SAVE RETURN ADDR
         ST    R2,IOSAV2           SAVE REG 2
         ST    R9,IOSAV9           SAVE REG 9
         L     R1,FRETURN          LOAD RETURN ADDRESS
         L     R15,FADDR           LOAD DUMP ADDR
         L     R2,FWORDS
         L     R9,FADDR            DUMP FROM ADDR
         SRL   R9,2                ROUND ADDRESS BACK
         SLL   R9,2                   TO PREVIOUS FULLWORD
         ST    R9,TADDR            DUMP ADDR
         UNPK  0(7,R11),FADDR+1(4)
         MVI   6(R11),C' '
         NC    0(6,R11),=8X'0F'
         TR    0(6,R11),TAB
         LR    R1,R9               LOAD DUMP ADDR
         SLL   R1,27               CALCULATE WORDS
         SRL   R1,29                  TO SHIFT TO RIGHT
         ST    R1,TSHIFT           DUMP SHIFT WORDS
         CH    R1,=H'4'            4 OR OVER
         BNL   FORMATA1            YES, 1 SEGMENT
         LA    R14,2               2 SEGMENTS
         LA    R15,4
         SR    R15,R1              NO. OF WORDS  1ST SEGMENT
         B     FORMATA2
         SPACE 3
FORMATA1 LA    R14,1               1 SEGMENT
         LA    R15,8
         SR    R15,R1              NO. OF WORDS IN SEGMENT
         SPACE 3
FORMATA2 LR    R10,R1              LOAD WORDS TO SHIFT
         MH    R10,=H'9'           NO. OF BYTES TO SHIFT
         LA    R10,9(R10,R11)      DISPLAY START ADDR
         CH    R1,=H'4'            4 OR OVER
         BL    FORMAT2             NO, BYPASS ADJUST
         LA    R10,3(0,R10)        ADJUST FOR EXTRA SPACES
         B     FORMAT2             GO FORMAT
         SPACE 3
FORMAT1  LA    R10,9(0,R11)        DISPLAY START ADDR
         LA    R14,2               # OF SEGMENTS PER LINE
         LA    R15,4               # OF WORDS PER SEGMENT
         ST    R9,DOUBLE           STORE ADDRESS DUMPED
         ST    R9,TADDR            DUMP ADDR
         XC    TSHIFT,TSHIFT       NO SHIFT
         UNPK  0(7,R11),DOUBLE+1(4)
         MVI   6(R11),C' '
         NC    0(6,R11),=8X'0F'
         TR    0(6,R11),TAB
         EJECT
FORMAT2  MVC   DOUBLE(4),0(R9)
         UNPK  0(9,R10),DOUBLE(5)
         MVI   8(R10),C' '
         NC    0(8,R10),=8X'0F'
         TR    0(8,R10),TAB
         LA    R9,4(0,R9)          NEXT WORD TO TRANSLATE
         LA    R10,9(0,R10)        NEXT DISPLAY ADDR
         BCTR  R2,0
         LTR   R2,R2               END OF FORMAT
         BNP   FORMAT3             YES, EXIT
         BCT   R15,FORMAT2         NEXT WORD
         LA    R10,3(0,R10)        ADJUST FOR EXTRA SPACES
         LA    R15,4
         BCT   R14,FORMAT2         NEXT SEGMENT
         L     R1,TSHIFT           # OF WORDS TO SHIFT
         L     R14,TADDR           DUMP ADDR
         LA    R10,86(0,R11)       TRANSLATE AREA
         MVI   0(R10),C'X'         BRACKET IN
         MVI   33(R10),C'X'           ASTERISKS
         LA    R10,1(0,R10)        1ST TRANSLATE POSITION
         LA    R15,8               MAX WORDS
         SR    R15,R1              ACTUAL WORDS
         SLL   R15,2               ACTUAL CHARACTERS
         BCTR  R15,0               ADJUST LENGTH FOR EXECUTE
         SLL   R1,2                CALCULATE SHIFT
         LA    R10,0(R1,R10)
         EX    R15,TMOVE           MOVE DATA
         EX    R15,TTRANS          TRANSLATE DATA
         BAL   R14,ABMSG1          PRINT LINE
         B     FORMAT1
         SPACE 3
TMOVE    MVC   0(0,R10),0(R14)
TTRANS   TR    0(0,R10),FORMTAB
         EJECT
FORMAT3  EQU   *
         LR    R15,R10             CURRENT DISPLAY ADDR
         LA    R14,9(0,R11)        BEGIN OF FORMAT
         SR    R15,R14             TOTAL FORMATTED
         SRL   R15,3               DIVIDE BY 8
         CH    R15,=H'6'           ROUNDING ERROR AFTER 5 WORDS
         BL    *+6                 NO, BYPASS ADJUST
         BCTR  R15,0               ADJUST # OF WORDS
         SLL   R15,2               # OF BYTES
         BCTR  R15,0               ADJUST LENGTH FOR EXECUTE
         L     R14,TADDR           DUMP ADDR
         LA    R10,86(0,R11)       TRANSLATE AREA
         MVI   0(R10),C'X'         BRACKET IN
         MVI   33(R10),C'X'        X'S
         LA    R10,1(0,R10)        1ST TRANSLATE POSITION
         EX    R15,TMOVE           MOVE DATA
         EX    R15,TTRANS          TRANSLATE DATA
         BAL   R14,ABMSG           PRINT LINE
         BAL   R14,ABMSG           PRINT LINE
         L     R10,FRETURN         LOAD RETURN ADDR
         L     R2,IOSAV2           LOAD REG 2
         L     R9,IOSAV9           LOAD REG 9
         BR    R10
         EJECT
HDRPRINT EQU   *
         BAL   R14,ABMSG           PRINT LINE
         BAL   R14,ABMSG           PRINT LINE
    SPACE 2
         MVI   0(R11),C'*'
         MVC   1(119,R11),0(R11)
    SPACE 2
         BAL   R14,ABMSG1          PRINT LINE
    SPACE 2
         LTR   R10,R10            ENTERED VIA 'BAL' ?        *** SBV
         BP    OTHERMSG           NO DIFF. MSG TO PRINT      *** SBV
         MVC   0(L'HDRMSG,R11),HDRMSG
HDRPRNT1 EQU   *
         BAL   R14,ABMSG1          PRINT LINE
         MVI   0(R11),C'*'
         MVC   1(119,R11),0(R11)
    SPACE 2
         BAL   R14,ABMSG           PRINT LINE
         BAL   R14,ABMSG           PRINT LINE
         BAL   R14,ABMSG           PRINT LINE
         BR    R10
    SPACE 2
OTHERMSG EQU   *
         MVC   0(L'ENDMSG,R11),ENDMSG        END MSG         *** SBV
         B     HDRPRNT1
         SPACE 5
CONVLG   EQU   *                                                *** SBV
         LA    R15,1(R15)              +1                       *** SBV
         CVD   R15,DOUBLE              TO DEC.                  *** SBV
         MVC   3+L'S0C7OP(L'MSK,R11),MSK                        *** SBV
         ED    3+L'S0C7OP(L'MSK,R11),DOUBLE+6                   *** SBV
         MVC   5+L'S0C7OP+L'MSK(L'BYTES,R11),BYTES              *** SBV
         BR    R14                     RETURN                   *** SBV
         SPACE 2
ABMSG    ABMSG S             PRINT LINE
         SPACE 2
ABMSG1   ABMSG               PRINT LINE
         SPACE 2
         TITLE 'E S T A E   E X I T'
ESTAESET LA    R1,4(0,R10)         RETURN ADDR
         STM   R0,R15,ESTAESAV     SAVE RETURN REGS
         BR    R10
         DROP  R3,R5              RELEASE BASE
         USING *,R15              ESTABLISH TEMP BASE
         SPACE 3
ESTAETRY EQU   *
         LR   R13,R1             LOAD PASSED PARM JUST IN CASE *** SBV
         LM   R3,R5,ESTAESAV+(4*R3)  LOAD BASE REG'S           *** SBV
         CH   R0,H12             ANY SDWA ?                    *** SBV
         BE   PARMGOT            NO - PARM LOAD                *** SBV
         CH   R0,H20             SPECIAL SETRP ?               *** SBV
         BE   PARMGOT            YES PARM IS LOADED            *** SBV
         L    R13,0(0,R1)        LOAD CORRECT PARM             *** SBV
         DROP R15                RELEASE TEMP BASE
         USING IEAVADUS,R3,R5     ESTABLISH BASE
  SPACE
PARMGOT  EQU   *                                           *** SBV
        LM   R0,R15,ESTAESAV             RESTORE ALL REG.  *** SBV
         MVC   0(L'ESTAEMSG,R11),ESTAEMSG
         BAL   R14,ABMSG           PRINT LINE
         BAL   R14,ABMSG           PRINT LINE
         L     R14,ESTAECNT        LOAD RETRY COUNT
         LA    R14,1(0,R14)        ADD 1
         ST    R14,ESTAECNT        SAVE NEW COUNT
         C     R14,ESTAELIM        LIMIT REACHED
         BH    RETURN3             YES, EXIT
        L    R10,ESTAESAV+4             GET SAVED RETURN   *** SBV
         BR    R10                 RETURN TO NEXT ROUTINE*** SBV
     DROP  R3,R5           RELEASE BASE
         SPACE 3
         USING *,R15
ESTAEXIT  EQU   *                                          *** SBV
          LR    R13,R2         LOAD PARM JUST IN CASE      *** SBV
          CH    R0,H12               ANY SDWA ?            *** SBV
          BE    NOSDWA         NO BUT PARM IS LOADED       *** SBV
          L     R13,0(0,R1)    LOAD PARM FROM SDWA         *** SBV
          L     R5,ESTAESAV+(4*R5) LOAD BASE               *** SBV
          L     R2,ESTAERET    LOAD RETRY ADDR.            *** SBV
         SETRP RC=4,RETADDR=(2),FRESDWA=YES,DUMP=NO
         SPACE 3
NOSDWA    EQU    *                                         *** SBV
         L    R5,ESTAESAV+(R5*4)         GET SAVED BASE     *** SBV
        L   R0,ESTAERET            LOAD RETRY ADDR.        *** SBV
         LA    R15,4               FORCE RETRY
         BR    R14
         DROP  R15
         USING IEAVADUS,R3,R5          ESTABLISH BASE
         EJECT
         LTORG
         TITLE 'D E F I N I T I O N S'
         DS    0F
ESTAELIM DC    F'50'
ESTAERET DC    A(ESTAETRY)
H12      DC    H'12'              NO SDWA CON              *** SBV
H20      DC    H'20'              NO SDWA CON              *** SBV
TAB      DC    C'0123456789ABCDEF'
PSOPTCD  DC    C'JTZQOCUW'
ISOPTCD  DC    C'RL*YIMUW'
DAOPTCD  DC    C'RX*AFE*W'
MODUNK   DC   C'*** UNKNOWN ***'
MSK      DC    X'40202120'                                      *** SBV
BYTES    DC    C'BYTES'                                         *** SBV
DFSAOS   DC    C'DFSA'                 OSAM                     *** SBV
COSAM    DC    C'OSAM '                OSAM                     *** SBV
SMCA     EQU   X'C4'                   SMCA OFFSET              *** SBV
TGL      EQU   C'T'                    TGL ?                    *** SBV
SETOSAM  EQU   128                     OSAM FLAG                *** SBV
         TITLE 'A B E N D  C O D E  T A B L E'
*                      THE FOLLOWING TABLE CONTAINS 3 BYTE ENTRIES
*                      WHICH ARE COMPARED AGAINST THE TCB COMPLETION
*                      CODE FIELD.  IF A MATCH IS FOUND THE REMAINDER
*                      OF THE DUMP IS SUPPRESSED.  ENTRIES FOR BOTH
*                      SYSTEM AND USER COMPLETION CODES ARE POSSIBLE.
*                      THE FIRST ZERO ENTRY FOUND TERMINATES THE TABLE
*                      SCAN FOR MATCHES.
*
         SPACE 3
ABENDTAB DS    0XL3
         DC    X'B37000' NO MORE SPACE                        *** SBV
         DC    X'D37000' NO PRIMARY SPACE                     *** SBV
         DC    X'E37000' NO DIR BLOCKS                        *** SBV
         DC    X'806000' PROGRAM NOT FOUND                    *** SBV
ABENDTSO EQU   *                                              *** SBV
SC7      DC    X'0C7000' SYSTEM 0C7  --> IGC0905A EDITIERT      *** SBV
         DC    X'046000' TCAM MCP HAS TERMINATED BUT MESSAGE         *
*                        PROCESSING PROGRAM IS STILL RUNNING         *
         DC    X'047000' AN UNAUTHORIZED PGM REQUESTED RESTRICED SVC *
         DC    X'80A000' MORE STORAGE REQUESTED THAN WAS AVAILABLE   *
         DC    X'804000' MORE STORAGE REQUESTED THAN WAS AVAILABLE   *
         DC    X'822000' REGION REQUIRED TO RUN STEP NOT AVAILABLE   *
         DC    X'522000'                            *** SBV
         DC    X'622000'                            *** SBV
         DC    X'722000'                            *** SBV
         DC    X'106000'                            *** SBV
         DC    X'706000'                            *** SBV
         DC    X'013000'                            *** SBV
         DC    X'213000'                            *** SBV
         DC    X'813000'                            *** SBV
         DC    X'A13000'                            *** SBV
         DC    X'001000'                            *** SBV
        DC    X'000010'         U 016             *** SBV
        DC    X'00038E'         U 878             *** SBV
        DC    X'0002B0'         U 688             *** SBV
        DC    X'000268'         U 616     IMS     *** SBV
        DC    X'0003A1'         U 929     IMS     *** SBV
        DC    X'000581'         U 1409    IIS     *** SBV
    SPACE 3
         DC    3XL3'00'           ZAPABLE ENTRIES
         EJECT
         DS    0F
DEVTAB   DS    0CL12
         DC    X'32108003',CL8'3400'
         DC    X'34208003',CL8'3400-DD'
         DC    X'10800808',CL8'1403'
         DC    X'10800809',CL8'3211'
         DC    X'50000804',CL8'2501'
         DC    X'10000810',CL8'2671'
         DC    X'1011080C',CL8'3525'
         DC    X'1021080C',CL8'3525'
         DC    X'10010806',CL8'3505'
         DC    X'3050200B',CL8'3350'
         DC    X'3070200B',CL8'3350/SHR'
         DC    X'00000000',CL8' '
         DC    X'00000000',CL8' '
         SPACE 3
FORMTAB  DS    0CL256
         DC    64C' '                                 *** SBV
         DC    C' '
         DC    128C' '                                *** SBV
         DC    C'ABCDEFGHI'
         DC    7C' '                                  *** SBV
         DC    C'JKLMNOPQR'
         DC    8C' '                                     *** SBV
         DC    C'STUVWXYZ'
         DC    6C' '                                     *** SBV
         DC    C'0123456789'
         DC    6C' '                                     *** SBV
         TITLE 'E R R O R   M E S S A G E S'
HDRMSG DC    C'DATA MANAGEMENT CONTROL BLOCKS -   VERSION 5.1 09/14/82 *
               --- SWISS BANK CORPORATION-BASEL ---'
         SPACE 1
NOCBMSG  DC    C'D-M CONTROL BLOCK BYPASSED, NO OPEN DATASETS'
         SPACE 1
BADEBMSG DC    C'DEB DCB ADDRESS INVALID OR ZEROS, DD BYPASSED'
         SPACE 1
NOIOBMSG DC    C'NO IOB ADDRESS FOUND,  DISPLAY BYPASSED'
         SPACE 1
NOUCBMSG DC    C'NO UCB ADDRESS FOUND,  DISPLAY BYPASSED'
         SPACE 1
DDNOPMSG DC    C'DATA SET NOT OPEN -   DD INFO BYPASSED'
         SPACE 1
ESTAEMSG DC    CL68'ERROR ENCOUNTERED DURING DUMP FORMATTING, CURRENT FX
               UNCTION BYPASSED'
         SPACE 1
NODMPMSG DC    C'DUMP NOT REQUIRED FOR THIS COMPLETION CODE,'
         SPACE 1
SUPPMSG  DC    C'REMAINDER OF DUMP SUPPRESSED BY ABEND/SNAP USER EXIT'
S0C7 DC C'PGM ABENDED WITH S0C7,CHECK FOLLOWING OPERANDS CAUSED ERROR'
         SPACE
S0C7OP   DC    C'LENGTH OF FIELD'
         SPACE 3
EXPLAIN DC CL60'*** USE //SBVABEND DD ... IF DUMP IS NEEDED ***'
DEBHDR   DC    C'----- DATA EXTENT BLOCK   (DEB) -----'
         SPACE 1
DCBHDR   DC    C'----- DATA CONTROL BLOCK  (DCB) -----'
         SPACE 1
JFCBHDR  DC    C'----- JOB FILE CONTROL BLOCK  (JFCB) -----'
         SPACE 1
UCBHDR   DC    C'----- UNIT CONTROL BLOCK  (UCB) -----'
         SPACE 1
RECHDR   DC    C'----- CURRENT OR NEXT RECORD -----'
         SPACE 1
IOBHDR   DC    C'------ I/O CONTROL BLOCK   (IOB) -----'
         SPACE 1
ICBHDR   DC    C'----- INTERRUPT CONTROL BLOCK  (ICB) -----'
         SPACE 1
ACBHDR   DC    C'----- ACCESS METHOD CONTROL BLOCK  (ACB) -----'
         SPACE 1
AMBHDR   DC    C'----- ACCESS METHOD BLOCK  (AMB) -----'
 SPACE 2
RTMHDR  DC  C'----- RECOVERY TERMINATION WORK AREA  (RTM2WA)  -----'
    SPACE 2
ENDMSG  DC  C'END OF SBV - DUMP FORMATTING ROUTINE'       *** SBV
   SPACE 2
NAMEABND  DC   C'NAME OF ABENDING MODUL '                  *** SBV
   SPACE 2
STORABND DC   C'STORAGE OF PGM - CHECK FROM -320 UNTIL +320' *** SBV
  SPACE 2
AABEND  DC    C'INTERRUPT AT    '                             *** SBV
  SPACE 2
SDUMPMSG DC    C'REFER TO SVC - DUMP TAKEN'                    *** SBV
   SPACE 2
STC      DC    C'STC'
         EJECT
DDMSGX   DS    0CL80
         DC    CL9'******',C'DDNAME= ',CL8' ',CL3' ',C'DSNAME= '
         DC    CL44' '
         SPACE 3
EXTMSGX  DS    0CL88
         DC    CL9'******',C'EXTENTS -  ',CL2' ',CL4' '
         DC    C'ACCESS METHOD -  ',CL5' ',CL4' ',C'OPTCD -  ',CL11' '
         DC    C'RECLEN -  ',CL5' ',C' '
         SPACE 3
DCBMSGX  DS    0CL90
         DC    CL9'******',C'DCB=(DSORG=',CL2' ',C',RECFM=',CL3' '
         DC    C',LRECL=',CL5' '
         DC    C',BLKSIZE=',CL5' ',C',BUFNO=',CL2' '
         DC    C',BUFL=',CL5' ',C',EROPT=',CL3' ',CL2') '
         SPACE 3
UNITMSGX DS    0CL72
         DC    CL9'******',C'UNIT ADDRESS -  '
         DC    CL3' ',CL4' ',C'VOLSER -  ',CL6' ',C' '
         DC    CL3' ',C'DEVTYPE -  ',CL8' ',CL1' '
         SPACE 3
CCHHMSGX DS    0CL48
         DC    CL3' ',C'EXTENT -  ',CL23' ',C'CYLS',CL4' ',C'TRKS'
   SPACE 3
IMSEXIT DC  CL8'DFS0905A'     IMS EXIT NAME              *** SBV
  SPACE 3
ESTAELST ESTAE  ESTAEXIT,CT,MF=L                           *** SBV
ESTAELEN EQU    *-ESTAELST             LEN FOR GETMAIN     *** SBV
         SPACE 2
SDUMP    SYSDUMP
ESDUMP   EQU   *-SDUMP
         TITLE ' D U M M Y   S E C T I O N S'
WORK     DSECT
SAVE     DS    18F
ESTAESAV DS    16F
DOUBLE   DS    2F
SAVECC   DS    F            SAVE FOR CC                      *** SBV
SAVERTM  DS    F                       FOR RTM2                 *** SBV
         SPACE 3
USERAREA DS    0CL40
PENTRY   DS    F
FADDR    DS    F
FWORDS   DS    F
FENTRY   DS    F
MSGRET   DS    F
JFCBADDR DS    F
TADDR    DS    F
TSHIFT   DS    F
FRETURN  DS    F
IOSAV9   DS    F
IOSAV10  DS    F
UCBSAV10 DS    F
IOSAV2   DS    F
OPTTAB   DS    F
ESTAECNT DS    F
ICBSW    DS    C
TPSW     DS    C
CCFLAG   DS    C
OSAM     DS    X
         EJECT
DDMSG    DS    0CL80
         DS    CL17
DDNAME   DS    CL8
         DS    CL3
         DS    CL8
DSNAME   DS    CL44
         SPACE 3
DCBMSG   DS    0CL90
         DS    CL20
DSORG    DS    CL2
         DS    CL7
RECFM    DS    CL3
         DS    CL7
LRECL    DS    CL5
         DS    CL9
BLKSIZE  DS    CL5
         DS    CL7
BUFNO    DS    CL2
         DS    CL6
BUFL     DS    CL5
         DS    CL7
EROPT    DS    CL3
         DS    CL2
         EJECT
EXTMSG   DS    0CL88
         DS    CL20
EXTENT   DS    CL2
         DS    CL21
MACRF    DS    CL5
         DS    CL13
OPTCD    DS    CL8
         DS    CL13
RECLEN   DS    CL5
         DS    C
         DS    CL3
         SPACE 3
UNITMSG  DS    0CL72
         DS    CL25
DDUNIT   DS    CL3
         DS    CL14
DDVOL    DS    CL6
         DS    CL15
DDDEVT   DS    CL8
         DS    CL1
         SPACE 3
CCHHMSG  DS    0CL48
         DS    CL13
CCHH     DS    CL17
         DS    CL2
CYLS     DS    CL3
         DS    CL6
TRKS     DS    CL2
         DS    CL5
RESERV   DC    10F'0'
SDECB    DC    A(0)
DUMP     SYSDUMP
SIZE     EQU   *-WORK           LENGTH OF WORKAREA
         EJECT
         IHAABDPL
         PRINT NOGEN
         IHASDWA
         IEFJESCT
         IEFJSCVT
         EJECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
ABDFLAG2 EQU  &FLAG2     (WITHOUT SU33 ---> 'F1')            *** SBV
ABDSUPER EQU  128         SUPERVISOR TRACE                   *** SBV
ABDGTF   EQU  64          GTF TRACE                          *** SBV
ABDTRBIT EQU  32          SUPER TRACE                        *** SBV
ABDTRNAV EQU  16          SUPER TRACE NOT AVAIL.             *** SBV
ABDGTFCL EQU  8           IEAVAD08 ENTERED FOR GTF           *** SBV
ABDSWAP  EQU  4           SWA SUBPOOLS                       *** SBV
ABDSTAT  EQU  2           INDICATE STATUS ISSUED             *** SBV
ABDLSQA  EQU  1           SP229/230                          *** SBV
  SPACE
FLAG2 EQU (ABDSUPER+ABDGTF+ABDTRBIT+ABDTRNAV+ABDGTFCL+ABDSWAP+ABDLSQA)
   SPACE 5
APFSDATA EQU  16          A(SDATA FIELD)                     *** SBV
APFNUC   EQU  128         NUC DUMP
APFSQA   EQU  64          SQA DUMP
APFLSQA  EQU  32          LSQA DUMP
APFSWA   EQU  16          SWA DUMP
APFTRACE EQU  8           TRACE TABLE
APFSUPDA EQU  4           CB DUMP
APFQCB   EQU  2           QCB DUMP
APFDN    EQU  1           DATA MGT CB
     SPACE
SDATA EQU (APFNUC+APFSQA+APFLSQA+APFSWA+APFTRACE+APFSUPDA+APFQCB+APFDN)
   SPACE 5
APFPDATA EQU  18                                             *** SBV
APFSAVE  EQU   128          SAVEAREA TRACE                   *** SBV
APFSAVE2 EQU   64           SAVEAREA TRACE                   *** SBV
APFREGS  EQU   32           REGS                             *** SBV
APFLPA   EQU   16           LPA MOD. DUMP                    *** SBV
APFJPA   EQU   8            JPA MOD. DUMP                    *** SBV
APFPSW   EQU   4            PSW/ILC/IC                       *** SBV
APFSPALL EQU   2            SUBPOOLS                         *** SBV
APF      EQU   1            RESERVED                         *** SBV
PDATA EQU (APFSAVE+APFSAVE2+APFREGS+APFLPA+APFJPA+APFPSW+APFSPALL+APF)
TCBRTWA  EQU   224          A(RTMWA)                         *** SBV
NEXTRTWA EQU   368          A(NEXT RTWA)                     *** SBV
RTM2ABNM  EQU   140         A(OF ABENDING PGM)               *** SBV
RTM2NXT1  EQU   128         A(NEXT INSTRUCTION)              *** SBV
TCBCMP  EQU   17               A(CC)                       *** SBV
RTM2ILC1 EQU   133                     INTERR. LENGTH           *** SBV
SEG      EQU   16                      SEGMENT/PAGE FAULT       *** SBV
RTM2ICD1 EQU   135                     ABEND CODE               *** SBV
C7       EQU   7                       S 0C7                    *** SBV
RTM2ER0  EQU   60                      A(REGS.)                 *** SBV
ASCBOLD  EQU   X'224'                  POINTER TO ASCB (PSA)
ASCBJBNI EQU   X'AC'                   POINTER TO JOBNAMEFIELD (ASCB)
ASCBJBNS EQU   X'B0'                   POINTER TO JOBNAMEFIELD (ASCB)
ASCBCSCB EQU   X'38'                   POINTER TO CSCB        *** SBV
ASCBTSB  EQU   X'3C'                   POINTER TO TSB         *** SBV
ASCBASID EQU   X'24'                   POINTER TO ASID        *** SBV
CSCBTSO  EQU   X'1C'                   POINTER TO ID          *** SBV
TSO      EQU   1                       ID OF TSO USER         *** SBV
TCBFBYT1 EQU   X'114'
TCBRTM2  EQU   8
SVCD     EQU   X'20'                   SVCDUMP INDICATOR      *** SBV
         PRINT NOGEN
         IHAPSA
         CVT   DSECT=YES                                       @BM01613
         END
