-/* ANFANG INCLUDE-TEXT  "PLIBEGIN".  <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<*/
0        DCL   (DATE, TIME, ONCODE, ONCHAR, ONSOURCE, ONLOC,
                ONFILE, ONKEY, ONCOUNT, NULL, EMPTY)         BUILTIN;
0/*  STANDARD-DEFINITIONEN:                                          */
0        DCL   BLANK     CHAR(132) STATIC   INIT(' '); /* HEX 40 */
         DCL   X00       CHAR(1)   STATIC;
                       UNSPEC(X00   ) = '00000000'B;   /* HEX 00 */
         DCL   XFF       CHAR(1)   STATIC;
                       UNSPEC(XFF   ) = '11111111'B;   /* HEX FF */
         DCL   ZIFFERN   CHAR(10)  STATIC   INIT('0123456789');
0/*      MASCHINEN-DRUCKSTEUERZEICHEN ---                            */
 /*            VSKXX  = VORSCHUB NACH KANAL  'XX' NACH DEM DRUCKEN   */
 /*            VSKXXS = VORSCHUB NACH KANAL  'XX' SOFORT             */
 /*            VSZTX  = ZEILENTRANSPORT 'X' ZEILE(N) NACH DEM DRUCKEN*/
 /*            VSZTXS = ZEILENTRANSPORT 'X' ZEILE(N) SOFORT          */
0        DCL   VSK01     CHAR(1)   STATIC;
                       UNSPEC(VSK01 ) = '10001001'B;   /* HEX 89 */
         DCL   VSK02     CHAR(1)   STATIC;
                       UNSPEC(VSK02 ) = '10010001'B;   /* HEX 91 */
         DCL   VSK03     CHAR(1)   STATIC;
                       UNSPEC(VSK03 ) = '10011001'B;   /* HEX 99 */
         DCL   VSK04     CHAR(1)   STATIC;
                       UNSPEC(VSK04 ) = '10100001'B;   /* HEX A1 */
         DCL   VSK05     CHAR(1)   STATIC;
                       UNSPEC(VSK05 ) = '10101001'B;   /* HEX A9 */
         DCL   VSK06     CHAR(1)   STATIC;
                       UNSPEC(VSK06 ) = '10110001'B;   /* HEX B1 */
         DCL   VSK07     CHAR(1)   STATIC;
                       UNSPEC(VSK07 ) = '10111001'B;   /* HEX B9 */
         DCL   VSK08     CHAR(1)   STATIC;
                       UNSPEC(VSK08 ) = '11000001'B;   /* HEX C1 */
         DCL   VSK09     CHAR(1)   STATIC;
                       UNSPEC(VSK09 ) = '11001001'B;   /* HEX C9 */
         DCL   VSK10     CHAR(1)   STATIC;
                       UNSPEC(VSK10 ) = '11010001'B;   /* HEX D1 */
         DCL   VSK11     CHAR(1)   STATIC;
                       UNSPEC(VSK11 ) = '11011001'B;   /* HEX D9 */
         DCL   VSK12     CHAR(1)   STATIC;
                       UNSPEC(VSK12 ) = '11100001'B;   /* HEX E1 */
         DCL   VSK01S    CHAR(1)   STATIC;
                       UNSPEC(VSK01S) = '10001011'B;   /* HEX 8B */
         DCL   VSK02S    CHAR(1)   STATIC;
                       UNSPEC(VSK02S) = '10010011'B;   /* HEX 93 */
         DCL   VSK03S    CHAR(1)   STATIC;
                       UNSPEC(VSK03S) = '10011011'B;   /* HEX 9B */
         DCL   VSK04S    CHAR(1)   STATIC;
                       UNSPEC(VSK04S) = '10100011'B;   /* HEX A3 */
         DCL   VSK05S    CHAR(1)   STATIC;
                       UNSPEC(VSK05S) = '10101011'B;   /* HEX AB */
         DCL   VSK06S    CHAR(1)   STATIC;
                       UNSPEC(VSK06S) = '10110011'B;   /* HEX B3 */
         DCL   VSK07S    CHAR(1)   STATIC;
                       UNSPEC(VSK07S) = '10111011'B;   /* HEX BB */
         DCL   VSK08S    CHAR(1)   STATIC;
                       UNSPEC(VSK08S) = '11000011'B;   /* HEX C3 */
         DCL   VSK09S    CHAR(1)   STATIC;
                       UNSPEC(VSK09S) = '11001011'B;   /* HEX CB */
         DCL   VSK10S    CHAR(1)   STATIC;
                       UNSPEC(VSK10S) = '11010011'B;   /* HEX D3 */
         DCL   VSK11S    CHAR(1)   STATIC;
                       UNSPEC(VSK11S) = '11011011'B;   /* HEX DB */
         DCL   VSK12S    CHAR(1)   STATIC;
                       UNSPEC(VSK12S) = '11100011'B;   /* HEX E3 */
         DCL   VSZT0     CHAR(1)   STATIC;
                       UNSPEC(VSZT0 ) = '00000001'B;   /* HEX 01 */
         DCL   VSZT1     CHAR(1)   STATIC;
                       UNSPEC(VSZT1 ) = '00001001'B;   /* HEX 09 */
         DCL   VSZT2     CHAR(1)   STATIC;
                       UNSPEC(VSZT2 ) = '00010001'B;   /* HEX 11 */
         DCL   VSZT3     CHAR(1)   STATIC;
                       UNSPEC(VSZT3 ) = '00011001'B;   /* HEX 19 */
         DCL   VSZT1S    CHAR(1)   STATIC;
                       UNSPEC(VSZT1S) = '00001011'B;   /* HEX 0B */
         DCL   VSZT2S    CHAR(1)   STATIC;
                       UNSPEC(VSZT2S) = '00010011'B;   /* HEX 13 */
         DCL   VSZT3S    CHAR(1)   STATIC;
                       UNSPEC(VSZT3S) = '00011011'B;   /* HEX 1B */
0        DCL   UDAT      GENERIC (UDAT4 WHEN (*,*,*,*),
                                  UDAT5 WHEN (*,*,*,*,*),
                                  UDAT6 WHEN (*,*,*,*,*,*),
                                  UDAT7 WHEN (*,*,*,*,*,*,*)  );
         DCL   UDAT4     ENTRY (*,*,*,*)        OPTIONS (ASM INTER);
         DCL   UDAT5     ENTRY (*,*,*,*,*)      OPTIONS (ASM INTER);
         DCL   UDAT6     ENTRY (*,*,*,*,*,*)    OPTIONS (ASM INTER);
         DCL   UDAT7     ENTRY (*,*,*,*,*,*,*)  OPTIONS (ASM INTER);
         DCL   UDATX     ENTRY;
         DCL   1 UDAT_DEF   STATIC,
                 5 (D_DF00   INIT(00),
                    D_DF01   INIT(01),
                    D_DF02   INIT(02),
                    D_DF10   INIT(10),
                    D_DF11   INIT(11),
                    D_DF20   INIT(20),
                    D_DF21   INIT(21),
                    D_DF22   INIT(22),
                    D_DF23   INIT(23),
                    D_DF24   INIT(24),
                    D_DF25   INIT(25),
                    D_DF26   INIT(26),
                    D_DF27   INIT(27),
                    D_DF40   INIT(40),
                    D_DF41   INIT(41),
                    D_DF50   INIT(50),
                    D_DF60   INIT(60),
                    D_DF61   INIT(61),
                    D_DF80   INIT(80),
                    D_DF81   INIT(81),
                    D_DF82   INIT(82),
                    D_DF83   INIT(83),
                    D_DF84   INIT(84)  )   FIXED BIN (15),
                 5 (D_TEST        INIT('T'),
                    D_UMW         INIT('U'),
                    D_ADD         INIT('A'),
                    D_SUB         INIT('S'),
                    D_DIFF        INIT('D'),
                    D_BEDINGUNG   INIT(' '),
                    D_KLDTG       INIT('K'),
                    D_ARBTG       INIT('A'),
                    D_ARBTGS      INIT('S'),
                    D_MONAT       INIT('M'),
                    D_JAHR        INIT('J')  )   CHAR (1)  ;
0        DCL   CVPPTOP   ENTRY (BIT(*),
                                *,
                                FIXED BIN (15)  );
         DCL   CVPTOPP   ENTRY (*,
                                FIXED BIN (15),
                                FIXED BIN (15),
                                FIXED BIN (15),
                                *  );
         DCL   CVPPP     ENTRY;
0/*      STANDARD-PROTOKOLL-DATEI:                                   */
0        DCL   SYSPROT   FILE STREAM OUTPUT PRINT;
0/*      STANDARD ERROR-MASSNAHME:                                   */
0        DCL   IXERRSW  (32) BIT (1) STATIC EXTERNAL
                                     INIT ('0'B,
                                           '1'B,
                                           (30)(1)'0'B  );
         ON ERROR SNAP BEGIN;
                            ON ERROR   BEGIN;
                                               HALT;  /* WARNUNG KANN */
                                                 /* IGNORIERT WERDEN  */
                                               CALL PLIDUMP ('TFCHBO',
                                                'REKURSIVER ERROR');
                                               EXIT;
                                       END;
                            IF IXERRSW(17) THEN GOTO A010;
                            /* WARNUNGEN FUER DIE NAECHSTEN 3         */
                            /* STATEMENTS KOENNEN IGNORIERT WERDEN    */
                            ON ATTENTION   IXERRSW(18) = '1'B;
                            SIGNAL ATTENTION;
                            REVERT ATTENTION;
                            IXERRSW(17) = '1'B;
                     A010:  ;
                            IF IXERRSW(18) THEN GOTO CKOUT;
                            PUT FILE (SYSPRINT) DATA;       /* OPT */
                            CALL PLIDUMP ('TFCHBO',
                             'ON ERROR DUMP');
                            GO TO ERREND;
                     CKOUT: HALT;  /* WARNUNG KANN IGNORIERT WERDEN   */
                    ERRPUT: IF IXERRSW(1) THEN GOTO ERREND;
                            IF IXERRSW(2) THEN
                                PUT FILE (SYSPRINT) ALL;
                            IF IXERRSW(3) THEN
                                CALL PLIDUMP ('TFCHBO',
                                 'ON ERROR-SNAP');
                        CKOUT1: HALT;  /* WARNUNG KANN IGN. WERDEN  */
                     ERREND:
                       END;
0                      GOTO IXOUT1;
                IXOUT: HALT;   /* WARNUNG KANN IGNORIERT WERDEN */
                       GOTO IXOUT;
               IXOUT1: ;
-/* ENDE INCLUDE-TEXT  "PLIBEGIN".  <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<*/
