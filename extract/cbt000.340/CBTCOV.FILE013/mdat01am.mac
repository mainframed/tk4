./ ADD NAME=DMTSUCH
         MACRO
&LABEL   DMTSUCH &ADDR,&NUM,&LEN,&COMP,&REG=0,&NFOUND=0,&ORG=SQ,&POS=0,*
               &SORT=A,&POINT=0
         GBLB  &TSUCH1
         LCLA  &Z,&C,&L,&Z1,&D
         LCLB  &ERR,&SCH,&ERR2
         LCLC  &INDEX,&DL1,&DL2,&SUCH,&R,&SAVE
         AIF   (K'&LABEL GT 4).A0
&SUCH    SETC  'MSUCH'
         AGO   .A0A
.A0      ANOP
&SUCH    SETC  '&LABEL'(1,5)
.A0A     ANOP
&SAVE    SETC  'MSUCH'
         SPACE 2
         AIF   ('&ADDR' NE '').A1A
         MNOTE 8,'FIRST OPERAND MISSING'
&ERR     SETB  (1)
         AGO   .A1
.A1A     AIF   ('&ADDR'(1,1) EQ '(').A1B
         AIF   (T'&ADDR NE 'N').A1
         MNOTE 8,'INVALID FIRST OPERAND'
&ERR     SETB  (1)
         AGO   .A1
.A1B     ANOP
&Z       SETA  K'&ADDR
&Z       SETA  &Z-2
&R       SETC  '&ADDR'(2,&Z)
.A1      AIF   ('&NUM' NE '').A2
         MNOTE 8,'SECOND OPERAND MISSING'
&ERR     SETB  (1)
.A2      AIF   ('&LEN' NE '').A3
         MNOTE 8,'THIRD OPERAND MISSING'
&ERR     SETB  (1)
.A3      AIF   ('&COMP' NE '').A4
         MNOTE 8,'FOURTH OPERAND MISSING'
&ERR     SETB  (1)
.A4      AIF   (T'&NUM EQ 'N' OR T'&NUM EQ 'H' OR T'&NUM EQ 'O').A5
         MNOTE 8,'INVALID SECOND OPERAND'
&ERR     SETB  (1)
.A5      AIF   (T'&LEN EQ 'N' OR T'&LEN EQ 'O').A6
         MNOTE 8,'INVALID THIRD OPERAND'
&ERR     SETB  (1)
.A6      ANOP
         AIF   (T'&COMP NE 'N').A6A
         MNOTE 8,'INVALID FOURTH OPERAND'
&ERR     SETB  (1)
         AGO   .A7
.A6A     ANOP
         AIF   ('&COMP' EQ '' OR '&LEN' EQ '').A7
&Z       SETA  L'&COMP
&Z1      SETA  &LEN
         AIF   (&Z LE &Z1).A7
         MNOTE 8,'INVALID FOURTH OPERAND (L''&COMP GT THIRD OPERAND)'
&ERR     SETB  (1)
.A7      AIF   ('&ORG' EQ 'SQ' OR '&ORG' EQ 'NS' OR '&ORG' EQ 'DA').A8
         MNOTE 8,'INVALID ORG-OPERAND (NOT EQ SQ,NS OR DA)'
&ERR     SETB  (1)
.A8      AIF   ('&SORT' EQ 'A' OR '&SORT' EQ 'D').A9
         AIF   ('&ORG' EQ 'NS').A9
         MNOTE 8,'INVALID SORT-OPERAND (NOT EQ A OR D)'
&ERR     SETB  (1)
.A9      AIF   ('&POS' EQ '0').A21
         AIF   ('&ORG' EQ 'DA').A12
         AIF   (N'&POS NE 1).A12
         AIF   (T'&POS EQ 'N').A10
         MNOTE 8,'INVALID POS-OPERAND'
&ERR     SETB  (1)
         AGO   .A21
.A10     AIF   (&POS+L'&COMP LE &LEN).A11
         AIF   ('&LEN' EQ '' OR T'&LEN NE 'N').A11
         MNOTE 8,'INVALID POS-OPERAND (POS=(&POS) + L''FOURTH OPERAND G*
               T THIRD OPERAND)'
&ERR     SETB  (1)
.A11     AGO   .A21
.A12     AIF   ('&ORG' NE 'DA').A12A
         MNOTE *,'POS-OPERAND IGNORED'
         AGO   .A21
.A12A    ANOP
&SCH     SETB  (1)
&Z       SETA  2
&C       SETA  N'&POS
.A13     AIF   (&Z LT &C).A14
         AIF   (&Z EQ &C).A15
         MNOTE 8,'INVALID POS-OPERAND (NUMBER OF SUBOPERANDS INCORRECT)*
               '
&ERR     SETB  (1)
         AGO   .A21
.A14     ANOP
&Z       SETA  &Z+2
         AGO   .A13
.A15     ANOP
&Z       SETA  1
&Z1      SETA  2
.A16     ANOP
         AIF   ('&POS(&Z1)' NE '0').A16A
&L       SETA  &POS(&Z)+&POS(&Z1)
         MNOTE 8,'INVALID POS-OPERAND (&Z1.. SUBOPERAND EQ 0)'
&ERR     SETB  (1)
.A16A    AIF   (&LEN GE &L).A17
         AIF   ('&LEN' EQ '' OR T'&LEN NE 'N').A18
         MNOTE 8,'INVALID POS-OPERAND (&Z.. + &Z1.. SUBOPERAND GT THIRD*
                OPERAND)'
&ERR     SETB  (1)
.A17     ANOP
&Z       SETA  &Z+2
&Z1      SETA  &Z1+2
         AIF   (&Z LT &C).A16
.A18     ANOP
&Z       SETA  2
&L       SETA  &POS(&Z)
.A19     ANOP
&Z       SETA  &Z+2
         AIF   (&Z GT &C).A20
&L       SETA  &L+&POS(&Z)
         AGO   .A19
.A20     AIF   (L'&COMP EQ &L).A21
         MNOTE 8,'INVALID POS-OPERAND (LENGTH-FIELDS NE L''FOURTH OPERA*
               ND)'
&ERR     SETB  (1)
.A21     ANOP
         AIF   ('&POINT' EQ '0').A23
         AIF   ('&ORG' EQ 'NS' OR '&ORG' EQ 'SQ').A23
         AIF   (T'&POINT EQ T'&COMP).A22
         AIF   ('&COMP' EQ '').A22
         MNOTE 8,'INVALID POINT-OPERAND (TYPE NOT EQ T''FOURTH OPERAND)*
               '
&ERR     SETB  (1)
.A22     ANOP
&Z       SETA  L'&POINT
&Z1      SETA  L'&COMP
         AIF   (&Z EQ &Z1).A23
         AIF   ('&COMP' EQ '').A23
         MNOTE 8,'INVALID POINT-OPERAND (LENGTH NOT EQ L''FOURTH OPERAN*
               D)'
&ERR     SETB  (1)
.A23     ANOP
         AIF   ('&ORG' NE 'NS').A25
         AIF   ('&SORT' EQ 'A').A24
         MNOTE *,'SORT-OPERAND IGNORED'
.A24     AIF   ('&POINT' EQ '0').A25
         MNOTE *,'POINT-OPERAND IGNORED'
         AGO   .A26
.A25     AIF   ('&ORG' NE 'SQ').A26
         AIF   ('&POINT' EQ '0').A26
         MNOTE *,'POINT-OPERAND IGNORED'
.A26     ANOP
         AIF   ('&NFOUND' EQ '0' OR T'&NFOUND NE 'N' OR '&NFOUND'(1,1) *
               EQ '(').A26A
         MNOTE 8,'INVALID NFOUND-OPERAND'
&ERR     SETB  (1)
.A26A    AIF   (&ERR).ENDE
&INDEX   SETC  '&SYSNDX'(3,2)
         AIF   ('&ORG' EQ 'DA').A59
&LABEL   STM   0,3,&SAVE.SAV SAVE REGISTERS
         AIF   (N'&POS NE 1).A28
         AIF   (&TSUCH1).A27
         B     &SUCH&INDEX BRANCH AROUND SAVE-AREA
&SAVE.SAV DC   4F'0' SAVE-AREA
&SAVE.SCH DC   X'00'
         DS    0H SET ON HALFWORD-BOUNDARY
&TSUCH1  SETB  (1)
&SUCH&INDEX EQU *
.A27     AGO   .A31
.A28     ANOP
         AIF   (&TSUCH1).A29
         B     &SUCH&INDEX BRANCH AROUND SAVE-AREA AND COMP-FIELD
&SAVE.SAV DC   4F'0' SAVE-AREA
&SAVE.SCH DC   X'00'
&TSUCH1  SETB  (1)
         AGO   .A30
.A29     ANOP
         B     &SUCH&INDEX BRANCH AROUND COMPARE-FIELD
.A30     ANOP
&Z       SETA  L'&COMP
&SUCH&INDEX.A DC &Z.X'00' COMPARE-FIELD
         DS    0H SET ON HALFWORD-BOUNDARY
&SUCH&INDEX EQU *
.A31     ANOP
         AIF   ('&ORG' NE 'NS').A41
         AIF   ('&R' EQ '').A31A
         LR    1,&R LOAD ADDRESS
         AGO   .A31B
.A31A    ANOP
         LA    1,&ADDR LOAD ADDRESS
.A31B    ANOP
         LA    2,&LEN LOAD INCREMENT
         LR    3,2
         AIF   (T'&NUM EQ 'N').A32
         MH    3,&NUM NUMBER OF RECORDS
         AGO   .A33
.A32     ANOP
         MH    3,=H'&NUM' NUMBER OF RECORDS
.A33     ANOP
         AR    3,1
         BCTR  3,0 MINUS 1 = COMPARAND
         AIF   (N'&POS NE 1).A34
&DL1     SETC  '(L'''
         AIF   (T'&COMP EQ 'P').A33A
&SUCH&INDEX.B CLC &POS&DL1&COMP,1),&COMP COMPARE
         AGO   .A33B
.A33A    ANOP
&SUCH&INDEX.B CP &POS&DL1&COMP,1),&COMP COMPARE
.A33B    ANOP
         BE    &SUCH&INDEX.C FOUND
         AGO   .A37
.A34     ANOP
&SUCH&INDEX.B EQU *
&Z       SETA  1
&DL1     SETC  '(&POS(&Z+1).)'
&DL2     SETC  '&POS(&Z)'
.A35     ANOP
         MVC   &SUCH&INDEX.A&DL1,&DL2.(1) FILL COMPARE-FIELD
&D       SETA  &POS(&Z+1)
&Z       SETA  &Z+2
         AIF   (&Z GT &C).A36
&DL1     SETC  '+&D.(&POS(&Z+1).)'
&DL2     SETC  '&POS(&Z)'
         AGO   .A35
.A36     ANOP
&DL1     SETC  '(L'''
         CLC   &SUCH&INDEX.A&DL1&COMP.),&COMP COMPARE
         BE    &SUCH&INDEX.C FOUND
.A37     ANOP
         BXLE  1,2,&SUCH&INDEX.B
         LM    0,3,&SAVE.SAV LOAD SAVED REGISTERS
         SR    &REG,&REG
         AIF   ('&NFOUND' EQ '0').A38
         AIF   ('&NFOUND'(1,1) EQ '(').A37A
         B     &NFOUND NOTFOUND-ADDRESS
         AGO   .A39
.A37A    ANOP
&Z       SETA  K'&NFOUND
&Z       SETA  &Z-2
&DL1     SETC  '&NFOUND'(2,&Z)
         BR    &DL1
         AGO   .A39
.A38     ANOP
         B     &SUCH&INDEX.D NOT FOUND
.A39     ANOP
&SUCH&INDEX.C LR 0,1
         LM    1,3,&SAVE.SAV+4 LOAD SAVED REGISTERS
         AIF   ('&REG' EQ '0').A40
         LR    &REG,0
         L     0,&SAVE.SAV LOAD SAVED REGISTER
.A40     AIF   ('&NFOUND' NE '0').A40A
&SUCH&INDEX.D EQU *
.A40A    ANOP
         SPACE 2
         MEXIT
.A41     ANOP
         NI    &SAVE.SCH,X'00'
         AIF   ('&R' EQ '').A41A
         LR    0,&R LOAD ADDRESS
         AGO   .A41B
.A41A    ANOP
         LA    0,&ADDR LOAD ADDRESS
.A41B    ANOP
         AIF   (T'&NUM EQ 'N').A42
         LH    2,&NUM NUMBER OF RECORDS
         AGO   .A43
.A42     ANOP
         LA    2,&NUM NUMBER OF RECORDS
.A43     ANOP
         SRA   2,1 DIV. THRU 2
         LR    3,2
&SUCH&INDEX.B EQU *
         LR    1,2
         MH    1,=H'&LEN' LENGTH OF RECORD
         AR    1,0
         AIF   (N'&POS NE 1).A44
&DL1     SETC  '(L'''
         AIF   (T'&COMP EQ 'P').A43A
         CLC   &POS&DL1&COMP,1),&COMP COMPARE
         AGO   .A43B
.A43A    ANOP
         CP    &POS&DL1&COMP,1),&COMP COMPARE
.A43B    ANOP
         BE    &SUCH&INDEX.G FOUND
         AGO   .A47
.A44     ANOP
&Z       SETA  1
&DL1     SETC  '(&POS(&Z+1).)'
&DL2     SETC  '&POS(&Z)'
.A45     ANOP
         MVC   &SUCH&INDEX.A&DL1,&DL2.(1) FILL COMPARE-FIELD
&D       SETA  &POS(&Z+1)
&Z       SETA  &Z+2
         AIF   (&Z GT &C).A46
&DL1     SETC  '+&D.(&POS(&Z+1).)'
&DL2     SETC  '&POS(&Z)'
         AGO   .A45
.A46     ANOP
&DL1     SETC  '(L'''
         CLC   &SUCH&INDEX.A&DL1&COMP.),&COMP COMPARE
         BE    &SUCH&INDEX.G FOUND
.A47     ANOP
         BH    &SUCH&INDEX.D
         SRA   3,1 DIV. THRU 2
         BNZ   &SUCH&INDEX.C
         TM    &SAVE.SCH,X'01'
         BO    &SUCH&INDEX.F NOT FOUND
         OI    &SAVE.SCH,X'02'
         LA    3,1
         AIF   ('&SORT' EQ 'D').A48
&SUCH&INDEX.C AR 2,3
         AIF   (T'&NUM EQ 'N').A47A
         CH    2,&NUM
         AGO   .A47B
.A47A    ANOP
         CH    2,=H'&NUM'
.A47B    ANOP
         BNL   &SUCH&INDEX.F NOT FOUND
         AGO   .A49
.A48     ANOP
&SUCH&INDEX.C SR 2,3
         BM    &SUCH&INDEX.F NOT FOUND
.A49     ANOP
         B     &SUCH&INDEX.B
&SUCH&INDEX.D SRA 3,1 DIV. THRU 2
         BNZ   &SUCH&INDEX.E
         TM    &SAVE.SCH,X'02'
         BO    &SUCH&INDEX.F NOT FOUND
         OI    &SAVE.SCH,X'01'
         LA    3,1
         AIF   ('&SORT' EQ 'D').A50
&SUCH&INDEX.E SR 2,3
         BM    &SUCH&INDEX.F NOT FOUND
         AGO   .A51
.A50     ANOP
&SUCH&INDEX.E AR 2,3
         AIF   (T'&NUM EQ 'N').A50A
         CH    2,&NUM
         AGO   .A50B
.A50A    ANOP
         CH    2,=H'&NUM'
.A50B    ANOP
         BNL   &SUCH&INDEX.F NOT FOUND
.A51     ANOP
         B     &SUCH&INDEX.B
&SUCH&INDEX.F LM 0,3,&SAVE.SAV LOAD SAVED REGISTERS
         SR    &REG,&REG
         AIF   ('&NFOUND' EQ '0').A56
         AIF   ('&NFOUND'(1,1) EQ '(').A55A
         B     &NFOUND NOTFOUND-ADDRESS
         AGO   .A57
.A55A    ANOP
&Z       SETA  K'&NFOUND
&Z       SETA  &Z-2
&DL1     SETC  '&NFOUND'(2,&Z)
         BR    &DL1 NOT FOUND
         AGO   .A57
.A56     ANOP
         B     &SUCH&INDEX.H NOT FOUND
.A57     ANOP
&SUCH&INDEX.G LR 0,1
         LM    1,3,&SAVE.SAV+4 LOAD SAVED REGISTERS
         AIF   ('&REG' EQ '0').A58
         LR    &REG,0
         L     0,&SAVE.SAV LOAD SAVED REGISTER
.A58     AIF   ('&NFOUND' NE '0').A58A
&SUCH&INDEX.H EQU *
.A58A    ANOP
         SPACE 2
         MEXIT
.A59     ANOP
         AIF   (T'&COMP NE 'C').A60
         MNOTE 8,'INVALID FOURTH OPERAND (TYPE C CONFLICTING BY ORG-OPE*
               RAND)'
&ERR2    SETB  (1)
.A60     AIF   (L'&COMP LE 4).A60A
         MNOTE 8,'INVALID FOURTH OPERAND (LENGTH GT 4, CONFLICTING BY 0*
               RG-OPERAND)'
&ERR2    SETB  (1)
.A60A    AIF   ('&POINT' NE '0' OR  '&SORT' EQ 'A').A60B
         MNOTE 8,'INVALID SORT-OPERAND (POINT-OPERAND MISSING)'
&ERR2    SETB  (1)
.A60B    AIF   (&ERR2).ENDE
&LABEL   STM   0,3,&SAVE.SAV SAVE REGISTERS
         AIF   (T'&COMP NE 'H' AND T'&COMP NE 'F').A61
         AIF   (&TSUCH1).A67
         B     &SUCH&INDEX BRANCH AROUND SAVE-AREA
&SAVE.SAV DC   4F'0' SAVE-AREA
&SAVE.SCH DC   X'00'
         DS    0H SET ON HALFWORD-BOUNDARY
&TSUCH1  SETB  (1)
&SUCH&INDEX EQU *
         AGO   .A67
.A61     AIF   (&TSUCH1).A62
         B     &SUCH&INDEX BRANCH AROUND SAVE-AREA AND ADDRESS-FIELD
&SAVE.SAV DC   4F'0' SAVE-AREA
&SAVE.SCH DC   X'00'
&TSUCH1  SETB  (1)
         AGO   .A63
.A62     ANOP
         B     &SUCH&INDEX BRANCH AROUND ADDRESS-FIELD
.A63     AIF   (T'&COMP EQ 'B').A64
&SUCH&INDEX.A DS 0D ADDRESS-FIELD
         DC    F'0',F'12'
         AGO   .A66
.A64     ANOP
&Z       SETA  L'&COMP
         AIF   (&Z LE 2).A65
&SUCH&INDEX.A DC F'0' ADDRESS-FIELD
         AGO   .A66
.A65     ANOP
&SUCH&INDEX.A DC H'0' ADDRESS-FIELD
.A66     ANOP
&SUCH&INDEX EQU *
.A67     ANOP
         AIF   ('&R' EQ '').A670
         LR    2,&R LOAD ADDRESS
         AGO   .A671
.A670    ANOP
         LA    2,&ADDR LOAD ADDRESS
.A671    ANOP
         LA    1,&LEN
         AIF   (T'&NUM EQ 'N').A67E
         MH    1,&NUM NUMBER OF RECORDS
         AGO   .A67F
.A67E    ANOP
         MH    1,=H'&NUM' NUMBER OF RECORDS
.A67F    ANOP
         LA    3,0(1,2) END-ADDRESS
         AIF   (T'&COMP NE 'F').A69
         L     0,&COMP LOAD REL.ADDRESS
         AIF   ('&POINT' EQ '0').A67A
         L     1,&POINT LOAD POINT
.A67B    ANOP
         AIF   ('&SORT' EQ 'D').A68
         SR    0,1
.A67A    ANOP
         MH    0,=H'&LEN' LENGTH OF RECORD
         AR    0,2 = ADDRESS OF RECORD
         CR    0,2
         BL    &SUCH&INDEX.B NOT FOUND
         CR    0,3
         BL    &SUCH&INDEX.C FOUND
&SUCH&INDEX.B LM 0,3,&SAVE.SAV LOAD SAVED REGISTERS
         SR    &REG,&REG
         AIF   ('&NFOUND' EQ '0').A68A
         AIF   ('&NFOUND'(1,1) EQ '(').A68A1
         B     &NFOUND NOTFOUND-ADDRESS
         AGO   .A68B
.A68A1   ANOP
&Z       SETA  K'&NFOUND
&Z       SETA  &Z-2
&DL1     SETC  '&NFOUND'(2,&Z)
         BR    &DL1
         AGO   .A68B
.A68A    ANOP
         B     &SUCH&INDEX.D NOT FOUND
.A68B    ANOP
&SUCH&INDEX.C LM 1,3,&SAVE.SAV+4 LOAD SAVED REGISTERS
         AIF   ('&REG' EQ '0').A68C
         LR    &REG,0
         L     0,&SAVE.SAV LOAD SAVED REGISTER
.A68C    ANOP
         AIF   ('&NFOUND' NE '0').ENDE
&SUCH&INDEX.D EQU *
         SPACE 2
         MEXIT
.A68     ANOP
         SR    1,0
         LR    0,1
         AGO   .A67A
.A69     AIF   (T'&COMP NE 'H').A70
         LH    0,&COMP LOAD REL.ADDRESS
         AIF   ('&POINT' EQ '0').A67A
         LH    1,&POINT LOAD POINT
         AGO   .A67B
.A70     AIF   (T'&COMP NE 'B').A77
         AIF   (L'&COMP EQ 1 OR L'&COMP EQ 3).A72
         AIF   (L'&COMP EQ 2).A71
         MVC   &SUCH&INDEX.A,&COMP
         L     0,&SUCH&INDEX.A LOAD REL.ADDRESS
         AIF   ('&POINT' EQ '0').A67A
         MVC   &SUCH&INDEX.A,&POINT
         L     1,&SUCH&INDEX.A LOAD POINT
         AGO   .A67B
.A71     ANOP
         MVC   &SUCH&INDEX.A,&COMP
         LH    0,&SUCH&INDEX.A LOAD REL.ADDRESS
         AIF   ('&POINT' EQ '0').A67A
         MVC   &SUCH&INDEX.A,&POINT
         LH    1,&SUCH&INDEX.A LOAD POINT
         AGO   .A67B
.A72     ANOP
         MVC   &SUCH&INDEX.A+1(&Z),&COMP
         AIF   (L'&COMP EQ 3).A75
         LH    0,&SUCH&INDEX.A LOAD REL.ADDRESS
.A73     ANOP
         AIF   ('&POINT' EQ '0').A67A
         MVC   &SUCH&INDEX.A+1(&Z),&POINT
         AIF   (L'&COMP EQ 3).A76
         LH    1,&SUCH&INDEX.A LOAD POINT
.A74     AGO   .A67B
.A75     ANOP
         L     0,&SUCH&INDEX.A LOAD REL.ADDRESS
         AGO   .A73
.A76     ANOP
         L     1,&SUCH&INDEX.A LOAD POINT
         AGO   .A74
.A77     ANOP
         AIF   (T'&COMP EQ 'P').A78
         MVO   &SUCH&INDEX.A,&COMP
         AGO   .A79
.A78     ANOP
         ZAP   &SUCH&INDEX.A,&COMP
.A79     ANOP
         CVB   0,&SUCH&INDEX.A LOAD REL.ADDRESS
         AIF   ('&POINT' EQ '0').A67A
         AIF   (T'&COMP EQ 'P').A80
         MVO   &SUCH&INDEX.A,&POINT
         AGO   .A81
.A80     ANOP
         ZAP   &SUCH&INDEX.A,&POINT
.A81     ANOP
         CVB   1,&SUCH&INDEX.A LOAD POINT
         AGO   .A67B
.ENDE    ANOP
         SPACE 2
         MEND
./ ADD NAME=DMTSORT
         MACRO
&LABEL   DMTSORT &ADDR,&NUM,&LEN,&FIELDS=,&FORMAT=CH
         GBLB  &TSORT1
         LCLA  &C,&Z,&Z1,&L(3),&A,&R
         LCLB  &ERR,&ERR1,&SCHLZ
         LCLC  &INDEX,&SORT,&SAVE,&REG,&X,&D,&F
         AIF   (K'&LABEL GT 4).A0
&SORT    SETC  'MSORT'
         AGO   .A0A
.A0      ANOP
&SORT    SETC  '&LABEL'(1,5)
.A0A     ANOP
&SAVE    SETC  'MSORT'
         SPACE 2
         AIF   ('&ADDR' NE '').A1A
         MNOTE 8,'FIRST OPERAND MISSING'
&ERR     SETB  (1)
         AGO   .A1
.A1A     AIF   ('&ADDR'(1,1) EQ '(').A1
         AIF   (T'&ADDR NE 'N').A1
         MNOTE 8,'INVALID FIRST OPERAND'
&ERR     SETB  (1)
.A1      AIF   ('&NUM' NE '').A2
         MNOTE 8,'SECOND OPERAND MISSING'
&ERR     SETB  (1)
.A2      AIF   ('&LEN' NE '').A3
         MNOTE 8,'THIRD OPERAND MISSING'
&ERR     SETB  (1)
.A3      AIF   ('&FIELDS' NE '').A4
         MNOTE 8,'FIELDS MISSING'
&ERR     SETB  (1)
.A4      AIF   (T'&NUM EQ 'N' OR T'&NUM EQ 'H' OR '&NUM' EQ '').A5
         MNOTE 8,'INVALID SECOND OPERAND'
&ERR     SETB  (1)
.A5      AIF   (T'&LEN EQ 'N' OR '&LEN' EQ '').A6
         MNOTE 8,'INVALID THIRD OPERAND'
&ERR     SETB  (1)
.A6      ANOP
&C       SETA  N'&FIELDS
         AIF   (&C EQ 0).A18
&Z       SETA  4
.A7      AIF   (&C GT &Z).A8
         AIF   (&C EQ &Z).A9
         MNOTE 8,'INVALID FIELDS-OPERAND (NUMBER OF SUBOPERANDS INCORRE*
               CT)'
&ERR     SETB  (1)
         AGO   .A18
.A8      ANOP
&Z       SETA  &Z+4
         AGO   .A7
.A9      ANOP
&Z       SETA  1
.A10     AIF   (T'&FIELDS(&Z) EQ 'N').A11
         MNOTE 8,'INVALID FIELDS-OPERAND (&Z..SUBOPERAND INCORRECT)'
&ERR1    SETB  (1)
.A11     ANOP
&Z       SETA  &Z+1
         AIF   (T'&FIELDS(&Z) EQ 'N').A12
         MNOTE 8,'INVALID FIELDS-OPERAND (&Z..SUBOPERAND INCORRECT)'
&ERR1    SETB  (1)
.A12     ANOP
&Z       SETA  &Z+1
         AIF   ('&FIELDS(&Z)' EQ '' OR '&FIELDS(&Z)' EQ 'CH' OR '&FIELD*
               S(&Z)' EQ 'P').A13A
         MNOTE 8,'INVALID FIELDS-OPERAND (&Z.. SUBOPERAND NOT CH, P OR *
               BLANK)'
&ERR1    SETB  (1)
.A13A    ANOP
&Z       SETA  &Z+1
         AIF   ('&FIELDS(&Z)' EQ 'A' OR '&FIELDS(&Z)' EQ 'D').A13
         MNOTE 8,'INVALID FIELDS-OPERAND (&Z..SUBOPERAND NOT A OR D)'
&ERR1    SETB  (1)
.A13     ANOP
&Z       SETA  &Z+1
         AIF   (&Z LT &C).A10
         AIF   (&ERR1).A14
         AGO   .A15
.A14     ANOP
&ERR     SETB  (1)
         AGO   .A18
.A15     ANOP
&Z       SETA  1
&Z1      SETA  2
&L(1)    SETA  &LEN
.A16     ANOP
&L(2)    SETA  &FIELDS(&Z)
&L(3)    SETA  &FIELDS(&Z1)
         AIF   (&L(2)+&L(3) LE &L(1)).A17
         MNOTE 8,'INVALID FIELDS-OPERAND (&Z.. + &Z1..SUBOPERAND GREATE*
               R THIRD OPERAND)'
&ERR     SETB  (1)
.A17     ANOP
&Z       SETA  &Z+4
&Z1      SETA  &Z1+4
         AIF   (&Z LT &C).A16
.A18     ANOP
         AIF   ('&FORMAT' EQ 'CH' OR '&FORMAT' EQ 'P').A18A
         MNOTE 8,'INVALID FORMAT-OPERAND (NOT CH OR P)'
&ERR     SETB  (1)
         AGO   .A18C
.A18A    AIF   ('&FORMAT' EQ 'P').A18B
&X       SETC  'LC'
         AGO   .A18C
.A18B    ANOP
&X       SETC  '&FORMAT'
.A18C    ANOP
         AIF   (&ERR).ENDE
&INDEX   SETC  '&SYSNDX'(3,2)
&LABEL   STM   1,6,&SAVE.SAV SAVE REGISTERS
         AIF   (&TSORT1).A19A
         B     &SORT&INDEX BRANCH AROUND SAVEAREA
&SAVE.SAV DC   6F'0' SAVE-AREA
&TSORT1  SETB  (1)
&SORT&INDEX EQU *
.A19A    ANOP
         AIF   ('&ADDR'(1,1) NE '(').A19B
&Z       SETA  K'&ADDR
&Z       SETA  &Z-2
&REG     SETC  '&ADDR'(2,&Z)
         LR    4,&REG LOAD ADDRESS
         AGO   .A19C
.A19B    ANOP
         LA    4,&ADDR LOAD ADDRESS
.A19C    ANOP
         LR    5,4 SAVE ADDRESS
         LA    2,&LEN LOAD INCREMENT
         LR    3,2
         AIF   (T'&NUM EQ 'N').A19
         MH    3,&NUM NUMBER OF RECORDS
         AGO   .A20
.A19     ANOP
         MH    3,=H'&NUM' NUMBER OF RECORDS
.A20     ANOP
         AR    3,4
         SR    3,2
         BCTR  3,0 MINUS 1 = COMPARAND
&SORT&INDEX.A LA 1,0(2,4)
&R       SETA  4
&D       SETC  'E'
.A20A    ANOP
&Z       SETA  1
&Z1      SETA  2
&A       SETA  4
.A21     ANOP
         AIF   ('&FIELDS(&Z1+1)' NE '').A20B
&F       SETC  '&X'
         AGO   .A20C
.A20B    ANOP
         AIF   ('&FIELDS(&Z1+1)' EQ 'P').A20D
&F       SETC  'LC'
         AGO   .A20C
.A20D    ANOP
&F       SETC  '&FIELDS(&Z1+1)'
.A20C    ANOP
         AIF   ('&F' EQ 'LC').A20E
         C&F   &FIELDS(&Z).(&FIELDS(&Z1),&R.),&FIELDS(&Z).(&FIELDS(&Z1)*
               ,1) COMPARE
         AGO   .A20F
.A20E    ANOP
         C&F   &FIELDS(&Z).(&FIELDS(&Z1),&R.),&FIELDS(&Z).(1) COMPARE
.A20F    ANOP
         AIF   ('&FIELDS(&Z1+2)' EQ 'D').A22
         AIF   (&SCHLZ).A21B
         AIF   (&C EQ &A).A21A
.A21B    ANOP
         BL    &SORT&INDEX.B
.A21A    AIF   (&C EQ &A AND &SCHLZ).A23
         BH    &SORT&INDEX&D
         AGO   .A23
.A22     AIF   (&SCHLZ).A22B
         AIF   (&C EQ &A).A22A
.A22B    ANOP
         BH    &SORT&INDEX.B
.A22A    AIF   (&C EQ &A AND &SCHLZ).A23
         BL    &SORT&INDEX&D
.A23     ANOP
&A       SETA  &A+4
&Z       SETA  &Z+4
&Z1      SETA  &Z1+4
         AIF   (&Z LT &C).A21
         AIF   (&SCHLZ).A24
&SORT&INDEX.B BXLE 4,2,&SORT&INDEX.A
         B     &SORT&INDEX.F END OF SORT
&SORT&INDEX.C LR 6,1
         SH    6,=H'&LEN.' LENGTH (INCREMENT)
         CR    6,5 COMPARE BY ADDRESS
         BL    &SORT&INDEX.B
&R       SETA  6
&SCHLZ   SETB  (1)
&D       SETC  'D'
         AGO   .A20A
.A24     ANOP
&SORT&INDEX&D XC 0(&LEN,&R.),0(1) EXCHANGE OF DATA
         XC    0(&LEN,1),0(&R.)
         XC    0(&LEN,&R.),0(1)
         SH    1,=H'&LEN.' LENGTH (INCREMENT)
         B     &SORT&INDEX.C
         AIF   (&R EQ 4).A25
&R       SETA  4
&D       SETC  'E'
         AGO   .A24
.A25     ANOP
&SORT&INDEX.F LM 1,6,&SAVE.SAV LOAD SAVED REGISTERS
.ENDE    ANOP
         SPACE 2
         MEND
./ ADD NAME=DMPRINT
         MACRO
&LABEL   DMPRINT
.*             08.08.72 STOEHLER
         GBLA  &DMPRI1
         GBLB  &DMPRI2
         LCLA  &NUM,&LEN,&LC,&X,&Y,&Z,&S(16),&RG(16),&E
         LCLB  &I(16),&R(16)
         LCLC  &KOPFN,&CS,&W,&LE(16),&V,&U,&T,&IND,&LA(16),&LB(16),&BLA*
               NK,&A(16),&B(16),&SAVE
&SAVE    SETC  'MPRINTSA'
&IND     SETC  '&SYSNDX'(2,3)
&NUM     SETA  16
&DMPRI1  SETA  &DMPRI1+1
         AIF   (&DMPRI1 LT 100).A0
&DMPRI1  SETA  0
.A0      AIF   ('&LABEL' NE '').A1
&KOPFN   SETC  'PRINT&DMPRI1'
         AIF   (&DMPRI1 GT 9).A1A
&LEN     SETA  6
         AGO   .A1B
.A1A     ANOP
&LEN     SETA  7
.A1B     MNOTE *,'NO LABEL, PRINT IS NAMED BY ''&KOPFN.'''
         AGO   .A2
.A1      ANOP
&LEN     SETA  K'&LABEL
&KOPFN   SETC  '&LABEL'
.A2      ANOP
&CS      SETC  '&SYSECT'
&LC      SETA  8
.A2A     AIF   (N'&SYSLIST NE 0).A3
         MNOTE *,'NO OPERANDS'
.A2B     ANOP
         SPACE
&LABEL   STM   13,1,&SAVE SAVE REGISTERS
         AIF   (&DMPRI2).A2D
         B     &SAVE.+20 BRANCH AROUND SAVE-AREA
&SAVE    DC    5F'0' SAVE-AREA
&DMPRI2  SETB  (1)
.A2D     ANOP
         BAL   1,MPRNT&IND BRANCH AROUND PARAMETER
         DC    X'FC' NO REGISTERS WILL BE PRINTED
.A2C     ANOP
         DC    X'FF',CL8'&KOPFN.',CL8'&CS.',A(&SAVE.)
MPRNT&IND L    15,=V(GMTSR15) LOAD ENTRY-POINT
         BALR  14,15
         NOP   0(0) COUNTER
         LM    13,1,&SAVE LOAD SAVED REGISTERS
         SPACE
         MEXIT
.A3      AIF   (N'&SYSLIST LE &NUM).A4
         MNOTE *,'TOO MUCH OPERANDS, AFTER &NUM.. OPERAND IGNORED'
         AGO   .A5
.A4      ANOP
&NUM     SETA  N'&SYSLIST
.A5      ANOP
&X       SETA  &X+1
         AIF   (N'&SYSLIST(&X) EQ 1).A6
         MNOTE *,'&X.. OPERAND CONTAINS SUB-OPERANDS, IGNORED'
&I(&X)   SETB  (1)
.A6      AIF   (&X LT &NUM).A5
&X       SETA  0
.A7      ANOP
&X       SETA  &X+1
         AIF   (K'&SYSLIST(&X) LE 16).A7A
         MNOTE *,'&X.. OPERAND CONTAINS MORE THAN 16 CHARACTERS, IGNORE*
               D'
&I(&X)   SETB  (1)
.A7A     AIF   (&X LT &NUM).A7
&X       SETA  0
.A7B     ANOP
&X       SETA  &X+1
         AIF   (&I(&X)).A8
         AIF   ('&SYSLIST(&X)'(1,1) EQ '(').A9
.A8      AIF   (&X LT &NUM).A7B
         AGO   .A12
.A9      ANOP
&Y       SETA  K'&SYSLIST(&X)
         AIF   ('&SYSLIST(&X)'(&Y,1) EQ ')').A10
.A9A     MNOTE *,'&X.. OPERAND INVALID, IGNORED'
&I(&X)   SETB  (1)
         AGO   .A8
.A10     ANOP
&W       SETC  '&SYSLIST(&X)'(2,&Y-2)
         AIF   ('&W' EQ '0' OR '&W' EQ '2' OR '&W' EQ '4' OR '&W' EQ '6*
               ' OR '&W' EQ '8' OR '&W' EQ '10').A11
         AIF   ('&W' EQ '12' OR '&W' EQ '14').A11
         AGO   .A9A
.A11     ANOP
&R(&X)   SETB  (1)
&RG(&X)  SETA  &W
         AGO   .A8
.A12     ANOP
&X       SETA  0
.A13     ANOP
&X       SETA  &X+1
         AIF   (&I(&X) OR &R(&X)).A19
         AIF   ('&SYSLIST(&X)'(1,1) LT '0').A14
         MNOTE *,'&X.. OPERAND INVALID, IGNORED'
&I(&X)   SETB  (1)
         AGO   .A19
.A14     ANOP
&Y       SETA  K'&SYSLIST(&X)
.A15     ANOP
&Z       SETA  &Z+1
         AIF   ('&SYSLIST(&X)'(&Z,1) EQ '(').A17
.A16     AIF   (&Z NE &Y).A15
&Z       SETA  0
&S(&X)   SETA  K'&SYSLIST(&X)
         AGO   .A19
.A17     AIF   ('&SYSLIST(&X)'(&Y,1) EQ ')').A18
         MNOTE *,'&X.. OPERAND INVALID, IGNORED'
&I(&X)   SETB  (1)
&Z       SETA  0
         AGO   .A19
.A18     ANOP
&S(&X)   SETA  &Z-1
&Z       SETA  0
.A19     AIF   (&X LT &NUM).A13
&X       SETA  0
.A20     ANOP
&X       SETA  &X+1
         AIF   (&I(&X)).A23
         AIF   (&R(&X)).A23
&Z       SETA  K'&SYSLIST(&X)
         AIF   (&Z EQ &S(&X)).A21
         AIF   (&Z-(&S(&X)+2) GT 8).A21A
&LA(&X)  SETC   '&SYSLIST(&X)'(&S(&X)+2,&Z-(&S(&X)+2))
         AGO   .A23
.A21A    ANOP
&LA(&X)  SETC  '&SYSLIST(&X)'(&S(&X)+2,8)
&LB(&X)  SETC  '&SYSLIST(&X)'(&S(&X)+10,&Z-(&S(&X)+10))
         AGO   .A23
.A21     ANOP
&Y       SETA  1
.A22     AIF   ('&SYSLIST(&X)'(&Y,1) EQ '+' OR '&SYSLIST(&X)'(&Y,1) EQ *
               '-').A24
&Y       SETA  &Y+1
         AIF   (&Y LE &Z).A22
&LE(&X)  SETC  '&SYSLIST(&X)'(1,&S(&X))
.A23     AIF   (&X LT &NUM).A20
         AGO   .A25
.A24     ANOP
&LE(&X)  SETC  '&SYSLIST(&X)'(1,&Y-1)
         AGO   .A23
.A25     ANOP
&X       SETA  0
.A26     ANOP
&X       SETA  &X+1
         AIF   (&I(&X)).A27
         AGO   .A28
.A27     AIF   (&X LT &NUM).A26
         MNOTE *,'ALL OPERANDS IGNORED, ONLY REGISTERS WILL BE PRINTED'
         AGO   .A2B
.A28     ANOP
         SPACE
&LABEL   STM   13,1,&SAVE SAVE REGISTERS
         AIF   (&DMPRI2).A28A
         B     &SAVE.+20 BRANCH AROUND SAVE-AREA
&SAVE    DC    5F'0' SAVE-AREA
&DMPRI2  SETB  (1)
.A28A    ANOP
         BAL   1,MPRNT&IND BRANCH AROUND PARAMETER
         AIF   ('&SYSLIST(1)' EQ 'REGS').A28B
         DC    X'FC' NO REGISTERS WILL BE PRINTED
&X       SETA  0
         AGO   .A33
.A28B    ANOP
&X       SETA  1
         AGO   .A33
.A29     ANOP
&X       SETA  &X+1
         AIF   (&I(&X)).A33
         AIF   (&R(&X)).A34
&Z       SETA  K'&SYSLIST(&X)               AL1
&E       SETA  0
.A291    ANOP
&E       SETA  &E+1
         AIF   ('&SYSLIST(&X)'(&E,1) EQ '''').A293
         AIF   (&E LT &Z).A291
         AIF   (&Z GT 8).A292
&A(&X)   SETC  '&SYSLIST(&X)'(1,&Z)    C' '
         AGO   .A295
.A292    ANOP
&A(&X)   SETC  '&SYSLIST(&X)'(1,8)     C' '
&B(&X)   SETC  '&SYSLIST(&X)'(9,&Z-8)  C' '
         AGO   .A295
.A293    ANOP
&A(&X)   SETC  'FELD NR.'              C' '
&B(&X)   SETC  ' &X'                   C' '
         AIF   (&X GT 9).A294
&Z       SETA  10
         AGO   .A295
.A294    ANOP
&Z       SETA  11
.A295    ANOP
         AIF   (&S(&X) GT 8).A30
&V       SETC  '&SYSLIST(&X)'(1,&S(&X))     SL2
&U       SETC  '&BLANK'
         AGO   .A31
.A30     ANOP
&V       SETC  '&SYSLIST(&X)'(1,8)          SL2
&U       SETC  '&SYSLIST(&X)'(9,&S(&X)-8)   SL2
.A31     AIF   ('&LA(&X)' NE '').A32
&W       SETC  'L'''                        AL2
&T       SETC  '&LE(&X)'                    AL2
         DC    AL1(&Z.),C'&A(&X)&B(&X).',SL2(&V&U.),AL2(&W&T.)
         AGO   .A33
.A32     ANOP
         DC    AL1(&Z.),C'&A(&X)&B(&X).',SL2(&V&U.),AL2(&LA(&X)&LB(&X).*
               )
.A33     AIF   (&X LT &NUM).A29
         AGO   .A2C
.A34     ANOP
&Z       SETA  K'&SYSLIST(&X)               AL1
         DC    X'FE',AL1(&Z.),C'&SYSLIST(&X).',AL2(&RG(&X).*4096)
         AGO   .A33
.ENDE    ANOP
         MEND
./ ADD NAME=DMDAT
         MACRO
&N       DMDAT   &REG,&DATUM=,&ZEIT=
         GBLC  &DMDAT11
&N       DS    0H
         AIF   ('&DMDAT11' NE '').P20
&DMDAT11 SETC  'IHB&SYSNDX'
         B     *+42
&DMDAT11 DC    PL5'0',P'310,280,310,300,310,300,310,310,300,310,300'
         DC    P'310',CL9' '
         SPACE
.P20     ANOP
         AIF   ('&REG' EQ '').P100
         AIF   ('&REG' EQ '1' OR '&REG' EQ 'R1').P30
         LR    1,&REG
.P30     ANOP
         AGO   .P170
.*
.P100    ANOP
         LA    1,2
         SVC   11 
.P150    ANOP
         AIF   ('&ZEIT' EQ '').P170
         STCM  0,14,&DMDAT11  
         MVC   &DMDAT11+29(9),=X'4021204B20206B2020'
         ED    &DMDAT11+29(9),&DMDAT11
         LA    15,&ZEIT
         MVC   0(8,15),&DMDAT11+30
         SPACE
.P170    ANOP
         STCM  1,4,&DMDAT11+3  
         SRL   1,4
         STH   1,&DMDAT11  
         NI    &DMDAT11,15
         IC    1,&DMDAT11+3
         MVI   &DMDAT11+7,X'28'  
         TM    &DMDAT11+3,1  
         BO    *+16 
         TM    &DMDAT11+3,18
         BM    *+8 
         MVI   &DMDAT11+7,X'29'  
         MVI   &DMDAT11+3,1
         MVI   &DMDAT11+2,12
         LA    15,&DMDAT11+5
         SP    &DMDAT11.(3),0(2,15) 
         BNP   *+18
         AP    &DMDAT11+3(2),=P'10'  
         LA    15,2(15)
         B     *-20
         AP    &DMDAT11.(3),0(2,15)
         ICM   1,2,&DMDAT11+3  
         STH   1,&DMDAT11+2 
         MVC   &DMDAT11+29(9),=X'4020204B20204B2020'
         ED    &DMDAT11+29(9),&DMDAT11+1
         LA    1,&DMDAT11+30
         AIF   ('&DATUM' EQ '').P200
         LA    15,&DATUM
         MVC   0(8,15),0(1)
.P200    ANOP
         SPACE
         MEND
./ ADD NAME=DMULJ
         MACRO
&LABEL   DMULJ &DCBOP,&UHL=#,&UTL=#,&JFCB=#,&COUNT=#
.*             05.08.72 STOEHLER
         GBLB  &DMULJ1,&DMULJ2
         LCLA  &X,&Y,&Z,&ANZ(2),&D
         LCLB  &ERR,&STB(15)
         LCLC  &DCB(3),&LOAD,&A,&B,&C,&IN,&ROUT(3),&NAME,&LAB,&BL,&RCD,*
               &RC
&IN      SETC  '&SYSNDX'(3,2)          2-STELLIGER INDEX
&D       SETA  8
&LAB     SETC  '&LABEL'
         SPACE
.*
.*             PRUEFEN DER OPERANDEN UND SETZEN VON STEUERMERKMALEN
.*
.*             D C B - O P E R A N D
         AIF   ('&DCBOP' NE '').A1
         MNOTE 8,'***ERROR***  FIRST OPERAND (DCB) MISSING'
&ERR     SETB  (1)
         AGO   .A13                    PRUEFEN UHL/UTL-OPERANDEN
.A1      AIF   (N'&DCBOP LE 3).A2
         MNOTE 8,'***ERROR***  TOO MUCH SUB-OPERANDS IN FIRST OPERAND'
&ERR     SETB  (1)
         AGO   .A13                    PRUEFEN UHL/UTL-OPERANDEN
.A2      AIF   (N'&DCBOP EQ 3).A4
         AIF   (N'&DCBOP EQ 2).A3
&DCB(2)  SETC  'INPUT'
.A3      ANOP
&DCB(3)  SETC  'FORWARD'
.A4      ANOP
&X       SETA  N'&DCBOP
         AIF   ('&DCBOP(1)' NE '').A5
         MNOTE 8,'***ERROR***  FIRST OPERAND INVALID, DCB-ADDRESS MISSI*
               NG'
&ERR     SETB  (1)
         AGO   .A8                     PRUEFEN DCBOP(2)
.A5      AIF   ('&DCBOP(1)'(1,1) NE '(').A7
&Y       SETA  K'&DCBOP(1)
         AIF   ('&DCBOP(1)'(&Y,1) EQ ')').A6
         MNOTE 8,'***ERROR***  INVALID DCB-ADDRESS, NO ENDING PARENTHES*
               IS'
&ERR     SETB  (1)
         AGO   .A8                     PRUEFEN DCBOP(2)
.A6      ANOP
&LOAD    SETC  'R'
&DCB(1)  SETC  '&DCBOP(1)'(2,&Y-2)     REGISTER
         AGO   .A8
.A7      ANOP
&LOAD    SETC  'A'
&DCB(1)  SETC  '&DCBOP(1)'             SYMBOLISCHE ADRESSE
.A8      AIF   (&X EQ 1).A13           =N'&DCBOP /PRUEFEN UHL/UTL-OP
         AIF   ('&DCBOP(2)' NE '').A9
&DCB(2)  SETC  'INPUT'
         AGO   .A10                    PRUEFEN DCBOP(3)
.A9      AIF   ('&DCBOP(2)' EQ 'INPUT' OR '&DCBOP(2)' EQ 'OUTPUT' OR '&*
               DCBOP(2)' EQ 'UPDAT').A9A
         MNOTE 8,'***ERROR***  INVALID FIRST OPERAND, OPTION 1 INCORREC*
               T (&DCBOP(2).)'
&ERR     SETB  (1)
         AGO   .A10
.A9A     ANOP
&DCB(2)  SETC  '&DCBOP(2)'
.A10     AIF   (&X EQ 2).A13           =N'&DCBOP /PRUEFEN UHL/UTL-OP
         AIF   ('&DCBOP(3)' NE '').A11
&DCB(3)  SETC  'FORWARD'
         AGO   .A13                    PRUEFEN UHL/UTL-OP
.A11     AIF   ('&DCBOP(3)' EQ 'RDBACK' OR '&DCBOP(3)' EQ 'FORWARD').A1*
               2
         MNOTE 8,'***ERROR***  INVALID FIRST OPERAND, OPTION 2 INCORREC*
               T (&DCBOP(3).)'
&ERR     SETB  (1)
         AGO   .A13                    PRUEFEN UHL/UTL-OPERANDEN
.A12     ANOP
&DCB(3)  SETC  '&DCBOP(3)'
         AIF   ('&DCB(2)' EQ 'INPUT').A13
         MNOTE 8,'***ERROR***  INVALID FIRST OPERAND, OPTION 2 (RDBACK)*
                CONFLICTING BY OPTION 1'
&ERR     SETB  (1)
.*
.*             DIE DCB-ANGABEN NACH DER PRUEFUNG:
.*             &DCB(1) = DCB-ADRESSE (SYMBOL ODER REGISTER)
.*             &DCB(2) = OPTION 1 (INPUT, OUTPUT ODER UPDAT)
.*             &DCB(3) = OPTION 2 (FORWARD ODER RDBACK)
.*             &LOAD   = A ODER R (A=LA, R=LR (REGISTER-ANGABE)
.*
.A13     ANOP
.*
.*             UHL- UND UTL-OPERANDEN
.*
&STB(1)  SETB  ('&UHL' EQ '#')         OMITTED
         AIF   (&STB(1)).B1
         AIF   (N'&UHL EQ 2).B1
         MNOTE 8,'***ERROR***  INVALID UHL-OPERAND, N''SUB-OPERANDS INC*
               ORRECT'
&ERR     SETB  (1)
&STB(2)  SETB  (1)                     UHL INVALID
.B1      ANOP
&STB(3)  SETB  ('&UTL' EQ '#')         OMITTED
         AIF   (&STB(3)).B2
         AIF   (N'&UTL EQ 2).B2
         MNOTE 8,'***ERROR***  INVALID UTL-OPERAND, N''SUB-OPERANDS INC*
               ORRECT'
&ERR     SETB  (1)
&STB(4)  SETB  (1)                     UTL INVALID
.B2      AIF   ((&STB(1) OR &STB(2)) AND (&STB(3) OR &STB(4))).B11
.*                                     PRUEFEN JFCB-OPERAND
         AIF   (&STB(1) OR &STB(2)).B4
.B3      ANOP
&A       SETC  '&UHL(1)'
&B       SETC  '&UHL(2)'
&C       SETC  'UHL'
&Z       SETA  1
         AGO   .B5                     PRUEFEN UHL/UTL (1)
.B4      ANOP
&A       SETC  '&UTL(1)'
&B       SETC  '&UTL(2)'
&STB(5)  SETB  (1)
&C       SETC  'UTL'
&Z       SETA  2
.B5      AIF   ('&A' NE '').B6
&ANZ(&Z) SETA  1
         AGO   .B8                     PRUEFEN UHL/UTL (2)
.B6      AIF   ('&A' GE '0' AND '&A' LE '8').B7
         MNOTE 0,'**WARNING**  INVALID FIRST SUB-OPERAND IN &C.-OPERAND*
               , ''1'' ASSUMED'
&ANZ(&Z) SETA  1
         AGO   .B8                     PRUEFEN UHL/UTL (2)
.B7      ANOP
&ANZ(&Z) SETA  &A                      ANZAHL UHL/UTL
.B8      AIF   ('&B' NE '').B9
         MNOTE 8,'***ERROR***  SECOND SUB-OPERAND IN &C.-OPERAND MISSIN*
               G'
&ERR     SETB  (1)
         AGO   .B10
.B9      ANOP
&ROUT(&Z) SETC '&B'
.B10     AIF   (&STB(5)).B11           PRUEFEN JFCB-OPERAND
         AIF   (&STB(3) OR &STB(4)).B11
         AGO   .B4                     PRUEFEN UTL
.*
.*             DIE UHL- UND/ODER UTL-ANGABEN NACH DER PRUEFUNG:
.*             UHL:                          UTL:
.*             &ANZ(1)  = ANZAHL LABELS      &ANZ(2)  = ANZAHL LABELS
.*             &ROUT(1) = ROUTINE            &ROUT(2) = ROUTINE
.*             &STB(1)  = OMITTED            &STB(3)  = OMITTED
.*
.B11     ANOP
.*
.*             J F C B - O P E R A N D
.*
         AIF   ('&JFCB' EQ '#').C2     OMITTED
         AIF   (N'&JFCB NE 1 AND N'&JFCB NE 2).C1A
         AIF   ('&JFCB(1)' EQ 'YES' OR '&JFCB(1)' EQ 'NO').C1
.C1A     MNOTE 0,'**WARNING**  INVALID JFCB-OPERAND, ''NO'' ASSUMED'
         AGO   .C2
.C1      ANOP
         AIF   (N'&JFCB EQ 1).C1C
         AIF   ('&JFCB(2)' NE 'DEF').C1A
         AIF   (NOT &DMULJ2).C1B
         MNOTE 0,'**WARNING**  IEFJFCBN ALREADY DEFINED, NO GENERATING *
               FOR IEFJFCBN'
         AGO   .C1C
.C1B     ANOP
&STB(15) SETB  (1)
.C1C     ANOP
&STB(6)  SETB  ('&JFCB(1)' EQ 'YES')
.*
.*             JFCB-ANGABE NACH PRUEFUNG:
.*             &STB(6): 0=NO, 1=YES
.*
.C2      ANOP
.*
.*             C O U N T - O P E R A N D
.*
         AIF   ('&COUNT' EQ '#').D2    OMITTED
         AIF   (N'&COUNT NE 1).D1A
         AIF   ('&COUNT' NE '').D1
.D1A     MNOTE 0,'**WARNING**  INVALID COUNT-OPERAND, NO GENERATING FOR*
                COUNT'
         AGO   .D2
.D1      ANOP
&STB(7)  SETB  (1)
&ROUT(3) SETC  '&COUNT'
.*
.*             COUNT-ANGABE NACH PRUEFUNG
.*             &STB(7): 0=OMITTED, 1=&ROUT(3) = NAME DER ROUTINE
.*
.D2      ANOP
.*
.*             FREI FUER WEITERE PRUEFUNGEN (WEITERER OPERANDEN)
.*             BEI FESTSTELLUNG VON FEHLERN IST &ERR AUF 1 ZU SETZEN
.*
.K1      ANOP
.*
.*             G E N E R I E R U N G
.*
.*
.*             PRUEFEN, OB FEHLER AUFGETRETEN
.*
         AIF   (NOT &ERR).K2
.K2A     MNOTE *,'**COMMENT**  N O   G E N E R A T I N G '
         AGO   .ENDE
.K2      AIF   (NOT &STB(1) OR NOT &STB(3) OR &STB(6) OR &STB(7)).K3
         MNOTE *,'**COMMENT**  ALL KEYWORD-OPERANDS OMITTED OR INVALID'
         AGO   .K2A
.K3      ANOP
.*
.*             PRUEFEN DES ANGEGEBENEN NAMENS DER MACRO-INSTRUKTION.
.*             DER NAME WIRD GANZ ODER TEILWEISE ZUR BENENNUNG SOLCHER
.*             DEFINITIONEN BENUTZT, DIE EXTERN ANSPRECHBAR SEIN SOLLEN
.*
&NAME    SETC  'MULJFC'                DEFAULT-NAME
         AIF   ('&LABEL' NE '').K4
         AIF   (&DMULJ1).K6
&DMULJ1  SETB  (1)
         MNOTE *,'**COMMENT**  NO NAME IN MACRO-INSTRUCTION, USER-DEFIN*
               ITIONS NAMED FROM ''&NAME.01'' UNTIL ''&NAME.0&D.'''
         AGO   .K7
.K4      ANOP
&Y       SETA  K'&LABEL
         AIF   (&Y LE 6).K5
&Y       SETA  6
.K5      ANOP
&NAME    SETC  '&LABEL'(1,&Y)
         MNOTE *,'**COMMENT**  MACRO-INSTRUCTION-NAME = ''&LABEL'', USE*
               R-DEFINITIONS NAMED FROM ''&NAME.01'' UNTIL ''&NAME.0&D'*
               ''
         AGO   .K7
.K6      MNOTE 8,'***ERROR***  MACRO-INSTRUCTION-NAME MISSING, DEFAULT-*
               NAME ALREADY USED'
         AGO   .K2A
.K7      ANOP
.*
.*             JOB FILE CONTROL BLOCK
.*
         AIF   (NOT &STB(6)).M1        OMITTED OR INVALID
         SPACE
*              LESEN JOB FILE CONTROL BLOCK
&LAB     B     MJFCB&IN.C .              BRANCH ZUR DCB-MODIFIKATION
&LAB     SETC  '&BL'
*              LIST-FORM RDJFCB
         AIF   ('&LOAD' EQ 'R').L2
MJFCB&IN.A RDJFCB (&DCB(1).,(&DCB(2).)),MF=L
         AGO   .L3
.L2      ANOP
MJFCB&IN.A RDJFCB ((&DCB(1).),(&DCB(2).)),MF=L
.L3      ANOP
*              EXIT-LISTE FUER LESEN JFCB
MJFCB&IN.B DS  0F
         DC    X'87' .                 CODES 07(JFCB) + 80(END EXLST)
         DC    AL3(&NAME.01) .            ADR. DES JFCB-BEREICHS
*              JOB FILE CONTROL BLOCK
&NAME.01 DS    CL176
         AIF   (NOT &STB(15)).L4
         ORG   &NAME.01
&DMULJ2  SETB  (1)
.*
.*             AUFRUF SYSTEM-MACRO IEFJFCBN
.*             DEFINITION DES JFCB
.*
         DMJFCB
.L4      ANOP
*              MODIFIZIEREN DCB (EXLST)
MJFCB&IN.C L&LOAD 1,&DCB(1) .              LADEN DCB-ADRESSE
         MVC   37(3,1),=AL3(MJFCB&IN.B) .A(EXIT-LISTE) IN DCB (EXLST)
*              EXECUTE-FORM RDJFCB
         RDJFCB MF=(E,MJFCB&IN.A)
.*
.*             ENDE DES GENERIERUNGS-TEILS 'JFCB'
.*
.M1      ANOP
.*
.*             U S E R   L A B E L   /   C O U N T
.*
         AIF   (NOT &STB(1) OR NOT &STB(3) OR &STB(7)).M2
         AGO   .ENDE
.M2      ANOP
         SPACE
*              USER LABEL UND/ODER COUNT
&LAB     B     MULAB&IN.L .              BRANCH ZUR DCB-MODIFIKATION
*              EXIT-LISTE (INTERN)
MULAB&IN.A DS  0F
.*
.*             STEUERBITS SETZEN
.*
&STB(8)  SETB  ('&DCB(2)' NE 'OUTPUT')
&STB(9)  SETB  ('&DCB(3)' EQ 'RDBACK')
.*
&STB(10) SETB  ((&STB(8) AND (NOT &STB(1) AND NOT &STB(9)) OR (NOT &STB*
               (3) AND &STB(9))))      CODE 01
&STB(11) SETB  (NOT &STB(8) AND (NOT &STB(1) AND NOT &STB(9))) CODE 02
&STB(12) SETB  ((&STB(8) AND (NOT &STB(3) AND NOT &STB(9)) OR (NOT &STB*
               (1) AND &STB(9))))      CODE 03
&STB(13) SETB  (NOT &STB(8) AND (NOT &STB(3) AND NOT &STB(9))) CODE 04
&STB(14) SETB  (&STB(7))               CODE 0B (COUNT)
.*
.*             GENERIEREN EXIT-LISTE
.*
         AIF   (NOT &STB(10)).M3
         DC    X'01',AL3(MULAB&IN.1) .   INPUT-HEADER-LABEL-EXIT
.M3      AIF   (NOT &STB(11)).M4
         DC    X'02',AL3(MULAB&IN.2) .   OUTPUT-HEADER-LABEL-EXIT
.M4      AIF   (NOT &STB(12)).M5
         DC    X'03',AL3(MULAB&IN.3) .   INPUT-TRAILER-LABEL-EXIT
.M5      AIF   (NOT &STB(13)).M6
         DC    X'04',AL3(MULAB&IN.4) .   OUTPUT-TRAILER-LABEL-EXIT
.M6      AIF   (NOT &STB(14)).M8
         DC    X'0B',AL3(MULAB&IN.E) .   BLOCK-COUNT-EXIT
.M8      ANOP
         DC    X'80',AL3(0) .          ENDE DER EXIT-LISTE
*              EXIT-LISTE (EXTERN)
         AIF   (&STB(9)).M13
         AIF   (NOT &STB(10)).M9
     DC X'&ANZ(1).',AL3(&ROUT(1).) .       UHL-ROUTINE (INPUT)
.M9      AIF   (NOT &STB(11)).M10
     DC X'&ANZ(1).',AL3(&ROUT(1).) .       UHL-ROUTINE (OUTPUT)
.M10     AIF   (NOT &STB(12)).M11
      DC X'&ANZ(2).',AL3(&ROUT(2).) .      UTL-ROUTINE (INPUT)
.M11     AIF   (NOT &STB(13)).M12
     DC X'&ANZ(2).',AL3(&ROUT(2).) .       UTL-ROUTINE (OUTPUT)
.M12     AGO   .M17
.M13     AIF   (NOT &STB(10)).M14
     DC X'&ANZ(2).',AL3(&ROUT(2).) .       UTL-ROUTINE (INPUT-RDBACK)
.M14     AIF   (NOT &STB(12)).M17
     DC X'&ANZ(1).',AL3(&ROUT(1).) .       UHL-ROUTINE (INPUT-RDBACK)
.M17     ANOP
.M19     AIF   (NOT &STB(14)).M20
         DC    X'0',AL3(&ROUT(3).) .       BLOCK-COUNT-ROUTINE
.M20     ANOP
*              DEFINITIONEN
&NAME.02 DC    A(0) .                  A(UHL/UTL-PUFFERBEREICH)
&NAME.03 DC    A(0) .                  A(DCB)
&NAME.04 DC    A(0) .                  A(STATUSINFORMATION)
&NAME.05 DC    F'0' .                  ANZAHL BLOECKE AUS STL
&NAME.06 DC    X'0' .                  INFORMATIONS-SCHALTER
&NAME.07 DC    X'0' .                  ANZAHL LABEL
&NAME.08 DC    X'0' .                  RETURN-CODE
MULAB&IN.B DC  5F'0' .                 SAVEAREA FUER REG. 13,14,15,0,1
.*
.*             GENERIERUNG DER INTERNEN EXIT-ROUTINE
.*
*              INTERNE EXIT-ROUTINE
         AIF   (NOT &STB(14)).N1
MULAB&IN.E ST  0,&NAME.05 .            ANZAHL BLOECKE AUS STL
         ST    1,&NAME.03 .            A(DCB)
         AIF   (NOT &STB(10) AND NOT &STB(11) AND NOT &STB(12) AND NOT *
               &STB(13)).N2
         B     MULAB&IN.G .
.N1      AIF   (NOT &STB(10)).N1A
MULAB&IN.1 NOPR 0
.N1A     AIF   (NOT &STB(11)).N1B
MULAB&IN.2 NOPR 0
.N1B     AIF   (NOT &STB(12)).N1C
MULAB&IN.3 NOPR 0
.N1C     AIF   (NOT &STB(13)).N1D
MULAB&IN.4 NOPR 0
.N1D     ANOP
         MVC   &NAME.02(12),0(1) .     PARAMETER UEBERTRAGEN
         IC    0,&NAME.06 .            INFORMATIONS-SCHALTER
         AH    0,=H'1' .               + 1
         STC   0,&NAME.06 .            INFORMATIONS-SCHALTER
.N2      ANOP
MULAB&IN.G STM 13,1,MULAB&IN.B .         SAVE REG. 13,14,15,0,1
&Z       SETA  0
&Y       SETA  10
.N3      AIF   (NOT &STB(&Y)).N4
&Z       SETA  &Z+1
.N4      AIF   (&Y EQ 14).N5
&Y       SETA  &Y+1
         AGO   .N3
.N5      ANOP
&Z       SETA  &Z*4+4
         LA    14,MULAB&IN.A .           A(EXIT-LISTE(INTERN))
         LA    15,0(15) .              FLAG LOESCHEN
MULAB&IN.H L   1,0(14) .               ENTRY-POINT AUS EXLST(INTERN)
         LA    1,0(1) .                FLAG LOESCHEN
         CR    1,15 .                  VERGLEICH MIT ENTRY-POINT
         BE    MULAB&IN.I .
         LA    14,4(14) .              ERHOEHEN
         B     MULAB&IN.H
MULAB&IN.I L   15,&Z.(14) .              LADEN A(EXTERNE ROUTINE)
         MVC   &NAME.07,&Z.(14) .        ANZAHL LABEL
         MVI   &NAME.08,X'FF' .        RETURN-CODE
         BALR  14,15 .                 VERZWEIGEN ZUR EXTERNEN ROUTINE
         LM    13,1,MULAB&IN.B .         LADEN GESICHERTE REG.-INHALTE
         AIF   ('&DCB(2)' NE 'INPUT').Q1
&RCD     SETC  '0'
&RC      SETC  '4'
         AGO   .Z1
.Q1      AIF   ('&DCB(2)' NE 'OUTPUT').R1
&RCD     SETC  '4'
&RC      SETC  '8'
         AGO   .Z1
.R1      ANOP
&RCD     SETC  '8'
&RC      SETC  '12'
.Z1      ANOP
         TM    &NAME.08,X'FF' .        RETURN-CODE ANGEGEBEN ?
         BNO   MULAB&IN.K .              JA
         CLC   &NAME.07,&NAME.06 .     LETZTER LABEL ?
         BE    MULAB&IN.J .              JA
         LA    15,&RC .                  RETURN-CODE
         BR    14 .                    RETURN
MULAB&IN.J XC  &NAME.06,&NAME.06 .     LOESCHEN INFORMATIONS-SCHALTER
         LA    15,&RCD .                  RETURN-CODE
         BR    14 .                    RETURN
MULAB&IN.K SR  15,15 .                 LOESCHEN REGISTER 15
         IC    15,&NAME.08 .           RETURN-CODE
         BR    14 .                    RETURN
*              MODIFIZIEREN DCB (EXLST)
MULAB&IN.L L&LOAD 1,&DCB(1) .              LADEN DCB-ADRESSE
         MVC   37(3,1),=AL3(MULAB&IN.A) .A(EXIT-LISTE) IN DCB (EXLST)
.*
.ENDE    ANOP
         SPACE
         MEND
./ ADD NAME=DMLOGD
         MACRO
&LABEL   DMLOGD &QUAL=TSO
.*       STOEHLER 18.5.76
.*       MACRO FUER LOG-DEFINITIONEN INNERHALB DES MCPS
.*       &QUAL MUSS 3-STELLIG SEIN
         LCLC  &Q
&Q       SETC  '&QUAL'
         B     &Q.DEF                  BRANCH UM DEFINITIONEN
&Q.EXIT  DS    A                       MCP-EXIT-ADRESSE
&Q.MOVE  MVC   &Q.MSG(0),0(R3)         FUER EXECUTE-BEFEHL
&Q.MSG   DS    CL80                    MSG-ZWISCHENSPEICHER
&Q.MSGF1 DC    AL1(55)                 FEHLER-MSG
 DC C'LOG007E FEHLER BEIM MHPUT, LETZTE EINGABE UEBERPRUEFEN '
&Q.DEF   DS    0H                      ENDE DER DEFINITIONEN
         SPACE 2
         MEND
./ ADD NAME=DMLOGI
         MACRO
         DMLOGI &QUAL=TSO
.*       STOEHLER 18.5.76
.*       MACRO FUER LOG-FUNKTION (INBUF) INNERHALB DES MCPS
.*       &QUAL MUSS 3-STELLIG SEIN UND DER GLEICHE WIE IN DMLOGD
         LCLC  &Q
&Q       SETC  '&QUAL'
         L     R1,IEDADBUF
         L     R15,&Q.EXIT
         BALR  R14,R15
         NOPR  0
         LTR   R15,R15
         BZ    &Q.NOMSG
         LR    R2,R15
         L     R3,0(R2)
         LTR   R3,R3
         BZ    &Q.MHPUT
         IC    R4,0(R3)
         EX    R4,&Q.MOVE
         TERRSET
&Q.MHPUT EQU   *
         L     R3,4(R2)
         LTR   R3,R3
         BZ    &Q.NOMSG
         MHPUT WORK=(R3)
         LTR   R15,R15
         BZ    &Q.NOMSG
         LA    R3,&Q.MSGF1
         IC    R4,&Q.MSGF1
         EX    R4,&Q.MOVE
         TERRSET
&Q.NOMSG EQU   *
         SPACE 2
         MEND
./ ADD NAME=DMLOGL
         MACRO
&LABEL   DMLOGL &QUAL=TSO,&EXIT=SPTSO01
.*       STOEHLER 18.5.76
.*       MACRO FUER LOG-EXITLOAD INNERHALB DES MCPS
.*       &QUAL MUSS 3-STELLIG SEIN UND DER GLEICHE WIE IN DMLOGD
         LCLC  &Q
&Q       SETC  '&QUAL'
&LABEL   LOAD  EP=&EXIT
         ST    R0,&Q.EXIT
         MEND
./ ADD NAME=DMLOGO
         MACRO
         DMLOGO &QUAL=TSO
.*       STOEHLER 18.5.76
.*       MACRO FUER LOG-FUNKTION (OUTBUF) INNERHALB DES MCPS
.*       &QUAL MUSS 3-STELLIG SEIN UND DER GLEICHE WIE IN DMLOGD
         LCLC  &Q
&Q       SETC  '&QUAL'
         L     R1,IEDADBUF
         L     R15,&Q.EXIT
         BALR  R14,R15
         NOPR  1
         LTR   R15,R15
         BZ    &Q.NMSG
         LR    R2,R15
         L     R3,0(R2)
         IC    R4,0(R3)
         EX    R4,&Q.MOVE
         TERRSET
&Q.NMSG  EQU   *
         SPACE 2
         MEND
./ ADD NAME=DMANF
         MACRO
&LABEL   DMANF &PGM=YES,&ALIAS=NO,&ENTRY=NO,&EXTRN=NO,                 *
               &BASREG=(12),&SAVE=YES,&XSAVE=NO,                       *
               &ATTRIB=REUS,&WSYMB=YES,&WREGS=(14,15),                 *
               &EXPARM=NO,&CSPARM=NO
.*
         AIF   ('&PGM' EQ '').PGM1
         AIF   ('&PGM' EQ 'YES' AND '&LABEL' EQ '').PGM1
         AIF   (N'&BASREG GT 3).REG1
.*
         AGO   .CALL
.*
.PGM1    ANOP
         MNOTE 12,'KEIN PROGRAMM-NAME ANGEGEBEN, KEINE GENERIERUNG'
         MEXIT
.*
.REG1    ANOP
         MNOTE 12,'MEHR ALS 3 BASIS-REGISTER, KEINE GENERIERUNG'
         MEXIT
.*
.CALL    ANOP
.*
.*
&LABEL  DMANF1 P10=&PGM,P11=YES,P12=&ALIAS,P13=&ENTRY,P14=&EXTRN,      *
               P15=&BASREG,P16=&SAVE,P17=YES,P18=NO,P19=&XSAVE,        *
               P20=&ATTRIB,P21=&WREGS,P22=&WSYMB,P23=YES,P24=NO,       *
               P25=&EXPARM,P26=&CSPARM
         MEND
./ ADD NAME=DMEND
         MACRO
&LABEL   DMEND &RC=YES,&REG=NO
&LABEL   DMEND1 P10=&RC,P20=&REG
         MEND
./ ADD NAME=DMANF1
      MACRO
&P00  DMANF1   &P10=YES,                                               &
               &P11=YES,                                               +
               &P12=NO,                                                =
               &P13=NO,                                                +
               &P14=NO,                                                +
               &P15=YES,                                               +
               &P16=YES,                                               +
               &P17=YES,                                               +
               &P18=NO,                                                +
               &P19=NO,                                                +
               &P20=REUS,                                              +
               &P21=YES,                                               +
               &P22=NO,                                                +
               &P23=NO,                                                +
               &P24=NO,                                                +
               &P25=NO,                                                +
               &P26=NO
.*********************************************************************
.**                                                                  *
.**      SPECIFICATION OF MACRO-OPERANDS (GENERAL) :                 *
.**                                                                  *
.**      PROTOTYPE-SYMBOLS + DEFAULT-VALUES                          *
.**                                                                  *
.*********************************************************************
.*                                                                   *
.*       P00 : LABEL   : MACRO LABEL/SYMBOL                          *
.*           = N/A                                                   *
.*                                                                   *
.*       P10 : CSNAME  : CONTROL-SECTION MAIN-ENTRY SYMBOL           *
.*           = YES                                                   *
.*                                                                   *
.*       P11 : CSIDENT : CONTROL-SECTION IDENTIFICATION              *
.*           = YES                                                   *
.*                                                                   *
.*       P12 : CSALIAS : CONTROL-SECTION ALIAS-ENTRY SYMBOL(S)       *
.*           = NO                                                    *
.*                                                                   *
.*       P13 : CSENTRY : ADDITIONAL ENTRY-POINT SYMBOL(S)            *
.*           = NO                                                    *
.*                                                                   *
.*       P14 : CSEXTRN : ADDITIONAL EXTRN-POINT SYMBOL(S)            *
.*           = NO                                                    *
.*                                                                   *
.*       P15 : CSBASE  : CONTROL-SECTION BASE-REGISTER(S)            *
.*           = YES                                                   *
.*                                                                   *
.*       P16 : RGSAVE  : SAVING OF CALLER'S REGISTERS                *
.*           = YES                                                   *
.*                                                                   *
.*       P17 : SACHAIN : CHAINING OF PGM'S SAVE-AREAS                *
.*           = YES                                                   *
.*                                                                   *
.*       P18 : SAFLAG  : FLAGGING OF CALLER'S SAVE-AREA              *
.*           = NO                                                    *
.*                                                                   *
.*       P19 : XINFO   : EXTENDED INFORMATION SAVE-AREA              *
.*           = NO                                                    *
.*                                                                   *
.*       P20 : TCODE   : TYPE OF MACRO-CODE GENERATED                *
.*           = REUS                                                  *
.*                                                                   *
.*       P21 : WREGS   : INTERNALLY-USED WORK-REGISTERS              *
.*           = YES                                                   *
.*                                                                   *
.*       P22 : WSYMB   : INTERNALLY-USED WORK-SYMBOL                 *
.*           = NO                                                    *
.*                                                                   *
.*       P23 : EQGPR   : EQUATION OF GEN-PURPOSE REGISTERS           *
.*           = NO                                                    *
.*                                                                   *
.*       P24 : EQFPR   : EQUATION OF FLOAT-POINT REGISTERS           *
.*           = NO                                                    *
.*                                                                   *
.*       P25 : EXPARM  : RESOLUTION OF EXEC-STMNT PARAMETERS         *
.*           = NO                                                    *
.*                                                                   *
.*       P26 : CSPARM  : RESOLUTION OF CONTROL-SECTION PARMS         *
.*           = NO                                                    *
.*                                                                   *
.*
.*       DEFINITION OF MACRO GLOBAL-VARIABLES
.*
.*
         GBLB  &DMANF01      REGS EQU'D TO 'R'
.*
         GBLB  &DMANF02      RE-ENTR. CODE
.*
         GBLA  &DMANF03      N'FULLW XINFO
.*
.*********************************************************************
.**                                                                  *
.**      DEFINITION OF MACRO LOCAL-VARIABLES :                       *
.**                                                                  *
.**      MACRO-OPERAND VARIABLES                                     *
.**                                                                  *
.*********************************************************************
.*                                                                   *
.*       P00 : LABEL   : MACRO LABEL/SYMBOL                          *
.*                                                                   *
.*             VP001     LABEL : NOGEN                               *
.*             VP002     LABEL : SYMBOL-ID.                          *
.*                                                                   @
         LCLB  &VP001
         LCLC  &VP002
.*                                                                   *
.*                                                                   *
.*       P10 : CSNAME  : CONTROL-SECTION MAIN-ENTRY SYMBOL           *
.*                                                                   *
.*             VP101     CSNAME : NOGEN                              *
.*             VP102     CSNAME : SYMBOL-ID.                         *
.*                                                                   *
         LCLB  &VP101
         LCLC  &VP102
.*                                                                   *
.*                                                                   *
.*       P11 : CSIDENT : CONTROL-SECTION IDENTIFICATION              *
.*                                                                   *
.*             VP111     CSIDENT : NOGEN                             *
.*             VP112     CSIDENT : USE LABEL-ID.                     *
.*             VP113     CSIDENT : USE STRING-ID.                    *
.*             VP114     CSIDENT : LABEL/STRING-LENGTH               *
.*                                                                   *
         LCLB  &VP111,&VP112,&VP113
         LCLA  &VP114
.*                                                                   *
.*                                                                   *
.*       P12 : CSALIAS : CONTROL-SECTION ALIAS-ENTRY SYMBOL(S)       *
.*                                                                   *
.*             VP121     CSALIAS : NOGEN                             *
.*             VP122     CSALIAS : ALIAS-NUMBER                      *
.*             VP123     CSALIAS : ALIAS SYMBOL(S)-ID.               *
.*                                                                   *
         LCLB  &VP121
         LCLA  &VP122
         LCLC  &VP123(16)
.*                                                                   *
.*                                                                   *
.*       P13 : CSENTRY : ADDITIONAL ENTRY-POINT SYMBOL(S)            *
.*                                                                   *
.*             VP131     CSENTRY : NOGEN                             *
.*             VP132     CSENTRY : ENTRY-NUMBER                      *
.*             VP132     CSENTRY : ENTRY-NUMBER                      *
.*             VP133     CSENTRY : ENTRY-POINT SYMBOL(S)             *
.*             VP134     CSENTRY : ENTRY-ROUTN SYMBOL(S)             *
.*                                                                   *
         LCLB  &VP131
         LCLA  &VP132
         LCLC  &VP133(16),&VP134(16)
.*                                                                   *
.*                                                                   *
.*       P14 : CSEXTRN : ADDITIONAL EXTRN-POINT SYMBOL(S)            *
.*                                                                   *
.*             VP141     CSEXTRN : NOGEN                             *
.*             VP142     CSEXTRN : EXTRN-NUMBER                      *
.*             VP143     CSEXTRN : EXTRN-POINT SYMBOL(S)             *
.*             VP144     CSEXTRN : EXTRN-ADCON SYMBOL(S)             *
.*                                                                   *
         LCLB  &VP141
         LCLA  &VP142
         LCLC  &VP143(16),&VP144(16)
.*                                                                   *
.*                                                                   *
.*       P15 : CSBASE  : CONTROL-SECTION BASE-REGISTER(S)            *
.*                                                                   *
.*             VP151     CSBASE : NOGEN                              *
.*             VP152     CSBASE : BASE-REG NUMBER                    *
.*             VP153     CSBASE : BASE-REG SYMBOL(S)                 *
.*                                                                   *
         LCLB  &VP151
         LCLA  &VP152
         LCLC  &VP153(6)
.*                                                                   *
.*                                                                   *
.*       P16 : RGSAVE  : SAVING OF CALLER'S REGISTERS                *
.*                                                                   *
.*             VP161     RGSAVE : NOGEN                              *
.*             VP162     RGSAVE : SAVE-AREA SYMBOL (4)               *
.*                                                                   *
         LCLB  &VP161
         LCLC  &VP162
.*                                                                   *
.*                                                                   *
.*       P17 : SACHAIN : CHAINING OF PGM'S SAVE-AREAS                *
.*                                                                   *
.*             VP171     SACHAIN : NOGEN                             *
.*             VP172     SACHAIN : FORWARD-CHAIN                     *
.*             VP173     SACHAIN : BACKWRD-CHAIN                     *
.*             VP174     SACHAIN : FWD/BKWD-CHAIN                    *
.*                                                                   *
         LCLB  &VP171,&VP172,&VP173,&VP174
.*                                                                   *
.*                                                                   *
.*       P18 : SAFLAG  : FLAGGING OF CALLER'S SAVE-AREA              *
.*                                                                   *
.*             VP181     SAFLAG : NOGEN                              *
.*             VP182     SAFLAG : FLAG-BYTE SYMBOL                   *
.*                                                                   *
         LCLB  &VP181
         LCLC  &VP182
.*                                                                   *
.*                                                                   *
.*       P19 : XINFO   : EXTENDED INFORMATION SAVE-AREA              *
.*                                                                   *
.*             VP191     XINFO : NOGEN                               *
.*             VP192     XINFO : NO-OF FULLWORDS                     *
.*             VP193     XINFO : INFO-AREA SYMBOL                    *
.*                                                                   *
         LCLB  &VP191
         LCLA  &VP192
         LCLC  &VP193
.*                                                                   *
.*                                                                   *
.*       P20 : TCODE   : TYPE OF MACRO-CODE GENERATED                *
.*                                                                   *
.*             VP201     TCODE : RE-USABLE                           *
.*             VP202     TCODE : RE-FRESHABLE                        *
.*             VP203     TCODE : RE-ENTRANT                          *
.*                                                                   *
         LCLB  &VP201,&VP202,&VP203
.*                                                                   *
.*                                                                   *
.*       P21 : WREGS   : INTERNALLY-USED WORK-REGISTERS              *
.*                                                                   *
.*             VP211     WREGS : REG-SYMBOL 1                        *
.*             VP212     WREGS : REG-SYMBOL 2                        *
.*                                                                   *
         LCLC  &VP211,&VP212
.*                                                                   *
.*                                                                   *
.*       P22 : WSYMB   : INTERNALLY-USED WORK-SYMBOL                 *
.*                                                                   *
.*             VP221     WSYMB : USE SYSINDEX-NUMBER                 *
.*             VP222     WSYMB : USE EXTERNAL-SYMBOL                 *
.*             VP223     WSYMB : WORK-SYMBOL IDENT.                  *
.*                                                                   *
         LCLB  &VP221,&VP222
         LCLC  &VP223
.*                                                                   *
.*                                                                   *
.*       P23 : EQGPR   : EQUATION OF GEN-PURPOSE REGISTERS           *
.*                                                                   *
.*             VP231     EQGPR : NOGEN                               *
.*             VP232     EQGPR : GPR-REG SYMBOL                      *
.*                                                                   *
         LCLB  &VP231
         LCLC  &VP232
.*                                                                   *
.*                                                                   *
.*       P24 : EQFPR   : EQUATION OF FLOAT-POINT REGISTERS           *
.*                                                                   *
.*             VP241     EQFPR : NOGEN                               *
.*             VP242     EQFPR : FPR-REG SYMBOL                      *
.*                                                                   *
         LCLB  &VP241
         LCLC  &VP242
.*                                                                   *
.*                                                                   *
.*       P25 : EXPARM  : RESOLUTION OF EXEC-STMNT PARAMETERS         *
.*                                                                   *
.*             VP251     EXPARM : NOGEN                              *
.*             VP252     EXPARM : SYMBOL OF LENGTH                   *
.*             VP253     EXPARM : SYMBOL OF ADDRESS                  *
.*                                                                   *
         LCLB  &VP251
         LCLC  &VP252,&VP253
.*                                                                   *
.*                                                                   *
.*       P26 : CSPARM  : RESOLUTION OF CONTROL-SECTION PARMS         *
.*                                                                   *
.*             VP261     CSPARM : NOGEN                              *
.*             VP262     CSPARM : SYMBOL OF NUMBER                   *
.*             VP263     CSPARM : SYMBOL OF ADDRESS                  *
.*                                                                   *
         LCLB  &VP261
         LCLC  &VP262,&VP263
.*                                                                   *
.*                                                                   *
.*********************************************************************
.**                                                                  *
.**      DEFINITION OF MACRO LOCAL-VARIABLES :                       *
.**                                                                  *
.**      INTERMEDIATELY-USED VARIABLES                               *
.**                                                                  *
.*********************************************************************
         LCLA  &VCA1,&VCA2,&VCA3
         LCLB  &VCB1,&VCB2,&VCB3
         LCLC  &VCC1,&VCC2,&VCC3
         LCLA  &VGA1    CSECT-ENTRY DISPLACEMENT-COUNTER
.R20000  ANOP
.*********************************************************************
.**                                                                  *
.**      EVALUATION OF OPERAND : '&P00' (LABEL)                      *
.**                                                                  *
.**      ROUTINE R202-XX : MACRO LABEL/SYMBOL                        *
.**                                                                  *
.*********************************************************************
.R20200  ANOP
         AIF   ('&P00' EQ '').R20210        LABEL=N/A
         AGO   .R20220                      LABEL-SYMBOL
.**      ROUTINE R202-10 : '&P00' (LABEL) = NOT APPLICABLE
.R20210  ANOP
&VP001   SETB  (1)                LABEL=NOGEN
         AGO   .R20299            EXIT 202
.**      ROUTINE R202-20 : '&P00' (LABEL) = SYMBOL
.R20220  ANOP
&VP001   SETB  (0)                LABEL=GEN
&VP002   SETC  '&P00'             LABEL=SYMBOL
         AGO   .R20299            EXIT 202
.**      ROUTINE R202-99 : '&P00' (LABEL) EXIT-ROUTINE
.R20299  ANOP
         AGO   .R20400            EVALUATE NEXT OPERAND
.*********************************************************************
.**                                                                  *
.**      EVALUATION OF OPERAND : '&P10' (CSNAME)                     *
.**                                                                  *
.**      ROUTINE R204-XX : CONTROL-SECTION MAIN-ENTRY SYMBOL         *
.**                                                                  *
.*********************************************************************
.R20400  ANOP
         AIF   ('&P10' EQ 'YES').R20420     CSNAME='YES'
         AGO   .R20430
.**      ROUTINE R204-10 : '&P10' (CSNAME) = 'NO'
&VP101   SETB  (1)                CSNAME=NOGEN
         AGO   .R20499            EXIT 204
.**      ROUTINE R204-20 : '&P10' (CSNAME) = 'YES'
.R20420  ANOP
&VP101   SETB  (0)                CSNAME=GEN
&VP102   SETC  '&P00'             CSNAME=LABEL
         AGO   .R20499            EXIT 204
.**      ROUTINE R204-30 : '&P10' (CSNAME) = (SY4BOL)
.R20430  ANOP
&VP101   SETB  (0)
         AIF   (K'&P10(1) GT 7).CUT
&VP102   SETC  '&P10(1)'
         AGO   .R20499
.CUT     ANOP
&VP102   SETC  '&P10(1)'(1,7)
         AGO   .R20499
.**      ROUTINE R204-40 : '&P10' (CSNAME) = INVALID
.R20440  ANOP
&VP101   SETB  (1)                CSNAME=NOGEN                  ******
         AGO   .R20499            EXIT 204                      ******
.**      ROUTINE R204-99 : '&P10' (CSNAME) EXIT-ROUTINE
.R20499  ANOP
         AGO   .R20600            EVALUATE NEXT 6PERAND
.*********************************************************************
.**                                                                  *
.**      EVALUATION OF OPERAND : '&P11' (CSIDENT'-                   *
.**                                                                  *
.**      ROUTINE R206-XX : CONTROL-SECTION IDENTIFICATION            *
.**                                                                  *
.*********************************************************************
.R20600  ANOP
         AIF   ('&P11' EQ 'NO').R20610      CSID5NT='NO'
         AIF   ('&P11' EQ 'YES').R20620     CSIDENT='YES'
         AIF   ('&P11'(1,1) EQ '(').R20630  CSIDENT=(STRING)
         AGO   .R20640                      CSID5NT=INVALID
.**      ROUTINE R206-10 : '&P11' (CSIDENT) = 'NO'
.R20610  ANOP
&VP111   SETB  (1)                CSIDENT=NOGEN
         AGO   .R20699            EXIT 206
.**      ROUTINE R206-20 : '&P11' (CSIDENT) = 'YES'
.R20620  ANOP
&VP111   SETB  (0)                CSIDENT=GEN
&VP112   SETB  (1)                CSIDENT=LABEL-ID,
&VP113   SETB  (0)                        NOT STRING-ID.
&VP114   SETA  8                  CSIDENT STRING-LENGTH
         AGO   .R20699            EXIT 206
.**      ROUTINE R206-30 : '&P11' (CSIDENT) = (STRING)
.R20630  ANOP
&VP111   SETB  (0)                CSIDENT=GEN
&VP113   SETB  (1)                CSIDENT=STRING-ID,
&VP112   SETB  (0)                        NOT LABEL-ID.
         AIF   (K'&P11 LE 8).R20631    LENGTH =< 8
         AIF   (K'&P11 LE 12).R20632          =< 12
         AIF   (K'&P11 LE 16).R20633          =< 16
         AIF   (K'&P11 LE 20).R20634          =< 20
         AIF   (K'&P11 LE 24).R20635          =< 24
         AIF   (K'&P11 LE 28).R20636          =< 28
         AGO   .R20637                        =< 32
.R20631  ANOP
&VP114   SETA  8                  STRING-LENGTH = 8
         AGO   .R20699
.R20632  ANOP
&VP114   SETA  12                 STRING-LENGTH = 12
         AGO   .R20699
.R20633  ANOP
&VP114   SETA  16                 STRING-LENGTH = 16
         AGO   .R20699
.R20634  ANOP
&VP114   SETA  20                 STRING-LENGTH = 20
         AGO   .R20699
.R20635  ANOP
&VP114   SETA  24                 STRING-LENGTH = 24
         AGO   .R20699
.R20636  ANOP
&VP114   SETA  28                 STRING-LENGTH = 28
         AGO   .R20699
.R20637  ANOP
&VP114   SETA  32                 STRING-LENGTH = 32
         AGO   .R20699
.**      ROUTINE R206-40 : '&P11' (CSIDENT) = INVALID
.R20640  ANOP
&VP111   SETB  (1)                CSIDENT=NOGEN                 ******
         AGO   .R20699            EXIT 206                      ******
.**      ROUTINE R206-99 : '&P11' (CSIDENT) EXIT-ROUTINE
.R20699  ANOP
         AGO   .R20800            EVALUATE NEXT OPERAND
.*********************************************************************
.**                                                                  *
.**      EVALUATION OF OPERAND : '&P12' (CSALIAS)                    *
.**                                                                  *
.**      ROUTINE R208-XX : CONTROL-SECTION ALIAS-ENTRY SYMBOL(S)     *
.**                                                                  *
.*********************************************************************
.R20800  ANOP
         AIF   ('&P12' EQ 'NO').R20810      CSALIAS='NO'
         AIF   ('&P12' EQ 'YES').R20820     CSALIAS='YES'
         AGO   .R20830
.**      ROUTINE R208-10 : '&P12' (CSALIAS) = 'NO'
.R20810  ANOP
&VP121   SETB  (1)                CSALIAS=NOGEN
         AGO   .R20899            EXIT 208
.**      ROUTINE R208-20 : '&P12' (CSALIAS) = 'YES'
.R20820  ANOP
&VP121   SETB  (0)                CSALIAS=GEN
&VP122   SETA  1                  CSALIAS-NUMBER
&VP123(1) SETC '#'.'&VP102'(1,7)  CSALIAS-SYMBOL
         AGO   .R20899            EXIT 208
.**      ROUTINE R208-30 : '&P12' (CSALIAS) = (SYMBOL(S))
.R20830  ANOP
&VCA1    SETA  N'&P12             NUMB OF ALIAS-SYMBOLS
         AIF   (&VCA1 GT 15).R20833
&VCA1    SETA  1                  POINTER = 1
.R20831  ANOP
         AIF   ('&P12(&VCA1)' EQ '').R20832 LAST SYMBOL
&VP123(&VCA1) SETC '&P12(&VCA1)'  SAVE ALIAS
&VCA1    SETA  &VCA1+1            POINTER + 1
         AGO   .R20831
.R20832  ANOP
&VCA1    SETA  &VCA1-1            CORRECT POINTER
&VP122   SETA  &VCA1              SAVE N'ALIAS
&VP121   SETB  (0)                CSALIAS=GEN
         AGO   .R20899            EXIT 208
.R20833  ANOP
&VP121   SETB  (1)                CSALIAS=NOGEN                 ******
         AGO   .R20899            EXIT 208                      ******
.**      ROUTINE R208-40 : '&P12' (CSALIAS) = INVALID
.R20840  ANOP
&VP121   SETB  (1)                CSALIAS=NOGEN                 ******
         AGO   .R20899            EXIT 208                      ******
.**      ROUTINE R208-99 : '&P12' (CSALIAS) EXIT-ROUTINE
.R20899  ANOP
         AGO   .R21000            EVALUATE NEXT OPERAND
.*********************************************************************
.**                                                                  *
.**      EVALUATION OF OPERAND : '&P13' (CSENTRY)                    *
.**                                                                  *
.**      ROUTINE R210-XX : ADDITIONAL ENTRY-POINT SYMBOL(S)          *
.**                                                                  *
.*********************************************************************
.R21000  ANOP
         AIF   ('&P13' EQ 'NO').R21010      CSENTRY='NO'
         AIF   ('&P13' EQ 'YES').R21020     CSENTRY='YES'
         AIF   ('&P13'(1,1) EQ '(').R21030  CSENTRY=(SYMBOL(S))
         AGO   .R21040                      CSENTRY=INVALID
.**      ROUTINE R210-10 : '&P13' (CSENTRY) = 'NO'
.R21010  ANOP
&VP131   SETB  (1)                CSENTRY=NOGEN
         AGO   .R21099            EXIT 210
.**      ROUTINE R210-20 : '&P13' (CSENTRY) = 'YES'
.R21020  ANOP
&VP131   SETB  (1)                CSENTRY=NOGEN                 ******
         AGO   .R21099            EXIT 210                      ******
.**      ROUTINE R210-30 : '&P13' (CSENTRY) = (SYMBOL(S))
.R21030  ANOP
&VCA1    SETA  N'&P13             NO OF SUBLIST-OP
         AIF   (&VCA1 GT 30).R21033
&VCA1    SETA  1
&VCA2    SETA  1
.R21031  ANOP
         AIF   ('&P13(&VCA1)' EQ '').R21032  LAST ENTRY
&VP133(&VCA2) SETC '&P13(&VCA1)'  SET EP-SYMBOL
&VCA1    SETA  &VCA1+1
&VP134(&VCA2) SETC '&P13(&VCA1)'  SET RT-SYMBOL
&VCA1    SETA  &VCA1+1
&VCA2    SETA  &VCA2+1
         AGO   .R21031
.R21032  ANOP
&VCA2    SETA  &VCA2-1
&VP132   SETA  &VCA2              SET N'EP/RT-SYMBOLS
&VP131   SETB  (0)                CSENTRY=GEN
         AGO   .R21099            EXIT 210
.R21033  ANOP
&VP131   SETB  (1)                CSENTRY=NOGEN
         AGO   .R21099            EXIT 210
.**      ROUTINE R210-40 : '&P13' (CSENTRY) = INVALID
.R21040  ANOP
&VP131   SETB  (1)                CSENTRY=NOGEN                 ******
         AGO   .R21099            EXIT 210                      ******
.**      ROUTINE R210-99 : '&P13' (CSENTRY) EXIT-ROUTINE
.R21099  ANOP
         AGO   .R21200            EVALUATE NEXT OPERAND
.*********************************************************************
.**                                                                  *
.**      EVALUATION OF OPERAND : '&P14' (CSEXTRN)                    *
.**                                                                  *
.**      ROUTINE R212-XX : ADDITIONAL EXTRN-POINT SYMBOL(S)          *
.**                                                                  *
.*********************************************************************
.R21200  ANOP
         AIF   ('&P14' EQ 'NO').R21210      CSEXTRN='NO'
         AIF   ('&P14' EQ 'YES').R21220     CSEXTRN='YES'
         AIF   ('&P14'(1,1) EQ '(').R21230  CSEXTRN=(SYMBOL(S))
         AGO   .R21240                      CSEXTRN=INVALID
.**      ROUTINE R212-10 : '&P14' (CSEXTRN) = 'NO'
.R21210  ANOP
&VP141   SETB  (1)                CSEXTRN=NOGEN
         AGO   .R21299            EXIT 212
.**      ROUTINE R212-20 : '&P14' (CSEXTRN) = 'YES'
.R21220  ANOP
&VP141   SETB  (1)                CSEXTRN=NOGEN                 ******
         AGO   .R21299            EXIT 212                      ******
.**      ROUTINE R212-30 : '&P14' (CSEXTRN) = (SYMBOL(S))
.R21230  ANOP
&VCA1    SETA  N'&P14             NO OF SUBLIST-OP
         AIF   (&VCA1 GT 30).R21233
&VCA1    SETA  1
&VCA2    SETA  1
.R21231  ANOP
         AIF   ('&P14(&VCA1)' EQ '').R21232  LAST EXTRN
&VP143(&VCA2) SETC '&P14(&VCA1)'  SET EX-SYMBOL
&VCA1    SETA  &VCA1+1
&VP144(&VCA2) SETC '&P14(&VCA1)'  SET AD-SYMBOL
&VCA1    SETA  &VCA1+1
&VCA2    SETA  &VCA2+1
         AGO   .R21231
.R21232  ANOP
&VCA2    SETA  &VCA2-1
&VP142   SETA  &VCA2              SET N'EP/RT-SYMBOLS
&VP141   SETB  (0)                CSEXTRN=GEN
         AGO   .R21299            EXIT 212
.R21233  ANOP
&VP141   SETB  (1)                CSEXTRN=NOGEN
         AGO   .R21299            EXIT 212
.**      ROUTINE R212-40 : '&P14' (CSEXTRN) = INVALID
.R21240  ANOP
&VP141   SETB  (1)                CSEXTRN=NOGEN                 ******
         AGO   .R21299            EXIT 212                      ******
.**      ROUTINE R212-99 : '&P14' (CSEXTRN) EXIT-ROUTINE
.R21299  ANOP
         AGO   .R21400            EVALUATE NEXT OPERAND
.*********************************************************************
.**                                                                  *
.**      EVALUATION OF OPERAND : '&P15' (CSBASE)                     *
.**                                                                  *
.**      ROUTINE R214-XX : CONTROL-SECTION BASE-REGISTER(S)          *
.**                                                                  *
.*********************************************************************
.R21400  ANOP
         AIF   ('&P15' EQ 'NO').R21410      CSBASE='NO'
         AIF   ('&P15' EQ 'YES').R21420     CSBASE='YES'
         AIF   ('&P15'(1,1) EQ '(').R21430  CSBASE=(SYMBOL(S))
         AGO   .R21440                      CSBASE=INVALID
.**      ROUTINE R214-20 : '&P15' (CSBASE) = 'YES'
.R21420  ANOP
&VP151   SETB  (0)                CSBASE=GEN
.**      ROUTINE R214-10 : '&P15' (CSBASE) = 'NO'
.R21410  ANOP
&VP151   SETB  (1)                CSBASE=NOGEN
         AGO   .R21499            EXIT 214
&VP152   SETA  1                  CSBASE-NUMBER
&VP153(1) SETC '12'               CSBASE-REGISTER
         AGO   .R21499            EXIT 214
.**      ROUTINE R214-30 : '&P15' (CSBASE) = (SYMBOL(S))
.R21430  ANOP
         AIF   (N'&P15 GT 6).R21433    N'REGS > 6
&VCA1    SETA  1                       PTR TO SUBLIST
.R21431  ANOP
         AIF   ('&P15(&VCA1)' EQ '').R21432  LAST DONE
&VP153(&VCA1) SETC '&P15(&VCA1)'             MOVE SYMBOL
         AIF   (&VCA1 EQ 6).R21432           LAST DONE
&VCA1    SETA  &VCA1+1                       INCR POINTER
         AGO   .R21431                       DO NEXT
.R21432  ANOP
&VP152   SETA  &VCA1-1            N'REGS
&VP151   SETB  (0)                CSBASE=GEN
         AGO   .R21499            EXIT 214
.R21433  ANOP
&VP151   SETB  (1)                CSBASE=NOGEN
         AGO   .R21499            EXIT 214
.**      ROUTINE R214-40 : '&P15' (CSBASE) = INVALID
.R21440  ANOP
&VP151   SETB  (1)                CSBASE=NOGEN                  ******
         AGO   .R21499            EXIT 214                      ******
.**      ROUTINE R214-99 : '&P15' (CSBASE) EXIT-ROUTINE
.R21499  ANOP
         AGO   .R21600            EVALUATE NEXT OPERAND
.*********************************************************************
.**                                                                  *
.**      EVALUATION OF OPERAND : '&P16' (RGSAVE)                     *
.**                                                                  *
.**      ROUTINE R216-XX : SAVING OF CALLER'S REGISTERS              *
.**                                                                  *
.*********************************************************************
.R21600  ANOP
         AIF   ('&P16' EQ 'NO').R21610      RGSAVE='NO'
         AIF   ('&P16' EQ 'YES').R21620     RGSAVE='YES'
         AGO   .R21630
.**      ROUTINE R216-10 : '&P16' (RGSAVE) = 'NO'
.R21610  ANOP
&VP161   SETB  (1)                RGSAVE=NOGEN
         AGO   .R21699            EXIT 216
.**      ROUTINE R216-20 : '&P16' (RGSAVE) = 'YES'
.R21620  ANOP
&VP161   SETB  (0)                RGSAVE=GEN
&VP162   SETC  'SV01'             RGSAVE-SYMBOL
         AGO   .R21699            EXIT 216
.**      ROUTINE R216-30 : '&P16' (RGSAVE) = (SYMBOL)
.R21630  ANOP
         AIF   ('&P16(1)' EQ '').R21631  SYMBOL=NULL-STR.
         AIF   (K'&P16(1) GT 4).R21631   SYMBOL TOO LONG
&VP161   SETB  (0)                RSAVE=GEN
&VP162   SETC  '&P16(1)'          RSAVE-SYMBOL
         AGO   .R21699            EXIT 216
.*
.R21631  ANOP
&VP161   SETB  (1)                RGSAVE=NOGEN                  ******
         AGO   .R21699            EXIT 216                      ******
.**      ROUTINE R216-40 : '&P16' (RGSAVE) = INVALID
.R21640  ANOP
&VP161   SETB  (1)                RGSAVE=NOGEN
         AGO   .R21699            EXIT 216
.**      ROUTINE R216-99 : '&P16' (RGSAVE) EXIT-ROUTINE
.R21699  ANOP
         AGO   .R21800            EVALUATE NEXT OPERAND
.*********************************************************************
.**                                                                  *
.**      EVALUATION OF OPERAND : '&P17' (SACHAIN)                    *
.**                                                                  *
.**      ROUTINE R218-XX : CHAINING OF PGM'S SAVE-AREAS              *
.**                                                                  *
.*********************************************************************
.R21800  ANOP
         AIF   ('&P17' EQ 'NO').R21810      SACHAIN='NO'
         AIF   ('&P17' EQ 'YES').R21820     SACHAIN='YES'
         AIF   ('&P17'(1,1) EQ '(').R21830  SACHAIN=(SYMBOL)
         AGO   .R21840                      SACHAIN=INVALID
.**      ROUTINE R218-10 : '&P17' (SACHAIN) = 'NO'
.R21810  ANOP
&VP171   SETB  (1)                SACHAIN=NOGEN
         AGO   .R21899            EXIT 218
.**      ROUTINE R218-20 : '&P17' (SACHAIN) = 'YES'
.R21820  ANOP
&VP171   SETB  (0)                SACHAIN=GEN
&VP172   SETB  (1)                SACHAIN=FORWARD
&VP173   SETB  (1)                SACHAIN=BACKWRD
&VP174   SETB  (1)                SACHAIN=FWD/BKWD
         AGO   .R21899            EXIT 218
.**      ROUTINE R218-30 : '&P17' (SACHAIN) = (SYMBOL)
.R21830  ANOP
         AIF   ('&P17(1)' EQ 'FWD').R21831
         AIF   ('&P17(1)' EQ 'BKW').R21832
         AIF   ('&P17(1)' EQ 'ALL').R21833
&VP171   SETB  (1)                SACHAIN=NOGEN
         AGO   .R21899            EXIT 218
.R21831  ANOP
&VP171   SETB  (0)                SACHAIN=GEN
&VP172   SETB  (1)                SACHAIN=FORWARD
         AGO   .R21899            EXIT 218
.R21832  ANOP
&VP171   SETB  (0)                SACHAIN=GEN
&VP173   SETB  (1)                SACHAIN=BACKWARD
         AGO   .R21899            EXIT 218
.R21833  ANOP
&VP171   SETB  (0)                SACHAIN=GEN
&VP172   SETB  (1)                SACHAIN=FORW
&VP173   SETB  (1)                SACHAIN=BACK
&VP174   SETB  (1)                SACHAIN=FW/BKW
         AGO   .R21899            EXIT 218
.**      ROUTINE R218-40 : '&P17' (SACHAIN) = INVALID
.R21840  ANOP
&VP171   SETB  (1)                SACHAIN=NOGEN                 ******
         AGO   .R21899            EXIT 218                      ******
.**      ROUTINE R218-99 : '&P17' (SACHAIN) EXIT-ROUTINE
.R21899  ANOP
         AGO   .R22000            EVALVATE NEXT OPERAND
.*********************************************************************
.**                                                                  *
.**      EVALUATION OF OPERAND : '&P18' (SAFLAG)                     *
.**                                                                  *
.**      ROUTINE R220-XX : FLAGGING OF CALLER'S SAVE-AREA            *
.**                                                                  *
.*********************************************************************
.R22000  ANOP
         AIF   ('&P18' EQ 'NO').R22010      SAFLAG='NO'
         AIF   ('&P18' EQ 'YES').R22020     SAFLAG='YES'
         AIF   ('&P18'(1,1) EQ '(').R22030  SAFLAG=(SYMBOL)
         AGO   .R22040                      SAFLAG=INVALID
.**      ROUTINE R220-10 : '&P18' (SAFLAG) = 'NO'
.R22010  ANOP
&VP181   SETB  (1)                SAFLAG=NOGEN
         AGO   .R22099            EXIT 220
.**      ROUTINE R220-20 : '&P18' (SAFLAG) = 'YES'
.R22020  ANOP
&VP181   SETB  (0)                SAFLAG=GEN
&VP182   SETC  'X''80'''          SAFLAG=X'80'
         AGO   .R22099            EXIT 220
.**      ROUTINE R220-30 : '&P18' (SAFLAG) = (SYMBOL)
.R22030  ANOP
         AIF   (K'&P18(1) GT 5).R22031           INV.FLAG
         AIF   ('&P18(1)'(1,2) NE 'X''').R22031
&VP181   SETB  (0)                SAFLAG=GEN
&VP182   SETC  '&P18(1)'          SAFLAG-SYMBOL
         AGO   .R22099            EXIT 220
.R22031  ANOP
&VP181   SETB  (1)                SAFLAG=NOGEN                  ******
         AGO   .R22099            EXIT 220                      ******
.**      ROUTINE R220-40 : &P18' (SAFLAG) = INVALID
.R22040  ANOP
&VP181   SETB  (1)                SAFLAG=NOGEN                  ******
         AGO   .R22099            EXIT 220                      ******
.**      ROUTINE R220-99 : '&P18' (SAFLAG) EXIT-ROUTINE
.R22099  ANOP
         AGO   .R22200            EVALUATE NEXT OPERAND
.*********************************************************************
.**                                                                  *
.**      EVALUATION OF OPERAND : '&P19' (XINFO)                      *
.**                                                                  *
.**      ROUTINE R222-XX : EXTENDED INFORMATION SAVE-AREA            *
.**                                                                  *
.*********************************************************************
.R22200  ANOP
         AIF   ('&P19' EQ 'NO').R22210      XINFO='NO'
         AIF   ('&P19' EQ 'YES').R22220     XINFO='YES'
         AGO   .R22230
.**      ROUTINE R222-10 : '&P19' (XINFO) = 'NO'
.R22210  ANOP
&VP191   SETB  (1)                XINFO=NOGEN
         AGO   .R22299            EXIT 222
.**      ROUTINE R222-20 : '&P19' (XINFO) = 'YES'
.R22220  ANOP
&VP191   SETB  (0)                XINFO=GEN
&VP192   SETA  4                  XINFO-N'FULLWORDS
         AGO   .R22299            EXIT 222
.**      ROUTINE R222-30 : '&P19' (XINFO) = (SYMBOL(S))
.R22230  ANOP
         AIF   ('&P19(1)' EQ '').R22231  SYMBOL=NULL-STR.
         AIF   ('&P19(1)' LT '1').R22231  N'FULLW < 1
&VP191   SETB  (0)                        XINFO=GEN
&VP192   SETA  &P19(1)                    N'FULLWORDS
         AGO   .R22299                    EXIT 222
.R22231  ANOP
&VP191   SETB  (1)                        XINFO=NOGEN           ******
         AGO   .R22299                    EXIT 222              ******
.**      ROUTINE R222-40 : '&P19' (XINFO) = INVALID
.R22240  ANOP
&VP191   SETB  (1)                XINFO=NOGEN                   ******
         AGO   .R22299            EXIT 222                      ******
.**      ROUTINE R222-99 : '&P19' (XINFO) EXIT-ROUTINE
.R22299  ANOP
&DMANF03 SETA  &VP192
         AGO   .R22400            EVALVATE NEXT OPERAND
.*********************************************************************
.**                                                                  *
.**      EVALVATION OF OPERAND : '&P20' (TCODE)                      *
.**                                                                  *
.**      ROUTINE R224-XX : TYPE OF MACRO-CODE GENERATED              *
.**                                                                  *
.*********************************************************************
.R22400  ANOP
         AIF   ('&P20' EQ 'NO').R22410      TCODE='NO'
         AIF   ('&P20' EQ 'YES').R22420     TCODE='YES'
         AIF   ('&P20' EQ 'REUS').R22430    TCODE=RE-USABLE
         AIF   ('&P20' EQ 'RENT').R22440    TCODE=RE-ENTRANT
         AIF   ('&P20' EQ 'REFR').R22450    TCODE=RE-FRESHABLE
         AGO   .R22460                      TCODE=INVALID
.**      ROUTINE R224-10 : '&P20' (TCODE) = 'NO'
.R22410  ANOP
&VP201   SETB  (1)                TCODE=RE-USABLE               ******
         AGO   .R22499            EXIT 224                      ******
.**      ROUTINE R224-20 : '&P20' (TCODE) = 'YES'
.R22420  ANOP
&VP201   SETB  (1)                TCODE=RE-USABLE               ******
         AGO   .R22499            EXIT 224                      ******
.**      ROUTINE R224-30 : '&P20' (TCODE) = 'REUS'
.R22430  ANOP
&VP201   SETB  (1)                TCODE=RE-USABLE
         AGO   .R22499            EXIT 224
.**      ROUTINE R224-40 : '&P20' (TCODE) = 'RENT'
.R22440  ANOP
&VP203   SETB  (1)                TCODE=RE-ENTRANT
&DMANF02 SETB  (1)
         AGO   .R22499            EXIT 224
.**      ROUTINE R224-50 : '&P20' (TCODE) = 'REFR'
.R22450  ANOP
&VP202   SETB  (1)                TCODE=RE-FRESHABLE
         AGO   .R22499            EXIT 224
.**      ROUTINE R224-60 : '&P20' (TCODE) = INVALID
.R22460  ANOP
&VP201   SETB  (1)                TCODE=RE-USABLE               ******
         AGO   .R22499            EXIT 224                      ******
.**      ROUTINE R224-99 : '&P20' (TCODE) EXIT-ROUTINE
.R22499  ANOP
         AGO   .R22600            EVALUATE NEXT OPERAND
.*********************************************************************
.**                                                                  *
.**      EVALUATION OF OPERAND : '&P21' (WREGS)                      *
.**                                                                  *
.**      ROUTINE R226-XX : INTERNALLY-USED WORK-REGISTERS            *
.**                                                                  *
.*********************************************************************
.R22600  ANOP
         AIF   ('&P21' EQ 'NO').R22610      WREGS='NO'
         AIF   ('&P21' EQ 'YES').R22620     WREGS='YES'
         AIF   ('&P21'(1,1) EQ '(').R22630  WREGS=(SYMBOLS)
         AGO   .R22640                      WREGS=INVALID
.**      ROUTINE R226-10 : '&P21' (WREGS) = 'NO'
.R22610  ANOP
&VP211   SETC  '2'                WREGS=REG-SYMB1               ******
&VP212   SETC  '3'                WREGS=REG-SYMB2               ******
         AGO   .R22699            EXIT 226                      ******
.**      ROUTINE R226-20 : '&P12' (WREGS) = 'YES'
.R22620  ANOP
&VP211   SETC  '2'                WREGS=REG-SYMB1
&VP212   SETC  '3'                WREGS=REG-SYMB2
         AGO   .R22699            EXIT 226
.**      ROUTINE R226-30 : '&P21' (WREGS) = (SYMBOLS)
.R22630  ANOP
         AIF   ('&P21(1)'EQ '').R22631  SYMBOL=NULL-STR.
         AIF   ('&P21(2)' EQ '').R22631
&VP211   SETC  '&P21(1)'                 REG-SYMBOL 1
&VP212   SETC  '&P21(2)'                 REG-SYMBOL 2
         AGO   .R22699                   EXIT 226
.R22631  ANOP
&VP211   SETC  '2'                       DEFAULT-REG            ******
&VP212   SETC  '3'                       DEFAULT-REG            ******
         AGO   .R22699                   EXIT 226
.**      ROUTINE R226-40 : '&P21' (WREGS) = INVALID
.R22640  ANOP
&VP211   SETC  '2'                WREGS=REG-SYMB2               ******
&VP212   SETC  '3'                WREGS=REG-SYMB2               ******
         AGO   .R22699            EXIT 226                      ******
.**      ROUTINE R226-99 : '&P21' (WREGS) EXIT-ROUTINE
.R22699  ANOP
         AGO   .R22800            EVALUATE NEXT OPERAND
.*********************************************************************
.**                                                                  *
.**      EVALUATION OF OPERAND : '&P22' (WSYMB)                      *
.**                                                                  *
.**      ROUTINE R228-XX : INTERNALLY-USED WORK-SYMBOL               *
.**                                                                  *
.*********************************************************************
.R22800  ANOP
         AIF   ('&P22' EQ 'NO').R22810      WSYMB='NO'
         AIF   ('&P22' EQ 'YES').R22820     WSYMB='YES'
         AGO   .R22830                      WSYMB=INVALID
.**      ROUTINE R228-10 : '&P22' (WSYMB) = 'NO'
.R22810  ANOP
&VP221   SETB  (1)                WSYMB=SYSINDEX,
&VP222   SETB  (0)                 NOT EXTERNAL
&VP223   SETC  '&SYSNDX'          SET WORK-SYMBOL
         AGO   .R22899            EXIT 228
.**      ROUTINE R228-20 : '&P22' (WSYMB) = 'YES'
.R22820  ANOP
&VP222   SETB  (1)                WSYMB=EXTERNAL,
&VP221   SETB  (0)                 NOT SYSINDEX
&VP223   SETC  '####'             SET WORK-SYMBOL
         AGO   .R22899            EXIT 228
.**      ROUTINE R228-30 : '&P22' (WSYMB) = (SYMBOL)
.R22830  ANOP
         AIF   ('&P22(1)' EQ '').R22831  SYMBOL=NULL-STR.
         AIF   (K'&P22(1) GT 4).R22831   SYMBOL TOO LONG
&VP222   SETB  (1)                       WSYMB=EXTERNAL
&VP223   SETC  '&P22(1)'                WORK-SYMBOL
         AGO   .R22899                  EXIT 228
.R22831  ANOP
&VP221   SETB  (1)                      WSYMB=SYSINDEX
&VP223   SETC  '&SYSNDX'    L           WORK-SYMBOL
         AGO   .R22899                  EXIT 228
.**      ROUTINE R228-40 : '&P22' (WSYMB) = INVALID
.R22840  ANOP
&VP221   SETB  (1)                WSYMB=SYSINDEX                ******
&VP222   SETB  (0)                 NOT EXTERNAL                 ******
&VP223   SETC  '&SYSNDX'          SET WORK-SYMBOL               ******
         AGO   .R22899                 EXIT 228                ******
.**      ROUTINE R228-99 : '&P22' (WSYMB) EXIT-ROUTINE
.R22899  ANOP
         AGO   .R23000            EVALUATE NEXT OPERAND
.**      EVALUATION OF OPERAND : '&P23' (EQGPR)                      *
.**      ROUTINE R230-XX : EQUATION OF GEN-PURPOSE REGISTERS         *
.R23000  ANOP
         AIF   ('&P23' EQ 'NO').R23010      EQGPR='NO'
         AIF   ('&P23' EQ 'YES').R23020     EQGPR='YES'
         AIF   ('&P23'(1,1) EQ '(').R23030  EQGPR=(SYMBOL)
         AGO   .R23040                      EQGPR=INVALID
.**      ROUTINE R230-10 : '&P23' (EQGPR) = 'NO'
.R23010  ANOP
&VP231   SETB  (1)                EQGPR=NOGEN
         AGO   .R23099            EXIT 230
.**      ROUTINE R230-20 : '&P23' (EQGPR) = 'YES'
.R23020  ANOP
         AIF   (&DMANF01).R23010
&DMANF01 SETB  (1)
&VP231   SETB  (0)                EQGPR=GEN
&VP232   SETC  'R'                EQGPR-SYMBOL
         AGO   .R23099            EXIT 230
.**      ROUTINE R230-30 : '&P23' (EQGPR) = (SYMBOL)
.R23030  ANOP
         AIF   ('&P23(1)' EQ '').R23031  SYMBOL=NULL-STR.
         AIF   (K'&P23(1) GT 4).R23031   SYMBOL TOO LONG
&VP231   SETB  (0)                       EQGPR=GEN
&VP232   SETC  '&P23(1)'                 EQGPR-SYMBOL
         AGO   .R23099                  EXIT 230
.R23031  ANOP
&VP231   SETB  (1)                       EQGPR=NOGEN
         AGO   .R23099                   EXIT 230
.**      ROUTINE R230-40 : '&P23' (EQGPR) = INVALID
.R23040  ANOP
&VP231   SETB  (1)                EQGPR=NOGEN                  ******
         AGO   .R23099            EXIT 230                     ******
.**      ROUTINE R230-99 : '&P23' (EQGPR) EXIT-ROUTINE
.R23099  ANOP
         AGO   .R23200            EVALUATE NEXT OPERAND
.**      EVALUATION OF OPERAND : '&P24' (EQFPR)                      *
.**      ROUTINE R232-XX : EQUATION OF FLOAT-POINT REGISTERS         *
.R23200  ANOP
         AIF   ('&P24' EQ 'NO').R23210     EQFPR='NO'
         AIF   ('&P24' EQ 'YES').R23220    EQFPR=HYES'
         AIF   ('&P24'(1,1) EQ '(').R23230  EQFPR=SYMBOL)
         AGO   .R23240                      EQFPR=INVALID
.**      ROUTINE R232-10 : '&P24' (EQFPR) = 'NO'
.R23210  ANOP
&VP241   SETB  (1)                EQFPR=NOGEN
         AGO   .R23299            EXIT 232
.**      ROUTINE R232-20 : '&P24' (EQFPR) = 'YES'
.R23220  ANOP
&VP241   SETB  (0)                EQFPR=GEN
&VP242   SETC  'FPR'              EQFPR-SYMBOL
         AGO   .R23299            EXIT 232
.**      ROUTINE R232-30 : '&P24' (EQFPR) = (SYMBOL)
.R23230  ANOP
         AIF   ('&P24(1)' EQ '').R23231  SYMBOL=NULL-STR.
         AIF   (K'&P24(1) GT 4).R23231   SYMBOL TOO LONG
&VP241   SETB  (0)                       EQFPR-GEN
&VP242   SETC  '&P24(1)'                 EQFPR-SYMBOL
         AGO   .R23299                   EXIT 232
.R23231  ANOP
&VP241   SETB  (1)                       EQFPR=NOGEN
         AGO   .R23299                   EXIT 232
.**      ROUTINE R232-40 : '&P24' (EQFPR) = INVALID
.R23240  ANOP
&VP241   SETB  (1)                EQFPR=NOGEN
         AGO   .R23299            EXIT 232
.**      ROUTINE R232-99 : '&P24' (EQFPR) EXIT-ROUTINE
.R23299  ANOP
         AGO   .R23400            EVALUATE NEXT OPERAND
.*********************************************************************
.**                                                                  *
.**      EVALUATION OF OPERAND : '&P25' (EXPARM)                     *
.**                                                                  *
.**      ROUTINE R234-XX : RESOLUTION OF EXEC-STNNT PARAMETERS       *
.**                                                                  *
.*********************************************************************
.R23400  ANOP
         AIF   ('&P25' EQ 'NO').R23410      EXPARM='NO'
         AIF   ('&P25' EQ 'YES').R23420     EXPARM='YES'
         AIF   ('&P25'(1,1) EQ '(').R23430  EXPARM=(SYMBOLS)
         AGO   .R23440                      EXPARM=INVALID
.**      ROUTINE R234-10 : '&P25' (EXPARM) = 'NO'
.R23410  ANOP
&VP251   SETB  (1)                EXPARM=NOGEN
         AGO   .R23499            EXIT 234
.**      ROUTINE R234-20 : '&P25' (EXPARM) = 'YES'
.R23420  ANOP
&VP251   SETB  (0)                EXPARM=GEN
&VP252   SETC  'PM01'             LENGT#-SYMBOL
&VP253   SETC  'PM02'             ADDRESS-SYMBOL
         AGO   .R23499            EXIT 234
.**      ROUTINE R234-30 : '&P25' (EXPARM) = (SYMBOLS)
.R23430  ANOP
         AIF   ('&P25(1)' EQ '').R23431   SYMBOL=NULL-STR.
         AIF   ('&P25(2)' EQ '').R23431
         AIF   (K'&P25(1) GT 4).R23431    SYMBOL TOO LONG
         AIF   (K'&P25(2) GT 4).R23431
&VP251   SETB  (0)                        EXPARM=GEN
&VP252   SETC  '&P25(1)'                  LENGTH-SYMBOL
&VP253   SETC  '&P25(2)'                  ADDRESS-SYMBOL
         AGO   .R23499                    EXIT 234
.R23431  ANOP
&VP251   SETB  (1)                        EXPARM=NOGEN
         AGO   .R23499                    EXIT 234
.**      ROUTINE R234-40 : '&P25' (EXPARM) = INVALID
.R23440  ANOP
&VP251   SETB  (1)                EXPARM=NOGEN                  ******
         AGO   .R23499            EXIT 234                      ******
.**      ROUTINE R234-99 : '&P25' (EXPARM) EXIT-ROUTINE
.R23499  ANOP
         AGO   .R23600            EVALUATE NEXT OPERAND
.**      EVALUATION OF OPERAND : '&P26' (CSPARM)                     *
.R23600  ANOP
         AIF   ('&P26' EQ 'NO').R23610      CSPARM='NO'
         AIF   ('&P26' EQ 'YES').R23620     CSPARM='YES'
         AIF   ('&P26'(1,1) EQ '(').R23630  CSPARM=(SYMBOLS)
         AGO   .R23640                      CSPARM=INVALID
.**      ROUTINE R236-10 : '&P26' (CSPARM) = 'NO'
.R23610  ANOP
&VP261   SETB  (1)                CSPARM=NOGEN
         AGO   .R23699            EXIT 236
.**      ROUTINE R236-20 : '&P26' (CSPARM) = 'YES'
.R23620  ANOP
&VP261   SETB  (0)                CSPARM=GEN
&VP262   SETC  'PM01'             NUMBER-SYMBOL
&VP263   SETC  'PM02'             ADDRESS-SYMBOL
         AGO   .R23699            EXIT 236
.**      ROUTINE R236-30 : '&P26' (CSPARM) = (SYMBOLS)
.R23630  ANOP
         AIF   ('&P26(1)' EQ '').R23631   SYMBOL=NULL-STR.
         AIF   ('&P26(2)' EQ '').R23631
         AIF   (K'&P26(1) GT 4).R23631    SYMBOL TOO LONG
         AIF   (K'&P26(2) GT 4).R23631
&VP261   SETB  (0)                        CSPARM=GEN
&VP262   SETC  '&P26(1)'                  NUMBER-SYMBOL
&VP263   SETC  '&P26(2)'                  ADDRESS-SYMBOL
         AGO   .R23699                    EXIT 236
.R23631  ANOP
&VP261   SETB  (1)                        CSPARM=NOGEN
         AGO   .R23699                    EXIT 236
.**      ROUTINE R236-40 : '&P26' (CSPARM) = INVALID
.R23640  ANOP
&VP261   SETB  (1)                CSPARM=NOGEN                 ******
         AGO   .R23699            EXIT 236                     ******
.**      ROUTINE R236-99 : '&P26' (CSPARM) EXIT-ROUTINE
.R23699  ANOP
         AGO   .R23800            EVALUATE NEXT OPERAND
.**      OPEN-END FOR FURTHER OPERAND-EVALUATIONS                    *
.R23800  ANOP
         AGO   .R30000
.R30000  ANOP
         AGO   .R40000                                          ******
.R40000  ANOP
.**      ROUTINE R410 : GEN.OF CSECT-STATEMENT
.R410    ANOP
         AIF   (&VP101).R420      NOGEN-EXIT
&VP102   CSECT
         NOPR  0
         AGO   .R420              EXIT
.**      ROUTINE R420 : GEN.OF CSECT-IDENTIFICATION
.R420    ANOP
         AIF   (&VP111).R430      NOGEN-EXIT
&VCA1    SETA  &VP114+4+2         CORRECT BRANCH-DISPL.
         B     &VCA1.(15)
         AIF   (&VP112).R421      USE LABEL-ID.
         AIF   (&VP113).R422      USE STRING-ID.
         AGO   .R430              ERROR/EXIT
.R421    ANOP
&VCC1    SETC  ''''               QUOTE-IDENT
         DC    AL1(&VP114)
&VCA1    SETA  &VP114-1
         DC    CL&VCA1&VCC1&VP102&VCC1
&VGA1    SETA  &VP114+4+2         SAVE DISPLACEMENT
         AGO   .R430              EXIT
.R422    ANOP
&VCC1    SETC  ''''               QUOTE-IDENT
         DC    CL&VP114&VCC1&P11&VCC1
&VGA1    SETA  &VP114+4+2         SAVE DISPLACEMENT
         AGO   .R430              EXIT
.**      ROUTINE R430 : GEN.OF ALIAS-ENTRY STATEMENTS
.R430    ANOP
         AIF   (&VP121).R440      NOGEN-EXIT
&VCA1    SETA  &VP122             GET NO.OF ALIASES
&VCA2    SETA  1                  PTR TO ALIAS-SYMBOL
.R430A   ANOP
         ENTRY &VP123(&VCA2)
&VP123(&VCA2) NOPR  0
&VCA1    SETA  &VCA1-1            NO.OF ALIAS -1
&VCA2    SETA  &VCA2+1            POINTER +1
         AIF   (&VCA1 NE 0).R430A NEXT ALIAS
         AGO   .R440              EXIT
.**      ROUTINE R440 : GEN.OF ENTRY-POINT STATEMENTS
.R440    ANOP
         AIF   (&VP131).R450      NOGEN-EXIT
&VCA1    SETA  &VP132             GET NO.OF ENTRY-POINTS
&VCA2    SETA  1                  PTR TO EP-SYMBOL
&VCA3    SETA  1                  SET NOPR-REG COUNTER
.R440A   ANOP
         ENTRY &VP133(&VCA2)
&VP133(&VCA2) NOPR  &VCA3
&VCA1    SETA  &VCA1-1            NO.OF EP-SYMB -1
&VCA2    SETA  &VCA2+1            POINTER +1
&VCA3    SETA  &VCA3+1            NOPR-REG CTR +1
         AIF   (&VCA1 NE 0).R440A NEXT EP-SYMB
         AGO   .R450              EXIT
.**      ROUTINE R450 : GEN.OF EXTRN-POINT SYMBOLS
.R450    ANOP
         AIF   (&VP141).R452      NOGEN-EXIT
&VCA1    SETA  &VP142             GET NO.OF EXTRN-POINTS
&VCA2    SETA  1                  PTR TO EX-SYMBOL
.R450A   ANOP
         EXTRN &VP143(&VCA2)
&VCA1    SETA  &VCA1-1            NO.OF EX-SYMB -1
&VCA2    SETA  &VCA2+1            POINTER +1
         AIF   (&VCA1 NE 0).R450A NEXT EX-SYMB
         AGO   .R452              EXIT
.**      ROUTINE R452 : GEN.OF REGISTER-EQUATIONS
.R452    ANOP
         AIF   (&VP231).R452A     NOGEN GPR
&VP232.0 EQU   0
&VP232.1 EQU   1
&VP232.2 EQU   2
&VP232.3 EQU   3
&VP232.4 EQU   4
&VP232.5 EQU   5
&VP232.6 EQU   6
&VP232.7 EQU   7
&VP232.8 EQU   8
&VP232.9 EQU   9
&VP232.10 EQU   10
&VP232.11 EQU   11
&VP232.12 EQU   12
&VP232.13 EQU   13
&VP232.14 EQU   14
&VP232.15 EQU   15
.R452A   ANOP
         AIF   (&VP241).R460      NOGEN FPR
&VP242.0 EQU   0
&VP242.2 EQU   2
&VP242.4 EQU   4
&VP242.6 EQU   6
         AGO   .R460
.**      ROUTINE R460 : GEN.OF REGISTER-SAVING
.R460    ANOP
         AIF   (&VP161).R470      NOGEN-EXIT
         STM   14,12,12(13)
.R470    ANOP
.**      ROUTINE R520 : GEN.OF BASE-REGISTER LOADING
.R520    ANOP
         AIF   (&VP151).R5209
         AIF   (&VP121 AND &VP131).R520B
         BALR  &VP153(1),0
         USING *,&VP153(1)
         AGO   .R520C
.R520B   ANOP
         LA    &VP153(1),0(15)
         USING &VP102,&VP153(1)
&VCC1    SETC  '&VP102'.'+'
         AGO   .R520D
.R520C   ANOP
&VCC1    SETC  '*+'               USING-OP
.R520D   ANOP
&VCA3    SETA  4096               4K-VALUE
&VCA1    SETA  2                  POINTER=2
&VCA2    SETA  &VP152-1           NUMBER-REGS -1
.R520A   ANOP
         AIF   (&VCA2 EQ 0).R521  LAST USING DONE
         USING &VCC1&VCA3,&VP153(&VCA1)
&VCA1    SETA  &VCA1+1            POINTER +1
&VCA2    SETA  &VCA2-1            NUMBER -1
&VCA3    SETA  &VCA3+4096         OFFSET +4K
         AGO   .R520A             DO NEXT USING
.R521    ANOP
&VCA1    SETA  2                  POINTER=2
&VCA2    SETA  &VP152-1           NUMB-REGS -1
.R521A   ANOP
         AIF   (&VCA2 EQ 0).R5209  LAST LA DONE
         LA    &VP153(&VCA1),2048(&VP153(&VCA1-1))
         LA    &VP153(&VCA1),2048(&VP153(&VCA1))
&VCA1    SETA  &VCA1+1            POINTER +1
&VCA2    SETA  &VCA2-1            NUMBER -1
         AGO   .R521A             DO NEXT LA
.R5209   ANOP
.**      ROUTINE R480 : GEN.OF SAVE-AREA CHAINING
.R480    ANOP
         AIF   (&VP171).R490      NOGEN-EXIT
&VCC1    SETC  '&VP162'.'&VP223'  S/A + WORK-SYMBOL
         AIF   (&VP201 NE 1).R480C   CODE=NOT RE-US
         LA    &VP211,&VCC1
.R4801   ANOP
         LM    15,1,16(13)
         AIF   (&VP172 EQ 0).R480A NOT FORWARD-CHAIN
         ST    &VP211,8(13)
         AGO   .R480A             EXIT
.R480A   ANOP
         AIF   (&VP173 EQ 0).R480B NOT BACKWRD-CHAIN
         ST    13,4(&VP211)
         AGO   .R480B             EXIT
.R480B   ANOP
         LR    13,&VP211
         AGO   .R490              EXIT
.R480C   ANOP
         GETMAIN R,LV=&VP192*4+72
         AIF   (&VP192*4+72 GT 256).R480D
         XC    0(&VP192*4+72,1),0(1)
         AGO   .R480E
.R480D   ANOP
         XC    0(72,1),0(1)
.R480E   ANOP
         LR    &VP211,1
         AGO   .R4801
.**      ROUTINE R490 : GEN.OF SAVE-AREA FLAGGING
.R490    ANOP
         AIF   (&VP181).R500      NOGEN-EXIT
         L     &VP211,4(13)
         MVI   16(&VP211),&VP182
         AGO   .R500              EXIT
.**      ROUTINE R500 : GEN.OF SAVE-AREA DEFINITION
.R500    ANOP
         AIF   (&VP161).R510      NOGEN-EXIT (RGSAVE)
         AIF   (&VP201).R501      CODE = REUSABLE
         AIF   (&VP202).R510           = REFRESHABLE
         AIF   (&VP203).R510           = REENTRANT
         AGO   .R510              ERROR-EXIT
.R501    ANOP
         CNOP  0,4
         B     *+(&VP192*4+76)
&VCC1    SETC  '&VP162'.'&VP223'  S/A + WORK-SYMBOL
&VCC1    DC    18F'0'
         AIF   (&VP191).R510
         DC    &VP192.F'0'
.R510    ANOP
.**      ROUTINE R540 : GEN.OF EXTRN-ADCONS
.R540    ANOP
         AIF   (&VP141).R550      NOGEN-EXIT
&VCA1    SETA  1                  POINTER=1
&VCA2    SETA  &VP142             NUMB EXTRN-SYMB
         CNOP  0,4
         B     *+4+(&VP142*4)
.R540A   ANOP
         AIF   (&VCA2 EQ 0).R550  LAST ADCON DONE
&VP144(&VCA1) DC   A(&VP143(&VCA1))
&VCA1    SETA  &VCA1+1            POINTER +1
&VCA2    SETA  &VCA2-1            NUMBER -1
         AGO   .R540A
.**      ROUTINE R550 : GEN.OF EXEC-PARM RESOLUTION
.R550    ANOP
         AIF   (&VP251).R560      NOGEN-EXIT
         CNOP  0,4
         B     *+12
&VCC1    SETC  '&VP252'.'&VP223'  LENGTH
&VCC2    SETC  '&VP253'.'&VP223'  ADDRESS
&VCC1    DC    F'0'
&VCC2    DC    A(0)
         L     &VP211,4(13)
         L     &VP211,24(&VP211)
         L     &VP211,0(&VP211)
         LH    &VP212,0(&VP211)
         ST    &VP212,&VCC1
         LA    &VP211,2(&VP211)
         ST    &VP211,&VCC2
         AGO   .R560              EXIT
.**      ROUTINE R560 : GEN.OF CSECT-PARM RESOLUTION
.R560    ANOP
         AIF   (&VP261).R570      NOGEN-EXIT
         CNOP  0,4
         B     *+12
&VCC1    SETC  '&VP262'.'&VP223'  NUMBER
&VCC2    SETC  '&VP263'.'&VP223'  ADDRESS
&VCC1    DC    F'0'
&VCC2    DC    A(0)
         L     &VP211,4(13)
         L     &VP211,24(&VP211)
         ST    &VP211,&VCC2
         AGO   .R570              EXIT
.**      ROUTINE R570 : GEN.OF ENTRY-POINT BRANCH-TABLE
.R570    ANOP
         AIF   (&VP131).R580      NOGEN-EXIT
         SR    &VP211,&VP211
         IC    &VP211,1(15)
         SLL   &VP211,2
         LA    &VP212,*+8
         B     0(&VP211,&VP212)
         B     GO01&SYSNDX
&VCA1    SETA  &VP132             NUMBER EP-SYMB
&VCA2    SETA  1                  POINTER
.R570A   ANOP
         B     &VP134(&VCA2)
&VCA1    SETA  &VCA1-1            NUMBER -1
&VCA2    SETA  &VCA2+1            POINTER +1
         AIF   (&VCA1 NE 0).R570A DO NEXT BRANCH
GO01&SYSNDX EQU   *
         AGO   .R580              EXIT
.R580    ANOP
         MEND
./ ADD NAME=DMEND1
         MACRO
&P00    DMEND1 &P10=NO,&P20=NO
         GBLB  &DMANF02   CODE REENT
         GBLA  &DMANF03     N'FULLW XINFO
         LCLB  &DMEND01                RC = REG + REENT
         LCLC  &TYP
         LCLA  &MENGE
         LCLA  &STREG
         AIF   (&DMANF02).RENT
&P00     L     13,4(13)
&STREG   SETA  13
         AGO   .RETREG
.RENT    ANOP
&STREG   SETA  14
&P00     L     14,4(13)
.RETREG  ANOP
         AIF   ('&P20' EQ 'NO').RETREG2
&MENGE   SETA  1
.RETREG1 AIF   (&MENGE GT N'&P20).RETREG2
         ST    &P20(&MENGE),20+&P20(&MENGE)*4(&STREG.)
&MENGE   SETA  &MENGE+1
         AGO   .RETREG1
.RETREG2 AIF   (NOT (&DMANF02)).EX
         AIF   ('&P10'(1,1) NE '(').FREE
         ST    &P10(1),16(&STREG.)
&DMEND01 SETB  1
.FREE    ANOP
         LR    1,13
&MENGE   SETA  &DMANF03*4+72
         FREEMAIN R,LV=&MENGE,A=(1)
         LR    13,14
         AGO   .EX1
.EX      ANOP
         AIF   ('&P10'(1,1) EQ '(').R2
.EX1     ANOP
         AIF   ('&P10' EQ '').R1
         AIF   ('&P10' EQ 'NO').R1A
         AIF   ('&P10' EQ 'YES').R1
&TYP     SETC  T'&P10
         AIF   ('&TYP' EQ 'N').R3
         AIF   ('&TYP' EQ 'F').R4
         AIF   ('&TYP' EQ 'H').R5
         AGO   .R1
.R1      ANOP
         SR    15,15
         AGO   .RX
.R1A     ANOP
         AGO   .RX
.R2      ANOP
         LR    15,&P10(1)
         AGO   .RX
.R3      ANOP
         LA    15,&P10(1)
         AGO   .RX
.R4      ANOP
         L     15,&P10(1)
         AGO   .RX
.R5      ANOP
         LH    15,&P10(1)
         AGO   .RX
.RX      ANOP
         L     14,12(13)
         AIF   (&DMEND01).RX1
         LM    0,12,20(13)
         AGO   .RX2
.RX1     ANOP
         LM    15,12,16(13)
.RX2     ANOP
         BR    14
         MEND
./ ADD NAME=MDATUM
         MACRO
&NAME    MDATUM &DTFELD=,&ZEIT=
         LCLA  &P1,&P2,&P3,&P4
&P1      SETA  2
&P2      SETA  1
&P3      SETA  3
&P4      SETA  6
&NAME    B     MDATUM00
MDDAT    DC    F'0' *              ZWISCHENSPEICHER REG. 1
MDDAT1   DC    CL7'0'
MDZWSP   DS    0CL6 *              TTMMJJ
MDTAG    DC    CL2' ' *            TT
MDMON    DC    CL2' ' *            MM
MDJAHR   DC    CL2' ' *            JJ
MDNTAB   DC    PL2'00,31,59,90,120,151,181,212,243,273,304,334,365'
         DC    CL24'010203040506070809101112'
MDSTAB   DC    PL2'00,31,60,91,121,152,182,213,244,274,305,335,366'
         DC    CL24'010203040506070809101112'
MDADNTAB DC    A(MDNTAB+2)
MDADSTAB DC    A(MDSTAB+2)
MDPUNKT  DC    8C'.'
MDSCHAB  DC    XL13'40202020C8402020D4402020E2'
MDATUM00 TIME  DEC
         ST    1,MDDAT *           STORE DATUM JJTTT
         UNPK  MDDAT1,MDDAT
         MVC   MDJAHR,MDDAT1+2
         MVO   MDDAT,MDDAT(2)
         DP    MDDAT,=P'4' *       DIVIDIEREN JAHR DURCH 4
         CP    MDDAT+&P1+&P2.(1),=P'0' PRUEFEN AUF SCHALTJAHR
         BH    MDATUM01
         MVC   MDADNTAB,MDADSTAB * TABELLE FUER SCHALTJAHR VERWENDEN
MDATUM01 N     1,=X'0000FFFC' ..   UEBERTRAGEN VORZEICHEN
         ST    1,MDDAT *           STORE TAG TTT
         L     1,MDADNTAB *        LADEN ADRESSE VON TABELLE
MDATUM02 EQU   *
         CP    MDDAT+&P1.(2),0(2,1) VERGLEICHE TAG MIT TABELLENWERT
         BH    MDATUM03
         BCTR  1,0 *               VERMINDERN ADRESSZAEHLER UM 1
         BCTR  1,0 *               VERMINDERN ADRESSZAEHLER UM 1
         SP    MDDAT,0(2,1) *      SUBTRAHIERE TAG MINUS TABELLENWERT
         UNPK  MDTAG,MDDAT
         OI    MDTAG+1,X'F0' *     UEBERTRAGEN VORZEICHEN
         MVC   MDMON,26(1) *       UEBERTRAGEN MONAT AUS TABELLE
         B     MDATUM04
MDATUM03 EQU   *
         LA    1,2(1) .            ERHOEHEN ADRESSZAEHLER UM 2
         B     MDATUM02
MDATUM04 EQU   *
         AIF   (T'&DTFELD EQ 'O').WIB
         MVC   &DTFELD.(8),MDPUNKT
         MVC   &DTFELD.(2),MDTAG
         MVC   &DTFELD+&P3.(2),MDMON
         MVC   &DTFELD+&P4.(2),MDJAHR
.WIB     ANOP
         PACK  MDDAT,MDZWSP
         L     1,MDDAT *           LADEN REG. 1 MIT TTMMJJ
         ST    0,MDDAT *           STORE ZEIT HHMMSSTH
         MVI   MDDAT+3,12 .            UEBERTRAGEN VORZEICHEN
         MVO   MDDAT,MDDAT(3) *    LOESCHEN T
         AIF   (T'&ZEIT EQ 'O').ENDE
         MVC   &ZEIT.(13),MDSCHAB  UEBERTRAGEN SCHABLONE
         ED    &ZEIT.(13),MDDAT *  AUFBEREITEN ZEIT
.ENDE    ANOP
         L     0,MDDAT .               LADEN R0 MIT HHMMSSV
         MEND
