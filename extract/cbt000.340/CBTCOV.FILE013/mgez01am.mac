./       ADD   NAME=BEGIN
         MACRO
&NAME    BEGIN &BASE=3,&TYPE=HAPRO,&EXIT=NOT,&EQU=YES,                //
               &FLPR=NOT,&MASK='00001111',&ID=YES,&SAVE=DEFAULT,       /
               &PL1=NOT,&ENTRY=NOT,&STAE=NOT
.*
.*       USER WRITTEN MACRO
.*       PROGRAM START ROUTINE
.*
         GBLA  &CNT
         GBLB &SUBROUT,&PRVEXIT,&FLPSAVE
         GBLB  &SASTATC,&BEGIN,&PL1PROG
         GBLB  &NPREG
         LCLA  &LV,&BRG#,&I
         LCLB  &B13
         LCLC  &B(3),&NDX
&PL1PROG SETB  ('&PL1(1)' EQ 'YES')
&BRG#    SETA  N'&BASE
&SASTATC SETB  ('&SAVE' EQ 'DEFAULT' AND NOT &PL1PROG)
&SASTATC SETB  (&SASTATC OR '&SAVE' EQ 'STATIC')
&SUBROUT SETB  ('&TYPE' NE 'HAPRO' OR &BEGIN OR &PL1PROG)
&FLPSAVE SETB  ('&FLPR' EQ 'YES')
         AIF   (&PL1PROG).PL1SETB
&PRVEXIT SETB  ('&EXIT' NE 'SPIETEST' AND '&EXIT' NE 'NOT')
         AGO   .ASS
.PL1SETB ANOP
         AIF   (&FLPSAVE).PL1MN
&PRVEXIT SETB  (N'&PL1 EQ 2)
         AIF   (NOT &PRVEXIT).ASS
         AIF   ('&PL1(2)' EQ 'SPIE').ASS
&PRVEXIT SETB  0
         MNOTE 8,'PL1=&PL1 INVALID OPERAND'
         AGO   .ASS
.PL1MN   MNOTE 8,'FLPR=YES NOT ALLOWED WITH PL1=YES'
.ASS     ANOP
         AIF   ('&CNT' GT '9').CNT0
&NDX     SETC  '0'.'&CNT'
         AGO   .CNT1
.CNT0    ANOP
&NDX     SETC  '&CNT'
.CNT1    ANOP
&CNT     SETA  &CNT+1
.*
.*       CHECK FORMAT OF CSECT NAME
.*
         AIF   (T'&NAME EQ 'O').CS0
&NAME    CSECT
         AGO   .CS1
.CS0     MNOTE 8,'CSECT NAME OMITTED'
$PRIVATE CSECT
.CS1     AIF   (NOT &PL1PROG).CSX
.*
*        THIS CSECT WILL BE USED AS A SUBROUTINE TO PL1
.*
IHEQSLA  DXD   A      DECLARE EXTERNAL DUMMY SECTION FOR IHEQSLA PRV
.CSX     AIF   ('&ENTRY' EQ 'NOT').CS2
         ENTRY &ENTRY
&ENTRY  EQU   *
.CS2    AIF   (&BEGIN).C0
&BEGIN   SETB  1
.C       AIF   ('&EQU' EQ 'NOT').C0
&NPREG   SETB  1
.*
*        REGISTER EQUATES
.*
         SPACE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE 2
.*
.*       SET   BASE REGISTERS
.*
.C0      ANOP
&I       SETA  0
         AIF   ('&BRG#' LE '3').C1
         MNOTE 12,'MORE THAN 3 BASE REGISTERS SPECIFIED, MACRO IGNORED'
         USING *,3,4,5 PROVIDE ADDRESSABILITY FOR ASSEMBLY ONLY
         MEXIT
.PL1BAS  ANOP
&B(1)    SETC  'R10'
         AGO   .IDTEST
.C1      AIF   ('&BASE' EQ '3' AND &PL1PROG).PL1BAS
&I       SETA  &I+1
         AIF   ('&BASE(&I)' GE '2' AND '&BASE(&I)' LT '13').BOK
         AIF   ('&BASE(&I)' NE '13').BN13
         AIF   (&SASTATC).B13
         MNOTE 12,'BASE=13 IMPOSSIBLE WITH DYNAMIC SAVEAREA'
         AGO   .BOK
.B13     AIF   ('&I' GT '1').B13N
&B13     SETB  1
         AGO   .BOK
.B13N    MNOTE 8,'REG 13 AS A BASE REGISTER MUST BE SPECIFIED AS FIRST /
               OPERAND E.G. BASE=(13,2,3)'
         AGO   .BOK
.BN13    MNOTE 8,'REGISTER &BASE(&I) SHOULD NOT BE USED AS A BASE REGIS/
               TER'
.BOK     AIF   (NOT &PL1PROG).BOK1
         AIF   ('&BASE(&I)' NE '12').BOK1
         MNOTE 8,'REGISTER 12 SHOULD NOT BE USED IN A SUBROUTINE TO PL1/
               '
.BOK1    ANOP
&B(&I)   SETC  'R'.'&BASE(&I)'
         AIF   ('&I' LT '&BRG#').C1
.*
.*       SAVE GENERAL REGISTERS AND INITIATE BASE REGISTERS
.*
         AIF   (NOT &B13).IDTEST
         USING *,R15
.IDTEST  AIF   ('&ID' NE 'YES').ENT1
         BC    15,14(,R15) BRANCH AROUND IDENTIFIER
         DC    AL1(8) LENGTH
         AIF   (T'&NAME EQ 'O').ENTN
         DC    CL8'&NAME' CSECT NAME
         DS    0H
        AGO   .ENT1
.ENTN    DC    CL8'$PRIVATE'
         DS    0H
.ENT1    AIF   (&PL1PROG).PL1A
         STM   R14,R12,12(R13) SAVE GENERAL REGISTERS
         AGO   .ENT2
.PL1A    STM   R14,R11,12(R13) SAVE GENERAL REGISTERS
.ENT2    LR    R14,R13 SAVE OLD SAVEAREA ADDRX
         AIF   (&B13).B130
         BALR  &B(1),0 INITIATE BASE REGISTER
         USING *,&B(1) ESTABLISH ADDRESSABILITY
BASIS&NDX  DS   0H
.B130    ANOP
&LV      SETA  72
         AIF   (NOT &FLPSAVE).C2
&LV      SETA  &LV+32
.C2      AIF   (NOT &SUBROUT OR NOT &PRVEXIT).C3
&LV      SETA  &LV+4
.C3      AIF   (NOT &PL1PROG).C3X
&LV      SETA  &LV+4
.C3X     AIF   (&SASTATC).SASTAT
.*
.*       ALLOCATE SAVEAREA - DYNAMIC -
.*
         LA    R0,&LV LOAD SAVEAREA LENGTH
         BAL   R1,*+4 INDICATE GETMAIN
         SVC   10 ISSUE GETMAIN SVC
         LR    R13,R1 PROVIDE SAVEAREA ADDRESSABILITY
         XC    0(&LV,R13),0(R13) CLEAR SAVEAREA
         AGO   .SASTAT1
.*
.*       DEFINE SAVEAREA - STATIC -
.*
.SASTAT  AIF   (&FLPSAVE).CNOP48
         CNOP  0,4
         AGO   .B13AIF
.CNOP48  CNOP  4,8
.B13AIF  AIF   (&B13).B131
         B     *+4+&LV BRANCH AROUND SAVEAREA
&I       SETA  &LV/4
SAVEAR&NDX DC  &I.F'0' SAVEAREA
         LA    R13,SAVEAR&NDX LOAD SAVEAREA ADDRESS
         AGO   .SASTAT1
.B131    ANOP
         BAL   R13,*+4+&LV BRANCH AROUND SAVEAREA
         DROP  R15
BASIS&NDX  DS   0H
         USING *,R13 ESTABLISH ADDRESSABILITY
&I       SETA  &LV/4
SAVEAR&NDX DC  &I.F'0' SAVEAREA
.*
.*      SAVEAREA CHAIN AND FURTHER BASE REGISTERS
.*
.SASTAT1 AIF   (NOT &FLPSAVE).C30
         OI    0(R13),255 INDICATE EXTENDED SAVEAREA
.C30      AIF  (NOT &PL1PROG).C3Y
         MVI   0(R13),128 SET PL1 FLAGS
         MVI   3(R13),72 IN 1ST WORD OF SA
.C3Y     ST    R14,4(,R13) PROVIDE SAVE-
         ST    R13,8(,R14) AREA CHAINING
         AIF   ('&BRG#' EQ '1').C5
         LA    R1,2048 INITIATE FURTHER BASE REGISTERS
&I       SETA  1
.C4      LA    &B(&I+1),2048(R1,&B(&I))
         USING BASIS&NDX+(4096*&I),&B(&I+1)
&I       SETA &I+1
        AIF   ('&I' LT '&BRG#').C4
.C5      AIF   (NOT &PL1PROG).C5X
.*
.*       UPDATE PRV IHEQSLA
.*
         LA    R1,0(R12,0) NOW
         ORG   *-2 UPDATE
         DC    QL2(IHEQSLA) PRV
         ST    R13,0(,R1) IHEQSLA
&LV      SETA  &LV-4
         ST    R1,&LV.(,R13) SAVE PRV POINTER
.C5X     AIF   ('&EXIT' EQ 'NOT').C6
         AIF   (&SUBROUT AND NOT &PRVEXIT).C6
.*
.*       ISSUE SPIE SVC
.*
         CNOP  2,4
         LA    R1,*+12 LOAD BRANCH ADDRESS
         BALR  R1,R1 BRANCH AROUND PICA
         DC    B&MASK PROGRAM MASK BITS
         AIF   ('&EXIT'(1,1) EQ '(').C50
         DC    VL3(&EXIT) EXIT ROUTINE ADDRESS
         AGO   .C51
.C50     DC    AL3&EXIT EXIT ROUTINE ADDRESS
.C51     DC    B'01111111' INTERRUPTION
         DC    B'11111111' MASK BITS
         SVC   14 ISSUE SPIE SVC
         AIF   (NOT &SUBROUT OR NOT &PRVEXIT).C6
&LV      SETA  &LV-4
         ST    R1,&LV.(,R13) SAVE OLD PICA ADDRESS
.C6      AIF   (&SUBROUT OR '&STAE' EQ 'NO' OR '&STAE' EQ 'NOT').C66
IHB&SYSNDX BC  0,IHB&SYSNDX.A
         OI    IHB&SYSNDX+1,X'F0'
         EXTRN STAEROUT
         STAE  STAEROUT
IHB&SYSNDX.A DS  0H
         AGO   .C7
.C66     AIF   (NOT &FLPSAVE OR NOT &SUBROUT).C7
.*
.*       SAVE FLOATING POINT REGISTERS
.*
         TM    0(R14),255 TEST FOR EXTENDED SAVEAREA
         BC    1,*+10 IF OK BRANCH AROUND
         LA    R1,4095 ABEND U4095 ISSUED
         SVC   13 IF NO EXTENSION IN HSA
         STD   0,72(,R14) SAVE
         STD   2,80(,R14) FLOATING
         STD   4,88(,R14) POINT
         STD   6,96(,R14) REGISTERS
.C7      LM    R14,R1,12(R14) RESTORE PARAM REGISTERS
          SPACE  3
         MEND
