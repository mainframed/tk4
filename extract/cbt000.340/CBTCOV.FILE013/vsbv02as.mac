*--------------------------------------------------------------------*
*                                                                    *
*                                                                    *
*        G E N E R A L  D E S C R I P T I O N                        *
*        ------------------------------------                        *
*                                                                    *
*                                                                    *
*          THIS ROUTINE SAMPLES THE NECESSARY SMF DATA               *
*          (RECORD 4 + 5) FOR SYSTEM TASKS.                          *
*          AS YOU MIGHT KNOW THE IBM DOESN'T GIVE US THESE           *
*          INFORMATIONS.                                             *
*                                                                    *
*                                                                    *
*                                                                    *
*        PURPOSE OF ROUTINE                                          *
*                                                                    *
*         UPON ENTRY REG.1 POINTS TO THE INITIATOR LIST              *
*         -  IEFPARAM - WHICH CONTAINS THE LCT ADDRESS.              *
*         WITHIN THE LCT WE FIND THE IEL (INITIATOR ENTRY LIST)      *
*         POINTER FROM WHERE WE GET THE NECESSARY POINTERS .         *
*         WHEN WE GET THE CONTROL FIRST TIME WE OBTAIN AN AREA       *
*         FOR THE RECORD 4 , A SAVEAREA AND FOR VARIOS POINTERS.     *
*         WE SAVE THIS POINTER INTO TCBUSER OF INIT'S TCB AFTER WE   *
*         HAVE CONSTRUCT THE SMF REC. 4 HEADER. THEN WE RETURN TO    *
*         THE CALLER.                                                *
*                                                                    *
*         NEXT TIME WE GET THE CONTROL (TERMINATION TIME) WE FILL    *
*         REC 4 AND REC. 5 AND WRITE IT ONTO SMF DATASET (SVC 83).   *
*                                                                    *
*         WE ARE GETTING NOW ALL INFORMATIONS ABOUT THE THROUGHPUT   *
*         OF OUR SYSTEM INCLUDING THE VALUES FOR THE 'TASK'          *
*                             * M A S T E R *                        *
*                             ---------------                        *
*         FOR *MASTER* THE START TIME IS MODIFIED BY 1 MIN.,         *
*         BECAUSE IT WOULD BE BEFORE THE IPL-REC.                    *
*                                                                    *
*         BECAUSE WE WANT TO PROCESS OUR SMF - STATISTIC AFTER       *
*         06.00 AM,WE AUTOMATICALY GET THE CONTROL VIA STIMER EXIT   *
*         TO DO THE NECESSARY HANDLING EVEN THE TASK IS STILL ACTIVE *
*         THAT MEANS WE SIMULATE AN END AND A START OF THE           *
*         SAME TASK.                                                 *
*         WE ACTUALLY WRITE REC. 44 (4) AND REC. 55 (5) !!!          *
*                                                                    *
*                                                                    *
*                                                                    *
*        BECAUSE WE HAD A LOT OF PROBLEMS IF WE HAD                  *
*        TO IPL THE SYSTEM BEFORE 6 AM , WE LOST ALL SMF DATA        *
*        FOR THE SYSTEM TASKS STILL RUNNING E.G.*MASTER*,JES2 ETC.   *
*        WE MADE A LITTLE ROUTINE WHICH STOPS/STARTS THEM IN A       *
*        CERTAIN INTERVAL. THAT TASK USES THE STIMER EXIT IN CSA     *
*        AND RUNS IN SRB MODE !                                      *
*                                                                    *
*                                                                    *
*         SYSTEM MACROS USED :                                       *
*                                                                    *
*                                                                    *
*                        GETMAIN,STIMER,TIME,SMFWTM,RETURN,          *
*                        TTIMER,FREEMAIN,SAVE,IHARB,                 *
*                        IEFALLCT,IEFJSSOB,IEECHAIN,IFASMFR,         *
*                        IHAPSA,IHAASCB,IHAOUSB,IHAOUXB,IHAPVT,      *
*                        IHAASXB                                     *
*                                                                    *
*         USER MACROS USED :                                         *
*                                                                    *
*                        QINIT                                       *
*                        STCWORK                                     *
*                                                                    *
*                                                                    *
*    ENTRY:                                                          *
*    ------                                                          *
*         THE FOLLOWING ZAP HAS TO BE APPLIED :                      *
*                                                                    *
*                             PTF LEVEL 7611 (UZ13110)               *
*           NAME IEFSD060 IEFSD263                                   *
*           VER 04C6 5820801C                                        *
*           VER 060A 9101402C                                        *
*           VER 088C    28 BYTES ZERO                                *
*           REP 04C6 47F0C88A     B PATCH                            *
*           REP 088C 1B00,1818,0AFF,5820801C,47F0C4C8                *
*******     SR 0,0 / LR 1,8 / SVC 255 / B BACK *****************     *
*           REP 060A 47F0C898        B  PATCH 2                      *
*           REP 089A 180C,1818,0AFF,9101402C                         *
*******     LR 0,12 / LR 1,8 / SVC 255 / TM '2C'(R4),01 ********     *
*           REP 08A4 47F0C60C     B  BACK                            *
*                                                                    *
*                                                                    *
*                                                                    *
*    N O T E :                                                       *
*    ---------                                                       *
*           IEFSD263 USES REG. 8 AS A BASE FOR IEFPARAM !            *
*                                                                    *
*                                                                    *
*          GENERAL ENTRY : FROM IEFSD263                             *
*                1. TIME : BEFORE INITIATOR ATTACHES TASK            *
*                2. TIME : BEFORE INITIATOR DETACHES TASK            *
*                                                                    *
*                                                                    *
*                EXIT : TO IEFSD263                                  *
*                                                                    *
*                                                                    *
*                EXTERNAL ROUTINES : NONE EXEPT SVC'S EXPANDED       *
*                THROUGH MACROS.                                     *
*                                                                    *
*                                                                    *
*                                                                    *
*  N O T E :  THIS IS A TYPE 2 SVC ROUTINE                           *
*  ---------                                                         *
*                                                                    *
*                                                                    *
*     THIS PROGRAM WAS WRITTEN BY :                                  *
*                      KLAUS HEIDEKRUEGER                            *
*                      C/O  SWISS BANK CORPORATION                   *
*                      4000  B A S E L  ( AUTOMATION )               *
*                      ENGELGASSE 12                                 *
*                      SWITZERLAND                                   *
*                                                                    *
*                      DATE FINISHED  15.SEPT. 1977                  *
*                                                                    *
*                                                                    *
*--------------------------------------------------------------------*
IGC255   TITLE ' QINIT MACRO FOR DATE COMPILED'
         MACRO
         QINIT &ADDR=AROUND
         SPACE
         B    &ADDR
         DC   CL8'&SYSECT'        CSECT ID
         DC   C'-'
         DC   CL8'&SYSDATE'       DATE COMPILED LAST
         DC   C'-'
         DC   CL6'&SYSTIME'       TIME COMPILED LAST
&ADDR    EQU   *
         SPACE 2
         MEND
         TITLE '  CHECK IF STARTED TASK'
IGC255   CSECT
         USING *,R6                     ESTABLISH TEMP. BASE
         QINIT
         USING IEFPARAM,R8           INIT PARM LIST
         LR    R8,R1                 LOAD PARM REG PASSED (IEFPARAM)
         LA    R13,0(R13)         CLEAR HOB
         L    R15,PSAAOLD-FLC(0)     GET CURRENT ASCB
         L     R1,ASCBCSCB-ASCBEGIN(R15) GET CSCB ADDR.
         LTR   R1,R1                 CSCB AVAILABLE ?
         BNZ   CLISTC                YES
         ICM   R1,7,1+ASCBJBNS-ASCBEGIN(R15)        JOBNAME POINTER ?
         BZR   R14                    NO -- RETURN TO CALLER
       SPACE 2
         CLC   0(L'MASTER,R1),MASTER    IS IT MASTER ?
         BNER  R14                      NO RETURN TO CALLER
         ICM  R13,8,HEX80                  SET NEGATIVE
         B     PROCMAST                PROCESS MASTER
    SPACE
CLISTC   EQU   *
         USING CSCB,R1                  ESTABLISH TEMP. BASE
         CLI   CHTRKID,CHJOBID          STC ?
         BNER  R14                      NO RETURN TO CALLER
         SPACE 2
 SPACE 2
X0015001 EQU   *
         CLC   CHCLS,INIT                IS IT INIT ?
         BER   R14                       RETURN TO CALLER
         DROP  R1
   SPACE
         TITLE ' SPECIAL HANDLING FOR STC AND SMF'
         DROP R6
         USING SYMBRB+(RBBASIC-RBPRFX),R5
PROCMAST EQU   *
         ST    R14,RBREG14                SAVE RETURN
         STM   R2,R12,RBREG14+4           SAVE CALLERS REGS
         BALR  R12,R0                   *
         USING *,R12                    ESTABLISH BASE
         LTR   R0,R0                      INIT OR EXIT ?
         BNZ   SCHEDEND                   EXIT
         SPACE
         L     R0,WORKLEN               HET LENGTH AND SUBPOOL ID
         GETMAIN R,LV=(0)
   SPACE 2
         LR    R0,R1                    LOAD EP OF AREA
         LR    R14,R1                   LOAD EP OF AREA
         SLR   R15,R15                  CLEAR FOR MVCL
         LR    R2,R1                    SAVE AREA ADR.
         L     R1,WORKLEN               GET LENGTH FOR CLEAR
         LA   R1,0(R1)            CLEAR HOB
         MVCL  R0,R14                   CLEAR IT
         SR    R6,R6               INDICATE ASYNCHRON
         SPACE 2
         USING WORK,R2                  ESTABLISH BASE
         USING IEL,R10                  ESTABLISH BASE
         USING CSCB,R11                 ESTABLISH BASE
   SPACE 2
*--------------------------------------------------------------------*
*                                                                    *
*          INITIALIZE ASYNCHR. TIMER EXIT AND PROVIDE CSA            *
*                                                                    *
*--------------------------------------------------------------------*
   SPACE
         L     R0,CSAEXIT                 LENGTH AND SUBPOOL
         GETMAIN R,LV=(0)                 GET CORE
         LR    R14,R1                     SAVE ADDR.
         ST     R14,CSAADDR                  SAVE CSA ADDR. FOR LATER
        SPACE
         L     R1,CSAEXIT                GET LENGTH FOR MVCL
         LA    R1,0(R1)                  AND CLEAR SUBPOOL
         LR    R15,R1                    COPY LENGTH
         LA    R0,EXITROUT               GRT FROM ADDR.
         LR    R3,R14                    SAVE AREA ADR.
         MVCL  R14,R0                       TRANSFER EXIT ROUTINE
   SPACE
         LR    R14,R3                    RELOAD AREA ADR
         ST    R2,4(R14)                 SAVE REC. ADDR.
         ST    R12,8(R14)                SAVE BASE
         LA    R0,ENTRY                  ENTRY WITHIN MAINMOD
         ST    R0,12(R14)                SAVE IT INTO CSA
         ST    R8,16(R14)                  COPY IEF ADDR.
         LTR   R13,R13                 MASTER ?
         BP    NOMASTER                NO
         OI    MASTERSW,IDMASTER       INDICATE MASTER
         LA    R13,0(R13)              CLEAR HOB
NOMASTER EQU   *
   SPACE
*---------------------------------------------------------------------*
*                                                                     *
*         ISSUE STIMER UNTIL 05.59.59 H.                              *
*                                                                     *
*---------------------------------------------------------------------*
   SPACE
         LR     R0,R14                     LOAD EXIT ADDR.
         STIMER REAL,(0),TOD=TIME
  SPACE
  SPACE
    SPACE 2
         LA    R1,RBREG14               A(R14)
         ST    R1,SAVE+4                 SAVE INTO MY SA
         L     R10,IEFLCTAD          GET LCT ADDR.
         L     R10,LCTENTR-LCT(R10)  IEL ADDR.
         SR    R5,R5
    SPACE
         SPACE 2
*---------------------------------------------------------------------*
*                                                                     *
*        CONSTRUCT SMF RECORD 4 AND 5                                 *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE
TOSMF4    EQU   *
         LA    R3,SMF4                  *
         USING SMFREC4,R3               * ESTABLISH BASE
         BAL   R7,SMFHEAD4              FORMAT SMF HEADER FOR REC 4
         SPACE
         L     R11,IELCSCB              LOAD CSCB ADDR.
         MVC  SMF4JBN,MASTER            MOVE *MASTER* IN CASE
         MVC  SMF4UIF,STCID            MOVE STCMASTR IN CASE
         ICM  R14,15,CHCLS              ANY JOBNAME
         BZ   NOJOB                     NO  LEAVE MASTER
         MVC   SMF4JBN,CHCLS            MOVE JOBNAME INTO REC
NOJOB    EQU   *
         L     R14,IELSSOBA             GET SSOB
        LTR   R14,R14            SSOB AVAILABLE ?
        BZ    NOSSOB             NO
         USING SSOB,R14
         L     R14,SSOBSSIB             GET SSIB
         USING SSIB,R14
         MVC   SMF4UIF,SSIBJBID         GET STC ID
NOSSOB  EQU   *
         L     R14,PSAAOLD-FLC(0)       GET CURRENT ASCB ADDR.
         MVC   SMF4PRTY,ASCBDP-ASCBEGIN(R14)  DPRTY
         MVC   SMF4PGMN,BLANK           MOVE BLANK JUST IN CASE
         MVC   SMF4STMN,BLANK           MOVE BLANK JUST IN CASE
         L     R1,IEFLCTAD      GET LCT ADDR.
         L     R1,LCTSCTAD-LCT(R1) GET SCT ADDR.
         LTR   R1,R1                SCT PRESENT ?
         BZ    NOSCTAV              NO  LEAVE TRANSFER
         MVC   SMF4PGMN,SCTPGMNM(R1)    MOVE PROGRAM NAME
         MVC   SMF4STMN,SCTSNAME(R1)    MOVE STEP NAME
NOSCTAV  EQU   *
         SPACE
         LTR    R5,R5                  ARE WE ASYNCHRON ?
         BNZ    STIMER                 YES DONT RETURN YET
   SPACE 2
         L     R1,PSATOLD-FLC(0)     GET CURRENT TCB
         ST   R2,TCBUSER(R1)          SAVE MY POINTER INTO TCBUSER
         STM   R15,R12,SAVE+16           SAVE MY REGS.
         L     R14,SAVE+4              GET A(R14)
         LM    R2,R12,4(R14)             RESTORE CALLERS REGS
         L     R14,0(R14)              GET RETURN ADDR.
         BR    R14                     RETURN TO CALLER
   SPACE
         SPACE 2
*---------------------------------------------------------------------*
*                                                                     *
*        FILL REST OF STEP TERMINATION REC.                           *
*                                                                     *
*---------------------------------------------------------------------*
    SPACE 3
SCHEDEND EQU    *
         L     R2,PSATOLD-FLC(0)         GET CURRENT TCB
         L     R2,TCBUSER(R2)            GET MY AREA POINTER
         LTR   R2,R2               ANY ADDR. AVAILABLE ?
         BNZ   USEROK              YES PROCESS IT
        SPACE 2
         LM    R2,R12,RBREG14+4     RESTORE REGS.
         BR    R14                 RETURN TO INITIATOR
   SPACE 2
USEROK   EQU   *
         LA    R0,RBREG14            SAVE RETURN ADDR.
         ST    R0,SAVE+4             AND STORE IT
         LM    R15,R12,SAVE+16           GET MY REGS.
ENTRY     EQU   *
         IC    R14,SMF4STN                 INSERT STEP NUMBER
         LA    R14,STEP(R14)               ADD 1
         STC   R14,SMF4STN                 AND STORE IT INTO SMF
         TM    SPECSTOP,SPECIAL         WAS LOCICAL STOP ?
         LM    R0,R1,STOPTIME GET ACTUAL STOPTIME
         BO    AROUND1                  YES IN SRB MODE
  SPACE 2
         TIME  BIN
         SPACE 2
AROUND1  EQU   *
         STCM  R0,15,SMF4TME               TERMINATING TIME
         STCM  R1,15,SMF4DTE               TERMINATING DATE
   SPACE 2
         BAL    R7,SRBTIME             GET SRB TIME
         S     R1,SRBUSED              - SRB TIME USED TOTAL
         STCM  R1,7,SMF4SRBT            STORE CPU SRB TIME INTO SMF
         BNM   X0015003                NOT MINUS --> OK
         STCM  R0,7,SMF4SRBT           USE ACTUAL TIME
         LR    R1,R0                   SHIFT VALUE
X0015003 EQU   *
         A     R1,SRBUSED              + SRB TIME USED
         ST    R1,SRBUSED              = TOTAL SRB TIME UNTIL NOW
  SPACE
         MVI   SMF4LENN+1,2             LENGTH OF DEVICE ENTRY
         LA    R0,1+LACCOUNT+(2+SMF4LENN-SMF4FLG) TO RELOCATE SECTION
         STCM  R0,3,SMF4RLCT            OFFSET TO RELOC. AREA
         LA    R0,LACCOUNT              GET DEFAULT VALUE
         STC   R0,SMF4LNTH              LENGTH OF ACCOUNTING SECTION
         SPACE
         BAL   R7,CPUTIME             GET CPU TIME
         S     R1,CPUUSED              - CPU TIME USED
         STCM  R1,7,SMF4SETM            STORE INTO SMF
         BNM   X0015004                NOT MINUS --> OK
         STCM  R0,7,SMF4SETM           USE ACTUAL TIME
         LR    R1,R0                   SHIFT VALUE
X0015004 EQU   *
         A     R1,CPUUSED              + CPU USED IN THIS STEP
         ST    R1,CPUUSED              = TOTAL CPU TIME FOR STEP
         SPACE 3
*---------------------------------------------------------------------*
*                                                                     *
*        GET SRM DATA                                                 *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE
         L     R15,ASCBASXB-ASCBEGIN(R14) GET ASXB ADRR
         L     R15,ASXBOUSB-ASXBEGIN(R15) GET OUSB ADDR.
         USING OUSB,R15
         L     R1,ASCBOUCB-ASCBEGIN(R14) GET OUCB ADDR.
         MVC   SMF4PGNO+1(1),OUCBNPG(R1)  PERF. GROUP
         SPACE
         L     R1,ASCBOUXB-ASCBEGIN(R14) GET OUXB ADDR.
         USING OUXB,R1                  ESTABLISH BASE
         L     R0,OUSBPIN               NO. OF NON VIO SWAP IN
         A     R0,OUXBPIN
         L     R14,SWAPIN            CUM. SWAPS
         ST    R0,SWAPIN             SAVE TOTAL SWAPS
         SR    R0,R14                STEP SWAPS
         STCM  R0,15,SMF4PGIN           STORE ACCUM. IN SMF
         SPACE
         L     R0,OUXBPOUT              NO. OF NON VIO SWAP OUT
         A     R0,OUSBPOUT              NO. OF NON VIO SWAP OUT
         L     R14,SWAPOUT            TOTAL SWAP OUT
         ST    R0,SWAPOUT             AND SAVE IT
         SR    R0,R14                    STEP VALUE
         STCM  R0,15,SMF4PGOT           AND STORE IT INTO SWAP
         SPACE
         L     R0,OUXBVAMI              VIO PAGE INS
         A     R0,OUSBVAMI              VIO PAGE INS
         L     R14,VIOIN              TOTAL VIO IN
         ST    R0,VIOIN               AND SAVE IT
         SR    R0,R14                 STEP VIO
         STCM  R0,15,SMF4VPI            NO OF VIO PAGE IN
         SPACE
         L     R0,OUXBVAMO              VIO PAGE OUT
         A     R0,OUSBVAMO              VIO PAGE OUT
         L     R14,VIOOUT             TOTAL VIO OUT
         ST    R0,VIOOUT               SAVE NEW VALUE
         SR    R0,R14                  STEP VALUE
         STCM  R0,15,SMF4VPO            TOTAL NUMBER
         SPACE
         L     R0,OUXBJBS               STEP SERVICE UNITS
         A     R0,OUXBTRS
         L     R14,SERVUNIT            TOTAL SERVICE UNITS
         ST    R0,SERVUNIT             SAVE TOTAL VALUE
         SR    R0,R14                  STEP VALUE
         STCM  R0,15,SMF4SST            TOTAL SERVICE UNITS
         SPACE
         L     R0,OUXBJBT
         A     R0,OUXBTRT
         L     R14,SESSTIME            TOTAL SESS TIME
         ST    R0,SESSTIME             SAVE TOTAL VALUE
         SR    R0,R14                  NEW VALUE (STEP)
         STCM  R0,15,SMF4ACT
 SPACE
         L      R0,OUXBVAMR          VIO RECLAIM
         A      R0,OUSBVAMR          VIO RECLAIM
         L     R14,VIORECL             VIO RECLAIMS
         ST    R0,VIORECL              SAVE TOTAL VALUE
         SR    R0,R14                  STEP VALUE
         STCM   R0,15,SMF4RCLM       STORE INTO SMF
         SPACE
         L      R0,OUSBCAPR          COMMON RECLAIM
         A      R0,OUXBCAPR          COMMON RECLAIM
         L     R14,COMMRECL            COMMON RECLAIM
         ST    R0,COMMRECL             SAVE VALUE
         SR    R0,R14                  STEP VALUE
         STCM   R0,15,SMF4CRCL       STORE INTO SMF
  SPACE 2
         L      R0,OUSBCAPI          COMMON RECLAIM
         A      R0,OUXBCAPI          COMMON PAGE INS
         L     R14,COMRECIN            COMMON RECLAIM IN
         ST    R0,COMRECIN             SAVE VALUE
         SR    R0,R14                  NEW STEP VALUE
         STCM   R0,15,SMF4CPGN       STORE INTO SMF
  SPACE
         L      R0,OUSBPREC          VIO PAGE RECLAIM
         A      R0,OUXBPREC          VIO PAGE RECLAIM
         L     R14,VIOPRECL            VIO PAGE RECLAIM
         ST    R0,VIOPRECL             SAVE VALUE
         SR    R0,R14                  STEP VALUE
         STCM   R0,15,SMF4RECL       STORE INTO SMF
   SPACE
         L      R0,OUSBSTCT          PAGE STOLEN
         A      R0,OUXBSTCT          PAGE STOLEN
         L     R14,PAGSTEAL            PAGE STEALING
         ST    R0,PAGSTEAL             SAVE NEW VALUE
         SR    R0,R14                  STEP VALUE
         STCM   R0,15,SMF4PGST       STORE INTO SMF
         SPACE 2
         L     R0,OUSBSPIN             NO. SWAP IN
         L     R14,TOTSWAPI            CUM. VALUE
         ST    R0,TOTSWAPI             STORE NEW VALUE
         SR    R0,R14                  STEP VALUE
         STCM  R0,15,SMF4PSI            PUT IT INTO SMF
    SPACE 2
         L     R0,OUSBSPOT             SWAP OUT
         L     R14,TOTSWAPO            CUM. VALUE
         ST    R0,TOTSWAPO             INTO SAVE FIELD
         SR    R0,R14                  STEP VALUE
         STCM  R0,15,SMF4PSO           INTO SMF
   SPACE 2
         L     R0,OUSBSWCT             GET TOTAL SWAP COUNT
         L     R14,TOTSWTOT            GET TOTAL UNTIL NOW
         ST    R0,TOTSWTOT             SAVE FOR LATER USE
         SR    R0,R14                  STEP VALUE
         STCM  R0,15,SMF4NSW           INTO SMF
         SPACE
         LA    R0,SMF4LL                TOTAL REC LENGTH
         STH   R0,SMF4LEN               INTO RDW
         TM    SPECSTOP,SPECIAL         WAS LOCICAL STOP ?
         BO    AROUND2                  YES IN SRB MODE
    SPACE 3
         SMFWTM (R3)                  WRITE REC 4
AROUND22 EQU   *
   SPACE 3
*---------------------------------------------------------------------*
*                                                                     *
*       CHECK IF REC 5 HAS TO BE WRITTEN AND NEW STIMER               *
*                                                                     *
*---------------------------------------------------------------------*
   SPACE
         LTR   R0,R5            ARE WE ASYNCHR. ?
         BZ    READY            NO TERMINATE
        LTR    R6,R6           ARE WE SYNCHR. ?
        BZ     INIT5           NO
  SPACE 2
STIMER  EQU    *
         TM    SPECSTOP,SPECIAL         WAS LOCICAL STOP ?
         BO    NOLINK                   YES IN SRB MODE
   SPACE 3
         L     R0,CSAADDR              GET EXIT ADDR
        STIMER REAL,(0),TOD=TIME
   SPACE 2
NOLINK   EQU   *
         RETURN (14,12)         RETURN TO CONTROL PGM
   SPACE 2
AROUND2  EQU   *
         LR    R1,R0          LOAD LENGTH OF REC 4
         LR    R15,R1         LOAD LENGTH
         L     R0,SREC4       GET AREA ADDR.
         LR    R14,R3         RECORD ADDR.
         MVCL  R0,R14         TRANS. REC
         B     AROUND22
    SPACE 2
TOSTIMER EQU    *
         TM    SPECSTOP,SPECIAL         WAS LOCICAL STOP ?
         BO    TOSMF4                   YES IN SRB MODE
         STIMER WAIT,DINTVL=ONESEC    WAIT FOR 1 SEC.
         B      TOSMF4                 GO BACK TO MAIN PROCESSING
     SPACE 2
READY    EQU   *
         TTIMER CANCEL          CANCEL REMAINING STIMER
    SPACE 3
         L     R0,CSAEXIT       LENGTH AND SUBPOOL
         L     R1,CSAADDR       GET AREA ADDR.
         FREEMAIN R,LV=(0),A=(1)
  SPACE 2
   SPACE 3
*-------------------------------------------------------------------*
*                                                                   *
*               INIT REC 5                                          *
*                                                                   *
*-------------------------------------------------------------------*
   SPACE
INIT5   EQU    *
         TM    SPECSTOP,SPECIAL         WAS LOCICAL STOP ?
         L     R4,SREC5       GET AREA ADDR.
         BO    AROUND4                  YES IN SRB MODE
         LA    R0,SMF5END-SMFREC5              GET REC LENGTH 5
         ICM   R0,8,WORKLEN                    INSERT SUBPOOL
   SPACE 2
         GETMAIN R,LV=(0)                      GET STORAGE
  SPACE
         LR    R4,R1                           SAVE AREA ADDR.
         USING SMFREC5,R4
AROUND4  EQU   *
    SPACE 2
         LR    R0,R4                           AREA ADDR. FOR CLEAR
         LA    R1,SMF5END-SMFREC5              LENGTH OF CLEAR
         LR    R14,R0                          AREA
         SR    R15,R15                         CLEAR BIN ZERO
         MVCL  R0,R14                          CLEAR STORAGE
  SPACE 2
         MVC  SMF5FLG(SMF5RSTT-SMF5FLG),SMF4FLG MOVE IDENTICAL STORAGE
         MVC    SMF5RST,STRTTIME           GET JOBS STARTTIME
         MVC    SMF5RSD,STRTDATE           GET JOBS START DATE
         MVC   SMF5JIT,SMF5RST           JOB START=JOB INIT TIME
         MVC   SMF5JID,SMF5RSD           JOB START=JOB INIT DATE
         MVI    SMF5RTY,REC5                     INDICATE REC 5
         MVC    SMF5RSTT,SMF4SIT            END OF READER INIT TIME
         MVC    SMF5RSTD,SMF4STID           END OF READER INIT DATE
         MVC    SMF5JBTI,SMF4STI            JOB TERMINATION
         MVI    SMF5JICL,CLASS              INIT CLASS 'S'
   SPACE 2
         MVC   SMF5SRBT,SMF4SRBT         CALC. SRB TIME
         MVC    SMF5TJS,SMF4SST             TOTAL SERVICE UNITS
         MVC    SMF5TTAT,SMF4ACT            TRANSACTION TIME
    SPACE
         MVC    SMF5PGNO,SMF4PGNO           PERF. GROUP NO.
         MVI    SMF5TLEN,L'SMF5PRGN+L'SMF5JCPU+L'SMF5ACTF LENGTH
         MVC    SMF5PRGN(L'PGMNAME),PGMNAME MOVE DUMMY NAME
         MVC   SMF5JCPU,SMF4SETM         CALC. CPU TIME
         SPACE
         L      R14,PSATOLD-FLC(0)          GET CURRENT TCB
         IC     R0,TCBPKF(R14)              GET PKF
         SRL    R0,4                        ELIMINATE UNNECESSARY
         SLL    R0,4                        BITS
         STC    R0,SMF5SPK                  STORE PROTECTION KEY
         SPACE 2
         LA     R0,SMF5END-SMFREC5          RECORD LENGTH
         STH    R0,SMF5LEN                  STORE IT INTO RDW
         TM    SPECSTOP,SPECIAL         WAS LOCICAL STOP ?
         BO    AROUND5                  YES IN SRB MODE
         SMFWTM (R4)                        WRITE RECORD
     SPACE 3
*---------------------------------------------------------------------*
*                                                                     *
*         FREE ALLOCATED STORAGE                                      *
*                                                                     *
*---------------------------------------------------------------------*
       SPACE
         LA    R0,SMF5END-SMFREC5            LENGTH TO FREE
         LR    R1,R4                         A(TO FREE)
         ICM   R0,8,WORKLEN                  SUBPOOL TO FREE
         SPACE
         FREEMAIN R,LV=(0),A=(1)             FREE STORAGE
AROUND5 XC     STRTTIME,STRTTIME
        XC     STRTDATE,STRTDATE
        XC    SMF4STN,SMF4STN
        LTR   R6,R5             ARE WE ASYNCHR. ?
        BNZ   TOSTIMER          YES
         SPACE
         SPACE 1
         LR    R1,R2                         FREE REC. 4
         L     R0,WORKLEN                    LENGTH REC 4
         L     R11,SAVE+4                    SAVE RETURN ADDR.
   SPACE
         FREEMAIN R,LV=(0),A=(1)
         L     R14,0(R11)                    RESTORE RETURN ADDR.
         SR    R15,R15
         LM    R2,R12,4(R11)       RESTORE SAVED REGS.
         BR    R14                           RETURN TO CALLER
         TITLE 'SUBROUTINES'
*---------------------------------------------------------------------*
*                                                                     *
*        BUILD HEADER RECORD                                          *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE
SMFHEAD4 EQU   *
         MVI   SMF4RTY,REC4             INDICATE REC. TYPE 4
         LM    R0,R1,STOPTIME GET ACTUAL TIME PASSED
         AH    R0,H600          ADD 1 SEC. FOR NEW START TIME
         TM    SPECSTOP,SPECIAL         WAS LOGICAL STOP ?
         BO    AROUND6                  YES IN SRB MODE
         SPACE
    SPACE
         TIME  BIN
    SPACE 2
AROUND6  EQU   *
         TM    MASTERSW,IDMASTER       IS IT MASTER ?
         BNO   BACKMAIN             NO
         A     R0,F6000              ADD 1 MIN.
BACKMAIN EQU   *
         ICM    R14,15,STRTTIME            GET POSSIBLE JOB START
         STCM   R14,15,SMF4RST             STORE VALUE
         BNZ    NTFIRST1                   ANY START TIME AVAILABLE ?
         STCM   R0,15,STRTTIME             NO - SAVE FIRST TIME
         STCM  R0,15,SMF4RST            READER RECOGNIZED JOB
   SPACE 2
NTFIRST1 EQU    *
         ICM    R14,15,STRTDATE            GET START DATE
         STCM   R14,15,SMF4RSD             STORE IT INTO SMF
         BNZ    NTFIRST2                   ANY START DATE ?
         STCM   R1,15,STRTDATE             SAVE IT FOR LATER USE
         STCM  R1,15,SMF4RSD            AT SAME DAY
  SPACE 2
NTFIRST2 EQU    *
         STCM  R0,15,SMF4SIT            INIT SELECT TIME
         STCM  R1,15,SMF4STID           INIT SELECT DAY
         STCM    R0,15,SMF4PPST           PROGRAM START
         MVI   SMF4FLG,VS2             INDICATE MVS
         L     R1,CVT                   GET CVT
         L     R1,SMCA(R1)              GET SMCA
         MVC   SMF4SID,16(R1)           MOVE SID
         BR    R7                       RETURN TO CALLER
  SPACE 3
         TITLE 'TIME CALCULATION ROUTINE'
*---------------------------------------------------------------------*
*                                                                     *
*         CALCULATE SRB TIME                                          *
*                                                                     *
*---------------------------------------------------------------------*
  SPACE 2
SRBTIME  EQU   *
         L     R14,PSAAOLD-FLC(0)        GET CURRENT ASCB ADDR.
         LM    R0,R1,ASCBSRBT-ASCBEGIN(R14) GET CUM. SRB TIME
         SRDL  R0,12                     / 1024
         D     R0,F10000                 IN 100 SECOND
         C     R0,FIVE1000     CHECK WHETHER REMAINDER IS
         BL    NOROUND3        AT LEAST HALF OF DEVISOR
*                              IF NO DON'T ROUND UP
         A     R1,ROUNDUP      YES ROUND IT
NOROUND3 EQU   *
         LR    R0,R1                 SAVE TIME
         BR    R7                        RETURN TO CALLER
     SPACE 2
*---------------------------------------------------------------------*
*                                                                     *
*         CALCULATE CPU TIME                                          *
*                                                                     *
*---------------------------------------------------------------------*
  SPACE 2
CPUTIME  EQU   *
         L     R14,PSAAOLD-FLC(0)        GET CURRENT ASCB ADDR.
         LM    R0,R1,ASCBEJST-ASCBEGIN(R14)  GET CPU TIME
         SRDL  R0,12                       / 1024
         D     R0,F10000                   IN HUNDRED SECOND
         C     R0,FIVE1000     CHECK WHETHER REMAINDER IS
         BL    NOROUND2        AT LEAST HALF OF DEVISOR
*                              IF NO DON'T ROUND UP
         A     R1,ROUNDUP      YES ROUND IT
NOROUND2 EQU   *
         LR    R0,R1                 SAVE TIME
         BR    R7                          RETURN TO CALLER
         TITLE 'STORAGE'
*---------------------------------------------------------------------*
*                                                                     *
*         STORAGE DEFINED                                             *
*
*---------------------------------------------------------------------*
BLANK    DS    0D
         DC    CL8' '
F10000   DC    F'10000'
F6000   DC    F'6000'              1 MIN.
FIVE1000  DC    F'5000'
ROUNDUP   DC    F'1'
CSAEXIT  DC    AL1(241),AL3(ENDEXIT)      FOR GETMAIN INTO CSA
WORKLEN  DC   AL1(253)
         DC   AL3(SMF4LL+WORKLL)       TOTAL LENGTH FOR GETMAIN
PGMNAME   DC   CL8'SYS-TASK'            NO PROGRAMMER NAME AVAILABLE
      DS   0D
TIME     DC     C'05595900'       INTERRUPT AT 5.59.59
ONESEC   DC     C'00000100'        WAIT FOR ONE SEC.
H600     DC    H'600'               1 SEC. FOR NEW START TIME
INIT     DC    CL8'INIT'
MASTER  DC    CL8'*MASTER*'
STCID    DC    CL8'STC00001'
HEX80    DC    X'80'
   SPACE 1
         CNOP  0,4                       FULLWORD BOUNDRY
PATCH    DC    20S(*)       PATCH AREA
         TITLE 'ASYNCHRONE EXIT ROUTINE'
*---------------------------------------------------------------------*
*                                                                     *
*      ASYNCHRONE EXIT ROUTINE IF STIMER EXPIRES (MOVED INTO CSA)     *
*                                                                     *
*---------------------------------------------------------------------*
     SPACE
EXITROUT EQU    *
         USING  *,R15
         B      EXIT1              BRANCH AROUND CONSTANTS
REC4ADDR DS     0F
         DC     A(0)               RECORD 4 ADDR.
BASE     DC     A(0)               BASE OF MAIN ROUTINE
ENTRYA   DC     A(0)               ENTRY WITHIN MAINROUT.
IEFA     DC    A(0)                      IEF ADDR.
   SPACE 2
EXIT1    EQU    *
         SAVE   (14,12)            SAVE OS REGS.
         SPACE
         L     R2,REC4ADDR               GET ORIGN AREA ADDR
         LA    R3,SMF4                    GET RECORD 4 ADDR.
         L     R12,BASE                  GET BASE
         LR    R5,R15                    INDICATE ASYNCHR. EXIT ACTIVE
        SR    R6,R6      INDICATE ASYNCHR.
         L     R8,IEFA                   GET IEFPARAM ADDR.
         L     R10,IEFLCTAD               GET LCT ADDR.
         L     R10,LCTENTR-LCT(R10)       GET IEL ADDR.
         L     R15,ENTRYA                 BRANCH INTO LPA
         BR    R15
ENDEXIT  EQU   *-EXITROUT                LENGTH OF ROUTINE
         DROP  R15
    SPACE 1
         TITLE 'EQUATES'
*---------------------------------------------------------------------*
*                                                                     *
*         E Q U A T E S                                               *
*                                                                     *
*---------------------------------------------------------------------*
         REGDEF R
         SPACE 3
VS2      EQU   2
REC4     EQU   44                 RECORD ID
REC5     EQU   55                 RECORD ID
CVT      EQU   16
SMCA     EQU   X'C4'
STEP     EQU   1
LACCOUNT EQU   4
CVTPVTP  EQU   X'164'
OUCBNPG   EQU   24
TCBCMP    EQU   16                       OFFSET TO CC
CLASS     EQU   C'S'                    NO CLASS AVAILABLE
TCBPKF    EQU   28                    STORAGE PROTECTION KEY
ABEND   EQU    2            INDICATE STEP ABEND
TCBTCT   EQU   165                   TCT POINTER +1
CVTGDA   EQU   560                   GDA POINTER
SCTSNAME EQU   52              STEP NAME OFFSET IN SCT
SCTPGMNM EQU   108             PROGRAM NAME OFFSET IN SCT
TCBUSER  EQU   168             A(TCBUSER) OFFSET
IDMASTER EQU   128                     ID FOR MASTER
SPECIAL  EQU   128                  BIT FOR LOGICAL STOP
         TITLE 'DSECTS'
    PRINT NOGEN
        IHARB
RBREG14  EQU   RBEXSAVE           SAVE FOR REG. 14
SYMBRB   EQU   RBPRFX        PREFIX
   SPACE 3
    PRINT GEN
IEFPARAM DSECT
        DS    2F      FILLER
IEFREMLS DS    F
IEFLCTAD DS    F
   SPACE 3
LCT      DSECT
        IEFALLCT
         STCWORK
   SPACE 5
IEL      DSECT
IELSSOBA DS   F             SSOB ADDR.
IELCSCB  DS   F             CSCB ADDR
         DS    F        DUMMY
IELRTNA   DS   F           HIS SA POINTER
   EJECT
         IEFJSSOB
         IEFJSSIB
         SPACE 5
CSCB     DSECT
         IEECHAIN
         SPACE 5
SMFREC4  DSECT
         IFASMFR 4
SMF4END  EQU   *
SMF4LL    EQU    *-SMFRCD4      TOTAL LENGTH OF REC
         EJECT
SMFREC5  DSECT
         IFASMFR 5
SMF5END  EQU   *
         EJECT
         PRINT NOGEN
         IHAPSA
         IHAASCB
         PRINT GEN
         IHAOUSB
         IHAOUXB
         PRINT NOGEN
         IHAPVT
         IHAASXB
         END
