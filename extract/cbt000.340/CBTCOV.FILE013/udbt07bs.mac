         LCLA  &N                  ANZAHL DER UCB'S, DIE VERARBEITET
&N       SETA  100                 WERDEN KOENNEN
UCB      ANFASS R3,R11             LINKAGE CONV. U. BASISREGISTER
         L     R2,0(R1)            LOAD PARM-ADDRESS
         LH    R1,0(R2)            LOAD LENGTH OF PARMFIELD
         CH    R1,=H'8'
         BNH   LENGTHOK
         WTO   'DER MEMBERNAME IST LAENGER ALS 8 BYTE',ROUTCDE=11
         B     RETURN
LENGTHOK BCTR  R1,0                -1 FOR MACHINE CODE
         STC   R1,MVC+1
MVC      MVC   MEMNAME(0),2(R2)    MOVE PARM (= NEW MEMBER NAME)
         OPEN  (DATAFILE,,MESSAGE,OUTPUT) OPEN DATA AND MESSAGE FILE
         LA    R12,UNITTAB
         USING TABENTRY,R12
*
READDATA GET   DATAFILE,DATA
         PUT   MESSAGE,ZEILE
*
*     EINGABE VERARBEITEN UND UNITTAB FUELLEN
*
         CLC   =C'UNIT=',DATA
         BNE   ERR1
         LA    R4,DATA+5
         LR    R5,R4
LOOP1    CLI   0(R5),C','
         BE    L1
         CLI   0(R5),C' '
         BE    L1
         CLI   0(R5),C'-'
         BE    L1
         LA    R5,1(R5)
         B     LOOP1
L1       LR    R6,R5
         SR    R6,R4
         CH    R6,=H'3'
         BNE   ERR2
         MVC   UNIT(3),0(R4)
         CLI   0(R5),C'-'
         BNE   ONEUNIT
         LA    R4,1(R5)
         LR    R5,R4
LOOP2    CLI   0(R5),C','
         BE    L2
         CLI   0(R5),C' '
         BE    L2
         LA    R5,1(R5)
         B     LOOP2
L2       LR    R6,R5
         SR    R6,R4
         CH    R6,=H'3'
         BNE   ERR2
         MVC   UNITFW+1(3),0(R4)
*   LETZTE UNIT DER RANGE KONVERTIEREN ZU HEXADEZIMAL NACH ENDUNIT
         TRX   (ENDUNIT,UNITFW,2),TABNAME=TRTAB
         OI    MULTIPLE,X'80'      INDIKATOR: UNIT-RANGE ANGEGEBEN
ONEUNIT  CLI   0(R5),C' '
         BE    UCBADR
         CLC   =C'UCB+',1(R5)
         BNE   ERR1
         LA    R4,5(R5)
         LR    R5,R4
         LA    R6,3
LOOP3    CLI   0(R5),C'='
         BE    L3
         LA    R5,1(R5)
         BCT   R6,LOOP3
         B     ERR3
L3       LR    R6,R5
         SR    R6,R4
         CH    R6,=H'2'
         BNE   ERR5
*  OFFSET UMWANDELN, FALLS ZU GROSS --> ERR3
         TR    0(2,R4),TRTAB            C'Y' --> X'FY'
         PACK  0(2,R4),0(2,R4)
         LH    R1,0(R4)
         SRL   R1,4                     VORZEICHEN HINAUSSCHIEBEN
         STH   R1,OFFSET
         CH    R1,=H'48'
         BH    ERR3
*
         CLI   1(R5),C'X'
         BNE   ERR1
         LA    R4,2(R5)
         LR    R5,R4
         LA    R6,18
LOOP4    CLI   0(R5),C' '
         BE    L4
         LA    R5,1(R5)
         BCT   R6,LOOP4    <--- LAENGE BEGRENZT AUF 8 BYTES
         B     ERR6
L4       BCTR  R5,0
         LR    R6,R5
         SR    R6,R4
         STH   R6,LAENGE
         TM    LAENGE+1,X'01'
         BO    ERR4
         SRL   R6,1
         STH   R6,LAENGE
         TRX   (VALUE,(R4),(R6))
*   GUELTIGE OPERATIONSART PRUEFEN
         CLI   0(R5),C'I'     DIREKTWERT ANGEGEBEN?
         BE    MVCOPCDE       JA
         CLI   0(R5),C'O'     LOG. ODER-VERKNUEPFUNG?
         BE    MVCOPCDE       JA
         CLI   0(R5),C'A'     LOG. UND-VERKNUEPFUNG?
         BE    MVCOPCDE       JA
         CLI   0(R5),C'N'     LOG. UND-VERKNUEPFUNG?
         BE    MVCOPCDE       JA
         CLI   0(R5),C'X'     EXCLUSIVE-OR-VERKNUEPFUNG?
         BNE   ERR7           NEIN, PARAMETERFEHLER
MVCOPCDE MVC   OPCODE,0(R5)   OPCODE SPEICHERN
UCBADR   EQU   *
         MVC   UNITFW+1(3),UNIT
NEXTUNIT TM    MULTIPLE,X'80' UNIT-RANGE ANGEGEBEN?
         BNZ   RANGE          JA
         LA    R12,ENTRYLEN(R12)  NAECHSTEN ENTRY IN UNITTAB ADRESS.
         LA    R10,UNITTAB+ENTRYLEN*&N
         CR    R12,R10        TABELLE VOLL?
         BNL   TABERR         JA
         B     READDATA       NEIN
TABERR   WTO   'UNITTAB ZU KLEIN, ALLE WEITEREN AENDERUNGEN KOENNEN NIC*
               HT DURCHGEFUEHRT WERDEN',ROUTCDE=11
         B     ENDDATA
*
RANGE    EQU   *
*  UNITADR UM 1 ERHOEHEN UND MIT ENDUNIT VERGLEICHEN
         TRX   (HW,UNITFW,2)
         LH    R4,HW
         LA    R4,1(R4)
         STH   R4,HW
         CLC   HW,ENDUNIT           IST UNIT NOCH IN DER RANGE?
         BH    RESET                NEIN
         TRC   (UNITFW,HW,2),TABNAME=TRCTAB
         LA    R10,UNITTAB+ENTRYLEN*(&N-1)
         CR    R12,R10        TABELLE VOLL?
         BNL   TABERR
         MVC   TABENTRY+ENTRYLEN(ENTRYLEN),TABENTRY  JA, VORIGEN
         LA    R12,ENTRYLEN(R12)    ENTRY KOPIEREN FUER
         MVC   UNIT,UNITFW+1        DIESE UNIT
         B     NEXTUNIT
RESET    NI    MULTIPLE,X'7F'       RESET INDIKATOR
         LA    R12,ENTRYLEN(R12)    NAECHSTEN ENTRY ADRESSIEREN
         B     READDATA
*
*     ALTES MEMBER LESEN UND ZU AENDERNDE UCB'S SUCHEN
*
ENDDATA  MVC   UNIT(3),=C'END'     INDICATE END OF UNITTAB
         OPEN  (IN,,OUT,OUTPUT)    OPEN FILES
         TM    IN+DCBOFLGS-IHADCB,X'10' OPEN SUCCESSFUL?
         BZ    OPENERR             NO
         TM    OUT+DCBOFLGS-IHADCB,X'10' OPEN SUCCESSFUL?
         BZ    OPENERR             NO
         BLDL  IN,BLDLLIST         GET DIRECTORY-ENTRY OF INPUT-MEMBER
         LTR   R15,R15
         BNZ   BLDLERR
         FIND  IN,TTRK,C           AND POSITION TO FIRST RECORD
READ     READ  INDECB,SF,IN,BLOCK,'S'
         CHECK INDECB              WAIT FOR COMPLETION
*   MOVE LENGTH OF BLOCK TO OUTDECB+6 (RECFM=U×)
         MVC   OUTDECB+6(2),IN+82  DCBLRECL-FIELD
*   NUR SAETZE MIT X'00' IN BYTE 1 VERARBEITEN
         CLI   BLOCK,X'00'
         BNE   WRITE
*
*   EINGELESENEN SATZ AUF ZU AENDERNDE UCB'S DURCHSUCHEN
*     IST ERSTER UCB IM SATZ NICHT VOLLSTAENDIG? (X'FF' FEHLT)
*
         LA    R4,BLOCK
         SR    R5,R5
         ICM   R5,3,IN+82
         LA    R5,0(R5,R4)
*   PRUEFEN, OB NOCH RESTL. AENDERUNG ANSTEHT (UCB REICHT UEBER
*   SATZENDE HINWEG MIT ZU AENDERNDEM BEREICH)
         TM    RESTIND,X'80'       RESTL. AENDERUNG?
         BZ    LOOP                NEIN
         LR    R7,R4               R7 UND R4
         LA    R8,47
         SH    R8,MOVEOFF
         LA    R6,UCBALT
         AH    R6,MOVEOFF
         EX    R8,MVUCBALT
         SH    R7,MOVEOFF
         OI    RESTIND,X'01'
         SH    R4,=H'14'
         LA    R12,UNITTAB
         NI    RESTIND,X'7F'       INDIKATOR ZURUECKSETZEN
         TM    RESTIND,X'40'       FALL 2?
         BZ    SEEKUNIT            NEIN
         XI    RESTIND,X'60'       INDIKATOR: ANDERE OUTPUTVERARBEITUNG
         B     SEEKUNIT            AENDERN             (X'40' -> X'20')
*
LOOP     CLI   0(R4),X'FF'         X'FF' SUCHEN
         BE    FF
         LA    R4,1(R4)            NAECHSTES BYTE PRUEFEN
         CR    R4,R5               SATZENDE?
         BL    LOOP                NEIN
         B     WRITE               JA
FF       LA    R12,UNITTAB
         MVC   FRSTBYTE,=H'100'
         XC    LASTBYTE,LASTBYTE
         LR    R7,R4
         BCTR  R7,0
         BCTR  R7,0                R7...A(UCB)
*   PRUEFEN, OB UCB VOLLSTAENDIG IN DIESEM SATZ (GEHT DAVON AUS,
*   DASS NUR TRENNUNG VOR BYTE 16 VORKOMMT - EMPIRISCH FESTGESTELLT)
         LA    R8,BLOCK-16
         AH    R8,IN+82
         CR    R7,R8
         BL    SEEKUNIT
*
*   UCB REICHT IN NAECHSTEN SATZ HINEIN, EXTRA-VERARBEITUNG
*
         LA    R6,4(R7)
         TRC   (UNITFW,(R6),2)
*   UNIT IN EBCDIC IN UNITFW, IST AENDERUNG ZU MACHEN?
         LA    R12,UNITTAB
SEEK1    CLC   =C'END',UNIT
         BE    AUSGABE
         CLC   UNIT,UNITFW+1
         BE    CHANGE1
CONTINU1 LA    R12,ENTRYLEN(R12)
         B     SEEK1
CHANGE1  EQU   *
         LR    R8,R5
         SR    R8,R7
         STH   R8,MOVEOFF
         LH    R2,LAENGE
         LH    R6,OFFSET
         CH    R6,FRSTBYTE
         BNL   HIGH0
         STH   R6,FRSTBYTE         OFFSET ZUM 1. GEAENDERTEN BYTE
HIGH0    AR    R6,R2
         CH    R6,LASTBYTE
         BNH   LOW0
         STH   R6,LASTBYTE         OFFSET ZUM LETZTEN GEAENDERTEN BYTE
LOW0     LA    R6,UCBALT
         TM    RESTIND,X'01'
         BO    SAVE1
         BCTR  R8,0
         EX    R8,MVUCBALT
         OI    RESTIND,X'01'
SAVE1    OI    RESTIND,X'02'       ANZEIGEN: SPRUNG NACH CONTINU1 STATT
         LR    R8,R7                                           CONTINUE
         AH    R8,OFFSET
         CR    R8,R5
         BNL   FALL3
         AH    R8,LAENGE
         CR    R8,R5
         BNL   FALL2
FALL1    EQU   *                   AENDERUNG GANZ IN SATZ1
         B     CHANGE
FALL2    EQU   *                   AENDERUNG IN SATZ1 UND SATZ2
         MVC   RESTOFF(2),MOVEOFF
         LH    R8,LAENGE
         AH    R8,OFFSET
         SH    R8,MOVEOFF
         STH   R8,RESTLEN
         LH    R2,LAENGE
         SR    R2,R8
         STH   R2,LAENGE
         LA    R6,VALUE
         LA    R6,0(R2,R6)
         BCTR  R8,0
         EX    R8,MOVEREST         WERT FUER SATZ2 SPEICHERN
         OI    RESTIND,X'80'       ANZEIGEN: AENDERUNG IN SATZ 2
         OI    RESTIND,X'40'       ANZEIGEN: FALL2
         OI    RESTIND,X'10'       ANZEIGEN: ENTRY MUSS GEAENDERT
         B     CHANGE              WERDEN FUER SATZ2 NACH CHANGE
FALL3    EQU   *                   AENDERUNG GANZ IN SATZ2
         OI    RESTIND,X'80'       INDIKATOR: AENDERUNG IN SATZ2
         B     CONTINU1
SEEKUNIT CLC   =C'END',UNIT        SUCHEN, OB UCB ZU AENDERN IST
         BE    AUSGABE
         CLC   13(3,R7),UNIT
         BE    CHANGE
CONTINUE LA    R12,ENTRYLEN(R12)
         B     SEEKUNIT
CHANGE   EQU   *
         MVC   SAVUNIT(3),UNIT
         NI    AUSGABE+1,X'0F'     AUSGABE NOETIG
         TM    RESTIND,X'01'       ALTER UCB GESPEICHERT?
         BO    SAVED               JA
         MVC   UCBALT(48),0(R7)    ALTEN UCB SICHERN
         OI    RESTIND,X'01'       UND IN RESTIND ANZEIGEN
SAVED    LR    R9,R7               R9...A(UCB)
         AH    R9,OFFSET
         LH    R8,LAENGE
         TM    RESTIND,X'60'
         BNZ   LOW
         LH    R6,OFFSET
         CH    R6,FRSTBYTE
         BNL   HIGH
         STH   R6,FRSTBYTE         OFFSET ZUM 1. GEAENDERTEN BYTE
HIGH     AR    R6,R8
         CH    R6,LASTBYTE
         BNH   LOW
         STH   R6,LASTBYTE         OFFSET ZUM LETZTEN GEAENDERTEN BYTE
LOW      BCTR  R8,0
         EX    R8,MOVEOLD
TESTOPCD CLI   OPCODE,C'I'
         BE    VALOK
         CLI   OPCODE,C'O'
         BNE   EXCLOR
         OC    VALUE,OLDVAL
         B     VALOK
EXCLOR   CLI   OPCODE,C'X'
         BNE   AND
         XC    VALUE,OLDVAL
         B     VALOK
AND      NC    VALUE,OLDVAL
*
VALOK    EQU   *
         EX    R8,MOVENEW          AENDERUNG DURCHFUEHREN
         LR    R10,R7
         LA    R6,UCBNEU
         LA    R8,47
         TM    RESTIND,X'20'
         BO    REST2
         B     EXECUTE
REST2    AH    R7,MOVEOFF
         AH    R6,MOVEOFF
         SH    R8,MOVEOFF
EXECUTE  EX    R8,MVUCBNEU
         LR    R7,R10
         TM    RESTIND,X'10'
         BZ    TM02
         MVC   OFFSET(12),RESTOFF
         XI    RESTIND,X'10'
TM02     TM    RESTIND,X'02'
         BO    CONTINU1
         B     CONTINUE
*
*  OLD- UND NEW-DATA-ZEILE AUFBEREITEN
*
AUSGABE  B     NOCHANGE
         TM    RESTIND,X'40'       FALL 2 AUFGETRETEN?
         BO    NOMSG               JA, OUTPUT "SAMMELN"
         NI    RESTIND,X'DF'       INDIKATOR ZURUECKSETZEN
         MVI   ASA,C' '
         MVC   DATA,ASA
         MVC   DATA+20(4),=C'UNIT='
         MVC   DATA+25(3),SAVUNIT
         MVC   DATA+30(13),=C'OLD DATA WAS:'
         LA    R6,UCBALT
         AH    R6,FRSTBYTE
         LH    R7,LASTBYTE
         SH    R7,FRSTBYTE
         TRC   (DATA+45,(R6),(R7))
         PUT   MESSAGE,ZEILE
         MVC   DATA+20(10),DATA+19
         MVC   DATA+30(13),=C'NEW DATA IS :'
         LA    R6,UCBNEU
         AH    R6,FRSTBYTE
         LH    R7,LASTBYTE
         SH    R7,FRSTBYTE
         TRC   (DATA+45,(R6),(R7))
         PUT   MESSAGE,ZEILE
         MVI   ASA,C'0'
         OI    AUSGABE+1,X'F0'     OUTPUT-WEICHE ZURUECKSTELLEN
         B     NOCHANGE
*
NOMSG    MVC   OFFSET(12),RESTOFF  "REST-WERTE" UEBERTRAGEN
*
NOCHANGE LA    R4,14(R4)           R4 ERHOEHEN FUER NAECHSTEN UCB
         NI    RESTIND,X'FE'
         B     LOOP
*
WRITE    NI    RESTIND,X'FC'
         WRITE OUTDECB,SF,OUT,BLOCK,0
         CHECK OUTDECB             WAIT FOR COMPLETION
         B     READ                NEXT BLOCK
*
EOF      MVC   MEMNAME+8(3),TTRK   MOVE OLD DIRECTORY INFORMATION INTO
         MVC   MEMNAME+11(63),USERDATA-1  LIST FOR STOW-MACRO
         STOW  OUT,MEMNAME,A       STOW NEW MEMBER
         LTR   R15,R15             OK?
         BNZ   STOWERR             NO
CLOSE    CLOSE (IN,,OUT)           CLOSE FILES
         B     RETURN
*
ERR1     MVC   DATA,ASA
         MVC   DATA+20(53),TEXT1
         B     PUT
ERR2     MVC   DATA,ASA
         MVC   DATA+20(53),TEXT2
         B     PUT
ERR3     MVC   DATA,ASA
         MVC   DATA+20(53),TEXT3
         B     PUT
ERR4     MVC   DATA,ASA
         MVC   DATA+20(53),TEXT4
         B     PUT
ERR5     MVC   DATA,ASA
         MVC   DATA+20(53),TEXT5
         B     PUT
ERR6     MVC   DATA,ASA
         MVC   DATA+20(53),TEXT6
         B     PUT
ERR7     MVC   DATA,ASA
         MVC   DATA+20(53),TEXT7
         B     PUT
ERR8     MVC   DATA,ASA
         MVC   DATA+20(53),TEXT8
         B     PUT
ERR9     MVC   DATA,ASA
         MVC   DATA+20(53),TEXT9
PUT      PUT   MESSAGE,ZEILE       FEHLERMELDUNG AUSGEBEN
         XC    TABENTRY(ENTRYLEN),TABENTRY   EINTRAEGE WIEDER LOESCHEN
         B     READ                NAECHSTEN DATENSATZ LESEN
OPENERR  WTO   'OPEN UNSUCCESSFUL',ROUTCDE=11
         B     RETURN
BLDLERR  WTO   'BLDL UNSUCCESSFUL',ROUTCDE=11
         B     CLOSE
STOWERR  WTO   'STOW UNSUCCESSFUL',ROUTCDE=11
         B     CLOSE
*
MOVEOLD  MVC   OLDVAL(0),0(R9)
MOVENEW  MVC   0(0,R9),VALUE
MVUCBNEU MVC   0(0,R6),0(R7)
MVUCBALT MVC   0(0,R6),0(R7)
MOVEREST MVC   RESTVAL(0),0(R6)
*
*        DEFINITIONS
*
IN       DCB   DSORG=PO,MACRF=R,DDNAME=NUCLEUS,EODAD=EOF
OUT      DCB   DSORG=PO,MACRF=W,DDNAME=NUCLEUS
DATAFILE DCB   DSORG=PS,MACRF=GM,RECFM=FB,DDNAME=SYSIN,LRECL=80,       *
               EODAD=ENDDATA
MESSAGE  DCB   DSORG=PS,MACRF=PM,RECFM=FBA,DDNAME=SYSPRINT,LRECL=80
ZEILE    DS    0CL80
ASA      DC    C' '
DATA     DS    CL80
TEXT1    DC    C'FALSCHES KEYWORT ANGEGEBEN                           '
TEXT2    DC    C'UNIT(U) BITTE 3-STELLIG ANGEBEN                      '
TEXT3    DC    C'FALSCHES DISPLACEMENT(D) IM UCB ANGEGEBEN            '
TEXT4    DC    C'DER WERT(V) MUSS EINE GERADE ZAHL VON HEXZIFFERN SEIN'
TEXT5    DC    C'DISPLACEMENT(D) BITTE 2-STELLIG ANGEBEN              '
TEXT6    DC    C'DER WERT(V) IST BEGRENZT AUF 16 HEXZIFFERN PLUS TYP  '
TEXT7    DC    C'GUELTIGE OPCODES SIND NUR O(OR), A(AND), I(IMMEDIATE)'
TEXT8    DC    C'DAS ZU AENDERNDE FELD REICHT IN DEN NAECHSTEN UCB    '
TEXT9    DC    C'PARAMETERANGABEN FEHLEN (D,V)                        '
*
MEMNAME  DC    CL8' ',XL4'00',XL62'00'
BLDLLIST DC    H'1',H'76',CL8'IEANUC01'
TTRK     DC    XL4'00',XL2'00'
USERDATA DC    XL62'00'
OLDVAL   DS    XL16
SAVENTRY DS    XL16
UCBALT   DS    XL48
UCBNEU   DS    XL48
UNITFW   DC    C'    '
SAVUNIT  DS    XL3
HW       DS    H
MOVEOFF  DS    H
FRSTBYTE DS    H
LASTBYTE DS    H
*
RESTIND  DS    X
RESTOFF  DS    H
RESTLEN  DS    H
RESTVAL  DS    XL8
*
ENDUNIT  DS    H
MULTIPLE DC    X'00'
*
         LTORG
*
TABENTRY DSECT
UNIT     DS    CL3
OPCODE   DS    C
OFFSET   DS    H
LAENGE   DS    H
VALUE    DS    XL8
ENTRYLEN EQU   *-TABENTRY
*
UCB      CSECT
UNITTAB  DS    (&N)CL(ENTRYLEN)
BLOCK    DS    CL19069
*
         DCBD  DSORG=PO,DEVD=DA
         END
