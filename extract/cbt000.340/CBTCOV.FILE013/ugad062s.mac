SYSASM   TITLE 'SYSASM,ASHEGE  UMWANDLUNG UNTER TSO'
*
*** BESCHREIBUNG ***
*
*  DIESES PROGRAMM ERSETZT DEN IBM-ASSEMBLER-PROMPTER.
*  DURCH EINGABE DES COMMANDS ASM KANN EIN PROGRAMM IM FOREGROUND
*  UNTER TSO UMGEWANDELT WERDEN. DIE PROGRAMMLISTE KANN WAHLWEISE
*  AUF PAPIER, FICHE ODER BILDSCHIRM AUSGEGEBEN WERDEN.
*  DAS PROGRAMM IST REENTERABLE GESCHRIEBEN
*
*
*  R0
*  R1    WORK
*  R2    WORK
*  R3    WORK
*  R4    WORK
*  R5    WORK
*  R6    WORK
*  R7    WORK
*  R8    BASIS FUER DSECT DEFINITIONEN
*  R9    POINTER TO PDL  ANSWER AREA FOR PARSE
*  R10   POINTER TO DAPB  DAIR PARAMETER BLOCK
*  R11   POINTER TO CPPL  COMMAND PROCESSOR PARAMETER LIST
*  R12   BASIS
*  R13   BASIS
*  R14   SPRUNG
*  R15   RETURN
*
*
*
* FOLGENDE VARIABLEN SIND BEIM KOPIEREN DES COMMANDS ZU BEACHTEN.
*
* SOUR = NAME DES LIBRARIAN-DATASETS (SYS1.XXXXXXX).
*
*
* SYSLIB1 = NAME DES DATASETS, AUS DEM USER-PROGRAMME HINZUGELINKT
*           WERDEN SOLLEN (SYS1.XXXXXX). DIE LAENGE DES NAMENS
*           DARF NICHT VERAENDERT WERDEN.
*
* DER COMMAND-NAME IN DER PUNCH-KARTE AM ENDE DES PROGRAMMS
* MUSS GEAENDERT WERDEN.
*
         LCLC  &SOUR
&SOUR    SETC  'SYSSOUR'
         LCLC  &SYSLIB1
&SYSLIB1 SETC  'SYSLIB'
*
         EJECT
SYSASM   CSECT
         PRINT GEN
         GADBEGIN R12,R11,SAVE=RENT
         PRINT NOGEN
         SPACE
         LR    R7,R1                   ADRESSE VON CPPL
         USING CPPL,R7
         SPACE 3
         GETMAIN R,LV=LDEFIN,SP=1       DEFINITIONS-BEREICH
         LR    R2,R1                    LOESCHE DEFINITIONS-BEREICH
         LA    R3,LDEFIN
         SR    R5,R5
         MVCL  R2,R4
*
         LR    R8,R1                    ADRESSIERUNG DER DEFINITIONEN
         USING DEFIN,R8
*
* PRUEFUNG DER EINGABE DURCH PARSE-ROUTINE
*
         LA    R1,PARMLIST
         USING PPL,R1                   PARSE-PARAMETER-LIST AUFBAUERN
         MVC   PPLUPT,CPPLUPT           MIT USER-PROFILE-TABLE
         MVC   PPLECT,CPPLECT           MIT ENVIRONMENT-CONTROL-TABLE
         LA    R2,ECB
         ST    R2,PPLECB                MIT COMMAND-PROCESSOR-ECB
         MVC   PPLPCL,APCL              MIT PARAMETER-CONTROL-LIST
*                                           FUER IKJPARM (PARSE)
         LA    R2,ADDRPDL
         ST    R2,PPLANS                MIT ANSWER-AREA
         MVC   PPLCBUF,CPPLCBUF         MIT COMMAND-BUFFER
*                                       USER-WORK-AREA BLEIBT FREI
         SPACE
         LINK  EP=IKJPARS
         LTR   R15,R15
         BZ    PARSGOOD
         LA    R1,100(R15)              FEHLER IN PARSE-ROUTINE
         ABEND (R1)
         SPACE 2
PARSGOOD DS    0H
         LOAD  EP=IKJSTCK
         ST    R0,ASTACK
*
*
         L     R9,ADDRPDL               PARAMETER-DESCRIPTOR-LIST
         USING IKJPARMD,R9
*
* ALLOCATE THE LIBRARIAN MASTER-DATASET AND LOAD DAIR
*
         LA    R10,DAPB                 DAIR-PARAMETER-BLOCK
         USING DAPB08,R10               FOR ENTRY-CODE X'08'
         LOAD  EP=IKJDAIR               LADE DAIR
         ST    R0,ADAIR                 SICHERN ENTRY-POINT
         LA    R1,PARMLIST              COMPLETE DAIR-PARAMETER-LIST
         USING DAPL,R1
         MVC   DAPLPSCB,CPPLPSCB        PROTECTED-STEP-CONTROL-BLOCK
         ST    R10,DAPLDAPB
         XC    DAPB(L'DAPB),DAPB        CLEAR DAIR-PARAMETER-BLOCK
         MVI   DA08CD+1,X'08'           SET ENTRY-CODE 08
         LA    R2,DSNBUF                ADRESS OF DSN-BUFFER
         ST    R2,DA08PDSN
         MVC   DSN(L'DSN),=CL60' '      CLEAR DSN-BUFFER
         MVC   DSN(L'LIBSOUR+5),=C'SYS1.&SOUR' FILL IN DS-NAME
         LA    R2,L'LIBSOUR
         LA    R2,5(R2)
         STH   R2,DSNLEN
         MVC   DA08DDN,=C'MASTER  '     FILL IN DD-NAME
         MVC   DA08UNIT,BLANKS          SET UNIT TO BLANKS
         MVC   DA08SER,BLANKS           SET VOL-SER-NR TO BLANKS
         MVC   DA08MNM,BLANKS           SET MEMBER-NAME TO BLANKS
         MVI   DA08DSP1,DA08SHR         SET DISPOSITION
         MVI   DA08DPS2,DA08KEEP
         MVI   DA08DPS3,DA08KEEP
*
         L     R15,ADAIR
         BALR  R14,R15                  INVOKE DAIR
         LTR   R15,R15
         BZ    ALLOC10
         LA    R1,200(R15)              ALLOG SYS1.SYSSOUR FAILED
         ABEND (R1)
         SPACE 2
*
* ALLOCATE THE SYSOUT FROM LIBRARIAN WITH DD-NAME=SYSIN
*
ALLOC10  DS    0H
         LA    R10,DAPB                 DAIR-PARAMETER-BLOCK
         USING DAPB08,R10               FOR ENTRY-CODE X'08'
         LA    R1,PARMLIST
         USING DAPL,R1
         XC    DAPB(L'DAPB),DAPB        CLEAR DAIR-PARAMETER-BLOCK
         MVI   DA08CD+1,X'08'           SET ENTRY-CODE 08
         LA    R2,DSNBUF                ADRESS OF DSN-BUFFER
         ST    R2,DA08PDSN
         MVC   DSN(L'DSN),=CL60' '      CLEAR DSN-BUFFER
         MVC   DSN(08),=C'LIBR.ASM'     FILL IN DS-NAME
         MVI   DSNLEN+1,X'08'           FILL IN DS-NAME-LENGTH
         MVC   DA08DDN,=C'SYSIN   '     FILL IN DD-NAME
         MVC   DA08UNIT,=C'SYSNV   '    FILL IN UNIT-NAME
         MVC   DA08SER,BLANKS           SET VOL-SER-NR TO BLANKS
         MVC   DA08MNM,BLANKS           SET MEMBER-NAME TO BLANKS
         MVI   DA08DSP1,DA08NEW         SET DISPOSITION
         MVI   DA08DPS2,DA08DEL
         MVI   DA08DPS3,DA08DELE
         LA    R2,200
         ST    R2,DA08PQTY              FILL IN PRIMARY SPACE QUANTITY
         MVI   DA08CTL,DA08TRKS+DA08UID SPACE IS IN TRACKS
*
         L     R15,ADAIR
         BALR  R14,R15                  INVOKE DAIR
         LTR   R15,R15
         BZ    LIB10
         CH    R15,=H'20'     FILE IN USE
         BNE   ALLOC15
         MVC   WORKDD,=C'SYSIN   '
         MVI   WORKDISP,X'00'
         MVI   WORKCTL,X'10'
         BAL   R14,DEALLOC
         B     ALLOC10        GO TO ALLOCATE IT AGAIN
ALLOC15  DS    0H
         LA    R1,300(R15)              ALLOC LIBOUT FAILED
         ABEND (R1)
         SPACE 2
*
*  CALL LIBRARIAN AND FETCH THE MODULE
*
LIB10    DS    0H
         LH    R2,PMODNAME+4            GET LENGTH OF MODULE
         L     R3,PMODNAME              ADRESS OF MODUL-NAME
         ST    R2,FMODLN                STORE MODULE-LENGTH
         MVC   FMODNAME,BLANKS
         S     R2,=F'1'
         EX    R2,STOREM1               STORE MODULE
         LA    R2,1(R2)
         EX    R2,STOREM2               STORE MODULE
         L     R3,PMODPASS
         B     LIB20
*
*
STOREM1  MVC   FMODNAME(0),0(R3)
STOREM2  MVC   LIBPARM+2(0),0(R3)       STORE MODULE IN PARM
*
*
         SPACE
LIB20    DS    0H
*
* LOAD TSOFAIR
*
         LOAD  EP=TSOFAIR
         ST    R0,AFAIR
         LA    R1,AMASTOPN
         LR    R15,R0
         BALR  R14,R15                  GET ENTRYS OF OPEN,READ,ETC.
*
* OPEN THE MASTER UND SUCHE DAS GEWUENSCHTE MODUL
*
         XC    FAIRPARM(4),FAIRPARM
         LA    R2,OPFLAG
         ST    R2,FAIRPARM+4
         OI    FAIRPARM+4,X'80'
         LA    R1,FAIRPARM
         L     R15,AMASTOPN
         BALR  R14,R15
         NI    FAIRPARM+4,X'7F'
         CLI   OPFLAG,C'0'
         BE    OPENGOOD
         LA    R1,400(R15)
         ABEND (R1)
         SPACE
OPENGOOD DS    0H
         LA    R3,FMODNAME
         ST    R3,FAIRPARM
         LA    R3,MFLAG
         ST    R3,FAIRPARM+4
         LA    R3,MHAED
         ST    R3,FAIRPARM+8
         MVI   FAIRINC,C'1'
         LA    R3,FAIRINC
         ST    R3,FAIRPARM+12
         LA    R3,MJCL
         ST    R3,FAIRPARM+16
         OI    FAIRPARM+16,X'80'
         LA    R1,FAIRPARM
         L     R15,AMASTMOD
         BALR  R14,R15
         NI    FAIRPARM+16,X'7F'
         CLI   MFLAG,C'0'
         BE    MODGOOD
         L     R15,AMASTCLS
         BALR  R14,R15
         LA    R15,8                    NO SUCH MEMBER
         B     LIB25
*
MODGOOD  DS    0H
         L     R3,PMODPASS
         CLC   MHAED(4),0(R3)
         BE    PWGOOD
         L     R15,AMASTCLS
         BALR  R14,R15
         LA    R15,4                    PASSWORD WRONG
         B     LIB25
*
PWGOOD   DS    0H
*
* COPY THE  MODULE
*
         MVC   OUTDCB,COUTDCB
         MVC   WORK(1),OPENOUT
         OPEN OUTDCB,MF=(E,WORK)
         LA    R2,FAIRCARD
         ST    R2,FAIRPARM
         LA    R2,FAIRRET
         ST    R2,FAIRPARM+4
MASTRCD  DS    0H
         OI    FAIRPARM+4,X'80'
         LA    R1,FAIRPARM
         L     R15,AMASTRCD
         BALR  R14,R15
         NI    FAIRPARM+4,X'7F'
         CLI   FAIRRET,C'0'
         BE    PUT
         CLI   FAIRRET,C'1'
         BE    EOM
         LA    R1,200
         ABEND (R1)
         SPACE
PUT      DS    0H
         PUT   OUTDCB,FAIRCARD
         B     MASTRCD
         SPACE
*
EOM      DS    0H
         L     R15,AMASTCLS
         BALR  R14,R15
         MVC   WORK(1),CLOSE
         CLOSE OUTDCB,MF=(E,WORK)
         SPACE
         SR    R15,R15
*
LIB25    DS    0H
         ST    R15,LIBRCD
*
*
*  DEALLOCATE THE MASTER
*
         LA    R10,DAPB                 DAIR-PARAMETER-BLOCK
         USING DAPB18,R10               FOR ENTRY-CODE X'18'
         LA    R1,PARMLIST
         XC    DAPB(L'DAPB),DAPB        CLEAR DAIR-PARAMETER-BLOCK
         MVI   DA18CD+1,X'18'           SET ENTRY-CODE 18
         MVC   DA18DDN,=C'MASTER  '     FILL IN DD-NAME
         MVC   DA18MNM,BLANKS
         MVC   DA18SCLS,BLANKS
         MVI   DA18DPS2,DA18KEEP        SET DISPOSITION
         MVI   DA18CTL,DA18PERM         UNULLOCATE PERM. DATASET
*
         L     R15,ADAIR
         BALR  R14,R15                  INVOKE DAIR
         LTR   R15,R15
         BZ    LIB30
         LA    R1,500(R15)              DEALLOC OF MASTER FAILED
         ABEND (R1)
         SPACE 2
*
LIB30    DS    0H
         CLI   MLEVEL+3,X'00'
         BE    LIB35
         CLI   MLEVEL+3,X'01'
         BE    LIB35
         MVC   MSGBUF(L'MSG11),MSG11
         LA    R1,MSGBUF
         LA    R0,L'MSGBUF
         TPUT (R1),(R0)
         B     LIB55
*
LIB35    DS    0H
         MVC   MSGBUF(L'MSG1),MSG1      WRITE OUT THE LIBRARIAN-
         MVC   MSGBUF+27(1),LIBRCD+3    RETURN-CODE
         MVO   MSGBUF+26(2),MSGBUF+26(2)
         OC    MSGBUF+26(2),=X'F0F0'
         LA    R1,MSGBUF
         LA    R0,L'MSGBUF
         TPUT  (R1),(R0)
         SPACE
*
*
*  TEST RETURN-CODE OF LIBRARIAN
*
LIB40    DS    0H
         L     R15,LIBRCD               LOAD RETURN-CODE
         B     LIB50(R15)
LIB50    B     LIB80                    RETURN-CODE 0
         B     LIB70                    RETURN-CODE 4
         B     LIB60                    RETURN-CODE 8
*                                       RETURN-CODE 12 OR GREATER
         MVC   MSGBUF,=CL60' '
         MVC   MSGBUF(L'MSG2),MSG2
         LA    R1,MSGBUF
         LA    R0,L'MSGBUF
         TPUT  (R1),(R0)                DISPLAY CATASTROPHIC ERROR
*
LIB55    LA    R10,DAPB                 DAIR-PARAMETER-BLOCK
         USING DAPB18,R10               DEALLOCATE LIB-SYSOUT
         XC    DAPB(L'DAPB),DAPB
         MVI   DA18CD+1,X'18'           SET ENTRY-CODE X'18'
         MVC   DA18DDN,=C'SYSIN   '     FILL IN DDNAME
         MVC   DA18MNM,BLANKS
         MVC   DA18SCLS,BLANKS
         MVI   DA18DPS2,DA18DEL         SET DISPOSITION
*
         LA    R1,PARMLIST
         L     R15,ADAIR
         BALR  R14,R15                  INVOKE DAIR
         LTR   R15,R15
         BZ    EXIT
         LA    R1,600(R15)              DEALLOC OF LIB-SYSOUT FAILED
         ABEND (R1)
         SPACE 2
*
*
LIB60    DS    0H
         MVC   MSGBUF,=CL60' '
         MVC   MSGBUF(L'MSG3),MSG3
         LA    R1,MSGBUF
         LA    R0,L'MSGBUF
         TPUT  (R1),(R0)                DISPLAY NO SUCH MEMBER
         B     LIB55                    GO TO DEALLOC DATASETS AND EXIT
         SPACE 2
*
*
LIB70    DS    0H
         MVC   MSGBUF,=CL60' '
         MVC   MSGBUF(L'MSG4),MSG4
         LA    R1,MSGBUF
         LA    R0,L'MSGBUF
         TPUT  (R1),(R0)                DISPLAY PASSWORD WRONG
         B     LIB55                    GO TO DEALLOC DATASETS AND EXIT
         SPACE 2
*
*
LIB80    DS    0H                       RCD FROM LIBRARIAN IS 0
         SPACE 2
         SPACE 2
*
*
ASM10    DS    0H                       DO ALLOC FOR ASSEMBLY
         LA    R10,DAPB
         USING DAPB08,R10               ALLOC SYSUT1
         XC    DAPB(L'DAPB),DAPB
         MVI   DA08CD+1,X'08'           SET ENTRY-CODE X'08'
         MVC   DA08MNM,BLANKS
         MVC   DA08DDN,=C'SYSUT1  '     FILL IN DD-NAME
         MVC   DA08UNIT,=C'SYSNV   '    FILL IN UNIT-NAME
         MVC   DA08SER,BLANKS
         LA    R2,DSNBUF
         ST    R2,DA08PDSN
         MVC   DSN(L'DSN),=CL60' '
         MVC   DSN(7),=C'&&SYSUT1 '
         MVI   DSNLEN+1,X'07'
         LA    R2,10
         ST    R2,DA08PQTY              FILL IN SPACE-VALUE
         LA    R2,50
         ST    R2,DA08SQTY
         MVI   DA08DSP1,DA08NEW         SET DISPOSITION
         MVI   DA08DPS2,DA08DEL
         MVI   DA08DPS3,DA08DELE
         MVI   DA08CTL,DA08TRKS         SPACE ARE TRACKS
         LA    R1,PARMLIST
*
         L     R15,ADAIR
         BALR  R14,R15                  INVOKE DAIR
         LTR   R15,R15
         BZ    ASM20
         CH    R15,=H'20'
         BNE   ASM15          FILE IN USE
         MVC   WORKDD,=C'SYSUT1  '
         MVI   WORKDISP,DA18DEL
         MVI   WORKCTL,X'10'
         BAL   R14,DEALLOC
         B     ASM10          GO TO ALLOCATE IST AGAIN
ASM15    DS    0H
         LA    R1,700(R15)              ALLOC OF SYSUT1 FAILED
         ABEND (R1)
         SPACE 2
*
ASM20    DS    0H
         CLC   MJCL+322(3),=C'COB'
         BE    ASM50
         CLC   MJCL+322(3),=C'PLI'
         BE    ASM50
         XC    DAPB(L'DAPB),DAPB
         MVI   DA08CD+1,X'08'           ALLOC SYSLIB/GADMAC
         MVC   DSN(L'DSN),=CL60' '
         MVC   DSN(11),=C'SYS1.GADMAC'      FILL IN DS-NAME
         MVI   DSNLEN+1,X'0B'           FILL IN DS-NAME-LENGTH
         LA    R2,DSNBUF
         ST    R2,DA08PDSN              FILL IN ADRESS OF DS-NAME-BUF
         MVC   DA08DDN,=C'SYSLIB  '     FILL IN DDNAME
         MVC   DA08UNIT,BLANKS
         MVC   DA08SER,BLANKS
         MVC   DA08MNM,BLANKS
         MVI   DA08DSP1,DA08SHR         SET DISPOSITION
         MVI   DA08DPS2,DA08KEEP
         MVI   DA08DPS3,DA08KEP
         LA    R1,PARMLIST
*
         L     R15,ADAIR
         BALR  R14,R15                  INVOKE DAIR
         LTR   R15,R15
         BZ    ASM30
         CH    R15,=H'12'     FILE IN USE
         BNE   ASM25
         MVC   WORKDD,=C'SYSLIB  '
         MVI   WORKDISP,DA18KEEP
         BAL   R14,DEALLOC
         B     ASM20
ASM25    DS    0H
         LA    R1,800(R15)              ALLOC OF SYSLIB FAILED
         ABEND (R1)
         SPACE 2
*
ASM30    DS    0H
         XC    DAPB(L'DAPB),DAPB
         MVI   DA08CD+1,X'08'           ALLOC SYSLIB/MACLIB
         MVC   DSN(11),=C'SYS1.MACLIB'      FILL IN DS-NAME
         LA    R2,DSNBUF
         ST    R2,DA08PDSN              FILL IN ADRESS OF DS-NAME-BUF
         MVC   DA08DDN,=C'SYSLIB1 '     FILL IN DDNAME
         MVC   DA08UNIT,BLANKS
         MVC   DA08SER,BLANKS
         MVC   DA08MNM,BLANKS
         MVI   DA08DSP1,DA08SHR         SET DISPOSITION
         MVI   DA08DPS2,DA08KEEP
         MVI   DA08DPS3,DA08KEP
         LA    R1,PARMLIST
*
         L     R15,ADAIR
         BALR  R14,R15                  INVOKE DAIR
         LTR   R15,R15
         BZ    ASM40
         CH    R15,=H'20'
         BNE   ASM35
         MVC   WORKDD,=C'SYSLIB1 '
         MVI   WORKDISP,DA18KEEP
         BAL   R14,DEALLOC
         B     ASM30
ASM35    DS    0H
         LA    R1,900(R15)              ALLOC OF SYSLIB1/MACLIB FAILED
         ABEND (R1)
         SPACE 2
*
ASM40    DS    0H
         XC    DAPB(L'DAPB),DAPB
         USING DAPB0C,R10               CONCATENATE GADMAC AND MACLIB
         MVI   DA0CCD+1,X'0C'             SET ENTRY-CODE X'0C'
         MVI   DA0CNUMB+1,X'02'         NR OF DATASETS
         MVC   DA0CDDN,=C'SYSLIB  '     FILL IN FIRST DD-NAME
         MVC   DA0CDDN+8(8),=C'SYSLIB1 ' FILL IN SECOND DD-NAME
         LA    R1,PARMLIST
*
         L     R15,ADAIR
         BALR  R14,R15                  INVOKE DAIR
         LTR   R15,R15
         BZ    ASM50
         LA    R1,1000(R15)             CONCATENATION FAILED
         ABEND (R1)
         SPACE 2
*
ASM50    DS    0H
         USING DAPB08,R10               ALLOC SYSLIN / ASM.DATA
         XC    DAPB(L'DAPB),DAPB
         MVI   DA08CD+1,X'08'           SET ENTRY-CODE X'08'
         MVC   DSN(L'DSN),=CL60' '
         MVC   DSN(8),=C'ASM.DATA'         FILL IN DS-NAME
         MVI   DSNLEN+1,X'08'           FILL IN DS-NAME-LENGTH
         LA    R2,DSNBUF
         ST    R2,DA08PDSN              FILL IN ADRESS OF DS-NAME-BUF
         MVC   DA08DDN,=C'SYSLIN  '     FILL IN DDNAME
         MVC   DA08UNIT,=C'SYSNV   '    FILL IN UNIT-NAME
         MVC   DA08SER,BLANKS
         MVC   DA08MNM,BLANKS
         LA    R2,50
         ST    R2,DA08PQTY              FILL IN SPACE-VALUE
         ST    R2,DA08SQTY
         MVI   DA08DSP1,DA08NEW         SET DISPOSITION
         MVI   DA08DPS2,DA08DEL
         MVI   DA08DPS3,DA08DELE
         MVI   DA08CTL,DA08TRKS+DA08UID SPACE ARE TRACKS
         LA    R1,PARMLIST
*
         L     R15,ADAIR
         BALR  R14,R15                  INVOKE DAIR
         LTR   R15,R15
         BZ    ASM60
         CH    R15,=H'20'
         BNE   ASM55
         MVC   WORKDD,=C'SYSLIN  '
         MVI   WORKDISP,DA18DEL
         BAL   R14,DEALLOC
         B     ASM50
ASM55    DS    0H
         LA    R1,1100(R15)              ALLOC OF SYSLIN FAILED
         ABEND (R1)
         SPACE 2
ASM60    DS    0H
*
* BUILD THE ATRIBUTE-LIST FOR SYSPRINT
*
ATR10    DS    0H
         LA    R10,ACB
         XC    ACB(L'ACB),ACB
         LA    R2,121
         STH   R2,40(R10)
         L     R2,=F'4840'
         STH   R2,38(R10)
         MVI   36(R10),B'10010010'
         LA    R10,DAPB
         XC    DAPB(L'DAPB),DAPB
         USING DAPB34,R10
         MVI   DA34CD+1,X'34'
         MVC   DA34NAME,=C'PRINTACB'
         LA    R2,ACB
         ST    R2,DA34ADDR
         MVI   DA34CTRL,DA34CHN
         LA    R1,PARMLIST
*
         L     R15,ADAIR
         BALR  R14,R15
         LTR   R15,R15
         BZ    ATR50
         CH    R15,=H'20'
         BNE   ATR40
         LA    R10,DAPB
         USING DAPB34,R10
         MVI   DA34CD+1,X'34'
         MVC   DA34NAME,=C'PRINTACB'
         LA    R3,ACB
         ST    R3,DA34ADDR
         MVI   DA34CTRL,DA34UNCH
         LA    R1,PARMLIST
*
         L     R15,ADAIR
         BALR  R14,R15
         LTR   R15,R15
         BZ    ATR10
*
ATR40    DS    0H
         LA    R1,1200(R15)
         ABEND (R1)
         SPACE
ATR50    DS    0H
*
* LOOK, IF THERE IS ALREADY A XXX.ASM.ASM. IN THE CATALOG
*
         LA    R10,DAPB
         XC    DAPB(L'DAPB),DAPB
         USING DAPB04,R10
         MVI   DA04CD+1,X'04'
         MVC   DSN(L'DSN),=CL60' '
         MVC   DSN(7),=C'ASM.ASM'
         MVI   DSNLEN+1,X'07'
         LA    R2,DSNBUF
         ST    R2,DA04PDSN
         MVI   DA04CTL,DA04UID
         LA    R1,PARMLIST
         L     R15,ADAIR
         BALR  R14,R15
         LTR   R15,R15
         BZ    ASM64
         CH    R15,=H'08'
         BE    ASM66
         LA    R1,1300(R15)
         ABEND (R1)
         SPACE
ASM64    DS    0H
         TM    DA04FLG,X'02'   DATA-SET IS ALLOCATED
         BO    ASM65
         TM    DA04FLG,X'04'
         BNO   ASM66          DATA-SET IS NOT IN CATALOG
*
* ALLOCATE AND DELETE IT
*
         XC    DAPB(L'DAPB),DAPB
         USING DAPB08,R10
         MVI   DA08CD+1,X'08'
         LA    R2,DSNBUF
         ST    R2,DA08PDSN
         MVC   DA08DDN,BLANKS
         MVC   DA08UNIT,BLANKS
         MVC   DA08SER,BLANKS
         MVC   DA08MNM,BLANKS
         MVI   DA08DSP1,DA08OLD
         MVI   DA08DPS2,DA08DEL
         MVI   DA08DPS3,DA08DELE
         MVI   DA08CTL,DA08UID
         LA    R1,PARMLIST
*
         L     R15,ADAIR
         BALR  R14,R15
         LTR   R15,R15
         BZ    ASM65
         SPACE
         LA    R1,1400(R15)
         ABEND (R1)
         SPACE
ASM65    DS    0H
         MVC   DSN(7),=C'ASM.ASM'
         MVI   DSNLEN+1,X'07'
         MVI   WORKCTL,DA18UID
         MVI   WORKDISP,DA18DEL
         BAL   R14,DEALDSN
*
ASM66    DS    0H
         LA    R10,DAPB
         XC    DAPB(L'DAPB),DAPB
         USING DAPB08,R10               ALLOC SYSPRINT / ASM.ASM
         MVI   DA08CD+1,X'08'
         MVC   DSN(7),=C'ASM.ASM'         FILL IN DS-NAME
         MVI   DSNLEN+1,X'07'
         LA    R2,DSNBUF
         ST    R2,DA08PDSN              ADRESS OF DS-NAME-BUFFER
         CLC   MJCL+322(3),=C'PLI'
         BNE   ASM66A
         MVC   DA08DDN,=C'OUTSQ1  '
         B     ASM66B
ASM66A   DS    0H
         MVC   DA08DDN,=C'SYSPRINT'     FILL IN DD-NAME
ASM66B   DS    0H
         MVC   DA08UNIT,=C'SYSNV   '    FILL IN UNIT-NAME
         MVC   DA08MNM,BLANKS
         MVC   DA08SER,BLANKS
         LA    R2,50
         ST    R2,DA08PQTY              FILL IN SPACE-VALUE
         ST    R2,DA08SQTY
         MVI   DA08DSP1,DA08MOD         SET DISPOSITION
         MVI   DA08DPS2,DA08CAT
         MVI   DA08DPS3,DA08DELE
         MVI   DA08CTL,DA08TRKS+DA08UID+DA08RLSE+DA08ATRL
         MVC   DA08ALN,=C'PRINTACB'
         LA    R1,PARMLIST
*
         L     R15,ADAIR
         BALR  R14,R15                  INVOKE DAIR
         LTR   R15,R15
         BZ    ASM70
         CH    R15,=H'20'
         BNE   ASM67
         MVC   WORKDD,=C'SYSPRINT'
         MVI   WORKDISP,X'10'
         MVI   WORKCTL,X'10'
         BAL   R14,DEALLOC
         B     ASM66
ASM67    DS    0H
         LA    R1,1500(R15)              ALLOC OF SYSPRINT FAILD
         ABEND (R1)
         SPACE 2
*
ASM70    DS    0H
         SPACE 2
*
ASM80    DS    0H
         CLC   MJCL+322(3),=C'COB'
         BE    COB10
         CLC   MJCL+322(3),=C'PLI'
         BE    PLI10
         LA    R3,ASMPARM
         ST    R3,AASMPARM
         MVI   AASMPARM,X'80'
         LA    R1,AASMPARM               LOAD ADRESS OF PARM
         LINK  EP=IEV90       INVOKE THE ASSEMBLER
         SPACE 2
         ST    R15,ASMRCD               STORE RETURN-CODE
*
         MVC   MSGBUF,=CL60' '
         MVC   MSGBUF(L'MSG5),MSG5      DISPLAY THE ASSEMBLER-RETURN-CD
ASM83    DS    0H
         MVC   MSGBUF+27(1),ASMRCD+3
         MVO   MSGBUF+26(2),MSGBUF+26(2)
         OC    MSGBUF+26(2),=X'F0F0'
         TM    MSGBUF+27,X'0C'
         BNO   ASM85
         MVI   MSGBUF+27,C'C'
ASM85    DS    0H
         TM    ASMRCD+3,X'C0'
         BNO   ASM86
         MVI   MSGBUF+26,C'C'
ASM86    DS    0H
         LA    R1,MSGBUF
         LA    R0,L'MSGBUF
         TPUT  (R1),(R0)
         SPACE
         CLC   MJCL+322(3),=C'COB'
         BE    COB20
*
*  FREE SYSUT1,SYSLIB,SYSIN,
*
         LA    R10,DAPB
         USING DAPB18,R10
         XC    DAPB(L'DAPB),DAPB
         MVI   DA18CD+1,X'18'           SET ENTRY-CODE X'18'
         MVC   DA18MNM,BLANKS
         MVI   DA18DPS2,DA18DEL
         MVC   DA18DDN,=C'SYSUT1  '     FILL IN DD-NAME
         LA    R1,PARMLIST
*
         L     R15,ADAIR
         BALR  R14,R15                  INVOKE DAIR
         LTR   R15,R15
         BZ    ASM90
         LA    R1,1600(R15)             DEALLOC OF SYSUT1 FAILED
         ABEND (R1)
         SPACE
*
ASM90    DS    0H
         CLC   MJCL+322(3),=C'PLI'
         BE    ASM110
         MVC   DA18DDN,=C'SYSLIB  '     FILL IN DD-NAME
         MVI   DA18DPS2,DA18KEEP
         L     R15,ADAIR
         BALR  R14,R15
         LTR   R15,R15
         BZ    ASM100
         LA    R1,1700(R15)             DEALLOC OF SYSLIB FAILED
         ABEND (R1)
         SPACE
*
ASM100   DS    0H
         MVC   DA18DDN,=C'SYSLIB1 '     FILL IN DD-NAME
         MVI   DA18DPS2,DA18KEEP
         L     R15,ADAIR
         BALR  R14,R15
         LTR   R15,R15
         BZ    ASM110
         LA    R1,1800(R15)             DEALLOC OF SYSLIB1 FAILED
         ABEND (R1)
         SPACE
*
ASM110   DS    0H
         MVC   DA18DDN,=C'SYSIN   '     FILL IN DD-NAME
         MVI   DA18DPS2,DA18DEL
         L     R15,ADAIR
         BALR  R14,R15
         LTR   R15,R15
         BZ    ASM120
         LA    R1,1900(R15)             DEALLOC OF SYSIN FAILED
         ABEND (R1)
         SPACE
*
ASM120   DS    0H
         SPACE 2
*
* ASSEMBLY IS DONE, ASK FOR LIST AND LINK
*
ASM130   DS    0H
         CLI   ASMRCD+3,X'04'
         BH    LIST10         ASK FOR LISTING
         CLI   PMODLNK+1,X'01'
         BNE   LNK10          USER WANTS LINK
         MVI   WORKCTL,X'00'
         MVI   WORKDISP,DA18DEL
         MVC   WORKDD,=C'SYSLIN  '
         BAL   R14,DEALLOC
         B     LIST10         USER WANTS NO LINK
*
*
*
LNK10    DS    0H
*
*  ALLOCATE FOR LINK
*
         MVC   WORKMNM,BLANKS
*
         MVC   DSN(13),=C'SYS1.SYSOSLIB'
         MVI   DSNLEN+1,X'0D'
         MVC   WORKDD,=C'SYSLIB  '
         BAL   R14,ALLIB
         CLC   MJCL+322(3),=C'PLI'
         BE    LNK20
*
         MVC   DSN(40),=CL60' '
         MVC   DSN(11),=C'SYS1.&SYSLIB1'
         MVI   DSNLEN+1,X'0B'
         MVC   WORKDD,=C'SYSLIB1 '
         BAL   R14,ALLIB
*
         MVC   DSN(13),=C'SYS1.TELCMLIB'
         MVI   DSNLEN+1,X'0D'
         MVC   WORKDD,=C'SYSLIB2 '
         BAL   R14,ALLIB
*
*   CONCATENATE THE SYSLIBS
*
         LA    R10,DAPB
         USING DAPB0C,R10
         XC    DAPB(L'DAPB),DAPB
         MVI DA0CCD+1,X'0C'
         MVI   DA0CNUMB+1,X'03'      NUMBER OF DATASETS
         MVC   DA0CDDN,=C'SYSLIB  '
         MVC   DA0CDDN1,=C'SYSLIB1 '
         MVC   DA0CDDN2,=C'SYSLIB2 '
         LA    R1,PARMLIST
         L     R15,ADAIR
         BALR  R14,R15
         LTR   R15,R15
         BZ    LNK20
         LA    R1,2000(R15)
         ABEND (R1)
         SPACE 2
LNK20    DS    0H
         LA    R10,DAPB       ALLOC SYSUT1
         USING DAPB08,R10
         XC    DAPB(L'DAPB),DAPB
         MVI   DA08CD+1,X'08'
         MVC   DA08MNM,BLANKS
         MVC   DA08DDN,=C'SYSUT1  '
         MVC   DA08UNIT,=C'SYSNV   '
         MVC   DA08SER,BLANKS
         LA    R2,DSNBUF
         ST    R2,DA08PDSN
         MVC   DSN(L'DSN),=CL60' '
         MVC   DSN(7),=C'&&SYSUT1 '
         MVI   DSNLEN+1,X'07'
         LA    R2,10
         ST    R2,DA08PQTY
         ST    R2,DA08SQTY
         MVI   DA08DSP1,DA08NEW
         MVI   DA08DPS2,DA08DEL
         MVI   DA08DPS3,DA08DELE
         MVI   DA08CTL,DA08TRKS
         LA    R1,PARMLIST
*
         L     R15,ADAIR
         BALR R14,R15
         LTR   R15,R15
         BZ    LNK30
         LA    R1,2100(R15)
         ABEND (R1)
         SPACE
*
LNK30    DS    0H
         MVC   DSN(L'DSN),=CL60' '
         CLC   FMODNAME(4),=C'FCB2'
         BNE   LNK31
         MVC   DSNLEN(15),LIBTABIM
         B     LNK40
LNK31    LA    R4,LIBTAB
         CLC   MDSN,=CL60' '              NO DS-NAME SPECIFIED
         BNE   LNK35
LNK32    MVC   DSNLEN(15),0(R4)     SET DEFAULT FIRST LIBRARY
         B     LNK40
LNK35    DS    0H
         CLC   MDSN(13),2(R4)
         BE    LNK32
         CLC   0(3,R4),=C'***'
         BE    LNK38
         LA    R4,16(R4)
         B     LNK35
LNK38    LA    R4,LIBTAB
         B     LNK32
LNK40    DS    0H
*
         MVC   WORKMNM,FMODNAME   ALLOC SYSLMOD
         MVC   WORKDD,=C'SYSLMOD '
         BAL   R14,ALLIB
         MVC   WORKMNM,BLANKS
         MVC   WORKDSN(19),DSN
*
*  COMPLETE LINK-PARAMETER AND CALL THE LINKAGE-EDITOR
*
         LA    R2,MPROC
         LA    R3,45
LNK45    CLC   0(10,R2),=C'PARM.LKED='
         BE    LNK54
         LA    R2,1(R2)
         BCT   R3,LNK45
*
         LA    R2,MPROC2
         LA    R3,45
LNK50    CLC   0(10,R2),=C'PARM.LKED='
         BE    LNK54
         LA    R2,1(R2)
         BCT   R3,LNK50
         MVC   LNKPARM(15),LNKPARMK
         LA    R4,LNKPARM
         B     LNK60
*
LNK54    DS    0H
         LA    R2,11(R2)
         LR    R4,R2
         SR    R5,R5
         LA    R3,45
LNK55    CLI   0(R2),X'7D'
         BE    LNK57
         LA    R2,1(R2)
         LA    R5,1(R5)
         BCT   R3,LNK55
*
LNK57    DS    0H
         STC   R5,LNKPARM+1
         S     R5,=F'1'
         EX    R5,LNKMOVE
         LA    R4,LNKPARM
         B     LNK60
*
LNKMOVE  MVC   LNKPARM+2(1),0(R4)
*
LNK60    ST    R4,ALNKPARM
         SR    R2,R2
         LH    R2,LNKPARM
         LA    R3,LNKPARM+2
         AR    R3,R2
         MVC   0(16,R3),LNKPRMK2
         LA    R2,16(R2)
         STC   R2,LNKPARM+1
         MVI   ALNKPARM,X'80'
         LA    R1,ALNKPARM
*
         LINK  EP=IEWL,MF=(E,(R1))
         SPACE
         ST    R15,LNKRCD
*
*  DEALLOCATE MOST OF THE LINK-DATASETS
*
         MVI   WORKCTL,X'00'
         MVC   WORKDD,=C'SYSUT1  '
         MVI   WORKDISP,DA18DEL
         BAL   R14,DEALLOC
*
         MVC   WORKDD,=C'SYSLIB  '
         MVI   WORKDISP,DA18KEEP
         BAL   R14,DEALLOC
         CLC   MJCL+322(3),=C'PLI'
         BE    LNK62
*
         MVC   WORKDD,=C'SYSLIB1 '
         MVI   WORKDISP,DA18KEEP
         BAL   R14,DEALLOC
*
         MVC   WORKDD,=C'SYSLIB2 '
         MVI   WORKDISP,DA18KEEP
         BAL   R14,DEALLOC
*
LNK62    DS    0H
         MVC   WORKDD,=C'SYSLIN  '
         MVI   WORKDISP,DA18DEL
         BAL   R14,DEALLOC
*
         MVC   WORKDD,=C'SYSLMOD '
         MVI   WORKDISP,DA18KEEP
         BAL   R14,DEALLOC
*
*  WRITE OUT THE LINK-RETURN-CODE
*
         MVC   MSGBUF,=CL60' '
         MVC   MSGBUF(L'MSG8),MSG8
         MVC   MSGBUF+27(1),LNKRCD+3
         MVO   MSGBUF+26(2),MSGBUF+26(2)
         OC    MSGBUF+26(2),=X'F0F0'
         TM    MSGBUF+27,X'0C'
         BNO   LNK65
         MVI   MSGBUF+27,C'C'
LNK65    DS    0H
         LA    R1,MSGBUF
         LA    R0,L'MSGBUF
         TPUT  (R1),(R0)
*
* DISPLAY LINK-LIBRARY END PARAMETERS
*
         MVC   MSGBUF(L'MSGBUF),=CL60' '
         MVC   MSGBUF(L'MSG9),MSG9
         MVC   MSGBUF+21(19),WORKDSN
         LA    R1,MSGBUF
         LA    R0,L'MSGBUF
         TPUT  (R1),(R0)
*
         MVC   MSGBUF(L'MSGBUF),=CL60' '
         MVC   MSGBUF(L'MSG10),MSG10
         MVC   MSGBUF+21(39),LNKPARM+2
         LA    R1,MSGBUF
         LA    R0,L'MSGBUF
         TPUT  (R1),(R0)
*
LIST10   DS    0H
         CLI   PMODOUT+1,X'01'
         BE    FICH05                   USER WANTS FICHE-OUTPUT
         CLI   MLEVEL+3,X'01'
         BNE   LIST20
*
* PROD-1 MODULES ARE AUTOMATICALLY FICHED.
*
* BUILD THE ATTRIBUTE-LIST FOR FICH-SYSOUT
*
FICH05   DS    0H
         LA    R10,ACB
         XC    ACB(L'ACB),ACB
         LA    R3,121
         STH   R3,40(R10)
         LA    R3,3993
         STH   R3,38(R10)
         MVI   36(R10),B'10010000'
         LA    R10,DAPB
         XC    DAPB(L'DAPB),DAPB
         USING DAPB34,R10
         MVI   DA34CD+1,X'34'
         MVC   DA34NAME,=C'FICHEACB'
         LA    R3,ACB
         ST    R3,DA34ADDR
         MVI   DA34CTRL,DA34CHN
         LA    R1,PARMLIST
*
         L     R15,ADAIR
         BALR  R14,R15
         LTR   R15,R15
         BZ    FICH10
         LA    R1,2200(R15)
         ABEND (R1)
         SPACE
FICH10   DS    0H
*
* ALLOCATE THE SYSOUT FOR FICH
*
         LA    R10,DAPB
         XC    DAPB(L'DAPB),DAPB
         USING DAPB30,R10
         MVI   DA30CD+1,X'30'
         MVC   DA30DDN,=C'OUTSQ1  '
         MVC   DA30UNIT,BLANKS
         MVC   DA30SER,BLANKS
         LA    R2,10
         ST    R2,DA30PQTY
         LA    R2,100
         ST    R2,DA30SQTY
         MVC   DA30PGNM,BLANKS
         MVC   DA30FORM,BLANKS
         MVC   DA30OCLS,=C'F '
         MVI   DA30CTL,DA30TRKS+DA30ATRL
         MVC   DA30ALN,=C'FICHEACB'
         LA    R1,PARMLIST
         L     R15,ADAIR
         BALR  R14,R15
         LTR   R15,R15
         BZ    FICH20
         LA    R1,2300(R15)
         ABEND (R1)
         SPACE
FICH20   DS    0H
*
* MOVE THE LIST TO FICH-SYSOUT
*
         MVC   INP,KINP
         MVC   OUT,KOUT
         MVC   WORK(1),OPENIN
         OPEN  INP,MF=(E,WORK)
         MVC   WORK(1),OPENOUT
         OPEN  OUT,MF=(E,WORK)
*
FICH30   DS    0H
         GET   INP
         LR    R2,R1
         PUT   OUT,(R2)
         B     FICH30
*
FICH40   DS    0H
         MVC   WORK(1),CLOSE
         CLOSE INP,MF=(E,WORK)
         CLOSE OUT,MF=(E,WORK)
*
* FREE THE FICH-SYSOUT
*
         LA    R10,DAPB
         USING DAPB18,R10
         XC    DAPB(L'DAPB),DAPB
         MVI   DA18CD+1,X'18'
         MVC   DA18DDN,=C'OUTSQ1  '
         MVC   DA18MNM,BLANKS
         MVC   DA18SCLS,=C'F '
         MVC   DA18JBNM,BLANKS
         LA    R1,PARMLIST
*
         L     R15,ADAIR
         BALR  R14,R15
         LTR   R15,R15
         BZ    FICH50
         LA    R1,2400(R15)
         ABEND (R1)
         SPACE
FICH50   DS    0H
         XC    DAPB(L'DAPB),DAPB
         USING DAPB34,R10
         MVI   DA34CD+1,X'34'
         MVC   DA34NAME,=C'FICHEACB'
         LA    R3,ACB
         ST    R3,DA34ADDR
         MVI   DA34CTRL,DA34UNCH
         LA    R1,PARMLIST
*
         L     R15,ADAIR
         BALR  R14,R15
         LTR   R15,R15
         BZ    FICH60
         LA    R1,2500(R15)
         ABEND (R1)
         SPACE
FICH60   DS    0H
         LA    R1,MSG12
         LA    R0,L'MSG12
         TPUT  (R1),(R0)
         SPACE
*
LIST20   DS    0H
         CLI   PMODLOOK+1,X'01'
         BE    LIST30                   USER WANTS NOLOOK
         MVC   MSGBUF,=CL60' '
         MVC   MSGBUF(L'MSG6),MSG6      ASK FOR LISTING
         LA    R1,MSGBUF
         LA    R0,L'MSGBUF
         TPUT  (R1),(R0)
         SPACE 2
         LA    R0,L'INBUF
         LA    R1,INBUF
         TGET  (R1),(R0)
         OC    INBUF(2),BLANKS           READ THE ANSWER
         SPACE
*
* ERSTELLUNG VON STACK-PARAMETER-BLOCK, LIST-SOURCE-DESCRIPTOR
* UND IN-STORAGE-LIST FUER EDIT DER ASM-LISTE.
*
LIST30   DS    0H
*
* FREE THE ATRIBUTE-LIST AND SYSPRINT
*
         LA    R10,DAPB
         USING DAPB34,R10
         XC    DAPB(L'DAPB),DAPB
         MVI   DA34CD+1,X'34'
         MVC   DA34NAME,=C'PRINTACB'
         LA    R3,ACB
         ST    R3,DA34ADDR
         MVI   DA34CTRL,DA34UNCH
         LA    R1,PARMLIST
*
         L     R15,ADAIR
         BALR  R14,R15
         LTR   R15,R15
         BZ    LIST32
         LA    R1,2600(R15)
         ABEND (R1)
         SPACE
LIST32   DS    0H
         LA    R10,DAPB
         USING DAPB18,R10
         XC    DAPB(L'DAPB),DAPB
         MVI   DA18CD+1,X'18'
         LA    R2,DSNBUF
         ST    R2,DA18PDSN
         MVC   DSN(L'DSN),=CL60' '
         MVC   DSN(7),=C'ASM.ASM'
         MVI   DSNLEN+1,X'07'
         MVC   DA18DDN,=C'SYSPRINT'
         MVC   DA18MNM,BLANKS
         MVI   DA18DPS2,DA18CAT
         MVI   DA18CTL,DA18UID
         LA    R1,PARMLIST
         L     R15,ADAIR
         BALR  R14,R15
         LTR   R15,R15
         BZ    LIST35
         LA    R1,2700(R15)
         ABEND (R1)
         SPACE
LIST35   DS    0H
*
*
         L     R3,CPPLUPT
         L     R4,CPPLECT
         CLI   PMODLOOK+1,X'01'
         BE    LIST37                   USER WANTS NOLOOK
*
         CLC   INBUF(2),=C'OK'
         BE    LIST40
*
* USER WANTS NOT SEE THE ASM-LIST
*
LIST37   DS    0H
         CLI   PMODLIST+1,X'01'
         BE    EXIT                     USER WANTS NOLIST
         GETMAIN R,LV=LLSD2,SP=78
         LR    R5,R1
*
         GETMAIN R,LV=LINLIST2,SP=78
         LR    R6,R1
         MVC   0(16,R5),ANLSD2
         ST    R6,0(R5)
         ST    R6,8(R5)
         MVC   0(LINLIST2,R6),INLIST2
         B     LIST50
*
LIST40   DS    0H             USER WANTS TO SEE THE LIST
         GETMAIN R,LV=LLSD,SP=78
*
         LR    R5,R1
         GETMAIN R,LV=LINLIST,SP=78
*
         LR    R6,R1
         MVC   0(16,R5),ANLSD
         ST    R6,0(R5)
         ST    R6,8(R5)
         MVC   0(LINLIST,R6),INLIST
         LA    R2,CPPLPSCB
         L     R2,0(R2)
         MVC   10(3,R6),0(R2)  COMPLETE DSN WITH UID
LIST50   DS    0H
         CLC   MJCL+322(3),=C'ASM'
         BE    LIST60
         CLC   MJCL+322(3),=C'PLI'
         BNE   LIST55
         MVC   66(5,R6),=C'MESSA'
         B     LIST60
*
LIST55   DS    0H
         MVC   49(23,R6),=CL23'V'
LIST60   DS    0H
         MVC   STCKPRM,STCKLST
         L     R15,ASTACK     LOAD ENTRY-POINT OF STACK-ROUTINE
*
         STACK PARM=STCKPRM,UPT=(R3),ECT=(R4),ECB=ECB,                 *
               STORAGE=((R5),PROCN),MF=(E,IOPL),ENTRY=(15)
         LTR   R15,R15
         BZ    ASM140
         LA    R1,2800(R15)   STACK-ROUTINE FAILED
         ABEND (R1)
         SPACE 2
ASM140   DS    0H
         SPACE
*
EXIT     DS    0H
*
         LR    R1,R8
         FREEMAIN R,LV=LDEFIN,A=(R1),SP=1
*
         GADEOJ
         SPACE 2
*
*  DEALLOCATE DDNAMES, WHICH ARE ALREADY IN USE
*
DEALLOC  DS    0H
         ST    R14,DEALR14
         LA    R10,DAPB
         USING DAPB18,R10
         XC    DAPB(L'DAPB),DAPB
         MVI   DA18CD+1,X'18'
         MVC   DA18DDN,WORKDD SET DD-NAME
         MVC   DA18DPS2,WORKDISP
         MVC   DA18MNM,BLANKS
         MVC   DA18CTL,WORKCTL
         LA    R1,PARMLIST
         L     R15,ADAIR
         BALR  R14,R15
         LTR   R15,R15
         BZ    DEALLOC9
         LA    R1,2900(R15)
         ABEND (R1)
*
DEALLOC9 MVC   WORKDD,BLANKS
         MVI   WORKDISP,X'00'
         MVI   WORKCTL,X'00'
         L     R14,DEALR14
         BR    R14
         SPACE 4
*
* DEALLOCATE DSNAMES, WHICH ARE IN USE
*
DEALDSN  DS    0H
         ST    R14,DLDSNR14
         LA    R10,DAPB
         USING DAPB18,R10
         XC    DAPB(L'DAPB),DAPB
         MVI   DA18CD+1,X'18'
         MVC   DA18DDN,BLANKS
         LA    R2,DSNBUF
         ST    R2,DA18PDSN
         MVC   DA18DPS2,WORKDISP
         MVC   DA18MNM,BLANKS
         MVC   DA18CTL,WORKCTL
         LA    R1,PARMLIST
         L     R15,ADAIR
         BALR  R14,R15
         LTR   R15,R15
         BZ    DEALDSN9
         LA    R1,3000(R15)
         ABEND (R1)
         SPACE
*
DEALDSN9 DS    0H
         L     R14,DLDSNR14
         BR     R14
         SPACE
*
*  ALLOCATE SYSLIB FOR LINK
*
ALLIB    DS    0H
         ST    R14,ALIBR14
         LA    R10,DAPB
         USING DAPB08,R10
         XC    DAPB(L'DAPB),DAPB
         MVI   DA08CD+1,X'08'
         LA    R2,DSNBUF
         ST    R2,DA08PDSN
         MVC   DA08DDN,WORKDD
         MVC   DA08UNIT,BLANKS
         MVC   DA08SER,BLANKS
         MVC   DA08MNM,WORKMNM
         MVI DA08DSP1,DA08SHR
         MVI   DA08DPS2,DA08KEEP
         MVI DA08DPS3,DA08KEP
         LA    R1,PARMLIST
         L     R15,ADAIR
         BALR R14,R15
         LTR   R15,R15
         BZ    ALLIB9
         LA    R1,3100(R15)
         ABEND (R1)
ALLIB9   L     R14,ALIBR14
         BR    R14
         SPACE 3
*
* ALLOCATE THE SYSUT2-6 FOR COBOL
*
COBALOC  DS    0H
         ST    R14,COBALR14
COBA10   DS    0H
         LA    R10,DAPB
         USING DAPB08,R10
         XC    DAPB(L'DAPB),DAPB
         MVI   DA08CD+1,X'08'
         MVC   DA08MNM,BLANKS
         MVC   DA08DDN,WORKDD
         MVC   DA08UNIT,=C'SYSNV   '
         MVC   DA08SER,BLANKS
         LA    R2,DSNBUF
         ST    R2,DA08PDSN
         MVC   DSN(L'DSN),=CL60' '
         MVC   DSN(7),WORKDSN
         MVI   DSNLEN+1,X'07'
         LA    R2,10
         ST    R2,DA08PQTY
         LA    R2,50
         ST    R2,DA08SQTY
         MVI   DA08DSP1,DA08NEW
         MVI   DA08DPS2,DA08DEL
         MVI   DA08DPS3,DA08DELE
         MVI   DA08CTL,DA08TRKS
         LA    R1,PARMLIST
*
         L     R15,ADAIR
         BALR  R14,R15
         LTR   R15,R15
         BZ    COBA20
         CH    R15,=H'20'
         BNE   COBA15
         MVI   WORKDISP,DA18DEL
         MVI   WORKCTL,X'10'
         BAL   R14,DEALLOC
         B     COBA10
COBA15   DS    0H
         LA    R1,3200(R15)
         ABEND (R1)
         SPACE
COBA20   DS    0H
         MVC   WORKDD,BLANKS
         MVC   WORKDSN,BLANKS
         MVI   WORKCTL,X'00'
         L     R14,COBALR14
         BR    R14
         SPACE
*
* PERFORM SPECIAL COBOL-ALLOCATION AND CALL THE COMPILER
*
         SPACE
COB10    DS    0H
         MVC   WORKDSN(7),=C'&&SYSUT2'
         MVC   WORKDD,=C'SYSUT2  '
         BAL   R14,COBALOC
*
         MVC   WORKDSN(7),=C'&&SYSUT3'
         MVC   WORKDD,=C'SYSUT3  '
         BAL   R14,COBALOC
*
         MVC   WORKDSN(7),=C'&&SYSUT4'
         MVC   WORKDD,=C'SYSUT4  '
         BAL   R14,COBALOC
*
         MVC   WORKDSN(7),=C'&&SYSUT5'
         MVC   WORKDD,=C'SYSUT5  '
         BAL   R14,COBALOC
*
         MVC   WORKDSN(7),=C'&&SYSUT6'
         MVC   WORKDD,=C'SYSUT6  '
         BAL   R14,COBALOC
*
         SPACE
         LA    R3,COBPARM
         ST    R3,ACOBPARM
         MVI   ACOBPARM,X'80'
         LA    R1,ACOBPARM
         LINK  EP=IKFCBL00,MF=(E,(R1))
         SPACE
         ST    R15,ASMRCD
         MVC   MSGBUF,=CL60' '
         MVC   MSGBUF(L'MSG5A),MSG5A
         B     ASM83
*
*
*  FREE THE SPECIAL COBOL DATASETS
*
COB20    DS    0H
         MVI   WORKCTL,X'00'
         MVC   WORKDD,=C'SYSUT1  '
         MVI   WORKDISP,DA18DEL
         BAL   R14,DEALLOC
*
         MVC   WORKDD,=C'SYSUT2  '
         MVI   WORKDISP,DA18DEL
         BAL   R14,DEALLOC
*
         MVC   WORKDD,=C'SYSUT3  '
         MVI   WORKDISP,DA18DEL
         BAL   R14,DEALLOC
*
         MVC   WORKDD,=C'SYSUT4  '
         MVI   WORKDISP,DA18DEL
         BAL   R14,DEALLOC
*
         MVC   WORKDD,=C'SYSUT5  '
         MVI   WORKDISP,DA18DEL
         BAL   R14,DEALLOC
*
         MVC   WORKDD,=C'SYSUT6  '
         MVI   WORKDISP,DA18DEL
         BAL   R14,DEALLOC
*
         MVC   WORKDD,=C'SYSIN   '
         MVI   WORKDISP,DA18DEL
         BAL   R14,DEALLOC
*
         B     ASM130                   ASK FOR LIST AND LINK
         SPACE
*
* CALL THE PLI-COMPILER
*
PLI10    DS    0H
*
* ALLOC SPECIAL SYSPRINT DATASET
*
         USING DAPB08,R10
         XC    DAPB(L'DAPB),DAPB
         MVI   DA08CD+1,X'08'
         MVC   DSN(L'DSN),=CL50' '
         MVC   DSN(7),=C'PLI.ASM'
         MVI   DSNLEN+1,X'07'
         L     R2,=F'12500'
         ST    R2,DA08BLK
         LA    R2,DSNBUF
         ST    R2,DA08PDSN
         MVC   DA08DDN,=C'SYSPRINT'
         MVC   DA08UNIT,=C'SYSNV   '
         MVC   DA08SER,BLANKS
         MVC   DA08MNM,BLANKS
         LA    R2,60
         ST    R2,DA08PQTY
         LA    R2,40
         ST    R2,DA08SQTY
         MVI   DA08CTL,DA08TRKS+DA08UID
         MVI   DA08DSP1,DA08NEW
         MVI   DA08DPS2,DA08DEL
         MVI   DA08DPS3,DA08DELE
*
         LA    R1,PARMLIST
         L     R15,ADAIR
         BALR  R14,R15
         LTR   R15,R15
         BZ    PLI30
         CH    R15,=H'20'
         BNE   PLI20
         MVC   WORKDD,=C'SYSPRINT'
         MVI   WORKDISP,DA18DEL
         BAL   R14,DEALLOC
         B     PLI10
*
PLI20    DS    0H
*
         MVI   DA08DSP1,DA08OLD
         LA    R1,PARMLIST
         L     R15,ADAIR
         BALR  R14,R15
         LTR   R15,R15
         BZ    PLI30
*
         LA    R1,3400(R15)
         ABEND (R1)
         SPACE
*
PLI30    DS    0H
         LA    R3,PLIPARM
         ST    R3,APLIPARM
         MVI   APLIPARM,X'80'
         LA    R1,APLIPARM
*
         LINK  EP=IEL0AA,MF=(E,(R1))
         SPACE
         ST    R15,ASMRCD               STORE RETURN-CODE
*
         MVC   MSGBUF,=CL60' '
         MVC   MSGBUF(L'MSG5B),MSG5B
*
* MOVE THE PLI-LIST TO XXX.ASM.ASM
*
         MVC   INP,PINP
         MVC   OUT,KOUT
         MVC   WORK(1),OPENIN
         OPEN  INP,MF=(E,WORK)
         MVC   WORK(1),OPENOUT
         OPEN  OUT,MF=(E,WORK)
*
PLI40    DS    0H
         GET   INP
         MVI   LINE,X'40'
         MVC   LINE+1(L'LINE),LINE
         LH    R3,0(R1)
         S     R3,=F'5'
         EX    R3,MOVELINE
         PUT   OUT,LINE
         B     PLI40
*
*
MOVELINE MVC   LINE(0),4(R1)
PLI50    DS    0H
         MVC   WORK(1),CLOSE
         CLOSE INP,MF=(E,WORK)
         CLOSE OUT,MF=(E,WORK)
*
         MVC   DSN(7),=C'PLI.ASM'
         MVI   DSNLEN+1,X'07'
         MVI   WORKDISP,DA18DEL
         MVI   WORKCTL,DA18UID
         BAL   R14,DEALDSN
*
*
         USING DAPB08,R10
         XC    DAPB(L'DAPB),DAPB
         MVI   DA08CD+1,X'08'
         MVC   DSN(7),=C'ASM.ASM'
         MVI   DSNLEN+1,X'07'
         LA    R2,DSNBUF
         ST    R2,DA08PDSN
         MVC   DA08DDN,=C'SYSPRINT'
         MVC   DA08UNIT,=C'SYSNV   '
         MVC   DA08MNM,BLANKS
         MVC   DA08SER,BLANKS
         MVI   DA08DSP1,DA08MOD
         MVI   DA08DPS2,DA08KEEP
         MVI   DA08DPS3,DA08DELE
         MVI   DA08CTL,DA08UID
*
         LA    R1,PARMLIST
         L     R15,ADAIR
         BALR  R14,R15
         LTR   R15,R15
         BZ    PLI60
*
         LA    R1,3500(R15)
         ABEND (R1)
         SPACE
*
PLI60    DS    0H
*
         B     ASM83                    DISPLAY THR RETURN-CODE
         SPACE
*
* ROUTINE TO HANDLE THE ATTENTION INTERRUPT
*
ATTEXIT  DS    0H
         B     EXIT
*
*
*
*  MESSAGES
*
MSG1     DC    CL25' LIBRARIAN RETURN CODE IS '
MSG2     DC    CL38'CATASTROPHIC ERROR, CALL SYSTEM DESIGN'
MSG3     DC    CL15' NO SUCH MEMBER'
MSG4     DC    CL15' PASSWORD WRONG'
MSG5     DC    CL25' ASSEMBLER RETURN CODE IS '
MSG5A    DC    CL25' COBOL     RETURN CODE IS '
MSG5B    DC    CL25' PLI       RETURN CODE IS '
MSG6     DC    CL35'YOU WANT TO LOOK THE COMP.-LIST, OK'
MSG8     DC    CL25' LINKAGE   RETURN CODE IS '
MSG9     DC    CL15'LINK-LIBRARY IS'
MSG10    DC    CL19'LINK-PARAMETERS ARE'
STAXMSG  DC    C' THE ASM-COMMAND IS TERMINATED '
MSG11    DC    CL31' NO ASSEMBLY FOR PROD2-PROGRAMS'
MSG12    DC    C'THE COMP.-LIST HAS BEEN MOVED TO FICH'
*
ASMPARM  DC    H'5',C'NOESD'
COBPARM  DC    H'29',C'LST132=L120,SIZE=196K,BUF=64K'
PLIPARM  DC    H'18',C'OBJECT,NODECK,LIST'
LNKPARMK DC    H'13',C'XREF,MAP,TEST'
LNKPRMK2 DC    C',SIZE=(196K,64K)'
*
* DEFINITIONEN FUER STACK-ROUTINE
*
ANLSD    DS    A
         DC    X'0000'
         DC    AL2(LINLIST)
         DS    A
         DC    F'0'
LLSD     EQU   *-ANLSD
*
INLIST   DC    X'00210000'
         DC    C'EDIT ''XXX.ASM.ASM'' DATA NONUM'
         DC    X'00070000'
         DC    C'TOP'
         DC    X'00050000'
         DC    C'V'
         DC    X'001B0000'
LFIND    DC    C'FIND /DIAGNOSTIC CROSS/'
         DC    X'000B0000'
         DC    C'L * 25 '
LINLIST  EQU   *-INLIST
*
ANLSD2   DS    A
         DC    X'0000'
         DC    AL2(LINLIST2)
         DS    A
         DC    F'0'
LLSD2    EQU   *-ANLSD2
*
INLIST2  DC    X'00070000'
         DC    C'ALI'
LINLIST2 EQU   *-INLIST2
*
*
STCKLST  STACK MF=L
*
*
LSTAX    STAX  ATTEXIT,MF=L
*
*
*
APCL     DC    A(PCL)
*
LIBTAB   DC    H'11',C'SYS1.&SYSLIB1  '
         DC    H'11',C'SYS1.GADLIB  '
         DC    H'11',C'SYS1.GAOLIB  '
         DC    H'11',C'SYS1.SYSLIB  '
         DC    H'11',C'SYS1.GADCMD  '
         DC    H'11',C'SYS1.CMDLIB  '
         DC    H'11',C'SYS1.SVCLIB  '
         DC    H'11',C'SYS1.LPALIB  '
LIBTABIM DC    H'13',C'SYS1.IMAGELIB'
         DC    H'13',C'SYS1.TELCMLIB'
LTABEND  DC    C'***'
*
*
BLANKS   DC    CL8' '
*
         PRINT NOGEN
*
COUTDCB  DCB   DSORG=PS,MACRF=(PM),RECFM=FB,LRECL=80,                  *
               BLKSIZE=800,DDNAME=SYSIN
         SPACE
LOUTDCB  EQU   *-COUTDCB
*
KINP     DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=GL,EODAD=FICH40
LINP     EQU   *-KINP
*
PINP     DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=GL,EODAD=PLI50
*
*
KOUT     DCB   DDNAME=OUTSQ1,DSORG=PS,MACRF=PM
LOUT     EQU   *-KOUT
*
OPENIN   OPEN  (,INPUT),MF=L
*
         PRINT GEN
OPENOUT  OPEN  (,OUTPUT),MF=L
CLOSE    CLOSE (,),MF=L
         SPACE
LIBSOUR  DC    C'&SOUR'
         LTORG *
*
*  DEFINITIONEN, ADRESSIERUNG UEBER REGISTER 8
*
         SPACE
DEFIN    DSECT
*
PARMLIST DS    7F                       FOR PPL OR DAPL
ECB      DS    F                        COMMAND-PROCESSOR-ECB
IOPL     DS    3A             I/O-PARAMETER-LIST
IOPLIOPB DS    A
ADDRPDL  DS    A                        ANSWER AREA FOR PARSE
DAPB     DS    CL90                     DAIR PARAMETER BLOCK
ACB      DS    CL50           ATTRIBUTE-CONTROL-BLOCK
LIBRCD   DS    F                        LIBRARIAN RETURN-CODE
ASMRCD   DS    F              ASSEMBLER RETURN-CODE
ADAIR    DS    A                        ENTRY-POINT OF DAIR
ASTACK   DS    A              ENTRY-POINT OF STACK-ROUTINE
*
WORK     DS    2D
OUTDCB   DS    CL(LOUTDCB)
OUT      DS    CL(LOUT)
INP      DS    CL(LINP)
FAIRCARD DS    CL80
         DS    CL20
FAIRRET  DS    CL1
FAIRINC  DS    CL1
AFAIR    DS    A
AMASTOPN DS    A
AMASTMOD DS    A
AMASTRCD DS    A
AMSTHIST DS    A
AMASTCLS DS    A
*
FAIRPARM DS    5A
MFLAG    DS    CL1
OPFLAG   DS    CL1
HFLAG    DS    CL1
         DS    0H
DSNBUF   DS    0CL46                    DS-NAME BUFFER
DSNLEN   DS    H
DSN      DS    CL44
*
LIBPARM  DS    CL20                     PARM FOR LIBRARIAN
         DS    0F
LNKPARM  DS    CL50
ALNKPARM DS    A
LNKRCD   DS    A
WORKCTL  DS    CL1
STAXLI   DS    CL20
         DS    0F
*
MJCL     DS    0CL360         JCL OF THE MEMBER
         DS    CL54
MPROC    DS    CL55
         DS    CL30
MDSN     DS    CL44
         DS    CL67
MPROC2   DS    CL55
         DS    CL55
*
MHAED    DS    0CL100
         DS    CL88
MLANG    DS    CL3
         DS    CL9
*
MSPEC    DS    CL4
MLEVEL   DS    CL4
*
ALIBPARM DS    A              ADRESS OF LIBPARM
AASMPARM DS    A              ADRESS OF ASMPARM
ACOBPARM DS    A                        ADRESS OF COB-PARM
APLIPARM DS    A                        ADRESS OF PLI-PARM
*
MSGBUF   DS    CL60           MESSAGE-BUFFER
INBUF    DS    CL20           INPUT-ANSWER-BUFFER
*
FMODNAME DS    CL8                      MODULE-NAME
FMODLN   DS    F                        LENGTH OF MODULE-NAME
*
STCKPRM  DS    CL8
WORKDD   DS    CL8            DDNAME FOR DEALLOCATE
WORKMNM  DS    CL8
WORKDISP DS    CL1
WORKDSN  DS    CL19
LINE     DS    CL121
*
DEALR14  DS    F              STORE R14 FOR DEALLOCATE
ALIBR14  DS    F              STORE R14 FOR ALLOC FOR LINK
DLDSNR14 DS    F              STORE R14 FOR DEALLOC DSNAMES
COBALR14 DS    F                        STORE R14 FOR ALLOC COB SYSUTX
*
LDEFIN   EQU   *-DEFIN
*
*  DSECTS
*
         IKJCPPL
         SPACE 3
         IKJPPL
         SPACE 3
         IKJDAPL
         SPACE 3
         IKJDAP08
         SPACE 3
         IKJDAP04
         SPACE 3
         IKJDAP18
         SPACE 3
         IKJDAP0C
DA0CDDN  DS    CL8
DA0CDDN1 DS    CL8
DA0CDDN2 DS    CL8
DA0CDDN3 DS    CL8
DA0CDDN4 DS    CL8
DA0CDDN5 DS    CL8
         SPACE 2
         IKJDAP34
         IKJDAP30
         SPACE 3
         IKJPSCB
         SPACE 3
*
* PARAMETER-CONTROL-LIST FOR PARSE
*
         PRINT NOGEN
DUMMY    CSECT
PCL      IKJPARM
PMODNAME IKJIDENT 'MODULE NAME',MAXLNTH=8,FIRST=ALPHA,OTHER=ALPHANUM,  *
               PROMPT='MODULE NAME'
PMODPASS IKJIDENT 'MODULE PASSWORD',MAXLNTH=4,FIRST=ALPHA,OTHER=ALPHA, *
               PROMPT='MODULE PASSWORD'
PMODLNK IKJKEYWD
         IKJNAME 'NOLINK'
PMODLOOK IKJKEYWD
         IKJNAME 'NOLOOK'
PMODLIST IKJKEYWD
         IKJNAME 'NOLIST'
PMODOUT  IKJKEYWD
         IKJNAME 'FICH'
         IKJENDP
         SPACE 3
         END
  PUNCH  ' NAME TESTASM(R)'
         END
