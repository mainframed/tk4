         TITLE 'FINDVOL ==> SUBROUTINE TO CHECK FOR ONLINE VOLSER'
         EJECT
***********************************************************************
*                                                                     *
*   ANFANG    EROEFFNUNG VON ASSEMBLER-PROGRAMMEN                     *
*             LETZTE AENDERUNG :  06.07.84                            *
*                                                                     *
***********************************************************************
         MACRO
&NAME    ANFANG &V,&CD=C,&LC=0,&BR=1,&EP=,&L=0,&EQU=YES,&RENT=NO
         MNOTE  *,'        ***   VERSION VOM 06.07.84   ***'
.*
.* V   WIRD *V* ANGEGEBEN UND IST *BR>=1*, ERFOLGT DIE ADRESSIERUNG DER
.*     ERSTEN INSTRUKTION SCHON UEBER DAS BASISREG. 3, SONST UEBER R15.
.*     WIRD *R* ANGEGEBEN, WERDEN BIS ZUR DEFINITION DER SAVEAREA R15,
.*     VON DORT AB R13 UND NACH DESSEN ERSCHOEPFUNG MIT DEM PARAMETER
.*     *BR= * EVTL. AUSSERDEM VERLANGTE REGISTER ALS BASISREGISTER
.*     VERWENDET.
.*     WIRD *O* ANGEGEBEN ODER WIRD DER PARAMETER AUSGELASSEN UND IST
.*     *BR>=1*, WERDEN BIS ZUR BEENDIGUNG DES SAVEAREA HANDLINGS R15,
.*     VON DORT AB R3 UND SPAETER MIT DEM PARAMETER *BR= * EVENTUELL
.*     AUSSERDEM VERLANGTE REGISTER ALS BASISREGISTER VERWENDET. IST
.*     *BR=0*, WIRD DURCHGEHEND R15 ALS BASISREGISTER VERWENDET.
.*     DER PARAMETER *O* BEWIRKT AUSSERDEM, DASS FEHLER IN EINER ASS.-
.*     UNTERROUTINE EINES PL/I-OPT. HAUPTPROGRAMMS VOM PL/I-ERRORHAND-
.*     LER BEHANDELT UND FEHLERMELDUNGEN, DIE DIE FEHLERQUELLE IDENTI-
.*     FIZIEREN, AUSGEGEBEN WERDEN.
.* CD= STANDARDWERT IST *C* WIE *CSECT*
.*     ZULAESSIG IST AUCH *S* WIE *START*
.* LC= STANDARDWERT IST *0*, SETZT DEN ZUORDNUNGZAEHLER (AUF 0).
.*     SOWIE *NO*, WENN WEDER CSECT NOCH START ERSCHEINEN SOLL
.*     NUR ZULAESSIG IN VERBINDUNG MIT *START*, SIEHE CD=
.* BR= STANDARDWERT IST *1*, GIBT DIE ANZAHL DER BASISREGISTER AN.
.*     ZULAESSIG SIND *0*,*1*,*2* ODER *3*. ES WERDEN DANN ENTWEDER
.*     KEINE ODER IN DER REIHENFOLGE R3,R4,R5 DIE ANGEGEBENE ANZAHL AN
.*     BASISREGISTERN GENERIERT.ZULAESSIG SIND AUCH DIE FORMEN
.*     BR=(X)  BR=(X,Y)  BR=(X,Y,Z)
.*     WOBEI X,Y,Z JEWEILS FUER DIE REGISTER STEHEN, DIE ALS BASIS-
.*     REGISTER DIENEN SOLLEN, Z.B.  BR=(R5,R6)
.* EP= NAME DES EINGANGSPUNKTES. ANGABE EMPFEHLENSWERT, WENN OBERPRO-
.*     GRAMM IN PL/1 GESCHRIEBEN
.* L=  LETZTES ZEICHEN DES LABELS, DER DEN BEGINN DER BASISREGISTER-
.*     ZUORDNUNG KENNZEICHNET (=BASIS&L, WENN &L ^= 0).
.*
.* EQU= EQUATES FUER DIE REGISTER (RX) WERDEN GENERIERT (DEFAULT) ODER
.*     NICHT (EQU=YES×NO) .
.*
.* RENT= DIE SAVEAREA WIRD STATISCH (DEFAULT) ODER DYNAMISCH ZUGEORDNET
.*      (RENT=YES×NO) .
.*
.* GLOBALE VARIABLE ZUM TEST GEGEN DOPPELDEFINITIONEN DER REGISTER
         GBLB  &GLBIT  BETROFFEN SIND DIE EQU'S
         GBLA  &GLBR
         LCLA  &SETBR  ZUM TESTEN FUER BR=
         LCLA  &SL,&OFS
         LCLC  &MM,&NN,&BR1,&BR2,&BR3
.*
         AIF   (T'&NAME NE 'O').M005
         MNOTE 12,'UNBENANNTE CONTROL-SECTION'
         AGO   .M130
.M005    ANOP
&NN      SETC  '&NAME'
         AIF   ('&EP' NE '&NAME').M010
         AIF   ('&V' NE 'O').M010
         AIF   (K'&NAME EQ 8).M007
&MM      SETC  '1'
         AGO   .M010
.M007    ANOP
&NN      SETC  '&NAME'(1,7)
&MM      SETC  '$'
.M010    ANOP
         AIF   ('&CD' EQ 'C').M020
         AIF   ('&CD' EQ 'S').M030
         AIF   ('&CD' EQ 'NO').M040
         MNOTE 4,'CD= IST UNGUELTIG'
.M020    ANOP
&NN&MM   CSECT
         AGO   .M042
.M030    ANOP
&NN&MM   START &LC
         AGO   .M042
.M040    ANOP
&NN&MM   DS    0F
.M042    ANOP
         AIF   ('&BR'(1,1) EQ '(').M043
&SETBR   SETA  &BR
&BR1     SETC  'R3'
&BR2     SETC  'R4'
&BR3     SETC  'R5'
         AGO   .M044
.M043    ANOP
&SETBR   SETA N'&BR
&BR1     SETC  '&BR(1)'
         AIF   (&SETBR LT 2).M044
&BR2     SETC  '&BR(2)'
         AIF   (&SETBR LT 3).M044
&BR3     SETC  '&BR(3)'
.M044    ANOP
         AIF   (&GLBIT).M045
         AIF   ('&EQU' EQ 'NO').M045
*
*
R0       EQU   0 PARAMETER-REGISTER
R1       EQU   1 PARAMETER-REGISTER
R2       EQU   2 ARBEITSREGISTER
R3       EQU   3 ARBEITSREGISTER
R4       EQU   4 ARBEITSREGISTER
R5       EQU   5 ARBEITSREGISTER
R6       EQU   6 ARBEITSREGISTER
R7       EQU   7 ARBEITSREGISTER
R8       EQU   8 ARBEITSREGISTER
R9       EQU   9 ARBEITSREGISTER
R10      EQU   10 LINK-REGISTER
R11      EQU   11 3. BASISREGISTER
R12      EQU   12 2. BASISREGISTER
R13      EQU   13 1. BASISREGISTER
R14      EQU   14 RUECKKEHR-REGISTER
R15      EQU   15 VERZWEIG-REGISTER
*
*
         MNOTE *,'SYMBOLISCHE REGISTER GENERIERT'
*
*
.M045    AIF   ('&V' EQ 'V').M200
         AIF   ('&V' EQ 'R').M050
         AIF   ('&V' EQ 'O').M055
         AIF   (T'&V EQ 'O').M050
         MNOTE 4,'UNGUELTIGER POSITIONSPARAMETER'
.M050    ANOP
         USING *,R15
.M055    ANOP
&SL      SETA  K'&EP
         AIF   (T'&EP EQ 'O').M100
         AIF   ('&V' NE 'O').M080
         ENTRY &EP
         AIF   (&SL/2 NE (&SL+1)/2).M077
         DC    C' &EP'
         AGO   .M078
.M075    ANOP
         B     *+7+8+5+2*((&SL-1)/2)
         DC    AL1(&SL)
.M077    ANOP
         DC    C'&EP'
.M078    ANOP
         AIF   ('&V' NE 'O').M090
         DC    AL1(&SL)
         CNOP  0,4
         USING *,R15
&EP      EQU   *
         AGO   .M095
.M080    ANOP
         AIF   ('&EP' EQ '&NAME').M075
         ENTRY &EP
&EP      DS    0H
         AGO   .M075
.M090    ANOP
         DC    C'&SYSDATE'
         DC    C'&SYSTIME'
.M095    ANOP
*
*
         MNOTE *,'ENTRY - EINGANGSPUNKT GENERIERT'
*
*
.M100    ANOP
         AIF   ('&V' NE 'O').M104
         STM   R14,R12,12(R13) .  SAVE REGISTERS
         B     *+12               BRANCH AROUND CONSTANT
         DC    A(88)              LENGTH OF DSA
         DC    A(0)
         L     R0,*-8
         LR    R4,R1 .            SAVE ANY PARAMETERLIST-ADDR.
         L     R1,76(0,R13) .     ADDR. OF NEXT AVAILABLE BYTE IN STOR.
         ALR   R0,R1
         CL    R0,12(0,R12) .     COMP. WITH LAST AVAIL. BYTE IN STOR.
         BNH   *+10
         L     R15,116(0,R12) .   PL/I STORAGE OVERFLOW ROUTINE
         BALR  R14,R15 .          ATTEMPT TO OBTAIN MORE STORAGE
         ST    R0,76(0,R1) .      ADDR. OF NEXT AVAIL. BYTE IN STOR.
         ST    R13,4(0,R1)
         ST    R1,8(0,R13)
         MVC   72(4,R1),72(R13) . COPY ADDR. OF LIBRARY WORKSPACE
         LR    R13,R1
         MVI   0(R13),X'80'
         MVI   86(R13),X'91'
         MVI   87(R13),X'C0'
         LR    R1,R4
*
*
*        ENDE DES SAVEAREA-HANDLINGS
*
*
         AGO   .M200
.M104    ANOP
         CNOP  2,4
         STM   R14,R12,12(R13) .  SAVE REGISTERS
         LR    R11,R13
         AIF   ('&RENT' NE 'YES').M104A
         LR    &BR1,R15           ENTRY POINT INTO BASE
         USING &NAME,&BR1
         LR    R4,R1              SAVE PARM REGISTER VALUE
         LR    R5,R0              SAVE PARM REGISTER VALUE
         GETMAIN R,LV=72
         LR    R13,R1             POINT TO GOTTEN SAVE AREA
         LR    R1,R4              RESTORE PARM REGISTER VALUE
         LR    R0,R5              RESTORE PARM REGISTER VALUE
         ST    R13,8(0,R11)       NEW SAVE AREA PTR INTO CALLER'S
         ST    R11,4(0,R13)       OLD SAVE AREA PTR INTO OWN
         DROP  R15
*
*
*        ENDE DES SAVEAREA-HANDLINGS
*
*
         AGO   .M999
.M104A   ANOP
         ST    R13,*+12
         BAL   R13,*+19*4
         AIF   ('&V' NE 'R').M105
         USING *,R13
.M105    ANOP
ANFA&SYSNDX DS 0F   WORT 0 NUR VON PL1 VERWENDET
         DC    X'0080'
         DC    AL2(72)
         DC    F'0' WORT 1 A(SAVEAREA IM RUFENDEN PROGRAMM)
         DC    F'0' WORT 2 A(SAVEAREA IM GERUFENEN PROGRAMM)
         DC    F'0' WORT 3 R14
         DC    F'0' WORT 4 R15
         DC    F'0' WORT 5 R0        ** BEI         R14
         DC    F'0' WORT 6 R1        ** ZUGRIFFS-   R15
         DC    F'0' WORT 7 R2        ** ROUTINEN    R0
         DC    F'0' WORT 8 R3 BASIS1 ** WERDEN      R1
         DC    F'0' WORT 9 R4 BASIS2 ** HIER        R2
         DC    F'0' WORT10 R5 BASIS3 ** FOLGENDE    R3
         DC    F'0' WORT11 R6        ** REGISTER    R4
         DC    F'0' WORT12 R7        ** VON DER     R5
         DC    F'0' WORT13 R8        ** ZUGRIFFS-   R6
         DC    F'0' WORT14 R9        ** ROUTINE     R7
         DC    F'0' WORT15 R10       ** GESPEICHERT R8
         DC    F'0' WORT16 R11
         DC    F'0' WORT17 R12
*
         ST    R13,8(0,R11)
*
*
*        ENDE DES SAVEAREA-HANDLINGS
*
*
         AIF   ('&V' NE 'V').M200
         AGO   .M120
.M110    ANOP
.M120    AIF   (&GLBR GT &SETBR).M130
&GLBR    SETA  &SETBR
         AIF   ('&V' EQ 'V').M130
         DROP  R15
.M130    ANOP
&GLBIT   SETB  1
*
*
*        ENDE DES VORSPANNS
*
*
         MEXIT
.M200    AIF   (&SETBR NE 0).M220
         MNOTE *,'KEINE BASISREGISTER GENERIERT'
         AIF   ('&V' EQ 'V').M050
         AGO   .M110
.M220    AIF   ('&V' EQ 'R').M250
         BALR  &BR1,0
         AIF   ('&L' EQ '0').M222
BASIS&L  EQU   *
.M222    USING *+&OFS,&BR1
         AIF   (&GLBR GT 0).M225
.M225    AIF   (&SETBR GE 2).M240
.M230    AIF   ('&V' EQ 'V').M055
         AGO   .M110
.M240    LA    &BR2,4095(,&BR1)
         USING *+&OFS+4091,&BR2
         AIF   (&GLBR GT 1).M245
.M245    AIF   (&SETBR EQ 2).M230
         LA    &BR3,4095(,&BR2)
         USING *+&OFS+2*4091,&BR3
         AIF   (&GLBR GT 2).M230
         AGO   .M230
.M250    LA    &BR1,4095(,R13)
&OFS     SETA  4095-80
         AGO   .M222
.M999    ANOP
         MEND
         EJECT
***********************************************************************
*                                                                     *
*   ENDE      ABSCHLUSS VON ASSEMBLER-PROGRAMMEN                      *
*             LETZTE AENDERUNG :  23.07.84                            *
*                                                                     *
***********************************************************************
         MACRO
&NAME    ENDE &L,&R1,&RC=,&RENT=NO
         MNOTE  *,'      ***   VERSION VOM 23.07.84   *** '
*
         LCLC  &ENDEC1,&ENDEC2
         AIF   (T'&RC EQ 'O').S040
         AIF   ('&RC'(1,1) EQ '(').S010 REG.NOTATION
         AIF   ('&RC'(1,1) LT '0').S020
&NAME    LA    R15,&RC            RETURNCODE LADEN
         AGO   .S030
.S010    ANOP
&NAME    LA    R15,0(,&RC(1))     RETURNCODE LADEN
         AGO   .S030
.S020    ANOP
&NAME    L     R15,&RC            RETURNCODE LADEN
.S030    ANOP
         LR    R11,R13            SAVE SAVE AREA POINTER
         L     R13,4(,R13)        A(SAVEAREA IM RUFENDEN PROGRAMM)
&ENDEC1  SETC  'R0'
&ENDEC2  SETC  '20'
         AGO   .S050
.S040    ANOP
         LR    R11,R13            SAVE SAVE AREA POINTER
&NAME    L     R13,4(,R13)        A(SAVEAREA IM RUFENDEN PROGRAMM)
.S050    ANOP
         AIF   ('&RENT' NE 'YES').S055
         STM   R0,R1,20(R13)       TEMP SAVE
         LR    R3,R15              SAVE RETURN CODE
         FREEMAIN R,LV=72,A=(11)
         LR    R15,R3              RESTORE RETURN CODE
         LM    R0,R1,20(R13)       RESTORE R0 / R1
.S055    ANOP
         AIF   (T'&R1 EQ 'O').S060
         AIF   ('&R1' NE 'R1').S900
&ENDEC1  SETC  'R2'
&ENDEC2  SETC  '28'
.S060    AIF   (T'&R1 EQ 'O' AND T'&RC EQ 'O').S070
         L     R14,12(,R13)       ALTE REG.STAENDE WIEDERHERSTELLEN
         LM    &ENDEC1,R12,&ENDEC2.(R13)
         AGO   .S080
.S070    LM    R14,R12,12(R13)    ALTE REG.STAENDE WIEDERHERSTELLEN
.S080    BR    R14                RETURN
         AIF   (T'&L EQ 'O').S090
         AIF   ('&L' NE 'L').S910
         AGO   .S920
.S090    MEXIT
.S900    IHBERMAC 37,,&R1         INVALID OPERAND
         MEXIT
.S910    AIF   (K'&L GT 1).S090
         IHBERMAC 183,&L,L
.S920    LTORG
         MEND
         EJECT
FINDVOL  ANFANG R,BR=(R12),RENT=YES
         SPACE 3
         LR    R4,R1               SAVE PARM ADDRESS
         SPACE 2
         LA    R2,WORKLNGT         GET LENGTH OF WORK AREA
         GETMAIN R,LV=(R2),SP=1
         LR    R8,R1               SAVE ADDRESS OF GOTTON CORE
         USING WORKAREA,R8         AND ESTABLISH ADDRESSABILITY
         XC    0(WORKLNGT,R8),0(R8)  CLEAR CORE
         TITLE 'FINDVOL ==> SEARCH THROUGH THE UCBS FOR THE VOLSER'
SCANUCB  L     R6,CVTPTR          GET CVT POINTER
         USING CVTMAP,R6          ADDRESS TO CVT
         XC    UCBWORK,UCBWORK    ZERO OUT UCB WORKAREA
         LA    R1,UCBWORK         ADDR OF UCB WORKAREA
         ST    R1,PARMWA          STORE IT IN PARM LIST
         LA    R1,DEVCLASS        PTR TO DEV CLAS TO SEARCH
         ST    R1,PARMDEVT        STORE IN PARM LIST
         MVI   DEVCLASS,UCB3DACC  ONLY SEARCH DASD
         LA    R1,ADDRUCB         AREA TO STORE UCB ADDR
         ST    R1,PARMUCB         IN PARM LIST
         OI    PARMUCB,X'80'      SIGNIFY END OF PARMLIST
         LA    R1,PARMLIST        PTR TO PARM LIST
SETUCB1  L     R15,CVTUCBSC       GET SCAN SERVICE ADDR
         BALR  R14,R15            BRANCH TO IT
         TITLE 'FINDVOL ==> CHECK RESULTS - ONLINE => RETURN'
SETUCB2  LTR   R15,R15
         BNZ   SETUCB4
         SPACE
         L     R5,ADDRUCB          GET UCB ADDRESS
         USING UCBOB,R5              AND ESTABLISH ADDRESSABILITY
         SPACE
         CLC   0(6,R4),28(R5)      VOLSER MATCH
         BNE   SETUCB1             NO, GET NEXT
         TM    UCBSTAT,UCBONLI     IS DEVICE ONLINE ?
         BZ    SETUCB4             NO => REJECT
         SPACE
         XR    R3,R3               YES ==> RC = ZERO
         B     ENDE01                      RETURN
SETUCB4  DS    0H
         LA    R15,12              VOLSER NOT FOUND/OFFLINE
         XR    R5,R5               R1 = ZERO
         SPACE 2
ENDE01   DS    0H
         SPACE
         FREEMAIN R,LV=WORKLNGT,A=(8),SP=1
         SPACE
         LR    R15,R3              RESTORE RC
         LR    R1,R5               LOAD UCB ADDRESS
         ENDE  ,R1,RC=(R15),RENT=YES
         TITLE 'WORK AREAS'
         LTORG
         SPACE 3
WORKAREA DSECT
PARMLIST DS    3F       PARMLIST FOR UCB
         ORG   PARMLIST
PARMWA   DS    F        ADDRESS OF 100-BYTE WORK AREA
PARMDEVT DS    F        ADDR OF DEV TYPE TO BE SEARCHED
PARMUCB  DS    F        ADDR OF UCB ADDR
         DS    0D       FOLLOWING MUST BE ALIGNED
UCBWORK  DS    CL100    UCB WORK AREA
DEVCLASS DS    CL1      HOLDS DEVICE CLASS TO BE SEARCHD FOR
ADDRUCB  DS    F        WORD OF ADDR WHERE UCB IS RETURNED
         SPACE
WORKLNGT EQU   *-PARMLIST    LENGTH OF WORK AREA
         PRINT NOGEN
         EJECT
         IEFUCBOB                 UCB MAPPING MACRO
         EJECT
         CVT   DSECT=YES
         END
