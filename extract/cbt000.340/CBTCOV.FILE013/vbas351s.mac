ECBINSRT START
         ENTRY ECBREMOV
*
*        ECB-ADDRESS-LIST UPDATE ROUTINES
*
* ENTRY  R0    ADDR OF ECB TO BE INSERTED INTO/REMOVED FROM LIST
*        R1    PARMLIST POINTER
* EXIT   SEE ENTRY DESCRIPTION
*
         REG
I        EQU   3
J        EQU   4
         EJECT
PARM     DSECT
FECBAPTR DS    A                       START OF ADDR LIST POINTER
LECBAPTR DS    A                       END OF LIST PTR/ZERO
CECBAPTR DS    A                       CURRENT ADDR PTR USED BY SCANRTN
         USING PARM,R1
         EJECT
*
*              ENTRY TO INSERT
*
* EXIT   R15   RETURNCODE
*              0   ANYTIME
*        UPDATED END-OF-LIST PTR
*
ECBINSRT CSECT
         B     12(0,15)
         DC    X'07'
         DC    CL7'ECBINSRT'
         STM   14,12,12(13)            SAVE REGS
         USING ECBINSRT,15
         L     J,LECBAPTR              LOAD 'LAST' PTR
         LTR   J,J                     LIST EMPTY
         BNZ   *+12                    NO, GO UPDATE
         L     J,FECBAPTR              YES, GET 'FIRST' PTR
         B     *+12                    GO TO MAINLINE
         NI    0(J),X'7F'              CLEAR END-OF-LIST FLAG
         LA    J,4(0,J)                GET LOC FOR ADDR
         ST    R0,0(0,J)               STORE ADDR INTO LIST
         OI    0(J),X'80'              SET END-OF-LIST FLAG
         ST    J,LECBAPTR              UPDATE 'LAST' PTR
         LM    14,12,12(13)            RELOAD REGS
         LA    15,0                    ZERO RC
         SPM   14
         BR    14
         DROP  15
         EJECT
*
*              ENTRY TO REMOVE
*
* EXIT   R15   RETURNCODE
*              0   NORMAL COMPLETION
*              4   NORMAL COMPLETION, LIST EMPTY
*              8   ECB ADDR NOT IN LIST
*        UPDATED END-OF-LIST PTR )  IF ECB
*        ZEROED CURRENT PTR      )  FOUND
*
ECBREMOV EQU   *
         B     12(0,15)
         DC    X'07'
         DC    CL7'ECBREMOV'
         STM   14,12,12(13)            SAVE REGS
         USING ECBREMOV,15
         L     R2,CECBAPTR             SAVE CURRENT POINTER
         ST    R0,CECBAPTR             STORE ECB ADDR
         L     J,LECBAPTR              LOAD 'LAST' PTR
         LTR   J,J                     LIST EMPTY
         BZ    FAIL                    YES, ERROR
         L     I,FECBAPTR              LOAD 'FIRST' PTR
CHECK    EQU   *
         CLC   1(3,I),CECBAPTR+1       CHECK ADDRESSES
         BE    DELETE                  EQUAL, GO REMOVE
         CLR   I,J                     END-OF-LIST
         BE    FAIL                    YES, ERROR
         TM    0(I),X'80'              END-OF-LIST FLAG
         BO    FAIL                    YES, ERROR
         LA    I,4(0,I)                GET NEXT LOC IN LIST
         B     CHECK                   AND GO TO TEST
FAIL     EQU   *
         LA    R0,8                    LOAD ERROR CODE
         B     EXIT
DELETE   EQU   *
         NI    0(J),X'7F'              CLEAR AND-OF-LIST FLAG
         MVC   0(4,I),0(J)             MOVE LAST TO CURRENT PTR
         XC    0(4,J),0(J)             ZERO LAST PTR
         LA    R0,4
         CLC   FECBAPTR,LECBAPTR       LIST EMPTY NOW
         BE    EMPTY                   YES, INDICATE SO
         SR    J,R0                    GET NEW LAST PTR
         OI    0(J),X'80'              SET END-OF-LIST FLAG
         ST    J,LECBAPTR              UPDATE 'LAST' PTR
         LA    R0,0                    ZERO RC
         B     EMPTY+L'EMPTY
EMPTY    XC    LECBAPTR,LECBAPTR       ZERO 'LAST' PTR, RC IS SET
         SR    R2,R2                   CLEAR CURRENT PTR
EXIT     EQU   *
         ST    R2,CECBAPTR             STORE PTR/ZERO
         ST    R0,16(0,13)             STORE RC INTO R15 LOC
         LM    14,12,12(13)            RELOAD REGS
         SPM   14
         BR    14
         DROP  15
         END
