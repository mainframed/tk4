         EJECT
         IDCBOSD
         TITLE '** ZS057 **'
*  REGISTER--EQU'S
         REG
*  MVS / CONTROLBLOCK--OFFSET'S
CVTTCBP  EQU   X'0'           POINTER TO TCB-DOUBLE WORD
TCBLLS   EQU   X'24'          POINTER TO LOAD LIST ELEMENT (LLE)
LLECHN   EQU   X'0'           POINTER TO NEXT LLE
LLECDPT  EQU   X'4'           POINTER TO CORR. CDE
CDNAME   EQU   X'8'           NAME IN CDE
CDENTPT  EQU   X'10'          POINTER TO EP-LOCATION
CDXLMJP  EQU   X'14'          POINTER TO XL
         SPACE 5
ZS057    CSECT ,
         XSAVE R12,SVA,ZS057.ZIMMERMANN
         SPACE 2
*---------------------------------------------------------------------*
* ZS057: ERSETZT DYNAMISCHEN AUFRUF EINES UNTERPROGRAMMS
*        IN EINEM COBOL-PROGRAMM
*
* EP :   R1 POINTS TO PARAMETERLIST
*        A(MODULE-NAME)
*        A(FUNCTION)    - CALL
*                       - CADR
*                       - LOAD
*                       - BLDL
*                       - DLET
*        A(SAVE-ADDR)
*        A(RETURN-CODE)
*        ..... PARAMETER UP
*---------------------------------------------------------------------*
         SPACE 3
         LA    R11,0          R11 -- RETURN CODE
         L     R3,0(R1)       GET POINTER TO MODULE NAME
         LTR   R3,R3
         BM    PARAERR        FALSCHE PARAMETERLISTE
*
         L     R4,4(R1)       GET POINTER TO FUNCTION
         CLC   0(4,R4),FPARM  PARMFUNKTION
         BE    PARMFU
         LTR   R4,R4
         BM    PARAERR        FALSCHE PARAMETERLISTE
*
         L     R5,8(R1)       GET POINTER TO EP-ADDR UP
         LTR   R5,R5
         BM    PARAERR        FALSCHE PARAMETERLISTE
*
         L     R6,12(R1)      GET POINTER TO RET-CODE
         ST    R13,SV13       STORE REG 13
         L     R13,4(0,R13)   GET HIGH SA ADDR
         CLC   0(4,R4),FDLET  FUNC  = 'DLET'
         BE    DLET
         LTR   R6,R6
         BM    NOPARM
*
         LA    R7,16(R1)      SAVE ADDR OF UP-PARAMETERLIST
         ST    R7,24(0,R13)
*
*        FUNCTION TEST
*
NOPARM   EQU   *
         CLC   0(4,R4),FCALL              FUNC  = 'CALL'
         BE    CDE
         CLC   0(4,R4),FLOAD              FUNC  = 'LOAD'
         BE    CDE
         CLC   0(4,R4),FCADR              FUNC  = 'CADR'
         BE    BRANCH
         CLC   0(4,R4),FBLDL              FUNC  = 'BLDL'
         BE    BLDL
         LA    R11,24                     INVALID FUNCTION
         B     XRETA
*
CDE      EQU   *
         L     R8,16           GET CVT-ADDRESS
         L     R8,CVTTCBP(R8)  GET POINTER TO TCB-DOUBLE WORD
         L     R8,4(R8)        GET CURRENT TCB-ADDRESS
*
         L     R9,TCBLLS(R8)   GET START OF LOAD-LIST ELEMENT
*
CHAIN    EQU   *
         LTR   R9,R9               LAST LLE ??
         BZ    LOAD
         L     R10,LLECDPT(R9)     GET CDE-POINTER
         CLC   CDNAME(8,R10),0(R3) COMPARE NAMES
         BNE   STEP
         L     R15,CDENTPT(R10)    LOAD EP-ADDRESS
         B     TEST
STEP     L     R9,LLECHN(R9)       LOAD ADDRESS OF NEXT LLE
         B     CHAIN
*
LOAD     EQU   *
         LOAD  EPLOC=0(R3)
         LR    R15,R0              GET ENTRY POINT ADDRESS
         LA    R11,4               SET RET-CODE = 4
*
TEST     EQU   *                   IF 'CALL' ====>  EXEC UP
         ST    R15,0(R5)           STORE EP-ADDR
         CLC   0(4,R4),FLOAD       NO EXEC
         BE    XRETA
*
BRANCH   EQU   *
         ST    R11,0(R6)           STORE RETURN-CODE
         L     R15,0(R5)           GET EP-ADDR
         ST    R15,16(0,R13)       STORE EP-ADDR
         LM    R14,R12,12(R13)     RESTORE REGS
         BR    R15                 BRANCH TO UP
*
BLDL     EQU   *                   FUNC   = 'BLDL'
         MVC   MEMBNAME,0(R3)
         BLDL  0,MEMBLIST
         LTR   R15,R15
         BNZ   BLERR
         B     XRETA
*
BLERR    EQU   *                    MODULE BEI BLDL NICHT GEFUNDEN
         LA    R11,12
         B     XRETA
*
PARAERR  EQU   *                    PARAMETERLISTE FALSCH
         LA    R1,990
         ABEND (R1),DUMP            ABBRUCH
*
DLET     EQU   *
         DELETE EPLOC=0(R3)
         LTR   R15,R15
         BZ    XRETA
         LA    R11,12             DELETE NICHT ERFOLGREICH
*
XRETA    EQU   *
         ST    R11,0(R6)           STORE RET-CODE
         L     R13,SV13            RESTORE REG 13
         XRETURN
*
*
*
*     FUNKTION = PARM   +++   1.PARAMETER = A(PARMBLOCK)
*
*        PARMBLOCK:
*             MODULE-NAME
*             FUNKTION
*             DD-NAME LOAD-LIBRARY
*             RETURN-CODE
*             MOD.ENTRY-ADDR. (AUS CDE)
*             MOD.LOAD-ADDR.  (AUS XL)
*             MOD.LENGTH      (AUS XL)
*
*        ..... PARAMETER UP
*
PARMFU   EQU   *
         MVC   MEMBNAME,0(R3)        R3 ZEIGT AUF PARMBLOCK
         L     R5,4(R1)
         ST    R13,SV13       STORE REG 13
         L     R13,4(0,R13)   GET HIGH SA ADDR
         CLC   8(4,R3),FDLET  FUNC  = 'DLET'
         BE    DLETPA
         LTR   R5,R5
         BM    NOPA
*
         LA    R7,8(R1)       SAVE ADDR OF UP-PARAMETERLIST
         ST    R7,24(0,R13)
*
*        FUNCTION TEST
*
NOPA     EQU   *
         CLC   8(4,R3),FCALL              FUNC  = 'CALL'
         BE    CDEPA
         CLC   8(4,R3),FLOAD              FUNC  = 'LOAD'
         BE    CDEPA
         CLC   8(4,R3),FCADR              FUNC  = 'CADR'
         BE    BRANCHP
         CLC   8(4,R3),FBLDL              FUNC  = 'BLDL'
         BE    OPENDD
         LA    R11,24                     INVALID FUNCTION
         B     XRET
*
CDEPA    EQU   *
         L     R8,16           GET CVT-ADDRESS
         L     R8,CVTTCBP(R8)  GET POINTER TO TCB-DOUBLE WORD
         L     R8,4(R8)        GET CURRENT TCB-ADDRESS
*
         L     R9,TCBLLS(R8)   GET START OF LOAD-LIST ELEMENT
*
CHAINPA  EQU   *
         LTR   R9,R9               LAST LLE ??
         BZ    OPENDD
         L     R10,LLECDPT(R9)     GET CDE-POINTER
         CLC   CDNAME(8,R10),0(R3) COMPARE NAMES
         BNE   STEPPA
         L     R15,CDENTPT(R10)    LOAD EP-ADDRESS
         L     R5,CDXLMJP(R10)     GET XL-POINTER
         L     R6,8(R5)            LOAD MOD-LENGTH IN XL
         L     R7,12(R5)           LOAD MOD-ADDR IN XL
         B     TESTPA
STEPPA   L     R9,LLECHN(R9)       LOAD ADDRESS OF NEXT LLE
         B     CHAINPA
*
OPENDD   EQU   *
         CLC   12(8,R3),=CL8' '    DDNAME
         BE    NODD
         MVC   DDNAME,12(R3)
         LA    R6,DDLOAD
         USING IHADCB,R6
         MVC   DCBDDNAM,DDNAME
         OPEN  (DDLOAD,(INPUT))
         TM    DCBOFLGS,X'10'
         BNO   OPENERR             DD-KARTE VORHANDEN ?
*
         BLDL  DDLOAD,MEMBLIST
         LTR   R15,R15
         BNZ   BLDLERR
*
         CLC   8(4,R3),FBLDL       FUNC = BLDL
         BE    BLDLEND
         LOAD  DE=MEMBNAME,DCB=DDLOAD
         LA    R11,4
         CLOSE (DDLOAD)
         B     CDEPA
*
NODD     EQU   *                  KEINE LOAD-BIBLOTHEK ANGEGEBEN
         BLDL  0,MEMBLIST
         LTR   R15,R15
         BNZ   BLDLERR
*
         CLC   8(4,R3),FBLDL       FUNC = BLDL
         BE    BLDLEND
         LOAD  EPLOC=0(R3)
         LA    R11,4
         B     CDEPA
*
TESTPA   EQU   *                   IF 'CALL' ====>  EXEC UP
         ST    R15,24(R3)          STORE EP-ADDR AUS CDE
         ST    R7,28(R3)           STORE LOAD-ADDR AUS XL
         ST    R6,32(R3)           STORE LENGTH AUS XL
         MVI   32(R3),X'00'
         CLC   8(4,R3),FLOAD       NO EXEC
         BE    XRET
*
BRANCHP  EQU   *
         ST    R11,20(R3)           STORE RETURN-CODE
         L     R15,24(R3)           GET EP-ADDR
         ST    R15,16(0,R13)        STORE EP-ADDR
         LM    R14,R12,12(R13)      RESTORE REGS
         BR    R15                  BRANCH TO UP
*
DLETPA   EQU   *
         DELETE EPLOC=0(R3)
         LTR   R15,R15
         BZ    XRET
         LA    R11,12               DELETE NICHT ERFOLGREICH
         B     XRET
*
OPENERR  EQU   *
         LA    R11,16               DD-NAME FALSCH
         B     XRET
*
*
BLDLERR  EQU   *
         LA    R11,12               MODULE NICHT GEFUNDEN
BLDLEND  EQU   *
         CLC   12(8,R3),=CL8' '
         BE    XRET
         CLOSE (DDLOAD)
*
XRET     EQU   *
         ST    R11,20(R3)          STORE RET-CODE
         L     R13,SV13            RESTORE REG 13
         XRETURN
*
SV13     DS    A
FCALL    DC    CL4'CALL'
FLOAD    DC    CL4'LOAD'
FCADR    DC    CL4'CADR'
FBLDL    DC    CL4'BLDL'
FDLET    DC    CL4'DLET'
FPARM    DC    CL4'PARM'
DDNAME   DC    CL8' '
MEMBLIST DC    H'1'
         DC    H'58'
MEMBNAME DS    CL8
         DS    CL3
         DS    CL47
*
DDLOAD   DCB   DDNAME=LOADLIB,DSORG=PO,MACRF=(R)
*
         END   ,
