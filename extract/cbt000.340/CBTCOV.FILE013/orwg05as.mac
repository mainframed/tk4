./       ADD   LIST=ALL,NAME=ORWG05AS
         MACRO
         XPARM &WORK,&VALUE
         LR    R10,R1             SAVE ADRESS OF PARMAREA
         LA    R8,9(R10)          GET START OF VALUE
         LH    R9,=H'-1'          PREPARE LENGTH REGISTER
         LA    R6,256             MAX. NUMBER OF CHARACTERS
         LA    R5,&WORK+256        OINT BEYOND WORK AREA
         LR    R7,R8
S0&SYSNDX DS   0H
         CLI   0(R7),C' '         TEST FOR END
         BE    S5&SYSNDX
         CLI   0(R7),X'00'        TEST FOR END
         BE    S5&SYSNDX
         CLI   0(R7),C','         TEST FOR END
         BE    S5&SYSNDX
         CLI   0(R7),C'A'         TEST IF VALID
         BL    E1&SYSNDX          ISSUE ERROR MESSAGE IF NOT
         CLI   0(R7),C'9'         TEST IF VALID
         BH    E1&SYSNDX          ISSUE ERROR MESSAGE IF NOT
         CLI   0(R7),C'G'         TEST IF VALID
         BL    S2&SYSNDX          CONTINUE IF YES
         CLI   0(R7),C'0'         TEST IF VALID
         BL    E1&SYSNDX          ISSUE MESSAGE IF NOT
S2&SYSNDX DS   0H                 VALID BYTE
         LA    R7,1(,R7)          STEP TO NEXT BYTE
         LA    R9,1(,R9)          INCREASE MACHINE LENSTH
         BCTR  R5,0               STEP BACKWARD WITHIN WORKAREA
         BCT   R6,S0&SYSNDX       LOOP
         EJECT
S5&SYSNDX DS   0H
         CH    R9,=H'-1'          TEST IF TEXT PROVIDED
         BE    E2&SYSNDX          ISSUE ERROR MESSAGE IF NOT
         EX    R9,M&SYSNDX        MOVE VALUE
         LR    R8,R9              SAVE LENGTH
         SRL   R9,1               SHIFT ONE
         SLL   R9,1                BACK
         CR    R8,R9              COMPARE
         BE    E3&SYSNDX          ERROR IF ODD LENGTH
         LR    R9,R8              LOAD BACK
         LA    R4,&VALUE
S6&SYSNDX DS   0H
         MVC   C&SYSNDX,0(R5)     MOVE & BYTES
         MHEX  C&SYSNDX,X&SYSNDX  CONVERT
         MVC   0(4,R4),X&SYSNDX   MOVE 4 BYTE
         CH    R8,=H'7'           TEST IF MORE
         BNH   S7&SYSNDX          END IF NOT
         SH    R8,=H'8'           CHANGE REMAINING LENGTH 4
         LA    R4,4(,R4)          STEP FORWARD HEX
         LA    R5,8(,R5)          STEP FORWARD CHAR
         B     S6&SYSNDX          CONTINUE
E1&SYSNDX DS   0H
         L     R0,0(R10)
         WTO   'XSCAN01 INVALID CHARACTER DETECTED',MCSFLAG=(REG0)
         MRETURN RC=4
E2&SYSNDX DS   0H
         L     R0,0(R10)
         WTO   'XSCAN02 NO VALUE SPECIFIED',MCSFLAG=(REG0)
         MRETURN RC=4
E3&SYSNDX DS   0H
         L     R0,0(R10)
         WTO   'XSCAN03 ODD NUMBER OF CHARACTERS',MCSFLAG=(REG0)
         MRETURN RC=4
M&SYSNDX MVC   0(0,R5),0(R8)
X&SYSNDX DC    XL4'0'
C&SYSNDX DC    CL8'0'
S7&SYSNDX DS   0H
         MEND
         EJECT
SCAN     CSECT
         MBASIS
         XPARM WORK,VALUE         CONVERT PARAMETER
         SPIE  EXIT,(4)           NEW PICA
         ST    R1,SPOLD           SAVE OLD PICA
         L     R5,=X'00FFFFFF'    COAD HIGH VALUE
         LA    R9,1(,R9)          ADD 1 TO LENGTH
         SRL   R9,1               DIVIDE BY 2
         SR    R5,R9              SUBSTRACT LENGTH
         BCTR  R9,0               USE MACHINE LENGTH
         LA    R7,0               GET START ADDRESS
         LA    R4,1               INCREDEMT IS ONE
SC00     DS    0H
         C     R7,=A(SCAN)
         BNE   SC05
         L     R7,=A(SCANEND)
SC05     DS    0H
         EX    R9,SCCLC
         BE    SC20
SC10     DS    0H
         BXLE  R7,R4,SC00
         B     SCEND
SC20     DS    0H
         ST    R7,WR7
         UNPK  WORK(9),WR7(5)
         TR    WORK(8),TRTAB-240
         MVC   SCWTOR+39(8),WORK
         MVI   REPLY,0
         L     R0,0(R10)
         XC    WECB,WECB
SCWTOR   WTOR  'XSCAN04 EQUAL FOUND AT XXXXXXXX ENTER Y(YES) OR N (NO) *
               TO CONTINUE',REPLY,1,WECB,MCSFLAG=(REG0)
         WAIT  ECB=WECB
         CLI   REPLY,C'Y'
         BE    SC10
         CLI   REPLY,C'D'
         BNE   SCEND
         ABEND 123,DUMP
SCEND    DS    0H
         L     R0,0(R10)
         WTO   'XSCAN05 SCAN ENDS',MCSFLAG=(REG0)
         L     R5,SPOLD           OLD PICA
         SPIE  MF=(E,(R5))
         MRETURN
EXIT     DS    0H
         AH    R7,=H'4096'        ADD 4 K
         SRL   R7,12              SHIFT
         SLL   R7,12              TO CLEAR DISPLACEMENT
         BCTR  R7,0
         LA    R8,SC10            CHANGE
         STCM  R8,7,9(R1)         OPSW
         BR    R14
SPOLD    DS    F
SCCLC    CLC   0(0,R7),VALUE
WORK     DS    CL256
VALUE    DS    CL128
WECB     DC    F'0'
WR7      DS    F
TRTAB    DC    C'0123456789ABCDEF'
REPLY    DS    C
         LTORG
SCANEND  DC    0D'0'
         END
./       ADD   LIST=ALL,NAME=ORWG05BM
         MACRO
         MHEX  &IN,&OUT
.*       DAS MAKRO MHEX HAT ALS EINGABE EIN MAXIMAL 8 BYTES GROSSES
.*       FELD, DAS HEXADEZIMALE DATEN IN CHARACTERFORM ENTHAELT.
.*       ( Z. B. 012345678,0010BAFC,...). DIE ADRESSE DIESES FELDES
.*       WIRD MIT DEM PARAMETER  IN  UEBERGEBEN.
.*       OUT BEZEICHNET EIN 4 BYTES GROSSES FELD, DAS DIE VERDICHTETEN
.*       DATEN AUFNEHMEN SOLL.
.*
.*       BEISPIEL
.*
.*       IN    DC   C'0123ABCD'
.*       OUT   DC   XL4'0'
.*
.*       MHEX  IN,OUT
.*
.*       OUT HAT ANSCHLIESSEND DEN INHALT X'0123ABCD'
.*
.* SIEBERT/IBM 04.01.74
         XC    &IN.(8),=8X'E0'
         NC    &IN.(8),=8X'1F'
         TR  &IN+0(8),=X'00AABBCCDDEEFF00000000000000000000112233445566*
               77889900000000000000'
         MVC   F&SYSNDX+0(8),&IN
         PACK  F&SYSNDX+0(9),F&SYSNDX+0(9)
         MVC   &OUT+0(4),F&SYSNDX+4
         B     MH1&SYSNDX
F&SYSNDX DS    CL9
MH1&SYSNDX DS  0H
         MEND
./       ADD   LIST=ALL,NAME=ORWG05CM
         MACRO
&NAME    MBASIS &RA,&RE,&RC=,&TYPE=N,&MAXMUP=
         GBLB  &MTRB000            MUPTRACE ACTIVE
         GBLB  &MTRB004(2)         MUPTRACE MBASIS
         GBLA  &MBSA001            MBASIS COUNT
         GBLA  &MBSA002            MBASIS MAXMUP
         GBLB  &MBSB001            MBASIS PRESENT
         GBLB  &MBSB002            MBASIS RC=(R15)
         GBLB  &MBSB003            MBASIS TYPE=R
         GBLC  &MBSC001(30)        MBASIS &SYSECT
         GBLC  &MBSC002(30)        MBASIS &SYSNDX
         LCLA  &M
         LCLC  &T
&MBSA001 SETA  &MBSA001+1
         AIF   (&MBSA001 GT 30).E1
         AIF   (N'&SYSLIST LE 2).L0
         MNOTE 4,'MORE THAN TWO POSITIONAL OPERANDS. ONLY FIRST TWO USE*
               D'
.L0      ANOP
         AIF   ('&TYPE' EQ 'N').M3
         AIF   (T'&MAXMUP NE 'O').M0
         MNOTE 4,'MAXMUP MISSING. 20 ASSUMED'
&MBSA002 SETA  20
         AGO   .M3
.M0      AIF   (T'&MAXMUP EQ 'N').M2
.M1      MNOTE 8,'MAXMUP INVALID. 20 ASSUMED'
&MBSA002 SETA  20
         AGO   .M3
.M2      ANOP
&M       SETA  &MAXMUP
         AIF   (&M LE 0 OR &M GT 500).M1
&MBSA002 SETA  &MAXMUP
.M3      ANOP
         AIF   (&MBSB003).L4
         AIF   ('&TYPE' EQ 'R').L2
&T       SETC  '&TYPE'
         AIF   ('&TYPE' EQ 'N' OR '&TYPE' EQ 'S' OR '&TYPE' EQ 'T').L1
         MNOTE 8,'TYPE INVALID. N ASSUMED'
&T       SETC  'N'
.L1      ANOP
&NAME    MBASISN &RA,&RE,RC=&RC,TYPE=&T
         MEXIT
.L2      ANOP
         AIF   (NOT &MBSB001).L3
         MNOTE 8,'PRIOR MBASIS WAS NOT TYPE=R'
.L3      ANOP
&MBSB002 SETB  1
&MBSB003 SETB  1
         AIF   (NOT &MTRB000).L4
         MNOTE 8,'*** TRACE WURDE SPEZIFIZIERT FUER REENTRANT CODE ***'
         MNOTE 8,'*** TRACE-ROUTINE IST NICHT REENTRANT ***'
.L4      ANOP
&NAME    MBASISR &RA,&RE,RC=(R15),TYPE=R
         MEXIT
.E1      MNOTE 12,'MORE THAN 30 MBASIS. MACRO GENERATION TERMINATED'
         MEND
./       ADD   LIST=ALL,NAME=ORWG05DM
         MACRO
&NAME    MBASISN &RA,&RE,&RC=,&TYPE=N
         GBLB  &MTRB000            MUPTRACE ACTIVE
         GBLB  &MTRB004(2)         MUPTRACE MBASIS
         GBLA  &MBSA001            MBASIS COUNT
         GBLA  &MBSA002            MBASIS MAXMUP
         GBLB  &MBSB001            MBASIS PRESENT
         GBLB  &MBSB002            MBASIS RC=(R15)
         GBLC  &MBSC001(30)        MBASIS &SYSECT
         GBLC  &MBSC002(30)        MBASIS &SYSNDX
         LCLA  &R1,&R2,&V,&W,&CNT,&G,&L,&M
         LCLB  &A,&E,&S,&TS,&TT,&RCR
         LCLC  &R(11),&K(11),&N,&X
&G       SETA  &MBSA001
&M       SETA  &MBSA002
&MBSC001(&G) SETC '&SYSECT'
&MBSC002(&G) SETC '&SYSNDX'
&S       SETB  (&MBSB001)
&X       SETC  '&SYSNDX'
&TT      SETB  ('&TYPE' EQ 'T')
&TS      SETB  (&TT OR '&TYPE' EQ 'S')
&MBSB002 SETB  (&MTRB004(1))
         AIF   (T'&RC EQ 'O').L02
         AIF   ('&RC' EQ '(15)' OR '&RC' EQ '(R15)').L01
         MNOTE 8,'RC= PARAMETER NOT ''(R15)''. IGNORED'
         AGO   .L02
.L01     ANOP
&MBSB002 SETB  1
.L02     ANOP
&RCR     SETB  (&MBSB002)
         AIF   ('&RA' EQ '').L4
&A       SETB  1
         AIF   ('&RA'(1,1) EQ 'R').L2
         AIF   (T'&RA NE 'N').E1
         AIF   ('&RA' LT '2' OR '&RA' GT '12').E1
&R1      SETA  &RA
         AGO   .L8
.L2      ANOP
&W       SETA  K'&RA-1
&N       SETC  '&RA'(2,&W)
         AIF   (&W GT 1).L3
         AIF   ('&N' GE '2' AND '&N' LE '9').L6
         AGO   .E1
.L3      AIF   ('&N'(1,1) NE '1').E1
         AIF   ('&N'(2,1) GE '0' AND '&N'(2,1) LE '2').L6
.E1      MNOTE 4,'FIRST OPERAND MUST BE IN RANGE OF ''R2 - R12''. R3 US*
               ED'
.L4      ANOP
&R1      SETA  3
         AGO   .L8
.L6      ANOP
&R1      SETA  &N
.L8      AIF   ('&RE' EQ '').L22
&E       SETB  1
         AIF   (&A).L9
         MNOTE *,'FIRST OPERAND MISSING. R3 USED'
.L9      ANOP
         AIF   ('&RE'(1,1) EQ 'R').L10

         AIF   (T'&RE NE 'N').E2
         AIF   ('&RE' LT '3' OR '&RE' GT '12').E2
&R2      SETA  &RE
         AGO   .L16
.L10     ANOP
&W       SETA  K'&RE-1
&N       SETC  '&RE'(2,&W)
         AIF   (&W GT 1).L11
         AIF   ('&N' GE '3' AND '&N' LE '9').L14
         AGO   .E2
.L11     AIF   ('&N'(1,1) NE '1').E2
         AIF   ('&N'(2,1) GE '0' AND '&N'(2,1) LE '2').L14
.E2      MNOTE 12,'SECOND OPERAND MUST BE IN RANGE OF ''R3 - R12''. R12*
                USED'
.L12     ANOP
&R2      SETA  12
         AGO   .L16
.L14     ANOP
&R2      SETA  &N
.L16     AIF   (&R1 NE &R2).L18
         MNOTE 0,'FIRST AND SECOND OPERAND EQUAL. SECOND IGNORED'
&E       SETB  0
         AGO   .L22
.L18     AIF   (&R1 LT &R2).L20
         MNOTE 12,'SECOND OPERAND MUST BE GREATER THAN FIRST ONE. R12 U*
               SED'
         AGO   .L12
.L20     ANOP
&CNT     SETA  &R2-&R1
.L22     AIF   (NOT (&A OR &E)).L26
&R(1)    SETC  'R&R1'
&K(1)    SETC  ',R&R1'
         AIF   (NOT &E).L26
&W       SETA  2
.L24     ANOP
&R2      SETA  &R1+&W-1
&R(&W)   SETC  'R&R2'
&K(&W)   SETC  ',R&R2'
&W       SETA  &W+1
         AIF   (&W LE (&CNT+1)).L24
.L26     USING *,R15 .            ENTRY REGISTER USED AS BASE REGISTER
&W       SETA  K'&SYSECT
         AIF   (&W GT 1).L27
&W       SETA  2
.L27     ANOP
&W       SETA  &W+10+16
&V       SETA  &W+4+1+1
&V       SETA  &V/2
&V       SETA  &V*2
&NAME    B     &V.(0,R15) .       BRANCH AROUND IDENTIFIER
         DC    AL1(&W) .          LENGTH OF IDENTIFIER
         DC    CL&W'RWG-CSECT &SYSECT  &SYSTIME &SYSDATE'
         STM   R14,R12,12(R13) .  SAVE REGS INTO CALLING PROGRAMM
         CNOP  4,8 .              ALIGN TO FULLWORD BOUNDARY
&L       SETA  4+72
         AIF   (NOT &MTRB000).SV0
&L       SETA  4+72+24
.SV0     AIF   (NOT &TS).SV1

&L       SETA  4+72+24+72+&M*4
.SV1     AIF   (NOT &TT).SV2
&L       SETA  4+72+24+72+24+&M*4
.SV2     ANOP
         BAL   R14,*+&L .         LOAD SAVEAREA-ADDR-CALLED-PGM
SAVE&X   DC    18F'0' .           AND BRANCH AROUND SAVEAREA
         AIF   (NOT &MTRB000).SV3
TRAD&X   DS    0F                  RESERVED FOR TRACE-ROUTINE
         DC    X'00'               X'FF' IF TRACE-ROUTINE PRESENT
         DC    AL3(0)              ADDRESS OF TRACE-ROUTINE
TRMC&X   DC    X'04080C1014181C20' MACRO TYPE CODES
TRSV&X   DC    3F'0'               SAVEAREA FOR TRACE-ROUTINE
         AIF   (NOT &TS).SV7
         AGO   .SV4
.SV3     AIF   (NOT &TS).SV7
TRAD&X   DC    6F'0'               RESERVED FOR TRACE-ROUTINE
.SV4     ANOP
*                                  AREAS FOR REENTRANT MODULES
         DC    18F'0'              SYSTEM SAVEAREA
         AIF   (NOT &TT).SV6
TRRE&X   DC    A(0)                ADDRESS OF TRACE-ROUTINE
         DC    X'04080C1014181C20' MACRO TYPE CODES
         AIF   (NOT &MTRB000).SV5
         DC    3F'0'               SAVEAREA FOR TRACE-ROUTINE
         AGO   .SV6
.SV5     ANOP
TRSV&X   DC    3F'0'               SAVEAREA FOR TRACE-ROUTINE
.SV6     ANOP
         DC    &M.F'0'             SAVEAREAS FOR REENTRANT MUPEIN
.SV7     ANOP
         ST    R14,8(0,R13) .     STORE ADDR INTO CALLING PGM-SAVEAREA
         ST    R13,4(0,R14) .      STORE SAVEAREA-ADDR-CALLING-PGM HERE
         LA    R13,0(0,R14) .     LOAD ACTUAL SAVEAREA-ADDR INTO REG13
*                                 AND USE REG13 AS FIRST BASE REGISTER
         AIF   (NOT (&A OR &E)).L30
         LA    R14,1 .            USE ONE AS INDEX FOR NEXT BASE REGS
         LA    &R(1),4095(R14,R13)
         AIF   (NOT &E).L30
&W       SETA  2
.L28     ANOP
&R1      SETA  &W-1
         LA    &R(&W),4095(R14,&R(&R1))
&W       SETA  &W+1
         AIF   (&W LE (&CNT+1)).L28
.L30     AIF   (&MTRB000 OR &TT).TL1
         B     USER&X              BRANCH TO USER PROGRAMM
         AGO   .TL2
.TL1     B     TRAC&X              GO LOAD TRACE-ROUTINE
.TL2     ANOP
         SPACE 2
         DROP  R15 .              RELEASE REG15 AS BASE REGISTER
*                                 AND ESTABLISH NEW BASE REGISTERS
         USING SAVE&X,R13&K(1)&K(2)&K(3)&K(4)&K(5)&K(6)&K(7)&K(8)&K(9)&*
               K(10)&K(11)
         SPACE 2
         AIF   (&S OR &MBSB002).S1
MRETURN  EQU   * .                ENTRY FOR EXIT TO CALLING PROGRAMM
         AGO   .S2
.S1      ANOP
MRET&X   EQU   * .                ENTRY FOR EXIT TO CALLING PROGRAMM
.S2      AIF   (NOT &MTRB004(1)).TR1
         STM   R14,R0,TRSV&X       SAVE USER REGISTER
         L     R15,TRAD&X          LOAD TRACE-ROUTINE ADDRESS
         ICM   R0,8,TRMC&X+4       SET MACRO TYPE
         BALR  R14,R15             BRANCH TO TRACE-ROUTINE
         AIF   (NOT &RCR).TR1
         L     R15,TRSV&X+4        RESTORE USER RETURN-CODE
.TR1     L     R13,SAVE&X+4        LOAD SAVEAREA-ADR-CALLING-PGM
         AIF   (NOT &RCR).S21
         L     R14,12(0,R13) .    LOAD RETURN-ADDRESS
*                                 RETURN-CODE WAS PRELOADED INTO REG 15
         LM    R0,R12,20(R13) .   RESTORE REGS FOR CALLING-PGM
         AGO   .S41
.S21     ANOP
         LM    R14,R12,12(R13) .  RESTORE REGS FOR CALLING-PGM
         AIF   (&S).S3
RETCODE  EQU   *+3 .              RETURN-CODE  -  MODIFIED BY 'MRETURN'
         AGO   .S4
.S3      ANOP
RTCD&X   EQU   *+3 .              RETURN-CODE  -  MODIFIED BY 'MRETURN'
.S4      LA    R15,0 .            LOAD RETURN-CODE INTO REG 15
.S41     ANOP
         MVI   12(R13),255 .      SET RETURN-INDICATOR
         BR    R14 .              RETURN TO CALLING PROGRAMM
         AIF   (&S).S5
         SPACE 2
*                                      EQUATE REGISTERS TO SYMBOLS
         SPACE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
&MBSB001 SETB  1
.S5      ANOP
         AIF   (&TT).TR7
         AIF   (NOT &MTRB000).S6
.TR7     ANOP
         SPACE 2
         AIF   (NOT &MTRB004(1)).TR5
TRAC&X   NOP   TR03&X              BRANCH TO DO TRACE AFTER FIRST TIME
         AGO   .TR6
.TR5     ANOP
TRAC&X   NOP   USER&X              BRANCH TO USER-PGM AFTER FIRST TIME
.TR6     ANOP

         OI    TRAC&X+1,240        SET FIRST TIME SWITCH
         LR    R14,R13             LOAD ACTUAL SAVEAREA-ADDR
TR01&X   L     R14,4(0,R14)        LOAD LOWER SAVEAREA-ADDR
         CLC   TRAD&X,4(R14)       AND TEST IF ONE MORE IS AVAILABLE
         BZ    TR02&X              NO, SV-SAVEAREA REACHED
         CLI   72(R14),255         IS TRACE-ROUTINE PRESENT IN SYSTEM
         BNE   TR01&X              NO, GO TEST NEXT LOWER SAVEAREA
         MVC   TRAD&X,72(R14)      YES, MOVE TRACE-ROUTINE ADDRESS
         AIF   (NOT &TT).TR8
         MVC   TRRE&X,72(R14)      INTO BOTH AREAS
.TR8     ANOP
         AIF   (NOT &MTRB004(1)).TR2
         B     TR03&X              BRANCH TO DO TRACE
         AGO   .TR3
.TR2     ANOP
         B     USER&X              BRANCH TO USER PROGRAMM
.TR3     ANOP
         SPACE 1
TR02&X   STM   R15,R1,TRSV&X       SAVE USER PARAMETER REGISTER
         LOAD  EP=UPTRACE          LOAD TRACE-ROUTINE
         ST    R0,TRAD&X           SAVE ENTRY POINT
         MVI   TRAD&X,255          SET TRACE-ROUTINE INDICATOR
         AIF   (NOT &TT).TR9
         ST    R0,TRRE&X           THE SAME FOR
         MVI   TRRE&X,255          NEXT AREA ALSO
.TR9     ANOP
         LM    R15,R1,TRSV&X       RESTORE USER PARAMETER REGISTER
         AIF   (NOT &MTRB004(1)).TR4
         SPACE 1
TR03&X   STM   R14,R0,TRSV&X       SAVE USER REGISTER
         L     R15,TRAD&X          LOAD TRACE-ROUTINE ADDRESS
         LR    R0,R13              LOAD ID-REGISTER WITH SAVEAREA-ADDR
         ICM   R0,8,TRMC&X+3       SET MACRO TYPE
         BALR  R14,R15             BRANCH TO TRACE-ROUTINE
         LM    R14,R0,TRSV&X       RESTORE USER REGISTER
.TR4     ANOP
.S6      ANOP
         SPACE 2
USER&X   DC    0H'0' .            USER PROGRAMM STARTS HERE
         EJECT
         MEND
./       ADD   LIST=ALL,NAME=ORWG05EM
         MACRO
&NAME    MBASISR &RA,&RE,&RC=(R15),&TYPE=R
         GBLB  &MTRB004(2)         MUPTRACE MBASIS
         GBLA  &MBSA001            MBASIS COUNT
         GBLB  &MBSB001            MBASIS PRESENT
         GBLB  &MBSB002            MBASIS RC=(R15)
         GBLB  &MBSB003            MBASIS TYPE=R
         GBLC  &MBSC001(30)        MBASIS &SYSECT
         GBLC  &MBSC002(30)        MBASIS &SYSNDX
         LCLA  &R1,&R2,&V,&W,&CNT,&G
         LCLB  &A,&E,&S
         LCLC  &R(11),&K(11),&N,&X
&G       SETA  &MBSA001
&MBSC001(&G) SETC '&SYSECT'
&MBSC002(&G) SETC '&SYSNDX'
&S       SETB  (&MBSB001)
&X       SETC  '&SYSNDX'
         AIF   ('&RA' EQ '').L4
&A       SETB  1
         AIF   ('&RA'(1,1) EQ 'R').L2
         AIF   (T'&RA NE 'N').E1
         AIF   ('&RA' LT '2' OR '&RA' GT '12').E1
&R1      SETA  &RA
         AGO   .L8
.L2      ANOP
&W       SETA  K'&RA-1
&N       SETC  '&RA'(2,&W)
         AIF   (&W GT 1).L3
         AIF   ('&N' GE '2' AND '&N' LE '9').L6
         AGO   .E1
.L3      AIF   ('&N'(1,1) NE '1').E1
         AIF   ('&N'(2,1) GE '0' AND '&N'(2,1) LE '2').L6
.E1      MNOTE 4,'FIRST OPERAND MUST BE IN RANGE OF ''R2 - R12''. R3 US*
               ED'
.L4      ANOP
&R1      SETA  3
         AGO   .L8
.L6      ANOP
&R1      SETA  &N
.L8      AIF   ('&RE' EQ '').L22
&E       SETB  1
         AIF   (&A).L9
         MNOTE *,'FIRST OPERAND MISSING. R3 USED'
.L9      ANOP
         AIF   ('&RE'(1,1) EQ 'R').L10
         AIF   (T'&RE NE 'N').E2
         AIF   ('&RE' LT '3' OR '&RE' GT '12').E2
&R2      SETA  &RE
         AGO   .L16
.L10     ANOP
&W       SETA  K'&RE-1
&N       SETC  '&RE'(2,&W)
         AIF   (&W GT 1).L11
         AIF   ('&N' GE '3' AND '&N' LE '9').L14
         AGO   .E2
.L11     AIF   ('&N'(1,1) NE '1').E2
         AIF   ('&N'(2,1) GE '0' AND '&N'(2,1) LE '2').L14
.E2      MNOTE 12,'SECOND OPERAND MUST BE IN RANGE OF ''R3 - R12''. R12*
                USED'
.L12     ANOP
&R2      SETA  12
         AGO   .L16
.L14     ANOP
&R2      SETA  &N
.L16     AIF   (&R1 NE &R2).L18
         MNOTE 0,'FIRST AND SECOND OPERAND EQUAL. SECOND IGNORED'
&E       SETB  0
         AGO   .L22
.L18     AIF   (&R1 LT &R2).L20
         MNOTE 12,'SECOND OPERAND MUST BE GREATER THAN FIRST ONE. R12 U*
               SED'
         AGO   .L12
.L20     ANOP
&CNT     SETA  &R2-&R1
.L22     AIF   (&A OR &E).L23
         MNOTE *,'FIRST OPERAND MISSING. R3 USED'
.L23     ANOP
&R(1)    SETC  'R&R1'
&K(1)    SETC  ',R&R1'
         AIF   (NOT &E).L26
&W       SETA  2
.L24     ANOP
&R2      SETA  &R1+&W-1
&R(&W)   SETC  'R&R2'
&K(&W)   SETC  ',R&R2'
&W       SETA  &W+1
         AIF   (&W LE (&CNT+1)).L24
.L26     ANOP
*                                 ESTABLISH NEW BASE REGISTERS
         USING *&K(1)&K(2)&K(3)&K(4)&K(5)&K(6)&K(7)&K(8)&K(9)&K(10)&K(1*
               1)
&W       SETA  K'&SYSECT
         AIF   (&W GT 1).L27
&W       SETA  2
.L27     ANOP
&W       SETA  &W+10+16
&V       SETA  &W+4+1+1
&V       SETA  &V/2
&V       SETA  &V*2
&NAME    B     &V.(0,R15) .       BRANCH AROUND IDENTIFIER
         DC    AL1(&W) .          LENGTH OF IDENTIFIER
         DC    CL&W'RWG-CSECT &SYSECT  &SYSTIME &SYSDATE'
         STM   R14,R12,12(R13) .  SAVE REGS INTO CALLING PROGRAMM
         LA    &R(1),0(0,R15)      LOAD FIRST BASE REGISTER
         LA    R14,96(0,R13) .    LOAD SAVEAREA-ADDR-CALLED-PGM
         ST    R14,8(0,R13) .     STORE ADDR INTO CALLING PGM-SAVEAREA
         ST    R13,4(0,R14) .      STORE SAVEAREA-ADDR-CALLING-PGM HERE
         LA    R13,0(0,R14) .     LOAD ACTUAL SAVEAREA-ADDR INTO REG13
         AIF   (NOT &E).L30
         LA    R14,1 .            USE ONE AS INDEX FOR NEXT BASE REGS
&W       SETA  2
.L28     ANOP
&R1      SETA  &W-1
         LA    &R(&W),4095(R14,&R(&R1))
&W       SETA  &W+1
         AIF   (&W LE (&CNT+1)).L28
.L30     AIF   (&MTRB004(1)).TL1
         B     USER&X              BRANCH TO USER PROGRAMM
         AGO   .TL2
.TL1     B     TRAC&X              BRANCH TO DO TRACE
.TL2     ANOP
         SPACE 2
MRET&X   EQU   * .                ENTRY FOR EXIT TO CALLING PROGRAMM
         AIF   (NOT &MTRB004(1)).TR1
         STM   R14,R0,84(R13)      SAVE USER REGISTER
         L     R15,72(0,R13)       LOAD TRACE-ROUTINE ADDRESS
         ICM   R0,8,80(R13)        SET MACRO-TYPE
         BALR  R14,R15             BRANCH TO TRACE-ROUTINE
         L     R15,88(0,R13)       RESTORE USER RETURN-CODE
.TR1     L     R13,4(0,R13) .     LOAD SAVEAREA-ADR-CALLING-PGM
         L     R14,12(0,R13) .    LOAD RETURN-ADDRESS
*                                 RETURN-CODE WAS PRELOADED INTO REG 15
         LM    R0,R12,20(R13) .   RESTORE REGS FOR CALLING-PGM
         MVI   12(R13),255 .      SET RETURN-INDICATOR
         BR    R14 .              RETURN TO CALLING PROGRAMM
         AIF   (&S).S5
         SPACE 2
*                                      EQUATE REGISTERS TO SYMBOLS
         SPACE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
&MBSB001 SETB  1
.S5      ANOP
         AIF   (NOT &MTRB004(1)).S6
         SPACE 2
TRAC&X   STM   R14,R0,84(R13)      SAVE USER REGISTER
         L     R15,72(0,R13)       LOAD TRACE-ROUTINE ADDRESS
         LA    R0,48(0,&R(1))      LOAD ID-REGISTER WITH DUMMY-SAVEADDR
         ICM   R0,8,79(R13)        SET MACRO-TYPE
         BALR  R14,R15             BRANCH TO TRACE-ROUTINE
         LM    R14,R0,84(R13)      RESTORE USER REGISTER
.S6      ANOP
         SPACE 2
USER&X   DC    0H'0' .            USER PROGRAMM STARTS HERE
         EJECT
         MEND
./       ADD   LIST=ALL,NAME=ORWG05FM
         MACRO
         XPARM
PARMAREA DSECT
REG4     DS    F
TEXT     DS    CL124
PRMLEN   EQU   *-PARMAREA
         MEND
         MACRO
&NAME    MBASIS &RA,&RE,&RC=,&TYPE=N,&MAXMUP=
         GBLB  &MTRB000            MUPTRACE ACTIVE
         GBLB  &MTRB004(2)         MUPTRACE MBASIS
         GBLA  &MBSA001            MBASIS COUNT
         GBLA  &MBSA002            MBASIS MAXMUP
         GBLB  &MBSB001            MBASIS PRESENT
         GBLB  &MBSB002            MBASIS RC=(R15)
         GBLB  &MBSB003            MBASIS TYPE=R
         GBLC  &MBSC001(30)        MBASIS &SYSECT
         GBLC  &MBSC002(30)        MBASIS &SYSNDX
         LCLA  &M
         LCLC  &T
&MBSA001 SETA  &MBSA001+1
         AIF   (&MBSA001 GT 30).E1
         AIF   (N'&SYSLIST LE 2).L0
         MNOTE 4,'MORE THAN TWO POSITIONAL OPERANDS. ONLY FIRST TWO USE*
               D'
.L0      ANOP
         AIF   ('&TYPE' EQ 'N').M3
         AIF   (T'&MAXMUP NE 'O').M0
         MNOTE 4,'MAXMUP MISSING. 20 ASSUMED'
&MBSA002 SETA  20
         AGO   .M3
.M0      AIF   (T'&MAXMUP EQ 'N').M2
.M1      MNOTE 8,'MAXMUP INVALID. 20 ASSUMED'
&MBSA002 SETA  20
         AGO   .M3
.M2      ANOP
&M       SETA  &MAXMUP
         AIF   (&M LE 0 OR &M GT 500).M1
&MBSA002 SETA  &MAXMUP
.M3      ANOP
         AIF   (&MBSB003).L4
         AIF   ('&TYPE' EQ 'R').L2
&T       SETC  '&TYPE'
         AIF   ('&TYPE' EQ 'N' OR '&TYPE' EQ 'S' OR '&TYPE' EQ 'T').L1
         MNOTE 8,'TYPE INVALID. N ASSUMED'
&T       SETC  'N'
.L1      ANOP
&NAME    MBASISN &RA,&RE,RC=&RC,TYPE=&T
         MEXIT
.L2      ANOP
         AIF   (NOT &MBSB001).L3
         MNOTE 8,'PRIOR MBASIS WAS NOT TYPE=R'
.L3      ANOP
&MBSB002 SETB  1
&MBSB003 SETB  1
         AIF   (NOT &MTRB000).L4
         MNOTE 8,'*** TRACE WURDE SPEZIFIZIERT FUER REENTRANT CODE ***'
         MNOTE 8,'*** TRACE-ROUTINE IST NICHT REENTRANT ***'
.L4      ANOP
&NAME    MBASISR &RA,&RE,RC=(R15),TYPE=R
         MEXIT
.E1      MNOTE 12,'MORE THAN 30 MBASIS. MACRO GENERATION TERMINATED'
         MEND
./       ADD   LIST=ALL,NAME=ORWG05GM
         MACRO
&NAME    MRETURN &RT,&RC=,&RC1=,&RC2=
         GBLB  &MTRB004(2)         MUPTRACE MRETURN
         GBLA  &MBSA001            MBASIS COUNT
         GBLB  &MBSB001            MBASIS PRESENT
         GBLB  &MBSB002            MBASIS RC=(R15)
         GBLB  &MBSB003            MBASIS TYPE=R
         GBLC  &MBSC001(30)        MBASIS &SYSECT
         GBLC  &MBSC002(30)        MBASIS &SYSNDX
         LCLA  &A,&G
         LCLB  &R1,&R2,&R15
         LCLC  &T,&R,&C,&X
         AIF   (NOT &MBSB001).E7
&R15     SETB  (&MBSB002)
&X       SETC  '&SYSNDX'
&G       SETA  &MBSA001
.G1      AIF   ('&MBSC001(&G)' EQ '&SYSECT').G2
&G       SETA  &G-1
         AIF   (&G NE 0).G1
         AGO   .E7
.G2      AIF   (&R15 OR &G NE 1).G3
&R       SETC  'MRETURN'
&C       SETC  'RETCODE'
         AGO   .G4
.G3      ANOP
&T       SETC  '&MBSC002(&G)'
&R       SETC  'MRET&T'
&C       SETC  'RTCD&T'
         AIF   (&R15 AND '&RT' EQ '' AND T'&RC EQ 'O'                  *
               AND T'&RC1 EQ 'O' AND T'&RC2 EQ 'O').E8
.G4      AIF   ('&RT' EQ '' AND T'&RC EQ 'O').L0
         AIF   ('&RT' NE '' AND T'&RC NE 'O').R3
         AIF   ('&RT' EQ '').R4
.* FORMAT-15
         AIF   ('&RT' EQ 'RC').R1
         MNOTE 4,'POSITIONAL OPERAND INVALID. SET TO ''RC'''
.R1      AIF   (T'&RC1 EQ 'O' AND T'&RC2 EQ 'O').R2
         MNOTE 4,'ADDITIONAL KEYWORD PARAMETER. IGNORED'
.R2      ANOP
         AIF   (&R15).L7
&NAME    STH   R15,&C.-1               STORE RETURN-CODE INTO 'MBASIS'
         AGO   .L8
.R3      MNOTE 4,'POSITIONAL OPERAND AND RC= SPECIFIED. RC= USED'
.R4      ANOP
         AIF   (T'&RC1 EQ 'O' AND T'&RC2 EQ 'O').R41
         MNOTE 4,'ADDITIONAL KEYWORD PARAMETER. RC= USED'
.R41     ANOP
         AIF   ('&RC'(1,1) NE '(').R5
         AIF   ('&RC' EQ '(15)').R2
         AIF   ('&RC' EQ '(R15)').R2
         AIF   (&R15).R9
&NAME    STH   &RC,&C.-1           STORE RETURN-CODE INTO 'MBASIS'
         AGO   .L8
.R5      ANOP
         AIF   (T'&RC NE 'N').R7
         AIF   ('&RC' LT '0' OR '&RC' GT '4095').E9
&A       SETA  &RC
.R6      ANOP
&NAME    LA    R15,&A              LOAD RETURN-CODE
         AGO   .R8
.R7      ANOP
&NAME    L     R15,&RC             LOAD RETURN-CODE
.R8      AIF   (&R15).L8
         STH   R15,&C.-1           STORE RETURN-CODE INTO 'MBASIS'
         AGO   .L8
.R9      ANOP
&NAME    LR    R15,&RC             LOAD RETURN-CODE
.L8      AIF   (&MTRB004(1)).TR2
         B     &R                  BRANCH TO ENTRY IN 'MBASIS'
         SPACE 2
         MEXIT
.L0      AIF   (T'&RC1 EQ 'O').L1
&R1      SETB  1
.L1      AIF   (T'&RC2 EQ 'O').L2
&R2      SETB  1
.L2      AIF   (&R1 OR &R2).L3
.* FORMAT-O
.L7      AIF   (&MTRB004(1)).TR1
&NAME    B     &R                  BRANCH TO ENTRY IN 'MBASIS'
         SPACE 2
         MEXIT
.L3      AIF   (NOT (&R1 AND &R2)).L4
         MNOTE 4,'RC1 AND RC2 SPCIFIED. RC2 USED'
         AGO   .L6
.L4      AIF   (&R2).L6
.* FORMAT-1
         AIF   (T'&RC1 NE 'N').E1
         AIF   ('&RC1' LT '0' OR '&RC1' GT '255').E2
&A       SETA  &RC1
.L5      ANOP
         AIF   (&R15).R6
&NAME    MVI   &C.,&A                  MOVE RETURN-CODE INTO 'MBASIS'
         AGO   .L8
.L6      ANOP
.* FORMAT-2
         AIF   (T'&RC2 NE 'N').E4
         AIF   ('&RC2' LT '0' OR '&RC2' GT '4095').E5
&A       SETA  &RC2
         AGO   .R6
.TR1     ANOP
&NAME    BAL   R0,&R               BRANCH TO ENTRY IN 'MBASIS'
         AGO   .TR3
.TR2     ANOP
         BAL   R0,&R               BRANCH TO ENTRY IN 'MBASIS'
.TR3     ANOP
MRET&X   DC    C'&X'               IDENTIFIER
         SPACE 2
         MEXIT
.E1      MNOTE 4,'RC1 NOT NUMERIC. RC1=0 USED'
         AGO   .E3
.E2      MNOTE 4,'RC1 LESS 0 OR GREATER 255. RC1=0 USED'
.E3      ANOP
&A       SETA  0
         AGO   .L5
.E4      MNOTE 4,'RC2 NOT NUMERIC. RC2=0 USED'
         AGO   .E6
.E5      MNOTE 4,'RC2 LESS 0 OR GREATER 4095. RC2=0 USED'
.E6      ANOP
&A       SETA  0
         AGO   .R6
.E7      MNOTE 12,'''MRETURN'' USED WITHOUT PRIOR ''MBASIS'' IN THIS CS*
               ECT. MACRO IGNORED'
         MEXIT
.E8      MNOTE *,'RC NOT DEFINED. RC=0 USED'
         AGO   .E6
.E9      MNOTE 4,'RC LESS 0 OR GREATER 4095. RC=0 USED'
         AGO   .E6
         MEND
./       ADD   LIST=ALL,NAME=ORWG05HA
%%HISTORY.
AUTHOR(S).     SIEBERT, RAETZEL.
INSTALLATION.  RWG
               7000 STUTTGART
               GENOHAUS.
DATA WRITTEN.  09/09/77.
LAST UPDATE.   09/09/77.
REMARKS.
%%SYNTAX.
F X,SCAN,XYZABCD
.... XYZABCD    HEX.REPRAESENTATION OF SEARCHED VALUE
%%FUNCTION.
THE COMMAND 'SCAN' SCANS THE MEMORY FROM 000000-FFFFFF
                   UNTIL EQUAL IS FOUND
%%
/*
