./  ADD        NAME=UXXX01AP
MD3001   DIESES PROGRAMM ERSTELLT AUS DEN SMF-SAETZEN PRO JOB EINEN
         SATZ DER DIE GRUNDLAGE DER WEITEREN VERRECHNUNG DARSTELLT.
         MIT DEN ENTSPRECHENDEN LISTPROGRAMMEN WERDEN AUCH PRO GRUPPE
         UND BETRIEBSART ARBEITSPROTOKOLLE ERSTELLT.
 SMFSUCH: PROC(PARM) OPTIONS(MAIN);
          /* ****** DEFINITIONEN ****** */
          /* *** INPUTBAND *** */
         DCL TAPEIN FILE RECORD INPUT;
          /* *** OUTPUTDISK *** */
         DCL DISKOUT FILE RECORD OUTPUT;
          /* *** SMF-SAETZE *** */
          /* KONSTANTE FUER ALLE SAETZE */
         DCL 1 SMFSATZ,
               2 KONST BIT(8),
               2 SA BIT(8),
               2 TIME BINARY FIXED(31,0) UNAL,
               2 DATE DECIMAL FIXED(7),
               2 CPUID,
                 3 SYSID CHAR(2),
                 3 MODID CHAR(2),
               2 SATZ CHAR(6450);
     DCL PARM CHAR(100) VAR;
     DCL CHANG CHAR(2);
     DCL CHANGE PIC'99' DEF CHANG;
     DCL (PARM1,PARM2) DEC FIXED(7);
     DCL HSATZ(6450) CHAR(1) DEFINED SATZ;
          /* RECORDS-4,5,6,15,17 */
     DCL BETRART CHAR(1) DEFINED SATZ;
     DCL JOBNAME CHAR(8) DEFINED SATZ;
     DCL RDRSTTIME BIN FIXED(31,0) UNAL DEFINED SATZ POS(9);
     DCL RDRSTDATE DECIMAL FIXED(7) DEFINED SATZ POS(13);
     DCL USERID CHAR(8) DEFINED SATZ POS(17);
          /* RECORD-5 */
     DCL SERVUNIT BIN FIXED(31,0) UNAL DEFINED SATZ POS(63);
     DCL JOBINITT BIN FIXED(31,0) UNAL DEFINED SATZ POS(26);
     DCL JOBINITD DECIMAL FIXED(7) DEFINED SATZ POS(30);
     DCL FEHLDATE BIN FIXED(31,0) UNAL DEFINED SATZ POS(30);
     DCL SYSINCOUNT BIN FIXED(31,0) UNAL DEFINED SATZ POS(34);
     DCL RDRSPTIME BIN FIXED(31,0) UNAL DEFINED SATZ POS(41);
     DCL RDRSPDATE DECIMAL FIXED(7) DEFINED SATZ POS(45);
     DCL JIPCLASS CHAR(1) DEFINED SATZ POS(58);
     DCL PROGRAMMER CHAR(20) DEFINED SATZ POS(80);
     DCL CPUTIME BIT(24) DEFINED SATZ POS(793);
     DCL GRUPPE CHAR(1) DEFINED SATZ POS(105);
     DCL SACHSCHL CHAR(4) DEFINED SATZ POS(107);
     DCL COMPCODE(4) BIT(4) UNAL BASED(PC0);
     DCL WCODE(1) CHAR(4);
     DCL BCODE(4) CHAR(1) DEFINED WCODE POS(1);
          /* RECORD-4 */
     DCL STPINITT BIN FIXED(31,0) UNAL DEFINED SATZ POS(26);
     DCL STPINITD DECIMAL FIXED(7) DEFINED SATZ POS(30);
     DCL STINCOUNT BIN FIXED(31,0) UNAL DEFINED SATZ POS(34);
     DCL REGSIZE0 BIT(16) DEFINED SATZ POS(449);
     DCL STORUSED BIT(16) DEFINED SATZ POS(481);
     DCL LENG BIT(16) DEFINED SATZ POS(705);
     DCL DEVF(6) CHAR(1);
     DCL DEV CHAR(6) DEFINED DEVF;
          /* RECORD-6 */
     DCL OUTCLASS CHAR(1) DEFINED SATZ POS(25);
     DCL OUTCOUNT BIN FIXED(31,0) UNAL DEFINED SATZ POS(34);
          /* RECORD-15 */
     DCL DASD BIT(16) DEFINED SATZ POS(193);
     DCL TRACKS BIN FIXED(31,0) UNAL DEFINED SATZ POS(271);
          /* RECORD-26       BY VS WITH HASP ONLY */
     DCL SYSINHASP BIN FIXED(31,0) UNAL DEFINED SATZ POS(191);
          /* RECORD-34,35 */
     DCL USER CHAR(8) DEFINED SATZ;
     DCL LOGONT BIN FIXED(31,0) UNAL DEFINED SATZ POS(9);
     DCL LOGOND DECIMAL FIXED(7) DEFINED SATZ POS(13);
     DCL USERREG BIT(16) DEFINED SATZ POS(449);
          /* RECORD-34 */
     DCL TMP CHAR(6) DEFINED SATZ POS(41); /* FILTER PCF RECORDS */
     DCL LENG1 BIT(16) DEFINED SATZ POS(705);
     DCL DEVF1(6) CHAR(1);
     DCL DEV1 CHAR(6) DEFINED DEVF1;
          /* RECORD-35 */
     DCL TSOCPU BIT(24) DEFINED SATZ POS(793);
     DCL TSCOMPCODE(4) BIT(4) UNAL BASED(PC1);
     DCL TSWCODE(1) CHAR(4);
     DCL TSBCODE(4) CHAR(1) DEFINED TSWCODE POS(1);
          /* RECORD-42 */
     DCL PTSDATE DECIMAL FIXED(7);
     DCL PTSTIME BIN FIXED(31,0);
          /* *** AUSGABESATZ *** */
         DCL 1 ASATZ,
               2 SSCHL CHAR(4),
               2 JSDATE DECIMAL FIXED(7),
               2 JSTIME BIN FIXED(31,0),
               2 JNAME CHAR(8),
               2 RSDATE DECIMAL FIXED(7),
               2 RSTIME BIN FIXED(31,0),
               2 GRNR CHAR(1),
               2 PROGRAMMIERER CHAR(20),
               2 BA CHAR(1),
               2 RESERVE CHAR(5) INIT('00000'),
               2 CPU BIN FLOAT(53),
               2 HAUPTSP,
                 3 LOCK BIN FLOAT(53),
                 3 RJEK BIN FLOAT(53),
                 3 TSK BIN FLOAT(53),
               2 TPEINR,
                 3 RJE BIN FLOAT(53),
                 3 TS BIN FLOAT(53),
               2 DISK BIN FLOAT(53),
               2 TAPE BIN FLOAT(53),
               2 CARDRDR BIN FLOAT(53),
               2 CARDPUN BIN FLOAT(53),
               2 PRINT BIN FLOAT(53),
               2 OPTICAL BIN FLOAT(53),
               2 CODE CHAR(4),
               2 RES1 CHAR(4) INIT(' '),
               2 SERV BIN FLOAT(53),
               2 RES CHAR(16) INIT(' '),
               2 ELAPSE BIN FLOAT(53);
         DCL 1 LOESCHSA,
               2 LSSCHL CHAR(4) INIT(' '),
               2 LJSDATE DECIMAL FIXED(7) INIT(0),
               2 LJSTIME BIN FIXED(31,0) INIT(0),
               2 LJNAME CHAR(8) INIT(' '),
               2 LRSDATE DECIMAL FIXED(7) INIT(0),
               2 LRSTIME BIN FIXED(31,0) INIT(0),
               2 LGRNR CHAR(1) INIT(' '),
               2 LPROGRAMMIERER CHAR(20) INIT(' '),
               2 LBA CHAR(1) INIT(' '),
               2 LRESERVE CHAR(5) INIT('00000'),
               2 LCPU BIN FLOAT(53) INIT(0),
               2 LHAUPTSP,
                 3 LLOCK BIN FLOAT(53) INIT(0),
                 3 LRJEK BIN FLOAT(53) INIT(0),
                 3 LTSK BIN FLOAT(53) INIT(0),
               2 LTPEINR,
                 3 LRJE BIN FLOAT(53) INIT(0),
                 3 LTS BIN FLOAT(53) INIT(0),
               2 LDISK BIN FLOAT(53) INIT(0),
               2 LTAPE BIN FLOAT(53) INIT(0),
               2 LCARDRDR BIN FLOAT(53) INIT(0),
               2 LCARDPUN BIN FLOAT(53) INIT(0),
               2 LPRINT BIN FLOAT(53) INIT(0),
               2 LOPTICAL BIN FLOAT(53) INIT(0),
               2 LCODE CHAR(4),
               2 LRES1 CHAR(4) INIT(' '),
               2 LSERV BIN FLOAT(53) INIT(0),
               2 LRES CHAR(28) INIT(' '),
               2 LELAPSE BIN FLOAT(53) INIT(0);
         DCL 1 FIELD BASED(PP) UNAL,
               2 FILL CHAR(2),
               2 UNIT(4) BIT(4),
               2 EXCP BIN FIXED(31,0);
         DCL 1 FIELD1 BASED(PP1) UNAL,
               2 FILL1 CHAR(2),
               2 UNIT1(4) BIT(4),
               2 EXCP1 BIN FIXED(31,0);
          /* WORK-FELDER */
         DCL ZJOBNAME CHAR(8);
         DCL ZRDRST BIN FIXED(31,0);
         DCL ZRDRD DECIMAL FIXED(7);
         DCL WORK BIN FIXED(31);
         DCL RECH BIN FLOAT(53);
         DCL RECHST BIN FLOAT(53);
         DCL RECH1 BIN FLOAT(53);
         DCL RECH2 BIN FLOAT(53);
         DCL RECH3 BIN FLOAT(53);
         DCL RECH4 BIN FLOAT(53);
         DCL RECH5 BIN FLOAT(53);
         DCL RECH6 BIN FLOAT(53);
         DCL RECH7 BIN FLOAT(53);
         DCL RECH8 BIN FLOAT(53);
         DCL CONST BIN FIXED(31);
         DCL WERT BIN FLOAT(53);
         DCL WERT1 BIN FLOAT(53);
         DCL ELAPS BIN FLOAT(53);
         DCL WSTPELAPS BIN FLOAT(53);
         DCL STPELAPSE BIN FLOAT(53);
         DCL TSELAPS BIN FLOAT(53);
         DCL INCD BIN FLOAT(53);
         DCL OUTREC BIN FLOAT(53);
         DCL ZCPU BIN FLOAT(53);
         DCL ZCPUT BIN FLOAT(53);
         DCL ZREG BIN FLOAT(53);
         DCL ZREGT BIN FLOAT(53);
         DCL TSW BIN FLOAT(53);
         DCL TS1 BIN FLOAT(53);
         DCL TS2 BIN FLOAT(53);
         DCL TS3 BIN FLOAT(53);
         DCL TS4 BIN FLOAT(53);
         DCL TSCPU BIN FLOAT(53);
         DCL TRACK BIN FLOAT(53);
         DCL EXCPF BIN FLOAT(53);
         DCL TEXCP BIT(32);
         DCL TEXCPF BIN FLOAT(53);
         DCL WEXCPF BIN FLOAT(53);
         DCL WTEXCPF BIN FLOAT(53);
         DCL A BIN FIXED(15,0);
         DCL B BIN FIXED(15,0);
         DCL G DECIMAL FIXED(15,0);
         DCL J STATIC INITIAL(40);
         DCL K STATIC INITIAL(8);
         DCL M STATIC INITIAL(40);
         DCL EXCPFC BIN FLOAT(53);
         DCL EXCPFD BIN FLOAT(53);
         DCL EXCPFW BIN FLOAT(53);
         DCL HAUPTW BIN FLOAT(53);
         DCL OUTPUN BIN FLOAT(53);
         DCL FAK BIN FLOAT(53);
         DCL WDISK BIN FLOAT(53);
         DCL WORK1 BIN FLOAT(53);
         DCL ZHAUPT BIN FLOAT(53);
         DCL ZTSHAUPT BIN FLOAT(53);
         DCL WORK2 DECIMAL FIXED(15,2);
         DCL LBL(35) LABEL;
         DCL ANF BIT(1);
         DCL BASCH BIT(1);
         DCL T08 BIT(1);
         DCL ERR BIT(1);
         DCL END BIT(1);
         DCL SA15 BIT(1);
         DCL DEVTAB(7) BIN FIXED(15)STATIC;
         DCL DEVTAB1(7) BIN FIXED(15)STATIC;
         DCL BATS CHAR(1) INIT('D');
          /* ****** ANFANGSBEDINGUNGEN ****** */
         LBL(4)=SATZ4;
         LBL(5)=SATZ5;
         LBL(6)=SATZ6;
         LBL(15)=SATZ15;
         LBL(26)=SATZ26;
         LBL(34)=SATZ34;
         LBL(35)=SATZ35;
         ANF='1'B;
         ERR='0'B;
         END='0'B;
         SA15='0'B;
         OPEN FILE(TAPEIN),FILE(DISKOUT);
         ON RECORD(TAPEIN) GOTO AUSWAHL;
         ON ERROR CALL PLIDUMP('T,F,S,H');
         ON ENDFILE(TAPEIN) GOTO EOF;
        CHANG = SUBSTR(PARM,2,2);      /* PARAMETER FUER CHECKEN JAHR*/
        PARM1 = CHANGE;                /* FIXED = PICTURE */
        PARM1 = PARM1*1000;            /* 00YYTTTF  YY = *1000 */
        PARM2 = PARM1+366;             /* + 1 JAHR */
          /* ****** VERARBEITUNG ****** */
         GOTO LOESCH;
 LES1:   READ FILE(TAPEIN) INTO(SMFSATZ);
 AUSWAHL:IF SA=4 × SA=5 × SA=6 × SA=15 × SA=34 × SA=35
         × SA=26 THEN GOTO ZUORD;
                                                      ELSE GOTO LES1;
 ZUORD:  ISA=SA;
         /* FOLGENDE ABFRAGE SCHALTET FALSCHE JAHRESNUMMER DURCH */
         /* EINGABE DES OPERATORS BEI IPL AUS                    */
         IF RDRSTDATE < PARM1 × RDRSTDATE > PARM2 THEN
                             RDRSTDATE = PARM1+MOD(RDRSTDATE,1000);
         IF ANF THEN DO;
                         ANF='0'B;
                         ZJOBNAME=JOBNAME;
                         ZRDRST=RDRSTTIME;
                         ZRDRD=RDRSTDATE;
                         GOTO LABEL;
                     END;
         IF ZJOBNAME^=JOBNAME × ZRDRST^=RDRSTTIME ×
         ZRDRD^=RDRSTDATE THEN GOTO VERARB;
         ELSE GOTO LABEL;
 LABEL:  GOTO LBL(ISA);
 SATZ5:  SSCHL=SACHSCHL;                         /* AUSGABE-HEADER */
         /* FOLGENDE ABFRAGE SCHALTET FALSCHE JAHRESNUMMER DURCH */
         /* EINGABE DES OPERATORS BEI IPL AUS                    */
         IF JOBINITD < PARM1 × JOBINITD > PARM2 THEN
                             JOBINITD = PARM1+MOD(JOBINITD,1000);
         IF DATE < PARM1 × DATE > PARM2 THEN
                             DATE = PARM1+MOD(DATE,1000);
         IF FEHLDATE ^=0 THEN;
                         ELSE DO;
                                IF JOBINITT ^> TIME THEN JOBINITD=DATE;
                                                   ELSE JOBINITD=DATE-1;
                                 ERR='1'B;
                         END;
         JSTIME=JOBINITT;
         JSDATE=JOBINITD;
         JNAME=JOBNAME;                          /* AUSGABE-HEADER */
         RSDATE=RDRSTDATE;                       /* AUSGABE-HEADER */
         RSTIME=RDRSTTIME;                       /* AUSGABE-HEADER */
         GRNR=GRUPPE;                            /* AUSGABE-HEADER */
         PROGRAMMIERER=PROGRAMMER;               /* AUSGABE-HEADER */
         PC0=ADDR(HSATZ(38));
         BA=BETRART;                             /* AUSGABE-HEADER */
         DO I = 1 TO 4;
              L=COMPCODE(I)+1;
              BCODE(I)=SUBSTR('0123456789ABCDEF',L,1);
         END;
         CODE=WCODE(1);
         WORK=CPUTIME;
         BA = JIPCLASS;
         IF BA='R' THEN DO;
                                RJE=WORK;        /* 3A.) */
                                BASCH='1'B;
                                GOTO ETIME;
                             END;
         CPU=WORK;
 ETIME:  RECH1=TIME;
         RECH2=DATE;
         RECH3=JOBINITD;
         RECH4=JOBINITT;
         CONST=8640000;
         WERT=CONST;
         RECH=(RECH2-RECH3)*WERT;
         ELAPS=RECH1+RECH-RECH4;
       IF ELAPS>36000000 THEN JOBNAME='        '; /* JOB>100 STUNDEN*/
         INCD=SYSINCOUNT;                        /* CARDINPUT 1 */
         ELAPSE=ELAPS;                           /* 10.) */
         SERV=SERVUNIT;           /* SERVICE UNITS PER JOB */
         RECH=0;
         RECH1=0;
         RECH2=0;
         RECH3=0;
         RECH4=0;
         IF ERR THEN DO;
                        JSDATE=0;
                        ERR='0'B;
                     END;
         GOTO LES1;
 SATZ4:  IF SA15 THEN DO;
         /* FOLGENDE ABFRAGE SCHALTET FALSCHE JAHRESNUMMER DURCH */
         /* EINGABE DES OPERATORS BEI IPL AUS                    */
         IF STPINITD < PARM1 × STPINITD > PARM2 THEN
                             STPINITD = PARM1+MOD(STPINITD,1000);
         IF DATE < PARM1 × DATE > PARM2 THEN
                             DATE = PARM1+MOD(DATE,1000);
                         RECH5=TIME;
                         RECH6=DATE;
                         RECH7=STPINITD;
                         RECH8=STPINITT;
                         CONST=864000;
                         WERT1=CONST;
                         RECHST=(RECH6-RECH7)*WERT1;
                         WSTPELAPS=RECH5+RECHST-RECH8;
                         STPELAPSE=WSTPELAPS;
                         WDISK=TRACK*STPELAPSE;
                         DISK=DISK+WDISK;
                     END;
         J=UNSPEC(LENG);
 SATZ44: J=J+90;
         WORK2=UNSPEC(SUBSTR(SATZ,J,3));
         WORK1=WORK2;
         ZCPU=WORK1;
         ZREG=STORUSED;                          /* STEPUSERSTORAGE */
         ZHAUPT=ZHAUPT+(ZCPU*ZREG);
         M=(LENG-2)+91;
         J=91;
 LOOP:   PP=ADDR(HSATZ(J));
         DEVF=' ';
         DO K = 2 TO 4;
         DEVF(K)=SUBSTR('0123456789ABCDEF',UNIT(K)+1,1);
         END;
         EXCPF=EXCP;
         WEXCPF=WEXCPF+EXCPF;
         IF DEV=' 380' & EXCPF ^= 0 THEN DEVTAB(2)=1;
    ELSE IF DEV=' 381' & EXCPF ^= 0 THEN DEVTAB(3)=1;
    ELSE IF DEV=' 382' & EXCPF ^= 0 THEN DEVTAB(4)=1;
    ELSE IF DEV=' 383' & EXCPF ^= 0 THEN DEVTAB(5)=1;
    ELSE IF DEV=' 384' & EXCPF ^= 0 THEN DEVTAB(6)=1;
    ELSE IF DEV=' 385' & EXCPF ^= 0 THEN DEVTAB(7)=1;
    ELSE IF DEV=' 480' & EXCPF ^= 0 THEN DEVTAB(2)=1;
    ELSE IF DEV=' 481' & EXCPF ^= 0 THEN DEVTAB(3)=1;
    ELSE IF DEV=' 482' & EXCPF ^= 0 THEN DEVTAB(4)=1;
    ELSE IF DEV=' 483' & EXCPF ^= 0 THEN DEVTAB(5)=1;
    ELSE IF DEV=' 484' & EXCPF ^= 0 THEN DEVTAB(6)=1;
    ELSE IF DEV=' 485' & EXCPF ^= 0 THEN DEVTAB(7)=1;
    ELSE IF DEV=' 008' THEN T08='1'B;
    ELSE IF DEV=' 00C' THEN GOTO INCARD;
    ELSE IF DEV=' 50A' THEN GOTO INCARD;
    ELSE IF DEV=' 00D' THEN GOTO OUTCARD;
    ELSE IF DEV=' 00E' THEN GOTO OUTWTR;
    ELSE IF DEV=' 00F' THEN GOTO OUTWTR;
                            GOTO WEITER;
 INCARD: EXCPFC=EXCPFC+WEXCPF;                   /* CARDINPUT2 */
         GOTO WEITER;
 OUTCARD: EXCPFD=EXCPFD+WEXCPF;                  /* PUNCH2 */
         GOTO WEITER;
 OUTWTR: EXCPFW=EXCPFW+WEXCPF;                   /* WTROUTPUT2 */
 WEITER: J=J+8;
         WEXCPF=0;
         IF J < M THEN GOTO LOOP;
         GOTO LES1;
 SATZ6:  IF OUTCLASS='B' THEN OUTPUN=OUTCOUNT;   /* PUNCH1 */
                         ELSE OUTREC=OUTCOUNT;   /* WTROUTPUT1 */
         GOTO LES1;
 SATZ15: SA15='1'B;
         IF SUBSTR(DASD,3,1) THEN TRACK=TRACKS;
                             ELSE GOTO LES1;
         GOTO LES1;
 SATZ26:
         INCD = SYSINHASP;               /* CARDINPUT JCL+SYSIN */
         GOTO LES1;
 SATZ34: IF TMP ^= 'IKJEFT' THEN GOTO LES1; /* FILTER PCF RECORDS */
         J=UNSPEC(LENG1);
         J=J+90;
         WORK2=UNSPEC(SUBSTR(SATZ,J,3));
         WORK1=WORK2;
         ZCPUT=WORK1;
         ZREGT=USERREG;
         ZTSHAUPT=ZTSHAUPT+(ZCPUT*ZREGT);
         N=(LENG1-2)+91;
         J=91;
 LOOPTS:  PP1=ADDR(HSATZ(J));
         DEVF1=' ';
         DO K = 2 TO 4;
         DEVF1(K)=SUBSTR('0123456789ABCDEF',UNIT1(K)+1,1);
         END;
         TEXCPF=EXCP1;
         WTEXCPF=WTEXCPF+TEXCPF;
         IF DEV1=' 380' & TEXCPF ^= 0 THEN DEVTAB1(2)=1;
         ELSE IF DEV1=' 381' & TEXCPF ^= 0 THEN DEVTAB1(3)=1;
         ELSE IF DEV1=' 382' & TEXCPF ^= 0 THEN DEVTAB1(4)=1;
         ELSE IF DEV1=' 382' & TEXCPF ^= 0 THEN DEVTAB1(4)=1;
         ELSE IF DEV1=' 383' & TEXCPF ^= 0 THEN DEVTAB1(5)=1;
         ELSE IF DEV1=' 384' & TEXCPF ^= 0 THEN DEVTAB1(6)=1;
         ELSE IF DEV1=' 385' & TEXCPF ^= 0 THEN DEVTAB1(7)=1;
         ELSE IF DEV1=' 480' & TEXCPF ^= 0 THEN DEVTAB1(2)=1;
         ELSE IF DEV1=' 481' & TEXCPF ^= 0 THEN DEVTAB1(3)=1;
         ELSE IF DEV1=' 482' & TEXCPF ^= 0 THEN DEVTAB1(4)=1;
         ELSE IF DEV1=' 483' & TEXCPF ^= 0 THEN DEVTAB1(5)=1;
         ELSE IF DEV1=' 484' & TEXCPF ^= 0 THEN DEVTAB1(6)=1;
         ELSE IF DEV1=' 485' & TEXCPF ^= 0 THEN DEVTAB1(7)=1;
         ELSE IF DEV1=' 00D' THEN GOTO OUTCART;
         ELSE IF DEV1=' 00E' THEN GOTO TOUTWTR;
         ELSE IF DEV1=' 00F' THEN GOTO TOUTWTR;
                                  GOTO TWEITER;
 OUTCART: EXCPFD=EXCPFD+WTEXCPF;                 /* PUNCH2 */
         GOTO TWEITER;
 TOUTWTR: EXCPFW=EXCPFW+WTEXCPF;                 /* WTROUTPUT2 */
 TWEITER:J=J+8;
         WTEXCPF=0;
         IF J < N THEN GOTO LOOPTS;
         GOTO LES1;
 SATZ35: SSCHL=SACHSCHL;
         /* FOLGENDE ABFRAGE SCHALTET FALSCHE JAHRESNUMMER DURCH */
         /* EINGABE DES OPERATORS BEI IPL AUS                    */
         IF LOGOND < PARM1 × LOGOND > PARM2 THEN
                             LOGOND = PARM1+MOD(LOGOND,1000);
         IF DATE < PARM1 × DATE > PARM2 THEN
                             DATE = PARM1+MOD(DATE,1000);
         JSDATE=LOGOND;
         JSTIME=LOGONT;
         JNAME=JOBNAME;
         GRNR=GRUPPE;
         BA=BATS;
         TS1=TIME;
         TS2=DATE;
         TS3=LOGOND;
         TS4=LOGONT;
         CONST=8640000;
         WERT=CONST;
         TSW=(TS2-TS3)*WERT;
         TSELAPS=TS1+TSW-TS4;
     IF TSELAPS>36000000 THEN JOBNAME='        '; /* JOB>100 STUNDEN*/
         TS=TSELAPS;                             /* 3B.) */
         TSCPU=TSOCPU;                           /* TSOCPUTIME */
         CPU=TSCPU;
         PC1=ADDR(HSATZ(38));
         DO I = 1 TO 4;
              L=TSCOMPCODE(I)+1;
              TSBCODE(I)=SUBSTR('0123456789ABCDEF',L,1);
         END;
         CODE=TSWCODE(1);
         SERV=SERVUNIT;           /* SERVICE UNITS PER SESSION */
         GOTO LES1;
 VERARB: CARDRDR=INCD+EXCPFC;
         IF BASCH THEN RJEK=ZHAUPT;
                ELSE LOCK=ZHAUPT;
         CARDPUN=OUTPUN+EXCPFD;
         PRINT=OUTREC+EXCPFW;
         IF T08 THEN OPTICAL=ELAPS;
         DO I = 2 TO 7;
         DEVTAB(1)=DEVTAB(1)+DEVTAB(I);
         END;
         FAK=DEVTAB(1);
         TAPE=FAK*ELAPS;
         TSK=ZTSHAUPT;
         IF END THEN GOTO AUSGAB;
         ZJOBNAME=JOBNAME;
         ZRDRST=RDRSTTIME;
         /* FOLGENDE ABFRAGE SCHALTET FALSCHE JAHRESNUMMER DURCH */
         /* EINGABE DES OPERATORS BEI IPL AUS                    */
         IF RDRSTDATE < PARM1 × RDRSTDATE > PARM2 THEN
                             RDRSTDATE = PARM1+MOD(RDRSTDATE,1000);
         ZRDRD=RDRSTDATE;
 AUSGAB: IF JNAME='        ' THEN GOTO LOESCH;
           WRITE FILE(DISKOUT) FROM(ASATZ);
 LOESCH:  WORK=0;RECH=0;RECH1=0;RECH2=0;RECH3=0;RECH4=0;CONST=0;
         WERT=0;ELAPS=0;TSELAPS=0;INCD=0;OUTREC=0;ZCPU=0;ZREG=0;
         ZREGT=0;TSW=0;TS1=0;TS2=0;TS3=0;TS4=0;TSCPU=0;TRACK=0;
                EXCPF=0;TEXCP=0;TEXCPF=0;WEXCPF=0;WTEXCPF=0;A=0;B=0;
         EXCPFC=0;EXCPFD=0;EXCPFW=0;HAUPTW=0;OUTPUN=0;FAK=0;DEVTAB=0;
         RECH5=0;RECH6=0;RECH7=0;RECH8=0;WERT1=0;RECHST=0;WDISK=0;
         ASATZ=LOESCHSA;T08='0'B;BASCH='0'B;ZHAUPT=0;ZTSHAUPT=0;
         WSTPELAPS=0;
         IF ANF THEN GOTO LES1;
                ELSE IF END THEN GOTO ENDE;
                            ELSE GOTO LABEL;
 EOF:    END='1'B;
         GOTO VERARB;
 ENDE:   CLOSE FILE(TAPEIN ),FILE(DISKOUT);
         END SMFSUCH;
