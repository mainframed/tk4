         TITLE 'STORGMAP         AUFBAU VIRTUELLER SPEICHER     '
STORGMAP CSECT
         REG
         SPACE 3
***********************************************************************
*                                                                     *
*      PROGRAM-ID. VIRT.                                              *
*      AUTHOR. PGM K1VIRT :           HR. KNOEFERL, ALLIANZ MUENCHEN. *
*              ERWEITERT            : FR. LAMPARTER, RWG.             *
*      INSTALLATION. RWG, STUTTGART.                                  *
*      DATE-WRITTEN. 29. 07. 1982.                                    *
*      REMARKS.                                                       *
*                                                                     *
*          DAS PROGRAMM RZSYA23 GIBT INFORMATIONEN UEBER DEN          *
*          AUFBAU DES VIRTUELLEN SPEICHERS AUS.                       *
*                                                                     *
*          FEHLENDE ADDRESSEN SIND MANUELL AUS AMBLIST UND            *
*          DUMP ZU ERMITTELN.                                         *
*                                                                     *
***********************************************************************
         EJECT
*
         XSAVE  R12,SVA,STORGMAP
*
         OPEN  (LISTE,(OUTPUT))
*
*
* HEADLINE
*
         L     R3,16                    A(CVT)
         L     R3,196(R3)               A(SMCA)
         MVC   HEAD+40(4),16(R3)        SID
         CALL  DATE,(HEAD+28),VL
*
* VIRTUAL STORAGE AUS CVT
*
         L     R3,16                    LOAD CVT
* NUCLEUS BOUNDARY
         L     R6,X'80'(R3)
         BAL   R10,HEX
         MVC   CVT80+43(6),VIRT1+1
         BAL   R10,CONV
         MVC   CVT80(6),VIRT1+1
* V=V BOUNDARY
         L     R6,X'11C'(R3)
         BAL   R10,HEX
         MVC   CVT11C+43(6),VIRT1+1
         BAL   R10,CONV
         MVC   CVT11C(6),VIRT1+1
         MVC   CVT11C1+26(6),VIRT1+1
* CSA BOUNDARY
         L     R6,X'1A0'(R3)
         ST    R6,CSAEND
         BAL   R10,HEX
         MVC   CVT1A0+43(6),VIRT1+1
         BAL   R10,CONV
         MVC   CVT1A0(6),VIRT1+1
         MVC   CVT1A01+26(6),VIRT1+1
*
         L     R4,X'230'(R3)       GDA
         L     R4,8(,R4)           CSA PQE
         L     R4,20(R4)           CSA-SIZE
*
         LR    R6,R4               SIZE --> BILD
         BAL   R10,CONV
         MVC   CSALEN+15(6),VIRT1+1
*
         L     R6,CSAEND
         AR    R6,R4
         BAL   R10,HEX
         MVC   CSABEG+43(6),VIRT1+1
         BAL   R10,CONV
         MVC   CSABEG(6),VIRT1+1
* LPA BOUNDARY
         SR    R6,R6
         ICM   R6,7,X'169'(R3)
         BAL   R10,HEX
         MVC   CVT169+43(6),VIRT1+1
         BAL   R10,CONV
         ST    R7,PLPAEND
         MVC   CVT169(6),VIRT1+1
* VIRT BOUNDARY
         L     R6,X'A4'(R3)
         ST    R6,HIGHADD
         BAL   R10,HEX
         MVC   CVTA4+43(6),VIRT1+1
         XC    DW,DW
         LA    R8,1024
         SRDA  R6,32
         DR    R6,R8
         LA    R7,1(,R7)
         CVD   R7,DW
         MVC   VIRT1(7),=X'4020204B202120'
         ED    VIRT1(7),DW+5
         MVC   CVTA4(6),VIRT1+1
* SQA BOUNDARY
         L     R4,X'230'(R3)       GDA
         L     R4,24(,R4)          POINTER SQA-SPQE
         L     R4,4(,R4)           DQE
         L     R4,12(R4)           SQA-SIZE
*
         LR    R6,R4               SIZE --> BILD
         BAL   R10,CONV
         MVC   SQALEN+15(6),VIRT1+1
*
         L     R6,HIGHADD
         SR    R6,R4
         LA    R6,1(,R6)
         BAL   R10,HEX
         MVC   SQAEND+43(6),VIRT1+1
         BAL   R10,CONV
         MVC   SQAEND(6),VIRT1+1
*
         L     R6,PLPAEND          PLPA-SIZE
         SR    R7,R6
         CVD   R7,DW
         MVC   VIRT1(7),=X'4020204B202120'
         ED    VIRT1(7),DW+5
         MVC   PLPALEN+15(6),VIRT1+1     SIZE --> BILD
*
* USER REG (CALCULATE)
         L     R6,X'1A0'(R3)
         L     R7,X'11C'(R3)
         SR    R6,R7
         BAL   R10,CONV
         MVC   UREG+26(6),VIRT1+1
*
* AUSGABE DES BILDES AUF LISTE
*
         MVI   DBER,C'1'
         PUT   LISTE,DBER
         MVI   DBER,C' '
         LA    R6,(TABEND-TABANF)/L'HEAD
         LA    R7,TABANF
*
AA10     MVC   DBER+10(L'HEAD),0(R7)
         PUT   LISTE,DBER
*
         LA    R7,50(R7)
         BCT   R6,AA10
*
         CLOSE (LISTE)
*
         XRETURN 0
*
*
CONV     XC    DW,DW
         LA    R8,1024
         SRDA  R6,32
         DR    R6,R8
         CVD   R7,DW
         MVC   VIRT1(7),=X'4020204B202120'
         ED    VIRT1(7),DW+5
         BR    R10
*
HEX      ST    R6,DW
         UNPK  DW(9),DW(5)
         TR    DW,CCTAB-240
         MVC   VIRT1+1(6),DW+2
         BR    R10
         EJECT
*
*     DEFINITIONEN
*
CCTAB    DC    CL16'0123456789ABCDEF'
*
TABANF   EQU   *
HEAD     DC CL50'     VIRTUAL STORAGE LAYOUT XX.XX.XXXX  SSSS      '
         DC CL50'                                                  '
         DC CL50'                                                  '
         DC CL50'                                                  '
CVTA4    DC CL50'00.000 K --> ×-----------------------× <-- 000000 '
         DC CL50'             ×SYSTEM QUEUE AREA      ×            '
SQALEN   DC CL50'             ×(      K)              ×            '
SQAEND   DC CL50'00.000 K --> ×-----------------------× <-- 000000 '
         DC CL50'             ×PAGEABLE LINK PACK AREA×            '
PLPALEN  DC CL50'             ×(      K)              ×            '
CVT169   DC CL50'00.000 K --> ×-----------------------× <-- 000000 '
         DC CL50'             ×MODIFIED LPA           ×            '
         DC CL50'             ×-----------------------×            '
         DC CL50'             ×PAGEABLE BLDL TABLE    ×            '
         DC CL50'             ×-----------------------×            '
         DC CL50'             ×PSA (4K)               ×            '
CSABEG   DC CL50'00.000 K --> ×-----------------------× <-- 000000 '
         DC CL50'             ×COMMON SERVICE AREA    ×            '
         DC CL50'             ×                       ×            '
CSALEN   DC CL50'             ×(      K)              ×            '
CVT1A0   DC CL50'00.000 K --> ×=======================× <-- 000000 '
         DC CL50'             ×LSQA U. SWA            ×            '
         DC CL50'             ×-----------------------×            '
CVT1A01  DC CL50'             ×V=V REGION  000000 K   ×            '
CVT11C1  DC CL50'             ×         -  000000 K   ×            '
         DC CL50'             ×                       ×            '
UREG     DC CL50'             ×         =  000000 K   ×            '
         DC CL50'             ×                       ×            '
CVT11C   DC CL50'00.000 K --> ×-----------------------× <-- 000000 '
         DC CL50'             ×V= R REGION            ×            '
         DC CL50'             ×-----------------------×            '
         DC CL50'             ×SYSTEM REGION          ×            '
CVT80    DC CL50'00.000 K --> ×=======================× <-- 000000 '
         DC CL50'             ×RMS NUC. EXTENSION     ×            '
         DC CL50'             ×-----------------------×            '
         DC CL50'             ×FIXED LPA              ×            '
         DC CL50'             ×-----------------------×            '
         DC CL50'             ×FIXED BLDL             ×            '
         DC CL50'...... K --> ×-----------------------× <-- ...... '
         DC CL50'             ×NUCLEUS LOAD MODULE    ×            '
         DC CL50'             ×                       ×            '
         DC CL50'     0 K --> ×-----------------------× <-- 000000 '
         DC CL50'                                                  '
         DC CL50'SIEHE DEBUGGING HANDBOOK VOLUME 1 S. 5.73         '
TABEND   EQU   *
*
SAVE     DS    18F
VIRT1    DS    CL7
         DS    0H
HIGHADD  DS    CL4
PLPAEND  DS    CL4
CSAEND   DS    CL4
DW       DS    D
         DS    C
DBER     DC    CL133' '
*
LISTE    DCB   MACRF=(PM),                                             *
               DDNAME=LISTE,                                           *
               DSORG=PS
         LTORG
*
         END
