UR235500 TITLE 'OPTIMALE BLOCKGROESSEN - RECHENROUTINE VSAM'
         MACRO
&NAME    QINIT &BASEREG=13,&CSECT=CSECT,&EQU=(,R),&SAVE=(,SAVEAREA),   *
               &RETURN=(,RETURN)
.*
.*
.*       MACRO  QINIT                   INITIATE AN ASSEMBLER-PROGRAM
.*---------------------------------------------------------------------
.*
.*       THE PURPOSE OF THIS MACRO IS TO GENERATE THE NECESSARY
.*       INSTRUCTIONS FOR A CSECT, REGISTER EQUATES, SAVE-MACRO,
.*       DEFINING AND ESTABLISHING A BASE REGISTER, DEFINING A
.*       SAVEAREA AND CHAINING IT TO THE NEXT HIGHER ONE AND FINALLY
.*       TO GENERATE THE RETURN MACRO INCLUDING RESTORING OF SAVE-
.*       AREA ADDRESSES
.*
.*       ONLY KEYWORD OPERANDS ARE USED BY QINIT
.*
.*       THE SUBLIST-OPERANDS CAN BE CODED AS FOLLOWING:
.*          1. IF BOTH SUBLIST-OPERANDS ARE NEEDED, WRITE THE OPERANDS
.*             ENCLOSED IN PARANTHESES, SEPARATED BY A COMMA
.*          2. IF ONLY THE SECOND SUBLIST-OPERAND IS NEEDED, WRITE
.*             ENCLOSED IN PARANTHESES A COMMA FOLLOWED BY THIS OPERAND
.*             THE FIRST SUBLIST-OPERAND WILL BE OMITTED
.*          3. IF ONLY THE FIRST SUBLIST-OPERAND IS NEEDED, WRITE
.*            A) ONLY THIS OPERAND WITHOUT PARANTHESES, IF THE SECOND
.*               SUBLIST-OPERAND SHOULD BE THE DEFAULT VALUE     OR
.*            B) ENCLOSED IN PARANTHESES THIS OPERAND, FOLLOWED BY A
.*               COMMA, IF THE SECOND SUBLIST-OPERAND SHOULD BE OMITTED
.*
.*       ALL OPERANDS ARE OPTIONAL
.*
.*       IF NO OPERANDS ARE SPEZIFIED, THE DEFAULT VALUES WILL BE
.*       ASSUMED
.*
.*       POSSIBLE OPERANDS:
.*
.*       BASEREG=N       WHERE N IS ANY NUMBER FROM 1 TO 15
.*                       THIS REGISTER IS ESTABLISHED AS A BASE
.*                       REGISTER
.*
.*                       REGISTER 0 IS RECOCNIZED AS AN INVALID VALUE.
.*                       FOR 1,14 AND 15 WARNINGS ARE PRINTED.
.*                       EXCEPT FOR 13 AND 15 THE VALUE IS
.*                       LOADED INTO THE REGISTER BY MEANS OF A
.*                       BALR INSTRUCTION
.*
.*                       FOR 13 THE SAVEAREA ADDRESS IS LOADED
.*                       (IF THE SAVE IS SUPPRESSED (SEE KEYWORD SAVE)
.*                       AND BASEREG=13, THE VALUE IS LOADED BY MEANS
.*                       OF A BALR INSTRUCTION)
.*
.*                       FOR 15 IT IS ASSUMED THAT IT STILL CONTAINS
.*                       THE VALUE OF * (E.G. THE EP-ADDRESS),
.*                       ONLY A USING WILL BE GENERATED
.*
.*                       THE BASE REGISTER IS ALSO EQUATED TO THE
.*                       SYMBOL 'BASEREG'
.*
.*                       IF THIS OPERAND IS OMITTED 13 IS ASSUMED
.*
.*       BASEREG=        IF THE OPERAND IS NULLIFIED NO BASEREGISTER
.*                       WILL BE DEFINED
.*
.*       CSECT=START     A START INSTRUCTION IS USED INSTEAD OF CSECT
.*
.*                       IF OMITTED, A CSECT-INSTRUCTION WILL BE
.*                       GENERATED
.*
.*       CSECT=          IF NULLIFIED NO CSECT INSTRUCTION IS GENERATED
.*
.*       EQU=(ONLY,REG)  IF 'ONLY' IS CODED, ONLY EQUATE STATEMENTS
.*                       WILL BE GENERATED. ALL OTHER OPERANDS ARE BY-
.*                       PASSED
.*
.*                       INSTEAD OF 'REG' ANY VALID NAME FOR REGISTER-
.*                       EQUATES CAN BE CODED
.*
.*                       IF THE EQU-OPERAND IS OMITTED, THE DEFAULT
.*                       VALUE WILL BE ASSUMED (EQU=(,R))
.*
.*       EQU=            IF NULLIFIED, NO EQUATES WILL BE GENERATED
.*
.*       SAVE=(ID,LABEL) INSTEAD OF 'ID' ANY VALID CHARACTERS ALLOWED
.*                       IN THE ID-FIELD OF A SAVE MACRO CAN BE CODED
.*
.*                       IF THE ID-SUBOPERAND IS OMITTED AND A CSECT-
.*                       NAME IS GENERATED, THIS NAME WILL BE SUBSTITU-
.*                       TED
.*
.*                       INSTEAD OF 'LABEL' ANY SYMBOL VALID IN A NAME-
.*                       FIELD CAN BE CODED. THIS SYMBOL WILL APPEAR IN
.*                       THE NAME FIELD OF THE SAVEAREA
.*
.*                       IF 'LABEL' IS OMITTED, NO NAME WILL BE
.*                       GENERATED
.*
.*                       IF INSTEAD OF 'LABEL'  'NO' IS CODED NO SAVE-
.*                       AREA IS GENERATED AND SAVE-AREA-CHAINING IS
.*                       SUPPRESSED
.*
.*       SAVE=           IF NULLIFIED, THE GENERATION OF A SAVE-ROUTINE
.*                       WILL BE SUPPRESSED
.*
.*       RETURN=(RC,LABEL) INSTEAD OF 'RC' ANY VALID OPERAND FOR THE
.*                       RC-PARAMETER OF THE RETURN MACRO INSTRUCTION
.*                       CAN BE CODED. IF 'RC' IS OMITTED, ZERO WILL
.*                       BE ASSUMED
.*
.*                       INSTEAD OF 'LABEL' ANY SYMBOL VALID IN A NAME-
.*                       FIELD CAN BE CODED. THIS SYMBOL WILL APPEAR IN
.*                       THE NAME FIELD OF THE RETURN INSTRUCTION. IF
.*                       'LABEL' IS OMITTED THE NAME 'RETURN' APPEARS
.*                       IN THE NAME FIELD
.*
.*                       IF INSTEAD OF 'RC'  (15) IS CODED REGISTER
.*                       15 IS SUPPOSED TO CONTAIN A RETURN-CODE AND
.*                       WILL NOT BE RESTORED UPON RETURN
.*
.*                       IF THE RETURN-OPERAND IS OMITTED, RC = 0
.*                       WILL BE GENERATED AND THE NAME 'RETURN'
.*                       IS ASSUMED
.*
.*       RETURN=         IF NULLIFIED, NO RETURN STATEMENTS WILL BE
.*                       GENERATED
.*
.*
.*--------------------------------------------------------------------*
.*                                                                    *
.*                                                                    *
         GBLC  &DFTR                    = '' OR 'R' DEPENDINGON EQUATE*
.*                                      MAY BE USED INSIDE ALL MACROS *
.*                                      CONCATENATED WITH REGISTER
.*                                      OPERANDS SO THAT REGISTER     *
.*                                      TRACING IS PROVIDED ALSO INSIDE
.*                                      MACROS.                       *
.*                                                                    *
.*--------------------------------------------------------------------*
.*
         LCLC  &SANAME                  SAVEAREA NAME
         LCLC  &RETURNC                 RETURN-ROUTINE NAME
         LCLC  &BASE                    = 'BASEREG' OR VALUE OF BASE
         LCLC  &R                       = '' OR 'R' DEPENDING ON EQUATE
         LCLC  &BRANCH                  LABEL FOR BRANCH AROUND RETURN
         LCLA  &SAR                     SAVE REGISTER FOR R13
         LCLA  &VAL                     VALUE OF BASE
         LCLB  &BASEB                   BASEREG OPERAND PRESENT
         LCLB  &BASEBSP                 BASEREG IS 13 OR 15
         LCLB  &CSECTB                  CSECT OPERAND PRESENT
         LCLB  &EQUB                    EQU OPERAND PRESENT
         LCLB  &IDB                     ID OPERAND PRESENT
         LCLB  &RETURNB                 RETURN OPERAND PRESENT
         LCLB  &RCB                     RC OPERAND PRESENT
         LCLB  &SAVEB                   SAVE OPERAND PRESENT
         LCLB  &SAVEARB                 SAVEAR OPERAND PRESENT
         LCLB  &NS                      NO SAVE IF ON
.*
.*       VALIDATE OPERANDS AND SET INDICATORS
.*
         AIF   ('&SAVE(2)' NE 'NO').AREA1
         AIF   ('&BASEREG(1)' EQ '13').AREA0
         AGO   .AREA1
.AREA0   ANOP
&BASE    SETC  '15'
&VAL     SETA  15
&NS      SETB  1
.AREA1   ANOP
         AIF   ('&BASEREG' EQ '').VAL10
         AIF   (N'&BASEREG NE 1).VAL5
         AIF   (T'&BASEREG(1) NE 'N').VAL5
         AIF   (&NS).VAL4
&VAL     SETA  &BASEREG(1)
.VAL4    ANOP
         AIF   (&VAL LT 1 OR &VAL GT 15).VAL5
&BASEB   SETB  1
         AIF   (&VAL NE 13 AND &VAL NE 15).VAL10
&BASEBSP SETB  1
         AGO   .VAL10
.VAL5    ANOP
         MNOTE 8,'INVALID BASEREG OPERAND &BASEREG'
.VAL10   ANOP
         AIF   ('&CSECT' EQ '').VAL20
         AIF   (N'&CSECT NE 1).VAL15
         AIF   ('&CSECT' NE 'START' AND '&CSECT' NE 'CSECT').VAL15
&CSECTB  SETB  1                        INDICATE CSECT
         AGO   .VAL20
.VAL15   ANOP
         MNOTE 8,'INVALID CSECT OPERAND &CSECT'
.VAL20   ANOP
         AIF   ('&EQU' EQ '').VAL30
         AIF   (N'&EQU GT 2).VAL25
         AIF   ('&EQU(1)' NE '' AND '&EQU(1)' NE 'ONLY').VAL25
         AIF   (N'&EQU EQ 1 AND '&EQU' EQ 'ONLY').VAL22
         AIF   (N'&EQU EQ 2 AND '&EQU(2)' EQ '').VAL22
&R       SETC  '&EQU(2)'
         AGO   .VAL23
.VAL22   ANOP
&R       SETC  'R'
.VAL23   ANOP
&EQUB    SETB  1                        INDICATE EQUATES
         AIF   ('&EQU(1)' EQ 'ONLY').CSECT15
         AGO   .VAL30
.VAL25   ANOP
         MNOTE 8,'INVALID EQU OPERAND &EQU'
.VAL30   ANOP
         AIF   ('&SAVE' EQ '').VAL80
         AIF   (N'&SAVE GT 2).VAL70
&SAVEB   SETB  1
         AIF   (N'&SAVE NE 2).VAL40
         AIF   (T'&SAVE(2) EQ 'O').VAL60
&SANAME  SETC  '&SAVE(2)'
         AGO   .VAL50
.VAL40   ANOP
&SANAME  SETC  'SAVEAREA'
.VAL50   ANOP
&SAVEARB SETB  1
.VAL60   ANOP
         AIF   (T'&SAVE(1) EQ 'O').VAL80
&IDB     SETB  1
         AGO   .VAL80
.VAL70   ANOP
         MNOTE 8,'INVALID SAVE OPERAND &SAVE'
.VAL80   ANOP
         AIF   ('&RETURN' EQ '').VAL120
         AIF   (N'&RETURN GT 2).VAL110
&RETURNB SETB  1
         AIF   (N'&RETURN NE 2).VAL90
         AIF   (T'&RETURN(2) EQ 'O').VAL90
&RETURNC SETC  '&RETURN(2)'
         AGO   .VAL100
.VAL90   ANOP
&RETURNC SETC  'RETURN'
.VAL100  ANOP
         AIF   (T'&RETURN(1) EQ 'O').VAL120
&RCB     SETB  1
         AGO   .VAL120
.VAL110  ANOP
         MNOTE 8,'INVALID RETURN OPERAND &RETURN'
.VAL120  ANOP
         AIF   (&BASEB+&CSECTB+&EQUB+&RETURNB+&SAVEB NE 0).VAL130
         MNOTE 12,'NO VALID OPERANDS SPECIFIED'
         MEXIT
.VAL130  ANOP
&BASE    SETC  '&VAL'
.*
.* GENERATE CSECT INSTRUCTION
.*
         SPACE 5
         AIF   (NOT &CSECTB).CSECT10   NO CSECT OR START
         AIF   ('&CSECT' EQ 'START').CSECT5
&NAME    CSECT
         AGO   .CSECT15
.CSECT5  ANOP
&NAME    START
         AGO   .CSECT15
.CSECT10 AIF   ('&NAME' EQ '').CSECT90
&NAME    DS    0H
.CSECT15 ANOP
         SPACE 5
.CSECT90 ANOP
.*
.* GENERATE EQUATES
.*
         AIF   (NOT &EQUB).EQU90
&DFTR    SETC  '&EQU(2)'                EQU-PREFIX
*---------------------------------------------------------------------*
*                                                                     *
*        E Q U A T E S                                                *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 3
&R.0     EQU   0
&R.1     EQU   1
&R.2     EQU   2
&R.3     EQU   3
&R.4     EQU   4
&R.5     EQU   5
&R.6     EQU   6
&R.7     EQU   7
&R.8     EQU   8
&R.9     EQU   9
&R.10    EQU   10
&R.11    EQU   11
&R.12    EQU   12
&R.13    EQU   13
&R.14    EQU   14
&R.15    EQU   15
         AIF   ('&EQU(1)' NE 'ONLY').EQU10
         EJECT
         MEXIT
.EQU10   AIF   (NOT &BASEB).EQU80
         SPACE 3
BASEREG  EQU   &R&BASE
&BASE    SETC  'BASEREG'
         AIF   (&VAL NE 1 AND &VAL LT 14).EQU80
***                      CAUTION:       BASE REGISTER SPECIFICATION
***                                     IS NOT CONFORM TO OS-/360
***                                     LINKAGE CONVENTIONS
.EQU80   ANOP
         EJECT
.EQU90   ANOP
.*
.* ESTABLISH BASE AND GENERATE SAVE ROUTINE
.*
         AIF   (NOT (&BASEB OR &SAVEB)).SAVE90
*---------------------------------------------------------------------*
*                                                                     *
         AIF (NOT &BASEB).SAVE05
*        E S T A B L I S H   B A S E                                  *
.SAVE05  AIF   (NOT &SAVEB).SAVE10
         AIF   ('&SAVE(2)' EQ 'NO').NOTXT
*        S A V E   A N D                                              *
*        C H A I N   S A V E   A R E A S                              *
.SAVE10  ANOP
.NOTXT   ANOP
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 3
         AIF   (&SAVEB).SAVE20          SAVE SPECIFIED
         AIF   (&VAL EQ 15).SAVE15
         BALR  &BASE,0                  SET BASE TO VALUE OF *+2
         SPACE 3
.SAVE15  USING *,&BASE                  DEFINE BASE REGISTER
         AGO   .SAVE85
.SAVE20  ANOP
         AIF   (&VAL NE 15).SAVE25
         USING *,&BASE                  INDICATE BASE
         SPACE 3
         AGO   .SAVE30
.SAVE25  ANOP
         AIF   (&VAL NE 13).SAVE30
         USING *,&R.15                  INTERMEDIATE BASE
         SPACE 3
.SAVE30  ANOP
         AIF   (NOT &IDB).SAVE35        NO ID SPECIFIED
         SAVE  (14,12),,&SAVE(1)
         AGO   .SAVE37
.SAVE35  ANOP
         SAVE  (14,12),,&NAME
.SAVE37  ANOP
         AIF   ('&SAVE(2)' NE 'NO').SAVE39
         AIF   (&VAL EQ 15).SAVE85
         BALR  &BASE,0                      BASE *
         USING *,&BASE     .
         AGO   .SAVE85
.SAVE39  ANOP
         AIF   (&BASEBSP OR NOT &BASEB).SAVE40
         SPACE 3
         BALR  &BASE,0                  SET BASE TO VALUE OF *+2
         USING *,&BASE                  INDICATE BASE
         SPACE 3
.SAVE40  ANOP
&SAR     SETA  2
         AIF   (&VAL NE 2).SAVE45       PREVENT DESTROYMENT OF BASE
&SAR     SETA  3
.SAVE45  ANOP
         LR    &R.&SAR,&R.13            SAVE HIGHER SA ADDRESS
         CNOP  0,4
         BAL   &R.13,*+76               BRANCH AROUND SAVEAREA
         SPACE 3
         AIF   (&VAL NE 13).SAVE50
         DROP  &R.15                    DROP INTERMEDIATE BASE
         USING *,&BASE                  CONTAINS SA-ADDR. AND IS BASE
         SPACE 3
.SAVE50  ANOP
&SANAME  DC    18F'0'                   SAVE AREA
         SPACE 3
         ST    &R.13,8(,&R&SAR)         LOGICAL LOWER ADDR IN HIGHER
         AIF   ('&SANAME' NE '').SAVE55
         ST    &R&SAR,4(,&R.13)         AND HIGHER ADDR IN LOWER PGM
         AGO   .SAVE85
.SAVE55  ANOP
         ST    &R&SAR,&SANAME+4         AND HIGHER ADDR IN LOWER PGM
.SAVE85  ANOP
         AIF   (NOT &RETURNB).SAVE90
         SPACE 3
.SAVE90  ANOP
.*
.* GENERATE RETURN ROUTINE
.*
         AIF   (NOT &RETURNB).RETUR90
         AIF   (NOT (&BASEB OR &SAVEB)).RETUR10
&BRANCH  SETC  '#X'.'&SYSNDX'
         B     &BRANCH                  BRANCH AROUND RETURN ROUTINE
         SPACE 5
.RETUR10 ANOP
*---------------------------------------------------------------------*
*                                                                     *
*        R E T U R N   R O U T I N E                                  *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 3
         AIF   ('&SAVE(2)' EQ 'NO').RETUR17
         AIF   (NOT &SAVEB).RETUR17     IF NO SAVE DO NOT RESTORE R13
         AIF   (&SAVEARB).RETUR15
&RETURNC L     &R.13,4(,&R.13)          RESTORE HIGHER SA ADDRESS
         AGO   .RETUR20
.RETUR15 ANOP
&RETURNC L     &R.13,&SANAME+4          RESTORE HIGHER SA ADDRESS
         AGO   .RETUR20
.RETUR17 ANOP
&RETURNC DS    0H
.RETUR20 ANOP
         AIF   (N'&RETURN GT 1).RETUR21
         AIF   ('&RETURN' EQ '(15)').RETUR22
         AGO   .RETUR2A
.RETUR21 ANOP
         AIF   ('&RETURN(1)' EQ '(15)').RETUR22
.RETUR2A ANOP
         AIF   (NOT &RCB).RETUR25
         RETURN (14,12),T,RC=&RETURN(1)
         AGO   .RETUR30
.RETUR22 ANOP
         RETURN (14,12),T,RC=(15)
         AGO   .RETUR30
.RETUR25 ANOP
         RETURN (14,12),T,RC=0
.RETUR30 ANOP
         SPACE 5
         AIF   (NOT (&SAVEB OR &BASEB)).EX
&BRANCH  DS    0H
         AGO   .EX
.RETUR90 AIF   (NOT (&BASEB OR &SAVEB)).EX
         SPACE 5
.EX      ANOP
         MEND
         EJECT
UR235500 QINIT RETURN=(15)
         SPACE 8
***********************************************************************
*                                                                     *
*        USING-REGISTER FUER TABELLE UND PARAMETER                    *
*                                                                     *
***********************************************************************
         SPACE 3
         USING TABELLE,R11
         USING PARMLIST,R10
         EJECT
***********************************************************************
*                                                                     *
*        S05   STEUERLEISTE                                           *
*                                                                     *
***********************************************************************
         SPACE 3
         BAL   R14,A05                 VORROUTINE
         SPACE 2
         BAL   R14,D05                 EINGABE PRUEFEN
         SPACE 1
         LTR   R15,R15                 OK?
         BNZ   RETURN                  NEIN, RETURN
         SPACE 2
         BAL   R14,F05
         SPACE 2
         B     RETURN
         EJECT
***********************************************************************
*                                                                     *
*        A05   VORROUTINE                                             *
*                                                                     *
***********************************************************************
         SPACE 3
         DC    F'0'
A05      EQU   *
         ST    R14,A05-4
         SPACE 2
         L     R10,0(R1)               ADRESSE PARMLIST IN R10
         L     R11,4(R1)               ADRESSE TABELLE  IN R11
         L     R12,8(R1)               A(A(SYSPRINT) IN R12
         L     R12,0(R12)              ADRESSE SYSPRINT IN R12
         SPACE 3
A05Z     EQU   *
         L     R14,A05-4
         BR    R14
         EJECT
***********************************************************************
*                                                                     *
*        D05   PRUEFEN EINGABE                                        *
*                                                                     *
***********************************************************************
         SPACE 3
         DC    F'0'
D05      EQU   *
         ST    R14,D05-4
         SPACE 2
         BAL   R14,D0505               PRUEFEN KEYLAENGE
         SPACE 1
         LTR   R15,R15                 OK?
         BNZ   D05Z                    NEIN, RETURN
         SPACE 2
         BAL   R14,D0510               PRUEFEN EINHEITEN-TYP
         SPACE 2
         BAL   R14,D0515               PRUEFEN IMBED-OPTION
         SPACE 2
         LA    R15,0                   RETURNCODE 0
         SPACE 3
D05Z     EQU   *
         L     R14,D05-4
         BR    R14
         EJECT
***********************************************************************
*                                                                     *
*        D0505 PRUEFEN KEY-LAENGE                                     *
*                                                                     *
***********************************************************************
         SPACE 3
         DC    F'0'
D0505    EQU   *
         ST    R14,D0505-4
         SPACE 2
         CLC   ZKEYL,=H'0'             KEYLAENGE NULL?
         BNE   D0505C                  NEIN, WARNUNG
         SPACE 1
         LA    R15,0                   RETURNCODE 0
         B     D0505Z                  RETURN
         SPACE 1
D0505C   EQU   *
         LA    R0,KFEHL1               KEYLAENGE UNGUELTIG
         BAL   R14,U05                 WARNUNG AUSGEBEN
         LA    R15,0                   RETURNCODE 0
         SPACE 3
D0505Z   EQU   *
         L     R14,D0505-4
         BR    R14
         EJECT
***********************************************************************
*                                                                     *
*        D0510 PRUEFEN EINHEITEN-TYP                                  *
*                                                                     *
***********************************************************************
         SPACE 3
         DC    F'0'
D0510    EQU   *
         ST    R14,D0510-4
         SPACE 2
         CLC   =C'33',ZCODE+2          3330?
         BNE   D0510F
         SPACE 1
         MVC   ZTCAP,KTCAP33           SPURKAPAZITAET 3330
         MVC   ZTRCYL,KTRCYL33         SPUREN PRO CYLINDER 3330
         MVC   ZCONST,KOK33            KONSTANTE OHNE KEY 3330
         B     D0510Z
         SPACE 2
D0510F   EQU   *
         MVC   ZTCAP,KTCAP35           SPURKAPAZITAET 3350
         MVC   ZTRCYL,KTRCYL35         SPUREN PRO CYLINDER 3350
         MVC   ZCONST,KOK35            KONSTANTE OHNE KEY 3350
         SPACE 3
D0510Z   EQU   *
         L     R14,D0510-4
         BR    R14
         EJECT
***********************************************************************
*                                                                     *
*        D0515 PRUEFEN AUF IMBED-OPTION                               *
*                                                                     *
***********************************************************************
         SPACE 3
         DC    F'0'
D0515    EQU   *
         ST    R14,D0515-4
         SPACE 2
         CLI   ZCODE+1,C'I'             IMBED-OPTION?
         BNE   D0515Z                   NEIN, RETURN
         SPACE 2
         LH    R3,ZTRCYL                TRACKS PRO CYLINDER
         BCTR  R3,R0                    UM 1 ERNIEDRIGEN
         STH   R3,ZTRCYL                UND SPEICHERN
         SPACE 3
D0515Z   EQU   *
         L     R14,D0515-4
         BR    R14
         EJECT
***********************************************************************
*                                                                     *
*        F05   KAPAZITAETSBERECHNUNG                                  *
*                                                                     *
***********************************************************************
         SPACE 3
         DC    F'0'
F05      EQU   *
         ST    R14,F05-4
         SPACE 2
         LA    R9,0                    CI-GROESSE INITIALISIEREN
         MVI   SFIRST,X'00'            SCHALTER SETZEN FUER 1. DURCHL.
         SPACE 1
F05C     EQU   *
         LA    R9,512(R9)              CI-GROESSE ERHOEHEN IN R 9
         CH    R9,KCISZGR              OBERGRENZE UEBERSCHRITTEN?
         BH    F05Y                    JA,ENDE
         SPACE 1
         LR    R5,R9                   CI-SIZE IN REGISTER 5
         SH    R5,KCIDF                ABZUG FUER CI- UND RECORD-DESC.
         LH    R3,ZLRECL               SATZLAENGE IN REG 3
         CR    R5,R3                   CI GROSS GENUG?
         BNL   F05D                    JA, WEITER
         SPACE 1
         CH    R9,KCISZGR              OBERGRENZE ERREICHT?
         BL    F05C                    NEIN, NEUER DURCHLAUF
         SPACE 1
         LA    R0,KFEHL2               SATZLAENGE ZU GROSS
         BAL   R14,U05                 FEHLERMELDUNG AUSGEBEN
         LA    R15,8                   RETURNCODE 8
         B     F05Z                    RETURN
         SPACE 2
F05D     EQU   *
         SH    R5,KRDF                 ABZUG FUER ZWEITEN RECORD-DESC.
         CR    R5,R3                   NOCH GENUG PLATZ?
         BH    F05E                    JA, DIVIDE
         SPACE 1
         LA    R3,1                    EIN SATZ PRO CI IN REG 3
         B     F05G                    KEIN DIVIDE
         SPACE 1
F05E     EQU   *
         SR    R4,R4                   REG 4 LOESCHEN FUER DIVIDE
         DR    R4,R3                   ANZAHL SAETZE PRO CI IN REG 5
         LR    R3,R5                   UND UMLADEN IN REG 3
         EJECT
F05G     EQU   *
         LR    R8,R9                   CI-GROESSE UMLADEN IN REG 8
         LR    R7,R9                                  UND IN REG 7
         SPACE 1
         N     R8,KMSK0512             UNGERADES VIELFACHES VON  512?
         BZ    F05I                    NEIN, NAECHSTER TEST
         SPACE 1
         SRL   R7,9                    R8: BLKSIZE, R7:BLOECKE PRO CI
         B     F05N
         SPACE 1
F05I     EQU   *
         LR    R8,R9                   CI - GROESSE IN R8
         N     R8,KMSK1024             UNGERADES VIELFACHES VON 1024?
         BZ    F05K                    NEIN, NAECHSTER TEST
         SPACE 1
         SRL   R7,10                   R8: BLKSIZE, R7:BLOECKE PRO CI
         B     F05N
         SPACE 1
F05K     EQU   *
         LR    R8,R9                   CI - GROESSE IN R8
         N     R8,KMSK2048             UNGERADES VIELFACHES VON 2048?
         BZ    F05M                    NEIN, BLKSIZE 4096
         SPACE 1
         SRL   R7,11                   R8: BLKSIZE, R7:BLOECKE PRO CI
         B     F05N
         SPACE 1
F05M     EQU   *
         L     R8,KMSK4096             BLOCKSIZE 4096 IN REG 8
         SRL   R7,12                   BLOECKE PRO CI IN REG 7
         EJECT
F05N     EQU   *
         LR    R6,R8                   BLOCKSIZE IN REG 6 LADEN
         AH    R6,ZCONST               KONSTANTE (FUER GAPS) ADDIEREN
         LH    R5,ZTCAP                SPURKAPAZITAET IN REG 5 LADEN
         SR    R4,R4                   REG 4 LOESCHEN FUER DIVIDE
         DR    R4,R6                   ANZAHL BLOECKE PRO SPUR IN R5
         LR    R6,R5                   UND UMLADEN IN REG 6
         SPACE 2
         SR    R4,R4                   REG 4 LOESCHEN FUER DIVIDE
         DR    R4,R7                   (BLK/SPUR)/(BLK/CI)=(CI/SPUR)
         SPACE 1
         LTR   R4,R4                   SPURUEBERSPANNENDER CI ?
         BZ    F05O                    NEIN, WEITER
         SPACE 1
         MVI   SCISPAN,X'80'           CI-SPAN-SCHALTER EIN
         B     F05P                    WEITER
         SPACE 1
F05O     EQU   *
         MVI   SCISPAN,X'00'           CI-SPAN-SCHALTER AUS
         SPACE 2
F05P     EQU   *
         LR    R5,R3                   ANZAHL SAETZE PRO CI IN REG 5
         SR    R4,R4                   REG 4 LOESCHEN FUER MULTIPLY
         MH    R5,=H'100'              (SAETZE/CI)*100
         MR    R4,R6                   (SAETZE/CI)*100*(BLOECKE/SPUR)
         DR    R4,R7                   /(BLOECKE/CI)=(SAETZE/SPUR)*100
         LR    R7,R5                   IN REG 5, UMLADEN IN REG 7
         SPACE 2
         CLI   SFIRST,X'00'            ERSTER DURCHLAUF?
         BNE   F05Q                    NEIN, SPEICHERKAP. TESTEN
         SPACE 1
         MVI   SFIRST,X'01'            SCHALTER SETZEN
         B     F05S
         SPACE 1
F05Q     EQU   *
         L     R2,TVSSPS               SAETZE/SPUR * 100 IN R2
         LA    R2,0(R2)                CLEAR HIGH ORDER BYTE
         SPACE 1
         TM    TVSSPS,X'80'            BLOCKUEBERSPANNENDER CI?
         BZ    F05R                    NEIN, KAPAZITAET TESTEN
         SPACE 1
         CLI   SCISPAN,X'80'           BLOCKUEBERSPANNENDER CI?
         BE    F05R                    JA, TESTEN
         SPACE 1
         MH    R2,=H'7'                R2 * 7
         SRL   R2,3                    / 8 = R2 - 12,5 %
         SPACE 1
F05R     EQU   *
         CR    R7,R2                   WENIGER SAETZE PRO SPUR?
         BL    F05C                    JA, NEUER DURCHLAUF
         SPACE 1
         LA    R11,TABEND-TABELLE(R11) NEUEN TABELLENPLATZ ERRECHNEN
         EJECT
F05S     EQU   *
         LR    R5,R7                   SAETZE PRO SPUR * 100 IN REG 5
         MH    R5,ZTRCYL               SAETZE PRO CYLINDER * 100 IN R 5
         SR    R4,R4                   REG 4 LOESCHEN FUER DIVIDE
         D     R4,=F'100'              SAETZE PRO CYLINDER IN R5
         LR    R2,R5                   UND UMLADEN IN REG 2
         SPACE 1
         ST    R2,TVSSPC               SPEICHERN SAETZE PRO CYLINDER
         STH   R9,TVSCI                SPEICHERN CI-GROESSE
         STH   R8,TVSBLK               SPEICHERN BLOCKGROESSE
         ST    R7,TVSSPS               SPEICHERN SAETZE PRO SPUR * 100
         STH   R6,TVSBPS               SPEICHERN BLOECKE PRO SPUR
         STH   R3,TVSSPCI              SPEICHERN SAETZE PRO CI
         MVC   TVSSPS(1),SCISPAN       INDIKATOR FUER CI-SPAN
         SPACE 2
         L     R5,ZSATZ                ANZAHL SAETZE IN REG 5
         LTR   R5,R5                   GLEICH 0 ?
         BZ    F05C                    JA, NEUER DURCHLAUF
         SPACE 1
         SR    R4,R4                   REG 4 LOESCHEN FUER DIVIDE
         DR    R4,R2                   ANZAHL CYLINDER ERRECHNEN
         LR    R2,R5                   UND UMLADEN IN REG 2
         SPACE 1
         LTR   R4,R4                   REST = 0 ?
         BNZ   F05U                    NEIN, SPUREN ERRECHNEN
         SPACE 1
         STH   R2,TVSCYL               CYLINDER SPEICHERN
         STH   R4,TVSTRK               NULL SPUREN SPEICHERN
         B     F05C                    NEUER DURCHLAUF
         SPACE 1
F05U     EQU   *
         MH    R4,=H'100'              ANZAHL RESTSAETZE * 100 IN R 4
         LR    R5,R4                   UND UMLADEN IN R5
         SR    R4,R4                   REG 4 LOESCHEN FUER DIVIDE
         DR    R4,R7                   ANZAHL SPUREN ERRECHNEN
         LTR   R4,R4                   REST = 0 ?
         BZ    F05W                    JA, WERTE SPEICHERN
         SPACE 1
         LA    R5,1(R5)                SPUREN UM 1 ERHOEHEN
         CH    R5,ZTRCYL               = SPUREN PRO CYLINDER ?
         BL    F05W                    NEIN, WERTE SPEICHERN
         SPACE 1
         LA    R2,1(R2)                CYLINDER + 1
         SR    R5,R5                   NULL SPUREN
         SPACE 1
F05W     EQU   *
         STH   R2,TVSCYL               SPEICHERN CYLINDER
         STH   R5,TVSTRK               SPEICHERN SPUREN
         B     F05C                    NEUER DURCHLAUF
         SPACE 2
F05Y     EQU   *
         LA    R11,TABEND-TABELLE(R11) LETZTE TAB-ADRESSE ERRECHNEN
         MVC   TABELLE(TABEND-TABELLE),KXFF       TABELLEN-ENDE
         LA    R15,0                   RETURNCODE 0
         SPACE 3
F05Z     EQU   *
         L     R14,F05-4
         BR    R14
         EJECT
***********************************************************************
*                                                                     *
*        U05   AUSGEBEN AUF SYSPRINT                                  *
*                                                                     *
***********************************************************************
         SPACE 3
         DC    F'0'
U05      EQU   *
         ST    R14,U05-4
         SPACE 2
         PUT   (12),(0)                AUSGABE AUF SYSPRINT
         SPACE 3
U05Z     EQU   *
         L     R14,U05-4
         BR    R14
         EJECT
***********************************************************************
*                                                                     *
*              DEFINITIONEN                                           *
*                                                                     *
***********************************************************************
         SPACE 3
ZCONST   DC    H'0'                    KONSTANTE FUER KAP. FORMEL
ZTCAP    DC    H'0'                    SPURKAPAZITAET
ZTRCYL   DC    H'0'                    SPUREN PRO CYLINDER
         SPACE 1
SFIRST   DC    X'00'                   SCHALTER ERSTER DURCHLAUF
SCISPAN  DC    X'00'                   SCHALTER SPURUEBERSP. CI
         SPACE 1
KXFF     DC    30X'FF'                 X'FF' = TABELLENENDE
KOK33    DC    H'135'                  KONSTANTE OHNE KEY  3330
KOK35    DC    H'185'                  KONSTANTE OHNE KEY  3350
KTCAP33  DC    H'13165'                SPURKAPAZITAET      3330
KTCAP35  DC    H'19254'                SPURKAPAZITAET      3350
KTRCYL33 DC    H'19'                   SPUREN PRO CYLINDER 3330
KTRCYL35 DC    H'30'                   SPUREN PRO CYLINDER 3350
KCIDF    DC    H'7'                    ABZUG FUER CI- UND RECORD-DESC.
KRDF     DC    H'3'                    ABZUG FUER ZWEITEN RECORD-DESC.
KCISZGR  DC    H'8192'                 OBERGRENZE FUER CI-SIZE
KMSK0512 DC    F'512'                  MASKE FUER BLKSIZE 512
KMSK1024 DC    F'1024'                 MASKE FUER BLKSIZE 1024
KMSK2048 DC    F'2048'                 MASKE FUER BLKSIZE 2048
KMSK4096 DC    F'4096'                 MASKE FUER BLKSIZE 4096
         SPACE 1
KFEHL1   DC    CL80' UR235500 KEYLAENGE UNGUELTIG FUER VSAM, WIRD IGNOR*
               IERT'
KFEHL2   DC    CL80' UR235500 SATZLAENGE ZU GROSS, FUNKTION NICHT AUSFU*
               EHRBAR'
         SPACE 2
         LTORG
         EJECT
***********************************************************************
*                                                                     *
*              DSECT FUER TABELLE                                     *
*                                                                     *
***********************************************************************
         SPACE 3
TABELLE  DSECT
TVSSPS   DS    F                       SAETZE PRO SPUR * 100
TVSSPC   DS    F                       SAETZE PRO CYLINDER
TVSCI    DS    H                       CI-GROESSE
TVSSPCI  DS    H                       SAETZE PRO CI
TVSBLK   DS    H                       BLOCKGROESSE
TVSBPS   DS    H                       BLOECKE PRO SPUR
TVSCYL   DS    H                       PLATZBEDARF IN CYLINDERN
TVSTRK   DS    H                                   UND SPUREN
TABEND   EQU   *
         EJECT
***********************************************************************
*                                                                     *
*              DSECT FUER PARMLISTE                                   *
*                                                                     *
***********************************************************************
         SPACE 3
PARMLIST DSECT
ZCODE    DS    F                       FUNKTIONSCODE
ZLRECL   DS    H                       LOGISCHE SATZLAENGE
ZKEYL    DS    H                       SCHLUESSEL-LAENGE
ZSATZ    DS    F                       ANZAHL SAETZE
         END
