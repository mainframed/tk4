*   03/08/84 505021304  MEMBER NAME  UWAC03BS (GAPVERS)     ASSEMBLER
ALLOCXR  TITLE 'BATCH-REENTRANT VERSION FOR DYNALLOC'
**********************************************************************
*   (SCHWEIGSAME(X) REENTRANT(R)-VERSION VON ALLOC)                  *
*                                                                    *
*        ROUTINE TO ALLOCATE OR FREE EXISTING DATASETS               *
*                                                                    *
*  CALLING SEQUENCE IS:                                              *
*           CALL ALLOCXR,(DDNAME,DSNAME,MEMBER,VOLUME),VL            *
*  OR:      CALL ALLOCXR,(DDNAME,DSNAME,MEMBER),VL                   *
*  OR:      CALL ALLOCXR,(DDNAME,DSNAME,,VOLUME),VL                  *
*  OR:      CALL FREEXR,(DDNAME),VL                                  *
*                                                                    *
*  REQUIRED: (FOR ALLOCXR): DDNAME,DSNAME                            *
*            (FOR FREEXR ): DDNAME                                   *
*                                                                    *
*  PROVIDE STATEMENTS LIKE THESE:                                    *
*                                                                    *
*  DDNAME   DC   CL8'ANYNAME'    (SEE NOTE)                          *
*  DSNAME   DC   C'SP1.DS.NAME ' (SEE NOTE)                          *
*  MEMBER   DC   C'ANYMEMB '     (SEE NOTE)                          *
*  VOLUME   DC   CL6'VOL001'     (SEE NOTE)                          *
*                                                                    *
*  NON-REQUIRED PARAMETERS MAY BE MARKED BY EITHER BLANKS OR NULLS:  *
*  E.G.      VOLUME  DC  CL3' '     OR                               *
*            VOLUME  DC  X'00'                                       *
*  WOULD NULLIFY THE PARAMETER 'VOLUME'.                             *
*                                                                    *
*  NOTE :  ANY PARAMETER HAS TO BE DECLARED WITH ITS MAXIMUM         *
*          LENGTH. IT CAN BE DECLARED SHORTER, BUT THEN IT           *
*          MUST BE FOLLOWED BY AT LEAST ONE BLANK.                   *
*                                                                    *
*          IF THE SPECIFIED DDNAME IS ALREADY ALLOCATED, AN IM-      *
*          PLICIT 'FREE' IS USED AND THE DATASET IS THEN ALLOCATED   *
*          TO THE DDNAME REQUIRED.                                   *
*                                                                    *
*                                                                    *
*  ATTRIBUTES: REENTRANT, REUSABLE                                   *
*                                                                    *
*  AUTHOR: BLECKWENN, WACKER-CHEMIE MUNICH , DEC.,10. 1981           *
*                     (CHANGED: SEP., 09. 1983)                      *
*                                                                    *
**********************************************************************
         EJECT
         AIF    ('&SYSPARM' NE 'LNK').NOLNK
 PUNCH ' ALIAS   FREEXR                             '
 PUNCH ' ENTRY   ALLOCXR                            '
         EJECT
.NOLNK   ANOP
*--------------------------------------------------------------------*
*     PROLOG                                                         *
*--------------------------------------------------------------------*
ALLOCXR  BEG   *,MODE=RENT,WKSIZE=WKSIZE,BASE=10
         USING WORKAREA,R13
         MVI   FLAG,0        PRESET FOR ALLOC
         B     COMMON        BRANCH
FREEXR   EINTRR *,MODE=RENT,WKSIZE=WKSIZE,BASE=10
         MVI   FLAG,XFREE    PRESET FOR FREE
COMMON   LM    R2,R5,0(R1)   GET PARAMTER LIST
         MVC   WKAREA+4(WKSIZE-4),XWKAREA+4 MOVE EXCEPT FLAG
         LA    R1,RB               ADDR OF REQUEST BLOCK POINTER
         ST    R1,RBP              STORE TO WORKAREA
         OI    RBP,X'80'           HIGH ORDER BIT MUST BE ON
         LA    R1,TXUNITS          ADDR OF TEXTUNITS
         ST    R1,RBTXTP           STORE TO WORKAREA
         LA    R1,UNAUNIT          ADDR OF UNALC (FOR FREE ONLY)
         ST    R1,AUNALC           STORE TO WORKAREA
         LA    R1,DDNUNIT          DDNAME
         ST    R1,ADDNAME          STORE TO WORKAREA
         LA    R1,DSNUNIT          DSNAME
         ST    R1,ADSNAME          STORE TO WORKAREA
         LA    R1,MEMUNIT          MEMBER
         ST    R1,AMEMBER          STORE TO WORKAREA
         LA    R1,VOLUNIT          VOLUME
         ST    R1,AVOLUME          STORE TO WORKAREA
         LA    R1,UNIUNIT          UNIT
         ST    R1,AUNIT            STORE TO WORKAREA
         LA    R1,SHRUNIT          STATUS
         ST    R1,ASHR             STORE TO WORKAREA
         LA    R1,NKPUNIT          NORMAL DISP
         ST    R1,ANKEEP           STORE TO WORKAREA
         LA    R1,CKPUNIT          CONDITIONAL DISP
         ST    R1,ACKEEP           STORE TO WORKAREA
         OI    ACKEEP,X'80'        MARK END OF LIST
*--------------------------------------------------------------------*
*     SCAN THE INPUT BUFFER FOR LENGTH AND TEXT                      *
*--------------------------------------------------------------------*
         TM    FLAG,XFREE    IS IT FOR 'FREE' ?
         BO    DDNCHK        YES, ONLY DDNAME IS OF INTEREST
         LTR   R2,R2         DSNAME/MEMBER/VOLUME GIVEN ?
         BM    ERROR         NO DSNAME, NO MEMBER, NO VOLUME
         LTR   R3,R3         MEMBER/VOLUME GIVEN ?
         BM    TESTDSN       NO MEMBER, NO VOLUME
         LTR   R4,R4         VOLUME GIVEN ?
         BM    TESTMEM       NO VOLUME
         LTR   R5,R5         'VL' MISSING IN CALL ?
         BNM   ERROR         YES, ERROR
*
         LA    R5,0(R5)
         LTR   R5,R5
         BZ    TESTMEM
         CLI   0(R5),0
         BE    TESTMEM
         CLI   0(R5),C' '
         BE    TESTMEM
         OI    FLAG,XVOL
*
TESTMEM  LA    R4,0(R4)
         LTR   R4,R4
         BZ    TESTDSN
         CLI   0(R4),0
         BE    TESTDSN
         CLI   0(R4),C' '
         BE    TESTDSN
         OI    FLAG,XMEM
*
TESTDSN  LA    R3,0(R3)
         LTR   R3,R3
         BZ    DDNCHK
         CLI   0(R3),0
         BE    DDNCHK
         CLI   0(R3),C' '
         BE    DDNCHK
         OI    FLAG,XDSN
*
VOLCHK   TM    FLAG,XVOL
         BO    VOLCHK1
         XC    AVOLUME,AVOLUME
         XC    AUNIT,AUNIT
         B     MEMCHK
VOLCHK1  LA    R8,VOLUME      VOLUME ADDRESS
         LR    R9,R5          FROM-ADDRESS
         LA    R7,5           VOL HAS MAX. 6 CHAR
         BAL   R11,VALMOVE    MOVE THE PARAMETER
         STCM  R9,B'0011',VOLEN  STORE IT
         BZ    ERROR          ZERO LENGTH
*
MEMCHK   TM    FLAG,XMEM
         BO    MEMCHK1
         XC    AMEMBER,AMEMBER
         B     DSNCHK
MEMCHK1  LA    R8,MEMBER      MEMBER ADDRESS
         LR    R9,R4          TO-ADDRESS
         LA    R7,7           MEMBER HAS MAX. 8 CHAR
         BAL   R11,VALMOVE
         STCM  R9,B'0011',MELEN   STORE IT
         BZ    ERROR          ZERO LENGTH
*
DSNCHK   TM    FLAG,XDSN
         BO    DSNCHK1
         XC    ADSNAME,ADSNAME
         B     DDNCHK
DSNCHK1  LA    R8,DSNAME      DSNAME ADDRESS
         LR    R9,R3          FROM-ADDRESS
         LA    R7,43          DSN HAS MAX. 44 CHAR
         BAL   R11,VALMOVE    MOVE THE PARAMETER
         STCM  R9,B'0011',DSLEN  STORE IT
         BZ    ERROR          ZERO LENGTH
*
DDNCHK   LA    R8,DDNAME      DDNAME ADDRESS
         LR    R9,R2          FROM-ADDRESS
         LA    R7,7           DDN HAS MAX. 8 CHAR
         BAL   R11,VALMOVE
         STCM  R9,B'0011',DDLEN   STORE IT
         BZ    ERROR          ZERO LENGTH
*
UNALCK   MVI   RBVERB,UNALVERB SET UNALLOCATION
         OI    ADDNAME,X'80'  ONLY DDNAME TEXTUNIT
         LA    R1,TXUNITS     ADDRESS OF TEXT UNITS LIST(1ST IS UNAL)
         ST    R1,RBTXTP      STORE INTO REQUEST BLOCK
         TM    FLAG,XFREE     IS IT FOR UNALLOC. ?
         BO    DYNAL          YES, BR TO DYNALLOC
SETALLOC MVI   RBVERB,ALLVERB SET ALLOCATION
         NI    ADDNAME,X'7F'  MARK CONTINUATION OF TEXTUNITS
         LA    R1,TXUNITS+4   ADDRESS OF TEXT UNITS LIST(1ST IS DDN)
         ST    R1,RBTXTP      STORE INTO REQUEST BLOCK
*
*--------------------------------------------------------------------*
*     DO DYNAMIC ALLOCATION                                          *
*--------------------------------------------------------------------*
DYNAL    LA    R1,RBP         REQUEST BLOCK POINTER
         DYNALLOC             DO DYNAMIC ALLOCATION
         LTR   R8,R15         ERROR ?
         BZ    TESTREAL       NO, BUT TEST IF REALLOC ACTIVE
*
         CLC   RBERROR(2),=X'0410' DDNAME IN USE ?
         BNE   RETURN         NO, GO NORMAL
         OI    FLAG,XREALL+XFREE   ELSE SET 'REALLOC REQD' & 'UNALLOC'
         B     UNALCK         FREE DDNAME
*
TESTREAL TM    FLAG,XREALL+XFREE   REALLOCATION ACTIVE ?
         BNO   RETURN              NO, GO NORMAL
         NI    FLAG,X'FF'-XFREE    ELSE RESET FLAG AND ...
         B     SETALLOC            DO REALLOCATION
*
RETURN   SCHL  RET=(R8),MODE=RENT  MACH DASS DU NACH HAUSE KOMMST !
*
ERROR    LA    R8,64               SET RETURN CODE
         B     RETURN
*
*  SUBROUTINE TO MOVE PARAMETERS
*
*  R9: FROM-ADDRESS, R8: TO-ADDRESS, R7: MAX LENGTH MINUS ONE
*  (ON RETURN R9 HAS ACTUAL LENGTH OF PARAMETER)
*
VALMOVE  DS    0H
         LA    R15,0(R9,R7)
         LA    R14,1
         LR    R1,R9
REPEAT   CLI   0(R9),C' '
         BE    BLKFND
         BXLE  R9,R14,REPEAT
BLKFND   SR    R9,R1
         BCTR  R9,0
         EX    R9,PARMOVE
         LA    R9,1(R9)
         BR    R11
PARMOVE  MVC   0(0,R8),0(R1)
*
         ORG   *-240
TRTAB    DS    240X
         DC    C'0123456789ABCDEF' X'FA'...X'FF' --> C'A'...C'F'
XWKAREA  DS    0F
         DC     X'00'         FLAG BYTE
         DC     XL3'00'       RESERVED
*--------------------------------------------------------------------*
*     REQUEST LIST                                                   *
*--------------------------------------------------------------------*
         DC    A(0)           REQUEST BLOCK POINTER
         DS    0F             REQUEST BLOCK
         DC    AL1(20)        LENGTH
         DC    X'00'          VERB, TO BE FILLED IN LATER
         DC    H'0'           FLAG 1
         DC    H'0'           ERROR CODE
         DC    H'0'           INFO CODE
         DC    A(0)           POINTER TO TEXT UNITS LIST
         DC    F'0'           RESERVED
         DC    F'0'           FLAG 2
*--------------------------------------------------------------------*
*     TEXT UNIT ADDRESSES                                            *
*--------------------------------------------------------------------*
         DS    0F
         DC    A(0)                UNALC (FOR FREE ONLY)
         DC    A(0)                DDNAME
         DC    A(0)                DSNAME
         DC    A(0)                MEMBER
         DC    A(0)                VOLUME
         DC    A(0)                UNIT
         DC    A(0)                STATUS
         DC    A(0)                NORMAL DISP
         DC    A(0)                CONDITIONAL DISP
*--------------------------------------------------------------------*
*     ALLOCATION TEXT UNITS                                          *
*--------------------------------------------------------------------*
         DC     H'7',H'0'          UNALC
         DC     H'1',H'1'          DDNAME
         DS     H
         DC     CL8' '
         DC     H'2',H'1'          DSNAME
         DS     H
         DC     CL44' '
         DC     H'3',H'1'          MEMBER
         DS     H
         DC     CL8' '
         DC     XL2'10',H'1'       VOLUME
         DS     H
         DC     CL6' '
         DC     XL2'15',H'1',H'5',CL8'SYSDA'      UNIT
         DC     H'4',H'1',H'1',X'08'   DISP=(SHR,....,....)
         DC     H'5',H'1',H'1',X'08'   DISP=(...,KEEP,....)
         DC     H'6',H'1',H'1',X'08'   DISP=(...,....,KEEP)
         DC     X'00'
WKSIZE   EQU    *-XWKAREA
WORKAREA DSECT
SAVE     DS    18F
WKAREA   DS    0F
FLAG     DC     X'00'
XFREE    EQU    X'01'
XDSN     EQU    X'80'
XMEM     EQU    X'40'
XVOL     EQU    X'20'
XREALL   EQU    X'10'       REALLOC AFTER FREE REQUIRED
RSVD     DC     XL3'00'     RESERVED
WKAREA1  DS    0F
*--------------------------------------------------------------------*
*     REQUEST LIST                                                   *
*--------------------------------------------------------------------*
RBP      DC    A(0)           REQUEST BLOCK POINTER
RB       DS    0F             REQUEST BLOCK
RBL      DC    AL1(20)        LENGTH
RBVERB   DC    X'00'          VERB, TO BE FILLED IN LATER
RBFLAG1  DC    H'0'           FLAG 1
RBERROR  DC    H'0'           ERROR CODE
RBINFO   DC    H'0'           INFO CODE
RBTXTP   DC    A(TXUNITS)     POINTER TO TEXT UNITS LIST
RBRESV   DC    F'0'           RESERVED
RBFLAG2  DC    F'0'           FLAG 2
*--------------------------------------------------------------------*
*     TEXT UNIT ADDRESSES                                            *
*--------------------------------------------------------------------*
TXUNITS  DS    0F
AUNALC   DC    A(UNAUNIT)          UNALC (FOR FREE ONLY)
ADDNAME  DC    A(DDNUNIT)          DDNAME
ADSNAME  DC    A(DSNUNIT)          DSNAME
AMEMBER  DC    A(MEMUNIT)          MEMBER
AVOLUME  DC    A(VOLUNIT)          VOLUME
AUNIT    DC    A(UNIUNIT)          UNIT
ASHR     DC    A(SHRUNIT)          STATUS
ANKEEP   DC    A(NKPUNIT)          NORMAL DISP
ACKEEP   DC    X'80',AL3(CKPUNIT)  CONDITIONAL DISP
*--------------------------------------------------------------------*
*     ALLOCATION TEXT UNITS                                          *
*--------------------------------------------------------------------*
UNAUNIT  DC     H'7',H'0'          UNALC
DDNUNIT  DC     H'1',H'1'          DDNAME
DDLEN    DS     H
DDNAME   DC     CL8' '
DSNUNIT  DC     H'2',H'1'          DSNAME
DSLEN    DS     H
DSNAME   DC     CL44' '
MEMUNIT  DC     H'3',H'1'          MEMBER
MELEN    DS     H
MEMBER   DC     CL8' '
VOLUNIT  DC     XL2'10',H'1'       VOLUME
VOLEN    DS     H
VOLUME   DC     CL6' '
UNIUNIT  DC     XL2'15',H'1',H'5',CL8'SYSDA'      UNIT
SHRUNIT  DC     H'4',H'1',H'1',X'08'   DISP=(SHR,....,....)
NKPUNIT  DC     H'5',H'1',H'1',X'08'   DISP=(...,KEEP,....)
CKPUNIT  DC     H'6',H'1',H'1',X'08'   DISP=(...,....,KEEP)
ALLVERB  EQU    X'01'
UNALVERB EQU    X'02'
         REGISTER
         END
