RZSYS60  CSECT
PGMENTRY MBASIS ,                      SET UP
         MSPSN
         EJECT
         USING IHADCB,R1               DCB'S ADDRESSED BY R1
         LA    R1,PDSDCB               LOAD DESIRED DCBADDRESS
         MVC   DMEMBER,DCBDDNAM        MOVE DDNAME FOR UPODIRG
         OPEN  (PDSDCB,(INPUT),SEQDCB,(OUTPUT)) OPEN PROCLIB + CROSSREF
         SPACE 2
         MLOAD UPODIRG,ENTRY01         LOAD PDS-DIRECTORY-READ-PGM
GETDIR   EQU   *                       CALL UPRO TO READ DIR-ENTRY
EOMEMBER EQU   GETDIR                  ENTRY FOR END OF MEMBER (EODAD)
         NI    CONTSW,NOP              RESET CONT SWITCH
         LA    R11,DIRAREA             LOAD PARAM-REG FOR UPRO
         MLINK UPODIRG,ENTRY01         GO READ ENTRY
         B     *+4(R15)                CONDITIONAL BRANCH WITH RC
*                                      RC=0 ENTRY MOVED
         B     GETMEMB                 GO TO READ MEMBER
*                                      RC=4 EOF REACHED
         B     EOF                     GO TO CLOSE DATA-SETS
*                                      RC=8 DCB NOT OPENED
         B     OPENERR                 GO TO ABEND PGM - USER-100
         SPACE 2
EOF      EQU   *                       ENTRY TO CLOSE DATA-SETS
         CLOSE (PDSDCB,,SEQDCB)        CLOSE PROCLIB + CROSSREF
         MRETURN ,                     GO BACK TO OS
         EJECT
OPENERR  EQU   *                       ENTRY FOR DIRECTORY NOT OPENED
         ABEND 100,DUMP                ABEND PGM
         EJECT
GETMEMB  EQU   *                       ENTRY TO READ NEW MEMBER
         MVC   CRPROCNM,DMEMBER        MOVE PROCNAME TO CROSSREF
         MVC   CRPGMNM,NOPGMNAM        CLEAR PROGNAME IN CROSSREF
         MVC   CRDSNAME,CRDSNAME-1     CLEAR DSNAME IN CROSSREF
         MVC   CRDISP,NODISP           CLEAR DISP IN CROSSREF
         OI    PUTSW,BRANCH            SET PUT-CROSS SWITCH
         BAL   R6,PUTCROSS             GO WRITE CROSSREF
         NI    PUTSW,NOP               RESET PUT-CROSS SWITCH
         MVC   CRDSNAME,NODSNAME       CLEAR DSNAME IN CROSSREF
         MVC   MTTR,DTTR               BUILD POINTER FOR 'POINT'
         POINT PDSDCB,MEMBADR          POINT TO BEGINN OF MEMBER
         SPACE
READREC  EQU   *                       READ MEMBER
         READ  PDSDECB,SF,PDSDCB,JCLCARD,'S' START READING
         SPACE
         CHECK PDSDECB                 CHECK FOR COMPLETION
READSWEX NOPR  R6                      BRANCH, IF LOOKING FOR RPARENTH
READSW   EQU   READSWEX+1              READ SWITCH
         SPACE 2
TESTJCL  EQU   *                       ANALYZE JCL
CONTSWEX NOP   CONTCARD                BRANCH, IF CONT CARD
CONTSW   EQU   CONTSWEX+1              CONTINUATION SWITCH
         CLC   JCLSLASH,SLASH          IS THIS JCL
         BNE   JCLERROR                NO, IGNORE
         CLI   JCLTHREE,COMMENT        IS THERE AN ASTERISK
         BE    READREC                 YES, IGNORE
         LA    R1,JCLTHREE             SET FIRST BLANK ADR FOR TESTFUNC
         CLI   JCLTHREE,BLANK          IS THERE A NAMEFIELD
         BE    TESTFUNC                NO, TEST FUNCTION
         TRT   JCLTHREE(9),SPACE       LOOK FOR FIRST BLANK
         BNZ   TESTFUNC                FOUND, GO TEST FUNCTION
         SPACE
JCLERROR EQU   *                       ENTRY FOR JCL ERROR
         NI    CONTSW,NOP              RESET CONT SWITCH
DDCDSWEX NOP   PUTCROSS                BRANCH, IF DD-CARD-PARAMS
DDCDSW   EQU   DDCDSWEX+1              DD-CARDS SWITCH
         B     READREC                 GO READ NEXT RECORD
         EJECT
CONTCARD EQU   *                       ENTRY FOR CONT CARDS
         NI    CONTSW,NOP              RESET CONT SWITCH
         LA    R1,JCLTHREE             SET FIRST BLANK ADR FOR TESTDATA
         CLC   JCLCARD(L'JCLSLASH+L'JCLTHREE),SLASH IS IT CONT CARD
         BER   R5                      YES, GO TO DESIRED FUNCTION
         B     TESTJCL                 GO TO ANALYZE JCL
         SPACE 2
LOOKCHAR TRT   0(L'ZERO,R1),NOSPACE    WILL BE EX'ED WITH R8
         SPACE
TESTFUNC EQU   *                       TEST FOR DESIRED FUNCTIONS
         LA    R8,JCLCONT-1            CALC LENGTH OF DATA
         SR    R8,R1                   FOR EX LOOKCHAR
         EX    R8,LOOKCHAR             LOOK FOR FIRST NONBLANK CHAR
         BZ    JCLERROR                NO FUNCTION CODED
         CLC   DD,0(R1)                IS IT 'DD' CARD
         BE    DDCARD                  YES, GO HERE
         CLC   EXEC,0(R1)              IS IT 'EXEC' CARD
         BE    EXECCARD                YES, GO HERE
         B     JCLERROR                OTHER JCL-CARD, GO HERE
         SPACE 3
PUTCROSS EQU   *                       ENTRY FOR WRITE CROSSREF
         PUT   SEQDCB,CROSAREA         WRITE CROSSREF
         NI    CONTSW,NOP              RESET CONT SWITCH
         NI    DDCDSW,NOP              RESET DD-CARD SWITCH
PUTSWEX  NOPR  R6                      BRANCH, IF PROC-NAME
PUTSW    EQU   PUTSWEX+1               PUT-CROSS SWITCH
         B     READREC                 GO READ NEXT RECORD
         EJECT
EXECCARD EQU   *                       ENTRY FOR 'EXEC' CARD
         MVC   CRPGMNM,NOPGMNAM        CLEAR PGM-NAME IN CROSSREF
         MVC   CRDSNAME,NODSNAME       CLEAR DSNAME IN CROSSREF
         MVC   CRDISP,NODISP           CLEAR DISP IN CROSSREF
         LA    R5,EXECCD01             LOAD ENTRY-POINT FOR CONT CARD
         LA    R1,L'EXEC-1(R1)         BYPASS 'EXEC' TO TEST DATA
         SPACE
EXECCD01 EQU   *                       ENTRY FOR 'EXEC' CONT CARD
         LA    R8,JCLCONT-1            SET END OF DATA
         SR    R8,R1                   CALC LENGTH FOR LOOKCHAR
         EX    R8,LOOKCHAR             LOOK FOR FIRST NONBLANK CHAR
         BZ    JCLERROR                NO OPERAND FOUND, GO HERE
EXECCD02 EQU   *                       LOOK FOR 'PGM=' PARAMETER
         CLC   PGM,0(R1)               IS IT 'PGM='
         BE    PGMFOUND                YES, GO HERE
         BAL   R4,NEXTPARM             FIND NEXT PARAMETER
         B     EXECCD02                GO TEST NEXT PARAMETER
         SPACE
MOVEPGM  MVC   CRPGMNM(L'ZERO),0(R7)   WILL BE EX'ED WITH R1
         SPACE
PGMFOUND EQU   *                       ENTRY FOR 'PGM=' PARAM FOUND
         LA    R8,JCLCONT-1            SET END OF DATA
         SR    R8,R1                   CALC LENGTH FOR LOOKSEP
         LA    R7,L'PGM(R1)            SAVE START ADDR OF PGMNAME
         EX    R8,LOOKSEP              LOOK FOR SEPERATOR
         BZ    JCLERROR                NO SEPERATOR FOUND, GO HERE
         MVI   CRPGMNM,BLANK           BLANK OUT
         MVC   CRPGMNM+1(L'CRPGMNM-1),CRPGMNM PGMNAME AREA
         LA    R8,1(R7)                CALC PGMNAME LENGTH
         SR    R1,R8                   FOR MOVE PGM
         EX    R1,MOVEPGM              MOVE PGMNAME TO CROSSREF
         MVC   CRDSNAME,PGMUSED        MOVE 'PGM-USED' TO CROSSREF
         NI    CONTSW,NOP              RESET CONT SWITCH
         B     PUTCROSS                GO WRITE CROSSREF
         EJECT
DDCARD   EQU   *                       ENTRY FOR 'DD' CARD
         MVC   CRDSNAME,NODSNAME       CLEAR DSNAME IN CROSSREF
         MVC   CRDISP,NODISP           CLEAR DISP IN CROSSREF
         LA    R5,DDCARD01             LOAD ENTRY-POINT FOR CONT CARD
         LA    R1,L'DD-1(R1)           BYPASS 'DD' TO TEST DATA
         SPACE
         CLC   DDIGN06,JCLTHREE        IS IT 'JOBLIB' DD-CARD
         BE    JCLERROR                YES, IGNORE
         CLC   DDIGN01,JCLTHREE        IS IT 'STEPLIB' DD-CARD
         BE    JCLERROR                YES, IGNORE
         CLC   DDIGN02,JCLTHREE        IS IT 'SYSUDUMP' DD-CARD
         BE    JCLERROR                YES,IGNORE
         CLC   DDIGN03,JCLTHREE        IS IT 'SYSABEND' DD-CARD
         BE    JCLERROR                YES, IGNORE
         CLC   DDIGN04,JCLTHREE        IS IT 'SNAP' DD-CARD
         BE    JCLERROR                YES, IGNORE
         CLC   DDIGN05,JCLTHREE        IS IT 'SPIE' DD-CARD
         BE    JCLERROR                YES, IGNORE
         SPACE
DDCARD01 EQU   *                       ENTRY FOR 'DD' CONT CARD
         LA    R8,JCLCONT-1            SET ENDE OF DATA
         SR    R8,R1                   CALC LENGTH FOR LOOKCHAR
         EX    R8,LOOKCHAR             LOOK FOR FIRST NONBLANK CHAR
         BZ    JCLERROR                NO OPERAND FOUND, GO HERE
DDCARD02 EQU   *                       LOOK FOR DESIRED PARAMETER
         CLC   DDIGN11,0(R1)           IS IT 'SYSOUT=' DD-CARD
         BE    JCLERROR                YES, IGNORE
         CLI   0(R1),DDIGN12           IS IT '*' DD-CARD
         BE    JCLERROR                YES, IGNORE
         CLC   DDIGN13,0(R1)           IS IT 'DUMMY' DD-CARD
         BE    JCLERROR                YES,IGNORE
         SPACE
         CLC   DSN,0(R1)               IS IT 'DSN='
         LA    R7,L'DSN                GET PARAMLENGTH
         BE    DSNFOUND                YES, GO HERE
         CLC   DSNAME,0(R1)            IS IT 'DSNAME='
         LA    R7,L'DSNAME             GET PARAMLENGTH
         BE    DSNFOUND                YES, GO HERE
         CLC   DISP,0(R1)              IS IT 'DISP='
         BE    DISPFND                 YES, GO HERE
DDCARD03 EQU   *                       ENTRY TO FIND NEXT PARAMETER
         BAL   R4,NEXTPARM             FIND NEXT PARAMETER
         B     DDCARD02                GO TEST NEXT PARAMETER
         SPACE
MOVEDSN  MVC   CRDSNAME(L'ZERO),0(R7)  WILL BE EX'ED WITH R1
         SPACE
DSNFOUND EQU   *                       ENTRY FOR 'DSN=' PARAM FOUND
         LA    R7,0(R7,R1)             SAVE START ADDR OF DSNAME
         SR    R2,R2                   CLEAR REG2
DSNFND00 EQU   *                       ENTRY TO LOOK FOR NEXT SEPARATOR
         LA    R8,JCLCONT-1            SET END OF DATA
         SR    R8,R1                   CALC LENGTH FOR LOOKSEP
         EX    R8,LOOKSEP              LOOK FOR SEPERATOR
         BZ    JCLERROR                NO SEPARATOR FOUND, GO HERE
         B     *(R2)                   CONDITIONAL BRANCH
         B     DSNFND01                BLANK SEP, GO HERE
         B     DSNFND01                KOMMA SEP, GO HERE
ISMAYBE  EQU   *                       PAREN SEP, MAY BE ISAM-DD-CARD
         CLC   INDEX,0(R1)             IS IT 'INDEX' DD
         BE    ISAMIGN                 YES, IGNORE
         CLC   OVFLOW,0(R1)            IS IT 'OVFLOW'DD
         BE    ISAMIGN                 YES, IGNORE
         CLC   PRIME,0(R1)             IS IT 'PRIME' DD
         LA    R1,L'RPARENTH(R1)       BYPASS 'PAREN' TO TEST DATA
         BNE   DSNFND00                NO, GO LOOK FOR REST OF DSNAME
         SH    R1,HW2                  SUBTRACT TWO FROM 'PRIME'-ADDR
         CLI   0(R1),POINT             IS THERE A '.' IN FRONT OF '('
         BE    DSNFND01                YES, GO TO MOVE DSNAME
         LA    R1,L'POINT(R1)          CORRECT DSNAME LENGTH
         BNE   DSNFND01                NO, GO TO MOVE DSNAME
DSNFND01 EQU   *                       ENTRY TO MOVE DSNAME
         MVI   CRDSNAME,BLANK          BLANK OUT
         MVC   CRDSNAME+1(L'CRDSNAME-1),CRDSNAME DSNAME AREA
         LA    R8,1(R7)                CALC DSNAME LENGTH
         SR    R1,R8                   FOR MOVE DSN
         EX    R1,MOVEDSN              MOVE DSNAME TO CROSSREF
         LR    R1,R7                   RESTORE START ADDR OF DSNAME
INDICATE EQU   *                       INDICATE DD-CARD USED
         OI    DDCDSW,BRANCH           SET DD-CARD SWITCH TO WRITE

         SPACE 3
ISAMIGN  EQU   *                       ENTRY TO IGNORE ISAM-DD-CARDS
         NI    DDCDSW,NOP              RESET DD-CARD SWITCH
         B     JCLERROR                GO IGNORE CARD
         EJECT
DISPFND  EQU   *                       ENTRY FOR 'DISP=' PARAM FOUND
         LA    R7,L'DISP(R1)           CALC START ADDR OF DISPOSITION
         CLI   0(R7),PARENTH           IS DISP PARENTHESES
         BNE   DISP01                  NO, BRANCH AROUND
         LA    R7,L'PARENTH(R7)        CALC NEW START ADDR OP DISP
         CLI   0(R7),KOMMA             IS FIRST DISP MISSING
         BNE   DISP01                  NO, GO HERE
         MVI   0(R7),NEW#              SET DISP TO 'NEW'
DISP01   EQU   *                       TEST DISPOSITION PARAMETER
         CLI   0(R7),NEW#              IS DISP = 'NEW'
         BNE   DISP02                  NO, GO HERE
         MVC   CRDISP,NEW              MOVE DISP TO CROSSREF
         B     INDICATE                GO INDICATE THIS
         SPACE
DISP02   EQU   *
         CLI   0(R7),OLD#              IS DISP = 'OLD'
         BNE   DISP03                  NO,GO HERE
         MVC   CRDISP,OLD              MOVE DISP TO CROSSREF
         B     INDICATE                GO INDICATE THIS
         SPACE
DISP03   EQU   *
         CLI   0(R7),SHR#              IS DISP = 'SHR'
         BNE   DISP04                  NO, GO HERE
         MVC   CRDISP,SHR              MOVE DISP TO CROSSREF
         B     INDICATE                GO INDICATE THIS
         SPACE
DISP04   EQU   *
         CLI   0(R7),MOD#              IS DISP = 'MOD'
         BNE   DISP05                  NO, GO HERE
         MVC   CRDISP,MOD              MOVE DISP TO CROSSREF
         B     INDICATE                GO INDICATE THIS
         SPACE
DISP05   EQU   *                       ENTRY FOR UNKNOWN DISPOSITION
         MVC   CRDISP,ERR              MOVE ERROR-DISP TO CROSSREF
         B     INDICATE                GO INDICATE THIS
         EJECT
LOOKSEP  TRT   0(L'ZERO,R1),SEPARAT    WILL BE EX'ED WITH R8
LOOKSEP2 TRT   0(L'ZERO,R1),SEPARAT2   WILL BE EX'ED WITH R8
         SPACE
NEXTPARM EQU   *                       LOOK FOR NEXT PARAMETER
         LA    R8,JCLCONT-1            CALC LENGTH OF DATA
         SR    R8,R1                   FOR LOOKSEP
         SR    R2,R2                   CLEAR REG2
         LA    R9,1                    START WITH ONE, IF PARENTHESIS
         EX    R8,LOOKSEP              LOOK FOR SEPARATOR
         BZ    JCLERROR                NO SEPARATOR FOUND, GO HERE
         B     *(R2)                   CONDITIONAL BRANCH
SEPBLANK B     JCLERROR                IF NO MORE PARAMS, GO HERE
SEPKOMMA B     NEXT01                  GO TO NEXT PARAM
SEPPAREN EQU   *                       ENTRY FOR PARAM IN PARENTHESIS
         LA    R1,L'PARENTH(R1)        BYPASS 'PAREN' TO TEST DATA
         LA    R8,JCLCONT-1            CALC LENGTH OF DATA
         SR    R8,R1                   FOR LOOKSEP2
         EX    R8,LOOKSEP2             LOOK FOR RIGTH PARENTHESIS
         BZ    SEPPAR02                NO SEPARATOR FOUND, GO HERE
         B     *(R2)                   CONDITIONAL BRANCH
RIGTHPAR B     SEPPAR01                RIGTH PAREN FOUND, GO HERE
LEFTPAR  EQU   *                       LEFT PAREN FOUND AGAIN
         LA    R9,1(R9)                COUNT LEFT PAREN
         B     SEPPAREN                GO LOOK FOR RIGTH PAREN
         SPACE
SEPPAR01 EQU   *                       TEST FOR PAIRED PAREN
         BCT   R9,SEPPAREN             NOT PAIRED, GO HERE
         B     NEXTPARM                PAIRED, GO LOOK FOR SEPARATOR
         SPACE
SEPPAR02 EQU   *                       ENTRY TO READ NEXT CARD FOR TEST
         OI    READSW,BRANCH           SET READ SWITCH
         BAL   R6,READREC              GO READ NEXT CARD
         NI    READSW,NOP              RESET READ SWITCH
         LA    R1,JCLTHREE             SET DATA START ADDR
         B     SEPPAREN                GO LOOK FOR RIGTH PAREN
         SPACE
NEXT01   EQU   *                       ENTRY FOR NEXT PARAMETER
         LA    R1,1(R1)                CALC START OF NEXT PARAM
         C     R1,AJCLCONT             IS IT EODAD IN THIS CARD
         BE    SETCONT                 YES, GO HERE
         CLI   0(R1),BLANK             IS NEXT PARAM IN THIS CARD
         BNER  R4                      YES, GO BACK
SETCONT  EQU   *                       ENTRY TO SET CONTINUATION SWITCH
         OI    CONTSW,BRANCH           SET CONTINUATION SWITCH
         B     READREC                 GO TO READ NEXT CARD
         EJECT
DIRECTOR DC    0D'0'
DMEMBER  DS    CL8
DTTR     DS    CL3
DC       DS    0CL5
DALIAS   DS    PL1
DNOTTRN  DS    H
DNODATA  DS    H
DUSERDAT DS    XL62
         ORG   DIRECTOR
DIRAREA  DS    CL(L'DMEMBER+L'DTTR+L'DC+L'DALIAS+L'DNOTTRN+L'DNODATA+L'*
               DUSERDAT)
         SPACE 3
MEMBADR  DS    0F
MTTR     DC    XL3'0'
MZ       DC    X'0'
         SPACE 3
CROSSREF DC    0D'0'
CRPROCNM DC    CL8'PROCNAME'
CRPGMNM  DC    CL8'PGM=NAME'
CRDSNAME DC    CL44'DATA SET NAME'
CRDISP   DC    CL3'***'
         ORG   CROSSREF
         SPACE
CROSAREA DS    CL(L'CRPROCNM+L'CRPGMNM+L'CRDSNAME+L'CRDISP)
NEW      DC    C'NEW'
OLD      DC    C'OLD'
SHR      DC    C'SHR'
MOD      DC    C'MOD'
ERR      DC    C'ERR'
NEW#     EQU   C'N'
OLD#     EQU   C'O'
SHR#     EQU   C'S'
MOD#     EQU   C'M'
         SPACE 3
JCLCARD  DS    0CL80
JCLSLASH DC    C'//'
JCLTHREE DC    C' '
JCLDATA  DC    CL68' '
JCLCONT  DC    C' '
JCLSEQ   DC    CL8' '
         SPACE
AJCLCONT DC    A(JCLCONT)
         EJECT
ZERO     EQU   0
NOP      EQU   15
BRANCH   EQU   240
BLANK    EQU   X'40'
COMMENT  EQU   C'*'
KOMMA    EQU   C','
POINT    EQU   C'.'
PARENTH  EQU   C'('
LPARENTH EQU   PARENTH
RPARENTH EQU   C')'
HW2      DC    H'2'
SLASH    DC    C'// '
EXEC     DC    C'EXEC '
PGM      DC    C'PGM='
DD       DC    C'DD '
DSN      DC    C'DSN='
DSNAME   DC    C'DSNAME='
PRIME    DC    C'(PRIME)'
INDEX    DC    C'(INDEX)'
OVFLOW   DC    C'(OVFLOW)'
DISP     DC    C'DISP='
DDIGN01  DC    C'STEPLIB '
DDIGN02  DC    C'SYSUDUMP '
DDIGN03  DC    C'SYSABEND '
DDIGN04  DC    C'SNAP '
DDIGN05  DC    C'SPIE '
DDIGN06  DC    C'JOBLIB '
DDIGN11  DC    C'SYSOUT='
DDIGN12  EQU   C'*'
DDIGN13  DC    C'DUMMY'
NODSNAME DC    CL44'*****    NO DSNAME FOR THIS DD-CARD    *****'
NOPGMNAM DS    0CL8'********'          VALUE OF NEXT TWO STMTS USED
NODISP   DC    CL3'***'
PGMUSED  DC    CL44'*****    PGM USED IN THIS PROCEDURE    *****'
         EJECT
SPACE    DC    256X'0'
         ORG   SPACE+BLANK
         DC    X'FF'
         ORG
         SPACE 3
NOSPACE  DC    256X'FF'
         ORG   NOSPACE+BLANK
         DC    X'0'
         ORG
         SPACE 3
SEPARAT  DC    256X'0'
         ORG   SEPARAT+BLANK
         DC    X'04'
         ORG   SEPARAT+KOMMA
         DC    X'08'
         ORG   SEPARAT+LPARENTH
         DC    X'0C'
         ORG
         SPACE 3
SEPARAT2 DC    256X'0'
         ORG   SEPARAT2+RPARENTH
         DC    X'04'
         ORG   SEPARAT2+LPARENTH
         DC    X'08'
         ORG
         SPACE 3
         LTORG ,                       LOCATE LITERAL POOL HERE
         EJECT
PDSDCB   DCB                                                           *
               DDNAME=PROCLIBR,                                        *
               DEVD=DA,                                                *
               DSORG=PO,                                               *
               EODAD=EOMEMBER,                                         *
               MACRF=(R)
         EJECT
SEQDCB   DCB                                                           *
               DDNAME=CROSSREF,                                        *
               DSORG=PS,                                               *
               MACRF=(PM)
         EJECT
         DCBD                                                          *
               DSORG=(PO,QS),                                          *
               DEVD=DA
         SPACE 3
         END   PGMENTRY
