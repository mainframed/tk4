         TITLE 'SPOOL-PROGRAMM'
***********************************************************************
*
*
*
* DAS PROGRAMM 'SPOOL' DRUCKT UEBER BAND AUSGEGEBENE DRUCKDATEIEN. DER
*
* OPERATOR HAT DIE MOEGLICHKEIT DAS BAND UM EINE BESTIMMTE ANZAHL
*
* BLOECKE VOR- ODER ZURUECKZUSETZEN, UM UNTERBROCHENE DRUCKAUSGABEN AN
*
* DER RICHTIGEN STELLE WIEDER AUFZUNEHMEN. DAS PROGRAMM SCHREIBT IN
*
* BESTIMMTEN ABSTAENDEN (NACH 100 DRUCK-BLOECKEN) DIE ANZAHL DER
*
* GEDRUCKTEN BLOECKE AUS, UM NACH UNTERBRECHUNGEN DAS AUFSETZEN ZU
*
* ERLEICHTERN.
*
*
*       J C L :
*       =======
*
*       //JOB       JOB  ..........
*
*       //STEP      EXEC PGM=.........
*
*       //SYSUT1    DD   DSN=........        SL-EINGABEDATEI
*
*       //SYSUT2    DD   UNIT=00F   O.A.     DRUCKER DIREKT
*
*       //SYSPRINT  DD  DUMMY                ODER 'A' FUER DEBUGGING
*
*
* UEBER SYSPRINT KOENNEN FUER DIE FEHLERSUCHE PROTOKOLL-DATEN
*
* AUSGEGEBEN WERDEN Z.B.
*
* BLKSIZE, LRECL, RESTCOUNT, ANZAHL GEDRUCKTER SAETZE ETC.
*
* DAS PROGRAMM VERARBEITET NUR F ODER FB DRUCKSAETZE
*
*
*              * * * * * * * * *
*
*
*          OPERATOR-INFORMATION:
*          =====================
*
*
* 'SPOOL' ENTHAELT NEUE FUNKTIONEN WIE VORWAERTS- UND RUECKWAERT-
*
* SETZEN DES DRUCKBANDES, EINE TEST-FUNKTION, UM DEN DRUCKER BEI
*
* FORMULAR-DRUCK EINZURICHTEN BZW. DIE POSITION DES BANDES ANHAND
*
* DER AUSGABE AM DRUCKER ZU UEBERPRUEFEN UND EINEN BLOCKZAEHLER, DER
*
* DIE ANZAHL DER GEDRUCKTEN BLOECKE IN BESTIMMTEN INTERVALLEN AM
*
* KONSOL ANZEIGT.
*
* NACH START DES PROGRAMMS, NACH DEN FUNKTIONEN DES VOR- UND RUECK-
*
* SETZENS UND NACH 'TEST' WERDEN FOLGENDE NACHRICHTEN UEBER KONSOL
*
* AUSGEGEBEN:
*
*
*                     STOP ---------> SP
*
*                     TEST ---------> TE
*
*                     BACKSP--------> BS
*
*                     FORWSP--------> FS
*
*                     START---------> ST
*
*
* DAS PROGRAMM ERWARTET DARAUFHIN DIE EINGABE DER GEWUENSCHTEN
*
* FUNKTION:
*
*       SP:  FUNKTION STOP :
*       ====================
*
*                  DAS PROGRAMM SOLL ABGEBROCHEN WERDEN.
*
*
*       TE:  FUNKTION TEST :
*       ====================
*
*                 ES WERDEN CA. 20 BLOECKE ANGEDRUCKT.
*
*                 DANACH KOENNEN WEITERE ENTSCHEIDUNGEN
*
*                 UEBER VORWAERTS- ODER RUECKWAERTSSETZEN
*
*                 BZW. WEITERDRUCKEN GETROFFEN WERDEN.
*
*
*       BS:  FUNKTION BACKSPACE :
*       =========================
*
*                 NACH EINGABE VON BS ERSCHEINT DIE NACHRICHT:
*
*                      * * * * * * * * * * * * * * * * *
*                      * 'WIEVIEL BLOECKE BS ? NNNNN'  *
*                      * * * * * * * * * * * * * * * * *
*
*                 ES IST DARAUFHIN DIE ANZAHL DER BLOECKE
*                 (OHNE FUEHRENDE NULLEN) EINZUGEBEN, UM
*                 DIE DAS BAND ZURUECKGESETZT WERDEN SOLL.
*                 DANACH KOENNEN WEITERE ENTSCHEIDUNGEN
*                 WIE TE, BS, FS ODER ST GETROFFEN WERDEN.
*
*                 WIRD BEIM ZURUECKSETZEN DER ANFANG DER
*                 ANFANG DES BANDES ERREICHT, ERSCHEINT
*                 DIE NACHRICHT:
*
*                      * * * * * * * * * * * * *
*                      * 'LOAD-POINT ERREICHT' *
*                      * * * * * * * * * * * * *
*
*                 DAS BAND STEHT DANN WIEDER AUF DEM
*                 ERSTEN BLOCK.
*
*
*       FS: FUNKTION FORWARDSPACE :
*       ===========================
*
*                 NACH EINGABE VON 'FS' ERSCHEINT DIE NACRICHT:
*
*                      * * * * * * * * * * * * * * * * *
*                      * 'WIEVIEL BLOECKE FS ?  NNNNN' *
*                      * * * * * * * * * * * * * * * * *
*
*                 ES IST DARAUFHIN DIE ANZAHL DER BLOECKE
*                 (OHNE FUEHRENDE NULLEN) EINZUGEBEN, UM
*                 DIE DAS BAND VORWAERTSGESETZT WERDEN
*                 SOLL. DANACH KOENNEN WIE BEIM BACKSPACE
*                 NEUE ENTSCHEIDUNGEN GETROFFEN WERDEN.
*
*                 WIRD BEIM VORWAERTSSETZEN DAS ENDE DES
*                 DATENBESTANDES ERREICHT, ERSCHEINT DIE
*                 NACHRICHT:
*
*                      * * * * * * * * * * * * * * * * * *
*                      * 'EOF ERREICHT BEI BLOCK XXXXX'  *
*                      * * * * * * * * * * * * * * * * * *
*
*                 DAS BAND STEHT DANN HINTER DEM LETZTEN BLOCK.
*
*
*       ST:  FUNKTION START :
*       =====================
*
*                 NACH EINGABE VON 'ST' WIRD DIE NORMALE
*                 VERARBEITUNG AUFGENOMMEM.
*
*
*      * * * * * * * * * * * * * * * * * * * * * * * * *
*
*
* NACH JEWEILS 100 GEDRUCKTEN BLOECKEN ERSCHEINT EINE NACHRICHT UEBER
* DIE LAUFENDE NUMMER DES GEDRUCKTEN BLOCKS. DIESE INFORMATION DIENT
* IN ERSTER LINIE DAZU, DEN WIEDERANLAUF NACH EINER UNTERBRECHUNG DES
* DRUCKS ZU ERLEICHTERN.
*
* MIT 'SPOOL' KOENNEN NUR DATEIEN MIT DEM RECORD-FORMAT F UND FB GE-
* DRUCKT WERDEN.
*
* DIE BLOCKGROESSE DARF 13300 NICHT UEBERSCHREITEN.
*
*   //SYSUT1  =  EINGABE
*   //SYSUT2  =  AUSGABE
*
* 'CONCATENATION' VON EINGABE-DATEIEN IST NICHT MOEGLICH.
*
*
*
*
*
*
*
*
***********************************************************************
SPOOL    CSECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
BEGIN    SAVE  (14,12)
         LR    R12,R15
         USING SPOOL,R12
         ST    R13,SAVEAREA+4
         LR    R2,R13
         LA    R13,SAVEAREA
         ST    R13,8(R2)
         L     R2,16
         L     R3,0(R2)
         L     R4,4(R3)
         L     R5,12(R4)
         MVC   JOBN,0(R5)
         OPEN  (PRINTDCB,(OUTPUT))
         LTR   R15,R15
         BNZ   OPENFEHL
A1       OPEN  (DCBIN,,DCBOUT,(OUTPUT))
         LTR   R15,R15
         BNZ   OPENFEHL
*        RDJFCB MF=(E,EX1)
         LTR   R15,R15
         BNZ   RDJFFEHL
         LA    R9,DCBIN
         USING IHADCB,R9
         MVI   ABERX,C'1'
         BAL   R14,PUT
         MVI   ABERX,C'0'
         MVC   ABERX+20(39),=C'****   S P O O L - P R O T O K O L L   '
         MVC   ABERX+59(04),=C'****'
         BAL   R14,PUT
         MVC   ABERX+10(8),=C'JOBNAME:'
         MVC   ABERX+20(8),JOBN
         BAL   R14,PUT
*        MVC   ABERX+11(8),=C'DSNAME: '
*        MVC   ABERX+20(8),JOBN
*        BAL   R14,PUT
*        MVC   ABERX+09(9),=C'VOL=SER#:'
*        MVC   ABERX+20(8),JOBN
*        BAL   R14,PUT
         LH    R2,DCBLRECL
         CVD   R2,PX1
         MVC   C1,MASKE1
         ED    C1,PX1
         MVC   ABERX+12(6),=C'LRECL:'
         MVC   ABERX+20(8),C1+8
         BAL   R14,PUT
         LA    R10,DCBBLKSI
         LH    R10,0(0,R10)
         CVD   R10,PX1
         MVC   C1,MASKE1
         ED    C1,PX1
         MVC   ABERX+12(6),=C'RECFM:'
         MVC   ABERX+20(8),C1+8
         BAL   R14,PUT
         SRDA  R10,32(0)
         DR    R10,R2
         LTR   R10,R10
         BNZ   FEHLER2
         ST    R11,BLOCKUNG
         ST    R11,TESTLOOP
         CVD   R11,PX1
         MVC   C1,MASKE1
         ED    C1,PX1
         MVC   ABERX+09(9),=C'BLOCKUNG:'
         MVC   ABERX+20(8),C1+8
         BAL   R14,PUT
         LH    R4,DCBLRECL
         LA    R6,ABER
         MVC   BLOCKZT,BLOCKZ
         AP    BLOCKZT,P100
LOOP     NI    E,X'00'
         WTO   'STOP -------> SP',ROUTCDE=(1,7)
         WTO   'TEST -------> TE',ROUTCDE=(1,7)
         WTO   'BACKSP -----> BS',ROUTCDE=(1,7)
         WTO   'FORWSP -----> FS',ROUTCDE=(1,7)
         WTOR  'START ------> ST',NACHR,2,E,ROUTCDE=(1,7),DESC=2
         LR    R10,R1
         WAIT  1,ECB=E
         DOM   MSG=(10)
         MVC   ABERX+1(17),=C'OPERATOR EINGABE:'
         MVC   ABERX+26(2),NACHR
         BAL   R14,PUT
         CLC   NACHR,=C'ST'
         BE    START
         CLC   NACHR,=C'BS'
         BE    BACKSP
         CLC   NACHR,=C'FS'
         BE    FORWSP
         CLC   NACHR,=C'TE'
         BE    TEST
         CLC   NACHR,=C'SP'
         BE    STOP
         WTO   'EINGABE FALSCH',ROUTCDE=(1,7)
         B     LOOP
         EJECT
INTER    DS    0H
INTR1    NI    E1,X'00'
         WTOR  'UNTERBRECHUNG ----> IR',NACHR1,2,E1,ROUTCDE=(1,7),     X
               DESC=2
         LR    R10,R1
         WAIT  1,ECB=E1
         DOM   MSG=(10)
         CLC   NACHR1,=C'IR'
         BE    INTER
         WTO  'EINGABE FALSCH',ROUTCDE=(1,7)
         B     INTR1
         EJECT
START    DS    0H
         LH    R4,DCBLRECL
         LA    R6,ABER
         BAL   R14,UNBLOCK
         B     START
         EJECT
AUSGABEX LH     R11,14(R8)
         CVD   R11,PX1
         MVC   C1,MASKE1
         ED    C1,PX1
         MVC   ABERX+10(16),C1
         MVC   ABERX+1(8),MASKE
         ED    ABERX+1(8),BLOCKZ
         CVD   R3,PX1
         MVC   C1,MASKE1
         ED    C1,PX1
         MVC   ABERX+30(16),C1
         CVD   R4,PX1
         MVC   C1,MASKE1
         ED    C1,PX1
         MVC   ABERX+50(16),C1
         CVD   R5,PX1
         MVC   C1,MASKE1
         ED    C1,PX1
         MVC   ABERX+70(16),C1
         LH    R11,DCBBLKSI
         CVD   R11,PX1
         MVC   C1,MASKE1
         ED    C1,PX1
         MVC   ABERX+90(16),C1
         LH    R11,DCBLRECL
         CVD   R11,PX1
         MVC   C1,MASKE1
         ED    C1,PX1
         MVC   ABERX+110(16),C1
         BAL   R14,PUT
         B     UNBLOCK2
         EJECT
TEST     DS    0H
         LH    R4,DCBLRECL
         LA    R6,ABER
         LA    R7,20
TEST1    BAL   R14,UNBLOCK
         BCT   R7,TEST1
         B     LOOP
         EJECT
         DC    F'0'
UNBLOCK  ST    R14,UNBLOCK-4
UNBLOCK1 DS    0H
         L     R14,BLOCKUNG
         C     R14,TESTLOOP
         BNE   ENDE
         SR    R14,R14
         ST    R14,TESTLOOP
         NI    DECBIN,X'00'
         READ  DECBIN,SF,DCBIN,EBER,'S'
         CHECK DECBIN
         AP    BLOCKZ,P1
         CP    BLOCKZ,BLOCKZT
         BNL   UNBLOUT
UNBLOCK3 DS    0H
         LA    R3,EBER
         LA    R5,EBER
         AH    R5,DCBBLKSI
         L     R8,DECBIN+16
         SH    R5,14(R8)               REST-COUNT IN IOB
         SH    R5,DCBLRECL
         B     AUSGABEX          XXXXXX
UNBLOCK2 MVC   0(133,6),0(3)
         L     R14,TESTLOOP
         LA    R14,1(,R14)
         ST    R14,TESTLOOP
         PUT   DCBOUT,ABER
         AP    OUTSATZP,P1
         BXLE  R3,R4,UNBLOCK2
         L     R14,UNBLOCK-4
         BR    R14
         EJECT
UNBLOUT  DS    0H
         MVC   BLOCKZC,MASKE
         ED    BLOCKZC,BLOCKZ
         MVC   UNBLOUT1+16(8),JOBN
         MVC   UNBLOUT1+26(8),BLOCKZC
UNBLOUT1 WTO   'JOBNAME XXXXXXXX  XXXXXXXX BLOECKE GEDRUCKT',          X
               ROUTCDE=(1,3,5,7)
         AP    BLOCKZT,P100
         B     UNBLOCK3
         EJECT
FORWSP   DS    0H
         NI    ECB1,X'00'
         LA    R3,BLOECKE+6
         LA    R4,7
         LA    R5,BLOECKE1+6
         MVC   BLOECKE,=X'00000000000000'
         MVC   BLOECKE1,=X'F0F0F0F0F0F0F0'
         WTOR  'WIEVIEL BLOECKE FS ?   NNNNNNN',BLOECKE,7,ECB1,        X
               ROUTCDE=(1,7),DESC=2
         LR    R10,R1
         WAIT  1,ECB=ECB1
         DOM   MSG=(10)
FS1      CLI   0(R3),X'00'
         BE    FS2
         TM    0(R3),X'F0'
         BNO   FEHLER
         MVC   0(1,5),0(3)
         SH    5,MINUS1
FS2      SH    R3,MINUS1
         BCT   R4,FS1
         PACK  PBLOCKS,BLOECKE1
         AP    BLOCKZ,PBLOCKS
         MVC   OUTSATZ,MASKE
         ED    OUTSATZ,BLOCKZ
         MVC   ABERX+30(19),=C'XXXXXXXX BLOECKE FS'
         MVC   ABERX+30(8),OUTSATZ
         BAL   R14,PUT
         CVB   R2,PBLOCKS
         CNTRL DCBIN,FSR,(2)
         LTR   R15,R15
         BNZ   FS0
         B     LOOP
FS0      CVD   R15,COUNT
         SP    BLOCKZ,COUNT
         MVC   BLOCKZT,BLOCKZ
         MVC   BLOCKZC,MASKE
         ED    BLOCKZC,BLOCKZ
         MVC   FS01+31(7),BLOCKZC
FS01     WTO   'EOF ERREICHT BEI BLOCK XXXXXXX',ROUTCDE=(1,7)
         B     LOOP
FEHLER   WTO   'EINGABE FALSCH',ROUTCDE=(1,7)
         B     FORWSP
         EJECT
BACKSP   DS    0H
         NI    ECB2,X'00'
         LA    R3,BLOECKE+6
         LA    R4,7
         LA    R5,BLOECKE1+6
         MVC   BLOECKE,=X'00000000000000'
         MVC   BLOECKE1,=X'F0F0F0F0F0F0F0'
         WTOR  'WIEVIEL BLOECKE BS ?   NNNNNNN',BLOECKE,7,ECB2,        X
               ROUTCDE=(1,7),DESC=2
         LR    R10,R1
         WAIT  1,ECB=ECB2
         DOM   MSG=(10)
BS1      CLI   0(R3),X'00'
         BE    BS2
         TM    0(R3),X'F0'
         BNO   FEHLER1
         MVC   0(1,5),0(3)
         SH    R5,MINUS1
BS2      SH    R3,MINUS1
         BCT   R4,BS1
         PACK  PBLOCKS,BLOECKE1
         SP    BLOCKZ,PBLOCKS
         MVC   BLOCKZT,BLOCKZ
         AP    BLOCKZT,P100
         MVC   OUTSATZ,MASKE
         ED    OUTSATZ,BLOCKZ
         MVC   ABERX+30(19),=C'XXXXXXXX BLOECKE BS'
         MVC   ABERX+30(8),OUTSATZ
         BAL   R14,PUT
         CVB   R2,PBLOCKS
         CNTRL DCBIN,BSR,(2)
         LTR   R15,R15
         BNZ   BS0
         B     LOOP
BS0      MVC   BLOCKZ,P0
         MVC   BLOCKZT,P100
         WTO   'LOAD-POINT ERREICHT',ROUTCDE=(1,7)
         B     LOOP
         EJECT
         DC    F'0'
PUT      ST    R14,PUT-4
         PUT   PRINTDCB,ABERX
         MVI   ABERX+1,C' '
         MVC   ABERX+2(132),ABERX+1
         L     R14,PUT-4
         BR    R14
         EJECT
FEHLER1  WTO   'EINGABE FALSCH',ROUTCDE=(1,7)
         B     BACKSP
FEHLER2  WTO   'BLOCKUNG ?????',ROUTCDE=(1,7)
         B     ENDE
OPENFEHL WTO   'OPEN FEHLER',ROUTCDE=(1,7)
STOP     DS    0H
         B     ENDE
RDJFFEHL WTO   'RDJFCB FEHLER',ROUTCDE=(1,7)
         B     ENDE
         EJECT
ENDE     DS    0H
         MVC   BLOCKZC,MASKE
         ED    BLOCKZC,BLOCKZ
         MVC   ABERX+05(13),=C'INPUT BLOCK#:'
         MVC   ABERX+20(8),BLOCKZC
         BAL   R14,PUT
         MVC   OUTSATZ,MASKE
         ED    OUTSATZ,OUTSATZP
         MVC   ABERX+05(13),=C'OUTPUT SATZ#:'
         MVC   ABERX+20(8),OUTSATZ
         BAL   R14,PUT
*        ABEND 4095,DUMP
         CLOSE (PRINTDCB)
         CLOSE (DCBIN,,DCBOUT)
         SR    R15,R15
         L     R13,4(R13)
         RETURN (14,12),RC=(15)
         EJECT
         LTORG
EX1      RDJFCB (DCBIN),MF=L
SAVEAREA   DC  18A(0)
E        DC    F'0'
E1       DC    F'0'
ECB1     DC    F'0'
ECB2     DC    F'0'
BLOCKUNG DC    F'0'
TESTLOOP DC    F'0'
NACHR    DS    CL2'  '
NACHR1   DS    CL2'  '
JOBN     DC    C'        '
BLOECKE  DC    CL7' '
BLOECKE1 DC    CL7' '
BLOCKZT  DC    P'0000100'
P0       DC    P'0000000'
P1       DC    P'0000001'
P100     DC    P'0000100'
BLOCKZ   DC    P'0000000'
OUTSATZP DC    P'0000000'
MASKE    DC    X'4020202020202020'
BLOCKZC  DC    C'        '
OUTSATZ  DC    C'        '
ALL      DS    D
PBLOCKS  DC   CL8'0'
COUNT    DC    D'0'
MINUS1   DC    H'1'
ABER     DC    CL133' '
         DC    0D'0'
PX1      DC    P'000000000000000'
MASKE1   DC    X'40202020202020202020202020202020'
C1       DC    C'                '
ABERX    DC    CL133' '
LSTA     DS    0F
         DC    X'07'
         DC    AL3(JFCBAREA)
JFCBAREA DS    0F,176C
         EJECT
DCBIN    DCB   DDNAME=SYSUT1,MACRF=RC,BUFNO=1,                         X
               DSORG=PS,EODAD=ENDE
DCBOUT   DCB   DDNAME=SYSUT2,DSORG=PS,MACRF=PM
PRINTDCB DCB   DSORG=PS,RECFM=FBA,MACRF=PM,BLKSIZE=1330,LRECL=133,     X
               DDNAME=SYSPRINT
         LTORG
EBER     DS     CL13300
         EJECT
         DCBD  DSORG=PS,DEVD=TA
         END SPOOL
