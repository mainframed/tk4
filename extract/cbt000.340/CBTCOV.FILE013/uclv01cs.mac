***********************************************************************
*                                                                     *
*    DAS UNTERPROGRAMM P0SM26 LAEDT MIT DEM OS-ATTACH-MACRO DAS       *
*              DAS LOAD-MODUL IEBUPDTE UND UEBERGIBT DIESEM DIE KONT-
*              TROLLE.NACH BEENDIGUNG VON IEBUPDTE WIRD ABGEPRUEFT OB
*              EINER DER SYSTEM-CODES D37,B37-4,ODER E37-4 AUFGETRETEN
*              IST. IN DIESEM FALLE WIRD IEBCOPY,EBENFALLS ALS SUBTASK
*              MIT ATTACH,AUFGERUFEN UND AUF DIE DATEI VON IEBUPDTE
*              MIT DEM DD-STATEMENT SYSUT2 EIN COPY INPLACE LAUF DURCH-
*              GEFUEHRT. NACH IEBCOPY WIRD NOCHMALS IEBUPDTE AUFGERUFEN
*              UND VERSUCHT DEN MODUL EINZUSTELLEN. BEI NOCHMALIGEM
*              AUFTRITT EINES O.G. SYSTEM CODES WIRD DIE VERARBEITUNG
*              ABGEBROCHEN.
*
*  ERWARTETE PARAMETER
*              1. MEMBER NAME
*              2. PARAMETER-KETTE FUER LOAD MODUL
*              3. DDNAME-LISTE FUER LOAD MODUL
*              4. RETURN CODE FELD
*
*              DIE PARAMETER WERDEN IN PL/1 SYNTAX ERWARTET.
*
***********************************************************************
         SPACE
P0SM26   CSECT
         USING P0SM26,R10              R10 = BASISREGISTER
         SAVE  (14,12),,*          REGISTER SICHERN
         LR    R10,R15             BASISREGISTER LADEN
         ST    R13,SAVEAREA+4      SAVEAREA-CHAIN AUFBAUEN
         LA    R15,SAVEAREA
         ST    R15,8(R13)
         LR    R13,R15
*
         L     R2,0(R1)            ERSTE PARAMETER-ADRESSE LADEN
         L     R2,0(R2)            STRING-ADRESSE AUS DOPE-VEKTOR
         MVC   MBR,0(R2)           MITGLIEDSNAME UEBERTRAGEN
         L     R3,4(R1)            ZWEITE PARAMETER-ADRESSE LADEN
         L     R3,0(R3)            STRING-ADRESSE AUS DOPE-VEKTOR
         ST    R3,PARMLIST         UND IN PARMLIST EINTRAGEN
         OI    PARMLIST,X'80'      ENDE-FLAG SETZEN
         TM    8(R1),X'80'         LETZTE PARAMETER-ADRESSE ?
         BO    PARMLOK             JA, DANN MAN WEITER
         MVI   PARMLIST,X'00'      ENDE-FLAG ZURUECKSETZEN
         L     R3,8(R1)            DRITTE PARAMETER-ADRESSE LADEN
         L     R3,0(R3)            STRING-ADRESSE AUS DOPE-VEKTOR
         ST    R3,PARMLIST+4
         OI    PARMLIST+4,X'80'    ENDE-FLAG SETZEN
         LA    R1,4(R1)            ZEIGER AUF CALL-LISTE VERKUERZEN
PARMLOK  EQU   *
         L     R4,8(R1)     DRITTE PARM-ADRESSE LADEN
         LA    R5,100              RUECKKEHRKODE AUS 100 SETZEN
*
         BLDL  0,LISTBLDL          BLDL FUER MBR AUFSETZEN
         LTR   R15,R15             RUECKKEHRKODE TESTEN
         BNZ   ZURUECK             MBR NICHT VORHANDEN
*
UPDAUF   LA    R1,PARMLIST        ADRESSE VON PARMLIST LADEN
         ATTACH  DE=MBR,ECB=UPDTECB,VL=1    LOAD-MODULE AUFRUFEN
         ST    R1,SUBTCB          ADR TCB-SUBTASK N. SUBTCB
         WAIT  ECB=UPDTECB
         MVC   LRC,UPDTECB        ECB SICHERN
         DETACH SUBTCB            FREIGABE SUBTASK IEBUPDTE
         L     R15,SUBTCB         ADR. SUBTASK N. REG 15
         LA    R15,68(R15)        ADR. SUBTASK UM 68 ERHOEHEN
         MVC   R15PR,0(R15)       SPEICHERN RETURN-CODE V. SUBTASK
         NI    UPDTECB,X'BF'      LOESCHEN ECB
*
*   ABPRUEFEN CODE VON IEBUPDTE. ENTSCHEIDUNG OB COPY INPLACE
*
         CLC   LRC+1(2),=X'0000'  UPDATE NORMAL BEENDET ?
         BNE   PRC1
SCODE    L     R5,R15PR           JA. RETURN-CODE ABSPEICHERN
         B     RCODE
PRC1     CLC   LRC+1(2),=X'D370'  UPDTE MIT SC-D37 BEENDET ?
         BE    COPYINPL           JA. COPY AUFSETZEN
         CLC   LRC+1(2),=X'B370'  UPDTE MIT SC-B37 BEENDET ?
         BNE   PRC3               NEIN.
         CLC   R15PR,=F'4'        JA. RETURNCODE=4 ?
         BE    COPYINPL           JA. COPY AUFSETZEN
         B     SCODE              NEIN.
PRC3     CLC   LRC+1(2),=X'E370'  UPDTE MIT SC-B37 BEENDET ?
         BNE   SCODE              NEIN.
         CLC   R15PR,=F'4'        JA. RETURNCODE=4 ?
         BE    COPYINPL           JA. COPY AUFSETZEN
         B     SCODE
*
*  COPY INPLACE AUF SYSUT2 DA SC D37,B37-4 ODER E37-4
*
COPYINPL EQU   *
         NOP   SCODE              NUR EINMAL COPY INPLACE
*
         OPEN  (COPINDCB,OUTPUT)
         PUT   COPINDCB,DDNKON    STEUERKARTE F. COPY INPLACE
         CLOSE COPINDCB
         ATTACH EP=IEBCOPY,ECB=UPDTECB,PARAM=(,DDCOPY),VL=1
         ST    R1,SUBTCB
         WAIT  ECB=UPDTECB
         MVC   LRC,UPDTECB
         DELETE EP=IEBCOPY        FREIGABE MODUL IEBCOPY
         DETACH SUBTCB            FREIGABE SUBTASK
         NI    UPDTECB,X'BF'     LOESCHEN ECB
         OI    COPYINPL+1,X'F0'   SCHALTER EINMAL COPY AN
         CLC   LRC+1(2),=X'0000'  COPY NORMAL BEENDET ?
         BE    UPDAUF             NEUER IEBUPDTE LAUF
         LR    R5,R15
RCODE    EQU   *
ZURUECK  ST    R5,0(R4)
         L     R13,SAVEAREA+4      SAVEAREA-POINTER ZURUECKLADEN
         RETURN (14,12),RC=0       UND ZURUECKSPRINGEN
*
*        DEFINITIONEN
*
SUBTCB   DC    F'0'               FELD F. SUBTASK TCB-ARESSE
UPDTECB  DC    F'0'
LRC      DC    F'0'               ZWISCHENFELD  SC
R15PR    DC    F'0'               ZWISCHENFELD  RC  R15
         CNOP  2,4
DDCOPY   DC    X'0028'            DDNAME-LISTE F. IEBCOPY
         DC    X'0000000000000000'
         DC    X'0000000000000000'
         DC    X'0000000000000000'
         DC    X'0000000000000000'
         DC    C'COPSYSIN'
         DS    0F
DDNKON   DC    CL80' C I=SYSUT2,O=SYSUT2'
COPINDCB DCB   DDNAME=COPSYSIN,DSORG=PS,MACRF=PM,                      *
               RECFM=FB,LRECL=80,BLKSIZE=80
LISTBLDL DS    0F                  BLDL-LISTE
         DC    H'1',H'58'          1 MBR-EINTRAG, LAENGE=58
MBR      DC    CL8' '              MITGLIEDSNAME
         DC    25H'0'              DIRECTORY-INFORMATIONEN
SAVEAREA DC    18F'0'
PARMLIST DC    F'0'                PARMLIST FUER LOAD-MODULE
         DC    F'0'                ZWEITE ADRESSE FUER PARMLIST
*
*        EQUATES
*
R0       EQU   0                   REGISTER 0
R1       EQU   1                   REGISTER 1
R2       EQU   2                   REGISTER 2
R3       EQU   3                   REGISTER 3
R4       EQU   4                   REGISTER 4
R5       EQU   5                   REGISTER 5
R10      EQU   10                  REGISTER 10
R13      EQU   13                  REGISTER 13
R15      EQU   15                  REGISTER 15
         END   P0SM26
