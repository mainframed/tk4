PROC 0
GLOBAL &HEXVALUE
/**********************************************************************/
/*     H     H   EEEEEEE    AAAAA    DDDDDD    EEEEEEE   RRRRRR       */
/*     H     H   E         A     A   D     D   E         R     R      */
/*     HHHHHHH   EEEEEEE   AAAAAAA   D     D   EEEEEEE   RRRRRR       */
/*     H     H   E         A     A   D     D   E         R   R        */
/*     H     H   EEEEEEE   A     A   DDDDDD    EEEEEEE   R     R      */
/**********************************************************************/
/*  CLIST NAME: VTAM36            REL/DATE: 2.1/08.15.79              */
/*                                                                    */
/*  DOC: THIS CLIST WILL FIND THE RDTE FOR ANY GIVEN SYMBOLIC         */
/*       NAME OR COMMUNICATIONS ID.                                   */
/*  SYMBOLS EQUATED: ATCVT = VTAMS CVT, QAB = POINTER TO FIRST RDT    */
/*  RDTSEG = POINTER TO FIRST RDT                                     */
/*  SYMBOLS FOUND: SAME AS ABOVE                                      */
/*  RETURN: NONE                                                      */
/*  DEPENDENCIES: 1) THIS CLIST REQUIRES THAT COMMAND                 */
/*                   CLEAR BE INSTALLED IN YOUR ENVIRONMENT.        */
/*                2) THIS CLIST REQUIRES THAT CLIST 'HEX' BE          */
/*                   INSTALLED IN YOUR ENVIRONMENT.                   */
/*  USE: UPON ENTRY THE USER WILL BE ASKED IF HE WISHES TO FIND       */
/*       AN RDTE USING THE SYMBOLIC OF THE CID. HE WILL THEN ENTER    */
/*       EITHER THE NAME OR THE CID AT WISH TIME THE CLIST WILL       */
/*       ATTEMPT TO FIND IT. IF IT DOES IT WILL THEN EQUATE THE RDTE  */
/*       TO EITHER THE NAME OR THE CID GIVEN AND WILL THEN ASK IF THE */
/*       USER WISHES TO FIND ANOTHER RDTE IF NOT THE CLIST WILL       */
/*       RETURN TO CALLER.                                            */
/*SJM******************************************************************/
ASK: CLEAR
WRITE IF YOU WISH TO FIND AN RDT USING ITS DAF ENTER A "D", IF YOU
WRITE WISH TO FIND AN RDT USING ITS SYMBOLIC NAME ENTER A "N"
WRITENR IF YOU WISH TO EXIT THEN ENTER AN "X" ===>
READ &ANS
IF &ANS = X THEN GOTO ENDALL
IF &ANS = D THEN SET &P1 = DAF
IF &ANS = N THEN SET &P1 = NAME
IF &ANS ^= D && &ANS ^= N THEN DO
WRITE INVALID REPLY TRY AGAIN
GOTO ASK
END
IF &P1 = DAF THEN WRITENR ENTER DAF (IE. 3F2C) ===>
ELSE WRITENR ENTER SYMBOLIC NAME (IE. LINE01) ===>
READ &P2
EQU ATCVT 408.
EQU QAB ATCVT%+E0
EQU RDTSEG QAB%+8
EQU &P2 RDTSEG
CONT: IF &P1 = NAME THEN DO
SET &NAME = &P2
IF &LENGTH(&NAME) LT 8 THEN DO
SET &PAD = &STR(        )
SET &FILL = &SUBSTR(1:8-&LENGTH(&NAME),&PAD)
SET &NAME=&STR(&NAME&FILL)
END
END
CHECK: IF &P1 = DAF THEN DO
CONTROL NOMSG
COMPARE VAL(C'VTAMSEG') WITH(ADDR(RDTSEG%) LE(7))
SET &LCC = &LASTCC
CONTROL MSG
IF &LCC = 0 THEN DO
SET &LOSTCC = 1556
GOTO FND
END
EVAL RDTSEG%-2 LE(2)
SET &LOSTCC = &LASTCC
FND: CONTROL NOMSG
FIND X'0000&P2' ADDR(RDTSEG%:RDTSEG%+&LOSTCC.N) BDY(4) MASK(X'0000FFFF')
SET &LCC2 = &LASTCC
CONTROL MSG
IF &LCC2 = 0 THEN DO
EVAL X+8
SET &LOSTCC = &LASTCC
EQU &P2 X-8 LE(&LOSTCC) STR(RDTE)
EVAL &P2+18 LE(1)
%HEX &LASTCC
SET &DEVTY = &HEXVALUE
SET &RET = 1
GOTO TYPE
RET1: CLEAR
LIST &P2 LE(&LOSTCC) REMARK('&P2 IS AN &DEVTYPE')
GOTO SKIP
END
ELSE GOTO NEXTSEG
END
ELSE DO
CONTROL NOMSG
COMPARE VAL(C'VTAMSEG') WITH(ADDR(RDTSEG%) LE(7))
SET &LCC2 = &LASTCC
CONTROL MSG
IF &LCC2 = 0 THEN DO
SET &LOSCC = 1556
GOTO FIND
END
EVAL RDTSEG%-2 LE(2)
SET &LOSCC = &LASTCC
FIND: CONTROL NOMSG
SET &LE = &LENGTH(&NAME)
FIND C'&NAME' ADDR(RDTSEG%:RDTSEG%+&LOSCC.N) LE(8) BDY(4)
SET &LCC2 = &LASTCC
CONTROL MSG
IF &LCC2 = 0 THEN GOTO RDTFOUND
END
NEXTSEG: SET &A = 0
EQU RDTSEG RDTSEG%+5C
COMPARE ADDR(RDTSEG) WITH(ADDR(QAB))
IF &LASTCC = 0 THEN DO
WRITE RDTE PASSED IN PARM NOT FOUND IN DIRECTORY
GOTO ERROR
END
GOTO CHECK
RDTFOUND: EQU &P2 X STR(RDTE)
EVAL &P2+18 LE(1)
%HEX &LASTCC
SET &DEVTY = &HEXVALUE
SET &RET = 2
GOTO TYPE
RET2: +
CLEAR
EVAL &P2+10
LIST &P2 LE(&LASTCC) REMARK('&P2 IS AN &DEVTYPE')
SKIP: +
EQU &P2 X+10
COMPARE VALUE(X'72') WITH(ADDR(&P2) LE(1))
IF &LASTCC ^= 0 THEN DO
COMPARE VAL(X'10') WITH(ADDR(&P2) LE(1))
IF &LASTCC ^= 0 THEN GOTO USENT
END
EQU &P2 X+59
COMPARE VAL(X'00') WITH(ADDR(&P2) LE(3))
SET &LCC3 = &LASTCC
IF &LCC3 = 0 THEN GOTO USENT
EQU &P2 X+58
SET &A = &LCC3
SET B = 04
GOTO ONWARD
USENT: EQU &P2 X-8
ONWARD: EQU X &P2
AGAIN: +
WRITE
WRITE
WRITE DEPRESS ENTER WHEN READY TO CONTINUE
READ
GOTO ASK
ERROR: WRITE **** AN ERROR HAS OCCURED *******
GOTO AGAIN
TYPE: +
      IF &DEVTY = 90   THEN SET &DEVTYPE = &STR(COMPONENT)
      IF &DEVTY = 82   THEN SET &DEVTYPE = &STR(INTERMEDIATE NODE)
      IF &DEVTY = 80   THEN SET &DEVTYPE = &STR(TERMINAL)
      IF &DEVTY = 75   THEN SET &DEVTYPE = &STR(UTERM)
      IF &DEVTY = 70   THEN SET &DEVTYPE = &STR(CLUSTER)
      IF &DEVTY = 50   THEN SET &DEVTYPE = &STR(LINE)
      IF &DEVTY = 3    THEN SET &DEVTYPE = &STR(LOCAL HEADER)
      IF &DEVTY = 30   THEN SET &DEVTYPE = &STR(GROUP)
      IF &DEVTY = 45   THEN SET &DEVTYPE = &STR(LOCAL DEVICE)
      IF &DEVTY = 2    THEN SET &DEVTYPE = &STR(APPLICATION HDR)
      IF &DEVTY = 55   THEN SET &DEVTYPE = &STR(APPLICATION)
      IF &DEVTY = 20   THEN SET &DEVTYPE = &STR(LCDO DIALSET)
      IF &DEVTY = 1    THEN SET &DEVTYPE = &STR(RN)
      IF &DEVTY = 71   THEN SET &DEVTYPE = &STR(PU)
      IF &DEVTY = 81   THEN SET &DEVTYPE = &STR(LOGICAL UNIT)
      IF &DEVTY = 4    THEN SET &DEVTYPE = &STR(SWITCHED SUBAREA HDR)
      IF &DEVTY = 5    THEN SET &DEVTYPE = &STR(LOCAL SUBAREA HDR)
      IF &DEVTY = 72   THEN SET &DEVTYPE = &STR(PUX)
      IF &DEVTY = 10   THEN SET &DEVTYPE = &STR(LUX)
      IF &DEVTY = 51   THEN SET &DEVTYPE = &STR(DAN)
      IF &DEVTY = 6    THEN SET &DEVTYPE = &STR(CDRM HDR)
      IF &DEVTY = 07   THEN SET &DEVTYPE = &STR(CDRSC HDR)
      IF &DEVTY = 11   THEN SET &DEVTYPE = &STR(CDRM)
      IF &DEVTY = 83   THEN SET &DEVTYPE = &STR(CDRSC)
      IF &RET = 2 THEN GOTO RET2
      IF &RET = 1 THEN GOTO RET1
ENDALL:WRITE VTAM36 COMPLETE
