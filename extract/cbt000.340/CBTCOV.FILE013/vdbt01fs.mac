IEFACTRT CSECT
R0       EQU   0             =12 - STEP ENDE  / =16 - JOB ENDE
R1       EQU   1             #4 - SMF SATZ WIRD GESCHRIEBEN
R2       EQU   2
R3       EQU   3             BASIS-REG.
R4       EQU   4             BASIS-REG. FUER USERAREA
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9             A(SMF-SATZ)
R10      EQU   10            A(PARAMETER ADR. LISTE)
R11      EQU   11            GERETTETE SAVE AREA ADR. (R13)
R12      EQU   12            DARF NICHT VERAENDERT WERDEN WEGEN IEFYS
R13      EQU   13            WORK AREA ADR. (45 WORTE)    FUER IEFYS
R14      EQU   14
R15      EQU   15            =4 - CANCEL JOB
*
DISK     EQU   X'20'         DISK DEVICE CLASS
TAPE     EQU   X'80'         TAPE DEVICE CLASS
*
***********************************************************************
*
         SAVE  (14,12),,*    IN SAVE AREA DES RUFENDEN PROGRAMMES
         LR    R11,R13       R13 RETTEN
         LR    R3,R15
         USING IEFACTRT,R3
         B     ANFANG
         DC    CL8'&SYSTIME',CL8'&SYSDATE'
*
*
ANFANG   LR    R15,R0
         C     R15,=F'12'    INHALT VON REGISTER 0
         BL    MESSAGE       KLEINER ALS 12
         C     R15,=F'24'    ODER GROESSER ALS 24 ?
         BH    MESSAGE
         S     R15,=F'8'        BEI ENTRY IN IEFACTRT BEDEUTET
         B     *+0(R15)        /
         B     GETPARM       R0=12  STEP-TERMINATION
         B     GETPARM       R0=16  JOB-TERMINATION
         B     RETURN2       R0=20  SMF-30-SATZ, NICHT VERARBEITEN
         B     RETURN2       R0=24  SMF-32-SATZ (Z.Z. NICHT ERZEUGT)
*
MESSAGE  WTO   '--- IEFACTRT --- FALSCHER PARAMETER IN REGISTER 0'
         B     RETURN2
*
GETPARM  LR    R10,R1        A(PARAMETER ADR. LISTE)
         L     R9,36(R10)    A(RECORD DESCR. WORD DES SMF SATZES) IN R9
*
*
*
         GETMAIN R,LV=LDSECT,SP=255 FUER WORK AREA + ZEILE
         LTR   R15,R15       WAR GETMAIN ERFOLGREICH ?
         BNZ   NOCORE        NEIN
         XC    0(LIEFYS,R1),0(R1)                   GETMAIN-FELD
         XC    LIEFYS(LDSECT-LIEFYS,R1),LIEFYS(R1)  LOESCHEN
         LR    R13,R1        A(WORK AREA + ZEILE) IN R13 FUER IEFYS
         USING MSGDSECT,R13
*
***********************************************************************
*
JOBSTEP  CLI   5(R9),5            JOB- ODER STEPENDE?
         BNE   LOADREG4           STEP
         L     R1,0(R10)          A(CEPA)
         NI    32(R1),X'00'       JOBINFORMATION IMMER DRUCKEN
LOADREG4 L     R4,0(R10)          A(COMMON EXIT PARAMETER AREA)
         L     R4,32(R4)          A(USERAREA)
         USING USERAREA,R4        BASISREG. FUER USERAREA
         LTR   R4,R4              STEPINFORMATIONEN DRUCKEN?
* DAS 1. BYTE DER USERAREA-ADRESSE WIRD VON IEFUJV BENUTZT, DIE UNTER-
* DRUECKUNG VON STEPINFORMATIONEN ZU FORDERN (MSGLEVEL=(.,0))
         BM    NOPRNT1            NEIN
         MVI   ZEILE,C' '         LEERZEILE
         MVC   ZEILE+1(109),ZEILE VOR STEP- BZW. JOBENDE-INFORMATION
         BAL   R14,DRUCK          DRUCKEN
         BAL   R14,STDRUCK        ERSTE *ZEILE DRUCKEN
         MVC   ZEILE+15(14),START MSG-TEILE FUER JOB- U. STEP-ENDE
         L     R6,43(R9)          LOAD START-ZEIT IN R6
         LA    R5,ZEILE+23        A(HH.MM.SS) IN DER ZEILE NACH R5
         BAL   R14,HHMMSS
         MVC   ZEILE+31(13),STOP
         L     R6,6(R9)           LOAD STOP-ZEIT IN R6
         LA    R5,ZEILE+38        A(HH.MM.SS) IN DER ZEILE NACH R5
         BAL   R14,HHMMSS
         MVC   ZEILE+46(12),DAUER
         L     R6,6(R9)           LOAD STOP-ZEIT IN R6
         S     R6,43(R9)          SUBTRAHIERE START-ZEIT
         BNM   OKS
         A     R6,=F'8640000'     KORREKTUR BEI TAGESWECHSEL
OKS      LA    R5,ZEILE+52        A(HH.MM.SS) IN DER ZEILE NACH R5
         BAL   R14,HHMMSS
         MVC   ZEILE+60(15),CPU
*
NOPRNT1  CLI   5(R9),5            JOB- ODER STEP-ENDE ?
         BNE   STEPEND
*
***********************************************************************
*
JOBEND   MVC   ZEILE(7),JOB       'JOB' NACH ZEILE
         MVC   ZEILE+7(8),18(R9)  JOBNAME NACH ZEILE
         L     R6,12(R10)         A(JOB CPU TIME) IN R6
         L     R2,76(R9)          SRB-CPU NACH R2
         LA    R2,0(R2)           1. BYTE LOESCHEN
         BAL   R14,SSSSSSPP
         MVC   ZEILE+75(35),DATUM       'DATUM' NACH ZEILE
         UNPK  ZEILE+92(5),11(3,R9)    DATUM NACH ZEILE
         MVC   ZEILE+77(3),=C'MDL'
         L     R7,16              A(CVT)
         LA    R7,0(R7)           1. BYTE X'00'
         S     R7,=F'6'           A(CPU MODELL)
         LH    R6,0(R7)           CPU MODELL
         LA    R5,ZEILE+81        A(CPU MODELL IN ZEILE)
         STH   R6,DW              CPU MODELL
         MVO   DW2(4),DW(2)       AUFBEREITEN
         OI    DW2+3,X'0F'        FUER
         UNPK  0(4,R5),DW2+1(3)   HEXADEZIMALES
         TR    0(4,R5),TRANTAB    DRUCKEN
         STIDP DW                 CPUID NACH DW
         CLI   DW,X'01'           TEST 3033N
         BNE   JOBDRUCK
         MVI   ZEILE+85,C'N'
JOBDRUCK BAL   R14,DRUCK          JOB-ENDE-ZEILE DRUCKEN
         B     *+12
         DC    C'KOSTEN  '
         NOP   ENDSTERN
         LTR   R4,R4              USERAREA VORHANDEN?
         BZ    ENDSTERN           NEIN
         BAL   R14,SEPDRUCK
         MVC   ZEILE(110),TEXT8
         ED    ZEILE+85(9),JOBPREIS
         BAL   R14,DRUCK
         B     ENDSTERN           LETZTE *ZEILE DRUCKEN
*
***********************************************************************
*
STEPEND  LTR   R4,R4              USERAREA VORHANDEN ?
         BZ    NOUSER             NEIN
*
         MVI   STEPIND,X'00'      INDIKATOR - CPU NOCH NICHT VERLAENG.
         L     R6,20(R10)         A(STEP CPU TIME)
         L     R6,0(R6)           CPU TIME
         SRL   R6,8               ACC. NR. HINAUSSCHIEBEN
         ST    R6,STEP4CPU        STEP CPU TIME
         L     R7,JOBTIME         CPU-SUMME VON VORHERIGEN STEPS
         AR    R7,R6              CPU-ZEIT SUMMIEREN
         ST    R7,JOBTIME         NACH SUMMENFELD (IN 1/100 SEC)
*
         SRDA  R6,32              CPU-ZEIT (1/100 SEC) IN R7 SCHIEBEN
         D     R6,=F'100'         CPU-ZEIT (SEC) IN R7
         L     R6,JOBVERL         WURDE JOB CPU-ZEIT
         LTR   R6,R6              BEREITS VERLAENGERT ?
         BZ    NOUSER             NEIN
         SR    R6,R7              VERLAENGERUNG MINUS STEP CPU-ZEIT
         ST    R6,JOBVERL         RESTL. VERLAENGERUNG
*
NOUSER   MVC   ZEILE(7),STEP      'STEP' NACH ZEILE
         MVC   ZEILE+7(8),66(R9)  STEPNAME NACH ZEILE
         L     R6,20(R10)         A(STEP CPU TIME) IN R6
         L     R2,98(R9)          SRB-CPU NACH R2
         LA    R2,0(R2)           1. BYTE LOESCHEN
         BAL   R14,SSSSSSPP
         LH    R6,78(R9)          PGM SIZE IN R6
         ST    R6,STEP4HSP        PGM SIZE
         LA    R5,ZEILE+76        A(PGM SIZE IN ZEILE) IN R5
         BAL   R14,CONVERT1
         MVC   ZEILE+75(5),PGM    'PGM' NACH ZEILE
         LH    R6,74(R9)          REGION SIZE IN R6
         LA    R5,ZEILE+89        A(REGION REGION SIZE IN ZEILE) IN R5
         BAL   R14,CONVERT1
         MVC   ZEILE+84(9),REGION 'REGION' NACH ZEILE
         MVC   ZEILE+106(4),=C'   *'
         LH    R6,55(R9)          COMPLETION CODE IN R6
         LA    R5,ZEILE+103       A(CC IN ZEILE) IN R5
         BAL   R14,COMPCODE
CCEND    MVC   ZEILE+97(6),CC     'CC' NACH ZEILE
         LTR   R4,R4              STEPINFORMATIONEN DRUCKEN?
         BM    NOPRNT2            NEIN
         BAL   R14,DRUCK          STEP-ENDE-ZEILE DRUCKEN
NOPRNT2  L     R6,20(R10)         A(STEP CPU TIME)
         L     R6,0(R6)           STEP CPU TIME
         LTR   R6,R6              GLEICH NULL?
         BZ    ENDSTERN           JA, VERARBEITUNG BEENDEN
*
*
*
ZUGRIFFE LH    R6,106(R9)         LAENGE DER DEV.ALLOC.INFORM. IN R6
         CH    R6,=H'10'
         BL    KOSTEN             KEINE DEVICES WAREN ALLOCATED
         LTR   R4,R4              STEPINFORMATIONEN DRUCKEN?
         BM    NOPRNT3            NEIN
         BAL   R14,SEPDRUCK       -ZEILE DRUCKEN
         MVC   ZEILE(110),TEXT1   UEBERSCHRIFT FUER I/O'S
         BAL   R14,DRUCK          DRUCKEN
NOPRNT3  BCTR  R6,0               2 BYTES (LAENGE D. LAENGENFELDES)
         BCTR  R6,0               SUBTRAHIEREN
         SRDA  R6,32              VERSCHIEBEN IN R7
         D     R6,=F'8'           ANZAHL DER DEVICES IN R7
*
         LA    R5,ZEILE+4         A(1.DEV.ADR. IN ZEILE) IN R5
         LA    R2,108(R9)         A(1.DEVCLASS IN SMF-SATZ) IN R2
         LA    R8,ZEILE+94        A(LETZT.DEV.ADR. IN ZEILE) IN R8
SCHLEIFE LH    R6,2(R2)           DEV.ADR. AUS SMF-SATZ IN R6
         BAL   R14,CONVERT2
         LA    R5,3(R5)           A(ANZ. DER ZUGRIFFE IN ZEILE) IN R5
         L     R6,4(R2)           ANZ. DER ZUGRIFFE AUS SMF-SATZ IN R6
         BAL   R14,CONVERT1
*
CDISK    CLI   0(R2),DISK         DISK DEVICE CLASS ?
         BE    ISDISK             JA
         CLC   2(2,R2),VIO        VIO-VERARBEITUNG?
         BNE   CTAPE              NEIN
ISDISK   L     R0,STEP4D          DISK-IO'S PRO STEP
         AR    R0,R6              FUER KOSTENBERECHNUNG
         ST    R0,STEP4D          SAMMELN
         B     NEXT
CTAPE    CLI   0(R2),TAPE         TAPE DEVICE CLASS ?
         BNE   NEXT               NEIN
         L     R0,STEP4T          TAPE-IO'S PRO STEP
         AR    R0,R6              FUER KOSTENBERECHNUNG
         ST    R0,STEP4T          SAMMELN
*
NEXT     LA    R5,12(R5)          A(NAECHSTE DEV.ADR. IN ZEILE) IN R5
         LA    R2,8(R2)           A(NAECHSTE DEVCLASS IN SMF-SATZ)IN R2
         CR    R5,R8              ZEILE VOLL ?
         BNH   BCT                NEIN
         LTR   R4,R4              STEPINFORMATIONEN DRUCKEN?
         BM    NOPRNT4            NEIN
         BAL   R14,DRUCK
NOPRNT4  LA    R5,ZEILE+4         A(1.DEV.ADR. IN ZEILE) IN R5
         LA    R8,ZEILE+94        A(LETZT.DEV.ADR. IN ZEILE) IN R8
BCT      BCT   R7,SCHLEIFE
*
ZEILREST SR    R8,R5              ANZ DER REST. BLANKS IN R8
         CH    R8,=H'90'          WAR ZEILE VOLL ?
         BE    ZEILVOLL           JA
         BCTR  R5,0               ANF. ADR. FUER
         BCTR  R5,0               RESTL. BLANKS IN R5
         AH    R8,=H'15'          ANZ. BLANKS-1 FUER MVC
         MVI   0(R5),C' '
         EX    R8,MVC             MOVE REST. BLANKS NACH ZEILE
         LTR   R4,R4              STEPINFORMATIONEN DRUCKEN?
         BM    ZEILVOLL           NEIN
         BAL   R14,DRUCK
*
*        ANZAHL DER VERSCHIEDENEN BANDEINHEITEN BESTIMMEN
*
ZEILVOLL LTR   R4,R4              USERAREA VORHANDEN?
         BZ    KOSTEN             NEIN
         LA    R5,TAPETAB         TABELLE FUER BANDEINH. ADRESSIEREN
         LA    R6,TABLEN          ANZAHL DER MOEGLICHEN EINTRAEGE
COMPARE  CLC   0(2,R5),=X'0000'   TABELLENENDE?
         BE    EOT                JA
         LA    R5,2(R5)           NAECHSTEN EINTRAG ADRESSIEREN
         BCT   R6,COMPARE         SCHLEIFENENDE?
EOT      LA    R6,TAPETAB         R5 MINUS
         SR    R5,R6              R6
         SRL   R5,1               GETEILT DURCH 2
         ST    R5,CNT40T          IST DIE ANZAHL DER BANDEINHEITEN
         XC    TAPETAB(2*TABLEN),TAPETAB  TABELLE WIEDER LOESCHEN
         LH    R6,106(R9)         LAENGE DER DEVICE-SECTION
         BCTR  R6,0               MINUS
         BCTR  R6,0               ZWEI UND EIN ACHTEL =
         SRDA  R6,35              ANZAHL DER DEVICES IN R7
         LA    R2,108(R9)         A (1. DEVICE CLASS) IN R2
SCHLEIF3 CLI   0(R2),TAPE         TAPE DEVICE CLASS ?
         BNE   NEXT3              NEIN
         LA    R5,TAPETAB         TABELLE FUER BANDEINH. ADRESSIEREN
         LA    R6,TABLEN          ANZAHL DER MOEGLICHEN EINTRAEGE
COMPARE1 CLC   0(2,R5),=X'0000'   TABELLENENDE?
         BE    NEWUNIT            JA, UNIT ADDRESS EINTRAGEN
         CLC   0(2,R5),2(R2)      UNIT ADDRESS BEREITS IN TABELLE?
         BE    NEXT3              JA, NAECHSTEN DEVICE ENTRY VERARB.
         LA    R5,2(R5)           NAECHSTEN EINTRAG ADRESSIEREN
         BCT   R6,COMPARE1
         WTO   MF=(E,ASTERISK)
         WTO   '* TABELLE FUER BANDEINHEITEN ZU KLEIN, TAPETAB  *'
         WTO   '* IN USERAREA AENDERN UND EXITS NEU UEBERSETZEN *'
         WTO   MF=(E,ASTERISK)
         B     COUNT
ASTERISK WTO   '*************************************************',MF=L
NEWUNIT  MVC   0(2,R5),2(R2)      UNIT ADDRESS IN TABELLE STELLEN
NEXT3    LA    R2,8(R2)           NAECHSTEN DEVICE ENTRY ADRESSIEREN
         BCT   R7,SCHLEIF3
*                                 BANDEINHEITEN ZAEHLEN
COUNT    LA    R5,TAPETAB         TABELLE FUER BANDEINH. ADRESSIEREN
         LA    R6,TABLEN          ANZAHL DER MOEGLICHEN EINTRAEGE
COMPARE2 CLC   0(2,R5),=X'0000'   TABELLENENDE?
         BE    EOT2               JA
         LA    R5,2(R5)           NAECHSTEN EINTRAG ADRESSIEREN
         BCT   R6,COMPARE2
EOT2     LA    R6,TAPETAB         R5 MINUS
         SR    R5,R6              R6
         SRL   R5,1               GETEILT DURCH 2
         ST    R5,CNT4T           IST DIE ANZAHL DER BANDEINHEITEN
         XC    TAPETAB(2*TABLEN),TAPETAB  TABELLE WIEDER LOESCHEN
*
***********************************************************************
KOSTEN   B     *+12
         DC    CL8'KOSTEN'
*
         NOP   ENDSTERN
         LTR   R4,R4              USERAREA VORHANDEN?
         BZ    ENDSTERN           NEIN
***      USING PREISE,R2
***      LA    R2,ONLINE          ONLINE-PREISLISTE ADRESSIEREN
         CLI   5(R9),5
***      BH    ZEILE1
         BH    ENDSTERN           VORERST ONLINE UEBERGEHEN
***      LA    R2,BATCH           BATCH-PREISLISTE ADRESSIEREN
*
*              CPU-ZEIT BZGL. 3033U IN SEC/10000
*
ZEILE1   LTR   R4,R4              STEPINFORMATIONEN DRUCKEN?
         BM    NOPRNT5            NEIN
         BAL   R14,SEPDRUCK       -ZEILE DRUCKEN
         MVC   ZEILE(110),TEXT2
         BAL   R14,DRUCK
         BAL   R14,BLDRUCK
NOPRNT5  L     R7,CPUTIME         CPU-ZEIT UMRECHNEN
         M     R6,CPUQUOT         AUF 3033-SEKUNDEN
         ST    R7,CPUTIME         ZUR SRT-ZEIT ADDIEREN
         ST    R7,SRTTIME         ZUR SRT-ZEIT ADDIEREN
*
*              PLATTENZEIT IN SEC/10000
*
         L     R7,STEP4D          STATISCHE UND
         A     R7,STEP40D         DYNAMISCHE PLATTEN-I/0'S
         M     R6,DIOTIME         MAL ZUGRIFFSZEIT UND ZUR
         A     R7,SRTTIME         SRT-ZEIT ADDIEREN
         ST    R7,SRTTIME
         ST    R7,TAPETIME        SPEICHERN FUER BANDZEIT-BERECHNUNG
*
*              BANDZEIT IN SEC/10000 U. SRTZEIT IN SEC/10000
*
         L     R7,STEP4T          BAND-I/O'S
         M     R6,TIOTIME         MAL ZUGRIFFSZEIT
         ST    R7,T4TIME
         L     R7,REWTIME         1 MIN FUER REWIND
         M     R6,CNT4T           MAL ANZAHL DER BANDEINHEITEN
         A     R7,T4TIME          PLUS GESAMTZUGRIFFSZEIT
         ST    R7,T4TIME          ERGIBT BANDZEIT
         L     R7,STEP40T         DYN. BAND-I/O'S
         M     R6,TIOTIME         MAL ZUGRIFFSZEIT
         ST    R7,T40TIME
         L     R7,REWTIME         1 MIN FUER REWIND
         M     R6,CNT40T          MAL ANZAHL DER BANDEINHEITEN
         A     R7,T40TIME         PLUS DYN. GESAMTZUGRIFFSZEIT
         ST    R7,T40TIME         ERGIBT DYN. BANDZEIT
         A     R7,T4TIME          DIESE ZUSAMMEN MIT STAT. BANDZEIT
         A     R7,SRTTIME         ZUR SRT-ZEIT ADDIEREN
         ST    R7,SRTTIME         UND WEGSPEICHERN
*
*              FUER MERKMALE SRTZEIT MINUS MOUNT-ZEIT BERECHNEN
*
         L     R7,CNT4T           GESAMTZAHL DER
         A     R7,CNT40T          BELEGTEN BANDEINHEITEN
         M     R6,REWTIME         MAL MOUNT-ZEIT
         L     R6,SRTTIME         VON DER SRTZEIT
         SR    R6,R7              SUBTRAHIEREN
         ST    R6,SRTNETTO        UND IN 'SRTNETTO' SPEICHERN
*
*              HSP IN 64KSEC
*
         L     R7,=F'512'
         C     R7,STEP4HSP        HSP<512K ?
         BNH   HSP1               NEIN
         ST    R7,STEP4HSP        HSP=512K SETZEN
HSP1     TM    STEP4HSP+3,X'3F'   VIELFACHES VON 64K ?
         L     R7,STEP4HSP
         BZ    HSP2               JA
         A     R7,=F'32'          NEIN, FUER RUNDUNG 32K ADDIEREN
HSP2     SRA   R7,6               HSP=HSP DIV 64
         M     R6,SRTTIME         MAL SRTZEIT
         D     R6,=F'100'         NEHMEN
*
*              1. KOSTENZEILE DRUCKEN
*
         MVC   ZEILE(110),TEXT3
         CVD   R7,DW              HSP64KSEC
         AP    DW,=PL2'50'        RUNDEN,
         OI    DW+6,X'0F'         VORZEICHEN SETZEN UND ZUM
         ED    ZEILE+46(10),DW+2  DRUCKEN AUFBEREITEN
         M     R6,HSPPRICE        MIT PREIS MULTIPLIZIEREN
         D     R6,=F'100'
         CVD   R7,DW              HSP-KOSTEN IN DEZIMAL UMWANDELN
         AP    DW,=PL2'50'        RUNDEN
         OI    DW+6,X'0F'         VORZEICHEN SETZEN
         ED    ZEILE+63(9),DW+3   ZUM DRUCK AUFBEREITEN
         MVC   SUMME,DW+3         UND FUER GESAMTKOSTEN WEGSPEICHERN
*
*              SRT-ZEIT RUNDEN UND IN 1. ZEILE DRUCKEN
*
         L     R7,SRTTIME
         A     R7,=F'5000'
         SR    R6,R6
         D     R6,F1E4
         M     R6,F1E4
         C     R7,F1E4
         BH    CVDSRT
         L     R7,F1E4
CVDSRT   CVD   R7,DW
         OI    DW+5,X'0F'
         ED    ZEILE+97(8),DW+2
         LTR   R4,R4              STEPINFORMATIONEN DRUCKEN?
         BM    NOPRNT6            NEIN
         BAL   R14,DRUCK
*
*              CPU-KOSTEN BERECHNEN
*
NOPRNT6  L     R7,CPUTIME         CPU-ZEIT
         A     R7,=F'5000'        AUF
         SR    R6,R6
         D     R6,F1E4            GANZE SEKUNDEN
         M     R6,F1E4            RUNDEN
         C     R7,F1E4            CPUZEIT > 1 SEC ?
         BH    MVCTEXT4           JA
         L     R7,F1E4            NEIN: 1 SEC BERECHNEN
MVCTEXT4 MVC   ZEILE(110),TEXT4
         CVD   R7,DW              CPU-ZEIT UMWANDELN IN DEZIMAL
         OI    DW+5,X'0F'         VORZEICHEN SETZEN
         ED    ZEILE+48(8),DW+2   AUFBEREITEN
         M     R6,CPUPRICE        MAL CPU-PREIS
         D     R6,F1E4
         CVD   R7,DW              UMWANDELN IN DEZIMAL
         AP    DW,=PL2'50'        RUNDEN
         OI    DW+6,X'0F'         VORZEICHEN SETZEN
         ED    ZEILE+63(9),DW+3   AUFBEREITEN
         AP    SUMME,DW+3(4)      ZUM GESAMTPREIS ADDIEREN
*
*              I/O-INTENSITAET BERECHNEN
*
         L     R7,SRTNETTO
         LTR   R7,R7
         BP    NOTNULL1
         MVC   ZEILE+101(4),=C'       '
         B     OUTTEXT4
NOTNULL1 S     R7,CPUTIME
         M     R6,=F'100'
         D     R6,SRTNETTO
         CVD   R7,DW
         ED    ZEILE+100(4),DW+6  ZUM DRUCK AUFBEREITEN
OUTTEXT4 LTR   R4,R4              STEPINFORMATIONEN DRUCKEN?
         BM    NOPRNT7            NEIN
         BAL   R14,DRUCK
*
*              PLATTENKOSTEN
*
NOPRNT7  MVC   ZEILE(110),TEXT5
         L     R7,STEP40D
         LTR   R7,R7              DYN. PLATTEN-I/O'S ?
         BZ    NODYND             NEIN
         CVD   R7,DW              SONST
         ED    ZEILE+29(10),DW+3  AUFBEREITEN
         B     D4IO
NODYND   MVC   ZEILE+30(15),ZEILE+29    SCHABLONE AUSBLANKEN
D4IO     L     R7,STEP4D          STAT.
         CVD   R7,DW              PLATTEN-I/O'S
         ED    ZEILE+46(10),DW+3  AUFBEREITEN
         A     R7,STEP40D
         M     R6,DSKPRICE        PLATTENKOSTEN BERECHNEN
         CVD   R7,DW              UMWANDELN
         AP    DW,=PL2'50'        RUNDEN
         OI    DW+6,X'0F'         VORZEICHEN SETZEN
         ED    ZEILE+63(9),DW+3   AUFBEREITEN
         AP    SUMME,DW+3(4)      ZUM GESAMTPREIS ADDIEREN
*
*              PAGES/SEC
*
         LH    R6,104(R9)         ADRESSE DER RELOCATE-
         LA    R6,4(R6,R9)        -SECTION IN R6
         L     R7,0(R6)           PAGE-ZAHLEN
         A     R7,4(R6)           AUS SMF-SATZ
         A     R7,20(R6)          IN R7
         A     R7,24(R6)          SAMMELN
         L     R6,SRTNETTO
         LTR   R6,R6
         BP    NOTNULL2
         MVC   ZEILE+98(7),=C'       '
         B     OUTTEXT5
NOTNULL2 M     R6,=F'1000000'
         D     R6,SRTNETTO        GETEILT DURCH SRT-ZEIT
         CVD   R7,DW              UMWANDELN IN DEZIMAL
         ED    ZEILE+98(7),DW+5   UND IN ZEILE UEBERTRAGEN
OUTTEXT5 LTR   R4,R4              STEPINFORMATIONEN DRUCKEN?
         BM    NOPRNT8            NEIN
         BAL   R14,DRUCK          SUMMENZEILE DRUCKEN
*
*              BANDKOSTEN BERECHNEN
*
NOPRNT8  MVC   ZEILE(110),TEXT6
         L     R7,CNT4T           ANZAHL DER INSGESAMT
         A     R7,CNT40T          BELEGTEN BANDEINHEITEN
         ST    R7,CNT4T           NACH CNT4T
         L     R7,T40TIME
         LTR   R7,R7              DYN. BAND-I/O'S ?
         BZ    NODYNT             NEIN
         L     R6,T4TIME          JA; GIBT ES AUCH
         LTR   R6,R6              STAT. BAND-I/O'S ?
         BZ    ONLYDYN            NEIN
         L     R7,TAPETIME        JA; NUR JEWEILS
         SRA   R7,1               DIE HAELFTE VON
         ST    R7,TAPETIME        PLATTEN- UND CPU-ZEIT ZUR STAT./DYN.
         A     R7,T40TIME         BANDZEIT ADDIEREN
         M     R6,CNT4T           BANDZEIT WIRD JE -EINHEIT VERRECHNET
         CVD   R7,DW              DYN. BANDZEIT UMWANDELN
         AP    DW,=PL3'5000'      RUNDEN
         OI    DW+5,X'0F'         VORZEICHEN SETZEN
         ED    ZEILE+29(10),DW+1  UND AUFBEREITEN
         B     T4IO
NODYNT   MVC   ZEILE+30(15),ZEILE+29    SCHABLONE (DYN.) AUSBLANKEN
T4IO     L     R7,TAPETIME        ANTEIL AN PLATTEN- UND CPU-ZEIT
         A     R7,T4TIME          PLUS STAT. ZUGRIFFS-/REWIND-ZEIT
         M     R6,CNT4T           MAL ANZAHL DER BELEGTEN BANDEINH.
         CVD   R7,DW              ERGIBT STAT. BANDZEIT; UMWANDELN
         AP    DW,=PL3'5000'      RUNDEN
         OI    DW+5,X'0F'         VORZEICHEN SETZEN
         ED    ZEILE+46(10),DW+1  UND AUFBEREITEN
         B     LOADSRT
ONLYDYN  L     R7,TAPETIME        ANTEIL AN PLATTEN- UND CPU-ZEIT
         A     R7,T40TIME         PLUS DYN. ZUGRIFFS-/REWIND-ZEIT
         M     R6,CNT4T           MAL ANZAHL DER BELEGTEN BANDEINH.
         CVD   R7,DW              ERGIBT DYN. BANDZEIT; UMWANDELN
         AP    DW,=PL3'5000'      RUNDEN
         OI    DW+5,X'0F'         VORZEICHEN SETZEN
         ED    ZEILE+29(10),DW+1  UND AUFBEREITEN
         MVC   ZEILE+44(12),ZEILE+43   SCHABLONE (STAT.) AUSBLANKEN
*
*              SRT-ZEIT RUNDEN AUF GANZE SEKUNDEN
*
LOADSRT  L     R7,SRTTIME
         A     R7,=F'5000'        UND AUF
         SR    R6,R6
         D     R6,F1E4            GANZE SEKUNDEN
         M     R6,F1E4            RUNDEN
         C     R7,F1E4            SRTZEIT > 1 SEC ?
         BH    TPRICE             JA
         L     R7,F1E4            NEIN: 1 SEC BERECHNEN
TPRICE   M     R6,CNT4T           SRT-ZEIT*ANZAHL D. BELEGTEN BANDEINH.
         M     R6,TPEPRICE        MAL BANDKOSTEN
         D     R6,F1E4            AUF RICHTIGE STELLENZAHL BRINGEN
         CVD   R7,DW              UMWANDELN IN DEZIMAL
         AP    DW,=PL2'50'        RUNDEN
         OI    DW+6,X'0F'         VORZEICHEN SETZEN
         ED    ZEILE+63(9),DW+3   UND AUFBEREITEN
         AP    SUMME,DW+3(4)      ZUM GESAMTPREIS ADDIEREN
         LTR   R4,R4              STEPINFORMATIONEN DRUCKEN?
         BM    NOPRNT9            NEIN
         BAL   R14,DRUCK
*
*              SUMMENZEILE DRUCKEN
*
NOPRNT9  MVC   ZEILE(110),TEXT7
         ED    ZEILE+63(9),SUMME  GESAMTPREIS AUFBEREITEN ZUM DRUCK
         OI    JOBPREIS+3,X'0C'   VORZEICHEN "C", FALLS NOCH X'00..0'
         AP    JOBPREIS,SUMME     STEP-KOSTEN IN USERAREA ADDIEREN
         LTR   R4,R4              STEPINFORMATIONEN DRUCKEN?
         BM    NOPRNT10           NEIN
         BAL   R14,DRUCK          DRUCKEN
*
***********************************************************************
*
ENDSTERN LTR   R4,R4              STEPINFORMATIONEN DRUCKEN?
         BM    NOPRNT10           NEIN
         BAL   R14,STDRUCK        LETZTE *ZEILE DRUCKEN
         MVI   ZEILE,C' '         LEERZEILE
         MVC   ZEILE+1(109),ZEILE NACH STEP- BZW. JOBENDE
         BAL   R14,DRUCK          DRUCKEN
*
NOPRNT10 LTR   R4,R4              USERAREA VORHANDEN?
         BZ    FREEMAIN           NEIN
         XC    STEP40D,STEP40D    FELDER FUER DYNAMISCHE
         XC    STEP40T,STEP40T    I/O'S ZURUECKSETZEN
*
*
*
FREEMAIN LR    R1,R13
         FREEMAIN R,LV=LDSECT,SP=255,A=(1)
*
*
*
RETURN   L     R6,28(R10)         A(CANCEL INDICATOR) IN R6
         TM    0(R6),X'01'        WURDE JOB CANCELLED ?
         BO    CANCEL2            JA
         CLI   5(R9),5            JOB- ODER STEP-ENDE ?
         BE    IEFUJIJ
         LA    R6,87(R9)          A(STEP TERM. INDICATORS) IN R6
         B     IEFUJIC
IEFUJIJ  LA    R6,66(R9)          A(JOB TERM. INDICATORS) IN R6
IEFUJIC  TM    0(R6),X'20'        WURDE JOB VON IEFUJI CANCELLED?
         BO    CANCEL1
*
         SR    R15,R15            RETURN CODE 0
*
RETURN1  CLI   5(R9),5            JOB-ENDE ?
         BE    RETURN11           JA
         CLI   5(R9),35           LOGOFF ?
         BNE   RETURN2            NEIN
RETURN11 LTR   R1,R4              WAR GETMAIN IN IEFUJI ERFOLGREICH ?
         BZ    RETURN2            NEIN
         LR    R7,R15             RETURNCODE SICHERN
         FREEMAIN R,LV=LUSER,SP=255,A=(1) GETMAIN WAR IN IEFUJI
         LR    R15,R7             RETURNCODE ZURUECKHOLEN
*
RETURN2  SR    R1,R1              SMF-SATZ WIRD GESCHRIEBEN
         LR    R13,R11            GERETTETES R13 ZURUECKLADEN
         ST    R15,16(R13)
         ST    R1,24(R13)
         RETURN (14,12)
*
         EJECT
***********************************************************************
***********************************************************************
**                                                                   **
**       ROUTINEN, DIE MIT BAL R14,ADR. ANGESPRUNGEN WERDEN          **
**                                                                   **
***********************************************************************
***********************************************************************
*
*        STERN-ZEILE ERZEUGEN
*
STDRUCK  MVI   ZEILE,C'*'         *ZEILE
         MVC   ZEILE+1(109),ZEILE ERZEUGEN
         B     DRUCK
*
SEPDRUCK MVI   ZEILE+1,C'-'       -ZEILE ERZEUGEN
         MVC   ZEILE+2(107),ZEILE+1
         B     DRUCK
*
BLDRUCK  MVI   ZEILE+1,C' '       '*        *'-ZEILE
         MVC   ZEILE+2(107),ZEILE+1  ERZEUGEN
         MVI   ZEILE+76,C'*'
*
***********************************************************************
*        DRUCKEN EINER ZEILE IN SYSTEM OUTPUT MSG CLASS
*
DRUCK    LR    R8,R14        RUECKSPRUNG-ADR. RETTEN
         LA    R1,ZEILE      ADR. DER ZEILE IN R1
         ST    R1,36(R12)    ADR. DER ZEILE FUER IEFYS
         MVC   42(2,R12),ZL  ZEILENLAENGE FUER IEFYS
         L     R15,VIEFYS    ADR. DER MSG PRINT POUTINE (IEFYS)
         BALR  R14,R15       DRUCKE ZEILE
         LR    R14,R8        RUECKSPRUNG-ADR. ZURUECKLADEN
         BR    R14
*
***********************************************************************
*        AUFBEREITEN DER UHRZEIT (IN R6) FUER DRUCKEN
*        IN DER FORM HH.MM.SS (PUNKTE WERDEN HIER NICHT GESETZT),
*        R5 = ANF ADR. IN DER ZEILE
*
HHMMSS   SRDA  R6,32         ZEIT IN R7 SCHIEBEN
         D     R6,=F'360000' STUNDEN IN R7
         CVD   R7,DW
         UNPK  0(2,R5),DW+6(2)    R5 ENTHAELT A(HH.MM.SS) IN DER ZEILE
         OI    1(R5),X'F0'        VORZEICHEN F
         SRDA  R6,32         REST IN R7 SCHIEBEN
         D     R6,=F'6000'   MINUTEN IN R7
         CVD   R7,DW
         UNPK  3(2,R5),DW+6(2)    R5 ENTHAELT A(HH.MM.SS) IN DER ZEILE
         OI    4(R5),X'F0'        VORZEICHEN F
         AH    R6,=H'50'          SEKUNDEN RUNDEN
         SRDA  R6,32         REST IN R7 SCHIEBEN
         D     R6,=F'100'    SEKUNDEN IN R7
         CVD   R7,DW
         UNPK  6(2,R5),DW+6(2)    R5 ENTHAELT A(HH.MM.SS) IN DER ZEILE
         OI    7(R5),X'F0'        VORZEICHEN F
         BR    R14
*
***********************************************************************
*        AUFBEREITEN DER 3 LINKEN BYTES VON R6 FUER DEZ. DRUCKEN
*        9-STELLIG MIT FUEHRENDEN BLANKS UND 2 STELLEN NACH DEM
*        DEZIMALPUNKT, R5 = ANF.ADRESSE IN DER ZEILE
*        R2 ENTHAELT SRB-CPU-TIME
*
SSSSSSPP L     R6,0(R6)           CPU TIME IN R6
         SRL   R6,8               ACC.-NR. HINAUSSCHIEBEN
         AR    R6,R2              SRB-CPU ADDIEREN
         LTR   R4,R4
         BZ    NODIV
         LE    R0,FACTOR          FACTOR AUS USERAREA
         CE    R0,=E'1.0'         FACTOR = 1 ?
         BE    NODIV              JA
*
*        DIVISION DER CPU-ZEIT DURCH FAKTOR
*
         LR    R7,R1              ALTE BEREICHSADRESSE RETTEN
         GETMAIN R,LV=16,SP=255   ZWISCHENSPEICHER ANLEGEN
         LTR   R15,R15            GETMAIN O.K. ?
         BZ    DIV                JA
         WTO   '--- IEFACTRT --- CPU-ZEIT NICHT KORRIGIERT - LSQA GETMA*
               IN ERROR'
         B     DIVEND
DIV      MVC   0(16,R1),K4E00     SCHABLONE SETZEN
         LPR   R5,R6              DEN ZU DIV. WERT IN
         ST    R5,4(R1)           DIE HINTEREN 4 BYTES SPEICHERN
         LD    R0,0(R1)           CONVERTIEREN
         AD    R0,8(R1)           NACH
         LTR   R0,R0              G1
         BALR  R8,R0              COMPILER
         BC    11,6(0,R8)         FESTKOMMA IN GLEITKOMMA
         LCDR  R0,R0              DURCH FAKTOR
         DE    R0,FACTOR          DIVIDIEREN
         MVC   0(16,R1),K4E01     SCHABLONE SETZEN
         SDR   R2,R2              CONVERTIEREN
         LER   R2,R0              NACH
         AW    R2,8(R1)           G1
         STD   R2,0(R1)           COMPILER
         L     R0,4(R1)           GLEITKOMMA
         LTDR  R2,R2              NACH
         BALR  R8,R0              FESTKOMMA
         BC    11,6(0,R8)
         LCR   R0,R0
         LR    R6,R0
         FREEMAIN R,LV=16,SP=255,A=(1)
DIVEND   LR    R1,R7
*
*        ENDE DER DIVISION DURCH EINEN FAKTOR
*
NODIV    LA    R5,ZEILE+65        A(CPU FELD IN ZEILE) IN R5
         ST    R6,CPUTIME         CPU-ZEIT MERKEN FUER KOSTENBERECHNUNG
         CVD   R6,DW              CPU-ZEIT
         MVC   0(9,R5),=X'4020202021204B2020'
         ED    0(9,R5),DW+4       AUFBEREITEN
         BR    R14
*
***********************************************************************
*        AUFBEREITEN VON R6 FUER DEZIMALES DRUCKEN
*        8-STELLIG MIT FUEHRENDEN BLANKS, R5 = ANF.ADRESSE IN DER ZEILE
*
CONVERT1 CVD   R6,DW              ZU KONVERTIERENDES WORT NACH DW
         MVC   0(8,R5),=X'4020202020202120'
         ED    0(8,R5),DW+4       UND AUFBEREITEN
         BR    R14
*
***********************************************************************
*        COMPLETION CODE AUFBEREITEN
*
COMPCODE LTR   R6,R6              COMPL. CODE 000 ?
         BNZ   COMP1
COMP0    MVC   0(3,R5),=C'000'    COMPL. CODE 000
         BR    R14
COMP1    TM    87(R9),X'02'       TERMINATION INDICATOR
         BNO   COMP0              COND. CODE (KEIN COMPL. CODE)
         STH   R6,DW
         TM    DW,X'80'           SYSTEM ODER USER COMPL. CODE ?
         BO    COMP2              USER COMPL. CODE
         MVI   0(R5),C'S'         SYSTEM COMPL. CODE
         B     COMP3
COMP2    N     R6,=X'00000FFF'    1. BIT LOESCHEN
         LA    R5,ZEILE+100       A(COMPL.CODE IN ZEILE) IN R5
         BAL   R14,CONVERT1
         MVI   ZEILE+103,C'U'     USER COMPL. CODE
         B     CCEND
COMP3    LA    R5,1(R5)           NAECHSTES ZEICHEN IN ZEILE
*
***********************************************************************
*        AUFBEREITEN VON R6 FUER HEXADEZIMALES DRUCKEN
*        DER 3 RECHTEN HALBBYTES, R5 = ANF.ADR. IN DER ZEILE
*
CONVERT2 STH   R6,DW              DIE RECHTEN
         MVO   DW2(3),DW(2)       3 HALBBYTES
         OI    DW2+2,X'0F'        EINES HALBWORTES
         UNPK  0(3,R5),DW2+1(2)   AUFBEREITEN FUER
         TR    0(3,R5),TRANTAB    HEXADEZIMALES DRUCKEN
         BR    R14
         EJECT
***********************************************************************
*
NOCORE   WTO   '--- IEFACTRT ---  KEIN PLATZ IN LSQA, ACCOUNT-INFORMATI*
               ONEN NICHT GEDRUCKT'
         WTO   '                  KOSTENBERECHNUNG EBENFALLS NICHT MOEG*
               LICH'
         B     RETURN
*
***********************************************************************
*
CANCEL1  L     R6,28(R10)         A(CANCEL INDICATOR) IN R6
         OI    0(R6),X'01'        BIT 7 AUF 1 SETZEN
CANCEL2  LA    R15,4              RETURN CODE FUER CANCEL
         B     RETURN1
*
*
*
MVC      MVC   1(0,R5),0(R5)      FUER EXECUTE-INSTR.
         EJECT
***********************************************************************
*
*        KONSTANTEN
*
***********************************************************************
VIO      DC    X'0FFF'       VIO; X'00000FFF' IM SMF-SATZ
*
SECDISK  DC    E'0.0177'
SECTAPE  DC    E'0.0092'
F1E4     DC    F'10000'
*
VIEFYS   DC    V(IEFYS)      ADR. DER MSG PRINT ROUTINE
ZL       DC    H'110'        ZEILENLAENGE
TRANTAB  EQU   *-240         UEBERSETZUNGSTABELLE FUER COMPL. CODE
         DC    C'0123456789ABCDEF'
STEP     DC    C'* STEP '
JOB      DC    C'* JOB  '
START    DC    C'  START   .  .'
STOP     DC    C'  STOP   .  .'
DAUER    DC    C'  S/S   .  .'
CPU      DC    C'  CPU      .  S'
PGM      DC    C'  PGM'
REGION   DC    C'K  REGION'
CC       DC    C'K  CC '
DATUM    DC    12C' ',C'DATE',18C' ',C'*'
*
***********************************************************************
*        KONSTANTEN FUER GLEITKOMMADIVISION                           *
***********************************************************************
*
K4E00    DC    X'4E000000000000000000000000000000'
K4E01    DC    X'00000000000000004E00000000000000'
         LTORG
         EJECT
*
***********************************************************************
*        KONSTANTEN FUER KOSTENBERECHNUNG                             *
***********************************************************************
*
*  ONLINE   DS    0F
*           DC    F'0097'
*           DC    F'9979'
*           DC    F'0021'
*           DC    F'0359'
*  *
*  BATCH    DS    0F
*           DC    F'0049'
*           DC    F'4989'
*           DC    F'0011'
*           DC    F'0196'
*
CPUQUOT  DC    F'115'   FAKTOR ZWISCHEN SCHNELLSTER CPU UND DER CPU,
*                       DIE BASIS FUER DIE CPU-ZEIT-BERECHNUNG IST.
HSPPRICE DC    F'0049'
CPUPRICE DC    F'4989'
DSKPRICE DC    F'0011'
TPEPRICE DC    F'0196'
*
DIOTIME  DC    F'177'
TIOTIME  DC    F'92'
REWTIME DC     F'600000'
*
*  PREISE   DSECT
*  HSPPRICE DS    F
*  CPUPRICE DS    F
*  DSKPRICE DS    F
*  TPEPRICE DS    F
*
***********************************************************************
*        KONSTANTEN FUER TEXTAUSGABE                                  *
***********************************************************************
TEXT1    DC    C'* ',6C'  ADR   I/O''S *',C'  ADR   I/O''S    *'
TEXT2    DC    CL76'*   KOSTENANTEILE FUER  HAUPTSPEICHER - CPU - PLATTE
               EN - BAENDER',CL33'*  MERKMALE DES STEPS',C'*'
TEXT3    DC    CL46'*   HAUPTSPEICHER (64KBSEC) :',X'4020202020202020212
               20',C'    =  ',X'4020202021204B2020',CL25' DM *  SRT-ZEIT
               T (SEC)',X'4020202020202120',C'    *'
TEXT4    DC    CL48'*   CPU-ZEIT (VERRECHNGSSEC):',X'4020202020202120',C
               C'    =  ',X'4020202021204B2020',CL28' DM *  I/O-INTENSIT
               TAET',X'402021206C',C'    *'
TEXT5    DC    CL29'*   PLATTEN-I/O''S GESAMT    :',X'402020202020202021
               12040C4E8D5404E4040202020202020202120',C'    =  ',X'40202
               202021204B2020',C' DM *  PAGES/SEC           '
         DC    X'2021204B2020',C'    *'
*                NUR ZWEI FORTSETZUNGSZEILEN ERLAUBT
TEXT6    DC    CL29'*   BAND-ZEIT GESAMT (SEC)  :',X'4020202020202020212
               2040C4E8D5404E4040202020202020202120',C'    =  ',X'402020
               02021204B2020',CL27' DM *                   '
         DC    X'404040404040',C'    *'
TEXT7    DC    CL63'*   SUMME',X'4020202021204B2020',CL37' DM *',C'*'
TEXT8    DC    CL85'*   KOSTENANTEILE FUER  HAUPTSPEICHER - CPU - PLATTE
               EN - BAENDER  : ZUSAMMEN ',X'4020202021204B2020',CL15' DM
               M',C'*'
***********************************************************************
*        DUMMY SECTION FUER IEFYS UND WORK AREAS
*
***********************************************************************
*
MSGDSECT DSECT
WORKAREA DS    45F           FUER IEFYS
LIEFYS   EQU   *-MSGDSECT
ZEILE    DS    CL116         FELD FUER ZEILE AUFBEREITEN
DW       DS    D             DOPPELWORT FUER CONVERT-INSTR.
DW2      DS    D             DOPPELWORT FUER CONVERT-INSTR.
STEP4D   DS    F             DISK-I/O'S AUS TYPE 4 PER STEP
STEP4T   DS    F             TAPE-I/O'S AUS TYPE 4 PER STEP
STEP4CPU DS    F             STEP CPU TIME
STEP4HSP DS    F             PGM SIZE
CPUTIME  DS    F
SUMME    DS    F
SRTTIME  DS    F
SRTNETTO DS    F
T4TIME   DS    F
T40TIME  DS    F
TAPETIME DS    F
CNT4T    DS    F             ANZAHL DER BANDEINH. AUS TYPE 4  PRO STEP
CNT40T   DS    F             ANZAHL DER BANDEINH. AUS TYPE 40 PRO STEP
LDSECT   EQU   *-MSGDSECT
*
         EJECT
         COPY  USERAREA
         END
