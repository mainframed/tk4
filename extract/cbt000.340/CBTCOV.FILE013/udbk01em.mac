./ ADD NAME=IECSDSL1
*/*      %INCLUDE SYSLIB(IECSDSL1)                                   */
* %      GOTO PLSDSCB;                  /*  GO TO THE PL/S VERSION   */
*/* **************************************************************** */
*/*                                                                  */
*/*                IECSDSL1 --- DSCB MAPPING MACRO                   */
*/*                                                                  */
*/* **************************************************************** */
*/*                                                                  */
*/*              ASSEMBLY LANGUAGE VERSION OF IECSDSL1               */
*/*                                                                  */
*/*      ******************************************************      */
*/*                                                                  */
*/*      THE FORMAT OF EACH OF THE DATA SET CONTROL                  */
*/*      BLOCKS (DSCB'S) CAN BE GENERATED BY CODING                  */
*/*                    IECSDSL1 (N)                                  */
*/*      WHERE N IS A NUMBER 1 - 6 CORRESPONDING TO THE              */
*/*      FORMAT NUMBER OF THE DSCB TO BE MAPPED.  MORE               */
*/*      THAN ONE DSCB CAN BE MAPPED PER MACRO CALL BY               */
*/*      SEPARATING THE FORMAT NUMBERS BY COMMAS.  THE               */
*/*      DSCB'S THUS GENERATED WILL BE MAPPED IN THE                 */
*/*      ORDER IN WHICH THE FORMAT NUMBERS ARE CODED.                */
*/*                                                                  */
*/*      ******************************************************      */
*/*                                                                  */
         MACRO
         IECSDSL1 &PARA
         LCLA  &CTR
&CTR     SETA  1
.* LABEL DS2LPDT INSERTED IN RELEASE 21.6 FOR APAR 49466.
.LOOP    AIF   (&CTR GT N'&PARA).ENDOFIT
         AIF   ('&PARA(&CTR)' EQ '1').FIRSTON
         AIF   ('&PARA(&CTR)' EQ '2').SECNDON
         AIF   ('&PARA(&CTR)' EQ '3').THIRDON
         AIF   ('&PARA(&CTR)' EQ '4').FORTHON
         AIF   ('&PARA(&CTR)' EQ '5').FIFTHON
         AIF   ('&PARA(&CTR)' EQ '6').SIXTHON
         AGO   .ERROR
.FIRSTON ANOP
IECSDSL1 EQU   *                   FORMAT 1 DSCB
IECSDSF1 EQU   IECSDSL1
DS1DSNAM DS    CL44                DATA SET NAME
DS1FMTID DS    CL1                 FORMAT IDENTIFIER
DS1DSSN  DS    CL6                 DATA SET SERIAL NUMBER
DS1VOLSQ DS    XL2                 VOLUME SEQUENCE NUMBER
DS1CREDT DS    XL3                 CREATION DATE
DS1EXPDT DS    XL3                 EXPIRATION DATE
DS1NOEPV DS    XL1                 NUMBER OF EXTENTS ON VOLUME
DS1NOBDB DS    XL1                 NUMBER OF BYTES USED IN LAST
*                                     DIRECTORY BLOCK
         DS    XL1                 RESERVED
DS1SYSCD DS    CL13                SYSTEM CODE
         DS    XL7                 RESERVED
DS1DSORG DS    XL2                 DATA SET ORGANIZATION
DS1RECFM DS    XL1                 RECORD FORMAT
DS1OPTCD DS    XL1                 OPTION CODE
DS1BLKL  DS    XL2                 BLOCK LENGTH
DS1LRECL DS    XL2                 RECORD LENGTH
DS1KEYL  DS    XL1                 KEY LENGTH
DS1RKP   DS    XL2                 RELATIVE KEY POSITION
DS1DSIND DS    XL1                 DATA SET INDICATORS
DS1SCALO DS    XL4                 SECONDARY ALLOCATION
DS1LSTAR DS    XL3                 LAST USED TRACK AND BLOCK ON TRACK
DS1TRBAL DS    XL2                 BYTES REMAINING ON LAST TRACK USED
         DS    XL2                 RESERVED
DS1EXT1  DS    XL10                FIRST EXTENT DESCRIPTION
*        FIRST BYTE                EXTENT TYPE INDICATOR
*        SECOND BYTE               EXTENT SEQUENCE NUMBER
*        THIRD - SIXTH BYTES       LOWER LIMIT
*        SEVENTH - TENTH BYTES     UPPER LIMIT
DS1EXT2  DS    XL10                SECOND EXTENT DESCRIPTION
DS1EXT3  DS    XL10                THIRD EXTENT DESCRIPTION
DS1PTRDS DS    XL5                 POSSIBLE PTR TO A FORMAT 2 OR 3 DSCB
DS1END   EQU   *
&CTR     SETA  &CTR+1
         AGO   .LOOP
.SECNDON ANOP
IECSDSL2 EQU   *                   FORMAT 2 DSCB
IECSDSF2 EQU   IECSDSL2
         DS    XL1                 KEY IDENTIFIER
DS22MIND DS    XL7                 ADDRESS OF 2ND LEVEL MASTER INDEX
DS2L2MEN DS    XL5                 LAST 2ND LEVEL MASTER INDEX ENTRY
DS23MIND DS    XL7                 ADDRESS OF 3RD LEVEL MASTER INDEX
DS2L3MIN DS    XL5                 LAST 3RD LEVEL MASTER INDEX ENTRY
         DS    XL11                RESERVED
DS2LPDT  DS    XL8                 LAST PRIME TRACK ON LAST PRIME CYL
DS2FMTID DS    CL1                 FORMAT IDENTIFIER
DS2NOLEV DS    XL1                 NUMBER OF INDEX LEVELS
DS2DVIND DS    XL1                 HIGH LEVEL INDEX DEVELOPMENT
*                                     INDICATOR
DS21RCYL DS    XL3                 FIRST DATA RECORD IN CYLINDER
DS2LTCYL DS    XL2                 LAST DATA TRACK IN CYLINDER
DS2CYLOV DS    XL1                 NUMBER OF TRACKS FOR CYLINDER
*                                     OVERFLOW
DS2HIRIN DS    XL1                 HIGHEST 'R' ON HIGH-LEVEL INDEX TRK
DS2HIRPR DS    XL1                 HIGHEST 'R' ON PRIME DATA TRACK
DS2HIROV DS    XL1                 HIGHEST 'R' ON OVERFLOW DATA TRACK
DS2RSHTR DS    XL1                 'R' OF LAST DATA RECORD ON SHARED
*                                     TRACK
DS2HIRTI DS    XL1                 HIGHEST 'R' ON UNSHARED TRACK OF
*                                     TRACK INDEX
DS2HIIOV DS    XL1                 HIGHEST 'R' FOR INDEPENDENT OVERFLOW
*                                     DATA TRACKS
DS2TAGDT DS    XL2                 TAG DELETION COUNT
DS2RORG3 DS    XL3                 NON-FIRST OVERFLOW REFERENCE COUNT
DS2NOBYT DS    XL2                 NUMBER OF BYTES FOR HIGHEST-LEVEL
*                                     INDEX
DS2NOTRK DS    XL1                 NUMBER OF TRACKS FOR HIGHEST-LEVEL
*                                     INDEX
DS2PRCTR DS    XL4                 PRIME RECORD COUNT
DS2STIND DS    XL1                 STATUS INDICATORS
DS2CYLAD DS    XL7                 ADDRESS OF CYLINDER INDEX
DS2ADLIN DS    XL7                 ADDRESS OF LOWEST LEVEL MASTER INDEX
DS2ADHIN DS    XL7                 ADDRESS OF HIGHEST LEVEL MASTER
*                                     INDEX
DS2LPRAD DS    XL8                 LAST PRIME DATA RECORD ADDRESS
DS2LTRAD DS    XL5                 LAST TRACK INDEX ENTRY ADDRESS
DS2LCYAD DS    XL5                 LAST CYLINDER INDEX ENTRY ADDRESS
DS2LMSAD DS    XL5                 LAST MASTER INDEX ENTRY ADDRESS
DS2LOVAD DS    XL8                 LAST INDEPENDENT OVERFLOW RECORD
*                                     ADDRESS
DS2BYOVL DS    XL2                 BYTES REMAINING ON OVERFLOW TRACK
DS2RORG2 DS    XL2                 TRACKS REMAINING IN INDEPENDENT
*                                     OVERFLOW AREA
DS2OVRCT DS    XL2                 OVERFLOW RECORD COUNT
DS2RORG1 DS    XL2                 CYLINDER OVERFLOW AREA COUNT
DS2NIRT  DS    XL3                 DUMMY TRACK INDEX ENTRY ADDRESS
DS2PTRDS DS    XL5                 POSSIBLE POINTER TO A FORMAT 3 DSCB
DS2END   EQU   *
&CTR     SETA  &CTR+1
         AGO   .LOOP
.THIRDON ANOP
IECSDSL3 EQU   *                   FORMAT 3 DSCB
IECSDSF3 EQU   IECSDSL3
         DS    XL4                 KEY IDENTIFIER
DS3EXTNT DS    XL40                FOUR EXTENT DESCRIPTIONS
*        FIRST BYTE                EXTENT TYPE INDICATOR
*        SECOND BYTE               EXTENT SEQUENCE NUMBER
*        THIRD - SIXTH BYTES       LOWER LIMIT
*        SEVENTH - TENTH BYTES     UPPER LIMIT
DS3FMTID DS    CL1                 FORMAT IDENTIFIER
DS3ADEXT DS    XL90                NINE ADDITIONAL EXTENT DESCRIPTIONS
DS3PTRDS DS    XL5                 RESERVED
DS3END   EQU   *
&CTR     SETA  &CTR+1
         AGO   .LOOP
.FORTHON ANOP
IECSDSL4 EQU   *                   FORMAT 4 DSCB
IECSDSF4 EQU   IECSDSL4
DS4IDFMT DS    CL1                 FORMAT IDENTIFIER
DS4HPCHR DS    XL5                 HIGHEST ADDRESS OF A FORMAT 1 DSCB
DS4DSREC DS    XL2                 NUMBER OF AVAILABLE DSCB'S
DS4HCCHH DS    XL4                 CCHH OF NEXT AVAILABLE ALTERNATE TRK
DS4NOATK DS    XL2                 NUMBER OF REMAINING ALTERNATE TRACKS
DS4VTOCI DS    XL1                 VTOC INDICATORS
DS4DOSBT EQU   X'80'               DOS BIT
DS4DSTKP EQU   X'10'               DOS STACKED PACK
DS4DOCVT EQU   X'08'               DOS CONVERTED VTOC
DS4DIRF  EQU   X'04'               DIRF BIT
DS4DICVT EQU   X'02'               DIRF RECLAIMED
DS4NOEXT DS    XL1                 NUMBER OF EXTENTS IN THE VTOC
         DS    XL2                 RESERVED
DS4DEVCT DS    0XL14               DEVICE CONSTANTS
DS4DEVSZ DS    XL4                 DEVICE SIZE
DS4DEVTK DS    XL2                 DEVICE TRACK LENGTH
DS4DEVOV DS    0XL2                KEYED RECORD OVERHEAD
DS4DEVI  DS    XL1                    NON-LAST KEYED RECORD OVERHEAD
DS4DEVL  DS    XL1                    LAST KEYED RECORD OVERHEAD
DS4DEVK  DS    XL1                 NON-KEYED RECORD OVERHEAD
*                                     DIFFERENTIAL
DS4DEVFG DS    XL1                 FLAG BYTE
DS4DEVTL DS    XL2                 DEVICE TOLERANCE
DS4DEVDT DS    XL1                 NUMBER OF DSCB'S PER TRACK
DS4DEVDB DS    XL1                 NUMBER OF DIRECTORY BLOCKS PER TRACK
DS4AMTIM DS    XL8                 VSAM TIME STAMP
DS4AMCAT DS    0XL3                VSAM CATALOG INDICATOR
DS4VSIND DS    XL1                 VSAM INDICATORS
DS4VSCRA DS    XL2                 RELATIVE TRACK LOCATION OF THE CRA
DS4R2TIM DS    XL8                 VSAM VOLUME/CATALOG MATCH
*                                  TIME STAMP
         DS    XL5                 RESERVED
DS4F6PTR DS    XL5                 POINTER TO FIRST FORMAT 6 DSCB
DS4VTOCE DS    XL10                VTOC EXTENT DESCRIPTION
         DS    XL25                RESERVED
DS4END   EQU   *
&CTR     SETA  &CTR+1
         AGO   .LOOP
.FIFTHON ANOP
IECSDSL5 EQU   *                   FORMAT 5 DSCB
IECSDSF5 EQU   IECSDSL5
DS5KEYID DS    XL4                 KEY IDENTIFIER
DS5AVEXT DS    XL5                 AVAILABLE EXTENT
*        BYTES 1 - 2     RELATIVE TRACK ADDRESS OF THE FIRST TRACK
*                        IN THE EXTENT
*        BYTES 3 - 4     NUMBER OF UNUSED CYLINDERS IN THE EXTENT
*        BYTE  5         NUMBER OF ADDITIONAL UNUSED TRACKS
DS5EXTAV DS    XL35                SEVEN AVAILABLE EXTENTS
DS5FMTID DS    CL1                 FORMAT IDENTIFIER
DS5MAVET DS    XL90                EIGHTEEN AVAILABLE EXTENTS
DS5PTRDS DS    XL5                 POINTER TO NEXT FORMAT 5 DSCB
DS5END   EQU   *
&CTR     SETA  &CTR+1
         AGO   .LOOP
.SIXTHON ANOP
IECSDSL6 EQU   *                   FORMAT 6 DSCB
IECSDSF6 EQU   IECSDSL6
DS6KEYID DS    XL4                 KEY IDENTIFIER
DS6AVEXT DS    XL5                 SHARED EXTENT DESCRIPTION
*        BYTES 1 - 2     RELATIVE TRACK ADDRESS OF THE FIRST CYLINDER
*        BYTES 3 - 4     NUMBER OF FULL CYLINDERS BEING SHARED
*        BYTE  5         NUMBER OF DATA SETS SHARING THE EXTENT
DS6EXTAV DS    XL35                SEVEN SHARED EXTENTS
DS6FMTID DS    CL1                 FORMAT IDENTIFIER
DS6MAVET DS    XL90                EIGHTEEN SHARED EXTENTS
DS6PTRDS DS    XL5                 POINTER TO NEXT FORMAT 6 DSCB
DS6END   EQU   *
&CTR     SETA  &CTR+1
         AGO   .LOOP
.ERROR   MNOTE 7,'***INCORRECT FORMAT NUMBER'
.ENDOFIT MEND
*/*                                                                  */
*/* **************************************************************** */
*/*                                                                  */
*/*                     PL/S VERSION OF IECSDSL1                     */
*/*                                                                  */
*/*      ******************************************************      */
*/*                                                                  */
*/*      BEFORE THE INCLUDE STATEMENT FOR THIS MACRO, THE            */
*/*      VARIABLES CORRESPONDING TO THE DSCB'S TO BE MAPPED          */
*/*      MUST BE INITIALIZED IN THE FOLLOWING MANNER -               */
*/*                                                                  */
*/*      FOR A FORMAT 1 DSCB -                                       */
*/*      FORMAT1 MUST BE A MACRO VARIABLE SET TO 'YES'.              */
*/*      F1PTR MUST BE A POINTER VARIABLE.                           */
*/*                                                                  */
*/*      FOR A FORMAT 2 DSCB -                                       */
*/*      FORMAT2 MUST BE A MACRO VARIABLE SET TO 'YES'.              */
*/*      F2PTR MUST BE A POINTER VARIABLE.                           */
*/*                                                                  */
*/*      FOR A FORMAT 3 DSCB -                                       */
*/*      FORMAT3 MUST BE A MACRO VARIABLE SET TO 'YES'.              */
*/*      F3PTR MUST BE A POINTER VARIABLE.                           */
*/*                                                                  */
*/*      FOR A FORMAT 4 DSCB -                                       */
*/*      FORMAT4 MUST BE A MACRO VARIABLE SET TO 'YES'.              */
*/*      F4PTR MUST BE A POINTER VARIABLE.                           */
*/*                                                                  */
*/*      FOR A FORMAT 5 DSCB -                                       */
*/*      FORMAT5 MUST BE A MACRO VARIABLE SET TO 'YES'.              */
*/*      F5PTR MUST BE A POINTER VARIABLE.                           */
*/*                                                                  */
*/*      FOR A FORMAT 6 DSCB -                                       */
*/*      FORMAT6 MUST BE A MACRO VARIABLE SET TO 'YES'.              */
*/*      F6PTR MUST BE A POINTER VARIABLE.                           */
*/*                                                                  */
*/*      NOTE THAT MORE THAN ONE DSCB CAN BE MAPPED PER INCLUDE      */
*/*      STATEMENT BY SETTING MORE THAN ONE MACRO VARIABLE TO        */
*/*      'YES'.  HOWEVER, THE DSCB'S WILL BE MAPPED IN ASCENDING     */
*/*      NUMERIC SEQUENCE.  TO MAP THE DSCB'S IN NON-ASCENDING       */
*/*      NUMERIC ORDER, SEPARATE POINTER VARIABLES MUST BE USED.     */
*/*                                                                  */
*/*      ******************************************************      */
*/*                                                                  */
*%PLSDSCB: ;
*%IF FORMAT1 ^= 'YES'                   /* IF FORMAT1 = YES, THEN    */
*    %THEN %GOTO F2;                    /* BUILD A FORMAT 1 DSCB     */
*/*                    FORMAT 1 DSCB                                 */
*DCL 1 IECSDSF1 BASED(F1PTR),           /* FORMAT 1 DSCB - DESCRIBED */
*        2 *           CHAR(140);       /* IN THE FOLLOWING STRUCTURE*/
*DCL 1 IECSDSL1 BASED(ADDR(IECSDSF1)),  /* START OF THE FORMAT 1 DSCB*/
*        2 DS1DSNAM    CHAR(44),        /* DATA SET NAME             */
*        2 DS1FMTID    CHAR(1),         /* FORMAT IDENTIFIER         */
*        2 DS1DSSN     CHAR(6),         /* DATA SET SERIAL NUMBER    */
*        2 DS1VOLSQ    CHAR(2),         /* VOLUME SEQUENCE NUMBER    */
*        2 DS1CREDT    CHAR(3),         /* CREATION DATE             */
*        2 DS1EXPDT    CHAR(3),         /* EXPIRATION DATE           */
*        2 DS1NOEPV    CHAR(1),         /* NUMBER OF EXTENTS ON
*                                          VOLUME                    */
*        2 DS1NOBDB    CHAR(1),         /* NUMBER OF BYTES USED IN
*                                          LAST DIRECTORY BLOCK      */
*        2 *           CHAR(1),         /* RESERVED                  */
*        2 DS1SYSCD    CHAR(13),        /* SYSTEM CODE               */
*        2 *           CHAR(7),         /* RESERVED                  */
*        2 DS1DSORG    CHAR(2),         /* DATA SET ORGANIZATION     */
*        2 DS1RECFM    CHAR(1),         /* RECORD FORMAT             */
*        2 DS1OPTCD    CHAR(1),         /* OPTION CODE               */
*        2 DS1BLKL     CHAR(2),         /* BLOCK LENGTH              */
*        2 DS1LRECL    CHAR(2),         /* RECORD LENGTH             */
*        2 DS1KEYL     CHAR(1),         /* KEY LENGTH                */
*        2 DS1RKP      CHAR(2),         /* RELATIVE KEY POSITION     */
*        2 DS1DSIND    CHAR(1),         /* DATA SET INDICATORS       */
*        2 DS1SCALO    CHAR(4),         /* SECONDARY ALLOCATION      */
*        2 DS1LSTAR    CHAR(3),         /* LAST USED TRACK AND LAST
*                                          BLOCK ON TRACK            */
*        2 DS1TRBAL    CHAR(2),         /* BYTES REMAINING ON LAST
*                                          TRACK USED                */
*        2 *           CHAR(2),         /* RESERVED                  */
*        2 DS1EXT1     CHAR(10),        /* FIRST EXTENT DESCRIPTION
*                                          FIRST BYTE
*                                            EXTENT TYPE INDICATOR
*                                          SECOND BYTE
*                                            EXTENT SEQUENCE NUMBER
*                                          THIRD - SIXTH BYTES
*                                            LOWER LIMIT
*                                          SEVENTH - TENTH BYTES
*                                            UPPER LIMIT            */
*        2 DS1EXT2     CHAR(10),        /* SECOND EXTENT DESCRIPTION */
*        2 DS1EXT3     CHAR(10),        /* THIRD EXTENT DESCRIPTION  */
*        2 DS1PTRDS    CHAR(5),         /* POSSIBLE PTR TO A FORMAT
*                                          2 OR 3 DSCB               */
*        2 DS1END      CHAR(0);         /* END OF THE FORMAT 1 DSCB  */
*%F2: ;
*%IF FORMAT2 ^= 'YES'                   /* IF FORMAT2 = YES, THEN    */
*    %THEN %GOTO F3;                    /* BUILD A FORMAT 2 DSCB     */
*/*                    FORMAT 2 DSCB                                 */
*DCL 1 IECSDSF2 BASED(F2PTR),           /* FORMAT 2 DSCB - DESCRIBED */
*        2 *           CHAR(140);       /* IN THE FOLLOWING STRUCTURE*/
*DCL 1 IECSDSL2 BASED(ADDR(IECSDSF2)),  /* START OF THE FORMAT 2 DSCB*/
*        2 *           CHAR(1),         /* KEY IDENTIFIER            */
*        2 DS22MIND    CHAR(7),         /* ADDRESS OF 2ND LEVEL
*                                          MASTER INDEX              */
*        2 DS2L2MEN    CHAR(5),         /* LAST 2ND LEVEL MASTER
*                                          INDEX ENTRY               */
*        2 DS23MIND    CHAR(7),         /* ADDRESS OF 3RD LEVEL
*                                          MASTER INDEX              */
*        2 DS2L3MIN    CHAR(5),         /* LAST 3RD LEVEL MASTER
*                                          INDEX ENTRY               */
*        2 *           CHAR(11),        /* RESERVED                  */
*        2 DS2LPDT     CHAR(8),         /* LAST PRIME TRACK ON THE
*                                          LAST PRIME CYLINDER       */
*        2 DS2FMTID    CHAR(1),         /* FORMAT IDENTIFIER         */
*        2 DS2NOLEV    CHAR(1),         /* NUMBER OF INDEX LEVELS    */
*        2 DS2DVIND    CHAR(1),         /* HIGH LEVEL INDEX
*                                          DEVELOPMENT INDICATOR     */
*        2 DS21RCYL    CHAR(3),         /* FIRST DATA RECORD ON
*                                          EACH CYLINDER             */
*        2 DS2LTCYL    CHAR(2),         /* LAST DATA TRACK ON
*                                          EACH CYLINDER             */
*        2 DS2CYLOV    CHAR(1),         /* NUMBER OF TRACKS FOR
*                                          CYLINDER OVERFLOW         */
*        2 DS2HIRIN    CHAR(1),         /* HIGHEST 'R' ON HIGH-LEVEL
*                                          INDEX TRACK               */
*        2 DS2HIRPR    CHAR(1),         /* HIGHEST 'R' ON PRIME
*                                          DATA TRACKS               */
*        2 DS2HIROV    CHAR(1),         /* HIGHEST 'R' ON OVERFLOW
*                                          DATA TRACKS               */
*        2 DS2RSHTR    CHAR(1),         /* 'R' OF LAST DATA RECORD
*                                          ON A SHARED TRACK         */
*        2 DS2HIRTI    CHAR(1),         /* HIGHEST 'R' ON UNSHARED
*                                          TRACK OF THE TRACK INDEX  */
*        2 DS2HIIOV    CHAR(1),         /* HIGHEST 'R' FOR INDEPENDENT
*                                          OVERFLOW DATA TRACKS      */
*        2 DS2TAGDT    CHAR(2),         /* TAG DELETION COUNT        */
*        2 DS2RORG3    CHAR(3),         /* NON-FIRST OVERFLOW
*                                          REFERENCE COUNT           */
*        2 DS2NOBYT    CHAR(2),         /* NUMBER OF BYTES FOR
*                                          HIGHEST-LEVEL INDEX       */
*        2 DS2NOTRK    CHAR(1),         /* NUMBER OF TRACKS FOR
*                                          HIGHEST-LEVEL INDEX       */
*        2 DS2PRCTR    CHAR(4),         /* PRIME RECORD COUNT        */
*        2 DS2STIND    CHAR(1),         /* STATUS INDICATORS         */
*        2 DS2CYLAD    CHAR(7),         /* ADDRESS OF CYLINDER INDEX */
*        2 DS2ADLIN    CHAR(7),         /* ADDRESS OF LOWEST LEVEL
*                                          MASTER INDEX              */
*        2 DS2ADHIN    CHAR(7),         /* ADDRESS OF HIGHEST LEVEL
*                                          MASTER INDEX              */
*        2 DS2LPRAD    CHAR(8),         /* LAST PRIME DATA RECORD
*                                          ADDRESS                   */
*        2 DS2LTRAD    CHAR(5),         /* LAST TRACK INDEX ENTRY
*                                          ADDRESS                   */
*        2 DS2LCYAD    CHAR(5),         /* LAST CYLINDER INDEX
*                                          ENTRY ADDRESS             */
*        2 DS2LMSAD    CHAR(5),         /* LAST MASTER INDEX ENTRY
*                                          ADDRESS                   */
*        2 DS2LOVAD    CHAR(8),         /* LAST INDEPENDENT OVERFLOW
*                                          RECORD ADDRESS            */
*        2 DS2BYOVL    CHAR(2),         /* BYTES REMAINING ON
*                                          OVERFLOW TRACK            */
*        2 DS2RORG2    CHAR(2),         /* TRACKS REMAINING IN
*                                          INDEPENDENT OVERFLOW AREA */
*        2 DS2OVRCT    CHAR(2),         /* OVERFLOW RECORD COUNT     */
*        2 DS2RORG1    CHAR(2),         /* CYLINDER OVERFLOW AREA
*                                          COUNT                     */
*        2 DS2NIRT     CHAR(3),         /* DUMMY TRACK INDEX ENTRY
*                                          ADDRESS                   */
*        2 DS2PTRDS    CHAR(5),         /* POSSIBLE POINTER TO A
*                                          FORMAT 3 DSCB             */
*        2 DS2END      CHAR(0);         /* END OF THE FORMAT 2 DSCB  */
*%F3: ;
*%IF FORMAT3 ^= 'YES'                   /* IF FORMAT3 = YES, THEN    */
*    %THEN %GOTO F4;                    /* BUILD A FORMAT 3 DSCB     */
*/*                    FORMAT 3 DSCB                                 */
*DCL 1 IECSDSF3 BASED(F3PTR),           /* FORMAT 3 DSCB - DESCRIBED */
*        2 *           CHAR(140);       /* IN THE FOLLOWING STRUCTURE*/
*DCL 1 IECSDSL3 BASED(ADDR(IECSDSF3)),  /* START OF THE FORMAT 3 DSCB*/
*        2 *           CHAR(4),         /* KEY IDENTIFIER            */
*        2 DS3EXTNT    CHAR(40),        /* FOUR EXTENT DESCRIPTIONS
*                                          FIRST BYTE
*                                            EXTENT TYPE INDICATOR
*                                          SECOND BYTE
*                                            EXTENT SEQUENCE NUMBER
*                                          THIRD - SIXTH BYTES
*                                            LOWER LIMIT
*                                          SEVENTH - TENTH BYTES
*                                            UPPER LIMIT             */
*        2 DS3FMTID    CHAR(1),         /* FORMAT IDENTIFIER         */
*        2 DS3ADEXT    CHAR(90),        /* NINE ADDITIONAL EXTENT
*                                          DESCRIPTIONS              */
*        2 DS3PTRDS    CHAR(5),         /* RESERVED                  */
*        2 DS3END      CHAR(0);         /* END OF THE FORMAT 3 DSCB  */
*%F4: ;
*%IF FORMAT4 ^= 'YES'                   /* IF FORMAT4 = YES, THEN    */
*    %THEN %GOTO F5;                    /* BUILD A FORMAT 4 DSCB     */
*/*                    FORMAT 4 DSCB                                 */
*DCL 1 IECSDSF4 BASED(F4PTR),           /* FORMAT 4 DSCB - DESCRIBED */
*        2 *           CHAR(96);        /* IN THE FOLLOWING STRUCTURE*/
*DCL 1 IECSDSL4 BASED(ADDR(IECSDSF4)),  /* START OF THE FORMAT 4 DSCB*/
*        2 DS4IDFMT    CHAR(1),         /* FORMAT IDENTIFIER         */
*        2 DS4HPCHR    CHAR(5),         /* HIGHEST ADDRESS OF A
*                                          FORMAT 1 DSCB             */
*        2 DS4DSREC    CHAR(2),         /* NUMBER OF AVAILABLE DSCB'S*/
*        2 DS4HCCHH    CHAR(4),         /* CCHH OF NEXT AVAILABLE
*                                          ALTERNATE TRACK           */
*        2 DS4NOATK    CHAR(2),         /* NUMBER OF REMAINING
*                                          ALTERNATE TRACKS          */
*        2 DS4VTOCI    CHAR(1),         /* VTOC INDICATORS           */
*        2 DS4NOEXT    CHAR(1),         /* NUMBER OF EXTENTS IN VTOC */
*        2 *           CHAR(2),         /* RESERVED                  */
*        2 DS4DEVCT    CHAR(14),        /* DEVICE CONSTANTS          */
*         3 DS4DEVSZ    CHAR(4),        /* DEVICE SIZE               */
*         3 DS4DEVTK    CHAR(2),        /* DEVICE TRACK LENGTH       */
*         3 DS4DEVOV    CHAR(2),        /* KEYED RECORD OVERHEAD     */
*          4 DS4DEVI     CHAR(1),       /* - NON-LAST KEYED RECORD
*                                            OVERHEAD                */
*          4 DS4DEVL     CHAR(1),       /* - LAST KEYED RECORD
*                                            OVERHEAD                */
*         3 DS4DEVK     CHAR(1),        /* NON-KEYED RECORD OVERHEAD
*                                          DIFFERENTIAL              */
*         3 DS4DEVFG    CHAR(1),        /* FLAG BYTE                 */
*         3 DS4DEVTL    CHAR(2),        /* DEVICE TOLERANCE          */
*         3 DS4DEVDT    CHAR(1),        /* NUMBER OF DSCB'S PER TRACK*/
*         3 DS4DEVDB    CHAR(1),        /* NUMBER OF DIRECTORY
*                                          BLOCKS PER TRACK          */
*        2 DS4AMTIM    CHAR(8),         /* VSAM TIME STAMP           */
*        2 DS4AMCAT    CHAR(3),         /* VSAM CATALOG INDICATOR    */
*         3 DS4VSIND    BIT(8),         /* VSAM INDICATORS           */
*          4 DS4VSREF    BIT(1),        /* A VSAM CATALOG REFERENCES
*                                          THIS VOLUME               */
*          4 DS4VSBAD    BIT(1),        /* VSAM DATA SETS ON VOLUME
*                                          ARE UNUSABLE              */
*          4 *           BIT(6),        /* RESERVED                  */
*         3 DS4VSCRA    PTR(16) BDY(BYTE),/* RELATIVE TRACK LOCATION
*                                          OF THE CRA                */
*        2 DS4R2TIM    CHAR(8),         /* VSAM VOLUME/CATALOG MATCH
*                                          TIME STAMP                */
*        2 *           CHAR(5),         /* RESERVED                  */
*        2 DS4F6PTR    CHAR(5),         /* POINTER TO FIRST FORMAT
*                                          6 DSCB                    */
*        2 DS4VTOCE    CHAR(10),        /* VTOC EXTENT DESCRIPTION   */
*        2 *           CHAR(25),        /* RESERVED                  */
*        2 DS4END      CHAR(0);         /* END OF THE FORMAT 4 DSCB  */
*%F5: ;
*%IF FORMAT5 ^= 'YES'                   /* IF FORMAT5 = YES, THEN    */
*    %THEN %GOTO F6;                    /* BUILD A FORMAT 5 DSCB     */
*/*                    FORMAT 5 DSCB                                 */
*DCL 1 IECSDSF5 BASED(F5PTR),           /* FORMAT 5 DSCB - DESCRIBED */
*        2 *           CHAR(140);       /* IN THE FOLLOWING STRUCTURE*/
*DCL 1 IECSDSL5 BASED(ADDR(IECSDSF5)),  /* START OF THE FORMAT 5 DSCB*/
*        2 DS5KEYID    CHAR(4),         /* KEY IDENTIFIER            */
*        2 DS5AVEXT    CHAR(5),         /* AVAILABLE EXTENT
*                                          BYTES 1 - 2
*                                            RELATIVE TRACK ADDRESS
*                                            OF THE FIRST TRACK IN
*                                            THE EXTENT
*                                          BYTES 3 - 4
*                                            NUMBER OF UNUSED
*                                            CYLINDERS IN THE EXTENT
*                                          BYTE 5
*                                            NUMBER OF ADDITIONAL
*                                            UNUSED TRACKS           */
*        2 DS5EXTAV    CHAR(35),        /* SEVEN AVAILABLE EXTENTS   */
*        2 DS5FMTID    CHAR(1),         /* FORMAT IDENTIFIER         */
*        2 DS5MAVET    CHAR(90),        /* EIGHTEEN AVAILABLE EXTENTS*/
*        2 DS5PTRDS    CHAR(5),         /* POINTER TO NEXT FORMAT 5
*                                          DSCB                      */
*        2 DS5END      CHAR(0);         /* END OF THE FORMAT 5 DSCB  */
*%F6: ;
*%IF FORMAT6 ^= 'YES'                   /* IF FORMAT6 = YES, THEN    */
*    %THEN %GOTO MACROEND;              /* BUILD A FORMAT 6 DSCB     */
*/*                    FORMAT 6 DSCB                                 */
*DCL 1 IECSDSF6 BASED(F6PTR),           /* FORMAT 6 DSCB - DESCRIBED */
*        2 *           CHAR(140);       /* IN THE FOLLOWING STRUCTURE*/
*DCL 1 IECSDSL6 BASED(ADDR(IECSDSF6)),  /* START OF THE FORMAT 6 DSCB*/
*        2 DS6KEYID    CHAR(4),         /* KEY IDENTIFIER            */
*        2 DS6AVEXT    CHAR(5),         /* SHARED EXTENT DESCRIPTION
*                                          BYTES 1 - 2
*                                            RELATIVE TRACK ADDRESS
*                                            OF THE FIRST CYLINDER
*                                          BYTES 3 - 4
*                                            NUMBER OF FULL
*                                            CYLINDERS BEING SHARED
*                                          BYTE 5
*                                            NUMBER OF DATA SETS
*                                            SHARING THE EXTENT      */
*        2 DS6EXTAV    CHAR(35),        /* SEVEN SHARED EXTENTS      */
*        2 DS6FMTID    CHAR(1),         /* FORMAT IDENTIFIER         */
*        2 DS6MAVET    CHAR(90),        /* EIGHTEEN SHARED EXTENTS   */
*        2 DS6PTRDS    CHAR(5),         /* POINTER TO NEXT FORMAT 6
*                                          DSCB                      */
*        2 DS6END      CHAR(0);         /* END OF THE FORMAT 6 DSCB  */
*%MACROEND: ;
