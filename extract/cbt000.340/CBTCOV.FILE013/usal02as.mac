         MACRO
&SYM     XSAVE &BASE,&AREA,&ID,&LEN,&SP=0
.*
.*                 EXTENDED SAVE MACRO
.*                 ASSUMES ENTRYPOINT ADDRESS IN REGISTER 15
.*                 SAVES REGISTERS 14 THROUGH 12
.*                 LOADS BASE REGISTER AND CHAINES SAVEAREAS
.*                 MAY PRODUCE REENTRANT CODE
.*
         LCLA  &OFFSET,&BASEOFF,&LLID,&DISPL,&I
         LCLA  &NREG,&REGIX,&LCH
         LCLC  &NM,&REG,&BL
         LCLC  &PREV,&IT
&OFFSET  SETA  4
&NM      SETC  '&SYM'
&REG     SETC  '15'
&BL      SETC  ''
&IT      SETC  '&ID'
         AIF   (T'&SP EQ 'N').SPFIX
         MNOTE 8,'SUBPOOL NUMBER NOT A SELF-DEFINING TERM'
         MEXIT
.SPFIX   ANOP
         AIF   ('&SP' NE '0' AND T'&AREA NE 'O').SPERR
.NOERR   ANOP
         AIF   (T'&ID EQ 'O').NOID
         AIF   ('&ID' NE '*').SETLL
&I       SETA  8
         AIF   ('&NM' EQ '').SECT
&IT      SETC  '&NM'.'          '
         AGO   .FINDL
.SECT    ANOP
&IT      SETC  '&SYSECT'.'          '
.FINDL   ANOP
         AIF   ('&IT'(&I,1) NE ' ').IDEND
&I       SETA  &I-1
         AIF   (&I NE 0).FINDL
&I       SETA  5
&IT      SETC  'XSAVE'
         AGO   .XID
.IDEND   ANOP
&IT      SETC  '&IT'(1,&I)
.XID     ANOP
&LLID    SETA  &I
         AGO   .ODDEV
.SETLL   ANOP
&LLID    SETA  K'&ID
.ODDEV   ANOP
         AIF   (&LLID NE &LLID/2*2).OVBL1
&BL      SETC  ' '
&LLID    SETA  &LLID+1   BLANK
         AGO   .OVBL2
.OVBL1   ANOP
&BL      SETC  '  '
&LLID    SETA  &LLID+2    2 BLANKS
.OVBL2   ANOP
&LLID    SETA  &LLID+16                 DATE UND TIME
&DISPL   SETA  4+1+&LLID   B,X,(DATE,ID)
&NM      B     &DISPL.(0,15)
         DC    AL1(&LLID)
         AIF   ('&ID' NE '*' AND '&ID' NE '').IDDEF
         DC    C'&IT&BL'     PGM-ID.
         AGO   .SDATE
.IDDEF   ANOP
         DC    C'&ID&BL'     PGM-ID.
.SDATE   ANOP
         DC    CL9'&SYSDATE'
         DC    CL7'&SYSTIME'
*
*              REGISTER - EQUATS
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
*
&OFFSET  SETA  4+4+1+&LLID   B,STM,X,(DATE,ID)
&NM      SETC  ''
.NOID    ANOP
&NM      STM   14,12,12(13)            SAVE REGS
         AIF   (T'&BASE EQ 'O').NOBASE
         AIF   ('&BASE'(1,1) NE '(').LOAD
&REGIX   SETA  1
&NREG    SETA  N'&BASE
&REG     SETC  '&BASE(&REGIX)'
         LR    &REG,15
&OFFSET  SETA  &OFFSET+2
.LOOP    ANOP
         USING *-&OFFSET+&BASEOFF,&REG
&REGIX   SETA  &REGIX+1
         AIF   ('&REGIX' GT '&NREG').SETUSE
&PREV    SETC  '&REG'
&REG     SETC  '&BASE(&REGIX)'
         LA    &REG,X'FFF'
         LA    &REG,1(&REG,&PREV)
&OFFSET  SETA  &OFFSET+8
&BASEOFF SETA  &BASEOFF+4096
         AGO   .LOOP
.LOAD    LR    &BASE,15                LOAD BASE REG
&OFFSET  SETA  &OFFSET+2
&REG     SETC  '&BASE'
.NOBASE  ANOP
         USING *-&OFFSET,&REG
.SETUSE  ANOP
         AIF   (T'&AREA NE 'O').NORENT
         AIF   ('&SP' EQ '0').SEELEN
         BAL   1,*+8         SKIP DEFINITION
         DC    AL1(&SP)      SPECIFIED SUBPOOL NUMBER
         AIF   (T'&LEN NE 'O').SPEC
         DC    AL3(72)       LENGTH FOR 1 SAVE AREA
         AGO   .LOAD0
.SPEC    DC    AL3(&LEN)     SPECIFIED LENGTH INCLUDING SAVE AREA
.LOAD0   L     0,0(,1)       GET R0 READY FOR GETMAIN
         AGO   .COMP
.SEELEN  ANOP
         AIF   (T'&LEN NE 'O').NOTZERO
         LA    0,72                    GET LENGTH
         AGO   .COMP
.NOTZERO ANOP
         LA    0,&LEN                  GET LENGTH
.COMP    ANOP
         GETMAIN   R,LV=(0)
         XC    0(3*4,1),0(1)           ZERO CHAIN ADDRESSES
         AIF   (T'&LEN NE 'O').GET
         LA    0,72                    GET LENGTH
         AGO   .NOSTH
.GET     ANOP
         LA    0,&LEN                  GET LENGTH
.NOSTH   ANOP
         STH   0,2(1)                  STORE LENGTH
         AGO   .COM
.NORENT  LA    1,&AREA                 GET SA ADDR
.COM     ST    1,8(0,13)               SA DOWN CHAIN
         ST    13,4(0,1)               SA UP CHAIN
         LR    13,1                    LOAD SA REG
         L     1,4(0,13)               GET HIGH SA
         LM    0,1,20(1)               RESTORE REGS 0 AND 1
         AIF   (T'&AREA NE 'O').DBL
         MEXIT
.DBL     AIF   (T'&LEN EQ 'O').TEST
         MNOTE 4,'SAVE AREA ID AND LENGTH MUTUALLY EXCLUSIVE, LENGTH IG*
               NORED'
.TEST    AIF   (T'&AREA EQ 'U').DEFINE
         MEXIT
.SPERR   ANOP
         MNOTE 4,'SUBPOOL SPECIFICATION INVALID WITHOUT GETMAIN FUNCTIO*
               N, IGNORED'
         AGO   .NOERR
.DEFINE  B     &AREA+72                BRANCH AROUND SAVEAREA
&AREA    DC    18F'0'                  SAVEAREA
         MEND
         MACRO
&SYM     XRETURN &RC,&MODE,&SP=0
.*
.*                 EXTENDED RETURN MACRO
.*                 RESTORES REGISTERS
.*                 MAY PROVIDE RETURNCODE
.*
         LCLA  &C
         LCLB  &NC,&CF
         LCLC  &R,&NM
         AIF   (T'&MODE EQ 'O' OR '&MODE' EQ 'R').CONT
         MNOTE 8,'UNKNOWN OPERAND'
         MEXIT
.CONT    ANOP
         AIF   (T'&SP EQ 'N').SPFIX
         MNOTE 8,'SUBPOOL NUMBER NOT A SELF-DEFINING TERM'
         MEXIT
.SPFIX   ANOP
         AIF   ('&SP' NE '0' AND '&MODE' NE 'R').SPERR
.NOERR   ANOP
&NM      SETC  '&SYM'
         AIF   (T'&RC NE 'O').CODE
&NC      SETB  (1)
         AGO   .NOCODE
.CODE    ANOP
&R       SETC  '15'
         AIF   ('&RC'(1,1) EQ '(').REG
         AIF   (T'&RC EQ 'N').FIX
&NM      L     15,&RC                  LOAD CODE
&NM      SETC  ''
         AGO   .NOCODE
.FIX     ANOP
&CF      SETB  (1)
         AGO   .NOCODE
.REG     ANOP
&R       SETC  '&RC'(2,K'&RC-2)
.NOCODE  ANOP
&NM      L     13,4(0,13)              GET HIGH SA ADDR
         AIF   (&NC OR &CF).NOSTORE
         ST    &R,16(0,13)             STORE CODE
.NOSTORE AIF   (T'&MODE EQ 'O').NORENT
         L     1,8(0,13)               GET LOW SA ADDR
         LH    0,2(1)                  GET LENGTH
         AIF   ('&SP' EQ '0').FM
         LA    2,&SP         WANTED SUBPOOL NUMBER
         SLL   2,24          INSERT SUBPOOL NUMBER INTO R2 HIGH BYTE
         OR    0,2           R0: SP-NO, LENGTH TO BE FREED
.FM      ANOP
         FREEMAIN  R,LV=(0),A=(1)
.NORENT  LM    14,12,12(13)            RESTORE REGS
         AIF   (NOT &CF).EXIT
         LA    15,&RC                  LOAD CODE
&C       SETA  &RC
         AIF   (&C/4*4 EQ &C).EXIT
         MNOTE 0,'UNUSUAL CODE'
.EXIT    MVI   12(13),X'FF'            FORTRAN REQUIREMENT
         SPM   14                      RESTORE PGM MASK AND CC
         BR    14
         MEXIT
.SPERR   ANOP
         MNOTE 4,'SUBPOOL SPECIFICATION INVALID WITHOUT FREEMAIN FUNCTI*
               ON, IGNORED'
         AGO   .NOERR
         MEND
         TITLE 'DATE, FAB-DATE UND TIME AUFBEREITEN'
***********************************************************************
*                                                                     *
*   MODULE-NAME =  ZDATE                                              *
*                                                                     *
*   FUNKTIONEN  =  DIESES UNTERPROGRAMM STELLT DEM RUFENDEN PROGRAMM  *
*              JE NACH ANFORDERUNG DAS LAUFENDE TAGES-DATUM, DAS FAB- *
*              RIK-DATUM UND DIE UHRZEIT AUFBEREITET ZUR VERFUEGUNG.  *
*                                                                     *
*   AUFRUF-FORM =  CALL   ZDATE,(DATE,FDATE,TIME),VL                  *
*                                                                     *
*              PARAMETER    INFORMATION    FELD-LAENGE    AUFBEREITET *
*              ---------    -----------    -----------    ----------- *
*                  1        TAGES-DATUM         8          TT.MM.JJ   *
*                  2        FABRIK-DATUM        5          JJTTT      *
*                  3        UHRZEIT             8          HH.MM.SS   *
*                                                                     *
*              DIE ANZAHL DER PARAMETER IST VON 1 BIS 3 BELIEBIG.     *
*              DIE REIHENFOLGE DER PARAMETER IST JEDOCH ZWINGEND      *
*                                                                     *
***********************************************************************
         EJECT
ZDATE    CSECT
         XSAVE (11,12),SA,ZDATE
*
         SR    R3,R3                    LOESCHEN
         LR    R4,R3                    LOESCHEN
         LR    R5,R3                    LOESCHEN
         LR    R6,R3                    LOESCHEN
*
         L     R2,0(0,R1)               1. PARAMETER-ADR = DATE
         TM    0(R1),X'80'              ENDE DER PARM-LISTE
         BO    SVC11                    JA
*
         L     R3,4(0,R1)               2. PARAMETER-ADR = FDATE
         TM    4(R1),X'80'              ENDE DER PARAMETER-LISTE
         BO    SVC11                    JA
*
         L     R4,8(0,R1)               3. PARAMETER-ADR = TIME
*
*              KEINE WEITERE KONTROLLE DER PARAMETER-LISTE
*
*
SVC11    DS    0H
         TIME  DEC                      R0  =  TIME PACKED  X'HHMMSSTH'
*                                       R1  =  DATE PACKED  X'00YYDDDC'
         ST    R0,WTIME                 TIME TO WTIME
         ST    R1,WDATE                 DATE TO WDATE
         MVI   WTIME+3,X'0C'            VORZEICHEN          X'HHMMSS0C'
         MVC   CTIME,SCHABTIM           SCHABLONE
         ED    CTIME,WTIME              TIME AUFBEREIT     C' HH.MM.SS'
*
         UNPK  CFDATE,WDATE             FABRIK-DATUM      X'FYFYFDFDCD'
         OI    CFDATE+4,X'F0'           F-ZONE ERSTELLEN  X'FYFYFDFDFD'
*
         PACK  FW,CFDATE(2)             JAHR                X'00000YYC'
         PACK  DW,CFDATE+2(3)           TAGE        X'000000000000DDDC'
         LA    R6,TAB1+4                MONATS-TAB FUER NORMAL-JAHR
         DP    FW,=P'4'                 JAHR DIVIDIEREN
         CP    FW+3(1),=P'0'            SCHALT-JAHR
         BNE   *+8                      NEIN, LA UMGEHEN
         LA    R6,TAB2+4                MONATS-TAB FUER SCHALT-JAHR
         CVB   R7,DW                    TAGE TO R7
         ZAP   MON,=P'1'                1  NACH MON
         LA    R8,11(0,0)               11 NACH R8
*
TAGE     DS    0H
         C     R7,0(0,R6)               TAGE MIT TAB-TAGE VERGLEICHEN
         BNH   DATEMON                  MONAT GEFUNDEN
         LA    R6,4(R6,0)               NAECHSTER TAB-PLATZ
         AP    MON,=P'1'                ADD  1  TO  MONATS-FELD
         BCT   R8,TAGE
*
DATEMON  DS    0H
         S     R6,=F'4'                 EINEN TAB-PLATZ ZURUECK
         S     R7,0(0,R6)               SUBTRACT TAB-TAGE VON FABTAGE
         CVD   R7,DW                    CONVERT REST-TAGE
         MVC   CDATE+8(2),CFDATE        JAHR              C'........YY'
         UNPK  CDATE+6(2),MON           MONAT             C'......MMYY'
         UNPK  CDATE+4(2),DW+6(2)       TAG               C'....DDMMYY'
         PACK  FW,CDATE+4(6)            PACKEN              X'0DDMMYYC'
         MVC   CDATE,SCHABDAT           SCHABLONE
         ED    CDATE,FW                 AUFBEREITEN       C'  DD.MM.YY'
*
MOVE     DS    0H
         MVC   0(8,R2),CDATE+2          DATE                C'DD.MM.YY'
         LTR   R3,R3                    FDATE AUFBEREITEN
         BZ    ENDE                     NEIN
         MVC   0(5,R3),CFDATE           FDATE                  C'YYDDD'
         LTR   R4,R4                    TIME AUFBEREITEN
         BZ    ENDE                     NEIN
         MVC   0(8,R4),CTIME+1          TIME                C'HH.MM.SS'
*
ENDE     DS    0H
         XRETURN 0
         EJECT
***********************************************************************
*                                                                     *
*              D E F I N I T I O N E N                                *
*                                                                     *
***********************************************************************
*
         DS    0D
DW       DC    D'0'                     WORK FIELD
FW       DC    F'0'                     WORK FIELD
*
WTIME    DC    F'0'
WDATE    DC    F'0'
*
CDATE    DC    CL10' '
CFDATE   DC    CL5' '
CTIME    DC    CL9' '
MON      DC    PL2'0'                    MONATS-FELD
*
         DS    0F
TAB1     DC    F'0,31,59,90,120,151,181,212,243,273,304,334'  NORMAL-JA
*
TAB2     DC    F'0,31,60,91,121,152,182,213,244,274,305,335'  SCHALT-JA
*
SCHABTIM DC    X'4021204B20204B2020'     SCHAB FUER TIME
SCHABDAT DC    X'402120204B20204B2020'   SCHAB FUER DATE
*
***********************************************************************
*                                                                     *
*              L T O R G - B E R E I C H                              *
*                                                                     *
***********************************************************************
*
         LTORG
*
         END
