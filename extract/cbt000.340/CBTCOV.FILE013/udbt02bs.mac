//EZ02GKEX JOB (00,,4190,53,999000,,,35),GRAMM,
//         CLASS=S,NOTIFY=E9T0B,PRTY=14,
//         MSGCLASS=C,USER=E9T0B,PASSWORD=
//*--------------------------------------------------------------------
//CLG EXEC ASMFCLG,FORM='*',PARM.ASM='LOAD,NODECK,LINECNT=40',
//  PARM.LKED='AC=1,LET,LIST,MAP,XREF,XCAL'
//ASM.SYSLIB  DD DSN=E9T02.MACLIB,DISP=SHR
//            DD DSN=SYS1.MACLIB,DISP=SHR
//            DD DSN=SYS1.MACLIB2,DISP=SHR
//            DD DSN=E9T0B.T.ASM,DISP=SHR
//ASM.SYSIN    DD *
         EJECT
************************************************************
*                                                          *
*             DEF4 - EDIT F4-DSCB                          *
*                                                          *
*   PROGRAMM ZUR AENDERUNG DER VSAM-TIME-STAMPS , DES      *
*   DIRF-BITS UND DER VSAM-OWNERSHIP-BITS IM FORMAT4-      *
*   -DSCB DER VTOC. AENDERUNGEN WERDEN IN EINEM SMFSATZ    *
*   TYP 137 FESTGEHALTEN.                                  *
*                                                          *
*            ERFORDERT APF-AUTORISIERUNG.                  *
*                                                          *
*   DER DSCB4-UPDATE ERFOLGT MITTELS XDAP, BEARBEI-        *
*   TET WERDEN BELIEBIG VIELE VOLUMES. DIE PLATTEN-VTOC'S  *
*   WERDEN DYNAMISCH ALLOCIERT, DAHER SIND NUR FOLGENDE    *
*   DD-KARTEN NOTWENDIG:                                   *
*                                                          *
*   SYSPRINT... AUSGABEDATEI FUER PROGRAMMELDUNGEN         *
*   SYSIN...... EINGABEDATEI FUER KONTROLLKARTEN           *
*                                                          *
************************************************************
         EJECT
************************************************************
*                                                          *
*      AUFBAU DER KONTROLLKARTEN:                          *
*                                                          *
*      1. SCHLUESSELWORT IST "DSCB4" (SPALTE BELIEBIG),    *
*      DANN  VOL=NNNNNN,                                   *
*            DS4AMTIM=XXXXXXXXXXXXXXXX,                    *
*            DS4R2TIM=YYYYYYYYYYYYYYYY,                    *
*            DIRF=M,                                       *
*            VSAM=ON  BZW. VSAM=OFF                        *
*      IN BELIEBIGER REIHENFOLGE, DURCH KOMMATA GETRENNT.  *
*                                                          *
*      ERKLAERUNG: X,Y STEHEN FUER HEXADEZIMALE ZIFFERN    *
*      (0,1,...,E,F), NNNNNN FUER VOLSER, UND M FUER DIE   *
*      ZAHLEN 0,1 (DIRF-BIT WIRD ZU NULL BZW. 1).          *
*      VOL=.. MUSS ANGEGEBEN WERDEN, DIE ANDEREN PARAMETER *
*      SIND OPTIONAL.                                      *
*                                                          *
*   FORTSETZUNGSKARTEN SIND MOEGLICH UND WERDEN DURCH EIN  *
*   ZEICHEN UNGLEICH BLANK IN SPALTE 72 DER VORAUSGEHEN-   *
*   DEN KARTE ANGEKUENDIGT.                                *
*                                                          *
************************************************************
         EJECT
************************************************************
*                                                          *
*   VERWENDETE MACROS:                                     *
*      OPEN,CLOSE,GET,PUT,DCB,SMFWTM,                      *
*      RDJFCB,XDAP,WAIT,RESERVE,DEQ                        *
*      (TRC,TRX,REGS)                                      *
*                                                          *
*   SOURCE   : E9T0B.T.ASM(DEF4)                           *
*   LADEMODUL: SYS1.E7DR.APFLIB(DEF4)                      *
*                                                          *
*   BEARBEITER: GRAMM/E7DR                                 *
*                                                          *
*   LETZTE AENDERUNG: 07.01.83                             *
************************************************************
         EJECT
         PRINT NOGEN
DEF4     START 0
         REGS
         SAVE  (14,12),,*
         LR    R12,R15             SET BASE REGISTER
         USING DEF4,R12
         LA    R10,2048(R12)
         LA    R10,2048(R10)
         USING DEF4+4096,R10
         LR    R11,R13            STANDARD
         LA    R13,SAVE1            O.S.
         ST    R11,4(R13)         SAVE AREA
         ST    R13,8(R11)         CHAINING
*
         L     R4,16               TEST FOR
         L     R4,0(R4)            FOREGROUND JOB;
         L     R4,0(R4)            IF INVOKED
         L     R4,164(R4)          IN FOREGROUND
         L     R4,24(R4)           DO NOT PROCEED
         L     R4,0(R4)            A(CEPA)
         TM    29(R4),X'01'
         BO    GOBACK
*
         MVC   JMRJOB,0(R4)        JOB-ABHAENGIGE
         MVC   JMRENTRY,8(R4)      FELDER FUER SMF-SATZ
         MVC   JMREDATE,12(R4)     AUS DER CEPA
         MVC   JMRCPUID,16(R4)     UEBERTRAGEN
         MVC   JMRUSEID,20(R4)
*
         OPEN  (CTLCRD)            OPEN INPUT AND
         OPEN  (SYSPNT,OUTPUT)     OUTPUT FILE
         PUT   SYSPNT,CLINE        PRINT HEADING
         MVI   ASA,C'-'            AND SKIP
         MVC   MLINE+1(131),MLINE  THREE LINES
         PUT   SYSPNT,CLINE        AFTERWARD
         MVI   ASA,C' '            ASA CONTROL TO SKIP ONE LINE
CHKCRDS  EQU   *
         XC    SW1,SW1       RESET SWITCH
GETCARD  GET   CTLCRD,CARD   READ CONTROL CARD
         LA    R3,CARD       POINT REG.3 TO 1ST. COLUMN OF CARD
CHECK1   CLC   0(1,R3),=C' ' IS COLUMN BLANK ?
         BNE   CHECK2        IF NOT BLANK CHECK KEYWORD
         LA    R3,1(R3)      POINT TO NEXT COLUMN
         B     CHECK1        BACK TO CHECK1
CHECK2   MVC   MLINE(80),CARD
         PUT   SYSPNT,CLINE  PRINT CONTROL CARD
         MVC   MLINE,ASA     AND BLANK OUT MLINE
CARDSW   NOP   CONTACT       LOOK FOR "DSCB4" ONLY ON FIRST CARDS
         CLC   0(5,R3),=C'DSCB4' IS 1ST. KEYWORD = 'DSCB4' ?
         BNE   ERROR9        INVALID 1ST. KEYWORD, ERROR
         LA    R3,5(R3)      POINT TO NEXT COLUMN AFTER DSCB4
CHECK3   CLC   0(1,R3),=C' ' IS COLUMN BLANK ?
         BNE   CONTACT       IF NOT BLANK START SCAN FOR NEXT KEYWORD
         LA    R3,1(R3)      POINT REG.3 TO NEXT COLUMN
         B     CHECK3        BACK TO CHECK3
CONTACT  LR    R4,R3         POINT REG.4 TO START OF KEYWORD
         LA    R3,1(R3)      SCAN FOR
         CLC   0(1,R3),=C' '  BLANK
         BE    LAST            OR
         CLC   0(1,R3),=C','  COMMA
         BNE   CONTACT+2     MOVE ON TO NEXT COLUMN
*******************CHECK KEYWORD
         CLI   0(R4),C','    DOES REG.4 POINT TO COMMA?
         BNE   TEST1         NO
         LA    R4,1(R4)      YES, POINT BEHIND IT
TEST1    EQU   *
         CLC   0(4,R4),=C'VOL='
         BNE   NEXT1
         LR    R5,R3
         LA    R4,4(R4)      INCREMENT REG.4 TO ADDRESS OF VOLUME
         SR    R5,R4         PUT LENGTH FOR EX INSTRUCTION IN REG.5
         BCTR  R5,0          REDUCE LENGTH BY 1 FOR EX INSTRUCTION
         MVC   VOLSER(6),BLANKS BLANK OUT VOLSER FIELD
         EX    R5,MVVOL
         OI    SW1,X'80'     INDICATE VOLUME PICKED UP
         B     CONTACT
NEXT1    EQU   *
         CLC   0(9,R4),=C'DS4AMTIM='
         BNE   NEXT2
         LR    R5,R3
         LA    R4,9(R4)      INCREMENT REG.4 TO ADDRESS OF DSNAME
         SR    R5,R4         LENGTH OF VALUE IN REG.5
         C     R5,=F'16'     16 BYTES?
         BNE   ERROR1        NO, ERROR
         TRT   0(16,R4),TRANSTAB  ARE THERE ONLY "HEX"-CHARACTER'S?
         BC    7,ERROR4      NO, ERROR
         MVC   NEWAMTIM,0(R4)  SAVE EBCDIC VALUE
         TRX   (DS4AMTIM,(R4),8),TABNAME=TRTAB  TRANSLATE IT TO HEX
         OI    SW1,X'40'     INDICATE DS4AMTIM PICKED UP
         B     CONTACT
NEXT2    EQU   *
         CLC   0(9,R4),=C'DS4R2TIM='
         BNE   NEXT3
         LR    R5,R3
         LA    R4,9(R4)      INCREMENT REG.4 TO ADDRESS OF DSNAME
         SR    R5,R4         LENGTH OF VALUE IN REG.5
         C     R5,=F'16'     16 BYTES?
         BNE   ERROR1        NO, ERROR
         TRT   0(16,R4),TRANSTAB  ARE THERE ONLY "HEX"-CHARACTER'S?
         BC    7,ERROR4      NO, ERROR
         MVC   NEWR2TIM,0(R4)  SAVE EBCDIC VALUE
         TRX   (DS4R2TIM,(R4),8),TABNAME=TRTAB  TRANSLATE IT TO HEX
         OI    SW1,X'20'     INDICATE DS4R2TIM PICKED UP
         B     CONTACT
NEXT3    EQU   *
         CLC   =C'DIRF=',0(R4)
         BNE   NEXT4
         MVC   NEWDIRF(1),5(R4)
         CLI   NEWDIRF,C'1'
         BE    DIRFOK
         CLI   NEWDIRF,C'0'
         BNE   ERROR6
DIRFOK   OI    SW1,X'10'
         B     CONTACT
NEXT4    EQU   *
         CLC   0(5,R4),=C'VSAM='
         BNE   ERROR9
         CLC   5(2,R4),=C'ON'
         BNE   OFF
         OI    SW1,X'08'
         B     CONTACT
OFF      CLC   5(3,R4),=C'OFF'
         BNE   ERROR9
         OI    SW1,X'04'
         B     CONTACT
LAST     EQU   *
         CLC   0(2,R4),=C', '
         BE    LAST1
         CLC   0(2,R4),=C',*'
         BE    LAST1
         TM    SW1,X'01'           LAST KEYWORD ALREADY CHECKED?
         BO    LAST2               YES
         OI    SW1,X'01'           NO; PREVENT FROM CHECKING BLANKS
         CLI   0(R4),C','          DOES REG.4 POINT TO COMMA?
         BNE   TEST1               NO, DO NOT INCREMENT REG. 4
         LA    R4,1(R4)            POINT BEHIND COMMA
         B     TEST1
LAST1    EQU   *
         CLI   CARD+71,C' '
         BE    ERROR9
         OI    CARDSW+1,X'F0'      DON'T SEARCH "DATE" ON NEXT CARD
         B     GETCARD
LAST2    EQU   *
         NI    CARDSW+1,X'0F'      RESET SWITCH
         TM    SW1,X'80'           HAS VOLUME BEEN RECEIVED ?
         BNO   ERRORA              IF NOT PRINT ERROR MESSAGE
         TM    SW1,X'7C'           ANYTHING TO DO?
         BZ    ERROR3              NO
PROCEED  CLC   VOLUME,VOLSER       SAME VOLUME AS BEFORE?
         BE    USEAGAIN            YES, REUSE ACTUAL VTOC
         MVC   VOLUME,VOLSER       SAVE NEW VOLUME
SWITCH   B     DYNALLOC            B ONLY FOR THE FIRST TIME
         CLOSE VTOC                CLOSE OLD VOLUME VTOC
DYNALLOC LA    R1,REQBPTR          DYNAMIC ALLOCATION
         SVC   99                  OF NEW VTOC
         LH    R15,ERR             LOAD ERROR CODE FIELD
         LTR   R15,R15             DYNALLOC SUCCESSFUL?
         BNZ   FEHLDYNA            NO
         RDJFCB VTOC               READ JFCB AND MODIFY DSNAME
         MVC   JFCB(44),Z4         TO X'04040404....'
         OPEN  (VTOC,INOUT),TYPE=J OPEN VTOC OF NEW VOLUME
         NI    SWITCH+1,X'0F'      CHANGE BRANCH TO NOP
USEAGAIN TM    VTOC+48,X'10'       TEST FOR SUCCESSFUL VTOC OPEN
         BC    12,ERROR7           ERROR IF OPEN UNSUCCESSFUL
         XC    WORD,WORD
         MVC   WORD+1(3),VTOC+45   PICK UP DEB ADDR
         L     R6,WORD
         L     R7,32(R6)           PICK UP UCB ADDRESS
         ST    R7,UCBADDR          AND STORE IT FOR RESERVE-MACRO
         SH    R6,=H'15'
         MVC   MBBCCHHR+1(7),0(R6) PICK UP VTOC ADDR
         SH    R6,=H'1'
RESERVE  RESERVE (QNAME,VOLUME,E,6,SYSTEMS),RET=HAVE,UCB=UCBADDR
         XDAP  ECBREAD,RI,VTOC,DSCB,140,,MBBCCHHR    READ F4-DSCB
         WAIT  ,ECB=ECBREAD
         TM    ECBREAD,X'7F'       TEST SUCCESSFUL READ
         BC    12,ERROR8
         MVC   OLDDATA,DATA
         TM    SW1,X'40'
         BZ    UP1
         MVC   DSCB+76(8),DS4AMTIM
UP1      TM    SW1,X'20'
         BZ    UP2
         MVC   DSCB+87(8),DS4R2TIM
UP2      TM    SW1,X'10'
         BZ    UP3
         CLI   NEWDIRF,C'1'
         BNE   AND
         OI    DSCB+58,X'04'
         B     UP3
AND      NI    DSCB+58,X'FB'
UP3      TM    SW1,X'08'
         BZ    UP4
         OI    DSCB+84,X'C0'
         B     UPDATE
UP4      TM    SW1,X'04'
         BZ    UPDATE
         NI    DSCB+84,X'3F'
UPDATE   XDAP  ECBWRITE,WI,VTOC,DSCB,140,,MBBCCHHR
         WAIT  ,ECB=ECBWRITE
         DEQ   (QNAME,VOLUME,6,SYSTEMS),UCB=UCBADDR
         TM    ECBWRITE,X'7F'      TEST SUCCESSFUL WRITE
         BC    12,ERROR2           UNSUCCESSFUL WRITE
*
************************************************************
*
*              KONVERTIERUNG DER DATEN FUER DRUCK UND
*              AUFBEREITUNG DER AUSGABEZEILE
*
OUTPUT   MVC   MSG,TEXT
*
*              ALTE WERTE AUFBEREITEN
*
         TRC   (MSG+19,OLDAMTIM,8)
         TRC   (MSG+46,OLDR2TIM,8)
         TRC   (MSG+79,OLDVSAM,1)
         MVI   MSG+69,C'0'
         TM    OLDDIRF,X'04'
         BZ    PUTOLD
         MVI   MSG+69,C'1'
PUTOLD   PUT   SYSPNT,CLINE
*
*              NEUE WERTE AUFBEREITEN
*
         MVC   MSG(3),=C'NEW'
         TM    SW1,X'7C'
         BZ    NOPRINT
         TM    SW1,X'40'
         BZ    EQUAL1
         MVC   MSG+19(16),NEWAMTIM
EQUAL1   TM    SW1,X'20'
         BZ    EQUAL2
         MVC   MSG+46(16),NEWR2TIM
EQUAL2   TM    SW1,X'10'
         BZ    EQUAL3
         MVC   MSG+69(1),NEWDIRF
EQUAL3   TM    SW1,X'0C'
         BZ    PUTNEW
         TRC   (MSG+79,NEWVSAM,1)
PUTNEW   PUT   SYSPNT,CLINE
NOPRINT  MVC   MSG,ASA
         TM    SW1,X'7C'                AENDERUNG VORGENOMMEN?
         BZ    NOSMF                    NEIN, KEIN SMF-SATZ NOETIG
*
         TIME  BIN                      TIME UND DATE
*
         ST    R0,TIME                  FUER SMF-SATZ
         ST    R1,DATE
         MVC   SMF137+44(6),VOLUME      ALTE UND NEUE
         MVC   SMF137+50(8),OLDAMTIM    DSCB4-FELDER
         MVC   SMF137+58(8),DSCB+76     IN SMF-SATZ
         MVC   SMF137+66(8),OLDR2TIM    STELLEN
         MVC   SMF137+74(8),DSCB+87
         MVC   SMF137+82(1),OLDDIRF
         MVC   SMF137+83(1),DSCB+58
         MVC   SMF137+84(1),OLDVSAM
         MVC   SMF137+85(1),DSCB+84
*
         SMFWTM SMF137                  SMF-SATZ ERZEUGEN
*
NOSMF    B     CHKCRDS
*
EOF      CLOSE (CTLCRD)
         CLOSE (VTOC,,SYSPNT)
GOBACK   L     R13,SAVE1+4
         RETURN (14,12),RC=0
*
*
MVVOL    MVC   VOLSER(0),0(R4)
VOLSER   DS    CL6
*
*           ERROR MESSAGES
*
FEHLDYNA MVC   MSG(75),=C'ERROR DURING DYNAMIC ALLOCATION FOR VTOC OF V*
               OLUME XXXXXX, REASON CODE XXXX'
         MVC   MSG+51(6),VOLUME
         TRC   (MSG+71,ERR,2)      CONVERT REASON CODE TO PRINTABLE
         B     PUTNEW
*
ERROR1   MVC   MSG(42),=C'*** TIME-STAMP-VALUE MUST BE 16 BYTES LONG'
         B     PUTNEW
ERROR2   MVC  MSG(60),=CL60'*** ERROR DURING UPDATE OF F4-DSCB        '
         B     PUTNEW
ERROR3   MVC   MSG(42),=C'*** NOTHING TO BE CHANGED                 '
         B     PROCEED
ERROR4   MVC   MSG(42),=C'*** TIME-STAMP-VALUE MUST BE HEXADECIMAL  '
         B     PUTNEW
ERROR5   MVC   MSG(42),=C'*** EOF OCCURRED READING F4-DSCB          '
         B     PUTNEW
ERROR6   MVC   MSG(42),=C'*** VALID DIRF-VALUES ARE ONLY 0 AND 1    '
         B     PUTNEW
ERROR7   MVC   MSG(42),=C'*** OPEN FOR VTOC ON XXXXXX UNSUCCESSFUL  '
         MVC   MSG+21(6),VOLUME
         B     PUTNEW
ERROR8   MVC   MSG(42),=C'*** ERROR READING F4-DSCB OF VOLUME XXXXXX'
         MVC   MSG+36(6),VOLUME
         B     PUTNEW
ERROR9   MVC   MSG(42),=C'*** INVALID KEYWORD FOUND IN CONTROL CARD '
         B     PUTNEW
ERRORA   MVC   MSG(42),=C'*** NOT ALL NEEDED PARAMETERS SPECIFIED   '
         B     PUTNEW
*
*           DCB-DEFINITIONS
*
CTLCRD   DCB   DSORG=PS,DDNAME=SYSIN,MACRF=GM,EODAD=EOF,EROPT=ABE
SYSPNT   DCB   DSORG=PS,DDNAME=SYSPRINT,MACRF=PM,RECFM=FA,BLKSIZE=133
VTOC     DCB   DDNAME=SYSDISK,MACRF=(E),EXLST=LIST,EODAD=ERROR5
*
*           DEFINITIONS FOR RDJFCB-MACRO
*
         DS    0F
LIST     DC    X'87'
         DC    AL3(JFCB)
JFCB     DS    CL176
Z4       DC    44X'04'
*
*           DEFINITIONS FOR DYNAMIC ALLOCATION
*
REQLIST  DS    0F
REQBPTR  DC    X'80'
         DC    AL3(REQBLOK)
REQBLOK  DS    0F
RBLENG   DC    AL1(20)
RBVERB   DC    AL1(1)
RBFLAGS1 DC    H'0'
RBERR    DC    H'0'
ERR      EQU   RBERR
RBINFO   DC    H'0'
RBTXTPRT DC    AL4(TEXTS)
         DC    F'0'
RBFLAGS2 DC    F'0'
TEXTS    DC    A(TEXT01)
         DC    A(TEXT02)
         DC    A(TEXT04)
         DC    A(TEXT10)
         DC    X'80',AL3(TEXT1C)
         DS    0H
TEXT01   DC    XL6'000100010008'
         DC    CL8'SYSDISK'            DDNAME
         DS    0H
TEXT02   DC    XL6'00020001000C'
         DC    CL12'FORMAT4.DSCB'      VTOC DSNAME (X'04...' GEHT NICHT
         DS    0H                                      BEI DYN. ALLOC.)
TEXT04   DC    XL6'000400010001'
         DC    X'08'                   DISP=SHR
         DS    0H
TEXT10   DC    XL6'001000010006'
VOLUME   DC    CL6'XXXXXX'             VOLUME SERIAL
         DS    0H
TEXT1C   DC    XL4'001C0000'           FREE=CLOSE
REQLEN   EQU   *-REQLIST
*
*           DEFINITIONS FOR SMFWTM
*
         CNOP  2,4
SMF137   EQU   *
HDR      DC    X'005600000089'
TIME     DS    XL4
DATE     DS    XL4
JMRCPUID DS    CL4
JMRJOB   DS    CL8
JMRENTRY DS    XL4
JMREDATE DS    XL4
JMRUSEID DS    CL8
SUBTYPE  DC    C'4',X'00'
         DS    CL42
*
*           DEFINITIONS FOR RESERVE/DEQ
*
QNAME    DC    CL8'SYSVTOC'
RNAME    EQU   VOLUME
UCBADDR  DS    F
*
*           DEFINITIONS FOR DSCB-PROCESSING
*
DSCB     DS   0CL140
         DC    44X'04'
DATA     DS    CL96
MBBCCHHR DS    0CL8
MBBCCHH  DS    0CL7
MBB      DC    X'000000'
CC       DS    CL2
HH       DS    CL2
R        DS    CL1
*
*           CONSTANTS FOR CHANGEABLE DSCB-FIELDS
*
NEWAMTIM DS    CL16       NEW VALUES (EBCDIC)
NEWR2TIM DS    CL16
NEWDIRF  DS    C
NEWVSAM  EQU   DATA+40
*
DS4AMTIM DS    XL8        NEW VALUES IN THE FORM REQUIRED IN THE DSCB
DS4R2TIM DS    XL8
*
OLDDATA  DS    CL96       OLD VALUES
OLDAMTIM EQU   OLDDATA+32
OLDR2TIM EQU   OLDDATA+43
OLDDIRF  EQU   OLDDATA+14
OLDVSAM  EQU   OLDDATA+40
*
*           CONSTANTS FOR INPUT/OUTPUT
*
CARD     DS    CL80
BLANKS   DC    CL6' '
CLINE    DS    0CL133
ASA      DC    C'1'
MLINE    DC    CL132'         DSCB4-EDIT-PROGRAM OUTPUT FOR CONTROL CAR*
               DS AND MESSAGES'
         ORG   MLINE+30
MSG      DS    0CL102
         ORG
TEXT     DC    CL102'OLD DATA  DS4AMTIM=................, DS4R2TIM=....*
               ............, DIRF=., VSAM=X''..'''
DW       DS    D
FW       DS    F
WORD     DS    F
*
*           SAVEAREA AND SWITCH INDICATING PARMS RECEIVED
*
SAVE1    DS    18F
SW1      DC    X'00'
*
         LTORG
*
TRANSTAB DC    193X'FF',6X'00',41X'FF',10X'00',6X'FF'
*
         DC    C'GRAMM/E7DR  '
         DC    CL8'&SYSTIME'
         DC    CL8'&SYSDATE'
         END
//LKED.SYSLMOD DD DISP=SHR,UNIT=,DSN=SYS1.E7DR.APFLIB(DEF4)
//GO.SYSPRINT  DD SYSOUT=*
//GO.SYSIN     DD *
DSCB4 VOL=335059
