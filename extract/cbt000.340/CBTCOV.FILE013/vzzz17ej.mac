PROC 0
          GLOBAL &HEXVALUE
          GLOBAL &VALUE
/**********************************************************************/
/*     H     H   EEEEEEE    AAAAA    DDDDDD    EEEEEEE   RRRRRR       */
/*     H     H   E         A     A   D     D   E         R     R      */
/*     HHHHHHH   EEEEEEE   AAAAAAA   D     D   EEEEEEE   RRRRRR       */
/*     H     H   E         A     A   D     D   E         R   R        */
/*     H     H   EEEEEEE   A     A   DDDDDD    EEEEEEE   R     R      */
/**********************************************************************/
/*  CLIST NAME: VTAM23            REL/DATE: 2.1/08.15.79              */
/*                                                                    */
/*  DOC:  THIS CLIST WILL ANALYZE THE READY QUEUES FOR PABS TO BE     */
/*        PROCESSED.                                                  */
/*  SYMBOLS EQUATED: ATCVT, MPLT = MPLT ADDR (RE-USED FOR EACH MPLT)  */
/*          MPST'ASID' = MPST ADDRESS FOR GIVEN ASID (IN DECIMAL).    */
/*          ACDEB'X' = AN OPEN ACDEB NUMBERED IN ASCENDING ORDER.     */
/*          PST'X' = THE PST POINTED TO BY ACDEB'X' WILL BE EQUATED   */
/*                   IF THERE IS WORK ON ITS READY Q (PST+8).         */
/*  RETURN: CONTROL IS PASSED TO THE CALLING CLIST OR TO IPCS.        */
/*  DEPENDENCIES: 1) THIS CLIST REQUIRES THAT COMMAND                 */
/*                   CLEAR BE INSTALLED IN YOUR ENVIRONMENT.        */
/*                2) THIS CLIST REQUIRES THAT CLIST 'HEX' BE          */
/*                   INSTALLED IN YOUR ENVIRONMENT.                   */
/*  USE: WHEN CONTROL IS PASSED TO THIS CLIST, THE READY QUEUES ARE   */
/*          EXAMINED AND DISPLAYED AND VARIOUS DIAGNOSTIC MESSAGES    */
/*          ARE WRITTEN TO THE TERMINAL.                              */
/*RGM******************************************************************/
START:   CLEAR
 WRITE ++++ SYMBOLS EQUATED:
 WRITE           ATCVT, MPLT = MPLT ADDR (RE-USED FOR EACH MPLT FOUND)
 WRITE           MPST'ASID' = MPST ADDRESS FOR GIVEN ASID (IN DECIMAL)
 WRITE           ACDEB'X' = AN OPEN ACDEB NUMBERED IN ASCENDING ORDER
 WRITE           PST'X' = THE PST POINTED TO BY ACDEB'X' WILL BE EQUATED
 WRITE                    IF THERE IS WORK ON ITS READY Q (PST+8).
 WRITE
          WRITENR DO YOU WANT THE PRINT OPTION? (Y)/N ===>
          SETD DISPLAY(NOMACH NOREQ SYMBOL NOREMARK STORAGE) TERMINAL
          READ &ANS
          IF &ANS=N THEN SETD NOPRINT
                    ELSE SETD PRINT
          WRITE
          WRITE BEGIN READY QUEUE ANALYSIS. EACH ACDEB WILL BE LISTED.
          SET &COUNT=0
          EQ ATCVT 408.%
          EQ MPLT ATCVT+5C8%
GETMPST:  EVAL MPLT+8 LE(2)
          SET &MPSTNUM=&LASTCC
          SET &MPSTCNT=0
NXTMPST:  SET &MPSTCNT=&MPSTCNT+1
          IF &MPSTCNT GT &MPSTNUM THEN GOTO NXTMPLT
          SET &MPSTOFST=&STR(&MPSTCNT*8)
          %HEX &MPSTOFST
          SET &MPSTOFST=&HEXVALUE
          EVAL MPLT+C+&MPSTOFST LE(2)
          SET &ASID=&LASTCC
          IF &ASID=0 THEN GOTO NXTMPST
          EQ MPST&ASID MPLT+8+&MPSTOFST% STR(MPST) LE(216)
          EQ ANCHOR MPST&ASID+7C%
NXTACDEB: SET &COUNT=&COUNT+1
          WRITE
          WRITE AN ACDEB HAS BEEN FOUND ON THE MPST&ASID ACDEB +
                QUEUE, AND IS EQUATED AS:
          EQ ACDEB&COUNT ANCHOR% LE(160) STR(ACDEB)
          L ACDEB&COUNT
          EVAL ANCHOR%+8%+9 LE(3)
          IF &LASTCC=0 THEN +
             WRITE ACDEB&COUNT HAS NOTHING ON ITS PST READY QUEUE.
                       ELSE DO
             WRITE ACDEB&COUNT HAS PABS ON ITS PST READY QUEUE (PST+8).
             EQ PST&COUNT ANCHOR%+8% LE(136) STR(PST)
             WRITE PST&COUNT HAS BEEN EQUATED.
             L PST&COUNT
             END
          EVAL ANCHOR%+5 LE(3)
          IF &LASTCC=0 THEN GOTO NXTMPST
          EQ ANCHOR ANCHOR%+4
          GOTO NXTACDEB
NXTMPLT:  EVAL MPLT+1 LE(3)
          IF &LASTCC=0 THEN GOTO FUNC3END
          EQ MPLT MPLT+0%
          GOTO GETMPST
FUNC3END: WRITE
          WRITE VTAM23 COMPLETED.
