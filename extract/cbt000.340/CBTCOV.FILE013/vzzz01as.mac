         TITLE 'IGGPRE00 - DFDS DADSM PRE ALLOCATION EXIT'
***********************************************************************
*                                                                     *
*    MODULE  -- IGGPRE00                                              *
*    PURPOSE -- THIS IS AN EXAMPLE OF USING RACF TO CONTROL           *
*               ALLOCATION ON VOLUMES.                                *
*               IF ALLOCATION IS ALLOWED THEN ALSO INITIALIZE         *
*               THE DATE-LAST-USED FIELD SO THAT OPEN WILL            *
*               CONTINUE TO UPDATE IT.                                *
*               MODULE ISSUES RACHECK. IF PROFILE FOR VOLUME          *
*               EXITS, THEN VOLUME IS ASSUMED TO BE PROTECTED         *
*               AND USER MUST HAVE 'READ' AUTHORITY TO ALLOCATE.      *
*                                                                     *
***********************************************************************
IGGPRE00 CSECT                     DFDS DADSM PRE EXECUTION EXIT
         SAVE  (14,12),,*          SAVE REGISTERS
         LR    R12,R15             PROGRAM ADDRESSABILITY
         USING IGGPRE00,R12        ****
         LR    R2,R1               SAVE PARM LIST ADDRESS IN R2
         USING PREPL,R2            ****
***********************************************************************
*    DEVICE TYP 2305 MODEL 2 NO CHECK
***********************************************************************
         L     R8,IEXUCB           GET UCB POINTER
         USING UCB,R8              ****
         CLI   UCBUNTYP,X'07'
         BE    EXIT
***********************************************************************
*    EXIT TO BE ENTERED ONLY IF ALLOCATE REQEST                       *
***********************************************************************
         CLI   IEXFUNC,IEXALL      IS THIS AN ALLOCATE REQUEST
         BE    RUNEXIT             GET OUT QUICKLY IF NOT
EXIT     RETURN (14,12),T,RC=0     RESTORE REGISTERS AND RETURN
***********************************************************************
*    EXIT TO BE ENTERED ONLY IF NON-VIO DATASET                       *
***********************************************************************
RUNEXIT  TM    IEXFLAG,IEXVIO      ALLOCATE VIO DATASET
         BO    EXIT                YES, GET OUT
*
         L     R0,DYNSIZE          DYNAMIC AREA SIZE TO R0
         GETMAIN R,                GETMAIN                             *
               LV=(0)                      DYNAMIC AREA
         LR    R11,R1              DYNAMIC AREA ADDRESSABILITY
         USING DATD,R11            ****
         ST    R13,SAVEAREA+4      SAVE CALLER'S SAVEAREA ADR
         ST    R11,8(,R13)         SAVE OUR SAVEAREA ADR
         LR    R13,R11             OUR SAVEAREA ADR TO R13
***********************************************************************
*    PASS BACK A DATE FOR DATE-LAST-USED FIELD IN DSCB                *
***********************************************************************
         TM    IEXFLAG,IEXMF1      ALREADY HAVE A MODEL
         BO    MODEL               NO, USE DUMMY DSCB
***********************************************************************
*    IF NO MODEL, SET A DUMMY EARLY DATE                              *
***********************************************************************
         LA    R8,DS1FMTID         GET BEGINNING OF DUMMY DSCB
         ST    R8,IEXFMT1          AND PASS BACK TO DADSM
         B     RACF                CHECK IF ALLOCATION ALLOWED
***********************************************************************
*    DETERMINE DATE TO SET DATE-LAST-USED FIELD                       *
***********************************************************************
MODEL    DS    0H
         TIME  DEC                 GET TIME AND DATE - 00YYDDDF
         STCM  R1,3,DOUBLE+6       STORE DATE - DDDF
         CVB   R0,DOUBLE           CONVERT DATE TO BINARY
         STCM  R0,3,CURRDATE+1     STORE BINARY DATE - DDDD
         SRL   R1,12               SHIFT YEAR - 00000YYD
         STCM  R1,3,DOUBLE+6       STORE YEAR - 0YYD
         OI    DOUBLE+7,X'0F'      MAKE VALID PACKED DEC - 00000YY
         CVB   R0,DOUBLE           CONVERT YEAR TO BINARY
         STC   R0,CURRDATE         STORE BINARY YEAR - YYDDDD
***********************************************************************
*    INITIALIZE DATE-LAST-USED FIELD                                  *
***********************************************************************
         L     R8,IEXFMT1          GET DSCB POINTER
         MVC   DS1REFD-DS1FMTID(L'DS1REFD,R8),CURRDATE
*                                  UPDATE FIELD WITH CURRENT DATE
***********************************************************************
*    CHECK WITH RACF TO SEE IF ALLOWED TO ALLOCATE                    *
***********************************************************************
RACF     DS    0H
         MVC   AUTHCHK(LRACHECK),RACHECKL INIT RACHECK MACRO
         L     R8,IEXUCB           GET UCB POINTER
         USING UCB,R8              ****
         SR    R3,R3               PRIME RETURN CODE
         RACHECK CLASS=RACLASS,    CHECK                               *
               ENTITY=UCBVOLI,     AUTHORITY                           *
               MF=(E,AUTHCHK)      TO USE THIS VOLUME
         DROP  R8                  ****
***********************************************************************
*    CHECK RACF RETURN CODES TO SEE IF PERMITTED                      *
***********************************************************************
CHKZERO  DS    0H
         C     R15,=F'0'           PROPERLY AUTHORIZED?
         BNE   CHKFOUR
***********************************************************************
*    INSERT ANY EXCEPTION HANDLING INSTRUCTIONS HERE                  *
***********************************************************************
         B     RETURN
*
CHKFOUR  DS    0H
         C     R15,=F'4'           PROFILE NOT FOUND?
         BNE   CHKEIGHT
***********************************************************************
*    INSERT ANY EXCEPTION HANDLING INSTRUCTIONS HERE                  *
***********************************************************************
         B     RETURN
***********************************************************************
*    CHECK RACF RETURN CODES TO SEE IF DENIED                         *
***********************************************************************
CHKEIGHT DS    0H
         C     R15,=F'8'           EXPLICITLY NOT AUTHORIZED?
         BNE   CHKANY
         MVC   IEXREASN,=X'FFFF'   CREATE A JCL ERROR
         LA    R3,4                SET RETURN CODE TO FAIL REQUEST
         B     RETURN
***********************************************************************
*    DEFAULT PERMISSION IF UNUSUAL RETURN CODE                        *
***********************************************************************
CHKANY   DS    0H
***********************************************************************
*    INSERT ANY EXCEPTION HANDLING INSTRUCTIONS HERE                  *
***********************************************************************
         DS    0H
***********************************************************************
*    RETURN TO DADSM                                                  *
***********************************************************************
RETURN   L     R13,SAVEAREA+4      RESTORE R13
         L     R0,DYNSIZE          DYNAMIC AREA SIZE TO R0
         LR    R1,R11              DYNAMIC DATA ADDRESS TO R1
         FREEMAIN R,               FREEMAIN                            *
               LV=(0),             DYNAMIC                             *
               A=(1)               AREA
         LR    R15,3               LOAD RETURN CODE
         RETURN (14,12),T,RC=(15)  RESTORE REGISTERS AND RETURN
*
***********************************************************************
*    DATA AREAS                                                       *
***********************************************************************
         DS    0D                  DOUBLE WORD ALIGN
DYNSIZE  DC    AL1(0)              SUBPOOL
         DC    AL3(SIZEDATD)       DYN AREA SIZE
         DC    C'&SYSDATE &SYSTIME' ASSEMBLY DATE/TIME STAMP
RACLASS  DC    AL1(L'RACLASSN)     CLASS NAME FOR RACCHECK
RACLASSN DC    C'PLATTEN'          CLASS NAME FOR RACCHECK
RACHECKL RACHECK MF=L
LRACHECK EQU   *-RACHECKL          LENGTH OF RACHECK MACRO
DSCB     DS    0D                  MODEL FORMAT 1 DSCB
         IECSDSL1 1
SIZEDSCB EQU   *-DSCB              LENGTH OF DSCB
         ORG   DSCB
         DC    XL(SIZEDSCB)'00'    ZERO MODEL DSCB
         ORG   DS1REFD             SET A FIXED
         DC    XL3'46007C'         REFERENCE DATE
         ORG   ,                   IF NO MODEL DSCB
         DS    0D
*
         LTORG
***********************************************************************
*    DSECT FOR THIS PROGRAMM'S DYNAMIC AREA                           *
***********************************************************************
DATD     DSECT
SAVEAREA DS    18F                 REGISTER SAVE AREA
         DS    0D
CURRDATE DC    XL3'0'              AREA TO HOLD CURRENT DATE
DOUBLE   DC    D'0'                WORK DOUBLE WORK
         DS    0D
AUTHCHK  RACHECK MF=L
SIZEDATD EQU   *-DATD              LENGTH OF DSECT
***********************************************************************
*    DFDS PARAMETER LIST                                              *
***********************************************************************
     IECIEXPL
***********************************************************************
*    UCB MAPPING MACRO                                                *
***********************************************************************
UCB      DSECT
         IEFUCBOB
***********************************************************************
*    REGISTER EQUATES                                                 *
***********************************************************************
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
RA       EQU   10
R11      EQU   11
RB       EQU   11
R12      EQU   12
RC       EQU   12
R13      EQU   13
RD       EQU   13
R14      EQU   14
RE       EQU   14
R15      EQU   15
RF       EQU   15
***********************************************************************
         END
