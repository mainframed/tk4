DISKSCRT TITLE 'SCRATCH AND UNCATALOG OF NON VSAM DASD DATASETS'
DISKSCRT CSECT
         USING *,15                    FIRST ADDRESSABILITY
         B     START                   SURROUND PROGRAM IDENTIFICATION
*
IDR      DC    C' DISKSCRV V02L00 NOV 11TH 1975 SCHMIDT IDUNA '
         DS    0H
*
START    EQU   *
         STM   14,12,12(13)            SAVE REGISTERS
         LR    12,13                   SAVE ADDR OF CALLING SAVEAREA
         LA    13,SAVEA                LOAD ADDRESS OF OWN SAVEAREA
         ST    12,4(13)                SAVE CALLING SAVEAREA ADDRESS
         ST    13,8(12)                OWN SAVEA ADDR TO CALLER
         BALR  3,0                     ESTABLISH ADDRESSABILITY
         USING *,3
*
* END OF LINKAGE CONVENTIONS
*
         EJECT
*
* P R O G R A M   I N I T I A T I O N
*
* OPENING THE DATA SETS
*
         MVC   LINE,LINE-1             CLEAR PRINTER LINE
         USING IHADCB,RHADCB           ESTABLISH DSECT ADDRESSABILITY
         LA    RHADCB,SYSPRINT         SYSPRINT DCB DSECT
         OPEN  (SYSPRINT,(OUTPUT))     INITIALIZE PRINTER DCB
         TM    DCBOFLGS,DCBOFOPN          OPEN SUCCESSFULLY COMPLETED
         BNO   OPERR                   NO, TERMINATE PROCESSING
*
* TSO USER ATTRIBUTE DATA SET WILL BE TRIED TO OPEN
* ONLY TO LOOK FOR IT'S PRESENCE
* OPEN AND CLOSE FOR PROCESSING WILL BE DONE BY MODULE 'PDSSCAN' LATER
*
         LA    RHADCB,UADS             TSO UADS DCB DSECT
         OPEN  (UADS,(INPUT))          INITIALIZE TSO UADS DCB
         TM    DCBOFLGS,DCBOFOPN       OPEN SUCCESSFULLY COMPLETED
         BO    CLOSUADS                JES, TSO UADS PROCESSING
         OI    NOUADS+1,X'F0'          SKIP UADS DIRECTORY SCAN
         B     LOADMODS                TSO UADS PROCESSING
*
CLOSUADS EQU   *
         CLOSE (UADS)                  TSO USER ATTRIBUTE DATA SET
         DROP  RHADCB
         EJECT
*
* LOADING THE SUBROUTINES
*
LOADMODS EQU   *
         LOAD  EP=UCBSCAN              THIS MODULE POSTS EACH UCB
         ST    0,CALLUCB+4             SAVE MODULE ADDRESS
         LOAD  EP=DSNTAB1              CSECT WITH PROTECTED DSN'S
         ST    0,DSNADDR               SAVE MODULE ADDRESS
         LOAD  EP=VOLTAB1              CSECT WITH SCRATCH VOLUMES
         ST    0,VOLADDR1              SAVE MODULE ADDRESS
         LOAD  EP=VOLTAB2              CSECT WITH SYSTEM VOLUMES
         ST    0,VOLADDR2              SAVE MODULE ADDRESS
         LOAD  EP=WEEKEND              MODULE POSTS CURRENT DAY
         ST    0,CALLWEEK+4            SAVE MODULE ADDRESS
         LOAD  EP=READVTOC             MODULE POSTS DSCB'S
         ST    0,CALLVTOC+4            SAVE MODULE ADDRESS
NOUADS   NOP   GETTIME                 BRANCH IF NO TSO UADS
         LOAD  EP=PDSSCAN              MODULE POSTS DIRECTORY ENTRIES
         ST    0,CALLPDS+4             SAVE MODULE ADDRESS
         EJECT
*
* BUILD A TABLE OF MEMBER NAMES FROM TSO DATASET SYS1.UADS
* THEY ARE THE FIRST INDEX OF TSO USER DATA SET NAMES
*
***********************************************************************
*                                                                     *
*  FORMAT OF EACH 16 BYTE MEMBER NAME TABLE ENTRY                     *
*                                                                     *
*  0 (0) **************************************************************
*        *                                                            *
*        *  FORWARD POINTER TO NEXT ENTRY (ZERO ON FINAL ENTRY)       *
*        *                                                            *
*  4 (4) **************************************************************
*        *                                                            *
*        *  MEMBER NAME FROM TSO UADS. THE LAST CHARACTER OF THE      *
*        *  MEMBER NAME IS RESET BY THE DATA SET NAME QUALIFIER       *
*        *                                                            *
* 12 (C) **************************************************************
*        *                                                            *
*        *  BACKWARD POINTER TO PRECEDING ENTRY (ZERO ON FIRST ENTRY) *
*        *                                                            *
* 16(10) **************************************************************
*                                                                     *
*  END OF MEMBER NAME TABLE ENTRY                                     *
*                                                                     *
***********************************************************************
*
CALLPDS  CALL  PDSSCAN,(BLANKA,REGSAVEA,MEMBERA),VL
         B     *+4(15)                 CHECK RETURNS
         B     GETMAIN                 ADDRESS SPACE FOR MEMBER NAME
         B     PDSEND                  END OF DIRECTORY
*
* PARAMETERS USED BY PDSSCAN
*
BLANKA   DC    A(BLANK)
REGSAVEA DC    A(REGSAVE)
MEMBERA  DC    A(MEMBER)
REGSAVE  DC    4F'0' SECOND PARAMETER
MEMBER   DC    CL8' '  THIRD PARAMETER(MEMBER NAME)
BLANK    DC    C' '  FIRST PDSSCAN PARAMETER
         DS    0H             ALIGNMENT
*
GETMAIN  EQU   *
         GETMAIN R,LV=16,BNDRY=DBLWD
         L     4,PDSADDR               POINTER TO MEMBER NAME TABLE
         ST    1,PDSADDR               SAVE TABLE START ADDRESS
         LTR   4,4                     FIRST GETMAIN
         BNZ   BUILDTAB                NO, CREATE MEMBER NAME TABLE
         LR    4,1                     SAVE ENTRY ADDRESS
*
MOVMEMB  EQU   *
         MVC   4(8,1),MEMBER           MEMBER NAME INTO TABLE
         LA    1,11(1)                 POINT TO LAST CHAR OF MEMB NAME
*
ZEROLOOP EQU   *
         CLI   0(1),C'0'               ZERO CHARACTER
         BE    MOVPOINT                JES, REPLACE WITH DSN QUALIFIER
         BCTR  1,0                     POINT TO PRECEDING CHARACTER
         B     ZEROLOOP                TEST FOR ZERO
*
MOVPOINT EQU   *
         MVI   0(1),C'.'               DSNAME QUALIFIER
         B     CALLPDS                 GET NEXT MEMBER
*
BUILDTAB EQU   *
         ST    1,0(4)                  FORWARD POINTER TO LAST ENTRY
         ST    4,12(1)                 BACK POINTER TO CURRENT ENTRY
         LR    4,1                     SAVE ENTRY ADDRESS
         B     MOVMEMB                 GET NEXT MEMBER
*
PDSEND   EQU   *
         MVC   PDSADDR2,PDSADDR        SAVE POINTER
         EJECT
*
* THIS  SECTION GETS THE DAY OF THE YEAR
* THE DATE MUST BE COMPARED WITH EXPIRATION-DATE OF FORMAT 1 DSCB
*
GETTIME  EQU   *
         TIME
         ST    1,DATE  SAVE DATE
         CLI   YEAR,X'76'              CURRENT YEAR IN TIMER
         BE    CONVDATE                YES, CONVERT DATE FOR USE
TIMERR   EQU   *
         WTOR  '****** WRONG VALUE ON TOD CLOCK. ISSUE SET DATE COMMAND*
                AND REPLY WITH U',TIMEREP,1,TIMEECB
         WAIT  ECB=TIMEECB             WAIT FOR REPLY FROM OPERATOR
         B     REPTEST                 GO TO TEST REPLY
TIMEECB  DC    F'0'                    WTOR EVENT CONTROL BLOCK
TIMEREP  DC    X'00'                   REPLY FIELD
         DS    0H                      ALIGNMENT
REPTEST  EQU   *
         CLI   TIMEREP,C'U'            ANSWER FROM OPERATOR OK
         XC    TIMEECB(5),TIMEECB      CLEAR FOR NEXT LOOP
         BE    GETTIME                 YES, GET TIME AGAIN
         B     TIMERR                  NO, ISSUE MESSAGE AGAIN
*
CONVDATE EQU   *
         UNPK  DECDATE,DATE  UNPACK DATE
         PACK  DW,DECYEAR  CONVERT YEAR
         CVB   5,DW  TO BINARY
         STC   5,BINYEAR  AND SAVE IT
         XC    DW,DW  CLEAR DOUBLE WORD
         MVC   DW+6(2),DAY  CONVERT DAY
         CVB   5,DW  TO BINARY
         STH   5,BINDAY  AND SAVE IT
*
* FIRST LOOK FOR THE DAY OF THE WEEK
*
CALLWEEK CALL  WEEKEND,(WOCHTAGA),VL
         B     CONVDAT2
*
* PARAMETERS USED BY WEEKEND
*
WOCHTAGA DC    A(WOCHTAG)
WOCHTAG  DC    CL2' '         WOCHENTAG
         DS    0H                      ALIGNMENT
*
CONVDAT2 EQU   *
*
* BETWEEN WEDNESDAY AND FRIDAY TEMPORARY DATA SETS WILL BE SCRATCHED
* IF THEY ARE OLDER THAN TWO DAYS; BETWEEN SATURDAY AND TUESDAY IF THEY
* ARE OLDER THAN FOUR DAYS. THAT MUST BE DONE BECAUSE OF THE MOSTLY
* WEEKENDS FREE OF WORK.
*
         CLC   WOCHTAG,=C'SA'
         BE    WEEKEND2
         CLC   WOCHTAG,=C'SO'
         BE    WEEKEND2
         CLC   WOCHTAG,=C'MO'
         BE    WEEKEND2
         CLC   WOCHTAG,=C'DI'
         BE    WEEKEND2
         LA    5,2                     RETPD
         STH   5,RETPD                 SAVE IT
         B     UCBCALL                 SELECT SCRATCH VOLUME
*
WEEKEND2 EQU   *
         LA    5,4                     RETPD
         STH   5,RETPD                 SAVE IT
*
* END OF PROGRAM INITIATION
*
         EJECT
*
* TO KNOW WHICH DASD VOLUMES ARE MOUNTED IT IS NECESSARY TO SCAN  *
* THE UCB TABLE                                                       *
*
UCBCALL  EQU   *
CALLUCB  CALL  UCBSCAN,(UCBALA,UCBA),VL
         B     RETPT1                  BRANCH AROUND PARAMETERLIST
*
* PARAMETERS USED BY UCBSCAN
*
UCBALA   DC    A(ALA)                  LOCATOR 1
UCBA     DC    A(UCBFLD)               LOCATOR 2
ALA      DC    F'0'                    UCB ADDRESS LIST ADDRESS
UCBFLD   DC    CL256' '                UCB FIELD
         DS    0H                      ALIGNMENT
*
RETPT1   EQU   *
         B     *+4(15)                 BRANCH DEPENDS ON RETURN CODE
         B     UCBOK                   UCB FOUND
         B     PROGEND                 END OF UCB TABLE
*
UCBOK    EQU   *
         USING UCB,RUCB                UCB DUMMY SECTION
         LA    RUCB,UCBFLD             UCB ADDRESS
         CLC   DEV3330,UCBTYP+2        IS DEVICE 3330 DISK
         BE    TSTAT                   YES, TEST STATUS
         CLC   DEV33301,UCBTYP+2       IS DEVICE 3330 MOD 11 DISK
         BNE   UCBCALL                 NO, GET NEXT UCB
*
TSTAT    EQU   *
         MVC   DEVTYPE,UCBTYP          GET DEVICE TYPE
         TM    UCBSTAT,UCBONLI         DEVICE OFFLINE
         BZ    UCBCALL                 YES, GET NEXT UCB
         TM    UCBSTAT,UCBCHGS         PENDING OFFLINE
         BO    UCBCALL                 YES, GET NEXT UCB
         MVC   VOLSER,UCBVOLI           VOLSERNO TO NEXT PARMLIST
         MVC   VOLSER1,VOLSER          VOLSERNO TO SCRATCH MACRO
         EJECT
*
* SELECT THOSE VOLUMES WHICH ARE ALLOWED TO BE SCRATCHED
*
         L     5,VOLADDR1               TABLE OF SCRATCH VOLUMES
*
SCRVOL   EQU   *
         CLC   VOLSER,0(5)             SCRATCH VOLUME
         BE    VTOCSTRT                YES, GET VTOC
         CLI   0(5),X'FF'              END OF TABLE
         BE    UCBCALL                 GET NEXT VOLUME
         LA    5,6(5)                  POINT TO NEXT VOLSERNO
         B     SCRVOL
         DROP  RUCB
         EJECT
*
VTOCSTRT EQU   *
         MVC   DISKADR,=CL5'VTOC'      INDICATE START OF VTOC SCAN
         USING DSCB1,RDSCB1
         LA    RDSCB1,DSCB                  DSCB DSECT
*
VTOCREAD EQU   *
CALLVTOC CALL  READVTOC,(VOLSERA,DISKADRA,DSCBA,ABSTRA),VL
         B     RETPT2                  BRANCH AROUND PARMLIST
*
* THE FOLLOWING FIELDS ARE USED BY READVTOC
*
VOLSERA  DC    A(VOLSER)               LOCATOR 3
DISKADRA DC    A(DISKADR)              LOCATOR 4
DSCBA    DC    A(DSCB)                 LOCATOR 5
ABSTRA   DC    A(ABSTR)                LOCATOR 6
VOLSER   DC    CL6' '                  VOLUME SERIAL NUMBER
DISKADR  DC    CL5'VTOC'               VTOC REQUESTED/ACTUAL DSCB ADDR
         DS    0H                      ALIGNMENT
DSCB     DC    CL140' '                DATA SET CONTROL BLOCK
ABSTR    DC    CL5' '                  FOR ABSTR REQUEST
         DS    0H                      ALIGNMENT
*
RETPT2   EQU   *
         B     *+4(15)                 BRANCH DEPENDS ON RETURN CODE
         B     OK2                     DSCB FOUND
         B     UCBCALL                 VTOC END
         B     ABEND                   RC=8 VOLUME WAS NOT MOUNTED
         B     ABEND                   RC=12 INCORR FORMAT IDENTIFIER
         B     ABEND                   RC=16 PERMANENT I/O ERROR
         B     ABEND                   RC=20 INVALID WORKAREA POINTER
*
* TO LOCATE THE DATA SETS ALL FORMAT 1 DSCB'S MUST BE READ
*
OK2      EQU   *
         CLI   DS1FMTID,X'F1'          FORMAT 1 DSCB
         BE    DSNTEST                 YES, TEST DATA SET NAME
         CLI   DS1FMTID,X'F4'          FORMAT 4 DSCB
         BE    UCBCALL                 YES, FETCH NEXT UCB
         B     VTOCREAD                READ NEXT DSCB
         EJECT
*
* TESTING DATA SET NAMES WHETHER TO BE DELETED
* FIRST DSNAME MUST BE COMPARED WITH THE DATA SET NAME TABLE
*
DSNTEST  EQU   *
         L     5,DSNADDR   ADDRESS OF DSNAME TABLE
         LR    6,5
*
NAMETEST EQU   *
         CLI   0(5),C','  END OF NAME
         BE    CALCLEN  YES, CALCULATE LENGTH
         CLI   0(5),X'FF'  END OF TABLE
         BE    PRTDSN                  YES, PRINT DSN
         LA    5,1(5)  POINT TO NEXT BYTE
         B     NAMETEST
*
PRTDSN   EQU   *
         BAL   RBAL,NONAME             PRINT DSN AND OTHER INFO
         B     TSODSN                  SCAN TSO DSN TABLE
*
CALCLEN  EQU   *
         SR    5,6  CALCULATE LENGTH OF NAME
         BZ    ABEND    IMPOSSIBLE LENGTH
         CH    5,=H'44'  IMPOSSIBLE LENGTH
         BH    ABEND    YES, ABEND
         BCTR  5,0  DECREASE LENGTH BY ONE
         EX    5,NAMECOMP              COMPARE DATA SET NAME
         BE    PROTDSN                 TEST CREATION DATE
         AR    6,5  POINT TO
         LA    6,10(6)  NEXT NAME
         LR    5,6
         B     NAMETEST
NAMECOMP CLC   0(0,6),DS1DSNAM         UNKNOWN DATA SET
*
PROTDSN  EQU   *
         LA    7,2(5,6)                PROTECTION CHARACTER
         CLI   0(7),C'P'             DSN PROTECTED
         BE    VTOCREAD                SUPPRESS PRINTING OF DSN
         BAL   RBAL,NONAME             PRINT DSN AND OTHER INFO
*
* SOME DATA SETS ARE TESTED ONLY FOR A PASSED RETENTION PERIOD
*
         CLI   0(7),C'C'               ONLY CREATION DATE TEST
         BE    TSOTEST                 TEST CREATION DATE
         EJECT
*
TRKTEST  EQU   *
         NI    DS1SCALO,X'C0'  ZERO BIT 2 TO 7
         CLI   DS1SCALO,X'80'  TRACK ALLOCATION
         BE    QUANTST  YES, TEST QUANTITY
         MVC   REASON(19),=C'NO TRACK ALLOCATION'
         B     SCRATCH
*
QUANTST  EQU   *
         MVC   FIRSTEXT(2),DS1EXT1+2  MOVE LOWER CYL ADDR
         MVC   FIRSTEXT+2(2),DS1EXT1+6  MOVE UPPER CYL ADDR
         LH    8,FIRSTEXT+2  LOAD UPPER CYL ADDR
         SH    8,FIRSTEXT  CALCULATE NUMBER OF ALLOCATED CYL
         CH    8,6(7)  MORE TOO MUCH ALLOCATED
         BNH   TSTSECND  NO, TEST SECONDARY ALLOCATION
         MVC   REASON(28),=C'PRIMARY ALLOCATION TOO LARGE'
         B     SCRATCH
*
TSTSECND EQU   *
         CLC   TRKSPACE,DS1SCALO+1  SECOND ALLOCATION LIMIT EXCEEDED
         BNL   VOLTEST  NO, TEST VOL SER NO
         MVC   REASON(30),=C'SECONDARY ALLOCATION TOO LARGE'
         B     SCRATCH
*
VOLTEST  EQU   *
         L     8,VOLADDR2  TABLE OF SYSTEM VOLUMES
*
TESTVOL  EQU   *
         CLC   VOLSER,0(8)  DATA SET ON PROHIBITED VOLUME
         BE    SCRMSG  YES
         CLI   0(8),X'FF'  END OF TABLE
         BE    CREADTST  JES, TEST CREATION DATE
         LA    8,6(8)  POINT TO NEXT VOLUME SERIAL NUMBER
         B     TESTVOL
*
SCRMSG   EQU   *
         MVC   REASON(6),VOLSER  VOLUME SERIAL NUMBER TO PRINTER
         MVC   REASON+7(17),=C'PROHIBITED VOLUME'
         B     SCRATCH
         EJECT
*
* IF DSN IS NOT INCLUDED IN DSN TAB, IT MAY FIT WITH TSO USER DSN
*
TSODSN   EQU   *
         MVC   PDSADDR,PDSADDR2        RESTORE POINTER
         L     4,PDSADDR               POINTER TO TSO DSNTAB
         LA    RWORK,PDSADDR           SAVE POINTER
*
SCANSTRT EQU   *
         LTR   4,4                     ANY ENTRY PRESENT / END OF TAB
         BZ    TSTEXPDT                NO, SKIP TSO DSN PROCESSING
         MVC   PDSADDR,12(4)  PRECEDING ENTRY ADDRESS
         LA    6,0                     TO COUNT LENGTH OF MODULE NAME
         LA    7,8                     MAX LENGTH OF MODULE NAME
         LA    8,1                     COUNTER
*
MODSCAN  EQU   *
         CLI   4(4),C'.'               END OF MODULE NAME
         LA    4,1(4)                  POINT TO NEXT CHARACTER
         BE    MODCOMP                 COMPARE MODNAME WITH DSN
         BXLE  6,8,MODSCAN             STEP ONE CHARACTER
*
MODCOMP  EQU   *
         EX    6,COMP                  COMPARE DSN WITH TSO DSN
         BE    TSOTEST                 JES, TEST CREATION DATE
         L     4,12(RWORK)             POINTER TO PRECEDING ENTRY
         LR    RWORK,4                 SAVE ENTRY ADDRESS
         B     SCANSTRT                COMPARE WITH NEXT TSO DSN
COMP     CLC   DSNAME(0),3(4)          COMPARE DSN WITH TSO DSN
*
TSOTEST  EQU   *
         LA    5,0                     OFFSET TO RETPD
         LA    6,TSORETPD              TSO RETPD
         B     CREADTST                TEST CREATION DATE
         EJECT
*
CREADTST EQU   *
         L     8,BINDATE  LOAD CURRENT DATE
         SH     8,2(5,6)  DECREASE DATE BY NUMBER OF PROTECTED DAYS
         C     8,BINDATE               WAS NUMBER ZERO
         BE    EXPDTST                 YES,TEST EXPIRATION DATE
         ST    8,DATELMIT  STORE FOR COMPARE
         SLL   8,16(0)  ELIMINATE LEFT HALFWORD
         SRL   8,16(0)  ELIMINATE LEFT HALFWORD
         C     8,=F'365'  HAS DATE TURNED TO LAST YEAR
         BH    DATEPREP  YES, CONVERT IT
         C     8,=F'0'  LAST DAY OF OLD YEAR
         BNE   DATECOMP  NO, CONTINUE
*
DATEPREP EQU   *
         L     8,DATELMIT  LOAD CALCULATED EXPIRATION DATE
         S     8,=F'65171'             CORRECT DATE
         ST    8,DATELMIT  STORE FOR COMPARE
*
DATECOMP EQU   *
         MVI   DS1CREDT-1,X'00'        ZERO FOR CALCULATION
         S     8,DS1CREDT-1            CALC. DAYS OF PROTECTION
         LTR   8,8                     TEST SIGN
         BP    CRTST                   POSITIVE
         BZ    CREOK                   ZERO
         LCR   8,8                     COMPLEMENT
         SLL   8,16(0)                 ERASE
         SRL   8,16(0)                 LEFT HALFWORD
         C     8,=F'365'               LAST YEAR CREATED
         BL    CREOK
         S     8,=F'65171'             CALC. DAYS OF PROTECTION
         B     CREOK
CRTST    EQU   *
*
* SOMETIMES DATA SETS ARE ALLOCATED WITH WRONG DATE ON CLOCK
* THEREFORE CREATION DATE WILL BE CHECKED WHETHER IT IS OLDER THAN
* 40 DAYS. IF YES, IT COULD BE IN ERROR AND NO SCRATCH IS MADE
*
         CH    8,=H'20'                CREATION DATE OK
         BNH   CREOK                   YES
         MVC   REASON(22),=C'CREATION DATE IN ERROR'
         BAL   5,PRINT                 PRINT LINE
         B     VTOCREAD                NEXT DSCB
*
CREOK    EQU   *
         CLC   DS1CREDT,DATELMIT+1  STILL PROTECTED
         BE    WARNMSG                 NO DAY LEFT
         BH    CALCSTRS               YES, FLAG WITH ASTERISKS
         MVC   REASON(23),=C'RETENTION PERIOD PASSED'
         B     SCRATCH
*
EXPDTST  EQU   *
         C     8,4(5,6)                COMP. CURR. DATE WITH EXPIR.
         BNH   PASSED                  SCRATCH
         L     8,4(5,6)                EXPIRATION DATE
         B     CALCNUM                 COMPUTE RESIDUAL DAYS
         EJECT
*
* ALL REMAINING DATA SETS WILL BE SCRATCHED IF EXPIRATION DATE
* HAS PASSED
*
TSTEXPDT EQU   *
         CLC   DS1EXPDT,=X'000000'  NO EXPIRATION DATE
         BE    NOEXPDT  YES
         CLC   DS1EXPDT,DS1CREDT  BECAUSE OF SOMETIMES DAMAGED EXPDT
         BNH   NOEXPDT  IF NOT HIGH TREAT AS IF NOT PRESENT
         MVC   EXP+1(3),DS1EXPDT  MOVE EXPIRATION DATE
         L     8,EXP  LOAD EXPIRATION DATE
*
CALCNUM  EQU   *
         L     6,BINDATE  LOAD CURRENT DATE
         SR    8,6  CALCULATE NUMBER OF PROTECTED DAYS
         BNP   PASSED
         BZ    WARNMSG                 WARNING MSG ON LAST DAY
         B     CALCSTRS                FLAG WITH ASTERISKS
*
WARNMSG  EQU   *
         MVC   SCRIND(7),STRS  MOVE STARS TO PRINTER
         MVC   REASON(29),=C'TOMORROW IT WILL BE SCRATCHED'
*
PRTLNE   EQU   *
         BAL   5,PRINT  PRINT LINE
         B     VTOCREAD
*
* IF THERE IS NO EXPIRATION DATE, DATASET SHOULD BE SAVED FOR SOME DAYS
*
NOEXPDT  EQU   *
         LA    5,0                     OFFSET TO RETPD
         LA    6,ALLRETPD              RETPD FOR ALL REMAINING DS
         B     CREADTST                CHECK PROTECTION
*
PASSED   EQU   *
         MVC   REASON(22),=C'EXPIRATION DATE PASSED'
         B     SCRATCH
         EJECT
*
* EACH DATA SET NAME GETS UP TO SEVEN LEADING STARS EQUAL TO THE
* REMAINING DAYS OF RETENTION PERIOD
*
CALCSTRS EQU   *
         C     8,=F'7'  MORE THAN 7 DAYS
         BH    MORE  YES
         BCTR  8,0  DECREASE DAYS BY ONE
         EX    8,MOVESTAR              FLAG WITH ASTERISKS
*
MORE     EQU   *
         BAL   5,PRINT
         B     VTOCREAD
MOVESTAR MVC   STARS(0),STRS  MOVE NUMBER OF ASTERISKS EQUAL TO
*                             NUMBER OF PROTECTED DAYS
         EJECT
*
SCRATCH  EQU   *
         MVC   SCRIND,=C'SCRATCHED'    INDICATE SCRATCH
*
* THIS BRANCH MUST BE ALTERED BY SUPERZAP AFTER END OF TEST PHASE
*
         B     DOC                     PRINT DSNAME
         SR    0,0
         SCRATCH PURGE
         B     *+4(15)
         B     TSTATCDE                TEST STATUS
         B     NOVOL                   VOL WAS NOT MOUNTED
         B     TSTATCDE                UNUSUAL CONDITION
         B     INVALIST                INVALID VOLUME LIST
*
TSTATCDE EQU   *
         XR    RWORK,RWORK
         IC    RWORK,STATCODE+1        SCRATCH STATUS CODE
         SLL   RWORK,2                 MULTIPLY BY 4
         B     *+4(RWORK)
         B     UNCATLG                 RC=0 ALL DSCB'S DELETED
         B     NODSCB1                 RC=1 DSCB1 NOT FOUND
         B     PROTECT                 RC=2 PSWD PROTECTED OR VSAM DS
         B     EXPDTP                  RC=3 EXPDT NOT PASSED OR NO OVRD
         B     IOERR                   RC=4 PERM. I/O-ERR OR DSCB1 BAD
         B     MOUNT                   RC=5 VOL NOT MOUNTED
         B     OPERATOR                RC=6 OPERATOR UNABLE TO MOUNT
         B     INUSE                   RC=7 DATA SET IN USE
*
UNCATLG  EQU   *
         CATALOG UNCAT
         B     *+4(15)
         B     INDUCAT                 SUCCESSFULLY UNCATALOGUED
         B     CATMOUNT                CAT VOL WAS NOT MOUNTED / OPEN
         B     INCONS                  CAT STRUCTURE INCONSISTENT
         B     DUMMY                   UNUSED
         B     DUMMY                   UNUSED
         B     DUMMY                   UNUSED
         B     DUMMY                   UNUSED
         B     UNCERR                  UNCORRECTABLE ERROR
*
INDUCAT  EQU   *
         MVC   UNCIND,=C'UNCATALOGUED' INDICATE UNCATALOG
         BAL   5,PRINT                 PRINT DSNAME
         B     VTOCREAD                NEXT DSCB
*
INCONS   EQU   *
         C     0,=F'60'                VSAM DATA SET
         BE    ABEND                   ERROR IF YES
DOC      EQU   *
         BAL   5,PRINT                 PRINT DSNAME
         B     VTOCREAD                NEXT DSCB
         EJECT
PURGE    CAMLST SCRATCH,DSNAME,,VOLIST,,OVRD
VOLIST   DC    H'1'  NUMBER OF VOLUME LISTS
DEVTYPE  DC    X'00000000'  DEVICE TYPE
VOLSER1  DS    CL6  VOLUME SERIAL NUMBER
STATCODE DC    H'0'                    SCRATCH STATUS CODE
UNCAT    CAMLST UNCAT,DSNAME
         EJECT
*
PROGEND  EQU   *
         WTO   '******* NORMAL END OF DISKSCR'
         CLOSE (SYSPRINT)
         XR   15,15
*
RETURN   EQU   *
         LA    13,SAVEA                LOAD ADDRESS OF OWN SAVEAREA
         L     13,4(13)                LOAD ADDRESS OF CALLING SAVEAREA
         LM    2,12,28(13)             RESTORE
         L     14,12(13)               THE
         L     0,20(13)                REGISTERS
         BR    14                      RETURN
*
OPERR    EQU   *
         WTO   '******* SYSPRINT DD STATEMENT MISSING'
         WTO   '******* DISKSCR TERMINATED'
         LA    15,16                   RETURN CODE 16 - SEVERE ERROR
         B     RETURN                  TERMINATE PROGRAM
         EJECT
*
* THE FOLLOWING SECTION CONTAINS THE SUBROUTINES
*
* DATA SET NAME, VOLUME SERIAL NUMBER,
* CREATION - AND EXPIRATION DATE ARE MOVED TO PRINTER
*
NONAME   EQU   *
         MVC   DSN,DS1DSNAM  DATA SET NAME TO PRINTER
         MVC   VOL,VOLSER  VOLUME SERIAL NUMBER TO PRINTER
         XC    DW,DW  CLEAR DOUBLE WORD
         MVC   DW+7(1),DS1CREDT    TAKE YEAR OF CREATION DATE
         L     RWORK,DW+4
         CVD   RWORK,DW  CONVERT IT TO DECIMAL
         UNPK  CREADT(2),DW+6(2)
         MVZ   CREADT+1,=X'F0'
         MVI   CREADT+2,C'.'  POINT BETWEEN YEAR AND DAY
         XC    DW,DW  CLEAR DOUBLE WORD
         MVC   DW+6(2),DS1CREDT+1  TAKE DAY OF CREATION DATE
         L     RWORK,DW+4
         CVD   RWORK,DW  CONVERT IT TO DECIMAL
         UNPK  CREADT+3(3),DW+6(2)
         MVZ   CREADT+5(1),=X'F0'
         XC    DW,DW  CLEAR DOUBLE WORD
         MVC   DW+7(1),DS1EXPDT  TAKE YEAR OF EXPIRATION DATE
         L     RWORK,DW+4
         CVD   RWORK,DW  CONVERT IT TO DECIMAL
         UNPK  EXPDT(2),DW+6(2)
         MVZ   EXPDT+1(1),=X'F0'
         MVI   EXPDT+2,C'.'  POINT BETWEEN YEAR AND DAY
         XC    DW,DW  CLEAR DOUBLE WORD
         MVC   DW+6(2),DS1EXPDT+1  TAKE DAY OF EXPIRATION DATE
         L     RWORK,DW+4
         CVD   RWORK,DW  CONVERT IT TO DECIMAL
         UNPK  EXPDT+3(3),DW+6(2)  EXPIRATION DATE TO PRINTER
         MVZ   EXPDT+5(1),=X'F0'
         BR    RBAL                    RETURN
         EJECT
*
*  EACH ERROR IS HANDLED BY THIS ROUTINE
*
NOVOL    EQU   *
INVALIST EQU   *
NODSCB1  EQU   *
PROTECT  EQU   *
EXPDTP   EQU   *
IOERR    EQU   *
MOUNT    EQU   *
OPERATOR EQU   *
INUSE    EQU   *
CATMOUNT EQU   *
DUMMY    EQU   *
UNCERR   EQU   *
ABEND    EQU   *
         ABEND (15),DUMP  BECAUSE OF ERROR
         EJECT
*
PRINT    EQU   *
         PUT   SYSPRINT,LINE  PRINT LINE
         MVC   LINE,LINE-1  CLEAR PRINTER LINE
         BR    5  RETURN TO PROGRAM
         EJECT
*
* DEFINED SPACE AND WORKAREAS
*
DW       DC    D'0'  WORKAREA
DATE     DS    0F  PACKED DATE 00YYDDDF
         DC    X'00'  ZERO 00
YEAR     DS    CL1  YEAR YY
DAY      DS    CL2  DAY DDDF
BINDATE  DS    0F  DATE IN BINARY
         DC    X'0'  EMPTY
BINYEAR  DS    CL1  YEAR IN BINARY
BINDAY   DS    CL2  DAY IN BINARY
DATELMIT DS    F   TWENTY   DAYS AGO, LIMIT OF EXPIRATION
FIRSTEXT DC    F'0'  LOWER AND UPPER CYL ADDR OF FIRST EXTENT CCCC
         DS    CL1  EMPTY
DECDATE  DS    0CL5  DATE IN UNPACKED DECIMAL
DECYEAR  DS    CL2  YEAR IN DECIMAL
         DS    CL3  DAY IN DECIMAL
TRKSPACE DC    X'000013'
STRS     DC    7C'*'   SEVEN STARS EQUAL TO SEVEN PROTECTED DAYS
EXP      DC    F'0'  AUXILIARY STORAGE
DSNADDR  DC    F'0'  ADDRESS OF MODULE CONTAINING DATA SET NAMES
VOLADDR1 DC    F'0'  ADDRESS OF MODULE CONTAINING SCRATCH VOLUMES
VOLADDR2 DC    F'0'  ADDRESS OF MODULE CONTAINING SYSTEM VOLUMES
PDSADDR  DC    F'0'  MEMBER NAME TABLE'S LAST ENTRY ADDRESS
PDSADDR2 DC    F'0'  SAVE AREA FOR ENTRY ADDRESS
DEV3330  DC    XL2'2009'               DEVICE TYPE DA 3330
DEV33301 DC    XL2'200D'               DEVTYPE 3330 MOD 11
SAVEA    DC    18F'0'                  SAVEAREA
SAVEA2   DC    18F'0'                  SECOND SAVEAREA USED BY SUBROUT
* DO NEVER SEPARATE THE FOLLOWING FOUR DEFINITIONS
* SEE STATEMENTS FOLLOWING LABEL 'TSOTEST' AND 'CREADTST'
         DS    0F
         DC    H'0'
TSORETPD DC    H'0'
         DC    H'20'                   RETPD FOR TSO USER DATA SETS
         DC    H'0'                    RETPD FOR ALL UNKNOWN DATA SETS
ALLRETPD DC    H'0'                    THIS FIELD WILL BE UPDATED
RETPD    DC    H'0'                    DEPENDING ON THE DAY OF THE WEEK
*
* END OF CONTINGUOUS DEFINITIONS
*
         EJECT
*
* REGISTER EQUATES
*
RHADCB   EQU  12                      DCB DSECT BASE REGISTER
RUCB     EQU   12                      UCB DSECT BASE REG
RDSCB1   EQU   12                      DSCB1 DSECT BASE REG
RBAL     EQU   11  LINK TO SUBROUTINES REGISTER
RWORK    EQU   10                      COMMON WORK REG
         EJECT
*
* LITERALS
*
         LTORG
         EJECT
*
* DATA CONTROL BLOCKS
*
SYSPRINT DCB   DDNAME=SYSPRINT,MACRF=(PM),DSORG=PS
UADS     DCB   DDNAME=PDSDCB,MACRF=R,DSORG=PO
         EJECT
*
* INPUT OUTPUT AREAS
*
DSNAME   EQU   DSCB
         DC    C' '  BLANK TO CLEAR PRINTER LINE
LINE     DS    0CL133  PRINTER LINE
         DS    CL1  CONTROL CHARACTER
STARS    DS    CL7  WARNING STARS
DSN      DS    CL44  DATA SET NAME
         DS    CL2
CREADT   DS    CL6  CREATION DATE
         DS    CL2
EXPDT    DS    CL6  EXPIRATION DATE
         DS    CL2
VOL      DS    CL6  VOLUME SERIAL NUMBER
         DS    CL2
SCRIND   DS    CL9                     SCRATCH INDICATOR
         DS    CL2
UNCIND   DS    CL12                    UNCATALOG INDICATOR
         DS    CL2
REASON   DS    CL30  REASON OF SCRATCH
         EJECT
*
* D U M M Y   S E C T I O N S
*
         PRINT OFF
         IECDSECS ,,,,,,,,,,,,,,,,,,,DCB,,UCB,DSCB1,                   *
               EXPAND=YES
         PRINT ON
         END   DISKSCRT
*/* AN FOLGENDEN TAGEN WURDE DAS PROGRAMM GETESTET */
*/* NEUERSTELLUNG   28. NOV 1975   LEVEL RT */
*/* AENDERUNG        5. DEZ 1975   LEVEL RT */
*/* AENDERUNG       13. JAN 1976   LEVEL RT */
*/* AENDERUNG       14. JAN 1976   LEVEL RT */
*/* AENDERUNG       15. JAN 1976   LEVEL RT */
*/* AENDERUNG       15. JAN 1976   LEVEL RT */
*/* AENDERUNG       22. JAN 1976   LEVEL RT */
