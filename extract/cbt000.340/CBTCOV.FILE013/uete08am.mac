** ADD NAME=INIT
** NUMBER NEW1=10,INCR=10
         MACRO
&NAME    INIT  &CXD=0
         LCLA  &LA1
         LCLC  &LC1
&LC1     SETC  '&NAME'
         AIF   (N'&SYSLIST(2) EQ 2 AND '&CXD' EQ '0').ONESECT
         AIF   ('&CXD' EQ '0').MOVECSC
         AGO   .MANYSEX
.ONESECT ANOP
&LC1     L     0,=A(&SYSLIST(2,2)) GET LENGTH OF AREA
         AGO   .GETMAIN
.MANYSEX ANOP
&LC1     L     0,&CXD
.GETMAIN GETMAIN R,LV=(0)
         LR    &SYSLIST(1),1
&LC1     SETC  '        '
.MOVECSC ANOP
&LA1     SETA  2
.P1      AIF   (T'&SYSLIST(&LA1)   EQ 'O').E
         AIF   (N'&SYSLIST(&LA1) EQ 3).QCON
         LR    14,&SYSLIST(1)      POINT TO TARGET
         AGO   .NOQCON
.QCON    ANOP
&LC1     L     14,&SYSLIST(&LA1,3)    GET Q CONSTANT
&LC1     SETC  '        '
         AR    14,&SYSLIST(1)      POINT TO TARGET
.NOQCON  L     15,=A(&SYSLIST(&LA1,2))  LENGTH
         LR    1,15
         L     0,=A(&SYSLIST(&LA1,1)) FROM ADDRESS
         MVCL  14,0
&LA1     SETA  &LA1+1
         AGO   .P1
.E       ANOP
         L     15,4(,13)     GET ADDRESS OF PREVIOUS SA POOL
         L     1,24(,15)     RELOAD REGISTER 1
         MEND
** ADD NAME=LCNVE
** NUMBER NEW1=10,INCR=10
         MACRO
&NAME    LCNVE &Y,&M,&N,&O,&P,&Q,&R,&S,&T,&U,&V,&W,&X
*CHANGE LEVEL 009      VOM 14.07.76
         GBLC  &LCNVGC1(140)
         LCLA  &KA1,&KA2,&KA3,&KA4,&KA5
         LCLC  &KC1,&A,&B,&C,&D,&E,&F,&G,&H,&I,&J,&K,&L
         LCLB  &KB1,&KB2
         AIF   (T'&M NE 'O').R1
&KB2     SETB  1
.R1      ANOP
&KA1     SETA  1
&KA2     SETA  2
.G1      AIF   ('&LCNVGC1(&KA1)' EQ '').G2
         AIF   ('&LCNVGC1(&KA1)' EQ '&SYSECT').G3
&KA1     SETA  &KA1+14
&KA2     SETA  &KA2+14
         AIF   (&KA1  LT  140).G1
         MNOTE 8,'ZU VIELE CSECTS'
         MEXIT
.G2      ANOP
         AIF   (&KB2 NE 1).R2
         MNOTE 4,'PARAMETER FEHLEN'
         MEXIT
.R2      ANOP
ASTX&SYSNDX EQU   &Y
&KA4     SETA  &KA1
&LCNVGC1(&KA1)  SETC  '&SYSECT'
&LCNVGC1(&KA2) SETC 'ASTX&SYSNDX'
&KA3     SETA  &KA1+2
&KA2     SETA  2
.RP1     ANOP
&LCNVGC1(&KA3) SETC  '&SYSLIST(&KA2)'
&KA2     SETA  &KA2+1
&KA3     SETA  &KA3+1
         AIF   (&KA2 LT 14).RP1
         AGO   .G4
.G3      ANOP
&KA4     SETA  &KA1
         AIF   (&KB2).G4
         MNOTE *,'PARAMETERS SUPERFLUOUS'
.G4      ANOP
&KA5     SETA  &KA4
&KA4     SETA  &KA1+1
&KC1     SETC  '&LCNVGC1(&KA4)'
&KA4     SETA  &KA4+1
&KA1     SETA  1
&A       SETC  '&LCNVGC1(&KA4)'
&KA4     SETA  &KA4+1
         AIF   ('&LCNVGC1(&KA4)' EQ '').RAUS
&KA1     SETA  &KA1+1
&B       SETC  '&LCNVGC1(&KA4)'
&KA4     SETA  &KA4+1
         AIF   ('&LCNVGC1(&KA4)' EQ '').RAUS
&KA1     SETA  &KA1+1
&C       SETC  '&LCNVGC1(&KA4)'
&KA4     SETA  &KA4+1
         AIF   ('&LCNVGC1(&KA4)' EQ '').RAUS
&KA1     SETA  &KA1+1
&D       SETC  '&LCNVGC1(&KA4)'
&KA4     SETA  &KA4+1
         AIF   ('&LCNVGC1(&KA4)' EQ '').RAUS
&KA1     SETA  &KA1+1
&E       SETC  '&LCNVGC1(&KA4)'
&KA4     SETA  &KA4+1
         AIF   ('&LCNVGC1(&KA4)' EQ '').RAUS
&KA1     SETA  &KA1+1
&F       SETC  '&LCNVGC1(&KA4)'
&KA4     SETA  &KA4+1
         AIF   ('&LCNVGC1(&KA4)' EQ '').RAUS
&KA1     SETA  &KA1+1
&G       SETC  '&LCNVGC1(&KA4)'
&KA4     SETA  &KA4+1
         AIF   ('&LCNVGC1(&KA4)' EQ '').RAUS
&KA1     SETA  &KA1+1
&H       SETC  '&LCNVGC1(&KA4)'
&KA4     SETA  &KA4+1
         AIF   ('&LCNVGC1(&KA4)' EQ '').RAUS
&KA1     SETA  &KA1+1
&I       SETC  '&LCNVGC1(&KA4)'
&KA4     SETA  &KA4+1
         AIF   ('&LCNVGC1(&KA4)' EQ '').RAUS
&KA1     SETA  &KA1+1
&J       SETC  '&LCNVGC1(&KA4)'
&KA4     SETA  &KA4+1
         AIF   ('&LCNVGC1(&KA4)' EQ '').RAUS
&KA1     SETA  &KA1+1
&K       SETC  '&LCNVGC1(&KA4)'
&KA4     SETA  &KA4+1
         AIF   ('&LCNVGC1(&KA4)' EQ '').RAUS
&KA1     SETA  &KA1+1
&KA4     SETA  &KA4+1
         AIF   ('&LCNVGC1(&KA4)' EQ '').RAUS
&KA1     SETA  &KA1+1
.RAUS    ANOP
         AIF   (&KA1 EQ 1).U1
         AIF   (&KA1 EQ  2).U2
         AIF   (&KA1 EQ  3).U3
         AIF   (&KA1 EQ  4).U4
         AIF   (&KA1 EQ  5).U5
         AIF   (&KA1 EQ  6).U6
         AIF   (&KA1 EQ  7).U7
         AIF   (&KA1 EQ  8).U8
         AIF   (&KA1 EQ  9).U9
         AIF   (&KA1 EQ 10).U10
         AIF   (&KA1 EQ 11).U11
         AIF   (&KA1 EQ 12).U12
         AGO   .U12
.U1      USING &KC1,&A
         AGO   .U13
.U2      USING &KC1,&A,&B
         AGO   .U13
.U3      USING &KC1,&A,&B,&C
         AGO   .U13
.U4      USING &KC1,&A,&B,&C,&D
         AGO   .U13
.U5      USING &KC1,&A,&B,&C,&D,&E
         AGO   .U13
.U6      USING &KC1,&A,&B,&C,&D,&E,&F
         AGO   .U13
.U7      USING &KC1,&A,&B,&C,&D,&E,&F,&G
         AGO   .U13
.U8      USING &KC1,&A,&B,&C,&D,&E,&F,&G,&H
         AGO   .U13
.U9      USING &KC1,&A,&B,&C,&D,&E,&F,&G,&H,&I
         AGO   .U13
.U10     USING &KC1,&A,&B,&C,&D,&E,&F,&G,&H,&I,&J
         AGO   .U13
.U11     USING &KC1,&A,&B,&C,&D,&E,&F,&G,&H,&I,&J,&K
         AGO   .U13
.U12     USING &KC1,&A,&B,&C,&D,&E,&F,&G,&H,&I,&J,&K,&L
.U13     ANOP
         PUSH  USING
         USING &Y,15
&NAME    STM   14,12,12(13)
         LA    0,80
         LA    1,1  SUBPOOL 1
         SLL   1,24
         OR    0,1
         GETMAIN R,LV=(0)
         ST    13,4(1)
         ST    1,8(13)
         LM    13,1,8(13)
         CNOP  0,4
         BAL   15,*+8
         DC    A(&KC1) .   1-   4
         L     15,0(15)
&KA2     SETA  &KA1-1
&KA3     SETA  &KA5+2
&KA1     SETA  &KA5+3
         LR    &LCNVGC1(&KA3),15
         AIF   (&KA2 EQ 0).P1
         LA    14,1
.P2      LA    &LCNVGC1(&KA1),4095(14,&LCNVGC1(&KA3))
&KA1     SETA  &KA1+1
&KA3     SETA  &KA3+1
&KA2     SETA  &KA2-1
         AIF   (&KA2 GT 0).P2
.P1      ANOP
         DROP  15
         POP   USING
         MEND
** ADD NAME=LEXIT
** NUMBER NEW1=10,INCR=10
         MACRO
&NAME    LEXIT &RC=0
*CHANGE LEVEL 009      VOM 14.07.76
&NAME    LR    1,13
         L     13,4(13)
.P6      AIF   ('&RC'(1,1) NE '(').P3
         ST    &RC(1),16(13)
         AGO   .P4
.P3      ANOP
         LA    15,&RC
         ST    15,16(13)
.P4      ANOP
         LA    0,80
         LA    2,1  SUBPOOL 1
         SLL   2,24
         OR    0,2
         FREEMAIN R,LV=(0),A=(1)
         LM    14,12,12(13)
         BR    14
         MEND
** ADD NAME=LPCID
** NUMBER NEW1=10,INCR=10
         MACRO
&LABEL   LPCID &TITLE=
         GBLB  &BACID
         LCLC  &DAY,&MONTH,&YEAR,&HOUR,&MIN
         LCLC  &CSECT
&CSECT   SETC  '&LABEL'
         AIF   ('&SYSNDX' NE '0001').P81
&LABEL   CSECT
&CSECT   SETC  '&LABEL'
         USING *,15
         AGO   .P91
.P81     ANOP
&CSECT   SETC  '&SYSECT'
.P91     AIF   ('&TITLE' EQ '').NOTIT1
         TITLE &TITLE
.NOTIT1  ANOP
         AIF   ('&SYSNDX' NE '0001').P82
         B     $AID&SYSNDX
         AGO   .P83
.P82     ANOP
&LABEL   B     $AID&SYSNDX
.P83     ANOP
&DAY     SETC  '&SYSDATE'(1,2)
&MONTH   SETC  '&SYSDATE'(4,2)
&YEAR    SETC  '&SYSDATE'(7,2)
.*
&HOUR    SETC  '&SYSTIME'(1,2)
&MIN     SETC  '&SYSTIME'(4,2)
         AIF   (&BACID).PX01
&BACID   SETB  1
         WXTRN D&DAY&MONTH&YEAR,T&HOUR&MIN
.PX01    ANOP
         DC    A(D&DAY&MONTH&YEAR)
         DC    A(T&HOUR&MIN)
         DC    CL22'&CSECT  &DAY.&MONTH.&YEAR-&HOUR.&MIN'
         AIF   ('&TITLE' EQ '').NOTIT2
         DC    C&TITLE
.NOTIT2  ANOP
         AIF   ('&SYSNDX' NE '0001').P84
         DROP  15
.P84     ANOP
$AID&SYSNDX DS 0H
         MEND
** ADD NAME=OPREGS
** NUMBER NEW1=10,INCR=10
         MACRO
         OPREGS &MF=X
         GBLA  &GBRDA(100),&GBRDCT,&GBRDISP,&GBVLCNT
         GBLB  &GBRDB(100),&GBVLBIT
         GBLC  &GBRDC(100)
         LCLA  &LCLCT,&LCLA
         AIF   ('&MF(1)' NE 'X').P99
.P1      ANOP
&LCLCT   SETA  &LCLCT+1
         AIF   (&LCLCT GT &GBRDCT).P9
         AIF   ('&GBRDC(&LCLCT)' EQ '').P1   TRY NEXT ENTRY
         AIF   (&GBRDB(&LCLCT) EQ 0).P2       IT IS A WORD
         STC   &GBRDC(&LCLCT),&GBRDA(&LCLCT).(1) PUT FLAG IN LIST
         AGO   .P1      TRY NEXT ENTRY
.P2      ANOP
&LCLA    SETA  &GBRDA(&LCLCT)-&GBRDA(&LCLCT)/4*4
         AIF   (&LCLA EQ 0).P3    IF NOT A WORD BOUNDARY
         STCM  &GBRDC(&LCLCT),7,&GBRDA(&LCLCT).(1)  THEN ONLY 3 BYTES
         AGO   .P1
.P3      ST    &GBRDC(&LCLCT),&GBRDA(&LCLCT).(1)  PUT 4 BYTES INTO LIST
         AGO   .P1
.P9      ANOP
         AIF   (&GBVLBIT EQ 0).P99
         OI    &GBVLCNT.(1),X'80'
.P99     ANOP
&GBRDISP SETA  0
&LCLA    SETA  1
&GBVLBIT SETB  0
.P10     AIF   (&LCLA GT &GBRDCT).P12
&GBRDC(&LCLA) SETC ''
&LCLA    SETA  &LCLA+1
         AGO   .P10
.P12     ANOP
&GBRDCT  SETA  0
         MEND
** ADD NAME=RDOP
** NUMBER NEW1=10,INCR=10
         MACRO
         RDOP  &OP,&MF=X,&TYPE=WORD,&VL=0
         GBLA  &GBRDA(100),&GBRDCT,&GBRDISP,&GBVLCNT
         GBLB  &GBRDB(100),&GBVLBIT
         GBLC  &GBRDC(100)
         LCLC  &LCLC1,&LCLC2
         LCLA  &LCLA1,&LCLA2,&LCLEN
&LCLC1   SETC  'L'''
&LCLC2   SETC  '&TYPE'
&GBRDCT  SETA  &GBRDCT+1
         AIF   ('&VL' EQ '0').G1
&GBVLBIT SETB  1           INDICATE THAT A VL BIT IS TO BE SET
&GBVLCNT SETA  &GBRDISP    DISPLACEMENT OF VL BIT
.G1      ANOP
&GBRDA(&GBRDCT) SETA &GBRDISP   THIS IS THE DISPLACEMENT OF THIS FIELD
.*
.*             FIND THE LENGTH OF THIS FIELD AND SET TYPE IN TABLE
.*
         AIF   ('&TYPE' NE 'LEN').C1 IF A LENGTH THEN ONLY 1 BYTE
&GBRDB(&GBRDCT) SETB 1       INDICATE A FLAG
&LCLEN   SETA  1         SET TO LENGTH OF THIS FIELD
         AGO   .C4
.C1      AIF   ('&TYPE' NE 'FLAG').C2   1 BYTE FOR A FLAG
&GBRDB(&GBRDCT) SETB 1       INDICATE A FLAG
&LCLEN   SETA  1         SET TO LENGTH OF THIS FIELD
         AGO   .C4
.C2      AIF   ('&TYPE' NE 'X').E1
&LCLEN   SETA  (K'&OP+1)/2
         AGO   .C4
.E1      AIF   ('&TYPE' NE 'C').E2
&LCLEN   SETA  K'&OP
         AGO   .C4
.E2      ANOP
&GBRDB(&GBRDCT) SETB 0       INDICATE THAT IT IS A WORD
&LCLA1   SETA  &GBRDISP/4   NOW SEE IF WE ARE ON A WORD BOUNDARY
&LCLA1   SETA  &LCLA1*4     OR NOT
&LCLA2   SETA  &GBRDISP-&LCLA1  IF NOT ONLY THREE BYTES WILL BE STORED
         AIF   (&LCLA2 EQ 0).C3
&LCLA2   SETA  1
.C3      ANOP
&LCLEN   SETA  4-&LCLA2     THE LENGTH OF THIS FIELD, 3 OR 4 BYTES
.C4      ANOP
.*
.*             NOW WE HAVE THE LENGTH SET UP DISPLACEMENT OF NEXT FIELD
&LCLA2   SETA  &GBRDISP    SAVE  DISPLACEMENT OF THIS FIELD FOR LATER
&GBRDISP SETA  &GBRDISP+&LCLEN
.*
.*
.*             SET UP THE REGISTER NOTATION IF PRESENT, IN TABLE
.*
         AIF   ('&OP' EQ '').C5   IF OPERAND HAS BEEN OMITTED
         AIF   ('&OP'(1,1) NE '(').C5  OR IS NOT A REGSITER, BRANCH
&GBRDC(&GBRDCT) SETC '&OP(1)'   SAVE REGISTER IN TABLE
.*
.*             SET THE TYPE OF THE FIELD RIGHT
.*
.C5      AIF   ('&TYPE' NE 'LEN').C6 IF THIS FIELD IS TYPE LEN
         AIF   ('&OP' EQ '').C6      THEN SET IT TO FLAG
         AIF   ('&OP'(1,1) NE '(').C6  IF OPERAND IS OMITTED
&LCLC2   SETC  'FLAG'       OR A REGISTER NOTATION
.*
.*             NOW DEFINE THE PARAMETER IF NOT EXECUTE FORM
.*
.C6      AIF   ('&MF(1)' EQ 'E').PE
         AIF   ('&OP' EQ '').P1      IF NO OPERAND DEFINE 0
         AIF   ('&OP'(1,1) EQ '(').P1  ALSO IF A REGISTER
         AGO   .P2             OTHERWISE DEFINE THE CONSTANT
.P1      DC    AL&LCLEN.(0)
         AGO   .PX
.P2      AIF   ('&LCLC2' NE 'LEN').P3
         DC    AL1(&LCLC1&OP)
         AGO   .PX
.P3      AIF   ('&LCLC2' NE 'FLAG').P4
         DC    AL&LCLEN.(&OP)
         AGO   .PX
.P4      AIF   ('&LCLC2' NE 'WORD').P5
         DC    AL&LCLEN.(&OP)
         AGO   .PX
.P5      AIF   ('&LCLC2' NE 'C').P6
         DC    C'&OP'
         AGO   .PX
.P6      AIF   ('&LCLC2' NE 'X').PX
         DC    X'&OP'
         AGO   .PX
.PX      MEXIT
.*
.*             NOW SET UP THE LOAD ADDRESSES FOR EXECUTE FORM
.*
.PE      AIF   ('&LCLC2' NE 'C').F1 IF A DIRECT OPERAND IN
         MVC   &LCLA2.(&LCLEN,1),=C'&OP' CHARACTER FORMAT, MOVE IT
         AGO   .P9
.F1      AIF   ('&LCLC2' NE 'X').F2
         MVC   &LCLA2.(&LCLEN,1),=X'&OP'
         AGO   .P9
.F2      AIF   ('&OP' NE '').PE1  IF OPERAND HAS BEEN OMITTED
         LA    14,0               SET PARAMETER TO ZERO
         AGO   .PGOTOP
.PE1     AIF   ('&OP'(1,1) NE '(').D1   IF A  REGISTER
         AIF   ('&LCLC2' EQ 'WORD').D2  AND ONLY 1 BYTE THEN
         STC   &OP(1),&LCLA2.(1)     SAVE IN PARAMETER
         AGO   .P9                   ELSE
.D2      ANOP
&LCLA1   SETA  &LCLA2/4*4      IF THE DISPLACEMENT IS ON A WORD
&LCLA1   SETA  &LCLA2-&LCLA1   BOUNDARY THEN
         AIF   (&LCLA1 EQ 0).D3        STORE A WORD  ELSE
         STCM  &OP(1),7,&LCLA2.(1)     STORE 3 BYTES
         AGO   .P9
.D3      ST    &OP(1),&LCLA2.(1)     STORE A WORD
         AGO   .P9
.D1      AIF   ('&LCLC2' NE 'LEN').PGETOP  IF THE TYPE IS LEN, THEN
         LA    14,&LCLC1&OP    GET LENGTH OF THE OPERAND
         AGO   .PGOTOP        ELSE
.PGETOP  LA    14,&OP   GET ADDR OF OPERAND
.PGOTOP  AIF   ('&LCLC2' EQ 'WORD').PW3   IF ONLY 1 BYTE THEN
         STC   14,&LCLA2.(1)   SAVE IN PARM LIST
         AGO   .P9             ELSE
.PW3     ANOP
&LCLA1   SETA  &LCLA2/4*4      IF THE DISPLACEMENT IS ON A WORD
&LCLA1   SETA  &LCLA2-&LCLA1   BOUNDARY THEN
         AIF   (&LCLA1 EQ 0).PW4       STORE A WORD
         STCM  14,7,&LCLA2.(1)  SAVE IN PARM LIST
         AGO   .P9
.PW4     ST    14,&LCLA2.(1)    SAVE IN PARM LIST
.P9      ANOP
         AIF   ('&VL' EQ '0').P99
         OI    &LCLA2.(1),X'80'   VL BIT
.P99     ANOP
         MEND
** ADD NAME=XCONV
** NUMBER NEW1=10,INCR=10
         MACRO
&NAME    XCONV &IN,&OUT,&LEN,&MF=X
         GBLB  &GBLHEXC
         LCLB  &LCLB1,&LCLB2,&LCLB3,&LCLB4
         AIF   ('&MF(1)' NE  'E').NOTE
         LA    1,&MF(2)
&LCLB4   SETB  1
         AGO   .ITSE
.NOTE    ANOP
         CNOP  0,4
&NAME    BAL   1,*+32
.ITSE    AIF   ('&IN'(1,1) EQ  '(').R1
&LCLB1   SETB  1
         AIF   (&LCLB4 EQ 0).R1B
         LA    15,&IN
         ST    15,0(1)   ADDR OF INPUT FIELD
         AGO   .R1A
.R1B     ANOP
         DC    A(&IN)     INPUT ADDRESS
         AGO   .R1A
.R1      AIF   (&LCLB4).R1A
         DC    A(0)
.R1A     AIF   ('&OUT'(1,1) EQ '(').R2
&LCLB2   SETB  1
         AIF   (&LCLB4 EQ 0).R2B
         LA    15,&OUT
         ST    15,4(1)   ADDR OF OUTPUT FIELD
         AGO   .R2A
.R2B     ANOP
         DC    A(&OUT)   OUTPUT ADDRESS
         AGO   .R2A
.R2      AIF   (&LCLB4).R2A
         DC    A(0)
.R2A     AIF   ('&LEN'(1,1) EQ  '(').R3
&LCLB3   SETB  1
         AIF   (&LCLB4 EQ 0).R3B
         LA    15,&LEN
         ST    15,8(1)   LENGTH OF INPUT FIELD
         AGO   .R3A
.R3B     ANOP
         DC    A(&LEN)   LENGTH
         DC    CL16' '   AREA TO WORK IN
         AGO   .R3A
.R3      AIF   (&LCLB4).R3A
         DC    A(0)      LENGTH
         DC    CL16' '   AREA TO WORK IN
.R3A     AIF   (&LCLB1).R4
         ST    &IN(1),0(1)
.R4      AIF   (&LCLB2).R5
         ST    &OUT(1),4(1)
.R5      AIF   (&LCLB3).R6
         ST    &LEN(1),8(1)
.R6      ANOP
         L     15,=V(SYSTHXCN)
         BALR  14,15
         AIF   (&GBLHEXC).P1
&GBLHEXC SETB  1
SYSTHXCN CSECT
         PUSH USING
         LCNVE *,5
         L     2,8(1)   GET LENGTH TO BE CONVERTED
         LA    9,12(1)  POINT TO AN AREA TO WORK WITH
         L     6,0(1)  GET INPUT ADDRESS
         L     7,4(1)  GET OUTPUT ADDRESS
         SRDA  2,32     FIND THE NUMBER OF FULL UNPKS
         D     2,AC7&SYSNDX
         LTR   3,3       AT LEAST ONE/Q
         BZ    REST&SYSNDX
HEXC&SYSNDX  UNPK  0(15,9),0(8,6)  TRANSLATE TO HEX F0 TO FF
         TR    0(14,9),TRTB&SYSNDX-240 TURN TO 0 TO F
         MVC   0(14,7),0(9)          PUT INTO OUTPUT FIELD
         LA    6,7(6)  INCREASE INPUT BY 7 BYTES
         LA    7,14(7) INCREASE OUTPUT BY 14 BYTES
         BCT   3,HEXC&SYSNDX
REST&SYSNDX LTR   2,2   ANY MORE FOR ANY MORE /Q
            BZ    END&SYSNDX
         LR    3,2
         SLL   2,5      PUT INTO LEFT HALFBYTE
         OR    2,3      GET OTHER LENGTH
         EX    2,UNPK&SYSNDX   TRANSLATE
         SRL   2,4       SHIFT BACK FOR TR
         BCTR  2,0  ONE OFF FOR EX
         EX    2,TRAN&SYSNDX  TRANSLATE AGAIN
         EX    2,MVC&SYSNDX  SHIFT INTO OUTPUT
END&SYSNDX LEXIT
AC7&SYSNDX DC    A(7)
UNPK&SYSNDX UNPK  0(1,9),0(1,6)
TRAN&SYSNDX TR    0(1,9),TRTB&SYSNDX-240
         DS    CL240
TRTB&SYSNDX DC    C'0123456789ABCDEF'
MVC&SYSNDX  MVC   0(1,7),0(9)
         POP   USING
&SYSECT CSECT
.P1      ANOP
         MEND
** ADD NAME=XMSG
** NUMBER NEW1=10,INCR=10
         MACRO
&NAME    XMSG  &MSGAD,&MSGRA=,&MF=X,&WTO=ANY,&REPLY=0,&MCSFLAG=0
         LCLA  &LCLA1,&LCLA2,&LCLA3,&LCLA4,&LCLA5
         LCLC  &KCL,&LCLC1
&LCLA1   SETA  2
&LCLA2   SETA  0
&KCL     SETC  'L'''
         AIF   ('&MF(1)' NE 'X').A10
&NAME    LOAD  EP=SYSTXMSG
         LR    15,0     GET ENTRY POINT OF MESSAGE ROUTINE
         CNOP  0,4
&LCLA4   SETA  N'&SYSLIST*4
         BAL   1,*+&LCLA4+12
         AGO   .A12
.A10     AIF   ('&MF(1)' NE 'L').A11
&NAME    DS    0F
         AGO   .A12
.A11     ANOP
&NAME    LOAD  EP=SYSTXMSG
         LR    15,0     GET ENTRY POINT OF MESSAGE ROUTINE
         AIF   ('&MF(2)'(1,1) NE '(').A11A
         LA    1,0&MF(2)
         AGO   .A12
.A11A    LA    1,&MF(2)       POINT TO PARAMETER
.A12     AIF   ('&REPLY' EQ '0').P00
&LCLA3   SETA  &LCLA3+4     SET INDICATOR FOR WTOR OR TPUT/TGET
         AGO   .P01          GET ADDRESS OF REPLY AREA
.P00     AIF   (T'&MSGRA  EQ 'O').P01
&LCLA3   SETA  &LCLA3+1     SET INDICATOR TO RETURN MESSAGE
.P01     AIF   ('&WTO' EQ 'NONE').P20
         AIF   ('&WTO' NE 'ALL').P10     CHECK FOR TO TYPE
&LCLA3   SETA  &LCLA3+2+8        SET INDICATOR FOR WTO, TPUT AND WTL
         AGO   .P20
.P10     AIF   ('&WTO' NE 'TSO').P11     CHECK FOR TPUT TYPE
&LCLA3   SETA  &LCLA3+8     SET INDICATOR FOR TPUT ONLY
         AGO   .P20
.P11     AIF   ('&WTO' NE 'CONS').P12     CHECK FOR WTO TYPE
&LCLA3   SETA  &LCLA3+2     SET INDICATOR FOR WTO ONLY
         AGO   .P20
.P12     AIF   ('&WTO' NE 'LOG').P13     CHECK FOR WTL TYPE
&LCLA3   SETA  &LCLA3+16     SET INDICATOR FOR WTL ONLY
         AGO   .P20
.P13     AIF   ('&WTO' NE 'ANY').P20     CHECK FOR WTL TYPE
&LCLA3   SETA  &LCLA3+32     SET INDICATOR FOR ANY TARGET
.P20     AIF   ('&REPLY' EQ '0').P21
         AIF   (T'&REPLY(2) EQ 'O').P21A
         RDOP  &REPLY(2),TYPE=FLAG,MF=&MF  SPECIFIED LENGTH OF REPLY
         AGO   .P21B
.P21A    RDOP  &REPLY(1),TYPE=LEN,MF=&MF  LENGTH OF REPLY AREA
.P21B    RDOP  &REPLY(1),MF=&MF  REPLY ADDRESS OF WTOR/TPUT/TGET
         AGO   .P22
.P21     AIF   (T'&MSGRA(2) EQ 'O').C1
         RDOP  &MSGRA(2),TYPE=FLAG,MF=&MF
         AGO   .C2
.C1      RDOP  &MSGRA(1),TYPE=LEN,MF=&MF  LENGTH OF MSG RETURN AREA
.C2      RDOP  &MSGRA,MF=&MF  ADDRESS WHERE MSG IS TO BE RETURNED
.P22     AIF   (T'&MSGAD(2) EQ 'O').D1
         RDOP  &MSGAD(2),TYPE=FLAG,MF=&MF
         AGO   .D2
.D1      RDOP  &MSGAD(1),TYPE=LEN,MF=&MF
.D2      RDOP  &MSGAD,MF=&MF  ADDRESS OF MESSAGE TO BE PROCESSED
         AIF   (N'&SYSLIST GT 1).B1
&LCLA2   SETA  1                        VL BIT
.B1      RDOP  &LCLA3,TYPE=FLAG,VL=&LCLA2,MF=&MF   ACTION INDICATOR
         RDOP  &MCSFLAG,MF=&MF
&LCLA5   SETA  N'&SYSLIST-1
.B2      AIF   (&LCLA5 LT 1).P9    END OF LOOP IF NO MORE PARMS
         AIF   (&LCLA5 NE 1).B3    CHECK IF LAST PARM
&LCLA2   SETA  1                   IF SO SET VL BIT
.B3      AIF   (T'&SYSLIST(&LCLA1) EQ 'O').P24 IF OMITTED SET TO 0
.P23     AIF   (N'&SYSLIST(&LCLA1) EQ 1).P2     IMPLICIT LENGTH
         RDOP  &SYSLIST(&LCLA1,2),TYPE=FLAG,MF=&MF,VL=&LCLA2
         AGO   .P3     NOW GET THE ADDRESS OF THE FIELD
.P2      RDOP  &SYSLIST(&LCLA1,1),TYPE=LEN,MF=&MF,VL=&LCLA2
.P3      RDOP  &SYSLIST(&LCLA1,1),MF=&MF   ADDRESS OF THE FIELD
&LCLA1   SETA  &LCLA1+1
&LCLA5   SETA  &LCLA5-1
         AGO   .B2
.P24     RDOP  0,VL=&LCLA2,MF=&MF  PARM OMITTED SET TO 0
&LCLA1   SETA  &LCLA1+1
&LCLA5   SETA  &LCLA5-1
         AGO   .B2
.P9      OPREGS MF=&MF
         AIF   ('&MF(1)' EQ 'L').P99
         BALR  14,15     CALL MESSAGE ROUTINE
.P99     ANOP
         MEND
