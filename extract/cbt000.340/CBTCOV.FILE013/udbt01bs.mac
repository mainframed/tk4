         PRINT NOGEN
DEF1     START 0
         REGS
         SAVE  (14,12),,*
         LR    R12,R15             SET BASE REGISTER
         USING DEF1,R12
         LA    R10,2048(R12)
         LA    R10,2048(R10)
         USING DEF1+4096,R10
         LR    R11,R13             STANDARD
         LA    R13,SAVE1             O.S.
         ST    R11,4(R13)          SAVE AREA
         ST    R13,8(R11)          CHAINING
*
         L     R4,16               TEST FOR
         L     R4,0(R4)            FOREGROUND JOB;
         L     R4,0(R4)            IF INVOKED
         L     R4,164(R4)          IN FOREGROUND
         L     R4,24(R4)           DO NOT PROCEED
         L     R4,0(R4)
         TM    29(R4),X'01'
         BO    GOBACK
*
         MVC   JMRJOB,0(R4)        MOVE FIELDS FROM
         MVC   JMRENTRY,8(R4)      CEPA TO SMF-RECORD
         MVC   JMREDATE,12(R4)
         MVC   JMRCPUID,16(R4)
         MVC   JMRUSEID,20(R4)
*
         L     R11,0(0,R1)         LOAD ADDR OF EXPDT FROM EXEC
         MVC   HWORD,0(R11)        PICK UP LENGTH OF PARM FIELD
         CLC   HWORD,=H'1'
         BL    OPENCRD
         LH    R9,0(R11)
         LA    R11,2(R11)
         LA    R9,0(R9,R11)
TESTPARM CLC   =C'EXPDT=',0(R11)
         BNE   TESTIND
         MVC   GEXPDT,6(R11)
         OI    SW2,X'80'
         LA    R11,12(R11)
         CR    R11,R9
         BH    OPENCRD
TESTIND  CLC   =C'DSIND=X',0(R11)
         BNE   ERROR4
         TRT   7(2,R11),TRANSTAB
         BC    7,ERROR4
         TR    7(2,R11),TRTAB
         PACK  FW,7(2,R11)
         L     R6,FW
         SRL   R6,4
         STC   R6,GDSIND
         OI    SW2,X'40'
         CLI   9(R11),C'A'
         BE    TYPEOK
         CLI   9(R11),C'N'
         BE    TYPEOK
         CLI   9(R11),C'X'
         BE    TYPEOK
         CLI   9(R11),C'O'
         BNE   ERROR4
TYPEOK   MVC   GDSIND+1(1),9(R11)
         LA    R11,11(R11)
         CR    R11,R9
         BL    TESTPARM
OPENCRD  OPEN  (CTLCRD)            OPEN INPUT AND
         OPEN  (SYSPNT,OUTPUT)     OUTPUT FILE
***      OPEN  (SNAPDCB,OUTPUT)
         PUT   SYSPNT,CLINE        PRINT HEADING
         MVI   ASA,C'-'            AND SKIP
         MVC   MLINE+1(131),MLINE  THREE LINES
         PUT   SYSPNT,CLINE        AFTERWARD
         MVI   ASA,C' '            ASA CONTROL TO SKIP ONE LINE
CHKCRDS  EQU   *
         XC    SW1,SW1       RESET
         XC    SW3,SW3       SWITCHES
GETCARD  GET   CTLCRD,CARD   READ CONTROL CARD
         LA    R3,CARD       POINT REG.3 TO 1ST. COLUMN OF CARD
CHECK1   CLC   0(1,R3),=C' ' IS COLUMN BLANK ?
         BNE   CHECK2        IF NOT BLANK CHECK KEYWORD
         LA    R3,1(R3)      POINT TO NEXT COLUMN
         B     CHECK1        BACK TO CHECK1
CHECK2   MVC   MLINE(80),CARD
         PUT   SYSPNT,CLINE  PRINT CONTROL CARD
         MVC   MLINE,ASA     AND BLANK OUT MLINE
CARDSW   NOP   CONTACT       LOOK FOR "DSCB1" ONLY ON FIRST CARDS
         CLC   0(5,R3),=C'DSCB1' IS 1ST. KEYWORD = 'DSCB1' ?
         BNE   ERROR9        INVALID 1ST. KEYWORD, ERROR
         LA    R3,5(R3)      POINT TO NEXT COLUMN AFTER DSCB1
CHECK3   CLC   0(1,R3),=C' ' IS COLUMN BLANK ?
         BNE   CONTACT       IF NOT BLANK START SCAN FOR NEXT KEYWORD
         LA    R3,1(R3)      POINT REG.3 TO NEXT COLUMN
         B     CHECK3        BACK TO CHECK3
CONTACT  LR    R4,R3         POINT REG.4 TO START OF KEYWORD
         LA    R3,1(R3)      SCAN FOR
         CLC   0(1,R3),=C' '  BLANK
         BE    LAST            OR
         CLC   0(1,R3),=C','  COMMA
         BNE   CONTACT+2     MOVE ON TO NEXT COLUMN
*******************CHECK KEYWORD
         CLI   0(R4),C','    DOES REG.4 POINT TO COMMA?
         BNE   TEST1         NO
         LA    R4,1(R4)      YES, POINT BEHIND IT
TEST1    EQU   *
         CLC   0(6,R4),=C'EXPDT='
         BNE   NEXT1
         MVC   NEXPDT,6(R4)  PICK UP NEW EXPIRY DATE
         OI    SW3,X'40'     INDICATE EXPIRY DATE PICKED UP
         B     CONTACT
NEXT1    EQU   *
         CLC   0(4,R4),=C'DSN='
         BNE   NEXT2
         LR    R5,R3
         LA    R4,4(R4)      INCREMENT REG.4 TO ADDRESS OF DSNAME
         SR    R5,R4         PUT LENGTH FOR EX INSTRUCTION IN REG.5
         BCTR  R5,0          REDUCE LENGTH BY 1 FOR EX INSTRUCTION
         MVC   DSNAME,BLANKS  BLANK OUT DSNAME FIELD
         EX    R5,MVDSN
         OI    SW1,X'80'     INDICATE DSNAME PICKED OP
         B     CONTACT
NEXT2    EQU   *
         CLC   0(7,R4),=C'NEWDSN='
         BNE   NEXT3
         LR    R5,R3
         LA    R4,7(R4)      INCREMENT REG.4 TO ADDRESS OF NEWNAME
         SR    R5,R4         PUT LENGTH FOR EX INSTRUCTION IN REG.5
         BCTR  R5,0          REDUCE LENGTH BY 1 FOR EX INSTRUCTION
         MVC   NDSN,BLANKS    BLANK OUT DSNAME FIELD
         EX    R5,MVNDSN
         LA    R2,NDSN
         LA    R2,0(R5,R2)
         MVC   RS(1),0(R2)
         CLI   0(R2),X'4F'
         BNE   OI
         MVI   0(R2),X'40'
OI       OI    SW3,X'80'     INDICATE DSNAME PICKED OP
         B     CONTACT
NEXT3    EQU   *
         CLC   =C'DSIND=X',0(R4)
         BNE   NEXT4
         TRT   7(2,R4),TRANSTAB
         BC    7,ERROR4
         TR    7(2,R4),TRTAB
         PACK  FW,7(2,R4)
         L     R6,FW
         SRL   R6,4
         STC   R6,NDSIND
         OI    SW1,X'40'
         CLI   9(R4),C'A'
         BE    TYPEOK1
         CLI   9(R4),C'N'
         BE    TYPEOK1
         CLI   9(R4),C'X'
         BE    TYPEOK1
         CLI   9(R4),C'O'
         BNE   ERROR4
TYPEOK1  MVC   NDSIND+1(1),9(R4)
         B     CONTACT
NEXT4    EQU   *
         CLC   0(4,R4),=C'VOL='
         BNE   NEXT5
         LR    R5,R3
         LA    R4,4(R4)      INCREMENT REG.4 TO ADDRESS OF VOLUME
         SR    R5,R4         PUT LENGTH FOR EX INSTRUCTION IN REG.5
         BCTR  R5,0          REDUCE LENGTH BY 1 FOR EX INSTRUCTION
         MVC   VOLSER(6),BLANKS BLANK OUT VOLSER FIELD
         EX    R5,MVVOL
         OI    SW3,X'20'     INDICATE VOLUME PICKED UP
         B     CONTACT
NEXT5    EQU   *
         CLC   0(6,R4),=C'DSORG='
         BNE   NEXT6
         LR    R5,R3
         LA    R4,6(R4)      INCREMENT REG.4 TO ADDRESS OF DSORG
         SR    R5,R4         PUT LENGTH FOR EX INSTRUCTION IN REG.5
         BCTR  R5,0          REDUCE LENGTH BY 1 FOR EX INSTRUCTION
         MVC   NDSORG,BLANKS BLANK OUT FIELD
         EX    R5,MVDSORG
         OI    SW3,X'08'     INDICATE DSORG PICKED UP
         CLC   NDSORG(2),=C'X'''
         BNE   NOTHEX
         PACK  FW,NDSORG+2(2)
         L     R6,FW
         SRL   R6,4
         STC   R6,DSORG
         B     CONTACT
NOTHEX   LA    R5,DSORGTAB
         LA    R6,DTABLEN
DLOOP    CLC   NDSORG(2),0(R5)
         BE    FOUND
         LA    R5,3(R5)
         BCT   R6,DLOOP
         MVC   MSG(41),=C'SPECIFIED DSORG NOT IN TABLE, NOT CHANGED'
         NI    SW3,X'F7'      ZERO DSORG BIT
         PUT   SYSPNT,CLINE
         MVC   MSG,ASA
FOUND    MVC   DSORG(1),2(R5)
         B     CONTACT
NEXT6    EQU   *
         CLC   0(6,R4),=C'RECFM='
         BNE   NEXT7
         LR    R5,R3
         LA    R4,6(R4)      INCREMENT REG.4 TO ADDRESS OF RECFM
         SR    R5,R4         PUT LENGTH FOR EX INSTRUCTION IN REG.5
         BCTR  R5,0          REDUCE LENGTH BY 1 FOR EX INSTRUCTION
         MVC   NRECFM,BLANKS BLANK OUT FIELD
         EX    R5,MVRECFM
         OI    SW3,X'04'     INDICATE RECFM PICKED UP
         MVI   RECFM,X'00'
         CLI   NRECFM,C'F'
         BNE   CLI1
         OI    RECFM,X'80'
CLI1     CLI   NRECFM,C'V'
         BNE   CLI2
         OI    RECFM,X'40'
CLI2     CLI   NRECFM,C'U'
         BNE   CLI3
         OI    RECFM,X'C0'
CLI3     LA    R7,NRECFM+1
         LA    R8,3
RLOOP    LA    R5,RECFMTAB
         LA    R6,RTABLEN
RLOOP1   CLC   0(1,R7),0(R5)
         BE    EQUAL
         LA    R5,2(R5)
         BCT   R6,RLOOP1
         B     INCR7
EQUAL    OC    RECFM(1),1(R5)
INCR7    LA    R7,1(R7)
         BCT   R8,RLOOP
         B     CONTACT
NEXT7    EQU   *
         CLC   0(6,R4),=C'LRECL='
         BNE   NEXT8
         LR    R5,R3
         LA    R4,6(R4)      INCREMENT REG.4 TO ADDRESS OF LRECL
         SR    R5,R4         PUT LENGTH FOR EX INSTRUCTION IN REG.5
         C     R5,=F'5'      LENGTH GREATER THAN 5?
         BH    ERROR40       YES, ERROR
         BCTR  R5,0          REDUCE LENGTH BY 1 FOR EX INSTRUCTION
         MVC   NLRECL,BLANKS BLANK OUT LRECL FIELD
         EX    R5,MVLRECL    MOVE VALUE
         LA    R5,112(R5)    INSERT FIRST OPERAND LENGTH
         EX    R5,PACK       PACK NUMBER
         CVB   R6,DW         CONVERT IT TO BINARY
         STH   R6,LRECL      AND STORE IT
         OI    SW3,X'02'     INDICATE LRECL PICKED UP
         B     CONTACT
NEXT8    EQU   *
         CLC   0(8,R4),=C'BLKSIZE='
         BNE   ERROR9
         LR    R5,R3
         LA    R4,8(R4)      INCREMENT REG.4 TO ADDRESS OF BLKSIZE
         SR    R5,R4         PUT LENGTH FOR EX INSTRUCTION IN REG.5
         C     R5,=F'5'      LENGTH GREATER THAN 5?
         BH    ERROR40       YES, ERROR
         BCTR  R5,0          REDUCE LENGTH BY 1 FOR EX INSTRUCTION
         MVC   NBLKSIZE,BLANKS BLANK OUT BLKSIZE FIELD
         EX    R5,MVBLKSZ    MOVE VALUE
         LA    R5,112(R5)    INSERT FIRST OPERAND LENGTH
         EX    R5,PACK       PACK NUMBER
         CVB   R6,DW         CONVERT IT TO BINARY
         STH   R6,BLKSIZE    AND STORE IT
         OI    SW3,X'01'     INDICATE BLKSIZE PICKED UP
         B     CONTACT
LAST     EQU   *
         CLC   0(2,R4),=C', '
         BE    LAST1
         CLC   0(2,R4),=C',*'
         BE    LAST1
         TM    SW3,X'10'           LAST KEYWORD ALREADY CHECKED?
         BO    LAST2               YES
         OI    SW3,X'10'           NO; PREVENT FROM CHECKING BLANKS
         CLI   0(R4),C','          DOES REG.4 POINT TO COMMA?
         BNE   TEST1               NO, DO NOT INCREMENT REG. 4
         LA    R4,1(R4)            POINT BEHIND COMMA
         B     TEST1
LAST1    EQU   *
         CLI   CARD+71,C' '
         BE    ERROR9
         OI    CARDSW+1,X'F0'      DON'T SEARCH "DSCB1" ON NEXT CARD
         B     GETCARD
LAST2    EQU   *
         NI    CARDSW+1,X'0F'      RESET SWITCH
         TM    SW1,X'80'           HAS DSNAME BEEN RECEIVED ?
         BNO   ERRORA              IF NOT PRINT ERROR MESSAGE
         TM    SW1,X'40'           HAS DSIND BEEN RECEIVED?
         BO    GETEXPDT            YES
         TM    SW2,X'40'           DSIND IN PARMFIELD?
         BZ    GETEXPDT            NO
         MVC   NDSIND(2),GDSIND    YES, GET IT
         OI    SW1,X'40'           INDICATE DSIND MUST BE CHANGED
GETEXPDT TM    SW3,X'40'           HAS EXPDT BEEN RECEIVED?
         BO    CHKEXPDT            YES
         TM    SW2,X'80'           EXPDT IN PARMFIELD?
         BZ    GETVOL              NO
         MVC   NEXPDT,GEXPDT       YES, GET IT
         OI    SW3,X'40'           INDICATE EXPDT MUST BE CHANGED
CHKEXPDT TRT   NEXPDT,NUMERIC      IS IT NUMERIC?
         BC    7,ERROR5            NO
         PACK  DTRACKS+6(2),NEXPDT(2)  PICK UP EXPIRATION YEAR
         CVB   R6,DTRACKS           CONVERT TO BINARY
         STC   R6,EXPDT            STORE YEAR
         PACK  DTRACKS+6(2),NEXPDT+2(3) PICK UP EXPIRATION DAY
         CVB   R6,DTRACKS          CONVERT TO BINARY
         STH   R6,EXPDT+1
GETVOL   EQU   *
         TM    SW3,X'20'           VOLUME SPECIFIED?
         BO    VOLOK               YES
         LOCATE LOCLIST            OTHERWISE TRY TO GET IT
         LTR   R15,R15             OK?
         BNZ   LOCERR              NO
VOLOK    EQU   *
         CLI   RS,X'4F'
         BE    DOIT
         OBTAIN FMT1DSCB
         LTR   R15,R15             NEWDSN ALREADY THERE?
         BNZ   DOIT                NO, RENAME POSSIBLE
         PUT   SYSPNT,=CL133' *** NEWDSN ALREADY IN VTOC OF THIS VOLUME*
               , RENAME FUNCTION TERMINATED'
         NI    SW3,X'7F'           RESET RENAME-BIT
DOIT     CLC   VOLUME,VOLSER       SAME VOLUME AS BEFORE?
         BE    USEAGAIN            YES, REUSE ACTUAL VTOC
         MVC   VOLUME,VOLSER       SAVE NEW VOLUME
SWITCH   B     DYNALLOC            B ONLY FOR THE FIRST TIME
         CLOSE VTOC                CLOSE OLD VOLUME VTOC
DYNALLOC LA    R1,REQBPTR          DYNAMIC ALLOCATION
         SVC   99                  OF NEW VTOC
         LH    R15,ERR             LOAD ERROR CODE FIELD
         LTR   R15,R15             DYNALLOC SUCCESSFUL?
         BNZ   FEHLDYNA            NO
         RDJFCB VTOC               READ JFCB AND MODIFY DSNAME
         MVC   JFCB(44),Z4         TO X'04040404....'
         OPEN  (VTOC,INOUT),TYPE=J OPEN VTOC OF NEW VOLUME
         NI    SWITCH+1,X'0F'      CHANGE BRANCH TO NOP
USEAGAIN TM    VTOC+48,X'10'       TEST FOR SUCCESSFUL VTOC OPEN
         BC    12,ERROR7           ERROR IF OPEN UNSUCCESSFUL
         XC    WORD,WORD
         MVC   WORD+1(3),VTOC+45   PICK UP DEB ADDR
         L     R6,WORD
         L     R7,32(R6)           PICK UP UCB ADDRESS
         ST    R7,UCBADDR          AND STORE IT FOR RESERVE-MACRO
         SH    R6,=H'15'
         MVC   MBBCCHHR+1(7),0(R6) PICK UP VTOC ADDR
         SH    R6,=H'1'
         XDAP  ECBLAB,RI,VTOC,DSCB,140,,MBBCCHHR     READ F4-DSCB
         WAIT  ,ECB=ECBLAB
         TM    ECBLAB,X'7F'        TEST SUCCESSFUL READ
         BC    12,ERROR8
READOK   MVC   DS4DEVSZ,DSCB+64    PICK UP TRKS/CYL FOR VOLUME
         MVC   DS4DEVDT,DSCB+74    PICK UP DSCBS/TRK FOR VTOC
         MVC   DS4HPCHR,DSCB+45    PICK UP ADDR OF LAST ACTIVE F1 DSCB
         B     REALREAD
INCRMNT  LH    R6,HH         INCREMENT TRK ADDR
         LA    R6,1(0,R6)    IF TRK ADDR GT TRKS/CYL...
         STH   R6,HH
         CLC   HH,DS4DEVSZ
         BC    12,REALRED
         XC    HH,HH         SET TRK ADDR TO ZERO...
         LH    R6,CC         AND...
         LA    R6,1(0,R6)    INCREMENT CYL ADDR...
         STH   R6,CC         BURMA SHAVE.
*
*
REALRED  CLC   MBBCCHH+3(4),DS4HPCHR   IF MBBCCHH GT HIGHEST F1
         BC    2,ERROR3                     DATASET NOT ON VOLUME
REALREAD XDAP  ECBIN,RK,VTOC,DATA,96,(DSNAME,44),MBBCCHH
         WAIT  ECB=ECBIN
         TM    ECBIN,X'7F'         READ COMPLETE
         BC    1,GOODREAD          READ SUCCESSFUL
         TM    ECBIN,X'41'         KEY NOT FOUND ON THIS TRK
         BC    1,INCRMNT
         TM    ECBIN,X'42'         ATTEMPT TO READ BEYOND VTOC EXTENT
         BC    1,ERROR3
         B     ERROR1              SOME OTHER DUMB PROBLEM
GOODREAD EQU   *
         MVI   R,X'00'             INITIALIZE RECORD-COUNT
         SR    R9,R9               ZERO REG
NEXTDSCB IC    R9,R                INCREASE
         LA    R9,1(R9)            RECORD-COUNT
         STC   R9,R                BY ONE
         XDAP  ECBIN1,RI,VTOC,DSCB,140,,MBBCCHHR
         WAIT  ECB=ECBIN1
         TM    ECBIN1,X'7F'        READ COMPLETE
         BC    1,READOK1           READ SUCCESSFUL
         B     ERROR1              SOME OTHER DUMB PROBLEM
READOK1  CLC   DSNAME,DSCB         IS THIS THE RIGHT DSCB
         BE    RESERVE             YES
         CLC   R,DS4DEVDT          ALL DSCB'S ON TRACK READ?
         BNL   ERROR1              YES
         B     NEXTDSCB            NO, TRY NEXT ONE
RESERVE  RESERVE (QNAME,VOLUME,E,6,SYSTEMS),RET=HAVE,UCB=UCBADDR
         XDAP  ECBIN2,RI,VTOC,DSCB,140,,MBBCCHHR
         WAIT  ECB=ECBIN2
         TM    ECBIN2,X'7F'
         BNO   ERROR1
         CLC   DSNAME,DSCB
         BNE   ERROR1
         MVC   OLDDATA,DATA
         TM    SW3,X'80'
         BZ    UP1
         MVC   DSCB(44),NDSN
UP1      TM    SW3,X'08'
         BZ    UP2
         MVC   DSCB+82(1),DSORG
UP2      TM    SW3,X'04'
         BZ    UP3
         MVC   DSCB+84(1),RECFM
UP3      TM    SW3,X'02'
         BZ    UP4
         MVC   DSCB+88(2),LRECL
UP4      TM    SW3,X'01'
         BZ    UP5
         MVC   DSCB+86(2),BLKSIZE
UP5      TM    SW3,X'40'
         BZ    UP6
         MVC   DSCB+56(3),EXPDT    STORE EXPIRATION DATE
UP6      TM    SW1,X'40'
         BZ    UPDATE
         CLI   NDSIND+1,C'O'
         BNE   EXCLOR
         OC    DSCB+93(1),NDSIND
         B     UPDATE
EXCLOR   CLI   NDSIND+1,C'X'
         BNE   AND
         XC    DSCB+93(1),NDSIND
         B     UPDATE
AND      NC    DSCB+93(1),NDSIND
UPDATE   XDAP  ECBLABEL,WI,VTOC,DSCB,140,,MBBCCHHR
         WAIT  ,ECB=ECBLABEL
         DEQ   (QNAME,VOLUME,6,SYSTEMS),UCB=UCBADDR
         TM    ECBLABEL,X'7F'      TEST SUCCESSFUL WRITE
         BC    12,ERROR2           UNSUCCESSFUL WRITE
         TM    SW3,X'6F'
         BNZ   OUTPUT
         B     RENMSG
************************************************************
*
*              KONVERTIERUNG DER DATEN FUER DRUCK UND
*              AUFBEREITUNG DER AUSGABEZEILE
*
OUTPUT   MVC   MSG,TEXT
*
*              ALTE DSORG AUFBEREITEN
*
         CLI   ODSORG,X'80'
         BNE   NOTIS
         MVC   MSG+29(2),=C'IS'
NOTIS    CLI   ODSORG,X'40'
         BNE   NOTPS
         MVC   MSG+29(2),=C'PS'
NOTPS    CLI   ODSORG,X'20'
         BNE   NOTDA
         MVC   MSG+29(2),=C'DA'
NOTDA    CLI   ODSORG,X'10'
         BNE   NOTCX
         MVC   MSG+29(2),=C'CX'
NOTCX    CLI   ODSORG,X'02'
         BNE   NOTPO
         MVC   MSG+29(2),=C'PO'
NOTPO    CLI   ODSORG,X'01'
         BNE   NODSORG
         MVC   MSG+29(2),=C'U '
NODSORG  MVC   SMF137+148(2),MSG+29
         MVC   SMF137+150(2),MSG+29
         CLC   MSG+29(2),=C'  '
         BNE   CVDLRECL
         MVC   MSG+29(5),=C'X''  '''
         TRC   (MSG+31,ODSORG,1)
         MVC   SMF137+148(2),MSG+31
         MVC   SMF137+150(2),MSG+31
*
*              LRECL UND BLKSIZE UMWANDELN
*
CVDLRECL LH    R9,OLRECL
         CVD   R9,DW
         MVC   MSG+53(6),SCHAB6
         ED    MSG+53(6),DW+5
         MVI   MSG+53,C'='
         LH    R9,OBLKSIZE
         CVD   R9,DW
         MVC   MSG+68(6),SCHAB6
         ED    MSG+68(6),DW+5
         MVI   MSG+68,C'='
*
*              EXPIRATION DATE UMWANDELN
*
         SR    R9,R9
         IC    R9,OEXPDT
         M     R8,=F'1000'
         LH    R8,OEXPDT+1
         AR    R9,R8
         CVD   R9,DW
         UNPK  MSG+16(5),DW+5(3)
         OI    MSG+20,X'F0'            VORZEICHEN C --> F
         MVC   SMF137+138(5),MSG+16
*
*              RECFM AUFBEREITEN
*
EDRECFM  SR    R9,R9
         IC    R9,ORECFM
         SRA   R9,5
         LA    R8,RECFMTA1
         IC    R7,0(R9,R8)
         STC   R7,MSG+42               RECFM F,V,U ?
         MVC   MSG+43(4),=C'    '
         CLI   MSG+42,C'*'             RECFM UNBEKANNT ?
         BE    NORECFM                 JA
         LA    R7,MSG+43
         TM    ORECFM,X'20'            TRACK-OVERFLOW-FEATURE ?
         BZ    NOTT                    NEIN
         MVI   0(R7),C'T'
         LA    R7,1(R7)
NOTT     TM    ORECFM,X'10'            GEBLOCKT?
         BZ    NOTB                    NEIN
         MVI   0(R7),C'B'
         LA    R7,1(R7)
NOTB     TM    ORECFM,X'08'            SPANNED ?
         BZ    NOTS                    NEIN
         MVI   0(R7),C'S'
         LA    R7,1(R7)
NOTS     TM    ORECFM,X'04'            ASA CONTROL?
         BZ    NOTA                    NEIN
         MVI   0(R7),C'A'
         LA    R7,1(R7)
NOTA     TM    ORECFM,X'02'            MACHINE CONTROL?
         BZ    CVDDSIND                NEIN
         MVI   0(R7),C'A'
         B     CVDDSIND                NEIN
NORECFM  EQU   *
         TRC   (MSG+42,ORECFM,1)
CVDDSIND EQU   *
         MVC   SMF137+152(5),MSG+42
         TRC   (MSG+84,ODSIND,1)
         TM    SW1,X'40'
         BO    PASTMVC
         MVC   MSG+74(15),BLANKS
PASTMVC  PUT   SYSPNT,CLINE
         MVC   MSG(3),=C'NEW'
         TM    SW3,X'40'
         BZ    EQUAL1
         MVC   MSG+16(5),NEXPDT
EQUAL1   TM    SW3,X'08'
         BZ    EQUAL2
         MVC   MSG+29(5),NDSORG
         MVC   SMF137+150(2),NDSORG
         CLC   SMF137+150(2),=C'X'''
         BNE   EQUAL2
         MVC   SMF137+150(2),NDSORG+2
EQUAL2   TM    SW3,X'04'
         BZ    EQUAL3
         MVC   MSG+42(5),NRECFM
EQUAL3   TM    SW3,X'02'
         BZ    EQUAL4
         MVC   MSG+54(5),NLRECL
EQUAL4   TM    SW3,X'01'
         BZ    EQUAL5
         MVC   MSG+69(5),NBLKSIZE
EQUAL5   EQU   *
         MVC   SMF137+143(5),MSG+16
         MVC   SMF137+157(5),MSG+42
         TRC   (MSG+84,DSCB+93,1)
         TM    SW1,X'40'
         BO    PUT
         MVC   MSG+74(15),BLANKS
*
PUT      PUT   SYSPNT,CLINE
*
RENMSG   MVC   MSG,ASA
         TM    SW3,X'80'           RENAME DONE?
         BZ    SMF                 NO
         MVC   MSG,TEXTREN
         MVC   MSG+19(44),DSCB     PUT RENAME MESSAGE
PUT1     PUT   SYSPNT,CLINE
         MVC   MSG,ASA
*
SMF      TM    SW3,X'6F'
         BZ    CHKCRDS
         MVC   SMF137+44(6),VOLUME
         MVC   SMF137+50(44),DSNAME
         MVC   SMF137+94(44),DSCB
         MVC   SMF137+162(2),OLRECL
         MVC   SMF137+164(2),DSCB+88
         MVC   SMF137+166(2),OBLKSIZE
         MVC   SMF137+168(2),DSCB+86
         MVC   SMF137+170(1),ODSIND
         MVC   SMF137+171(1),DSCB+93
*
         TIME  BIN
         ST    R0,TIME
         ST    R1,DATE
         SMFWTM SMF137
         LTR   R15,R15
         BNZ   SMFERR
***      SNAP  DCB=SNAPDCB,ID=01,STORAGE=(SMF137,SMF137+172)
*
         B     CHKCRDS
*
SMFERR   ST    R15,FW
         TRC   (WTO+28,FW+3,1)
WTO      WTO   'RETURNCODE VON SMFWTM:            ',ROUTCDE=11
*
EOF      CLOSE (CTLCRD)
         CLOSE (VTOC,,SYSPNT)
***      CLOSE SNAPDCB
GOBACK   L     R13,SAVE1+4
         RETURN (14,12),RC=0
*
*
MVDSN    MVC   DSNAME(0),0(R4)
MVNDSN   MVC   NDSN(0),0(R4)
MVVOL    MVC   VOLSER(0),0(R4)
MVDSORG  MVC   NDSORG(0),0(R4)
MVRECFM  MVC   NRECFM(0),0(R4)
MVLRECL  MVC   NLRECL(0),0(R4)
MVBLKSZ  MVC   NBLKSIZE(0),0(R4)
PACK     PACK  DW(0),0(0,R4)
*
*           ERROR MESSAGES
*
LOCERR   MVC   MSG(42),=C'VOLUME COULD NOT BE LOCATED FOR DATASET   '
         MVC   MSG+42(44),DSNAME
         B     PUT1
*
FEHLDYNA MVC   MSG(75),=C'ERROR DURING DYNAMIC ALLOCATION FOR VTOC OF V*
               OLUME XXXXXX, REASON CODE XXXX'
         MVC   MSG+51(6),VOLUME
*        LA    R8,MSG+71           CONVERT
*        LA    R9,ERR              REASON CODE
*        LA    R4,2                TO PRINTABLE
         TRC   (MSG+71,ERR,2)      INTO MSG
         B     PUT1
*
ERROR1   MVC   MSG(42),=C'*** ERROR OCCURED READING THE F1-DSCB     '
         B     PUT1
ERROR2   MVC  MSG(60),=CL60'*** ERROR DURING UPDATE OF F1-DSCB        '
         B     PUT1
ERROR3   MVC   MSG(42),=C'*** DATASET NOT FOUND ON VOLUME XXXXXX    '
         MVC   MSG+32(6),VOLUME
         B     PUT1
ERROR4   MVC   MSG(42),=C'*** INCORRECT PARM-FIELD SPECIFIED        '
         B     GOBACK
ERROR40  MVC   MSG(42),=C'*** INCORRECT PARM-LENGTH                 '
         B     PUT1
ERROR5   MVC   MSG(42),=C'*** EXPDT NOT NUMERIC                     '
         B     PUT1
ERROR6   DEQ   (QNAME,VOLUME,6,SYSTEMS),UCB=UCBADDR
         MVC   MSG(42),=C'*** INCORRECT SECURITY-BYTE               '
         B     GOBACK
ERROR7   MVC   MSG(42),=C'*** OPEN FOR VTOC ON XXXXXX UNSUCCESSFUL  '
         MVC   MSG+21(6),VOLUME
         B     PUT1
ERROR8   MVC   MSG(42),=C'*** ERROR READING F4-DSCB OF VOLUME XXXXXX'
         MVC   MSG+36(6),VOLUME
         B     PUT1
ERROR9   MVC   MSG(42),=C'*** INVALID KEYWORD FOUND IN CONTROL CARD '
         B     PUT1
ERRORA   MVC   MSG(42),=C'*** NOT ALL NEEDED PARAMETERS SPECIFIED   '
         B     PUT1
*
*           DCB-DEFINITIONS
*
CTLCRD   DCB   DSORG=PS,DDNAME=SYSIN,MACRF=GM,EODAD=EOF,EROPT=ABE
SYSPNT   DCB   DSORG=PS,DDNAME=SYSPRINT,MACRF=PM,RECFM=FA,BLKSIZE=133
VTOC     DCB   DDNAME=SYSDISK,MACRF=(E),EXLST=LIST,EODAD=ERROR3
*NAPDCB  DCB   DSORG=PS,MACRF=W,RECFM=VBA,LRECL=125,BLKSIZE=882, *
***            DDNAME=SNAP
*
*           DEFINITIONS FOR LOCATE-MACRO
*
LOCLIST  CAMLST NAME,DSNAME,,WORK
DSNAME   DS    CL44
WORK     DS    CL265
VOLSER   EQU   WORK+6
*
*           DEFINITIONS FOR OBTAIN-MACRO
*
FMT1DSCB CAMLST SEARCH,NDSN,VOLSER,WORKAREA
WORKAREA DS    CL140
*
*           DEFINITIONS FOR SMFWTM-MACRO
*
         CNOP  2,4
SMF137   EQU   *
HDR      DC    AL2(172),3X'00',AL1(137)
TIME     DS    XL4
DATE     DS    XL4
JMRCPUID DS    CL4
JMRJOB   DS    CL8
JMRENTRY DS    XL4
JMREDATE DS    XL4
JMRUSEID DS    CL8
SUBTYPE  DC    C'1',X'00'
         DS    CL128
*
*           DEFINITIONS FOR RDJFCB-MACRO
*
         DS    0F
LIST     DC    X'87'
         DC    AL3(JFCB)
JFCB     DS    CL176
Z4       DC    44X'04'
*
*           DEFINITIONS FOR DYNAMIC ALLOCATION
*
REQLIST  DS    0F
REQBPTR  DC    X'80'
         DC    AL3(REQBLOK)
REQBLOK  DS    0F
RBLENG   DC    AL1(20)
RBVERB   DC    AL1(1)
RBFLAGS1 DC    H'0'
RBERR    DC    H'0'
ERR      EQU   RBERR
RBINFO   DC    H'0'
RBTXTPRT DC    AL4(TEXTS)
         DC    F'0'
RBFLAGS2 DC    F'0'
TEXTS    DC    A(TEXT01)
         DC    A(TEXT02)
         DC    A(TEXT04)
         DC    A(TEXT10)
         DC    X'80',AL3(TEXT1C)
         DS    0H
TEXT01   DC    XL6'000100010008'
         DC    CL8'SYSDISK'            DDNAME
         DS    0H
TEXT02   DC    XL6'00020001000C'
         DC    CL12'FORMAT4.DSCB'      VTOC DSNAME (X'04...' GEHT NICHT
         DS    0H                                      BEI DYN. ALLOC.)
TEXT04   DC    XL6'000400010001'
         DC    X'08'                   DISP=SHR
         DS    0H
TEXT10   DC    XL6'001000010006'
VOLUME   DC    CL6'XXXXXX'             VOLUME SERIAL
         DS    0H
TEXT1C   DC    XL4'001C0000'           FREE=CLOSE
REQLEN   EQU   *-REQLIST
*
*           DEFINITIONS FOR RESERVE/DEQ
*
QNAME    DC    CL8'SYSVTOC'
RNAME    EQU   VOLUME
UCBADDR  DS    F
*
*           DEFINITIONS FOR DSCB-PROCESSING
*
DSCB     DS   0CL140
         DC    44X'04'
DATA     DS    CL96
DTRACKS  DC    D'0'
DS4HPCHR DS    CL4
HWORD    DS    H
DS4DEVSZ DS    H
DS4DEVDT DS    XL1
MBBCCHHR DS    0CL8
MBBCCHH  DS    0CL7
MBB      DC    X'000000'
CC       DS    CL2
HH       DS    CL2
R        DS    CL1
*
*           CONSTANTS FOR CHANGEABLE DSCB-FIELDS
*
NDSN     DS    CL44       NEW VALUES (EBCDIC)
NEXPDT   DS    CL5
NDSORG   DS    CL7
NRECFM   DS    CL5
NBLKSIZE DS    CL5
NLRECL   DS    CL5
NDSIND   DS    X,C
GEXPDT   DS    CL5        NEW VALUES (VALID FOR ALL DATASETS)
GDSIND   DS    X,C
*
EXPDT    DS    XL3        NEW VALUES IN THE FORM REQUIRED IN THE DSCB
DSORG    DS    C
RECFM    DS    C
BLKSIZE  DS    H
LRECL    DS    H
*
OLDDATA  DS    CL96       OLD VALUES
OEXPDT   EQU   OLDDATA+12
ODSORG   EQU   OLDDATA+38
ORECFM   EQU   OLDDATA+40
OBLKSIZE EQU   OLDDATA+42
OLRECL   EQU   OLDDATA+44
ODSIND   EQU   OLDDATA+49
*
*           CONSTANTS FOR INPUT/OUTPUT
*
CARD     DS    CL80
BLANKS   DC    CL44' '
CLINE    DS    0CL133
ASA      DC    C'1'
MLINE    DC    CL132'          VTOC-EDIT-PROGRAM OUTPUT FOR CONTROL CAR*
               DS AND MESSAGES'
         ORG   MLINE+30
MSG      DS    0CL102
         ORG
TEXT     DC    CL102'OLD DATA  EXPDT=YYDDD, DSORG=     , RECFM=     ,LR*
               ECL=     , BLKSIZE=     , DSIND=X''..'''
TEXTREN  DC    CL102'DSNAME CHANGED TO '
SCHAB6   DC    X'402020202120'
DW       DS    D
FW       DS    F
WORD     DS    F
*
*           SAVEAREA AND SWITCHES INDICATING PARMS RECEIVED
*
SAVE1    DS    9D
         DS    0D
SW1      DC    X'00'
SW2      DC    X'00'
SW3      DC    X'00'
RS       DC    X'00'
*
*           TABLES FOR TR/TRT AND CONVERSION
*
DSORGTAB DC    C'PO',X'02'
         DC    C'PS',X'40'
         DC    C'DA',X'20'
         DC    C'IS',X'80'
         DC    C'U ',X'01'
         DC    C'UN',X'00'
DTABLEN  EQU   (*-DSORGTAB)/3
*
RECFMTAB DC    C'T',X'20'
         DC    C'B',X'10'
         DC    C'S',X'08'
         DC    C'A',X'04'
         DC    C'M',X'02'
RTABLEN  EQU   (*-RECFMTAB)/2
*
RECFMTA1 DC    C'**VVFFUU'
*
TRTAB    DS    256X
         ORG   TRTAB+X'C1'
         DC    X'FAFBFCFDFEFF'
         ORG   TRTAB+X'F0'
         DC    10AL1(*-TRTAB)
         ORG
*
TRANSTAB DC    193X'FF',6X'00',41X'FF',10X'00',6X'FF'
*
NUMERIC  DC    240X'FF',10X'00',6X'FF'
         LTORG
         DC    C'GRAMM/E7DR  '
         DC    CL8'&SYSTIME'
         DC    CL8'&SYSDATE'
         END
