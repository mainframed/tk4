:h1.PROGRAMMBESCHREIBUNG:  ZS905
:p.Datenbank-Hilfsprogramm fuer
:hp2.OSAM:ehp2.- und :hp2.VSAM:ehp2.-Datenbanken
sowie :hp2.IMAGE-COPY-DUMP:ehp2.-Dateien
:h2.Zweck:
:p.Mit Hilfe des Programms ZS905 koennen bestimmte
Bereiche (ganze Bloecke bzw. Control Intervalle
oder spezifizierte Teile davon)
angedruckt und/oder geaendert werden.
Als Eingabe dient entweder die eigentliche Datenbank Datei
oder ein Image-Copy-Dump. Entsprechend werden evtl. Aenderungen
direkt in der Datenbank vorgenommen oder in einem neu erstellten
Image-Copy-Dump.
Die Ausgabe erfolgt in Dump-Format.
:h2.Methode:
:p.Fuer Datenbanken wird entsprechend ihrer Zugriffsmethode
BDAM oder VSAM CI-Processing verwendet, fuer Image-Copy-Dumps BSAM.
:h2.EXEC Parameter Liste:
Folgende Parameter koennen in der EXEC Parameter Liste
angegeben werden:
.sp
:hp2.'TERM(YES×NO),ACCESS(OSAM×VSAM),DSTYPE(IC×DB),LINES(n),SIZE(n,m),
:p.WTOR(YES×NO),EJBLK(YES×NO)' :ehp2
.sp
:dl tsize=10.
:dt.TERM
:dd.gibt an, ob vor Ausfuehrung alle Befehle
interpretiert und aufsteigend nach :hp2.R:ehp2.elativer
:hp2.B:ehp2.yte :hp2.A:ehp2.dresse (:hp2.RBA:ehp2.)
sortiert werden sollen :hp2.(YES) :ehp2.oder jeder
Befehl unmittelbar interpretiert und ausgefuehrt
wird :hp2.(NO):ehp2.. Im ersten Fall wird die Ausgabe, falls moeglich,
reduziert (ein Block bzw. CI wird 1 mal angedruckt) und aufsteigend
nach RBA sortiert.
Implizit steuert dieser Parameter ausserdem
das Ausgabe-Format (bei TERM=YES wird
auf Bildschirm Format ausgerichtet !)
:p.Default: NO
:dt.ACCESS
:dd.bestimmt die Zugriffsmethode der Datenbank.
:p.Default: OSAM
:dt.DSTYPE
:dd.gibt an, ob eine Datenbank oder ein Image-Copy-Dump
als Eingabe dient.
:p.Default: DB
:dt.LINES
:dd.Gibt die Zeilenanzahl pro Seite an.
:p.Default: 60
:dt.SIZE
:dd.n gibt die max. Speicherplatzgroesse fuer einen
Befehl an (Blanks zwischen Parametern werden entfernt).
:p.m gibt die Speicherplatzgroesse fuer die interne
Befehlstabelle an. Je Befehl werden 16 Bytes benoetigt, fuer
einen CHANGE-Befehl zusaetzlich 4 Bytes plus die Laengen der
Value-Eintragungen.
:p.Default: 240,512
:dt.WTOR
:dd.bestimmt, ob die Eingabe mit WTOR ueber Konsole
angefordert werden soll (:hp2.YES:ehp2.) oder von der unter SYSIN
spezifizierten Datei gelesen wird (:hp2.NO:ehp2.).
:p.Default: NO
:dt.EJBLK
:dd.gibt an, ob ein Seitenvorschub vor dem Beginn
eines neuen Blockes bzw. CI's erfolgen soll.
:p.Default: YES
:edl
:h2.JOB CONTROL
  //....... JOB (......),........
  // EXEC PGM=ZS905,PARM='exec parameter liste'  s.o.
  //STEPCAT  DD DSN=usercat,DISP=SHR           nur bei Vsam-Datenbanken
  //SYSUT1   DD DSN=...................        Datenbank bzw. Image Copy
  //ICDOUT   DD DSN=...................        geaenderter Image Copy
  //DBD      DD DSN=dbdlib,DISP=SHR
  //USERLIB  DD DSN=rmr-loadlib,DISP=SHR
  //SYSOUT   DD .......................        Listenausgabe
  //SYSIN    DD *
  Befehle (s.u.)
  //
:h2.Befehle
Die Eingabe wird von Stelle 1 bis 72 interpretiert.
Ein Befehl beginnt in einem neuen Eingabesatz an beliebiger Stelle.
Die zugehoerigen Parameter muessen mindestens durch ein Blank getrennt
werden. Sind die Parameter ueber mehrere Saetze verteilt, ist die
Fortsetzung durch '+' oder '-' in dem vorherigen Satz anzuzeigen
(Syntax wie IDCAMS).
:p.Folgender Befehlsvorrat steht zur Verfuegung:
:hp2.:ul.
:li.'DBD    NAME(dbd-name)×RDM(rmr-name,ankp,raa)      '
:li.'POINT  RBA(rba)×BLK(blknr)×CI(cinr)×KEY(key)      '
:li.'PRINT  BLK(b)×RBA(r)×KEY(k)                       '
.br
'       LENGTH(l) OFFSET(o) COUNT(c)          '
:li.'CHANGE BLK(blknr) OFFSET(o)×RBA(rba)              '
.br
'       OLDVALUE(ov) NEWVALUE(nv)             '
:li.'END                                               '
:eul.:ehp2.
:dl tsize=10.
:dt.dbd-name
:dd.NAME der Datenbankbeschreibung (des DBD's)
:dt.rmr-name
:dd.NAME der Randomizing Routine
:dt.ankp
:dd.Anzahl Ankerpunkte je Block
:dt.raa
:dd.Anzahl Root Addressable Area Blocks
:dt.rba
:dd.Relative Byte Adresse
:dt.blknr/cinr
:dd.Block bzw. Control Interval (CI) Nummer
:dt.key
:dd.Root Segment Schluessel
:dt.b
:dd.Block bzw. Control Interval (CI) Angabe(n):
:ul.
:li.BLK( )          ein Block
:li.BLK( , , , )    mehrere Bloecke
:li.BLK(v-b,v-b,..) von Block v bis Block b
:li.BLK(x/a,x/a,..) ab Block x a Bloecke
:eul.
:dt.r
:dd.Relative Byte Adresse(n):
:ul.
:li.RBA( )          Block mit angegebener RBA
:li.RBA( , , , )    Bloecke mit angegebenen RBA's
:li.RBA(v-b,v-b,..) von Block mit RBA v bis Block mit RBA b
:li.RBA(x/a,x/a,..) ab Block mit RBA x a Bloecke
:eul.
:dt.k
:dd.Ein oder mehrere Root Segment Schluessel:
:ul.
:li.KEY( )     Block, den die Randomizing Routine mit diesem
Schluessel adressiert
:li.KEY( , , ) ggf. mehrere Bloecke
:eul.
:dt.l
:dd.Laenge des zu druckenden Bereiches
:ul.
:li.ab Block- bzw. CI-Beginn, wenn OFFSET(0) = Default
:li.ab angegebenem Offset im Block bzw. CI
:li.ab angegebener relativer Byte Adresse
:eul.
:dt.o
:dd.Offset im Block bzw. CI (nicht erlaubt bei PRINT RBA...).
:dt.c
:dd.Anzahl zu druckender Bloecke bzw. CI's (nicht erlaubt bei
PRINT RBA... und PRINT KEY...).
:dt.ov
:dd.Bisheriger Wert
:dt.nv
:dd.Neuer Wert
:edl.
:p.
Bei BLK, LENGTH, RBA, OFFSET, COUNT, OLDVALUE und NEWVALUE wird die
Eingabe als hexadezimaler Ausdruck erwartet,
bei KEY in Character.
Weicht die Eingabe von den Defaultwerten ab, kann der Datentyp explizit
angegeben werden.
         Beispiele:
         dezimaler     Ausdruck:  BLK(D'....')
         hexadezimaler Ausdruck:  KEY(X'....')
         Character     Ausdruck:  OLDVALUE(C'....')
:h2.BESONDERHEITEN:
:ol.
:li.Notwendigkeit einer STEPCAT
:p.Bei Verarbeitung einer Vsam-Datenbank ist eine STEPCAT notwendig.
Die Zuordnung eines Katalogs ueber TSO ist nur in Verbindung mit
einer speziellen LOGON-Prozedur moeglich.
:li.Ausgabe eines IC-Dumps
:p.Soll ein geaenderter Image Copy Dump erstellt werden, ist bei
DISP=(NEW,CATLG) und Angabe von STEPCAT zu beachten, dass die Datei
im Usercatalog katalogisiert wird.
:li.KSDS-Vsamdatei
:p.Bei einer KSDS-Vsamdatei kann durch Angabe des entsprechenden
Datei Namens
sowohl auf den Datenteil als auch auf den Indexteil
Bezug genommen werden.
:br.Cluster-Name        -----> Datenteil
:br.Cluster-Name.DATEN  -----> Datenteil
:br.Cluster-Name.INDEX  -----> Indexteil
:eol.
