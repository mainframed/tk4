PANEXIT  TITLE 'PANVALET LOAD-MODULE-AUDITOR AND WRITE-TO-LOG EXIT'
***********************************************************************
*                                                                     *
* AUTOR:        DR.MEDER                                              *
*               ARAL AG, ABT. CSB                                     *
*               WITTENER STR. 45                                      *
*               4630 BOCHUM                                           *
*               TEL. 0234/3153360                                     *
*                                                                     *
* PROGRAMMFUNKTION:                                                   *
*                                                                     *
*        -  EXIT ZUM PROGRAMM-VERWALTUNGSSYSTEM PANVALET,             *
*           WIRD BEIM HERAUSSCHREIBEN VON ASSEMBLER- UND COBOL-       *
*           PROGRAMMEN ZUR UMWANDLUNG (++WRITE WORK) AKTIV.           *
*                                                                     *
*        -  ARBEITSWEISE BEI COBOL-PROGRAMMEN:                        *
*                                                                     *
*           AM ANFANG DER WORKING-STORAGE SECTION WERDEN ZWEI         *
*           KONSTANTEN EINGEFUEGT:                                    *
*              77 PAN-VALET PIC X(24) VALUE' LV.PANNAME...DATUM...'   *
*              77 NM-UR211300 PIC X(8) VALUE 'UR211300'               *
*           DIE ERSTE KONSTANTE ENTHAELT DABEI DIE AKTUELLEN WERTE    *
*           VON PAN-LEVEL, PAN-NAME UND DATUM DER LETZTEN AENDERUNG.  *
*                                                                     *
*           AM ANFANG DER PROCEDURE-DIVISION WIRD EIN PARAGRAPH       *
*           EINGEFUEGT:                                               *
*              AUDIT-WRITE-TO-LOG.                                    *
*                  ON 1 CALL NM-UR211300 USING PAN-VALET.             *
*                                                                     *
*        -  ARBEITSWEISE BEI ASSEMBLER-PROGRAMMEN:                    *
*                                                                     *
*           ES WIRD GEPRUEFT OB IM PROGRAMM ZWEI VOM PROGRAMMIERER    *
*           EINZUFUEGENDE MACROS CALLWTL UND CALLWTL2 ENTHALTEN SIND. *
*           FALLS NICHT, WIRD EIN ***MNOTE*** MIT RETURNCODE 4        *
*           ERZEUGT. DIE MAKROS BEWIRKEN EBENFALLS DEN DYNAMISCHEN    *
*           AUFRUF DER ROUTINE UR211300 MIT DEN GLEICHEN PARAMETERN   *
*           WIE BEI COBOL (SIEHE BESCHREIBUNG IM MAKRO-SOURCE).       *
*                                                                     *
*         - DIE AUFGERUFENE ROUTINE UR211300 SCHREIBT BEI PROGRAMM-   *
*           AUSFUEHRUNG DIE INFORMATIONEN PAN-LEVEL, PAN-NAME UND     *
*           AENDERUNGSDATUM ZUSAMMEN MIT JOB-, STEP- UND PROCSTEP-    *
*           NAME AUF DAS SYSTEM-LOG.                                  *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
PANEXIT  CSECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE 2
         USING *,R15
         STM   R14,R12,12(R13)
         BAL   R15,80(R15)
SAVE     DC    18A(0)
         CNOP  0,4
         ST    R13,4(R15)
         ST    R15,8(R13)
         DROP  R15
         LR    R13,R15
         USING SAVE,R13
*
*   THIS EXIT USES REGISTER 13 AS A BASE AND FOLLOWS
*   STANDARD OS LINKAGE CONVENTIONS.  THE ABOVE CODE
*   SHOULD NOT BE CHANGED.
*
**********************************************************************
*
*   THIS SECTION SETS UP DSECTS FOR
*   IOAREA, CODES, AND DIRENTRY
*
**********************************************************************
         SPACE 2
         L     R4,0(R1)            ADDRESS OF IOAREA
         USING IOAREA,R4
         SPACE 1
         L     R5,4(R1)            ADDRESS OF CODES
         USING CODES,R5
         SPACE 1
         L     R6,8(R1)            ADDRESS OF DIRECTORY ENTRY
         USING DIRENTRY,R6
         EJECT
**********************************************************************
*
*   BEGIN PROCESSING
*
**********************************************************************
         SPACE 2
         CLI   PROGRAM,C'1'        IS IT PAN#1 ?
         BNE   EXIT
         SPACE 1
         CLI   IOCODE,C'2'         AFTER A READ?
         BE    CHECKWRT
         SPACE 1
         CLI   IOCODE,C'8'         IS IT EOJ?
         BE    EXIT
         SPACE 1
         CLI   IOCODE,C'5'         WORK RECORD?
         BE    WORK5
         SPACE 1
         CLI   IOCODE,C'6'         USER REQUESTED RETURN?
         BE    WORK6
*
*   ON ALL OTHER CASES, RETURN TO PANVALET
*
EXIT     L     R13,4(R13)
         LM    R14,R12,12(R13)
         BR    R14                 RETURN TO PAN#1
         SPACE 8
**********************************************************************
*
*   CHECK TO SEE IF WE ARE GOING TO PROCESS A 'WRITE' COMMAND
*
**********************************************************************
         SPACE 2
CHECKWRT EQU   *
         CLC   CARDAREA(2),=C'++'  PANVALET-COMMAND?
         BE    CHECKWR1
         CLC   CARDAREA(2),=C'--'  PANVALET-COMMAND?
         BNE   EXIT
         SPACE 1
CHECKWR1 EQU   *
         CLC   2(5,R4),=C'WRITE'   IS IT A WRITE COMMAND?
         BNE   EXIT
         SPACE 1
         XC    SWITCHES(SWITCHND-SWITCHES),SWITCHES  CLEAR SWITCHES
         B     EXIT
         EJECT
**********************************************************************
*
*   PROCESS A WORK RECORD, IOCODE=5
*
**********************************************************************
         SPACE 2
WORK5    EQU   *
         CLI   FIRSTSW,X'00'       FIRST WORK PASS?
         BNE   TESTTYP
         SPACE 1
         MVI   FIRSTSW,X'01'
         SPACE 1
********
*   DETERMINE LANGUAGE TYPE ON FIRST WORK PASS
********
         CLC   DTYPE,=C'ASMB '     IS IT A BAL COMMENT?
         BNE   NOTBAL
         SPACE 1
         BAL   R9,CHKDS            IS IT A PANVALET COMMENT?
         MVI   QBAL,X'01'          SET BAL SWITCH
         B     EXTRACT             EXTRACT COMMENT DATA
         SPACE 1
NOTBAL   EQU   *
         CLC   DTYPE,=C'FORT '     IS IT FORTRAN?
         BNE   NOTFORT
         SPACE 1
         BAL   R9,CHKDS            IS IT A PANVALET COMMENT?
         MVI   QFORT,X'01'         SET FORTRAN SWITCH
         B     EXTRACT             EXTRACT COMMENT DATA
         SPACE 1
NOTFORT  EQU   *
         CLC   DTYPE,=C'PL/1 '     IS IT PL/I?
         BNE   NOTPLI
         SPACE 1
         BAL   R9,CHKDS            IS IT A PANVALET COMMENT?
         MVI   QPLI,X'01'
         SPACE 1
EXTRACT  EQU   *
         BAL   R9,PICKET           EXTRACT COMMENT DATA
         B     EXIT
         SPACE 1
NOTPLI   EQU   *
         CLC   DTYPE,=C'COBOL'     IS IT COBOL?
         BE    COBL
         CLC   DTYPE,=C'ANSCB'     IS IT ANSCOBOL?
         BNE   TSTOTHRS
         SPACE 1
COBL     EQU   *
         CLI   74(R4),C'/'         IS IT PANVALET FORMAT?
         BNE   EXIT
         MVI   QCOBOL,X'01'        SET COBOL SWITCH
         B     EXTRACT
         EJECT
********
*   OTHER FORMATS CAN BE IDENTIFIED BY INSPECTING THE
*   DTYPE AND DFORM FIELDS IN DSECT DIRENTRY
********
TSTOTHRS EQU   *
         B     EXIT
         SPACE 8
********
*   TEST IF WE HAVE A PANVALET COMMENT
********
         SPACE 2
CHKDS    EQU   *
         CLC   11(8,R4),=C'DATA SET'
         BCR   8,R9       RETURN ONLY IF A VALID COMMENT
         B     EXIT
         SPACE 8
********
*   EXTRACT COMMENT INFORMATION
********
         SPACE 2
PICKET   EQU   *
         MVC   NAME,DNAME          GET NAME
         MVC   LEVEL,DLEVEL        GET LEVEL
         MVC   DATE,DDATEM         GET DATE
         BR    R9
         EJECT
********
*   IF PAST THE FIRST WORK RECORD, PROCESS ACCORDING TO TYPE
********
         SPACE 2
TESTTYP  EQU   *
         CLI   QBAL,X'01'          ASSEMBLER SWITCH ON?
         BE    BAL
         CLI   QFORT,X'01'         FORTRAN SWITCH ON?
         BE    FORT
         CLI   QPLI,X'01'          PLI SWITCH ON?
         BE    PLI
         CLI   QCOBOL,X'01'        COBOL SWITCH ON?
         BE    COBOL
         SPACE 2
FORT     EQU   *
PLI      EQU   *
         SPACE 1
********
*   OTHER LANGUAGE TYPE PROCESSING FALLS THRU HERE
********
         SPACE 1
         B     EXIT
         EJECT
********
*   PROCESS ASSEMBLER LANGUAGE TYPE
********
         SPACE 2
BAL      EQU   *
         CLI   CARDAREA,C'*'       ASSEMBLER COMMENT?
         BE    EXIT
         SPACE 2
         LA    R7,68               LOAD BCT-REGISTER
         LA    R8,CARDAREA         ADRESS OF CARDAREA
         SPACE 1
BAL05    EQU   *
         CLI   0(R8),C' '          LOOK FOR FIRST BLANK
         BE    BAL10
         LA    R8,1(R8)
         BCT   R7,BAL05
         B     EXIT
         SPACE 1
BAL10    EQU   *
         LA    R8,1(R8)
         BCTR  R7,R0
         LTR   R7,R7
         BZ    EXIT
         SPACE 1
BAL15    EQU   *
         CLI   0(R8),C' '          LOOK FOR FIRST NON-BLANK
         BNE   BAL20
         LA    R8,1(R8)
         BCT   R7,BAL15
         B     EXIT
         EJECT
BAL20    EQU   *
         CLC   0(4,R8),=C'END '    END STATEMENT?
         BNE   BAL25
         SPACE 1
         PACK  RF,CARDAREA+72(L'SEQ)   PACK SEQUENCE NUMBER
         SP    RF,=P'1'            SUBTRACT 1
         UNPK  SEQ,RF              UNPACK SEQUENCE NUMBER
         OI    SEQ+L'SEQ-1,X'F0'   SET SIGN TO 'F'
         SPACE 1
         MVC   SAVECARD,CARDAREA   SAVE CARD
         MVC   CARDAREA,BALMNOTE   MOVE MNOTE TO CARDAREA
         MVI   RETURN,C'Y'         WE WANT RETURN AFTER REC IS WRITTEN
         B     EXIT
         SPACE 2
BAL25    EQU   *
         CLC   0(9,R8),=C'CALLWTL2 '   CALLWTL2 MACRO STATEMENT?
         BNE   EXIT
         SPACE 1
         MVC   9(L'DIRINFO1,R8),DIRINFO1   MOVE DIRECTORY INFORMATION
         MVI   QBAL,X'00'          TURN OFF ASSEMBLER SWITCH
         B     EXIT
         EJECT
********
*   PROCESS COBOL LANGUAGE TYPE
********
         SPACE 1
COBOL    EQU   *
         CLI   QCOBOL1,X'02'       LOOKING FOR PERIOD AFTER P. D.?
         BE    COBOL50
         SPACE 2
         CLI   QCOBOL1,X'03'       LOOKING FOR 'DECLARATIVES'OR 'END' ?
         BNL   COBOL70
         SPACE 2
         CLI   CARDAREA+6,C' '     COLUMN 7 BLANK?
         BNE   EXIT
         SPACE 2
         LA    R7,4                LOAD BCT-REGISTER
         LA    R8,CARDAREA+7       ADRESS OF COLUMN 8
COBOL05  EQU   *
         CLI   0(R8),C' '          LOOK FOR FIRST NON-BLANK
         BNE   COBOL10
         LA    R8,1(R8)
         BCT   R7,COBOL05
         B     EXIT
         SPACE 2
********
*   LOOK FOR WORKING-STORAGE SECTION
********
         SPACE 1
COBOL10  EQU   *
         CLI   0(R8),C'W'          IS IT 'W'?
         BNE   COBOL30
         SPACE 1
         CLC   0(16,R8),=C'WORKING-STORAGE '
         BNE   EXIT
         SPACE 1
         LA    R8,16(R8)
         LA    R7,20
COBOL15  EQU   *
         CLI   0(R8),C' '          LOOK FOR FIRST NON-BLANK AFTER W.-S.
         BNE   COBOL20
         LA    R8,1(R8)
         BCT   R7,COBOL15
         B     EXIT
         SPACE 1
COBOL20  EQU   *
         CLC   0(7,R8),=C'SECTION'
         BNE   EXIT
         MVI   QCOBOL1,X'01'       WORKING-STORAGE SECTION FOUND
         MVI   RETURN,C'Y'   WANT RETURN SO WE CAN INSERT AFTER THIS
         B     EXIT
         EJECT
********
*   LOOK FOR PROCEDURE DIVISION
********
         SPACE 1
COBOL30  EQU   *
         CLI   0(R8),C'P'          IS IT 'P'?
         BNE   EXIT
         SPACE 1
         CLC   0(10,R8),=C'PROCEDURE '
         BNE   EXIT
         SPACE 1
         LA    R8,10(R8)
         LA    R7,20
COBOL35  EQU   *
         CLI   0(R8),C' '          LOOK FOR FIRST NON-BLANK AFTER P.
         BNE   COBOL40
         LA    R8,1(R8)
         BCT   R7,COBOL35
         B     EXIT
         SPACE 1
COBOL40  EQU   *
         CLC   0(8,R8),=C'DIVISION'
         BNE   EXIT
         LA    R10,CARDAREA+71
         LA    R8,8(R8)
         B     COBOL55
         SPACE 1
********
*   LOOK FOR FIRST PERIOD AFTER PROCEDURE DIVISION
********
         SPACE 1
COBOL50  EQU   *
         CLI   CARDAREA+6,C'*'      COMMENT CARD?
         BE    EXIT
         SPACE 1
         LA    R8,CARDAREA+7
         LA    R10,CARDAREA+71
         SPACE 1
COBOL55  EQU   *
         CR    R8,R10
         BH    COBOL60
         CLI   0(R8),C'.'           LOOK FOR PERIOD
         BE    COBOL65
         LA    R8,1(R8)
         B     COBOL55
         SPACE 1
COBOL60  EQU   *
         MVI   QCOBOL1,X'02'        STILL LOOKING FOR PERIOD
         B     EXIT
         SPACE 1
COBOL65  EQU   *
         MVI   QCOBOL1,X'03'        PERIOD AFTER P. D. FOUND
         MVC   SEQ,CARDAREA         SAVE SEQUENCE NUMBER
         B     EXIT
         EJECT
COBOL70  EQU   *
         CLI   CARDAREA+6,C' '     COLUMN 7 BLANK?
         BE    COBOL72
         SPACE 1
         CLI   QCOBOL1,X'04'       LOOKING FOR 'END DECLARATIVES' ?
         BE    EXIT                YES, NEXT CARD
         SPACE 1
         B     COBOL79             NO, SAVE SEQUENCE NUMBER AND EXIT
         SPACE 1
COBOL72  EQU   *
         LA    R7,4                LOAD BCT-REGISTER
         LA    R8,CARDAREA+7       ADRESS OF COLUMN 8
COBOL75  EQU   *
         CLI   0(R8),C' '          LOOK FOR FIRST NON-BLANK
         BNE   COBOL80
         LA    R8,1(R8)
         BCT   R7,COBOL75
         SPACE 1
         CLI   QCOBOL1,X'04'       LOOKING FOR 'END DECLARATIVES' ?
         BE    EXIT                YES, NEXT CARD
         SPACE 1
         LA    R7,61               LOAD BCT-REGISTER
COBOL76  EQU   *
         CLI   0(R8),C' '          LOOK FOR FIRST NON-BLANK IN AREA B
         BNE   COBOL78
         LA    R8,1(R8)
         BCT   R7,COBOL76
         SPACE 1
         B     COBOL79             BLANK CARD
         SPACE 1
COBOL78  EQU   *
         CLC   =C'EJECT ',0(R8)    EJECT-STATEMENT?
         BE    COBOL79
         CLC   =C'SKIP1 ',0(R8)    SKIP1-STATEMENT?
         BE    COBOL79
         CLC   =C'SKIP2 ',0(R8)    SKIP2-STATEMENT?
         BE    COBOL79
         CLC   =C'SKIP3 ',0(R8)    SKIP3-STATEMENT?
         BE    COBOL79
         SPACE 1
         B     COBOL85             NO 'DECLARATIVES' PRESENT
         SPACE 1
COBOL79  EQU   *
         MVC   SEQ,CARDAREA        SAVE SEQUENCE NUMBER
         B     EXIT                NEXT CARD
         SPACE 1
COBOL80  EQU   *
         CLI   QCOBOL1,X'04'       LOOKING FOR 'END DECLARATIVES' ?
         BE    COBOL90
         EJECT
********
*   LOOK FOR DECLARATIVES
********
         SPACE 1
         CLI   0(R8),C'D'           IS IT  'D' ?
         BNE   COBOL85
         SPACE 1
         CLC   0(12,R8),=C'DECLARATIVES'    DECLARATIVES PRESENT ?
         BNE   COBOL85
         SPACE 1
         MVI   QCOBOL1,X'04'        DECLARATIVES FOUND
         B     EXIT
         SPACE 1
********
*   NO DECLARATIVES FOUND, INSERT COBOL CARDS BEFORE THIS CARD
********
         SPACE 1
COBOL85  EQU   *
         MVC   SAVECARD,CARDAREA       SAVE CARD
         MVC   CNAMEPAR,CARDAREA+72    MOVE PROGRAM ID
         MVC   COBOLPAR(L'SEQ),SEQ     MOVE SEQUENCE NUMBER
         MVC   CARDAREA,COBOLPAR       MOVE CARD TO IOAREA
         MVI   RETURN,C'Y'             WANT RETURN
         B     EXIT
         SPACE 1
********
*   LOOK FOR END DECLARATIVES
********
         SPACE 1
COBOL90  EQU   *
         CLI   0(R8),C'E'              IS IT 'E' ?
         BNE   EXIT
         SPACE 1
         CLC   0(4,R8),=C'END '        'END' FOUND ?
         BNE   EXIT
         SPACE 1
         LA    R8,4(R8)
         LA    R7,20
COBOL95  EQU   *
         CLI   0(R8),C' '      LOOK FOR FIRST NON-BLANK AFTER 'END'
         BNE   COBOL99
         LA    R8,1(R8)
         BCT   R7,COBOL95
         B     EXIT
         SPACE 1
COBOL99  EQU   *
         CLC   0(12,R8),=C'DECLARATIVES'
         BNE   EXIT
         SPACE 1
         MVI   QCOBOL1,X'05'   'END DECLARATIVES' FOUND
         MVI   RETURN,C'Y'      WANT RETURN
         B     EXIT
         EJECT
**********************************************************************
*
*   PROCESS A USER REQUESTED RETURN, IOCODE=6
*
**********************************************************************
         SPACE 2
WORK6    EQU   *
         CLI   QBAL,X'01'          ASSEMBLER SWITCH ON?
         BNE   WORK6CB
         SPACE 2
********
*   INSERT ASSEMBLER RECORDS
********
         SPACE 1
         CLI   SECNDBAL,X'00'      FIRST PASS?
         BNE   WORK6BA2
         SPACE 1
         MVC   CARDAREA,BALCSECT   MOVE CSECT-CARD TO CARDAREA
         MVC   CARDAREA+72(L'SEQ),SEQ   MOVE SEQUENCE NUMBER
         MVI   SECNDBAL,X'01'      SET  SWITCH FOR SECOND PASS
         MVI   IOCODE,C'E'         WRITE THIS RECORD
         MVI   RETURN,C'Y'         WANT RETURN
         B     EXIT
         SPACE 2
WORK6BA2 EQU   *
         CLI   SECNDBAL,X'01'      SECOND PASS?
         BNE   WORK6BA3
         SPACE 1
         MVC   CARDAREA,BALINFO    MOVE PANINFO-DC TO CARDAREA
         MVC   CARDAREA+72(L'SEQ),SEQ   MOVE SEQUENCE NUMBER
         MVI   SECNDBAL,X'02'      SET SWITCH FOR THIRD PASS
         MVI   IOCODE,C'E'         WRITE THIS RECORD
         MVI   RETURN,C'Y'         WANT RETURN
         B     EXIT
         SPACE 2
WORK6BA3 EQU   *
         CLI   SECNDBAL,X'02'      THIRD PASS?
         BNE   EXIT
         SPACE 1
         MVC   CARDAREA,SAVECARD   MOVE END-STATEMENT TO CARDAREA
         MVI   SECNDBAL,X'00'      TURN OFF SWITCH
         MVI   QBAL,X'00'          TURN OFF ASSEMBLER SWITCH
         MVI   IOCODE,C'E'         WRITE THIS RECORD, NO RETURN
         B     EXIT
         EJECT
WORK6CB  CLI   QCOBOL,X'01'        COBOL SWITCH ON?
         BNE   EXIT
         CLI   QCOBOL1,X'01'       WORKING-STORAGE SECTION FOUND?
         BNE   WORK6CB5
         SPACE 2
********
*   INSERT STATEMENT INTO COBOL AFTER WORKING STORAGE STMT
********
         SPACE 1
         CLI   SECNDCB,X'00'       FIRST PASS?
         BNE   WORK6CB2
         SPACE 1
         MVC   COBOL77(5),CARDAREA     MOVE COBOL SEQUENCE #
         MVC   CNAME,CARDAREA+72       MOVE PROGRAM-ID
         MVC   CINFO,DIRINFO           MOVE DIRECTORY-INFORMATION
         MVC   CARDAREA,COBOL77        MOVE RECORD TO IOAREA
         MVI   SECNDCB,X'01'           SET FIRST-PASS-SWITCH
         MVI   IOCODE,C'E'         WRITE THIS REC
         MVI   RETURN,C'Y'         WANT RETURN
         B     EXIT
         SPACE 2
WORK6CB2 EQU   *
         MVC   COBOLNM(5),CARDAREA     MOVE COBOL SEQUENCE #
         MVC   CNAMENM,CARDAREA+72     MOVE PROGRAM ID
         MVC   CARDAREA,COBOLNM        MOVE RECORD TO IOAREA
         MVI   IOCODE,C'E'         WRITE THIS RECORD, NO RETURN
         MVI   SECNDCB,X'00'       TURN FIRST-PASS-SWITCH OFF
         B     EXIT
         EJECT
WORK6CB5 EQU   *
         CLI   QCOBOL1,X'05'      INSERT AFTER 'END DECLARATIVES' ?
         BNE   WORK6CB8
         SPACE 2
********
*   INSERT STATEMENTS INTO COBOL AFTER 'END DECLARATIVES'
********
         SPACE 1
         CLI   SECNDCB,X'00'       FIRST PASS?
         BNE   WORK6CB7
         SPACE 1
         MVC   COBOLPAR(5),CARDAREA    MOVE COBOL SEQUENCE #
         MVC   CNAMEPAR,CARDAREA+72    MOVE PROGRAM-ID
         MVC   CARDAREA,COBOLPAR       MOVE RECORD TO IOAREA
         MVI   SECNDCB,X'01'           SET FIRST-PASS-SWITCH
         MVI   IOCODE,C'E'         WRITE THIS REC
         MVI   RETURN,C'Y'         WANT RETURN
         B     EXIT
         SPACE 2
WORK6CB7 EQU   *
         MVC   COBOLCAL(5),CARDAREA    MOVE COBOL SEQUENCE #
         MVC   CNAMECAL,CARDAREA+72    MOVE PROGRAM ID
         MVC   CARDAREA,COBOLCAL       MOVE RECORD TO IOAREA
         MVI   SECNDCB,X'00'       TURN FIRST-PASS-SWITCH OFF
         MVI   QCOBOL,X'00'  TURN OFF COBOL SWITCH SINCE WE ARE DONE
         MVI   IOCODE,C'E'         WRITE THIS RECORD, NO RETURN
         B     EXIT
         EJECT
WORK6CB8 EQU   *
         CLI   QCOBOL1,X'03'      INSERT AFTER PROCEDURE DIVISION ?
         BNE   EXIT
         SPACE 2
********
*   INSERT STATEMENTS INTO COBOL AFTER PROCEDURE DIVISION
********
         SPACE 1
         CLI   SECNDCB,X'00'       FIRST PASS?
         BNE   WORK6CB9
         SPACE 1
         MVC   COBOLCAL(L'SEQ),SEQ     MOVE COBOL SEQUENCE #
         MVC   CNAMECAL,CARDAREA+72    MOVE PROGRAM-ID
         MVC   CARDAREA,COBOLCAL       MOVE RECORD TO IOAREA
         MVI   SECNDCB,X'01'           SET FIRST-PASS-SWITCH
         MVI   IOCODE,C'E'         WRITE THIS REC
         MVI   RETURN,C'Y'         WANT RETURN
         B     EXIT
         SPACE 2
WORK6CB9 EQU   *
         MVC   CARDAREA,SAVECARD       MOVE RECORD TO IOAREA
         MVI   SECNDCB,X'00'       TURN FIRST-PASS-SWITCH OFF
         MVI   QCOBOL,X'00'  TURN OFF COBOL SWITCH SINCE WE ARE DONE
         MVI   IOCODE,C'E'         WRITE THIS RECORD, NO RETURN
         B     EXIT
         EJECT
********
*   SWITCHES
********
         SPACE 1
SWITCHES EQU   *
QBAL     DC    X'00'
QCOBOL   DC    X'00'
QCOBOL1  DC    X'00'
QFORT    DC    X'00'
QPLI     DC    X'00'
FIRSTSW  DC    X'00'
SECNDBAL DC    X'00'
SECNDCB  DC    X'00'
SWITCHND EQU   *
         SPACE 3
********
*   WORK AREAS
********
         SPACE 1
SEQ      DC    CL5' '
RF       DC    PL3'0'
         SPACE 3
********
*   CARD SAVE AREA
********
         SPACE 1
SAVECARD DC    CL80' '             HOLDS RECORD IN CASE OF INSERT
         SPACE 3
********
*   ASSEMBLER RECORDS
********
         SPACE 1
BALMNOTE DC    CL80'         MNOTE 4,''********** CALLWTL2 MACRO FEHLT *
               **********'''
BALCSECT DS    0CL80
         DC    CL(72+L'SEQ)'         CSECT',CL(8-L'SEQ)'4'
BALINFO  DS    0CL80
         DC    C'         DC    CL21'
DIRINFO1 DS    0CL24
DIRINFO  DS    0CL23
         DC    X'7D'
LEVEL    DC    CL3' '
NAME     DC    CL10' '
DATE     DC    CL8' '
         DC    X'7D'
         DC    CL(BALINFO+72+L'SEQ-*)' '
         DC    CL(8-L'SEQ)'5'
         EJECT
********
*   COBOL RECORDS
********
         SPACE 1
COBOL77  DS    0CL80
         DC    CL5' '
         DC    C'5 77  PAN-VALET    PIC X(24) VALUE '
CINFO    DC    CL(L'DIRINFO)' '
         DC    C'.'
         DC    CL(COBOL77+72-*)' '
CNAME    DC    CL8' '
         SPACE 1
COBOLNM  DS    0CL80
         DC    CL5' '
         DC    CL67'6 77  NM-UR211300  PIC X(8)  VALUE ''UR211300''.'
CNAMENM  DC    CL8' '
         SPACE 1
COBOLPAR DS    0CL80
         DC    CL5' '
         DC    CL67'4 AUDIT-WRITE-TO-LOG.'
CNAMEPAR DC    CL8' '
         SPACE 1
COBOLCAL DS    0CL80
         DC    CL5' '
         DC    CL67'5     ON 1 CALL NM-UR211300 USING PAN-VALET.'
CNAMECAL DC    CL8' '
         SPACE 4
         LTORG
         EJECT
********
*   DSECT SECTION
********
         SPACE 2
IOAREA   DSECT
         DS    CL121
*     FIRST  80 FOR INPUT AREA
*     FIRST  81 FOR PUNCH AREA
*     FIRST 121 FOR PRINT AREA
         ORG   IOAREA
CARDAREA DS    CL80
         ORG
         SPACE 2
CODES    DSECT
IOCODE   DS    CL1  SEE TABLE FOR POSSIBLE CODES
PROGRAM  DS    CL1    1,2,4,6,7, OR 8
RETURN   DS    CL1   Y-RETURN TO EXIT         N-NO RETURN REQUESTED
         SPACE 2
DIRENTRY DSECT
DNAME    DS    CL10                NAME LEFT JUSTIFIED
DLEVEL   DS    CL3                 LEVEL NUMBER
DUSER    DS    CL4                 USER CODE
DSECURE  DS    CL1                 SECURITY CODE
DTYPE    DS    CL5                 LANGUAGE TYPE
DSTATUS  DS    0CL3                3 CHAR STATUS
DPRODT   DS    CL1                 P-PROD  T-TEST
DEORDD   DS    CL1                 E-ENABLE  D-DISABLE
DAORDI   DS    CL1                 A-ACTIVE  I-INACTIVE
DDATEM   DS    CL8                 DATE OF LAST MAINTENANCE MM/DD/YY
DDATEA   DS    CL8                 DATE OF LAST ACCESS  MM/DD/YY
DBLOCKS  DS    CL5                 NO. OF BLOCKS
DSTMTS   DS    CL8                 NO. OF STATEMENTS
DLASTACT DS    CL4                 LAST ACTION, 1ST POS. IS * IF PROD.
DBYTES   DS    CL2                 NO. BYTES PER STATMENT
DSUBSET  DS    CL4                 NO. OF SUBSETS(SUPERSETS ONLY)
DNAME2   DS    CL10                NAME RIGHT JUSTIFIED
         DS    CL1                 NOT USED
DFORM    DS    CL1                 N=NOFORMAT, T=TSO, ELSE BLANK
DINC     DS    CL1                 I=INCLUDE BEING EXPND (EXIT ONLY)
DVERSION DS    XL2                 VER. #(FOR PROTECTION FILES ONLY
         END
