         MACRO
         HEWAPT &PARM
         EJECT
***********************************************************************
*                                                                     *
*    10/02/73          LEVEL=06                                       *
*                                                                     *
*                                ------------                         *
*            CODE GENERATION FOR - 10/02/73 - HEWAPT MACRO FOLLOWS    *
*                                ------------             @ZA51314    *
***********************************************************************
         AIF   ('&PARM' EQ 'A').CSECT
*** EQUATES FOR DSECT DEFINITIONS
HEWLKLED EQU  0
HEWLCLDB EQU   0
APTDSECT DSECT
.CSECT   ANOP
         DC    C'STARTAPT'
PDSE1    DS    CL8       MEMBER OR ALIAS NAME
PDSE2    DS    CL3       RELATIVE DA OF FIRST RECORD-TTR
PDSE3    DS    CL1       C-BYTE
*INITIAL VALUE=0    BIT   0   ALIAS INDICATOR
*INITIAL VALUE=0    BITS 1-2  NUMBER OF TTR'S IN USERS DATA
*INITIAL VALUE=0    BITS 3-7  LENGTH OF USERS DATA IN HALF WORDS
PDSE4    DS    CL4       RELATIVE DA OF FIRST TEXT RECORD TTR0
PDSE5    DS    CL3       RELATIVE DA OF NOTE LIST OR SCTR-XLATION TABLE
PDSE6    DS    CL1       L-BYTE-NUMBER OF TTR'S IF NOTE LIST PRESENT
*
PDSE7    DS    CL1       FIRST ATTRIBUTE BYTE
*
*INITIAL VALUE=0    BIT 0     REENTERABLE
*INITIAL VALUE=0    BIT 1     RESUABLE
*INITIAL VALUE=0    BIT 2     OVERLAY
*INITIAL VALUE=0    BIT 3     TEST
*INITIAL VALUE=0    BIT 4     ONLY LOADABLE
*INITIAL VALUE=0    BIT 5     BLOCK-SCATTER
*INITIAL VALUE=1    BIT 6     EXECUTABLE
*INITIAL VALUE=0    BIT 7     MODULE CONTAINS 1 TEXT RECORD + NO RLD'S
*
PDSE8    DS    CL1       SECOND ATTRIBUTE BYTE
*
*INITIAL VALUE=1    BIT 0     ON MEANS OUTPUT LOAD MOD NOT DC
*INITIAL VALUE=1    BIT 1     ORIGIN OF FIRST TEXT RECORD IS ZERO
*INITIAL VALUE=1    BIT 2     ENTRY POINT ASSIGN BY LINKAGE EDITOR IS 0
*INITIAL VALUE=1    BIT 3     MODULE CONTAINS NO RLD ITEMS
*INITIAL VALUE=0    BIT 4     MODULE CAN BE RE-PROCESSED BY LINKAGE ED.
*INITIAL VALUE=0    BIT 5     MODULE DOES NOT CONTAIN SYMBOL CARDS
*INITIAL VALUE=1    BIT 6     MODULE WAS CREATED BY LINK EDITOR F V2
*INITIAL VALUE=0    BIT 7     REFRESHABLE
*
PDSE9    DS    CL3       TOTAL CONTIGUOUS MAIN STORAGE REQUIREMENTS OF
*                        THIS MODULE
PDSE10   DS    CL2       LENGTH OF FIRST TEXT RECORD
PDSE11   DS    CL3       ENTRY POINT ADDRESS
PDSE12   DS    CL3       EDITOR ASSIGN ORIGIN OF FIRST TEXT RECORD
PDSAPFLG EQU   X'08'     THIS BIT ON IN FIRST BYTE OF PDSE12     Y01048
*                        INDICATES AUTH CODE IN LAST 2 BYTES     Y01048
*                        OF PDS DIRECTORY                        Y01048
****
**** THE FOLLOWING 4 ITEMS ARE FOR SCATTER FORMAT ONLY
****
PDSE13   DS    CL2       NUMBER OF BYTES IN SCATTER LIST
PDSE14   DS    CL2       NUMBER OF BYTES IN THE TRANSLATION TABLE
PDSE15   DS    CL2       ESDID OF THE FIRST TEXT RECORD
PDSE16   DS    CL2       ESDID OF THE CONTROL SECTION CONTAINING THE
*                        ENTRY POINT
****
**** THE FOLLOWING TWO ITEMS ARE INCLUDED WHEN AN ALIAS NAME IS SPECIFI
**** ED AND EITHER THE REENTERABLE OR REUSABLE OPTION IS SPECIFIED
****
PDSE17   DS    CL3       ENTRY POINT OF MAIN MEMBER NAME
PDSE18   DS    CL8       MEMBER NAME OF MODULE
****
**** THIS ENDS THE PARTITION DATA SET DIRECTORY
****
         SPACE 2
REGSA    DS    18F       18 FULL WORD SAVE AREA FOR DATA MANAGEMENT
IOCT     DS    14F       I/O CONTROL TABLE 4 BYTES PER ENTRY@ZA51314
*              FIRST 11 WORDS TXT NEXT 3 WORDS RLD NOTELIST  @ZA51314
*              ALSO USED AS STORAGE AREA BY HEWLFSCD AND HEWLFREL
*
APT0     DS    CL1       FIRST BYTE--ALL PURPOSE INDICATORS
*
*INITIAL VALUE=0    BIT 0     NCAL
*INITIAL VALUE=0    BIT 1     XREF
*INITIAL VALUE=0    BIT 2     MAP
*INITIAL VALUE=0    BIT 3     LET
*INITIAL VALUE=0    BIT 4     LOG
*INITIAL VALUE=0    BIT 5     XCAL
*INITIAL VALUE=0    BIT 6     TXT/RLD
*INITIAL VALUE=0   BIT 7     SOME LIBRARY CARD WAS READ
*
APT1     DS    CL1       SECOND BYTE--ALL PURPOSE INDICATORS
*
*INITIAL VALUE=0    BIT 0     MORE INCLUDE TO COME
*INITIAL VALUE=0    BIT 1     AUTO-LIB CALL IN OPERATION
*INITIAL VALUE=0    BIT 2     OBJECT OR LOAD MODULE
*INITIAL VALUE=0    BIT 3     DELETE INDICATOR
*INITIAL VALUE=0    BIT 4     ENTRY POINT RECEIVED
*INITIAL VALUE=1    BIT 5     SYMBOLIC OR ABSOLUTE ENTRY
*INITIAL VALUE=0    BIT 6     ENTRY CARD RECEIVED
*INITIAL VALUE=0    BIT 7     ESD-WRITE INDICATOR
*
APT2     DS    CL1       THIRD BYTE--ALL PURPOSE INDICATORS
*
*INITIAL VALUE=0    BIT 0     NO LENGTH RECEIVED
*INITIAL VALUE=0    BIT 1     NO LENGTH INDICATION
*INITIAL VALUE=0    BIT 2     FIRST TEXT RECORD
*INITIAL VALUE=0    BIT 3     STATUS INDICATOR RECEIVED
*INITIAL VALUE=0    BIT 4    INCLUDE PREVIOUSLY INITIATED
*INITIAL VALUE=0    BIT 5     I/O OVERLAP BIT
*INITIAL VALUE=0    BIT 6     IN MODULE INDICATOR
*INITIAL VALUE=0    BIT 7     PROGRAMMER PUNCHED CARD CONTINUATION
*
APT3     DS    CL1       FOURTH BYTE--ALL PURPOSE INDICATORS
*
*INITIAL VALUE=0    BIT 0     END OF FILE
*INITIAL VALUE=0    BIT 1     NAME CARD RECEIVED-END OF INPUT FOR L.M.
*INITIAL VALUE=0    BIT 2      END OF INPUT  (/*) -END OF SYSLIN INPUT
*INITIAL VALUE=0    BIT 3     TO STOW AS REPLACEMENT
*INITIAL VALUE=0    BIT5      FIRST TEXT OF SEGMENT
*INITIAL VALUE=0    BIT 4     FIRST TEXT OF LOAD MODULE
*INITIAL VALUE=0    BIT 6     RLDS FOR GROUP
*INITIAL VALUE=0   BIT  7    SYSLIB OPENED
         SPACE 2
CTTR     DS    F         TTR0 FOR CESD(1ST RECORD) IF MAP OR XREF
CSNO     DS    H         CURRENT SEGMENT NUMBER
CRNO     DS    H         CURRENT REGION NUMBER
PRAL     DS    F         PSUEDO REGISTER ACCUMULATIVE LENGTH
         SPACE 2
*
***  ADDRESSES OF ALL TABLES USED DURING PROCESSING                 ***
*
FLCD     DS    F         ADDRESS OF FIRST LINE CESD LINES DELETED
RCCE     DS    F         ADDRESS OF END OF REPLACE/CHANGE CHAIN
RCCB     DS    F         ADDRESS OF REPLACE/CHANGE CHAIN BEGINNING
ALCB     DS    F         ADDRESS OF ALIAS CHAIN BEGINNING
OVCMBGAD DS    1F        ADDRESS OF OVERLAY CHAIN BEGINNING
SGT1     DS    1F        ADDRESS OF SEGTAB1 - 1
CLLT     DS    1F        ADDRESS OF CALLS LIST TABLE
TNT1     DS    1F        ADDRESS OF TEXT NOTE LIST 1
RNT1     DS    1F        ADDRESS OF RLD NOTE LIST 1
RLDINPAD DS    1F        ADDR. OR RLD INPUT BUFFER 1ST PASS
RECNT    DS    1F        ADDRESS OF RELOCATION CONSTANT TABLE - 4
*                        ALSO RENUMBERING TABLE - 4
TXTIO    DS    1F        ADDRESS OF TEXT I/O TABLE
ALAS     DS    1F        ADDRESS OF ALIAS TABLE
DLKT     DS    1F        ADDRESS OF DELINK TABLE - 5
CHESD    DS    1F        ADDRESS OF COMPOSITE ESD - 16
SELST    DS    1F        ADDRESS OF SECOND PASS ENTRY LIST
TNLS2    DS    1F        ADDRESS OF TEXT NOTE LIST 2
RNLS2    DS    1F        ADDRESS OF RLD NOTE LIST 2
TTRLIST  DS    1F        ADDRESS OF TTR LIST
RLDOUTBF DS    1F        ADDR. OF OUTPUT RLD BUFFER-2ND PASS
HIARADD  DS    1F        ADDRESS OF HIAR (HIERARCHY) TABLE
ORDRADR  DS    1F        ADDRESS OF ORDER TABLE                  S01904
         SPACE 2
INCBRKPT DS    1F         ADDRESS OF BREAKING POINT IN INCL CHAIN
CRRTINCL DS    1F       ADDRESS OF CURRENTLY INCLUDED ESD ITEM
         SPACE 2
*
***  CAPACITIES OF ALL TABLES USED DURING PROCESSING
*
ENRNX    DS    1H        MAX. NO. OF ENTRIES IN RNT TABLE
ENCDX    DS    1H        MAX. NO. OF ENTRIES IN C/HESD TABLES
ENT1X    DS    1H        MAX. NO. OF ENTRIES IN TEXT NOTE LIST 1
ENR1X    DS    1H        MAX. NO. OF ENTRIES IN RLD NOTE LIST 1
ENT2X    DS    1H        MAX. NO. OF ENTRIES IN TEXT NOTE LIST 2
ENR2X    DS    1H        MAX. NO. OF ENTRIES IN RLD NOTE LIST 2
ENTOX    DS    1H        MAX. NO. OF BYTES IN TEXT I/O TABLE
ENCLX    DS    1H        MAX. NO. OF BYTES IN CALLS LIST
ENDTX    DS    1H        MAX. NO. OF ENTRIES IN DELINK TABLE
ENS1X    DS    1H        MAX. NO. OF SEGMENTS
BUFSIZ   DS    1H        SIZE OF BUFFER
HESD     DS    1F        ADDRESS OF HESD TABLE - 8
ENELTX   DS    1H        MAX. NUMBER OF ENTRIES IN 2ND PASS ENTRY LIST
ENT1X1   DS    1H            MAX. NO. OF ENTRIES IN TEXT NOTE LIST 1
*        BEFORE REALLOCATION - USED ONLY IF TABLES WERE REALLOCATED
ENR1X1   DS    1H            MAX. NO. OF ENTRIES IN RLD NOTE LIST 1
*        BEFORE REALLOCATION - USED ONLY IF TABLES WERE REALLOCATED
         SPACE 2                                                 S21016
***********************************************************************
*                                                                     *
*          ADDITIONS TO THE ALL PURPOSE TABLE FOR IDR SUPPORT         *
*                                                              S21016 *
***********************************************************************
         SPACE 2                                                 S21016
IDRTRLEN DS    H                       MAXIMUM LENGTH OF IDR     S21016
*                                      TRANSLATOR DATA TABLE     S21016
IDRTILEN DS    H                       MAXIMUM LENGTH OF IDR    OX04245
*                                      TRANSLATOR ID TABLE      OX04245
IDRUDLEN DS    H                       MAXIMUM LENGTH OF IDR     S21016
*                                      USER DATA TABLE           S21016
IDRZPLEN DS    H                       MAXIMUM LENGTH OF IDR     S21016
*                                      IMASPZAP DATA TABLE       S21016
* THE FOLLOWING FOUR WORDS CAN NOT BE MOVED AFTER THEIR          XM4950
* RELATED IDR CONSTANTS AND CAN NOT BE SHUFFLED AS TO            XM4950
* ORDER WITHOUT SHUFFLING ALL OTHER IDR CONTANTS IN THE APT      XM4950
IDRTRTAB DS    F                       STARTING ADDRESS OF IDR   S21016
*                                      TRANSLATOR DATA TABLE     S21016
IDRTITAB DS    F                       STARTING ADDRESS OF IDR  OX04245
*                                      TRNSLATOR ID TABLE       OX04245
IDRUDTAB DS    F                       STARTING ADDRESS OF IDR   S21016
*                                      USER DATA TABLE           S21016
IDRZPTAB DS    F                       STARTING ADDRESS OF IDR   S21016
*                                      IMASPZAP DATA TABLE       S21016
IDRTREND DS    F                       ADDRESS OF NEXT AVAILABLE S21016
*                                      (UNUSED) BYTE OF IDR      S21016
*                                      TRANSLATOR DATA TABLE     S21016
IDRTIEND DS    F                       ADDRESS OF NEXT AVAIL    OX04245
*                                      (UNUSED) BYTE OF IDR     OX04245
*                                      TRANSLATOR ID TABLE      OX04245
IDRUDEND DS    F                       ADDRESS OF NEXT AVAILABLE S21016
*                                      (UNUSED) BYTE OF IDR USER S21016
*                                      DATA TABLE                S21016
IDRZPEND DS    F                       ADDRESS OF NEXT AVAILABLE S21016
*                                      (UNUSED) BYTE OF IDR      S21016
*                                      IMASPZAP DATA TABLE       S21016
         SPACE 2                                                 S21016
ENRLD2X  DS    1H        MAX. SIZE OF INPUT RLD BUFFER-1ST PASS
ENSPX    DC    H'0'      2 BYTES USED BY HEWLKOUT
LSTS     DS    1F L      LAST SEGMENT IN EACH REGION (REGION 1-4)
EPSM     DS    CL8       ENTRY POINT SYMBOL OR END CARD ADDRESS/SYMBOL
*              ALSO USED AS STORAGE AREA BY HEWLFSCD AND HEWLFREL
         SPACE 2
*
***  CURRENT USAGE OF ALL TABLES USED DURING PROCESSING             ***
*
ENT1C    DS    H         CURRENT NUMBER OF ENTRIES IN TXT NOTE LIST 1
ENR1C    DS    H         CURRENT NUMBER OF ENTRIES IN RLD NOTE LIST 1
ENITC    DS    H         CURRENT NUMBER OF BYTES IN TXT I/O CNTL TABLE
ENIRC    DS    H         CURRENT NUMBER OF BYTES IN RLD I/O CNTL TABLE
ENTOC    DS    H         CURRENT NUMBER OF BYTES IN TXT I/O TABLE
ENCLC    DS    H         CURRENT NUMBER OF BYTES IN CALLS LIST
ENS1C    DS    H         CURRENT NUMBER OF ENTRIES IN SEGTAB1
ENASC    DS    H         CURRENT NUMBER OF ENTRIES IN ALIAS TABLE
ENDTC    DS    H         CURRENT NUMBER OF ENTRIES IN DELINK TABLE
ENRNC    DS    H         CURRENT NUMBER OF ENTRIES IN RNT TABLE  XM1692
*                        ALWAYS EQUAL TO MAXIMUM NUMBER DUE TO LR
*                        PROCESSING WHICH MUST TURN ON DEPEND FLAGS
*                        FOR SD ITEMS NOT YET RECEIVED
ENCDC    DS    H         CURRENT NUMBER OF ENTRIES IN H/CESD TABLE
ENELTC   DS    H         CURRENT NUMBER OF ENTRIES IN 2PASS ENTRY LIST
ENT2C    DS    H         CURRENT NUMBER OF ENTRIES IN TXT NOTE LIST 2
ENR2C    DS    H         CURRENT NUMBER OF ENTRIES IN RLD NOTE LIST 2
ENSPC    DC    H'00'    HIGHEST SEGMENT NUMBER WITH TEXT
* THE FOLLOWING FOUR FIELDS MAY NOT BE MOVED IN THE APT
* TO A LOCATION THAT IS BEFORE THEIR RELATED IDR CONSTANTS
* THE HALFWORD FILLERS MUST BE LEFT IN AND THE ORDER OF
* THE OCCURRENCE OF THESE FIELDS CAN NOT BE CHANGED WITHOUT
* CHANGING THE ORDER OF ALL OTHER IDR CONSTANTS
         DS    0F
IDRTRCUR DS    H         CURR # BYTES IN IDR TRANS DATA TABLE    XM4950
         DS    0F
IDRTICUR DS    H         CURR # BYTES IN IDR TRANS ID TABLE     OX04245
         DS    0F                                               OX04245
IDRUDCUR DS    H         CURR # BYTES IN IDR USER DATA TABLE     XM4950
         DS    0F
IDRZPCUR DS    H         CURR # BYTES IN IDR ZAP DATA TABLE      XM4950
ORDRCUR  DS    H        CURRENT NUMBER OF BYTES IN ORDER TABLE   S01904
ORDRMAX  DS    H        MAX. NO. OF BYTES IN ORDER TABLE         S01904
BITMAP   DS    2F        BIT SWITCHES DENOTING ERROR MESSAGES LOGGED
BITMAP2  DS    2F        ADDITIONAL BIT SWITCHES DENOTING ERROR  S21016
*                        MESSAGES LOGGED                         S21016
LINECNT  DS    1H        LINES ON THIS PAGE
HISEV    DS    1H        HIGHEST SEVERITY MESSAGE
         SPACE 2
SYSRTN   DS    2F        TWO WDS FOR REGISTER 13-14 TO RETURN TO SCHED.
SPACES   DS    18F       SAVE AREA FOR TEMPORARY DEBUGGING
*              ALSO USED AS STORAGE AREA BY HEWLFSCD AND HEWLFREL
         AIF   ('&PARM' EQ 'A').DC3
ERDIG    DS    F         ADDRESS OF HEWLFLOG
         AGO   .DC4
.DC3     ANOP
ERDIG    DC    V(HEWLFLOG) ADDRESS OF HEWLFLOG
.DC4     ANOP
         AIF   ('&PARM' EQ 'A').DC31
ERDIGA   DS    F        ADDRESS OF HEWLFALK                      S01904
         AGO   .DC41
.DC31    ANOP
ERDIGA   DC    V(HEWLFALK)   ADDRESS OF HEWLFALK                 S01904
.DC41    ANOP
SSI      DS    1F        SYSTEM STATUS INDICATOR (FOR APT)
FFCADR   DS    1F        HIGHEST ADDRESS RETAINED BY ALLOCATOR
LIBNAME  DS    8C        NAME OF LIBRARY
LIBOPEN  DS    8C        NAME OF LIBRARY NOW OPEN
         AIF   ('&PARM' EQ 'A').DC11
         DS    H
         AGO   .DC12
.DC11    ANOP
APT000   BR    14         SYNAD FOR PRINTER
.DC12    ANOP
SAVATS   DS    3C        ATTRIBUTES SAVE AREA
         SPACE 2
APTSWS   DS    1C        SWITCHES
*                   BITS 0-3  SPARE
*INITIAL VALUE=0    BIT 4     BIT MAP PROCESSED
*INITIAL VALUE=0    BIT 5     LINKAGE EDITOR INPUT RECEIVED
*INITIAL VALUE=0    BIT 6     SYM RECEIVED
*INITIAL VALUE=0    BIT 7     ESD RECEIVED
TSOBIT   EQU   X'80'         TSO OR NOT                          S99999
CSTOW    EQU   X'40'         RESERVED FOR CSTOW OPTION           S99999
ABSREL   EQU   X'20'         0 -- RELOCATABLE                    S99999
*                            1 -- ABSOLUTE                       S99999
OVRDE    EQU   X'10'         DCBS OVERRIDE                       S99999
         SPACE 2
*
NEWSW    DC    XL1'00'        SWITCHES FOR DETERMINING CONTROL
*
*INITIAL VALUE=0    BIT 0     IF OFF INDICATES 1ST TIME IN INT
*INITIAL VALUE=1    BIT 1     MAP/XREF ENTERED FROM INTERMEDIATE PROC.
*                             IF 0, ENTERED FROM FINAL PROCESSOR
*INITIAL VALUE=0    BIT 2     ALL RLDS IN CORE
*                             IF 1, THE RLDS ARE NOT IN CORE
*INITIAL VALUE=0    BIT 3     MAP/XREF NOT IN CONTROL
*                             IF 1, MAP/XREF IN CONTROL
*INITIAL VALUE=0    BIT 4     NORMAL PRINTING ON SYSPRINT
*                             IF 1, ABORT IMMEDIATELY-NO PRINTING
*INITIAL VALUE=0    BIT 5     HIERARCHY
*INITIAL VALUE=0    BIT 6     SPARE
*INITIAL VALUE=0    BIT 7     INDICATES PURGE TO TXT/RLD PROCESSOR
         SPACE 2
*
NEWSW2   DC    XL1'00'        SWITCHES FOR SECOND PASS PROCESSING
*
*INITIAL VALUE=0    BIT0      MORE RLDS EXIST FOR CURRENT ID
*INITIAL VALUE=0    BIT1      SPLIT RLD IN OUTPUT BUFFER
*INITIAL VALUE=0    BIT2      R AND P POINTER HAS BEEN SAVED
*INITIAL VALUE=0    BIT3      RELATIVE RELOCATION FACTOR NEEDED
*                             IF 1, ABSOLUTE RELOCATION FACTOR NEEDED
*INITIAL VALUE=0    BIT4      SPLIT RLD HAS BEEN SAVED IN HESD PREFIX
*INITAIL VALUE=0    BIT5      NO RLDS EXIST FOR LAST TEXT OF SEGMENT
*                             OR LAST TEXT OF MODULE
*INITIAL VALUE=0    BIT6      SPLIT RLD IS PRECEDED BY R AND P PTRS.
*INITIAL VALUE=0    BIT7      R AND P PTRS FOR CURRENT CHAIN ARE IN BFR
         SPACE 2
APTSW2   DS    XL1           SWITCHES                            S99999
ENQBIT   EQU   X'80'         OFF=ENQ'ED; ON=NO ENQ               S99999
*        EQU   X'40'                   RESERVED
SHRSYSMD EQU   X'20'                   OFF = SYSLMOD NOT SHARED  A49330
*                                      ON = SYSLMOD SHARED DASD  A49330
REINTRY  EQU   X'10'                   OFF = FIRST TIME THRU INT A51444
*                                      ON = NOT FIRST TIME THRU  A51444
         SPACE 2                                                 S99999
APTSW3   DS    XL1           SWITCHES                            S99999
         SPACE 2                                                 S99999
APTSW4   DS    XL1           SWITCHES                            S99999
         EJECT
*****
*
*   EQUATES TO SUPPORT THE REALLOCATE CODE AND TO STANDARDIZE
*      THE CONSTANTS FOR TABLE SIZE AND WEIGHT COMPUTATION
*
*****
WT1      EQU   X'0000' WEIGHT FOR RLD INP BUF TABLE (1ST PASS)
WT2      EQU   X'0000' WEIGHT FOR ALIAS TABLE
WT3      EQU   X'0120' WEIGHT FOR CESD TABLE
WT4      EQU   X'0000' WEIGHT FOR HESD TABLE
WT5      EQU   X'0090' WEIGHT FOR HESD TABLE (SECOND)
WT6      EQU   X'00FC' WEIGHT FOR TEXT NOTE LIST 2 TABLE    @ZA51314
WT7      EQU   X'003A' WEIGHT FOR RLD NOTE LIST 2 TABLE
WT8      EQU   X'0090' WEIGHT FOR TEXT I/O TABLE            @ZA51314
WT9      EQU   X'0048' WEIGHT FOR RNT/RELOC CONSTANT TABLES
WT10     EQU   X'0018' WEIGHT FOR DELINK TABLE
WT11     EQU   X'0000' WEIGHT FOR RLD O/P BUF TABLE (2ND PASS)
WT12     EQU   X'0015' WEIGHT FOR TEXT NOTE LIST 1 TABLE
WT13     EQU   X'000E' WEIGHT FOR RLD NOTE LIST 1 TABLE
WT14     EQU   X'001C' WEIGHT FOR ORDER TABLE
WT15     EQU   X'0012' WEIGHT FOR HIERARCHY TABLE
WT16     EQU   X'0000' WEIGHT FOR SEGMENT TABLE
WT17     EQU   X'0060' WEIGHT FOR CALLS LIST TABLE
WT18     EQU   X'0060' WEIGHT FOR ENTRY LIST TABLE
WT19     EQU   X'000C' WEIGHT FOR IDR TRANSLATOR DATA TABLE     OX04245
WT20     EQU   X'0058' WEIGHT FOR IDR USER DATA TABLE
WT21     EQU   X'002C' WEIGHT FOR IDR ZAP DATA TABLE
WT22     EQU   X'002D' WEIGHT FOR TRANSLATOR ID TABLE           OX04245
MIN1     EQU   X'0100' MINSIZE FOR RLD INP BUF TABLE (1ST PASS)
MIN2     EQU   X'00A0' MINSIZE FOR ALIAS TABLE
MIN3     EQU   X'1200' MINSIZE FOR CESD TABLE
MIN4     EQU   X'0008' MINSIZE FOR HESD TABLE
MIN5     EQU   X'0900' MINSIZE FOR HESD TABLE (SECOND)
MIN6     EQU   X'0FC0' MINSIZE FOR TEXT NOTE LIST 2 TABLE   @ZA51314
MIN7     EQU   X'03A0' MINSIZE FOR RLD NOTE LIST 2 TABLE
MIN8     EQU   X'0900' MINSIZE FOR TEXT I/O TABLE           @ZA51314
MIN9     EQU   X'0480' MINSIZE FOR RNT/RELOC CONSTANT TABLES
MIN10    EQU   X'0180' MINSIZE FOR DELINK TABLE
MIN11    EQU   X'0300' MINSIZE FOR RLD O/P BUF TABLE (2ND PASS)
MIN12    EQU   X'0150' MINSIZE FOR TEXT NOTE LIST 1 TABLE
MIN13    EQU   X'00E8' MINSIZE FOR RLD NOTE LIST 1 TABLE
MIN14    EQU   X'01C8' MINSIZE FOR ORDER TABLE
MIN15    EQU   X'0120' MINSIZE FOR HIERARCHY TABLE
MIN16    EQU   X'0100' MINSIZE FOR SEGMENT TABLE
MIN17    EQU   X'0600' MINSIZE FOR CALLS LIST TABLE
MIN18    EQU   X'0600' MINSIZE FOR ENTRY LIST TABLE
MIN19    EQU   X'00C0' MINSIZE FOR IDR TRANSLATOR DATA TABLE    OX04245
MIN20    EQU   X'03C0' MINSIZE FOR IDR USER DATA TABLE
MIN21    EQU   X'01C7' MINSIZE FOR IDR ZAP DATA TABLE
MIN22    EQU   X'00D0' MINSIZE FOR TRANSLATOR ID TABLE          OX04245
ADDSIMP  EQU   WT2+WT4+WT5+WT6+WT7+WT8+WT9+WT10+WT12+WT13+WT14+WT19+WT2*
               0+WT21+WT22                                   @ZA51314
*  ADDSIMP IS THE SUM OF THE WEIGHTS OF THE 'NORMAL' OR      @ZA51315
*   'ALWAYS USED' TABLES
ROUNDSIM EQU   ((ADDSIMP+15)/16)*16 ROUNDS UP ADDSIMP TO FW BDY
ADDHIAR  EQU   ADDSIMP+WT15  TOTAL WEIGHTS FOR HIARCHY
ROUNHIAR EQU   ((ADDHIAR+15)/16)*16 ROUNDS UP ADDHIAR TO FW BDY
ADDOVLY  EQU   ADDSIMP+WT16+WT17    TOTAL WEIGHTS FOR OVLY   @ZA51314
ROUNOVLY EQU   ((ADDOVLY+15)/16)*16 ROUNDS UP ADDOVLY TO FW BDY
ADDSIMPM EQU   MIN2+MIN4+MIN5+MIN6+MIN7+MIN8+MIN9+MIN10+MIN12+MIN13+MIN*
               14+MIN19+MIN20+MIN21+MIN22                    @ZA51314
*                            ADDSIMPM SUMS THE MINIMUM SIZES FOR THE
*                       'NORMAL' TABLES                       @ZA51314
NORMTABS EQU   ((ADDSIMPM+15)/16)*16  ROUNDS TO FW BDY
ADDOVLYM EQU   ADDSIMPM+MIN16+MIN17   SUM SIZES FOR OVLY      @ZA01406
OVLATABS EQU   ((ADDOVLYM+15)/16)*16  ROUNDS TO FW BDY
ADDHIARM EQU   ADDSIMPM+MIN15  SUM OF SIZES FOR HIAR TABLES
HIARTABS EQU   ((ADDHIARM+15)/16)*16  ROUNDS TO FW BDY
         EJECT ,                                                 S21016
IDRSWS   DS    XL1                     IDR SWITCHES              S21016
*     ******************************************************     S21016
*     *                BIT DESCRIPTIONS                    *     S21016
*     ******************************************************     S21016
*     *  SYMBOLIC  *       *        *    MEANING OF BIT    *     S21016
*     *  NAME  OF  *  BIT  *  MASK  *    WHEN TURNED ON    *     S21016
*     *    MASK    *       *        *     (VALUE = 1)      *     S21016
*     ******************************************************     S21016
*     *    N/A     *   0   *  X'80' *  RESERVED            *     S21016
*     ******************************************************     S21016
*     *    N/A     *   1   *  X'40' *  RESERVED            *     S21016
*     ******************************************************     S21016
*     *    N/A     *   2   *  X'20' *  RESERVED            *     S21016
*     ******************************************************     S21016
*     *            *       *        *  THE LAST  IDR ITEM  *     S21016
*     *            *       *        *  PROCESSED  WAS NOT  *     S21016
*     *   PARTENT  *   3   *  X'10' *   COMPLETE  (IT IS   *     S21016
*     *            *       *        *    EXPECTED TO BE    *     S21016
*     *            *       *        *   CONTINUED ON THE   *     S21016
*     *            *       *        *  NEXT INPUT RECORD)  *     S21016
*     ******************************************************     S21016
*     *            *       *        * DOUBLE IDR  ENTRY ON *     S21016
*     *   DBLOBJ   *   4   *  X'08' *  AN OBJ MOD END REC  *     S21016
*     *            *       *        *   BEING PROCESSED    *     S21016
*     ******************************************************     S21016
*     *   USEIDR   *   5   *  X'04' *   IDENTIFY CONTROL   *     S21016
*     *            *       *        * CARD BEING PROCESSED *     S21016
*     ******************************************************     S21016
*     *            *       *        *  OBJECT MODULE END   *     S21016
*     *   OBJIDR   *   6   *  X'02' * CARD BEING PROCESSED *     S21016
*     *            *       *        *  FOR IDR INPUT DATA  *     S21016
*     ******************************************************     S21016
*     *   LMDIDR   *   7   *  X'01' *   LOAD MODULE IDR    *     S21016
*     *            *       *        *   BEING PROCESSED    *     S21016
*     ******************************************************     S21016
*   NOTE--INITIAL VALUE OF ALL BITS IS ZERO (SET BY HEWLFINT)    S21016
*RESVRD  EQU   X'80'                   EQUATES OF                S21016
*RESVRD  EQU   X'40'                   SYMBOLIC                  S21016
*RESVRD  EQU   X'20'                   NAMES                     S21016
PARTENT  EQU   X'10'                   FOR                       S21016
DBLOBJ   EQU   X'08'                   MASKS                     S21016
USEIDR   EQU   X'04'                   AS                        S21016
OBJIDR   EQU   X'02'                   SPECIFIED                 S21016
LMDIDR   EQU   X'01'                   ABOVE                     S21016
***                                                              ***
***            MAP OF INTERNAL TRANSLATOR IDR DATA TABLE         ***
***                                                              ***
TRNAME   EQU   0                        TRANSLATOR NAME         OX04245
VVMM     EQU   10                       VERSION/MOD LEVEL       OX04245
*                                       OF TRANSLATOR           OX04245
TRNAME2  EQU   12                       2ND TRANSLATOR NAME     OX04245
VVMM2    EQU   22                       VERSION/MOD LEVEL       OX04245
*                                       OF 2ND TRANSLATOR       OX04245
***                                                              ***
***            MAP OF INTERNAL TRANSLATOR IDR ID TABLE           ***
***                                                              ***
INDCTR   EQU   0                        INDICATOR               OX04245
*                                       X'00' = ONE TRANSLATOR  OX04245
*                                       DESCRIPTION             OX04245
*                                       X'01' = TWO TRANSLATOR  OX04245
*                                       DESCRIPTIONS            OX04245
NAMEPTR  EQU   1                        POINTER TO CORRESPOND   OX04245
*                                       ENTRY IN TRANS IDR DATA OX04245
*                                       TABLE                   OX04245
YYDDD    EQU   3                        DATE OF TRANSLATION     OX04245
YYDDD2   EQU   6                        2ND DATE OF TRANSLATION OX04245
         EJECT ,                                                 S21016
APT4     DS   XL1       ALL PURPOSE INDICATOR                    S01904
*
*INITIAL  VALUE=0     BIT0     TABLES INITIALLY ALLOCATED        S01904
*INITIAL  VALUE=0     BIT1     TABLES REALLOCATED                S01904
*INITIAL  VALUE=0     BIT2     INTERMEDIATE PASS PROCESSING      S01904
*INITIAL  VALUE=0     BIT3     SECOND PASS PROCESSING            S01904
*INITIAL  VALUE=0     BIT4     ORDERING REQUIRED                 S01904
*INITIAL  VALUE=0     BIT5     PAGE BOUNDARY ALIGNMENT REQUIRED  S01904
*INITIAL  VALUE=0     BIT6     ALIGN ON 2K PAGE BOUNDARY         S01904
*INITIAL  VALUE=0     BIT7     SPARE                             S01904
*
*THE FOLLOWING ARE THE SYMBOLS USED IN REFERENCING APT4
REALOCTE EQU   X'C0'    ALL ALLOCATION DONE                      S01904
INALOCTD EQU   X'80'    TABLES INITIALLY ALLOCATED               S01904
REALOCTD EQU   X'40'    TABLES REALLOCATED                       S01904
INTRPS   EQU   X'20'    INTERMEDIATE PASS PROCESSING             S01904
SCDPS    EQU   X'10'    SECOND PASS PROCESSING                   S01904
ORDERR   EQU   X'08'    ORDERING REQUIRED                        S01904
PAGEE    EQU   X'04'    PAGE ALIGNMENT REQUIRED                  S01904
ALIGN2   EQU   X'02'    ALIGN OF 2K PAGE BOUNDARY                S01904
*
         SPACE 3
*
MAXBF    DC    H'40'          MAXIMUM BLOCKING FACTOR
*
         SPACE 2
***
***   I/O CONTROL BLOCKS FOR BUFFER LOCATIONS AND CAPACITIES        ***
***
HEWLCRBB DC    A(DECBLIB)          ADDRESS OF SYSLIB DECB
         DC    F'0'                1ST LIBRARY BUFFER
         DC    F'0'                2ND LIBRARY BUFFER
         DC    H'0'                BLKSIZE
         DC    H'80'               LRECL
         DC    H'1'                BLKFCTR
         DC    H'1'                NUMBER OF RECORDS LEFT IN BUFFER
         DC    F'0'                ADDRESS OF CURRENT RECORD
         DC    X'80000000'         READSW SET TO FIRST READ
*
HEWLCRBN DC    A(DECBLIN)          ADDRESS OF SYSLIN DECB
         DC    F'0'                1ST SYSLIN BUFFER
         DC    F'0'                2ND SYSLIN BUFFER
         DC    H'0'                BLKSIZE
         DC    H'80'               LRECL
         DC    H'1'                BLKFCTR
         DC    H'1'                NUMBER OF RECORDS LEFT IN BUFFER
         DC    F'0'                ADDRESS OF CURRENT RECORD
         DC    X'80000000'         READSW SET TO FIRST READ
*
         AIF   ('&PARM' EQ 'A').DC9
HEWLCWBB  DS  F
         AGO   .DC10
.DC9     ANOP
HEWLCWBB DC    A(HEWLCPDB)        ADDRESS OF SYSPRINT DCB
.DC10    ANOP
         DC    F'0'                1ST SYSPRINT BUFFER
         DC    F'0'                2ND SYSPRINT BUFFER
         DC    H'0'                BLKSIZE
         DC    H'121'              LRECL
         DC    H'1'                BLKFCTR
         DC    H'1'                NUMBER OF RECORDS LEFT IN BUFFER
         DC    F'0'                ADDRESS OF CURRENT RECORD
         DC    X'80000000'         WRITESW SET TO FIRST WRITE
*
         SPACE 2
RLDOUT1  DC    F'0'           ADDR OF FIRST RLD OUTPUT BUFFER-1ST PASS
RLDINBF1 EQU   RLDOUT1        ADDR OF FIRST RLD INPUT BUFFER-2ND PASS
RLDOUT2  DC    F'0'           ADDR OF SECOND RLD OUTPUT BUFFER-1ST PASS
RLDINBF2 EQU   RLDOUT2        ADDR OF SECOND RLD INPUT BUFFER-2ND PASS
TXTBFBEG DC    F'0'           ADDR OF START OF TEXT BUFFER
TXTBFEND DC    F'0'           ADDR OF END OF TEXT BUFFER
MULTSIZE DC    F'0'           SIZE OF SYSLMOD MULTIPLICITY-OR RECORD
UT1SIZE  DC    F'0'           SIZE OF SYSUT1 RECORD
SZSYSUT1 DC    F'0'           SYSUT1 MAX. NUMBER BYTES PER TRACK
RLDSIZE  DC    F'0'           SIZE OF EACH RLD BUFFER 1ST PASS-IN
*                             2ND PASS-OUT
VALUE1   DC    F'0'           SIZE VALUE1 FOR LE MAX. ALLOWABLE STORAGE
VALUE2   DC    F'0'           SIZE VALUE2 FOR LE LOAD MODULE BUFFER
MSGONE   DC    X'00000000'    INDICATES 1ST MESSAGE FROM MOPT
MSGTWO   DC    X'00000000'    INDICATES 2ND MESSAGE FROM MOPT
MSGTHREE DC    X'00000000'    INDICATES 3RD MESSAGE FROM MOPT
*
HEWLCLAC DC    A(HEWLCRBN)    ADDRESS OF CURRENT READ BLOCK
         SPACE 2
         DS    0F
         AIF   ('&PARM' EQ 'A').DC7
         READ  DECBLIN,SF,HEWLKLED,,,MF=L
*
         READ  DECBLIB,SF,HEWLCLDB,,,MF=L   CREATE DECB FOR SYSLIB
         AGO   .DC8
.DC7     ANOP
         READ  DECBLIN,SF,HEWLCSDB,,,MF=L  CREATE DECB FOR SYSLIN
*
         READ  DECBLIB,SF,HEWLFLDB,,,MF=L        CREATE DECB FOR SYSLIB
.DC8     ANOP
         DS    0F
         SPACE 3
******************************************************************
COREADR  DS   F    ADDRESS OF STORAGE AREA OBTAINED THROUGH GETMAIN
CORELEN  DS   F    LENGTH OF STORAGE AREA OBTAINED
BRNCHSV  DS   16F  SAVE AREA
APTAPF   DS   0CL2       DEFAULT LGTH AND AUTH CODE              Y01048
APTAPFCT DS   CL1        FOR THIS LKED STEP                      Y01048
APTAPFAC DS   CL1        ONE BYTE LGTH & ONE BYTE CODE           Y01048
PDSAPF   DS   0CL2       CURRENT AUTH CODE FOR THIS              Y01048
PDSAPFCT DS   CL1        ITERATION OF THE LINK EDIT              Y01048
PDSAPFAC DS   CL1        CAN BE CHANGED BY SETCODE               Y01048
         DC    C'MAPT'        END OF HEWLFAPT INDICATOR
***********************************************************************
*                                ------------                         *
*            CODE GENERATION FOR - 10/02/73 - HEWAPT MACRO ENDS       *
*                                ------------                         *
***********************************************************************
         MEND
         TITLE    'HEWLFFNL  FINAL PROCESSOR OF LINKAGE EDITOR'
***********************************************************************
*FUNCTION/OPERATION: THIS MODULE PROVIDES THE FOLLOWING FUNCTIONS-    *
* 1.IF THE PROGRAM IS IN OVERLAY, THE 'NOTE LIST', A LIST OF DISK TTRS*
*   ARE WRITTEN AT THE END OF THE DATA SET AND ITS TTR IS PLACED IN   *
*   THE PDS DIRECTORY. THE TTRS ARE THE DISK ADDRESSES OF EACH SEGMENT*
* 2.THE PDS DIRECTORY IS COMPLETED-THAT IS THE NAME IS PLACED IN THE  *
*   DIRECTORY FROM EITHER THE NAME CARD, THE DEB, OR 'TEMPNAME' IS    *
*   USED. THE MEMBER IS THEN STOWED--EITHER WITH REPLACE OR ADD AS    *
*   SPECIFIED BY THE NAME CARD OR IN THE DEB.                         *
* 3.IF THERE ALIAS NAMES TO BE STOWED, THIS IS ACCOMPLISHED NEXT      *
* 4.IF THE MODULE HAS BEEN DOWNGRADED--THAT IS GONE FROM REENTRANT TO *
*   REUSABLE OR FROM REUSABLE TO NOT REUSABLE OR FROM EXECUTABLE TO   *
*   NOT EXECUTABLE, OR TO NOT REFRESHABLE, THIS IS PRINTED.
* 5.IF ANY IEWXXXS CODE HAD BEEN PRINTED, A DIRECTORY CORRESPONDING TO*
*   THE CODE WILL BE PRINTED TO EXPLAIN IT.                           *
*   IF MAP OR XREF WAS SPECIFIED AND THERE ARE ESDS, THE MAP/XREF     *
*   PROCESSOR IS CALLED TO PRODUCE THE PROPER OUTPUT                  *
* 7.IF THE END OF INPUT WAS NOT ON, PROCESSING  WOULD BE RETURNED FOR *
*   ANOTHER RUN THROUGH THE EDITOR.  IF IT IS END OF INPUT, CONTROL   *
*   WILL BE RETURNED TO THE CALLER AFTER ALL FILES ARE CLOSED.        *
* 8.THIS ROUTINE ALSO CONTAINS THE SYCHRONOUS ERROR EXIT. WHEN ENTERED*
*   VIA IOCS, THE FILE NAME IS PRINTED, ALL FILES CLOSED AND RETURN IS*
*   GIVEN TO THE CALLER  A CONCODE IS PASSED IN REGISTER 15           *
*                                                                     *
*                                                                     *
*                                                                     *
*ENTRY POINTS:                                                        *
*                                                                     *
*    HEWLFFNL--ENTERED FOR NORMAL PROCESSING                          *
*                                              L   15,=V(HEWLFFNL)    *
*                                               BCR  15,15            *
*                                                                     *
*    HEWLCFAB--ENTERED FOR TERMINATING PROCESSING                     *
*                                               L    15,=V(HEWLCFAB)  *
*                                               BCR  15,15            *
*                                                                     *
*    HEWLFSNX--ENTERED FOR SYNCHRONOUS FILE ERROR EXIT                *
*                                               L    15,=V(HEWLCSNX)  *
*                                               BCR  15,15            *
*                                                                     *
*                                                                     *
*INPUT:  PDS DIRECTORY IN THE ALL PURPOSE TABLE (SEE HEWLKAPT)        *
*        TTR NOTE LIST IN THE ALL PURPOSE TABLE (SEE HEWLKAPT)        *
*        DEB -STANDARD FORMAT OF OUTPUT FILE USED TO STOW             *
*        INDICATORS IN THE ALL PURPOSE TABLE                          *
*        ALIAS TABLE--EACH ENTRY IS TEN BYTES IN LENGTH               *
*                     FIRST EIGHT BYTES IS ALIAS NAME                 *
*                     LAST TWO BYTES ARE AN ID OF THE HALF ESD TABLE  *
*                                                                     *
*                                                                     *
*OUTPUT: DISK USED FOR STOW OF DIRECTORY AND WRITING THE NOTE LIST    *
*        (SEE PDS DIRECTORY IN ALL PURPOSE TABLE)                     *
*        PRINTED OUT PUT TO INDICATE MEMBER STOWED                    *
*                                                                     *
*                                                                     *
*                                                                     *
*EXTERNAL ROUTINES: N/A                                               *
*                                                                     *
*                                                                     *
*                                                                     *
*EXITS-NORMAL: AT END OF INPUT, ALL FILES ARE CLOSED, REGISTERS ARE   *
*              RESTORE, CONCODE PLACED IN REGISTER 15 AND A BRANCH    *
*              BACK ON REGISTER 14                                    *
*              AT NAME CARD BUT NOT END OF INPUT RETURN IS GIVEN TO   *
*              LINKEDIT INIILIZER FOR MORE INPUT                      *
*                                                                     *
*EXITS-ERROR:  WHEN EITHER SYCHRONEOUS ERROR EXIT OR TERMINATION ENTRY*
*              (FNALAB), RETURN TO CALLER WITH CONCODE OF 16 IN REG 15*
*              OTHER RETURNS, NOT NORMAL CAN HAVE REGULAR CONCODES OF *
*               12,8, OR 4 IN REGISTER 15.                            *
*                                                                     *
*TABLES/WORK AREAS: PDS DIRECTORY USED TO STOW - FORMAT IN ALL PURPOSE*
*                      TABLE                                          *
*                   TTR NOTE LIST- 4 BYTES PER ENTRY EACH CONTAINING A*
*                      TTR CORRESPONDING TO THE START OF A SEGMENT    *
*                                                                     *
*                                                                     *
*                                                                     *
*ATTRIBUTES: REUSABLE                                                 *
*                                                                     *
*                                                                     *
*NOTES:  THE MODULE CAN BE USED IN LEVEL E AND F  LINKAGE EDITOR      *
*        HOWEVER, DESIGN OF MODULE WAS USING LEVEL E ALL PURPOSE      *
*        TABLE. WHEN USING FOR LEVEL F OFFSETS SHOULD BE CHECKED      *
*                                                                     *
***********************************************************************
HEWLFFNL CSECT
**********************************************************************
*014630-014660,031150,031220-031280                              S01904
*020220-80,031284-356,049020-92,067420-80,068420-40,070620-40,   Y01048
*072120                                                          Y01048
*A064200                                                         A51444
*A063000                                                         A49330
*A023200,A040200,A042500,A072200                                 A52450
*A032004-032020,C032100,A032120,A034820-034840,C034900,A034920  OY00359
*A072280-072292                                                 OY00359
*A030920,A031353,A037320                                         YM5552
*A01090001,C01990000,C02000000,C02010000,A02350010-02350190,    GETE-AT
*A06620010-06620040,C06650000,A06650010,A06680010,C06710000,    GETE-AT
*A06710010A07219010-07219020                                    GETE-AT
*                                                       OX04280,OY03413
*                                                               XA05438
*                                                               OZ01416
**********************************************************************
         EXTRN HEWLFBTP
         ENTRY HEWLCFNI
         ENTRY HEWLCSNX
         ENTRY HEWLCEOI
         ENTRY HEWLCFAB
         EXTRN HEWLCSDB
         EXTRN HEWLCMDB
         EXTRN HEWLCUDB
         EXTRN HEWLCPDB
         EXTRN HEWLTMDB
         EXTRN HEWLFLDB
         EXTRN ENQNAME
         EXTRN MINOR
         EXTRN JFCBADDR                ADDRESS OF SYSLMOD JFCB
         EXTRN APTXLIST           ADDRESS OF SYSLMOD EXIT LIST  GETE-AT
* REGISTER ASSIGNMENTS IN FINAL PROCESSOR
REG0     EQU   0
R0       EQU   0
R1       EQU   1
REG1     EQU   1
TTRREG   EQU   1
REG2     EQU   2      REGISTER 2
APT      EQU   2         ALL PURPOSE TABLE
PDSDIREG EQU   2         ADDRESS OF PDS DIRECTORY
DCBREG   EQU   3         DCB ADDRESS REGISTER
SYSLIN   EQU   3         REGISTER 3
SYSLMOD  EQU   4         REGISTER 4
DEBNPRES EQU   4         OFFSET IN DEB TO SEE IF NAME PRESENT
NREG     EQU   4
TEMP1    EQU   5
WRTADR   EQU   5
SYSUT1   EQU   5         REGISTER 5
SYSPRINT EQU   6         REGISTER 6
WRTBYTES EQU   6
TEMP2    EQU   6
MSGADD   EQU   6             ADDR OF MESSAGE
MSGLNG   EQU   7             LENGTH OF MESSAGE
TEMP4    EQU   7
DEBREG   EQU   7
SYSLIB   EQU   7
RET1     EQU   8
RETADD   EQU   8             RETURN ADDRESS
TOTLNG   EQU   9             TOTAL MESAGE LENGTH
REG9     EQU   9
PRTREG   EQU   10
TEMP3    EQU   11
DEBXRG   EQU   6                      BPAM EXTEN PTR   OX04280,OY03413
BASE     EQU   12        BASE REGISTER
SAVEREG  EQU   13
PASSREG  EQU   14
RETRN2   EQU   14
ERCODE   EQU   15
GOTOR    EQU   15       GO TO REGISTER
SSIPRES  EQU   X'10'                   PDSE12, SSI PRESENT       S01904
PAGEING  EQU   X'20'                   PDSE12, PAGING            S01904
SCNALOV  EQU   X'4F'     C-BYTE SCATTER-NO ALIAS--SAVE FOR OVERLAY
BKNALNV  EQU   X'2B'     C-BYTE BLOCK-NO ALIAS--NO OVERLAY
SCALOV   EQU   X'D4'     C-BYTE FOR SCATTER, ALIAS, REUS OR RENT
BKALNV   EQU   X'B0'     C-BYTE FOR BLK, ALIAS, REUS, OR RENT
BKALOV   EQU   X'D0'     C-BYTE FOR OVLY, ALIAS, RENT OR REUS
OVLYCBT  EQU   X'4B'     C-BYTE FOR OVERLAY BUT NOT ALIAS
BKNTTR   EQU   X'0B'    C-BYTE BLOCK NO TTR'S IN PDS
NONAME   EQU   X'00'
TNAME    EQU   X'01'
REPLACE  EQU   X'10'     REPLACE MEMBER
NAMECARD EQU   X'C0'    NAME RECEIVED FROM NAME CARD OR PARM LIST
ALBPE    EQU   X'0A'     NUMBER OF BYTES PER ENTRY IN ALIAS TABLE
DEBOFST  EQU   X'2C'     OFFSET IN DCB OF SYSLMOD OF DEB ADDRESS
DEBNEXT  EQU   X'10'     OFFSET IN DEB OF NUMBER OF EXTENTS
DEBESCL  EQU   X'1C'     OFFSET IN DEB OF EXTENTS SCALING FACTOR
DEBSEXT  EQU   X'20'     OFFSET OF START OF EXTENTS IN DEB
DCBIOBAD EQU   X'1C'     OFFSET IN DCB OF IOB ADDRESS
DEBTYSTO EQU   X'08'     OFFSET IN DEB OF STOW TYPE MODIFIER
MODSTO   EQU   X'80'     STOW--ADD INDICATOR
OLDSTO   EQU   X'40'     STOW--REPLACE INDICATOR
NEWSTO   EQU   X'C0'     STOW--ADD INDICATOR
RETRY    EQU   X'02'     RETRY INDICATOR TO STOW(A) AFTER STOW (R)
GOODSTOW EQU   X'FF'     MASK FOR TESTING GOOD STOW
EXISTS   EQU   X'04'     NAME ALREADY EXIST IN PDS DIRECTORY
NOTIN    EQU   X'08'     NAME NOT FOUND IN DIRECTORY
NOSPACE  EQU   X'0C'     NO SPACE LEFT IN PDS DIRECTORY
PERMACC  EQU   X'10'     PERMANENT I/O ERROR WHEN ACCESSING DIRECTORY
ANSCOV   EQU   X'DB'    MASK TO CLEAR PDS BITS FOR OVLY-SCTR NO TXT
SYMCDPRS EQU   X'04'    SYM CARDS PRESENT INDICATOR
REEN     EQU   X'80'     REENTERANT ATTRIBUTE
REUS     EQU   X'40'     REUSABLE ATTRIBUTE
REFR     EQU   X'01'         REFRESHABLE BIT
OVLY     EQU   X'20'     OVERLAY ATTRIBUTE
SCTR     EQU   X'04'     SCATTER ATTRIBUTE
RAR      EQU   X'C0'     REENTERANT AND REUSABLE ATTRIBUTE
XREF     EQU   X'40'     CROSS-REFERENCE TABLE REQUEST BIT
EOI      EQU   X'20'     END OF INPUT
BOTH     EQU   X'03'
LR       EQU   X'03'
SD       EQU   X'00'
XFOMP    EQU   X'60'    MAP AND XREF INDICATORS
DCBCIND2 EQU   X'3D'    OFFSET FOR INDICATORES IN SYSLMOD DCB
DCBRELAD EQU   X'00'
OPENFLAG EQU   X'30'     POSITION OF OPEN FLAGS IN DCB
OPENBIT  EQU   X'10'     BIT INDICATE OPEN DCB
DCBOFLGS EQU   X'30'                   DCB OFFSET               XA05438
DCBOFLWR EQU   X'80'                   WRITE BIT MASK           XA05438
TRBALLT  EQU   X'02'     DCB TRACK BAL LENGTH                   OZ01416
DCBTRBAL EQU   X'12'     DCB TRACK BALANCE                      OZ01416
ALIASIND EQU   X'80'
MAXLINEC EQU   55
RESTORE  EQU   X'8B'                   IMMEDIATE SKIP TO CHANNEL 1
TNL2     EQU   X'F4'     OFFSET FOR TEXT NOTE LIST 2
OFF      EQU   X'00'    CLEAR INDICATORS
BMDONE   EQU   X'08'       IND THAT BIT MAP HAS BEEN PROCESSED
BMOFF    EQU   X'F7'       MASK TO TURN OFF BIT MAP DONE IND
CNT1     EQU   45       BYTE COUNT IN HALF-MESSAGE 1
CNT2     EQU   47       BYTE COUNT IN HALF-MESSAGE 2
CNT3     EQU   57       BYTE COUNT IN HALF-MESSAGE 3
CNT4     EQU   X'15'    BYTE COUNT IN HALF-MESSAGE 4
CNT5     EQU   X'11'    BYTE COUNT IN HALF-MESSAGE 5             Y01048
LMSK     EQU   9        LENGTH OF MASK                           Y01048
LEDT     EQU   10       LENGTH OF EDIT                           Y01048
DEDT     EQU   22       DISP INTO MESG START EDIT                Y01048
DCBDDNAM EQU   X'28'    OFFSET IN DCB OF DDNAME
DISPSV1  EQU   X'24'          DISPOSITION AND SEVERITY OF MESG 29
ERMSG1   EQU   29             MESSAGE NUMBER 29
DISPSV2  EQU   X'24'          DISPOSITION AND SEVERITY OF MESSAGE 40
ERMSG2   EQU   40             MSG NUMBER 40
DISPSV3  EQU   X'24'          DISPOSITION AND SEVERITY FOR 39
ERMSG3   EQU   39             MSG NUMBER 39
DISPSV4  EQU   X'21'               DISPOSITION AND SEVERITY FOR 42
ERMSG4   EQU   42                  MESG NUMBER 42
DISPSV5  EQU   X'22'
ERMSG5   EQU   41
DISPSV6  EQU   X'22'
ERMSG6   EQU   50
DISPSV7  EQU   X'23'                    DISPOSITION AND SEVERITY
ERMSG7   EQU   54                       ERROR MESSAGE NUMBER
NOSTRGE  EQU   X'18'                   NOT ENOUGH CORE FOR STOW  S21016
ERMSG71  EQU   X'2447'                 ERROR MSG. FOR STOW COMP. S21016
*                                      CODE OF X'18' (NO CORE)   S21016
SETSSI   EQU   X'10'          INDICATION THAT SSI RECEIVED
FSSI     EQU   X'08'          INDICATOR SSI DONE
OSSI     EQU   X'F7'       CLEAR SSI DONE INDICATION
SETAPF   EQU   X'80'                   APF DONE INDICATOR        YM2054
APFOFF   EQU   X'7F'                   CLEAR APF DONE INDICATOR  YM2054
EPEZ     EQU   X'20'          ENTRY POINT EQ ZERO
SUTTR    EQU   X'100'             TR FOR REPOSITIONING SYSUT1
BTMPF    EQU   X'10F'    OFFSET FOR FINAL PROC ERROR MSGS OF SVER 4
FNM3940  EQU   X'C0'     BITS FOR MSGS 40 AND 39
P2M1     EQU   X'01'          SECOND PASS MSG 1
P2M2     EQU   X'02'          SECOND PASS MSG 2
P2M1CD   EQU   X'201'         CODE FOR ERDIAG  MSG 1
P2M2CD   EQU   X'202'         CODE FOR ERDIAG  MSG 2
ATCK     EQU   X'C2'                    MASK FOR SAVED ATTRIBUTES
BLANK    EQU   C' '          BLANK FOR PRINT
EXEC     EQU   X'02'         EXECUTABLE BIT
TERM     EQU   X'02'                   TERM SWITCH IN NEWSW
ERMSG73  EQU   X'0149'                 ERROR MESSAGE 731         A52450
ERMSG58  EQU   X'013A'                 ERR MSG 58       OX04280,OY03413
R14      EQU   14                      GEN REG 14       OX04280,OY03413
R15      EQU   15                      GEN REG 15       OX04280,OY03413
         USING *+2,BASE
         BALR  BASE,0
         USING APTDSECT,APT   ESTABLISH ADDRESSIBILITY FOR APT
         GETMAIN EU,LV=200,A=LMODJFCB  GETMAIN AN AREA FOR JFCB GETE-AT
         L     R1,XLSTADDR        GET SYSLMOD EXIT LIST ADDR    GETE-AT
         MVC   5(3,R1),LMODJFCB+1 MOVE ADDR INTO EXIT LIST      GETE-AT
         L     SYSLMOD,DCBADRS2   LOAD ADDRESS OF SYSLMOD DCB   GETE-AT
         RDJFCB ((SYSLMOD))       READ SYSLMOD JFCB             GETE-AT
         L     R1,LMODJFCB        R1 = JFCB                     GETE-AT
         MVC   WORKDSN,0(R1)      MOVE DSNAME INTO WORK FIELD   GETE-AT
         MVC   WORKVOL,118(R1)    MOVE VOLSER INTO WORK FIELD   GETE-AT
         LA    R1,WORKDSN         R1 = START OF DSNAME          GETE-AT
         LA    R0,44              R0 = MAX LENGTH OF DSNAME     GETE-AT
SEARCHB  CLI   0(R1),C' '         IS THIS A SPACE /Q            GETE-AT
         BE    MOVEDSN            YES - THEN GET OUT OF LOOP    GETE-AT
         LA    R1,1(R1)           UP POINTER                    GETE-AT
         BCT   R0,SEARCHB         REPEAT TILLE END OF DSNAME    GETE-AT
MOVEDSN  MVC   0(10,R1),ONVOL     MOVE VOLSER TO MESSAGE        GETE-AT
         MVC   MESG1DSN,MESGDSN   SET UP DSNAME IN MESG1        GETE-AT
         MVC   MESG2DSN,MESGDSN   SET UP DSNAME IN MESG2        GETE-AT
         MVC   MESG3DSN,MESGDSN   SET UP DSNAME IN MESG3        GETE-AT
         FREEMAIN E,LV=200,A=LMODJFCB  FREE JFCB                GETE-AT
         B     OVERNAME            BRANCH AROUND MODULE IDENT  @ZA51314
DATE     DC    C'04/28/81 OZ51314' DATE/APAR                   @ZA51314
MODID    DC    C'HEWLFFNL',0H'0'   MOD ID                      @ZA51314
OVERNAME NI    FNLIND,OFF    CLEAR INTERNAL INDICATORS         @ZA51314
         NI    APFIND,OFF              CLEAR APF INDICATORS      YM2054
         TM    BITMAP+7,P2M1       IS SECOND PASS MESSAGE 1 ON
         BC    8,FNL1A             NO-BY PASS
         LA    REG0,P2M1CD(REG0)   PUT IN ERROR CODE
         L     GOTOR,ERDIG         LOAD ADDRESS OF ERDIG
         BALR  RETRN2,GOTOR        GOTO ERROR LOG
FNL1A    TM    BITMAP+7,P2M2       IS SECOND PASS MSG 2 BIT ON
         BC    8,FNL2A             NO- BY PASS
         LA    REG0,P2M2CD(REG0)   PUT IN ERROR CODE
         L     GOTOR,ERDIG         LOAD ADDRESS OF ERDIG
         BALR  RETRN2,GOTOR        GO TO LOG
FNL2A    SR    TEMP1,TEMP1             CLEAR REG
         ST    TEMP1,PDSE2         CLEAR TTRC
         CH    TEMP1,ENCDC         IS ESD EMPTY
         BC    8,FNL101A     YES--GO SEE IF ANY SYMS PRESENT
         CH    TEMP1,ENTOC         IS THERE ANY TEXT
         BC    8,FNL102      NO--GO TO CLEAR IND FOR OVLY-SCTR
         TM    PDSE7,OVLY          IS THE LOAD MODULE IN OVERLAY
         BC    1,FNL100            YES-GO TO WRITE NOTE LIST
         TM    PDSE7,SCTR          IS LOAD MODULE IN SCATTER
         BC    1,FNL200            YES-GO TO PLACE IN PROPER 'C' BYTE
         OI    PDSE3,BKNALNV       BLOCK-NO-ALIAS-NO OVERLAY C BYTE
         BC    15,FNL300           GO TO GET NAME FOR MEMBER
FNL200   OI    PDSE3,SCNALOV       MODULE IN DCTR SET C BYTE X'4F'
         BC    15,FNL300           GO TO GET NAME FOR MEMBER
FNL101A  TM    PDSE8,SYMCDPRS      ARE SYM CARD PRESENT
         BZ    FNLCN2B             DON'T STOW                   ZA01401
FNL102   OI    PDSE3,BKNTTR        NO TTR'S-STOW BECAUSE SOME OUTPUT
         NI    PDSE7,ANSCOV        CLEAR OVERLAY-SCATTER IS ON
         BC    15,FNL300     GO TO GET NAME FOR MEMBER
FNL100   OI    PDSE3,OVLYCBT       MODULE IN OVERLAY
         L     PRTREG,TTRLIST      GET ADR-4 OF NOTE LIST
         LA    PRTREG,4(PRTREG)    UP BY 4 TO GET RIGHT ADRESS
         LH    REG9,CSNO           PUT IN NUMBER OF TTRS
         SLL   REG9,2                   MULTIPLY BY FOUR
         L     DCBREG,DCBADRS2    LOAD ADR OF SYSLMOD
         BAL   RET1,FNLP02A        GO TO WRITE
         NOTE  (DCBREG)
         IC    TTRREG,CSNO+1       INSERT NUMBER OF ENTRIES IN TTR LIST
         ST    TTRREG,PDSE5        STORE TTR INTO PDS ENTRY 5
FNL300   L     TEMP3,ADJFCB            LOAD JFCBADDR INTO REG
         NI    0(TEMP3),X'00'          INIT JFCBADDR HI-ORD BYTE
         L     DCBREG,DCBADRS2         LOAD ADDRESS OF SYSLMOD
         L     DEBREG,DEBOFST(DCBREG)  GET DEB ADDRESS
         SR    TEMP1,TEMP1             CLEAR            OZ04280,OY03413
         SR    TEMP2,TEMP2             CLEAR
         IC    TEMP1,DEBNEXT(DEBREG)   LOAD NUMBER OF EXTENTS
         IC    TEMP2,DEBESCL(DEBREG)   LOAD SCALING FACTOR
         SLL   TEMP1,0(TEMP2)          MULTIPLY
         LA    DEBXRG,DEBSEXT(TEMP1,DEBREG)  DEBREG NOW CONTAINS ADR
         TM    APT3,NAMECARD           IS MEM NAME ON NAME CARD
         BNZ   FNL294                  YES--BRANCH
         CLI   DEBNPRES(DEBREG),NONAME IS MEM NAME IN THE DEB
         BNE   FNL404                  YES--BRANCH
         B     FNL101                  NO--GO TO USE TEMPNAME
FNL294   CLI   DEBNPRES(DEBREG),NONAME IS MEM NAME IN THE DEB
         BE    FNLMVC                  NO--BRANCH
         CLC   0(8,DEBXRG),PDSE1       ARE NAMES SAME?  OX04280,OY03413
         BE    FNLMVC                  YES--BRANCH
         OI    0(TEMP3),X'40'          PDS&DEB MEMNAMES CONFLICT
FNLMVC   MVC  MESG1+5(8),PDSE1     ---SET UP PRT IMAGE 1
         MVC  MESG2+5(8),PDSE1     ---SET UP PRT IMAGE 2
         MVC  MESG3+5(8),PDSE1     ---SET UP PRT IMAGE 3
         MVC  MESG4+5(8),PDSE1     ---SET UP PRT IMAGE 4
FNL301   TM    FNLIND,FSSI         HAS SSI BEEN MOVED FOR THIS STOW
         BC    1,FNL301B           YES--BYPASS
         TM    APT2,SETSSI         NO-ARE THERE ANY SSI INDICATORS
         BC    8,FNL301B           NO--BYPASS
         SR    REG1,REG1      CLEAR REG 1
         IC    REG1,PDSE3          INSERT 'C' BYTE
         LA    REG1,2(0,REG1)          ADD 2 (TWO ADDITIONAL HALF WDS)
         STC   REG1,PDSE3          UPDATE C  BYTE
         LA    REG1,4(0,REG1)     INCREMENT BY 4-MORE FOR PDS NAME
         LH    NREG,PSDIND             LOAD IN C-BYTE MASK
         NR    REG1,NREG     CLEAR BYTE COUNT IN C-BYTE
         SLL   REG1,1              DOUBLE
         AR    REG1,REG2           ADD BEGINNING OF PDS DIRECTORY
         AH    REG1,EIGHT          BUMP TO START OF PDS ENTRY    YM5552
         MVC   0(4,REG1),SSI       MOVE 4 BYTES OF SSI
         OI    FNLIND,FSSI         SET SSI PROCESSED
         OI    PDSE12,SSIPRES          TURN ON PDS BIT           S01904
FNL301B  OI    PDSE8,EPEZ          SET EDITOR ASGN EP=0 (BIT=1)
         TM    APT4,PAGEE              PAGING IN EFFECT          S01904
         BZ    FNL301BB                NO                        S01904
         OI    PDSE12,PAGEING          YES, TURN ON PDS BIT      S01904
FNL301BB EQU   *                                                 S01904
         TM    APFIND,SETAPF           IS APF ALREADY DONE?      YM2054
         BO    FNL301BD                IF SO, BYPASS             YM2054
         OI    APFIND,SETAPF           IF NOT, SET THE INDICATOR YM2054
         SR    REG1,REG1           CLEAR REG1                    Y01048
         IC    REG1,PDSE3          INSERT 'C' BYTE               Y01048
         LA    REG1,1(REG1)        ADD 1 HALFWD FOR AUTH CODE    Y01048
         STC   REG1,PDSE3          UPDATE 'C' BYTE               Y01048
         LA    REG1,5(REG1)        INCREMENT FOR PDS NAME + 1    Y01048
         LH    NREG,PSDIND         LOAD IN C-BYTE MASK           Y01048
         NR    REG1,NREG           CLEAR BYTE CT IN C BYTE       Y01048
         SLL   REG1,1              DOUBLE                        Y01048
         TM    APT2,SETSSI         IS SSI PRESENT                Y01048
         BO    FNL301BC            YES, REG1 IS OK               Y01048
         TM    PDSE3,ALIASIND      IS ALIAS SPECIFIED            Y01048
         BO    FNL301BC            YES, REG1 IS OK               Y01048
         BCTR  REG1,0              NO, DECREMENT REG1 BY 1       Y01048
FNL301BC EQU   *                   PROCESS APF INFO              Y01048
         AR    REG1,REG2           ADD TO PDS DIRECTORY START    Y01048
         AH    REG1,EIGHT          BUMP TO START OF PDS ENTRY    YM5552
         MVC   0(LAPF,REG1),PDSAPF MOVE APF INFO TO PDS          Y01048
FNL301BD EQU   *                       BYPASS APF PROCESSING     YM2054
         NC    PDSE11(3),PDSE11    IS ASGN EP EQU ZERO
         BC    8,FNL301A               YES--GO TO STOW
         NI    PDSE8,X'DF'         NO SET BIT OFF (=0)
FNL301A  LA    SAVEREG,SPACES      LOAD REGISTER SAVE AREA
         L     DCBREG,DCBADRS2     LOAD ADDRESS OF SYSLMOD
         TM    APT3,REPLACE        IS MODULE TO BE REPLACED
         BC    1,FNL500            YES--GO TO STOW(R)
         MVC   TTRCSAVE(4),PDSE2   SAVE THE TTRC FIELD FOR SECOND STOW
FNLSTA   EQU   *                                                OY00359
         AH    PDSDIREG,EIGHT      BUMP PAST STARTAPT STRING    OY00359
         STOW  (DCBREG),(PDSDIREG),A STOW WITH ADD              OY00359
         SH    PDSDIREG,EIGHT          POINT TO START OF APT    OY00359
FNL700   STC   ERCODE,STOWBYTE     STORE AWAY STOW RETURN CODE
         TM    PDSE3,ALIASIND      WAS ALIAS SPECIFIED
         BC    1,FNL906
         TM    STOWBYTE,GOODSTOW   WAS THERE ANY INDICATION OF ERROR
         BC    4,FNL600            BRANCH IF SOME ERROR FOUND
         TM    APT3,REPLACE        WAS REPLACE SPECIFIED
         BC    1,FNL800            YES--GO TO PRINT MESSAGE
         L     PRTREG,PRTWD1       LOAD PRINT REGISTER WITH PRINT WORD
         LA    RET1,FNL900    GO TO ALIAS CHECK AFTER PRINT
         BC    15,FNLPRTMG
FNL404   LR    REG9,DEBXRG             POINT TO NAME    OX04280,OY03413
         L     R15,ADRVLDCK            ADR VLD CHK RTN  OX04280,OY03413
         BALR  R14,R15                 GO VALIDATE NAME OX04280,OY03413
         LTR   REG9,REG9               TEST VALID NAME  OX04280,OY03413
         BZ    FNL404A                 BRANCH IF SO     OX04280,OY03413
         LA    RETRN2,FNL101           SET RTRN ON ERR  OX04280,OY03413
         L     GOTOR,ERDIG             PT TO ERR RTN    OX04280,OY03413
         LA    REG0,ERMSG58            SET ERR PARM     OX04280,OY03413
         BR    GOTOR                   EXIT TO ERR LOG  OX04280,OY03413
FNL404A  EQU   *                                        OX04280,OY03413
         MVC   PDSE1(8),0(DEBXRG)      PUT NAME IN PDS  OX04280,OY03413
         TM    DEBTYSTO(DEBREG),OLDSTO TEST IF MOD DISP OX04280,OY03413
         BZ    FNLMVC                  BRANCH IF MOD    OX04280,OY03413
         OI    APT3,REPLACE        INDICATE REPLACE
         B     FNLMVC                GO PROCESS MBR     OX04280,OY03413
* THIS MOVES TEMPNAME TO PDS DIRECTORY
FNL101B  MVC   PDSE2(4),TTRCSAVE   RESTORE THE TTRC FIELD FROM 1ST STOW
FNL101   MVC   PDSE1(8),TEMPNAME   MOVE TEMPNAME TO PDS DIRECTORY
         OI    FNLIND,TNAME             INDICATE TEMPNAME BEING USED
         BC    15,FNLMVC                GO TO SET UP MESSAGES
* STOW WITH REPLACE
FNL500   EQU   *                                                OY00359
         AH    PDSDIREG,EIGHT         BUMP PAST STARTAPT STRING OY00359
         STOW  (DCBREG),(PDSDIREG),R    STOW WITH REPLACE       OY00359
         SH    PDSDIREG,EIGHT          POINT TO START OF APT    OY00359
         BC    15,FNL700                CHECK STOW
* STOW ERROR--PRINT MESSAGE FOR TYPE ERROR
FNL600   CLI   STOWBYTE,NOSPACE         WAS ERROR NO SPACE IN DIRECTORY
         BC    8,FNL601                 YES--GO PRT ERROR
         CLI   STOWBYTE,PERMACC         WAS ERROR PERMANENT DISK ERROR
         BC    8,FNL602                 YES--GO PRT ERROR
         CLI   STOWBYTE,NOTIN           WAS ERROR NAME NOT IN DIRECTORY
         BC    8,FNL603                 YES--GO FOR PRT AND RETRY
         CLI   STOWBYTE,NOSTRGE        WAS ERR. NOT ENOUGH CORE? S21016
         BE    FNL606                  YES, GO TO PRINT MSG.     S21016
         LA    RETRN2,FNL906B     LOAD RETURN ADR TO CHECK MORE ALIASES
         TM    PDSE3,ALIASIND      WERE ALIASES BEING PROCESSED
         BC    1,FNL604           YES--GO TO ERROR PRINT
         TM    FNLIND,TNAME             HAS TEMPNAME BEEN USED
         BC    1,FNL605                 YES--GO TO PRINT MESSAGE
         LA    RETRN2,FNL101B      RETRY STOW-RESTORE TTRC FIELD -
         LH    REG0,ERCODE4        PUT ERROR CODE IN REG0
         BC    15,FNL6011          GO TO LOG
FNL601   LH    REG0,ERCODE2            PUT IN ERR CODE NO SPACE LEFT
         OI    FNLIND,FNM3940     INDICATE TYPE 4 SEVERITY
         TM    PDSE3,ALIASIND      WAS ALIAS SPECIFIED
         BC    8,FNL6011
         NI    FNLIND,X'3F'       CLEAR IND FOR TYPE 4 SEVERITY
         LH    REG0,ERCODE5        ALIAS-NO SPACE LEFT
         LA    RETRN2,FNLCN       CONTINUE BUT NO MORE STOW OF ALIAL
FNL6011  LR    TTRREG,APT          PUT ADDRESS OF SYMBOL IN REG 1
         AH    TTRREG,EIGHT        BUMP TO START OF PDS ENTRY    YM5552
         L     GOTOR,ERDIG         LOAD ERROR DIAGNOSTIC ADDRESS
         BCR   15,GOTOR       GO TO ERROR DIAGNOSTIC
FNL602   LH    REG0,ERCODE3            PERMANENT DISK ERROR
         OI    FNLIND,FNM3940     INDICATE TYPE 4 SEVERITY
         TM    PDSE3,ALIASIND      WAS ALIAS SPECIFIED
         BC    8,FNL6011
         NI    FNLIND,X'3F'       CLEAR IND FOR TYPE 4 SEVERITY
         LH    REG0,ERCODE6        ALIAS-PERMANENT DISK ERROR
         LA    RETRN2,FNLCN       CONTINUE BUT NO MORE STOW OF ALIAL
         BC    15,FNL6011
* NAME ADDED BY STOW--DID NOT EXIST
FNL603   L     PRTREG,PRTWD3       LOAD MESSAGE CNTL WD
         LA    RET1,FNL900   LOAD ADDRESS OF ALIAS SCAN
         TM    PDSE3,ALIASIND      WAS ALIAS SPECIFIED
         BC    8,FNLPRTMG
         LA    RET1,FNL906B
         BC    15,FNLPRTMG         GO TO PRINT MESSAGE
FNL605   BAL   RETRN2,NOSTOW           GO TO RESET SYSLMOD PTR
         LA    RETRN2,FNLCN2B      TEMPNAME FAILED, NO STOW     ZA01401
         NI    FNLIND,X'00'        CLEAR INDICATOR
FNL604   LH    REG0,ERCODE7     LOAD ERROR CODE IN REGISTER 0
         BC    15,FNL6011          GO TO PRT MESSAGE
FNL606   LH    REG0,ERCODE71           PUT IN ERROR CODE FOR     S21016
*                                      NOT ENOUGH CORE FOR STOW  S21016
         OI    FNLIND,FNM3940          INDICATE SEVERITY 4 ERROR S21016
         B     FNL6011                 GO TO LOG AND TERMINATE   S21016
FNL800   L     PRTREG,PRTWD2  LOAD CNTL WD FOR REPLACE MESSAGE
         LA    RET1,FNL900    PUT RETURN AT ALIAS CHECK
         BC    15,FNLPRTMG    GO TO PRINT
* THIS ROUTINE CHECKS AND STOWS ALIASES
FNL900   LH    TEMP1,ENASC         LOAD CURR NUMBER OF ALIAS ENTS
         LTR   TEMP1,TEMP1         CHECK TO SEE IF ANY PRESENT
         BC    8,FNLCN             NONE--GO TO CONTINUE
         MVC   MEMBER(8),PDSE1         SAVE MEMBER NAME          A52450
         OI    PDSE3,X'80'
         MVC   IOCT(3),PDSE11      STORE MAIN ENTRY POINT
         MVC   IOCT+3(2),PDSE16    SAVE MAIN MEMBER ID
         NI    FNLIND,OSSI   CLEAR SSI PROCESSED IND
         NI    APFIND,APFOFF           CLEAR APF DONE INDICATOR  YM2054
         NI    PDSE3,X'00'         CLEAR C BYTE
         TM    PDSE7,SCTR          IS MODULE SCATTER
         BC    1,FNL900B           YES--GO TO INSERT C BYTE
         MVC   PDSE13(3),PDSE11    SAVE MAIN MEMBER EP
         MVC   PDSE14+1(8),PDSE1   SAVE MAIN MEMBER NAME
         TM    PDSE7,OVLY          IS MODULE OVERLAY
         BC    1,FNL900C           YES--GO TO INSERT C BYTE
         OI    PDSE3,BKALNV        SET C BYTE EQU X'31'
         BC    15,FNL900A          GO TO MOVE NAME,EP
FNL900B  OI    PDSE3,SCALOV        SET C BYTE EQU TO X'34'
         MVC   PDSE17(3),PDSE11    MOVE EP TO ALAIS AREA
         MVC   PDSE18(8),PDSE1     MOVE MAIN NAME TO ALAIS AREA
         BC    15,FNL900A          GO TO MOVE NAME,EP
FNL900C  OI    PDSE3,BKALOV        SET C BYTE EQU X'51'
*    SCAN FOR ALIAS NAME IN ALIAS TABLE
FNL900A  L     TEMP2,ALAS          GET ALIAS TABLE ADDRESS
FNL902A  MVC   PDSE1(8),0(TEMP2)   MOVE MEMBER TO PDSE1
         CLC   MEMBER(8),PDSE1         ALIAS AND MEMBER SAME     A52450
         BNE   CONTINUE                NO                        A52450
         LA    R0,ERMSG73              ERROR MSG 731             A52450
         L     GOTOR,ERDIG             ADDR OF LOG               A52450
         ST    PASSREG,SAVE14          SAVE REG 14               A52450
         BALR  PASSREG,GOTOR           GO TO PRINT ERROR MSG     A52450
         L     PASSREG,SAVE14          RESTORE REG 14            A52450
         B     FNL906B                 CHECK FOR MORE ALIASES    A52450
CONTINUE EQU   *                                                 A52450
         SR    TEMP3,TEMP3
         LH    TEMP3,8(TEMP2)      GET ID POINTER
         LTR   TEMP3,TEMP3    ID EQU ZERO
         BC    8,FNL904       YES--GO TO PUT EP FROM MEMBER SAVED
         L     TEMP4,HESD          GET HALF ESD ADDRESS
         SLL   TEMP3,3           MULTIPLY BY 8 THE ID
         AR    TEMP4,TEMP3       ADD OFFSET TO START ADDRESS
         TM    PDSE7,SCTR          IS IT IN SCATTER
         BC    8,FNL907                NO--BYPASS MOVE OF ID
         MVC   PDSE16(2),6(TEMP4)  PUT ID IN SCATTER AREA
FNL907   MVC   PDSE11(3),1(TEMP4)  YES MOVE ADDRESS FOR EP
         BC    15,FNL301           GO TO STOW ALIAS
* NOT SD OR LR -- MUST PUT EP OF MEMBER NAME
FNL904   MVC   PDSE11(3),IOCT      RE-USE SAVE MAIN EP
         TM    PDSE7,SCTR          WAS SCATTER SPECIFIED
         BC    8,FNL301           NO--GO TO STOW ALIAS MEMBER
         MVC   PDSE16(2),IOCT+3    RE-USE SAVED ID
         BC    15,FNL301           GO STOW ALAIS
*  THIS  IS RETURN FROM  STOW OF ALIAS
FNL906   CLI   STOWBYTE,NOTIN  WAS NAME NOT IN DIRECTORY
         BC    8,FNL906A       YES--STOW ADDED IT-OK
         TM    STOWBYTE,GOODSTOW  WAS STOW OK
         BC    4,FNL600           NO--SOME ERROR--GO CHECK TYPE
FNL906A  MVC   MESG4+5(8),PDSE1    MOVE ALIAS NAME TO PRINT MESSAGE
         L     PRTREG,PRTWD4       LOAD CNTL WORD
         BAL   RET1,FNLPRTMG       RETURN TO CHECK MORE ALIASES AFTER
FNL906B  LA    TEMP2,10(TEMP2)     INCREMENT COUNT
         BCT   TEMP1,FNL902A       RETURN TO PROCESS NEXT ENTRY
         BC    15,FNLCN            GO TO CONTINUE
* STOW FINISHED--CONTINUE
* ROUTINE TO PRINT MESSAGES
FNLPRTMG LR    REG9,PRTREG        LOAD REG 9
         SRL   REG9,24       SHIFT OUT ADDRESS
         SLL   REG9,1        DOUBLE FOR BYTE COUNT
FNLPRTAT L     GOTOR,PRNTAD            ADDRESS OF PRINT ROUTINE
         LH    REG1,LINECNT        LOAD LINE COUNT
         BCT   REG1,FNLP02B  REDUCE COUNT BY ONE
         L     DCBREG,HEWLCWBB+20      ADDRESS OF PRINT BUFFER
         MVI   0(DCBREG),RESTORE       RESTORE PAGE
         BALR  RETRN2,GOTOR            TO PRINT ROUTINE
         LA    REG1,MAXLINEC           INITIALIZE LINECNT TO MAX
FNLP02B  STH   REG1,LINECNT        STORE BACK LINE COUNT
         L     DCBREG,HEWLCWBB+20  ADDRESS OF PRINT BUFFER
         BCTR  REG9,0                  DECREMENT COUNT BY 1
         EX    REG9,MOVE               MOVE MESSAGE TO PRINT BUFFER
         BALR  RETRN2,GOTOR
         BCR   15,RET1
MOVE     MVC   0(1,DCBREG),0(PRTREG)   EXECUTED MOVE
FNLP02A  LA    SAVEREG,SPACES     LOAD REG WITH SAVE AREA
         WRITE  PRTDECB,SF,(DCBREG),(PRTREG),(REG9)
         CHECK  PRTDECB
         BCR   15,RET1        RETURN
NOSTOW   EQU   *
* * * THIS ROUTINE RESETS SYSLMOD POINTER IF NO STOW DONE
         STM   RETRN2,REG1,SAVE4       SAVE REGS 14 - 1
         L     DCBREG,DCBADRS2         LOAD ADDR OF SYSLMOD
         L     R0,DCBRELAD(DCBREG)     PICK UP TTR FOR SYSLMOD
         IC    R0,=X'00'               ZERO OUT LAST BYTE OF TTR
         ST    R0,LASTTR               STORE TTR FOR POINT
         LA    R0,LASTTR               PICK UP ADDR OF TTR
         POINT (DCBREG),(R0)           PNT SYSLMOD TO CORRECT TTR
         OI    DCBOFLGS(DCBREG),DCBOFLWR FORCE WRITE BIT ON     XA05438
         XC    DCBTRBAL(TRBALLT,DCBREG),DCBTRBAL(DCBREG)        OZ01416
*              THIS ZEROS TRACK BALANCE.                        OZ01416
         LM    RETRN2,REG1,SAVE4       RESTORE REGS 14 - 1
         BR    RETRN2                  RETURN
*****THIS ROUTINE WILL PRINT OUT THE CHANGED ATTRIBUTES IF ANY
FNLCN    STM   MSGADD,RETADD,SPACES+8
         SR    PRTREG,PRTREG       USE AS TEMP WORK REG          Y01048
         IC    PRTREG,PDSAPFAC     GET AUTH CODE                 Y01048
         CVD   PRTREG,APFWORK      CONVERT TO PACKED FORMAT      Y01048
         MVC   MESG5A(LMSK),MASK   MOVE MASK TO OUTPUT THEN EDIT Y01048
         ED    MESG5+DEDT(LEDT),APFWORK+3                        Y01048
         L     PRTREG,PRTWD5       POINT TO MESSAGE              Y01048
         BAL   RET1,FNLPRTMG       GO PRINT MESSAGE              Y01048
         LA    RETADD,ENDMSG
         TM    PDSE7,EXEC    IS MODULE EXECUTABLE
         BC    1,TSTRENT     YES
*  GENERATE NOT EXECUTABLE MESSAGE
         LA    MSGADD,NEXEC
         LA    MSGLNG,16     LENGTH
         BC    15,STRTMSG    GENERATE HEADER MEESAGE
SETMSG   TM    PRTSW,X'01'   WAS HEADER MESSAGE GENERATESD
         BC    1,MSG1        YES
*   GENERATE HEADER MESSAGE  YES
STRTMSG  OI    PRTSW,X'01'
         L     PRTREG,HESD
         MVC   0(25,PRTREG),MODATTR    MOVE HEADR TO OUTPUT AREA
         LA    PRTREG,24(PRTREG)
         LA    TOTLNG,25
         BC    15,MSG2
MSG1     OI    PRTSW,X'03'        AND SWITCH ON
MSG2     MVC   1(17,PRTREG),0(MSGADD)
         AR    TOTLNG,MSGLNG ADD MESSAGE LENGTH TOTOTAL
         AR    PRTREG,MSGLNG
         BCR   15,RETADD     TEST NEXT OPTION
TSTRENT  TM    SAVATS,REEN   TEST FOR REENTERABLE OPTION
         BC    8,TSTREUS     NO REENTERABLE OPTION SPECIFIED
         LA    RETADD,TSTREUS
         TM    PDSE7,REEN    WAS REENTERABLE TURNED ON IN DIRECTORY
         BC    1,RENT1       REENTERABLE
*   NOT REENTERABLE MESSAGE
         LA    MSGADD,NRENT
         LA    MSGLNG,17
         BC    15,SETMSG     MOVE MESSAGE FOR OUTPUT
RENT1    LA    MSGADD,NRENT+4
         LA    MSGLNG,13
         BC    15,SETMSG
*   REUSABLE TEST
TSTREUS  TM    SAVATS,REUS   WAS REUSABLE OPTION SPECIFIED
         BC    8,TSTREFR     NO
         LA    RETADD,TSTREFR
         TM    PDSE7,REUS    WAS MODULE MARKED REUSABLE
         BC    1,REUS1       YES
*  MARK NOT REUSABLE
         LA    MSGADD,NREUS
         LA    MSGLNG,14
         BC    15,SETMSG
*        REUSALBE MESSAGE
REUS1    LA    MSGADD,NREUS+4
         LA    MSGLNG,10
         BC    15,SETMSG
TSTREFR  TM    SAVATS+1,REFR WAS REFRESHABLE MESSAGE SPECIFIED
         BC    8,ENDMSG      NO
         LA    RETADD,ENDMSG
         TM    PDSE8,REFR    IS MODULE REFRESHABLE
         BC    1,REFR1       YES
         LA    MSGADD,NREFR  NOT REFRESHABLE MESSAGE
         LA    MSGLNG,17
         BC    15,SETMSG
REFR1    LA    MSGADD,NREFR+4
         LA    MSGLNG,13
         BC    15,SETMSG
*        END OF MESSAGE
ENDMSG   TM    PRTSW,X'01'
         BC    8,FNLCN2
         MVI   0(PRTREG),C'.'          PLACE PERIOD AT END OF MESSAGE
         TM    PRTSW,X'02'             TEST FOR AND NEEDED.
         BC    8,NOAND                 NO
         LA    RETADD,4(PRTREG)
         SR    PRTREG,MSGLNG
         MVC   5(17,PRTREG),0(MSGADD)
         MVC   2(3,PRTREG),NAND
         MVI   0(RETADD),C'.'
         LA    TOTLNG,4(TOTLNG)
NOAND    L     PRTREG,HESD
FNLA05B  BAL   RET1,FNLPRTAT           GO TO PRINT
         NI    PRTSW,X'00'         CLEAR PRINT SWITCH
FNLCN2   LM    MSGADD,RETADD,SPACES+8
FNLCN2B  LA    SAVEREG,REGSA      PUT IN ADR. OF REG SAVE AREA  ZA01401
         L     DCBREG,DCBADRS2     LOAD ADDRESS OF SYSLMOD
         TM    DCBCIND2(DCBREG),X'80'     HAS STOW BEEN ISSUED
         BC    8,FNLCN3                NO--GO TO BIT MAP PROCESSOR
         TM    APT0,XREF               IS XREF SPECIFIED
         BC    8,FNLCN3                NO--GO TO BIT MAP PROCESSOR
         TM    NEWSW,X'20'             YES--ARE RLD'S IN CORE
         BC    8,FNLCN3                YES--XREF ALREADY DONE
         L     TEMP3,ADJFCB            LOAD JFCBADDR INTO REG
         TM    0(TEMP3),X'40'          PDS&DEB MEMNAMES CONFLCT?
         BZ    FNLCN2A                 NO--BRANCH
         OI    0(TEMP3),X'80'          INDICATE SYSLMOD OPEN J
* WILL BE REQUIRED IN HEWLFMAP BECAUSE RLD'S FOR XREF ARE ON
* SYSLMOD (NOT IN CORE) AND MEMBER NAME IN PDS DIRECTORY
* CONFLICTS WITH MEMBER NAME IN DEB.
FNLCN2A  L     GOTOR,LCMAPADR          LOAD ADDR OF XREF/MAP SUB
         BALR  RETRN2,GOTOR       GO TO HEWLCMAP
FNLCN3   L     GOTOR,BTMPDIAG          ADDRESS OF BIT MAP PROCESSOR
         OI    APTSWS,BMDONE           INDICATE BIT MAP DONE
         BALR  RETRN2,GOTOR
HEWLCEOI TM    APT3,EOI            IS END OF INPUT INDICATED
         BC    1,FNL150
         LA    R0,FNTTR           LOAD ADR OF TTR
         L     R1,DCBADRS3        LOAD ADR OF SYSUT1 IN REG 1
         TM    OPENFLAG(R1),OPENBIT    IS SYSUT1 OPEN
         BC    8,NOPOINT               NO--DON'T REPOSITION SYSUT1
         POINT (1),(0)   REPOSITION SYSUT1 TO REUSE SPACE
NOPOINT  NI    APTSWS,BMOFF            CLEAR BIT MAP DONE IND
         L     15,INT14AD
         BCR   15,15
FNL150   LA    15,HEWLCFAB
         BCR   15,15
         DROP  12
         USING HEWLCFAB,12
HEWLCFAB LR    BASE,GOTOR
         LA    SAVEREG,REGSA       LOAD REGISTER SAVE AREA ADR
         TM    APTSWS,BMDONE       IS THE BIT MAP DONE IND ON
         BC    1,FNALAB1
         TM    NEWSW,X'08'             IS ABORT NO PRINT SW ON
         BC    1,FNALAB3               YES--DON'T PRINT ANYTHING
         L     GOTOR,BTMPDIAG    LOSD ADR OF BIT MAP PROCESSOR
         BALR  RETRN2,GOTOR
FNALAB1  NI    APTSWS,BMOFF        CLEAR BIT MAP DONE IND
         OI    HEWLCWBB+24,X'02'   SET FLUSH BIT
         L     15,PRNTAD
         BALR  14,15
FNALAB3  L     REG0,FFCADR             ADDRESS OF HIGHEST CORE GOTTEN
         L     REG1,HEWLCRBB+4         ADDRESS OF SYSLIB BUFFER
         C     REG1,HEWLCRBB+8         COMPARE TO OTHER SYSLIB BUFFER
         BC    4,FNALAB2               TAKE THE LOWER ADDRESS
         L     REG1,HEWLCRBB+8
FNALAB2  SR    REG0,REG1               NUMBER OF BYTES TO FREE
         FREEMAIN  R,LV=(0),A=(1)
         LA    SAVEREG,REGSA
         L     SYSLMOD,DCBADRS2
         OI    DCBCIND2(SYSLMOD),MODSTO INDICATE
         LA    1,DCBADRS1         LOAD ADDR. OF DCB ADDRESSES
         TM    NEWSW,TERM         IN TSO MODE?
         BZ    TSO1               NO - BRANCH
         LA    1,DCBADRS0         CLOSE TERM DATA SET
TSO1     CLOSE MF=(E,(1))
         TM    APTSW2,SHRSYSMD         TEST IF SYSLMOD RESERVED  A49330
         BNO   OTHRDEQ                 BRANCH IF NOT             A49330
         DEQ   (ENQNAME,MINOR,44,SYSTEMS) DEQ RESERVED SYSLMOD   A49330
         B     SKIPDEQ2                PROCEED                   A49330
OTHRDEQ  EQU   *                       RESERVE DEQ BYPASS        A49330
         TM    APTSW2,ENQBIT           DISP=OLD ON SYSLMOD?      A37663
         BO    SKIPDEQ2                YES - DON'T DEQUEUE       A37663
         DEQ   (ENQNAME,MINOR,44,SYSTEM)
SKIPDEQ2 EQU   *                                                 A37663
         SR    GOTOR,GOTOR              CLEAR
         IC    GOTOR,HISEV+1       PUT IN SEVERITY
         SLL   GOTOR,2                  MULTIPLY BY FOUR
         LM    SAVEREG,RETRN2,SYSRTN
         LM    REG0,BASE,20(SAVEREG)  RESTORE REGISTERS
         BCR   15,14
         DROP  BASE
         USING HEWLCFNI,BASE
HEWLCFNI LR    BASE,GOTOR         SET UP ADDRESSABILITY
         L     BASE,FNLFAB        SET UP ADDRESSABILITY
         USING HEWLCFAB,BASE
         L     GOTOR,BTMPDIAG          GET ADDR OF DIAGNOSE RTN  A51444
         BALR  RETRN2,GOTOR            GO TO PRINT MESSAGES      A51444
         B     FNALAB1
         DROP  12
         USING HEWLCSNX,BASE
HEWLCSNX LR    BASE,GOTOR               SET UP ADDRESSABILITY
         L     SYSLMOD,DCBADRS2   GET ADR OF SYSLMOD
         TM    OPENFLAG(SYSLMOD),OPENBIT IS OPEN BIT ON
         BC    8,EXCLOSE          NO--GO RIGHT TO CLOSE FILE IN ERROR
         OI    DCBCIND2(SYSLMOD),MODSTO  INDICATE STOW DONE
EXCLOSE  L     GOTOR,FNLFAB
         BR    GOTOR                   GO TO CHECK BIT MAP AND FREE
STOWBYTE DC    X'00'
FNLIND   DC    X'00'
APFIND   DC    X'00'                   APF SUPPORT INDICATORS    YM2054
*        BIT   0             0=APF NOT YET PROCESSED FOR PDS ENTRY
*                            1=APF CODE ALREADY PLACED IN PDS ENTRY
*        BITS  1-7           RESERVED
*                                                                YM2054
         DS    0F
PSDIND   DC    X'001F'                 MASK FOR C-BYTE
INT14AD  DC    V(HEWLENAM)        RETURN ADR TO INITILIZER
LCMAPADR DC    V(HEWLFMAP)    ADCON FOR MAP AND XREF ROUTINE
PRNTAD   DC    V(HEWLEPNT)             ADDRESS OF PRINT ROUTINE
ADRVLDCK DC    V(HEWVLDCK)             ADR VLD CK RTN   OX04280,OY03413
FNLFAB   DC    A(HEWLCFAB)
         DS    0F
FNTTR    DC    X'00000100'
WORKDSN  DS    0CL44              DSNAME WORK FIELD             GETE-AT
MESGDSN  DC    CL54' '            WORK FIELD                    GETE-AT
ONVOL    DC    C' ON '            PREFIX TO VOLSER              GETE-AT
WORKVOL  DC    CL6' '             VOL SER                       GETE-AT
MESG1    DC    X'09'                   SINGLE SPACE CC
         DC    C'****          NOW ADDED TO DATA'
         DC    C' SET'
MESG1DSN DC    CL54' '                                          GETE-AT
MESG2    DC    X'09'                   SINGLE SPACE CC
         DC    C'****          NOW REPLACED IN D'
         DC    C'ATA SET '
MESG2DSN DC    CL54' '                                          GETE-AT
MESG3    DC    X'09'                   SINGLE SPACE CC
         DC    C'****          DOES NOT EXIST BU'
         DC    C'T HAS BEEN ADDED TO DATA SET'
MESG3DSN DC    CL54' '                                          GETE-AT
MESG4    DC    X'09'                   SINGLE SPACE CC
         DC    C'****          IS AN ALIAS FOR T'
         DC    C'HIS MEMBER'
MESG5    DC    X'09'               SINGLE SPACE CC               Y01048
         DC    C'AUTHORIZATION CODE IS '                         Y01048
MESG5A   DS    CL9                 ACTUAL CODE GOES HERE         Y01048
         DC    C'. '               END OF MESSAGE                Y01048
         DS    0F
BTMPDIAG DC    A(HEWLFBTP)
PRTWD1   DC    AL1(CNT1)
         DC    AL3(MESG1)          ADDRESS OF  MESSAGE  1
PRTWD2   DC    AL1(CNT2)
         DC    AL3(MESG2)          ADDRESS OF  MESSAGE  2
PRTWD3   DC    AL1(CNT3)
         DC    AL3(MESG3)          ADDRESS OF  MESSAGE  3
PRTWD4   DC    AL1(CNT4)
         DC    AL3(MESG4)          ADDRESS OF MESSAGE  4
PRTWD5   DC    AL1(CNT5)           LENGTH OF MESSAGE             Y01048
         DC    AL3(MESG5)          ADDRESS OF MESSAGE            Y01048
DCBADRS0 DC    A(HEWLTMDB)    ADDRESS OF SYSTEM DCB              S20007
DCBADRS1 DC    A(HEWLCSDB)    ADDRESS OF SYSLIN
DCBADRS2 DC    A(HEWLCMDB)    ADDRESS OF SYSLMOD
DCBADRS3 DC    A(HEWLCUDB)    ADDRESS OF SYSUT1
DCBADRS4 DC    A(HEWLCPDB)    ADDRESS OF SYSPRINT
DCBADRS5 DC    X'80'          END OF LIST FLAG
         DC    AL3(HEWLFLDB)  ADDRESS OF SYSLIB
ERCODE1  DC    AL1(DISPSV1)       DISPOSITION AND SEVERITY
         DC    AL1(ERMSG1)    MESG NUMBER
ERCODE2  DC    AL1(DISPSV2)
         DC    AL1(ERMSG2)
ERCODE3  DC    AL1(DISPSV3)
         DC    AL1(ERMSG3)
ERCODE4  DC    AL1(DISPSV4)        DISPOSITION AND SEVERITY
         DC    AL1(ERMSG4)         MESSAGE NUMBER
ERCODE5  DC    AL1(DISPSV5)
         DC    AL1(ERMSG5)
ERCODE6  DC    AL1(DISPSV6)
         DC    AL1(ERMSG6)
ERCODE7  DC    AL1(DISPSV7)             DISPOSITION AND SEVERITY
         DC    AL1(ERMSG7)              ERROR MESSAGE NUMBER
ERCODE71 DC    AL2(ERMSG71)            DISP.,SEV.&NO. FOR MSG.71 S21016
TEMPNAME DC    CL8'TEMPNAME'
MASK     DC    X'202020202020202120'   EDIT MASK                 Y01048
APFWORK  DS    D                   DOUB WORD WORK AREA           Y01048
TTRCSAVE DC    1F'0'  SAVE AREA FOR THE TTRC FIELD WHEN STOWING
* WITH ADD(PDSE2,3) RESTORED FOR SECOND ATTEMPT WITH TEMPNAME
LASTTR   DS    F                       FOR TTR FOR SYSLMOD
SAVE4    DS    4F                      TO SAVE REGS DURING POINT
MODATTR  DC    X'09'                   SINGLE SPACE CC
         DC    C'**MODULE HAS BEEN MARKED'
NEXEC    DC    C' NOT EXECUTABLE,'
NRENT    DC    C' NOT REENTERABLE,'
NREUS    DC    C' NOT REUSABLE,'
NREFR    DC    C' NOT REFRESHABLE,'
NAND     DC    C'AND'
PRTSW    DC    X'00'
*        BIT 0-5  SPARE
*        BIT 6 X'03'  AND KEYWORD NEEDED.
*        BIT 7 X'01'  HEADER MESSAGE CONSTRUCTED, OUTPUT NEEDED.
LAPF     EQU   2                   LENGTH OF APF INFO            Y01048
LMODJFCB DC    A(0)               SYSLMOD JFCB ADDR             GETE-AT
XLSTADDR DC    V(APTXLIST)        ADDR OF SYSLMOD EXIT LIST     GETE-AT
ADJFCB   DC    A(JFCBADDR)             ADDRESS OF SYSLMOD JFCB
         DS    0F                                                A52450
MEMBER   DC    CL8' '                  MEMBER NAME STOWED        A52450
SAVE14   DC    F'0'                    REG 14 SAVE AREA          A52450
EIGHT    DC    H'8'                    CONSTANT 8 TO USE FOR    OY00359
*                                      BUMPING PAST AND BACK    OY00359
*                                      TO 'STARTAPT' STRING     OY00359
*                                      FOR STOW PARM POSITIONINGOY00359
***********************************************************************
*        PATCH AREA                                                   *
***********************************************************************
PATCH    DC    25F'0',C'PATCH AREA '   FOR PROG MAINT          @ZA51314
         HEWAPT
         END
