         MACRO
&NAME    MTAMRPG &DCB1=DCB1,&AREA10=,&AREA11=,&AREA12=,&AREA13=,       *
               &AREA14=,                                       - MTAMRP*
               &SWEQ1=EQ1,&KEY1=,                              - MTAMRP*
               &DCB2=DCB2,&AREA20=,&AREA21=,&AREA22=,&AREA23=,&AREA24=,*
               &SWEQ2=EQ2,&KEY2=,                              - MTAMRP*
               &DCB3=DCB3,&AREA30=,&AREA31=,&AREA32=,&AREA33=,&AREA34=,*
               &SWEQ3=EQ3,&KEY3=,                              - MTAMRP*
               &DCB4=DCB4,&AREA40=,&AREA41=,&AREA42=,&AREA43=,&AREA44=,*
               &SWEQ4=EQ4,&KEY4=,                              - MTAMRP*
               &DCB5=DCB5,&AREA50=,&AREA51=,&AREA52=,&AREA53=,&AREA54=,*
               &SWEQ5=EQ5,&KEY5=,                              - MTAMRP*
               &RPGPGM=,&AUTOR=,&CHAIN=NO                      - MTAMRP
         LCLC  &PGM                                            - MTAMRP
         LCLC  &UPRO                                           - MTAMRP
         LCLC  &DCB                                            - MTAMRP
         LCLC  &KEY                                            - MTAMRP
         LCLC  &SWEQ                                           - MTAMRP
         LCLC  &AREA0                                          - MTAMRP
         LCLC  &AREA1                                          - MTAMRP
         LCLC  &AREA2                                          - MTAMRP
         LCLC  &AREA3                                          - MTAMRP
         LCLC  &AREA4                                          - MTAMRP
         LCLC  &PGMSW                                          - MTAMRP
         LCLC  &NAME2                                          - MTAMRP
         EJECT                                                 - MTAMRP
***********************************************************************
*                                                                     *
*        MTAMRPG    ERSETZT DAS  CHAIN  IM RPG II.                    *
      MNOTE *,'ZUGEHOERIG ZUM RPG-PROGRAMM PGM = &RPGPGM      '
*                                                                     *
      MNOTE *,'ERSTELLT VON                    - &AUTOR          '
*                                    ----------                       *
*                                                                     *
*     OS/VS - PROGRAMM:                                               *
*     -----------------                                               *
*                                                                     *
*              DIESES PROGRAMM KANN MIT ALLEN  ASSEMBLER COMPILERN    *
*              DER IBM UMGEWANDELT UND ERSTELLT WERDEN.               *
*              EINSETZBAR AUF ALLEN  DOS, OS UND VS BETRIEBSSYSTEMEN  *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*              SOFTWARE-EIGENENTWICKLUNG DER                          *
*                   FIRMA  PREUSSAG AG                                *
*                          -----------                                *
*                                                                     *
*                                 KONZERN-DATENVERARBEITUNG           *
*                                 -------------------------           *
*                                 SYSTEMPROGRAMMIERUNG                *
*                                 --------------------                *
*                            3000 HANNOVER 1                          *
*                            ---------------                          *
*                                 LEIBNIZUFER 9                       *
*                                                                     *
*                       TELEFON   0511/1932610             I. KRUCZEK *
*                                                                     *
*                                                                     *
***********************************************************************
         SPACE 3                                               - MTAMRP
         SPACE 3                                               - MTAMRP
         SPACE 3                                               - MTAMRP
*                                                         -- SYSTEAM --
*                                                         -- SYSTEAM --
         AIF   ('&RPGPGM' EQ '').ER01       PGM FEHLT          - MTAMRP
         AIF   ('&NAME'   EQ '').ER02       NAME  FEHLT        - MTAMRP
&NAME2   SETC  '&NAME'                                         - MTAMRP
.TSTU1   AIF   ('&AREA10' NE '' OR '&KEY1' NE '').PGM1         - MTAMRP
.TSTU2   AIF   ('&AREA20' NE '' OR '&KEY2' NE '').PGM2         - MTAMRP
.TSTU3   AIF   ('&AREA30' NE '' OR '&KEY3' NE '').PGM3         - MTAMRP
.TSTU4   AIF   ('&AREA40' NE '' OR '&KEY4' NE '').PGM4         - MTAMRP
.TSTU5   AIF   ('&AREA50' NE '' OR '&KEY5' NE '').PGM5         - MTAMRP
         AGO   .ENDE                                           - MTAMRP
.ER01    ANOP                                                  - MTAMRP
         MNOTE *,'*'                                           - MTAMRP
         MNOTE 12,'*** RPGPGM PARAMETER FUER ZUGEHOERIGES            *'
         MNOTE *,'*           RPG PROGRAMM FEHLT.           ABBRUCH  *'
         MNOTE *,'*'                                           - MTAMRP
         AGO   .ENDE                                           - MTAMRP
.*                                                             - MTAMRP
.ER02    ANOP                                                  - MTAMRP
         MNOTE *,'*'                                           - MTAMRP
         MNOTE 4,'***  ASSEMBLER UNTERPROGRAMM-NAME FEHLT.           *'
         MNOTE *,'*    SYSPG1 BIS SYSPG5 ANGENOMMEN                  *'
         MNOTE *,'*    ------     ------                             *'
         MNOTE *,'*'                                           - MTAMRP
&NAME2   SETC  'SYSPG'                                         - MTAMRP
         AGO   .TSTU1                       GO TO CHECK DCB1   - MTAMRP
.*                                                             - MTAMRP
.PGM1    ANOP                                                  - MTAMRP
&PGM     SETC  '&NAME2'                                        - MTAMRP
&PGM     SETC  '&PGM'.'1'                   SET TO UPRO 1      - MTAMRP
&UPRO    SETC  '1'                          UPRO IDENTIFICATION
&DCB     SETC  '&DCB1'                                         - MTAMRP
&SWEQ    SETC  '&SWEQ1'                                        - MTAMRP
         AIF   ('&KEY1' EQ '').L01
&KEY     SETC  '&KEY1'                                         - MTAMRP
         AGO   .L02
.L01     ANOP
&KEY     SETC  'KEY1'
.L02     ANOP
         AIF   ('&AREA10' EQ '').L21
&AREA0   SETC  '&AREA10'                                       - MTAMRP
         AGO   .L31
.L21     ANOP
&AREA0   SETC  'EBER1'
.L31     ANOP
&AREA1   SETC  '&AREA11'                                       - MTAMRP
&AREA2   SETC  '&AREA12'                                       - MTAMRP
&AREA3   SETC  '&AREA13'                                       - MTAMRP
&AREA4   SETC  '&AREA14'                                       - MTAMRP
         AGO   .UPRO                        GO  TO  UPRO       - MTAMRP
.*                                                             - MTAMRP
.PGM2    ANOP                               DCB 2  +  UPRO 3   - MTAMRP
&PGM     SETC  '&NAME2'                                        - MTAMRP
&PGM     SETC  '&PGM'.'2'                                      - MTAMRP
&PGMSW   SETC  '2'                                             - MTAMRP
&UPRO    SETC  '2'                                             - MTAMRP
&DCB     SETC  '&DCB2'                                         - MTAMRP
&SWEQ    SETC  '&SWEQ2'                                        - MTAMRP
         AIF   ('&KEY2' EQ '').L012
&KEY     SETC  '&KEY2'                                         - MTAMRP
         AGO   .L022
.L012    ANOP
&KEY     SETC  'KEY2'
.L022    ANOP
         AIF   ('&AREA20' EQ '').L22
&AREA0   SETC  '&AREA20'                                       - MTAMRP
         AGO   .L32
.L22     ANOP
&AREA0   SETC  'EBER2'
.L32     ANOP
&AREA1   SETC  '&AREA21'                                       - MTAMRP
&AREA2   SETC  '&AREA22'                                       - MTAMRP
&AREA3   SETC  '&AREA23'                                       - MTAMRP
&AREA4   SETC  '&AREA24'                                       - MTAMRP
         AGO   .UPRO                                           - MTAMRP
.*                                                             - MTAMRP
.PGM3    ANOP                               DCB  3  +  UPRO  3 - MTAMRP
&PGM     SETC  '&NAME2'                                        - MTAMRP
&PGM     SETC  '&PGM'.'3'                                      - MTAMRP
&PGMSW   SETC  '3'                                             - MTAMRP
&UPRO    SETC  '3'                                             - MTAMRP
&DCB     SETC  '&DCB3'                                         - MTAMRP
&SWEQ    SETC  '&SWEQ3'                                        - MTAMRP
         AIF   ('&KEY3' EQ '').L013
&KEY     SETC  '&KEY3'                                         - MTAMRP
         AGO   .L023
.L013    ANOP
&KEY     SETC  'KEY3'
.L023    ANOP
         AIF   ('&AREA30' EQ '').L23
&AREA0   SETC  '&AREA30'                                       - MTAMRP
         AGO   .L33
.L23     ANOP
&AREA0   SETC  'EBER3'
.L33     ANOP
&AREA1   SETC  '&AREA31'                                       - MTAMRP
&AREA2   SETC  '&AREA32'                                       - MTAMRP
&AREA3   SETC  '&AREA33'                                       - MTAMRP
&AREA4   SETC  '&AREA34'                                       - MTAMRP
         AGO   .UPRO                                           - MTAMRP
.PGM4    ANOP                                                  - MTAMRP
&PGM     SETC  '&NAME2'                                        - MTAMRP
&PGM     SETC  '&PGM'.'4'                                      - MTAMRP
&PGMSW   SETC  '4'                                             - MTAMRP
&UPRO    SETC  '4'                                             - MTAMRP
&DCB     SETC  '&DCB4'                                         - MTAMRP
&SWEQ    SETC  '&SWEQ4'                                        - MTAMRP
         AIF   ('&KEY4' EQ '').L014
&KEY     SETC  '&KEY4'                                         - MTAMRP
         AGO   .L024
.L014    ANOP
&KEY     SETC  'KEY4'
.L024    ANOP
         AIF   ('&AREA40' EQ '').L24
&AREA0   SETC  '&AREA40'                                       - MTAMRP
         AGO   .L34
.L24     ANOP
&AREA0   SETC  'EBER4'
.L34     ANOP
&AREA1   SETC  '&AREA41'                                       - MTAMRP
&AREA2   SETC  '&AREA42'                                       - MTAMRP
&AREA3   SETC  '&AREA43'                                       - MTAMRP
&AREA4   SETC  '&AREA44'                                       - MTAMRP
         AGO   .UPRO                                           - MTAMRP
.*                                                             - MTAMRP
.PGM5    ANOP                                                  - MTAMRP
&PGM     SETC  '&NAME2'                                        - MTAMRP
&PGM     SETC  '&PGM'.'5'                                      - MTAMRP
&PGMSW   SETC  '5'                                             - MTAMRP
&UPRO    SETC  '5'                                             - MTAMRP
&DCB     SETC  '&DCB5'                                         - MTAMRP
&SWEQ    SETC  '&SWEQ5'                                        - MTAMRP
         AIF   ('&KEY5' EQ '').L015
&KEY     SETC  '&KEY5'                                         - MTAMRP
         AGO   .L025
.L015    ANOP
&KEY     SETC  'KEY5'
.L025    ANOP
         AIF   ('&AREA50' EQ '').L25
&AREA0   SETC  '&AREA50'                                       - MTAMRP
         AGO   .L35
.L25     ANOP
&AREA0   SETC  'EBER5'
.L35     ANOP
&AREA1   SETC  '&AREA51'                                       - MTAMRP
&AREA2   SETC  '&AREA52'                                       - MTAMRP
&AREA3   SETC  '&AREA53'                                       - MTAMRP
&AREA4   SETC  '&AREA54'                                       - MTAMRP
         AGO   .UPRO                                           - MTAMRP
.*                                                             - MTAMRP
.UPRO    ANOP                                                  - MTAMRP
         EJECT                                                 - MTAMRP
***********************************************************************
*                                                                     *
       MNOTE *,'ASSEMBLER UNTERPROGRAMM FUER DAS RPG PROGRAMM -'
         MNOTE *,' PGM = &RPGPGM  /  DCB = &DCB  /  EP = &PGM' - MTAMRP
*                                                                     *
***********************************************************************
         SPACE 2                                               - MTAMRP
&PGM     CSECT                                                 - MTAMRP
         EXTRN &DCB                    EXTERNALS / ISAM DCB ADDRESS
         AIF   ('&UPRO' GT '1' AND '&KEY' EQ '&KEY1').A00      - MTAMRP
         EXTRN &KEY                    EXTERNALS /  ISAM KEY ADDRESS
.A00     ANOP                                                    MTAMRP
         EXTRN &SWEQ                   EXTERNALS / COMP. SWITCH
         EXTRN &AREA0                  EXTERNALS / INPUT AREA NO. 1
         AIF   ('&AREA1' EQ '').A01                            - MTAMRP
         EXTRN &AREA1                  EXTERNALS / INPUT AREA NO. 2
.A01     ANOP                                                  - MTAMRP
         AIF   ('&AREA2' EQ '').A02                            - MTAMRP
         EXTRN &AREA2                  EXTERNALS / INPUT AREA NO. 3
.A02     ANOP                                                  - MTAMRP
         AIF   ('&AREA3' EQ '').A03                            - MTAMRP
         EXTRN &AREA3                  EXTERNALS / INPUT AREA NO. 4
.A03     ANOP                                                  - MTAMRP
         AIF   ('&AREA4' EQ '').A04                            - MTAMRP
         EXTRN &AREA4                  EXTERNALS / INPUT AREA NO. 5
.A04     ANOP                                                  - MTAMRP
         SPACE 2                                               - MTAMRP
         USING &PGM,R15                     BASIS   R15        - MTAMRP
         STM   14,12,12(13)                 STORE RPG REG. TO RPG-PGM
         L     R14,=A(SAVE)                 SAVEAREA ADDRESS TO R14
         ST    R13,4(R0,R14)                SAVE REG 13        - MTAMRP
         LR    R13,R14                      BEGIN OF SAVE-AREA - MTAMRP
         LR    R2,R15                       RELOAD  BASIS      - MTAMRP
         DROP  R15                          DROP  BASIS (OLD)  - MTAMRP
         SPACE 1                                               - MTAMRP
         USING &PGM,R2                      NEW BASIS REG      - MTAMRP
&PGM.N1  NOP   &PGM.N2                                         - MTAMRP
         LA    R12,10(R0,R0)           LOAD 10 TO REG 12       - MTAMRP
         L     R15,204(R0,R3)          DCB POINTER ADDRESS     - MTAMRP
&PGM.E   DS    0H                      SEEK LOOP               - MTAMRP
         L     R1,0(R0,R15)            LOAD FIRST DCB ADDRESS  - MTAMRP
         CR    R1,R3                   COMPERE TO PGM LOAD ADDRESS
         BE    &PGM.N3                 DCB NOT FOUND           - MTAMRP
         TM    32(R1),B'00000100'      IF OPENED               - MTAMRP
         BO    &PGM.N4                 YES /- HOLD QUEUE       - MTAMRP
         L     R14,=A(&DCB)            LOAD DDNAME ADDRESS     - MTAMRP
         DC    X'D5071028E000'         IF EQUAL DCB NAME       - MTAMRP
         BC    8,&PGM.F                YES GO TO OPEN          - MTAMRP
&PGM.N4  DS    0H                      LOOP TO NEXT POINTER    - MTAMRP
         LA    R15,4(R0,R15)           NEXT POINTER ADDRESS    - MTAMRP
         BCT   R12,&PGM.E              LOOP TO SEEK X          - MTAMRP
         B     &PGM.N5                 GO TO DCB SUCH          - MTAMRP
         SPACE 2                                               - MTAMRP
&PGM.N3  DS    0H                      NOT FOUND               - MTAMRP
         MVC   &PGM.W+14(8),0(R14)     MOVE DCB NAME           - MTAMRP
&PGM.W WTO 'DCB = XXXXXXXX FUER RPG-PROGRAMM = &RPGPGM NICHT GEFUNDEN',*
               ROUTCDE=15                                      - MTAMRP
         ABEND 2054,DUMP                                       - MTAMRP
         SPACE 2                                               - MTAMRP
&PGM.T   DS    0H                      ERROR BY OPEN           - MTAMRP
         MVC   &PGM.W2+14(8),0(R14)    MOVE DCB NAME           - MTAMRP
&PGM.W2  WTO   'DCB = XXXXXXXX NICHT KORREKT EROEFFNET',ROUTCDE=15
         ABEND 19,DUMP                                         - MTAMRP
         SPACE 2                                               - MTAMRP
&PGM.F   EQU   *                       DCB FOUND  HURRA!       - MTAMRP
         LR    R5,R1                   RELOAD DCB FOR SAVE     - MTAMRP
         OPEN  ((R5),(INPUT))                                  - MTAMRP
         TM    48(R5),B'00010000'      IF OPEN SUCCESSFULLY    - MTAMRP
         BNO   &PGM.T                  NO ERROR BY OPEN        - MTAMRP
         LR    R1,R5         RESTORE DCB ADDRESS               - MTAMRP
         B     &PGM.Z                  DCB OK GO TO PROCCESS   - MTAMRP
         SPACE 2                                               - MTAMRP
&PGM.N5  EQU   *             EQUATE DCB OPENED BEFOR ENTRY     - MTAMRP
*                                      DCB SEEK ---- DCBSUCH   - MTAMRP
         LA    R0,=CL8'DCBSUCH'        PGM NAME                - MTAMRP
         LOAD  EPLOC=(R0),DCB=0             LOAD DCB-SEEK PROGRAM
         LR    R15,R0                       LOAD ENTRY POINT   - MTAMRP
         L     R1,=A(&DCB)                  LOAD DDNAME ADDRESS
         BALR  R14,R15                      GO TO DCB-SEEK     - MTAMRP
&PGM.Z   DS    0H                      RETURN AFTER LOOP       - MTAMRP
         MVI   &PGM.N1+1,X'F0'              SWITCH ON          - MTAMRP
         ST    R1,&PGM.EC+8                 STORE DCB ADDRESS TO DECB
         MVC   &PGM.EC+20(4),=A(&KEY)       MOVE1KEY ADDRESS TO ECB
&PGM.N2  DS    0H                                              - MTAMRP
         SPACE 2                                               - MTAMRP
         READ  &PGM.EC,K,,,,,MF=E                              - MTAMRP
         SPACE 2                                               - MTAMRP
         WAIT  ECB=&PGM.EC                  WAIT FOR READ COMPLETE
         TM    &PGM.EC+24,B'10000000'       TEST ON RECORD FOUND
         BO    &PGM.G                       NO  RECORD FOUND   - MTAMRP
         L     R15,=A(&SWEQ)                LOAD EQUAL SWITCH FROM RPG
         MVI   0(R15),X'2C'                 EQUAL SWITCH ON    - MTAMRP
         L     R15,&PGM.EC+8                LOAD DCB ADDRESS   - MTAMRP
         L     R1,=A(&AREA0)                LOAD DATA AREA NUMBER   1
         LH    R15,82(0,R15)                LOAD LRECL FROM DCB
         BCTR  R15,R0                       SUBSTRACT BY ONE FOR LENGTH
         L     R14,&PGM.EC+16               LOAD RECORD POINTER WORD
&PGM.N7  CH    R15,=H'256'                  IF > THEN 256 RECORD LEN.
         BL    &PGM.N8                      YES GO TO MOVE LESS TEN 256
&PGM.N6  MVC   0(256,R1),0(R14)             MOVE 256 BYTES
         LA    R1,256(0,R1)                 NEXT BLOCK
         LA    R14,256(0,R14)               NEXT BLOCK
         SH    R15,=H'256'                  SUBSTRACT LENGTH
         B     &PGM.N7                 GO TO MOVE LOOP
&PGM.N8  DS    0H                           RETURN AFTER MOVE LOOP
         STC   R15,&PGM.M+1                 STORE TO MVC LENGTH
&PGM.M   MVC   0(1,R1),0(R14)               MOVE DATA TO  RPG  - MTAMRP
         AIF   ('&AREA1' EQ '').D01                            - MTAMRP
         L     R1,=A(&AREA1)                LOAD DATA AREA NUMBER   2
         L     R14,&PGM.EC+16               LOAD RECORD POINTER WORD
&PGM.X1  CH    R15,=H'256'                  IF > THEN 256 RECORD LEN.
         BL    &PGM.X2                      YES GO TO MOVE LESS TEN 256
         EX    0,&PGM.N6                    MOVE 256 BYTES
         LA    R1,256(0,R1)                 NEXT BLOCK
         LA    R14,256(0,R14)               NEXT BLOCK
         SH    R15,=H'256'                  SUBSTRACT LENGTH
         B     &PGM.X1                 GO TO MOVE LOOP
&PGM.X2  DS    0H                           RETURN AFTER MOVE LOOP
         EX    0,&PGM.M                     EXECUTE            - MTAMRP
.D01     AIF   ('&AREA2' EQ '').D02                            - MTAMRP
         L     R1,=A(&AREA2)                LOAD DATA AREA NUMBER   3
         L     R14,&PGM.EC+16               LOAD RECORD POINTER WORD
&PGM.X3  CH    R15,=H'256'                  IF > THEN 256 RECORD LEN.
         BL    &PGM.X4                      YES GO TO MOVE LESS TEN 256
         EX    0,&PGM.N6                    MOVE 256 BYTES
         LA    R1,256(0,R1)                 NEXT BLOCK
         LA    R14,256(0,R14)               NEXT BLOCK
         SH    R15,=H'256'                  SUBSTRACT LENGTH
         B     &PGM.X3                 GO TO MOVE LOOP
&PGM.X4  DS    0H                           RETURN AFTER MOVE LOOP
         EX    0,&PGM.M                     EXECUTE            - MTAMRP
.D02     AIF   ('&AREA3' EQ '').D03                            - MTAMRP
         L     R1,=A(&AREA3)                LOAD DATA AREA NUMBER   4
         L     R14,&PGM.EC+16               LOAD RECORD POINTER WORD
&PGM.X5  CH    R15,=H'256'                  IF > THEN 256 RECORD LEN.
         BL    &PGM.X6                      YES GO TO MOVE LESS TEN 256
         EX    0,&PGM.N6                    MOVE 256 BYTES
         LA    R1,256(0,R1)                 NEXT BLOCK
         LA    R14,256(0,R14)               NEXT BLOCK
         SH    R15,=H'256'                  SUBSTRACT LENGTH
         B     &PGM.X5                 GO TO MOVE LOOP
&PGM.X6  DS    0H                           RETURN AFTER MOVE LOOP
         EX    0,&PGM.M                     EXECUTE            - MTAMRP
.D03     AIF   ('&AREA4' EQ '').D04                            - MTAMRP
         L     R1,=A(&AREA4)                LOAD DATA AREA NUMBER   5
         L     R14,&PGM.EC+16               LOAD RECORD POINTER WORD
&PGM.X7  CH    R15,=H'256'                  IF > THEN 256 RECORD LEN.
         BL    &PGM.X8                      YES GO TO MOVE LESS TEN 256
         EX    0,&PGM.N6                    MOVE 256 BYTES
         LA    R1,256(0,R1)                 NEXT BLOCK
         LA    R14,256(0,R14)               NEXT BLOCK
         SH    R15,=H'256'                  SUBSTRACT LENGTH
         B     &PGM.X7                 GO TO MOVE LOOP
&PGM.X8  DS    0H                           RETURN AFTER MOVE LOOP
         EX    0,&PGM.M                     EXECUTE            - MTAMRP
.D04     ANOP                                                  - MTAMRP
         B     &PGM.H                       GO  TO  END OF UPRO
         SPACE 3                                               - MTAMRP
&PGM.G   DS    0H                           NO RECORD FOUND    - MTAMRP
         L     R15,=A(&SWEQ)                LOAD NOT EQUAL SWITCH
         MVI   0(R15),X'0C'                 SET  OFF           - MTAMRP
         SPACE 2                                               - MTAMRP
&PGM.H   EQU   *                       EQUATE FOR END OF UPRO  - MTAMRP
         L     R13,4(0,R13)                 LOAD  RPG SAVE AREA
         LM    R14,R12,12(R13)              LOAD RPG  REGISTER - MTAMRP
         BR    R14                          RETURN TO RPG      - MTAMRP
         READ  &PGM.EC,K,DUMY&SYSNDX,'S','S',DUMY&SYSNDX,MF=L  - MTAMRP
         DROP  R2                      DROP BASIS R2 FOR CSECT - MTAMRP
         LTORG    LTORG LTORG LTORG LTORG LTORG LTORG LTORG LTORG LTORG
         AIF   ('&PGMSW' EQ '').DEFINE                         - MTAMRP
         AIF   ('&PGMSW' EQ '2').TSTU3                         - MTAMRP
         AIF   ('&PGMSW' EQ '3').TSTU4                         - MTAMRP
         AIF   ('&PGMSW' EQ '4').TSTU5                         - MTAMRP
         AIF   ('&PGMSW' EQ '5').ENDE                          - MTAMRP
.DEFINE  ANOP                                                  - MTAMRP
         SPACE 3                                               - MTAMRP
SAVE     DC    9D'0'                        ASS SAVE-AREA      - MTAMRP
R0       EQU   0                            REG. 0  ODER  ZAHL 0
R1       EQU   1                            REG. 1  ODER  ZAHL 1
R2       EQU   2                            REG. 2  ODER  ZAHL 2
R3       EQU   3                            REG. 3  ODER  ZAHL 3
R4       EQU   4                            REG. 4  ODER  ZAHL 4
R5       EQU   5                            REG. 5  ODER  ZAHL 5
R6       EQU   6                            REG. 6  ODER  ZAHL 6
R7       EQU   7                            REG. 7  ODER  ZAHL 7
R8       EQU   8                            REG. 8  ODER  ZAHL 8
R9       EQU   9                            REG. 9  ODER  ZAHL 9
R10      EQU   10                           REG. 10 ODER  ZAHL 10
R11      EQU   11                           REG. 11 ODER  ZAHL 11
R12      EQU   12                           REG. 12 ODER  ZAHL 12
R13      EQU   13                           REG. 13 ODER  ZAHL 13
R14      EQU   14                           REG. 14 ODER  ZAHL 14
R15      EQU   15                           REG. 15 ODER  ZAHL 15
&PGMSW   SETC  '1'                                             - MTAMRP
         AGO   .TSTU2                                          - MTAMRP
.ENDE    ANOP                                                  - MTAMRP
DUMY&SYSNDX EQU *                           DUMMY   NAME       - MTAMRP
         MEXIT                                                 - MTAMRP
         MEND                                                  - MTAMRP
