*          DATA SET HD122650T  AT LEVEL 002 AS OF 05/04/76
         PRINT OFF
         MACRO
&LABEL   PROG  &BYTES
         GBLA  &SCHALT
         LCLA  &REGANZ,&REGEND
         LCLC  &NAME
         PRINT NOGEN
*                                                                     *
*        BASISADRESSIERUNG - OS                                       *
*                                                                     *
         AIF   (N'&LABEL EQ 1).P01
         MNOTE 4,'CSECT-NAME FEHLT, ''CSECT1'' WIRD ANGENOMMEN'
&NAME    SETC  'CESECT1'
CSECT1   CSECT
         AGO   .P02
.P01     ANOP
&NAME    SETC  '&LABEL'
&NAME    CSECT
.P02     AIF   (N'&BYTES NE 0).P03
         MNOTE *,'PROGRAMMGROESSE FEHLT, 4096 BYTES WIRD ANGENOMMEN'
&REGANZ  SETA  1
         AGO   .P04
.P03     ANOP
&REGANZ  SETA  (&BYTES/4096)+1
.P04     ANOP
         AIF   (&REGANZ LE 10).P05
         MNOTE *,PROGRAMMGROESSE WIRD AUF 4096 BYTES GEKUERZT'
&REGANZ  SETA  10
.P05     ANOP
&REGEND  SETA  &REGANZ+2
.*
&NAME    SETC  '$@#'.'&SYSNDX'
         SAVE  (14,12)
         BALR  R3,0
         USING *,R3
         ST    R13,&NAME.3+4
         LR    R0,R2
         LR    R2,R13
         LA    R13,&NAME.3
         ST    R13,8(R2)
         LR    R2,R0
         AIF   (&REGANZ EQ 1).P10
         LM    R3,R&REGEND,&NAME.2    LADEN BAEISADRESSKONSTANTEN
         USING &NAME.1,R3             USING-ANWEISUNGEN
         USING &NAME.1+4096,R4
         AIF   (&REGANZ EQ 2).P10
         USING &NAME.1+8192,R5
         AIF   (&REGANZ EQ 3).P10
         USING &NAME.1+12288,R6
         AIF   (&REGANZ EQ 4).P10
         USING &NAME.1+16384,R7
         AIF   (&REGANZ EQ 5).P10
         USING &NAME.1+20480,R8
         AIF   (&REGANZ EQ 6).P10
         USING &NAME.1+24576,R9
         AIF   (&REGANZ EQ 7).P10
         USING &NAME.1+28672,R10
         AIF   (&REGANZ EQ 8).P10
         USING &NAME.1+32768,R11
         AIF   (&REGANZ EQ 9).P10
         USING &NAME.1+36864,R12
.P10     ANOP
         B     &NAME.1
&NAME.3  DC    18F'0'
         AIF   (&SCHALT EQ 1).P10A
&SCHALT  SETA  1
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
.P10A    AIF   (&REGANZ EQ 1).P11
&NAME.2  DC    A(&NAME.1)
         DC    A(&NAME.1+4096)
         AIF   (&REGANZ EQ 2).P11
         DC    A(&NAME.1+8192)
         AIF   (&REGANZ EQ 3).P11
         DC    A(&NAME.1+12288)
         AIF   (&REGANZ EQ 4).P11
         DC    A(&NAME.1+16384)
         AIF   (&REGANZ EQ 5).P11
         DC    A(&NAME.1+20480)
         AIF   (&REGANZ EQ 6).P11
         DC    A(&NAME.1+24576)
         AIF   (&REGANZ EQ 7).P11
         DC    A(&NAME.1+28672)
         AIF   (&REGANZ EQ 8).P11
         DC    A(&NAME.1+32768)
         AIF   (&REGANZ EQ 9).P11
         DC    A(&NAME.1+36864)
.P11     ANOP
&NAME.1  EQU   *
         MEND
         PRINT ON
*          DATA SET HD122610T  AT LEVEL 026 AS OF 05/04/76
         TITLE 'UHDV010S   H D V  -  STANDARD SICHERUNGS- UND REORGANIS*
               ATIONS-PROGRAMM'
***********************************************************************
***********************************************************************
****           C O P Y R I G H T                                   ****
****           HAMBURGER DATENVERARBEITUNGS G.M.B.H                ****
****           Z.HD. HERRN HUETTEL                                 ****
****           ALTER WALL 12                                       ****
****                                                               ****
****           2000 HAMBURG 11                                     ****
****           TELEFON  040 - 37 00 5-223                          ****
****                                                               ****
****           DIE GEWERBLICHE NUTZUNG DIESES PROGRAMMS DURCH      ****
****           VERKAUF ODER VERMIETUNG IST VERBOTEN                ****
****                                                               ****
****           EINE HAFTUNG FUER DIESES PROGRAMM SEITENS DER       ****
****           HDV BESTEHT NICHT                                   ***
****                                                               ***
****                                                               ***
***********************************************************************
***********************************************************************
         EJECT
********       H D 1 2 2 0 0 0                                 ********
*                                                                     *
*        H D V    STANDARD  SICHERUNGS- UND REORGANISATIONSPROGRAMM   *
*                                                                     *
*                                                                     *
*              FUNKTIONEN                                             *
*                                                                     *
*              KOPIEREN VON SEQUENTIELLEN DATEIEN                     *
*                       AUF EINE BIS NEUN SEQUENTIELLE DATEIEN        *
*                                                                     *
*              KOPIEREN VON I S A M - DATEIEN                         *
*                       AUF EINE BIS NEUN ISAM-DATEIEN                *
*                                                                     *
*              KOPIEREN VON SEQUENTIELLEN DATEIEN                     *
*                       AUF ISAM-DATEIEN (REORGANISATION)             *
*                       UND SEQUENTIELLE DATEIEN                      *
*                                                                     *
*              KOPIEREN VON I S A M - DATEIEN                         *
*                       AUF SEQUENTIELLE DATEIEN (SICHERUNG)          *
*                       UND ISAM-DATEIEN                              *
*                                                                     *
*              SCHREIBEN VON CHECKPOINTS NACH DEM EROEFFNEN           *
*                       EINER AUSGABE-DATEI                           *
*                       ZWINGEND BEI  DISP=MOD AUSGABE                *
*                                                                     *
*              SCHREIBEN VON EOF-SAETZEN AUF SEQUENTIELLE             *
*                       EINGABEDATEIEN                                *
*                       N A C H  ERFOLGTEM FORTSCHREIBEN AUF          *
*                       AUSGABE-DATEI(EN)                             *
*                                                                     *
*              AUSFUEHRLICHE PROTOKOLLIERUNG ALLER DATEI-SPEZIFISCHEN *
*                       INFORMATIONEN                                 *
*                       - DDNAME                                      *
*                       - DATA-SET-NAME                               *
*                       - ANZAHL SAETZE                               *
*                       - DATEI-ORGANISATION                          *
*                       - SATZFORMAT                                  *
*                       - SATZLAENGE                                  *
*                       - BLOCKLAENGE                                 *
*                       - DATEI-DISPOSITION                           *
*                       - ART DES DATEI-KENNSATZES                    *
*                       - ZEICHENDICHTE BEI MAGNETBAENDER             *
*                       - FILE-NUMMER BEI BAENDERN                    *
*                       - EINHEITEN-TYP                               *
*                       - ANZAHL DER DATENTRAEGER (VOLUMES)           *
*                       - NAMEN DER DATENTRAEGER (SERIAL-NUMMERN)     *
*                                                                     *
*              AUSFUEHRLICHE PROTOKOLLIERUNG DER DURCHGEFUEHRTEN      *
*                       AKTIONEN MIT UHRZEIT                          *
*                                                                     *
*              AUSFUEHRLICHE PRUEFUNG ALLER ANGABEN AUF LOGISCHE      *
*                       RICHTIGKEIT UND VOLLSTAENDIGKEIT              *
*                       V O R  BEGINN DER GESAMTEN VERARBEITUNG       *
*                                                                     *
*              AUSFUEHRLICHE FEHLERINTERPRETATION BZW. FEHLERANALYSE  *
*                       DURCH AUSSAGEKRAEFTIGE MELDUNGEN              *
*                                                                     *
*        *     STEUERUNG AUSSCHLIESSLICH      *                       *
*        *              DURCH                 *                       *
*        *     D D - S T A T E M E N T S      *                       *
*        *           D D N A M E              *                       *
*        *     K E I N E   VORLAUFKARTEN      *                       *
*                                                                     *
         EJECT
***                                                                 ***
***      J O B  -  C O N T R O L                                    ***
***                                                                 ***
*                                                                     *
*//STEPNAME  EXEC PGM=UHDV010S                                        *
*                                                                     *
*//PROT      DD   SYSOUT=A             PROTOKOLL                      *
*                                                                     *
*//CHKPT     DD   ....                 CHECKPOINT-DATEI, WENN         *
*                                      CHECKPOINTS ANGEFORDERT WERDEN *
*                                                                     *
         EJECT
***                                                                 ***
***      E I N - / A U S G A B E   D D - S T A T E M E N T          ***
*                                                                     *
***                     D  D  N  A  M  E                            ***
*                                                                     *
* //X X XX X X                                                        *
*   - - -- - -                                                        *
*   . . .  . ..KENNZEICHEN                                            *
*   . . .  ....ANZAHL KOPIEN BZW. KOPIE-NUMMER                        *
*   . . .......REFERENZ-NUMMER                                        *
*   . .........DATEI-ORGANISATION                                     *
*   ...........EIN-/AUSGABE                                           *
*                                                                     *
* DDNAME STELLE 1  -  EIN-/AUSGABE                                    *
*                                                                     *
*              I = EINGABE-DATEI                                      *
*              O = AUSGABE-DATEI                                      *
*                                                                     *
** DDNAME STELLE 2  -  DATEI-ORGANISATION                             *
*                                                                     *
**             I = INDEXED SEQUENTIELL (ISAM)                         *
*              P = PHYSISCH SEQUENTIELL (QSAM)                        *
*                                                                     *
* DDNAME STELLE 3+4  -  REFERENZ-NUMMER                               *
*                                                                     *
*              DIESE REFERNZ-NUMMER STELLT DIE LOGISCHE VERBINDUNG    *
*                   ZWISCHEN EINEM EINGABE-DD-STATEMENT               *
*                   UND EINEM ODER MEHREREN AUSGABE-DD-STATEMENTS     *
*                   HER.                                              *
*                                                                     *
* DDNAME STELLE 5  -  ANZAHL KOPIEN BZW. KOPIE-NUMMER                 *
*                                                                     *
*              BEI EINGABE-DD-STATEMENT                               *
*                  ANZAHL DER AUSGABE-DD-STATEMENTS MIT GLEICHER      *
*                  REFERNZ-NUMMER                                     *
*              BEI AUSGABE-DD-STATEMENTS                              *
*                  FORTLAUFENDE NUMMER INNERHALB GLEICHER REFERNZ-    *
*                  NUMMER                                             *
*                                                                     *
*              AUSNAHME:                                              *
*              0 BEI EINGABE-DD-STATEMENT                             *
*              UND                                                    *
*              E  IM KENNZEICHEN                                      *
*              BEWIRKT SCHREIBEN EINES EOF-SATZES                     *
*              O H N E                                                *
*              VORHERIGE FORTSCHREIBUNG DER EINGABE AUF EIN           *
*              AUSGABE-DD-STATEMENT                                   *
*                                                                     *
* DDNAME STELLE 6  -  KENNZEICHEN                                     *
*                                                                     *
*              BEI EINGABE-DD-STATEMENTS                              *
*              E                                                      *
*              BEWIRKT SCHREIBEN EINES EOF-SATZES NACH DER VERARBEITUNG
*              DER EINGABE-DATEI                                      *
*              BEI AUSGABE-DD-STATEMENTS                              *
*              C                                                      *
*              BEWIRKT DAS SCHREIBEN EINES CHECKPOINTS NACH DEM       *
*              EROEFFNEN DER AUSGABEDATEI.                            *
*              DIESE ANGABE IST ZWINGEND FUER AUSGABE-DATEIEN, DIE MIT*
*              DISP=MOD FORTGESCHREIBEN WERDEN SOLLEN.                *
*              BEI CHECKPOINT-ANFORDERUNG IST DAS DD-STATEMENTS       *
**             //CHKPT   DD  ....                                     *
*              ERFORDERLICH                                           *
*                                                                     *
         EJECT
**                                                                  ***
**             B E I S P I E L E                                    ***
**                                                                  ***
*                                                                     *
*        01    SICHERUNG ISAM-DATEI                                   *
*                                                                     *
*//II011    DD ..ISAM-DATEI                                           *
*//OP011    DD ..SICHERUNGSBAND                                       *
*                                                                     *
*        02    REORGANISATION ISAM-DATEI                              *
*                                                                     *
**//IP021   DD ..SICHERUNGSBAND                                       *
*//OI021    DD ..ISAM-DATEI                                           *
*                                                                     *
*        03    KOPIEREN SEQ DATEI AUF 2 ANDERE SEQ.DATEIEN            *
*                                                                     *
*//IO032    DD ..EINGABE-DATEI                                        *
*//OP031    DD ..AUSGABE-DATEI 1                                      *
**//OP032   DD ..AUSGABE-DATEI 2                                      *
*                                                                     *
*        04    SICHERUNG ISAM-DATEI UND GLEICHZEITIGES KOPIEREN       *
*                                                                     *
*//II042    DD ..ISAM-EINGABE                                         *
*//OP041    DD ..SICHERUNGSBAND                                       *
*//OI042    DD ..ISAM-AUSGABE                                         *
*                                                                     *
*        05    FORTSCHREIBEN EINER SEQUENTIELLEN DATEI                *
*                                                                     *
*//IP051    DD ..EINGABE-DATEI                                        *
*//OP051C   DD ..AUSGABE-DATEI   DISP=MOD                             *
*                                                                     *
*        06    FORTSCHREIBEN SEQ.DATEI MIT ANSCHL.LOESCHUNG-EOF-EINGABE
*                                                                     *
*//IP061E   DD ..EINGABE-DATEI                                        *
*//OP061C   DD ..AUSGABE-DATEI   DISP=MOD                             *
*                                                                     *
         EJECT
UHDV010S PROG  10000
*                                                                     *
*              ADDRESSABILITY OF DUMMY-SECTIONS                       *
*                                                                     *
         USING IHADCB,R11
         USING DDDSECT,R10
         USING JFCBDSCT,R12
*                                                                     *
*              GET TIOT-ADDR AND DATE/TIME                            *
*              CHECK DCB-PROT                                         *
*              TERMINATE, IF PROT-DCB NOT OPERATIONAL                 *
*                                                                     *
A01      EQU   *
         BAL   R15,X01                 U.P. EXTRACT
         BAL   R15,X02                 U.P. DATE
         MVC   UEB1DATE,HDVDATED       DATE INTO TOP-MSG
         MVC   UEB1TIME,HDVDATET+1     TIME INTO TOP-MSG
         OPEN  (DCBPROT,(OUTPUT))      LOG-OPEN
         LA    R11,DCBPROT             ADDRESSABILITY IHADCB
         TM    DCBOFLGS,X'10'          OPEN SUCCESSFULL
         BO    A011                    YES
         MVC   MSG16TME,HDVDATET       TIME INTO MSG
         MVC   MSG16DDN,DCBDDNAM       DDNAME INTO MSG
         LA    R14,MSG16+1             MSG-ADDR INTO R14         MSG16
         BAL   R15,X03                 U.P. WTP
         MVC   MSG10TME,HDVDATET       TIME INTO MSG
         LA    R14,MSG10+1             MSG-ADDR.INTO R14         MSG10
         BAL   R15,X03                 U.P. WTP
         ABEND 4092
         EJECT
***                                                                 ***
***            SCAN TIOT                                            ***
***                                                                 ***
A011     EQU   *
         L     R12,TIOTADDR            LOAD TIOT-ADDR INTO R12
         LA    R12,24(R12)             OFFSET 24 = 1.DD-ENTRY OF TIOT
         XR    R11,R11                 DD-ENTRY LENGTH = R11
         LA    R10,DDTABLE             R10 = DD-TABLE ADDR.
A012     EQU   *
         CLC   =F'0',0(R12)            END OF TIOT
         BE    B01                     YES
         CLI   0(R10),X'FF'            END OF DD-TABLE
         BE    A991                    YES, ERRORMSG + ABEND
*                                                                     *
*              IGNORE   NOT-I/O-DD-STATEMENTS                         *
*                                                                     *
         CLC   =CL8' ',4(R12)          CONCATENATED DATASET
         BE    A99                     YES, IGNORE
         CLC   =CL8'SYSUDUMP',4(R12)   SYSUDUMP - DD-STMT.
         BE    A99                     YES, IGNORE
         CLC   =CL8'SYSABEND',4(R12)   SYSABEND - DD-STMT.
         BE    A99                     YES, IGNORE
         CLC   =CL8'SYSCHK',4(R12)     SYSCHCK - DD-STMT.
         BE    A97                     YES, LOG DSN,VOL
         CLC   =CL8'JOBLIB',4(R12)     JOBLIB - DD-STMT.
         BE    A97                     YES, LOG DSN,VOL
         CLC   =CL8'STEPLIB',4(R12)    STEPLIB - DD-STMT
         BE    A97                     YES, LOG DSN,VOL
         CLC   =CL8'PROT',4(R12)       PROT-DD-STMT
         BE    A99                     YES, IGNORE
         CLC   =CL8'CHKPT',4(R12)      CHKPT - DD-STMT
         BE    A96                     YES,SET IND.,LOG DSN, VOL
         CLC   =CL8'HDVREP',4(R12)     HDVREP -DD-STMT
         BE    A99                     YES, IGNORE
         CLC   =CL8'HDVCHECK',4(R12)   HDVCHECK - DD -STMT
         BE    A99                     YES, IGNORE
         CLI   4(R12),C'I'             INPUT - DD-STMT
         BE    A013                    YES
         CLI   4(R12),C'O'             OUTPUT - DD-STMT
         BE    A013                    YES
         MVC   MSG21DDN,4(R12)         DDNAME INTO MSG21
         LA    R14,MSG21               MSG21                     MSG21
         BAL   R15,X04                 U.P. MSG
         B     A99                     IGNORE DD-STMT
         EJECT
*                                                                     *
*              TEST SYNTAX OF I/O-DD-STATEMENTS                       *
*                                                                     *
A013     EQU   *
         CLI   5(R12),C'P'             QSAM DATASET
         BE    A014                    YES
         CLI   5(R12),C'I'             ISAM DATASET
         BE    A014                    YES
         MVC   MSG22DDN,4(R12)         DDNAME INTO MSG22         MSG22
         LA    R14,MSG22               MSG22
         BAL   R15,X04                 U.P.MSG
         B     A99                     IGNORE DD-STMT
A014     EQU   *
         CLC   6(2,R12),=C'01'         NUMERIC
         BL    A015                    NO
         CLC   6(2,R12),=C'99'         NUMERIC
         BNH   A016                    YES
A015     EQU   *
         MVC   MSG23DDN,4(R12)         DDNAME INTO MSG23         MSG23
         LA    R14,MSG23               MSG23
         BAL   R15,X04                 U.P. MSG
         B     A99                     IGNORE DD-STMT
A016     EQU   *
         CLI   8(R12),C'1'             NUMERIC
         BL    A017                    NO - BUT TEST 0E
         CLI   8(R12),C'9'             NUMERIC
         BH    A018                    NO
         B     A019                    YES
A017     EQU   *
         CLC   =C'0E',8(R12)           EOF-ONLY
         BE    A019                    YES
A018     EQU   *
         MVC   MSG24DDN,4(R12)         DDNAME INTO MSG24         MAG24
         LA    R14,MSG24               MSG24
         BAL   R15,X04                 U.P. MSG
         B     A99                     IGNORE DD-STMT
A019     EQU   *
         CLI   9(R12),C' '             BLANK IND.
         BE    A020                    O.K.
         CLI   9(R12),C'E'             EOF-IND.
         BE    A0191                   TEST - INPUT
         CLI   9(R12),C'C'             CHKPT-IND
         BE    A0192                   TEST - OUTPUT
         MVC   MSG25DDN,4(R12)         DDNAME INTO MSG25         MSG25
         LA    R14,MSG25               MSG25
         BAL   R15,X04                 U.P. MSG
         B     A99                     IGNORE DD-STMT
A0191    EQU   *
         CLI   4(R12),C'I'             INPUT -EOF
         BE    A020                    YES
         MVC   MSG26DDN,4(R12)         DDNAME INTO MSG26         MSG26
         LA    R14,MSG26               MSG26
         BAL   R15,X04                 U.P. MSG
         B     A99                     IGNORE DD-STMT
A0192    EQU   *
         CLI   4(R12),C'O'             OUTPUT-CHECKPOINT
         BE    A0193                   YES, TEST,IF CHKPT-DD-STMT
         MVC   MSG27DDN,4(R12)         DDNAME INTO MSG27         MSG27
         LA    R14,MSG27               MSG27
         BAL   R15,X04                 U.P. MSG
         B     A99                     IGNORE DD-STMT
A0193    EQU   *
         CLI   CHKPTIND,1              CHKPT-DD-STMT PRESENT
         BE    A020                    YES
         MVC   MSG34DDN,4(R12)         DDNAME INTO MSG
         LA    R14,MSG34               MSG34                    MSG34
         BAL   R15,X04                 U.P.MSG
         B     A99                     IGNORE DD-STMT
A020     EQU   *
         CLC   =CL2' ',10(R12)         POS.7+8 BLANK
         BE    A021                    YES
         MVC   MSG28DDN,4(R12)         DDNAME INTO MSG28         MSG28
         LA    R14,MSG28               MSG28
         BAL   R15,X04                 U.P. MSG
         B     A99                     IGNORE DD-STMT
A021     EQU   *
         MVC   DDN,4(R12)              MOVE DD-NAME INTO DDTABLE
         MVC   DDNSR,DDN+2             1.SORT=REF-NR
         MVC   DDNSI,DDN               2.SORT=I/O
         MVC   DDNSC,DDN+4             3.SORT=COPIES
         LA    R10,DDTABOFF(,R10)      NEXT DD-TABLE SEGMENT
         B     A99
*
*              CHKPT-DD-STMT
*
A96      EQU   *
         MVI   CHKPTIND,1              SET CHKPT-DD-STMT-INDICATOR
*                                                                     *
*              GET DSN + VOL OF OTHER DD-STATEMENTS                   *
*                                                                     *
A97      EQU   *
         LA    R11,DCBRJFCB            IHADCB - DSECT
         MVC   DCBDDNAM,4(R12)         DDNAME INTO DCB
         RDJFCB DCBRJFCB               READ  J F C B
         LR    R15,R12                 SAVE R12
         LA    R12,JFCBAREA            R12 = JFCB
         MVC   PROTDSN,JFCBDSNM        DSNAME
         MVC   PROTVOL,JFCBVOL1        VOLUME - SERIAL
         LR    R12,R15                 RESTORE R12
         XR    R11,R11
*
*              LOG OTHER DD - STATEMENTS                              *
*                                                                     *
A98      EQU   *
         MVC   PROTDDN,4(R12)          DD-NAME
         MVC   PROTAREA,PROTZEIL
         BAL   R15,X05                 U.P.PROT
*                                                                     *
*              CALCULATE NEXT TIOT-ENTRY                              *
*                                                                     *
A99      EQU   *
         IC    R11,0(R12)              DD-ENTRY LENGTH
         AR    R12,R11                 NEXT DD-ENTRY
         B     A012                    START TEST OF DD-ENTRY
A991     EQU   *
         LA    R14,MSG29               MSG
         BAL   R15,X04                 U.P. MSG                 MSG29
         MVI   ABEND,1                 SET ABEND - IND.
         B     B01                     IGNORE REST
         EJECT
***                                                                 ***
***            SORT DD-NAME TABLE IN MAINSTORAGE                    ***
***            CONTINUE LOGICALLY DD-NAME-TESTS                     ***
***                                                                 ***
B01      EQU   *
         MVC   PROTAREA+1(2),=C'- '
         MVC   PROTAREA+3(117),PROTAREA+1
         BAL   R15,X05                 U.P.PROT
         CALL  UHDV020S,PARSORT1       SORT TABLE
         LA    R10,DDTABLE-DDTABOFF    R10 = DD-TABLE START - 1 SEGM
         BAL   R15,B99                 NEXT SEGMENT
B02      EQU   *
         MVC   OLDDDN,DDN              NEWDDN = OLDDDN
B03      EQU   *
         CLI   DDN,C'I'                INPUT-DD-STMT
         BE    B04                     YES
         MVC   MSG13DDN,DDN            DDNAME INTO MSG
         LA    R14,MSG13               MSG13                     MSG13
         BAL   R15,X04                 1.P.MSG
         BAL   R15,B99                 NEXT SEGMENT
         B     B02
B04      EQU   *
         PACK  MAXCOPY,DDN+4(1)        PACK NO. OF COPIES
         ZAP   OUTCOPY,=P'0'           OUTPUT-DD-STMT COPY-NO.=0
B05      EQU   *
         BAL   R15,B99                 NEXT SEGMENT
         CLI   DDN,C'O'                OUTPUT-DD-STMT
         BNE   B08                     NO
         CLC   DDN+2(2),OLDDDN+2       REF-NR. EQ
         BNE   B08                     NO
B06      EQU   *
         AP    OUTCOPY,=P'1'           COPY-NO. + 1
         PACK  OUTCOPP,DDN+4(1)        PACK DD-STMT COPY-NO.
         CP    OUTCOPY,OUTCOPP         EQUAL
         BNE   B07                     NO
         BAL   R15,B99                 NEXT SEGMENT
         CLC   DDN+2(2),OLDDDN+2       REF-NR. EQUAL
         BE    B06                     YES
         CP    OUTCOPY,MAXCOPY         ALL OUTPUT-DD-STMTS
         BE    B02                     YES
         MVC   MSG12DDN,OLDDDN         DDNAME INTO MSG
         LA    R14,MSG12               MSG12                     MSG12
         BAL   R15,X04                 U.P.MSG
         B     B02
B07      EQU   *
         MVC   MSG12DDN,OLDDDN         DDNAME INTO MSG
         LA    R14,MSG12               MSG12                     MSG12
         BAL   R15,X04                 U.P.MSG
         B     B05
B08      EQU   *
         CLC   =C'0E',OLDDDN+4         EOF - ONLY
         BE    B09                     YES, WARNING
         MVC   MSG12DDN,OLDDDN         DDNAME INTO
         LA    R14,MSG12               MSG12                     MSG12
         BAL   R15,X04                 U.P.MSG
         B     B02
B09      EQU   *
         B     B02
B99      EQU   *
         LA    R10,DDTABOFF(,R10)      NEXT SEGMENT
         CLI   0(R10),X'00'            EMPTY
         BE    B99                     YES,NEXT SEGMENT
         CLI   0(R10),X'FF'            TABLE-END
         BNER  R15                     NO, RETURN
         CP    OUTCOPY,MAXCOPY         ALL OUTPUT-DD-STMTS
         BE    C01                     YES
         MVC   MSG12DDN,OLDDDN         DDNAME INTO MSG
         LA    R14,MSG12               MSG12                     MSG12
         BAL   R15,X04                 U.P.MSG
         B     C01
         EJECT
***                                                                 ***
***            END OF SYNTAX-CHECKING                               ***
***            CONTINUE OR TERMINATE JOB                            ***
***                                                                 ***
C01      EQU   *
         CLI   ABEND,1                 ABEND-IND. ON
         BNE   C02                     NO
ABTERM   EQU   *                       YES, ABNORMAL TERMINATION
         LA    R14,MSG10               MSG10                    MSG10
         BAL   R15,X04                 U.P.MSG
         CLOSE (DCBPROT)
         ABEND 4092
         EJECT
***                                                                 ***
***            ESTABLISH I/O-GROUP                                  ***
***            GETMAIN FOR DCB/JFCB                                 ***
***            OPEN DATASETS FOR PROCESSING, WRITE CHECKPOINT       ***
***            READ JFCB                                            ***
***            CONTINUE WITH SYNTAX-CHECKING                        ***
***                                                                 ***
*                                                                     *
*              FIRST STEP                                             *
*              GETMAIN FOR DCB/JFCB WITHIN A GROUP                    *
*                                                                     *
C02      EQU   *
         LA    R10,DDTABLE             R10 = DDTABLE-ADDR.
C03      EQU   *
         CLI   DDN,X'00'               EMPTY ELEMENT
         BNE   C04                     NO
         LA    R10,DDTABOFF(,R10)      YES,NEXT ELEMENT
         B     C03                     LOOP
C04      EQU   *
         MVC   OLDDDN,DDN              OLD DDNAME=NEWDDNAME
C05      EQU   *
         CLI   DDN,X'FF'               DDTABLE-END
         BE    C06                     YES
         CLC   DDN+2(2),OLDDDN+2       REF-NR. EQUAL
         BNE   C06                     NO
         BAL   R15,X06                 U.P. GETMAIN DCBJFCB
         LA    R10,DDTABOFF(,R10)      NEXT ELEMENT
         B     C05                     LOOP
*                                                                     *
**             SECOND STEP                                            *
*              OPEN DCB , WRITE CHECKPOINT-IF REQ'D                   *
*                                                                     *
C06      EQU   *
         LA    R10,DDTABLE             R10 = DDTABLE-ADDR.
C07      EQU   *
         CLI   DDN,X'FF'               DDTABLE-END
         BE    D01                     YES
         CLI   DDN,X'00'               EMPTY ELEMENT
         BNE   C09                     NO, PROCESS
C08      EQU   *
         LA    R10,DDTABOFF(,R10)      NEXT ELEMENT
         B     C07                     LOOP
C09      EQU   *
         ICM   R11,15,DDDCBADR         R11 = DCB-ADDR
         BZ    C08                     NO, NEXT ELEMENT
         CLI   DDN,C'I'                INPUT DD-STMT
         BE    C10                     YES
         OPEN  ((R11),(OUTPUT))        OPEN OUTPUT-DCB
         B     C11                     TEST OPEN-FLG
C10      EQU   *
         OPEN  ((R11),(INPUT))         OPEN INPUT-DCB
C11      EQU   *
         TM    DCBOFLGS,X'10'          OPEN SUCCESSFULL
         BO    C12                     YES
         MVC   MSG32DDN,DDN            DDNAME INTO MSG
         LA    R14,MSG32               MSG32                    MSG32
         BAL   R15,X04                 U.P.MSG
         B     ABTERM                  ABEND
C12      EQU   *
         ZAP   DDRECCNT,=P'0'          RECORD - COUNT TO 0
         CLI   DDN+5,C'C'              CHECKPOINT-REQUEST
         BNE   C13                     NO
         BAL   R15,X07                 U.P.CHECKPOINT
*                                                                     *
*              THIRD STEP                                             *
*              READ JFCB                                              *
*              CONT. WITH SYNTAX-CHECKING                             *
*                                                                     *
C13      EQU   *
         LA    R11,DCBRJFCB            IHADCB,DSECT
         MVC   DCBDDNAM,DDN            DDNAME INTO DCB
         RDJFCB DCBRJFCB               READ JOB-FILE-CONTROL-BLOCK
         L     R12,DDJFCBAD            R12 = JFCB-AREA-ADDR.
         MVC   0(176,R12),JFCBAREA     MOVE JFCB INTO AREA
         TM    JFCBIND2,X'80'          NEW/MOD DATASET
         BZ    C14                     NO
         TM    JFCBIND2,X'40'          MOD DATASET
         BO    C14                     NO
         CLI   DDN+5,C'C'              CHKPT REQUEST
         BE    C14                     YES, OK
         MVC   MSG14DDN,DDN            DDNAME INTO MSG
         LA    R14,MSG14               MSG14                    MSG14
         BAL   R15,X04                 U.P.MSG
C14      EQU   *
         TM    JFCBSORG,X'80'          DSORG = IS
         BZ    C15                     NO
         CLI   DDN+1,C'I'              DDNAME-DSORG = IS
         BNE   C16                     NO, ERROR
         B     C08                     CONT.
C15      EQU   *
         TM    JFCBSORG,X'40'          DSORG=PS
         BZ    C16                     NO, ERROR
         CLI   DDN+1,C'P'              DDNAME-DSORG=PS
         BNE   C16                     NO, ERROR
         B     C08                     CONT.
C16      EQU   *
         TM    JFCBSORG,X'80'          DOSRG=IS
         BO    C161                    YES
         TM    JFCBSORG,X'40'          DSORG=PS
         BO    C162                    YES
         TM    JFCBSORG,X'20'          DOSRG=DA
         BO    C163                    YES
         TM    JFCBSORG,X'02'          DSORG=PO
         BO    C164                    YES
         MVC   MSG09ORG,=C'UN'         UNKNOWN
         B     C165
C161     EQU   *
         MVC   MSG09ORG,=C'IS'
         B     C165
C162     EQU   *
         MVC   MSG09ORG,=C'PS'
         B     C165
C163     EQU   *
         MVC   MSG09ORG,=C'DA'
         B     C165
C164     EQU   *
         MVC   MSG09ORG,=C'PO'
C165     EQU   *
         MVC   MSG09DDN,DDN            MOVE DDNAME INTO MSG
         LA    R14,MSG09               MSG09                    MSG09
         BAL   R15,X04                 U.P.MSG
         B     ABTERM                  ABEND
         EJECT
***                                                                 ***
***            SELECT I/O-GROUP                                     ***
***            PERFORM I/O-LOOP, STOP AT EODAD-INPUT                ***
***                                                                 ***
D01      EQU   *
         LA    R10,DDTABLE             R10 = DD-TABLE
D02      EQU   *
         CLI   DDN,X'00'               EMPTY ELEMENT
         BE    D03                     YES, NEXT ELEMENT
         CLI   DDN,X'FF'               DDTABLE END
         BE    E01                     YES
         ICM   R11,15,DDDCBADR         R11 = DCB-ADDR
         BZ    D03                     NO, NEXT ELEMENT
         ST    R10,DDTABSTR            YES, START-ADDR.
         CLC   =C'0E',DDN+4            EOF - ONLY DD-STMT
         BNE   D04                     NO, CONT.
         MVC   MSG15DDN,DDN            DDNAME INTO MSG
         LA    R14,MSG15               MSG15                    MSG15
         BAL   R15,X04                 U.P.MSG
         B     Z01                     PROCEED LIKE EOF
D03      EQU   *
         LA    R10,DDTABOFF(,R10)      NEXT ELEMENT
         B     D02                     LOOP
D04      EQU   *
         L     R10,DDTABSTR            START-ADDR. OF DD-TABLE = R10
D05      EQU   *
         ICM   R11,15,DDDCBADR         R11 = DCB-ADDR
         BZ    D04                     NO DCB
         CLI   DDN,C'I'                INPUT
         BE    D06                     YES, GET
         L     R0,RECADDR              R0 = RECORD-ADDR
         PUT   ((R11),(0))
         AP    DDRECCNT,=P'1'          RECORD-COUNT + 1
         B     D07
D06      EQU   *
         GET   ((R11))
         ST    R1,RECADDR              R1 = RECORD-ADDR.
         AP    DDRECCNT,=P'1'          RECORD-COUNT + 1
D07      EQU   *
         LA    R10,DDTABOFF(,R10)      NEXT ELEMENT
         B     D05                     LOOP
         EJECT
***                                                                 ***
***            E N D   O F   P R O C E S S I N G                    ***
***                                                                 ***
E01      EQU   *
         LA    R14,MSG03               MSG03                    MSG03
         BAL   R15,X04                 U.P.MSG
         CLOSE (DCBPROT)
         L     R13,4(R13)
         RETURN (14,12),RC=0
         EJECT
*                                                                     *
*        Z01   E O D A D , FREEMAIN, EOF                              *
*                                                                     *
Z01      EQU   *
         L     R10,DDTABSTR            START-ADDR. IN DD-TABLE = R10
Z02      EQU   *
         ICM   R11,15,DDDCBADR         R11 = DCB-ADR
         BZ    Z14                     END OF ACTION
         L     R12,DDJFCBAD            R12 = JFCB-ADDR.
         MVC   PROTDDN,DDN             DDNAME
         MVC   PROTDSN,JFCBDSNM        DSNAME
         MVC   PROTRECC,=X'40204B2020204B202020'
         ED    PROTRECC,DDRECCNT+4     RECORD COUNT
         NI    JFCBLTYP,X'1F'          RES. BIT 012 TO 0
         LA    R15,TABLTYP             R15 = LABEL-TYPE TABLE
Z021     EQU   *
         CLI   0(R15),X'FF'            TABLE-END
         BE    Z022                    YES
         CLC   JFCBLTYP,0(R15)         LBL = TABLE
         BE    Z022                    YES
         LA    R15,4(R15)              NO, NEXT ELEMENT
         B     Z021                    LOOP
Z022     EQU   *
         MVC   PROTLBL,1(R15)          LABEL - TYPE
         NI    JFCBIND2,X'C8'          BITS 23567 TO 0
         LA    R15,TABDISP             R15 = DISP-TABLE
Z03      EQU   *
         CLI   0(R15),X'FF'            TABLE-END
         BE    Z031                    YES
         CLC   JFCBIND2,0(R15)         DISP = TABLE
         BE    Z031                    YES
         LA    R15,4(R15)              NO,NEXT ELEMENT
         B     Z03                     LOOP
Z031     EQU   *
         MVC   PROTDISP,1(R15)         DISPOSITION
         NI    JFCBSORG,X'ED'          BITS 3457 TO 0
         LA    R15,TABDSORG            R15 = DSORG-TABLE
Z04      EQU   *
         CLI   0(R15),X'FF'            TABLE-END
         BE    Z041                    YES
         CLC   JFCBSORG(1),0(R15)      DSORG = TABLE
         BE    Z041                    YES
         LA    R15,4(R15)              NO,NEXT ELEMENT
         B     Z04                     LOOP
Z041     EQU   *
         MVC   PROTORG,1(R15)          D S O R G
         LA    R15,TABRECFM            R15 = RECFM-TABLE
Z05      EQU   *
         CLI   0(R15),X'FF'            TABLE-END
         BE    Z051                    YES
         CLC   JFCBECFM,0(R15)         RECFM = TABLE
         BE    Z051                    YES
         LA    R15,5(R15)              NO, NEXT ELEMENT
         B     Z05                     LOOP
Z051     EQU   *
         MVC   PROTRECF,1(R15)         R E C F M
         XR    R15,R15                 CLEAR R15
         LH    R15,DCBLRECL            LRECL INTO R15
         CVD   R15,DW                  CONVERT TO DECIMAL
         MVC   PROTLREC-1(6),=X'402020202020'
         ED    PROTLREC-1(6),DW+5      L R E C L
         LH    R15,DCBBLKSI            BLKSIZE INTO R15
         CVD   R15,DW                  CONVERT TO DECIMAL
         MVC   PROTBLKS-1(6),=X'402020202020'
         ED    PROTBLKS-1(6),DW+5      B L K S I Z E
         MVC   PROTFILE,=CL2' '        CLEAR FILE-NO.
         MVI   PROTDEN,C' '            CLEAR DENSITY
         CLI   DCBDEVT,X'29'           3330-UNIT
         BE    Z07                     YES
         CLI   DCBDEVT,X'83'           3400-UNIT
         BE    Z06                     YES
         CLI   DCBDEVT,X'09'           ISAM 3330-UNIT
         BE    Z07
         MVC   PROTUNIT,=CL4'UNK'      UNKNOWN DEVICE-TYPE
         B     Z08
Z06      EQU   *
         MVC   PROTUNIT,=CL4'3400'     3400-UNIT
         LH    R15,JFCBFLSQ            FILE-SEQ-NO INTO R15
         CVD   R15,DW                  BIN - DEC
         MVC   PROTFILE-2(4),=X'40202120'
         ED    PROTFILE-2(4),DW+6      F I L E - N O.
         XR    R15,R15                 CLEAR R15
         IC    R15,JFCBDEN             DENSITY INTO R15
         SRL   R15,6                   BIT 01 TO 67 LEADING 0
         CVD   R15,DW                  CONVERT TO DECIMAL
         MVN   DW+7(1),=X'0F'          F-SIGN
         UNPK  PROTDEN,DW+7(1)         D E N S I T Y
         B     Z08
Z07      EQU   *
         MVC   PROTUNIT,=CL4'3330'     3330-UNIT
Z08      EQU   *
         XR    R15,R15                 CLEAR R15
         IC    R15,JFCBNVOL            NO.OF VOLUMES
         MVI   JFCBEXTL,X'FF'          END-IND.VOLUME-LIST
         CVD   R15,DW                  CONVERT TO DECIMAL
         MVC   PROTNO-1(L'PROTNO+1),=X'40202020'
         ED    PROTNO-1(L'PROTNO+1),DW+6  NO. OF VOLUMES
         MVC   PROTVOL,JFCBVOL1        1.VOLUME-SERIAL
         MVC   PROTAREA,PROTZEIL
         BAL   R15,X05                 U.P.PROT
         CLI   JFCBNVOL,X'01'          ONLY 1 VOL
         BE    Z10                     NO, NEXT DATASET
         MVI   PROTZEIL+1,C' '         CLEAR PROTLINE
         MVC   PROTZEIL+2(119),PROTZEIL+1
         LA    R15,PROTVOL             VOLUME-PROT = R15
         LA    R14,JFCBVOL2            VOLUME-JFCB = R14
Z09      EQU   *
         CLI   0(R14),X'FF'            END OF VOLUMES
         BE    Z091                    YES, PUT
         MVC   0(6,R15),0(R14)         VOL-SER INTO PROTLINE
         LA    R14,6(R14)              NEXT VOLUME
         SH    R15,=H'7'               NEXT LINE POSITION
         B     Z09                     LOOP
Z091     EQU   *
         MVC   PROTAREA,PROTZEIL
         BAL   R15,X05                 U.P.PROT
Z10      EQU   *
         CLOSE ((R11))                 CLOSE DCB
         FREEPOOL (R11)                FREE BUFFER
         ST    R11,GETMAINA            DCB-AREA
         FREEMAIN E,LV=260,A=GETMAINA
         ST    R12,GETMAINA            JFCB-AREA
         FREEMAIN E,LV=176,A=GETMAINA
         CLI   DDN+5,C'E'              EOF-REQUSTED
         BNE   Z13                     NO
         GETMAIN EC,LV=260,A=GETMAINA
         LTR   R15,R15                 CORE ALLOCATED
         BZ    Z101                    YES
         LA    R14,MSG30               MSG30                   MSG30
         BAL   R15,X04                 U.P.MSG
         B     ABTERM                  ABEND
Z101     EQU   *
         L     R11,GETMAINA            R11 = DCB
         MVC   0(100,R11),DCBOP        MOVE DCB INTO AREA
         MVC   DCBDDNAM,DDN            MOVE DDNAME INTO DCB
         OPEN  ((R11),(OUTPUT))        OPEN
         TM    DCBOFLGS,X'10'          SUCCESSFULL OPEN
         BO    Z11                     YES
         MVC   MSG33DDN,DDN            DDNAME INTO MSG
         LA    R14,MSG33               MSG33                    MSG33
         BAL   R15,X04                 U.P.MSG
         B     Z12                     CLOSE
Z11      EQU   *
         LA    R14,MSG02               MSG02                    MSG02
         BAL   R15,X04                 U.P.MSG
Z12      EQU   *
         CLOSE ((R11))                 CLOSE  -  E O F -
         FREEPOOL (R11)                FREE BUFFER
         FREEMAIN E,LV=260,A=GETMAINA
Z13      EQU   *
         XC    DDELEM,DDELEM           CLEAR TABLE-ENTRY
         LA    R10,DDTABOFF(,R10)      NEXT DATASET
         B     Z02                     LOOP
Z14      EQU   *
         LA    R14,MSG01               MSG01                    MSG01
         BAL   R15,X04                 U.P.MSG
         B     C02                     START NEXT ACTION
         EJECT
*                                                                     *
*        X01   U.P. EXTRACT                                           *
*                                                                     *
X01SAVE  DS    F
X01      ST    R15,X01SAVE             STORE REUTRN-ADDRESS
         EXTRACT TIOTADDR,FIELDS=TIOT  GET ADDR.TASK-INPUT-OUTPUT TABLE
         L     R15,TIOTADDR            PUT ADDR INTO R15
         MVC   UEB1JOBN,0(R15)         PUT JOBNAME INTO TITLE
         CLI   16(R15),C' '            PROCEDURE
         BNE   X011                    YES
         MVC   UEB1STPN,8(R15)         PUT STEPNAME INTO TITLE
         MVI   UEB1PSTP,C' '           MOVE BLANKS INTO PROC-STEPNAME
         MVC   UEB1PSTP+1(L'UEB1PSTP-1),UEB1PSTP
         B     X012                    END OF X01
X011     EQU   *
         MVC   UEB1STPN,16(R15)        PUT STEPNAME INTO TITLE
         MVC   UEB1PSTP,8(R15)         PUT PROC-STEPNAME INTO TITLE
X012     EQU   *
         L     R15,X01SAVE             LOAD RETURN-ADDRESS
         BR    R15                     RETURN
         EJECT
*
*        X02   U.P. DATE
*
X02SAVE  DS    F
X02      ST    R15,X02SAVE             STORE RETURN-ADDR.
         CALL  UHDV040S,(HDVTIMED,HDVTIMET)
         CALL  UHDV030S,(HDVTIMED,HDVDATEV,HDVDATED)
         MVC   HDVDATET,=X'4020204B20204B20204B20'
         ED    HDVDATET,HDVTIMET
         L     R15,X02SAVE             LOAD RETURN-ADDR.
         BR    R15                     RETURN
         EJECT
*
*        X03   U.P. W.T.P  - WRITE TO PROGRAMMER
*
X03SAVE  DS    F
X03      ST    R15,X03SAVE             STORE RETURN-ADDRESS
         MVC   X03WTO+10(50),0(R14)    MSG INTO WTO-AREA
X03WTO   WTO   '                                                     ',*
               ROUTCDE=11
         L     R15,X03SAVE             LOAD RETURN-ADDR.
         BR    R15                     RETURN
         EJECT
*
*        X04   U.P. MSG      R14=MSG,R15=RETURN
*
X04SAVE  DS    F
X04      ST    R15,X04SAVE             STORE RETURN-ADDR.
         CLI   12(R14),C'A'            ABEND-MSG
         BNE   X041                    NO
         MVI   ABEND,1                 SET ABEND IND.
X041     EQU   *
         MVC   PROTAREA,0(R14)         MOVE MSG TO I/O AREA
         BAL   R15,X02                 U.P.DATE/TIME
         MVC   PROTAREA+13(9),HDVDATET MOVE TIME INTO MSG
         BAL   R15,X05                 U.P. PUT PROT
         L     R15,X04SAVE             LOAD RETURN-ADDR.
         BR    R15                     RETURN
         EJECT
*
*        X05   U.P. PUT PROT   R15=RETURN
*
X05SAVE  DS    F
X05      ST    R15,X05SAVE             STORE RETURN-ADDR.
         SP    LINECNT,=P'1'           SUBTR. 1 FROM LINE-COUNT
         BNZ   X051                    NO NEW PAGE
         AP    PAGECNT,=P'1'           PAGE PLUS 1
         ZAP   LINECNT,=P'20'          MAX. 20 LINES/PAGE
         LA    R0,CHAN01               CHAN 1
         BAL   R15,X059                PUT
         OI    PAGECNT+1,X'0F'         F-ZONE
         UNPK  UEB0PAGE,PAGECNT        PAGECNT INTO TITLE
         LA    R0,UEB0                 UEB0
         BAL   R15,X059                PUT
         LA    R0,UEB1                 UEB1
         BAL   R15,X059                PUT
         LA    R0,UEB2                 UEB2
         BAL   R15,X059                PUT
         LA    R0,UEB3                 UEB3
         BAL   R15,X059                PUT
         LA    R0,UEB4                 UEB4
         BAL   R15,X059                PUT
         LA    R0,UEB5                 UEB5
         BAL   R15,X059                PUT
         LA    R0,UEB6                 UEB6
         BAL   R15,X059                PUT
X051     EQU   *
         LA    R0,PROTAREA             PROT
         BAL   R15,X059                PUT
         L     R15,X05SAVE             LOAD RETURN-ADDR.
         BR    R15                     RETURN
X059SAVE DS    F
X059     ST    R15,X059SAVE            STORE RETURN-ADDR
         PUT   DCBPROT,(0)             PUT PROT
         L     R15,X059SAVE            LOAD RETURN-ADDR.
         BR    R15                     RETURN
         EJECT
*                                                                     *
*        X06   UP BUILD DCB  R15=RETURN R10=DDTABLE-SEGMENT           *
*                 GET JFCB-STORAGE                                    *
X06SAVE  DS    F
X06      ST    R15,X06SAVE             STORE RETURN-ADDR
         GETMAIN  EC,LV=260,A=GETMAINA
         LTR   R15,R15                 CORE ALLOCATED
         BZ    X061                    YES
         LA    R14,MSG30               MSG30                    MSG30
         BAL   R15,X04                 U.P.MSG
         B     ABTERM                  ABEND
X061     EQU   *
         MVC   DDDCBADR,GETMAINA       DCB-ADDR INTO TABLE
         L     R11,DDDCBADR            R11 = DCB -ADDR
         CLC   =C'IP',DDN              INPUT-QSAM
         BE    X062                    YES
         CLC   =C'II',DDN              INPUT-ISAM
         BE    X063                    YES
         CLC   =C'OP',DDN              OUTPUT-QSAM
         BE    X064                    YES
         CLC   =C'OI',DDN              OUTPUT-ISAM (LOAD)
         BE    X065                    YES
         ABEND 4091,DUMP               NO, PROGM-ERROR
X062     EQU   *
         MVC   0(256,R11),DCBIP        MOVE DCB INTO AREA
         B     X066
X063     EQU   *
         MVC   0(256,R11),DCBII        MOVE DCB INTO AREA
         B     X066
X064     EQU   *
         MVC   0(256,R11),DCBOP        MOVE DCB INTP AREA
         B     X066
X065     EQU   *
         MVC   0(256,R11),DCBOI        MOVE DCB INTO AREA
X066     EQU   *
         MVC   DCBDDNAM,DDN            MOVE DDNAME INTO DCB
         GETMAIN EC,LV=176,A=GETMAINA
         LTR   R15,R15                 CORE ALLOCATED
         BZ    X067                    YES
         LA    R14,MSG31               MSG31                    MSG31
         BAL   R15,X04                 U.P.MSG
         B     ABTERM                  ABEND
X067     EQU   *
         MVC   DDJFCBAD,GETMAINA       JFCB-ADDR INTO TABLE
         L     R15,X06SAVE             LOAD RETURN-ADDR
         BR    R15                     RETURN
         EJECT
*                                                                     *
*        X07   U.P. CHECKPOINT    R15 = RETURN                        *
*                                                                     *
X07SAVE  DS    F
X07      ST    R15,X07SAVE             STORE RETURN-ADDR.
         AP    CHKPTCNT,=P'1'          CHECKPOINT-COUNTER + 1
         MVN   CHKPTCNT+3(1),=X'0F'    F-SIGN
         UNPK  CHKPTID,CHKPTCNT        CHKPT-CNT TO CHECKPOINT-ID.
         CHKPT CHKPTDCB,CHKPTID,8
         B     *+4(R15)                BRANCH RETURN-CODE
         B     X0700                   00-SUCCESSFULL
         B     X0704                   04-RESTART SUCCESSFULL
         B     X0708                   08-UNSUCC.
         B     X070C                   0C-UNSUCC.
         B     X0710                   10-SUCC.-COND.ERROR
         B     X0714                   14-UNSUCC.
X0700    EQU   *
         MVC   MSG04CHK,CHKPTID        CHEKPINT-ID INTO MSG
         LA    R14,MSG04               MSG04                    MSG04
         BAL   R15,X04                 U.P.MSG
         B     X071                    CONT.
X0704    EQU   *
         ZAP   LINECNT,=P'1'           NEW PAGE
         BAL   R15,X01                 U.P. EXTRACT
         BAL   R15,X02                 U.P. DATE
         MVC   UEB1DATE,HDVDATED       DATE
         MVC   UEB1TIME,HDVDATET+1     TIME
         MVC   MSG05CHK,CHKPTID        CHECKPOINT-ID INTO MSG
         LA    R14,MSG05               MSG05                    MSG05
         BAL   R15,X04                 U.P.MSG
         B     X071                    CONT.
X0708    EQU   *
         MVC   MSG17CHK,CHKPTID        CHECKPOINT-ID INTO MSG
         LA    R14,MSG17               MSG17                    MSG17
         BAL   R15,X04                 U.P.MSG
         B     ABTERM                  ABEND
X070C    EQU   *
         MVC   MSG18CHK,CHKPTID        CHECKPOINT-ID INTO MSG
         LA    R14,MSG18               MSG18                    MSG18
         BAL   R15,X04                 U.P.MSG
         B     ABTERM                  ABEND
X0710    EQU   *
         MVC   MSG19CHK,CHKPTID        CHECKPOINT-ID INTO MSG
         LA    R14,MSG19               MSG19                    MSG19
         BAL   R15,X04                 U.P.MSG
         B     X071                    CONT.
X0714    EQU   *
         MVC   MSG20CHK,CHKPTID        CHECKPOINT-ID INTO MSG
         LA    R14,MSG20               MSG20                    MSG20
         BAL   R15,X04                 U.P.MSG
         B     ABTERM                  ABEND
X071     EQU   *
         L     R15,X07SAVE             LOAD RETURN-ADDR.
         BR    R15                     RETURN
         EJECT
*
*        Y01   SYNAD - ROUTINE
*
Y01I     EQU   *
         SYNADAF ACSMETH=QISAM
         B     Y01
Y01P     EQU   *
         SYNADAF ACSMETH=QSAM
Y01      EQU   *
         MVC   MSG07SYN,50(R1)         SYNAD INTO MSG
         LA    R14,MSG06               MSG06                    MSG06
         BAL   R15,X04                 U.P.MSG
         LA    R14,MSG07               MSG07                    MSG07
         BAL   R15,X04                 U.P.MSG
         CLI   MSG07SYN+22,C'T'        TAPE
         BE    Y02                     YES
         CLI   MSG07SYN+22,C'D'        DASD
         BE    Y03                     YES
         MVC   MSG08TYP,MSG08UR        UNIT-RECORD
         B     Y04                     CONT.
Y02      EQU   *
         MVC   MSG08TYP,MSG08TA
         B     Y04
Y03      EQU   *
         MVC   MSG08TYP,MSG08DA
Y04      EQU   *
         LA    R14,MSG08               MSG08                    MSG08
         BAL   R15,X04                 U.P.MSG
         B     ABTERM                  ABEND
         EJECT
***                                                                 ***
***            D E F I N I T I O N S                                ***
***                                                                 ***
DW       DS    D                       DOUBLE-WORD
GETMAINA DS    F                       ADDR.OF GETMAIN-AREA
DDTABSTR DS    F                       START GET/PUT LOOP
RECADDR  DS    F                       RECORD ADDRESS
TIOTADDR DS    F             ADDR. OF TASK-INPUT-OUTPUT-TABLE
HDVDATEV DS    XL3           HDVDATE - VERGL-DATE  JJMMTT
HDVDATED DS    CL8           HDVDATE - DATE PRINTTABLE  TT.MM.JJ
HDVDATET DS    CL11          HDVDATE - TIME PRINTTABLE  HH.MM.SS.T
HDVTIMED DS    PL4           HDVTIME - DATE  0TTMMJJF
HDVTIMET DS    PL4           HDVTIME - TIME  HHMMSSTF
CHKPTCNT DC    PL4'0'        CHECKPOINT CONUTER
CHKPTID  DC    CL8' '        CHECKPOINT IDENTIFIKATION
CHKPTIND DC    X'00'         CHECKPOINT DD-STMT INDICATOR
CHKPTDCB DCB   DSORG=PS,MACRF=W,RECFM=U,DDNAME=CHKPT
ABEND    DC    X'00'         ABEND-IND.
OLDDDN   DS    CL8                     OLD DDNAME
MAXCOPY  DC    P'0'                    MAX.NO.OF COPIES
OUTCOPY  DC    P'0'                    OUTPUT DD-STMT COPY-NO EXPECT.
OUTCOPP  DC    P'0'                    OUTPUT DD-STMT COPY-NO
LINECNT  DC    PL2'1'                  LINE-COUNT
PAGECNT  DC    PL2'0'                  PAGE-COUNT
PARSORT1 DS    0F                      SORT-PARM 1 REF-NR.
         DC    A(DDTABLE)              ADDR. TABLE-START
         DC    F'50'                   NO. OF ELEMENTS
         DC    F'4'                    SORT FIELD LENGTH
         DC    F'0'                    REL.POS. OF SORT-FIELD
         DC    F'36'                   LENGTH OF ELEMENT
PROTAREA DS    CL121         PROT-AREA
CHAN01   DC    X'8B'         CHANNEL 1
UEB0     DC    X'09',CL8' ',C'HAMBURGER',CL48' ',C'H D 1 2 2 0 0 0'
         DC    CL31' ',C'LV '
PGMLEVEL DC    CL3' 22',CL3' '
UEB1     DC    X'11',C' DATENVERARBEITUNGS-GMBH',CL25' '
         DC    C'STANDARD SICHERUNGS- UND REORGANISATIONS PROGRAMM'
         DC    CL13' '
PGMDATE  DC    CL9'&SYSDATE'
UEB2     DC    X'09',C'2000   H A M B U R G   11',CL24' ',6CL2'- '
         DC    C'P  R  O  T  O  K  O  L  L',6CL2' -',CL13' ',C'SEITE '
UEB0PAGE DC    CL3' '
UEB3     DC    X'09',CL7' ',C'ALTER WALL 12',CL100' '
UEB4     DC    X'11',CL7' ',C'040  37 00 51',CL9' ',C'J O B   '
UEB1JOBN DC    CL8' ',C'   S T E P   '
UEB1STPN DC    CL8' ',C'   PROCSTEP  '
UEB1PSTP DC    CL8' ',C'  DATE  '
UEB1DATE DC    CL8' ',C'  TIME  '
UEB1TIME DC    CL8' ',C' '
UEB5     DC    X'09',CL57' ',C'ANZAHL DS  REC',CL10' ',C'BLK DIS LA-'
         DC    C' D FL',CL6' ',C'NO. VOLUME',CL7' '
UEB6     DC    X'11',C'DD-NAME  ',15C'-',C'DATA SET NAME',16C'-'
         DC    CL4' ',C'SAETZE ORG FM   LRECL  SIZE POS BEL N NO UNIT'
         DC    C' VOL SERIAL',CL7' '
PROTZEIL DC    X'09'
PROTDDN  DC    CL8' ',C' '
PROTDSN  DC    CL44' '
PROTRECC DC    CL10' ',C' '
PROTORG  DC    CL3' ',C' '
PROTRECF DC    CL4' ',C' '
PROTLREC DC    CL5' ',C' '
PROTBLKS DC    CL5' ',C' '
PROTDISP DC    CL3' ',C' '
PROTLBL  DC    CL3' ',C' '
PROTDEN  DC    C' ',C' '
PROTFILE DC    CL2' ',C' '
PROTUNIT DC    CL4' ',C' '
PROTNO   DC    CL3' ',C' '
PROTVOL  DC    CL6' ',CL7' '
         EJECT
*                                                                     *
*              DD-STATEMENT - TABLE  AND  DUMMY-SECTION               *
*                                                                     *
DDTABLE  DS    0D
         DC    50XL36'00',12X'FF',24X'00'
DDTABOFF EQU   36
DDDSECT  DSECT
DDELEM   DS    0CL36                   ELEMENT
DDNSR    DS    CL2           SORT REF-NR.
DDNSI    DS    CL1           SORT I/O
DDNSC    DS    CL1           SORT COPIES
DDN      DS    CL8          DDNAME
DDDCBADR DS    CL4           DCB-ADDRESS
DDRECCNT DS    PL8           RECORD-COUNT
DDJFCBAD DS    CL4           JOB-FILE CONTROL BLOCK ADDRESS
UHDV010S CSECT
         EJECT
* * *                                                             * * *
*                                                                     *
*        JFCB  DUMMY-SECTION JOB-FILE-CONTROL-BLOCK                   *
*                                                                     *
* * *                                                             * * *
JFCBDSCT DSECT
JFCB     DS    0CL176
JFCBDSNM DS    CL44          DATA-SET-NAME
JFCBELNM DS    CL8           ELEMENT-NAME OR REL.GENER.NO.
JFCBTSDM DS    X             JOB / DATA-MGMT  INTERFACE
JFCBDSCB DS    XL3           TTR OF FORMAT1 DSCB ON 1.VOL
JFCBCBID DS    CL4           FCB-ID
         DS    CL6           RES.
JFCBLTYP DS    X             LABEL TYPE
JFCBOTTR DS    0XL3          DASD,MOD TTR OF E-O-D IND.
JFCBUFOF DS    X             TAPE BUFFER OFFSET
JFCBFLSQ DS    XL2           TAPE FILE SEQ.NO.
JFCBVLSQ DS    XL2           VOLUME SEQ. NO.
JFCBMASK DS    XL8           DATA MGMT+MASK
JFCBCRDT DS    XL3           CREATION DATE  YDD
JFCBXPDT DS    XL3           EXPIRATION DATE  YDD
JFCBIND1 DS    X             IND. 1
JFCBIND2 DS    X             IND. 2
JFCBUFNO DS    X             NO.OF BUFFERS
JFCB89   DS    X             HAIR, FTEK, FLAN
JFCBUFL  DS    XL2           BUFFER LENGTH
JFCBROPT DS    X             ERROPT
JFCB93   DS    X             DEV. CHARATERSITICS
JFCBDEN  DS    X             TAPE DENSITY
JFCB95   DS    XL3           BDAM OR MOD TTR
JFCBSORG DS    XL2           DSORG
JFCBECFM DS    X                       RECFM
JFCBPTCD DS    X             OPTION-CODES
JFCBLKSI DS    XL2           BLOCKSIZE
JFCBRECL DS    XL2           LRECL
JFCBNCP  DS    X             NO.CHAN.PGMS
JFCBNTM  DS    X             TRKS MASTER INDEX
JFCBRKP  DS    XL2           R.K.P.
JFCBYLOF DS    X             CYLOF
         DS    CL2           RES.
JFCBUTLI DS    BL3           SYSOUT-LIMIT
         DS    C             RES.
JFCBNVOL DS    X             NO.OF VOL-SER
JFCBVOLS DS    0CL30         VOL-SER
JFCBVOL1 DS    CL6
JFCBVOL2 DS    CL6
JFCBVOL3 DS    CL6
JFCBVOL4 DS    CL6
JFCBVOL5 DS    CL6
JFCBEXTL DS    X
JFCBEXAD DS    XL3           TTR OF EXT.JFCB
JFCBPQTY DS    XL3           DASD PRIM.QUANT.
JFCBCTRI DS    X             SPACE-PARM
JFCBSQTY DS    XL3           DASD SEC.QUANT.
JFCBLGS1 DS    X                       FLAG BYTE
JFCBDQTY DS    XL3                     DASD IMBED.INDEX QUANT.
JFCBSPNM DS    XL3           MS-ADDR. JFCB SPLIT-CML
JFCBABST DS    XL2           ABSTR.REL.ADDR.
JFCBSBNM DS    XL3           MS-ADDR. JFCB SUBALLOC
JFCBDRLH DS    XL3           AVG.BLK-LENGTH
JFCBVLST DS    X             VOLUME-COUNT
JFCBSPTN DS    X             SPLIT-CYL
         EJECT
***                                                                 ***
***            M E S S A G E S                                      ***
***                                                                 ***
UHDV010S CSECT
MSG01    DC    X'11',CL12'UHDV010S-01I'
MSG01TME DC    CL8' ',C' '
         DC    CL27' AKTION ERFOLGREICH BEENDET',36CL2' -'
MSG02    DC    X'11',CL12'UHDV010S-02I'
MSG02TME DC    CL8' ',C' '
         DC    CL99' EOF ERFOLGREICH GESCHRIEBEN'
MSG03    DC    X'11',CL12'UHDV010S-03I'
MSG03TME DC    CL8' ',C' '
         DC    CL99' JOB ERFOLGREICH BEENDET'
MSG04    DC    X'11',CL12'UHDV010S-04I'
MSG04TME DS    CL8' ',C' '
         DC    CL12' CHECKPOINT '
MSG04CHK DC    CL8' ',CL79' ERFOLGREICH GESCHRIEBEN'
MSG05    DC    X'11',CL12'UHDV010S-05I'
MSG05TME DC    CL8' ',C' '
         DC    CL24' RESTART AUF CHECKPOINT '
MSG05CHK DC    CL8' ',CL67' ERFOLGREICH DURCHGEFUEHRT'
MSG06    DC    X'09',CL12'UHDV010S-06A'
MSG06TME DC    CL8' ',C' '
         DC    CL99'*I/O ERROR, NAECHSTE ZEILE IST SYNADAF-MESSAGE'
MSG07    DC    X'09',CL12'UHDV010S-07A'
MSG07TME DC    CL8' ',C' '
MSG07SYN DC    CL77' ',CL22' '
MSG08    DC    X'11',CL12'UHDV010S-08A'
MSG08TME DC    CL8' ',C' '
         DC    CL57'---JOB--,--STEP--,ADR,DV,-DDNAME-,-OPER-,ERROR DESC*
               RIPT.,'
MSG08TYP DC    CL21' ',CL21' '
MSG08UR  DC    CL21'**************,ACCESS'
MSG08TA  DC    CL21'BLOCKNO,ACCESS       '
MSG08DA  DC    CL21' B B C C H H R,ACCESS'
MSG09    DC    X'11',CL12'UHDV010S-09A'
MSG09TME DC    CL8' ',C' '
         DC    CL8'*DDNAME '
MSG09DDN DC    CL8' ',CL10'DSORG IST '
MSG09ORG DC    CL2'  ',CL71' '
MSG10    DC    X'11',CL12'UHDV010S-10A'
MSG10TME DC    CL8' ',C' '
         DC    CL99'*VERARBEITUNG ABGEBROCHEN'
MSG11    DC    X'11',CL12'UHDV010S-11A'
MSG11TME DC    CL8' ',C' '
         DC    CL14'*DD-STATEMENT '
MSG11DDN DC    CL8' ',CL77' IST NICHT FUER UHDV010S ERFORDERLICH ODER F*
               FALSCH'
MSG12    DC    X'11',CL12'UHDV010S-12A'
MSG12TME DC    CL8' ',C' '
         DC    CL25'*FUER INPUT-DD-STATEMENT '
MSG12DDN DC    CL8' ',CL66' FEHLEN OUTPUT DD-STATEMENTS'
MSG13    DC    X'11',CL12'UHDV010S-13A'
MSG13TME DC    CL8' ',C' '
         DC    CL26'*FUER OUTPUT-DD-STATEMENT '
MSG13DDN DC    CL8' ',CL65' FEHLT EIN INPUT-DD-STATEMENT'
MSG14    DC    X'11',CL12'UHDV010S-14A'
MSG14TME DC    CL8' ',C' '
         DC    CL09'*DD-NAME '
MSG14DDN DC    CL8' ',CL82' HAT DISP=MOD OHNE CHECKPOINT-ANFORDERUNG'
MSG15    DC    X'11',CL12'UHDV010S-15W'
MSG15TME DC    CL8' ',C' '
         DC    CL9'*DD-NAME '
MSG15DDN DC    CL8' ',CL82' HAT EOF-ANFORDERUNG OHNE OUTPUT-DD-STATEMEN*
               T'
MSG16    DC    X'11',CL12'UHDV010S-16A'
MSG16TME DC    CL8' ',C' '
         DC    CL14'*DD-STATEMENT '
MSG16DDN DC    CL8' ',CL77' FEHLT'
MSG17    DC    X'11',CL12'UHDV010S-17A'
MSG17TME DC    CL8' ',C' '
         DC    CL12'*CHECKPOINT '
MSG17CHK DC    CL8' ',CL79' NICHT ERFOLGREICH, RETURN-CODE 08, CHECKPOI*
               NT DATASET VOLL'
MSG18    DC    X'11',CL12'UHDV010S-18A'
MSG18TME DC    CL8' ',C' '
         DC    CL12'*CHECKPOINT '
MSG18CHK DC    CL8' ',CL79' NICHT ERFOLGREICH, RETURN-CODE 0C, UNKORRIG*
               .FEHLER ODER CHKPT-DD-STMT.FEHLT'
MSG19    DC    X'11',CL12'UHDV010S-19 '
MSG19TME DC    CL8' ',C' '
         DC    CL12'*CHECKPOINT '
MSG19CHK DC    CL8' ',CL79' ERFOLGREICH, RETURN-CODE 10, MOEGLICHE FEHL*
               ERBEDINGUNGEN'
MSG20    DC    X'11',CL12'UHDV010S-20A'
MSG20TME DC    CL8' ',C' '
         DC    CL12'*CHECKPOINT '
MSG20CHK DC    CL8' ',CL79' NICHT ERFOLGREICH, RETURN-CODE 14, EOV-BEDI*
               NGUNG AUF CHKPT-BAND'
MSG21    DC    X'11',CL12'UHDV010S-21A'
MSG21TME DC    CL8' ',C' '
         DC    CL14'*DD-STATEMENT '
MSG21DDN DC    CL8' ',CL77' NICHT I(INPUT) ODER O(OUTPUT) IN ST.1'
MSG22    DC    X'11',CL12'UHDV010S-22A'
MSG22TME DC    CL8' ',C' '
         DC    CL14'*DD-STATEMENT '
MSG22DDN DC    CL8' ',CL77' NICHT P(QSAM) ODER I(ISAM) IN ST.2'
MSG23    DC    X'11',CL12'UHDV010S-23A'
MSG23TME DC    CL8' ',C' '
         DC    CL14'*DD-STATEMENT '
MSG23DDN DC    CL8' ',CL77' REFERENZ-NR. (ST.3-4) NICHT NUMERISCH'
MSG24    DC    X'11',CL12'UHDV010S-24A'
MSG24TME DC    CL8' ',C' '
         DC    CL14'*DD-STATEMENT '
MSG24DDN DC    CL8' ',CL77' ANZAHL KOPIEN (ST.5) NICHT NUMERISCH'
MSG25    DC    X'11',CL12'UHDV010S-25A'
MSG25TME DC    CL8' ',C' '
         DC    CL14'*DD-STATEMENT '
MSG25DDN DC    CL8' ',CL77' NICHT E(EOF) ODER C(CHECKPOINT) ODER BLANK *
               IN ST.6'
MSG26    DC    X'11',CL12'UHDV010S-26A'
MSG26TME DC    CL8' ',C' '
         DC    CL14'*DD-STATEMENT '
MSG26DDN DC    CL8' ',CL77' O(OUTPUT) ST.1 MIT E(EOF) ST.6 UNVERTRAEGLI*
               CH'
MSG27    DC    X'11',CL12'UHDV010S-27A'
MSG27TME DC    CL8' ',C' '
         DC    CL14'*DD-STATEMENT '
MSG27DDN DC    CL8' ',CL77' I(INPUT) ST.1 MIT C(CHECKPOINT) ST.6 UNVERT*
               RAEGLICH'
MSG28    DC    X'11',CL12'UHDV010S-28A'
MSG28TME DC    CL8' ',C' '
         DC    CL14'*DD-STATEMENT '
MSG28DDN DC    CL8' ',CL77' ST.7-8 NICHT BLANK'
MSG29    DC    X'11',CL12'UHDV010S-29A'
MSG29TME DC    CL8' ',C' '
         DC    CL99'*DD-STMT-TABELLE VOLL,LAUF MIT WENIGER DD-STMT WIED*
               ERHOLEN'
MSG30    DC    X'11',CL12'UHDV010S-30A'
MSG30TME DC    CL8' ',C' '
         DC    CL99'*HAUPTSPEICHER NICHT AUSREICHEND,GETMAIN 260 BYTES *
               RETURN-CODE 04'
MSG31    DC    X'11',CL12'UHDV010S-31A'
MSG31TME DS    CL8' ',C' '
         DC    CL99'*HAUPTSPEICHER NICHT AUSREICHEND,GETMAIN 176 BYTES *
               RETURN-CODE 04'
MSG32    DC    X'11',CL12'UHDV010S-32A'
MSG32TME DC    CL8' ',C' '
         DC    CL14'*DD-STATEMENT '
MSG32DDN DC    CL8' ',CL77' OPEN NICHT ERFOLGREICH'
MSG33    DC    X'11',CL12'UHDV010S-33A'
MSG33TME DC    CL8' ',C' '
         DC    CL9'*DD-NAME '
MSG33DDN DC    CL8' ',CL82' OPEN FUER EOF NICHT ERFOLGREICH, KEIN EOF G*
               ESCHRIEBEN'
MSG34    DC    X'11',CL12'UHDV010S-34A'
MSG34TME DC    CL8' ',C' '
         DC    CL9'*DD-NAME '
MSG34DDN DC    CL8' ',CL82' FORDERT CHECKPOINT, CHKPT-DD-STATEMENT FEHL*
               T'
         EJECT
*
*        DCB   RDJFCB   /  EXIT-LIST  /  JFCB-AREA
*
DCBRJFCB DCB   DSORG=PS,MACRF=GM,DDNAME=XXXXXXXX,EXLST=EXLRJFCB
EXLRJFCB DS    0F
         DC    X'87',AL3(JFCBAREA)
JFCBAREA DS    CL176
         EJECT
*                                                                     *
*        DCB'S                                                        *
*                                                                     *
DCBIP    DCB   DDNAME=IPXXXX,DSORG=PS,MACRF=GL,SYNAD=Y01P,EODAD=Z01
DCBII    DCB   DDNAME=IIXXXX,DSORG=IS,MACRF=GL,SYNAD=Y01I,EODAD=Z01
DCBOP    DCB   DDNAME=OPXXXX,DSORG=PS,MACRF=PM,SYNAD=Y01P,EODAD=Z01
DCBOI    DCB   DDNAME=OIXXXX,DSORG=IS,MACRF=PM,SYNAD=Y01I,EODAD=Z01
DCBPROT  DCB   DDNAME=PROT,DSORG=PS,MACRF=PM,RECFM=FM,LRECL=121,       *
               BLKSIZE=121,BUFNO=1
         EJECT
*                                                                     *
*        TABLTYP   TABLE OF LABEL-TYPES                               *
*                                                                     *
TABLTYP  DS    0F
         DC    X'02',CL3'SL'
         DC    X'01',CL3'NL'
         DC    X'10',CL3'BLP'
         DC    X'0A',CL3'SUL'
         DC    X'04',CL3'NSL'
         DC    X'FF',CL3'UNK'
*                                                                     *
*        TABDISP   TABLE OF DISPOSITION                               *
*                                                                     *
TABDISP  DS    0F
         DC    X'40',CL3'OLD'
         DC    X'80',CL3'MOD'
         DC    X'C0',CL3'NEW'
         DC    X'48',CL3'SHR'
         DC    X'FF',CL3'UNK'
*                                                                     *
*        TABDSORG  DATA-SET-ORG  TABLE                                *
*                                                                     *
TABDSORG DS    0F
         DC    X'40',CL3'PS'
         DC    X'80',CL3'IS'
         DC    X'20',CL3'DA'
         DC    X'02',CL3'PO'
         DC    X'FF',CL3'UNK'
*                                                                     *
*        TABRECFM  TABLE OF RECORD FORMAT                             *
*                                                                     *
TABRECFM DS    0F
         DC    X'98',CL4'FBS'
         DC    X'90',CL4'FB'
         DC    X'80',CL4'F'
         DC    X'50',CL4'VB'
         DC    X'58',CL4'VBS'
         DC    X'40',CL4'V'
         DC    X'FF',CL4'UNK'
         EJECT
***                                                                 ***
***            L I T E R A L S                                      ***
***                                                                 ***
         LTORG
         PUSH  PRINT
         PRINT OFF
         DC    C'COPYRIGHT BY HAMBURGER DATENVERARBEITUNGS GMBH '
         DC    C'ALTER WALL 12  2000 HAMBURG 11 '
         DC    C'*',C'&SYSDATE',C'*'
         PRINT ON
         POP   PRINT
         EJECT
*                                                                     *
*        D C B D   D U M M Y  -  S E C T I O N   I H A D C B          *
*                                                                     *
         DCBD  DSORG=(IS,PS),DEVD=(DA,TA)
         CSECT
         DC    CL21'026HD122610T 05/04/76'
         END
