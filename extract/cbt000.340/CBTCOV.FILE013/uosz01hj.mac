./  ADD        NAME=UXXX01HJ
BENOETIGTE JCL FUER MD300101, MD300204, MD300501, VSMFLST UND VSMFLSTS,
SOWIE DAZUGEHOERIGE PARAMETERLISTE, ASSEMBLER-SOURCE UND DATENLISTEN:
DIESE PROCEDURE WIRD WOECHENTLICH DURCHGEFUEHRT.
AUS DEN AUF EIN WOCHENBAND GESPEICHERTEN SYS1.MANX UND SYS1.MANY BE-
STAENDEN WIRD PRO JOB EIN SUMMEMSATZ ERSTELLT,DER DIE GRUNDLAGE FUER
WEITERE LISTUNGEN BILDET(SIEHE ERLAUETERUNGEN IN DEN PROGRAMMEN).
WIETERS WERDEN AUSWERTUNGEN UEBER CPU-AUSLASTUNGEN SOWIE UEBER
TSO-BENUTZUNG ERSTELLT UND GELISTET.
DIE SORT.SYSIN KARTEN UND DIE SORTEXITS SIND UNTER DEM JEWEILIGEN MEM-
BERNAMEN BEIGEFUEGT.
//SMF   PROC  IN=SMFDMP,LABEL=L,W=WJJWW,T=JJTTT,OUT=VOLSER
//S01  EXEC  PGM=ICEMAN,REGION=1024K,COND=EVEN
//SYSOUT DD  SYSOUT=A
//SYSABEND DD SYSOUT=A,SPACE=(CYL,(3,1))
//SORTLIB DD DSNAME=SYS1.CALIB,DISP=SHR
//EXITLIB DD DSNAME=MD01.LOAD,DISP=SHR
//SORTIN  DD DSN=MD3.SMDMP.&W,UNIT=TAPE,VOL=SER=&IN,DISP=OLD
//SORTWK01 DD UNIT=SYSDA,SPACE=(CYL,(80))
//SORTWK02 DD UNIT=SYSDA,SPACE=(CYL,(80))
//SORTWK03 DD UNIT=SYSDA,SPACE=(CYL,(80))
//SORTOUT DD DSN=SMFSORT,UNIT=SYSDA,DISP=(,PASS),
//        DCB=(RECFM=VBS,LRECL=4096,BLKSIZE=4096),SPACE=(CYL,(50,50))
//SORDATA DD UNIT=SYSDA,SPACE=(CYL,(20,30)),
//        DCB=(RECFM=VBS,LRECL=4096,BLKSIZE=4096)
//HDRDATA DD UNIT=SYSDA,SPACE=(CYL,(9,9)),
//        DCB=(RECFM=VBS,LRECL=4096,BLKSIZE=4096)
//SYSIN DD DSN=MD.PARMLIB(PRMSMFSO),DISP=SHR
//S02 EXEC PGM=MD300501,PARM='/&T.700060999990012501010500BR',
//      REGION=396K
//SYSABEND DD SYSOUT=A
//SYSPRINT  DD  SYSOUT=A
//PLIDUMP  DD  SYSOUT=A
//SMFBD DD DSN=SMFSORT,UNIT=SYSDA,DISP=(OLD,PASS)
//LISTE DD  SYSOUT=A,DCB=(RECFM=FBA,LRECL=133,BLKSIZE=2660),
//          SPACE=(2660,(150,20),RLSE)
//S02A    EXEC  PGM=MD300501,PARM='/&T.710080999990012501010500BR',
//             REGION=396K,COND=EVEN
//SYSPRINT  DD  SYSOUT=A
//PLIDUMP  DD  SYSOUT=A
//SMFBD DD DSN=SMFSORT,UNIT=SYSDA,DISP=(OLD,PASS)
//LISTE DD SYSOUT=A,DCB=(RECFM=FBA,LRECL=133,BLKSIZE=2660),
//         SPACE=(2660,(150,20),RLSE)
//S03   EXEC  PGM=MD300101,COND=EVEN,PARM='/&W'
//SYSPRINT DD SYSOUT=A
//PLIDUMP DD SYSOUT=A
//SYSABEND DD SYSOUT=A
//DISKOUT DD DSN=MD3.SUCHO.&W,UNIT=TAPE,VOL=SER=&OUT,DISP=(,PASS),
//           DCB=(RECFM=FB,LRECL=192,BLKSIZE=384),LABEL=&LABEL
//TAPEIN  DD DSN=SMFSORT,DISP=(OLD,DELETE),
//      DCB=(RECFM=VBS,LRECL=4096,BLKSIZE=4096,EROPT=SKP),UNIT=SYSDA
//S04   EXEC  PGM=VSMFLST
//SYSABEND DD SYSOUT=A
//DISKIN DD DSN=MD3.SUCHO.&W,UNIT=TAPE,VOL=SER=&OUT,DISP=(OLD,PASS),
//          DCB=(RECFM=FB,LRECL=192,BLKSIZE=384),LABEL=&LABEL
//CARD  DD  DSN=MD.PARMLIB(ALLBA),DISP=SHR,UNIT=SYSDA,
//          DCB=(RECFM=FB,LRECL=80,BLKSIZE=240)
//LIST  DD  SYSOUT=A,SPACE=(CYL,(5,1)),
//          DCB=(RECFM=FBA,LRECL=133,BLKSIZE=2660)
//S05   EXEC  PGM=ICEMAN,REGION=1024K
//SYSOUT DD SYSOUT=A
//SORTLIB DD DSN=SYS1.CALIB,DISP=SHR
//SORTIN  DD DSN=MD3.SUCHO.&W,UNIT=TAPE,VOL=SER=&OUT,DISP=(OLD,KEEP),
//           DCB=(RECFM=FB,LRECL=192,BLKSIZE=384),LABEL=&LABEL
//SORTWK01 DD UNIT=SYSDA,SPACE=(CYL,(20))
//SORTWK02 DD UNIT=SYSDA,SPACE=(CYL,(20))
//SORTWK03 DD UNIT=SYSDA,SPACE=(CYL,(20))
//SORTOUT DD UNIT=SYSDA,SPACE=(CYL,(15)),DSN=SMF.SORTOUT2,
//           DISP=(NEW,PASS),DCB=(RECFM=FB,LRECL=192,BLKSIZE=384)
//SYSIN   DD DSN=MD.PARMLIB(PRMSMFS1),DISP=SHR
//S06    EXEC  PGM=VSMFLST
//SYSABEND DD SYSOUT=A
//DISKIN DD DSN=SMF.SORTOUT2,UNIT=SYSDA,DISP=(OLD,PASS),
//          DCB=(RECFM=FB,LRECL=192,BLKSIZE=384)
//CARD  DD  DSN=MD.PARMLIB(GRUPLIST),DISP=SHR,UNIT=SYSDA,
//          DCB=(RECFM=FB,LRECL=80,BLKSIZE=240)
//LIST  DD  SYSOUT=L,DCB=(RECFM=FBA,LRECL=133,BLKSIZE=2660),
//          SPACE=(CYL,(5,1))
//S07    EXEC  PGM=VSMFLSTS
//DISKIN DD DSN=SMF.SORTOUT2,UNIT=SYSDA,DISP=(OLD,DELETE),
//          DCB=(RECFM=FB,LRECL=192,BLKSIZE=384)
//CARD  DD  DSN=MD.PARMLIB(SSLIST),DISP=SHR,UNIT=SYSDA,
//          DCB=(RECFM=FB,LRECL=80,BLKSIZE=160)
//LIST  DD  SYSOUT=A,DCB=(RECFM=FBA,LRECL=133,BLKSIZE=2660),
//          SPACE=(CYL,(5,1))
//TSOAUSL      EXEC PGM=MD300204,PARM='R,ISASIZE(8K)',REGION=1024K
//SYSPRINT     DD   SYSOUT=A
//PLIDUMP      DD   SYSOUT=A
//SYSOUT       DD   SYSOUT=A
//SORTLIB      DD   DISP=SHR,DSNAME=SYS1.CALIB
//SORTIN       DD   UNIT=SYSDA,SPACE=(CYL,(10,1)),
//             DCB=(RECFM=FB,LRECL=80,BLKSIZE=800)
//SORTOUT      DD   UNIT=SYSDA,SPACE=(CYL,(10,1)),
//             DCB=(RECFM=FB,LRECL=80,BLKSIZE=800)
//SMFDATA DD DSN=MD3.SMDMP.&W,VOL=SER=&IN,DISP=(OLD,KEEP),
//           UNIT=TAPE,
//           DCB=(RECFM=VBS,LRECL=4096,BLKSIZE=4096,EROPT=SKP)
//SYSIN1       DD   DSN=MD.PARMLIB(DBANKUSE),DISP=SHR
//SYSIN2       DD   DSN=MD.PARMLIB(REFERAT),DISP=SHR
//PRINT        DD   SYSOUT=A,DCB=(RECFM=FBA,LRECL=133,BLKSIZE=1330)
//PRINTA       DD   SYSOUT=L,DCB=(RECFM=FBA,LRECL=133,BLKSIZE=1330)
//SORTWK01     DD   UNIT=SYSDA,SPACE=(CYL,(5))
//SORTWK02     DD   UNIT=SYSDA,SPACE=(CYL,(5))
//SORTWK03     DD   UNIT=SYSDA,SPACE=(CYL,(5))
//SORTWK04     DD   UNIT=SYSDA,SPACE=(CYL,(5))
//SORTWK05     DD   UNIT=SYSDA,SPACE=(CYL,(5))
//SORTWK06     DD   UNIT=SYSDA,SPACE=(CYL,(5))
//SORTWK07     DD   UNIT=SYSDA,SPACE=(CYL,(5))

 PARAMETERLISTE1: PRMSMFSO
 SORT  FIELDS=(19,16,A,11,4,A,7,4,A),FORMAT=BI,SIZE=E9000
 MODS  E15=(E15,700,EXITLIB,N),E35=(E35,4500,EXITLIB,N)
 END

 PARAMETERLISTE2: PRMSMFS1
 SORT  FIELDS=(1,4,A,5,4,A,9,4,A),FORMAT=BI,SIZE=E500
 END

 PARAMETERLISTE3: PRMSMF01
 SORT  FIELDS=(19,8,A,31,4,A,27,4,A,11,4,A,7,4,A),FORMAT=BI,SIZE=E9000
 MODS  E15=(E15JL1,6500,EXITLIB,N),E35=(E35JL,6500,EXITLIB,N)
 END

 PARAMETERLISTE4: PRMSMF02
 SORT  FIELDS=(11,4,A,7,4,A),FORMAT=BI,SIZE=E9000
 MODS E15=(E15JL2,6500,EXITLIB,N),E35=(E35JL,6500,EXITLIB,N)
 END

PARAMETERLISTE5: DBANKUSE
BMUK
BUKA00
BUKA01
BUKA02
BUKA03
BUKA04
BUKA05
BUKA06
BUKA07
BUKA08
BUKA09
BUKA10
BUKA11
BUKA12
FINANZ
HANDEL
IBM2
LINZ
NOE
NOE1
SALZBG
SEITL
SOZIAL
UMWELT
WIEN
********
BACHNER
BOSSE
EBERHA
FUCHS
GISSER
GOESCHL
GROSDF
GYOERI
KARTEI
KASTNER
KERSHAN
MAK
MUE
OESTZ
REITMAI
SCHMIDL
SCHOERG
STADLER
VANICEK
********
ABDA
APL
BADER
BORSHKE
CIZEK
DB73A
DB73B
EGGER
FLORIAN
FRITSCH
GRAFF
HARTMAN
HERZOG
HESS
IIS
KOLLER
LINDNER
LUTZ
MD01
MD02
PILAT
POLESNY
RENDL
RIESS
RIHA
SCHOLZE
SCHUL
STEINER
VASICEK
ZELLER
ZILLMAN
********
********

PARAMETERLISTE6: REFERAT
******** REF T1 HARTMANN
BADER
BORSHKE
HARTMAN
HERZOG
LUTZ
ZELLER
******** REF T2.1 CIZEK
CIZEK
******** REF T2.2 GRAFF
ABDA
GRAFF
******** REF T2.3 GRUPPEN
EGGER
FLORIAN
FRITSCH
HESS
KOLLER
LINDNER
RIESS
RIHA
SCHOLZE
STEINER
VASICEK
******** REF T2.4 MD
BURGET
MD01
MD02
MD03
RENDL
******** REF T2.5 ENTWICKLUNG
DB73A
DB73B
DEMO
EXTERN
IIS
PILAT
SCHUL
ZILLMAN
******** FA  FACHABTEILUNGEN
BACHNER
BOSSE
EBERHA
FUCHS
GISSER
GOESCHL
GROSDF
GYOERI
KARTEI
KERSHAN
MUE
OESTZ
REITMAI
SCHOERG
STADLER
VANICEK
******** EXT EXTERNE
BUKA00
BUKA01
BUKA02
BUKA03
BUKA04
BUKA05
BUKA06
BUKA07
BUKA08
BUKA09
BUKA10
BUKA11
FINANZ
HANDEL
IBM2
LINZ
NOE
NOE1
SALZBG
SEITL
SINGER
SOZIAL
UMWELT
WIEN
&&&&&&&&

ASSEMBLER-SOURCE1: E15
* STATUS - CHANGE LEVEL 1
* FUNCTION -
*    ROUTINE IS USED DURING THE SORTING OF SETS CREATED BY SYSTEM
*    MANAGEMENT FACILITIES.IT EXTRACTS NON-JOB ORIENTED RECS FROM
*    SORT INPUT SET AND RETAINS THE EXTRACTED RECS IN A TEMP SET.
*    NON-JOB ORIENTED RECORDS ARE RE-INSERTED INTO THE OUTPUT SET
*    BY AN E35 EXIT ROUTINE.
* ENTRY POINTS -
*         E15
* INPUT - REGISTER 1 POINTS TO A ONE WORD PARAMER LIST.THIS LIST
*    CONTAINS THE ADDRESS OF THE NEW RECORD.
* OUTPUT - A TEMPORARY DATA SET CONTAINING THOSE RECORDS DELETED
*    FROM THE SORT BY THIS ROUTINE.
* EXTERNAL REFERENCES - NONE
* EXITS,NORMAL -   TO OS/SORT
*    RETURN CODES USED
*    RC=0   NO ACTION
*    RC=4   DELETE
*    RC=8   DO NOT RETURN
* EXITS,ERROR - NONE
* TABLES/WORK AREAS - DSECT FOR RECORD FORM
* ATTRIBUTES - STANDARD
* CHARACTER CODE DEPENDENCY - NONE
* NOTES - ENTERED FROM OS/SORT
R00      EQU   0                        REGISTERS 0
R01      EQU   1                        1
R02      EQU   2                        2
R09      EQU   9                        9
R10      EQU   10                       10
DCBREG   EQU   11                       DCB REG
R12      EQU   12                       12
R13      EQU   13                       13
R15      EQU   15                       15
HDRID    EQU   X'02'                    HEADER ID
TLRID    EQU   X'03'                    TRAILER ID
STERMID  EQU   X'04'                    STEP TERM ID
JTERMID  EQU   X'05'                    JOB TERM ID
OPFORMID EQU   X'06'                    OP FORM ID
OPCLASID EQU   X'07'                    OP CLASS ID
ALLRECOV EQU   X'0A'                          OESTZ/75
INPUTACT EQU   X'0E'                          OESTZ/75
OUTPUTAC EQU   X'0F'                          OESTZ/75
SCRATCH  EQU   X'11'                          OESTZ/75
RENAM    EQU   X'12'                          OESTZ/75
JOBCOMM  EQU   X'14'                          OESTZ/75
HASPPRGE EQU   X'1A'                          OESTZ/75
TSSTPTRM EQU   X'22'                          OESTZ/75
TSLOGOFF EQU   X'23'                          OESTZ/75
DYNAMDD  EQU   X'28'                          OESTZ/75
D4       EQU   4                        DISP OF 4
D8       EQU   8                        DISP OF 8
D24      EQU   24                       DISP OF 24
L8       EQU   8                        LENGTH OF 8
X10      EQU   X'10'                    TEST FOR OPEN
E15      CSECT                          EXIT 15
         USING *,R12                    DECLARE BASE
         SAVE  (14,12)                  SAVE SORTS REGS
         LR    R12,R15                  SET UP BASE
         USING RECDFORM,R10             BASE FOR REC'D FORM
         LA    DCBREG,E15DCB            SET UP DCB BASE
         USING IHADCB,DCBREG            DECLARE BASE FOR DCBD
         ST    R13,SAVDS+D4             CHAIN SORT &  E15 SAVE AREA
         LR    R02,R13
         LA    R13,SAVDS                PRIME SAVE REGISTER
         ST    R13,D8(R02)              CHAIN E15 & SORT SAVE AREA
         L     R10,0(R01)               LOAD PARAMETER FROM SORT
         TM    DCBOFLGS,X10             IS DATA SET OPEN
         BO    E15NOPEN                 YES,GO AROUND OPED PROCESSING
         OPEN  (E15DCB,(OUTPUT),E15DCBA,(OUTPUT))
E15NOPEN LTR   R10,R10                  TEST FOR END OF DATA
         BZ    E15NORTN                 YES,GO CLOSE OUT
         CLI   RECDID,HDRID             IS THIS DUMP HDR
         BE    E15XCPTA                 YES,COMPARE WITH PREVIOUS
         CLI   RECDID,TLRID             IS THIS DUMP TRAILER
         BE    E15XCPTC                 YES,PLACE ON E15DCBA
         CLI   RECDID,STERMID           IS RECD STEP TERMINATE
         BE    E15NOACT                 YES,GO MAKE NORMAL RETURN
         CLI   RECDID,JTERMID           IS RECD JOB TERMINATE
         BE    E15NOACT                 YES,GO TO NORMAL RETURN
         CLI   RECDID,OPFORMID          IS RECD O/P FORMS
         BE    E15NOACT                 YES,GO TO NORMAL RETURN
         CLI   RECDID,OPCLASID          IS RECD O/P CLASSES
         BE    E15NOACT                 YES,GO TO NORMAL RETURN
         CLI   RECDID,ALLRECOV                  OESTZ/75
         BE    E15NOACT                        OESTZ/75
         CLI   RECDID,INPUTACT                  OESTZ/75
         BE    E15NOACT                        OESTZ/75
         CLI   RECDID,OUTPUTAC                  OESTZ/75
         BE    E15NOACT                        OESTZ/75
         CLI   RECDID,SCRATCH                   OESTZ/75
         BE    E15NOACT                        OESTZ/75
         CLI   RECDID,RENAM                     OESTZ/75
         BE    E15NOACT                        OESTZ/75
         CLI   RECDID,JOBCOMM                   OESTZ/75
         BE    E15NOACT                        OESTZ/75
         CLI   RECDID,HASPPRGE                  OESTZ/75
         BE    E15NOACT                        OESTZ/75
         CLI   RECDID,TSSTPTRM                  OESTZ/75
         BE    E15NOACT                        OESTZ/75
         CLI   RECDID,TSLOGOFF                  OESTZ/75
         BE    E15NOACT                        OESTZ/75
         CLI   RECDID,DYNAMDD                   OESTZ/75
         BE    E15NOACT                        OESTZ/75
         LR    R00,R10
         PUT   E15DCB,(0)
*                                       TEMPORARY SET
E15DELET L     R13,SAVDS+D4             ADDRESS OF SORT SAVEAREA
         RETURN (14,12),RC=4
E15NOACT L     R13,SAVDS+D4             ADDRESS OF SORT'S SAVEAREA
         ST    R10,D24(R13)             ADDRESS OF CURRENT RECD TO SAVE
         RETURN (14,12),RC=0
E15XCPTA L     R09,HDRTIME              LOAD PREV RECDS TIMESTMP
         LTR   R09,R09                  IS IT ZERO (FIRST TIME THRU)
         BZ    E15XCPTB                 YES,BRANCH AROUND COMPARISONS
         CLC   HDRDATE,RSTPDATE         COMPARE PREVIOUS & CURRENT DATE
         BH    E15WARN                  PREVIOUS DATE HI,ISSUE WARNING
         CLC   HDRTIME,RSTPTIME         COMPARE PREVIOUS & CURRENT TIME
         BH    E15WARN                  PREVIOUS TIME HI,ISSUE WARNING
E15XCPTB MVC   HDRTIME(L8),RSTPTIME     RETAIN DATE/TIME FOR COMPARE
E15XCPTC LR    R00,R10                  @ OF RECORD TO REGISTER 0
         PUT   E15DCBA,(0)              EXECUTE I/O
         B     E15DELET                 RETURN TO SORT W/DELETE CODE
E15WARN  WTO   'SMFX001-INPUT NOT IN CHRONOLOGICAL SEQUENCE'
         B     E15XCPTB                 CONTINUE PROCESSING
E15NORTN CLOSE (E15DCB,,E15DCBA)        CLOSE BOTH TEMPORARY DATA SETS
         L     R13,SAVDS+D4
         RETURN (14,12),RC=8
         DS    0D
SAVDS    DS    18F                      SAVE AREA
HDRTIME  DC    F'0'                     HEADER TIME
HDRDATE  DC    F'0'                     HEADER DATE
E15DCB   DCB   DSORG=PS,MACRF=PM,DDNAME=SORDATA
E15DCBA  DCB   DSORG=PS,MACRF=PM,DDNAME=HDRDATA
DCBFORM  DCBD  DSORG=PS
RECDFORM DSECT                          RECORD
RLNGTH   DS    F                        LENGTH
RCONT    DS    C                        CONT
RECDID   DS    C                        ID
RSTPTIME DS    CL4                      STEP TIME
RSTPDATE DS    CL4                      STEP DATE
RCPUID   DS    CL4                      CPU ID
         DS    CL32                     SPACING
RJOBNAME DS    CL8                      JOB NAME
RSTRTIME DS    CL4                      START TIME
RSTRTDAT DS    CL4                      START DATE
RSTPNUM  DS    C                        STEP NUMBER
         END

ASSEMBLER-SOURCE2: E35
* STATUS--CHANGE LEVEL 0000                                           *
* FUNCTION-THIS VERSION OF THE E35 SORT EXIT RE-INSERTS THE SYSTEM    *
*    ORIENTED RECORDS INTO THE FINAL MERGED OUTPUT IN THE             *
*    FOLLOWING SEQUENCE-                                              *
*    1-ALL DUMP HDR RECORDS                                           *
*    2-ALL DUMP TLR RECORDS                                           *
*    3-ALL OTHER SYSTEM ORIENTED RECORDS IN THE SEQUENCE IN           *
*    WHICH THEY WERE GENERATED BY SYSTEM MANAGEMENT                   *
*    FACILITIES                                                       *
*    THE SORT WILL THEN PLACE INTO THE FINAL MERGED OUTPUT            *
*    THE SORTED JOB ORIENTED RECORDS                                  *
*    OPERATION ---                                                    *
*    UPON INITIAL ENTRY,THE HDR/TLR DATA SET IS OPENED.THE DATA       *
*    RECORDS ARE SCANNED FOR RECORD TYPE 2 (DUMP HDR).EACH TIME       *
*    A TYPE 2 IS FOUND AND A RETURN IS MADE TO THE SORT TO HAVE       *
*    THE REORD INSERT INTO THE FINAL OUTPUT.WHEN EODAD IS REACHED     *
*    THE SET IS CLOSED & RE-OPENED.THIS SCAN IS PERFORMED AGAIN,      *
*    THIS TIME FOR TYPE 3 (DUMP TLR) AND ARE INSERTED AGAIN.AT        *
*    EODAD FOR THE SECOND TIME,THIS SET IS CLOSED PERMANENTLY.        *
*    THE OTHER TEMPORARY SET IS OPENED AND A LOOP IS EXECUTED         *
*    INSERTING EACH RECORD AS IT IS GOTTEN UNTIL EODAD IS             *
*    REACHED.AT THIS POINT,ALL SYSTEM ORIENTED RECORDS HAVE           *
*    BEEN PROCESSED AND AFTER CLOSING THE SET RETURN IS MADE TO       *
*    THE SORT WITH A RETURN CODE INDICATING THAT NO RETURN IS TO      *
*    BE MADE TO THIS EXIT.                                            *
* ENTRY POINTS--                                                      *
*         E35                                                         *
* INPUT- A-REGISTER 1 POINTS TO A WORD PARAMETER LIST THAT CONTAINS-  *
*    1-ADDRESS OF RECORD LEAVING MERGE                                *
*    2-ADDRESS OF RECORD IN OUTPUT AREA                               *
*    3-SEQUENCE CHECK SWITCH (SET TO SUPPRESS SEQUENCE CHECKING       *
*    WHILE THIS ROUTINE IS ACTIVE                                     *
*    B-2 TEMPORARY DATA SETS CREATED BY THE E15 EXIT ROUTINE.         *
*    THE FIRST CONTAINS ALL OF THE HEADERS AND TRAILERS FROM          *
*    THE DUMP TAPE(S) INPUTTED TO THE SORT                            *
*    THE SECOND CONTAINS ALL OTHER SYSTEM ORIENTED RECORDS            *
*    FROM THE DUMP TAPE(S) INPUTTED TO THE SORT                       *
* OUTPUT--SEE FUNCTION                                                *
*    RETURN CODES USED-RC=0 NO ACTION,RC=8 DO NOT RETURN,             *
*    RC=12 INSERT RECORD                                              *
* EXTERNAL REFERENCES--N/A                                            *
* EXITS,NORMAL--TO OS/SORT                                            *
* EXITS,ERROR--N/A                                                    *
* TABLES/WORK AREAS--N/A                                              *
* ATTRIBUTES--NON-REENTRANT,NON-REUSABLE                              *
* CHARACTER CODE DEPENDENCY--NONE                                     *
* NOTES-THE BUFFER USED IN THIS ROUTINE WAS DEFINED TO HOLD A         *
*    MAXIMUM RECORD SIZE OF 392 BYTES.  SOME INSTALLATIONS USE        *
*    LARGER RECORDS AND SHOULD REDEFINE THIS BUFFER TO HOLD           *
*    THEIR MAXIMUM RECORD SIZE.                                       *
*                                                                     *
R01      EQU   1                   PARAMETER REGISTER
ONE      EQU   1
R02      EQU   2                   WORK REGISTER
III      EQU   X'03'
IV       EQU   4
V        EQU   5
VIII     EQU   8
R08      EQU   8                   SOR ADDRESS REGISTER
R10      EQU   10                  WORKING REGISTER FOR SORT RECD ADDR
R11      EQU   11                  PARAMETER LIST ADDRESS REGISTER
R12      EQU   12                  BASE REGISTER
R13      EQU   13                  SAVE AREA ADDRESS REGISTER
R15      EQU   15                  ENTRY POINT REGISTER
XXIV     EQU   24
INSERT   EQU   X'01'
JTERM    EQU   X'05'
ONCE     EQU   X'20'               1ST SOR PROCESS SWITCH
CLOSONCE EQU   X'24'               SWITCH MASKS/HDRS DONE & 1ST SOR
ONCEOVER EQU   X'DF'
INSOFF   EQU   X'FE'
CLOSED   EQU   X'02'
CLOSEA   EQU   X'04'
OPENA    EQU   X'08'
PASS2    EQU   X'10'
E35      CSECT
*A 546000,654000,732000-739000                                   A35184
         USING *,R12               ESTABLISH ADDRESSABILTY
         SAVE  (14,12)             SAVE CALLER'S REGS
         LR    R12,R15             LOAD BASE ADDRESS
         USING SORFORM,R08
         USING JORFORM,R10
         ST    R13,SAVDS+IV        CHAIN SORT SAVEAREA TO E35
         LR    R02,R13             RETAIN ADDRESS OF SORT'S AREA
         LA    R13,SAVDS           ADDRESS OF E35 SAVE AREA
         ST    R13,VIII(R02)       CHAIN E35 SAVEAREA TO SORT
         LR    R11,R01             RETAIN PARAMETER LIST ADDRESS
         LA    R02,IV              CREATE NO SEQ CHECK BIT
         ST    R02,VIII(R11)       PLACE IN SORT PARM LIST
         TM    BITS,CLOSEA         IS HDR SET CLOSED
         BO    E35PROC             YES,BYPASS HDR INSERTIONS
         TM    BITS,OPENA          IS HDR SET OPEN
         BO    E35XCPTA            YES,BYPASS OPENING
         OPEN  E35DCBA             NO,OPEN FOR FIRST SCAN
         OI    BITS,OPENA          TURN ON OPEN INDICATOR
E35XCPTA GET   E35DCBA,HTBUFF      GET A HDR/TLR RECORD          A35184
         CLC   V(ONE,R01),ID       IS THE THE RIGHT TYPE
         BNE   E35XCPTA            NO,GET NEXT RECORD
         B     E35INRTN            YES,GO TO INSERT RETURN
E35EODID CLOSE E35DCBA             CLOSE HDR/TLR SET
         TM    BITS,PASS2          HAS SET BEEN CLOSED ONCE
         BO    E35XCPTB            SET END OF PHASE BIT AND GO ON
         MVI   ID,III              NO,CHANGE ID BEING SCANNED FOR
         OPEN  E35DCBA             OPEN HDR/TLR SET SECOND TIME
         OI    BITS,PASS2          INDICATE HDR/TLR SET CLOSED ONCE
         B     E35XCPTA            GO PERFORM SCAN
E35XCPTB OI    BITS,CLOSONCE       SET SWITCHES TO INDICATE HDR SET
*                                  SET CLOSED AND FIRST TIME FOR
*                                  SOR PROCESSING
         B     E35PROC             YES,GO PROCESS REST OF SOR'S
E35PROC  L     R08,SORSAV          LOAD ADDRESS OF CURRENT SOR
         LTR   R08,R08             IS IT ZERO
         BNE   E35PRCS             NO,DATA SET IS OPEN
         OPEN  E35DCB              OPEN DATA SET CREATED AT E1K EXIT
E35PRCS  GET   E35DCB,BUFF         GET THE FIRST RECORD          A35184
         ST    R01,SORSAV          SAVE THE ADDRESS OF RECORD
E35INRTN L     R13,SAVDS+IV        ADDRESS OF SORT SAVE AREA
         ST    R01,XXIV(R13)       ADRESS OF RECD INTO SORT SAVEAREA
         RETURN (14,12),RC=12      RETURN TO SORT W/RC=INSERT
E35EODAD CLOSE E35DCB              CLOSE SOR SET
         OI    BITS,CLOSED         TURN ON CLOSED BIT
E35ENDB  L     R13,SAVDS+IV
         RETURN (14,12),RC=8       DO NOT RETURN
SAVDS    DS    18F                 REGISTER SAVE AREA
SORSAV   DC    F'0'                SOR ADDRESS
BITS     DC    X'00'               INITIALIZE SWITCH
ID       DC    X'02'               INITIALIZE ID
E35DCB   DCB   DSORG=PS,MACRF=GM,DDNAME=SORDATA,EODAD=E35EODAD   A35184
E35DCBA  DCB   DSORG=PS,MACRF=GM,DDNAME=HDRDATA,EODAD=E35EODID   A35184
HTBUFF   DS    CL18                BUFFER FOR HDR/TLR RECORDS    A35184
BUFF     DS    CL4000              BUFF TO REBUILD SEGMENTED REC A35184
SORFORM  DSECT                     SYSTEM ORIENTED RECORD
SORLNGTH DS    CL4                 LENGTH
SORCONT  DS    C                   HEADER BYTE
SORID    DS    C                   TYPE
SORTIME  DS    CL4                 TIME
SORDATE  DS    CL4                 DATE
SORCPUID DS    CL4                 CPU ID
         DS    CL32                FILLER
SORJLGNO DS    0CL13               JOB LOG ON
SORJNAME DS    CL8                 NAME
SORSTIME DS    CL4                 START TIME
SORSDATE DS    CL4                 START DATE
SORSTPNO DS    C                   STEP NO.
JORFORM  DSECT                     JOB ORIENTED RECORDS
JORLNGTH DS    CL4                 LENGTH
JORCONT  DS    C                   HEADER BYTE
JORID    DS    C                   TYPE
JORTIME  DS    CL4                 TIME
JORDATE  DS    CL4                 DATE
JORCPUID DS    CL4                 CPU ID
         DS    CL32                FILLER
JORJLGNO DS    0CL13               JOB LOG ON
JORJNAME DS    CL8                 JOB NAME
JORSTIME DS    CL4                 START TIME
JORSDATE DS    CL4                 START DATE
JORSTPNO DS    C                   STEP NO.
         END

DATENLISTE1: ALLBA
      X 7803278059
0000000001 0000000001 0000000001 0000000001 0000000001
0000000001 0000000001 0000000001 0000000001 0000000001 0000000001
    A X 7803278059
0000000001 0000000001 0000000001 0000000001 0000000001
0000000001 0000000001 0000000001 0000000001 0000000001 0000000001
    B X 7803278059
0000000001 0000000001 0000000001 0000000001 0000000001
0000000001 0000000001 0000000001 0000000001 0000000001 0000000001
    C X 7803278059
0000000001 0000000001 0000000001 0000000001 0000000001
0000000001 0000000001 0000000001 0000000001 0000000001 0000000001
    E X 7803278059
0000000001 0000000001 0000000001 0000000001 0000000001
0000000001 0000000001 0000000001 0000000001 0000000001 0000000001
    F X 7803278059
0000000001 0000000001 0000000001 0000000001 0000000001
0000000001 0000000001 0000000001 0000000001 0000000001 0000000001
    G X 7803278059
0000000001 0000000001 0000000001 0000000001 0000000001
0000000001 0000000001 0000000001 0000000001 0000000001 0000000001
    H X 7803278059
0000000001 0000000001 0000000001 0000000001 0000000001
0000000001 0000000001 0000000001 0000000001 0000000001 0000000001
    I X 7803278059
0000000001 0000000001 0000000001 0000000001 0000000001
0000000001 0000000001 0000000001 0000000001 0000000001 0000000001
    M X 7803278059
0000000001 0000000001 0000000001 0000000001 0000000001
0000000001 0000000001 0000000001 0000000001 0000000001 0000000001
    N X 7803278059
0000000001 0000000001 0000000001 0000000001 0000000001
0000000001 0000000001 0000000001 0000000001 0000000001 0000000001
    R X 7803278059
0000000001 0000000001 0000000001 0000000001 0000000001
0000000001 0000000001 0000000001 0000000001 0000000001 0000000001
    D XN7803278059
0000000001 0000000001 0000000001 0000000001 0000000001
0000000001 0000000001 0000000001 0000000001 0000000001 0000000001

DATENLISTE2: GRUPLIST
     0X 7803278059
0000000001 0000000001 0000000001 0000000001 0000000001
0000000001 0000000001 0000000001 0000000001 0000000001 0000000001
     1X 7803278059
0000000001 0000000001 0000000001 0000000001 0000000001
0000000001 0000000001 0000000001 0000000001 0000000001 0000000001
     2X 7803278059
0000000001 0000000001 0000000001 0000000001 0000000001
0000000001 0000000001 0000000001 0000000001 0000000001 0000000001
     3X 7803278059
0000000001 0000000001 0000000001 0000000001 0000000001
0000000001 0000000001 0000000001 0000000001 0000000001 0000000001
     4X 7803278059
0000000001 0000000001 0000000001 0000000001 0000000001
0000000001 0000000001 0000000001 0000000001 0000000001 0000000001
     5X 7803278059
0000000001 0000000001 0000000001 0000000001 0000000001
0000000001 0000000001 0000000001 0000000001 0000000001 0000000001
     AX 7803278059
0000000001 0000000001 0000000001 0000000001 0000000001
0000000001 0000000001 0000000001 0000000001 0000000001 0000000001
     MX 7803278059
0000000001 0000000001 0000000001 0000000001 0000000001
0000000001 0000000001 0000000001 0000000001 0000000001 0000000001
     LX 7803278059
0000000001 0000000001 0000000001 0000000001 0000000001
0000000001 0000000001 0000000001 0000000001 0000000001 0000000001
     RX 7803278059
0000000001 0000000001 0000000001 0000000001 0000000001
0000000001 0000000001 0000000001 0000000001 0000000001 0000000001
     PX 7803278059
0000000001 0000000001 0000000001 0000000001 0000000001
0000000001 0000000001 0000000001 0000000001 0000000001 0000000001
     VX 7803278059
0000000001 0000000001 0000000001 0000000001 0000000001
0000000001 0000000001 0000000001 0000000001 0000000001 0000000001
     QX 7803278059
0000000001 0000000001 0000000001 0000000001 0000000001
0000000001 0000000001 0000000001 0000000001 0000000001 0000000001
     XXN7803278059
0000000001 0000000001 0000000001 0000000001 0000000001
0000000001 0000000001 0000000001 0000000001 0000000001 0000000001

BENOETIGTE JCL FUER MD300404 UND MD300801:
//JOBLOG PROC IN=SMFDMP,W=WJJWW,T=SSMMJJTTTSSMMJJTTT
//S00 EXEC PGM=DATUM,PARM='/78'
//STEPLIB DD DSN=MD01.LOAD,DISP=SHR
//SYSPRINT DD SYSOUT=A
//S01 EXEC PGM=ICEMAN,REGION=1024K
//SYSOUT DD SYSOUT=A
//SORTLIB  DD  DSNAME=SYS1.CALIB,DISP=SHR,UNIT=SYSDA
//EXITLIB  DD  DSNAME=SYS1.MDLINK,DISP=SHR,UNIT=SYSDA
//SORTIN   DD  UNIT=TAPE,VOLUME=SER=&IN,DISP=OLD,
//         DSN=MD3.SMDMP.&W
//SORTWK01 DD  UNIT=3330,SPACE=(CYL,(50))
//SORTWK02 DD  UNIT=3330,SPACE=(CYL,(50))
//SORTWK03 DD  UNIT=3330,SPACE=(CYL,(50))
//SORTOUT  DD UNIT=SYSDA,DSN=SMFSOUT1,DISP=(,PASS),
//             SPACE=(CYL,(50,10)),
//            DCB=(RECFM=VBS,LRECL=4096,BLKSIZE=4096)
//SORDATA  DD  UNIT=SYSDA,SPACE=(CYL,(40,5)),
//         DCB=(RECFM=VBS,LRECL=4096,BLKSIZE=4096)
//HDRDATA  DD  UNIT=SYSDA,SPACE=(CYL,(5,5)),
//         DCB=(RECFM=VBS,LRECL=4096,BLKSIZE=4096)
//SYSIN    DD  DSN=MD.PARMLIB(PRMSMF01),DISP=SHR
//SYSUDUMP  DD  SYSOUT=A
//S02 EXEC PGM=ICEMAN,REGION=1024K
//SYSOUT DD SYSOUT=A
//SORTLIB  DD  DSNAME=SYS1.CALIB,DISP=SHR,UNIT=SYSDA
//EXITLIB  DD  DSNAME=SYS1.MDLINK,DISP=SHR,UNIT=SYSDA
//SORTIN   DD  UNIT=SYSDA,DSN=SMFSOUT1,
//         DISP=(OLD,DELETE)
//SORTWK01 DD  UNIT=3330,SPACE=(CYL,(50))
//SORTWK02 DD  UNIT=3330,SPACE=(CYL,(50))
//SORTWK03 DD  UNIT=3330,SPACE=(CYL,(50))
//SORTOUT  DD UNIT=SYSDA,DSN=SMFSOUT2,DISP=(,PASS),
//             SPACE=(CYL,(50,10)),
//           DCB=(RECFM=VBS,LRECL=4096,BLKSIZE=4096)
//SORDATA  DD  UNIT=SYSDA,SPACE=(CYL,(40,5)),
//         DCB=(RECFM=VBS,LRECL=4096,BLKSIZE=4096)
//HDRDATA  DD  UNIT=SYSDA,SPACE=(CYL,(5,5)),
//         DCB=(RECFM=VBS,LRECL=4096,BLKSIZE=4096)
//SYSIN    DD  DSN=MD.PARMLIB(PRMSMF02),DISP=SHR
//S03  EXEC PGM=MD300404,PARM='R,ISASIZE(16)K/&T',REGION=512K
//SMF     DD  DSN=SMFSOUT2,DISP=(OLD,DELETE),UNIT=SYSDA
//LISTE    DD  SYSOUT=A,DCB=(RECFM=FBA,LRECL=133,BLKSIZE=2660)
//LIST2    DD  SYSOUT=A,DCB=(RECFM=FBA,LRECL=133,BLKSIZE=2660)
//LIST4    DD  SYSOUT=A,DCB=(RECFM=FBA,LRECL=133,BLKSIZE=2660)
//LIST5    DD  SYSOUT=A,DCB=(RECFM=FBA,LRECL=133,BLKSIZE=2660)
//LIST3    DD  SYSOUT=A,DCB=(RECFM=FBA,LRECL=133,BLKSIZE=2660)
//LIST1    DD  SYSOUT=A,DCB=(RECFM=FBA,LRECL=133,BLKSIZE=2660)
//PLIDUMP  DD  SYSOUT=A
//SYSPRINT  DD  SYSOUT=A
//SYSOUT  DD  SYSOUT=A
//SORTLIB  DD  DSNAME=SYS1.CALIB,DISP=SHR
//SORTIN   DD  UNIT=SYSDA,SPACE=(CYL,(1,1)),
//         DCB=(RECFM=FB,LRECL=66,BLKSIZE=660)
//SORTOUT  DD  DSNAME=SORTOUT,UNIT=SYSDA,SPACE=(CYL,(1,1)),
//         DCB=(RECFM=FB,LRECL=66,BLKSIZE=660),DISP=(,PASS)
//SORTWK01 DD  UNIT=SYSDA,SPACE=(CYL,(1),,CONTIG)
//SORTWK02 DD  UNIT=SYSDA,SPACE=(CYL,(1),,CONTIG)
//SORTWK03 DD  UNIT=SYSDA,SPACE=(CYL,(1),,CONTIG)
//SORTWK04 DD  UNIT=SYSDA,SPACE=(CYL,(1),,CONTIG)
//SORTWK05 DD  UNIT=SYSDA,SPACE=(CYL,(1),,CONTIG)
//SORTWK06 DD  UNIT=SYSDA,SPACE=(CYL,(1),,CONTIG)
//SORTWK07 DD  UNIT=SYSDA,SPACE=(CYL,(1),,CONTIG)
//S04  EXEC PGM=MD300801
//SYSPRINT  DD SYSOUT=A
//SYSOUT  DD  SYSOUT=A
//PRINT  DD  SYSOUT=A,DCB=(RECFM=FBA,LRECL=133,BLKSIZE=1330)
//SORTOUT DD DSNAME=SORTOUT,UNIT=SYSDA,DISP=(OLD,DELETE)
//TSOAUSL      EXEC PGM=MD300204,PARM='R,ISASIZE(8K)',REGION=1024K
//SYSPRINT     DD   SYSOUT=A
//PLIDUMP      DD   SYSOUT=A
//SYSOUT       DD   SYSOUT=A
//SORTLIB      DD   DISP=SHR,DSNAME=SYS1.CALIB
//SORTIN       DD   UNIT=SYSDA,SPACE=(CYL,(10,1)),
//             DCB=(RECFM=FB,LRECL=80,BLKSIZE=800)
//SORTOUT      DD   UNIT=SYSDA,SPACE=(CYL,(10,1)),
//             DCB=(RECFM=FB,LRECL=80,BLKSIZE=800)
//SMFDATA DD DSN=MD3.SMDMP.&W,VOL=SER=&IN,DISP=(OLD,KEEP),
//           UNIT=TAPE
//SYSIN1       DD   DSN=MD.PARMLIB(DBANKUSE),DISP=SHR
//SYSIN2       DD   DSN=MD.PARMLIB(REFERAT),DISP=SHR
//PRINT        DD   SYSOUT=A,DCB=(RECFM=FBA,LRECL=133,BLKSIZE=1330)
//PRINTA       DD   SYSOUT=A,DCB=(RECFM=FBA,LRECL=133,BLKSIZE=1330)
//SORTWK01     DD   UNIT=SYSDA,SPACE=(CYL,(5),,CONTIG)
//SORTWK02     DD   UNIT=SYSDA,SPACE=(CYL,(5),,CONTIG)
//SORTWK03     DD   UNIT=SYSDA,SPACE=(CYL,(5),,CONTIG)
//SORTWK04     DD   UNIT=SYSDA,SPACE=(CYL,(5),,CONTIG)
//SORTWK05     DD   UNIT=SYSDA,SPACE=(CYL,(5),,CONTIG)
//SORTWK06     DD   UNIT=SYSDA,SPACE=(CYL,(5),,CONTIG)
//SORTWK07     DD   UNIT=SYSDA,SPACE=(CYL,(5),,CONTIG)
//CARD DD DUMMY
//*
//*  EREP
//*
//STEP05  EXEC    PGM=IFCEREP1,REGION=512K,
//            PARM='SYSUM,TABSIZE=200K'
//ACCDEV  DD  DSN=&HISTORY,DISP=(NEW,PASS),UNIT=SYSDA,
//            DCB=(RECFM=VB,BLKSIZE=6000),SPACE=(CYL,(5,5))
//TOURIST DD  SYSOUT=A,DCB=BLKSIZE=133
//EREPPT  DD  SYSOUT=A,DCB=BLKSIZE=133
//SERLOG  DD  DSN=SYS1.LOGREC,DISP=SHR
//STEP06  EXEC    PGM=IFCEREP1,REGION=512K,
//            PARM='ACC=N,HIST,TYPE=MC,PRINT=PT'
//DIRECTWK DD UNIT=SYSDA,
//            SPACE=(CYL,(10))
//ACCIN  DD  DSN=&HISTORY,DISP=(OLD,PASS)
//TOURIST DD  SYSOUT=A,DCB=BLKSIZE=133
//EREPPT  DD  SYSOUT=A,DCB=BLKSIZE=133
//STEP07  EXEC    PGM=IFCEREP1,REGION=512K,
//            PARM='HIST,THRESHOLD=(1,15),TABSIZE=30K'
//DIRECTWK DD UNIT=SYSDA,
//            SPACE=(CYL,(10))
//ACCIN  DD  DSN=&HISTORY,DISP=(OLD,PASS)
//TOURIST DD  SYSOUT=A,DCB=BLKSIZE=133
//EREPPT  DD  SYSOUT=A,DCB=BLKSIZE=133
//STEP08  EXEC    PGM=IFCEREP1,REGION=512K,
//            PARM='ACC=N,HIST,TABSIZE=30K,DEV=(33XX),TYPE=OT'
//DIRECTWK DD UNIT=SYSDA,
//            SPACE=(CYL,(10))
//ACCIN  DD  DSN=&HISTORY,DISP=(OLD,PASS)
//TOURIST DD  SYSOUT=A,DCB=BLKSIZE=133
//EREPPT  DD  SYSOUT=A,DCB=BLKSIZE=133
//STEP09  EXEC    PGM=IFCEREP1,REGION=512K,
//            PARM='ACC=N,HIST,TABSIZE=30K,DEV=(N33XX,N3420),TYPE=OT'
//DIRECTWK DD UNIT=SYSDA,
//            SPACE=(CYL,(10))
//ACCIN  DD  DSN=&HISTORY,DISP=(OLD,PASS)
//TOURIST DD  SYSOUT=A,DCB=BLKSIZE=133
//EREPPT  DD  SYSOUT=A,DCB=BLKSIZE=133
//STEP09A EXEC    PGM=IFCEREP1,REGION=512K,
//            PARM='ACC=N,HIST,TABSIZE=30K,PRINT=PS,TYPE=S'
//DIRECTWK DD UNIT=SYSDA,
//            SPACE=(CYL,(10))
//ACCIN  DD  DSN=&HISTORY,DISP=(OLD,PASS)
//TOURIST DD  SYSOUT=A,DCB=BLKSIZE=133
//EREPPT  DD  SYSOUT=A,DCB=BLKSIZE=133
//STEP10  EXEC    PGM=IFCEREP1,REGION=512K,
//            PARM='ACC=N,HIST,PRINT=NO'
//DIRECTWK DD UNIT=SYSDA,
//            SPACE=(CYL,(10))
//ACCIN  DD  DSN=&HISTORY,DISP=(OLD,PASS)
//TOURIST DD  SYSOUT=A,DCB=BLKSIZE=133
//EREPPT  DD  SYSOUT=A,DCB=BLKSIZE=133
//ACCDEV  DD  DSN=OBR.HISTORY,DISP=(MOD,KEEP),VOL=SER=T03963,
//            DCB=(RECFM=V,BLKSIZE=1904),UNIT=TAPE
//STEP11  EXEC  PGM=IEBGENER
//SYSPRINT DD SYSOUT=A
//SYSIN DD DUMMY
//SYSUT1  DD DSN=&HISTORY,DISP=(OLD,DELETE)
//SYSUT2  DD DSN=HISTORY,UNIT=TAPE,VOL=SER=T03964,DISP=(MOD,DELETE),
//      DCB=(RECFM=VB,BLKSIZE=6000)

BENOETIGTE DD KARTEN FUER MEMBLIST:
//SYSOUT   DD  SYSOUT=A   FUER DIAGNOSTIKMELDUNGEN
//PRINT2   DD  SYSOUT=A   FUER DEN INDEX
//PRINT2   DD  SYSOUT=A   FUER DIE MEMBERLISTUNG
//DUMMY    DD  DUMMY      FUER SYSPRINT-AUSGABE VON IEBPTPCH UND
                          ICEMAN (KANN DURCH DIE ANGABE SYSOUT=A
                          AUCH GEDRUCKT WERDEN)
//DISKWK01 DD UNIT=SYSDA,SPACE=(CYL,(5),,CONTIG)  FUER SORTWORK-
//DISKWK02 DD      -----------''--------------    BEREICHE
//DISKWK03 DD      -----------''--------------
//DISKWK04 DD      -----------''--------------
//DISKWK06 DD      -----------''--------------
//SORTLIB  DD DSN=SYS1.SORTLIB,DISP=SHR          FUER SORTLOADLIBR.
//SYSUDUMP DD SYSOUT=A     FUER EVT. DUMP BEI PROGRAMMABSTURZ
//SYS002   DD DSN=FILE,DISP=(MOD,DELETE),UNIT=SYSDA,SPACE=(CYL,(5,5))
                           FUER IEBPTPCH OUTPUT UND SORT-INPUT
//CONTROL DD DSN=CONTR,DISP=(NEW,DELETE),UNIT=SYSDA,SPACE=(TRK,(1,1))
                           FUER IEBPTPCH-STEUERKARTEN
//IN1      DD       BIS
//IN25     DD               FUER ZU LISTENDE BIBLIOTHEKEN
