         PRINT NOGEN
PDV076   INIT  BASIS=(2,11)
*
*        PROGRAMM:  PDV076
*        DATUM   :  24. MAERZ 1979
*        AUTOR   :  GALL F.
*
*        ZWECK   :  1.  UPDATE INPLACE EINEN GANZEN PDS, ODER EINZELNE
*                       MEMBER  EINES PDS
*                   2.  WIE PUNKT 1   JEDOCH MIT TEST-OPTION
*                       D.H. KEIN UPDATE AUF PDS JEDOCH AENDERUNGEN AUF
*                       SYSPRINT UND LOG FILE ERSICHTLICH
*                   3.  FIND UEBER EINEN GANZEN PDS, ODER EINZELNE MEM-
*                       BER EINES PDS
*                   4.  EINEN GANZEN PDS, ODER EINZELNE MEMBER IN EINEN
*                       SEQ. FILE UMLADEN
*
*
*
*        PARM  HANDLING
*
*        PARM=CHANGE
*        PARM=TEST
*        PARM=FIND
*        PARM=PDS TO SEQ
*
         L     R1,0(R1)            PARM HANDLING
         LH    R3,0(R1)
         BCTR  R3,R0
         STC   R3,PARMMVC1+1
PARMMVC1 MVC   PARM,2(R1)
         CLC   PARM(6),=C'CHANGE'  CHANGE?  ************
         BE    BEGIN
         CLC   PARM(4),=C'FIND'    FIND?    ************
         BE    GOFINDEN
         CLC   PARM(4),=C'TEST'    TEST?    ************
         BE    GOTEST
         CLC   PARM(10),=C'PDS TO SEQ' PDS TO SEQ ******
         BE    GOSEQ
         WTO   'WRONG PARM IN PDV076'
         B     ENDE2
GOSEQ    EQU   *
         MVI   SEQSW,C'1'
         OPEN  (SEQ,OUTPUT)
         MVC   ACTIONK2(10),=C'PDS TO SEQ'
         B     GOCALL
GOTEST   EQU   *
         MVI   TESTSW,C'1'
         MVC   OUTTEXT+30(8),=C'*** TEST'
         MVC   LOGTEXT+30(8),=C'*** TEST'
         MVC   LOGSUM+56(8),=C'*** TEST'
         B     BEGIN
GOFINDEN EQU   *
         MVC   ACTIONK1,=C'FOUND               '
         MVC   ACTIONK2,=C'                    '
         NI    LOGENDL1+1,X'0F'
         NI    EFIND+1,X'0F'
         NI    ALOOP2+1,X'0F'
         MVI   FINDSW,C'1'
*
BEGIN    EQU   *                   TABELLEN INITILAISIEREN
         LA    R10,10              TABELLEN INITILAISIEREN
         LA    R3,TABOLD
         NI    ILAB1+1,X'0F'
ILOOP    MVC   0(42,R3),KONST
         LA    R3,42(R3)
         BCT   R10,ILOOP
ILAB1    B     GOOPEN
         LA    R10,10
         LA    R3,TABNEW
         OI    ILAB1+1,X'F0'
         B     ILOOP
*
GOOPEN   OPEN  (SYSIN,INPUT)
         CLI   FINDSW,C'1'       WENN 'FIND' TABOLD U. TABNEW MIT
         BNE   CHGTABL           'FIND-STRINGS' LADEN. (20 STRINGS)
         LA    R3,TABOLD
         LA    R6,20
         B     LESEN
CHGTABL  LA    R3,TABOLD         WENN 'CHANGE' IN TABOLD SUCH-STRING
         LA    R4,TABNEW                       IN TABNEW NEW-STRING
         LA    R6,10
         NI    FCHGLAB1+1,X'0F'
LESEN    GET   SYSIN             LESEN ALTER U. NEUER STRING
         MVC   INCARD,0(R1)
         LA    R8,INCARD
*
TABLAD   EQU   *                   TABELLEN LADEN
         CLI   INCARD,X'7D'        = ' ?
         BNE   ERROR
         LA    R8,1(R8)
*
ALOOP1   XR    R10,R10
         LA    R7,37
         LR    R9,R8
ALOOP2   B     ALOOP2C
         CLC   0(2,R8),=X'7D40'
         BE    ALOOP3
         A     R10,=F'1'
         LA    R8,1(R8)
         BCT   R7,ALOOP2
         B     ERROR
ALOOP2C  CLC   0(3,R8),=X'7D6B7D'
         BE    ALOOP3
         A     R10,=F'1'
         LA    R8,1(R8)
         BCT   R7,ALOOP2
         B     ERROR
ALOOP3   LR    R5,R8
         BCTR  R5,R0
         SR    R5,R9
         STC   R5,MVC1+1
MVC1     MVC   0(37,R3),0(R9)
         BCTR  R10,R0
         STC   R10,37(R3)
         LA    R3,42(R3)
FCHGLAB1 B     FCHGLAB2
         LA    R8,3(R8)
NLOOP1   XR    R10,R10
         LA    R7,37
         LR    R9,R8
NLOOP2   CLI   0(R8),X'7D'
         BE    NLOOP3
         A     R10,=F'1'
         LA    R8,1(R8)
         BCT   R7,NLOOP2
         B     ERROR
NLOOP3   LR    R5,R8
         BCTR  R5,R0
         SR    R5,R9
         STC   R5,MVC2+1
MVC2     MVC   0(37,R4),0(R9)
         BCTR  R10,R0
         STC   R10,37(R4)
         LA    R4,42(R4)
FCHGLAB2 BCT   R6,LESEN
ENDSYSIN CLOSE (SYSIN)
GOCALL   CALL  UZED10A,(DATUM)
         MVC   LOGDATE,DATUM
         EJECT
*        OPEN MBRCARD FILE (INPUT)
*
*        KEIN INPUT = LESEN RESP. BEARBEITEN GANZES PDS
*        WENN INPUT = NUR DIE ANGEGEBENEN MEMBER BEHANDELN
*
         OPEN  (MBRCARD,INPUT)
         LA    R10,50              50 MEMBER SIND MOEGLICH
         LA    R3,MBRTAB           POINTER AUF MEMBER-TAB
MBRINIT  EQU   *
         MVC   0(9,R3),MBRKONST    MEMBER-TAB INITIALISIEREN
         LA    R3,9(R3)
         BCT   R10,MBRINIT
         LA    R4,50
         LA    R3,MBRTAB
GETMBRC  GET   MBRCARD             LESEN MEMBER KARTE
         MVC   INCARD,0(R1)        KARTE NACH INCARD
         LA    R8,INCARD
         NI    MBRABFR+1,X'0F'     WENN MBRABFR NICHT AKTIV, BEIM DIRC-
*                                  TORY LESEN DURCH MEMBER TABELLE.
*
         NI    ENDMBR2+1,X'0F'     WENN ENDMBR2 NICHT AKTIV, KEINE NEUE
*                                  MBRCARD LESEN. WENN AKTIV LESEN NEUE
*                                  KARTE.
MBRLOOP1 EQU   *
         XR    R10,R10
         LR    R9,R8
MBRLOOP2 CLI   0(R8),C' '          ENDE MEMBER KARTE
         BNE   MBRLOOPX
         OI    ENDMBR2+1,X'F0'
         B     ENDMBR1
MBRLOOPX CLC   0(2,R8),=C', '      ENDE MEMBER KARTE
         BNE   MBRLOOP3
         OI    ENDMBR2+1,X'F0'
         B     ENDMBR1
MBRLOOP3 CLI   0(R8),C','
         BE    ENDMBR1
         A     R10,=F'1'
         LA    R8,1(R8)
         B     MBRLOOP2
ENDMBR1  LR    R12,R8
         BCTR  R12,R0
         SR    R12,R9
         STC   R12,MBRMVC1+1
MBRMVC1  MVC   0(8,R3),0(R9)       MEMBER NACH MEMBER-TABELLE
         BCTR  R10,R0
         STC   R10,8(R3)           LAENGE DES MEMBERNAMEN NACH MEM-TAB
         LA    R3,9(R3)
         LA    R8,1(R8)
ENDMBR2  B     GETMBRC             LESEN NEUE KARTE ODER EOF MBRCARD
         BCT   R4,MBRLOOP1
ENDMBRC  CLOSE (MBRCARD)
         EJECT
*
         OPEN  (DIR)
         OPEN  (MBR,(UPDAT))
         TM    MBR+48,X'10'
         BZ    ERROR0
         LA    R4,MBR
         LH    R4,62(R4)
         ST    R4,STORE4
         RDJFCB (MBR)
         MVC   DSDI,JFCBAREA
         MVC   VOLSER,JFCBAREA+118
         LR    R0,R4
         N     R0,LOESCH
         GETMAIN R,LV=(0)
         ST    R1,BLOCK
         OPEN  (SYSPRINT,OUTPUT,LOGPRINT,OUTPUT)
*
READDIR  READ  DIRDECB,SF,DIR,DIRAREA,'S'
         CHECK DIRDECB
*        DATA  K1
         LA    R7,DIRAREA
*        DATA  REGS
         LH    R8,0(R7)
         SH    R8,=H'2'
         LA    R7,2(R7)
         STM   R7,R8,SAREA2
NEXTMEMB CLC   0(8,R7),=8XL1'FF'
         BE    ENDDIR
         CLC   0(8,R7),=8XL1'00'
         BE    LOOKNEXT
*
MBRABFR  B     ENDABFR
         LA    R12,MBRTAB
MBRABFRL CLI   8(R12),X'FF'
         BE    LOOKNEXT
         MVC   MBRCLC+1(1),8(R12)
MBRCLC   CLC   0(8,R7),0(R12)
         BE    ENDABFR
         LA    R12,9(R12)
         B     MBRABFRL
ENDABFR  EQU   *
*
         AP    MEMBZ,=P'1'
         MVC   MEMBER,0(R7)
*        DATA  MEMBER
*        DATA  REGS
         BAL   R10,GOFIND
*        DATA  K2
*        DATA  K3
*
READMBR  READ  READDECB,SF,MBR,BLOCK,'S',MF=E
         CHECK READDECB
*        DATA  K4
         L     R4,STORE4
         LA    R8,READDECB
         L     R8,16(R8)
         LA    R9,BLOCK
         LH    R12,14(R8)
         SR    R4,R12
*        DATA  REGS
         OI    UPDATEN+1,X'F0'
         EJECT
PUTLOOP  EQU   *
         STM   R3,R10,SAREA1
         MVC   INCARD,0(R9)
         MVC   KARTE,INCARD
         CLI   SEQSW,C'1'
         BE    PUTEN
*
         LA    R3,TABOLD
         LA    R4,TABNEW
COMP     EQU   *
         CLI   FINDSW,C'1'
         BE    EQUAL
         CLC   37(1,R3),37(R4)
         BNE   NOTEQUAL
*
*
*
*
*
EQUAL    EQU   *
*        DATA  K12
         LA    R8,INCARD
         LA    R9,INCARD+69
         MVC   FW1+3(1),37(R3)
         S     R9,FW1
         CR    R9,R8
         BL    NEXT
EFIND    B     ECHG              WENN PARM= CHANGE BRANCH NACH ECHG
*                                WENN PARM= FIND   BRANCH NICHT AKTIV
         MVC   FCLC1+1(1),37(R3)
FCLC1    CLC   0(0,R8),0(R3)
         BE    FOUNDED
         LA    R8,1(R8)
FNEXT    CR    R8,R9
         BL    FCLC1
         B     NEXT
*
ECHG     MVC   ECLC1+1(1),37(R3)
ECLC1    CLC   0(0,R8),0(R3)
         BE    EMOVE
         LA    R8,1(R8)
ENEXT    CR    R8,R9
         BL    ECLC1
         B     NEXT
*
EMOVE    MVC   EMVC1+1(1),37(R3)
EMVC1    MVC   0(0,R8),0(R4)
         AP    38(4,R3),=P'1'
         AP    38(4,R4),=P'1'
         MVI   CHGSW,C'1'
         NI    UPDATEN+1,X'0F'
         A     R8,FW1
         B     ENEXT
*
FOUNDED  EQU   *
         MVI   CHGSW,C'1'
         AP    38(4,R3),=P'1'
         A     R8,FW1
         B     FNEXT
         EJECT
*
*
NOTEQUAL EQU   *              ***  HIGH OR LOW  ***
         CLC   37(1,R3),37(R4)
         BL    LOW
*
HIGH     EQU   *
*        DATA  K13
         LA    R8,INCARD
         LA    R9,INCARD+69
         MVC   FW1+3(1),37(R3)
         L     R6,FW1
         MVC   FW2+3(1),37(R4)
         S     R6,FW2
         S     R9,FW1
         CR    R9,R8
         BL    NEXT
*
*
         MVC   HCLC1+1(1),37(R3)
HCLC1    CLC   0(0,R8),0(R3)
         BE    HMOVE
         LA    R8,1(R8)
HNEXT    CR    R8,R9
         BL    HCLC1
         B     NEXT
*
HMOVE    MVC   HMVC1+1(1),37(R4)
HMVC1    MVC   0(0,R8),0(R4)
         MVI   CHGSW,C'1'
         AP    38(4,R3),=P'1'
         AP    38(4,R4),=P'1'
         NI    UPDATEN+1,X'0F'
         LR    R10,R8
         A     R10,FW2
         LA    R10,1(R10)
         A     R8,FW1
         ST    R8,FW
         MVC   NUMBER,INCARD+69
         MVC   INCARD+69(11),INCARD+80
         LA    R12,INCARD+70
         AR    R12,R6
         SR    R12,R10
         STC   R12,HMVC2+1
HMVC2    MVC   0(0,R10),1(R8)
         MVC   INCARD+69(11),NUMBER
         L     R8,FW
         SR    R8,R6
         B     HNEXT
         EJECT
*
*
LOW      EQU   *
*        DATA  K14
         LA    R8,INCARD
         LA    R9,INCARD+69
         MVC   FW2+3(1),37(R4)
         L     R6,FW2
         MVC   FW1+3(1),37(R3)
         S     R6,FW1
         S     R9,FW2
         CR    R9,R8
         BL    NEXT
*
         MVC   LCLC1+1(1),37(R3)
LCLC1    CLC   0(0,R8),0(R3)
         BE    LLOOP1
         LA    R8,1(R8)
LNEXT    CR    R8,R9
         BL    LCLC1
         B     NEXT
*
LLOOP1   LA    R12,INCARD+68
         XR    R7,R7
         AP    38(4,R3),=P'1'
LLOOP1A  EQU   *
         CLI   0(R12),C' '
         BNE   LLOOP1E
         LA    R7,1(R7)
         BCTR  R12,R0
         B     LLOOP1A
LLOOP1E  CR    R7,R6
         BL    LERROR    ***  NO MOVE  /  NO SPACE  ***
         MVC   NUMBER,INCARD+69
         LA    R12,INCARD+70
         SR    R12,R8
         STC   R12,LMVC1+1
LMVC1    MVC   INCARD+80(0),0(R8)
         LR    R10,R8
         AR    R8,R6
         STC   R12,LMVC2+1
LMVC2    MVC   0(0,R8),INCARD+80
         MVI   INCARD+80,C' '
         MVC   INCARD+81(79),INCARD+80
         MVC   LMVC3+1(1),37(R4)
LMVC3    MVC   0(0,R10),0(R4)
         MVI   CHGSW,C'1'
         AP    38(4,R4),=P'1'
         NI    UPDATEN+1,X'0F'
         A     R10,FW2
         LR    R8,R10
         MVC   INCARD+69(11),NUMBER
         B     LNEXT
LERROR   EQU   *
         MVI   CHGSW,C'2'
         B     PUTEN
         EJECT
*
*
NEXT     EQU   *
         LA    R3,42(R3)
         LA    R4,42(R4)
         CLI   37(R3),X'FF'
         BE    PUTEN
         B     COMP
*
PUTEN    MVC   OUT,INCARD
*        DATA  K5
         CLI   CHGSW,C' '
         BE    PUTOUT
         CLI   CHGSW,C'1'
         BNE   CHGSW2
         MVC   OUTTEXT,ACTIONK1               CHANGED
         B     PUTOUT
CHGSW2   MVC   OUTTEXT,ACTIONK3               NO SPACE / NO MOVE
         B     PUTOUT
*
TITEL    AP    SZ,=P'1'
         MVC   PAGE,PMASK
         ED    PAGE,SZ
         MVC   TITELMBR,MEMBER
         MVI   TITELCC,X'8B'
         PUT   SYSPRINT,TITELZ
         MVI   TITELCC,X'09'
         PUT   SYSPRINT,TITELZ
         MVI   TITELCC,X'1B'
         PUT   SYSPRINT,TITELZ
         ZAP   ZZ,=P'3'
PUTOUT   EQU   *
         CLC   TITELMBR,MEMBER
         BNE   TITEL
         AP    ZZ,=P'1'
         CP    ZZ,=P'63'
         BH    TITEL
         PUT   SYSPRINT,OUTLINE
         CLI   SEQSW,C'1'
         BNE   NOTSEQ
         PUT   SEQ,OUT
NOTSEQ   CLC   MEMBSW,CHGSW
         BH    LOESCH1
         MVC   MEMBSW,CHGSW
LOESCH1  MVI   CHGSW,C' '
         MVC   OUTTEXT,=C'                    '
*
         LM    R3,R10,SAREA1
*        DATA  REGS
         MVC   0(80,R9),INCARD
         SH    R4,=H'80'
         LTR   R4,R4
         BZ    GOBACK
         LA    R9,80(R9)
         B     PUTLOOP
GOBACK   BAL   R10,UPDATEN
         B     READMBR
ENDMBR   BAL   R10,UPDATEN
         BAL   R10,LOG
         EJECT
LOOKNEXT EQU   *
*        DATA  K6
         LM    R7,R8,SAREA2
*        DATA  SAREA2
         IC    R9,11(R7)
         N     R9,FN
         LA    R7,12(R7)
         SH    R8,=H'12'
         BZ    READDIR
         SLA   R9,1
         SR    R8,R9
         BZ    READDIR
         LA    R7,0(R9,R7)
         STM   R7,R8,SAREA2
         B     NEXTMEMB
ENDDIR   B     ENDE
*
*
*
*
*
*
*
UPDATEN  B     ENDUPDAT
*        DATA  K8
*        DATA  MEMBER
         CLI   TESTSW,C'1'
         BE    ENDUPDAT
         WRITE READDECB,SF,MBR,BLOCK,MF=E
         CHECK READDECB,DSORG=ALL
ENDUPDAT OI    UPDATEN+1,X'F0'
*        DATA  K9
         BR    R10
         EJECT
LOG      EQU   *
*        DATA  K10
         MVC   MEMBNM,MEMBER
         CLI   MEMBSW,C' '
         BNE   LOG1
         MVC   LOGTEXT,ACTIONK2               NO CHANGE
         B     PUTLOG
LOG1     CLI   MEMBSW,C'2'
         BE    LOG2
         MVC   LOGTEXT,ACTIONK1               CHANGED
         B     PUTLOG
LOG2     MVC   LOGTEXT,ACTIONK3               NO SPACE / NO MOVE
         B     PUTLOG
*
LOGTIT   EQU   *
         AP    LOGSZ,=P'1'
         MVC   LOGPAGE,PMASK
         ED    LOGPAGE,LOGSZ
         MVI   LOGTCC,X'8B'
         PUT   LOGPRINT,LOGTITEL
         MVI   LOGTCC,X'09'
         PUT   LOGPRINT,LOGTITEL
         MVI   LOGTCC,X'13'
         PUT   LOGPRINT,LOGTITEL
         PUT   LOGPRINT,LOGUTIT
         MVI   LOGTCC,X'1B'
         PUT   LOGPRINT,LOGTITEL
         PUT   LOGPRINT,LOGUTIT2
         MVI   LOGTCC,X'13'
         PUT   LOGPRINT,LOGTITEL
         ZAP   LOGZZ,=P'3'
PUTLOG   EQU   *
         CP    LOGZZ,=P'0'
         BE    LOGTIT
         AP    LOGZZ,=P'1'
         CP    LOGZZ,=P'60'
         BH    LOGTIT
         PUT   LOGPRINT,LOGLINE
         MVC   LOGTEXT,=C'                    '
         MVI   OUTCC,X'8B'
         PUT   SYSPRINT,OUTLINE
         MVI   OUTCC,X'09'
*        DATA  K11
         BR    R10
         EJECT
LOGEND   EQU   *
         AP    LOGSZ,=P'1'
         MVC   LOGPAGE,PMASK
         ED    LOGPAGE,LOGSZ
         MVI   LOGTCC,X'8B'
         PUT   LOGPRINT,LOGTITEL
         MVI   LOGTCC,X'09'
         PUT   LOGPRINT,LOGTITEL
         MVI   LOGTCC,X'13'
         PUT   LOGPRINT,LOGTITEL
         PUT   LOGPRINT,LOGUTIT
         MVI   LOGTCC,X'1B'
         PUT   LOGPRINT,LOGTITEL
         CLI   SEQSW,C'1'
         BE    LOGENDL5
         PUT   LOGPRINT,LOGSUM
         MVI   LOGTCC,X'13'
         PUT   LOGPRINT,LOGTITEL
         LA    R3,TABOLD
         LA    R4,TABNEW
         MVI   LOGSUMT1+5,X'7D'
         MVC   FW,=F'0'
LOGENDL1 B     LOGENDL2
         MVC   LOGSUMT1(4),=C'FIND'
         B     LOGENDL3
LOGENDL2 MVC   LOGSUMT1(4),=C'OLD:'
LOGENDL3 MVC   LOGSUMT2,0(R3)
         LA    R9,LOGSUMT2+1
         MVC   FW+3(1),37(R3)
         A     R9,FW
         MVI   0(R9),X'7D'
         MVC   LOGSUMZ1,MASKE
         ED    LOGSUMZ1,38(R3)
         PUT   LOGPRINT,LOGSUM
         CLI   FINDSW,C'1'
         BE    LOGENDL4
         MVC   LOGSUMT1(4),=C'NEW:'
         MVC   LOGSUMT2,0(R4)
         LA    R9,LOGSUMT2+1
         MVC   FW+3(1),37(R4)
         A     R9,FW
         MVI   0(R9),X'7D'
         MVC   LOGSUMZ1,MASKE
         ED    LOGSUMZ1,38(R4)
         PUT   LOGPRINT,LOGSUM
LOGENDL4 PUT   LOGPRINT,LOGTITEL
         LA    R3,42(R3)
         LA    R4,42(R4)
         CLI   37(R3),X'FF'
         BNE   LOGENDL1
         PUT   LOGPRINT,LOGTITEL
LOGENDL5 MVI   LOGSUM+1,C' '
         MVC   LOGSUM+2(54),LOGSUM+1
         MVC   LOGSUMT2(19),=C'MEMBERS PROCESSED: '
         MVC   LOGSUMT2+19(8),MASKE
         ED    LOGSUMT2+19(8),MEMBZ
         PUT   LOGPRINT,LOGSUM
         BR    R10
         EJECT
GOFIND   EQU   *
         MVI   MEMBSW,C' '
         MVC   DWNAME,MEMBER
         FIND  MBR,DWNAME,D
         B     *+4(R15)
         B     0(R10)
         B     NOTFOUND
         B     IOERR
*
NOTFOUND ABEND 4,DUMP
IOERR    ABEND 8,DUMP
         EJECT
ERROR0   WTO   'WRONG OPEN'
ERROR    ABEND 8,DUMP
ENDE     EQU   *
         CLI   SEQSW,C'1'
         BNE   CLOSEN
         CLOSE (SEQ)
CLOSEN   CLOSE (DIR)
         BAL   R10,LOGEND
         CLOSE (SYSPRINT,,LOGPRINT)
ENDE2    L     R13,S0001+4
         L     R15,RETCODE
         RETURN (14,12),RC=(15)
         EJECT
DIR      DCB   DDNAME=PDS,DSORG=PO,MACRF=(R),EODAD=ENDDIR,             *
               RECFM=F,LRECL=256,BLKSIZE=256
MBR      DCB   DDNAME=PDS,DSORG=PO,MACRF=(R,W),EODAD=ENDMBR,           *
               EXLST=LIST1
SEQ      DCB   DDNAME=SEQ,DSORG=PS,MACRF=PM
SYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=PM,                      *
               RECFM=FBM,LRECL=133,BLKSIZE=133
LOGPRINT DCB   DDNAME=LOGPRINT,DSORG=PS,MACRF=PM,                      *
               RECFM=FBM,LRECL=133,BLKSIZE=133
SYSIN    DCB   DDNAME=SYSIN,DSORG=PS,MACRF=GL,EODAD=ENDSYSIN
MBRCARD  DCB   DDNAME=MBRCARD,DSORG=PS,MACRF=GL,EODAD=ENDMBRC
         READ  READDECB,SF,MBR,BLOCK,'S',MF=L
SAREA1   DS    8F
SAREA2   DS    2F
K1       DC    CL15'DIR GELESEN ***'
K2       DC    CL15'FIND **********'
K3       DC    CL15'READ MBR ******'
K4       DC    CL15'AFTER READ ****'
K5       DC    CL15'PUTEN *********'
K6       DC    CL15'LOOKNEXT ******'
K7       DC    CL15'END LOOKNEXT **'
K8       DC    CL15'UPDATEN *******'
K9       DC    CL15'END UPDATEN ***'
K10      DC    CL15'LOG ***********'
K11      DC    CL15'END LOG *******'
K12      DC    CL15'EQUAL *********'
K13      DC    CL15'HIGH **********'
K14      DC    CL15'LOW ***********'
PARM     DC    CL20' '
KARTE    DS    CL80
INCARD   DS    CL80
         DC    CL80' '
NUMBER   DS    CL11
FW       DS    F
FW1      DC    F'0'
FW2      DC    F'0'
TABOLD   DS    CL420
TABNEW   DS    CL420
KONST    DS    0CL42
         DC    CL37' '
         DC    XL1'FF'
         DC    PL4'0'
MBRTAB   DS    CL450
MBRKONST DS    0CL9
         DC    CL8' '
         DC    XL1'FF'
*
OUTLINE  DS    0CL133
OUTCC    DC    XL1'09'
OUT      DS    CL80
         DC    CL7'       '
OUTTEXT  DC    CL20' '
         DC    CL25' '
*
LOGUTIT2 DS    0CL133
         DC    XL1'09'
         DC    CL8'MEMBER  '
         DC    CL14' '
         DC    CL6'ACTION'
         DC    CL104' '
*
LOGLINE  DS    0CL133
LOGCC    DC    XL1'09'
MEMBNM   DS    CL8
         DC    CL14' '
LOGTEXT  DS    CL20
         DC    CL90' '
*
LOGSUM   DS    0CL133
LOGSUMCC DC    XL1'09'
LOGSUMT1 DC    CL6' '
LOGSUMT2 DC    CL37'....5....0....5....0....5....0....5..'
         DC    CL2' '
LOGSUMZ1 DC    CL8'  COUNTS'
         DC    CL79' '
*
LOGTITEL DS    0CL133
LOGTCC   DS    XL1
         DC    CL7'PDV076:'
         DC    CL12' '
         DC    CL22'***  ACTIVITY LOG  ***'
         DC    CL13' '
         DC    CL6'DATE: '
LOGDATE  DS    CL8
         DC    CL8'   PAGE:'
LOGPAGE  DS    CL4
         DC    CL52' '
*
LOGUTIT  DS    0CL133
LOGUCC   DC    XL1'09'
         DC    CL9'LIBRARY: '
DSDI     DS    CL44
         DC    CL7' UNIT: '
VOLSER   DS    CL6
         DC    CL66' '
*
TITELZ   DS    0CL133
TITELCC  DS    XL1
         DC    CL8'MEMBER: '
TITELMBR DC    CL8' '
         DC    CL38' '
         DC    CL6'DATE: '
DATUM    DS    CL8
         DC    CL8'   PAGE:'
PAGE     DS    CL4
         DC    CL52' '
*
ACTIONK1 DC    CL20'CHANGED             '
ACTIONK2 DC    CL20'NO CHANGE           '
ACTIONK3 DC    CL20'NO SPACE / NO MOVE  '
*
SZ       DC    PL2'0'
ZZ       DC    PL2'0'
LOGSZ    DC    PL2'0'
LOGZZ    DC    PL2'0'
PMASK    DC    XL4'40202120'
MASKE    DC    XL8'4020202020202120'
MEMBSW   DC    CL1' '
FINDSW   DC    CL1' '
SEQSW    DC    CL1' '
TESTSW   DC    CL1' '
CHGSW    DC    CL1' '
DIRAREA  DS    CL256
MEMBER   DS    CL8
DWNAME   DS    D
MEMBZ    DC    PL4'0'
FN       DC    F'31'
LOESCH   DC    XL4'0000FFFF'
STORE4   DS    F
RETCODE  DC    F'0'
LIST1    DC    AL1(128+7),AL3(JFCBAREA)
JFCBAREA DS    CL176
         LTORG
BLOCK    DS    F
         DS    CL13030
         END
