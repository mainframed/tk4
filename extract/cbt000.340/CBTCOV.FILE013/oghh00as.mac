*
*
*        FORTRAN TSO-PROMPTER FUER DIE ALTEN E/G/H-COMPILER
*
*        ALS ERSATZ FUER DEN IBM-FORTGI-PROMPTER GEEIGNET
*
*        1.  HELP - MEMBER
*
*        2.  SOURCE FUER FORT-MODUL IN SYS1.CMDLIB
*
*        3.  SOURCE FUER MIT LINK AUFGERUFENEN INITIALISIERUNGSMODUL
*            GFORT001
*
*        4.  SOURCE FUER MIT LINK AUFGERUFENEN ABSCHLUSSMODUL GFORT002
*
*
*        DIE MODULE 2 BIS 4 MUESSEN UMGEWANDELT WERDEN UND IN DIE
*
*        SYS1.CMDLIB GELINKT WERDEN. DABEI IST ZU BEACHTEN,DAS GFORT001
*
*        MIT NOALGN UEBERSETZT WIRD.
*
*        DER HELP-MEMBER KANN DIRECT IN SYS1.HELP MIT DEM MEMBERNAMEN:
*
*        FORT EINGESPEICHERT WERDEN.
*
*
)F  FUNCTION
    DER FORT COMMAND RUFT EINEN DER 3 (E,G,H) FORTRAN-COMPILER ZUR UM-
    WANDLUNG EINES FORTRAN-PROGRAMMES AUF.
)S  KEINE SUBCOMMANDS VORHANDEN
)X  SYNTAX
    FORT 'DSNAME'/*
    LEVEL(E/G/H)
    SIZE('INTEGER')
    LINELNG('INTEGER')
    OPT(0/1/2)
    LINECNT('INTEGER')
    NAME('MAIN-NAME')
    SOURCE/NOSOURCE
    LIST/NOLIST
    MAP/NOMAP
    BCD/EBCDIC
    ID/NOID
    EDIT/NOEDIT
    XREF/NOXREF
    SPACE/PRFRM
    ADJUST/NOADJUST
    PRINT('DSNAME'/*)/NOPRINT/SYSPRINT('SYSOUT-KLASSE')
    LOAD('DSNAME')/NOLOAD
    TST
)O  OPERANDS
   'DSNAME'
     NAME DER DATEI,DIE DAS UMZUWANDELNDE FORTRANPROGRAMM ENTHAELT.
   * GIBT AN,DAS DAS UMZUWANDELNDE FORTRANPROGRAMM DIREKT VOM TERMINAL
          EINGEGEBEN WIRD.
))LEVEL(E/G/H)
    EINER DER 3 FORTRAN-COMPILER WIRD AUSGEWAEHLT. WENN LEVEL FEHLT,
    WIRD DER G-COMPILER BENUTZT. BEI DER AUSWAHL IST DER HAUPTSPEICHER-
    BEDARF DER EINZELNEN COMPILER ZU BEACHTEN.
))SIZE('INTEGER')
    ANGABEN WERDEN FUER G-COMPILER IGNORIERT.FUER DEN E-COMPILER WIRD,
    WENN NICHTS ANDERES ANGEGEBEN,SIZE(131072) EINGESETZT.SIZE WIRD
    DEN H-COMPILER NUR EINGESETZT,WENN IM FORT-COMMAND ANGEGEBEN.
))LINELNG('INTEGER')
    NUR FUER FORTRAN-E-COMPILER.WIRD BEI G- UND H-COMPILER IGNORIERT.
    ZAHLENWERT MUSS ZWISCHEN 0 UND 256 LIEGEN.STANDARDMAESSIG WIRD
    LINELNG(133) EINGESETZT.
))OPT(0/1/2)
    NUR FUER FORTRAN-H-COMPILER.WIRD SONST IGNORIERT.OPTIMIERUNGSANGABE.
    STANDARD IST OPT(0).WENN EDIT ANGEGEBEN IST,IST OPT(2) ERFORDERLICH
    UND STANDARDWERT.
))LINECNT('INTEGER')
    ZEILENZAHL JE BLATT DER SYSPRINT-AUSGABE.STANDARD IST LINECNT(50).
))NAME('MAIN-NAME')
    NAME DES MAIN-PROGRAMMS.STANDARD IST NAME(MAIN).
))SOURCE
    AUFLISTUNG DES QUELLENPROGRAMMS.STANDARD BEI PRINT/SYSPRINT.
))NOSOURCE
    KEINE QUELLENPROGRAMMAUFLISTUNG.STANDARD BEI NOPRINT UND FEHLENDEN
    PRINT- UND SYSPRINTANGABEN.
))MAP
    AUFLISTUNG VON ADRESSENTABELLEN FUER VARIABLE,KONSTANTEN UND STATE-
    MENTS.STANDARD,WENN SYSPRINT MIT PRINT/SYSPRINT AUF EINE DATEI ZU-
    GEORDNET IST.
))NOMAP
    KEINE ADRESSENLISTE.STANDARD BEI NOPRINT,PRINT(*) UND FEHLENDER
    PRINT/SYSPRINT-ANGABE.
))BCD
    QUELLENPROGRAMMCODE.DA AUCH EBCDIC-PROGRAMME NORMALERWEISE RICHTIG
    UEBERSETZT WERDEN,IST BCD STANDARD.
))EBCDIC
    QUELLENPROGRAMMCODE IST EBCDIC.ANGABE NUR ERFORDERLICH BEI VERWEN-
    DUNG VON &-ZEICHEN INNERHALB DES FORTRANPROGRAMMS.
))LIST
    AUFLISTUNG DES UMGEWANDELTEN PROGRAMMS IN ASSEMBLER-FORMAT.DA UM-
    FANGREICHER OUTPUT,IST NOLIST STANDARDWERT.
))NOLIST
    KEINE ASSEMBLER-FORMAT-LISTE. NOLIST IST STANDARD.
))ID
    ISN-NR WIRD BEI CALL-AUFRUFEN GESPEICHERT UND BEI TRACEBACK MIT AUS-
    GEDRUCKT.NUR FUER FORTRAN G UND H. STANDARDWERT IST ID.
))NOID
    KEINE STATEMENT-NUMMERN IM TRACEBACK.STANDARD IST ID.
))EDIT
    FORMATISIERTE AUSGABE DER QUELLENPROGRAMMLISTE.NUR BEI FORTRAN-H
    MIT OPT(2) MOEGLICH. OPT(2) IST BEI ANGABE VON EDIT STANDARD.
    STANDARDWERT IST NOEDIT.BEI LEVEL(E/G) WIRD EDIT IGNORIERT.
))NOEDIT
    KEINE FORMATISIERTE FORTRANPROGRAMMLISTE.STANDARD IST NOEDIT.
))XREF
    NUR FUER FORTRAN-H.CROSS-REFERENCE FUER VARIABLE UND STATEMENT-
    NUMMERN.STANDARD BEI SYSPRINT-AUSGABE AUF PLATTE MIT PRINT(DSN)/
    SYSPRINT.FUER LEVEL(E/G) WIRD XREF IGNORIERT.
))NOXREF
    KEINE CROSS-REFERENCE.STANDARD BEI PRINT(*),NOPRINT UND FEHLENDER
    PRINT/SYSPRINT-ANGABE.
))SPACE
    NUR FUER FORTRAN-E.SPACE BRINGT HAUPTSPEICHERERSPARNIS AUF KOSTEN
    DER RECHENZEIT.EINSCHRAENKUNGEN BEACHTEN.STANDARD IST PRFRM. BEI
    LEVEL(G/H) WIRD SPACE UND PRFRM IGNORIERT.
))PRFRM
    PERFORMANCE-OPTION DES E-COMPILERS.PRFRM IST STANDARD.
    BEI LEVEL(G/H) WIRD PRFRM IGNORIERT.
))ADJUST
    NUR FUER FORTRAN-E.FORTRAN-PROGRAMM DARF AN BELIEBIGEN STELLEN LEER-
    SPALTEN ENTHALTEN UND SCHLUESSELWORTE ALS VARIABLE BENUTZEN.STANDARD
    IST ADJUST. BEI LEVEL(G/H) WIRD ADJUST IGNORIERT.
))NOADJUST
    NOADJUST VERRINGERT DIE UEBERSETZUNGSZEIT.EINSCHRAENKUNGEN BEACHTEN.
    STANDARD IST ADJUST. BEI LEVEL(G/H) WIRD NOADJUST IGNORIERT.
))PRINT('DSNAME'/*)
    PRINT ODER PRINT('DSN') ERGIBT DIE AUSGABE ALLER LISTEN AUF EINE
    DATEI MIT DEM ANGEGEBENEN DSNAMEN.WENN DSN FEHLT,WIRD ENTSPRECHEND
    DEN TSO-KONVENTIONEN AUS DEM QUELLENPROGRAMMNAMEN EIN NAME MIT DEM
    QUALIFIER .LIST GEBILDET.BEI FORT * WIRD FORT.LIST BENUTZT.
    NACH ABSCHLUSS DER UMWANDLUNG WIRD AUF DEM TERMINAL EINE NACHRICHT
    UEBER DEN FEHLERLEVEL AUSGEGEBEN,DER AUF DEM VOM COMPILER GESETZTEN
    RETURNCODE BERUHT.
    PRINT(*) BEWIRKT EINE AUFLISTUNG DER SYSPRINT-AUSGABE AUF DEM TER-
    MINAL.WEGEN DER MASCHINENCODEVORSCHUBSTEUERUNG DES E-COMPILERS WER-
    DEN ZEILEN MIT ZUFALLSZEICHEN GEDRUCKT.DRUCKEROUTPUT IST NORMAL,DA
    DIESER DIE VORSCHUEBE OHNE DRUCKEN RICHTIG INTERPRETIERT.
))NOPRINT
    SYSPRINT WIRD AUF DUMMY GESETZT.ES WIRD JEDOCH AM ENDE DER UEBER-
    SETZUNG EINE NACHRICHT UEBER DEN FEHLERLEVEL AUF DEM TERMINAL AUS-
    GEGEBEN,DER AUF DEM VOM COMPILER ZURUECKGEGEBENEN RETURNCODE BERUHT.
    WENN WEDER PRINT/NOPRINT/SYSPRINT ANGEGEBEN WURDE,WIRD BEI LEVEL(E)
    NOPRINT UND BEI LEVEL(G/H) PRINT(*) MIT NOSOURCE/NOMAP/NOXREF ALS
    STANDARDWERTE GESETZT.
))SYSPRINT('SYSOUT-KLASSE')
    SYSPRINT WIRD AUF EINE SYSOUT-DATEI DER ANGEGEBENEN 'SYSOUT-KLASSE'
    GESCHRIEBEN.ENSPRECHEND DEN UEBLICHEN TSO-REGELN WIRD SYSOUT(A) AN-
    GENOMMEN,WENN ANGABEN UEBER DIE SYSOUTKLASSE FEHLEN.AUF DEM TERMINAL
    WIRD EINE NACHRICHT UEBER DEN FEHLERLEVEL AUSGEGEBEN.DIESER BERUHT
    AUF DEM VOM COMPILER ZURUECKGEGEBEN RETURNCODE.
))LOAD('DSNAME')
    EIN OBJECT-MODUL WIRD ERZEUGT UND IN DIE ANGEGEBENE DATEI GESPEI-
    CHERT.WENN 'DSNAME' FEHLT,WIRD ENTSPRECHEND DEN TSO-KONVENTIONEN
    AUS DEM QUELLENPROGRAMMNAMEN EIN NAME MIT DEM QUALIFIER .OBJ GEBIL-
    DET.BEI FORT * WIRD FORT.OBJ VERWENDET.STANDARD IST LOAD.
))NOLOAD
    ES WIRD KEIN OBJECT-MODUL ERZEUGT. STANDARD IST LOAD.
))TST
    ZU TESTZWECKEN WIRD DER COMPILERNAME UND DIE ERZEUGTE PARM-LISTE
    AUF DEM TERMINAL AUSGEGEBEN.WENN TST NICHT ANGEGEBEN WIRD,WERDEN
    DIESE INFORMATIONEN NICHT AUSGEGEBEN.
))NODECK
    DIESE ANGABE WIRD GRUNDSAETZLICH IN DIE PARMLISTE EINGESETZT.WENN
    EIN HEXDECK GEWUENSCHT WIRD,KANN DIE LOAD-DATEI ABGESTANZT WERDEN.
    DECK/NODECK WIRD VOM FORT-BEFEHL ALS FEHLER BEHANDELT.
         MACRO
         REGISTER
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         MEND
FORT     TITLE 'FORT - TSO-PROMPTER FUER FORTRAN E/G/H-COMPILER'
FORT     CSECT
*
*        REENTRANT CODING / ROUTINE BLEIBT RESIDENT IM SPEICHER
*
*        R12  =  BASISREGISTER
*        R11  =  WORKREGISTER
*
**********************************************************************
*        SAVEAREA UND BASISREGISTER
**********************************************************************
         REGISTER
         SAVE  (14,12),,*
         LR    R12,R15
         LR    R11,R1             A(CPPL) SICHERN
         USING FORT,R12
         LA    R0,COMLNG
         GETMAIN R,LV=(0)         COM-AREA BESORGEN
         ST    R13,4(R1)
         ST    R1,8(R13)
         LR    R13,R1
         USING COM,R13
         ST    R11,ACPPL         A(CPPL) SICHERN
**********************************************************************
*        GFORT001 AUFRUFEN, PARAMETERLISTE + ALLOC FUER COMPILER
**********************************************************************
         LINK  EP=GFORT001
         LH    R15,RETCD
         LTR   R15,R15            RC=0
         BNZ   RETURN
**********************************************************************
*        COMPILER AUFRUFEN
**********************************************************************
         LA    R1,PARM
         LA    R15,APGM
         LA    R11,PGMNM
         LINK  EPLOC=(11),DCB=0,SF=(E,(15))
         STH   R15,RETCD          RETURNCODE SICHERN
**********************************************************************
*        GFORT002 AUFRUFEN        FREE ALLOCATETE DATEIEN
**********************************************************************
RETURN   LR    R1,R13             COM-AREA-ADRESSE
         LINK  EP=GFORT002
**********************************************************************
*        FREEMAIN UND RETURN
**********************************************************************
         LR    R1,R13
         LH    R11,RETCD          RETURNCODE SICHERN
         L     R13,4(R1)
         LA    R0,COMLNG
         FREEMAIN R,LV=(0),A=(1)
         LR    R15,R11            RETURNCODE LADEN
         RETURN (14,12),,RC=(15)
         EJECT
COM      DSECT
SAVE     DS    18F                SAVEAREA FORT-MODUL
PGMNM    DS    D                  COMPILERNAME:IEJFAAA0,IEYFORT,IEKAA00
ACPPL    DS    A                  ADRESSE CPPL VOM AUFRUF FORT
RETCD    DS    H                  RETURNCODE
FLAG     DS    H
PARM     DS    2F                 PARAMETERLISTE FUER COMPILER
PARML    DS    H
PARMA    DS    CL116              PARM-ANGABEN
DDNL     DS    H
DDNA     DS    9CL8               ALTERNATIVE DDNAMEN
APGM     DS    F                  PARAMETERLISTE LINK-MAKRO
ADCB     DS    F
ACOM     DS    F                  ADRESSE COM1-AREA
ADAIR    DS    F             A(IKJEFD00)    DAIR
COMLNG   EQU   *-COM
         END


FORT     TITLE 'FORT - TSO-PROMPTER FUER FORTRAN E/G/H-COMPILER *** PAR*
               AMETERLISTE UND ALLOC'
GFORT001 CSECT
*
*        REENTRANT CODING
*
*        NUR MIT NOALGN UEBERSETZEN
*
*
*        R12 = BASISREGISTER PROGRAMM
*        R11 = BASISREGISTER COM-DSECT
*        R10 = BASISREGISTER COM1-DSECT
*        R9  = BAL-REGISTER
*        R8  = BASISREGISTER PARSE-PDES
*        R7  = RETURNREGISTER BEI PARSE- UND DAIRERRORS
*
*        BELEGUNG FLAG-BYTE:
*        X'80'    FORTRAN-E-COMPILER
*        X'40'    FORTRAN-G-COMPILER
*        X'20'    FORTRAN-H-COMPILER
*        X'10'    SYSIN=TERMINAL(*)
*        X'08'    WORK-BIT
*        X'04'    SYSPRINT IST SYSOUT,CLASS IM 1.BYTE VON ACOM
*        X'02'    SYSPRINT NICHT AUF TERMINAL,TPUT MESSAGES AUSGEBEN
*        X'01'    TESTAUSGABE GEFORDERT
*
*        BELEGUNG FLAG1-BYTE:
*        X'80'    SYSPRINT=DUMMY
*        X'40'    SOURCE-PROGRAMM-LISTEN
*        X'20'    MAP,XREF ALS DEFAULT
*        X'10'    SYSLIN=DUMMY
**********************************************************************
*        SAVEAREAS UND BASISREGISTER
**********************************************************************
         REGISTER
         SAVE  (14,12),,*
         LR    R12,R15
         LR    R11,R1
         USING GFORT001,R12
         USING COM,R11
         LA    R0,COM1LNG
         GETMAIN R,LV=(0)
         ST    R13,4(R1)
         ST    R1,8(R13)
         LR    R13,R1
         LR    R10,R1
         USING COM1,R10
**********************************************************************
*        CLEAR AREAS,STORE ADRESSEN
**********************************************************************
         XC    RETCD(XCLEN),RETCD      CLEAR COM
         LA    R14,PARML               COMPILER - PARAMETERLISTE
         LA    R15,DDNL
         STM   R14,R15,PARM
         MVI   PARM+4,X'80'
         ST    R10,ACOM            COM1-ADR SICHERN
         LOAD  EP=IKJEFD00
         ST    R0,ADAIR
         ST    R12,ABASE           SAVE BASISREG FUER PARSE-EXIT-ROUT.
         LA    R1,DAPLECB
         ST    R1,DAPLECBA
         L     R1,ACPPL
         LM    R15,R1,4(R1)
         ST    R15,DAPLUPT
         ST    R0,DAPLPSCB
         ST    R1,DAPLECT
**********************************************************************
*        PARSE
**********************************************************************
         L     R1,ACPPL            A(CPPL) VOM TMP
         LM    R14,R1,0(R1)
         ST    R14,PPLCBUF         PPL AUFBEREITEN
         ST    R15,PPLUPT
         ST    R1,PPLECT
         LA    R1,PPLECB
         ST    R1,PPLECBA
         L     R1,=V(PARMTAB)
         ST    R1,PPLPCL
         LA    R1,PPLANS
         ST    R1,PPLANSA
         ST    R11,PPLUWA
         LA    R1,PPLUPT
         LINK  EP=IKJPARS          LINK PARSE
         LA    R7,ERRET
         LTR   R15,R15
         BZ    PARSE1
         BAL   R14,CVDEZ           ERRORS IN PARSE
         MVC   TPUTA(L'MSG1),MSG1
         STH   R15,TPUTA+L'MSG1-3
         LA    R0,L'MSG1
         B     TPUT
*
PARSE1   EQU   *                   KEIN PARSE-FEHLER
         L     R8,PPLANS
         USING IKJPARMD,R8
**********************************************************************
         CLI   TST+1,X'01'        TESTAUSGABE GEFORDERT
         BNE   TST1
         OI    FLAG,X'01'
TST1     EQU   *
         LH    R15,LEVL
         BCTR  R15,0               R15-1
         SLL   R15,2               *4
         B     LEVELA(R15)
LEVELA   EQU   *
         B     LEVELE              LEVEL(E/G/H)
         B     LEVELG
LEVELH   EQU   *
         OI    FLAG,X'20'          H-COMPILER
         MVC   PGMN,=CL8'IEKAA00'
         LA    R1,2820
         STH   R1,SYSPRBLK
         B     PARSE2
LEVELG   EQU   *
         OI    FLAG,X'40'          G-COMPILER
         MVC   PGMN,=CL8'IEYFORT'
         LA    R1,2400
         STH   R1,SYSPRBLK
         B     PARSE2
LEVELE   EQU   *
         OI    FLAG,X'80'          E-COMPILER
         MVC   PGMN,=CL8'IEJFAAA0'
         LA    R1,2420
         STH   R1,SYSPRBLK
*
PARSE2   EQU   *
         LA    R1,INPT             INPUT=TERMINAL (*) ?
         CLI   5(R1),X'01'
         BNE   PARSE3
         L     R1,0(R1)            A(DSN)
         CLI   0(R1),C'*'
         BNE   PARSE3
         OI    FLAG,X'10'
**********************************************************************
PARSE3   EQU   *                   PRINT/SYSPRINT-HANDLING
         CLI   SYSPRINT,X'00'
         BNE   PARSE4              BEREITS IN VALIDCK-ROUTINE ALLOCATET
         LD    0,=CL8'SYSPRINT'    FUER ERRORMSG
         LH    R15,PRINT
         SLL   R15,2               *4
         B     PRINTL(15)
PRINTL   B     PRINTO
         B     PRINTOD
         B     SYSPRI
NOPRINT  EQU   *                   ALLOCATE DUMMY TO SYSPRINT
         BAL   R9,DUMMY
         STD   0,SYSPRINT          DDNAME EINSETZEN
         OI    FLAG,X'02'          COMPILER TPUT AUF TERMINAL
         OI    FLAG1,X'80'         SYSPRINT=DUMMY
         B     PARSE4
*        KEINE PRINTANGABE = PRINT(*) MIT NOSOURCE AUSSER FORTRAN-E
PRINTO   EQU   *
         TM    FLAG,X'80'           FORTRAN-E-COMP
         BO    NOPRINT              SYSPRINT=DUMMY
         BAL   R9,TERMINAL         ALLOCATE TERMINAL TO SYSPRINT
         STD   0,SYSPRINT
         B     PARSE4
*        PRINT OHNE DSN,GENERATE DSN AUS SYSIN-DSN
PRINTOD  EQU   *
         MVC   DA08CD(DAIR08L),DAIR08
         TM    FLAG,X'10'
         BZ    PRINTOD1
         MVI   DSNA,C' '
         MVC   DSNA+1(43),DSNA
         MVC   DSNA(LISTL),LIST1   SYSIN=TERMINAL
         LA    R1,LISTL
         STH   R1,DSNL
         B     PRINTOD2
PRINTOD1 EQU   *                   DSN AUS SYSIN-DSN ERSTELLEN
         LA    R1,INPT             SYSIN PDE-ADR
         OI    FLAG,X'08'          NUR DSN OHNE MEMBER,PASSWD,.FORT
         BAL   R9,MOVEDSN          IN DSNA BRINGEN
         NI    FLAG,B'11110111'    FLAG-BIT LOESCHEN
         LA    R1,DSNA             .LIST ANHAENGEN
         AH    R1,DSNL
         MVC   0(L'LIST2,R1),LIST2
         LH    R1,DSNL
         LA    R1,L'LIST2(R1)
         STH   R1,DSNL
PRINTOD2 EQU   *
         BAL   R9,OLDNEW
         OI    DA08CTL,X'20'       PREFIX USERID
         BAL   R9,PRIALC
         B     PARSE4
SYSPRI   EQU   *                   ALLOCATE SYSPRINT AUF SYSOUT
         TM    SPRINT1+6,X'80'     SYSOUT-CLASS VORH.
         BO    SYSPRI1
         MVI   ACOM,C'A'
         B     SYSPRI2
SYSPRI1  EQU   *
         L     R1,SPRINT1          A(SYSOUT-CLASS)
         MVC   ACOM(1),0(R1)       MOVE SYSOUT-CLASS TO ACOM
SYSPRI2  EQU   *
         BAL   R9,SYSOUT           ALLOCATE SYSOUT
         STD   0,SYSPRINT
         OI    FLAG,X'06'          FUER FREE - SYSOUT-CLASS+COMP TPUT
         OI    FLAG1,X'60'         SOURCE+MAP+XREF
PARSE4   EQU   *
**********************************************************************
*                                  LOAD / SYSLIN HANDLING
         CLI   SYSLIN,X'00'
         BNE   PARSE5              BEREITS IN VALIDCK-ROUTINE ALLOCATET
         LD    0,=CL8'SYSLIN'      FUER ERROR-MSG
         LH    R15,LOAD
         SLL   R15,2               *4
         B     LOADL(R15)
LOADL    B     LOAD1               KEINE ANGABE
         B     LOAD1               LOAD  OHNE DSN
         B     LOAD4               NOLOAD
LOAD1    EQU   *
         MVC   DA08CD(DAIR08L),DAIR08
         TM    FLAG,X'10'
         BZ    LOAD2
         MVI   DSNA,X'40'          CLEAR DSNA
         MVC   DSNA+1(43),DSNA     SYSIN = TERMINAL
         MVC   DSNA(L'LIST3+L'LIST4),LIST3       DSN=FORT.OBJ
         LA    R1,L'LIST3+L'LIST4
         STH   R1,DSNL
         B     LOAD3
LOAD2    EQU   *                   DSN AUS SYSIN-DSN ERSTELLEN
         LA    R1,INPT             SYSIN PDE
         OI    FLAG,WORK
         BAL   R9,MOVEDSN          DSN OHNE .FORT IN DSNA BRINGEN
         NI    FLAG,WORKL
         LA    R1,DSNA             .OBJ ANHAENGEN
         AH    R1,DSNL
         MVC   0(L'LIST4,R1),LIST4
         LH    R1,DSNL             LAENGE BERICHTIGEN
         LA    R1,L'LIST4(R1)
         STH   R1,DSNL
LOAD3    EQU   *
         OI    DA08CTL,X'20'       PREFIX USERID
         BAL   R9,OLDNEW
         BAL   R9,OBJALC           ALLOCATE SYSLIN
         B     PARSE5
LOAD4    EQU   *
         TM    FLAG,X'80'          FORTRAN E
         BZ    PARSE5
         BAL   R9,DUMMY
         STD   0,SYSLIN
         OI    FLAG1,X'10'         SYSLIN=DUMMY
PARSE5   EQU   *
**********************************************************************
*                                  SYSUT1 - SYSUT2 HANDLING
         TM    FLAG,X'40'
         BZ    UT1
         LA    R1,SYSUT1-SYSLIN    FORTRAN G-COMPILER,KEIN SYSUT
         STH   R1,DDNL
         B     PARSE6
UT1      EQU   *
         TM    FLAG,X'20'          H-COMPILER
         BZ    UT2                 E-COMPILER
         TM    FLAG1,X'80'         SYSPRINT=DUMMY
         BO    UT6                 KEINE SYSUT-ALLOCATION FUER H-COMP.
         CLI   EDIT+1,X'01'        EDIT ANGEGEBEN
         BNE   UT3                 NEIN
UT2      EQU   *
         LD    0,=CL8'SYSUT1'      ALLOC SYSUT1
         BAL   R9,UTALC
         STD   0,SYSUT1
UT3      EQU   *
         TM    FLAG,X'20'          H-COMPILER
         BZ    UT5                 E-COMPILER
         TM    FLAG1,X'20'         XREF=DEFAULT
         BZ    UT4
         CLI   XREF+1,X'00'        KEINE ANGABE
         BE    UT5
UT4      CLI   XREF+1,X'01'        XREF ANGEGEBEN
         BNE   UT6                 NOXREF
UT5      EQU   *
         LD    0,=CL8'SYSUT2'      ALLOC SYSUT2
         BAL   R9,UTALC
         STD   0,SYSUT2
UT6      EQU   *                   LAENGENFELD SETZEN
         LA    R1,LDDN
         STH   R1,DDNL
PARSE6   EQU   *
**********************************************************************
*        PARM-LISTE FUELLEN
**********************************************************************
         LH    R0,CDECK+1        C'NO'
         SR    R14,R14
         LA    R15,PARMA
         LA    R1,CDECK          NODECK
         BAL   R9,PARMUP
*
         CLI   SYSLIN,X'00'
         BNE   PARM1
         BAL   R9,NOUP           NOLOAD
PARM1    EQU   *
         LA    R1,CLOAD          LOAD
         BAL   R9,PARMUP
*
         TM    FLAG,X'40'        G-COMPILER KEINE SIZE
         BO    PARM4
         CLI   SIZE+1,X'01'      SIZE ANGEGEBEN
         BE    PARM3
PARM2    TM    FLAG,X'20'        H-COMPILER KEINE SIZE
         BO    PARM4
         LA    R1,CSIZE          DEFAULT FUER E-COMPILER  SIZE=128K
         BAL   R9,PARMUP
         LA    R1,C128K
         BAL   R9,PARMUP
         B     PARM4
PARM3    EQU   *                 ANGEGEBENE SIZE EINSETZEN
         LA    R1,SZE1           SIZE PDE
         TM    6(R1),X'80'
         BZ    PARM2             KEINE SIZE-ANGABE,DEFAULT
         LA    R1,CSIZE
         BAL   R9,PARMUP         C'SIZE='  EINSETZEN
         LA    R1,SZE1           SIZE PDE
         BAL   R7,PARMPDE        SIZE-WERT EINSETZEN
PARM4    EQU   *
*
         TM    FLAG,X'80'          E-COMPILER
         BZ    PARM5
         LA    R1,CLNELNGT         LINELENGTH=
         BAL   R9,PARMUP                               LINELNG=133
         LA    R1,LNELNG1          PDE
         BAL   R7,PARMPDE          C'133,' EINSETZEN
PARM5    EQU   *
*
         TM    FLAG,X'20'          H-COMPILER
         BZ    PARM6
         CLI   SYSUT1,X'00'        NOEDIT
         BNE   OPT2                                     OPT=0
         LA    R1,COPT
         BAL   R9,PARMUP
         LA    R1,SOPT1
         BAL   R7,PARMPDE
         B     PARM6
OPT2     EQU   *
         LA    R1,COPT2            OPT=2
         BAL   R9,PARMUP
PARM6    EQU   *
*
         LA    R1,CLNECNT
         BAL   R9,PARMUP                        LINECNT=50
         LA    R1,LNECNT1
         BAL   R7,PARMPDE
*
         CLI   NAME+1,X'01'
         BNE   PARM7                            NAME=MAIN
         LA    R1,CNAME
         BAL   R9,PARMUP
         LA    R1,NME1
         BAL   R7,PARMPDE
PARM7    EQU   *
*
         TM    FLAG,X'80'          E-COMPILER
         BO    PARM9
         CLI   LIST+1,X'01'                     LIST/NOLIST
         BE    PARM8
         BAL   R9,NOUP
PARM8    EQU   *
         LA    R1,CLIST
         BAL   R9,PARMUP
PARM9    EQU   *
*
         TM    FLAG1,X'80'                      SOURCE/NOSOURCE
         BO    NSRC         SYSPRINT=DUMMY
         CLI   SOURCE+1,X'01'
         BE    SRC          SOURCE
         BH    NSRC         NOSOURCE
         TM    FLAG1,X'40'  KEINE ANGABEN
         BO    SRC          SOURCE=DEFAULT
NSRC     EQU   *
         BAL   R9,NOUP      NOSOURCE
SRC      EQU   *
         LA    R1,CSOURCE   SOURCE
         BAL   R9,PARMUP
*
         TM    FLAG1,X'80'                      MAP/NOMAP
         BO    NMP
         CLI   MAP+1,X'01'
         BE    MP
         BH    NMP
         TM    FLAG1,X'20'
         BO    MP
NMP      EQU   *
         BAL   R9,NOUP      NOMAP
MP       EQU   *
         LA    R1,CMAP
         BAL   R9,PARMUP    MAP
*
         CLI   BCD+1,X'02'                        BCD/EBCDIC
         BE    EBCDIC
         LA    R1,CBCD      BCD
         B     BCDB
EBCDIC   EQU   *
         LA    R1,CEBCDIC   EBCDIC
BCDB     EQU   *
         BAL   R9,PARMUP
*
         TM    FLAG,X'80'   E-COMP              ID/NOID
         BO    PARM10
         CLI   ID+1,X'02'
         BNE   PID
         BAL   R9,NOUP      NOID
PID      EQU   *
         LA    R1,CID
         BAL   R9,PARMUP    ID
PARM10   EQU   *
*
         TM    FLAG,X'20'  H-COMP               EDIT/NOEDIT
         BZ    PARM11
         CLI   SYSUT1,X'00'
         BNE   EDT
         BAL   R9,NOUP     NOEDIT
EDT      EQU   *
         LA    R1,CEDIT    EDIT
         BAL   R9,PARMUP
*
         CLI   SYSUT2,X'00'                     XREF/NOXREF
         BNE   XRF
         BAL   R9,NOUP     NOXREF
XRF      EQU   *
         LA    R1,CXREF    XREF
         BAL   R9,PARMUP
PARM11   EQU   *
*
         TM    FLAG,X'80'  E-COMP               SPACE/PRFRM
         BZ    PARM12
         CLI   SPACE+1,X'01'
         BE    SPCE
         LA    R1,CPRFRM   PRFRM
         B     SPCEB
SPCE     EQU   *
         LA    R1,CSPACE   SPACE
SPCEB    BAL   R9,PARMUP
*
         CLI   ADJUST+1,X'02'                   ADJUST/NOADJUST
         BNE   ADJST
         BAL   R9,NOUP     NOADJUST
ADJST    EQU   *
         LA    R1,CADJUST  ADJUST
         BAL   R9,PARMUP
*
PARM12   EQU   *                                PARMLNGE BERECHNEN
         BCTR  R15,0       LETZTES KOMMA LOESCHEN
         MVI   0(R15),X'00'
         LA    R1,PARMA
         SR    R15,R1
         STH   R15,PARML
         TM    FLAG,X'01'         TESTAUSGABE?
         BZ    RETURN1
         LH    R0,PARML
         LA    R1,PARMA
         TPUT  (1),(0),R
         LA    R0,8
         LA    R1,PGMN
         TPUT  (1),(0),R
RETURN1  EQU   *
         TM    FLAG,X'02'
         BZ    RETURN
         LH    R15,LEVL          TPUT 'FORTRAN-X-COMPILER ENTERED'
         BCTR  R15,0
         MVC   TPUTA(LCOMP2),COMPMSG
         SLL   R15,3             *8
         B     RETCOMP(R15)
RETCOMP  MVI   TPUTA+LCOMP1,C'E'
         B     RETURN2
         MVI   TPUTA+LCOMP1,C'G'
         B     RETURN2
         MVI   TPUTA+LCOMP1,C'H'
RETURN2  EQU   *
         LA    R0,LCOMP2
         BAL   R7,TPUT
RETURN   EQU   *
*        FREEMAIN PARSE-PDES
         LA    R1,PPLANS
         IKJRLSA (1)
*        FREEMAIN COM1AREA
         LR    R1,R10
         L     R13,SAVE+4
         LA    R0,COM1LNG
         FREEMAIN R,LV=(0),A=(1)
         RETURN (14,12)
*
ERRET    MVI   RETCD+1,20          RETURNCODE=20,ERROR IN GFORT001
         B     RETURN
**********************************************************************
UTALC    EQU   *   ALLOCATE SCRATCH-DATEIEN SYSUT1+SYSUT2,RET=R9
**********************************************************************
         MVC   DA08CD(DAIR08L),DAIR08
         LA    R1,1700
         ST    R1,DA08BLK
         LA    R1,200
         ST    R1,DA08PQTY
         ST    R1,DA08SQTY
         MVC   DA08DSP1(4),=XL4'04040450' DISP=(NEW,DELETE,DELETE)
         BAL   R14,DAIRPARM
         BALR  R14,R15            CALL IKJDAIR
         LTR   R15,R15
         BZ    UTALC1
         LH    R1,DA08DARC        ERROR IN ALLOC
         B     DAIRERR
UTALC1   EQU   *
         LD    0,DA08DDN
         BR    R9
**********************************************************************
NOUP     EQU   *    C'NO'  IN PARAMETERLISTE EINSETZEN,RET=R9
**********************************************************************
         STH   R0,0(R15)         C'NO' STEHT IN R0
         LA    R15,2(R15)
         BR    R9
**********************************************************************
PARMUP   EQU   *    PARM-ANGABEN (R1) IN PARMLISTE BRINGEN,RET=R9
**********************************************************************
         IC    R14,0(R1)   LAENGE-1 IN R14
PARMUP1  EX    R14,PARMVC      MOVE IN PARMLIST
         LA    R15,1(R15,R14)  ADRESSE BERICHTIGEN
         BR    R9
PARMVC   MVC   0(1,R15),1(R1)
**********************************************************************
PARMPDE  EQU   *    STRING AUS PDE (R1) IN PARMLISTE BRINGEN,RET=R7
**********************************************************************
         IC    R14,5(R1)           LAENGE
         BCTR  R14,0
         L     R1,0(R1)            A(STRING)
         BCTR  R1,0
         BAL   R9,PARMUP1
         MVI   0(R15),C','
         LA    R15,1(R15)
         BR    R7
**********************************************************************
OLDNEW   EQU   *   TEST,OB DSN IN DSNA MIT OLD ODER NEW ALLOC,RET=R9
**********************************************************************
         MVC   DA04CD(DAIR04L),DAIR04
         LA    R15,DSNL
         ST    R15,DA08PDSN
         ST    R15,DA04PDSN
         OI    DA04CTL,X'20'    PREFIX USERID
         BAL   R14,DAIRPARM
         LA    R14,DA04CD
         ST    R14,DAPLDAPB
         BALR  R14,R15          CALL IKJDAIR
         LTR   R15,R15
         BZ    OLDNEW1          NO ERROR
         CH    R15,=H'8'
         BE    OLDNEW2          CATALOG-ERROR   ALLOC DISP=NEW
         SR    R1,R1            DAIR-CODE=0
         LA    R7,ERRET
         B     DAIRERR
OLDNEW1  EQU   *
         TM    DA04FLG,X'06'
         BZ    OLDNEW2
         OI    FLAG,X'08'          DISP=OLD
         BR    R9
OLDNEW2  EQU   *
         NI    FLAG,B'11110111'    DISP=NEW
         BR    R9
**********************************************************************
PRIALC   EQU   *      ALLOC  SYSPRINT MIT OLD ODER NEW NACH OLDNEW,
**********************************************************************
*                                                          RET=R9
         OI    FLAG,X'02'          COMPILER TPUT AUF TERMINAL
         TM    FLAG,X'08'
         BZ    PRIALC1
         MVC   DA08DSP1(3),=X'010202'    DISP=(OLD,CATLG,CATLG)
         NI    FLAG,B'11110111'         +PREFIX USERID
         B     PRIALC2
PRIALC1  EQU   *                         DISP=(NEW,CATLG,CATLG)
         MVC   DA08DSP1(3),=X'040202'
         OI    DA08CTL,X'50'       RLSE + SPACE=BLK
         LH    R1,SYSPRBLK
         ST    R1,DA08BLK        SPACE=(XXXX,(200,200))
         LA    R1,200
         ST    R1,DA08PQTY
         ST    R1,DA08SQTY
PRIALC2  EQU   *
         BAL   R14,DAIRPARM
         BALR  R14,R15           CALL IKJDAIR
         LTR   R15,R15
         BZ    PRIALC3
         LH    R1,DA08DARC       ALLOC ERRORS
         B     DAIRERR           MSG + RETURN MIT RC=20
PRIALC3  EQU   *
         OI    FLAG1,X'60'         SOURCE+MAP+XREF
         MVC   SYSPRINT,DA08DDN  DDNAME NACH COMPILER-PARM BRINGEN
         BR    R9                  RETURN
**********************************************************************
OBJALC   EQU   *   ALLOC SYSLIN MIT OLD ODER NEW , RET=R9
**********************************************************************
         TM    FLAG,X'08'
         BZ    OBJALC1
         MVC   DA08DSP1(3),=X'010202'   DISP=(OLD,CATLG,CATLG)+PREF.UID
         NI    FLAG,B'11110111'
         B     OBJALC2
OBJALC1  EQU   *
         MVC   DA08DSP1(3),=X'040202'   DISP=(NEW,CATLG,CATLG)
         OI    DA08CTL,X'50'                        +RLSE+SPACE=BLOCK
         MVC   DA08BLK(12),SPCLIN       SPACE=(800,(100,100),RLSE)
OBJALC2  EQU   *
         BAL   R14,DAIRPARM
         BALR  R14,R15             CALL IKJDAIR
         LTR   R15,R15
         BZ    OBJALC3
         LH    R1,DA08DARC         ERRORMSG AUSGEBEN
         B     DAIRERR
OBJALC3  EQU   *
         MVC   SYSLIN,DA08DDN      DDNAME NACH COMPILER-PARM
         BR    R9                  RETURN
**********************************************************************
CVDEZ    EQU   *   CONVERT R15 IN CHAR DEZIMAL,RETURN=R14
**********************************************************************
         CVD   R15,WORK1
         UNPK  WORK2,WORK1
         OI    WORK2+7,X'F0'      'C' IN 'F' UMWANDELN
         L     R15,WORK2+4
         BR    R14
**********************************************************************
TPUTLN   EQU   *   AUSGABE TPUT AUS AREA TPUTA,RETURN=R7
**********************************************************************
         LH    R0,TPUTL
TPUT     EQU   *
         LA    R1,TPUTA
         TPUT  (1),(0),R
         BR    R7
**********************************************************************
DUMMY    EQU   *   ALLOCATE DUMMY-DATEI,DDNAME IN FR0,RETURN=R9
**********************************************************************
         MVC   DA08CD(DAIR08L),DAIR08
         MVC   DA08DSP1(L'DUMMYDSP),DUMMYDSP
         BAL   R14,DAIRPARM
         BALR  R14,R15             CALL IKJDAIR
         LTR   R15,R15             RC=0
         BZ    DUMMY1
         LH    R1,DA08DARC
         B     DAIRERR             ERRORMSG AUSGEBEN + ERRET
DUMMY1   EQU   *
         LD    0,DA08DDN           DDNAME IN FLTREG 0
         BR    R9                  RETURN
**********************************************************************
DAIRPARM EQU   *   DAIR-PARAMETERLISTE FUELLEN,RETURN=R14
**********************************************************************
         LA    R1,DA08CD
         ST    R1,DAPLDAPB
         XC    DAPLECB,DAPLECB
         LA    R1,DAPLUPT
         L     R15,ADAIR
         BR    R14
**********************************************************************
DAIRERR  EQU   *   DAIR-ERRORMSG AUSGEBEN,RETURN=R7
**********************************************************************
         MVC   TPUTA(DMSGL4),DAIRMSG
         STD   0,TPUTA+DMSGL2       DDNAME EINSETZEN
         BAL   R14,CVDEZ
         STH   R15,TPUTA+DMSGL1     RETURNCODE R15 EINSETZEN
         BAL   R14,CVHEX
         ST    R1,TPUTA+DMSGL3      DAIRRETURNCODE (DAXXDARC) EINSETZEN
         LA    R0,DMSGL4            MESSAGELAENGE
         B     TPUT
**********************************************************************
CVHEX    EQU   *   INHALT R1 IN HEX CONVERTIEREN , RETURN=R14
**********************************************************************
         STH   R1,WORK1
         UNPK  WORK2(5),WORK1(3)
         TR    WORK2(4),TRTAB-240
         L     R1,WORK2
         BR    R14
TRTAB    DC    C'0123456789ABCDEF'
**********************************************************************
MOVEDSN  EQU   *   DSNAME AUS PDE IN DSN-PUFFER BRINGEN,RETURN=R9
**********************************************************************
         MVI   DSNA,C' '
         MVC   DSNA+1(43),DSNA
         TM    6(R1),X'80'
         BZ    MOVEDSN3            KEIN DSN VORHANDEN
         L     R14,0(R1)           A(DSN)
         LH    R15,4(R1)           L'DSN
         TM    FLAG,X'08'          OHNE .FORT
         BZ    MOVEDSN2
         CH    R15,=H'5'           DSN ZU KURZ FUER .FORT
         LA    R14,0(R14,R15)
         SH    R14,=H'5'
         CLC   0(5,R14),LIST0
         BNE   MOVEDSN1
         SH    R15,=H'5'
MOVEDSN1 EQU   *
         L     R14,0(R1)           A(DSN)
MOVEDSN2 EQU   *
         STH   R15,DSNL
         BCTR  R15,0               DSN IN AREA BRINGEN
         EX    R15,MOVEMVC1
         LA    R15,DSNL
         ST    R15,DA08PDSN
         TM    FLAG,X'08'          NUR DSN
         BOR   R9                  RETURN
         TM    6(R1),X'40'         PREFIX USERID
         BO    MOVEDSN3
         OI    DA08CTL,X'20'
MOVEDSN3 EQU   *
         TM    14(R1),X'80'        MEMBERNAME VORHANDEN
         BZ    MOVEDSN4
         LH    R15,12(R1)          L'MEMBERNAME
         BCTR  R15,0
         L     R14,8(R1)           A(MEMBERNAME)
         EX    R15,MOVEMVC2        MOVE MEMBERNAME
MOVEDSN4 EQU   *
         TM    22(R1),X'80'        PASSWORD VORHANDEN
         BZR   R9
         LH    R15,20(R1)          L'PASSWORD
         BCTR  R15,0
         L     R14,16(R1)          A(PASSWORD)
         EX    R15,MOVEMVC3
         BR    R9                  RETURN
MOVEMVC1 MVC   DSNA(1),0(R14)
MOVEMVC2 MVC   DA08MNM(1),0(R14)
MOVEMVC3 MVC   DA08PSWD(1),0(R14)
**********************************************************************
TERMINAL EQU   *   ALLOCATE TERMINAL,RETURN=R9,DDNAME IN FLREG 0
**********************************************************************
         MVC   DA1CCD(DAIR1CL),DAIR1C
         BAL   R14,DAIRPARM
         BALR  R14,R15              CALL IKJDAIR
         LTR   R15,R15
         BZ    TERM10               RETCD=0
         LH    R1,DA1CDARC
         B     DAIRERR              ERRORMSG AUSGEBEN + ERRET
TERM10   EQU   *
         LD    0,DA1CDDN          D DDNAME IN FLTREG 0
         BR    R9
**********************************************************************
SYSOUT   EQU   *     ALLOCATE  SYSOUT - DATEI, RETURN=R9
**********************************************************************
         MVC   DA30CD(DAIR30L),DAIR30
         MVC   DA30BLK+2(2),SYSPRBLK            BLKSIZE EINSETZEN
         BAL   R14,DAIRPARM
         BALR  R14,R15             CALL IKJDAIR
         LTR   R15,R15             RC=0
         BZ    SYSOUT1
         LH    R1,DA30DARC
         B     DAIRERR             ERRORMSG AUSGEBEN + RETURN MIT RC=20
SYSOUT1  EQU   *
         LD    0,DA30DDN
         BR    R9
**********************************************************************
*         VALIDCHECK-ROUTINE OPT-WERT / PARSE EXIT ROUTINE
*********************************************************************
OPTCHK    EQU   *
          STM   R14,R12,12(R13)
          L     R11,4(R1)
          L     R10,ACOM
          L     R12,ABASE
          ST    R13,SAVEE+4
          LA    R13,SAVEE
          L     R1,0(R1)            PDE - ADR
          TM    6(R1),X'80'
          BZ    OPTERR
          CLI   5(R1),X'01'
          BNE   OPTERR
          L     R15,0(R1)             STRING-ADR
          CLI   0(R15),C'0'
          BE    OPTCHK1
          CLI   0(R15),C'1'
          BE    OPTCHK1
          CLI   0(R15),C'2'
          BE    OPTCHK1
OPTERR    EQU   *
          LA    R15,4
OPTRET    EQU   *
          L     R13,SAVEE+4
          RETURN (14,12),RC=(15)
OPTCHK1   EQU   *
          SR    R15,R15
          B     OPTRET
**********************************************************************
*        VALIDCHECK - ROUTINE  SYSIN  /  PARSE EXIT ROUTINE
**********************************************************************
DSNIN    EQU   *
         STM   R14,R12,12(R13)
         L     R11,4(R1)
         L     R10,ACOM
         L     R12,ABASE
         ST    R13,SAVEE+4
         LA    R13,SAVEE
         L     R1,0(R1)            PDE - ADR
         LD    0,=CL8'SYSIN'
         CLI   5(R1),X'01'         PRUEFEN AUF '*'
         BNE   DSNIN0
         L     R15,0(R1)           A(DSN)
         CLI   0(R15),C'*'
         BE    DSNIN7
DSNIN0   EQU   *
         MVC   DA08CD(DAIR08L),DAIR08
         BAL   R9,MOVEDSN          DSN IN BFR BRINGEN
         TM    DA08CTL,X'20'       PREFIX USERID
         BZ    DSNIN2              0S-DATEI
         LH    R15,DSNL            .FORT ANHAENGEN,WENN NICHT VORH.
         LA    R14,DSNA(R15)
         SH    R14,=H'5'
         CH    R15,=H'5'
         BL    DSNIN1              DSN ZU KURZ FUER .FORT
         CLC   0(5,R14),LIST0
         BE    DSNIN2              .FORT VORHANDEN
DSNIN1   MVC   5(5,R14),LIST0      .FORT ANHAENGEN
         LA    R15,5(R15)          LAENGENFELD BERICHTIGEN
         STH   R15,DSNL
DSNIN2   EQU   *
         MVC   DA08DSP1(3),=X'080808'     DISP=(SHR,KEEP,KEEP)
         BAL   R14,DAIRPARM
         BALR  R14,R15             CALL IKJDAIR
         LTR   R15,R15
         BZ    DSNIN5              0K,RC=0
         LH    R1,DA08DARC
         BAL   R7,DAIRERR
DSNIN3   LA    R15,4               RC=4,INVALID PARAMETER
DSNIN4   EQU   *
         L     R13,SAVEE+4         RETURN TO PARSE
         RETURN (14,12),RC=(15)
DSNIN5   MVC   SYSIN,DA08DDN       STORE  DDNAME  IN COMPILERPARMLISTE
DSNIN6   SR    R15,R15             RC=0,PARAMETER VALID
         B     DSNIN4
DSNIN7   EQU   *                   ALLOCATE TERMINAL TO SYSIN
         LA    R7,DSNIN3
         BAL   R9,TERMINAL
         STD   0,SYSIN
         B     DSNIN6
**********************************************************************
*        VALIDCHECK - ROUTINE SYSPRINT / PARSE EXIT-ROUTINE
**********************************************************************
DSNPRINT EQU   *
         STM   R14,R12,12(R13)
         L     R11,4(R1)           BASISREGISTER LADEN
         L     R10,ACOM
         L     R12,ABASE
         ST    R13,SAVEE+4         SAVEAREA
         LA    R13,SAVEE
         L     R1,0(R1)            PDE-ADR
         LD    0,=CL8'SYSPRINT'
         CLI   5(R1),X'01'         PRUEFEN AUF '*'
         BNE   DSNPRI0
         L     R15,0(R1)           A(DSN)
         CLI   0(R15),C'*'
         BE    DSNPRI5             ALLOCATE TERMINAL
DSNPRI0  EQU   *
         MVC   DA08CD(DAIR08L),DAIR08
         BAL   R9,MOVEDSN
         TM    DA08CTL,X'20'
         BZ    DSNPRI2
         LH    R15,DSNL            KEINE OS-DATEI,PRUEFEN AUF .LIST
         LA    R14,DSNA(R15)
         SH    R14,=H'5'           .LIST ANHAENGEN
         CH    R15,=H'5'           ZU KURZ FUER  .LIST
         BL    DSNPRI1
         CLC   0(5,R14),LIST2
         BE    DSNPRI2             .LIST VORHANDEN
DSNPRI1  EQU   *
         MVC   5(5,R14),LIST2      .LIST ANHAENGEN
         LA    R15,5(R15)           LAENGENFELD BERICHTIGEN
         STH   R15,DSNL
DSNPRI2  EQU   *
         LA    R7,DSNPRI12
         BAL   R9,OLDNEW           TEST,OB DISP=OLD ODER DISP=NEW
         LA    R7,DSNPRI4
         BAL   R9,PRIALC           ALLOC
DSNPRI25 SR    R15,R15
DSNPRI3  EQU   *
         L     R13,SAVEE+4         RETURN
         RETURN (14,12),RC=(15)
DSNPRI4  LA    R15,4               ERROR-RETURNS
         B     DSNPRI3
DSNPRI12 LA    R15,12
         B     DSNPRI3
DSNPRI5  EQU   *                   ALLOC TERMINAL
         OI    FLAG1,X'40'         NUR  SOURCE
         LA    R7,DSNPRI12
         BAL   R9,TERMINAL
         STD   0,SYSPRINT
         B     DSNPRI25
**********************************************************************
*        VALIDCHECK - ROUTINE SYSLIN / PARSE EXIT ROUTINE
**********************************************************************
DSNOUT   EQU   *
         STM   R14,R12,12(R13)
         L     R11,4(R1)           BASISREG. LADEN
         L     R10,ACOM
         L     R12,ABASE
         ST    R13,SAVEE+4
         LA    R13,SAVEE
         L     R1,0(R1)            PDE - ADRESSE
         LD    0,=CL8'SYSLIN'
         MVC   DA08CD(DAIR08L),DAIR08
         BAL   R9,MOVEDSN
         TM    DA08CTL,X'20'
         BZ    DSNOUT2
         LH    R15,DSNL            KEINE OS-DATEI,PRUEFEN AUF .OBJ
         LA    R14,DSNA(R15)
         SH    R14,=H'5'
         CH    R15,=H'5'
         BL    DSNOUT1             ZU KURZ FUER .OBJ
         CLC   1(4,R14),LIST4
         BE    DSNOUT2             .OBJ VORHANDEN
DSNOUT1  MVC   5(4,R14),LIST4
         LA    R15,4(R15)
         STH   R15,DSNL            LAENGENFELD BERICHTIGEN
DSNOUT2  EQU   *
         LA    R7,DSNOUT12
         BAL   R9,OLDNEW
         LA    R7,DSNOUT4
         BAL   R9,OBJALC
         SR    R15,R15
DSNOUT3  EQU   *
         L     R13,SAVEE+4
         RETURN (14,12),RC=(15)
DSNOUT4  LA    R15,4
         B     DSNOUT3
DSNOUT12 LA    R15,12
         B     DSNOUT3
**********************************************************************
*              KONSTANTEN
**********************************************************************
WORK     EQU   X'08'
WORKL    EQU   B'11110111'
MSG1     DC    C'PARSE-ERROR,RETURNCODE R15=DEC''00'''
DAIRMSG  DC    C'DYNAMIC ALLOCATION ERROR , RETURNCODE R15=DEC'''
DMSGL1   EQU   *-DAIRMSG
         DC    C'00'',DDNAME='
DMSGL2   EQU   *-DAIRMSG
         DC    C'SYSPRINT,DAIRCODE=HEX'''
DMSGL3   EQU   *-DAIRMSG
         DC    C'1234'''
DMSGL4   EQU   *-DAIRMSG
*
COMPMSG  DC    C'FORTRAN-'
LCOMP1   EQU   *-COMPMSG
         DC    C'G-COMPILER ENTERED'
LCOMP2   EQU   *-COMPMSG
*
LIST0    DC    C'.'
LIST1    DC    C'FORT'
LIST2    DC    C'.LIST'
LISTL    EQU   L'LIST1+L'LIST2
LIST3    DC    C'FORT'
LIST4    DC    C'.OBJ'
*
*        KONSTANTER TEIL DAIR04  -  SEARCH DSE + CATLG FOR DSN
DAIR04   DC    X'0004'
         DC    14X'00'
DAIR04L  EQU   *-DAIR04
*
*        KONSTANTER TEIL DAIR08
DAIR08   DC    X'0008'
         DC    XL10'00'     ERROR-FLAGS + A(DSNAMEPUFFER)
         DC    CL24' '      DDNAME,UNIT,VOLSER
         DC    XL16'00'     SPACE ANGABEN
         DC    CL16' '      MEMBERNAME + PASSWORD
         DC    XL8'00'      DISP,FLAG-BYTES
DAIR08L  EQU   *-DAIR08
*
*        KONSTANTER TEIL DAIR1C -  ALLOCATE TERMINAL
DAIR1C   DC    X'001C'
         DC    XL6'00'       ERROR FIELDS + CONTR.-BYTES
         DC    CL8' '        DDNAME
DAIR1CL  EQU   *-DAIR1C
*
*        KONSTANTER TEIL DAIR30 - ALLOCATE SYSOUT-DATEI
DAIR30   DC    X'0030'
         DC    XL6'00'       ERROR FIELDS
         DC    A(0)          A(DSNBUFFER)
         DC    CL8' '        DDNAME
         DC    CL16' '       UNIT + VOLSER
         DC    A(0),A(200),A(200)  BLKLAENGE + SPACE
         DC    CL8' '        SYSOUT-PROGRAM
         DC    CL4' '              FORMS - NR
         DC    C' A'         SYSOUT-CLASS
         DC    X'0050'       RESERVED + CTL-BYTE =BLOCKLAENGE + RLSE
DAIR30L  EQU   *-DAIR30
*
DUMMYDSP DC    X'04040404'  DUMMY,DISP=(NEW,DELETE,DELETE)
SPCLIN   DC    F'800',F'100',F'100'
**********************************************************************
CDECK    DC    AL1(6),C'NODECK,'
CLOAD    DC    AL1(4),C'LOAD,'
CSIZE    DC    AL1(4),C'SIZE='
C128K    DC    AL1(6),C'131072,'
CLNELNGT DC    AL1(7),C'LINELNG='
COPT     DC    AL1(3),C'OPT='
COPT2    DC    AL1(5),C'OPT=2,'
CLNECNT  DC    AL1(7),C'LINECNT='
CNAME    DC    AL1(4),C'NAME='
CLIST    DC    AL1(4),C'LIST,'
CSOURCE  DC    AL1(6),C'SOURCE,'
CMAP     DC    AL1(3),C'MAP,'
CBCD     DC    AL1(3),C'BCD,'
CEBCDIC  DC    AL1(6),C'EBCDIC,'
CID      DC    AL1(2),C'ID,'
CEDIT    DC    AL1(4),C'EDIT,'
CXREF    DC    AL1(4),C'XREF,'
CSPACE   DC    AL1(5),C'SPACE,'
CPRFRM   DC    AL1(5),C'PRFRM,'
CADJUST  DC    AL1(6),C'ADJUST,'
         PRINT  NOGEN
**********************************************************************
PARMTAB  IKJPARM
*
INPT     IKJPOSIT DSTHING,PROMPT='INPUT-DATA-SET NAME OR *',           *
               HELP=('ENTER NAME OF THE FORTRAN-SOURCE DATASET TO BE CO*
               MPILED'),VALIDCK=DSNIN
*
TST      IKJKEYWD
         IKJNAME 'TST'
*
LEVEL    IKJKEYWD DEFAULT='LEVEL'
         IKJNAME  'LEVEL',SUBFLD=SLEVEL
PRINT    IKJKEYWD
         IKJNAME  'PRINT',SUBFLD=SPRT
         IKJNAME  'SYSPRINT',SUBFLD=SPRINT
         IKJNAME  'NOPRINT'
LOAD     IKJKEYWD
         IKJNAME  'LOAD',SUBFLD=SLOAD
         IKJNAME  'NOLOAD'
SIZE     IKJKEYWD
         IKJNAME  'SIZE',SUBFLD=SZE
LINELNG  IKJKEYWD DEFAULT='LINELNG'
         IKJNAME  'LINELNG',SUBFLD=LNELNG
OPT      IKJKEYWD DEFAULT='OPT'
         IKJNAME  'OPT',SUBFLD=SOPT
LINECNT  IKJKEYWD DEFAULT='LINECNT'
         IKJNAME  'LINECNT',SUBFLD=LNECNT
NAME    IKJKEYWD
        IKJNAME   'NAME',SUBFLD=NME
*
LIST    IKJKEYWD
        IKJNAME   'LIST'
        IKJNAME   'NOLIST'
*
SOURCE  IKJKEYWD
        IKJNAME   'SOURCE'
        IKJNAME   'NOSOURCE'
*
MAP     IKJKEYWD
        IKJNAME   'MAP'
        IKJNAME   'NOMAP'
*
BCD     IKJKEYWD
        IKJNAME   'BCD'
        IKJNAME   'EBCDIC'
*
ID      IKJKEYWD
        IKJNAME   'ID'
        IKJNAME   'NOID'
*
*        FORTRAN H ONLY
*
EDIT     IKJKEYWD
         IKJNAME  'EDIT'
         IKJNAME  'NOEDIT'
*
XREF     IKJKEYWD
         IKJNAME  'XREF'
         IKJNAME  'NOXREF'
*
*        FORTRAN E ONLY
*
SPACE    IKJKEYWD
         IKJNAME  'SPACE'
         IKJNAME  'PRFRM'
*
ADJUST   IKJKEYWD
         IKJNAME  'ADJUST'
         IKJNAME  'NOADJUST'
*
*        SUBFIELDS
*
SLEVEL   IKJSUBF
LEVL     IKJKEYWD DEFAULT='G'
         IKJNAME  'E'
         IKJNAME  'G'
         IKJNAME  'H'
*
*                                    PRINT/PRINT(*)/PRINT(DSN)
SPRT     IKJSUBF
SPRT1    IKJPOSIT DSTHING,VALIDCK=DSNPRINT
*
*                                    SYSPRINT(SYSOUT-CLASS)
SPRINT   IKJSUBF
SPRINT1  IKJIDENT 'SYSOUT-CLASS',MAXLNTH=1,FIRST=NONATNUM,DEFAULT='A'
*
*                                    LOAD(DSN)
SLOAD    IKJSUBF
SLOAD1   IKJPOSIT DSNAME,VALIDCK=DSNOUT
*
*                                    SIZE=60000   E+H ONLY
SZE      IKJSUBF
SZE1     IKJIDENT 'SIZE-VALUE',FIRST=NUMERIC,OTHER=NUMERIC,MAXLNTH=8
*
*                                    LINELENGTH=133  E ONLY
LNELNG   IKJSUBF
LNELNG1  IKJIDENT 'LINELENGTH',FIRST=NUMERIC,OTHER=NUMERIC,            *
               DEFAULT='133',MAXLNTH=8
*
SOPT     IKJSUBF
SOPT1    IKJIDENT 'OPT-VALUE',FIRST=NUMERIC,MAXLNTH=1,DEFAULT='0',     *
               VALIDCK=OPTCHK,HELP=('ENTER THE OPT-VALUE FOR THE FORTRA*
               N-H-COMPILER,ONLY ''0'',''1'' OR ''2'' IS VALID')
*
*                                    LINECNT=50
LNECNT   IKJSUBF
LNECNT1  IKJIDENT 'LINECOUNT',FIRST=NUMERIC,OTHER=NUMERIC,             *
               DEFAULT='50',MAXLNTH=6
*
NME      IKJSUBF
NME1     IKJIDENT 'MAIN-NAME',MAXLNTH=6,OTHER=ALPHANUM,DEFAULT='MAIN'
*
         IKJENDP
         PRINT  GEN
**********************************************************************
COM      DSECT COM-AREA FORT - MODUL
**********************************************************************
         DS    18F                 SAVE AREA FORT-MODUL
PGMN     DS    D                   COMPILERNAME
ACPPL    DS    F                   A(CPPL)
RETCD    DS    H                   RETURNCODE
FLAG     DS    H                   FLAG-BYTES
FLAG1    EQU   FLAG+1
PARM     DS    2F                  PARAMETERLISTE COMPILER
PARML    DS    H
PARMA    DS    CL116               PARM-ANGABEN
DDNL     DS    H
SYSLIN   DS    CL8                 ALTERNATIVE DDNAMEN
         DS    CL24
SYSIN    DS    CL8
SYSPRINT DS    CL8
SYSPUNCH DS    CL8
SYSUT1   DS    CL8
SYSUT2   DS    CL8
LDDN     EQU   *-SYSLIN
APGM     DS    F                   PARAMETERLISTE LINK-MAKRO
ADCB     DS    F
ACOM     DS    F                   ADR. COM1-AREA
ADAIR    DS    F                   A(IKJEFD00)
XCLEN    EQU   *-RETCD
**********************************************************************
COM1     DSECT
SAVE     DS    18F                 SAVEAREA GFORT001
SAVEE    DS    18F                 SAVEAREA DAIR-EXIT-ROUTINEN
PPLUPT   DS    F                   PARSE-PARAMETERLISTE
PPLECT   DS    F
PPLECBA  DS    F
PPLPCL   DS    F
PPLANSA  DS    F
PPLCBUF  DS    F
PPLUWA   DS    F
*
PPLANS   DS    F
PPLECB   DS    F
*
ABASE    DS    F                   BASISREGISTER FUER PARSE-EXIT-ROUT.
*
DA08CD   DS    XL2
DA08FLG  DS    XL2
DA08DARC DS    XL2
DA08CTRC DS    XL2
DA08PDSN DS    XL4
DA08DDN  DS    XL8
DA08UNIT DS    XL8
DA08SER  DS    XL8
DA08BLK  DS    XL4
DA08PQTY DS    XL4
DA08SQTY DS    XL4
DA08DQTY DS    XL4
DA08MNM  DS    XL8
DA08PSWD DS    XL8
DA08DSP1 DS    XL1
DA08DSP2 DS    XL1
DA08DSP3 DS    XL1
DA08CTL  DS    XL1
         DS    XL3
DA08DSO  DS    XL1
*
*        DAIR PARAMETER LIST
*
DAPLUPT  DS    A
DAPLECT  DS    A
DAPLECBA DS    A
DAPLPSCB DS    A
DAPLDAPB DS    A
*
DAPLECB  DS    A
*
DSNL     DS    H
DSNA     DS    CL44
*
SYSPRBLK DS    H
*
WORK1    DS    D                   WORKAREAS
WORK2    DS    D
*
TPUTL    DS    H                   AUFBEREITUNGSAREA TPUT-AUSGABE
TPUTA    DS    CL118
*
DA04CD   DS    H                    SEARCH DSE + CATLG FOR DSN
DA04FLG  DS    H
         DS    H
DA04CTRC DS    H
DA04PDSN DS    A
DA04CTL  DS    XL1
         DS    XL2
DA04DSO  DS    XL1
*
COM1LNG  EQU   *-COM1
*
         ORG   DA08CD
DA1CCD   DS    H             ALLOCATE  TERMINAL
DA1CFLG  DS    H
DA1CDARC DS    H
         DS    XL1
DA1CCTL  DS    XL1
DA1CDDN  DS    CL8
*
         ORG   DA08CD
DA30CD   DS    H
DA30FLG  DS    H
DA30DARC DS    H
         DS    H
DA30PDSN DS    A
DA30DDN  DS    CL8
DA30UNIT DS    CL8
DA30SER  DS    CL8
DA30BLK  DS    A
DA30PQTY DS    A
DA30SQTY DS    A
DA30PGNM DS    CL8
DA30FORM DS    CL4
DA30OCLS DS    CL2
         DS    XL1
DA30CTL  DS    XL1
         END


FORT     TITLE 'FORT - TSO-PROMPTER FUER FORTAN E/G/H-COMPILER *** FREE*
                UND RETURN'
GFORT002 CSECT
*
*        REENTRANT CODING
*        R13 = BASISREGISTER COM2-DSECT
*        R12 = BASISREGISTER PROGRAMM
*        R11 = BASISREGISTER COM-DSECT
*
*        BELEGUNG FLAG-BYTES
*        X'80'    FORTRAN-E-COMPILER
*        X'40'    FORTRAN-G-COMPILER
*        X'20'    FORTRAN-H-COMPILER
*        X'10'    SYSIN=TERMINAL (*)
*        X'08'    WORK-BIT
*        X'04'    SYSPRINT IST SYSOUT,CLASS IM 1.BYTE VON ACOM
*        X'02'    SYSPRINT NICHT AUF TERMINAL,TPUT AUSGEBEN
*
*        BELEGUNG FLAG1-BYTE:
*        X'80'    SYSPRINT=DUMMY
*        X'40'    SOURCE-PROGRAMM-LISTEN
*        X'20'    MAP,XREF ALS DEFAULT
*        X'10'    SYSLIN=DUMMY
**********************************************************************
*        SAVEAREAS + BASISREGISTER
**********************************************************************
         REGISTER
         SAVE  (14,12),,*
         LR    R12,R15
         LR    R11,R1
         USING GFORT002,R12
         USING COM,R11
         LA    R0,COM2LNG
         GETMAIN R,LV=(0)
         ST    R13,4(R1)
         ST    R1,8(R13)
         LR    R13,R1
         USING COM2,R13
**********************************************************************
*        COMPILER-TPUT-MESSAGES AUSGEBEN
**********************************************************************
         TM    FLAG,X'02'
         BZ    FREE
         LH    R15,RETCD
         B     COMPMSG(R15)
COMPMSG  B     RET00
         B     RET04
         B     RET08
         B     RET12
         B     RET16
         B     RET20
RET00    EQU   *
         LA    R0,L'MSG00
         LA    R1,MSG00
         B     TPUTMSG
RET04    EQU   *
         LA    R0,L'MSG04
         LA    R1,MSG04
         B     TPUTMSG
RET08    EQU   *
         LA    R0,L'MSG08
         LA    R1,MSG08
         B     TPUTMSG
RET12    EQU   *
         LA    R0,L'MSG12
         LA    R1,MSG12
         B     TPUTMSG
RET16    EQU   *
         LA    R0,L'MSG16
         LA    R1,MSG16
TPUTMSG  EQU   *
         TPUT  (1),(0),R
RET20    EQU   *
**********************************************************************
**********************************************************************
*        FREE ALLOCATED DATASETS
**********************************************************************
FREE     EQU   *
         LA    R1,ECB              DAIR-PARM-LISTE FUELLEN
         ST    R1,DAPLECB
         L     R1,ACPPL
         LM    R15,R1,4(R1)
         ST    R15,DAPLUPT
         ST    R0,DAPLPSCB
         ST    R1,DAPLECT
         LA    R1,DA18CD
         ST    R1,DAPLDAPB
*                                  FREE SYSIN
         CLI   SYSIN,X'00'
         BE    FREE10
         MVC   DA18CD(DAIR18L),DAIR18
         MVC   DA18DDN,SYSIN
         TM    FLAG,X'10'          SYSIN=TERMINAL
         BO    FREE5
         MVI   DA18DSP2,X'08'      DISP=KEEP
FREE5    EQU   *
         LA    R8,CSYSIN
         BAL   R9,FREEUP
FREE10   EQU   *
********************************** FREE SYSLIN ***********************
         CLI   SYSLIN,X'00'
         BE    FREE20
         MVC   DA18CD(DAIR18L),DAIR18
         MVC   DA18DDN,SYSLIN
         TM    FLAG1,X'10'          SYSLIN=DUMMY
         BZ    FREE12
         MVI   DA18DSP2,X'04'       DISP=DELETE
         B     FREE14
FREE12   EQU   *
         MVI   DA18DSP2,X'08'      DISP=KEEP
FREE14   EQU   *
         LA    R8,CSYSLIN
         BAL   R9,FREEUP
FREE20   EQU   *
********************************** FREE SYSPRINT *********************
         CLI   SYSPRINT,X'00'
         BE    FREE30
         MVC   DA18CD(DAIR18L),DAIR18
         MVC   DA18DDN,SYSPRINT
         TM    FLAG,X'04'          SYSOUT
         BZ    FREE22
         MVC   DA18SCLS(1),ACOM    SYSOUT-CLASS
         B     FREE28
FREE22   EQU   *
         TM    FLAG1,X'80'         SYSPRINT=DUMMY
         BZ    FREE24
         MVI   DA18DSP2,X'04'      DISP=DELETE
         B     FREE28
FREE24   EQU   *
         TM    FLAG,X'02'          SYSPRINT AUF  TERMINAL
         BZ    FREE28
         MVI   DA18DSP2,X'08'      DISP=KEEP
FREE28   EQU   *
         LA    R8,CSYSPRI
         BAL   R9,FREEUP
FREE30   EQU   *
********************************** FREE SYSUT1 ***********************
         CLI   SYSUT1,X'00'
         BE    FREE40
         MVC   DA18CD(DAIR18L),DAIR18
         MVC   DA18DDN,SYSUT1
         MVI   DA18DSP2,X'04'      DISP=DELETE
         LA    R8,CSYSUT1
         BAL   R9,FREEUP
FREE40   EQU   *
********************************** FREE SYSUT2 ***********************
         CLI   SYSUT2,X'00'
         BE    FREE50
         MVC   DA18CD(DAIR18L),DAIR18
         MVC   DA18DDN,SYSUT2
         MVI   DA18DSP2,X'04'      DISP=DELETE
         LA    R8,CSYSUT2
         BAL   R9,FREEUP
FREE50   EQU   *
**********************************************************************
*        RELEASE IKJEFD00
**********************************************************************
         DELETE EP=IKJEFD00
*        RETURN TO FORT
**********************************************************************
         LR    R1,R13
         L     R13,SAVE+4
         LA    R0,COM2LNG
         FREEMAIN R,LV=(0),A=(1)
         RETURN (14,12)
**********************************************************************
FREEUP   EQU   *   FREE DDNAME,DAIR AUFRUFEN,EVTL ERRORMSG AUSG. RET=R9
**********************************************************************
         XC    ECB,ECB             CLEAR ECB
         LA    R1,DAPLUPT          PARMREG. LADEN
         L     R15,ADAIR
         BALR  R14,R15             CALL IKJDAIR
         LTR   R15,R15
         BZR   R9                  KEIN FEHLER / RETURN
         MVC   MSGAREA(LMSG),FREEMSG
         CVD   R15,WORK1           R15 IN MSG EINSETZEN
         UNPK  WORK2,WORK1
         OI    WORK2+7,X'F0'       'C' IN 'F' UMWANDELN
         MVC   MSGAREA+LMSG1(2),WORK2+6
         MVC   MSGAREA+LMSG2(8),0(R8)     DDNAME IN MSG.
         UNPK  WORK2(5),DA18DARC(3) DAIRCODE EINSETZEN
         TR    WORK2(4),TRTAB-240
         MVC   MSGAREA+LMSG3(4),WORK2
         LA    R1,MSGAREA          ERRORMSG AUSGEBEN
         LA    R0,LMSG
         TPUT  (1),(0)
         BR    R9
**********************************************************************
*        KONSTANTEN
**********************************************************************
*
*        KONSTANTER TEIL DAIR18  -  FREE DATASET
DAIR18   DC    X'0018'
         DC    XL18'00'   ERROR-FLAGS + A(DSNPUFFER) + DDNAME
         DC    CL8' '     MEMBERNAME
         DC    CL2' '     SYSOUT-CLASS
         DC    XL2'00'    DISP+FLAG-BYTE
         DC    CL8' '     JOBNAME FUER SYSOUT
DAIR18L  EQU   *-DAIR18
*
*        DDNAMEN FUER ERRORMSG
*
CSYSLIN  DC    CL8'SYSLIN'
CSYSIN   DC    CL8'SYSIN'
CSYSPRI  DC    CL8'SYSPRINT'
CSYSUT1  DC    CL8'SYSUT1'
CSYSUT2  DC    CL8'SYSUT2'
*
*        ERRORMSG BEI FREE-DAIR-ERROR
*
FREEMSG  DC    C'DYNAMIC FREE ERROR,RETURNCODE R15=DEC'''
LMSG1    EQU   *-FREEMSG
         DC    C'00'',DDNAME='
LMSG2    EQU   *-FREEMSG
         DC    C'SYSPRINT,DAIRCODE=HEX'''
LMSG3    EQU   *-FREEMSG
         DC    C'1234'''
LMSG     EQU   *-FREEMSG
*
*        TRANSLATE-TABELLE FUER HEX-CONVERTIERUNG
*
TRTAB    DC    C'0123456789ABCDEF'
*
*
MSG00    DC    C'NO ERRORS OR WARNINGS DETECTED'
MSG04    DC    C'ONLY WARNINGS DETECTED'
MSG08    DC    C'ERRORS DETECTED'
MSG12    DC    C'SEVERE ERRORS DETECTED'
MSG16    DC    C'UNRECOVERABLE ERRORS OCCURED'
**********************************************************************
COM      DSECT COM-AREA FORT - MODUL
**********************************************************************
         DS    18F                 SAVE AREA FORT-MODUL
PGMN     DS    D                   COMPILERNAME
ACPPL    DS    F                   A(CPPL)
RETCD    DS    H                   RETURNCODE
FLAG     DS    H                   FLAG-BYTES
FLAG1    EQU   FLAG+1
PARM     DS    2F                  PARAMETERLISTE COMPILER
PARML    DS    H
PARMA    DS    CL116               PARM-ANGABEN
DDNL     DS    H
SYSLIN   DS    CL8                 ALTERNATIVE DDNAMEN
         DS    CL24
SYSIN    DS    CL8
SYSPRINT DS    CL8
SYSPUNCH DS    CL8
SYSUT1   DS    CL8
SYSUT2   DS    CL8
APGM     DS    F                   PARAMETERLISTE LINK-MAKRO
ADCB     DS    F
ACOM     DS    F                   ADR. COM1-AREA
ADAIR    DS    F                   A(IKJEFD00)
COML     EQU   *-COM
**********************************************************************
COM2     DSECT
**********************************************************************
SAVE     DS    18F    SAVEAREA FUER GASM002
*
*        DAIR PARAMETER LIST  (DAPL)
*
DAPLUPT  DS    A
DAPLECT  DS    A
DAPLECB  DS    A
DAPLPSCB DS    A
DAPLDAPB DS    A
*
ECB      DS    F
*
*        DAIR PARAMETER BLOCK (DAPB)  FUER X'0018' (FREE A DATA SET)
*
DA18CD   DS    XL2                ENTRY-CODE X'0018'
DA18FLG  DS    XL2                FLAG-BYTES
DA18DARC DS    XL2                DYNAMIC ALLOCATION ERROR CODE
DA18CTRC DS    XL2                CATALOG MANAGEMENT ERROR CODE
DA18PDSN DS    A                  A(DSNAMEPUFFER)
DA18DDN  DS    CL8                DDNAME TO BE FREED
DA18MNM  DS    CL8                MEMBERNAME
DA18SCLS DS    CL2                SYSOUT-CLASS
DA18DSP2 DS    XL1                DISP-BYTE NORMAL-END
DA18CTL  DS    XL1                FLAG-BYTE (PREFIX USERID USW)
DA18JBNM DS    CL8
*
*        PUFFER FUER ERRORMSG
*
WORK1    DS    D                   WORKAREAS
WORK2    DS    D                   FUER KONVERTIERUNG
*
MSGAREA  DS    CL(LMSG)            AREA FUER MSG
COM2LNG  EQU   *-COM2
         END
