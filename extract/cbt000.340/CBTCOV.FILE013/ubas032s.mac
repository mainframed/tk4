RZ167    CSECT
         REG
         XSAVE R12,SVA,TABMNG01
         SPACE 2
         OPEN  (SYSUT1,,SYSOUT,(OUTPUT))         OPEN FOR CARD,PGMLIB  *
                                                 AND ASSEMBLER CARDS.
         LA    R1,SYSUT1
         TM    DCBOFLGS-IHADCB(R1),X'10'
         BO    TSTUT2
         BAL   R9,ENDINIT
TSTUT2   EQU   *
         LA    R1,SYSOUT
         TM    DCBOFLGS-IHADCB(R1),X'10'
         BO    ORIGIN
         LA    R2,OPENERR
         B     ABEND
         EJECT
ORIGIN   EQU   *
         BAL   R9,MYLOAD               LOAD DFSISMB
         L     R3,STA
         PUT   SYSOUT,TABSTART
         PUT   SYSOUT,=CL80'         PRINT NOGEN'
         LA    R3,SMBNMDSP(,R3)        POINT TO SMB-NAME
GETCD    EQU   *
         GET   SYSUT1,CARD
         CLI   CARD+77,C'B'
         BNE   COMP
         LH    R1,COMPLEN
         EX    R1,CLC
         BNL   COMP
MVBASIC  EQU   *
         MVC   BASIC,CARD
         MVC   COMPLEN,=XL2'7'
         LH    R1,CARD+78
         X     R1,CLEAR
         BZ    GETCD                   ZERO?
         X     R1,CLEAR1
         BCTR  R1,R0
         STH   R1,COMPLEN
         B     GETCD
         SPACE 2
DEFCOMP  EQU   *
         LH    R1,COMPLEN
         EX    R1,CLC                  CARD-NAME : SMB-NAME
         BL    TSTBASIC
         BH    NOACC
         LA    R1,BASIC
ACCT     EQU   *
         CLI   9(R1),C'('
         BNE   NOACC
         MVC   ACCINFO,9(R1)
         MVI   KOMMA,C','
NOACC    EQU   *
         MVC   MSGCL,SMBCL(R3)
         TR    MSGCL,TRCLASS
         MVC   TRANCD,0(R3)
         LA    R3,SMBLEN(,R3)          POINT TO NEXT SMB-NAME
         BAL   R9,PUT
         B     COMP
         SPACE
COMP     EQU   *
         CLC   CARD(8),0(R3)
         BL    TSTBASIC
         BH    DEFCOMP
         LA    R1,CARD
         B     ACCT
         SPACE
ENDCARD  EQU   *
         CLOSE SYSUT1
         BAL   R9,ENDINIT
         C     R3,STO
         BNL   ENDOUT
         B     COMP
         SPACE 3
ENDINIT  EQU   *
         MVC   CARD(8),=8X'FF'
         MVC   GETCD(2),=X'0700'       × DON'T READ
         MVC   GETCD+2(NOPLEN),GETCD   × ANY CARD, FURTHERMORE
         BR    R9
         SPACE
TSTBASIC EQU   *
         CLI   CARD+77,C'B'
         BNE   GETCD
         B     MVBASIC
         SPACE 3
NOPLEN   EQU   DEFCOMP-GETCD-2
CLC      CLC   BASIC(0),0(R3)
         EJECT
PUT      EQU   *
         PUT   SYSOUT,ASSCARD
         AP    ENCTR,=P'1'
         MVI   MSGCL,C'X'
         MVI   KOMMA,C' '
         MVC   ACCINFO(59),KOMMA
         C     R3,STO
         BLR   R9
         SPACE 2
ENDOUT   EQU   *
         LA    R11,6
         LA    R2,MAN
         UNPK  ENNO,ENCTR
         OI    ENNO+2,X'F0'
         SPACE
PUT1     EQU   *
         PUT   SYSOUT,(R2)
         LA    R2,80(,R2)
         BCT   R11,PUT1
         SPACE
         CLOSE SYSOUT
         LINK  EP=IEUASM,PARAM=(DUMMY,DD),VL=1
         LA    R2,1(,R15)
         LTR   R15,R15
         BNZ   ABEND
         MVC   SYSLIB1,DD1
         MVC   DD1,SYSPUNCH
         LINK  EP=IEWL,PARAM=(DUMMY,DD),VL=1
         LA    R2,2(,R15)
         LTR   R15,R15
         BNZ   ABEND
         XRETURN 0
         SPACE 3
ABEND    EQU   *
         LA    R2,1000(,R2)
         ABEND (R2),DUMP
         EJECT
MYLOAD   EQU   *
         SPACE
         CALL  ESDSEEK,(SYSLIB,TAB)
         SPACE
         LTR   R15,R15
         BZ    NORMAL
         LA    R2,BADESDRC
         B     ABEND
         SPACE 2
NORMAL   EQU   *
         XC    STA(1),STA
         LA    R1,SYSLIB
         LH    R5,DCBBLKSI-IHADCB(R1)
         L     R6,STO
         LA    R6,0(,R6)
         AR    R5,R5                   ×
         AR    R6,R5                   ×
         CR    R5,R6                   > SIZE OF GETMAIN =
         BNL   GETM                    > MAX(CSECTSIZE,BLKSIZE)+BLKSIZE
         LR    R5,R6                   ×
         SPACE
GETM     EQU   *
         GETMAIN R,LV=(R5)
         LR    R10,R1                  START OF GETMAIN AREA
         SPACE
READ     EQU   *
         READ  DECB,SF,SYSLIB,(R10),'S'
         CHECK DECB
         TM    OPTION,CNTL             CONTROL RECORD PRECEDED
*                                      THIS BLOCK?
         BO    DATA                    YES.SO THIS IS A TEXT BLOCK.
         TM    0(R10),1                IF NOT, IS IT
*                                      A CONTROL RECORD, NOW?
         BZ    READ                    NO.IGNORE THE WHOLE RECORD.
         LA    R3,16(R10)
         OI    OPTION,CNTL
         TM    0(R10),2                RLD RECORD,TOO?
         BZ    COMPID                  NO.
         LH    R4,6(R10)               LENGTH OF RLD DATA
         LA    R3,0(R4,R3)
COMPID   EQU   *
* R3 POINTS TO CONTROL INFORMATION
         CLC   1(1,R3),STO             ID OF DFSISMB ?
         BNE   READ                    DON'T ACCEPT THE FOLLOWING BLOCK
         SPACE
ACCEPT   EQU   *
         L     R7,12(R10)              LENGTH OF FOLLOWING TEXT BLOCK
         LA    R7,0(,R7)                                   (FROM CCW)
         L     R6,8(R10)               ADDRESS OF FOLLOWING TEXT BLOCK
         LA    R1,0(R6,R7)             END ADDRESS
         TM    OPTION,START            ×DFSISMB
         BO    SET                     ×ALREADY STARTED?
         CLC   9(3,R10),STA+1          × DFSISMB
         BE    SETSTA                  × STARTING
         C     R1,STA                  × WITHIN
         BNH   READ                    × THIS BLOCK ?
         OI    OPTION,MOV
         S     R1,STA                  LENGTH OF DFSISMB--PORTION
         SR    R7,R1                   LENGTH OF UNIMPORTANT PORTION
         LA    R6,0(R7,R10)            ×
         LR    R7,R1                   > SET REGS FOR MVCL
         LR    R11,R1                  ×
         SPACE
SETSTA   EQU   *
         ST    R10,STA                 ABS. ADDRESS OF DFSISMB
         OI    OPTION,START            INDICATE 'DFSISMB               *
                                                          LOAD STARTED'
         L     R5,STO                  LENGTH OF DFSISMB
         LA    R5,0(R10,R5)            END ADDRESS OF DFSISMB
         IC    R1,STO
         ST    R5,STO
         STC   R1,STO
SET      EQU   *
         OI    OPTION,ACC
         B     READ
         SPACE
DATA     EQU   *
         NI    OPTION,255-CNTL
         TM    OPTION,ACC              REQUIRED TEXT BLOCK?
         BZ    READ                    NO.
         TM    OPTION,MOV
         BZ    NOMO
         MVCL  R10,R6
NOMO     EQU   *
         AR    R10,R7                  INCREASE POSITION FOR NEXT READ
         ST    R10,CWORD
         CLC   CWORD+1(3),STO+1        END OF DFSISMB REACHED ?
         BL    READ
         NI    OPTION,INIT+UPDTE+SMB+CNT
         XC    STO(1),STO
         CLOSE SYSLIB
         BR    R9
         EJECT
* DEFINITIONS
*
*
CARD     DC    CL80' '
BASIC    DC    CL80' '
         SPACE 2
ASSCARD  DS    0CL80
TRANCD   DC    CL8' '                  TRANSACTION CODE
         DC    CL1' '
         DC    CL8'IMSTDEF'
REG      DC    CL3'000'
         DC    C','
MSGCL    DC    CL1'X'
KOMMA    DC    C' '
ACCINFO  DC    CL49' '
         DC    CL10' '
         SPACE 2
TABSTART DC    CL80'TRANTAB  DC    F''0,32'''
MAN      DC    CL80'END      EQU   *'
         DC    CL15'         ORG'
ORG      DC    CL65'TRANTAB'
         DC    CL80'         DC    A(END)'
         DC    CL17'         DC    H'''
ENNO     DC    CL3'000'
         DC    CL60''''
         DC    CL80'         ORG   END'
         DC    CL80'         END'
         SPACE 2
TRCLASS  DC    C'*'                    MSG-CLASS '00' NOT EXISTING
         DC    C'ABCDEFGHI'
         DC    C'JKLMNOPQR'
         DC    C'STUVWXYZ'
         SPACE 2
D        DS    D
EPLOC    DC    CL8' '
F        DC    F'0'
CWORD    DS    F
CLEAR    DC    XL4'4040'
CLEAR1   DC    XL4'B0'
COMPLEN  DC    H'7'
         SPACE 2
ENCTR    DC    PL2'0'
         SPACE 2
         CNOP  2,4
DUMMY    DC    H'0'
         CNOP  2,4
DD       DC    AL2(DDN-DD1)
DD1      DC    2XL8'0'
         DC    CL8'SYSLMOD'
SYSLIB1  DC    CL8'SYSLIB'
         DC    CL8'SYSASSIN'
         DC    CL8'SYSPRINT'
SYSPUNCH DC    CL8'SYSPUNCH'
         DC    CL8'SYSUT1'
         DC    CL8'SYSUT2'
         DC    CL8'SYSUT3'
         DC    3XL8'0'
DDN      EQU *
         EJECT
         CNOP  2,4
TAB      DC    AL2(18)          TAB ENTRY AFTER RETURN FROM ESDSEEK:
         DC    CL8'DFSISMB'     ×        ×   ×      ×ESD×      ×
         DS    CL8              ×CSECT-NM×TYP× EPA  ×ID ×LENGTH×
*                               ×   8    × 1 ×  3   × 1 ×   3  ×
         SPACE
STA      EQU   TAB+10
STO      EQU   TAB+14
         SPACE 2
EXLST    DS    0F
         DC    X'87',AL3(JFCBAREA)
JFCBAREA DS    CL176
         EJECT
OPTION   DC    X'00'
*
SMB      EQU   16
CNT      EQU   32
INIT     EQU   64
UPDTE    EQU   128
* USED FOR LOAD:
CNTL     EQU   1
START    EQU   2
ACC      EQU   4
MOV      EQU   8
*
         SPACE 3
BADPARM  EQU   8
BADESDRC EQU   12
OPENERR  EQU   4
         SPACE
CNTLEN   EQU   X'2C'
SMBLEN   EQU   X'38'
SMBNMDSP EQU   X'18'
CNTNMDSP EQU   X'18'
SMBCL    EQU   X'0F'
         EJECT
SYSLIB   DCB   DDNAME=SYSLIBI,MACRF=(R),DSORG=PS,RECFM=U,EXLST=EXLST
         EJECT
SYSUT1   DCB   DDNAME=SYSIN,MACRF=GM,DSORG=PS,LRECL=80,RECFM=FB,       *
               EODAD=ENDCARD
         EJECT
SYSOUT   DCB   DDNAME=SYSASSIN,MACRF=PM,DSORG=PS,LRECL=80,RECFM=FB
         EJECT
         LTORG
         EJECT
         DCBD  DSORG=PS
         EJECT
         END
