         TITLE '  *** ZD100020 ***  '
         PRINT NOGEN
*
*        PGM-NAME    :  ZD100020
*        DATE        :  DEZ 1979
*
*  LAST MODIFICATION :  ........
*  REASON            :  NONE
*
*  LAST COMPILE      :  02.01.80
*  LAST LINK         :  02.01.80     LIB = SYS2.LINKLIB
*  LAST SAVE         :  ........
*
*
*  PGM-INFORMATION   :
*
*      DIESES PROGRAMM LOESCHT AUF EINEM DURCH PARM ANGEGEBENEN
*      DISK ALLE DATA SET'S DIE AELTER ALS N TAGE ALT SIND.
*      (N=2 DEFAULT)
*
*
*
*      DATA SET'S DIE NICHT GELOESCHT WERDEN DUERFEN, KOENNEN
*      GESCHUETZT WERDEN.
*
*     1. UEBER 'SYSUT1' KOENNEN DIESE DATA-SETS ANGEGEBEN WERDEN
*        (WENN KEIN SCHUTZ-DATA-SET VORHANDEN, KEIN SYSUT1-DD-STATEMENT
*         ANGEBEN. AUCH NICHT DUMMY)
*
*      - PRO DATA-SET EINE KARTE
*
*      - BEI GENERATION-FILES KANN ANSTELLE VON 'XXX.G00NNV00 '
*        AUCH 'XXX.? ' ANGEGEBEN WERDEN.
*
*      - RECORDS DIE AUF KOL 1 EINEN '*' HABEN WERDEN ALS KOMMENTAR-
*        KARTEN ANGESEHEN.
*
*      - DER ERSTE RECORD DES 'SYSUT1-FILES' KANN EINE DATUM-KARTE
*        SEIN.
*        Z.B.  DATUM=19791213 (JJJJMMTT)
*        IST DAS DATUM AELTER ALS ANZAHL GESCHUETZTE TAGE KOMMT DIE
*        MELDUNG '*** DISK-FILE UPDATEN' (RETURN-CODE = 8) UND ES
*        WIRD KEIN SCRATCH/UNCATLG DURCHGEFUEHRT.
*
*
*     2. UEBER 'SYSIN' KOENNEN LEVELS GESCHUETZT WERDEN
*        (Z.B.  //SYSIN   DD   *
*               SOURCE,COMTEN.,DATA     (MAX 10 LEVELS UND NUR EINE
*               /*                       INPUT-KARTE)
*
       EJECT
*
*      PARAMETER
*      +++++++++
*  Z.B.  PARM='D,ARWK01,NOSPFL,NOSYS' AUF ARWK01 WERDEN KEINE DATA-SETS
*                                     MIT XXX.SPFLOG.XXX GELOESCHT
*                                     UND KEINE TEMP.SYS-DATEIEN
*
*        PARM='D,ARWK01'              AUF ARWK01 WIRD ALLES GELOESCHT
*                                     WAS AELTER ALS 2 TAGE IST
*
*        PARM='D,ARWK01,NOSYS'       KEINE TEMP.SYS-DATEIEN GELOESCHT
*        PARM='D,ARWK01,NOSPFL'      KEINE SPFLOG-DATEIEN GELOESCHT
*
*        PARM='D,ARWK01,SYS'         NUR TEMP.SYS-DATEIEN LOESCHEN
*
*        PARM='D,..........'         D = WAS AELTER ALS 2 TAGE WIRD
*                                        GELOESCHT (D=DEFAULT =2 TAGE)
*                                    (D KANN EINEN WERT ZWISCHEN 0 - 9
*                                     HABEN.)
*
*
*   **** FORCE-OPTION ****
*
*        PARM='D,XXXXXX,FORCE,....'  IN DER REGEL WIRD AM MONTAG KEIN
*                                    SCRATCH/UNCATLG DURCHGEFUEHRT.
*                                    MIT DER FORCE-OPTION WIRD DIES JE-
*                                    DOCH AUFGEHOBEN.
*
*   **** TEST-OPTION ****
*
*        PARM='D,XXXXXX,TEST,.....'  WENN NACH DEM DISK-NAME TEST STEHT
*                                    WIRD KEIN SCRATCH/UNCATLG DURCHGE-
*                                    FUEHRT.
*             *** WENN DATUM (TAGE) KLEINER ODER GLEICH ANZ.SCHUTZ-TAGE
*                 (JAHRESWECHSEL) WIRD TEST OPTION EINGESCHALTET.
*
*                 BEISPIEL: 80002 (YYDDD) UND ANZ.SCHUTZ-TAGE = 2,
*                 WIRD AUTOMATISCH DIE TEST-OPTION EINGESCHALTET.
*                 (AUSSER 'FORCE'-OPTION IST EINGESCHALTET)
*
*
*    ***********************************************
*    *   PARM='D,ARWK01,FORCE,TEST,NOSPFL,NOSYS'   *
*    *         --MUSS--,-KANN VERTAUSCHT WERDEN-   *
*    ***********************************************
*
       EJECT
*
*
*    MELDUNGEN UND PROGRAMM-ABBRUCH
*    ------------------------------
*
*    MELDUNG                                             COND-CODE
*    -------                                             ---------
*
*  - 'ZD100020: WRONG PARAMETER'                               '04'
*
*
*  - 'ZD100020: MEHR ALS 1000 FILES'                           '08'
*              (WENN MEHR ALS 1000 FILES AUF DISK)
*
*  - 'ZD100020: DD-STATEMENT MISSING'                          '0C'
*              (DD-STATEMENT DES ZU BEHANDELNDEM DISK)
*
*  - 'ZD100020: DD-CARD AND PARM NOT EQUAL'                    '08'
*  - 'ZD100020: DD-CARD AND DISK-FILE NOT EQUAL'               '08'
*              (DISK-NAME VON PARM  /  VOL=SER= AUF DD-CARD
*               UND SCHUTZ-FILE 3.LEVEL MUESSEN GLEICH SEIN)
*
*  - 'ZD100020: DISK-FILE UPDATEN'                             '08'
*              (BEI DISK-FILE MIT 'DATE-OPTION' IST DAS DATUM
*               GROESSER ALS 'DATE-OPTION + GESCHUETZTE TAGE)
*
*
*
*    DD-STATEMENTS
*    -------------
*
*    //DISK     DD     DISK DER ZU BEHANDELN IST
*    //SYSPRINT DD     AKTION (SCRATCH/UNCATLG ODER WARNING)
*    //FILELOG  DD     LISTE DER GESCHUETZTEN FILES
*    //SYSUT1   DD     DATA-SET DER GESCHUETZTEN FILES
*    //SYSIN    DD     GESCHUETZTE LEVELS
*
*    BEISPIEL:  //S010     EXEC  PGM=ZD100020,
*               //         PARM='D,XXXXXX,TEST'
*               //DISK       DD  UNIT=3350,DISP=OLD,VOL=SER=XXXXXX
*               //SYSPRINT   DD  SYSOUT=A
*               //FILELOG    DD  SYSOUT=A
*               //SYSUT1     DD  DSN=DATA.ZD.XXXXXX.FILES,DISP=OLD
*               //SYSIN      DD  *
*               /*
*
***********************************************************************
****************  END PGM-INFORMATION  ********************************
***********************************************************************
*
         EJECT
ZD100020 INIT  BASIS=(2,4,9)
*
*********************************************************************
*                                                                   *
*        PARM HANDLING                                              *
*                                                                   *
*********************************************************************
*                                                                   *
         L     R1,0(R1)
         LH    R3,0(R1)
         BCTR  R3,R0
         STC   R3,MVC1+1
MVC1     MVC   PSTRING,2(R1)       PARM-STRING NACH PARM
*
*    *** ANZ. GESCHUETZTE TAGE ***
         CLI   PDAYK,C'D'          D = DEFAULT (2 TAGE)
         BE    GOVOLUME
         CLI   PDAYK,C'0'
         BL    WRONGP
         CLI   PDAYK,C'9'
         BH    WRONGP
         PACK  DAYKONST,PDAYK      ANZ. GESCHUETZTE TAGE
*
*    *** VOLUME ***
GOVOLUME EQU   *
         MVC   DISKID,PARM
         MVC   TDISK,PARM
         MVC   VOLSER(6),PARM
         MVC   VOLNAME,PARM
         MVC   DISKNAME,PARM
*
         CLC   PARM+6(1),=C' '
         BE    GOSYSIN
*
         LA    R3,PARM+7
         CLI   0(R3),C' '
         BE    GOSYSIN
*
         LA    R5,6
PARMLOOP EQU   *
         CLC   0(7,R3),=C'WARNING'
         BNE   GOFORCE
         MVI   WARNSW,C'1'
*
         LA    R3,7(R3)
         CLI   0(R3),C' '
         BE    GOSYSIN
         LA    R3,1(R3)
*
GOFORCE  CLC   0(5,R3),=C'FORCE'
         BNE   GOTEST
         MVI   FORCESW,C'1'
*
         LA    R3,5(R3)
         CLI   0(R3),C' '
         BE    GOSYSIN
         LA    R3,1(R3)
*
GOTEST   CLC   0(4,R3),=C'TEST'    TEST-RUN?  (KEIN SCRATCH/UNCATLG)
         BNE   NOTEST
         MVI   TESTSW,C'1'         WENN JA TESTSW = '1'
         MVC   MESSAGE0+35(13),=C'(TEST-OPTION)'
*
         LA    R3,4(R3)
         CLI   0(R3),C' '
         BE    GOSYSIN
         LA    R3,1(R3)
*
NOTEST   CLC   0(6,R3),=C'NOSPFL'  SPFLOG?       (KEIN SCRATCH AUF
         BNE   XSYS                               SPFLOG-FILES)
         MVI   SPFSW,C'1'          WENN JA SPFSW = '1'
*
         LA    R3,6(R3)
         CLI   0(R3),C' '
         BE    GOSYSIN
         LA    R3,1(R3)
*
XSYS     CLC   0(5,R3),=C'NOSYS'   NOSYS?  (WENN JA KEINE TEMP.FILES
         BNE   XSYSO                        LOESCHEN)
         MVI   SYSSW,C'1'          WENN JA SYSSW = '1'
*
         LA    R3,5(R3)
         CLI   0(R3),C' '
         BE    GOSYSIN
         LA    R3,1(R3)
*
XSYSO    CLC   0(3,R3),=C'SYS'     SYS?    (WENN JA NUR TEMP.FILES
         BNE   GOLOOP                       LOESCHEN)
         NI    SYSLAB1+1,X'0F'     WENN JA BRANCH NICHT ACTIV
         CLI   SYSSW,C'1'
         BE    WRONGP
*
         LA    R3,3(R3)
         CLI   0(R3),C' '
         BE    GOSYSIN
         LA    R3,1(R3)
*
GOLOOP   BCT   R5,PARMLOOP
         B     WRONGP
*
         EJECT
*********************************************************************
*                                                                   *
*        HANDLING GESCHUETZTE LEVELS  (10 LEVELS KOENNEN GESCHUETZT *
*                                      WERDEN UND MUESSEN ALLE AUF  *
*                                      1 INPUT KARTE MIT KOMMA GE-  *
*                                      TRENNT SEIN)                 *
*********************************************************************
*                                                                   *
GOSYSIN  OPEN  (SYSIN,INPUT)
         GET   SYSIN
         MVC   INCARD,0(R1)
         LA    R8,INCARD
LEVEL    EQU   *               INIT LEVEL-TABELLE
         LA    R10,10
         LA    R3,LEVELTAB
PLOOP    MVC   0(9,R3),KONST
         LA    R3,9(R3)
         BCT   R10,PLOOP
         LA    R3,LEVELTAB
PLOOP1   EQU   *
         LR    R12,R8
PLOOP2   CLI   0(R8),C' '
         BNE   PLOOP3
         NI    ENDLEVEL+1,X'0F'
         B     ENDP2
PLOOP3   CLI   0(R8),C','
         BE    ENDP2
         LA    R8,1(R8)
         B     PLOOP2
ENDP2    LR    R11,R8
         BCTR  R11,R0
         SR    R11,R12
         STC   R11,MVCX+1
MVCX     MVC   0(8,R3),0(R12)
         STC   R11,8(R3)
         LA    R3,9(R3)
         LA    R8,1(R8)
ENDLEVEL B     PLOOP1
ENDPLOOP EQU   *
         NI    LEVEL2+1,X'0F'
SYSINEND CLOSE (SYSIN)
         B     ENDPARM
*
*
WRONGP   WTO   '*** ZD100020: WRONG PARAMETER',ROUTCDE=11
         MVI   RETURNCD+3,X'04'
         B     EOJ
*
ENDPARM  EQU   *
         EJECT
*********************************************************************
*                                                                   *
*        VORBEREITUNG ZUM TABELLEN LADEN                            *
*                                                                   *
*********************************************************************
*                                                                   *
OPEN     OPEN  (SYSPRINT,OUTPUT)
         NI    DRUCK2+1,X'0F'
         TIME  DEC
         ST    R1,DATE
         ZAP   DATUM(4),DATE          TAGES-DATUM NACH DATUM
         ZAP   DATUM+4(4),DATE        TAGES-DATUM NACH DATUM +4
         SP    DATUM+4(4),=P'1'       TAGES-DATUM IN DATUM +4   MINUS 1
         CLI   FORCESW,C'1'
         BE    OKWEEK
*        WENN DATUM (TAGE) KLEINER ODER GLEICH ANZ.SCHUTZ TAGE
*        (JAHRESWECHSEL) WIRD TEST OPTION EINGESCHALTET.
         ZAP   ZWP2+1(1),DAYKONST
         CP    DATE+2(2),ZWP2
         BH    GOCALL
         MVI   TESTSW,C'1'
GOCALL   CALL  UZED15A,(DATUM,WOCHE) FUER BEIDE DATUMS WOCHEN-CNT
*                                     RECHNEN
         CP    WOCHE(2),WOCHE+2(2)    SIND DIE WOCHEN-CNTS BEIDER DATEN
*                                     GLEICH IST NICHT MONTAG
         BE    OKWEEK
         NI    MONLAB+1,X'0F'
         MVC   DSNM(42),=C'AM MONTAG WIRD KEIN SCRATCH DURCHGEFUEHRT.'
         MVI   RETURNCD+3,X'01'
         B     DRUCK2B
OKWEEK   SP    DATE,DAYKONST   (MINUS ANZ. GESCHUETZTE TAGE)
         ZAP   OSDATE1,DATE
         ZAP   DW,DATE+2(2)
         CVB   R3,DW
         STH   R3,HW2
         SRP   DATE,61,0
         ZAP   DW,DATE+2(2)
         CVB   R3,DW
         STH   R3,HW1
         LA    R5,TABELLE
         LA    R6,45
         L     R7,=A(TABELLE+1000*45)
         MVI   0(R5),C' '
         EJECT
*********************************************************************
*                                                                   *
*        TABELLE LADEN                                              *
*                                                                   *
*********************************************************************
*                                                                   *
         EXTRACT TIOTAREA,'S',FIELDS=TIOT
         L     R10,TIOTAREA
         LA    R10,24(,R10)
SUCH     EQU   *
         XR    R12,R12
         IC    R12,0(R10)
         LTR   R12,R12
         BZ    ENDE
         MVC   DDNAME,4(R10)
         AR    R10,R12
         CLC   DDNAME(6),=C'DISK  '
         BNE   SUCH
         MVC   VTOC+40(8),=C'DISK    '  DDNAME IM VTOC-DCB ERSETZEN
         RDJFCB (VTOC,(INPUT))
         MVI   JFCBAREA,X'04'
         MVC   JFCBAREA+1(43),JFCBAREA
         MVI   JFCBAREA+76,X'C0'
         MVC   JFCBVOLS,JFCBAREA+118
         CLC   VOLNAME,JFCBVOLS
         BE    GOTOENQ
         WTO   '*** ZD100020: DD-CARD AND PARM NOT EQUAL'
         MVI   RETURNCD+3,X'08'
         B     EOJ
GOTOENQ  EQU   *
         ENQ   (NAME1,VOLSER,E,,SYSTEM)
         OPEN  (VTOC,(INPUT)),TYPE=J
READ     READ  READDECB,SF,VTOC,DSCB,'S'
         CHECK  READDECB
         CLI   DATA1,X'F1'
         BNE   READ
         CLC   DSCB(21),DISKFILE
         BNE   SYSLAB1
         MVI   DSSW,C'1'          DISK-SWITCH = '1'
         B     READ
*
SYSLAB1  B     SYSLAB2            WENN BRANCH NICHT AKTIV, NUR TEMP-
         CLC   DSCB(3),=C'SYS'    FILES LOESCHEN
         BNE   READ
         CLC   DSCB+8(1),=C'.'
         BE    MOVE
         B     READ
*
SYSLAB2  CLI   SYSSW,C'1'
         BNE   GOSPFLOG
         CLC   DSCB(3),=C'SYS'     HANDELT ES SICH UM EINE TEMPOR%RE
         BNE   GOSPFLOG            SYSTEM DATEI?
         CLC   DSCB+8(1),=C'.'
         BE    READ                YES
*
GOSPFLOG CLI   SPFSW,C'1'   ***** TEST AUF  '.SPFLOG'
         BNE   LEVEL2
         LA    R8,DSCB
         LA    R12,35
SPFL1    CLC   0(7,R8),=C'.SPFLOG'
         BE    READ
         LA    R8,1(R8)
         BCT   R12,SPFL1
*
LEVEL2   B     MOVE
         LA    R3,LEVELTAB
CLCLOOP  EQU   *
         CLI   8(R3),X'FF'
         BE    MOVE
         MVC   CLC1+1(1),8(R3)
CLC1     CLC   0(8,R3),DSCB
         BE    READ
         LA    R3,9(R3)
         B     CLCLOOP
*
MOVE     EQU   *
         CLC   DATA1+9(3),CREDT+1          DATUM TEST
         BH    GOW
         MVC   0(44,R5),DSCB
         MVI   44(R5),C' '
         B     GOBXLE
GOW      EQU   *
         CLI   WARNSW,C'1'
         BNE   READ
         MVC   0(44,R5),DSCB
         MVI   44(R5),C'W'
GOBXLE   BXLE  R5,R6,READ
         CLOSE  (VTOC)
         DEQ    (NAME1,VOLSER,,SYSTEM)
*      *****************************
*      * MEHR ALS 400 FILES        *
*      *****************************
         WTO   '*** ZD100020: MEHR ALS 1000 FILES',ROUTCDE=11
         MVI   RETURNCD+3,X'08'
         B     EOJ
*      *****************************
*      * DD-STATEMENT IS MISSING   *
*      *****************************
ENDE     EQU   *
         WTO   '*** ZD100020: DD-STATEMENT IS MISSING',ROUTCDE=11
CLOSEV   CLOSE (VTOC)
         MVI   RETURNCD+3,X'0C'
         DEQ   (NAME1,VOLSER,,SYSTEM)
         B     EOJ
*
*      *****************************
*      * LADEN DER TABELLE BEENDET *
*      *****************************
ENDSYSIN EQU   *
         CLOSE (VTOC)
         DEQ   (NAME1,VOLSER,,SYSTEM)
*
*
*
         SR    R5,R6               ADR DES LETZTEN GELADENEN TAB PLATZ
         LR    R7,R5
         EJECT
*********************************************************************
*                                                                   *
*        LESEN GESCHUETZTE DATA SETS'S  (WIRD EIN GESCHUETZTER DATA *
*                                        SET GEFUNDEN, SO WIRD ER   *
*                                        IN DER TABELLE MIT EINEN   *
*                                        'A' VERSEHEN)              *
*********************************************************************
*                                                                   *
         MVI   DSNM,C' '
         MVC   DSNM+1(90),DSNM
         BAL   R10,DRUCK2
         CLI   DSSW,C'1'      WENN DISK-SWITCH ='1', IST EIN FILE
*                             MIT GESCHUETZTEN DATA-SETS VORHANDEN.
         BNE   ACTION
         RDJFCB (SYSUT1,(INPUT))
         MVC   JFCBVOLS,JFCBAREA+118
         CLC   VOLNAME,JFCBVOLS
         BE    GOTOOPEN
         WTO   '*** ZD100020: DD-CARD AND DISK-FILE NOT EQUAL'
         MVI   RETURNCD+3,X'08'
         B     EOJ
GOTOOPEN EQU   *
         OPEN  (SYSUT1,(INPUT)),TYPE=J
         OPEN  (FILELOG,OUTPUT)
         NI    GFLSLOG1+1,X'0F'
*
         GET   SYSUT1
         CLC   0(6,R1),=C'DATUM='
         BNE   LLAB1
*
*        PRUEFEN OB LAST UPDATE VON DISK-FILE OK
*
         MVC   DFDATE,6(R1)
         CALL  UZED12A,(DFDATE,OSDATE2)
*
*        WENN  DATUM IN DISK-FILE GROESSER IST ALS AKTUELLES DATUM
*        MINUS ANZ. SCHUTZ-TAGE KANN WEITER VERARBEITET WERDEN.
*        ANDERNFALLS KEINE WEITERE VERARBEITUNG.
         CLC   OSDATE2,OSDATE1+1           DATUM TEST
         BH    LESEN                       IST OK
*
         WTO   '*** ZD100020: DISK-FILE UPDATEN'    IST NICHT OK
         MVI   RETURNCD+3,X'08'
         CLOSE (SYSUT1,,FILELOG)
         B     EOJ
*
LESEN    EQU   *
         GET   SYSUT1
         CLI   0(R1),C'*'
         BE    LESEN
LLAB1    LR    R3,R1
         MVI   GENSW,C'1'
*
         XR    R10,R10
GENLOOP  EQU   *             BEI GENERATIONS KANN ANSTELLE VON
         CLI   0(R1),C' '    'XXX.G00NNV00 ' AUCH 'XXX.? ' AN-
         BE    ENDGEN1       GEGEBEN WERDEN.
         CLC   0(2,R1),=C'.?'
         BE    ENDGEN2
         LA    R1,1(R1)
         LA    R10,1(R10)
         B     GENLOOP
ENDGEN1  LA    R10,43
         MVI   GENSW,C' '
ENDGEN2  STC   R10,BXLELOOP+1
*
GFLSLOG1 B     GFLSLOG2
         PUT   FILELOG,TLOG
         MVI   TLCC,X'09'
         CALL  UZED10A,(TDATEL)
         PUT   FILELOG,TLOG
         MVI   ULCC,X'1B'
         PUT   FILELOG,UTLOG
         MVI   ULCC,X'09'
         PUT   FILELOG,UTLOG
         MVI   LCC,X'1B'
         PUT   FILELOG,LOG
         MVI   LCC,X'09'
         OI    GFLSLOG1+1,X'F0'
GFLSLOG2 EQU   *
         MVC   FILE,0(R3)
         PUT   FILELOG,LOG
*
*
VERGL1   EQU   *
         LA    R5,TABELLE
BXLELOOP CLC   0(44,R3),0(R5)
         BE    FOUND
GOTOBXLE BXLE  R5,R6,BXLELOOP
         B     LESEN               NICHT GEFUNDEN
*
FOUND    EQU   *
         MVI   44(R5),C'A'         ANGESPROCHEN
         CLI   GENSW,C'1'          WENN SCHUTZKARTE MIT '.?' GANZE
         BE    GOTOBXLE            TABELLE ABSUCHEN
         B     LESEN
*
ENDLESEN EQU   *
         CLOSE (SYSUT1,,FILELOG)
         EJECT
*********************************************************************
*                                                                   *
*        ABBAU DER TABELLE  (SCRATCH / UNCATLG)                     *
*                                                                   *
*********************************************************************
*                                                                   *
ACTION   EQU   *
         LA    R5,TABELLE
         CLI   0(R5),C' '         IST DSNAME-TABELLE LEER?
         BNE   VERGL2             NEIN  - NACH VERGL2
         MVI   RETURNCD+3,X'01'
         MVI   DSNM,C' '
         MVC   DSNM+1(90),DSNM
         MVC   DSNM(35),=C'ES WURDE KEIN DATA SET GESCRATCHED.'
         BAL   R10,DRUCK2
         B     CLOSEN2
*
VERGL2   EQU   *                  TABELLE DURCHSEHEN UND WENN NOETIG
*                                 SCRATCH U. UNCATLG
         BAL   R11,DRUCK1
         BXLE  R5,R6,VERGL2
CLOSEN   EQU   *
         CLI   SWC,C'1'
         BE    CLOSEN2
         MVI   RETURNCD+3,X'01'
         MVI   DSNM,C' '
         MVC   DSNM+1(90),DSNM
         MVC   DSNM(35),=C'ES WURDE KEIN DATA SET GESCRATCHED.'
         BAL   R10,DRUCK2
CLOSEN2  CLOSE (SYSPRINT)
         B     EOJ
*      ****************************************************************
*      *                                                              *
*      * DRUCK - ROUTINE                                              *
*      *                                                              *
*      ****************************************************************
DRUCK1   EQU   *
         MVC   DSNM,0(R5)
         CLI   44(R5),C'A'
         BE    RETURN1
         MVI   SWC,C'1'
         CLI   44(R5),C'W'
         BE    WARNING
         MVC   DSNAME,0(R5)
*
*
         CLI   TESTSW,C'1'      *** TEST (KEIN SCRATCH/UNCATLG)
         BE    MESS0
*
         XR    R0,R0
         SCRATCH GODEL
         LTR   R15,R15
         BNZ   ERROR1
         B     MESS0
ERROR1   EQU   *
         LA    R10,4
         MH    R10,STATUS
         B     *+4(R10)
         B     MESS0
         B     MESS1
         B     MESS2
         B     MESS3
         B     MESS4
         B     MESS5
         B     MESS6
         B     MESS7
         B     MESS8
         B     MESS9
MESS0    EQU   *
         MVC   MESSAGE,MESSAGE0
         B     GOUCAT
MESS1    EQU   *
         MVC   MESSAGE,MESSAGE1
         B     GOACT
MESS2    EQU   *
         MVC   MESSAGE,MESSAGE2
         B     GOACT
MESS3    EQU   *
         MVC   MESSAGE,MESSAGE3
         B     GOACT
MESS4    EQU   *
         MVC   MESSAGE,MESSAGE4
         B     GOACT
MESS5    EQU   *
         MVC   MESSAGE,MESSAGE5
         B     GOACT
MESS6    EQU   *
         MVC   MESSAGE,MESSAGE6
         B     GOACT
MESS7    EQU   *
         MVC   MESSAGE,MESSAGE7
         B     GOACT
MESS8    EQU   *
         MVC   MESSAGE,MESSAGE8
         B     GOACT
MESS9    EQU   *
         MVC   MESSAGE,MESSAGE9
         B     GOACT
*
GOUCAT   EQU   *
         CLI   TESTSW,C'1'      *** TEST (KEIN SCRATCH/UNCATLG)
         BE    GOACT
         CATALOG GOUNCAT
         LTR   R15,R15
         BNZ   ERROR2
         B     GOACT
ERROR2   EQU   *
         MVC   MESSAGE,MESSAGEA
         ST    R15,FW2
         B     GOACT
*
WARNING  EQU   *
         MVC   MESSAGE,MESSAGEB
*
*
*
GOACT    BAL   R10,DRUCK2
RETURN1  BR    R11
*
*
DRUCK2   B     DRUCK3
DRUCK2B  PUT   SYSPRINT,TZEILE
         MVI   TCC,X'09'
         CALL  UZED10A,(TDATE)
         PUT   SYSPRINT,TZEILE
         MVI   ZCC,X'1B'
         PUT   SYSPRINT,ZEILE
         MVI   ZCC,X'09'
         OI    DRUCK2+1,X'F0'
DRUCK3   EQU   *
         PUT   SYSPRINT,ZEILE
MONLAB   B     DRUCK3C
         CLOSE (SYSPRINT)
         B     EOJ
DRUCK3C  BR    R10
*
*
*
EOJ      EQU   *
         L     R13,S0001+4
         L     R15,RETURNCD
         RETURN (14,12),RC=(15)
         EJECT
*********************************************************************
*                                                                   *
*        D E F I N I T I O N E N                                    *
*                                                                   *
*********************************************************************
*                                                                   *
*
*
*
*        D C B' S
*
VTOC     DCB   DDNAME=VTOC,EODAD=ENDSYSIN,DSORG=PS,MACRF=(R),          *
               KEYLEN=44,BLKSIZE=96,EXLST=LIST
SYSUT1   DCB   DDNAME=SYSUT1,MACRF=GL,DSORG=PS,EODAD=ENDLESEN,         *
               EXLST=LIST
SYSIN    DCB   DDNAME=SYSIN,MACRF=GL,DSORG=PS,EODAD=SYSINEND
SYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=(PM),                    *
               RECFM=FBM,LRECL=133,BLKSIZE=798
FILELOG  DCB   DDNAME=FILELOG,DSORG=PS,MACRF=(PM),                     *
               RECFM=FBM,LRECL=133,BLKSIZE=798
***********************************************************************
*
*
*        EXLST  /  JFCB  /  TIOT
*
         DS    0F
LIST     DC    AL1(128+7),AL3(JFCBAREA)
DSCB     DS    XL44
DATA1    DS    XL96
         DS    0F
JFCBAREA DS    CL176
JFCBVOLS DC    CL6'      '
VOLSER   DC    CL6' '
NAME1    DC    CL8'SYSVTOC '
*
TIOTAREA DS    F
DDNAME   DS    CL8
***********************************************************************
*
DISKFILE DS    0CL21
         DC    CL8'DATA.ZD.'
DISKNAME DS    CL6
         DC    CL7'.FILES '
DW       DS    D
DATE     DC    PL4'0'
CREDT    DS    0CL4
HW1      DC    H'0'
HW2      DC    H'0'
FW1      DC    F'0'
FW2      DC    F'0'
DAYKONST DC    PL1'2'
ZWP2     DC    PL2'0'
DFDATE   DS    CL8
OSDATE1  DS    PL4
OSDATE2  DS    PL3
*
MESSAGEA DC    CL50'*****  SCRATCHED / DATASET NOT CATALOGED          '
MESSAGEB DC    CL50'       WARNING   DATASET NOT PROTECTED            '
MESSAGE0 DC    CL50'*****  SCRATCHED AND UNCATALOGED                  '
MESSAGE1 DC    CL50'FORMAT-1 DSCB NOT FOUND                           '
MESSAGE2 DC    CL50'CORRENT PASSWORD WAS NOT SUPPLIED                 '
MESSAGE3 DC    CL50'RETENTION CYCLE HAS NOT EXPIRED                   '
MESSAGE4 DC    CL50'PERMANENT I/O ERROR OR A INVALID FORMAT-1 DSCB    '
MESSAGE5 DC    CL50'NO DEVICE AVAILABLE FOR THIS VOLUME               '
MESSAGE6 DC    CL50'JES3 WOULD NOT ALLOW THE VOLUME TO BE MOUNTED     '
MESSAGE7 DC    CL50'DATA-SET COULD NOT BE SCRATCHED IT WAS BEING USED '
MESSAGE8 DC    CL50'DATA-SET IS A VSAM DATA SPACE OR DEFINED TO RACF  '
MESSAGE9 DC    CL50'DATA-SET IS DEFINED TO RACF                       '
*
*
*        SCRATCH
*
GODEL    CAMLST SCRATCH,DSNAME,,VOL,,OVRD
DSNAME   DS    CL44
VOL      DC    H'1'          NUMBER OF VOLUMES
         DC    X'3050200B'   DISK DEVICE CODE
VOLNAME  DC    CL6'      '   VOLUME SERIAL NUMBER
STATUS   DC    H'0'          SCRATCH STATUS CODE
*
*
*        UNCAT
*
GOUNCAT  CAMLST UNCAT,DSNAME
*
*
*
DATUM    DS    0CL8
         DC    PL4'0'
         DC    PL4'0'
WOCHE    DS    0CL4
         DC    PL2'0'
         DC    PL2'0'
*
INCARD   DS    CL80
LEVELTAB DS    CL90       LEVEL-TABELLE
KONST    DS    0CL9
         DC    CL8' '
         DC    XL1'FF'
***********************************************************************
TESTSW   DC    CL1' '  SWITCH = 1 (TEST-OPTION = KEIN SCRATCH)
DSSW     DC    CL1' '  SWITCH = 1 (FILE MIT GESCHUETZTEN DATA-SETS
*                                  AUF DEM ANGESPROCHENEN DISK)
SPFSW    DC    CL1' '  SWITCH = 1 (KEINE SPFLOG DATA-SETS LOESCHEN)
SYSSW    DC    CL1' '  SWITCH = 1 (NUR TEMP.SYS.FILES LOESCHEN)
SWC      DC    CL1' '  SWITCH = 1 (MINDESTENS EIN DATA-SET WURDE
*                                  GELOESCHT)
FORCESW  DC    CL1' '  SWITCH = 1 (SCRATCH WIRD AUCH AM MONTAG DURCH-
*                                  GEFUEHRT)
WARNSW   DC    CL1' '  SWITCH = 1 (WARNING. DATASETS DIE NAECHSTENS
*                                  GELOESCHT WERDEN, WERDEN AUFGELISTET
GENSW    DC    CL1' '  SWITCH = 1 (BEI SCHUTZKARTEN MIT '.?' (GEN-
*                                 ERATIONEN) GANZE TABELLE ABSUCHEN.)
***********************************************************************
RETURNCD DC    F'0'
*
PSTRING  DS    0CL50     PARM
PDAYK    DS    CL1       ANZ GESCHUETZTE TAGE  (D, 0, - 9,)
         DS    CL1
PARM     DC    CL48' '   REST (DISK ETC.)
*
*
TZEILE   DS    0CL133
TCC      DC    XL1'8B'
         DC    CL23'ZD100020:  ACTIVITY-LOG'
         DC    CL23' '
         DC    CL7'DISK = '
DISKID   DC    CL6' '
         DC    CL30' '
         DC    CL7'DATUM: '
TDATE    DC    CL8' '
         DC    CL29' '
*
ZEILE    DS    0CL133
ZCC      DS    XL1
DSNM     DC    CL44' '
MESSAGE  DC    CL50' '
         DC    CL38' '
*
TLOG     DS    0CL133
TLCC     DC    XL1'8B'
         DC    CL32'ZD100020:   GESCH<TZTE FILES    '
         DC    CL10' '
         DC    CL6'DISK= '
TDISK    DC    CL6' '
         DC    CL10' '
         DC    CL7'DATUM: '
TDATEL   DC    CL8' '
         DC    CL53' '
*
UTLOG    DS    0CL133
ULCC     DS    XL1
         DC    CL60'FILES DIE NICHT MEHR BEN@TIGT WERDEN BITTE ABSTREIC*
               HEN.     '
         DC    CL72' '
LOG      DS    0CL133
LCC      DS    XL1
FILE     DS    CL72
         DC    CL60' '
         LTORG
TABELLE  DS    1000CL45    (44 DSN  /  1 GESCHUETZT)
         END
