         TITLE 'SEARCH LIBRARY FOR SPECIFIC CSECT NAME'
PDV065B  CSECT
         SPACE 1
***********************************************************************
*                                                                     *
*              AUFRUF                                                 *
*              ------                                                 *
*                   //SXX      EXEC PGM=PDV065B,REGION=120K,PARM=NAME *
*                   //SYSUT1   DD   DSN=LIBRARY,DISP=SHR              *
*                   //SYSPRINT DD   SYSOUT=C                          *
*                                                                     *
*              PARM IST EIN CSECT-NAME, NACH DEM ALLE CSECT-ENTRIES   *
*              DURCHGESUCHT WERDEN. ES WERDEN NUR DIEJENIGEN MEMBERS  *
*              MIT ALLEN CSECTS AUSGEDRUCKT, DIE DIE GESUCHTE CSECT   *
*              ENTHALTEN.                                             *
*                                                                     *
*              IST KEIN PARM ANGEGEBEN, WIRD OHNE SELEKTION DIE GANZE *
*              LIBRARY VERARBEITET.                                   *
*                                                                     *
*              USER-ABEND 0001: RDJFCB-MACRO HAT NICHT RETURNCODE 0.  *
*                                                                     *
*                                                                     *
***********************************************************************
         SPACE 4
         PRINT NOGEN
         REGEQ
         SAVE  (14,12),,*
         BALR  R10,0
         USING *,R10,R11
         LA    R11,2048
         LA    R11,2048(R10,R11)
         MVC   8(4,R13),=A(SAVE)
         ST    R13,SAVE+4
         CNOP  0,4
         BAL   R13,BEGIN
SAVE     DC    18F'0'
         LTORG
*
*
*  REGISTER-VERWENDUNG SIEHE EINZELNE ROUTINEN
*
*
*
         EJECT
***********************************************************************
*                                                                     *
* PARM-<BERNAME, RDJFCB, OPEN UND GETMAIN F<R PDS                     *
*                                                                     *
***********************************************************************
         SPACE 2
BEGIN    EQU   *
         L     R1,0(R1)            PARM POINTER
         LH    R2,0(R1)            PARM LENGTH
         LA    R3,2(R1)            PARM ADRESS
         LTR   R2,R2               PARM DA?
         BZ    NOPARM
*
         BCTR  R2,0
         STC   R2,GETPARM+1
GETPARM  MVC   PARM(0),0(R3)
*
NOPARM   EQU   *
         XR    R15,R15
         RDJFCB (DIR)
         CH    R15,=H'0'
         BE    JFCBOK
*
         WTO   'ROJFCB NOT SUCCESSFUL',ROUTCDE=11
         ABEND 1
*
JFCBOK   EQU   *
         OPEN  (DIR,,MBR,,SYSPRINT,(OUTPUT))
         CALL  UZED10A,(DATUM)
         MVC   TDSN(27),JFCBAREA   SAVE LIBRARY-DSN FOR TITLE
         MVC   TIT1B+6(8),DATUM
         GETMAIN R,LV=13032
         ST    R1,POOLADR
*
         BAL   R8,TITEL
         MVI   ZEILE,C' '
         MVC   ZEILE+1(111),ZEILE
         EJECT
***********************************************************************
*                                                                     *
* READ DIRECTORY OF THE PDS DESCRIBED ON THE DD-STMT 'SYSUT1'         *
*                                                                     *
***********************************************************************
         SPACE 2
READDIR  EQU   *
         READ  DIRDECB,SF,DIR,DIRAREA,'S'
         CHECK DIRDECB
         LA    R4,DIRAREA+8        JUMP OVER HIGHEST KEY IN BLOCK
         LH    R8,0(R4)            TOTAL USED BYTES IN BLOCK
         SH    R8,=H'2'            MINUS LENGTH FIELD ITSELF
         LA    R4,2(R4)            FIRST MEMBER NAME
*
NEXT     EQU   *
         CLC   0(8,R4),=8X'FF'     LAST ENTRY?
         BE    ENDE
         MVI   PRINTSW,C' '
         IC    R2,11(R4)    INDICATORS
         N     R2,=X'0000001F'     CLEAR ALL EXEPT USER DATA LENGTH
         SLA   R2,1                X 2 = LENGTH IN BYTES
         LR    R5,R4
         LA    R5,12(R5)           JUMP OVER FIX 12 BYTES
         LA    R5,0(R2,R5)         PLUS LENGTH USER DATA = NEXT ENTRY
         ST    R5,NXENTRY
         ST    R2,ULENGTH
         ST    R8,USEBYT
         TM    11(R4),X'80'        IS IT AN ALIAS-ENTRY?
         BZ    READMBR
*
         MVC   PALIAS,=C'*** ALIAS ***'
*
         EJECT
***********************************************************************
*                                                                     *
* INIT TABELLEN, READ MEMBER AND DETERMINE TYPE OF ENTRY:             *
*                            R4 = POINTS TO MEMBERNAME IN DIRECTORY   *
*                            R5 = ADR DCB OF MBR                      *
*                            R6 = MBR-RECORD (POOL FROM GETMAIN)      *
*                           R12 = INIT TABELLEN, ADR OF CSECTT        *
*                                                                     *
***********************************************************************
         SPACE 2
READMBR  EQU   *
         LA    R5,MBR
         LA    R12,TRTAB
         XC    0(15,R12),0(R12)    INIT FIRST SEGM.OF TRANSLATOR TAB
         L     R12,=A(CSECTT)
         XC    0(15,R12),0(R12)    INIT FIRST SEGM.OF CSECT-TAB
         MVI   TYPE,X'00'          END-INDECATOR
         XC    TOTLEN,TOTLEN
*
         FIND  (5),(4),D           NEXT READ STARTS AT BEGINNING OF MBR
*                                  FOR THIS ENTRY NAMED BY R4
*
RENTRY   EQU   *
         L     R6,POOLADR          GET SUBPOOL ADR FOR READ INTO.
         READ  MBRDECB,SF,MBR,(6),13030
         CHECK MBRDECB
         CLI   TYPE,X'80'          WAS LAST REC. LAST OF MODULE?
         BE    WRITE
         CLI   0(R6),X'20'         ESD-ENTRY?
         BNE   IFIDR
         SPACE 4
***********************************************************************
*                                                                     *
* ESD-ENTRY (TYPE 20): R3  -  ESDID                                   *
*                      R5  -  LAENGEN DER CSECTS ADDIERT              *
*                      R6  -  INPUT BLOCK                             *
*                      R7  -  START CESD DATA                         *
*                      R9  -  END CESD DATA                           *
*                      R12 -  ADR CSECT TAB                           *
*                                                                     *
*                                                                     *
***********************************************************************
         SPACE 2
         LA    R7,8(R6)       START CESD DATA
         LH    R9,6(R6)       LENGTH OF ESD DATA IN BYTES
         LA    R9,0(R7,R9)
         BCTR  R9,0           LAST BYTE OF ESD DATA
         LH    R3,4(R6)       ESDID
         SR    R5,R5
*
NCSECT   EQU   *
         NI    8(R7),X'0F'    CLEAR LEFT HALFBYTE
         CLI   8(R7),X'00'         SD?
         BNE   NOMOVE
*
SDTYP    EQU   *
         MVC   2(8,R12),0(R7)      CSECT NAME TO TAB
         STH   R3,0(R12)           ID
         MVC   11(3,R12),13(R7)    LENGTH OF CSECT
         LA    R12,15(R12)         NEXT SEGMENT OF CSECT TAB
         XC    0(15,R12),0(R12)    CLEAR IT
         C     R12,=A(CSECTT+98*15)   END OF TAB?
         BH    TABFULL
         L     R5,12(R7)           LENGTH-1
         LA    R5,7(R5)            CLEAR LEFT BYTE AND ADD 7 FOR
*                                  DOUBLEWORD BOUNDARY ALIGMENT
         N     R5,XF               SET RIGHT 3 BITS OFF
         A     R5,TOTLEN
         ST    R5,TOTLEN
*
*
NOMOVE   EQU   *
         LA    R3,1(R3)            ADD 1 TO ESDID
         LA    R7,16(R7)           NEXT CSCT NAME
         CR    R9,R7               END OF ENTRY REACHED?
         BH    NCSECT              NOT - GOON
         B     RENTRY
         SPACE 4
TABFULL  EQU   *
         MVC   PALIAS(14),=C'CSECT-TAB FULL'
         B     DRUK0
         EJECT
***********************************************************************
*                                                                     *
* IDR-ENTRY (TYPE 80) :  R6 - INPUT BLOCK                             *
*                                                                     *
***********************************************************************
         SPACE 2
IFIDR    EQU   *
         CLI   0(R6),X'80'         IS IT AN IDR-ENTRY?
         BNE   WRITE
         MVC   TYPE(1),2(R6)       SAVE SUBTYPE
         NI    TYPE,X'80'          CLEAR ALL EXCEPT HIGH ORDER BIT
*                                  (END INDICATOR).
         NI    2(R6),X'0F'         CLEAR LEFT HALFBYTE
         CLI   2(R6),X'01'         ZAP DATA?
         BE    RENTRY
         CLI   2(R6),X'80'         USER SUPPLIED DATA?
         BE    RENTRY
         CLI   2(R6),X'02'         LKED DATA?
         BNE   IFTRANS
         SPACE 4
***********************************************************************
*                                                                     *
*LKED-RECORD (SUBTYPE 02 VON TYPE 80): R6 - INPUT BLOCK               *
*                                                                     *
***********************************************************************
         SPACE 2
         TM    17(R6),X'0F'        TEST FOR VALID DATE
         BO    MOVDAT
         TM    17(R6),X'0C'
         BNO   NODAT
MOVDAT   EQU   *
         MVC   PDAT+1(3),15(R6)
         CALL  UZED11A,(PDAT,ADAT) OS DATE TO CHAR.TT.MM.JJ
         B     RENTRY
*
NODAT    MVC   DATUM,=8C'*'
         B     RENTRY
         SPACE 4
***********************************************************************
*                                                                     *
* TRANSLATOR-REC (SUBTYPE 04 VON TYPE 80): R2   ESDID                 *
*                                          R3 - TRTAB                 *
*                                          R6 - INPUT BLOCK           *
*                                          R7 - TRANS.ENTRY IN BLOCK  *
*                                          R9 - END OF INPUT BLOCK    *
*                                                                     *
*                                                                     *
***********************************************************************
         SPACE 2
IFTRANS  EQU   *
         CLI   2(R6),X'04'         TRANSLATOR RECORD?
         BNE   WRITE
         LA    R3,TRTAB
         LA    R7,3(R6)            1. TRANSL.ENTRY
         SR    R9,R9
         IC    R9,1(R6)            LENGTH OF BLOCK INCL.THIS FIELD
         LA    R9,0(R6,R9)
         BCTR  R9,0                LAST BYTE IN BLOCK
*
NTRANS   EQU   *
         TM    0(R7),X'70'
         BM    TNB
         TM    0(R7),X'80'
         BO    FIRSTID
*
TNB      LA    R7,2(R7)
         CR    R7,R9
         BH    WRITE
         B     NTRANS
*
FIRSTID  EQU   *
         LH    R2,0(R7)            ESDID
         N     R2,=X'00007FFF'     CLEAR LEFT HW
         STH   R2,0(R3)            ID TO TRTAB
         MVC   2(3,R3),15(R7)      DATE TO TRTAB
         MVC   5(10,R3),3(R7)      TRANSLATOR NAME TO TRTAB
         LA    R3,15(R3)           NEXT SEGMENT
         XC    0(15,R3),0(R3)      CLEAR IT.
         LA    R7,18(R7)           NEXT ENTRY IN BLOCK
         CR    R9,R7               END OF BLOCK REACHED?
         BH    NTRANS              NOT YET
         CLI   TYPE,X'80'          LAST RECORD?
         BE    WRITE
         B     RENTRY
         EJECT
***********************************************************************
*                                                                     *
* PRINT-ROUTINE:    R2 - CSECTT                                       *
*                   R3 - TRTAB                                        *
*                   R4 - DIRECTORY BLOCK, MODULE NAME                 *
*                   R7 - FOR CONVERT LENGTH                           *
*                   R8 - BAL TITEL                                    *
*                                                                     *
***********************************************************************
         SPACE 2
WRITE    EQU   *
         CLI   PARM,C' '
         BE    PUTOUT
         LA    R2,CSECTT
COMPPARM CLC   PARM,2(R2)          GESUCHTER NAME?
         BE    PUTOUT
         LA    R2,15(R2)
         CLC   0(2,R2),=X'0000'
         BNE   COMPPARM
         B     GOON
         SPACE 4
PUTOUT   EQU   *
         MVI   PRINTSW,C'P'
         LA    R2,CSECTT
         LA    R3,TRTAB
         MVC   PMODULE,0(R4)       MODULE NAME
         MVC   PMODDAT,DATUM       LINK DATE
         L     R7,TOTLEN
         CVD   R7,DW
         MVC   PMLEN,=X'40202020206B202120'
         ED    PMLEN,DW+4          TOTAL LENGTH ROUNDED ON DW BOUNDARY
*
MCS      EQU   *
         MVC   PCSECT,2(R2)        CSECT NAME
         L     R7,10(R2)           LENGTH OF CSECT
         CVD   R7,DW
         MVC   PCLEN,=X'40202020206B202120'
         ED    PCLEN,DW+4
*
COMPID   EQU   *
         CLC   0(2,R2),0(R3)       SAME ID IN TRTAB
         BE    MCDS
         LA    R3,15(R3)
         C     R3,=A(TRTAB+99*15)  END OF TRTAB?
         BH    DRUK0
         B     COMPID
*
MCDS     EQU   *
         TM    4(R3),X'0F'
         BO    DATOK
         TM    4(R3),X'0C'
         BNO   NOTRDAT
DATOK    MVC   PDAT+1(3),2(R3)
         CALL  UZED11A,(PDAT,ATDAT)
         MVC   PTDAT,TDAT          TRANSLATION DATE
         MVC   PTRANS,5(R3)        TRANSLATOR NAME
         B     DRUK0
*
NOTRDAT  MVC   PTDAT,=8C'*'
*
DRUK0    EQU   *
         CP    ZZEL,=P'60'
         BNH   DRUK1
         BAL   R8,TITEL
DRUK1    MVI   CTL,X'09'
         PUT   SYSPRINT,ZEILE
         AP    ZZEL,=P'1'
         MVI   ZEILE,C' '
         MVC   ZEILE+1(111),ZEILE
         MVC   DATUM,=8C' '
         MVC   TDAT,=8C' '
         LA    R2,15(R2)           NEXT ENTRY OF CSECTT
         LA    R3,TRTAB            FIRST ENTRY OF TRTAB
         CLC   0(2,R2),=X'0000'    LAST CSECT?
         BE    GOON
         B     MCS
         SPACE 4
*
*              TITEL, UNTERTITEL
*
TITEL    EQU   *
         MVI   T1CTL,X'8B'         CHANNEL 1 DIRECT
         PUT   SYSPRINT,TIT1
         ZAP   ZZEL,=P'0'
         AP    SZEL,=P'1'
         MVI   T1CTL,X'11'
         MVC   TSEITE,=X'40202120'
         ED    TSEITE,SZEL
         PUT   SYSPRINT,TIT1
         AP    ZZEL,=P'2'
         CLC   PARM,=8C' '
         BE    TITEL2
         MVC   UPARM,PARM
         PUT   SYSPRINT,UTIT
         AP    ZZEL,=P'2'
*
TITEL2   EQU   *
         PUT   SYSPRINT,UTIT2
         AP    ZZEL,=P'1'
         PUT   SYSPRINT,UTIT3
         AP    ZZEL,=P'3'
         BR    R8
*
*
*
*
*
GOON     EQU   *
         CLI   PRINTSW,C'P'
         BNE   GOON2
         MVI   ZEILE,C' '
         MVC   ZEILE+1(111),ZEILE
         MVI   CTL,X'09'
         PUT   SYSPRINT,ZEILE      1 ZEILE ZWISCHENRAUM
         AP    ZZEL,=P'1'
GOON2    EQU   *
         L     R2,ULENGTH
         L     R8,USEBYT
         SH    R8,=H'12'
         BZ    READDIR
         SR    R8,R2
         BZ    READDIR
         L     R4,NXENTRY
         B     NEXT
         SPACE 4
ENDE     EQU   *
         CLOSE (DIR,,MBR,,SYSPRINT)
         XR    R15,R15
         L     R13,SAVE+4
         RETURN (14,12),RC=(15)
         EJECT
***********************************************************************
*                                                                     *
* DEFINITIONEN                                                        *
*                                                                     *
***********************************************************************
         SPACE 2
TIT1     DS    0CL112
T1CTL    DS    CL1
TIT1A    DC    CL52'PDV065B:   LOAD MODULE MAP MIT CSECT-VERZEICHNIS VO*
               N'
         DC    C' '
TDSN     DS    CL27
         DC    CL3' '
TIT1B    DC    CL24'DATUM XX.XX.XX     SEITE'
TSEITE   DS    CL4
*
UTIT     DS    0CL112
U1CTL    DC    X'11'
         DC    CL11' '
UTIT1A   DC    CL15'GESUCHTE CSECT:'
         DC    CL1' '
UPARM    DC    CL8' '
         DC    CL76' '
*
UTIT2    DS    0CL112
U2CTL    DC    X'09'               SPACE 1 AFTER
         DC    CL86'MODULE     LINK-      TOTALL%NGE     CSECTS        *
                  CSECT      TRANSLATOR    COMPILE'
         DC    CL25' '
*
UTIT3    DS    0CL112
U3CTL    DC    X'19'               SKIP 3 AFTER
         DC    CL11' '
         DC    CL73'DATUM        IN BYTES                      L%NGE   *
                  NAME          DATUM'
         DC    CL27' '
*
ZEILE    DS    0CL112
CTL      DC    X'09'
PMODULE  DS    CL8
         DS    CL3
PMODDAT  DS    CL8
         DS    CL4
PMLEN    DS    CL9
         DS    CL5
PCSECT   DS    CL8
         DS    CL2
PTYP     DS    CL2
         DS    CL1
PCLEN    DS    CL9
         DS    CL6
PTRANS   DS    CL10
         DS    CL4
PTDAT    DS    CL8
         DS    CL3
PALIAS   DS    CL13
         DS    CL8
*
*
SZEL     DC    PL2'0'
ZZEL     DC    PL2'0'
         DS    0F
XF       DC    X'FFFFFFF8'
TOTLEN   DC    F'0'
POOLADR  DC    F'0'
NXENTRY  DC    F'0'
ULENGTH  DC    F'0'
USEBYT   DC    F'0'
DATUM    DS    CL8
PARM     DC    CL8' '
DW       DS    D
TYPE     DS    CL1
PRINTSW  DC    C' '
PDAT     DC    PL4'0'              FUER UZED11A LINK-DAT/ COMPILE DAT
ADAT     DC    A(DATUM)            FUER UZED11A LINK-DAT
ATDAT    DC    A(TDAT)             FUER UZED11A COMPILE DAT
TDAT     DS    CL8
*
DIR      DCB   DDNAME=SYSUT1,MACRF=(R),DSORG=PS,EODAD=ENDE,EXLST=LIST1,*
               KEYLEN=8,LRECL=256,BLKSIZE=256,RECFM=F
*
MBR      DCB   DDNAME=SYSUT1,MACRF=(R),DSORG=PO,EODAD=GOON,            *
               RECFM=U,BLKSIZE=13030
*
SYSPRINT DCB   DDNAME=SYSPRINT,MACRF=(PM),DSORG=PS,                    $
               LRECL=112,BLKSIZE=2464,RECFM=FBM
*
         DS    0D
LIST1    DC    AL1(128+7),AL3(JFCBAREA)
         DS    0F
JFCBAREA DS    CL176
DIRAREA  DS    CL264
         LTORG
TRTAB    DC    100CL15' '
CSECTT   DC    100CL15' '
EE       DS    CL1
         END   PDV065B
