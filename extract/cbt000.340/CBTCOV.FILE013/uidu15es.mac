         MACRO
&NAME    EANF  &V,&CD=C,&LC=0,&BR=1,&SA=72,&EP=,&ID=,&REG=(14,12),     1
               &CT=
*
*   EANF    24.01.77
*
.*
.* V     REG. 15 WIRD ZUM LADEN DER BASISREG. BENUTZT
.* CD=   STANDARDWERT IST -S- WIE -START-
.*       ZULAESSIG AUCH -C- WIE -CSECT-
.* LC=   STANDARDWERT IST -0-, SETZT ZUORDNUNGSZAEHLER AUF 0
.*       NUR ZULAESSIG IN VERBINDUNG MIT -START-, SIEHE CD=
.* BR=   STANDARDWERT IST -1- WIE -EIN BASISREGISTER=BASIS1=R3-
.*       ZULAESSIG IST 0,1,2 ODER 3
.* SA=   STANDARDWERT IST -72-
.*       GIBT DIE LAENGE DER SAVEAREA AN
.* EP=   NAME DES EINGANGSPUNKTES. WENN ANGEGEBEN,SO WIRD
.*       ER MERKMAL DER SAVE-INSTUKTION IN DER MAKROAUFLOESUNG
.* ID=   IDENTIFIKATION, WIE BEIM SAVE-MACRO ANGEGEBEN WERDEN KANN
.* REG=  REGISTERNOTIERUNG, STANDARDWERT IST (14,12)
.*       WIE IM SAVE-MACRO ANGEGEBEN WERDEN KANN
.* CT=   T,
.*       WIE IM SAVE-MACRO ANGEGEBEN WERDEN KANN
.*
.* GLOBALE VARIABLE ZUM TEST GEGEN DOPPELDEFINITION DER REGISTER
         GBLB  &GLBIT   BETROFFEN SIND DIE EQU'S
         GBLA  &GLBR
         LCLA  &SETBR   ZUM TEST FUER BR=
         LCLA  &LECS
         LCLC  &CSET
         LCLA  &ASET
.*
         AIF   (T'&NAME EQ 'O').M1
.M2      AIF   ('&CD' EQ 'S').M3
         AIF   ('&CD' EQ 'C').M4
         MNOTE 4,'CD=  IST UNGUELTIG'
.M3      MNOTE *,'START GENERIERT'
&NAME    START &LC
         AGO   .M5
.M4      MNOTE *,'CSECT GENERIERT'
&NAME    CSECT
.M5      ANOP
         AIF   (&GLBIT).E1
*
*
*
         MNOTE *,'SYMBOLISCHE REGISTER GENERIERT'
*
R15      EQU   15  VERZWEIGREGISTER
R14      EQU   14  RUECKKEHRREGISTER
R13      EQU   13  REGISTER FUER DEN LAUFENDEN SICHERUNGSBEREICH
R12      EQU   12
R11      EQU   11
R10      EQU   10
R9       EQU   9
R8       EQU   8
R7       EQU   7
R6       EQU   6
R5       EQU   5
R4       EQU   4
R3       EQU   3
R2       EQU   2   BEI TRT-EINGABEDATENPRUEFUNG VERWENDET
R1       EQU   1   PARAMETERREGISTER
R0       EQU   0   PARAMETERREGISTER
*
*
.E1      AIF   ('&BR'(1,1) NE '(').E2
         AGO   .M22
.E2 ANOP
&SETBR   SETA  &BR
         AIF   (&GLBIT).M18
.M19     AIF   (&SETBR EQ 0).M6
         AIF   (&SETBR GE 1).M8
.M9      AIF   (&SETBR GE 2).M10
.M12     ANOP
         AIF   (&GLBR GT &SETBR).M22
&GLBR    SETA  &SETBR
.M22     ANOP
**
**
         USING *,R15
MACR&SYSNDX EQU *
&EP      SAVE  &REG,&CT,&ID
         LR    2,1
         AIF   (T'&EP EQ 'O').M13
         AIF   (T'&EP EQ 'SYSECT').M21
         ENTRY &EP
         MNOTE *,'ENTRY-EINGANGSPUNKT GENERIERT'
.M13        CNOP  0,4
            LA    1,*+8
            B     *+4+&SA
            DS    &SA.C
         ST    R13,4(R1)
         LR    R10,R13
         LA    R13,0(R1)
         ST    R13,8(R10)
         LR   1,2
         AIF   (&GLBIT).M17
*
* AUFBAU DER SAVEAREA
*
* WORT 0  NUR VON PL/1 VERWENDET
* WORT 1  A(SAVEAREA IM RUFENDEN PROGRAMM)
* WORT 2  A(SAVEAREA IM GERUFENEN PROGRAMM)
* WORT 3  R14
* WORT 4  R15
* WORT 5  R0         **BEI         R14
* WORT 6  R1         **ZUGRIFFS-   R15
* WORT 7  R2         **ROUTINEN    R0
* WORT 8  R3 BASIS1  **WERDEN      R1
* WORT 9  R4 BASIS2  **HIER        R2
* WORT 10 R5 BASIS3  **FOLGENDE    R3
* WORT 11 R6         **REGISTER    R4
* WORT 12 R7         **VON DER     R5
* WORT 13 R8         **ZUGRIFFS-   R6
* WORT 14 R9         **ROUTINE     R7
* WORT 15 R10        **GESPEICHERT R8
* WORT 16 R11
* WORT 17 R12
*
.M17     ANOP
         AIF   ('&BR'(1,1) NE '(').E5
&SETBR   SETA  N'&BR
         BALR  &BR(1),0
         USING *,&BR(1)
         AIF   (&SETBR EQ 1).M14
         AIF   (&SETBR GT 10).E4
.E3      ANOP
&LECS    SETA  2
&ASET    SETA  1
         LA    &BR(&SETBR),4095
         LA    &BR(&LECS),1(&BR(&ASET),&BR(&SETBR))
         AIF   (&LECS NE &SETBR).E11
 USING *+4096-&SETBR*4,&BR(2)
 AGO .M14
.E11  ANOP
&LECS    SETA  &LECS+1
&ASET    SETA  &ASET+1
         LA    &BR(&LECS),1(&BR(&ASET),&BR(&SETBR))
         AIF   (&LECS NE &SETBR).E12
 USING *+4096-&SETBR*4,&BR(2),&BR(3)
 AGO .M14
.E12  ANOP
&LECS    SETA  &LECS+1
&ASET    SETA  &ASET+1
         LA    &BR(&LECS),1(&BR(&ASET),&BR(&SETBR))
         AIF   (&LECS NE &SETBR).E13
 USING *+4096-&SETBR*4,&BR(2),&BR(3),&BR(4)
 AGO .M14
.E13  ANOP
&LECS    SETA  &LECS+1
&ASET    SETA  &ASET+1
         LA    &BR(&LECS),1(&BR(&ASET),&BR(&SETBR))
         AIF   (&LECS NE &SETBR).E14
 USING *+4096-&SETBR*4,&BR(2),&BR(3),&BR(4),&BR(5)
 AGO .M14
.E14  ANOP
&LECS    SETA  &LECS+1
&ASET    SETA  &ASET+1
         LA    &BR(&LECS),1(&BR(&ASET),&BR(&SETBR))
         AIF   (&LECS NE &SETBR).E15
 USING *+4096-&SETBR*4,&BR(2),&BR(3),&BR(4),&BR(5),&BR(6)
 AGO .M14
.E15  ANOP
&LECS    SETA  &LECS+1
&ASET    SETA  &ASET+1
         LA    &BR(&LECS),1(&BR(&ASET),&BR(&SETBR))
         AIF   (&LECS NE &SETBR).E16
 USING *+4096-&SETBR*4,&BR(2),&BR(3),&BR(4),&BR(5),&BR(6),&BR(7)
 AGO .M14
.E16  ANOP
&LECS    SETA  &LECS+1
&ASET    SETA  &ASET+1
         LA    &BR(&LECS),1(&BR(&ASET),&BR(&SETBR))
         AIF   (&LECS NE &SETBR).E17
 USING *+4096-&SETBR*4,&BR(2),&BR(3),&BR(4),&BR(5),&BR(6),&BR(7),&BR(8)
 AGO .M14
.E17  ANOP
&LECS    SETA  &LECS+1
&ASET    SETA  &ASET+1
         LA    &BR(&LECS),1(&BR(&ASET),&BR(&SETBR))
         AIF   (&LECS NE &SETBR).E18
 USING *+4096-&SETBR*4,&BR(2),&BR(3),&BR(4),&BR(5),&BR(6),&BR(7),&BR(8)*
               ,&BR(9)
 AGO .M14
.E18  ANOP
&LECS    SETA  &LECS+1
&ASET    SETA  &ASET+1
         LA    &BR(&LECS),1(&BR(&ASET),&BR(&SETBR))
         AIF   (&LECS NE &SETBR).E19
 USING *+4096-&SETBR*4,&BR(2),&BR(3),&BR(4),&BR(5),&BR(6),&BR(7),&BR(8)*
               ,&BR(9),&BR(10)
 AGO .M14
.E19  ANOP
         AGO   .M14
.E4      MNOTE 4,'MEHR ALS 10 BASISREGISTER ANGEGEBEN'
         MNOTE *,'10 BASISREGISTER WERDEN GENERIERT'
&SETBR   SETA  10
         AGO   .E3
.E5      AIF   (&SETBR EQ 0).M14
         AIF   ('&V' EQ 'V').M25
         BALR  BASIS1,0
         USING *,BASIS1
.M26     ANOP
         MNOTE *,'BASIS1 BEREITGESTELLT, GELADEN'
.M24     ANOP
         AIF   (&SETBR EQ 1).M14
         AIF   (&SETBR EQ 2).M15
         AIF   ('&V' EQ 'V').M27
         USING *+4096,BASIS2,BASIS3
.M28     ANOP
         LA    BASIS3,4095
         LA    BASIS2,1(BASIS1,BASIS3)
         LA    BASIS3,1(BASIS2,BASIS3)
         MNOTE *,'BASIS2 UND BASIS3 BEREITGESTELLT, GELADEN'
.M14     ANOP
&GLBIT   SETB  1
*
*
*   ENDE DES VORSPANNES
*
*
         MEXIT
.M15     AIF   ('&V' EQ 'V').M29
         USING *+4096,BASIS2
.M30     ANOP
         LA    BASIS2,4095
         LA    BASIS2,1(BASIS1,BASIS2)
         MNOTE *,'BASIS2 BEREITGESTELLT, GELADEN'
         AGO   .M14
.M18     AIF   (&GLBR GE &SETBR).M12
         AIF   (&GLBR EQ 0).M19
         AIF   (&GLBR EQ 1).M9
         AIF   (&GLBR EQ 2).M11
         AGO   .M20
.M1      MNOTE 12,'UNBENANNTE CONTROL-SECTION'
         AGO   .M2
.M6      MNOTE *,'KEINE BASISREGISTER GENERIERT'
         AGO   .M12
.M8      MNOTE *,'BASIS1 GENERIERT'
BASIS1   EQU   3   ** BASISREGISTER 1 **
         AGO   .M9
.M10     MNOTE *,'BASIS2 GENERIERT'
BASIS2   EQU   4   ** BASISREGISTER 2 **
         AIF   (&SETBR GE 3).M11
         AGO   .M12
.M11     MNOTE *,'BASIS3 GENERIERT'
BASIS3   EQU   5   ** BASISREGISTER 3 **
         AIF   (&SETBR EQ 3).M12
.M20     MNOTE 4,'BR=  ZU HOCH'
         AGO   .M12
.M21     MNOTE 4,'EP=  CSECT-NAME'
         AGO   .M13
.M25     USING MACR&SYSNDX,BASIS1
         LR    BASIS1,R15
         AGO   .M26
.M27     USING MACR&SYSNDX+4096,BASIS2,BASIS3
         AGO   .M28
.M29     USING MACR&SYSNDX+4096,BASIS2
         AGO   .M30
         MEND
         EJECT
         MACRO
&NAME    ERET  &REG=(14,12),&CT=,&RC=,&SA=72
*
*    ERET        24.01.77
*
.* RC=   RETURN-CODE,
.*       WIE IM RETURN-MACRO ANGEGEBEN WERDEN KANN
.* REG=  REGISTERNOTIERUNG, STANDARDWERT IST (14,12)
.*       WIE IM RETURN-MACRO ANGEGEBEN WERDEN KANN
.* CT=   T,
.*       WIE IM RETURN-MACRO ANGEGEBEN WERDEN KANN
.* SA=   LAENGE DER SAVEAREA, STANDARDWERT IST 72
         LCLC  &TRC  DEFINIERT DEN TYP VON &RC
&TRC     SETC  T'&RC  DAMIT AUF FEHLEN VON RC= GEPRUEFT WERDEN KANN
&NAME    LA    1,0(13)
         L     13,4(1)
         LR    1,2
         AIF   ('&REG' EQ 'NO').M3
         AIF   ('&TRC' EQ 'O').M1
         RETURN &REG,&CT,RC=&RC
         AGO   .M2
.M1      RETURN &REG,&CT
.M2      MNOTE *,'ERET GENERIERT'
         MEXIT
.M3      AIF   ('&TRC' EQ 'O').M4
         RETURN &CT,RC=&RC
         AGO   .M2
.M4      RETURN &CT
         AGO   .M2
         MEND
         EJECT
         TITLE 'SELECTIVE DISK COPY  - PHASE 2 -'
X001450   CSECT
         SAVE  (14,12)        SAVE REGISTERS
         BALR  R3,0           ESTABLISH ADDRESSABILITY
         USING *,3,4,5,9
NA0      EQU   *
         LM    R4,R5,KBAS
         L     R9,KBAS1
         B     NA1
KBAS     DC    A(NA0+4096,NA0+2*4096)
KBAS1    DC    A(NA0+3*4096)
NA1      EQU   *
*
*   L I N K A G E   C O N V E N T I O N
*
         LA    R12,SAVE       ADDR OF OWN SAVEAREA
         ST    R12,8(R13)       TO CALLER'S SAVE AREA
         ST    R13,4(R12)     ADDR OF CALLER'S SAVE AREA TO OWN S A
         LR    R13,R12
*
*
         LR    R6,R1          SAVE PARAMETER REGISTER
         XC    RC,RC          CLEAR RETURN CODE FIELD
         SPACE 2
         L     R1,PSAAOLD-FLC(0)  GET CURRENT ASCB
         USING ASCBEGIN,R1        ESTABLISH ADDR.
         ICM   R14,7,ASCBJBNI+1   JOBNAME POINTER ?
         BNZ   MOVEJOB            YES SAVE FOR DYNALLOC
         ICM   R14,7,ASCBJBNS+1   MUST BE STC !
MOVEJOB  MVC   TEMPJOB,0(R14)     SAVE JOB NAME
         DROP  R1
         SPACE 2
         XC    BLKTUNAD,BLKTUNAD  CLEAR ADDR OF BLKSIZE TEXT UNIT
         XC    SWITCH,SWITCH  CLEAR PROGRAM INDICATOR BYTE
         XC    COMPSW,COMPSW  CLEAR COMPRESS INDICATOR BYTE
         XC    CATMOVSW,CATMOVSW  CLEAR CAT/MOVE INDICATOR BYTE
         LOAD  EP=IEBCOPY
         ST    R0,COPYADR     ENTRY POINT ADR
         OPEN  (DSNL,,MSG,OUTPUT) OPEN
         L     R6,0(R6)       PICK UP PARM FIELD ADDR
         LH    R14,0(R6)      LENGTH OF PARM FIELD
         LTR   R14,R14        ZERO TEST
         BZ    FEHLPRM        ZERO LENGTH NOT ALLOWED
         LA    R6,2(R6)       START ADDR OF PARM FIELD
         LA    R1,0(R6,R14)
         BCTR  R1,0
         ST    R1,PRMEND      ADDR OF LAST BYTE IN PARM FIELD
NA11     EQU   *
         L     R7,APARMT      ADDR OF PARM KEYWORD TABLE
         BAL   R10,UPKEYW     LINK TO KEYWORD ROUTINE
         CLI   0(R6),C' '     BLANK MEANS NO MORE PARMS
         BE    NA2
         C     R6,PRMEND      END OF PARM FIELD ?
         BH    NA2            YES
         CLI   0(R6),C','     TEST FOR CORRECT DELIMITER
         BE    *+8
         BAL   R10,FEHLLOG    LINK TO LOGICAL ERR ROUT
         LA    R6,1(R6)       INCREASE PARM INDEX REG
         B     NA11           NEXT PARAMETER
NA2      EQU   *
         TM    SWITCH,X'01'   'TO' PARAMETER PRESENT ?
         BZ    FEHLPRM        NO
*
*   DYNAMIC ALLOCATION OF SYSUT3 AND SYSUT4
*
         LA    R6,NS99RB      DYNALLOC ADDRESSABILITY
         USING S99RB,6
         MVI   S99VERB,S99VRBAL  SET ALLOCATION VERB
         XC    S99ERROR,S99ERROR  CLEAR ERROR AND INFO FIELD
         XC    S99INFO,S99INFO
         LA    R1,UT3ATUPL    ADDR OF TEXT UNIT POINTER LIST
         ST    R1,S99TXTPP
         LA    R1,NS99RBPT    ADDR OF SVC99 REQUEST BLOCK PTR
         DYNALLOC             SVC 99 DYNAMIC ALLOCATION
         LTR   R15,R15        TEST RETURN CODE
         BNZ   DALERR         DYNALLOC NOT SUCCESSFUL
         XC    S99ERROR,S99ERROR  CLEAR ERROR AND INFO FIELD
         XC    S99INFO,S99INFO
         MVC   UT3DDNN,=C'SYSUT4'  SYSUT4 ALLOC
         LA    R1,UT3ATUPL    ADDR OF TEXT UNIT POINTER LIST
         ST    R1,S99TXTPP
         LA    R1,NS99RBPT    ADDR OF SVC99 REQUEST BLOCK PTR
         DYNALLOC SVC 99 DYNAMIC ALLOCATION
         LTR   R15,R15        TEST RETURN CODE
         BNZ   DALERR         DYNALLOC NOT SUCCESSFUL
NA3      EQU   *
         BAL   R10,GETDSN     READ DSNAME STATEMENT
NA31     EQU   *
         MVI   MBER2,C'-'     SPACE THREE
         PUT   MSG,MBER2      PRINT DSN STMT
         MVC   EBER+72(8),=8C' '  CLEAR SEQUENCE NUMBER
         CLC   EBER(4),=CL4'***'  TEXT STATEMENT ?
         BE    NA3            YES. READ NEXT STATEMENT
         TM    SWITCH,X'02'   'FROM' PARAMETER PRESENT ?
         BZ    NA4            NO. SET 'NO COPY' INDICATOR
         CLI   UNITFR,C'0'    UNIT NAME ZERO MEANS NO COPY
         BE    NA4
         CLC   EBER(4),=CL4'NCP'  STATUS = NO COPY ?
         BE    NA4            YES
         CLC   EBER(4),=4C' '
         BNE   FEHLIN         INVALID STATUS
         NI    SWITCH,X'FB'   INDICATE STATUS = COPY
         B     NA5
NA4      EQU   *
         OI    SWITCH,X'04'   INDICATE STATUS = NO COPY
NA5      EQU   *
         XC    ATRBER,ATRBER  CLEAR ATTRIBUTES AREA
         NI    CATMOVSW,X'C0'  CLEAR LOCAL CAT/MOVE BITS
         TRT   EBER+4(45),TBL  SCAN FOR DSNAME DELIMITER
         BZ    FEHLIN         INVALID DSNAME
         S     R1,=A(EBER+4)  LENGTH OF DSNAME
         BZ    FEHLIN         ERROR IF ZERO LENGTH
         MVC   DSN,DSNBL      CLEAR DSNAME WORK AREA
         BCTR  R1,0           DECREASE LENGTH FOR EX
         EX    R1,MOVE1       DSNAME TO WORK AREA
         LA    R6,EBER+5(R1)  UPDATE ATTR INDEX
NA51     EQU   *
         TRT   0(20,R6),TNOBL  SCAN FOR NEXT ATTRIBUTE
         BZ    NB1            NO MORE ATTRIBUTES
         CLI   0(R1),C'-'     CONTINUATION CHAR ?
         BNE   NA6            NO
         OI    SWITCH,X'08'   INDICATE CONTINUATION
         BAL   R10,GETDSN     READ CONTINUATION STMT
         PUT   MSG,MBER2      PRINT DSN STMT
         MVC   EBER+72(8),=8C' '  CLEAR SEQUENCE NUMBER
         NI    SWITCH,X'F7'   RESET CONT INDICATOR
         TRT   EBER(20),TNOBL SCAN FOR NEXT ATTRIBUTE
         BZ    FEHLIN         INVALID CONTINUATION CARD
NA6      EQU   *
         LR    R6,R1          ADDR OF NEXT ATTRIBUTE
         L     R7,AKEYWT      ADDR OF ATTR KEYWORD TABLE
         BAL   R10,UPKEYW     LINK TO KEYWORD ROUTINE
         CLI   0(R6),C' '     TEST FOR CORRECT DELIMITER
         BNE   FEHLIN         INVALID ATTR SPECIFICATION
         B     NA51           SCAN FOR NEXT ATTR
NB1      EQU   *
         TM    COMPSW,X'01'   COMPRESS SPECIFIED ?
         BZ    NB10           NO
         CLI   VOLOLDP,X'00'  SPECIAL VOLUME ?
         BNE   NB1B           YES
         MVC   VOLOLDP,VOLFR  NO. TAKE GLOBAL FROM VOL
         MVC   TRKCAPFL(4),TRKCAPFG DEVICE CONSTANTS
         OI   ATRSW2,X'40'
NB1B     EQU   *
         CLI   UNTOLDP,X'00'
         BNE   NB1D
         MVC   UNTOLDP,UNITFR OLD GLOBAL UNIT NAME
         OI    ATRSW2,X'80'
NB1D     EQU   *
         CLI   VOLNEW,X'00'  SPECIAL VOLUME ?
         BNE   NB1F           YES
         MVC   VOLNEW,VOLTO  NO. TAKE GLOBAL TO VOL
         MVC   TRKCAPTL(4),TRKCAPTG DEVICE CONSTANTS
         OI    ATRSW1,X'20'
NB1F     EQU   *
         CLI   UNTNEW,X'00'
         BNE   NB1H
         MVC   UNTNEW,UNITTO NEW GLOBAL UNIT NAME
         OI    ATRSW1,X'40'
NB1H     EQU   *
         MVC   VOLSAVE(14),VOLNEW  SAVE VOL SER AND DEVICE CONSTANTS
         MVC   TRKCAPSV(4),TRKCAPTL
         MVC   SPACESV,SPCPRI-1
         MVI   SPCPRI-1,X'00' CLEAR REDUCTION INDICATOR
         MVC   VOLNEW,UT3VOLV VOLSER OF WORK FILE
         MVC   UNTNEW,UT3UNTU  DEVICE NAME OF WORK FILE
         MVC   TRKCAPTL(4),TRKCAPUT  TRACK CAPACITY OF WORK FILE
*
*   READ ATTRIBUTE DATA SET AND UPDATE DYNALLOC TEXT UNITS
*
NB10     EQU   *
         XC    TUPLNEW(128),TUPLNEW  CLEAR TEXT UNIT POINTER LIST
         LA    R8,TUPLNEW     ADDR OF FIRST TEXT UNIT POINTER
         ST    R8,TUPLFREE    ADDR OF FIRST UNUSED TEXT UNIT PTR
         TM    COMPSW,X'02'   COMPRESSION DONE ?
         BO    NB13           YES
         TM    ATRSW1,X'01'   ATTRIBUTES RECORD PRESENT ?
         BO    NB11           YES
         SPACE
*   NO DADS RECORD. BUILD DDNAME AND DSNAME TEXT UNIT
         SPACE
         LA    R6,TXTAREA     TEXT UNIT ADDRESSABILITY
         USING S99TUNIT,6
         LA    R1,DALDDNAM    DYNALLOC KEY = DDNAME SPECIFICATION
         STH   R1,S99TUKEY
         LA    R1,1           NUMBER OF PARM FIELDS IS ONE
         STH   R1,S99TUNUM
         LA    R1,4           LENGTH OF PARMFIELD IS FOUR
         STH   R1,S99TULNG
         MVC   S99TUPAR(4),=C'DD01'
         L     R1,TUPLFREE    ADD ADDR OF CURRENT TEXT UNIT
         ST    R6,0(R1)          TO TEXT UNIT POINTER LIST
         LA    R6,10(R6)      INCREASE TXTAREA INDEX
         LA    R1,4(R1)       ADDR OF NEXT UNUSED TEXT UNIT PTR
         ST    R1,TUPLFREE
         LA    R1,DALDSNAM    DYNALLOC KEY = DSNAME SPECIFICATION
         STH   R1,S99TUKEY
         LA    R1,1           NUMBER OF PARM FIELDS IS ONE
         STH   R1,S99TUNUM
         MVC   S99TUPAR(44),DSN  DSNAME
         MVC S99TUPAR+44(5),=5C' '  DELIMITER BLANKS
         TRT   S99TUPAR(45),TBL  SCAN FOR DELIMITER
         LA    R2,S99TUPAR
         SR    R1,R2          LENGTH OF DSNAME
         STH   R1,S99TULNG
         L     R1,TUPLFREE
         XC    0(4,R1),0(R1)  ZERO TEXT UNIT ADDR
         LA    R1,4(R1)       ADDR OF NEXT UNUSED TEXT UNIT PTR
         ST    R1,TUPLFREE
         B     NJ1
*
NB11     EQU   *
OPENSW   NOP   NB12  WILL BE SET TO BRANCH WHEN DADS HAS BEEN OPENED
         OPEN  (DADS,INPUT)   OPEN ATTRIBUTES DATA SET
         OI    OPENSW+1,X'F0' SET OPEN SWITCH
NB12     EQU   *
         NI    ATRSW1,X'FE'   RESET ATTR RECORD INDICATOR
         PACK  DOPPLW,ATTR    CONVERT BLOCK ADDR OF ATTR RECORD
         CVB   R8,DOPPLW
         ST    R8,BLOCKADF
         READ  DADSDECB,DI,DADS,TXTAREA,'S',0,BLOCKAD  ATTR RECORD
         CHECK DADSDECB
NB13     EQU   *
         LA    R6,TXTAREA     START ADDR OF TEXT UNIT AREA
NB2      EQU   *
         TM    COMPSW,X'01'   COMPRESS SPECIFIED ?
         BO    NB31           YES
         L     R7,ATS99K      ADDR OF DYNALLOC KEY TABLE
NB3      EQU   *
         CLC   2(2,R6),0(R7)  LOOK UP DYNALLOC KEY TABLE
         BE    NB5            KEY FOUND
         CLC   0(2,R7),=2X'FF'  END OF TABLE ?
         BE    FEHLTXT        YES. INVALID DYNALLOC KEY
         LA    R7,8(R7)       NEXT TABLE ENTRY
         B     NB3
NB31     EQU   *
         L     R7,ATS99KC     ADDR OF DYNALLOC KEY TABLE -COMPRESS-
         B     NB3
NB5      EQU   *
         L     R8,TUPLFREE    ADDR OF NEXT FREE TEXT UNIT PTR
         LA    R1,2(R6)       STORE ADDR OF TEXT UNIT
         ST    R1,0(R8)       INTO TEXT UNIT POINTER LIST
         L     R15,4(R7)      ADDR OF DAL KEY UPDATE ROUT
         LTR   R15,R15        ZERO TEST
         BZ    NB6            ZERO. NO UPDATE OF TEXT UNIT
         BALR  R10,R15        LINK TO DAL KEY UPDATE ROUTINE
NB6      EQU   *
         L     R8,TUPLFREE
         LA    R8,4(R8)
         ST    R8,TUPLFREE    ADDR OF NEXT UNUSED TEXT UNIT PTR
         AH    R6,0(R6)       UPDATE TEXT UNIT INDEX
         CLC   0(2,R6),=2C' '  ANY MORE TEXT UNITS ?
         BE    NJ1            NO
         C     R6,=A(TXTAREA+189)  END OF TEXT AREA
         BL    NB2            NO. NEXT TEXT UNIT
         BAL   R10,FEHLLOG    LOGICAL ERROR
         EJECT
*************************************************************
*************************************************************
**                                                         **
**         DYNALLOC (DAL) KEY UPDATE ROUTINES              **
**                                                         **
**    TEXT UNITS OF THE ATTRIBUTE DATA SET (DADS) WILL     **
**    BE UPDATED BY ATTRIBUTES SPECIFIED IN THE DSNAME     **
**    STATEMENTS.                                          **
**                                                         **
*************************************************************
*************************************************************
         SPACE
*
*   COMPRESS PHASE:  TEST FOR CORRECT DDNAME
*
NDDN     EQU   *
         CLC   8(6,R6),=C'SYSUT2'  SYSUT2 MEANS SEQUENTIAL DATA SET
         BE    FEHLIN         COMPRESS OPTION NOT ALLOWED
         BR    R10            RETURN
*
*   FORMAT OF REQUESTED SPACE  -TRACKS
*
NTRK     EQU   *
         TM    ATRSW1,X'08'   TEST SPACE FORM INDICATOR
         BZ    0(R10)         NO UPDATE SPECIFIED. RETURN
         TM    SPCFMT,X'02'   CYLINDER ALLOC SPECIFIED ?
         BZ    0(R10)         NO. RETURN
         LA    R1,DALCYL      CHANGE DAL KEY TO CYLINDER ALLOC
         STH   R1,2(R6)
         NI    SPCFMT,X'FD'   RESET CYL INDICATOR
         TM    SPCFMT,X'FF'   ANY BIT ON IN SPACE FORMAT INDICATOR BYTE
         BNZ   0(R10)         YES. RETURN
         NI    ATRSW1,X'F7'   NO. RESET SPACE FORM INDICATOR
         BR    R10            RETURN
*
*   REQUESTED SPACE  -CYLINDERS-
*
NCYL     EQU   *
         TM    ATRSW1,X'08'   TEST SPACE FORM INDICATOR
         BZ    0(R10)         NO CHANGE OF DAL KEY SPECIFIED
         TM    SPCFMT,X'01'   TRACK ALLOC SPECIFIED ?
         BZ    0(R10)         NO. RETURN
         LA    R1,DALTRK      CHANGE DAL KEY TO TRACK ALLOC
         STH   R1,2(R6)
         NI    SPCFMT,X'FE'   RESET TRACK INDICATOR
         TM    SPCFMT,X'FF'  ANY BIT ON IN SPACE FORMAT INDICATOR BYTE?
         BNZ   0(R10)         YES.RETURN
         NI    ATRSW1,X'F7'   NO. RESET SPACE FORM INDICATOR
         BR    R10            RETURN
*
*   PRIMARY ALLOCATION
*
NPRI     EQU   *
         TM    COMPSW,X'01'   COMPRESS SPECIFIED ?
         BO    NB61           YES. BYPASS USER'S SPACE MODIFICATION
         TM    ATRSW1,X'02'   TEST PRIM ALLOC INDICATOR
         BZ    NB61           NO UPDATE SPECIFIED
         SPACE
*  SPACE REDUCTION SEQUENCE
         SPACE
         CLI   SPCPRI-1,X'FF'  SPACE REDUCTION SPECIFIED ?
         BNE   NB6M           NO
         MVC   VOLOBT,VOLFR   MOVE VOL SER TO OBTAIN WORK AREA
         CLI   VOLOLDP,X'00'  SPECIAL VOL PRESENT ?
         BE    NB60A          NO
         MVC   VOLOBT,VOLOLDP  TAKE SPECIAL VOLUME
NB60A    EQU   *
         TM    COMPSW,X'02'   COMPRESSION DONE ?
         BO    NB60B          YES
         MVC   DSNOBT,DSN     DSNAME TO OBTAIN PARAMETER LIST
NB60B    EQU   *
         OBTAIN SEARCHL
         LTR   R15,R15        TEST RETURN CODE
         BNZ   FEHLVTOC       OBTAIN NOT SUCCESSFUL
         LA  R2,DSCBAREA-44   F1 DSCB ADDRESSABILITY
         USING IECSDSL1,2
         XC    DOPPLW,DOPPLW
       MVC   DOPPLW+2(2),DS1LSTAR  ALIGN TTR OF LAST BLOCK
         LR    R1,R6          ACCESS PREVIOUS TEXT UNIT (SPACE FORMAT)
         SH    R1,=H'4'
         CLC   0(2,R1),=H'7'  TRACK ALLOCATION ?
         BE    NB6D           YES
         CLI   VOLOLDP,X'00'  SPECIAL VOLUME ?
         BNE   NB6A           YES
         MVC   TRKCYLFL,TRKCYLFG  NUMBER OF TRACKS PER CYLINDER
NB6A     EQU   *
         ST    R10,REG10TUN   SAVE RETURN REG
         L     R10,DOPPLW     LAST USED TRACK
         AH    R10,TRKCYLFL   PLUS ONE CYLINDER
         SRDL  R10,32
         LH    R1,TRKCYLFL    NUMBER OF TRACKS PER CYLINDER
         DR    R10,R1         NUMBER OF USED CYLINDER
         ST    R11,DOPPLW
         L     R10,REG10TUN   RELOAD RETURN REG
NB6D     EQU   *
         L     R1,DOPPLW      PRIMARY SPACE
         AH    R1,SPCPRI+1    INCREASED BY ADDITIONAL SPACE
         ST    R1,SPCPRI-1
NB6M     EQU   *
         MVC   8(3,R6),SPCPRI  NEW PRIMARY ALLOC
         OI    SPCFMT,X'10'   SET PRIM ALLOC CHANGE INDICATOR
         NI    ATRSW1,X'FD'   RESET PRIM ALLOC INDICATOR
NB61     EQU   *
*    SPACE CONVERSION SEQUENCE
         SPACE
         MVC   SPCPRI,8(R6)   OLD PRIMARY SPACE
         CLI   VOLOLDP,X'00'  SPECIAL VOLUME ?
         BNE   NB62           YES
         MVC   TRKCAPFL(4),TRKCAPFG  TRACK CAPACITY, NO. OF TRACKS/CYL
NB62     EQU   *
         CLI   VOLNEW,X'00'   SPECIAL RECEIVING VOL ?
         BNE   NB63           YES
         MVC   TRKCAPTL(4),TRKCAPTG  TRACK CAPACITY, NO. OF TRACKS/CYL
NB63     EQU   *
         CLC   SPCPRI,=3X'00' NO CONVERSION IF SPACE ZERO
         BE    0(R10)         RETURN
         CLC   TRKCAPFL,TRKCAPTL  COMPARE OLD AND NEW TRACK CAPACITY
         BNE   NB64           NOT EQUAL. CONVERSION REQUIRED
         CLC   TRKCYLFL,TRKCYLTL  COMP OLD AND NEW NO. OF TRK/CYL
         BE    0(R10)         EQUAL. NO CONVERSION
NB64     EQU   *
         CLC   TRKCAPFL,TRKCAPTL  DIFFERENT TRACK CAPACITY ?
         BE    NB69           NO.
         SPACE 5
SBV10    EQU   *                                           PA 10788 SBV
         ST    R10,REG10TUN        SAVE RETURN REG         PA 10788 SBV
         LA    R1,TXTAREA          START ADDR TEXT UNIT    PA 10788 SBV
SBV30    EQU   *                                           PA 10788 SBV
         CLC   2(2,R1),=X'0030'    LOOK UP DYNALL KEY TAB  PA 10788 SBV
         BE    SBV50               YES, BLKSIZE            PA 10788 SBV
         CLC   2(2,R1),=X'000C'    LOOK UP DIR
         BE    DIRST               YES, DIR
         CLC   2(2,R1),=X'0007'    LOOK UP DYNALL KEY TAB  PA 10788 SBV
         BNE   AHR1                YES, BLKSIZE            PA 10788 SBV
         OI    SWITCHX,X'80'
AHR1     AH    R1,0(R1)            UPDAT TEXT UNIT INDEX   PA 10788 SBV
         CLC   0(2,R1),=2C' '      ANY MORE TEXT UNITS ?   PA 10788 SBV
         BE    SBV90               NO                      PA 10788 SBV
         C     R1,=A(TXTAREA+189)  END OF TEXTAREA ?       PA 10788 SBV
         BL    SBV30               NO, NEXT TEXT UNIT      PA 10788 SBV
         B     SBV90               CONVERSION              PA 10788 SBV
         SPACE
DIRST    EQU   *
         ST    R1,SAVEDIR          A(TEXTUNIT)
         B     AHR1
SAVEDIR  DC    F'0'
         SPACE
SBV50    EQU   *                                           PA 10788 SBV
         MVC   BLKS,8(R1)          SAVE BLKSIZE
         B     AHR1                                        PA 20310 SBV
         SPACE 2
UCBUNF   LA    R0,ANZUN
         LA    R15,UCBUN
CLCR1    EQU   *
         CLC   0(8,R1),0(R15)
         BE    UCBUNF1
         LA    R15,9(R15)
         BCT   R0,CLCR1
         DC    X'0000'
UCBUNF1  IC    R0,8(R15)
         BR    R14
   SPACE 2
SBV90    EQU   *                                           PA 10788 SBV
         SPACE 5                                           PA 10788 SBV
         LA    R1,UNITFR
         BAL   R14,UCBUNF
         STC   R0,DEVTM+3
         SPACE
         LA    R1,UNITTO
         BAL   R14,UCBUNF
         STC   R0,DEVT+3
         SPACE
   SPACE 5
         TRKCALC FUNCTN=TRKBAL,TYPE=DEVTM+3,RKDD=BLOCK,REGSAVE=YES
         LTR   R15,R15
         BNZ   0
         STH   R0,BALANCE
         TRKCALC FUNCTN=TRKCAP,TYPE=DEVTM+3,RKDD=BLOCK,REGSAVE=YES,    X
               BALANCE=BALANCE
         LTR   R15,R15
         BNZ   0
         STH   R0,BLKTRKO
   SPACE 5
         TRKCALC FUNCTN=TRKBAL,TYPE=DEVT+3,RKDD=BLOCK,REGSAVE=YES
         LTR   R15,R15
         BNZ   0
         STH   R0,BALANCE
         TRKCALC FUNCTN=TRKCAP,TYPE=DEVT+3,RKDD=BLOCK,REGSAVE=YES,     X
               BALANCE=BALANCE
         LTR   R15,R15
         BNZ   0
         STH   R0,BLKTRKN
*  TRACK CAPACITIES NOT EQUAL
         ST    R10,REG10TUN   SAVE RETURN REG
         SR    R0,R0
         ICM   R15,15,SAVEDIR                PO ?
         BZ    NOPO                          NO
         SR    R1,R1
         ICM   R1,7,8(R15)                   # DIR
         SR    R0,R0
         LA    R14,46    ***************** # DIR PRO 3380 ********
         DR    R0,R14                        # TRACKS
         LTR   R0,R0
         BZ    *+8                           NO REMAINDER
         LA    R1,1(R1)                      + 1 TRACK
         LR    R0,R1
         ST    R0,SAVEDIR                    SAVE # TRACKS
         SPACE 2
NOPO     EQU   *
         L     R1,SPCPRI-1
         TM    SWITCHX,X'80'
         BO    SBV100
         MH    R1,TRKCYLFG
SBV100   EQU   *
         SR    R1,R0
         MH    R1,BLKTRKO
         LH    R14,BLKTRKN
         SR    R0,R0
         DR    R0,R14
         A     R1,SAVEDIR                   ADD # TRACKS FOR DIR
         TM    SWITCHX,X'80'
         BO    SBV101
         SR    R0,R0
         LH    R14,TRKCYLTG
         DR    R0,R14
SBV101   EQU   *
         LA    R1,1(R1)
         TM    SWITCHX,X'80'                WAS CYL ALLOC ?
         BZ    CYLALLO
         LA    R1,1(R1)                     + 1 TRACK
CYLALLO  EQU   *
         SR    R0,R0
         ST    R0,SAVEDIR
         ST    R1,SPCPRI-1
         NI    SWITCHX,255-X'80'
   SPACE 2
NB69     EQU    *
         MVC   8(3,R6),SPCPRI  CONVERTED SPACE
         L     R10,REG10TUN   RELOAD RETURN REG
         BR    R10            RETURN
SWITCHX  DC    X'0',X'0'
*
*    SECONDARY ALLOCATION
*
NSEC     EQU   *
         TM    ATRSW1,X'04'   TEST SEC ALLOC INDICATOR
         BO    NB7            UPDATE SPECIFIED.
         TM    SPCFMT,X'10'   PRIMARY ALLOC CHANGED ?
         BZ    0(R10)         NO. RETURN
         CLI   SPCSEC-1,X'FF' SPACE REDUCTION SPECIFIED ?
         BE    NB8            YES. 2ND SPACE ALLOC REMAINS UNCHANGED
         L     R1,TUPLFREE    ADDR OF SEC ALLOC TEXT UNIT PTR
         XC    0(4,R1),0(R1)  NULLIFY SEC ALLOC POINTER
         B     NB8
NB7      EQU   *
         MVC   8(3,R6),SPCSEC  NEW SECONDARY ALLOC
NB8      EQU   *
         NI    ATRSW1,X'F9'   RESET SPACE ALLOC INDICATORS
         BR    R10            RETURN
*
*   DIRECTORY BLOCK ALLOCATION
*
NDIR     EQU   *
         TM    ATRSW1,X'80'   TEST DIR BLK INDICATOR
         BZ    0(R10)         NO UPDATE SPECIFIED
         MVC   8(3,R6),SPCDIR  NEW DIRECTORY BLOCK ALLOC
         NI    ATRSW1,X'7F'   RESET DIR BLK INDICATOR
         BR    R10            RETURN
*
*   FORMAT OF REQUESTED SPACE  -CONTIG/NONCONTIG-
*
NFMT     EQU   *
         TM    ATRSW1,X'08'   TEST FORMAT INDICATOR
         BZ    0(R10)         NO UPDATE SPECIFIED. RETURN
         TM    SPCFMT,X'04'   TEST CONTIG BIT
         BO    NB9            CONTIG IS SPECIFIED
         TM    SPCFMT,X'08'   TEST NONCONTIG BIT
         BZ    NC1            NO UPDATE SPECIFIED
         L     R1,TUPLFREE    ADDR OF PTR TO SPACE FORM TEXT UNIT
         XC    0(4,R1),0(R1)  NULLIFY SPACE FORM PTR (NONCONTIG)
         B     NC1
NB9      EQU   *
         MVI   8(R6),X'08'    SET FORM TEXT UNIT TO CONTIG ALLOC
NC1      EQU   *
         NI    SPCFMT,X'F3'   RESET FORMAT INDICATORS
         TM    SPCFMT,X'EF'   ANY BIT ON IN FORMAT INDICATOR BYTE
         BNZ   0(R10)         YES. RETURN
         NI    ATRSW1,X'F7'   RESET FORMAT INDICATOR
         BR    R10            RETURN
*
*   EXPIRATION DATE
*
NEXP     EQU   *
         TM    ATRSW1,X'10'   TEST EXPDT INDICATOR
         BZ    0(R10)         NO UPDATE SPECIFIED
         CLC   EXPDTC,=5C'00'  ZERO EXPDT SPECIFIED ?
         BE    NC2            YES
         MVC   8(5,R6),EXPDTC  NEW EXPIRATION DATE
         B     NC3
NC2      EQU   *
         L     R1,TUPLFREE    NULLIFY EXPDT
         XC    0(4,R1),0(R1)
NC3      EQU   *
         NI    ATRSW1,X'EF'   RESET EXPDT INDICATOR
         BR    R10            RETURN
*
*   B L O C K S I Z E
*
NBLK     EQU   *
         LA    R1,2(R6)       SAVE
         ST    R1,BLKTUNAD    ADDR OF BLOCKSIZE TEXT UNIT
         TM    COMPSW,X'01'   COMPRESS SPECIFIED ?
         BO    NC31           YES. BYPASS USER BLOCK SIZE MODIFICATION
         TM    ATRSW2,X'04'   TEST BLKSIZE INDICATOR
         BZ    NC31           NO UPDATE SPECIFIED
         MVC   8(2,R6),BLKL   NEW BLOCKSIZE
         NI    ATRSW2,X'FB'   RESET BLKSIZE INDICATOR
         BR    R10            RETURN
NC31     EQU   *
         MVC   BLKL,8(R6)     STORE BLOCK SIZE FOR REBLOCK ROUT
         BR    R10            RETURN
*
*   L O G I C A L   R E C O R D   L E N G T H
*
NLRL     EQU   *
         TM    COMPSW,X'01'   COMPRESS SPECIFIED ?
         BO    NC4            YES. BYPASS USER MODIFICATION
         TM    ATRSW2,X'02'   TEST LRECL INDICATOR
         BZ    NC4            NO UPDATE SPECIFIED
         MVC   8(2,R6),LRECL  NEW LRECL
         NI    ATRSW2,X'FD'   RESET LRECL INDICATOR
         BR    R10            RETURN
NC4      EQU   *
         MVC   LRECL,8(R6)    STORE LRECL FOR REBLOCKING ROUTINE
         BR    R10            RETURN
*
*   R E C O R D   F O R M A T
*
NRFM     EQU   *
         TM    COMPSW,X'01'   COMPRESS SPECIFIED ?
         BO    ND6            YES. BYPASS USER MODIFICATION
         TM    ATRSW2,X'01'   TEST RECFM INDICATOR
         BZ    ND1            NO UPDATE SPECIFIED
         MVC   8(1,R6),RECFM  NEW RECORD FORMAT
         NI    ATRSW2,X'FE'   RESET RECFM INDICATOR
*
ND1      EQU   *    REBLOCKING SEQUENCE
*
         TM    ATRSW2,X'08'   REBLOCKING SPECIFIED ?
         BZ    ND6            NO.
         NI    ATRSW2,X'F7'   CLEAR REBLOCK INDICATOR
         TM    8(R6),X'C0'    RECFM = U ?
         BO    0(R10)         YES. NO REBLOCKING
         TM    8(R6),X'10'    BLOCKED RECORDS ?
         BZ    0(R10)         NO. NO REBLOCKING
         CLC   BLKTUNAD,=F'0' OLD BLOCKSIZE PRESENT ?
         BE    0(R10)         NO. RETURN
         MVC   DOPPLW(2),TRKCAPTG  TRACK CAPACITY OF RECEIVING VOLUME
         CLI   VOLNEW,X'00'   SPECIAL RECEIVING VOLUME ?
         BE    NDN            NO
NDM      EQU   *
         MVC   DOPPLW(2),TRKCAPTL  TRACK CAPACITY OF RECEIVING VOLUME
NDN      EQU   *
         TM    8(R6),X'40'    RECFM = V ?
         BO    ND5            YES. TAKE FULL TRACK CAPACITY
         TM    8(R6),X'80'    RECFM = F ?
         BZ    0(R10)         NO. RETURN
         SPACE
*  RECFM = FB.
         SPACE
ND11     EQU   *
         LH    R1,LRECL       LOAD LRECL
         LTR   R1,R1          ZERO TEST
         BZ    0(R10)         RETURN IF ZERO
         ST    R10,REG10TUN   SAVE RETURN REG
         SR    R10,R10        CLEAR WORK                     PA 20310
         ICM   R10,3,DOPPLW   TRACK CAPACITY
         SRDL  R10,32         ADJUST FOR DIVIDE
         DR    R10,R1         TRACK CAPACITY / LRECL
         XR    R10,R10
         MR    R10,R1           * LRECL = BLOCKSIZE
         STH   R11,DOPPLW     STORE BLOCK SIZE
         L     R10,REG10TUN   RELOAD RETURN REG
ND5      EQU   *
         L     R1,BLKTUNAD    ADDR OF BLOCK SIZE TEXT UNIT
         MVC   6(2,R1),DOPPLW  MOVE NEW BLOCK SIZE TO TEXT UNIT
         MVC   6(2,R1),BLKL    ********************************     SBV
         BR    R10            RETURN
ND6      EQU   *
*   AUTOMATIC REBLOCKING ROUTINE
         SPACE
         CLI   VOLOLDP,X'00'  SPECIAL FROM VOLUME ?
         BNE   *+10           YES
         MVC   TRKCAPFL,TRKCAPFG  TRACK CAPACITY OF SPECIAL VOL
         CLI   VOLNEW,X'00'   SPECIAL RECEIVING VOL ?
         BNE   *+10           YES
         MVC   TRKCAPTL,TRKCAPTG  TRACK CAPACITY OF RECEIVING VOL
         CLC   TRKCAPFL,TRKCAPTL  TRACK CAPACITIES EQUAL ?
         BE    0(R10)         YES. NO REBLOCKING
         TM    8(R6),X'C0'    RECFM = U ?
         BO    ND71           YES.
         TM    8(R6),X'10'    BLOCKED RECORDS ?
         BZ    ND7            NO. NO REBLOCKING
         CLC   BLKTUNAD,=F'0'  OLD BLKSIZE PRESENT ?
         BE    ND7            NO. NO REBLOCKING
         CLC   BLKL,TRKCAPTL  BLKLE GREATER THAN TRACK CAP (NEW)
         BH    NDM            YES. FORCE REBLOCKING
         MVC   DOPPLW(2),TRKCAPTL  TRACK CAPACITY OF RECEIVING VOL
         TM    8(R6),X'40'    RECFM = V ?
         BO    ND61           YES
         TM    8(R6),X'80'    REVFM = F ?
         BZ    ND7            NO
         LH    R1,BLKL        LOAD BLOCK SIZE
         AH    R1,LRECL       ADD RECORD LENGTH
         CH    R1,TRKCAPFL  BLKSIZE + LRECL GREATER THAN OLD TRK CAP?
         BH    ND11           YES. REBLOCKING WILL BE DONE
         BR    R10            NO. RETURN
ND61     EQU   *    RECFM = V
         CLC   BLKL,TRKCAPFL  BLKSIZE = OLD TRK CAP ?
         BE    ND5            YES. REBLOCKING WILL BE DONE
         BR    R10            NO. RETURN
ND7      EQU   *  UNABLE TO REBLOCK
         CLC   BLKL,TRKCAPTL  BLKSIZE GREATER THAN NEW TRK CAP ?
         BNH   0(R10)         NO. RETURN
         NI    8(R6),X'00'    SET RECFM TO ZERO
         XC    DOPPLW,DOPPLW  ZERO NEW BLOCK SIZE
         OI    SWITCH,X'04'   SET NO COPY SWITCH
         B     ND5
         SPACE
*  PDS WITH RECFM=U WILL BE REBLOCKED
         SPACE
ND71     EQU   *
         LA    R1,TXTAREA     ADDR OF FIRST TEXT UNIT
         CLC   2(2,R1),=X'0001'   DDNAME TEXT UNIT ?
         BE    *+8            YES
         BAL   R10,FEHLLOG    NO. DADS ERROR
         CLC   8(6,R1),=C'SYSUT2'  SEQUENTIAL DATA SET ?
         BE    ND7            YES, NO REBLOCKING
         CLC   BLKL,TRKCAPTL  BLKSIZE GREATER THAN NEW TRACK CAP ?
         BH    ND7            YES.
         MVC   DOPPLW(2),TRKCAPTL  TRACK CAPICITY OF 'TO'-VOLUME
         B     ND61           BRANCH TO REBLOCK
*
*   DELETE TEXT UNIT
*
DELTU    EQU   *
         L     R1,TUPLFREE    ADDR OF CURRENT TEXT UNIT POINTER
         XC    0(4,R1),0(R1)  SET POINTER TO ZERO
         BR    R10            RETURN
         EJECT
NJ1      EQU   *
         MVC   TXTAREA2,TXTBL  CLEAR ADDITIONAL TEXT UNIT AREA
         LA    R6,TXTAREA2    ADDRESSABILITY OF 2ND TEXT UNIT AREA
         USING S99TUNIT,6
         TM    COMPSW,X'01'   COMPRESS SPECIFIED ?
         BO    NL1            YES. NO ADDITIONAL ATTRIBUTES IN COMPR PH
         TM    ATRSW1,X'9F'   TEST ATTR SWITCH 1
         BZ    NK1    NO ADDITIONAL PART ONE ATTRIBUTES SPECIFIED
         SPACE 3
***********************************************************
***********************************************************
**                                                       **
**           ADDITIONAL  ATTRIBUTES SPECIFIED            **
**                                                       **
**           PART ONE                                    **
**                                                       **
**           SPACE(PRIMARY SECONDARY)                    **
**           TRACKS / CYLINDERS                          **
**           CONTIG / NONCONTIG                          **
**           DIR(NUMBER OF DIRECTORY BLOCKS)             **
**           EXPDT(EXPIRATION DATE)                      **
**                                                       **
**   THE ABOVE ATTRIBUTES WILL BE CONVERTED TO           **
**   DYNALLOC TEXT UNITS AND PLACED IN THE 2ND           **
**   TEXT UNIT AREA                                      **
**                                                       **
***********************************************************
***********************************************************
         SPACE
*
*   PRIMARY ALLOCATION
*
         TM    ATRSW1,X'02'   PRIMARY ALLOCATION SPECIFIED ?
         BZ    NJ3            NO
         NI    ATRSW1,X'FD'   RESET PRIM ALLOC INDICATOR
         LA    R1,DALPRIME    DAL KEY 'PRIMARY ALLOC'
         STH   R1,S99TUKEY
         LA    R1,1           NUMBER OF LENGTH/PARM COMBINATIONS IS ONE
         STH   R1,S99TUNUM
         LA    R1,3           LENGTH OF PARM FIELD IS THREE
         STH   R1,S99TULNG
         MVC   S99TUPAR(3),SPCPRI  PRIMARY ALLOC
         L     R1,TUPLFREE    ADD ADDR OF CURRENT TEXT UNIT
         ST    R6,0(R1)         TO TEXT UNIT POINTER LIST
         LA    R6,10(R6)      INCREASE TXTAREA INDEX
         LA    R1,4(R1)       ADDR OF NEXT UNUSED TEXT UNIT POINTER
         ST    R1,TUPLFREE
*
*   SECONDARY ALLOCATION
*
         TM    ATRSW1,X'04'   SECONDARY ALLOC SPECIFIED ?
         BZ    NJ3            NO
         NI    ATRSW1,X'FB'   RESET SECONDARY ALLOC INDICATOR
         LA    R1,DALSECND    DYNALLOC KEY 'SECONDARY ALLOC'
         STH   R1,S99TUKEY
         LA    R1,1           NUMBER OF LENGTH/PARM COMBINATIONS IS ONE
         STH   R1,S99TUNUM
         LA    R1,3           LENGTH OF PARM FIELD IS THREE
         STH   R1,S99TULNG
         MVC   S99TUPAR(3),SPCSEC  SECONDARY ALLOC
         L     R1,TUPLFREE    ADD ADDR OF CURRENT TEXT UNIT
         ST    R6,0(R1)          TO TEXT UNIT POINTER LIST
         LA    R6,10(R6)      INCREASE TXTAREA INDEX
         LA    R1,4(R1)       ADDR OF NEXT UNUSED TEXT UNIT PTR
         ST    R1,TUPLFREE
*
*   FORMAT OF REQUESTED SPACE
*
NJ3      EQU   *
         TM    ATRSW1,X'08'   ANY FORMAT ATTR SPECIFIED ?
         BZ    NJ4            NO
         NI    ATRSW1,X'F7'   RESET FORMAT INDICATOR
         SPACE
*          TRACKS / CYLINDERS
         SPACE
         TM    SPCFMT,X'03'   TRACK OR CYLINDER ALLOC SPECIFIED ?
         BZ    NJ32           NO
         LA    R1,DALTRK      DYNALLOC KEY = TRACK ALLOC
         TM    SPCFMT,X'01'   TRACK ALLOC SPECIFIED ?
         BO    NJ31           YES
         LA    R1,DALCYL      DYNALLOC KEY = CYLINDER ALLOC
NJ31     EQU   *
         STH   R1,S99TUKEY    DYNALLOC KEY
         NI    SPCFMT,X'FC'   RESET TRACK/CYL INDICATORS
         XC    S99TUNUM,S99TUNUM  NUMBER OF LENGTH/PARM COMB IS ZERO
         L     R1,TUPLFREE    ADD ADDR OF CURRENT TEXT UNIT
         ST    R6,0(R1)         TO TEXT UNIT POINTER LIST
         LA    R6,4(R6)       INCREASE TXTAREA PTR
         LA    R1,4(R1)       ADDR OF NEXT UNUSED TEXT UNIT PTR
         ST    R1,TUPLFREE
*
*   NONCONTIG
*
NJ32     EQU   *
         TM    SPCFMT,X'08'   NONCONTIG SPECIFIED ?
         BZ    NJ33           NO
         NI    SPCFMT,X'F7'   RESET NONCONTIG INDICATOR
         B     NJ4
*
*   CONTIG
*
NJ33     EQU   *
         TM    SPCFMT,X'04'   CONTIG SPECIFIED ?
         BZ    NJ4            NO
         NI    SPCFMT,X'FB'   RESET CONTIG INDICATOR
         LA    R1,DALSPFRM    DYNALLOC KEY = SPACE FORMAT
         STH   R1,S99TUKEY
         LA    R1,1           NUMBER OF LENGTH/PARM COMBINATIONS IS ONE
         STH   R1,S99TUNUM
         STH   R1,S99TULNG    LENGTH OF PARM FIELD IS ONE
         MVI   S99TUPAR,X'08'  SPACE FORMAT IS CONTIG
         L     R1,TUPLFREE    ADD ADDR OF CURRENT TEXT UNIT
         ST    R6,0(R1)          TO TEXT UNIT POINTER LIST
         LA    R6,8(R6)       INCREASE TXTAREA INDEX
         LA    R1,4(R1)       ADDR OF NEXT UNUSED TEXT UNIT PTR
         ST    R1,TUPLFREE
NJ4      EQU   *
*
*   DIRECTORY BLOCK ALLOC
*
         TM    ATRSW1,X'80'   DIRECTORY BLOCK ALLOC SPECIFIED ?
         BZ    NJ5            NO
         NI    ATRSW1,X'7F'   RESET DIR BLK INDICATOR
         LA    R1,DALDIR      DYNALLOC KEY = DIRECTORY BLOCK ALLOC
         STH   R1,S99TUKEY
         LA    R1,1           NUMBER OF LENGTH/PARM COMBINATIONS IS ONE
         STH   R1,S99TUNUM
         LA    R1,3           LENGTH OF PARM FIELD IS THREE
         STH   R1,S99TULNG
         MVC   S99TUPAR(3),SPCDIR  NUMBER OF DIRECTORY BLOCKS
         L     R1,TUPLFREE    ADD ADDR OF CURRENT TEXT UNIT
         ST    R6,0(R1)          TO TEXT UNIT POINTER LIST
         LA    R6,10(R6)      INCREASE TXTAREA INDEX
         LA    R1,4(R1)       ADDR OF NEXT UNUSED TEXT UNIT PTR
         ST    R1,TUPLFREE
*
*    EXPIRATION DATE
*
NJ5      EQU   *
         TM    ATRSW1,X'10'   EXPDT SPECIFIED ?
         BZ    NK1            NO
         NI    ATRSW1,X'EF'   RESET EXPDT INDICATOR
         LA    R1,DALEXPDT    DYNALLOC KEY = EXPDT
         STH   R1,S99TUKEY
         LA    R1,1           NUMBER OF LENGTH/PARM COMBINATIONS IS ONE
         STH   R1,S99TUNUM
         LA    R1,5           LENGTH OF PARM FIELD IS FIVE
         STH   R1,S99TULNG
         MVC   S99TUPAR(5),EXPDTC  EXPIRATION DATE
         L     R1,TUPLFREE    ADD ADDR OF CURRENT TEXT UNIT
         ST    R6,0(R1)          TO TEXT UNIT POINTER LIST
         LA    R6,12(R6)      INCREASE TXTAREA INDEX
         LA    R1,4(R1)       ADDR OF NEXT UNUSED TEXT UNIT PTR
         ST    R1,TUPLFREE
         EJECT
************************************************************
************************************************************
**                                                        **
**    ADDITIONAL ATTRIBUTES SPECIFIED                     **
**                                                        **
**    PART TWO                                            **
**                                                        **
**    RECFM(RECORD FORMAT)                                **
**    LRECL(LOGICAL RECORD LENGTH)                        **
**    BLKSIZE(BLOCKSIZE)                                  **
**                                                        **
************************************************************
************************************************************
         SPACE
*
*   RECORD FORMAT
*
NK1      EQU   *
         TM    ATRSW2,X'07'   ANY ADDITIONAL PART TWO ATTRIBUTES ?
         BZ    NL1            NO
         TM    ATRSW2,X'01'   RECFM SPECIFIED ?
         BZ    NK2            NO
         NI    ATRSW2,X'FE'   RESET RECFM INDICATOR
         LA    R1,DALRECFM    DYNALLOC KEY = RECFM
         STH   R1,S99TUKEY
         LA    R1,1           NUMBER OF LENGTH/PARM COMBINATIONS IS ONE
         STH   R1,S99TUNUM
         STH   R1,S99TULNG    LENGTH OF PARM FIELD IS ONE
         MVC   S99TUPAR(1),RECFM  RECORD FORMAT
         L     R1,TUPLFREE    ADD ADDR OF CURRENT TEXT UNIT
         ST    R6,0(R1)       TO TEXT UNIT POINTER LIST
         LA    R6,8(R6)       INCREASE TXTAREA INDEX
         LA    R1,4(R1)       ADDR OF NEXT UNUSED TEXT UNIT PTR
         ST    R1,TUPLFREE
*
*   LOGICAL RECORD LENGTH
*
NK2      EQU   *
         TM    ATRSW2,X'02'   LRECL SPECIFIED ?
         BZ    NK3            NO
         NI    ATRSW2,X'FD'   RESET LRECL INDICATOR
         LA    R1,DALLRECL    DYNALLOC KEY = LRECL
         STH   R1,S99TUKEY
         LA    R1,1           NUMBER OF LENGTH/PARM COMBINATIONS IS ONE
         STH   R1,S99TUNUM
         LA    R1,2           LENGTH OF PARM FIELD IS TWO
         STH   R1,S99TULNG
         MVC   S99TUPAR(2),LRECL  LOGICAL RECORD LENGTH
         L     R1,TUPLFREE    ADD ADDR OF CURRENT TEXT UNIT
         ST    R6,0(R1)          TO TEXT UNIT POINTER LIST
         LA    R6,8(R6)       INCREASE TXTAREA INDEX
         LA    R1,4(R1)       ADDR OF NEXT UNUSED TEXT UNIT PTR
         ST    R1,TUPLFREE
*
*   BLOCKSIZE
*
NK3      EQU   *
         TM    ATRSW2,X'04'   BLOCKSIZE SPECIFIED?
         BZ    NL1            NO
         NI    ATRSW2,X'FB'   RESET BLKSIZE INDICATOR
         LA    R1,DALBLKSZ    DYNALLOC KEY = BLKSIZE
         STH   R1,S99TUKEY
         LA    R1,1           NUMBER OF LENGTH/PARM COMBINATIONS IS ONE
         STH   R1,S99TUNUM
         LA    R1,2           LENGTH OF PARM FIELD IS TWO
         STH   R1,S99TULNG
         MVC   S99TUPAR(2),BLKL  BLOCKSIZE
         L     R1,TUPLFREE    ADD ADDR OF CURRENT TEXT UNIT
         ST    R6,0(R1)          TO TEXT UNIT POINTER LIST
         LA    R6,8(R6)       INCREASE TXTAREA INDEX
         LA    R1,4(R1)       ADDR OF NEXT UNUSED TEXT UNIT PTR
         ST    R1,TUPLFREE
         EJECT
***************************************************************
***************************************************************
**                                                           **
**   THE FOLLOWING REQUIRED ATTRIBUTES WILL BE ADDED         **
**                                                           **
**   TOVOL(RECEIVING VOL SER)                                **
**   TOUNIT(RECEIVING UNIT  - DEFAULT IS 'SYSDA' -)          **
**   STATUS = NEW                                            **
**   DISPOSITION = KEEP                                      **
**   IF PASSWORD PROTECTION SPECIFIED:                       **
**               DATA PROTECTION (ALL / UPDATE)              **
**                                                           **
***************************************************************
***************************************************************
         SPACE
NL1      EQU   *
*
*   RECEIVING VOLUME SERIAL NUMBER
*
         LA    R1,DALVLSER    DYNALLOC KEY = VOL SER
         STH   R1,S99TUKEY
         LA    R1,1           NUMBER OF PARM FIELDS IS ONE
         STH   R1,S99TUNUM
         LA    R1,6           LENGTH OF PARM FIELD IS SIX
         STH   R1,S99TULNG
         MVC   S99TUPAR(6),VOLTO  VOL SER SPECIFIED IN PARM FIELD
         TM    COMPSW,X'01'   COMPRESS SPECIFIED ?
         BO    NL11           YES.
         TM    ATRSW1,X'20'   OTHER VOL SER SPECIFIED FOR DATA SET ?
         BZ    NL2            NO.
NL11     EQU   *
         MVC   S99TUPAR(6),VOLNEW  VOL SER SPECIFIED IN DSN STMT
NL2      EQU   *
         L     R1,TUPLFREE    ADD ADDR OF CURRENT TEXT UNIT
         ST    R6,0(R1)          TO TEXT UNIT POINTER LIST
         LA    R6,12(R6)      INCREASE TXTAREA INDEX
         LA    R1,4(R1)       ADDR OF NEXT UNUSED TEXT UNIT PTR
         ST    R1,TUPLFREE
*
*   UNIT
*
         LA    R1,DALUNIT     DYNALLOC KEY = UNIT SPECIFICATION
         STH   R1,S99TUKEY
         LA    R1,1           NUMBER OF PARM FIELDS IS ONE
         STH   R1,S99TUNUM
         MVC   S99TUPAR(8),UNITTO  UNIT SPECIFIED IN PARM FIELD
         TM    COMPSW,X'01'   COMPRESS SPECIFIED ?
         BO    NL21
         TM    ATRSW1,X'40'   OTHER UNIT FOR DATA SET SPECIFIED ?
         BZ    NL3            NO
NL21     EQU   *
         MVC   S99TUPAR(8),UNTNEW  UNIT SPECIFIED IN DSNAME STATEMENT
NL3      EQU   *
         LA    R1,S99TUPAR+8  DEFAULT DELIMITER
         TRT   S99TUPAR(9),TBL  SCAN FOR UNIT NAME DELIMITER
         LA    R2,S99TUPAR
         SR    R1,R2            LENGTH OF UNIT NAME
         BNZ   *+8
         BAL   R10,FEHLLOG    NO UNIT NAME. LOGICAL ERROR
         STH   R1,S99TULNG
         L     R1,TUPLFREE    ADD ADDR OF CURRENT TEXT UNIT
         ST    R6,0(R1)          TO TEXT UNIT POINTER LIST
         LH    R8,S99TULNG    INCREASE TXTAREA INDEX
         LA    R8,1(R8)
         SRL   R8,1(0)
         SLL   R8,1(0)
         LA    R6,6(R6,R8)
         LA    R1,4(R1)       ADDR OF NEXT UNUSED TEXT UNIT PTR
         ST    R1,TUPLFREE
*
*   S T A T U S
*
         LA    R1,DALSTATS    DYNALLOC KEY = STATUS SPECIFICATION
         STH   R1,S99TUKEY
         LA    R1,1           NUMBER OF PARM FIELDS IS ONE
         STH   R1,S99TUNUM
         STH   R1,S99TULNG    LENGTH OF PARM FIELD IS ONE
         MVI   S99TUPAR,X'04'  STATUS = NEW
         L     R1,TUPLFREE    ADD ADDR OF CURRENT TEXT UNIT
         ST    R6,0(R1)          TO TEXT UNIT POINTER LIST
         LA    R6,8(R6)       INCREASE TXTAREA INDEX
         LA    R1,4(R1)       ADDR OF NEXT UNUSED TEXT UNIT PTR
         ST    R1,TUPLFREE
*
*   D I S P O S I T I O N
*
         LA    R1,DALNDISP    DYNALLOC KEY = NORMAL DISP SPECIFICATION
         STH   R1,S99TUKEY
         LA    R1,1           NUMBER OF PARM FIELDS IS ONE
         STH   R1,S99TUNUM
         STH   R1,S99TULNG    LENGTH OF PARM FIELD IS ONE
         MVI   S99TUPAR,X'08'  DISP = KEEP
         TM    COMPSW,X'01'   COMPRESS SPECIFIED ?
         BZ    NL31           NO
         MVI   S99TUPAR,X'04' SET DISP TO DELETE
NL31     EQU   *
         L     R1,TUPLFREE    ADD ADDR OF CURRENT TEXT UNIT
         ST    R6,0(R1)          TO TEXT UNIT POINTER LIST
         LA    R6,8(R6)       INCREASE TXTAREA INDEX
         LA    R1,4(R1)       ADDR OF NEXT UNUSED TEXT UNIT PTR
         ST    R1,TUPLFREE
*
*   DATA PROTECTION
*
         TM    COMPSW,X'01'   COMPRESS SPECIFIED ?
         BO    NL4            YES. DATA PROTECTION MUST NOT BE SET
         TM    ATRSW2,X'20'   OLD PASSWORD SPECIFIED ?
         BZ    NL4            NO.
         LA    R1,DALPASPR    DYNALLOC KEY = DATA PROTECTION
         STH   R1,S99TUKEY
         LA    R1,1           NUMBER OF PARM FIELDS IS ONE
         STH   R1,S99TUNUM
         STH   R1,S99TULNG    LENGTH OF PARM FIELD IS ONE
         MVC   S99TUPAR(1),PASSWFL  DATA PROTECTION   X'10'  FULL
*                                                     X'30'  UPDATE
         L     R1,TUPLFREE    ADD ADDR OF CURRENT TEXT UNIT
         ST    R6,0(R1)          TO TEXT UNIT POINTER LIST
         LA    R6,8(R6)       INCREASE TXTAREA INDEX
         LA    R1,4(R1)       ADDR OF NEXT UNUSED TEXT UNIT PTR
         ST    R1,TUPLFREE
*
*   BUILD TEMPORARY DSNAME
*
NL4      EQU   *
         LA    R1,DALDSNAM    DYNALLOC KEY -DSNAME-
         STH   R1,S99TUKEY
         LA    R1,1           NUMBER OF PARM FIELDS IS ONE
         STH   R1,S99TUNUM
         TM    COMPSW,X'01'   COMPRESS SPECIFIED ?
         BO    NL4A           YES
         LA    R1,L'TEMPDSN   LENGTH OF OWN TEMP NAME
         STH   R1,S99TULNG
         MVC   S99TUPAR(L'TEMPDSN),TEMPDSN  MOVE OWN TEMP DSNAME
         L     R1,TUPLFREE    ADD ADDR OF CURRENT TEXT UNIT
         ST    R6,0(R1)          TO TEXT UNIT POINTER LIST
         LA    R6,6+L'TEMPDSN(R6) INCREASE TXTAREA INDEX
         B     NL4B
NL4A     EQU   *
         LA    R1,2           LENGTH OF PARM FIELD IS TWO
         STH   R1,S99TULNG
         MVC   S99TUPAR(2),=C'&&A' TEMPORARY DSNAME
         L     R1,TUPLFREE    ADD ADDR OF CURRENT TEXT UNIT
         ST    R6,0(R1)          TO TEXT UNIT POINTER LIST
         LA    R6,8(R6)       INCREASE TXTAREA INDEX
NL4B     EQU   *
         LA    R1,4(R1)       ADDR OF NEXT UNUSED TEXT UNIT PTR
         ST    R1,TUPLFREE
*
*    SPECIFY RETURN REQUEST OF TEMPORARY DSNAME
*
         LA    R1,DALRTDSN    DYNALLOC KEY = RETURN OF DSNAME
         STH   R1,S99TUKEY
         LA    R1,1           NUMBER OF PARM FIELDS IS ONE
         STH   R1,S99TUNUM
         LA    R1,44          LENGTH OF PARM FIELD IS 44
         STH   R1,S99TULNG
         MVC   S99TUPAR(44),=44C' '  CLEAR DSN RETURN FIELD
         ST    R6,RTDSNAD     SAVE ADDR OF THIS TEXT UNIT
         L     R1,TUPLFREE    ADD ADDR OF CURRENT TEXT UNIT
         ST    R6,0(R1)          TO TEXT UNIT POINTER LIST
         LA    R6,8(R6)       INCREASE TXTAREA INDEX
         LA    R1,4(R1)       ADDR OF NEXT UNUSED TEXT UNIT PTR
         ST    R1,TUPLFREE
************************************************************
         EJECT
************************************************************
*
*   CLOSE TEXT UNIT POINTER LIST
*
NL40     EQU   *
         L     R1,TUPLFREE    PICK UP LAST TEXT UNIT POINTER
         SH    R1,=H'4'
         OI    0(R1),X'80'    SET END OF LIST INDICATOR
         EJECT
*************************************************************
*                                                           *
*              ALLOCATION OF OLD DATA SET                   *
*                                                           *
*************************************************************
         SPACE
         TM    SWITCH,X'04'   STATUS 'NO COPY' ?
         BO    NM1            YES
         OPEN  (IN,OUTPUT)    OPEN SYSIN DATA SET
         LA    R7,TXTAREA     ADDR OF PRIMARY TEXT UNIT AREA
         LA    R6,2(R7)       ADDR OF FIRST TEXT UNIT
         CLC   S99TUKEY,=X'0001'  DDNAME KEY ?
         BE    *+8            YES
         BAL   R10,FEHLLOG    NO. LOGICAL ERROR
         LH    R1,S99TULNG    LENGTH OF DDNAME
         LTR   R1,R1          ZERO TEST
         BNZ   *+8            OK
         BAL   R10,FEHLLOG    ZERO. LOGICAL ERROR
         STH   R1,DDNOLDL     STORE LENGTH INTO OLD DDNAME T U
         MVC   DDNOLDN,=8C' ' CLEAR DDNAME TEXT UNIT PARM FIELD
         BCTR  R1,0           DECREASE LENGTH FOR E
         EX    R1,MOVE2       DDNAME TO OLD DDN TEXT UNIT
         CLC   DDNOLDN,=CL8'SYSUT2'  PS DATA SET
         BE    NL5            YES
         TM    COMPSW,X'01'   COMPRESS SPECIFIED ?
         BZ    NL40M          NO
         MVC   S99TUPAR(3),=C'COM'  COMRESS DDNAME
         MVC   DDNOLDN(3),=C'COM'
NL40M    EQU   *
         TM    COMPSW,X'02'   COMPRESSION DONE ?
         BZ    NL40N          NO
         MVC   S99TUPAR(3),=C'NEW'  COPY DDNAME
         MVC   DDNOLDN(3),=C'NEW'
NL40N    EQU   *
         SPACE
*   BUILD IEBCOPY CONTROL STMT
         SPACE
         MVC   CBER,CBLANK    CLEAR SYSIN WORK AREA
         MVC   CBER(26),=C' COPY OUTDD=12345678,INDD='
         MVC   CBER+12(8),DDNOLDN  DDNAME
         MVC   DDNOLDN(3),=C'OLD'  DDNAME OLD
         TM    COMPSW,X'02'   COMPRESSION DONE ?
         BZ    NL40O          NO
         MVC   DDNOLDN(3),=C'COM'  COMPRESS DDN
NL40O    EQU   *
         MVC   CBER+26(8),DDNOLDN
         MVC   CBER+34(8),=C',LIST=NO'   DONT LIST       PA 20310 SBV
         PUT   IN,CBER        WRITE IEBCOPY COPY STMT
         OI    SWITCH,X'10'   SET IEBCOPY INDICATOR
         NI    SWITCH,X'DF'   RESET IEBGENER INDICATOR
NL41     EQU   *
         TM    COMPSW,X'02'   COMPRESSION DONE ?
         BO    NL6            YES
         BAL   R10,GETDSN     READ NEXT DSNAME STMT
         TRT   EBER(16),TNOBL  SCAN FOR BEGINNING OF TEXT
         BZ    NL6            NO TEXT FOUND.
         CLC   0(2,R1),=C'M=' MEMBER STATEMENT ?
         BNE   NL6            NO.
         SPACE
*   BUILD IEBCOPY SELECT STATEMENT
         SPACE
         LR    R6,R1          SAVE ADDR OF MEMBER SPECIFICATION
         CLC   CBER(6),=C' INDD='  INDD STMT REQUIRED ?
         BNE   NL43           NO
         PUT   IN,CBER        WRITE INDD STMT
NL43     EQU   *
         PUT   MSG,MBER2      PRINT MEMBER STMT
         TRT   2(20,R6),TPUNKT  SCAN FOR COPY SEPARATOR
         BZ    NL42           NO COPY SEPARATION
         MVI   EBER,X'FF'     INDICATE COPY SEPARATION
         MVI   0(R1),C' '     CLEAR COPY SEPARATOR
NL42     EQU   *
         MVC   CBER,CBLANK    CLEAR SYSIN WORK AREA
         MVC   CBER(15),=C' SELECT MEMBER='
         MVC   CBER+15(8),2(R6)  MEMBER NAME
         PUT   IN,CBER        WRITE SELECT STATEMENT
         CLI   EBER,X'FF'     COPY SEPARATION SPECIFIED ?
         BNE   NL41           NO
         MVC   CBER,=CL80' INDD='  BUILD INDD STMT
         MVC   CBER+6(8),DDNOLDN  DDNAME
         B     NL41
         SPACE
*   BUILD IEBGENER CONTROL STMT
         SPACE
NL5      EQU   *
         MVC   CBER,CBLANK    CLEAR SYSIN WORK AREA
         MVC   CBER(9),=C' GENERATE'
         PUT   IN,CBER        WRITE IEBGENER CONTROL STMT
         MVC   DDNOLDN(6),=C'SYSUT1'  DDNAME OLD
         OI    SWITCH,X'20'   SET IEBGENER INDICATOR
         NI    SWITCH,X'EF'   RESET IEBCOPY INDICATOR
         BAL   R10,GETDSN     READ NEXT DSNAME STMT
NL6      EQU   *
         CLOSE IN             CLOSE SYSIN
         TM    COMPSW,X'02'   COMPRESSION DONE ?
         BO    NM1             NO
         AH    R7,0(R7)       POINT TO DSNAME TEXT UNIT
         LA    R6,2(R7)
         CLC   S99TUKEY,=X'0002'  DSNAME KEY ?
         BE    *+8            YES
         BAL   R10,FEHLLOG    NO. LOGICAL ERROR
         LH    R1,S99TULNG    LENGTH OF DSNAME
         LTR   R1,R1          ZERO TEST
         BNZ   *+8            OK
         BAL   R10,FEHLLOG    NO DSNAME. LOGICAL ERROR
         STH   R1,DSNOLDL
         MVC   DSNOLDN,=44C' '  CLEAR PARM FIELD OF DSN TEXT UNIT
         BCTR  R1,0           DECREASE LENGTH FOR EX
         EX    R1,MOVE3       DSNAME TO OLD DSN TEXT UNIT
         CLC   DSN,DSNOLDN    CORRECT DSN ?
         BE    *+8            OK
         BAL   R10,FEHLLOG    LOGICAL ERROR
         SPACE
*   FROM VOLUME
         SPACE
         MVC   VOLOLDV,VOLFR  VOL SER SPECIFIED IN PARM FIELD
         TM    COMPSW,X'02'   COMPRESSION DONE ?
         BO    NL63           YES
         TM    ATRSW2,X'40'   OTHER VOL SER SPECIFIED IN DSN STMT ?
         BZ    NL7            NO
NL63     EQU   *
         MVC   VOLOLDV,VOLOLDP  VOL SER SPECIFIED IN DSN STMT
NL7      EQU   *
         SPACE
*   FROM UNIT
         SPACE
         MVC   UNITOLDU,UNITFR  UNIT SPECIFIED IN PARM FIELD
         TM    COMPSW,X'02'   COMPRESSION DONE ?
         BO    NL70           YES.
         TM    ATRSW2,X'80'   OTHER UNIT SPECIFIED IN DSN STMT ?
         BZ    NL71           NO
NL70     EQU   *
         MVC   UNITOLDU,UNTOLDP  UNIT SPECIFIED IN DSN STMT
NL71     EQU   *
         LA    R1,UNITOLDU+8  DEFAULT DELIMITER
         TRT   UNITOLDU(9),TBL  SCAN FOR DELIMITER
         S     R1,=A(UNITOLDU)  LENGTH OF UNIT NAME
         STH   R1,UNITOLDL
         TM    COMPSW,X'02'   COMPRESSION DONE
         BO    NL71M          YES
         TM    ATRSW2,X'20'   PASSWORD SPECIFIED ?
         BO    NL72           YES.
NL71M    EQU   *
         OI    TUPLOEND,X'80' NO. SET END OF LIST INDICATOR
         B     NL8
         SPACE
*   PASSWORD
         SPACE
NL72     EQU   *
         NI    TUPLOEND,X'7F' CLEAR END OF LIST INDICATOR
         MVC   PSWOLDP,PASSW  PASSWORD
         LA    R1,PSWOLDP+8   DEFAULT DELIMITER
         TRT   PSWOLDP(8),TBL SCAN FOR DELIMITER
         S     R1,=A(PSWOLDP) LENGTH OF PASSWORD
         STH   R1,PSWOLDL
NL8      EQU   *
         LA    R6,NS99RB      SVC99 REQUEST BLOCK ADDRESSABILITY
         USING S99RB,6
         MVI   S99VERB,S99VRBAL  SET VERB CODE TO ALLOC
         LA    R1,TUPLOLD     ADDR OF TEXT UNIT POINTER LIST
         ST    R1,S99TXTPP
         MVI   S99TXTPP+8,64  UNCOND
         SPACE 2
         SPACE 2
         MVC   VOLOBT,VOLFR
         MVC   DSNOBT,DSN
         OBTAIN SEARCHL
         LTR   R15,R15
         BZ    NM1X
         MVC   WTO2+33(44),DSNOBT
WTO2     WTO   'DATASET NOT FOUND/COPIED:                              X
                               ',ROUTCDE=1
         B     NA31
NM1X     EQU   *
         MODESET KEY=ZERO,MODE=SUP
         SPACE 2
         LA    R1,NS99RBPT    ADDR OF SVC99 REQUEST BLOCK PTR
         DYNALLOC             OLD ALLOCATION
         SPACE 2
         LR    R6,R15
         MODESET KEY=NZERO,MODE=PROB
         LTR   R15,R6         TEST RETURN CODE
         BNZ   DALERR         ALLOC NOT SUCCESSFUL
         EJECT
***************************************************************
*                                                             *
*                 ALLOCATION OF NEW DATA SET                  *
*                                                             *
***************************************************************
         SPACE
NM1      EQU   *
         LA    R6,NS99RB      SVC99 REQUEST BLOCK ADDRESSABILITY
         USING S99RB,6
         MVI   S99VERB,S99VRBAL  SET VERB CODE TO ALLOC
         LA    R1,TUPLNEW     ADDR OF TEXT UNIT POINTER LIST
         ST    R1,S99TXTPP
         LA    R1,NS99RBPT    ADDR OF SVC99 REQUEST BLOCK PTR
         DYNALLOC             NEW ALLOC
         LTR   R15,R15        TEST RETURN CODE
         BNZ   DALERR         ALLOC NOT SUCCESSFUL
         EJECT
*
*         IEBCOPY / IEBGENER CALL
*
         TM    SWITCH,X'04'   'NO COPY' STATUS ?
         BO    NN1            YES
         TM    SWITCH,X'10'   IEBCOPY REQUIRED ?
         BO    NM2            YES
         TM    SWITCH,X'20'   IEBGENER REQUIRED ?
         BNZ   *+8            YES
         BAL   R10,FEHLLOG    LOGICAL ERROR
         LINK  EP=IEBGENER,PARAM=(PARM),VL=1   LINK TO IEBGENER
         LTR   R15,R15        TEST IEBGENER RETURN CODE
         BNZ   FEHLGENR       IEBGENER NOT SUCCESSFUL
         B     NM3
NM2      EQU   *
         XR    R1,R1          NO PARM FIELD PRESENT
         L     R15,COPYADR    IEBCOPY ENTRY POINT ADDR
         CALL  (15),(COPYPRM),VL  LINK TO IEBCOPY
         LTR   R15,R15        TEST IEBCOPY RETURN CODE
         BNZ   FEHLCOPY       IEBCOPY NOT SUCCESSFUL
NM3      EQU   *
         MVC   MBER,MBLANK    CLEAR SYSPRINT WORK AREA
         MVC   MBER+1(20),=20C'*'
         MVC   MBER+22(44),DSN  DSNAME
         LA    R1,MBER+66     DEFAULT DELIMITER
         TRT   MBER+22(45),TBL SCAN FOR DELIMITER
         MVC   1(20,R1),=C'SUCCESSFULLY COPIED.'
         OI    CATMOVSW,X'02'  INDICATES COPY OK
*        ISSUE WTO TO SYSTEM CONSOLE
         MVC   WT01+8(7),=CL7'*****  '
         MVC   WT01+15(44),DSN        DSNAME
         MVC   WT01+61(20),=CL20'SUCCESSFULLY COPIED.'
WT01     WTO   '                                                       X
                                            ',ROUTCDE=1,DESC=3
         SPACE 3
*
*     UNALLOCATION OF OLD DATA SET
*
NM31     EQU   *
         TM    COMPSW,X'02'   COMPRESSION DONE ?
         BO    NM32           - YES
         MVC   VOLMOV,VOLFR   VOLSER OF OLD DATASET
         CLI   VOLOLDP,X'00'  SPECIAL VOLUME ?
         BE    NM31A          - NO
         MVC   VOLMOV,VOLOLDP
NM31A    EQU   *
         CALL  DEVTYP,(VOLMOV,DEVTM),VL  GET DEVICE TYPE
NM32     EQU   *
         LA    R6,NS99RB      SVC99 REQUEST BLOCK ADDRESSABILITY
         USING S99RB,6
         MVI   S99VERB,S99VRBUN  SET VERB CODE TO UNALLOC
         LA    R1,TUPLOLDU    ADDR OF TEXT UNIT POINTER LIST
         ST    R1,S99TXTPP
         LA    R1,NS99RBPT
         DYNALLOC             UNALLOC OLD DATA SET
         LTR   R15,R15        TEST RETURN CODE
         BNZ   DUNERR         UNALLOC NOT SUCCESSFUL
         CLC   S99INFO,=H'0'  TEST INFO CODE
         BE    NN2            NO INFO CODE
         BAL   R10,UPDINFO    LINK TO INFO ROUT
         B     NN2
*
*  'NO COPY' STATUS DATA SET
*
NN1      EQU   *
         MVC   MBER,MBLANK    CLEAR SYSPRINT WORK AREA
         MVC   MBER+1(20),=20C'*'
         MVC   MBER+22(44),DSN  DSNAME
         LA    R1,MBER+66     DEFAULT DELIMITER
         TRT   MBER+22(45),TBL  SCAN FOR DELIMITER
         MVC   1(10,R1),=C'ALLOCATED.'
         OI    CATMOVSW,X'02'  INDICATES ALLOCATION OK
         BAL   R10,GETDSN     READ NEXT DSN STMT
NN2      EQU   *
*
*   UNALLOCATION OF NEW DATA SET
*
         TM    COMPSW,X'01'   COMPRESS SPECIFIED ?
         BO    NN4            YES
         MVC   VOLREN,VOLTO   VOL SER
         CLI   VOLNEW,X'00'   SPECIAL VOLUME ?
         BE    NN21           NO
         MVC   VOLREN,VOLNEW
NN21     EQU   *
         L     R6,RTDSNAD     ADDR OF RETURN TEXT UNIT
         USING S99TUNIT,6
         MVC   DSNREN,S99TUPAR  TEMPORARY DSN
         CALL  DEVTYP,(VOLREN,DEVT),VL  LINK TO DEVTYP ROUTINE
NN22     EQU   *
         LA    R6,NS99RB      SVC99 REQUEST BLOCK ADDRESSABILITY
         USING S99RB,6
         MVI   S99VERB,S99VRBUN  SET VERB CODE TO UNALLOC
         L     R1,TUPLNEW     ADDR OF FIRST TEXT UNIT POINTER
         LH    R1,0(R1)       PICK UP DYNALLOC KEY
         CH    R1,=H'1'       DDNAME KEY ?
         BE    *+8            YES
         BAL   R10,FEHLLOG    NO. LOGICAL ERROR
         OI    TUPLNEW,X'80'  CLOSE TEXT UNIT POINTER LIST
         LA    R1,TUPLNEW     ADDR OF TEXT UNIT POINTER LIST
         ST    R1,S99TXTPP
         LA    R1,NS99RBPT    ADDR OF SVC99 REQUEST BLOCK PTR
         DYNALLOC             UNALLOC NEW DATA SET
         LTR   R15,R15        TEST RETURN CODE
         BNZ   DUNERR         UNALLOC NOT SUCCESSFUL
         CLC   S99INFO,=H'0'  TEST INFO CODE
         BE    NN3            NO INFO CODE
         BAL   R10,UPDINFO    LINK TO INFO ROUTINE
NN3      EQU   *
         TM    CATMOVSW,X'01'  COMPRESS OPTION TERMINATED ?
         BO    NA31           - YES.
         XC    COMPSW,COMPSW  CLEAR COMPRESSION INDICATOR
         SPACE
*  RENAME NEW DATA SET
         SPACE
         XC    RENRET,RENRET  CLEAR RENAME STATUS FIELD
         XR    R0,R0
         RENAME RENLST        RENAME
         LTR   R15,R15        TEST RETURN CODE
         BNZ   NN41
         PUT   MSG,MBER       WRITE OK MESSAGE
*
*    SCRATCH / RECAT  SEQUENCE
*
         TM    CATMOVSW,X'02'  COPY SUCCESSFUL ?
         BZ    NN39           - NO. BYPASS SCRATCH/RECAT
         TM    CATMOVSW,X'F0'  MOVE/RECAT SPECIFIED ?
         BZ    NN39           - NO
         TM    SWITCH,X'04'   'NO COPY' STATUS ?
         BO    NN35           - YES. BYPASS SCRATCH MACRO
         TM    CATMOVSW,X'0C'  NOMOVE / NOCAT SPECIFIED ?
         BNZ   NN35           - YES
         TM    CATMOVSW,X'50'  MOVE SPECIFIED ?
         BZ    NN35           - NO
         SPACE
         MVC   DSNMOV,DSN     INIT SCRATCH PARAMETER LIST
         XC    MOVRET,MOVRET
         XR    R0,R0
         SCRATCH SCRLISTM     SCRATCH OLD DATASET
         LTR   R15,R15        TEST RETURN CODE
         BZ    NN31           SCRATCH OK
         STC   R15,MOVRET     SAVE RETURN CODE
         MVC   MBER,MBLANK    CLEAR MESSAGE AREA
         MVC   MBER+22(21),=C'OLD DATASET NOT SCRATCHED.'
         PUT   MSG,MBER
         LA    R15,MOVRET
         BAL   R10,PRTRC      PRINT RETURN CODES
         B     NN39
NN31     EQU   *
         MVC   MBER,MBLANK    CLEAR MESSAGE AREA
         MVC   MBER+22(31),=C'OLD DATASET HAS BEEN SCRATCHED.'
         PUT   MSG,MBER
         SPACE
NN35     EQU   *
         TM    CATMOVSW,X'08'  NOCAT SPECIFIED ?
         BO    NN39
         XC    RENRET,RENRET  INIT RECAT PARAMETER LIST
         CATALOG UNCAT        UNCATLG
         LTR   R15,R15        TEST RETURN CODE
         BZ    NN36           RECAT SUCCESSFUL
         STC   R15,RENRET     SAVE RETURN CODE
         STC   R0,RENRET+1    SAVE REASON CODE
         MVC   MBER,MBLANK    CLEAR MESSAGE AREA
         MVC   MBER+22(20),=C'UNCAT NOT SUCCESSFUL'
         PUT   MSG,MBER
         LA    R15,RENRET
         BAL   R10,PRTRC      PRINT RETURN CODE
NN36     EQU   *
         SPACE 2
         CATALOG CATLIST
         LTR   R15,R15          ANY RC ?
         BZ    NN361            NO --> OK
         STC   R15,RENRET       SAVE RC
         STC   R0,RENRET+1      SAVE REASON
         MVC   MBER,MBLANK
         MVC   MBER+22(18),=C'CAT NOT SUCCESSFUL'
         LA    R15,RENRET
         BAL   R10,PRTRC
         B     NN39
NN361    EQU   *
         MVC   MBER,MBLANK    CLEAR MESSAGE AREA
         MVC   MBER+22(27),=C'DATASET HAS BEEN CATALOGUED'
         PUT   MSG,MBER
NN39     EQU   *
         TM    SWITCH,X'40'   EOF DSNL ?
         BO    ENDE           YES
         B     NA31           PROCESS NEXT DSNAME STMT
NN4      EQU   *
         TM    CATMOVSW,X'02'  COPY SUCCESSFUL ?
         BO    NN4A           - YES
         OI    CATMOVSW,X'01' TERMINATE COMPRESS FUNCTION
         B     NN22
NN4A     EQU   *
         NI    CATMOVSW,X'FC'  RESET COPY INDICATOR
         MVC   VOLOLDP(14),VOLNEW  SHIFT VOL SER /UNIT OF WORK FILE
         MVC   TRKCAPFL(4),TRKCAPTL  SHIFT TRACK CAPACITY OF WORK FLE
         MVC VOLNEW(14),VOLSAVE  RESTORE VOLSER/UNIT OF RECEIVING VOL
         MVC   TRKCAPTL(4),TRKCAPSV  RESTORE DEVICE CONSTANTS
    MVC  SPCPRI-1(4),SPACESV  RESTORE PRIMARY SPACE SPECIFICATION
         MVI   COMPSW,X'02'   INDICATE COMPRESSION DONE
         L     R6,RTDSNAD     ADDR OF DSN RETURN TEXT UNIT
         USING S99TUNIT,6     TEXT UNIT ADDRESSABILITY
         MVC   DSNOLDL,S99TULNG  LENGTH OF TEMPORARY DSNAME
         MVC   DSNOLDN,S99TUPAR  TEMPORARY DSNAME
         MVC   DSNOBT,S99TUPAR  TEMP DSN TO OBTAIN DSN FIELD
         B    NB10
NN41     EQU   *
         CLI   RENRET+1,X'03' DUPLICATE NAME ?
         BE    *+8            YES
         BAL   R10,FEHLLOG    NO. LOGICAL ERROR
         XR    R0,R0
         SCRATCH SCRLIST      SCRATCH TEMPORARY DS
         LTR   R15,R15        TEST RETURN
         BZ    *+8            OK
         BAL   R10,FEHLLOG    LOGICAL ERROR
         MVC   MBER,MBLANK    CLEAR MESSAGE AREA
         MVC   MBER+1(20),=20C'*'
         MVC   MBER+22(14),=C'DUPLICATE NAME'
         MVC   MBER+40(44),DSN
         LA    R8,4           RETURN CODE 4
         C     R8,RC
         BL    *+8
         ST    R8,RC
         PUT   MSG,MBER
         B     NN39
         EJECT
*************************************************************
*************************************************************
**                                                         **
**           K E Y W O R D   R O U T I N E                 **
**                                                         **
**    REG 6   ADDR OF KEYWORD                              **
**    REG 7   ADDR OF KEYWORD TABLE                        **
**                                                         **
*************************************************************
*************************************************************
         SPACE
UPKEYW   EQU   *
         ST    R10,REG10KEY   SAVE RETURN REG
         MVC   KEYWORD,=8C' ' CLEAR KEYWORD WORK AREA
         C     R7,APARMT       PROGR PARM FIELD TO BE SCANNED?
         BNE   NO1            NO.
         TRT   0(9,R6),TDLMEQU  SCAN FOR EQUAL SIGN DELIMITER
         BZ    FEHLPRM        NO DELIMITER FOUND
         SR    R1,R6          LENGTH OF KEYWORD
         BZ    FEHLPRM        ZERO LENGTH NOT ALLOWED
         B     NO2
NO1      EQU   *   DSNAME STMT TO BE SCANNED
         TRT   0(9,R6),TDLMBLKL  SCAN FOR  BLANK AND ( DELIM
         BZ    FEHLIN         NO DELIMITER FOUND
         SR    R1,R6          LENGTH OF KEYWORD
         BZ    FEHLIN         ZERO LENGTH NOT ALLOWED
NO2      EQU   *
         BCTR  R1,0           DECREASE LENGTH FOR EX
         EX    R1,MOVE4       MOVE TO KEYWORD WORK AREA
         LA    R6,1(R6,R1)    INCREASE PARAMETER INDEX
NO3      EQU   *
         CLI   0(R7),X'FF'    END OF KEYWORD TABLE ?
         BE    NO4            YES
         CLC   KEYWORD,0(R7)  KEYWORD COMPARE
         BE    NO5            KEYWORD IN TABLE
         LA    R7,12(R7)      INCREASE TABLE INDEX
         B     NO3            COMPARE NEXT TABLE ENTRY
NO4      EQU   *   END OF TABLE
         CLC   0(2,R7),=X'FF00'  PARM FIELD KEYWORD TABLE ?
         BE    FEHLPRM        YES
         B     FEHLIN         NO
NO5      EQU   *  KEYWORD FOUND
         L     R15,8(R7)      LOAD ADDR OF KEYWORD PROCESSOR ROUTINE
         BR    R15            LINK TO KEYWORD PROCESSOR ROUTINE
         EJECT
*******************************************************
*                                                     *
*           KEYWORD PROCESSOR ROUTINES                *
*                                                     *
*******************************************************
         SPACE
*
*    RECAT  (GLOBAL)
*
NPCAT    EQU   *
         TM    CATMOVSW,X'80'  'RECAT' ALREADY SPECIFIED ?
         BO    FEHLPRM        - YES
         CLC   0(4,R6),=C'=YES'
         BNE   FEHLPRM        INVALID PARAMETER
         OI    CATMOVSW,X'80'  SET GLOBAL CATALOG BIT
         LA    R6,4(R6)       UPDATE PARM INDEX
         B     NO6
*
*    MOVE  (GLOBAL)
*
NPMOVE   EQU   *
         TM    CATMOVSW,X'40'  'MOVE' ALREADY SPECIFIED ?
         BO    FEHLPRM        - YES
         CLC   0(4,R6),=C'=YES'
         BNE   FEHLPRM        INVALID PARAMETER
         OI    CATMOVSW,X'40'  SET GLOBAL MOVE BIT
         LA    R6,4(R6)       UPDATE PARM INDEX
         B     NO6
*
*   FROM
*
NFROM    EQU   *
         TM    SWITCH,X'02'  'FROM' ALREADY PRESENT ?
         BO    FEHLPRM        YES
         LA    R6,1(R6)       BYPASS EQUAL SIGN
         MVC   UNITFR,=CL8'SYSDA'  SET UNIT NAME DEFAULT
*  SCAN FOR SUBPARAMETERS
         CALL  UPUNED1,(UNED1F1,PRMEND,TKOBLKR,FEHLPRM)
         CLI   UNED1L1,X'06'  FIRST SUBPAR MUST BE SIX BYTES LONG
         BNE   FEHLPRM        INVALID SUBPAR
         MVC   VOLFR,UNED1F1  VOL SER OF FROM VOLUME
         CNOP  0,4            ALIGN TO FULLWORD BOUNDARY
         BAL   R10,UPDEVCON   GET DEVICE CONSTANTS
         DC    A(TRKCAPFG)    ADDR OF TRACK CAPACITY FIELD
         DC    A(TRKCYLFG)    ADDR OF TRK/CYL FIELD
         DC    A(VOLFR)       ADDR OF VOL SER FIELD
         OI    SWITCH,X'02'   SET FROM INDICATOR
         CLI   UNED1L2,X'00'  2ND SUBPAR PRESENT ?
         BE    NO6            NO
         MVC   UNITFR,UNED1F2 UNIT NAME OF FROM VOLUME
NO6      EQU   *
         L     R10,REG10KEY   RELOAD RETURN REG
         BR    R10            RETURN
*
*   TO
*
NTO      EQU   *
         TM    SWITCH,X'01'   'TO' PARAMETER ALREADY PRESENT ?
         BO    FEHLPRM        YES.
         LA    R6,1(R6)       BYPASS EQUAL SIGN
         MVC   UNITTO,=CL8'SYSDA'  SET UNIT NAME DEFAULT
*  SCAN FOR SUBPARAMETERS
         CALL  UPUNED1,(UNED1F1,PRMEND,TKOBLKR,FEHLPRM)
         CLI   UNED1L1,X'06'  VOL SER SUBPAR MUST BE SIX BYTES LONG
         BNE   FEHLPRM        INVALID VOL SER SUBPAR
         OI    SWITCH,X'01'   SET 'TO' INDICATOR
         MVC   VOLTO,UNED1F1  VOL SER OF RECEIVING VOLUME
         CNOP  0,4            ALIGN TO FULLWORD BOUNDARY
         BAL   R10,UPDEVCON   GET DEVICE CONSTANTS
         DC    A(TRKCAPTG)    ADDR OF TRACK CAPACITY FIELD
         DC    A(TRKCYLTG)    ADDR OF TRK/CYL FIELD
         DC    A(VOLTO)       ADDR OF VOL SER FIELD
         CLI   UNED1L2,X'00'  UNIT NAME SUBPAR PRESENT ?
         BE    NO6            NO. RETURN
         MVC   UNITTO,UNED1F2 UNIT NAME OF RECEIVING VOLUME
         B     NO6
*
*   UTSPC   (UTILITY WORKSPACE  -UNIT NAME-)
*
NUT      EQU   *
         TM    SWITCH,X'80'   'UTSPC' PARAMETER ALREADY PRESENT ?
         BO    FEHLPRM        YES
         LA    R6,1(R6)       BYPASS EQUAL SIGN
         OI    SWITCH,X'80'   SET 'UTSPC' PARAMETER INDICATOR
*  SCAN FOR SUBPARAMETERS
         CALL  UPUNED1,(UNED1F1,PRMEND,TKOBLKR,FEHLPRM)
         CLI   UNED1L1,X'00'  PRIMARY SPACE SPECIFIED ?
         BE    NO7            NO
         ST    R6,REG6KEY     SAVE PARAMETER INDEX REG
         LA    R6,UNED1F1     ADDR OF PRIMARY SPACE VALUE
         BAL   R10,UPUNED2    CONVERT TO BINARY
         L     R6,REG6KEY     RELOAD PARM INDEX REG
         ST    R8,DOPPLW      PRIMARY SPACE -BINARY-
         MVC   UT3PRIS,DOPPLW+1  LOWER THREE BYTES TO UT3 TEXT UNIT
NO7      EQU   *
         CLI   UNED1L2,X'00'  SECONDARY SPACE SPECIFIED ?
         BE    NO6            NO
         ST    R6,REG6KEY     SAVE PARM INDEX REG
         LA    R6,UNED1F2     ADDR OF SECND SPACE VALUE
         BAL   R10,UPUNED2    CONVERT TO BINARY
         L     R6,REG6KEY     RELOAD PARM INDEX REG
         ST    R8,DOPPLW      SECND SPACE -BINARY FORMAT-
         MVC   UT3SECS,DOPPLW+1  LOWER THREE BYTES TO UT3 TEXT UNIT
         B     NO6            RETURN
*
*   UTVOL   (UTILITY WORK SPACE   - VOLUME SERIAL NUMBER - )
*
NUTV     EQU   *
         TM    SWITCH,X'04'   'UTVOL' PARAMETER ALREADY PRESENT ?
         BO    FEHLPRM        YES
         OI    SWITCH,X'04'   SET 'UTVOL' PARAMETER INDICATOR
         LA    R6,1(R6)       BYPASS EQUAL SIGN
*  SCAN FOR SUBPARAMETERS
         CALL  UPUNED1,(UNED1F1,PRMEND,TKOBLKR,FEHLPRM)
         CLI   UNED1L1,X'00'  VOL SER SPECIFIED ?
         BE    NO8            NO
         CLI   UNED1L1,X'06'  VOL SER MUST BE SIX BYTES LONG
         BNE   FEHLPRM        INVALID VOL SER SUBPAR
         MVC   UT3VOLV,UNED1F1  VOL SER OF WORK SPACE VOLUME
         CNOP  0,4            ALIGN TO FULLWORD BOUNDARY
         BAL   R10,UPDEVCON   GET DEVICE CONSTANTS
         DC    A(TRKCAPUT)
         DC    A(TRKCYLUT)
         DC    A(UT3VOLV)
         LA    R1,UT3VOL      ADDR OF VOL SER TEXT UNIT
         ST    R1,UT3VOLPP    STORE IT INTO TEXT UNIT POINTER LIST
NO8      EQU   *
         CLI   UNED1L2,X'00'  UNIT NAME SPECIFIED ?
         BE    NO6            NO
         XR    R1,R1
         IC    R1,UNED1L2     LENGTH OF UNIT NAME
         STH   R1,UT3UNTL     STORE IT INTO UNIT NAME TEXT UNIT
         MVC   UT3UNTU,UNED1F2  UNIT NAME
         B     NO6
*
*   ATTR   BLOCK ADDR OF DADS RECORD
*
NATTR    EQU   *
         CLI   0(R6),C'('     VALUE MUST BE ENCLOSED IN PARENTH
         BNE   FEHLIN         MISSING PARENTHESIS
         TM    ATRSW1,X'01'   'ATTR' ALREADY PRESENT ?
         BO    FEHLIN         YES
         OI    ATRSW1,X'01'   SET 'ATTR' PARM INDICATOR
         LA    R6,1(R6)       BYPASS PARENTHESIS
         BAL   R10,UPUNED3    GET SUBPARAMETER
         CLI   UNED3L1,X'05'  SUBPAR MUST BE FIVE BYTES LONG
         BNE   FEHLIN         INVALID ATTR PAR
         MVC   ATTR,UNED3F1   REL BLOCKADDR OF DADS RECORD
NO9      EQU   *
         CLI   0(R6),C')'     TEST FOR CLOSING PARENTHESIS
         BNE   FEHLIN         NO CLOSING PARENTHESIS
         LA    R6,1(R6)       BYPASS PARENTHESIS
         B     NO6
*
*   SPACE
*
NSPACE   EQU   *
         CLI   0(R6),C'('     VALUE MUST BE ENCLOSED IN PARENTHESES
         BNE   FEHLIN         NO PARENTHESIS
         TM    ATRSW1,X'06'   SPACE PARM ALREADY PRESENT ?
         BNZ   FEHLIN         YES
         OI    ATRSW1,X'02'   SET PRIMARY SPC INDICATOR
         LA    R6,1(R6)       BYPASS PARENTHESIS
         CLI   0(R6),C'R'     SPACE REDUCTION SPECIFIED ?
         BE    NO9B           YES
         CLI   0(R6),C'C'     COMPRESSION SPECIFIED ?
         BE    NO9D           YES
         BAL   R10,UPUNED2    CONVERT SPACE VALUE
         ST    R8,SPCPRI-1    STORE LOWER THREE BYTES
NO9A     EQU   *
         CLI   0(R6),C' '     2ND ALLOC SPECIFIED ?
         BNE   NO9            NO
         TRT   0(10,R6),TNOBL SCAN FOR 2ND SPACE VALUE
         BZ    FEHLIN         INVALID SPECIFICATION
         C     R1,=A(EBER+70) MARGIN EXCEEDED ?
         BH    FEHLIN         YES
         CLI   0(R1),C'-'
         BE    FEHLIN
         LR    R6,R1          ADDR OF 2ND SPACE
         BAL   R10,UPUNED2    CONVERT TO BINARY
         CLI   SPCSEC+2,X'FF'  ADDITIONAL PRIM SPC ?
         BE    NO9C           YES
         ST    R8,SPCSEC-1    STORE LOWER THREE BYTES
         OI    ATRSW1,X'04'   SET SECND SPACE INDICATOR
         B     NO9
NO9B     EQU   *
         MVC   SPCPRI-1(4),=X'FF000000'  INDICATE SPACE REDUCTION
         MVC   SPCSEC-1(4),=4X'FF'
         LA    R6,1(R6)       INCREASE INDEX
         B     NO9A
NO9C     EQU   *
         STH   R8,SPCPRI+1    ADDITIONAL PRIM SPC
         NI    SPCSEC+2,X'00'  RESET ADD. PRIMARY SPACE INDICATOR
         B     NO9A
NO9D     EQU   *
         CLC   UT3VOLPP,=F'0'  VOL SER OF WORK FILE SPECIFIED ?
         BE    FEHLIN         NO. ERROR
         TM    SWITCH,X'04'   NO COPY STATUS ?
         BO    FEHLIN         YES. ERROR
         MVI   COMPSW,X'01'   INDICATE COMPRESSION REQUEST
         B     NO9B
*
*   TRACKS / TRK   FORMAT OF REQUESTED SPACE
*
NTRACK   EQU   *
         CLI   0(R6),C' '     TEST FOR BLANK DELIMITER
         BNE   FEHLIN         INVALID DELIMITER
         TM    SPCFMT,X'03'   FORMAT PARM ALREADY PRESENT ?
         BNZ   FEHLIN         YES
         OI    ATRSW1,X'08'   SET FORMAT INDICATOR
         OI    SPCFMT,X'01'   SET TRACK INDICATOR
         B     NO6
*
*   CONTIG / CTG     FORMAT OF REQUESTED SPACE
*
NCONTIG  EQU   *
         CLI   0(R6),C' '     TEST FOR BLANK DELIMITER
         BNE   FEHLIN         INVALID DELIMITER
         TM    SPCFMT,X'0C'   CONTIG OR NONCONTIG ALREADY SPECIFIED ?
         BNZ   FEHLIN         YES
         OI    ATRSW1,X'08'   SET FORMAT INDICATOR
         OI    SPCFMT,X'04'   SET CONTIG INDICATOR
         B     NO6
*
*   NCTG    NULLIFY CONTIG REQUEST
*
NNONCTG  EQU   *
         CLI   0(R6),C' '     TEST FOR BLANK DELIMITER
         BNE   FEHLIN         INVALID DELIMITER
         TM    SPCFMT,X'0C'   CONTIG OR NONCONTIG ALREADY SPECIFIED
         BNZ   FEHLIN         YES
         OI    ATRSW1,X'08'   SET FORMAT INDICATOR
         OI    SPCFMT,X'08'   SET NONCONTIG INDICATOR
         B     NO6
*
*   CYLINDER / CYL   FORMAT OF REQUESTED SPACE
*
NCYLNDR  EQU   *
         CLI   0(R6),C' '     TEST FOR BLANK DELIMITER
         BNE   FEHLIN         INVALID DELIMITER
         TM    SPCFMT,X'03'   CYL OR TRK ALREADY SPECIFIED
         BNZ   FEHLIN         YES
         OI    ATRSW1,X'08'  SET FORM INDICATOR
         OI    SPCFMT,X'02'   SET CYL INDICATOR
         B     NO6
*
*   RECFM            RECORD FORMAT
*
NRECFM   EQU   *
         CLI   0(R6),C'('     VALUE MUST BE ENCLOSED BY PARENTHESES
         BNE   FEHLIN         INVALID SPECIFICATION
         TM    ATRSW2,X'01'   RECFM PAR ALREADY PRESENT ?
         BO    FEHLIN         YES
         OI    ATRSW2,X'01'   SET RECFM INDICATOR
         LA    R6,1(R6)       BYPASS PARENTHESIS
NP0      EQU   *
         L     R1,ATRECF      ADDR OF RECFM TABLE
NP1      EQU   *
         CLI   0(R1),X'FF'    END OF TABLE ?
         BE    FEHLIN         YES. ERROR
         CLC   0(1,R1),0(R6)  COMPARE RECFM SUBPAR WITH TABLE ENTRY
         BE    NP2            EQUAL
         LA    R1,2(R1)       INCREASE TABLE INDEX
         B     NP1            NEXT TABLE ENTRY
NP2      EQU   *
         XR    R2,R2
         IC    R2,1(R1)       PICK UP CORRESPONDING BIT STRUCTURE
         EX    R2,TEST1       AT LEAST ONE BIT ALREADY ON IN RECFM ?
         BNZ   FEHLIN         YES. ERROR
         EX    R2,OR1         SET CORRESPONDING BITS IN RECFM FIELD
         CLI   1(R6),C')'     NO MORE RECFM SUBPARMS ?
         BE    NP3            YES
         CLI   1(R6),C','     SUBPARMS MUST BE SEPARATED BY COMMA
         BNE   FEHLIN         NO COMMA
         LA    R6,2(R6)       POINT NO NEXT RECFM SUBPARAMETER
         B     NP0
NP3      EQU   *
         LA    R6,2(R6)       INCREASE PARAMETER INDEX
         B     NO6
*
*   LRECL      LOGICAL RECORD LENGTH
*
NLRECL   EQU   *
         CLI   0(R6),C'('     VALUE MUST BE ENCLOSED IN PARENTHESES
         BNE   FEHLIN         INVALID SPECIFICATION
         TM    ATRSW2,X'02'   LRECL PARM ALREADY SPECIFIED
         BO    FEHLIN         YES
         OI    ATRSW2,X'02'   SET LRECL INDICATOR
         LA    R6,1(R6)       BYPASS PARENTHESIS
         CLI   0(R6),C'X'   SPANNED RECORDS GREATER THAN 32756 BYTES ?
         BE    NP4            YES
         BAL   R10,UPUNED2    CONVERT LRECL TO BINARY
         STH   R8,LRECL
         B     NO9
NP4      EQU   *   SPANNED RECORDS GREATER THAN 32756 BYTES
         BAL   R10,UPUNED3    PICK UP CHAR FORM SUBPARAMETER
         CLI   UNED3L1,X'01'  LENGTH MUST BE ONE
         BNE   FEHLIN         INVALID SPECIFICATION
         MVC   LRECL,=X'8000'
         B     NO9
*
*   BLKSIZE          BLOCKSIZE
*
NBLKSIZE EQU   *
         CLI   0(R6),C'('     VALUE MUST BE ENCLOSED IN PARENTHESES
         BNE   FEHLIN         SPECIFICATION ERROR
         TM    ATRSW2,X'04'  BLKSIZE PARM ALREADY SPECIFIED ?
         BO    FEHLIN         YES
         OI    ATRSW2,X'04'   SET BLKSIZE INDICATOR
         LA    R6,1(R6)       BYPASS PARENTHESIS
         CLI   0(R6),C'R'     REBLOCKING SPECIFIED ?
         BE    NP41           YES
         BAL   R10,UPUNED2    CONVERT BLKSIZE TO BINARY
         STH   R8,BLKL
         B     NO9
NP41     EQU   *
         OI    ATRSW2,X'08'   SET REBLOCK INDICATOR
         LA    R6,1(R6)       INCREASE PARM INDEX
         B     NO9
*
*   EXPDT          EXPIRATION DATE
*
NEXPDT   EQU   *
         CLI   0(R6),C'('     VALUE MUST BE ENCLOSED IN PARENTHESES
         BNE   FEHLIN         SPECIFICATION ERROR
         TM    ATRSW1,X'10'   EXPDT PARM ALREADY SPECIFIED ?
         BO    FEHLIN         YES
         OI    ATRSW1,X'10'   SET EXPDT INDICATOR
         LA    R6,1(R6)       BYPASS PARENTHESIS
         BAL   R10,UPUNED3    PICK UP EXPDT VALUE
         CLI   UNED3L1,X'05'  LENGTH MUST BE FIVE
         BNE   FEHLIN         INVALID LENGTH
         MVC   EXPDTC,UNED3F1 EXPIRATION DATE
         B     NO9
*
*   TOVOL     VOL SER OF RECEIVING VOLUME
*
NTOVOL   EQU   *
         CLI   0(R6),C'('     VOL SER MUST BE ENCLOSED IN PARENTHESES
         BNE   FEHLIN         SYNTAX ERROR
         TM    ATRSW1,X'20'   PARAMETER ALREADY SPECIFIED ?
         BO    FEHLIN         YES
         OI    ATRSW1,X'20'   SET TOVOL INDICATOR
         LA    R6,1(R6)       BYPASS PARENTHESIS
         BAL   R10,UPUNED3    PICK UP VOL SER
         CLI   UNED3L1,X'06'  LENGTH MUST BE SIX
         BNE   FEHLIN         INVALID LENGTH
         MVC   VOLNEW,UNED3F1 VOL SER OF RECEIVING VOLUME
         CNOP  0,4            ALIGN TO FULLWORD BOUNDARY
         BAL   R10,UPDEVCON   GET DEVICE CONSTANTS OF RECEIVING VOL
         DC    A(TRKCAPTL)    ADDR OF TRACK CAPACITY FIELD
         DC    A(TRKCYLTL)    ADDR OF TRK/CYL FIELD
         DC    A(VOLNEW)      ADDR OF VOL SER FIELD
         B     NO9
*
*   TOUNIT    UNIT NAME OF RECEIVING VOLUME
*
NTOUNIT  EQU   *
         CLI   0(R6),C'('     UNIT NAME MUST BE ENCLOSED IN PARENTHESES
         BNE   FEHLIN         SYNTAX ERROR
         TM    ATRSW1,X'40'   PARAMETER ALREADY SPECIFIED ?
         BO    FEHLIN         YES
         OI    ATRSW1,X'40'   SET TOUNIT INDICATOR
         LA    R6,1(R6)       BYPASS PARENTHESIS
         BAL   R10,UPUNED3    PICK UP UNIT NAME
         MVC   UNTNEW,UNED3F1  UNIT NAME OF RECEIVING VOLUME
         B     NO9
*
*   FROMVOL     VOL SER OF INPUT VOLUME
*
NFRVOL   EQU   *
         CLI   0(R6),C'('     VOL SER MUST BE ENCLOSED IN PARENTHESES
         BNE   FEHLIN         SYNTAX ERROR
         TM    ATRSW2,X'40'   PARAMETER ALREADY SPECIFIED ?
         BO    FEHLIN         YES
         OI    ATRSW2,X'40'   SET FROMVOL INDICATOR
         LA    R6,1(R6)       BYPASS PARENTHESIS
         BAL   R10,UPUNED3    PICK UP VOL SER
         CLI   UNED3L1,X'06'  LENGTH MUST BE SIX
         BNE   FEHLIN         INVALID LENGTH
         MVC   VOLOLDP,UNED3F1  VOL SER OF INPUT VOLUME
         CNOP  0,4            ALIGN TO FULLWORD BOUNDARY
         BAL   R10,UPDEVCON   GET DEVICE CONSTANTS OF OLD VOLUME
         DC    A(TRKCAPFL)    ADDR OF TRACK CAPACITY FIELD
         DC    A(TRKCYLFL)    ADDR OF TRK/CYL FIELD
         DC    A(VOLOLDP)     ADDR OF VOL SER FIELD
         B     NO9
*
*   FROMUNIT      UNIT NAME OF INPUT VOLUME
*
NFRUNIT  EQU   *
         CLI   0(R6),C'('     UNIT NAME MUST BE ENCLOSED IN PARENTHESES
         BNE   FEHLIN         SYNTAX ERROR
         TM    ATRSW2,X'80'   PARAMETER ALREADY SPECIFIED ?
         BO    FEHLIN         YES
         OI    ATRSW2,X'80'   SET FROMUNIT INDICATOR
         LA    R6,1(R6)       BYPASS PARENTHESIS
         BAL   R10,UPUNED3    PICK UP UNIT NAME
         MVC   UNTOLDP,UNED3F1  UNIT NAME OF INPUT VOLUME
         B     NO9
*
*   PASSW        PASSWORD
*
NPASSW   EQU   *
         CLI   0(R6),C'('     PASSWORD MUST BE ENCLOSED INPARENTHESES
         BNE   FEHLIN         SYNTAX ERROR
         TM    ATRSW2,X'20'   PARAMETER ALREADY SPECIFIED ?
         BO    FEHLIN         YES
         OI    ATRSW2,X'20'   SET PASSWORD INDICATOR
         LA    R6,1(R6)       BYPASS PARENTHESIS
         BAL   R10,UPUNED3    PICK UP PASSWORD
         MVC   PASSW,UNED3F1
         CLI   PASSWFL,X'00'  PROTECTION LEVEL ALREADY SPECIFIED ?
         BNE   NO9            YES
         MVI   PASSWFL,X'10'  SET FULL PROTECTION
         B     NO9
*
*   READ     PROTECTION LEVEL = UPDATE
*
NREAD    EQU   *
         CLI   0(R6),C' '     TEST FOR BLANK DELIMITER
         BNE   FEHLIN         NO BLANK DELIMITER
         TM    ATRSW2,X'10'   PARAMETER ALREADY SPECIFIED ?
         BO    FEHLIN         YES
         OI    ATRSW2,X'10'   SET READ WITHOUT PASSW INDICATOR
         MVI   PASSWFL,X'30'  PROTECTION LEVEL = UPDATE
         B     NO6
*
*   DIR       DIRECTORY BLOCK ALLOCATION
*
NDIRBLK  EQU   *
         CLI   0(R6),C'('     VALUE MUST BE ENCLOSED IN PARENTHESES
         BNE   FEHLIN         SYNTAX ERROR
         TM    ATRSW1,X'80'   PARAMETER ALREADY SPECIFIED ?
         BO    FEHLIN         YES
         OI    ATRSW1,X'80'   SET DIR INDICATOR
         LA    R6,1(R6)       BYPASS PARENTHESIS
         BAL   R10,UPUNED2    CONVERT NUMBER OF DIR BLK TO BINARY
         ST    R8,SPCDIR-1
         B     NO9
*
*  RECAT  (LOCAL)
*
NCAT     EQU   *
         CLI   0(R6),C' '     CORRECT DELIMITER ?
         BNE   FEHLIN         - NO
         TM    CATMOVSW,X'28'  VALID COMBINATION ?
         BNZ   FEHLIN         - NO
         OI    CATMOVSW,X'20'  SET LOCAL RECAT BIT
         B     NO6
*
*   MOVE  (LOCAL)
*
NMOVE    EQU   *
         CLI   0(R6),C' '     CORRECT DELIMITER ?
         BNE   FEHLIN         - NO
         TM    CATMOVSW,X'1C'  VALID COMBINATION ?
         BNZ   FEHLIN         - NO
         OI    CATMOVSW,X'10'  SET LOCAL MOVE BIT
         B     NO6
*
*   NO RECAT
*
NNCAT    EQU   *
         CLI   0(R6),C' '     CORRECT DELIMITER ?
         BNE   FEHLIN         - NO
         TM    CATMOVSW,X'38'  VALID COMBINATION ?
         BNZ   FEHLIN         - NO
         OI    CATMOVSW,X'08'  SET NORECAT BIT
         B     NO6
*
*   NO MOVE
*
NNMOVE   EQU   *
         CLI   0(R6),C' '     CORRECT DELIMITER ?
         BNE   FEHLIN         - NO
         TM    CATMOVSW,X'14'  VALID COMBINATION ?
         BNZ   FEHLIN
         OI    CATMOVSW,X'04'  SET NOMOVE BIT
         B     NO6
         LTORG
         EJECT
******************************************************************
******************************************************************
**                                                              **
**          U N E D I T   R O U T I N E     NUMBER ONE          **
**                                                              **
**   THIS ROUTINE FETCHES UP TO TWO SUBPARAMETERS FROM THE      **
**   PROGRAM PARM FIELD.                                        **
**   THE SUBPARAMETERS MUST BE POSITIONAL.                      **
**   TWO SUBPARAMETERS MUST BE SEPARATED BY A COMMA AND         **
**   ENCLOSED IN PARENTHESES.                                   **
**   COMMA AND PARENTHESES ARE ALSO REQUIRED IF ONLY THE SECOND **
**   PARAMETER IS PRESENT. THE MAXIMUM LENGTH OF ONE SUBPARM    **
**   IS EIGHT BYTES.                                            **
**   INPUT :                                                    **
**      REGISTER 6 = ADDR OF FIRST BYTE AFTER EQUAL SIGN        **
**   OUTPUT :                                                   **
**      UNED1L1  IS A ONE BYTE FIELD CONTAINING THE LENGTH      **
**               OF THE FIRST SUBPARAMETER                      **
**      UNED1F1  IS AN EIGHT BYTES FIELD CONTAINING THE FIRST   **
**               SUBPARAMETER                                   **
**      UNED1L2  IS A ONE BYTE FIELD CONTAINING THE LENGTH      **
**               OF THE SECOND SUBPARAMETER                     **
**      UNED1F2  IS AN EIGHT BYTES FIELD CONTAINING THE         **
**               SECOND SUBPARAMETER                            **
**      REGISTER 6 POINTS TO THE FIRST BYTE AFTER THE           **
**      SUBPARAMETER LIST                                       **
**                                                              **
******************************************************************
******************************************************************
         SPACE
UPUNED1  EANF
         LM    R4,R5,0(R1)    LOAD BASE REGISTERS
         LM    R7,R8,8(R1)
         USING UNEDWA,4
         USING PRMENDE,5
         USING TESTAB,7
         USING ERROR,8
         MVC   UNED1F1E(18),=18C' '  CLEAR WORK AREAS
         XC    UNED1L1E(3),UNED1L1E  CLEAR LENGTH FIELDS AND SWITCH
         CLI   0(R6),C'('     SUBPARMS ENCLOSED IN PARENTHESES ?
         BNE   UPUNED11       NO
         OI    UNED1S1E,X'02'  SET PARENTHESIS INDICATOR
UPUNED10 EQU   *
         LA    R6,1(R6)       BYPASS LEFT PARENTHESIS
         C     R6,PRMENDE     MARGIN EXCEEDED ?
         BH    ERRORE         YES
UPUNED11 EQU   *
         LA    R1,8(R6)       LOOK FOR MARGIN
         C     R1,PRMENDE     ADDR OF LAST BYTE IN PARM FIELD
         BH    UPUNED12       LESS THAN 9 BYTES LEFT
         LA    R1,8           TEST LENGTH CODE IS NINE
         EX    R1,TESTUNED    SCAN FOR DELIMITER  , BLANK )
         BZ    ERRORE         NOT FOUND
         SR    R1,R6          LENGTH OF SUBPARM
         B     UPUNED13
UPUNED12 EQU   *
         L     R1,PRMENDE     CALCULATE MAX REMAINING LENGTH
         SR    R1,R6
         EX    R1,TESTUNED    SCAN FOR DELIMITER  , BLANK )
         BNZ   UPUNED14       DELIMITER FOUND
         L     R1,PRMENDE     END OF PARM FIELD IS DELIMITER
         LA    R1,1(R1)
UPUNED14 EQU   *
         SR    R1,R6          LENGTH OF SUBPARAMETER
UPUNED13 EQU   *
         STC   R1,UNED1L2E     STORE LENGTH
         BZ    UPUNED15       ZERO LENGTH
         BCTR  R1,0           DECREASE LENGTH FOR EX
         EX    R1,MOVEUNED    MOVE SUBPARAMETER TO WORK AREA
         LA    R1,1(R1)
UPUNED15 EQU   *
         AR    R6,R1          INCREASE PARAMETER INDEX
         TM    UNED1S1E,X'01'  TEST LOOP INDICATOR
         BO    UPUNED16       ALL SUBPARAMETERS PROCESSED
         OI    UNED1S1E,X'01'  SET LOOP INDICATOR
         MVC   UNED1L1E,UNED1L2E  SHIFT WORK AREA
         MVC   UNED1F1E,UNED1F2E
         XC    UNED1L2E,UNED1L2E
         MVC   UNED1F2E,=8C' '
         C     R6,PRMENDE     MARGIN EXCEEDED ?
         BNH   UPUNED17       NO
UPUNED18 EQU   *
*               MARGIN EXCEEDED
         TM    UNED1S1E,X'02'  LEFT PARENTHESIS CODED ?
         BO    ERRORE         YES. ERROR
         B     UPUNED1X       RETURN
UPUNED17 EQU   *
         CLI   0(R6),C' '     BLANK MEANS NO MORE PARAMETERS
         BE    UPUNED18
         CLI   0(R6),C')'     RIGHT PARENTHESIS CODED ?
         BNE   UPUNED19       NO
         TM    UNED1S1E,X'02'  YES. LEFT PARENTHESIS PRESENT ?
         BZ    ERRORE         NO. UNBALANCED PARENTHESES
         LA    R6,1(R6)       INCREASE PARM INDEX
         B     UPUNED1X       RETURN
UPUNED19 EQU   *
*    COMMA DELIMITER
         TM    UNED1S1E,X'02'  LEFT PARENTHESIS PRESENT ?
         BZ    UPUNED1X       NO. COMMA IS PARM DELIMITER
         B     UPUNED10       PICK UP NEXT SUBPARAMETER
UPUNED16 EQU   *              2ND SUBPARM PROCESSED.
         C     R6,PRMENDE     MARGIN EXCEEDED ?
         BH    ERRORE         YES. ERROR
         CLI   0(R6),C')'     RIGHT PARENTHESIS PRESENT ?
         BNE   ERRORE         NO. ERROR
         TM    UNED1S1E,X'02'  LEFT PARENTHESIS PRESENT ?
         BZ    ERRORE         NO. UNBALANCED PARENTHESES
         LA    R6,1(R6)       INCREASE PARM FIELD INDEX
UPUNED1X EQU   *    RETURN-ROUTINE
         LA    R1,0(R13)     GET ADDR OF CALLER'S SAVEAREA
         L     R13,4(R1)
         LM    R14,R5,12(R13)  RESTORE REGISTERS (EXCEPT R6)
         LM    R7,R12,48(R13)
         BR    R14     RETURN TO CALLER
ERRORE   EQU   *    ERROR  RETURN
         LA    R1,0(R13)      GET ADDR OF CALLER'S SAVE AREA
         L     R13,4(R1)
         LM    R14,R5,12(R13)    RESTORE REGISTERS (EXCEPT R6)
         LM    R7,R12,48(R13)
         B     ERROR
*
*    D E F I N I T I O N S
*
TESTUNED TRT   0(0,R6),TESTAB
MOVEUNED MVC   UNED1F2E(0),0(R6)
         LTORG
PRMENDE  DS    F              ADDR OF LAST BYTE IN PARM FIELD
         DROP  5
TESTAB   DS    CL256          TEST TABLE
         DROP  7
ERROR    DS    0F
         DROP  8
UNEDWA   DSECT
*   THE ORDER OF THE FOLLOWING FIELDS MUST NOT BE CHANGED
UNED1F1E DS    CL8            UPUNED1 VALUE1
         DS    C              DELIMITER
UNED1F2E DS    CL8            UPUNED1 VALUE2
         DS    C              DELIMITER
UNED1L1E DS    C              UPUNED1 LENGTH OF FIRST VALUE
UNED1L2E DS    C              UPUNED1 LENGTH OF SECND VALUE
UNED1S1E DS    C              UPUNED1 INDICATOR BYTE
*     XXXX XX..    RESERVED
*     .... ..1.    LEFT PARENTHESIS INDICATOR
*     .... ...1    LOOP INDICATOR
         SPACE
         DROP  4
         EJECT
X001450   CSECT
          CNOP  2,4
         USING NA0,3,4,5,9
***********************************************************
*                                                         *
*              UNEDIT ROUTINE NUMBER TWO                  *
*                                                         *
*    THIS ROUTINE CONVERTS AN UNPACKED DECIMAL VALUE      *
*    TO BINARY.                                           *
*    THE MAX LENGTH OF THE UNPACKED DECIMAL VALUE IS      *
*    8 BYTES.                                             *
*    R6 MUST POINT TO THE FIRST BYTE OF THE VALUE         *
*    THE VALUE MUST BE FOLLOWED BY A BLANK, COMMA OR      *
*    RIGHT PARENTHESIS.                                   *
*    THE CONVERTED VALUE WILL BE RETURNED IN REG 8        *
*                                                         *
***********************************************************
         SPACE
UPUNED2  EQU   *
         XR    R8,R8          CLEAR RETURN VALUE
         TRT   0(9,R6),TKOBLKR  SCAN FOR DELIMITER
         BZ    FEHLIN         NO DELIMITER FOUND
         SR    R1,R6          LENGTH OF VALUE
         BZ    0(R10)         LENGTH IS ZERO. RETURN
         BCTR  R1,0           DECREASE LENGTH FOR EX
         LR    R15,R1         SAVE LENGTH CODE
         EX    R15,TEST3      SCAN FOR NUMERICAL CHAR
         BNZ   FEHLIN         VALUE NOT DECIMAL
         EX    R15,PACK1      PACK VALUE
         CVB   R8,DOPPLW      CONVERT TO BINARY
         LA    R6,1(R6,R15)   INCREASE INDEX
         BR    R10            RETURN
         SPACE
***************************************************************
*                                                             *
*              UNEDIT ROUTINE NUMBER THREE                    *
*                                                             *
*    THIS ROUTINE PICKS UP A CHARACTER VALUE AND PASSES       *
*    THE VALUE AND ITS LENGTH TO THE CALLER.                  *
*    THE MAXIMUM LENGTH IS EIGHT BYTES.                       *
*                                                             *
*    REG 6 MUST POINT TO THE BEGINNING OF THE VALUE           *
*    THE VALUE MUST BE FOLLOWED BY A BLANK, COMMA OR          *
*    RIGHT PARENTHESIS.                                       *
*    THE LENGTH IS RETURNED IN UNED3L1.                       *
*    THE VALUE IS RETURNED IN UNED3F1.                        *
*                                                             *
***************************************************************
         SPACE
UPUNED3  EQU   *
         MVC   UNED3F1(9),=9C' '  CLEAR RETURN FIELD
         XC    UNED3L1,UNED3L1  CLEAR LENGTH FIELD
         TRT   0(9,R6),TKOBLKR  SCAN FOR DELIMITER
         BZ    FEHLIN         NO DELIMITER FOUND
         SR    R1,R6          LENGTH OF THE VALUE
         BZ    0(R10)         LENGTH IS ZERO. RETURN
         STC   R1,UNED3L1     STORE LENGTH INTO RETURN FIELD
         BCTR  R1,0           DECREASE LENGTH FOR EX
         EX    R1,MOVE6       MOVE VALUE TO RETURN FIRLD
         LA    R6,1(R6,R1)    INCREASE INDEX
         BR    R10            RETURN
         SPACE
*   UNEDIT ROUTINES DEFINITIONS
         SPACE
*   THE ORDER OF THE FOLLOWING FIELDS MUST NOT BE CHANGED
UNED1F1  DS    CL8            UPUNED1 VALUE1
         DS    C              DELIMITER
UNED1F2  DS    CL8            UPUNED1 VALUE2
         DS    C              DELIMITER
UNED1L1  DS    C              UPUNED1 LENGTH OF FIRST VALUE
UNED1L2  DS    C              UPUNED1 LENGTH OF SECND VALUE
UNED1S1  DS    C              UPUNED1 INDICATOR BYTE
*     XXXX XX..    RESERVED
*     .... ..1.    LEFT PARENTHESIS INDICATOR
*     .... ...1    LOOP INDICATOR
         SPACE
UNED3F1  DS    CL8            UPUNED3  RETURNED VALUE
         DS    C              DELIMITER
UNED3L1  DS    C              UPUNED3  LENGTH OF VALUE
         DS   0H
         SPACE 3
*******************************************************
*                                                     *
*                GET DSNAME ROUTINE                   *
*                                                     *
*    THIS ROUTINE READS A DSNL RECORD.                *
*                                                     *
*******************************************************
         SPACE
GETDSN   EQU   *
         GET   DSNL,EBER      READ DSNL STATEMENT
         MVC   MBER2,M2BL     CLEAR MESSAGE AREA
         MVC  MBER2+22(80),EBER  DSNL RECORD TO MESSAGE AREA
         BR    R10            RETURN
         EJECT
***********************************************************
*                                                         *
*          GET DEVICE CONSTANTS SUBROUTINE                *
*                                                         *
*   THIS ROUTINE READS THE FORMAT 4 DSCB AND FETCHES      *
*   THE TRACK CAPACITY AND THE NUMBER OF TRACKS PER CYL   *
*                                                         *
*   THE ROUTINE MUST BE CALLED AS SHOWN                   *
*                                                         *
*   CALL   R10,UPDEVCON                                   *
*   DC     ADDR OF A TWO BYTE FIELD 'TRACK CAPACITY'      *
*   DC     ADDR OF A TWO BYTE FIELD 'TRACKS PER CYLINDER' *
*   DC     ADDR OF A SIX BYTE FIELD 'VOLUME SERIAL NO.'   *
*                                                         *
***********************************************************
         SPACE
UPDEVCON EQU   *
         L     R1,8(R10)      ACCESS VOL SER
         MVC   VOLOBT,0(R1)   MOVE IT TO OBTAIN PARAMETER LIST
         MVC   DSNOBT,=44X'04'  F4 DSCB SHOULD BE OBTAINED
         OBTAIN SEARCHL
         LTR   R15,R15        TEST RETURN
         BNZ   FEHLVTOC       OBTAIN ERROR
         LA    R2,DSCBAREA    F4 DSCB ADDRESSABILITY
         USING IECSDSL4,2
         MVC   DOPPLW(2),DS4DEVTK  TRACK CAPACITY
         XR    R1,R1          DECREASED BY NUMBER OF OVERHEAD BYTES
         TM    DS4DEVFG,X'08' IS IT A TWO BYTE FIELD ?
         BZ    UPDEVC1        NO
         MVC   DOPPLW+2(2),DS4DEVOV  NO. OF OVERHEAD BYTES
         SR    R1,R1          CLEAR WORK            PA 20310
         ICM   R1,3,DOPPLW+2                        PA 20310
         B     UPDEVC2
UPDEVC1  EQU   *
         IC    R1,DS4DEVI
         CLC   DS4DEVI,DS4DEVL
         BNL   *+8
         IC    R1,DS4DEVL
UPDEVC2  EQU   *
         XC    DOPPLW+2(2),DOPPLW+2
         MVC   DOPPLW+3(1),DS4DEVK  NON KEY CORRECTION
         SH    R1,DOPPLW+2
         LNR   R1,R1
         SR    R0,R0               CLEAR WORK       PA 20310
         ICM   R0,3,DOPPLW         GET CAPACITY     PA 20310
         AR    R1,R0               ACCUM            PA 20310
         STCM  R1,3,DOPPLW      TRACK CAPACITY  PA 20310
         L     R1,0(R10)      PASS IT TO CALLER
         MVC   0(2,R1),DOPPLW
         L     R1,4(R10)      PASS NUMBER OF TRACKS PER CYLINDER
         MVC   0(2,R1),DS4DEVSZ+2  TO CALLER
         B     12(R10)        RETURN TO CALLER
         EJECT
***************************************************
*                                                 *
*          CONVERT TO FLOATING POINT              *
*                                                 *
*   THIS ROUTINE CONVERTS A BINARY VALUE TO       *
*   FLOATING POINT, SHORT FORMAT.                 *
*   GENERAL REG 1 MUST CONTAIN THE VALUE          *
*   TO BE CONVERTED.                              *
*   THE SHORT FLOATING POINT NUMBER IS RETURNED   *
*   IN FIELD 'DOPPLW', FORM= CCFFFFFF             *
*                                                 *
***************************************************
         SPACE
UPCVFL   EQU   *
         XR    R0,R0          CLEAR OVERFLOW REG
         LTR   R1,R1          ERROR IF VALUE IS ZERO
         BZ    FEHLCVFL
         SLDL  R0,8       BITS 1 - 7  (CHARACTERISTIC)
         LTR   R0,R0          ZERO TEST
         BNZ   FEHLCVFL       HIGH ORDER BITS NOT ZERO
         LA    R2,6           SET COUNT TO SIX
UPCVFL0  EQU   *
         SLDL  R0,4           SHIFT TO TEST HEX DIGIT
         LTR   R0,R0
         BNZ   UPCVFL1        FIRST SIGNIFICANT HEX DIGIT
         BCT   R2,UPCVFL0     ZERO DIGIT
UPCVFL1  EQU   *
         SRDL  R0,4           BACK SHIFT
         LR    R0,R2          REMAINING COUNT IS CHARACTERISTIC
         O     R0,=F'64'      INCREASE IT BY 64
         SRDL  R0,8           SHIFT BACK CHARACTERISTIC
         ST    R1,DOPPLW
         BR    R10            RETURN
         SPACE 3
*********************************************************
*                                                       *
*         CONVERT FLOATING POINT TO FIX                 *
*                                                       *
*   THIS ROUTINE CONVERTS A SHORT FLOATING POINT NUMBER *
*   TO BINARY FIX FORMAT. THE FLOATING POINT NUMBER     *
*   MUST BE PLACED IN 'DOPPLW', FORM= CCFFFFFF.         *
*   THE CONVERTED VALUE WILL BE RETURNED IN GENERAL     *
*   REGISTER 1.                                         *
*                                                       *
*********************************************************
         SPACE
UPCVFX   EQU   *
         XR    R0,R0          CLEAR OVERFLOW REG
         L     R1,DOPPLW      LOAD VALUE TO BE CONVERTED
         SLDL  R0,8           SHIFT CHARACTERISTIC TO OVERFLOW REG
         LA    R2,8           CALCULATE SHIFT VALUE
         SH    R0,=H'64'
         BM    FEHLCVFX
         SR    R2,R0
         SLA   R2,2           SHIFT VALUE
         SRL   R1,0(R2)       SHIFT
         BR    R10            RETURN
*
*  CONVERT LOGICAL ERROR
*
FEHLCVFL EQU   *
         BAL   R10,FEHLLOG
FEHLCVFX EQU   *
         BAL   R10,FEHLLOG
         SPACE 2
****************************************************************
*                                                              *
*   P R I N T   R E T U R N   C O D E   R O U T I N E          *
*                                                              *
****************************************************************
         SPACE
PRTRC    EQU   *
         MVC   MBER,MBLANK    CLEAR MESSAGE AREA
         MVC   MBER+22(15),=C'RC=XX,REASON=XX'
         UNPK  MBER+25(3),0(2,R15)
         TR    MBER+25(2),TTRANS-240
         MVI   MBER+27,C','
         UNPK  MBER+35(3),1(2,R15)
         TR    MBER+35(2),TTRANS-240
         MVI   MBER+37,C' '
         PUT   MSG,MBER
         LA    R15,4          SET RETURN CODE TO 4
         C     R15,RC         CURRENT RC GREATER THAN 4 ?
         BL    0(R10)         - YES
         ST    R15,RC         - NO
         BR    R10
         EJECT
***************************************************************
***************************************************************
**                                                           **
**                 E R R O R   R O U T I N E S               **
**                                                           **
***************************************************************
***************************************************************
         SPACE
FEHLPRM  EQU   *
         MVC   MBER,MBLANK
         MVC   MBER(21),=C'1**** PARAMETER ERROR'
FEHL0    EQU   *
         LA    R8,16          RETURN CODE 16
         ST    R8,RC
         PUT   MSG,MBER       WRITE ERROR MESSAGE
         B     ENDE           EXIT
FEHLIN   EQU   *
         MVC   MBER,MBLANK    CLEAR MESSAGE AREA
         MVC   MBER(26),=C'-*** INVALID DSN STATEMENT'
         B     FEHL0
FEHLTXT  EQU   *
         L     R1,AFTEXT
         MVC  MBER,0(R1)     INVALID TEXT UNIT IN DADS
FEHL1    EQU   *
         PUT   MSG,MBER       WRITE MESSAGE
         ABEND 0001,DUMP
FEHLLOG  EQU   *
         MVC   MBER,MBLANK
         MVC   MBER(18),=C'1*** LOGICAL ERROR'
         B     FEHL1
         SPACE
*    IEBGENER   RETURN CODE NOT ZERO
         SPACE
FEHLGENR EQU   *
         MVC   MBER,MBLANK    CLEAR MESSAGE AREA
         MVC   MBER+1(20),=20C'*'
         MVC   MBER+22(14),=C'IEBGENER RC=XX'
FEHLGEN1 EQU   *
         ST    R15,DOPPLW     TRANSLATE RETURN CODE TO HEX
         UNPK  MBER+34(3),DOPPLW+3(2)
         TR    MBER+34(2),TTRANS-240
         MVI   MBER+36,C' '
         MVC   MBER+37(44),DSN
         PUT   MSG,MBER       WRITE MESSAGE
         LA    R8,4           RETURN CODE 4
         C     R8,RC          CURRENT RC GREATER THAN 4 ?
         BNH   NM31           YES.
         ST    R8,RC          STORE RETURN CODE
         B     NM31
         SPACE
*    IEBCOPY   RETURN CODE NOT ZERO
         SPACE
FEHLCOPY EQU   *
         MVC   MBER,MBLANK    CLEAR MESSAGE AREA
         MVC   MBER+1(20),=20C'*'
         MVC   MBER+22(14),=C'IEBCOPY  RC=XX'
         B     FEHLGEN1
         SPACE
*   D Y N A M I C   A L L O C A T I O N   E R R O R S
         SPACE
DALERR   EQU   *
DUNERR   EQU   *
UPDINFO  EQU   *
         ST    R15,DOPPLW     SAVE RETURN CODE
         L     R1,AFDYN
   MVC MBER,0(R1)     DYNALLOC ERROR
         LA    R15,NS99RB     SVC99 REQUEST BLOCK ADDRESSABILITY
         USING S99RB,15
         UNPK  MBER+32(5),S99ERROR(3)  TRANSLATE ERROR CODE TO HEX
         TR    MBER+32(4),TTRANS-240
         MVI   MBER+36,C','
         UNPK  MBER+47(5),S99INFO(3)  TRANSLATE INFO CODE TO HEX
         TR    MBER+47(4),TTRANS-240
         MVI   MBER+51,C' '
         MVC   MBER+52(44),DSN  DSNAME
         PUT   MSG,MBER
         L     R15,DOPPLW     TEST DYNALLOC RETURN CODE
         LTR   R15,R15
         BNZ   FEHL0          IF NOT ZERO TERMINATE
         LA    R8,8           DYNALLOC INFO. SET RC 8
         C     R8,RC          CURRENT RC LOWER THAN 8
         BNH   0(R10)         NO. RETURN
         ST    R8,RC          YES. RC = 8
         BR    R10            RETURN
         SPACE
*   V T O C   E R R O R S
         SPACE
FEHLVTOC EQU   *
         L     R1,AFVTOC
         MVC   MBER,0(R1)     VTOC ERROR
         CVD   R15,DOPPLW     CONVERT RETURN CODE
         OI    DOPPLW+7,X'0F'  CLEAR SIGN
         UNPK  MBER+32(2),DOPPLW+6(2)
         MVC   MBER+40(6),VOLOBT
         B     FEHL1
         EJECT
******************************************
*                                        *
*            EODAD ROUTINES              *
*                                        *
******************************************
         SPACE
ENDDSNL  EQU   *
         TM    SWITCH,X'08'   EODAD DURING CONTINUATION ?
         BO    FEHLIN         YES. INVALID DSN STMT
         OI    SWITCH,X'40'   SET EODAD INDICATOR
         CLI   EBER,C'*'
         BE    ENDE
         TM    SWITCH,X'04'   STATUS 'NO COPY' ?
         BO    NN2            YES
         B     NL6
ENDE     EQU   *
         L     R1,AFENDE
         MVC   MBER,0(R1)    END MESSAGE
         UNPK  MBER+17(3),RC+3(2)
         TR    MBER+17(2),TTRANS-240
         MVI   MBER+19,C' '
         PUT   MSG,MBER
         CLOSE (DSNL,,MSG)
         TM    OPENSW+1,X'F0'  DADS OPEN ?
         BZ    ENDRET         NO
         CLOSE DADS
         NI    OPENSW+1,X'0F'  RESET OPEN SWITCH
ENDRET   EQU   *
         L     R13,SAVE+4
         L     R15,RC         RETURN CODE
         RETURN (14,12),RC=(15)
         EJECT
************************************************************
************************************************************
**                                                        **
**               D E F I N I T I O N S                    **
**                                                        **
************************************************************
************************************************************
         SPACE
TEMPDSN  DS    0CL16         TOTAL LENGTH OF TEMPDSN
         DC    C'TEMP.A0.'
TEMPJOB  DC    CL8' '        CONTAINS JOBNAME
         SPACE
SAVE     DS    18F            SAVE AREA
DOPPLW   DS    D              DOUBLE WORD USED BY CVB, CVD
COPYADR  DS    F              IEBCOPY ENTRY POINT ADDR
*   THE ORDER OF THE FOLLOWING THREE STMTS MUST NOT BE CHANGED
BLOCKADF DS    0F        )    BLOCKADDR OF ATTR RECORD
         DS    C         )
BLOCKAD  DS    CL3       )
REG10KEY DS    F              RETURN REG SAVE AREA (KEYWORD ROUT)
REG10TUN DS    F   RETURN REG SAVE AREA TEXT UNIT MOD
REG6KEY  DS    F              REG 6 SAVE AREA (KEYWORD ROUT)
PRMEND   DS    F              ADDR OF LAST BYTE IN PARM FIELD
RC       DS    F              RETURN CODE
BLKTUNAD DS    F              ADDR OF BLOCK SIZE TEXT UNIT
RTDSNAD  DS    F              ADDR OF RETURNED DSN TEXT UNIT
APARMT   DC    V(PARMTAB)     ADDRESS OF PARM TAB
AFTEXT   DC    V(FTEXT)                      ADDR OF ERR MESSAGE
AFDYN    DC    V(FDYN)                       ADDR OF ERR MESSAGE
AFVTOC   DC    V(FVTOC)                      ADDR OF ERR MESSAGE
AFENDE   DC    V(FENDE)                      ADDR OF ERR MESSAGE
AKEYWT   DC    V(KEYWTAB)     ADDRESS OF KEYWORD TABLE
ATS99K   DC    V(TS99KEY)     ADDRESS OF DYNALLOC KEY TAB
ATS99KC  DC    V(TS99KEYC)    ADDR OF DYNALLOC KEY TAB (COMPRESS)
ATRECF   DC    V(TRECFM)      ADDR OF RECFM TABLE
         DS    H              IEBGENER PARM FIELD
PARM     DC    H'0'
         DC    F'0'
         DS    H              IEBCOPY PARM FIELD
COPYPRM  DC    H'0'
         DC    8X'00'
TRKCAPFG DS    H  )  TRACK CAPACITY OF FROM VOLUME
TRKCYLFG DS    H  )  TRACKS PER CYLINDER OF FROM VOLUME
TRKCAPTG DS    H  )  TRACK CAPACITY OF TO VOLUME
TRKCYLTG DS    H  )  TRACKS PER CYLINDER OF TO VLUME
TRKCAPFL DS    H  )  TRACK CAPACITY OF SPECIAL FROM VOLUME
TRKCYLFL DS    H  )  TRACKS PER CYLINDER OF SPECIAL FROM VOL
TRKCAPTL DS    H  )  TRACK CAPACITY OF SPECIAL TO VOLUME
TRKCYLTL DS    H  )  TRACKS PER CYLINDER OF SPECIAL TO VOL
TRKCAPUT DS    H  )  TRACK CAPACITY OF UTILITY VOLUME
TRKCYLUT DS    H  )  TRACKS PER CYLINDER OF UT VOL
         EJECT
*   ATTRIBUTE WORK AREA. THE ORDER OF THE SUBFIELDS
*   MUST NOT BE CHANGED.
         SPACE
         DS    0F
ATRBER   DS    0CL67
         DS    C
SPCPRI   DS    CL3            PRIMARY ALLOCATION
         DS    C
SPCSEC   DS    CL3     SECONDARY ALLOCATION
         DS    C
SPCDIR   DS    CL3            DIRECTORY BLOCK ALLOC
ATRSW1   DS    C              ATTRIBUTES INDICATOR NUMBER ONE
*     1... ....    DIRECTORY BLOCK ALLOC SPECIFIED
*     .1.. ....    UNTNEW - TO UNIT SPECIFIED IN DSN STMT
*     ..1. ....    VOLNEW - TO VOLUME SPECIFIED IN DSN STMT
*     ...1 ....    EXPIRATION DATE SPECIFIED
*     .... 1...    FORMAT OF REQUESTED SPACE SPECIFIED
*     .... .1..    SECONDARY SPACE SPECIFIED
*     .... ..1.    PRIMARY SPACE SPECIFIED
*     .... ...1    BLOCK ADDR OF ATTR RECORD PRESENT
         SPACE
ATRSW2   DS    C              ATTRIBUTES INDICATOR NUMBER TWO
*     1... ....    UNTOLD - FROM UNIT SPECIFIED IN DSN STMT
*     .1.. ....    VOLOLD - FROM VOLUME SPECIFIED IN DSN STMT
*     ..1. ....    PASSWORD SPECIFIED
*     ...1 ....    UPDATE PROTECTION SPECIFIED
*     .... 1...    REBLOCKING SPECIFIED
*     .... .1..    BLOCKSIZE SPECIFIED
*     .... ..1.    LRECL SPECIFIED
*     .... ...1    RECFM SPECIFIED
         SPACE
LRECL    DS    H              LOGICAL RECORD LENGTH
BLKL     DS    H              BLOCK SIZE
ATTR     DS    CL5            BLOCK ADDR OF ATTR RECORD (CHAR)
SPCFMT   DS    C              FORMAT OF REQUESTED SPACE
*    XXX. ....   RESERVED
*    ...1 ....   PRIMARY SPACE IS CODED
*    .... 1...   NULLIFY CONTIG REQUEST
*    .... .1..   CONTIG SPECIFIED
*    .... ..1.   CYLINDER ALLOCATION
*    .... ...1   TRACK ALLOCATION
         SPACE
RECFM    DS    C              RECORD FORMAT, SEE FORMAT 1 DSCB
EXPDTC   DS    CL5            EXPIRATION DATE
VOLNEW   DS    CL6            TO VOLUME (DSN STMT)
UNTNEW   DS    CL8            TO UNIT (DSN STMT)
PASSWFL  DS    C              PASSWORD FLAG
*     X'10'   FULL PROTECTION
*     X'30'   UPDATE PROTECTION
         SPACE
PASSW    DS    CL8            PASSWORD
VOLOLDP  DS    CL6            FROM VOLUME (DSN STMT)
UNTOLDP  DS    CL8            FROM UNIT (DSN STMT)
         SPACE
*********  END OF ATTRIBUTE WORK AREA  ***************************
         EJECT
COMPSW   DS    C              COMRESSION INDICATOR BYTE
*    XXXX XX..   RESERVED
*    .... ..1.   COMPRESSION DONE
*    .... ...1   COMPRESSION REQUEST
         SPACE
CATMOVSW DS    C              RECAT / MOVE INDICATOR BYTE
*    1... ....    GLOBAL RECAT SPECIFIED
*    .1.. ....    GLOBAL MOVE SPECIFIED
*    ..1. ....    LOCAL RECAT SPECIFIED
*    ...1 ....    LOCAL MOVE SPECIFIED
*    .... 1...    'NO RECAT' SPECIFIED
*    .... .1..    'NO MOVE' SPECIFIED
*    .... ..1.    COPY OPERATION SUCCESSFUL (RC=0)
*    .... ...1    COMPRESS FUNCTION TERMINATED
         SPACE
SWITCH   DS    C              PROGRAM INDICATOR BYTE
*   1... ....   UTSPC  SYSUT3,SYSUT4 SPACE SPECIFIED
*   .1.. ....   EOF DSNL DATA SET
*   ..1. ....   IEBGENER WILL BE CALLED
*   ...1 ....   IEBCOPY WILL BE CALLED
*   .... 1...   A CONTINUATION CARD WILL BE READ
*   .... .1..   1) NO COPY INDICATOR
*               2) UTVOL  SYSUT3,SYSUT4 VOLUME SPECIFIED
*   .... ..1.   FROM SPECIFIED IN PARM FIELD
*   .... ...1   TO  SPECIFIED IN PARM FIELD
         SPACE
DSNBL    DC    C' '           BLANK TO CLEAR DSN FIELD
DSN      DS    CL44           DSNAME WORK AREA
EBER     DS    CL80           DSNL INPUT AREA
         DC    CL20' '        INPUT OVERFLOW AREA
CBLANK   DC  C' '  BLANK TO CLEAR UTILITY CTL AREA
CBER     DS    CL80           UTILITY CTL AREA
VOLFR    DS    CL6            FROM VOLUME (PARM FIELD)
UNITFR   DS    CL8            FROM UNIT (PARM FIELD)
VOLTO    DS    CL6            TO VOLUME (PARM FIELD)
UNITTO   DS    CL8            TO UNIT (PARM FIELD)
MBLANK   DC    C' '           BLANK TO CLEAR MESSAGE AREA
MBER     DS    CL121          MESSAGE AREA
KEYWORD  DS    CL8            KEYWORD WORK AREA
M2BL     DC    C' '           BLANK TO CLEAR 2ND MSG AREA
MBER2    DS    CL121          2ND MSG AREA
UCBUN    DC    CL8'3350'
         DC    X'0B'
         DC    CL8'3380'
         DC    X'0E'
ANZUN    EQU   (*-UCBUN)/9
         SPACE
*   COMPRESS OPTION SAVE AREA
         SPACE
COMPRSVE DS    0CL22
VOLSAVE  DS    CL6            )  THE SEQUENCE OF THIS
UNITSAVE DS    CL8            )     DEFINITIONS
TRKCAPSV DS    CL2            )     MUST
TRKCYLSV DS    CL2            )     NOT
SPACESV  DS    CL4            )     BE CHANGED.
         SPACE
*   INSTRUCTIONS PERFORMED BY EXECUTE
         SPACE
         USING S99TUNIT,6
MOVE1    MVC   DSN(0),EBER+4
MOVE2    MVC   DDNOLDN(0),S99TUPAR
MOVE3    MVC   DSNOLDN(0),S99TUPAR
MOVE4    MVC   KEYWORD(0),0(R6)
MOVE5    MVC   UNED1F2(0),0(R6)
MOVE6    MVC   UNED3F1(0),0(R6)
TEST1    TM    RECFM,X'00'
TEST2    TRT   0(0,R6),TKOBLKR
TEST3    TRT   0(0,R6),TNUM
OR1      OI    RECFM,X'00'
PACK1    PACK  DOPPLW,0(0,R6)
*
*   O B T A I N   P A R A M E T E R   L I S T
*
SEARCHL  CAMLST SEARCH,DSNOBT,VOLOBT,DSCBAREA
DSNOBT   DS    CL44           DSNAME
VOLOBT   DS    CL6            VOL SER
DSCBAREA DS    CL140          DSCB WORK AREA
RENLST   CAMLST RENAME,DSNREN,DSN,VOLIST
SCRLIST  CAMLST SCRATCH,DSNREN,,VOLIST,,OVRD
SCRLISTM CAMLST SCRATCH,DSNMOV,,VOLISTM,,OVRD
UNCAT    CAMLST UNCAT,DSN
CATLIST  CAMLST CAT,DSN,,VOLIST
DSNREN   DS    CL44
VOLIST   DC    H'1'
DEVT     DS    CL4
VOLREN   DS    CL6
RENRET   DC    H'0'
DSNMOV   DS    CL44           DSNAME TO BE MOVED
         DS    0H
VOLISTM  DS    0CL14          MOVE OP VOLUME LIST
         DC    H'1'           NUMBER OF VOLUMES IS ONE
DEVTM    DS    CL4            DEVICE TYPE
VOLMOV   DS    CL6            VOLUME SERIAL NO
MOVRET   DS    H              STATUS FIELD
BLKTRKO  DC    H'0'
BLKTRKN  DC    H'0'
BALANCE  DC    H'0'
BLOCK    DS    0F
         DC    X'1'
         DC    X'0'
BLKS     DC    X'0000'
         EJECT
*****************************************
*                                       *
*     DYNAMIC ALLOC DEFINITIONS         *
*                                       *
*****************************************
         SPACE
*    OLD DATA SET
         SPACE
*        TEXT UNIT POINTER LIST
         DS    0F
TUPLOLD  EQU   *
         DC    A(DDNOLD)
         DC    A(DSNOLD)
         DC    A(STATOLD)
         DC    A(DISPOLD)
         DC    A(VOLOLD)
TUPLOEND DC    X'80'
         DC    AL3(UNITOLD)
         DC    X'80'
         DC    AL3(PSWOLD)
TUPLOLDU DC    X'80'
         DC    AL3(DDNOLD)
*        TEXT UNITS
         DS    0H
DDNOLD   DC    X'0001',H'1'      DDNAME
DDNOLDL  DS    H              LENGTH OF DDNAME
DDNOLDN  DS    CL8            DDNAME
         DS    0H
DSNOLD   DC    X'0002',H'1'   DSNAME TEXT UNIT
DSNOLDL  DS    H              LENGTH OF DSNAME
DSNOLDN  DS    CL44           DSNAME
         DS    0H
STATOLD  DC    X'0004',H'1',H'1',X'08'   STATUS = SHR
         DS    0H
DISPOLD  DC    X'0005',H'1',H'1',X'08'   DISP = KEEP
         DS    0H
VOLOLD   DC    X'0010',H'1',H'6'   VOL SER TEXT UNIT
VOLOLDV  DS    CL6            VOL SER
         DS    0H
UNITOLD  DC    X'0015',H'1'   UNIT TEXT UNIT
UNITOLDL DS    H              LENGTH OF UNIT NAME
UNITOLDU DS    CL8            UNIT NAME
         DS    0H
PSWOLD   DS    X'0050',H'1'   PASSWORD TEXT UNIT
PSWOLDL  DS    H              LENGTH OF PASSWORD
PSWOLDP  DS    CL8            PASSWORD
         SPACE
*    SYSUT3 / SYSUT4
         SPACE
*       TEXT UNIT POINTER LIST
UT3ATUPL EQU   *
         DC    A(UT3DDN)
         DC    A(UT3STA)
         DC    A(UT3DSP)
         DC    A(UT3TRK)
         DC    A(UT3PRI)
         DC    A(UT3SEC)
UT3VOLPP DC    A(0)
         DC    X'80'
         DC    AL3(UT3UNT)
UT3UTUPL DC    X'80'
         DC    AL3(UT3DDN)
*      TEXT UNITS
         DS    0H
UT3DDN   DC    X'0001',H'1',H'6'  DDNAME TEXT UNIT
UT3DDNN  DC    C'SYSUT3'      DDNAME
         DS    0H
UT3STA   DC    X'0004',H'1',H'1',X'04'   STATUS = NEW
         DS    0H
UT3DSP   DC    X'0005',H'1',H'1',X'04'   DISP = DELETE
         DS    0H
UT3TRK   DC    X'0007',H'0'   TRACK ALLOC
         DS    0H
UT3PRI   DC    X'000A',H'1',H'3'   PRIMARY SPACE TEXT UNIT
UT3PRIS  DC    AL3(10)        DEFAULT IS 10
         DS    0H
UT3SEC   DC    X'000B',H'1',H'3'  SECONDARY SPACE TEXT UNIT
UT3SECS  DC    AL3(10)        DEFAULT IS 10
         DS    0H
UT3VOL   DC    X'0010',H'1',H'6'   VOL SER TEXT UNIT
UT3VOLV  DS    CL6     VOL SER
         DS    0H
UT3UNT   DC    X'0015',H'1'     UNIT NAME TEXT UNIT
UT3UNTL  DC    H'5'           DEFAULT LENGTH IS FIVE
UT3UNTU  DC    CL8'SYSDA'     DEFAULT NAME IS SYSDA
         SPACE
*   SVC 99 REQUEST BLOCK DEFINITIONS
         SPACE
         DS    0F
NS99RBPT DC    X'80'          SVC 99 REQUEST BLOCK PTR
         DC    AL3(NS99RB)
*   SVC 99 REQUEST BLOCK
         DS    0F
NS99RB   EQU   *
         DC    AL1(20)        LENGTH IS 20
         DS    C
         DC    H'0'
         DC    4F'0'
         SPACE
*   NEW DATA SET
         SPACE
*      TEXT UNIT POINTER LIST
TUPLFREE DS    F              ADDR OF NEXT FREE TEXT UNIT POINTER
TUPLNEW  DS    32F
*      TEXT UNITS
         DS    0F
TXTAREA  DS    CL190
         DS    0H
         DS    C
TXTBL    DC    C' '           BLANK TO CLEAR ADDITIONAL TXT AREA
TXTAREA2 DS    CL190          ADDITIONAL TXT UNIT AREA
         EJECT
*****************************************
*                                       *
*           T A B L E S                 *
*                                       *
*****************************************
         SPACE
*   PERIOD TEST TABLE (COPY SEPARATOR)
         SPACE
TPUNKT   DC    75X'00'
         DC    C'.'
         DC    180X'00'
         SPACE
*   DELIMITER TEST TABLE  -BLANK-
         SPACE
TBL      EQU   *
         DC    64X'00'
         DC    X'40'
         DC    191X'00'
         SPACE
*   DELIMITER TEST TABLE  -NONBLANK-
         SPACE
TNOBL    EQU   *
         DC    64X'FF'
         DC    X'00'   BLANK
         DC    191X'FF'
         SPACE
*   DELIMITER TEST TABLE  -EQUAL SIGN-
         SPACE
TDLMEQU  EQU   *
         DC    126X'00'
         DC    C'='
         DC    129X'00'
         SPACE
*   DELIMITER TEST TABLE   -BLANK, LEFT PARENTHESIS-
         SPACE
TDLMBLKL EQU   *
         DC    64X'00'
         DC    X'40'
         DC    12X'00'
         DC    C'('
         DC    178X'00'
         SPACE
*   TEST TABLE  -NUMERICAL
         SPACE
TNUM     EQU   *
         DC    240X'FF'
         DC    10X'00'   0 - 9
         DC    6X'FF'
         SPACE
*   DELIMITER TEST TABLE   -COMMA, BLANK, RIGHT PARENTHESIS-
         SPACE
TKOBLKR  EQU   *
         DC    64X'00'
         DC    X'40'
         DC    28X'00'
         DC    C')'
         DC    13X'00'
         DC    C','
         DC    148X'00'
         SPACE
*   HEX TRANSLATION TABLE
         SPACE
TTRANS   DC   X'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'
         SPACE
*   PARAMETER KEYWORD TABLE
         SPACE
         DS    0F
PARMTAB  CSECT
         DC    CL8'FROM',A(NFROM)
         DC    CL8'TO',A(NTO)
         DC    CL8'UTSPC',A(NUT)
         DC    CL8'UTVOL',A(NUTV)
         DC    CL8'RECAT',A(NPCAT)
         DC    CL8'MOVE',A(NPMOVE)
         DC    X'FF00',6X'00'
         SPACE
*   ATTRIBUTES KEYWORD TABLE
         SPACE
         DS    0F
KEYWTAB  CSECT
         DC    CL8'ATTR',A(NATTR)
         DC    CL8'SPACE',A(NSPACE)
         DC    CL8'TRACKS',A(NTRACK)
         DC    CL8'TRK',A(NTRACK)
         DC    CL8'CONTIG',A(NCONTIG)
         DC    CL8'CTG',A(NCONTIG)
         DC    CL8'NCTG',A(NNONCTG)
         DC    CL8'CYLINDER',A(NCYLNDR)
         DC    CL8'CYL',A(NCYLNDR)
         DC    CL8'RECFM',A(NRECFM)
         DC    CL8'LRECL',A(NLRECL)
         DC    CL8'BLKSIZE',A(NBLKSIZE)
         DC    CL8'EXPDT',A(NEXPDT)
         DC    CL8'TOVOL',A(NTOVOL)
         DC    CL8'TOUNIT',A(NTOUNIT)
         DC    CL8'FROMVOL',A(NFRVOL)
         DC    CL8'FROMUNIT',A(NFRUNIT)
         DC    CL8'PASSW',A(NPASSW)
         DC    CL8'READ',A(NREAD)
         DC    CL8'DIR',A(NDIRBLK)
         DC    CL8'RECAT',A(NCAT)
         DC    CL8'RC',A(NCAT)
         DC    CL8'NORECAT',A(NNCAT)
         DC    CL8'NRC',A(NNCAT)
         DC    CL8'MOVE',A(NMOVE)
         DC    CL8'MO',A(NMOVE)
         DC    CL8'NOMOVE',A(NNMOVE)
         DC    CL8'NMO',A(NNMOVE)
         DC    X'FF01',6X'00'
         SPACE
*     DYNALLOC KEY TABLES
         SPACE
         DS    0F
TS99KEY  CSECT
         DC    X'0001',H'0',A(0)       DDNAME
         DC    X'0002',H'0',A(DELTU)   DSNAME
         DC    X'0007',H'0',A(NTRK)    TRACK ALLOCATION
         DC    X'0008',H'0',A(NCYL)    CYLINDER ALLOCATION
         DC    X'000A',H'0',A(NPRI)    PRIMARY SPACE
         DC    X'000B',H'0',A(NSEC)    SECONDARY SPACE
         DC    X'000C',H'0',A(NDIR)    DIRECTORY BLOCK ALLOC
         DC    X'000E',H'0',A(NFMT)    FORMAT OF REQUESTED SPACE
         DC    X'0022',H'0',A(NEXP)    EXPIRATION DATE
         DC    X'0030',H'0',A(NBLK)    BLOCKSIZE
         DC    X'003C',H'0',A(0)       DSORG                 PA 20310
         DC    X'0040',H'0',A(0)       KEY LENGTH
         DC    X'0042',H'0',A(NLRL)    LRECL
         DC    X'0045',H'0',A(0)       OPTION CODE
         DC    X'0049',H'0',A(NRFM)    RECFM
         DC    X'FFFF'
         DS    0F
TS99KEYC CSECT
*  DYNALLOC KEY TABLE USED DURING COMPRESS PHASE
         DC    X'0001',H'0',A(NDDN)    DDNAME
         DC    X'0002',H'0',A(DELTU)   DSNAME
         DC    X'0007',H'0',A(0)       TRACK ALLOCATION
         DC    X'0008',H'0',A(0)       CYLINDER ALLOCATION
         DC    X'000A',H'0',A(NPRI)    PRIMARY SPACE
         DC    X'000B',H'0',A(0)       SECONDARY SPACE
         DC    X'000C',H'0',A(NDIR)    DIRECTORY BLOCK ALLOC
         DC    X'000E',H'0',A(0)       FORMAT OF REQUESTED SPACE
         DC    X'0022',H'0',A(DELTU)   EXPIRATION DATE
         DC    X'0030',H'0',A(NBLK)    BLOCKSIZE
         DC    X'003C',H'0',A(0)       DSORG                 PA 20310
         DC    X'0040',H'0',A(0)       KEY LENGTH
         DC    X'0042',H'0',A(NLRL)    LRECL
         DC    X'0045',H'0',A(0)       OPTION CODE
         DC    X'0049',H'0',A(NRFM)    RECFM
         DC    X'FFFF'
         SPACE
*   RECORD FORMAT BIT TABLE
         SPACE
TRECFM   CSECT
         DC    C'A',X'04'   ASA CTL CHAR
         DC    C'B',X'10'     BLOCKED RECORDS
         DC    C'F',X'80'     FIXED LENGTH RECORDS
         DC    C'M',X'02'     MACHINE CTL CHAR
         DC    C'S',X'08'     SPANNED RECORDS (VARIABLE LENGTH RCDS)
*                             STANDARD BLOCKS (FIXED LENGTH RCDS)
         DC    C'T',X'20'     TRACK OVERFLOW
         DC    C'U',X'C0'     UNDEFINED LENGTH RECORDS
         DC    C'V',X'40'     VARIABLE LENGTH RECORDS
         DC    X'FF'
         EJECT
X001450   CSECT
**************************************************************
*                                                            *
*         D A T A   C O N T R O L   B L O C K S              *
*                                                            *
**************************************************************
         SPACE
         PRINT NOGEN
DSNL     DCB   DDNAME=DSNL,DSORG=PS,MACRF=GM,EODAD=ENDDSNL
MSG      DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=PM,RECFM=FA,BLKSIZE=121
DADS     DCB   BLKSIZE=190,DDNAME=DADS,DSORG=DA,MACRF=RIC,             *
               OPTCD=R,RECFM=F
IN       DCB   DDNAME=SYSIN,DSORG=PS,MACRF=PM,RECFM=F,BLKSIZE=80
         EJECT
         LTORG
         EJECT
*   DYNALLOC DUMMY SECTIONS
         SPACE
         IHAPSA
         SPACE 5
         IHAASCB
         SPACE 5
         IEFZB4D0
         SPACE 5
         IEFZB4D2
*
*    D S C B  D E F I N I T I O N S
*
         IECSDSL1 (1)
         IECSDSL1 (4)
         EJECT
*************************************************
*                                               *
*   D E V I C E   T Y P E   R O U T I N E       *
*                                               *
*************************************************
         SPACE 3
DEVTYP   EANF
         EXTRACT TIOTADDR,'S',FIELDS=(TIOT)  GET TIOT ADDR
         L     R6,TIOTADDR    LOAD ADDR OF TIOT
         USING TIOT1,6        TIOT DSECT ADDRESSABILITY
DEVTYP0  EQU   *
         L     R7,TIOESTTB    ADDR OF UCB
         LA    R7,0(R7)       CLEAR HIGH ORDER BYTES
         LTR   R7,R7          ZERO UCB ADDR ?
         BZ    DEVTYP0A       YES
         USING UCB,7          UCB ADDRESSABILITY
         L     R8,0(R2)       VOL SER
         CLC   UCBVOLI,0(R8)  UCB FOUND ?
         BE    DEVTYP1        YES
DEVTYP0A EQU   *
         XR    R1,R1
         CLC   TIOTFEND,=4X'00'  END OF TIOT
         BE    DEVTYP00       YES
         ICM   R1,1,TIOELNGH    LENGTH OF DD ENTRY
         BZ    DEVTYP00
         AR    R6,R1          INCREASE FOR NEXT ENTRY
         B     DEVTYP0
DEVTYP00 EQU   *
         L     R8,4(R2)       ADDR OF DEVT
         XC    0(4,R8),0(R8)  ZERO DEV TYP
         B     DEVTEX
DEVTYP1  EQU   *
         L     R8,4(R2)       ADDR OF DEVT
         MVC   0(4,R8),UCBTYP PASS DEVICE TYPE TO CALLER
         NI    1(R8),X'DF'   CLEAR SHARABLE BIT
DEVTEX   EQU   *
         ERET
TIOTADDR DS    F              ADDR OF TASK I/O TABLE
         LTORG
TIOTDEF  DSECT
         IEFTIOT1
UCB      DSECT
         IEFUCBOB
FENDE    CSECT
         DC    CL121' X001450 ENDED.RC=XX'
FVTOC    CSECT
         DC    CL121'1*** ERROR READING THE VTOC. RC=XX. VOL=XXXXXX'
FDYN     CSECT
         DC  CL121'1*** DYNALLOC ERROR. ERROR CODE=XXXX,INFO CODE='
FTEXT    CSECT
         DC    CL121'1*** INVALID TEXT UNIT IN ATTRIBUTE DATA SET'
         END   X001450
1/* AN FOLGENDEN TAGEN WURDE DAS PROGRAMM GETESTET */
 /* NEUERSTELLUNG   27. JAN 1977            */
 /* NEUERSTELLUNG   25. FEB 1977            */
