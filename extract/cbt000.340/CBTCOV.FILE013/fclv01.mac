*          DATA SET SECEXIT    AT LEVEL 006 AS OF 06/11/84
         TITLE 'SECEXIT - VERSION 11.0 PAN UND 10.3 PAN/ISPF'
***********************************************************************
*                                                                     *
*  INSTALLATION: COLONIA VERSICHERUNG                                 *
*                IBM 3084                                             *
*                MVS/XA                                               *
*                ISPF 1.1.0 / PANVALET 11.0 / PANVALET/ISPF 10.3      *
*                                                                     *
*  AUTOR:        B. HENNERICI                                         *
*                                                                     *
*  DATUM:        05/11/84                                             *
*                                                                     *
*---------------------------------------------------------------------*
*                                                                     *
*  DIESES MODULE IST BESTANDTEIL DER GENERALIZED EXIT FACILITY VON    *
*  PANVALET 11.0                                                      *
*                                                                     *
*---------------------------------------------------------------------*
*                                                                     *
*  DIESER EXIT REALISIERT ZUGRIFFSKONTROLLE ZU PANVALET BIBLIOTHEKEN. *
*                                                                     *
*  DIE HIER FESTGELEGTEN RESTRIKTIONEN GELTEN NUR F}R DIE DATEI       *
*  'COL1.PAN.SOURCE'.                                                 *
*                                                                     *
*  1.                                                                 *
*                                                                     *
*  DURCH DIESEN EXIT WIRD DIE REVISIONSFORDERUNG  REALISIERT, DIE     *
*  BESAGT, DA~ NUR NOCH MITARBEITER EINES FACHGEBIETES IHRE SOURCE    *
*  VER{NDERN D}RFEN. ANDERE MITARBEITER K|NNEN DIESE SOURCE NUR LESEN *
*  (BZW. DAMIT AUCH KOPIEREN).                                        *
*                                                                     *
*  2.                                                                 *
*                                                                     *
*  F}R PI-PROGRAMM GILT DAR}BER HINAUS, DA~ LESEN UND SCHREIBEN NUR   *
*  VON FOLGENDEN USERIDS ERLAUBT IST:                                 *
*                                                                     *
*  PAUL                                                               *
*  PFEN                                                               *
*  BOPU                                                               *
*                                                                     *
*  3.                                                                 *
*                                                                     *
*  FUER DIE AV MUESSEN FOLGENDE KOMMANDOS IN VERBINDUNG MIT JOBS, DIE *
*  MIT J... BEGINNEN, FUER SICHERUNGEN UND RESTOREARBEITEN ERLAUBT    *
*  SEIN:                                                              *
*                                                                     *
*  ++BYPASS                                                           *
*  ++DELETE                                                           *
*  ++DUMP                                                             *
*  ++PRINT                                                            *
*  ++REPLACE                                                          *
*  ++RESTORE                                                          *
*  ++TRANSFER                                                         *
*  ++ANALYSIS                                                         *
*                                                                     *
*---------------------------------------------------------------------*
*                                                                     *
*  VERWENDETE REGISTER:                                               *
*                                                                     *
*  R1  - DSECT EXITPLST                                               *
*  R2  - DSECT EVENTBLK                                               *
*  R3  - DSECT ENVIRBLK                                               *
*  R4  - DSECT DATALIST                                               *
*  R5  - DSECT DLENTRY                                                *
*                                                                     *
*  R10 -       WORKAREA                                               *
*  R11 -       REGISTER FOR UP-BRANCH                                 *
*  R12 -       BASISREGISTER                                          *
*                                                                     *
***********************************************************************
         TITLE 'SECEXIT - FIND ITEM MACRO'
         MACRO
         FINDITEM  &ITEM=,&FAILED=
         GBLA  &NR
&NR      SETA  &NR+1
         L     R6,DLCOUNT
         LA    R5,DLFIRST
NEXTE&NR DS    0H
         CLC   DLEID,=CL8'&ITEM'
         BE    TESTE&NR
         LA    R5,DLENEXT
         BCT   R6,NEXTE&NR
         MVI   EVRESPON,C'A'
         B     &FAILED
TESTE&NR DS    0H
         MEND
         TITLE 'SECEXIT - SYSTEM DSECTS'
         PRINT NOGEN
         IHAASCB
         EJECT
         IHAASXB
         EJECT
         IHAACEE
         EJECT
         ICHPCGRP
         TITLE 'SECEXIT - EXIT PARAMETER LIST'
***********************************************************************
*        EXIT PARAMETER LIST                                          *
***********************************************************************
EXITPLST DSECT
EXEVENT  DS    A             EVENT -- THE ADDRESS OF THE EVENT BLOCK
EXENVIR  DS    A             ENVIRONMENT -- THE ADDRESS OF THE
*                            ENVIRONMENT BLOCK
EXDATA   DS    A             DATA LIST -- THE ADDRESS OF THE DATA
*                            LIST BLOCK (THE HIGH ORDER BIT IS SET
*                            TO INDICATE THE END OF THE PARAMETER
*                            ADDRESS LIST)
         TITLE 'SECEXIT - EVENT BLOCK'
***********************************************************************
*        EVENT BLOCK                                                  *
***********************************************************************
EVENTBLK DSECT
EVEVENT  DS    CL8           EVENT-ID -- THE NAME OF THE EVENT
*                            (E.G. INIT,$OPEN001,$MEM001,TERM ETC...)
EVEXTYPE DS    CL8           EXIT TYPE -- ANY USER EXIT IDENTIFIER
*                            (GIVEN ON THE EXIT TYPE= MACRO OR BLANKS)
EVRESPON DS    CL1           RESPONSE CODE -- INITIALLY 'C', SET BY
*                            USER EXIT TO:
CONTINUE EQU   C'C'          'C' - CONTINUE NORMAL PROCESSING
ABORT    EQU   C'A'          'A' - ABORT PANVALET PROCESSING
TERMINAT EQU   C'T'          'T' - TERMINATE THIS EXIT
*                                  (PANVALET WILL DISCONNECT THE EXIT
*                                  FROM ALL THE EVENTS FOR THE
*                                  DURATION OF THE RUNNING TASK ONLY
*                                  AND PROCEEDS AS IF 'C' HAD BEEN
*                                  SPECIFIED.  THIS INCLUDES THE TERM
*                                  EVENT.  AN EXIT RESPONDING WITH A
*                                  "T" SHOULD DO ALL CLEANUP REQUIRED
*                                  BEFORE RETURNING.  OTHER EXIT(S),
*                                  IF ANY, WILL CONTINUE TO BE CALLED
*                                  BY PANVALET.)
VERIFY   EQU   C'V'          'V' - ACTIVATE VERIFICATION
*                                  (VALID ONLY FROM THE INIT EVENT;
*                                  SEE THE INIT EVENT FOR DETAILS)
         DS    CL3           RESERVED
EVUSER   DS    F             USER FULLWORD -- INITIALLY ZEROES; TO BE
*                            USED BY USER AS DESIRED (E.G. ADDRESS OF
*                            A WORK AREA ETC...); THIS FIELD IS UNIQUE
*                            TO EACH EXIT DEFINED BY A EXIT MACRO
         TITLE 'SECEXIT - ENVIRONMENT BLOCK'
***********************************************************************
*        ENVIRONMENT BLOCK                                            *
***********************************************************************
ENVIRBLK DSECT
ENPRODID DS    CL10          PRODUCT NAME -- VALUE IS ALWAYS "PANVALET"
ENPRODOP DS    CL10          PRODUCT OPTION -- (E.G. TSO, ISPF)
ENPRODVR DS    CL4           PRODUCT VERSION -- THE RELEASE OF THE
*                            PRODUCT (I.E. PANVALET 11.0 = "1100")
ENOPSYS  DS    CL10          OPERATING SYSTEM -- THE OPERATING SYSTEM
*                            UNDER WHICH THE PRODUCT IS RUNNING
*                            ("OS/MVS" OR "OS/VS1" OR "OS/MVS/XA")
ENDCMON  DS    CL10          DC MONITOR
ENDBMGR  DS    CL10          DB MANAGER
         DS    XL2           RESERVED
ENDCPARM DS    A             ADDRESS OF CICS ENVIRONMENT BLOCK OR 0
ENDBPARM DS    A             ADDRESS OF DB MANAGER CONTROL BLOCK OR 0
         TITLE 'SECEXIT - DATA LIST BLOCK'
***********************************************************************
*        DATA LIST BLOCK                                              *
***********************************************************************
DATALIST DSECT
DLCOUNT  DS    F             DATA LIST COUNT -- THE NUMBER OF DATA
*                            LIST ENTRIES (0 TO N) FOLLOWING:
DLFIRST  DS    0X            FIRST DATA LIST ENTRY
         TITLE 'SECEXIT - DATA LIST ENTRY'
***********************************************************************
*        DATA LIST ENTRY                                              *
***********************************************************************
DLENTRY  DSECT               DATA LIST ENTRY:
DLEID    DS    CL8           DATA ID -- THE NAME OF THE DATA ITEM
*                            (E.G. ELEMFILE, JOBNAME ETC...)
DLESTAT  DS    CL1           DATA ITEM STATUS -- VALUES ARE:
ACTIVE   EQU   C'A'          'A' - ACTIVE
INACTIVE EQU   C'I'          'I' - INACTIVE
         DS    CL3           RESERVED
DLEITEM  DS    A             DATA ITEM ADDRESS -- THE ADDRESS OF THE
*                            ITEM
DLENEXT  DS    0X            BEGINNING OF NEXT ENTRY
         TITLE 'SECEXIT - WORKAREA'
***********************************************************************
*        WORKAREA                                                     *
***********************************************************************
WORKAREA DSECT
NUMBER   DS    1D
UCODE    DS    3C
ASIDF    DS    1F
WEXTRACT DS    CL(EXLENGTH)
WALENGTH EQU   *-WORKAREA
         TITLE 'SECEXIT - REGISTER EQUATES'
***********************************************************************
*        REGISTER EQUATES                                             *
***********************************************************************
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         EJECT
         TITLE 'SECEXIT - PROCESSING'
SECEXIT   CSECT
***********************************************************************
* SAVE CALLER'S REGISTERS                                             *
***********************************************************************
         SAVE  (14,12),T,*
***********************************************************************
* SET UP REGISTER 12 AS THE BASE REGISTER                             *
***********************************************************************
         LR    R12,R15
         USING SECEXIT,R12
***********************************************************************
* SET UP ADDRESSABILITY TO ALL PARAMETERS                             *
***********************************************************************
         USING EXITPLST,R1
         L     R2,EXEVENT
         USING EVENTBLK,R2
         L     R3,EXENVIR
         USING ENVIRBLK,R3
         L     R4,EXDATA
         USING DATALIST,R4
***********************************************************************
* DECLARE R5 AS BASE REGISTER FOR ALL DATA LIST ENTRIES               *
***********************************************************************
         LR    R5,R4
         LA    R5,4(R5)
         USING DLENTRY,R5
         EJECT
***********************************************************************
* IF EVENT = 'INIT' THEN DO                                           *
*                                                                     *
*    ALLOCATE A STANDARD OS SAVE AREA                                 *
*    STORE THE SAVE AREA ADDRESS IN THE EVENT BLOCK                   *
*                                                                     *
* END                                                                 *
* ELSE DO                                                             *
*                                                                     *
*    GET ADDRESS OF EXIT SAVE AREA STORED IN THE EVENT BLOCK          *
*                                                                     *
* END                                                                 *
***********************************************************************
         CLC   EVEVENT,=CL8'INIT'
         BNE   GETWKADR
         GETMAIN R,LV=72
         LR    R6,R1
         ST    R6,EVUSER
         B     LINKSAVE
GETWKADR DS    0H
         L     R6,EVUSER
***********************************************************************
* LINK EXIT SAVE AREA TO SAVE AREA CHAIN                              *
***********************************************************************
LINKSAVE DS    0H
         ST    R6,8(R13)
         ST    R13,4(R6)
***********************************************************************
* SET NEW SAVE AREA AS THE CURRENT SAVE AREA                          *
***********************************************************************
         LR    R13,R6
***********************************************************************
* INSTALL WORKAREA FOR $MEM001-EXIT                                   *
***********************************************************************
         GETMAIN R,LV=WALENGTH
         LR    R10,R1
         USING WORKAREA,R10
         EJECT
CHKMEM1  DS    0H
***********************************************************************
* IF EVENT = '$MEM001' THEN DO                                        *
*    PROCESS $MEM001 EVENT                                            *
* END                                                                 *
***********************************************************************
         CLC   EVEVENT,=CL8'$MEM001'
         BNE   RSETSAVE
         BAL   R11,MEMEVNT
         B     RSETSAVE
         EJECT
RSETSAVE DS    0H
***********************************************************************
* RESET CALLER'S SAVE AREA AS THE CURRENT SAVE AREA                   *
***********************************************************************
         LR    R6,R13
         L     R13,4(R6)
***********************************************************************
* REMOVE EXIT SAVE AREA FROM THE SAVE AREA CHAIN                      *
***********************************************************************
         XC    8(4,R13),8(R13)
         XC    4(4,R6),8(R6)
***********************************************************************
* IF EVENT = 'TERM' THEN DO                                           *
*    FREE WORKAREA $MEM001-EXIT                                       *
*    FREE EXIT WORK AREA                                              *
* END                                                                 *
***********************************************************************
         CLC   EVEVENT,=CL8'TERM'
         BNE   RETURN
         FREEMAIN R,LV=WALENGTH,A=(R10)
         FREEMAIN R,LV=72,A=(R6)
         XR    R6,R6
         ST    R6,EVUSER
         B     RETURN
         EJECT
RETURN   DS    0H
***********************************************************************
* RETURN WITH RETURN CODE OF ZERO                                     *
*                                                                     *
***********************************************************************
         RETURN (14,12),T,RC=0
         EJECT
         TITLE 'SECEXIT - $MEM001 EVENT SUBROUTINE'
***********************************************************************
* IF DSN = 'COL1.PAN.SOURCE' THEN DO                                  *
*    IF USRCODE = X'00000000' OR USRCODE = C'0000' THEN ---> CONTINUE *
*    TRANSLATE USRCODE FROM CHARACTER TO BINARY                       *
*    CONVERT USRCODE TO ALPHA (I.E. 0399 ---> PI)                     *
*                                                                     *
*    ********************************************                     *
*    *ALGORITHM: I = USRCODE / 26               *                     *
*    *           J = MOD(USRCODE,26)            *                     *
*    *           IF J = 0 THEN DO               *                     *
*    *              UCODE(1) = CONVTAB(I)       *                     *
*    *              UCODE(2) = CONVTAB(26)      *                     *
*    *           END                            *                     *
*    *                    ELSE DO               *                     *
*    *              UCODE(1) = CONVTAB(I+1)     *                     *
*    *              UCODE(2) = CONVTAB(J)       *                     *
*    *           END                            *                     *
*    ********************************************                     *
*                                                                     *
*    IF PENDACT = C'READ' THEN DO                                     *
*       IF UCODE = 'PI' THEN                                          *
*          IF JOBNAME = SPECIAL USERID THEN ---> CONTINUE             *
*       IF FUNCTION = C'RENAME' OR FUNCTION = C'COPY' THEN ---> CHECK *
*    END                                                              *
*                                                                     *
* CHECK:                                                              *
*                                                                     *
*    FIND POINTER TO ASCB FROM PSA                                    *
*    FIND POINTER TO ASXB FROM ASCB                                   *
*    FIND POINTER TO ACEE FROM ASXB                                   *
*    FIND POINTER TO CGRP FROM ACEE (RACF GROUP TABLE)                *
*    DO WHILE CGRPNUM ^= 0                                            *
*       IF CGRPNAME(CGRNUM) = C'TFF'  (FF = FACHGEBIET) THEN          *
*          IF C'FF' = UCODE THEN ---> CONTINUE                        *
*       CGRPNUM = CGRPNUM - 1                                         *
*    END                                                              *
*    ---> INACTIVE                                                    *
* END                                                                 *
*                                                                     *
* INACTIVE:                                                           *
*                                                                     *
* IF JOBNAME = C'JXXXXXXX' AND FUNCTION = SPECIAL CMD                 *
*    THEN ---> CONTINUE                                               *
* MOVE C'I' TO DLESTAT FOR INVALID REQUEST                            *
*                                                                     *
* CONTINUE:                                                           *
*                                                                     *
* MOVE C'C' TO EVRESPON TO CONTINUE                                   *
* RETURN                                                              *
***********************************************************************
         EJECT
MEMEVNT  DS    0H
***********************************************************************
*        CHECK FOR ITEM 'DSN' AND COMPARE WITH C'COL1.PAN.SOURCE'     *
***********************************************************************
         FINDITEM ITEM=DSN,FAILED=MEMEND
         L     R9,DLEITEM
         CLC   0(44,R9),=CL44'COL1.PAN.SOURCE'
         BNE   MEMCONT
***********************************************************************
*        LOCATE USERCODE                                              *
***********************************************************************
         FINDITEM ITEM=USRCODE,FAILED=MEMEND
         L     R9,DLEITEM
***********************************************************************
*        NO USERCODE AVAILABLE                                        *
***********************************************************************
         CLC   0(4,R9),=X'00000000'
         BNE   CHECK1
         B     MEMCONT
CHECK1   DS    0H
***********************************************************************
*        USERCODE = 0000                                              *
***********************************************************************
         CLC   0(4,R9),=X'F0F0F0F0'
         BNE   TRANS
         B     MEMCONT
TRANS    DS    0H
***********************************************************************
*        TRANSLATE USERCODE <NUMBER> TO <CHARACTER>, I.E. 399 ---> PI *
***********************************************************************
         LA    R8,NUMBER          CHANGE NUMBER
         PACK  0(8,R8),0(4,R9)      FROM CHARCTER
         CVB   R7,NUMBER              TO BINARY
         SR    R6,R6
         LA    R8,26              DIVIDE BY 26
         DR    R6,R8
         SH    R7,=H'1'
         LA    R8,CONVTAB
         AR    R8,R7
         LTR   R6,R6
         BE    ZERO               REST = 0 ---> BRANCH
         SH    R6,=H'1'
         MVC   UCODE(1),1(R8)     1.CHAR = CONVTAB(VALUE+1)
         LA    R8,CONVTAB
         AR    R8,R6              2.CHAR = CONVTAB(REST)
         B     MOVE2
ZERO     MVC   UCODE(1),0(R8)     1.CHAR = CONVTAB(VALUE)
         LA    R8,CONVTAB
         LA    R8,25(R8)          2.CHAR = CONVTAB(26)
MOVE2    MVC   UCODE+1(1),0(R8)
         MVI   UCODE+2,C' '
CHECKPEN DS    0H
***********************************************************************
*        CHECK FOR ITEM 'PENDACT' AND COMPARE WITH C'READ'            *
***********************************************************************
         FINDITEM ITEM=PENDACT,FAILED=MEMEND
         L     R9,DLEITEM
         CLC   0(4,R9),=CL4'READ'
         BE    CHECKREA
         B     CHECKWRI
CHECKREA DS    0H
***********************************************************************
*        IF USERCODE = C'PI' THEN ---> SPECIAL CHECK                  *
***********************************************************************
         CLC   UCODE(3),=C'PI '
         BE    CHECKPI
CHECKALL DS    0H
***********************************************************************
*        CHECK FOR ITEM 'FUNCTION' AND COMPARE WITH SPECIAL COMMANDS  *
***********************************************************************
         FINDITEM ITEM=FUNCTION,FAILED=MEMEND
         L     R9,DLEITEM
         CLC   0(6,R9),=CL6'RENAME'
         BE    CHECKWRI
         CLC   0(4,R9),=CL4'COPY'
         BE    CHECKWRI
         B     MEMCONT
CHECKPI  DS    0H
***********************************************************************
*        CHECK FOR ITEM 'JOBNAME' AND COMPARE WITH USERTAB            *
***********************************************************************
         FINDITEM ITEM=JOBNAME,FAILED=MEMEND
         L     R9,DLEITEM
         L     R8,USERANZ
         LA    R10,USERTAB
NEXTUSR  CLC   0(4,R9),0(R10)
         BE    MEMCONT
         LA    R10,4(R10)
         BCT   R8,NEXTUSR
         B     MEMINAC
CHECKWRI DS    0H
***********************************************************************
*        FIND RACF LIST OF GROUPS TABLE AND EXTRACT USERCODE          *
***********************************************************************
         L     R6,PSAAOLD         ASCB ADDRESS
         USING ASCB,R6
         L     R6,ASCBASXB        ASXB ADDRESS
         USING ASXB,R6
         L     R6,ASXBSENV        ACEE ADDRESS
         USING ACEE,R6
         L     R6,ACEECGRP        CGRP ADDRESS
         USING CGRP,R6
         LH    R7,CGRPNUM         NUMBER OF GROUP ENTRIES
         LA    R8,CGRPENT
         USING CGRPENTD,R8
TESTNEXT CLI   CGRPNAME,C'T'
         BNE   TESTENDE
         CLC   CGRPNAME+1(3),=C'EST'
         BE    TESTENDE
         CLC   CGRPNAME+1(3),UCODE
         BE    MEMCONT
TESTENDE LA    R8,24(R8)
         BCT   R7,TESTNEXT
MEMINAC  DS    0H
***********************************************************************
*        CHECK FOR ITEM 'MBRNAME' AND MOVE C'I' FOR INVALID REQUEST,  *
*        IF JOB ^= AVJOB AND NOT SPECIAL CMD                          *
*                                                                     *
*                                                                     *
*        1. CHECK FOR ITEM 'FUNCTION' AND COMPARE WITH CMDTAB         *
*        2. CHECK FOR ITEM 'JOBNAME' AND COMPARE WITH 'J.......'      *
*        (FOR SAVE- AND RESTORE-ACTIVITIES OF AV)                     *
***********************************************************************
         FINDITEM ITEM=FUNCTION,FAILED=MEMEND
         L     R9,DLEITEM
         L     R8,CMDANZ
         LA    R10,CMDTAB
NEXTCMD  CLC   0(8,R9),0(R10)
         BE    CHECKJBN
         LA    R10,8(R10)
         BCT   R8,NEXTCMD
         B     MOVEI
CHECKJBN DS    0H
         FINDITEM ITEM=JOBNAME,FAILED=MEMEND
         L     R9,DLEITEM
         CLI   0(R9),C'J'
         BE    MEMCONT
MOVEI    DS    0H
***********************************************************************
*        MOVE 'I' FOR INVALID REQUEST                                 *
***********************************************************************
         FINDITEM ITEM=MBRNAME,FAILED=MEMEND
         MVI   DLESTAT,C'I'
MEMCONT  DS    0H
***********************************************************************
*        RETURNCODE C ---> CONTINUE                                   *
***********************************************************************
         MVI   EVRESPON,C'C'
MEMEND   DS    0H
***********************************************************************
*        EXIT OF EVENT SUBROUTINE                                     *
***********************************************************************
         BR    R11
         TITLE 'SECEXIT - DEFINITIONS'
***********************************************************************
*        DEFINITIONS                                                  *
***********************************************************************
CONVTAB  DC    C'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
USERANZ  DC    F'3'
USERTAB  DC    C'PAUL'
         DC    C'PFEN'
         DC    C'BOPU'
         DC    C'    '
         DC    C'    '
CMDANZ   DC    F'9'
CMDTAB   DC    C'BYPASS  '
         DC    C'DELETE  '
         DC    C'DUMP    '
         DC    C'PRINT   '
         DC    C'REPLACE '
         DC    C'RESTORE '
         DC    C'TRANSFER'
         DC    C'ANALYSIS'
         DC    C'STATUS  '
         DC    C'        '
         DC    C'        '
MEXTRACT EXTRACT MF=L
EXLENGTH EQU   *-MEXTRACT
PSAAOLD  EQU   548         HEX 224  ADDRESS OF ASCB POINTER
         TITLE 'SECEXIT - LITERAL POOL'
         LTORG
         TITLE 'SECEXIT - THE END'
         END
