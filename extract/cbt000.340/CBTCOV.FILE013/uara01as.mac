UT222000 TITLE 'P A N V A L E T - C O M M A N D - P R O C E S S O R'
***********************************************************************
*                                                                     *
*  BETRIFFT:                                                          *
*                                                                     *
*    P A N V A L E T - T S O - I N T E R F A C E                      *
*                                                                     *
***********************************************************************
*                                                                     *
*  UT222000                                                           *
*                                                                     *
*    RAHMENPROCESSOR ZUM PANVALET - "PAN" - COMMAND                   *
*                                                                     *
***********************************************************************
*                                                                     *
*  BENOETIGTE PROGRAMMUMGEBUNG:                                       *
*                                                                     *
*    1. PANVALET REL. 9.1                                             *
*    2. TSO                                                           *
*    3. PANVALET-TSO-INTERFACE                                        *
*    4. PANVALET-ACCESS-METHOD (PAM)                                  *
*    5. PANTSOEX (PROGRAMM UT221900; SIEHE DORT)                      *
*                                                                     *
***********************************************************************
*                                                                     *
*  AUTOR:                                                             *
*                                                                     *
*    DR. SCHWERHOFF              TEL.: 0234 / 315 3364 (DURCHWAHL)    *
*    ARAL AG, ABT. CSB                                                *
*    WITTENER STR. 45                                                 *
*    4630 BOCHUM                                                      *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*   DAS PROGRAMM UT222000 IST EIN TSO-COMMAND-PROCESSOR, UND ZWAR     *
*   EIN RAHMENPROCESSOR ZUM PANVALET-"PAN"-COMMAND. ER HAT DIESELBEN  *
*   OPERANDEN WIE DER PAN-COMMAND UND ERFUELLT ZUSAMMEN MIT DEM       *
*   EXIT UT221900 ZUSAETZLICH FOLGENDE FUNKTIONEN:                    *
*                                                                     *
*     I. BEI PAN RETRIEVE ....                                        *
*                                                                     *
*        A) VOR DEM AUFRUF DES PANVALET-PAN-COMMANDS:                 *
*           1. PARAMETERLISTE AUF FORMALE RICHTIGKEIT PRUEFEN         *
*           2. BEI PO-DATEIEN NOETIGENFALLS MEMBERNAMEN IN DEN        *
*              DA-PARAMETER EINSTELLEN                                *
*           3. VERSCHIEDENE PLAUSIBILITAETSKONTROLLEN, Z. B.          *
*              PRUEFUNG AUF RICHTIGE DSORG, PLATTENDATEI, KATALOGI-   *
*              SIERUNG USW (SIEHE MESSAGES TEXT BIS TEXT11)           *
*           4. AUSSCHALTEN DER EXPAND-OPTION, FALLS ZIELDATEI KEIN    *
*              PDS ODER DAS ZU RETRIEVENDE MEMBER NICHT VOM TYP       *
*              COBOL, COB72 ODER SPL                                  *
*           5. FALLS EXPAND-OPTION EIGESCHALTET, ALLOCIEREN           *
*              COPY-DATEI (DATEI-NAME 'SPF.DATALIB' FEST VERGEBEN)    *
*                                                                     *
*        B) DURCH DEN PANVALET-EXIT WERDEN BEI 'EXPAND' DIE           *
*           INCLUDE-MEMBER GETRENNT UND EINZELN IN DIE COPY-DATEI     *
*           GESTELLT.                                                 *
*                                                                     *
*        C) NACH DEM AUFRUF DES PANVALET-PAN-COMMANDS                 *
*           1. FALLS NOETIG, FREE AUF DIE COPY-DATEI                  *
*                                                                     *
*    II. BEI PAN ADD ... BZW PAN STORE ...                            *
*                                                                     *
*        A) VOR DEM AUFRUF DES PANVALET-PAN-COMMANDS                  *
*           1. PUNKTE 1. BIS 3. WIE BEI PAN RETRIEVE ...              *
*                                                                     *
*        B) DURCH DEN PANVALET-EXIT WERDEN DIE SPECIAL-COMMENT-       *
*           RECORDS ENTFERNT UND DIE '*++INCLUDE'-KARTEN WERDEN IN    *
*           PANVALET-LESBARE FORM UMGESCHRIEBEN                       *
*                                                                     *
*        C) NACH DEM AUFRUF DES PANVALET-PAN-COMMANDS:                *
*           BEI ADD BZW. STORE VON SEQUENTIELLEN DATEIEN KEINE        *
*           WEITEREN AKTIONEN                                         *
*           BEI ADD BZW. STORE VON PO-DATEIEN:                        *
*              FALLS OPTION 'KEEP' EIGESCHALTET IST UND DAS MEMBER    *
*              IN DER DIRECTORY EINEN SPF-KONFORMEN EINTRAG HAT,      *
*              WIRD DIE TSO-USERID MIT 'STORED' UEBERSCHRIEBEN;       *
*              BEI OPTION 'DELETE' WIRD DAS MEMBER GELOESCHT, UND     *
*              SOFERN IN DER ZUGEHOERIGEN OBJ-DATEI (DATEI GLEICHEN   *
*              NAMENS, NUR 'OBJ' ALS LETZTER QUALIFIER) EIN MEMBER    *
*              GLEICHEN NAMENS ENTHALTEN IST, WIRD DIESES EBENFALLS   *
*              GELOESCHT.                                             *
*                                                                     *
*    III. ALLE WEITEREN PAN-COMMANDS BLEIBEN UNVERAENDERT             *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*  HINWEIS ZUR INSTALLATION                                           *
*                                                                     *
*  1. DER PANVALET-PAN-COMMAND MUSS MIT DEM EXIT UT221900 (PANTSOEX)  *
*     NEU GELINKT WERDEN UND UNTER DEM NAMEN 'PAN$MEX' IN DIE         *
*     SYS1.CMDLIB GESTELLT WERDEN. DIESER COMMAND WIRD ALS SUBTASK    *
*     DES RAHMENPROCESSORS AUSGEFUEHRT.                               *
*                                                                     *
*  2. DER ALTE PAN-COMMAND (OHNE DEN EXIT UT221900) MUSS UNTER DEM    *
*     NAMEN 'PAN$OEX' ZUR VERFUEGUNG STEHEN. DIESER WIRD BEI ALLEN    *
*     PAN-SUBCOMMANDS AUSSER ADD, RETRIEVE UND STORE AUFGERUFEN,      *
*     DAMIT DER EXIT NICHT UEBERFLUESSIG OFT DURCHLAUFEN WIRD.        *
*                                                                     *
*  3. AENDERUNG AN DER PANVALET-DEFAULTS MUESSEN IM RAHMENPROCESSOR   *
*     (IN DEN IKJPARS-DEFINITIONS-MACROS AM ENDE DES SOURCE-CODES)    *
*     VORGENOMMEN WERDEN, DA DIESER EINEN EIGENEN COMMAND-BUFFER      *
*     (EPUFFER) AUFBAUT UND IN DIESEN ALLE DEFAULTS AUTOMATISCH       *
*     EINSTELLT. (DIES GILT NUR FUER ADD, RETRIEVE UND STORE.)        *
*                                                                     *
***********************************************************************
         EJECT
         MACRO
&NAME    QINIT &BASEREG=13,&CSECT=CSECT,&EQU=(,R),&SAVE=(,SAVEAREA),   *
               &RETURN=(,RETURN)
.*
.*
.*       MACRO  QINIT                   INITIATE AN ASSEMBLER-PROGRAM
.*---------------------------------------------------------------------
.*
.*       THE PURPOSE OF THIS MACRO IS TO GENERATE THE NECESSARY
.*       INSTRUCTIONS FOR A CSECT, REGISTER EQUATES, SAVE-MACRO,
.*       DEFINING AND ESTABLISHING A BASE REGISTER, DEFINING A
.*       SAVEAREA AND CHAINING IT TO THE NEXT HIGHER ONE AND FINALLY
.*       TO GENERATE THE RETURN MACRO INCLUDING RESTORING OF SAVE-
.*       AREA ADDRESSES
.*
.*       ONLY KEYWORD OPERANDS ARE USED BY QINIT
.*
.*       THE SUBLIST-OPERANDS CAN BE CODED AS FOLLOWING:
.*          1. IF BOTH SUBLIST-OPERANDS ARE NEEDED, WRITE THE OPERANDS
.*             ENCLOSED IN PARANTHESES, SEPARATED BY A COMMA
.*          2. IF ONLY THE SECOND SUBLIST-OPERAND IS NEEDED, WRITE
.*             ENCLOSED IN PARANTHESES A COMMA FOLLOWED BY THIS OPERAND
.*             THE FIRST SUBLIST-OPERAND WILL BE OMITTED
.*          3. IF ONLY THE FIRST SUBLIST-OPERAND IS NEEDED, WRITE
.*            A) ONLY THIS OPERAND WITHOUT PARANTHESES, IF THE SECOND
.*               SUBLIST-OPERAND SHOULD BE THE DEFAULT VALUE     OR
.*            B) ENCLOSED IN PARANTHESES THIS OPERAND, FOLLOWED BY A
.*               COMMA, IF THE SECOND SUBLIST-OPERAND SHOULD BE OMITTED
.*
.*       ALL OPERANDS ARE OPTIONAL
.*
.*       IF NO OPERANDS ARE SPEZIFIED, THE DEFAULT VALUES WILL BE
.*       ASSUMED
.*
.*       POSSIBLE OPERANDS:
.*
.*       BASEREG=N       WHERE N IS ANY NUMBER FROM 1 TO 15
.*                       THIS REGISTER IS ESTABLISHED AS A BASE
.*                       REGISTER
.*
.*                       REGISTER 0 IS RECOCNIZED AS AN INVALID VALUE.
.*                       FOR 1,14 AND 15 WARNINGS ARE PRINTED.
.*                       EXCEPT FOR 13 AND 15 THE VALUE IS
.*                       LOADED INTO THE REGISTER BY MEANS OF A
.*                       BALR INSTRUCTION
.*
.*                       FOR 13 THE SAVEAREA ADDRESS IS LOADED
.*                       (IF THE SAVE IS SUPPRESSED (SEE KEYWORD SAVE)
.*                       AND BASEREG=13, THE VALUE IS LOADED BY MEANS
.*                       OF A BALR INSTRUCTION)
.*
.*                       FOR 15 IT IS ASSUMED THAT IT STILL CONTAINS
.*                       THE VALUE OF * (E.G. THE EP-ADDRESS),
.*                       ONLY A USING WILL BE GENERATED
.*
.*                       THE BASE REGISTER IS ALSO EQUATED TO THE
.*                       SYMBOL 'BASEREG'
.*
.*                       IF THIS OPERAND IS OMITTED 13 IS ASSUMED
.*
.*       BASEREG=        IF THE OPERAND IS NULLIFIED NO BASEREGISTER
.*                       WILL BE DEFINED
.*
.*       CSECT=START     A START INSTRUCTION IS USED INSTEAD OF CSECT
.*
.*                       IF OMITTED, A CSECT-INSTRUCTION WILL BE
.*                       GENERATED
.*
.*       CSECT=          IF NULLIFIED NO CSECT INSTRUCTION IS GENERATED
.*
.*       EQU=(ONLY,REG)  IF 'ONLY' IS CODED, ONLY EQUATE STATEMENTS
.*                       WILL BE GENERATED. ALL OTHER OPERANDS ARE BY-
.*                       PASSED
.*
.*                       INSTEAD OF 'REG' ANY VALID NAME FOR REGISTER-
.*                       EQUATES CAN BE CODED
.*
.*                       IF THE EQU-OPERAND IS OMITTED, THE DEFAULT
.*                       VALUE WILL BE ASSUMED (EQU=(,R))
.*
.*       EQU=            IF NULLIFIED, NO EQUATES WILL BE GENERATED
.*
.*       SAVE=(ID,LABEL) INSTEAD OF 'ID' ANY VALID CHARACTERS ALLOWED
.*                       IN THE ID-FIELD OF A SAVE MACRO CAN BE CODED
.*
.*                       IF THE ID-SUBOPERAND IS OMITTED AND A CSECT-
.*                       NAME IS GENERATED, THIS NAME WILL BE SUBSTITU-
.*                       TED
.*
.*                       INSTEAD OF 'LABEL' ANY SYMBOL VALID IN A NAME-
.*                       FIELD CAN BE CODED. THIS SYMBOL WILL APPEAR IN
.*                       THE NAME FIELD OF THE SAVEAREA
.*
.*                       IF 'LABEL' IS OMITTED, NO NAME WILL BE
.*                       GENERATED
.*
.*                       IF INSTEAD OF 'LABEL'  'NO' IS CODED NO SAVE-
.*                       AREA IS GENERATED AND SAVE-AREA-CHAINING IS
.*                       SUPPRESSED
.*
.*       SAVE=           IF NULLIFIED, THE GENERATION OF A SAVE-ROUTINE
.*                       WILL BE SUPPRESSED
.*
.*       RETURN=(RC,LABEL) INSTEAD OF 'RC' ANY VALID OPERAND FOR THE
.*                       RC-PARAMETER OF THE RETURN MACRO INSTRUCTION
.*                       CAN BE CODED. IF 'RC' IS OMITTED, ZERO WILL
.*                       BE ASSUMED
.*
.*                       INSTEAD OF 'LABEL' ANY SYMBOL VALID IN A NAME-
.*                       FIELD CAN BE CODED. THIS SYMBOL WILL APPEAR IN
.*                       THE NAME FIELD OF THE RETURN INSTRUCTION. IF
.*                       'LABEL' IS OMITTED THE NAME 'RETURN' APPEARS
.*                       IN THE NAME FIELD
.*
.*                       IF INSTEAD OF 'RC'  (15) IS CODED REGISTER
.*                       15 IS SUPPOSED TO CONTAIN A RETURN-CODE AND
.*                       WILL NOT BE RESTORED UPON RETURN
.*
.*                       IF THE RETURN-OPERAND IS OMITTED, RC = 0
.*                       WILL BE GENERATED AND THE NAME 'RETURN'
.*                       IS ASSUMED
.*
.*       RETURN=         IF NULLIFIED, NO RETURN STATEMENTS WILL BE
.*                       GENERATED
.*
.*
.*--------------------------------------------------------------------*
.*                                                                    *
.*                                                                    *
         GBLC  &DFTR                    = '' OR 'R' DEPENDINGON EQUATE*
.*                                      MAY BE USED INSIDE ALL MACROS *
.*                                      CONCATENATED WITH REGISTER
.*                                      OPERANDS SO THAT REGISTER     *
.*                                      TRACING IS PROVIDED ALSO INSIDE
.*                                      MACROS.                       *
.*                                                                    *
.*--------------------------------------------------------------------*
.*
         LCLC  &SANAME                  SAVEAREA NAME
         LCLC  &RETURNC                 RETURN-ROUTINE NAME
         LCLC  &BASE                    = 'BASEREG' OR VALUE OF BASE
         LCLC  &R                       = '' OR 'R' DEPENDING ON EQUATE
         LCLC  &BRANCH                  LABEL FOR BRANCH AROUND RETURN
         LCLA  &SAR                     SAVE REGISTER FOR R13
         LCLA  &VAL                     VALUE OF BASE
         LCLB  &BASEB                   BASEREG OPERAND PRESENT
         LCLB  &BASEBSP                 BASEREG IS 13 OR 15
         LCLB  &CSECTB                  CSECT OPERAND PRESENT
         LCLB  &EQUB                    EQU OPERAND PRESENT
         LCLB  &IDB                     ID OPERAND PRESENT
         LCLB  &RETURNB                 RETURN OPERAND PRESENT
         LCLB  &RCB                     RC OPERAND PRESENT
         LCLB  &SAVEB                   SAVE OPERAND PRESENT
         LCLB  &SAVEARB                 SAVEAR OPERAND PRESENT
         LCLB  &NS                      NO SAVE IF ON
.*
.*       VALIDATE OPERANDS AND SET INDICATORS
.*
         AIF   ('&SAVE(2)' NE 'NO').AREA1
         AIF   ('&BASEREG(1)' EQ '13').AREA0
         AGO   .AREA1
.AREA0   ANOP
&BASE    SETC  '15'
&VAL     SETA  15
&NS      SETB  1
.AREA1   ANOP
         AIF   ('&BASEREG' EQ '').VAL10
         AIF   (N'&BASEREG NE 1).VAL5
         AIF   (T'&BASEREG(1) NE 'N').VAL5
         AIF   (&NS).VAL4
&VAL     SETA  &BASEREG(1)
.VAL4    ANOP
         AIF   (&VAL LT 1 OR &VAL GT 15).VAL5
&BASEB   SETB  1
         AIF   (&VAL NE 13 AND &VAL NE 15).VAL10
&BASEBSP SETB  1
         AGO   .VAL10
.VAL5    ANOP
         MNOTE 8,'INVALID BASEREG OPERAND &BASEREG'
.VAL10   ANOP
         AIF   ('&CSECT' EQ '').VAL20
         AIF   (N'&CSECT NE 1).VAL15
         AIF   ('&CSECT' NE 'START' AND '&CSECT' NE 'CSECT').VAL15
&CSECTB  SETB  1                        INDICATE CSECT
         AGO   .VAL20
.VAL15   ANOP
         MNOTE 8,'INVALID CSECT OPERAND &CSECT'
.VAL20   ANOP
         AIF   ('&EQU' EQ '').VAL30
         AIF   (N'&EQU GT 2).VAL25
         AIF   ('&EQU(1)' NE '' AND '&EQU(1)' NE 'ONLY').VAL25
         AIF   (N'&EQU EQ 1 AND '&EQU' EQ 'ONLY').VAL22
         AIF   (N'&EQU EQ 2 AND '&EQU(2)' EQ '').VAL22
&R       SETC  '&EQU(2)'
         AGO   .VAL23
.VAL22   ANOP
&R       SETC  'R'
.VAL23   ANOP
&EQUB    SETB  1                        INDICATE EQUATES
         AIF   ('&EQU(1)' EQ 'ONLY').CSECT15
         AGO   .VAL30
.VAL25   ANOP
         MNOTE 8,'INVALID EQU OPERAND &EQU'
.VAL30   ANOP
         AIF   ('&SAVE' EQ '').VAL80
         AIF   (N'&SAVE GT 2).VAL70
&SAVEB   SETB  1
         AIF   (N'&SAVE NE 2).VAL40
         AIF   (T'&SAVE(2) EQ 'O').VAL60
&SANAME  SETC  '&SAVE(2)'
         AGO   .VAL50
.VAL40   ANOP
&SANAME  SETC  'SAVEAREA'
.VAL50   ANOP
&SAVEARB SETB  1
.VAL60   ANOP
         AIF   (T'&SAVE(1) EQ 'O').VAL80
&IDB     SETB  1
         AGO   .VAL80
.VAL70   ANOP
         MNOTE 8,'INVALID SAVE OPERAND &SAVE'
.VAL80   ANOP
         AIF   ('&RETURN' EQ '').VAL120
         AIF   (N'&RETURN GT 2).VAL110
&RETURNB SETB  1
         AIF   (N'&RETURN NE 2).VAL90
         AIF   (T'&RETURN(2) EQ 'O').VAL90
&RETURNC SETC  '&RETURN(2)'
         AGO   .VAL100
.VAL90   ANOP
&RETURNC SETC  'RETURN'
.VAL100  ANOP
         AIF   (T'&RETURN(1) EQ 'O').VAL120
&RCB     SETB  1
         AGO   .VAL120
.VAL110  ANOP
         MNOTE 8,'INVALID RETURN OPERAND &RETURN'
.VAL120  ANOP
         AIF   (&BASEB+&CSECTB+&EQUB+&RETURNB+&SAVEB NE 0).VAL130
         MNOTE 12,'NO VALID OPERANDS SPECIFIED'
         MEXIT
.VAL130  ANOP
&BASE    SETC  '&VAL'
.*
.* GENERATE CSECT INSTRUCTION
.*
         SPACE 5
         AIF   (NOT &CSECTB).CSECT10   NO CSECT OR START
         AIF   ('&CSECT' EQ 'START').CSECT5
&NAME    CSECT
         AGO   .CSECT15
.CSECT5  ANOP
&NAME    START
         AGO   .CSECT15
.CSECT10 AIF   ('&NAME' EQ '').CSECT90
&NAME    DS    0H
.CSECT15 ANOP
         SPACE 5
.CSECT90 ANOP
.*
.* GENERATE EQUATES
.*
         AIF   (NOT &EQUB).EQU90
&DFTR    SETC  '&EQU(2)'                EQU-PREFIX
*---------------------------------------------------------------------*
*                                                                     *
*        E Q U A T E S                                                *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 3
&R.0     EQU   0
&R.1     EQU   1
&R.2     EQU   2
&R.3     EQU   3
&R.4     EQU   4
&R.5     EQU   5
&R.6     EQU   6
&R.7     EQU   7
&R.8     EQU   8
&R.9     EQU   9
&R.10    EQU   10
&R.11    EQU   11
&R.12    EQU   12
&R.13    EQU   13
&R.14    EQU   14
&R.15    EQU   15
         AIF   ('&EQU(1)' NE 'ONLY').EQU10
         EJECT
         MEXIT
.EQU10   AIF   (NOT &BASEB).EQU80
         SPACE 3
BASEREG  EQU   &R&BASE
&BASE    SETC  'BASEREG'
         AIF   (&VAL NE 1 AND &VAL LT 14).EQU80
***                      CAUTION:       BASE REGISTER SPECIFICATION
***                                     IS NOT CONFORM TO OS-/360
***                                     LINKAGE CONVENTIONS
.EQU80   ANOP
         EJECT
.EQU90   ANOP
.*
.* ESTABLISH BASE AND GENERATE SAVE ROUTINE
.*
         AIF   (NOT (&BASEB OR &SAVEB)).SAVE90
*---------------------------------------------------------------------*
*                                                                     *
         AIF (NOT &BASEB).SAVE05
*        E S T A B L I S H   B A S E                                  *
.SAVE05  AIF   (NOT &SAVEB).SAVE10
         AIF   ('&SAVE(2)' EQ 'NO').NOTXT
*        S A V E   A N D                                              *
*        C H A I N   S A V E   A R E A S                              *
.SAVE10  ANOP
.NOTXT   ANOP
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 3
         AIF   (&SAVEB).SAVE20          SAVE SPECIFIED
         AIF   (&VAL EQ 15).SAVE15
         BALR  &BASE,0                  SET BASE TO VALUE OF *+2
         SPACE 3
.SAVE15  USING *,&BASE                  DEFINE BASE REGISTER
         AGO   .SAVE85
.SAVE20  ANOP
         AIF   (&VAL NE 15).SAVE25
         USING *,&BASE                  INDICATE BASE
         SPACE 3
         AGO   .SAVE30
.SAVE25  ANOP
         AIF   (&VAL NE 13).SAVE30
         USING *,&R.15                  INTERMEDIATE BASE
         SPACE 3
.SAVE30  ANOP
         AIF   (NOT &IDB).SAVE35        NO ID SPECIFIED
         SAVE  (14,12),,&SAVE(1)
         AGO   .SAVE37
.SAVE35  ANOP
         SAVE  (14,12),,&NAME
.SAVE37  ANOP
         AIF   ('&SAVE(2)' NE 'NO').SAVE39
         AIF   (&VAL EQ 15).SAVE85
         BALR  &BASE,0                      BASE *
         USING *,&BASE     .
         AGO   .SAVE85
.SAVE39  ANOP
         AIF   (&BASEBSP OR NOT &BASEB).SAVE40
         SPACE 3
         BALR  &BASE,0                  SET BASE TO VALUE OF *+2
         USING *,&BASE                  INDICATE BASE
         SPACE 3
.SAVE40  ANOP
&SAR     SETA  2
         AIF   (&VAL NE 2).SAVE45       PREVENT DESTROYMENT OF BASE
&SAR     SETA  3
.SAVE45  ANOP
         LR    &R.&SAR,&R.13            SAVE HIGHER SA ADDRESS
         CNOP  0,4
         BAL   &R.13,*+76               BRANCH AROUND SAVEAREA
         SPACE 3
         AIF   (&VAL NE 13).SAVE50
         DROP  &R.15                    DROP INTERMEDIATE BASE
         USING *,&BASE                  CONTAINS SA-ADDR. AND IS BASE
         SPACE 3
.SAVE50  ANOP
&SANAME  DC    18F'0'                   SAVE AREA
         SPACE 3
         ST    &R.13,8(,&R&SAR)         LOGICAL LOWER ADDR IN HIGHER
         AIF   ('&SANAME' NE '').SAVE55
         ST    &R&SAR,4(,&R.13)         AND HIGHER ADDR IN LOWER PGM
         AGO   .SAVE85
.SAVE55  ANOP
         ST    &R&SAR,&SANAME+4         AND HIGHER ADDR IN LOWER PGM
.SAVE85  ANOP
         AIF   (NOT &RETURNB).SAVE90
         SPACE 3
.SAVE90  ANOP
.*
.* GENERATE RETURN ROUTINE
.*
         AIF   (NOT &RETURNB).RETUR90
         AIF   (NOT (&BASEB OR &SAVEB)).RETUR10
&BRANCH  SETC  '#X'.'&SYSNDX'
         B     &BRANCH                  BRANCH AROUND RETURN ROUTINE
         SPACE 5
.RETUR10 ANOP
*---------------------------------------------------------------------*
*                                                                     *
*        R E T U R N   R O U T I N E                                  *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 3
         AIF   ('&SAVE(2)' EQ 'NO').RETUR17
         AIF   (NOT &SAVEB).RETUR17     IF NO SAVE DO NOT RESTORE R13
         AIF   (&SAVEARB).RETUR15
&RETURNC L     &R.13,4(,&R.13)          RESTORE HIGHER SA ADDRESS
         AGO   .RETUR20
.RETUR15 ANOP
&RETURNC L     &R.13,&SANAME+4          RESTORE HIGHER SA ADDRESS
         AGO   .RETUR20
.RETUR17 ANOP
&RETURNC DS    0H
.RETUR20 ANOP
         AIF   (N'&RETURN GT 1).RETUR21
         AIF   ('&RETURN' EQ '(15)').RETUR22
         AGO   .RETUR2A
.RETUR21 ANOP
         AIF   ('&RETURN(1)' EQ '(15)').RETUR22
.RETUR2A ANOP
         AIF   (NOT &RCB).RETUR25
         RETURN (14,12),T,RC=&RETURN(1)
         AGO   .RETUR30
.RETUR22 ANOP
         RETURN (14,12),T,RC=(15)
         AGO   .RETUR30
.RETUR25 ANOP
         RETURN (14,12),T,RC=0
.RETUR30 ANOP
         SPACE 5
         AIF   (NOT (&SAVEB OR &BASEB)).EX
&BRANCH  DS    0H
         AGO   .EX
.RETUR90 AIF   (NOT (&BASEB OR &SAVEB)).EX
         SPACE 5
.EX      ANOP
         MEND
         EJECT
         MACRO
&NAME    CONVERT &AD1,&L,&AD2
         GBLC  &DFTR
         GBLB  &PCT1
         AIF   (&PCT1 NE 0).ZWEI
         B     HX10&SYSNDX
.*       SEITE 2 UND 3 HIER EINFUEGEN   LUEDEMANN, DSE, BREMEN
HX00EPHX ST    1,HXM2SAVE
         LA    1,117
         CR    3,1
         BNH   HX11&SYSNDX
         LA    3,117
HX11&SYSNDX EQU *
         LR    5,7 WOHIN-OPERANDEN SICHERN
         LR    1,3                 ZAEHLER SICHERN
HX01&SYSNDX LA 4,4(0,0)
HX02&SYSNDX SR 2,2
         IC    2,0(6)
         SRA   2,4(0)
         STC   2,0(7)
         IC    2,0(6)
         SLL   2,28(0)
         SRL   2,28(0)
         STC   2,1(7)
         LA    7,2(7)
         LA    6,1(6)
         BCT   3,HX03&SYSNDX
         B     HX09&SYSNDX
HX03&SYSNDX BCT 4,HX02&SYSNDX
         MVI   0(7),X'10'          ERGIBT BLANK
         LA    7,1(7)
         B     HX01&SYSNDX
HX09&SYSNDX EQU *
         LR    6,5 WOHIN-OPERANDEN ZURUECKLADEN
         LR    3,1                 ZAEHLER ZURUECKLADEN
         LR    4,3                 DIVIDEND
         LA    1,4(0,0)  DIVISOR
         SRDA  4,32(0)             NACH R 5
         DR    4,1
         SLA   3,1(0)              SATZLAENGE * 2
         AR    3,5                 + KLUEFTE
         BCTR  3,0                 MINUS 1   ERGIBT LAENG TR-INSTR.
         STC   3,HX04&SYSNDX+1
HX04&SYSNDX TR 0(1,6),HXT0&SYSNDX
         LM    1,7,HXM2SAVE
         BR    1
HXM2SAVE DC    2F'0'               7-WORT-SAVE-AREA
HXM0&SYSNDX DC F'0'
         DC    2F'0'
HXM1&SYSNDX DC F'0'
         DC    F'0'
HXT0&SYSNDX DC X'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C640'
         DS    0H
HX10&SYSNDX EQU *
&PCT1    SETB  1
.ZWEI    ANOP
.B0000   AIF   ('&AD1' EQ '' OR '&AD2' EQ '').B0300
.B0001   AIF   ('&L' EQ '').B0301
         STM   1,7,HXM2SAVE        REGISTERSTAENDE SICHERN
         AIF   ('&AD1'(1,1) EQ '(').B1000
         LA    7,&AD1
.B1001   AIF   ('&L'(K'&L,1) EQ ')').B0200
         LA    3,&L                LAENGE
.B1002   AIF   ('&AD2'(1,1) EQ '(').B1100
         LA    6,&AD2              WOHER-OPERAND
         AGO   .B0200A
.B1000   LR    7,&AD1(1)           WOHIN-OPERAND
         AGO   .B1001
.B0200   ANOP
         AIF   ('&L'(2,1) EQ '7').B0200L
         AIF   ('&L'(2,1) EQ '3').B0200L3
         AIF   ('&DFTR' NE 'R').B0200Z
         AIF   ('&L'(3,1) EQ '3').B0200L3
         AIF   ('&L'(3,1) NE '7').B0200LR
.B0200L  L     &DFTR.3,HXM2SAVE+24
         AGO   .B1002
.B0200L3 AGO   .B1002
.B0200LR LR    &DFTR.3,&L(1)
         AGO   .B1002
.B0200Z  LR    3,&L(1)             LAENGE
         AGO   .B1002
.B1100   LR    6,&AD2(1)           WOHER-OPERAND
.B0200A  ANOP
         BAL   1,HX00EPHX          KONVERSIONS-ROUTINE
         AGO   .ENDE
.B0300   MNOTE 4,'*** EIN OPERAND FEHLT ***'
         AGO   .B0001
.B0301   MNOTE 4,'*** 2. OPERAND IST KEIN LAENGENATTRIBUT ***'
.ENDE    MEND
         EJECT
         MACRO
&X       MOVE  &Z,&S,&MASK,&Z2
         LCLC  &APO
&APO     SETC  ''''
&X       TM    MASK,&MASK
         BZ    MOVE&SYSNDX
         TM    &S+6,X'80'
         BZ    MOVE&SYSNDX
         L     R7,&S
         LH    R8,&S+4
         BCTR  R8,0
         EX    R8,MVC1&SYSNDX
         AIF   ('&Z2' EQ '').A1
         MVC   &Z2.(L&APO&Z.2),&Z.2
.A1      ANOP
         B     MOVE&SYSNDX
MVC1&SYSNDX MVC &Z.(0),0(R7)
MOVE&SYSNDX EQU *
         MEND
         EJECT
PAN      QINIT
         SPACE 3
         USING IHADCB,R10
         USING PANDSECT,R4
         USING CPPL,R5
         USING SAVEAREA+4096,R6
         SPACE 3
         LA    R6,2048
         LA    R6,2048(R6,BASEREG)      2. BASISREGISTER
         SPACE 3
RBAL     EQU   R14
         EJECT
***********************************************************************
*                                                                     *
*      H A U P T S T E U E R L E I S T E                              *
*                                                                     *
***********************************************************************
         SPACE 3
S05      EQU   *
         BAL   RBAL,A05                 VORROUTINE
         SPACE 2
         CLI   0(R3),C'A'               "ADD" ?
         BNE   S05A                     NEIN
         MVI   MASK,1                   MASKE ADD SETZEN
         BAL   RBAL,E05                 ADD AUSFUEHREN
         B     S05Z
         SPACE 2
S05A     EQU   *
         CLI   0(R3),C'S'               "STORE" ?
         BNE   S05B                     NEIN
         MVI   MASK,2                   MASKE STORE SETZEN
         BAL   RBAL,E05                 STORE AUSFUEHREN
         B     S05Z
         SPACE 2
S05B     EQU   *
         CLI   0(R3),C'R'               "RENAME" ODER "RETRIEVE" ?
         BNE   S05C                     NEIN
         CLC   =C'REN',0(R3)            "RENAME" ?
         BE    S05C                     JA
         MVI   MASK,4                   MASKE RETRIEVE SETZEN
         BAL   RBAL,E10                 RETRIEVE AUSFUEHREN
         B     S05Z
         SPACE 2
S05C     EQU   *
         LA    R1,ZECPPL                PARAMETER-ADRESSE LADEN
         LINK  EP=PAN$OEX               PANVALET-VERSION OHNE EXIT
         SPACE 3
S05Z     EQU   *
         B     RETURN
         EJECT
***********************************************************************
*                                                                     *
*        A05                                                          *
*                                                                     *
***********************************************************************
         SPACE 3
         DC    F'0'
A05      EQU   *
         ST    RBAL,A05-4
         SPACE 2
         MVC   ZECPPL,0(R1)             CPPL IN EIGENE CPPL UEBERTRAGEN
         LA    R1,ZECPPL                ADRESSE INS REGISTER 1
         LA    R5,ZECPPL                BASIREG. LADEN
         L     R3,CPPLCBUF              ADRESSE COMMAND-BUFFER
         LH    R4,2(R3)                 OFFSET  1. OPERAND
         LA    R3,4(R3,R4)              ADRESSE 1. OPERAND
         OC    0(3,R3),=X'404040'       GROSSE BUCHSTABEN
         SPACE 3
         MVC   IOPLADR,CPPLUPT          IOPL FUELLEN
         MVC   IOPLADR+4,CPPLECT
         SPACE 3
         MVC   DAIRUPT,CPPLUPT          PARAMETERLISTE DAIR FUELLEN
         MVC   DAIRECT,CPPLECT
         MVC   DAIRPSCB,CPPLPSCB
         SPACE 2
         STAE  STAEXIT,PURGE=HALT,XCTL=YES
         SPACE 3
A05Z     EQU   *
         L     RBAL,A05-4
         BR    RBAL
         EJECT
***********************************************************************
*                                                                     *
*        E05   PAN ADD ... ;   PAN STORE ...                          *
*                                                                     *
***********************************************************************
         SPACE 2
         DC    F'0'
E05      EQU   *
         ST    RBAL,E05-4
         SPACE 2
         BAL   RBAL,U05                 TEST AUF PO-DATEI, MEMBER
         LTR   R15,R15                  FEHLER ?
         BNZ   E05Z                     JA
         SPACE 2
         LA    R1,ZECPPL                PARAMETER-ADRESSE
         BAL   RBAL,U10                 PANVALET-VERSION MIT EXIT
         SPACE 1
         C     R15,=F'4'                FEHLER ?
         BH    E05Z                     JA
         SPACE 2
         CLI   MEMBER,C' '              PO-DATEI ?
         BE    E05Z                     NEIN
         SPACE 2
E05A     EQU   *
         XC    CPECB,CPECB              ECB LOESCHEN
         L     R15,ADAIR                ADRESSE DAIR-ROUTINE
         LA    R1,DAPB2                 ADRESSE DAPB
         STCM  R1,B'0111',DAIRDAPB
         LA    R1,DAIRPARM
         CALL  (15)                     ALLOCATE
         SPACE 1
         LTR   R15,R15                  ERFOLGREICH ?
         BNZ   E05Z
         SPACE 2
         CLC   =H'2',PANDEL             MEMBER ZU DELETEN ?
         BE    E05D                     NEIN
         SPACE 2
         LA    R10,DELETE               DCB-ADRESSE
         MVC   DCBDDNAM,DA08DDN         DDNAME UEBERTRAGEN
         SPACE 1
         OPEN  (DELETE,(OUTPUT))
         SPACE 1
         STOW  DELETE,MEMBER,D
         SPACE 1
         CLOSE DELETE
         SPACE
         MVC   TEXTMEM,MEMBER           MEMBERNAMEN -> AUSG.-TEXT
         MVC   TEXTDSN,DSNAME+2         DSNAMEN -> AUSG.-TEXT
         SPACE
         XC    CPECB,CPECB
         PUTLINE PARM=PUTBLOCK,OUTPUT=(TEXT10,TERM,SINGLE,DATA),       *
               MF=(E,IOPLADR)
         SPACE
         B     E05H
         SPACE 3
E05D     EQU   *                        DIRECTORY EINTRAG "STORED"
         LA    R9,X'1F'                 AND-MASKE
         LA    R10,KEEP                 DCB-ADRESSE
         MVC   DCBDDNAM,DA08DDN         DDNAMEN -> DCB
         OI    NOP1+1,X'F0'             WEICHE AUF 'BRANCH' STELLEN
         SPACE 3
         OPEN  (KEEP,(UPDAT))
         MVC   SBLKSI,DCBBLKSI          SAVE BLOCKSIZE
         MVC   SRECFM,DCBRECFM          SAVE RECFM
         MVC   DCBBLKSI,BLKSI           BLKSIZE EINSTELLEN
         MVC   DCBRECFM,RECFM           RECFM EINSTELLEN
         SPACE 2
E05F     EQU   *
         READ  D1,SF,MF=E               DIRECTORY-SATZ LESEN
         CHECK D1
         LA    R10,EPUFFER              ADRESSE SPEICHERN
         SPACE
         LA    R11,2(R10)               COUNT UEBERSPRINGEN
         LH    R2,0(R10)                COUNT LADEN
         AR    R2,R10                   ENDADRESSE
E05G     EQU   *
         IC    R12,11(R11)              LAENGE DER USER-DATEN
         NR    R12,R9                   UEBERFLUESSIGE BITS LOESCHEN
         SLL   R12,1                    MIT 2 MULTIPLIZIEREN
         SPACE
         CLC   0(L'MEMBER,R11),MEMBER   GESUCHTER MEMBERNAME ?
         BE    E05E                     JA
         SPACE
         LA    R11,12(R12,R11)          BEGINN NAECHSTER ENTRY
         CR    R2,R11                   NEUEN SATZ LESEN ?
         BNH   E05F                     JA
         B     E05G                     NEIN
         SPACE 2
E05E     EQU   *                        PLAUSI-KONTROLLEN SPF-EINTRAG
         CLI   11(R11),X'0F'            LAENGE RICHTIG ?
         BNE   E05I                     NEIN
         CP    P366,18(L'P366,R11)      CREATION-DATE PLAUSIBEL ?
         BL    E05I                     NEIN
         CP    P366,22(L'P366,R11)      DATE OF LAST MAINT. PLAUSIBEL ?
         BL    E05I                     NEIN
         CLI   41(R11),C' '             8. BYTE USERID BLANK ?
         BNE   E05I                     NEIN
         SPACE 2
         MVC   32(L'STORE,R11),STORE    'STORE' -> DIRECTORY
         TIME  DEC                      TAGESDATUM
         STCM  R1,B'1111',20(R11)       DATUM -> DIRECTORY
         STCM  R0,B'1100',24(R11)       UHRZEIT -> DIRECTORY
         SPACE
         WRITE D1,SF,MF=E               SATZ ZURUECKSCHREIBEN
         CHECK D1
         SPACE 2
E05I     EQU   *
         LA    R10,KEEP
         MVC   DCBBLKSI,SBLKSI          BLKSIZE ZURUECKSPEICHERN
         MVC   DCBRECFM,SRECFM          RECFM ZURUECKSPEICHERN
         CLOSE KEEP
         SPACE 3
E05H     EQU   *
         XC    CPECB,CPECB
         L     R15,ADAIR
         LA    R1,DAPB3                 ADRESSE DAPB
         STCM  R1,B'0111',DAIRDAPB
         LA    R1,DAIRPARM
         CALL  (15)                     DE-ALLOCATE
         SPACE 1
NOP1     NOP   E05Z                     WEICHE FUER 2. DURCHLAUF
         OI    NOP1+1,X'F0'             WEICHE UMSTELLEN
         SPACE 1
         LA    R12,DSNAME
         LH    R9,DSNAME
         LA    R12,0(R9,R12)            ADRESSE ENDE DSNAME
         BCTR  R9,0
         BCTR  R9,0
         LA    R10,E05B                 SPRUNGADRESSE
         SPACE 2
E05B     EQU   *                        SCHLEIFENANFANG
         CLI   0(R12),C'.'
         BE    E05C
         MVI   0(R12),C' '
         BCTR  R12,0
         BCTR  R9,R10                   SCHLEIFENENDE
         B     E05Z                     NICHTS MEHR ZU TUN
         SPACE 2
E05C     EQU   *                        MEMBER IN OBJECT DATEI LOSCHEN
         C     R9,=F'40'                DSN ZU LANG ?
         BH    E05Z                     JA
         SPACE 1
         MVC   1(3,R12),=C'OBJ'         DSNAMEN AENDERN
         LA    R9,4(R9)                 NEUE LAENGE
         STH   R9,DSNAME                EINTRAGEN
         XC    DA18FLG,DA18FLG          FLAGS LOESCHEN
         XC    DA08FLG,DA08FLG          FLAGS LOESCHEN
         XC    DA08DSO,DA08DSO          FLAGS LOESCHEN
         B     E05A
E05Z     EQU   *
         L     RBAL,E05-4
         BR    RBAL
         SPACE 3
         EJECT
***********************************************************************
*                                                                     *
*        E10   PAN RETRIEVE ...                                       *
*                                                                     *
***********************************************************************
         SPACE 3
         DC    F'0'
E10      EQU   *
         ST    RBAL,E10-4
         SPACE 2
         BAL   RBAL,U05                 TEST AUF PO-DATEI, MEMBER
         LTR   R15,R15                  FEHLER ?
         BNZ   E10Z                     JA
         SPACE 2
         CLI   MEMBER,C' '              PO-DATEI ?
         BNE   E10A                     JA
         SPACE 2
         CLC   PANEXP,=H'1'             EXPAND-OPTION AN ?
         BNE   E10C                     NEIN
         SPACE 2
         BAL   RBAL,E1005               TYP PRUEFEN
         LTR   R15,R15
         BP    E10Z                     FEHLER
         BM    E10A                     EXPAND-OPTION NICHT AENDERN
         SPACE 2
         MVC   EPEXPN(1),KPNOEX         NOEXPAND IN COMMAND-PUFFER
         MVC   PANEXP,=H'0'             EXPAND-OPTION AUS
         B     E10C                     ALLOC COPY-DATEI NICHT NOETIG
         SPACE 3
E10A     EQU   *
         CLC   PANEXP,=H'1'             EXPAND-OPTION AN ?
         BNE   E10C                     NEIN
         LA    R10,COPYDSN              DSN DES COPY-DATASETS
         ST    R10,DA08PDSN             IN DAIR-PARAMETER SPEICHERN
         MVC   DA08DDN,CDDNAME          DDNAMEN EINSTELLEN
         SPACE 1
         XC    CPECB,CPECB              ECB LOESCHEN
         L     R15,ADAIR
         LA    R1,DAPB2                 ADRESSE DAPB
         STCM  R1,B'0111',DAIRDAPB
         LA    R1,DAIRPARM
         CALL  (15)                     ALLOCATE
         SPACE 2
         LTR   R15,R15                  FEHLER ?
         BZ    E10C                     NEIN
         TM    DA08FLG,X'80'            SCHLIMM ?
         BO    E10C                     NEIN
         SPACE 2
         XC    CPECB,CPECB
         PUTLINE PARM=PUTBLOCK,OUTPUT=(TEXT2,TERM,SINGLE,DATA),        *
               MF=(E,IOPLADR)
         B     E10Z
         SPACE 3
E10C     EQU   *
         LA    R1,ZECPPL                PARAMETERLISTE
         BAL   RBAL,U10                 PAN-VERSION MIT EXIT
         SPACE 3
         CLC   PANEXP,=H'1'             FREE NOETIG ?
         BNE   E10Z                     NEIN
         MVC   DA18PDSN,DA08PDSN        ADRESSE DSN UEBERTRAGEN
         XC    CPECB,CPECB              ECB LOESCHEN
         L     R15,ADAIR
         LA    R1,DAPB3                 ADRESSE DAPB
         STCM  R1,B'0111',DAIRDAPB
         LA    R1,DAIRPARM
         CALL  (15)                     FREE
         SPACE 2
         LTR   R15,R15                  FEHLER ?
         BZ    E10Z                     NEIN
         TM    DA08FLG,X'80'            SCHLIMM ?
         BO    E10Z                     NEIN
         SPACE 2
         XC    CPECB,CPECB
         PUTLINE PARM=PUTBLOCK,OUTPUT=(TEXT3,TERM,SINGLE,DATA),        *
               MF=(E,IOPLADR)
         SPACE 3
E10Z     EQU   *
         L     RBAL,E10-4
         BR    RBAL
         EJECT
***********************************************************************
*                                                                     *
*        E1005 PANVALET - TYP PRUEFEN                                 *
*                                                                     *
***********************************************************************
         SPACE 3
         DC    F'0'
E1005    EQU   *
         ST    RBAL,E1005-4
         SPACE 2
         LOAD  EP=PAM                   PANVALET-ACCESS-METHOD LADEN
         SPACE
         ST    R0,APOPEN                ADRESSE SPEICHERN
         LR    R1,R0                    ADRESSE POPEN
         LA    R1,8(R1)                 ADRESSE PSRCH
         ST    R1,APSRCH                SPEICHERN
         LA    R1,16(R1)                ADRESSE PCLOSE
         ST    R1,APCLOSE               SPEICHERN
         SPACE 3
         XC    ACTION,ACTION            CLEAR ACTION
         L     R15,APOPEN               ADRESSE POPEN
         CALL  (15),(ACTION,DDN,BACKUP),VL
         SPACE
         LTR   R15,R15
         BZ    E1005A                   KEIN FEHLER
         SPACE 2
         XC    CPECB,CPECB              ECB CLEAR
         PUTLINE PARM=PUTBLOCK,OUTPUT=(TEXT6,TERM,SINGLE,DATA),        *
               MF=(E,IOPLADR)
         LA    R10,8                    RETURN-CODE
         B     E1005Z
         SPACE 3
E1005A   EQU   *
         L     R12,PANNAME              ADRESSE PANVALET-NAME
         LH    R11,PANNAME+4            LAENGE PANVALET-NAME
         BCTR  R11,0
         EX    R11,MVC7   SUCHNAMEN EINSTELLEN MVC7 MVC NAME1(0),0(R12)
         L     R15,APSRCH               ADRESSE DIRECTORYSEARCH-ROUT.
         CALL  (15),(ACTION,DIRENTRY,NAME1,NAME2,COMMENT,SUBSET),VL
         SPACE
         LTR   R15,R15                  FEHLER ?
         BZ    E1005B                   NEIN
         SPACE 2
         EX    R11,MVC8   NAMEN -> AUSGABETEXT MVC8 TEXT7N(0),0(R12)
         PUTLINE PARM=PUTBLOCK,OUTPUT=(TEXT7,TERM,SINGLE,DATA),        *
               MF=(E,IOPLADR)
         LA    R10,8                    RETURN-CODE
         B     E1005X
         SPACE 3
E1005B   EQU   *
         CLC   DTYPE,=C'COBOL'          TYP COBOL ?
         BE    E1005C
         CLC   DTYPE,=C'COB72'          TYP COB72 ?
         BE    E1005C
         CLC   DTYPE,=C'SPL  '          TYP SPL ?
         BE    E1005C
         SPACE 2
         L     R10,=F'-1'               KEIN COBOL-TYP
         B     E1005X
         SPACE 2
E1005C   EQU   *
         SR    R10,R10                  COBOL-TYP
         SPACE 3
E1005X   EQU   *
         XC    ACTION,ACTION
         L     R15,APCLOSE
         CALL  (15),(ACTION),VL
         SPACE 3
E1005Z   EQU   *
         LR    R15,R10                  RETURNCODE UMLADEN
         L     RBAL,E1005-4
         BR    RBAL
         SPACE 3
MVC7     MVC   NAME1(0),0(R12)
MVC8     MVC   TEXT7N(0),0(R12)
         EJECT
***********************************************************************
*                                                                     *
*        U05   PRUEFEN AUF PO-DATEI;    MEMBERNAMEN EINSETZEN         *
*                                                                     *
***********************************************************************
         SPACE 3
         DC    F'0'
U05      EQU   *
         ST    RBAL,U05-4
         SPACE 2
         LOAD  EP=IKJEFD00              DAIR ROUTINE
         ST    R0,ADAIR
         SPACE 2
         L     R7,CPPLCBUF
         L     R9,0(R7)                 LAENGE + OFFSET CMD-BUFFER
         SPACE 1
         MVC   PARSUPT,CPPLUPT          LINK-PARAMATERLISTE AUFBAUEN
         MVC   PARSECT,CPPLECT
         MVC   PARSBUF,CPPLCBUF
         SPACE
         LINK  EP=IKJPARS,MF=(E,PARSPARM),SF=(E,LINKLIST)
         SPACE
         ST    R9,0(R7)                 LAENGE + OFFSET SPEICHERN
         LTR   R15,R15                  FEHLER ?
         BNZ   U05X                     JA
         SPACE 2
         L     R4,PPLANS
         CLC   =H'0',PANANG4            DATASET ANGEGEBEN ?
         BE    U05B                     NEIN; DIE DATEI IST SEQUENTIELL
         SPACE 2
         TM    DSN+14,X'80'             MEMBER ANGEGEBEN ?
         BNO   U05A                     NEIN
         SPACE 1
         L     R12,DSN+8                ADRESSE MEMBERNAME
         LH    R11,DSN+12               LAENGE MEMBERNAME
         BCTR  R11,0
         EX    R11,MVC1                 MVC1 MVC MEMBER(0),0(R12)
         MVC   EPLOC,PANPO              PANVALET-VERSION FUER PDS
         SPACE 2
U05A     EQU   *
         LA    R11,DSNAME+2             ADRESSE DSN
         SR    R12,R12
         TM    DSN+6,X'40'              USERID VORANSTELLEN ?
         BO    U05C                     NEIN
         SPACE 1
         L     R8,CPPLPSCB
         IC    R12,7(R8)                LAENGE USERID
         MVC   DSNAME+2(7),0(R8)        USERID EINSTELLEN
         AR    R11,R12                  NEUE ZIELADRESSE
         MVI   0(R11),C'.'              PUNKT EINFUEGEN
         LA    R11,1(R11)               NEUE ZIELADRESSE
         LA    R12,1(R12)               NEUE LAENGE USERID
         SPACE 2
U05C     EQU   *
         L     R9,DSN                   ADRESSE DATASET-NAME
         LH    R10,DSN+4                LAENGE     "      "
         BCTR  R10,0
         EX    R10,MVC2                 MVC2 MVC 0(0,R11),0(R9)
         LA    R10,1(R10,R12)           GESAMTLAENGE DSNAME
         STH   R10,DSNAME               LAENGE EINTRAGEN
         MVC   KPDAK(44),DSNAME+2       NAMEN -> PUFFERKONSTANTE
         SPACE 2
         CLI   0(R3),C'R'               RETRIEVE ?
         BNE   U05F                     NEIN
         CLC   PANEXP,=H'1'             EXPAND ?
         BNE   U05F                     NEIN
         SPACE 1
         CLC   CDSN,DSNAME+2            RETRIEVE-DATASET=COPY-DATASET ?
         BNE   U05F                     NEIN
         SPACE 1
         XC    CPECB,CPECB              ECB LOESCHEN
         PUTLINE PARM=PUTBLOCK,OUTPUT=(TEXT5,TERM,SINGLE,DATA),        *
               MF=(E,IOPLADR)
         B     U05X
         SPACE 3
U05F     EQU   *
         TM    VLM+6,X'80'              VOL.SER.NUMMER ANGEGEBEN ?
         BO    U05D                     JA
         SPACE 1
         LOCATE LOCLIST                 KATALOG-EINTRAG LESEN
         SPACE 1
         LTR   R15,R15                  FEHLER AUFGETRETEN ?
         BNZ   U05G                     NEIN
         SPACE 2
         TM    PLAT,X'20'               DA DEVICE ?
         BO    U05E
         SPACE 2
U05G     EQU   *
         XC    CPECB,CPECB              ECB LOESCHEN
         PUTLINE PARM=PUTBLOCK,OUTPUT=(TEXT4,TERM,SINGLE,DATA),        *
               MF=(E,IOPLADR)
         B     U05X
         SPACE 2
U05D     EQU   *
         L     R11,VLM                  ADRESSE VOLSER
         LH    R12,VLM+4                LAENGE VOLSER
         BCTR  R12,0
         EX    R12,MVC3                 IN LOCAREA UEBERTRAGEN
         SPACE 1
U05E     EQU   *
         OBTAIN OBLIST                  DSCB LESEN
         LTR   R15,R15                  DSCB IN ORDNUNG ?
         BZ    U05H                     JA
         SPACE 2
         MVC   TEXT11DS(44),DSNAME+2    DSN -> MESSAGE
         MVC   TEXT11VO,VOLS            VOLSER -> MESSAGE
         XC    CPECB,CPECB
         PUTLINE PARM=PUTBLOCK,OUTPUT=(TEXT11,TERM,SINGLE,DATA),       *
               MF=(E,IOPLADR)
         B     U05X
         SPACE 3
U05H     EQU   *
         TM    WORKAREA+38,X'02'        PO-DATEI ?
         BNO   U05B                     NEIN
         SPACE 2
         TM    DSN+14,X'80'             MEMBER ANGEGEBEN ?
         BO    U05B                     JA
         SPACE 1
         LH    R11,PANNAME+4            LAENGE MEMBERNAME
         L     R12,PANNAME              ADRESSE MEMBERNAME
         BCTR  R11,0
         C     R11,=F'7'                LAENGE ZULAESSIG ?
         BH    U05L                     NEIN, FEHLER
         EX    R11,MVC1                 MVC1 MVC MEMBER(0),0(R12)
         MVC   EPLOC,PANPO              PANVALET-VERSION FUER PDS
         SPACE 3
U05B     EQU   *
         BAL   RBAL,U0505
         SR    R15,R15                  RETURN-CODE 0
         B     U05Z
         SPACE 3
U05L     EQU   *
         XC    CPECB,CPECB
         PUTLINE PARM=PUTBLOCK,OUTPUT=(TEXT9,TERM,SINGLE,DATA),        *
               MF=(E,IOPLADR)
         SPACE 3
U05X     EQU   *
         XC    CPECB,CPECB
         PUTLINE PARM=PUTBLOCK,OUTPUT=(TEXT,TERM,SINGLE,DATA),         *
               MF=(E,IOPLADR)
         LA    R15,8
         SPACE 3
U05Z     EQU   *
         L     RBAL,U05-4
         BR    RBAL
         SPACE 10
MVC1     MVC   MEMBER(0),0(R12)
MVC2     MVC   0(0,R11),0(R9)
MVC3     MVC   VOLS(0),0(R11)
         EJECT
***********************************************************************
*                                                                     *
*        U0505 EINSTELLEN DER PARAMETER IN DEN COMMAND-BUFFER         *
*                                                                     *
***********************************************************************
         SPACE 3
         DC    F'0'
U0505    EQU   *
         ST    RBAL,U0505-4
         SPACE 2
         MOVE  EPCMND,PANFUNC,B'00000111'  FUNTIONSCODE -> PUFFER
         MOVE  EPNAME,PANNAME,B'00000111'  PANNAMEN     -> PUFFER
         MOVE  KPFORM,PANTYPE,B'00000001',EPFORM  TYP   -> PUFFER
         MOVE  KPCONT,CNTL,B'00000111',EPCONT     CONTR -> PUFFER
         MOVE  KPDDN,DDNM,B'00000111',EPDDNM     DDNAME -> PUFFER
         MOVE  KPUSE,USR,B'00000001',EPUSER      USER   -> PUFFER
         MOVE  KPACC,ACCSS,B'00000110',EPACCE    ACCESS -> PUFFER
         MOVE  KPVOL,VLM,B'00000100',EPVOL       VOLUME -> PUFFER
         MOVE  KPLEV,LVL,B'00000010',EPLEVL      LEVEL  -> PUFFER
         SPACE 2
         TM    MASK,B'00000001'
         BZ    U0505A
         CLI   PANANG6+1,X'1'
         BNE   U0505A
         MVC   EPNOFOR(L'KPNOFOR),KPNOFOR        NOFORMAT
         SPACE
U0505A   EQU   *
         TM    MASK,B'00000111'
         BZ    U0505B
         CLI   PANVALET+1,X'1'
         BNE   U0505C
         MVC   EPPANV(L'KPANV),KPANV             PANVALET
         B     U0505B
U0505C   EQU   *
         CLI   PANVALET+1,X'2'
         BNE   U0505B
         MVC   EPTSO(L'KPTSO),KPTSO              TSO
         SPACE
U0505B   EQU   *
         TM    MASK,B'00000011'
         BZ    U0505D
         CLI   PANDEL+1,X'1'
         BNE   U0505E
         MVC   EPDELE(L'KPDELE),KPDELE           DELETE
         B     U0505D
U0505E   EQU   *
         CLI   PANDEL+1,X'2'
         BNE   U0505D
         MVC   EPKEEP(L'KPKEEP),KPKEEP           KEEP
         SPACE
U0505D   EQU   *
         TM    MASK,B'00000100'
         BZ    U0505I
         CLI   PANEXP+1,X'1'
         BNE   U0505J
         MVC   EPEXPN(L'KPEXPND),KPEXPND         EXPAND
         B     U0505I
U0505J   EQU   *
         CLI   PANEXP+1,X'2'
         BNE   U0505I
         MVC   EPNOEX(L'KPNOEX),KPNOEX           NOEXPAND
         SPACE
U0505I   EQU   *
         CLC   =H'0',PANANG4                     DATASET  ANGEGEBEN ?
         BE    U0505Z
         LH    R10,DSNAME                        LAENGE DSN
         LA    R10,KPDAK(R10)                    1. STELLE HINTER DSN
         CLI   MEMBER,C' '                       MEMBER VORHANDEN ?
         BE    U0505F                            NEIN
         MVI   0(R10),C'('                       KLAMMER FUER MEMBERN.
         MVC   1(8,R10),MEMBER                   MEMBERNAMEN EINSTELL.
         LA    R10,2(R10)                        2. ZEICHEN MEMBER
         CLI   6(R10),C' '                       MEMBERNAME 8-STELLIG ?
         BE    U0505H                            NEIN
         LA    R10,7(R10)                        ADRESSE ERHOEHEN
         B     U0505K
U0505H   EQU   *
         CLI   0(R10),C' '                       BLANK ?
         BNE   U0505G                            NEIN
U0505K   EQU   *
         MVI   0(R10),C')'                       KLAMMER SCHLIESSEN
         LA    R10,1(R10)                        ADRESSE ERHOEHEN
         B     U0505F
U0505G   EQU   *
         LA    R10,1(R10)                        ADRESSE ERHOEHEN
         B     U0505H
U0505F   EQU   *
         MVI   0(R10),C''''                      ENDAPOSTROPH
         MVC   EPDATS(L'KPDA),KPDA               DSN EINSTELLEN
         SPACE 3
U0505Z   EQU   *
         LA    R7,EPUFFER
         LA    R10,ZECPPL
         ST    R7,0(R10)
         L     RBAL,U0505-4
         BR    RBAL
         EJECT
***********************************************************************
*                                                                     *
*        U10   AUFRUF DES PANVALET-PAN-COMMANDS                       *
*                                                                     *
***********************************************************************
         SPACE 3
         DC    F'0'
U10      EQU   *
         ST    RBAL,U10-4
         SPACE 2
         ATTACH EPLOC=EPLOC,ECB=ECB,STAI=STAIXIT       PAN-COMMAND
         ST    R1,ATASK                ADRESSE TCB
         WAIT  ECB=ECB                 WARTEN AUF PAN-ENDE
         DETACH ATASK,STAE=YES         DETACH PAN-COMMAND
         SPACE 3
         CLC   =FL3'4',ECB+1           ABEND ?
         BNL   U10Z                    NEIN
         SPACE 2
         BAL   RBAL,STAEXITA           FREE DER DATEIEN
         B     RETURN
         SPACE 3
U10Z     EQU   *
         L     RBAL,U10-4
         BR    RBAL
         EJECT
***********************************************************************
*                                                                     *
*        STAIXIT STAI - EXIT - ROUTINE                                *
*                                                                     *
***********************************************************************
         SPACE 2
STAIXIT  EQU   *
         LA    R15,16
         BR    R14
         SPACE 3
***********************************************************************
*                                                                     *
*        STAEXIT STAE - EXIT - ROUTINE                                *
*                                                                     *
***********************************************************************
         SPACE 2
STAEXIT  EQU   *
         USING *,15
         STM   R0,R15,STAESAVE
         L     BASEREG,ASA
         LA    R6,2048
         LA    R6,2048(R6,BASEREG)
         DROP  15
         MVI   STAEMASK,X'0'
         MVC   ECB+1(3),5(R1)
         B     STAEXITB
         SPACE 2
***********************************************************************
*                                                                     *
*        STAEXIT-ENTRY, FALLS ABEND IM PANVALET-PAN-COMMAND           *
*                                                                     *
***********************************************************************
         SPACE 3
         DC    F'0'
STAEXITA EQU   *
         ST    RBAL,STAEXITA-4
         MVI   STAEMASK,X'1'
         SPACE 2
STAEXITB EQU   *
         CONVERT ABCODE,3,ECB+1        ABEND-CODE CONVERTIEREN
         SPACE
         MVC   SYSTAB,ABCODE           SYSTEM-ABEND-CODE -> TEXT
         MVC   USERAB,ABCODE+3         USER - ABEND-CODE -> TEXT
         SPACE
         XC    CPECB,CPECB
         PUTLINE PARM=PUTBLOCK,OUTPUT=(TEXT8,TERM,SINGLE,DATA),        *
               MF=(E,IOPLADR)
         SPACE
         MVC   DA18PDSN,=F'0'         NAMENSEINTRAG LOESCHEN
         SPACE
         MVC   DA18DDN,CDDNAME
         XC    CPECB,CPECB
         L     R15,ADAIR
         LA    R1,DAPB3                 ADRESSE DAPB
         STCM  R1,B'0111',DAIRDAPB
         LA    R1,DAIRPARM
         BALR  R14,R15                  DE-ALLOCATE
         SPACE
         MVC   DA18DDN,=CL8'PANDD2'
         XC    CPECB,CPECB
         L     R15,ADAIR
         LA    R1,DAPB3                 ADRESSE DAPB
         STCM  R1,B'0111',DAIRDAPB
         LA    R1,DAIRPARM
         BALR  R14,R15                  DE-ALLOCATE
         SPACE
         MVC   DA18DDN,=CL8'PANDD3'
         XC    CPECB,CPECB
         L     R15,ADAIR
         LA    R1,DAPB3                 ADRESSE DAPB
         STCM  R1,B'0111',DAIRDAPB
         LA    R1,DAIRPARM
         BALR  R14,R15                  DE-ALLOCATE
         SPACE 2
         CLI   STAEMASK,X'01'          ABEND IM PANVALET-PAN-COMMAND ?
         BNE   STAEXITZ                NEIN
         SPACE 3
STAEXITY EQU   *
         L     RBAL,STAEXITA-4
         BR    RBAL
         SPACE 3
STAEXITZ EQU   *
         LM    R0,R15,STAESAVE
         SR    R15,R15
         BR    R14
         EJECT
***********************************************************************
*                                                                     *
*        D E F I N I T I O N E N                                      *
*                                                                     *
***********************************************************************
         SPACE 3
ASA      DC    A(SAVEAREA)
STAESAVE DC    16A(0)
ATASK    DC    A(0)
         SPACE
ADAIR    DC    A(0)
APOPEN   DC    A(0)
APSRCH   DC    A(0)
APCLOSE  DC    A(0)
CPECB    DC    A(0)
ECB      DC    A(0)
PPLANS   DC    A(0)
UWA      DC    A(0)
         SPACE 3
         DS    0A
ZECPPL   DC    XL16'0'                  EIGENE CPPL
         SPACE 3
DAPB2    DS    0F                       PARAMETRLISTE DAIR ALLOCATE
DA08CD   DC    X'0008'
DA08FLG  DC    XL2'0'
DA08DARC DC    H'0'
DA08CTRC DC    H'0'
DA08PDSN DC    A(DSNAME)
DA08DDN  DC    CL8' '
DA08UNIT DC    CL8' '
DA08SER  DC    CL8' '
DA08BLK  DC    F'0'
DA08PQTY DC    F'0'
DA08SQTY DC    F'0'
DA08DQTY DC    F'0'
DA08MNM  DC    CL8' '
DA08PSWD DC    CL8' '
DA08DSP1 DC    X'08'
DA08DSP2 DC    X'08'
DA08DSP3 DC    X'08'
DA08CTL  DC    X'08'
         DC    XL3'0'
DA08DSO  DC    X'0'
DA08ALN  DC    CL8' '
         SPACE 3
DAPB3    DS    0F                       PARAMETERLISTE DAIR FREE
DA18CD   DC    X'0018'
DA18FLG  DC    2X'0'
DA18DARC DC    XL2'0'
DA18CTRC DC    XL2'0'
DA18PDSN DC    A(DSNAME)
DA18DDN  DC    XL8'0'
DA18MNM  DC    CL8' '
DA18SCLS DC    CL2' '
DA18DPS2 DC    X'08'
DA18CTL  DC    X'10'
DA18JBNM DC    CL8' '
         SPACE 3
DAIRPARM DS    0A
DAIRUPT  DC    A(0)
DAIRECT  DC    A(0)
DAIRECB  DC    A(CPECB)
DAIRPSCB DC    A(0)
         DC    XL1'80'
DAIRDAPB DC    AL3(0)
         SPACE
PARSPARM DS    0A
PARSUPT  DC    A(0)
PARSECT  DC    A(0)
         DC    A(CPECB)
         DC    A(PANPARM)
         DC    A(PPLANS)
PARSBUF  DC    A(0)
         DC    X'80'
         DC    AL3(UWA)
         SPACE 2
LINKLIST LINK  EP=IKJPARS,SF=L
         SPACE 2
LOCLIST  CAMLST NAME,DSNAME+2,,LOCAREA
         SPACE 1
LOCAREA  DS    0D
         DC    265C' '
PLAT     EQU   LOCAREA+4,1
VOLS     EQU   LOCAREA+6,6
         SPACE 2
OBLIST   CAMLST SEARCH,DSNAME+2,VOLS,WORKAREA
         SPACE 1
WORKAREA DS    0D
         DC    148C'0'
         SPACE 3
EPLOC    DC    CL8'PAN$MEX'             PAN-VERSION FUER SEQ. DATASETS
PANPO    DC    CL8'PAN$MEX'             PAN-VERSION FUER PDS
         SPACE 3
DSNAME   DC    H'0',CL44' '
MEMBER   DC    CL8' '
COPYDSN  DC    Y(L'CDSN)
CDSN     DC    C'SPF.DATALIB'
         DC    CL(44-L'CDSN)' '
CDDNAME  DC    CL8'PANDD4'
         SPACE
BLKSI    DC    H'256'
SBLKSI   DC    H'0'
RECFM    DC    X'80'
SRECFM   DC    X'00'
         READ  D1,SF,KEEP,EPUFFER,'S',MF=L
         SPACE
P366     DC    P'366'
STORE    DC    CL7'STORED'
MASK     DC    X'0'
STAEMASK DC    X'0'
ABCODE   DC    CL6' '
         SPACE 5
PUTBLOCK PUTLINE MF=L
         SPACE 2
IOPLADR  DC    A(0)
         DC    A(0)
         DC    A(CPECB)
         DC    A(0)
         SPACE 2
TEXT     DC    Y(TEXTEND-TEXT)
         DC    H'0'
         DC    C'UNGUELTIGE ODER FEHLERHAFTE OPERANDEN'
TEXTEND  EQU   *
         SPACE 2
TEXT2    DC    Y(TEXT2END-TEXT2)
         DC    H'0'
         DC    C'COPYDATEI KANN NICHT ALLOCIERT WERDEN'
TEXT2END EQU   *
         SPACE 2
TEXT3    DC    Y(TEXT3END-TEXT3)
         DC    H'0'
         DC    C'COPYDATEI KANN NICHT DE-ALLOCIERT WERDEN'
TEXT3END EQU   *
         SPACE 2
TEXT4    DC    Y(TEXT4END-TEXT4)
         DC    H'0'
         DC    C'DATEI IST NICHT KATALOGISIERT ODER STEHT NICHT AUF EIN*
               ER DA-EINHEIT'
TEXT4END EQU   *
         SPACE 2
TEXT5    DC    Y(TEXT5END-TEXT5)
         DC    H'0'
         DC    C'RETRIEVE IN DEN COPY-DATASET IST NICHT MOEGLICH'
TEXT5END EQU   *
         SPACE 2
TEXT6    DC    Y(TEXT6END-TEXT6)
         DC    H'0'
         DC    C'PANVALET BIBLIOTHEK KANN NICHT EROEFFNET WERDEN'
TEXT6END EQU   *
         SPACE 2
TEXT7    DC    Y(TEXT7END-TEXT7)
         DC    H'0'
         DC    C'DAS MEMBER '
TEXT7N   DC    CL10' '
         DC    C' IST NICHT IN DER PANVALET-BIBLIOTHEK ENTHALTEN'
TEXT7END EQU   *
         SPACE 2
TEXT8    DC    Y(TEXT8END-TEXT8)
         DC    H'0'
         DC    C'PANVALET ABEND     SYSTEM '
SYSTAB   DC    CL3' '
         DC    C'   USER '
USERAB   DC    CL3' '
TEXT8END EQU   *
         SPACE 2
TEXT9    DC    Y(TEXT9END-TEXT9)
         DC    H'0'
         DC    C'LAENGE DES PANVALET- ODER MEMBERNAMEN UNZULAESSIG'
TEXT9END EQU   *
         SPACE 2
TEXT10   DC    Y(TEX10END-TEXT10)
         DC    H'0'
         DC    C'MEMBER '
TEXTMEM  DC    CL8' '
         DC    C' DELETED IN '
TEXTDSN  DC    CL44' '
TEX10END EQU  *
         SPACE 2
TEXT11   DC    Y(TEX11END-TEXT11)
         DC    H'0'
TEXT11DS DC    CL80' '
         DC    C'DATASET IST NICHT AUF DEM VOLUME '
TEXT11VO DC    CL6' '
         DC    C' ODER DAS VOLUME IST NICHT GEMOUNTED'
TEX11END EQU  *
         EJECT
ACTION   DC    F'0'  RETURN CODE FRON PAN, SHOULD BE SET TO ZERO
*  POPEN PARAMETERS
DDN      DC    CL8'PANDD1'         DDNAME OF FILE TO BE OPENED
BACKUP   DC    CL8'NO-ENTRY'  MUST BE CL8'BACKUP' IF PROTECTION FILE
*PSRCH PARAMETERS
NAME1    DC    CL22' '             SEARCH NAME1
NAME2    DC    CL11'NO-ENTRY'      SEARCH NAME2
COMMENT  DC    CL52'NO-ENTRY'      NO COMMENTS WANTED, ELSE='COMMENT'
*NOTE  COMMENTS WILL BE PROCEDED AND ENDED WITH AN *
SUBSET   DC    CL27'NO-ENTRY'      NO SUBSETS WANTED, ELSE='SUBSET'
*  PREAD PARAMETERS
INCLUDES DC    CL8'NO-ENTRY'
NAME     DC    CL22' '             DATA SET TO BE READ
DIRENTRY DS    0CL80               DIR ENTRY RETURNED IN 0-UP FORMAT
DNAME    DS    CL10                NAME LEFT JUSTIFIED
DLEVEL   DS    CL3                 LEVEL NUMBER
DUSER    DS    CL4                 USER CODE
DSECURE  DS    CL1                 SECURITY CODE
DTYPE    DS    CL5                 LANGUAGE TYPE
DSTATUS  DS    0CL3                3 CHAR STATUS
DPRODT   DS    CL1                 P-PROD  T-TEST
DEORDD   DS    CL1                 E-ENABLE  D-DISABLE
DAORDI   DS    CL1                 A-ACTIVE  I-INACTIVE
DDATEM   DS    CL8                 DATE OF LAST MAINTENANCE MM/DD/YY
DDATEA   DS    CL8                 DATE OF LAST ACCESS  MM/DD/YY
DBLOCKS  DS    CL5                 NO. OF BLOCKS
DSTMTS   DS    CL8                 NO. OF STATEMENTS
DLASTACT DS    CL4                 LAST ACTION, 1ST POS. IS * IF PROD.
DBYTES   DS    CL2                 NO. BYTES PER STATMENT
DSUBSET  DS    CL4                 NO. OF SUBSETS(SUPERSETS ONLY)
DNAME2   DS    CL10                NAME RIGHT JUSTIFIED
         DS    CL1                 NOT USED
         DS    CL1                 N=NOFORMAT, T=TSO, ELSE BLANK
DINC     DS    CL1                 I=INCLUDE BEING EXPND (EXIT ONLY)
DVERSION DS    XL2                 VER. #(FOR PROTECTION FILES ONLY)
* SPECIAL RETURN CODES FROM EACH CALL TO PAM WILL BE RETNED IN ACTION
* 2      NAME NOT ALPHANUMERIC (SAME AS PV002)
* 4      ++INCLUDE NOT FOUND (PREAD ONLY)
* 7      PARAMETER TO LONG (SAME AS PV007)
* 23     NAME NOT FOUND (SAME AS PV023)
* 245   PARAMETER LIST ERROR IN CALL TO PAM
         LTORG
         EJECT
***********************************************************************
*                                                                     *
*        DCB  ZUM DELETEN VON PO-MEMBERN                              *
*                                                                     *
***********************************************************************
         SPACE 3
DELETE   DCB   DSORG=PO,MACRF=W
         EJECT
***********************************************************************
*                                                                     *
*        DCB  ZUM UPDATEN DER DIRECTORY                               *
*                                                                     *
***********************************************************************
         SPACE 3
KEEP     DCB   DSORG=PS,MACRF=(R,W),EODAD=E05I,BUFNO=1
         EJECT
***********************************************************************
*                                                                     *
*     AUFBAU DES EIGENEN COMMAND - BUFFERS                            *
*                                                                     *
***********************************************************************
         SPACE 3
EPUFFER  DS    0CL256
         DC    H'256,4'
EPAN     DC    C'PAN '
EPCMND   DC    CL9' '
EPNAME   DC    CL11' '
EPFORM   DC    CL13' '
EPCONT   DC    CL9' '
EPDATS   DC    CL61' '
EPDDNM   DC    CL13' '
EPUSER   DC    CL9' '
EPNOFOR  DC    CL02' '
EPPANV   DC    0CL2' '
EPTSO    DC    CL02' '
EPDELE   DC    0CL3' '
EPKEEP   DC    CL03' '
EPACCE   DC    CL09' '
EPEXPN   DC    0CL2' '
EPNOEX   DC    CL02' '
EPVOL    DC    CL10' '
EPLEVL   DC    CL07' '
         DC    CL(EPUFFER+256-*)' '
KPFORM2  DC    C'F(         )'
         ORG   KPFORM2+2
KPFORM   DC    CL09' ',C')'
KPCONT2  DC    C'C(     )'
         ORG   KPCONT2+2
KPCONT   DC    CL5' ',C')'
KPDA     DC    CL60'DA('''
         ORG   KPDA+4
KPDAK    DC    CL55' ',C')'
KPDDN2   DC    C'DD(        )'
         ORG   KPDDN2+3
KPDDN    DC    CL8' ',C')'
KPUSE2   DC    C'U(     )'
         ORG   KPUSE2+2
KPUSE    DC    CL5' ',C')'
KPNOFOR  DC    C'N'
KPANV    DC    C'P'
KPTSO    DC    C'T'
KPDELE   DC    C'DE'
KPKEEP   DC    C'KE'
KPACC2   DC    C'A(     )'
         ORG   KPACC2+2
KPACC    DC    CL5' ',C')'
KPEXPND  DC    C'E'
KPNOEX   DC    C'N'
KPVOL2   DC    C'V(      )'
         ORG   KPVOL2+2
KPVOL    DC    CL6' ',C')'
KPLEV2   DC    C'L(   )'
         ORG   KPLEV2+2
KPLEV    DC    CL3' ',C')'
         EJECT
***********************************************************************
*                                                                     *
*        PARSE PARAMETERLISTE                                         *
*                                                                     *
***********************************************************************
         SPACE 3
PANPARM  IKJPARM    DSECT=PANDSECT
PANFUNC  IKJIDENT   'CHARACTER',PROMPT='PANVALET-FUNCTION'
PANNAME  IKJIDENT   'CHARACTER',PROMPT='PANVALET-NAME',MAXLNTH=10,     *
               OTHER=ALPHANUM
PANANG1  IKJKEYWD
         IKJNAME    'FORMAT',SUBFLD=TYPE
PANANG2  IKJKEYWD
         IKJNAME    'CONTROL',SUBFLD=CONTROL
PANANG3  IKJKEYWD
         IKJNAME    'DDNAME',SUBFLD=DDNAME
PANANG4  IKJKEYWD
         IKJNAME    'DATASET',SUBFLD=DATASET
PANANG5  IKJKEYWD
         IKJNAME    'USER',SUBFLD=USER
PANANG6  IKJKEYWD
         IKJNAME    'NOFORMAT'
PANANG7  IKJKEYWD
         IKJNAME    'ACCESS',SUBFLD=ACCESS
PANANG8  IKJKEYWD
         IKJNAME    'VOLUME',SUBFLD=VOLUME
PANANG9  IKJKEYWD
         IKJNAME    'LEVEL',SUBFLD=LEVEL
PANVALET IKJKEYWD   DEFAULT='TSO'
         IKJNAME    'PANVALET'
         IKJNAME    'TSO'
PANDEL   IKJKEYWD   DEFAULT='DELETE'
         IKJNAME    'DELETE'
         IKJNAME    'KEEP'
PANEXP   IKJKEYWD   DEFAULT='EXPAND'
         IKJNAME    'EXPAND'
         IKJNAME    'NOEXPAND'
TYPE     IKJSUBF
PANTYPE  IKJIDENT   'PANTYPE',OTHER=ALPHANUM
CONTROL  IKJSUBF
CNTL     IKJIDENT   'NUMBER',FIRST=NUMERIC,OTHER=NUMERIC
DDNAME   IKJSUBF
DDNM     IKJIDENT   'DDNAME',MAXLNTH=8,OTHER=ALPHANUM
DATASET  IKJSUBF
DSN      IKJPOSIT   DSNAME,PROMPT='DSNAME'
USER     IKJSUBF
USR      IKJIDENT   'NUMBER',FIRST=NUMERIC,OTHER=NUMERIC,MAXLNTH=3
ACCESS   IKJSUBF
ACCSS    IKJIDENT   'NUMBER',FIRST=NUMERIC,OTHER=NUMERIC,MAXLNTH=3
VOLUME   IKJSUBF
VLM      IKJIDENT   'VOLSER',FIRST=ALPHANUM,OTHER=ALPHANUM,MAXLNTH=6
LEVEL    IKJSUBF
LVL      IKJIDENT   'NUMBER',FIRST=NUMERIC,OTHER=NUMERIC,MAXLNTH=3
         IKJENDP
         EJECT
         IKJCPPL
         SPACE 5
         PRINT NOGEN
         DCBD  DSORG=PS
         END
