         TITLE '   VTOC MODIFICATION PROGRAM '
**********************************************************************
*                                                                    *
*  THIS PROGRAM REMOVES VSAM DATASPACES FROM DA VOLUMES BY CREATING  *
*  A SUPERZAP AND IEHPROGM JOB. SUPERZAP CLEARS THE VSAM OWNERSHIP   *
*  BIT IN THE FORMAT4-DSCB AND THE DATA PROTECTION BITS OF ALL       *
*  VSAM FORMAT1 DSCB'S. IEHPROGM SCRATCHES THE VSAM DATA SPACES.     *
*  WHEN SINGLE SCRATCHING IS SPECIFIED THE OWNERSHIP BIT REMAINES    *
*  UNCHANGED AND ONLY THE DATA PROTECTION BITS OF THE DSCB'S TO BE   *
*  SCRATCHED ARE CLEARED.                                            *
*  VMP ALSO RENAMES DATA SETS USING SUPERZAP.                        *
*                                                                    *
**********************************************************************
VMP      START
         SAVE  (14,12)        SAVE REGISTERS
         BALR  R3,0           ESTABLISH ADDRESSABILITY
         USING *,3,4
NA0      L     R4,KBAS
         B     NA1
KBAS     DC    A(NA0+4096)
NA1      EQU   *
         LA    R12,SAVE       ADDRESS OF OWN SAVE AREA
         ST    R12,8(R13)   STORE IT INTO CALLER'S SAVE AREA
         ST    R13,4(R12)   ADDR OF CALLER'S SAVE AREA INTO OWN SA
         LR    R13,R12        LOAD SAVE AREA REG
         ST    R1,REG1SAVE    SAVE PARM REG
         LOAD  EP=READVTOC
         ST    R0,RVTOCADR
*
*   PARM FIELD PROCESSING
*
         OPEN  (UT1,OUTPUT,UT2,OUTPUT,MSG,OUTPUT)
         MVC   VOLC,=6C' '   CLEAR VOL SER COMPARE FIELD
         ZAP   STEPNR,=P'0'   ZERO STEP NUMBER
         XC    INDIC,INDIC    CLEAR INDICATOR BYTE
         MVI   MBER,C'1'      INIT ASA CHAR
NA1K     EQU   *
         MVC   OPER(104),=104C' '  CLEAR PARM VALUE FIELDS
         NI    INDIC,X'20'    CLEAR INDICATOR BITS 0+1,3-7
         L     R1,REG1SAVE    RESTORE PARM REG
         L     R1,0(R1)       LOCATE PARM FIELD
         LH    R9,0(R1)       GET LENGTH OF PARM FIELD
         LTR   R9,R9          TEST LENGTH
         BZ    CARDIN   BRANCH TO CARD PROC ROUTINE IF NO PARM FIELD
NA1M     EQU   *
         LA    R8,2(R1)  SET PARM POINTER TO START ADDRESS
         LA    R11,PVT   ADDR OF PARAMETER VECTOR TABLE
NA11     EQU   *
         L     R12,0(R11)   ADDR OF PARM VALUE FIELD
         L     R1,4(R11)    MAX LENGTH OF PARM VALUE
         CR    R9,R1  COMPARE IT WITH REMAINING LENGTH IN PARM FIELD
         BH    NA2        TAKE SMALLEST LENGTH
         LR    R1,R9
NA2      EQU   *
         BCTR  R1,0       DECREASE LENGTH FOR EXECUTE
         EX    R1,TEST1       TEST FOR DELIMITER
         BZ    NA3
         SR    R1,R8      PARAMETER LENGTH
         BZ    NA4    ZERO LENGTH - PARAMETER NOT PRESENT
         BCTR  R1,0     DECREASE LENGTH FOR EXECUTE
NA3      EQU   *
         EX    R1,MOVE1       MOVE PARM TO TARGET FIELD
         BCTR  R9,0           UPDATE PARM LENGTH AND ZERO TEST
         SR    R9,R1
         BZ    NA5   IF ZERO NO MORE PARAMETERS ARE PRESENT
         LA    R8,1(R8,R1)   UPDATE PARM FIELD POINTER
NA4      EQU   *
         MVC   REASON,=C'01'  REASON CODE
         CLI   0(R8),C','   TEST FOR CORRECT DELIMITER
         BNE   FEHLPRM
         BCTR  R9,0        DECREASE PARM FIELD LENGTH
         MVC   REASON,=C'03'  REASON CODE
         LTR   R9,R9        AND TEST
         BNP   FEHLPRM      ERROR IF LENGTH LOWER THAN 1
         LA    R8,1(R8)   INCREASE PARM FIELD PTR TO BYPASS DELIM
         LA    R11,8(R11)     INCREASE PVT REGISTER
         MVC   REASON,=C'02'  REASON CODE
         CLI   0(R11),X'FF'  IF END OF PVT BRANCH TO ERR ROUT.
         BE    FEHLPRM        TOO MUCH PARAMETERS
         B     NA11
*
*
TEST1    TRT   0(0,R8),TKOMMA
MOVE1    MVC   0(0,R12),0(R8)
*
*
*   C O N T R O L   S T A T E M E N T   R E A D   R O U T I N E
*
CARDIN   EQU   *
         TM    INDIC,X'20'    SYSIN DCB OPEN ?
         BO    NA4B           IF YES BYPASS OPEN
         OPEN  INDCB       OPEN SYSIN DATA SET
         OI    INDIC,X'20'    SET OPEN BIT
NA4B     EQU   *
         LA    R12,PRM2LNG+2   ADDR OF 2ND PARM FIELD
         XC    PRM2LNG,PRM2LNG
NA4D     EQU   *
         GET   INDCB,INBER    READ CONTROLSTMT
         MVC   REASON,=C'04'  REASON CODE
         LA    R8,INBER
         TRT   0(72,R8),TBL   TEST FOR BLANK
         BZ    FEHLPRM        IF NO BLANK BRANCH TO ERROR
         SR    R1,R8          LENGTH OF PARM STRING
         BZ    FEHLPRM        NULL STRING NOT ALLOWED
         LH    R9,PRM2LNG  UPDATE LENGTH OF 2ND PARM FLD
         AR    R9,R1
         MVC   REASON,=C'05'  REASON CODE
         CH    R9,=H'160'    TEST FOR MAXIMUM
         BH    FEHLPRM       2ND PARM FIELD TOO LONG
         STH   R9,PRM2LNG   STORE UPDATED PARM LENGTH
         BCTR  R1,0           DECREASE LENGTH
         EX    R1,MOVE1  MOVE PARM STRING TO 2ND PARMFIELD
         LA    R8,0(R8,R1)  UPDATE STRING PTR AND TEST LAST CHAR
         CLI   0(R8),C','  COMMA MEANS THERE IS ANOTHER CONT CARD
         BE    NA4F
         LA    R1,PRM2ADDR  LOAD PARM REGISTER AND BRANCH TO PARM ROUT
         ST    R1,REG1SAVE
         B     NA1K
NA4F     EQU   *
         LA    R12,1(R12,R1)  UPDATE 2ND PARM PTR
         B     NA4D  BRANCH TO READ CONTINUATION CARD
*
*   TEST FOR OPERATION
*
NA5      EQU   *
         MVC   REASON,=C'06'  REASON CODE
         CLC   OPER,=C'ADD'
         BE    NA5B           ADD A NEW ENTRY TO VOLTAB
         MVI   MBER+1,C' '    CLEAR MESSAGE AREA
         MVC   MBER+2(131),MBER+1
         MVC   MBER+1(3),OPER
         MVC   MBER+5(13),VOL
         MVC   MBER+19(44),DSN
         TRT   MBER+19(45),TBL
         MVC   2(44,R1),NEW
         PUT   MSG,MBER
         MVI   MBER,C'0'
         CLC   OPER,=C'SCR'
         BE    NA51           SCRATCH
         CLC   OPER,=C'REN'
         BNE   FEHLOP  ERROR IF NEITHER SCRATCH NOR RENAME
         OI    INDIC,X'02'   TURN ON RENAME BIT
         B     NA52
NA5B     EQU   *
*
*  THIS SEQUENCE ADDS A NEW VOLUME ENTRY TO VOLTAB
*  AND TESTS THE AUTHORIZATION PARAMETER
*
         CLI   DSN,C'*'
         BNE   FEHLPRM
         LA    R7,TUA         LOAD ADDRESS OF USER ATTRIBUTES TABLE
NA5C     EQU   *
         CLC   DSN+1(14),0(R7)
         BE    NA5D           USER ATTRIBUTES FOUND
         CLI   0(R7),X'FF'
         BE    FEHLPRM        USER NOT AUTHORIZED
         LA    R7,14(R7)
         B     NA5C
NA5D     EQU   *
         LA    R7,VOLTAB
NA5E     CLC   0(6,R7),=6C'.'
         BE    NA5G           ANY FREE SPACE IN VOLTAB ?
         CLI   0(R7),X'FF'
         BE    FEHLVOL        NO FREE SPACE TO PLACE NEW ENTRY
         LA    R7,6(R7)
         B     NA5E
NA5G     EQU   *
         MVC   0(6,R7),VOL    ADD NEW ENTRY
         B     NC1
***************************************************
NA51     EQU   *
         OI    INDIC,X'01'   TURN ON SCRATCH BIT
*
*   TEST VOLUME SERIAL NUMBER
*
NA52     EQU   *
         MVC   REASON,=C'07'  REASON CODE
         CLI   VOL,C' '    VOLUME SERIAL PRESENT
         BE    FEHLPRM   IF NO BRANCH TO ERROR ROUTINE
         OI    INDIC,X'04'   IF YES TURN ON VOL BIT
         TM    INDIC,X'02'   IF 'RENAME' THE VOL SER IS NOT CHECKED
         BO    NA54
         LA    R7,VOLTAB     LOAD ADDR OF VOLUME TABLE
         MVC   REASON,=C'08'  REASON CODE
NA53     CLC   VOL(6),0(R7)   LOOK UP VOLUME TABLE
         BE    NA54
         CLI   0(R7),X'FF'    IF END OF VOL TAB BRANCH TO ERROR
         BE    FEHLVOL
         LA    R7,6(R7)       INCREASE TAB REG
         B     NA53
NA54     EQU   *
         CLI   VOL+6,C'/'     DEVICE TYPE PRESENT ?
         BE    NA55
         MVC   VOL+6(7),=C'/3330-1'   NO. SET DEFAULT
NA55     EQU   *
         CLC   VOL(6),VOLC    FIRST OPERATION FOR THIS VOLUME
         BE    NA56
         BAL   R10,JCLGEN     YES. CREATE A NEW STEP
NA56     EQU   *
         MVC   VOLC,VOL  MOVE CURRENT VOL SER TO VOL SER COMP FIELD
*
*    DSN PARAMETER
*
         CLI   DSN,C' '       DSN PRESENT
         BE    NA6
         OI    INDIC,X'08'    YES. TURN ON DSN BIT
*
*    NEW NAME PARAMETER
*
NA6      EQU   *
         CLI   NEW,C' '       NEW NAME PRESENT ?
         BE    NA7
         OI    INDIC,X'10'    YES. TURN ON NEW NAME BIT
*
*    TEST FOR OPERATION AND BRANCH TO OP SUBROUTINE
*
NA7      EQU   *
         TM    INDIC,X'01'    SCRATCH OPERATION ?
         BO    NA8
         B     REN            RENAME ROUTINE
NA8      EQU   *
         TM    INDIC,X'08'    DSN SCRATCH SPECIFIED ?
         BO    SCRDSN  IF YES BRANCH TO SCRATCH DSN ROUTINE
         EJECT
*************************
*  SCRATCH ALL ROUTINE  *
*************************
         SPACE 2
*
*  TURN OFF VSAM OWNERSHIP BIT IN FORMAT4 DSCB
*
         MVC   REASON,=C'09'  REASON CODE
         TM    INDIC,X'10'    BRANCH TO ERROR ROUT
         BO    FEHLPRM        IF NEWNAME PARAMETER PRESENT
         MVC   DSNAME,=44X'04'  MOVE NAME OF F4 DSCB TO DSNAME
         OBTAIN SEARCHL       OBTAIN FORMAT4 DSCB
         LTR   R15,R15        TEST OBTAIN RETURN CODE
         BNZ   FEHLF4         BRANCH TO ERROR ROUT IF NONZERO
         TM    DSCBAREA+40,X'C0'  TEST VSAM OWNERSHIP BITS
         BZ    NB1            NO OWNERSHIP BITS ON
*
*     SET UP ZAP GEN ROUTINE
*
         MVC   CCHHR,DSCBAREA+96    DISK ADDR
         MVC   LOC,=H'84'     LOCATION IN DSCB
         MVC   LNG,=H'2'      LENGTH OF OLD DATA
         MVC   VAL(2),DSCBAREA+40   OLD DATA
         MVC   NEWVAL(2),DSCBAREA+40   NEW DATA
         MVI   NEWVAL,X'00'
         BAL   R10,ZAPGEN     LINK TO ZAP CREATION ROUTINE
         B     NB2
NB1      EQU   *
         MVC   MBER,MBER-1    CLEAR MESSAGE AREA
         MVC   MBER(41),=C'0*** NO VSAM OWNERSHIP BITS FOUND ON VOL '
         MVC   MBER+44(6),VOL
         PUT   MSG,MBER
*
*   LOOK FOR VSAM DATASETS
*
NB2      EQU   *
*
*   SET UP READ VTOC ROUTINE
*
         MVC   REASON,=C'10'  REASON CODE
         MVC   DISKADDR,=C'VTOC '
         MVC   ABSTRK,=5C' '
NB3      EQU   *
         L     R15,RVTOCADR
         CALL  (15),(VOLADDR,DISKAADR,WAADDR,ABSTRKA),VL
         B     *+4(R15)
         B     NB31           DSCB FOUND
         B     NC1            END OF VTOC
         B     FEHLVNM        VOLUME NOT MOUNTED
         B     FEHLIFID       INCORRECT FORM ID
         B     FEHLPERM       PERMANENT I/O ERR
         B     FEHLIWAP           INVALID WORK AREA POINTER
NB31     EQU   *
         LA    R7,DSNTABLE    LOOK UP DSN TABLE
NB4      EQU   *
         CLC   0(8,R7),DSCBAREA   IS DSN A VSAM NAME
         BE    NB5
         CLC   0(8,R7),DSCBAREA+9  IS DSN A VSAM NAME
         BE    NB5
         CLI   0(R7),X'FF'    TEST FOR END OF TABLE
         BE    NB3            IF END GET NEXT DSCB
         LA    R7,8(R7)       INCREASE INDEX REG
         B     NB4
*
*  VSAM DSN FOUND. SET UP ZAP CREATION ROUT TO KILL PROTECT BIT
*
NB5      EQU   *
         MVC   DSN,DSCBAREA   SAVE DSNAME FOR SCRATCH CREATION ROUT
         MVC   CCHHR,DISKADDR   DISK ADDR
         MVC   LOC,=H'92'     LOCATION IN DSCB
         MVC   LNG,=H'2'      LENGTH OF OLD DATA
         MVC   VAL(2),DSCBAREA+92   OLD DATA
         MVC   NEWVAL(2),DSCBAREA+92   NEW DATA
         MVI   NEWVAL+1,X'00'
         BAL   R10,ZAPGEN     LINK TO ZAP CREATION ROUTINE
         BAL   R10,SCRGEN     LINK TO SCRATCH CREATION ROUTINE
         B     NB3
         EJECT
************************************
*                                  *
*   SCRATCH DSNAME ROUTINE         *
*                                  *
************************************
         SPACE 2
SCRDSN   EQU   *
         MVC   REASON,=C'11'  REASON CODE
         TM    INDIC,X'10'    BRANCH TO ERROR ROUT IF
         BO    FEHLPRM        NEWNAME PARAMETER PRESENT
         LA    R7,DSN
         BAL   R10,UPRDVTOC      OBTAIN DSCB OF DSN TO BE SCRATCHED
*
*  SET UP ZAP GEN ROUTINE TO CLEAR PROTECTION BIT
*
         MVC   CCHHR,DISKADDR   GET HOME ADDR
         MVC   LOC,=H'92'     LOCATION IN DSCB
         MVC   LNG,=H'2'      LENGTH OF OLD DATA
         MVC   VAL(2),DSCBAREA+92   OLD DATA
         MVC   NEWVAL(2),DSCBAREA+92  NEW DATA
         MVI   NEWVAL+1,X'00'
         BAL   R10,ZAPGEN   BRANCH TO ZAP CREATION ROUTINE
         BAL   R10,SCRGEN   BRANCH TO SCRATCH CREATION ROUTINE
NC1      EQU   *
         LA    R1,NULLP       ADDR OF DUMMY PARM FIELD
         ST    R1,REG1SAVE
         B     NA1K
         EJECT
****************************************
*                                      *
*   R E N A M E   R O U T I N E        *
*                                      *
****************************************
         SPACE 2
REN      EQU   *
         MVC   REASON,=C'12'  REASON CODE
         TM    INDIC,X'18' BRANCH TO ERR ROUT IF BOTH DSN PARAM
         BNO   FEHLPRM    ARE NOT PRESENT
         LA    R7,NEW         ADDR OF NEW NAME
         BAL   R10,UPRDVTOC  LOOK FOR 'NEWNAME' DSCB
*
*   SET UP ZAP CREATION ROUTINE TO PERFORM RENAME OPERATION
*
         NI    INDIC,X'FD'    CLEAR RENAME BIT
         LA    R7,DSN         ADDR OF OLD NAME
         BAL   R10,UPRDVTOC  OBTAIN DSCB TO BE RENAMED
         MVC   CCHHR,DISKADDR   HOME ADDR
         MVC   LOC,=H'0'      LOCATION IN DSCB
         MVC   LNG,=H'44'     LENGTH OF OLD DATA
         MVC   VAL(44),DSN    OLD DATA
         MVC   NEWVAL(44),NEW   NEW DATA
         BAL   R10,ZAPGEN     LINK TO ZAP CREATE ROUTINE
         CLC   NEW,=CL44'SYSCTLG'   SYSCTLG TO BE RENMAED ?
         BNE   NC1                  NO
         MVC   LOC,=H'98'           LOCATION IN DSCB
         MVC   LNG,=H'4'            LENGTH OF OLD DATA
         MVC   VAL(4),DSCBAREA+98   TTR OF LAST BLOCK
         MVC   NEWVAL(3),=X'0000FF'  NEW DATA
         MVC   NEWVAL+3(1),VAL+3
         BAL   R10,ZAPGEN           LINK TO ZAP ROUTINE
         B     NC1
         EJECT
*******************************************************
*                                                     *
*   Z A P   C R E A T I O N   R O U T I N E           *
*                                                     *
*******************************************************
         SPACE 2
ZAPGEN   EQU   *
         MVC   REASON,=C'13'  REASON CODE
         MVC   LNGS,LNG       SAVE TOTAL LENGTH
         MVC   LOCS,LOC       SAVE START LOCATION
         MVC   UBER(6),=C'CCHHR '   BUILD CCHHR STATEMENT
         UNPK  UBER+6(11),CCHHR(6)  TRANSLATE CCHHR TO HEX
         TR    UBER+6(10),TTRANS-240
         MVI   UBER+16,C' '  BLANK SIGN BYTE
         MVC   UBER+17(64),UBER+16
         PUT   UT1,UBER       WRITE CCHHR STATEMENT
ND1      EQU   *
         MVC   UBER,UBER-1   CLEAR OUTPUT AREA
         MVC   UBER(4),=C'VER '   BUILD VERIFY STATEMENT
         LA    R8,VAL         SET CHAR VALUE POINTER
ND2      EQU   *
         UNPK  UBER+4(5),LOC(3)  TRANSLATE LOCATION TO HEX
         TR    UBER+4(4),TTRANS-240
         MVI   UBER+8,C' '  BLANK SIGN BYTE
         LA    R9,UBER+9      SET OUTPUT AREA POINTER
         LH    R7,LNG  PICK UP TOTAL/REMAINING LENGTH AND TEST FOR MAX
         STH   R7,LNGC        MAX DATA LENGTH IS 30
         CH    R7,=H'30'
         BNH   ND4  TOTAL LENGTH LOWER THAN 30 OR EQUAL
         LH    R7,=H'30'  SET CURRENT LENGTH TO MAXIMUM
         STH   R7,LNGC
ND4      EQU   *
         LH    R7,LNGC  PICK UP CURRENT LENGTH AND TEST FOR MAX
         STH   R7,LNGU  MAX LENGTH FOR CONV TO HEX IS 4
         CH    R7,=H'4'
         BNH   ND5  CONV LENGTH IS LOWER THAN 4 OR EQ
         LH    R7,=H'4'  SET CONV LENGTH TO MAX
         STH   R7,LNGU
ND5      EQU   *
         LR    R1,R7  BUILD LENGTH CODE FOR UNPACK OPERATION
         SLA   R1,5(0)
         AH    R1,LNGU
         EX    R1,UNPACK UNPACK DATA TO OUTPUT AREA
         SRL   R1,4(0)  BUILD LENGTH CODE FOR TRANSLATE OP
         BCTR  R1,0
         LTR   R1,R1          ZERO TEST
         BM    FEHLCONV       ERROR IF NO CHAR TO BE TRANSL
         EX    R1,TRANSL
         LA    R9,1(R9,R1)  UPDATE OUTPUT POINTER
         MVI   0(R9),C' '     BLANK SIGN BYTE
         LH    R1,LNGU   PICK UP LENGTH OF CONVERTED DATA
         LA    R8,0(R8,R1)  UPDATE CHAR VALUE POINTER
         LH    R7,LOC         UPDATE LOCATION FIELD
         AR    R7,R1
         STH   R7,LOC
         LH    R7,LNG  DECREASE TOTAL LENGTH
         SR    R7,R1
         STH   R7,LNG
         LH    R7,LNGC  DECREASE CURRENT LENGTH AND TEST FOR ZERO
         SR    R7,R1
         STH   R7,LNGC
         BNZ   ND4  NOT ZERO. BRANCH TO CONVERT NEXT SEGMENT
         PUT   UT1,UBER       WRITE VER/REP STATEMENT
         MVC   UBER+4(75),UBER+3  CLEAR OUTPUT AREA
         CLC   LNG,=H'0'      TEST REMAINING LENGTH
         BNE   ND2  IF NOT ZERO BRANCH TO CONTINUE VER/REP
         CLC   UBER(3),=C'REP'  REP STMT FINISHED
         BE    0(R10)         IF YES RETURN
*
*  BUILD REP STATEMENT
*
         MVC   UBER(4),=C'REP '
         MVC   LNG,LNGS       RESTORE TOTAL LENGTH
         MVC   LOC,LOCS       RESTORE START LOCATION
         LA    R8,NEWVAL  SET CHAR VAL POINTER TO NEW DATA FIELD
         B     ND2            BRANCH TO CONVERT ROUTINE
         EJECT
************************************************************
*                                                          *
*   S C R A T C H   C R E A T I O N   R O U T I N E        *
*                                                          *
************************************************************
         SPACE
SCRGEN   EQU   *
         MVC   REASON,=C'14'  REASON CODE
         MVC   UBER,UBER-1   CLEAR OUTPUT AREA
         MVC   UBER+1(18),=C'SCRATCH PURGE,VOL='
         LA    R1,VOL+13      PICK UP DEVICE TYPE
         LA    R8,VOL+7
         LA    R12,UBER+19
         TRT   0(6,R8),TBL
         SR    R1,R8          LENGTH OF DEVICE TYPE
         BZ    FEHLPRM        ERROR IF ZERO
         BCTR  R1,0           DECREASE LENGTH FOR EX
         EX    R1,MOVE1  MOVE DEVICE TYPE TO OUTPUT AREA
         LA    R12,1(R12,R1)  UPDATE OUTPUT AREA POINTER
         MVI   0(R12),C'='
         MVC   1(6,R12),VOL   VOLUME SERIAL NUMBER
         TRT   1(7,R12),TBL
         MVI   0(R1),C','
         MVI   UBER+71,C'*'   CONTINUATION CHARACTER
         PUT   UT2,UBER       WRITE IEHPROGM CTRL STMT
         MVC   UBER,UBER-1  ASSEMBLE CONTINUATION CARD
         MVC   UBER+15(7),=C'DSNAME='
         MVC   UBER+22(44),DSN   DATASET NAME
         PUT   UT2,UBER       WRITE CONT CARD
         LA    R7,SCRVOLT  UPDATE IEHPROGM VOLUME TABLE
NE2      EQU   *
         CLC   0(6,R7),VOL  VOL SER ALREADY IN TABLE ?
         BE    0(R10)         IF YES RETURN
         CLI   0(R7),X'FF'  NO. TEST FOR END OF TABLE
         BE    NE3
         LA    R7,13(R7)      INCREASE INDEX FOR NEXT ENTRY
         B     NE2
NE3      EQU   *
         CLC   0(13,R7),=13X'FF'
         BE    FEHLVOL  END OF TABLE. TOO MANY VOLUMES
         MVC   0(13,R7),VOL  ADD VOL ENTRY TO TABLE
         MVI   13(R7),X'FF'  INIT NEXT ENTRY
         BR    R10            RETURN
         EJECT
**********************************************************************
*                                                                    *
*    J O B   C O N T R O L   C R E A T I O N   R O U T I N E         *
*                                                                    *
**********************************************************************
         SPACE
JCLGEN   EQU   *
         AP    STEPNR,=P'1'  INCREASE STEP NUMBER BY ONE
         MVC   JCTVOL,VOL  PLACE VOL SER NUMBER IN JCLTABLE
         MVC   JCTVOL+12(6),VOL+7  PLACE DEVICE TYPE IN JCL TABLE
         UNPK  JCLTAB+5(2),STEPNR  UNPACK STEP NUMBER INTO JCL TABLE
         OI    JCLTAB+6,X'F0'  CLEAR SIGN
         LA    R7,JCLTAB
NE4      EQU   *
         CLI   0(R7),X'FF'   END OF TABLE ?
         BE    0(R10)   IF YES RETURN
         MVC   UBER,0(R7)     JCL STMT TO OUTPUT AREA
         LA    R7,80(R7)  INCREASE TAB REG TO NEXT ENTRY
         PUT   UT1,UBER       WRITE JCL STMT
         B     NE4            BRANCH TO GET NEXT ENTRY
         EJECT
*******************************************************
*                                                     *
*    D S N A M E   S E A R C H   R O U T I N E        *
*                                                     *
*******************************************************
         SPACE
UPRDVTOC EQU   *
*
*   SET UP READ VTOC
*
         MVC   REASON,=C'15'  REASON CODE
         MVC   DISKADDR,=C'VTOC '
         MVC   ABSTRK,=5C' '
NE5      EQU   *
         L     R15,RVTOCADR
         CALL  (15),(VOLADDR,DISKAADR,WAADDR,ABSTRKA),VL
         B     *+4(R15)
         B     NE6            DSCB FOUND
         B     NE7            END OF VTOC
         B     FEHLVNM        VOLUME NOT MOUNTED
         B     FEHLIFID       INCORRECT FORM ID
         B     FEHLPERM       PERMANENT I/O ERROR
         B     FEHLIWAP       INVALID WORKAREA POINTER
NE6      EQU   *
         CLC   0(44,R7),DSCBAREA
         BNE   NE5
         TM    INDIC,X'02'   TEST RENAME BIT
         BO    FEHLREN     RENAME - NEW NAME ALREADY PRESENT
         BR    R10            RETURN
NE7      EQU   *
         TM    INDIC,X'02'    TEST RENAME BIT
         BO    0(R10)
         B     FEHLDSN        DSNAME NOT FOUND
         EJECT
***************************************
*                                     *
*   S U B M I T   R O U T I N E       *
*                                     *
***************************************
         SPACE
SUBMIT   EQU   *
         CLOSE (UT1,,UT2)   CLOSE UTILITY DATA SETS
         MVC   UBER,UBER-1   CLEAR OUTPUT AREA
         OPEN  (JCLIN,,JCLOUT,OUTPUT,UT1,,UT2)
NG1      EQU   *
         GET   JCLIN,UBER    READ JOB STATEMENT
         CLC   UBER(2),=C'//'
         BNE   JCLEND
         PUT   JCLOUT,UBER   AND WRITE IT
         B     NG1
JCLEND   EQU   *
         CLC   UBER(2),=C'//'   TEST FOR USER JOB CARD
         BE    NG2
         PUT   JCLOUT,JOBSTMT    NO USER JOB STMT. WRITE
         PUT   JCLOUT,JOBSTMT+80      DEFAULT JOB STMT
NG2      EQU   *
         PUT   JCLOUT,JOBPRM     WRITE JOB PARM STMT
*
*   WRITE ZAP STEPS
*
NG3      EQU   *
         GET   UT1,UBER
         PUT   JCLOUT,UBER
         B     NG3
ZAPEND   EQU   *
*
*   WRITE IEHPROGM STEP
*
         GET   UT2,UBER       READ SCRATCH STMT
         CLC   UBER(9),=C' SCRATCH '  ANY SCRATCH STMT PRESENT
         BNE   SCREND  IF NO BYPASS SCR STEP CREATION
         PUT   JCLOUT,JCLTAB2   WRITE EXEC STMT
         PUT   JCLOUT,JCLTAB2+80   WRITE SYSPRINT DD STMT
         LA    R7,SCRVOLT   LOAD ADDR OF SCRATCH VOLUME TABLE
         ZAP   DDNR,=P'1'  INIT DD STMT NUMBER
NG7      EQU   *
         UNPK  JCLTAB2+164(2),DDNR    DD STMT NUMBER TO DD STMT
         OI    JCLTAB2+165,X'F0'    CLEAR SIGN
         MVC   JCT2VOL,0(R7)    VOLUME SERIAL NUMBER
         MVC   JCT2VOL+12(6),7(R7)      DEVICE TYPE
         PUT   JCLOUT,JCLTAB2+160    WRITE VOLUME DD STATEMENT
         CLI   13(R7),X'FF'          TEST FOR END OF TABLE
         BE    NG5
         LA    R7,13(R7)      INCREASE INDEX TO GET NEXT ENTRY
         AP    DDNR,=P'1'      INCREASE DD STMT NUMBER
         B     NG7
NG5      EQU   *
         PUT   JCLOUT,UBER    WRITE IEHPROGM CONTROL STMTS
         GET   UT2,UBER       READ NEXT CONTROL STMT
         B     NG5
SCREND   EQU   *
         MVC   MBER,MBER-1   CLEAR MESSAGE AREA
         MVC   MBER(32),=C'1 ***  END OF  V M P .   RC = 00'
         PUT   MSG,MBER
         CLOSE (UT1,,UT2,,JCLIN,,JCLOUT,,MSG,,INDCB)
         XR    R15,R15
         ERET  RC=(15)
         EJECT
**********************************************
*                                            *
*       E R R O R   R O U T I N E S          *
*                                            *
**********************************************
         SPACE
*   PARAMETER ERROR
FEHLPRM  EQU   *
         MVC   MBER,MBER-1
         MVC MBER(22),=C'1 -RC- PARAMETER ERROR'
FEHL1    EQU   *
         MVC   MBER+3(2),REASON   REASON CODE
         PUT   MSG,MBER       WRITE MESSAGE
         ABEND 0001,DUMP
*
*   VOLUME NOT MOUNTED
FEHLVNM  EQU   *
         MVC   MBER,MBER-1
         MVC   MBER(32),=C'1 -RC- VOLUME        NOT MOUNTED'
         MVC   MBER+14(6),VOL     VOLUME SERIAL NUMBER
         B     FEHL1
*
*   INCORRECT FORM ID
*
FEHLIFID EQU   *
         MVC   MBER,MBER-1   CLEAR MESSAGE AREA
         MVC   MBER(24),=C'1 -RC- INCORRECT FORM ID'
         B     FEHL1
*
*   PERMANENT I/O ERROR
*
FEHLPERM EQU   *
         MVC   MBER,MBER-1    CLEAR MESSAGE AREA
         MVC   MBER(34),=C'1 -RC- PERMANENT I/O ERROR ON VOL '
         MVC   MBER+34(6),VOL    VOLUME SERIAL NUMBER
         B     FEHL1
*
*    INVALID WORKAREA POINTER
*
FEHLIWAP EQU   *
         MVC   MBER,MBER-1
         MVC   MBER(31),=C'1 -RC- INVALID WORKAREA POINTER'
         B     FEHL1
*
*   DSNAME NOT FOUND
*
FEHLDSN  EQU   *
         MVC   MBER,MBER-1      CLEAR MESSAGE AREA
         MVC   MBER(29),=C'1 -RC- DSNAME NOT FOUND. DSN='
         MVC   MBER+29(44),DSN
         B     FEHL1
*
*   NEW NAME ALREADY PRESENT
*
FEHLREN  EQU   *
         MVC   MBER,MBER-1    CLEAR MESSAGE AREA
         MVC   MBER(37),=C'1 -RC- NEW NAME ALREADY PRESENT. DSN='
         MVC   MBER+37(44),NEW
         B     FEHL1
*
*  WRONG VOL SER OR MORE THAN 16 VOLUMES
*
FEHLVOL  EQU   *
         MVC   MBER,MBER-1    CLEAR MESSAGE AREA
         MVC   MBER(38),=C'1 -RC- WRONG VOL OR MORE THAN 16 VOL''S'
         B     FEHL1
*
*   FORMAT 4 DSCB ERROR
*
FEHLF4   EQU   *
         MVC   DSN,=CL44'FORMAT4.DSCB'
         B     *(R15)
         B     FEHLVNM        VOLUME NOT MOUNTED
         B     FEHLDSN        DSNAME NOT FOUND
         B     FEHLPERM       PERMANENT I/O ERROR
         B     FEHLIFID       INCORRECT FORMAT ID
         B     FEHLIWAP       INVALID WORKAREA POINTER
*
*   CONVERSION ERROR IN ZAP CREATION ROUTINE
*
FEHLCONV EQU   *
         MVC   MBER,MBER-1    CLEAR MESSAGE AREA
         MVC   MBER(36),=C'1 -RC- CONVERSION ERROR IN ZAP ROUT.'
         B     FEHL1
*
*   INVALID OPERATION
*
FEHLOP   EQU   *
         MVC   MBER,MBER-1    CLEAR MESSAGE AREA
         MVC   MBER(29),=C'1 -RC- INVALID OPERATION. OP='
         MVC   MBER+29(3),OPER
         B     FEHL1
         EJECT
************************************
*                                  *
*    D E F I N I T I O N S         *
*                                  *
************************************
         SPACE
SAVE     DS    18F            SAVE AREA
REG1SAVE DS    F              PARM REG SAVE FIELD
RVTOCADR DS    F              ENTRY POINT ADDRESS OF READVTOC ROUT
VOLADDR  DC    A(VOL)         ADDRESS OF VOLUME SERIAL NUMBER
DISKAADR DC    A(DISKADDR)    ADDRESS OF DSCB ADDRESS
WAADDR   DC    A(DSCBAREA)    ADDRESS OF DSCB WORKAREA
ABSTRKA  DC    A(ABSTRK)      ADDRESS OF ABSOLUTE TRACK ADDRESS
NULLP    DC    A(NULLPF)      ADDRESS OF DUMMY PARMFIELD
PRM2ADDR DC    A(PRM2LNG)     ADDRESS OF 2ND PARMFIELD
*
*  PARAMETER VECTOR TABLE (PVT)
*
PVT      EQU   *
         DC    A(OPER)        OPERATION
         DC    F'3'           MAX LENGTH
         DC    A(VOL)         VOLUME SERIAL NUMBER
         DC    F'13'          MAX LENGTH
         DC    A(DSN)         DSNAME
         DC    F'44'          MAX LENGTH
         DC    A(NEW)         NEW NAME
         DC    F'44'          MAX LENGTH
         DC    X'FF'          END OF PARAMETER VECTOR TABLE
*
LNG      DS    H              TOTAL LENGTH OF DATA (ZAP)
LNGS     DS    H              TOTAL LENGTH OF DATA, SAVED
LNGC     DS    H              CURRENT DATA LENGTH (MAX FOR VER/REP )
LNGU     DS    H              MAXIMUM DATA LENGTH FOR CONVERT TO HEX
LOC      DS    H              LOCATION OF DATA TO BE MODIFIED
LOCS     DS    H              LOCATION, SAVED
NULLPF   DC    H'0'           DUMMY PARMFIELD
PRM2LNG  DS    H              2ND PARMFIELD
         DS    CL160
         DC    C' '           BLANK BYTE
UBER     DS    CL80           OUTPUT AREA
         DC    C' '           BLANK BYTE
MBER     DS    CL133          MESSAGE AREA
OPER     DS    CL3            OPERATION FIELD
VOL      DS    CL13           VOLUME SERIAL AND DEVICE TYPE
DSN      DS    CL44           DATASET NAME
NEW      DS    CL44           NEW NAME
INDIC    DS    C              INICATOR BYTE
*      ..1. ....    SYSIN OPEN
*      ...1 ....    'NEWNAME' PARAMETER PRESENT
*      .... 1...    'DSNAME' PARAMETER PRESENT
*      .... .1..    'VOLUME' PARAMETER PRESENT
*      .... ..1.    RENAME SPECIFIED
*      .... ...1    SCRATCH SPECIFIED
*
INBER    DS    CL80           INPUT AREA
DSCBAREA DS    CL140          DSCB WORKAREA
DSNAME   DS    CL44           DSNAME WORKFIELD
CCHHR    DS    CL5            DISK ADDR OF DATA TO BE MODIFIED
VAL      DS    CL44           OLD DATA
NEWVAL   DS    CL44           NEW DATA
DISKADDR DS    CL5            DISK ADDR OF DSCB
ABSTRK   DS    CL5            ABS TRACK ADDR
STEPNR   DS    CL2            STEP NUMBER (ZAP STEPS)
DDNR     DS    CL2            DD STATEMENT NUMBER (IEHPROGM STEP)
VOLC     DS    CL6            VOL SER COMPARE FIELD
REASON   DS    CL2            REASON CODE
*
*
UNPACK   UNPK  0(0,R9),0(0,R8)
TRANSL   TR    0(0,R9),TTRANS-240
*
*
SEARCHL  CAMLST SEARCH,DSNAME,VOL,DSCBAREA
*
*
*  T A B L E S
*
*  VOLUME TABLE
VOLTAB   EQU   *
         DC    C'RESI00'
         DC    C'SPOOLA'
         DC    C'RSTORE'
         DC    10CL6'......'
         DC    6X'FF'
*
*  DSNAME TABLE
DSNTABLE EQU   *
         DC    C'Z9999992'
         DC    C'Z9999994'
         DC    C'Z9999996'
         DC    C'VSAMDSET'
         DC    8X'FF'
*
*  SCRATCH VOLUME TABLE
SCRVOLT  EQU   *
         DC    X'FF'
         DS    12C
         DS    15CL13
         DC    13X'FF'
*
*  TRANSLATE TABLE FOR HEX CONVERSION
TTRANS   EQU   *
         DC    X'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'
*
*  COMMA TEST TABLE
TKOMMA   EQU   *
         DC    107X'00'
         DC    X'FF'
         DC    148X'00'
*
*  BLANK TEST TABLE
TBL      EQU   *
         DC    64X'00'
         DC    X'FF'
         DC    191X'00'
*
*  J O B   C O N T R O L   T A B L E
*
JCLTAB   DC    CL80'//ZAP00 EXEC PGM=AMASPZAP,COND=(0,NE)'
         DC    CL80'//SYSPRINT DD SYSOUT=*'
         DC    C'//SYSLIB DD DSN=FORMAT4.DSCB,DISP=SHR,VOL=SER='
JCTVOL   DS    CL6
         DC    CL28',UNIT='
         DC    X'FF'
JCLTAB2  DC    CL80'//SCR EXEC PGM=IEHPROGM,COND=(0,NE)'
         DC    CL80'//SYSPRINT DD SYSOUT=*'
         DC    C'//DD00 DD DISP=OLD,VOL=SER='
JCT2VOL  DS    CL6
         DC    CL47',UNIT='
JOBSTMT  DC    CL80'//T02040VC JOB (12,S,51147,97811,0000),''N'','
         DC    CL80'//             CLASS=M,MSGCLASS=C'
JOBPRM   DC    CL80'/*JOBPARM S=*'
*
*  USER ATTRIBUTES TABLE
*
TUA      EQU   *
         DC    C'9781151147HNPW'
         DS    3CL14
         DC    X'FF'
         EJECT
*****************************************
*                                       *
* D A T A   C O N T R O L   B L O C K S *
*                                       *
*****************************************
         SPACE
UT1      DCB   DDNAME=SYSUT1,DSORG=PS,MACRF=(GM,PM),EODAD=ZAPEND,      *
               RECFM=F,BLKSIZE=80,LRECL=80
UT2      DCB   DDNAME=SYSUT2,DSORG=PS,MACRF=(GM,PM),EODAD=SCREND,      *
               RECFM=F,BLKSIZE=80,LRECL=80
JCLIN    DCB   DDNAME=JCLIN,DSORG=PS,MACRF=GM,EODAD=JCLEND,            *
               RECFM=F,LRECL=80
JCLOUT   DCB   DSORG=PS,MACRF=PM,RECFM=F,LRECL=80,BLKSIZE=80,          *
               DDNAME=JCLOUT
MSG      DCB   DSORG=PS,MACRF=PM,RECFM=FA,LRECL=133,BLKSIZE=133,   *****
               DDNAME=MSG
INDCB    DCB   DDNAME=IN,DSORG=PS,MACRF=GM,EODAD=SUBMIT,               *
               RECFM=F,LRECL=80
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END   VMP
*/* AN FOLGENDEN TAGEN WURDE DAS PROGRAMM GETESTET */
*/* NEUERSTELLUNG   22. DEZ 1975   LEVEL    */
*/* AENDERUNG       15. JAN 1976   LEVEL    */
*/* NEUERSTELLUNG   19. MAR 1976   LEVEL    */
