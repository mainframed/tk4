./ ADD NAME=REG
         MACRO
         REG
*
*        REGISTER EQUATES
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
RA       EQU   R10
R11      EQU   11
RB       EQU   R11
R12      EQU   12
RC       EQU   R12
R13      EQU   13
RD       EQU   R13
R14      EQU   14
RE       EQU   R14
R15      EQU   15
RF       EQU   R15
         SPACE 2
         MEND
./ ADD NAME=TIOTSCAN
         MACRO
&NM      TIOTSCAN  &DDNM,&JOBNM,&PROCNM,&STEPNM,&TIOT=
.*  TIOTSCAN INFORMES ABOUT EXISTENCE OF DDNAME IN THE TIOT.
.*  WHEN ASKD,THIS MACRO CAN EXTRACT JOBNAME,PROCNAME,STEPNAME
.*  FROM TIOT AND STORE THEM IN THE OUTSIDE OF MACRO DEFINIED FIELDS
.*  THE TIOT ADDRESS MAY BE SPECIFIED IN A FULLWORD,
.*  WHEN MACRO EXTRACT USED BEFORE.
.*  &DDNAME-THE ADDRESS OF IT MAY BE SPECIFIED IN THE FORM:
.*          FULLWORD OR (REGISTER)
.*  &JOBNAME-THE ADDRESS OF THE ASSIGNED FIELD MUST BE SPECIFIED IN
.*           THE FORM:FULLWORD OR (REGISTER) OR DISPLACEMENT(REGISTER)
.*  THE SAME FOR &PROCNAME AND &STEPNAME.
         LCLA  &L
         LCLB  &DN,&JN,&PN,&SN,&COUNT,&CN,&TI
         LCLC  &GNAME,&GNAME1,&GNAME2,&REG,&FELD,&SYM,&NHM
&GNAME   SETC  'IHB'.'&SYSNDX'
&GNAME1  SETC  '&GNAME'.'A'
&GNAME2  SETC  '&GNAME'.'E'
         AIF   (T'&NM EQ 'O').PEDR
&NHM     SETC  '&NM'
&NHM     EQU   *
.PEDR    AIF   (T'&DDNM EQ 'O').ERROR
&DN      SETB  (1)
         SR    0,0           CLEAN  REG
         AIF   ('&DDNM'(1,1) NE '(').LOAD
         LR    1,&DDNM       LOAD A(DDNAME)
         AGO   .ERROR
.LOAD    LA    1,&DDNM       LOAD  A(DDNAME)
         AGO   .ERROR
.LAOP    AIF   (T'&TIOT EQ 'O').NFND
&TI      SETB  (1)
         L     14,&TIOT      LOAD A(TIOT)
         AIF   (NOT &DN).LOOK
.NFND    ANOP
         AIF   (&TI).LAST
         L     14,16         A(CVT)
         L     14,0(14)      A(CVTTCB)
         L     14,4(14)      A(CURRTCB)
         L     14,12(14)     A(TIOT)
         AIF   (NOT &DN).LOOK
.LAST    LA    15,24(14)     FIRST  TIOT  ENTRY
&GNAME1  CLC   4(8,15),0(1)  DDNAME  EQUAL?
         BE    &GNAME        YES,RETURN
         IC    0,0(15)       GET ENTRY LENGHT
         LTR   0,0           LAST  ONE
         BZ    &GNAME2       YES,RETURN WITH CODE 0
         AR    15,0          NO,DO NEXT ONE
         B     &GNAME1
&GNAME2  SR    15,15         CLEAR REG
&GNAME   EQU   *
.ERROR   ANOP
         AIF   (&CN).LOOK
&CN      SETB  (1)
         AIF   (T'&JOBNM NE 'O').PAL1
.XP      AIF   (T'&PROCNM NE 'O').PAL2
.XS      AIF   (T'&STEPNM NE 'O').PAL3
         AIF   (&DN OR &JN OR &PN).LAOP
         MNOTE 12,'ALL NAMES OMITTED'
         MEXIT
.PAL1    ANOP
&JN      SETB  (1)
&COUNT   SETB  (1)
         AGO   .XP
.PAL2    ANOP
&PN      SETB  (1)
&COUNT   SETB  (1)
         AGO   .XS
.PAL3    ANOP
&SN      SETB  (1)
&COUNT   SETB  (1)
         AGO   .LAOP
.LOOK    AIF   (NOT &JN).PROC
         AIF   (T'&JOBNM EQ 'U').POX
         AIF   ('&JOBNM'(1,1) EQ '(').POLX
&SYM     SETC  '&JOBNM'
         AIF   (T'&JOBNM EQ 'N').ERR
         MVC   &JOBNM,0(14)  MOVE  JOBNAME
         AGO   .PROC
.POLX    ANOP
&REG     SETC  '&JOBNM(1)'
         MVC   0(8,&REG),0(14)      MOVE  JOBNAME
         AGO   .PROC
.POX     ANOP
&L       SETA  K'&JOBNM
.KLAM    AIF   ('&JOBNM'(&L,1) EQ '(').FND
&L       SETA  &L-1
         AGO   .KLAM
.FND     ANOP
&FELD    SETC  '&JOBNM'(1,&L).'8,'
&FELD    SETC  '&FELD'.'&JOBNM'(&L+1,K'&JOBNM-&L)
         MVC   &FELD,0(14)   MOVE  JOBNAME
.PROC    AIF   (NOT &PN).STEP
         AIF   (T'&PROCNM EQ 'U').POY
         AIF   ('&PROCNM'(1,1) EQ '(').POLY
&SYM     SETC  '&PROCNM'
         AIF   (T'&PROCNM EQ 'N').ERR
         MVC   &PROCNM,8(14)      MOVE PROCNAME
         AGO   .STEP
.POLY    ANOP
&REG     SETC  '&PROCNM(1)'
         MVC   0(8,&REG),8(14)        MOVE  PROCNAME
         AGO   .STEP
.POY     ANOP
&L       SETA  K'&PROCNM
.KLM     AIF   ('&PROCNM'(&L,1) EQ '(').FOND
&L       SETA  &L-1
         AGO   .KLM
.FOND    ANOP
&FELD    SETC  '&PROCNM'(1,&L).'8,'
&FELD    SETC  '&FELD'.'&PROCNM'(&L+1,K'&PROCNM-&L)
         MVC   &FELD,8(14)           MOVE PROCNAME
.STEP    AIF   (NOT &SN).ENDO
         AIF   (T'&STEPNM EQ 'U').POZ
         AIF   ('&STEPNM'(1,1) EQ '(').POLZ
&SYM     SETC  '&STEPNM'
         AIF   (T'&STEPNM EQ 'N').ERR
         MVC   &STEPNM,16(14)  MOVE  STEPNAME
         AGO   .ENDO
.POLZ    ANOP
&REG     SETC  '&STEPNM(1)'
         MVC   0(8,&REG),16(14)       MOVE  STEPNAME
         AGO   .ENDO
.POZ     ANOP
&L       SETA  K'&STEPNM
.KLAME   AIF   ('&STEPNM'(&L,1) EQ '(').FOUND
&L       SETA  &L-1
         AGO   .KLAME
.FOUND   ANOP
&FELD    SETC  '&STEPNM'(1,&L).'8,'
&FELD    SETC  '&FELD'.'&STEPNM'(&L+1,K'&STEPNM-&L)
         MVC   &FELD,16(14)            MOVE  STEPNAME
         AGO   .ENDO
.ERR     ANOP
         MNOTE 8,'INCORRECT  SYMBOL &SYM'
.ENDO    MEND
./ ADD NAME=XSAVE
         MACRO
&SYM     XSAVE &BASE,&AREA,&ID,&LEN,&SP=0,&LOC=
*        LAST CHANGE  8. 5. 1984           H. FRANZ
.*
.*                 EXTENDED SAVE MACRO
.*                 ASSUMES ENTRYPOINT ADDRESS IN REGISTER 15
.*                 SAVES REGISTERS 14 THROUGH 12
.*                 LOADS BASE REGISTER AND CHAINES SAVEAREAS
.*                 MAY PRODUCE REENTRANT CODE
.*
         GBLB  &XSAVSA,&XSAVNSA,&XSAV
         GBLC  &XSAVSP,&XSAVNAM
         LCLA  &OFFSET,&BASEOFF,&LLID,&DISPL,&I
         LCLA  &NREG,&REGIX,&LCH
         LCLC  &NM,&REG,&BL
         LCLC  &PREV,&IT
&XSAV    SETB  (1)
&XSAVSA  SETB  (T'&AREA NE 'O')
&XSAVNSA SETB  ('&AREA' EQ '0')
&XSAVSP  SETC  '&SP'
&XSAVNAM SETC  '&SYM'
&OFFSET  SETA  4
&NM      SETC  '&SYM'
&REG     SETC  '15'
&BL      SETC  ''
&IT      SETC  '&ID'
         AIF   (T'&SP EQ 'N').SPFIX
         MNOTE 8,'SUBPOOL NUMBER NOT A SELF-DEFINING TERM'
         MEXIT
.SPFIX   ANOP
         AIF   ('&SP' NE '0' AND T'&AREA NE 'O').SPERR
.NOERR   ANOP
         AIF   (T'&ID EQ 'O').NOID
         AIF   ('&ID' NE '*').SETLL
&I       SETA  8
         AIF   ('&NM' EQ '').SECT
&IT      SETC  '&NM'.'          '
         AGO   .FINDL
.SECT    ANOP
&IT      SETC  '&SYSECT'.'          '
.FINDL   ANOP
         AIF   ('&IT'(&I,1) NE ' ').IDEND
&I       SETA  &I-1
         AIF   (&I NE 0).FINDL
&I       SETA  5
&IT      SETC  'XSAVE'
         AGO   .XID
.IDEND   ANOP
&IT      SETC  '&IT'(1,&I)
.XID     ANOP
&LLID    SETA  &I
         AGO   .ODDEV
.SETLL   ANOP
&LLID    SETA  K'&ID
.ODDEV   ANOP
         AIF   (&LLID NE &LLID/2*2).OVBL
&BL      SETC  ' '
&LLID    SETA  &LLID+1   BLANK
.OVBL    ANOP
&LLID    SETA  &LLID+16  DATE AND TIME
&DISPL   SETA  4+1+&LLID   B,X,(DATE,ID)
&NM      B     &DISPL.(0,15)
         DC    AL1(&LLID)
         AIF   ('&ID' NE '*' AND '&ID' NE '').IDDEF
         DC    C'&IT&BL'     PGM-ID.
         AGO   .SDATE
.IDDEF   ANOP
         DC    C'&ID&BL'     PGM-ID.
.SDATE   ANOP
         DC    C'&SYSDATE'       COMPILE DATE
         DC    C' '
         DC    CL7'&SYSTIME'     COMPILE TIME
&OFFSET  SETA  4+4+1+&LLID   B,STM,X,(DATE,ID)
&NM      SETC  ''
.NOID    ANOP
&NM      STM   14,12,12(13)            SAVE REGS
         AIF   (T'&BASE EQ 'O').NOBASE
         AIF   ('&BASE'(1,1) NE '(').LOAD
&REGIX   SETA  1
&NREG    SETA  N'&BASE
&REG     SETC  '&BASE(&REGIX)'
         LR    &REG,15
&OFFSET  SETA  &OFFSET+2
.LOOP    ANOP
         USING *-&OFFSET+&BASEOFF,&REG
&REGIX   SETA  &REGIX+1
         AIF   ('&REGIX' GT '&NREG').SETUSE
&PREV    SETC  '&REG'
&REG     SETC  '&BASE(&REGIX)'
         LA    &REG,X'FFF'
         LA    &REG,1(&REG,&PREV)
&OFFSET  SETA  &OFFSET+8
&BASEOFF SETA  &BASEOFF+4096
         AGO   .LOOP
.LOAD    LR    &BASE,15                LOAD BASE REG
&OFFSET  SETA  &OFFSET+2
&REG     SETC  '&BASE'
.NOBASE  ANOP
         USING *-&OFFSET,&REG
.SETUSE  ANOP
         AIF   (T'&AREA NE 'O').NORENT
         CNOP  0,4
         BAL   1,*+8         SKIP DEFINITION
         AIF   (T'&LEN NE 'O').SPEC
         DC    A(72)       LENGTH FOR 1 SAVE AREA
         AGO   .LOAD0
.SPEC    DC    A(&LEN)     SPECIFIED LENGTH INCLUDING SAVE AREA
.LOAD0   L     0,0(,1)       GET R0 READY FOR GETMAIN
         AGO   .COMP
.SEELEN  ANOP
         AIF   (T'&LEN NE 'O').NOTZERO
         LA    0,72                    GET LENGTH
         AGO   .COMP
.NOTZERO ANOP
         L     0,=A(&LEN)             GET LENGTH
.COMP    ANOP
         AIF   (T'&LOC EQ 'O').NORMGM
         AIF   (T'&SP NE 'O').SP1
         GETMAIN   RU,LV=(0),LOC=&LOC
         AGO   .GMOK
.SP1   ANOP
         GETMAIN   RU,LV=(0),LOC=&LOC,SP=&SP
         AGO   .GMOK
.NORMGM  ANOP
         AIF   (T'&SP NE 'O').SP2
         GETMAIN   RU,LV=(0)
         AGO   .GMOK
.SP2     ANOP
         GETMAIN   RU,LV=(0),SP=&SP
.GMOK    ANOP
         XC    0(3*4,1),0(1)           ZERO CHAIN ADDRESSES
         AIF   (T'&LEN NE 'O').GET
         LA    0,72                    GET LENGTH
         AGO   .NOSTH
.GET     ANOP
         L     0,=A(&LEN)              GET LENGTH
.NOSTH   ANOP
         STH   0,2(1)                  STORE LENGTH
         AGO   .COM
.NORENT  ANOP
         AIF   ('&AREA' NE '0').SVA
         MEXIT
.SVA     ANOP
         LA    1,&AREA                 GET SA ADDR
.COM     ST    1,8(0,13)               SA DOWN CHAIN
         ST    13,4(0,1)               SA UP CHAIN
         LR    13,1                    LOAD SA REG
         L     1,4(0,13)               GET HIGH SA
         LM    0,1,20(1)               RESTORE REGS 0 AND 1
         AIF   (T'&AREA NE 'O').DBL
         MEXIT
.DBL     AIF   (T'&LEN EQ 'O').TEST
         MNOTE 4,'SAVE AREA ID AND LENGTH MUTUALLY EXCLUSIVE, LENGTH IG*
               NORED'
.TEST    AIF   (T'&AREA EQ 'U').DEFINE
         MEXIT
.SPERR   ANOP
         MNOTE 4,'SUBPOOL SPECIFICATION INVALID WITHOUT GETMAIN FUNCTIO*
               N, IGNORED'
         AGO   .NOERR
.DEFINE  B     &AREA+72                BRANCH AROUND SAVEAREA
&AREA    DC    18F'0'                  SAVEAREA
         MEND
./ ADD NAME=XRETURN
** TITLE   BASF STANDARD RETURN
** OWNER   128.FRANZ
** LCHNG   11/01/81 07:39:06   Z227128 FRANZ
         MACRO
&SYM     XRETURN &RC,&MODE,&SP=0
.*
.*                 EXTENDED RETURN MACRO
.*                 RESTORES REGISTERS
.*                 MAY PROVIDE RETURNCODE
.*
         GBLB  &XSAVSA,&XSAVNSA,&XSAV
         GBLC  &XSAVSP,&XSAVNAM
         LCLA  &C
         LCLB  &NC,&CF,&OM,&OS
         LCLC  &R,&NM,&XMODE,&XSP
&OM      SETB  (T'&MODE NE 'O')
&XMODE   SETC  ''
         AIF   (T'&MODE EQ 'O' OR '&MODE' EQ 'R'                       *
                               OR '&MODE' EQ '0').CONT
         MNOTE 8,'UNKNOWN OPERAND'
         MEXIT
.CONT    ANOP
         AIF   (T'&SP EQ 'N').SPFIX
         MNOTE 8,'SUBPOOL NUMBER NOT A SELF-DEFINING TERM'
         MEXIT
.SPFIX   ANOP
         AIF   ('&SP' NE '0' AND '&MODE' NE 'R').SPERR
.XSA     ANOP
         AIF   (NOT &XSAV).SETS
.SETMODE ANOP
         AIF   (&OM OR '&SP' NE '0').TESTSP
&OS      SETB  (1)
         AIF   (NOT &XSAVNSA).SETMODA
&XMODE   SETC  '0'
         MNOTE *,'NO MODE SPECIFICATION, 0 ASSUMED'
         AGO   .TESTSP
.SETMODA ANOP
         AIF   (&XSAVSA).TESTSP
&XMODE   SETC  'R'
         MNOTE *,'NO MODE SPECIFICATION, R ASSUMED'
.TESTSP  ANOP
         AIF   ('&XSAVSP' EQ '&SP').BRANCH
         AIF   ('&SP' EQ '0').SETSP
         MNOTE 8,'SUBPOOL NUMBER &SP NOT EQUAL SUBPOOL NUMBER &XSAVSP I*
               N XSAVE &XSAVNAM'
         MEXIT
.SETSP   ANOP
         MNOTE *,'SUBPOOL NUMBER &XSAVSP FROM XSAVE &XSAVNAM ASSUMED'
.BRANCH  ANOP
&XSP     SETC  '&XSAVSP'
         AIF   (&OS).SETM
.TESTSVA ANOP
         AIF   (&XSAVNSA).TESTMOD
         AIF   (&XSAVSA AND T'&MODE EQ 'O').SETM
         AIF   (NOT &XSAVSA AND '&MODE' EQ 'R').SETM
         AGO   .ERRMODE
.TESTMOD ANOP
         AIF   ('&MODE' EQ '0').SETM
.ERRMODE ANOP
         MNOTE 8,'MODE SPECIFICATION INVALID WITH REGARD TO SAVE AREA S*
               PECIFICATION IN XSAVE &XSAVNAM'
         MEXIT
.SETS    ANOP
&XSP     SETC  '&SP'
.SETM    ANOP
&XSAV    SETB  (0)
         AIF   ('&XMODE' NE '').NOERR
&XMODE   SETC  '&MODE'
.NOERR   ANOP
&NM      SETC  '&SYM'
         AIF   (T'&RC NE 'O').CODE
&NC      SETB  (1)
         AGO   .NOCODE
.CODE    ANOP
&R       SETC  '15'
         AIF   ('&RC'(1,1) EQ '(').REG
         AIF   (T'&RC EQ 'N').FIX
&NM      L     15,&RC                  LOAD CODE
&NM      SETC  ''
         AGO   .NOCODE
.FIX     ANOP
&CF      SETB  (1)
         AGO   .NOCODE
.REG     ANOP
&R       SETC  '&RC'(2,K'&RC-2)
.NOCODE  ANOP
         AIF   ('&XMODE' EQ '0').NSVA
&NM      L     13,4(0,13)              GET HIGH SA ADDR
&NM      SETC  ''
.NSVA    ANOP
         AIF   (&NC OR &CF).NOSTORE
&NM      ST    &R,16(0,13)             STORE CODE
.NOSTORE ANOP
         AIF   ('&XMODE' NE 'R').NORENT
         L     1,8(0,13)               GET LOW SA ADDR
         XR    0,0
         ICM   0,3,2(1)                GET LENGTH
         AIF   ('&SP' NE '0').SP1
         FREEMAIN  RU,LV=(0),A=(1)
         AGO   .NORENT
.SP1     ANOP
         FREEMAIN RU,LV=(0),A=(1),SP=&SP
.NORENT  LM    14,12,12(13)            RESTORE REGS
         AIF   (NOT &CF).EXIT
         LA    15,&RC                  LOAD CODE
&C       SETA  &RC
         AIF   (&C/4*4 EQ &C).EXIT
         MNOTE 0,'UNUSUAL CODE'
.EXIT    MVI   12(13),X'FF'            FORTRAN REQUIREMENT
         SPM   14                      RESTORE PGM MASK AND CC
         BR    14
         MEXIT
.SPERR   ANOP
         MNOTE 4,'SUBPOOL SPECIFICATION INVALID WITHOUT FREEMAIN FUNCTI*
               ON, IGNORED'
         AGO   .XSA
         MEND
