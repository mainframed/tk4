./ ADD NAME=ZLOG
PROC 1 PRINT CLASS(T) Q(TSL)
   CONTROL NOMSG,MAIN
   FREE F(SYSIN,SYSPRINT,SYSUT1,SYSUT2)
   ALLOC F(SYSIN) DUMMY
   ALLOC F(SYSPRINT) DUMMY
   ALLOC F(SYSUT1) DA('&Q..LOG#&PRINT.') SHR
   ALLOC F(SYSUT2) SYSOUT SP(10,15) TR
   WRITE LOG009I LOGDATA WILL BE MOVED TO SYSOUT=&CLASS
   CALL 'SYS1.LINKLIB(IEBGENER)'
   FREE F(SYSIN,SYSPRINT,SYSUT1) DA('SYS1.LINKLIB')
   FREE F(SYSUT2) SYSOUT(&CLASS.)
   ALLOC F(SYSIN) DA(*)
   ALLOC F(SYSPRINT) DA(*)
   DEL '&Q..LOG#&PRINT.'
   SET RC = &LASTCC
   IF &RC = 0 THEN GOTO ENDE
   WRITE LOG012I &Q..LOG#&PRINT NOT DELETED, RC &STR(=) &RC
ENDE: +
END
./ ADD NAME=WLOG
PROC 1 DEL Q(TSL)
   CONTROL NOMSG,MAIN
   DEL '&Q..LOG#&DEL.'
   IF &LASTCC ^= 0 THEN GOTO NODEL
   WRITE LOG012I &Q..LOG#&DEL DELETED
   GOTO ENDE
NODEL: +
   WRITE LOG012I &Q..LOG#&DEL NOT DELETED, RC &STR(=) &MAXCC
ENDE: +
END
./ ADD NAME=ULOG
PROC 0
   WRITE LOG010I LOGON/LOGOFF IGNORED - HARDCOPY-LOG IN PROCESS
   WRITE LOG011I ENTER 'LOG DEL','LOG EDIT' OR 'LOG PRINT' TO STOP +
HARDCOPY-LOG
END
./ ADD NAME=SLOG
PROC 1 NAME Q(TSL)
   CONTROL NOMSG,MAIN
   DEL LOGDATA.TEXT
   FREE F(TSLOGIN,TSLOGOUT)
   ALLOC F(TSLOGIN) DA('&Q..LOG#&NAME.') SHR
   ALLOC F(TSLOGOUT) DA(LOGDATA.TEXT) NEW SP(5 5) TR
   CALL 'SYS1.TSOLOAD(SPTSO02)'
   FREE F(TSLOGIN,TSLOGOUT)
   DEL '&Q..LOG#&NAME.'
   WRITE LOG017I EDIT-DATASET 'LOGDATA.TEXT' CREATED
   EDIT LOGDATA TEXT
      VERIFY
      TOP
      L *
      BOTTOM
   END
END
./ ADD NAME=LOG
PROC 0
   WRITE LOG999I DER LOG-COMMAND IST MOMENTAN NICHT VERFUEGBAR
END
./ ADD NAME=RCODE
PROC 0
   WRITE RETURN-CODE ^= 0
END
./ ADD NAME=VREADY
PROC 0
   IF &SYSPCMD = EXEC THEN EXIT
   WRITE *** ERROR ***   NICHT IM READY-MODE
   EXIT QUIT
END
./ ADD NAME=FIRSTPR
PROC 0
   CONTROL NOMSG,MAIN
   PROF MSGID WTPMSG
   FREE F(SYSPROC)
   ERROR GOTO NOPROC
   ALLOC F(SYSPROC) DA(CMDPROC.CLIST,'TSO.CMDPROC.CLIST') SHR
   ERROR OFF
   %START
   GOTO ENDE
NOPROC: +
   ALLOC F(SYSPROC) DA('TSO.CMDPROC.CLIST') SHR
ENDE: +
END
./ ADD NAME=PF1PROC
PROC 0
WRITE DIE PFK-TASTEN KOENNEN AUCH AUSSERHALB EINER SPF-SESSION
WRITE BENUTZT WERDEN.
WRITE
WRITE FOLGENDE BEDEUTUNGEN SIND DEN EINZELNEN TASTEN ZUGEORDNET:
WRITE
WRITE       CNCL  = '?'
WRITE       PF1-9 = '%PF1PROC' - '%PF9PROC'
WRITE       PF10  = 'GO'
WRITE       PF11  = 'YES'
WRITE       PF12  = 'END'
WRITE
WRITE DEN PF1-9-TASTEN KANN DURCH ANLEGEN VON COMMAND-PROCEDURES MIT
WRITE DEN NAMEN 'PF1PROC' BIS 'PF9PROC' WAHLWEISE EIN BEDEUTUNG ZUGE=
WRITE ORDNET WERDEN.
WRITE
WRITE IST ALS 'SYSPROC'-DATASET DIE 'TSO.CMDPROC' ALLOCATED SO HABEN
WRITE DIE PF-KEYS FOLGENDE BEDEUTUNGEN:
WRITE
WRITE       PF1 = INFORMATIONEN UEBER PFK
WRITE       PF2 = LIBSAVE * OUT
WRITE       PF3 = LISTC
WRITE       PF4 = DDSN
WRITE       PF5 = UTILITY-CALL P(IEHPROGM)
WRITE       PF6 = STATUS
WRITE       PF7 = PROF LIST
WRITE       PF8 = TIME
WRITE       PF9 = RE-ALLOCATE SYSPROC
WRITE
WRITE DURCH ANLAGE EINES '&SYSPREF..CMDPROC.CLIST'-DATASETS UND ENT=
WRITE SPRECHENDE 'SYSPROC'-ZUORDNUNG (PF9) KOENNEN DIE BEDEUTUNGEN
WRITE USER-INDIVIDUELL GEAENDERT WERDEN.
WRITE IST EINE '&SYSPREF..CMDPROC.CLIST'-DATEI VORHANDEN SO WIRD SIE   ×
WRITE BEREITS ZUR LOGON-ZEIT VOR DIE 'TSO.CMDPROC.CLIST' GEKETTET.   ×
WRITE AUSSERDEM WIRD IN DANN DIE PROCEDURE 'START' AUFGERUFEN, IN    ×
WRITE DER JEDER BENUTZER DIE COMMANDS ANGEBEN KANN, DIE ZU BEGINN    ×
WRITE JEDER SESSION AUFLAUFEN SOLLEN.                                ×
WRITE
WRITE       ×× LOG-, LOGON- BZW. LOGOFF-COMMANDS DUERFEN ××
WRITE       ×× NICHT UEBER PF-KEYS AUFGERUFEN WERDEN.    ××
WRITE       ×× DAS GLEICHE GILT FUER DEN SPF-COMMAND.    ××
WRITE
WRITE NATUERLICH WIRD UNTER SPF DIE BEDEUTUNG DER PFK-TASTEN NICHT
WRITE VERAENDERT.
END
./ ADD NAME=PF2PROC
PROC 0
   %VREADY
   CONTROL LIST
   LIBSAVE * OUT
END
./ ADD NAME=PF3PROC
PROC 0
   %VREADY
   CONTROL LIST
   LISTC
END
./ ADD NAME=PF4PROC
PROC 0
   %VREADY
   CONTROL LIST
   DDSN
END
./ ADD NAME=PF5PROC
PROC 0 PROGRAM(IEHPROGM)
   CONTROL NOFLUSH,PROMPT,NOLIST,MAIN
   ERROR DO
      WRITE *** ERROR ***
      WRITE LC MC SYSTIME  SYSDATE  NEST LASTCMDS
      WRITE &LASTCC  &MAXCC  &SYSTIME &SYSDATE &SYSNEST   &SYSPCMD +
/ &SYSSCMD
      EXIT
   END
   %VREADY
   WRITE UTILITY-CALL FOR &PROGRAM
   FREE F(SYSIN SYSPRINT)
   ALLOC F(SYSIN) DA(*)
   ALLOC F(SYSPRINT) DA(*)
   CALL 'SYS1.LINKLIB(&PROGRAM.)'
   WHEN SYSRC(NE 0) %RCODE
END
./ ADD NAME=PF6PROC
PROC 0
   %VREADY
   CONTROL LIST
   STATUS
END
./ ADD NAME=PF7PROC
PROC 0
   %VREADY
   CONTROL LIST
   PROF LIST
END
./ ADD NAME=PF8PROC
PROC 0
   %VREADY
   TIME
END
./ ADD NAME=PF9PROC
PROC 0 CDSNAME(CMDPROC.CLIST)
   CONTROL MAIN,NOMSG
   ERROR DO
      WRITE *** ERROR ***
      WRITE LC MC SYSTIME  SYSDATE  NEST LASTCMDS
      WRITE &LASTCC  &MAXCC  &SYSTIME &SYSDATE &SYSNEST   &SYSPCMD +
/ &SYSSCMD
      EXIT
   END
   %VREADY
   WRITE RE-ALLOCATION OF SYSPROC-DATASET
   FREE F(SYSPROC)
   CONTROL LIST
   ALLOC F(SYSPROC) SHR DA(&CDSNAME.,'TSO.CMDPROC')
END
