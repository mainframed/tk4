         TITLE ' COPY RESTORE DUMP FORMAT OS CATALOGS UNDER MVS'
MOVECVOL START
****************************************************************
*                                                              *
*   THIS PROGRAM COPIES DUMPS RESTORES AND FORMATS OS CATALOGS  *
*                                                              *
*   1. COPY   MOVECVOL COPIES OS CATALOGS FROM DISK TO DISK    *
*                                                              *
*   2. DUMP   MOVECVOL DUMPS OS CATALOGS TO SEQUENTIAL         *
*             DATA SETS (BACK UP)                              *
*                                                              *
*   3. RESTORE  MOVECVOL RESTORES A BACK UP COPY TO DISK.      *
*             SYSCTLG CAN EITHER BE A NEW DATA SET (LOAD OF    *
*             AN ENTIRE CATALOG) OR AN EXISTING CATALOG. IN    *
*             THE LATTER CASE THE BACK UP MUST BE A LOG        *
*             DATA SET CREATED BY MVSBLDG.                     *
*                                                              *
*   4. FORMAT MOVECVOL FORMATS A NEW CATALOG DATA SET.         *
*             COPY AND RESTORE INCLUDES THE FORMATTING FUNCTION*
*                                                              *
****************************************************************
         SPACE
         SAVE  (14,12)       SAVE REGISTERS
         BALR  R3,0          ESTABLISH ADDRESSABILITY
         USING *,3,4
NA0      L     R4,KBAS
         B     NA1
KBAS     DC    A(NA0+4096)
NA1      EQU   *
         ST    R1,REG1SV     SAVE PARM REG
         LA    R12,SAVE      ADDR OF OWN SAVE AREA
         ST    R12,8(R13)    AND STORE IT INTO CALLER'S SAVE AREA
         ST    R13,4(R12)    STORE CALLER'S SAVE AREA ADDR INTO OWN S A
         LR    R13,R12
         XC    RC,RC               CLEAR RETURN CODE
         XC    SWITCH,SWITCH       CLEAR INDICATOR BYTE
         XC    TRKCAP-2(4),TRKCAP-2  CLEAR TRACK CAPACITY FIELD
         OPEN  (MSG,OUTPUT)        OPEN MESSAGE DATA SET
         TIME  ERRET=FEHLTME       FETCH DATE AND TIME
         ST    R1,DATE
         ST    R0,TIME
*
*   GET PARAMETERS
*
         MVC   OPTFLD,=7C' '       CLEAR OPTION FIELD
         L     R1,REG1SV           RELOAD PARM REG
         L     R1,0(R1)
         LA    R7,2(R1)      POINT TO BEGIN OF PARM FIELD
         LH    R1,0(R1)      LENGTH OF PARM FIELD
         LTR   R1,R1
         BZ    FEHLPRM       ZERO LENGTH NOT ALLOWED
         CH    R1,=H'7'      TEST MAX LENGTH
         BH    FEHLPRM       PARM FIELD TOO LONG
         BCTR  R1,0          DECREASE LENGTH FOR EX
         EX    R1,MOVE1      MOVE OPTION TO OPTFLD
*
*   VALIDATION TEST
*
         CLC   OPTFLD,=CL7'COPY'
         BE    COPY         COPY FUNCTION
         CLC   OPTFLD,=CL7'DUMP'
         BE    DUMP         DUMP OPTION
         CLC   OPTFLD,=CL7'RESTORE'
         BE    RESTORE      RESTORE OPTION
         CLC   OPTFLD,=CL7'FORMAT'
         BE    FORMAT       FORMAT OPTION
         B     FEHLPRM      INVALID PARM FIELD
*
*   COPY SYSCTLG FROM DISK TO DISK
*
COPY     EQU   *
         OPEN  (CTLGIN,,CTLGC,OUTPUT)  OPEN OLD AND NEW CATALOG
         OI    SWITCH,X'11'      TURN ON OPEN BITS
         LA    R2,CTLGIN         DCB ADDR
         BAL   R10,UPENQ         ENQ SYSCTLG
         XC    BLOCKADR-1(4),BLOCKADR-1  ZERO RELATIVE BLOCK ADR
NA2      EQU   *
         LA    R2,CTLGIN         LOAD DCB ADDR
         BAL   R10,UPREAD        LINK TO READ ROUTINE
         BAL   R10,UPWRITEC      LINK TO WRITE ROUTINE
         L     R8,BLOCKADR-1     INCREASE REL BLOCK ADDR
         LA    R8,1(R8)
         ST    R8,BLOCKADR-1
         L     R9,WRRC           TEST WRITE REURN CODE
         CH    R9,=H'8'          RC 8 MEANS PRIMARY SPACE IS FILLED
         BNE   NA3               PRIMARY SPACE NOT YET FILLED
         C     R8,LASTBLK        PRIMARY SPACE FILLED. IF INPUT NOT
         BNH   FEHLSPC           FINISHED BRANCH TO ERROR
         B     NA31
NA3      EQU   *
         C     R8,LASTBLK        IS INPUT FINISHED ?
         BNH   NA2               IF NO BRANCH TO READ NEXT BLOCK
         BAL   R10,UPFORMAT      LINK TO FORMATTING ROUTINE
NA31     EQU   *
         CLOSE (CTLGIN,,CTLGC)   CLOSE CATALOG DATA SETS
         NI    SWITCH,X'EE'      CLEAR OPEN BITS
         B     NX1               BRANCH TO EXIT ROUTINE
*
*   DUMP SYSCTLG FROM DISK TO TAPE
*
DUMP     EQU   *
         OPEN  (CTLGIN,,TAPE,OUTPUT)  OPEN CATALOG AND TAPE
         OI    SWITCH,X'18'      SET OPEN BITS
         LA    R2,CTLGIN         DCB ADDR
         BAL   R10,UPENQ         ENQ SYSCTLG
         XC    BLOCKADR-1(4),BLOCKADR-1  CLEAR BLOCK ADDR
NA4      EQU   *
         LA    R2,CTLGIN         LOAD DCB ADDR
         BAL   R10,UPREAD        LINK TO READ ROUTINE
         L     R8,BLOCKADR-1     CONVERT REL BLOCK ADDR TO TTR
         SRDL  R8,32(0)
         D     R8,TRKCAP-2
         STH   R9,ATTR
         LA    R8,1(R8)
         STC   R8,ATTR+2
*  BUILD OUTPUT RECORD
         MVC   ASTAT,=C'DMP'    STATUS = DUMP
         MVC   AKEY,EKEY        KEY
         MVC   ABLOCK,EBER      CATALOG BLOCK
         MVC   ADATE,DATE       DATE
         MVC   ATIME,TIME       TIME
         MVC   ACOMM,=CL22' CATALOG BACK UP'
         PUT   TAPE,ABER        WRITE BLOCK
         L     R8,BLOCKADR-1    INCREASE RELATIVE BLOCK NUMBER
         LA    R8,1(R8)
         ST    R8,BLOCKADR-1
         C     R8,LASTBLK        END OF INPUT ?
         BNH   NA4               IF NO READ NEXT BLOCK
         CLOSE (CTLGIN,,TAPE)    CLOSE CATALOG AND TAPE
         NI    SWITCH,X'E7'      CLEAR OPEN BITS
         B     NX1               BRANCH TO EXIT ROUTINE
*
*   RESTORE SYSCLTG FROM TAPE TO DISK
*
RESTORE  EQU   *
         XC    VICEBLK,VICEBLK   CLEAR VICE SAVE AREA
         OPEN  TAPE              OPEN TAPE
         OI    SWITCH,X'08'      SET OPEN BIT
         GET   TAPE,ABER         READ FIRST RECORD
         CLC   ASTAT,=C'DMP'     TEST FOR STATUS.
         BNE   NA5               IF DUMP LINK TO FORMATTING ROUTINE
         BAL   R10,UPFORMAT
         CLOSE CTLGC             CLOSE FORMATTED CATALOG
         NI    SWITCH,X'FE'      CLEAR OPEN BIT
NA5      EQU   *
         OPEN  (CTLGD,UPDAT)     OPEN CATALOG FOR UPDATE
         OI    SWITCH,X'04'      SET OPEN BIT
         TM    SWITCH,X'02'      NEW SYSCTLG ?
         BO    NA6               YES
         LA    R2,CTLGD          NO. ENQ SYSCTLG
         BAL   R10,UPENQ
NA6      EQU   *
         CLC   ATTR,=X'000001'   VICE BLOCK?
         BNE   NA7               NO
         XC    BLOCKADR-1(4),BLOCKADR-1  YES. SET REL BLK ADR TO 0
         MVC   VICEKEY,AKEY      SAVE VICE
         MVC   VICEBLK,ABLOCK
         CLC   VICEID,KD1        TEST FOR CORRECT VICE
         BNE   FEHLBND           INVALID VICE
         CLI   VICECNT,X'05'
         BNE   FEHLBND           INVALID VICE
         XR    R1,R1             PICK UP TRACK CAPACITY
         IC    R1,VICELBC+2
         ST    R1,TRKCAP-2       AND SAVE IT
         B     NA8
NA7      EQU   *
         CLC   VICEID,=8X'00'    VICE ALREADY STORED ?
         BNE   NA71              YES
         CLC   ASTAT,=C'DMP'
         BE    FEHLBND           UNLOADED CATALOG IN ERROR
         XC    BLOCKADR-1(4),BLOCKADR-1
         LA    R2,CTLGD
         BAL   R10,UPREAD        READ VICE BLOCK
NA71     EQU   *
         LH    R8,ATTR           CONVERT TTR TO REL BLOCK ADDR
         MH    R8,TRKCAP
         XR    R1,R1
         IC    R1,ATTR+2
         BCTR  R1,0
         LA    R8,0(R8,R1)
         ST    R8,BLOCKADR-1
NA8      EQU   *
         CLC   ASTAT,=C'DMP'     ONLY DUMP AND OLD RECORDS ARE TO BE
         BE    NA81              PROCESSED
         CLC   ASTAT,=C'OLD'
         BNE   NB1
         B     NA9
NA81     EQU   *
         C     R8,LASTBLK        ENOUGH SPACE LEFT IN CATALOG ?
         BH    FEHLSPC
NA9      EQU   *
         BAL   R10,UPWRITED      UPDATE CATALOG
NB1      EQU   *
         GET   TAPE,ABER         GET NEXT RECORD
         B     NA6
TPEND    EQU   *
         CLOSE (CTLGD,,TAPE)     CLOSE CATALOG AND TAPE
         NI    SWITCH,X'F3'      CLEAR OPEN BITS
         B     NX1               BRANCH TO EXIT ROUTINE
*
*   FORMATTING A NEW SYSCTLG
*
FORMAT   EQU   *
         BAL   R10,UPFORMAT      LINK TO FORMATTING ROUTINE
         CLOSE CTLGC             CLOSE CATALOG
         NI    SWITCH,X'FE'      CLEAR OPEN BIT
         B     NX1               BRANCH TO EXIT ROUTINE
*
*  FORMATTING ROUTINE
*
UPFORMAT EQU   *
         ST    R10,REG10FMT      SAVE RETURN REG
         OI    SWITCH,X'02'      SET FORMAT INDICATOR
         TM    SWITCH,X'01'      TEST FOR CATALOG OPEN
         BO    NB2               OPEN
         OPEN  (CTLGC,OUTPUT)    OPEN CATALOG
         OI    SWITCH,X'01'      SET OPEN BIT
         XC    BLOCKADR-1(4),BLOCKADR-1  CLEAR REL BLOCK ADDR
         MVC   EKEY,=8X'FF'
         XC    VICEBLK,VICEBLK   CREATE VOLUME INDEX
         MVC   VICEBLK(2),=H'36'
         MVC   VICEID,KD1
         MVC   VICELBI,=X'000001'
         MVI   VICECNT,X'05'
         MVC   VICEFREE,=X'000002'
         MVC   VICEU2+3(8),=8X'FF'
         MVC   EBER(256),VICEBLK
         BAL   R10,UPWRITEC
         L     R8,BLOCKADR-1
         LA    R8,1(R8)
         ST    R8,BLOCKADR-1
NB2      EQU   *
         XC    EKEY,EKEY         CREATE DUMMY BLOCK
         XC    EBER(256),EBER
NB3      EQU   *
         BAL   R10,UPWRITEC      WRITE DUMMY BLOCK
         L     R9,WRRC           TEST WRITE RET CODE
         CH    R9,=H'8'          RC 8 MEANS PRIMARY SPACE FILLED
         BE    NB4
         L     R8,BLOCKADR-1     UPDATE REL BLOCK ADR
         LA    R8,1(R8)
         ST    R8,BLOCKADR-1
         B     NB3
NB4      EQU   *
         MVC   LASTBLK,BLOCKADR-1  SAVE REL ADDR OF LAST BLOCK
         L     R10,REG10FMT        RELOAD RETURN REG
         BR    R10                 RETURN
*
*  CATALOG READ ROUTINE
*
UPREAD   EQU   *
         MVC   BLKADSV,BLOCKADR-1
         READ  RDECB,DIF,(2),EBER,'S',EKEY,BLOCKADR
         CHECK RDECB
         TM    SWITCH,X'20'
         BO    0(R10)
         CLC   BLKADSV+1(3),=3X'00'     FIRST BLOCK OF CATALOG
         BNE   0(R10)               IF NO RETURN
         MVC   VICEKEY,EKEY         SAVE VICE BLK
         MVC   VICEBLK,EBER
         CLC   VICEID,KD1           TEST FOR CORRECT VICE
         BNE   FEHLCAT              INVALID VICE
         CLI   VICECNT,X'05'
         BNE   FEHLCAT              INVALID VICE
         CLC   VICELBC,=3X'00'     TEST FOR DUMMY VICE
         BE    0(R10)              YES. RETURN
         XR    R1,R1                PICK UP TRACK CAPACITY
         IC    R1,VICELBC+2
         ST    R1,TRKCAP-2          AND SAVE IT
         LH    R1,VICELBC           CALCULATE REL ADDR OF LAST BLOCK
         MH    R1,TRKCAP
         AH    R1,TRKCAP
         BCTR  R1,0
         ST    R1,LASTBLK
         BR    R10                  RETURN
*
*   WRITE (CREATE) ROUTINE
*
UPWRITEC EQU   *
         WRITE WDECBC,SF,CTLGC,EKEY,'S'
         ST    R15,WRRC       STORE RETURN CODE
         CHECK WDECBC
         BR    R10            RETURN
*
*   WRITE (UPDATE) ROUTINE
*
UPWRITED EQU   *
         ST    R10,REG10WRD    SAVE RETURN REG
         LA    R2,CTLGD        LOAD DCB ADDR
         BAL   R10,UPREAD      LINK TO READ ROUTINE
         WRITE WDECBD,DI,CTLGD,ABLOCK,'S',AKEY,BLOCKADR
         CHECK WDECBD
         L     R10,REG10WRD
         BR    R10
*
*  EXIT SEQUENCE
*
NX1      EQU   *
         TM    SWITCH,X'02'    TEST FORMAT BIT
         BZ    NX2
         OPEN  (CTLGTTR,UPDAT)  OPEN CATALOG FOR UPDATE
         OI    SWITCH,X'20'    SET OPEN BIT
         XC    BLOCKADR-1(4),BLOCKADR-1  TEST TRACK CAPACITY
         XC    BLKADSV,BLKADSV     CLEAR BLOCK ADDR SAVE FIELD
         XC    ETTR(3),ETTR        CLEAR REL TRACK ADDR
NX4      EQU   *
         LA    R2,CTLGTTR          LOAD DCB ADDR
         BAL   R10,UPREAD          LINK TO READ ROUTINE
         MVC   ACTDEVAD,BLOCKADR   SAVE ACTUAL DEVICE ADDR
         CLC   ETTR(3),=3X'00'
         BE    NX41
         CLC   BLOCKADR+5(2),ETTR  FIRST TRACK FULL ?
         BH    NX5                 YES
NX41     EQU   *
         MVC   ETTR(3),BLOCKADR+5  SAVE CURRENT TTR
         MVC   BLOCKADR-1(4),BLKADSV  RESTORE REL BLOCK ADDR
         CLC   BLOCKADR,=3X'00'    FIRST BLOCK ?
         BNE   NX3           NO
         MVC   VICEKEY,EKEY  YES. SAVE BLOCK
         MVC   VICEBLK,EBER
         CLC   VICEID,KD1    TEST FOR CORRECT VICE
         BNE   FEHLCATN      INVALID VICE
         CLI   VICECNT,X'05'
         BNE   FEHLCATN      INVALID VICE
         MVC   VICEADDR,ACTDEVAD  SAVE ACT DEV ADDR OF FIRST BLOCK
NX3      EQU   *
         L     R1,BLOCKADR-1  INCREASE RECORD NUMBER
         LA    R1,1(R1)
         ST    R1,BLOCKADR-1
         MVC   BLKADSV,BLOCKADR-1  SAVE CURRENT BLOCK ADDR
         B     NX4
NX5      EQU   *
*                      CALCULATE LAST TTR
         XC    TRKCAP-2(4),TRKCAP-2
         MVC   TRKCAP+1(1),ETTR+2  NEW TRACK CAPACITY
         L     R8,LASTBLK
         SRDL  R8,32(0)
         D     R8,TRKCAP-2
         STH   R9,ATTR     RELATIVE TRACK
         LA    R8,1(R8)
         STC   R8,ATTR+2   RECORD NUMBER
         CLC   VICELBC,ATTR  IS LAST TTR ALTERED ?
         BE    NX2         NO. NO UPDATE REQUIRED
         MVC   VICELBC,ATTR  UPDATE LAST BLOCK POINTER
         MVC   BLOCKADR(8),VICEADDR  ADDR OF FIRST BLOCK
         WRITE WDECBTTR,DIF,CTLGTTR,VICEBLK,'S',VICEKEY,BLOCKADR
         CHECK WDECBTTR
         CLOSE CTLGTTR
         NI    SWITCH,X'DF'     CLEAR OPEN BIT
NX2      EQU   *
         TM    SWITCH,X'FD'     TEST OPEN BITS
         BZ    NX6              NO DATA SET OPEN
         TM    SWITCH,X'20'     CTLGTTR OPEN ?
         BZ    NX7              NO
         CLOSE CTLGTTR          CLOSE CTLGTTR
         NI    SWITCH,X'DF'     CLEAR OPEN BIT
NX7      EQU   *
         TM    SWITCH,X'10'     CTLGIN OPEN ?
         BZ    NX71             NO
         CLOSE CTLGIN           CLOSE CTLGIN
         NI    SWITCH,X'EF'     CLEAR OPEN BIT
NX71     EQU   *
         TM    SWITCH,X'08'     TAPE OPEN ?
         BZ    NX72             NO
         CLOSE TAPE             CLOSE TAPE
         NI    SWITCH,X'F7'     CLEAR OPEN BIT
NX72     EQU   *
         TM    SWITCH,X'04'     CTLGD OPEN ?
         BZ    NX73             NO
         CLOSE CTLGD
         NI    SWITCH,X'FB'     CLEAR OPEN BIT
NX73     EQU   *
         TM    SWITCH,X'01'     CTLGC OPEN ?
         BZ    NX6              NO
         CLOSE CTLGC            CLOSE CTLGC
         NI    SWITCH,X'FE'     CLEAR OPEN BIT
NX6      EQU   *
         TM    SWITCH,X'40'   TEST ENQ BIT
         BZ    NX61           NOTHING ENQUEUED
         DEQ   MF=(E,DEQVX)   DEQ VOLUME INDEX
         DEQ   MF=(E,DEQVXS)   SCOPE = SYSTEMS
         DEQ   MF=(E,DEQVI)   DEQ VOLUME INDEX CONTROL ENTRY
         DEQ   MF=(E,DEQVIS)   SCOPE = SYSTEMS
         DEQ   MF=(E,DEQDSN)  DEQ RESERVE STATUS
         XR    R0,R0
         ICM   R0,X'C',ASIDF+2  INSERT ASID
         AH    R0,=H'42'      SYSEVENT ID
         ST    R0,REG0SWAP    SAVE SYSEVENT INPUT
         SVC   95             SET ADDR SPC TO SWAPPABLE
         ST    R1,REG1SWAP    SAVE RETURN CODE
         CLI   REG1SWAP+3,X'00'  TEST RETURN CODE
         BE    NX61
         ABEND 0002,DUMP
NX61     EQU   *
         CLOSE MSG      CLOSE MESSAGE DATA SET
         L     R15,RC   LOAD RETURN CODE
         L     R13,SAVE+4  LOAD ADDR OF CALLER'S SAVE AREA
         RETURN (14,12),RC=(15)
*
*   ERROR ROUTINES
*
FEHLPRM  EQU   *
         MVC   MBER(80),=CL80'1 ****  PARAMETER ERROR'
         B     NF1
FEHLSPC  EQU   *
         MVC   MBER(80),=CL80'1 ****  NO SUFFICIENT SPACE ON NEW CTLG'
         B     NF1
FEHLCAT  EQU   *
         MVC   MBER(80),=CL80'1 ****  LOGICAL ERROR ON SOURCE CATALOG'
         B     NF1
FEHLCATN EQU   *
         MVC   MBER(80),=CL80'1 ****  LOGICAL ERROR ON NEW CATALOG'
         B     NF1
FEHLBND  EQU   *
         MVC   MBER(80),=CL80'1 ****  UNLOADED CATALOG IN ERROR'
         B     NF1
FEHLTME  EQU   *
         MVC   MBER(80),=CL80'1 ****  TIME SVC NOT SUCCESSFUL'
NF1      EQU   *
         PUT   MSG,MBER     PRINT MESSAGE
         MVC   RC,=F'12'    SET RC TO 12
         B     NX2
*
*   ENQ SUBROUTINE
*
UPENQ    EQU   *
         USING IHADCB,2
         L     R2,DCBDEBAD    DEB ADDR
         L     R2,32(R2)      UCB ADDR
         LA    R2,0(R2)       CLEAR HIGH ORDER BITS
         ST    R2,UCBADDR
         MVC   MINVICE+8(4),UCBADDR  ADD UCB ADDR TO MINOR NAMES
         MVC   MINVX+8(4),UCBADDR
*        NOP   0(R10)         BYPASS ENQ
         EXTRACT ASIDF,'S',FIELDS=(ASID)  GET ASID
         XR    R0,R0
         ICM   R0,X'C',ASIDF+2  INSERT ASID
         AH    R0,=H'41'      SYSEVENT ID
         ST    R0,REG0SWAP    SAVE SYSEVENT INPUT
         SVC   95             SET ADDR SPC TO NONSWAP
         ST    R1,REG1SWAP    SAVE RETURN CODE
         CLI   REG1SWAP+3,X'00'  TEST RETURN CODE
         BE    NONSWAP
         ABEND 0001,DUMP
NONSWAP  EQU   *
         ENQ   MF=(E,ENQVX)   ENQ VOLUME INDEX
         ENQ   MF=(E,ENQVXS)  SCOPE = SYSTEMS
         ENQ   MF=(E,ENQVI)   ENQ VOLUME INDEX CONTROL ENTRY
         ENQ   MF=(E,ENQVIS)  SCOPE = SYSTEMS
         ENQ   MF=(E,ENQDSN)  RESERVE
         OI    SWITCH,X'40'   SET ENQ SWITCH
         BR    R10            RETURN
*
*  ENQ / DEQ  DEFINITIONS
*
UCBADDR  DS    F               UCB ADDR OF CTLG TO BE ENQUEUED
MAJOR    DC    CL8'SYSCTLG'   ENQ MAJOR NAME
MINVICE  DC    XL12'00'       ENQ MINOR NAMES
MINVX    DC    CL12'SYSCTLG'
MAJDSN   DC    CL8'SYSDSN'    RESERVE MAJOR NAME
MINDSN   DC    C'SYSCTLG'     RESERVE MINOR NAME
ENQVX    ENQ   (MAJOR,MINVX,,,SYSTEM),MF=L
ENQVXS   ENQ   (MAJOR,MINVX,,,SYSTEMS),MF=L
ENQVI    ENQ   (MAJOR,MINVICE,,,SYSTEM),MF=L
ENQVIS   ENQ   (MAJOR,MINVICE,,,SYSTEMS),MF=L
ENQDSN   ENQ   (MAJDSN,MINDSN,,,SYSTEM),UCB=UCBADDR,MF=L
DEQVX    DEQ   (MAJOR,MINVX,12,SYSTEM),MF=L
DEQVXS   DEQ   (MAJOR,MINVX,12,SYSTEMS),MF=L
DEQVI    DEQ   (MAJOR,MINVICE,12,SYSTEM),MF=L
DEQVIS   DEQ   (MAJOR,MINVICE,12,SYSTEMS),MF=L
DEQDSN   DEQ   (MAJDSN,MINDSN,7,SYSTEM),UCB=UCBADDR,MF=L
*
*   D E F I N I T I O N S
*
SAVE     DS    18F        SAVE AREA
REG1SV   DS    F          SAVE PARM REG
REG10FMT DS    F          SAVE RETURN IN FORMATTING ROUT
REG10WRD DS    F          SAVE RETURN IN WRITE (UPDATE) ROUT
RC       DS    F          RETURN CODE
ASIDF    DS    F          ASID
REG0SWAP DS    F          SAVE AREA FOR SYSEVENT INPUT
REG1SWAP DS    F          SAVE AREA FOR SYSEVENT RETURN CODE
*
         DS    0F       )  RELATIVE BLOCK ADDR
         DS    C        )  RELATIVE BLOCK ADDR
BLOCKADR DS    CL3      )  RELATIVE BLOCK ADDR
         DS    CL5      )
*
BLKADSV  DS    F          REL BLOCK ADDR SAVE FIELD
LASTBLK  DS    F          REL BLOCK ADDR OF LAST BLOCK
WRRC     DS    F          RETURN CODE OF WRITE CREATE ROUT
DATE     DS    F          DATE
TIME     DS    F          TIME
*
          DS    0F        )  TRACK CAPACITY
          DS    H         )  TRACK CAPACITY
TRKCAP    DS    H         )  TRACK CAPACITY
*
NTTR      DS    H            RELATIVE TRACK ADDR
NREC      DS    C            RECORD NUMBER
          DS    0F           TAPE OUTPUT AREA
ABER      EQU   *
ATTR      DS    CL3          TTR
ASTAT     DS    CL3          STATUS
AKEY      DS    CL8          KEY
ABLOCK    DS    CL256        CATALOG BLOCK
ADATE     DS    CL4          DATE
ATIME     DS    CL4          TIME
ACOMM     DS    CL22         COMMENTS
*                            VICE SAVE AREA
VICEADDR  DS    CL8          VICE BLOCK ACTUAL DEV ADDR
VICEKEY   DS    CL8          KEY
          DS    0F           FULLWORD ALIGNMENT
VICEBLK  DS    0CL256
         DS    CL2           NUMBER OF USED BYTES
VICEID   DS    CL8           VICE IDENTIFIER
VICELBI  DS    CL3           TTR OF LAST BLOCK IN VOL INDEX
VICECNT  DS    C             NUMBER OF FOLLOWING HALFWORDS
VICELBC  DS    CL3           TTR OF LAST BLOCK IN CATALOG
VICEU1   DS    C             UNUSED
VICEFREE DS    CL3           TTR OF NEXT FREE BLOCK
VICEU2   DS    CL3           UNUSED
         ORG   VICEBLK+256
*
ETTR     DS    H             CTLG INPUT AREA
         DS    C
         DS    C
EKEY     DS    CL8           KEY
EBER     DS    256C          CATALOG BLOCK
KD1      DC    F'0'        ) VICE IDENTIFIER
         DC    F'1'        ) VICE IDENTIFIER
OPTFLD   DS    CL7         OPTION FIELD
SWITCH   DS    C           INDICATOR BYTE
*
*    .1.. ....    ENQ BIT
*    ..1. ....    CTLGTTR DCB OPENED
*    ...1 ....    CTLGIN DCB OPENED
*    .... 1...    TAPE DCB OPENED
*    .... .1..    CTLGD DCB OPENED
*    .... ..1.    FORMATTING ROUT HAS BEEN USED
*    .... ...1    CTLGC DCB OPENED
*
MBER     DS    CL80        MESSAGE OUTPUT AREA
MOVE1    MVC   OPTFLD(0),0(R7)
ACTDEVAD  DS    CL8          ACTUAL DEVICE ADDR
*
*  D A T A   C O N T R O L   B L O C K S
*
CTLGIN   DCB   BLKSIZE=256,DDNAME=CTLG,DSORG=DA,KEYLEN=8,    ***********
               MACRF=RIC,OPTCD=RF,RECFM=F
CTLGC    DCB   BLKSIZE=256,DDNAME=CTLGOUT,DSORG=PS,KEYLEN=8,   *********
               MACRF=WL,RECFM=F
CTLGD    DCB   BLKSIZE=256,DDNAME=CTLGOUT,DSORG=DA,KEYLEN=8,   *********
               MACRF=(RIC,WIC),OPTCD=RF,RECFM=F
CTLGTTR  DCB   BLKSIZE=256,DDNAME=CTLGOUT,DSORG=DA,KEYLEN=8,   *********
               MACRF=(RIC,WIC),OPTCD=R,RECFM=F
TAPE     DCB   DDNAME=TAPE,DSORG=PS,MACRF=(GM,PM),EODAD=TPEND
MSG      DCB   DDNAME=MSG,DSORG=PS,MACRF=PM,RECFM=FA,BLKSIZE=80
         LTORG
         DCBD  DSORG=DA,DEVD=DA
R0 EQU 0
R1 EQU 1
R2 EQU 2
R3 EQU 3
R4 EQU 4
R5 EQU 5
R6 EQU 6
R7 EQU 7
R8 EQU 8
R9 EQU 9
R10 EQU 10
R11 EQU 11
R12 EQU 12
R13 EQU 13
R14 EQU 14
R15 EQU 15
         END   MOVECVOL
*/* AN FOLGENDEN TAGEN WURDE DAS PROGRAMM GETESTET */
*/* NEUERSTELLUNG   15. JAN 1976   LEVEL OL */
*/* NEUERSTELLUNG   29. JAN 1976   LEVEL OL */
*/* NEUERSTELLUNG   30. JAN 1976   LEVEL OL */
*/* NEUERSTELLUNG    4. FEB 1976   LEVEL OL */
*/* NEUERSTELLUNG   12. FEB 1976   LEVEL OL */
