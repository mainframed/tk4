 PGMGEN: PROCEDURE OPTIONS (MAIN);
 /********************************************************************/
 /*                                                                  */
 /*      GENERIERUNG DER FUER DIE VERSCHIEDENEN LISTEN DER           */
 /*      PROGRAMMSTATISTIK BENOETIGTEN DATENSAETZE                   */
 /*                                                                  */
 /*      EINGABE    DIE IM PROGRAMM PGMREC ERZEUGTE DATEI MIT        */
 /*                 STATISTISCHEN DATEN                              */
 /*                                                                  */
 /*      AUSGABE    DATEI MIT SAETZEN FUER AUSGEWAEHLTE LISTEN       */
 /*                                                                  */
 /*      DIE AUSWAHL DER LISTEN ERFOLGT DURCH STEUERKARTEN, DIE      */
 /*      UEBER SYSIN EINGELESEN WERDEN                               */
 /*                                                                  */
 /*      FOLGENDE LISTE KOENNEN AUSGEWAEHLT WERDEN                   */
 /*                                                                  */
 /*      FELDNR. SORTIERUNG NACH                   KENN-  STELLEN-   */
 /*                                                BUCH-  ZAHL       */
 /*                                                STABE  GRENZWERT  */
 /*                                                                  */
 /*          1   PROGRAMMNAME          AUFSTEIGEND   A        -      */
 /*          2   AUFRUFE                ABSTEIGEND   B      9,0      */
 /*          3   AUFRUFE MIT ABEND      ABSTEIGEND   C      9,0      */
 /*          4   REGION GEFORDERT       ABSTEIGEND   D      9,0      */
 /*          5   REGION GENUTZT         ABSTEIGEND   E      9,0      */
 /*          6   CPU ZEIT               ABSTEIGEND   F      9,3      */
 /*          7   ERRECHNETE LAUFZEIT    ABSTEIGEND   G      9,3      */
 /*          8   SMF LAUFZEIT           ABSTEIGEND   H      9,3      */
 /*          9   FAKTOR                 ABSTEIGEND   I      9,3      */
 /*         10   KOSTEN                 ABSTEIGEND   J      9,2      */
 /*         11   ZUGRIFFE               ABSTEIGEND   K      9,0      */
 /*         12   PLATTEN DATEIEN        ABSTEIGEND   L      9,0      */
 /*         13   PLATTEN ZUGRIFFE       ABSTEIGEND   M      9,0      */
 /*         14   BAND DATEIEN           ABSTEIGEND   N      9,0      */
 /*         15   BAND ZUGRIFFE          ABSTEIGEND   O      9,0      */
 /*         16   UR DATEIEN             ABSTEIGEND   P      9,0      */
 /*         17   UR ZUGRIFFE            ABSTEIGEND   Q      9,0      */
 /*         18   SYSIN DATEIEN          ABSTEIGEND   R      9,0      */
 /*         19   SYSIN KARTEN           ABSTEIGEND   S      9,0      */
 /*         20   SYSOUT DATEIEN         ABSTEIGEND   T      9,0      */
 /*         21   SYSOUT ZEILEN          ABSTEIGEND   U      9,0      */
 /*                                                                  */
 /*      AUFBAU DER STEUERKARTEN FUER LISTENAUSWAHL                  */
 /*                                                                  */
 /*      SPALTEN 1-4 / MAX= / BEI LISTEN MIT MAXIMAL-WERTEN          */
 /*                  / DUR= / BEI LISTEN MIT DURCHSCHNITTS-WERTEN    */
 /*      SPALTEN 5-14,15-24,25-34,35-44,45-54,55-64,65-74            */
 /*                  JE FELD KANN EINE LISTE AUSGEWAEHLT WERDEN      */
 /*              STELLE 1     KENNBUCHSTABE DER LISTE                */
 /*              STELLE 2-10  GRENZWERT (RECHTSBUENDIG) ODER BLANK   */
 /*                           IST EIN GRENZWERT ANGEGEBEN, DANN      */
 /*                           WIRD DIE ENTSPRECHENDE LISTE NUR       */
 /*                           SOWEIT AUSGEDRUCKT, SOLANGE            */
 /*                           GRENZWERT <= DEM WERT IST, NACHDEM     */
 /*                           DIE LISTE SORTIERT WIRD.               */
 /*                           BEI KENNBUCHSTABE A (SORTIERUNG NACH   */
 /*                           PGMNAME) WIRD IMMER DIE GANZE LISTE    */
 /*                           GEDRUCKT                               */
 /*                           IST DER GRENZWERT BLANK, WIRD DIE      */
 /*                           GANZE LISTE GEDRUCKT.                  */
 /*      SPALTEN 75-80 FREI                                          */
 /*                                                                  */
 /********************************************************************/
 /**/
         DCL (EDATEN,ADATEN) FILE RECORD,
             1 ESATZ BASED(P),     /* EINGABE SATZ */
             2 PROGR    CHAR(8),
             2 AUFR     FIXED(9),
             2 AUFRABE  FIXED(9),
             2 MFELD(18) FIXED(9), /* FELDER MIT MAXIMAL-WERTEN   */
             2 DFELD(18) FIXED(9), /* FELDER MIT DURCSCHN.-WERTEN */
 /**/
             1 ESATZX BASED(P),
             2 PTEILE   CHAR(18),
             2 MTEILE   CHAR(90),
             2 DTEILE   CHAR(90),
 /**/
             1 ASATZ,             /* AUSGABE SATZ */
             2 LISNR    PIC'99',
             2 SORT     FIXED(9),
             2 PTEILA   CHAR(18),
             2 MDTEILA  CHAR(90),
 /**/
             STKZ       CHAR(4),   /* STEUERKARTEN */
             STL        CHAR(76),
             STY(76)    CHAR(1) DEF STL,
 /**/
             MWT(21) FIXED(9), /* GRENZWERTE MAXIMAL-LISTEN */
             DWT(21) FIXED(9), /* GRENZWERTE DURCHSCHN.-LISTEN */
 /**/
             MTAB(21)   BIT(1),
             DTAB(21)   BIT(1),
             MKZ        BIT(1),
             DKZ        BIT(1);
 /**/
         DCL 1 SDATEN BASED (PX),
             2 SBER(7),
             3 STX CHAR(1),
             3 GWT PIC'999999999';
 /**/
 /**/
 /* PROGRAMM - ANFANG */
 /**/
 /**/
         ON ENDFILE(SYSIN) GO TO KENDE;
         I1 = 0;
         DO I = 1 TO 21;
          MTAB(I) = '0'B; DTAB(I) = '0'B;
          MWT(I) = 0; DWT(I) = 0;
         END;
         MKZ = '0'B; DKZ = '0'B;
 KLESEN: GET EDIT (STKZ,STL)(A(4),A(76));
         IF STKZ = 'MAX=' THEN DO; I1 = 1; GO TO PRUEF; END;
         IF STKZ = 'DUR=' THEN DO; I1 = 2; GO TO PRUEF; END;
          PUT SKIP(1) EDIT
           ('FEHLERHAFTE STEUERKARTE',STKZ,STL)
           (A(23),X(1),A(4),A(76));
         GO TO KLESEN;
 PRUEF:  DO I = 1 TO 76;
          IF STY(I) = ' ' THEN STY(I) = '0';
         END;
         PX = ADDR(STL);
         DO I = 1 TO 7;
          IF STX(I) = '0' THEN GO TO PRUEFX;
          IF STX(I) = 'A' THEN GO TO LISTA;
          IF STX(I) = 'B' THEN GO TO LISTB;
          IF STX(I) = 'C' THEN GO TO LISTC;
          IF STX(I) = 'D' THEN GO TO LISTD;
          IF STX(I) = 'E' THEN GO TO LISTE;
          IF STX(I) = 'F' THEN GO TO LISTF;
          IF STX(I) = 'G' THEN GO TO LISTG;
          IF STX(I) = 'H' THEN GO TO LISTH;
          IF STX(I) = 'I' THEN GO TO LISTI;
          IF STX(I) = 'J' THEN GO TO LISTJ;
          IF STX(I) = 'K' THEN GO TO LISTK;
          IF STX(I) = 'L' THEN GO TO LISTL;
          IF STX(I) = 'M' THEN GO TO LISTM;
          IF STX(I) = 'N' THEN GO TO LISTN;
          IF STX(I) = 'O' THEN GO TO LISTO;
          IF STX(I) = 'P' THEN GO TO LISTP;
          IF STX(I) = 'Q' THEN GO TO LISTQ;
          IF STX(I) = 'R' THEN GO TO LISTR;
          IF STX(I) = 'S' THEN GO TO LISTS;
          IF STX(I) = 'T' THEN GO TO LISTT;
          IF STX(I) = 'U' THEN GO TO LISTU;
          PUT SKIP(1) EDIT
           ('FEHLERHAFTE LISTENANFORDERUNG',STKZ,STX(I))
           (A(29),X(1),A(4),A(1));
          GO TO PRUEFX;
 LISTA:   IF I1 = 1 THEN DO; MTAB(1) = '1'B;
                             MWT(1)  = GWT(I); GO TO PRUEF1; END;
                    ELSE DO; DTAB(1) = '1'B;
                             DWT(1)  = GWT(I); GO TO PRUEF2; END;
 LISTB:   IF I1 = 1 THEN DO; MTAB(2) = '1'B;
                             MWT(2)  = GWT(I); GO TO PRUEF1; END;
                    ELSE DO; DTAB(2) = '1'B;
                             DWT(2)  = GWT(I); GO TO PRUEF2; END;
 LISTC:   IF I1 = 1 THEN DO; MTAB(3) = '1'B;
                             MWT(3)  = GWT(I); GO TO PRUEF1; END;
                    ELSE DO; DTAB(3) = '1'B;
                             DWT(3)  = GWT(I); GO TO PRUEF2; END;
 LISTD:   IF I1 = 1 THEN DO; MTAB(4) = '1'B;
                             MWT(4)  = GWT(I); GO TO PRUEF1; END;
                    ELSE DO; DTAB(4) = '1'B;
                             DWT(4)  = GWT(I); GO TO PRUEF2; END;
 LISTE:   IF I1 = 1 THEN DO; MTAB(5) = '1'B;
                             MWT(5)  = GWT(I); GO TO PRUEF1; END;
                    ELSE DO; DTAB(5) = '1'B;
                             DWT(5)  = GWT(I); GO TO PRUEF2; END;
 LISTF:   IF I1 = 1 THEN DO; MTAB(6) = '1'B;
                             MWT(6)  = GWT(I); GO TO PRUEF1; END;
                    ELSE DO; DTAB(6) = '1'B;
                             DWT(6)  = GWT(I); GO TO PRUEF2; END;
 LISTG:   IF I1 = 1 THEN DO; MTAB(7) = '1'B;
                             MWT(7)  = GWT(I); GO TO PRUEF1; END;
                    ELSE DO; DTAB(7) = '1'B;
                             DWT(7)  = GWT(I); GO TO PRUEF2; END;
 LISTH:   IF I1 = 1 THEN DO; MTAB(8) = '1'B;
                             MWT(8)  = GWT(I); GO TO PRUEF1; END;
                    ELSE DO; DTAB(8) = '1'B;
                             DWT(8)  = GWT(I); GO TO PRUEF2; END;
 LISTI:   IF I1 = 1 THEN DO; MTAB(9) = '1'B;
                             MWT(9)  = GWT(I); GO TO PRUEF1; END;
                    ELSE DO; DTAB(9) = '1'B;
                             DWT(9)  = GWT(I); GO TO PRUEF2; END;
 LISTJ:   IF I1 = 1 THEN DO; MTAB(10) = '1'B;
                             MWT(10) = GWT(I); GO TO PRUEF1; END;
                    ELSE DO; DTAB(10) = '1'B;
                             DWT(10) = GWT(I); GO TO PRUEF2; END;
 LISTK:   IF I1 = 1 THEN DO; MTAB(11) = '1'B;
                             MWT(11) = GWT(I); GO TO PRUEF1; END;
                    ELSE DO; DTAB(11) = '1'B;
                             DWT(11) = GWT(I); GO TO PRUEF2; END;
 LISTL:   IF I1 = 1 THEN DO; MTAB(12) = '1'B;
                             MWT(12) = GWT(I); GO TO PRUEF1; END;
                    ELSE DO; DTAB(12) = '1'B;
                             DWT(12) = GWT(I); GO TO PRUEF2; END;
 LISTM:   IF I1 = 1 THEN DO; MTAB(13) = '1'B;
                             MWT(13) = GWT(I); GO TO PRUEF1; END;
                    ELSE DO; DTAB(13) = '1'B;
                             DWT(13) = GWT(I); GO TO PRUEF2; END;
 LISTN:   IF I1 = 1 THEN DO; MTAB(14) = '1'B;
                             MWT(14) = GWT(I); GO TO PRUEF1; END;
                    ELSE DO; DTAB(14) = '1'B;
                             DWT(14) = GWT(I); GO TO PRUEF2; END;
 LISTO:   IF I1 = 1 THEN DO; MTAB(15) = '1'B;
                             MWT(15) = GWT(I); GO TO PRUEF1; END;
                    ELSE DO; DTAB(15) = '1'B;
                             DWT(15) = GWT(I); GO TO PRUEF2; END;
 LISTP:   IF I1 = 1 THEN DO; MTAB(16) = '1'B;
                             MWT(16) = GWT(I); GO TO PRUEF1; END;
                    ELSE DO; DTAB(16) = '1'B;
                             DWT(16) = GWT(I); GO TO PRUEF2; END;
 LISTQ:   IF I1 = 1 THEN DO; MTAB(17) = '1'B;
                             MWT(17) = GWT(I); GO TO PRUEF1; END;
                    ELSE DO; DTAB(17) = '1'B;
                             DWT(17) = GWT(I); GO TO PRUEF2; END;
 LISTR:   IF I1 = 1 THEN DO; MTAB(18) = '1'B;
                             MWT(18) = GWT(I); GO TO PRUEF1; END;
                    ELSE DO; DTAB(18) = '1'B;
                             DWT(18) = GWT(I); GO TO PRUEF2; END;
 LISTS:   IF I1 = 1 THEN DO; MTAB(19) = '1'B;
                             MWT(19) = GWT(I); GO TO PRUEF1; END;
                    ELSE DO; DTAB(19) = '1'B;
                             DWT(19) = GWT(I); GO TO PRUEF2; END;
 LISTT:   IF I1 = 1 THEN DO; MTAB(20) = '1'B;
                             MWT(20) = GWT(I); GO TO PRUEF1; END;
                    ELSE DO; DTAB(20) = '1'B;
                             DWT(20) = GWT(I); GO TO PRUEF2; END;
 LISTU:   IF I1 = 1 THEN DO; MTAB(21) = '1'B;
                             MWT(21) = GWT(I); GO TO PRUEF1; END;
                    ELSE DO; DTAB(21) = '1'B;
                             DWT(21) = GWT(I); GO TO PRUEF2; END;
 PRUEF1:  MKZ = '1'B;
          GO TO PRUEFX;
 PRUEF2:  DKZ = '1'B;
 PRUEFX:  END;
         GO TO KLESEN;
 KENDE:  IF I1 = 0 THEN DO;
          PUT SKIP(1) EDIT
           ('KEINE STEUERKARTEN, ABNORMALES PROGRAMMENDE')
           (A(43));
          GO TO AUSGANG;
          END;
         IF MKZ = '0'B & DKZ = '0'B THEN DO;
          PUT SKIP(1) EDIT
           ('ALLE LISTENANFORDERUNGEN FEHLERHALT, ',
            'ABNORMALES PROGRAMMENDE')
           (A(37),A(23));
          GO TO AUSGANG;
          END;
         OPEN FILE(EDATEN) INPUT; ON ENDFILE(EDATEN) GO TO DENDE;
         OPEN FILE(ADATEN) OUTPUT;
 DLESEN: READ FILE(EDATEN) SET(P);
         IF MKZ = '1'B THEN DO;
          SORT = 0;
          PTEILA = PTEILE;
          MDTEILA = MTEILE;
          DO I = 1 TO 21;
           IF MTAB(I) = '0'B THEN GO TO ENDM;
           LISNR = I;
           IF I = 1 THEN GO TO MSCHR;
           IF I = 2 THEN DO; SORT = AUFR; GO TO MSCHX; END;
           IF I = 3 THEN DO; SORT = AUFRABE; GO TO MSCHX; END;
           SORT = MFELD(I-3);
 MSCHX:    IF MWT(I) > SORT THEN GO TO ENDM;
 MSCHR:    WRITE FILE(ADATEN) FROM(ASATZ);
 ENDM:    END;
         END;
         IF DKZ = '1'B THEN DO;
          SORT = 0;
          PTEILA = PTEILE;
          MDTEILA = DTEILE;
          DO I = 1 TO 21;
           IF DTAB(I) = '0'B THEN GO TO ENDD;
           LISNR = I+21;
           IF I = 1 THEN GO TO DSCHR;
           IF I = 2 THEN DO; SORT = AUFR; GO TO DSCHX; END;
           IF I = 3 THEN DO; SORT = AUFRABE; GO TO DSCHX; END;
           SORT = DFELD(I-3);
 DSCHX:    IF DWT(I) > SORT THEN GO TO ENDD;
 DSCHR:    WRITE FILE(ADATEN) FROM(ASATZ);
 ENDD:    END;
         END;
         GO TO DLESEN;
 DENDE:  CLOSE FILE(EDATEN);
         CLOSE FILE(ADATEN);
 AUSGANG: END PGMGEN;
