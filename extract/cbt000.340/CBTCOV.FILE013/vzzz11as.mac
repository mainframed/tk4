*
* PACKLIST
*        IS THE MODULE THAT BUILDS THE IEAPAK00 MEMBER OF
*        SYS1.PARMLIB. THE DATA IS OBTAINED BY USING THE ROUTINE
*        PX001550.   THE CONSTRUCTION IS BASED ON
*        FREQUENCY OF INTERUPTS IN A GIVEN LPA MODULE. ASSOCIATION
*        BY FREQUENCY IS POSSIBLE, BUT IS NOT ENFORCED.
*
*        THE INTERUPTS IN AND TO LPA ARE COUNTED. THEN THE COUNTS FOR
*        EACH MODULE ARE DIVIDED BY THE LENGTH OF THAT MODULE. THIS
*        INDEX VALUE IS SORTED INTO DESCENDING ORDER. THE PACK LIST
*        IS THEN BUILT, TAKING PAGE BOUNDARIES INTO ACCOUNT. WHEN
*        THIS IS FINISHED, THE INDIVIDUAL RECORDS ARE REVERSED IN
*        ORDER TO PLACE THE MOST ACTIVE CLOSEST TO THE LPA PAGE
*        DIRECTORY ON THE LPA PAGING DATA SET.
*
*        ALL MEMBERS OF LPALIB SHOULD BE INCLUDED IN THE PACKLIST AT
*        THE FRONT OF IEAPAK00. IF A MEMBER IS NOT INCLUDED IN THE
*        PACK LIST, IT GOES TO THE SPOT DESIRED FOR THE MOST ACTIVE
*        LPA MEMBERS.
*
*  INVOKING JCL:
* //PACKLIST EXEC PGM=PX001551
* //SYSPRINT DD  SYSOUT=A             REPORT ON ACTIVITY
* //SYSLPA   DD  DSN= DATA SET CONTAINING OUTPUT OF LISTLPA OF AMBLIST
* //SYSWORK  DD  TEMPORARY  WORK DATA SET
* //SYSPSW   DD  DSN= DATA SET CONTAINING SAMPLES GATHERED BY PSWSAMP
* //SYSTEMP  DD  WORK TAPE, MUST BE TAPE BECAUSE IT IS READ BACKWARDS
* //SYSPUNCH DD  DSN= OUTPUT DATA SET FOR MODEL IEAPAK00
*
PACKLIST START 0
         REG
         SAVE  (14,12)
         BAL   R12,80(R15)
         USING *,R13
         DS    18F
         ST    R12,8(R13)
         ST    R13,4(R12)
         LR    R13,R12
         SPACE 3
         OPEN  (SYSLPA,(INPUT))    INPUT IS AMBLIST OUTPUT
         SPACE 2
         TM    SYSLPA+48,X'10'     OPEN  SUCCESSFUL?
         LA    R4,101
         BZ    ABEND               NO  USER ABEND 101
         SPACE 2
IT050    GET   SYSLPA,PI           SEARCH FOR NUMERIC SECTION... GET
         SPACE 2
         CLI   CC,C'1'          Q. TITLE PAGE
         BNE   IT050               NO... GET NEXT PRINT IMAGE
         CLI   CC+31,C'N'       Q. N FOR START OF NUMERICAL LISTING
         BNE   IT050               NO... MUST STILL BE IN ALPHABETIC
         USING TBS,R9              TABLE DSECT
         SPACE 2
         GETMAIN EU,LV=96000,A=TAB GET THE  TABLE WORK AREA
         SPACE 2
         L     R9,TAB              POINT TO IT
IT100    GET   SYSLPA,PI           READ PRINT IMAGE
         CLI   CC,X'40'         Q. DETAIL LINE
         BNE   IT100               NO... IGNORE
         LA    R1,S1               PIINT TO FIRST SEGMENT
         BAL   14,IT200            ADD TO TABLE
         LA    R1,S2               POINT TO SECOND SEGMENT
         BAL   R14,IT200              CONVERT
         B     IT100               GET NEXT RECORD
         SPACE
         USING LPAE,R1             SEGMENT DSECT
IT200    CLI   LL,X'40'         Q. BLANK LENGTH (NOT MODULE NAME)
         BCR   8,R14              YES... IGNORE
         XC    TF,TF               CLEAR COUNT COUNTER
         MVC   TN,LN               SAVE MODULE NAME
         PACK  LPAT,LL(6)
         AP    LPATOTAL,LPAT
         TR    LX,TOBIN            CONVERT START AND LENGTH TO BIN
         PACK  TS+1,LS(7)         SAVE START ADDRESS
         PACK  TL+1,LL(7)              LENGTH
         SPACE 2
ONETIME  NOP   ITEND                    ONE TIME SWITCH
         OI    ONETIME+1,X'F0'          CHANGE TO BRANCH
         MVC   LPALOW,TS                SAVE LPA LOW
         MVI   LPALOW,0
ITEND    EQU   *
         LA    R9,TBL(,R9)         POINT TO NEXT TABLE ENTRY
         BR    R14                 RETURN
         SPACE 3
IT900    S     R9,TAB+4            SET END OF TABLE
         ST    R9,TAB+8            EOD(SYSLPA)... SAVE TABLE END
         L     R1,TS               LAST MOD START ADDR
         A     R1,TL               ADD LENGTH OF MOD
         LA    R1,0(,R1)
         ST    R1,LPAHI            SAVE LPA HIGH ADDR
         SPACE 2
         CLOSE SYSLPA             DON'T NEED THIS ANYMORE
         SPACE
         L     R9,16              CVT ADDR
         L     R9,356(,R9)        PVT ADDR
         LH    R8,26(R9)          CSA LOW -HIGH 16 BITS
         SLL   R8,8              ADD LOW 8 BITS
         LA    R8,0(,R8)          ZERO HIGH BYTE
         ST    R8,SPALOW          SAVE
         EJECT
         OPEN  (SYSPSW,(INPUT))   PROCESS  COUNT DATA
         LA    R4,102
         TM    SYSPSW+48,X'10'    OPEN SUCCESSFUL?
         BZ    ABEND
         SPACE 2
R100      GET   SYSPSW
         LR    R5,R1
         LA    R6,32
         SLR   R5,R6
          LH    R7,SYSPSW+62
         AR    R7,R5
R120     BXH   R5,R6,R100
          TM    2(R5),X'70'
          BZ    R120
         L     R12,4(,R5)          GET ADDR
         LA    R12,0(,R12)
         C     R12,SPALOW       Q. IN ADDRESS SPACE AREA
         BNL   R150                NO...
         AP    ASCTR,=P'1'         BUMP COUNTER
         B     R120                READ AGAIN
R150     C     R12,LPALOW       Q. IN CSA
         BNL   R200                NO...
R160     AP    CSACTR,=P'1'       BUMP CSA COUNTER
         B     R120                GET ANOTHER TRACE RECORD
R200     C     R12,LPAHI        Q. ABOVE LPA
         BNL   R160                YES... COUNT AS CSA
         AP    LPACTR,=P'1'       BUMP LPA COUNTER
         LM    R9,R11,TAB          GET TABLE LIMITS
         SR    R9,R10
R250     BXH   R9,R10,R160
         C     R12,TS           Q. EXCEED MODULE START
         BNL   R250
         SR    R9,R10
         L     R12,TF
         LA    R12,1(,R12)    BUMP COUNT COUNT BY ONE
         ST    R12,TF              STORE RESULT
         B     R120                GET NEXT RECORD
R900      EQU   *
         SPACE
         CLOSE SYSPSW
         EJECT
          LM    R9,R11,TAB    GET TABLE LIMITS
         SR    R9,R10
R910     BXH   R9,R10,R920         POINT TO NEXT ENTRY
         L     R7,TF              GETY NUMBER OF FAULTS
         M     R6,=F'100000'         ALLOW 5 DECIMAL PLACES
         D     R6,TL               CALC FAULTS / LENGTH
         ST    R7,TFL              SAVE ANSWER
         B     R910                DO FOR NEXT ENTRY
         SPACE
*  ORDER TABLE BY DESCENDING FAULTS/BYTE (TFL)
R920     L     R8,TAB+8      SAVE ACTUAL END OF TABLE
R930     LM    R9,R11,TAB    SET UP TO BEGIN THE SORT
         MVI   SORTTEST,0    HAS-SOMETHING-BEEN-MOVED BYTE
R940     LR    R5,R9
         BXH   R9,R10,R960   INCREMENT FOR NEXT ENTRY
         CLC   TFL,20(R5)    COMPARE ON FAULTS PER BYTE
         BH    R950          EXCHANGE THE ENTRIES
         BNE   R940          LOW
         CLC   TL,12(R5)     EQUAL, COMPARE ON LENGTH
         BNH   R940
R950     TS    SORTTEST      SET THE HAS-SOMETHING-BEEN-MOVED BYTE
         XC    0(TBL,R9),0(R5) EXCHANGE THE ENTRIES
         XC    0(TBL,R5),0(R9) EXCHANGE THE ENTRIES
         XC    0(TBL,R9),0(R5) EXCHANGE THE ENTRIES
         B     R940
R960     SR    R11,R10       SHRINK THE TABLE FOR A TIME
         ST    R11,TAB+8
         TS    SORTTEST
         BNZ   R930
         ST    R8,TAB+8      RESET THE END OF THE TABLE
         EJECT
         ED    TASCCTR,ASCTR     SHOW ADDRESS SPACE FAULTS
         ED    TCSACTR,CSACTR
         ED    TLPACTR,LPACTR      LPA
         SPACE 2
         OPEN (SYSPRINT,(OUTPUT),SYSWORK,(OUTPUT))
         LA    R4,103
         TM    SYSPRINT+48,X'10'    OPEN OK?
         BZ    ABEND                NO   USER ABEND 103
         LA    R4,104
         TM    SYSWORK+48,X'10'   OPEN OK?
         BZ    ABEND                NO   USER ABEND 104
         PUT   SYSPRINT,T           PRINT TITLE
         ED    LPASIZE,LPATOTAL
         PUT   SYSPRINT,ST2
         PUT   SYSPRINT,ST               SUBTITLE
         MVI   ST,C'1'
         EJECT
         LA    R7,56               LINES PER PAGE
         LA    R6,CS+1             CARD IMAGE POINTER
         LM    R9,R11,TAB        RESET TABLE LIMITS
         SR    R9,R10
         ST    R9,SAVE9
P100     L     R9,SAVE9
         MVI   FITNOFIT,0
P150     BXH   R9,R10,P900
         CLI   TF,X'FF'       Q. USED ENTRY
         BE    P150              YES
* WHEN THIS THING IS WORKING PRINT IT HERE BY B P300
         ST    R9,SAVE9            SAVE CURR LOC
          L     R1,TL
          N     R1,=F'4095'
          A     R1,PAGELEN
         C     R1,=F'4096'         OVER A PAGE ?
         BNH   NOTOVER
*  TRY TO FIND ENTRY WHICH WILL FIT
         SR   R9,R10
         ST   R9,SAVE9
          MVI   FITNOFIT,255
P225     BXH   R9,R10,P230         TRY TO FIND A FIT
         CLI   TF,X'FF'         Q. ALREADY USED FLAG
         BE    P225     YES.... DO NOT USE
         L     R1,PAGELEN          CURRENT PAGELEN
         A     R1,TL               LEN OF MOD
         C     R1,=F'4096'       Q.FIT
         BH    P225
         B     NOTOVER
* AGAIN, WHEN WORKING, NOPRINT JUST PUNCH AND USED
P230     EQU   *
         SR    R9,R10
         S     R1,TL
         ST    R1,PAGELEN
P231     MVI   FITNOFIT,0
         BCTR  R6,0                MOVE BACK TO COMMA
         MVI   0(R6),C')'          MOVE IN CLOSE PAREN
         CLI   FIRSTPG,X'FF'      Q. FIRST PAGE GROUP
         BE    P232     YES.... SKIP COMMA
         MVI   1(R6),C','          MOVE IN COMMA
P232     PUT   SYSWORK,CS         PUNCH CARD
         MVI   FIRSTPG,X'00'       SW TO FALSE
         MVI   CS,X'40'            TO CLEAR
         MVC   CS+1(79),CS         CLEAR
         MVI   CS,C'('             OPEN PAREN - NEXT CARD
         LA    R6,CS+1             RESET CARD POINTER
         PUT   SYSPRINT,PGB
         BCTR  R7,0
P235     SR    R1,R1               *** CLEAR R1
         XC    PAGELEN,PAGELEN     *** CLEAR PAGELEN
         B     P100
NOTOVER  ST    R1,PAGELEN          CURRENT PAGE LEN
         MVC   0(8,R6),TN          MOVE MODULE NAME TO PUNCH
P250     LA    R6,1(,R6)           NEXT CHAR (KNOW FIRST WASN'T BLANK
         CLI   0(R6),X'40'      Q. BLANK
         BNE   P250                NO... CONTINUE SEARCH
         MVI   0(R6),C','          YES... COMMA AFTER NAME
         LA    R6,1(,R6)           POINT PAST COMMA
         C     R6,CE            Q. CARD FILLED
         BL    P300                NO... GO PRINT
         PUT   SYSWORK,CS         PUNCH CARD IMAGE
         LA    R6,CS+1             RESET CARD POINTER
         MVI   CS,X'40'            INSURE LEADING PAREN GONE
         MVC   CS+1(79),CS         BLANK REST OF CARD IMAGE
P300     EQU   *
         MVC   PN,TN               PRINT MODULE NAME
         UNPK  PS(7),TS+1                START ADDRESS
         MVI    TF,X'FF'
         UNPK  PL(7),TL+1                LENGTH
         TR    PT,TOHEX-240
         MVI   PS+6,X'40'          BLANK GARBAGE
         MVI   PL+6,X'40'          BLANK GARBAGE
         MVC   PF(18),=X'40202020206B2020214020214B2020202020'
         L     R8,TF               GET NUMBER FAULTS
         LA    R8,0(,R8)
         CVD   R8,DWD                              IN DECIMAL
         ED    PF,DWD+4                            READABLE
         L     R8,TFL              GET FACTOR
         CVD   R8,DWD                         IN DECIMAL
         ED    PFL,DWD+4                      READABLE
         BCTR  R7,0
         LTR   R7,R7
         BP    P400
         LA    R7,56
         PUT   SYSPRINT,ST               SUBTITLE
P400     EQU   *
         PUT   SYSPRINT,P          PRINT DETAIL LINE
         L     R1,PAGELEN
         N     R1,=F'4095'
         BZ    P231
         ST    R1,PAGELEN
P480     CLI   FITNOFIT,255
         BE    P225
         B     P100                LOOK FOR NEXT ENTRY
         EJECT
P900     BCTR  R6,0                PUNCH LAST CARD BACK UP POINTER
         MVI   0(R6),C')'          MOVE IN TERMINATING PAREN
         MVI   1(R6),C','          WANT COMMA ON LAST CARD
         PUT   SYSWORK,CS
         CLOSE SYSPRINT
         CLOSE SYSWORK
         EJECT
         OPEN  (SYSTEMP,(RDBACK),SYSPUNCH,(OUTPUT))
         LA    R4,105
         TM    SYSTEMP+48,X'10'     SUCCESSFUL OPEN
         BZ    ABEND
         LA    R4,106
         TM    SYSPUNCH+48,X'10'
         BZ    ABEND
S100     L     R9,TAB              USE TABLE TO STORE CARDS
S110     GET   SYSTEMP,(R9)       READ PAGE GROUP BACKWARDS
         CLI   0(R9),C'('        Q. FIRST CARD IN GROUP
         BE    S150                YES...GO PUNCH
         CLI   0(R9),C' '        Q. INTERMEDIATE CARD
         BE    S130                YES...SAVE IT
         CLI   0(R9),C')'        Q. LAST CARD IN PAGE GROUP
         BNE   ZERO                NO...CONFUSED--BLOWUP
         OI    CPARSW,X'F0'        SET CLOSE PAREN SW TO TRUE     ***HW
         CLI   1(R9),C','        Q. LAST PAGE-GROUP               ***HW
         BE    S110                NO, BYPASS CARD IN ERROR       ***HW
         OI    CPARSW,X'0F'        YES, SET SWITCH LAST PAGE-GROUP***HW
         B     S110                BYPASS CARD IN ERROR
*  ERROR IN CARD IS IT IS A CARD WITH ONLY A OPEN PAREN AND COMMA
S130     LA    R6,54(R9)           EARLIEST BLANK POS
         LA    R9,80(R9)           LOC NEXT CARD
         TM    CPARSW,X'F0'      Q. NEED CLOSE PAREN              ***HW
         BNO   S110                NO...BYPASS
         NI    CPARSW,X'0F'        SET CLOSE PAREN SW TO FALSE    ***HW
S135     CLI   0(R6),X'40'       Q. BLANK
         BNE   S140                NO...TRY NEXT POS
         BCTR  R6,0                BACK ONE
         MVI   0(R6),C')'          CLOSE PAREN
         TM    CPARSW,X'0F'      Q. LAST PAGE GROUP               ***MG
         BO    S110                 YES, NO COMMA                 ***MG
         MVI   1(R6),C','          COMMA
         B     S110                GET NEXT CARD
S140     LA    R6,1(,R6)          NEXT CARD POS
         CR    R6,R9             Q. AT NEXT CARD
         BL    S135                NO...CONTINUE SEARCH
MESSUP   DC    H'0'                ERROR IN SEARCHING CARD
S150     TM    CPARSW,X'F0'       Q. STILL NEED CLOSE PAR         ***HW
         BNO   S154                 NO...DO NOT SET UP
         LA    R6,53(R9)            ADDR OF ONLY CARD IN GROUP
S152     LA    R6,1(R6)             EARLIEST BLANK POS
         CLI   0(R6),X'40'        Q. BLANK
         BNE   S152                 NO...TRY NEXT POS
         BCTR  R6,0                 BACK ONE
         MVI   0(R6),C')'           CLOSE PAREN
         TM    CPARSW,X'0F'       Q. LAST PAGE-GROUP              ***HW
         BO    S153                 YES, NO COMMA                 ***HW
         MVI   1(R6),C','           COMMA
S153     EQU   *                                                  ***HW
         NI    CPARSW,X'00'         CLOSE PAR SW TO FALSE         ***HW
         B     S156                 MUST BE ONLY ONE CARD
S154     L     R7,TAB               LAST CARD IN GROUP
         CR    R7,R9              Q.FIRST AND LAST THE SAME
         BE    S156                YES...NO SWITCH
         XC    0(80,R7),0(R9)      SWITCH
         XC    0(80,R9),0(R7)             FIRST AND
         XC    0(80,R7),0(R9)                       LAST
S156     L     R7,TAB               FIRST CARD
         LA    R8,80                LEN OF CARD
S160     PUT   SYSPUNCH,0(R7)       PUNCH CARD
         BXLE  R7,R8,S160           LOOP THRU PAGE GROUP
         B     S100                 NEXT GROUP
S900     CLOSE SYSTEMP
         CLOSE SYSPUNCH
         EJECT
         L     R13,4(R13)
         RETURN (14,12),RC=0
         SPACE 3
         DS    0H
ABEND    EQU *
         ABEND (4),DUMP,STEP,USER
P        EQU   *                   PRINT LINE
         DC    X'40'               SINGLE SPACE
PN       DS    CL8                 MODULE NAME
         DC    CL1' '
PT       DS    0CL14               TRANSLATE TO HEX
PS       DS    CL7                      MODULE START ADDRESS
PL       DS    CL7                      LENGTH OF MPOULE
PE       DS    0CL18               MOVE EDIT MASK HERE
PF       DS    CL9                 NUMBER OF FAULTS
PFL      DS    CL9                 FACTOR
         DC    CL2' '
WLEN     DC    CL20' '
BLANKS   DC    CL20' '
T        DC    C'1OTHER='
TASCCTR  DC    X'40206B2020206B202021'
         DC    C',CSA='
TCSACTR  DC    X'40206B2020206B202021'
         DC    C',LPA='
TLPACTR  DC    X'40206B2020206B202021'
         DC    C'.                        '
LPATOTAL DC    PL5'0'
ST2      DC    C'0        LPASIZE IS '
LPASIZE  DC    X'402020206B2020206B202021'
         DC    C'   BYTES                                       '
         DC    23C' '
ST       DC    C'0    NAME  START LENGTH     COUNTS      C/L'
         DC    CL23' '
PGB      DC    32C' ',8C'*',30C' '
PI       EQU   *                   PRINT IMAGE FROM SYSLPA HERE
CC       DS    C                   PRINTER CARRAIGE CONTROL CHARACTER
S1       DS    CL60                SEGMENT ONE
S2       DS    CL60                SEGMENT TWO
CS       DC    C'('
CEN      DC    79X'40'
CE       DC    A(CS+54)
PAGELEN  DC    F'0'
TOHEX    DC    C'0123456789ABCDEF'
TOBIN    DC    256X'00'
         ORG   TOBIN+X'C1'         POSITION TO 'A'
         DC    X'0A0B0C0D0E0F'     TRANSLATE A-F
         ORG   TOBIN+X'F0'         POSITION AT '0'
         DC    X'00010203040506070809'
         ORG
         DS    0F
DWD      DS    D
TAB      DC    A(0,TBL,0)
         DS    0F
ZERO     DC    F'0'
SAVE9    DC    F'0'
SPALOW   DC    X'00000000'
LPALOW   DC    X'7FFFFFFF'
LPAHI    DC    X'00000000'
HIVALUE  DC    X'7FFFFFFF'
LPAT     DC  PL3'0'
FITNOFIT DC    X'00'
SORTTEST DC    H'0'
ASCTR    DC    PL4'0'
CSACTR   DC    PL4'0'
LPACTR   DC    PL4'0'
CPARSW   DC    X'00'
FIRSTPG  DC    X'FF'     FIRST PAGE GROUP SW=TRUE
         LTORG
         PRINT NOGEN
SYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=PM,RECFM=FBA,LRECL=60,   X
               BLKSIZE=60
SYSLPA   DCB   DDNAME=SYSLPA,DSORG=PS,MACRF=GM,RECFM=FBA,EODAD=IT900
SYSWORK  DCB   DDNAME=SYSTEMP,DSORG=PS,MACRF=PM,RECFM=FB,LRECL=80,     X
               BLKSIZE=3040
SYSPSW DCB DDNAME=SYSPSW,DSORG=PS,MACRF=GL,RECFM=FB,EODAD=R900
SYSTEMP  DCB   DDNAME=SYSTEMP,DSORG=PS,MACRF=GM,EODAD=S900
SYSPUNCH DCB   DDNAME=SYSPUNCH,DSORG=PS,MACRF=PM
TBS      DSECT                     TABLE ENTRY FOR LPA MODULE
TN       DS    CL8                 NAME
TS       DS    CL4                 START ADDRESS
TL       DS    CL4                 LENGTH
TF       DS    CL4                 NUMBER OF FAULTS
TFL      DS    F                   FAULTS DIVIDED BY LENGTH
TBL      EQU   *-TBS               LENGTH OF TABLE ENTRY
LPAE     DSECT                     LPA LIST PRINT SEGMENT
LN       DS    CL8                 MODULE NAME
         DS    C
LX       DS    0CL17               TRANSLATE NEXT 17 BYTES
LS       DS    CL6                 START ADDRESS
         DS    CL4
LL       DS    CL6                 LENGTH
         DS    C
         END
