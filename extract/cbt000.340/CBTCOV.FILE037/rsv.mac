RSV      TITLE 'IGCZR03D - RESERVE DISPLAY COMMAND'
&TSSO    SETC  'YES'               YES FOR TSO/TSSO COMMAND *LBD 11/85*
***********************************************************************
*
*        OPERATOR COMMAND TO DISPLAY ALL RESERVE REQUESTS IN SYSTEM
*
*        STATUS: OS/VS2 RELEASE 3.8 (SE2 OPTIONAL)
*
*        ON ENTRY:
*                 R2  = ADDRESS OF XSA (EXTENDED SAVE AREA)
*                 R15 = ADDRESS OF ENTRY POINT
*
*        COMMAND FORMAT:
*
*              RSV                      DISPLAY ALL RESERVE REQUESTS
*                                       OPERAND DEBUG WILL CAUSE SDUMP
*                                       IF RESERVES ARE FOUND
*
*
*        OUTPUT: OUTPUT WILL BE DISPLAYED ON INPUT CONSOLE & HARDCOPY
*
*
*        MESSAGE FORMAT:
*
*             DEV SERIAL O JOBNAME  ASID MAJOR/MINOR ENQ NAMES
*                        O     = DEVICE OWNED BY THIS SYSTEM
*                        P     = RESERVE PENDING (DEV BUSY)
*                        BLANK = NO I/O ISSUED SINCE RESERVE MACRO
*
*
*        ATTRIBUTES: REENTRANT
*
*
*        FOR SP1.3 THE GQSCAN MACRO IS USED TO DETERMINE ENQ CHAINS
*         A GENERAL GQSCAN IS ISSUED TO OBTAIN ALL RESERVE BLOCKS
*         THE SCANAREA IS THEN BROWSED TO EXTRACT THE APPROPRIATE
*         INFORMATION . THE EXTRACTED INFO IS LOADED INTO THE BUFFER
*         TABLE USING BASICALLY THE SAME LOGIC AS WAS USED UNDER
*         PREVIOUS OPERATING SYSTEMS.
*
*        SPECIFIC AREAS OF CHANGE FOR SP1.3
*         THE GETMAIN WAS INCREASED TO INCLUDE ALL THE SAVE AREAS
*         AND THE SCANAREA USED BY THE GQSCAN ROUTINE.
*         THE CORESIZ USED HAS BEEN INCREASED TO INCLUDE THE NEW
*         SIZE.
*         THE QEL SEARCH WAS CHANGED TO USE THE SCANAREA USING THE
*         ISGRIB MACRO (RIB,RIBVAR,RIBE).
*
*        MACRO USAGE
*         IEEXSA     (AMVS38G.AMODGEN - AVR38F)
*         IEFUCBOB   (AMVS38G.AMODGEN - AVR38F)
*         ISGRIB     (SYS1.MACLIB)
*         IHASDUMP   (SYS1.MACLIB)
*         BUFFER     (INTERNALLY DEFINED)
*
*        REGISTER USAGE DURING GQSCAN
*         R0    SYSTEM,I/O PROCESSING
*         R1    SYSTEM,I/O PROCESSING
*         R2    BASE REGISTER FOR XSA
*         R3    RIBE COUNTER
*         R4    CONSOLE ID
*         R5    RIBNR COUNTER
*         R6    BASE REGISTER FOR RIB
*         R7    BASE REGISTER FOR RIBVAR
*         R8    BASE REGISTER FOR RIBVAR
*         R9    BASE REGISTER FOR SCANBUFF
*         R10   BASE REGISTER FOR BUFFER
*         R11   END OF BUFFER ADDRESS
*         R12   BASE REGISTER FOR IGCZR03D
*         R13   GQSCAN REQUIRED SAVE AREA
*         R14   USED TO ICM/STCM OF ASID
*         R15   BASE REGISTER FOR UCB/RETURN CODE FROM GQSCAN
*
*        REGISTER USAGE DURING FORMAT (OUTPUT)
*         R0    SYSTEM,I/O PROCESSING
*         R1    SYSTEM,I/O PROCESSING
*         R2    UNUSED
*         R3    UNUSED
*         R4    BASE REGISTER FOR BUFFER
*         R5    MESSAGE LENGTH
*         R6    NEXT ENTRY POINTER
*         R7    UNUSED
*         R8    UNUSED
*         R9    UNUSED
*         R10   UNUSED
*         R11   OUTPUT BUFFER LENGTH/BAL REGISTER
*         R12   BASE REGISTER FOR IGCZQ03D
*         R13   UNUSED
*         R14   UNUSED
*         R15   UNUSED
*
*        THIS PROGRAM LAST MODIFIED BY R. SUNDELL  01/06/83
*
***********************************************************************
         EJECT
         AIF   ('&TSSO' EQ 'NO').NOTSSO                     *LBD 11/85*
IGCZR03D MENTER 12,NOEQU,COM=RSV,CP=YES                     *LBD 11/85*
         L     R0,GSIZE                                     *LBD 11/85*
         GETMAIN R,LV=(0)                                   *LBD 11/85*
         LR    R2,R1                                        *LBD 11/85*
         USING XSA,R2                                       *LBD 11/85*
         AGO   .SKTSSO                                      *LBD 11/85*
.NOTSSO  ANOP                                               *LBD 11/85*
IGCZR03D CSECT
         LR    R12,R15            SET ADDRESSABILITY
         USING IGCZR03D,R12
         USING XSA,R2
         SPACE
         MODID BRANCH=YES
         MVI   CNTLFLAG,0          ZERO CONTROL FLAG
         L     R1,XAL              LOAD PARM ADDRESS
         LA    R1,0(R1)            ZERO 1ST BYTE
         LTR   R1,R1               IS PARM SPECIFIED
         BZ    NOPARM              IF NOT SKIP CHECK
         CLC   DEBUG,0(R1)         IS PARM DEBUG
         BNE   NOPARM              IF NOT SKIP NEXT ISN
         MVI   CNTLFLAG,DUMPFLAG   SET DUMP FLAG
NOPARM   EQU   *
         SR    R4,R4              ZERO CONSOLE ID REG
         IC    R4,XAU             LOAD CONSOLE ID
.SKTSSO  ANOP                                               *LBD 11/85*
         SPACE
***********************************************************************
*
*        GET CORE FOR WORK TABLE
*
***********************************************************************
         SR    R0,R0
         L     R0,CORESIZE
         GETMAIN R,LV=(0)
         ST    R1,CORE            SAVE GETMAIN ADDR
         SPACE
         EJECT
***********************************************************************
*
*        COPY ALL RESERVE REQUEST DATA TO BUFFER
*
***********************************************************************
         SPACE
         USING RIB,R6
         USING RIBVAR,R7
         USING RIBE,R8
         USING BUFFER,R10
         SPACE
         L     R10,CORE           LOAD START OF BUFFER
         LA    R11,BUFFER+WORKSIZE-1-BUFLN  FIND LAST ENTRY ADDR
         LA    R9,SCANBUFF        GQSCAN BUFFER AREA
         USING SCANBUFF,R9
         EJECT
***********************************************************************
*
*        G Q S C A N
*
***********************************************************************
         SPACE
         LR    R8,R13             SAVE CURRENT R13
         LA    R13,SCANSAVE       GQSCAN SAVE AREA
         LA    R6,SCANAREA        GQSCAN RETURN AREA
         SPACE
         GQSCAN AREA=((R6),102400),                                    X
               REQLIM=MAX,                                             X
               SCOPE=ALL,                                              X
               RESERVE=YES,                                            X
               MF=(E,SCANPARM)
         EJECT
***********************************************************************
*
*        BRANCH ACCORDING TO RETURN CODE
*
***********************************************************************
         SPACE
         LR    R13,R8             RETURN SAVE AREA
         ST    R0,RIBSIZES        SAVE RIBSIZE,RIBESIZE
         ST    R1,RIBNR           SAVE NUMBER OF RIBS
         LR    R5,R1              LOOP BY NUMBER OF RIBS RETURNED
         LA    R8,BRTABLE         ADDRESS OF BRANCH TABLE
         B     0(R15,R8)          BRANCH ACCORDING TO RETURN CODE
         SPACE
BRTABLE  EQU   *
         B     CODE00             ALL RIBS RETURNED IN GIVEN AREA
         B     CODE04             NOT MATCH OF RESNAME (NO RESERVES)
         B     CODE08             ALL RIBS WOULD NOT FIT IN AREA
         B     CODE0C             ABNORMAL GQSCAN AREA
         B     CODE10             INVALID SYSNAME
         SPACE
***********************************************************************
*
*        LOOP THRU MAJOR RIB CHAIN
*
***********************************************************************
CODE08   EQU   *
         AIF   ('&TSSO' EQ 'YES').TSSO1                     *LBD 11/85*
         LR    R0,R4               LOAD CONSOLE ID REG
         WTO   MF=(E,MSG7)         DISPLAY TOKEN MSG
         AGO   .SKTSSO1                                     *LBD 11/85*
.TSSO1   ANOP                                               *LBD 11/85*
         LA    R1,MSG7                                      *LBD 11/85*
         BAL   R11,MSGRTN                                   *LBD 11/85*
.SKTSSO1 ANOP                                               *LBD 11/85*
CODE00   EQU   *
MAJLOOP  EQU   *
         LR    R7,R6               LOAD RIB BASE
         AH    R7,RIBSIZE          DISPLACE TO RIBVAR
         LR    R8,R7               LOAD RIBVAR BASE
         AH    R8,RIBVLEN          DISPLACE TO FIRST RIBE
         SR    R3,R3               CLEAR RIBE COUNT REGISTER
         L     R3,RIBNRIBE         LOAD NUMBER OF RIBES FOR THIS RIB
         SPACE
***********************************************************************
*
*        LOOP THRU RIBE CHAIN AND CHECK FOR RESERVE REQUESTS
*
***********************************************************************
         SPACE
RIBELOOP TM    RIBERFLG,RIBERESV   IS THIS A RESERVE REQUEST
         BZ    NEXTRIBE            IF NOT SKIP REQUEST
         L     R15,RIBEUCB         LOAD RIBE UCB ADDRESS
         USING UCB,R15
         EJECT
***********************************************************************
*
*        SAVE RESERVE REQUEST DATA FOR DISPLAY IN BUFFER
*
***********************************************************************
         SPACE
SAVEDATA DS    0H
         LA    R11,BUFFER+WORKSIZE-1-BUFLN  FIND LAST ENTRY ADDR
         CR    R10,R11             WILL RECORD EXCEED BUFFER
         BH    TABLOVFL            IF YES GET OUT OF LOOP
         SPACE
SAVEDEV  MVC   BUFDEV,UCBNAME      MOVE DEVICE ADDR TO BUFFER
SAVEVOL  MVC   BUFVOL,UCBVOLI      MOVE VOLUME SERIAL TO BUFFER
SAVEFLAG MVC   BUFFLAG,UCBFLB      MOVE UCB FLAG BYTE TO BUFFER
         NI    BUFFLAG,UCBRESVH    CLEAR ALL BUT RESERVE HAVE BIT
         BNZ   SAVEASID            IF OWNED SKIP PENDING CHECK
         MVC   BUFFLAG,UCBFL4      MOVE UCB FLAG BYTE TO BUFFER
         NI    BUFFLAG,UCBRESVP    CLEAR ALL BUT RESERVE PENDING BIT
SAVEASID SR    R14,R14             ZERO INDEX REG
         ICM   R14,3,RIBEASID      LOAD ASID NUMBER
         STCM  R14,3,BUFASID       MOVE ASID TO BUFFER
SAVEJOBN MVC   BUFJOBNM(8),RIBEJBNM MOVE JOB OR START NAME TO BUFFER
SAVEMAJN MVC   BUFMAJNM,RIBQNAME   SAVE MAJOR NAME
SAVMINOR LA    R15,L'BUFMINNM      LOAD BUFFER NAME LENGTH
         SR    R14,R14             ZERO LENGTH REG
         ICM   R14,1,RIBRNMLN      LOAD LENGTH OF MINOR RIB NAME
         CR    R14,R15             IS LENGTH EXCESSIVE
         BNH   SAVMIN              IF NOT GO SAVE MINOR NAME
         OI    BUFFLAG,BUFTRUNC    SET MINOR NAME TRUNCATED FLAG
TRUNKMIN LR    R14,R15             IF YES TRUNCATE NAME
SAVMIN   STC   R14,BUFMINLN        PUT NAME LENGTH IN TABLE
         BCTR  R14,0               SET FOR EXECUTE INST
         EX    R14,SAVEMIN         SAVE MINOR RIB NAME
         LA    R10,BUFNEXT         BUMP BASE TO NEXT ENTRY
         MVI   BUFFLAG,BUFEND      SET LAST ENTRY FLAG
         SPACE
NEXTRIBE AH    R8,RIBESIZE         DISPLACE TO NEXT RIBE
         BCT   R3,RIBELOOP         LOOP THRU ALL RIBES
         SPACE
NEXTMAJ  EQU   *
         SR    R3,R3               CLEAR R3
         LA    R3,R6               BASE OF CURRENT RIB
         L     R3,RIBNRIBE         LOAD NUMBER OF RIBES
         MH    R3,RIBESIZE         TIMES SIZE OF RIBE
         AH    R3,RIBVLEN          PLUS LENGTH OF VARIABLE SECTION
         AH    R3,RIBSIZE          PLUS LENGTH OF FIXED SECTION
         AR    R6,R3               DISPLACE TO NECT RIB
         BCT   R5,MAJLOOP          LOOP THRU ALL MAJOR RIBS
         SPACE
***********************************************************************
*
*        ALL DATA COMPLETE DISPLAY RESULTS
*
***********************************************************************
DATACOMP EQU   *
         C     R10,CORE            WERE ANY RESERVES FOUND
         BE    NORESERV            IF NOT DISPLAY MESSAGE
         B     FORMAT              GO DISPLAY RESULTS
         SPACE
SAVEMIN  MVC   BUFMINNM(0),RIBRNAME MOVE MINOR NAME TO BUFFER
         EJECT
***********************************************************************
*
*        DISPLAY ERROR MESSAGES
*
***********************************************************************
         SPACE 2
CODE0C   EQU   *
         LA    R1,MSG2             GQSCAN ABNORMAL ERROR
         B     ERRWTO
         SPACE 2
CODE10   EQU   *
         LA    R1,MSG3             INVALID SYSNAME IN GQSCAN PARM
         B     ERRWTO
         SPACE 2
CODE04   EQU   *
NORESERV LA    R1,MSG1             NO RESERVE REQUESTS
         SPACE
ERRWTO   LR    R0,R4               LOAD CONSOLE ID REG
         SPACE 2
         AIF   ('&TSSO' EQ 'YES').TSSO2                     *LBD 11/85*
         WTO   MF=(E,(1))          DISPLAY ERROR MSG
         AGO   .SKTSSO2                                     *LBD 11/85*
.TSSO2   ANOP                                               *LBD 11/85*
         BAL   R11,MSGRTN                                   *LBD 11/85*
.SKTSSO2 ANOP                                               *LBD 11/85*
         B     CLEANUP             GO TERMINATE
         SPACE 2
*        DISPLAY ERROR MSG THEN RESULTS
         SPACE
TABLOVFL EQU   *
         SPACE
         AIF   ('&TSSO' EQ 'YES').TSSO3                     *LBD 11/85*
         LR    R0,R4               LOAD CONSOLE ID REG
         WTO   MF=(E,MSG4)         DISPLAY DATA LOST MSG
         AGO   .SKTSSO3                                     *LBD 11/85*
.TSSO3   ANOP                                               *LBD 11/85*
         LA    R1,MSG4                                      *LBD 11/85*
         BAL   R11,MSGRTN                                   *LBD 11/85*
.SKTSSO3 ANOP                                               *LBD 11/85*
*                                  THEN DISPLAY RESULTS
         EJECT
***********************************************************************
*
*        DISPLAY DATA COLLECTED
*
***********************************************************************
FORMAT   EQU   *
         L     R10,CORE            LOAD START OF BUFFER
         ICM   R1,15,MSG1          LOAD MSG LENGTH & FLAGS
         STCM  R1,15,MSGLN         SET MSG LENGTH & FLAGS
***********************************************************************
*
*        DISPLAY HEADINGS
*
***********************************************************************
         SPACE
         AIF   ('&TSSO' EQ 'YES').TSSO4                     *LBD 11/85*
FMTHEAD  LR    R0,R4               LOAD CONSOLE ID REG
         WTO   MF=(E,MSG5)         DISPLAY HEADING
         LR    R0,R4               LOAD CONSOLE ID REG
         WTO   MF=(E,MSG6)         DISPLAY HEADING
         AGO   .SKTSSO4                                     *LBD 11/85*
.TSSO4   ANOP                                               *LBD 11/85*
FMTHEAD  LA    R1,MSG5                                      *LBD 11/85*
         BAL   R11,MSGRTN                                   *LBD 11/85*
         LA    R1,MSG6                                      *LBD 11/85*
         BAL   R11,MSGRTN                                   *LBD 11/85*
.SKTSSO4 ANOP                                               *LBD 11/85*
         SPACE
***********************************************************************
*
*        FORMAT & DISPLAY RESERVE REQUESTS
*
***********************************************************************
         SPACE
         MVI   MSGBL1,BLANK        BLANK DELIMITER
         MVI   MSGBL2,BLANK        BLANK DELIMITER
         MVI   MSGBL3,BLANK        BLANK DELIMITER
         MVI   MSGBL4,BLANK        BLANK DELIMITER
         MVI   MSGSL1,SLASH        SET MAJOR / MINOR DELIMITER
         SPACE
FMTLOOP  MVC   MSGDEV,BUFDEV       MOVE DEVICE ADDR TO MSG
         MVC   MSGVOL,BUFVOL       MOVE VOLUME SERIAL TO MSG
         MVI   MSGOFLAG,BLANK      BLANK RESERVE OWNERSHIP INDICATOR
         TM    BUFFLAG,UCBRESVH    IS DEVICE OWNED BY THIS SYSTEM
         BZ    FMTPEND             IF NOT GO CHECK RESERVE PENDING
FMTOWNED MVI   MSGOFLAG,O          INDICATE OWNED BY THIS SYSTEM
         B     FMTJOBNM            GO LOAD JOBNAME
FMTPEND  TM    BUFFLAG,UCBRESVP    IS RESERVE PENDING
         BZ    FMTJOBNM            IF NOT SKIP RESERVE OWNERSHIP
         MVI   MSGOFLAG,P          INDICATE RESERVE WAITING
FMTJOBNM MVC   MSGJOBNM,BUFJOBNM   MOVE JOBNAME TO MSG
         UNPK  MSGASID(5),BUFASID(3)  CONVERT ASID
         TR    MSGASID,HEXTABLE    CONVERT ALPHA
         MVI   MSGBL5,BLANK        BLANK GARGABE BYTE
         MVC   MSGMAJNM,BUFMAJNM   GET MAJOR NAME FROM TABLE
         SR    R1,R1               ZERO LENGTH REG
         IC    R1,BUFMINLN         LENGTH OF MINOR NAME
         BCTR  R1,0                SET FOR EXECUTE INST
         MVC   MSGMINNM,BUFMINNM   MOVE MINOR NAME TO MSG
         TM    BUFFLAG,BUFTRUNC    WAS MINOR NAME TRUNCATED
         BZ    *+8                 IF NOT SKIP NEXT ISN
         MVI   MSGTRUNC,STAR       SET TRUNCATED MINOR NAME FLAG
         LA    R1,MSGSTDLN(R1)     LOAD TOTAL MSG LENGTH
         STH   R1,MSGLN            SET MSG LENGTH
         SPACE
*        DISPLAY MSG LINE
         SPACE
         AIF   ('&TSSO' EQ 'YES').TSSO6                     *LBD 11/85*
FMTPRINT LR    R0,R4               LOAD CONSOLE ID REG
         WTO   MF=(E,WTOMSG)       DISPLAY COMPLETE MSG
         AGO   .SKTSSO6                                     *LBD 11/85*
.TSSO6   ANOP                                               *LBD 11/85*
         LA    R1,WTOMSG                                    *LBD 11/85*
         BAL   R11,MSGRTN                                   *LBD 11/85*
.SKTSSO6 ANOP                                               *LBD 11/85*
         LA    R10,BUFNEXT         BUMP BASE TO NEXT ENTRY
         CLI   BUFFLAG,BUFEND      IS THIS END OF DATA
         BNE   FMTLOOP             IF NOT LOOP THRU ALL ENTRIES
         SPACE
         AIF   ('&TSSO' EQ 'YES').SKDUMP                    *LBD 11/85*
*        ISSUE SVCDUMP IF DEBUG IS SPECIFIED
         SPACE
CHKDUMP  TM    CNTLFLAG,DUMPFLAG   IS DEBUG DUMP SPECIFIED
         BZ    CLEANUP             IF NOT SKIP IT
         XC    XASAVSTD(SDMPLN),XASAVSTD ZERO PARM LIST
DUMPXSA  ST    R2,XASAVSDK         STORE START OF XSA
         LA    R1,XASIZE+120(R2)   FIND END OF XSA ADDR + MAX BUF
         ST    R1,XASAVSDL         STORE END OF XSA
DUMPWORK ST    R10,XASAVSDM        STORE START OF WORKAREA
         LA    R1,WORKSIZE(R10)    FIND END OF WORKAREA
         ST    R1,XASAVSDN         STORE END OF WORKAREA
         MVI   XASAVSDN,X'80'      SET END OF LIST INDICATOR
DUMP     SDUMP HDR='IGCZR03D RESERVE COMMAND',SUMLIST=XASAVSDK,        C
               SDATA=(NUC,LSQA,SUM),                                   C
               MF=(E,XASAVSTD)
.SKDUMP  ANOP                                               *LBD 11/85*
         EJECT
***********************************************************************
*
*        RELEASE ALL CORE AND EXIT
*
***********************************************************************
CLEANUP  EQU   *
         AIF   ('&TSSO' EQ 'YES').SKFREE                    *LBD 11/85*
         L     R0,GSIZE                                     *LBD 11/85*
         FREEMAIN R,LV=(0),A=(2)                            *LBD 11/85*
.SKFREE  ANOP                                               *LBD 11/85*
         SR    R0,R0
         SR    R1,R1
         L     R1,CORE
         L     R0,CORESIZE
         FREEMAIN R,LV=(0),A=(1)
         AIF   ('&TSSO' EQ 'YES').MLEAVE                    *LBD 11/85*
         SVC   EXIT                RETURN TO SYSTEM
         AGO   .SKLEAVE                                     *LBD 11/85*
.MLEAVE  ANOP                                               *LBD 11/85*
         MLEAVE                                             *LBD 11/85*
.SKLEAVE ANOP                                               *LBD 11/85*
         AIF   ('&TSSO' EQ 'NO').NOMSG                      *LBD 11/85*
         EJECT                                              *LBD 11/85*
MSGRTN   DS    0H                                           *LBD 11/85*
         MVC   PLINE+4,PBLANKS                              *LBD 11/85*
         LH    R3,0(R1)            * LOAD LENGTH            *LBD 11/85*
         SH    R3,=H'05'           * -4 (WTO HDR) -1 (MVC)  *LBD 11/85*
         EX    R3,MVCPLINE         * MOVE TO PUTLINE        *LBD 11/85*
         LA    R3,5(R3)            * ADD THE 5 BACK         *LBD 11/85*
         STH   R3,PLINE            * STORE PUTLINE LEN      *LBD 11/85*
         PUTLINE PARM=PUTBLOK,OUTPUT=(PLINE,TERM,SINGLE,    *LBD 11/85*X
               DATA),MF=(E,IOPLADS)                         *LBD 11/85*
         BR    R11                                          *LBD 11/85*
MVCPLINE MVC   PLINE+4(0),4(R1)    *** EXECUTED             *LBD 11/85*
PLINE    DC    H'80',H'00'                                  *LBD 11/85*
         DC    CL80' '                                      *LBD 11/85*
PBLANKS  DC    CL80' '                                      *LBD 11/85*
.NOMSG   ANOP                                               *LBD 11/85*
         EJECT
***********************************************************************
*
*        CONSTANTS, TABLES, ETC.
*
***********************************************************************
         REGEQU
EXIT     EQU   3                   EXIT SVC NUMBER
BLANK    EQU   C' '
SLASH    EQU   C'/'                MAJOR / MINOR DELIMITER
STAR     EQU   C'*'                TRUNCATED MINOR NAME INDICATOR
O        EQU   C'O'                RESERVE OWNED INDICATOR
P        EQU   C'P'                RESERVE PENDING INDICATOR
WORKSIZE EQU   2048                SIZE OF BUFFER
         DS    0F                                           *LBD 11/85*
         AIF   ('&TSSO' EQ 'YES').SKCOR                     *LBD 11/85*
CORESIZE DC    X'FF',AL3(SCANEND-SCANCORE) TOTAL GETMAIN AREA
.SKCOR   ANOP                                               *LBD 11/85*
         AIF   ('&TSSO' EQ 'NO').NOGS                       *LBD 11/85*
GSIZE    DC    A(WSIZE-XSA)                                 *LBD 11/85*
CORESIZE DC    X'00',AL3(SCANEND-SCANCORE)  GETMAIN AREA    *LBD 11/85*
.NOGS    ANOP                                               *LBD 11/85*
BLANKS   DC    CL8' '              BLANK NAME FIELD
DEBUG    DC    C'DEBUG'            DEBUG DUMP PARM
HEXTABLE EQU   *-240
         DC    C'0123456789ABCDEF' HEX/ALPHA XLATE TABLE
         LTORG
         EJECT
*        PROGRAM MESSAGES
*
MSG1     DC    Y(M1-*),X'6000'
         DC    C'*** NO RESERVES ACTIVE ***'
M1       EQU   *
         SPACE
MSG2     DC    Y(M2-*),X'6000'
         DC    C'*** GQSCAN ABNORMAL ERROR ***'
M2       EQU   *
         SPACE
MSG3     DC    Y(M3-*),X'6000'
         DC    C'*** INVALID SYSNAME ***'
M3       EQU   *
         SPACE
MSG4     DC    Y(M4-*),X'6000'
         DC    C'*** LOST DATA...MAXIMUM NUMBER OF ENTRIES EXCEEDED***'
M4       EQU   *
         SPACE
MSG5     DC    Y(M5-*),X'6000'
         DC    C'DEV SERIAL O JOBNAME  ASID MAJOR/MINOR ENQ NAMES'
M5       EQU   *
         SPACE
MSG6     DC    Y(M6-*),X'6000'
         DC    C'----------------------------------------------'
M6       EQU   *
MSG7     DC    Y(M7-*),X'6000'
         DC    C'*** ALL RIBS NOT RETURNED IN THIS REQUEST ***'
M7       EQU   *
PATCH    DC    8D'0'               PROGRAM PATCH AREA
         EJECT
*        DATA BUFFER
         SPACE
BUFFER   DSECT
BUFFLAG  DS    X                   BUFFER END FLAG
BUFEND   EQU   X'80'               END OF DATA FLAG
BUFTRUNC EQU   X'40'               TRUNCATED MINOR NAME
BUFPNDFG EQU   X'20'               RSV PENDING FLAG (UCBFL4/UCBRESVP)
BUFOWNFG EQU   X'10'               SYSTEM OWNS DEV (UCBFLB/UCBRESVH)
         SPACE
BUFDEV   DS    CL3                 DEV ADDRESS (UCBNAME)
BUFVOL   DS    CL6                 VOLUME SERIAL
BUFJOBNM DS    CL8                 JOBNAME
BUFASID  DS    XL2                 ASID
BUFMAJNM DS    CL8                 MAJOR NAME
BUFMINLN DS    X                   MINOR NAME LENGTH
BUFMINNM DS    CL30                MINOR NAME (TRUNCATED TO 30 CHAR)
         SPACE
BUFNEXT  EQU   *                   NEXT BUFFER ENTRY
BUFLN    EQU   *-BUFFER            LENGTH OF BUFFER ENTYRY
         ORG   BUFFLAG
SCANCORE DS    2048X               BUFFER TABLE AREA
SCANBUFF EQU   *
         DS    0D                  DOUBLE WORD BOUNDARY
* LIST FORM OF GQSCAN MACRO *
SCANPARM GQSCAN MF=L
*
SCANSAVE DS    9D                  GQSCAN REQUIRED SAVE AREA
RIBSIZES DS    0F
RIBSIZE  DS    H                   FIXED RIB SIZE
RIBESIZE DS    H                   LENGTH OF RETURNED RIBES
RIBNR    DS    F                   NUMBER OF RIBS RETURNED IN AREA
         DS    0D                  DOUBLE WORD BOUNDARY
SCANAREA DS    102400X             GQSCAN RETURN AREA
SCANPAD  DS    20D                 JUST TO BE SURE
SCANEND  DS    0D                  END OF SCAN/WORK AREA
         EJECT
XSASECT  DSECT
         IEEXSA
         SPACE 3
         ORG   XAP
CORE     DS    A                   ADDRESS OF GOTTEN DATA BUFFER
         ORG   XAN
CNTLFLAG DS    X                   CONTROL FLAG
DUMPFLAG EQU   X'80'               DEBUG DUMP SPECIFIED
ERRFLAG  EQU   X'40'               ERROR FOUND FLAG
         ORG   XASAVSTD
         SPACE
*        DISPLAY MESSAGE
         SPACE
WTOMSG   DS    0F                  OPERATOR MSG BUFFER
MSGLN    DS    H                   MSG LENGTH
MSGFLAGS DS    XL2                 MSG FLAGS
MSGDEV   DS    CL3                 DEVICE NAME (UCBNAME)
MSGBL1   DS    C                   BLANK
MSGVOL   DS    CL6                 VOLUME SERIAL (UCBVOLI)
MSGBL2   DS    C                   BLANK
MSGOFLAG DS    C                   DEVICE OWNED BY THIS SYSTEM FLAG
MSGBL3   DS    C                   BLANK
MSGJOBNM DS    CL8                 JOBNAME
MSGBL4   DS    C                   BLANK
MSGASID  DS    CL4                 JOB'S ASID
MSGBL5   DS    C                   BLANK
MSGMAJNM DS    CL8                 MAJOR NAME
MSGSL1   DS    C                   SLASH
MSGMINNM DS    CL30                MINOR NAME
MSGTRUNC EQU   *-1                 TRUNCATED MINOR NAME FLAG
MSGSTDLN EQU   MSGMINNM+1-WTOMSG   STANDARD MSG LENGTH
WSIZE    EQU   *                                            *LBD 11/85*
         EJECT
UCB      DSECT
         IEFUCBOB  LIST=YES
         EJECT
         IHASDUMP
SDMPLN   EQU   *-SDUMP
         EJECT
         ISGRIB
         AIF   ('&TSSO' EQ 'NO').NOIOP                      *LBD 11/85*
         EJECT                                              *LBD 11/85*
         IKJIOPL                                            *LBD 11/85*
.NOIOP   ANOP                                               *LBD 11/85*
         END
