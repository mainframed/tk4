         TITLE 'IEESG03D -   #R  DISPLAY DEVICE INTERVENTION REQUIRED'
&TSSO    SETC  'YES'               YES FOR TSSO COMMAND     *LBD 12/85*
***********************************************************************
***********************************************************************
***                                                                 ***
***                                                                 ***
***                                                                 ***
***                     COMMAND  SUB-SYSTEM                         ***
***                  -------------------------                      ***
***                                                                 ***
***                                                                 ***
***       IEESG03D -       #R  DISPLAY DEVICE INTERVENTION REQUIRED ***
***                                                                 ***
***       VERSION -        3.0                                      ***
***                                                                 ***
***       MVS LEVEL -      MVS/XA 2.1.1                             ***
***                                                                 ***
***       UPDATED -        07/21/81   AXC-CBT HANDLE ESTAE          ***
***                        11/09/82   CBT: ENHANCED WITH SP3        ***
***                                     SUPPORT VIA GQSCAN          ***
***                        02/07/84   JAL-SNET UCB SCAN ROUTINE     ***
***                                       MODIFIED FOR XA.          ***
***********************************************************************
***      DOCUMENTATION                                      *LBD 12/85*
*                                                           *LBD 12/85*
*    #R  COMMAND   (DEVICE STATUS COMMAND)                  *LBD 12/85*
*                                                           *LBD 12/85*
*                                                           *LBD 12/85*
*                                                           *LBD 12/85*
*     #R M              PENDING MOUNTS FOR TAPE             *LBD 12/85*
*                                                           *LBD 12/85*
*     #R T              TAPE BUSY AND PENDING MOUNTS        *LBD 12/85*
*                                                           *LBD 12/85*
*     #R D              DISK BUSY AND PENDING MOUNTS        *LBD 12/85*
*                                                           *LBD 12/85*
*     #R P              UNIT RECORD BUSY                    *LBD 12/85*
*                                                           *LBD 12/85*
*     #R B              ALL DEVICE BUSY AND PENDING MOUNTS  *LBD 12/85*
*                                                           *LBD 12/85*
*     #R V              ALL PENDING VARIED OR UNLOADED DEVICESBD 12/85*
*                                                           *LBD 12/85*
*     #R R              ALL RESERVES OUTSTANDING            *LBD 12/85*
*                                                           *LBD 12/85*
*                                                           *LBD 12/85*
*                                                           *LBD 12/85*
*     #R M=XXXXXXXX     PENDING MOUNTS FOR A JOB            *LBD 12/85*
*                                                           *LBD 12/85*
*     #R T=XXXXXXXX     ALLOCATED TAPE DEVICES FOR A JOB    *LBD 12/85*
*                                                           *LBD 12/85*
*     #R D=XXXXXXXX     ALLOCATED DISK DEVICES FOR A JOB    *LBD 12/85*
*                                                           *LBD 12/85*
*     #R P=XXXXXXXX     ALLOCATED UNIT RECORD DEVICES FOR A JOBD 12/85*
*                                                           *LBD 12/85*
*     #R B=XXXXXXXX     ALL ALLOCATED DEVICES FOR A JOB     *LBD 12/85*
*                                                           *LBD 12/85*
*                                                           *LBD 12/85*
*         =XXXXXXXX     FOR ALL COMANDS IS EITHER A 4 DIGIT ASID OR/A5*
*                       1 - 8 DIGIT JOBNAME                 *LBD 12/85*
*                                                           *LBD 12/85*
*                                                           *LBD 12/85*
*                                                           *LBD 12/85*
*     #R S=VVVVVV       DEVICE ON WHICH VOLUME VVVVVV IS MOUNTED 12/85*
*                                                           *LBD 12/85*
*                                                           *LBD 12/85*
*     #R U=NNN          DISPLAY SPECIFIED -                 *LBD 12/85*
*                                                           *LBD 12/85*
*                           DEVICE          (NNN)           *LBD 12/85*
*                           CONTROL UNIT    (NN)            *LBD 12/85*
*                           CHANNEL         (N)             *LBD 12/85*
*                                                           *LBD 12/85*
*                                                           *LBD 12/85*
***********************************************************************
*    R1
*    R2   -  BASE REG FOR XSA AREA
*    R3
*    R4   -  UCB + CVT CNTL BLKS
*    R5   -  UCB SEARCHING
*    R6   -  UCB WORK REG + PRINTING
*    R7
*    R8   -  A TEMPORARY WORK AREA
*    R9   -  FOR RIB DSECT
*    R10  -  ESTAE
*    R11
*    R12  -  BASE REG
*    R13  -  GETMAIN AREA
*    R14  -  JOBFIND CODE + WORK2 ADDRESSING, WTO
*    R15  -  JOBFIND CODE
*****************************************************************
         EJECT
         AIF   ('&TSSO' EQ 'YES').TSSO1                     *LBD 12/85*
IEESG03D CSECT
         LR    R12,R15
         USING IEESG03D,R12
         AGO   .SKTSSO1                                     *LBD 12/85*
.TSSO1   ANOP                                               *LBD 12/85*
IEESG03D MENTER 12,EQU,COM=TESTSG,CP=YES                    *LBD 12/85*
.SKTSSO1 ANOP                                               *LBD 12/85*
         L     R0,WORK1SIZ   SIZE OF WORK AREA 1
         LA    R13,WORK2SIZ  SIZE OF WORK AREA 2
         AR    R0,R13          GET TOTAL WORK AREA SIZE
         AGO   .SKSPID                                      *LBD 12/85*
         O     R0,SUB241     SUBPOOL MASK
.SKSPID  ANOP                                               *LBD 12/85*
         A     R0,=F'00102400'   ADD IN SCANAREA SIZE
         GETMAIN R,LV=(0)
         LR    R13,R1
         USING WORK1,R13
         ST    R14,SAVRET          SAVE RETURN ADDRESS
         AIF   ('&TSSO' EQ 'YES').SKXSA1                    *LBD 12/85*
         ST    R2,XSASAVE
         USING XSA,R2
.SKXSA1  ANOP                                               *LBD 12/85*
         LR    R10,R13             LOAD SAVE AREA ADDR
         AIF   ('&TSSO' EQ 'YES').SKEST1                    *LBD 12/85*
         B     ESTAEBYP            BYPASS ESTAE LIST
ESTAEOVL ESTAE STAEXIT,CT,MF=L
ESTAEBYP MVC   ESTAELST(20),ESTAEOVL
         LA    R1,ESTAELST
         ESTAE PARAM=(10),MF=(E,(1))
.SKEST1  ANOP                                               *LBD 12/85*
         LA    R4,UCBTAB
         LA    R5,4000
         LA    R6,=CL8' '
         L     R7,CLEAR
         MVCL  R4,R6               CLEAR UCBTAB TO BLANKS
         L     R4,16               CVT
         SR    R5,R5
         MVI   DEVCLASS,X'00'      SET DEFAULT ALL UCBS     *LBD 12/85*
         AIF   ('&TSSO' EQ 'YES').TSSO2                     *LBD 12/85*
         L     R3,XAL              LOAD PARM ADDRESS
         LTR   R3,R3               ANY PARM SPECIFIED
         BZ    DEFAULT             NO, USE DEFAULT          *LBD 12/85*
         AGO   .SKTSSO2                                     *LBD 12/85*
.TSSO2   ANOP                                               *LBD 12/85*
         L     R3,CPPLCBUF         -> CPPL COMMAND BUFFER   *LBD 12/85*
         LH    R1,2(R3)            LOAD OFFSET              *LBD 12/85*
         LA    R1,4(R1)            ADD 4 FOR HEADER         *LBD 12/85*
         AR    R3,R1               -> OPERAND               *LBD 12/85*
         CLI   0(R3),C' '          ANY OPERAND              *LBD 12/85*
         BNH   DEFAULT             NO - USE DEFAULT         *LBD 12/85*
.SKTSSO2 ANOP                                               *LBD 12/85*
         MVC   TYPE(10),0(R3)      SET TYPE FROM PARM
         OC    TYPE(10),BLANKS     INSURE UPPER CASE        *LBD 12/85*
         MVI   DEVCLASS,X'80'      SET FOR TAPE UCBS        *LBD 12/85*
         CLI   TYPE,C'T'           TAPE
         BE    UCBLOOP              YES, GO DO UCB SCAN        -JAL/XA-
         CLI   TYPE,C'D'           DISK
         BNE   URCHK                NO, KEEP ON CHECKING       -JAL/XA-
         MVI   DEVCLASS,X'20'       YES, SET FOR DISK UCBS ONLY-JAL/XA-
         B     UCBLOOP             GO DO UCB SCAN              -JAL/XA-
URCHK    DS    0H                                              -JAL/XA-
         CLI   TYPE,C'P'           UNIT RECORD
         BNE   UNITCHK              NO, KEEP ON CHECKING       -JAL/XA-
         MVI   DEVCLASS,X'08'       YES, SET FOR UR UCBS ONLY  -JAL/XA-
         B     UCBLOOP             GO DO UCB SCAN              -JAL/XA-
UNITCHK  DS    0H                                              -JAL/XA-
         MVI   DEVCLASS,X'00'      SET DEFAULT TO ALL UCBS     -JAL/XA-
         CLC   TYPE(2),=C'U='      UNIT=                    *LBD 12/85*
         BE    UCBLOOP
         CLC   TYPE(2),=C'S='      VOLSER=                  *LBD 12/85*
         BE    UCBLOOP
         CLI   TYPE,C'B'           BOTH
         BE    UCBLOOP             GO DO UCB SCAN              -JAL/XA-
         CLI   TYPE,C'V'           VARIED
         BE    UCBLOOP
         CLI   TYPE,C'R'           RESERVE SEARCH
         BE    RESERVE
DEFAULT  MVI   TYPE,C'B'           SET FOR BOTH             *LBD 12/85*
         MVI   DEVCLASS,X'00'      SET DEFAULT TO ALL UCBS  *LBD 12/85*
         EJECT
UCBLOOP  DS    0H                                              -JAL/XA-
         XC    UCBWORK,UCBWORK     CLEAR UCB WORK AREA         -JAL/XA-
         LA    R1,UCBWORK          LOAD ADDRESS OF UCB WORKAREA-JAL/XA-
         ST    R1,PARMWA           STORE IT IN PARMLIST        -JAL/XA-
         LA    R1,DEVCLASS         LOAD ADDRESS OF DEVICE CLASS-JAL/XA-
         ST    R1,PARMDEVT         STORE IT IN PARMLIST        -JAL/XA-
         LA    R1,ADDRUCB          LOAD ADDRESS OF UCB POINTER -JAL/XA-
         ST    R1,PARMUCB          STORE IT IN PARMLIST        -JAL/XA-
         MVI   PARMUCB,X'80'       INDICATE END OF PARM LIST   -JAL/XA-
UCBLOOP1 DS    0H                                              -JAL/XA-
         L     R15,1076(0,R4)      GET ADDRESS OF UCB SCAN RTN -JAL/XA-
         LA    R1,PARMLIST         LOAD ADDR OF PARMLIST       -JAL/XA-
         BALR  R14,R15             GO GET A UCB                -JAL/XA-
         LTR   R15,R15             UCB RETURNED                -JAL/XA-
         BNZ   PRINT                NO, GO PRINT RESULTS       -JAL/XA-
UCBLOOP2 DS    0H                                              -JAL/XA-
         L     R5,ADDRUCB          LOAD ADDR OF UCB            -JAL/XA-
         MVI   ASIDSW,X'00'        CLEAR ASID SEARCH SW
         CLI   TYPE,C'V'
         BE    UCBLOOPV
         TM    3(R5),X'88'         ONLINE AND ALLOCATED
         BNO   UCBLOOP1            NO, GET NEXT
         CLI   TYPE,C'D'           DISK
         BE    UCBLOOPD
         CLI   TYPE,C'T'           TAPE
         BE    UCBLOOPT
         CLI   TYPE,C'P'           UNIT RECORD
         BE    UCBLOOPP
         CLI   TYPE,C'U'           UNIT=
         BE    UCBLOOPU
         CLI   TYPE,C'S'           VOLSER=
         BE    UCBLOOPS
         CLI   TYPE,C'M'           MOUNTS
         BE    UCBLOOPM
         B     UCBLOOP3            ASSUME BOTH
         EJECT
UCBLOOPD TM    18(R5),X'20'        DISK
         BZ    UCBLOOP1            NO, GET NEXT
         B     UCBLOOP3
         SPACE 3
UCBLOOPT TM    18(R5),X'80'        TAPE
         BZ    UCBLOOP1            NO, GET NEXT
         B     UCBLOOP3
         SPACE 3
UCBLOOPP TM    18(R5),X'08'        UNIT RECORD
         BZ    UCBLOOP1
         B     UCBLOOP3
         SPACE 3
UCBLOOPU MVI   ASIDSW,X'F0'        FORCE PRINT
         CLC   TYPE+2(3),13(R5)    UNIT MATCH
         BE    UCBLOOP4
         CLI   TYPE+4,C' '         UNIT COMPARE
         BNE   UCBLOOP1            YES, NO MATCH
         CLC   TYPE+2(2),13(R5)    CONTROL UNIT MATCH
         BE    UCBLOOP4
         CLI   TYPE+3,C' '         CONTROL UNIT COMPARE
         BNE   UCBLOOP1            YES, NO MATCH
         CLC   TYPE+2(1),13(R5)    CHANNEL MATCH
         BE    UCBLOOP4
         B     UCBLOOP1
         SPACE 3
UCBLOOPS MVI   ASIDSW,X'F0'        FORCE PRINT
         CLC   TYPE+2(6),28(R5)    VOLSER MATCH
         BNE   UCBLOOP1
         B     UCBLOOP4
         SPACE 3
UCBLOOPM TM    18(R5),X'80'        TAPE
         BZ    UCBLOOP1
         TM    6(R5),X'40'         NOT READY
         BZ    UCBLOOP1
         TM    34(R5),X'01'        MOUNT MSG ISSUED
         BZ    UCBLOOP1
         EJECT
UCBLOOPV TM    3(R5),X'50'         VARIED OR UNLOADED
         BZ    UCBLOOP1            NO, GO GET NEXT
         MVI   ASIDSW,X'F0'        FORCE PRINT
         B     UCBLOOP4
         SPACE 3
UCBLOOP3 MVI   ASIDSW,X'FF'        SET ASID SEARCH SW
         CLI   TYPE+1,C'='         ASID DELIMITED SEARCH
         BE    UCBLOOP4
         MVI   ASIDSW,X'00'        CLEAR ASID SEARCH SW
         CLI   6(R5),X'00'         FLAGS ZERO
         BNE   UCBLOOP4            NO, GOT ONE
         TM    18(R5),X'20'        DISK
         BZ    UCBLOOP1            NO, NO RESERVE CHECK
         CLI   40(R5),X'00'        RESERVE
         BZ    UCBLOOP1            NO, GET NEXT
         SPACE 3
UCBLOOP4 LA    R6,UCBTAB           UCB TABLE
         LA    R7,100              MAX ENTRIES
         SPACE 3
UCBLOOP5 CLI   0(R6),X'40'         EMPTY SLOT
         BE    UCBLOOP7            YES, GO FILL IT
         CLC   0(3,R6),13(R5)      UCB ALREADY IN LIST
         BE    UCBLOOP1            YES, GET NEXT
         SPACE 3
UCBLOOP6 LA    R6,40(0,R6)         NEXT SLOT
         BCT   R7,UCBLOOP5
         B     PRINT
         EJECT
UCBLOOP7 L     R1,20(0,R5)         UCB EXTENSION ADDR
         UNPK  25(5,R6),14(3,R1)   ASID
         NC    25(4,R6),=8X'0F'
         TR    25(4,R6),=C'0123456789ABCDEF'
         MVI   29(R6),C' '
         MVC   22(3,R6),=C'AS='
         BAL   R11,JOBFIND         GO GET JOBNAME
         MVC   0(3,R6),13(R5)      UNIT NAME
         TM    18(R5),X'A0'        TAPE OR DISK
         BZ    *+10
         MVC   5(6,R6),28(R5)      VOLSER
         CLI   5(R6),X'FF'         PRIVAT MOUNT
         BNE   *+10                NO, BYPASS MOVE
         MVC   5(6,R6),=C'PRIVAT'  SET PRIVAT IN MSG
         CLI   5(R6),X'00'         ZERO VOLSER
         BNE   *+10                NO
         MVC   5(6,R6),=CL6'*MTP*'
         MVC   13(7,R6),=CL7'INT REQ'
         TM    6(R5),X'40'         NOT READY
         BO    UCBLOOP1            YES, GET NEXT
         USING CVT,R1              SET UP ADDRESSING          02/86
         L     R1,CVTPTR           GET CVT ADDR               02/86
         TM    6(R5),X'80'         TEST THE 370 UCB BUSY BIT
         BZ    UCBLOOPA            NOT BUSY, -->
         MVC   13(7,R6),=CL7'BUSY' MOVE IN PRINT CONS
         TM    CVTDCB,CVTMVSE      AM I MVS/XA                02/86
         BZ    UCBLOOP1            NOPE, -->                  02/86
         MVC   13(7,R6),=CL7'I/O QUE'  ITS QUEUED I/O
         B     UCBLOOP1            -->                        02/86
UCBLOOPA DS    0H                                             02/86
         TM    6(R5),X'08'         370 UCB CONTROL UNIT BUSY?
         BZ    UCBLOOPB            NOPE, -->
         MVC   13(7,R6),=CL7'CU BUSY'  MOVE IN PRINTLINE      02/86
         TM    CVTDCB,CVTMVSE      I AM MVS/XA                02/86
         BZ    UCBLOOP1            NOPE, -->                  02/86
         MVC   13(7,R6),=CL7'SSCH' ITS START SUBCHAN ISSUED   02/86
         B     UCBLOOP1            AND GO LOOP, -->           02/86
         DROP  R1                  GIVE BACK THE REGISTER     02/86
UCBLOOPB DS    0H                                             02/86
         TM    18(R5),X'20'        DISK
         BZ    *+12
         CLI   36(R5),X'00'        RESERVE COUNT EQUAL ZERO
         BNE   UCBLOOP8
         MVC   13(7,R6),=CL7'ALLOC'
         TM    ASIDSW,X'F0'        PRINT FORCED
         BO    UCBLOOP1            YES
         MVI   0(R6),C' '          FORCE NO PRINT
         B     UCBLOOP1
         SPACE 3
UCBLOOP8 MVC   13(7,R6),=CL7'RSVD-'
         SR    R8,R8
         IC    R8,36(0,R5)         RESERVE COUNT
         CVD   R8,DOUBLE           SAVE RESERVE COUNT
         UNPK  18(2,R6),DOUBLE+6(2)
         OI    19(R6),X'F0'
         B     UCBLOOP1
         EJECT
********************************************************************
* THE FOLLOWING RESERVE CODE HAS BEEN CHANGED TO SUPPORT SP3
* VIA GRS AND CROSS MEMORY SERVICES
* GQSCAN IS UTILIZED TO RETRIEVE THE APPROPRIATE RIBS TO SCAN
* FOR RESERVE SETTINGS
********************************************************************
RESERVE  SR    R14,R14
         L     R14,WORK1SIZ  THE SIZE OF WORK AREA 1
         AR    R14,R13       ADD IN WORK AREA 1 ENTRY POINT
         USING WORK2,R14     TO ADDRESS TO WORK AREA 2
         MVC   TKN,=F'0'     ZERO OUT TOKEN
         MVC   RESVMSG(4),=X'00520100' WTO CONTROL CHARS
         MVI   RESVMSG+4,C' '
         MVC   RESVMSG+5(77),RESVMSG+4  CLEAR OUT THE OUTPUT AREA
         MVI   SWRES,X'00'   INITIALIZE THE RESERVE SWITCH
START    MVI   TKNSW,X'00'   INITIALIZE TOKEN SWITCH
         LA    R8,SCANAREA   ADDR OF RETURNED DATA
         EJECT
SCAN     GQSCAN AREA=((R8),102400),    ADDR + LEN OF INFO RETURNED     X
               REQLIM=MAX,   MAX NUM OF OWNERS TO BE RETURNED          X
               SCOPE=ALL,    ALL SYSTEMS IN GRS RING                   X
               RESERVE=YES,  ALL RESERVES                              X
               TOKEN=TKN     TOKEN FUNCTION
         EJECT
         LA    R8,BRTABLE    ADDR OF BRANCH TABLE
         B     0(R15,R8)     BRANCH TO APPROPRIATE ROUTINE
BRTABLE  B     CODE00        LOOKS GOOD
         B     CODE04        NO RESOURCES MATCHED REQUEST
         B     CODE08        GQSCAN AREA TOO SMALL
         B     CODE0C        ENCOUNTERED ERROR DATA AREA NG
         B     CODE10        INVALID SYSNAME
         EJECT
CODE00   MVI   TKNSW,X'00'   INITIALIZE TOKEN SWITCH
RIBWORK  ST    R0,RIBLNGTH   STORE RIB + RIBE LENGTH
         LR    R8,R1         SAVE NUMBER OF RIBS
         MVI   SWRES,X'00'   ZERO OUT RESERVE SWITCH
         LA    R9,SCANAREA   ADDRESS OF GQSCAN AREA (1ST RIB)
         USING RIB,R9        RESOURCE INFORMATION BLOCK
RIBLOOP  L     R4,RIBNRIBE   # OF RIBE'S
*************NOW LOOK AT THE RIBVAR + RIBE FOR THE RESERVES
LOOKRIB  LR    R5,R9         RESOURCE INFO BLOCK
         AH    R5,RIBLNGTH   POINT TO RIB VARIABLE SECTION
         USING RIBVAR,R5     POINT TO RIB VAR SECTION
         SR    R6,R6         ZERO OUT REG
         IC    R6,RIBRNMLN   LENGTH OF MINOR NAME
         CH    R6,=H'20'     GTR 20 BYTES
         BNH   MOVEIT        NO, USE THE POSTED LENGTH
         LA    R6,20         YES, RESET THE LENGTH TO 20
MOVEIT   BCTR  R6,0          REDUCE LENGTH BY ONE
         EX    R6,MOVEMIN    MOVE IN THE MINOR NAME
LOOKRIBE EQU   *
         DROP  R5
         LR    R5,R9         RESOURCE INFORMATION BLOCK
         AH    R5,RIBLNGTH   POINT TO RIB VARIABLE SECTION
         AH    R5,RIBVLEN    ADD IN VAR SECTION LENGTH-GET TO EXTENT
NEXTRIBE EQU   *
         USING RIBE,R5       RESOURCE INFORMATION BLOCK
         TM    RIBERFLG,RIBERESV  IS THIS RESERVE REQUEST
         BC    1,RESMV       YES, MOVE IT TO OUTPUT AREA
         B     BUMPRIB       NO GO GET NEXT RIB
*******************************************************************
* THE FIRST RIBE WAS A RESERVE, SO PRINT IT OUT WITH ALL THE QUEUED
* RESOURCES WAITING
*******************************************************************
RESMV    MVC   RESVMSG+24(8),RIBQNAME  MOVE OUT MAJOR NAME
         MVI   SWRES,X'01'   TURN RESERVE SWITCH FOR THIS RIB
         MVC   RESVMSG+15(8),RIBEJBNM  JOBNAME OF REQUESTOR
******************************************************************
* GET UCB CONTROL BLOCK ADDRESS AND SEARCH THE CONTROL BLOCK
* FOR THE UCB (UNIT ADDRESS) AND VOL-SER ID NAME
******************************************************************
         L     R6,RIBEUCB    LOAD UCB ADDRESS
         LTR   R6,R6         SEE IF IT IS ZERO
         BC    8,BUMPRIB     NO ADDRESS MEANS NO RESERVE
         USING UCBCMSEG,R6   UCB CNTL BLK
         MVC   RESVMSG+4(3),UCBNAME    MOVE UCB ADDRESS
         MVC   RESVMSG+8(6),UCBVOLI    MOVE IN VOL SER
         MVC   RESVMSG+68(8),RIBESYSN REQUESTORS SYSTEM NAME
TESTSHR  TM    RIBERFLG,RIBETYPE  IS THIS EXCL OR SHARED
         BC    1,SHARED        YES
         MVC   RESVMSG+63(4),=C'EXCL'  EXCLUSIVE
         B     TESTCOM       TELL USER
SHARED   MVC   RESVMSG+63(4),=C'SHR '  SHR
TESTCOM  EQU   *
***********************************************************************
*   THE MUST COMPLETE IS CURRENTLY NOT BEING PRINTED OUT
***********************************************************************
*TESTCOM TM    RIBERFLG,RIBEMC    IS MUST COMPLETE                   **
*        BC    1,MUSTCOM       YES                                   **
*        MVI   RESVMSG+?,C' '   NO - LEAVE IT BLANK                  **
*        B     TESTGLOB      NEXT TEST                               **
*MUSTCOM EQU   *                                                     **
*        MVI   RESVMSG+?(5),C'MCOMP'  MOVE IT OUT                    **
***********************************************************************
***********************************************************************
TESTGLOB TM    RIBERFLG,RIBERESC  IS THIS RESERVE REQUEST GLOBAL
         BC    1,GLOBAL        YES
         MVC   RESVMSG+77(2),=C'NG' NO RESVE NOT CONVTED TO GLOBL ENTRY
         B     TESTOWN       NEXT TEST
GLOBAL   EQU   *
         MVC   RESVMSG+77(2),=C'GE' YES RESVE CONVERTED TO GLOBAL ENTRY
TESTOWN  TM    RIBESFLG,RIBESTAT  IS THIS THE OWNER
         BC    1,OWNER       YES
         MVC   RESVMSG+55(7),=C'WAITING'    NO, IT IS WAITING
         BAL   R6,RESVPRT    PUT IT OUT
         B     BUMPRIBE      GO TO NEXT RIBE
OWNER    EQU   *
         MVC   RESVMSG+56(5),=C'OWNER'      YES, FIRST ON CHAIN
         BAL   R6,RESVPRT    PUT IT OUT
         B     BUMPRIBE      GO TO NEXT RIBE
         EJECT
******************************************************************
* THIS SECTION IS USED TO BUMP TO THE NEXT RIB ON THE CHAIN
* THIS IS REQUESTED IF (1) THE FIXED PORTION OF RIB SHOWS
* NOTHING IS WAITING (EITHER EXCLUSIVE OR SHR) OR (2) THE 'FIRST'
* RIB EXTENSION DOES NOT SHOW A RESERVE
******************************************************************
BUMPRIB  SR    R3,R3         CLEAR THE REG
BUMPLOOP AH    R3,RIBELENG   ADD RIBE LENGTH
         BCT   R4,BUMPLOOP   AND ADD TIMESNUMBER OF RIBE'S
         AH    R3,RIBLNGTH   ADD LENGTH OF RIB
         AH    R3,RIBVLEN    ADD LENGTH OF VARIABLE SECTION
         AR    R9,R3         POINT TO NEXT RIB
         BCT   R8,RIBLOOP    AND LOOP UNTIL NO MORE RIBS
         B     RESEXIT       PREPARE FOR EOJ
******************************************************************
*  THIS SECTION IS USED TO BUMP TO THE NEXT RIBE ON THE CHAIN
*  IF THERE ARE NOR MORE RIBE'S, THEN GO TO NEXT RIB AND START
*  SEARCH FOR A RESERVE ALL OVER
*  IF NO MORE RIB'S GO TO EOJ
******************************************************************
BUMPRIBE AH    R5,RIBELENG   RIBE LENGTH
         BCT   R4,NEXTRIBE   IF ANOTHER RIBE GO LOOK AT IT
         LR    R9,R5         IF NOT GO TO NEXT RIB
         BCT   R8,RIBLOOP    LOOP TILL NOR MORE RIB'S
         B     RESEXIT       CLEAN UP
*****************************************************************
* TEST TO SEE IF ANY RESERVES HAVE BEEN FOUND
*      IF NOT - PUT OUT MESSAGE
*****************************************************************
CODE04   EQU   *
         MVI   TKNSW,X'00'   INITIALIZE TOKEN SWITCH
RESEXIT  TM    TKNSW,X'01'   WAS A TOKEN SENT
         BC    8,RESEOJ      NO, GO TO EOJ PROCESSING
         BC    15,START      YES, GO RE-EXECUTE GQSCAN FOR MORE INFO
RESEOJ   TM    SWRES,X'01'   ANY RESERVES FOUND
         BC    1,EXIT        YES, GO TO EOJ
         MVC   RESVMSG+4(27),=CL30'****** NO RESERVES FOUND *****'
         BAL   R6,RESVPRT    WRITE OUT MSG
         B     EXIT          GO TO EOJ
******************************************************************
*  PRINT ROUTINE FOR RESERVE INFO
*
*  SINCE CMDTSO + CMDSBTSO CONVERT THE SVC 35 TO A BALR 14,15
*  I MUST SAVE REG 14 SO IT DOESN'T GET PERMANENTLY DESTROYED
*
******************************************************************
RESVPRT  MVC   RESVMSG(4),=X'00520100'  MOVE IN CONTROL CHARS
         ST    R14,SAVREG14    HOLD UNTIL AFTER THE WTO
         LA    R1,RESVMSG
         AIF   ('&TSSO' EQ 'YES').TSSO3                     *LBD 12/85*
         SR    R0,R0
         IC    R0,XAU
         SVC   35
         AGO   .SKTSSO3                                     *LBD 12/85*
.TSSO3   ANOP                                               *LBD 12/85*
         BAL   R2,MSGRTN                                    *LBD 12/85*
.SKTSSO3 ANOP                                               *LBD 12/85*
         L     R14,SAVREG14
         MVI   RESVMSG+4,C' '
         MVC   RESVMSG+5(77),RESVMSG+4 CLEAR OUT THE OUTPUT AREA
         BR    R6            RETURN TO THE SEARCH LOOP
         EJECT
***************************************************************
* TOKEN RETURNED AFTER PROCESSING RE-EXEC THE GQSCAN
***************************************************************
CODE08   EQU   *
         OI    TKNSW,X'01'    TURN ON TOKEN SWITCH
         BC    15,RIBWORK     GO AND PROCESS THE RIB
***************************************************************
*  PROBLEM WITH GQSCAN.  PUT OUT MSG + GO TO EOJ
***************************************************************
CODE0C   EQU   *
CODE10   EQU   *
         MVC   RESVMSG+4(27),=CL27'INVALID INFO IN QUEUE SCAN AREA'
         BAL   R6,RESVPRT    WRITE OUT MSG
         BC    15,EXIT
**********************************************************************
*  END OF SP3 - GQSCAN AREA FOR RESERVE SEARCH
**********************************************************************
         EJECT
JOBFIND  SR    R14,R14
         ICM   R14,3,14(R1)        ASID
         SLL   R14,2               MULTIPLY ASID BY 4 FOR ASVT ADDR INC
         LTR   R14,R14             IS OFFSET 0?               02/86
         BNZ   JOBFIND0            NOPE, -->                  02/86
         LA    R14,4               MAKE OFFSET 4              02/86
JOBFIND0 DS    0H                                             02/86
         L     R15,16              CVT
         L     R15,556(0,R15)      ASVT
         LA    R15,524(R14,R15)    ASVT ENTRY FOR ASID SPECIFIED
         TM    0(R15),X'80'        AVAILABLE SLOT
         BO    JOBFIND3            YES, JUST USE ASID
         L     R15,0(0,R15)        ASCB
         L     R14,56(0,R15)       CSCB
         CLI   28(R14),X'03'       INIT/JOB
         BNE   JOBFIND2            NO, GO USE THIS CSCB
         LR    R15,R14             SAVE CSCB
         LA    R15,0(0,R15)
         SPACE 3
JOBFIND1 L     R14,0(0,R14)        NEXT CSCB
         LA    R14,0(0,R14)
         LTR   R14,R14             END OF CSCBS
         BNZ   *+10                NO, CONTINUE
         LR    R14,R15             LOAD ORIG CSCB ADDR
         B     JOBFIND2
         CR    R14,R15             SAME CSCB
         BE    JOBFIND2            YES, INIT
         CLC   14(2,R1),30(R14)    ASID MATCH
         BNE   JOBFIND1            NO, GET NEXT
         SPACE 3
JOBFIND2 MVC   32(8,R6),=CL8' '
         LTR   R14,R14             CSCB ZERO
         BZ    JOBFIND3
         MVC   32(8,R6),8(R14)     JOBNAME
         SPACE 3
JOBFIND3 CLI   ASIDSW,X'FF'        ASID SEARCH
         BCR   7,R11               NO, CONTINUE
         CLC   32(8,R6),TYPE+2     JOBNAME MATCH
         BCR   8,R11               YES, CONTINUE
         CLC   25(4,R6),TYPE+2     ASID MATCH
         BCR   8,R11               YES, EXIT
         B     UCBLOOP1
         EJECT
PRINT    MVC   WTOLIST(4),=X'002C0100' SET MSG LEN AND UCM FLAGS
         LA    R6,UCBTAB           UCB TABLE ADDR
         LA    R7,100              MAX ENTRIES
         CLI   0(R6),C' '          ANY TO PRINT
         BE    NOPRINT             NO, GO TELL OPERATOR
         SPACE 3
PRINT1   CLI   0(R6),C' '          END OF PRINT
         BE    EXIT                YES, EXIT
         MVC   WTOLIST+4(40),0(R6)  SET MSG IN AREA
         LA    R1,WTOLIST
         AIF   ('&TSSO' EQ 'YES').TSSO4                     *LBD 12/85*
         SR    R0,R0
         IC    R0,XAU              MCS ID OF REQUESTING CONSOLE
         SVC   35
         AGO   .SKTSSO4                                     *LBD 12/85*
.TSSO4   ANOP                                               *LBD 12/85*
         BAL   R2,MSGRTN                                    *LBD 12/85*
.SKTSSO4 ANOP                                               *LBD 12/85*
         LA    R6,40(0,R6)         NEXT TABLE ENTRY
         BCT   R7,PRINT1           GET NEXT
         B     EXIT
         SPACE 3
NOPRINT  MVC   WTOLIST(4),=X'00200100'  SET LENGTH AND UCM FLAGS
         MVC   WTOLIST+4(28),=CL28'NO SELECTED DEVICES FOUND'
         CLI   TYPE,C'M'
         BNE   NOPRINT1
         MVC   WTOLIST+4(28),=CL28'NO MOUNTS PENDING'
         SPACE 3
NOPRINT1 LA    R1,WTOLIST
         AIF   ('&TSSO' EQ 'YES').TSSO5                     *LBD 12/85*
         SR    R0,R0
         IC    R0,XAU              MCS ID OF REQUESTING CONSOLE
         SVC   35
         AGO   .SKTSSO5                                     *LBD 12/85*
.TSSO5   ANOP                                               *LBD 12/85*
         BAL   R2,MSGRTN                                    *LBD 12/85*
.SKTSSO5 ANOP                                               *LBD 12/85*
         SPACE 3
EXIT     EQU   *
         ESTAE 0
         L     R0,WORK1SIZ
         LA    R1,WORK2SIZ
         AR    R0,R1
         AIF   ('&TSSO' EQ 'YES').SKSPID2                   *LBD 12/85*
         O     R0,SUB241
.SKSPID2 ANOP                                               *LBD 12/85*
         A     R0,=F'00102400'     ADD IN SCANAREA SIZE
         LR    R1,R13              AREA ADDRESS
         L     R14,SAVRET          LOAD RETURN ADDR
         FREEMAIN R,LV=(0),A=(1)
         SR    R15,R15
         AIF   ('&TSSO' EQ 'YES').TSSOLV                    *LBD 12/85*
         BR    R14
         AGO   .SKTSSOL                                     *LBD 12/85*
.TSSOLV  ANOP                                               *LBD 12/85*
         MLEAVE                                             *LBD 12/85*
         EJECT                                              *LBD 11/85*
MSGRTN   DS    0H                                           *LBD 11/85*
         MVC   PLINE+4,BLANKS                               *LBD 11/85*
         LH    R14,0(R1)           * LOAD LENGTH            *LBD 11/85*
         SH    R14,=H'05'          * -4 (WTO HDR) -1 (MVC)  *LBD 11/85*
         EX    R14,MVCPLINE        * MOVE TO PUTLINE        *LBD 11/85*
         LA    R14,5(R14)          * ADD THE 5 BACK         *LBD 11/85*
         STH   R14,PLINE           * STORE PUTLINE LEN      *LBD 11/85*
         PUTLINE PARM=PUTBLOK,OUTPUT=(PLINE,TERM,SINGLE,    *LBD 11/85*X
               DATA),MF=(E,IOPLADS)                         *LBD 11/85*
         BR    R2                                           *LBD 11/85*
MVCPLINE MVC   PLINE+4(0),4(R1)    *** EXECUTED             *LBD 11/85*
PLINE    DC    H'80',H'00'                                  *LBD 11/85*
         DC    CL80' '                                      *LBD 11/85*
BLANKS   DC    CL80' '                                      *LBD 11/85*
.SKTSSOL ANOP                                               *LBD 12/85*
         EJECT
         AIF   ('&TSSO' EQ 'YES').SKEST2                    *LBD 12/85*
         USING *,R15
STAEXIT  CH    R0,=H'12'           SDWA GOTTEN
         BE    STAEXIT1            NO, FORCE RETURN
         L     R2,=A(STAERTRY)     LOAD RETRY ADDR
         SETRP RC=4,RETADDR=(2),FRESDWA=YES,DUMP=NO
         SPACE 3
STAEXIT1 L     R0,=A(STAERTRY)     LOAD RETRY ADDR
         LA    R15,4
         BR    R14
         DROP  R15
         SPACE 3
         USING *,R15
STAERTRY L     R12,=A(IEESG03D)    LOAD ENTRY POINT ADDR
         LR    R13,R1              RELOAD WORK AREA ADDR
         DROP  R15
         LA    R1,STAEMSG          ADDRESSING ERROR
         L     R2,XSASAVE          RELOAD XSA ADDR
         SR    R0,R0
         IC    R0,XAU              INSERT MCS ID
         SVC   35                  ISSUE WTO
         B     EXIT
.SKEST2  ANOP                                               *LBD 12/85*
         EJECT
         LTORG
         SPACE 3
         DS    0F
SUB241   DC    X'F1000000'   SUBPOOL 241
         DS    0F
CLEAR    DC    X'40000001'
         DS    0F
NORESMSG DC    X'00200100',CL28'NO RESERVES OUTSTANDING'
RESERMSG DC    X'00200100',CL28'ERROR -  INVALID QCB CHAIN'
         SPACE 3
         DS    0F
STAEMSG  DC    X'00360100'
         DC    CL50'ERROR ENCOUNTERED IN CONTROL BLOCKS, RETRY COMMAND'
MOVEMIN  MVC   RESVMSG+33(0),0(R5)     MOVE IN MINOR NAME
TKN      DS    F                       GQSCAN CONTINUATION ADDR
WORK1SIZ DC    AL4(WORK1END-WORK1)
         EJECT
WORK1    DSECT
SCANSAVE DS    18F           18 WORD SAVEAREA REQ FOR GQSCAN + UCBSCAN
WORKSTRT DS    0D
DOUBLE   DS    D
SAVRET   DS    F
XSASAVE  DS    F
WTOLIST  DS    CL44
RESVMSG  DS    CL78
TYPE     DS    CL10
ASIDSW   DS    C
RESVFLAG DS    X
ESTAELST DS    5F
SAVREG14 DS    F             SAVE REG14 SO WTO DOESN'T DESTROY
         DS    0D                                              -JAL/XA-
UCBWORK  DS    CL100                                           -JAL/XA-
DEVCLASS DS    CL1                                             -JAL/XA-
ADDRUCB  DS    F                                               -JAL/XA-
         DS    0D                                              -JAL/XA-
PARMLIST DS    3F                                              -JAL/XA-
         ORG   PARMLIST                                        -JAL/XA-
PARMWA   DS    F                                               -JAL/XA-
PARMDEVT DS    F                                               -JAL/XA-
PARMUCB  DS    F                                               -JAL/XA-
UCBTAB   DS    100CL40
WORK1END DS    0D
         EJECT
*******************FOR RESERVE USE #R R***********************
WORK2    DSECT
         DS    0D
TKNSW    DS    X
SWRES    DS    X
         DS    0F
         DS    0F
RIBLNGTH DS    H             RIB LENGTH
RIBELENG DS    H             RIBE LENGTH
WORK2SIZ EQU   *-WORK2
SCANAREA DS    102400X       IF SIZE CHGS, AHANGE 'ALL' 102400 LINES
         AIF   ('&TSSO' EQ 'YES').SKXSA2                    *LBD 12/85*
XSA      DSECT
XAP      DS    F
XAD      DS    F
XAX      DS    D
XAE      DS    0C
XAR      DS    F
XAN      DS    0C
XAL      DS    F
XAV      DS    D
XAS      DS    D
XAU      DS    C
         DS    C
XAJ      DS    H
         DS    F
         EJECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
.SKXSA2  ANOP                                               *LBD 12/85*
         EJECT
         IHASDWA
         EJECT
         ISGRIB
         EJECT
         CVT   DSECT=YES
         EJECT
         IEFUCBOB
         AIF   ('&TSSO' NE 'YES').SKIOP                     *LBD 12/85*
         IKJIOPL ,                                          *LBD 12/85*
.SKIOP   ANOP                                               *LBD 12/85*
         END   IEESG03D
