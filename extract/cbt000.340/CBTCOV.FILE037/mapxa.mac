MAPXA    TITLE 'MAPXA - TSO COMMAND TO PROVIDE MVS/XA STORAGE LAYOUT MA+
               P.'
         SPACE 2
*%A PPLINK AMODGEN
         SPACE 1
***********************************************************************
*                                                                     *
*  COPYRIGHT (C) 1984 BY BROIDO COMPUTER CONSULTING.  ALL RIGHTS      *
*  RESERVED EXCEPT:                                                   *
*                                                                     *
*  PARTICULAR LICENSE IS GRANTED TO DISTRIBUTE THIS PROGRAM FREE      *
*  OF CHARGE, BUT IT MUST NOT BE SOLD.  A SERVICE CHARGE FOR          *
*  HANDLING A COLLECTION OF SOFTWARE OF WHICH THIS IS A PART,         *
*  ON THE OTHER HAND, IS APPROPRIATE.                                 *
*                                                                     *
*                                  BROIDO COMPUTER CONSULTING         *
*                                  104 MILLS STREET                   *
*                                  MORRISTOWN, N.J.  07960            *
*                                                                     *
***********************************************************************
         SPACE 1
***********************************************************************
*                                                                     *
*        MAPXA - TSO COMMAND TO PRODUCE STORAGE BOUNDARY MAP FOR      *
*                MVS/XA.                                              *
*                                                                     *
*                SYSLIB: ASM: SYS1.AMODGEN.                           *
*                        LNK: NONE.                                   *
*                                                                     *
*                NOT REENTRANT.                                       *
*                TESTED THROUGH LEVEL SP 2.1.2.                       *
*                                                                     *
*                                  JEFFREY R. BROIDO                  *
*                                  MHT/WCF-4/NYP-NYC                  *
*                                  26  JANUARY  1984                  *
*                                                                     *
***********************************************************************
***********************************************************************
*  MODIFIED TO UTILIZE PUTLINE INSTEAD OF TPUT TO ALLOW MAPXA TO BE   *
*  INVOKED UNDER TSSO OR BATCH TMP.                                   *
*                                                                     *
*  LIONEL DYCK                                                        *
*  ROCKWELL INTERNATIONAL, (213) 594-1125                             *
*  11/06/85                                                           *
***********************************************************************
         SPACE 1
MAPXA    MENTER 12,EQU,COM=MAPXA,CP=YES
MAPXA    RMODE 24                  RESIDE BELOW THE LINE.
MAPXA    AMODE 31                  USE 31 BIT ADDRESSING.
         SPACE 1
         L     R9,X'10'            POINT TO CVT.
         USING CVT,R9              TELL ASSEMBLER.
         L     R8,CVTGDA           POINT TO GDA.
         USING GDA,R8              TELL ASSEMBLER.
         L     R7,CVTSMEXT         POINT TO CVT EXTENSION.
         USING CVTVSTGX,R7         TELL ASSEMBLER.
HEADOUT  DS    0H
         ST    R14,SAVER14                                 *LBD 11/85*
         PUTLINE PARM=PUTBLOK,                            *LBD 07/85*  X
               OUTPUT=(PL1,TERM,SINGLE,DATA),             *LBD 07/85*  X
               MF=(E,IOPLADS)                             *LBD 07/85*
         PUTLINE PARM=PUTBLOK,                            *LBD 07/85*  X
               OUTPUT=(PL2,TERM,SINGLE,DATA),             *LBD 07/85*  X
               MF=(E,IOPLADS)                             *LBD 07/85*
         L     R14,SAVER14                                 *LBD 11/85*
         LA    R3,TABLE            POINT TO TABLE ENTRY.
         USING TABLED,R3           TELL ASSEMBLER.
TABLUP   CLI   0(R3),X'00'         END OF TABLE?
         BE    EXIT                B IF YES.
         MVC   AREA,TABTITLE       MOVE ENTRY TITLE.
         L     R15,TABRES          POINT TO DATA RESOLUTION ROUTINE.
         BALR  R14,R15             FILL-IN TABLE ENTRY.
         LA    R1,TABSTART         POINT TO AREA START ADDRESS.
         TM    0(R1),X'80'         BUT IS AREA MISSING?
         BO    MISSING             B IF AREA IS INDEED MISSING.
         BAL   R14,HEXOUT          CONVERT TO CHARACTER HEX.
         MVC   START,WORK          MOVE START ADDR. CHARACTER HEX.
         LA    R1,TABEND           POINT TO AREA END ADDRESS.
         BAL   R14,HEXOUT          CONVERT TO CHARACTER HEX.
         MVC   END,WORK            MOVE END ADDR. CHAR. HEX.
         L     R1,TABLEN           LOAD AREA LENGTH FROM TABLE.
         SRL   R1,10               "DIVIDE" BY 1K.
         CVD   R1,WORK             DECIMALIZE IT.
         MVC   LENGTH,=X'40206B2020206B202120'  MOVE EDIT PATTERN.
         ED    LENGTH,WORK+4       EDIT LENGTH.
         ICM   R1,15,TABFULL       LOAD AREA BYTES USED.
         BNZ   TFE                 B IF NOT ZERO.
         MVC   FULL,=C'--'         MOVE "NOT APPLICABLE" GRAPHIC.
         B     DETPUT              CONTINUE.
MISSING  MVC   START,=C'      --'  MOVE "MISSING" GRAPHIC.
         MVC   END,=C'      --'    MOVE "MISSING" GRAPHIC.
         MVC   LENGTH,=C'        --'  MOVE "MISSING" GRAPHIC.
         MVC   FULL,=C'--'         MOVE "MISSING" GRAPHIC.
         B     DETPUT              CONTINUE.
TFE      L     R5,TABLEN           LOAD DIVISOR.
         MH    R1,=H'100'          MULTIPLY BYTES BY 100.
         SR    R0,R0               ZERO HIGH ORDER DIVIDEND.
         DR    R0,R5               GENERATE PERCENT USED.
         SRL   R5,1                "DIVIDE" DIVISOR BY 2.
         CR    R0,R5               SHALL I ROUND?
         BL    NOROUND             B IF NOT.
         LA    R1,1(,R1)           ROUND PERCENTAGE.
NOROUND  CVD   R1,WORK             DECIMALIZE PERCENT.
         UNPK  WORK1(3),WORK+6(2)  UNPAKC PERCENT.
         MVC   FULL,WORK1+1        MOVE PERCENT.
         OI    FULL+1,C'0'         FIX SIGN.
DETPUT   DS    0H
         ST    R14,SAVER14                                 *LBD 11/85*
         PUTLINE PARM=PUTBLOK,                            *LBD 07/85*  X
               OUTPUT=(DL1,TERM,SINGLE,DATA),             *LBD 07/85*  X
               MF=(E,IOPLADS)                             *LBD 07/85*
         L     R14,SAVER14                                 *LBD 11/85*
         LA    R3,TLEN(,R3)        BUMP TO NEXT TABLE ENTRY.
         B     TABLUP              LOOP.
         SPACE 1
EXIT     DS    0H
         MLEAVE
         TITLE 'DATA RESOLUTION ROUTINES.'
NOPRES   BR    R14                 NOOP RESOLUTION ROUTINE.
PRES     L     R1,GDAPVTSZ         LOAD PRIVATE SIZE.
         BCTR  R1,*-*              GENERATE TRUE END ADDRESS.
         ST    R1,TABEND           SAVE IN TABLE.
         S     R1,TABSTART         GENERATE ...
         LA    R1,1(,R1)           ... TRUE LENGTH.
         ST    R1,TABLEN           SAVE IN TABLE.
         BR    R14                 RETURN.
EPRES    L     R1,GDAEPVT          LOAD START OF E-PRIVATE.
         ST    R1,TABSTART         SAVE IN TABLE.
         L     R2,GDAEPVTS         LOAD LENGTH OF E-PRIVATE
         ST    R2,TABLEN           SAVE IN TABLE.
         AR    R1,R2               GENERATE ...
         BCTR  R1,*-*              ... E-PRIVATE END ADDRESS.
         ST    R1,TABEND           SAVE END ADDRESS IN TABLE.
         BR    R14                 RETURN.
CRES     L     R1,GDACSA           LOAD START OF CSA.
         ST    R1,TABSTART         SAVE IN TABLE.
         L     R2,GDACSASZ         LOAD LENGTH OF CSA.
         ST    R2,TABLEN           SAVE IN TABLE.
         AR    R1,R2               GENERATE ...
         BCTR  R1,*-*              ... CSA END ADDRESS.
         ST    R1,TABEND           SAVE IN TABLE.
         S     R2,GDACSARE         GENERATE BYTES USED.
         ST    R2,TABFULL          SAVE IN TABLE.
         BR    R14                 RETURN.
ECRES    L     R1,GDAECSA          LOAD START OF E-CSA.
         ST    R1,TABSTART         SAVE IN TABLE.
         L     R2,GDAECSAS         LOAD LENGTH OF E-CSA.
         ST    R2,TABLEN           SAVE IN TABLE.
         AR    R1,R2               GENERATE ...
         BCTR  R1,*-*              ... E-CSA END ADDRESS.
         ST    R1,TABEND           SAVE IN TABLE.
         BR    R14                 RETURN.
SRES     L     R1,GDASQA           LOAD START OF SQA.
         ST    R1,TABSTART         SAVE IN TABLE.
         L     R2,GDASQASZ         LOAD LENGTH OF SQA.
         ST    R2,TABLEN           SAVE IN TABLE.
         AR    R1,R2               GENERATE ...
         BCTR  R1,*-*              ... SQA END ADDRESS.
         ST    R1,TABEND           SAVE IN TABLE.
         BR    R14                 RETURN.
ESRES    L     R1,GDAESQA          LOAD START OF E-SQA.
         ST    R1,TABSTART         SAVE IN TABLE.
         L     R2,GDAESQAS         LOAD LENGTH OF E-SQA.
         ST    R2,TABLEN           SAVE IN TABLE.
         AR    R1,R2               GENERATE ...
         BCTR  R1,*-*              ... E-SQA END ADDRESS.
         ST    R1,TABEND           SAVE IN TABLE.
         BR    R14                 RETURN.
NRORES   DS    0H
         ST    R14,SAVER14                                 *LBD 11/85*
         PUTLINE PARM=PUTBLOK,                            *LBD 07/85*  X
               OUTPUT=(LL1,TERM,SINGLE,DATA),             *LBD 07/85*  X
               MF=(E,IOPLADS)                             *LBD 07/85*
         L     R14,SAVER14                                 *LBD 11/85*
         L     R1,CVTRONS          LOAD START OF NUC R/O AREA.
         ST    R1,TABSTART         SAVE IN TABLE.
         L     R2,TABEND           LOAD X'00FFFFFF'.
         SR    R2,R1               GENERATE ...
         LA    R2,1(,R2)           ... LENGTH.
         ST    R2,TABLEN           SAVE IT IN TABLE.
         BR    R14                 RETURN.
ENRORES  L     R1,TABSTART         LOAD X'01000000'.
         L     R2,CVTRONE          LOAD END OF NUC R/O AREA.
         O     R2,=A(X'00000FFF')  FORCE ALIGNMENT TO END OF PAGE.
         ST    R2,TABEND           SAVE IN TABLE.
         SR    R2,R1               GENERATE ...
         LA    R2,1(,R2)           ... LENGTH.
         ST    R2,TABLEN           SAVE IN TABLE.
         BR    R14                 RETURN.
VRRES    L     R1,GDAVR            LOAD START OF V=R AREA.
         ST    R1,TABSTART         SAVE IN TABLE.
         L     R2,GDAVRSZ          LOAD LENGTH OF V=R AREA.
         ST    R2,TABLEN           SAVE LENGTH IN TABLE.
         AR    R1,R2               GENERATE ...
         BCTR  R1,*-*              ... V=R END ADDRESS.
         ST    R1,TABEND           SAVE IN TABLE.
         BR    R14                 RETURN.
         SPACE 1
***********************************************************************
*                                                                     *
*    THE FOLLOWING IS A GENERAL DATA RESOLUTION ROUTINE FOR           *
*        STARTING-ENDING ADDRESS PAIRS IN THE VCT VS ADDRESS          *
*        EXTENSION.  THE TABLE CONTAINS THE ABSOLUTE DISPLACEMENT     *
*        IN THE CVT EXTENSION TO THE STARTING ADDRESS RATHER THAN     *
*        THE STARTING ADDRESS ITSELF; THE ENDING ADDRESS IS           *
*        PRESUMED TO FOLLOW IN THE CVT EXTENSION.                     *
*                                                                     *
***********************************************************************
         SPACE 1
CXRES    LR    R1,R7               POINT TO THE CVT EXTENSION.
         A     R1,TABSTART         POINT TO THE STARTING ADDRESS.
         ICM   R2,15,4(R1)         LOAD ENDING ADDRESS.
         BNP   CXNA                B IF THIS AREA IS MISSING.
         L     R1,0(,R1)           LOAD STARTING ADDRESS.
         ST    R1,TABSTART         SAVE IT IN TABLE.
         O     R2,=A(X'00000FFF')  FORCE END OF PAGE ALIGNMENT TO ...
*                                  ... ACCOUNT FOR WASTE AT CHANGE ...
*                                  ... OF PROTECTION BOUNDARIES.
         ST    R2,TABEND           SAVE ENDING ADDRESS IN TABLE.
         SR    R2,R1               GENERATE ...
         LA    R2,1(,R2)           LENGTH.
         ST    R2,TABLEN           SAVE IN TABLE.
         BR    R14                 RETURN.
CXNA     LNR   R1,R1               MAKE R1 NEGATIVE.
         ST    R1,TABSTART         SAVE IN TABLE START POSITION.
         BR    R14                 RETURN.
         TITLE 'SUBROUTINE(S).'
***********************************************************************
*                                                                     *
*    HEXOUT - SUBROUTINE TO GENERATE CHARACTER CODED HEXADECIMAL      *
*        FOR OUTPUT.  R1 POINTS TO THE FULLWORD TO BE TRANSLATED.     *
*        FIND OUTPUT CHARACTER RESULT IN DOUBLEWORD "WORK."           *
*                                                                     *
***********************************************************************
         SPACE 1
HEXOUT   MVO   WORK1,0(4,R1)       GENERATE PSEUDO PACKED VALUE.
         UNPK  WORK,WORK1+3(5)     SEPARATE NIBBLES.
         NC    WORK,=X'0F0F0F0F0F0F0F0F' ELIMINATE ZONES.
         TR    WORK,=C'0123456789ABCDEF' TRANSLATE TO PRINTABLE HEX.
         BR    R14                 RETURN TO CALLER.
         TITLE 'DATA AREAS.'
WORK     DS    D                   WORK DOUBLEWORD.
WORK1    DS    D                   WORK DOUBLEWORD.
SAVER14  DS    F                                           *LBD 11/85*
         SPACE 1
FLAG     DC    X'00'               VARIOUS FLAG(S).
         SPACE 1
PL1      DC    H'80',H'00'                                *LBD 07/85*
PLH1     DC    CL80' '                                    *LBD 07/85*
         ORG   PLH1+1                                     *LBD 07/85*
HEAD1    DC    C'AREA          '
HEAD1A   DC    C'START      '
HEAD1B   DC    C'END        '
HEAD1C   DC    C'LENGTH (K)  '
HEAD1D   DC    C'%FULL'
LEN      EQU   *-PLH1
         ORG   ,                                          *LBD 07/85*
PL2      DC    AL2(LEN),H'00'                             *LBD 07/85*
HEAD2    DC    CL(LEN)' '
         ORG   HEAD2
HEAD2A   DC    C'------------'
         ORG   HEAD2+(HEAD1A-HEAD1)
HEAD2B   DC    C'--------'
         ORG   HEAD2+(HEAD1B-HEAD1)
HEAD2C   DC    C'--------'
         ORG   HEAD2+(HEAD1C-HEAD1)+1
HEAD2D   DC    C'----------'
         ORG   HEAD2+(HEAD1D-HEAD1)+1
HEAD2E   DC    C'-------'
         ORG
DL1      DC    AL2(LEN),H'00'                             *LBD 07/85*
DETAIL   DC    CL(LEN)' '
         ORG   DETAIL
AREA     EQU   *,12
         ORG   DETAIL+(HEAD1A-HEAD1)
START    EQU   *,8
         ORG   DETAIL+(HEAD1B-HEAD1)
END      EQU   *,8
         ORG   DETAIL+(HEAD1C-HEAD1)
LENGTH   EQU   *,10
         ORG   DETAIL+(HEAD1D-HEAD1)
FULL     EQU   *,2
         ORG   ,
LL1      DC    AL2(LEN),H'00'                             *LBD 07/85*
         DC    CL(LEN)' '                                   *LBD 12/85*
         ORG   LL1+5                                        *LBD 12/85*
LINE     DC    25C'-',C'  16M LINE. '
         DC    15C'-'                                       *LBD 12/85*
         ORG   ,                                            *LBD 12/85*
LINEL    EQU   *-LINE
         ORG   ,                                            *LBD 11/85*
         SPACE 1
***********************************************************************
*                                                                     *
*    THE FOLLOWING IS A TABLE OF STORAGE AREAS TO MAP.  THE FIRST     *
*        12 BYTES OF EACH ENTRY IS THE AREA TITLE, THE NEXT WORD      *
*        IS THE AREA START ADDRESS, THE NEXT WORD IS THE LENGTH,      *
*        THE NEXT WORD IS THE END ADDRESS, THE NEXT WORD IS THE       *
*        NUMBER OF BYTES USED OR 0 AND THE LAST WORD IS THE DATA      *
*        RESOLUTION ROUTINE ADDRESS.  IN THE CASE OF RESOLUTION       *
*        ROUTINE CXRES, THE START ADDRESS IS REPLACED BY THE          *
*        ABSOLUTE DISPLACEMENT TO THE START ADDRESS IN THE CVT VS     *
*        EXTENSION.                                                   *
*                                                                     *
***********************************************************************
         SPACE 1
TABLE    DS    0A                  START OF TABLE OF AREAS.
         DC    CL12'E-PRIVATE',A(0),A(0),A(0),A(0),A(EPRES)
         DC    CL12'E-CSA',A(0),A(0),A(0),A(0),A(ECRES)
         DC    CL12'E-MLPA'
         DC    A(CVTEMLPS-CVTVSTGX),A(0),A(0),A(0),A(CXRES)
         DC    CL12'E-FLPA'
         DC    A(CVTEFLPS-CVTVSTGX),A(0),A(0),A(0),A(CXRES)
         DC    CL12'E-PLPA'
         DC    A(CVTEPLPS-CVTVSTGX),A(0),A(0),A(0),A(CXRES)
         DC    CL12'E-SQA',A(0),A(0),A(0),A(0),A(ESRES)
         DC    CL12'E-NUC (R/W)'
         DC    A(CVTERWNS-CVTVSTGX),A(0),A(0),A(0),A(CXRES)
         DC    CL12'E-NUC (R/O)',X'01000000',A(0),A(0),A(0),A(ENRORES)
         DC    CL12'NUC (R/O)',A(0),A(0),X'00FFFFFF',A(0),A(NRORES)
         DC    CL12'NUC (R/W)'
         DC    A(CVTRWNS-CVTVSTGX),A(0),A(0),A(0),A(CXRES)
         DC    CL12'SQA',A(0),A(0),A(0),A(0),A(SRES)
         DC    CL12'PLPA',A(CVTPLPAS-CVTVSTGX),A(0),A(0),A(0),A(CXRES)
         DC    CL12'FLPA',A(CVTFLPAS-CVTVSTGX),A(0),A(0),A(0),A(CXRES)
         DC    CL12'MLPA',A(CVTMLPAS-CVTVSTGX),A(0),A(0),A(0),A(CXRES)
         DC    CL12'CSA',A(0),A(0),A(0),A(0),A(CRES)
         DC    CL12'PRIVATE',A(4096),A(0),A(0),A(0),A(PRES)
         DC    CL12'V=R (IF ANY)',A(0),A(0),A(0),A(0),A(VRRES)
         DC    CL12'PSA',A(0),A(4096),A(4095),A(0),A(NOPRES)
         DC    X'00'               END OF TABLE.
         TITLE 'MAPXA - DSECTS.'
         CVT   DSECT=YES
         IHAGDA
TABLED   DSECT                     TABLE ENTRY MAPPING DSECT.
TABTITLE DS    CL12                TABLE ENTRY TITLE.
TABSTART DS    A                   START ADDRESS OF ENTRY'S AREA.
TABLEN   DS    A                   LENGTH OF ENTRY'S AREA.
TABEND   DS    A                   END ADDRESS OF ENTRY'S AREA.
TABFULL  DS    A                   NUMBER OF BYTES USED.
TABRES   DS    A                   ADDRESS OF RESOLUTION ROUTINE.
TLEN     EQU   *-TABLED            LENGTH OF TABLE ENTRY.
         SPACE 1                                          *LBD 07/85*
         IKJIOPL                                          *LBD 07/85*
         END   MAPXA
