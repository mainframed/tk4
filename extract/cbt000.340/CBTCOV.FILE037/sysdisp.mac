         TITLE 'SYSTEM SUMMARY  DISPLAY COMMAND'          *LBD 07/85*
         MACRO
&LABEL   DATEROU   &REG=1
*        REG = THE REGISTER CONTAING THE PACKED JULIAN DATE
*        THIS ROUTINE ALSO USES REGISTERS 1,2,3
*        THIS ROUTINE CONVERTS THE JULIAN DATE INTO THE CALENDAR DATE
*        EX.   FROM 75339 TO 12/05/75
&LABEL   ZAP   MX001M,=P'01'           INITIALIZE MONTH
         ZAP   T001BL+2(2),=P'28'      INITIALIZE FEB
         ST    &REG,R1001ST            STORE JULIAN DATE
         XC    W001X,W001X             ZERO WORK AREA
         MVC   W001X+3(1),R1001ST+1    MOVE YEAR INTO WORK
         L     &REG,W001X              LOAD YEAR INTO REGISTER
         SLL   &REG,4                  SHIFT LEFT 1/2 BYTE
         ST    &REG,W001X              STORE YEAR INTO WORK AGAIN
         OI    W001X+3,X'0F'           CONVERT YEAR INTO PACKED FORMAT
         ZAP   YR001X,W001X            SAVE YEAR
         DP    W001X,=P'04'            DIVIDE YEAR BY 4
         CP    W001X+2(2),=P'00'       IF REMAINDER THEN LEAP YEAR
         BNE   XNOLEAPX                NOT A LEAP YEAR
         ZAP   T001BL+2(2),=P'29'      SET MONTH 2 EQUAL TO 29 DAYS
XNOLEAPX LA    1,T001BL                SET POINTER TO MONTH TABLE
         L     2,=F'02'                SET COUNTER
         LA    3,MX001M-1              SET POINTER TO END OF TABLE
XCPR01   CP    R1001ST+2(2),0(2,1)     COMPARE DAYS TO MONTH DABLE
         BNH   XDATEX                  LESS THAN TABLE
         AP    MX001M,=P'01'           INCRIMENT MONTH COUNTER
         SP    R1001ST+2(2),0(2,1)     SUB TABLE DAY FORM JULIAN DAY
         BXLE  1,2,XCPR01              CONTINUE SCAN
XDATEX   ZAP   DYXX,R1001ST+2(2)       SET DAY
         UNPK  W001X,DYXX              UNPACK DAY
         OI    W001X+3,X'F0'           RESET SIGN
         MVC   XD1(2),W001X+2          MOVE DAY TO O/P AREA
         UNPK  W001X,MX001M            UNPACK MONTH
         OI    W001X+3,X'F0'           RESET SIGN
         MVC   XM1(2),W001X+2          MOVE MONTH TO O/P AREA
         UNPK  W001X,YR001X            UNPACK YEAR
         OI    W001X+3,X'F0'           RESER SIGN
         MVC   XY1(2),W001X+2          MOVE YEAR TO O/P AREA
         B     X&SYSNDX.Z              BRANCH AROUND WOKK AREA
         LTORG                         LITERAL POOL
W001X    DC    F'00'
T001BL   EQU   *                       MONTH TABLE
         DC    PL2'31'
         DC    PL2'28'
         DC    PL2'31'
         DC    PL2'30'
         DC    PL2'31'
         DC    PL2'30'
         DC    PL2'31'
         DC    PL2'31'
         DC    PL2'30'
         DC    PL2'31'
         DC    PL2'30'
         DC    PL2'31'
MX001M   DC    PL2'00'                 MONTH WORK AREA
R1001ST  DC    F'00'                   REGISTER SAVE AREA FOR REG
YR001X   DC    PL2'00'                 YEAR WORK AREA
DYXX     DC    PL2'00'                 DAY WORK AREA
XM1      DC    CL2'  '                 MONTH O/P AREA
         DC    C'/'
XD1      DC    CL2'  '                 DAY O/P AREA
         DC    C'/'
XY1      DC    CL2'  '                 YEAR O/P AREA
X&SYSNDX.Z LA  &REG,XM1                LOAD REGISTER WITH ADDR OF CAL
         MEND
         MACRO
         TIMECONV
***********************************************************************
*                                                                     *
*        TIME CONVERSION ROUTINE                                      *
*                                                                     *
*         REGISTER 7 = TIME IN BINARY 100TH SECONDS                   *
*                                                                     *
*        THIS MACRO WILL CONVERT BINARY TIME TO HH.MM.SS              *
*                                                                     *
***********************************************************************
TIMECONV DS    0H
         STM   R6,R10,@SREGS            SAVE REGISTERS USED
         MVI   @HRS+4,C'.'
         SR    R6,R6                    CLEAR R6
         D     R6,=F'100'               DIVIDE OUT 100TH SEC
         SR    R6,R6
         D     R6,=F'60'                DIVIDE OUT SECONDS
         LR    R8,R6                    STORE SEC IN R8
         SR    R6,R6
         D     R6,=F'60'                DIVIDE OUT MINUTES
         CVD   R7,@DWORD                CVD
         MVC   @TWORK,@TPAT               &
         ED    @TWORK,@DWORD+5            EDIT
         MVC   @HRS,@TWORK+2              @HRS
         CLC   @HRS,=C'  00'            HOURS PRESENT ?
         BNE   *+10                     NO, BRANCH
         MVC   @HRS(5),=CL5' '          BLANK OUT HOURS
         CVD   R6,@DWORD                CVD
         MVC   @TWORK,@TPAT               &
         ED    @TWORK,@DWORD+5            EDIT
         MVC   @MIN,@TWORK+4             @MIN
         CVD   R8,@DWORD                CVD
         MVC   @TWORK,@TPAT               &
         ED    @TWORK,@DWORD+5            EDIT
         MVC   @SEC,@TWORK+4              SEC
         LM    R6,R10,@SREGS            RELOAD REGISTERS USED
         B     @TEXIT
@DWORD   DS    D
***********************************************************************
*                                                                     *
*        WORK AREA                                                    *
*                                                                     *
***********************************************************************
@TWORK   DS    CL6
@TPAT    DC    X'402020212020'
@TIME    DS    0CL10
@HRS     DS    CL4
         DC    C'.'
@MIN     DS    CL2
         DC    C'.'
@SEC     DS    CL2
@SREGS   DC    16F'0'
@TEXIT   EQU   *                   END OF TIME CONVERT ROUTINE
         MEND
         MACRO
&L       KFILL  &A,&B,&C
         LCLA   &LEN
         LCLC   &R
         AIF    ('&C'(1,1) NE '(').A
&LEN     SETA   K'&C-2
&R       SETC   '&C'(2,&LEN)
&L       LR     R1,&R
         AGO    .B
.A       ANOP
&L       L      R1,&C
.B       SRL    R1,10
         CVD    R1,DWK
         MVC    FORMAT,EDITK
         ED     FORMAT+1(6),DWK+5
         AIF    ('&A'(1,1) NE '(').C
&LEN     SETA   K'&A-2
&R       SETC   '&A'(2,&LEN)
         MVC    0(&B,&R),FORMAT+8-&B
         AGO    .D
.C       MVC    &A.(&B),FORMAT+8-&B
.D       ANOP
         SPACE
         MEND
         MACRO
&L       MFILL  &A,&B,&C
         LCLA   &LEN
         LCLC   &R
         AIF    ('&C'(1,1) NE '(').A
&LEN     SETA   K'&C-2
&R       SETC   '&C'(2,&LEN)
&L       LR     R1,&R
         AGO    .B
.A       ANOP
&L       L      R1,&C
.B       DS    0H
*.B      SRL    R1,10
         CVD    R1,DWK
         MVC    FORMAT,EDITK
         ED     FORMAT+1(6),DWK+5
         AIF    ('&A'(1,1) NE '(').C
&LEN     SETA   K'&A-2
&R       SETC   '&A'(2,&LEN)
         MVC    0(&B,&R),FORMAT+8-&B
         AGO    .D
.C       MVC    &A.(&B),FORMAT+8-&B
.D       ANOP
         SPACE
         MEND
SYSDISP  MENTER 12,EQU,COM=SYSDISP,CP=YES
         L     R1,CVTPTR
         USING CVT,R1
         MVC   MVSLVL,=CL7'MVS/370'  PRIME MVS LEVEL       *LBD 12/85*
         TM    CVTDCB,CVTMVSE     XA IF ON
         BZ    NOTXA
         SETON XA
         MVC   MVSLVL,=CL7'MVS/XA'                         *LBD 12/85*
NOTXA    DS    0H
         L     R2,CVTSMCA
         L     R3,CVTPCCAT
*                                                         *LBD 07/85*
         L     R4,CVTSYSAD             SYSRES UCB ADDR    *LBD 07/85*
         MVC   IPLVOL,28(R4)           MOVE TO MESSAGE    *LBD 07/85*
         MVC   SYSNAME,CVTSNAME                           *LBD 05/84*
         LR    R4,R1                   -> CVT             *LBD 07/85*
         S     R4,=F'32'               LESS 32 FOR HEADER *LBD 07/85*
         MVC   CVTINFO(24),0(R4)       MOVE CVT ID INFO   *LBD 07/85*
*                                                         *LBD 07/85*
         IFOFF XA,STOR370                                  *LBD 04/87*
         L     R4,CVTRLSTG             ACTUAL REAL STORAGE AT IPL
         A     R4,=F'01'               AND ROUND IT
         ST    R4,REALSIZE
         MFILL REALSTOR,7,REALSIZE
         B     SKST370                                     *LBD 04/87*
STOR370  L     R4,CVTEORM              END OF REAL STORAGE
         A     R4,=F'01'               AND ROUND IT
         ST    R4,REALSIZE
         KFILL REALSTOR,7,REALSIZE
SKST370  DS    0H                                          *LBD 04/87*
         DROP  R1
******** GET IPL DATE AND TIME
         STM   R1,R3,TSAVE
         USING SMCABASE,R2
         L     R1,SMCAIDTE        LOAD IPL DATE
         O     R1,=X'0000000F'     FOR TESTING ONLY UNDER SE1 ****
         DATEROU
         MVC   IPLDATE(8),0(R1)    IPL DATE MM-DD-YY
         LM    R1,R3,TSAVE         RELOAD REGISTERS
         EJECT
*        CONVERT THE IPL TIME TO HH.MM.SS
         L     R7,SMCAITME
         TIMECONV
         MVC   IPLTIME(8),@TIME+2   MOVE CORRECT TIME
         LM    R1,R3,TSAVE
****     END OF IPL DATE/TIME ROUTINE
         USING PCCAVT,R3
         MVC   SID,SMCASID              MOVE SMF ID
         EJECT                                            *LBD 07/85*
****     GET SYSGEN LEVEL DATE/TIME                       *LBD 07/85*
         LOAD  EP=IEFEDTTB      LOAD EPA OF EDT           *LBD 07/85*
         LR    R5,R0            GET EPA                   *LBD 07/85*
         IFOFF XA,NO31
         L     R1,NO31A
         BSM   0,1                SET TO 31 BIT MODE
NO31A    DC    A(NO31+X'80000000')
NO31     DS    0H
         LA    R5,X'1C'(R5)     -> SYSGEN/IOGEN ID        *LBD 07/85*
EDTLP    CLC   =C'SYSGEN ',0(R5)  SYSGEN ID               *LBD 07/85*
         BE    GOTEDT           YES                       *LBD 07/85*
         CLC   =C'IOGEN  ',0(R5)  IOGEN ID                *LBD 07/85*
         BE    GOTEDT           YES                       *LBD 07/85*
GOTEDT   MVC   GENDATE(8),8(R5) MOVE SYSGEN DATE          *LBD 07/85*
         MVC   GENTIME(5),16(R5) MOVE SYSGEN TIME         *LBD 07/85*
         IFOFF XA,NO31O
         LA    R1,NO31O
         BSM   0,1                SET BACK TO 24 BIT MODE
NO31O    DS    0H
         DELETE EP=IEFEDTTB     DELETE LOAD OF EDT        *LBD 07/85*
         EJECT                                            *LBD 07/85*
         PUTLINE PARM=PUTBLOK,OUTPUT=(SMFL,TERM,SINGLE,   *LBD 07/85*  X
               DATA),MF=(E,IOPLADS)                       *LBD 07/85*
         PUTLINE PARM=PUTBLOK,OUTPUT=(IPLL,TERM,SINGLE,   *LBD 07/85*  X
               DATA),MF=(E,IOPLADS)                       *LBD 07/85*
         PUTLINE PARM=PUTBLOK,OUTPUT=(GENL,TERM,SINGLE,   *LBD 07/85*  X
               DATA),MF=(E,IOPLADS)                       *LBD 07/85*
         PUTLINE PARM=PUTBLOK,OUTPUT=(MEML,TERM,SINGLE,   *LBD 07/85*  X
               DATA),MF=(E,IOPLADS)                       *LBD 07/85*
         DROP  R2
         LA    R5,15                    LOAD MAX # OF PCCAVT ENTRIES
PCCALOOP EQU   *
         L     R2,0(R3)                 -> PCCA
         LTR   R2,R2
         BZ    BUMP
         USING PCCA,R2
         B     DOPCCA
BUMP     LA    R3,4(R3)
         BCT   R5,PCCALOOP
         MLEAVE
DOPCCA   MVC   SER,PCCACPID+2
         MVC   MODEL,PCCACPID
         MVC   CPU,PCCACPID+8
         TM    PCCAATTR,PCCAIO
         BZ    PUT
         MVC   HASIO,MSGIO
PUT      DS    0H
         PUTLINE PARM=PUTBLOK,OUTPUT=(PCCAL,TERM,SINGLE,  *LBD 07/85*  X
               DATA),MF=(E,IOPLADS)                       *LBD 07/85*
         MVC   HASIO,BLANKS
         B     BUMP
         LTORG
         BITSW XA
TSAVE    DS    3F
REALSIZE DS    F
MEML     DC    H'80',H'00'                                *LBD 07/85*
MEMLINE  DC    CL80' '
         ORG   MEMLINE+1
         DC    C'REAL STORAGE = '
REALSTOR DC    CL8' '
         DC    CL4' ',C'CVTINFO: '                        *LBD 07/85*
CVTINFO  DC    CL30' '                                    *LBD 07/85*
         ORG   ,
IPLL     DC    H'80',H'00'                                *LBD 07/85*
IPLLINE  DC    CL80' '
         ORG   IPLLINE+1
         DC    C'IPL '
         DC    C'('                                       *LBD 07/85*
IPLVOL   DC    CL6' '                                     *LBD 07/85*
         DC    C')  '                                     *LBD 07/85*
IPLDATE  DC    CL8' '
         DC    C'    TIME: '
IPLTIME  DC    CL8' '
         ORG   ,
SMFL     DC    H'80',H'00'                                *LBD 07/85*
SMFLINE  DC    CL80' '
         ORG   SMFLINE+1
         DC    C'SMF SYSTEM ID = '
SID      DC    CL4' '
         DC    CL4' ',C'SYSNAME = '                        *LBD 05/84*
SYSNAME  DC    CL8' '                                      *LBD 05/84*
         DC    CL2' '                                      *LBD 12/85*
MVSLVL   DC    CL7' '                                      *LBD 12/85*
         ORG
GENL     DC    H'80',H'00'                                *LBD 07/85*
GENLINE  DC    CL80' '                                    *LBD 07/85*
         ORG   GENLINE+1                                  *LBD 07/85*
         DC    C'SYSGEN LEVEL  DATE: '                    *LBD 07/85*
GENDATE  DC    CL8' '                                     *LBD 07/85*
         DC    CL4' ',C'TIME: '                           *LBD 07/85*
GENTIME  DC    CL5' '                                     *LBD 07/85*
         ORG   ,                                          *LBD 07/85*
PCCAL    DC    H'80',H'00'                                *LBD 07/85*
PCCALINE DC    CL80' '
         ORG   PCCALINE+1
         DC    C'CPU SERIAL #: '
SER      DC    CL6' '
         DC    CL2' '
         DC    C'CPU TYPE: '
CPU      DC    CL4' '
         DC    CL2' ',C'CPU MODEL : '
MODEL    DC    CL2' '
         DC    CL2' '
HASIO    DC    CL5' '
         ORG
BLANKS   DC    CL80' '
MSGIO    DC    C'*I/O*'
DWK      DS    D
FORMAT   DS    D
EDITK    DC    X'40402020202120D2'
EDITM    DC    X'40402020202120D4'
         EJECT
         CVT   DSECT=YES,LIST=YES
         EJECT
         IHAPCCAT
         EJECT
         IHAPCCA
         EJECT
         IEESMCA
         EJECT
         IKJIOPL                                          *LBD 07/85*
         END
