         TITLE 'FINDLPA   -   #S  DISPLAY LPA MODULE ADDRESS'
&TSSO    SETC  'YES'               SET FOR TSSO USE         *LBD 11/85*
***********************************************************************
***********************************************************************
***                                                                 ***
***                                                                 ***
***                                                                 ***
***                     COMMAND  SUB-SYSTEM                         ***
***                  -------------------------                      ***
***                                                                 ***
***                                                                 ***
***       IEESH03D -       #S  DISPLAY LPA MODULES                  ***
***                                                                 ***
***       VERSION -        1.2                                      ***
***                                                                 ***
***       MVS LEVEL -      MVS/SE  3.8.   TO AN SP1.3 LEVEL         ***
***                                                                 ***
***       UPDATED -        07/21/81  AXC-CBT HANDLE ESTAE           ***
***                        01/26/83  AXC-CBT CHANGE ESTAE PARM LEN  ***
***                        11/25/85  LBD-RI  CHANGE FOR TSSO*LBD 11/85*
***                                                                 ***
***                                                                 ***
***********************************************************************
***********************************************************************
         EJECT
         AIF   ('&TSSO' EQ 'YES').TSSO1                     *LBD 11/85*
IEESH03D CSECT
         LR    R12,R15
         USING IEESH03D,R12
         AGO   .NOTSSO1                                     *LBD 11/85*
.TSSO1   ANOP                                               *LBD 11/85*
IEESH03D MENTER 12,EQU,COM=FINDLPA,CP=YES                   *LBD 11/85*
.NOTSSO1 ANOP                                               *LBD 11/85*
         L     R0,SIZE             LOAD GETMAIN AREA SIZE AND SUBPOOL
         GETMAIN R,LV=(0)
         LR    R13,R1
         USING WORK,R13
         ST    R14,SAVRET          SAVE RETURN ADDR
         ST    R2,XSASAVE          SAVE XSA ADDR
         USING XSA,R2
         LR    R10,R13             LOAD SAVE AREA ADDR
         AIF   ('&TSSO' EQ 'YES').SKTSSO1                   *LBD 11/85*
         B     ESTAEBYP            BYPASS ESTAE LIST
ESTAEOVL ESTAE STAEXIT,CT,MF=L
ESTAEBYP MVC   ESTAELST(20),ESTAEOVL       AXC-CBT
         LA    R1,ESTAELST
         ESTAE PARAM=(10),MF=(E,(1))
.SKTSSO1 ANOP                                               *LBD 11/85*
         AIF   ('&TSSO' EQ 'YES').TSSO2                     *LBD 11/85*
         L     R3,XAL              LOAD LIST POINTER
         AGO   .NOTSSO2                                     *LBD 11/85*
.TSSO2   ANOP                                               *LBD 11/85*
         L     R3,CPPLCBUF         -> CPPL COMMAND BUFFER   *LBD 11/85*
         LH    R1,2(R3)            LOAD OFFSET              *LBD 11/85*
         AR    R3,R1               POINT TO OPERAND-4       *LBD 11/85*
         LA    R3,4(R3)            POINT TO OPERAND         *LBD 11/85*
         CLI   0(R3),C' '          ANY OPERAND              *LBD 11/85*
         BE    NOPARM              NO - EXIT STAGE LEFT     *LBD 11/85*
*        LA    R3,0(0,R3)          CLEAR HIGH ORDER
         LTR   R3,R3               PARM EXIST
         BZ    NOPARM              NO, CHECK RETURN
.NOTSSO2 ANOP                                               *LBD 11/85*
         MVC   WTOLIST,BLANKS      CLEAR
         MVC   WMODNAME,0(R3)      SAVE MODULE NAME
         OC    WMODNAME,BLANKS     INSURE UPPER CASE        *LBD 11/85*
         CLI   0(R3),C'*'          ADDRESS
         BE    ADDRESS             YES, GO SEARCH
         L     R4,16               CVT ADDR
         L     R4,188(0,R4)        LPA CDE
         L     R4,0(0,R4)          1ST CDE
         LA    R5,WMODNAME         MODULE NAME
         SR    R9,R9               CDE INDICATOR
         SPACE
CDECHK   CLC   8(8,R4),0(R5)       MATCH
         BE    PRINT               YES, GO PRINT
         L     R4,0(0,R4)          NEXT CDE
*        LA    R4,0(0,R4)          CLEAR HIGH ORDER
         LTR   R4,R4               END OF CHAIN
         BNZ   CDECHK              NO, GO CHECK NEXT
         L     R4,16               CVT
         L     R4,360(0,R4)        LPDE CHAIN
         LA    R9,4                LPDE INDICATOR
         SPACE
LPDECHK  CLC   8(8,R4),=8X'FF'     END OF CHAIN
         BE    NOTFOUND            YES, MODULE NOT FOUND
         CLC   8(8,R4),0(R5)       MATCH
         BE    PRINT               YES, GO PRINT
         LA    R4,40(0,R4)         NEXT LPDE
         B     LPDECHK             GO CHECK NEXT
         EJECT
ADDRESS  DS    0H
         MVC   WMODNAME(8),1(R3)   MOVE ADDRESS             *LBD 11/85*
         OC    WMODNAME,BLANKS     INSURE UPPER CASE        *LBD 11/85*
         LA    R7,WMODNAME         ADDRESS                  *LBD 11/85*
         SR    R4,R4               CLEAR RESULT
         LA    R6,8
PARMCNV0 DS    0H                                           *LBD 11/85*
         CLI   0(R7),C' '          BLANK - END OF ADDR ?    *LBD 11/85*
         BE    PARMCDNE            YES                      *LBD 11/85*
         CLI   0(R7),C'0'          VALID CHAR               *LBD 11/85*
         BL    PARMCNV1            NO
         CLI   0(R7),C'9'          VALID CHAR
         BH    ERROR               NO, PARM ERROR
         B     PARMCNV2            O.K., VALID PARM
         SPACE
PARMCNV1 CLI   0(R7),C'A'          VALID CHAR
         BL    ERROR               NO, PARM ERROR
         CLI   0(R7),C'F'          VALID CHAR
         BH    ERROR               NO, PARM ERROR
         SPACE
PARMCNV2 SR    R8,R8               INSERT
         IC    R8,0(0,R7)             DIGIT
         SRDL  R8,4                SHIFT OUT NUMERIC
         SRL   R9,28               ADJUST NUMERIC
         AH    R9,=H'9'               VALUE
         SH    R8,=H'12'           MAKE SIGN 0 OR 3
         MH    R8,=H'3'            MAKE SIGN 0 OR 9
         SR    R9,R8               CALCULATE HEX VALUE
         LR    R5,R9               LOAD HEX VALUE AND
         SLL   R5,28                  SHIFT INTO
         SLDL  R4,4                      RESULT
         LA    R7,1(0,R7)          NEXT BYTE
         BCT   R6,PARMCNV0
PARMCDNE DS    0H                                           *LBD 11/85*
         LR    R5,R4               SAVE ADDRESS
         L     R4,16               CVT ADDR
         L     R4,188(0,R4)        LPA CDE
         L     R4,0(0,R4)          1ST CDE
         SR    R9,R9               CDE INDICATOR
         EJECT
ACDECH1  TM    28(R4),X'04'        MINOR CDE
         BO    ACDECH2             YES, GO TRY NEXT
         L     R6,20(0,R4)         EXTENT LIST
         L     R7,8(0,R6)          LOAD MODULE LENGTH
*        LA    R7,0(0,R7)          CLEAR HIGH ORDER
         L     R6,12(0,R6)         LOAD MODULE ADDR
*        LA    R6,0(0,R6)          CLEAR HIGH ORDER
         CR    R5,R6               MATCH
         BL    ACDECH2             NO, TRY NEXT
         AR    R6,R7               MODULE END
         CR    R5,R6               MATCH
         BL    APRINT              YES, GO PRINT
         SPACE
ACDECH2  L     R4,0(0,R4)          NEXT CDE
*        LA    R4,0(0,R4)          CLEAR HIGH ORDER
         LTR   R4,R4               END OF CHAIN
         BNZ   ACDECH1             NO, GO CHECK NEXT
         L     R4,16               CVT
         L     R4,360(0,R4)        LPDE CHAIN
         LA    R9,4                LPDE INDICATOR
         SPACE
ALPDECH1 CLC   8(8,R4),=8X'FF'     END OF CHAIN
         BE    NOTADDR             YES, ADDR NOT FOUND
         TM    28(R4),X'04'        MINOR LPDE
         BO    ALPDECH2            YES, TRY NEXT
         L     R6,36(0,R4)         LOAD MODULE ADDR
*        LA    R6,0(0,R6)          CLEAR HIGH ORDER
         L     R7,32(0,R4)         LOAD MODULE LEN
*        LA    R7,0(0,R7)          CLEAR HIGH ORDER
         CR    R5,R6               MATCH
         BL    ALPDECH2            NO, TRY NEXT
         AR    R6,R7               MODULE END
         CR    R5,R6               MATCH
         BL    APRINT              YES, GO PRINT
         SPACE
ALPDECH2 LA    R4,40(0,R4)         NEXT LPDE
         B     ALPDECH1            GO CHECK NEXT
         EJECT
APRINT   MVC   WMODNAME,8(R4)      MODULE NAME
         SPACE
PRINT    DS    0H
         ST    R4,DOUBLE
         UNPK  WCDE(9),DOUBLE(5)
         MVI   WCDE+8,C' '         BLANK                    *LBD 11/85*
         NC    WCDE,=8X'0F'
         TR    WCDE,=C'0123456789ABCDEF'
         LTR   R9,R9
         BNZ   PRINTXL             LPDE
         L     R6,20(0,R4)         LOAD XTNT LIST ADDR
         TM    28(R4),X'04'        MINOR CDE
         BNO   PRINTCD             NO, USE THIS ONE
         L     R6,20(0,R6)         LOAD MAJOR XTNT LIST ADDR
PRINTCD  UNPK  WMODADDR(9),12(5,R6)
         B     PRINTXC
PRINTXL  DS    0H
         UNPK  WMODADDR(9),36(5,R6)                        *LBD 11/85*
PRINTXC  NC    WMODADDR,=8X'0F'   MODULE ADDR
         MVI   WMODADDR+8,C' '     BLANK BYTE               *LBD 11/85*
         TR    WMODADDR,=C'0123456789ABCDEF'
         B     *+4(R9)             BR BY TYPE
         B     PRTCDE              CDE
         TM    28(R4),X'04'        MINOR LPDE
         BNO   PRTLSIZ             NO, GO PRINT MODULE SIZE
         MVC   WMODLEN(8),32(R4) PRINT MAJOR NAME
         MVC   WMODADDR(9),=CL9'*MAJOR='
         B     WTO
         SPACE
PRTLSIZ  UNPK  WMODLEN,33(4,R4)
         NC    WMODLEN,=6X'0F'
         TR    WMODLEN,=C'0123456789ABCDEF'
         B     WTO
         SPACE
PRTCDE   UNPK  WMODLEN(7),9(4,R6) TRANSLATE
         NC    WMODLEN,=6X'0F'
         TR    WMODLEN,=C'0123456789ABCDEF'
         MVC   WMODUSE(4),=C'USE='
         UNPK  WMODUSE+4(5),24(3,R4)  USE COUNT
         NC    WMODUSE+4(4),=6X'0F'
         TR    WMODUSE+4(4),=C'0123456789ABCDEF'
         SPACE 3
         AIF   ('&TSSO' EQ 'YES').TSSO3                     *LBD 11/85*
WTO      LA    R1,WTOLIST
         MVC   WTOHDR,=X'00400100'                          *LBD 11/85*
         SR    R0,R0
         IC    R0,XAU              MCSID
         SVC   35
         AGO   .NOTSSO3                                     *LBD 11/85*
.TSSO3   ANOP                                               *LBD 11/85*
WTO      DS    0H                                           *LBD 11/85*
         LA    R1,MSGHEAD                                   *LBD 11/85*
         BAL   R11,MSGRTN1                                  *LBD 11/85*
         LA    R1,WTOLIST                                   *LBD 11/85*
         MVC   WTOHDR,=X'00400100'                          *LBD 11/85*
         BAL   R11,MSGRTN1                                  *LBD 11/85*
.NOTSSO3 ANOP                                               *LBD 11/85*
         B     RETURN
         EJECT
NOTFOUND LA    R1,NFNDMSG          NOT FOUND
         B     MSGRTN
         SPACE 3
NOTADDR  LA    R1,NFNDADR          NOT FOUND
         B     MSGRTN
         SPACE 3
ERROR    LA    R1,BADADR           INVALID ADDR
         B     MSGRTN
         SPACE 3
NOPARM   LA    R1,ERRMSG           PARM ERROR
         SPACE 3
         AIF   ('&TSSO' EQ 'YES').TSSOM                     *LBD 11/85*
MSGRTN   SR    R0,R0
         IC    R0,XAU              INSERT MCS ID
         SVC   35                  ISSUE WTO
         AGO   .NOTSSOM                                     *LBD 11/85*
.TSSOM   ANOP                                               *LBD 11/85*
         EJECT                                              *LBD 11/85*
MSGRTN   DS    0H                                           *LBD 11/85*
         BAL   R11,MSGRTN1                                  *LBD 11/85*
         B     RETURN                                       *LBD 11/85*
MSGRTN1  DS    0H                                           *LBD 11/85*
         MVC   PLINE+4,BLANKS                               *LBD 11/85*
         LH    R3,0(R1)            * LOAD LENGTH            *LBD 11/85*
         SH    R3,=H'05'           * -4 (WTO HDR) -1 (MVC)  *LBD 11/85*
         EX    R3,MVCPLINE         * MOVE TO PUTLINE        *LBD 11/85*
         LA    R3,5(R3)            * ADD THE 5 BACK         *LBD 11/85*
         STH   R3,PLINE            * STORE PUTLINE LEN      *LBD 11/85*
         PUTLINE PARM=PUTBLOK,OUTPUT=(PLINE,TERM,SINGLE,    *LBD 11/85*X
               DATA),MF=(E,IOPLADS)                         *LBD 11/85*
         BR    R11                                          *LBD 11/85*
MVCPLINE MVC   PLINE+4(0),4(R1)    *** EXECUTED             *LBD 11/85*
PLINE    DC    H'80',H'00'                                  *LBD 11/85*
         DC    CL80' '                                      *LBD 11/85*
.NOTSSOM ANOP                                               *LBD 11/85*
         SPACE 3
RETURN   EQU   *
         AIF   ('&TSSO' EQ 'YES').SKTSSO2                   *LBD 11/85*
         ESTAE 0
.SKTSSO2 ANOP                                               *LBD 11/85*
         L     R0,SIZE             LOAD GETMAIN SIZE AND SUBPOOL
         LR    R1,R13              LOAD GETMAIN AREA ADDR
         L     R14,SAVRET          RETURN ADDR
         FREEMAIN R,LV=(0),A=(1)
         SR    R15,R15
         AIF   ('&TSSO' EQ 'YES').TSSOF                     *LBD 11/85*
         BR    R14
         AGO   .NOTSSOF                                     *LBD 11/85*
.TSSOF   ANOP                                               *LBD 11/85*
         MLEAVE                                             *LBD 11/85*
.NOTSSOF ANOP                                               *LBD 11/85*
         EJECT
         AIF   ('&TSSO' EQ 'YES').SKTSSO3                   *LBD 11/85*
         USING *,R15
STAEXIT  CH    R0,=H'12'           SDWA GOTTEN
         BE    STAEXIT1            NO, FORCE RETURN
         L     R2,=A(STAERTRY)     LOAD RETRY ADDR
         SETRP RC=4,RETADDR=(2),FRESDWA=YES,DUMP=NO
         SPACE 3
STAEXIT1 L     R0,=A(STAERTRY)     LOAD RETRY ADDR
         LA    R15,4
         BR    R14
         DROP  R15
         SPACE 3
         USING *,R15
STAERTRY L     R12,=A(IEESH03D)    LOAD ENTRY POINT ADDR
         LR    R13,R1              RELOAD WORK AREA ADDR
         DROP  R15
         LA    R1,STAEMSG          ADDRESSING ERROR
         L     R2,XSASAVE          RELOAD XSA ADDR
         SR    R0,R0
         IC    R0,XAU              INSERT MCS ID
         SVC   35                  ISSUE WTO
         B     RETURN
         EJECT
.SKTSSO3 ANOP                                               *LBD 11/85*
         LTORG
         DS    0F
         AIF   ('&TSSO' EQ 'YES').TSSOSZ                    *LBD 11/85*
SIZE     DC    X'F1',AL3(WORKEND-WORKSTRT)
         AGO   .NOTSSOZ                                     *LBD 11/85*
.TSSOSZ  ANOP                                               *LBD 11/85*
SIZE     DC    X'00',AL3(WORKEND-WORKSTRT)
.NOTSSOZ ANOP                                               *LBD 11/85*
         SPACE 3
BLANKS   DC    CL80' '                                      *LBD 11/85*
         SPACE 3                                            *LBD 11/85*
         DS    0F
NFNDMSG  DC    X'00360100'
         DC    CL50'MODULE NOT FOUND'
         SPACE 3
MSGHEAD  DS    0F                                           *LBD 11/85*
         DC    X'00360100'                                  *LBD 11/85*
         DC    CL50'LPDE/CDE MODULE    ADDRESS LENGTH'      *LBD 11/85*
         DS    0F
NFNDADR  DC    X'00360100'
         DC    CL50'ADDRESS NOT FOUND'
         SPACE 3
         DS    0F
BADADR   DC    X'00360100'
         DC    CL50'ADDRESS INVALID'
         SPACE 3
         DS    0F
ERRMSG   DC    X'00360100'
         DC    CL50'PARAMETER MISSING'
         SPACE 3
STAEMSG  DC    X'00360100'
         DC    CL50'ERROR ENCOUNTERED IN CONTROL BLOCKS, RETRY COMMAND'
         EJECT
WORK     DSECT
WORKSTRT DS    0D
DOUBLE   DS    2F
SAVRET   DS    18F
XSASAVE  DS    F
WTOLIST  DS    CL64                                         *LBD 11/85*
         ORG   WTOLIST                                      *LBD 11/85*
WTOHDR   DS    CL4                                          *LBD 11/85*
WCDE     DS    CL8                                          *LBD 11/85*
         DS    CL1                                          *LBD 11/85*
WMODNAME DS    CL8                                          *LBD 11/85*
         DS    C                                            *LBD 11/85*
WMODADDR DS    CL8                                          *LBD 11/85*
         DS    C                                            *LBD 11/85*
WMODLEN  DS    CL6                                          *LBD 11/85*
         DS    C                                            *LBD 11/85*
WMODUSE  DS    CL8                                          *LBD 11/85*
         ORG   ,                                            *LBD 11/85*
ESTAELST DS    5F            AXC-CBT
WORKEND  DS    0D
         SPACE 5
XSA      DSECT
XAP      DS    F
XAD      DS    F
XAX      DS    D
XAE      DS    0C
XAR      DS    F
XAN      DS    0C
XAL      DS    F
XAV      DS    D
XAS      DS    D
XAU      DS    C
         DS    C
XAJ      DS    H
         DS    F
         EJECT
         IHASDWA
         EJECT
         AIF   ('&TSSO' EQ 'YES').TSSOL                     *LBD 11/85*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         AGO   .NOTSSOL                                     *LBD 11/85*
.TSSOL   ANOP                                               *LBD 11/85*
         IKJIOPL                                            *LBD 11/85*
.NOTSSOL ANOP                                               *LBD 11/85*
         END
