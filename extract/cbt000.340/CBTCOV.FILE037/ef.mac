         TITLE '     E D I T F I L E   ( E F )                '
************************************************************
*                                                          *
*           'EF' TSO COMMAND                               *
*                                                          *
************************************************************
         SPACE
*        WRITTEN BY. BILL GODFREY, PLANNING RESEARCH CORPORATION.
*        INSTALLATION. PRC COMPUTER CENTER INC, MCLEAN VA.
*        DATE WRITTEN. APRIL 26 1977.
*        DATE UPDATED. SEPTEMBER 10 1980.
*        DESCRIPTION.
*            THIS COMMAND STACKS A LIST OF EDIT SUBCOMMANDS TO BE
*            EXECUTED AGAINST THE DATASET ALLOCATED TO F(EDITFILE).
*
*            THE SUBCOMMANDS ARE SPECIFIED AS A LIST IN PARENTHESES,
*            WITH THE FIRST CHARACTER DEFINING THE DELIMITER THAT
*            SEPARATES THE SUBCOMMANDS IN THE LIST.
*
*            EXAMPLE: ALLOC FI(EDITFILE) DA(ABC.DEF.GHI.DATA) OLD
*                     EF (,V,FIND /LOAD/ 10,DOWN)
*                     EF (.V.BOTTOM.INSERT END.SAVE)
*
*            IT WAS DESIGNED FOR A SUBSYSTEM THAT ALLOWS TSO COMMANDS
*            TO BE ENTERED ON A CONSOLE, BUT THE SUBSYSTEM'S DESIGN
*            REQUIRED ALL SUBCOMMANDS TO BE ON THE SAME LINE AS THE
*            COMMAND.  THIS REQUIRED RE-TYPING THE EDIT COMMAND AND
*            THE DATA SET NAME FOR EACH LINE, WHICH WAS TIRESOME AND
*            DIDN'T LEAVE MUCH ROOM FOR THE SUBCOMMANDS.  THIS COMMAND
*            BUILDS AN EDIT COMMAND FROM THE DATA SET NAME ALLOCATED
*            TO THE FILENAME 'EDITFILE', STACKS IT, THEN STACKS THE
*            SPECIFIED SUBCOMMANDS.
*
*            NOTE - INSTALLATIONS THAT HAVE THE PCF PRODUCT CANNOT
*            USE THE SEMICOLON IN THIS COMMAND, BECAUSE PCF WILL
*            SEE IT AND STRIP IT OUT BEFORE THIS COMMAND SEES IT.
         SPACE
         GBLB  &MVS
&MVS     SETB  1                   1 - MVS   0 - SVS,MVT
         SPACE
EF       START
         USING *,12
         B     @PROLOG-*(,15)
         DC    AL1(11),CL11'EF'
         DC    CL16' &SYSDATE &SYSTIME '
@SIZE    DC    0F'0',AL1(1),AL3(@DATAL) SUBPOOL AND LENGTH
@PROLOG  STM   14,12,12(13)
         LR    12,15
         LR    R2,R1
         L     R0,@SIZE
         GETMAIN R,LV=(0)
         ST    13,4(,1)
         ST    1,8(,13)
         LR    13,1
         LR    R1,R2               RESTORE CPPL POINTER
         USING @DATA,R13
         SPACE 1
*              IOPL --> STPB --> LSD --> LIST
         SPACE
$CPPL    EQU   1
$IOPL    EQU   7
$LSD     EQU   9
         SPACE
         XC    LINKAREA(8),LINKAREA
         SLR   R15,R15
         ST    R15,PTRSTCK         ZERO IKJSTCK ADDRESS
         LA    $IOPL,MYIOPL
         LA    R8,MYSTPB
         SPACE
         USING CPPL,$CPPL
         USING IOPL,$IOPL
         USING LSD,$LSD
         SPACE
*                             INITIALIZE THE IOPL
         L     R2,CPPLUPT
         ST    R2,IOPLUPT
         L     R2,CPPLECT
         ST    R2,IOPLECT
         LA    R2,MYECB
         ST    R2,IOPLECB
*              IOPLIOPB WILL BE INITIALIZED BY THE STACK MACRO
         SPACE
*        STPB WILL BE INITIALIZED BY THE STACK MACRO
         SPACE
************************************************************
*                                                          *
*        SET UP PPL FOR PARSE                              *
*                                                          *
************************************************************
         SPACE
         LA    R15,MYPPL
         USING PPL,R15
         MVC   PPLUPT(4),CPPLUPT
         MVC   PPLECT(4),CPPLECT
         LA    R0,MYECB
         ST    R0,PPLECB
         XC    MYECB,MYECB
*        L     R0,=A(EFPCL)
         LA    R0,PCLADDR
         ST    R0,PPLPCL
         LA    R0,MYANS
         ST    R0,PPLANS
         MVC   PPLCBUF(4),CPPLCBUF
         ST    R13,PPLUWA
         DROP  R15                 PPL
         SPACE 1
************************************************************
*                                                          *
*        CALL THE PARSE SERVICE ROUTINE                    *
*                                                          *
************************************************************
         SPACE 1
         LR    R1,R15              POINT TO PPL
         AIF   (NOT &MVS).SKIP1
         L     R15,16              CVTPTR
         TM    524(R15),X'80'      IF HI ORDER BIT NOT ON
         BNO   PARSELNK               THEN DO LINK, NOT CALL
         L     R15,524(,R15)       CVTPARS
         BALR  R14,R15             CALL IKJPARS
         B     PARSEEXT            SKIP AROUND LINK
PARSELNK EQU   *
.SKIP1   ANOP
         LINK  EP=IKJPARS,SF=(E,LINKAREA)
PARSEEXT EQU   *
         SPACE 1
         LTR   R15,R15
         BZ    OKPARSE
         LA    R15,12
         B     EXIT
OKPARSE  EQU   *
         L     R3,MYANS
         USING IKJPARMD,R3
         SPACE
         LA    R2,EFDCBW
         MVC   0(EFDCBL,R2),EFDCB
         LA    R15,EXLEF
         ST    R15,EXLST(,R2)
         LA    R0,JFCB
         ST    R0,0(,R15)
         MVI   0(R15),X'87'
         SPACE
         LA    R1,OPEN
         MVI   0(R1),X'80'
         SPACE
         RDJFCB ((R2)),MF=(E,(1))
         SPACE
         LTR   R15,R15
         BZ    OKJFCB
         LA    R15,12
         B     EXIT
OKJFCB   EQU   *
         SPACE
*
*              BUILD THE EDIT COMMAND
*
         LA    R15,EDITLINE
         MVI   0(R15),C' '
         MVC   1(L'EDITLINE-1,R15),0(R15)
         MVC   0(4,R15),=C'EDIT'
         MVI   5(R15),X'7D'
         MVC   6(44,R15),JFCB
         LA    R1,6(,R15)
         LA    R0,44
DSNLOOP  CLI   0(R1),X'40'
         BE    DSNEND
         LA    R1,1(,R1)
         BCT   R0,DSNLOOP
DSNEND   CLI   JFCB+44,X'40'       MEMBER NAME PRESENT?
         BNH   QUOTEND             NO - BRANCH
         MVI   0(R1),C'('          PARENS AROUND MEMBER
         LA    R1,1(,R1)
         LA    R0,44
         MVC   0(8,R1),JFCB+44     MOVE MEMBER NAME
MEMLOOP  CLI   0(R1),X'40'
         BE    MEMEND
         LA    R1,1(,R1)
         BCT   R0,MEMLOOP
MEMEND   MVI   0(R1),C')'          CLOSE PARENS
         LA    R1,1(,R1)
QUOTEND  MVI   0(R1),X'7D'
*                       =C'DATA  OLD NUM   CAPS'
         MVC   2(20,R1),=C'DATA  OLD           '
         CLI   NEWKW+1,2
         BNE   *+10
         MVC   8(3,R1),=C'NEW'
         CLI   NONKW+1,2
         BNE   *+10
         MVC   12(5,R1),=C'NONUM'
         CLI   ASISKW+1,2
         BNE   *+10
         MVC   18(4,R1),=C'ASIS'
         LA    R1,22(,R1)
         SLR   R1,R15              LENGTH IN R1
         LA    R1,4(,R1)           PLUS PREFIX LENGTH
         STH   R1,TOTALL           INITIALIZE TOTALL
         STH   R1,LIST             SET FIRST RECORD PREFIX
         SLR   R0,R0
         STH   R0,LIST+2
         LA    R1,LIST(R1)         POINT TO NEXT RECORD
         ST    R1,NEXTPTR          SAVE NEXT RECORD ADDRESS
         SPACE
*
*              ISOLATE SUBCOMMANDS
*
         LA    R2,SUBCHAIN
         TM    6(R2),X'80'         PRESENT?
         BZ    SCX                 NO - BRANCH
         LH    R5,4(,R2)           GET LENGTH
         CH    R5,=H'2'            LENGTH AT LEAST 2?
         BL    SCX                 NO - BRANCH
         L     R4,0(,R2)           POINT TO STRING
         MVC   DELIMITR(1),0(R4)   SAVE THE DELIMITER
         LA    R4,1(,R4)           POINT PAST THE DELIMITER
         BCTR  R5,0                REDUCE THE LENGTH BY 1
SCNEXT   L     R6,NEXTPTR
         LA    R6,4(,R6)
         SLR   R1,R1
SCLOOP   CLC   0(1,R4),DELIMITR    DELIMITER?
         BE    SCSEMI              YES - BRANCH
         IC    R0,0(,R4)
         STC   R0,0(,R6)
         LA    R4,1(,R4)
         LA    R6,1(,R6)
         LA    R1,1(,R1)
         BCT   R5,SCLOOP
SCSEMI   LTR   R1,R1
         BZ    SCNULL
         LA    R1,4(,R1)
         L     R15,NEXTPTR
         STH   R1,HALF
         MVC   0(2,R15),HALF
         XC    2(2,R15),2(R15)
         LA    R15,0(R1,R15)
         ST    R15,NEXTPTR
SCNULL   LA    R4,1(,R4)
         LTR   R5,R5
         BZ    SCX
         BCT   R5,SCNEXT
SCX      LA    R14,LIST
         L     R15,NEXTPTR
         SLR   R15,R14             GET LENGTH
         STH   R15,LISTOTLN
         IKJRLSA MYANS
         SPACE
*                             GET AND INITIALIZE THE LSD
         LH    0,LISTOTLN          GETMAIN FOR LIST
         A     0,SP78                          AND LSD (16 BYTES)
         GETMAIN R,LV=(0)
         LR    $LSD,1
         LA    R14,16(,1)          REG 14 --> LIST
         ST    R14,LSDADATA
         ST    R14,LSDANEXT
         SR    R14,R14
         STH   R14,LSDRCLEN
         LH    R14,LISTOTLN
         STH   R14,LSDTOTLN
         SPACE
         BCTR  R14,0               LENGTH FOR EX
         EX    R14,MVLIST          MOVE LIST INTO SUBPOOL 78
         LR    R1,$IOPL
         SPACE
         AIF   (NOT &MVS).SKIP2
         L     R15,16              CVTPTR
         TM    472(R15),X'80'      IS IKJSTCK IN LPA
         BNO   *+12                NO, BRANCH TO LOAD
         L     R15,472(,R15)       YES, LOAD CVTSTCK
         B     SETSTCK             BRANCH AROUND LOAD
.SKIP2   ANOP
         LA    R0,=CL8'IKJSTCK'
         LOAD  EPLOC=(0)
         LR    R15,R0              GET ENTRY POINT ADDRESS
         LA    R15,0(,R15)         ZERO HIGH ORDER BYTE
SETSTCK  ST    R15,PTRSTCK         SAVE ADDRESS OF IKJSTCK
         LR    R1,$IOPL            (PTF13) - RESTORE REG1
         SPACE
         STACK PARM=(R8),STORAGE=(($LSD),PROCL),ENTRY=(15),MF=(E,(1))
         SPACE
         LTR   R15,R15
         BZ    EXIT0
         L     R15,PTRSTCK
         LR    R1,$IOPL
         STACK PARM=(R8),DELETE=ALL,ENTRY=(15),MF=(E,(1))
         SPACE
         LA    0,L'STACKMSG
         LA    1,STACKMSG
         TPUT (1),(0),R
         LA    R15,16
         B     EXIT
EXIT0    LA    15,0
EXIT     LR    R2,R15
         L     R15,PTRSTCK
         LTR   R15,R15             WAS IKJSTCK LOADED
         BNP   EXITX               NO, BRANCH
         LA    R0,=CL8'IKJSTCK'
         DELETE EPLOC=(0)
EXITX    LR    R15,R2              RESTORE RETURN CODE
         LR    1,13
         L     0,@SIZE
         L     13,4(,13)
         LR    R2,R15
         FREEMAIN R,A=(1),LV=(0)
         LR    R15,R2
         LM    0,12,20(13)
         L     14,12(,13)
         BR    14
         SPACE 1
************************************************************
*                                                          *
*        CONSTANTS                                         *
*                                                          *
************************************************************
         SPACE
MVLIST   MVC   16(0,1),LIST        MOVE LIST TO SUBPOOL 78 AFTER LSD
STACKMSG DC    CL28'STACK ERROR'
SP78     DC    0F'0',AL1(78),AL3(16) SUBPOOL 78
LYSTOTLN DC    0H'0',AL2(LYSTLEN)  T O T A L    L E N G T H
LYST     DC   AL2(39+4,0),CL39'TERM LINES(26) LINESIZE(73) INPUT(ATTN)'
*        DC   AL2(XX+4,0),CLXX'ANOTHER COMMAND CAN BE PLACED HERE'
*        DC   AL2(YY+4,0),CLYY'AND OTHERS. LISTOTLN MAX IS 256'
LYSTLEN  EQU   *-LYST
         SPACE
         PRINT NOGEN
EFDCB    DCB   DDNAME=EDITFILE,MACRF=(GL),DSORG=PS,EXLST=0
EFDCBL   EQU   *-EFDCB
         PRINT GEN
         SPACE
         LTORG
PATCH    DC    4D'0'               PATCH AREA
         SPACE
DDNAM    EQU   40                  DCB OFFSET
EXLST    EQU   36                  DCB OFFSET
PCLADDR  DC    0D'0'               END MAIN CSECT, BEGIN PCL CSECT
         SPACE
************************************************************
*                                                          *
*        PARSE PARAMETERS                                  *
*                                                          *
************************************************************
         SPACE
         PRINT NOGEN
EFPCL    IKJPARM
SUBCHAIN IKJPOSIT PSTRING
NEWKW    IKJKEYWD
         IKJNAME 'OLD'
         IKJNAME 'NEW'
NONKW    IKJKEYWD
         IKJNAME 'NUM'
         IKJNAME 'NONUM'
ASISKW   IKJKEYWD
         IKJNAME 'CAPS'
         IKJNAME 'ASIS'
         IKJENDP
         SPACE
         PRINT GEN
         SPACE
************************************************************
*                                                          *
*        DSECTS                                            *
*                                                          *
************************************************************
         SPACE
@DATA    DSECT
         DS    18F
DOUBLE   DS    D
HALF     EQU   DOUBLE,2
LINKAREA DS    2F
PTRSTCK  DS    F
MYPPL    DS    7F
MYANS    DS    F
MYECB    DS    F
OPEN     DS    F
EFDCBW   DS    0D,(EFDCBL)X
EXLEF    DS    F
JFCB     DS    0D,176X
MYIOPL   DS    4F
MYSTPB   DS    8F
TOTALL   DS    H
LISTOTLN DS    H
DELIMITR DS    C
NEXTPTR  DS    F
LIST     DS    0D,F
EDITLINE DS    CL82       4+1+1+44+10+1+1+5+1+3+1+5+1+4
         DS    256X
         DS    0D
@DATAL   EQU   *-@DATA
         SPACE
         IKJCPPL
         SPACE 2
         IKJIOPL
         SPACE 2
         IKJPPL
         SPACE 2
         IKJLSD
         SPACE 2
         IKJSTPB
         SPACE 2
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END EF
 PUNCH ' SETCODE  AC(0)'
 PUNCH ' IDENTIFY EF(''V 1.0 (PTF13) &SYSDATE &SYSTIME'') '
 PUNCH ' ENTRY    EF'
 PUNCH ' NAME     EF(R)'
         END
