         TITLE 'IEESN03D -   #T  DISPLAY TIOT INFORMATION'
***********************************************************************
***********************************************************************
***                                                                 ***
***                                                                 ***
***                                                                 ***
***                     COMMAND  SUB-SYSTEM                         ***
***                  -------------------------                      ***
***                                                                 ***
***                                                                 ***
***       IEESN03D -       #T  DISPLAY TIOT INFORMATION             ***
***                                                                 ***
***       VERSION -        1.3                                      ***
***                                                                 ***
***       MVS LEVEL -      BASE LEVEL TO MVS/SP1.3                  ***
***                                                                 ***
***       UPDATED -        07/21/81  AXC-CBT HANDLE ESTAE           ***
***                        01/11/82  RLL-CHANGE ESTAE PARM LENGTH   ***
***                        10/05/82  AXC-CBT ADD 3380 AND 3375      ***
***                                  SUPPORT                        ***
***                                                                 ***
***                                                                 ***
***                                                                 ***
***********************************************************************
***      DOCUMENTATION                                      *GNS 12/85*
*                                                           *GNS 12/85*
*                                                           *GNS 12/85*
*     #QINTRDR        ACTIVE INTRDR JOBS AND LINE COUNT     *GNS 12/85*
*                                                           *GNS 12/85*
***********************************************************************
         MACRO           TM SECONDARY                       *GNS 12/85*
&LABEL   TMS   &P1,&P2                                      *GNS 12/85*
&LABEL   LA    R2,TMWA     ADDRESS OF TMWA
         LA    R3,1        LENGTH OF P1                     *GNS 12/85*
         MVCP  0(R3,R2),&P1,R0  MOVE BYTE TO PRIMARY        *GNS 12/85*
         TM    TMWA,&P2  TEST THE BYTE                      *GNS 12/85*
         MEND                                               *GNS 12/85*
         MACRO           CLI SECONDARY                      *GNS 12/85*
&LABEL   CLIS  &P1,&P2                                      *GNS 12/85*
&LABEL   LA    R2,CLIWA    ADDRESS OF CLIWA                 *GNS 12/85*
         LA    R3,1        LENGTH OF P1                     *GNS 12/85*
         MVCP  0(R3,R2),&P1,R0  MOVE BYTE TO PRIMARY        *GNS 12/85*
         CLI   CLIWA,&P2  COMPARE THE BYTE                  *GNS 12/85*
         MEND                                               *GNS 12/85*
         MACRO                                              *GNS 12/85*
&LABEL   ICS   &P1,&P2                                      *GNS 12/85*
&LABEL   LA    R2,CLIWA    ADDRESS OF ICSWA                 *GNS 12/85*
         LA    R3,1        LENGTH OF P1                     *GNS 12/85*
         MVCP  0(R3,R2),&P2,R0  MOVE BYTE TO PRIMARY        *GNS 12/85*
         IC    &P1,CLIWA  COMPARE THE BYTE                  *GNS 12/85*
         MEND                                               *GNS 12/85*
         MACRO            LOAD FROM SECONDARY               *GNS 12/85*
&LABEL   LS    &P1,&P2                                      *GNS 12/85*
&LABEL   LA    R2,LWA      ADDRESS OF LWA                   *GNS 12/85*
         LA    R3,4        LENGTH OF P1                     *GNS 12/85*
         MVCP  0(R3,R2),&P2,R0  MOVE WORD TO PRIMARY        *GNS 12/85*
         L     &P1,LWA                                      *GNS 12/85*
         MEND                                               *GNS 12/85*
         MACRO            LH   FROM SECONDARY               *GNS 12/85*
&LABEL   LHS   &P1,&P2                                      *GNS 12/85*
&LABEL   LA    R2,LWA      ADDRESS OF LWA                   *GNS 12/85*
         LA    R3,2        LENGTH OF P1                     *GNS 12/85*
         MVCP  0(R3,R2),&P2,R0  MOVE WORD TO PRIMARY        *GNS 12/85*
         LH    &P1,LWA                                      *GNS 12/85*
         MEND                                               *GNS 12/85*
         MACRO            COMPARE CHARACTER IN SECONDARY    *GNS 12/85*
&LABEL   CLCS  &P1,&P2,&L P2 IS IN SECONDARY                *GNS 12/85*
&LABEL   LA    R2,CLCWA    ADDRESS OF LWA                   *GNS 12/85*
         LA    R3,&L       LENGTH OF P1                     *GNS 12/85*
         MVCP  0(R3,R2),&P2,R0  MOVE DATA TO PRIMARY        *GNS 12/85*
         CLC   &P1,CLCWA      COMPARE                       *GNS 12/85*
         MEND                                               *GNS 12/85*
         MACRO                                              *GNS 12/85*
&LABEL   MVCPS &P1,&P2,&L     MVC FROM SECONDARY IF TSSO    *GNS 12/85*
&LABEL   LA    R2,CLCWA    ADDRESS OF MVC WORKAREA          *GNS 12/85*
         LA    R3,&L       LENGTH OF P1                     *GNS 12/85*
         MVCP  0(R3,R2),&P2,R0  MOVE DATA TO PRIMARY WA     *GNS 12/85*
         MVC   &P1,CLCWA                                    *GNS 12/85*
         MEND                                               *GNS 12/85*
         EJECT
IEESN03D MENTER 12,EQU,COM=TIOT,CP=YES                      *GNS 12/85*
         MODESET KEY=ZERO,MODE=SUP                          *GNS 12/85*
         L     R0,SIZE             LOAD GETMAIN AREA SIZE AND SUBPOOL
         GETMAIN R,LV=(0)
         LR    R13,R1
         USING WORK,R13
         STM   R14,R12,SAVRET      SAVE RETURN ADDR
         XC    TYPE,TYPE
         LA    R15,500
         LA    R1,OUTAREA-48
INITOUT  LA    R1,48(0,R1)
         XC    0(48,R1),0(R1)                               *GNS 12/85*
         BCT   R15,INITOUT
         LR    R10,R13             LOAD SAVE AREA ADDR
JOBNMFS  DS    0H                                           *GNS 12/85*
         MVC   JOBNAME,=CL8'JES3'       '                   *GNS 12/85*
         L     R3,CVTPTR      POINT TO CVT                  *GNS 12/85*
         USING CVTMAP,R3                                    *GNS 12/85*
         L     R3,CVTASVT     POINT AT 1ST ASCB             *GNS 12/85*
         USING ASVT,R3                                      *GNS 12/85*
         LA    R4,ASVTENTY                                  *GNS 12/85*
NEWASVTE TM    0(R4),X'80'    POINTER TO ASCB?              *GNS 12/85*
         BO    NEXTASCB       YES, GO LOAD ASCB ADDRESS     *GNS 12/85*
LOADASCB L     R2,0(R4)       LOAD ASCB ADDRESS             *GNS 12/85*
         USING ASCB,R2                                      *GNS 12/85*
ASCBLOOP L     R3,ASCBJBNI                                  *GNS 12/85*
         LTR   R3,R3                                        *GNS 12/85*
         BNZ   COMPJOBN       COMPARE JOBNAME               *GNS 12/85*
         L     R3,ASCBJBNS                                  *GNS 12/85*
         LTR   R3,R3                                        *GNS 12/85*
         BZ    NEXTASCB                                     *GNS 12/85*
COMPJOBN CLC   0(8,R3),JOBNAME                              *GNS 12/85*
         BNE   NEXTASCB                                     *GNS 12/85*
         MVC   ASID,ASCBASID         SAVE THE ASID          *GNS 12/85*
         B     ASIDFND               CONTINUE AS IF ASID    *GNS 12/85*
NEXTASCB CLC   0(4,R4),=X'80000000'  LAST ASVT ENTRY        *GNS 12/85*
         BE    ASNERR                YES, JOB NOT FOUND     *GNS 12/85*
         LA    R4,4(R4)              POINT TO NEXT ENTRY    *GNS 12/85*
         B     NEWASVTE              CHECK NEXT NEXT ASVTE  *GNS 12/85*
         DROP  R2,R3                                        *GNS 12/85*
ASIDFND  LH    R1,ASID        GET THE ASID                  *GNS 12/85*
         LTR   R1,R1          IS IT ZERO
         BZ    PARMERR        YES, ERROR
         ST    R1,SRCASID     SAVE ASID FOR SSAR            *GNS 12/85*
         L     R3,CVTPTR      POINT TO CVT                  *GNS 12/85*
         USING CVTMAP,R3                                    *GNS 12/85*
         L     R2,CVTTCBP     GO GET MY ASCB ADDR
         MVC   MYASCB,8(R2)   SAVE ADDR OF ASCB FOR POST
         MVC   MYTCB,0(R2)    SAVE THE TCB ADDRESS FOR STIMER
         L     R2,CVTASVT     POINT AST ASVT                *GNS 12/85*
         USING ASVT,R2                                      *GNS 12/85*
         C     R1,ASVTMAXU    IS ASID TOO BIG
         BH    ASNERR         YES
         SLL   R1,2           ASID*4
         LA    R1,ASVTENTY-4(R1)  POINT AT DESIRED ENTRY
         MVC   TOASCB,0(R1)   MOVE THE ASCB ADDR IF ANY
         TM    TOASCB,ASVTAVAL IS THIS ASCB ADDR OR AVAILABLE
         BO    ASNERR         ASID DOES NOT EXIST
         DROP  R2,R3
         L     R2,TOASCB      POINT AT ASCB
         USING ASCB,R2
         TM    ASCBRCTF,ASCBOUT   IS ASCB SWAPPED OUT
         BO    SWAPOUT
*
*        USE THE SRB CODE AS A SUBROUTINE
*
DOSUBR   OI    FLAG1,FG1SUBR  SET FLAG FOR SUBROUTINE
         LA    R1,DMYPRMS     SETUP DUMMY FRR PARMS
         ST    R1,FRRPRMS
         XC    DMYPRMS,DMYPRMS
         LR    R1,R13         SET UP PARM REGISTER
         LA    R15,D#SRBCD    SET ENTRY POINT ADDR
         LA    R14,GOTBACK    SET RETURN ADDRESS
         BR    R15            GO DO IT
         SPACE 5
*
*        THIS IS THE STIMER EXIT.  ITS PURPOSE IS TO POST THE
*        ECB AT ECB2 AND WAKE UP COMM TASK IF THE SRB FAILS
*        TO DO THIS WE MUST FIND THE ADDRESS OF THE ECB WHICH IS
*        SAVED IN THE XSA AREA OF THE SVRB IN COMM TASK
*
         USING *,R12
D#STX    SAVE  (14,12)
         LR    R12,R15        SET BAE REGISTER
         L     R3,CVTPTR
         L     R3,0(R3)       POINT AT TCB WORDS
         L     R3,0(R3)       POINT AT MY TCB
         L     R3,0(R3)       POINT AT MY RB
         USING RBBASIC-4,R3
D#STX1   SL    R3,=F'4'       POINT BACK TO LOOK AT INTC
         CLI   3(R3),X'01'    LOOK FOR WAIT SVC
         BE    D#STX2         IF FOUND THEN EXIT
         TM    XSTAB2,RBTCBNXT     TEST TCB FLAG
         BO    D#STX3         IF NOT FOUND PROPER RB
         L     R3,RBLINK      POINT AT PREVIOUS RB
         B     D#STX1         TRY AGAIN
D#STX2   L     R2,RBEXSAVE+16 GET ADDR OF ECB
         POST  (R2)         POST THE TIMER ECB
         RETURN (14,12)
         DROP  R12,R3
*
*        IF WE CAN NOT FIND THE RB THEN DUMP
*
D#STX3   DC    H'0'
         USING IEESN03D,R12
         TITLE 'IEESN03D  #T COMMAND  --  PERFORM THE DUMP FUNCTION'
*
*        WE HAVE RETURNED FOR THE SRB FUNCTION NOW CHECK THE RESULTS
*        AND IF GOOD THEN DUMP THE PROPER PART OF MEMORY
*
GOTBACK  TM    FLAG1,FG1SUBR  ARE WE IN SUBROUTINE MOVE
         BO    GOTBK2         IF SO THEN SKIP SOME TESTS
         TM    FLAG1,FG1SRDN  HAS THE SRB COMPLETED
         BZ    SRBFAIL        IF NOT THEN TIMER CAUGHT IT
         TM    FLAG2,FG2PSTR  DID XMPOST HAVE ERROR
         BO    XMPTERR        IF SO THEN MESSGAE
         TM    FLAG2,FG2PURG  WAS SRB PURGED
         BO    SRBPGERR       IF SO THEN TELL ABOUT IT
GOTBK2   EQU   *
         L    R1,MYASID       OLD SECONDARY ASID            *GNS 12/85*
         SSAR R1              RESET TO OLD                  *GNS 12/85*
         SPACE 5
*
*        TIO SEARCH CODE FOLLOWS
*
FORMAT   L     R2,XSASAVE     POINT AT XSA
         LA    R3,OUTAREA
         USING XSA,R2
         MVC   WTOLIST(4),=X'00340100'  FILL IN WTO LIST
         SPACE 1
FORMAT1  MVC   WTOLIST+4(48),0(R3)      FILL IN WTO LIST
         LA    R1,WTOLIST          LOAD WTOLIST ADDR
         BAL   R2,MSGRTN                                    *GNS 12/85*
         LA    R3,48(0,R3)
         CLI   0(R3),X'00'         END OF OUTPUT
         BNE   FORMAT1             NO
         B     RETURN
         TITLE 'IEESN03D  #T COMMAND  --  CHARACTER TO HEX CONVERTOR'
PARMCVT  XR    R0,R0
         LR    R1,R0          CLEAR SOME REGISTERS
         LR    R5,R4          SAVE DESIRED LENGTH IN R5
         SPACE 2
PARMCVT0 CLI   0(R3),C','     CHECK FOR DELIMITERS
         BE    PARMCVTD       IF ANY DELIMITER IS FOUND
         CLI   0(R3),C' '     THEN WE AREA DONE
         BE    PARMCVTD
         CLI   0(R3),C'/'
         BE    PARMCVTD
         CLI   0(R3),C'A'     NOW CHECK FOR HEX CHARACTERS
         BL    ERROR          AND IF INVALID THEN FLAG AS ERROR
         CLI   0(R3),C'F'
         BH    PARMCVT1       NOW TRY NUMBERICS
         NI    0(R3),X'0F'    TURN OFF ZONE
         IC    R0,0(R3)       GET THE CHARACTER
         AH    R0,=H'9'       AND ADJUST TO PROPER VALUE
         B     PARMCVT2
PARMCVT1 CLI   0(R3),C'0'     NOW SEE IF NUMERIC
         BL    ERROR          IF NOT THEN ERROR
         CLI   0(R3),C'9'     AND TRY HIGH VALUE
         BH    ERROR
         NI    0(R3),X'0F'    TURN OFF ZONE
         IC    R0,0(R3)       GET DIGIT
PARMCVT2 SLL   R1,4           CLEAR AREA
         OR    R1,R0          PUT IN NEW DIGIT
         LA    R3,1(R3)       POINT PAST
         BCT   R4,PARMCVT0    TRY AGAIN TILL EMPTY
         BR    R11            ALL DONE AND HAD EXPECTED NUMBER OF CHARS
         SPACE 3
PARMCVTD DS    0H             THE HEX NUMBER TERMINATED BEFORE FULL
         CH    R5,=H'8'       WAS A FULL WORD DESIRED
         BNER  R11            OUT IF NOT
         B     ERROR          FORCE FULLWORD TO BE PRESENT
         TITLE 'IEESN03D  #T COMMAND  --  ERROR ROUTINES'
         EJECT
         USING *,R15
         USING XSA,R2
STAEXIT  CH    R0,=H'12'           SDWA GOTTEN
         BE    STAEXIT1            NO, FORCE RETURN
         L     R2,=A(STAERTRY)     LOAD RETRY ADDR
         SETRP RC=4,RETADDR=(2),FRESDWA=YES,DUMP=NO
         SPACE 3
STAEXIT1 L     R0,=A(STAERTRY)     LOAD RETRY ADDR
         LA    R15,4
         BR    R14
         DROP  R15
         SPACE 3
         USING *,R15
STAERTRY L     R12,=A(IEESN03D)    LOAD ENTRY POINT ADDR
         LR    R13,R1              RELOAD WORK AREA ADDR
         DROP  R15
         LA    R1,STAEMSG          ADDRESSING ERROR
         LA    R2,RETURN                                    *GNS 12/85*
         B     MSGRTN                                       *GNS 12/85*
MSGRTN   MVC   PLINE+4,BLANKS                               *GNS 12/85*
         LH    R14,0(R1)           LOAD LENGTH              *GNS 12/85*
         SH    R14,=H'05'          -4 (WTH HDR) - 1 (MVC)   *GNS 12/85*
         EX    R14,MVCPLINE        MOVE TO PUTLINE          *GNS 12/85*
         LA    R14,5(R14)          ADD THE 5 BACK           *GNS 12/85*
         STH   R14,PLINE           STORE PUTLINE LEN        *GNS 12/85*
         PUTLINE PARM=PUTBLOK,OUTPUT=(PLINE,TERM,SINGLE,    *GNS 12/85**
               DATA),MF=(E,IOPLADS)                         *GNS 12/85*
         BR    R2                                           *GNS 12/85*
MVCPLINE MVC   PLINE+4(0),4(R1)    EXECUTED                 *GNS 12/85*
PLINE    DC    H'80',H'00'                                  *GNS 12/85*
         DC    CL80' '                                      *GNS 12/85*
BLANKS   DC    CL80' '                                      *GNS 12/85*
         SPACE 3
ERROR    LA    R1,ERRMSG           PARM ERROR
         LA    R2,RETURN                TSO RETURN VIA R2   *GNS 12/85*
         B     MSGRTN              GO ISSUE WTO
         SPACE 3
ASNERR   LA    R1,ASNFND           ASID NOT FOUND
         LA    R2,RETURN                TSO RETURN VIA R2   *GNS 12/85*
         B     MSGRTN              GO ISSUE WTO
         SPACE 3
PARMERR  LA    R1,ERRMSG           MVS
         LA    R1,ERRMSG                                    *GNS 12/85*
         LA    R2,RETURN                TSO RETURN VIA R2   *GNS 12/85*
         B     MSGRTN              GO ISSUE WTO
         SPACE 3
SWAPOUT  LA    R1,SWAPMSG     ADDRESS SPACE SWAPPED OUT
         LA    R2,RETURN                TSO RETURN VIA R2   *GNS 12/85*
         B     MSGRTN
         SPACE 3
DISTERR  LA    R1,DISTMSG     ERROR OCCURRED IN SRB MODE
         LA    R2,RETURN                TSO RETURN VIA R2   *GNS 12/85*
         B     MSGRTN
         SPACE 3
SRBFAIL  DS    0H             SRB FAILED TO POST SO DUMP
         LA    R1,SRBFMSG     POINT AT MSG
         BAL   R2,MSGRTN                                    *GNS 12/85*
         DC    H'0'                                         *GNS 12/85*
         SPACE 3
XMPTERR  LA    R1,XMPTMSG     POINT AT MSG
         LA    R2,RETURN                TSO RETURN VIA R2   *GNS 12/85*
         B     MSGRTN
         SPACE 3
SRBPGERR LA    R1,PURGMSG     SRB WAS PURGED BEFORE PROCESS
         LA    R2,RETURN                TSO RETURN VIA R2   *GNS 12/85*
         B     MSGRTN
RETURN   EQU   *
         L     R0,SIZE
         LR    R1,R13              LOAD GETMAIN AREA ADDR
         L     R14,SAVRET          RETURN ADDR
         FREEMAIN R,LV=(0),A=(1)
         SR    R15,R15
         MODESET KEY=NZERO,MODE=PROB                        *GNS 12/85*
         MLEAVE                                             *GNS 12/85*
         EJECT
         LTORG
         DS    0F
SIZE     DC    AL1(0),AL3(WORKEND-WORKSTRT)                 *GNS 12/85*
         SPACE 3
         DS    0F
STAEMSG  DC    X'00360100'
         DC    CL50'ERROR ENCOUNTERED IN CONTROL BLOCKS'
         SPACE 3
         DS    0F
SRBFMSG  DC    X'00280100'
         DC    CL36'SRB FAILED TO POST '
         SPACE 3
         DS    0F
ERRMSG   DC    X'00280100'
         DC    CL36'PARAMETER ERROR'
         SPACE 3
         DS    0F
ASNFND   DC    X'00280100'
         DC    CL36'ADDRESS SPACE SPECIFIED NOT FOUND'
         SPACE 3
         DS    0F
SWAPMSG  DC    X'00360100'
         DC    CL50'ADDRESS SPACE REQUESTED IS SWAPPED OUT'
         SPACE 3
         DS    0F
DISTMSG  DC    X'00360100'
         DC    CL50'DISASTEROUS ERROR OCCURED IN SRB MODE'
         SPACE 3
         DS    0F
XMPTMSG  DC    X'00360100'
         DC    CL50'CROSS-MEMORY POST FAILED'
         SPACE 3
         DS    0F
PURGMSG  DC    X'00360100'
         DC    CL50'ADDRESS SPACE PURGING SRBS'
         DROP  R12,R13
         TITLE 'IEESN03D  #T COMMAND  --  SRB MODE CODE'
D#SRBCD  DS    0D
*
*        THIS CODE PERFORMS THE FOLLOWING FUNCTIONS
*              1 ESTABLISHES AN FRR FOR ERROR RECOVERY
*              2 PASSES BACK THE FORMATTED DATA FOR WTO
*              3 CROSS-MEMORY POST THE MAIN COMMAND PROCESSOR
*
         USING WORK,R8
         USING D#SRBCD,R7
         LR    R8,R1          SET THE MAIN PARM DSECT
         LR    R7,R15         SET THE BASE REGISTER
         ST    R14,ASRBRTN    SAVE RETURN ADDR
         TM    FLAG1,FG1SUBR  IS THIS A SUBROUTINE CALL
         BO    D#SRB1         YES SO SKIP FRR
         LA    R5,D#FRRCD     POINT AT FRR CODE
         SETFRR  A,FRRAD=(R5),WRKREGS=(2,3),PARMAD=(R4)
         ST    R4,FRRPRMS     SAVE ADDR OF FRRPRMS
*
*        NOW INIT THE FRR PARM AREA AND VALIDATE THE INPUT ADDR
*
D#SRB1   L     R9,FRRPRMS     ACCESS THE 6 WORK PARM AREA
         STM   R7,R8,0(R9)    SAVE BASE AND WORK REGS
         LA    R10,OUTAREA    OUTPUT AREA
         L     R4,TOASCB      ASCB TO INTERROGATE           *GNS 12/85*
         ESAR  R3             EXTRACT SECONDARY             *GNS 12/85*
         ST    R3,MYASID                                    *GNS 12/85*
         L     R3,SRCASID     RELOAD NEW 2NDARY ASID        *GNS 12/85*
         AXSET AX=ONE         ONE CMS ACCESS                *GNS 12/85*
         SSAR  R3                                           *GNS 12/85*
***********************************************************************
         LA    R5,16           POINT TO CVT
         USING CVT,R5
         L     R5,CVTJESCT
         USING JESCT,R5
         L     R5,JESSSCT
         USING SSCT,R5
         L     R5,SSCTSSVT
         USING SSVT,R5
         L     R5,SVTTVT
         USING TVTABLE,R5
         LS    R6,DSPDIC             GET DSP DICTIONARY ADDRESS
         USING DSPSTART,R6
NEXTDSP  CLIS  DSPNAME,FF            END OF DISTIONARY
         BE    ALLDONE
         CLCS  =CL8'INTRDR',DSPNAME  IS IT INTRDR DSP?
         BE    DSPFOUND              YES, SAVE DSP NUMBER
         LA    R6,DSPEND             POINT TO NEXT
         B     NEXTDSP
DSPFOUND DS    0H
         MVCPS INTRDRNO,DSPNO,L'DSPNO   SAVE THE DSP NUMBER
         EJECT
FRRRTY   XC    0(4,R10),0(R10) END OF OUTPUT
         TM    FLAG1,FG1SUBR  IS THIS SUBROUTINE MODE
         BO    D#EXIT         IF SO THEN EXIT
         SETFRR  D,WRKREGS=(2,3)
FRRPOST  L     R10,=A(X'40000000') SET CODE FOR POST
         LR    R9,R8          SAVE WORK POINTER IN SAFE REG
         LA    R11,ECB        ADDR OF ECB TO POST
         ICM   R11,8,=X'80'   FLAG AS XMPOST
         LA    R12,D#POSTR    SET POST ERROR RETURN
         L     R13,MYASCB     ASCB TO POST
         L     R15,CVTPTR     POINT AT CVT
         L     R15,CVT0PT01-CVTMAP(R15)    GET POST ENTRY POINTR
         BALR  R14,R15        GO DO POST
         DROP  R7             KILL MAIN ADDRESS
         USING *,R14          SET TEMP BASE
D#PRTN   LR    R8,R9          RESET BASE OF WORK
         SL    R14,=A(D#PRTN-D#SRBCD)  NOW HAVE CORRECTED BASE
         LR    R7,R14         SET TO PROPER REG
         DROP  R14
         USING D#SRBCD,R7     RESET MAIN BASE
         OI    FLAG1,FG1SRDN  FLAG SRB AS COMPLETED
D#EXIT   L     R14,ASRBRTN    RESTORE RETURN ADDR
         BR    R14            EXIT
         SPACE 5
*
*        POST ERROR ROUTINE  .. FLAG ERROR AND LET TIMER
*        WAKE UP COMM TASK
*
D#POSTR  LR    R8,R9          RESET WORK BASE
         OI    FLAG2,FG2PSTR  FLAG POST ERROR
         BR    R14            RETURN TO D#PRTN
         TITLE 'IEESN03D  #T COMMAND  --  FRR FOR THE SRB MODE'
D#FRRCD  DS    0D
         L     R2,0(R1)       POINT AT PARM AREA
         LM    R7,R8,0(R2)    SET BASE REGS
         TM    0(R2),X'80'    ARE WE IN VALIDATION
         BZ    D#FRR1         NOPE
*
*        VALIDATION ERROR
*
         OI    FLAG2,FG2IVLD  SET FLAG FOR MESSAGE
         SETRP RECORD=NO,RC=4,RETADDR=FRRRTY,REGS,DUMP=NO,             X
               RETREGS=YES,FRESDWA=YES
         BR    R14            EXIT
         SPACE 5
*
*        ALL OTHER ERRORS
*
D#FRR1   OI    FLAG2,FG2ERRR  SET FLAG FOR MESSAGES
         LA    R10,OUTAREA-48
         SPACE 1
D#FRR2   LA    R10,48(0,R10)
         CLC   0(4,R10),=F'0'        END OF OUTPUT
         BNE   D#FRR2
         MVC   0(48,R10),=CL48'ERROR ENCOUNTERED IN CONTROL BLOCKS'
         SETRP RECORD=YES,RC=4,RETADDR=FRRRTY,REGS,DUMP=YES,           X
               RETREGS=YES,FRESDWA=YES
         BR    R14            EXIT
         TITLE 'IEESN03D  #T COMMAND  --  RESOURCE MANAGER CLEANUP'
*
*        THIS ROUTINE RECEIVES CONTROL IF THE SRB MUST BE
*        PURGED.
*
D#RMTR   DS    0H
         USING *,R15
         LR    R7,R15         SET BASE REGISTER
         SL    R7,=A(D#RMTR-D#SRBCD)   BY COMPUTATION
         DROP  R15
         USING D#SRBCD,R7
         LR    R8,R2          SET UP POINTER TO WORK
         ST    R14,ASRBRTN    SAVE RETURN ADDR
         OI    FLAG2,FG2PURG  SET PURGED
         B     FRRPOST        GO AND POST TO CLEAN UP
         LTORG
DCBMSG   DC    CL46'DSO=(  )  RFM=(   )  LRECL=       BLKSZ=     '
         DS    0F
DEVTAB   DC    X'0806',CL6'3505  '
         DC    X'0808',CL6'1403  '
         DC    X'0809',CL6'3211  '
         DC    X'080E',CL6'3800  '
         DC    X'080A',CL6'1443  '
         DC    X'0804',CL6'2501  '
         DC    X'1008',CL6'3066  '
         DC    X'1009',CL6'3277  '
         DC    X'100A',CL6'3284  '
         DC    X'100B',CL6'3286  '
         DC    X'8001',CL6'2400  '
         DC    X'8003',CL6'3400  '
         DC    X'2009',CL6'3330  '
         DC    X'200B',CL6'3350  '
         DC    X'200D',CL6'3330-1'
         DC    X'200A',CL6'3340  '
         DC    X'2007',CL6'2305-2'
         DC    X'200C',CL6'3375  '   AXC-CBT 10/05/82
         DC    X'200E',CL6'3380  '   AXC-CBT 10/05/82
         DC    X'0000',CL6'      '
         DC    X'0000',CL6'      '
         DC    X'0000',CL6'      '
ONE      DC    H'1'                USED BY AXSET            *GNS 12/85*
         TITLE 'IEESN03D  #T COMMAND  --  DSECTS'
XSA      DSECT
XAP      DS    F
XAD      DS    F
XAX      DS    D
XAE      DS    0C
XAR      DS    F
XAN      DS    0C
XAL      DS    F
XAV      DS    D
XAS      DS    D
XAU      DS    C
         DS    C
XAJ      DS    H
         DS    F
         EJECT
         EJECT
         CVT
         EJECT
         IHAASVT
         EJECT
         IHAASCB
         EJECT
         IHAFRRS
         EJECT
         IHAPSA
         EJECT
         IHASDWA
         EJECT
         IHASRB
         EJECT
         IHARB
         CVT   DSECT=YES
         IEFJESCT
         IEFSSCVT
         IATYSVT
         IATYTVT
         IATYFCT
         IATYDSP
         EJECT
WORK     DSECT
WORKSTRT DS    0D
SAVRET   DS    18F
         DS    0D
DOUBLE   DS    2F
XSASAVE  DS    F
TYPE     DS    F
WTOLIST  DS    F
PRINT    DS    52C
PST      STAE  PST,CT,MF=L
DMYPRMS  DS    6F             DUMMY AREA FOR FRR PARMS FOR SUBR MODE
FRRPRMS  DS    F              ADDRESS OF 6 WORD FRR PARM
ASRBRTN  DS    F              RETURN ADDR FOR SRB CODE
MYASCB   DS    F              ASCB ADDR OF MAIN ROUTINE
MYTCB    DS    F              TCB ADDRESS FOR MAIN ROUTINE
TOASCB   DS    F              ASCB ADDR OF SRB ROUTINE
ECB      DS    F              ECB FOR MAIN ROUTINE TO WAIT ON
ECB2     DS    F              ECB FOR STIMER TO POST
ECBLIST  DS    2F
LENGTH   DS    F              LENGTH OF STORAGE TO DUMP
SRBAREA  DS    ((SRBSIZE+3)/4)F  THE SRB ITSELF
MYASID   DS    F              MY ASID, OLD SECONDARY ASID   *GNS 12/85*
SRCASID  DS    F              SOURCE ASID, NEW 2NDARY ASID  *GNS 12/85*
ASIDCH   DS    F              ASID OF TOASCB
ASID     DS    H              ASID OF TOASCB
JOBNAME  DS    CL8            JOBNAME                       *GNS 12/85*
FLAG1    DS    X
FG1DUMP  EQU   X'80'
FG1REP   EQU   X'40'
FG1SRDN  EQU   X'02'          IF ON SRB HAS TERMINATED
FG1SUBR  EQU   X'01'
FLAG2    DS    X
FG2NVER  EQU   X'01'          VERIFICATION FAILED
FG2IVLD  EQU   X'02'          VALIDATION FAILED
FG2ERRR  EQU   X'04'          DISASTER OCCURED IN SRB
FG2PURG  EQU   X'08'          SRB WAS PURGED
FG2PSTR  EQU   X'10'          IF ON THEN SRB POST HAD ERROR
ESTAELST DS    5F                                     ****(RLL)****
TMWA     DS    C                                            *GNS 12/85*
CLIWA    DS    C                                            *GNS 12/85*
LWA      DS    F                                            *GNS 12/85*
CLCWA    DS    CL256                                        *GNS 12/85*
INTRDRNO DS    C
OUTAREA  DS    500CL48
WORKEND  DS    0F
         END
