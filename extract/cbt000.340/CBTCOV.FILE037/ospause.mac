         TITLE ' T S S O  OSPAUSE COMMAND'
OSPAUSE  CSECT
***********************************************************************
* THIS IS THE OSPAUSE COMMAND PROCESSOR. IT'S PURPOSE IS TO PROVIDE   *
* A MECHANISM FOR CLISTS TO SLEEP FOR "N" SECONDS, WHERE "N" IS       *
* PASSED ON THE COMMAND LINE. FOR EXAMPLE:                            *
*                                                                     *
* OSPAUSE 10                                                          *
*                                                                     *
* WILL PUT THE CLIST INTO A WAIT FOR 10 SECONDS. THIS IS USEFUL WHEN  *
* GIVING TASKS TIME TO INITIALIZE, OR ANY OTHER TIME IT IS DESIRABLE  *
* TO WAIT FOR SOME TASK.                                              *
*                                                                     *
***********************************************************************
         EQUATES
         STM   R14,R12,12(R13)    SAVE CALLERS REGSITERS
         LR    R12,R15            LOAD ENTRY POINT OF OSPAUSE
         LR    R8,R1              SAVE INPUT PARMS.
         USING OSPAUSE,R12
         B     EYE1
         COPY  EYECATCH
EYE1     DS    0H
         GETMAIN R,LV=72          WE NEED STORAGE FOR THE SAVE AREA
         ST    R13,4(R1)          STORE ADDRESS OF CALLERS SAVE AREA
*                                  SAVE AREA
         ST    R1,8(R13)          REMEMBER WHERE THIS CORE IS
         LR    R13,R1             KEEP A COPY IN R13
*
         GETMAIN R,LV=4096         GETMAIN SOME PRIVATE STORAGE...
         LR    R11,R1
         USING OSPADATD,R11
         MVC   LINE1HD(80),LINE1HC   COPY LINE
***********************************************************************
* THIS SECTION OF THE CODE SETS UP THE TSO IOPL, ALLOWING FOR GETLINE *
* AND PUTLINE.                                                        *
***********************************************************************
         LA    R2,IOPLADS
         USING IOPL,R2
         L     R3,0(8)
         ST    R3,CPPLCBUF
         L     R3,4(8)
         ST    R3,CPPLUPT
         ST    R3,IOPLUPT
         L     R3,8(8)
         ST    R3,CPPLPSCB
         L     R3,12(8)
         ST    R3,CPPLECT
         ST    R3,IOPLECT
         L     R3,ECBADS
         ST    R3,IOPLECB
*
         L     R2,CPPLCBUF         GET THE COMMAND BUFFER.
         LH    R3,2(R2)            GET THE OFFSET TO THE FIRST OPERAND
         LH    R4,0(R2)            GET THE TOTAL LENGTH OF THE BUFFER
         LA    R5,4(R3,R2)         R5 NOW POINTS AT THE NUMBER
         LA    R3,0(R2,R4)         R3 NOW POINTS AT THE END OF THE NUM
         SR    R3,R5               R3 NOW HAS LENGTH OF THE NUMBER
         LTR   R3,R3
         CH    R3,=H'1'
         BL    ERROR1
         CH    R3,=H'3'
         BH    ERROR1
*
         LA    R10,OSPAAREA        POINT TO WORKAREA.
         LR    R0,R3               PUT LENGTH IN R0
         LR    R1,R5               PUT ADDRESS IN R1
         CALL  JCECVTDB            CONVERT IT !
         BNZ   ERROR1              CHECK FOR NUMERIC
         M     R0,=F'100'          TIMES NUMBER BY 100
         ST    R1,OSPINTVL         PUT VALUE AWAY.
         STIMER WAIT,BINTVL=OSPINTVL   ** DO IT **
         B     ENDPROG
*
ERROR1   DS    0H
         PUTLINE PARM=PUTBLOK,OUTPUT=(LINE1HD,TERM,SINGLE,DATA),       X
               MF=(E,IOPLADS)
         B     ENDPROG
*
ENDCMD   DS    0H
ENDPROG  DS    0H
         FREEMAIN R,LV=4096,A=(R11)   FREEMAIN THE PRIVATE STORAGE
         LR    R1,R13              GET ADDRESS OF CORE IN R1
         L     R13,4(R13)          RESTORE R13
         FREEMAIN R,LV=72,A=(R1)    FREE UP THE CORE
         XR    R8,R8
         B     ENDPROG1
ENDPROG1 DS    0H
         L     R14,12(R13)         RELOAD RETURN POINT
         LR    R15,R8              PICK UP RETURN CODE.
         LM    R0,R12,20(R13)      RELOAD MORE REGISTERS
         BR    R14
LINE1HC  DC    H'80',H'0'
         DC    CL76'OSPAUSE TERMINATING -> INVALID PAUSE TIME'
*
*
*
OSPADATD DSECT
OSPAAREA DS    CL200
CPPLCBUF DS    A
CPPLUPT  DS    A
CPPLPSCB DS    A
CPPLECT  DS    A
IOPLADS  DS    4F
ECBADS   DS    F
PUTBLOK  PUTLINE MF=L
LINE1HD  DC    H'80',H'0'
         DC    CL76'OSPAUSE TERMINATING -> INVALID PAUSE TIME'
*
OSPINTVL DS    F
         IKJIOPL
         END   OSPAUSE
 PUNCH ' SETCODE  AC(0)'
 PUNCH ' IDENTIFY OSPAUSE(''TSSO V 4.2.0 &SYSDATE &SYSTIME'') '
 PUNCH ' INCLUDE  SYSLMOD(JCECVT)'
 PUNCH ' ENTRY    OSPAUSE'
 PUNCH ' NAME     OSPAUSE(R)'
         END
