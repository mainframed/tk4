         TITLE 'SYSIND   -     DISPLAY SYSTEM INDICATORS'
***********************************************************************
***********************************************************************
***                                                                 ***
***      MODIFIED TO RUN UNDER TSSO  (1/21/86 - LBD)                ***
***                                                                 ***
***      SYSIND COMMAND                                             ***
***                                                                 ***
***            DISPLAYS CURRENT IPS MEMBER AND SWAP COUNTS          ***
***            BY REASON SINCE LAST IPL.                            ***
***                                                                 ***
***      OPTIONS:                                                   ***
***       A       (DISPLAY ASM COUNTS)                              ***
***       C       (DISPLAY AVAILABLE PCCWS)                         ***
***       I       (DISPLAY IPS MEMBER AND SWAP COUNTS)              ***
***       P       (DISPLAY PAGE AND SWAP DATA SET USAGE) - DEFAULT  ***
***       R       (DISPLAY SRM VALUES)                              ***
***       S       (DISPLAY SWAP DATA SET USAGE)                     ***
***       X       (DISPLAY PERFORMANCE GROUP ACTIVITY)              ***
***                                                                 ***
***                                                                 ***
***                                                                 ***
***********************************************************************
***                     COMMAND  SUB-SYSTEM                         ***
***                  -------------------------                      ***
***                                                                 ***
***                                                                 ***
***       SE2SJ03D -       #I  DISPLAY SYSTEM INDICATORS            ***
***                                                                 ***
***       VERSION -        2.0                                      ***
***                                                                 ***
***       MVS LEVEL -      MVS/XA 2.1.1                             ***
***                                                                 ***
***       UPDATED -        07/21/81  AXC-CBT HANDLE ESTAE           ***
***                                  ADD #IC SUBCOMMAND             ***
***                        08/10/81  JGS - #IR SUBCOMMAND ADDED   NERDC
***                        11/14/82  LMB-CBT FIX #IC FOR 1.3        ***
***                        05/26/83  JAL-SNET FIX CONTROL BLOCK     ***
***                                      CHAINING                   ***
***                        02/07/84  JAL-SNET FIX CONTROL BLOCK     ***
***                                      CHAINING, ADD 31-B1T CODING***
***                                      FOR XA.                    ***
***********************************************************************
***********************************************************************
         EJECT
SYSIND   MENTER  12,EQU,COM=SYSIND,CP=YES
SYSIND   AMODE 24
SYSIND   RMODE 24
         SPLEVEL SET=2
         L     R0,SIZE             GETMAIN SIZE
         GETMAIN R,LV=(0)
         LR    R2,R13                                       *LBD 01/86*
         LR    R13,R1
         USING WORK,R13
         ST    R2,SAVER13          SAVE SAVE AREA ADDR      *LBD 01/86*
         L     R9,AMODE31                                     -JAL/XA-
         BSM   0,R9                                           -JAL/XA-
AMODE31  DC    A(CONT31+X'80000000')                          -JAL/XA-
CONT31   DS    0H                                             -JAL/XA-
         L     R3,CPPLCBUF         -> CPPL COMMAND BUFFER   *LBD 01/86*
         LH    R1,2(R3)            LOAD OFFSET              *LBD 01/86*
         AR    R3,R1               -> OPERAND-4             *LBD 01/86*
         LA    R3,4(R3)            -> OPERNAD               *LBD 01/86*
         CLI   0(R3),C' '          ANY PARM ?               *LBD 01/86*
         BNH   PART                YES                      *LBD 01/86*
         B     PARM                                         *LBD 01/86*
IPS      DS    0H                                           *LBD 01/86*
         MVC   WTOLIST(4),=X'00280100'                             WJB
         MVC   WTOLIST+4(36),LINE1
         L     R4,16               CVT
         L     R4,604(0,R4)        RMCT
         L     R5,20(0,R4)         RMCA
         L     R4,24(0,R4)         WMST
         LA    R6,LINES            LINE FORMATS
         LA    R5,244(0,R5)        SWAP COUNTS IN RMCA         -JAL/XA-
         LA    R7,14               NUMBER OF LINES                 WJB
         MVC   WTOLIST+26(2),4(R4) IPS ID                          WJB
         LA    R1,WTOLIST
         BAL   R15,MSGRTN
         EJECT
PRINT0   L     R4,16               CVT ADDRESS
         L     R4,604(0,R4)        RMCT ADDRESS
         L     R8,4(R4)            CCT ADDRESS
         L     R4,228(R4)          RCT ADDRESS
         MVC   WTOLIST(54),SRMOVLY
         SR    R1,R1
         LH    R1,104(R8)          LONG TERM CPU AVG
         SLR   R0,R0               CLEAR REG. 0 FOR DIVIDE
         D     R0,=F'256'          NORMALIZE THE VALUE
         CVD   R1,DOUBLE
         MVC   WTOLIST+8(4),=X'40212020'
         ED    WTOLIST+8(4),DOUBLE+6
         LH    R1,102(0,R8)        AVERAGE CPU
         CVD   R1,DOUBLE
         MVC   WTOLIST+18(4),=X'40212020'
         ED    WTOLIST+18(4),DOUBLE+6
         LH    R1,72(0,R4)         AVERAGE PAGING
         CVD   R1,DOUBLE
         MVC   WTOLIST+28(4),=X'40212020'
         ED    WTOLIST+28(4),DOUBLE+6
         LH    R1,62(0,R4)         AVERAGE UIC
         CVD   R1,DOUBLE
         MVC   WTOLIST+38(4),=X'40212020'
         ED    WTOLIST+38(4),DOUBLE+6
         LH    R1,70(0,R4)         AVERAGE ASMQ
         CVD   R1,DOUBLE
         MVC   WTOLIST+48(4),=X'40212020'
         ED    WTOLIST+48(4),DOUBLE+6
         EJECT
PRINT    LA    R1,WTOLIST
         BAL   R15,MSGRTN
         MVI   WTOLIST+4,C' '
         MVC   WTOLIST+5(49),WTOLIST+4
         BCT   R7,PRINT1
         B     EXIT
         SPACE 3
PRINT1   MVC   WTOLIST+4(36),0(R6) SET A LINE
         L     R1,0(0,R5)          LOAD SWAP COUNT
         CVD   R1,DOUBLE
         MVC   WTOLIST+32(8),=X'4020206B20212040'
         ED    WTOLIST+32(7),DOUBLE+5
         LA    R5,4(0,R5)          NEXT COUNT
         LA    R6,36(0,R6)         NEXT LINE
         B     PRINT
         SPACE 3
EXIT     EQU   *
         L     R0,SIZE             GETMAIN SIZE
         LR    R1,R13              AREA ADDRESS
         L     R13,SAVER13         RELOAD R13               *LBD 01/86*
         FREEMAIN R,LV=(0),A=(1)
         LA    R8,AMODE24                                  -JAL/XA-
         BSM   0,R8                                        -JAL/XA-
AMODE24  DS    0H                                          -JAL/XA-
         MLEAVE                                             *LBD 01/86*
         EJECT
PARM     DS    0H
         OI    0(R3),C' '          INSURE UPPER CASE        *LBD 01/86*
         CLI   0(R3),C'P'          PAGE DS DISPLAY
         BE    PART                YES, GO PROCESS
         CLI   0(R3),C'C'          PAGE DS DISPLAY
         BE    PCCW                YES, GO PROCESS
         CLI   0(R3),C'A'          ASM DISPLAY
         BE    ASM                 YES, GO PROCESS
         CLI   0(R3),C'S'          SWAP DS DISPLAY
         BE    SART                YES, GO PROCESS
         CLI   0(R3),C'X'          PERFORMANCE GROUP DISPLAY
         BE    PERF                YES, GO PROCESS
         CLI   0(R3),C'R'          RCT DISPLAY                    NERDC
         BE    RCT                 YES, GO PROCESS                NERDC
         CLI   0(R3),C'I'          IPL DISPLAY              *LBD 01/86*
         BE    IPS                 YES, GO DO IT            *LBD 01/86*
         LA    R1,PARMERR
         BAL   R15,MSGRTN
         B     EXIT
         EJECT
PCCW     SR    R5,R5               CLEAR REG 5
         L     R3,16               CVT
         L     R3,704(0,R3)        ASMVT
         L     R4,72(0,R3)         NUMBER OF PCCWS CREATED BY RIM
         L     R3,64(0,R3)         POINTER TO FIRST AVAILABLE PCCW
         LTR   R3,R3               ARE THERE ANY AVAILABLE PCCWS
         BZ    ALLDONE             IF NOT THEN PRINT 0000'S IN MSG
         A     R5,=F'1'            ADD ONE TO COUNTER PCCW IS AVAIL
DOITTOIT L     R3,12(0,R3)         GET POINTER TO NEXT PCCW LMB-CBT
         LTR   R3,R3               IS IT THE LAST ONE
         BZ    ALLDONE             IF SO THEN ALL DONE
         A     R5,=F'1'            ADD ONE TO COUNTER
         B     DOITTOIT            GO GET THE NEXT ONE
ALLDONE  CVD   R4,DOUBLE           CONVERT TOTAL NUM OF PCCWS
         MVC   WTOLIST(34),PCCWMSG1  SET UP WTO
         UNPK  WTOLIST+34(8),DOUBLE  UNPK TOTAL NUMBER OF PCCWS
         OI    WTOLIST+41,X'F0'      MAKE IT PRINTABLE
         LA    R1,WTOLIST            SET UP SVC 35
         BAL   R15,MSGRTN
         CVD   R5,DOUBLE           CONVERT TOTAL NUM OF PCCWS
         MVC   WTOLIST(34),PCCWMSG2  SET UP WTO
         UNPK  WTOLIST+34(8),DOUBLE  UNPK AVAILABLE PCCWS
         OI    WTOLIST+41,X'F0'      MAKE IT PRINTABLE
         LA    R1,WTOLIST            SET UP SVC 35
         BAL   R15,MSGRTN
         B     EXIT                GET OUT BOZO
PART     L     R3,16               CVT
         L     R3,704(0,R3)        ASMVT
         L     R3,8(0,R3)          PART
         L     R4,24(0,R3)         DSNAME TABLE
         LA    R3,80(0,R3)         PART ENTRIES
         SPACE 3
         LA    R1,PARTOVLY
         BAL   R15,MSGRTN
         SPACE 3
PART1    MVI   PARTL1,C' '
         MVC   PARTL1+1(PARTLN1-1),PARTL1
         MVC   PARTNAME(18),0(R4)  DSNAME
         MVC   PARTTYPE(4),=C'PLPA'
         TM    8(R3),X'80'
         BO    PART2
         MVC   PARTTYPE(4),=C'COMN'
         TM    8(R3),X'40'
         BO    PART2
         MVC   PARTTYPE(4),=C'DPLX'
         TM    8(R3),X'20'
         BO    PART2
         MVC   PARTTYPE(4),=C'LOCL'
         EJECT
PART2    L     R1,44(0,R3)         UCB ADDR
         MVC   PARTUNIT(3),13(R1)  UNIT ADDR
         MVC   PARTVOL(6),28(R1)   VOLSER
         L     R15,16(0,R3)        SIZE IN SLOTS
         CVD   R15,DOUBLE
         UNPK  PARTSIZE(5),DOUBLE+5(3)
         OI    PARTSIZE+4,X'F0'
         L     R9,20(0,R3)         AVAILABLE SLOTS
         CVD   R9,DOUBLE
         UNPK  PARTAVAL(5),DOUBLE+5(3)
         OI    PARTAVAL+4,X'F0'
         SR    R8,R8
         M     R8,=F'100'
         DR    R8,R15              CALCULATE PERCENT AVAILABLE
         L     R8,=F'100'
         SR    R8,R9               PERCENT USED
         CVD   R8,DOUBLE
         OI    DOUBLE+7,X'0F'      FORCE + SIGN
         UNPK  PARTPCNT(2),DOUBLE+6(2)
         CLC   DOUBLE+6(2),=X'100F'   100 PERCENT
         BNE   *+10                NO, LEAVE ALONE
         MVC   PARTPCNT(2),=C'99'  MAKE IT 99 PERCENT
         L     R1,56(0,R3)         PARERQTM -   BURST COMPUTATION VALUE
         SRL   R1,8                DIVIDE BY 256
         CVD   R1,DOUBLE
         UNPK  PARTBRST(3),DOUBLE+6(2)
         OI    PARTBRST+2,X'F0'
         MVC   PARTERR(3),=CL3'000'
         L     R1,24(0,R3)         LOAD PART ENTRY ERROR COUNT
         CVD   R1,DOUBLE
         UNPK  PARTERR(3),DOUBLE+6(2)
         OI    PARTERR+2,X'F0'
         MVC   PARTL1(4),=X'00000100'
         LA    R1,PARTLN1                                  *LBD 01/86*
         STC   R1,PARTL1+1                                 *LBD 01/86*
         LA    R1,PARTL1
         BAL   R15,MSGRTN
         SPACE 3
PART3    LA    R4,44(0,R4)         NEXT DSNAME
         LA    R3,64(0,R3)         NEXT PART ENTRY
         CLI   8(R3),X'00'         END OF PART
         BE    SART                YES - GO DO SWAP D/S    *LBD 01/86*
*        BE    EXIT                YES, EXIT
         TM    9(R3),X'80'         NOT IN USE
         BO    PART3               YES, GET NEXT
         B     PART1
         EJECT
SART     L     R3,16               CVT
         L     R3,704(0,R3)        ASMVT
         L     R3,4(0,R3)          SART
         L     R4,24(0,R3)         DSNAME TABLE
         SPACE 3
SART0    MVC   SARTDSP0(42),SARTOVL0
         MVC   SARTNO(4),=XL4'40202120'
         MVC   SARTTAVL(6),=XL6'402020202120'
         MVC   SARTPGST(6),=XL6'402020202120'
         MVC   SARTLST0(4),=X'002E0100'
         L     R1,8(0,R3)          NO. OF SWAP DS IN USE
         CVD   R1,DOUBLE
         ED    SARTNO(4),DOUBLE+6
         LR    R10,R1              SAVE NO. OF SWAP DS
         L     R1,36(0,R3)         AVAILABLE SWAP SETS TOTAL
         CVD   R1,DOUBLE
         ED    SARTTAVL(6),DOUBLE+5
         L     R1,56(0,R3)         PAGES/SWAPSET
         CVD   R1,DOUBLE
         ED    SARTPGST(6),DOUBLE+5
         LA    R1,SARTLST0
         BAL   R15,MSGRTN
         LA    R3,80(0,R3)         SART ENTRIES
         LTR   R10,R10             ANY SWAP DS IN USE
         BZ    SARTNMSG            NO, ISSUE MSG
         MVC   PR(5),BLANKS                                *LBD 01/86*
         LA    R1,PARTOVLY
         BAL   R15,MSGRTN
         SPACE 3
SART1    DS    0H
         MVC   PARTL1(PARTLN1),BLANKS
         MVC   PARTNAME(18),0(R4)  DSNAME
         MVC   PARTTYPE,=C'SWAP'                           *LBD 01/86*
         L     R1,44(0,R3)         UCB ADDR
         MVC   PARTUNIT(3),13(R1)  UNIT ADDR
         MVC   PARTVOL(6),28(R1)   VOLSER
         EJECT
SART2    L     R15,16(0,R3)        SIZE IN SWAP SETS
         CVD   R15,DOUBLE
         UNPK  PARTSIZE(5),DOUBLE+5(3)
         OI    PARTSIZE+4,X'F0'
         L     R9,20(0,R3)         AVAILABLE SWAP SETS
         CVD   R9,DOUBLE
         UNPK  PARTAVAL(5),DOUBLE+5(3)
         OI    PARTAVAL+4,X'F0'
         SR    R8,R8
         M     R8,=F'100'
         DR    R8,R15              CALCULATE PERCENT AVAILABLE
         L     R8,=F'100'
         SR    R8,R9               PERCENT USED
         CVD   R8,DOUBLE
         OI    DOUBLE+7,X'0F'      FORCE + SIGN
         UNPK  PARTPCNT(2),DOUBLE+6(2)
         CLC   DOUBLE+6(2),=X'100F'   100 PERCENT
         BNE   *+10                NO, LEAVE ALONE
         MVC   PARTPCNT(2),=C'99'  MAKE IT 99 PERCENT
         L     R1,24(0,R3)         SWAP SETS IN ERROR
         CVD   R1,DOUBLE
         UNPK  PARTERR(3),DOUBLE+5(2)
         OI    PARTERR+2,X'F0'
         MVC   PARTL1(4),=X'00000100'
         LA    R1,PARTLN1                                  *LBD 01/86*
         STC   R1,PARTL1+1                                 *LBD 01/86*
         LA    R1,PARTL1
         BAL   R15,MSGRTN
         SPACE 3
SART3    BCT   R10,*+8             PROCESS NEXT ENTRY
         B     EXIT                END
         LA    R4,44(0,R4)         NEXT DSNAME
         LA    R3,48(0,R3)         NEXT SART ENTRY
         TM    9(R3),X'80'         NOT IN USE
         BO    SART3               YES, GET NEXT
         B     SART1
         SPACE 3
SARTNMSG LA    R1,SARTMSG
         BAL   R15,MSGRTN
         B     EXIT
         EJECT
ASM      MVC   WTOLIST(4),=X'001A0100'
         L     R4,16               CVT
         L     R4,704(0,R4)        ASMVT
         MVC   WTOLIST+4(12),=CL12'ILRSLOTC'
         MVC   WTOLIST+16(10),=X'40206B2020206B202120'
         L     R1,128(0,R4)        LOAD
*        LA    R1,0(0,R1)             SLOTC
*        SH    R1,=H'8'                  VALUE
*        L     R1,0(0,R1)                   AND
         CVD   R1,DOUBLE                       CONVERT
         ED    WTOLIST+16(10),DOUBLE+4
         BAL   R5,APRINT           GO PRINT RESULTS
         MVC   WTOLIST+4(12),=CL12'ILRSLOTV'
         MVC   WTOLIST+16(10),=X'40206B2020206B202120'
         L     R1,128(0,R4)        LOAD
*        L     R1,0(0,R1)             SLOTV VALUE
         CVD   R1,DOUBLE                 AND CONVERT
         ED    WTOLIST+16(10),DOUBLE+4
         BAL   R5,APRINT           GO PRINT RESULTS
         LA    R4,108(0,R4)        ASM COUNTS
         MVC   WTOLIST+4(12),=CL12'AVAIL SLOTS'
         BAL   R5,AFORM            GO FORMAT
         MVC   WTOLIST+4(12),=CL12'TOTAL SLOTS'
         BAL   R5,AFORM            GO FORMAT
         MVC   WTOLIST+4(12),=CL12'VIO SLOTS'
         BAL   R5,AFORM            GO FORMAT
         MVC   WTOLIST+4(12),=CL12'ADSPC SLOTS'
         BAL   R5,AFORM            GO FORMAT
         MVC   WTOLIST+4(12),=CL12'BAD SLOTS'
         BAL   R5,AFORM            GO FORMAT
         B     EXIT                EXIT
         SPACE 3
AFORM    L     R1,0(0,R4)          LOAD COUNT
         CVD   R1,DOUBLE              AND CONVERT
         MVC   WTOLIST+16(10),=X'40206B2020206B202120'
         ED    WTOLIST+16(10),DOUBLE+4
         LA    R4,4(0,R4)          NEXT COUNT
         SPACE 3
APRINT   LA    R1,WTOLIST
         BAL   R15,MSGRTN          ISSUE WTO
         MVI   WTOLIST+4,C' '                                   -JAL-
         MVC   WTOLIST+5(36),WTOLIST+4                          -JAL-
         BR    R5                  RETURN
         EJECT
PERF     L     R4,16               CVT
         L     R4,604(0,R4)        RMCT
         L     R5,88(0,R4)         WAMT
         LH    R7,38(0,R5)         MAX PERFORM GROUP NUMBER
         SR    R8,R8
         LA    R9,84(0,R5)         WAMP OFFSET TABLE
         SR    R10,R10
         SR    R11,R11
         XC    WAMPTOTL(80),WAMPTOTL
         MVC   WTOLIST(54),PERFOVLY
         LA    R1,WTOLIST
         BAL   R15,MSGRTN
         SPACE 1
PERF1    LA    R8,1(0,R8)          INCR PGN NUMBER
         CLC   0(4,R9),4(R9)       NEXT SAME AS PREVIOUS
         BE    PERF3               YES, GET NEXT OFFSET
         L     R6,0(0,R9)          WAMP OFFSET
         L     R15,4(0,R9)         NEXT OFFSET
         SR    R15,R6
         SR    R14,R14
         LH    R1,36(0,R5)         WAMP LENGTH
         DR    R14,R1
         CH    R15,=H'1'           ONLY ONE
         BE    *+10                YES
         LR    R11,R15             SAVE NUMBER OF PERIODS
         LA    R10,1               1ST PERIOD
         AR    R6,R5               WAMP ADDRESS
         SPACE 1
PERF2    CVD   R8,DOUBLE
         MVI   WTOLIST+4,C' '
         MVC   WTOLIST+5(49),WTOLIST+4
         UNPK  WTOLIST+4(2),DOUBLE+6(2)
         OI    WTOLIST+5,X'F0'
         CVD   R10,DOUBLE
         UNPK  WTOLIST+9(1),DOUBLE+7(1)
         OI    WTOLIST+9,X'F0'
         CLI   WTOLIST+9,C'0'      ONE PERIOD IN PGN
         BNE   *+10                NO
         MVC   WTOLIST+8(3),=C'ALL'
         L     R15,0(0,R6)         NUMBER OF TRANSACTIONS
         LR    R3,R15              SAVE NO. OF TRANS
         L     R1,0(0,R6)          NUMBER OF TRANSACTIONS
         A     R1,WAMPTOTL
         ST    R1,WAMPTOTL         SAVE TOTAL FOR ALL PERIODS
         LTR   R15,R15             ZERO
         BZ    PERF3               YES, NO PRINT
         CVD   R15,DOUBLE
         MVC   WTOLIST+12(7),=X'4020206B202120'
         ED    WTOLIST+12(7),DOUBLE+5
         SR    R14,R14
         L     R15,40(0,R6)        TOTAL SWAPS
         L     R1,40(0,R6)         NUMBER OF SWAPS
         A     R1,WAMPTOTL+40
         ST    R1,WAMPTOTL+40      SAVE TOTAL FOR ALL PERIODS
         DR    R14,R3              DIVIDE BY ENDED TRANSACTIONS
         CVD   R15,DOUBLE          AVG SWAPS
         SRDL  R14,32
         M     R14,=F'100'
         DR    R14,R3              AVG HUNDREDTHS SWAPS
         CVD   R15,DOUBLEX
         MVC   WTOLIST+38(7),=X'402021204B2020'
         ED    WTOLIST+38(4),DOUBLE+6
         UNPK  WTOLIST+43(2),DOUBLEX+6(2)
         OI    WTOLIST+44,X'F0'
         SR    R14,R14
         L     R15,12(0,R6)        TOTAL ELAPSED TIME FOR ENDED TRANS
         L     R1,12(0,R6)         TOTAL TIME
         A     R1,WAMPTOTL+12
         ST    R1,WAMPTOTL+12      SAVE TOTAL FOR ALL PERIODS
         DR    R14,R3              DIVIDE BY ENDED TRANSACTIONS
         SR    R14,R14
         D     R14,=F'1000'
         CVD   R15,DOUBLE          AVG SECONDS RESPONSE TIME
         SRDL  R14,32
         D     R14,=F'10'
         CVD   R15,DOUBLEX         AVG HUNDREDTHS RESPONSE TIME
         MVC   WTOLIST+45(9),=X'4020202021204B2020'
         ED    WTOLIST+45(6),DOUBLE+5
         UNPK  WTOLIST+52(2),DOUBLEX+6(2)
         OI    WTOLIST+53,X'F0'
         L     R3,8(0,R6)          TOTAL SERVICE
         L     R1,8(0,R6)          TOTAL SERVICE
         A     R1,WAMPTOTL+8
         ST    R1,WAMPTOTL+8       SAVE TOTAL FOR ALL PERIODS
         SR    R14,R14
         LR    R15,R3
         M     R14,=F'1000'
         LR    R3,R15              SERVICE TIMES 1000
         L     R15,4(0,R6)         TOTAL TRANS TIME
         L     R1,4(0,R6)          TOTAL TRANS TIME
         A     R1,WAMPTOTL+4
         ST    R1,WAMPTOTL+4       SAVE TOTAL FOR ALL PERIODS
         SR    R14,R14
         LR    R1,R15
         LR    R15,R3
         DR    R14,R1              DIVIDE SERVICE
         CVD   R15,DOUBLE          AVG TR SERVICE
         MVC   WTOLIST+20(7),=X'4020206B202120'
         ED    WTOLIST+20(7),DOUBLE+5
         SR    R14,R14
         L     R15,36(0,R6)        TOTAL RES TIME
         L     R1,36(0,R6)         TOTAL RES TIME
         A     R1,WAMPTOTL+36
         ST    R1,WAMPTOTL+36      SAVE TOTAL FOR ALL PERIODS
         SR    R14,R14
         LR    R1,R15
         LR    R15,R3
         DR    R14,R1              DIVIDE SERVICE
         CVD   R15,DOUBLE          AVG ABS RATE
         MVC   WTOLIST+29(7),=X'4020206B202120'
         ED    WTOLIST+29(7),DOUBLE+5
         LA    R1,WTOLIST
         BAL   R15,MSGRTN
         EJECT
PERF3    LTR   R11,R11             MULTIPLE PERIODS OR 'ALL'
         BZ    PERF5               NO
         LH    R1,36(0,R5)         WAMP SIZE
         AR    R6,R1               NEXT PERIOD WAMP
         LA    R10,1(0,R10)        BUMP PERIOD NUMBER
         CR    R11,R10             END OF PERIODS
         BNL   PERF2               NO
         SPACE 1
PERF4    SR    R10,R10
         SR    R11,R11
         LA    R6,WAMPTOTL
         B     PERF2               PRINT TOTALS
         SPACE 1
PERF5    LA    R9,4(0,R9)          INCR INTO TABLE
         XC    WAMPTOTL(80),WAMPTOTL
         BCT   R7,PERF1
         B     EXIT
         EJECT ,                                                  NERDC
RCT      DS    0H                                                 NERDC
         MVC   WTOLIST(4),=X'00290100'  LENGTH AND FLAGS          NERDC
         MVC   WTOLIST+4(37),RCTLINE0   TITLE LINE                NERDC
         BAL   R5,APRINT           PRINT IT                       NERDC
         L     R4,16               CVT                            NERDC
         USING CVTDSECT,R4         ADDRESSING                     NERDC
         L     R4,CVTOPCTP         POINT TO SRM CNTL BLKS         NERDC
         USING RMCT,R4             ADDRESSING                     NERDC
         L     R4,RMCTRCT          POINT TO SRM RCT               NERDC
         USING RCTDSECT,R4         ADDRESSING FOR RCT (FINALLY)   NERDC
         CLC   =C'RCT ',RCTRCT     FOUND IT?                      NERDC
         BNE   RCTBAD              NOPE - GIVE UP                 NERDC
         SPACE 1                                                  NERDC
         MVI   WTOLIST+4,C' '           SECOND TITLE LINE         NERDC
         MVC   WTOLIST+5(36),WTOLIST+4  SECOND TITLE LINE         NERDC
         MVC   WTOLIST+28(9),RCTLINE1   SECOND TITLE LINE         NERDC
         BAL   R5,APRINT           PRINT IT                       NERDC
         SPACE 1                                                  NERDC
         MVC   WTOLIST+4(15),=C'CPU UTILIZATION'               -JAL-
         LH    R1,RCVCPUA                                         NERDC
         LA    R1,7(,R1)           BUMP FOR AVERAGE               NERDC
         SRL   R1,4                DIVIDE BY 16                   NERDC
         BAL   R5,RCTBIN                                          NERDC
         MVC   WTOLIST+4+20(5),DOUBLE                             NERDC
         LH    R1,RCCCPUTL                                        NERDC
         LA    R1,7(,R1)           BUMP FOR AVERAGE               NERDC
         SRL   R1,4                DIVIDE BY 16                   NERDC
         BAL   R5,RCTBIN                                          NERDC
         MVC   WTOLIST+4+27(5),DOUBLE                             NERDC
         LH    R1,RCCCPUTH                                        NERDC
         LA    R1,7(,R1)           BUMP FOR AVERAGE               NERDC
         SRL   R1,4                DIVIDE BY 16                   NERDC
         BAL   R5,RCTBIN                                          NERDC
         MVC   WTOLIST+4+32(5),DOUBLE                             NERDC
         BAL   R5,APRINT           PRINT IT                       NERDC
         SPACE 1                                                  NERDC
         MVC   WTOLIST+4(19),=C'CPU UTIL W/ DEM PAG'           -JAL-
         LH    R1,RCCCPUPL                                        NERDC
         LA    R1,7(,R1)           BUMP FOR AVERAGE               NERDC
         SRL   R1,4                DIVIDE BY 16                   NERDC
         BAL   R5,RCTBIN                                          NERDC
         MVC   WTOLIST+4+27(5),DOUBLE                             NERDC
         LH    R1,RCCCPUPH                                        NERDC
         LA    R1,7(,R1)           BUMP FOR AVERAGE               NERDC
         SRL   R1,4                DIVIDE BY 16                   NERDC
         BAL   R5,RCTBIN                                          NERDC
         MVC   WTOLIST+4+32(5),DOUBLE                             NERDC
         BAL   R5,APRINT           PRINT IT                       NERDC
         SPACE 1                                                  NERDC
         MVC   WTOLIST+4(11),=C'PAGING RATE'                   -JAL-
         LH    R1,RCVPTR                                          NERDC
         BAL   R5,RCTBIN                                          NERDC
         MVC   WTOLIST+4+20(5),DOUBLE                             NERDC
         LH    R1,RCCPTRTL                                        NERDC
         BAL   R5,RCTBIN                                          NERDC
         MVC   WTOLIST+4+27(5),DOUBLE                             NERDC
         LH    R1,RCCPTRTH                                        NERDC
         BAL   R5,RCTBIN                                          NERDC
         MVC   WTOLIST+4+32(5),DOUBLE                             NERDC
         BAL   R5,APRINT           PRINT IT                       NERDC
         SPACE 1                                                  NERDC
         MVC   WTOLIST+4(18),=C'DEMAND PAGING RATE'            -JAL-
         LH    R1,RCVDPR                                          NERDC
         BAL   R5,RCTBIN                                          NERDC
         MVC   WTOLIST+4+20(5),DOUBLE                             NERDC
         LH    R1,RCCDPRTL                                        NERDC
         BAL   R5,RCTBIN                                          NERDC
         MVC   WTOLIST+4+27(5),DOUBLE                             NERDC
         LH    R1,RCCDPRTH                                        NERDC
         BAL   R5,RCTBIN                                          NERDC
         MVC   WTOLIST+4+32(5),DOUBLE                             NERDC
         BAL   R5,APRINT           PRINT IT                       NERDC
         SPACE 1                                                  NERDC
         MVC   WTOLIST+4(17),=C'TOTAL PAGING RATE'             -JAL-
         LH    R1,RCVPAGRT                                        NERDC
         BAL   R5,RCTBIN                                          NERDC
         MVC   WTOLIST+4+20(5),DOUBLE                             NERDC
         BAL   R5,APRINT           PRINT IT                       NERDC
         SPACE 1                                                  NERDC
         MVC   WTOLIST+4(20),=C'PAGE DELAY TIME (MS)'          -JAL-
         LH    R1,RCVMSPP                                         NERDC
         BAL   R5,RCTBIN                                          NERDC
         MVC   WTOLIST+4+20(5),DOUBLE                             NERDC
         LH    R1,RCCPDLTL                                        NERDC
         BAL   R5,RCTBIN                                          NERDC
         MVC   WTOLIST+4+27(5),DOUBLE                             NERDC
         LH    R1,RCCPDLTH                                        NERDC
         BAL   R5,RCTBIN                                          NERDC
         MVC   WTOLIST+4+32(5),DOUBLE                             NERDC
         BAL   R5,APRINT           PRINT IT                       NERDC
         SPACE 1                                                  NERDC
         MVC   WTOLIST+4(21),=C'PAGE DELAY W/ DEM PAG'         -JAL-
         LH    R1,RCCMSPTL                                        NERDC
         BAL   R5,RCTBIN                                          NERDC
         MVC   WTOLIST+4+27(5),DOUBLE                             NERDC
         LH    R1,RCCMSPTH                                        NERDC
         BAL   R5,RCTBIN                                          NERDC
         MVC   WTOLIST+4+32(5),DOUBLE                             NERDC
         BAL   R5,APRINT           PRINT IT                       NERDC
         SPACE 1                                                  NERDC
         MVC   WTOLIST+4(13),=C'AVG ASM QUEUE'                 -JAL-
         LH    R1,RCVASMQA                                        NERDC
         BAL   R5,RCTBIN                                          NERDC
         MVC   WTOLIST+4+20(5),DOUBLE                             NERDC
         LH    R1,RCCASMTL                                        NERDC
         BAL   R5,RCTBIN                                          NERDC
         MVC   WTOLIST+4+27(5),DOUBLE                             NERDC
         LH    R1,RCCASMTH                                        NERDC
         BAL   R5,RCTBIN                                          NERDC
         MVC   WTOLIST+4+32(5),DOUBLE                             NERDC
         BAL   R5,APRINT           PRINT IT                       NERDC
         SPACE 1                                                  NERDC
         MVC   WTOLIST+4(7),=C'AVG UIC'                        -JAL-
         LH    R1,RCVUICA                                         NERDC
         BAL   R5,RCTBIN                                          NERDC
         MVC   WTOLIST+4+20(5),DOUBLE                             NERDC
         LH    R1,RCCUICTL                                        NERDC
         BAL   R5,RCTBIN                                          NERDC
         MVC   WTOLIST+4+27(5),DOUBLE                             NERDC
         LH    R1,RCCUICTH                                        NERDC
         BAL   R5,RCTBIN                                          NERDC
         MVC   WTOLIST+4+32(5),DOUBLE                             NERDC
         BAL   R5,APRINT           PRINT IT                       NERDC
         SPACE 1                                                  NERDC
         MVC   WTOLIST+4(16),=C'AVG AVAIL FRAMES'              -JAL-
         LH    R1,RCVAFQA                                         NERDC
         BAL   R5,RCTBIN                                          NERDC
         MVC   WTOLIST+4+20(5),DOUBLE                             NERDC
         BAL   R5,APRINT           PRINT IT                       NERDC
         SPACE 1                                                  NERDC
         B     EXIT                DONE                           NERDC
         SPACE 3                                                  NERDC
RCTBIN   DS    0H                  CONVERT VALUE TO BIN           NERDC
         CVD   R1,DOUBLE           TO DECIMAL                     NERDC
         MVC   DOUBLE-1(6),=X'402020202120'                       NERDC
         ED    DOUBLE-1(6),DOUBLE+5                               NERDC
         BR    R5                  RETURN TO CALLER               NERDC
         SPACE 3                                                  NERDC
RCTBAD   DS    0H                                                 NERDC
         MVC   WTOLIST+4(17),=C'RCT NOT LOCATABLE'             -JAL-
         BAL   R5,APRINT           SEND MESSAGE                   NERDC
         B     EXIT                RETURN TO CALLER               NERDC
         EJECT
         EJECT                                              *LBD 11/85*
MSGRTN   DS    0H                                           *LBD 11/85*
         ST    R15,SAVER15                                  *LBD 01/86*
         ST    R3,SAVER3                                    *LBD 01/86*
         MVC   PLINE+4(80),BLANKS                           *LBD 11/85*
         LH    R3,0(R1)            * LOAD LENGTH            *LBD 11/85*
         SH    R3,=H'05'           * -4 (WTO HDR) -1 (MVC)  *LBD 11/85*
         EX    R3,MVCPLINE         * MOVE TO PUTLINE        *LBD 11/85*
         LA    R3,5(R3)            * ADD THE 5 BACK         *LBD 11/85*
         STH   R3,PLINE            * STORE PUTLINE LEN      *LBD 11/85*
         PUTLINE PARM=PUTBLOK,OUTPUT=(PLINE,TERM,SINGLE,    *LBD 11/85*X
               DATA),MF=(E,IOPLADS)                         *LBD 11/85*
         L     R15,SAVER15                                  *LBD 01/86*
         L     R3,SAVER3                                    *LBD 01/86*
         BR    R15                                          *LBD 11/85*
         LTORG
         SPACE 3
         DS    0F
SIZE     DC    X'00',AL3(WORKEND-WORKSTRT)
         SPACE 3
PARMERR  DC    X'001A0100',C'SUB-PARM NOT SUPPORTED'
         SPACE 3
SARTMSG  DC    X'001C0100',CL24'NO SWAP DATA SETS IN USE'
         SPACE 3
PCCWMSG1 DC    X'002A0100',CL30'NUMBER OF PCCWS BUILT BY RIM'
         SPACE 3
PCCWMSG2 DC    X'002A0100',CL30'NUMBER OF AVAILABLE PCCWS   '
         SPACE 3
LINE1    DC    CL22'CURRENT IPS -   IEAIPS'
         DC    CL2' ',CL12' '
         SPACE 3
LINES    DC    CL20'TERM WAIT - OUT',C'(01)',CL12' '
         DC    CL20'TERM WAIT - IN',C'(02)',CL12' '
         DC    CL20'LONG WAIT',C'(03)',CL12' '
         DC    CL20'AUX STOR SHORTAGE',C'(04)',CL12' '
         DC    CL20'REAL STOR SHORTAGE',C'(05)',CL12' '
         DC    CL20'DETECTED WAIT',C'(06)',CL12' '
         DC    CL20'REQUEST SWAP',C'(07)',CL12' '
         DC    CL20'ENQ EXCHANGE',C'(08)',CL12' '
         DC    CL20'WORKLOAD EXCHANGE',C'(09)',CL12' '
         DC    CL20'UNILATERAL SWAP',C'(0A)',CL12' '
         DC    CL20'TRANSITION SWAP',C'(0B)',CL12' '
         DC    CL20'LOGICAL SWAPS',C'(0C)',CL12' '
         DC    CL20'LOGICAL SWAPS FAIL',C'(0D)',CL12' '
         EJECT
PERFOVLY DS    0CL54
         DC    XL4'00360100'
         DC    CL50'PGN PER  TR CNT  TR RATE  AB RATE  SW RATE  AVGRSP'
*                   NN   N   NN,NNN  NNN.NN   NNN.NN   NNN.NN NNNNN.NN
         SPACE 3
SRMOVLY  DS    0CL54
         DC    XL4'00360100'
         DC    CL4'LGCP',CL6' '
         DC    CL4'AVCP',CL6' '
         DC    CL4'AVPG',CL6' '
         DC    CL4'AUIC',CL6' '
         DC    CL4'ASMQ',CL6' '
         SPACE 3
         DS    0F                                          *LBD 01/86*
PARTOVLY DS    CL60                                        *LBD 01/86*
         ORG   PARTOVLY                                    *LBD 01/86*
         DC    X'003C0100'                                 *LBD 01/86*
         DC    C'DEV VOLUME TYPE'
PR       DC    C' RATE  SIZE AVAIL USED% BADCT'
         DC    C' DSN'                                     *LBD 01/86*
         ORG   ,                                           *LBD 01/86*
*ARTOVLY DS    0CL44
*        DC    CL5'SIZE(',CL5' '
*        DC    CL8') AVAIL(',CL5' '
*        DC    CL7') USED(',CL2' '
*        DC    CL8'%) BRST(',CL3' ',C')'
         SPACE 3
SARTOVL0 DS    0CL42
         DC    CL9'SWAP  DS-'
         DC    CL4' '
         DC    CL7'  SETS-'
         DC    CL6' '
         DC    CL10'  PGS/SET-'
         DC    CL6' '
         SPACE 3
RCTLINE0 DC    CL37'SRM RESOURCE CONTROL TABLE'                   NERDC
RCTLINE1 DC    CL9'THRESHOLD'                                     NERDC
         SPACE 3                                                  NERDC
MVCPLINE MVC   PLINE+4(0),4(R1)    *** EXECUTED             *LBD 11/85*
BLANKS   DC    CL80' '                                      *LBD 11/85*
         LTORG ,                                                  NERDC
         EJECT
WORK     DSECT
WORKSTRT DS    0D
REGSAVE  DS    18F                 REGISTER SAVE AREA       *LBD 01/86*
         DS    D                   SCRATCH BEFORE DOUBLE          NERDC
DOUBLE   DS    D
DOUBLEX  DS    D
WTOLIST  DS    CL54
         SPACE 3
PARTL1   DS    0F                                          *LBD 01/86*
         DS    F                                           *LBD 01/86*
PARTUNIT DS    CL3                                         *LBD 01/86*
         DS    C                                           *LBD 01/86*
PARTVOL  DS    CL6                                         *LBD 01/86*
         DS    C                                           *LBD 01/86*
PARTTYPE DS    CL4                                         *LBD 01/86*
         DS    CL2                                         *LBD 01/86*
PARTBRST DS    CL3                                         *LBD 01/86*
         DS    C                                           *LBD 01/86*
PARTSIZE DS    CL5                                         *LBD 01/86*
         DS    C                                           *LBD 01/86*
PARTAVAL DS    CL5                                         *LBD 01/86*
         DS    CL3                                         *LBD 01/86*
PARTPCNT DS    CL3                                         *LBD 01/86*
         DS    CL3                                         *LBD 01/86*
PARTERR  DS    CL3                                         *LBD 01/86*
         DS    C                                           *LBD 01/86*
PARTNAME DS    CL18                                        *LBD 01/86*
PARTLN1  EQU   *-PARTL1                                    *LBD 01/86*
         EJECT
         DS    0F
SARTLST0 DS    CL4
SARTDSP0 DS    0CL42
         DS    CL9
SARTNO   DS    CL4
         DS    CL7
SARTTAVL DS    CL6
         DS    CL10
SARTPGST DS    CL6
         SPACE 3                                           *LBD 01/86*
         DS    F
WAMPTOTL DS    CL80
SAVER15  DS    F                                            *LBD 01/86*
SAVER13  DS    F                                            *LBD 01/86*
SAVER3   DS    F                                            *LBD 01/86*
PLINE    DC    H'80',H'00'                                  *LBD 11/85*
         DC    CL80' '                                      *LBD 11/85*
WORKEND  DS    0D
         EJECT
         IHASDWA
         EJECT ,                                                  NERDC
RMCT     DSECT ,                                                  NERDC
         ORG   RMCT+228                                           NERDC
RMCTRCT  DS    F                   POINTER TO RCT                 NERDC
         ORG   ,                                                  NERDC
         SPACE 3                                                  NERDC
RCTDSECT DSECT ,                   SRM RES CNTL TABLE             NERDC
RCTRCT   DS    CL4                 'RCT'                          NERDC
RCCUICTL DS    H                   UIC THRESHOLD LOW              NERDC
RCCUICTH DS    H                   UIC THRESHOLD HIGH             NERDC
RCCCPUTL DS    H                   CPU THRESHOLD LOW              NERDC
RCCCPUTH DS    H                   CPU THRESHOLD HIGH             NERDC
RCCPTRTL DS    H                   PAGING THRESHOLD LOW           NERDC
RCCPTRTH DS    H                   PAGING THRESHOLD HIGH          NERDC
RCCASMTL DS    H                   ASM Q REQUEST THRESHOLD LOW    NERDC
RCCASMTH DS    H                   ASM Q REQUEST THRESHOLD HIGH   NERDC
RCCDPRTL DS    H                   DEMAND PAGE RATE LOW THRESH    NERDC
RCCDPRTH DS    H                   DEMAND PAGE RATE HIGH THRESH   NERDC
RCCCPUPL DS    H                   CPU UTIL W/ DEMAND PAGING LOW  NERDC
RCCCPUPH DS    H                   CPU UTIL W/ DEMAND PAGING HI   NERDC
RCCMSPTL DS    H                   PAGE DELAY W/ DEMAND PAGING LO NERDC
RCCMSPTH DS    H                   PAGE DELAY W/ DEMAND PAGING HI NERDC
RCCPDLTL DS    H                   PAGE DELAY TIME (MS) LOW       NERDC
RCCPDLTH DS    H                   PAGE DELAY TIME (MS) HIGH      NERDC
         ORG   RCTDSECT+60                                        NERDC
RCVCTMC  DS    H                   SAMPLE INTERVALS COUNT         NERDC
RCVUICA  DS    H                   UIC AVERAGE                    NERDC
RCVCPUA  DS    H                   CPU USAGE AVERAGE              NERDC
RCVAVQC  DS    H                   AVQ LOWW COUNT                 NERDC
RCVAFQA  DS    H                   AVG AVAIL FRAMES               NERDC
RCVASMQA DS    H                   ASM Q LENGTH AVERAGE           NERDC
RCVPTR   DS    H                   PAGING RATE                    NERDC
RCVDPR   DS    H                   DEMAND PAGING RATE             NERDC
RCVPAGRT DS    H                   TOTAL PAGING RATE              NERDC
RCVMSPP  DS    H                   PAGE DELAY TIME (MS)           NERDC
         ORG   ,                                                  NERDC
         PRINT NOGEN                                              NERDC
CVTDSECT CVT   DSECT=YES,LIST=YES                                 NERDC
         EJECT
         IKJIOPL  ,                                         *LBD 01/86*
         END
