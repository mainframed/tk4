         TITLE 'TEST STATUS OF JES3'                           @SA120A0
*---------------------------------------------------------*    @SA120A0
* NAME:        RATJESUP                                   *    @SA120A0
*                                                         *    @SA120A0
* PURPOSE:     TO TEST THE STATUS OF JES3 AND PASS A      *    @SA120A0
*              RETURN CODE TO INFORM THE CALLER.          *    @SA120A0
*                                                         *    @SA120A0
* RETURN CODE: 0 = JES3 IS UP AND WE ARE ON THE GLOBAL    *    @SA120A0
*              4 = JES3 IS UP AND WE ARE ON THE LOCAL     *    @SA120A0
*              8 = JES3 IS DOWN                           *    @SA120A0
*                                                         *    @SA120A0
* USE:         TO USE SIMPLY LOAD AND BALR OR LINK TO     *    @SA120A0
*              THIS PROGRAM AND TEST THE RETURN CODE      *    @SA120A0
*              PASSED IN REGISTER 15.                     *    @SA120A0
*                                                         *    @SA120A0
*---------------------------------------------------------*    @SA120A0
* NOTES:       1. THIS CODE IS DEPENDENT UPON THE JES3    *    @SA120A0
*                 SSVT AND MUST BE REASSEMBLED IF IT IS   *    @SA120A0
*                 CHANGED (I.E. A NEW RELEASE OF JES3).   *    @SA120A0
*                                                         *    @SA120A0
*              2. THIS CODE HAS BEEN TESTED WITH JES3/SP  *    @SA120A0
*                 1.3.1                                   *    @SA120A0
*                                                         *    @SA120A0
*---------------------------------------------------------*    @SA120A0
* AUTHOR:      LIONEL DYCK                                *    @SA120A0
*              ROCKWELL INTERNATIONAL                     *    @SA120A0
*              PO BOX 2515                                *    @SA120A0
*              2201 SEAL BEACH BLVD.                      *    @SA120A0
*              SEAL BEACH, CALIF  90740                   *    @SA120A0
*              MAIL CODE 110-SH28                         *    @SA120A0
*              PHONE (213) 594-1125                       *    @SA120A0
*---------------------------------------------------------*    @SA120A0
         EJECT
*---------------------------------------------------------*
*        LOCAL MACROS                                     *
*---------------------------------------------------------*
         MACRO
&LABEL   $PROLOG &LV=0,&GM=Y
.**********************************************************************
.*
.*       THIS MACRO WILL PROVIDE ENTRY LINKAGE AND OPTIONALLY
.*       MULTIPLE BASE REGISTERS.  ALSO, VIA THE 'LV=' KEYWORD
.*       PROVIDE ADDITIONAL USER STORAGE (APPENDED TO THE
.*       SAVE AREA) ADDRESSABLE FROM REG 13.  IF NO OPERANDS
.*       ARE CODED, REG 12 IS ASSUMED THE BASE. EXAMPLE:
.*              SECTNAME $PROLOG          = STANDARD REG 12 BASE
.*              SECTNAME $PROLOG 5        = STANDARD, REG 5 BASE
.*              SECTNAME $PROLOG 10,LV=20 = ADD 20 BYTES TO SAVE AREA
.*                                             REG 10 IS BASE
.*              SECTNAME $PROLOG R10,R11  = REGS 10 AND 11 ARE BASES
.*
.**********************************************************************
         LCLA  &AA,&AB,&AC
         GBLB  &PRORG
         GBLC  &PROGM
&AC      SETA  4096
&LABEL   CSECT
         B     32(R15)             BRANCH AROUND
         DC    AL1(26)
         DC    CL8'&LABEL'         CSECT NAME
         DC    C'-'
         DC    CL8'&SYSDATE'       COMPILE DATE
         DC    C'-'
         DC    CL8'&SYSTIME'       COMPILE TIME
         CNOP  0,4                 ALIGNMENT
         STM   R14,R12,12(R13)     SAVE REGISTERS
         LR    R12,R15             LOAD BASE REG
         USING &LABEL,R12          INFORM ASSEMBLER
         AIF   (&LV GT 4023).MERR
         AIF   ('&GM' EQ 'N').NOGM
&PROGM   SETC  'GETMAIN'
         LA    R0,&LV+72           LOAD REG 0 WITH LENGTH VARIABLE
         GETMAIN R,LV=(0)          GET CORE FOR SAVEAREA AND USER
         AIF   (&LV+72 LE 256).XC2
         AIF   (&LV+72 LE 512).XC1
         MVI   0(R1),X'00'         MOVE X'00' TO FIRST BYTE
         LR    R2,R1               SAVE POINTER IN EVEN REG
         LA    R4,1(R1)            SET RECEIVING POINTER
         LR    R5,R0               SET RECEIVING LENGTH
         BCTR  R5,R0               DECREMENT LENGTH
         LA    R5,0(R5)            CLEAR HIGH ORDER BYTE
         LA    R3,1                SET SENDING LENGTH
         MVCL  R4,R2               INSTRUCTION PADS WITH X'00'
         AGO   .STORE
.XC1     ANOP
         XC    256(&LV-184,R1),256(R1)  CLEAR SAVE AREA
         XC    0(256,R1),0(R1)          CLEAR SAVE AREA
         AGO   .STORE
.XC2     ANOP
         XC    0(&LV+72,R1),0(R1)       CLEAR SAVE AREA
         AGO   .STORE
.NOGM    ANOP
         CNOP  0,4
         LA    R1,SAVE&SYSNDX
         B     *+76
SAVE&SYSNDX DC 18F'0'
.STORE   ANOP
         ST    R13,4(R1)           SAVE BACK CHAIN
         ST    R1,8(R13)           SET FORWARD CHAIN
         LR    R11,R1              SAVE NEW SAVEAREA ADDRESS
         L     R15,16(R13)         RESTORE REG 15
         ST    R0,16(R13)          SAVE SAVEAREA LENGTH
         LM    R0,R1,20(R13)       RESTORE REGS USED IN GETMAIN
         LR    R13,R11             SET SAVEAREA POINTER
         AIF   (N'&SYSLIST EQ 0).MEND
         AIF   ('&SYSLIST(1)' EQ 'R12').SKIPIT
         AIF   ('&SYSLIST(1)' EQ '12').SKIPIT
         LA    &SYSLIST(1),&LABEL  LOAD REQUESTED BASE REG
         DROP  R12                 DROP ASSUMED BASE REG
         USING &LABEL,&SYSLIST(1)  INFORM ASSEMBLER
.SKIPIT  ANOP
&AA      SETA  2
.LOOP    ANOP
         AIF   (&AA GT N'&SYSLIST).MEXIT
&AB      SETA  &AA-1
         LA    &SYSLIST(&AA),2048(&SYSLIST(&AB))  LOAD NEXT BASE REG
         LA    &SYSLIST(&AA),2048(&SYSLIST(&AA))  LOAD NEXT BASE REG
         USING &LABEL+&AC,&SYSLIST(&AA) INFORM ASSEMBLER
&AC      SETA  &AC+4096
&AA      SETA  &AA+1
         AGO   .LOOP
.MEXIT   ANOP
         AIF   (&PRORG).MEX2
         SPACE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE
REG0     EQU   0
REG1     EQU   1
REG2     EQU   2
REG3     EQU   3
REG4     EQU   4
REG5     EQU   5
REG6     EQU   6
REG7     EQU   7
REG8     EQU   8
REG9     EQU   9
REG10    EQU   10
REG11    EQU   11
REG12    EQU   12
REG13    EQU   13
REG14    EQU   14
REG15    EQU   15
         SPACE
.MEX2    ANOP
&AA      SETA  &LV+72
         MNOTE *,'TOTAL STORAGE AREA RECEIVED = &AA'
         MEXIT
.MEND    ANOP
         MNOTE *,'NO REGISTER SPECIFIED - R12 ASSUMED'
         AGO   .MEXIT
.MERR    ANOP
         MNOTE 12,'LV > 4023 - REQUEST IGNORED'
         AGO   .MEXIT
         MEND
         EJECT
         MACRO
&LABEL   $EPILOG &RC
         GBLC  &PROGM
&LABEL   LR    R1,R13              GET SAVEAREA ADDRESS
         L     R13,4(R13)          GET BACK CHAIN POINTER
         AIF   ('&PROGM' NE 'GETMAIN').NOFREE
         L     R0,16(R13)          GET SAVEAREA LENGTH
         ST    R15,16(R13)         SAVE REGISTER 15 (RETCODE)
         FREEMAIN R,LV=(0),A=(1)   FREE SAVEAREA
         AGO   .LM
.NOFREE  ANOP
         ST    R15,16(R13)         SAVE REGISTER 15 (RETCODE)
.LM      ANOP
         LM    R14,R12,12(R13)     RESTORE CALLERS REGS
         AIF   (T'&RC EQ 'O').SPEC
         LA    R15,&RC             SET RETURN CODE
.SPEC    ANOP
         BR    R14                 RETURN TO CALLER
         MEND
         EJECT                                                 @SA120A0
RATJESUP $PROLOG R12                                           @SA120A0
         SPACE 1                                               @SA120A0
         L     R1,CVTPTR           -> CVT                      @SA120A0
         USING CVT,R1                                          @SA120A0
         L     R1,CVTJESCT         -> JESCT                    @SA120A0
         USING JESCT,R1                                        @SA120A0
         L     R1,JESSSCT          -> SSCT FOR JES3 (1ST ONE)  @SA120A0
         USING SSCT,R1                                         @SA120A0
         L     R2,SSCTSSVT         -> SSVT                     @SA120A0
         LTR   R2,R2               ANY SSVT ?                  @SA120A0
         BZ    WEAREDN             NO                          @SA120A0
         USING SSVT,R2                                         @SA120A0
         TM    SVTFLAG1,SVTGLOBL   ARE WE ON GLOBAL ?          @SA120A0
         BO    GLOBAL              YES                         @SA120A0
         B     LOCAL               NO - MUST BE LOCAL          @SA120A0
         SPACE 1                                               @SA120A0
GLOBAL   DS    0H                  ON GLOBAL                   @SA120A0
         TM    SVTFLAG1,SVTABFG    GLOBAL IS DOWN ?            @SA120A0
         BZ    WEAREUP             NO - WE MUST BE UP          @SA120A0
         B     WEAREDN             YES - INFORM THE CALLER     @SA120A0
         SPACE 1                                               @SA120A0
LOCAL    L     R2,SVTMPCDA         -> MPC TABLES               @SA120A0
         USING MPCSTART,R2                                     @SA120A0
MPCLOOP  DS    0H                                              @SA120A0
         TM    MPSYSTEM,MPGLBL     IS THIS THE GLOBAL MPC ?    @SA120A0
         BO    MPCGLBL             HAVE IT                     @SA120A0
         L     R2,MPNEXT           -> NEXT ENTRY               @SA120A0
         LTR   R2,R2               IS THERE A NEXT ?           @SA120A0
         BZ    WEAREDN             -DOWN SO TELL THE CALLER    @SA120A0
         B     MPCLOOP                                         @SA120A0
         SPACE 1                                               @SA120A0
MPCGLBL  DS    0H                  FOUND GLOBAL MPC            @SA120A0
         CLI   CTCFLG2,X'00'       ANY ERROR ON CTC            @SA120A0
         BNZ   WEAREDN             YES - GLOBAL DOWN           @SA120A0
         CLI   CTCFLG3,X'00'       ANY ERROR ON CTC            @SA120A0
         BNZ   WEAREDN             YES - GLOBAL DOWN           @SA120A0
         CLI   CTCFLG4,X'00'       ANY ERROR ON CTC            @SA120A0
         BNZ   WEAREDN             YES - GLOBAL DOWN           @SA120A0
         TM    CTCSAPF2,CTCSLOW    SLOW DOWN                   @SA120A0
         BO    WEAREDN             YES - ASSUME DOWN           @SA120A0
         $EPILOG 4                 UP AND ON LOCAL:   RC=4     @SA120A0
         SPACE 1                                               @SA120A0
WEAREUP  $EPILOG 0                 UP AND ON GLOBAL:  RC=0     @SA120A0
         SPACE 1                                               @SA120A0
WEAREDN  $EPILOG 8                 GLOBAL IS DOWN: RC=8        @SA120A0
         EJECT                                                 @SA120A0
         IATYSVT                                               @SA120A0
         EJECT                                                 @SA120A0
         CVT   DSECT=YES                                       @SA120A0
         EJECT                                                 @SA120A0
         IATYFCT                                               @SA120A0
         EJECT                                                 @SA120A0
         IATYMPC                                               @SA120A0
         EJECT                                                 @SA120A0
         IEFJESCT                                              @SA120A0
         EJECT                                                 @SA120A0
         IEFJSCVT                                              @SA120A0
         END   ,                                               @SA120A0
