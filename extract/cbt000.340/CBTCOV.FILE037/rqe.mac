         TITLE 'FORMAT AND DISPLAY QUEUED I/O'              *LBD 12/85*
* FUNCTION.
*
*        FORMAT AND DISPLAY QUEUED I/O REQUESTS.
*
*
* ATTRIBUTES.
*
*        1. TSO COMMAND PROCESSOR
*
*
* APPLICABILITY.
*
*        MVS/XA ONLY
*
*
* EXTERNAL REFERENCES.
*
*        1. CVT.
*        2. UCB'S.
*        3. IOQ
*        4. ASVT
*        5. ASCB
*
* SVC USAGE.
*
*        1. GETMAIN/FREEMAIN SVC 10.
*
*
* INPUT.
*
*        1. CPPL
*
* SYNTAX:  RQE OPTION(S)
*
*              VALID OPTIONS:      ALL
*                                  DASD (DEFAULT)
*                                  CTC
*                                  TAPE
*                                  TP - TELEPROCESSING
*                                  GR - GRAPHICS
*                                  UR - UNIT RECORD
*
*
*
*
* OUTPUT.
*
*        ALL MESSAGES ARE DISPLAYED ON THE INPUT SYSTEM CONSOLE.
         EJECT
RQE      MENTER 12,EQU,COM=RQE,CP=YES   START HERE AS A CP
*
*        CHECK INPUT PARMS
*
         L     R3,CPPLCBUF         POINT TO THE CMD OPERANDS  12/85
         LH    R8,2(R3)            OFFSET TO THE PARMS        12/85
         LH    R1,0(R3)            LENGTH OF PARMS            12/85
         LA    R3,4(R3)            GET PAST HEADER            12/85
         AR    R3,R8               ADD OFFSET                 12/85
         CLI   0(R3),X'40'         AND PARM SPECIFIED?        12/85
         BNH   DEFAULT             NOPE, -->                  12/85
         SR    R1,R8               DEDUCT OFFSET              12/85
         SH    R1,=H'03'           MINUS HEADER               12/85
         CH    R1,=H'80'           IS IT LESS THAN 80         12/85
         BNH   MOVEPARM            YEP, -->                   12/85
         LA    R1,80               SET DEFAULT LENGTH         12/85
MOVEPARM DS    0H                                             12/85
         EX    R1,MVCPARM          SAVE THE PARMS             12/85
         OC    RQEPARM,BLANKS      MAKE PARM UPPER CASE       12/85
         LA    R1,RQEPARM          GET ADDR OF PARM STRING    12/85
         LA    R11,77              GET NUMBER OF LOOPS        12/85
GETPRM1  DS    0H                                             12/85
         CLC   ALLCON,0(R1)        WAS THE PARAMETER ALL      12/85
         BNE   *+12                NOPE, -->                  12/85
         MVI   IOTYPE,X'FF'        SET DEFAULT TO ALL         12/85
         B     GETBUF              GO GET NEXT PARM           12/85
         CLC   CTCCON,0(R1)        WAS THE PARAMETER DA       12/85
         BNE   *+12                IF NOT CHECK NEXT TYPE     12/85
         OI    IOTYPE,UCB3CTC      SET I/O DEVICE TYPE        12/85
         B     GETPRM2             GO GET NEXT PARM           12/85
         CLC   DACON,0(R1)         WAS THE PARAMETER DA       12/85
         BNE   *+12                IF NOT CHECK NEXT TYPE     12/85
         OI    IOTYPE,UCB3DACC     SET I/O DEVICE TYPE        12/85
         B     GETPRM2             GO GET NEXT PARM           12/85
         CLC   TAPECON,0(R1)       WAS THE PARAMETER TAPE     12/85
         BNE   *+12                IF NOT CHECK NEXT TYPE     12/85
         OI    IOTYPE,UCB3TAPE     SET I/O DEVICE TYPE        12/85
         B     GETPRM2             GO GET NEXT PARM           12/85
         CLC   TPCON,0(R1)         IS THE TYPE TELEPROC       12/85
         BNE   *+12                IF NOT CHECK NEXT TYPE     12/85
         OI    IOTYPE,UCB3COMM     SET I/O DEVICE TYPE        12/85
         B     GETPRM2             GO GET NEXT PARM           12/85
         CLC   GRCON,0(R1)         IS THE TYPE GRAPHICS       12/85
         BNE   *+12                IF NOT CHECK NEXT TYPE     12/85
         OI    IOTYPE,UCB3CHAR     SET I/O DEVICE TYPE        12/85
         B     GETPRM2             GO GET NEXT PARM           12/85
         CLC   URCON,0(R1)         IS THE TYPE UNIT RECORD    12/85
         BNE   GETPRM2             IF NOT PARM IS INVALID     12/85
         OI    IOTYPE,UCB3UREC     SET I/O DEVICE TYPE        12/85
GETPRM2  DS    0H                                             12/85
         LA    R1,1(R1)            BUMP PARM STRING INDEX     12/85
         BCT   R11,GETPRM1         DEDUCT COUNTER, --->       12/85
         B     GETBUF              ALL DONE, -->              12/85
DEFAULT  DS    0H                                             12/85
         MVI   IOTYPE,UCB3DACC     SET DEFAULT TO DASD        12/85
*
*        GET BUFFER FOR ACTIVE I/O DATA
*
GETBUF   GETMAIN VC,LA=BUFCONS,A=BUFADDR,MF=(E,XASAVLOC)
         LA    R1,COREMSG          LOAD ERROR MSG ADDRESS
         LTR   R15,R15             WAS GETMAIN SUCCESSFUL
         BZ    GETBUF1             YEP, -->
         MVC   MSGBUF,COREMSG      GET BAD CORE MESSAGE       12/85
         BAL   R8,PUTLINE          DISPLAY IT                 12/85
         B     MLEAVE              AND GO -->                 12/85
GETBUF1  DS    0H                                             12/85
         LM    R5,R6,BUFADDR       LOAD START OF BUFFER AND LENGTH
         AR    R6,R5               GET END OF BUFFER ADDRESS
         LA    R1,BUFLN            LOAD LENGTH OF 1 BUFFER ENTRY
         SR    R6,R1               DECR STOP ADDR TO LAST SAFE ENTRY
*
*        EXTRACT DATA FOR QUEUED DATA
*
         USING CVT,R3              TELL
         USING UCB,R4                  THE
         USING BUF,R5                      ASSEMBLER
         USING IOQ,R7                               ...
*
*        LOOP THRU ALL UCB'S
*
         L     R3,CVTPTR           GET CVT POINTER
UCBLOOP  DS    0H                                             12/85
         L     R15,CVTUCBSC        GET UCB SCAN RTN ADDR      12/85
         CALL  (15),                     GO FOR IT, --->      12/85    +
               (UCBWORK,DEVTYPE,UCBADDR) THESE ARE THE PARMS  12/85
         LTR   R15,R15             TEST IF LOOK-UP WAS GOOD   12/85
         BNZ   UCBDONE             NOPE, --> ALL DONE         12/85
         LA    R1,512              GET UCB PREFIX OFFSET      12/85
         L     R4,UCBADDR          AND UCB ADDR               12/85
         SLR   R4,R1               AND SET PREFIX ADDR        12/85
         IC    R1,IOTYPE           GET IOTYPE                 12/85
         EX    R1,DEVTEST          IS THIS THE TYPE I WANT?   12/85
         BZ    UCBLOOP             NOPE, -->                  12/85
GETLOCK  DS    0H
         ICM   R7,15,UCBIOQF       LOAD 1ST IOQ ON UCB
         BZ    BUFTEST             IF NONE, --> GO TEST BUFFER
*
*        LOOP THRU IOQ QUEUED
*        EXTRACT SELECTED DATA
*
IOQLOOP  DS    0H
         CR    R5,R6               HAS BUFFER BEEN EXCEEDED
         BL    IOQLOOP1            NOPE, --> CONTINUE
         LNR   R6,R6               SET REG FOR BUFFER OVERFLOW
         B     BUFTEST             GO FREE LCH SPIN LOCK
IOQLOOP1 DS    0H                                             12/85
         L     R9,CVTASVT          LOAD ASVT BASE REG
         USING ASVT,R9             TELL THE ASSEMBLER
         SR    R1,R1               ZERO REG FOR ASID INSERTION
         ICM   R1,3,IOQASID        LOAD ASID NUMBER
         SLL   R1,2                MULTIPLY BY 4 FOR TABLE OFFSET
         L     R9,ASVTFRST(R1)     LOAD ASID BASE REG
         USING ASCB,R9             CHANGED MY MIND
GETJOBN  DS    0H                                             12/85
         ICM   R1,15,ASCBJBNI      LOAD JOBNAME ADDRESS
         BNZ   SAVEDATA            IF PRESENT USE IT
GETSTNM  DS    0H                                             12/85
         ICM   R1,15,ASCBJBNS      LOAD STARTED TASK NAME ADDRESS
         BNZ   SAVEDATA            IF AVAILABLE USE STARTED NAME
         LA    R1,BLANKS           POINT TO BLANK DEFAULT NAME
SAVEDATA DS    0H
         MVC   BUFUCB,UCBNAME      SAVE DEVICE CHANNEL ADDRESS
         MVC   BUFASID,IOQASID     SAVE ASID
         MVC   BUFNAME,0(R1)       SAVE JOBNAME ID
         TM    UCBTBYT3,UCB3TAPE+UCB3DACC   IS DEVICE TAPE OR DA
         BZ    NOSERIAL            IF NOT USE BLANK SERIAL
         MVC   BUFSER,UCBVOLI      SAVE VOLUME SERIAL
         B     SAVECOMP            ALL DATA IS NOW COMPLETE
NOSERIAL DS    0H                                             12/85
         XC    BUFSER,BUFSER       ZERO SER FOR NON TAPE OR DA DEVICE
SAVECOMP DS    0H                                             12/85
         LA    R5,BUFLN(R5)        BUMP BUFFER BASE TO NEXT SLOT
         ICM   R7,15,IOQCHAIN      LOAD NEXT IOQ ON CHAIN
         BNZ   IOQLOOP             LOOP THRU IOQ CHAIN
BUFTEST  DS     0H
         LTR   R6,R6               WAS BUFFER EXCEEDED
         BNP   UCBDONE             IF YES STOP COLLECTING DATA
         B     UCBLOOP             LOOP UNTIL THE LAST UCB
*
UCBDONE  LA    R1,BUFLN            LOAD BUFFER ENTRY LENGTH
         SR    R5,R1               DECREMENT TO LAST ACTIVE ENTRY
*
*        PRINT OUTPUT
*
         C     R5,BUFADDR          WAS ANY I/O QUEUED
         BNL   CHKOVFL             IF YES CHECK BUFFER OVERFLOW
         MVC   MSGBUF,NOIO         GET PROPER MESSAGE         12/85
         BAL   R8,PUTLINE          AND DISPLAY IT             12/85
         B     FREEBUF             GO FREE DATA BUFFER
*
CHKOVFL  LTR   R6,R6               DID DATA BUFFER OVERFLOW
         BP    PRNTHEAD            IF NOT SKIP WARNING MSG
         MVC   MSGBUF,OVFLMSG      GET PROPER MESSAGE         12/85
         BAL   R8,PUTLINE          AND DISPLAY IT             12/85
*
*        PRINT HEADING
*
PRNTHEAD DS    0H
         MVC   MSGBUF,HEAD0        MOVE HEADING TO BUFFER
         BAL   R8,PUTLINE          AND DISPLAY IT             12/85
         MVC   MSGBUF,HEAD1        MOVE HEADING TO BUFFER
         BAL   R8,PUTLINE          AND DISPLAY IT             12/85
*
*        PRINT DATA IN BUFFER
*
PRNTACT  DS    0H                                             12/85
         LR    R6,R5               SAVE LAST ENTRY ADDRESS
         L     R5,BUFADDR          LOAD START OF DATA BUFFER
         MVI   MSGNO,C'1'          CHANGE MESSAGE NUMBER FOR OUTPUT
*
*        LOOP THRU BUFFER DATA
*
PRNTLOOP DS    0H                                             12/85
         MVC   MSGUCB,BUFUCB       MOVE DEVICE NAME TO MSG
         MVC   MSGSERAL,BUFSER     MOVE VOLUME SERIAL TO MSG
         OC    MSGSERAL,BLANKS     CHANGE ZEROS TO BLANKS
         UNPK  MSGASID(5),BUFASID(3)  CONVERT ASID
         TR    MSGASID,HEXTABLE    CONVERT ALPHA
         MVI   MSGBL4,BLANK        BLANK GARBAGE BYTE
         MVC   MSGNAME,BUFNAME     MOVE JOBNAME TO MSG
         BAL   R8,PUTLINE          AND DISPLAY IT             12/85
         LA    R5,BUFLN(R5)        BUMP TO NEXT BUFFER SLOT
         CR    R5,R6               IS THIS LAST ENTRY
         BNH   PRNTLOOP            LOOP TILL ALL ENTRIES PRINTED
*
*        FREE DATA BUFFER
*
FREEBUF  DS    0H                                             12/85
         FREEMAIN V,MF=(E,XASAVLOC)   GIVE BACK THE CORE
MLEAVE   DS    0H                                             12/85
         MLEAVE                       AND LEAVE               12/85
*
*        DISPLAY MESSAGES
*
PUTLINE  DS    0H
         PUTLINE PARM=PUTBLOK,                                12/85    +
               OUTPUT=(MSGBUF,TERM,SINGLE,DATA),              12/85    +
               MF=(E,IOPLADS)                                 12/85
         BR    R8                                             12/85
*
*        PROGRAM MESSAGES
*
HEAD0    DC    AL2(HD0-*),X'0000'
         DC    C'NARRQE0 RQE COMMAND  FOR  MVS/XA'
HD0      EQU   *
*
HEAD1    DC    AL2(HD1-*),X'0000'
         DC    C'NARRQE1 DEV VOLSER ASID JOB NAME'
HD1      EQU   *
*
PARMMSG  DC    AL2(EM-*),X'0000'
         DC    C'NARRQE2 INVALID PARM            '
EM       EQU   *
*
NOIO     DC    AL2(NA-*),X'0000'
         DC    C'NARRQE3 NO I/O ENQUED           '
NA       EQU   *
*
COREMSG  DC    AL2(CM-*),X'0000'
         DC    C'NARRQE4 NO CORE FOR BUFFER      '
CM       EQU   *
*
OVFLMSG  DC    AL2(OV-*),X'0000'
         DC    C'NARRQE6 BUFFER EXCEEDED         '
OV       EQU   *
         EJECT
SUBPOOL  EQU   255                 DATA BUFFER SUBPOOL NUMBER
BLANK    EQU   C' '
UCBAMASK DC    F'65535'            UCB ADDRESS MASK
MVCPARM  MVC   RQEPARM(0),0(R3)    GET PARM DATA
DEVTEST  TM    UCBTBYT3,0          TEST DEVICE TYPE
UCBWORK  DC    XL100'0'                                       12/85
IOTYPE   DC    X'00'               UCB DEVICE TYPE (DEFAULT ID DASD)
DEVTYPE  DC    X'00'               UCB DEVICE TYPE MASK
UCBADDR  DC    F'0'                                           12/85
JOBNAME  DC    CL8' '              I/O REQUEST JOBNAME
RQEPARM  DC    CL80' '
ONE      DC    H'1'
THREE    DC    H'3'
BLANKS   DC    CL80' '             BLANK NAME FIELD
CTCCON   DC    C'CTC'
DACON    DC    C'DA'
TAPECON  DC    C'TA'
ALLCON   DC    C'ALL'
TPCON    DC    C'TP'
GRCON    DC    C'GR'
URCON    DC    C'UR'
HEXTABLE EQU   *-240               HEX TO EBCDIC TRANSLATE TABLE
         DC    C'0123456789ABCDEF'
STATFLGS DS    X                   FLAG BYTE
*
BUFCONS  DC    F'4096,8192'        DATA BUFFER SIZE
BUFADDR  DS    F'0'                DATA BUFFER ADDRESS
BUFSIZE  DS    F'0'                DATA BUFFER ADDRESS
XASAVLOC DS    16F'0'
*        ACTIVE I/O MESSAGE BUFFER
*
MSGHEAD  DS    H,X'0000',C'NARRQE'
MSGNO    DS    C                   MESSAGE NUMBER
MSGBL1   DS    C                   BLANK FIELD
MSGUCB   DS    CL3                 UCB NAME
MSGBL2   DS    C                   BLANK FIELD
MSGSERAL DS    CL6                 VOLUME SERIAL NUMBER
MSGBL3   DS    C                   BLANK FIELD
MSGASID  DS    CL4                 ADDR SPACE ID
MSGBL4   DS    C                   BLANK FIELD
MSGNAME  DS    CL8                 TASK JOBNAME
MSGEND   EQU   *
*
         ORG   MSGHEAD
MSGBUF   DS    CL(MSGEND-MSGHEAD)  TOTAL MSG LENGTH
         PRINT NOGEN                                          12/85
         IKJIOPL
BUF      DSECT
BUFUCB   DS    CL3                 CHAN ADDRESS (UCBNAME)
BUFFL1   DS    X                   FLAG BYTE (UCBFL1)
BUFSER   DS    CL6                 VOLUME SERIAL TAPE/DA (UCBVOLI)
BUFASID  DS    XL2                 USER'S ASID (IOSBASID)
BUFNAME  DS    CL8                 USER'S JOBNAME ( FROM CSCB )
BUFLN    EQU   *-BUF
*
         IECDIOCM
*        IECDIOQ
IOQ      DSECT                                                12/85
IOQID    DS    CL4                                            12/85
IOQCHAIN DS    A                                              12/85
IOQIOSB  DS    A                                              12/85
         ORG   IOQ+28                                         12/85
IOQASID  DS    CL2                                            12/85
         IECDIOSB
CVT      DSECT
         CVT
UCB      DSECT
         IEFUCBOB PREFIX=YES
         IHAASCB
         IHAASVT
         IHAPSA
         END
