ENQ      TITLE 'IGCZQ03D - ENQ NAME DISPLAY COMMAND'
***********************************************************************
*
*        OPERATOR COMMAND TO DISPLAY JOBNAMES,USERIDS IN ENQ CHAIN
*        CHANGED TO WORK UNDER TSSO   (08-08-85 LIONEL DYCK)
*
*
*        ON ENTRY:
*                 R1  = ADDRESS OF CPPL
*                 R15 = ADDRESS OF ENTRY POINT
*
*        COMMAND FORMAT:
*
*              ENQ                      DISPLAY ALL MAJOR NAMES
*              ENQ  *                   SAME AS ABOVE
*              ENQ  #                   ALL JOB MGMT (SYSIEFSD) MINORS
*              ENQ  "MAJOR"             DISPLAY MINOR NAMES OF MAJOR
*              ENQ  "MAJOR"/*           SAME AS ABOVE
*              ENQ  "MAJOR"/"MINOR"     ALL USERS WITH SAME MINOR
*              ENQ  "MAJOR"/"MINOR"*    ALL USERS WITH PARTIAL MINOR
*
*        WHERE:
*              MAJOR = MAJOR RIB NAME, MAX 8 BYTES
*              MINOR = MINOR RIB NAME, MAX 80 BYTES
*                      IF GREATER THAN 80 ALL NAMES BEGINNING WITH
*
*        MINOR MAY ALSO BE GIVEN AS:
*              1) *   - OBTAIN ALL MINOR NAMES FOR GIVEN MAJOR NAME
*              2) XY* - OBTAIN ALL MINOR NAMES BEGINNING WITH XY;
*                       XY = ANY COMBINATION AND SIZE OF CHARACTERS
*
*        ATTRIBUTES : REENTRANT
*
*        FOR SP1.3 THE GQSCAN MACRO IS USED TO DETERMINE ENQ CHAINS
*         A GENERAL GQSCAN IS ISSUED TO OBTAIN ALL ENQ/RESERVE BLOCKS
*         THE SCANAREA IS THEN BROWSED TO EXTRACT THE APPROPRIATE
*         INFORMATION ACCORDING TO THE REQUEST. THE EXTRACTED INFO
*         IS LOADED INTO THE BUFFER TABLE USING BASICALLY THE SAME
*         LOGIC AS WAS USED UNDER PREVIOUS OPERATING SYSTEMS.
*
*        SPECIFIC AREAS OF CHANGE FOR SP1.3
*         THE GETMAIN WAS INCREASED TO INCLUDE ALL THE SAVE AREAS
*         AND THE SCANAREA USED BY THE GQSCAN ROUTINE.
*         THE CORESIZ USED HAS BEEN INCREASED TO INCLUDE THE NEW
*         SIZE. NOTE THAT THIS IS A GETMAIN FOR AN EXCESS OF 110K.
*         THE QEL SEARCH WAS CHANGED TO USE THE SCANAREA USING THE
*         ISGRIB MACRO (RIB,RIBVAR,RIBE).
*
*        MACRO USAGE
*         IEEXSA     (AMODGEN)
*         IEFUCBOB   (AMODGEN)
*         ISGRIB     (SYS1.MACLIB)
*         BUFFER     (INTERNALLY DEFINED)
*
*        REGISTER USAGE DURING PARSE
*         R0    SYSTEM,GETMAIN,I/O PROCESSING
*         R1    SYSTEM,GETMAIN,I/O PROCESSING
*         R2    BASE REGISTER FOR XSA
*         R3    XAL - LIST POINTER (INPUT MAJOR/MINOR NAME)
*         R4    LENGTH REGISTER
*         R5    MAX SIZE (FOR BCT LOOP)
*         R6    UNUSED
*         R7    UNUSED
*         R8    START OF MINOR NAME
*         R9    UNUSED
*         R10   UNUSED
*         R11   UNUSED
*         R12   BASE REGISTER FOR IGCZQ03D
*         R13   UNUSED
*         R14   RETURN ADDRESS SYSTEMS TASKS
*         R15   RETURN CODE SYSTEM TASKS
*
*        REGISTER USAGE DURING GQSCAN
*         R0    SYSTEM,I/O PROCESSING
*         R1    SYSTEM,I/O PROCESSING
*         R2    UNUSED
*         R3    BASE REGISTER FOR SCANBUFF
*         R4    BASE REGISTER FOR BUFFER
*         R5    POINTER TO END OF OUTPUT BUFFER
*         R6    BASE REGISTER FOR RIB
*         R7    LOOP COUNTER - NUMBER OF RIBS
*         R8    LOOP COUNTER - NUMBER OF RIBES/WORK REGISTER
*         R9    USED IN EXECUTE FOR LENGTH OF MAJOR/MINOR NAMES
*         R10   BASE REGISTER FOR RIBVAR
*         R11   BASE REGISTER FOR RIBE
*         R12   BASE REGISTER FOR IGCZQ03D
*         R13   GQSCAN REQUIRED SAVE AREA
*         R14   USED TO ICM/STCM OF ASID
*         R15   BASE REGISTER FOR UCB/RETURN CODE FROM GQSCAN
*
*        REGISTER USAGE DURING FORMAT (OUTPUT)
*         R0    SYSTEM,I/O PROCESSING
*         R1    SYSTEM,I/O PROCESSING
*         R2    UNUSED
*         R3    UNUSED
*         R4    BASE REGISTER FOR BUFFER
*         R5    MESSAGE LENGTH
*         R6    NEXT ENTRY POINTER
*         R7    UNUSED
*         R8    UNUSED
*         R9    UNUSED
*         R10   UNUSED
*         R11   OUTPUT BUFFER LENGTH/BAL REGISTER
*         R12   BASE REGISTER FOR IGCZQ03D
*         R13   UNUSED
*         R14   UNUSED
*         R15   UNUSED
*
*        THIS PROGRAM LAST MODIFIED BY R. SUNDELL  10/01/82
*
***********************************************************************
         EJECT
IGCZQ03D MENTER 12,EQU,COM=ENQ,CP=YES
         SPACE
         MODID BRANCH=YES
         MVI   FLAG,0              CLEAR CONTROL FLAG
         SPACE
***********************************************************************
*
*        GET CORE FOR WORK TABLE
*
***********************************************************************
         LR    R3,R1            -> CPPL                   *LBD 07/85*
         L     R0,CORSIZ          LOAD BUFFER SUBPOOL & SIZE
         GETMAIN R,LV=(0)
         ST    R1,CORE            SAVE GETMAIN ADDR
         EJECT
***********************************************************************
*
*        PARSE INPUT STRING
*
***********************************************************************
         MVC   ENQMAJNM,BLANKS     BLANK ENQ MAJOR NAME
         L     R3,CPPLCBUF        -> COMMAND ENTRY BUFFER *LBD 07/85*
         LH    R8,2(R3)           * OFFSET TO PARMS       *LBD 07/85*
         LA    R3,4(R3)           * -> PAST HEADER        *LBD 07/85*
         AR    R3,R8              * ADD OFFSET            *LBD 07/85*
         CLI   0(R3),X'00'        * ANY PARM ?            *LBD 07/85*
         BE    DEFAULT            * NO - ASSUME DEFAULTS  *LBD 07/85*
         LR    R8,R3              START OF LIST
         CLI   0(R3),STAR         FIND ONLY MAJOR NAMES ?
         BE    DEFAULT            YES..
         CLI   0(R3),POUND        IS JOB MGMT SPECIFIED
         BE    JOBMGMT            IF YES GO SET NAME & FLAG
         CLC   =CL8' ',0(R3)      * ANY PARAMETER ENTERED *LBD 07/85*
         BE    DEFAULT            NO...ASSUME DEFAULTS.
         SPACE
*        FIND MAJOR NAME LENGTH
         SPACE
         SR    R4,R4               ZERO LENGTH REG
         LA    R5,9                SET MAX MAJOR LENGTH
LOOP2    EQU   *
         CLI   0(R3),SLASH        MAJOR/MINOR DELIMITER ?
         BE    GOTMAJOR           YES...
         CLI   0(R3),BLANK        END-OF-STRING ?
         BE    SAVEMAJ            IF YES GET ALL MINOR FOR MAJOR
         CLI   0(R3),NULL         END-OF-STRING ?
         BE    SAVEMAJ            IF YES GET ALL MINOR FOR MAJOR
         LA    R4,1(R4)            BUMP LENGTH REG
         LA    R3,1(,R3)          BUMP TO NEXT CHAR
         BCT   R5,LOOP2           TRY NEXT CHAR
         B     BADERR             MAJOR NAME TOO LONG.
         SPACE
*        DISPLAY ALL MINOR NAMES OF A MAJOR
         SPACE
SAVEMAJ  EQU   *
         SH    R4,H1               DECREMENT FOR EX ISN & CHK LNGH
         BM    PARMERR             GO DISPLAY ERROR MSG FOR NULL MAJOR
         EX    R4,MOVEMAJ          SAVE MAJOR NAME
         OC    ENQMAJNM,BLANKS     * INSURE UPPER CASE    *LBD 07/85*
         OI    FLAG,ALLMINOR       SET ALL MINOR NAME FLAG
         B     CHKRIB              GO GET DATA
         SPACE
*        DISPLAY USERS FOR MAJOR/MINOR
         SPACE
GOTMAJOR EQU   *
         SH    R4,H1               DECREMENT FOR EX ISN & CHK LNGH
         BM    PARMERR             GO DISPLAY ERROR MSG FOR NULL MAJOR
         EX    R4,MOVEMAJ          SAVE MAJOR NAME
         OC    ENQMAJNM,BLANKS     * INSURE UPPER CASE    *LBD 07/85*
         SPACE
*        FIND LENGTH OF MINOR ENQ NAME
         SPACE
         SR    R4,R4               ZERO LENGTH REG
         LA    R3,1(,R3)          MOVE PAST '/'
         LR    R8,R3              SAVE START OF MINOR NAME
         LA    R5,80              MAX LENGTH OF MINOR NAME
LOOP3    EQU   *
         CLI   0(R3),BLANK        END-OF-STRING
         BE    GOTMINOR           YES...
         LA    R3,1(,R3)          INCREMENT PTR
         LA    R4,1(,R4)          INCREMENT LENGTH
         BCT   R5,LOOP3
         SPACE
*        CHANGE LONG MINOR NAMES TO PARTIAL MINOR NAMES
         SPACE
         OI    FLAG,PARTMIN        SET PARTIAL MINOR NAME FLAG
         SPACE
GOTMINOR EQU   *
         SH    R4,H1               DECR FOR EX ISN & CHK FOR NULL MINOR
         BM    BADMINOR            GO DISPLAY ERROR MSG FOR NULL MINOR
         EX    R4,MOVEMIN          SAVE MINOR NAME
         OC    ENQMINNM,BLANKS     * INSURE UPPER CASE    *LBD 07/85*
         LA    R4,1(,R4)          RESET LENGTH
         STH   R4,LENGMIN         SAVE LENGTH
         EJECT
***********************************************************************
*
*        SCAN FOR '*' IN MINOR NAME
*
***********************************************************************
         LA    R3,ENQMINNM         LOAD START OF MINOR NAME
         SR    R4,R4              COUNT OF CHAR PRIOR TO '*'
         LH    R5,LENGMIN
         SPACE
LOOP4    EQU   *
         CLI   0(R3),STAR         FIND IT ?
         BE    ASK                YES...
         LA    R3,1(,R3)          NO..NEXT CHAR
         LA    R4,1(,R4)          INCREMENT COUNT
         BCT   R5,LOOP4
         B     CHKRIB             NO '*' IN MINOR NAME
         SPACE
ASK      EQU   *
         LTR   R4,R4              ANY CHAR PRIOR TO '*' ?
         BZ    SETMINOR           NO..GET ALL MINOR NAMES
         OI    FLAG,PARTMIN        SET PARTIAL MINOR FLAG
         STH   R4,LENGMIN         SET NEW LENGTH
         B     CHKRIB             JOIN COMMON CODE
         SPACE 2
MOVEMAJ  MVC   ENQMAJNM(0),0(R8)   MOVE MAJOR NAME
MOVEMIN  MVC   ENQMINNM(0),0(R8)   MOVE MINOR NAME
         SPACE
*        INITIALIZE FOR JOB MANAGEMENT ENQ NAME
         SPACE
JOBMGMT  EQU   *
         MVC   ENQMAJNM,SYSIEFSD   SET MAJOR NAME
         SPACE
SETMINOR EQU   *
         OI    FLAG,ALLMINOR      SET FOR ALL MINOR NAMES
         B     CHKRIB             JOIN COMMON CODE
         SPACE
*        DISPLAY INPUT PARM ERRORS
         SPACE
BADERR   LA    R1,MSG5            MAJOR NAME TOO LONG
         B     PARMWTO
         SPACE
PARMERR  EQU   *
         LA    R1,MSG6            MAJOR NAME MISSING
         B     PARMWTO
BADMINOR EQU   *
         LA    R1,MSG13           MINOR NAME MISSING
         SPACE
PARMWTO  EQU   *
         BAL   R11,OPER                                   *LBD 07/85*
         B     CLEANUP                                    *LBD 07/85*
         SPACE 3
***********************************************************************
*
*        NO PARAMETERS SPECIFIED, ASSUME DEFAULTS
*
***********************************************************************
         SPACE
DEFAULT  EQU   *
         OI    FLAG,MAJONLY       SET FOR MAJOR NAMES ONLY
         EJECT
***********************************************************************
*
*        OBTAIN MAJOR RIB
*
***********************************************************************
         SPACE
         USING BUFFER,R4
         USING RIB,R6
         USING RIBVAR,R10
         USING RIBE,R11
         USING SCANBUFF,R3
         SPACE
CHKRIB   EQU   *
         SPACE
         L     R4,CORE            LOAD START OF BUFFER
         L     R3,CORE            LOAD START OF BUFFER
         L     R5,CORSIZ1         LOAD BUFFER LENGTH
         LA    R3,0(R4,R5)        FIND START OF SCAN BUFFER
         LR    R5,R3              LOAD BUFFER END ADDRESS
         BCTR  R5,0               DECREMENT TO LAST BYTE
         BCTR  R5,0               ONE MORE FOR SAFETY
         EJECT
***********************************************************************
*
*     ISSUE GQSCAN TO OBTAIN ALL ENQ/RESERVE BLOCKS
*
***********************************************************************
GQSCAN   EQU   *
         LR    R8,R13             SAVE CURRENT R13
         LA    R13,SCANSAVE       GQSCAN SAVE AREA (REQUIRED)
         NI    FLAG,255-RTOKEN    CLEAR TOKEN FLAG
         LA    R6,SCANAREA        ADDRESS OF SCAN AREA
         LA    R7,TOKEN           ADDRESS OF TOKEN ADDRESS FOR RESCAN
         SPACE 2
         GQSCAN AREA=((R6),102400),                                    X
               REQLIM=MAX,                                             X
               SCOPE=ALL,                                              X
               TOKEN=(R7),                                             X
               MF=(E,SCANPARM)
         EJECT
         LR    R13,R8             RELOAD R13
         LA    R8,BRTABLE         ADDRESS OF BRANCH TABLE
         B     0(R15,R8)          BRANCH TO ACCORDING TO RETURN CODE
         SPACE
BRTABLE  EQU   *
         B     CHKOPTN            CODE 00  ALL RIBS RETURNED IN AREA
         B     NOENQACT           CODE 04  NO MATCH OF RESNAME (?)
         B     PRECKOPT           CODE 08  ALL RIBS WOULD NOT FIX
         B     CODE0C             CODE 0C  ABNORMAL ERROR
         B     CODE10             CODE 10  INVALID SYSNAME
         SPACE
PRECKOPT EQU   *
         OI    FLAG,RTOKEN        TURN ON TOKEN FLAG
         SPACE
CHKOPTN  EQU   *
         ST    R0,RIBSIZES        STORE LENGTH OF RIB/RIBE
         SR    R7,R7              CLEAR COUNT REGISTER
         LR    R7,R1              SAVE NUMBER OF RIBS RETURNED
         ST    R7,RIBNR           SAVE NUMBER OF RIBS RETURNED
         TM    FLAG,MAJONLY       ARE MAJOR NAMES ONLY SPECIFIED
         BZ    FINDMAJ            IF NOT GO FIND MAJOR RIB
         EJECT
***********************************************************************
*
*        OBTAIN ALL MAJOR RIB NAMES HERE
*
***********************************************************************
         SPACE
MAJLOOP  EQU   *
         LA    R1,BUFNXMAJ        FIND NEXT ENTRY ADDR
         CR    R1,R5              OVERFLOW TABLE ?
         BH    TABLOVFL           YES...
         SR    R8,R8              CLEAR WORK REGISTER
         LR    R8,R4              SAVE CURENT BUFFER POINTER
         SR    R4,R4              CLEAR BUFFER REGISTER
         L     R4,CORE            POINT TO BEGINNING OF BUFFER
SKIPMAJ  EQU   *
         CR    R4,R8              CURRENT ENTRY
         BC    11,LOADMAJ         PUT MAJOR ENTRY IN TABLE
         CLC   BUFMAJNM,RIBQNAME  HAS THIS NAME BEEN ENTERED?
         BE    RELDR4             RELOAD R4
         LA    R4,BUFNXMAJ        POINT TO NEXT ENTRY
         B     SKIPMAJ            CHECK NEXT TABLE ENTRY FOR MATCH
RELDR4   EQU   *
         LR    R4,R8              REPOINT R4 TO CURRENT BUFFER
         B     NXTMJRIB           GET NEXT MAJOR RIB
         SPACE
LOADMAJ  EQU   *
         LR    R4,R8              RELOAD CURRENT BUFFER ADDRESS
         MVI   BUFTYPE,BUFTMAJ    SET BUFFER ENTRY TYPE
         MVC   BUFMAJNM,RIBQNAME  SAVE MAJOR RIB NAME
         LR    R4,R1              BUMP TO NEXT TABLE ENTRY
         SPACE
NXTMJRIB EQU   *
         SR    R8,R8              CLEAR WORK REGISTER
         L     R8,RIBNRIBE        NUMBER OF RIBES IN THIS RIB
         MH    R8,RIBESIZE        MULTIPLY BY SIZE OF RIBES
         AH    R8,RIBVLEN         ADD LENGTH OF VARIABLE RIB SECTION
         AH    R8,RIBSIZE         ADD IN FIXED LENGTH OF RIB
         AR    R6,R8              ADD DISPLACEMENT TO REG 6
         BCT   R7,MAJLOOP         GET NEXT RIB
         SPACE
         MVI   BUFTYPE,BUFTEND    SET END OF DATA FLAG
         B     FORMAT             DISPLAY MAJOR NAMES
         EJECT
***********************************************************************
*
*        FIND REQUESTED MAJOR NAME RIB
*
***********************************************************************
FINDMAJ  EQU   *
         LM    R0,R1,ENQMAJNM      LOAD MAJOR ENQ NAME
         C     R0,RIBQNAME         DOES LEFT HALF MATCH
         BNE   NEXTRIB             IF NOT GO TO NEXT RIB
         C     R1,RIBQNAME+4       DOES RIGHT HALF MATCH
         BE    LOOKMIN            YES...FIND MINOR NAMES
         SPACE
NEXTRIB  EQU   *
         SR    R8,R8              CLEAR WORK REGISTER
         L     R8,RIBNRIBE        NUMBER OF RIBES IN THIS RIB
         MH    R8,RIBESIZE        TIMES THE SIZE OF EACH RIBE
         AH    R8,RIBVLEN         PLUS THE LENGTH OF VARIABLE SECTION
         AH    R8,RIBSIZE         PLUS LENGTH OF FIXED SECTION
         AR    R6,R8              ADD DISPLACEMENT TO RIB POINTER
         BCT   R7,FINDMAJ         CHECK NEXT MAJOR
         SPACE
         TM    FLAG,MAJLDED       IS THERE OUTPUT?
         BO    DATACOMP           YES...OUTPUT DATA
         B     NOMAJNAM           BRANCH TO NO MAJ MSG
         SPACE
***********************************************************************
*
*        MAJOR RIB FOUND, LOOK FOR MINOR RIBES
*
***********************************************************************
LOOKMIN  EQU   *
         SR    R1,R1              CLEAR R1
         ICM   R1,1,RIBRNMLN      GET RIB MINOR NAME LENGTH
         STH   R1,RIBMINLN        SAVE VARIABLE LENGTH
         LA    R1,BUFNXMAJ        FIND NEXT ENTRY ADDR
         CR    R1,R5              OVERFLOW TABLE ?
         BH    TABLOVFL           YES...
         TM    FLAG,MAJLDED       HAS MAJOR NAME ALREADY BEEN SAVED?
         BO    CHKMIN             GET THIS ONES'S MINOR NAME
         OI    FLAG,MAJLDED       INDICATE MAJOR NAME SAVED
         MVI   BUFTYPE,BUFTMAJ    SET BUFFER ENTRY TYPE
         MVC   BUFMAJNM,RIBQNAME  SAVE MAJOR RIB NAME
         LR    R4,R1              BUMP TO NEXT TABLE ENTRY
         SPACE
CHKMIN   EQU   *
         SR    R10,R10            CLEAR RIBVAR REGISTER
         LR    R10,R6             POINT TO START OF RIB
         AH    R10,RIBSIZE        ADD FIXED LENGTH OF RIB
         USING RIBVAR,R10
         SPACE
         TM    FLAG,ALLMINOR      IS ALL MINOR NAMES SPECIFIED
         BO    SAVMINOR           YES GO GET ALL MINOR NAMES
         LH    R8,LENGMIN         LOAD PARM LENGTH OF MINOR NAME
         TM    FLAG,PARTMIN       IS A PARTIAL MINOR NAME SPECIFIED
         BO    MINORCHK           IF YES GO CHECK MINOR NAME
         SPACE
SPECMIN  EQU   *
         CH    R8,RIBMINLN        MINOR NAME LENGTHS AGREE ?
         BNE   NEXTRIB            NO...TRY ANOTHER MINOR RIB
         SPACE
MINORCHK EQU   *
         BCTR  R8,0               LENGTHS AGREE..BUT DO NAMES ?
         EX    R8,COMPMINR        FIND OUT.
         BNE   NEXTRIB            NO...GET NEXT RIB
*                                 YES..GET OWNER'S JOBNAME/USERID
         SPACE
*        MOVE MINOR NAME TO DATA BUFFER
         SPACE
SAVMINOR EQU   *
         SR    R9,R9              ZERO LENGTH REG
         LA    R9,44              RESET TO 44
         CH    R9,RIBMINLN        IS MINOR NAME EXCESSIVE
         BC    12,SAVMIN          YES GO TRUNCATE
         SR    R9,R9              ZERO LENGTH REG
         LH    R9,RIBMINLN        LENGTH OF MINOR RIB NAME
         SPACE
SAVMIN   EQU   *
         LA    R1,BUFMINNM(R9)    FIND NEXT ENTRY ADDRESS
         CR    R1,R5              OVERFLOW TABLE ?
         BH    TABLOVFL           YES...
         MVI   BUFTYPE,BUFTMIN    SET BUFFER ENTRY TYPE
         STC   R9,BUFMINLN        PUT NAME LENGTH IN TABLE
         BCTR  R9,0               SET FOR EXECUTE INST
         EX    R9,SAVEMIN         SAVE MINOR RIB NAME
         LR    R4,R1              BUMP BASE TO NEXT ENTRY
         SR    R8,R8              CLEAR COUNT REGISTER
         L     R8,RIBNRIBE        LOAD NUMBER OF RIBES
         SPACE
*        MOVE USER DATA FROM RIBE TO BUFFER
         SR    R11,R11            CLEAR RIBE REGISTER
         LR    R11,R10            LOAD TO RIB VARIABLE AREA
         AH    R11,RIBVLEN        ADD VARIABLE LENGTH
         SPACE
STRIBE   EQU   *
         LA    R1,BUFNXJOB         FIND NEXT ENTRY ADDRESS
         CR    R1,R5               OVERFLOW TABLE ?
         BH    TABLOVFL            YES...
         SR    R14,R14            INSERT
         ICM   R14,3,RIBEASID      LOAD ASID NUMBER
         STCM  R14,3,BUFASID       MOVE ASID TO BUFFER
         SPACE
SAVEJOBN EQU   *
         MVC   BUFJOBNM(8),RIBEJBNM  MOVE JOB OR START NAME TO BUFFER
         SPACE
SAVEFLAG EQU   *
         MVC   BUFFLAG,RIBERFLG    SAVE RIBE FLAGS
         MVI   BUFTYPE,BUFTJOB     SET BUFFER ENTRY TYPE
         OI    FLAG,FNDMINOR       SET MINOR NAME FLAG
         LR    R4,R1               BUMP BASE TO NEXT ENTRY
         SPACE
*        CHECK FOR RESERVE
         SPACE
         TM    RIBERFLG,RIBERESV   IS THIS A RESERVE RIBE
         BZ    NEXTRIBE            IF NOT GO GET NEXT RIBE
         L     R15,RIBEUCB         LOAD UCB ADDRESS
         USING UCB,R15
         CLI   UCBTBYT3,UCB3DACC   IS DEVICE DIRECT ACCESS
         BNE   NEXTRIBE            IF NOT IGNORE RESERVE
         LA    R1,BUFNXDEV         LOAD NEXT ENTRY ADDR
         CR    R1,R5               IS BUFFER FULL?
         BH    TABLOVFL            IF YES QUIT
         MVI   BUFTYPE,BUFTRSV     SET BUFFER ENTRY TYPE
         MVC   BUFDEV,UCBNAME      MOVE DEVICE ADDR TO BUFFER
         MVC   BUFVOL,UCBVOLI      MOVE VOLUME SERIAL TO BUFFER
         LR    R4,R1               BUMP TO NEXT TABLE ENTRY
         SPACE
NEXTRIBE EQU   *
         AH    R11,RIBESIZE        POINT TO NEXT RIBE
         BCT   R8,STRIBE           GET ALL RIBES
         SPACE
         TM    FLAG,ALLMINOR+PARTMIN  ARE ALL OR PART MIRORS SPECIFIED
         BNZ   NEXTRIB             IF YES GET NEXT MINOR RIB
         SPACE
***********************************************************************
*
*        ALL DATA COMPLETE FREE LOCKS & DISPLAY RESULTS
*
***********************************************************************
DATACOMP EQU   *
         TM    FLAG,RTOKEN        MORE ENQ TO BE RETURNED?
         BO    GQSCAN             RESCAN
         TM    FLAG,FNDMINOR      WERE ANY MINOR NAMES FOUND
         BZ    NOOUTPUT           NO...
         MVI   BUFTYPE,BUFTEND    SET END OF DATA FLAG
         B     FORMAT             GO DISPLAY RESULTS
         SPACE 2
SAVEMIN  MVC   BUFMINNM(0),RIBRNAME MOVE MINOR NAME TO BUFFER
COMPMINR CLC   ENQMINNM(0),RIBRNAME IS THIS SPECIFIED MINOR NAME
         EJECT
***********************************************************************
*
*        DISPLAY ERROR MESSAGES
*
***********************************************************************
NOENQACT EQU   *
         LA    R1,MSG1            NO ENQ ACTIVE
         B     ERRWTO
         SPACE 2
CODE10   EQU   *
         LA    R1,MSG2            INVALID SYSNAME
         B     ERRWTO
         SPACE 2
CODE0C   EQU   *
         LA    R1,MSG3            ABNORMAL ERROR
         B     ERRWTO
         SPACE 2
NOMAJNAM EQU   *
         LA    R1,MSG4            MAJOR NAME NOT FOUND
         B     ERRWTO
         SPACE 2
NOOUTPUT EQU   *
         LA    R1,MSG7            MINOR NAME NOT FOUND
         SPACE
ERRWTO   EQU   *
         BAL   R11,OPER           * GO ISSUE MESSAGE      *LBD 07/85*
         B     CLEANUP            GO TERMINATE
         SPACE 2
*        DISPLAY ERROR MSG THEN RESULTS
         SPACE
TABLOVFL EQU   *
         MVI   BUFTYPE,BUFTEND    SET END OF DATA FLAG
         LA    R1,MSG8            LOST DATA--TABLE SIZE EXCEEDED
         BAL   R11,OPER           GO DISPLAY ERROR MSG
*                                 THEN DISPLAY RESULTS
         EJECT
***********************************************************************
*
*        DISPLAY DATA COLLECTED
*
***********************************************************************
FORMAT   EQU   *
         TM    FLAG,RTOKEN        MORE ENQ TO BE RETURNED?
         BO    GQSCAN             RESCAN
         SR    R9,R9              ZERO BRANCH INDEX
         L     R4,CORE            LOAD START OF BUFFER
         ICM   R5,15,MSG12        LOAD MSG LENGTH & FLAGS
         STCM  R5,15,MSGLN        SET MSG LENGTH & FLAGS
***********************************************************************
*
*        DISPLAY HEADINGS
*
***********************************************************************
MAJHEAD  EQU   *
         LA    R1,MSG11           LOAD MSG ADDR
         BAL   R11,OPER           GO DISPLAY HEADING
         TM    FLAG,MAJONLY       WERE MAJOR NAMES ONLY SPECIFIED
         BZ    STDHEAD            IF NOT USE STD HEADING
         LA    R1,MSG12           LOAD MSG ADDR
         BAL   R11,OPER           GO DISPLAY HEADING
         B     FMTLOOP            GO FORMAT & DISPLAY MAJ NAMES
         SPACE
STDHEAD  EQU   *
         LA    R1,MSG9            LOAD MSG ADDR
         BAL   R11,OPER           GO DISPLAY HEADING
         LA    R1,MSG14           LOAD MSG ADDR
         BAL   R11,OPER           GO DISPLAY HEADING
         LA    R1,MSG10           LOAD MSG ADDR
         BAL   R11,OPER           GO DISPLAY HEADING
         SPACE
***********************************************************************
*
*        FORMAT & DISPLAY MAJOR / MINOR ENQ NAMES
*
***********************************************************************
         SPACE
FMTLOOP  EQU   *
         MVI   MSGTEXT,BLANK
         MVC   MSGTEXT+1(64),MSGTEXT  BLANK-OUT MSGTEXT
         LA    R5,MSGSTDLN        SET NORMAL WTO LENGTH
         SPACE
*        FORMAT EACH ENTRY TYPE
         SPACE
FMTCHECK EQU   *
         IC    R9,BUFTYPE         LOAD BUFFER ENTRY TYPE
         B     *(R9)              FORMAT RECORD TYPE
         B     FMTMAJ             FORMAT MAJOR NAME LINE
         B     FMTMIN             FORMAT MINOR NAME LINE
         B     FMTJOB             FORMAT JOBNAME LINE
         B     FMTRESV            FORMAT RESERVE DEV LINE
         B     CLEANUP            ALL DATA DISPLAYED, QUIT
         SPACE
*        FORMAT MAJOR NAME LINE
         SPACE
FMTMAJ   EQU   *
         LA    R5,MSGMAJLN        LOAD MSG LENGTH
         MVC   MSGMAJNM,BUFMAJNM  GET MAJOR NAME FROM TABLE
         LA    R6,BUFNXMAJ        LOAD NEXT ENTRY ADDRESS
         B     PRINT              GO DISPLAY FORMATTED LINE
         SPACE
*        FORMAT MINOR NAME LINE
         SPACE
FMTMIN   EQU   *
         SR    R11,R11            ZERO LENGTH REG
         IC    R11,BUFMINLN       LENGTH OF MINOR NAME
         AR    R5,R11             BUMP TOTAL MESSAGE LENGTH
         BCTR  R11,0              SET FOR EXECUTE INST
         EX    R11,GETNAME        MOVE NAME INTO BUFFER
         LA    R4,BUFMINNM+1(R11) BUMP BASE TO NEXT ENTRY
         LA    R5,MSGMINLN+1(R11)  LOAD TOTAL MSG LENGTH
         B     FMTCHECK           GO CHECK NEXT BUFFER TYPE
         SPACE
*        FORMAT USER DATA LINE
         SPACE
FMTJOB   EQU   *
         MVC   MSGJOBNM,BUFJOBNM  MOVE JOBNAME TO MSG
         UNPK  MSGASID(5),BUFASID(3)  CONVERT ASID
         TR    MSGASID,HEXTABLE   CONVERT ALPHA
         MVI   MSGBL2,BLANK       BLANK GARGABE BYTE
         LA    R6,BUFNXJOB        LOAD NEXT ENTRY ADDRESS
         TM    BUFFLAG,RIBERESV   IS THIS A RESERVE
         BO    SETRS              IF YES GO SET RESERVE TYPES
SETSHR   EQU   *
         MVC   MSGTYPE,SHR        ASSUME SHR'D ENQ
         TM    BUFFLAG,RIBETYPE   IS IT SO
         BO    PRINT
SETEXCL  EQU   *
         MVC   MSGTYPE,EXCL       NO...MUST BE EXCLUSIVE
         B     PRINT
SETRS    EQU   *
         MVC   MSGTYPE,RSVS       NO, SHR RESERVE
         TM    BUFFLAG,RIBETYPE   IS IT SO
         BO    PRINT
SETRX    EQU   *
         MVC   MSGTYPE,RSVX       NO, EXCL RESERVE
         B     PRINT
         SPACE
*        FORMAT RESERVE DEVICE & VOLUME SERIAL DATA
         SPACE
FMTRESV  EQU   *
         LA    R5,MSGRSVLN        LOAD MSG LENGTH
         MVC   MSGDEV,BUFDEV      MOVE DEVICE ADDR TO MSG
         MVC   MSGVOL,BUFVOL      MOVE VOLUME SERIAL TO MSG
         LA    R6,BUFNXDEV        LOAD NEXT ENTRY ADDRESS
         SPACE
*        DISPLAY MSG LINE
         SPACE
PRINT    EQU   *
         STH   R5,MSGLN           SET MSG LENGTH
         LA    R1,WTOMSG          LOAD MSG ADDRESS
         BAL   R11,OPER           OUTPUT BUFFER
         LR    R4,R6              CHANGE BASE TO NEXT ENTRY
         B     FMTLOOP            LOOP THRU ALL ENTRIES
         SPACE 3
GETNAME  MVC   MSGMINNM(0),BUFMINNM  MOVE MINOR NAME TO MSG
         EJECT
***********************************************************************
*
*        RELEASE ALL CORE AND EXIT
*
***********************************************************************
CLEANUP  EQU   *
         L     R1,CORE            START OF CORE TABLE
         L     R0,CORSIZ           LOAD BUFFER SUBPOOL & SIZE
         FREEMAIN R,LV=(0),A=(1)
         MLEAVE                                           *LBD 07/85*
         EJECT
***********************************************************************
*
*        OPER -- I/O CONTROL SECTION
*
*        ON ENTRY:
*                 R1  = MESSAGE ADDRESS
*                 R11 = RETURN ADDRESS
*
*        NOTE: OUTPUT BUFFER IS SETUP PRIOR TO ENTRY
*
***********************************************************************
OPER     MVC   PLINE+4,BLANKS                             *LBD 07/85*
         LH    R3,0(R1)         * LOAD LEN                *LBD 07/85*
         SH    R3,=H'05'        * -4 (WTO HDR) -1 (MVC)   *LBD 07/85*
         EX    R3,MVCPLINE      * AND PLACE IN PLINE      *LBD 07/85*
         LA    R3,5(R3)         * ADD THE 5 BACK          *LBD 07/85*
         STH   R3,PLINE         * RESET PUTLINE LENGTH    *LBD 07/85*
         PUTLINE PARM=PUTBLOK,OUTPUT=(PLINE,TERM,SINGLE,DATA),       XXX
               MF=(E,IOPLADS)                             *LBD 07/85*
         BR    R11
         SPACE 1                                          *LBD 07/85*
MVCPLINE MVC   PLINE+4(0),4(R1) * EXECUTED INSTRUCTION    *LBD 07/85*
PLINE    DC    CL80' '                                    *LBD 07/85*
BLANKS   DC    CL80' '                                    *LBD 07/85*
         EJECT
***********************************************************************
*
*        CONSTANTS, TABLES, ETC.
*
***********************************************************************
BLANK    EQU   C' '
STAR     EQU   C'*'                END OF FIELD DELIMITER
SLASH    EQU   C'/'                MAJOR / MINOR DELIMITER
NULL     EQU   X'00'               FIELD DELIMITER        *LBD 07/85*
POUND    EQU   C'#'                JOB MGMT EOF DELIMITER
CORSIZ1  DC    F'8192'             SIZE OF DATA BUFFER
CORSIZ   DC    X'00',AL3(SCANEND-SCANCORE) TOTAL WORK AREA
H1       DC    H'1'                CONSTANT
SYSIEFSD DC    C'SYSIEFSD'         JOB MANAGEMENT MAJOR ENQ NAME
SHR      DC    C'SHR '             ENQ TYPE
EXCL     DC    C'EXCL'             ENQ TYPE
RSVS     DC    C'RSVS'             RESERVE TYPE
RSVX     DC    C'RSVX'             RESERVE TYPE
UNKNOWN  DC    C'UNKNOWN'          UNPRINTABLE NAME
HEXTABLE EQU   *-240
         DC    C'0123456789ABCDEF' HEX/ALPHA XLATE TABLE
         LTORG
         EJECT
*        PROGRAM MESSAGES
*
MSG1     DC    Y(M1-*),X'6000'
         DC    C'*** NO ENQ ACTIVE ***'
M1       EQU   *
         SPACE
MSG2     DC    Y(M2-*),X'6000'
         DC    C'*** INVLAID SYSNAME - GQSCAN ***'
M2       EQU   *
         SPACE
MSG3     DC    Y(M3-*),X'6000'
         DC    C'*** ABNORMAL GQSCAN ERROR ***'
M3       EQU   *
         SPACE
MSG4     DC    Y(M4-*),X'6000'
         DC    C'*** MAJOR NAME NOT FOUND ***'
M4       EQU   *
         SPACE
MSG5     DC    Y(M5-*),X'6000'
         DC    C'*** MAJOR NAME LONGER THAN 8 CHAR ***'
M5       EQU   *
         SPACE
MSG6     DC    Y(M6-*),X'6000'
         DC    C'*** MAJOR NAME MISSING ***'
M6       EQU   *
         SPACE
MSG7     DC    Y(M7-*),X'6000'
         DC    C'*** MINOR NAME NOT FOUND ***'
M7       EQU   *
         SPACE
MSG8     DC    Y(M8-*),X'6000'
         DC    C'*** LOST DATA...MAXIMUM NUMBER OF ENTRIES EXCEEDED***'
M8       EQU   *
         SPACE
MSG9     DC    Y(M9-*),X'6000'
         DC    C'JOBNAME  ASID TYPE MINOR NAME'
M9       EQU   *
         SPACE
MSG10    DC    Y(M10-*),X'6000'
         DC    C'-----------------------------'
M10      EQU   *
         SPACE
MSG11    DC    Y(M11-*),X'6000'
         DC    C'MAJOR NAME'
M11      EQU   *
         SPACE
MSG12    DC    Y(M12-*),X'6000'
         DC    C'--------'
M12      EQU   *
         SPACE
MSG13    DC    Y(M13-*),X'6000'
         DC    C'*** MINOR NAME MISSING ***'
M13      EQU   *
         SPACE
MSG14    DC    Y(M14-*),X'6000'
         DC    C'                   DEV VOLSER (RESERVE ONLY)'
M14      EQU   *
         EJECT
CORE     DS    A                   ADDRESS OF GOTTEN DATA BUFFER
LENGMIN  DS    H                   LENGTH OF MINOR NAME
         SPACE 3
         DS    0D                                         *LBD 07/85*
ENQMAJNM DS    CL8                 MAJOR ENQ NAME
         SPACE 3
NUMCHK   DS    CL6                 WORKAREA FOR NUMBER TEST
         SPACE 3
FLAG     DS    X                   CONTROL FLAG
MAJONLY  EQU   X'80'               DISPLAY MAJOR NAMES ONLY
ALLMINOR EQU   X'40'               DISPLAY ALL MINOR NAMES
PARTMIN  EQU   X'20'               PARTIAL MINOR NAME
SPECMINR EQU   X'10'               SPECIFIC MINOR NAME
FNDMAJOR EQU   X'08'               MAJOR NAME FOUND
FNDMINOR EQU   X'04'               MINOR NAME FOUND
MAJLDED  EQU   X'02'               MAJOR NAME LOADED
RTOKEN   EQU   X'01'               RESCAN REQUIRED - TOKEN TAKEN
         SPACE 3
ENQMINNM DS    CL80                MINOR ENQ NAME
         SPACE
WTOMSG   DS    0F                  OPERATOR MSG BUFFER
MSGLN    DS    H                   MSG LENGTH
MSGFLAGS DS    XL2                 MSG FLAGS
MSGTEXT  DS    CL65                MSG BUFFER
         SPACE
         ORG   MSGTEXT
MSGMAJNM DS    CL8                 MAJOR NAME
MSGMAJLN EQU   *-WTOMSG            MAJOR NAME LINE LENGTH
         SPACE
         ORG   MSGTEXT
MSGJOBNM DS    CL8                 JOBNAME
MSGBL1   DS    C                   BLANK
MSGASID  DS    CL4                 JOB'S ASID
MSGBL2   DS    C                   BLANK
MSGTYPE  DS    CL4                 ENQ TYPE
MSGSTDLN EQU   *-WTOMSG            STANDARD MSG LENGTH
         SPACE
MSGBL3   DS    C                   BLANK
MSGMINNM DS    CL44                MINOR NAME
MSGMINLN EQU   MSGMINNM-WTOMSG     MINOR NAME MSG LENGTH
         SPACE
         ORG   MSGMINNM
MSGDEV   DS    CL3                 DEVICE NAME (UCBNAME)
MSGBL4   DS    C                   BLANK
MSGVOL   DS    CL6                 VOLUME SERIAL (UCBVOLI)
MSGRSVLN EQU   *-WTOMSG            RESERVE DATA MSG LENGTH
         EJECT
*        DATA BUFFER
         SPACE
BUFFER   DSECT
BUFTYPE  DS    X                   BUFFER ENTRY TYPE
BUFTMAJ  EQU   4                   MAJOR NAME ENTRY
BUFTMIN  EQU   8                   MINOR NAME ENTRY
BUFTJOB  EQU   12                  JOBNAME & FLAG ENTRY
BUFTRSV  EQU   16                  RESERVE DEVICE ENTRY
BUFTEND  EQU   20                  END OF DATA FLAG
         SPACE
BUFMAJNM DS    CL8                 MAJOR NAME
BUFNXMAJ EQU   *                   NEXT ENTRY SLOT
         SPACE
         ORG   BUFMAJNM
BUFMINLN DS    X                   MINOR NAME LENGTH
BUFMINNM DS    CL44                MINOR NAME
         SPACE
         ORG   BUFMAJNM
BUFJOBNM DS    CL8                 JOBNAME
BUFASID  DS    XL2                 ASID
BUFFLAG  DS    C                   ENQ/RESERVE FLAG
BUFNXJOB EQU   *                   NEXT ENTRY SLOT
         SPACE
         ORG   BUFMAJNM
BUFDEV   DS    CL3                 DEV ADDRESS (UCBNAME)
BUFVOL   DS    CL6                 VOLUME SERIAL
BUFNXDEV EQU   *                   NEXT ENTRY SLOT
         ORG   BUFTYPE
SCANCORE DS    8192X               BUFFER TABLE AREA
SCANBUFF EQU   *
         DS    0D                  DOUBLE WORD BOUNDARY
* LIST FORM OF GQSCAN MACRO *
SCANPARM GQSCAN MF=L
*
SCANSAVE DS    9D                  GQSCAN REQUIRED SAVE AREA
RIBSIZES DS    0F
RIBSIZE  DS    H                   FIXED RIB SIZE
RIBESIZE DS    H                   LENGTH OF RETURNED RIBES
RIBMINLN DS    H                   LENGTH OF RIB MINOR NAME
         DS    H                   FILLER
RIBNR    DS    F                   NUMBER OF RIBS RETURNED IN AREA
TOKEN    DS    F                   RESCAN START ADDRESS
SCANAREA DS    102400X             GQSCAN RETURN AREA
SCANPAD  DS    20D                 JUST TO BE SURE
SCANEND  DS    0D                  END OF SCAN/WORK AREA
         EJECT
UCB      DSECT
         IEFUCBOB
         EJECT
         IKJIOPL
         EJECT
         ISGRIB
         END
