°              TSO TIME SHARING SUBSYSTEM OPTION

                         USER'S GUIDE
¸
¸
¸
¸
¸
¸
¸

°                                                            1
¯
¸
¸
¸
¸
¸
¸
¸

°                For further information, please contact:

°                Marc Schare
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
°                                                            2
¯
¸
° TSO TIME SHARING SUBSYSTEM USER'S GUIDE

 CONTENTS

 Introduction^

 Current Version^

 Planning the Installation^

 Installation^

 TSSO Parameters^

° SRC^

° TABLE^

° MAXCMDS^

° MAXWTO^

° NONSWAP^

° PROMPT^

° SECSYS^

° SECLEVEL^

° RACFID^

° END^

° Comments^

 TSSO Start Command Options^

 Operator Productivity Facility (OPF)^

° Automated Operations Facility (AOF)

° Introduction^

° Creating the AOF Table^

° TABENTRY Operands^

° Assembling and Link-Editing the Module^

° Storing the Module^

 Recovery Procedures^

 Appendices

° Appendix A.  TSSO Command Reference
° Appendix B.  TSSO Control Commands
° Appendix C.  Table of Processing Modules
° Appendix D.  Sample AOF Table
° Appendix E.  AOF Algorithm
° Appendix F.  Sample TSSO Parameter Deck
¸
¸
¸

°                                                            3
¯
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸

°                                                            1
¯
° TSSO User's Guide
¸
° INTRODUCTION

° This document describes the Time Sharing Subsystem Option (TSSO),
° a  package designed to increase operator productivity by automat-
° ing tasks which need not be performed manually. TSSO performs its
° function through two integrated components. The Operator  Produc-
° tivity  Facility (OPF) extends the power of TSO to the MVS opera-
° tor's  console,  and  the  Automated  Operations  Facility  (AOF)
° enhances an installation's ability to control system events based
° on  console message traffic.  TSSO also enhances end-user produc-
° tivity by allowing end-user access to the MVS command  subsystem.
° This  document  describes  the installation of TSSO, TSSO parame-
° ters, and the use of the two components.
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
° 2
¯
°                                                         TRS-85-xx
°                                                     Issue 1, date
°                                                 TSSO User's Guide
¸
° CURRENT VERSION

° This document describes the function of TSSO Version 4, Release 2
° (TSSO 4.2).  All features described here will continue to work on
° subsequent versions of the Time Sharing Subsystem  Option  unless
° specified in a future version of this document.

° SUMMARY OF NEW FEATURES IN RELEASE 4.2

° A  description  of  the  new  features of TSSO Version 4.2 can be
° found in member RELGUIDE in the TSSO.VERS42.ASM data set.
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸

°                                                                 3
¯
° TRS-85-xx
° Issue 1, date
° TSSO User's Guide
¸
° PLANNING FOR TSSO INSTALLATION

° ø   Software prerequisites

° ø   disclaimers

° ø   TSSO security issues

° ø   planning for subsystem consoles

° ø   reveiw remainder of document before proceeding with installa-
°     tion (parameter values, AOF table,etc.)
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸

° 4
¯
°                                                         TRS-85-xx
°                                                     Issue 1, date
°                                                 TSSO User's Guide
¸
° INSTALLATION

° INSTALLATION PROCEDURES

° Upon completion of the planning phase, TSSO is ready  to  be  in-
° stalled.    The installation of TSSO is outlined in the following
° step-by-step procedure.  TSSO is distributed in a  single  parti-
° tioned  data  set,  which contains all source modules, procedures
° and documentation.  Although this data set may be called  by  any
° name, this document assumes a name of TSSO.VERS42.ASM.

° 1.  Download  the TSSO.VERS42.ASM data set to DASD.  About 3 cyl-
°     inders of 3380 space is required.  If you received your  copy
°     of  the TSSO subsystem from the CBT tape, simply copy it to a
°     data set with this name.  If you received a  tape,  then  the
°     TSSO  subsystem  is in IEBCOPY format on the first file.  The
°     tape will be non-labeled, so use the  LABEL=(1,NL)  parameter
°     when downloading TSSO.

° 2.  Create two data sets for the TSSO modules with the character-
°     istics RECFM=U, LRECL=0, BLKSIZE=13030, DSORG=PO.

°     a.  TSSO.VERS42.LOAD will be an intermediate data set for as-
°         sembling TSSO modules.

°     b.  SYS1.TSSOLOAD will contain the TSSO production modules.

°     One  cylinder  of  3380  DASD  space should be sufficient for
°     these data sets.

° 3.  Assemble the TSSO source modules using the  procedure  ASMALL
°     in  TSSO.VERS42.ASM.  You will need to EDIT the procedure and
°     add the appropriate installation job cards and local account-
°     ing information.

°     If you will be running the TSSO subsystem on MVS/370, or both
°     MVS/370 and MVS/XA, the SYSLIB DD statement must be  pointing
°     to the SYS1.MACLIB and SYS1.AMODGEN data sets for MVS/370. If
°     you  will be running the subsystem exclusively on MVS/XA, the
°     SYSLIB  DD  statement  may  point  to  the  XA  versions   of
°     SYS1.MACLIB and SYS1.AMODGEN.

°     NOTE:     If  you do not have TSO/E Release 2 installed, many
°               of the assemblies will fail.

° 4.  Copy the load modules from  TSSO.VERS42.LOAD  into  the  pro-
°     duction  library SYS1.TSSOLOAD.  The library TSSO.VERS42.LOAD
°     should remain on the system as  an  intermediate  library  to

°                                                                 5
¯
° TRS-85-xx
° Issue 1, date
° TSSO User's Guide
¸
°     contain  assembled  TSSO load modules and assembled Automated
°     Operations Facility tables.

° 5.  Update the SYS1.PARMLIB data set with one or more TSSO param-
°     eter decks.  The default member is TSSOPARM; however,  alter-
°     nate members may be selected when TSSO is started.  Note that
°     the  TSSO parameter decks must be located in SYS1.PARMLIB, as
°     TSSO will dynamically allocate this data  set.    Review  the
°     sections  "Security" and "TSSO Parameters" for information on
°     TSSO parameters.  Appendix F gives an example of a  TSSO  pa-
°     rameter  deck,  and a sample TSSO parameter deck may be found
°     in member SAMPPARM in the TSSO.VERS42.ASM data set.
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸

° 6
¯
°                                                         TRS-85-xx
°                                                     Issue 1, date
°                                                 TSSO User's Guide
¸
° 6.  Identify TSSO to MVS as a subsystem.  In the subsystem  names
°     table,  member IEFSSNxx in SYS1.PARMLIB, make an entry of the
°     form

°          TSSO

° 7.  Include SYS1.TSSOLOAD in the IEAAPFxx member of SYS1.PARMLIB.
°     This allows the TSSO subsystem to run APF authorized.

° 8.  Include a TSSO start-up procedure in  the  SYS1.PROCLIB  data
°     set.    Note  that, because TSSO may be started by the master
°     scheduler, this procedure must be in SYS1.PROCLIB, not  in  a
°     PROCLIB  defined  to  JES2.   A sample procedure for starting
°     TSSO is in member TSSOPROC in the TSSO.VERS42.ASM data set.

° 9.  Give the TSO commands supplied with TSSO  APF  authorization.
°     Update   the  installation  CSECT  IKJEFTE2  in  load  module
°     IKJEFT02 to include the following commands:   ALTAOF,  CACHE,
°     CPCMD,  REPLY,  OSCMD, OSWTO, OSWTOH, and OSASK.  Under TSO/E
°     Release 2.1, this CSECT is in the load  module  IKJTABLS.  If
°     this  release  of  TSO/E  is  installed,  a  separate copy of
°     IKJTABLS may be used by TSSO if included in the SYS1.TSSOLOAD
°     data set.

° 10. Create the TSSO Automated Operations Facility table(s).   In-
°     structions  for  preparing  the table are found later in this
°     document.

° 11. If you will be running TSSO with RACF support and MINIMAL se-
°     curity, add a RACF ID for TSSO.  Also add a RACF ID for  TSSO
°     to  SYS1.UADS.  This will allow TSSO to assume the TSO attri-
°     butes (e.g. ACCOUNT, SUBMIT or MOUNT) that  the  installation
°     desires.  If you will be running with MEDIAL or MAXIMAL secu-
°     rity,  you  may  wish  to add additional RACF or ACF2 and TSO
°     user IDs for each operator who will be logging on.

° 12. IPL TSSO to refresh the subsystem name table.  Note that,  if
°     TSSO was previously installed, this step is not necessary.
¸
¸
¸

°                                                                 7
¯
° TRS-85-xx
° Issue 1, date
° TSSO User's Guide
¸
° TSSO PARAMETERS

° TSSO parameters provide an installation with a flexible mechanism
° for  altering  TSSO processing.  Parameters are entered in one or
° more decks and stored as members in SYS1.PARMLIB.    The  default
° member  is  TSSOPARM, and it is recommended that TSSOPARM be cre-
° ated for daily processing.

° Parameters can be entered in any order, and if  two  entries  are
° specified  for  the  same parameter, the last entry takes preced-
° ence.

° SYSTEM RECOGNITION CHARACTER (SRC) PARAMETER

° SRC defines the character that TSSO will use  to  recognize  TSSO
° operator  commands.   For example, if this character is "#", TSSO
° will intercept and process all operator commands starting with  a
° "#".  The syntax is

°      SRC = char

° where  char  is  the  character that TSSO will use.   The default
° character is a "#".

° SUBSYS PARAMETER

° SUBSYS defines subsystem interface exits and  the  routines  that
° will handle the exit functions.  The syntax is

°      SUBSYS nn = module-name

° where nn is the subsystem interface function code and module-name
° is  the  name  of the routine that will handle the function.  You
° may specify as many SUBSYS parameters as desired.    However,  if
° there  are multiple entries with the same function code, only the
° last appearance of the code will be honored.

° By default, TSSO includes two SUBSYS entries,  one  for  function
° code  9  which intercepts WTO messages (the AOF facility) and one
° for function code 10 which intercepts operator commands (the  OPF
° facility).   Therefore, be careful that you do not enter a SUBSYS
° parameter with code 9 or 10; otherwise, your entries  will  over-
° ride the defaults and disable the AOF and OPF facilities.
¸

° 8
¯
°                                                         TRS-85-xx
°                                                     Issue 1, date
°                                                 TSSO User's Guide
¸
° TABLE PARAMETER

° TABLE  defines the name of the TSSO Automated Operations Facility
° (AOF) table.  The AOF table contains information used  to  inter-
° cept  and  responding  to operating system messages.  Information
° describing how to create this table is specified  later  in  this
° document.   There is no default.  If this parameter is not speci-
° fied, the AOF is deactivated.  Note that this table  can  be  re-
° loaded  (and  AOF  activated) at any time with the ".RELOAD" TSSO
° operator command described later.  The syntax is

°      TABLE = table-name

° where table-name is the load module name that contains a TSSO AOF
° table.

° MAXCMDS PARAMETER

° MAXCMDS defines the maximum number of  concurrent  commands  that
° TSSO  will  hold for processing.   TSSO processes commands in the
° order in which they are entered, on a  first in-first out  basis.
° Any  commands  that  are entered while TSSO is processing another
° command are queued for execution.  The MAXCMDS parameter  defines
° the  size  of that queue.   Too small a number is undesirable be-
° cause it is advantageous to be able to enter many  TSSO  commands
° at a time.  Too large a number is also undesirable because it be-
° comes  difficult  to detect when a TSSO command may be looping or
° awaiting terminal input.  The syntax is

°      MAXCMDS=nn

° where nn defines the maximum number  of  simultaneous  TSSO  com-
° mands.  Note that TSSO requires 256 bytes for each command in the
° common  service area (CSA).  The default value is 15 simultaneous
° commands.

° MAXWTO PARAMETER

° MAXWTO defines the maximum number of WTOs TSSO will issue for any
° TSO given command.  The parameter is designed to prevent consol e
° flooding with TSO commands that produce  many  lines  of  output.
° The syntax is

°      MAXWTO=nnn

° where  nnn  is the maximum number of WTOs TSSO will allow for any
° one command.  TSSO will issue a message when this  limit  is  ex-
° ceeded.
°                                                                 9
¯
° TRS-85-xx
° Issue 1, date
° TSSO User's Guide
¸
° NONSWAP PARAMETER

° NONSWAP  defines  whether TSSO will run non-swappable.  If "Y" is
° entered, TSSO will issue the appropriate SYSEVENT to MVS  to  de-
° clare  itself non-swappable.   Any other entry will cause TSSO to
° be swapped out whenever it has no work.   This can  cause  severe
° performance  degradation  when  using the subsystem.  The default
° value is "Y".  The syntax is

°      NONSWAP={Y/N}

° where "Y" will mark the TSSO address space non-swappable.

° PROMPT PARAMETER

° PROMPT defines whether or not the operator will be  prompted  for
° addtional TSSO parameters at start-up time.  The syntax is

°      PROMPT={Y/N}

° If PROMPT=Y is specified, TSSO will enter prompt mode after proc-
° essing  all  the parameters in PARMLIB and allow the MVS operator
° to enter or override parameters (except security-related  parame-
° ters).    For example, if you use a different AOF table used each
° day, you would want to be prompted so that you can enter the  TA-
° BLE parameter.

° NOTE:  Prompt  mode  may also be specified at start-up time.  See
°        the next section for more information.

° SECSYS PARAMETER

° SECSYS defines the security system used by the installation.  The
° syntax is

°      SECSYS={RACF/ACF2}

° The default is RACF.
¸
¸
° ¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿

° *Using the #.LOGON command, which will assign each console a sep-
° arate RACFID parameter.
° 10
¯
°                                                         TRS-85-xx
°                                                     Issue 1, date
°                                                 TSSO User's Guide
¸
° SECLEVEL PARAMETER

° SECLEVEL defines the security level of  the  installation.    The
° syntax is

°      SECLEVEL={MINIMAL/MEDIAL/MAXIMAL}

°      MINIMAL   Default.  This level operates the same way as TSSO
°                Version 4.1; that is, only the RACF security prod-
°                uct  is supported and the RACFID parameter is used
°                to determine TSSO's authority level.    Therefore,
°                all TSSO commands will execute with TSSO's author-
°                ity, regardless of the console's authority level.
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸

°                                                                11
¯
° TRS-85-xx
° Issue 1, date
° TSSO User's Guide
¸
°      MEDIAL    This level requires all consoles using TSSO to log
°                on*  using the appropriate security system (either
°                RACF or ACF2).  All data set access  checking  for
°                TSSO commands and CLISTs is based on the console's
°                logon  ID authority.   Note that this does not in-
°                clude TSSO control commands, which follow  a  dif-
°                ferent   authorization   mechanism.     these  are
°                accessable to all consoles.

°      MAXIMAL   This level is extremely restrictive.  All consoles
°                using TSSO must log on using the appropriate secu-
°                rity system.  Any console that does not log on  is
°                locked out of all commands.

° RACFID PARAMETER

° RACFID defines a default RACF ID for the TSSO subsystem, allowing
° TSSO  to  access  data  sets  with the authority of that RACF ID.
° This implies that RACF commands can be entered from the MVS  con-
° sole  through  the  use of TSSO.  If the installation has not in-
° stalled the RACF program product, this parameter must be omitted.
° The syntax is

°      RACFID=RACF-id

° where RACF-id is the RACF identifier that TSSO will assume.  This
° parameter has no default. If it is not specified, TSSO will  exe-
° cute  with  the  default RACF authority.   RACFID is used only if
° SECLEVEL=MINIMAL; otherwise, the parameter is ignored, since  ME-
° DIAL  and  MAXIMAL  levels grant authority based on the console's
° logon ID.

° CAUTION:   TSSO does not require a password to acquire this  RACF
°            authority,  and  care must be taken to ensure that use
°            of this parameter does not violate installation  secu-
°            rity standards.

° A  recent small programming enhancement (SPE) to the JES2 subsys-
° tem has enhanced TSSO's ability to control production batch  jobs
° that  may  use RACF-protected data sets.  JES2 will now propagate
° the RACF ID and group from the current  address  space  for  jobs
° submitted  through the internal reader.  TSSO can submit jobs us-
° ing the TSO SUBMIT command, and those jobs can  acquire  the  au-
° thority of the TSSO address space.
¸

° 12
¯
°                                                         TRS-85-xx
°                                                     Issue 1, date
°                                                 TSSO User's Guide
¸
° END PARAMETER

° END marks the end of TSSO parameter input. The syntax is

°      END

° with  no  operands.   If prompt mode was enabled, the MVS console
° operator will be prompted for additional  TSSO  parameters  after
° the END parameter is processed.

° * (COMMENTS) PARAMETER

° The "*" parameter allows an installation to place comments in the
° TSSO initialization deck.  The line will be ignored by TSSO.  The
° syntax is

°      * any-text

° where  any-text  is any descriptive comments the installation may
° want to include in the initialization deck.
¸
¸
¸
¸
¸
¸
¸
¸
¸

°                                                                13
¯
° TRS-85-xx
° Issue 1, date
° TSSO User's Guide
¸
° TSSO START COMMAND OPTIONS

° TSSO provides the installation with a great deal  of  flexibility
° at  start-up time.   The following forms of the MVS START command
° may be used to start TSSO. In any of these  forms,  the  SUB=JES2
° parameter  may  only  be specified   if the JES2 subsystem is up.
° Specifying of SUB=JES2 allows TSSO to use JES2 services  such  as
° PRINTOFF and SUBMIT.

° ø   S TSSO,SUB=JES2

°     This   directs   TSSO  to  use  the  default  parmlib  member
°     "TSSOPARM" for TSSO parameters.  This is the  usual  form  of
°     the  TSSO start command and can be executed from the JES2 in-
°     itialization deck.

° ø   S TSSO,PARM=parm-member,SUB=JES2

°     This directs TSSO to use an alternate TSSO parameter deck  in
°     SYS1.PARMLIB for parameters.  Default is TSSOPARM.

° ø   S TSSO,PARM='PROMPT',SUB=JES2

°     This  directs TSSO to prompt the MVS console operator for the
°     name of a member in SYS1.PARMLIB to be used  for  parameters.
°     After  processing the named member, TSSO will also prompt the
°     MVS console operator for additional parameters, even  if  the
°     parameter  deck specifies PROMPT=N.  Use of PARM='PROMPT' al-
°     lows an installation to specify TSSO parameters* without  en-
°     tering them previously into SYS1.PARMLIB.  This can be useful
°     in  emergency situations; for example, if you need to enter a
°     parameter on a one-time basis, or if you are  locked  out  of
°     SYS1.PARMLIB and need to enter a different parameter.
¸
° NOTES ON THE SUB=JES2 PARAMETER

° The SUB=JES2 parameter should be specified in all  but  emergency
° situations.  Note that the SUB=JES2 parameter is an MVS directive
° to  direct  processing of the TSSO procedure JCL to the JES2 sub-
° system.  It is not a parameter in the TSSO procedure  and  there-
° fore  cannot  be  overridden.    If the SUB=JES2 parameter is not

° ¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿

° *Except  the  security-related  parameters  SECSYS, SECLEVEL, and
° RACFID.
° 14
¯
°                                                         TRS-85-xx
°                                                     Issue 1, date
°                                                 TSSO User's Guide
¸
° used, the MVS operator must issue the ".J" TSSO command to  allow
° TSSO to use JES2 services.

° Although  TSSO  has  not  been tested using the JES3 product, the
° interfaces should be the same because TSSO uses standard  subsys-
° tem interface calls.
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸

°                                                                15
¯
° TRS-85-xx
° Issue 1, date
° TSSO User's Guide
¸
° THE TSSO OPERATOR PRODUCTIVITY FACILITY (OPF)

° OVERVIEW

° The  TSSO Operator Productivity Facility (OPF) is a powerful tool
° which, in conjunction with the Automated Operations Facility, can
° automate many procedures that currently must  be  done  manually.
° OPF extends the power of TSO to the MVS operator's console by al-
° lowing  TSO  commands  and CLISTS to be executed from an MVS con-
° sole, with the response going back to the invoking console.  This
° includes all TSO functions which use  standard  interfaces  (with
° the  exceptions noted below), and control functions unique to the
° TSSO environment that alter TSSO options and display TSSO  infor-
° mation.

° OPF also allows TSO users to issue MVS commands and get responses
° returned  to  the  terminal or to CLIST variables.  TSO users are
° usually restricted to INFO console authority; see page x for  de-
° tails.

° TSO COMMANDS UNDER TSSO

° Most TSO commands may be run under control of the TSSO subsystem.
° The requirements for such commands are as follows:

° 1.  The command must use standard TSO interfaces (namely, GETLINE
°     and  PUTLINE) to perform I/O.  The command should not require
°     input of any kind, other than normal TSO command parameters.

° 2.  The command should not attempt to use full screen processing.
°     A command that issues  the  STFSMODE  FULLSCRN=YES  macro  in
°     ACF/VTAM  environments can hang the TSSO subsystem, forcing a
°     restart.

° 3.  The command should be tested under batch TSO  before  running
°     it under TSSO, since TSO assumes that TSSO-initiated commands
°     are running in background mode.

° TSSO CONTROL COMMANDS

° TSSO  supports  a number of commands that are not directed to the
° TMP for execution.  These commands are handled directly by  TSSO,
° and are used to alter or query TSSO processing options.  See sec-
° tion Appendix B for more information.
¸
° 16
¯
°                                                         TRS-85-xx
°                                                     Issue 1, date
°                                                 TSSO User's Guide
¸
° TSO COMMANDS DISTRIBUTED WITH TSSO

° A  number  of TSO commands that are designed to run with the TSSO
° subsystem are distributed with the base code.    A  complete  de-
° scription of TSO commands may be found in Appendix A.

° TSO  commands  used primarily from CLISTs include the "OS family"
° and the REPLY command.  These are designed  to  provide  services
° such  as communicating with the MVS operator and issuing messages
° to the MVS console, communicating with the MVS command subsystem,
° and communicating with programs that have issued WTORs.  Applica-
° tions of these commands are described below.  Table 1  summarizes
° the behavior of the OS family in each environment.

° Other  commands  provided  are auxiliary TSSO command processors.
° These include the  CACHE  command  for  controlling  3880-21  and
° 3880-23  cache  devices,  the LINKLIST command for displaying the
° system LNKLST concatenation, and the VOLSER and  VALLOC  commands
° for displaying UCB information for DASD devices.  Also, the CPCMD
° command  allows  an MVS console operator running in a virtual ma-
° chine under VM/SP, VM/SP HPO or the VM/XA migration aid to  issue
° CP commands and get the response back to the console invoking the
° command.

° The OSCMD Command

° OSCMD allows you to issue any MVS command (JES2, VTAM, etc.).  If
° OSCMD  is  issued  on a command line, the response is returned to
° the terminal.  However, OSCMD is most useful when issued  from  a
° CLIST,  where  the  response is returned to CLIST variables.  The
° CLIST can be designed to manipulate these  variables  to  produce
° readable responses to the user.  For example, the JES command $DN
° queries  the  status  of all jobs on the system.  The output from
° $DN could be filtered so that the  information  will  be  printed
° only for certain job names.

° The syntax of OSCMD is

°      OSCMD mvs-cmd

° where mvs-cmd is any MVS command.  Input and output variables are
° described in Appendix A.

° Authority Checking with OSCMD

° Because  OSCMD allows a TSO user to issue any MVS command, strict
° security must be enforced to prevent unauthorized users from  is-
° suing   dangerous   system   commands.      When  issued  from  a
° TSSO-initiated CLIST, OSCMD checks the authority of the  invoking
° console  and only permits commands of that level.  When issued by
°                                                                17
¯
° TRS-85-xx
° Issue 1, date
° TSSO User's Guide
¸
° a TSO user, OSCMD checks the installation authority of the user's
° ID.  By default, all TSO users have INFO-only  authority.    Full
° authority can be granted on a per-user basis.

° Examples

° (compare and contrast CLIST and nonCLIST use)

° The OSWTO and OSWTOH Commands

° OSWTO and OSWTOH allow you to write messages to the operator con-
° sole.   OSWTOH highlights the message.  These commands can be is-
° sued only from a TSSO-initiated CLIST,  since  the  send  command
° allows you to send messages to the operator under TSO.

° The syntax of the commands is

°      OSWTO message
°      OSWTOH message

° where message is the text of the message issued.

° Examples

° The OSASK Command

° OSASK  allows  you  to  ask the operator a question and get a re-
° sponse.  If it is issued from a TSO command  line,  the  response
° goes  to the user's terminal.  However, like OSCMD, OSASK is most
° useful when issued from a CLIST, where the response  is  returned
° to  CLIST  variables which can then be manipulated.  So that TSSO
° is not delayed too long for an operator reply, the  maximum  wait
° time   is  60  seconds,  after  which  the  default  response  is
° "NOREPLY".

° The syntax of OSASK is

°      OSASK question

° Input and output variables are described in Appendix A.

° Examples

° The OSPAUSE Command

° to be supplied
¸

° 18
¯
°                                                         TRS-85-xx
°                                                     Issue 1, date
°                                                 TSSO User's Guide
¸
° Using the WRITE Statement in TSSO CLISTs

° In previous releases of TSSO, operator commands  and  highlighted
° messages  could only be issued using the WRITE statement with the
° *COM and *HI keywords.  These facilities still work under release
° 4.2, and CLISTs written with them can be used  unaltered.    How-
° ever,  note  that the difference between these facilities and the
° commands OSCMD, OSWTO, OSWTOH, and OSPAUSE is that TSSO processes
° *COM and *HI directives after the CLIST  has  completed,  whereas
° the TSSO commands will be executed immediately.  Care must there-
° fore  be taken in designing CLISTs with *COM and *HI, because any
° TSO commands in the CLIST are executed before  any  MVS  commands
° are issued by TSSO.

° The   *COM   and   *HI  facilities  are  available  only  through
° TSSO-initiated CLISTs.

° *COM Keyword

° The *COM keyword used in the WRITE statements also enables you to
° issue MVS commands.  When an output line in the  SYSTSPRT  output
° stream (the output from the TSO command or CLIST) begins with the
° keyword "*COM", TSSO will execute the remainder of that statement
° as  an  MVS operator command.   The syntax of this extended WRITE
° statement is

°      WRITE *COMnnn oscmd

°      where

°      nnn     is a delay factor directing TSSO to delay  nnn  sec-
°              onds  after  processing the command.  This is useful
°              when operating system commands have a  time  depend-
°              ency on each other.

°      oscmd   is an MVS operator command to be executed.  The com-
°              mand  could  be an MVS command, JES command, or even
°              another TSSO command.  Note that the command will be
°              executed with the authority of the console that ori-
°              ginally invoked the TSSO command.

° *HI Keyword

° The *HI keyword allows you to write highlighted messages  on  the
° MVS console.  The syntax is

°      WRITE *HI message

° where  message  is  the message to be highlighted on the MVS con-
° sole.
°                                                                19
¯
° TRS-85-xx
° Issue 1, date
° TSSO User's Guide
¸
° Example

°         PROC 0
°         /*********************************************************/
°         /* This CLIST will bring up the system address           */
°         /* spaces related to VTAM. Note that delays are used to  */
°         /* achieve proper timing                                 */
°         /*********************************************************/
°         WRITE *COM30 S NETWORK    /* START THE NETWORK           */
°         WRITE *COM3 S TSO         /* START TCAS                  */
°         WRITE *COM $SLOGON1
°                                   /* NOTE THAT COMMENTS CANNOT BE*/
°                                   /* PLACED ON THE SAME LINE AS  */
°                                   /* JES2 COMMANDS               */
°         EXEC 'SYS1.TSSOPROC(SLINES)' /* START JES2 LINES         */
°         WRITE *HI TSSN001I NETWORK INITIALIZED
°                                      /* SEND MSG TO CONSOLE      */
°                                      /* AND HILIGHT IT           */
°         EXIT

° Guidelines and Suggestions for Writing CLISTs

° 1.  CLISTs can be used to write operator HELP procedures  to  the
°     MVS console.  This is demonstrated in the following CLIST.

°             PROC 0
°             /********************************************************
°             /* This CLIST will provide HELP information to the      *
°             /* operator on the current status of the NJE LINES      *
°             /* between JES2 systems                                 *
°             /********************************************************
°             WRITE NJE LINK BETWEEN A and B is line 12
°             WRITE NJE LINK BETWEEN A and C is line 16
°             WRITE NJE LINK BETWEEN B and C is line 20
°             WRITE NJE LINK BETWEEN C and A is line 19
°             WRITE NJE LINK BETWEEN C and B is line 24
°             WRITE NJE LINK BETWEEN B and A is line 13
°             WRITE
°             WRITE This list is current as of January 3, 1985. For mor
°             WRITE assistance, contact Alan Grossman at extension 5555
°             EXIT CODE(0)

° 2.  The REPLY command is useful in CLISTS to automate operational
°     procedures  with  products  that  communicate to the operator
°     through the WTOR interface (e.g., NCCF and IMS).   For  exam-
°     ple,  if numerous NCCF commands are to be executed, these can
°     be executed in a TSSO CLIST using the REPLY command with mes-
°     sage ID DSI802A. See the description of the REPLY command  in
°     Appendix A.

° 20
¯
°                                                         TRS-85-xx
°                                                     Issue 1, date
°                                                 TSSO User's Guide
¸
° 3.  Comments may be placed at the end of MVS commands because MVS
°     treats  them  as  MVS command comments.  However, JES2 treats
°     CLIST comments as data and tries to use them in  forming  the
°     command.  Therefore, do not place CLIST comments on JES2 com-
°     mands;  place  them  on the lines following the command.  For
°     example, the following CLIST  is  invalid  because  it  would
°     produce an invalid JES2 command.

°             PROC 0
°             WRITE *COM $TEXIT6,ENABLE  /* ENABLE THE EXIT */
°             EXIT

°     This  situation  is remedied in MVS/SP JES2 Release 1.3.6 and
°     MVS/XA JES2 Release 2.1.5.  The example on page x shows  com-
°     ments for both MVS and JES2 commands.

° 4.  Symbolic substitution can be used in TSSO CLISTS as shown be-
°     low.

°             PROC 2 UNIT VOLSER USE()
°             /*****************************************/
°             /* This CLIST will mount MVS volumes     */
°             /* using a command in operator friendly  */
°             /* syntax. Note the optional PUBLIC      */
°             /* parameter.                            */
°             /*****************************************/
°             WRITE *COM3 VARY &UNIT,ONLINE
°             IF &USE = THEN +
°             DO
°               WRITE *COM MOUNT &UNIT,VOL=(SL,&VOLSER)
°             END
°             ELSE +
°             DO
°               WRITE *COM MOUNT &UNIT,VOL=(SL,&VOLSER),USE=&USE
°             END
°             WRITE *HI MNT001I VOLUME &VOLSER NOW MOUNTED ON &UNIT
°             WRITE *COM D U,,,&UNIT,1
°             EXIT

° 5.  Since operations personnel will be using OPF, the recommenda-
°     tion is to allow them to write their own CLISTS.

° 6.  TSSO CLISTS are invoked in the same fashion as TSSO commands.
°     The  normal  TSO search sequence is followed. The recommenda-
°     tion is to allocate a SYS1.TSSOPROC data set and allocate  it
°     to  DDNAME SYSPROC in the TSSO bringup deck. The SYSPROC data
°     set may also be dynamically allocated through the  TSO  ALLO-
°     CATE command. Lastly, the TSO EXEC command may be used to ex-
°     ecute TSSO CLISTS.

°                                                                21
¯
° TRS-85-xx
° Issue 1, date
° TSSO User's Guide
¸
° 7.  Use  OSWTOH and WRITE *HI with caution. Do not highlight mes-
°     sages unless their importance warrants it, because your oper-
°     ations staff will learn to ignore highlighted  messages,  and
°     this can be harmful to your overall system operations.
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸

° 22
¯
°                                                         TRS-85-xx
°                                                     Issue 1, date
°                                                 TSSO User's Guide
¸
° TSSO AUTOMATED OPERATIONS FACILITY

° INTRODUCTION

° A  high percentage of MVS commands are issued in response to sys-
° tem or subsystem messages, and these responses are  predetermined
° by  the  contents of the messages.  The TSSO Automated Operations
° Facility (AOF) frees the MVS console operator from routine  tasks
° by  automating  responses  to  system messages.   AOF is a table-
° driven monitor that intercepts messages and carries  out  one  of
° four  actions:  suppresses, highlights, or lowlights the message;
° or issues an MVS, JES2 or subsystem command.   Because  AOF  does
° not require the services of the TSSO address space, any number of
° messages can be processed simultaneously.

° There are three steps required to install this facility; briefly:

° 1.  Create the AOF table.

° 2.  Assemble and link-edit the table into load module format.

° 3.  Store the module in SYS1.TSSOLOAD.

° These steps are described in detail below.

° Note  that  the  table can be updated at any time.  Also, you may
° create multiple tables, although only one  can  be  active  at  a
° time.    Multiple  tables may be useful so that different sets of
° commands can be used at different times (e.g., first, second  and
° third shifts).  You can change the active table in two ways:

° 1.  By  changing  the TABLE= parameter in the parameter deck; the
°     new table will be available the next time TSSO is brought up.

° 2.  By dynamically reloading the table with the  "#.RELOAD"  com-
°     mand; the new table will be available immediately.

° CREATING THE AOF TABLE

° There are three macros required to create the table:  TABSTART to
° start  the  table,  TABENTRY  to specify actions on messages, and
° TABEND to end the table.

° TABSTART is always the first macro  and  can  be  specified  only
° once.  It takes the form

°      loadname TABSTART ID=table-id

°                                                                23
¯
° TRS-85-xx
° Issue 1, date
° TSSO User's Guide
¸
° where  loadname is the name of this TSSO table and table-id is an
° eye-catching name to identify the table in a dump.  table-id will
° also be displayed on the DISPAOF and .QT commands.  The  loadname
° label is used as the CSECT name and must be used as the load mod-
° ule name.

° TABEND is always the last macro, signifying the end of the table.
° TABEND  must be present; otherwise, unpredictable things may hap-
° pen, none of them pleasant.

° TABENTRY  macros  are  entered  between  TABSTART   and   TABEND.
° TABENTRY  macros  generate  entries in the AOF table and take the
° form

°      TABENTRY MSG=msg-id,ACTION=action
°                 {,TEXT='operator-cmd'}
°                 {,TEXT=(condition)}
°                 {,MATCHLIM=n}
°                 {,ECHO={YES/NO/LOG}}

° A sample AOF table, demonstrating most  of  the  capabilities  of
° TSSO/AOF  and  all  forms  of  the  TABENTRY  macro,  is  in  the
° TSSO.VERS42.ASM data set in member AOFIVP.

° TABENTRY OPERANDS

° The MSG Operand

° MSG identifies an MVS, JES2, or subsystem message as  defined  in
° MVS/XA  System  Messages  (GC28-1376  and  -1377)  or its MVS/370
° equivalent.  msg-id is the first seven or eight characters of the
° console message.  msg-id may also be an asterisk (*), which  will
° match on all console messages.  MSG=* is useful with the TEST op-
° erand described later.

° The ACTION Operand

° The  following actions may be taken in response to the identified
° message:

° 1.  Suppress (i.e., do not print) the  message  at  the  console.
°     The macro takes the form

°     TABENTRY MSG=msg-id,ACTION=SUPPRESS

° 2.  Highlight  the  message  at the console.   This is useful for
°     highlighting important messages.  The macro takes the form

°     TABENTRY MSG=msg-id,ACTION=HILIGHT
° 24
¯
°                                                         TRS-85-xx
°                                                     Issue 1, date
°                                                 TSSO User's Guide
¸
° 3.  Lowlight the message at the console.  This reverses  the  in-
°     tensity  of  MVS messages that are automatically highlighted.
°     The macro takes the form

°     TABENTRY MSG=msg-id,ACTION=LOWLIGHT

° 4.  Reply to a Write to Operator with Reply (WTOR) message.   The
°     macro takes the form

°     TABENTRY MSG=msg-id,ACTION=REPLY,TEXT='reply-text'

°     where reply-text is the text of the reply; TSSO will automat-
°     ically format the reply message as R msg-no,reply-text.  Note
°     that msg-id must be a WTOR message.

° 5.  Issue  an  operator  command in response to a message and ex-
°     tract part of the message to use in the command.   The  macro
°     takes the form

°     TABENTRY MSG=msg-id,ACTION=OSCMD,TEXT='operator-cmd'

°     operator-cmd  can  be an MVS command, JES2 command, TSSO com-
°     mand, or TSSO CLIST.   Rules for coding  TEXT  are  described
°     later.

° 6.  Print  an operator command at the console rather that execute
°     it. This allows you to test an operator command that  results
°     from  a  TABENTRY  before executing it.   The macro takes the
°     form

°     TABENTRY MSG=msg-id,ACTION=OSCMDT,TEXT='operator-cmd'

°     The rules are the same as for OSCMD above.

° 7.  Carry out the specified action if and  only  if  the  message
°     meets  certain  conditions, such as matching a particular job
°     name.  To do this, include the TEST operand in your  TABENTRY
°     macro as follows:

°     TABENTRY MSG=msg-id,ACTION=action
°                     TEST=(condition)
°                     {TEXT='operator-cmd'}

°     where condition tests portions of the message by substring or
°     word.  Rules for coding the TEST operand are described later.

°     NOTE:  TEXT  can only be used if ACTION=OSCMD, OSCMDT, or RE-
°            PLY.

°                                                                25
¯
° TRS-85-xx
° Issue 1, date
° TSSO User's Guide
¸
° There is no limit on the number of TABENTRY macros  that  may  be
° specified  in  a given AOF table. Note that TSSO will process all
° of the entries in the TSSO/AOF table for every WTO or  WTOR  mes-
° sage.   This implies that multiple ACTION= operands may be speci-
° fied for the same msg-id, by specifying multiple TABENTRY macros.
° TSSO does not stop after processing one  ACTION=  directive,  but
° continues until the end of the table.

° The TEXT Operand

° The  OSCMD action allows you to specify an operator command to be
° performed in response to a particular message.   Optionally,  you
° may  select one or more portions of the message to include in the
° command.  This is useful for extracting  a  data  set  name,  job
° name,  or other variable information from a message and embedding
° it in the command to be executed.  The two formatting options  in
° the  TEXT parameter allow you to extract this information by sub-
° string or by word.

° To select information by substring, use the format

°      \Snnn,yy\

° where nnn is the starting character position and yy is the number
° of characters to select.  For example, suppose you want to record
° the text of /*MESSAGE cards whenever they are encountered in  the
° job stream.  JES2 issues a $HASP104 message, and you want to cap-
° ture  characters  1  through  72 of the card.  Thus, the TABENTRY
° would look like this:

°      TABENTRY MSG=$HASP104,ACTION=OSCMD,TEXT='#RECMSG MSG(''\S001,72\

° Note that nnn must be left-padded with zeroes.

° To select information by word, use the format

°      \Wabcdnn\

° where a, b, c, and d define the word separator characters, and nn
° identifies the word's position.  A word can be a  maximum  of  16
° characters.  For example, given the message

°      IEF176I WTR 1A4 WAITING FOR WORK ...

° you might want to purge the writer 1A4 with the command

°      PURGE 1A4
¸
° 26
¯
°                                                         TRS-85-xx
°                                                     Issue 1, date
°                                                 TSSO User's Guide
¸
° To  do this, you want to extract the third word from the message,
° which identifies the external writer name.   Thus,  the  TABENTRY
° macro would look like this:

°      TABENTRY MSG=IEF176I,ACTION=OSCMD,TEXT='PURGE \W    03\'

° Note that if you do not need to define four separator characters,
° you must pad the field with blanks.  Also, nn must be left-padded
° with a zero.

° Multiple "S" and "W" options can be used in one TEXT operand.  If
° AOF  detects an error in the TEXT parameter as a result of a S or
° W option, a message is issued and processing is terminated.

° The TEST Operand

° The TEST operand allows you to respond selectively to messages by
° "testing" the text.  For example, when payroll jobs complete, you
° may want to highlight the message, whereas  you  want  to  ignore
° other  job  completion messages.   The TEST operand allows you to
° match on message text by substring or word.

° To match by substring, use the format

°      (S,nnn,yy,'literal-string')

° where you want to find the character string literal-string start-
° ing in character position nnn for a length of yy characters.  For
° example, (S,32,07,'PAYROLL') would look for PAYROLL in  character
° positions 32 through 38.

° To match by word order, use the format

°      (W,nn,yy,'literal-string','abcd')

° where  you  want  to  find the character string literal-string as
° word number nn with a word length of yy characters; and a, b,  c,
° and  d  define  the  word  separator  characters.    For example,
° (W,03,07,'PAYROLL',', ') would look for PAYROLL as the third word
° with seven characters separated by blanks or commas.

° Thus, the whole TABENTRY macro for our example could be either

°      TABENTRY MSG=$HASP395,ACTION=HILITE,TEST=((S,32,07,'PAYROLL'))
° or
°      TABENTRY MSG=$HASP395,ACTION=HILITE,TEST=((W,03,07,'PAYROLL',' ,

° It is possible to test on all WTO or WTOR messages by  specifying
° MSG=*.   For example, if you want to highlight all JES end-of-day
° messages, you would test for a first word of $HASP and  a  second
°                                                                27
¯
° TRS-85-xx
° Issue 1, date
° TSSO User's Guide
¸
° word (i.e., job name) of ENDOFDAY.  The TABENTRY macro would look
° like this:

°      TABENTRY MSG=*,ACTION=HILIGHT,
°           TEST=((W,1,5,'$HASP',' '),(W,2,7,'ENDOFDAY',' '))

° Notes on the TEST Operand

° 1.    Each  TEST  condition, as well as the entire TEST parameter
°     list, must be enclosed in parentheses.

° 2.  There are multiple way to do the same test, as shown  in  the
°     examples  above.  However, it is generally easier to match on
°     words rather than substrings.

° 3.  "Logical and" and "logical or" test conditions  can  be  con-
°     structed with the TEST operand.

°     a.  To  construct a "logical and", specify all the conditions
°         to be met in one TEST operand:

°         TEST=((condition1),(condition2),(condition3))

°     b.  To construct a "logical or",  specify  multiple  TABENTRY
°         macros  with  the same MSG, ACTION, and TEXT operands but
°         with different TEST operands:

°         TABENTRY MSG=msg-id,ACTION=action,TEST=((condition1))

°         TABENTRY MSG=msg-id,ACTION=action,TEST=((condition2))

°         TABENTRY MSG=msg-id,ACTION=action,TEST=((condition3))

° 4.  When using the TEST operand, TABENTRY  macros  can  be  quite
°     lengthy.   To continue a macro on the next line, enter an "X"
°     in column 72.   Since the TABENTRY  macro  follows  the  con-
°     ventions  for  the IBM assembler language, the next line in a
°     continuation must start in column 16. Note that blank charac-
°     ters are not permitted, except if they are  inside  quotation
°     marks.

° The MATCHLIM Operand

° MATCHLIM  specifies  the  maximum  number  of  times a particular
° action can be executed during a  TSSO  session  (?).    When  the
° MATCHLIM value is exceeded, ?

° For example, if VTAM crashes you may want TSSO to issue a restart
° procedure immediately.

° 28
¯
°                                                         TRS-85-xx
°                                                     Issue 1, date
°                                                 TSSO User's Guide
¸
°      TABENTRY MSG=?,ACTION=OSCMD,TEXT=?

° You  may,  however,  want  to limit the number of restarts in the
° event VTAM has a serious problem that is not solved by a restart.

°      TABENTRY MSG=?,ACTION=OSCMD,TEXT=?,MATCHLIM=2

° The ECHO Operand

° Specifying ECHO=YES will echo the command or reply  of  the  TEXT
° operand to the console before the action is executed.  Specifying
° ECHO=LOG  will  echo the command or reply in the system log.  The
° default is ECHO=NO.

° ASSEMBLING AND LINK-EDITING THE TABLE

° Assemble and link edit your AOF table into load  module  form  by
° submitting   a   batch   job   similar   to  the  sample  in  the
° TSSO.VERS42.ASM data set, member ASMTABLE.  You may tailor a copy
° of this data set to your specifications as follows:

° 1.  Include the appropriate installation-dependent information on
°     the JOB card.

° 2.  Change the SYSIN DD card to point to your AOF table.

° 3.  Change the load library name in the LKED.SYSLMOD step to  one
°     of your choice. (Optional)

° 4.  Change the NAME statement in the linkage editor control cards
°     to match the label on the TABSTART macro in your AOF table.

° Note that the Assembler parameters RENT and NOALIGN must be pres-
° ent.

° A return code of 0 indicates that the assembly was successful.

° STORING THE MODULE

° When  the table assembly is successful, copy the load module from
° TSSO.VERS42.LOAD  (or  the  appropriate  data   set)   into   the
° SYS1.TSSOLOAD  data set.   To activate the new AOF table, use the
° procedures as described previously in this document.
¸

°                                                                29
¯
° TRS-85-xx
° Issue 1, date
° TSSO User's Guide
¸
° RECOVERY PROCEDURES

° TSSO operates as a proper subsystem under MVS. Because  of  this,
° it  can  run without support of a Job Entry Subsystem or communi-
° cations subsystem.  Therefore, TSSO will initialize even  if  JES
° or VTAM will not.  Through the use of several command processors,
° TSSO provides facilities for repairing critical MVS files or load
° modules in the event a subsystem does not initialize.

° The  EF  command  allows  the MVS console operator to perform TSO
° edit commands on the file allocated to DDNAME "EDITFILE".    This
° DDNAME  could  have  been pre-allocated through the ALLOCATE com-
° mand.  The syntax of the EF command is

°      EF (;cmd1;cmd2;cmd3...;cmdn)

° where cmd1 ...cmdn are TSO EDIT commands.

° The PDS command* allows you to rename, delete or otherwise manip-
° ulate  members of a partitioned data set.  The PDS command offers
° a wide range of facilities and can be used to recover from a  va-
° riety of subsystem problems.

° Lastly, you can also use the standard TSO facilities, such as the
° ALLOCATE  command,  to correct JCL or other initialization errors
° in major subsystems.  The full range of TSO commands  are  avail-
° able to assist in problem resolution.
¸
¸
¸
¸
¸
¸
° ¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿

° *A public domain  TSO  facility  written  by  Bruce  Leland  from
° Hitachi.
° 30
¯
°                                                         TRS-85-05
°                                                Issue 1, July 1985
°                                Appendix A. TSSO Command Reference
¸
° APPENDIX A. TSSO COMMAND REFERENCE

° This  appendix describes the TSO command processors that are dis-
° tributed with  TSSO.    Unless  otherwise  noted,  these  command
° processors can be issued by TSO users as well as the TSSO subsys-
° tem.    The  commands  are  documented one-to-a-page for easy in-
° sertion into existing operator procedure books.
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
°                                                              A-31
¯
° CACHE                       TRS-85-05                       CACHE
°                        Issue 1, July 1985
°                Appendix A. TSSO Command Reference
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸

° A-32
¯
° CACHE                       TRS-85-05                       CACHE
°                        Issue 1, July 1985
°                Appendix A. TSSO Command Reference
¸
° NAME:  CACHE

° AVAILABLE UNDER TSO:  Yes

° DESCRIPTION

°      The  CACHE  command  controls  the  operation  of   3880-11,
°      3880-21,  3880-13 or 3880-23 cache devices from the MVS con-
°      sole.  As distributed by IBM, software support for these de-
°      vices is contained in the IDCAMS program available with MVS;
°      the MVS console operator cannot control or  even  query  the
°      device.    The  CACHE command will format an IDCAMS command,
°      attach IDCAMS, and  write  the  results  using  the  PUTLINE
°      interface.    When issued under TSSO, these results are then
°      displayed on the MVS console.

° SYNTAX

°      CACHE cache-device {action} {SUBSYS} {LEGEND}

° PARAMETERS

°      cache-device   A 3-digit UCB address or a 6-character volume
°                     serial.

°      action         Action to be performed by the CACHE command:

°                     ON       Format the appropriate  IDCAMS  com-
°                              mand  (SETCACHE)  to  turn the cache
°                              unit on.

°                     OFF      Format the appropriate  IDCAMS  com-
°                              mand  (SETCACHE)  to  turn the cache
°                              unit off.

°                     LIST     Format a LISTDATA  command  to  list
°                              cache statistics (e.g., READ hit ra-
°                              tio).

°                     STATUS   (default)  Provide  information con-
°                              cerning the current  status  of  the
°                              cache device.
¸

°                                                              A-33
¯
° CACHE                       TRS-85-05                       CACHE
°                        Issue 1, July 1985
°                Appendix A. TSSO Command Reference
¸
°      SUBSYS         Provide  information about the entire 3350 or
°                     3380 string.

°      LEGEND         Provide a verbose description of  the  format
°                     of  the IDCAMS output.  (This is probably in-
°                     appropriate for display at the console.)

° Issuing Other Commands through IDCAMS with CACHE

°      There are some commands that you may want to  issue  to  the
°      cache  controller  through  IDCAMS that are not supported by
°      this command.  For these occasions, an alternate form of the
°      CACHE command is provided.

°           CACHE * CMD('idcams-cmd')

°      where idcams-cmd is any command accepted by  IDCAMS.    This
°      can  be a cache command, such as BINDDATA, or a command that
°      has nothing to do with cache devices, such as LISTC.

° EXAMPLES

°      Example 1.  Turn on the cache device for the volume  at  UCB
°                  263.

°                  CACHE 263 ON

°      Example 2.  Turn off volume JESSPL to the cache device.

°                  CACHE JESSPL OFF

°      Example 3.  Turn volume PGMPRO on to the cache device.

°                  CACHE PGMPRO ON

°      Example 4.  Print  status  information  for the cache device
°                  covering volume PGMPRO.

°                  CACHE PGMPRO

°      Example 5.  Print status information for all volumes covered
°                  by the cache device covering volume PGMPRO.
¸
° A-34
¯
° CACHE                       TRS-85-05                       CACHE
°                        Issue 1, July 1985
°                Appendix A. TSSO Command Reference
¸

°                  CACHE PGMPRO SUBSYS

°      Example 6.  Print statistics for the  cache  device  at  UCB
°                  265.

°                  CACHE 265 LIST

°      Example 7.  Issue  the  IDCAMS  LISTC command and return the
°                  reply to the invoking console.

°                  CACHE * CMD('LISTC')
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
°                                                              A-35
¯
° CPCMD                       TRS-85-05                       CPCMD
°                        Issue 1, July 1985
°                Appendix A. TSSO Command Reference
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸

° A-36
¯
° CPCMD                       TRS-85-05                       CPCMD
°                        Issue 1, July 1985
°                Appendix A. TSSO Command Reference
¸
° NAME:  CPCMD

° AVAILABLE UNDER TSO:  Yes

° DESCRIPTION

°      The CPCMD command allows the MVS operator of a  virtual  ma-
°      chine  to  issue  CP commands on a VM/SP, VM/SP HPO or VM/XA
°      system.   Any CP command of  the  appropriate  CP  privilege
°      class  is allowed.   The response of the command is returned
°      to the invoking console.  Note that this command  will  also
°      function under TSO and return the response to the CP command
°      to the invoking TSO user.

° SYNTAX

°      CPCMD cp-cmd

° PARAMETERS

°      cp-cmd    Any VM CP command.

° EXAMPLES

°      Example 1.  Issue  the CP QUERY NAMES command and return the
°                  response to the invoking console.

°                  CPCMD QUERY NAMES

°      Example 2.  Direct VM to attach the device  at  3F0  to  the
°                  virtual  machine configuration at virtual device
°                  3F0.

°                  CPCMD ATTACH 3F0 * 3F0

°                  Note that the device must also be varied on-line
°                  by the MVS operator.   The MVS  virtual  machine
°                  would  need command privilege class "B" to issue
°                  this command.
¸
¸
°                                                              A-37
¯
° DISPAOF                     TRS-85-05                     DISPAOF
°                        Issue 1, July 1985
°                Appendix A. TSSO Command Reference
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸

° A-38
¯
° DISPAOF                     TRS-85-05                     DISPAOF
°                        Issue 1, July 1985
°                Appendix A. TSSO Command Reference
¸
° NAME:  DISPAOF

° AVAILABLE UNDER TSO:  Yes

° DESCRIPTION

°      The DISPAOF command displays the contents of TSSO/AOF tables
°      which control the operation of the TSSO Automated Operations
°      Facility.  The DISPAOF command can query either  the  active
°      TSSO/AOF table or a table that has been assembled and is re-
°      siding  on  DASD.   By default, DISPAOF will display all en-
°      tries in  the  running  TSSO/AOF  table.    The  information
°      displayed  includes  the  TSSO/AOF table name, ID parameter,
°      date and time assembled, and TSSO version number.  For  each
°      message  displayed,  the  table entry number, MSG ID, ACTION
°      directive and ACTION TEXT will be displayed.    TEST  condi-
°      tions  will  not  be  displayed unless the TEST parameter is
°      specified.  Optionally, the display can be  limited  to  se-
°      lected message IDs.

°      Information about alternate TSSO/AOF tables can be displayed
°      by  using  the table-name parameter.   Alternate tables must
°      previously have been assembled and placed  (in  load  module
°      form) into the SYS1.TSSOLOAD dataset.

° SYNTAX

°      DISPAOF {ENTRY(entry-id)}
°      {MSG(msg-id)} {TABLE(table-name)} {TEST}

° PARAMETERS

°                          The entry number of the AOF table macro.

°      MSG(msg-id)         A  1-  to 8-character message identifier
°                          specified in the TSSO/AOF TABENTRY macro
°                          MSG parameter.

°      TABLE(table-name)   An alternate TSSO AOF table name.    The
°                          table  must  previously have been assem-
°                          bled and available to TSSO.

°      TEST                For each message, display any TEST  con-
°                          ditions that exist.
¸
°                                                              A-39
¯
° DISPAOF                     TRS-85-05                     DISPAOF
°                        Issue 1, July 1985
°                Appendix A. TSSO Command Reference
¸
° EXAMPLES

°      Example 1.  Display the running TSSO/AOF table with all mes-
°                  sage IDs, action directives, and action text.

°                  DISPAOF

°      Example 2.  Display  all entries in the running TSSO/AOF ta-
°                  ble with a message ID of $HASP395.

°                  DISPAOF MSG($HASP395)

°      Example 3.  Display all entries and all test  conditions  in
°                  the running AOF table for message ID $HASP350.

°                  DISPAOF MSG($HASP350) TEST

°      Example 4.  Display  all entries and all test conditions for
°                  message IKT021D in load module AOFNEW.

°                  DISPAOF MSG(IKT021D) TABLE(AOFNEW) TEST

°      Example 5.  Display the third entry in the active AOF table.

°                  DISPAOF ENTRY(3)
¸
¸
¸
¸
¸
¸
¸
¸

° A-40
¯
° LINKLIST                    TRS-85-05                    LINKLIST
°                        Issue 1, July 1985
°                Appendix A. TSSO Command Reference
¸
° NAME:  LINKLIST

° AVAILABLE UNDER TSO:  Yes

° DESCRIPTION

°      The LINKLIST command displays the list of the data  sets  in
°      the  current MVS LNKLST concatenation.  This command is only
°      valid in an MVS/XA environment, because the  information  is
°      not available in MVS/370.

° SYNTAX

°      LINKLIST
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸

°                                                              A-41
¯
° OSASK                       TRS-85-05                       OSASK
°                        Issue 1, July 1985
°                Appendix A. TSSO Command Reference
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸

° A-42
¯
° OSASK                       TRS-85-05                       OSASK
°                        Issue 1, July 1985
°                Appendix A. TSSO Command Reference
¸
° NAME:  OSASK

° AVAILABLE UNDER TSO:  Yes

° DESCRIPTION

°      OSASK  allows  you  to ask the operator a question and get a
°      response.  If it is issued from a TSO command line, the  re-
°      sponse  goes to the user's terminal.  If it is issued from a
°      CLIST, the response goes to CLIST variables (see below).

° SYNTAX

°      OSASK question

° PARAMETERS

°      question    Question to be sent to the operator's console.

° CLIST VARIABLES

°      Variable    Definition

°      REPLYWAIT   The number of seconds you are  willing  to  wait
°                  for  a  reply  to  the question.   This can be a
°                  value from 1 to 60; default is 60.

°      REPLY       Text of the reply to the question.

°      REPLYW      The number of words in the operator's reply.

°      REPLYWn     The nth word of the reply.

° EXAMPLES

°      Example 1.
¸
¸

°                                                              A-43
¯
° OSCMD                       TRS-85-05                       OSCMD
°                        Issue 1, July 1985
°                Appendix A. TSSO Command Reference
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸

° A-44
¯
° OSCMD                       TRS-85-05                       OSCMD
°                        Issue 1, July 1985
°                Appendix A. TSSO Command Reference
¸
° NAME:  OSCMD

° AVAILABLE UNDER TSO:  Yes

° DESCRIPTION

°      OSCMD allows you to  issue  any  MVS  command  (JES2,  VTAM,
°      etc.).    If  it is issued from a TSO commmand line, the re-
°      sponse is returned to the terminal.  If it is issued from  a
°      CLIST, the response goes to the CLIST variables (see below).
°      Note that, when OSCMD is issued from a TSSO-initiated CLIST,
°      OSCMD  checks the authority of the invoking console and only
°      permits commands of that level.  When issued by a TSO  user,
°      OSCMD  checks  the  installation authority of the user's ID.
°      By default, all TSO users have INFO-only authority; full au-
°      thority can be granted on a per-user basis.

° SYNTAX

°      OSCMD mvs-cmd

° PARAMETERS

°      os-cmd      Any MVS command.

° CLIST VARIABLES

°      Input Variables    Definition

°      CMDWAIT=nn         Maximum number of second you are  willing
°                         to wait for the command to finish.  nn is
°                         a  value  from  1 to 60; default is 2 for
°                         nonCLIST execution.  If the CMDWAIT value
°                         is exceeded, the only  response  returned
°                         will be an echo of the original OSCMD.

°      MAXCMDOUT=nnn      Maximum  number  of lines of response you
°                         want returned from the command.  nnn is a
°                         value from 1 to 200; default is  200  for
°                         nonCLIST  execution.    If  the MAXCMDOUT
°                         variable is omitted, OSCMD will issue the
¸

°                                                              A-45
¯
° OSCMD                       TRS-85-05                       OSCMD
°                        Issue 1, July 1985
°                Appendix A. TSSO Command Reference
¸
°                         command and return immediately,  assuming
°                         that no response is desired.

°      Output Variable     Definition

°      CMDOUT              The number of lines returned by the mes-
°                          sage.

°      CMDOUTn             The nth line returned by the message.  n
°                          is  a  value  from  1 to 200; default is
°                          200.
°                          NOTE:  CMDOUT1 is always an echo of  the
°                          original command.

°      CMDOUTmW0           The number of words in the mth line.

°      CMDOUTmWn           The mth line, the nth word in the line.

° EXAMPLES

°      Example 1.
¸
¸
¸
¸
¸
¸
¸
¸
¸
° A-46
¯
° OSPAUSE                     TRS-85-05                     OSPAUSE
°                        Issue 1, July 1985
°                Appendix A. TSSO Command Reference
¸
° NAME:  OSPAUSE
¸
° DESCRIPTION

°      OSPAUSE  delays  processing  of  a command for the specified
°      number of seconds.  Uses?

° SYNTAX

°      OSPAUSE

° PARAMETERS

° EXAMPLES
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸

°                                                              A-47
¯
° OSWTO and OSWTOH            TRS-85-05            OSWTO and OSWTOH
°                        Issue 1, July 1985
°                Appendix A. TSSO Command Reference
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸

° A-48
¯
° OSWTO and OSWTOH            TRS-85-05            OSWTO and OSWTOH
°                        Issue 1, July 1985
°                Appendix A. TSSO Command Reference
¸
° NAME:  OSWTO and OSWTOH

° AVAILABLE UNDER TSO:  No

° DESCRIPTION

°      OSWTO and OSWTOH allow you to write messages to  the  opera-
°      tor's  console.   OSWTOH highlights the message.  These com-
°      mands can be issued only from a TSSO-initiated CLIST.

° SYNTAX

°      OSWTO message

°      OSWTOH message

° PARAMETERS

°      message     The text of the message to be sent to the opera-
°                  tor.

° EXAMPLES

°      Example 1.
¸
¸
¸
¸
¸
¸
¸

°                                                              A-49
¯
° REPLY                       TRS-85-05                       REPLY
°                        Issue 1, July 1985
°                Appendix A. TSSO Command Reference
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸

° A-50
¯
° REPLY                       TRS-85-05                       REPLY
°                        Issue 1, July 1985
°                Appendix A. TSSO Command Reference
¸
° NAME:  REPLY

° AVAILABLE UNDER TSO:  Yes

° DESCRIPTION

°      The REPLY command is used to reply to MVS WTOR messages  af-
°      ter  the  WTOR  has appeared on the MVS console.* You do not
°      need to know the MVS reply number to respond  to  the  WTOR.
°      The REPLY command can, therefore, be used to automate opera-
°      tional  procedures with products that communicate to the op-
°      erator through the WTOR interface (e.g., NCCF, IMS, GDDM).

° SYNTAX

°      REPLY MSG(msg-id) TEXT(reply-text)

° PARAMETERS

°      MSG(msg-id)       The  message  you  are  replying to (e.g.,
°                        DSI802A)

°      TEXT(reply-text)  The text of the reply you wish to give  in
°                        response to the WTOR.

° Notes on Using REPLY with IMS/VS

°      There  are  some installations that run multiple versions of
°      the IMS/VS program product.  All of the subsystems issue the
°      same message ID as a WTOR.  For these installations, an  al-
°      ternate form of the REPLY command is available to direct re-
°      plies to the correct IMS subsystem:

°           REPLY IMS(ims-id) TEXT(reply-text)
¸

° ¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿

° *Contrast this to the ACTION=REPLY directive in  TSSO/AOF,  which
° replies  to  messages  the  instant  they  are generated.   Thus,
° TSSO/AOF and the REPLY command combine to give full  coverage  on
° automating responses to MVS WTORs.
¸
°                                                              A-51
¯
° REPLY                       TRS-85-05                       REPLY
°                        Issue 1, July 1985
°                Appendix A. TSSO Command Reference
¸
°      where  ims-id  is the name of the IMS subsystem to which you
°      wish to direct the response, and reply-text  is  as  defined
°      above.  In this way IMS procedures can be automated.

° EXAMPLES

°      Example 1.  Shut down the NCCF program product.

°                  REPLY MSG(DSI802A) TEXT('CLOSE IMMED')

°      Example 2.  Reply to message USRWT01.

°                  REPLY MSG(USRWTO1) TEXT('DISPLAY FIELDS')

°      Example 3.  Issue the IMS command DISPLAY ACTIVE on IMS sub-
°                  system ZFF.

°                  REPLY IMS(ZFF) TEXT('/DIS A')

°      Example 4.  Issue  the IMS command NRESTART on IMS subsystem
°                  PRO.

°                  REPLY IMS(PRO) TEXT('NRE CHECKPOINT 0 FMT ALL')
¸
¸
¸
¸
¸
¸
¸

° A-52
¯
° SPMON                       TRS-85-05                       SPMON
°                        Issue 1, July 1985
°                Appendix A. TSSO Command Reference
¸
° NAME:  SPMON

° AVAILABLE UNDER TSO:  Yes

° DESCRIPTION

°      The SPMON command displays system  information  to  the  MVS
°      console operator.  By default SPMON will display the follow-
°      ing  information:   percentage of CPU busy, average Unrefer-
°      enced Interval Count (UIC), average paging rate,  number  of
°      TSO  users,  number  of started tasks, number of batch jobs,
°      and number of inactive initiators.  In addition, if  parame-
°      ters  are  specified to SPMON, the following job-related in-
°      formation is printed:  JOBNAME, number of service  units  in
°      current  transaction, swap-in/swap-out status, and number of
°      active frames in real storage.

° SYNTAX

°      SPMON  {job-parm {type-parm}}

° PARAMETERS

°      job-parm    A 1- to 8-character string for matching  on  job
°                  name,  or  "ALL"  to  display information on all
°                  jobs.

°      type-parm   This directs SPMON to  print  information  about
°                  selected  types  of jobs.   Legal values are JOB
°                  (?), STC (?), TSO (TSO users), or ALL (?).   De-
°                  fault is ALL.

° EXAMPLES

°      Example 1.  Display the general system information only.

°                  SPMON

°      Example 2.  Display  general  system  information as well as
°                  information on all jobs, TSO  users  or  started
°                  tasks that start with "BCR".

°                  SPMON BCR
¸
°                                                              A-53
¯
° SPMON                       TRS-85-05                       SPMON
°                        Issue 1, July 1985
°                Appendix A. TSSO Command Reference
¸
°      Example 3.  Display  general system information and informa-
°                  tion about all TSO users whose  user  IDs  begin
°                  with "PY".

°                  SPMON PY TSO
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
° A-54
¯
° VALLOC and VOLSER           TRS-85-05           VALLOC and VOLSER
°                        Issue 1, July 1985
°                Appendix A. TSSO Command Reference
¸
° NAME:  VALLOC and VOLSER

° AVAILABLE UNDER TSO:  Yes

° DESCRIPTION

°      The  VALLOC  and  VOLSER commands display UCB and ALLOCATION
°      information.  By default, the commands will display informa-
°      tion for the MVS SYSRES (IPL) device.  If a volume serial is
°      specified, the command will  locate  the  device  using  the
°      standard MVS UCBSCAN service and display the UCB address and
°      the UCB itself.* The command will also inform the MVS opera-
°      tor if the volume is not found.

° SYNTAX

°      VALLOC {volser}

°      VOLSER {volser}

° PARAMETERS

°      volser    A  6-character DASD volume identifier.

° EXAMPLES

°      Example 1.  Display the UCB address and allocation  informa-
°                  tion for volume PPBFX2.

°                  VALLOC PPBFX2
¸
° ¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿

° *The  commands use the TSSO "*COM" interface to issue appropriate
° MVS commands.  to display UNIT or ALLOCATION  information.    The
° VOLSER  command  issues the "D U,,,ucb-address,1" MVS system com-
° mand,     while     the     VALLOC     command     issues     the
° "D U,,ALLOC,ucb-address,1"  MVS  command.    Note that, when this
° command is issued under regular TSO, the  MVS  commands  are  not
° generated  and  the invoker of the command will see the formatted
° command including the *COM keyword.
¸
°                                                              A-55
¯
° VALLOC and VOLSER           TRS-85-05           VALLOC and VOLSER
°                        Issue 1, July 1985
°                Appendix A. TSSO Command Reference
¸
°      Example 2.  Display UCB information for the MVS SYSRES (IPL)
°                  pack.

°                  VOLSER

°      Example 3.  Display the UCB address for volume SYSRES.

°                  VOLSER SYSRES
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸

° A-56
¯
°                                                         TRS-85-05
°                                                Issue 1, July 1985
°                                 Appendix B. TSSO Control Commands
¸
° APPENDIX B. TSSO CONTROL COMMANDS

° TSSO  control  commands  are used to direct TSSO processing.  All
° such commands start with the TSSO  System  Recognition  Character
° (SRC).  The examples below assume that "#" is the TSSO SRC.

° Note  that  TSSO control commands may be treated exactly as other
° TSO commands when used in a TSSO CLIST.  For example, a CLIST may
° process directives and then issue a .RELOAD command to reload the
° TSSO/AOF table.  It is also possible for a CLIST  to  consist  of
° nothing  but TSSO commands. For example, a CLIST could be written
° to query all the TSSO parameters.

° GENERAL COMMANDS

° Various parameters of the TSSO subsystem can be queried using the
° #.Q family of commands.

° #.Q LOGON    Displays the console ID and the user ID of all  con-
°              soles logged on to TSSO.

° #.Q MAXCMD   Returns the value of the MAXCMDS parameter specified
°              at TSSO startup.

° #.Q MAXWTO   Returns  the value of the MAXWTO parameter specified
°              at TSSO startup.

° #.Q RACF     Returns the name of the TSSO RACF user identifier.

° #.Q SWAP     Indicates if TSSO is running non-swappable.

° #.Q T        Returns the name of the TSSO AOF table.   Additional
°              information  displayed  includes the value specified
°              on the ID parameter of the TABSTART  macro  and  the
°              date and time the AOF table was assembled.

° #.Q VERS     Displays  the TSSO Version identifier (TSSO 4.2) and
°              the date and times that the TSSO, TSSOWTO,  and  the
°              subsystem interface were last assembled.

° RESTRICTED COMMANDS

° The following commands are restricted to consoles with system au-
° thority.
¸
°                                                               B-1
¯
° TRS-85-05
° Issue 1, July 1985
° Appendix B. TSSO Control Commands
¸
° #.ABEND               Abnormally   terminates  the  TSSO  address
°                       space. This is a TSSO debugging  aid  which
°                       should not be used in normal operation.

° #.J                   Requests  a  job identification number from
°                       the primary subsystem.  This is required if
°                       TSSO will be using the primary  subsystem's
°                       services.    These services include submit-
°                       ting jobs (with the TSO SUBMIT command) and
°                       using the PRINTOFF command.   Note that  if
°                       TSSO  was  started using the "SUB=JES2" pa-
°                       rameter, this command will have no effect.

° #.LOGOFF              Logs off the console.

° #.LOGON user-id       Logs on the invoking console to TSSO.

° #.M                   Manipulates the  TSSO  debugging  facility.
°                       This  command  should  not  be  used  under
°                       normal circumstances.

° #.P                   Terminates the Time Sharing  Subsystem  Op-
°                       tion.  TSSO can be restarted through the "S
°                       TSSO" command as described on page x.

° #.RELOAD table-name   Loads  a TSSO Automated Operations Facility
°                       table identified by table-name.  If  table-
°                       name='NONE',  then  the AOF is deactivated.
°                       If an error occurs while processing the ta-
°                       ble, AOF is deactivated.   The most  common
°                       errors  include  table-name not being found
°                       and table-name not being a valid  TSSO  AOF
°                       table.
¸
¸
¸
¸
¸

° B-2
¯
°                                                         TRS-85-05
°                                                Issue 1, July 1985
°                               Appendix C. TSSO Processing Modules
¸
° APPENDIX C. SUMMARY OF TSSO PROCESSING MODULES

° TSSO        The  TSSO  mainline routine.   This module is invoked
°             when the MVS START command is issued for TSSO.

° TSSOSSSM    The TSSO subsystem support module.  This module  con-
°             tains  the subsystem interface routines and is LOADED
°             by TSSO.

° TSSOWTO     This module copies the SYSTSPRT file to the MVS  con-
°             sole  through the WTO macro.  It also issues the com-
°             mands specified through TSSO OPF.

° TSSOESTA    The TSSO ESTAE routine.   This module  is  loaded  as
°             part of TSSO startup.

° TSSOPARS    The TSSO parse routine used to parse PARMLIB input as
°             well  as  MVS  console messages in support of the "W"
°             formatting directive in AOF.

° JCECVT      The TSSO convert routine used to perform data conver-
°             sions.

° CACHE       The TSO CACHE command.

° LINKLIST    The TSO LINKLIST command.

°             REPLYLOA

° REPLY and   The TSO REPLY command and the module  it  loads  into
°             global storage.

° VALLOC      The TSSO VALLOC command.

° VOLSER      The TSSO VOLSER command.

° CPCMD       The TSSO CPCMD command.

° DISPAOF     The  TSSO DISPAOF command for displaying the contents
°             of AOF tables.

° SPMON       The TSSO SPMON command.

° EF          The TSSO EDIT facility command.

° MULT        The TSSO MULT command.
¸
°                                                               C-3
¯
° TRS-85-05
° Issue 1, July 1985
° Appendix D. Sample AOF Table
¸
° APPENDIX D. SAMPLE AOF TABLE

° This is the sample AOF table  distributed  with  TSSO  in  member
° AOFIVP of the TSSO.VERS42.ASM data set.

° *********************************************************************
° * THIS IS A SAMPLE AUTOMATED OPERATIONS FACILITY TABLE. IT IS USED AS
° * PART OF THE TSSO INSTALLATION VERIFICATION PROCEDURE. IT CONSISTS
° * OF A SUBSET OF ALL POSSIBLE ENTRIES IN A TSSO/AOF TABLE.
° *
° * THIS AOF TABLE CAN BE USED IN CONJUNCTION WITH THE AOF/IVP,
° * DISTRIBUTED WITH TSSO.
° *
° *
° *********************************************************************
° AOFIVP   TABSTART ID=IVPTABLE
° *********************************************************************
° * FIRST, A COUPLE OF REPLIES TO STANDARD ANNOYING MVS   MESSAGES.
° *********************************************************************
° *
° *********************************************************************
° * REPLY '' TO VTAM INITIALIZATION MESSAGE
° *********************************************************************
°          TABENTRY MSG=IST051A,ACTION=REPLY,TEXT=' '
° *
° *********************************************************************
° * REPLY 'SIC' TO TCAS TERMINATION MESSAGE
° *********************************************************************
°          TABENTRY MSG=IKT010D,ACTION=REPLY,TEXT='SIC'
° *********************************************************************
° * REPLY 'SIC' TO TCAS TERMINATION MESSAGE
° *********************************************************************
° *
°          TABENTRY MSG=IKT012D,ACTION=REPLY,TEXT='U'
° *********************************************************************
° * REPLY 'POST' TO IMS BRINGUP ON UCB MESSAGE
° *********************************************************************
° *
°          TABENTRY MSG=IEC804A,ACTION=REPLY,TEXT='POST'
° *
° *********************************************************************
° * THE NEXT ENTRY POINTS OUT THE HILIGHTING FEATURE. IEE704I IS THE
° * MESSAGE ID FOR   REPLY 05 IS NOT OUTSTANDING.
° *********************************************************************
¸

° D-4
¯
°                                                         TRS-85-05
°                                                Issue 1, July 1985
°                                      Appendix E. Sample AOF Table
¸
°          TABENTRY MSG=IEE704I,ACTION=HILIGHT
° *
° *********************************************************************
° * THE NEXT ENTRY DEMONSTRATES A POSSIBLE USE FOR THE OSCMD FEATURE.
° * IEE043I IS THE MESSAGE YOU GET WHEN A SYSTEM LOG DATASET IS QUEUE
° * TO A GIVEN OUTPUT CLASS. THE #LOGWTRR4 PROGRAM (OR CLIST) CAN BE
° * USED TO PROCESS THE LOG DATASET. THE XWTR PROC    CAN ALSO BE USED.
° * YOU CAN CAUSE THIS TO OCCUR BY ISSUING THE "W Z" COMMAND.
° *********************************************************************
°          TABENTRY MSG=IEE043I,ACTION=OSCMD,
°                TEXT='#LOGWTRR4'
° *
° *********************************************************************
° * WHEN THE LOGWTR PROGRAM TERMINATES, MESSAGE IEF176I IS ISSUED,
° * INDICATING THE LOGWTR IS LOOKING FOR WORK. HAVE TSSO PURGE IT OUT.
° * NOTE HOW IT USES THE DDD FROM THE MESSAGE TO FIGURE OUT WHAT TO
° * PURGE. NOTE THAT THIS WILL WORK FOR ANY EXTERNAL WRITER.
° * THIS IS AN EXAMPLE OF "WORD" FORMATTING IN THE TEXT= PARM.
° *********************************************************************
°          TABENTRY MSG=IEF176I,ACTION=OSCMD,
°                TEXT='P \\\\W    03\\\\'
° *
° *********************************************************************
° * THE NEXT EXAMPLE SHOWS POSITIONAL FORMATTING IN THE COMMAND TEXT.
° * THE $HASP104 MESSAGE IS ISSUED WHENEVER A //*MESSAGE CARD IS
° * ENCOUNTERED IN THE JOB STREAM. THE #RECMSG CLIST MEARLY RECORDS IN
° * A DATASET (USING CLIST OPENFILE/PUTFILE/CLOSFILE TECHNIQUES) THE
° * TEXT OF THE MESSAGE.
° *********************************************************************
°          TABENTRY MSG=$HASP104,ACTION=OSCMD,
°                TEXT='#RECMSG JOB(''\\\\P001,72\\\\'')'
° *
° *********************************************************************
° * ANOTHER EXAMPLE OF THE USE OF THE HILIGHTING FEATURE. HILIGHT THE
° * MESSAGE INDICATING THAT VTAM IS UP.
° *********************************************************************
°          TABENTRY MSG=IST020I,ACTION=HILIGHT
° *
° *********************************************************************
° * IN ADDITION TO  HILIGHTING THE VTAM INITIALIZATION MESSAGE, ISSUE
° * THE #VTAMR4 CLIST. THIS CLIST IS A OPERATOR CLIST THAT ISSUES
° * MVS START COMMANDS FOR VTAM DEPENDANT PROGRAM PRODUCT, LIKE NCCF
° * AND TSO.
° *
° *********************************************************************
°          TABENTRY MSG=IST020I,ACTION=OSCMD,TEXT='#VTAMR4'
° *
¸
°                                                               D-5
¯
° TRS-85-05
° Issue 1, July 1985
° Appendix D. Sample AOF Table
¸
° *********************************************************************
° * DSI802A IS THE NCCF MESSAGE SAYING THAT YOU CAN ISSUE A VALID NCCF
° * OPERATOR COMMAND. YOU DO NOT NEED TO KNOW THE MESSAGE NUMBER FOR
° * THIS COMMAND, BECAUSE YOU CAN REPLY TO IT USING THE REPLY COMMAND
° * SO WE LOWLIGHT THE MESSAGE, AND ALLOW IT TO ROLL OFF THE SCREEN.
° * THIS IS AN EXAMPLE OF THE LOWLIGHTING FEATURE.
° *********************************************************************
°          TABENTRY MSG=DSI802A,ACTION=LOWLIGHT
° *
° *********************************************************************
° * THIS IS AN EXAMPLE OF A SUPPRESS CONDITION. $HASP309 IS A MESSAGE
° * THAT JES2 ISSUES EVERY TIME AN INITIATOR GOES INACTIVE. THIS MESSAG
° * IS NOW SUPPRESSED.
° *********************************************************************
°          TABENTRY MSG=$HASP309,ACTION=SUPPRESS
° *********************************************************************
° * WE WILL NOW DISPLAY SOME OF THE POWER OF THE TEST CONDITIONS. THE
° * FOLLOWING DEMONSTRATIONS ALL TRAP THE $HASP395 JOB ENDED MESSAGE,
° * HOWEVER, THE ACTION= PARAMETER IS EXECUTED ONLY IF ALL CONDITIONS
° * FOR THE TESTS ARE MET. FOR EXAMPLE, OUR FIRST CASE WILL ONLY
° * HILIGHT THE MESSAGE IF THE JOB THAT HAS ENDED IS NAMED "PAYROLL".
° * THIS TEST CASE SPECIFIES THAT (1) WORDS ARE BEING TESTED, (2), THAT
° * IT IS THE SECOND WORD WE ARE INTERESTED IN, (3), WE ARE INTERESTED
° * THE FIRST SEVEN CHARACTERS OF THAT WORD, (4), WE WISH TO MATCH THE
° * STRING 'PAYROLL', AND      (5), WE WILL USE FOUR BLANKS AS THE
° * SEPARATOR CHARACTERS WHEN DEFINING A WORD.
° * NOTE THAT THE DOUBLE PARENTHESIS ARE REQUIRED.
° *********************************************************************
°          TABENTRY  MSG=$HASP395,ACTION=HILIGHT,
°                TEST=((W,2,7,'PAYROLL','    '))
° *
° *********************************************************************
° * THE NEXT ENTRY IS AN EXAMPLE OF A TEST CONDITION BASED ON SUBSTRING
° * OR COLUMNS. THE ENTRY WILL TRAP THE JES2 $HASP648 MESSAGE, WHICH IS
° * THE RESPONSE TO A $DU,STA. THIS ENTRY WILL SUPPRESS ALL LINES FROM
° * THE JES2 RESPONSE THAT ARE SNA LINES (COLS 20 THROUGH 22 = 'SNA'
° *
° *********************************************************************
°          TABENTRY  MSG=$HASP628,ACTION=SUPPRESS,
°                TEST=((S,20,3,'SNA'))
° *
° *********************************************************************
° * THE NEXT ENTRY IS AN EXAMPLE OF A LOGICAL AND CONDITION BETWEEN TES
° * CASES. BOTH CRITERIA MUST BE SATISFIED FOR THE TESTS TO PASS.
° * THE TEST CASE IS AN MVS/JES2 JOB,  AWAITING EXECUTION IN A CERTAIN
° * JOB CLASS. THIS ENTRY WILL TAKE A $DN COMMAND, AND ISSUE AN OSCMD
° * TO RAISE THE PRIORITY OF JOBS AWAITING EXECUTION IN CLASS 9 TO "15"
¸
° D-6
¯
°                                                         TRS-85-05
°                                                Issue 1, July 1985
°                                      Appendix E. Sample AOF Table
¸
° * (YES, I REALIZE THIS DOESN'T MAKE MUCH SENSE, BUT ITS GOOD FOR DEMO
° * PURPOSES).
° * NOTE THAT THE THIRD WORD IS CHECKED FOR "AWAITING" AND THE FOURTH
° * WORD IS CHECK FOR EXECUTION, AND THE FIFTH WORD IS THE JOB CLASS.
° * ALSO NOTE HOW THE SECOND WORD OF THE MESSAGE (THE JOB NAME) IS USED
° * IN FORMING THE TEXT= OPERAND. OSCMDT WILL BE USED SO THE COMMAND
° * DOESN'T ACTUALLY GET ISSUED.
° * NOTE ALSO THAT YOU DON'T NEED TO SPECIFY FOUR BLANKS- ONE IS
° * SUFFICIENT WHEN GENERATING TEST CASES.
° *********************************************************************
°          TABENTRY MSG=$HASP608,ACTION=OSCMDT,
°                TEXT='$T''\\\\W    02\\\\'',P=15',
°                TEST=((W,3,8,'AWAITING','  '),(W,4,9,'EXECUTION','
°                ,(W,5,1,'9',' '))
° *
° *********************************************************************
° * THE LAST CASE IS A GENERIC MESSAGE. THIS MESSAGE IS MATCHED BY
° * EVERY SINGLE WTO OR WTOR THAT COME ACROSS, EXCEPT IT MUST STILL
° * PASS THE TEST CONDITIONS. THIS EXAMPLE I WILL GIVE HILIGHTS ALL JES
° * MESSAGES CONCERNING JOB ENDOFDAY.THESE MESSAGES ALL START WITH
° * $HASP (WORD 1) AND CONTAIN THE JOBNAME IN WORD 2.
° *
° *********************************************************************
°          TABENTRY MSG=*,ACTION=HILIGHT,
°                TEST=((W,1,5,'$HASP',' '),(W,2,7,'ENDOFDAY',' '))
° *********************************************************************
° * THIS TABEND MACRO DEFINES THE END OF THE AUTOMATED OPERATIONS
° * FACILITY TABLE.
° *
° * DO NOT LEAVE THE TABEND MACRO OUT OF THIS ASSEMBLY.
° *
° *********************************************************************
°          TABEND
¸
¸
¸
¸
¸

°                                                               D-7
¯
° TRS-85-05
° Issue 1, July 1985
° Appendix E. AOF Text Processing Algorithm
¸
° APPENDIX E. TSSO/AOF - TEXT PROCESSING ALGORITHM

° This section descibes the algorithm used in forming the MVS oper-
° ator  commands  issued as a result of processing the ACTION=OSCMD
° directive under the TSSO Automated Operations Facility.

° Definition of Terms

°      action-text  is the parameter specified in the TEXT  operand
°                   of the TABENTRY macro.

°      WTOTEXT      is  the  text  of  the console message that was
°                   matched by the MSG  parameter.  Therefore,  the
°                   first  8  bytes of WTOTEXT must have matched an
°                   entry in the AOF table, as specified by the MSG
°                   parameter.

°      cmd-buffer   is the buffer that will be passed to MVS to  be
°                   executed as an operator command.

° Algorithm

° 1.  Copy  characters from action-text to cmd-buffer until no more
°     characters are found, or a "\\" is located.  The  "\\"  is  a
°     significance  indicator that indicates to AOF that characters
°     or words from WTOTEXT are to be copied.  When a  significance
°     indicator  is detected, go to step 2. When no more characters
°     remain in action-text, pass the command to MVS for processing
°     and terminate.

° 2.  The character after the significance indicator determines the
°     type of formatting to be performed. Two characters  are  per-
°     missible.  The  "S"  directive indicates substring formatting
°     and the "W" directive indicates word formatting. If the char-
°     acter is a "S", go to step 3; if the character is a  "W",  go
°     to step 4.

° 3.  To  use substring formatting, the syntax, including the lead-
°     ing "\\S" must be

°          \\Snnn,yy\\

°     where nnn are numeric characters that  specify  the  starting
°     position in WTOTEXT, and the yy indicates the number of char-
°     acters  starting  from  position nnn to copy into the command
°     buffer.   Thus, it is possible to  include  all  or  part  of
¸
° E-8
¯
°                                                         TRS-85-05
°                                                Issue 1, July 1985
°                         Appendix E. AOF Text Processing Algorithm
¸
°     WTOTEXT  in  the operator command to be issued.  For example,
°     if

°          \\S032,08\\

°     was coded, then character positions 32-39 of WTOTEXT would be
°     copied to cmd-buffer. The syntax for the substring  parameter
°     is  very  rigid.    Leading zeroes must be specified, and the
°     final "\\" must be present.  Processing continues at  step  1
°     with the character following the final "\\"

° 4.  A word is defined as a string of characters separated by sep-
°     arator characters. The maximum size of a word is 16 bytes. To
°     use the word formatting option, code

°          \\Wabcdnn\\

°     where  a,  b, c and d specify separator characters to be used
°     in the definition of a word, and nn is a numeric value  indi-
°     cating which word to use. The selected word is then copied to
°     cmd-buffer.  For example, if

°          \\W=,  03\\

°     were  coded,  it would be interpreted as word formatting with
°     the next four characters  "=", ",", " ", and " " used as word
°     separator characters.   In this example, the  third  word  is
°     copied  from  WTOTEXT  into cmd-buffer. The syntax of the "W"
°     directive if very strict. If you do not need  four  separator
°     characters, you must code blanks (as in the example). The nu-
°     meric specification must have two digits (including a leading
°     zero if required) and the terminating "\\" is required. Proc-
°     essing  continues at step 1, with the character following the
°     last "\\".  Note that a word is at  most,  16  characters  in
°     length, and is copied to cmd-buffer without leading or trail-
°     ing blanks.

° Note   that   the   formatting  options  are  available  only  if
° ACTION=OSCMD or ACTION=OSCMDT is specified.
¸
¸
¸

°                                                               E-9
¯
° TRS-85-05
° Issue 1, July 1985
° Appendix F. Sample Parameter Deck
¸
° APPENDIX F. TSSO SAMPLE PARAMETER DECK

° The parameter deck  shown  below  is  in  file  SAMPPARM  in  the
° TSSO.VERS42.ASM data set.
**************************************************************
*A TYPICAL TSSO PARAMETER DECK FOR A TYPICAL SYSTEM. THE     *
*ATION IS   IN "TSSO SYSTEM PROGRAMMERS GUIDE- RELEASE 4.2   *
*LUES SHOULD WORK AS DEFAULTS.                               *
**************************************************************
N
***************************************************
*L BE RUNNING NON-SWAPABBLE                       *
***************************************************
*
T4
***************************************************
*E NAME FOR TSSO AOF WILL BE AOFR4                *
***************************************************
*
RO
***************************************************
*L ASSUME A RACF USERID OF "TSSO" ON STARTUP      *
***************************************************
*
S
***************************************************
*AND RECOGNITION CHARACTER IS A POUND SIGN ('#')  *
***************************************************
*
M
***************************************************
*L HANDLE AT MOST 15 SIMULTANEOUS COMMANDS        *
***************************************************
*
M
***************************************************
*L ISSUE AT MOST 250 WTOS FOR ANY ONE COMMAND     *
***************************************************
*
P
***************************************************
*ROMPT THE MVS OPERATOR FOR ADDITIONAL TSSO       *
*RS                                               *
***************************************************
*
SF
**************************************************************
*RITY SYSTEM IN USE WILL BE THE RESOURCE ACCESS CONTROL      *
*.                                                           *
**************************************************************
*
SEDIAL
**************************************************************
*BE USING THE "MEDIAL" LEVEL OF SECURITY, REQURING ALL THAT  *
*OLES LOG ON PRIOR TO ISSUING ANY TSSO COMMANDS.             *
**************************************************************
*
S TSSOSS09
**************************************************************
*OSS09" ROUTINE, SUPPLIED WITH TSSO, WILL BE PROCESSING      *
*AND WTOR MESSAGES WHEN AOF IS ACTIVE. ANY OTHER SELECTION   *
*E TSSO TO FAIL.                                             *
**************************************************************
*
S= TSSOSS10
**************************************************************
*OSS10" ROUTINE, SUPPLIED WITH TSSO, WILL BE PROCESSING      *
*AND SUBSYSTEM COMMANDS. ANY OTHER SELECTION MAY MAKE TSSO   *
*                                                            *
**************************************************************
*
T30
**************************************************************
*ECLEVEL PARAMETER IS EVER SET TO "MAX", CONSOLES WILL TIME  *
*R THIRTY MINUTES OF INACTIVITY...                           *
**************************************************************
E
