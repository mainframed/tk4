***********************************************************************
*                                                                     *
*   FUNCTION -                                                        *
*                                                                     *
*     THIS PROGRAM READS AN ICF CATALOG AND PRODUCES A DATASET        *
*     WHICH WILL THEN ALLOW THE RELEVANT VOLUME CATALOG INFORMATION   *
*     TO BE SORTED REASONABLY ENABLING A MUCH MORE READABLE LISTING   *
*     TO BE OBTAINED INSTEAD OF IDCAMS.                               *
*                                                                     *
*     READ THE FIRST RECORD WITH A 44 BYTE KEY OF BINARY ZEROS        *
*     AND THEN CHANGE TO SEQUENTIAL PROCESSING-----WARNING :          *
*     IF YOU FIDDLE AROUND WITH THIS DO NOT FORGET TO TELL AMS        *
*     TO KEEP POSITIONING TRACK OTHERWISE YOU WILL GET THE SAME       *
*     RECORD OVER AND OVER AGAIN!!!!!!!!!!                            *
*                                                                     *
*     TO GET VSAM SPACE AND OTHER STATISTICS ANOTHER PROGRAM          *
*     WILL READ THE RELEVANT VVDS.  USE THIS PROGRAM AS AN AID        *
*     TO KEEP TRACK OF WHATS IN YOUR CATALOGS AND WHERE THE DATASETS  *
*     ARE LOCATED. USE THE OTHER PROGRAM FOR VSAM STATS.              *
*                                                                     *
*     WE MAY BE ABLE AT SOME FUTURE TIME TO ALSO INCLUDE CODE         *
*     FOR VSAM CATALOGS----IF YOU HAVE XA GET RID OF VSAM CATS        *
*     AS THEY ARE A NUISANCE --VSAM VOLUME OWNERSHIP ETC.             *
*                                                                     *
*     IF YOU HAVE DFEF OR MVS/370 DFP THE ABOVE ALSO APPLIES.         *
*                                                                     *
*     IN ORDER TO READ A CATALOG AS A DATASET                         *
*     AND BYPASS RACF AND/OR PASSWORD PROTECTION                      *
*     PROGRAM HAS TO BE IN SUPERVISOR STATE, PROTECT KEY 0 , OR       *
*     GET THERE BY BEING AUTHORIZED WITH MODESET. STICK THIS          *
*     PROGRAM IN AN AUTHORIZED LIBRARY OR GET AUTHORIZED BY USING     *
*     A MAGIC SVC AND SVC 109 IF YOU HAVE ONE.                        *
*                                                                     *
*     PLEASE NOTE : GDG CODE IS NOW INCLUDED.                         *
*     GDG DATASETS ARE ASSUMED TO BE NON VSAM DATA SETS               *
*                                                                     *
*                                                                     *
*     PROGRAM ICFLIST2 PRINTS THE DATASET PRODUCED BY THIS PROGRAM.   *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*/*****************************************************************/
*/*                                                               */
*/* PLEASE SEE MVS XA CATALOG DIAGNOSIS REFERENCE FOR LAYOUT      */
*/* OF ICF CATALOG SPHERE/CELL RECORDS DFP 5665-284               */
*/* MANUAL IS SY26-3897-1                                         */
*/*                                                               */
*/*                                                               */
*/*  IF YOU DO NOT HAVE XA YOU MUST HAVE EITHER MVS/370 DFP       */
*/*  OR DFEF TO USE ICF CATALOGS--THE RECORD LAYOUT IS THE SAME   */
*/*                                                               */
*/*  THE ICF CATALOG (BCS PART) GIVES US THE INFO ABOUT WHAT      */
*/*  OBJECTS ARE CATALOGUED IN IT AND WHAT ASSOCIATIONS IF ANY    */
*/*  THESE OBJECTS HAVE. TO GET THE ACTUAL DATA SET INFORMATION   */
*/*  I.E LRECL, HOW MANY EXTENTS ETC WE MUST THEN READ THE        */
*/*  VVR RECORD ON THE PRIMARY VOLUME OBTAINED FROM THE BCS       */
*/*  (SYS1.VVDS.VVOLSER).                                         */
*/*                                                               */
*/*  BE CAREFUL MOVING THE DATA AREAS AROUND---VSAM SEEMS TO      */
*/*  OVERLAY PART OF THE CODE IF THE WORK FIELDS ARE NOT PUT      */
*/*  AT THE BEGINNING OF THE PROGRAM.                             */
*/*                                                               */
*/*                                                               */
*/*                                                               */
*/*           MIKE HAWTHORNE   TTI 3100 OCEAN PK BVD              */
*/*                            SANTA MONICA                       */
*/*                            CALIF                              */
*/*                                                               */
*/*                                                               */
*/*****************************************************************/
         EJECT
//S6751MHQ JOB (2900),'MIKE HAWTHORNE',PERFORM=3,CLASS=W,
//  MSGCLASS=9,NOTIFY=S6751MH
//JOBLIB DD DSN=S6751MH.LOADLIB,DISP=SHR
//S0 EXEC PGM=IEFBR14
//DOG DD DSN=&&DOG,SPACE=(CYL,(1,1)),UNIT=SYSDA,   RAW DATA
//  DCB=(LRECL=140,BLKSIZE=1400),DISP=(,PASS)
//DOG2 DD DSN=&&DOG2,SPACE=(CYL,(1,1)),UNIT=SYSDA, IN CATALOG SEQ
//  DCB=(LRECL=140,BLKSIZE=1400),DISP=(,PASS)
//DOG3 DD DSN=&&DOG3,SPACE=(CYL,(1,1)),UNIT=SYSDA, IN DATASET SEQ
//  DCB=(LRECL=140,BLKSIZE=1400),DISP=(,PASS)
//DOG4 DD DSN=&&DOG4,SPACE=(CYL,(1,1)),UNIT=SYSDA, IN VOLUME SEQ
//  DCB=(LRECL=140,BLKSIZE=1400),DISP=(,PASS)
//DOG5 DD DSN=&&DOG5,SPACE=(CYL,(1,1)),UNIT=SYSDA, IN UCAT ALIAS SEQ
//  DCB=(LRECL=140,BLKSIZE=1400),DISP=(,PASS)
//S1    EXEC PGM=ICFLIST1
//STEPCAT DD DSN=CATALOG.CBSUSER1,DISP=SHR
//SYSUDUMP DD SYSOUT=9
//SEQDS DD  DSN=&&DOG,DISP=MOD,DCB=(BLKSIZE=1400)
//ICF  DD DSN=CATALOG.CBSUSER1,DISP=SHR
//SORT1    EXEC PGM=SORT
//SORTLIB DD DSN=SYS1.SORTLIB,DISP=SHR
//SYSOUT DD SYSOUT=9
//SORTIN  DD DSN=&&DOG,DISP=(OLD,PASS),DCB=(BLKSIZE=1400)
//SORTWK01 DD UNIT=SYSDA,SPACE=(TRK,(50),,CONTIG)
//SORTWK02 DD UNIT=SYSDA,SPACE=(TRK,(50),,CONTIG)
//SORTWK03 DD UNIT=SYSDA,SPACE=(TRK,(50),,CONTIG)
//SORTOUT  DD DSN=&&DOG2,DISP=(OLD,PASS)
//SYSIN  DD  *
 SORT  FIELDS=(97,22,A,7,1,D),FILSZ=E2000,FORMAT=CH,EQUALS
/*             BY CATALOG
//SORT2    EXEC PGM=SORT
//SORTLIB DD DSN=SYS1.SORTLIB,DISP=SHR
//SYSOUT DD SYSOUT=9
//SORTIN  DD DSN=&&DOG,DISP=(OLD,PASS),DCB=(BLKSIZE=1400)
//SORTWK01 DD UNIT=SYSDA,SPACE=(TRK,(50),,CONTIG)
//SORTWK02 DD UNIT=SYSDA,SPACE=(TRK,(50),,CONTIG)
//SORTWK03 DD UNIT=SYSDA,SPACE=(TRK,(50),,CONTIG)
//SORTOUT  DD DSN=&&DOG3,DISP=(OLD,PASS)
//SYSIN  DD  *
 SORT  FIELDS=(8,44,A),FILSZ=E2000,FORMAT=CH,EQUALS
/*             BY DATASET SEQUENCE
//SORT3 EXEC PGM=SORT
//SORTLIB DD DSN=SYS1.SORTLIB,DISP=SHR
//SYSOUT DD SYSOUT=9
//SORTOUT  DD DSN=&&DOG4,DISP=(OLD,PASS)
//SORTWK01 DD UNIT=SYSDA,SPACE=(TRK,(50),,CONTIG)
//SORTWK02 DD UNIT=SYSDA,SPACE=(TRK,(50),,CONTIG)
//SORTWK03 DD UNIT=SYSDA,SPACE=(TRK,(50),,CONTIG)
//SORTIN   DD DSN=&&DOG,DISP=(OLD,PASS)
//SYSIN  DD  *
 SORT  FIELDS=(1,6,A,8,44,A),FILSZ=E2000,FORMAT=CH,EQUALS
/*   BY VOLUME SEQUENCE
//SORT4 EXEC PGM=SORT
//SORTLIB DD DSN=SYS1.SORTLIB,DISP=SHR
//SYSOUT DD SYSOUT=9
//SORTOUT DD  DSN=&&DOG5,DISP=(OLD,PASS)
//SORTWK01 DD UNIT=SYSDA,SPACE=(TRK,(50),,CONTIG)
//SORTWK02 DD UNIT=SYSDA,SPACE=(TRK,(50),,CONTIG)
//SORTWK03 DD UNIT=SYSDA,SPACE=(TRK,(50),,CONTIG)
//SORTIN   DD DSN=&&DOG,DISP=(OLD,PASS)
//SYSIN  DD  *
 SORT  FIELDS=(53,44,A,6,1,A,8,44,A),FILSZ=E2000,FORMAT=CH
/*  RELATED CATS AND ALIASES
//STEP5  EXEC PGM=ICFLIST2
//SYSPRINT DD SYSOUT=9
//DCBIN DD DSN=&&DOG2,DISP=(OLD,PASS),DCB=(BLKSIZE=1400)
//DCBIN1 DD DSN=&&DOG3,DISP=(OLD,PASS),DCB=(BLKSIZE=1400)
//DCBIN2 DD DSN=&&DOG4,DISP=(OLD,PASS),DCB=(BLKSIZE=1400)
//DCBIN3 DD DSN=&&DOG5,DISP=(OLD,PASS),DCB=(BLKSIZE=1400)
//SYSUDUMP DD SYSOUT=9
/*
/*
