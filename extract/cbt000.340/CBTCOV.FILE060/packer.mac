**********************************************************************

      U I C C  P A C K L I S T  G E N E R A T O R

**********************************************************************

TRW DOCUMENTATION FOR THE UICC PACKER PROGRAMS FOLLOWS IMMEDIATELY AND
THE DOCUMENTATION SUPPLIED FROM UICC FOLLOWS THE TRW STUFF.

***********************************************************************


SOURCE   -   THE PACKER SOURCE MODULES ARE IN T63453.MVSUSER.SOURCE
             WITH THE FOLLOWING MEMBER NAMES:
                   PSWSAMP            PKLPAMAP (RENAMED FROM LPAMAP)
                   DIRECT             MODMAP
                   GENCNTS            OMFPST4
                   ANALYSIS

LOAD     -   PACKER LOAD MODULES ARE IN T63453.MVSUSER.LOAD AND
             HAVE THE SAME NAMES AS THE SOURCE MODULES.

PAKDATA  -   MEMBER PAKDATA OF T63453.MVSUSER.CNTL IS THE TRW OPTIONAL
             INPUT TO THE ANALYSIS POST PROCESSOR PROGRAM.

JCL      -   THREE EXAMPLES OF PACKER POST PROCESSOR JOBS USED AT TRW
             ARE STORED IN T63453.MVSUSER.CNTL.
                  1. PACKJCL1   2. PACKJCL2   3. PACKJCL3

PROC     -   THE PACKER STARTED TASK USED TO GATHER THE PSW SAMPLES
             IS NAMED PACKER AND IS LOCATED IN T63453.MVSUSER.CNTL.


**********************************************************************

THE FOLLOWING DOCUMENTATION HAS BEEN SUPPLIED BY UICC

**********************************************************************

          VERSION 3       7/20/77

  THIS SET OF PROGRAMS WILL PERFORM THE FOLLOWING FUNCTIONS:

     1. COLLECT PSW SAMPLES FOR ROUTINES IN THE LINK PACK
        AREA (PSWSAMP).  THIS IS NOT THE RECOMMENDED COLLECTION
        PROGRAM.  THE RECOMMENDED APPROACH IS USING YALE'S
        STATDIE AND OURMF PROGRAMS TO COLLECT THE DATA.  THESE
        ROUTINES DO A MUCH BETTER JOB AT LESS OVERHEAD AND
        COLLECT SUFFICIENT INFORMATION TO DO PROGRAM PACKING
        ALSO.

     2. MAP THE LINK PACK AREA AND PRODUCE A SEQUENTIAL FILE
        OF MODULE STARTING ADDRESSES AND LENGTHS (DIRECT).

     3. PSEUDO-MAP THE LINK PACK AREA FROM THE DIRECTORY OF
        THE PDS "SYS1.LPALIB" AND PRODUCE A SEQUENTIAL FILE
        OF MODULE PSEUDO-STARTING ADDRESSES AND LENGTHS (PKLPAMAP).

     4. PSEUDO-MAP A LOAD MODULE FROM THE CESD ENTRIES IN THE
        LOAD MODULE AND PRODUCE A SEQUENTIAL FILE OF CSECT
        RELATIVE STARTING ADDRESSES AND LENGTHS (MODMAP).

     5. TAKE INFORMATION COLLECTED FROM OURMF (CONTACT YALE)
        AND POST PROCESS IT BY LPA MODULE, PROGRAM MODULE, OR
        STRAIGHT LPA MAPPING FUNCTIONS (OMFPST4).  ONE COULD
        DO LPA MODULE PACKING BY USING THE OUTPUT OF PSWSAMP
        AND THE DIRECT PROGRAM, BUT THIS IS NOT SUPPLIED SINCE
        WE NOW DO OUR OWN SAMPLING VIA OURMF AND STATDIE.

     6. PRODUCE A FILE OF COUNTS PER CSECT OR MODULE FROM THE
        OUTPUT OF THE PSWSAMP ROUTINE OR THE OURMF POST PROCESSOR
        (OMFPST4).

     7. PRODUCE SYS1.PARMLIB(IEAPAK00) CONTROL CARDS OR LINKAGE
        EDITOR CONTROL CARDS TO REPACK THE MODULES IN THE LPA
        OR THE CSECTS IN A LOAD MODULE (ANALYSIS).

USER CONTROL INPUT:

  ONLY TWO OF THE ROUTINES HAVE CONTROLLING INPUT PARAMETERS:

  OMFPST4: INPUT SPECIFIED EITHER IN SYSIN OR IN PARM FIELD
   CONTROL OPERANDS ARE:

       START(YYDDD,HHMMSS)   STARTING DATE AND TIME
       END(YYDDD,HHMMSS)     ENDING DATE AND TIME
       HOURS(HHMMSS,HHMMSS)  TIME PERIOD DURING THE DAY

           AND ONE OF THE FOLLOWING PARAMETERS

       LPA(MAP)   PRODUCE OUTPUT FOR PACKING THE LPA
       PGM(PGMNAME)  PRODUCE OUTPUT FOR PACKING A PROGRAM
       MOD(MODULE)  PRODUCE OUTPUT FOR PACKING AN LPA MODULE

  ANALYSIS: INPUT SPECIFIED IN PARM FIELD
   CONTROL OPERANDS AREA:

       PACK      PRODUCE CARDS FOR "SYS1.PARMLIB(IEAPAK00)"
       LINK(MODULE)  PRODUCE CARDS FOR THE RE-LINK EDIT OF
                     THE SPECIFIED MODULE
   SYSIN INPUT TO ANALYSIS IS AS FOLLOWS:

    ZERO M1,M2,M3,...,MN  ZERO THE USE FACTORS FOR THE SPECIFIED
          MODULES/CSECTS.  USEFUL WHEN DECEPTIVELY HIGH COUNTS
          WOULD MISLEAD THE PACKING ALGORITHM.  WE USE IT
          TO ZERO COUNTS FOR THE ALTERNATE JES SSSM'S.

    EQUATE M1,M2,M3,...,MN  EQUATE THE USE FACTORS FOR THE SPECIFED
           MODULES/CSECTS.  USEFUL FOR PURE DATA MODULES WHICH WOULD
           NOT GET PSW SAMPLES.  THIS WAY THEY CAN BE ASSOCIATED
           WITH THEIR PROPER CODE MODULES.

    PACK M1,M2,M3,...,MN  PACK THE SPECIFIED MODULES/CSECTS TOGETHER.
           THE ANALYSIS PROGRAM DOES NO VALIDITY CHECKING OF THE
           MODULES (CONCERNING LENGTHS, ETC.) AND MERELY PRODUCES
           THE MODULES AS ONE PACK GROUP.  YOU SHOULD FOLLOW THE
           RULES SPECIFIED IN INITIALIZATION AND TUNING GUIDE
           FOR PACKING MODULES.  USEFUL FOR RMF AND MF1 SYSTEMS
           WHICH FIX MODULES WHEN THEY ARE RUNNING.

****************************************************************
OMFPST4 AND THE MODULE AND PROGRAM REPACKING FUNCTIONS OF THIS
PACKAGE REQUIRE THE YALE COLLEGE OURMF SYSTEM WRITTEN BY
      HOWARD GILBERT
      YALE COLLEGE
      175 WHITNEY AVE
      NEW HAVEN, CT 06520
      203 432-4080
****************************************************************

THERE ARE FOUR SETS OF JCL IN THE PACKAGE WHICH ARE:

    JCLBTAPE: BUILD A TAPE OF THE LPA DIRECTORY AND MODULE COUNTS
    JCLATAPE: ANALYSE THE TAPE WITH A CHANGED LPA TO PRODUCE NEW
              NEW PACKING CARDS (USEFUL WITH SELECTABLE UNIT OR
              PROGRAM UPTAPE TAPE INSTALLATIONS).
    JCLLPA: REPACK THE LPA
    JCLMOD: RELINK A PROGRAM OR MODULE WITHIN THE LPA

THE ORIGINAL IDEA OF THIS PACKAGE CAME FROM THE GERRARD BANK PACKER
PROGRAM, BUT WE HAVE PROGRESSED SIGNIFICANTLY PAST THOSE BEGINNINGS.

THIS PACKAGE WAS WRITTEN BY:

         BARRY SCHRAGER
         COMPUTER CENTER
         UNIVERSITY OF ILLINOIS AT CHICAGO CIRCLE
         BOX 4348
         CHICAGO, ILLINOIS 60680

         312 996-2478

**********************************************************************

THE FOLLOWING FOUR SETS OF JCL HAVE BEEN SUPPLIED BY UICC AND ARE
INCLUDED HERE AS UNMODIFIED EXAMPLES ONLY.


1. JCLATAPE

//PACKER JOB CLASS=U,TYPRUN=HOLD
//JOBCAT DD DSN=SYS1.NEWRES.CATALOG,DISP=SHR
/*MESSAGE     MOUNT -NEWRES- PACK
/*MESSAGE     MOUNT TAPE TP6322 RING/OUT
/*JOBPARM  T=5,L=10
//*
//LPAMAP  EXEC PGM=PKLPAMAP
//STEPLIB DD DSNAME=SYS1.UTILLIB,DISP=SHR
//DIRECT  DD UNIT=SYSDA,SPACE=(TRK,(5,5)),DSN=&DIRECT,
//           DCB=(RECFM=FB,LRECL=16,BLKSIZE=3664),DISP=(,PASS)
//LPALIB  DD DSNAME=SYS1.LPALIB,DISP=SHR
//*
//ANALYSIS EXEC PGM=ANALYSIS,PARM='/PACK'
//STEPLIB  DD DSNAME=SYS1.UTILLIB,DISP=SHR
//SYSPRINT DD SYSOUT=A
//DIRECT   DD DSNAME=&DIRECT,DISP=(OLD,DELETE)
//TAPE DD DSN=COUNTS,DISP=OLD,UNIT=TAPE,VOL=SER=TP6322,LABEL=3
//PAKLIST DD DSN=SYS1.PARMLIB(IEAPAK00),DISP=SHR
//SYSIN    DD DSNAME=UCC6064.$PUTCNTL.CNTL(PACKDATA),DISP=SHR

2. JCLBTAPE

//* THIS PROCEDURE BUILDS A TAPE FROM THE DATA PRODUCED
//* BY THE PACKER PSW COLLECTOR.  THE TAPE CAN BE USED
//* LATER TO REPACK THE LPA FOLLOWING PUT OR SU INSTALLATIONS.
//CRE EXEC PGM=DIRECT
//STEPLIB DD DSN=SYS1.UTILLIB,DISP=SHR
//DIRECT DD DSN=DIRECT,DISP=(,KEEP),UNIT=TAPE,
// VOL=(,RETAIN,SER=(TP6322))
//PSW EXEC PGM=IEBGENER
//SYSIN DD DUMMY
//SYSPRINT DD SYSOUT=A
//SYSUT1 DD DSN=UCC6007.PACKER.DATA,DISP=SHR
//SYSUT2 DD DSN=PSWSAMP,DISP=(,KEEP),UNIT=TAPE,
// VOL=(,RETAIN,SER=(TP6322)),
// DCB=(RECFM=FB,LRECL=4,BLKSIZE=3664),LABEL=2
//GENCNTS EXEC PGM=GENCNTS
//STEPLIB DD DSN=SYS1.UTILLIB,DISP=SHR
//SYSPRINT DD SYSOUT=A
//DIRECT DD DSN=DIRECT,DISP=OLD,UNIT=TAPE,
// VOL=(,RETAIN,SER=(TP6322))
//TAPE DD DSN=PSWSAMP,DISP=OLD,UNIT=TAPE,
// VOL=(,RETAIN,SER=(TP6322)),LABEL=2
//OUT DD DSN=COUNTS,DISP=(,KEEP),UNIT=TAPE,
// VOL=(,RETAIN,SER=(TP6322)),LABEL=3,
// DCB=(RECFM=FB,LRECL=16,BLKSIZE=3664)

3. JCLLPA

//JOBLIB   DD DSN=T63453.CBT.LOAD,DISP=SHR
//DIRECT EXEC PGM=DIRECT
//DIRECT   DD DSN=&&DIRECT,UNIT=SYSDA,DISP=(,PASS),
//            SPACE=(CYL,(1,1))
//COUNTS EXEC PGM=GENCNTS
//SYSPRINT DD SYSOUT=A
//TAPE DD DSN=&&PSWS,DISP=(OLD,DELETE)
//DIRECT DD DSN=UCC6007.NEWPACK.LPAMAP.T77195.DATA,DISP=SHR
//COUNTS DD DSN=&&COUNTS,DISP=(,PASS),UNIT=SCRATCH,
// SPACE=(CYL,(1,1))
//LPAMAP EXEC PGM=PKLPAMAP
//LPALIB DD DSN=SYS1.LPALIB,DISP=SHR
//DIRECT DD DSN=&&DIRECT,DISP=(,PASS),UNIT=SCRATCH,
// SPACE=(CYL,(1,1))
//ANALYSIS EXEC PGM=ANALYSIS,COND=(0,NE),PARM='/PACK'
//SYSPRINT DD SYSOUT=A
//COUNTS DD DSN=&&COUNTS,DISP=(OLD,DELETE)
//DIRECT DD DSN=&&DIRECT,DISP=(OLD,DELETE)
//CARDS DD DSN=UCC6007.NEWPACK.DATA(PACKLIST),DISP=OLD
//SYSIN DD DSN=UCC6007.NEWPACK.ASM(UICDATA),DISP=SHR

4. JCLMOD

//PACKIT PROC TYPE=PGM,SELECT=,LIB='SYS1.LINKLIB'
//DIRECT EXEC PGM=DIRECT
//STEPLIB DD DSN=SYS1.UTILLIB,DISP=SHR
//DIRECT DD DSN=&&LPAMAP,DISP=(,PASS),UNIT=SCRATCH,
// SPACE=(CYL,(1,1))
//MODMAP EXEC PGM=MODMAP
//STEPLIB DD DSN=UCC6007.NEWPACK.LOAD,DISP=SHR
//DIRECT DD DSN=&&DIRECT,DISP=(,PASS),UNIT=SCRATCH,
// SPACE=(CYL,(1,1))
//MODULE DD DSN=&LIB(&MODULE),DISP=SHR
//PSWS EXEC PGM=OMFPST4,PARM='/&TYPE(&MODULE)&SELECT'
//STEPLIB DD DSN=UCC6007.NEWPACK.LOAD,DISP=SHR
//SYSPRINT DD SYSOUT=A
//DIRECT DD DSN=&&LPAMAP,DISP=(OLD,DELETE)
//IN DD DSN=SYS1.OURMF.TAPE,DISP=SHR
//OUT DD DSN=&&PSWS,DISP=(,PASS),UNIT=SCRATCH,SPACE=(CYL,(1,1))
//COUNTS EXEC PGM=GENCNTS
//STEPLIB DD DSN=UCC6007.NEWPACK.LOAD,DISP=SHR
//SYSPRINT DD SYSOUT=A
//TAPE DD DSN=&&PSWS,DISP=(OLD,DELETE)
//DIRECT DD DSN=&&DIRECT,DISP=(OLD,PASS)
//COUNTS DD DSN=&&COUNTS,DISP=(,PASS),UNIT=SCRATCH,
// SPACE=(CYL,(1,1))
//ANALYSIS EXEC PGM=ANALYSIS,PARM='/LINK(&MODULE)',COND=(0,NE)
//STEPLIB DD DSN=UCC6007.NEWPACK.LOAD,DISP=SHR
//SYSPRINT DD SYSOUT=A
//COUNTS DD DSN=&&COUNTS,DISP=(OLD,DELETE)
//DIRECT DD DSN=&&DIRECT,DISP=(OLD,DELETE)
//CARDS DD DSN=UCC6007.NEWPACK.DATA(&MODULE),DISP=OLD

**********************************************************************

THE FOLLOWING HAS BEEN SUPPLIED BY UICC AND IS INCLUDED AS AN EXAMPLE
OF THE OPTIONAL INPUT TO THE ANALYSIS PROGRAM.

1. UICDATA

ZERO HASPSSSM,JEZ2SSSM
ZERO DNKCPS,DNKTMESS
EQUATE IGC0021D,RAPEFDR,IGC0020D
EQUATE IEFW21SD,DEVMASKT,DEVNAMET
EQUATE SHOW,IGC0021E
EQUATE IGG0199F,IGG0199G,IGG0199W,IGG0198L
EQUATE IGC0008C,IEFU83
EQUATE IEEPRTN,IEEPRWI2,IEESB605
EQUATE IEFIRECM,IEFJDSNA,IEFJJTRM,IEFJRASP,IEFJRECM,IEFJSDTN,IEFJSREQ
EQUATE IGG0196S,IGG019T3,IGG019T4,IGG019T5,IGG019T6,IGG019T7,IGG019T8
EQUATE IGG019T5,IGG019TX,IGG019TY,IGG019TZ
EQUATE ERBMFEVT,ERBMFEPG,IRARMWAR,IRARMSET,IEFJRASP
EQUATE ERBMFEDV,ERBMFECH,ERBMFTCH,ERBMFETR,ERBMFESP,IEFJRASP
EQUATE IDDWI,IKJEFT02,IKJSCAN,IKJEHDEF
