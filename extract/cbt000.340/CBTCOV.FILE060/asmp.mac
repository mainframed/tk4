***********************************************************************
*
*          SYNTAX -
*                  ASM  'DSNAME'  PRINT(DSNAME) / NOPR / SYSOUT /
*                (ASMF OR ASMH)   / PFILE(DDNAME)    LIST / NOLIST
*                                 OBJECT(DSNAME) / NOOBJECT    MOD
*                                 LIB(DSNAMES) / NOLIB  MACLIB/NOMAC
*                                 XREF(FULL/SHORT) / NOXREF
*                                 BATCH/NOBATCH  ALIGN/NOALIGN
*                                 TERM/NOTERM  TEST/NOTEST
*                                 ESD/NOESD  RLD/NORLD  RENT/NORENT
*                                 FLAG(NNN)  LINECOUNT(NN)
*                                 SYSPARM()  TIME/NOTIME  MSG/NOMSG
*
***********************************************************************
***********************************************************************
*
*          SOME DIFFERENCES BETWEEN ASSEMBLERS
*
*          THESE PARM OPTIONS ARE IN THE VS ASSEMBLER
*          BUT NOT THE H ASSEMBLER -
*
*          ALOGIC/NOALOGIC  YFLAG/NOYFLAG  MCALL/NOMCALL
*          MLOGIC/NOMLOGIC  LIBMAC/NOLIBMAC   NUMBER   STMT
*          WORKSIZE(2048K) (32K-10240K)  BUFSIZE(MIN/MAX/STD)
*
*          THE VS ASSEMBLER DOES NOT HAVE THE BATCH OPTION.
*
*          VS ASSEMBLER USES SYSUT2 AND SYSUT3, H DOES NOT.
*
*          THE VS ASSEMBLER IS IFOX00 INSTEAD OF IEV90
*
*          THE VS ASSEMBLER SYSPRINT FILE USES ASA
*          CARRIAGE CONTROLS, WHILE ASSEMBLER H USES
*          MACHINE CARRIAGE CONTROLS.
*
***********************************************************************
***********************************************************************
*
*         HOW TO INSTALL IT
*
*         1) ASSEMBLE IT WITH NO SYSPARM SPECIFIED TO THE ASSEMBLER.
*            LINK-EDIT THAT AND NAME IT 'ASH' OR 'ASMH' (OR EVEN
*            'ASM' IF YOU DONT HAVE AN ASSEMBLER PROMPTER BY THAT
*            NAME ALREADY).
*
*         2) ASSEMBLE THIS SAME PROGRAM AGAIN, THIS TIME SPECIFYING
*            SYSPARM(2).  THIS WILL CAUSE DIFFERENT CODE TO BE
*            GENERATED.  LINK-EDIT THAT AND NAME IT 'ASMH02'.
*
*         'ASMH02' IS DYNAMICALLY TRANSFERRED TO BY THE COMMAND.
*         THE ONLY REASON THIS IS DONE IS TO GIVE THE ASSEMBLER
*         MORE ROOM TO RUN IN.  IF YOUR TSO REGION SIZES ARE
*         PLENTY BIG, YOU DONT HAVE TO DO THAT SECOND ASSEMBLY,
*         BUT YOU DO HAVE TO MAKE A CHANGE TO THE CODE BEFORE
*         DOING THE FIRST ASSEMBLY. YOU HAVE CHANGE 'DEFAULT='$X'
*         TO DEFAULT='$NOX' AT THE INSTRUCTION LABELLED 'XCTLKW'.
*
*         IF PLACED IN THE LPA, IT WOULD PROBABLY BE BETTER
*         TO MAKE THE DEFAULT='$NOX'.
*
*         FOR THE VS ASSEMBLER PROMPTER, THE ABOVE INSTRUCTIONS
*         SHOULD READ SYSPARM(3) FOR THE FIRST ASSEMBLY,
*         SYSPARM(4) FOR THE SECOND ASSEMBLY, AND NAME THE
*         SECOND LOAD MODULE 'ASMF02' INSTEAD OF 'ASMH02'.
*
*         WHAT NAME YOU WANT TO GIVE THE FIRST ASSEMBLY IS
*         UP TO YOU. IT WONT AFFECT THE WAY IT RUNS.
*
***********************************************************************
***********************************************************************
*
*         MOST OF THE KEYWORDS CORRESPOND TO OPTIONS PASSED TO THE
*         ASSEMBLER IN ITS PARM FIELD.  PRINT, SYSOUT, PFILE, MOD,
*         LIB, MACLIB, TIME, AND MSG ARE NOT PARM FIELD OPTIONS,
*         BUT CONTROL FUNCTIONS WITHIN THE COMMAND.  NOPRINT
*         CAUSES A NOLIST PARM OPTION.
*
*         LIB DATA SETS WILL BE CONCATENATED AFTER 'SYS1.MACLIB'.
*         NOMACLIB MAY BE SPECIFIED TO SUPPRESS 'SYS1.MACLIB'.
*         IF BOTH NOMACLIB AND NOLIB ARE SPECIFIED THEN THE
*         ASSEMBLER WILL USE WHATEVER YOU HAVE PRE-ALLOCATED
*         TO DDNAME SYSLIB.
*
*         PFILE IS USED WHEN WE PRE-ALLOCATE A SYSOUT FILE WITH
*         ALL KINDS OF OPTIONS LIKE HOLD OR DEST OR FORMS, AND
*         WE WANT THE PROMPTER TO USE THAT FILENAME FOR ITS PRINT.
*
*         THE 'LIST/NOLIST' KEYWORD IS A FAIRLY USELESS KEYWORD,
*         BUT IS INCLUDED SO THAT USING IT WONT RESULT IN AN ERROR.
*         IF 'NOLIST' IS SPECIFIED, IT FORCES 'NOPRINT'.
*         IF 'NOPRINT' IS SPECIFIED, IT FORCES 'NOLIST.
*         IF 'LIST' IS SPECIFIED, THE 'LIST' OPTION IS PASSED
*         TO THE ASSEMBLER, BUT THAT IS NEVER NECESSARY.
*         JUST USE THE PRINT/NOPRINT/SYSOUT/PFILE KEYWORD
*         TO CONTROL THE LIST OPTION, AND THINGS WILL WORK FINE.
*
*         TO MAKE THE COMMAND DEFAULT TO NOPRINT,
*         DO NOT PUT DEFAULT='NOLIST' AT LISTKW.  THIS WOULD
*         FORCE THE USER TO TYPE IN BOTH LIST AND PRINT.
*         JUST PUT DEFAULT='NOPRINT' AT PRINTKW.
*
*         THE 'MSG' KEYWORD CAUSES THE NAMES OF THE PRINT AND
*         OBJECT DATA SETS TO BE DISPLAYED.  THIS IS USEFUL
*         BECAUSE THE WAY THE COMMAND BUILDS THESE NAMES TAKES
*         A WHILE TO GET USED TO.  THE DEFAULT (MSGD) CAUSES
*         THE NAMES TO BE DISPLAYED WHENEVER THEY ARE NOT OBVIOUS.
*
*         THE 'TIME' KEYWORD CAUSES THE CPU TIME USED BY THE
*         ASSEMBLER TO BE DISPLAYED.  THIS TIME DOES NOT INCLUDE
*         THE TIME USED BY THE TSO COMMAND BEFORE IT INVOKES
*         THE ASSEMBLER.
*
***********************************************************************
***********************************************************************
*
*         DATA SET NAME CONVENTIONS
*
*          SOURCE INPUT DATA SET
*             IF AN UNQUALIFIED NAME IS ENTERED, IKJEHDEF
*             PUTS A PREFIX ON THE FRONT AND '.ASM' ON THE END.
*             IF THE RESULTING NAME IS NOT IN THE CATALOG,
*             IKJEHDEF STILL RETURNS IT BUT ALSO SETS THE
*             RETURN CODE TO 20.  IF THE RETURN CODE IS 20,
*             WE REMOVE THE '.ASM', UNLESS THAT LEAVES NOTHING
*             BUT THE PREFIX (ONLY A MEMBER NAME WAS SPECIFIED)
*             IN WHICH CASE WE SAY PREFIX.ASM NOT IN CATALOG.
*
*             IF AN UNQUALIFIED NAME IS ENTERED, AND OBJ OR
*             PRINT IS SPECIFIED WITHOUT A DSNAME, THE COMMAND
*             ATTEMPTS TO USE THE UNQUALIFIED NAME AS A PATTERN
*             FOR THE NAMES OF THE OBJECT AND PRINT DATA SETS.
*
*             FOR EXAMPLE, IF ALPHA IS SPECIFIED, AND YOUR DATA
*             IS IN 'PREFIX.ALPHA.ASM', IT WILL USE
*             'PREFIX.ALPHA.OBJ' AND 'PREFIX.ALPHA.LIST'.
*
*             HOWEVER, IF ALPHA IS SPECIFIED, AND YOUR DATA IS
*             IN 'PREFIX.ALPHA', THE COMMAND CANNOT CREATE
*             'PREFIX.ALPHA.OBJ' AND 'PREFIX.ALPHA.LIST' (AT LEAST
*             IT CANT UNDER AN OS CVOL CATALOG), SO IT USES
*             DEFAULT OBJECT AND PRINT DSNAMES UNLESS OVERRIDDEN.
*
*             IF A QUALIFIED DATA SET NAME IS ENTERED,
*             THE DEFAULT OBJECT AND PRINT DSNAMES WILL BE
*             USED UNLESS OVERRIDDEN.
*
*             THE DEFAULT OBJECT AND PRINT DSNAMES ARE TEMP.OBJ
*             AND TEMP.LIST, THAT IS, OBJECT(TEMP) AND PRINT(TEMP).
*             THESE ARE USED ONLY IF THE OBJECT AND PRINT
*             DSNAMES ARE NOT SPECIFIED AND THE SOURCE DSNAME IS
*               A) QUALIFIED (IN QUOTES), OR
*               B) UNQUALIFIED, AND THE NAME YOU ENTERED
*                  WAS NONSTANDARD (DOESNT EXIST WITH .ASM
*                  APPENDED TO WHAT YOU ENTERED).
*
*             WHENEVER DEFAULT OBJECT OR PRINT DSNAMES ARE USED,
*             A MESSAGE IS ISSUED INFORMING YOU OF THAT FACT,
*             UNLESS NOMSG IS SPECIFIED.
*
***********************************************************************
