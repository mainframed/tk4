i * 1ST BYTE OF EACH LINE CONTAINS MACHINE CONTROL CHARACTER (FBM)
¸
¸
¸
¸
¸
¸
¸
°    AAAAA   M     M  DDDDDD   PPPPPP    SSSSS    CCCCC    AAAAA   N
°   A     A  MM   MM  D     D  P     P  S     S  C     C  A     A  NN
°   A     A  M M M M  D     D  P     P  S        C        A     A  N N
°   AAAAAAA  M  M  M  D     D  PPPPPP    SSSSS   C        AAAAAAA  N  N
°   A     A  M     M  D     D  P              S  C        A     A  N   N
°   A     A  M     M  D     D  P        S     S  C     C  A     A  N
°   A     A  M     M  DDDDDD   P         SSSSS    CCCCC   A     A  N
¸
¸

°                                  User Guide
°                                    SP1.3

¸
¸
¸
¸
¸
¸

°
¯
°                                                                  PAGE

  ________
°  CONTENTS
¸


°

°

°  Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . .

°  Installation . . . . . . . . . . . . . . . . . . . . . . . . . . . .

°  Use. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

°  Program Description. . . . . . . . . . . . . . . . . . . . . . . . .
°    Validity Checking. . . . . . . . . . . . . . . . . . . . . . . . .
°    Control Block Tracing. . . . . . . . . . . . . . . . . . . . . . .
°    Communications Task Control Block Checking . . . . . . . . . . . .
°    Master Trace Table Formatting. . . . . . . . . . . . . . . . . . .
°    VSM Control Block Checking.  . . . . . . . . . . . . . . . . . . .
°    I/O Control Block Checking.  . . . . . . . . . . . . . . . . . . .
°    Low Core Checking. . . . . . . . . . . . . . . . . . . . . . . . .
°    Global System Resource Checking. . . . . . . . . . . . . . . . . .
°    Real Storage Manager Checking. . . . . . . . . . . . . . . . . . .1
°    ENQ/DEQ Checking.  . . . . . . . . . . . . . . . . . . . . . . . .1
°    Local/CMS Lock Checking. . . . . . . . . . . . . . . . . . . . . .1
°    System Resource Analysis.  . . . . . . . . . . . . . . . . . . . .1
°    CPU Status Analysis. . . . . . . . . . . . . . . . . . . . . . . .1
°  Notes on use . . . . . . . . . . . . . . . . . . . . . . . . . . . .1

°  Messages . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .1
°    Messages from AMDPSCAN . . . . . . . . . . . . . . . . . . . . . .1
°    Messages from AMDPSUCB . . . . . . . . . . . . . . . . . . . . . .2
°    Messages from AMDPSVSM . . . . . . . . . . . . . . . . . . . . . .2
°    Messages from AMDPSVAL.  . . . . . . . . . . . . . . . . . . . . .4
°    Messages from AMDPSQCB.  . . . . . . . . . . . . . . . . . . . . .4
°    Messages from AMDPSTAT.  . . . . . . . . . . . . . . . . . . . . .4
°    Messages from AMDPSALZ.  . . . . . . . . . . . . . . . . . . . . .4
°    Messages from AMDPSPAG.  . . . . . . . . . . . . . . . . . . . . .4
°    Messages from AMDPSSRM . . . . . . . . . . . . . . . . . . . . . .4
°    Messages from AMDPSLOP . . . . . . . . . . . . . . . . . . . . . .4
°  Appendix A.  . . . . . . . . . . . . . . . . . . . . . . . . . . . .5
°    System Resource Analysis format. . . . . . . . . . . . . . . . . .5
°    Instruction Trace Format . . . . . . . . . . . . . . . . . . . . .5
¯
°                                                                  PAGE

  ____________
°  INTRODUCTION
¸

°  AMDPSCAN is a  user exit for AMDPRDMP for  VS2 rel3.8 with se2.  It i
°  invoked by using an AMDPRDMP control card with the verb 'SCAN' on it.
°      The objectives of this exit:-

°       1/  To check  various  flags  bits in  the  dump  which may  hav
°       contributed to  the failure, but would  not have been  noticed b
°       the PSCE unless he was specifically  looking for them. An exampl
°       of this would be the 'SQA' critical bit in the GDA.

°       2/ Control  block verification.  VS2 has  many queues  of contro
°       blocks and a symptom or cause  of system failure is frequently a
°       invalid  control block  or  a  corrupted queue.   Scanning  thes
°       control  blocks 'manually'  would  be too  time  consuming to  b
°       practical.  AMDPSCAN  scans  many   control  blocks  and  queues
°       printing error messages and leading the  PSCE to the cause of th
°       problem.

°*----------------------------------------------------------------------
°*                   * * *   DISCLAIMER.  * * *
°*     This program is intended for use by IBM PSR's analyzing dumps
°* produced on IBM CPU's. The author will not accept any responsibility
°* for program failure to produce valid output when processing dumps
°* from other manufacturers equipment.
°*----------------------------------------------------------------------
°
¸
¸
¸
¸
¸
¸
¸

°
¯
¯
°                                                                 PAGE 4
¸
  ____________
°  INSTALLATION
¸
°      Before AMDPSCAN can be used, the verb SCAN must be
°  added to AMDPRDMP's control table, AMDPRECT.
°  This is done as follows:-

°  1) Obtain a superzap dump of AMDPRECT (normally in LINKLIB)
°  2) Locate the next available unused entry.
°     An empty entry looks like this.....

°     40404040 40404040 00000000 40404040 40404040

°  3) Apply the following superzap.
°
°     name amdprect
°     VER  XXXX  40404040 40404040 00000000 40404040 40404040
°     REP  XXXX  C1D4C4D7 E2C3C1D5 00000000 E2C3C1D5 40404040
°
°     This makes the verb SCAN known to amdprdmp.
°
°
¯
°                                                                 PAGE 5
¸
  ____
°  USE.

°
°     To use the dump scan feature simply code the verb SCAN
°  in your AMDPRDMP control cards.
°
°     To use the feature in csect 'AMDPSLOP' to force the printing of
°  the 'next' 5000 instructions to be executed in a 'STANDALONE'
°  dump, simply locate the 'NO-OP' at offset X'D12' in 'AMDPSLOP'
°  and change it to an 'UNCONDITIONAL BRANCH'.
°     Should the location of this 'NO-OP' change due to maintenance
°  to 'AMDPSLOP', the 'NO-OP' can be easily located in a 'DUMPT'
°  by 'eyeballing' for a constant - 'TRACE SWITCH'.
¯
°                                                                 PAGE 6

  _______ ___________
°  PROGRAM DESCRIPTION
¸

¸
  ________ ________
°  VALIDITY CHECKING

°      Validity  checking  is  performed  by   a  common  sub-routine  i
°  AMDPSCAN.   Addresses are  checked for  correct  boundary alignment
°  word, double-word, 4K or 64K.
°      Addresses are also checked to see if they are in the right area o
°  virtual storage.  Storage is split up into 6 areas - PSA, NUCLEUS, th
°  Private  Area, CSA,  LPA  and SQA.   In  addition,  for some  validit
°  checking, the Private Area is further divided into LSQA and PVTUSER.
°      Addresses are  checked using 'negative  logic'. If an  address of
°  for example, a UCB should be in the NUCLEUS, a check is made to see i
°  the address is in  the PSA, the Private Area, CSA, LPA  or SQA.  If i
°  is, then an error is recognised. In  this way if the boundaries of fo
°  example, the  NUCLEUS, can not  be determined at  initialisation time
°  address validation can still be performed although restricted.
°      Note:- The PSA is not considered to be part of the NUCLEUS.

°      The boundaries of 8 areas are determined as follows:-

°  PSA
°       PSA is from location 0 to location X'FFF'
°  NUCLEUS
°       The NUCLEUS  starts at  location X'1000'. Top  of the  NUCLEUS i
°       determined from  the CVT  field CVTNUCB.  If this  is invalid  o
°       inaccessable, the start of the Private  Area is used as the end
°       of the NUCLEUS.
°  Private Area
°           Start of  the Private Area is  determined from the  GDA fiel
°       PASTRT. If  this is invalid or  inaccessable then the  address o
°       the top of the NUCLEUS is used instead.
°           The  top of  the Private  Area  is calculated  by adding  th
°       address  of the  start  of  the Private  Area  to  the GDA  fiel
°       PASIZE.
°  CSA
°           GDA field  CSAPQEP points to the  PQE for CSA. The  PQERGN i
°       the PQE is  used for the start  of CSA, and this  plus PQESIZE i
°       the top of CSA.
°  LPA
°           LPA in this  context is the area  between the top of  CSA an
°       the bottom of SQA.
°  SQA
°           The address  of the start of  SQA is taken from  the DQEBLKA
°       field in the  last DQE chained to  the SPQE for SQA.  The SPQE i
°       found from the GDA field SQAPQEP.

°
¯
°                                                                 PAGE 7

°  LSQA
°          LSQA is  mapped from DQEs  for LSQA  chained from the  LDA fo
°       each address space.

°  PVTUSER
°          PVTUSER is that part of the Private Area that is not LSQA.
¸
  _______ _____ _______
°  CONTROL BLOCK TRACING

°      Most control blocks  referenced are traced by a  common routine i
°  AMDPSCAN.   This routine  uses a  525  entry trace  table, each  entr
°  containing the control block address and name.
°      The control block trace is printed after most errors, oldest entr
°  first.
°      Loop checking is also performed by the trace routine, checks bein
°  made to see if  the address being traced already appears  in the trac
°  table.
¸
  ______________ ____ _______ _____ ________
°  COMMUNICATIONS TASK CONTROL BLOCK CHECKING

°  The following control block addresses are validity checked.

°       UCM base.

°       The WQEs on the system output queue chained from the UCM base.

°       The OREs chained from the UCM base.

°       The WQEs pointed to by the OREs.

°       The UCM device entries (UCMEs).

°       The CQEs chained from the UCMEs.

°       The WQEs chained from the CQEs.

°       The WWBs chained from the UCM base.

°  The following conditions are checked for.

°       No consoles condition.

°       All WQEs used up.

°       UCMEs that  have CQE/WQEs  chained from  them. (Possible  consol
°       hang).

°       Various flag bits in  the UCMEs that indicate work to  do for th

°
¯
°                                                                 PAGE 8

°       Communications  Task.  See  messages  SCAN0050  to  SCAN0054  fo
°       details.

°  The messages  contained in  the WQEs  on the  system output  queue ar
°  printed out.   This gives the console  messages that were  not printe
°  before the failure.

°  Outstanding WTOR  replies are  printed. This is  done by  printing th
°  text from the WQEs pointed by the OREs chained from the UCM base.
¸
  ______ _____ _____ __________ _______
°  MASTER TRACE TABLE FORMATTING ROUTINE

°  CSECT AMDPSMTT prints  the current entries in the master trace table.
°  Entries are printed in console log format. i.e. oldest entry first.
°
¸
  ___ _______ _____ ________.
°  VSM CONTROL BLOCK CHECKING

°  All SPQEs,  DQEs, FQEs,  PQEs, FBQEs  and AQEs  for CSA,  SQA and  al
°  address spaces are checked.

°  CPABs, CPABEs  and quick cells are  checked for all global  cell pool
°  and local SVRB cell pools.

°  Some fields of the GDA and all LDAs are also checked.

°  Checks are  also made  for SQA  critical or  SQA approaching  critica
°  situation, as indicated by flag bits in the GDA.
¸
  ___ _______ _____ ________.
°  I/O CONTROL BLOCK CHECKING

°  These functions  are performed by  the CSECT AMDPSUCB.   The followin
°  control blocks are checked:-

°       The UCB look-up table.

°       The UCBs

°       If the  Post Flag is on  in a UCB then  the chain UCB ->  IOQE -
°       IOSB -> SRB -> IOSB -> UCB is checked.

°       The Logical Channel Words.

°       The IOQE chains from the Logical Channel Words.

°       The  IOQE ->  IOSB ->  SRB ->  IOSB ->  UCB chain  for each  IOQ
°
¯
°                                                                 PAGE 9

°       chained from the Logical Channel Words.

°       The Test Channel List pointed to by each Logical Word.

°       The PCCA Vector Table. (PCCAVT)

°       The PCCAs.

°       The CATs (Channel Availability Tables).

°  For each UCB a check is made for outstanding I/O or unusual condition
°  such  as DDR  swap  pending. See  messages  SCAN0150  to SCAN0170  fo
°  details.

°      NOTE:- THIS CHECKING IS NOT DONE FOR TELEPROCESSING DEVICES.

°  The  Channel  Availability  Tables  are checked  for  a  channel  bus
°  condition.
¸
  ___ ____ ________.
°  LOW CORE CHECKING

°  This function is performed by CSECT AMDPSVAL.
°      The following checks are made:-
°   1) 1st word of each new PSW is validity
°      checked against a model PSW.
°   2) Address part of each new PSW within the NUCLEUS.
°   3) Address part of each new PSW points at
°      at the correct FLIH. Note that each FLIH is
°      prefixed by its CSECT name.
°   4) 1st x'10' bytes of each FLIH is validity
°      checked against a model.
°   5) Invalid FRR stack pointer in the
°      Recovery Stack Vector Table (RSVT).
°   6) The current pointer in the RSVT does
°      not point to a valid FRR stack.

¸
  ______ ______ ________ ________.
°  GLOBAL SYSTEM RESOURCE CHECKING

°  This function is performed by CSECT AMDPSTAT.
°      The following checks are made:-
°   1) LOCK MANAGER active at the time of the dump.
°   2) Global locks held. i.e. :-
°            ASM lock
°            IOSYNCH lock
°            I/O CAT lock
°            UCB lock
°            I/O LCH lock

°
¯
°                                                                 PAGE 1

°            DISPATCHER lock
°            SRM lock
°            SALLOC lock

¸
  ____ _______ _______ ________.
°  REAL STORAGE MANAGER CHECKING

°  This function is performed by CSECT AMDPSPAG.
°      The following checks are made:-
°   1) Invalid PCB/ROOT PCB on any of the RSM PCB chains.
°      I.E Not in SQA on a word boundary.
°   2) Invalid TCB/SSRB pointer in PCB/ROOT PCB.
°   3) Invalid PVT pointer in the CVT.

°      In addition  'page-in' requests are  traced for later  analysis b
°  AMDPSALZ.  VIO  and SWAP paging requests  are not traced  because the
°  are probably not important in dump analysis.

¸
  _______ ________.
°  ENQ/DEQ CHECKING

°  This function is performed by CSECT AMDPSQCB.
°      The following checks are made:-
°   1) Invalid QCB.
°      i.e. not in SQA aligned on a word boundary.
°   2) Invalid QEL.
°      i.e. not in SQA aligned on a word boundary.

°      If an  EXCLUSIVE ENQ  is detected  for a  resource on  which othe
°  jobs/users are waiting the resource holder  and waitors are traced fo
°  later analysis by CSECT AMDPSALZ.

¸
  _________ ____ ________.
°  LOCAL/CMS LOCK CHECKING

°  This function is performed by CSECT AMDPSLOK.
°      Each address  space is checked to  determine whether the  LOCAL o
°  CMS lock is held. Details of the holder and any waitors are traced fo
°  later analysis  by AMDPSALZ. Note:-  if the  address of the  holder o
°  waitors cannot be determined '0' is used.
  All CMS locks are checked now.... CSMF, CEDQ and CMS.
¸
¸
°
¯
°                                                                 PAGE 1

  ______ ________ ________.
°  SYSTEM RESOURCE ANALYSIS

°  This  function  is   performed  by  CSECT  AMDPSALZ,   which  analyse
°  information traced by CSECTS : AMDPSLOK, AMDPSPAG, AMDPSQCB, AMDPSCAN
°  AMDPSUCB.
°      These CSECT's trace information about the following 'resources' :
°            Page Supervisor
°            I/O Devices
°            Locks
°            QCB's
°            Real Storage Frames
°            WQE's
°            ORE's

°      Details are printed of the holder of each resource and any waitor
°  for these resources. The resources are  printed in order of importanc
°  to the system at the time of the  dump. If a waitor also holds anothe
°  resource details of that resource are printed.  From this relationshi
°  of  resource holders/waitors  it should  be possible  to identify  th
°  'critical' system resource at the time of the dump.

°   Example 1
°            a) I/O outstanding on a device for which the
°               communications task is waiting.
°            b) Most jobs in the system waiting for WQE buffer
°               resource which is held by communications task.

°      It can  be seen  that this is  probably an I/O  problem and  not
°  comm's task error.

°   Example 2
°            a) Most TCB/SSRB's dispatched in ASID 1 are
°               waiting for the local lock.
°            b) LOCAL lock holder is in a 'page-wait', and
°               also holds the CMS lock.
°            c) Page supervisor is waiting for I/O to
°               complete on a paging device.
°            d) Other address spaces are waiting for
°               the CMS lock.

°      It can  be seen  that this is  probably an I/O  problem and  not
°  locking problem as it might first appear from the dump.

°      A check is made for an interlock condition between holders/waitor
°  of resources. Details are printed if an interlock is detected.

°   Example:
°            holder of resource 'A' is waiting for resource 'B'
°            holder of resource 'B' is waiting for resource 'A'
¸
¸
°
¯
°                                                                 PAGE 1

  ___ ______ ________
°  CPU STATUS ANALYSIS

°  This  function  is  performed  by CSECT  AMDPSLOP.  Unlike  all  othe
°  AMDPSCAN  CSECTs, AMDPSLOP  reads the  dump  dataset directly  withou
°  using AMDPRDMP.
°   The CPU status records are read from  the dump dataset. If the PSW i
°  the store status  has the wait bit  off, and the status  is valid, th
°  instruction stream pointed  to by the psw  is simulated. If a  loop i
°  detected an instruction trace is printed.
°   A message is  printed indicating whether the  CPU is enabled/disable
°  waiting/ executing or looping.
°   The  dataset described  by  the SYSUT3  DD  card is  used  as a  BDA
°  'paging' dataset during instruction simulation.
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
°
¯
°                                                                 PAGE 1

                                                            _____ __ __
°                                                            NOTES ON US
¸

°      If AMDPSCAN produces  many messages indicating that  addresses ar
°  invalid, when they appear to be correct, check that the fields used t
°  establish the boundaries  of the storage areas are  valid. See sectio
°  on 'Validity Checking' for definition of these fields.

°      While  AMDPSCAN   does  function  with   SYS1.DUMPs  as   well  a
°  stand-alone dumps, the output may be misleading in some cases. This i
°  because control block chains may have been modified while the dump wa
°  being taken. This is particularly so for I/O control blocks.
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸

°
¯
°                                                                 PAGE 1

  ________
°  MESSAGES
¸

¸
  ________ ____ ________
°  MESSAGES FROM AMDPSCAN


°  SCAN0001 UNABLE TO ACCESS CVT - SCAN TERMINATED

°            AMDPRDMP was  unable to determine  the location of  the CVT
°            AMDPSCAN is unable to do any processing.

°  SCAN0002 CVTNUCB IS INVALID - XXXXXXXX

°            CVTNUCB (address  of the top of  the NUCLEUS in the  CVT) i
°            not on a 64K boundary or is zero.

°  SCAN0003 WILL USE GDA PASTRT

°            AMDPSCAN will  use the address of  the start of  the Privat
°            Area  from the  GDA  as the  top of  the  NUCLEUS.  This  i
°            assuming that the GDA can  be ACCESSED. This message follow
°            messages SCAN0002 or SCAN0004.

°  SCAN0004 UNABLE TO ACCESS CVTNUCB AT XXXXXXXX

°            CVT  field  CVTNUCB which  is  the  address  of the  of  th
°            NUCLEUS, cannot be  accessed because it is not  in the dump
°            Control block  validity checking will be  restricted becaus
°            the boundaries of NUCLEUS cannot be determined.

°  SCAN0005 CVTEORM IS INVALID - XXXXXXXX

°            CVT  field  CVTEORM which  is  the  end  of real  memory  i
°            invalid.  It  is less than 1MEG  or not a multiple  of 512k
°            Control block  validity checking will be  restricted becaus
°            the boundaries of real memory cannot be determined.

°  SCAN0006 UNABLE TO ACCESS CVTGDA AT XXXXXXXX

°            CVT field CVTGDA which is the  GDA pointer in the CVT canno
°            be accessed  because it is not  in the dump.   Control bloc

°
¯
°                                                                 PAGE 1

°            validity checking will be  restricted because the boundarie
°            of SQA, CSA, LPA and the Private Area cannot be determined.

°  SCAN0007 GDA PASIZE IS INVALID - XXXXXXXX

°            GDA field  PASIZE which is the  size of the Private  Area i
°            not a multiple of 64K.  Control block validity checking wil
°            be restricted  because the  boundaries of  the Private  Are
°            cannot be determined.

°  SCAN0008 GDA FIELD CSAPQEP IS INVALID - XXXXXXXX

°            GDA field CSAPQEP  is invalid. Either the address  is not i
°            SQA or it is not on a word boundary.  Control block validit
°            checking will  be restricted because  the boundaries  of CS
°            cannot be determined.

°  SCAN0009 PQESIZE FOR CSA IS INVALID - XXXXXXXX

°            PQESIZE in the PQE for CSA is not a multiple of 4K or is to
°            large or  too small.  This  error may  also be caused  by a
°            invalid PQEREGN field,  giving a total of  PQEREGN + PQESIZ
°            which is than  16MEG.  Control block validity  checking wil
°            be  restricted  because  the boundaries  of  CSA  cannot  b
°            determined.  Control block trace follows.

°  SCAN0010 SPQE POINTER FOR SQA IS INVALID - XXXXXXXX

°            SQA SPQE pointer  in the GDA is  an address which is  not i
°            the same page  as the GDA.  Control  block validity checkin
°            will be restricted  because the boundaries of  SQA cannot b
°            determined.  Control block trace follows.

°  SCAN0011 INVALID DQE POINTER IN SPQE - XXXXXXXX

°            Pointer to  the first  DQE from  the SPQE  for SQA  is zero
°            Control  block   trace  follows.   Control   block  validit
°            checking will  be restricted because  the boundaries  of SQ
°            cannot be determined.

°  SCAN0012 LOOP IN DQE CHAIN

°            A loop  has been found  in the  DQE chain for  SQA.  Contro
°            block trace  follows.  Control block validity  checking wil
°            be  restricted  because  the boundaries  of  SQA  cannot  b
°            determined.


°
¯
°                                                                 PAGE 1

°  SCAN0013 INVALID DQE CHAIN POINTER - XXXXXXXX

°            A DQE for SQA has an invalid DQE chain field. The address i
°            not in  SQA or CSA  or is not  on a word  boundary.  Contro
°            block trace  follows.  Control block validity  checking wil
°            be  restricted  because  the boundaries  of  SQA  cannot  b
°            determined.

°  SCAN0014 INVALID DQEBLKAD FIELD IN DQE AT XXXXXXXX

°            A DQE for SQA has a block address which is not a multiple o
°            64K or is  not in SQA or CSA.  Control  block trace follows
°            Control block  validity checking will be  restricted becaus
°            the boundaries of SQA cannot be determined.

°  SCAN0015 UCMVEZ IS INVALID - XXXXXXXX

°            UCME size field in the UCM base is not a multiple of 4 or i
°            less than X'60' or is greater than X'90'.

°  SCAN0016 UNABLE TO ACCESS CVTNUCB AT XXXXXXXX

°            The CVT  field CVTNUCB (pointer to  the UCM base)  cannot b
°            accessed because  it is  not in  the dump.   No checking  o
°            Communications Task control blocks can be performed.

°  SCAN0017 NO CONSOLES CONDITION EXISTS. UCMSYSE BIT UCMSFLG1 IS ON.

°            Self-explanatory.

°  SCAN0018 CURRENT WQE COUNT (DDD) EQUALS/EXCEEDS LIMIT (DDD)

°            The count of WQEs currently in use (UCMWQNR) is equal to, o
°            exceeds the  WQE limit (UCMWQLM).   In this  condition task
°            may be waiting in WTO  for WQEs to become available.

°  SCAN0019 INVALID UCME ADDRESS - XXXXXXXX

°            AMDPSCAN calculated  an invalid UCME address  because UCMVE
°            (first UCME), UCMVEz  (UCME size), or UCMVEL  (last UCME) i
°            the UCM base is invalid.  Control block trace follows.

°  SCAN0020 INVALID CQE POINTER IN UCME - XXXXXXXX

°            The CQE pointer in  the UCME field UCMOUTQ is not  on a wor
°            boundary or not in CSA. (LSQA in SP1.3)
¸
°
¯
°                                                                 PAGE 1

°  SCAN0021 LOOP IN CQE CHAIN

°            A loop  exists in  the CQE  chain anchored  on UCMOUTQ  in
°            UCME.  Control block trace follows.

°  SCAN0022 INVALID CQE CHAIN POINTER - XXXXXXXX

°            A  CQE in  a chain  anchored on  UCMOUTQ  in a  UCME has  a
°            invalid  pointer to  the  next CQE.   It is  not  on a  wor
°            boundary or is not in CSA.  Control block trace follows.

°  SCAN0023 UNABLE TO ACCESS CVTEORM AT XXXXXXXX

°            CVT field CVTEORM which is the top of real memory, cannot b
°            accessed  because it  is  not in  the  dump.  Control  bloc
°            validity checking will be  restricted because the boundarie
°            of real memory cannot be determined.

°  SCAN0028 SQA (APPROACHING) CRITICAL BIT IS ON IN GDA AT XXXXXXXX

°            Self-explanatory.

°  SCAN0030 UCMVEL IS INVALID - XXXXXXXX

°            The pointer to the  last UCME in the UCM is  an address tha
°            is not on a word boundary or is not in the NUCLEUS.

°  SCAN0031 LOOP IN WQE CHAIN

°            The WQE chain anchored on  UCMOUTQ (the system output queue
°            has a loop in it.  Control block trace follows.

°  SCAN0032 INVALID WQE CHAIN POINTER - XXXXXXXX

°            While  following the  WQE  chain  anchored on  UCMOUTQ  (th
°            system  output  queue)  AMDPSCAN found  a  WQE  whose  chai
°            pointer  was  an  address  outside CSA  or  not  on  a  wor
°            boundary.  Control block trace follows.

°  SCAN0033 LOOP IN ORE CHAIN

°            The Operator Reply  Element chain anchored on  UCMRPYQ has
°            loop in it.  Control block trace follows.

¸

°
¯
°                                                                 PAGE 1

°  SCAN0034 INVALID ORE CHAIN POINTER

°            While following the Operator Reply Element queue anchored o
°            UCMRPLYQ, AMDPSCAN found  an ORE whose chain  pointer was a
°            address  outside CSA  or not  on a  word boundary.   Contro
°            block trace follows.

°  SCAN0035 LOOP IN WQE CHAIN

°            A WQE chain pointed  to by a CQE has a  loop in it.  Contro
°            block trace follows.

°  SCAN0036 INVALID WQE CHAIN POINTER - XXXXXXXX

°            While following a WQE chain from a CQE, AMDPSCAN found a WQ
°            whose chain pointer  was an address outside CSA or  not on
°            word boundary.  Control block trace follows.

°  SCAN0037 CVTGDA IS INVALID - XXXXXXXX

°            CVT field CVTGDA which is a  pointer to the Global Data Are
°            is  an address  which is  not in  SQA or  is not  on a  wor
°            boundary.    Control  block   validity   checking  will   b
°            restricted because the boundaries of  Private Area, CSA, LP
°            and SQA cannot be determined.

°  SCAN0038 GDA PASTRT IS INVALID - XXXXXXXX

°            GDA field  PASTRT which is the  pointer to the start  of th
°            Private Area in the GDA is not in the Private Area or not o
°            a 64K boundary.
°                If the address of the top of the NUCLEUS was successful
°            determined, this  will be  used for  the Private  Area star
°            address.  If  not, control block  validity checking  will b
°            restricted because the boundaries of the Private Area canno
°            be determined.

°  SCAN0039 PQERGN FOR CSA IS INVALID - XXXXXXXX

°            In the PQE for CSA, the field PQERGN which is the address o
°            the start  of CSA,  is not on  a 64K boundary  or is  not i
°            CSA.   Control block  validity checking  will be  restricte
°            because the boundaries of CSA cannot be determined.  Contro
°            block trace follows.

¸

°
¯
°                                                                 PAGE 1

°  SCAN0040 SPQE POINTER FOR SQA IS INVALID - XXXXXXXX

°            The GDA field  SQAPQEP which is the pointer to  the SPQE fo
°            SQA is an  address which is not in  SQA or is not  on a wor
°            boundary.    Control  block   validity   checking  will   b
°            restricted  because   the  boundaries   of  SQA   cannot  b
°            determined.  Control block trace follows.

°  SCAN0041 CVTCUCB IS INVALID - XXXXXXXX

°            The CVT field  CVTCUCB which is the pointer to  the UCM bas
°            is an address that  is not on a word boundary,  or is not i
°            the  NUCLEUS.  No  checking of  Communications Task  contro
°            blocks can be performed.

°  SCAN0050 ATTENTION PENDING BIT IS ON IN UCME AT - XXXXXXXX

°            Self-explanatory.  This message is only printed if more tha
°            90% of WQEs have been exhausted.

°  SCAN0051 OUTPUT PENDING BIT IS ON IN UCME AT - XXXXXXXX

°            Self-explanatory.  This message is only printed if more tha
°            90% of WQEs have been exhausted.

°  SCAN0052 DEVICE BUSY BIT IS ON IN UCME AT - XXXXXXXX

°            Self-explanatory.  This message is only printed if more tha
°            90% of WQEs have been exhausted.

°  SCAN0053 CLOSE PENDING BIT IS ON IN UCME AT - XXXXXXXX

°            Self-explanatory.  This message is only printed if more tha
°            90% of WQEs have been exhausted.

°  SCAN0054 OPEN PENDING BIT IS ON IN UCME AT - XXXXXXXX

°            Self-explanatory.  This message is only printed if more tha
°            90% of WQEs have been exhausted.

°  SCAN0059 UCME AT XXXXXXXX HAS DDD REQUESTS TO IT.

°            If DDD is a large number  and message SCAN0018 also has bee
°            printed,  then  this  console   is  probably  'hanging'  th
°            system.  This message  is only printed if more  than  90% o
°            WQEs have been exhausted.
¸
°
¯
°                                                                 PAGE 2

°  SCAN0060 INVALID DQEBLKAD FIELD IN DQE AT XXXXXXXX

°            The DQE block address in the first DQE for SQA is an addres
°            which is not in SQA or not on a 64K boundary.  Control bloc
°            validity checking will be  restricted because the boundarie
°            of SQA cannot be determined.  Control block trace follows.

°  SCAN0070 CONTROL BLOCK TRACE (LAST 525 ENTRIES)

°            Following this message is trace of control blocks leading u
°            to  error described  in a  previous message.  If '(LAST  52
°            ENTRIES)' is  included in  the SCAN0070  message, the  trac
°            table has filled up and wrapped round.
°                The first word  of the trace print is  the control bloc
°            address, the second word is the control block name.

°  SCAN0071 PRINT OF WQES ON SYSTEM OUTPUT QUEUE.

°            The print out which follows  this message will show message
°            which may  not have been printed  on the console  before th
°            system failure.

°  SCAN0072 INVALID MINOR WQE AT XXXXXXXX

°            The minor WQE at the address printed was found on the syste
°            output  queue, not  queued from  a  major WQE.   This is  a
°            invalid condition.  Control block trace follows.

°  SCAN0073 OUTSTANDING REPLIES.

°            Each ORE (operator  reply element) queued from  the UCM bas
°            field UCMRPLYQ, points to a WQE  which contains the text fo
°            the WTOR. The text from these WQEs is printed following thi
°            message.

°  SCAN0074 INVALID WQE POINTER IN ORE - XXXXXXXX

°            An ORE  (operator reply element)  chained from the  UCM bas
°            field UCMRPLYQ has a WQE pointer which is an address outsid
°            CSA  or  not  on  a  word  boundary.   Control  block  trac
°            follows.

°  SCAN0080 INVALID WWB CHAIN POINTER - XXXXXXXX

°            A WWB chained  from the UCM base field  UCMWECBH or UCMOECB
°            has an invalid chain pointer.  Control block trace follows.


°
¯
°                                                                 PAGE 2

°  SCAN0081 LOOP IN WWB CHAIN.

°            A loop exists in the WWB  chain anchored from UCM base fiel
°            UCMWECBH or UCMOECBH.  Control block trace follows.

°  SCAN0097 AMDPSCAN HAS ABENDED.

°            Self-explanatory.

°  SCAN0098 AMDPSCAN UNABLE TO AMDPRDMP PRINTER DCB.

°            AMDPSCAN attempts to locate the DCB built by AMDPRDMP to pu
°            output to PRINTER  DD.  This is done via the  DEB chain. Th
°            PRINTER DCB could not be found  and AMDPSCAN will produce n
°            output.
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
°
¯
°                                                                 PAGE 2

            ________ ____ ________
°            MESSAGES FROM AMDPSUCB


°  SCAN0101 UCB SCAN TERMINATED

°            Due to a previous error, scanning of the UCBs and associate
°            control blocks had to be terminated.

°  SCAN0102 LCH SCAN TERMINATED

°            Due to a  previous error, scanning of  Logical Channel Word
°            and associated control blocks had to be terminated.

°  SCAN0103 CAT SCAN TERMINATED.

°            Due  to   a  previous   error,  scanning   of  the   Channe
°            Availability Tables had to be terminated.

°  SCAN0104 INVALID IOQE POINTER IN UCB - XXXXXXXX

°            The UCB  has the Post Flag  on and, therefore should  have
°            valid  IOQE chained  from its  UCBIOQ  pointer. However  th
°            UCBIOQ pointer is outside SQA or  is not on a word boundary
°            Control block trace follows.

°  SCAN0106 INVALID IOSB POINTER IN IOQE - XXXXXXXX

°            The  IOSB pointer  in an  IOQE is  not in  the NUCLEUS,  th
°            Private Area, CSA or  SQA, or it is not on  a word boundary
°            Control block trace follows.

°  SCAN0107 INVALID IOSB POINTER IN SRB - XXXXXXXX

°            While  following  a chain  IOQE  ->  IOSB  -> SRB  ->  IOSB
°            AMDPSCAN found that the IOSB pointer  in the SRB was not th
°            same as the  IOSB pointer in the IOQE.   Control block trac
°            follows.

°  SCAN0108 INVALID UCB POINTER IN IOSB - XXXXXXXX

°            An IOSB has  been found with a  UCB pointer which is  not i
°            the  NUCLEUS, not  on  a word  boundary,  or  is above  64K
°            Control block trace follows.

¸
°
¯
°                                                                 PAGE 2

°  SCAN0109 INVALID UCB POINTER IN IOSB AT - XXXXXXXX

°            While  following  the chain  UCB  ->  IOQE  -> IOSB  ->  UC
°            AMDPSCAN  found an  IOSB which  did  not point  back to  th
°            original UCB.  Control block trace follows.

°  SCAN0111 INVALID UCB POINTER IN UCBLUT - XXXXXXXX

°            The UCB look-up table contains a UCB pointer which is not i
°            the NUCLEUS or not on a word boundary.

°  SCAN0112 TOO MANY ERRORS.

°            More than  100 invalid UCB pointers  have been found  in th
°            UCB look-up  table. The UCB look-up  table is assumed  to b
°            garbage and UCB checking is terminated.

°  SCAN0115 UNABLE TO ACCESS CVTILK2 AT - XXXXXXXX

°            The  CVT field  CVTILK2  which is  the  pointer  to the  UC
°            look-up table  cannot be accessed because  it is not  in th
°            dump.  UCB checking is terminated.

°  SCAN0116 UNABLE TO ACCESS (ALL OF) UCB LOOK-UP TABLE

°            The UCB look-up  table cannot be accessed because  it is no
°            in the  dump.  If the words  'ALL OF' appear in  the messag
°            then part of  the LUT was accessed and  limited UCB checkin
°            will be performed. Otherwise checking will be terminated.

°  SCAN0117 UCB XXXXXXXX DEVICE XXXX

°            This message  is a header describing  the device and  UCB t
°            which the messages  following apply. This message  is issue
°            for  unit record  devices, SCAN0118  is  issued for  tape/D
°            devices.

°  SCAN0118 UCB XXXXXXXX DEVICE XXXX VOLUME CCCCCC

°            This message  is a header describing  the device and  UCB t
°            which the messages  following apply. This message  is issue
°            for  tape/DA devices,  SCAN0117 is  issued  for unit  recor
°            devices.

¸

°
¯
°                                                                 PAGE 2

°  SCAN0119 MORE THEN 1917 UCBS

°            More than 1917  unique UCB addresses have been  found in th
°            UCB  look-up  table.  The  UCB  look-up  table  is  probabl
°            garbage. Only the first 1917 UCBs will be checked.

°  SCAN0120 OTHERS WILL BE IGNORED.

°            Refer to message SCAN0119.

°  SCAN0124 NO FF AT UCB+2

°            The UCB described  by previous message SCAN0117/0118  has n
°            UCB  identifier.  The  UCB address  (obtained  from the  UC
°            look-up table) may be invalid.

°  SCAN0121 INVALID SRB POINTER IN IOSB - XXXXXXXX

°            The  SRB pointer  in  an IOSB  is not  in  the NUCLEUS,  th
°            Private Area,CSA  or SQA, or it  is not on a  word boundary
°            Control block trace follows.

°  SCAN0123 DDD REQUESTS QUEUED

°            The  UCB identified  by message  SCAN0017  has DDD  request
°            queued  to  it.  This  number  is  obtained from  UCB  fiel
°            UCBCNT.

°  SCAN0150  UCBCHGS BIT  IS  ON IN  UCBSTAT -  CHANGING  FROM ONLINE  T
°  OFFLINE

°            This message refers to the UCB described by message SCAN011
°            or SCAN0118.

°  SCAN0151  UCBUNLD BIT  IS  ON IN  UCBSTAT  -  UNLOAD OPERATOR  COMMAN
°  PENDING

°            This message refers to the UCB described by message SCAN011
°            or SCAN0118.

°  SCAN0152 UCBBSY BIT IS ON IN UCBFL1 - DEVICE IS BUSY

°            This message refers to the UCB described by message SCAN011
°            or SCAN0118.

¸
°
¯
°                                                                 PAGE 2

°  SCAN0153 UCBPST BIT IS ON IN UCBFL1 - POST FLAG

°            This message refers to the UCB described by message SCAN011
°            or SCAN0118.

°  SCAN0154 UCBPSNS BIT IS ON IN UCBFL1 - PENDING SENSE OPERATION

°            This message refers to the UCB described by message SCAN011
°            or SCAN0118.

°  SCAN0155 UCBCUB BIT IS ON IN UCBFL1 - CONTROL UNIT BUSY

°            This message refers to the UCB described by message SCAN011
°            or SCAN0118.

°  SCAN0156 UCBSAP  BIT IS ON IN  UCBFL1 - STAND-ALONE PROCESS  ON DEVIC
°  ACTIVE

°            This message refers to the UCB described by message SCAN011
°            or SCAN0118.

°  SCAN0157  UCBACTV BIT  IS ON  IN UCBFL1  - CHANNEL  PROGRAM ACTIVE  O
°  DEVICE

°            This message refers to the UCB described by message SCAN011
°            or SCAN0118.

°  SCAN0158 UCBQISCE BIT IS ON IN UCBFL1 - DEVICE QUIESCED

°            This message refers to the UCB described by message SCAN011
°            or SCAN0118.

°  SCAN0159 UCBIORST BIT IS ON IN UCBFLB

°            This message refers to the UCB described by message SCAN011
°            or SCAN0118.

°  SCAN0160 UCBASNS BIT IS ON IN UCBFLB - SENSE ACTIVE ON DEVICE

°            This message refers to the UCB described by message SCAN011
°            or SCAN0118.

°  SCAN0161 UCBPST BIT IS ON IN UCBFLB - SENSE POST INDICATOR

°            This message refers to the UCB described by message SCAN011
°            or SCAN0118.

°
¯
°                                                                 PAGE 2

°  SCAN0162 UCBRESVH BIT IS ON IN UCBFLB - DEVICE RESERVED

°            This message refers to the UCB described by message SCAN011
°            or SCAN0118.

°  SCAN0163 UCBCRHSN BIT IS ON IN UCBFLB

°            This message refers to the UCB described by message SCAN011
°            or SCAN0118.

°  SCAN0164 UCBATTP BIT IS ON IN UCBFLC - ATTENTION PENDING

°            This message refers to the UCB described by message SCAN011
°            or SCAN0118.

°  SCAN0167 UCBICBT BIT IS  ON IN UCBFLC - CHANNEL END  AND/OR DEVICE EN
°  OR MOUNT PENDING

°            This message refers to the UCB described by message SCAN011
°            or SCAN0118.

°  SCAN0168 UCBDDRSW BIT IS ON IN UCBFLC - DDR SWITCH PENDING

°            This message refers to the UCB described by message SCAN011
°            or SCAN0118.

°  SCAN0169 UCBDAVV BIT IS ON IN UCBFLC - DAVV IN CONTROL

°            This message refers to the UCB described by message SCAN011
°            or SCAN0118.

°  SCAN0170 UCBWDAV BIT IS ON IN UCBFLC - DAVV WAITING FOR MOUNT

°            This message refers to the UCB described by message SCAN011
°            or SCAN0118.

°  SCAN0171 INVALID PCCA POINTER IN PCCAVT - XXXXXXXX

°            The PCCA Vector Table has a PCCA pointer which is not in SQ
°            or is not on a word boundary.  Control block trace follows.

°  SCAN0172 UNABLE TO ACCESS CVTPCCAT AT XXXXXXXX

°            The CVT  field CVTPCCAT (pointer  to the PCCA  Vector Table
°            cannot be accessed because it is  not in the dump.  Checkin
°            of the CATs will be terminated.

°
¯
°                                                                 PAGE 2

°  SCAN0173 UNABLE TO ACCESS PCCAVT AT XXXXXXXX

°            The PCCA Vector  Table cannot be accessed because  it is no
°            in the dump.  Checking of the CATs will be terminated.

°  SCAN0180 UNABLE TO ACCESS CVTILCH AT XXXXXXXX

°            CVT field  CVTILCH cannot be accessed  because it is  not i
°            the  dump.  Logical  Channel  and  associated control  bloc
°            checking cannot be performed.

°  SCAN0181 INVALID IOQE POINTER IN LCH ENTRY - XXXXXXXX

°            A Logical Channel Entry has an  IOQE pointer which is not o
°            a word  boundary, or  is not  in SQA.   Control block  trac
°            follows.

°  SCAN0182 INVALID CHAIN POINTER IN LAST IOQE - XXXXXXXX

°            The last IOQE  chained from a Logical Channel  does not hav
°            an IOQLNK field of X'FFFFFF'.  The  address of the last IOQ
°            is determined from  the LCHLST field in  the Logical Channe
°            Entry.  Control block trace follows.

°  SCAN0183 INVALID UCB POINTER IN IOSB - XXXXXXXX

°            Following the chain - Logical Channel  Entry -> IOQE -> IOS
°            -> UCB, AMDPSCAN found a UCB address which is not in the UC
°            look-up table.  Control block trace follows.

°  SCAN0184 IOSB FOUND ON WRONG LOGICAL CHANNEL

°            Following the chain - Logical Channel  Entry -> IOQE -> IOS
°            ->UCB, AMDPSCAN  found an IOSB  whose Logical  Channel inde
°            (UBCLCI)  was not  the same  as  the index  for the  Logica
°            Channel  Entry   being  processed.    Control  block   trac
°            follows.

°  SCAN0185 INVALID IOQE CHAIN POINTER - XXXXXXXX

°            An IOQE  queued from a Logical  Channel Entry has  an IOQLN
°            field  which is  an address  outside SQA  or not  on a  wor
°            boundary.
°                If  the chain  pointer printed  is  X'FFFFFF', then  th
°            previous IOQE  was the  last on the  chain, but  the Logica
°            Channel Entry field  LCHLST (pointer to the  last IOQE) doe
°            not point to it.  Control block trace follows.
¸
°
¯
°                                                                 PAGE 2

°  SCAN0186 UNABLE TO ACCESS LCHENTRY AT XXXXXXXX

°            A Logical Channel Entry cannot be accessed because it is no
°            in the dump.   Logical Channel Entry and  associated contro
°            block checking will be terminated.

°  SCAN0187 LOGICAL  CHANNEL XX  FOR PHYSICAL  CHANNELS X  AND X  HAS DD
°  REQUESTS QUEUED

°            There are  DDD IOQEs  queued to logical  channel XX.  If th
°            physical channel is  'UNKNOWN', the Test Channel  List coul
°            not be accessed or was found to be invalid. Message SCAN011
°            or SCAN0189 will have been printed in the latter case.

°  SCAN0188 INVALID TCH LIST POINTER IN LCH ENTRY - XXXXXXXX

°            A  Logical Channel  Entry has  a Test  Channel List  pointe
°            which is not  in the NUCLEUS or  is not on a  word boundary
°            Control block trace follows.

°  SCAN0189 INVALID LCHCHCNT FIELD IN LCH ENTRY AT - XXXXXXXX

°            A Logical Channel Entry has an LCHCHCNT field (the number o
°            physical channels associated with this logical channel) tha
°            is zero or greater than 2.  Control block trace follows.

°  SCAN0190 INVALID TCH LIST AT XXXXXXXX

°            A Test Channel List has more or less channels than indicate
°            in the Logical Channel Entry  field LCHCHCNT.  Control bloc
°            trace follows.

°  SCAN0191 CHANNEL BUSY BIT IS ON IN CAT FOR CHANNEL XX, CPU XX

°            Self-explanatory.

°  SCAN0192 UNABLE TO ACCESS CAT AT XXXXXXXX

°            A Channel Availability  Table cannot be accessed  because i
°            is not in the dump.
¸
¸
¸

°
¯
°                                                                 PAGE 2

            ________ ____ ________
°            MESSAGES FROM AMDPSVSM


°  SCAN0200 LOOP IN FQE CHAIN

°            Self-explanatory.  Control block trace follows.

°  SCAN0201 REGION BIT IS ON IN FQE AT XXXXXX

°            Region bit is  on in FQE when  it should be off  for subpoo
°            being checked.  Control block trace follows.

°  SCAN0202 REGION BIT IS OFF IN FQE AT XXXXXX

°            Region bit  is off  in FQE  when it  should be  on for  thi
°            subpool.  Control block trace follows.

°  SCAN0203 INVALID FQELNTH FIELD IN FQE AT XXXXXX

°            The FQELNTH  field is not a  multiple of 8 or  is impossibl
°            large.  Control block trace follows.

°  SCAN0204 FQE ADDRESS IS NOT LOWER THAN PREVIOUS - XXXXXX

°            Non-region FQEs should be chained  in descending order.  Th
°            chain being checked is not.  Control block trace follows.

°  SCAN0205 FQAREA IS NOT LOWER THAN PREVIOUS. XXXXXX

°            Chains  of non-region  FQEs  should  have descending  FQARE
°            addresses. The chain  being checked has not.   Control bloc
°            trace follows.

°  SCAN0206 INVALID PFSTCPAB FIELD IN GDA AT XXXXXX

°            GDA  field PFSTCPAB  should  point to  the  first cell  poo
°            anchor block, but it is an address that is not in SQA or no
°            on a word boundary.  Control block trace follows.

°  SCAN0207 INVALID CPABCPID IN CPAB AT XXXXXX

°            GDA field PFSTCPAB points to the first CPAB. The fourth byt
°            of  the  CPABCPID field  should  be  X'00'  but it  is  not
°            Control block trace follows.
¸
°
¯
°                                                                 PAGE 3

°  SCAN0208 LOOP IN DQE CHAIN

°            Self-explanatory.  Control block trace follows.

°  SCAN0209 INVALID DQELNTH FIELD IN DQE AT XXXXXX

°            The DQE at XXXXXX has a block  length that is not a multipl
°            of 4k.  Control block trace follows.

°  SCAN0210 INVALID ASCBQSVC FIELD IN ASCB AT XXXXXX

°            ASCBQSVC is the  cell pool ID for the SVRB  cell pool.  Thi
°            field multiplied by 4 is the address of a CPAB.  However th
°            address  is  not  in  SQA  or  LSQA.   Control  block  trac
°            follows.

°  SCAN0214 INVALID CPABCPID FIELD IN CPAB AT XXXXXX

°            The ASCB  field ASCBQSVC is  the cell  pool ID for  the SVR
°            cell pool.  This field times 4 is the address of a CPAB. Th
°            CPABCPID  field  in the  CPAB  should  be  the same  as  th
°            ASCBQSVC. It is not.  Control block trace follows.

°  SCAN0211 LOOP IN SPQE CHAIN.

°            Self-explanatory.  Control block trace follows.

°  SCAN0212 INVALID SIZE FIELD IN FBQE AT XXXXXX

°            The FBQE at XXXXXX  has a SIZE field that is  not a multipl
°            of 4k.  Control block trace follows.

°  SCAN0213 LOOP IN FBQE CHAIN

°            Self-explanatory.  Control block trace follows.

°  SCAN0215 LOOP IN PQE CHAIN

°            Self-explanatory.  Control block trace follows.

°  SCAN0216 INVALID PQE CHAIN

°            PQEs are double  chained. That is they  are chained forward
°            and backwards.  This message is printed  when a PQE is foun
°            with a backward pointer that does  not point to the previou
°            PQE.  Control block trace follows.

°
¯
°                                                                 PAGE 3

°  SCAN0218 INVALID PQEBFBWE FIELD IN PQE AT XXXXXX

°            FBQEs are chained from PQEs and the last FBQE points back t
°            the PQE. The  PQE also contains a pointer  (PQEBFBQE) to th
°            last FBQE.  This message is printed if the PQEBFBQE does no
°            point to the last FBQE.  Control block trace follows.

°  SCAN0219 INVALID PQESIZE FIELD IN PQE AT XXXXXX

°            The PQE at XXXXXX has a PQESIZE field that is not a multipl
°            of 4k.  Control block trace follows.

°  SCAN0220 INVALID FQE ADDRESS - XXXXXX

°            While  following the  SPQE  -> DQE  ->  FQE  chain for  CSA
°            anchored  from the  GDA field  CSAPQEP, an  FQE address  wa
°            found that was not in SQA  or not on a double-word boundary
°            Control block trace follows.

°  SCAN0221 INVALID FQAREA FIELD IN FQE AT XXXXXX

°            While  following the  SPQE  -> DQE  ->  FQE  chain for  CSA
°            anchored from the GDA field CSAPQEP,  an FQE was found whos
°            FQAREA was  an address not  in CSA  or not on  a double-wor
°            boundary.  Control block trace follows.

°  SCAN0222 INVALID DQE ADDRESS XXXXXX

°            While following the SPQE -> DQE chain for CSA, anchored fro
°            the GDA field CSAPQEP, a DQE  address was found that was no
°            in SQA or not on a double-word boundary.

°  SCAN0223 INVALID DQEBLKAD FIELD IN DQE - XXXXXX

°            While following the SPQE -> DQE chain for CSA, anchored fro
°            the GDA  field CSAPQEP, a DQE  block address was  found tha
°            was not in CSA or not on a 4k boundary.  Control block trac
°            follows.

°  SCAN0224 INVALID SPQE ADDRESS - XXXXXX

°            While following  the SPQE chain  for CSA, anchored  from th
°            GDA field  CSASPQEP, an SPQE address  was found that  not i
°            SQA or not  on a double-word boundary.   Control block trac
°            follows.

¸
°
¯
°                                                                 PAGE 3

°  SCAN0225 INVALID FBQE ADDRESS - XXXXXX

°            While following the PQE -> FBQE  chain for CSA anchored fro
°            the GDA  field CSAPQEP, an FBQE  address was found  that wa
°            not in SQA  or not on a double-word  boundary. Control bloc
°            trace follows.

°  SCAN0226 INVALID FBQAREA FIELD IN FBQE AT XXXXXX

°            While following the PQE -> FBQE chain for CSA, anchored fro
°            the GDA field  CSAPQEP, an FBQE was found  whose FBQAREA wa
°            an address  not in  CSA or  not on  a 4k  boundary.  Contro
°            block trace follows.

°  SCAN0227 INVALID PQE ADDRESS - XXXXXX

°            While following the  PQE chain, anchored from  the GDA fiel
°            CSAPQEP, a PQE address was found that  was not in SQA or no
°            on a double-word boundary. Control block trace follows.

°  SCAN0228 INVALID PQEREGN FIELD IN PQE AT XXXXXX

°            While following  the PQE chain  anchored from the  GDA fiel
°            CSAPQEP, a PQE was found whose  PQEREGN field was an addres
°            not in  CSA or  not on  a 4k  boundary. Control  block trac
°            follows.

°  SCAN0229 INVALID FBQE ADDRESS - XXXXXX

°            While  following  the  PQE  -> FBQE  chain  for  V=R  space
°            anchored  from the  GDA field  VRPQEP, an  FPQE address  wa
°            found that was not in SQA  or not on a double-word boundary
°            Control block trace follows.

°  SCAN0231 INVALID PQE ADDRESS - XXXXXX

°            While following the  PQE chain for V=R  space, anchored fro
°            the GDA field VRPQEP, an FBQE address was found that was no
°            in SQA or not on a double-word boundary. Control block trac
°            follows.

°  SCAN0233 VVVRFLAG IS OFF IN PQE AT XXXXXX - SHOULD BE ON.

°            PQE is chained from GDA field VRPQEP, which is for V=R spac
°            and therefore it should have the VVVRFLAG on.  Control bloc
°            trace follows.


°
¯
°                                                                 PAGE 3

°  SCAN0234 INVALID PQEREGN (REAL) FIELD IN PQE AT XXXXXX

°            A PQE  was found  that had the  VVVRFLAG bit  on, indicatin
°            that it was for V=R space.  However the PQEREGN field was a
°            address that  was; (a)  in the  NUCLEUS or  (b) not  in rea
°            storage or  (c) not on a  4k boundary.  Control  block trac
°            follows.

°  SCAN0235 INVALID FBQAREA (REAL) FIELD IN FBQE AT XXXXXX

°            A PQE  was found  that had the  VVVRFLAG bit  on, indicatin
°            that it was  for V=R space. However an FBQE  chained from i
°            had an  FBQAREA field that was  an address that was;  (a) i
°            the NUCLEUS or  (b) not in real  storage or (c) not  on a 4
°            boundary.  Control block trace follows.

°  SCAN0240 INVALID FQE ADDRESS XXXXXX

°            While  following the  SPQE  -> DQE  ->  FQE  chain for  SQA
°            anchored from  the GDA  field SQASPQEP,  an FQE  address wa
°            found that was not in SQA  or not on a double-word boundary
°            Control block trace follows.

°  SCAN0241 INVALID DQE ADDRESS XXXXXX

°            While following the SPQE -> DQE chain, anchored from the GD
°            field SQASPQEP, a DQE address was  found that was not in SQ
°            or  not on  a  double-word  boundary.  Control  block  trac
°            follows.

°  SCAN0242 INVALID DQEBLKAD FIELD IN DQE AT XXXXXX

°            While following the SPQE -> DQE chain for SQA, anchored fro
°            the GDA field  SQASPQEP, a DQE was found  whose DQEBLKAD wa
°            not in SQA  or not on a double-word  boundary. Control bloc
°            trace follows.

°  SCAN0243 INVALID SPQE ADDRESS - XXXXXX

°            While following  the SPQE chain  for SQA, anchored  from th
°            GDA field SQASPQEP,  an SPQE address was found  that was no
°            in SQA or not on a double-word boundary. Control block trac
°            follows.

°  SCAN0244 LOOP IN QUICK CELL CHAIN

°            While checking  the cell  pool anchor  blocks and  cell poo
°            anchor  block  extensions  pointed  to   by  the  GDA  fiel

°
¯
°                                                                 PAGE 3

°            PFSTCPAB,  a quick  cell chain  pointed to  by CPABFACP  wa
°            found with a loop in it.  Control block trace follows.

°  SCAN0245 INVALID QUICK CELL CHAIN POINTER - XXXXXX

°            While checking  the cell  pool anchor  blocks and  cell poo
°            anchor  block  extensions  pointed  to   by  the  GDA  fiel
°            PFSTCPAB, a quick  cell was found with a  chain pointer tha
°            was not in SQA or not on  a word boundary, or was not withi
°            the cell pool extents described  by CPABSTAD and CPABENAD i
°            the CPAB.  Control block trace follows.

°  SCAN0246 INVALID CPABFACP FIELD IN CPAB/E AT XXXXXX

°            While checking  the cell  pool anchor  blocks and  cell poo
°            anchor  block  extensions  pointed  to   by  the  GDA  fiel
°            PFSTCPAB, a  CPAB/E was found  with a CPABFACP  field (quic
°            cell pointer)  that was an  address not in  SQA or not  on
°            word boundary.  Control block trace follows.

°  SCAN0247 LOOP IN QUICK CELL CHAIN

°            While checking  the cell  pool anchor  blocks and  cell poo
°            anchor block  extensions pointed to  by ASCB  field ASCBQSV
°            (times 4), which  is the SVRB cell pool, a  quick cell chai
°            pointed to by CPABFACP was found with a loop in it.  Contro
°            block trace follows.

°  SCAN0248 INVALID QUICK CELL CHAIN POINTER - XXXXXX

°            While checking  the cell  pool anchor  blocks and  cell poo
°            anchor block  extensions pointed to  by ASCB  field ASCBQSV
°            (times 4),  which is the  SVRB cell  pool, a quick  cell wa
°            found with a  chain pointer that was  not in SQA or  LSQA o
°            not on  a word boundary,  or was  not within the  within th
°            cell pool extents described by  CPABSTAD and CPABENAD in th
°            CPAB.  Control block trace follows.

°  SCAN0249 INVALID CPABFACP FIELD IN CPAB/E AT XXXXXX

°            While checking  the cell  pool anchor  blocks and  cell poo
°            anchor block  extensions pointed to  by ASCB  field ASCBQSV
°            (times 4), which  is the SVRB cell pool, a  CPAB/E was foun
°            with  a CPABFACP  field  (quick cell  pointer)  that was  a
°            address  not in  SQA  or LSQA  or not  on  a word  boundary
°            Control block trace follows.

¸
°
¯
°                                                                 PAGE 3

°  SCAN0250 INVALID AQE ADDRESS - XXXXXX

°            While  following the  AQE  chain,  anchored from  TCB  fiel
°            TCBAQE, an AQE address was found that was not in LSQA or SQ
°            or  not  on  a double-word  boundary.  Control  block  trac
°            follows.

°  SCAN0251 INVALID AQELEN FIELD IN AQE AT XXXXXX

°            While  following the  AQE  chain,  anchored from  TCB  fiel
°            TCBAQE, an AQE was found with an AQELEN field that was not
°            multiple of 8.  Control block trace follows.

°  SCAN0252 INVALID FQE ADDRESS - XXXXXX

°            While following the SPQE -> DQE  -> FQE chain, anchored fro
°            TCB field TCBSWA,  an FQE address was found that  was not i
°            LSQA or not  on a double-word boundary.  Control block trac
°            follows.

°  SCAN0253 INVALID FQAREA FIELD IN FQE AT XXXXXX

°            While following the SPQE -> DQE  -> FQE chain, anchored fro
°            TCB field TCBSWA, an FQE was found whose FQAREA field was a
°            address not  in PVTUSER  or not  on a  double-word boundary
°            Control block trace follows.

°  SCAN0254 INVALID DQE ADDRESS - XXXXXX

°            While following  the SPQE  -> DQE  chain, anchored  from TC
°            field TCBSWA, a  DQE address was found that was  not in LSQ
°            or  not  on  a double-word  boundary.  Control  block  trac
°            follows.

°  SCAN0255 INVALID DQEBLKAD FIELD IN DQE AT XXXXXX

°            While following  the SPQE  -> DQE  chain, anchored  from TC
°            field TCBSWA,  a DQE was found  whose DQEBLKAD field  was a
°            address not  in PVTUSER  or not on  a 4k  boundary.  Contro
°            block trace follows.

°  SCAN0256 INVALID SPQE ADDRESS - XXXXXX

°            While  following the  SPQE chain,  anchored  from TCB  fiel
°            TCBSWA, an  SPQE address was found  that was not in  LSQA o
°            not on a double-word boundary. Control block trace follows.


°
¯
°                                                                 PAGE 3

°  SCAN0257 INVALID FQE ADDRESS - XXXXXX

°            While following the SPQE -> DQE  -> FQE chain, anchored fro
°            TCB field TCBMSS,  an FQE address was found that  was not i
°            LSQA or not  on a double-word boundary.  Control block trac
°            follows.

°  SCAN0258 INVALID FQAREA FIELD IN FQE AT XXXXXX

°            While following the SPQE -> DQE  -> FQE chain, anchored fro
°            TCB field TCBMSS, an FQE was found whose FQAREA field was a
°            address not  in PVTUSER  or not  on a  double-word boundary
°            Control block trace follows.

°  SCAN0259 INVALID DQE ADDRESS - XXXXXX

°            While following  the SPQE  -> DQE  chain, anchored  from TC
°            field TCBMSS, a  DQE address was found that was  not in LSQ
°            or  not  on  a double-word  boundary.  Control  block  trac
°            follows.

°  SCAN0260 INVALID DQEBLKAD FIELD IN DQE AT XXXXXX

°            While following  the SPQE  -> DQE  chain, anchored  from TC
°            field TCBMSS,  a DQE was found  whose DQEBLKAD field  was a
°            address not  in PVTUSER  or not on  a 4k  boundary.  Contro
°            block trace follows.

°  SCAN0261 INVALID SPQE ADDRESS - XXXXXX

°            While  following the  SPQE chain,  anchored  from TCB  fiel
°            TCBMSS, an  SPQE address was found  that was not in  LSQA o
°            not on a double-word boundary. Control block trace follows.

°  SCAN0262 INVALID FQE ADDRESS - XXXXXX

°            While following the SPQE -> DQE  -> FQE chain, anchored fro
°            TCB field TCBUKYSP, an FQE address was found that was not i
°            LSQA or not  on a double-word boundary.  Control block trac
°            follows.

°  SCAN0263 INVALID FQAREA FIELD IN FQE AT XXXXXX

°            While following the SPQE -> DQE  -> FQE chain, anchored fro
°            TCB field TCBUKYSP, an FQE was  found whose FQAREA field wa
°            an address not in PVTUSER or  not on a double-word boundary
°            Control block trace follows.
¸
°
¯
°                                                                 PAGE 3

°  SCAN0264 INVALID DQE ADDRESS - XXXXXX

°            While following  the SPQE  -> DQE  chain, anchored  from TC
°            field TCBUKYSP, a DQE address was found that was not in LSQ
°            or  not  on  a double-word  boundary.  Control  block  trac
°            follows.

°  SCAN0265 INVALID DQEBLKAD FIELD IN DQE AT XXXXXX

°            While following  the SPQE  -> DQE  chain, anchored  from TC
°            field TCBUKYSP, a DQE was found  whose DQEBLKAD field was a
°            address  not  in Private  Area  or  not  on a  4k  boundary
°            Control block trace follows.

°  SCAN0266 INVALID SPQE ADDRESS - XXXXXX

°            While  following the  SPQE chain,  anchored  from TCB  fiel
°            TCBUKYSP, an SPQE address was found  that was not in LSQA o
°            not on a double-word boundary. Control block trace follows.

°  SCAN0267 ASCBLDA IS INVALID - XXXXXX

°            The LDA pointer in an ASCB is an address that is not in LSQ
°            or  not  on  a double-word  boundary.  Control  block  trac
°            follows.

°  SCAN0268 INVALID FQE ADDRESS - XXXXXX

°            While following the SPQE -> DQE  -> FQE chain, anchored fro
°            LDA field LSQAPTR, an FQE address  was found that was not i
°            the Private Area  or not on a  double-word boundary. Contro
°            block trace follows.

°  SCAN0269 INVALID DQE ADDRESS - XXXXXX

°            While following  the SPQE  -> DQE  chain, anchored  from LD
°            field LSQAPTR, a  DQE address was found that was  not in th
°            Private Area or not on a double-word boundary. Control bloc
°            trace follows.

°  SCAN0270 INVALID DQEBLKAD FIELD IN DQE AT XXXXXX

°            While following  the SPQE  -> DQE  chain, anchored  from LD
°            field LSQAPTR, a  DQE was found whose DQEBLKAD  field was a
°            address not  in the Private  Area or  not on a  4k boundary
°            Control block trace follows.


°
¯
°                                                                 PAGE 3

°  SCAN0271 INVALID SPQE ADDRESS - XXXXXX

°            While  following the  SPQE chain,  anchored  from LDA  fiel
°            LSQAPTR,  an SPQE  address was  found  that was  not in  th
°            Private Area or not on a double-word boundary. Control bloc
°            trace follows.

°  SCAN0272 INVALID FBQE ADDRESS - XXXXXX

°            While following  the PQE  -> FBQE  chain, anchored  from LD
°            field LDASRPQE,  an FBQE address was  found that was  not i
°            LSQA or not on a  double-word boundary.  Control block trac
°            follows.

°  SCAN0273 INVALID FBQAREA FIELD IN FBQE AT XXXXXX

