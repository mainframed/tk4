                ***** DISASSEMBLER *****
*
*
*  DISASM IS A ONE-PASS DISASSEMBLER WHICH PRODUCES AN ASSEMBLER
*  LANGUAGE SOURCE PROGRAM FROM A CSECT WITHIN A LOAD MODULE.
*  CONTROL CARDS PERMIT SPECIFICATION OF AREAS CONTAINING NO
*  INSTRUCTIONS, ALLOW BASE REGISTERS TO BE PROVIDED SO THAT
*  SYMBOLIC LABELS MAY BE CREATED DURING DISASSEMBLY, AND
*  DEFINITION OF DSECTS TO BE USED DURING DISASSEMBLY. CONDITIONAL
*  BRANCH INSTRUCTIONS USE THE EXTENDED MNEMONICS, WHERE POSSIBLE,
*  AND EXPLICIT REGISTERS ARE DENOTED BY R0, R1, ... R15. INFORMATIONAL
*  COMMENTS ARE GIVEN ON SVC'S, AND VARIOUS BAL INSTRUCTIONS TO AID
*  IN CREATING A DOCUMENTED SOURCE PROGRAM.
*
*  1. JCL REQUIREMENTS:
*        A. EXEC CARD:        TO EXECUTE PGM=DISASM. A PARM FIELD MAY
*                             BE SPECIFIED IF FLOATING POINT AND/OR
*                             PRIVILEGED INSTRUCTIONS ARE TO BE
*                             FOUND IN THE MODULE.
*        B. STEPLIB DD CARD:  OPTIONAL, SPECIFY THE PDS CONTAINING
*                             THE MODULE DISASM.
*        C. LOADLIB DD CARD:  OPTIONAL, SPECIFY PDS CONTAINING THE
*                             MODULES DISASM1 AND DISASM2, IF OTHER THAN
*                             SYS1.LINKLIB OR STEPLIB.
*        D. SYSLIB DD CARD:   SPECIFY PDS CONTAINING THE MODULE TO BE
*                             DISASSEMBLED.
*        E. SYSPRINT DD CARD: OPTIONAL, SPECIFY THE PRINTED      FIX***
*                             OUTPUT DATASET. BLKSIZE MUST BE    FIX***
*                             SPECIFIED AS A MULTIPLE OF 121.    FIX***
*                             RECFM=FBA,LRECL=121 IS HARD CODED. FIX***
*        F. SYSPUNCH DD CARD: OPTIONAL, SPECIFY PRINTED OUTPUT   FIX***
*                             DATASET. BLKSIZE MUST BE SPECIFIED FIX***
*                             AS A MULTIPLE OF 80.               FIX***
*                             RECFM=FB,LRECL=80 IS HARD CODED.   FIX***
*        G. SYSIN DD CARD:    CONTAINS CONTROL CARDS. THE MODULE-CSECT
*                             CARD IS REQUIRED. BLKSIZE MUST BE A
*                             MULTIPLE OF 80. RECFM=FB,LRECL=80 IS
*                             HARD-CODED.
*
*    JCL EXAMPLE: DISASSEMBLE CSECT IECIOSCN IN MODULE IEANUC01,
*                  WHICH IS IN THE PDS SYS1.NUCLEUS. THE MODULES
*                  DISASM, DISASM1, AND DISASM2 ARE ALL IN THE PDS
*                  SYS1.TECHLOAD. A PRINTED LISTING IS TO BE MADE,
*                  AND THE SOURCE PROGRAM OUTPUT WILL BE PLACED IN
*                  THE SEQUENTIAL DATASET USER02.IECIOSCN.ASM.
*
*        //DISASM EXEC PGM=DISASM
*        //STEPLIB DD DSN=SYS1.TECHLOAD,DISP=SHR
*        //SYSPRINT DD SYSOUT=A,DCB=BLKSIZE=121
*        //SYSLIB DD DSN=SYS1.NUCLEUS,DISP=SHR
*        //SYSPUNCH DD DSN=USER02.IECIOSCN.ASM,DISP=(,CATLG),
*                      UNIT=SYSTS,DCB=18960,
*                      SPACE=(TRK,(5,2),RLSE)
*        //SYSIN DD *
*        IEANUC01 IECIOSCN
*
*
*
*  2. PARM FIELD ON THE EXEC CARD: OMIT THE PARM FIELD, UNLESS
*          FLOATING POINT AND/OR PRIVILEGED INSTRUCTIONS ARE TO
*          BE FOUND IN THE CSECT BEING DISASSEMBLED. WHEN THE PARM
*          FIELD IS NOT SPECIFIED, ENTRIES FOR THE PRIVILEGED AND
*          FLOATING POINT INSTRUCTIONS ARE ERASED FROM THE INTERNAL
*          INSTRUCTION TABLES USED DURING DISASSEMBLY. VALID PARM
*          FIELDS ARE:
*            PARM=(SUPVR)     ASSEMBLE PRIVILEGED INSTRUCTIONS
*            PARM=(FLTPT)     ASSEMBLE FLOATING POINT INSTRUCTIONS
*            PARM=(SUPVR,FLTPT) ASSEMBLE BOTH PRIVILEGED AND
*                             FLOATING POINT INSTRUCTIONS.
*
*
*  3. CONTROL CARDS ENTERED IN THE SYSIN DATASET. DATA IS
*                   CONTAINED ONLY IN COLUMNS 1-72. COLUMNS
*                   73-80 MAY BE USED FOR ANY DESIRED PURPOSE.
*                   IN ADDITION, COLUMNS BEYOND THE LAST
*                   SPECIFIED MAY BE USED FOR ANY PURPOSE.
*                   LEADING ZEROS MUST BE INCLUDED IN ALL
*                   FIELDS GIVING HEX OR DECIMAL DATA. NAME
*                   FIELDS MUST BE LEFT JUSTIFIED WITH
*                   TRAILING BLANKS. HEX FIELDS MAY CONTAIN
*                   ONLY THE HEX DIGITS 0-9 AND A-F, WHILE
*                   DECIMAL FIELDS MAY CONTAIN ONLY DIGITS 0-9.
*                   THE MODULE-CSECT CARD MUST BE THE FIRST
*                   CARD IN THE INPUT STREAM. DSECT DEFINITIONS
*                   MAY NOT INCLUDE ANY OTHER CONTROL CARDS.
*                   USING CARDS FOR DSECTS MUST BE ENTERED AT
*                   SOME POINT AFTER THE DSECT DEFINITION.
*                   DATA-ONLY CARDS AND PROGRAM USING CARDS
*                   MAY BE ENTERED IN ANY ORDER EXCEPT
*                   WITHIN DSECT DEFINITIONS.
*
*
*     A. MODULE-CSECT CARD (REQUIRED), MUST BE THE FIRST CARD IN
*                     THE SYSIN STREAM. SPECIFIES THE MODULE NAME
*                     AND CSECT NAME. MODULE NAME IS REQUIRED, AND
*                     MUST NAME AN ENTRY IN THE DIRECTORY OF THE
*                     PDS SPECIFIED BY THE SYSLIB DD CARD. CSECT
*                     NAME IS OPTIONAL. IF SPECIFIED, THE NAMED CSECT
*                     MUST EXIST IN THE MODULE. IF OMITTED, THE
*                     CSECT WITH ESDID=0001 IS DISASSEMBLED.
*        FORMAT: FREE-FORM, WITH MODULE NAME PRECEDING CSECT NAME.
*                AT LEAST ONE BLANK MUST SEPARATE MODULE NAME AND
*                CSECT NAME. THE NAMES MAY BE SURROUNDED BY ANY NUMBER
*                OF BLANKS.
*                FOR EXAMPLE, SEE THE JCL EXAMPLE.
*
*
*
*     B. DATA-ONLY CARD (OPTIONAL), USED TO DESCRIBE AREAS OF THE
*                  CSECT BEING DISASSEMBLED WHICH CONTAIN NO
*                  INSTRUCTIONS. USE OF THIS CARD ELIMINATES
*                  CREATION OF INSTRUCTIONS FROM CONSTANT DATA.
*                  UP TO 256 DATA-ONLY CARDS MAY BE ENTERED. THESE
*                  CARDS MAY OCCUR ANYWHERE IN THE SYSIN STREAM
*                  AFTER THE MODULE-CSECT CARD, BUT NOT WITHIN
*                  A DSECT DEFINITION SET.
*        FORMAT:
*                COL  1-4  : LITERAL 'DATA'
*                COL   5   : BLANK
*                COL  6-11 : OFFSET TO BEGINNING OF AREA IN HEX
*                COL   12  : BLANK
*                COL 13-18 : OFFSET TO END OF AREA IN HEX
*
*
*
*     C. DSECT DEFINITIONS (OPTIONAL). A DSECT IS DEFINED BY A
*                HEADER CARD FOLLOWED BY A VARIABLE NUMBER OF
*                FIELD DEFINITION CARDS (UP TO 9999 OF THEM).
*                NO OTHER CONTROL CARD MAY BE ENTERED WITHIN A
*                DSECT DEFINITION. UP TO 256 DSECT DEFINITIONS
*                MAY BE ENTERED.
*
*        DSECT HEADER CARD FORMAT:
*             COL 1-8    : DSECT NAME
*             COL 9      : BLANK
*             COL 10-14  : LITERAL 'DSECT'
*             COL 15     : BLANK
*             COL 16-19  : NUMBER OF FIELD CARDS TO FOLLOW (DECIMAL)
*
*        DSECT FIELD CARD FORMAT:
*             COL 1-8    : FIELD NAME
*             COL 9      : BLANK
*             COL 10-13  : OFFSET TO LEFT END OF FIELD (DECIMAL)
*                          MAXIMUM OFFSET IS 4095
*             COL 14     : BLANK
*             COL 15-17  : LENGTH OF FIELD IN BYTES (DECIMAL)
*                          MAXIMUM LENGTH IS 256
*
*
*
*     D. ULABL CARDS. THESE CARDS DEFINE USER LABELS TO BE PLACED
*                   ON STATEMENTS WITHIN THE PROGRAM. IF PROGRAM
*                   BASE REGISTERS ARE SET UP WITH USING CARDS,
*                   THESE WILL ALSO BE GENERATED AS SYMBOLIC
*                   OPERANDS ON INSTRUCTIONS. FORMAT IS:
*
*             COL  1-5   : LITERAL 'ULABL'
*             COL   6    : BLANK
*             COL  7-14  : LABEL NAME
*             COL  15    : BLANK
*             COL 16-21  : OFFSET TO LEFT END OF FIELD, IN HEX.
*             COL  22    : BLANK
*             COL 23-25  : LENGTH OF FIELD IN DEC. 256 IS MAX.   FIX***
*
*
*
*     E. USING CARDS. THESE CARDS DEFINE BASE REGISTER USAGE.
*                   UP TO 256 USING CARDS MAY BE ENTERED. USE
*                   OF THESE CARDS PERMITS THE DISASSEMBLER TO
*                   CONVERT EXPLICIT BASE-DISPLACEMENT ADDRESSES
*                   TO SYMBOLIC LABELS. LABELS CREATED WITHIN
*                   THE PROGRAM WILL BE 7 CHARACTERS LONG. THE
*                   FIRST CHARACTER IS 'A', FOLLOWED BY THE
*                   6-HEX-DIGIT OFFSET TO THE LABEL. A USING
*                   CARD MUST BE ENTERED FOR EACH DSECT TO
*                   BE USED.
*
*       FORMAT:
*
*            COL 1-5   : LITERAL 'USING'
*            COL 6     : BLANK
*            COL 7-12  : OFFSET TO BEGIN LOC FOR USING RANGE IN HEX
*                        (THIS IS WHERE THE USING STATEMENT WILL OCCUR)
*            COL 13    : BLANK
*            COL 14-19 : OFFSET TO ENDING LOC FOR USING RANGE IN HEX
*                        (THIS IS WHERE THE DROP STATEMENT WILL OCCUR)
*            COL 20    : BLANK
*            COL 21    : BASE RESISTER TO BE USED (HEX, 1-F)
*            COL 22    : BLANK
*            COL 23    : TYPE, P=PROGRAM BASE, D=DSECT BASE
*            COL 24    : BLANK
*            COL 25-30 : INITIAL BASE REGISTER VALUE IF TYPE P IN HEX
*            COL 25-32 : DSECT NAME IF TYPE D
*
*
*
*  4. SUGGESTIONS FOR USE: ON THE FIRST PASS, DO NOT USE A SYSPUNCH
*                 DD CARD, BUT PRINT THE SYSPRINT LISTING. USE THE
*                 LISTING TO DETERMINE WHICH REGISTERS SRE USED AS
*                 PROGRAM BASE REGISTERS, THEIR INITIAL VALUES, AND
*                 THEIR RANGES. MAKE UP USING CARDS FOR THESE. FIND
*                 ANY PLACES WHERE NO INSTRUCTIONS SHOULD BE GENERATED
*                 (ONLY CONSTANTS), AND MAKE UP DATA-ONLY CARDS FOR
*                 THESE RANGES. IF YOU CAN DETERMINE ANY REGISTERS
*                 THAT ARE BASES FOR AREAS WHICH CAN BE USED FOR
*                 DSECTS (CVT REFERENCE, ETC.), DETERMINE THE
*                 RANGE OF VALID USE, AND MAKE UP DSECT DEFIN
*                 ITIONS AND USING CARDS FOR THESE. MAKE A SECOND
*                 RUN, INCLUDING THE ABOVE CARDS, AND CREATING
*                 A SOURCE PROGRAM OUTPUT WITH THE SYSPUNCH
*                 DD CARD.
*
*
*
*  5. OUTPUT DESCRIPTION:
*
*     A. SYSPUNCH: THIS OUTPUT CONTAINS THE DISASSEMBLED SOURCE
*                  PROGRAM. STATEMENT NAMES BEGIN IN COLUMN 1,
*                  MNEMONICS BEGIN IN COLUMN 10, OPERANDS IN COL
*                  16, AND AN OCCASIONAL COMMENT BEGINS IN COL-
*                  UMN 44. A SEQUENCE NUMBER (BY TENS) IS IN
*                  COLUMNS 73-80. COMMENTS ARE INCLUDED TO SHOW
*                  THE MACRO NAME ASSOCIATED WITH SVC'S, AND OTHER
*                  STATEMENTS ARE FLAGGED TO AID IN IDENTIFICATION
*                  OF CERTAIN OPERATIONS:
*                  BALR 14,15              STD LINKAGE
*                  BALR X,0                ADDRESS SET
*                  OTHER BALR'S            NON-STD LINKAGE
*                  BAL 0,XXX AND BAL 1,XXX PARM SET BRCH
*                  BAL X,XXX               PERFORM
*                  STM INSTRUCTIONS        SAVE REGS
*                  LM  INSTRUCTIONS        RESTORE REGS
*                  BR R14                  EXIT
*                  ABS. LOCATION HEX 10    CVT ADDRESS
*                  ABS. LOCATION HEX 4C    CVT ADDRESS
*                  OTHER ABS. LOCATIONS    PSA REFERENCE
*                  WHEN USED IN EXPLICITLY IN INSTRUCTIONS, REGISTERS
*                  ARE SPECIFIED AS R0, R1, R2,... R15. AN REQU MACRO
*                  IS GENERATED AT THE END OF THE PROGRAM TO CREATE
*                  THE APPROPRIATE EQU STATEMENTS. IF ANY DSECTS
*                  WERE DEFINED IN THE SYSIN DATASET, THEY WILL
*                  BE NEAR THE END OF THE SOURCE PROGRAM.
*                  THE EXTENDED MNEMONICS ARE USED FOR CONDITIONAL
*                  BRANCHES WHEREVER POSSIBLE.
*
*
*
*      B. SYSPRINT CONTENT:
*
*         DIRECTORY INFORMATION: CONTAINS DATA FROM THE DIRECTORY
*                                ENTRY OF THE MODULE CONTAINING
*                                THE CSECT TO BE DISASSEMBLED.
*         ESD TABLE: A FORMATTED LIST OF ALL EXTERNAL SYMBOL ENTRIES
*                                FOUND IN THE MODULE.
*         RLD TABLE: A FORMATTED LISTING OF ALL RELOCATION DICTIONARY
*                                ENTRIES PERTAINING TO THIS CSECT.
*         USER ENTERED CARDS: A LIST OF THE CARDS ENTERED BY THE USER,
*                                WITH DIAGNOSTICS, IF APPROPRIATE.
*         PHASE 1 LABEL TABLE: A LIST OF ALL THE LABELS TO BE USED
*                                DURING DISASSEMBLY INCLUDING THOSE
*                                DEVELOPED FROM ESD ENTRIES, RLD
*                                ENTRIES, AND GENERATED NAMES
*                                RESULTING FROM USING CARD PROCESSING.
*         TEXT: A STORAGE-DUMP FORMATTED LISTING OF THE TEXT WHICH
*                                COMPRISES THE CSECT BEING DIS
*                                ASSEMBLED.
*         SOURCE LISTING: A PRINTOUT OF THE GENERATED SOURCE PROGRAM
*                                STATEMENTS, INCLUDING THE HEX VALUE
*                                WHICH RESULTED IN THE INSTRUCTION'S
*                                CREATION.
*
*
*
* 6. PROGRAM PROCESSING DESCRIPTION.
*
*   THE DISASSEMBLER IS COMPOSED OF THREE MODULES. THE FIRST IS
*   CALLED DISASM. THE SECOND PHASE IS DISASM1, AND THE THIRD IS
*   DISASM2. THE SECOND AND THIRD PHASES ARE LOAD'ED AND PERFORMED
*   BY A BALR 14,15 FROM DISASM.
*
*
*      DISASM FUNCTIONS:
*
*      . PROCESS THE PARM FIELD, IF ANY: SET INDICATORS USED BY
*        DISASM1 AND DISASM2 TO SET UP THEIR INSTRUCTION TABLES.
*      . OPEN ALL FILES.
*      . GET STORAGE FOR THE SYMBOL TABLE, RLD TABLE, AND DATA-ONLY
*        TABLES (109,544 BYTES TOTAL).
*      . PROCESS THE MODULE-CSECT CARD TO OBTAIN THE MEMBER
*        AND CSECT NAMES.
*      . ISSUE BLDL AGAINST SYSLIB TO OBTAIN DIRECTORY INFO FOR
*        THE MEMBER SPECIFIED. IF THE SPECIFIED MEMBER IS AN
*        ALIAS, RE-ISSUE A BLDL FOR THE REAL MEMBER. PRINT
*        DIRECTORY INFORMATION.
*      . POINT TO THE MEMBER IN THE SYSLIB PDS, AND PROCESS THE
*        MEMBER. LOAD MODULES CONTAIN AN EXTERNAL SYMBOL DICTIONARY
*        FOLLOWED BY TEXT AND RELOCATION DICTIONARY INFORMATION.
*        ALL ESD INFO FOR THE MODULE PRECEDES THE FIRST CONTROL
*        RECORD. A CONTROL RECORD PRECEDES EACH BLOCK OF TEXT.
*        RLD INFO FOR THE TEXT FOLLOWS EACH TEXT BLOCK. PROCESSING
*        OF LOAD MODULE INFORMATION IS AS FOLLOWS:
*        A. BUILD AN EXTERNAL SYMBOL TABLE, USING THE CESD BLOCKS.
*        B. SEARCH FOR THE DESIRED CSECT AS THE TABLE IS BEING
*           BUILT. THIS CSECT MUST BE FOUND BEFORE THE FIRST
*           CONTROL RECORD.
*        C. READ BLOCKS UNTIL A CONTROL RECORD FOR THE DESIRED
*           CSECT IS FOUND (BY ESD-ID).
*        D. WHEN FOUND, ISSUE GETMAIN FOR AN AREA LARGE ENOUGH
*           TO CONTAIN THE ENTIRE TEXT.
*        E. PLACE TEXT BLOCKS IN CONTIGUOUS STORAGE LOCATIONS
*           AND MAINTAIN DURING DISASSEMBLY.
*        F. USE RLD INFORMATION FOR THE CSECT TO BUILD THE RLD
*           RLD TABLE.
*      . LOAD AND PERFORM DISASM1.
*      . IF ANY ERRORS FOUND BY DISASM1, TERMINATE PROCESSING.
*      . PRINT THE FINAL LABEL TABLE TO BE USED DURING DISASSEMBLY.
*      . LOAD AND EXECUTE DISASM2.
*      . GENERATE THE DSECT ENTRIES.
*      . GENERATE THE REQU MACRO AND END STATEMENTS
*      . TERMINATE PROCESSING
*
*
*
*       DISASM1 FUNCTIONS:
*
*     DISASM1 IS THE SECOND PHASE OF DISASSEMBLY, AND IS PERFORMED
*     BY DISASM. A COMMON DATA AREA, DEFINED IN DISASM, IS
*     PASSED TO THIS PROGRAM ON ENTRY.
*
*     THE SYSIN FILE IS READ TO EXHAUSTION. USING CARDS ARE
*     REFORMATTED AND STORED IN A TABLE - UP TO 256 USING
*     STATEMENTS MAY BE ENTERED. DSECT CARDS MAY FOLLOW THE
*     USING STATEMENTS. WHEN USED, DSECT STATEMENTS ARE
*     REFORMATTED, AND BUILT INTO TABLES. A MAXIMUM OF 256 DSECTS
*     MAY BE ENTERED. DATA ONLY CARDS MAY BE INCLUDED BEFORE, BETWEEN,
*     OR AFTER DSECTS TO SHOW AREAS IN THE PROGRAM WHERE NO INSTRUCTIONS
*     OCCUR. UP TO 256 DATA ONLY AREAS MAY BE SPECIFIED.
*
*     AT EOF ON SYSIN, A PSEUDO DIS-ASSEMBLY PASS IS MADE
*     USING THE TEXT STORED BY DISASM. ANY RESOLVABLE ADDRESS
*     WITHIN THE TEXT IS USED TO CREATE A NEW ENTRY IN THE
*     LABEL TABLE, WHICH WILL BE USED BY DISASM2 IN THE
*     ACTUAL DIS-ASSEMBLY PASS.
*
*     DISASSEMBLY TABLES ARE SET UP SIMILARLY TO THOSE USED BY
*     DISASM2 FOR THE SIMULATED DISASSEMBLY PERFORMED IN THIS
*     MODULE WHEN ANY PROGRAM BASE REGISTER USING STATEMENTS
*     ARE ENTERED.
*
*     STORAGE IS OBTAINED FOR THE DSECT TABLE AND USING TABLE,
*     AND ADDRESSES OF THESE TABLES ARE STORED IN THE COMMON PARAMETER
*     AREA. USING AND DSECT CARDS ARE EDITED, REFORMATTED, AND PLACED
*     IN THE APPROPRIATE TABLES. IF ANY ERRORS ARE FOUND, THEY ARE
*     PRINTED, AND THE DISASSEMBLY WILL BE TERMINATED ON RETURN
*     TO DISASM.
*
*     STORAGE IS OBTAINED FOR THE LABEL TABLE, AND A SIMULATED
*     DIS-ASSEMBLY IS PERFORMED TO CREATE LABEL TABLE ENTRIES FOR
*     LABELS WHICH WILL BE GENERATED FOR BASE-DISPLACEMENT ADDRESSES
*     BY DISASM2. ON RETURN TO DISASM, THESE LABELS WILL BE SORTED
*     WITH EXTERNAL SYMBOL AND RLD LABELS TO FORM THE FINAL LABEL
*     TABLE TO BE USED BY DISASM2.
*
*
*
*       DISASM2 FUNCTIONS:
*
*     THIS SUB-PROGRAM IS CALLED BY DISASM AFTER COMPLETION OF
*     PROCESSING BY DISASM1. THE FINAL LABEL TABLE
*     AND MODULE TEXT IS IN AN AREA OF STORAGE. A COMMON PARAMETER
*     AREA IS DEFINED IN DISASM, AND PASSED TO THIS PROGRAM.
*
*     TEXT BYTES ARE USED TO CREATE ASSEMBLY LANGUAGE STATEMENTS,
*     AND MACHINE INSTRUCTION STATEMENTS. OUTPUT IS WRITTEN
*     TO THE SYSPUNCH DATASET FOR FURTHER PROCESSING BY OTHER
*     MODULES.
*
*     A TEXT BYTE IS CONSIDERED TO BE AN INSTRUCTION IF
*     IT OCCURS ON A HALFWORD BOUNDARY, IS A VALID OP-CODE,
*     AND IS FOLLOWED BY A VALID OP-CODE. UNCONDITIONAL BRANCHES
*     NEED NOT BE FOLLOWED BY A VALID OP-CODE, HOWEVER. THE
*     PRIVILEGED AND FLOATING POINT INSTRUCTIONS ARE NOT
*     TREATED AS INSTRUCTIONS UNLESS THE USER SPECIFIED
*     THEIR INCLUSION AT EXEC TIME.
*
*
*
* 7. INSTALLATION.
*
*     A. ASSEMBLE AND LINK THE THREE PROGRAMS, DISASM, DISASM1, AND
*        DISASM2.
*     B. IF A SINGLE LOAD MODULE IS DESIRED, THE LOAD AND BALR CODE
*        IN PROGRAM DISASM, LINES 10490-10590, AND LINES 11620-11720
*        MAY BE CHANGED TO CALLS, PASSING THE ADDRESS OF THE COMMON
*        PARAMETER AREA AS A PARAMETER. THE THREE PROGRAMS WILL ALL
*        BE LINKED INTO A SINGLE MODULE WITH ENTRY POINT DISASM, IF
*        THIS IS DONE.
*     C. IF STORAGE UTILIZATION IS FOUND TO BE EXCESSIVE, INVESTIGATE
*        THE POSSIBILITY OF REDUCING THE SIZE OF THE TABLE GETMAINS
*        IN DISASM LINES 1360, 1380, 1440, 1500, 5460, AND 9450, AND
*        IN DISASM1 LINES 1520, 1610, 4160. THE PROGRAMS WERE WRITTEN
*        FOR EASE OF USE WITH AN MVS OPERATING SYSTEM, AND MAY CAUSE
*        PROBLEMS IN A STORAGE CONSTRAINED ENVIRONMENT.
*     D. THE SVC TABLE AND INSTRUCTION OP CODE TABLES IN DISASM1 AND
*        DISASM2 SHOULD BE CHECKED FOR OPERATING SYSTEM VALIDITY,
*        AND CURRENCY WITH THE HARDWARE FROM TIME TO TIME.
*     E. MACROS USED BY THE DISASSEMBLER INCLUDE SVLNK AND REQU.
*        SVLNK IS USED TO ESTABLISH ADDRESSABILITY AND CHAIN
*        SAVE AREAS DURING INITIALIZATION IN EACH PROGRAM, AND
*        SET UP REGISTER EQUATES BY USE OF THE REQU MACRO. THE
*        REQU MACRO IS ALSO PLACED IN EACH DISASSEMBLED PROGRAM
*        IF THESE MACROS ARE USED, THEY SHOULD BE PLACED IN A MACRO
*        LIBRARY OR PREFIXED TO THE SOURCE BEFORE ASSEMBLY. IF
*        OTHER MACROS ARE USED IN THEIR PLACE, MAKE APPROPRIATE
*        SOURCE CODE CHANGES IN DISASM, DISASM1, AND DISASM2
*        BEFORE ASSEMBLY.
*     F. DIRECT TECHNICAL INQUIRIES, COMMENTS, SUGGESTIONS FOR
*        IMPROVEMENTS, ETC, TO:
*             DICK THORNTON
*             BLUE CROSS OF VIRGINIA
*             2015 STAPLES MILL ROAD
*             RICHMOND, VA. 23279
*
*             PHONE: (804) 359-7248
*
