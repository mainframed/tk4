RDX      TITLE 'RACF EXIT ICHRDX01 - RACDEF PRE-PROCESSING ROUTINE'
***********************************************************************
*    NAME:        RACF EXIT ICHRDX01      *PROD*   DATE: 09/25/80     *
*    PURPOSE:                                                         *
*        THIS EXIT WILL PROCESS "DATASET" AND "TAPEVOL" CLASSES.      *
*                                                                     *
*        DATASET PROCESSING:                                          *
*         1. SPECIAL DATASETS THAT ARE NOT GDG ARE PROCESSED          *
*            WITHOUT ANY CHANGES.                                     *
*         2. SPECIAL DATASETS THAT ARE GDG ARE PROCESSED BY DROPPING  *
*            THE LAST NODE AND USING THE REMAINDING NAME AS A MODEL.  *
*         3. NON SPECIAL DATASETS ARE (ALL) PROCESSED BY USING THE    *
*            FIRST NODE OF THE DSNAME AND ADDING ".MODEL" FOR THE     *
*            MODEL NAME.                                              *
*                                                                     *
*        TRACING:                                                     *
*        1. THE CLASS NAME "OPTA" IS DEFINED IN THE CLASS NAME        *
*           AS BIT POSITION 31.                                       *
*        2. THE COMMAND " SETROPTS AUDIT OPTA " WILL CONTROL THE      *
*           USE OF GTF TRACING.                                       *
*        3. THE INSTRUCTION USED TO TEST FOR GTF TRACING IS:          *
*                    TM   RCVTCAUD+3,X'01'                            *
*        4. THE COMMAND " SETROPTS STATISTICS OPTA " WILL CONTROL THE *
*           USE OF WTO TRACING.                                       *
*        5. THE INSTRUCTION USED TO TEST FOR WTO TRACING IS:          *
*                    TM   RCVTCSTA+3,X'01'                            *
*        6. SMF180 RECORDS ARE WRITTEN.                               *
*                                                                     *
*        TESTING:                                                     *
*        1. A DRIVER IS USED TO CALL THIS ROUTINE.                    *
*        2. THE DRIVED WILL PASS THE PROPER PARM LIST.                *
*        3. THE PARM LIST FIRST ENTRY IS NORMALLY THE NUMER OF        *
*           WORDS IN THE PARM LIST.                                   *
*           A. IF THE FIRST BYTE OF THE FIRST WORD IS X'FF' THEN      *
*              THE FIRST WORD CONTAIN A PSEUDO CVT ADDRESS.           *
*           B. IF THE FIRST BYTE OF THE FIRST WORD IS NOT X'FF'       *
*              THEN PROCEED AS NORMAL.                                *
*        4. AFTER TESTING THE FIRST WORD, EITHER THE REAL CVT ADDRESS *
*           OR A PSEUDO CVT ADDRESS PASSED BY THE DRIVER IS STORED    *
*           AND LATER USED FOR ALL CONTROL BLOCK PROCESSING.          *
*        5. THIS TECHNIQUE ALLOWS FOR PASSING (CVT, RCVT, ASCB, ASXB, *
*           ACEE).                                                    *
*                                                                     *
*    REGISTERS:                                                       *
*        R15 - WORK REG                                               *
*        R14 - WORK REG                                               *
*        R13 - DSECT WORK AREA                                        *
*        R12 - BASE REG                                               *
*        R11 - BASE REG                                               *
*        R10 - PARM INPUT                                             *
*        R9  - UNUSED                                                 *
*        R8  - ACEE REG                                               *
*        R7  - CLASS REG                                              *
*        R6  - VOLSER REG                                             *
*        R5  - ENTITY REG                                             *
*        R4  - WORK REG                                               *
*        R3  - WORK REG                                               *
*        R2  - WORK REG                                               *
*        R1  - WORK REG                                               *
*        R0  - WORK REG                                               *
*                                                                     *
*_____________________________________________________________________*
*                     CHANGE LOG:                                     *
*_____________________________________________________________________*
* 07/18/80 - ADDED SUPPORT FOR RACF PROTECTION OF PASSWORD DATASET.   *
* 07/30/80 - ADDED RACINIT "DELETE" & CHANGED SUBPOOL TO "255"        *
*                                                                     *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
ICHRDX01 CSECT
***********************************************************************
*        SETUP SAVEAREA AND SAVE CALLER'S REGS                        *
***********************************************************************
         USING ICHRDX01,R15
         B     ICHRDX                     BRANCH AROUND I.D.
         DC    C'ICHRDX01'                CSECT NAME
         DC    C'&SYSDATE'                ASSEMBLY DATE
         DC    C'&SYSTIME'                ASSEMBLY TIME
         USING SAVEAREA,R13
ICHRDX   STM   R14,R12,SAVER14
         LR    R11,R15                    SET UP BASE REGISTER
         LA    R12,2048(0,R11)            SET UP BASE REGISTER
         LA    R12,2048(0,R12)            SET UP BASE REGISTER
         USING ICHRDX01,R11
         USING ICHRDX01+4096,R12
         USING RCVT,R1
         DROP  R15
         LR    R10,R1                     SETUP PARAMETER REGISTER
         GETMAIN R,LV=WORKSIZE,SP=0       GET SAVEAREA + WORKAREA
         ST    R1,SAVENEW-SAVEAREA(,R13)  BACKWARD POINTER TO OLD AREA
         ST    R13,SAVEOLD-SAVEAREA(,R1)  BACKWARD POINTER TO NEW AREA
         LR    R13,R1                     SETUP SAVEAREA POINTER
         XC    SMFRD180(L'SMF180SZ),SMFRD180 CLEAR SMF AREA
         MVC   SMF180LN,=AL2(L'SMF180SZ)  SIZE OF RECORD
         MVC   SMF180SG,=AL2(0)           SIZE OF SEGMENTS
         MVI   SMF180SF,X'02'             VS2 SYSTEM
         MVI   SMF180TP,180               RECORD TYPE
         L     R1,16(0,0)                 CVT ADDRESS
         L     R1,196(0,R1)               ADDRESS OF SMCA
         LTR   R1,R1                      TEST FOR SMF
         BZ    NOSMF                      SMF NOT ACTIVE FAIL REQUEST
         MVC   SMF180ID,16(R1)            SYSTEM ID
         TIME  BIN                        TIME MACRO
         STM   0,1,SMF180TM             TIME AND DATE
         EJECT
***********************************************************************
*        SET UP CVT ADDRESS
***********************************************************************
         MVC   CVTADR,X'10'               CVT ADDRESS
         CLI   0(R10),X'FF'               DRIVER CALLING
         BNE   CVTOK                      NO, USE REAL CVT ADDRESS
         MVC   CVTADR+1(3),1(R10)         USE PASSED CVT ADDRESS
CVTOK    DS    0H
***********************************************************************
*        MAKE SURE RACF IS ACTIVE - ELSE GET OUT FAST
***********************************************************************
         L     R1,CVTADR                  GET CVT ADDRESS
         ICM   R1,7,992+1(R1)             GET CVTRAC ADDRESS
         TM    53(R1),X'80'               IS RACF ACTIVE?
         BNZ   NORACF                     NO
         TM    153(R1),X'80'              HAS RACF INACTIVE BEEN ISSUED
         BNZ   NORACF                     BRANCH IF RVARY WAS ISSUED
         EJECT
RACFUP   DS    0H                         RACF IS UP -
         L     R1,CVTADR                  CVT ADDRESS
         L     R1,0(,R1)                  CVTTCBP
         L     R1,12(,R1)                 CURRENT ASCB
ASCBJBNI ICM   R2,7,172+1(R1)             ASCBJBNI
         BNZ   *+4+4                      IF NOT ZERO WE GOT JOBNAME
ASCBJBNS ICM   R2,7,176+1(R1)             ASCBJBNS
         MVC   JOBNAME,0(R2)              MOVE JOBNAME
         L     R8,108(,R1)                ASXB
         L     R8,200(,R8)                ACEE
         MVC   WAUTH,BLANKS               CLEAR AREA
         LTR   R8,R8                      TEST FOR ACEE
         BZ    NOACEE                     NONE,
         USING ACEE,R8                    ADDRESSABILITY
         MVC   GROUP,ACEEGRPL             MOVE LENGTH & GROUP NAME
         MVC   USERID,ACEEUSRL            MOVE LENGTH & USER NAME
         XC    ACEEADR,ACEEADR            CLEAR ACEE ADDRESS WORD
***********************************************************************
*                                                                     *
*     ACEEIEP IS RESERVED FOR THE USER.  WE GETMAIN AN AREA AND       *
*     POINT TO IT WITH ACEEIEP THEN EXTRACT THE USER'S GROUP          *
*     AUTHORITY AND STORE IT INTO THE GETMAIN AREA.                   *
*                                                                     *
***********************************************************************
         L     R14,ACEEIEP                GETMAIN PARM AREA ADDRESS
         USING IEPDSECT,R14               ADDRESSABILITY
         LTR   R14,R14                    TEST FOR PARM AREA
         BZ    NOIEP                      ZERO - NO AUTH AVAILABLE
         MVC   GRPAUTH,IEPAUTH            SAVE THE AUTHORITY
         MVC   SMF180E1,GRPAUTH           MOVE AUTH INTO SMF RECORD
         MVC   FLAG1,ACEEFLG1             SAVE THE FLAG1
         UNPK  WAUTH(3),GRPAUTH(2)        CONVERT HEX TO CHAR - STEP 1.
         TR    WAUTH(2),HEXTAB-240        CONVERT HEX TO CHAR - STEP 2.
         EJECT
***********************************************************************
*        SET UP BASE REGISTERS FOR THE PARAMETERS
***********************************************************************
         USING DX01PARM,R10               PARAMETER ADDRESSABILITY
         L     R5,DX01ENTY                PICK UP ENTITY ADDRESS
         L     R6,DX01VOLN                PICK UP VOLSER ADDRESS
         L     R7,DX01CLAS                PICK UP CLASS & LGTH ADDRESS
         L     R2,DX01NAMC                PICK UP NAMING CONVENTION ADR
         USING NAMEPARM,R2                PARAMETER ADDRESSABILITY
         L     R1,NAMEFUNC                LOAD ADDRESS OF FUNCTION
         MVC   FUNCHEX,0(R1)              SAVE FUNCTION IN HEX
         DROP  R2
         MVC   SMF180JB(8),JOBNAME        JOBNAME TO SMF
         MVC   SMF180EE(100),0(R8)        ACEE TO SMF
         MVC   SMF180CL(7),1(R7)          CLASSNAME TO SMF
         MVC   SMF180RS(44),0(R5)         RESOURCE NAME TO SMF
         MVC   SMF180VL(6),0(R6)          VOLSER TO SMF
         MVC   SMF180FN(2),FUNCHEX        FUNCTION FOR SMF RECORD
         OI    SMF180F1,SMFFG1DF          INDICATE "RACDEF" SMF RECORD
         CLC   1(7,R7),=C'DATASET'        IS CLASS DATASET
         BNE   RACNXT1                    NO,
         CLC   FUNCHEX,=X'0201'           IS THIS RACDEF DEFINE
         BE    DEFINE                     YES,
         CLC   FUNCHEX,=X'0202'           IS THIS RACDEF RENAME
         BE    RENAME                     YES,
         CLC   FUNCHEX,=X'0204'           IS THIS RACDEF DELETE
         BE    DELETE                     YES,
         B     RACNXT1                    NO,
DELETE   MVC   FUNCTION,=C'DELETE'        FUNCTION = DELETE
         B     RACHIT1
DEFINE   MVC   FUNCTION,=C'DEFINE'        FUNCTION = DEFINE
         B     RACHIT1
RENAME   MVC   FUNCTION,=C'RENAME'        FUNCTION = RENAME
         L     R1,DX01OLDV                ADDRESS OF NEWNAME
         MVC   SMF180NM,0(R1)             MOVE NEWNAME FOR SMF RECORD
         BAL   R14,MAPDSN                 GO MAP THE NEWNAME
         SPACE
         LTR   R15,R15             TEST RETURN CODE
         BNZ   BADNODE             MESSAGE BAD NODE
         SPACE
         TM    WFLAG1,WFLG1USR     IS IT A USER DATASET?
         BO    RACHIT1             YES,
         CLI   WNODE2,C'G'         IS IT A GROUP DATASET?
         BNE   BADNODE             MESSAGE BAD NODE
         EJECT
***********************************************************************
*        WTO THE JOBNAME DSN AND VOLSER
***********************************************************************
RACHIT1  DS    0H
         L     R1,CVTADR                  GET CVT ADDRESS
         ICM   R1,7,992+1(R1)             GET CVTRAC ADDRESS
         TM    RCVTCSTA+3,X'01'           TEST BIT POS 31. OPTA
         BNO   NOWTO01                    NOT ON, BYPASS WTO
         MVC   MSG1(MSG1LGTH),MSG1PRTO    JOBNAME= DSN=
         MVC   MSG1CLAS,1(R7)             MOVE IN THE CLASS NAME
         MVC   MSG1JOBN,JOBNAME           MOVE IN THE JOBNAME
         MVC   MSG1DSN,0(R5)              MOVE IN THE DSN
         MVC   MSG1VOL,0(R6)              MOVE IN THE VOLSER
         MVC   MSG1FUNC,FUNCTION          MOVE IN FUNCTION
         MVC   WTOLIST(WTOLISTL),WTOPROTO INITIALIZE WTO AREA
         MVC   WTOLIST+4(MSG1LGTH),MSG1   TO WTO LIST
         WTO   MF=(E,WTOLIST)             WRITE IT OUT
NOWTO01  DS    0H
***********************************************************************
*        GENERATE A GTF USER RECORD OF THE RACDEF PARAMETERS
***********************************************************************
         L     R1,CVTADR                  GET CVT ADDRESS
         ICM   R1,7,992+1(R1)             GET CVTRAC ADDRESS
         TM    RCVTCAUD+3,X'01'           TEST BIT POS 31. OPTA
         BNO   NOGTF01                    NOT ON, BYPASS GTF
         XC    GTFREC02,GTFREC02          CLEAN OUT THE RECORD
         MVC   GTFDSN,0(R5)               DSNAME TO GTF RECORD
         MVC   GTFVOL,0(R6)               VOLSER TO GTF RECORD
         MVC   GTFJOBNM,JOBNAME           JOBNAME TO GTF RECORD
         MVC   GTFLIST(GTFLISTL),GTFPROTO MOVE IN PROTTYPE LIST
         LA    R0,GTFREC02                ADDRESS OF GTF USER RECORD
         GTRACE DATA=(R0),ID=1,PAGEIN=YES,MF=(E,GTFLIST)
NOGTF01  DS    0H
         EJECT
***********************************************************************
*        BREAK-UP THE DSNAME AND CHECK IF SPECIAL NODE.
***********************************************************************
         LR    R1,R5               PASS DSNAME ADDRESS
         BAL   R14,MAPDSN          GO MAP DSNAME INTO NODES
         SPACE
         LTR   R15,R15             TEST RETURN CODE
         BNZ   BADNODE             MESSAGE BAD NODE
         SPACE
CKNODES  LA    R1,NODETAB            POINT TO SPECIAL TABLE
         CLC   WNODE1,=C'PASSWORD'   CHECK FOR PASSSORD DATASET
         BNE   CHKNEXT               NO,CONTINUE NORMALLY
         MVC   WNODE2,=C'PASSWORD'   YES,CHANGE TO PASSWORD.PASSWORD
         MVI   WNODE2L,8             CHANGE NODE2 LENGTH
         MVI   W#NODES,2             CHANGE NUMBER OF NODES TO TWO
CHKNEXT  CLI   0(R1),X'FF'         END OF TABLE?
         BE    TABEND              YES, NOT IN TABLE
         CLC   0(9,R1),WNODE1L     NODE IN THE TABLE?
         BE    SPEC002             YES, TREAT AS SPECIAL
         LA    R1,9(R1)            INDEX TO NEXT ENTRY
         B     CHKNEXT             LOOK AGAIN
         EJECT
***********************************************************************
*                                                                     *
*  THE FOLLOWING ROUTINE PROVIDES FOR ALL DATASET CHECKING.           *
*                                                                     *
*   USER DATASETS:   1. 1ST QUAL 7 BYTES & ____OT_                    *
*                    2. 1ST QUAL 6 BYTES & UNNNNN                     *
*                                                                     *
*   GROUP DATASETS:  1. 2ND QUAL = G___$$ IS SPECIAL                  *
*                    2. 2ND QUAL = G___                               *
*                    3. 2ND QUAL = G_____                             *
*                                                                     *
*  THE DSNAMES ARE CHANGES IN THE FOLLOWING MANNER.                   *
*                                                                     *
*   USER DATASETS:   1. 1ST QUAL.MODEL                                *
*                    2. VOLSER=999999                                 *
*                                                                     *
*                                                                     *
*   GROUP DATASETS                                                    *
*   (NON-SPECIAL)    1. 2ND QUAL.MODEL                                *
*                    2. VOLSER=999999                                 *
*   (SPECIAL-GDG)    1. BLANK OUT THE $$ IN 2ND QUAL                  *
*                    2. SWAP 1ST & 2ND QUAL                           *
*                    3. DROP LAST QUAL - G0001V01                     *
*                    4. VOLSER=999999                                 *
*   (SPECIAL-NONGDG) 1. BLANK OUT THE $$ IN 2ND QUAL                  *
*                    2. SWAP 1ST & 2ND QUAL                           *
*                                                                     *
***********************************************************************
TABEND   DS    0H
         TM    WFLAG1,WFLG1USR     IS THIS A USER DATASET
         BNO   CKGROUP             NO, CHECK IF A GROUP DATASET
         MVI   WNODE2L,5           CHANGE NODE LENGTH FOR MODEL
         MVC   WNODE2,=CL8'MODEL'  ASSIGN MODEL SUFFIX TO USERID.
         MVI   W#NODES,2           CHANGE # OF NODES FOR REBUILD
         MVC   WVOLSER,=C'999999'  PROVIDE DUMMY VOLSER
         BAL   R14,BLDDSN          REBUILD DATASET NAME FOR RACCHECK
         B     CKNAME              GO CHANGE THE DATASET NAME
         SPACE 2
CKGROUP  CLI   WNODE2,C'G'         DOES 2ND QUAL START WITH - G
         BNE   BADNODE             NO, CAN NOT DETERMINE IF USER/GROUP
***********************************************************************
*        ON GROUP DATASETS ALWAYS USE THE 2ND QUAL AS GROUP NAME      *
***********************************************************************
         MVC   SAVEN(9),WNODE1L    MOVE 1ST NODE TO SAVE  * SWAP      *
         MVC   WNODE1L(9),WNODE2L  MOVE 2ND NODE TO 1ST   * 1ST & 2ND *
         MVC   WNODE2L(9),SAVEN    MOVE SAVED NODE TO 2ND * NODES     *
***********************************************************************
         SPACE
         CLC   WNODE1+4(2),=C'$$'  SPECIAL DSNAME
         BE    SPEC001             YES, GO PROCESS SPECIAL
         MVI   WNODE2L,5           CHANGE NODE2 LENGTH FOR MODEL
         MVC   WNODE2,=CL8'MODEL'  ASSIGN MODEL SUFFIX TO GROUPID
         MVI   W#NODES,2           CHANGE TOTAL # OF NODES
         MVC   WVOLSER,=C'999999'  PROVIDE DUMMY VOLSER
         BAL   R14,BLDDSN          REBUILD DATSET NAME
         B     CKNAME              GO CHANGE THE DATASET NAME
         SPACE 2
SPEC001  DS    0H
         CLC   FUNCTION,=C'RENAME' FUNCTION = RENAME
         BE    RENSPEC             YES, NOT ALLOWED
         OI    WFLAG1,WFLG1SPC     FLAG AS SPECIAL DATASET
         MVI   WNODE1L,4           DROP THE - $$
         MVC   WNODE1+4(4),=CL4' ' DROP THE - $$
         TM    WFLAG1,WFLG1GDG     IS THIS A GDG DATASET
         BNO   SPEC002             NO, SPECIAL NON-GDG
         MVC   WVOLSER,=C'999999'  PROVIDE DUMMY VOLSER
         SR    R1,R1               CLEAR REG
         IC    R1,W#NODES          INSERT THE # OF NODES
         BCTR  R1,0                SUBT ONE
         STC   R1,W#NODES          STORE THE # OF NODES
         BAL   R14,BLDDSN          REBUILD DATASET NAME
         B     CKNAME              GO CHANGE THE DATASET NAME
SPEC002  DS    0H
         OI    WFLAG1,WFLG1SPC     FLAG AS SPECIAL DATASET
         MVC   WVOLSER,0(R6)       USE THE REAL VOLSER
         L     R2,DX01NAMC
         USING NAMEPARM,R2
         L     R1,NAMEQUAL
         MVC   0(8,R1),WNODE1
         DROP  R2
         BAL   R14,BLDDSN          REBUILD DATSET NAME
         B     CKNAME              GO CHANGE THE DATASET NAME
***********************************************************************
*        IN THE FUTURE WE MAY ALLOW SOME ACCESS TO PROTECTED          *
*        DATASETS EVEN IF THE USER IS NOT DEFINED TO RACF.            *
*        PROTECTED SYS1 DATASETS MAY BE AFFORDED READ ONLY ACCESS     *
*        FOR EXAMPLE.                                                 *
***********************************************************************
CHKFUNC  CLC   FUNCTION,=C'DEFINE' IS THIS A DEFINE FUNCTION
         BE    BADUSER             USERID DOES NOT MATCH DATASET
         B     CHECKIT             IF DELETE CHECK ACCESS LIST
CKNAME   CLC   WNODE1,USERID+1     IS THIS THE USER'S DATASET
         BE    DSNRET8             YES, ALLOW DEFINE
         TM    FLAG1,X'20'         OPERATIONS ATTRIBUTE
         BO    AUTHOK              YES,
         TM    WFLAG1,WFLG1USR     IS USER FLAG ON
         BO    CHKFUNC             YES, CHECK IF DELETE OR DEFINE
         CLC   FUNCTION,=C'DELETE' IS THIS A DELETE FUNCTION
         BE    AUTHOK              BYPASS RACINIT
         CLC   WNODE1,GROUP+1      IS THIS A GROUP DATASET
         BE    AUTHCHK             CHECK AUTHORITY WITHIN GROUP
PREINIT  MVC   GROUP(9),WNODE1L    MOVE IN NEW GROUP
         SPACE
         BAL   R14,DOINIT          GO DO THE RACINIT
         SPACE
         LTR   R15,R15             TEST RETURN FROM RACINIT
         BNZ   BADINIT             ERROR IN RACINIT
AUTHCHK  DS    0H
         MVC   SMF180E1,GRPAUTH           SAVE AUTHORITY FOR SMF
         TM    FLAG1,X'20'         OPERATIONS ATTRIBUTE
         BO    AUTHOK              YES,
         TM    GRPAUTH,X'80'       AUTHORITY = JOIN
         BO    AUTHOK              YES,
         TM    GRPAUTH,X'40'       AUTHORITY = CONNECT
         BO    AUTHOK              YES,
         TM    GRPAUTH,X'20'       AUTHORITY = CREATE
         BO    AUTHOK              YES,
         B     GRPAERR             AUTHORITY = USE OR NOT PROVIDED
DSNRET8  DS    0H
         LA    R15,8               LOAD RETURN CODE=8
         ST    R15,WRETURN         SAVE IN WORK AREA
         OI    SMF180F2,SMFFG2OK   SAY THAT RACFDEF WAS OK
         B     NOCHECK             BYPASS RACHECK
AUTHOK   DS    0H
         TM    WFLAG1,WFLG1SPC     IS IT A SPECIAL DATASET
         BNO   CHECKIT             NO,
         TM    WFLAG1,WFLG1GDG     IS IT A GDG DATASET
         BO    CHECKIT             YES,
         LA    R15,0               LOAD RETURN CODE=0
         ST    R15,WRETURN         SAVE IN WORK AREA
         MVC   0(44,R5),WDSNAME    CHANGE DSNAME FOR PROFILE
         OI    SMF180F2,SMFFG2OK   SAY THAT RACDEF WAS OK
         B     NOCHECK             NO,
CHECKIT  DS    0H
         LA    R15,8               LOAD RETURN CODE=8
         ST    R15,WRETURN         SAVE IN WORK AREA
         TM    FLAG1,X'20'         OPERATIONS ATTRIBUTE
         BO    CHECKOK             YES,
         SPACE
         BAL   R14,DOCHECK         GO DO THE RACHECK
         SPACE
         LTR   R15,R15             TEST RETURN FROM RACHECK
         BNZ   BADCHECK            ERROR IN RACHECK
CHECKOK  DS    0H
         OI    SMF180F2,SMFFG2OK
NOCHECK  DS    0H
         EJECT
***********************************************************************
*        WTO THE JOBNAME DSN AND VOLSER
***********************************************************************
         L     R1,CVTADR                  GET CVT ADDRESS
         ICM   R1,7,992+1(R1)             GET CVTRAC ADDRESS
         TM    RCVTCSTA+3,X'01'           TEST BIT POS 31. OPTA
         BNO   NOWTO02                    NOT ON, BYPASS WTO
         MVC   MSG1(MSG1LGTH),MSG1PRTO    JOBNAME= DSN=
         MVC   MSG1CLAS,1(R7)             MOVE IN THE CLASS NAME
         MVC   MSG1JOBN,JOBNAME           MOVE IN THE JOBNAME
         MVC   MSG1DSN,WDSNAME            MOVE IN THE DSN
         MVC   MSG1VOL,WVOLSER
         MVC   MSG1AUTH,WAUTH             MOVE IN THE AUTHORITY
         MVC   WTOLIST(WTOLISTL),WTOPROTO INITIALIZE WTO AREA
         MVC   WTOLIST+4(MSG1LGTH),MSG1   TO WTO LIST
         WTO   MF=(E,WTOLIST)             WRITE IT OUT
NOWTO02  DS    0H
***********************************************************************
*        GENERATE A GTF USER RECORD OF THE RACDEF PARAMETERS
***********************************************************************
         L     R1,CVTADR                  GET CVT ADDRESS
         ICM   R1,7,992+1(R1)             GET CVTRAC ADDRESS
         TM    RCVTCAUD+3,X'01'           TEST BIT POS 31. OPTA
         BNO   NOGTF02                    NOT ON, BYPASS GTF
         XC    GTFREC02,GTFREC02          CLEAN OUT THE RECORD
         MVC   GTFDSN,WDSNAME             DSNAME TO GTF RECORD
         MVC   GTFVOL,WVOLSER             VOLSER TO GTF RECORD
         MVC   GTFJOBNM,JOBNAME           JOBNAME TO GTF RECORD
         MVC   GTFLIST(GTFLISTL),GTFPROTO MOVE IN PROTTYPE LIST
         LA    R0,GTFREC02                ADDRESS OF GTF USER RECORD
         GTRACE DATA=(R0),ID=2,PAGEIN=YES,MF=(E,GTFLIST)
NOGTF02  DS    0H
         EJECT
***********************************************************************
*        EVERYTHING COMPLETED
***********************************************************************
         L     R15,WRETURN         LOAD RETURN CODE
         B     RETURN              RETURN
         SPACE 2
         EJECT
         MAPDSN
         EJECT
         BLDDSN
         EJECT
***********************************************************************
*                                                                     *
*        THE FOLLOWING CODE WILL PERFORM THE RACINIT.                 *
*        RACINIT EXIT WILL EXECUTE AN INTERNAL RACF MACRO             *
*        TO EXTRACT THE USER'S GROUP AUTHORITY AND STORE              *
*        IT INTO ACEEIEP 1ST BYTE.                                    *
*                                                                     *
***********************************************************************
DOINIT   DS    0H
         STM   R0,R15,DSNSAV       SAVE REGS
         LA    R2,USERID           POINT TO USER NAME
         LA    R3,GROUP            POINT TO GROUP NAME
         LA    R4,ACEEADR          POINT TO ACEE ADDRESS
         MVC   RACINITD(CINITSIZ),CRACINIT
         RACINIT USERID=(2),GROUP=(3),ENVIR=CREATE,SUBPOOL=255,        X
               ACEE=(4),PASSCHK=NO,MF=(E,RACINITD)
         ST    R15,RETINIT         SAVE RETURN CODE
         L     R1,CVTADR                  GET CVT ADDRESS
         ICM   R1,7,992+1(R1)             GET CVTRAC ADDRESS
         TM    RCVTCSTA+3,X'01'           TEST BIT POS 31. OPTA
         BNO   NOWTO05                    NOT ON, BYPASS WTO
         MVC   MSG5(MSG5LGTH),MSG5PRTO    CLASS= JOB= FUNCTION= RET=
         MVC   MSG5CLAS,1(R7)             MOVE IN THE CLASS NAME
         MVC   MSG5JOBN,JOBNAME           MOVE IN THE JOBNAME
         MVC   MSG5FUNC,=C'RACINIT'       MOVE IN THE FUNCTION
         UNPK  WDWORD(3),RETINIT+3(2)     CONVERT TO CHAR
         TR    WDWORD(2),HEXTAB-240       CONVERT TO CHAR
         MVC   MSG5RETC,WDWORD            MOVE IN RETURN CODE
         MVC   MSG5EXTR(8),=C',AUTH=??'   MOVE IN EXTRA INFO
         LR    R1,R8                      SAVE ACEE REG
         L     R8,ACEEADR                 POINT TO ACEE
         LTR   R8,R8                      TEST FOR GOOD ACEE
         BZ    DOINIT01                   NO ACEE ADDRESS
         L     R14,ACEEIEP                PARM AREA ADDRESS
         USING IEPDSECT,R14               ADDRESSABILITY
         LTR   R14,R14                    TEST FOR ADDRESS
         BZ    DOINIT01                   NO ACEE ADDRESS
         MVC   GRPAUTH,IEPAUTH            SAVE THE AUTHORITY
         UNPK  WAUTH(3),GRPAUTH(2)        CONVERT HEX TO CHAR - STEP 1.
         TR    WAUTH(2),HEXTAB-240        CONVERT HEX TO CHAR - STEP 2.
         MVC   MSG5EXTR+6(2),WAUTH        MOVE IN RETURN CODE
         DROP  R14
DOINIT01 LR    R8,R1                      RESTORE ACEE REG
         MVC   WTOLIST(WTOLISTL),WTOPROTO INITIALIZE WTO AREA
         MVC   WTOLIST+4(MSG5LGTH),MSG5   TO WTO LIST
         WTO   MF=(E,WTOLIST)             WRITE IT OUT
NOWTO05  DS    0H
         XC    GRPAUTH,GRPAUTH            CLEAR AUTHORITY
         XC    FLAG1,FLAG1                CLEAR FLAG1
         LR    R1,R8                      SAVE ACEE REG
         L     R8,ACEEADR                 POINT TO ACEE
         LTR   R8,R8                      TEST FOR GOOD ACEE
         BZ    DOINIT02                   NO ACEE ADDRESS
         L     R14,ACEEIEP                PARM AREA ADDRESS
         USING IEPDSECT,R14               ADDRESSABILITY
         LTR   R14,R14                    TEST FOR ADDRESS
         BZ    DOINIT02                   NO AUTH ADDRESS
         MVC   GRPAUTH,IEPAUTH            SAVE THE AUTHORITY
         MVC   FLAG1,ACEEFLG1             SAVE THE FLAG1
DOINIT02 LR    R8,R1                      RESTORE ACEE REG
         L     R4,ACEEADR          POINT TO ACEE ADDRESS
         LTR   R4,R4               IS THERE AN ACEE TO DELETE
         BZ    DOINIT03            NO,
         LA    R4,ACEEADR          POINT TO ACEE ADDRESS
         MVC   RACINITD(CINITSIZ),CRACINIT
         RACINIT ENVIR=DELETE,SUBPOOL=255,                             X
               ACEE=(4),PASSCHK=NO,MF=(E,RACINITD)
DOINIT03 DS   0H
         LM    R0,R14,DSNSAV       RESTORE ALL BUT R15
         L     R15,RETINIT         RETURN CODE
         BR    R14                 RETURN TO CALLER
         EJECT
***********************************************************************
*                                                                     *
*        THE FOLLOWING CODE WILL PERFORM THE RACHECK.                 *
*        THE MODEL IS CHECKED TO DETERMINE IF THE USERID              *
*        HAS CREATE AUTHORITY FOR THIS DATASET.                       *
*                                                                     *
*        IF THE DATASET IS A USER OR GROUP DATASET THAT MATCHES       *
*        THE USER/GROUP FOR THE CURRENT CONNECTION THEN NO RACINIT    *
*        WAS ISSUED AND SO NO PSEUDO ACEE IS PRESENT, THEREFORE       *
*        USE THE ACEE CHAINED FROM THE ASCB.                          *
*                                                                     *
***********************************************************************
DOCHECK  DS    0H
         STM   R0,R15,DSNSAV       SAVE REGS
         LR    R3,R5               POINT TO DSNAME
         LR    R4,R6               POINT TO VOLSER
         LA    R5,CLASSD           POINT TO CLASS=DATASET
         L     R6,ACEEADR          POINT TO PASSED ACEE
         LTR   R6,R6               IS IT PRESENT
         BNZ   DOCHECK1            YES, THEN USE PAST ACEE
         LR    R6,R8               OTHERWISE USE THE CHAINED ACEE
DOCHECK1 MVC   RACHECKD(CCHEKSIZ),CRACHECK
         RACHECK ENTITY=((3)),VOLSER=(4),CLASS=(5),                    X
               ATTR=ALTER,DSTYPE=N,ACEE=(6),MF=(E,RACHECKD)
         ST    R15,RETCHECK        SAVE RETURN CODE
         L     R1,CVTADR                  GET CVT ADDRESS
         ICM   R1,7,992+1(R1)             GET CVTRAC ADDRESS
         TM    RCVTCSTA+3,X'01'           TEST BIT POS 31. OPTA
         BNO   NOWTO06                    NOT ON, BYPASS WTO
         MVC   MSG5(MSG5LGTH),MSG5PRTO    CLASS= JOB= FUNCTION= RET=
         MVC   MSG5CLAS,1(R7)             MOVE IN THE CLASS NAME
         MVC   MSG5JOBN,JOBNAME           MOVE IN THE JOBNAME
         MVC   MSG5FUNC,=C'RACHECK'       MOVE IN THE FUNCTION
         UNPK  WDWORD(3),RETCHECK+3(2)    CONVERT TO CHAR
         TR    WDWORD(2),HEXTAB-240       CONVERT TO CHAR
         MVC   MSG5RETC,WDWORD            MOVE IN RETURN CODE
         MVC   WTOLIST(WTOLISTL),WTOPROTO INITIALIZE WTO AREA
         MVC   WTOLIST+4(MSG5LGTH),MSG5   TO WTO LIST
         WTO   MF=(E,WTOLIST)             WRITE IT OUT
NOWTO06  DS    0H
         LM    R0,R14,DSNSAV              RESTORE ALL BUT 15
         L     R15,RETCHECK        RETURN CODE
         BR    R14                 RETURN TO CALLER
         EJECT
         EJECT
***********************************************************************
*        TAPEVOL PROCESSING
***********************************************************************
RACNXT1  DS   0H
         CLC   1(7,R7),=C'TAPEVOL'        IS CLASS TAPEVOL
         BNE   RACNXT2                    NO,
         L     R2,16               ADDRESS OF REAL CVT
         L     R2,992(R2)          ADDRESS OF RCVT
         L     R2,188(R2)          ADDRESS OF CDE TABLE
         MVC   CLASMASK,IEPCAUTH   LOAD USER'S CLASS AUTH MASK
         USING CDETABLE,R2
CKCLASS1 CLC   CDESIZE,=X'0000'    COMPARE CDE SIZE
         BE    TCLASERR            ZERO, TAPEVOL NOT FOUND
         CLC   CDENAME,=C'TAPEVOL ' COMPARE CLASSE NAME
         BE    CKCLASS2            EQ, FOUND TABLE ENTRY
         AH    R2,CDESIZE          BUMP TO NEXT TABLE ENTRY
         B     CKCLASS1            AND COMPARE
CKCLASS2 NC    CLASMASK,CDEPOS     "AND" TAPEVOL BIT TO MASK
         BNZ   TCLASERR            NOT AUTHORIZED TO TAPEVOL
         DROP  R2
         MVC   SMF180FN,=X'0201'          PRESET TO DEFINE
         L     R1,DX01FLG1                ADDRESS OF RACDEF FLAG 1
         TM    0(R1),X'80'                IS THIS RACDEF DELETE
         BNO   *+10                       NO THEN MUST BE A DEFINE
         MVC   SMF180FN,=X'0204'          PRESET TO DELETE
         OI    SMF180F2,SMFFG2OK          FUNCTION CODE OF OK
         EJECT
***********************************************************************
*        WTO THE CLASS, JOBNAME, AND VOLSER
***********************************************************************
         L     R1,CVTADR                  GET CVT ADDRESS
         ICM   R1,7,992+1(R1)             GET CVTRAC ADDRESS
         TM    RCVTCSTA+3,X'01'           TEST BIT POS 31. OPTA
         BNO   NOWTO03                    NOT ON, BYPASS WTO
         MVC   MSG2(MSG2LGTH),MSG2PRTO    CLASS= JOB= AUTH= VOL=
         MVC   MSG2CLAS,1(R7)             MOVE IN THE CLASS NAME
         MVC   MSG2JOBN,JOBNAME           MOVE IN THE JOBNAME
         MVC   MSG2VOL,0(R5)              MOVE IN THE RESOURCE (VOLSER)
         MVC   MSG2AUTH,WAUTH             MOVE IN THE AUTHORITY
         MVC   WTOLIST(WTOLISTL),WTOPROTO INITIALIZE WTO AREA
         MVC   WTOLIST+4(MSG2LGTH),MSG2   TO WTO LIST
         WTO   MF=(E,WTOLIST)             WRITE IT OUT
NOWTO03  DS    0H
***********************************************************************
*        GENERATE A GTF USER RECORD OF THE RACDEF PARAMETERS
***********************************************************************
         L     R1,CVTADR                  GET CVT ADDRESS
         ICM   R1,7,992+1(R1)             GET CVTRAC ADDRESS
         TM    RCVTCAUD+3,X'01'           TEST BIT POS 31. OPTA
         BNO   NOGTF03                    NOT ON, BYPASS GTF
         XC    GTFREC02,GTFREC02          CLEAN OUT THE RECORD
         MVC   GTFDSN,0(R5)               DSNAME TO GTF RECORD
         MVC   GTFVOL,0(R6)               VOLSER TO GTF RECORD
         MVC   GTFJOBNM,JOBNAME           JOBNAME TO GTF RECORD
         MVC   GTFLIST(GTFLISTL),GTFPROTO MOVE IN PROTTYPE LIST
         LA    R0,GTFREC02                ADDRESS OF GTF USER RECORD
         GTRACE DATA=(R0),ID=1,PAGEIN=YES,MF=(E,GTFLIST)
NOGTF03  DS    0H
         EJECT
         MVI   WDSNAME,C' '        BLANK DSNAME WORK AREA
         MVC   WDSNAME+1(43),WDSNAME
         LTR   R8,R8               DID WE HAVE AN ACEE?
         BZ    NOACEE              NO,
         MVC   WDSNAME(8),ACEEGRPN USE GROUP NAME AS 1ST NODE
         LA    R1,WDSNAME          POINT TO DSNAME AREA
DSNT001  CLI   1(R1),C' '          FOUND END OF FIRST NODE
         BE    DSNT002             YES,
         LA    R1,1(,R1)           NEXT BYTE OF NODE
         B     DSNT001             CHECK AGAIN
DSNT002  MVC   1(6,R1),=C'.MODEL'  PROVIDE MODEL DSNAME
         MVC   WVOLSER,=C'999999'  PROVIDE DUMMY VOLSER
         L     R1,DX01MENT         ADDRESS OF MODEL ENTITY
         MVC   0(44,R1),WDSNAME    STORE IN PARM AREA
         L     R1,DX01MVOL         ADDRESS OF MODEL VOLSER
         MVC   0(6,R1),WVOLSER     STORE IN PARM AREA
         L     R1,DX01FLG2         ADDRESS OF MODEL FLAGS
         OI    0(R1),X'80'         STORE IN PARM AREA
         EJECT
***********************************************************************
*        WTO THE JOBNAME DSN AND VOLSER
***********************************************************************
         L     R1,CVTADR                  GET CVT ADDRESS
         ICM   R1,7,992+1(R1)             GET CVTRAC ADDRESS
         TM    RCVTCSTA+3,X'01'           TEST BIT POS 31. OPTA
         BNO   NOWTO04                    NOT ON, BYPASS WTO
         MVC   MSG2(MSG2LGTH),MSG2PRTO    CLASS= JOB= AUTH= VOL=
         MVC   MSG2CLAS,1(R7)             MOVE IN THE CLASS NAME
         MVC   MSG2JOBN,JOBNAME           MOVE IN THE JOBNAME
         MVC   MSG2VOL,0(R5)              MOVE IN THE RESOURCE (VOLSER)
         MVC   MSG2MDSN,WDSNAME           MOVE IN THE MODEL DSNAME
         MVC   MSG2AUTH,WAUTH             MOVE IN THE AUTHORITY
         MVC   WTOLIST(WTOLISTL),WTOPROTO INITIALIZE WTO AREA
         MVC   WTOLIST+4(MSG2LGTH),MSG2   TO WTO LIST
         WTO   MF=(E,WTOLIST)             WRITE IT OUT
NOWTO04  DS    0H
***********************************************************************
*        GENERATE A GTF USER RECORD OF THE RACDEF PARAMETERS
***********************************************************************
         L     R1,CVTADR                  GET CVT ADDRESS
         ICM   R1,7,992+1(R1)             GET CVTRAC ADDRESS
         TM    RCVTCAUD+3,X'01'           TEST BIT POS 31. OPTA
         BNO   NOGTF04                    NOT ON, BYPASS GTF
         XC    GTFREC02,GTFREC02          CLEAN OUT THE RECORD
         MVC   GTFDSN,0(R5)               DSNAME TO GTF RECORD
         MVC   GTFVOL,0(R6)               VOLSER TO GTF RECORD
         MVC   GTFJOBNM,JOBNAME           JOBNAME TO GTF RECORD
         MVC   GTFLIST(GTFLISTL),GTFPROTO MOVE IN PROTTYPE LIST
         LA    R0,GTFREC02                ADDRESS OF GTF USER RECORD
         GTRACE DATA=(R0),ID=2,PAGEIN=YES,MF=(E,GTFLIST)
NOGTF04  DS    0H
         LA    R15,12
         B     RETURN
         EJECT
RACNXT2  DS   0H
         SR    R15,R15
         B     RETURN
         EJECT
***********************************************************************
*        THE ROUTINE TO MESSAGE ERRORS IN THE RACINIT                 *
***********************************************************************
BADINIT  DS    0H
         OI    SMF180F3,SMFFG3IE
         OI    SMF180F2,SMFFG2ER
         LA    R15,4                      FAIL THE REQUEST
         B     RETURN                     RETURN
***********************************************************************
*        THE ROUTINE TO MESSAGE ERRORS IN THE USER'S GROUP AUTHORITY  *
***********************************************************************
GRPAERR  DS    0H
         MVC   MSG3(MSG3LGTH),MSG3PRTO    USERID= & GROUP=
         MVC   MSG3USER,USERID+1          MOVE IN THE USERID
         MVC   MSG3GROP,GROUP+1           MOVE IN THE JOBNAME
         MVC   WTOLIST(WTOLISTL),WTOPROTO INITIALIZE WTO AREA
         MVC   WTOLIST+4(MSG3LGTH),MSG3   TO WTO LIST
         WTO   MF=(E,WTOLIST)             WRITE IT OUT
         MVC   MSG6(MSG6LGTH),MSG6PRTO    FUNCTION AND ERROR
         MVC   MSG6FUNC,FUNCTION          MOVE IN THE FUNCTION
         CLI   GRPAUTH,X'10'              READ AUTHORITY
         BE    GRPAERR1                   YES,
         MVC   MSG6ERR,=C'USER NOT MEMBER OF GROUP    '
         B     GRPAERR2
GRPAERR1 DS    0H
         MVC   MSG6ERR,=C'INSUFFICIENT GROUP AUTHORITY'
GRPAERR2 DS    0H
         OI    SMF180F3,SMFFG3GA
         OI    SMF180F2,SMFFG2ER
         MVC   WTOLIST(WTOLISTL),WTOPROTO INITIALIZE WTO AREA
         MVC   WTOLIST+4(MSG6LGTH),MSG6   TO WTO LIST
         WTO   MF=(E,WTOLIST)             WRITE IT OUT
         LA    R15,4                      FAIL THE REQUEST
         B     RETURN                     RETURN
         EJECT
***********************************************************************
*        THE ROUTINE TO MESSAGE ERRORS IN THE ACEEIEP AREA            *
***********************************************************************
NOIEP    DS    0H
         WTO   '*** WARNING*** RACINIT DID NOT RETURN USER GROUP AUTHORX
               ITY - CREATE REQUEST FAILED',                           X
               ROUTCDE=(9,11)
         OI    SMF180F3,SMFFG3GA
         OI    SMF180F2,SMFFG2ER
         LA    R15,4                      FAIL THE REQUEST
         B     RETURN                     RETURN
***********************************************************************
*        THE ROUTINE TO MESSAGE ERRORS IN THE RACHECK                 *
***********************************************************************
TCLASERR DS    0H
         OI    SMF180F3,SMFFG3CA
         OI    SMF180F2,SMFFG2ER
         WTO   '*** WARNING*** NOT AUTHORIZED TO CLASS(TAPEVOL) - REQUEX
               ST FAILED',                                             X
               ROUTCDE=(9,11)
         LA    R15,4                      FAIL THE REQUEST
         B     RETURN                     RETURN
***********************************************************************
*        THE ROUTINE TO MESSAGE ERRORS IN THE RACHECK                 *
***********************************************************************
BADCHECK DS    0H
         OI    SMF180F3,SMFFG3CE
         OI    SMF180F2,SMFFG2ER
         WTO   '*** WARNING*** RACHECK ERROR - CREATE REQUEST FAILED', X
               ROUTCDE=(9,11)
         LA    R15,4                      FAIL THE REQUEST
         B     RETURN                     RETURN
         EJECT
***********************************************************************
*        THE ROUTINE TO MESSAGE THAT NO ACEE FOUND                    *
***********************************************************************
NOACEE   DS    0H
         OI    SMF180F3,SMFFG3NA
         OI    SMF180F2,SMFFG2ER
         WTO   '*** WARNING*** NO ACEE FOUND - CREATE REQUEST FAILED', X
               ROUTCDE=(9,11)
         LA    R15,4                      FAIL THE REQUEST
         B     RETURN                     RETURN
***********************************************************************
BADUSER  DS    0H
         OI    SMF180F3,SMFFG3RE
         OI    SMF180F2,SMFFG2ER
         WTO   '*** WARNING*** CREATE REQUEST FAILED ****** USER DATASEX
               T DOES NOT MATCH USERID  ****',ROUTCDE=(9,11)
         LA    R15,4
         B     RETURN
***********************************************************************
RENSPEC  DS    0H
         OI    SMF180F3,SMFFG3RE
         OI    SMF180F2,SMFFG2ER
         WTO   '*** WARNING*** RENAME REQUEST FAILED ****** RENAME OF SX
               PECIAL DATASET NOT ALLOWED ***',ROUTCDE=(9,11)
         LA    R15,4
         B     RETURN
***********************************************************************
*        THE ROUTINE TO BREAK DOWN THE DSNAME OR THE DSNAME           *
*        IS IN ERROR.                                                 *
***********************************************************************
BADNODE  DS    0H
         OI    SMF180F3,SMFFG3RE
         OI    SMF180F2,SMFFG2ER
         WTO   '*** WARNING*** DSNAME INVALID - MODELING BYPASSED  ',  X
               ROUTCDE=(9,11)
         LA    R15,4                      FAIL THE REQUEST
         B     RETURN                     RETURN
         EJECT
***********************************************************************
*        THE ROUTINE TO MSG THAT THE LOCATE SVC FAILED                *
***********************************************************************
LOCERR   DS    0H
         OI    SMF180F3,SMFFG3RE   NEW NAME WAS CATALOGED
         OI    SMF180F2,SMFFG2ER
         WTO   '*** WARNING*** NEWNAME IN CATALOG - REQUEST FAILED',   X
               ROUTCDE=(9,11)
         LA    R15,4                      FAIL THE REQUEST
         B     RETURN                     RETURN
***********************************************************************
*        THE ROUTINE TO MSG THAT THE OBTAIN SVC FAILED                *
***********************************************************************
OBTERR   DS    0H
         OI    SMF180F3,SMFFG3RE   NEW NAME WAS ON VOLUME
         OI    SMF180F2,SMFFG2ER
         WTO   '*** WARNING*** NEWNAME ON VOLUME - REQUEST FAILED',    X
               ROUTCDE=(9,11)
         LA    R15,4                      FAIL THE REQUEST
         B     RETURN                     RETURN
***********************************************************************
*        RACF IS NOT ACTIVE - TERMINATE SVC PROCESSING - NO ACEE.
*        IF THIS IS NOT DONE, SVC 133 WILL ABEND WITH S585 DUE TO
*        THE FACT THAT RACINIT HAS NOT BUILT AN ACEE.
***********************************************************************
NORACF   DS    0H
         OI    SMF180F3,SMFFG3NR
         OI    SMF180F2,SMFFG2ER
         WTO   '*** WARNING *** RACF NOT ACTIVE - SVC133 TERMINATED',  X
               ROUTCDE=(9)
         LA    R15,8                      RACF IS NOT ACTIVE ACCEPT REQ
         B     RETURN
         EJECT
***********************************************************************
*        FREEMAIN NEW SAVEAREA AND RETURN TO CALLER
***********************************************************************
RETURN   DS    0H
         ST    R15,WRETURN
SMFWRT   SMFWTM SMFRD180
         LTR   R15,R15              TEST FOR GOOD SMF WRITE
         BZ    SMFOK                OK
SMFMSG   LA    R2,REPLY             POINT TO REPLY AREA
         LA    R3,WTORECB           POINT TO ECB
         XC    REPLY,REPLY          CLEAR REPLY AREA
         XC    WTORECB,WTORECB      CLEAR ECB
         WTOR  '*** WARNING *** RACF COULD NOT WRITE TO SMF, REPLY C (TX
               O CANCEL) OR U (TO RETRY)',(2),L'REPLY,(3),             X
               ROUTCDE=(9,11)
         WAIT  ECB=WTORECB          WAIT FOR A REPLY
         CLI   REPLY,C'U'           REPLY = RETRY
         BE    SMFWRT               YES,
         CLI   REPLY,C'C'           REPLY = CANCEL
         BE    NOSMF                YES,
         B     SMFMSG               ASK AGAIN
SMFOK    L     R15,WRETURN
         EJECT
RETURN2  LR    R1,R13               SAVE NEW SAVEAREA ADR FOR FREEMAIN
         L     R13,SAVEOLD                OLD SAVEAREA
         ST    R15,SAVER15          PLUG (R15) FOR RESTORE (R14-12)
         FREEMAIN R,A=(1),LV=WORKSIZE,SP=0 FREE UP NEW SAVEAREA
         XC    SAVENEW,SAVENEW            BREAK CHAIN
         LM    R14,R12,SAVER14            RESTORE REGS
         BR    R14                        BACK TO MOTHER
NOSMF    DS    0H
         WTO   '*** WARNING*** SMF IS NOT RECORDING REQ TERMINATED ',  X
               ROUTCDE=(9,11)
         LA    R15,4                      FAIL THE REQUEST
         B     RETURN2                    RETURN
         DROP  ,                          DROP EVERYTHING
         EJECT
***********************************************************************
*        PARAMETER LISTS ECT.
***********************************************************************
GTFPROTO GTRACE LNG=256,ID=2,MF=L
GTFLISTL EQU   *-GTFPROTO              LENGTH OF PROTOTYPE GTRACE LIST
WTOPROTO WTO   '                                                       X
                                                                       X
                        ',                                             X
               MF=L,ROUTCDE=(9,11)
WTOLISTL EQU   *-WTOPROTO              LENGTH OF PROTOTYPE WTO LIST
MSG1PRTO EQU   *
         DC    C'RACDEF CLASS='
         DC    CL7' '
         DC    C',JOB='
         DC    CL8' '
         DC    C',AUTH='
         DC    CL2' '
         DC    C',VOL='
         DC    CL6' '
         DC    C',DSN='
BLANKS   DC    CL44' '
MSG1LGTH EQU   *-MSG1PRTO
MSG2PRTO EQU   *
         DC    C'RACDEF CLASS='
         DC    CL7' '
         DC    C',JOB='
         DC    CL8' '
         DC    C',AUTH='
         DC    CL2' '
         DC    C',VOL='
         DC    CL6' '
         DC    C',MDSN='
         DC    CL44' '
MSG2LGTH EQU   *-MSG2PRTO
MSG3PRTO EQU   *
         DC    C'ICH408I USER('
         DC    CL8' '
         DC    C') GROUP('
         DC    CL8' '
         DC    C')'
MSG3LGTH EQU   *-MSG3PRTO
MSG4PRTO EQU   *
         DC    C'                 '
         DC    C'CL(DATASET) VOL(999999)'
MSG4LGTH EQU   *-MSG4PRTO
MSG5PRTO EQU   *
         DC    C'RACDEF CLASS='
         DC    CL7' '
         DC    C',JOB='
         DC    CL8' '
         DC    C',FUNCTION='
         DC    CL7' '
         DC    C',RETURN='
         DC    CL2' '
         DC    CL11' '
MSG5LGTH EQU   *-MSG5PRTO
MSG6PRTO EQU   *
         DC    C'  '
         DC    C'DEFINE'
         DC    C' - '
         DC    C'USER NOT MEMBER OF GROUP    '
MSG6LGTH EQU   *-MSG6PRTO
         EJECT
         NODETAB
SAVETIME DC    2F'0'
HEXTAB   DC    X'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'
CLASSD   DC    AL1(7),CL7'DATASET'
CRACINIT RACINIT MF=L
CINITSIZ EQU   *-CRACINIT
CRACHECK RACHECK MF=L
CCHEKSIZ EQU   *-CRACHECK
         EJECT
         LTORG
         EJECT
DX01PARM DSECT
DX01WORD DS    F
DX01FLG1 DS    F
DX01INST DS    F
DX01ENTY DS    F
DX01OLDV DS    F
DX01VOLN DS    F
DX01CLAS DS    F
DX01MENT DS    F
DX01MVOL DS    F
DX01FLG2 DS    F
DX01NAMC DS    F
DX01FLG3 DS    F
DX01PROF DS    F
DX01ACEE DS    F
         SPACE
NAMEPARM DSECT
NAMEWORD DS    F
NAMEFUNC DS    F
NAMEAUTH DS    F
NAMERESN DS    F
NAMEORES DS    F
NAMEVOLL DS    F
NAMEOVOL DS    F
NAMECLAS DS    F
NAMEQUAL DS    F
NAMETYPE DS    F
NAMELATH DS    F
NAMECPPL DS    F
         EJECT
         IEPMACRO
         EJECT
CDETABLE DSECT
CDESIZE  DS    CL2                 SIZE OF ENTRY
CDEID#   DS    CL1                 ID NUMBER
CDENAME  DS    CL8                 CLASS NAME
         DS    CL13                OTHER STUFF
CDEPOS   DS    CL4                 CLASS BIT POSITION
         DS    CL4
         EJECT
SAVEAREA DSECT
SAVEPLI  DS    F
SAVEOLD  DS    F
SAVENEW  DS    F
SAVER14  DS    F
SAVER15  DS    F
SAVER0   DS    F
SAVER1   DS    F
SAVER2   DS    F
SAVER3   DS    F
SAVER4   DS    F
SAVER5   DS    F
SAVER6   DS    F
SAVER7   DS    F
SAVER8   DS    F
SAVER9   DS    F
SAVER10  DS    F
SAVER11  DS    F
SAVER12  DS    F
SAVESIZE EQU   *-SAVEAREA
WORKAREA EQU   *                          START OF WORKAREA
GTFLIST  GTRACE LNG=256,ID=2,MF=L
WTOLIST  WTO   '                                                       X
                                                                       X
                        ',                                             X
               MF=L,ROUTCDE=(9,11)
RACINITD RACINIT MF=L
RACHECKD RACHECK MF=L
MSG1     EQU   *
MSG1HDR1 DC    C'RACDEF CLASS='
MSG1CLAS DC    CL7' '
         DC    C',JOB='
MSG1JOBN DC    CL8' '
         DC    C','
MSG1FUNC DS    0CL6
         DC    C'AUTH='
MSG1AUTH DC    CL2' '
         DC    C',VOL='
MSG1VOL  DC    CL6' '
         DC    C',DSN='
MSG1DSN  DC    CL44' '
MSG2     EQU   *
MSG2HDR1 DC    C'RACDEF CLASS='
MSG2CLAS DC    CL7' '
         DC    C',JOB='
MSG2JOBN DC    CL8' '
         DC    C',AUTH='
MSG2AUTH DC    CL2' '
         DC    C',VOL='
MSG2VOL  DC    CL6' '
         DC    C',MDSN='
MSG2MDSN DC    CL44' '
MSG3     EQU   *
         DC    C'ICH408I USER('
MSG3USER DC    CL8' '
         DC    C') GROUP('
MSG3GROP DC    CL8' '
         DC    C')'
MSG4     EQU   *
MSG4MNM  DC    C'                 '
         DC    C'CL(DATASET) VOL(999999)'
MSG5     EQU   *
         DC    C'RACDEF CLASS='
MSG5CLAS DC    CL7' '
         DC    C',JOB='
MSG5JOBN DC    CL8' '
         DC    C',FUNCTION='
MSG5FUNC DC    CL7' '
         DC    C',RETURN='
MSG5RETC DC    CL2' '
MSG5EXTR DC    CL11' '
MSG6     EQU   *
         DC    C'  '
MSG6FUNC DC    C'      '
         DC    C' - '
MSG6ERR  DC    C'                            '
GTFREC02 DS    XL256                      GTF USER RECORD TYPE 2
         ORG   GTFREC02                   OVERLAY THE DIFFERENT FIELDS
GTFJOBNM DS    CL8                        JOBNAME
GTFFLAG1 DS    X                          FLAG BYTE 1
         DS    XL3                        PAD
GTFVOL   DS    CL6                        VOLSER
GTFINSTN DS    CL30                       INSTALLATION PARAMETERS
GTFDSN   DS    CL44                       DSN
GTFNDSN  DS    CL44                       NEWDSN
         ORG
         SPACE 2
         WRKDSN
SAVEN    DC    CL9' '
WDWORD   DS    D                   DOUBLE WORD WORK AREA
WRETURN  DS    F                   RETURN CODE AREA
CVTADR   DS    F                   ADDRESS OF CVT
ACEEADR  DS    F                   ACEE ADDRESS FROM RACINIT
RETINIT  DS    F                   RACINIT RETURN CODE
RETCHECK DS    F                   RACHECK RETURN CODE
CLASMASK DS    F                   WORK AREA FOR CLASS AUTHORITY
WTORECB  DS    F                   SMF WTOR ECB
REPLY    DS    CL1                 SMF WTOR REPLY AREA
WAUTH    DS    CL3                 WORK FOR CHAR AUTH
GRPAUTH  DS    CL1                 USER'S GROUP AUTHORITY
FLAG1    DS    CL1                 ACEE FLAG1
GROUP    DS    CL9                 LENGTH & GROUP NAME FOR RACINIT
USERID   DS    CL9                 LENGTH & USER NAME FOR RACINIT
JOBNAME  DS    CL8                 JOBNAME
         SPACE 2
FUNCTION DS    CL6                 REQUESTED FUNCTION
FUNCHEX  DS    CL2                 REQUESTED FUNCTION
         SMF180
WORKSIZE EQU   *-SAVEAREA
         EJECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         IHAACEE
         ICHPRCVT
         END
