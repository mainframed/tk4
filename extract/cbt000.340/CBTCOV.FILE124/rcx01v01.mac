RCX      TITLE 'RACF EXIT ICHRCX01 - RACHECK PRE-PROCESSING ROUTINE'
***********************************************************************
*    NAME:        RACF EXIT ICHRCX01   *TEST*     DATE: 09/25/80      *
*    PURPOSE:                                                         *
*        THIS EXIT WILL PROCESS "DATASET" AND "TAPEVOL" CLASSES.      *
*                                                                     *
*        DATASET PROCESSING:                                          *
*         1. SPECIAL DATASETS THAT ARE NOT GDG ARE PROCESSED          *
*            WITHOUT ANY CHANGES.                                     *
*         2. SPECIAL DATASETS THAT ARE GDG ARE PROCESSED BY DROPPING  *
*            THE LAST NODE AND USING THE REMAINDING NAME AS A MODEL.  *
*         3. NON SPECIAL DATASETS ARE (ALL) PROCESSED BY USING THE    *
*            FIRST NODE OF THE DSNAME AND ADDING ".MODEL" FOR THE     *
*            MODEL NAME.                                              *
*                                                                     *
*        TRACING:                                                     *
*        1. THE CLASS NAME "OPTA" IS DEFINED IN THE CLASS NAME        *
*           AS BIT POSITION 31.                                       *
*        2. THE COMMAND " SETROPTS AUDIT OPTA " WILL CONTROL THE      *
*           USE OF GTF TRACING.                                       *
*        3. THE INSTRUCTION USED TO TEST FOR GTF TRACING IS:          *
*                    TM   RCVTCAUD+3,X'01'                            *
*        4. THE COMMAND " SETROPTS STATISTICS OPTA " WILL CONTROL THE *
*           USE OF WTO TRACING.                                       *
*        5. THE INSTRUCTION USED TO TEST FOR WTO TRACING IS:          *
*                    TM   RCVTCSTA+3,X'01'                            *
*        TESTING:                                                     *
*        1. A DRIVER IS USED TO CALL THIS ROUTINE.                    *
*        2. THE DRIVED WILL PASS THE PROPER PARM LIST.                *
*        3. THE PARM LIST FIRST ENTRY IS NORMALLY THE NUMER OF        *
*           WORDS IN THE PARM LIST.                                   *
*           A. IF THE FIRST BYTE OF THE FIRST WORD IS X'FF' THEN      *
*              THE FIRST WORD CONTAIN A PSEUDO CVT ADDRESS.           *
*           B. IF THE FIRST BYTE OF THE FIRST WORD IS NOT X'FF'       *
*              THEN PROCEED AS NORMAL.                                *
*        4. AFTER TESTING THE FIRST WORD, EITHER THE REAL CVT ADDRESS *
*           OR A PSEUDO CVT ADDRESS PASSED BY THE DRIVER IS STORED    *
*           AND LATER USED FOR ALL CONTROL BLOCK PROCESSING.          *
*        5. THIS TECHNIQUE ALLOWS FOR PASSING (CVT, RCVT, ASCB, ASXB, *
*           ACEE).                                                    *
*                                                                     *
*_____________________________________________________________________*
*                   CHANGE LOG:                                       *
*_____________________________________________________________________*
*  07/18/80 - ADDED SUPPORT FOR PROTECTING PASSWORD DATASET.          *
*  07/30/80 - ADDED CHECK FOR "OPER" ATTR IF NO ACCESS LIST.          *
*  09/25/80 - CHANGED SUB POOL GETMAINS TO 252 FROM 0.                *
*             CHANGE MSG TO SHOW OPERATION ATTR ALLOWED ACCESS.       *
*  10/06/80 - CHANGED SUB POOL GETMAINS TO 253 FROM 252               *
*  10/07/80 - CHANGED ICHEINTY MACRO TO INCLUDE VOLUME=               *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
         MACRO
&LABEL   DSN   &FLAGS,&DSN
         LCLA  &COUNT
&COUNT   SETA  K'&DSN-2
&LABEL   DC    X'&FLAGS',AL1(&COUNT-1),CL&COUNT.&DSN
         MEND
         EJECT
ICHRCX01 CSECT
***********************************************************************
*        SETUP SAVEAREA AND SAVE CALLER'S REGS
***********************************************************************
         USING ICHRCX01,R15
         B     ICHRCX                     BRANCH AROUND I.D.
         DC    C'ICHRCX01'                CSECT NAME
         DC    C'&SYSDATE'                ASSEMBLY DATE
         DC    C'&SYSTIME'                ASSEMBLY TIME
         USING SAVEAREA,R13
ICHRCX   STM   R14,R12,SAVER14            SAVE REGS
         LR    R12,R15                    SET UP BASE REGISTER
         LA    R10,4095(R12)              SET UP BASE REGISTER
         USING ICHRCX01,R12
         USING ICHRCX01+4095,R10
         USING RCVT,R1
         USING ACEE,R6
         USING CX01PARM,R11
         DROP  R15
         LR    R11,R1                     SETUP PARAMETER REGISTER
         GETMAIN R,LV=WORKSIZE,SP=253     GET SAVEAREA + WORKAREA
         ST    R1,SAVENEW-SAVEAREA(,R13)  FORWARD POINTER TO OLD AREA
         ST    R13,SAVEOLD-SAVEAREA(,R1)  BACKWARD POINTER TO NEW AREA
         LR    R13,R1                     SETUP SAVEAREA POINTER
***********************************************************************
*        SET UP CVT ADDRESS
***********************************************************************
         MVC   CVTADR,X'10'               CVT ADDRESS
         CLI   0(R11),X'FF'               DRIVER CALLING
         BNE   CVTOK                      NO, USE REAL CVT ADDRESS
         MVC   CVTADR+1(3),1(R11)         USE PASSED CVT ADDRESS
CVTOK    DS    0H
         EJECT
***********************************************************************
*        SET UP BASE REGISTERS
***********************************************************************
         LM    R3,R9,4(R11)               PICK UP PARAMETER ADD VECTOR
         L     R1,CX01ACEE                ADDRESS OF WORD WITH ACEE
         LTR   R1,R1                      IS THERE A PASSED ACEE
         BZ    NOPASS1                    NO,
         MVC   PASSACEE,0(R1)             SAVE THE ACEE ADDRESS
NOPASS1  L     R1,CVTADR                  CVT ADDRESS
         L     R1,0(,R1)                  CVTTCBP
         L     R1,12(,R1)                 CURRENT ASCB
ASCBJBNI ICM   R2,7,172+1(R1)             ASCBJBNS
         BNZ   *+4+4                      IF NOT ZERO WE GOT JOBNAME
ASCBJBNS ICM   R2,7,176+1(R1)             ASCBJBNS
         MVC   JOBNAME,0(R2)              SAVE THE JOBNAME
         L     R1,108(,R1)                ASXB
         MVC   ASCBACEE,200(R1)           SAVE THE ACEE ADDRESS
         TM    0(R5),X'20'                PROFILE OR DSN?
         BZ    *+4+4+4                    B IF NOT PROFILE
         LA    R9,62(,R7)                 ADD OF VOLSER LIST IN PROFILE
         LA    R7,4(,R7)                  ADD OF DSN IN PROFILE
***********************************************************************
*        SET UP DESIRED RETURN CODE AS FOLLOWS:
*        (R15)=8 IF RACF IS ACTIVE AND HIGH LEVEL INDEX = USERID:
*                THIS IS THE SO CALLED FAST PATH.
*        (R15)=8 IF RACF IS NOT ACTIVE AND ISSUE A WTO.
***********************************************************************
         L     R1,CVTADR                  GET CVT ADDRESS
         ICM   R1,7,992+1(R1)             GET CVTRAC ADDRESS
         TM    53(R1),X'80'               IS RACF ACTIVE
         BNZ   NORACF                     NO
         TM    153(R1),X'80'              HAS RVARY INACT BEEN ISSUED
         BNZ   NORACF                     BRANCH IF RVARY WAS ISSUED
         EJECT
RACFUP   DS    0H                     RACF IS UP - CHECK FOR FAST PATH
         L     R6,PASSACEE         LOAD THE PASSED ACEE ADDRESS
         LTR   R6,R6               TEST IT
         BNZ   ACEEOK              PASSED ACEE ADDRESS OK
         L     R6,ASCBACEE         LOAD THE CHAINED ACEE ADDRESS
         LTR   R6,R6               TEST IT
         BZ    NOACEE              NO ACEE AVAILABLE - NO FAST PATH
ACEEOK   DS    0H
         SPACE
         LA    R1,=CL8'4ALTER'            ALTER REQUEST
         TM    0(R4),X'80'                ALTER REQUEST
         BO    DOREQA                     YES, SET REQUESTED AUTH
         LA    R1,=CL8'3CONTROL'          CONTROL REQUEST
         TM    0(R4),X'08'                CONTROL REQUEST
         BO    DOREQA                     YES, SET REQUESTED AUTH
         LA    R1,=CL8'2UPDATE'           UPDATE REQUEST
         TM    0(R4),X'04'                UPDATE REQUEST
         BO    DOREQA                     YES, SET REQUESTED AUTH
         LA    R1,=CL8'1READ'             READ REQUEST
         TM    0(R4),X'02'                READ REQUEST
         BO    DOREQA                     YES, SET REQUESTED AUTH
         LA    R1,=CL8'????????'          ???? REQUEST
DOREQA   MVC   REQAUTH,0(R1)              SAVE THE REQUESTED AUTH
         SPACE
         CLC   1(7,R8),=C'DATASET' IS THE ENTITY CLASS DATASET?
         BNE   RACNXT1             NO,
         SPACE
         BAL   R14,BLDPASS         GO BUILD THE PAST WORKAREA
         EJECT
***********************************************************************
*        GENERATE A GTF USER RECORD OF THE RACHECK PARAMETERS
***********************************************************************
         L     R1,CVTADR                  GET CVT ADDRESS
         ICM   R1,7,992+1(R1)             GET CVTRAC ADDRESS
         TM    RCVTCAUD+3,X'01'           TEST BIT POS 31. OPTA
         BNO   NOGTF01                    NOT ON, BYPASS GTF
         XC    GTFREC01,GTFREC01          CLEAN OUT THE RECORD
         MVC   GTFFLAG1,0(R3)             FLAG1 TO GTF RECORD
         MVC   GTFFLAG2,0(R4)             FLAG2 TO GTF RECORD
         MVC   GTFFLAG3,0(R5)             FLAG3 TO GTF RECORD
         MVC   GTFDSN,0(R7)               DSNAME TO GTF RECORD
         MVC   GTFVOL,0(R9)               VOLSER TO GTF RECORD
         MVC   GTFJOBNM,JOBNAME           JOBNAME TO GTF RECORD
         L     R1,40(,R11)                PICK UP ADD OF ABEND CODE
         MVC   GTFABEND,0(R1)             AND SAVE IN GTF RECORD
         L     R1,44(,R11)                PICK UP REASON CODE ADDRESS
         MVC   GTFRC,0(R1)                AND SAVE IN GTF RECORD
         L     R1,48(,R11)                ADDRESS OF ACCESS CODE
         MVC   GTFACCOD,0(R1)             SAVE IN GTF RECORD
         MVC   GTFLIST(GTFLISTL),GTFPROTO MOVE IN PROTOTYPE LIST
         LA    R0,GTFREC01                ADD OF GTF USER RECORD
         GTRACE DATA=(R0),ID=1,PAGEIN=YES,MF=(E,GTFLIST)
NOGTF01  DS    0H
         EJECT
***********************************************************************
*        WTO THE JOBNAME AND DSNAME OF THE DATASET BEING RACHECKED
***********************************************************************
         L     R1,CVTADR                  GET CVT ADDRESS
         ICM   R1,7,992+1(R1)             GET CVTRAC ADDRESS
         TM    RCVTCSTA+3,X'01'           TEST BIT POS 31. OPTA
         BNO   NOWTO01                    NOT ON, BYPASS WTO
         MVC   WTOLIST(WTOLISTL),WTOPROTO INITIALIZE WTO AREA
         MVC   MSG1(MSG1LGTH),MSG1PRTO    INITIALIZE MESSAGE
         MVC   MSG1CLAS,1(R8)             MOVE IN THE CLASS NAME
         MVC   MSG1REQA,REQAUTH+1         MOVE IN THE REQUEST AUTH
         MVC   MSG1JOBN,JOBNAME           MOVE IN THE JOBNAME
         MVC   MSG1DSN,0(R7)              MOVE IN DSN
         MVC   MSG1VOL,0(R9)              MOVE IN VOLSER
         MVC   WTOLIST+4(MSG1LGTH),MSG1   MESSAGE TO WTO
         WTO   MF=(E,WTOLIST)             WRITE IT OUT
NOWTO01  DS    0H
         SPACE
CHKDSN   DS    0H
         LR    R1,R7               PASS DSNAME ADDRESS
GOMAP    BAL   R14,MAPDSN          GO MAP DSNAME INTO NODES
         LTR   R15,R15             TEST RETURN CODE
         BNZ   BADNODE             MESSAGE BAD NODE
         SPACE
         LA    R1,NODETAB          POINT TO SPECIAL TABLE
         CLC   WNODE1,=C'PASSWORD'  CHECK FOR PASSWORD DATASET
         BNE   CHKNEXT              NO, CONTINUE NORMALLY
         MVC   WNODE2,=C'PASSWORD'  YES, CHANGE TO PASSWORD.PASSWORD
         MVI   WNODE2L,8            CHANGE NODE2 LENGTH TO 8
         MVI   W#NODES,2            CHANGE NUMBER OF NODES TO TWO.
CHKNEXT  CLI   0(R1),X'FF'         END OF THE TABLE?
         BE    TABEND              YES,  NOT IN TABLE
         CLC   0(9,R1),WNODE1L     NODE IN THE TABLE
         BE    SPEC002             YES, TREAT AS SPECIAL
         LA    R1,9(,R1)           INDEX TO NEXT ENTRY
         B     CHKNEXT             LOOK AGAIN
TABEND   DS    0H
         EJECT
***********************************************************************
*                                                                     *
*  THE FOLLOWING ROUTINE PROVIDES FOR ALL DATASET CHECKING.           *
*                                                                     *
*   USER DATASETS:   1. 1ST QUAL 7 BYTES & ____OT_                    *
*                    2. 1ST QUAL 6 BYTES & UNNNNN                     *
*                                                                     *
*   GROUP DATASETS:  1. 2ND QUAL = G___$$ IS SPECIAL                  *
*                    2. 2ND QUAL = G___                               *
*                    3. 2ND QUAL = G_____                             *
*                                                                     *
*  THE DSNAMES ARE CHANGES IN THE FOLLOWING MANNER.                   *
*                                                                     *
*   USER DATASETS:   1. 1ST QUAL.MODEL                                *
*                    2. VOLSER=999999                                 *
*                                                                     *
*                                                                     *
*   GROUP DATASETS                                                    *
*   (NON-SPECIAL)    1. 2ND QUAL.MODEL                                *
*                    2. VOLSER=999999                                 *
*   (SPECIAL-GDG)    1. BLANK OUT THE $$ IN 2ND QUAL                  *
*                    2. SWAP 1ST & 2ND QUAL                           *
*                    3. DROP LAST QUAL - G0001V01                     *
*                    4. VOLSER=999999                                 *
*   (SPECIAL-NONGDG) 1. BLANK OUT THE $$ IN 2ND QUAL                  *
*                    2. SWAP 1ST & 2ND QUAL                           *
*                                                                     *
***********************************************************************
         CLC   WNODE1,ACEEUSRI     IS THIS THE USER'S OWN DATASET
         BE    FASTPATH            YES, USE FAST PATH
         SPACE
         TM    WFLAG1,WFLG1USR     IS THIS A USER DATASET
         BNO   CKGROUP             NO, CHECK IF A GROUP DATASET
         MVI   WNODE2L,5           CHANGE NODE LENGTH FOR MODEL
         MVC   WNODE2,=CL8'MODEL'  ASSIGN MODEL SUFFIX TO USERID.
         MVI   W#NODES,2           CHANGE # OF NODES FOR REBUILD
         MVC   WVOLSER,=C'999999'  PROVIDE DUMMY VOLSER
         NI    0(R3),X'EF'         CHANGE DSTYPE TO NON-VSAM
         BAL   R14,BLDDSN          REBUILD DATASET NAME FOR RACCHECK
         B     CHGNAME             GO CHANGE THE DATASET NAME
         SPACE 2
CKGROUP  CLI   WNODE2,C'G'         DOES 2ND QUAL START WITH - G
         BNE   RACFRET             NO, CAN NOT DETERMINE IF USER/GROUP
***********************************************************************
*        ON GROUP DATASETS ALWAYS USE THE 2ND QUAL AS GROUP NAME      *
***********************************************************************
         MVC   SAVEN(9),WNODE1L    MOVE 1ST NODE TO SAVE  * SWAP      *
         MVC   WNODE1L(9),WNODE2L  MOVE 2ND NODE TO 1ST   * 1ST & 2ND *
         MVC   WNODE2L(9),SAVEN    MOVE SAVED NODE TO 2ND * NODES     *
***********************************************************************
         SPACE
         CLC   WNODE1+4(2),=C'$$'  SPECIAL DSNAME
         BE    SPEC001             YES, GO PROCESS SPECIAL
         MVI   WNODE2L,5           CHANGE NODE2 LENGTH FOR MODEL
         MVC   WNODE2,=CL8'MODEL'  ASSIGN MODEL SUFFIX TO GROUPID
         MVI   W#NODES,2           CHANGE TOTAL # OF NODES
         MVC   WVOLSER,=C'999999'  PROVIDE DUMMY VOLSER
         NI    0(R3),X'EF'         CHANGE DSTYPE TO NON-VSAM
         BAL   R14,BLDDSN          REBUILD DATSET NAME
         B     CHGNAME             GO CHANGE THE DATASET NAME
         SPACE 2
SPEC001  DS    0H
         OI    WFLAG1,WFLG1SPC
         MVI   WNODE1L,4           DROP THE - $$
         MVC   WNODE1+4(4),=CL4' ' DROP THE - $$
         TM    WFLAG1,WFLG1GDG     IS THIS A GDG DATASET
         BNO   SPEC002             NO, SPECIAL NON-GDG
         MVC   WVOLSER,=C'999999'  PROVIDE DUMMY VOLSER
         SR    R1,R1               CLEAR REG
         IC    R1,W#NODES          INSERT THE # OF NODES
         BCTR  R1,0                SUBT ONE
         STC   R1,W#NODES          STORE THE # OF NODES
         NI    0(R3),X'EF'         CHANGE DSTYPE TO NON-VSAM
         BAL   R14,BLDDSN          REBUILD DATASET NAME
         B     CHGNAME             GO CHANGE THE DATASET NAME
SPEC002  DS    0H
         OI    WFLAG1,WFLG1SPC
         MVC   WVOLSER,0(R9)       USE THE REAL VOLSER
         BAL   R14,BLDDSN          REBUILD DATSET NAME
         B     CHGNAME             GO CHANGE THE DATASET NAME
CHGNAME  DS    0H
         SPACE
         CLI   REQAUTH,C'?'        PROBLEM WITH REQ AUTH
         BE    NOHELP              YES,
         BAL   R14,ACCESS          CHECK THE ACCESS LIST
         CH    R15,=H'8'           CHECK FOR ACCESS PROBLEM
         BE    NOHELP              YES,
         CH    R15,=H'4'           CHECK FOR ACCESS NOT ALLOWED
         BE    ERRORACS            YES,
         EJECT
***********************************************************************
*        WTO THE JOBNAME AND DSNAME OF THE DATASET BEING RACHECKED
***********************************************************************
         L     R1,CVTADR                  GET CVT ADDRESS
         ICM   R1,7,992+1(R1)             GET CVTRAC ADDRESS
         TM    RCVTCSTA+3,X'01'           TEST BIT POS 31. OPTA
         BNO   NOWTO04                    NOT ON, BYPASS WTO
         MVC   WTOLIST(WTOLISTL),WTOPROTO INITIALIZE WTO AREA
         MVC   MSG1(MSG1LGTH),MSG1PRTO    INITIALIZE MESSAGE
         MVC   MSG1CLAS,1(R8)             MOVE IN THE CLASS NAME
         MVC   MSG1REQA-4(3),=C'PER'      MOVE IN THE PERMIT AUTH
         MVC   MSG1REQA,HIAUTH+1          MOVE IN THE REQUEST AUTH
         MVC   MSG1JOBN-4(3),=C'UID'      MOVE IN THE GOOD ID
         MVC   MSG1JOBN,GOODID            MOVE IN THE GOOD ID
         CLC   1(7,R8),=C'TAPEVOL'        TAPEVOL
         BE    MSGTP                      YES, BYPASS DSNAME
         B     MSGDS                      YES, BYPASS DSNAME
MSGTP    MVC   MSG1VOL,0(R7)              MOVE IN TAPE VOLSER
         MVC   MSG1DSN-5(5),=CL5' '       MOVE IN TAPE VOLSER
         B     MSGDS+12                   YES, BYPASS DSNAME
MSGDS    MVC   MSG1DSN,WDSNAME            MOVE IN DSN
         MVC   MSG1VOL,WVOLSER            MOVE IN VOLSER
         MVC   WTOLIST+4(MSG1LGTH),MSG1   MESSAGE TO WTO
         WTO   MF=(E,WTOLIST)             WRITE IT OUT
NOWTO04  DS    0H
         SPACE
         LA    R15,12              ACCESS ALLOWED
         CLC   1(7,R8),=C'TAPEVOL'        CLASS TAPEVOL
         BE    PLUGR15                    YES,
         MVC   0(44,R7),WDSNAME    CHANGE THE DATASET NAME
         MVC   0(6,R9),WVOLSER     CHANGE THE VOLSER
         B     PLUGR15             RETURN
         SPACE
NOHELP   DS    0H
         XC    WRETURN,WRETURN     CLEAR THE RETURN CODE
         CLC   1(7,R8),=C'TAPEVOL'        TAPEVOL
         BE    RACFRET                    YES,
         MVC   0(44,R7),WDSNAME    CHANGE THE DATASET NAME
         MVC   0(6,R9),WVOLSER     CHANGE THE VOLSER
         B     RACFRET             RETURN
         EJECT
***********************************************************************
*        THE ROUTINE TO MESSAGE ERRORS IN THE ACCESS AUTHORITY        *
***********************************************************************
ERRORACS DS    0H
         MVC   MSG3(MSG3LGTH),MSG3PRTO    JOB= & USER=
         MVC   MSG3JOBN,JOBNAME           MOVE IN THE JOBNAME
         MVC   MSG3USER,ACEEUSRI          MOVE IN THE USERID
         MVC   WTOLIST(WTOLISTL),WTOPROTO INITIALIZE WTO AREA
         MVC   WTOLIST+4(MSG3LGTH),MSG3   TO WTO LIST
         WTO   MF=(E,WTOLIST)             WRITE IT OUT
         CLC   1(7,R8),=C'TAPEVOL'        CLASS TAPEVOL
         BNE   ERRORDS                    NO,
         LA    R1,MSG4                    ADDRESS FOR CLASS & VOLSER
         MVC   WVOLSER,0(R7)              MOVE VOLSER
         B     ERRORTP
ERRORDS  MVC   MSG4(MSG4LGTH),MSG4PRTO    DSN & CLASS & VOLSER
         MVC   MSG4DSN,WDSNAME            MOVE IN THE DSNAME
         LA    R1,MSG4DSN+1               ADDRESS OF DSNAME
         SR    R0,R0                      CLEAR
         IC    R0,WNWDSNL                 LENGTH OF NEW DSNAME
         AR    R1,R0                      ADDRESS FOR CLASS & VOLSER
ERRORTP  MVC   0(L'MSG4A,R1),MSG4A        MOVE CLASS & VOLSER
         MVC   3(7,R1),1(R8)              CLASS NAME
         MVC   17(6,R1),WVOLSER           VOLSER
         MVC   WTOLIST(WTOLISTL),WTOPROTO INITIALIZE WTO AREA
         MVC   WTOLIST+4(MSG4LGTH),MSG4   TO WTO LIST
         WTO   MF=(E,WTOLIST)             WRITE IT OUT
         MVC   WTOLIST(WTOLISTL),WTOPROTO INITIALIZE WTO AREA
         MVC   WTOLIST+4(L'MSG4B),MSG4B   TO WTO LIST
         WTO   MF=(E,WTOLIST)             WRITE IT OUT
         MVC   MSG5(MSG5LGTH),MSG5PRTO    ACCESS INTENT AND ALLOWED
         MVC   MSG5REQA,REQAUTH+1         MOVE IN THE INTENT
         MVC   MSG5ALWA,HIAUTH+1          MOVE IN THE ALLOWED
         MVC   WTOLIST+4(MSG5LGTH),MSG5   TO WTO LIST
         WTO   MF=(E,WTOLIST)             WRITE IT OUT
         LA    R15,4                      SET TO FAIL REQUEST
         B     PLUGR15                    RETURN
***********************************************************************
*        IN THE FUTURE WE MAY ALLOW SOME ACCESS TO PROTECTED          *
*        DATASETS EVEN IF THE USER IS NOT DEFINED TO RACF.            *
*        PROTECTED SYS1 DATASETS MAY BE AFFORDED READ ONLY ACCESS     *
*        FOR EXAMPLE.                                                 *
***********************************************************************
NOACEE   DS    0H
         B     RACFRET             RETURN
         EJECT
         MAPDSN
         EJECT
         BLDDSN
         EJECT
***********************************************************************
*        PASS ORIGINAL DSNAME & VOLSER TO POST-PROCESSOR
***********************************************************************
BLDPASS  STM   R0,R15,DSNSAV              SAVE REGS
         L     R0,PASSPARM                LOAD SP & LENGTH OF AREA
         GETMAIN R,LV=(0)                 GET AREA TO PASS TO POST
         LR    R15,R1                     ADDRESS OF WORKAREA
         L     R2,36(,R11)                LOAD ADDRESS OF WORKAREA
         ST    R15,0(,R2)                 STORE ADDRESS INTO WORKAREA
         USING PASSDSCT,R15               ADDRESSABILITY
         MVC   PASSPSIZ,PASSPARM          MOVE SP & LENGTH TO AREA
         L     R2,20(,R11)                ADDRESS OF ENTITY
         MVC   PASSENTY,0(R2)             MOVE ENTITY NAME TO AREA
         BCTR  R2,0                       BACKUP POINTER TO ENTITY SIZE
         MVC   PASSESIZ,0(R2)             MOVE ENTITY SIZE TO AREA
         L     R2,28(,R11)                ADDRESS OF VOLSER
         MVC   PASSVOLS,0(R2)             MOVE VOLSER TO AREA
         L     R2,4(,R11)                 ADDRESS OF FLAG1
         MVC   PASSFLG1,0(R2)             MOVE FLAG1 TO AREA
         DROP  R15
         LM    R0,R15,DSNSAV              RESTORE REGS
         BR    R14
         EJECT
***********************************************************************
*                                                                     *
*        THIS ROUTINE WILL DO THE FOLLOWING:                          *
*         1. LOCATE THE DATASET PROFILE AND EXTRACT                   *
*            (UACC,#USERS,ACCESS-LIST)                                *
*         2. CHECK THE AUTHORITY REQUESTED AGAINST THAT ALLOWED.      *
*         3. RETURN CODES TO CALLER.                                  *
*            (R15=00 ACCESS ALLOWED)                                  *
*            (R15=04 ACCESS NOT ALLOWED)                              *
*            (R15=08 LOCATE ERROR)                                    *
*                                                                     *
***********************************************************************
ACCESS   EQU   *
         STM   R0,R15,DSNSAV       SAVE THE REGISTERS
         MVI   WK1AREA,C' '        CLEAR WORK AREA TO BLANKS
         MVC   WK1AREA+1(255),WK1AREA
         MVC   WK1AREA+256(256),WK1AREA
         CLC   1(7,R8),=C'TAPEVOL' TAPEVOL CLASS
         BE    GENLOC              YES, USE GENERAL LOCATE
         MVC   RACLOC1D(LOC1SIZ),RACLOC1C INITIALIZE LOCATE
         MVC   RACAC1AD(ACT1ASIZ),RACAC1AC INITIALIZE ACTION
         MVC   RACAC1BD(ACT1BSIZ),RACAC1BC INITIALIZE ACTION
         MVC   RACAC1CD(ACT1CSIZ),RACAC1CC INITIALIZE ACTION
         MVC   RACAC1DD(ACT1DSIZ),RACAC1DC INITIALIZE ACTION
         SPACE
         ICHEINTY LOCATE,ENTRY=WDSNL,                                  X
               VOLUME=WVOLSER,                                         X
               OPTIONS=(FLDEF,TESTC,TESTM,ACTION),                     X
               WKAREA=WK1AREA,                                         X
               ACTIONS=(RACAC1AC,RACAC1BC,RACAC1CC,RACAC1DC),          X
               MF=(E,RACLOC1D)
         SPACE
ENDLOC   ST    R15,RLOCATE         SAVE RETURN CODE
         LTR   R15,R15             TEST RETURN CODE
         BZ    CKACCESS            ZERO, OK
ACCSR8   LA    R15,8               RETURN CODE 8
ACCSRET  LM    R0,R14,DSNSAV       RELOAD REGISTERS
         BR    R14                 RETURN TO CALLER
         SPACE 2
GENLOC   MVC   RACLOC2D(LOC2SIZ),RACLOC2C INITIALIZE LOCATE
         MVC   RACAC2AD(ACT2ASIZ),RACAC2AC INITIALIZE ACTION
         MVC   RACAC2BD(ACT2BSIZ),RACAC2BC INITIALIZE ACTION
         MVC   RACAC2CD(ACT2CSIZ),RACAC2CC INITIALIZE ACTION
         MVC   RACAC2DD(ACT2DSIZ),RACAC2DC INITIALIZE ACTION
         SPACE
         MVI   VOLSERL,6           LENGTH
         MVC   VOLSERL+1(6),0(R7)  VOLSER
         ICHEINTY LOCATE,ENTRY=VOLSERL,CLASS=TAPEVOL,                  X
               OPTIONS=(FLDEF,TESTC,TESTM,ACTION),                     X
               WKAREA=WK1AREA,                                         X
               ACTIONS=(RACAC2AD,RACAC2BD,RACAC2CD,RACAC2DD),          X
               MF=(E,RACLOC2D)
         SPACE
         B     ENDLOC
         EJECT
CKACCESS CLC   WK1DATA2,=X'0000'   ANY USERS ON ACCESS LIST
         BE    CKOPER              NO, CHECK FOR OPERATIONS ATTR
         LA    R1,WK1DATA3         ADDRESS OF USERIDS
         AH    R1,WK1SIZE3         ADDRESS OF # AUTHORITIES
         CLC   WK1DATA2,0(R1)      COMPARE # USERS TO # AUTHORITIES
         BNE   ACCSR8              NOT EQ, ERROR
         MVC   HIAUTH,=CL8' NONE'  CLEAR HIGHEST AUTH TO BLANK-NONE
         LA    R1,2(,R1)           CALC ADDRESS OF AUTHORITIES
         ST    R1,AUTHADR          SAVE ADDRESS OF AUTHORITIES
         L     R14,ACEEIEP         ADDRESS OF ACEE EXTENTION
         LTR   R14,R14             TEST FOR EXTENTION
         BZ    ACCSR8              ZERO, CAN NOT HELP
         USING IEPDSECT,R14
         SPACE
         LH    R0,WK1DATA2         LOAD # USERIDS
         LA    R1,WK1DATA3         ADDRESS OF AUTHORIZED IDS
         L     R2,AUTHADR          ADDRESS OF ATHORITIES
CKACCS1  CLC   ACEEUSRI,0(R1)      COMPARE FOR USERID
         BE    CKAUTH1             EQ, NOW CHECK AUTHORITY
         LA    R1,8(,R1)           NEXT USERID
         LA    R2,1(,R2)           NEXT AUTHORITY
         BCT   R0,CKACCS1          CHECK FOR USERID
         SPACE
* THE USER'S ID IS NOT ON THE ACCESS LIST
         SPACE
         LA    R3,IEPGROUP         ADDRESS OF CONNECTED GROUPS
         LH    R4,IEP#GRP          LOAD # OF GROUPS CONNECTED
CKACCS2  LH    R0,WK1DATA2         LOAD # IDS ON ACCESS LIST
         LA    R1,WK1DATA3         ADDRESS OF AUTHORIZED IDS
         L     R2,AUTHADR          ADDRESS OF ATHORITIES
CKACCS3  CLC   0(8,R3),0(R1)       COMPARE ON IDS
         BE    CKAUTH2             EQ, CHECK AUTHORITY
         LA    R1,8(,R1)           NEXT USERID
         LA    R2,1(,R2)           NEXT AUTHORITY
         BCT   R0,CKACCS3          CHECK THE ACCESS LIST
CKACCS4  LA    R3,8(,R3)           NEXT CONNECTED GROUP
         BCT   R4,CKACCS2          RECHECK THE ACCESS LIST
* THERE ARE NO GROUPS ON ACCESS LIST
* THAT ALLOW ACCESS.
         CLI   HIAUTH,C' '         WERE "ANY" GROUPS ON ACCESS LIST
         BE    CKACCS4A            NO, THEN CHECK FOR "OPERATIONS"
* THERE WERE GROUP(S) ON THE ACCESS LIST
* BUT ACCESS HAS NOT BEEN ALLOWED YET
         CLI   HIAUTH,C'0'         IS HIGHEST AUTH = NONE
         BE    ACCSR4              YES, DO NOT ALLOW
* ALL GROUP(S) WERE SPECIFICALLY GIVEN ACCESS "NONE"
         SPACE
CKACCS4A TM    ACEEFLG1,X'20'      CHECK FOR OPERATIONS ATTR
         BO    CKACCS5             YES, ALLOW
         LA    R2,WK1DATA1         POINT TO THE UACC
         BAL   R14,BLDALLOW        GO BUILD ALLOWED CODE
         CLI   ALWAUTH,C'?'        PROBLEM WITH AUTH
         BE    ACCSR8              YES,
         CLC   ALWAUTH(1),REQAUTH  COMPARE REQUESTED TO ALLOWED
         BNL   CKACCS6             ACCESS ALLOWED
         CLC   ALWAUTH,HIAUTH      COMPARE TO HIGHEST AUTH
         BNH   ACCSR4              NO HIGHER THAN PREVIOUS
         MVC   HIAUTH,ALWAUTH      SAVE THE HIGHEST AUTH
         B     ACCSR4              ACCESS NOT ALLOWED
CKACCS5  MVC   ALWAUTH,=CL8'4*OPER*' OPER - HAS ALTER
         LA    R1,ACEEUSRI           OPER - FAKE UID
         B     ACCSR0              ACCESS ALLOWED
CKACCS6  DS    0H
         LA    R1,=C'**UACC**'      OPER - FAKE UID
         B     ACCSR0              ACCESS ALLOWED
CKOPER   DS    0H
         TM    ACEEFLG1,X'20'      OPERATIONS ATTRIBUTE?
         BNO   ACCSR8              NO, RETURN AN ERROR
         B     CKACCS5             YES, FAKE ALTER
CKAUTH1  DS    0H
         BAL   R14,BLDALLOW               GO BUILD ALLOWED CODE
         CLI   ALWAUTH,C'?'        PROBLEM WITH AUTHORITY
         BE    ACCSR8              RETURN ERROR
         CLC   ALWAUTH(1),REQAUTH  COMPARE REQUESTED TO ALLOWED
         BNL   ACCSR0              ACCESS ALLOWED
         CLC   ALWAUTH(1),HIAUTH   COMPARE TO HIGHEST AUTH
         BNH   ACCSR4              NO HIGHER THAN PREVIOUS
         MVC   HIAUTH,ALWAUTH      SAVE THE HIGHEST AUTH
         B     ACCSR4              ACCESS NOT ALLOWED
ACCSR0   SR    R15,R15             ZERO RETURN CODE
         MVC   HIAUTH,ALWAUTH      SAVE THE GOOD AUTH
         MVC   GOODID,0(R1)        SAVE THE GOOD ID
         B     ACCSRET             RETURN
ACCSR4   LA    R15,4               RETURN CODE 4
         B     ACCSRET             RETURN
CKAUTH2  DS    0H
         BAL   R14,BLDALLOW               GO BUILD ALLOWED CODE
         CLI   ALWAUTH,C'?'        PROBLEM WITH AUTHORITY
         BE    ACCSR8              RETURN ERROR
         CLC   ALWAUTH(1),REQAUTH  COMPARE REQUESTED TO ALLOWED
         BNL   ACCSR0              ACCESS ALLOWED
         CLC   ALWAUTH,HIAUTH      COMPARE TO HIGHEST AUTH
         BNH   CKACCS4             NO HIGHER THAN PREVIOUS
         MVC   HIAUTH,ALWAUTH      SAVE THE HIGHEST AUTH
         B     CKACCS4             TRY NEXT CONNECTED GROUP
BLDALLOW LA    R3,=CL8'4ALTER'            ALTER AUTH
         TM    0(R2),X'80'                ALTER AUTH
         BO    DOREQ2                     YES, SET ALLOWED AUTH
         LA    R3,=CL8'3CONTROL'          CONTROL AUTH
         TM    0(R2),X'40'                CONTROL AUTH
         BO    DOREQ2                     YES, SET ALLOWED AUTH
         LA    R3,=CL8'2UPDATE'           UPDATE AUTH
         TM    0(R2),X'20'                UPDATE AUTH
         BO    DOREQ2                     YES, SET ALLOWED AUTH
         LA    R3,=CL8'1READ'             READ AUTH
         TM    0(R2),X'10'                READ AUTH
         BO    DOREQ2                     YES, SET ALLOWED AUTH
         LA    R3,=CL8'0NONE'             NONE AUTH
         TM    0(R2),X'01'                NONE AUTH
         BO    DOREQ2                     YES, SET ALLOWED AUTH
         LA    R3,=CL8'????????'          ???? REQUEST
DOREQ2   MVC   ALWAUTH,0(R3)              SAVE THE ALLOWED AUTH
         BR    R14                        RETURN
         EJECT
RACFRET  DS    0H
***********************************************************************
*        GENERATE A GTF USER RECORD OF THE RACHECK PARAMETERS
***********************************************************************
         L     R1,CVTADR                  GET CVT ADDRESS
         ICM   R1,7,992+1(R1)             GET CVTRAC ADDRESS
         TM    RCVTCAUD+3,X'01'           TEST BIT POS 31. OPTA
         BNO   NOGTF02                    NOT ON, BYPASS GTF
         XC    GTFREC01,GTFREC01          CLEAN OUT THE RECORD
         MVC   GTFFLAG1,0(R3)             FLAG1 TO GTF RECORD
         MVC   GTFFLAG2,0(R4)             FLAG2 TO GTF RECORD
         MVC   GTFFLAG3,0(R5)             FLAG3 TO GTF RECORD
         MVC   GTFDSN,0(R7)               DSNAME TO GTF RECORD
         MVC   GTFVOL,0(R9)               VOLSER TO GTF RECORD
         MVC   GTFJOBNM,JOBNAME           JOBNAME TO GTF RECORD
         L     R1,40(,R11)                PICK UP ADD OF ABEND CODE
         MVC   GTFABEND,0(R1)             AND SAVE IN GTF RECORD
         L     R1,44(,R11)                PICK UP REASON CODE ADDRESS
         MVC   GTFRC,0(R1)                AND SAVE IN GTF RECORD
         L     R1,48(,R11)                ADDRESS OF ACCESS CODE
         MVC   GTFACCOD,0(R1)             SAVE IN GTF RECORD
         MVC   GTFLIST(GTFLISTL),GTFPROTO MOVE IN PROTOTYPE LIST
         LA    R0,GTFREC01                ADD OF GTF USER RECORD
         GTRACE DATA=(R0),ID=1,PAGEIN=YES,MF=(E,GTFLIST)
NOGTF02  DS    0H
***********************************************************************
*        WTO THE JOBNAME AND DSNAME OF THE DATASET BEING RACHECKED
***********************************************************************
         L     R1,CVTADR                  GET CVT ADDRESS
         ICM   R1,7,992+1(R1)             GET CVTRAC ADDRESS
         TM    RCVTCSTA+3,X'01'           TEST BIT POS 31. OPTA
         BNO   NOWTO02                    NOT ON, BYPASS WTO
         MVC   WTOLIST(WTOLISTL),WTOPROTO INITIALIZE WTO AREA
         MVC   MSG1(MSG1LGTH),MSG1PRTO    INITIALIZE MESSAGE
         MVC   MSG1CLAS,1(R8)             MOVE IN THE CLASS NAME
         MVC   MSG1JOBN,JOBNAME           MOVE IN THE JOBNAME
         MVC   MSG1DSN,0(R7)              MOVE IN DSN
         MVC   MSG1VOL,0(R9)              MOVE IN VOLSER
         MVC   WTOLIST+4(MSG1LGTH),MSG1   MESSAGE TO WTO
         WTO   MF=(E,WTOLIST)             WRITE IT OUT
NOWTO02  DS    0H
         SPACE
         SR    R15,R15                    CLEAR RETURN CODE
         B     PLUGR15                    PLUG IT AND GET OUT
         EJECT
RACNXT1  DS   0H
         CLC   1(7,R8),=C'TAPEVOL' IS THE ENTITY CLASS TAPEVOL?
         BNE   RACNXT2             NO,
***********************************************************************
*        GENERATE A GTF USER RECORD OF THE RACHECK PARAMETERS
***********************************************************************
         L     R1,CVTADR                  GET CVT ADDRESS
         ICM   R1,7,992+1(R1)             GET CVTRAC ADDRESS
         TM    RCVTCAUD+3,X'01'           TEST BIT POS 31. OPTA
         BNO   NOGTF03                    NOT ON, BYPASS GTF
         XC    GTFREC01,GTFREC01          CLEAN OUT THE RECORD
         MVC   GTFFLAG1,0(R3)             FLAG1 TO GTF RECORD
         MVC   GTFFLAG2,0(R4)             FLAG2 TO GTF RECORD
         MVC   GTFFLAG3,0(R5)             FLAG3 TO GTF RECORD
         MVC   GTFDSN,0(R7)               DSNAME TO GTF RECORD
         MVC   GTFVOL,0(R9)               VOLSER TO GTF RECORD
         MVC   GTFJOBNM,JOBNAME           JOBNAME TO GTF RECORD
         L     R1,40(,R11)                PICK UP ADD OF ABEND CODE
         MVC   GTFABEND,0(R1)             AND SAVE IN GTF RECORD
         L     R1,44(,R11)                PICK UP REASON CODE ADDRESS
         MVC   GTFRC,0(R1)                AND SAVE IN GTF RECORD
         L     R1,48(,R11)                ADDRESS OF ACCESS CODE
         MVC   GTFACCOD,0(R1)             SAVE IN GTF RECORD
         MVC   GTFLIST(GTFLISTL),GTFPROTO MOVE IN PROTOTYPE LIST
         LA    R0,GTFREC01                ADD OF GTF USER RECORD
         GTRACE DATA=(R0),ID=1,PAGEIN=YES,MF=(E,GTFLIST)
NOGTF03  DS    0H
***********************************************************************
*        WTO THE JOBNAME AND TAPE VOLSER BEING RACHECKED
***********************************************************************
         L     R1,CVTADR                  GET CVT ADDRESS
         ICM   R1,7,992+1(R1)             GET CVTRAC ADDRESS
         TM    RCVTCSTA+3,X'01'           TEST BIT POS 31. OPTA
         BNO   NOWTO03                    NOT ON, BYPASS WTO
         MVC   WTOLIST(WTOLISTL),WTOPROTO INITIALIZE WTO AREA
         MVC   MSG2(MSG1LGTH),MSG2PRTO    INITIALIZE MESSAGE
         MVC   MSG2CLAS,1(R8)             MOVE IN THE CLASS NAME
         MVC   MSG2JOBN,JOBNAME           MOVE IN THE JOBNAME
         MVC   MSG2VOL,0(R7)              MOVE IN RESOURCE (VOLSER)
         MVC   MSG2REQA,REQAUTH+1         MOVE IN REQUEST AUTH
         MVC   WTOLIST+4(MSG1LGTH),MSG2   MESSAGE TO WTO
         WTO   MF=(E,WTOLIST)             WRITE IT OUT
NOWTO03  DS    0H
         SPACE
         B     CHGNAME                    GO CHECK IT OUT
         EJECT
RACNXT2  DS   0H
         XR    R15,R15                    CONTINUE SVC PROCESSING
         B     PLUGR15                    PLUG IT AND GET OUT
         NOP  SLOWPATH                   ZAP TO FORCE SLOW PATH
***********************************************************************
*        ALL TAPE VOLUMES THAT HAVE SERIAL NUMBERS STARTING WITH      *
*        RAC ARE ASSUMED TO BE RACF PROTECTED OTHERS NOT.             *
*        A TEST IS, THEREFORE, MADE TO PERMIT NON-PROTECTED TAPE      *
*        REQUESTS TO UTILIZE THE FAST PATH                            *
*                                                                     *
***********************************************************************
RACTAPE  EQU   *
         TM    0(R5),X'20'                IS THIS A PROFILE REQUEST
         BO    USRINDEX                  YES - BUSINESS AS USUAL
         CLC   1(7,R8),=C'TAPEVOL'        IS THE ENTITY CLASS TAPEVOL
         BNE   USRINDEX                  NO CONTINUE AS USUAL
         CLC   0(3,R7),=C'RAC'  DOES TAPEVOL ENTITY START WITH RAC
         BNE   FASTPATH         FAST PATH FOR NON PROTECTED TAPES
USRINDEX L     R1,CVTADR                  CVT
         L     R1,0(,R1)                  CVTTCBP
         L     R1,12(,R1)                 CURRENT ASCB
         L     R1,108(,R1)                ASXB
         L     R1,200(,R1)                ACEE (NOW THAT WASNT HARD..)
         CLC   0(2,R7),=CL2'T.'           SPECIAL HIGH LEVEL INDEX
         BNE   *+4+6+6                    NO
         MVC   0(5,R7),2(R7)              SWAP THE FIRST TWO
         MVC   5(2,R7),=CL2'T.'           DATASET INDICIES
         SR    R2,R2                      CLEAR FOR ADDITION BELOW
         IC    R2,20(,R1)                 USERID LENGTH
         BCTR  R2,0                       HARDWARE LENGTH
         EX    R2,CLCUSER             USERID - HIGH LEVEL DSN INDEX?
         BNE   DSNLOOK                    NO - LOOK FOR SPECIAL DSN
         AR    R2,R7                      MAKE SURE THAT THIS
         CLI   1(R2),C'.'                 REALLY IS A COMPLETE INDEX
         BE    FASTPATH                   GOOD INDEX TAKE THE FAST PATH
***********************************************************************
*        CHECK FOR SPECIAL DSN
***********************************************************************
DSNLOOK  DS    0H                         SEARCH TABLE OF SPECIAL DSNS
         SR    R14,R14                    CLEAR FOR ADDITION BELOW
         LA    R15,DSNTABLE               START OF FAST PATH DSN TABLE
DSNLOOP  CLI   0(R15),X'FF'               END OF TABLES
         BE    SLOWPATH                   YES - TAKE THE SLOWPATH
         IC    R14,1(,R15)                HARDWARE DSN LENGTH
         EX    R14,CLCDSN                 IS THIS THE RIGHT DSN?
         BNE   NEXTDSN                NO - INDEX UP TO NEXT TABLE ENTRY
         IC    R14,0(,R15)                ALLOWANBLE LEVELS OF ACCESS
         EX    R14,TMDSN                IS THIS LEVEL OF ACCESS ALLOWED
         BNZ   FASTPATH                   YES - TAKE FAST PATH OUT
NEXTDSN  LA    R15,3(R14,R15)             INDEX UP TO NEXT ENTRY IN TBL
         B     DSNLOOP                    KEEP LOOKING
         SPACE
CLCUSER  CLC   21(*-*,R1),0(R7)           USERID : DSN HIGH LEVEL INDEX
CLCDSN   CLC   2(*-*,R15),0(R7)           DSN IN TBL : DSN IN PARM
TMDSN    TM    0(R4),*-*                  ACCESS LEVEL OF DSN
         SPACE
FASTPATH DS    0H
         LA    R15,8                      NO MORE SVC PROCESSING
         B     PLUGR15                    PLUG IT AND GET OUT
         SPACE
SLOWPATH DS    0H
         WTO   'RACHECK  *** SLOW PATH FORCED ***',ROUTCDE=(9,11)
         XR    R15,R15                    CONTINUE SVC PROCESSING
         B     PLUGR15                    PLUG IT AND GET OUT
         SPACE
BADNODE  DS    0H
         WTO   'RACHECK  *** INVALID DSNAME NODE ***',ROUTCDE=(9,11)
         LA    R15,0                      MUST BE MY BAD CODING
         B     PLUGR15                    PLUG IT AND GET OUT
         SPACE 3
         EJECT
NORACF   DS    0H
         CLC   1(7,R8),=C'DATASET' IS THE ENTITY CLASS DATASET?
         BNE   NORACF02            NO,
         BAL   R14,BLDPASS                BUILD PAST WORK AREA
NORACF02 WTO   '*** WARNING *** RACF NOT ACTIVE - ACCESS ALLOWED',     X
               ROUTCDE=(9)
         LA    R15,8                      RACF IS NOT ACTIVE
         EJECT
PLUGR15  DS    0H
         LR    R1,R13            SAVE NEW SAVEAREA ADR FOR FREEMAIN
         L     R13,SAVEOLD                OLD SAVEAREA
         ST    R15,SAVER15       PLUG (R15) FOR RESTORE (R14-R12)
***********************************************************************
*        FREEMAIN NEW SAVEAREA AND RETURN TO CALLER
***********************************************************************
         FREEMAIN R,A=(1),LV=WORKSIZE,SP=253 FREE UP NEW SAVEAREA
         XC    SAVENEW,SAVENEW            BREAK CHAIN
         LM    R14,R12,SAVER14            RESTORE REGS
         BR    R14                        BACK TO MOTHER
         DROP  ,                          DROP EVERYTHING
         EJECT
***********************************************************************
*        PARAMETER LISTS ECT.
***********************************************************************
GTFPROTO GTRACE LNG=256,ID=1,MF=L
GTFLISTL EQU   *-GTFPROTO              LENGTH OF PROTOTYPE GTRACE LIST
WTOPROTO WTO   '                                                       X
                                                                       X
                         ',                                            X
               MF=L,ROUTCDE=(9,11)
WTOLISTL EQU   *-WTOPROTO              LENGTH OF PROTOTYPE WTO LIST
MSG1PRTO EQU   *
         DC    C'RACHECK CLASS='
         DC    CL7' '
         DC    C',JOB='
         DC    CL8' '
         DC    C',REQ='
         DC    CL7' '
         DC    C',VOL='
         DC    CL6' '
         DC    C',DSN='
         DC    CL44' '
MSG1LGTH EQU   *-MSG1PRTO
MSG2PRTO EQU   *
         DC    C'RACHECK CLASS='
         DC    CL7' '
         DC    C',JOB='
         DC    CL8' '
         DC    C',REQ='
         DC    CL7' '
         DC    C',VOL='
         DC    CL6' '
         DC    C'      '
         DC    CL44' '
MSG2LGTH EQU   *-MSG1PRTO
MSG3PRTO EQU   *
         DC    C'ICH408I JOB('
         DC    CL8' '
         DC    C') USER('
         DC    CL8' '
         DC    C')'
MSG3LGTH EQU   *-MSG3PRTO
MSG4PRTO EQU   *
         DC    CL44' '
         DC    C'                       '
MSG4LGTH EQU   *-MSG4PRTO
MSG4A    DC    C'CL(DATASET ) VOL(999999)'
MSG4B    DC    C'INSUFFICIENT ACCESS AUTHORITY'
MSG5PRTO EQU   *
         DC    C'ACCESS INTENT('
         DC    CL7' '
         DC    C') ACCESS ALLOWED('
         DC    CL7' '
         DC    C')'
MSG5LGTH EQU   *-MSG5PRTO
         SPACE
         NODETAB
PASSPARM DC    AL1(253),AL3(90)
TAPEVOL  DC    CL7'TAPEVOL'
DSNTABLE DS    0F
         DSN   6,'SYS1.BRODCAST'
         DSN   6,'SYS1.PROCS'
         DSN   2,'SYS1.MACLIB'
         DSN   2,'SYS1.PLIBASE'
         DSN   2,'SYS1.FORTLIB'
         DSN   2,'SYS1.COBLIB'
         DC    X'FF'                     END OF TABLE
RACLOC1C ICHEINTY LOCATE,TYPE='DS',ACTIONS=(,,,),MF=L,                 X
               ENTRY=0,WKAREA=0
LOC1SIZ  EQU   *-RACLOC1C
RACAC1AC ICHEACTN FIELD=UNIVACS,MF=L
ACT1ASIZ  EQU   *-RACAC1AC
RACAC1BC ICHEACTN FIELD=ACLCNT,MF=L
ACT1BSIZ EQU   *-RACAC1BC
RACAC1CC ICHEACTN FIELD=USERID,MF=L
ACT1CSIZ EQU   *-RACAC1CC
RACAC1DC ICHEACTN FIELD=USERACS,MF=L
ACT1DSIZ EQU   *-RACAC1DC
RACLOC2C ICHEINTY LOCATE,TYPE='GEN',ACTIONS=(,,,),MF=L,                X
               ENTRY=0,WKAREA=0
LOC2SIZ  EQU   *-RACLOC2C
RACAC2AC ICHEACTN FIELD=UACC,MF=L
ACT2ASIZ  EQU   *-RACAC2AC
RACAC2BC ICHEACTN FIELD=ACLCNT,MF=L
ACT2BSIZ EQU   *-RACAC2BC
RACAC2CC ICHEACTN FIELD=USERID,MF=L
ACT2CSIZ EQU   *-RACAC2CC
RACAC2DC ICHEACTN FIELD=USERACS,MF=L
ACT2DSIZ EQU   *-RACAC2DC
         LTORG
         EJECT
CX01PARM DSECT
CX01WORD DS    F                   ADDRESS OF PARM COUNT IN LIST
CX01FLG1 DS    F                   ADDRESS OF FLAG BYTE 1
CX01FLG2 DS    F                   ADDRESS OF FLAG BYTE 2
CX01FLG3 DS    F                   ADDRESS OF FLAG BYTE 3
CX01INST DS    F                   ADDRESS OF INSTALL PARMS FOR USER
CX01ENTY DS    F                   ADDRESS OF ENTITY NAME
CX01CLAS DS    F                   ADDRESS OF CLASS NAME
CX01VOLN DS    F                   ADDRESS OF VOLSER
CX01USRD DS    F                   ADDRESS OF USER DATA FROM PROFILE
CX01WRKA DS    F                   ADDRESS OF WORKAREA BETWEEN EXITS
CX01ABND DS    F                   ADDRESS OF ABEND CODE FROM RACF-SVC
CX01RTRN DS    F                   ADDRESS OF RETURN CODE FROM RACF-SVC
CX01ACSS DS    F                   ADDRESS OF USERS'S AUTHORITY LEVEL
CX01RSNM DS    F                   ADDRESS OF LEVEL VALUE OF RESOURCE
CX01OLDV DS    F                   ADDRESS OF PREVIOUS DEFINED VOLSER
CX01NAMC DS    F                   ADDRESS OF NAMING CONV. PARM. LIST
CX01APPL DS    F                   ADDRESS OF APPLICATION NAME FROM SVC
CX01ACEE DS    F                   ADDRESS OF ACEE PASSED FROM SVC
         EJECT
SAVEAREA DSECT
SAVEPLI  DS    F
SAVEOLD  DS    F
SAVENEW  DS    F
SAVER14  DS    F
SAVER15  DS    F
SAVER0   DS    F
SAVER1   DS    F
SAVER2   DS    F
SAVER3   DS    F
SAVER4   DS    F
SAVER5   DS    F
SAVER6   DS    F
SAVER7   DS    F
SAVER8   DS    F
SAVER9   DS    F
SAVER10  DS    F
SAVER11  DS    F
SAVER12  DS    F
SAVESIZE EQU   *-SAVEAREA
WORKAREA EQU   *                          START OF WORKAREA
GTFLIST  GTRACE LNG=256,ID=1,MF=L
WTOLIST  WTO   '                                                       X
                                                                       X
                         ',                                            X
               MF=L,ROUTCDE=(9,11)
MSG1     EQU   *
         DC    C'RACHECK CLASS='
MSG1CLAS DC    CL7' '
         DC    C',JOB='
MSG1JOBN DC    CL8' '
         DC    C',REQ='
MSG1REQA DC    CL7' '
         DC    C',VOL='
MSG1VOL  DC    CL6' '
         DC    C',DSN='
MSG1DSN  DC    CL44' '
MSG2     EQU   *
         DC    C'RACHECK CLASS='
MSG2CLAS DC    CL7' '
         DC    C',JOB='
MSG2JOBN DC    CL8' '
         DC    C',REQ='
MSG2REQA DC    CL7' '
         DC    C',VOL='
MSG2VOL  DC    CL6' '
         DC    C'      '
         DC    CL44' '
MSG3     EQU   *
         DC    C'ICH408I JOB('
MSG3JOBN DC    CL8' '
         DC    C') USER('
MSG3USER DC    CL8' '
         DC    C')'
MSG4     EQU   *
MSG4DSN  DC    CL44' '
         DC    C'CL('
MSG4CLAS DC    C'DATASET'
         DC    C') VOL('
MSG4VOL  DC    C'999999'
         DC    C')'
MSG5     EQU   *
         DC    C'ACCESS INTENT('
MSG5REQA DC    CL7' '
         DC    C') ACCESS ALLOWED('
MSG5ALWA DC    CL7' '
         DC    C')'
GTFREC01 DS    XL256                      GTF USER RECORD TYPE 1
         ORG   GTFREC01                   OVERLAY THE DIFFERENT FIELDS
GTFJOBNM DS    CL8                        JOBNAME
GTFFLAG1 DS    X                          FLAG BYTE 1
GTFFLAG2 DS    X                          FLAG BYTE 2
GTFFLAG3 DS    X                          FLAG BYTE 3
         DS    X                          PAD
GTFVOL   DS    CL6                        DATASET VOLSER
         DS    XL2                        PAD
GTFDSN   DS    CL44                       DATASET NAME
GTFABEND DS    CL4
GTFRC    DS    CL4
GTFACCOD DS    C
         ORG
RACLOC1D ICHEINTY LOCATE,TYPE='DS',ACTIONS=(,,,),MF=L,                 X
               ENTRY=0,WKAREA=0
RACAC1AD ICHEACTN FIELD=UNIVACS,MF=L
RACAC1BD ICHEACTN FIELD=ACLCNT,MF=L
RACAC1CD ICHEACTN FIELD=USERID,MF=L
RACAC1DD ICHEACTN FIELD=USERACS,MF=L
RACLOC2D ICHEINTY LOCATE,TYPE='GEN',ACTIONS=(,,,),MF=L,                X
               ENTRY=0,WKAREA=0
RACAC2AD ICHEACTN FIELD=UACC,MF=L
RACAC2BD ICHEACTN FIELD=ACLCNT,MF=L
RACAC2CD ICHEACTN FIELD=USERID,MF=L
RACAC2DD ICHEACTN FIELD=USERACS,MF=L
         SPACE 2
WK1AREA  DS    0C                  START OF 512 BYTE WORK AREA
         DS    CL26
         DS    CL2                 LENGTH OF ALL EXTRACTED DATA
WK1SIZE1 DS    CL2                 SIZE OF UACC
WK1DATA1 DS    CL1                 UACC
WK1SIZE2 DS    CL2                 SIZE OF # USERS
WK1DATA2 DS    CL2                 # USERS
WK1SIZE3 DS    CL2                 SIZE OF ALL ENTRIES
WK1DATA3 DS    0CL8                ENTRIES
         DS    CL219               PADDING FOR ALL CLASSES
         DS    CL256               AND ALL GROUPS
REQAUTH  DC    CL8' '              REQUESTED AUTH
ALWAUTH  DC    CL8' '              ALLOWED AUTH
HIAUTH   DC    CL8' '              HIGHEST AUTH
SAVEN    DC    CL9' '
RLOCATE  DS    F                   RETURN CODE FOR LOCATE
AUTHADR  DS    F                   ADDRESS OF ACCESS AUTHORITIES
CVTADR   DS    F                   ADDRESS OF CVT
WRETURN  DS    F                   RETURN CODE AREA
PASSACEE DS    F                   ACEE PASSED TO RACHECK
ASCBACEE DS    F                   ACEE CHAINED OFF ASCB
JOBNAME  DS    CL8                 JOBNAME CHAINED OFF ASCB
VOLSERL  DS    CL7                 VOLSER & LENGTH FOR LOCATE
GOODID   DS    CL8                 ID WITH AUTHORITY TO ALLOW
         SPACE 2
BLANKS   DC    CL44' '
         WRKDSN
WORKSIZE EQU   *-SAVEAREA
         EJECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         ICHPRCVT
         IHAACEE
         IEPMACRO
         PASSMAC
         END
