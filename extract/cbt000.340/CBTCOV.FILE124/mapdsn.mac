          MACRO
          MAPDSN
***********************************************************************
*                                                                     *
*        THE FOLLOWING CODE WILL BUILD A NODE TABLE.                  *
*        THE DSNAME WILL BE SEPERATED INTO NODES, THE FIRST NODE IN   *
*        "WNODE1" THE SECOND NODE IN "WNODE2" ETC.  THE LAST NODE     *
*        WILL ALSO BE STORED IN "WNODEL".  THE NUMBER OF NODES WILL   *
*        BE STORED IN "W#NODES".  WFLAG1 IS SET TO WFLG1GDG X'80'     *
*        IF THE DATASET IS A GENERATION DATASET(GDG).  WFLAG1 IS SET  *
*        WFLG1USR X'40' IF THE DATASET IS A USER DATASET.             *
*                                                                     *
*        INPUT:                                                       *
*          R1 - DSNAME INPUT                                          *
*          R14- RETURN ADDRESS                                        *
*                                                                     *
***********************************************************************
MAPDSN   DS    0H
         STM   R0,R15,DSNSAV       SAVE REGS
         SR    R15,R15             CLEAR RETURN CODE
         MVI   WFLAG1,X'00'        CLEAR FLAG BYTE
         MVI   WNODE1L,C' '        BLANK OUT
         MVC   WNODE1L+1(81),WNODE1L  NODE WORK AREA
         MVC   WDSNAME,0(R1)       MOVE DSNAME TO WORKAREA
         LA    R14,WNODE1L         POINT TO FIRST NODE AREA LENGTH
         LA    R1,WDSNAME          POINT TO DSNAME AREA
         SR    R3,R3               CLEAR NODE COUNT REG
MAP001   LR    R5,R1               KEEP ADDRESS WITHIN DSNAME
         LA    R0,8                LIMIT NODE LENGTH TO 8
MAP002   CLI   1(R1),C' '          FOUND END OF DSNAME?
         BNE   MAP003              NO, CHECK END OF NODE
         BAL   R4,MAP005           YES, SAVE LAST NODE
         B     MAP007              CHECK FOR GDG DATASET
MAP003   CLI   1(R1),C'.'          FOUND END OF NODE?
         BNE   MAP004              NO, BUMP TO NEXT BYTE
         BAL   R4,MAP005           YES, SAVE LAST NODE
         B     MAP001              THEN LOOK FOR NEXT NODE
MAP004   LA    R1,1(,R1)           BUMP TO NEXT BYTE
         BCT   R0,MAP002           CHECK NODE AGAIN
         LA    R15,4               NODE > 8 BYTES
         B     MAPRET              RETURN TO CALLER
MAP005   LA    R3,1(,R3)           COUNT NUMBER OF NODES
         STC   R3,W#NODES          SAVE THAT COUNT
         CLI   W#NODES,8           NODE COUNT > 8 ?
         BNH   MAP006              NO, EVERYTHING IS OK
         LA    R15,8               # NODES > 8
         B     MAPRET              RETURN TO CALLER
MAP006   LA    R1,1(,R1)           COUNT NUMBER OF NODES
         LR    R2,R1               LOAD END OF NODE POINTER
         SR    R2,R5               SUBT. FIRST OF NODE POINTER
         MVC   WNODEL,=CL8' '      CLEAR LAST NODE AREA
         STC   R2,0(R14)           STORE THE NODE LENGTH
         STC   R2,WNODELL          STORE THE NODE LENGTH
         BCTR  R2,0                CALC NODE LENGTH
         EX    R2,MAPX01           STORE THE NODE INTO WNODE-
         EX    R2,MAPX02           STORE THE NODE INTO WNODEL
         LA    R14,9(,R14)         NEXT WNODE AREA
         LA    R1,1(,R1)           NEXT NODE IN DSNAME
         BR    R4                  RETURN TO CALLER
MAP007   CLI   W#NODES,1           GDG MUST BE > ONE NODE
         BH    MAP008              YES, COULD BE GDG
         B     MAPRET              NO, NOT A GDG
MAP008   CLI   WNODEL,C'G'         LAST NODE GXXXXVYY
         BNE   MAPRET              NO, NOT A GDG
         CLI   WNODEL+5,C'V'       LAST NODE GXXXXVYY
         BNE   MAPRET              NO, NOT A GDG
         LA    R1,WNODEL+1         POINT TO LAST NODE XXXX
         LA    R0,4                LIMIT LOOP COUNT
MAP009   CLI   0(R1),C'0'          CHECK NUMERIC ?
         BL    MAPRET              NO, NOT A GDG
         CLI   0(R1),C'9'          CHECK NUMERIC ?
         BH    MAPRET              NO, NOT A GDG
         LA    R1,1(,R1)           NEXT BYTE
         BCT   R0,MAP009           CHECK AGAIN
         LA    R1,WNODEL+6         POINT TO LAST NODE YY
         LA    R0,2                LIMIT LOOP COUNT
MAP010   CLI   0(R1),C'0'          CHECK NUMERIC ?
         BL    MAPRET              NO, NOT A GDG
         CLI   0(R1),C'9'          CHECK NUMERIC ?
         BH    MAPRET              NO, NOT A GDG
         LA    R1,1(,R1)           NEXT BYTE
         BCT   R0,MAP010           CHECK AGAIN
         OI    WFLAG1,WFLG1GDG     SET GDG FLAG ON
MAPRET   DS    0H
         CLI   WNODE1L,7           IS THIS A USER DATASET LENGTH
         BNE   MAP011              NO, CHECK ANOTHER LENGTH
         CLC   WNODE1+4(2),=C'OT'  IS THIS A VALID USER SYMBOL
         BE    MAP013              YES, PROCESS AS A USER DATASET
         B     MAP014              OTHERWISE, MUST BE GROUP DATASET
MAP011   CLI   WNODE1L,6           IS THIS A USER DATASET LENGTH
         BNE   MAP014              NO, MUST BE A GROUP DATASET
         CLI   WNODE1,C'U'         NAME START WITH - U
         BNE   MAP014              NO, MUST BE A GROUP DATASET
         LA    R0,5                SET TO TEST 5 BYTES
         LA    R1,WNODE1+1         POINT THE COMPARE AFTER THE - U
MAP012   CLI   0(R1),C'0'          COMPARE BYTE TO - ZERO
         BL    MAP014              LOW, MUST BE A GROUP DATASET
         CLI   0(R1),C'9'          COMPARE BYTE TO - NINE
         BH    MAP014              HI, MUST BE A GROUP DATASET
         LA    R1,1(,R1)           BUMP TO NEXT BYTE
         BCT   R0,MAP012           LOOP THRU THE 5 BYTES
MAP013   OI    WFLAG1,WFLG1USR     FLAG AS A USER DATASET
MAP014   LM    R0,R14,DSNSAV       RESTORE ALL BUT R15
         BR    R14                 RETURN TO CALLER
MAPX01   MVC   1(*-*,R14),0(R5)    MOVE NODE TO WORKAREA
MAPX02   MVC   WNODEL(0),0(R5)     MOVE NODE TO LAST NODE
         MEND
