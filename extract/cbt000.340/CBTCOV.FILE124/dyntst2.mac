//LTJ01199 JOB ('MVSJES3      ','LFALJMVS1TJ1               '),
// 'T ROBINSON    49',MSGLEVEL=1,PRTY=12,NOTIFY=L11FOTJ,
//  PERFORM=4,MSGCLASS=A
//*MAIN CLASS=Q96
//*DIST  PLEASE DELIVER TO TONY ROBINSON _______CUBICLE 49_______
//*DIST  PLEASE DELIVER TO TONY ROBINSON _______CUBICLE 49_______
//*DIST  PLEASE DELIVER TO TONY ROBINSON _______CUBICLE 49_______
//*PASSWORD DSN=EP.TESTLIBH,P=XXXX
//   EXEC ASMFCLE,RENT=NORENT SYSLMOD='EP.TESTLIBH(GETVTOC)',DISP=SHR
//ASMFCLE.SYSPRINT DD SYSOUT=*
//ASMFCLE.SYSIN    DD *
         TITLE 'VTOC SCAN - RACF ZAP UTILITY'
GETVTOC  ENTER REG=12
         EQREG
         OPEN  (SYSUT2,(OUTPUT))
         OPEN  (SYSIN,(INPUT))
GETCARD  GET   SYSIN
         MVC   VOLTAB(6),0(R1)     MOVE VOLSER FROM INPUT
         MVC   DSNAME,6(R1)        MOVE DSNAME FROM INPUT
         LA    R1,DSNAME           POINT TO START OF DSNAME
         SR    R2,R2               CLEAR FOR SIZE OF DSNAME
DSNCHK   CLI   0(R1),C' '          END OF DSNAME?
         BE    DSNEND              YES,
         LA    R1,1(,R1)           NEXT BYTE OF DSNAME
         LA    R2,1(,R2)           COUNT SIZE OF DSNAME
         B     DSNCHK              FIND END OF DSNAME
DSNEND   ST    R2,DSNSIZE          SAVE DSNAME SIZE
         MVC   JFCBVOL(6),VOLTAB
         MVC   DYNVOL(6),VOLTAB
         LA    R1,A99
         DYNALLOC
         ST    R15,RETCODE1
         LTR   R15,R15
         BZ    OPEN
         PUT   SYSUT2
         LR    R6,R1               POINT TO RECORD
         MVC   0(80,R6),=CL80'DYNAMIC ALLOCATION FAILED FOR VOLSER'
         MVC   37(6,R6),VOLTAB
         B     GETCARD
OPEN     DS    0H
         LA    R1,JFCB
         ST    R1,EXITLIST
         MVI   EXITLIST,X'87'
         OPEN  (SYSUT1,(INPUT)),TYPE=J
         LA    R7,DSCB
READVTOC READ  VTOCECB,SF,SYSUT1,(7),140
         CHECK VTOCECB
         CLI   DSCB+44,X'F1'       FORMAT ONE
         BNE   READVTOC            YES, BYPASS
         TM    DSCB+93,X'40'       RACF PROTECTED
         BNO   READVTOC            NO, BYPASS
         L     R8,DSNSIZE          SIZE OF DSNAME
         LTR   R8,R8               ZERO SIZE
         BZ    TAKEIT              YES,
         BCTR  R8,0                LESS ONE FOR EXECUTE
         EX    R8,DSNCLC           CORRECT DSNAME
         BNE   READVTOC            NO, BYPASS
TAKEIT   MVC   MBBCCHHR,SYSUT1+5
         UNPK  WORK(11),MBBCCHHR+3(6) CONVERT TO CHAR - STEP 1
         TR    WORK(10),TABLE-240     CONVERT TO CHAR - STEP 2
         PUT   SYSUT2
         LR    R6,R1               POINT TO RECORD
         MVC   0(80,R6),RECORD1    FORMAT RECORD 1 (CCHHR)
         MVC   7(10,R6),WORK       - CCHHR
         MVC   23(44,R6),DSCB      - DSNAME
         PUT   SYSUT2
         LR    R6,R1               POINT TO RECORD
         MVC   WORK+9(1),DSCB+93   GET THE DS1DSIND
         UNPK  WORK(3),WORK+9(2)   CONVERT TO CHAR - STEP 1
         TR    WORK(2),TABLE-240   CONVERT TO CHAR - STEP 2
         MVC   0(80,R6),RECORD2    FORMAT RECORD 2 (VERIFY)
         MVC   11(2,R6),WORK        - VER VALUE
         PUT   SYSUT2
         LR    R6,R1               POINT TO RECORD
         MVC   WORK+9(1),DSCB+93   GET THE DS1DSIND
         NI    WORK+9,X'BF'        TURN OFF RACF PROTECTED BIT
         UNPK  WORK(3),WORK+9(2)   CONVERT TO CHAR - STEP 1
         TR    WORK(2),TABLE-240   CONVERT TO CHAR - STEP 2
         MVC   0(80,R6),RECORD3    FORMAT RECORD 3 (VERIFY)
         MVC   11(2,R6),WORK        - REP VALUE
         B     READVTOC
         EJECT
DSNCLC   CLC   DSNAME(0),DSCB      COMPARE ON DSNAME OR PART
VTOCEND  DS    0H
         CLOSE (SYSUT1)
         LA    R1,D99
         DYNALLOC
         ST    R15,RETCODE2
         LTR   R15,R15
         BZ    GETCARD
         ABEND 222,DUMP
ENDJOB   DS    0H
CARDEND  DS    0H
         CLOSE (SYSUT2)
         CLOSE (SYSIN)
         EXIT  RC=0
SYSUT1   DCB   DSORG=PS,EODAD=VTOCEND,MACRF=(R),DDNAME=SYSUT1,         X
               EXLST=EXITLIST,KEYLEN=44
SYSUT2   DCB   DSORG=PS,MACRF=PL,DDNAME=SYSUT2,                        X
               LRECL=80,RECFM=F,BLKSIZE=80
SYSIN    DCB   DSORG=PS,MACRF=GL,DDNAME=SYSIN,EODAD=CARDEND
VOLTAB   DS    0H
         DC    C'XXXXXX'
         DC    X'FF'
EXITLIST DS    0F
         DC    X'00',AL3(0)
JFCB     DS    0CL176
         DC    44X'04'      DSN=X'0404...' VTOC
         DC    CL8' '
         DC    35X'00'
         DC    X'08'              DISP=SHR
         DC    29X'00'
         DC    X'01'              NUM VOLSER
JFCBVOL  DC    C'XXXXXX'          VOL=SER=??????
         DC    CL24' '
         DC    28X'00'
MBBCCHHR DC    CL8' '
DSCB     DC    CL140' '
DSNAME   DC    CL44' '
         DC    C' '               SAFTEY BLANK
DSNSIZE  DC    F'0'
WORK     DC    CL11' '
TABLE    DC    X'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'
RECORD1  DC    CL40' CCHHR XXXXXXXXXX    /*NNNNNNNNNNNNNNNNN'
         DC    CL40'NNNNNNNNNNNNNNNNNNNNNNNNNN */           '
RECORD2  DC    CL80' VERIFY 5D XX '
RECORD3  DC    CL80' REP    5D XX '
A99      DC    X'80',AL3(A991)
A991     DS    0F
         DC    AL1(20)
         DC    AL1(1)     VERB  - ALLOC X'01' DEALLOC X'02'
         DC    X'2000'    FLAG1
         DC    AL2(0)     ERROR
         DC    AL2(0)     INFO
         DC    A(A992)    TEXT PTR
         DC    A(0)       RESERVED
         DC    A(0)       FLAG2
A992     DS    0F
         DC    X'00',AL3(A99T1)       DDNAME=SYSUT1
         DC    X'00',AL3(A99T2)       DISP=SHR
         DC    X'00',AL3(A99T3)       VOL=SER=??????
         DC    X'80',AL3(A99T4)       UNIT=DISK
A99T1    DS    0F
         DC    X'0001'    DDNAME
         DC    AL2(1)     NUMBER
         DC    AL2(6)     LENGTH
         DC    C'SYSUT1'  PARM=DDNAME
A99T2    DS    0F
         DC    X'0004'    STATUS
         DC    AL2(1)     NUMBER
         DC    AL2(1)     LENGTH
         DC    X'08'      PARM=DISP=SHR
A99T3    DS    0F
         DC    X'0010'    VOLSER
         DC    AL2(1)     NUMBER
         DC    AL2(6)     LENGTH
DYNVOL   DC    C'XXXXXX'  PARM='VOL=SER=??????'
A99T4    DS    0F
         DC    X'0015'    UNIT
         DC    AL2(1)     NUMBER
         DC    AL2(4)     LENGTH
         DC    C'DISK'    PARM='UNIT=DISK'
D99      DC    X'80',AL3(D991)
D991     DS    0F
         DC    AL1(20)
         DC    AL1(2)     VERB  - ALLOC X'01' DEALLOC X'02'
         DC    X'2000'    FLAG1
         DC    AL2(0)     ERROR
         DC    AL2(0)     INFO
         DC    A(D992)    TEXT PTR
         DC    A(0)       RESERVED
         DC    A(0)       FLAG2
D992     DS    0F
         DC    X'00',AL3(D99T1)       DDNAME=SYSUT1
         DC    X'80',AL3(D99T2)       DISP=(...,KEEP)
D99T1    DS    0F
         DC    X'0001'    DDNAME
         DC    AL2(1)     NUMBER
         DC    AL2(6)     LENGTH
         DC    C'SYSUT1'  PARM=DDNAME
D99T2    DS    0F
         DC    X'0005'    OVERRIDE DISP
         DC    AL2(1)     NUMBER
         DC    AL2(1)     LENGTH
         DC    X'08'      PARM=DISP=(...,KEEP)
RETCODE1 DC    F'0'
RETCODE2 DC    F'0'
         IEFZB4D0
         IEFZB4D2
         END
//GO.SYSUDUMP DD SYSOUT=*
//SYSIN      DD DSN=L11FOTM.VOLSER.DATA,DISP=SHR
//SYSUT2     DD DSN=L11FOTM.ZAPGRP,UNIT=DISK,DISP=(,CATLG),
//         SPACE=(TRK,(5,5),RLSE)
