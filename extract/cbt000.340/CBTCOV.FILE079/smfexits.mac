//SMFEXITS  JOB  MSGLEVEL=1
//*      THE SAMPLE SMF EXITS ARE - IEFUJV - JOB VALIDATION
//*                                 IEFUJI - JOB INITIATION
//*                                 IEFACTRT JOB TERMINATION
//*                                 IEFUTL - TIME LIMIT
//*                       *
//*        THERE IS NO EXAMPLE FOR IEFUSI OR IEFUSO
//*                                      *
//*      THEY ARE INTENDED TO DEMONSTRATE ONE FORM OF EXIT PROCESSING
//*           AND ILLUSTRATE THE USE OF THE TEST PROGRAM,TESTEXIT.
//*                      *
//*      PROCEDURE:
//*            EACH EXIT ROUTINE WILL ASSEMBLE AND LINKEDIT INTO A
//*              DATASET,EXITLIB,UNDER THEIR RESPECTIVE MEMBER NAMES.
//*              THE NEXT JOB(TESTEXIT) WILL COMBINE THE EXIT ROUTINES
//*               WITH THE TEST PROGRAM.
//*                      *
//*            IF THE SAMPLE ROUTINES ARE ACCEPTABLE FOR GENERAL SYSTEM
//*             IMPLEMENTATION,THE FOLLOWING ACTION IS REQUIRED TO
//*             INCORPORATE THEM INTO AN EXISTING SYSTEM.
//*                1.REASSEMBLE EACH EXIT WITHOUT THE PRIVATE MACRO,
//*                   SMFWTM.  THIS PRIVATE MACRO INTERFACES DIRECTLY
//*                   WITH TESTEXIT.  THE STANDARD SMFWTM MACRO IS
//*                   AVAILABLE IN  SYS1.MACLIB.
//*                      *
//*                2.THE FOLLOWING LINKEDIT PROCEDURE SHOULD BE USED
//*                  TO INCORPORATE THE SAMPLE EXIT MODULES INTO
//*                  SYS1.LINKLIB.
//*                      // SYSLIN  DD *
//*                            IEFUJV OBJECT DECK
//*                         INCLUDE  LINKLIBDD(IEFUJV)
//*                        ENTRY IEFUJV
//*                         NAME IEFUJV(R)
//*                            IEFUJI            OBJECT DECK
//*                            IEFACTRT OBJECT DECK
//*                         INCLUDE LINKLIBDD(IEFSD061)
//*                        ENTRY IEFSD061
//*                        ALIAS IEFSD064
//*                        ALIAS IEFSD104
//*                        ALIAS IEFW42SD
//*                         NAME IEFSD061(R)
//*                            IEFUTL OBJECT DECK
//*                         INCLUDE LINKLIBDD(IEFSD263)
//*                        ENTRY IEFSD263
//*                         NAME IEFSD263(R)
//IEFUJV    EXEC  ASMFCL
//ASM.SYSIN  DD  *
         MACRO                GENERATES CALLING SEQUENCE FOR TSMFWTM
&NAME    SMFWTM &MSGAD
         AIF   ('&MSGAD' EQ '').E1                NO OPERAND
         AIF   ('&MSGAD' EQ '(1)').BAL            REG 1 ALREADY LOADED
         AIF   ('&MSGAD'(1,1) EQ '(').REGA        REG(NOT 1) SPECIFIED
         AGO   .LODIT                             ADDRESS SPECIFIED
.E1      MNOTE '* * * NO OPERAND SPECIFIED * * *'
         MEXIT
.BAL     ANOP
         CNOP  0,4
&NAME    BAL   15,*+8
.LIST    DC    V(TSMFWTM)                         ADDRESS OF TSMFWTM
         L     15,0(15)
         BALR  14,15
         MEXIT
.REGA    ANOP
&NAME    LR    1,&MSGAD(1)
         CNOP  0,4
         BAL   15,*+8
         AGO   .LIST
.LODIT   ANOP
&NAME    LA    1,&MSGAD
         CNOP  0,4
         BAL   15,*+8
         AGO   .LIST
         MEND
IEFUJV   CSECT
*-- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --*
* FUNCTION                                                            *
*        THIS MODULE CHECKS A TWO CARD JOB CARD SEQUENCE TO           *
*        DETERMINE IF IT MEETS THE FOLLOWING REQUIREMENTS:            *
*         - FIRST CARD MUST HAVE AN 8 CHARACTER ACCOUNT NUMBER IN     *
*           COLUMNS 16-23. THIS ACCOUNT NUMBER WILL BE VALIDATED BY   *
*           SEARCHING A TABLE OF VALID ACCOUNT NUMBERS.               *
*         - SECOND CARD MUST CONTAIN THE PRTY, REGION AND TIME        *
*           PARAMETERS IN THAT ORDER. THE VALUES OF THESE PARAMETERS  *
*           WILL BE COMPARED WITH MAXIMUM VALUES IN A TABLE USING AN  *
*           INDEX DERIVED FROM THE ACCT #.                            *
*        IF THESE REQUIREMENTS ARE NOT SATISFIED, THE JOB IS CANCELED.*
*        THIS MODULE ALSO GETS THE TIME OF DAY AT WHICH THE JOB IS    *
*        ENQUEUED AND PUTS IT IN THE USER COMMUNICATIONS AREA WHERE   *
*        IT WILL BE USED BY THE JOB INITIATION ROUTINE (IEFUJI).      *
* ENTRY POINT                                                         *
*        IEFUJV                                                       *
* INPUT                                                               *
*        REGISTER 1 POINTS TO A LIST OF 4 BYTE ADDRESSES FOR THE      *
*        FOLLOWING THREE PARAMETERS:                                  *
*             1 - 36 BYTES OF THE FOLLOWING JOB INFORMATION:          *
*                  JOBNAME (8 BYTES)                                  *
*                  TIME STAMP (8 BYTES)                               *
*                  SYSTEM ID (4 BYTES)                                *
*                  USER ID (8 BYTES)                                  *
*                  USER COMMUNICATIONS AREA (4 BYTES)                 *
*                  ZERO FOR INITIAL ENTRY, FIRST BYTE IS USED AS A    *
*                  BRANCH CODE WHEN PROCESSING THE JOB CARD SEQUENCE. *
*                  TIME OF DAY FOR JOB INITIATION ROUTINE IS PUT      *
*                  HERE WHEN THE JOB ENQUEUE ENTRY IS TAKEN.          *
*             2 - 80 BYTES CONTAINING THE JCL STATEMENT IMAGE.        *
*             3 - 1 BYTE ENTRY CODE WITH ONE OF THE FOLLOWING VALUES: *
*                  0 - NULL STATEMENT                                 *
*                  1 - JOB STATEMENT                                  *
*                  2 - EXEC STATEMENT                                 *
*                  4 - DD STATEMENT                                   *
*                  8 - PROC STATEMENT                                 *
*                 16 - JOB ENQUEUE (SECOND PARAMETER IS MEANINGLESS)  *
* OUTPUT                                                              *
*        REGISTER 15 MUST CONTAIN ONE OF THE FOLLOWING RETURN CODES:  *
*             0 - CONTINUE PROCESSING                                 *
*             4 - CANCEL                                              *
* MACROS                                                              *
*        GETMAIN, FREEMAIN, TIME                                      *
*-- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --*
         EJECT
*-- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --*
REGA     EQU   2    ADDRESS OF 36 BYTES CONTAINING JOB INFORMATION
REGB     EQU   3    ADDRESS OF 80 BYTE JCL STATEMENT IMAGE
REGC     EQU   4    ADDRESS OF 1 BYTE ENTRY CODE
REGD     EQU   5    WORK REGISTER FOR BRANCH CODE
REGE     EQU   6    LOOP CONTROL
REGF     EQU   7   LOOP CONTROL/WORK REGISTER
REGG     EQU   8    LOOP CONTROL
REGH     EQU   9    BRANCH REG
REGEVEN  EQU   14
REGODD   EQU   15
*-- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --*
         B     12(15)
         DC    CL8'IEFUJV'
         STM   14,12,12(13)
         BALR  11,0
         USING *,11
         LM    REGA,REGC,0(1)          GET PARAMETER ADDRESSES
         TM    0(REGC),X'10'           TEST FOR JOB ENQUEUE ENTRY
         BO    JOBENQ
         TM    0(REGC),X'01'           TEST FOR JOB CARD ENTRY
         BZ    OKEXIT
         SR    REGC,REGC
         IC    REGC,32(REGA)           GET CARD BRANCH CODE
         B     *+4(REGC)
         B     ACCTCRD
         B     PARMCRD
         B     OKEXIT
*-- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --*
*   PROCESS FIRST CARD OF JOB CARD SEQUENCE                           *
*-- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --*
ACCTCRD  LM    REGE,REGG,LOOPCTL
NXTACCT  CLC   15(8,REGB),0(REGG)       CHECK FOR VALID ACCOUNT NUMBER
         BE    OKACCT
         BXLE  REGG,REGE,NXTACCT
         MVC   20(8,REGA),INVALID       INDICATE INVALID ACCT NO
         B     CANCEL
OKACCT   MVC   20(8,REGA),15(REGB)      PUT ACCT NUMBER IN USER ID AREA
         LA    REGD,4(0)                SET BRANCH CODE FOR PARM CARD
         STC   REGD,32(REGA)            STORE BRANCH CODE
         B     OKEXIT
*-- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --*
*   PROCESS SECOND CARD OF JOB CARD SEQUENCE                          *
*-- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --*
PARMCRD  CLC   15(5,REGB),PRTYLTRL      CHECK FOR 'PRTY='
         BNE   CANCEL
         LA    REGG,20(REGB)            SET REGG TO FIRST DIGIT OF PRTY
         LA    REGF,2(REGG)             SET LOOP CONTROL FOR DIGIT CK
         BAL   REGH,CKDGTS
         CLC   0(8,REGG),RGNLTRL        CHECK FOR ',REGION='
         BNE   CANCEL
         IC    REGE,21(REGA)            GET MAX PRTY CODE FROM ACCT #
         LA    REGE,PRTYTBL-240(REGE)
         EX    REGEVEN,CLIPRTY          CHECK FOR VALID PRTY CODE
         BL    CANCEL
         LA    REGG,8(REGG)             SET REGG TO FIRST DIGIT OF RGN
         LA    REGF,5(REGG)             SET LOOP CONTROL FOR DIGIT CK
         BAL   REGH,CKDGTS
         CLC   0(7,REGG),TIMELTRL       CHECK FOR 'K,TIME='
         BNE   CANCEL
         IC    REGE,22(REGA)            GET MAX REGION CODE FROM ACCT #
         LA    REGF,15
         NR    REGE,REGF                REMOVE ZONE BITS FROM CODE
         SLL   REGE,2                   MULTIPLY CODE BY 4
         C     REGEVEN,RGNTBL(REGE)     DETERMINE IF THE SPECIFIED
*                                       REGION IS =< THE MAXIMUM FOR
*                                       THE SPECIFIC ACCT
         BH    CANCEL
         SR    REGD,REGD                ZERO TIME ACCUMULATION REGISTER
         LA    REGG,7(REGG)             SET REGG TO 1ST CHAR OF TIME
         CLI   0(REGG),C'('
         BNE   MINUTES
         SR    REGC,REGC                REGC IS USED AS A FLAG TO
*                                       INDICATE PARENTHESIS
         LA    REGG,1(REGG)
         CLI   0(REGG),C','
         BE    SECONDS
MINUTES  LA    REGF,4(REGG)             SET LOOP CONTROL
         LR    REGB,REGG                SAVE ADDR OF 1ST CHAR OF TIME
         BAL   REGH,CKDGTS
         CR    REGB,REGG                TEST FOR NO DIGITS
         BE    CANCEL
         SLL   REGEVEN,8
         LR    REGD,REGEVEN             PUT MINUTES IN ACCUMULATION REG
         LTR   REGC,REGC                TEST PARENTHESIS FLAG
         BNZ   CKTIME                   BRANCH FOR NO PARENTHESIS
         CLI   0(REGG),C','
         BE    SECONDS
         CLI   0(REGG),C')'
         BNE   CANCEL
         B     CKTIME
SECONDS  LA    REGG,1(REGG)
         LA    REGF,2(REGG)             SET LOOP CONTROL
         BAL   REGH,CKDGTS
         CH    REGEVEN,MAXSEC
         BH    CANCEL
         AR    REGD,REGEVEN             ADD SECONDS TO ACCUM. REG
CKTIME   IC    REGE,23(REGA)            GET MAX TIME CODE FROM ACCT #
         LA    REGF,15
         NR    REGE,REGF                REMOVE ZONE BITS FROM CODE
         SLL   REGE,2                   MULTIPLY CODE BY FOUR
         C     REGD,TIMETBL(REGE)       CHECK MAX TIME FOR ACCT
         BH    CANCEL
         LA    REGD,8(0)                SET BRANCH CODE FOR OKEXIT
         STC   REGD,32(REGA)            STORE BRANCH CODE
         B     OKEXIT
CKDGTS   SR    REGEVEN,REGEVEN
         LA    REGE,1                   SET LOOP INCREMENT
NXTDGT   CLI   0(REGG),X'F0'            CHECK FOR NUMERIC CHARACTER
         BCR   4,REGH
         CLI   0(REGG),X'F9'
         BC    2,CANCEL
         IC    REGODD,0(REGG)
         SLL   REGODD,28                ISOLATE AND SAVE DECIMAL PART
         SLDL  REGEVEN,4                  OF EACH EBCDIC DIGIT
         BXLE  REGG,REGE,NXTDGT
         B     CANCEL                   CANCEL IF TOO MANY DIGITS
CLIPRTY  CLI   0(REGE),X'00'
*-- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --*
*   GET TIME OF DAY THAT JOB WAS ENQUEUED                             *
*-- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --*
JOBENQ   GETMAIN    R,LV=8              GET AREA FOR TEMP STORAGE
         LR    REGB,1
         TIME       BIN                 GET TIME OF JOB ENQUEUE
         ST    0,0(REGB)                PUT TIME IN INTERMEDIATE AREA
         MVC   32(4,REGA),0(REGB)       MOVE TIME TO USER COMM AREA
         FREEMAIN   R,LV=8,A=(REGB)
OKEXIT   SR    REGA,REGA               SET RETURN CODE TO ZERO
         B     EXIT
CANCEL   LA    REGA,4(0)               SET RETURN CODE TO FOUR
EXIT     ST    REGA,16(13)             PUT RETURN CODE IN SAVE AREA
         LM    14,12,12(13)
         BR    14
*-- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --*
*   DEFINE CONSTANTS AND TABLES FOR VALIDITY CHECKS                   *
*-- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --*
LOOPCTL  DC    F'8'
         DC    A(TABLEND)
         DC    A(TABLE)
TABLE    DC    C'A2224567'
         DC    C'B3235678'
         DC    C'C4444444'
TABLEND  EQU   *-8
RGNTBL   DS    0F
         DC    X'00000032'
         DC    X'00000064'
         DC    X'00000128'
         DC    X'00000256'
         DC    X'00000512'
TIMETBL  DS    0F
         DC    X'00000030'              30 SECONDS
         DC    X'00000330'              3 MINUTES AND 30 SECONDS
         DC    X'00001000'              10 MINUTES
         DC    X'00003000'              30 MINUTES
         DC    X'00144000'              1440 MINUTES (NO TIME LIMIT)
         DS    0H
MAXSEC   DC    X'0059'
PRTYTBL  DC    X'0102030413'
PRTYLTRL DC    C'PRTY='
RGNLTRL  DC    C',REGION='
TIMELTRL DC    C'K,TIME='
INVALID  DC    C'INVALID '
         END
//LKED.SYSLMOD  DD  DSNAME=EXITLIB,VOLUME=SER=231400,UNIT=2314,        *
//             DISP=(NEW,KEEP),SPACE=(TRK,(5,1,2))
//LKED.SYSIN  DD  *
    NAME  IEFUJV
//IEFUJI  EXEC  ASMFCL
//ASM.SYSIN DD *
         MACRO                GENERATES CALLING SEQUENCE FOR TSMFWTM
&NAME    SMFWTM &MSGAD
         AIF   ('&MSGAD' EQ '').E1                NO OPERAND
         AIF   ('&MSGAD' EQ '(1)').BAL            REG 1 ALREADY LOADED
         AIF   ('&MSGAD'(1,1) EQ '(').REGA        REG(NOT 1) SPECIFIED
         AGO   .LODIT                             ADDRESS SPECIFIED
.E1      MNOTE '* * * NO OPERAND SPECIFIED * * *'
         MEXIT
.BAL     ANOP
         CNOP  0,4
&NAME    BAL   15,*+8
.LIST    DC    V(TSMFWTM)                         ADDRESS OF TSMFWTM
         L     15,0(15)
         BALR  14,15
         MEXIT
.REGA    ANOP
&NAME    LR    1,&MSGAD(1)
         CNOP  0,4
         BAL   15,*+8
         AGO   .LIST
.LODIT   ANOP
&NAME    LA    1,&MSGAD
         CNOP  0,4
         BAL   15,*+8
         AGO   .LIST
         MEND
IEFUJI   CSECT
*C 365000,386000                                                 A48478
*-- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --*
* FUNCTION                                                            *
*        THIS MODULE CALCULATES THE AMOUNT OF TIME THAT A JOB WAS     *
*        ENQUEUED AWAITING INITIATION. THIS TIME AND THE EFFECTIVE JOB*
*        PRIORITY ARE WRITTEN TO THE SMF DATA SET AS RECORD TYPE 128. *
* ENTRY POINT                                                         *
*        IEFUJI                                                       *
* INPUT                                                               *
*        REGISTER 1 POINTS TO A LIST OF 4 BYTE ADDRESSES FOR THE      *
*        FOLLOWING FOUR PARAMETERS:                                   *
*             1 - 36 BYTES OF THE FOLLOWING JOB INFORMATION:          *
*                  JOBNAME (8 BYTES)                                  *
*                  TIME STAMP (8 BYTES)                               *
*                  SYSTEM ID (4 BYTES)                                *
*                  USER ID (8 BYTES)                                  *
*                  USER COMMUNICATIONS AREA (4 BYTES)                 *
*                  WHEN ENTERED, THIS FIELD CONTAINS THE TIME OF DAY  *
*                  AT WHICH THE JOB WAS ENQUEUED (SUPPLIED BY THE     *
*                  IEFUJV ROUTINE). THIS FIELD IS ZEROED BEFORE THE   *
*                  ROUTINE IS EXITED.                                 *
*             2 - 20 BYTES CONTAINING THE PROGRAMMERS NAME            *
*             3 - 1 BYTE INDICATING THE EFFECTIVE JOB PRIORITY        *
*             4 - JOB ACCOUNTING FIELDS (NOT USED)                    *
* OUTPUT                                                              *
*        A 47 BYTE RECORD IS WRITTEN TO THE SMF DATA SET USING THE    *
*        SMFWTM MACRO. THE FORMAT OF THIS RECORD IS DESCRIBED BY THE  *
*        DSECT FOR THE SMF RECORD.                                    *
*        REGISTER 15 MUST CONTAIN ONE OF THE FOLLOWING RETURN CODES:  *
*             0 - CONTINUE PROCESSING                                 *
*             4 - CANCEL                                              *
* MACROS                                                              *
*        GETMAIN, FREEMAIN, TIME, SMFWTM                              *
*-- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --*
         EJECT
*-- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --*
REGA     EQU   2   ADDRESS OF 36 BYTES CONTAINING JOB INFORMATION
REGC     EQU   4   ADDRESS OF 1 BYTE INDICATING EFFECTIVE JOB PRTY
REGD     EQU   5   BASE REGISTER FOR DSECT
*-- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --*
         B     12(15)
         DC    CL8'IEFUJI'
         STM   14,12,12(13)            SAVE REGS
         BALR  11,0
         USING *,11
         LM    REGA,REGC,0(1)          GET PARAMETER ADDRESSES
         GETMAIN   R,LV=56              GET CORE FOR SMF RECORD  A48478
         LR    REGD,1
         USING SMFDSECT,REGD
         TIME      BIN
         ST    0,TIME                  TIME FOR SMF RECORD
         ST    1,DATE                  DATE FOR SMF RECORD
         MVC   ENQTIME(4),32(REGA)     GET JOB ENQUEUE TIME
         XC    32(4,REGA),32(REGA)     ZERO COMMUNICATIONS WORD
         C     0,ENQTIME               CHECK FOR A NEW DAY
         BC    2,SAMEDAY
         A     0,HR24                  ADD 24 HOURS (86400 SECONDS)
SAMEDAY  S     0,ENQTIME               DETERMINE TIME JOB WAS ON QUEUE
         ST    0,ENQTIME               PUT TIME IN SMF RECORD
         MVC   PRTY(1),0(REGC)         GET PRIORITY CODE
         MVC   SYSID(4),16(REGA)       GET SYSTEM ID
         MVC   HEADER(6),SMFRCD
         MVC   JOBLOG(16),0(REGA)
         MVC   USERID(8),20(REGA)
         LA    1,SMFOUT
         SMFWTM    (1)                 WRITE SMF RECORD TYPE 128
         LR    1,REGD
         FREEMAIN  R,LV=56,A=(1)                                 A48478
         LM    14,12,12(13)            RESTORE REGS
         XR    15,15                   SET RETURN CODE TO ZERO
         BR    14
*-- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --*
*   DEFINE DATA CONSTANTS                                             *
*-- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --*
HR24     DC    F'8640000'
SMFRCD   DC    X'002F00000080'
*-- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --*
*   DEFINE DSECT FOR JOB INITIATION RECORD (TYPE X'80')               *
*-- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --*
SMFDSECT DSECT
         DS    1H             ALIGN TIME AND DATE ON FULLWORD
SMFOUT   EQU   *
HEADER   DS    6C
TIME     DS    1F
DATE     DS    1F
SYSID    DS    1F
JOBLOG   DS    4F
USERID   DS    2F
ENQTIME  DS    1F
PRTY     DS    1C
         END
//LKED.SYSLMOD DD DSNAME=EXITLIB,VOLUME=SER=231400,UNIT=2314,DISP=OLD
//LKED.SYSIN  DD *
     NAME IEFUJI
//IEFACTRT EXEC ASMFCL
//ASM.SYSIN DD *
         MACRO                GENERATES CALLING SEQUENCE FOR TSMFWTM
&NAME    SMFWTM &MSGAD
         AIF   ('&MSGAD' EQ '').E1                NO OPERAND
         AIF   ('&MSGAD' EQ '(1)').BAL            REG 1 ALREADY LOADED
         AIF   ('&MSGAD'(1,1) EQ '(').REGA        REG(NOT 1) SPECIFIED
         AGO   .LODIT                             ADDRESS SPECIFIED
.E1      MNOTE '* * * NO OPERAND SPECIFIED * * *'
         MEXIT
.BAL     ANOP
         CNOP  0,4
&NAME    BAL   15,*+8
.LIST    DC    V(TSMFWTM)                         ADDRESS OF TSMFWTM
         L     15,0(15)
         BALR  14,15
         MEXIT
.REGA    ANOP
&NAME    LR    1,&MSGAD(1)
         CNOP  0,4
         BAL   15,*+8
         AGO   .LIST
.LODIT   ANOP
&NAME    LA    1,&MSGAD
         CNOP  0,4
         BAL   15,*+8
         AGO   .LIST
         MEND
IEFACTRT CSECT
*446000-447000,451000,458500-458700,472000,501500,508000         A40917
*509500,510500,523500,523600,526500-526984,530000,641500-641700  A40917
* 541500                            FIX FOR R21.7                A57657
*-- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --*
* FUNCTION                                                            *
*        THIS MODULE IS ENTERED AT JOB/STEP TERMINATION. IF THE       *
*        MODULE WAS ENTERED FOR STEP TERMINATION, THE CPU TIME IS     *
*        TIME IS EXAMINED FOR A FLUSH CONDITION.  IF THE STEP WAS     *
*        FLUSHED, THE SMF RECORD IS NOT PRINTED AND THE MODULE        *
*        RETURNS TO THE CALLING ROUTINE.  OTHERWISE,                  *
*        THE SMF TERMINATION RECORD TYPE FIELD IS CHANGED AND         *
*        THE RECORD IS WRITTEN AS A USER RECORD BY THE SMFWTM MACRO.  *
*        IF THE RETURN CODE FROM THE MACRO INDICATES THAT THE RECORD  *
*        WAS NOT WRITTEN SUCCESSFULLY, A MESSAGE IS WRITTEN TO THE    *
*        CONSOLE INDICATING AN ERROR CONDITION.  FOR JOB              *
*        TERMINATION, A RECORD IS WRITTEN TO THE SYSOUT DATA SET USING*
*        THE IEFYS ROUTINE.                                           *
* ENTRY POINT                                                         *
*        IEFACTRT                                                     *
* INPUT                                                               *
*        REGISTER 0 CONTAINS A BINARY 16 IF THE MODULE WAS ENTERED    *
*        FOR JOB TERMINATION.  IT CONTAINS A BINARY 12 IF ENTERED     *
*        FOR STEP TERMINATION.                                        *
*        REGISTER 1 POINTS TO A LIST OF 4 BYTE ADDRESSES FOR THE      *
*        FOLLOWING TEN PARAMETERS:                                    *
*             1 - 36 BYTES OF THE FOLLOWING JOB INFORMATION:          *
*                  JOBNAME (8 BYTES)                                  *
*                  TIME STAMP (8 BYTES)                               *
*                  SYSTEM ID (4 BYTES)                                *
*                  USER ID (8 BYTES)                                  *
*                  USER COMMUNICATIONS AREA (4 BYTES)                 *
*                  THIS FIELD IS ZEROED AT JOB TERMINATION.           *
*             2 - STEP NAME (ADDRESS IS ZERO FOR JOB TERM ENTRY)      *
*             3 - PROGRAMMERS NAME                                    *
*             4 - JOB EXECUTION TIME (NOT USED BY THIS ROUTINE)       *
*             5 - JOB ACCOUNTING FIELDS (NOT USED)                    *
*             6 - STEP EXECUTION TIME                                 *
*             7 - STEP ACCOUNTING FIELDS (NOT USED)                   *
*             8 - FLAGS AND STEP NUMBER (NOT USED)                    *
*             9 - TERMINATION STATUS (NOT USED)                       *
*            10 - SMF TERMINATION RECORD                              *
*        REGISTER 0 CONTAINS ONE OF THE FOLLOWING ENTRY CODES:        *
*            12 - STEP TERMINATION ENTRY                              *
*            16 - JOB TERMINATION ENTRY                               *
* OUTPUT                                                              *
*        THE JOB/STEP TERMINATION RECORD CREATED BY SMF IS WRITTEN TO *
*        THE SMF DATA SET AFTER THE RECORD TYPE FIELD HAS BEEN        *
*        MODIFIED.                                                    *
*        AT JOB TERM. THE RECORD DEFINED BY THE JOBMSG DSECT IS       *
*        WRITTEN TO THE SYSOUT DATA SET USING THE IEFYS ROUTINE.      *
*        AN ERROR MESSAGE IS WRITTEN TO THE CONSOLE IF THE SMF        *
*        JOB/STEP TERM. RECORD CANNOT BE WRITTEN SUCCESSFULLY.        *
*        REGISTER 15 CONTAINS A RETURN CODE OF 0 INDICATING THAT THE  *
*        JOB SHOULD BE CONTINUED.                                     *
*        REGISTER 1 CONTAINS A RETURN CODE OF 4 INDICATING THAT THE   *
*        SMF TERMINATION RECORD SHOULD NOT BE WRITTEN.                *
* EXTERNAL ROUTINES                                                   *
*        IEFYS                                                        *
* MACROS                                                              *
*        GETMAIN, FREEMAIN, EXTRACT, TIME, SMFWTM                     *
*-- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --*
         EJECT
*-- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --*
REG0     EQU   0   JOB/STEP TERMINATION INDICATOR                A40917
REGA     EQU   2   ADDRESS OF 36 BYTES OF JOB INFO/DDNAME BUFFER INDEX
REGB     EQU   3   ADDRESS OF STEPNAME/WORK REGISTER
REGC     EQU   4   ADDRESS OF PROGRAMMER'S NAME/WORK REG/TIOT INDEX
REGD     EQU   5   ADDRESS OF SMF TERMINATION RECORD/DD ENTRY LENGTH
REGE     EQU   6   WORK REGISTER
REGF     EQU   7   LENGTH FOR GETMAIN/BUFFER INDEX LIMIT
REGG     EQU   8   WORK REGISTER                                 A40917
REGH     EQU   9   BASE REGISTER FOR DSECTS
REGI     EQU   10  CPU TIME AND ADDRESS OF CPU TIME PARAMETER    A40917
TYPE     EQU   5
CPUSTM   EQU   20                                                A40917
SMFPTR   EQU   36
GETLNGTH EQU   128
TIOTDDL  EQU   24
*-- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --*
         B     12(15)
         DC    CL8'IEFACTRT'
         STM   14,12,12(13)
         LA    REGA,4
         ST    REGA,24(13)              SET REG 1 RETURN CODE TO 4
         BALR  11,0
         USING *,11
         LM    REGA,REGC,0(1)           GET PARAMETER ADDRESSES
         L     REGD,SMFPTR(1)           GET SMF TERM. RECORD ADDRESS
         L     REGI,CPUSTM(1)           GET ADDR OF CPU STP TIME A40917
         LR    REGG,REG0                SAVE 'REASON FOR ENTRY'  A40917
         LA    REGF,GETLNGTH(0)
         GETMAIN   R,LV=(REGF)
         LR    REGH,1                   SET BASE REG FOR DSECT
*-- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --*
*  ELIMINATE SMF RECORD TYPE 4 IF STEP IS BEING  FLUSHED              *
*-- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --*
         LA    REGE,16                                           A40917
         CR    REGG,REGE                IS IT JOB TERMINATION    A40917
         BE    CONT                     YES, SKIP CPU TIME CHECK A40917
         CLC   FLSHFLG(3),0(REGI)       ZERO CPU TIME?           A40917
         BE    EXIT                 YES, RETURN W.O. WRITING REC A40917
*-- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --*
*   CONVERT SMF RECORD TYPE AND WRITE IT                              *
*-- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --*
CONT     SR    REGG,REGG
         IC    REGG,TYPE(REGD)          GET RECORD TYPE
         LA    REGG,126(REGG)           CHANGE RECORD TYPE
         STC   REGG,TYPE(REGD)
         SMFWTM     (REGD)              WRITE SMF RECORD TYPE 130/131
         LA    REGG,4                   SET COMPARAND REG TO 4
         CR    15,REGG                  TEST SMFWTM RETURN CODE TO
*                                       DETERMINE IF RECORD WAS WRITTEN
         BH    ERRWTO
         LTR   REGB,REGB                TEST FOR ZERO STEP NAME ADDRESS
*                                       INDICATING ENTRY FOR JOB TERM
         BZ   JOBTERM
         B    EXIT                      FINISHED IF STEP TERM    A57657
*-- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --*
*   WRITE ERROR MESSAGE TO CONSOLE                                    *
*-- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --*
         USING WTORCD,REGH
ERRWTO   CVD   15,MSGAREA               CONVERT RETURN CODE TO DECIMAL
         UNPK  ERRCODE(2),MSGAREA+6(2)  CONVERT RETURN CODE TO EBCDIC
         OI    ERRCODE,X'F0'            SET ZONE ON LOW ORDER DIGITS
         OI    ERRCODE+1,X'F0'
         MVC   MSGAREA(73),WTOMSG       SET UP CONSOLE MESSAGE
         MVC   JOBNAME(8),0(REGA)       FILL IN JOBNAME
         WTO       MF=(E,(REGH))
         LTR   REGB,REGB                TEST FOR ZERO STEP NAME ADDRESS
*                                       INDICATING ENTRY FOR JOB TERM.
         BNZ   EXIT
*-- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --*
*   WRITE JOB TERMINATION RECORD TO SYSOUT                            *
*-- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --*
JOBTERM  GETMAIN   R,LV=256             GET SAVE AREA FOR IEFYS
         ST    1,8(13)
         LR    REGE,13                  SAVE POINTER TO REG SAVE AREA
         LR    13,1                     REG 13 POINTS TO 64 WORD AREA
         XC    32(4,REGA),32(REGA)      ZERO USER COMM AREA
         USING JOBMSG,REGH
         ST    REGH,0(REGH)             PUT ADDRESS IN A TEMP LOCATION
         MVC   36(4,12),0(REGH)         MSG ADDRESS FOR IEFYS
         MVC   42(2,12),MSGLEN          MSG LENGTH FOR IEFYS
         MVC   MSG1(31),MSGTXT1         SET UP SYSOUT MSG
         MVC   JOB(8),0(REGA)
         MVC   MSG2(13),MSGTXT2
         MVC   ACCTNO(8),20(REGA)
         MVC   MSG3(18),MSGTXT3
         MVC   PGRNAME(20),0(REGC)
         MVC   MSG4(18),MSGTXT1
         L     15,ADDRYS
         BALR  14,15                    BRANCH TO IEFYS ROUTINE AND
*                                       WRITE MSG TO SYSOUT
         LR    13,REGE                  RESTORE SAVE AREA POINTER
         FREEMAIN  R,LV=256,A=(1)
EXIT     LR    1,REGH
         FREEMAIN  R,LV=GETLNGTH,A=(1)
         LM    14,12,12(13)
         SR    15,15                    SET REG 15 RETURN CODE TO 0
         BR    14
*-- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --*
*   DEFINE CONSTANTS FOR STEP FLUSH CHECK
*-- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --*
FLSHFLG  DC  X'000000'                  CPU TIME FOR STEP FLUSH  A40917
*-- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --*
*   DEFINE CONSTANTS FOR CONSOLE MESSAGE                              *
*-- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --*
WTOMSG   DS    0F
         DC    AL2(MSGEND-*)            MESSAGE LENGTH
         DC    AL2(0)
         DC    C'SMF JOB/STEP TERMINATION RECORD NOT WRITTEN FOR '
         DC    C'JJJJJJJJ. ERROR CODE = '
         DS    2C                       PAD FOR ERROR CODE
MSGEND   EQU   *
*-- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --*
*   DEFINE CONSTANTS FOR SYSOUT JOB TERMINATION MESSAGE               *
*-- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --*
MSGLEN   DC    AL2(ENDMSG-MSG1)
MSGTXT1  DC    C'   *** JOB END ***   JOBNAME = '
MSGTXT2  DC    C'     ACCT# = '
MSGTXT3  DC    C'     PROGRAMMER = '
ADDRYS   DC    V(IEFYS)
*-- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --*
*   DEFINE STORAGE FOR CONSOLE MESSAGE                                *
*-- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --*
WTORCD   DSECT
MSGAREA  DS    52C
JOBNAME  DS    8C
         DS    13C
ERRCODE  DS    2C
*-- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --*
*   DEFINE STORAGE FOR SYSOUT JOB TERMINATION MESSAGE                 *
*-- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --*
JOBMSG   DSECT
MSG1     DS    31C
JOB      DS    8C
MSG2     DS    13C
ACCTNO   DS    8C
MSG3     DS    18C
PGRNAME  DS    20C
MSG4     DS    18C
ENDMSG   EQU   *
         END
//LKED.SYSLMOD DD DSNAME=EXITLIB,VOLUME=SER=231400,UNIT=2314,DISP=OLD
//LKED.SYSIN  DD *
     NAME IEFACTRT
//IEFUTL  EXEC  ASMFCL
//ASM.SYSIN DD *
         MACRO                GENERATES CALLING SEQUENCE FOR TSMFWTM
&NAME    SMFWTM &MSGAD
         AIF   ('&MSGAD' EQ '').E1                NO OPERAND
         AIF   ('&MSGAD' EQ '(1)').BAL            REG 1 ALREADY LOADED
         AIF   ('&MSGAD'(1,1) EQ '(').REGA        REG(NOT 1) SPECIFIED
         AGO   .LODIT                             ADDRESS SPECIFIED
.E1      MNOTE '* * * NO OPERAND SPECIFIED * * *'
         MEXIT
.BAL     ANOP
         CNOP  0,4
&NAME    BAL   15,*+8
.LIST    DC    V(TSMFWTM)                         ADDRESS OF TSMFWTM
         L     15,0(15)
         BALR  14,15
         MEXIT
.REGA    ANOP
&NAME    LR    1,&MSGAD(1)
         CNOP  0,4
         BAL   15,*+8
         AGO   .LIST
.LODIT   ANOP
&NAME    LA    1,&MSGAD
         CNOP  0,4
         BAL   15,*+8
         AGO   .LIST
         MEND
IEFUTL   CSECT
*-- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --*
* FUNCTION                                                            *
*        THIS MODULE IS ENVOKED WHEN THE JOB TIME, STEP TIME OR       *
*        JOB WAIT TIME LIMIT IS EXCEEDED. THE JOB IS CANCELED IF THE  *
*        JOB TIME OR STEP TIME IS EXCEEDED. IF THE JOB WAIT TIME IS   *
*        EXCEEDED, IT WILL BE EXTENDED BY A FIXED AMOUNT. IF MORE THAN*
*        TWO EXTENSIONS ARE NEEDED, THE JOB WILL BE CANCELED. EACH    *
*        TIME THE JOB WAIT TIME IS EXCEEDED, A RECORD IS WRITTEN TO   *
*        THE SMF DATA SET.                                            *
* ENTRY POINT                                                         *
*        IEFUTL                                                       *
* INPUT                                                               *
*        REGISTER 1 POINTS TO A 4 BYTE ADDRESS FOR THE FOLLOWING      *
*        PARAMETER:                                                   *
*             36 BYTES OF THE FOLLOWING JOB INFORMATION:              *
*                  JOBNAME (8 BYTES)                                  *
*                  TIME STAMP (8 BYTES)                               *
*                  SYSTEM ID (4 BYTES)                                *
*                  USER ID (8 BYTES)                                  *
*                  USER COMMUNICATIONS AREA (4 BYTES) - THE FIRST BYTE*
*                  IS USED AS AN EXTENSION INDICATOR. IT IS ZERO FOR  *
*                  THE INITIAL ENTRY AND CONTAINS AN INCREMENTED      *
*                  VALUE FOR SUBSEQUENT ENTRIES.                      *
*        REGISTER 0 WILL CONTAIN ONE OF THE FOLLOWING ENTRY CODES     *
*        INDICATING WHICH TIME LIMIT WAS EXCEEDED:                    *
*             0 - JOB CPU TIME                                        *
*             4 - STEP CPU TIME                                       *
*             8 - JOB WAIT TIME                                       *
* OUTPUT                                                              *
*        EACH TIME THE JOB WAIT TIME LIMIT IS EXCEEDED, A 43 BYTE     *
*        RECORD IS WRITTEN TO THE SMF DATA SET USING THE SMFWTM MACRO.*
*        THE FORMAT OF THIS RECORD IS DESCRIBED BY THE DSECT FOR THE  *
*        SMF RECORD.                                                  *
*        IF THE TIME LIMIT IS EXTENDED, THE AMOUNT OF THE EXTENSION   *
*        IN TIMER UNITS MUST BE RETURNED IN REGISTER 1.               *
*        REGISTER 15 MUST CONTAIN ONE OF THE FOLLOWING RETURN CODES:  *
*             0 - CONTINUE PROCESSING (CANCEL THE JOB)                *
*             4 - CONTINUE THE JOB WITH THE TIME EXTENSION IN REG 1   *
* MACROS                                                              *
*        GETMAIN, FREEMAIN, TIME, SMFWTM                              *
*-- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --*
         EJECT
*-- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --*
REGA     EQU   2   ADDRESS OF 36 BYTES CONTAINING JOB INFORMATION
REGB     EQU   3   WORK REGISTER FOR TIME EXTENSION
REGC     EQU   4   BASE FOR DSECT
REGD     EQU   5   WORK REGISTER (COMPARAND HAVING A VALUE OF 4)
*-- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --*
         B     12(15)
         DC    CL8'IEFUTL'
         STM   14,12,12(13)
         BALR  11,0
         USING *,11
         L     REGA,0(1)                GET PARAMETER ADDRESS
         LA    REGD,4                   SET COMPARAND REGISTER TO 4
         CR    0,REGD                   TEST FOR JOB/STEP TIME EXCEEDED
         BNH   CANCEL
         GETMAIN   R,LV=56              GET CORE FOR SMF RECORD
         LR    REGC,1
         USING SMFDSECT,REGC
         TIME      BIN
         ST    0,TIME                   TIME FOR SMF RECORD
         ST    1,DATE                   DATE FOR SMF RECORD
         MVC   SYSID(4),16(REGA)        BUILD SMF RECORD
         MVC   JOBLOG(16),0(REGA)
         MVC   USERID(8),20(REGA)
         MVC   HEADER(6),SMFRCD
         SR    REGB,REGB
         IC    REGB,32(REGA)            GET TIME EXTENSION INDICATOR
         STC   REGB,EXTCODE             PUT EXTENSION CODE IN RECORD
         LA    1,SMFOUT
         SMFWTM    (1)                  WRITE SMF RECORD TYPE 132
         LR    1,REGC
         FREEMAIN  R,LV=56,A=(1)
         CR    REGB,REGD                TEST TIME EXTENSION CODE
         BH    CANCEL                   CANCEL JOB IF EXTENSION CODE >4
         LA    REGB,4(REGB)             INCREMENT EXTENSION INDICATOR
         STC   REGB,32(REGA)            PUT INDICATOR IN COMM. AREA
         MVC   24(4,13),TIMEXT          PUT TIME EXT IN REG 1 SAVE AREA
         B     EXIT
CANCEL   SR    REGD,REGD                SET RETURN CODE VALUE TO 0
EXIT     ST    REGD,16(13)              PUT RETURN CODE IN REG 15 AREA
         LM    14,12,12(13)
         BR    14
*-- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --*
*   DEFINE DATA CONSTANTS                                             *
*-- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --*
TIMEXT   DC    F'2307692'               ONE MINUTE TIME EXTENSION
SMFRCD   DC    X'002B00000084'
*-- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --*
*   DEFINE DSECT FOR JOB WAIT TIME LIMIT RECORD (TYPE X'84')          *
*-- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --*
SMFDSECT DSECT
         DS    1H             ALIGN TIME AND DATE ON FULLWORD
SMFOUT   EQU   *
HEADER   DS    6C
TIME     DS    1F
DATE     DS    1F
SYSID    DS    1F
JOBLOG   DS    16C
USERID   DS    8C
EXTCODE  DS    1C
         END
//LKED.SYSLMOD DD DSNAME=EXITLIB,VOLUME=SER=231400,UNIT=2314,DISP=OLD
//LKED.SYSIN  DD *
    NAME IEFUTL
