EXAM     TITLE 'SAMPLE PROGRAM'
         PRINT DATA
*
*        THIS IS THE MACRO DEFINITION
*
         MACRO
         MOVE  &TO,&FROM
.*
.*       DEFINE SETC SYMBOL
.*
         LCLC  &TYPE
.*
.*       CHECK NUMBER OF OPERANDS
.*
         AIF   (N'&SYSLIST NE 2).ERROR1
.*
.*       CHECK TYPE ATTRIBUTES OF OPERANDS
.*
         AIF   (T'&TO NE T'&FROM).ERROR2
         AIF   (T'&TO EQ 'C' OR T'&TO EQ 'G' OR T'&TO EQ 'K').TYPECGK
         AIF   (T'&TO EQ 'D' OR T'&TO EQ 'E' OR T'&TO EQ 'H').TYPEDEH
         AIF   (T'&TO EQ 'F').MOVE
         AGO   .ERROR3
.TYPEDEH ANOP
.*
.*       ASSIGN TYPE ATTRIBUTE TO SETC SYMBOL
.*
&TYPE    SETC  T'&TO
.MOVE    ANOP
*        NEXT TWO STATEMENTS GENERATED FOR MOVE MACRO
         L&TYPE   2,&FROM
         ST&TYPE  2,&TO
         MEXIT
.*
.*       CHECK LENGTH ATTRIBUTES OF OPERANDS
.*
.TYPECGK AIF   (L'&TO NE L'&FROM OR L'&TO GT 256).ERROR4
*        NEXT STATEMENT GENERATED FOR MOVE MACRO
         MVC   &TO,&FROM
         MEXIT
.*
.*       ERROR MESSAGES FOR INVALID MOVE MACRO INSTRUCTIONS
.*
.ERROR1  MNOTE 1,'IMPROPER NUMBER OF OPERANDS, NO STATEMENTS GENERATED'
         MEXIT
.ERROR2  MNOTE 1,'OPERAND TYPES DIFFERENT, NO STATEMENTS GENERATED'
         MEXIT
.ERROR3  MNOTE 1,'IMPROPER OPERAND TYPES, NO STATEMENTS GENERATED'
         MEXIT
.ERROR4  MNOTE 1,'IMPROPER OPERAND LENGTHS, NO STATEMENTS GENERATED'
         MEND
*
*        MAIN ROUTINE
*
SAMPLR   CSECT
BEGIN    SAVE  (14,12),,*
         BALR  R12,0         ESTABLISH ADDRESSABILITY OF PROGRAM
         USING *,R12         AND TELL THE ASSEMBLER WHAT BASE TO USE
         ST    13,SAVE13
         LM    R5,R7,=A(LISTAREA,16,LISTEND)  LOAD LIST AREA PARAMETERS
         USING LIST,R5      REGISTER 5 POINTS TO THE LIST
MORE     BAL   R14,SEARCH   FIND LIST ENTRY IN TABLE
         TM    SWITCH,NONE  CHECK TO SEE IF NAME WAS FOUND
         BO    NOTTHERE     BRANCH IF NOT
         USING TABLE,R1     REGISTER 1 NOW POINTS TO TABLE ENTRY
         MOVE  TSWITCH,LSWITCH          MOVE FUNCTIONS
         MOVE  TNUMBER,LNUMBER               FROM LIST ENTRY
         MOVE  TADDRESS,LADDRESS                  TO TABLE ENTRY
LISTLOOP BXLE  R5,R6,MORE   LOOP THROUGH THE LIST
         CLC   TESTTABL(240),TABLAREA
         BNE   NOTRIGHT
         CLC   TESTLIST(96),LISTAREA
         BNE   NOTRIGHT
         WTO   'ASSEMBLER SAMPLE PROGRAM SUCCESSFUL'
EXIT     L     R13,SAVE13
         RETURN (14,12),RC=0
*
NOTRIGHT WTO   'ASSEMBLER SAMPLE PROGRAM UNSUCCESSFUL'
         B     EXIT
NOTTHERE OI    LSWITCH,NONE TURN ON SWITCH IN LIST ENTRY
         B     LISTLOOP     GO BACK AND LOOP
SAVE13   DC    F'0'
SWITCH   DC    X'00'
NONE     EQU   X'80'
*
*        BINARY SEARCH ROUTINE
*
SEARCH   NI    SWITCH,255-NONE TURN OFF NOT FOUND SWITCH
         LM    R1,R3,=F'128,4,128' LOAD TABLE PARAMETERS
         LA    R1,TABLAREA-16(R1)  GET ADDRESS OF MIDDLE ENTRY
LOOP     SRL   R3,1                DIVIDE INCREMENT BY 2
         CLC   LNAME,TNAME         COMPARE LIST ENTRY WITH TABLE ENTRY
         BH    HIGHER              BRANCH IF SHOULD BE HIGHER IN TABLE
         BCR   8,R14               EXIT IF FOUND
         SR    R1,R3               OTHERWISE IT IS LOWER IN THE TABLE  X
                                     SO SUBTRACT INCREMENT
         BCT   R2,LOOP             LOOP 4 TIMES
         B     NOTFOUND            ARGUMENT IS NOT IN THE TABLE
HIGHER   AR    R1,R3               ADD INCREMENT
         BCT   R2,LOOP             LOOP 4 TIMES
NOTFOUND OI    SWITCH,NONE         TURN ON NOT FOUND SWITCH
         BR    R14                 EXIT
*
*        THIS IS THE TABLE
*
         DS    0D
TABLAREA DC    XL8'0',CL8'ALPHA'
         DC    XL8'0',CL8'BETA'
         DC    XL8'0',CL8'DELTA'
         DC    XL8'0',CL8'EPSILON'
         DC    XL8'0',CL8'ETA'
         DC    XL8'0',CL8'GAMMA'
         DC    XL8'0',CL8'IOTA'
         DC    XL8'0',CL8'KAPPA'
         DC    XL8'0',CL8'LAMBDA'
         DC    XL8'0',CL8'MU'
         DC    XL8'0',CL8'NU'
         DC    XL8'0',CL8'OMICRON'
         DC    XL8'0',CL8'PHI'
         DC    XL8'0',CL8'SIGMA'
         DC    XL8'0',CL8'ZETA'
*
*        THIS IS THE LIST
*
LISTAREA DC    CL8'LAMBDA',X'0A',FL3'29',A(BEGIN)
         DC    CL8'ZETA',X'05',FL3'5',A(LOOP)
         DC    CL8'THETA',X'02',FL3'45',A(BEGIN)
         DC    CL8'TAU',X'00',FL3'0',A(1)
         DC    CL8'LIST',X'1F',FL3'465',A(0)
LISTEND  DC    CL8'ALPHA',X'00',FL3'1',A(123)
*
*        THIS IS THE CONTROL TABLE
*
         DS    0D
TESTTABL DC    FL3'1',X'00',A(123),CL8'ALPHA'
         DC    XL8'0',CL8'BETA'
         DC    XL8'0',CL8'DELTA'
         DC    XL8'0',CL8'EPSILON'
         DC    XL8'0',CL8'ETA'
         DC    XL8'0',CL8'GAMMA'
         DC    XL8'0',CL8'IOTA'
         DC    XL8'0',CL8'KAPPA'
         DC    FL3'29',X'0A',A(BEGIN),CL8'LAMBDA'
         DC    XL8'0',CL8'MU'
         DC    XL8'0',CL8'NU'
         DC    XL8'0',CL8'OMICRON'
         DC    XL8'0',CL8'PHI'
         DC    XL8'0',CL8'SIGMA'
         DC    FL3'5',X'05',A(LOOP),CL8'ZETA'
*
*        THIS IS THE CONTROL LIST
*
TESTLIST DC    CL8'LAMBDA',X'0A',FL3'29',A(BEGIN)
         DC    CL8'ZETA',X'05',FL3'5',A(LOOP)
         DC    CL8'THETA',X'82',FL3'45',A(BEGIN)
         DC    CL8'TAU',X'80',FL3'0',A(1)
         DC    CL8'LIST',X'9F',FL3'465',A(0)
         DC    CL8'ALPHA',X'00',FL3'1',A(123)
*
*        THESE ARE THE SYMBOLIC REGISTERS
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R5       EQU   5
R6       EQU   6
R7       EQU   7
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
*
*        THIS IS THE FORMAT DEFINITION OF LIST ENTRYS
*
LIST     DSECT
LNAME    DS    CL8
LSWITCH  DS    C
LNUMBER  DS    FL3
LADDRESS DS    F
*
*        THIS IS THE FORMAT DEFINITION OF TABLE ENTRYS
*
TABLE    DSECT
TNUMBER  DS    FL3
TSWITCH  DS    C
TADDRESS DS    F
TNAME    DS    CL8
         END   BEGIN
