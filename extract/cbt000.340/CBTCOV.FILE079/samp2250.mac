//JOBBIE JOB   XXX,NAME,MSGLEVEL=1
//       EXEC  ASMFCLG,PARM.LKED=(XREF,LET,LIST)
//ASM.SYSIN DD *
SAMP2250 CSECT
*3625,060200-060900                                                3575
START    SAVE  (14,12)
         BALR  3,0
         USING HERE,3,4                INITIALIZE BASE REGISTER
HERE     L     4,BASEADDR
         BC    15,SVREGS
BASEADDR DC    A(HERE+4096)
SVREGS   ST    13,SVAREA2+4            CHAIN SAVE AREAS
         LA    13,SVAREA2              ESTABLISH NEW SAVE AREA
         OPEN  (SMPLDCB)               OPEN DCB FOR GRAPHIC DEVICE
         SPAR  (GACB1),PRTY=1          SPAR FOR ASYNC ERROR ROUTINE
         LA    6,0                     LOAD ZERO
         CLR   15,6                    TEST SPAR RETURN CODE
         BNE   ERTN1                   BRANCH IF SPAR UNSUCCESSFUL
         SPAR  (GACB3),PRTY=3          SPAR FOR END KEY ATTN ROUTINE
         LA    6,0                     LOAD ZERO
         CLR   15,6                    TEST SPAR RETURN CODE
         BNE   ERTN1                   BRANCH IF SPAR UNSUCCESSFUL
*GET BUFFER STORAGE
*
GETBUF   ASGNBFR SMPLDCB,BUFSIZE        REQUEST BUFFER STORAGE
         CH    15,BUFCHK                WAS BUFFER ALLOCATED
         BC    8,BUFTBL                 IF=,BUFFER WAS ALLOCATED
         LH    6,BUFSIZE                LOAD REQUESTED BUFFER SIZE
         SH    6,BLKSIZE                DECREMENT SIZE BY 256 BYTES
         CH    6,BLKSIZE               HAS MINIMUM SIZE BEEN PASSED
         BC    8,ABEND                  IF=, MINIMUM NOT AVAILABLE
         STH   6,BUFSIZE                STORE NEW REQUESTED BFR SIZE
         BC    15,GETBUF                BRANCH TO REQUEST BUFFER
BUFTBL   BUFINQ SMPLDCB,BUFTABLE,16     REQUEST ADDR OF ASSIGNED BFR
         LTR   15,15                   TEST RETURN CODE
         BNE   BUFFERR                 IF NOT ZERO, GO TO ERROR RTN
*
*INITIALIZE OACB WITH STARTING ADDRESS AND LENGTH OF BUFFER
*
         LH    0,BUFTABLE+4             BUFFER START ADDRESS
         ST    0,BLP                    PUT BUFFER START ADDRESS INTO
*                                       OACB
         AH    0,TRANSFR+2              INCREMENT START ADDR BY GTRU
*                                       BRANCH ADDRESS
         STH   0,TRANSFR+2              STORE UPDATED BFR ADDR IN GTRU
         LH    0,BUFTABLE+6             STORE LENGTH OF BUFFER ASSIGNED
         ST    0,LOA                    LENGTH OF OUTPUT AREA
         GETMAIN R,LV=(0)               GET MAIN STORAGE AT LEAST AS
*                                       LONG AS BUFFER SIZE ALLOCATED.
*                                       ADDRESS OF ALLOCATED STORAGE
*                                       RETURNED IN REGISTER 1
         ST    1,SLOA                   INITIALIZE OTHER FIELDS IN
         ST    1,CRSA                   OACB WITH ADDRESS OF GRAPHIC
         ST    1,OLP                    DATA OUTPUT AREA (GDOA)
*
*SET OVERFLOW ROUTINE TO GO TO SUPERVISOR
*
         LA    1,ABEND3
         ST    1,AORP
*
*OACB INITIALIZATION COMPLETE
*
*FIRST DISPLAY
*
         GUSTOR OUTCB,ORDSEQ,2          STORE GSRT ORDER
         CALL  GCPRNT,(OCBP,PAR1)       STORE TEXT (TITLE)
         GUSTOR OUTCB,TRANSFR,4         STORE GTRU ORDER
*
*WRITE OUT FIRST TITLE DISPLAY
*
         GWRITE DECB1,STR,SMPLDCB,OCBP
         LTR   15,15                   TEST RETURN CODE
         BNE   ERTN2                   IF NOT ZERO, GO TO ERROR ROUTINE
         WAIT  ECB=DECB1
         CLI   DECB1,X'7F'              TEST FOR SUCCESSFUL I/O
         BNE   ERTN2                    BRANCH IF NOT
         GREADR DECB2,MIP,SMPLDCB,INPUTM  UNLOCK KEYBOARD
         LTR   15,15                   TEST RETURN CODE
         BNE   ERTN2                   IF NOT ZERO, GO TO ERROR ROUTINE
         WAIT  ECB=DECB2
         CLI   DECB2,X'7F'              TEST FOR SUCCESSFUL I/O
         BNE   ERTN2                    BRANCH IF NOT
         WAIT  ECB=COMSAVE+16
*
*END OF TASK
*
         RLSEBFR SMPLDCB,ALL            RELEASE ALL ASSIGNED BUFFER
NXTEND   DAR   (GACB1,GACB3)              DAR ALL ATTN RTNS
         LA    6,0                      LOAD ZERO
         CLR   15,6                     TEST DAR RETURN CODE
         BNE   ERTN1A                   BRANCH IF DAR UNSUCCESSFUL
OUT      L     0,LOA                    LOAD NUMBER OF BYTES TO FREE
         L     1,SLOA                   LOAD STARTING LOCATION
         FREEMAIN R,LV=(0),A=(1)        FREE GDOA
OUT1     CLOSE SMPLDCB                  CLOSE DCB FOR GRAPHIC DEVICE
         L     13,SVAREA2+4             LOAD SAVE AREA ADDRESS
         RETURN (14,12)                 RETURN TO SUPERVISOR
ERTN1    EQU   *
*
*USER SPAR ERROR HANDLER WOULD GO HERE
         WTO   'SPAR ERROR'
         B     OUT1
*
ERTN1A   EQU   *
*USER DAR HANDLER WOULD GO HERE
         WTO   'DAR ERROR'
         B     OUT
ERTN2    EQU   *
*USER I/O ERROR HANDLER WOULD GO HERE
*
         WTO   'I/O ERROR 1'
         B     NXTEND                   DUMMY I/O ERROR HANDLER
*
*ABEND DUE TO NO BUFFER AVAILABLE
*
ABEND    WTO   '512 BYTES, THE MINIMUM CONTIGUOUS BUFFER STORAGE NECESS*
               ARY, IS NOT AVAILABLE'
         BC    15,NXTEND
ABEND3   WTO   'BUFFER STORAGE OVERFLOW'
         BC    15,RETURN1
*
BUFFERR  EQU   *
BUFFERR1 EQU   *
*USER BUFFER MANAGEMENT ERROR ROUTINE WOULD GO HRRE
*
*ASYNCHRONOUS ATTENTION HANDLING ROUTINES
*
*ASYNCHRONOUS ERROR ROUTINE
*
ASYNERR  SAVE  (14,12)                  SAVE REGISTERS
         DROP  3,4
         BALR  5,0
         USING *,5                      INITIALIZE BASE REGISTER
         ST    13,SVAREA4+4             CHAIN SAVE AREAS
         LA    13,SVAREA4               ESTABLISH NEW SAVE AREA
         WTO   'ASYNCHRONOUS ERROR OCCURRED'
         L     13,SVAREA4+4             LOAD SAVE AREA ADDRESS
         RETURN (14,12)                 RETURN TO NEXT SEQ INSTRUCTION
*
*END KEY
*
GRAPHRTN SAVE  (14,12)                  SAVE REGISTERS
         BALR  7,0
         USING *,7                      INITIALIZE BASE REGISTER
         ST    13,SVAREA3+4             CHAIN SAVE AREAS
         LA    13,SVAREA3               ESTABLISH NEW SAVE AREA
*
*SECOND DISPLAY
*
         MVC   OLP,SLOA                RESET OLP=SLOA
         CALL  GSTOR,(OCBP,PAR2)        STORE ORDERS FOR SECOND DISPLAY
         L     1,OLP
         S     1,SLOA                   TOTAL BYTES STORED
         S     1,EIGHT                  BUFFER LOCATION TO INSERT
*                                       CURSOR
         A     1,BLP
         STH   1,ICADDR                 INSERT CURSOR ADDRESS (USED BY
*                                       GCNTRL MACRO BELOW)
*WRITE OUT SECOND DISPLAY
*
WRITEBUF EQU   *
         XC    DECB3(4),DECB3           CLEAR ECB
         GWRITE DECB3,BUF,SMPLDCB,OCBP  WRITE DISPLAY TO BFR
         LTR   15,15                   TEST RETURN CODE
         BNE   ERTN3                   IF NOT ZERO, GO TO ERROR ROUTINE
         WAIT  ECB=DECB3
         CLI   DECB3,X'7F'              I/O SUCCESSFUL
         BNE   ERTN3                    BRANCH IF NOT
         XC    DECB4(4),DECB4           CLEAR ECB
         GCNTRL DECB4,INS,SMPLDCB,ICADDR  INSERT CURSOR
         LTR   15,15                   TEST RETURN CODE
         BNE   ERTN3                   IF NOT ZERO, GO TO ERROR ROUTINE
         WAIT  ECB=DECB4
         CLI   DECB4,X'7F'              I/O SUCCESSFUL
         BNE   ERTN3                    BRANCH IF NOT
STRDISP  EQU   *
         XC    DECB5(4),DECB5           CLEAR ECB
         GCNTRL DECB5,STR,SMPLDCB,BLP+2
         LTR   15,15                   TEST RETURN CODE
         BNE   ERTN3                   IF NOT ZERO, GO TO ERROR ROUTINE
         WAIT  ECB=DECB5
         CLI   DECB5,X'7F'              I/O SUCCESSFUL
         BNE   ERTN3                    BRANCH IF NOT
NEXT     ATTNINQ GACB3,MODE=R           RELINQUISH CONTROL
         CLI   COMSAVE+3,X'01'          CHECK FOR END KEY
         BC    7,STRDISP                IF UNEQUAL,RESTART DISPLAY
*
*SECOND KEYBOARD ATTENTION
*
         XC    DECB7(4),DECB7           CLEAR ECB
         GREAD DECB7,CUR,SMPLDCB,1,IPAREA,ICADDR  READ BUFFER TO CURSOR
         LTR   15,15                   TEST RETURN CODE
         BNE   ERTN3                   IF NOT ZERO, GO TO ERROR ROUTINE
         WAIT  ECB=DECB7
         CLI   DECB7,X'7F'              SUCCESSFUL I/O
         BE    NEXT1                    BRANCH IF YES
         CLI   DECB7+16,X'43'           INCORR. LENGTH ON READ CURSOR
         BNE   ERTN3                    BRANCH IF NOT
NEXT1    EQU   *
         CLI   IPAREA,C'D'              TEST FOR THIRD DISPLAY
         BC    8,NXTDISP1               GO TO NEXT DISPLAY IF EQUAL
         CLI   IPAREA,C'E'              TEST FOR END OF JOB
         BC    8,RETURN1                GO TO EOJ IF EQUAL
         B     NEXT                     RELINQUISH CNTRL-UNWANTED INPUT
*
*THIRD DISPLAY
*
NXTDISP1 MVC   OLP,SLOA                 RESET OLP=SLOA
         GUSTOR OUTCB,ORDSEQ,2         STORE GSRT ORDER
         CALL  GCGRID,(OCBP,PTAB1)      CREATE ORDERS TO DRAW GRID
         CALL  GARC,(OCBP,PTAB2)        CREATE ORDERS TO DRAW ARC
         CALL  GCPRNT,(OCBP,PTAB3)      CREATE ORDERS TO PRINT MESSAGE
         GUSTOR OUTCB,TRANSFR,4         STORE GTRU ORDER
         L     1,OLP
         S     1,SLOA                   TOTAL BYTES STORED
         S     1,EIGHT                 BUFFER LOCATION TO INSERT
*                                       CURSOR
         A     1,BLP
         STH   1,ICADDR                INSERT CURSOR ADDRESS (USED BY
*                                       GCNTRL MACRO BELOW)
*WRITE OUT THIRD DISPLAY
*
         NI    DECB3,X'BF'              ZERO COMPLETION BIT IN ECB
         NI    DECB4,X'BF'              ZERO COMPLETION BIT IN ECB
         NI    DECB5,X'BF'              ZERO COMPLETION BIT IN ECB
         BC    15,WRITEBUF
*
*THIRD KEYBOARD ATTENTION
*
RETURN1  L     13,SVAREA3+4             LOAD SAVE AREA ADDRESS
         POST  COMSAVE+16
         RETURN (14,12)                 RETURN TO NEXT SEQ INSTRUCTION
ERTN3    EQU   *
*
*USER I/O ERROR HANDLING ROUTINE WOULD GO HERE
*
         WTO   'I/O ERROR 2'
         B     RETURN1                  DUMMY I/O ERROR HANDLER
*
ATTNERR  EQU   *
* USER ATTNINQ ERROR ROUTINE WOULD BE HERE
*
*FIRST DISPLAY PARAMETER TABLES
*
PAR1     DC    A(XYL1M1)
         DC    1F'816'                  X-COORDINATE
         DC    1F'2000'                 Y-COORDINATE
         DC    C'BNBP'                  FIXED,NO SCALE, BASIC, PROTECT
         DC    A(TITLE)                 ADDRESS OF FIRST CHARACTER
         DC    1H'44'
         DC    C'U'
TITLE    DC    C'2250 SAMPLE PROGRAM - END ATTENTION TO BEGIN'
*
*SECOND DISPLAY PARAMETER TABLE
*
PAR2     DC    2F'0'                    ADDRESS OF GRAPHIC ORDERS AND
*                                       LENGTH IN BYTES SUPPLIED BY
*                                       GODEL MACRO BELOW
*THIRD DISPLAY PARAMETER TABLES
*
PTAB1    DC    A(XYL1M1)
         DC    1F'200'                  INCREMENT ON X-AXIS
         DC    1F'200'                  INCREMENT ON Y-AXIS
         DC    C'BNA'                   FIXED,NO SCALE, A OPTION
PTAB2    DC    A(XYL1M1)
         DC    1F'2400'                X COORDINATE
         DC    1F'2400'                Y COORDINATE
         DC    C'BNAD'                  FIXED, NO SCALE, ALPHA, D OPTN
         DC    1F'1200'                RADIUS
         DC    1H'0'                    THETA (RIGHT HORIZONTAL 0)
         DC    1H'1'                    ALPHA
         DC    1H'90'                   GAMMA
PTAB3    DC    A(XYL1M1)                X-COORDINATE
         DC    1F'0'                   X COORDINATE
         DC    1F'1800'                Y COORDINATE
         DC    C'BNBP'                  FIXED, NO SCALE, BASIC, PROTECT
         DC    A(DISPLAY)               ADDRESS OF FIRST CHARACTER
         DC    1H'197'                      INCLUDE SPACE FOR CURSOR
         DC    C'U'
*
*POR AREAS AND CONTROL CONSTANTS
*
OCBP     DC    A(OUTCB)                 OUTPUT CONTROL BLOCK POINTER
         DC    A(WORKAREA)
XYL1M1   DC    1H'2400,2400'            X1,Y1
         DC    1H'4000,4000'            X2,Y2
*
*OUTPUT AREA CONTROL BLOCK AND WORKAREAS
*
OUTCB    OACB  OUTCB,1,ABEND3           DUMMY OACB FOR GETMAIN
WORKAREA DS    100F
*
*THE FOLLOWING MACROS AND DATA ARE FOR THE SECOND DISPLAY AND
*ILLUSTRATE USE OF GSRT,GECP AND GTRU ORDER MACROS.
*
         GINIT BLIM=4096               INITIALUZE GRAPHIC COUNTERS
ORDSEQ   GSRT                          START REGENERATION TIMER
         GEPM
         GDV   0,2000,B                POSITION BEAM FOR TITLE LILE
         GECP  B                       BASIC CHARACTER SIZE
         GTXT  'THIS PROGRAM WILL PLOT A GRID WITH CORNERS AT 2400,2400X
               -2400,4000-'
         GCNL  1                       NEW LINE CONTROL CHARACTER
         GTXT  '4000,4000-4000,2400. IT WILL PLOT 90 DEGREES OF ARC WHOX
               SE RADIUS IS'
         GCNL  1
         GTXT  '1200 RASTER UNITS. IT ILLUSTRATES THE USE OF ORDER MACRX
               OS TO CREATE'
         GCNL  1
         GTXT  'THIS DISPLAY AND PORS TO CREATE THE NEXT DISPLAY.'
         GCNL  2
         GTXT  'DEPRESS KEY D AND THEN THE END KEY ON THE ALPHAMERIC KEX
               YBOARD TO'
         GCNL  1
         GTXT  'INITIATE THE NEXT DISPLAY'
         GECF  B
         GTXT  '    '                  LOCATION TO INSERT CURSOR
TRANSFR  GTRU  ORDSEQ
         GODEL ORDSEQ,PAR2             BUILD PARAMETER TABLE FOR GSTOR
*
*THE FOLLOWING ARE FOR THE THIRD DISPLAY
*
DISPLAY  GTXT  'THIS DISPLAY ILLUSTRATES THE OUTPUT OF THE GCGRID,'
         GCNL  1
         GTXT  'GARC, AND GCPRNT PROBLEM ORIENTED POUTINES.'
         GCNL  2
         GTXT  'DEPRESS KEY E AND THEN THE END KEY ON THE ALPHAMERIC KEX
               YBOARD TO'
         GCNL  1
         GTXT  'TERMINATE THIS SAMPLE PROGRAM.'
         GECF  B
         GTXT  '    '                  LOCATION TO INSERT CURSOR
*
*DCB AND SAEC MACROS
*
         DS    0F
SMPLDCB  DCB   DSORG=GS,MACRF=(RC,WC),DDNAME=GRAPHIC,GTYPE=BASIC
GACB1    SAEC  EP=ASYNERR,DCB=SMPLDCB,COMAREA=COMSAVE,ATTNTYP=(R,AE),  X
               PFKMSK=NULL
GACB3    SAEC  EP=GRAPHRTN,DCB=SMPLDCB,COMAREA=COMSAVE,                X
               ATTNTYP=(R,END),PFKMSK=NULL
*
*
*DEFINED CONSTANTS AND WORKAREAS
*
SVAREA1  DC    18F'0'
SVAREA2  DC    18F'0'
SVAREA3  DC    18F'0'
SVAREA4  DC    18F'0'
SVAREA5  DC    18F'0'
SVAREA6  DC    18F'0'
COMSAVE  DC    5F'0'
BUFTABLE DC    4F'0'
INPUTM   DC    1F'0'
ICADDR   DC    1F'0'
IPAREA   DC    1F'0'
EIGHT    DC    1F'8'
BUFSIZE  DC    1H'4096'
BUFCHK   DC    1H'0'
BLKSIZE  DC    1H'256'
         LTORG
*
*OUTPUT AREA CONTROL BLOCK
*
         ORG   OUTCB
SLOA     DS    1F
LOA      DS    1F
AORP     DS    1F
CRSA     DS    1F
OLP      DS    1F
BLP      DS    1F
         END   START
/*
//LKED.SYSLIB  DD  DSNAME=SYS1.LINKLIB,DISP=OLD                    3842
//GO.GRAPHIC   DD  UNIT=(2250-1)                                   3842
//
