./ ADD NAME=#BROWSE                                12SEP93 17.34 --
%TUTORIAL ----------------- EDIT - 'BROWSE' MACRO ---------------------
%OPTION  ===>_ZCMD

+The%BROWSE+macro is used to invoke browse on a data set while in ISPF E
 From the command line of an edit display, the format of the BROWSE macr

    % BROWSE member|pattern+or
    % BROWSE dataset(member|pattern)+or
    % BROWSE +

+e.g. %COMMAND ===> browse abc     + causes browse to be entered for mem
                                     "ABC" of the current library.  If m
                                     "ABC" does not exist, then dataset
                                     &ZUSER..ABC will be browsed.

+e.g. %COMMAND ===> browse 'sys1.proclib(jes2)'
                                   + causes browse to be entered for mem
                                     "JES2" in library "SYS1.PROCLIB".

+e.g. %COMMAND ===> browse         + causes Browse-Entry panel to be dis

+e.g. %COMMAND ===> browse *prim   + causes member list for pattern "*PR
                                     be displayed for the current librar
)END
./ ADD NAME=#EOL                                   12SEP93 17.34 --
)ATTR DEFAULT(%+^)
       %   TYPE(TEXT) INTENS(HIGH)
       +   TYPE(TEXT) INTENS(LOW)
       ^   TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT)
)BODY
%TUTORIAL ------------------- EDIT - 'EOL' MACRO ----------------------
%COMMAND ===>^ZCMD
+
+The%EOL+macro is used to position the cursor at the end of the current
 line (like most PC editors do when you press the "End" scroll key).  Ye
 takes an interrupt and a PF key definition, but that is the price you h
 pay for PC-like features on a 3270.
+
+Use:
+Press appropriate PF key (the one assigned to EOL)
+
%COMMAND ===> <PFn>            +Assume%cursor+was on word%IN+on line 000
%Before+********************** TOP OF DATA *****************************
 000020 D: %IN+A858SES FIND ALL RECORDS FOR WHICH
 000021       REC-TY = 'SESC'
 000022     END FIND                             .----cursor is now here
                                                 |
%After+*********************** TOP OF DATA ***** v *********************
 000020 D:  IN A858SES FIND ALL RECORDS FOR WHICH_
 000021       REC-TY = 'SESC'
 000022     END FIND
)END
./ ADD NAME=#FX                                    12SEP93 17.34 --
%TUTORIAL -------------------- EDIT - 'FX' MACRO ----------------------
%COMMAND ===>_ZCMD

+The%FX+macro is used to execute a FIND ALL 'string' edit subcommand aft
 all lines have been excluded from display.  The resulting display is ju
 those lines which contain the 'string'.
+
+Use:
+Type%FX string {startcol} {endcol}+on the command line
+
%COMMAND ===> FX 'RECORDS'+
%Before+********************** TOP OF DATA *****************************
 000020 D:  IN A858SES FIND ALL RECORDS FOR WHICH
 000021       REC-TY = 'SESC'
 000022     END FIND
 000023 S:  SORT RECORDS IN D BY NSN
 000024     NEW PAGE
%After+*********************** TOP OF DATA *****************************
 000020 D:  IN A858SES FIND ALL RECORDS FOR WHICH
%- - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  2 LINE(S) NOT DI
 000023 S:  SORT RECORDS IN D BY NSN
%- - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  1 LINE(S) NOT DI
)END
./ ADD NAME=#FXC                                   12SEP93 17.34 --
%TUTORIAL ------------------- EDIT - 'FXC' MACRO ----------------------
%COMMAND ===>_ZCMD
+
+The%FXC+macro is used to execute a FIND ALL 'string' edit subcommand af
 all lines have been excluded from display.  The resulting display is ju
 those lines which contain the 'string'.  The 'string' used is the word
 the%cursor+is on.  Thus, this macro works best if you put it into a PF
+
+Use:
+Type%FXC+on the command line or press appropriate PF key
+
%COMMAND ===> <PFn>            +Assume%cursor+was on word%RECORDS+
%Before+********************** TOP OF DATA *****************************
 000020 D:  IN A858SES FIND ALL%RECORDS+FOR WHICH
 000021       REC-TY = 'SESC'
 000022     END FIND
 000023 S:  SORT RECORDS IN D BY NSN
 000024     NEW PAGE
%After+*********************** TOP OF DATA *****************************
 000020 D:  IN A858SES FIND ALL RECORDS FOR WHICH
%- - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  2 LINE(S) NOT DI
 000023 S:  SORT RECORDS IN D BY NSN
%- - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  1 LINE(S) NOT DI
)END
./ ADD NAME=#GO                                    12SEP93 17.34 --
%TUTORIAL ------------------- EDIT - 'GO' MACRO -----------------------
%OPTION  ===>_ZCMD

+The%GO+macro is used to submit the current job in edit and then invoke
+Input Output Facility (IOF).
+
)END
./ ADD NAME=#JC                                    12SEP93 17.34 --
%TUTORIAL -------------------- EDIT - 'JC' MACRO ----------------------
%OPTION  ===>_ZCMD

+The%JC+macro is used to build a valid JOB card sequence at the beginnin
 the member currently being edited.  A PROCLIB statement can optionally
 generated.

)END
./ ADD NAME=#LISTDSI                               12SEP93 17.34 --
%TUTORIAL ----------------- EDIT - 'LISTDSI' MACRO --------------------
%OPTION  ===>_ZCMD

+The%LISTDSI+macro is used to display information about a dataset in Opt
 format.  The default dataset will be the data set that is being edited.
 can display information on another data set by giving the name as a par
 to LISTDSI.  For example, LISTDSI 'ALPHA.MJCL' will display information
 master jcl library.


 Information displayed by the LISTDSI command:

  %o+Dataset name
  %o+Allocation information
  %o+Dataset attributes
  %o+Space statistics
  %o+Date flags
  %o+PDS Directory information
)END
./ ADD NAME=#MEMLIST                               12SEP93 17.34 --
%TUTORIAL ---------------- EDIT - 'MEMLIST' MACRO ---------------------
%COMMAND ===>_ZCMD
+
+The%MEMLIST+macro is used to list the members of the current PDS being
+edited to the screen.  A range may be used. %MEMLIST A L+would list
+all members starting with "A" to include all members starting with "L".
+The range may include up to eight characters on both ends (MEMLIST ABC
+Use:
+Type%MEMLIST+on the command line
+
%COMMAND ===> MEMLIST A L
%RESULT:
+
%==MSG> MEMLIST:  FROM A TO L
%=NOTE=+APPLY      APPLYCK   BROWSEIT   LISTPDS1   LISTPDS2   LOOK
+
)END
./ ADD NAME=#OPER                                  12SEP93 17.34 --
%TUTORIAL ------------------ EDIT - 'OPER' MACRO ----------------------
%COMMAND ===>_ZCMD
+
+The%OPER+macro is used to send canned operator commands to SDSF
+
+Use:
+Type%OPER+on the command line
+     and use%Cn+or%CC+to identify one or more operator commands
+
%EDIT --- AD.OPERATOR(VTAMCMDS) - 01.01 ------------------------ COLUMNS
%COMMAND ===> OPER
+***************************** TOP OF DATA *****************************
+000001 SDSF OPERATOR COMMANDS TO VARY TERMINALS ACTIVE
+000002
%cc+003 /V NET,ACT,ID=AA9DA474  G. HOLMSTROM
+000004 /V NET,ACT,ID=AA9DA475  G. BUSH
%cc+005 /V NET,ACT,ID=AA9DA476  D. QUAIL
)END
./ ADD NAME=#PLUG                                  12SEP93 17.34 --
)ATTR DEFAULT(%@^)
       %   TYPE(TEXT) INTENS(HIGH)
       @   TYPE(TEXT) INTENS(LOW)
       ^   TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT)
)BODY
%TUTORIAL ------------------ EDIT - 'PLUG' MACRO  ---------------------
%COMMAND ===>^ZCMD
@
@The%PLUG@macro is used to plug data into the edit buffer starting at a
@given column.
@
@Use:
@Type%PLUG string {startcol}@on the command line and mark the range of l
@     with the%O@range command on the line numbers.  If column is not sp
@     the cursor position will be used.            cursor pos. ------.
@                                                                    |
%COMMAND ===> PLUG XDCCMD@                                           |
@***************************** TOP OF DATA ************************* v *
%oo@001 AT UXM204.UXM2FMGR+560(FLDBLOCK.FLDNAME!+2,EQ,'MAINT_LV'):R (UXM
@000002 AT UXM204.UXM2FMGR+58C(FLDBLOCK.FLDNAME!+2,EQ,'MAINT_LV'):R (UXM
@000003 AT UXM204.UXM2FMGR+67C(FLDBLOCK.FLDNAME!+2,EQ,'MAINT_LV'):R (UXM
%oo@004 AT UXM204.UXM2FMGR+83C(FLDBLOCK.FLDNAME!+2,EQ,'MAINT_LV'):R (UXM
%RESULT:
@***************************** TOP OF DATA *****************************
@000001 AT UXM204.UXM2FMGR+560(FLDBLOCK.FLDNAME!+2,EQ,'MAINT_LV'):R (XDC
@000002 AT UXM204.UXM2FMGR+58C(FLDBLOCK.FLDNAME!+2,EQ,'MAINT_LV'):R (XDC
@000003 AT UXM204.UXM2FMGR+67C(FLDBLOCK.FLDNAME!+2,EQ,'MAINT_LV'):R (XDC
@000004 AT UXM204.UXM2FMGR+83C(FLDBLOCK.FLDNAME!+2,EQ,'MAINT_LV'):R (XDC
)END
./ ADD NAME=#RUN                                   12SEP93 17.34 --
%TUTORIAL ------------------- EDIT - 'RUN' MACRO ----------------------
%OPTION  ===>_ZCMD

+The%RUN+macro is used to EXECute the clist that currently is being edit
 CLIST parameters can be specified after the word RUN.  If any parameter
 require quotes, use two for every one.  The edit macro will supply the
 and last quote marks.  For example:

     RUN ''AD.DWEEBLIB(DATAMNGR))'' COPIES(2) CLASS(D)

     translates to

     EXEC 'dsn(member)' '''AD.DWEEBLIB(DATAMNGR))'' COPIES(2) CLASS(D)'

)END
./ ADD NAME=#SHOWCUT                               12SEP93 17.34 --
%TUTORIAL ---------------- EDIT - 'SHOWCUT' MACRO ---------------------
%OPTION  ===>_ZCMD

+The%SHOWCUT+macro is used to browse the ISPF cut table created by the C
 macro.  A CUT table name can be entered as a parameter, otherwise the d
 name is used.

)END
./ ADD NAME=#UNX                                   12SEP93 17.34 --
%TUTORIAL ------------------- EDIT - 'UNX' MACRO ----------------------
%COMMAND ===>_ZCMD

+The%UNX+macro is used to show the first n line(s) from each block of ex
+lines in the member.  If no operand is given, the number of lines shown
+defaults to 1.
+
+Use:
+Type%UNX {numlines}+on the command line
+
%COMMAND ===> UNX 1+
%Before+********************** TOP OF DATA *****************************
 000001 //DELETE   EXEC  PGM=IDCAMS,
%- - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  - 20 LINE(S) NOT DI
 000022 //ALTER    EXEC  PGM=IDCAMS,
%- - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  - 12 LINE(S) NOT DI
%After+*********************** TOP OF DATA *****************************
 000001 //DELETE   EXEC  PGM=IDCAMS,
 000002 //             COND=(0,LT)
%- - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  - 19 LINE(S) NOT DI
 000022 //ALTER    EXEC  PGM=IDCAMS,
 000023 //             COND=(4,LT)
%- - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  - 11 LINE(S) NOT DI
)END
./ ADD NAME=CALCP                                  12SEP93 17.34 --
)BODY WINDOW(76,3)
%===>_XPRESHUN
+
+
)INIT
)REINIT
)PROC
&zedsmsg = 'Enter Expression'
&zedlmsg = 'Enter REXX arithmetic expression for evaluation'
VER (&XPRESHUN,NB,MSG=ISRZ001W)
)END
./ ADD NAME=DSK33XX                                12SEP93 17.34 --
)ATTR
  ^   TYPE(OUTPUT)  INTENS(HIGH)
)BODY
%-------------------------- DISK SPACE CALCULATION ---------------------
%COMMAND ===>_ZCMD
+
+ENTER SPACE INFORMATION:
    BLOCK SIZE      %===>_DLEN +
    NUMBER OF BLOCKS%===>_NUMREC    +
    KEY LENGTH      %===>_Z  +          (blank if no key)

                                  IBM             IBM             IBM
+CALCULATION RESULTS:             3350            3380            3390
    USED BYTES PER TRACK    %===>^UTRK5+         ^UTRK8+         ^UTRK9+
    PERCENT USED PER TRACK  %===>^PTRK5+         ^PTRK8+         ^PTRK9+
    WASTED BYTES PER TRACK  %===>^WTRK5+         ^WTRK8+         ^WTRK9+
    BLOCKS PER TRACK        %===>^BTRK5+         ^BTRK8+         ^BTRK9+
    BLOCKS PER CYLINDER     %===>^BCYL5+         ^BCYL8+         ^BCYL9+
    TOTAL TRACKS REQUIRED   %===>^TTRK5       +  ^TTRK8       +  ^TTRK9
    TOTAL CYLINDERS REQUIRED%===>^TCYL5       +  ^TCYL8       +  ^TCYL9
    TOTAL VOLUMES REQUIRED  %===>^TVOL5       +  ^TVOL8       +  ^TVOL9
                                 (555 cyls)      (1770 cyls)     (2226 c
                                 %1x+density     %2x+density     %2x+den
)INIT
.ZVARS = '(KLEN)'
)PROC
VER (&DLEN,NB,RANGE,0,56664)
VER (&NUMREC,NB,RANGE,1,2147483647)
VER (&KLEN,RANGE,0,255)
)END
./ ADD NAME=DVOL                                   12SEP93 17.34 --
%-------------------------- DISPLAY DISK FREE SPACE --------------------
%COMMAND ===>_ZCMD
+
+   VOLSER %===>_DSER1 +           (A partial volser may be entered)
+          %===>_DSER2 +           (Optional)
+          %===>_DSER3 +           (Optional)
+          %===>_DSER4 +           (Optional)
+          %===>_DSER5 +           (Optional)
+
+   DISPLAY%===>_DTYPE+            (SHORT or LONG display request)
)INIT
.CURSOR = DSER1
&DTYPE = SHORT
)PROC
VER(&DSER1,NB)
VER(&DSER2,NAME)
VER(&DSER3,NAME)
VER(&DSER4,NAME)
VER(&DSER5,NAME)
VER(&DTYPE,LIST,SHORT,LONG)
VPUT (DSER1 DSER2 DSER3 DSER4 DSER5) PROFILE
)END
./ ADD NAME=DVOLTBLH                               12SEP93 17.34 --
)BODY
%TUTORIAL ----------------- DISPLAY DISK FREE SPACE -------------------
%COMMAND ===>_ZCMD                                            %SCROLL ==
+
 This option displays DASD free space statistics for a range of disk vol

 Volumes can be located with the the%F+and%L+commands.  At the command l
 enter%F+volser or%L+volser:

            %L WORK   +(Position to volsers starting with WORK)
            %F WORK15 +(Position to volser WORK15)

 The table can be sorted by volume serial or total tracks.  At the comma
 enter%SORT+keyname, where keyname is%SERIAL+or%TOTAL.+ The primary sort
 will always be UNIT TYPE (in descending sequence:  3390, 3380, 3350, et

%SERIAL --UNIT--   ATTRIBUTES  VSAM AVAIL -----TOTALS---- LARGEST-EXTENT
%       ADR TYPE    MOUNT/USE       DSCBS TRACKS  EXT CYL CYL+TR  TRACKS
+WORK11 127 3380   RESDNT/STOR OFF   563  10454   21  692  541+ 0  8115
+WORK12 207 3380   RESDNT/STOR OFF   545  10645   23  703  690+ 0 10350
+WORK13 337 3380   RESDNT/STOR OFF  1236  10766   24  712  675+ 0 10125
+WORK14 787 3380   RESDNT/STOR OFF  1241  10551   22  699  687+ 0 10305
+WORK15 897 3380   RESDNT/STOR OFF  1236  10974   27  724  634+ 0  9510
+****************************** BOTTOM OF DATA  ************************
)INIT
)PROC
)END
./ ADD NAME=DVOLTBLL                               12SEP93 17.34 --
)ATTR DEFAULT(%@_)
%   TYPE(TEXT) INTENS(HIGH)
@   TYPE(TEXT) INTENS(LOW)
_   TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT)
!   TYPE(OUTPUT) INTENS(LOW) CAPS(OFF) JUST(LEFT)
)BODY
%-------------------------- DISPLAY DISK FREE SPACE --------------------
%COMMAND ===>_ZCMD                                            %SCROLL ==
%
)MODEL
!Z
)INIT
.CURSOR = ZCMD
.ZVARS = '(DVOLLINE)'
&AMT=CSR
)PROC
)END
./ ADD NAME=DVOLTBLS                               12SEP93 17.34 --
)ATTR DEFAULT(%@_)
%   TYPE(TEXT) INTENS(HIGH)
@   TYPE(TEXT) INTENS(LOW)
_   TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT)
!   TYPE(OUTPUT) INTENS(LOW) CAPS(OFF) JUST(ASIS)
)BODY
%-------------------------- DISPLAY DISK FREE SPACE --------------------
%COMMAND ===>_ZCMD                                            %SCROLL ==
%
!Z     @ !Z     @                       !Z     @
%SERIAL --UNIT--   ATTRIBUTES  VSAM AVAIL -----TOTALS---- LARGEST-EXTENT
%       ADR TYPE    MOUNT/USE       DSCBS TRACKS  EXT CYL CYL+TR  TRACKS
)MODEL
!Z     !Z  !Z   !Z                       !Z    !Z
)INIT
.HELP = DVOLTBLH
.CURSOR = ZCMD
.ZVARS = '(KEY1 KEY2 KEY3 DVOLSER DVOLF1 DVOLUNIT +
           DVOLF2 DVOLTOT DVOLF3)'
&AMT=CSR
)PROC
)END
./ ADD NAME=EBH01A                                 12SEP93 17.34 --
%TUTORIAL -------------------  EDIT/BROWSE MENU  ----------------------
%COMMAND ===>_ZCMD
+
    This panel allows you to%EDIT+or%BROWSE+datasets by the numbers.
    When you edit more than one dataset (partitioned, sequential, or
    LIBRARIAN) a session, the menu of datasets eliminates typing and typ

    Specify the number of the PDS, and member you want to EDIT/BROWSE:

   +PDS NUMBER   %===>+     (0 to change defaults, 20 for edit entry pan
   +MEMBER       %===>+     (Blank or pattern for member selection list)
   +BROWSE MARKER%===>+     (ON to display%>+browse marker)

    If you have not defined your default libraries and their modes or
    want to change them, select PDS number 0.

    A dataset and member can be express selected from another ISPF panel
    you know the dataset number and member name without looking at the m

    For example: %=E.1+to select dataset number 1 or
                 %=E.1.M204*+to select dataset number 1, members M204...
)INIT
&ZHTOP = EBH01A
)PROC
 &CONT = EBH01B
)END
./ ADD NAME=EBH01B                                 12SEP93 17.34 --
)BODY DEFAULT(%+^)
%TUTORIAL -------------  SET DEFAULT MODES AND LIBRARIES  -------------
%COMMAND ===>^ZCMD
+
  Enter the mode (%E+for edit,%B+for browse,%LE+for ELIPS edit,%LB+for E
  browse,%PDS+for pds84 ) and library name below.

  + PDS  MODE LIBRARY                     PDS  MODE LIBRARY

   %  1  le__ 'source.s2k'_______________% 11  b___ 'sys1.parmlib'______
   %  2  b___ 'tridjk.clist'_____________% 12  b___ 'sys1.proclib'______
   %  3  pds_ 'ad.ispplib'_______________% 13  pds_ 'sys1.lpalib'_______
   %  4  pds_ 'ad.ispmlib'_______________% 14  pds_ 'ad.xdc.samplib'____
   %  5  pds_ 'ad.ispslib'_______________% 15  pds_ 'ad.xdc.install'____
   %  6  pds_ 'ad.tlib'__________________% 16  pds_ 'nomad.schema.data'_
   %  7  pds_ 'ad.cbtmods.ver329'________% 17  lb__ 'source.alpha1'_____
   %  8  e___ 'tridjk.gen.cntl'__________% 18  lb__ 'source.alpha2'_____
   %  9  pds_ 'ad.proclib'_______________% 19  lb__ 'source.mvs'________
   % 10  b___ 's2k.parms'________________+

+   Press%ENTER+key to process changes.
+   Enter%END+command or press%PF3+to exit.
)END
./ ADD NAME=EB01A                                  12SEP93 17.34 --
)ATTR
  ^   TYPE(OUTPUT)  INTENS(LOW) CAPS(ON)
  !   TYPE(OUTPUT)  INTENS(HIGH) CAPS(ON)
)BODY
%----------------------------  EDIT/BROWSE MENU  -----------------------
%COMMAND ===>_ZCMD
+
+ISPF LIBRARY:
   +PDS NUMBER   %===>_Z +
   +MEMBER       %===>_MEMBER  +    (Blank or pattern for member selecti
   +BROWSE MARKER%===>_BRM+         (ON or OFF)

 + PDS  LIBRARY                          PDS  LIBRARY

    %0 +Change defaults below

  !Z+1 ^EB1                            !Z+11 ^EB11
  !Z+2 ^EB2                            !Z+12 ^EB12
  !Z+3 ^EB3                            !Z+13 ^EB13
  !Z+4 ^EB4                            !Z+14 ^EB14
  !Z+5 ^EB5                            !Z+15 ^EB15
  !Z+6 ^EB6                            !Z+16 ^EB16
  !Z+7 ^EB7                            !Z+17 ^EB17
  !Z+8 ^EB8                            !Z+18 ^EB18
  !Z+9 ^EB9                            !Z+19 ^EB19
 !Z+10 ^EB10                           %  20  EDIT+- ENTRY PANEL

)INIT
  .ZVARS  = '(PDS +
              EF1 EF11 EF2 EF12 EF3 EF13 EF4 EF14 EF5 EF15 +
              EF6 EF16 EF7 EF17 EF8 EF18 EF9 EF19 EF10)'
  .CURSOR = PDS
  .HELP   = EBH01A
  &EF1  = ' '
  &EF2  = ' '
  &EF3  = ' '
  &EF4  = ' '
  &EF5  = ' '
  &EF6  = ' '
  &EF7  = ' '
  &EF8  = ' '
  &EF9  = ' '
  &EF10 = ' '
  &EF11 = ' '
  &EF12 = ' '
  &EF13 = ' '
  &EF14 = ' '
  &EF15 = ' '
  &EF16 = ' '
  &EF17 = ' '
  &EF18 = ' '
  &EF19 = ' '
  IF (&BRM = &Z)
    &BRM  = 'OFF'
  &PDS = TRUNC(&PDS,'.')
  IF (.TRAIL ^= &Z)
    &MEMBER = .TRAIL
  IF (&BRM = 'ON')
    IF (&EM1 = 'B','LB')
      &EF1 = '>'
    IF (&EM2 = 'B','LB')
      &EF2 = '>'
    IF (&EM3 = 'B','LB')
      &EF3 = '>'
    IF (&EM4 = 'B','LB')
      &EF4 = '>'
    IF (&EM5 = 'B','LB')
      &EF5 = '>'
    IF (&EM6 = 'B','LB')
      &EF6 = '>'
    IF (&EM7 = 'B','LB')
      &EF7 = '>'
    IF (&EM8 = 'B','LB')
      &EF8 = '>'
    IF (&EM9 = 'B','LB')
      &EF9 = '>'
    IF (&EM10 = 'B','LB')
      &EF10 = '>'
    IF (&EM11 = 'B','LB')
      &EF11 = '>'
    IF (&EM12 = 'B','LB')
      &EF12 = '>'
    IF (&EM13 = 'B','LB')
      &EF13 = '>'
    IF (&EM14 = 'B','LB')
      &EF14 = '>'
    IF (&EM15 = 'B','LB')
      &EF15 = '>'
    IF (&EM16 = 'B','LB')
      &EF16 = '>'
    IF (&EM17 = 'B','LB')
      &EF17 = '>'
    IF (&EM18 = 'B','LB')
      &EF18 = '>'
    IF (&EM19 = 'B','LB')
      &EF19 = '>'
)PROC
VER(&PDS,NB,RANGE,0,20)
VER(&BRM,LIST,ON,OFF)
&DSNAME = TRANS(&PDS
           0,' '
           1,'&EB1'
           2,'&EB2'
           3,'&EB3'
           4,'&EB4'
           5,'&EB5'
           6,'&EB6'
           7,'&EB7'
           8,'&EB8'
           9,'&EB9'
          10,'&EB10'
          11,'&EB11'
          12,'&EB12'
          13,'&EB13'
          14,'&EB14'
          15,'&EB15'
          16,'&EB16'
          17,'&EB17'
          18,'&EB18'
          19,'&EB19')
&MODE = TRANS(&PDS
           0,' '
           1,'&EM1'
           2,'&EM2'
           3,'&EM3'
           4,'&EM4'
           5,'&EM5'
           6,'&EM6'
           7,'&EM7'
           8,'&EM8'
           9,'&EM9'
          10,'&EM10'
          11,'&EM11'
          12,'&EM12'
          13,'&EM13'
          14,'&EM14'
          15,'&EM15'
          16,'&EM16'
          17,'&EM17'
          18,'&EM18'
          19,'&EM19')
VPUT (BRM) PROFILE
)END
./ ADD NAME=EB01B                                  12SEP93 17.34 --
)ATTR
  ^   TYPE(OUTPUT)  INTENS(LOW) CAPS(ON)
  #   TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) PAD(_)
)BODY
%----------------------  SET DEFAULT MODES AND LIBRARIES  --------------
%COMMAND ===>_ZCMD
+
+  ADD, CHANGE, or DELETE entries below:

+    (MODE is E for edit, B for browse, LE for ELIPS edit, LB for ELIPS
+     and PDS for pds84)

 + PDS  MODE LIBRARY                          PDS  MODE LIBRARY

  %  1 #EM1 _EB1                             % 11 #EM11_EB11
  %  2 #EM2 _EB2                             % 12 #EM12_EB12
  %  3 #EM3 _EB3                             % 13 #EM13_EB13
  %  4 #EM4 _EB4                             % 14 #EM14_EB14
  %  5 #EM5 _EB5                             % 15 #EM15_EB15
  %  6 #EM6 _EB6                             % 16 #EM16_EB16
  %  7 #EM7 _EB7                             % 17 #EM17_EB17
  %  8 #EM8 _EB8                             % 18 #EM18_EB18
  %  9 #EM9 _EB9                             % 19 #EM19_EB19
  % 10 #EM10_EB10                            +

+  Press%ENTER+key to process changes.
+  Enter%END+command or press%PF3+to exit.
)INIT
.HELP = EBH01B
)PROC
  VER(&EM1,LIST,E,B,LE,LB,PDS,MSG=EB003)
  VER(&EB1,DSNAME)
  IF (&EM1 ^= &Z)
    VER(&EB1,NONBLANK)
  IF (&EB1 ^= &Z)
    VER(&EM1,NONBLANK)
  VER(&EM2,LIST,E,B,LE,LB,PDS,MSG=EB003)
  VER(&EB2,DSNAME)
  IF (&EM2 ^= &Z)
    VER(&EB2,NONBLANK)
  IF (&EB2 ^= &Z)
    VER(&EM2,NONBLANK)
  VER(&EM3,LIST,E,B,LE,LB,PDS,MSG=EB003)
  VER(&EB3,DSNAME)
  IF (&EM3 ^= &Z)
    VER(&EB3,NONBLANK)
  IF (&EB3 ^= &Z)
    VER(&EM3,NONBLANK)
  VER(&EM4,LIST,E,B,LE,LB,PDS,MSG=EB003)
  VER(&EB4,DSNAME)
  IF (&EM4 ^= &Z)
    VER(&EB4,NONBLANK)
  IF (&EB4 ^= &Z)
    VER(&EM4,NONBLANK)
  VER(&EM5,LIST,E,B,LE,LB,PDS,MSG=EB003)
  VER(&EB5,DSNAME)
  IF (&EM5 ^= &Z)
    VER(&EB5,NONBLANK)
  IF (&EB5 ^= &Z)
    VER(&EM5,NONBLANK)
  VER(&EM7,LIST,E,B,LE,LB,PDS,MSG=EB003)
  VER(&EB7,DSNAME)
  IF (&EM7 ^= &Z)
    VER(&EB7,NONBLANK)
  IF (&EB7 ^= &Z)
    VER(&EM7,NONBLANK)
  VER(&EM8,LIST,E,B,LE,LB,PDS,MSG=EB003)
  VER(&EB8,DSNAME)
  IF (&EM8 ^= &Z)
    VER(&EB8,NONBLANK)
  IF (&EB8 ^= &Z)
    VER(&EM8,NONBLANK)
  VER(&EM9,LIST,E,B,LE,LB,PDS,MSG=EB003)
  VER(&EB9,DSNAME)
  IF (&EM9 ^= &Z)
    VER(&EB9,NONBLANK)
  IF (&EB9 ^= &Z)
    VER(&EM9,NONBLANK)
  VER(&EM10,LIST,E,B,LE,LB,PDS,MSG=EB003)
  VER(&EB10,DSNAME)
  IF (&EM10 ^= &Z)
    VER(&EB10,NONBLANK)
  IF (&EB10 ^= &Z)
    VER(&EM10,NONBLANK)
  VER(&EM11,LIST,E,B,LE,LB,PDS,MSG=EB003)
  VER(&EB11,DSNAME)
  IF (&EM11 ^= &Z)
    VER(&EB11,NONBLANK)
  IF (&EB11 ^= &Z)
    VER(&EM11,NONBLANK)
  VER(&EM12,LIST,E,B,LE,LB,PDS,MSG=EB003)
  VER(&EB12,DSNAME)
  IF (&EM12 ^= &Z)
    VER(&EB12,NONBLANK)
  IF (&EB12 ^= &Z)
    VER(&EM12,NONBLANK)
  VER(&EM13,LIST,E,B,LE,LB,PDS,MSG=EB003)
  VER(&EB13,DSNAME)
  IF (&EM13 ^= &Z)
    VER(&EB13,NONBLANK)
  IF (&EB13 ^= &Z)
    VER(&EM13,NONBLANK)
  VER(&EM14,LIST,E,B,LE,LB,PDS,MSG=EB003)
  VER(&EB14,DSNAME)
  IF (&EM14 ^= &Z)
    VER(&EB14,NONBLANK)
  IF (&EB14 ^= &Z)
    VER(&EM14,NONBLANK)
  VER(&EM15,LIST,E,B,LE,LB,PDS,MSG=EB003)
  VER(&EB15,DSNAME)
  IF (&EM15 ^= &Z)
    VER(&EB15,NONBLANK)
  IF (&EB15 ^= &Z)
    VER(&EM15,NONBLANK)
  VER(&EM16,LIST,E,B,LE,LB,PDS,MSG=EB003)
  VER(&EB16,DSNAME)
  IF (&EM16 ^= &Z)
    VER(&EB16,NONBLANK)
  IF (&EB16 ^= &Z)
    VER(&EM16,NONBLANK)
  VER(&EM17,LIST,E,B,LE,LB,PDS,MSG=EB003)
  VER(&EB17,DSNAME)
  IF (&EM17 ^= &Z)
    VER(&EB17,NONBLANK)
  IF (&EB17 ^= &Z)
    VER(&EM17,NONBLANK)
  VER(&EM18,LIST,E,B,LE,LB,PDS,MSG=EB003)
  VER(&EB18,DSNAME)
  IF (&EM18 ^= &Z)
    VER(&EB18,NONBLANK)
  IF (&EB18 ^= &Z)
    VER(&EM18,NONBLANK)
  VER(&EM19,LIST,E,B,LE,LB,PDS,MSG=EB003)
  VER(&EB19,DSNAME)
  IF (&EM19 ^= &Z)
    VER(&EB19,NONBLANK)
  IF (&EB19 ^= &Z)
    VER(&EM19,NONBLANK)
)END
./ ADD NAME=ISFPANEL                               12SEP93 17.34 --
/******************************************************/
/* Insert at the end of the )INIT section of panel    */
/* ISFPANEL                                           */
/******************************************************/
/* Generate end key response if OPER edit macro call  */
/******************************************************/
VGET (SDSFOPER) ASIS
IF (&SDSFOPER = 'END')
  .RESP=END
./ ADD NAME=ISR@PRIM                               12SEP93 17.34 --
)ATTR
  ^  TYPE(AB) FORMAT(MIX)
)ABC ABCTEXT('System')
  PDC PDCTEXT('MVS system information...')
  ACTION RUN(MVS)
  PDC PDCTEXT('TSO dataset allocations...')
  ACTION RUN(LA)
  PDC PDCTEXT('DASD space calculations...')
  ACTION RUN(DISK)
  PDC PDCTEXT('Active TSO users...')
  ACTION RUN(TSU)
  PDC PDCTEXT('Resolve Plus monitor...')
  ACTION RUN(RESOLVE)
  PDC PDCTEXT('Omegamon monitor...')
  ACTION RUN(OMEGAMON)
  PDC PDCTEXT('RMF monitor...')
  ACTION RUN(RMF)
  PDC PDCTEXT('Info/MVS...')
  ACTION RUN(INFOMVS)
  PDC PDCTEXT('Non-CUA Primary Option Menu...')
  ACTION RUN(XPRIM)
  PDC PDCTEXT('Exit ISPF...')
  ACTION RUN(END)
)ABCINIT ABCTEXT('System')
  .ZVARS = 'ZPDC'
  &ZPDC = ''
)ABCPROC ABCTEXT('System')
  VER (&ZPDC,RANGE,1,20)
)ABC ABCTEXT('Spool')
  PDC PDCTEXT('AMXSI-TRI key jobs...')
  ACTION RUN(JOBS)
  PDC PDCTEXT('Input output facility (IOF)...')
  ACTION RUN(IOFM)
  PDC PDCTEXT('System display and search facility (SDSF)...')
  ACTION RUN(SDSF)
  PDC PDCTEXT('Previous or current SYSLOG dataset...')
  ACTION RUN(SYSLOG)
)ABCINIT ABCTEXT('Spool')
  .ZVARS = 'ZPDC'
  &ZPDC = ''
)ABCPROC ABCTEXT('Spool')
  VER (&ZPDC,RANGE,1,20)
)ABC ABCTEXT('DBMS')
  PDC PDCTEXT('Model 204...')
  ACTION RUN(M204)
  PDC PDCTEXT('Nomad...')
  ACTION RUN(NOMAD)
  PDC PDCTEXT('System 2000...')
  ACTION RUN(S2K)
  PDC PDCTEXT('VSAM...')
  ACTION RUN(VSAM)
  PDC PDCTEXT('DB2...')
  ACTION RUN(DB2I)
  PDC PDCTEXT('Datacom/DB...')
)ABCINIT ABCTEXT('DBMS')
  .ZVARS = 'ZPDC'
  &ZPDC = ''
)ABCPROC ABCTEXT('DBMS')
  VER (&ZPDC,RANGE,1,20)
)ABC ABCTEXT('Calendar')
  PDC PDCTEXT('4-month calendar...')
  ACTION RUN(DATE)
  PDC PDCTEXT('Monthly calendar...')
  ACTION RUN(MONTH)
  PDC PDCTEXT('6/12 month calendar...')
  ACTION RUN(YEAR)
)ABCINIT ABCTEXT('Calendar')
  .ZVARS = 'ZPDC'
  &ZPDC = ''
)ABCPROC ABCTEXT('Calendar')
  VER (&ZPDC,RANGE,1,20)
)ABC ABCTEXT('Help')
  PDC PDCTEXT('SIMA Personnel Locator...')
  ACTION RUN(PLS)
  PDC PDCTEXT('SIMA ISPF commands...')
  ACTION RUN(COMMANDS)
  PDC PDCTEXT('SIMA Edit macros...')
  ACTION RUN(MACROS)
  PDC PDCTEXT('CCSS Magic Flashes...')
  ACTION RUN(FLASHES)
  PDC PDCTEXT('MVS/ESA Program Products...')
  ACTION RUN(PRODUCTS)
  PDC PDCTEXT('CA-Docview...')
  ACTION RUN(DOCVIEW)
  PDC PDCTEXT('PC keyboard map...')
  ACTION RUN(PCKEYS)
  PDC PDCTEXT('Changes to Version 3 of ISPF...')
  ACTION RUN(CHANGES)
  PDC PDCTEXT('TSO full-screen help...')
  ACTION RUN(TSOHELP)
  PDC PDCTEXT('ISPF Tutorial...')
  ACTION RUN(HELP)
)ABCINIT ABCTEXT('Help')
  .ZVARS = 'ZPDC'
  &ZPDC = ''
)ABCPROC ABCTEXT('Help')
  VER (&ZPDC,RANGE,1,20)
)ABC ABCTEXT('Info')
  PDC PDCTEXT('Sysid:      &SYSID')
  PDC PDCTEXT('CPU Model:  &CPUMDL')
  PDC PDCTEXT('Real:       &REALSTOR')
  PDC PDCTEXT('IPL Date:   &IPLDATE')
  PDC PDCTEXT('IPL Time:   &IPLTIME')
  PDC PDCTEXT('MVS:        &SCPNAME')
  PDC PDCTEXT('JES2:       &JESLEVEL')
  PDC PDCTEXT('TSO/E:      &TSOE')
  PDC PDCTEXT('ISPF:       &ZPDFREL')
  PDC PDCTEXT('DFP:        &DFPLEVEL')
  PDC PDCTEXT('SMS:        &SMSSTAT')
  PDC PDCTEXT('Proc:       &LOGPROC')
  PDC PDCTEXT('Region:     &REGION')
  PDC PDCTEXT('Jobid:      &JESJOBID')
  PDC PDCTEXT('Termid:     &TERMID')
)ABCINIT ABCTEXT('Info')
  .ZVARS = 'ZPDC'
  &ZPDC = ''
)ABCPROC ABCTEXT('Info')
  VER (&ZPDC,RANGE,1,20)
)BODY
%^ System^ Spool^ DBMS^ Calendar^ Help^ Info+                PIE session
+-----------------------------------------------------------------------
%                       ISPF/&ZPDFREL PRIMARY OPTION MENU
%OPTION  ===>_ZCMD
%                                                           +USERID   -
%   0 +ISPF PARMS  - Specify terminal and user parameters   +PROC     -
%   1 +BROWSE      - Display source data or output listings +TIME     -
%   2 +EDIT        - Create or change source data           +JULIAN   -
%   3 +UTILITIES   - Perform utility functions              +MVS      -
%   6 +COMMAND     - Enter TSO command, CLIST, or REXX exec +TSO/E    -
%   7 +DIALOG TEST - Perform dialog testing                 +SYSTEM   -%
%   D +XDC         - Interactive debugging with XDC
%   E +EDIT/BROWSE - Edit/Browse by the numbers from a menu of datasets
%   L +LIBRARIAN   - ADR/The Librarian options menu
%   M +MENU        - Information Technology (AMXSI-TRI) Application Menu
%   O +OUTPUT      - Output display utilities (IOF and SDSF)
%   P +PDS         - Invoke the PDS command processor
%   T +TUTORIAL    - Display information about ISPF/PDF
%   W +WHAT'S%NEW+ - Historical review of AMXSI-TRI ISPF/PDF extensions
%   X +EXIT        - Terminate ISPF using log and list defaults
%
+Enter%END+command to terminate ISPF.
%
)INIT
  .HELP = ISR00003
  &ZPRIM = YES        /* ALWAYS A PRIMARY OPTION MENU      */
  &ZHTOP = ISR00003   /* TUTORIAL TABLE OF CONTENTS        */
  &ZHINDEX = ISR91000 /* TUTORIAL INDEX - 1ST PAGE         */
  VPUT (ZHTOP,ZHINDEX) PROFILE

  IF (&ZPDFINIT = YES)
    IF (&Z$SAVE ^= &Z)
      &ZCMD   = &Z$SAVE
      .RESP     = ENTER
      &Z$SAVE = &Z
  IF (&ZPDFINIT = &Z)
    &Z$SAVE   = &ZCMD
    &ZCMD     = 'FIRST'
    .RESP     = ENTER
    &ZPDFINIT = YES

)PROC
  &ZDUM = TRUNC(&ZCMD,'.')
  &ZTRAIL = .TRAIL
  &ZSEL = TRANS( TRUNC (&ZCMD,'.')
                0,'PANEL(ISPOPTA)'
                1,'PGM(ISRBRO) PARM(ISRBRO01)'
                2,'PGM(ISREDIT) PARM(P,ISREDM01)'
                3,'PANEL(ISRUTIL)'
                4,'PANEL(ISRFPA)'
                5,'PGM(ISRJB1) PARM(ISRJPA) NOCHECK'
                6,'PGM(ISRPTC)'
                7,'PGM(ISPYXDR) PARM(ISR) NOCHECK'
                8,'PANEL(ISRLPRIM)'
                9,'PANEL(ISRDIIS)'
               10,'PGM(ISRSCLM) NOCHECK'
                B,'PANEL(TRI@CBT)'
                C,'PGM(ISPTUTOR) PARM(ISR00005)'
          CHANGES,'PGM(ISPTUTOR) PARM(ISR00005)'
                D,'PANEL(XDCPANEL) NEWAPPL(XDC) PASSLIB'
                E,'CMD(%EB) NOCHECK'
            FIRST,'CMD(%ADINIT)'
                I,'PGM(IOFSPF) PARM(&ZCMD) NEWAPPL(IOF) NOCHECK PASSLIB'
                L,'PANEL(LIBRPDF) NEWAPPL(LIB@) PASSLIB'
               LB,'PGM(LIBRLE00) PARM(B)'
               LE,'PGM(LIBRLE00)'
                M,'PANEL(TRI@PRIM)'
                N,'CMD(%ADN)'
                O,'PANEL(OUTPUT)'
                P,'PANEL(PDS@PRIM)'
                S,'PGM(ISFISP) PARM(&ZTRAIL) NEWAPPL(ISF) NOCHECK PASSLI
                T,'PGM(ISPTUTOR) PARM(ISR00000)'
                W,'CMD(%ADNEWSPF)'
                X,'EXIT'
              ' ',' '
                *,'?' )
 &ZTRAIL = .TRAIL
)END
./ ADD NAME=ISRUTIL                                12SEP93 17.34 --
%-------------------------  UTILITY SELECTION MENU  --------------------
%OPTION  ===>_ZCMD
%
%    1 +LIBRARY    - Compress or print data set.  Print index listing.
+                      Print, rename, delete, or browse members
%    2 +DATASET    - Allocate, rename, delete, catalog, uncatalog, or
+                      display information of an entire data set
%    3 +MOVE/COPY  - Move, copy, or promote members or data sets
%    4 +DSLIST     - Print or display (to process) list of data set name
+                      Print or display VTOC information
%    5 +RESET      - Reset statistics for members of ISPF library
%    6 +HARDCOPY   - Initiate hardcopy output
%    8 +OUTLIST    - Display, delete, or print held job output
%    9 +COMMANDS   - Create/change an application command table
%   10 +CONVERT    - Convert old format menus/messages to new format
%   11 +FORMAT     - Format definition for formatted data Edit/Browse
%   12 +SUPERC     - Compare data sets (Standard dialog)
%   13 +SUPERCE    - Compare data sets (Extended dialog)
%   14 +SEARCH-FOR - Search data sets for strings of data
%   14B+SEARCH-FOR - Search data sets for strings of data (Batch Job)
)INIT
  .HELP = ISR30000
)PROC
  &ZSEL = TRANS( TRUNC (&ZCMD,'.')
                1,'PGM(ISRUDA) PARM(ISRUDA1)'
                2,'PGM(ISRUDA) PARM(ISRUDA2)'
                3,'PGM(ISRUMC)'
                4,'PGM(ISRUDL) PARM(ISRUDLP)'
                5,'PGM(ISRURS)'
                6,'PGM(ISRUHC)'
                8,'PGM(ISRUOLP)'
                9,'PANEL(ISPUCMA)'
               10,'PGM(ISRQCM) PARM(ISRQCMP)'
               11,'PGM(ISRFMT)'
               12,'PGM(ISRSSM)'
               13,'PGM(ISRSEPRM) NOCHECK'
               14,'PGM(ISRSFM)'
              14B,'CMD(%SUPERC)'
              ' ',' '
                *,'?' )
  &ZTRAIL = .TRAIL
)END
 /*                                                                  */
 /* $SEG(ISRUTIL) COMP(SUPERCD) PROD(MVS):                           */
 /* CHANGE ACTIVITY:                                                 */
 /*    PN = REASON    RELEASE   DATE    ORIGIN   COMMENT             */
 /*    --   --------  --------  ------  ------ : ------------------  */
 /*   $L0 =    M230      100386  LUDLOW :                            */
 /*                                                                  */
./ ADD NAME=JC                                     12SEP93 17.34 --
%------------------------------- JOB CARD MACRO ------------------------
%COMMAND ===>_ZCMD
+
+ENTER JOB CARD INFORMATION:
    JOB NAME PREFIX  %===>_JCPRE +
    JOB NAME SUFFIX  %===>_Z +
    JOB CLASS        %===>_Z+
    JOB TIME         %===>_JCTIME  +            (Optional)
    JOB MESSAGE CLASS%===>_Z+
    PROGRAMMER NAME  %===>_JCNAME              +
    NOTIFY USERID    %===>_JCNOTIFY+            (Optional)
    ACCOUNTING INFO  %===>_JCACC          +
    ROOM NUMBER      %===>_JCRM+
    PROCLIB DSNAME   %===>_JCPROC              +(Optional)
    JES2 XEQ NODE    %===>_JCJXEQ  +            (Optional)
    JES2 PRINT NODE  %===>_JCJPRT           +   (Optional)
    OTHER PARAMETERS %===>_JCOTHER1
                     %===>_JCOTHER2
                     %===>_JCOTHER3

)INIT
.ZVARS = '(JCSU JCCLASS JCMC)'
.CURSOR = JCSU
IF (&JCPRE = &Z)
  &JCPRE = &ZUSER
IF (&JCMC = &Z)
  &JCMC = 'R'
IF (&JCCLASS = &Z)
  &JCCLASS = 'B'
)PROC
VER (&JCPRE,NB)
VER (&JCSU,NB)
VER (&JCCLASS,NB)
VER (&JCMC,NB)
VER (&JCNAME,NB)
VER (&JCACC,NB)
VER (&JCRM,NB)
VER (&JCPROC,DSNAME)
VER (&JCJXEQ,NAME)
VER (&JCJPRT,NAME)
)END
./ ADD NAME=SHOWCUT                                12SEP93 17.34 --
)ATTR
 @ TYPE(OUTPUT) INTENS(LOW)
 ^ TYPE(TEXT) SKIP(ON) INTENS(LOW)
)BODY
%BROWSE -- CUT TABLE '&CT' ---------------------------------------------
%COMMAND ===>_ZCMD                                          ^%SCROLL ===
+****************************** TOP OF DATA ****************************
)MODEL
@CTPT
)INIT
)PROC
)END
./ ADD NAME=SORTWORK                               12SEP93 17.34 --
)ATTR
  ^   TYPE(OUTPUT)  INTENS(HIGH)
)BODY
%--------------------------- SORTWORK CALCULATION ----------------------
%COMMAND ===>_ZCMD
+
+ENTER SORTWORK INFORMATION:
    DEVICE TYPE        %===>_DTYP+         (3330, 3350, 3380, or 3390)
    LOGICAL RECORD SIZE%===>_LRECL+
    NUMBER OF RECORDS  %===>_NUMREC    +
    NUMBER OF SORTWORKS%===>_Z +           (Blank defaults to 3)


+CALCULATION RESULTS:
    TRACKS REQ'D PER SORTWORK%===>^TTRKSW      +
    CYLS   REQ'D PER SORTWORK%===>^TCYLSW      +
    TOTAL TRACKS REQ'D       %===>^TTRK        +
    TOTAL CYLS   REQ'D       %===>^TCYL        +
)INIT
.ZVARS = '(NUMSW)'
.CURSOR = DTYP
)PROC
 IF (&DTYP = &Z)
   &DTYP = 3330
 VER (&DTYP,LIST,3330,3350,3380,3390)
 VER (&LRECL,NB,RANGE,1,32760)
 VER (&NUMREC,NB,NUM)
 IF (&NUMSW = &Z)
   &NUMSW = 3
 VER (&NUMSW,RANGE,1,32)
 VPUT (DTYP, LRECL, NUMREC, NUMSW) PROFILE
)END
./ ADD NAME=SYSLOG                                 12SEP93 17.34 --
%------------------------------- BROWSE SYSLOG -------------------------
%COMMAND ===>_ZCMD
%
+SYSLOG DATASET INFORMATION:
+   DAY OF WEEK%===>_Z  +       (* for today's SYSLOG,
+                                MON/TUE/WED/THU/FRI/SAT/SUN for archive
)INIT
.ZVARS = '(LOGDAY)'
.CURSOR = LOGDAY
)PROC
VER(&LOGDAY,NB,LIST,*,SUN,MON,TUE,WED,THU,FRI,SAT)
VPUT (LOGDAY) PROFILE
)END
./ ADD NAME=TRAPTBL                                12SEP93 17.34 --
)ATTR
! TYPE(OUTPUT) INTENS(LOW) CAPS(OFF) JUST(ASIS)
)BODY
%----------------------- '&TSOCMD' COMMAND OUTPUT ----------------------
%COMMAND ===>_ZCMD                                            %SCROLL ==
%
)MODEL
!Z
)INIT
.CURSOR = ZCMD
.ZVARS = '(CMDLINE)'
&AMT=CSR
)PROC
)END
./ ADD NAME=TRIJOBS                                12SEP93 17.34 --
%-------------------------------- DISPLAY JOBS -------------------------
%OPTION ===>_ZCMD
+
%   A +MAES    - Multiple Aion Execution System
%   C +CICS    - Customer Information and Control System
%   D +DB2     - DataBase 2
%   I +IRLM    - IRLM Lock Manager
%   K +KEYPLUS - Keyplus
%   M +M204    - Model 204
%   N +NOMADSM - Nomad Session Manager - Server/VTD Rotor
%   O +DATACOM - Datacom/DB
%   S +S2K     - System 2000
%   R +DRI     - Data Routing Interface
%   T +TCP/IP  - Knet TCP/IP
%
%
+SPOOL DISPLAY PROGRAM%===>_Z   +          (IOF or SDSF)
)INIT
.ZVARS = '(SPOOLPGM)'
IF (&SPOOLPGM = ' ')
  &SPOOLPGM = 'IOF'
)PROC
VER(&SPOOLPGM,NB,LIST,IOF,SDSF)
IF (&SPOOLPGM = 'IOF')
  &ZSEL = TRANS(TRUNC(&ZCMD,'.')
          A,'PGM(IOFSPF) PARM(.MAES*) NEWAPPL(IOF) PASSLIB'
          C,'PGM(IOFSPF) PARM(.CICS*) NEWAPPL(IOF) PASSLIB'
          D,'PGM(IOFSPF) PARM(.DSN*) NEWAPPL(IOF) PASSLIB'
          I,'PGM(IOFSPF) PARM(.IRLM*) NEWAPPL(IOF) PASSLIB'
          K,'PGM(IOFSPF) PARM(.KEY*) NEWAPPL(IOF) PASSLIB'
          M,'PGM(IOFSPF) PARM(.M204*) NEWAPPL(IOF) PASSLIB'
          N,'PGM(IOFSPF) PARM(.N* .EXCLUDE JOBNAME NC SM) +
               NEWAPPL(IOF) PASSLIB'
          O,'PGM(IOFSPF) PARM(.DB80*) NEWAPPL(IOF) PASSLIB'
          R,'PGM(IOFSPF) PARM(.DRI*) NEWAPPL(IOF) PASSLIB'
          S,'PGM(IOFSPF) PARM(.S2K*) NEWAPPL(IOF) PASSLIB'
          T,'PGM(IOFSPF) PARM(.KNET*) NEWAPPL(IOF) PASSLIB'
              ' ',' '
              '*','?')
IF (&SPOOLPGM = 'SDSF')
  IF (&ZCMD = 'A')
    &ISFPREFX = 'MAES*'
  IF (&ZCMD = 'C')
    &ISFPREFX = 'CICS*'
  IF (&ZCMD = 'D')
    &ISFPREFX = 'DSN*'
  IF (&ZCMD = 'I')
    &ISFPREFX = 'IRLM*'
  IF (&ZCMD = 'K')
    &ISFPREFX = 'KEY*'
  IF (&ZCMD = 'M')
    &ISFPREFX = 'M204*'
  IF (&ZCMD = 'N')
    &ISFPREFX = 'N*'
  IF (&ZCMD = 'O')
    &ISFPREFX = 'DB80*'
  IF (&ZCMD = 'R')
    &ISFPREFX = 'DRI*'
  IF (&ZCMD = 'S')
    &ISFPREFX = 'S2K*'
  IF (&ZCMD = 'T')
    &ISFPREFX = 'KNET*'
  IF (&ZCMD = ' ')
    .MSG = ISPD140
  VPUT (ISFPREFX) ASIS
  /* Don't use NEWAPPL(ISF) or ISFPREFX will not be passed correctly */
  &ZSEL = 'PGM(ISFISP) PARM(DA)'
VPUT (SPOOLPGM) PROFILE
)END
./ ADD NAME=TRIMACS                                12SEP93 17.34 --
)ATTR
  # AREA(SCRL) EXTEND(ON)
)BODY
%TUTORIAL ---------------------- EDIT MACROS --------------------------
%OPTION  ===>_ZCMD
+
+  The following macros have been implemented by AMXSI-TRI and are avail
+  when using ISPF Edit.  The macros may be selected by name for a more
+  explanation:
+
#MACAREA ---------------------------------------------------------------
)AREA MACAREA
    %BROWSE  +- Invoke ISPF Browse while in edit
    %EOL     +- Set cursor at end of current screen line
    %FX      +- Find ALL 'string' after EXCLUDE ALL
    %FXC     +- Find ALL 'string @ cursor' after EXCLUDE ALL
    %GO      +- Submit job and then invoke IOF
    %JC      +- Build a JOB card sequence at the beginning of a member
    %LISTDSI +- Display data set information in Option 3.2 format
    %MEMLIST +  Display member list of the current PDS
    %OPER    +- Issue canned MVS/JES2 operator commands via SDSF
    %PLUG    +- Plug data into edit buffer at a given column
    %RUN     +- EXECute the CLIST currently being edited
    %SHOWCUT +- Browse the ISPF cut table
    %UNX     +- Show the first n line(s) from each X-cluded block
)PROC
   &ZSEL = TRANS(&ZCMD
                BROWSE,*#BROWSE
                EOL,*#EOL
                FX,*#FX
                FXC,*#FXC
                GO,*#GO
                JC,*#JC
                LISTDSI,*#LISTDSI
                MEMLIST,*#MEMLIST
                OPER,*#OPER
                PLUG,*#PLUG
                RUN,*#RUN
                SHOWCUT,*#SHOWCUT
                UNX,*#UNX
                )
)END
