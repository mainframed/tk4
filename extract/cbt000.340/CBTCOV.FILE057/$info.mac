./ ADD NAME=INFO                                   12SEP93 17.19 --


Sample action bar choice and )INIT code for the display of system inform
derived from a "FIRST" Rexx exec (%ADINIT) before ISR@PRIM is displayed.
using the GETxxxxx Rexx sub-functions and some SYSVARs in %ADINIT to set
variables before VPUTing to the shared pool (so they are available when
Primary Option Menu is finally displayed).  Notice that there are no ACT
commands associated with the pull down choices because this is for displ
purposes only.  If performance is a problem with all the GET's in your
"FIRST" exec, then extract all the control block chasing code from each
and hard code it in the "FIRST" exec or compile the GET's if you have a
compiler.











 EDIT ---- AD.ISPPLIB(ISR@PRIM) - 03.97 ----------------------- COLUMNS
 COMMAND ===>                                                  SCROLL ==
 ****** ***************************** TOP OF DATA **********************
 - - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -    90 LINE(S) NOT DI
 000091 )ABC ABCTEXT('Info')
 000092   PDC PDCTEXT('Sysid:      &SYSID')
 000093   PDC PDCTEXT('CPU Model:  &CPUMDL')
 000094   PDC PDCTEXT('Real:       &REALSTOR')
 000095   PDC PDCTEXT('IPL Date:   &IPLDATE')
 000096   PDC PDCTEXT('IPL Time:   &IPLTIME')
 000097   PDC PDCTEXT('MVS:        &SCPNAME')
 000098   PDC PDCTEXT('JES2:       &JESLEVEL')
 000099   PDC PDCTEXT('TSO/E:      &TSOE')
 000100   PDC PDCTEXT('ISPF:       &ZPDFREL')
 000101   PDC PDCTEXT('DFP:        &DFPLEVEL')
 000102   PDC PDCTEXT('SMS:        &SMSSTAT')
 000103   PDC PDCTEXT('Proc:       &LOGPROC')
 000104   PDC PDCTEXT('Region:     &REGION')
 000105   PDC PDCTEXT('Jobid:      &JESJOBID')
 000106   PDC PDCTEXT('Termid:     &TERMID')
 000107 )ABCINIT ABCTEXT('Info')
 000108   .ZVARS = 'ZPDC'
 000109   &ZPDC = ''
 000110 )ABCPROC ABCTEXT('Info')
 000111   VER (&ZPDC,RANGE,1,20)
 - - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -    24 LINE(S) NOT DI
 000136 )INIT
 - - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  6 LINE(S) NOT DI
 000143   IF (&ZPDFINIT = YES)    /* Code from Rockwell International */
 000144     IF (&Z$SAVE ^= &Z)    /*   "    "     "           "       */
 000145       &ZCMD   = &Z$SAVE   /*   "    "     "           "       */
 000146       .RESP     = ENTER   /*   "    "     "           "       */
 000147       &Z$SAVE = &Z        /*   "    "     "           "       */
 000148   IF (&ZPDFINIT = &Z)     /*   "    "     "           "       */
 000149     &Z$SAVE   = &ZCMD     /*   "    "     "           "       */
 000150     &ZCMD     = 'FIRST'   /*   "    "     "           "       */
 000151     .RESP     = ENTER     /*   "    "     "           "       */
 000152     &ZPDFINIT = YES       /*   "    "     "           "       */
 - - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  5 LINE(S) NOT DI
 000158 )PROC
 - - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  - 19 LINE(S) NOT DI
 000178             FIRST,'CMD(%ADINIT)'
 - - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  - 16 LINE(S) NOT DI
 ****** **************************** BOTTOM OF DATA ********************


 EDIT ---- AD.CLIST(ADINIT) - 01.31 --------------------------- COLUMNS
 COMMAND ===>                                                  SCROLL ==
 ****** ***************************** TOP OF DATA **********************
 000001 /* REXX */
 - - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  1 LINE(S) NOT DI
 000003 sysid    = GETSMFID()        /* SMF system id
 000004 scpname  = GETSCPN()         /* MVS product name
 000005 ipldate  = GETIPLD()         /* IPL date
 000006 ipltime  = GETIPLT()         /* IPL time
 000007 dfplevel = GETDFPL()         /* DFP level
 000008 termid   = GETTRID()         /* Terminal id
 000009 cpumdl   = GETCPUM()         /* CPU model
 000010 realstor = GETREALM()'M'     /* Real memory
 000011 region   = GETREGK()'K'      /* Region
 000012 smsstat  = GETSMS()          /* SMS status
 000013 jesjobid = GETJOBID()        /* JES2 job id
 000014 jeslevel = GETJES2()         /* JES2 product name
 000015 logproc  = SYSVAR("SYSPROC") /* Logon proc
 000016 tsoe = SUBSTR(SYSVAR("SYSTSOE"),1,1)'.'||, /* TSO/E version
 000017        SUBSTR(SYSVAR("SYSTSOE"),3,1)'.'||, /* TSO/E release
 000018        SUBSTR(SYSVAR("SYSTSOE"),4,1)       /* TSO/E mod level
 000019 ADDRESS ISPEXEC
 000020 "ISPEXEC VPUT (SYSID SCPNAME IPLDATE IPLTIME DFPLEVEL TERMID",
 000021               "CPUMDL REALSTOR REGION SMSSTAT JESJOBID JESLEVEL"
 000022               "LOGPROC TSOE) SHARED"
 - - -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  - 36 LINE(S) NOT DI
 ****** **************************** BOTTOM OF DATA ********************


   System  Spool  DBMS  Calendar  Help  Info                 PIE session
 ------------------------------------ .-----------------------------. --
                        ISPF/PDF 3.3  | __ 1. Sysid:      A1VS      |
 OPTION  ===>                         |    2. CPU Model:  5890      |
                                      |    3. Real:       106M      | -
    0  ISPF PARMS  - Specify terminal |    4. IPL Date:   93.102    | -
    1  BROWSE      - Display source d |    5. IPL Time:   17.09.22  | -
    2  EDIT        - Create or change |    6. MVS:        SP 3.1.3  | -
    3  UTILITIES   - Perform utility  |    7. JES2:       SP 3.1.3  | -
    6  COMMAND     - Enter TSO comman |    8. TSO/E:      2.4.0     | -
    7  DIALOG TEST - Perform dialog t |    9. ISPF:       PDF 3.3   | -
    D  XDC         - Interactive debu |   10. DFP:        3.1.1     |
    E  EDIT/BROWSE - Edit/Browse by t |   11. SMS:        OFF       | s
    L  LIBRARIAN   - ADR/The Libraria |   12. Proc:       $LOGDED   |
    M  MENU        - Information Tech |   13. Region:     4096K     | nu
    O  OUTPUT      - Output display u |   14. Jobid:      TSU08791  |
    P  PDS         - Invoke the PDS c |   15. Termid:     AA12P351  |
    T  TUTORIAL    - Display informat '-----------------------------'
    W  WHAT'S NEW  - Historical review of AMXSI-TRI ISPF/PDF extensions
    X  EXIT        - Terminate ISPF using log and list defaults

 Enter END command to terminate ISPF.

ü
./ ADD NAME=ISPCMDS                                12SEP93 17.19 --
1.  Add the following commands to the ISPF command table, ISPCMDS:

VERB      T  ACTION
                DESCRIPTION

CALC      0  SELECT CMD(%COMPUTE &ZPARM)
                REXX CALCULATOR - TSO TIMES (tm)
EBROWSE   2  SELECT CMD(%EB) NEWAPPL(ISR) PASSLIB
                EDIT/BROWSE BY THE NUMBERS
JOBS      2  SELECT PANEL(TRIJOBS) OPT(&ZPARM)
                DISPLAY AMXSI-TRI KEY JOBS
MACROS    0  SELECT PGM(ISPTUTOR) PARM(TRIMACS)
                DISPLAY EXPLANATIONS OF SIMA EDIT MACROS
SPACE     0  SELECT CMD(%DVOL)
                DISPLAY DASD FREE SPACE STATISTICS
SYSLOG    0  SELECT CMD(%SYSLOG)
                DISPLAY SYSLOG DATASETS OR CURRENT SYSLOG
TRAP      0  SELECT CMD(%TRAPCMD &ZPARM)
                TRAP TSO COMMAND/REXX EXECS AND DISPLAY IN ISPF TABLE

2.  Other commands that could be added to ISPCMDS:

VERB      T  ACTION
                DESCRIPTION

CODE      0  SELECT CMD(HELP ABEND OPERAND(S&ZPARM))
                DISPLAY HELP ON SXXX ABEND CODE  (ABEND, CBT File 134)
IOF       0  SELECT PGM(IOFSPF) PARM(&ZPARM) NEWAPPL(IOF) PASSLIB
                JES2 INPUT OUTPUT FACILITY (c)
MSG       0  SELECT CMD(SEND &ZPARM)
                TSO SEND COMMAND
OFF       0  SELECT PGM(ISPOPI) PARM(OFF) NOFUNC
                PANELID OFF
ON        0  SELECT PGM(ISPOPI) PARM(ON) NOFUNC
                PANELID ON
PRIM      0  SELECT PANEL(ISR@PRIM) NEWAPPL(ISR) OPT(&ZPARM) PASSLIB
                HOLD AT CURRENT SCREEN AND DISPLAY PRIMARY MENU
SDSF      0  SELECT PGM(ISFISP) PARM(&ZPARM) NEWAPPL(ISF) PASSLIB
                JES2 SYSTEM DISPLAY AND SEARCH FACILITY (c)
TEST      0  SELECT PGM(ISPYXDR) PARM(&ZPARM)
                INVOKE ISPF 3.3 DIALOG TEST (ISRYXDR in ISPF 2.3)
USERIDS   4  SELECT CMD(%BROWZE DATASET(TRCASG.AS7USELG) PANEL(CUSTOM))
                DISPLAY TSO USERID/NAME LIST

3.  Examples of use:

COMMAND ===> test;1                Invoke Dialog Test FUNCTIONS
COMMAND ===> test;2                Invoke Dialog Test PANELS
COMMAND ===> test isr;3            Invoke Dialog Test VARIABLES (Applid:
COMMAND ===> test;1;:isr@test      Invoke Dialog Test FUNCTIONS - ISR@TE
COMMAND ===> test;2;:trijobs       Invoke Dialog Test PANELS - Display T
COMMAND ===> test;3;;l zjdate      Invoke Dialog Test VARIABLES - Locate
COMMAND ===> iof                   Invoke IOF for your jobs
COMMAND ===> iof . tri*            Invoke IOF for TRI* jobs
COMMAND ===> sdsf                  Invoke SDSF Primary Option Menu
COMMAND ===> sdsf /s xdccdf        Invoke SDSF and start system task
COMMAND ===> sdsf da otsu          Invoke SDSF and display active tso us
COMMAND ===> sdsf log              Invoke SDSF and display system log
COMMAND ===> prim                  Invoke ISPF Primary Option Menu
COMMAND ===> prim 3.4              Invoke ISPF Option 3.4
COMMAND ===> code 106-0f           Invoke TSO HELP ABEND on code 106-0F
COMMAND ===> msg '1,2,3...' u(*)   Invoke TSO SEND to send message to us
COMMAND ===> user                  Invoke ISPF BROWSE on TSO userid list
ü
./ ADD NAME=XCHANGE                                12SEP93 17.19 --


DATE      DESCRIPTION OF CHANGE

**-**-**  Miscellaneous fixes.  I make cosmetic or minor changes to the
          code on a regular basis (see !WARRAN.TEE for accuracy).
          Check the file dates to see what has changed or run a compare
          against the last SHARE SSD-PC version.

07-16-93  EOL edit macro - Set cursor at end of current screen line.
          This works like most PC editors do when you press the "End"
          scroll key.  Handy when "adding-on" to JCL or text.  At the
          last SHARE, someone asked if there was a way to do this and
          the answer was no.  Assign EOL to a PF key to make this work.

06-23-93  Update to EB clist dialog.  This version invokes Librarian ELI
          EDIT and BROWSE instead of the older LIBEDIT and LIBROWSE.  If
          member name is a wildcard pattern or null, then an ELIPS LIST
          command is generated.

06-14-93  Update to BROWSE edit macro.  If the member to be browsed does
          not exist, then it is assumed to be a 2nd level DSN qualifier.

05-21-93  FX and PLUG edit macros - REXX versions for SPF/PC Version 3.0

05-11-93  Removal of COLS edit macro.  I found out that :COLS in a PF ke
          definition is all you have to specify.  The cursor stays put a
          you get the columns line above the cursor.

03-24-93  GETxxxxx - REXX sub-functions to extract various items out of
          control blocks for subsequent display on an action bar panel (
          INFO.ABC for examples).  This code was derived from Joe Millar
          Paul Waterhouse's Rexx examples on the NaSCOM bulletin board a
          the SHOW.ZIP file on the SHARE SSD-PC from Rockwell Internatio
          SHOW extracts more information from control blocks and is writ
          in assembler.

02-24-93  Converted the SORTWORK dialog from clist to REXX.  Solved some
          arithmetic overflow problems and used SyncSort Release 3.2
          intermediate disk space formula.

 1-08-93  EB - Clist dialog to invoke either ISPF EDIT/BROWSE, Librarian
          Edit/Browse, or the PDS command (PDS, CBT File 182) on a
          menu of 19 datasets.  Invoked with the ISPF EBrowse command.

12-29-92  DVOL - Clist dialog that front-ends the DVOL command (located
          CBT mods tape, File 296) to display DASD free space stats in a
          ISPF table.  Invoked with the ISPF SPACE command.  When using
          SHORT display option, you can SORT table by volser or total fr
          tracks.  Primary sort key is always device type.

12-18-92  COMPUTE - REXX dialog to calculate Rexx arithmetic expressions
          Invoked with ISPF CALC command.  Uses a pop-up window to promp
          if no expression is given with command.  A TSO Times (tm) $250
          contest winner.

12-18-29  MVS basica program - Pseudo-display of the ISPF Primary Option
          Use PF3 to exit.  Easy to customize to your own primary menu d
          with the help of any BASIC manual.  Useful when fielding those
          winded telephone calls or when you are taking a trip down the
          and don't want to (or can't) keep pressing the Enter key to st
          logged on.  Writes a CR to the COM1 (9600 baud) port every 15
          or so.  Invoke from your communications program break or shell
          If security is a problem with this, then don't use it or restr
          to the all-knowing and all-powerful SYSPROG populus.

12-14-92  UNX edit macro - Show the first n line(s) from each X-cluded b
          Comes in handy as a companion macro to 'FX' and 'FXC' to see
          continuation lines.

11-30-92  Update to COLS edit macro to restore the cursor position to
          where is was before the PF key (cols;:cols;cols setcsrp) was
          pressed.

11-23-92  Add ISPF panel TRIJOBS to display "key" jobs with either IOF
          or SDSF.  Invoked with ISPF JOBS command.  Easily modified
          to your local naming conventions.

11-05-92  BROWSE edit macro - Another version of browse while in edit.
          This one can be invoked 3 different ways and supports member
          name patterns.

11-03-92  Add ISPF tutorial panel TRIMACS which can be invoked by the
          ISPF command MACROS for edit macro help.

10-06-92  Update to DSK33XX clist to calculate total volumes based on
          double density 3380 and 3390 models.

 9-09-92  PLUG edit macro - Plug data into edit buffer at a given column
          This is handy when you have a need to plug a prefix (e.g., a
          command) or suffix (e.g., a terminator) on a number of data li
          Before PLUG this usually involved inserting a temporary data
          line and then using the M(ove) and O(verlay) line commands.
          PLUG works similar to the Rexx OVERLAY function in that it
          replaces characters regardless of the their value.

 9-09-92  Removal of CONT edit macro.  Use "PLUG X 72" instead.

 6-26-92  TRAPCMD - REXX dialog to trap TSO/REXX command line output and
          display in an ISPF table.  Especially useful to invoke REXX co
          that produces mucho output with the non-scrollable SAY verb.
          Output display is limited to 80 bytes.

 5-19-92  Add OTHER PARAMETERS fields to Job Card Macro panel in order
          to allow users to enter whatever additional JOB card parameter
          they need which are not defined in the panel.  Code as you
          would on the JOB statement (trailing commas will be plugged in
          if missing).

 4-30-92  FXC edit macro - FIND ALL after EXCLUDE ALL on the word at the
          cursor position.  Put in a PF key for one-key operation.

 4-29-92  Update to FX edit macro to accept picture, hex, character, and
          text strings as arguments.  Also, &variables as arguments need
          only 1 ampersand coded instead of 2.

 3-23-92  COLS edit macro - Display columns line above cursor position.
          Have to put in PF key (cols;:cols) to make work.

 2-12-92  Add PERCENT USED PER TRACK field to disk space calculation
          panel.  Updated panel edits on block size and key length.

11-01-91  MEMLIST edit macro - Display member list in =MSG> and =NOTE=
          lines.

 9-23-91  Update to SUPERC clist to strip off (*) from OTHER DSNAME fiel
          value if entered on panel.

ü
./ ADD NAME=XWARRAN                                12SEP93 17.19 --

         SSSSSSSSS  III           MMMMM      MMMMM     AAAAAA
        SSSSSSSSS   III          MMMMMM     MMMMMM    AAAAAAAA
       SSS          III         MMM MMM    MMM MMM   AAA    AAA
        SSS         III        MMM  MMM   MMM  MMM  AAA      AAA
          SSS       III       MMM   MMM  MMM   MMM  AAAAAAAAAAAA
            SSS     III      MMM    MMM MMM    MMM  AAAAAAAAAAAA
              SSS   III     MMM     MMMMMM     MMM  AAA      AAA
               SSS  III    MMM      MMMMM      MMM  AAA      AAA
      SSS    SSSS   III   MMM       MMMM       MMM  AAA      AAA
      SSSSSSSSSS    III  MMM        MMM        MMM  AAA      AAA



                        D I S C L A I M E R


 The dialogs and macros on this floppy have been used successfully and
 to the best of our knowledge they are operational, however the only
 warranty made to the accuracy of the programs or related material is
 that they will function almost always correctly 98.9% of the time,
 which is 1% better than Rush Limbaugh.

 No responsibility is assumed for any modification directly or
 indirectly caused by the use of these dialogs.  It is the users
 responsibility to evaluate the usefulness of the material supplied.

 We do not guarantee to keep any material provided up to date nor do we
 guarantee to provide any corrections or extensions described by the
 user or corrections or extensions made in the future.

