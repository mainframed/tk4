         MACRO
         #UCS  &IMAGE
         LCLC  &CHR(16),&HEXSTR
         LCLC  &CHAR,&C,&H
         LCLA  &LINENO,&CHARNO,&LIMIT
         LCLA  &I,&J
         LCLA  &STRNGNO,&POSITON,&COUNT,&CHARS
         LCLB  &ASB(256)
         MNOTE *,'      #UCS       VERSION 001 04/15/77  04/15/77  GPW'
.**********************************************************************
.*                                                                    *
.* NAME        #UCS                                                   *
.*                                                                    *
.* FUNCTION    GENERATE UCS TRAIN IMAGES FOR 1403 AND 3211 PRINTER.   *
.*             ALSO GENERATE RESERVED AND ASSOCIATIVE BYTES FOR       *
.*             3211 PRINTER IMAGES.                                   *
.*                                                                    *
.* DESCRIPTION THE GRAPHICS ON THE PRINT TRAIN ARE SPECIFIED IN       *
.*             CHARACTER FORMAT AS OPERANDS OF THE #UCS MACRO.        *
.*             DC STATEMENTS TO GENERATE THE HEXADECIMAL CODES        *
.*             WILL BE GENERATED.  A COMMENT STATEMENT SHOWING        *
.*             THE CORRESPONDING CHARACTER CODES WILL BE DISPLAYED    *
.*             ABOVE THE HEX CODES.                                   *
.*                                                                    *
.*             IF THE CSECT NAME BEGINS WITH UCS2, THE RESERVED       *
.*             AND ASSOCIATIVE BYTES REQUIRED FOR 3211 IMAGES         *
.*             WILL ALSO BE GENERATED.                                *
.*                                                                    *
.*             THE DEFAULT INDICATOR BYTE, NUMBER OF LINES FOR        *
.*             VERIFICATION, AND CHARACTERS PER LINE                  *
.*             ARE NOT GENERATED BY THE MACRO.                        *
.*                                                                    *
.*             #UCS DOES NOT SUPPORT DUALLING THE A11 AND H11         *
.*             PRINT TRAINS.                                          *
.*                                                                    *
.* REFERENCES  GA24-3543  IBM 3211 PRINTER, 3216 INTERCHANGABLE       *
.*                        PRINT CARTRIDGE, AND 3811 PRINTER           *
.*                        CONTROL UNIT COMPONENT DESCRIPTION          *
.*                        AND OPERATORS GUIDE.                        *
.*                                                                    *
.*             GC26-3830  OS/VS2 SYSTEM PROGRAMMING LIBRARY:          *
.*                        DATA MANAGMENT                              *
.*                                                                    *
.* ENVIRONMENT OS/VS2 ASSEMBLER (XF)                                  *
.*                                                                    *
.* EXAMPLE     UCS1EXAM CSECT                                         *
.*                      DC    X'80'       DEFAULT IMAGE               *
.*                      DC    F'04'       4 LINES FOR VERIFY          *
.*                      DC    F'20'       20 CHARACTERS FOR LINE 1    *
.*                      DC    F'20'       20 CHARACTERS FOR LINE 2    *
.*                      DC    F'20'       20 CHARACTERS FOR LINE 3    *
.*                      DC    F'20'       20 CHARACTERS FOR LINE 4    *
.*                     #UCS   'ABCDEFGHIJKLMNOPQRSTUVWXYZ&&01234',    *
.*                            'ABCDEFGHIJKLMNOPQRSTUVWXYZ''56789',    *
.*                            'ABCDEFGHIJKLMNOPQRSTUVWZYZ&&@#$*.'     *
.*                      END                                           *
.*                                               GORDON P. WEST 04/77 *
.**********************************************************************
         ACTR  8192                    RESET LOOP COUNTER
&CHR(01) SETC  '
&CHR(02) SETC  '≤
∑∏∫ª'           10-1F
&CHR(03) SETC  'Ω¿¡¬
√ƒ≈∆«'           20-2F
&CHR(04) SETC  '»…ÀÃÕŒ–—“”¸'           30-3F
&CHR(05) SETC  ' ‘ÉÑÖ†’Üá§÷.<(+◊'           40-4F
&CHR(06) SETC  '&&Çàâä°åãçÿ!$*);^'(2,16)    50-5F
&CHR(07) SETC  '-/Ÿé€‹›èÄ•|,%_>?'           60-6F
&CHR(08) SETC  'ﬁêﬂ‡‚„‰ÂÊ`:#@''="'          70-7F
&CHR(09) SETC  'ÁabcdefghiÆØËÈÍÏ'           80-8F
&CHR(10) SETC  'jklmnopqrÒÚëÛíÙ'           90-9F
&CHR(11) SETC  'ı~stuvwxyz≠®ˆ[˜¯'           A0-AF
&CHR(12) SETC  'õúùûüµ∂¨´π™≥º]æø'           B0-BF
&CHR(13) SETC  '{ABCDEFGHI ìîï¢œ'           C0-CF
&CHR(14) SETC  '}JKLMNOPQR⁄ñÅó£ò'           D0-DF
&CHR(15) SETC  '\·STUVWXYZ˝ÎôÌÓÔ'           E0-EF
&CHR(16) SETC  '0123456789˛˚ö˘˙ˇ'           F0-FF
&HEXSTR  SETC  '0123456789ABCDEF'      HEXADECIMAL CHARACTERS
&LIMIT   SETA  N'&SYSLIST              NUMBER OF OPERANDS
*--------TRAIN IMAGE
*
.*-------PROCESS IMAGE LINE
.NEXTLIN ANOP
&LINENO  SETA  &LINENO+1               INCREMENT LINE NUMBER
         MNOTE *,'-------ARRAY &LINENO'
&CHARNO  SETA  2                       SKIP OPENING '
&CHARS   SETA  K'&SYSLIST(&LINENO)     NUMBER OF CHARS IN OPERAND
.*-------PROCESS CHARACTERS
.NEXTCHR ANOP
&CHAR    SETC  '&SYSLIST(&LINENO)'(&CHARNO,1)   EXTRACT 1 CHARACTER
.*-------FIND STRING WHICH CONTAINS CHARACTER
&STRNGNO SETA  16                      SEARCH BACKWARDS FOR EFFICIENCY
.GETLINE AIF   ('&CHAR' GE '&CHR(&STRNGNO)'(1,1)).GOTLINE
&STRNGNO SETA  &STRNGNO-1
         AGO   .GETLINE
.*-------FIND CHARACTER IN STRING
.GOTLINE ANOP
&POSITON SETA  1
.GETCHAR AIF   ('&CHAR' EQ '&CHR(&STRNGNO)'(&POSITON,1)).GOTCHAR
&POSITON SETA  &POSITON+1
         AGO   .GETCHAR
.*-------ADD CHARACTER AND HEX TO LINE VARIABLES
.GOTCHAR ANOP
&C       SETC  '&C'.' &CHAR'
&H       SETC  '&H'.'&HEXSTR'(&STRNGNO,1).'&HEXSTR'(&POSITON,1)
.*-------FLAG ASSOCIATIVE BIT
&I       SETA  16*&STRNGNO+&POSITON-16
&ASB(&I) SETB 1
.*-------25 GRAPHICS PER DC
&COUNT   SETA  &COUNT+1
         AIF   (&COUNT LT 25).INCRCHR
         MNOTE *,'               &C'
         DC    X'&H'
&COUNT   SETA  0                       RESET COUNT
&C       SETC  ''                      RESET CHARACTER STRING
&H       SETC  ''                      RESET HEX STRING
.INCRCHR ANOP
&CHARNO  SETA  &CHARNO+1               BUMP TO NEXT CHARACTER
         AIF   (&CHARNO EQ &CHARS).INCRLIN     SEE IF LINE COMPLETE
         AIF   ('&CHAR' EQ '&&'(1,1)).INCR2    SKIP PAST SECOND &
         AIF   ('&CHAR' NE '''').NEXTCHR       SKIP PAST SECOND '
&C       SETC  '&C'.''''               ADD ANOTHER ' TO CHAR STRING
.INCR2   ANOP
&CHARNO  SETA  &CHARNO+1               BUMP TO NEXT CHARACTER
         AGO   .NEXTCHR
.INCRLIN AIF   ('&C' EQ '').INCR3      SEE IF NOTHING TO GENERATE
         MNOTE *,'               &C'
         DC    X'&H'
&COUNT   SETA  0                       RESET COUNT
&C       SETC  ''                      RESET CHARACTER STRING
&H       SETC  ''                      RESET HEX STRING
.INCR3   ANOP
*
         AIF   (&LINENO LT &LIMIT).NEXTLIN
.*-------TEST FOR 3211
         AIF   ('&SYSECT'(1,4) NE 'UCS2').DONE
.*-------GENERATE ASSOCIATIVE BYTES
&ASB(1)  SETB  1                       NULL
&ASB(65) SETB  1                       BLANK
&I       SETA  1                       SET COUNTER
*--------RESERVED BYTES
         DC    XL15'00'
*--------ASSOCIATIVE BYTES
.NEXTASL ANOP
&COUNT   SETA  0                       SET COUNTER
&H       SETC  ''                      RESET HEX CHARACTER STRING
.NEXTASB ANOP
&J       SETA  8*&ASB(&I)+4*&ASB(&I+64)+2*&ASB(&I+128)+&ASB(&I+192)+1
&H       SETC  '&H'.'&HEXSTR'(&J,1).'0'
&I       SETA  &I+1
&COUNT   SETA  &COUNT+1
         AIF   (&COUNT LT 16).NEXTASB
         DC    X'&H'
         AIF   (&I LT 64).NEXTASL
*--------RESERVED BYTE
         DC    X'00'
.DONE    MEND
