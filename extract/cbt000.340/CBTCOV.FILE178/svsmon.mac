*          DATA SET GU920000   AT LEVEL 005 AS OF 06/28/78
*          DATA SET GU920000   AT LEVEL 004 AS OF 06/22/78
         TITLE 'GU920000 SVSMON - OS REAL TIME MONITOR FOR SVS'
*              AUTHOR.   DONALD S. HIGGINS.
*                        FLORIDA POWER CORPORATION
*                        P. O. BOX 14042  B-3
*                        ST. PETERSBURG, FLORIDA 33733
*                        (813)866-4145
*              DATE.     05/07/75.
*              REMARKS.  MONITOR OS IN REAL TIME FOR WAITS.
*
*                        REV1 06/04/75 ADD WTOR WAITS SCAN
*
*
*                        REV2 06/11/75 ADD UCB SCAN FOR MOUNTS
*
*                        REV3 07/02/75 ADD TCB SCAN FOR ERRORS
*
*                        REV4 07/22/75 ADD CPU AND PAGING RATE INFO
*
*                        REV6 01/16/75 ADD ENQ/DEQ TO CONTROL JOBS.
*
*                        REV7 06/22/77 CHANGE ENQ/DEQ LIMITS.
*
*              PARM.
*                   1.   OPTIONAL PARM FIELD AS FOLLOWS
*
*                        TTT - 3 DIGIT MAXIMUM INTERVALS
*                              (000 INDICATES NO LIMIT)
*                        III - 3 DIGIT INTERVAL IN SECONDS
*                          C - CONSOLE OUTPUT (0-NO, 1-YES)
*                          M - MOUNT MESSAGES (0-NO, 1-9 FREQ)
*                          W - WTOR  MESSAGES )0-NO, 1-9 FREQ)
*                          E - ENQ   MESSAGES (0-NO, 1-9 FREQ)
*                          T - TCB   MESSAGES (0-NO, 1-9 FREQ)
*                          S - K,C,P MESSAGES (0-NO, 1-9 FREQ)
*
*                        DEFAULT PARM  '004030111111'
*              FILES.
*                   1.   OPTIONAL SYSPRINT MESSAGE FILE. (IF DD IS
*                        PRESENT, ALL MESSAGES WILL BE TIME STAMPED
*                        AND PUT TO THIS FILE.) BLOCKSIZE IS
*                        OPTIONAL AND WILL DEFAULT TO 121.
*                   2.   OPTIONAL SYSIN CONTROL INPUT FILE.
*
*                        A.  WTOR MESSAGE SURPRESSION COMMANDS.
*                            COLUMN DESCRIPTION
*
*                             01-02 '01' WTOR COMMAND
*
*                             03-05  OFFSET INTO WTOR MESSAGE
*                             06-08  LENGTH OF TEXT TO COMPARE
*                             09-11  OFFSET INTO WTOR FOR MVC
*                             12-14  LENGTH OF TEXT TO MOVE
*                                    FROM WTOR TO WWW016 MSG
*                                    OR ZERO
*                             15-17  OFFSET INTO WWW016I FOR MVC
*                             18-80  WTOR TEXT (IF A MATCH IS
*                                    FOUND, THE WTOR MSG IS
*                                    SURPRESSED)
*
*                             01-02 '02' RESOURCE COMMAND
*
*                             03-10 MAJOR RESOURCE NAME TO IGNORE
*
*                   3.   OPTIONAL SYSABEND DUMP FILE.  IF THIS
*                        FILE IS PRESENT, NO ERROR RECOVERY IS
*                        ATTEMPTED.
*
*              REFERENCES.
*                   1.   FE HANDBOOK S229-3169-3
*                   2.   OS/VS2 SUPR PLM SY27-7244-0 DIAG. 3.9 PG 93
*                   3.   FISCHE 5742-SC1C5 IEAVENQ1 IGC056
*                   4.   A SYSTEM DUMP HUNG IN ALLOCATION.
*                   5.   OLD OS SUPR. SERV. DISCUSSION OF ENQ/DEQ.
*                   6.   OS/VS2 JOB MGT. PLM SY28-0620-0 PG 566+597
*                   7.   OS/VS2-R2 HANDBOOK GC28-0632-1
*                   8.   SYS. PGMR. GUIDE GC28-6550-9
*                  10.   OS/VS2-R1 SYS. DATA AREAS SY28-0606-0
*                  11.   FISCHE FOR OS SCP 20.1  360S-CI-505
*                  12.   FISCHE FOR OS SCP 21.7  360S-CI-505
*
*              INSTALLATION.
*
*                   1.   ASSEMBLE THIS PROGRAM USING OS/VS ASSEMBLER
*                        IFOX00 ON ANY 360 OR 370 OS SYSTEM.
*                   2.   LINK OBJECT PROGRAM INTO SYS1.LINKLIB
*                        OR ANY USER LINKLIST LIBRARY WITH A MEMBER
*                        NAME OF SVSMON.
*                   3.   ADD MEMBER TO SYS1.PROCLIB NAMED SVSMON
*                        CONTAINING THE FOLLOWING CARD
*
* //SVSMON EXEC PGM=SVSMON,PARM='000060111111',TIME=1440,REGION=8K
*
*                   4.   ISSUE START COMMAND FROM CONSOLE AS FOLLOWS
*
*                        S SVSMON
*
*                   5.   ISSUE STOP COMMAND FROM CONSOLE WHEN DESIRED
*
*                        P SVSMON
*
*                   6.   TO RUN PROGRAM AS BATCH JOB, JUST PLACE
*                        ABOVE EXEC CARD BEHIND VALID JOB CARD AND RUN.
*
*              NOTES.
*
*                   1.   IF A SVSMON FUNCTION DEVELOPS A SOLID PROGRAM
*                        CHECK, INFINITE LOOP, OR ABEND FOR ANY
*                        REASON, AN ATTEMPT IS MADE TO DISABLE JUST
*                        THE FAILING FUNCTION AND CONTINUE.
         TITLE 'SVSMON MESSAGES'
*              MESSAGES.
*
* WWM002I SVSMON NOW RUNNING UNDER OS/XXX REL XX
* WWM003I SVSMON TERMINATED CALL (813) 866-4145
* WWM004I SVSMON ENDED
* WWM005I SVSMON MISSING OR INVALID PARM
* WWM006I SVSMON INTERVAL IS XXX SECONDS
* WWM007I SVSMON PGM-ERR TCBCMP XXXXXXXX REL.PSW XXXXXXXXXXXXXXXX
* WWM008I
* WWM009I SVSMON FUNCTION XXXXXXXX SURPRESSED
* WWM010I
* WWM011I MOUNT XXXXXX ON XXX
* WWM012I AVR MOUNT ON XXX XXX
* WWM013I (OUTSTANDING WTOR MESSAGE)
* WWM014I XXXXXXXX WAITING FOR XXXXXXXX TO FREE MMMMMMMM NNNNNNNN
* WWM015I XXXXXXXX IN FORCED WAIT DUE TO XXXXXXXX
* WWW016I XXXXXK CPU= XX.XX% PAGES/SEC= XX
* WWM017I XXXXXXXX HAS ABENDED TCBCMP XXXXXXXX
         TITLE 'MACROS'
         MACRO
         TCBW  &OFF,&MASK,&MSG
         IF    (TM,&OFF.(R2),&MASK,O)   TCB NON-DISP BIT TESTS
               MVC  DTCBWAIT,=CL20&MSG
               PM   DISPLAYT
               PEXIT
         FI
         MEND
         MACRO
         MSG   &NO,&T
         LCLA  &AN
         LCLC  &CN
&AN      SETA  &NO+199
&CN      SETC  '&AN'(2,2)
W&CN.END EQU   *
W&CN.DCS DC    X'1000' MCS DESCRIPTOR CODES  JOB PLM 606
W&CN.RCS DC    X'0000' MCS ROUTING CODES     JOB PLM 606
&AN      SETA  &AN+1
&CN      SETC  '&AN'(2,2)
W&CN     DS    0F
         DC    AL2(W&CN.END-*),X'8000' LENGTH AND MCS FLAGS
         DC    C'WWW0&CN.&T '
         MEND
         TITLE 'MAINLINE'
         PRINT NOGEN
SVSMON  SUBENTRY BASES=(R13,R12)
         STM   R12,R13,PGMBASE
         ST    R1,APARM
         FINDDD =CL8'SYSABEND'
         IF    (LTR,R1,R1,Z)
               STAE  PGMABEND,CT,ASYNCH=YES
               SPIE  PGMCHK,((1,15))
         FI
         PM    OPTIONS
         PM    OSMODS
         DO    WHILE,(CLI,EOJ,FALSE,EQ)
               PM   SCANS
               PM   WAIT
         OD
         LA    R1,W04
         PM    WTO
         SUBEXIT
         TITLE 'PROGRAM ABEND RECOVERY ROUTINES'
PGMABEND TAG
         USING *,R15
         STM   R0,R15,PGMREGS
         LM    R12,R13,PGMBASE
         DROP  R15
         PM    PGMERR
         IF    (OC,PGM,PGM,NZ)
               LA   R0,ABRETRY
               LA   R15,4
               LM   R1,R14,PGMREGS+4
               BR   R14
         FI
         LA    R1,W03
         PM    WTO
         LA    R15,0
         LM    R0,R14,PGMREGS
         BR    R14
ABRETRY  TAG
         USING *,R15
         LM    R12,R13,PGMBASE
         DROP  R15
         IF    (LTR,R0,R0,Z)
               LA   R0,104
               FREEMAIN R,LV=(0),A=(1)
         FI
         L     R1,PGM
         PM    SURPRESS
         STAE  PGMABEND,CT,ASYNCH=YES
         SPIE  PGMCHK,((1,15))
         L     R14,PGM
         SH    R14,=H'4'
         BR    R14
         TITLE 'PROGRAM CHECK RECOVERY ROUTINES'
PGMCHK   TAG
         USING *,R15
         STM   R0,R15,PGMREGS
         MVC   PGMPSW,4(R1)
         MVC   9(3,R1),ACKRETRY+1
         LM    R12,R13,PGMBASE
         DROP  R15
         PM    PGMERR
         LM    R0,R15,PGMREGS
         BR    R14
ACKRETRY DC    A(CKRETRY)
CKRETRY  TAG
         BALR  R15,0
         USING *,R15
         LM    R12,R13,PGMBASE
         DROP  R15
         IF    (OC,PGM,PGM,NZ)
               IF   (SP,PCHECKS,=P'1',M)
                    L    R1,PGM
                    PM   SURPRESS
                    L    R14,PGM
                    SH   R14,=H'4'
                    BR   R14
               FI
               IF   (CLI,LOOP,TRUE,EQ)
                    L    R1,SAVEAOP
                    MVC  0(1,R1),SAVEOP
                    MVI  LOOP,FALSE
                    STIMER TASK,TIMEREXT,BINTVL=MAXCPU
               FI
               L    R14,PGM
               BR   R14
         FI
         LA    R1,W03
         PM    WTO
         LH    R2,PGMPSW+2
         ABEND (2),DUMP
PGMBASE  DC    2F'0'
PCHECKS  DC    PL2'0'
PGMCMP   DC    F'0'
PGMPSW   DC    D'0'
PGMREGS  DC    16F'0'
PGM      DC    A(0)
         TITLE 'PGMERR - DISPLAY TCBCMP AND RELATIVE SVSMON PSW'
PGMERR   PENTRY
         LOADTCB R2
         MVC   PGMCMP,TCBCMP(R2)
         UNPK  DWORK(9),PGMCMP(5)
         TR    DWORK(8),HEX-240
         MVC   DCMP,DWORK
         L     R3,TCBRBP(R2)
         L     R4,RBLINK(R3)
         LA    R4,0(R4)
         DO    WHILE,(CLR,R2,R4,NE)
               LR   R3,R4
               L    R4,RBLINK(R3)
               LA   R4,0(R4)
         OD
         IF    (CLC,RBPSW+4(4,R3),=A(PGMCHK),NE)
               MVC   PGMPSW,RBPSW(R3)
         FI
         UNPK  DWORK(9),PGMPSW(5)
         TR    DWORK(8),HEX-240
         MVC   DPSW,DWORK
         MVC   DPSW(8),DWORK
         L     R1,PGMPSW+4
         S     R1,=A(SVSMON)
         ST    R1,PGMPSW+4
         UNPK  DWORK(9),PGMPSW+4(5)
         TR    DWORK(8),HEX-240
         MVC   DPSW+8(8),DWORK
         LA    R1,W07
         PM    WTO
         PEXIT
         TITLE 'SURPRESS FUNCTION WHICH HAS FAILED'
SURPRESS PENTRY
         IF    (CLI,0(R1),0,EQ)
               PEXIT
         FI
         MVI   0(R1),0
         SH    R1,=H'12'
         MVC   DFUN,0(R1)
         LA    R1,W09
         PM    WTO
         IF    (SP,FACTIVE,=P'1',NP)
               LA   R1,W03
               PM   WTO
               MVI  EOJ,TRUE
         FI
         PEXIT
FACTIVE  DC    PL2'5' CURRENT ACTIVE FUNCTIONS
         TITLE 'WTO - WRITE TO OPERATOR'
WTO      PENTRY
         IF    (SP,PMAXWTO,=P'1',NP)
               PEXIT
         FI
         IF     (CLI,PRINT,TRUE,EQ)
                PM   PUT
         FI
         IF    (CLI,CONSOLE,TRUE,EQ),OR,(CLI,PRINT,TRUE,NE)
                WTO  MF=(E,(1))
         FI
         PEXIT
PUT      PENTRY
         STM   R1,R2,PUTSAVE
         LH     R2,0(R1)
         SH     R2,=H'5'
         IF     (CH,R2,=AL2(L'PUTMSG-1),H)
                LA    R2,L'PUTMSG-1
         FI
         EX     R2,PUTMVC
         DTIME  PUTTIME
         PUT    SYSPRINT,PUTLINE
         MVC    PUTLINE+1(120),PUTLINE
         LM    R1,R2,PUTSAVE
         PEXIT
PUTSAVE  DC    2F'0'
PUTMVC   MVC    PUTMSG(0),4(R1)
PUTLINE  DS     0CL121
         DC     C' '
PUTTIME   DC    CL22' ',C' '
PUTMSG   DC     CL97' '
         TITLE  'OSMODS - ADAPT TO CURRENT OS ENVIRONMENT'
OSMODS   PENTRY
         L     R2,16
         SH    R2,=H'4'
         MVC   DREL,0(R2)
         AH    R2,=H'4'
         IF    (TM,CVTDCB(R2),MFT,O)
               IF   (TM,CVTDCB(R2),DAT,O)
                    MVC  DOSTYPE,=C'VS1'
               ELSE
                    MVC  DOSTYPE,=C'MFT'
               FI
         ELSE
               IF   (TM,CVTDCB(R2),MVT,O)
                    IF   (TM,CVTDCB(R2),DAT,O)
                         MVC  DOSTYPE,=C'VS2'
                         IF   (TM,CVTDCB(R2),MVS,O)
                              LA   R1,SCANTCB
                              PM   SURPRESS
                              LA   R1,SYSRATES
                              PM   SURPRESS
                         FI
                    ELSE
                         MVC  DOSTYPE,=C'MVT'
                    FI
               ELSE
                    LA   R1,W03
                    PM   WTO
                    MVI  EOJ,TRUE
                    PEXIT
               FI
         FI
         LA    R1,W02
         PM    WTO
         PEXIT
MVT      EQU   X'10'
MFT      EQU   X'20'
DAT      EQU   X'02'
MVS      EQU   X'01'
         TITLE 'OPTIONS - PARM, SYSIN, SYSPRINT'
OPTIONS  PENTRY
         FINDDD =CL8'SYSPRINT'
         IF     (LTR,R1,R1,NZ)
                OPEN (SYSPRINT,(OUTPUT))
                MVI  PRINT,TRUE
         FI
         FINDDD =CL8'SYSIN'
         IF    (LTR,R1,R1,NZ)
               OPEN (SYSIN)
               PM   GETSYSIN
               DO   WHILE,(LTR,R1,R1,NZ)
                    PM   OPTSYSIN
                    PM   GETSYSIN
               OD
               CLOSE (SYSIN)
         FI
         L     R1,APARM
         L     R1,0(R1)
         LH    R2,0(R1)
         LA    R3,2(R1)
         USING PO,R3
         IF    (CH,R2,=AL2(LPO),NE),OR,(TRT,PO(LPO),ALPHANUM,NE)
               LA   R3,DEFAULTS
         FI
         PACK  PMAX,POMAX
         ABSP  PMAX
         PACK  PWORK,POINT
         ABSP  PWORK
         IF    (CLI,POCON,C'0',EQ)
               MVI  CONSOLE,FALSE
         FI
         LA    R4,SCANLIST
         USING SCB,R4
         LA    R5,POMOUNT
         DO    WHILE,(CLI,SCB,X'FF',NE)
               ZAP  SCBCOUNT,=P'1'
               PACK SCBFREQ,0(1,R5)
               AAI  R5,1
               LA   R4,LSCB(R4)
         OD
         DROP  R4
         LA    R1,W01
         PM    WTO
         IF    (CP,PWORK,=P'1',L)
               ZAP  PWORK,=P'30'
               LA   R1,W05
               PM   WTO
         FI
         EDIT  TO=DINT,FROM=PWORK+6,MASK=' ZZZ'
         CVB   R0,PWORK
         MH    R0,=H'100'
         ST    R0,INTERVAL
         LA    R1,W06
         PM    WTO
         PEXIT
APARM    DC    A(0)
DEFAULTS DC    C'004000111111'
         TITLE 'SYSIN OPTION ROUTINES'
GETSYSIN PENTRY
         GET   SYSIN
         PEXIT
EOFRTN   ZR    R1
         PEXIT
OPTSYSIN PENTRY
         LR    R11,R1
         USING CO,R11
         IF    (CLC,COID,=C'01',EQ)
               OI   PWORK+7,X'0F'
               PACK PWORK,COOFF1
               CVB  R2,PWORK
               PACK PWORK,COLNG1
               OI   PWORK+7,X'0F'
               CVB  R3,PWORK
               PACK PWORK,COOFF2
               OI   PWORK+7,X'0F'
               CVB  R4,PWORK
               PACK PWORK,COLNG2
               OI   PWORK+7,X'0F'
               CVB  R5,PWORK
               PACK PWORK,COOFF3
               OI   PWORK+7,X'0F'
               CVB  R6,PWORK
               LA   R0,LWQ(R3)
               GETMAIN R,LV=(0)
               USING WQ,R1
               MVC   WQNEXT,WTORQUE
               STH   R2,WQOFF1
               BCTR R3,0
               STH   R3,WQLNG1
               STH   R4,WQOFF2
               BCTR  R5,0
               STH   R5,WQLNG2
               STH   R6,WQOFF3
               EX   R3,MVCWTORQ
               S     R1,=A(SVSMON)
               ST    R1,WTORQUE
          ELSE
               IF   (CLC,COID,=C'02',EQ)
                    LA   R0,LRQ
                    GETMAIN R,LV=(0)
                    USING RQ,R1
                    MVC  RQMAJOR,CORMAJOR
                    MVC  RQNEXT,RQQUE
                    S    R1,=A(SVSMON)
                    ST   R1,RQQUE
               FI
          FI
          PEXIT
          USING WQ,R1
MVCWTORQ  MVC  WQTEXT(0),COWTOR
         DROP R1,R11
WTORQUE   DC   A(0)
RQQUE    DC    A(0)
SYSIN     SDCB M=GL,R=FB,L=80,E=EOFRTN
         TITLE 'SCANS - PERFORM SELECTED SCAN FUNCTIONS'
SCANS    PENTRY
         LA    R1,SCANLIST
         USING SCB,R1
         DO    WHILE,(CLI,SCB,X'FF',NE)
               ST   R1,NEXTSCAN
               L     R2,SCBENTRY
               IF   (CLI,0(R2),0,NE),AND,(CP,SCBFREQ,=P'0',NE)
                    IF   (SP,SCBCOUNT,=P'1',Z)
                         ZAP  SCBCOUNT,SCBFREQ
                         ST   R2,PGM
                         ZAP  PCHECKS,MAXPCHK
                         ZAP  PMAXWTO,MAXWTO
                         STIMER TASK,TIMEREXT,BINTVL=MAXCPU
                         SH   R2,=H'2'
                         MVC  0(2,R2),*+10
                         B    2(R2)
                         DC   S(*+2)
                         TTIMER CANCEL
                         XC   PGM,PGM
                    FI
               FI
               L    R1,NEXTSCAN
              LA   R1,LSCB(R1)
         OD
         DROP  R1
         PEXIT
TIMEREXT TAG
         USING *,R15
         MVI   LOOP,TRUE
         ST    R1,20(R13)
         LOADTCB R1
         L     R1,0(R1)
         L     R1,RBLINK(R1)
         L     R1,RBPSW+4(R1)
         ST    R1,SAVEAOP
         MVC   SAVEOP,0(R1)
         MVI   0(R1),0
         L     R1,20(R13)
         BR    R14
         DROP  R15
SAVEOP   DC    X'00'
SAVEAOP  DC    A(0)
MAXPCHK  DC    P'2'
PMAXWTO  DC    P'8'
MAXWTO   DC    P'8'
NEXTSCAN DC    A(0)
SCANLIST DS    0F
         DC    A(SCANUCB,0)
         DC    A(SCANWTOR,0)
         DC    A(SCANQCB,0)
         DC    A(SCANTCB,0)
         DC    A(SYSRATES,0)
         DC    X'FF'
         TITLE 'SCAN QCBS FOR WAITING TASKS'
SCANQCB  PENTRY
         MVI   FIRSTQ,TRUE
         L     R2,16
         IF    (TM,CVTDCB(R2),MFT,O)
               L     R2,CVTBTERM(R2)
               L     R2,12(R2)             (SEE FE PG 80 -FINDING QCB)
         ELSE
               L     R2,CVTABEND(R2)     SECONDARY CVT
               L     R2,SCVTQCBO(R2)     DUMMY QCB (IEAQQCBO)
         FI
         USING QCBMAJ,R2
         L     R2,QMJNEXT
         DO    WHILE,(LTR,R2,R2,NZ)
               L    R3,QMJMINOR
               USING QCBMIN,R3
               DO   WHILE,(LTR,R3,R3,NZ)
                    L    R4,QMNQEL
                    USING QEL,R4
                    LR   R5,R4     SAVE QEL OF OWNER
                    IF   (TM,QELCODE,QELSHAR,O)
                         MVI  TYPE,SHARE
                    ELSE
                         MVI  TYPE,EXCLUDE
                    FI
                    L    R4,QELNQEL
                    ZHB  R4
                    DO   WHILE,(LTR,R4,R4,NZ)
                         IF   (TM,QELCODE,QELSHAR,Z)
                              MVI  TYPE,EXCLUDE
                         FI
                         IF   (CLI,TYPE,EXCLUDE,EQ)
                              PM   DISPLAYQ
                         FI
                         L    R4,QELNQEL
                         ZHB  R4
                    OD
                    L    R3,QMNNEXT
               OD
               L    R2,QMJNEXT
         OD
         IF    (CLI,FIRSTQ,TRUE,EQ)
               MVI  DELAYQ,TRUE
         ELSE
               MVI  DELAYQ,FALSE
         FI
         PEXIT
CVTBTERM EQU   X'34' FE PG 89
         TITLE 'DISPLAY ENQ WAIT INFO FOR OPERATOR AND TSO USER'
DISPLAYQ PENTRY
*              R2   QCBMAJ
*              R3   QCBMIN
*              R4   QEL FOR WAITING TASK
*              R5   QEL FOR OWNER TASK
*
         IF    (CLC,QMJNAME,=CL8'SYSIEECT',EQ) SKIP WQE ENQ
               PEXIT
         FI
         MVI   FIRSTQ,FALSE
         L     R1,RQQUE
         USING RQ,R1
         DO    WHILE,(LTR,R1,R1,NZ)
               A    R1,=A(SVSMON)
               IF   (CLC,QMJNAME,RQMAJOR,EQ)
                    PEXIT
               FI
               L    R1,RQNEXT
         OD
         DROP  R1
         IF    (CLI,DELAYQ,TRUE,EQ)
               PEXIT
         FI
         PM    HEADING
         LR    R14,R4
         PM    JOBNQEL
         MVC   QWAITJOB,JOBNAME
         LR    R14,R5
         PM    JOBNQEL
         MVC   QOWNRJOB,JOBNAME
         MVC   QNAME,QMJNAME
         ZR    R1
         IC    R1,QMNLNM
         LA    R0,RNAME-W14(R1)
         IF    (CH,R0,MAXLWTO,H)
               LH   R0,MAXLWTO
         FI
         STH   R0,W14     SET WTO MESSAGE LENGTH
         SI    R1,1
         EX    R1,MVCRNAME
         LA    R1,W14
         AR    R1,R0
         MVC   0(4,R1),W14DCS
         LOADTIOT R1
         IF    (CLC,QOWNRJOB,0(R1),NE),OR,(CLI,CONSOLE,TRUE,NE)
               LA   R1,W14
               PM   WTO
         FI
         USING QEL,R4
         IF    (TM,QELTCB,X'80',O),AND,(CLI,CONSOLE,TRUE,EQ)
               MVC  QWAITJOB,=CL8'YOU ARE'
               MVC  TJID+1(1),QELTJID2
               LH   R6,W14
               SH   R6,=H'4'
               TPUT W14+4,(6),EDIT,TJIDLOC=TJID
         FI
         PEXIT
MVCRNAME MVC   RNAME(0),QMNNAME
         TITLE 'GET JOB NAME FROM QEL IN R14'
JOBNQEL   PENTRY
         USING QEL,R14
         L     R1,QELTCB
         IF    (LTR,R1,R1,NP) IS THIS TSO TASK
               L    R1,16
               L    R1,CVTTSCVT(R1)
               L    R1,TSCVTTJB(R1)
               ZR   R0
               IC   R0,QELTJID2
               MH   R0,=H'48'
               AR   R1,R0
               MVC  JOBNAME,TJBUSER(R1)
         ELSE
               L    R1,TCBTIO(R1)  NO, GET NAME FROM TIOT
               IF   (LTR,R1,R1,Z)  IS THIS SYSTEM TASK WITHOUT TIOT
                    LA   R1,=CL8'SYSTEM'   PICK A PSEUDO NAME
               FI
               IF   (CLC,TIOJOB(7,R1),=CL7'HOSINIT',EQ)
                    MVC  JOBNAME,TIOSTEP(R1)
               ELSE
                    MVC  JOBNAME,TIOJOB(R1)
               FI
         FI
         LR    R0,R2
         IF    (TRT,JOBNAME(7),ALPHANUM,NE)
               UNPK JOBNAME(9),QELTCB(5)
               TR   JOBNAME(8),HEX-240
         FI
         LR    R2,R0
         PEXIT
         TITLE 'WAIT FOR INTERVAL OR STOP COMMAND'
WAIT     PENTRY
         IF    (CP,PMAX,=P'0',P)
               IF   (SP,PMAX,=P'1',NP)
                    MVI  EOJ,TRUE
                    PEXIT
               FI
         FI
         LOADTCB R1
         L     R1,TCBJSCB(R1)
         L     R1,JSCBCSCB(R1)
         L     R1,CSCBECB(R1)
         ST    R1,ACSCBECB
         MVI   WAITECB,CLEAR
         STIMER REAL,WAITEXIT,BINTVL=INTERVAL
         WAIT  1,ECBLIST=WAITLIST
         L     R1,ACSCBECB
         IF    (TM,0(R1),POSTED,O)
               MVI  EOJ,TRUE
         FI
         PEXIT
         TITLE 'SCAN FOR WTORS OUTSTANDING'
SCANWTOR PENTRY
         MVI   FIRSTW,TRUE
         L     R2,16
         L     R2,CVTCUCB(R2)
         L     R2,UCMRPYQ(R2)
         DO    WHILE,(LTR,R2,R2,NZ)
               L    R1,OREWQE(R2)
               LA   R15,WQETXT(R1)
               MVI   WTORMSG,C' '
               MVC   WTORMSG+1(L'WTORMSG-1),WTORMSG
               L    R1,WQENBR(R1)
               LA   R14,WTORMSG-W13(R1)
               IF   (CH,R14,MAXLWTO,H),OR,(LTR,R1,R1,NP)
                    LH   R14,MAXLWTO
                    LR   R1,R14
               FI
               STH  R14,W13
               BCTR R1,0
               EX   R1,MVCWTOR
               LA   R1,W13
               AR   R1,R14
               MVC  0(4,R1),W13DCS  MCS DESCRIPTORS
               PM   DISPLAYW
               L    R2,ORELKP(R2)
         OD
         IF    (CLI,FIRSTW,TRUE,EQ)
               MVI  DELAYW,TRUE
         ELSE
               MVI  DELAYW,FALSE
         FI
         PEXIT
MVCWTOR   MVC   WTORMSG(0),0(R15)
         TITLE 'WTO OUTSTANDING WTORS'
DISPLAYW  PENTRY
         L     R1,WTORQUE
         USING WQ,R1
         DO    WHILE,(LTR,R1,R1,NZ)
               A    R1,=A(SVSMON)
               LA   R15,WTORMSG
               AH   R15,WQOFF1
               LH   R14,WQLNG1
               IF   (EX,R14,CLCWTOR,EQ)
                    LA   R15,WTORMSG
                    AH   R15,WQOFF2
                    LA   R14,W16
                    AH   R14,WQOFF3
                    LH   R1,WQLNG2
                    IF   (LTR,R1,R1,NM)
                         EX   R1,MVCIDS
                    FI
                    PEXIT
               FI
               L    R1,WQNEXT
         OD
         MVI   FIRSTW,FALSE
         IF    (CLI,DELAYW,TRUE,EQ)
               PEXIT
         FI
         PM    HEADING
         LA    R1,W13
         PM    WTO
         PEXIT
CLCWTOR  CLC   0(0,R15),WQTEXT
MVCIDS   MVC   0(0,R14),0(R15)
          DROP  R1
         TITLE 'HEADING PRIOR TO FIRST WTO'
HEADING  PENTRY
         IF    (CLI,FIRST,TRUE,EQ)
* ANY HEADINGS
               MVI  FIRST,FALSE
         FI
         PEXIT
         TITLE 'SCAN UCBS FOR MOUNTS AND AVR'
SCANUCB  PENTRY
         MVI   FIRSTM,TRUE
         MVI   AVR,FALSE
         MVI   W12RCS,0 RESET ROUTING CODES
         L     R2,16
         L     R2,CVTILK2(R2)
         DO    WHILE,(CLC,0(2,R2),=X'FFFF',NE)
               IF   (CLC,0(2,R2),=X'0000',NE)
                    LH   R3,0(R2)
                    IF   (TM,UCBTYP+2(R3),X'FF'-X'80'-X'20',Z)
                         IF   (TM,SRTEDMCT(R3),X'80',O)
                              IF   (TM,UCBFL1(R3),X'40',O),            X
               OR,(CLI,UCBTYP+2(R3),X'20',EQ)
                                   PM   MOUNT
                              FI
                         ELSE
                                   IF   (CLI,UCBATI(R3),X'0C',EQ)
                                        PM   AVRMOUNT
                                   FI
                         FI
                    FI
               FI
               AAI  R2,2
         OD
         IF    (CLI,AVR,TRUE,EQ)
               MVC  AWTO,=A(W12)
               PM   DISPLAYM
               MVC  DAVRTAPE,=CL3' '
               MVC  DAVRDISK,=CL3' '
         FI
         IF    (CLI,FIRSTM,TRUE,EQ)
               MVI  DELAYM,TRUE
         ELSE
               MVI  DELAYM,FALSE
         FI
         PEXIT
         TITLE 'DISPLAY MOUNT ROUTINES'
DISPLAYM PENTRY
         MVI   FIRSTM,FALSE
         IF    (CLI,DELAYM,TRUE,EQ)
               PEXIT
         FI
         PM    HEADING
         L     R1,AWTO
         PM    WTO
         PEXIT
MOUNT    PENTRY
         MVC   DMUCB,UCBNAME(R3)
         IF    (CLI,SRTEVOLI(R3),C' ',NH)
               MVC  DMVOL,DMVOL-1
         ELSE
               MVC  DMVOL,SRTEVOLI(R3)
         FI
         IF    (CLI,UCBTYP+2(R3),X'20',EQ)
               MVI  W11RCS,X'10' ROUTE TO DISK POOL
         ELSE
               MVI  W11RCS,X'20' ROUTE TO TAPE POOL
         FI
         MVC   AWTO,=A(W11)
         PM    DISPLAYM
         PEXIT
AVRMOUNT PENTRY
         MVI   AVR,TRUE
         IF    (CLI,UCBTYP+2(R3),X'20',EQ)
               MVC  DAVRDISK,UCBNAME(R3)
               OI   W12RCS,X'10' ROUTE TO DISK POOL
         ELSE
               MVC  DAVRTAPE,UCBNAME(R3)
               OI   W12RCS,X'20' ROUTE TO TAPE POOL
         FI
         PEXIT
         TITLE 'SCANTCB - SCAN TCBS FOR ERRORS'
SCANTCB  PENTRY
         L     R2,16
         L     R2,CVTHEAD(R2)
         DO    WHILE,(LTR,R2,R2,NZ)
               PM   CHECKTCB
               L    R2,TCBTCB(R2)
         OD
         PEXIT
         TITLE 'CHECKTCB - CHECK A TCB FOR ERRORS'
CHECKTCB PENTRY
         IF    (TM,TCBFLGS(R2),X'80',O)
               UNPK DWORK(9),TCBCMPF(5,R2)
               TR   DWORK(8),HEX-240
               MVC  DABEND,DWORK
               LR   R1,R2
               PM   JOBNTCB
               MVC  ABENDJOB,0(R1)
               PM   HEADING
               LA   R1,W17
               PM   WTO
               PEXIT
         FI
         TCBW  32,X'80','ABDUMP'
         TCBW  32,X'40','SER1'
         TCBW  32,X'20','NO I/O RQES'
         TCBW  32,X'08','SMF TIMER EXIT'
         TCBW  32,X'01','ABEND DUMP I/O'
         TCBW  33,X'80','TASK TERMINATED'
         TCBW  33,X'40','ABNORMAL WAIT'
         TCBW  33,X'20','HIGH PAGING'
         TCBW  33,X'10','ATTACHED DISP=NO'
         TCBW  33,X'0C','MUST-COMPLETE'
         TCBW  33,X'02','INITIATOR REGION'
         TCBW  173,X'C0','DAR'
         TCBW  173,X'30','RMS/SER'
         TCBW  173,X'08','DDR'
         PEXIT
DISPLAYT    PENTRY
         LR    R1,R2
         PM    JOBNTCB
         MVC   DTCBJOB,0(R1)
         PM    HEADING
         LA    R1,W15
         PM    WTO
         PEXIT
         TITLE 'GET JOBNAME IN R1 GIVEN TCB IN R1'
JOBNTCB  PENTRY
         L     R14,TCBTIO(R1)
         IF    (LTR,R14,R14,Z)
               LA   R1,=CL8'SYSTEM'
               PEXIT
         FI
         IF    (CLC,0(8,R14),=CL8'INIT',EQ)
               L    R1,TCBLTC(R1)
               L    R14,TCBTIO(R1)
         FI
         IF    (CLC,0(7,R14),=CL7'HOSINIT',EQ),                        X
               AND,(CLC,8(8,R14),=CL8' ',NE)
               LA   R1,8(R14)
         ELSE
               LR   R1,R14
         FI
         PEXIT
         TITLE 'SYSRATES - DISPLAY CPU AND PAGE RATES'
SYSRATES PENTRY
         L     R2,16
         IF    (TM,CVTDCB(R2),MVT,O)
               L    R1,CVTABEND(R2)
               L    R1,SCVTMSSQ(R1)
               L    R1,PQEPTR(R1)
               L    R3,PQEFPQE(R1)
               LA   R0,1
               A    R0,CVTMZ00(R2)
               DO   WHILE,(LTR,R3,R3,NZ)
                    L    R1,PQEFFBQE(R3)
                    DO   WHILE,(CLR,R1,R3,NE)
                         S    R0,FBQESIZE(R1)
                         L    R1,FBQEFWDP(R1)
                    OD
                    L    R3,PQEFPQE(R3)
               OD
               SRL  R0,10
               CVD  R0,PWORK
               EDIT TO=DMEMORY,FROM=PWORK+5,MASK=' ZZZZZ'
               MVI  DDMEM,C'K'
         FI
         IF    (TM,CVTDCB(R2),MVT+DAT,O)
               PM   VS2R1CAP
         ELSE
               IF   (CLC,CVTSMCA(4,R2),=4X'00',NE)
                    PM   SMFCPU
               FI
         FI
         PEXIT
         TITLE 'VS2R1CAP - CPU AND PAGING FOR VS2-R1'
VS2R1CAP PENTRY
         L     R3,CVTSMCA(R2)
         L     R4,CVTSYSWT(R2)
         L     R5,CVTPVTP(R2)
         DO    UNTIL,(CLR,R6,R2,EQ) COLLECT DATA UNINTERRUPTED
               L    R6,SMCATEXP(R3)     LAST TQE TIME
               LM   R0,R1,8(R4)         ACC WAIT TIME IN MICS
               STM  R0,R1,NEWWAIT
               L    R14,PVTNPOUT(R5)
               A    R14,PVTNPIN(R5)
               ST   R14,NEWPAGE         PAGE COUNT
               L    R2,SMCATEXP(R3)
         OD
         TIME  BIN
         ST    R0,NEWBTIME
         LM    R0,R1,NEWWAIT
         IF    (CL,R2,SMFBTIME,EQ) IS MY OLD ACC STILL GOOD
               IF   (SL,R1,OLDWAIT+4,M)
                    SI   R0,1
               FI
               SL   R0,OLDWAIT
               S    R14,OLDPAGE
               L    R15,NEWBTIME
               S    R15,OLDBTIME
         ELSE
               ST   R2,SMFBTIME
               L    R15,NEWBTIME
               SR   R15,R2
         FI
         MVC   OLDWAIT,NEWWAIT
         MVC   OLDPAGE,NEWPAGE
         SRDL  R0,12
         DR    R0,R15
         LH    R0,=H'10000'
         SR    R0,R1     CPU IN % WITH 2 DECIMAL PLACES
         PM    EDITCPU
         MH    R14,=H'100'
         LR    R1,R14
         ZR    R0
         DR    R0,R15
         CVD   R1,PWORK
*
*              LIMIT JOBS IN SYSTEM VIA ENQ/DEQ.  TO MAKE THIS
*              THRASHING CONTROL WORK, AN ENQ/DEQ SEQUENCE WITH
*              SAME NAME MUST BE PLACED IN SMF EXIT FOR JOBCARD.
         IF    (CH,R1,JQLOW,L)
               IF   (CLI,JQ,TRUE,EQ)
                    DEQ  (JQMAJOR,JQMINOR,,SYSTEM)
                    MVI  JQ,FALSE
               FI
         ELSE
               IF   (CH,R1,JQHIGH,H)
                    IF   (CLI,JQ,FALSE,EQ)
                         ENQ  (JQMAJOR,JQMINOR,E,,SYSTEM),RET=USE
                         IF   (LTR,R15,R15,Z)
                              MVI  JQ,TRUE
                         FI
                    FI
               FI
         FI
         EDIT  TO=DPAGE,FROM=PWORK+5,MASK=' ZZZ99'
         MVC   OLDBTIME,NEWBTIME
         MVC   DDPAGE,=C'PAGES/SEC='
         LA    R1,W16
         PM    WTO
         PEXIT
JQ       LOGICAL FALSE,(TRUE,FALSE)
JQLOW    DC    H'50'  LOW LIMIT TO RELEASE JOBS AGAIN IN PAGES/SEC
JQHIGH   DC    H'50'  MAX LIMIT TO RELEASE JOBS IN PAGES/SEC
JQMAJOR  DC    CL8'FPCSRM  '
JQMINOR  DC    C'Q1'
EDITCPU  PENTRY
         CVD   R0,PWORK
         EDIT  TO=DCPU,FROM=PWORK+5,MASK=' Z99.99'
         MVC   DDCPU,=C'CPU='
         MVI   DCPU+8,C'%'
         PEXIT
          TITLE 'SMFCPU - CPU FROM SMF WAIT ACC IN TUS'
SMFCPU    PENTRY
          L     R2,CVT0DS(R2)
          SH    R2,=H'4'
          L     R2,0(R2) SYSWSAVE AREA
          DO    UNTIL,(CLR,R3,R5,EQ) COLLECT TIME,ACC UNINT.
                L    R3,4(R2)        CURRENT WAIT ACC IN TUS
                TIME TU
                L    R5,4(R2)        CURRENT WAIT ACC
          OD
          LR    R4,R0
          IF    (S,R3,OLDWAIT,NM)
                IF   (S,R0,OLDBTIME,NM)
                     IF   (CLR,R0,R4,NE)
                          MH   R3,=H'10000'
                          ZR   R2
                          DR   R2,R0
                          LH   R0,=H'10000'
                          IF   (SR,R0,R3,NM)
                               PM   EDITCPU
                               LA   R1,W16
                               PM   WTO
                          FI
                     FI
                FI
          FI
          ST    R4,OLDBTIME
          ST    R5,OLDWAIT
          PEXIT
CVT0DS    EQU   X'88' FE PG 90
         TITLE 'TIMER WAIT EXIT TO POST INTERVAL - NEW BASE REG *****'
WAITEXIT SUBENTRY CSECT=NO
         POST WAITECB
         SUBEXIT
         TITLE 'COMMON DATA'
         EQUAL
FIRSTQ   LOGICAL TRUE,(TRUE,FALSE)
FIRSTW   LOGICAL TRUE,(TRUE,FALSE)
FIRSTM   LOGICAL TRUE,(TRUE,FALSE)
DELAYQ   LOGICAL TRUE,(TRUE,FALSE)
DELAYW   LOGICAL TRUE,(TRUE,FALSE)
DELAYM   LOGICAL TRUE,(TRUE,FALSE)
CVTSMCA  EQU   X'0C4' SDA 16
CVTSYSWT EQU   X'1B8' SDA 20
CVTPVTP  EQU   X'164' SDA 18
SMCATEXP EQU   X'84'  SDA 212
PVTNPOUT EQU   X'124' PLM 826
PVTNPIN  EQU   X'128' PLM 826
PVTSPOUT EQU   X'12C' PLM 826
PVTSPIN  EQU   X'130' PLM 826
NEWBTIME DC    F'0'
OLDBTIME DC    F'0'
SMFBTIME DC    F'0'
OLDPAGE  DC    F'0'
NEWPAGE  DC    F'0'
OLDWAIT  DC    D'0'
NEWWAIT  DC    D'0'
CVTHEAD  EQU   X'A0'
TCBTCB   EQU   X'74'
TCBLTC   EQU   X'88'
TCBCMPF  EQU   X'10'
DWORK    DC    CL9' '
CVTILK2  EQU   X'28' FE 88
UCBTYP   EQU   16
SRTEVOLI EQU   28
SRTEDMCT EQU   X'23' FE 131
UCBFL1   EQU   X'06' FE 125
UCBATI   EQU   X'0B' FE 125
AVR      LOGICAL FALSE,(TRUE,FALSE)
UCBNAME  EQU   X'0D' FE 125
CVTCUCB  EQU   X'64' FE 89 UCM
UCMRPYQ  EQU   X'1C' FE 137 ORE/RQE QUEUE
ORELKP   EQU   X'00' JOB PLM 566
OREWQE   EQU   X'0C' JOB PLM 566
WQENBR   EQU   X'04' JOB PLM 597
WQETXT   EQU   X'08' JOB PLM 597
MAXLWTO  DC    H'120'
WAITECB  DC    F'0'
CLEAR    EQU   X'00'
WAITING  EQU   X'80'
POSTED   EQU   X'40'
TCBJSCB  EQU   X'B4' FE PG 291
JSCBCSCB EQU   X'0100' SYS CTL BLKS 21.7 PG 238
CSCBECB  EQU   X'20' FE PG 86
PWORK    DC    D'0'
INTERVAL DC    F'0'
PMAX    DC    PL2'4'
TCBFLGS  EQU   29 FE 289
TCBCMP   EQU   16 FE 289
TCBRBP   EQU   0  FE 289
RBLINK   EQU   28 FE 285
RBPSW    EQU   16 FE 285
CVTDCB   EQU   116 FE 90
CVTABEND EQU   X'C8' FE PG 91
CVTMZ00  EQU   X'A4' FE PG 90
SCVTMSSQ EQU   X'6C' FE PG 94 GOVRFLB
PQEPTR   EQU   X'08' FE PG 275 PTR TO DUMMY PQE
PQEFFBQE EQU   X'00' FE PG 276 PTR TO FIRST FREE BLK
FBQESIZE EQU   X'08' FE PG 276 FREE BLOCK SIZE
FBQEFWDP EQU   X'00' FE PG 276 NEXT FBQE OR PQE AGAIN
PQEFPQE  EQU   X'08' FE PG 276 NEXT PQE
CVTDATE  EQU   56 FE 89
SCVTQCBO EQU   X'14' FE PG 93
WAITLIST DS    0F
ACSCBECB DC    A(0)
         DC    X'80',AL3(WAITECB)
TYPE     LOGICAL SHARE,(SHARE,EXCLUDE)
CVTTSCVT EQU   X'E4' FE PG 91
TSCVTTJB EQU   X'00' FE PG 340
TJBUSER  EQU   X'1C' FE PG 347
TCBTIO   EQU   X'0C' FE PG 289
TIOJOB   EQU   X'00' FE PG 121
TIOSTEP  EQU   X'08' FE PG 121
JOBNAME  DC    CL8' '
         DC    X'00' PAD FOR UNPK
HEX      DC    C'0123456789ABCDEF'
ALPHANUM TRTTAB ALPHANUM
TJID     DC    H'0'
MAXCPU   DC    A(100*2)
AWTO     DC    A(0)
CVTNUCB  EQU   128 FE 90
PRINT    LOGICAL FALSE,(TRUE,FALSE)
SYSPRINT SDCB  L=121
FIRST    LOGICAL TRUE,(TRUE,FALSE)
EOJ      LOGICAL FALSE,(TRUE,FALSE)
LOOP     LOGICAL FALSE,(TRUE,FALSE)
CONSOLE  LOGICAL TRUE,(FALSE,TRUE)
         TITLE 'SVSMON MESSAGE AREAS'
         PRINT GEN
         MSG   01,I
         DC    C'SVSMON SVS MONITOR'
         MSG   02,I
         DC    C'SVSMON V'
VERSION  DC    C'1.6'
         DC    C' &SYSDATE MONITORING OS/'
DOSTYPE  DC    CL3'XXX',C' REL. '
DREL     DC    CL4'XXXX'
         MSG   03,A
         DC    C'SVSMON TERMINATED CALL (813) 866-4145'
         MSG   04,I
         DC    C'SVSMON ENDED'
         MSG   05,I
         DC    C'MISSING OR INVALID PARM MMMIIICFFFFF'
         MSG   06,I
         DC    C'INTERVAL IS'
DINT     DC    CL4' ',C' SECONDS'
         MSG   07,I
         DC    C'PGM-ERR TCBCMP '
DCMP     DC    CL8' ',C' REL-PSW '
DPSW     DC    CL16' '
         MSG   08,I
         MSG   09,I
         DC    C'FUNCTION '
DFUN     DC    CL8' ',C' SURPRESSED'
         MSG   10,I
         MSG   11,I
         DC    C'MOUNT '
DMVOL    DC    CL6' ',C' ON '
DMUCB    DC    CL3' '
         MSG   12,I
         DC    C'AVR MOUNT ON '
DAVRTAPE DC    CL3' ',C' '
DAVRDISK DC    CL3' '
         MSG   13,I
WTORMSG  DC    CL128' '
         MSG   14,I
QWAITJOB  DC    CL8' ',C' WAITING FOR '
QOWNRJOB DC    CL8' ',C' TO FREE '
QNAME    DC    CL8' ',C' '
RNAME    DC    CL256' '
         MSG   15,I
DTCBJOB DC    CL8' ',C' IS IN FORCED WAIT DUE TO '
DTCBWAIT    DC    CL20' '
         MSG   16,I
DMEMORY  DC    CL6' '
DDMEM    DC    C'  '
DDCPU    DC    CL4' '
DCPU     DC    CL7' ',C'    '
DDPAGE   DC    CL9' '
DPAGE    DC    CL6' ',C' '
         DC    9C' '
         MSG   17,I
ABENDJOB DC    CL8' ',C' TASK HAS ABENDED TCBCMP '
DABEND   DC    CL8' '
W17END   EQU   *
         TITLE 'PATCH AREA'
         DC    0D'0',CL16' PATCH AREA'
PATCH    DC    100X'00'
         DC    C' END PATCH '
         TITLE 'DSECTS'
PO       DSECT
POMAX    DS    CL3
POINT    DS    CL3
POCON    DS    C
POMOUNT  DS    C
POWTOR   DS    C
POENQ    DS    C
POTCB    DS    C
POCPU    DS    C
LPO       EQU  *-PO
SCB     DSECT
SCBENTRY DS    A
SCBFREQ  DS    PL1
SCBCOUNT DS    PL1
SCBSPARE DS    XL2
LSCB     EQU   *-SCB
CO       DSECT
COID     DS    CL2
COOFF1   DS    CL3
COLNG1   DS    CL3
COOFF2   DS    CL3 OFFSET TO ID IN WTOR MSG
COLNG2   DS    CL3 LENGTH OF ID FIELD
COOFF3   DS    CL3 OFFSET INTO ID DISPLAY FIELD WWW016
COWTOR   DS    CL63
         ORG   COOFF1
CORMAJOR DS    CL8
WQ       DSECT
WQNEXT   DS    A
WQOFF1    DS    H
WQLNG1    DS    H MINUS 1 FOR EX INS
WQOFF2   DS    H OFFSET TO ID IN WTOR MSG
WQLNG2   DS    H LEENGTH OF ID MINUS 1
WQOFF3   DS    H OFFSET INTO ID DISPLAY FIELD IN WWW016
LWQ      EQU   *-WQ
WQTEXT   DS    X VARIABLE LENGTH AREA IN GETMAIN
RQ       DSECT
RQNEXT   DS    A NEXT RESOURCE CONTROL BLOCK
RQMAJOR  DS    CL8 MAJOR RESOURCE NAME TO IGNORE
LRQ      EQU   *-RQ
         QCBD
         END
