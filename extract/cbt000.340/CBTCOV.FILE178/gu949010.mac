*          DATA SET GU949010   AT LEVEL 011 AS OF 11/15/79
*          DATA SET GU949010   AT LEVEL 010 AS OF 11/12/79
*          DATA SET GU949010   AT LEVEL 009 AS OF 11/03/79
*          DATA SET GU949010   AT LEVEL 007 AS OF 10/16/79
         TITLE 'GU949010 - SUBROUTINE TO COLLECT ASCB INFORMATION'
*              PGM-ID.   GU949010.
*              DATE.     10/01/79.
*              AUTHOR.   DON HIGGINS
*              REMARKS.  THIS SUBROUTINE COLLECTS MVS AND ASCB INFO.
*                        AT INTERVALS FOR INQUIRY AND DAILY REPORTS
*                        VIA THE DISPLAY PROGRAM GU949000.
*
*
*              MAINTENANCE.
*
*                11/04/79 DSH - ADD DISK UCB SIO COUNTS
*
*                11/11/79 DSH - EXPAND TO 200 UCB SIO COUNTS
*
*                11/15/79 DSH - ONLY LOG NON-ZERO SIO UCBS.
*
*              EXTERNAL PROGRAMS.
*
*                 1.  GU949000 - DISPLAY PROGRAM
*                 2.  GU949020 - MONITOR MAINLINE FOR THIS SUBROUTINE
*                 3.  GU949030 - FILE MAINTENANCE UTILITY.
*
*
*
*
*
*              NOTES.
*                          1.  SPIE PROGRAM INTERRUPTION HANDLER
*                              ATTEMPTS TO RECOVER FROM TEMPORARY
*                              INTERRUPTIONS CAUSED BY CONTROL
*                              BLOCK CHANGES DURING ACCESS.
*
*              REGISTERS.
*                  R0-R1 WORK REGISTERS
*                  R2-R5 ASCB MAINLINE REGS R5=A(CURRENT ASCB)
*                  R6    ASCB SUBSCRIPT (1-10)
*                  R7-R9 WORK
*                  R10   FNAME - ADDRESS OF SPECIFIED ASCBS
*                  R11   REC   - ADDRESS OF RECORD
*                  R12   BASE
*                  R13   SAVE AREA
*                  R14-R15 LINKAGE AND WORK
*              REFERENCES.
*                  GC28-0751-0 OS/VS2 BEBUGGING HANDBOOK VOL. 1
*                  GC28-0709-0 OS/VS2 DEBUGGING HANDBOOK VOL. 2
*                  GC28-0886-0 OS/VS2 MVS PERFORMANCE NOTEBOOK
*                  GC28-0648-2 OS/VS2 TSO GUIDE TO COMMAND PROCESSORS
*                  GC28-0683-1 OS/VS2 SUPR. SERVICES MACRO INSTR.
*                  SY28-0715-1 OS/VS2 SYSTEM LOGIC LIBRARY
*              CALLS.
*
*                  CALL GU949010(LTIME,TINTVL,ASCB,REC)
*
*                    LTIME  - TIME OF DAY AT END OF LAST INTERVAL
*                            (0.01 SECONDS)
*                    TINTVL - LENGTH OF INTERVAL
*                             (0.01 SECONDS)
*                    ASCB   - TABLE OF ASCBS TO REPORT ON BY NAME
*                             (10 - 8 CHARACTER NAMES)
*                    REC    - RECORD AREA TO BE FILLED
*
*                             MVS(10)
*                               1 YYDDD    JULIAN DATE OF RECORD
*                               2 TIME     TIME OF DAY (0.01 SEC)
*                               3 IPLDAT   JULIAN IPL DATE
*                               4 IPLTIM   IPL TIME OF DAY (0.01 SEC)
*                               5 CURSTC   CURRENT SYSTEM TASKS
*                               6 CURTSO   CURRENT TSO USERS
*                               7 CURJOB   CURRENT BATCH JOBS
*                               8 XCOMIO   CURRENT XCOM TOTAL COUNT
*                             ANAME(10)    ASCB NAMES
*                             ACPU(10)     ASCB CPU TIME (0.01 SEC)
*                             AIO(10)      SRM TOTAL TRANSACTION COUNT
*                             APG(10)      SRM PAGE SECONDS/32K
*                             UCB(200)     UCB SIO COUNTS
*
*
*
         TITLE 'MAINLINE'
GU949010 SUBENTRY BASES=(R13,R12)
         PM    INIT              INITIALIZE WORK AREA
         PM    WAIT              WAIT FOR END OF INTERVAL
         LA    R15,PGMCHK3
         STM   R0,R15,PGMCHKSA   SAVE MAINLINE REGS FOR RESTART
         SPIE  PGMCHK1,MF=(E,SPIELIST)
         ST    R1,SAVEPICA
         MVI   BLDMODE,TRUE
         ZAP   BLDLOOP,=P'10'
PGMCHK3  TAG
         IF    (CLI,BLDMODE,TRUE,NE),OR,(SP,BLDLOOP,=P'1',NP)
               ABEND  1,DUMP
         FI
         PM    BLDREC            BUILD RECORD
         MVI   BLDLOOP,FALSE
         L     R1,SAVEPICA
         SPIE  MF=(E,(1))
         SUBEXIT
         TITLE 'INIT - PROCESS ARGUMENTS'
INIT     PENTRY
         LM    R8,R11,0(R1)
         USING FNAME,R10
         USING REC,R11
         PEXIT
         TITLE 'WAIT - WAIT FOR END OF NEXT INTERVAL'
WAIT     PENTRY
         TIME  BIN
         L     R1,0(R8)
         L     R2,0(R9)
         DO    WHILE,(CLR,R0,R1,GE)
               AR   R1,R2
         OD
         LR    R2,R1
         SR    R1,R0
         ST    R1,INTERVAL
         IF    (CL,R2,=A(24*60*60*100),GE)
               ZR   R2
         FI
         ST    R2,0(R8)
         STIMER WAIT,BINTVL=INTERVAL
         PEXIT
         TITLE 'BLDREC - BUILD LOG RECORD FROM SYSTEM DATA'
BLDREC   PENTRY
         LA    R0,REC
         LA    R1,LREC
         ZR    R14
         ZR    R15
         MVCL  R0,R14
         PM    MVS
         PM    ASCBS
         PM    UCBS
         PEXIT
         TITLE 'MVS - FILL IN MVS SEGMENT OF REC'
MVS      PENTRY
         TIME  DEC
         ZR    R0
         STM   R0,R1,PWORK
         CVB    R0,PWORK
         ST     R0,YYDDD
         TIME   BIN
         ST     R0,TIME
         L      R2,16
         L      R2,CVTUSER(R2)
         IF     (LTR,R2,R2,NZ)
                XC   PWORK(4),PWORK
                MVC  PWORK+4(4),UCVTIPL+4(R2)
                CVB  R0,PWORK
                ST   R0,IPLDAT
                MVC  PWORK+4(2),UCVTIPL(R2)
                ZR    R0
                CVB  R1,PWORK
                D    R0,=F'1000'
                ST   R1,IPLTIM
                IF   (ICM,R2,15,UCVTXCVT(R2),NZ)
                     L      R0,VTRTOT(R2)
                     ST     R0,XCOMIO
                FI
         FI
         PEXIT
         TITLE 'ASCBS - FILL IN ASCB SEGMENTS OF REC'
ASCBS    PENTRY
         MVC   ANAME,FNAME
         L     R2,16
         L     R2,CVTASCVT(R2)
         LA    R3,ASVTENTY(R2)
         L     R4,ASVTMAXU(R2)
         DO    WHILE,(SH,R4,=H'1',NM)
               IF   (ICM,R5,15,0(R3),P)
                    PM   COUNT
                    PM   MATCH
                    IF   (CLI,FOUND,TRUE,EQ)
                         PM   UPDATE
                    ELSEIF (CLI,STC,TRUE,NE)
                         PM   ADD
                    FI
               FI
               AAI  R3,4
         OD
         PEXIT
         TITLE 'COUNT - COUNT STCS, USERS, AND JOBS'
COUNT    PENTRY
         MVI  STC,FALSE
         IF   (ICM,R1,15,ASCBJBNI(R5),NZ)
              L    R0,CURJOB
              AH   R0,=H'1'
              ST   R0,CURJOB
         ELSEIF (ICM,R0,15,ASCBTSB(R5),NZ)
              L    R0,CURTSO
              AH   R0,=H'1'
              ST   R0,CURTSO
         ELSE
              MVI  STC,TRUE
              L    R0,CURSTC
              AH   R0,=H'1'
              ST   R0,CURSTC
         FI
         PEXIT
         TITLE 'MATCH - FIND ASCB IN FNAME'
MATCH    PENTRY
         ZR    R6
         DO    WHILE,(CH,R6,=AL2(MAXASCBS),LT)
               LR   R7,R6
               SLL  R7,3
               LA   R7,FNAME(R7)
               IF   (CLC,0(8,R7),=CL8' ',EQ)
                    MVI  FOUND,FALSE
                    PEXIT
               FI
               IF   (ICM,R1,15,ASCBJBNI(R5),Z)
                    L    R1,ASCBJBNS(R5)
               FI
               IF   (CLC,0(8,R7),0(R1),EQ)
                    MVI  FOUND,TRUE
                    PEXIT
               FI
               AAI  R6,1
         OD
         MVI   FOUND,FALSE
         PEXIT
         TITLE 'ADD - ADD ASCB IF ROOM OR NOT LOWEST CPU'
ADD      PENTRY
         ZR    R6
         DO    WHILE,(CH,R6,=AL2(MAXASCBS),LT)
               LR   R7,R6
               SLL  R7,3
               LA   R7,ANAME(R7)
               IF   (CLC,0(8,R7),=CL8' ',EQ)
                    PM   UPDATE
                    PEXIT
               FI
               AAI  R6,1
          OD
          PM   SELECT
          IF   (CLI,FOUND,TRUE,EQ)
               PM   UPDATE
          FI
          PEXIT
          TITLE 'SELECT - FIND ASCB TO REPLACE'
SELECT    PENTRY
          ZR    R8
          BCTR  R8,0
          ZR    R9
          ZR    R6
          DO    WHILE,(CH,R6,=AL2(MAXASCBS),LT)
                LR   R7,R6
                SLL  R7,3
                LA   R7,FNAME(R7)
                IF   (CLC,0(8,R7),=CL8' ',EQ)
                     LR   R7,R6
                     SLL  R7,2
                     IF   (CL,R8,ACPU(R7),GT)
                          LR   R9,R6
                          L    R8,ACPU(R7)
                     FI
                FI
                AAI  R6,1
         OD
         PM     CALCCPU
         IF     (CLR,R0,R8,GT)
                MVI  FOUND,TRUE
                LR   R6,R9
         ELSE
                MVI    FOUND,FALSE
         FI
         PEXIT
         TITLE 'CALCCPU - LOAD R0 WITH ASCB TCB AND SRB CPU'
CALCCPU  PENTRY
         LM    R0,R1,ASCBEJST(R5)
         SRDL  R0,12
         D     R0,=F'10000'
         LR    R15,R1
         LM    R0,R1,ASCBSRBT(R5)
         SRDL  R0,12
         D     R0,=F'10000'
         AR    R15,R1
         LR    R0,R15
         PEXIT
         TITLE 'UPDATE - UPDATE CPU, IO, AND PAGING FOR ASCB'
UPDATE   PENTRY
         LR    R7,R6
         SLL   R7,3
         LA    R7,ANAME(R7)
         IF    (ICM,R1,15,ASCBJBNI(R5),Z)
               L    R1,ASCBJBNS(R5)
         FI
         MVC   0(8,R7),0(R1)       RESET NAME FOR ADDS/SELECTS
         LR    R7,R6
         SLL   R7,2
         PM    CALCCPU
         ST    R0,ACPU(R7)         SET CPU (0.01 SEC TCB AND SRB)
         L     R1,ASCBOUCB(R5)
         L     R0,OUCBIOSM(R1)
         ST    R0,AIO(R7)          SET IO  (SMF EXCP COUNT)
         LM    R0,R1,OUCBPSS(R1)
         SRDL  R0,16
         ST    R1,APG(R7)          SET PG (PAGE-MILLISECONDS/32K)
         PEXIT
         TITLE 'UCBS - FILL IN UCB SECTION OF RECORD'
UCBS     PENTRY
         LA    R0,UCB
         LA    R1,L'UCB
         ZR    R14
         ZR    R15
         MVCL  R0,R14    CLEAR UCB SECTION
         LA    R4,UCB
         LA    R5,UCB+L'UCB
         L     R2,16
         L     R2,CVTILK2(R2)
         DO    WHILE,(CLC,0(2,R2),=X'FFFF',NE)
               IF   (CLC,0(2,R2),=X'0000',NE)
                    LH   R3,0(R2)
                    PM  ADDUCB
               FI
               AAI  R2,2
         OD
         PEXIT
         TITLE 'ADDUCB - ADD ONLINE DISK UCB ENTRY'
ADDUCB   PENTRY
         IF    (CLR,R4,R5,GE)
               PEXIT
         FI
         L     R1,UCBEXTPT(R3)
         IF    (CLC,UCBMFCNT(2,R1),=XL2'00',Z)
               PEXIT
         FI
         MVC   0(2,R4),UCBCHAN(R3)
         MVC   2(2,R4),UCBMFCNT(R1)
         AAI   R4,4
         PEXIT
         TITLE 'DATA DIVISION'
         EQUAL
BLDMODE  LOGICAL FALSE,(TRUE,FALSE)
FOUND    LOGICAL FALSE,(TRUE,FALSE)
STC      LOGICAL FALSE,(TRUE,FALSE)
BLDLOOP  DC     PL2'0'
INTERVAL DC     F'0'
PWORK    DC   D'0'
*
*        DATA AND ROUTINES FOR PROGRAM INTERRUPTION HANDLER
*
         DROP
PGMCHK1  TAG                       STAGE 1 PGMCHK HANDLER
         USING *,R15
         MVC   PGMPSW,4(R1)        SAVE PSW
         LA    R15,PGMCHK2
         STCM  R15,7,9(R1)         CHANGE PSW TO EXIT TO STAGE 2
         BR    R14                 EXIT TO SUPVR FROM STAGE 1
PGMCHK2  BALR  R15,0               STAGE 2 PGMCHK HANDLER
         USING *,R15
         LM    R0,R15,PGMCHKSA
         BR    R15                 EXIT TO STAGE 3 AT END OF MAINLINE
PGMCHKSA DC    16F'0'
SAVEPICA DC    A(0)
SPIELIST SPIE  0,((1,15)),MF=L
         DC    CL8'*PGMPSW*'
PGMPSW   DC    D'0'
DWORK    DC    CL7' '
HEX      DC    C'0123456789ABCDEF'
PGMMSG   DS    0CL80
         DC    C'PROGRAM CHECK AT '
DPGMCHK  DC    CL6' '
         FILL  PGMMSG
         TITLE 'SYSTEM CONTROL BLOCK EQUATES'
*
*        ASVT
*
ASVTMAXU EQU  X'204'    87 NUMBER OF ASCB ENTRIES
ASVTENTY EQU  X'210'    87 START  OF ASCB ENTRIES
*
*        ASCB
*
ASCBASID EQU  X'24'     68 ASID NUMBER
ASCBCSCB EQU  X'38'     69 COMMAND SCHED. CONTROL BLOCK CHAIN
ASCBTSB  EQU  X'3C'     69 TERMINAL STATUS BLOCK FOR TSO ONLY
ASCBEJST EQU  X'40'     69 UNSIGNED 64 BIT TCB CPU TIME
ASCBRCTF EQU  X'66'     69 RCT FLAGS
ASCBOUT  EQU  X'04'     69 ASCB SWAPPED OUT
ASCBFLG1 EQU  X'67'     70 FLAG FIELD
ASCBDSP1 EQU  X'72'     70 DISPATCH FLAG FIELD
ASCBTCBS EQU  X'7C'     71 COUNT OF READY TCBS
ASCBOUCB EQU  X'90'     71 SRM USER CONTROL BLOCK
ASCBOUXB EQU  X'94'     71 SRM USER EXTENTION BLOCK
ASCBFMCT EQU  X'98'     71 PAGE FRAME COUNT - WORKING SET
ASCBJBNI EQU  X'AC'     72 JOBNAME OF INITS
ASCBJBNS EQU  X'B0'     72 JOBNAME OF STCS
ASCBSRBT EQU  X'C8'     72.1 SRB CPU TIME
*
*        ASM     AUX. STORAGE TABLE
*
ASMSART  EQU  X'04'     74   SWAP ACTIVITY TABLE
ASMPART  EQU  X'08'     74   PAGE ACTIVITY TABLE
ASMBKSLT EQU  X'6C'     77   UNRESERVED SLOTS
ASMSLOTS EQU  X'70'     77   TOTAL SLOTS
ASMVSC   EQU  X'74'     77   ALLOC VIO SLOTS
ASMNVSC  EQU  X'78'     77   ALLOC NON-VIO SLOTS
*
*        CDE
*
CDCHAIN  EQU  X'00'     160 NEXT CDE
CDNAME   EQU  X'08'     160 NAME
CDENTPT  EQU  X'10'     160 LOAD MODULE ENTRY POINT
CDUSE    EQU  X'18'     160 USE COUNT
*
*        CSCB
*
CSCBPTR  EQU  X'00'     173 NEXT CSCB
CSCBJOB  EQU  X'08'     174 JOB NAME
CSCBSTEP EQU  X'40'     176 STEP NAME
*
*        CSD
*
CSDCPUAL EQU  X'08'    179 MASK OF AVAILABLE CPUS
*
*        CVT
*
CVTILK2  EQU  X'028'   184  UCB HALFWORD ADDR LIST
CVTCUCB  EQU  X'064'   185  UCM FOR MCS
CVTNUCB  EQU  X'080'   186  SIZE OF NUC
CVTMZ00  EQU  X'0A4'   187  SIZE OF VIRTUAL STORAGE
CVTQLPAQ EQU  X'BC'    188  POINTER TO ACTIVE LPA CDE LIST
CVTSMCA  EQU  X'0C4'   188  SMF COMMON AREA
CVTUSER  EQU  X'0CC'   188  POINTER TO FPC USER CVT
CVTPVTP  EQU  X'164'   193  PAGE VECTOR TABLE
CVTLPDIA EQU  X'168'   193  START OF LPA (SEE VOL1 5-64)
CVTSHRVM EQU  X'1A0'   195  START OF CSA
CVTASCVT EQU  X'22C'   197  ADDRESS SPACE VECTOR TABLE
CVTGDA   EQU  X'230'   197  GLOBAL DATA AREA
CVTFQCB  EQU  X'280'   198  FIRST QCB
CVTCSD   EQU  X'294'   199  COMMON SYSTEM DATA
CVTASMVT EQU  X'2C0'   199  AUX. STORAGE TABLE
CVTLCCAT EQU  X'300'   200  LOGICAL CPU ADDR TABLE
CVTMFCTL EQU  X'31C'   202  STGST FOR MF/1 OR RMF
CVTRLSTG EQU  X'358'   203  REAL STORAGE IN K
*
*        DCB
*
DCBEODAD EQU  X'20'    221 END OF FILE ADDRESS
*
*        DQE
*
DQEBLKAD EQU  X'08'    311 START OF BLOCK
DQELNTH  EQU  X'0C'    311 LENGTH OF BLOCK
*
*        ECCDB  MF/RMF CHANNEL EVENT DATA
*
ECCDSIOS EQU  X'08'        TOTAL SIO COUNT
ECCDBUSY EQU  X'0C'        TOTAL CHANNEL BUSY SAMPLES
*
*        ECCEDT  MF/RMF CHANNEL EVENT DATA TABLE
*
ECCECPEQ EQU  X'00'        POINTER TO ECCPE FOR CPUS
ECCECPUS EQU  X'09'        NUMBER OF CPUS
ECCESAMP EQU  X'0C'        TOTAL CHANNEL SAMPLES
*
*        ECCPE MF/RMF CPU STATUS DATA
*
ECCPCNUM EQU  X'02'        NUMBER OF CHANNEL ECCDB ENTRIES
ECCPCDBQ EQU  X'04'        POINTER TO ECCDB TABLE
LECCPE   EQU  X'14'        LENGTH OF ECCPE ENTRY
*
*        GDA
*
GDAFLAGS EQU  X'00'    349 SYSTEM FLAGS
GDASQASP EQU  X'18'    349 SQA SPQE
*
*        LCCAT
*
LCCAT00P EQU  X'00'    432 CPU 0 LCCA POINTER
LCCAT01P EQU  X'04'    432 CPU 1 LCCA POINTER
*
*        LCCA
*
LCCAWTIM EQU  X'268'   428 CPU ACCUMULATED WAIT
*
*        XCOM MESSAGE HEADER CONTROL BLOCKS
*
MHBNEXT  EQU  X'00'        NEXT MHB
MHBPID   EQU  X'04'        DESTINATION PATH ID FOR MESSAGE
MHBTID   EQU  X'08'        DESTINATION TERM ID FOR MESSAGE OR ZERO
MHBME#   EQU  X'0E'        CURRENT MESSAGES QUEUED TO THIS MHB (H)
*
*        OUCB
*
OUCBNPG  EQU  X'18'    492 PERFORMANCE GROUP
OUCBDMN  EQU  X'24'    493 PERFORMANCE DOMAIN
OUCBWSS  EQU  X'4E'    493 WORKING SET PAGES AT LAST SWAP IN
OUCBIOSM EQU  X'6C'     19 SMF EXCP COUNT GC28-0710-0 12/78
OUCBPSS  EQU  X'70'    493 CPU PAGE SECONDS
*
*        PART/SART PAGE AND SWAP ACTIVITY TABLES
*
PARTSIZE EQU  X'04'    499 NUMBER OF DSNS
PARTDSNL EQU  X'18'    500 LIST OF DSN NAMES
PARTENTS EQU  X'50'    501 START OF PARTE/SARTE
LPARTE   EQU  64
LDSN     EQU  44
*
*        PARTE/SARTE DSN ENTRIES
*
PARETYPE EQU  X'08'    501 TYPE INDICATORS
PAREFLG1 EQU  X'09'    501 DAMAGE FLAG
PARESZSL EQU  X'10'    502 TOTAL SLOTS
PARESLTA EQU  X'14'    501 ALLOCATED SLOTS
PARERQTM EQU  X'38'    502 WEIGHT FACTOR BASED ON USAGE
PARERRCT EQU  X'18'    502 PERM. I/O ERROR COUNT
PAREUCBP EQU  X'2C'    502 UCB POINTER
*
*        XCOM PATH CONTROL BLOCK (SEE SR301000-SR303000)
*
PCBNEXT  EQU  X'00'        NEXT PCB IN CHAIN
PCBPID   EQU  X'04'        NAME OF PATH
PCBJOBN  EQU  X'14'        NAME OF JOB WHICH CREATED PATH
*
*        PFTE
*
PFTASID  EQU  X'00'    518 ASID OF OWNER
PFTVBN   EQU  X'02'    518 VBN (HIGH ORDER 12 BITS OF ADDR
PFTFLAG1 EQU  X'0C'    518 FIRST FLAG BYTE
PFTONAVQ EQU  X'80'          AVAILABLE
PFTLSQA  EQU  X'20'          LSQA/SQA
PFTLNGFX EQU  X'10'          LONG FIXED
PFTBADPG EQU  X'04'          BAD PAGE
PFTVRALC EQU  X'02'          V=R ALLOCATED
PFTFLAG2 EQU  X'0D'    518 SECOND FLAG BYTE
PFTOFFLN EQU  X'40'          OFFLINE
PFTIRRG  EQU  X'10'          VIO PAGE
LPFTE    EQU  16
*
*        PSA
*
FLCTRACE EQU  X'54'    526 TRACE TABLE HEADER POINTER
PSATOLD  EQU  X'224'   528 CURRENT ASCB
*
*        PVT
*
PVTPOOL  EQU  X'008'   541 REAL PAGE FRAMES AVAIL. NOW
PVTPFTP  EQU  X'00C'   541 APPARENT ORIGIN OF PFTE
PVTFPFN  EQU  X'010'   541 RBN TO FIRST PFTE
PVTLPFN  EQU  X'012'   541 RBN TO LAST  PFTE
PVTNPI   EQU  X'0F8'   545 DEMAND IN
PVTNPOUT EQU  X'0FC'   545 DEMAND OUT
PVTVAMI  EQU  X'100'   545 VIO IN
PVTVAMO  EQU  X'104'   545 VIO OUT
PVTSPIN  EQU  X'10C'   545 SWAP IN
PVTSPOUT EQU  X'110'   545 SWAP OUT
PVTCFMCT EQU  X'12C'   545 CURRENT PAGABLE CSA/LPA REAL PAGES
PVTCNTFX EQU  X'726'   548 TOTAL FIXED
PVTSQAFX EQU  X'728'   548 SQA FIXED
PVTCOMFX EQU  X'72A'   548 CSA FIXED
*
*        PART/SART PAGE AND SWAP ACTIVITY TABLES
*
SARSIZE  EQU  X'04'    628 NUMBER OF DSNS
SARDSNL  EQU  X'18'    628 LIST OF DSN NAMES
SARSETSZ EQU  X'38'    628 SWAP SET SIZE
SARENTS  EQU  X'50'    628 START OF PARTE/SARTE
LSARTE   EQU  48
*
*        PARTE/SARTE DSN ENTRIES
*
SREFLG   EQU  X'09'    628 DAMAGE FLAG
SRETOTSL EQU  X'10'    628 TOTAL SLOTS
SREAVLSL EQU  X'14'    628 AVAIL. SLOTS
SRERRCT  EQU  X'18'    628 PERM. I/O ERROR COUNT
SREUCB   EQU  X'2C'    628 UCB POINTER
*
*        SMCA (VS2-R1 SYS. DATA AREAS PG 209 AND MACRO IEESMCA)
*
SMCAPSTA EQU  X'1E'    210 PRIMARY STATUS
SMCAASTA EQU  X'2E'    211 ALTERNATE STATUS
SMCADSCT EQU  X'74'    212 LOST SMF RECORD COUNT
*
*        SPQE
*
SPDQEPTR EQU  X'04'    658 DQE PTR
*
*        STGST  MF/RMF GLOBAL DATA AREA
*
STGSMMV  EQU  X'10'        POINTER TO STMMV MFROUTER CALL INFO TABLE
*
*        TTE - TRACE TABLE ENTRY
*
TTEPSW   EQU  X'00'        740 PSW
TTETYP   EQU  X'02'        740 FIRST 4 BITS OF THIRD BYTE PSW
TTEASID  EQU  X'16'        740 ASID OF CURRENT TASK
LTTE     EQU  32
*
*        UCM
*
UCMRQNR  EQU  X'038'   781
*
*        UCB - UNIT CONTROL BLOCK
*
UCBSTAT  EQU  X'03'    747
UCBCHAN  EQU  X'04'    747
UCBFLA   EQU  X'06'    747 FLAG BYTE A
UCBNAME  EQU  X'0D'    749
UCBTYP   EQU  X'10'    749
UCBFLC   EQU  X'14'    750 FLAG BYTE C
UCBEXTPT EQU  X'14'    750 UCB COMMON EXTENSION
UCBVOLI  EQU  X'1C'    751
UCBSTAB  EQU  X'22'    751
UCBDMCT  EQU  X'23'    752
UCBXTN   EQU  X'2C'    754 UCB MAG. TAPE EXTENSION
*
*        FPC USER CVT FOR LOCAL MODIFICATIONS TO MVS
*
UCVTIPL  EQU  X'08'        TIME AND DATE OF IPL (TIME DEC)
UCVTXCVT EQU  X'84'        POINTER TO XCOM CVT (SEE SR301000)
*
*        UCB COMMON EXTENSION
*
UCBMFCNT EQU  X'0C'    759 MF TOTAL SIO COUNT
UCBASID  EQU  X'0E'    759 ASID OF LAST MEMORY ALLOCATED
*
*        UCB MAG. TAPE EXTENSION
*
UCBTREAD EQU  X'04'    760 TEMPORARY READ ERRORS
UCBTWRIT EQU  X'05'    760 TEMPORARY WRITE ERRORS
UCBSIO   EQU  X'06'    760 START I/O COUNT
UCBPREAD EQU  X'08'    761 PERMANENT READ ERRORS
UCBPWRIT EQU  X'09'    761 PERMANENT WRITE ERRORS
UCBNOISE EQU  X'0A'    761 NOISE RECORDS READ
UCBERG   EQU  X'0C'    761 INTER RECORD GAPS WRITTEN
UCBCLN   EQU  X'0E'    761 CLEANER ACTIONS
*
*        XCVT - XCOM CVT FOR CROSS MEMORY MESSAGE FACILITY
*
VTPCBH   EQU  X'0C'        POINTER TO PCB CHAIN OR ZERO
VTMHBH   EQU  X'10'        POINTER TO MHB CHAIN OR ZERO
VTRCUR   EQU  X'40'        CURRENT MESSAGES IN CSA QUEUE
VTRMAX   EQU  X'44'        MAXIMUM MESSAGES ALLOWED IN CSA QUEUE
VTRTOT   EQU  X'48'        TOTAL MESSAGES PUT SINCE IPL
         TITLE 'DSECTS'
MAXASCBS EQU  10
MAXUCBS  EQU  200
FNAMEDC  DSECT
FNAME    DS   XL(8*MAXASCBS)
RECDSECT DSECT
YYDDD    DS   F
TIME     DS   F
IPLDAT   DS   F
IPLTIM   DS   F
CURSTC   DS   F
CURTSO   DS   F
CURJOB   DS   F
XCOMIO   DS   F
SPARES   DS   2F
ANAME    DS   XL(8*MAXASCBS)
ACPU     DS   XL(4*MAXASCBS)
AIO      DS   XL(4*MAXASCBS)
APG      DS   XL(4*MAXASCBS)
UCB      DS   XL(4*MAXUCBS)
RECEND   EQU  *
         ORG  RECDSECT
LREC     EQU  RECEND-RECDSECT
REC      DS   XL(LREC)
         ORG
         END
