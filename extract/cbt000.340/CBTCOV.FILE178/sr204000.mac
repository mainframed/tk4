*          DATA SET SR204000   AT LEVEL 006 AS OF 02/28/77
         TITLE 'SR204000  BDAM FILE INTERFACE SUBROUTINE'
*              AUTHOR.   DON HIGGINS.
*              DATE.     02/21/76.
*              REMARKS.  THIS MODULE PROVIDES BDAM/QSAM FILE ACCESS TO
*                        ANY CALLING PROGRAM AS FOLLOWS.
*              CALL.
*                   CALL DCALL('SR204000',OP,TYPE,FILE,KEY,REC,STAT)
*                        DCALL IS DYNAMIC CALL INTERFACE (SR201000).
*                        'SR204000' IS NAME OF DYNAMICALLY CALLED
*                                   ISAM INTERFACE MODULE.
*                        OP - OPERATION CODE (FIRST ARG.- 4 BYTE BINARY
*                             1    READ
*                             2    WRITE
*                             3    OPEN
*                             4    CLOSE
*                             5    SET STARTING POSITION
*                             6    SET GET LOCATE MODE (DEFAULT MOVE)
*                        TYPE OF ACCESS - 4 BYTE BINARY
*                             1    SEQUENTIAL READ ONLY
*                             2    SEQUENTIAL WRITE ONLY (CREATE)
*                             3    SEQUENTIAL UPDATE
*                             4    RANDOM READ ONLY
*                             5    RANDOM UPDATE
*                        FILE NAME - 8 BYTE DDNAME ( THIS ARGUMENT IS
*                                    USED TO STORE ADDRESS OF FILE
*                                    CONTROL BLOCK WHILE FILE IS OPEN)
*                        KEY - KEY FOR CURRENT RECORD - 4 BYTE REC NO.
*                        REC - RECORD AREA OR ADDRESS FOR LOCATE MODE
*                        STAT - STATUS CODE - 4 BYTE BINARY
*                             1    OPERATION SUCCESSFUL
*                             2    NO RECORD FOUND
*                             3    END OF FILE
*              ABENDS.
*                   101  FILE NOT OPEN
*                   102  INVALID OPERATION
*                   103  INVALID TYPE
*                   104  FILE ALREADY OPEN
*                   105  FILE ALREADY CLOSED
*                   106  RECORD LENGTH CHANGED FOR QISAM UPDATE
*                   107  I/O ERROR DETECTED IN SYNAD
*              NOTES.
*                   1.  THIS ISAM INTERFACE SUPPORTS DUMMY FILES.
*
*
*
         TITLE 'MAIN'
SR203000 SUBENTRY BASES=(R13,R12)
         LM    R2,R7,0(R1)
         MVI   STATUS,1
         MVC   OP,3(R2)
         MVC   TYPE,3(R3)
         DOCASE OP
               CASE 1
                 PM READ
               ESAC
               CASE 2
                 PM WRITE
               ESAC
               CASE 3
                 PM OPEN
               ESAC
               CASE 4
                 PM CLOSE
               ESAC
               CASE 5
                 PM START
               ESAC
               CASE 6
                 PM SETGL
               ESAC
               CASE ELSE
                    ABEND 102,DUMP
               ESAC
         ESACOD
         MVC   0(4,R7),FSTATUS
         SUBEXIT
         TITLE 'READ'
READ     PENTRY
         IF    (CLI,0(R4),FCBID,NE)
               ABEND 101,DUMP
         FI
         L     R4,0(R4)
         USING FCB,R4
         LA    R8,FCBDCB
         USING IHADCB,R8
         IF    (TM,DCBOFLGS,X'10',Z)
               IF   (CLI,TYPE,4,NL)
                    MVI  STATUS,2
               ELSE
                    MVI  STATUS,3
               FI
         FI
         DOCASE TYPE
               CASE 1,3
                 PM READS
               ESAC
               CASE 4,5
                 PM READR
               ESAC
               CASE ELSE
                    ABEND 103,DUMP
               ESAC
         ESACOD
         PEXIT
         TITLE 'WRITE'
WRITE    PENTRY
         IF    (CLI,0(R4),FCBID,NE)
               ABEND 101,DUMP
         FI
         L     R4,0(R4)
         USING FCB,R4
         LA    R8,FCBDCB
         USING IHADCB,R8
         IF    (TM,DCBOFLGS,X'10',Z)
               PEXIT
         FI
         DOCASE TYPE
               CASE 2
                 PM WRITESWO
               ESAC
               CASE 3
                 PM WRITESU
               ESAC
               CASE 5
                 PM WRITERU
               ESAC
               CASE ELSE
                    ABEND 103,DUMP
               ESAC
         ESACOD
         PEXIT
         TITLE 'OPEN'
OPEN     PENTRY
         IF    (CLI,0(R4),FCBID,EQ)
               ABEND 104 DUMP
         FI
         LA    R0,LFCB
         GETMAIN R,LV=(0)
         MVC   FCBDDNAM-FCB(8,R1),0(R4)
         ST    R1,0(R4)
         MVI   0(R4),FCBID
         LR    R4,R1
         USING FCB,R4
         LA    R8,FCBDCB
         USING IHADCB,R8
         XC    FCBDECB,FCBDECB
         XC    FCBOPT,FCBOPT
         XC    FCBWORK,FCBWORK
         XC    FCBAREA,FCBAREA
         FINDDD FCBDDNAM
         IF    (LTR,R1,R1,Z),OR,(CLC,18(2,R1),=XL2'00',EQ)
               XC   FCBDCB,FCBDCB
               PEXIT
         FI
         DOCASE TYPE
               CASE 1
                    MVC  FCBDCB,DCBSRO
                    MVC  DCBDDNAM,FCBDDNAM
                    OPEN ((R8),(INPUT))
               ESAC
               CASE 2
                    MVC FCBDCB,DCBSWO
                    MVC  DCBDDNAM,FCBDDNAM
                    OPEN ((R8),(OUTPUT))
               ESAC
               CASE 3
                    MVC FCBDCB,DCBSU
                    MVC  DCBDDNAM,FCBDDNAM
                    OPEN ((R8),(UPDAT))
               ESAC
               CASE 4
                    MVC  FCBDECB,DECBRRO
                    ST   R8,FCBADCB
                    MVC  FCBDCB,DCBRRO
                    MVC  DCBDDNAM,FCBDDNAM
                    OPEN ((R8),(INPUT))
                    LA   R0,16
                    AH   R0,DCBBLKSI
                    GETMAIN R,LV=(0)
                    ST   R1,FCBAREA
               ESAC
               CASE 5
                    MVC  FCBDECB,DECBRU
                    ST   R8,FCBADCB
                    MVC  FCBDCB,DCBRU
                    MVC  DCBDDNAM,FCBDDNAM
                    OPEN ((R8),(UPDAT))
                    LA   R0,16
                    AH   R0,DCBBLKSI
                    GETMAIN R,LV=(0)
                    ST   R1,FCBAREA
               ESAC
               CASE ELSE
                    ABEND 103,DUMP
               ESAC
         ESACOD
         PEXIT
         TITLE 'CLOSE'
CLOSE    PENTRY
         IF    (CLI,0(R4),FCBID,NE)
               ABEND 105,DUMP
         FI
         LR    R9,R4
         L     R4,0(R4)
         USING FCB,R4
         LA    R8,FCBDCB
         USING IHADCB,R8
         IF    (TM,DCBOFLGS,X'10',O)
               L     R1,FCBAREA
               IF    (LTR,R1,R1,NZ)
                     LA   R0,16
                     AH   R0,DCBBLKSI
                     FREEMAIN R,LV=(0),A=(1)
               FI
         FI
         CLOSE ((R8))
         MVC   0(8,R9),FCBDDNAM
         LA    R0,LFCB
         LR    R1,R4
         FREEMAIN R,LV=(0),A=(1)
         PEXIT
         TITLE 'START'
START    PENTRY
         IF    (CLI,0(R4),FCBID,NE)
               ABEND 101,DUMP
         FI
         L     R4,0(R4)
         USING FCB,R4
         LA    R8,FCBDCB
         USING IHADCB,R8
         IF    (TM,DCBOFLGS,X'10',O)
*              SETL  (R8),KH,(R5)
         FI
         PEXIT
         TITLE 'SETGL - SET LOCATE MODE TO RETURN ONLY RECORD ADDR'
SETGL    PENTRY
         IF    (CLI,0(R4),FCBID,NE)
               ABEND 101,DUMP
         FI
         L     R4,0(R4)
         USING FCB,R4
         MVI   FCBOPT1,TRUE
         PEXIT
         TITLE 'READSRO - READ SEQUENTIAL'
READS    PENTRY
         GET   (R8)
         ST    R1,FCBAREC
         PM    MOVEREC
         PEXIT
EOFS     MVI   STATUS,3
         PEXIT
         TITLE 'MOVEREC - MOVE RECORD TO RECORD AREA'
MOVEREC  PENTRY
         L     R1,FCBAREA
         IF    (CLI,FCBOPT1,TRUE,EQ)
               ST   R1,0(R6)
               PEXIT
         FI
         LH    R15,DCBBLKSI
         LR    R14,R1
         LR    R0,R6
         LR    R1,R15
         MVCL R0,R14
         PEXIT
         TITLE 'READR - READ RANDOM '
READR    PENTRY
         LA    R9,FCBDECB
         AAI   R5,1
         ST    R5,FCBAKEY
         L     R10,FCBAREA
         READ  (R9),DI,,(R10),'S',,(R5),MF=E
         CHECK (R9)
         IF    (TM,FCBECB+1,X'FF',NZ)
               MVI  STATUS,2
               PEXIT
         FI
         PM    MOVEREC
         PEXIT
         TITLE 'WRITESWO - WRITE SEQUENTIAL ONLY (CREATE)'
WRITESWO PENTRY
         PUT   (R8),(R6)
         PEXIT
         TITLE 'WRITESU - WRITE SEQUENTIAL UPDATE'
WRITESU  PENTRY
         IF    (CLI,FCBOPT1,TRUE,NE)
               L    R14,FCBAREC
               IF   (TM,DCBRECFM,X'40',O)
                    LH   R15,0(R14)
                    IF   (CH,R15,0(R6),NE)
                         ABEND 106,DUMP
                    FI
               ELSE
                    LH   R15,DCBLRECL
               FI
               LR   R0,R6
               LR   R1,R15
               MVCL R14,R0
         FI
         PUTX  (R8)
         PEXIT
         TITLE 'WRITERU - WRITE RANDOM UPDATE'
WRITERU  PENTRY
         LA    R9,FCBDECB
         ST    R5,FCBAKEY
         L     R10,FCBWORK
         LA    R14,16(R10)
         LH    R15,DCBBLKSI
         LR    R11,R15
         LR    R1,R15
         LR    R0,R6
         MVCL  R14,R0
         WRITE (R9),DI,,(R10),(R11),,(R5),MF=E
         CHECK (R9)
         PEXIT
         TITLE 'COMMON DATA'
         EQUAL
FCBID    EQU   X'EE'
DCBSRO   DCB   DSORG=PS,DDNAME=X,MACRF=(GL),EODAD=EOFS
DCBSWO   DCB   DSORG=PS,DDNAME=X,MACRF=(PM)
DCBSU    DCB   DSORG=PS,DDNAME=X,MACRF=(GL,PM),EODAD=EOFS
DCBRRO   DCB   DSORG=DA,DDNAME=X,MACRF=(RIC),EXLST=EXITLIST,           X
               SYNAD=SYNADRTN,OPTCD=R
DCBRU    DCB   DSORG=DA,DDNAME=X,MACRF=(RIC,WIC),EXLST=EXITLIST,       X
               SYNAD=SYNADRTN,OPTCD=R
         DROP
SYNADRTN TAG
         USING SYNADRTN,R15
         USING FCBDECB,R1
         IF    (TM,FCBECB+1,X'FF',NZ)
               ABEND 107,DUMP
         FI
         BR    R14
EXITLIST DS    0F
         DC    X'85',AL3(EXITRTN)
         DROP
EXITRTN  TAG
         USING EXITRTN,R15
         STM   R0,R15,EXITSAVE
         DROP
         BALR  R12,0
         USING *,R12
         LR    R2,R1
         USING IHADCB,R2
* OPEN INITIALIZATION CODE IF ANY
         LM    R0,R15,EXITSAVE
         BR    R14
         LTORG
         DROP
EXITSAVE DC    16F'0'
OP       DC    X'00'
TYPE     DC    X'00'
FSTATUS  DC    F'0'
STATUS   EQU   FSTATUS+3
         READ  DECBRRO,DI,0,0,'S',MF=L
         READ  DECBRU,DI,0,0,'S',MF=L
TRUE     EQU   1
FALSE    EQU   0
         TITLE 'DSECTS'
         DCBD  DSORG=(DA,QS)
LDCB     EQU   *-IHADCB
FCB      DSECT
FCBDDNAM DS    CL8
FCBOPT   DS   XL4
FCBOPT1  EQU   FCBOPT+0  GET LOCATE TRUE/FALSE
FCBOPT2  EQU   FCBOPT+1  UPDATE PENDING TRUE/FALSE
FCBOPT3  EQU   FCBOPT+2  SPARE
FCBOPT4  EQU   FCBOPT+3  SPARE
FCBWORK  DS    A         AREA FOR WRITE ADD (16+LRECL)
FCBAREA  DS    A         AREA FOR READ (16+BLKSI)
FCBDECB  DS    0XL26
FCBECB   DS    XL4
FCBTYPE  DS    XL2
FCBLRECL DS    XL2
FCBADCB  DS    A
FCBABUF  DS    A
FCBAREC  DS    A
FCBAKEY  DS    A
FCBEXCD1 DS    X
FCBEXCD2 DS    X
         DS    XL2
FCBDCB   DS    XL(LDCB)
LFCB     EQU   *-FCB
         END
