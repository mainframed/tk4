C          DATA SET CS326000   AT LEVEL 002 AS OF 11/26/79
C              PGM-ID.   CS326000. (COPIED AND MODIFIED FROM GU949000)
C              DATE.     09/28/79.
C              AUTHOR.   DON HIGGINS
C              REMARKS.  THIS PROGRAM REPORTS INFORMATION FROM
C                        DIRECT ACCESS FILE UPDATED BY CONTINUOUS
C                        MONITOR.
C              MAINTENANCE.
C
C              REFERENCES.
C                  GC28-0708-0 OS/VS2 DEBUGGING HANDBOOK VOL. 1
C                  GC28-0709-1 OS/VS2 DEBUGGING HANDBOOK VOL. 2
C                  GC28-0710-0 OS/VS2 DEBUGGING HANDBOOK VOL. 3
C                  GC28-0886-0 OS/VS2 MVS PERFORMANCE NOTEBOOK
C                  GC28-0648-2 OS/VS2 TSO GUIDE TO COMMAND PROCESSORS
C                  GC28-0683-1 OS/VS2 SUPR. SERVICES MACRO INSTR.
C                  SY28-0715-1 OS/VS2 SYSTEM LOGIC LIBRARY
C              FILES.
C                  FT11F001 - UCB DESCRIPTION FILE
C
C                   01-03 UCB ID
C                   04-11 UCB DESCRIPTION
C
C                  FT10F001 - DIRECT ACCESS LOG FILE
C
C                     THIS FILE CONTAINS A RECORD FOR EACH INTERVAL
C                     AND WRAPS AROUND EACH TIME THE FILE FILLS UP.
C
C                     RECORD LAYOUT IN WORDS (ALL VALUES ARE BINARY)
C
C                     FIRST RECORD IS USED TO STORE FIXED DATA
C                       1 TINTVL    - INTERVAL IN MINUTES
C                       2 MAXREC    - MAXIMUM RECORDS IN FILE
C                      10 FNAME(10)   ASCBS TO BE ALWAYS LOGGED
C
C                     SECOND THROUGH LAST RECORD ARE AS FOLLOWS
C
C
C
C                     MVS(10)
C
C                       1 YYDDD    JULIAN DATE
C                       2 TIME     TIME OF DAY (0.01 SECONDS)
C                       3 IPLDAT   IPL JULIAN DATE
C                       4 IPLTIM   IPL TIME
C                       5 CURSTC   CURRENT SYSTEM TASKS
C                       6 CURTSO   CURRENT TSO TASKS
C                       7 CURJOB   CURRENT JOBS
C                       8 XCOMIO   XCOM I/O TOTAL SINCE IPL
C                       9 SPARE
C                      10 SPARE
C
C                     ANAME(10)    ADDRESS SPACE NAMES
C                                    (8 CHARACTER NAMES)
C
C                     ACPU(10)     ADDRESS SPACE CPU
C
C                     AIO(10)      ADDRESS SPACE I/O
C
C                     APG(10)      ADDRESS SPACE PAGING
C
C                       THE ABOVE 4 ARRAYS CONTAIN DATA
C                       ON THE ADDRESS SPACES NAMED IN
C                       THE ARRAY FNAME(10).
C
C                     UCB(200)     ONLINE UCB SIO COUNTS
C
C                                    0-1 UCB ID X'0CUU'
C                                    2-3 UCB UNSIGNED SIO COUNT
C
C                FT21F001 - TABLE OF CONTENTS (MOD)
C
C                FT16F001 - REPORTS PASSED TO CS312000
C
C
C
C
C     FILE DATA
C
      IMPLICIT INTEGER(A-Z)
      DEFINE FILE 10(10000,260,U,IX10)
      INTEGER MAXREC/10000/,MAXWDS/260/,MAXC/1040/
      INTEGER REC(260),LREC(260)
      INTEGER UCB(200),LUCB(200),MAXUCB/200/
      INTEGER UCBRCH(16)/'0','1','2','3','4','5','6','7'
     *                  ,'8','9','A','B','C','D','E','F'/
      INTEGER UCBR(200),LUCBR(200),UCBRID(200),UCBRSV(200)
      INTEGER UCBRIU(200),UCBRLS(200),UCBRHS(200),UCBRAS(200)
      REAL*8  UCBDSC
      INTEGER MAXRNG/0/,MAXRP/16/
      INTEGER FMAST/10/,FRPT/16/,FCTL/5/,FTOC/21/
      INTEGER LINE/0/,MAXLN/50/,PAGE/0/,DTIME(6)
      INTEGER EOF/0/,FALSE/0/,TRUE/1/
      INTEGER TLAST/0/,TINTVL/15/
      INTEGER SREL/-3/,EREL/0/
      INTEGER SDAY/0/,EDAY/0/
      INTEGER SHH/8/,SMM/0/,EHH/17/,EMM/0/
      INTEGER MODE/1/,MODEI/1/,MODEP/2/
      REAL*8  GDATE
      INTEGER UCBID,UCBSIO
      INTEGER MAXSIO/0/,SELUCB/'00E'/,SUCB/'100'/,EUCB/'FFF'/
      INTEGER MAXPS/3000/,PSCHAR/'S'/
      INTEGER ACPU(10),AIO(10),APG(10),MAXAS/10/
      INTEGER LCPU(10),LIO(10),LPG(10)
      REAL RPG
      REAL*8 LNAME(10),TASK/'TC006ROP'/
      REAL*8 ANAME(10),FNAME(10)/10*' '/,BLANK/' '/
      INTEGER PLOT(50)/50*' '/,MAXP/50/
      INTEGER MAXPC/100/,MAXPI/10000/,MAXPM/2000/
      INTEGER PCCHAR/'C'/,PICHAR/'I'/,PMCHAR/'M'/,PBLK/' '/,BLK/' '/
      INTEGER START/'STRT'/,DOWN/'DOWN'/,BUMP/'BUMP'/,IBLK/' '/
      EQUIVALENCE
     *   (LREC(01),LYYDDD)
     *  ,(LREC(02),LTIME)
     *  ,(LREC(03),LIPLDT)
     *  ,(LREC(04),LIPLTM)
     *  ,(LREC(08),LXCOM)
     *  ,(LREC(11),LNAME(1))
     *  ,(LREC(31),LCPU(1))
     *  ,(LREC(41),LIO(1))
     *  ,(LREC(51),LPG(1))
     *  ,(LREC(61),LUCB(1))
      EQUIVALENCE
     *   (REC(01),YYDDD)
     *  ,(REC(02),TIME)
     *  ,(REC(03),IPLDAT)
     *  ,(REC(04),IPLTIM)
     *  ,(REC(05),CURSTC)
     *  ,(REC(06),CURTSO)
     *  ,(REC(07),CURJOB)
     *  ,(REC(08),XCOM)
     *  ,(REC(11),ANAME(1))
     *  ,(REC(31),ACPU(1))
     *  ,(REC(41),AIO(1))
     *  ,(REC(51),APG(1))
     *  ,(REC(61),UCB(1))
C
C     FORMATS
C
    1 FORMAT(
     *  '1','CS326R',I2,' SMF ANALYSIS REPORT'
     * ,1X,A8,6A4,5X,'PAGE',I5
     * ,T100,'CS326000 REL 79.04.00 11/26/79'
     */)
    2 FORMAT(
     *  1X,'    71     CICS INTERRUPTION REPORT'
     * /1X,'    72     CICS UTILIZATION  REPORT 8-5'
     * /1X,'    73     CICS UTILIZATION  GRAPH  8-5'
     * /1X,'    74     DEVICE UTILIZATION REPORT 8-5'
     * /1X,'    75     DEVICE UTILIZATION REPORTS 12-8, 8-4, AND 4-12'
     *)
   40 FORMAT(' INVALID COMMAND =',I3,' CS326 TERMINATED')
   50 FORMAT(
     * /1X,'PERIOD',2(I6,I3,I2,2X)
     */)
   60 FORMAT(
     * /1X,'NO VALID RECORDS FOUND TO OBTAIN RANGE FROM PERIOD'
     */)
C
C     MAINLINE
C
      PM INIT
      PM   GET
      DO   WHILE,(EOF.NE.TRUE)
           PM PROC
           PM GET
      OD
      STOP
C
C     INIT  - SET MODE AND LOAD ASCBS TO BE MONITORED
C
      PENTRY INIT
      CALL NOSTAE
      CALL NOSPIE
      CALL SBREAK(ECB)
      T5PM=17*60*60*100
      T8AM=8*60*60*100
      T24HR=24*60*60*100
      CALL OSDATE(GDATE)
      CALL TIMER(12,DTIME)
      WRITE(FTOC,2)
      CALL TIMER(17,TODAY)
      CALL TIMER(9,TIME)
      CALL HHMMSS(TIME,HH,MM,SS)
      PM   CALCPD
      READ(FMAST'1)REC
      TINTVL=REC(1)
      MAXREC=REC(2)
      DO   I=1,MAXAS
           FNAME(I)=ANAME(I)
      OD
      MAXF=1
      DO   I=1,MAXAS
           IF   (FNAME(I).NE.BLANK)MAXF=I
      OD
      PM   SETRNG
      PEXIT
C
C     GET
C
      PENTRY GET
      READ(FCTL,*,END=500)CMD
      PEXIT
  500 EOF=TRUE
      PEXIT
C
C     CALCPD - CALCULATE PERIOD
C
      PENTRY CALCPD
      IF   (MODE.EQ.MODEI)
           CALL TIMER(17,PSDAY)
           PEDAY=PSDAY
           CALL TIMER(9,TIME)
           PSTIME=TIME+SREL*TINTVL*6000
           PETIME=TIME+EREL*TINTVL*6000
      ELSE
           IF   (SDAY.LT.10000)
                CALL TIMER(17,TODAY)
                PSDAY=TODAY+SDAY
           ELSE
                PSDAY=SDAY
           FI
           IF   (EDAY.LT.10000)
                CALL TIMER(17,TODAY)
                PEDAY=TODAY+EDAY
           ELSE
                PEDAY=EDAY
           FI
           PSTIME=(SHH*60+SMM)*6000
           PETIME=(EHH*60+EMM)*6000
      FI
      CALL HHMMSS(PSTIME,PSHH,PSMM,PSSS)
      CALL HHMMSS(PETIME,PEHH,PEMM,PESS)
      PEXIT
C
C     STARTI - START INTERVAL
C
      PENTRY STARTI
      PM   CALCPD
      YYDDD=PEDAY
      TIME=PETIME
      PM   GETKEY
      ENDKEY=KEY
      YYDDD=PSDAY
      TIME=PSTIME
      PM   GETKEY
      READ(FMAST'KEY)REC
      PEXIT
C
C     NEXTI - PERFORM PROCESSING FOR NEXT INTERVAL TO BE USED
C
      PENTRY NEXTI
      CALL MVCL(LREC,MAXC,REC,MAXC,0)
      KEY=KEY+1
      IF   (KEY.GT.MAXREC)KEY=2
      READ(FMAST'KEY)REC
      CALL HHMMSS(TIME,HH,MM,SS)
      HHMM=HH*100+MM
      PERIOD=TIME-LTIME
      IF ((YYDDD.GE.PSDAY).AND.(IPLTIM.EQ.LIPLTM))
          IF  ((YYDDD.EQ.LYYDDD).AND.(PERIOD.GT.0))
              GOODI=TRUE
          ELSEIF ((YYDDD.EQ.LYYDDD+1).AND.(PERIOD.LT.0))
              PERIOD=PERIOD+T24HR
              GOODI=TRUE
          ELSE
              GOODI=FALSE
          FI
      ELSE
          GOODI=FALSE
      FI
      PEXIT
C
C     FNDTSK - FIND MATCHING TASK
C
      PENTRY FNDTSK
      DO J=1,MAXAS
         IF   (LNAME(J).EQ.ANAME(I))
              FOUND=TRUE
              PEXIT
         FI
      OD
      FOUND=FALSE
      PEXIT
C
C     SETRNG - SET RANGE OF UCBS
C
      PENTRY SETRNG
      YYDDD=PEDAY
      TIME=PETIME
      PM   GETKEY
      READ(FMAST'KEY)REC
      IF   (YYDDD.NE.PEDAY)
           YYDDD=PSDAY
           TIME=PSTIME
           PM   GETKEY
           READ(FMAST'KEY)REC
           IF   (YYDDD.NE.PSDAY)
                LINE=LINE-1
                PM   PRTCTL
                WRITE(FRPT,60)
                UCBRID(1)=SUCB
                UCBRID(2)=EUCB
                MAXRNG=2
                PEXIT
           FI
      FI
      CALL CS305(8,SUCB,UCB,MAXUCB,SPTR,SIO)
      CALL CS305(8,EUCB,UCB,MAXUCB,EPTR,SIO)
      MAXRNG=0
      DO   I=SPTR,EPTR
           MAXRNG=MAXRNG+1
           CALL CS305(7,UCB(I),UCBRID(MAXRNG),UCBS)
      OD
      PEXIT
C
C     GETRNG - GET SIO COUNTS FOR RANGE OF UCBS AND SAVE LAST SIO
C
      PENTRY GETRNG
      DO   I=1,MAXRNG
           LUCBR(I)=UCBR(I)
           CALL CS305(8,UCBRID(I),UCB,MAXUCB,UCBPTR,UCBR(I))
      OD
      PEXIT
C
C     PROC - PROCESS TRANSACTION
C
      PENTRY PROC
      DOCASE CMD
        CASE 1
          PM CMD1
        ESAC
        CASE 2
          PM CMD2
        ESAC
        CASE 3
          PM CMD3
        ESAC
        CASE 4
          PM CMD4
        ESAC
        CASE 5
          PM CMD5
        ESAC
        CASE 6
          PM CMD6
        ESAC
        CASE 7
          PM CMD7
        ESAC
        CASE 8
          PM CMD8
        ESAC
        CASE 11
          PM CMD11
        ESAC
        CASE 12
          PM CMD12
        ESAC
        CASE 13
          PM CMD13
        ESAC
        CASE 14
          PM CMD14
        ESAC
        CASE 15
          PM CMD15
        ESAC
        CASE 16
          PM CMD16
        ESAC
        CASE 17
          PM CMD17
        ESAC
        CASE 18
          PM CMD18
        ESAC
        CASE 19
          PM CMD19
        ESAC
        CASE 20
          PM CMD20
        ESAC
        CASE 23
          PM CMD23
        ESAC
        CASE 31
          PM CMD31
        ESAC
        CASE 32
          PM CMD32
        ESAC
        CASE 33
          PM CMD33
        ESAC
        CASE 41
          PM CMD41
        ESAC
        CASE 42
          PM CMD42
        ESAC
        CASE 43
          PM CMD43
        ESAC
        CASE 51
          PM CMD51
        ESAC
        CASE 99
          IF  (CMD.EQ.99)STOP
        ESAC
        CASE ELSE
          LINE=LINE-1
          PM   PRTCTL
          WRITE(FRPT,40)CMD
          IF   (CMD.EQ.CMD)STOP
        ESAC
      ESACOD
      PEXIT
C
C     CMD1  - DISPLAY ALL TASK CPU, IO, AND MEMORY
C
      PENTRY CMD1
      LINE=LINE-5
      PM   PRTCTL
      WRITE(FRPT,1000)
 1000 FORMAT(/1X,'CMD1 - DISPLAY ALL TASK CPU, IO, AND MEMORY'
     * //'  DATE TIME --NAME--   CPU%     IO MEMORY'
     */)
      PM   STARTI
      DO   UNTIL,(KEY.EQ.ENDKEY)
           IF   (ECB.NE.0)PEXIT
           PM   NEXTI
           IF   (GOODI.EQ.TRUE)
             DO   I=1,MAXAS
              IF (ANAME(I).NE.BLANK)
                PM   FNDTSK
                IF   (FOUND.EQ.TRUE)
                     CPU=ACPU(I)-LCPU(J)
                     IO=AIO(I)-LIO(J)
                     RPG=APG(I)-LPG(J)
                     IF   (CPU.LT.0)CPU=ACPU(I)
                     IF   (IO.LT.0)IO=AIO(I)
                     IF   (RPG.LT.0.)RPG=APG(I)
                ELSE
                     CPU=ACPU(I)
                     IO=AIO(I)
                     RPG=APG(I)
                FI
                DCPU=CPU*100/PERIOD
                DIO=IO
                IF   (CPU.NE.0)
                     DMEM=RPG*2**16*4/(CPU*10)
                ELSE
                     DMEM=0
                FI
                LINE=LINE-1
                PM   PRTCTL
                WRITE(FRPT,1030)YYDDD,HHMM,ANAME(I),DCPU,DIO,DMEM
 1030           FORMAT(1X,I5,I5,1X,A8,3I7)
              FI
             OD
           FI
      OD
      PEXIT
C
C     CMD2  - DISPLAY FIXED TASK CPU
C
      PENTRY CMD2
      LINE=LINE-4
      PM   PRTCTL
      WRITE(FRPT,2000)
 2000 FORMAT(/1X,'CMD2 - DISPLAY FIXED TASK CPU FOR PERIOD')
      WRITE(FRPT,2020)(FNAME(I),I=1,MAXF)
 2020 FORMAT(
     * /1X,' DATE TIME XCOM',10(1X,A8))
      PM   STARTI
      DO   UNTIL,(KEY.EQ.ENDKEY)
           IF   (ECB.NE.0)PEXIT
           PM   NEXTI
           IF   (GOODI.EQ.TRUE)
                DO   I=1,MAXF
                     CPU=ACPU(I)-LCPU(I)
                     IF   (CPU.LT.0)CPU=ACPU(I)
                     LCPU(I)=CPU*100/PERIOD
                OD
                LXCOM=XCOM-LXCOM
                LINE=LINE-1
                PM  PRTCTL
                WRITE(FRPT,2050)YYDDD,HHMM,LXCOM,(LCPU(I),I=1,MAXF)
 2050           FORMAT(1X,2I5,I5,10I9)
           FI
      OD
      PEXIT
C
C     CMD3  - DISPLAY FIXED TASK IO
C
      PENTRY CMD3
      LINE=LINE-4
      PM   PRTCTL
      WRITE(FRPT,3000)
 3000 FORMAT(/1X,'CMD3 - DISPLAY FIXED TASK IO FOR PERIOD')
      WRITE(FRPT,3020)(FNAME(I),I=1,MAXF)
 3020 FORMAT(
     * /1X,' DATE TIME XCOM',10(1X,A8))
      PM   STARTI
      DO   UNTIL,(KEY.EQ.ENDKEY)
           IF   (ECB.NE.0)PEXIT
           PM   NEXTI
           IF   (GOODI.EQ.TRUE)
                DO   I=1,MAXF
                     IO=AIO(I)-LIO(I)
                     IF   (IO.LT.0)IO=AIO(I)
                     LIO(I)=IO
                OD
                LXCOM=XCOM-LXCOM
                LINE=LINE-1
                PM   PRTCTL
                WRITE(FRPT,3050)YYDDD,HHMM,LXCOM,(LIO(I),I=1,MAXF)
 3050           FORMAT(1X,2I5,I5,10I9)
           FI
      OD
      PEXIT
C
C     CMD4  - DISPLAY FIXED TASK CPU
C
      PENTRY CMD4
      LINE=LINE-4
      PM   PRTCTL
      WRITE(FRPT,4000)
 4000 FORMAT(/1X,'CMD4 - DISPLAY FIXED TASK MEMORY FOR PERIOD')
      WRITE(FRPT,4020)(FNAME(I),I=1,MAXF)
 4020 FORMAT(
     * /1X,' DATE TIME XCOM',10(1X,A8))
      PM   STARTI
      DO   UNTIL,(KEY.EQ.ENDKEY)
           IF   (ECB.NE.0)PEXIT
           PM   NEXTI
           IF   (GOODI.EQ.TRUE)
                DO   I=1,MAXF
                     CPU=ACPU(I)-LCPU(I)
                     RPG=APG(I)-LPG(I)
                     IF   (CPU.LT.0)
                          CPU=ACPU(I)
                          RPG=APG(I)
                     FI
                     IF   (CPU.GT.0)
                          LPG(I)=RPG*2**16*4/(CPU*10)
                     ELSE
                          LPG(I)=0
                     FI
                OD
                LXCOM=XCOM-LXCOM
                LINE=LINE-1
                PM   PRTCTL
                WRITE(FRPT,4050)YYDDD,HHMM,LXCOM,(LPG(I),I=1,MAXF)
 4050           FORMAT(1X,2I5,I5,10I9)
           FI
      OD
      PEXIT
C
C     CMD5  - DISPLAY TOTAL FIXED AND OTHER CPU, IO, AND MEMORY
C
      PENTRY CMD5
      LINE=LINE-5
      PM   PRTCTL
      WRITE(FRPT,5000)
 5000 FORMAT(/1X,'CMD5 - DISPLAY TOTAL FIXED AND OTHER CPU,IO,MEMORY')
      WRITE(FRPT,5020)
 5020 FORMAT(
     * /1X,'                 -- FIXED TASKS --  -- OTHER TASKS --'
     * /1X,' DATE TIME XCOM  CPU    I/O MEMORY  CPU    I/O MEMORY')
      PM   STARTI
      DO   UNTIL,(KEY.EQ.ENDKEY)
           IF   (ECB.NE.0)PEXIT
           PM   NEXTI
           IF   (GOODI.EQ.TRUE)
                TFCPU=0
                TFIO=0
                TFMEM=0
                TOCPU=0
                TOIO=0
                TOMEM=0
                DO   I=1,MAXAS
                 DO   J=1,MAXAS
                  IF ((ANAME(I).EQ.LNAME(J)).AND.(ANAME(I).NE.BLANK))
                     CPU=ACPU(I)-LCPU(J)
                     IO=AIO(I)-LIO(J)
                     RPG=APG(I)-LPG(J)
                     IF   (CPU.LT.0)
                          CPU=ACPU(I)
                          IO=AIO(I)
                          RPG=APG(I)
                     FI
                     IF   (CPU.GT.0)
                          MEM=RPG*2**16*4/(CPU*10)
                     ELSE
                          MEM=0
                     FI
                     IF   (I.LE.MAXF)
                          TFCPU=TFCPU+CPU
                          TFIO=TFIO+IO
                          TFMEM=TFMEM+MEM
                     ELSE
                         TOCPU=TOCPU+CPU
                         TOIO=TOIO+IO
                         TOMEM=TOMEM+MEM
                     FI
                  FI
                OD
             OD
           LXCOM=XCOM-LXCOM
           TFCPU=TFCPU*100/PERIOD
           TOCPU=TOCPU*100/PERIOD
           LINE=LINE-1
           PM   PRTCTL
           WRITE(FRPT,5050)YYDDD,HHMM,LXCOM
     *      ,TFCPU,TFIO,TFMEM,TOCPU,TOIO,TOMEM
 5050      FORMAT(1X,2I5,I5,I5,2I7,I5,2I7)
           FI
      OD
      PEXIT
C
C     CMD6  - DISPLAY SELECTED TASK CPU, IO, AND MEMORY
C
      PENTRY CMD6
      LINE=LINE-5
      PM   PRTCTL
      WRITE(FRPT,6000)
 6000 FORMAT(/1X,'CMD6 - DISPLAY SELECTED TASK CPU, IO, AND MEMORY')
      WRITE(FRPT,6020)TASK
 6020 FORMAT(
     * /1X,'SELECTED TASK IS ',A8
     *//1X,' DATE TIME    %CPU    I/O MEMORY'
     */)
      PM   STARTI
      TOTINT=0
      TOTCPU=0
      TOTIO=0
      TOTMEM=0
      DO   UNTIL,(KEY.EQ.ENDKEY)
           IF   (ECB.NE.0)PEXIT
           PM   NEXTI
           IF   (GOODI.EQ.TRUE)
            TOTINT=TOTINT+1
            DO   I=1,MAXAS
             IF (ANAME(I).EQ.TASK)
                DO   J=1,MAXAS
                  IF (LNAME(J).EQ.TASK)
                     CPU=ACPU(I)-LCPU(J)
                     IO=AIO(I)-LIO(J)
                     RPG=APG(I)-LPG(J)
                     IF   (CPU.LT.0)
                          CPU=ACPU(I)
                          IO=AIO(I)
                          RPG=APG(I)
                     FI
                     DCPU=CPU*100/PERIOD
                     DIO=IO
                     IF   (CPU.GT.0)
                          DMEM=RPG*2**16*4/(CPU*10)
                     ELSE
                          DMEM=0
                     FI
                     LINE=LINE-1
                     PM   PRTCTL
                     TOTCPU=TOTCPU+DCPU
                     TOTIO=TOTIO+DIO
                     TOTMEM=TOTMEM+DMEM
                     WRITE(FRPT,6030)YYDDD,HHMM,DCPU,DIO,DMEM
 6030                FORMAT(1X,2I5,1X,3I7)
                  FI
                OD
             FI
            OD
           FI
      OD
      IF   (TOTINT.GT.0)
           AVGCPU=TOTCPU/TOTINT
           AVGIO=TOTIO/TOTINT
           AVGMEM=TOTMEM/TOTINT
           LINE=LINE-2
           PM   PRTCTL
           WRITE(FRPT,6040)AVGCPU,AVGIO,AVGMEM
 6040      FORMAT(/1X,'  AVERAGE  ',3I7)
      FI
      PEXIT
C
C     CMD7  - GRAPH SELECTED TASK CPU, IO, AND MEMORY
C
      PENTRY CMD7
      LINE=LINE-8
      PM   PRTCTL
      WRITE(FRPT,7000)
 7000 FORMAT(/1X,'CMD7 - GRAPH SELECTED TASK CPU, IO, AND MEMORY')
      WRITE(FRPT,7020)TASK
 7020 FORMAT(
     * /1X,'SELECTED TASK IS ',A8
     * /1X,'C - CPU ON SCALE 0-100%'
     * /1X,'I - IO  ON SCALE 0-10000'
     * /1X,'M - MEM ON SCALE 0-2000'
     * /1X,' DATE TIME *',50('*'),'*'
     *)
      PM   STARTI
      DO   UNTIL,(KEY.EQ.ENDKEY)
           IF   (ECB.NE.0)PEXIT
           PM   NEXTI
           IF  (GOODI.EQ.TRUE)
            DO   I=1,MAXAS
             IF (ANAME(I).EQ.TASK)
                DO   J=1,MAXAS
                  IF (LNAME(J).EQ.TASK)
                     CPU=ACPU(I)-LCPU(J)
                     IO=AIO(I)-LIO(J)
                     RPG=APG(I)-LPG(J)
                     IF   (CPU.LT.0)
                          CPU=ACPU(I)
                          IO=AIO(I)
                          RPG=APG(I)
                     FI
                     PCPU=CPU*MAXP/PERIOD+1
                     IF   (PCPU.GT.MAXP)PCPU=MAXP
                     IF   (PCPU.LT.1)PCPU=1
                     PLOT(PCPU)=PCCHAR
                     PIO=IO*MAXP/MAXPI
                     IF   (PIO.GT.MAXP)PIO=MAXP
                     IF   (PIO.LT.1)PIO=1
                     PLOT(PIO)=PICHAR
                     IF   (CPU.NE.0)
                          MEM=RPG*2**16*4/(CPU*10)
                     ELSE
                          MEM=0
                     FI
                     PMEM=MEM*MAXP/MAXPM
                     IF   (PMEM.GT.MAXP)PMEM=MAXP
                     IF   (PMEM.LT.1)PMEM=1
                     PLOT(PMEM)=PMCHAR
                     LINE=LINE-1
                     PM   PRTCTL
                     WRITE(FRPT,7030)YYDDD,HHMM,PLOT
 7030                FORMAT(1X,2I5,1X,'*',50A1,'*')
                     PLOT(PCPU)=PBLK
                     PLOT(PIO)=PBLK
                     PLOT(PMEM)=PBLK
                  FI
                OD
             FI
            OD
           FI
      OD
      PEXIT
C
C     CMD8  - DISPLAY EXCEPTIONS FOR TASK
C
      PENTRY CMD8
      LINE=LINE-5
      PM   PRTCTL
      WRITE(FRPT,8000)
 8000 FORMAT(/1X,'CMD8 - DISPLAY EXCEPTIONS FOR TASK')
      WRITE(FRPT,8010)TASK
 8010 FORMAT(
     * /1X,'SELECTED TASK IS ',A8
     *//1X,' DATE TIME MONITOR SYSTEM TASK'
     */)
      PM   STARTI
      LASTIP=IPLTIM
      LASTI=TRUE
      DO   UNTIL,(KEY.EQ.ENDKEY)
           IF   (ECB.NE.0)PEXIT
           PM   NEXTI
           CHANGE=FALSE
           DMON=IBLK
           DSYS=IBLK
           DTASK=IBLK
           IF   (GOODI.NE.LASTI)
                CHANGE=TRUE
                IF   (GOODI.EQ.FALSE)
                     YYDDD=LYYDDD
                     CALL HHMMSS(LTIME,HH,MM,SS)
                     HHMM=HH*100+MM
                     DMON=DOWN
                ELSE
                     DMON=START
                FI
                LASTI=GOODI
           FI
           IF  (GOODI.EQ.TRUE)
            IF   (IPLTIM.NE.LASTIP)
                 LASTIP=IPLTIM
                 CHANGE=TRUE
                 DSYS=START
            FI
            DO   I=1,MAXAS
             IF (ANAME(I).EQ.TASK)
                DO   J=1,MAXAS
                  IF (LNAME(J).EQ.TASK)
                     CPU=ACPU(I)-LCPU(J)
                     IF   (CPU.LT.0)
                          CHANGE=TRUE
                          IF   (ACPU(I).EQ.0)
                               DTASK=DOWN
                          ELSE
                               DTASK=BUMP
                          FI
                     ELSEIF ((CPU.GT.0).AND.(LCPU(J).EQ.0))
                          CHANGE=TRUE
                          DTASK=START
                     FI
                  FI
                OD
             FI
            OD
           FI
           IF   (CHANGE.EQ.TRUE)
                LINE=LINE-1
                PM   PRTCTL
                WRITE(FRPT,8030)YYDDD,HHMM,DMON,DSYS,DTASK
 8030           FORMAT(1X,2I5,4X,A4,3X,A4,1X,A4)
           FI
      OD
      PEXIT
C
C     CMD11 - SET REALITVE PERIOD MODE
C
      PENTRY CMD11
      READ(FCTL,*)SREL,EREL
      MODE=MODEI
      PM   CALCPD
      LINE=LINE-1
      PM   PRTCTL
      WRITE(FRPT,50)PSDAY,PSHH,PSMM,PEDAY,PEHH,PEMM
      PEXIT
C
C     CMD12 - SET DAYS FOR FIXED PERIOD MODE
C
      PENTRY CMD12
      READ(FCTL,*)SDAY,EDAY
      MODE=MODEP
      PM   CALCPD
      LINE=LINE-1
      PM   PRTCTL
      WRITE(FRPT,50)PSDAY,PSHH,PSMM,PEDAY,PEHH,PEMM
      PEXIT
C
C     CMD13 - SET TIME FOR FIXED PERIOD MODE
C
      PENTRY CMD13
      READ(FCTL,*)SHH,SMM,EHH,EMM
      MODE=MODEP
      PM   CALCPD
      LINE=LINE-1
      PM   PRTCTL
      WRITE(FRPT,50)PSDAY,PSHH,PSMM,PEDAY,PEHH,PEMM
      PEXIT
C
C     CMD14 - SET SELECTED TASK
C
      PENTRY CMD14
      READ(FCTL,9010)TASK
 9010 FORMAT(A8)
      PEXIT
C
C     CMD15 - SWITCH MODES
C
      PENTRY CMD15
      IF   (MODE.EQ.MODEI)
           MODE=MODEP
      ELSE
           MODE=MODEI
      FI
      PM   CALCPD
      LINE=LINE-1
      PM   PRTCTL
      WRITE(FRPT,50)PSDAY,PSHH,PSMM,PEDAY,PEHH,PEMM
      PEXIT
C
C     CMD16 - SET UCB INTERVAL SIO LIMIT FOR DISPLAY COMMAND
C
      PENTRY CMD16
      READ(FCTL,*)MAXSIO
      PEXIT
C
C     CMD17 - SET SELECTED UCB FOR DISPLAY OR GRAPH
C
      PENTRY CMD17
      READ(FCTL,17010)SELUCB
17010 FORMAT(A4)
      PEXIT
C
C     CMD18 - SET SCALE FOR GRAPH OF UCB SIO COUNTS
C
      PENTRY CMD18
      READ(FCTL,*)MAXPS
      PEXIT
C
C     CMD19 - SET SELECTED UCB RANGE
C
      PENTRY CMD19
      READ(FCTL,19010)SUCB,EUCB
19010 FORMAT(2A4)
      PM   SETRNG
      PEXIT
C
C     CMD20 - SET SELECTED UCB RANGE
C
      PENTRY CMD20
      MAXRNG=0
      DO   I=1,MAXRP
           UCBRID(I)=BLK
      OD
      READ(FCTL,20010)(UCBRID(I),I=1,MAXRP)
20010 FORMAT(16A4)
      DO   I=1,MAXRP
           IF   (UCBRID(I).EQ.BLK)PEXIT
           MAXRNG=I
      OD
      PEXIT
C
C     CMD23 - DUMP SPECIFIC RECORD
C
      PENTRY CMD23
23010 FORMAT(
     * /1X,'KEY     ',I10
     * /1X,'YYDDD   ',I10
     * /1X,'TIME    ',I10,2I3
     * /1X,'IPLDAT  ',I10
     * /1X,'IPLTIM  ',I10
     * /1X,'CURSTC  ',I10
     * /1X,'CURTSO  ',I10
     * /1X,'CURJOB  ',I10
     * /1X,'XCOMIO  ',I10
     * /1X,'SPARE   ',I10
     * /1X,'SPARE   ',I10
     *)
23012 FORMAT(
     * /(/1X,'TASK=',A8,' CPU=',I10,' IO=',I10,' PG=',I10)
     *)
23014 FORMAT(
     * 1X,I3,' UCB=',A3,' SIO=',I6
     *)
      READ(FCTL,*)KEY
      IF   (KEY.GT.10000)
           YYDDD=KEY
           READ(FCTL,*)HH,MM
           TIME=(HH*60+MM)*6000
           PM   GETKEY
      FI
      READ(FMAST'KEY)REC
      CALL HHMMSS(TIME,HH,MM,SS)
      LINE=0
      PM   PRTCTL
      WRITE(FRPT,23010)KEY
     *  ,YYDDD,TIME,HH,MM,IPLDAT,IPLTIM
     *  ,(REC(I),I=5,10)
      WRITE(FRPT,23012)
     *   (ANAME(I),ACPU(I),AIO(I),APG(I),I=1,MAXAS)
      DO   I=1,MAXUCB
           IF   (ECB.NE.0)PEXIT
           IF   (UCB(I).NE.0)
                CALL CS305(7,UCB(I),UCBID,UCBSIO)
                LINE=LINE-1
                PM   PRTCTL
                WRITE(FRPT,23014)I,UCBID,UCBSIO
           FI
      OD
      PEXIT
C
C     CMD31 - DISPLAY ALL UCBS WITH SIO COUNT OVER LIMIT
C
      PENTRY CMD31
      LINE=LINE-5
      PM   PRTCTL
      WRITE(FRPT,31000)MAXSIO
31000 FORMAT(/1X,'CMD31 - DISPLAY ALL UCBS WITH SIO COUNT OVER',I6
     * //'  DATE TIME UCB  TOTAL I/S'
     */)
      PM   STARTI
      DO   UNTIL,(KEY.EQ.ENDKEY)
           IF   (ECB.NE.0)PEXIT
           PM   NEXTI
           IF   (GOODI.EQ.TRUE)
             DO   I=1,MAXUCB
              IF (UCB(I).NE.0)
                CALL CS305(7,UCB(I),UCBI,UCBS)
                CALL CS305(7,LUCB(I),LUCBI,LUCBS)
                IF   (UCBI.EQ.LUCBI)
                     SIO=UCBS-LUCBS
                     IF   (SIO.LT.0)SIO=SIO+65536
                     IF   (SIO.GT.MAXSIO)
                          SIOS=SIO*100/PERIOD
                          LINE=LINE-1
                          PM   PRTCTL
                          WRITE(FRPT,31030)YYDDD,HHMM,UCBI,SIO,SIOS
31030                     FORMAT(1X,I5,I5,1X,A4,I6,I4)
                     FI
                FI
              FI
             OD
           FI
      OD
      PEXIT
C
C     CMD32 - DISPLAY SELECTED UCB WITH SIO COUNT OVER LIMIT
C
      PENTRY CMD32
      LINE=LINE-5
      PM   PRTCTL
      WRITE(FRPT,32000)SELUCB,MAXSIO
32000 FORMAT(/1X,'CMD32 - DISPLAY UCB ',A4,' WITH SIO COUNT OVER',I6
     * //'  DATE TIME UCB   SIOS'
     */)
      PM   STARTI
      CALL CS305(8,SELUCB,UCB,MAXUCB,UCBPTR,UCBS)
      DO   UNTIL,(KEY.EQ.ENDKEY)
           IF   (ECB.NE.0)PEXIT
           LUCBS=UCBS
           PM   NEXTI
           CALL CS305(8,SELUCB,UCB,MAXUCB,UCBPTR,UCBS)
           IF   (GOODI.EQ.TRUE)
                SIO=UCBS-LUCBS
                IF   (SIO.LT.0)SIO=SIO+65536
                IF   (SIO.GT.MAXSIO)
                     LINE=LINE-1
                     PM   PRTCTL
                     WRITE(FRPT,32030)YYDDD,HHMM,SELUCB,SIO
32030                FORMAT(1X,I5,I5,1X,A4,I6)
                FI
           FI
      OD
      PEXIT
C
C     CMD33 - GRAPH SELECTED UCB SIO
C
      PENTRY CMD33
      LINE=LINE-6
      PM   PRTCTL
      WRITE(FRPT,33000)
33000 FORMAT(/1X,'CMD33 - GRAPH SELECTED UCB')
      WRITE(FRPT,33020)SELUCB,MAXPS
33020 FORMAT(
     * /1X,'SELECTED UCB IS ',A4
     * /1X,'S - SIO  ON SCALE OF 0 TO',I6
     * /1X,' DATE TIME *',50('*'),'*'
     *)
      PM   STARTI
      CALL CS305(8,SELUCB,UCB,MAXUCB,UCBPTR,UCBS)
      DO   UNTIL,(KEY.EQ.ENDKEY)
           IF   (ECB.NE.0)PEXIT
           LUCBS=UCBS
           PM   NEXTI
           CALL CS305(8,SELUCB,UCB,MAXUCB,UCBPTR,UCBS)
           IF  (GOODI.EQ.TRUE)
               SIO=UCBS-LUCBS
               IF   (SIO.LT.0)SIO=SIO+65536
               PSIO=SIO*MAXP/MAXPS
               IF   (PSIO.GT.MAXP)PSIO=MAXP
               IF   (PSIO.LT.1)PSIO=1
               PLOT(PSIO)=PSCHAR
               LINE=LINE-1
               PM   PRTCTL
               WRITE(FRPT,33030)YYDDD,HHMM,PLOT
33030          FORMAT(1X,2I5,1X,'*',50A1,'*')
               PLOT(PSIO)=PBLK
           FI
      OD
      PEXIT
C
C     CMD41 - TABULATE UCB RANGE OF SIO COUNTS
C
      PENTRY CMD41
      LINE=LINE-7
      PM   PRTCTL
      WRITE(FRPT,41000)UCBRID(1),UCBRID(MAXRNG),MAXSIO
41000 FORMAT(/1X,'CMD41 - TABULATE UCBS ',A4,'- ',A4
     * /'  WITH SIO COUNT OVER',I6
     *//'  DATE TIME UCB  TOTAL I/S'
     */)
      PM   STARTI
      PM   GETRNG
      DO   UNTIL,(KEY.EQ.ENDKEY)
           IF   (ECB.NE.0)PEXIT
           PM   NEXTI
           PM   GETRNG
           IF   (GOODI.EQ.TRUE)
             DO I=1,MAXRNG
                SIO=UCBR(I)-LUCBR(I)
                IF   (SIO.LT.0)SIO=SIO+65536
                IF   (SIO.GT.MAXSIO)
                     SIOS=SIO*100/PERIOD
                     LINE=LINE-1
                     PM   PRTCTL
                     WRITE(FRPT,41030)YYDDD,HHMM,UCBRID(I),SIO,SIOS
41030                FORMAT(1X,I5,I5,1X,A4,I6,I4)
                FI
             OD
           FI
      OD
      PEXIT
C
C     CMD42 - GRAPH SELECTED UCB SIO
C
      PENTRY CMD42
      LINE=LINE-1
      PM   PRTCTL
      WRITE(FRPT,42000)
42000 FORMAT(/1X,'CMD42 - GRAPH UCB RANGE')
      PM   STARTI
      MAXPLT=MAXRNG
      IF   (MAXPLT.GT.MAXRP)MAXPLT=MAXRP
      LINE=LINE-MAXPLT-5
      PM   PRTCTL
      WRITE(FRPT,42015)
     * (UCBRID(I),UCBRCH(I),I=1,MAXPLT)
42015 FORMAT(
     * /(/1X,' UCB ',A4,'IS ',A4)
     *)
      WRITE(FRPT,42020)MAXPS
42020 FORMAT(
     * /1X,' SCALE IS 0 TO',I6
     *//1X,' DATE TIME *',50('*'),'*'
     *)
      PM   GETRNG
      DO   UNTIL,(KEY.EQ.ENDKEY)
           IF   (ECB.NE.0)PEXIT
           PM   NEXTI
           PM   GETRNG
           IF  (GOODI.EQ.TRUE)
             DO I=1,MAXPLT
               SIO=UCBR(I)-LUCBR(I)
               IF   (SIO.LT.0)SIO=SIO+65536
               PSIO=SIO*MAXP/MAXPS
               IF   (PSIO.GT.MAXP)PSIO=MAXP
               IF   (PSIO.LT.1)PSIO=1
               PLOT(PSIO)=UCBRCH(I)
               UCBRSV(I)=PSIO
             OD
             LINE=LINE-1
             PM   PRTCTL
             WRITE(FRPT,42030)YYDDD,HHMM,PLOT
42030        FORMAT(1X,2I5,1X,'*',50A1,'*')
             DO I=1,MAXPLT
               J=UCBRSV(I)
               PLOT(J)=PBLK
             OD
           FI
      OD
      PEXIT
C
C     CMD43 - TABULATE UCB RANGE STATISTICS
C
      PENTRY CMD43
      LINE=LINE-7
      PM   PRTCTL
      WRITE(FRPT,43000)UCBRID(1),UCBRID(MAXRNG)
43000 FORMAT(/1X,'CMD43 - TABULATE STATISTICS FOR UCBS ',A4,'- ',A4
     *)
      PM   STARTI
      PM   GETRNG
      TOTINT=0
      DO   I=1,MAXRNG
           UCBRLS(I)=999999
           UCBRHS(I)=0
           UCBRAS(I)=0
           UCBRIU(I)=0
      OD
      DO   UNTIL,(KEY.EQ.ENDKEY)
           IF   (ECB.NE.0)PEXIT
           PM   NEXTI
           PM   GETRNG
           IF   (GOODI.EQ.TRUE)
                TOTINT=TOTINT+1
                DO   I=1,MAXRNG
                     SIO=UCBR(I)-LUCBR(I)
                     IF   (SIO.LT.0)SIO=SIO+65536
                     UCBRAS(I)=UCBRAS(I)+SIO
                     IF   (SIO.LT.UCBRLS(I))UCBRLS(I)=SIO
                     IF   (SIO.GT.UCBRHS(I))UCBRHS(I)=SIO
                     IF   (SIO.GT.0)UCBRIU(I)=UCBRIU(I)+1
                OD
           FI
      OD
      WRITE(FRPT,43010)
     *  PSDAY,PSHH,PSMM,PEDAY,PEHH,PEMM,TOTINT
43010 FORMAT(
     * /1X,'PERIOD',2(I6,I3,I2,2X)
     * /1X,'TOTAL INTERVALS ',I6
     *//'  UCB --DESC--   MIN   MAX   AVG  SIOS  %UTL'
     */)
      IF   (TOTINT.EQ.0)PEXIT
      DO   I=1,MAXRNG
           AVG=UCBRAS(I)/TOTINT
           SIOS=AVG/(60*TINTVL)
           UTL=UCBRIU(I)*100/TOTINT
           CALL GETDSC(UCBRID(I),UCBDSC)
           LINE=LINE-1
           PM   PRTCTL
           WRITE(FRPT,43020)UCBRID(I),UCBDSC
     *       ,UCBRLS(I),UCBRHS(I),AVG,SIOS,UTL
43020      FORMAT(2X,A4,A8,5I6)
      OD
      PEXIT
C
C     CMD51 - SET REPORT AND TOP OF PAGE
C
      PENTRY CMD51
      READ(FCTL,*)RPTNO
      LINE=0
      PEXIT
C
C     PRTCTL - PRINT CONTROL
C
      PENTRY PRTCTL
      IF   (LINE.LE.0)
           LINE=MAXLN
           PAGE=PAGE+1
           WRITE(FRPT,1)RPTNO,GDATE,DTIME,PAGE
      FI
      PEXIT
C
C     GETKEY - CALCULATE KEY BASED ON YYDDD AND TIME
C
      PENTRY GETKEY
      TMIN=YYDDD*1440+TIME/6000
      TINT=TMIN/TINTVL
      KEY=MOD(TINT,MAXREC-1)+2
      PEXIT
      END
      SUBROUTINE GETDSC(UCB,DSC)
C
C     RETURN 8 BYTE DESCRIPTION OF UCB FROM FT11F001 FILE
C
      IMPLICIT INTEGER(A-Z)
      REAL*8 DSC,DSCTAB(200),TDSC
      REAL*8 TDSC,LDSC/' '/,BLKDSC/' '/
      INTEGER TUCB,LUCB/'   '/,ASTRKS/'***'/
      INTEGER UCBTAB(200),MAXUCB/200/
      INTEGER FIRST/1/,TRUE/1/,FALSE/0/,EOF/0/,NFILE/11/
      INTEGER UCBPTR/1/,MAXPTR/0/
C
C     MAINLINE
C
      IF   (FIRST.EQ.TRUE)
           PM   GET
           DO   WHILE,(EOF.NE.TRUE)
                PM   GET
           OD
           FIRST=FALSE
      FI
      IF   (UCB.EQ.LUCB)
           DSC=LDSC
      ELSE
           PM   FIND
           LUCB=UCB
           LDSC=DSC
      FI
      RETURN
C
C     GET NEXT RECORD FROM FILE
C
      PENTRY GET
      DO   UNTIL,(TUCB.NE.ASTRKS)
           READ(NFILE,10,END=1000)TUCB,TDSC
      OD
   10 FORMAT(A3,1X,A8)
      MAXPTR=MAXPTR+1
      IF   (MAXPTR.GT.MAXUCB)
           MAXPTR=MAXUCB
 1000      EOF=TRUE
           PEXIT
      FI
      UCBTAB(MAXPTR)=TUCB
      DSCTAB(MAXPTR)=TDSC
      PEXIT
C
C     FIND UCB DESCRIPTION
C
      PENTRY FIND
      IS=UCBPTR
      IE=UCBPTR-1
      IF   (IE.LT.1)IE=MAXPTR
      I=IS
      DO   WHILE,(I.NE.IE)
           IF   (UCB.EQ.UCBTAB(I))
                DSC=DSCTAB(I)
                UCBPTR=I
                PEXIT
           FI
           I=I+1
           IF   (I.GT.MAXPTR)I=1
      OD
      DSC=BLKDSC
      END
