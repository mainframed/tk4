*          DATA SET TO008000   AT LEVEL 004 AS OF 05/15/78
*          DATA SET TO008000   AT LEVEL 002 AS OF 05/09/78
*          DATA SET TO008000   AT LEVEL 001 AS OF 02/13/78
*          DATA SET TP422000   AT LEVEL 006 AS OF 02/08/78
         TITLE 'PORTS - TSO COMMAND TO DISPLAY TSO USER LINES'
*---------------------------------------------------------------------
*              DATE.     02/07/77.
*              AUTHOR.   DON HIGGINS
*              REMARKS.  PORTS IS AN MVS DISPLAY COMMAND TO SHOW
*                        TSO USER LINE ADDRESSES. THIS PROGRAM WAS
*                        TAYLORED FROM MVSMON (TP421000). IT HAS
*                        THE FOLLOWING CHARACTERISTICS.
*
*                          1.  IT IS REENTRANT AND CAN BE PLACED IN
*                              PLPA FOR COMMON USE.
*                          2.  WHEN EXECUTED AS A SYSTEM TASK IT
*                              USES A WTOR/WTO INTERFACE TO THE
*                              MCS MASTER CONSOLE.
*                          3.  WHEN EXECUTED AS A TSO PROGRAM IT
*                              USES A TGET/TPUT INTERFACE TO TERMINAL.
*                          4.  WHEN EXECUTED AS A BATCH PROGRAM IT
*                              USES A GET/PUT INTERFACE TO SYSIN
*                              AND SYSPRINT QSAM FILES.
*                          5.  THE PROGRAM DOES REQUIRE PROGRAM
*                              AUTHORIZATION FOR MODESET KEY=ZERO.
*                          6.  NOTE PROGRAM CONTAINS NO RLDS TO
*                              REDUCE I/O AND PROCESSING TIME FOR
*                              FETCH WHEN EXECUTING OUT OF PDS
*                              RATHER THAN PLPA.
*
*              REGISTERS.
*                  R0-R7 WORK REGISTERS
*                  R8-R9 EXTENDED BASES
*                  R10   POINTER TO READ/WRITE WORK AREA
*                  R11   POINTER TO STACK FOR PERFORMS
*                  R12   BASE
*                  R13   SAVE AREA
*                  R14-R15 LINKAGE AND WORK
*              REFERENCES.
*                  GC28-0751-0 OS/VS2 BEBUGGING HANDBOOK VOL. 1
*                  GC28-0709-0 OS/VS2 DEBUGGING HANDBOOK VOL. 2
*                  GC28-0886-0 OS/VS2 MVS PERFORMANCE NOTEBOOK
*                  GC28-0648-2 OS/VS2 TSO GUIDE TO COMMAND PROCESSORS
*                  GC28-0683-1 OS/VS2 SUPR. SERVICES MACRO INSTR.
*                  SY28-0715-1 OS/VS2 SYSTEM LOGIC LIBRARY
*              FILES.
*                  SYSPRINT - OUTPUT FOR BATCH MODE ONLY
*
*
*---------------------------------------------------------------------
         PUNCH ' ALIAS PORTS &SYSDATE &SYSTIME IGNORE IEW0731'
         TITLE 'MAINLINE'
PORTS    SUBENTRY BASES=(R12),RENT=YES,STACK=10,                       X
               PSTACK=R11,PSAVE=NO,PCHECK=NO
         LR    R4,R1             SAVE PARM FOR GET
         PM    INIT              INITIALIZE WORK AREA
         USING WORK,R10
         PM    DU
         IF    (CLI,MODE,IOMODE,EQ)
               CLOSE (SYSPRINT),MF=(E,DCBLIST)
         FI
         LA    R0,LWORK
         LR    R1,R10
         FREEMAIN R,LV=(0),A=(1)
         SUBEXIT
         TITLE 'INIT - INITIALIZE PORTS'
INIT     PENTRY
         LA    R0,LWORK
         GETMAIN R,LV=(0)
         LR    R10,R1           R10=A(USER WORK AREA)
         LR    R0,R12
         A     R0,=A(WORK-(PORTS+8))
         LA    R1,LWORK
         LR    R2,R10
         LR    R3,R1
         MVCL  R2,R0              INITIALIZE WORK AREA
         USING WORK,R10
         ST    R4,APARM
         LR    R0,R12
         L     R2,PSAAOLD
         IF    (ICM,R1,15,ASCBTSB(R2),NZ)
               MVI  MODE,TSOMODE
         ELSEIF (ICM,R1,15,ASCBJBNI(R2),Z)
               MVI  MODE,WTOMODE
         ELSE
               MVI  MODE,IOMODE
               OPEN  (SYSPRINT,(OUTPUT)),MF=(E,DCBLIST)
         FI
         PEXIT
         TITLE 'DU - DISPLAY TSO USERS ONLY'
DU       PENTRY
         L     R2,16
         L     R2,CVTASCVT(R2)
         LA    R3,ASVTENTY(R2)
         L     R4,ASVTMAXU(R2)
         DO    WHILE,(SH,R4,=H'1',NM)
               IF   (ICM,R5,15,0(R3),P)
                    PM   DU1
               FI
               AAI  R3,4
         OD
         PEXIT
         TITLE 'DU1 - PROCESS ONE ASCB ENTRY FOR DU'
DU1      PENTRY
         IF    (ICM,R1,15,ASCBTSB(R5),Z)
               PEXIT
         FI
         L     R1,ASCBJBNS(R5)
         IF    (CLI,0(R1),C'A',NL)
               MVC  DAJOB,0(R1)
         ELSE
               MVC  DAJOB,=CL8'*LOGON*'
         FI
         L     R6,ASCBTSB(R5)
         MODESET KEY=ZERO
         UNPK  DWORK(5),TSBLINE(3,R6)
         MODESET KEY=NZERO
         TR    DWORK+1(3),HEX-240
         MVC   DATPLINE,DWORK+1
         LA    R0,DALINE
         PM    PUT
         PEXIT
         TITLE 'PUT'
PUT      PENTRY
         IF    (CLI,MODE,IOMODE,EQ)
               PUT  SYSPRINT
         ELSEIF (CLI,MODE,WTOMODE,EQ)
               LR   R1,R0
               MVC  WTODATA,0(R1)
               WTO  MF=(E,WTOLINE)
         ELSE
               LR   R1,R0
               ICM  R1,8,=X'00'
               LA   R0,80
               TPUT (1),(0),R
               IF   (LTR,R15,R15,NZ)
                    ABEND 101,DUMP
               FI
         FI
         PEXIT
         TITLE 'LITERALS AND EQUATES'
         EQUAL
         TITLE 'WORK AREA'
WORK     DS    0D
DCBLIST  OPEN  (,(OUTPUT)),MF=L
SYSPRINT DCB   DSORG=PS,MACRF=PM,RECFM=F,BLKSIZE=80,DDNAME=SYSPRINT
MODE     LOGICAL IOMODE,(IOMODE,WTOMODE,TSOMODE)
APARM    DC   A(0)
PWORK    DC   D'0'
WTOLINE  DS   0F
         DC   AL2(WTOEND-*,0)
WTODATA  DC   CL80' '
WTOEND   EQU  *
*
*        DISPLAY DATA AREAS
*
*
*        DA, DJ, DU, DS DISPLAY DATA
*
DALINE   DS   0CL80
DAJOB    DC   CL8' ',C' '
DATPLINE DC   CL3' '
         FILL DALINE
DWORK    DC   CL5' '
HEX      DC   C'0123456789ABCDEF'
*
*        END OF WORK AREA CSECT
*
LWORK    EQU   *-WORK
         TITLE 'SYSTEM CONTROL BLOCK EQUATES'
*
*        ASVT
*
ASVTMAXU EQU  X'204'    87 NUMBER OF ASCB ENTRIES
ASVTENTY EQU  X'210'    87 START  OF ASCB ENTRIES
*
*        ASCB
*
ASCBCSCB EQU  X'38'     69 COMMAND SCHED. CONTROL BLOCK CHAIN
ASCBTSB  EQU  X'3C'     69 TERMINAL STATUS BLOCK FOR TSO ONLY
ASCBEJST EQU  X'40'     69 UNSIGNED 64 BIT TCB CPU TIME
ASCBFLG1 EQU  X'67'     70 FLAG FIELD
ASCBDSP1 EQU  X'72'     70 DISPATCH FLAG FIELD
ASCBOUCB EQU  X'90'     71 SRM USER CONTROL BLOCK
ASCBFMCT EQU  X'98'     71 PAGE FRAME COUNT - WORKING SET
ASCBJBNI EQU  X'AC'     72 JOBNAME OF INITS
ASCBJBNS EQU  X'B0'     72 JOBNAME OF STCS
ASCBSRBT EQU  X'C8'     72.1 SRB CPU TIME
*
*        CVT - COMMUNICATION VECTOR TABLE
*
CVTASCVT EQU  X'22C'   197 ADDRESS SPACE VECTOR TABLE
*
*        PSA
*
PSAAOLD  EQU  X'224'   528 CURRENT ASCB
*
*        TSB - TERMINAL STATUS BLOCK IN PROTECTED CSA STORAGE ****
*
TSBLINE  EQU  X'52'    739  3705 LINE ADDRESS
         END
