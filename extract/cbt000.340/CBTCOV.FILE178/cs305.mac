*          DATA SET CS305000   AT LEVEL 019 AS OF 11/17/79
*          DATA SET CS305000   AT LEVEL 017 AS OF 11/15/79
*          DATA SET CS305000   AT LEVEL 015 AS OF 11/03/79
*          DATA SET CS305000   AT LEVEL 013 AS OF 09/25/79
         TITLE 'CS305000 - MISC. ALC SUPPORT FOR SMF REPORTS'
*              AUTHOR.   DON HIGGINS.
*              DATE.     06/27/76.
*              CALLING SEQUENCE.
*                        CALL CS305(ROUTINE,ARG1,ARG2,ETC.)
*
*                     1. CALL CS305(1,STEPAT,STEPAC,ABEND)
*
*                             STEPAT - INTEGER (0=NORMAL,1=ABEND)
*                             STEPAC - INTEGER (INPUT ABEND CODE)
*                             ABEND  - INTEGER SET TO EBCDIC CODE
*
*                     2. CALL CS305(2,SCC,CHAR,NUM)
*
*                             SCC    - STEP COMPLETION CODE XNNN
*                             CHAR   - A1 CHARACTER FOR EXCP. CODE X
*                             NUM    - INTEGER FOR NNN
*
*                     3. CALL CS305(3,SCC,C1,C2,C3,C4)
*
*                             SCC    - STEP COMP. CODE SET TO
*                                      4 CHARACTERS FROM C1-C4
*                             C1-C4  - 4 A1 CHARACTERS
*
*                     4. CALL CS305(4,TOD,SEC)
*
*                             TOD    - TIME IN 64 BIT FORMAT   INT*8
*                             SEC    - TIME IN 0.01 SEC FORMAT INT*4
*
*                     5. CALL CS305(5,RCPPARM)
*
*                             RCPPARM- INTEGER RATE TABLE
*
*                             NOTE THIS ROUTINE USES SAME RATE TABLE
*                             AND RATE CALCULATION ROUTINE AS MVS
*
*                     6. CALL CS305(6,RCPRATE)
*
*                             RCPRATE - INTEGER RCPRATE(14) ARRAY
*                                       WHICH IS LOADED WITH
*                                       CURRENT SYSTEM RATES.
*                                       SEE FPC.MACLIB(RCPRATE)
*
*                     7. CALL CS305(7,UCB,UCBID,UCBSIO)
*
*                             UCB - 2 BYTE X'0CUU'
*                                   2 BYTE UNSIGNED SIO COUNT
*
*                             UCBID -  FULL WORD EBCDIC CUU
*
*                             UCBSIO - FULL WORD SIO COUNT
*
*                             (THIS CODE IS USED BY GU949000)
*
*                     8. CALL CS305(8,KEY,TABLE,MAX,PTR,SIO)
*
*                             KEY   - 3 BYTE EBCDIC UCB ID
*
*                             TABLE - ARRAY OF UCB ENTRIES
*
*                                        2 BYTE X'0CUU'
*                                        2 BYTE UNSIGNED SIO COUNT
*
*                             MAX   - FULL WORD COUNT OF ENTRIES
*
*                             PTR   - FULL WORD INDEX (1-N)
*
*                                     INPUT - WHERE TO START SEARCH
*
*                                     OUTPUT- LAST ENTRY TESTED
*
*
*                             SIO   - FULL WORD SIO COUNT
*
*                             (THIS CODE IS USED BY GU949000)
*
*        MAINTENANCE.
*
*        10/03/77 DSH ADD ROUTINES 4 AND 5
*        01/31/79 DSH ADD ROUTINE  6
*        09/25/79 DSH FIX ROUTINE 2 TO USE 999 IF OVER 999
*        11/03/79 DSH ADD CODE 7 FOR GU949000 MONITOR DISPLAY USE
*        11/14/79 DSH ADD CODE 8
*
CS305    SUBENTRY
         L     R2,0(R1)
         L     R2,0(R2)
         DOCASE (R2)
           CASE 1
               PM   TYPE1
           ESAC
           CASE 2
               PM   TYPE2
           ESAC
           CASE 3
                PM  TYPE3
           ESAC
           CASE 4
                PM  TYPE4
           ESAC
           CASE 5
                PM  TYPE5
           ESAC
           CASE 6
                PM  TYPE6
           ESAC
           CASE 7
                PM  TYPE7
           ESAC
           CASE 8
                PM  TYPE8
           ESAC
           CASE ELSE
               WTO 'CS305 - INVALID ROUTE CODE'
               ABEND 901,DUMP
           ESAC
         ESACOD
         SUBEXIT
         TITLE 'STPSCC - CHECK AND DECODE STEP ABEND/COMP CODES'
TYPE1    PENTRY
         LM    R2,R4,4(R1)
         IF    (TM,0(R2),X'02',O)  ABENDED
               MVC  0(4,R2),=F'1'
               IF   (TM,2(R3),X'80',O)
                    MVI  0(R4),C'U'     USER
               ELSE
                    MVI  0(R4),C'S'     SYSTEM
               FI
               UNPK DWORK(5),2(3,R3)
               TR   DWORK(4),HEX-240
               MVC  1(3,R4),DWORK+1
         ELSEIF (TM,0(R2),X'01',O) FLUSHED
               IF   (CLI,0(R4),C' ',EQ)
                    MVC  0(4,R4),=C'XJCL'
                    MVC  0(4,R2),=F'1'
               ELSE
                    MVC  0(4,R2),=F'0'
               FI
         ELSE
               MVC  0(4,R2),=F'0'
               LH  R0,2(R3)
               CVD  R0,PWORK
               EDIT TO=DWORK,FROM=PWORK+6,MASK='0ZZZ'
               IF   (CLI,0(R4),C' ',EQ),OR,(CLI,0(R4),C'0',NL)
                    IF   (CLC,0(4,R4),DWORK,L)
                         MVC  0(4,R4),DWORK
                    FI
               FI
         FI
         PEXIT
         TITLE 'ABXREF - PROCESS ABNORMAL XREF DATA'
TYPE2    PENTRY
         LM    R2,R4,4(R1)
         MVC   0(1,R2),0(R3)
         L     R0,0(R4)
         IF    (C,R0,=F'999',GT)
               LA   R0,999
         FI
         CVD   R0,PWORK
         EDIT  TO=DWORK,FROM=PWORK+6,MASK='0999'
         MVC   1(3,R2),DWORK+1
         PEXIT
         TITLE 'FOURCHAR - MOVE 4 CHARACTERS INTO WORD'
TYPE3    PENTRY
         LM    R2,R6,4(R1)
         MVC   0(1,R2),0(R3)
         MVC   1(1,R2),0(R4)
         MVC   2(1,R2),0(R5)
         MVC   3(1,R2),0(R6)
         PEXIT
         TITLE 'TODSEC - CONVERT 8 BYTE TOD TIME TO 0.01 SEC'
TYPE4    PENTRY
         LM    R2,R3,4(R1)
         LM    R0,R1,0(R2)   R0,R1= 8 BYTE TOD  (BIT 51=1 MICRO SEC)
         SRDL  R0,12         R0,R1= MICRO SECONDS
         D     R0,=F'10000'  R1=0.01 SECONDS
         ST    R1,0(R3)
         PEXIT
         TITLE 'GETCOST - CALCULATE COST'
TYPE5    PENTRY
         L     R2,4(R1)               R2=PARMLIST
         L     R15,RCPCALC
         IF    (LTR,R15,R15,Z)
               LOAD  EP=RCPCALC       LOAD RATE CALCULATION RTN
               ST    R0,RCPCALC
               LR    R15,R0
         FI
         LR    R1,R2
         BALR  R14,R15
         PEXIT
         TITLE 'GETRATE - LOAD SYSTEM RATES'
TYPE6    PENTRY
         L     R2,4(R1)               R2=PARMLIST
         L     R0,RCPRATE
         IF    (LTR,R0,R0,Z)
               LOAD  EP=RCPRATE       LOAD RATE TABLE
               ST    R0,RCPRATE
         FI
         LA    R1,14*4
         LR    R3,R1
         MVCL  R2,R0
         PEXIT
         TITLE 'TYPE 7 - CONVERT UCB DATA FOR DISPLAY'
TYPE7    PENTRY
         LM    R2,R4,4(R1)   UCB,UCBID,UCBSIO
         LH    R0,0(R2)
         SRDL  R0,4
         SRL   R1,28
         STC   R1,UCBID+2
         SRDL  R0,4
         SRL   R1,28
         STC   R1,UCBID+1
         SRDL  R0,4
         SRL   R1,28
         STC   R1,UCBID
         TR    UCBID(3),HEX
         MVC   0(4,R3),UCBID
         ZR    R0
         ICM   R0,3,2(R2)
         ST    R0,0(R4)
         PEXIT
         TITLE 'TYPE 8 - FIND UCB AND RETURN SIO COUNT'
TYPE8    PENTRY
         LM    R2,R6,4(R1)   KEY,TABLE,MAX,PTR,SIO
         IC    R14,2(R2)
         IF    (CLI,2(R2),C'0',L)
               AAI  R14,9
         FI
         SRDL  R14,4
         IC    R14,1(R2)
         IF    (CLI,1(R2),C'0',L)
               AAI  R14,9
         FI
         SRDL  R14,4
         IC    R14,0(R2)
         IF    (CLI,0(R2),C'0',L)
               AAI  R14,9
         FI
         SRDL  R14,4
         SRL   R15,20
         LR    R2,R15      R2=BINARY UCB KEY
         L     R4,0(R4)
         BCTR  R4,0
         SLL   R4,2
         LA    R4,0(R4,R3)  R4=A(LAST ENTRY)
         L     R1,0(R5)
         BCTR  R1,0
         SLL   R1,2
         LA    R1,0(R1,R3)  R1=A(CURRENT ENTRY)
         IF    (CLR,R1,R3,L)
               LR   R1,R3
         FI
         IF    (CLR,R1,R4,H)
               LR   R1,R4
         FI
         DO   WHILE,(CLC,0(4,R1),=XL4'00',EQ)
              SH   R1,=H'4'
              LR   R4,R1
         OD
         ZR    R0
         IF    (CH,R2,0(R1),EQ)
               ICM  R0,3,2(R1)
         ELSEIF (H)
               PM   T8UP
         ELSE
               PM   T8DOWN
         FI
         ST    R0,0(R6)          SET SIO
         SR    R1,R3
         SRL   R1,2
         AAI   R1,1
         ST    R1,0(R5)          SET PTR
         PEXIT
T8UP     PENTRY
         AAI   R1,4
         DO    WHILE,(CLR,R1,R4,LE)
               IF   (CH,R2,0(R1),EQ)
                    ICM   R0,3,2(R1)
                    PEXIT
               ELSEIF (L)
                    PEXIT
               ELSEIF (CLC,0(4,R1),=XL4'00',EQ)
                    SH   R1,=H'4'
                    PEXIT
               FI
               AAI  R1,4
         OD
         LR    R1,R4
         PEXIT
T8DOWN   PENTRY
         SH    R1,=H'4'
         DO    WHILE,(CLR,R1,R3,GE)
               IF   (CH,R2,0(R1),EQ)
                    ICM   R0,3,2(R1)
                    PEXIT
               ELSEIF (H)
                    PEXIT
               FI
               SH   R1,=H'4'
         OD
         LR    R1,R3
         PEXIT
         EQUAL
UCBID    DC    CL4' '
RCPRATE  DC    A(0)
RCPCALC  DC    A(0)
PWORK    DC    D'0'
DWORK    DC    CL5' '
HEX      DC    C'0123456789ABCDEF'
         END
