*          DATA SET TO024000   AT LEVEL 003 AS OF 10/30/79
*          DATA SET TO024000   AT LEVEL 002 AS OF 04/28/78
*          DATA SET TC90120100 AT LEVEL 005 AS OF 11/17/77
*          DATA SET TC90120100 AT LEVEL 004 AS OF 07/10/77
PAND     TITLE 'PANDIR -- TSO COMMAND PROCESSOR'
         MACRO
&LABEL   $MSG  &TEXT,&RC=NO,&DC=NO,&SFX=NO,&DSN=NO
         LCLA  &LNTH
         LCLB  &RCI,&DCI,&SFXI,&DSNI
         AIF   ('&RC' NE 'YES').NORC
&RCI     SETB  1
.NORC    ANOP
         AIF   ('&DC' NE 'YES').NODC
&DCI     SETB  1
.NODC    ANOP
         AIF   ('&SFX' NE 'YES').NOSFX
&SFXI    SETB  1
.NOSFX   ANOP
         AIF   ('&DSN' NE 'YES').NODSN
&DSNI    SETB  1
.NODSN   ANOP
&LNTH    SETA  K'&TEXT-3
&LABEL   DC    H'&LNTH',B'&RCI&DCI&SFXI&DSNI.0000',C&TEXT
         MEND
         SPACE 2
         MACRO
         CPM   &PROC
         IF    (CLI,ERR,0,EQ)
               PM    &PROC
         FI
         MEND
         SPACE 2
         MACRO
&L       CALLPAM  &EP,&PARMS
         LCLC  &OFFSET
         AIF   ('&EP' NE 'POPEN').NPOPEN
&OFFSET  SETC  '0'
.NPOPEN  AIF   ('&EP' NE 'PSRCH').NPSRCH
&OFFSET  SETC  '8'
.NPSRCH  AIF   ('&EP' NE 'PREAD').NPREAD
&OFFSET  SETC  '16'
.NPREAD  AIF   ('&EP' NE 'PCLOSE').NPCLOSE
&OFFSET  SETC  '24'
.NPCLOSE ANOP
&L       L     15,PAMEP
         LA    15,&OFFSET.(,15)
         CALL  (15),&PARMS,VL,MF=(E,CALLMFL)
         MEND
         TITLE 'PANPUT TSO PAN INTERFACE'
*--------------------------------------------------------------------
*
*  INSTALLATION  FLORIDA POWER CORPORATION
*
*  PROGRAM       TO024000 (PANDIR,PAND)
*
*  AUTHOR        FRED D BRISARD
*
*  DATE          1976
*
*  COMMENTS      THIS PROGRAM WILL SCAN ANY PAN LIBRARY AND EXTRACT
*                THE PAN CONTROL INFO REGARDING THE MEMBER(S) AS
*                INDICATED PER INPUT COMMAND TEXT.  THE SCAN CAN
*                BE FOR A SPECIFIC MEMBER OR GROUP OF MEMBERS BY
*                DELETING THE TRAILING CHARS.
*                COMMAND FORMAT IS AS FOLLOWS:
*
*                    PANDIR NAME
*                    PAND   PREFIX
*
*                OPERANDS ARE AS FOLLOWS:
*
*                    LIB('LIB')    (PAN LIBRARY, DEFAULT IS FPC.WORK)
*                    DA(DSN)       ANY TSO FILE - SEE HELP DOCUMENT
*                    COMMENT       LIST PAN COMMENT RECORDS
*
*  REV  04/28/78  W R WILLITS
*  1.  ALLOW PLI OR PL1 TSO SUFFIX FOR PL/I PAN TYPE
*
*  REV  10/30/79  W R WILLITS    (BW001)
*  1.  FORCE VOL=SER=TSOSV1 INTO ALLOCNEW DAIR CONTROL BLOCK
*      DUE TO BUG IN PCF ALLOCATING NEW DATASETS ON OTHER VOLUMES
*
*
*
*--------------------------------------------------------------------
         SPACE 2
         PUNCH ' ALIAS PANDIR &SYSDATE &SYSTIME IGNORE IEW0731'
         PUNCH ' ALIAS PAND   &SYSDATE &SYSTIME IGNORE IEW0731'
         EJECT
PANDIREC SUBENTRY BASES=(12,11),RENT=YES,RWA=WORK,RWALNG=WORKL,        X
               STACK=20
         SPACE 3
         PRINT NOGEN
         LR    R10,R1              ESTABLISH CPPL
         USING CPPL,R10              ADDRESSIBILITY
         USING PDL,R9              PDL ADDRESSIBLITY
         SPACE 3
         MVI   ERR,0               INIT ERR INDICATOR
         MVI   STATUS,0            INIT STATUS INDICATOR
         SPACE 3
         PM    PARSE               PERFORM PARSE OF OPERANDS
         SPACE 2
         CPM   STAXINIT            CONDITIONALLY INIT ATTN EXIT
         SPACE 1
         LOAD  EPLOC=PAM           LOAD PAM MODULE
         ST    R0,PAMEP            SAVE EP ADDRESS
         SPACE 1
         CPM   PANINIT             CONDITIONALLY INIT PAM
         CPM   DSINIT              CONDITIONALLY INIT RECEIVING DATASET
         CPM   DIRLIST             CONDITIONALLY LIST DIRECTORY
         PM    DSCLOSE             CLOSE AND DEALLOCATE RECEIVING DS
         SPACE 2
         PM    PANCLOSE            CLOSE AND DEALLOCATE PAN LIBRARY
         SPACE 1
         DELETE  EPLOC=PAM         DELETE PAM MODULE FROM STORAGE
         SR    R0,R0               SHOW PAM IS DELETED
         ST    R0,PAMEP
         SPACE 1
         SPACE 2
         PM    STAXTERM            TERMINATE ATTN EXIT
         SPACE 5
         IKJRLSA ANSWER            RELEASE PDL
         SPACE 3
         SUBEXIT RENT=YES,RC=0
         SPACE 2
PAM      DC    CL8'PAM'
         EJECT
*
*  PARSE ROUTINE
*
         SPACE 2
PARSE    PENTRY
         SPACE 2
         LA    R1,PARSEPL          ESTABLISH PPL
         USING PPL,R1                ADDRESSIBILITY
         SPACE 2
         L     R0,CPPLUPT          INITIALIZE THE PARSE
         ST    R0,PPLUPT             PARAMETER LIST
         L     R0,CPPLECT
         ST    R0,PPLECT
         LA    R0,ECB
         ST    R0,PPLECB
         L     R0,=V(PCL)
         ST    R0,PPLPCL
         LA    R0,ANSWER
         ST    R0,PPLANS
         L     R0,CPPLCBUF
         ST    R0,PPLCBUF
         SR    R0,R0
         ST    R0,PPLUWA
         ST    R0,ECB
         ST    R0,ANSWER
         SPACE 1
         DROP  R1                  DROP PPL
         SPACE 2
         CALLTSSR  EP=IKJPARS,MF=(E,(1))  INVOKE PARSE
         IF    (LTR,R15,R15,NZ)    TEST FOR BAD RETURN CODE
               LA    R1,PARSEMSG
               PM    TERMPUT       OUTPUT ERROR MESSAGE
               OI    ERR,PARSERR   INDICATE PARSE ERROR
         FI
         L     R9,ANSWER           -->  PDL
         SPACE 2
         PEXIT
         SPACE 2
PARSEMSG $MSG  'PARSE ERROR CODE:',RC=YES,SFX=YES
         EJECT
*
*  ATTENTION EXIT INITIALIZATION ROUTINE
*
         SPACE 2
STAXINIT PENTRY
         SPACE 1
         MVC   STAXMFL(STAXREFL),STAXREF   INIT STAX LIST
         LA    R2,ERR              POINT TO ERROR INDICATOR
         STAX  STAXEXIT,USADDR=(2),MF=(E,STAXMFL)  ISSUE STAX
         IF    (LTR,R15,R15,Z)     TEST RETURN CODE
               OI    STATUS,STAXACTV   INDICATE STAX ACTIVE
         ELSE
               LA    R1,STAXERRM   STAX ERROR MESSAGE
               PM    TERMOUT
               OI    ERR,TSOCP     SET TSO CTRL PGM ERROR
         FI
         SPACE 2
         PEXIT
         SPACE 2
STAXREF  STAX  STAXEXIT,MF=L
STAXREFL EQU   *-STAXREF           LENGTH OF STAX LIST FORM
         SPACE 1
STAXERRM $MSG  'ERROR INITIATING ATTN EXIT..RC:',RC=YES,SFX=YES
         EJECT
*
*  PANVALET LIBRARY INITIALIZATION ROUTINE
*
         SPACE 2
PANINIT  PENTRY
         SPACE 2
         IF    (TM,PDLLIB+6,X'80',O)   TEST FOR LIBRARY SPECIFIED
               LA    R1,PDLLIB      LOAD PARSE PDL IF SO
         ELSE
               LA    R1,PANLIBDF   ELSE USE DEFAULT DUMMY PDL
         FI
         SPACE 2
         PM    ALLOCSHR            ALLOCATE THE PANLIB
         SPACE 1
         SPACE 1
         IF    (LTR,R15,R15,NZ)    TEST FOR BAD RETURN CODE
               PM    DAIRRC        CHECK FOR SUCCESS
               OI    ERR,PANERR    INDICATE PAN ERROR
               PEXIT               EXIT IMMEDIATELY
         FI
         SPACE 2
         OI    STATUS,PANALC       INDICATE PANLIB ALLOCATED
         SPACE 2
         SR    R0,R0               CLEAR
         ST    R0,PANACTN          INIT PAM FIELDS FOR A POPEN
         MVC   PANDDNM,DAIRWORK+DA08DDN-DAPB08
         MVC   PANBKUP,NOENTRY
         CALLPAM POPEN,(PANACTN,PANDDNM,PANBKUP)
         SPACE 2
         IF    (CLI,PANACTN3,245,NE)
               OI    STATUS,PANOPN INDICATE PANLIB OPEN IF
         FI                        NO PARM ERROR
         SPACE 1
         IF    (CLI,PANACTN3,0,NE) TEST FOR ERROR
               PM    PANANAL       ANALYZE PAN RETURN
               OI    ERR,PANERR    SET ERROR INDICATOR
         FI
         SPACE 2
         PEXIT
         EJECT
*
*  RECEIVING DATA SET ALLOCATION AND INITIALIZATION
*
         SPACE 2
DSINIT   PENTRY
         SPACE 2
         IF    (CLI,PDLDSKY+1,0,EQ)    TEST FOR DSN SPECIFIED
               OI    STATUS,TERMOUT    FLAG AS TERMINAL OUTPUT
         ELSE
               L     R1,PDLDS    DSNAME ADDRESS
               IF    (CLI,0(R1),C'*',EQ)
                     OI    STATUS,TERMOUT    FLAG AS TERM OUTPUT
               FI
         FI
         IF    (TM,STATUS,TERMOUT,O)   TEST FOR TERM OUTPUT
               PEXIT               EXIT IMMEDIATELY IF SO
         FI
         SPACE 2
         LA    R0,2000             APPROXIMATE # OF RECORDS
         LA    R1,PDLDS            PDL FOR RECEIVING DATA SET
         PM    ALLOCNEW            TRY TO ALLOCATE THE DATA SET NEW
         IF    (LTR,R15,R15,NZ)    IF FAIL TRY SHARE
               LA                  R1,PDLDS
               PM    ALLOCSHR
               IF    (LTR,R15,R15,NZ)  IF ERROR
                     PM   DAIRRC   ANALYZE RET CODE
                     OI    ERR,DSERR   SET ERROR INDICATOR
                     PEXIT         EXIT IMMEDIATELY
               FI
               IF    (TM,DAIRWORK+DA08DSO-DAPB08,X'02',O),             X
               AND,(TM,PDLDS+14,X'80',Z)
                     MVC   DSDDNM,DAIRWORK+DA08DDN-DAPB08   SAVE DDNAME
                     LA    R1,DSDDNM
                     PM    UNALLOC     DE-ALLOCATE THE DATASET
                     LA    R1,=C'PANDIR' ALLOCATE WITH MEMBER
                     ST    R1,PDLDS+8
                     LA    R1,6
                     STH   R1,PDLDS+12
                     OI    PDLDS+14,X'80'
                     LA    R1,PDLDS
                     PM    ALLOCSHR    REALLOCATE WITH MEMBER
                     IF    (LTR,R15,R15,NZ)  CHECK RETURN CODE
                           PM    DAIRRC      EXIT IF BAD
                           PEXIT
                     FI
                FI
         FI
         SPACE 2
         OI    STATUS,DSALC        INDICATE TSO DS ALLOCATED
         MVC   DSDDNM,DAIRWORK+DA08DDN-DAPB08  SAVE DDNAME
         SPACE 2
         MVC   DSDCB(DSDCBL),DSDCBMFL MOVE MODEL DCB TO WORK AREA
         MVC   DSDCB+40(8),DSDDNM  SET DDNAMEIN DCB
         LA    R1,DSDCB            SET UP FOR OPEN
         O     R1,DSDCBOPN
         ST    R1,DSDCBOC
         OPEN  MF=(E,DSDCBOC)      TRY TO OPEN IT
         IF    (TM,DSDCB+48,X'10',Z)
               LA    R1,DSOPENM    OPEN ERROR MESSAGE
               LA    R0,PDLDS      DSNAME PDL ADDR
               PM    TERMPUT
               OI    ERR,DSERR     FLAG ERROR
               PEXIT               EXIT IMMEDIATELY
         FI
         SPACE 2
         OI    STATUS,DSOPN        INDICATE TSO DATA SET OPEN
         SPACE 2
         PEXIT
         SPACE 2
DSOPENM  $MSG  'DATASET OPEN FAILED FOR',DSN=YES,SFX=YES
         EJECT
*
*  LIST PAN DIRECTORY TO TSO DATA SET OR TERMINAL
*
         SPACE 2
DIRLIST  PENTRY
         SPACE 2
         MVC   PANNAME1,BLANKS     INITIALIZE PANSRCH FIELDS
         MVC   PANNAME2,NINES
         L     R1,PDLPANDS
         LH    R2,PDLPANDS+4
         BCTR  R2,0
         IF    (TM,PDLPANDS+6,X'80',O),AND,(CLI,0(R1),C'*',NE)
               LA    R3,PANNAME1     SET RANGE IN PANSRCH PARMS
               EX    R2,MVCR3R1
               LA    R3,PANNAME2
               EX    R2,MVCR3R1
         ELSE
               MVI   PANNAME1,C'A'   INIT FOR WHOLE LIB LIST
               MVI   PANNAME2,C'Z'
         FI
         SPACE 2
         IF    (TM,STATUS,TERMOUT,O)   DO TERM HEADING IF APPROPRIATE
               LA    R1,HDRLN1
               LA    R0,HDRLN1L
               TPUT  (1),(0),R
               LA    R1,HDRLN2
               LA    R0,HDRLN2L
               TPUT  (1),(0),R
         FI
         SPACE 2
         DO    UNTIL,(CLC,=C'$* ',PANDIR,EQ)
               IF    (TM,ERR,ATTN,O)   EXIT IF ATTENTION INTERRUPT
                     PEXIT
               FI
         SPACE 2
               SR    R0,R0         SETUP FOR PSRCH
               ST    R0,PANACTN
               MVC   PANDIR,BLANKS
               MVC   PANCMNT,NOENTRY
               IF    (CLI,PDLCMTKY+1,1,EQ),AND,(TM,STATUS,TERMOUT,O)
                     MVC   PANCMNT(L'COMMENT),COMMENT
               FI
               MVC   PANSUBST,NOENTRY
               SPACE 2
               CALLPAM  PSRCH,                                         X
               (PANACTN,PANDIR,PANNAME1,PANNAME2,PANCMNT,PANSUBST)
               IF    (CLI,PANACTN3,0,NE)
                     PM    PANANAL
                     OI    ERR,PANERR
                     PEXIT
               FI
         SPACE 2
               IF    (CLC,=C'$* ',PANDIR,EQ)
                     PEXIT         EXIT IF END OF INFO
               FI
         SPACE 2
               IF    (TM,STATUS,TERMOUT,O)       FORMAT TERM RECD IF
                     MVC   PANRECD,BLANKS              REQUIRED
                     MVC   PANRECD+65(2),PANDIR+59
                     OI    PANRECD+66,C'0'
                     PACK  DWORK,PANDIR+42(5)
                     MVC   PANRECD+57(6),=X'402020202120'
                     ED    PANRECD+57(6),DWORK+5
                     PACK  DWORK,PANDIR+47(8)
                     MVC   PANRECD+52(6),=X'402020202120'
                     ED    PANRECD+52(6),DWORK+5
                     MVC   PANRECD+44(8),PANDIR+34
                     MVC   PANRECD+35(8),PANDIR+26
                     MVC   PANRECD+30(3),PANDIR+56
                     MVC   PANRECD+26(3),PANDIR+23
                     MVC   PANRECD+20(5),PANDIR+18
                     PACK  DWORK,PANDIR+13(4)
                     MVC   PANRECD+13(6),=X'402020202020'
                     ED    PANRECD+13(6),DWORK+5
                     PACK  DWORK,PANDIR+10(3)
                     MVC   PANRECD+10(4),=X'40202120'
                     ED    PANRECD+10(4),DWORK+6
                     MVC   PANRECD(10),PANDIR
         SPACE 1
                     LA    R1,PANRECD
                     LA    R0,80
                     TPUT  (1),(0),R
                     IF    (CLI,PDLCMTKY+1,1,EQ)   OUTPUT COMMENT
                           LA    R1,PANCMNT+2  IF REQUESTED
                           LA    R0,50
                           TPUT  (1),(0),R
                     FI
         SPACE 2
               ELSE
                     PUT   DSDCB,PANDIR    OUTPUT TO DATASET
               FI
         OD
         SPACE 2
         PEXIT
         SPACE 2
NINES    DC    C'9999999999 '
         SPACE 1
MVCR3R1  MVC   0(*-*,R3),0(R1)
         SPACE 2
*  TERMINAL TITLE LINES
         SPACE 1
HDRLN1   DC    CL15' ',C'USER',CL7' ',C'STA LAST   LAST',CL5' '
         DC    C'LAST   NO OF DASD STMTS'
HDRLN1L  EQU   *-HDRLN1
         SPACE 1
HDRLN2   DC    C'PAN DSNAME LVL CODE TYPE  TUS ACTN MAINTNCE ACCESSED'
         DC    C' STMTS BLKS /BLK'
HDRLN2L  EQU   *-HDRLN2
         EJECT
*
*  TSO DATA SET CLOSE AND DEALLOCATION ROUTINE
*
         SPACE 2
DSCLOSE  PENTRY
         SPACE 2
         IF    (TM,STATUS,DSOPN,O)
               LA    R1,DSDCB      SET UP TO CLOSE DATASET
               O     R1,DSDCBCLS
               ST    R1,DSDCBOC
               CLOSE MF=(E,DSDCBOC)
         FI
         SPACE 2
         IF    (TM,STATUS,DSALC,O) DEALLOCATE DATA SET IF NECESSARY
               LA    R1,DSDDNM
               PM    UNALLOC
               PM    DAIRRC
         FI
         SPACE 2
         PEXIT                     EXIT
         EJECT
*
*  PAN LIBRARY CLOSE ROUTINE
*
         SPACE 2
PANCLOSE PENTRY
         SPACE 2
         IF    (TM,STATUS,PANOPN,O)
               SR    R0,R0         SET UP FOR PAM PCLOSE
               ST    R0,PANACTN
               CALLPAM PCLOSE,(PANACTN)
         SPACE 2
         DELETE EP=PAM             DELETE PAM MODULE FROM STORAGE
         FI
         SPACE 2
         IF    (TM,STATUS,PANALC,O)
               LA    R1,PANDDNM    DE-ALLOCATE PANVALET LIBRAY
               PM    UNALLOC
               PM    DAIRRC        PROCESS POSSIBLE DAIR ERROR
         FI
         SPACE 2
         PEXIT
         EJECT
*
*  ATTENTION EXIT TERMINATION
*
         SPACE 2
STAXTERM PENTRY
         SPACE 1
         IF    (TM,STATUS,STAXACTV,O)
               STAX
         FI
         PEXIT
         EJECT
*
*  GENERAL TERMINAL MESSAGE PUT ROUTINE
*
         SPACE 2
TERMPUT  PENTRY
         SPACE 2
         LH    R14,0(,R1)          LENGTH OF MESSAGE- 1
         EX    R14,MVCTMSG         MOVE MODEL TO WORK AREA
         SPACE 1
         LA    R14,TERMSG+1(R14)   END OF MESSAGE
         IF    (TM,2(R1),X'80',O)
               N     R15,TERMMASK  MASK WITH 0000FFFF
               CVD   R15,DWORK     PLACE RC IN MESSAGE
               MVC   0(6,R14),=X'402020202120' EDIT RC INTO
               ED    0(6,R14),DWORK+5  MESSAGE TEXT
               LA    R14,6(,R14)   END OF MODIFIED MSG
         FI
         SPACE 1
         IF    (TM,2(R1),X'40',O)  TEST FOR DAIR RET CODE
               UNPK  0(5,R14),0(3,R15)
               TR    0(4,R14),TMSGTR-240   TRANSLATE TO HEX
               LA    R14,4(,R14)
         FI
         SPACE 1
         IF    (TM,2(R1),X'20',O)  TEST FOR SUFFIX
               MVC   0(L'MSGSFX,R14),MSGSFX
               LA    R14,L'MSGSFX(,R14)
         FI
         SPACE 2
         IF    (TM,2(R1),X'10',O)  TEST FOR DSNAME PRINT
               STM   R2,R5,TERMSAVE SAVE REGISTERS TEMPORARILY
               LR    R2,R0         USE ADDRESSIBLE REG
               IF    (TM,6(R2),X'80',O)    TEST FOR DSNAME PRESENT
                     LH    R3,4(,R2)   GET LENGTH
                     BCTR  R3,0    DECREMENT FOR EX
                     L     R4,0(,R2)   DSNAME ADDR
                     EX    R3,MVCDSNMG MOVE DSNAME TO MESSAGE
                     LA    R14,1(R3,R14)   ADDR OF END OF MSG
               FI
               IF    (TM,14(R2),X'80',O)   TEST FOR MEMBER PRESENT
                     LH    R3,12(,R2)  GET LENGTH
                     BCTR  R3,0    DECREMENT FOR EX
                     L     R4,8(,R2)   MEMBER NAME ADDRESS
                     EX    R3,MVCMBRMG MOVE MEMBER TO MESSAGE
                     MVI   0(R14),C'('
                     LA    R14,2(R3,R14)   NEW END OF MESSAGE
                     MVI   0(R14),C')'
                     LA    R14,1(,R14)
               FI
               LM    R2,R5,TERMSAVE
         FI
         SPACE 2
         LR    R0,R14
         LA    R1,TERMSG
         SR    R0,R1               LENGTH OF MESSAGE
         LA    R1,TERMSG           START OF MESSAGE
         SPACE 1
         TPUT  (1),(0),R
         SPACE 1
         PEXIT
         SPACE 2
MSGSFX   DC    C'...NOTIFY CSD TECH SUPPORT'
TERMMASK DC    0F'0',X'0000FFFF'
*
MVCTMSG  MVC   TERMSG(*-*),3(R1)
MVCDSNMG MVC   0(*-*,R14),0(R4)
MVCMBRMG MVC   1(*-*,R14),0(R4)
         SPACE 1
TMSGTR   DC    0F'0',C'0123456789ABCDEF'
         EJECT
*
*  SHARED DISPOSITION DATA SET ALLOCATION ROUTINE
*
         SPACE 2
ALLOCSHR PENTRY
         SPACE 2
         MVC   DAIRWORK(DA08MDLL),DA08MDL MOVE MODEL TO WORK
         LA    R8,DAIRWORK         ESTABLISH DA08
         USING DA08CD,R8             ADDRESSIBILITY
         MVC   DA08DSP1(3),=X'080808'  DISP=(,CATLG,DELETE)
         IF    (TM,6(R1),X'40',Z)
               OI    DA08CTL,X'20' PREFIX WITH USERID
         FI
         IF    (TM,14(R1),X'80',O) TEST FOR MEMBER NAME
               LH    R2,12(,R1)    MOVE MEMBER NAME TO DA08
               BCTR  R2,0
               L     R3,8(,R1)
               EX    R2,MVCMBRNM
         FI
         SPACE 1
         LH    R2,4(,R1)           DSNAME LENGTH
         L     R3,0(,R1)           --> DSN
         STH   R2,DSNWORKL         SET IN WORK AREA
         BCTR  R2,0                DEC FOR EX
         EX    R2,MVCDSN           MOVE DSN TO WORK AREA
         LA    R1,DSNWORK          SET DSN POINTER IN DAPB
         ST    R1,DA08PDSN
         LR    R1,R8
         PM    DAIR                PERFORM COMMON DAIR PROCESSING
         SPACE 2
         LR    R1,R8               RETURN ADDRESS OF DAPB
         DROP  R8                  DROP DAPB ADDRESSIBILITY
         SPACE 2
         PEXIT
         EJECT
*
*   NEW DISPOSITION DATA SET ALLOCATION ROUTINE
*
         SPACE 2
ALLOCNEW PENTRY
         SPACE 2
         MVC   DAIRWORK(DA08MDLL),DA08MDL MOVE DA08 MODEL TO WORK
         LA    R8,DAIRWORK         AND PROVIDE
         USING DA08CD,R8           ADDRESSIBILITY
         SPACE 2
         MVC   DA08BLK,=F'4240'    INITIALIZE BLOCK
         IF    (LTR,R3,R0,Z)       TEST FOR SPACE ESTIMATE
               MVC   DA08PQTY,=F'30'   USE (4240,(30,30))
               MVC   DA08SQTY,=F'30'
         ELSE
               SR    R2,R2         CLEAR FOR DIVIDE
               D     R2,=F'53'     DIVIDE BY RECORDS PER BLOCK
               LA    R3,1(,R3)     ROUND UP
               ST    R3,DA08PQTY   USE AS PRIMARY QUANITY
               SR    R2,R2
               D     R2,=F'10'     USE 10% OF PRIMARY AS SECONDARY
               LA    R3,1(,R3)      ROUND UP
               ST    R3,DA08SQTY    USE AS SECONDARY QUAN
         FI
         SPACE 1
         MVC   DA08SER,=CL8'TSOSV1'                             BW001
         MVC   DA08DSP1(4),=X'04020450'  (NEW,CATLG,DELETE)   RLSE
         IF    (TM,6(R1),X'40',Z)  TEST FOR QUOTES
               OI   DA08CTL,X'20'  REQ USERID PREFIX
         FI
         IF    (TM,14(R1),X'80',O) TEST FOR MEMBER
               LH    R2,12(,R1)    MOVE MEMBER NAME TO DAIR BLOCK
               BCTR  R2,0
               EX    R2,MVCMBRNM
               MVC   DA08DQTY,=F'10'   SET DIRECTORY SPACE
         FI
         LH    R2,4(,R1)           MOVE DSNAME TO DAIR BLOCK
         L     R3,0(,R1)
         STH   R2,DSNWORKL
         BCTR  R2,0
         EX    R2,MVCDSN
         LA    R2,DSNWORK          SET DSN ADDRESS IN DAIR BLOCK
         ST    R2,DA08PDSN
         SPACE 2
         LR    R1,R8
         PM    DAIR                TO COMMON DAIR ROUTINE
         SPACE 2
         LR    R1,R8               RETURN ADDRESS OF DAPB
         DROP  R8                  DROP DA08
         SPACE 1
         PEXIT
MVCDSN   MVC   DSNWORKC(*-*),0(R3)
         USING DAPB08,R8
MVCMBRNM MVC   DA08MNM(*-*),0(R3)
         DROP  R8
         EJECT
*
*  DE-ALLOCATION ROUTINE
         SPACE 2
UNALLOC  PENTRY
         SPACE 2
         MVC   DAIRWORK(DA18MDLL),DA18MDL  INIT DAPB WITH MODEL
         MVC   DAIRWORK+DA18DDN-DAPB18(8),0(R1)   SET DDNAME
         LA    R1,DAIRWORK
         PM    DAIR                PERFORM DAIR FUNCTION
         SPACE 2
         PEXIT
         EJECT
*
*  DAIR RETURN CODE ANALYSIS ROUTINE
*
         SPACE 2
DAIRRC   PENTRY
         SPACE 2
         IF    (LTR,R15,R15,Z)     TEST FOR FALSE ENTRY
               PEXIT               EXIT IF SO
         ELSEIF  (CH,R15,=H'16',EQ)    TEST FOR NO TIOT ROOM
               LA    R1,DRC16      ERROR MSG
         ELSEIF  (CH,R15,=H'24',EQ)    TEST FOR CONCAT GROUP
               LA    R1,DRC24      ERROR MSG
         ELSEIF  (CH,R15,=H'8',EQ),OR,(CH,R15,=H'12',EQ)
               LA    R1,DRC8       ERROR MSG
               LA    R15,DAIRWORK+4    DAIR ERROR CODE ADDR
         ELSE
               LA    R1,DRCELSE    ALL ELSE MESSAGE
         FI
         PM    TERMPUT             OUTPUT MESSAGE
         PEXIT
         SPACE 2
         PEXIT
         SPACE 2
DRC8     $MSG  'DAIR ERROR CODE:',DC=YES
DRC16    $MSG  'NO ALLOCATION ROOM..DO A FREEALL AND TRY AGAIN'
DRC24    $MSG  'DSNAME IS CONCATENATED..DO A FREEALL AND TRY AGAIN'
DRCELSE  $MSG  'DAIR RETURN CODE:',RC=YES,SFX=YES
         EJECT
*
*  PAM RETURN CODE ANALYSIS ROUTINE
*
         SPACE 2
PANANAL  PENTRY
         SPACE 2
         IF    (CLI,PANACTN3,0,EQ)
               PEXIT               EXIT IF NO ERROR
         ELSEIF  (CLI,PANACTN3,23,EQ)
               LA    R1,PANERR23   FLAG PAN DATA SET NOT FOUND
         ELSEIF  (CLI,PANACTN3,245,EQ)
               LA    R1,PANERRF5   FLAG PARAMETER LIST ERROR
         ELSE
               LH    R15,PANACTN+2 FORMAT ALL OTHER ERROR MSGS
               LA    R1,PANERRM           WITH RETURN CODE IN PANACTN
         FI
         SPACE 2
         PM    TERMPUT
         SPACE 2
         PEXIT
         SPACE 2
PANERR23 $MSG  'PAN DSNAME SPECIFIED NOT IN LIBRARY'
PANERRF5 $MSG  'PAM PARM ERROR',SFX=YES
PANERRM  $MSG  'PANVALET ERROR CODE  PV',RC=YES,SFX=YES
         EJECT
*
*  COMMON DAIR INTERFACE ROUTINE
*
         SPACE 2
DAIR     PENTRY
         SPACE 2
         LA    R7,DAIRPL           ESTABLISH DAPL
         USING DAPL,R7               ADDRESSIBILITY
         SPACE 1
         ST    R1,DAPLDAPB         INITITALIZE THE DYNAMIC ALLOCATION
         L     R0,CPPLUPT          PARAMETER LIST
         ST    R0,DAPLUPT
         L     R0,CPPLECT
         ST    R0,DAPLECT
         LA    R0,ECB
         ST    R0,DAPLECB
         L     R0,CPPLPSCB
         ST    R0,DAPLPSCB
         SR    R0,R0
         ST    R0,ECB              RESET THE ECB
         SPACE 2
         LR    R1,R7
         CALLTSSR  EP=IKJDAIR,MF=(E,(1))
         DROP R7
         SPACE 2
         PEXIT
         EJECT
*
*  ATTENTION EXIT ROUTINE
*
         SPACE 2
STAXEXIT DS    0H
         L     R2,8(,R1)           ERROR INDICATOR ADDRESS
         OI    0(R2),ATTN          FLAG ATTENTION EXIT
         BR    R14                 RETURN TO PROCESS
         TITLE 'CONSTANTS AND LITERALS'
DSDCBMFL DCB   MACRF=(PM),DSORG=PS,DDNAME=DSDCB,RECFM=FB,LRECL=80
DSDCBL   EQU   *-DSDCBMFL
DSDCBOPN OPEN  (0,OUTPUT),MF=L
DSDCBCLS CLOSE 0,MF=L
         SPACE 3
         PRINT GEN
DA08MDL  DC    0F'0',X'0008',3X'0000',A(0),3CL8' ',4F'0'
         DC    2CL8' ',4X'00',XL3'00',X'00',CL8' '
DA08MDLL EQU   *-DA08MDL
         SPACE 2
DA18MDL  DC   0F'0',X'0018',3X'0000',A(0),2CL8' ',CL2' ',X'0810',CL8' '
DA18MDLL EQU   *-DA18MDL
         SPACE 2
PANLIBDF DC    A(DFLTLIB),AL2(L'DFLTLIB),X'C0',X'00'
         DC    A(0),AL2(0),X'00',X'00'
DFLTLIB  DC    C'FPC.WORK'
         SPACE 2
YES      DC    CL8'YES'
NOENTRY  DC    C'NO-ENTRY'
BLANKS   DC    CL80' '
COMMENT  DC    C'COMMENT '
         SPACE 2
         EQUAL
         TITLE 'PARS CONTROL LIST'
         SPACE 2
PCL      IKJPARM DSECT=PDL
         SPACE 2
PDLPANDS IKJIDENT 'PAN DATA-SET NAME',MAXLNTH=10,OTHER=ALPHANUM,       X
               ASTERISK
         SPACE 2
PDLLIBKY IKJKEYWD
         IKJNAME 'LIBRARY',SUBFLD=PDLLIBSF
         SPACE 2
PDLDSKY  IKJKEYWD
         IKJNAME 'DATASET',SUBFLD=PDLDSSF
         SPACE 2
PDLCMTKY IKJKEYWD
         IKJNAME 'COMMENT'
         IKJNAME 'NOCOMMENT'
         SPACE 2
PDLLIBSF IKJSUBF
PDLLIB   IKJPOSIT DSNAME,PROMPT='PANVALET LIBRARY NAME'
         SPACE 2
PDLDSSF  IKJSUBF
PDLDS    IKJPOSIT DSTHING,                                             X
               DEFAULT='PANDIR.DATA'
         SPACE 2
         IKJENDP
         TITLE 'GETMAIN WORK AREAS'
WORK     DSECT
*
*  CONTROL FLAGS FOR THIS COMMAND PROCESSOR
*
ERR      DS    X                   ERROR CONTROL INDICATOR
PARSERR  EQU   X'80'                 PARSE ROUTINE ERROR
PANERR   EQU   X'40'                 PANVALET INTERFACE ERROR
DSERR    EQU   X'20'                 TSO DATASET ERROR
TSOCP    EQU   X'10'                 TSO CTRL PGM GEN ERROR
ATTN     EQU   X'01'                 ATTN INDICATOR
         SPACE 2
STATUS   DS    X                   FILE STATUS INDICATOR
PANALC   EQU   X'80'                 PAN LIBRARY ALLOCATED
PANOPN   EQU   X'40'                 PAN LIBRARY OPEN
DSALC    EQU   X'20'                 TSO DATASET ALLOCATED
DSOPN    EQU   X'10'                 TSO DATASET OPEN
TERMOUT  EQU   X'08'                 OUTPUT TO TERMINAL
STAXACTV EQU   X'04'                 ATTN EXIT ACTIVE
         SPACE 2
*
*  PARSE CONTROL BLOCKS
*
PARSEPL  DS    7A                  PARSE PARAMETER LIST
ANSWER   DS    A                   PARSE ANSWER AREA
ECB      DS    A                   PARSE AND DAIR ECB
         SPACE 2
*
*  DAIR CONTROL BLOCKS
*
DAIRPL   DS    5A                  DAIR PARAMETER LIST
DAIRWORK DS    21A                 WORK AREA FOR ALL DAIR PARM BLOCKS
DSNWORK  DS    0H                  DSNAME WORK AREA
DSNWORKL DS    H
DSNWORKC DS    CL44
         SPACE 2
*
*  PAM WORK AREAS
*
PAMEP    DS    A                   PAM ENTRY POINT ADDRESS
         SPACE 1
PANACTN  DS    F                   ACTION
PANACTN3 EQU   *-1
PANDIR   DS    CL80                DIRECTORY
PANNAME1 DS    CL22                NAME1
PANNAME2 DS    CL11                NAME2
PANCMNT  DS    CL52                COMMENT
PANSUBST DS    CL27                SUBSET
PANRECD  DS    CL80                OUTPUT RECORD FROM PAM
PANDDNM  DS    CL8                 DDNAME
PANBKUP  DS    CL8                 BACKUP TAPE
         SPACE 2
         TITLE 'MISC CONTROL BLOCKS AND WORK AREAS'
DSDCB    DS    0F,XL(DSDCBL)       DCB AREA FOR TSO DATASET
DSDCBOC  DS    A                   OPEN/CLOSE WORK AREA
         SPACE 2
DSDFLT   DS    CL16                DATASET NAME WORK AREA
DSDDNM   DS    CL8                 DATASET DDNAME SAVE AREA
         SPACE 2
DWORK    DS    D                   WORK AREA
TERMSAVE DS    4F                  TERMPUT TEMP REG SAVEAREA
CALLMFL  CALL  ,(0,0,0,0,0,0),MF=L CALL WORK AREA
TERMSG   DS    CL160               TERM MESSAGE AREA
         SPACE 2
STAXMFL  DS    0F,XL(STAXREFL)     STAX PARAMETER LIST
         SPACE 2
WORKL    EQU   *-WORK
         TITLE 'PARSE DSECT'
         IKJCPPL
         IKJPPL
         TITLE 'DAIR DSECT'
         IKJDAPL
         IKJDAP08
         IKJDAP18
         TITLE 'CVT DSECT'
         CVT   DSECT=YES,LIST=NO
         SPACE 5
         END   PANDIREC
