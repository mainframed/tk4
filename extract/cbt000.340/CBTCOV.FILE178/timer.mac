*          DATA SET GU701000   AT LEVEL 016 AS OF 04/21/79
*          DATA SET GU701000   AT LEVEL 011 AS OF 10/31/77
*          DATA SET GU701000   AT LEVEL 007 AS OF 08/13/75
         TITLE 'TIMER SUPERVISOR SUBROUTINE'
*              AUTHOR.   DON HIGGINS.
*              DATE.     12/13/74.
*              REMARKS.  PROVIDE FULL TIMER FACILITIES TO CALLING
*                        PROGRAM.
*              ARGUMENTS.
*                   CALL TIMER(OPTION,ARG1,ARG2,,,,,ARGN)
*                        OPTION    - FULL WORD BINARY OPERATION CODE.
*                        ARGN      - ARGUMENTS AS DEFINED FOR OPTION
*              OPTIONS.
*                  1.    SET MAXIMUM CPU TIME ALLOWED TO THE VALUE OF
*                        ARG1 SPECIFIED IN SECONDS.  IF THE MAXIMUM
*                        IS EXCEED, THE JOB IS ABENDED WITH A USER 322
*                        ABEND. (SEE #3 FOR EXCEPTION)
*                  2.    SET MAXIMUM REAL ELAPSED TIME ALLOWED TO THE
*                        VALUE OF ARG1 SPECIFIED IN SECONDS.  IF THE
*                        MAXIMUM IS EXCEED, THE JOB IS ABENDED WITH A
*                        USER 322 ABEND.   (SEE #3 FOR EXCEPTION)
*                  3.    SET ARG1 TO A VALUE OF 1 WHEN
*                        THE PREVIOUSLY ESTABLISHED TIME LIMIT SET BY
*                        OPTION 1 OR 2 EXPIRES.  THIS OPTION CALL MUST
*                        BE REISSUED EACH TIME OPTION 1 OR 2 IS ISSUED
*                        OR THE DEFAULT ABEND WILL OCCUR.  TIME IS
*                        INITIALIZED TO 0 BY THIS CALL.
*                  4.    WAIT FOR THE REAL ELAPSED TIME INTERVAL
*                        SPECIFIED BY THE VALUE OF ARG1 IN SECONDS.
*                        THIS OPTION CANCELS ANY PREVIOUS OPTIONS.
*                  5.    SET ARG1 TO CPU TIME USED IN MICRO-SECONDS
*                        SINCE LAST CALL.  THIS OPTION CANNOT BE
*                        INTERMIXED WITH OPTIONS 2 OR 4     SINCE IT
*                        USES THE INTERVAL TIMER IN CPU MODE.
*                  6.    SET ARG1 TO REAL ELAPSED TIME IN MILL-SECONDS
*                        SINCE LAST CALL.
*                  7.    SET ARG1 TO TIME OF DAY IN THE FORM OF AN
*                        8 DIGIT BINARY NUMBER HHMMSSTH.
*                  8.    SET ARG1 TO DATE IN THE FORM OF A 6 DIGIT
*                        BINARY NUMBER MMDDYY.
*                  9.    SET ARG1 TO TIME OF DAY IN 0.01 SEC
*                 10.    SET ARG2 TO BINARY YYDDD GIVEN
*                        ARG1 AS A BINARY MMDDYY.
*                 11.    SET ARG2 TO DISPLAY MM/DD/YY GIVEN
*                        ARG1 AS BINARY YYDDD.
*                 12.    SET ARG1 TO 24 BYTE TIME AND DATE IN THE
*                        FORM HH/MM/SS.TH  YYDDD.
*                 13.    SET ARG1 TO 8 BYTE MM/DD/YY.
*                 14.    SET ARG1 TO 16 BYTE GREGORIAN AND JULIAN
*                        CURRENT DATE  MM/DD/YY   YYDDD.
*                 15.    SET ARG1 TO DAY OF WEEK (MON=1).
*                 16.    SET ARG2 TO DAY OF WEEK GIVEN ARG1 AS
*                        BINARY YYDDD.
*                 17.    SET ARG1 TO BINARY YYDDD.
*
*        MAINTENANCE.
*
*        10/27/77 DSH - ADD OPTIONS 10, 11, 12, 13
*        04/17/79 DSH - FIX OPTION 10 BUG CAUSING 0C7
*                       ADD OPTION 14, 15, 16, AND 17.
*
         TITLE 'MAINLINE'
         PRINT NOGEN
TIMER    SUBENTRY
         LM    R2,R3,0(R1)
         ZR    R15
         IC    R15,3(R2)
         DOCASE (R15)
               CASE 1              CPU TIME LIMIT
                    MVI  TEXIT,ABEND
                    L    R3,0(R3)            R3=MINUTES
                    MH   R3,=AL2(100)        R3=0.01 SEC
                    ST   R3,INTERVAL
                    STIMER TASK,TIMEREXT,BINTVL=INTERVAL
                    TTIMER
                    ST   R0,LASTCPU
               ESAC
               CASE 2              ELAPSED TIME LIMIT
                    MVI  TEXIT,ABEND
                    L    R3,0(R3)
                    MH   R3,=AL2(100)
                    ST   R3,INTERVAL
                    STIMER REAL,TIMEREXT,BINTVL=INTERVAL
               ESAC
               CASE 3      POST ARG1 AT END OF INTERVAL
                    MVC  0(4,R3),=XL4'00'
                    ST   R3,ATIME
                    MVI  TEXIT,POST
               ESAC
               CASE 4      WAIT FOR ARG1 SECONDS
                    L    R3,0(R3)
                    MH   R3,=H'100'
                    ST   R3,INTERVAL
                    STIMER WAIT,BINTVL=INTERVAL
               ESAC
               CASE 5      SET ARG1 TO CPU TIME USED IN INTERVAL
                    L    R2,LASTCPU
                    TTIMER
                    SR   R2,R0
                    MH   R2,=H'26'
                    ST   R2,0(R3)
                    IF   (LTR,R0,R0,Z)
                         STIMER TASK,TIMEREXT,BINTVL=MAXCPU
                         TTIMER
                    FI
                    ST   R0,LASTCPU
               ESAC
               CASE 6               SET ARG1 TO REAL ELAPSED TIME
                    TIME BIN
                    L    R1,LASTREAL
                    ST   R0,LASTREAL
                    SR   R0,R1
                    MH   R0,=H'10'
                    ST   R0,0(R3)
               ESAC
               CASE 7                SET ARG1 TO BINARY TOD HHMMSSTH
                    TIME DEC
                    ST   R0,PWORK+4
                    STC  R0,BWORK+1
                    OI   PWORK+7,X'0F'
                    NI   BWORK+1,X'0F'
                    CVB  R0,PWORK
                    MH   R0,=H'10'
                    AH   R0,BWORK
                    ST   R0,0(R3)
               ESAC
               CASE 8                SET ARG1 TO BINARY DATE YYDDD
                    SCALL SROSDATE,(MMXDDXYY)
                    MVC  MMXDDXYY+2(2),MMXDDXYY+3
                    MVC  MMXDDXYY+4(2),MMXDDXYY+6
                    PACK PWORK,MMXDDXYY(6)
                    CVB  R0,PWORK
                    ST   R0,0(R3)
               ESAC
               CASE 9                SET ARG1 TO BINARY TOD IN 0.01S
                    TIME BIN
                    ST   R0,0(R3)
               ESAC
               CASE 10                SET ARG2 TO BINARY YYDDD FROM
*                                     ARG1 AS BINARY MMDDYY
                    L    R4,8(R1)
                    L    R0,0(R3)
                    CVD  R0,PWORK
                    UNPK DWORK,PWORK+4(4)
                    OI   DWORK+6,X'F0'
                    MVC  MMDDYY,DWORK+1
                    SCALL SRCVTGRE,(MMDDYY)
                    PACK PWORK,MMDDYY
                    CVB  R0,PWORK
                    ST   R0,0(R4)
               ESAC
               CASE 11               SET ARG2 TO DISPLAY MM/DD/YY
*                                    FROM ARG1 BINARY YYDDD
                    L    R4,8(R1)
                    L    R0,0(R3)
                    CVD  R0,PWORK
                    SCALL SRCVTJUL,(PWORK+5,MMXDDXYY)
                    MVC  0(8,R4),MMXDDXYY
               ESAC
               CASE 12             SET ARG1 TO 24 BYTE TIME AND DATE
                    LA   R1,4(R1)
                    SCALL TOD
               ESAC
               CASE 13             SET ARG1 TO 8 BYTE MM/DD/YY
                    LA   R1,4(R1)
                    SCALL SROSDATE
               ESAC
               CASE 14             SET ARG1 TO 16 BYTE MM/DD/YY YYDDD.
                    LA   R1,4(R1)
                    SCALL SROSDATE
                    TIME  DEC
                    ZAP   PWORK,=P'0'
                    ST    R1,PWORK+4
                    MVC   8(3,R3),=CL3' '
                    UNPK  11(5,R3),PWORK+5(3)
                    OI    15(R3),X'F0'
               ESAC
               CASE 15             SET ARG1 TO DOW
                    LA    R1,4(R1)
                    SCALL GU719000
               ESAC
               CASE 16             SET ARG2 TO DOW GIVEN ARG1 YYDDD
                    L     R4,8(R1)
                    L     R0,0(R3)
                    CVD   R0,PWORK
                    SCALL GU719100,(PWORK+4,PWORK+4)
                    CVB   R0,PWORK
                    ST    R0,0(R4)
               ESAC
               CASE 17             SET ARG1 TO BINARY YYDDD.
                    TIME  DEC
                    ZAP   PWORK,=P'0'
                    ST    R1,PWORK+4
                    CVB   R0,PWORK
                    ST    R0,0(R3)
               ESAC
               CASE ELSE
                    ABEND 111,DUMP
               ESAC
         ESACOD
         SUBEXIT
         DROP
         TITLE 'TIMER EXIT ROUTINE'
TIMEREXT SUBENTRY CSECT=NO
         IF    (CLI,TEXIT,POST,EQ)
               L    R1,ATIME
               MVC  0(4,R1),=A(1)
               MVI  TEXIT,ABEND
         ELSE
               ABEND 322,DUMP
         FI
         SUBEXIT
         TITLE 'COMMON DATA'
         EQUAL
TEXIT    LOGICAL ABEND,(POST,ABEND)
ATIME    DC    A(0)
LASTCPU  DC    A(0)
LASTREAL DC    A(0)
INTERVAL DC    F'0'
PWORK    DC    D'0'
BWORK    DC    H'0'
DWORK    DC    CL7' '
MMXDDXYY DC    CL8' '
MMDDYY   DC    CL6' '
MAXCPU   DC    A(12*60*60*100) 12 HRS IN 0.01 SEC.
         END
