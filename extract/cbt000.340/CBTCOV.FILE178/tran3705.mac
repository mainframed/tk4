*          DATA SET GU006400   AT LEVEL 001 AS OF 09/05/72
         TITLE 'TRAN3705 - TRANSLATE DUMP TO IBM 3705 ASSEMBLER'
         PRINT NOGEN
TRAN3705 SUBENTRY BASES=(R13,R8)
*              AUTHOR.   DON HIGGINS.
*              DATE.     07/25/72.
*              REMARKS.  READ SUPERZAP DUMP OUTPUT OF 3705 CODE AND
*                        CONVERT TO 3705 EXPLICIT ASSEMBLER CODE.
*
         OPEN  (SYSUT1,(INPUT),SYSUT2,(OUTPUT),SYSUT3,(OUTPUT))
         PUT   SYSUT3,PCHNAME
L1       TAG
         GET   SYSUT1
         LR    R2,R1
         PUT   SYSUT2,(R2)
         CLC   CCHHR(2,R2),=C'00'  FIND LINE OF DUMP
         BNE   L1
         PUT   SYSUT2,SPACE
         MVC   ADDR,CCHHR(R2)
         LA    R2,BYTE1(R2)        R2=A(DUMP DATA)
         LA    R3,16               R3=LINES OF CODE/LINE OF DUMP
L2       TAG
         BAL   R12,SETUP
         BAL   R12,DECODE
         BAL   R12,EDIT
         SR    R1,R1
         IC    R1,ADDTAB(R3)
         LA    R2,0(R1,R2)         R2=A(NEXT DATA)
         CLC   HEX,=CL4' '
         BE    UPADDR
         PUT   SYSUT2,LINE
         MVC   PCHOP,OP
         MVC   PCHOPR,OPR
         MVC   PCHADDR,ADDR
         MVC   PCHHEX,HEX
         PUT   SYSUT3,PCHREC
         CLC   OP,=CL4'BAL'
         BE    *+14
         CLC   OP,=CL4'LA'
         BNE   UPADDR
         PUT   SYSUT3,REORG
UPADDR   TAG
         TR    ADDR+5(1),CTAB2-193
         CLI   ADDR+5,C'0'
         BNE   *+10
         TR    ADDR+4(1),CTAB1-193
         BCT   R3,L2
         PUT   SYSUT2,SPACE
         B     L1
EOF      TAG
         PUT   SYSUT3,PCHEQU
         PUT   SYSUT3,PCHEND
         CLOSE (SYSUT1,,SYSUT2,,SYSUT3)
         SUBEXIT
*
*              PUT BINARY INS INTO HWORD PLUS 4 WORK AREAS
*
SETUP    TAG
         MVC   HEX,0(R2)
         TR    0(4,R2),ETAB-193
         PACK  HWORD(3),0(5,R2)
         MVC   HWORK,HWORD
         BR    R12
*
*              OBTAIN INS INDEX (0-51)
*                  TR LEFT SIDE.
*                  IF TR CODE IS < X'80', IT IS INS INDEX.
*                  IF TR CODE IS > X'80', IT IS POINTER TO 1 OF 3
*                  TABLES FOR TR OF RIGHT SIDE.
*                  TR OF RIGHT SIDE GIVES INS INDEX DIRECTLY.
*
DECODE   TAG
         TR    HWORK(1),DTL1
         TM    HWORK,X'80'
         BZ    SETOP
         NI    HWORK,X'7F'
         SR    R1,R1
         IC    R1,HWORK
         SLL   R1,8
         LA    R1,DTRTAB(R1)
         TR    HWORK+1(1),0(R1)
         MVC   HWORK(1),HWORK+1
SETOP    TAG
         SR    R1,R1
         IC    R1,HWORK
         BR    R12
*
*              SET UP EXPLICIT OPERAND
*
EDIT     TAG
         LR    R5,R1
         SLL   R5,2
         LA    R5,INSTAB(R5)
         MVC   OP,0(R5)
         MVC   OPR,OPR-1
         LA    R6,OPR
*
*              BRANCH TO UNIQUE EDIT ROUTINE BY INS TYPE CODE
*
         IC    R1,TYPTAB(R1)
         SLL   R1,2
         L     R1,TYPRTN-4(R1)
         BR    R1
*
*              RR - REGISTER TO REGISTER  R1,R2
*
FRR      TAG
         BAL   R11,PR1
         BAL   R14,PCOM
         BAL   R11,PR2
         BR    R12
*
*              RI - REGISTER IMMEDIATE  R(N),I
*
FRI      TAG
         BAL   R11,PR1N1
         BAL   R14,PCOM
         SR    R1,R1
         IC    R1,HWORK+7
         SRL   R1,4
         IC    R1,HEXTAB(R1)
         MVC   0(2,R6),=C'X'''
         STC   R1,2(R6)
         NI    HWORK+7,X'0F'
         IC    R1,HWORK+7
         IC    R1,HEXTAB(R1)
         STC   R1,3(R6)
         MVI   4(R6),C''''
         LA    R6,6(R6)
         BR    R12
*
*              RT - BRANCH ON COUNT OR BIT   R(N),T    R(N,M),T
*
FRT      TAG
         BAL   R11,PR1N1
         BAL   R14,PCOM
         CLI   OP+2,C'T'
         BE    PT
         BCTR  R6,R0
         BCTR  R6,R0
         BAL   R14,PCOM
         SR    R1,R1
         TM    HWORD,X'20'
         BZ    *+8
         LA    R1,4(R1)
         TM    HWORD,X'10'
         BZ    *+8
         LA    R1,2(R1)
         TM    HWORD+1,X'80'
         BZ    *+8
         LA    R1,1(R1)
         BAL   R14,PNUM1
         MVC   0(2,R6),=C'),'
         LA    R6,2(R6)
PT       TAG
         BAL   R14,PASK
         MVI   0(R6),C'+'
         TM    HWORD+1,X'01'
         BZ    *+8
         MVI   0(R6),C'-'
         LA    R6,1(R6)
         NI    HWORK+3,X'7E'
         SR    R1,R1
         IC    R1,HWORK+3
         LA    R1,2(R1)
         TM    HWORD+1,X'01'
         BZ    *+8
         SH    R1,=H'4'
         BAL   R14,PNUM
         BR    R12
*
*              RT - BRANCH ON CONDITION  T
*
PBT      TAG
         BAL   R14,PASK
         MVI   0(R6),C'+'
         TM    HWORD+1,X'01'
         BZ    *+8
         MVI   0(R6),C'-'
         LA    R6,1(R6)
         NI    HWORK+2,X'07'
         NI    HWORK+3,X'FE'
         LH    R1,HWORK+2
         LA    R1,2(R1)
         TM    HWORD+1,X'01'
         BZ    *+8
         SH    R1,=H'4'
         BAL   R14,PNUM
         BR    R12
PASK     TAG
         MVI   0(R6),C'*'
         LA    R6,1(R6)
         BR    R14
*
*              RA - REGISTER IMMEDIATE ADDRESS   R,A
*
FRA      TAG
         BAL   R11,PR1
         MVC   0(4,R6),=C',*-*'
         BR    R12
*
*              EXIT CURRENT LEVEL
*
FEXIT    TAG
         TM    HWORD,X'07'
         BZ    0(R12)
         MVC   OP,=CL4'DC'
*
*              DATA (INS INDEX 0)
*
FDATA    TAG
         MVC   0(2,R6),=C'X'''
         MVC   2(4,R6),HEX
         MVI   6(R6),C''''
         BR    R12
*
*              RE - REGISTER TO EXTERNAL REGISTERS IN/OUT R,E
*
FRE      TAG
         BAL   R11,PR1
         MVC   0(3,R6),=C',X'''
         LA    R6,3(R6)
         NI    HWORK+2,X'70'
         SR    R1,R1
         IC    R1,HWORK+2
         SRL   R1,4
         IC    R1,HEXTAB(R1)
         STC   R1,0(R6)
         IC    R1,HWORK+3
         SRL   R1,4
         IC    R1,HEXTAB(R1)
         STC   R1,1(R6)
         MVI   2(R6),C''''
         BR    R12
*
*              RS - REGISTER TO STORAGE  R,D(B)
*
FRS      TAG
         BAL   R11,PR1
         TM    HWORD+1,X'01'
         BZ    PD
PBD      TAG
         NI    HWORK+3,X'7E'
         SR    R1,R1
         IC    R1,HWORK+3
         BAL   R14,PCOM
         BAL   R14,PNUM
         BAL   R11,PB
         TM    HWORD,X'70'
         BNZ   0(R12)
         MVC   1(7,R6),=C'X''0700'''
         BR    R12
PD       TAG
         NI    HWORK+3,X'7C'
         SR    R1,R1
         IC    R1,HWORK+3
         BAL   R14,PCOM
         BAL   R14,PNUM
         BAL   R11,PB
         TM    HWORD,X'70'
         BNZ   0(R12)
         MVC   1(7,R6),=C'X''0780'''
         BR    R12
*              RS - REGISTER CHARACTER TO STORAGE  R(N),D(B)
*
*
FRNS     TAG
         BAL   R11,PR1N1
         BAL   R14,PCOM
         NI    HWORK+3,X'7F'
         SR    R1,R1
         IC    R1,HWORK+3
         BAL   R14,PNUM
         BAL   R11,PB
         TM    HWORD,X'70'
         BNZ   0(R12)
         MVC   1(7,R6),=C'X''0680'''
         BR    R12
*
*              RSA - REGISTER CHARACTER AND COUNT  R(N),B
*
FRSA     TAG
         BAL   R11,PR1N1
         BAL   R14,PCOM
         BAL   R11,PR2
         BR    R12
*
*              RR - REGISTER TO REGISTER CHARACTER  R1(N1),R2(N2)
*
FRNRN    TAG
         BAL   R11,PR1N1
         BAL   R14,PCOM
         BAL   R11,PR2N2
         BR    R12
*
*              SETUP R1
*
PR1      TAG
         BAL   R14,PR
         NI    HWORK+4,X'07'
         SR    R1,R1
         IC    R1,HWORK+4
         BAL   R14,PNUM1
         BR    R11
*
*              SETUP COMMA
*
PCOM     TAG
         MVI   0(R6),C','
         LA    R6,1(R6)
         BR    R14
*
*              SETUP R2
*
PR2      TAG
         BAL   R14,PR
         NI    HWORK+6,X'70'
         SR    R1,R1
         IC    R1,HWORK+6
         SRL   R1,4
         BAL   R14,PNUM1
         BR    R11
*
*              SETUP R1(N1)
*
PR1N1    TAG
         BAL   R14,PR
         NI    HWORK+4,X'07'
         OI    HWORK+4,X'01'
         SR    R1,R1
         IC    R1,HWORK+4
         BAL   R14,PNUM1
         MVI   0(R6),C'('
         MVI   1(R6),C'0'
         TM    HWORD,X'01'
         BZ    *+8
         MVI   1(R6),C'1'
         MVI   2(R6),C')'
         LA    R6,3(R6)
         BR    R11
*
*              SETUP R2(N2)
*
PR2N2    TAG
         BAL   R14,PR
         NI    HWORK+6,X'70'
         OI    HWORK+6,X'10'
         SR    R1,R1
         IC    R1,HWORK+6
         SRL   R1,4
         BAL   R14,PNUM1
         MVI   0(R6),C'('
         MVI   1(R6),C'0'
         TM    HWORD,X'10'
         BZ    *+8
         MVI   1(R6),C'1'
         MVI   2(R6),C')'
         LA    R6,3(R6)
         BR    R11
*
*              SETUP (B)
*
PB       TAG
         MVI   0(R6),C'('
         LA    R6,1(R6)
         BAL   R14,PR
         NI    HWORK+6,X'70'
         SR    R1,R1
         IC    R1,HWORK+6
         SRL   R1,4
         BAL   R14,PNUM1
         MVI   0(R6),C')'
         LA    R6,1(R6)
         BR    R11
*
*              SETUP CHARACTER R
*
PR       TAG
         MVI   0(R6),C'R'
         LA    R6,1(R6)
         BR    R14
*
*              SETUP R, N, OR B DIGIT
*
PNUM1    TAG
         IC    R1,HEXTAB(R1)
         STC   R1,0(R6)
         LA    R6,1(R6)
         BR    R14
*
*              SETUP T OR D NUMBER WITH ZERO SURPRESS
*
PNUM     TAG
         CVD   R1,PWORK
         UNPK  DWORK,PWORK+5(3)
         OI    DWORK+4,X'F0'
         LA    R9,4
         LA    R10,DWORK
PNUML    TAG
         CLI   0(R10),C'0'
         BNE   PMOVE
         LA    R10,1(R10)
         BCT   R9,PNUML
PMOVE    TAG
         EX    R9,PMVC
         LA    R6,1(R9,R6)
         BR    R14
PMVC     MVC   0(0,R6),0(R10)
*
*              DATA
*
         EQUREGS
         LTORG
SYSUT1   DCB   DSORG=PS,MACRF=GL,DDNAME=SYSUT1,EODAD=EOF,              X
               RECFM=F,BLKSIZE=121
SYSUT2   DCB   DSORG=PS,MACRF=PM,DDNAME=SYSUT2,                        X
               RECFM=FA,BLKSIZE=121
SYSUT3   DCB   DSORG=PS,MACRF=PM,DDNAME=SYSUT3,                        X
               RECFM=F,BLKSIZE=80
PCHREC   DS    0CL80
         DC    CL10' '
PCHOP    DC    CL4' '
         DC    CL2' '
PCHOPR   DC    CL20' '
         DC    CL3' '
PCHADDR  DC    CL6' ',CL3' '
PCHHEX   DC    CL4' '
         FILL  PCHREC
PCHNAME  DC    CL80'TRAN3705  CSECT'
REORG    DC    CL80'          ORG   *-2'
PCHEQU   DC    CL80'          EQUREGS'
PCHEND   DC    CL80'          END'
CCHHR    EQU   2
BYTE1    EQU   CCHHR+9
ADDTAB   DC    AL1(0,0,4,7,4,7,4,7,4,9,4,7,4,7,4,7,4)
CTAB1    DC    C'BCDEF0',41C'X',C'123456789A'
CTAB2    DC    C'CXEX0X',41C'X',C'2X4X6X8XAX'
SPACE    DC    CL133' '
LINE     DS    0CL133
         DC    CL2' '
ADDR     DC    CL6' ',CL3' '
HEX      DC    CL4' ',CL3' '
OP       DC    CL4' ',CL3' '
OPR      DC    CL20' '
         FILL  LINE
ETAB     DC    X'FAFBFCFDFEFF',41X'00',C'0123456789'
HWORD    DC    H'0'
HWORK    DC    XL8'00'
DTL1     EQU   *
         DC    8AL1(IDTR1),8AL1(IDTR2) 0
         DC    8AL1(IDTR1),8AL1(IDTR2) 1
         DC    8AL1(IDTR1),8AL1(IDTR2) 2
         DC    8AL1(IDTR1),8AL1(IDTR2) 3
         DC    8AL1(IDTR1),8AL1(IDTR2) 4
         DC    8AL1(IDTR1),8AL1(IDTR2) 5
         DC    8AL1(IDTR1),8AL1(IDTR2) 6
         DC    8AL1(IDTR1),8AL1(IDTR2) 7
         DC    8AL1(06),8AL1(03)       8
         DC    8AL1(07),8AL1(02)       9
         DC    8AL1(08),8AL1(01)       A
         DC    8AL1(09),8AL1(IDTR3)    B
         DC    8AL1(10),8AL1(05)       C
         DC    8AL1(11),8AL1(05)       D
         DC    8AL1(12),8AL1(05)       E
         DC    8AL1(13),8AL1(05)       F
IDTR1    EQU   X'80'
IDTR2    EQU   X'81'
IDTR3    EQU   X'82'
DTRTAB   EQU   *
DTR1     EQU   *
*
*                   0  1  2  3  4  5  6  7  8  9  A  B  C  D  E  F
*
         DC    AL1(00,26,28,26,48,26,28,26,14,26,28,26,47,26,28,26) 0
         DC    AL1(22,26,28,26,48,26,28,26,15,26,28,26,47,26,28,26) 1
         DC    AL1(00,26,28,26,48,26,28,26,16,26,28,26,47,26,28,26) 2
         DC    AL1(23,26,28,26,48,26,28,26,17,26,28,26,47,26,28,26) 3
         DC    AL1(46,26,28,26,48,26,28,26,18,26,28,26,47,26,28,26) 4
         DC    AL1(00,26,28,26,48,26,28,26,19,26,28,26,47,26,28,26) 5
         DC    AL1(00,26,28,26,48,26,28,26,20,26,28,26,47,26,28,26) 6
         DC    AL1(00,26,28,26,48,26,28,26,21,26,28,26,47,26,28,26) 7
         DC    AL1(30,27,29,27,48,27,29,27,38,27,29,27,47,27,29,27) 8
         DC    AL1(31,27,29,27,48,27,29,27,39,27,29,27,47,27,29,27) 9
         DC    AL1(32,27,29,27,48,27,29,27,40,27,29,27,47,27,29,27) A
         DC    AL1(33,27,29,27,48,27,29,27,41,27,29,27,47,27,29,27) B
         DC    AL1(34,27,29,27,48,27,29,27,42,27,29,27,47,27,29,27) C
         DC    AL1(35,27,29,27,48,27,29,27,43,27,29,27,47,27,29,27) D
         DC    AL1(36,27,29,27,48,27,29,27,44,27,29,27,47,27,29,27) E
         DC    AL1(37,27,29,27,48,27,29,27,45,27,29,27,47,27,29,27) F
DTR2     EQU   *
         DC    128AL1(24),128AL1(25)
DTR3     EQU   *
         DC    AL1(49,49,49,49),28AL1(00)
         DC    AL1(50,50,50,50),28AL1(00)
         DC    AL1(51,51,51,51),60AL1(00)
         DC    128AL1(04)
*
*                   0   1   2   3   4   5   6   7   8   9
INSTAB   EQU   *
         DC    C'DC  B   BCL BZL BCT BB  LRI ARI SRI CRI '      0
         DC    C'XRI ORI NRI TRM LCR ACR SCR CCR XCR OCR '      1
         DC    C'NCR LCORICT STCTIC  STC LH  STH L   ST  '      2
         DC    C'LHR AHR SHR CHR XHR OHR NHR LHORLR  AR  '      3
         DC    C'SR  CR  XR  OR  NR  LOR BALRIN  OUT BAL '      4
         DC    C'LA  EXIT'                                      5
*
A        EQU   10
B        EQU   11
C        EQU   12
*
*                  0 1 2 3 4 5 6 7 8 9
*
TYPTAB   EQU   *
         DC    AL1(9,C,C,C,3,3,2,2,2,2)  0
         DC    AL1(2,2,2,2,A,A,A,A,A,A)  1
         DC    AL1(A,A,8,8,B,B,7,7,7,7)  2
         DC    AL1(1,1,1,1,1,1,1,1,1,1)  3
         DC    AL1(1,1,1,1,1,1,1,6,6,4)  4
         DC    AL1(4,5)                  5
*                  1   2   3   4     5   6   7   8    9    A      B
*
TYPRTN   DC    A(FRR,FRI,FRT,FRA,FEXIT,FRE,FRS,FRSA,FDATA,FRNRN,FRNS)
*                 C
         DC    A(PBT)
HEXTAB   DC    C'0123456789ABCDEF'
DWORK    DC    CL5' '
PWORK    DC    D'0'
         END   TRAN3705
