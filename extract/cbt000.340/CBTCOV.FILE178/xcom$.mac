*          DATA SET SR305000   AT LEVEL 038 AS OF 04/04/78
*          DATA SET SR305000   AT LEVEL 036 AS OF 04/03/78
*          DATA SET SR305000   AT LEVEL 032 AS OF 03/30/78
         TITLE 'SR305000 - XCOM TSO DRIVER'
*
*              AUTHOR.  DON HIGGINS.
*              DATE.    02/28/78.
*              REMARKS. TSO DRIVER FOR CROSS MEMORY COMMUNICATIONS.
*
*              REFERENCES.
*                1.  OS/VS2 TMP/CP QUIDE GC28-0648
*                2.  FPC XCOM SVC SR301000
*                3.  FPC XCOM INTERFACE SR302000-SR303000
*
*
*
*              PARM.    4 BYTE NAME OF PATH FOR XCPUT.
*
*              NOTES.
*                1.  THE USER OF THIS DRIVER MUST BE AUTHORIZED
*                    TO USE THE PATH SPECIFIED OR THE DRIVER WILL
*                    TERMINATE.
*
*                2.  THIS DRIVER DOES THE FOLLOWING.
*                    A.  DEFINE PUT PATH USING NAME FROM PARM.
*                    B.  DEFINE GET PATH USING TSO ID XNNN.
*                    C.  REPEAT GETPATH AND PUTPATH ROUTINES
*                        UNTIL END IS ENTERED IN COMMAND MODE.
*                        1.  GETPATH ROUTINE
*                            A. GET MESSAGE FROM PATH AND PRINT IT.
*                            B. REPEAT A UNTIL NO MESSAGES LEFT.
*                            C. IF IN OUTPUT MODE, WAIT FOR MORE.
*                            D. IF IN INPUT MODE OR ATTN KEY IS HIT,
*                               EXIT TO PUTPATH ROUTINE.
*                        2.  PUTPATH ROUTINE
*                            A. GET A MESSAGE FROM TSO TERMINAL AND
*                               PUT IT TO PATH OR EXECUTE COMMAND.
*                            B. GET ANY MESSAGES FROM PATH AND PRINT
*                               THEM.
*                            C. IF IN INPUT MODE OR COMMAND MODE GO
*                               BACK TO A.
*                            D. IF IN OUTPUT MODE, EXIT TO GETPATH.
*                            E. IF ATTN KEY IS HIT WHILE WAITING FOR
*                               INPUT FROM TERMINAL IN STEP A, ENTER
*                               COMMAND MODE. IN COMMAND MODE, THE
*                               FOLLOWING COMMANDS ARE ACCEPTED.
*                               1.  END (E)   - END XCOM SESSION
*                               2.  HELP (H)  - LIST HELP INFO.
*                               3.  INPUT (I) - INPUT MESSAGE MODE
*                               4.  LOG (L)   - LOG ALL TSO INPUT
*                                               AND OUTPUT ON XCOMLOG
*                               5.  NOLOG (N) - TURN OFF LOG
*                               6.  OUTPUT (O)- OUTPUT MESSAGE MODE
*                               7.  PURGE (P) - PURGE PATH MESSAGES
*                                     (GET ALL CURRENT MESSAGES OFF
*                                      PATH AND CHUCK THEM)
*                               8.  S XXXX    - SWITCH TO PATH XXXX
*                               9.  TIME (T)  - TIME AND DATE
*                              10.  XCOM (X)  - LIST SYSTEM XCOM INFO
*
*
*
*              REFERENCES. SEE SR301000-SR304000.
*
*
*
         TITLE 'LOCAL MACROS'
         MACRO
         WRITE &MSG
         LA    R0,80
         AIF   ('&MSG'(1,1) EQ '''').LIT
         LA    R1,&MSG
         AGO   .PUT
.LIT     ANOP
         LA    R1,=CL80&MSG
.PUT     ANOP
         PM    PUT
         MEND
         TITLE 'MAINLINE'
SR305000 SUBENTRY BASES=(R13,R12)
         PM    START
         IF    (CLI,ABORT,TRUE,NE)
               PM    LOOP
         FI
         PM    STOP
         SUBEXIT
         TITLE 'START - INITIATE PROCESSING'
START    PENTRY
         L     R1,0(R1)
         IF    (CLC,0(2,R1),=H'4',NE)
               MVI  ABORT,TRUE
               WRITE 'XCOM INVALID PATH PARAMETER'
               PEXIT
         FI
         MVC   PATH,2(R1)
         L     R1,PSAAOLD
         L     R1,ASCBJBNS(R1)
         IF    (CLC,0(2,R1),=C'OT',EQ)
               MVC  XNNN+1(3),2(R1)
               MVC  JOB,0(R1)
         ELSE
               WRITE 'XCOM INVALID TSO USERID'
               MVI  ABORT,TRUE
               PEXIT
         FI
         PACK  PWORK,XNNN+1(3)
         CVB   R0,PWORK
         ST    R0,USERID
         PM    CHKUSER
         IF    (CLI,ABORT,TRUE,EQ)
               PEXIT
         FI
         SCALL SROSDATE,(GDATE)
         DTIME TIMEDATE
         WRITE TITLE1
         WRITE TITLE2
         WRITE TITLE3
         STAX  STAXRTN
         SCALL XCTERM,(XNNN)
         SCALL XCPATH,(XNNN,XNNNECB)
         PEXIT
         TITLE 'STOP - TERMINATE PROCESSING'
STOP     PENTRY
         SCALL XCTERM,(XNNN)
         STAX
         IF    (CLI,LOG,TRUE,EQ)
               CLOSE (XCOMLOG)
               MVI   LOG,FALSE
         FI
         PEXIT
         TITLE 'CHKUSER - VALIDATE USER FOR SPECIFIED PATH'
CHKUSER  PENTRY
         SCALL DCALL,(UIFIP,JOB,USERID,PGM,UISTAT)
         IF    (CLC,UISTAT,=F'0',NE)
               WRITE 'XCOM - USER NOT AUTHORIZED FOR PATH'
               MVI  ABORT,TRUE
         FI
         PEXIT
         TITLE 'LOOP - GET AND PUT MESSAGES UNITL END ENTERED'
LOOP     PENTRY
         PM    PUTPATH
         DO    WHILE,(CLI,ABORT,TRUE,NE)
               PM   GETPATH
               PM   PUTPATH
         OD
         PEXIT
         TITLE 'GETPATH - GET MESSAGES FROM PATH AND PRINT'
GETPATH  PENTRY
         MVI   ATTNECB,0
         DO    UNTIL,(TM,ATTNECB,X'40',O)
               PM   FLUSH
               WAIT 1,ECBLIST=ECBLIST
         OD
         PEXIT
         TITLE 'PUTPATH - GET MSGS FROM TSO TERMINAL AND PUT TO PATH'
PUTPATH  PENTRY
         DO    UNTIL,(CLI,MODE,OUTPUT,EQ),OR,(CLI,ABORT,TRUE,EQ)
               PM   FLUSH
               MVI  ATTNECB,0
               PM   GET
               IF   (TM,ATTNECB,X'40',O)
                    MVI  ATTNECB,0
                    MVI  MODE,COMMAND
                    STATUS STOP
                    WRITE 'XCOM COMMAND MODE'
               ELSEIF (CLI,MODE,COMMAND,NE)
                    IF   (CLC,MSG(80),=CL80' ',NE)
                         MVC  TERM(4),XNNN
                         SCALL XCPUT,(PATH,TERM,MSG,LMSG)
                         IF   (CLC,LMSG,=F'0',EQ)
                              MVI  MODE,COMMAND
                              WRITE 'XCOM PUT FAILED'
                              WRITE 'XCOM COMMAND MODE'
                         ELSE
                              PM   FLUSH
                              WAIT 1,ECBLIST=ECBLIST
                         FI
                    FI
               ELSE
                    PM   COMMANDS
               FI
         OD
         PEXIT
         TITLE 'COMMANDS - EXECUTE COMMAND'
COMMANDS PENTRY
         DOCASE     MSG
               CASE C'E' END
                    MVI  ABORT,TRUE
                    WRITE 'XCOM ENDED'
               ESAC
               CASE C'H' HELP
                    PM   HELPINFO
               ESAC
               CASE C'I' INPUT
                    MVI  MODE,INPUT
                    WRITE 'XCOM INPUT MODE'
               ESAC
               CASE C'L' LOGON
                    IF   (CLI,LOG,TRUE,NE)
                         FINDDD =CL8'XCOMLOG'
                         IF   (LTR,R1,R1,NZ)
                              WRITE 'XCOM LOG ON'
                              OPEN  (XCOMLOG,(OUTPUT))
                              MVI   LOG,TRUE
                         ELSE
                              WRITE 'XCOM LOG FILE NOT FOUND'
                         FI
                    ELSE
                         WRITE 'XCOM LOG ALREADY ON'
                    FI
               ESAC
               CASE C'N' NOLOG
                    IF   (CLI,LOG,TRUE,EQ)
                         MVI  LOG,FALSE
                         CLOSE (XCOMLOG)
                         WRITE 'XCOM LOG OFF'
                    ELSE
                         WRITE 'XCOM LOG ALREADY OFF'
                    FI
               ESAC
               CASE C'O' OUTPUT
                    MVI  MODE,OUTPUT
                    WRITE 'XCOM OUTPUT MODE'
               ESAC
               ESAC
               CASE C'P' PURGE
                    WRITE 'XCOM PATH PURGE STARTED'
                    MVI  PURGE,TRUE
                    PM   FLUSH
                    MVI  PURGE,FALSE
                    WRITE 'XCOM PATH PURGED'
                    PM   XCOMINFO
               ESAC
               CASE C'S' SWITCH PATH
                    MVC  PATH,MSG+2
                    PM   CHKUSER
                    IF   (CLI,ABORT,TRUE,NE)
                         WRITE 'XCOM - PATH SWITCH SUCCESSFUL'
                         PM  XCOMINFO
                    FI
               ESAC
               CASE C'T' TIME AND DATE
                    DTIME TIMEDATE
                    SCALL SROSDATE,(GDATE)
                    WRITE TITLE2
               ESAC
               CASE C'X' DISPLAY XCOM STATUS INFO
                    PM   XCOMINFO
               ESAC
               CASE ELSE
                    WRITE 'XCOM - INVALID COMMAND'
               ESAC
         ESACOD
         PEXIT
         TITLE 'HELPINFO - LIST HELP INFORMATION'
HELPINFO PENTRY
         WRITE 'XCOM TSO DRIVER HELP INFORMATION'
         WRITE 'XCOM HAS THREE MODES OF OPERATION'
         WRITE 'INPUT   MODE - WAIT FOR MESSAGES FOR PATH FROM TSO'
         WRITE 'OUTPUT  MODE - WAIT FOR MESSAGES FOR TSO  FROM PATH'
         WRITE 'COMMAND MODE - WAIT FOR XCOM COMMANDS FROM TSO'
         WRITE 'ATTENTION KEY SWITCHES TO COMMAND MODE'
         WRITE 'COMMANDS ARE AS FOLLOWS'
         WRITE 'E - END XCOM SESSION'
         WRITE 'H - LIST HELP INFORMATION'
         WRITE 'I - SWITCH TO INPUT MODE'
         WRITE 'L - LOG MESSAGES TO XCOMLOG FILE'
         WRITE 'N - NO LOG'
         WRITE 'O - SWITCH TO OUTPUT MODE'
         WRITE 'P - PURGE MESSAGES FROM PATH'
         WRITE 'S XXXX - SWITCH TO PATH XXXX'
         WRITE 'T - TIME AND DATE'
         WRITE 'X - LIST XCOM SYSTEM STATUS INFORMATION'
         PEXIT
         TITLE 'XCOMINFO - LIST XCOM SYSTEM STATUS INFORMATION'
XCOMINFO PENTRY
*
*  SEE SR301000 - SR305000, CICS, AND GU640001 FOR MORE
*  INFORMATION ON XCOM.
*
         L     R2,16
         L     R2,CVTUSER(R2)
         IF    (LTR,R2,R2,Z)
               WRITE 'XCOM - NO USER CVT DEFINED'
               PEXIT
         FI
         L     R2,UCVTXCVT(R2)
         IF    (LTR,R2,R2,Z)
               WRITE 'XCOM - NO XCVT DEFINED'
               PEXIT
         FI
         L     R0,VTRCUR(R2)
         CVD   R0,PWORK
         EDIT  TO=DRCUR,FROM=PWORK+5,MASK=' ZZ,Z99'
         L     R0,VTRMAX(R2)
         CVD   R0,PWORK
         EDIT  TO=DRMAX,FROM=PWORK+5,MASK=' ZZ,Z99'
         L     R0,VTRTOT(R2)
         CVD   R0,PWORK
         EDIT  TO=DRTOT,FROM=PWORK+5,MASK=' ZZ,Z99'
         WRITE DXCOM1
         WRITE ' '
         L     R3,VTPCBH(R2)
         IF    (LTR,R3,R3,Z)
               WRITE 'XCOM - NO PATHS DEFINED AT THIS TIME'
         ELSE
               DO    WHILE,(LTR,R3,R3,NZ)
                     MVC  DPATH,PCBPID(R3)
                     MVC  DPATHJOB,PCBJOBN(R3)
                     WRITE DXCOM2
                     L    R3,PCBNEXT(R3)
               OD
         FI
         WRITE ' '
         L     R3,VTMHBH(R2)
         IF    (LTR,R3,R3,Z)
               WRITE 'XCOM - NO MESSAGES QUEUED AT THIS TIME'
         ELSE
               DO    WHILE,(LTR,R3,R3,NZ)
                     MVC  DPID,MHBPID(R3)
                     IF   (CLC,MHBTID(4,R3),=4X'00',NE)
                          MVC  DTID,MHBTID(R3)
                     ELSE
                          MVC  DTID,=CL4'NONE'
                     FI
                     LH   R0,MHBME#(R3)
                     CVD  R0,PWORK
                     EDIT TO=DME#,FROM=PWORK+5,MASK=' ZZ,Z99'
                     WRITE DXCOM3
                     L    R3,MHBNEXT(R3)
               OD
         FI
         PEXIT
         TITLE 'FLUSH - GET ALL MSGS CURRENTLY QUEUED ON PATH'
FLUSH    PENTRY
         MVC   LMSG,=F'2000'
         MVI   XNNNECB,0
         SCALL XCGET,(XNNN,TERM,MSG,LMSG)
         DO    WHILE,(CLC,LMSG,=F'0',NE),AND,(CLI,ABORT,TRUE,NE)
               IF   (CLI,PURGE,TRUE,NE)
                    PM   LCRPUT
               FI
               IF   (TM,ATTNECB,X'40',O)
                    PEXIT
               FI
               MVI   XNNNECB,0
               SCALL XCGET,(XNNN,TERM,MSG,LMSG)
         OD
         PEXIT
         TITLE 'LCRPUT - PUT MCS, TSO, TEST, AND LOG MSGS WITH CRS'
LCRPUT   PENTRY
         MVC   LCRLNG,LMSG
         MVC   LCRHOLD,LMSG
         LA    R4,MSG
         ST    R4,LCRPTR
         PM    GETLCR
         DO    WHILE,(CLC,LCRLNG,=F'0',NE),AND,(TM,ATTNECB,X'40',Z)
               IF   (CLC,LCRAREA,=CL80' ',NE)
                    LR   R1,R4
                    L    R0,0(R5)
                    PM   PUT
               FI
               PM   GETLCR
         OD
         PEXIT
         TITLE 'GETLCR - GET LOGICAL LINE WITH CARRIAGE RETURN'
GETLCR   PENTRY
         L     R4,LCRPTR
         L     R5,LCRHOLD
         LM    R14,R15,=A(LCRAREA,L'LCRAREA)
         LR    R0,R5          SAVE REMAINING DATA COUNT
         MVCL  R14,R4         MOVE UP TO A FULL LINE OF DATA
         SR    R0,R5          R0=BYTES MOVED
         ZR    R1
         IF    (TRT,LCRAREA,FINDCR,NE)
               LR   R14,R1    R14=A(CR IN LCR AREA)
               S    R1,=A(LCRAREA-1)    BYTES INCLUDING CR
               SR   R0,R1               BYTES TO HOLD UP
               SR   R4,R0               BACKUP POINTER
               AR   R5,R0               ADD BACK DATA COUNT
               SI   R1,1                BYTES IN LINE
               IF   (LTR,R1,R1,NP)
                    LI   R1,1
               FI
         ELSE
               LR   R1,R0
         FI
         ST    R1,LCRLNG
         ST    R4,LCRPTR
         ST    R5,LCRHOLD
         LA    R4,LCRAREA
         LA    R5,LCRLNG
         TR    LCRAREA,PRINTTAB
         PEXIT
         TITLE 'GET - GET NEXT MSG FROM TSO TERMINAL'
GET      PENTRY
         WRITE '+'
         LA   R1,MSG
         ICM  R1,8,=X'80'
         LA   R0,80
         ST   R0,LMSG
         MVC  MSG(80),=CL80' '
         TGET (1),(0),R
         OC   MSG(80),=CL80' '
         IF   (CLI,LOG,TRUE,EQ),AND,(TM,ATTNECB,X'40',Z)
              PUT  XCOMLOG,MSG
         FI
         PEXIT
         TITLE 'PUT - PUT MESSSAGE TO TSO TERMINAL'
PUT      PENTRY
         STM   R0,R1,PUTSAVE
         LR    R14,R1
         LR    R15,R0
         ICM   R15,8,=C' '
         LA    R0,LINE
         LA    R1,80
         MVCL  R0,R14
         LM    R0,R1,PUTSAVE
         ICM  R1,8,=X'00'
         TPUT (1),(0),R
         IF   (CLI,LOG,TRUE,EQ)
              PUT  XCOMLOG,LINE
         FI
         PEXIT
         TITLE 'STAXRTN - POST ATTNECB'
STAXRTN  TAG
         DROP
         USING STAXRTN,R15
         STM   R0,R15,STAXSAVE
         LR    R2,R15
         DROP  R15
         USING STAXRTN,R2
         IF    (TM,ATTNECB,X'40',Z)
               POST  ATTNECB
         ELSE
               ABEND 122,DUMP
         FI
         LM    R0,R15,STAXSAVE
         BR    R14
         DROP
         TITLE 'COMMON DATA'
         EQUAL
PUTSAVE  DC    2F'0'
STAXSAVE DC    16F'0'
PWORK    DC    D'0'
ABORT    LOGICAL FALSE,(TRUE,FALSE)
PURGE    LOGICAL FALSE,(TRUE,FALSE)
MODE     LOGICAL INPUT,(INPUT,OUTPUT,COMMAND)
ATTNECB  DC    F'0'
PSAAOLD  EQU   X'224' FE 535
ASCBJBNS EQU   X'B0'  FE 72
XNNNECB  DC    F'0'
XNNN     DC    CL4'XNNN'
ECBLIST  DC    A(ATTNECB),X'80',AL3(XNNNECB)
TERM     DC    CL8' '
LMSG     DC    F'0'
TITLE1   DS    0CL80
         DC    C'XCOM TSO DRIVER SR305000 V'
         DC    CL8'&SYSDATE'
         FILL  TITLE1
TITLE2   DS    0CL80
         DC    C'TIME IS '
TIMEDATE DC    CL22' ',C' '
GDATE    DC    CL8' '
         FILL  TITLE2
TITLE3   DS    0CL80
         DC    C'FOR HELP HIT ATTENTION AND ENTER HELP'
         FILL  TITLE3
*
*        DATA FOR XCOM DISPLAY
*
CVTUSER  EQU   X'CC'     USER CVT
UCVTXCVT EQU   X'84'     XCOM CVT
VTPCBH   EQU   X'0C'     XCVT PCB CHAIN
VTMHBH   EQU   X'10'     XCVT MHB CHAIN
VTRCUR   EQU   X'40'     XCVT CURRENT MESSAGES
VTRMAX   EQU   X'44'     XCVT MAXIMUM MESSAGES
VTRTOT   EQU   X'48'     XCVT MESSAGES SINCE IPL
PCBNEXT  EQU   X'00'     NEXT PCB
PCBPID   EQU   X'04'     PATH NAME
PCBJOBN  EQU   X'14'     NAME OF JOB THAT CREATED PATH
MHBNEXT  EQU   X'00'     NEXT MHB
MHBPID   EQU   X'04'     DESTINATION PATH
MHBTID   EQU   X'08'     DESITNATION TERM
MHBME#   EQU   X'0E'     NUMBER OF MSGS QUEUED TO THIS MHB
DXCOM1   DS    0CL80
         DC    C'XCOM TOTALS - RCUR='
DRCUR    DC    CL7' ',C'  RMAX='
DRMAX    DC    CL7' ',C'  RTOT='
DRTOT    DC    CL7' '
         FILL  DXCOM1
DXCOM2   DS    0CL80
         DC    C'XCOM  PATHS - PID='
DPATH    DC    CL4' ',C' '
DPATHJOB DC    CL8' '
         FILL  DXCOM2
DXCOM3   DS    0CL80
         DC    C'XCOM   MSGS - PID='
DPID     DC    CL4' ',C'  TID='
DTID     DC    CL4' ',C'  ME#='
DME#     DC    CL7' '
         FILL  DXCOM3
LINE     DC    CL80' '
LCRPTR   DC    A(0)
LCRHOLD  DC    F'0'
LCRLNG   DC    F'0'
LCRAREA  DC    CL80' '
FINDCR   TRTTAB SCAN,FIND=X'15'
PRINTTAB TRTTAB PRINT
LOG      LOGICAL FALSE,(TRUE,FALSE)
XCOMLOG  DCB   DSORG=PS,MACRF=PM,RECFM=FB,LRECL=80,DDNAME=XCOMLOG
UIFIP    DC    CL8'UI012000'
JOB      DC    CL8' '
PGM      DC    CL4'XCOM'
PATH     DC    CL4' '
UISTAT   DC    F'0'
USERID   DC    F'0'
MSG      DS    XL2000
         END
